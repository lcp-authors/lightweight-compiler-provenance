
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//gcov-tool_gcc_-O3:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000402450 <.init>:
  402450:	stp	x29, x30, [sp, #-16]!
  402454:	mov	x29, sp
  402458:	bl	403474 <nftw@plt+0x8f4>
  40245c:	ldp	x29, x30, [sp], #16
  402460:	ret

Disassembly of section .plt:

0000000000402470 <memcpy@plt-0x20>:
  402470:	stp	x16, x30, [sp, #-16]!
  402474:	adrp	x16, 4a3000 <_obstack_memory_used@@Base+0x41bb8>
  402478:	ldr	x17, [x16, #4088]
  40247c:	add	x16, x16, #0xff8
  402480:	br	x17
  402484:	nop
  402488:	nop
  40248c:	nop

0000000000402490 <memcpy@plt>:
  402490:	adrp	x16, 4a4000 <memcpy@GLIBC_2.17>
  402494:	ldr	x17, [x16]
  402498:	add	x16, x16, #0x0
  40249c:	br	x17

00000000004024a0 <memmove@plt>:
  4024a0:	adrp	x16, 4a4000 <memcpy@GLIBC_2.17>
  4024a4:	ldr	x17, [x16, #8]
  4024a8:	add	x16, x16, #0x8
  4024ac:	br	x17

00000000004024b0 <ngettext@plt>:
  4024b0:	adrp	x16, 4a4000 <memcpy@GLIBC_2.17>
  4024b4:	ldr	x17, [x16, #16]
  4024b8:	add	x16, x16, #0x10
  4024bc:	br	x17

00000000004024c0 <getcwd@plt>:
  4024c0:	adrp	x16, 4a4000 <memcpy@GLIBC_2.17>
  4024c4:	ldr	x17, [x16, #24]
  4024c8:	add	x16, x16, #0x18
  4024cc:	br	x17

00000000004024d0 <fwrite_unlocked@plt>:
  4024d0:	adrp	x16, 4a4000 <memcpy@GLIBC_2.17>
  4024d4:	ldr	x17, [x16, #32]
  4024d8:	add	x16, x16, #0x20
  4024dc:	br	x17

00000000004024e0 <strtoul@plt>:
  4024e0:	adrp	x16, 4a4000 <memcpy@GLIBC_2.17>
  4024e4:	ldr	x17, [x16, #40]
  4024e8:	add	x16, x16, #0x28
  4024ec:	br	x17

00000000004024f0 <strlen@plt>:
  4024f0:	adrp	x16, 4a4000 <memcpy@GLIBC_2.17>
  4024f4:	ldr	x17, [x16, #48]
  4024f8:	add	x16, x16, #0x30
  4024fc:	br	x17

0000000000402500 <fputs@plt>:
  402500:	adrp	x16, 4a4000 <memcpy@GLIBC_2.17>
  402504:	ldr	x17, [x16, #56]
  402508:	add	x16, x16, #0x38
  40250c:	br	x17

0000000000402510 <mbstowcs@plt>:
  402510:	adrp	x16, 4a4000 <memcpy@GLIBC_2.17>
  402514:	ldr	x17, [x16, #64]
  402518:	add	x16, x16, #0x40
  40251c:	br	x17

0000000000402520 <exit@plt>:
  402520:	adrp	x16, 4a4000 <memcpy@GLIBC_2.17>
  402524:	ldr	x17, [x16, #72]
  402528:	add	x16, x16, #0x48
  40252c:	br	x17

0000000000402530 <sbrk@plt>:
  402530:	adrp	x16, 4a4000 <memcpy@GLIBC_2.17>
  402534:	ldr	x17, [x16, #80]
  402538:	add	x16, x16, #0x50
  40253c:	br	x17

0000000000402540 <strnlen@plt>:
  402540:	adrp	x16, 4a4000 <memcpy@GLIBC_2.17>
  402544:	ldr	x17, [x16, #88]
  402548:	add	x16, x16, #0x58
  40254c:	br	x17

0000000000402550 <strtod@plt>:
  402550:	adrp	x16, 4a4000 <memcpy@GLIBC_2.17>
  402554:	ldr	x17, [x16, #96]
  402558:	add	x16, x16, #0x60
  40255c:	br	x17

0000000000402560 <iconv_close@plt>:
  402560:	adrp	x16, 4a4000 <memcpy@GLIBC_2.17>
  402564:	ldr	x17, [x16, #104]
  402568:	add	x16, x16, #0x68
  40256c:	br	x17

0000000000402570 <setbuf@plt>:
  402570:	adrp	x16, 4a4000 <memcpy@GLIBC_2.17>
  402574:	ldr	x17, [x16, #112]
  402578:	add	x16, x16, #0x70
  40257c:	br	x17

0000000000402580 <remove@plt>:
  402580:	adrp	x16, 4a4000 <memcpy@GLIBC_2.17>
  402584:	ldr	x17, [x16, #120]
  402588:	add	x16, x16, #0x78
  40258c:	br	x17

0000000000402590 <readlink@plt>:
  402590:	adrp	x16, 4a4000 <memcpy@GLIBC_2.17>
  402594:	ldr	x17, [x16, #128]
  402598:	add	x16, x16, #0x80
  40259c:	br	x17

00000000004025a0 <ftell@plt>:
  4025a0:	adrp	x16, 4a4000 <memcpy@GLIBC_2.17>
  4025a4:	ldr	x17, [x16, #136]
  4025a8:	add	x16, x16, #0x88
  4025ac:	br	x17

00000000004025b0 <sprintf@plt>:
  4025b0:	adrp	x16, 4a4000 <memcpy@GLIBC_2.17>
  4025b4:	ldr	x17, [x16, #144]
  4025b8:	add	x16, x16, #0x90
  4025bc:	br	x17

00000000004025c0 <opendir@plt>:
  4025c0:	adrp	x16, 4a4000 <memcpy@GLIBC_2.17>
  4025c4:	ldr	x17, [x16, #152]
  4025c8:	add	x16, x16, #0x98
  4025cc:	br	x17

00000000004025d0 <__cxa_atexit@plt>:
  4025d0:	adrp	x16, 4a4000 <memcpy@GLIBC_2.17>
  4025d4:	ldr	x17, [x16, #160]
  4025d8:	add	x16, x16, #0xa0
  4025dc:	br	x17

00000000004025e0 <fputc@plt>:
  4025e0:	adrp	x16, 4a4000 <memcpy@GLIBC_2.17>
  4025e4:	ldr	x17, [x16, #168]
  4025e8:	add	x16, x16, #0xa8
  4025ec:	br	x17

00000000004025f0 <qsort@plt>:
  4025f0:	adrp	x16, 4a4000 <memcpy@GLIBC_2.17>
  4025f4:	ldr	x17, [x16, #176]
  4025f8:	add	x16, x16, #0xb0
  4025fc:	br	x17

0000000000402600 <snprintf@plt>:
  402600:	adrp	x16, 4a4000 <memcpy@GLIBC_2.17>
  402604:	ldr	x17, [x16, #184]
  402608:	add	x16, x16, #0xb8
  40260c:	br	x17

0000000000402610 <localtime@plt>:
  402610:	adrp	x16, 4a4000 <memcpy@GLIBC_2.17>
  402614:	ldr	x17, [x16, #192]
  402618:	add	x16, x16, #0xc0
  40261c:	br	x17

0000000000402620 <fclose@plt>:
  402620:	adrp	x16, 4a4000 <memcpy@GLIBC_2.17>
  402624:	ldr	x17, [x16, #200]
  402628:	add	x16, x16, #0xc8
  40262c:	br	x17

0000000000402630 <getpid@plt>:
  402630:	adrp	x16, 4a4000 <memcpy@GLIBC_2.17>
  402634:	ldr	x17, [x16, #208]
  402638:	add	x16, x16, #0xd0
  40263c:	br	x17

0000000000402640 <nl_langinfo@plt>:
  402640:	adrp	x16, 4a4000 <memcpy@GLIBC_2.17>
  402644:	ldr	x17, [x16, #216]
  402648:	add	x16, x16, #0xd8
  40264c:	br	x17

0000000000402650 <fopen@plt>:
  402650:	adrp	x16, 4a4000 <memcpy@GLIBC_2.17>
  402654:	ldr	x17, [x16, #224]
  402658:	add	x16, x16, #0xe0
  40265c:	br	x17

0000000000402660 <time@plt>:
  402660:	adrp	x16, 4a4000 <memcpy@GLIBC_2.17>
  402664:	ldr	x17, [x16, #232]
  402668:	add	x16, x16, #0xe8
  40266c:	br	x17

0000000000402670 <malloc@plt>:
  402670:	adrp	x16, 4a4000 <memcpy@GLIBC_2.17>
  402674:	ldr	x17, [x16, #240]
  402678:	add	x16, x16, #0xf0
  40267c:	br	x17

0000000000402680 <open@plt>:
  402680:	adrp	x16, 4a4000 <memcpy@GLIBC_2.17>
  402684:	ldr	x17, [x16, #248]
  402688:	add	x16, x16, #0xf8
  40268c:	br	x17

0000000000402690 <wcswidth@plt>:
  402690:	adrp	x16, 4a4000 <memcpy@GLIBC_2.17>
  402694:	ldr	x17, [x16, #256]
  402698:	add	x16, x16, #0x100
  40269c:	br	x17

00000000004026a0 <strncmp@plt>:
  4026a0:	adrp	x16, 4a4000 <memcpy@GLIBC_2.17>
  4026a4:	ldr	x17, [x16, #264]
  4026a8:	add	x16, x16, #0x108
  4026ac:	br	x17

00000000004026b0 <bindtextdomain@plt>:
  4026b0:	adrp	x16, 4a4000 <memcpy@GLIBC_2.17>
  4026b4:	ldr	x17, [x16, #272]
  4026b8:	add	x16, x16, #0x110
  4026bc:	br	x17

00000000004026c0 <fileno_unlocked@plt>:
  4026c0:	adrp	x16, 4a4000 <memcpy@GLIBC_2.17>
  4026c4:	ldr	x17, [x16, #280]
  4026c8:	add	x16, x16, #0x118
  4026cc:	br	x17

00000000004026d0 <__libc_start_main@plt>:
  4026d0:	adrp	x16, 4a4000 <memcpy@GLIBC_2.17>
  4026d4:	ldr	x17, [x16, #288]
  4026d8:	add	x16, x16, #0x120
  4026dc:	br	x17

00000000004026e0 <strcat@plt>:
  4026e0:	adrp	x16, 4a4000 <memcpy@GLIBC_2.17>
  4026e4:	ldr	x17, [x16, #296]
  4026e8:	add	x16, x16, #0x128
  4026ec:	br	x17

00000000004026f0 <memset@plt>:
  4026f0:	adrp	x16, 4a4000 <memcpy@GLIBC_2.17>
  4026f4:	ldr	x17, [x16, #304]
  4026f8:	add	x16, x16, #0x130
  4026fc:	br	x17

0000000000402700 <fdopen@plt>:
  402700:	adrp	x16, 4a4000 <memcpy@GLIBC_2.17>
  402704:	ldr	x17, [x16, #312]
  402708:	add	x16, x16, #0x138
  40270c:	br	x17

0000000000402710 <calloc@plt>:
  402710:	adrp	x16, 4a4000 <memcpy@GLIBC_2.17>
  402714:	ldr	x17, [x16, #320]
  402718:	add	x16, x16, #0x140
  40271c:	br	x17

0000000000402720 <strcasecmp@plt>:
  402720:	adrp	x16, 4a4000 <memcpy@GLIBC_2.17>
  402724:	ldr	x17, [x16, #328]
  402728:	add	x16, x16, #0x148
  40272c:	br	x17

0000000000402730 <gmtime@plt>:
  402730:	adrp	x16, 4a4000 <memcpy@GLIBC_2.17>
  402734:	ldr	x17, [x16, #336]
  402738:	add	x16, x16, #0x150
  40273c:	br	x17

0000000000402740 <readdir@plt>:
  402740:	adrp	x16, 4a4000 <memcpy@GLIBC_2.17>
  402744:	ldr	x17, [x16, #344]
  402748:	add	x16, x16, #0x158
  40274c:	br	x17

0000000000402750 <realloc@plt>:
  402750:	adrp	x16, 4a4000 <memcpy@GLIBC_2.17>
  402754:	ldr	x17, [x16, #352]
  402758:	add	x16, x16, #0x160
  40275c:	br	x17

0000000000402760 <getpagesize@plt>:
  402760:	adrp	x16, 4a4000 <memcpy@GLIBC_2.17>
  402764:	ldr	x17, [x16, #360]
  402768:	add	x16, x16, #0x168
  40276c:	br	x17

0000000000402770 <strdup@plt>:
  402770:	adrp	x16, 4a4000 <memcpy@GLIBC_2.17>
  402774:	ldr	x17, [x16, #368]
  402778:	add	x16, x16, #0x170
  40277c:	br	x17

0000000000402780 <closedir@plt>:
  402780:	adrp	x16, 4a4000 <memcpy@GLIBC_2.17>
  402784:	ldr	x17, [x16, #376]
  402788:	add	x16, x16, #0x178
  40278c:	br	x17

0000000000402790 <strerror@plt>:
  402790:	adrp	x16, 4a4000 <memcpy@GLIBC_2.17>
  402794:	ldr	x17, [x16, #384]
  402798:	add	x16, x16, #0x180
  40279c:	br	x17

00000000004027a0 <close@plt>:
  4027a0:	adrp	x16, 4a4000 <memcpy@GLIBC_2.17>
  4027a4:	ldr	x17, [x16, #392]
  4027a8:	add	x16, x16, #0x188
  4027ac:	br	x17

00000000004027b0 <strrchr@plt>:
  4027b0:	adrp	x16, 4a4000 <memcpy@GLIBC_2.17>
  4027b4:	ldr	x17, [x16, #400]
  4027b8:	add	x16, x16, #0x190
  4027bc:	br	x17

00000000004027c0 <__gmon_start__@plt>:
  4027c0:	adrp	x16, 4a4000 <memcpy@GLIBC_2.17>
  4027c4:	ldr	x17, [x16, #408]
  4027c8:	add	x16, x16, #0x198
  4027cc:	br	x17

00000000004027d0 <write@plt>:
  4027d0:	adrp	x16, 4a4000 <memcpy@GLIBC_2.17>
  4027d4:	ldr	x17, [x16, #416]
  4027d8:	add	x16, x16, #0x1a0
  4027dc:	br	x17

00000000004027e0 <fseek@plt>:
  4027e0:	adrp	x16, 4a4000 <memcpy@GLIBC_2.17>
  4027e4:	ldr	x17, [x16, #424]
  4027e8:	add	x16, x16, #0x1a8
  4027ec:	br	x17

00000000004027f0 <abort@plt>:
  4027f0:	adrp	x16, 4a4000 <memcpy@GLIBC_2.17>
  4027f4:	ldr	x17, [x16, #432]
  4027f8:	add	x16, x16, #0x1b0
  4027fc:	br	x17

0000000000402800 <__overflow@plt>:
  402800:	adrp	x16, 4a4000 <memcpy@GLIBC_2.17>
  402804:	ldr	x17, [x16, #440]
  402808:	add	x16, x16, #0x1b8
  40280c:	br	x17

0000000000402810 <access@plt>:
  402810:	adrp	x16, 4a4000 <memcpy@GLIBC_2.17>
  402814:	ldr	x17, [x16, #448]
  402818:	add	x16, x16, #0x1c0
  40281c:	br	x17

0000000000402820 <feof@plt>:
  402820:	adrp	x16, 4a4000 <memcpy@GLIBC_2.17>
  402824:	ldr	x17, [x16, #456]
  402828:	add	x16, x16, #0x1c8
  40282c:	br	x17

0000000000402830 <puts@plt>:
  402830:	adrp	x16, 4a4000 <memcpy@GLIBC_2.17>
  402834:	ldr	x17, [x16, #464]
  402838:	add	x16, x16, #0x1d0
  40283c:	br	x17

0000000000402840 <fread_unlocked@plt>:
  402840:	adrp	x16, 4a4000 <memcpy@GLIBC_2.17>
  402844:	ldr	x17, [x16, #472]
  402848:	add	x16, x16, #0x1d8
  40284c:	br	x17

0000000000402850 <memcmp@plt>:
  402850:	adrp	x16, 4a4000 <memcpy@GLIBC_2.17>
  402854:	ldr	x17, [x16, #480]
  402858:	add	x16, x16, #0x1e0
  40285c:	br	x17

0000000000402860 <pthread_once@plt>:
  402860:	adrp	x16, 4a4000 <memcpy@GLIBC_2.17>
  402864:	ldr	x17, [x16, #488]
  402868:	add	x16, x16, #0x1e8
  40286c:	br	x17

0000000000402870 <textdomain@plt>:
  402870:	adrp	x16, 4a4000 <memcpy@GLIBC_2.17>
  402874:	ldr	x17, [x16, #496]
  402878:	add	x16, x16, #0x1f0
  40287c:	br	x17

0000000000402880 <getopt_long@plt>:
  402880:	adrp	x16, 4a4000 <memcpy@GLIBC_2.17>
  402884:	ldr	x17, [x16, #504]
  402888:	add	x16, x16, #0x1f8
  40288c:	br	x17

0000000000402890 <strcmp@plt>:
  402890:	adrp	x16, 4a4000 <memcpy@GLIBC_2.17>
  402894:	ldr	x17, [x16, #512]
  402898:	add	x16, x16, #0x200
  40289c:	br	x17

00000000004028a0 <iconv@plt>:
  4028a0:	adrp	x16, 4a4000 <memcpy@GLIBC_2.17>
  4028a4:	ldr	x17, [x16, #520]
  4028a8:	add	x16, x16, #0x208
  4028ac:	br	x17

00000000004028b0 <mmap@plt>:
  4028b0:	adrp	x16, 4a4000 <memcpy@GLIBC_2.17>
  4028b4:	ldr	x17, [x16, #528]
  4028b8:	add	x16, x16, #0x210
  4028bc:	br	x17

00000000004028c0 <strtol@plt>:
  4028c0:	adrp	x16, 4a4000 <memcpy@GLIBC_2.17>
  4028c4:	ldr	x17, [x16, #536]
  4028c8:	add	x16, x16, #0x218
  4028cc:	br	x17

00000000004028d0 <fread@plt>:
  4028d0:	adrp	x16, 4a4000 <memcpy@GLIBC_2.17>
  4028d4:	ldr	x17, [x16, #544]
  4028d8:	add	x16, x16, #0x220
  4028dc:	br	x17

00000000004028e0 <dl_iterate_phdr@plt>:
  4028e0:	adrp	x16, 4a4000 <memcpy@GLIBC_2.17>
  4028e4:	ldr	x17, [x16, #552]
  4028e8:	add	x16, x16, #0x228
  4028ec:	br	x17

00000000004028f0 <chdir@plt>:
  4028f0:	adrp	x16, 4a4000 <memcpy@GLIBC_2.17>
  4028f4:	ldr	x17, [x16, #560]
  4028f8:	add	x16, x16, #0x230
  4028fc:	br	x17

0000000000402900 <dgettext@plt>:
  402900:	adrp	x16, 4a4000 <memcpy@GLIBC_2.17>
  402904:	ldr	x17, [x16, #568]
  402908:	add	x16, x16, #0x238
  40290c:	br	x17

0000000000402910 <free@plt>:
  402910:	adrp	x16, 4a4000 <memcpy@GLIBC_2.17>
  402914:	ldr	x17, [x16, #576]
  402918:	add	x16, x16, #0x240
  40291c:	br	x17

0000000000402920 <ungetc@plt>:
  402920:	adrp	x16, 4a4000 <memcpy@GLIBC_2.17>
  402924:	ldr	x17, [x16, #584]
  402928:	add	x16, x16, #0x248
  40292c:	br	x17

0000000000402930 <freopen@plt>:
  402930:	adrp	x16, 4a4000 <memcpy@GLIBC_2.17>
  402934:	ldr	x17, [x16, #592]
  402938:	add	x16, x16, #0x250
  40293c:	br	x17

0000000000402940 <strchr@plt>:
  402940:	adrp	x16, 4a4000 <memcpy@GLIBC_2.17>
  402944:	ldr	x17, [x16, #600]
  402948:	add	x16, x16, #0x258
  40294c:	br	x17

0000000000402950 <fwrite@plt>:
  402950:	adrp	x16, 4a4000 <memcpy@GLIBC_2.17>
  402954:	ldr	x17, [x16, #608]
  402958:	add	x16, x16, #0x260
  40295c:	br	x17

0000000000402960 <fcntl@plt>:
  402960:	adrp	x16, 4a4000 <memcpy@GLIBC_2.17>
  402964:	ldr	x17, [x16, #616]
  402968:	add	x16, x16, #0x268
  40296c:	br	x17

0000000000402970 <munmap@plt>:
  402970:	adrp	x16, 4a4000 <memcpy@GLIBC_2.17>
  402974:	ldr	x17, [x16, #624]
  402978:	add	x16, x16, #0x270
  40297c:	br	x17

0000000000402980 <fflush@plt>:
  402980:	adrp	x16, 4a4000 <memcpy@GLIBC_2.17>
  402984:	ldr	x17, [x16, #632]
  402988:	add	x16, x16, #0x278
  40298c:	br	x17

0000000000402990 <strcpy@plt>:
  402990:	adrp	x16, 4a4000 <memcpy@GLIBC_2.17>
  402994:	ldr	x17, [x16, #640]
  402998:	add	x16, x16, #0x280
  40299c:	br	x17

00000000004029a0 <iconv_open@plt>:
  4029a0:	adrp	x16, 4a4000 <memcpy@GLIBC_2.17>
  4029a4:	ldr	x17, [x16, #648]
  4029a8:	add	x16, x16, #0x288
  4029ac:	br	x17

00000000004029b0 <vsprintf@plt>:
  4029b0:	adrp	x16, 4a4000 <memcpy@GLIBC_2.17>
  4029b4:	ldr	x17, [x16, #656]
  4029b8:	add	x16, x16, #0x290
  4029bc:	br	x17

00000000004029c0 <__lxstat@plt>:
  4029c0:	adrp	x16, 4a4000 <memcpy@GLIBC_2.17>
  4029c4:	ldr	x17, [x16, #664]
  4029c8:	add	x16, x16, #0x298
  4029cc:	br	x17

00000000004029d0 <read@plt>:
  4029d0:	adrp	x16, 4a4000 <memcpy@GLIBC_2.17>
  4029d4:	ldr	x17, [x16, #672]
  4029d8:	add	x16, x16, #0x2a0
  4029dc:	br	x17

00000000004029e0 <memchr@plt>:
  4029e0:	adrp	x16, 4a4000 <memcpy@GLIBC_2.17>
  4029e4:	ldr	x17, [x16, #680]
  4029e8:	add	x16, x16, #0x2a8
  4029ec:	br	x17

00000000004029f0 <isatty@plt>:
  4029f0:	adrp	x16, 4a4000 <memcpy@GLIBC_2.17>
  4029f4:	ldr	x17, [x16, #688]
  4029f8:	add	x16, x16, #0x2b0
  4029fc:	br	x17

0000000000402a00 <asctime@plt>:
  402a00:	adrp	x16, 4a4000 <memcpy@GLIBC_2.17>
  402a04:	ldr	x17, [x16, #696]
  402a08:	add	x16, x16, #0x2b8
  402a0c:	br	x17

0000000000402a10 <__fxstat@plt>:
  402a10:	adrp	x16, 4a4000 <memcpy@GLIBC_2.17>
  402a14:	ldr	x17, [x16, #704]
  402a18:	add	x16, x16, #0x2c0
  402a1c:	br	x17

0000000000402a20 <strstr@plt>:
  402a20:	adrp	x16, 4a4000 <memcpy@GLIBC_2.17>
  402a24:	ldr	x17, [x16, #712]
  402a28:	add	x16, x16, #0x2c8
  402a2c:	br	x17

0000000000402a30 <realpath@plt>:
  402a30:	adrp	x16, 4a4000 <memcpy@GLIBC_2.17>
  402a34:	ldr	x17, [x16, #720]
  402a38:	add	x16, x16, #0x2d0
  402a3c:	br	x17

0000000000402a40 <__isoc99_sscanf@plt>:
  402a40:	adrp	x16, 4a4000 <memcpy@GLIBC_2.17>
  402a44:	ldr	x17, [x16, #728]
  402a48:	add	x16, x16, #0x2d8
  402a4c:	br	x17

0000000000402a50 <fputs_unlocked@plt>:
  402a50:	adrp	x16, 4a4000 <memcpy@GLIBC_2.17>
  402a54:	ldr	x17, [x16, #736]
  402a58:	add	x16, x16, #0x2e0
  402a5c:	br	x17

0000000000402a60 <__fsetlocking@plt>:
  402a60:	adrp	x16, 4a4000 <memcpy@GLIBC_2.17>
  402a64:	ldr	x17, [x16, #744]
  402a68:	add	x16, x16, #0x2e8
  402a6c:	br	x17

0000000000402a70 <strcspn@plt>:
  402a70:	adrp	x16, 4a4000 <memcpy@GLIBC_2.17>
  402a74:	ldr	x17, [x16, #752]
  402a78:	add	x16, x16, #0x2f0
  402a7c:	br	x17

0000000000402a80 <vfprintf@plt>:
  402a80:	adrp	x16, 4a4000 <memcpy@GLIBC_2.17>
  402a84:	ldr	x17, [x16, #760]
  402a88:	add	x16, x16, #0x2f8
  402a8c:	br	x17

0000000000402a90 <printf@plt>:
  402a90:	adrp	x16, 4a4000 <memcpy@GLIBC_2.17>
  402a94:	ldr	x17, [x16, #768]
  402a98:	add	x16, x16, #0x300
  402a9c:	br	x17

0000000000402aa0 <__errno_location@plt>:
  402aa0:	adrp	x16, 4a4000 <memcpy@GLIBC_2.17>
  402aa4:	ldr	x17, [x16, #776]
  402aa8:	add	x16, x16, #0x308
  402aac:	br	x17

0000000000402ab0 <getenv@plt>:
  402ab0:	adrp	x16, 4a4000 <memcpy@GLIBC_2.17>
  402ab4:	ldr	x17, [x16, #784]
  402ab8:	add	x16, x16, #0x310
  402abc:	br	x17

0000000000402ac0 <__xstat@plt>:
  402ac0:	adrp	x16, 4a4000 <memcpy@GLIBC_2.17>
  402ac4:	ldr	x17, [x16, #792]
  402ac8:	add	x16, x16, #0x318
  402acc:	br	x17

0000000000402ad0 <pthread_mutex_lock@plt>:
  402ad0:	adrp	x16, 4a4000 <memcpy@GLIBC_2.17>
  402ad4:	ldr	x17, [x16, #800]
  402ad8:	add	x16, x16, #0x320
  402adc:	br	x17

0000000000402ae0 <ftw@plt>:
  402ae0:	adrp	x16, 4a4000 <memcpy@GLIBC_2.17>
  402ae4:	ldr	x17, [x16, #808]
  402ae8:	add	x16, x16, #0x328
  402aec:	br	x17

0000000000402af0 <syscall@plt>:
  402af0:	adrp	x16, 4a4000 <memcpy@GLIBC_2.17>
  402af4:	ldr	x17, [x16, #816]
  402af8:	add	x16, x16, #0x330
  402afc:	br	x17

0000000000402b00 <pthread_mutex_unlock@plt>:
  402b00:	adrp	x16, 4a4000 <memcpy@GLIBC_2.17>
  402b04:	ldr	x17, [x16, #824]
  402b08:	add	x16, x16, #0x338
  402b0c:	br	x17

0000000000402b10 <gettext@plt>:
  402b10:	adrp	x16, 4a4000 <memcpy@GLIBC_2.17>
  402b14:	ldr	x17, [x16, #832]
  402b18:	add	x16, x16, #0x340
  402b1c:	br	x17

0000000000402b20 <mkdir@plt>:
  402b20:	adrp	x16, 4a4000 <memcpy@GLIBC_2.17>
  402b24:	ldr	x17, [x16, #840]
  402b28:	add	x16, x16, #0x348
  402b2c:	br	x17

0000000000402b30 <fprintf@plt>:
  402b30:	adrp	x16, 4a4000 <memcpy@GLIBC_2.17>
  402b34:	ldr	x17, [x16, #848]
  402b38:	add	x16, x16, #0x350
  402b3c:	br	x17

0000000000402b40 <__uflow@plt>:
  402b40:	adrp	x16, 4a4000 <memcpy@GLIBC_2.17>
  402b44:	ldr	x17, [x16, #856]
  402b48:	add	x16, x16, #0x358
  402b4c:	br	x17

0000000000402b50 <ioctl@plt>:
  402b50:	adrp	x16, 4a4000 <memcpy@GLIBC_2.17>
  402b54:	ldr	x17, [x16, #864]
  402b58:	add	x16, x16, #0x360
  402b5c:	br	x17

0000000000402b60 <setlocale@plt>:
  402b60:	adrp	x16, 4a4000 <memcpy@GLIBC_2.17>
  402b64:	ldr	x17, [x16, #872]
  402b68:	add	x16, x16, #0x368
  402b6c:	br	x17

0000000000402b70 <ferror@plt>:
  402b70:	adrp	x16, 4a4000 <memcpy@GLIBC_2.17>
  402b74:	ldr	x17, [x16, #880]
  402b78:	add	x16, x16, #0x370
  402b7c:	br	x17

0000000000402b80 <nftw@plt>:
  402b80:	adrp	x16, 4a4000 <memcpy@GLIBC_2.17>
  402b84:	ldr	x17, [x16, #888]
  402b88:	add	x16, x16, #0x378
  402b8c:	br	x17

Disassembly of section .text:

0000000000402b90 <_obstack_begin@@Base-0x5e4c8>:
  402b90:	stp	x29, x30, [sp, #-16]!
  402b94:	adrp	x2, 472000 <_obstack_memory_used@@Base+0x10bb8>
  402b98:	adrp	x0, 472000 <_obstack_memory_used@@Base+0x10bb8>
  402b9c:	mov	x29, sp
  402ba0:	add	x2, x2, #0x9b8
  402ba4:	add	x0, x0, #0x9c8
  402ba8:	mov	w1, #0xc5                  	// #197
  402bac:	bl	402bf0 <nftw@plt+0x70>
  402bb0:	stp	x29, x30, [sp, #-16]!
  402bb4:	adrp	x2, 472000 <_obstack_memory_used@@Base+0x10bb8>
  402bb8:	adrp	x0, 472000 <_obstack_memory_used@@Base+0x10bb8>
  402bbc:	mov	x29, sp
  402bc0:	add	x2, x2, #0x9f0
  402bc4:	add	x0, x0, #0x9c8
  402bc8:	mov	w1, #0xbc                  	// #188
  402bcc:	bl	402bf0 <nftw@plt+0x70>
  402bd0:	stp	x29, x30, [sp, #-16]!
  402bd4:	adrp	x2, 472000 <_obstack_memory_used@@Base+0x10bb8>
  402bd8:	adrp	x0, 472000 <_obstack_memory_used@@Base+0x10bb8>
  402bdc:	mov	x29, sp
  402be0:	add	x2, x2, #0xa00
  402be4:	add	x0, x0, #0x9c8
  402be8:	mov	w1, #0xb3                  	// #179
  402bec:	bl	402bf0 <nftw@plt+0x70>
  402bf0:	mov	w7, w1
  402bf4:	mov	x6, x2
  402bf8:	stp	x29, x30, [sp, #-16]!
  402bfc:	mov	x29, sp
  402c00:	bl	408f10 <nftw@plt+0x6390>
  402c04:	mov	x2, x0
  402c08:	mov	w3, w7
  402c0c:	adrp	x0, 473000 <_obstack_memory_used@@Base+0x11bb8>
  402c10:	mov	x1, x6
  402c14:	add	x0, x0, #0x7b0
  402c18:	bl	409a28 <nftw@plt+0x6ea8>
  402c1c:	stp	x29, x30, [sp, #-16]!
  402c20:	adrp	x2, 473000 <_obstack_memory_used@@Base+0x11bb8>
  402c24:	adrp	x0, 473000 <_obstack_memory_used@@Base+0x11bb8>
  402c28:	mov	x29, sp
  402c2c:	add	x2, x2, #0xc78
  402c30:	add	x0, x0, #0xc50
  402c34:	mov	w1, #0x6bc                 	// #1724
  402c38:	bl	402bf0 <nftw@plt+0x70>
  402c3c:	stp	x29, x30, [sp, #-16]!
  402c40:	adrp	x2, 473000 <_obstack_memory_used@@Base+0x11bb8>
  402c44:	adrp	x0, 473000 <_obstack_memory_used@@Base+0x11bb8>
  402c48:	mov	x29, sp
  402c4c:	add	x2, x2, #0xde8
  402c50:	add	x0, x0, #0xe00
  402c54:	mov	w1, #0x36b                 	// #875
  402c58:	bl	402bf0 <nftw@plt+0x70>
  402c5c:	stp	x29, x30, [sp, #-16]!
  402c60:	mov	x0, #0x8                   	// #8
  402c64:	mov	x29, sp
  402c68:	bl	462730 <_obstack_memory_used@@Base+0x12e8>
  402c6c:	adrp	x3, 4a3000 <_obstack_memory_used@@Base+0x41bb8>
  402c70:	adrp	x2, 4a3000 <_obstack_memory_used@@Base+0x41bb8>
  402c74:	adrp	x1, 4a3000 <_obstack_memory_used@@Base+0x41bb8>
  402c78:	ldr	x3, [x3, #4000]
  402c7c:	ldr	x2, [x2, #4032]
  402c80:	add	x3, x3, #0x10
  402c84:	ldr	x1, [x1, #3928]
  402c88:	str	x3, [x0]
  402c8c:	bl	463548 <_obstack_memory_used@@Base+0x2100>
  402c90:	stp	x29, x30, [sp, #-160]!
  402c94:	mov	x29, sp
  402c98:	stp	x19, x20, [sp, #16]
  402c9c:	ldr	x19, [x1]
  402ca0:	str	x1, [sp, #128]
  402ca4:	str	w0, [sp, #140]
  402ca8:	mov	x0, x19
  402cac:	bl	4024f0 <strlen@plt>
  402cb0:	add	x0, x19, x0
  402cb4:	cmp	x19, x0
  402cb8:	b.ne	402ccc <nftw@plt+0x14c>  // b.any
  402cbc:	b	402cd8 <nftw@plt+0x158>
  402cc0:	sub	x0, x0, #0x1
  402cc4:	cmp	x19, x0
  402cc8:	b.eq	402cd8 <nftw@plt+0x158>  // b.none
  402ccc:	ldurb	w1, [x0, #-1]
  402cd0:	cmp	w1, #0x2f
  402cd4:	b.ne	402cc0 <nftw@plt+0x140>  // b.any
  402cd8:	adrp	x20, 4a5000 <__environ@@GLIBC_2.17+0xa68>
  402cdc:	adrp	x19, 472000 <_obstack_memory_used@@Base+0x10bb8>
  402ce0:	add	x19, x19, #0x758
  402ce4:	str	x0, [x20, #1936]
  402ce8:	bl	461498 <_obstack_memory_used@@Base+0x50>
  402cec:	bl	45fc50 <nftw@plt+0x5d0d0>
  402cf0:	bl	416170 <nftw@plt+0x135f0>
  402cf4:	adrp	x0, 4a4000 <_obstack_memory_used@@Base+0x42bb8>
  402cf8:	mov	w1, #0x0                   	// #0
  402cfc:	ldr	x0, [x0, #920]
  402d00:	bl	408928 <nftw@plt+0x5da8>
  402d04:	add	x1, sp, #0x80
  402d08:	add	x0, sp, #0x8c
  402d0c:	bl	45f748 <nftw@plt+0x5cbc8>
  402d10:	ldr	w0, [sp, #140]
  402d14:	mov	x3, x19
  402d18:	ldr	x1, [sp, #128]
  402d1c:	adrp	x2, 472000 <_obstack_memory_used@@Base+0x10bb8>
  402d20:	mov	x4, #0x0                   	// #0
  402d24:	add	x2, x2, #0x4d0
  402d28:	bl	402880 <getopt_long@plt>
  402d2c:	stp	x21, x22, [sp, #32]
  402d30:	cmn	w0, #0x1
  402d34:	stp	x23, x24, [sp, #48]
  402d38:	stp	x25, x26, [sp, #64]
  402d3c:	b.eq	402de0 <nftw@plt+0x260>  // b.none
  402d40:	stp	x27, x28, [sp, #80]
  402d44:	cmp	w0, #0x68
  402d48:	str	d8, [sp, #96]
  402d4c:	b.eq	402dd8 <nftw@plt+0x258>  // b.none
  402d50:	cmp	w0, #0x76
  402d54:	b.ne	402dd0 <nftw@plt+0x250>  // b.any
  402d58:	adrp	x19, 4a4000 <_obstack_memory_used@@Base+0x42bb8>
  402d5c:	adrp	x4, 474000 <_obstack_memory_used@@Base+0x12bb8>
  402d60:	ldr	x2, [x20, #1936]
  402d64:	add	x4, x4, #0xc08
  402d68:	ldr	x0, [x19, #1416]
  402d6c:	adrp	x3, 474000 <_obstack_memory_used@@Base+0x12bb8>
  402d70:	adrp	x1, 472000 <_obstack_memory_used@@Base+0x10bb8>
  402d74:	add	x3, x3, #0xc00
  402d78:	add	x1, x1, #0x4d8
  402d7c:	bl	4090a8 <nftw@plt+0x6528>
  402d80:	adrp	x0, 472000 <_obstack_memory_used@@Base+0x10bb8>
  402d84:	add	x0, x0, #0x4e8
  402d88:	ldr	x20, [x19, #1416]
  402d8c:	bl	402b10 <gettext@plt>
  402d90:	adrp	x1, 472000 <_obstack_memory_used@@Base+0x10bb8>
  402d94:	mov	x2, x0
  402d98:	add	x1, x1, #0x4f0
  402d9c:	mov	x0, x20
  402da0:	bl	4090a8 <nftw@plt+0x6528>
  402da4:	ldr	x19, [x19, #1416]
  402da8:	adrp	x0, 472000 <_obstack_memory_used@@Base+0x10bb8>
  402dac:	add	x0, x0, #0x528
  402db0:	bl	402b10 <gettext@plt>
  402db4:	mov	x1, x0
  402db8:	mov	x0, x19
  402dbc:	bl	4090a8 <nftw@plt+0x6528>
  402dc0:	mov	w0, #0x0                   	// #0
  402dc4:	bl	402520 <exit@plt>
  402dc8:	stp	x27, x28, [sp, #80]
  402dcc:	str	d8, [sp, #96]
  402dd0:	mov	w0, #0x1                   	// #1
  402dd4:	bl	403750 <nftw@plt+0xbd0>
  402dd8:	mov	w0, #0x0                   	// #0
  402ddc:	bl	403750 <nftw@plt+0xbd0>
  402de0:	adrp	x26, 4a4000 <_obstack_memory_used@@Base+0x42bb8>
  402de4:	ldr	w24, [sp, #140]
  402de8:	ldr	w21, [x26, #1408]
  402dec:	cmp	w24, w21
  402df0:	b.le	402dc8 <nftw@plt+0x248>
  402df4:	ldr	x20, [sp, #128]
  402df8:	adrp	x1, 472000 <_obstack_memory_used@@Base+0x10bb8>
  402dfc:	add	x1, x1, #0x5c8
  402e00:	ldr	x22, [x20, w21, sxtw #3]
  402e04:	add	x20, x20, w21, sxtw #3
  402e08:	mov	x0, x22
  402e0c:	bl	402890 <strcmp@plt>
  402e10:	cbz	w0, 40311c <nftw@plt+0x59c>
  402e14:	mov	x0, x22
  402e18:	adrp	x1, 472000 <_obstack_memory_used@@Base+0x10bb8>
  402e1c:	add	x1, x1, #0x608
  402e20:	bl	402890 <strcmp@plt>
  402e24:	mov	w23, w0
  402e28:	cbz	w0, 402eac <nftw@plt+0x32c>
  402e2c:	adrp	x1, 472000 <_obstack_memory_used@@Base+0x10bb8>
  402e30:	mov	x0, x22
  402e34:	add	x1, x1, #0x6d8
  402e38:	bl	402890 <strcmp@plt>
  402e3c:	cbnz	w0, 402dc8 <nftw@plt+0x248>
  402e40:	adrp	x22, 472000 <_obstack_memory_used@@Base+0x10bb8>
  402e44:	adrp	x23, 4a4000 <_obstack_memory_used@@Base+0x42bb8>
  402e48:	add	x19, x19, #0x180
  402e4c:	add	x22, x22, #0x6e0
  402e50:	add	x23, x23, #0x5a4
  402e54:	sub	w21, w24, w21
  402e58:	str	wzr, [x26, #1408]
  402e5c:	mov	w24, #0x1                   	// #1
  402e60:	adrp	x25, 4a4000 <_obstack_memory_used@@Base+0x42bb8>
  402e64:	nop
  402e68:	mov	x3, x19
  402e6c:	mov	x2, x22
  402e70:	mov	x1, x20
  402e74:	mov	w0, w21
  402e78:	mov	x4, #0x0                   	// #0
  402e7c:	bl	402880 <getopt_long@plt>
  402e80:	cmn	w0, #0x1
  402e84:	b.eq	403070 <nftw@plt+0x4f0>  // b.none
  402e88:	cmp	w0, #0x6f
  402e8c:	b.eq	403024 <nftw@plt+0x4a4>  // b.none
  402e90:	b.gt	402f54 <nftw@plt+0x3d4>
  402e94:	cmp	w0, #0x66
  402e98:	b.eq	40302c <nftw@plt+0x4ac>  // b.none
  402e9c:	cmp	w0, #0x68
  402ea0:	b.ne	402f44 <nftw@plt+0x3c4>  // b.any
  402ea4:	str	w24, [x23, #12]
  402ea8:	b	402e68 <nftw@plt+0x2e8>
  402eac:	adrp	x22, 472000 <_obstack_memory_used@@Base+0x10bb8>
  402eb0:	adrp	x1, 472000 <_obstack_memory_used@@Base+0x10bb8>
  402eb4:	add	x22, x22, #0x610
  402eb8:	add	x1, x1, #0x6a8
  402ebc:	sub	w21, w24, w21
  402ec0:	mov	w0, #0x1                   	// #1
  402ec4:	str	wzr, [x26, #1408]
  402ec8:	mov	w25, #0x0                   	// #0
  402ecc:	mov	x24, #0x0                   	// #0
  402ed0:	stp	x27, x28, [sp, #80]
  402ed4:	adrp	x28, 472000 <_obstack_memory_used@@Base+0x10bb8>
  402ed8:	mov	x27, #0x0                   	// #0
  402edc:	str	x1, [sp, #120]
  402ee0:	add	x1, x28, #0x680
  402ee4:	str	x1, [sp, #112]
  402ee8:	str	wzr, [sp, #148]
  402eec:	stp	w0, w0, [sp, #152]
  402ef0:	add	x3, x19, #0xe0
  402ef4:	mov	x2, x22
  402ef8:	mov	x1, x20
  402efc:	mov	w0, w21
  402f00:	mov	x4, #0x0                   	// #0
  402f04:	bl	402880 <getopt_long@plt>
  402f08:	cmn	w0, #0x1
  402f0c:	b.eq	403278 <nftw@plt+0x6f8>  // b.none
  402f10:	cmp	w0, #0x73
  402f14:	b.eq	402fa8 <nftw@plt+0x428>  // b.none
  402f18:	b.gt	402f98 <nftw@plt+0x418>
  402f1c:	cmp	w0, #0x6e
  402f20:	b.ne	402f84 <nftw@plt+0x404>  // b.any
  402f24:	cbnz	w25, 403034 <nftw@plt+0x4b4>
  402f28:	adrp	x0, 4a4000 <_obstack_memory_used@@Base+0x42bb8>
  402f2c:	mov	w2, #0xa                   	// #10
  402f30:	mov	x1, #0x0                   	// #0
  402f34:	ldr	x0, [x0, #1400]
  402f38:	bl	4028c0 <strtol@plt>
  402f3c:	mov	x24, x0
  402f40:	b	402ef0 <nftw@plt+0x370>
  402f44:	cmp	w0, #0x46
  402f48:	b.ne	403354 <nftw@plt+0x7d4>  // b.any
  402f4c:	str	w24, [x23, #4]
  402f50:	b	402e68 <nftw@plt+0x2e8>
  402f54:	cmp	w0, #0x74
  402f58:	b.ne	402f74 <nftw@plt+0x3f4>  // b.any
  402f5c:	ldr	x0, [x25, #1400]
  402f60:	mov	x1, #0x0                   	// #0
  402f64:	bl	402550 <strtod@plt>
  402f68:	adrp	x0, 4a4000 <_obstack_memory_used@@Base+0x42bb8>
  402f6c:	str	d0, [x0, #912]
  402f70:	b	402e68 <nftw@plt+0x2e8>
  402f74:	cmp	w0, #0x76
  402f78:	b.ne	403354 <nftw@plt+0x7d4>  // b.any
  402f7c:	bl	4047a0 <nftw@plt+0x1c20>
  402f80:	b	402e68 <nftw@plt+0x2e8>
  402f84:	cmp	w0, #0x6f
  402f88:	b.ne	40334c <nftw@plt+0x7cc>  // b.any
  402f8c:	adrp	x0, 4a4000 <_obstack_memory_used@@Base+0x42bb8>
  402f90:	ldr	x27, [x0, #1400]
  402f94:	b	402ef0 <nftw@plt+0x370>
  402f98:	cmp	w0, #0x76
  402f9c:	b.ne	40334c <nftw@plt+0x7cc>  // b.any
  402fa0:	bl	4047a0 <nftw@plt+0x1c20>
  402fa4:	b	402ef0 <nftw@plt+0x370>
  402fa8:	adrp	x25, 4a4000 <_obstack_memory_used@@Base+0x42bb8>
  402fac:	mov	w1, #0x2f                  	// #47
  402fb0:	ldr	x28, [x25, #1400]
  402fb4:	mov	x0, x28
  402fb8:	bl	402940 <strchr@plt>
  402fbc:	cbz	x0, 402fe0 <nftw@plt+0x460>
  402fc0:	mov	x0, x28
  402fc4:	add	x3, sp, #0x9c
  402fc8:	add	x2, sp, #0x98
  402fcc:	adrp	x1, 472000 <_obstack_memory_used@@Base+0x10bb8>
  402fd0:	add	x1, x1, #0x650
  402fd4:	bl	402a40 <__isoc99_sscanf@plt>
  402fd8:	cmp	w0, #0x2
  402fdc:	b.eq	4030e8 <nftw@plt+0x568>  // b.none
  402fe0:	ldr	x0, [x25, #1400]
  402fe4:	add	x2, sp, #0x94
  402fe8:	ldr	x1, [sp, #112]
  402fec:	bl	402a40 <__isoc99_sscanf@plt>
  402ff0:	cmp	w0, #0x1
  402ff4:	b.eq	40304c <nftw@plt+0x4cc>  // b.none
  402ff8:	adrp	x0, 4a4000 <_obstack_memory_used@@Base+0x42bb8>
  402ffc:	adrp	x1, 472000 <_obstack_memory_used@@Base+0x10bb8>
  403000:	add	x1, x1, #0x658
  403004:	ldr	x0, [x0, #1392]
  403008:	bl	4090a8 <nftw@plt+0x6528>
  40300c:	ldr	s0, [sp, #148]
  403010:	fcmpe	s0, #0.0
  403014:	b.mi	403360 <nftw@plt+0x7e0>  // b.first
  403018:	cbnz	x24, 403054 <nftw@plt+0x4d4>
  40301c:	mov	w25, #0x1                   	// #1
  403020:	b	402ef0 <nftw@plt+0x370>
  403024:	str	w24, [x23, #8]
  403028:	b	402e68 <nftw@plt+0x2e8>
  40302c:	str	w24, [x23]
  403030:	b	402e68 <nftw@plt+0x2e8>
  403034:	adrp	x0, 4a4000 <_obstack_memory_used@@Base+0x42bb8>
  403038:	adrp	x1, 472000 <_obstack_memory_used@@Base+0x10bb8>
  40303c:	add	x1, x1, #0x618
  403040:	ldr	x0, [x0, #1392]
  403044:	bl	4090a8 <nftw@plt+0x6528>
  403048:	b	402ef0 <nftw@plt+0x370>
  40304c:	str	wzr, [sp, #156]
  403050:	b	40300c <nftw@plt+0x48c>
  403054:	adrp	x0, 4a4000 <_obstack_memory_used@@Base+0x42bb8>
  403058:	mov	w25, #0x1                   	// #1
  40305c:	ldr	x1, [sp, #120]
  403060:	mov	x24, #0x0                   	// #0
  403064:	ldr	x0, [x0, #1392]
  403068:	bl	4090a8 <nftw@plt+0x6528>
  40306c:	b	402ef0 <nftw@plt+0x370>
  403070:	ldr	w0, [x26, #1408]
  403074:	sub	w21, w21, w0
  403078:	cmp	w21, #0x2
  40307c:	b.ne	403354 <nftw@plt+0x7d4>  // b.any
  403080:	add	x2, x20, w0, sxtw #3
  403084:	mov	w1, #0x0                   	// #0
  403088:	ldr	x0, [x20, w0, sxtw #3]
  40308c:	ldr	x20, [x2, #8]
  403090:	bl	4047b0 <nftw@plt+0x1c30>
  403094:	mov	x19, x0
  403098:	cmp	x20, #0x0
  40309c:	ccmp	x0, #0x0, #0x4, ne  // ne = any
  4030a0:	b.ne	4030c4 <nftw@plt+0x544>  // b.any
  4030a4:	mov	w23, #0x1                   	// #1
  4030a8:	mov	w0, w23
  4030ac:	ldp	x19, x20, [sp, #16]
  4030b0:	ldp	x21, x22, [sp, #32]
  4030b4:	ldp	x23, x24, [sp, #48]
  4030b8:	ldp	x25, x26, [sp, #64]
  4030bc:	ldp	x29, x30, [sp], #160
  4030c0:	ret
  4030c4:	mov	w1, #0x0                   	// #0
  4030c8:	mov	x0, x20
  4030cc:	bl	4047b0 <nftw@plt+0x1c30>
  4030d0:	mov	x1, x0
  4030d4:	cbz	x0, 4030a4 <nftw@plt+0x524>
  4030d8:	mov	x0, x19
  4030dc:	bl	404dd0 <nftw@plt+0x2250>
  4030e0:	mov	w23, w0
  4030e4:	b	4030a8 <nftw@plt+0x528>
  4030e8:	ldr	w0, [sp, #152]
  4030ec:	tbnz	w0, #31, 4030fc <nftw@plt+0x57c>
  4030f0:	ldr	w0, [sp, #156]
  4030f4:	cmp	w0, #0x0
  4030f8:	b.gt	40300c <nftw@plt+0x48c>
  4030fc:	adrp	x0, 4a4000 <_obstack_memory_used@@Base+0x42bb8>
  403100:	adrp	x1, 472000 <_obstack_memory_used@@Base+0x10bb8>
  403104:	add	x1, x1, #0x658
  403108:	ldr	x0, [x0, #1392]
  40310c:	bl	4090a8 <nftw@plt+0x6528>
  403110:	mov	w0, #0x1                   	// #1
  403114:	stp	w0, w0, [sp, #152]
  403118:	b	40300c <nftw@plt+0x48c>
  40311c:	adrp	x22, 472000 <_obstack_memory_used@@Base+0x10bb8>
  403120:	adrp	x23, 472000 <_obstack_memory_used@@Base+0x10bb8>
  403124:	add	x19, x19, #0x60
  403128:	add	x22, x22, #0x5d0
  40312c:	add	x23, x23, #0x5d8
  403130:	sub	w21, w24, w21
  403134:	mov	w0, #0x1                   	// #1
  403138:	str	wzr, [x26, #1408]
  40313c:	mov	x24, #0x0                   	// #0
  403140:	stp	w0, w0, [sp, #152]
  403144:	nop
  403148:	mov	x3, x19
  40314c:	mov	x2, x22
  403150:	mov	x1, x20
  403154:	mov	w0, w21
  403158:	mov	x4, #0x0                   	// #0
  40315c:	bl	402880 <getopt_long@plt>
  403160:	cmn	w0, #0x1
  403164:	b.eq	4031f4 <nftw@plt+0x674>  // b.none
  403168:	cmp	w0, #0x76
  40316c:	b.eq	4031d0 <nftw@plt+0x650>  // b.none
  403170:	cmp	w0, #0x77
  403174:	b.ne	4031bc <nftw@plt+0x63c>  // b.any
  403178:	adrp	x0, 4a4000 <_obstack_memory_used@@Base+0x42bb8>
  40317c:	add	x3, sp, #0x9c
  403180:	add	x2, sp, #0x98
  403184:	mov	x1, x23
  403188:	ldr	x0, [x0, #1400]
  40318c:	bl	402a40 <__isoc99_sscanf@plt>
  403190:	ldr	w0, [sp, #152]
  403194:	tbnz	w0, #31, 4031a0 <nftw@plt+0x620>
  403198:	ldr	w0, [sp, #156]
  40319c:	tbz	w0, #31, 403148 <nftw@plt+0x5c8>
  4031a0:	adrp	x0, 4a5000 <__environ@@GLIBC_2.17+0xa68>
  4031a4:	adrp	x1, 472000 <_obstack_memory_used@@Base+0x10bb8>
  4031a8:	add	x1, x1, #0x5e0
  4031ac:	stp	x27, x28, [sp, #80]
  4031b0:	ldr	w0, [x0, #2360]
  4031b4:	str	d8, [sp, #96]
  4031b8:	bl	40ba60 <nftw@plt+0x8ee0>
  4031bc:	cmp	w0, #0x6f
  4031c0:	b.eq	40326c <nftw@plt+0x6ec>  // b.none
  4031c4:	stp	x27, x28, [sp, #80]
  4031c8:	str	d8, [sp, #96]
  4031cc:	bl	4036c0 <nftw@plt+0xb40>
  4031d0:	bl	4047a0 <nftw@plt+0x1c20>
  4031d4:	mov	x3, x19
  4031d8:	mov	x2, x22
  4031dc:	mov	x1, x20
  4031e0:	mov	w0, w21
  4031e4:	mov	x4, #0x0                   	// #0
  4031e8:	bl	402880 <getopt_long@plt>
  4031ec:	cmn	w0, #0x1
  4031f0:	b.ne	403168 <nftw@plt+0x5e8>  // b.any
  4031f4:	cbz	x24, 403310 <nftw@plt+0x790>
  4031f8:	ldr	w1, [x26, #1408]
  4031fc:	sub	w21, w21, w1
  403200:	cmp	w21, #0x2
  403204:	b.ne	4031c4 <nftw@plt+0x644>  // b.any
  403208:	ldr	x0, [x20, w1, sxtw #3]
  40320c:	add	x20, x20, w1, sxtw #3
  403210:	ldp	w21, w22, [sp, #152]
  403214:	mov	w1, #0x0                   	// #0
  403218:	ldr	x20, [x20, #8]
  40321c:	bl	4047b0 <nftw@plt+0x1c30>
  403220:	mov	x19, x0
  403224:	cbz	x0, 4030a4 <nftw@plt+0x524>
  403228:	cbz	x20, 403258 <nftw@plt+0x6d8>
  40322c:	mov	w1, #0x0                   	// #0
  403230:	mov	x0, x20
  403234:	bl	4047b0 <nftw@plt+0x1c30>
  403238:	mov	x1, x0
  40323c:	cbz	x0, 4030a4 <nftw@plt+0x524>
  403240:	mov	w3, w22
  403244:	mov	w2, w21
  403248:	mov	x0, x19
  40324c:	bl	4048f0 <nftw@plt+0x1d70>
  403250:	mov	w23, w0
  403254:	cbnz	w0, 4030a8 <nftw@plt+0x528>
  403258:	mov	x1, x19
  40325c:	mov	x0, x24
  403260:	mov	w23, #0x0                   	// #0
  403264:	bl	403808 <nftw@plt+0xc88>
  403268:	b	4030a8 <nftw@plt+0x528>
  40326c:	adrp	x0, 4a4000 <_obstack_memory_used@@Base+0x42bb8>
  403270:	ldr	x24, [x0, #1400]
  403274:	b	403148 <nftw@plt+0x5c8>
  403278:	cbz	x27, 40331c <nftw@plt+0x79c>
  40327c:	ldr	w0, [x26, #1408]
  403280:	sub	w21, w21, w0
  403284:	cmp	w21, #0x1
  403288:	b.ne	40334c <nftw@plt+0x7cc>  // b.any
  40328c:	ldr	w21, [sp, #156]
  403290:	ldr	x0, [x20, w0, sxtw #3]
  403294:	cmp	w21, #0x0
  403298:	b.le	4032d4 <nftw@plt+0x754>
  40329c:	ldr	w20, [sp, #152]
  4032a0:	mov	w1, #0x0                   	// #0
  4032a4:	bl	4047b0 <nftw@plt+0x1c30>
  4032a8:	mov	x19, x0
  4032ac:	cbz	x0, 40332c <nftw@plt+0x7ac>
  4032b0:	movi	v0.2s, #0x0
  4032b4:	mov	w2, w21
  4032b8:	mov	w1, w20
  4032bc:	bl	404b00 <nftw@plt+0x1f80>
  4032c0:	mov	x0, x27
  4032c4:	mov	x1, x19
  4032c8:	bl	403808 <nftw@plt+0xc88>
  4032cc:	ldp	x27, x28, [sp, #80]
  4032d0:	b	4030a8 <nftw@plt+0x528>
  4032d4:	str	d8, [sp, #96]
  4032d8:	mov	w1, #0x0                   	// #0
  4032dc:	ldr	s8, [sp, #148]
  4032e0:	bl	4047b0 <nftw@plt+0x1c30>
  4032e4:	mov	x19, x0
  4032e8:	cbz	x0, 403328 <nftw@plt+0x7a8>
  4032ec:	cbz	x24, 403338 <nftw@plt+0x7b8>
  4032f0:	mov	x1, x24
  4032f4:	bl	404c28 <nftw@plt+0x20a8>
  4032f8:	mov	x0, x27
  4032fc:	mov	x1, x19
  403300:	bl	403808 <nftw@plt+0xc88>
  403304:	ldp	x27, x28, [sp, #80]
  403308:	ldr	d8, [sp, #96]
  40330c:	b	4030a8 <nftw@plt+0x528>
  403310:	adrp	x24, 472000 <_obstack_memory_used@@Base+0x10bb8>
  403314:	add	x24, x24, #0x4b0
  403318:	b	4031f8 <nftw@plt+0x678>
  40331c:	adrp	x27, 472000 <_obstack_memory_used@@Base+0x10bb8>
  403320:	add	x27, x27, #0x4c0
  403324:	b	40327c <nftw@plt+0x6fc>
  403328:	ldr	d8, [sp, #96]
  40332c:	mov	w23, #0x1                   	// #1
  403330:	ldp	x27, x28, [sp, #80]
  403334:	b	4030a8 <nftw@plt+0x528>
  403338:	fmov	s0, s8
  40333c:	mov	w2, #0x0                   	// #0
  403340:	mov	w1, #0x0                   	// #0
  403344:	bl	404b00 <nftw@plt+0x1f80>
  403348:	b	4032f8 <nftw@plt+0x778>
  40334c:	str	d8, [sp, #96]
  403350:	bl	4036f0 <nftw@plt+0xb70>
  403354:	stp	x27, x28, [sp, #80]
  403358:	str	d8, [sp, #96]
  40335c:	bl	403720 <nftw@plt+0xba0>
  403360:	adrp	x0, 4a5000 <__environ@@GLIBC_2.17+0xa68>
  403364:	adrp	x1, 472000 <_obstack_memory_used@@Base+0x10bb8>
  403368:	add	x1, x1, #0x688
  40336c:	str	d8, [sp, #96]
  403370:	ldr	w0, [x0, #2360]
  403374:	bl	40ba60 <nftw@plt+0x8ee0>
  403378:	stp	x29, x30, [sp, #-32]!
  40337c:	mov	x29, sp
  403380:	str	x19, [sp, #16]
  403384:	adrp	x19, 4a5000 <__environ@@GLIBC_2.17+0xa68>
  403388:	add	x19, x19, #0x8e0
  40338c:	mov	x0, x19
  403390:	bl	417328 <nftw@plt+0x147a8>
  403394:	mov	x1, x19
  403398:	adrp	x2, 4a4000 <_obstack_memory_used@@Base+0x42bb8>
  40339c:	ldr	x19, [sp, #16]
  4033a0:	add	x2, x2, #0x388
  4033a4:	ldp	x29, x30, [sp], #32
  4033a8:	adrp	x0, 416000 <nftw@plt+0x13480>
  4033ac:	add	x0, x0, #0xf50
  4033b0:	b	4025d0 <__cxa_atexit@plt>
  4033b4:	nop
  4033b8:	adrp	x0, 4a5000 <__environ@@GLIBC_2.17+0xa68>
  4033bc:	str	xzr, [x0, #2432]
  4033c0:	ret
  4033c4:	nop
  4033c8:	stp	x29, x30, [sp, #-32]!
  4033cc:	mov	x29, sp
  4033d0:	stp	x19, x20, [sp, #16]
  4033d4:	adrp	x19, 4a5000 <__environ@@GLIBC_2.17+0xa68>
  4033d8:	add	x19, x19, #0xaf0
  4033dc:	mov	x20, #0x1c00                	// #7168
  4033e0:	movk	x20, #0x1, lsl #16
  4033e4:	mov	x0, x20
  4033e8:	stp	xzr, xzr, [x19]
  4033ec:	stp	xzr, xzr, [x19, #16]
  4033f0:	stp	xzr, xzr, [x19, #32]
  4033f4:	str	x20, [x19, #64]
  4033f8:	bl	402670 <malloc@plt>
  4033fc:	str	x0, [x19, #56]
  403400:	cbz	x0, 403418 <nftw@plt+0x898>
  403404:	stp	x20, xzr, [x0]
  403408:	str	x0, [x19, #48]
  40340c:	ldp	x19, x20, [sp, #16]
  403410:	ldp	x29, x30, [sp], #32
  403414:	ret
  403418:	str	xzr, [x19, #48]
  40341c:	str	xzr, [x19, #64]
  403420:	b	40340c <nftw@plt+0x88c>
  403424:	mov	x29, #0x0                   	// #0
  403428:	mov	x30, #0x0                   	// #0
  40342c:	mov	x5, x0
  403430:	ldr	x1, [sp]
  403434:	add	x2, sp, #0x8
  403438:	mov	x6, sp
  40343c:	movz	x0, #0x0, lsl #48
  403440:	movk	x0, #0x0, lsl #32
  403444:	movk	x0, #0x40, lsl #16
  403448:	movk	x0, #0x2c90
  40344c:	movz	x3, #0x0, lsl #48
  403450:	movk	x3, #0x0, lsl #32
  403454:	movk	x3, #0x47, lsl #16
  403458:	movk	x3, #0x1e20
  40345c:	movz	x4, #0x0, lsl #48
  403460:	movk	x4, #0x0, lsl #32
  403464:	movk	x4, #0x47, lsl #16
  403468:	movk	x4, #0x1ea0
  40346c:	bl	4026d0 <__libc_start_main@plt>
  403470:	bl	4027f0 <abort@plt>
  403474:	adrp	x0, 4a3000 <_obstack_memory_used@@Base+0x41bb8>
  403478:	ldr	x0, [x0, #3960]
  40347c:	cbz	x0, 403484 <nftw@plt+0x904>
  403480:	b	4027c0 <__gmon_start__@plt>
  403484:	ret
  403488:	adrp	x0, 4a4000 <_obstack_memory_used@@Base+0x42bb8>
  40348c:	add	x0, x0, #0x570
  403490:	adrp	x1, 4a4000 <_obstack_memory_used@@Base+0x42bb8>
  403494:	add	x1, x1, #0x570
  403498:	cmp	x1, x0
  40349c:	b.eq	4034b4 <nftw@plt+0x934>  // b.none
  4034a0:	adrp	x1, 471000 <_obstack_memory_used@@Base+0xfbb8>
  4034a4:	ldr	x1, [x1, #3784]
  4034a8:	cbz	x1, 4034b4 <nftw@plt+0x934>
  4034ac:	mov	x16, x1
  4034b0:	br	x16
  4034b4:	ret
  4034b8:	adrp	x0, 4a4000 <_obstack_memory_used@@Base+0x42bb8>
  4034bc:	add	x0, x0, #0x570
  4034c0:	adrp	x1, 4a4000 <_obstack_memory_used@@Base+0x42bb8>
  4034c4:	add	x1, x1, #0x570
  4034c8:	sub	x1, x1, x0
  4034cc:	lsr	x2, x1, #63
  4034d0:	add	x1, x2, x1, asr #3
  4034d4:	cmp	xzr, x1, asr #1
  4034d8:	asr	x1, x1, #1
  4034dc:	b.eq	4034f4 <nftw@plt+0x974>  // b.none
  4034e0:	adrp	x2, 471000 <_obstack_memory_used@@Base+0xfbb8>
  4034e4:	ldr	x2, [x2, #3792]
  4034e8:	cbz	x2, 4034f4 <nftw@plt+0x974>
  4034ec:	mov	x16, x2
  4034f0:	br	x16
  4034f4:	ret
  4034f8:	stp	x29, x30, [sp, #-32]!
  4034fc:	mov	x29, sp
  403500:	str	x19, [sp, #16]
  403504:	adrp	x19, 4a4000 <_obstack_memory_used@@Base+0x42bb8>
  403508:	ldrb	w0, [x19, #1440]
  40350c:	cbnz	w0, 40351c <nftw@plt+0x99c>
  403510:	bl	403488 <nftw@plt+0x908>
  403514:	mov	w0, #0x1                   	// #1
  403518:	strb	w0, [x19, #1440]
  40351c:	ldr	x19, [sp, #16]
  403520:	ldp	x29, x30, [sp], #32
  403524:	ret
  403528:	b	4034b8 <nftw@plt+0x938>
  40352c:	nop
  403530:	stp	x29, x30, [sp, #-32]!
  403534:	mov	x29, sp
  403538:	str	x19, [sp, #16]
  40353c:	cbz	w0, 403590 <nftw@plt+0xa10>
  403540:	adrp	x0, 4a4000 <_obstack_memory_used@@Base+0x42bb8>
  403544:	ldr	x19, [x0, #1392]
  403548:	mov	x0, x19
  40354c:	adrp	x1, 471000 <_obstack_memory_used@@Base+0xfbb8>
  403550:	add	x1, x1, #0xed8
  403554:	bl	4090a8 <nftw@plt+0x6528>
  403558:	mov	x0, x19
  40355c:	adrp	x1, 471000 <_obstack_memory_used@@Base+0xfbb8>
  403560:	add	x1, x1, #0xf20
  403564:	bl	4090a8 <nftw@plt+0x6528>
  403568:	mov	x0, x19
  40356c:	adrp	x1, 471000 <_obstack_memory_used@@Base+0xfbb8>
  403570:	add	x1, x1, #0xf60
  403574:	bl	4090a8 <nftw@plt+0x6528>
  403578:	mov	x0, x19
  40357c:	adrp	x1, 471000 <_obstack_memory_used@@Base+0xfbb8>
  403580:	ldr	x19, [sp, #16]
  403584:	add	x1, x1, #0xf98
  403588:	ldp	x29, x30, [sp], #32
  40358c:	b	4090a8 <nftw@plt+0x6528>
  403590:	adrp	x0, 4a4000 <_obstack_memory_used@@Base+0x42bb8>
  403594:	ldr	x19, [x0, #1416]
  403598:	b	403548 <nftw@plt+0x9c8>
  40359c:	nop
  4035a0:	stp	x29, x30, [sp, #-32]!
  4035a4:	mov	x29, sp
  4035a8:	str	x19, [sp, #16]
  4035ac:	cbz	w0, 403610 <nftw@plt+0xa90>
  4035b0:	adrp	x0, 4a4000 <_obstack_memory_used@@Base+0x42bb8>
  4035b4:	ldr	x19, [x0, #1392]
  4035b8:	mov	x0, x19
  4035bc:	adrp	x1, 471000 <_obstack_memory_used@@Base+0xfbb8>
  4035c0:	add	x1, x1, #0xfe8
  4035c4:	bl	4090a8 <nftw@plt+0x6528>
  4035c8:	mov	x0, x19
  4035cc:	adrp	x1, 472000 <_obstack_memory_used@@Base+0x10bb8>
  4035d0:	add	x1, x1, #0x30
  4035d4:	bl	4090a8 <nftw@plt+0x6528>
  4035d8:	mov	x0, x19
  4035dc:	adrp	x1, 471000 <_obstack_memory_used@@Base+0xfbb8>
  4035e0:	add	x1, x1, #0xf20
  4035e4:	bl	4090a8 <nftw@plt+0x6528>
  4035e8:	mov	x0, x19
  4035ec:	adrp	x1, 472000 <_obstack_memory_used@@Base+0x10bb8>
  4035f0:	add	x1, x1, #0x70
  4035f4:	bl	4090a8 <nftw@plt+0x6528>
  4035f8:	mov	x0, x19
  4035fc:	adrp	x1, 471000 <_obstack_memory_used@@Base+0xfbb8>
  403600:	ldr	x19, [sp, #16]
  403604:	add	x1, x1, #0xf60
  403608:	ldp	x29, x30, [sp], #32
  40360c:	b	4090a8 <nftw@plt+0x6528>
  403610:	adrp	x0, 4a4000 <_obstack_memory_used@@Base+0x42bb8>
  403614:	ldr	x19, [x0, #1416]
  403618:	b	4035b8 <nftw@plt+0xa38>
  40361c:	nop
  403620:	stp	x29, x30, [sp, #-32]!
  403624:	mov	x29, sp
  403628:	str	x19, [sp, #16]
  40362c:	cbz	w0, 4036b0 <nftw@plt+0xb30>
  403630:	adrp	x0, 4a4000 <_obstack_memory_used@@Base+0x42bb8>
  403634:	ldr	x19, [x0, #1392]
  403638:	mov	x0, x19
  40363c:	adrp	x1, 472000 <_obstack_memory_used@@Base+0x10bb8>
  403640:	add	x1, x1, #0xb8
  403644:	bl	4090a8 <nftw@plt+0x6528>
  403648:	mov	x0, x19
  40364c:	adrp	x1, 472000 <_obstack_memory_used@@Base+0x10bb8>
  403650:	add	x1, x1, #0x108
  403654:	bl	4090a8 <nftw@plt+0x6528>
  403658:	mov	x0, x19
  40365c:	adrp	x1, 472000 <_obstack_memory_used@@Base+0x10bb8>
  403660:	add	x1, x1, #0x150
  403664:	bl	4090a8 <nftw@plt+0x6528>
  403668:	mov	x0, x19
  40366c:	adrp	x1, 472000 <_obstack_memory_used@@Base+0x10bb8>
  403670:	add	x1, x1, #0x190
  403674:	bl	4090a8 <nftw@plt+0x6528>
  403678:	mov	x0, x19
  40367c:	adrp	x1, 472000 <_obstack_memory_used@@Base+0x10bb8>
  403680:	add	x1, x1, #0x1e8
  403684:	bl	4090a8 <nftw@plt+0x6528>
  403688:	mov	x0, x19
  40368c:	adrp	x1, 472000 <_obstack_memory_used@@Base+0x10bb8>
  403690:	add	x1, x1, #0x230
  403694:	bl	4090a8 <nftw@plt+0x6528>
  403698:	mov	x0, x19
  40369c:	adrp	x1, 471000 <_obstack_memory_used@@Base+0xfbb8>
  4036a0:	ldr	x19, [sp, #16]
  4036a4:	add	x1, x1, #0xf60
  4036a8:	ldp	x29, x30, [sp], #32
  4036ac:	b	4090a8 <nftw@plt+0x6528>
  4036b0:	adrp	x0, 4a4000 <_obstack_memory_used@@Base+0x42bb8>
  4036b4:	ldr	x19, [x0, #1416]
  4036b8:	b	403638 <nftw@plt+0xab8>
  4036bc:	nop
  4036c0:	stp	x29, x30, [sp, #-16]!
  4036c4:	adrp	x0, 4a4000 <_obstack_memory_used@@Base+0x42bb8>
  4036c8:	adrp	x1, 472000 <_obstack_memory_used@@Base+0x10bb8>
  4036cc:	mov	x29, sp
  4036d0:	ldr	x0, [x0, #1392]
  4036d4:	add	x1, x1, #0x278
  4036d8:	bl	4090a8 <nftw@plt+0x6528>
  4036dc:	mov	w0, #0x1                   	// #1
  4036e0:	bl	403530 <nftw@plt+0x9b0>
  4036e4:	mov	w0, #0x1                   	// #1
  4036e8:	bl	402520 <exit@plt>
  4036ec:	nop
  4036f0:	stp	x29, x30, [sp, #-16]!
  4036f4:	adrp	x0, 4a4000 <_obstack_memory_used@@Base+0x42bb8>
  4036f8:	adrp	x1, 472000 <_obstack_memory_used@@Base+0x10bb8>
  4036fc:	mov	x29, sp
  403700:	ldr	x0, [x0, #1392]
  403704:	add	x1, x1, #0x290
  403708:	bl	4090a8 <nftw@plt+0x6528>
  40370c:	mov	w0, #0x1                   	// #1
  403710:	bl	4035a0 <nftw@plt+0xa20>
  403714:	mov	w0, #0x1                   	// #1
  403718:	bl	402520 <exit@plt>
  40371c:	nop
  403720:	stp	x29, x30, [sp, #-16]!
  403724:	adrp	x0, 4a4000 <_obstack_memory_used@@Base+0x42bb8>
  403728:	adrp	x1, 472000 <_obstack_memory_used@@Base+0x10bb8>
  40372c:	mov	x29, sp
  403730:	ldr	x0, [x0, #1392]
  403734:	add	x1, x1, #0x2b0
  403738:	bl	4090a8 <nftw@plt+0x6528>
  40373c:	mov	w0, #0x1                   	// #1
  403740:	bl	403620 <nftw@plt+0xaa0>
  403744:	mov	w0, #0x1                   	// #1
  403748:	bl	402520 <exit@plt>
  40374c:	nop
  403750:	stp	x29, x30, [sp, #-48]!
  403754:	mov	x29, sp
  403758:	stp	x19, x20, [sp, #16]
  40375c:	mov	w19, w0
  403760:	str	x21, [sp, #32]
  403764:	cbz	w0, 4037f4 <nftw@plt+0xc74>
  403768:	adrp	x0, 4a4000 <_obstack_memory_used@@Base+0x42bb8>
  40376c:	mov	w21, w19
  403770:	ldr	x20, [x0, #1392]
  403774:	adrp	x2, 4a5000 <__environ@@GLIBC_2.17+0xa68>
  403778:	mov	x0, x20
  40377c:	adrp	x1, 472000 <_obstack_memory_used@@Base+0x10bb8>
  403780:	ldr	x2, [x2, #1936]
  403784:	add	x1, x1, #0x2d0
  403788:	bl	4090a8 <nftw@plt+0x6528>
  40378c:	mov	x0, x20
  403790:	adrp	x1, 472000 <_obstack_memory_used@@Base+0x10bb8>
  403794:	add	x1, x1, #0x300
  403798:	bl	4090a8 <nftw@plt+0x6528>
  40379c:	mov	x0, x20
  4037a0:	adrp	x1, 472000 <_obstack_memory_used@@Base+0x10bb8>
  4037a4:	add	x1, x1, #0x328
  4037a8:	bl	4090a8 <nftw@plt+0x6528>
  4037ac:	adrp	x1, 472000 <_obstack_memory_used@@Base+0x10bb8>
  4037b0:	add	x1, x1, #0x370
  4037b4:	mov	x0, x20
  4037b8:	bl	4090a8 <nftw@plt+0x6528>
  4037bc:	mov	w0, w19
  4037c0:	bl	403530 <nftw@plt+0x9b0>
  4037c4:	mov	w0, w19
  4037c8:	bl	4035a0 <nftw@plt+0xa20>
  4037cc:	mov	w0, w19
  4037d0:	bl	403620 <nftw@plt+0xaa0>
  4037d4:	adrp	x2, 474000 <_obstack_memory_used@@Base+0x12bb8>
  4037d8:	adrp	x1, 472000 <_obstack_memory_used@@Base+0x10bb8>
  4037dc:	add	x2, x2, #0xc10
  4037e0:	add	x1, x1, #0x3c0
  4037e4:	mov	x0, x20
  4037e8:	bl	4090a8 <nftw@plt+0x6528>
  4037ec:	mov	w0, w21
  4037f0:	bl	402520 <exit@plt>
  4037f4:	adrp	x0, 4a4000 <_obstack_memory_used@@Base+0x42bb8>
  4037f8:	mov	w21, #0x0                   	// #0
  4037fc:	ldr	x20, [x0, #1416]
  403800:	b	403774 <nftw@plt+0xbf4>
  403804:	nop
  403808:	stp	x29, x30, [sp, #-48]!
  40380c:	mov	x29, sp
  403810:	stp	x19, x20, [sp, #16]
  403814:	mov	x20, x0
  403818:	stp	x21, x22, [sp, #32]
  40381c:	mov	x22, x1
  403820:	mov	w1, #0x0                   	// #0
  403824:	bl	402810 <access@plt>
  403828:	cmn	w0, #0x1
  40382c:	b.eq	4038b0 <nftw@plt+0xd30>  // b.none
  403830:	adrp	x1, 403000 <nftw@plt+0x480>
  403834:	mov	x0, x20
  403838:	add	x1, x1, #0x950
  40383c:	mov	w3, #0x9                   	// #9
  403840:	mov	w2, #0x40                  	// #64
  403844:	bl	402b80 <nftw@plt>
  403848:	mov	x1, #0x0                   	// #0
  40384c:	mov	x0, #0x0                   	// #0
  403850:	bl	4024c0 <getcwd@plt>
  403854:	mov	x19, x0
  403858:	cbz	x0, 4038ec <nftw@plt+0xd6c>
  40385c:	mov	x0, x20
  403860:	bl	4028f0 <chdir@plt>
  403864:	cbnz	w0, 403934 <nftw@plt+0xdb4>
  403868:	mov	x0, x22
  40386c:	bl	407f08 <nftw@plt+0x5388>
  403870:	mov	w1, #0x0                   	// #0
  403874:	mov	x21, x0
  403878:	bl	402810 <access@plt>
  40387c:	cmn	w0, #0x1
  403880:	b.ne	403918 <nftw@plt+0xd98>  // b.any
  403884:	mov	w1, #0x0                   	// #0
  403888:	mov	x0, x22
  40388c:	bl	406820 <nftw@plt+0x3ca0>
  403890:	mov	x0, x19
  403894:	bl	4028f0 <chdir@plt>
  403898:	cbnz	w0, 403900 <nftw@plt+0xd80>
  40389c:	mov	x0, x19
  4038a0:	ldp	x19, x20, [sp, #16]
  4038a4:	ldp	x21, x22, [sp, #32]
  4038a8:	ldp	x29, x30, [sp], #48
  4038ac:	b	402910 <free@plt>
  4038b0:	mov	x0, x20
  4038b4:	mov	w1, #0x1ff                 	// #511
  4038b8:	bl	402b20 <mkdir@plt>
  4038bc:	cmn	w0, #0x1
  4038c0:	b.ne	403848 <nftw@plt+0xcc8>  // b.any
  4038c4:	bl	402aa0 <__errno_location@plt>
  4038c8:	ldr	w0, [x0]
  4038cc:	cmp	w0, #0x11
  4038d0:	b.eq	403848 <nftw@plt+0xcc8>  // b.none
  4038d4:	adrp	x0, 4a5000 <__environ@@GLIBC_2.17+0xa68>
  4038d8:	adrp	x1, 472000 <_obstack_memory_used@@Base+0x10bb8>
  4038dc:	mov	x2, x20
  4038e0:	add	x1, x1, #0x3f8
  4038e4:	ldr	w0, [x0, #2360]
  4038e8:	bl	40ba60 <nftw@plt+0x8ee0>
  4038ec:	adrp	x0, 4a5000 <__environ@@GLIBC_2.17+0xa68>
  4038f0:	adrp	x1, 472000 <_obstack_memory_used@@Base+0x10bb8>
  4038f4:	add	x1, x1, #0x418
  4038f8:	ldr	w0, [x0, #2360]
  4038fc:	bl	40ba60 <nftw@plt+0x8ee0>
  403900:	adrp	x0, 4a5000 <__environ@@GLIBC_2.17+0xa68>
  403904:	adrp	x1, 472000 <_obstack_memory_used@@Base+0x10bb8>
  403908:	mov	x2, x19
  40390c:	add	x1, x1, #0x440
  403910:	ldr	w0, [x0, #2360]
  403914:	bl	40ba60 <nftw@plt+0x8ee0>
  403918:	adrp	x0, 4a5000 <__environ@@GLIBC_2.17+0xa68>
  40391c:	adrp	x1, 472000 <_obstack_memory_used@@Base+0x10bb8>
  403920:	mov	x3, x20
  403924:	mov	x2, x21
  403928:	ldr	w0, [x0, #2360]
  40392c:	add	x1, x1, #0x460
  403930:	bl	40ba60 <nftw@plt+0x8ee0>
  403934:	adrp	x0, 4a5000 <__environ@@GLIBC_2.17+0xa68>
  403938:	adrp	x1, 472000 <_obstack_memory_used@@Base+0x10bb8>
  40393c:	mov	x2, x20
  403940:	add	x1, x1, #0x440
  403944:	ldr	w0, [x0, #2360]
  403948:	bl	40ba60 <nftw@plt+0x8ee0>
  40394c:	nop
  403950:	stp	x29, x30, [sp, #-32]!
  403954:	mov	x29, sp
  403958:	str	x19, [sp, #16]
  40395c:	mov	x19, x0
  403960:	bl	4024f0 <strlen@plt>
  403964:	cmp	w0, #0x5
  403968:	b.le	403988 <nftw@plt+0xe08>
  40396c:	sub	w0, w0, #0x5
  403970:	adrp	x1, 472000 <_obstack_memory_used@@Base+0x10bb8>
  403974:	mov	x2, #0x5                   	// #5
  403978:	add	x1, x1, #0x490
  40397c:	add	x0, x19, w0, sxtw
  403980:	bl	4026a0 <strncmp@plt>
  403984:	cbz	w0, 403998 <nftw@plt+0xe18>
  403988:	mov	w0, #0x0                   	// #0
  40398c:	ldr	x19, [sp, #16]
  403990:	ldp	x29, x30, [sp], #32
  403994:	ret
  403998:	mov	x0, x19
  40399c:	bl	402580 <remove@plt>
  4039a0:	cbz	w0, 403988 <nftw@plt+0xe08>
  4039a4:	adrp	x0, 4a5000 <__environ@@GLIBC_2.17+0xa68>
  4039a8:	adrp	x1, 472000 <_obstack_memory_used@@Base+0x10bb8>
  4039ac:	mov	x2, x19
  4039b0:	add	x1, x1, #0x498
  4039b4:	ldr	w0, [x0, #2360]
  4039b8:	bl	40ba60 <nftw@plt+0x8ee0>
  4039bc:	nop
  4039c0:	cbz	w1, 403a28 <nftw@plt+0xea8>
  4039c4:	stp	x29, x30, [sp, #-64]!
  4039c8:	mov	x29, sp
  4039cc:	stp	x19, x20, [sp, #16]
  4039d0:	sub	w20, w1, #0x1
  4039d4:	add	x20, x20, #0x1
  4039d8:	mov	x19, x0
  4039dc:	stp	x21, x22, [sp, #32]
  4039e0:	add	x20, x0, x20, lsl #3
  4039e4:	mov	x21, x2
  4039e8:	mov	x22, x3
  4039ec:	str	x23, [sp, #48]
  4039f0:	mov	x23, x4
  4039f4:	nop
  4039f8:	ldr	x0, [x19]
  4039fc:	mov	x2, x23
  403a00:	mov	x1, x22
  403a04:	blr	x21
  403a08:	str	x0, [x19], #8
  403a0c:	cmp	x19, x20
  403a10:	b.ne	4039f8 <nftw@plt+0xe78>  // b.any
  403a14:	ldp	x19, x20, [sp, #16]
  403a18:	ldp	x21, x22, [sp, #32]
  403a1c:	ldr	x23, [sp, #48]
  403a20:	ldp	x29, x30, [sp], #64
  403a24:	ret
  403a28:	ret
  403a2c:	nop
  403a30:	ret
  403a34:	nop
  403a38:	scvtf	s0, x0
  403a3c:	ldr	s1, [x1]
  403a40:	fmul	s0, s0, s1
  403a44:	fcvtzs	x0, s0
  403a48:	ret
  403a4c:	nop
  403a50:	ldr	w2, [x2]
  403a54:	ldrsw	x3, [x1]
  403a58:	add	w1, w2, w2, lsr #31
  403a5c:	sxtw	x2, w2
  403a60:	asr	w1, w1, #1
  403a64:	add	x1, x0, w1, sxtw
  403a68:	sdiv	x1, x1, x2
  403a6c:	mul	x0, x1, x3
  403a70:	ret
  403a74:	nop
  403a78:	stp	x29, x30, [sp, #-112]!
  403a7c:	mov	x29, sp
  403a80:	stp	x27, x28, [sp, #80]
  403a84:	mov	x28, x1
  403a88:	ldr	w1, [x0, #104]
  403a8c:	stp	x21, x22, [sp, #32]
  403a90:	mov	x22, x0
  403a94:	ldr	w0, [x28, #104]
  403a98:	cmp	w0, w1
  403a9c:	b.ne	403c00 <nftw@plt+0x1080>  // b.any
  403aa0:	cbz	w0, 403be8 <nftw@plt+0x1068>
  403aa4:	stp	x23, x24, [sp, #48]
  403aa8:	sub	w23, w0, #0x1
  403aac:	add	x23, x23, #0x1
  403ab0:	adrp	x5, 4a4000 <_obstack_memory_used@@Base+0x42bb8>
  403ab4:	mov	w24, w2
  403ab8:	lsl	x23, x23, #3
  403abc:	stp	x19, x20, [sp, #16]
  403ac0:	mov	x19, #0x0                   	// #0
  403ac4:	stp	x25, x26, [sp, #64]
  403ac8:	adrp	x25, 472000 <_obstack_memory_used@@Base+0x10bb8>
  403acc:	add	x26, x5, #0x5c0
  403ad0:	add	x25, x25, #0xa20
  403ad4:	str	wzr, [sp, #108]
  403ad8:	b	403ae8 <nftw@plt+0xf68>
  403adc:	add	x19, x19, #0x8
  403ae0:	cmp	x23, x19
  403ae4:	b.eq	403b50 <nftw@plt+0xfd0>  // b.none
  403ae8:	ldr	x1, [x22, #112]
  403aec:	ldr	x0, [x28, #112]
  403af0:	ldr	x3, [x1, x19]
  403af4:	ldr	x4, [x0, x19]
  403af8:	cbz	x3, 403adc <nftw@plt+0xf5c>
  403afc:	ldr	x0, [x3]
  403b00:	cmp	x4, #0x0
  403b04:	ccmp	x0, x22, #0x0, ne  // ne = any
  403b08:	b.ne	403adc <nftw@plt+0xf5c>  // b.any
  403b0c:	ldr	x0, [x4]
  403b10:	cmp	x0, x28
  403b14:	b.ne	403adc <nftw@plt+0xf5c>  // b.any
  403b18:	ldr	w1, [x3, #16]
  403b1c:	ldr	w0, [x4, #16]
  403b20:	cmp	w1, w0
  403b24:	b.eq	403b70 <nftw@plt+0xff0>  // b.none
  403b28:	adrp	x0, 4a4000 <_obstack_memory_used@@Base+0x42bb8>
  403b2c:	mov	w3, #0x1                   	// #1
  403b30:	ldr	x2, [x22, #24]
  403b34:	mov	x1, x25
  403b38:	ldr	x0, [x0, #1392]
  403b3c:	add	x19, x19, #0x8
  403b40:	str	w3, [sp, #108]
  403b44:	bl	4090a8 <nftw@plt+0x6528>
  403b48:	cmp	x23, x19
  403b4c:	b.ne	403ae8 <nftw@plt+0xf68>  // b.any
  403b50:	ldr	w0, [sp, #108]
  403b54:	ldp	x19, x20, [sp, #16]
  403b58:	ldp	x21, x22, [sp, #32]
  403b5c:	ldp	x23, x24, [sp, #48]
  403b60:	ldp	x25, x26, [sp, #64]
  403b64:	ldp	x27, x28, [sp, #80]
  403b68:	ldp	x29, x30, [sp], #112
  403b6c:	ret
  403b70:	add	x20, x3, #0x18
  403b74:	add	x21, x4, #0x18
  403b78:	mov	x27, #0x20                  	// #32
  403b7c:	b	403bc0 <nftw@plt+0x1040>
  403b80:	cbz	x2, 403bb4 <nftw@plt+0x1034>
  403b84:	ldr	w1, [x20]
  403b88:	ldr	w0, [x21]
  403b8c:	cmp	w1, w0
  403b90:	b.ne	403c24 <nftw@plt+0x10a4>  // b.any
  403b94:	ldr	x3, [x21, #8]
  403b98:	str	x3, [x26]
  403b9c:	ldr	x0, [x20, #8]
  403ba0:	stp	wzr, w1, [x26, #8]
  403ba4:	str	w24, [x26, #16]
  403ba8:	add	x20, x20, #0x10
  403bac:	add	x21, x21, #0x10
  403bb0:	blr	x2
  403bb4:	add	x27, x27, #0x8
  403bb8:	cmp	x27, #0x68
  403bbc:	b.eq	403adc <nftw@plt+0xf5c>  // b.none
  403bc0:	ldr	x2, [x22, x27]
  403bc4:	ldr	x0, [x28, x27]
  403bc8:	cmp	x2, x0
  403bcc:	b.eq	403b80 <nftw@plt+0x1000>  // b.none
  403bd0:	adrp	x2, 472000 <_obstack_memory_used@@Base+0x10bb8>
  403bd4:	adrp	x0, 472000 <_obstack_memory_used@@Base+0x10bb8>
  403bd8:	add	x2, x2, #0xa10
  403bdc:	add	x0, x0, #0x9c8
  403be0:	mov	w1, #0x23b                 	// #571
  403be4:	bl	402bf0 <nftw@plt+0x70>
  403be8:	str	wzr, [sp, #108]
  403bec:	ldp	x21, x22, [sp, #32]
  403bf0:	ldr	w0, [sp, #108]
  403bf4:	ldp	x27, x28, [sp, #80]
  403bf8:	ldp	x29, x30, [sp], #112
  403bfc:	ret
  403c00:	adrp	x2, 472000 <_obstack_memory_used@@Base+0x10bb8>
  403c04:	adrp	x0, 472000 <_obstack_memory_used@@Base+0x10bb8>
  403c08:	add	x2, x2, #0xa10
  403c0c:	add	x0, x0, #0x9c8
  403c10:	mov	w1, #0x220                 	// #544
  403c14:	stp	x19, x20, [sp, #16]
  403c18:	stp	x23, x24, [sp, #48]
  403c1c:	stp	x25, x26, [sp, #64]
  403c20:	bl	402bf0 <nftw@plt+0x70>
  403c24:	adrp	x2, 472000 <_obstack_memory_used@@Base+0x10bb8>
  403c28:	adrp	x0, 472000 <_obstack_memory_used@@Base+0x10bb8>
  403c2c:	add	x2, x2, #0xa10
  403c30:	add	x0, x0, #0x9c8
  403c34:	mov	w1, #0x23e                 	// #574
  403c38:	bl	402bf0 <nftw@plt+0x70>
  403c3c:	nop
  403c40:	stp	x29, x30, [sp, #-16]!
  403c44:	mov	x1, #0x1                   	// #1
  403c48:	mov	x0, #0x10                  	// #16
  403c4c:	mov	x29, sp
  403c50:	bl	402710 <calloc@plt>
  403c54:	ldp	x29, x30, [sp], #16
  403c58:	b	406538 <nftw@plt+0x39b8>
  403c5c:	nop
  403c60:	stp	x29, x30, [sp, #-96]!
  403c64:	mov	w5, #0x8e39                	// #36409
  403c68:	movk	w5, #0x38e3, lsl #16
  403c6c:	mov	x29, sp
  403c70:	mul	w5, w1, w5
  403c74:	stp	x25, x26, [sp, #64]
  403c78:	mov	x25, x0
  403c7c:	mov	w0, #0xc71c                	// #50972
  403c80:	movk	w0, #0x1c71, lsl #16
  403c84:	cmp	w5, w0
  403c88:	b.hi	403d10 <nftw@plt+0x1190>  // b.pmore
  403c8c:	stp	x23, x24, [sp, #48]
  403c90:	mov	w24, w1
  403c94:	cbz	w1, 403d00 <nftw@plt+0x1180>
  403c98:	mov	x23, x3
  403c9c:	add	x26, x25, #0x40
  403ca0:	stp	x21, x22, [sp, #32]
  403ca4:	mov	x22, x2
  403ca8:	mov	w21, #0x1                   	// #1
  403cac:	str	x27, [sp, #80]
  403cb0:	mov	x27, x4
  403cb4:	stp	x19, x20, [sp, #16]
  403cb8:	ubfiz	x20, x21, #3, #32
  403cbc:	add	x19, x25, x20
  403cc0:	add	x20, x26, x20
  403cc4:	ldr	x0, [x19, #8]
  403cc8:	mov	x2, x27
  403ccc:	mov	x1, x23
  403cd0:	add	x19, x19, #0x10
  403cd4:	blr	x22
  403cd8:	stur	x0, [x19, #-8]
  403cdc:	cmp	x20, x19
  403ce0:	b.ne	403cc4 <nftw@plt+0x1144>  // b.any
  403ce4:	add	w0, w21, #0x8
  403ce8:	add	w21, w21, #0x9
  403cec:	cmp	w24, w0
  403cf0:	b.hi	403cb8 <nftw@plt+0x1138>  // b.pmore
  403cf4:	ldp	x19, x20, [sp, #16]
  403cf8:	ldp	x21, x22, [sp, #32]
  403cfc:	ldr	x27, [sp, #80]
  403d00:	ldp	x23, x24, [sp, #48]
  403d04:	ldp	x25, x26, [sp, #64]
  403d08:	ldp	x29, x30, [sp], #96
  403d0c:	ret
  403d10:	adrp	x2, 472000 <_obstack_memory_used@@Base+0x10bb8>
  403d14:	adrp	x0, 472000 <_obstack_memory_used@@Base+0x10bb8>
  403d18:	add	x2, x2, #0xa48
  403d1c:	add	x0, x0, #0x9c8
  403d20:	mov	w1, #0x2ef                 	// #751
  403d24:	stp	x19, x20, [sp, #16]
  403d28:	stp	x21, x22, [sp, #32]
  403d2c:	stp	x23, x24, [sp, #48]
  403d30:	str	x27, [sp, #80]
  403d34:	bl	402bf0 <nftw@plt+0x70>
  403d38:	stp	x29, x30, [sp, #-64]!
  403d3c:	mov	x29, sp
  403d40:	stp	x23, x24, [sp, #48]
  403d44:	mov	w24, #0xaaab                	// #43691
  403d48:	movk	w24, #0xaaaa, lsl #16
  403d4c:	stp	x19, x20, [sp, #16]
  403d50:	umull	x24, w1, w24
  403d54:	stp	x21, x22, [sp, #32]
  403d58:	lsr	x24, x24, #33
  403d5c:	add	w20, w24, w24, lsl #1
  403d60:	subs	w20, w1, w20
  403d64:	b.ne	403dd0 <nftw@plt+0x1250>  // b.any
  403d68:	mov	x19, x0
  403d6c:	mov	x21, x2
  403d70:	mov	x22, x3
  403d74:	mov	x23, x4
  403d78:	cmp	w1, #0x2
  403d7c:	b.ls	403dbc <nftw@plt+0x123c>  // b.plast
  403d80:	ldr	x0, [x19, #8]
  403d84:	mov	x2, x23
  403d88:	mov	x1, x22
  403d8c:	add	w20, w20, #0x1
  403d90:	add	x19, x19, #0x18
  403d94:	blr	x21
  403d98:	mov	x1, x0
  403d9c:	ldur	x0, [x19, #-8]
  403da0:	stur	x1, [x19, #-16]
  403da4:	mov	x2, x23
  403da8:	mov	x1, x22
  403dac:	blr	x21
  403db0:	stur	x0, [x19, #-8]
  403db4:	cmp	w24, w20
  403db8:	b.hi	403d80 <nftw@plt+0x1200>  // b.pmore
  403dbc:	ldp	x19, x20, [sp, #16]
  403dc0:	ldp	x21, x22, [sp, #32]
  403dc4:	ldp	x23, x24, [sp, #48]
  403dc8:	ldp	x29, x30, [sp], #64
  403dcc:	ret
  403dd0:	adrp	x2, 472000 <_obstack_memory_used@@Base+0x10bb8>
  403dd4:	adrp	x0, 472000 <_obstack_memory_used@@Base+0x10bb8>
  403dd8:	add	x2, x2, #0xa68
  403ddc:	add	x0, x0, #0x9c8
  403de0:	mov	w1, #0x2de                 	// #734
  403de4:	bl	402bf0 <nftw@plt+0x70>
  403de8:	cbnz	w2, 4042e8 <nftw@plt+0x1768>
  403dec:	stp	x29, x30, [sp, #-128]!
  403df0:	mov	x29, sp
  403df4:	stp	x23, x24, [sp, #48]
  403df8:	mov	x23, x0
  403dfc:	bl	4024f0 <strlen@plt>
  403e00:	cmp	w0, #0x5
  403e04:	b.le	4042d8 <nftw@plt+0x1758>
  403e08:	sxtw	x0, w0
  403e0c:	adrp	x1, 472000 <_obstack_memory_used@@Base+0x10bb8>
  403e10:	sub	x0, x0, #0x5
  403e14:	add	x1, x1, #0x490
  403e18:	add	x0, x23, x0
  403e1c:	bl	402890 <strcmp@plt>
  403e20:	cbnz	w0, 4042d8 <nftw@plt+0x1758>
  403e24:	stp	x19, x20, [sp, #16]
  403e28:	adrp	x20, 4a4000 <_obstack_memory_used@@Base+0x42bb8>
  403e2c:	add	x20, x20, #0x5c0
  403e30:	ldr	w0, [x20, #20]
  403e34:	cbnz	w0, 4042f0 <nftw@plt+0x1770>
  403e38:	mov	x0, x23
  403e3c:	stp	xzr, xzr, [x20, #32]
  403e40:	stp	xzr, xzr, [x20, #48]
  403e44:	stp	wzr, wzr, [x20, #64]
  403e48:	bl	405c10 <nftw@plt+0x3090>
  403e4c:	cbz	w0, 4043ec <nftw@plt+0x186c>
  403e50:	bl	406180 <nftw@plt+0x3600>
  403e54:	mov	w1, #0x6461                	// #25697
  403e58:	movk	w1, #0x6763, lsl #16
  403e5c:	cmp	w0, w1
  403e60:	b.ne	40430c <nftw@plt+0x178c>  // b.any
  403e64:	bl	406180 <nftw@plt+0x3600>
  403e68:	mov	w19, w0
  403e6c:	mov	w4, #0x322a                	// #12842
  403e70:	movk	w4, #0x4139, lsl #16
  403e74:	cmp	w0, w4
  403e78:	b.ne	40440c <nftw@plt+0x188c>  // b.any
  403e7c:	mov	x1, #0x1                   	// #1
  403e80:	mov	x0, #0x108                 	// #264
  403e84:	stp	x21, x22, [sp, #32]
  403e88:	mov	w24, #0x0                   	// #0
  403e8c:	stp	x25, x26, [sp, #64]
  403e90:	adrp	x26, 472000 <_obstack_memory_used@@Base+0x10bb8>
  403e94:	add	x26, x26, #0xf10
  403e98:	stp	x27, x28, [sp, #80]
  403e9c:	bl	402710 <calloc@plt>
  403ea0:	mov	x25, x0
  403ea4:	adrp	x4, 41c000 <nftw@plt+0x19480>
  403ea8:	adrp	x3, 41c000 <nftw@plt+0x19480>
  403eac:	add	x4, x4, #0x2a0
  403eb0:	add	x3, x3, #0x278
  403eb4:	mov	x2, #0x0                   	// #0
  403eb8:	mov	x1, #0x0                   	// #0
  403ebc:	add	x0, x20, #0x50
  403ec0:	str	w19, [x25]
  403ec4:	str	x25, [x20, #72]
  403ec8:	bl	461058 <_obstack_begin@@Base>
  403ecc:	mov	x0, x23
  403ed0:	str	wzr, [x20, #168]
  403ed4:	str	xzr, [x20, #176]
  403ed8:	bl	4024f0 <strlen@plt>
  403edc:	add	x19, x0, #0x1
  403ee0:	adrp	x28, 472000 <_obstack_memory_used@@Base+0x10bb8>
  403ee4:	mov	x0, x19
  403ee8:	bl	402670 <malloc@plt>
  403eec:	mov	x2, x19
  403ef0:	mov	x1, x23
  403ef4:	mov	x19, x0
  403ef8:	bl	402490 <memcpy@plt>
  403efc:	str	x19, [x25, #24]
  403f00:	bl	406180 <nftw@plt+0x3600>
  403f04:	str	w0, [x25, #16]
  403f08:	add	x1, x28, #0xb30
  403f0c:	str	x1, [sp, #104]
  403f10:	bl	406180 <nftw@plt+0x3600>
  403f14:	mov	w19, w0
  403f18:	cbz	w0, 404070 <nftw@plt+0x14f0>
  403f1c:	bl	406180 <nftw@plt+0x3600>
  403f20:	mov	w21, w0
  403f24:	bl	405bd8 <nftw@plt+0x3058>
  403f28:	mov	w28, w0
  403f2c:	sub	w5, w19, #0x1
  403f30:	eor	w5, w5, w19
  403f34:	cmp	wzr, w5, lsr #1
  403f38:	lsr	w1, w5, #1
  403f3c:	b.eq	4043e0 <nftw@plt+0x1860>  // b.none
  403f40:	and	w0, w1, #0xff
  403f44:	cmp	w0, #0xff
  403f48:	b.ne	40435c <nftw@plt+0x17dc>  // b.any
  403f4c:	mov	w22, #0x4                   	// #4
  403f50:	b	403f60 <nftw@plt+0x13e0>
  403f54:	and	w0, w1, #0xff
  403f58:	cmp	w0, #0xff
  403f5c:	b.ne	404368 <nftw@plt+0x17e8>  // b.any
  403f60:	sub	w27, w22, #0x2
  403f64:	lsr	w1, w1, #8
  403f68:	sub	w22, w22, #0x1
  403f6c:	cbnz	w1, 403f54 <nftw@plt+0x13d4>
  403f70:	mov	x4, x26
  403f74:	nop
  403f78:	ldr	x0, [x4, #32]
  403f7c:	add	x4, x4, #0x18
  403f80:	cbz	x0, 404330 <nftw@plt+0x17b0>
  403f84:	ldr	w0, [x4]
  403f88:	cmp	w19, w0
  403f8c:	b.ne	403f78 <nftw@plt+0x13f8>  // b.any
  403f90:	cmp	w24, #0x0
  403f94:	ccmp	w24, w22, #0x2, ne  // ne = any
  403f98:	b.cs	403fec <nftw@plt+0x146c>  // b.hs, b.nlast
  403f9c:	sub	w24, w24, #0x1
  403fa0:	add	x0, sp, #0x70
  403fa4:	ldr	w1, [x0, x24, lsl #2]
  403fa8:	sub	w2, w1, #0x1
  403fac:	eor	w2, w2, w1
  403fb0:	cmp	w5, w2, lsr #8
  403fb4:	b.ne	403fcc <nftw@plt+0x144c>  // b.any
  403fb8:	neg	w0, w1
  403fbc:	eor	w2, w19, w1
  403fc0:	eor	w1, w0, w1
  403fc4:	tst	w1, w2
  403fc8:	b.eq	403fec <nftw@plt+0x146c>  // b.none
  403fcc:	mov	w3, w19
  403fd0:	mov	x2, x23
  403fd4:	adrp	x1, 472000 <_obstack_memory_used@@Base+0x10bb8>
  403fd8:	mov	w0, #0x0                   	// #0
  403fdc:	add	x1, x1, #0xb48
  403fe0:	str	x4, [sp, #96]
  403fe4:	bl	40a780 <nftw@plt+0x7c00>
  403fe8:	ldr	x4, [sp, #96]
  403fec:	add	x0, sp, #0x70
  403ff0:	ldr	x2, [x4, #16]
  403ff4:	str	w19, [x0, w27, uxtw #2]
  403ff8:	cbz	x2, 404024 <nftw@plt+0x14a4>
  403ffc:	mov	w1, w21
  404000:	mov	w0, w19
  404004:	blr	x2
  404008:	bl	405bd8 <nftw@plt+0x3058>
  40400c:	sub	w1, w0, w28
  404010:	sub	w3, w0, w28
  404014:	cmp	w21, w1
  404018:	mov	w0, w21
  40401c:	b.cc	404388 <nftw@plt+0x1808>  // b.lo, b.ul, b.last
  404020:	b.hi	4043a4 <nftw@plt+0x1824>  // b.pmore
  404024:	mov	w1, w21
  404028:	mov	w0, w28
  40402c:	bl	406688 <nftw@plt+0x3b08>
  404030:	bl	405bf0 <nftw@plt+0x3070>
  404034:	cmp	w0, #0x0
  404038:	cbnz	w0, 404044 <nftw@plt+0x14c4>
  40403c:	mov	w24, w22
  404040:	b	403f10 <nftw@plt+0x1390>
  404044:	adrp	x1, 472000 <_obstack_memory_used@@Base+0x10bb8>
  404048:	add	x1, x1, #0xaa8
  40404c:	adrp	x19, 472000 <_obstack_memory_used@@Base+0x10bb8>
  404050:	add	x19, x19, #0xa88
  404054:	csel	x19, x19, x1, lt  // lt = tstop
  404058:	bl	405bd8 <nftw@plt+0x3058>
  40405c:	mov	w3, w0
  404060:	mov	x1, x19
  404064:	mov	x2, x23
  404068:	mov	w0, #0x0                   	// #0
  40406c:	bl	40a780 <nftw@plt+0x7c00>
  404070:	ldr	w0, [x20, #32]
  404074:	ldr	x1, [x20, #176]
  404078:	cbz	w0, 404090 <nftw@plt+0x1510>
  40407c:	ldr	w3, [x20, #192]
  404080:	mov	w0, #0x1                   	// #1
  404084:	ldr	x2, [x20, #200]
  404088:	str	w3, [x1, #24]
  40408c:	str	x2, [x1, #32]
  404090:	ldr	w2, [x20, #36]
  404094:	cbz	w2, 4040b0 <nftw@plt+0x1530>
  404098:	add	x3, x1, w0, sxtw #4
  40409c:	ldr	w4, [x20, #208]
  4040a0:	add	w0, w0, #0x1
  4040a4:	ldr	x2, [x20, #216]
  4040a8:	str	w4, [x3, #24]
  4040ac:	str	x2, [x3, #32]
  4040b0:	ldr	w2, [x20, #40]
  4040b4:	cbz	w2, 4040d0 <nftw@plt+0x1550>
  4040b8:	add	x3, x1, w0, sxtw #4
  4040bc:	ldr	w4, [x20, #224]
  4040c0:	add	w0, w0, #0x1
  4040c4:	ldr	x2, [x20, #232]
  4040c8:	str	w4, [x3, #24]
  4040cc:	str	x2, [x3, #32]
  4040d0:	ldr	w2, [x20, #44]
  4040d4:	cbz	w2, 4040f0 <nftw@plt+0x1570>
  4040d8:	add	x3, x1, w0, sxtw #4
  4040dc:	ldr	w4, [x20, #240]
  4040e0:	add	w0, w0, #0x1
  4040e4:	ldr	x2, [x20, #248]
  4040e8:	str	w4, [x3, #24]
  4040ec:	str	x2, [x3, #32]
  4040f0:	ldr	w2, [x20, #48]
  4040f4:	cbz	w2, 404110 <nftw@plt+0x1590>
  4040f8:	add	x3, x1, w0, sxtw #4
  4040fc:	ldr	w4, [x20, #256]
  404100:	add	w0, w0, #0x1
  404104:	ldr	x2, [x20, #264]
  404108:	str	w4, [x3, #24]
  40410c:	str	x2, [x3, #32]
  404110:	ldr	w2, [x20, #52]
  404114:	cbz	w2, 404130 <nftw@plt+0x15b0>
  404118:	add	x3, x1, w0, sxtw #4
  40411c:	ldr	w4, [x20, #272]
  404120:	add	w0, w0, #0x1
  404124:	ldr	x2, [x20, #280]
  404128:	str	w4, [x3, #24]
  40412c:	str	x2, [x3, #32]
  404130:	ldr	w2, [x20, #56]
  404134:	cbz	w2, 404150 <nftw@plt+0x15d0>
  404138:	add	x3, x1, w0, sxtw #4
  40413c:	ldr	w4, [x20, #288]
  404140:	add	w0, w0, #0x1
  404144:	ldr	x2, [x20, #296]
  404148:	str	w4, [x3, #24]
  40414c:	str	x2, [x3, #32]
  404150:	ldr	w2, [x20, #60]
  404154:	cbz	w2, 404170 <nftw@plt+0x15f0>
  404158:	add	x3, x1, w0, sxtw #4
  40415c:	ldr	w4, [x20, #304]
  404160:	add	w0, w0, #0x1
  404164:	ldr	x2, [x20, #312]
  404168:	str	w4, [x3, #24]
  40416c:	str	x2, [x3, #32]
  404170:	ldr	w2, [x20, #64]
  404174:	cbz	w2, 404190 <nftw@plt+0x1610>
  404178:	add	x3, x1, w0, sxtw #4
  40417c:	ldr	w4, [x20, #320]
  404180:	add	w0, w0, #0x1
  404184:	ldr	x2, [x20, #328]
  404188:	str	w4, [x3, #24]
  40418c:	str	x2, [x3, #32]
  404190:	ldr	w2, [x20, #68]
  404194:	cbnz	w2, 4043c0 <nftw@plt+0x1840>
  404198:	str	w0, [x20, #68]
  40419c:	ldp	x3, x2, [x20, #104]
  4041a0:	add	x19, x20, #0x50
  4041a4:	sub	x2, x2, x3
  4041a8:	cmp	x2, #0x7
  4041ac:	b.ls	404434 <nftw@plt+0x18b4>  // b.plast
  4041b0:	str	x1, [x3]
  4041b4:	ldr	w2, [x20, #168]
  4041b8:	ldp	x4, x1, [x20, #96]
  4041bc:	str	w2, [x25, #104]
  4041c0:	add	x1, x1, #0x8
  4041c4:	cmp	x1, x4
  4041c8:	b.eq	40444c <nftw@plt+0x18cc>  // b.none
  4041cc:	ldr	x0, [x20, #128]
  4041d0:	ldr	x3, [x20, #88]
  4041d4:	add	x1, x1, x0
  4041d8:	ldr	x5, [x20, #112]
  4041dc:	bic	x0, x1, x0
  4041e0:	str	x0, [x20, #104]
  4041e4:	sub	x1, x0, x3
  4041e8:	sub	x3, x5, x3
  4041ec:	cmp	x1, x3
  4041f0:	b.ls	4041fc <nftw@plt+0x167c>  // b.plast
  4041f4:	mov	x0, x5
  4041f8:	str	x5, [x20, #104]
  4041fc:	ldr	w1, [x20, #32]
  404200:	str	x0, [x20, #96]
  404204:	str	x4, [x25, #112]
  404208:	cbz	w1, 404218 <nftw@plt+0x1698>
  40420c:	adrp	x0, 407000 <nftw@plt+0x4480>
  404210:	add	x0, x0, #0xf10
  404214:	str	x0, [x25, #32]
  404218:	ldr	w0, [x20, #36]
  40421c:	cbz	w0, 40422c <nftw@plt+0x16ac>
  404220:	adrp	x0, 407000 <nftw@plt+0x4480>
  404224:	add	x0, x0, #0xf10
  404228:	str	x0, [x25, #40]
  40422c:	ldr	w0, [x20, #40]
  404230:	cbz	w0, 404240 <nftw@plt+0x16c0>
  404234:	adrp	x0, 407000 <nftw@plt+0x4480>
  404238:	add	x0, x0, #0xf10
  40423c:	str	x0, [x25, #48]
  404240:	ldr	w0, [x20, #44]
  404244:	cbz	w0, 404254 <nftw@plt+0x16d4>
  404248:	adrp	x0, 408000 <nftw@plt+0x5480>
  40424c:	add	x0, x0, #0x10
  404250:	str	x0, [x25, #56]
  404254:	ldr	w0, [x20, #48]
  404258:	cbz	w0, 404268 <nftw@plt+0x16e8>
  40425c:	adrp	x0, 408000 <nftw@plt+0x5480>
  404260:	add	x0, x0, #0x10
  404264:	str	x0, [x25, #64]
  404268:	ldr	w0, [x20, #52]
  40426c:	cbz	w0, 40427c <nftw@plt+0x16fc>
  404270:	adrp	x0, 407000 <nftw@plt+0x4480>
  404274:	add	x0, x0, #0xf10
  404278:	str	x0, [x25, #72]
  40427c:	ldr	w0, [x20, #56]
  404280:	cbz	w0, 404290 <nftw@plt+0x1710>
  404284:	adrp	x0, 407000 <nftw@plt+0x4480>
  404288:	add	x0, x0, #0xf70
  40428c:	str	x0, [x25, #80]
  404290:	ldr	w0, [x20, #60]
  404294:	cbz	w0, 4042a4 <nftw@plt+0x1724>
  404298:	adrp	x0, 407000 <nftw@plt+0x4480>
  40429c:	add	x0, x0, #0xfb8
  4042a0:	str	x0, [x25, #88]
  4042a4:	ldr	w0, [x20, #64]
  4042a8:	cbz	w0, 4042b8 <nftw@plt+0x1738>
  4042ac:	adrp	x0, 408000 <nftw@plt+0x5480>
  4042b0:	add	x0, x0, #0x118
  4042b4:	str	x0, [x25, #96]
  4042b8:	bl	405d00 <nftw@plt+0x3180>
  4042bc:	ldr	x0, [x20, #336]
  4042c0:	str	x0, [x25, #8]
  4042c4:	str	x25, [x20, #336]
  4042c8:	ldp	x19, x20, [sp, #16]
  4042cc:	ldp	x21, x22, [sp, #32]
  4042d0:	ldp	x25, x26, [sp, #64]
  4042d4:	ldp	x27, x28, [sp, #80]
  4042d8:	mov	w0, #0x0                   	// #0
  4042dc:	ldp	x23, x24, [sp, #48]
  4042e0:	ldp	x29, x30, [sp], #128
  4042e4:	ret
  4042e8:	mov	w0, #0x0                   	// #0
  4042ec:	ret
  4042f0:	adrp	x0, 4a4000 <_obstack_memory_used@@Base+0x42bb8>
  4042f4:	mov	x2, x23
  4042f8:	adrp	x1, 472000 <_obstack_memory_used@@Base+0x10bb8>
  4042fc:	add	x1, x1, #0xac0
  404300:	ldr	x0, [x0, #1392]
  404304:	bl	4090a8 <nftw@plt+0x6528>
  404308:	b	403e38 <nftw@plt+0x12b8>
  40430c:	adrp	x0, 4a4000 <_obstack_memory_used@@Base+0x42bb8>
  404310:	mov	x2, x23
  404314:	adrp	x1, 472000 <_obstack_memory_used@@Base+0x10bb8>
  404318:	add	x1, x1, #0xae8
  40431c:	ldr	x0, [x0, #1392]
  404320:	bl	4090a8 <nftw@plt+0x6528>
  404324:	bl	405d00 <nftw@plt+0x3180>
  404328:	ldp	x19, x20, [sp, #16]
  40432c:	b	4042d8 <nftw@plt+0x1758>
  404330:	tst	w19, #0xffff
  404334:	mov	x4, #0x18                  	// #24
  404338:	b.ne	404354 <nftw@plt+0x17d4>  // b.any
  40433c:	mov	w0, #0xfe5f0000            	// #-27328512
  404340:	add	w0, w19, w0
  404344:	mov	x1, #0x30                  	// #48
  404348:	lsr	w0, w0, #17
  40434c:	cmp	w0, #0x8
  404350:	csel	x4, x4, x1, hi  // hi = pmore
  404354:	add	x4, x26, x4
  404358:	b	403f90 <nftw@plt+0x1410>
  40435c:	mov	w27, #0x3                   	// #3
  404360:	mov	w22, #0x4                   	// #4
  404364:	nop
  404368:	ldr	x1, [sp, #104]
  40436c:	mov	w3, w19
  404370:	mov	x2, x23
  404374:	mov	w0, #0x0                   	// #0
  404378:	str	w5, [sp, #96]
  40437c:	bl	40a780 <nftw@plt+0x7c00>
  404380:	ldr	w5, [sp, #96]
  404384:	b	403f70 <nftw@plt+0x13f0>
  404388:	sub	x3, x3, x0
  40438c:	mov	x2, x23
  404390:	adrp	x1, 472000 <_obstack_memory_used@@Base+0x10bb8>
  404394:	mov	w0, #0x0                   	// #0
  404398:	add	x1, x1, #0xb70
  40439c:	bl	40a780 <nftw@plt+0x7c00>
  4043a0:	b	404024 <nftw@plt+0x14a4>
  4043a4:	sub	x3, x0, x3
  4043a8:	mov	x2, x23
  4043ac:	adrp	x1, 472000 <_obstack_memory_used@@Base+0x10bb8>
  4043b0:	mov	w0, #0x0                   	// #0
  4043b4:	add	x1, x1, #0xba0
  4043b8:	bl	40a780 <nftw@plt+0x7c00>
  4043bc:	b	404024 <nftw@plt+0x14a4>
  4043c0:	cmp	w2, w0
  4043c4:	b.eq	40419c <nftw@plt+0x161c>  // b.none
  4043c8:	adrp	x2, 472000 <_obstack_memory_used@@Base+0x10bb8>
  4043cc:	adrp	x0, 472000 <_obstack_memory_used@@Base+0x10bb8>
  4043d0:	add	x2, x2, #0xbd0
  4043d4:	add	x0, x0, #0x9c8
  4043d8:	mov	w1, #0x6f                  	// #111
  4043dc:	bl	402bf0 <nftw@plt+0x70>
  4043e0:	mov	w27, #0x3                   	// #3
  4043e4:	mov	w22, #0x4                   	// #4
  4043e8:	b	403f70 <nftw@plt+0x13f0>
  4043ec:	adrp	x0, 4a4000 <_obstack_memory_used@@Base+0x42bb8>
  4043f0:	mov	x2, x23
  4043f4:	adrp	x1, 472000 <_obstack_memory_used@@Base+0x10bb8>
  4043f8:	add	x1, x1, #0xad8
  4043fc:	ldr	x0, [x0, #1392]
  404400:	bl	4090a8 <nftw@plt+0x6528>
  404404:	ldp	x19, x20, [sp, #16]
  404408:	b	4042d8 <nftw@plt+0x1758>
  40440c:	adrp	x0, 4a4000 <_obstack_memory_used@@Base+0x42bb8>
  404410:	mov	w3, w19
  404414:	mov	x2, x23
  404418:	adrp	x1, 472000 <_obstack_memory_used@@Base+0x10bb8>
  40441c:	ldr	x0, [x0, #1392]
  404420:	add	x1, x1, #0xb08
  404424:	bl	4090a8 <nftw@plt+0x6528>
  404428:	bl	405d00 <nftw@plt+0x3180>
  40442c:	ldp	x19, x20, [sp, #16]
  404430:	b	4042d8 <nftw@plt+0x1758>
  404434:	mov	x1, #0x8                   	// #8
  404438:	mov	x0, x19
  40443c:	bl	461200 <_obstack_newchunk@@Base>
  404440:	ldr	x3, [x20, #104]
  404444:	ldr	x1, [x20, #176]
  404448:	b	4041b0 <nftw@plt+0x1630>
  40444c:	ldrb	w2, [x20, #160]
  404450:	orr	w2, w2, #0x2
  404454:	strb	w2, [x20, #160]
  404458:	b	4041cc <nftw@plt+0x164c>
  40445c:	nop
  404460:	stp	x29, x30, [sp, #-48]!
  404464:	mov	w2, #0xfe5f0000            	// #-27328512
  404468:	add	w0, w0, w2
  40446c:	mov	x29, sp
  404470:	stp	x19, x20, [sp, #16]
  404474:	lsr	w0, w0, #17
  404478:	cmp	w0, #0x8
  40447c:	str	x21, [sp, #32]
  404480:	b.hi	4044f4 <nftw@plt+0x1974>  // b.pmore
  404484:	lsr	w20, w1, #1
  404488:	adrp	x1, 4a4000 <_obstack_memory_used@@Base+0x42bb8>
  40448c:	add	x1, x1, #0x5c0
  404490:	lsl	x2, x0, #4
  404494:	add	x3, x1, #0xc0
  404498:	add	x1, x1, #0x20
  40449c:	mov	w5, #0x1                   	// #1
  4044a0:	add	x19, x3, x2
  4044a4:	ldr	w4, [x3, x2]
  4044a8:	str	w5, [x1, x0, lsl #2]
  4044ac:	cbnz	w4, 40450c <nftw@plt+0x198c>
  4044b0:	str	w20, [x3, x2]
  4044b4:	ubfiz	x0, x20, #3, #31
  4044b8:	bl	402670 <malloc@plt>
  4044bc:	str	x0, [x19, #8]
  4044c0:	mov	x21, x0
  4044c4:	cbz	w20, 4044e4 <nftw@plt+0x1964>
  4044c8:	mov	x19, #0x0                   	// #0
  4044cc:	nop
  4044d0:	bl	406230 <nftw@plt+0x36b0>
  4044d4:	str	x0, [x21, x19, lsl #3]
  4044d8:	add	x19, x19, #0x1
  4044dc:	cmp	w20, w19
  4044e0:	b.ne	4044d0 <nftw@plt+0x1950>  // b.any
  4044e4:	ldp	x19, x20, [sp, #16]
  4044e8:	ldr	x21, [sp, #32]
  4044ec:	ldp	x29, x30, [sp], #48
  4044f0:	ret
  4044f4:	adrp	x2, 472000 <_obstack_memory_used@@Base+0x10bb8>
  4044f8:	adrp	x0, 472000 <_obstack_memory_used@@Base+0x10bb8>
  4044fc:	add	x2, x2, #0xbe0
  404500:	add	x0, x0, #0x9c8
  404504:	mov	w1, #0xd3                  	// #211
  404508:	bl	402bf0 <nftw@plt+0x70>
  40450c:	adrp	x2, 472000 <_obstack_memory_used@@Base+0x10bb8>
  404510:	adrp	x0, 472000 <_obstack_memory_used@@Base+0x10bb8>
  404514:	add	x2, x2, #0xbe0
  404518:	add	x0, x0, #0x9c8
  40451c:	mov	w1, #0xd5                  	// #213
  404520:	bl	402bf0 <nftw@plt+0x70>
  404524:	nop
  404528:	ret
  40452c:	nop
  404530:	stp	x29, x30, [sp, #-48]!
  404534:	mov	x29, sp
  404538:	stp	x19, x20, [sp, #16]
  40453c:	adrp	x19, 4a4000 <_obstack_memory_used@@Base+0x42bb8>
  404540:	add	x19, x19, #0x5c0
  404544:	str	x21, [sp, #32]
  404548:	ldr	w0, [x19, #168]
  40454c:	cbnz	w0, 4045d8 <nftw@plt+0x1a58>
  404550:	mov	x1, #0x1                   	// #1
  404554:	mov	x0, #0xb8                  	// #184
  404558:	bl	402710 <calloc@plt>
  40455c:	mov	x20, x0
  404560:	ldr	x0, [x19, #72]
  404564:	str	wzr, [x19, #68]
  404568:	str	x0, [x20]
  40456c:	str	x20, [x19, #176]
  404570:	str	wzr, [x19, #192]
  404574:	str	wzr, [x19, #208]
  404578:	str	wzr, [x19, #224]
  40457c:	str	wzr, [x19, #240]
  404580:	str	wzr, [x19, #256]
  404584:	str	wzr, [x19, #272]
  404588:	str	wzr, [x19, #288]
  40458c:	str	wzr, [x19, #304]
  404590:	str	wzr, [x19, #320]
  404594:	bl	406180 <nftw@plt+0x3600>
  404598:	ldr	x21, [x19, #176]
  40459c:	str	w0, [x20, #8]
  4045a0:	bl	406180 <nftw@plt+0x3600>
  4045a4:	str	w0, [x21, #12]
  4045a8:	ldr	x20, [x19, #176]
  4045ac:	bl	406180 <nftw@plt+0x3600>
  4045b0:	ldr	w1, [x19, #168]
  4045b4:	ldr	w2, [x19, #20]
  4045b8:	add	w1, w1, #0x1
  4045bc:	str	w0, [x20, #16]
  4045c0:	str	w1, [x19, #168]
  4045c4:	cbnz	w2, 404730 <nftw@plt+0x1bb0>
  4045c8:	ldp	x19, x20, [sp, #16]
  4045cc:	ldr	x21, [sp, #32]
  4045d0:	ldp	x29, x30, [sp], #48
  4045d4:	ret
  4045d8:	ldr	w0, [x19, #32]
  4045dc:	ldr	x1, [x19, #176]
  4045e0:	cbz	w0, 4045f8 <nftw@plt+0x1a78>
  4045e4:	ldr	w3, [x19, #192]
  4045e8:	mov	w0, #0x1                   	// #1
  4045ec:	ldr	x2, [x19, #200]
  4045f0:	str	w3, [x1, #24]
  4045f4:	str	x2, [x1, #32]
  4045f8:	ldr	w2, [x19, #36]
  4045fc:	cbz	w2, 404618 <nftw@plt+0x1a98>
  404600:	add	x3, x1, w0, sxtw #4
  404604:	ldr	w4, [x19, #208]
  404608:	add	w0, w0, #0x1
  40460c:	ldr	x2, [x19, #216]
  404610:	str	w4, [x3, #24]
  404614:	str	x2, [x3, #32]
  404618:	ldr	w2, [x19, #40]
  40461c:	cbz	w2, 404638 <nftw@plt+0x1ab8>
  404620:	add	x3, x1, w0, sxtw #4
  404624:	ldr	w4, [x19, #224]
  404628:	add	w0, w0, #0x1
  40462c:	ldr	x2, [x19, #232]
  404630:	str	w4, [x3, #24]
  404634:	str	x2, [x3, #32]
  404638:	ldr	w2, [x19, #44]
  40463c:	cbz	w2, 404658 <nftw@plt+0x1ad8>
  404640:	add	x3, x1, w0, sxtw #4
  404644:	ldr	w4, [x19, #240]
  404648:	add	w0, w0, #0x1
  40464c:	ldr	x2, [x19, #248]
  404650:	str	w4, [x3, #24]
  404654:	str	x2, [x3, #32]
  404658:	ldr	w2, [x19, #48]
  40465c:	cbz	w2, 404678 <nftw@plt+0x1af8>
  404660:	add	x3, x1, w0, sxtw #4
  404664:	ldr	w4, [x19, #256]
  404668:	add	w0, w0, #0x1
  40466c:	ldr	x2, [x19, #264]
  404670:	str	w4, [x3, #24]
  404674:	str	x2, [x3, #32]
  404678:	ldr	w2, [x19, #52]
  40467c:	cbz	w2, 404698 <nftw@plt+0x1b18>
  404680:	add	x3, x1, w0, sxtw #4
  404684:	ldr	w4, [x19, #272]
  404688:	add	w0, w0, #0x1
  40468c:	ldr	x2, [x19, #280]
  404690:	str	w4, [x3, #24]
  404694:	str	x2, [x3, #32]
  404698:	ldr	w2, [x19, #56]
  40469c:	cbz	w2, 4046b8 <nftw@plt+0x1b38>
  4046a0:	add	x3, x1, w0, sxtw #4
  4046a4:	ldr	w4, [x19, #288]
  4046a8:	add	w0, w0, #0x1
  4046ac:	ldr	x2, [x19, #296]
  4046b0:	str	w4, [x3, #24]
  4046b4:	str	x2, [x3, #32]
  4046b8:	ldr	w2, [x19, #60]
  4046bc:	cbz	w2, 4046d8 <nftw@plt+0x1b58>
  4046c0:	add	x3, x1, w0, sxtw #4
  4046c4:	ldr	w4, [x19, #304]
  4046c8:	add	w0, w0, #0x1
  4046cc:	ldr	x2, [x19, #312]
  4046d0:	str	w4, [x3, #24]
  4046d4:	str	x2, [x3, #32]
  4046d8:	ldr	w2, [x19, #64]
  4046dc:	cbz	w2, 4046f8 <nftw@plt+0x1b78>
  4046e0:	add	x3, x1, w0, sxtw #4
  4046e4:	ldr	w4, [x19, #320]
  4046e8:	add	w0, w0, #0x1
  4046ec:	ldr	x2, [x19, #328]
  4046f0:	str	w4, [x3, #24]
  4046f4:	str	x2, [x3, #32]
  4046f8:	ldr	w2, [x19, #68]
  4046fc:	cbz	w2, 404758 <nftw@plt+0x1bd8>
  404700:	cmp	w2, w0
  404704:	b.ne	404788 <nftw@plt+0x1c08>  // b.any
  404708:	ldp	x0, x2, [x19, #104]
  40470c:	add	x20, x19, #0x50
  404710:	sub	x2, x2, x0
  404714:	cmp	x2, #0x7
  404718:	b.ls	404770 <nftw@plt+0x1bf0>  // b.plast
  40471c:	str	x1, [x0]
  404720:	ldr	x0, [x19, #104]
  404724:	add	x0, x0, #0x8
  404728:	str	x0, [x19, #104]
  40472c:	b	404550 <nftw@plt+0x19d0>
  404730:	ldr	x2, [x19, #176]
  404734:	adrp	x0, 4a4000 <_obstack_memory_used@@Base+0x42bb8>
  404738:	ldp	x19, x20, [sp, #16]
  40473c:	adrp	x1, 472000 <_obstack_memory_used@@Base+0x10bb8>
  404740:	ldr	x21, [sp, #32]
  404744:	add	x1, x1, #0xbf0
  404748:	ldp	x29, x30, [sp], #48
  40474c:	ldr	x0, [x0, #1416]
  404750:	ldr	w2, [x2, #8]
  404754:	b	4090a8 <nftw@plt+0x6528>
  404758:	str	w0, [x19, #68]
  40475c:	add	x20, x19, #0x50
  404760:	ldp	x0, x2, [x19, #104]
  404764:	sub	x2, x2, x0
  404768:	cmp	x2, #0x7
  40476c:	b.hi	40471c <nftw@plt+0x1b9c>  // b.pmore
  404770:	mov	x0, x20
  404774:	mov	x1, #0x8                   	// #8
  404778:	bl	461200 <_obstack_newchunk@@Base>
  40477c:	ldr	x0, [x19, #104]
  404780:	ldr	x1, [x19, #176]
  404784:	b	40471c <nftw@plt+0x1b9c>
  404788:	adrp	x2, 472000 <_obstack_memory_used@@Base+0x10bb8>
  40478c:	adrp	x0, 472000 <_obstack_memory_used@@Base+0x10bb8>
  404790:	add	x2, x2, #0xbd0
  404794:	add	x0, x0, #0x9c8
  404798:	mov	w1, #0x6f                  	// #111
  40479c:	bl	402bf0 <nftw@plt+0x70>
  4047a0:	adrp	x0, 4a4000 <_obstack_memory_used@@Base+0x42bb8>
  4047a4:	mov	w1, #0x1                   	// #1
  4047a8:	str	w1, [x0, #1492]
  4047ac:	ret
  4047b0:	stp	x29, x30, [sp, #-48]!
  4047b4:	mov	w1, #0x4                   	// #4
  4047b8:	mov	x29, sp
  4047bc:	stp	x19, x20, [sp, #16]
  4047c0:	adrp	x19, 4a4000 <_obstack_memory_used@@Base+0x42bb8>
  4047c4:	add	x19, x19, #0x5c0
  4047c8:	mov	x20, x0
  4047cc:	str	xzr, [x19, #336]
  4047d0:	bl	402810 <access@plt>
  4047d4:	cbnz	w0, 404830 <nftw@plt+0x1cb0>
  4047d8:	mov	x1, #0x0                   	// #0
  4047dc:	mov	x0, #0x0                   	// #0
  4047e0:	bl	4024c0 <getcwd@plt>
  4047e4:	str	x0, [sp, #40]
  4047e8:	cbz	x0, 404880 <nftw@plt+0x1d00>
  4047ec:	mov	x0, x20
  4047f0:	bl	4028f0 <chdir@plt>
  4047f4:	cbnz	w0, 404858 <nftw@plt+0x1cd8>
  4047f8:	mov	w2, #0x32                  	// #50
  4047fc:	adrp	x1, 403000 <nftw@plt+0x480>
  404800:	adrp	x0, 481000 <_obstack_memory_used@@Base+0x1fbb8>
  404804:	add	x1, x1, #0xde8
  404808:	add	x0, x0, #0x4c0
  40480c:	bl	402ae0 <ftw@plt>
  404810:	ldr	x0, [sp, #40]
  404814:	bl	4028f0 <chdir@plt>
  404818:	ldr	x0, [sp, #40]
  40481c:	bl	402910 <free@plt>
  404820:	ldr	x0, [x19, #336]
  404824:	ldp	x19, x20, [sp, #16]
  404828:	ldp	x29, x30, [sp], #48
  40482c:	ret
  404830:	adrp	x0, 4a4000 <_obstack_memory_used@@Base+0x42bb8>
  404834:	mov	x2, x20
  404838:	adrp	x1, 472000 <_obstack_memory_used@@Base+0x10bb8>
  40483c:	add	x1, x1, #0xc08
  404840:	ldr	x0, [x0, #1392]
  404844:	bl	4090a8 <nftw@plt+0x6528>
  404848:	mov	x0, #0x0                   	// #0
  40484c:	ldp	x19, x20, [sp, #16]
  404850:	ldp	x29, x30, [sp], #48
  404854:	ret
  404858:	adrp	x0, 4a4000 <_obstack_memory_used@@Base+0x42bb8>
  40485c:	mov	x2, x20
  404860:	adrp	x1, 472000 <_obstack_memory_used@@Base+0x10bb8>
  404864:	add	x1, x1, #0xc40
  404868:	ldr	x0, [x0, #1392]
  40486c:	bl	4090a8 <nftw@plt+0x6528>
  404870:	mov	x0, #0x0                   	// #0
  404874:	ldp	x19, x20, [sp, #16]
  404878:	ldp	x29, x30, [sp], #48
  40487c:	ret
  404880:	adrp	x2, 472000 <_obstack_memory_used@@Base+0x10bb8>
  404884:	adrp	x0, 472000 <_obstack_memory_used@@Base+0x10bb8>
  404888:	add	x2, x2, #0xc28
  40488c:	add	x0, x0, #0x9c8
  404890:	mov	w1, #0x1c6                 	// #454
  404894:	bl	402bf0 <nftw@plt+0x70>
  404898:	adrp	x2, 4a4000 <_obstack_memory_used@@Base+0x42bb8>
  40489c:	add	x1, x2, #0x5c0
  4048a0:	ldp	w0, w3, [x1, #8]
  4048a4:	cmp	w0, w3
  4048a8:	b.cs	4048c0 <nftw@plt+0x1d40>  // b.hs, b.nlast
  4048ac:	ldr	x2, [x2, #1472]
  4048b0:	add	w3, w0, #0x1
  4048b4:	str	w3, [x1, #8]
  4048b8:	ldr	x0, [x2, w0, uxtw #3]
  4048bc:	ret
  4048c0:	stp	x29, x30, [sp, #-16]!
  4048c4:	adrp	x2, 472000 <_obstack_memory_used@@Base+0x10bb8>
  4048c8:	adrp	x0, 472000 <_obstack_memory_used@@Base+0x10bb8>
  4048cc:	mov	x29, sp
  4048d0:	add	x2, x2, #0xc58
  4048d4:	add	x0, x0, #0x9c8
  4048d8:	mov	w1, #0x1ed                 	// #493
  4048dc:	bl	402bf0 <nftw@plt+0x70>
  4048e0:	adrp	x0, 4a4000 <_obstack_memory_used@@Base+0x42bb8>
  4048e4:	ldr	w0, [x0, #1488]
  4048e8:	ret
  4048ec:	nop
  4048f0:	stp	x29, x30, [sp, #-112]!
  4048f4:	mov	x29, sp
  4048f8:	stp	x19, x20, [sp, #16]
  4048fc:	mov	x20, x0
  404900:	mov	x19, x1
  404904:	stp	x21, x22, [sp, #32]
  404908:	stp	x23, x24, [sp, #48]
  40490c:	mov	w23, w3
  404910:	stp	x25, x26, [sp, #64]
  404914:	stp	x27, x28, [sp, #80]
  404918:	mov	w27, w2
  40491c:	cbz	x0, 404ad4 <nftw@plt+0x1f54>
  404920:	mov	w21, #0x0                   	// #0
  404924:	nop
  404928:	ldr	x0, [x0, #8]
  40492c:	mov	w1, w21
  404930:	add	w21, w21, #0x1
  404934:	cbnz	x0, 404928 <nftw@plt+0x1da8>
  404938:	ubfiz	x25, x1, #3, #32
  40493c:	ubfiz	x0, x21, #3, #32
  404940:	cbz	x19, 404ae8 <nftw@plt+0x1f68>
  404944:	mov	x1, x19
  404948:	mov	w24, #0x0                   	// #0
  40494c:	nop
  404950:	ldr	x1, [x1, #8]
  404954:	add	w24, w24, #0x1
  404958:	cbnz	x1, 404950 <nftw@plt+0x1dd0>
  40495c:	bl	402670 <malloc@plt>
  404960:	mov	x22, x0
  404964:	ubfiz	x0, x24, #3, #32
  404968:	bl	402670 <malloc@plt>
  40496c:	mov	x26, x0
  404970:	cbz	x20, 404ac4 <nftw@plt+0x1f44>
  404974:	mov	w0, #0x0                   	// #0
  404978:	str	x20, [x22, w0, uxtw #3]
  40497c:	add	w0, w0, #0x1
  404980:	ldr	x20, [x20, #8]
  404984:	cbnz	x20, 404978 <nftw@plt+0x1df8>
  404988:	cmp	w27, #0x1
  40498c:	ldr	x28, [x22, x25]
  404990:	b.le	4049bc <nftw@plt+0x1e3c>
  404994:	cbz	w21, 4049bc <nftw@plt+0x1e3c>
  404998:	sub	w27, w27, #0x1
  40499c:	mov	x20, #0x0                   	// #0
  4049a0:	ldr	x1, [x22, x20, lsl #3]
  4049a4:	mov	w2, w27
  4049a8:	add	x20, x20, #0x1
  4049ac:	mov	x0, x1
  4049b0:	bl	403a78 <nftw@plt+0xef8>
  4049b4:	cmp	w21, w20
  4049b8:	b.hi	4049a0 <nftw@plt+0x1e20>  // b.pmore
  4049bc:	cbz	x19, 404a64 <nftw@plt+0x1ee4>
  4049c0:	sub	w25, w21, #0x1
  4049c4:	add	x0, x22, #0x8
  4049c8:	adrp	x27, 472000 <_obstack_memory_used@@Base+0x10bb8>
  4049cc:	mov	w24, #0x0                   	// #0
  4049d0:	add	x1, x27, #0xc70
  4049d4:	add	x0, x0, w25, uxtw #3
  4049d8:	stp	x0, x1, [sp, #96]
  4049dc:	nop
  4049e0:	cmp	w21, #0x0
  4049e4:	b.le	404a1c <nftw@plt+0x1e9c>
  4049e8:	mov	x20, x22
  4049ec:	nop
  4049f0:	ldr	x27, [x20]
  4049f4:	cbz	x27, 404a0c <nftw@plt+0x1e8c>
  4049f8:	ldr	x1, [x19, #24]
  4049fc:	ldr	x25, [x27, #24]
  404a00:	mov	x0, x25
  404a04:	bl	402890 <strcmp@plt>
  404a08:	cbz	w0, 404a84 <nftw@plt+0x1f04>
  404a0c:	ldr	x0, [sp, #96]
  404a10:	add	x20, x20, #0x8
  404a14:	cmp	x0, x20
  404a18:	b.ne	4049f0 <nftw@plt+0x1e70>  // b.any
  404a1c:	str	x19, [x26, w24, uxtw #3]
  404a20:	add	w24, w24, #0x1
  404a24:	ldr	x19, [x19, #8]
  404a28:	cbnz	x19, 4049e0 <nftw@plt+0x1e60>
  404a2c:	cbz	w24, 404a64 <nftw@plt+0x1ee4>
  404a30:	sub	w23, w23, #0x1
  404a34:	mov	x19, #0x0                   	// #0
  404a38:	mov	x20, x28
  404a3c:	mov	w2, w23
  404a40:	ldr	x28, [x26, x19, lsl #3]
  404a44:	add	x19, x19, #0x1
  404a48:	mov	x1, x28
  404a4c:	mov	x0, x28
  404a50:	bl	403a78 <nftw@plt+0xef8>
  404a54:	str	xzr, [x28, #8]
  404a58:	str	x28, [x20, #8]
  404a5c:	cmp	w24, w19
  404a60:	b.hi	404a38 <nftw@plt+0x1eb8>  // b.pmore
  404a64:	mov	w0, #0x0                   	// #0
  404a68:	ldp	x19, x20, [sp, #16]
  404a6c:	ldp	x21, x22, [sp, #32]
  404a70:	ldp	x23, x24, [sp, #48]
  404a74:	ldp	x25, x26, [sp, #64]
  404a78:	ldp	x27, x28, [sp, #80]
  404a7c:	ldp	x29, x30, [sp], #112
  404a80:	ret
  404a84:	ldr	w4, [x19, #104]
  404a88:	ldr	w3, [x27, #104]
  404a8c:	str	xzr, [x20]
  404a90:	cmp	w3, w4
  404a94:	b.ne	404aac <nftw@plt+0x1f2c>  // b.any
  404a98:	mov	x0, x27
  404a9c:	mov	w2, w23
  404aa0:	mov	x1, x19
  404aa4:	bl	403a78 <nftw@plt+0xef8>
  404aa8:	b	404a24 <nftw@plt+0x1ea4>
  404aac:	adrp	x0, 4a4000 <_obstack_memory_used@@Base+0x42bb8>
  404ab0:	mov	x2, x25
  404ab4:	ldr	x1, [sp, #104]
  404ab8:	ldr	x0, [x0, #1392]
  404abc:	bl	4090a8 <nftw@plt+0x6528>
  404ac0:	b	404a1c <nftw@plt+0x1e9c>
  404ac4:	cmp	w27, #0x1
  404ac8:	ldr	x28, [x22, x25]
  404acc:	b.gt	404994 <nftw@plt+0x1e14>
  404ad0:	b	4049c0 <nftw@plt+0x1e40>
  404ad4:	cbz	x1, 404a64 <nftw@plt+0x1ee4>
  404ad8:	mov	x25, #0x7fffffff8           	// #34359738360
  404adc:	mov	x0, #0x0                   	// #0
  404ae0:	mov	w21, #0x0                   	// #0
  404ae4:	b	404944 <nftw@plt+0x1dc4>
  404ae8:	bl	402670 <malloc@plt>
  404aec:	mov	x22, x0
  404af0:	mov	x0, #0x0                   	// #0
  404af4:	bl	402670 <malloc@plt>
  404af8:	mov	x26, x0
  404afc:	b	404974 <nftw@plt+0x1df4>
  404b00:	stp	x29, x30, [sp, #-80]!
  404b04:	adrp	x3, 4a4000 <_obstack_memory_used@@Base+0x42bb8>
  404b08:	mov	x29, sp
  404b0c:	ldr	w3, [x3, #1492]
  404b10:	stp	x21, x22, [sp, #32]
  404b14:	stp	x23, x24, [sp, #48]
  404b18:	mov	x23, x0
  404b1c:	stp	w2, w1, [sp, #68]
  404b20:	str	s0, [sp, #76]
  404b24:	cbnz	w3, 404c00 <nftw@plt+0x2080>
  404b28:	adrp	x22, 472000 <_obstack_memory_used@@Base+0x10bb8>
  404b2c:	add	x22, x22, #0xf10
  404b30:	add	x22, x22, #0xe0
  404b34:	cbz	x23, 404bec <nftw@plt+0x206c>
  404b38:	stp	x19, x20, [sp, #16]
  404b3c:	nop
  404b40:	ldr	w1, [x23, #104]
  404b44:	mov	w21, #0x0                   	// #0
  404b48:	cbnz	w1, 404b5c <nftw@plt+0x1fdc>
  404b4c:	b	404be0 <nftw@plt+0x2060>
  404b50:	add	w21, w21, #0x1
  404b54:	cmp	w21, w1
  404b58:	b.cs	404be0 <nftw@plt+0x2060>  // b.hs, b.nlast
  404b5c:	ldr	x0, [x23, #112]
  404b60:	ldr	x19, [x0, w21, uxtw #3]
  404b64:	cbz	x19, 404b50 <nftw@plt+0x1fd0>
  404b68:	ldr	x0, [x19]
  404b6c:	cmp	x0, x23
  404b70:	b.ne	404b50 <nftw@plt+0x1fd0>  // b.any
  404b74:	add	x19, x19, #0x18
  404b78:	add	x24, x23, #0x20
  404b7c:	mov	x20, #0x0                   	// #0
  404b80:	ldr	x1, [x24, x20]
  404b84:	adrp	x2, 403000 <nftw@plt+0x480>
  404b88:	add	x3, sp, #0x4c
  404b8c:	add	x2, x2, #0xa38
  404b90:	mov	x4, #0x0                   	// #0
  404b94:	adrp	x7, 403000 <nftw@plt+0x480>
  404b98:	cbz	x1, 404bc4 <nftw@plt+0x2044>
  404b9c:	ldr	w5, [sp, #68]
  404ba0:	ldr	w1, [x19]
  404ba4:	ldr	x6, [x20, x22]
  404ba8:	ldr	x0, [x19, #8]
  404bac:	cbz	w5, 404bbc <nftw@plt+0x203c>
  404bb0:	add	x2, x7, #0xa50
  404bb4:	add	x4, sp, #0x44
  404bb8:	add	x3, sp, #0x48
  404bbc:	add	x19, x19, #0x10
  404bc0:	blr	x6
  404bc4:	add	x20, x20, #0x8
  404bc8:	cmp	x20, #0x48
  404bcc:	b.ne	404b80 <nftw@plt+0x2000>  // b.any
  404bd0:	ldr	w1, [x23, #104]
  404bd4:	add	w21, w21, #0x1
  404bd8:	cmp	w21, w1
  404bdc:	b.cc	404b5c <nftw@plt+0x1fdc>  // b.lo, b.ul, b.last
  404be0:	ldr	x23, [x23, #8]
  404be4:	cbnz	x23, 404b40 <nftw@plt+0x1fc0>
  404be8:	ldp	x19, x20, [sp, #16]
  404bec:	mov	w0, #0x0                   	// #0
  404bf0:	ldp	x21, x22, [sp, #32]
  404bf4:	ldp	x23, x24, [sp, #48]
  404bf8:	ldp	x29, x30, [sp], #80
  404bfc:	ret
  404c00:	adrp	x0, 4a4000 <_obstack_memory_used@@Base+0x42bb8>
  404c04:	fcvt	d0, s0
  404c08:	mov	w3, w2
  404c0c:	mov	w2, w1
  404c10:	ldr	x0, [x0, #1416]
  404c14:	adrp	x1, 472000 <_obstack_memory_used@@Base+0x10bb8>
  404c18:	add	x1, x1, #0xcb0
  404c1c:	bl	4090a8 <nftw@plt+0x6528>
  404c20:	b	404b28 <nftw@plt+0x1fa8>
  404c24:	nop
  404c28:	stp	x29, x30, [sp, #-48]!
  404c2c:	mov	x29, sp
  404c30:	str	x19, [sp, #16]
  404c34:	mov	x19, x0
  404c38:	cbz	x0, 404dc4 <nftw@plt+0x2244>
  404c3c:	movi	v3.4s, #0x0
  404c40:	mov	x7, x0
  404c44:	mov	x2, #0x0                   	// #0
  404c48:	ldr	w8, [x7, #104]
  404c4c:	cbz	w8, 404d50 <nftw@plt+0x21d0>
  404c50:	mov	x3, #0x0                   	// #0
  404c54:	ldr	x9, [x7, #112]
  404c58:	b	404c68 <nftw@plt+0x20e8>
  404c5c:	add	x3, x3, #0x1
  404c60:	cmp	w8, w3
  404c64:	b.ls	404d50 <nftw@plt+0x21d0>  // b.plast
  404c68:	ldr	x4, [x9, x3, lsl #3]
  404c6c:	cbz	x4, 404c5c <nftw@plt+0x20dc>
  404c70:	ldr	x5, [x4]
  404c74:	cmp	x5, x7
  404c78:	b.ne	404c5c <nftw@plt+0x20dc>  // b.any
  404c7c:	ldr	w6, [x4, #24]
  404c80:	cbz	w6, 404c5c <nftw@plt+0x20dc>
  404c84:	sub	w5, w6, #0x1
  404c88:	cmp	w5, #0x4
  404c8c:	ldr	x10, [x4, #32]
  404c90:	b.ls	404d88 <nftw@plt+0x2208>  // b.plast
  404c94:	lsr	w5, w6, #1
  404c98:	dup	v0.2d, x2
  404c9c:	mov	x4, x10
  404ca0:	add	x2, x10, w5, uxtw #4
  404ca4:	nop
  404ca8:	ldr	q1, [x4], #16
  404cac:	cmgt	v2.2d, v1.2d, v0.2d
  404cb0:	cmp	x4, x2
  404cb4:	bit	v0.16b, v1.16b, v2.16b
  404cb8:	b.ne	404ca8 <nftw@plt+0x2128>  // b.any
  404cbc:	ext	v2.16b, v0.16b, v3.16b, #8
  404cc0:	and	w4, w6, #0xfffffffe
  404cc4:	cmgt	v1.2d, v0.2d, v2.2d
  404cc8:	bif	v0.16b, v2.16b, v1.16b
  404ccc:	mov	x2, v0.d[0]
  404cd0:	tbz	w6, #0, 404c5c <nftw@plt+0x20dc>
  404cd4:	mov	w5, w4
  404cd8:	add	w11, w4, #0x1
  404cdc:	ldr	x5, [x10, x5, lsl #3]
  404ce0:	cmp	x2, x5
  404ce4:	csel	x2, x2, x5, ge  // ge = tcont
  404ce8:	cmp	w6, w11
  404cec:	b.ls	404c5c <nftw@plt+0x20dc>  // b.plast
  404cf0:	ldr	x0, [x10, w11, uxtw #3]
  404cf4:	add	w5, w4, #0x2
  404cf8:	cmp	x2, x0
  404cfc:	csel	x2, x2, x0, ge  // ge = tcont
  404d00:	cmp	w6, w5
  404d04:	b.ls	404c5c <nftw@plt+0x20dc>  // b.plast
  404d08:	ldr	x0, [x10, x5, lsl #3]
  404d0c:	add	w11, w4, #0x3
  404d10:	cmp	x2, x0
  404d14:	csel	x2, x2, x0, ge  // ge = tcont
  404d18:	cmp	w6, w11
  404d1c:	b.ls	404c5c <nftw@plt+0x20dc>  // b.plast
  404d20:	ldr	x0, [x10, w11, uxtw #3]
  404d24:	add	w4, w4, #0x4
  404d28:	cmp	x2, x0
  404d2c:	csel	x2, x2, x0, ge  // ge = tcont
  404d30:	cmp	w6, w4
  404d34:	b.ls	404c5c <nftw@plt+0x20dc>  // b.plast
  404d38:	ldr	x0, [x10, x4, lsl #3]
  404d3c:	add	x3, x3, #0x1
  404d40:	cmp	x2, x0
  404d44:	csel	x2, x2, x0, ge  // ge = tcont
  404d48:	cmp	w8, w3
  404d4c:	b.hi	404c68 <nftw@plt+0x20e8>  // b.pmore
  404d50:	ldr	x7, [x7, #8]
  404d54:	cbnz	x7, 404c48 <nftw@plt+0x20c8>
  404d58:	scvtf	s1, x2
  404d5c:	adrp	x0, 4a4000 <_obstack_memory_used@@Base+0x42bb8>
  404d60:	scvtf	s0, x1
  404d64:	ldr	w0, [x0, #1492]
  404d68:	fdiv	s0, s0, s1
  404d6c:	cbnz	w0, 404d90 <nftw@plt+0x2210>
  404d70:	mov	x0, x19
  404d74:	mov	w2, #0x0                   	// #0
  404d78:	ldr	x19, [sp, #16]
  404d7c:	mov	w1, #0x0                   	// #0
  404d80:	ldp	x29, x30, [sp], #48
  404d84:	b	404b00 <nftw@plt+0x1f80>
  404d88:	mov	w4, #0x0                   	// #0
  404d8c:	b	404cd4 <nftw@plt+0x2154>
  404d90:	adrp	x0, 4a4000 <_obstack_memory_used@@Base+0x42bb8>
  404d94:	adrp	x1, 472000 <_obstack_memory_used@@Base+0x10bb8>
  404d98:	add	x1, x1, #0xcd0
  404d9c:	str	s0, [sp, #44]
  404da0:	ldr	x0, [x0, #1416]
  404da4:	bl	4090a8 <nftw@plt+0x6528>
  404da8:	mov	x0, x19
  404dac:	ldr	s0, [sp, #44]
  404db0:	ldr	x19, [sp, #16]
  404db4:	mov	w2, #0x0                   	// #0
  404db8:	ldp	x29, x30, [sp], #48
  404dbc:	mov	w1, #0x0                   	// #0
  404dc0:	b	404b00 <nftw@plt+0x1f80>
  404dc4:	movi	v1.2s, #0x0
  404dc8:	mov	x2, #0x0                   	// #0
  404dcc:	b	404d5c <nftw@plt+0x21dc>
  404dd0:	stp	x29, x30, [sp, #-192]!
  404dd4:	mov	x29, sp
  404dd8:	stp	x19, x20, [sp, #16]
  404ddc:	mov	x19, x0
  404de0:	stp	x21, x22, [sp, #32]
  404de4:	mov	x22, x1
  404de8:	stp	x23, x24, [sp, #48]
  404dec:	mov	w24, #0x0                   	// #0
  404df0:	stp	x27, x28, [sp, #80]
  404df4:	stp	d8, d9, [sp, #96]
  404df8:	cbz	x0, 405600 <nftw@plt+0x2a80>
  404dfc:	stp	x25, x26, [sp, #64]
  404e00:	add	w24, w24, #0x1
  404e04:	ldr	x0, [x0, #8]
  404e08:	cbnz	x0, 404e00 <nftw@plt+0x2280>
  404e0c:	cbz	x22, 40560c <nftw@plt+0x2a8c>
  404e10:	mov	x0, x22
  404e14:	mov	w21, #0x0                   	// #0
  404e18:	ldr	x0, [x0, #8]
  404e1c:	add	w21, w21, #0x1
  404e20:	cbnz	x0, 404e18 <nftw@plt+0x2298>
  404e24:	add	w21, w21, w24
  404e28:	mov	w0, #0x30                  	// #48
  404e2c:	umull	x0, w21, w0
  404e30:	bl	402670 <malloc@plt>
  404e34:	mov	x20, x0
  404e38:	cbz	x19, 405624 <nftw@plt+0x2aa4>
  404e3c:	mov	w0, #0x0                   	// #0
  404e40:	mov	w3, #0x18                  	// #24
  404e44:	nop
  404e48:	umull	x1, w0, w3
  404e4c:	add	w0, w0, #0x1
  404e50:	add	x2, x20, x1
  404e54:	str	x19, [x20, x1]
  404e58:	ldr	x19, [x19, #8]
  404e5c:	str	xzr, [x2, #8]
  404e60:	cbnz	x19, 404e48 <nftw@plt+0x22c8>
  404e64:	cbz	x22, 404e8c <nftw@plt+0x230c>
  404e68:	mov	w3, #0x18                  	// #24
  404e6c:	nop
  404e70:	umull	x1, w0, w3
  404e74:	add	w0, w0, #0x1
  404e78:	add	x2, x20, x1
  404e7c:	str	xzr, [x20, x1]
  404e80:	str	x22, [x2, #8]
  404e84:	ldr	x22, [x22, #8]
  404e88:	cbnz	x22, 404e70 <nftw@plt+0x22f0>
  404e8c:	cmp	w24, w21
  404e90:	b.cs	40562c <nftw@plt+0x2aac>  // b.hs, b.nlast
  404e94:	mvn	w1, w24
  404e98:	sub	w0, w24, #0x1
  404e9c:	add	w1, w1, w21
  404ea0:	mov	w22, #0x18                  	// #24
  404ea4:	add	x1, x1, w24, uxtw
  404ea8:	add	x0, x0, #0x1
  404eac:	umaddl	x22, w24, w22, x20
  404eb0:	add	x19, x20, #0x20
  404eb4:	add	x1, x1, x1, lsl #1
  404eb8:	add	x0, x0, x0, lsl #1
  404ebc:	adrp	x27, 472000 <_obstack_memory_used@@Base+0x10bb8>
  404ec0:	add	x22, x22, #0x8
  404ec4:	add	x19, x19, x1, lsl #3
  404ec8:	add	x27, x27, #0xc70
  404ecc:	add	x0, x20, x0, lsl #3
  404ed0:	adrp	x28, 4a4000 <_obstack_memory_used@@Base+0x42bb8>
  404ed4:	str	x0, [sp, #128]
  404ed8:	str	w21, [sp, #136]
  404edc:	stp	d10, d11, [sp, #112]
  404ee0:	ldr	x25, [x22]
  404ee4:	cbz	x25, 404f3c <nftw@plt+0x23bc>
  404ee8:	cbz	w24, 404f3c <nftw@plt+0x23bc>
  404eec:	mov	x23, x20
  404ef0:	b	404f04 <nftw@plt+0x2384>
  404ef4:	ldr	x0, [sp, #128]
  404ef8:	add	x23, x23, #0x18
  404efc:	cmp	x0, x23
  404f00:	b.eq	404f3c <nftw@plt+0x23bc>  // b.none
  404f04:	ldr	x0, [x23, #8]
  404f08:	cbnz	x0, 404ef4 <nftw@plt+0x2374>
  404f0c:	ldr	x21, [x23]
  404f10:	ldr	x26, [x25, #24]
  404f14:	ldr	x1, [x21, #24]
  404f18:	mov	x0, x26
  404f1c:	bl	402890 <strcmp@plt>
  404f20:	cbnz	w0, 404ef4 <nftw@plt+0x2374>
  404f24:	ldr	w4, [x21, #104]
  404f28:	ldr	w3, [x25, #104]
  404f2c:	cmp	w3, w4
  404f30:	b.ne	405594 <nftw@plt+0x2a14>  // b.any
  404f34:	str	x25, [x23, #8]
  404f38:	str	xzr, [x22]
  404f3c:	add	x22, x22, #0x18
  404f40:	cmp	x19, x22
  404f44:	b.ne	404ee0 <nftw@plt+0x2360>  // b.any
  404f48:	ldr	w21, [sp, #136]
  404f4c:	adrp	x0, 4a4000 <_obstack_memory_used@@Base+0x42bb8>
  404f50:	adrp	x19, 4a4000 <_obstack_memory_used@@Base+0x42bb8>
  404f54:	add	x19, x19, #0x5c0
  404f58:	movi	d1, #0x0
  404f5c:	ldr	d2, [x0, #912]
  404f60:	add	x0, x19, #0x160
  404f64:	add	x2, x19, #0x180
  404f68:	mov	x1, x20
  404f6c:	ldr	w16, [x19, #392]
  404f70:	mov	w17, #0x0                   	// #0
  404f74:	ldp	w11, w8, [x0, #-8]
  404f78:	mov	w24, #0x0                   	// #0
  404f7c:	ldp	w10, w13, [x0]
  404f80:	mov	w9, #0x0                   	// #0
  404f84:	ldr	w0, [x19, #360]
  404f88:	mov	w26, #0x0                   	// #0
  404f8c:	stp	w0, wzr, [sp, #140]
  404f90:	mov	w23, #0x0                   	// #0
  404f94:	ldr	w0, [x19, #364]
  404f98:	mov	w7, #0x0                   	// #0
  404f9c:	str	w0, [sp, #128]
  404fa0:	mov	w12, #0x11                  	// #17
  404fa4:	ldr	w0, [x19, #368]
  404fa8:	str	w0, [sp, #136]
  404fac:	ldr	w0, [x19, #372]
  404fb0:	ldp	w30, w18, [x2, #-8]
  404fb4:	mov	w28, w0
  404fb8:	ldp	w14, w15, [x2]
  404fbc:	stp	wzr, wzr, [sp, #148]
  404fc0:	stp	wzr, wzr, [sp, #156]
  404fc4:	stp	wzr, wzr, [sp, #164]
  404fc8:	str	wzr, [sp, #172]
  404fcc:	nop
  404fd0:	ldp	x0, x4, [x1]
  404fd4:	cbz	x0, 405424 <nftw@plt+0x28a4>
  404fd8:	ldr	w6, [x0, #104]
  404fdc:	add	w10, w10, #0x1
  404fe0:	cbz	w6, 405544 <nftw@plt+0x29c4>
  404fe4:	mov	x2, #0x0                   	// #0
  404fe8:	ldr	x22, [x0, #112]
  404fec:	b	404ffc <nftw@plt+0x247c>
  404ff0:	add	x2, x2, #0x1
  404ff4:	cmp	w6, w2
  404ff8:	b.ls	405544 <nftw@plt+0x29c4>  // b.plast
  404ffc:	ldr	x3, [x22, x2, lsl #3]
  405000:	cbz	x3, 404ff0 <nftw@plt+0x2470>
  405004:	ldr	x5, [x3]
  405008:	cmp	x0, x5
  40500c:	b.ne	404ff0 <nftw@plt+0x2470>  // b.any
  405010:	ldr	w5, [x3, #24]
  405014:	cbz	w5, 404ff0 <nftw@plt+0x2470>
  405018:	ldr	x25, [x3, #32]
  40501c:	mov	x3, #0x0                   	// #0
  405020:	b	40502c <nftw@plt+0x24ac>
  405024:	cmp	w5, w3
  405028:	b.ls	404ff0 <nftw@plt+0x2470>  // b.plast
  40502c:	ldr	x26, [x25, x3, lsl #3]
  405030:	add	x3, x3, #0x1
  405034:	cmp	x26, #0x0
  405038:	b.le	405024 <nftw@plt+0x24a4>
  40503c:	fmul	d0, d2, d1
  405040:	mov	x2, #0x0                   	// #0
  405044:	fcvtzs	x5, d0
  405048:	b	405058 <nftw@plt+0x24d8>
  40504c:	add	x2, x2, #0x1
  405050:	cmp	w6, w2
  405054:	b.ls	4055d8 <nftw@plt+0x2a58>  // b.plast
  405058:	ldr	x3, [x22, x2, lsl #3]
  40505c:	cbz	x3, 40504c <nftw@plt+0x24cc>
  405060:	ldr	x25, [x3]
  405064:	cmp	x0, x25
  405068:	b.ne	40504c <nftw@plt+0x24cc>  // b.any
  40506c:	ldr	w25, [x3, #24]
  405070:	cbz	w25, 40504c <nftw@plt+0x24cc>
  405074:	ldr	x26, [x3, #32]
  405078:	mov	x3, #0x0                   	// #0
  40507c:	b	405088 <nftw@plt+0x2508>
  405080:	cmp	w25, w3
  405084:	b.ls	40504c <nftw@plt+0x24cc>  // b.plast
  405088:	ldr	x27, [x26, x3, lsl #3]
  40508c:	add	x3, x3, #0x1
  405090:	cmp	x5, x27
  405094:	b.ge	405080 <nftw@plt+0x2500>  // b.tcont
  405098:	ldr	w0, [sp, #140]
  40509c:	mov	w5, #0x4                   	// #4
  4050a0:	mov	w3, w5
  4050a4:	mov	w6, #0x1                   	// #1
  4050a8:	add	w0, w0, #0x1
  4050ac:	mov	w2, #0x0                   	// #0
  4050b0:	str	w0, [sp, #140]
  4050b4:	mov	w0, #0x84                  	// #132
  4050b8:	str	w6, [sp, #172]
  4050bc:	cbnz	x4, 405560 <nftw@plt+0x29e0>
  4050c0:	mov	w9, #0x1                   	// #1
  4050c4:	add	w11, w11, #0x1
  4050c8:	mov	w26, w9
  4050cc:	strb	w0, [x1, #16]
  4050d0:	cbnz	w5, 405518 <nftw@plt+0x2998>
  4050d4:	cmp	w2, #0x11
  4050d8:	b.ne	4050e8 <nftw@plt+0x2568>  // b.any
  4050dc:	add	w16, w16, #0x1
  4050e0:	mov	w0, #0x1                   	// #1
  4050e4:	str	w0, [sp, #152]
  4050e8:	add	w7, w7, #0x1
  4050ec:	add	x1, x1, #0x18
  4050f0:	cmp	w7, w21
  4050f4:	b.cc	404fd0 <nftw@plt+0x2450>  // b.lo, b.ul, b.last
  4050f8:	cbz	w23, 405100 <nftw@plt+0x2580>
  4050fc:	str	w8, [x19, #348]
  405100:	cbz	w26, 405108 <nftw@plt+0x2588>
  405104:	str	w10, [x19, #352]
  405108:	cbz	w9, 405110 <nftw@plt+0x2590>
  40510c:	str	w11, [x19, #344]
  405110:	cbz	w24, 405118 <nftw@plt+0x2598>
  405114:	str	w13, [x19, #356]
  405118:	ldr	w0, [sp, #144]
  40511c:	cbz	w0, 405124 <nftw@plt+0x25a4>
  405120:	str	w14, [x19, #384]
  405124:	ldr	w0, [sp, #148]
  405128:	cbz	w0, 405130 <nftw@plt+0x25b0>
  40512c:	str	w15, [x19, #388]
  405130:	ldr	w0, [sp, #152]
  405134:	cbz	w0, 40513c <nftw@plt+0x25bc>
  405138:	str	w16, [x19, #392]
  40513c:	ldr	w0, [sp, #160]
  405140:	cbz	w0, 405148 <nftw@plt+0x25c8>
  405144:	str	w28, [x19, #372]
  405148:	ldr	w0, [sp, #164]
  40514c:	cbz	w0, 405158 <nftw@plt+0x25d8>
  405150:	ldr	w0, [sp, #128]
  405154:	str	w0, [x19, #364]
  405158:	cbz	w17, 405160 <nftw@plt+0x25e0>
  40515c:	str	w18, [x19, #380]
  405160:	ldr	w0, [sp, #168]
  405164:	cbz	w0, 405170 <nftw@plt+0x25f0>
  405168:	ldr	w0, [sp, #136]
  40516c:	str	w0, [x19, #368]
  405170:	ldr	w0, [sp, #172]
  405174:	cbz	w0, 405180 <nftw@plt+0x2600>
  405178:	ldr	w0, [sp, #140]
  40517c:	str	w0, [x19, #360]
  405180:	ldr	w0, [sp, #156]
  405184:	cbz	w0, 40518c <nftw@plt+0x260c>
  405188:	str	w30, [x19, #376]
  40518c:	movi	d8, #0x0
  405190:	mov	w27, #0x0                   	// #0
  405194:	adrp	x28, 4a4000 <_obstack_memory_used@@Base+0x42bb8>
  405198:	str	x19, [sp, #128]
  40519c:	fmov	d9, d8
  4051a0:	ldr	x25, [x20]
  4051a4:	cbz	x25, 4057f8 <nftw@plt+0x2c78>
  4051a8:	ldrb	w24, [x20, #16]
  4051ac:	mov	w0, #0x11                  	// #17
  4051b0:	and	w0, w24, w0
  4051b4:	cmp	w0, #0x11
  4051b8:	b.eq	4053d4 <nftw@plt+0x2854>  // b.none
  4051bc:	adrp	x0, 4a4000 <_obstack_memory_used@@Base+0x42bb8>
  4051c0:	ldr	x22, [x25, #24]
  4051c4:	ldr	w0, [x0, #1448]
  4051c8:	cbnz	w0, 405220 <nftw@plt+0x26a0>
  4051cc:	mov	x0, x22
  4051d0:	bl	4616a8 <_obstack_memory_used@@Base+0x260>
  4051d4:	mov	w2, #0x2f                  	// #47
  4051d8:	add	x26, sp, #0xb8
  4051dc:	mov	x22, x0
  4051e0:	mov	x1, x26
  4051e4:	strh	w2, [sp, #184]
  4051e8:	bl	402a20 <strstr@plt>
  4051ec:	nop
  4051f0:	bl	4024f0 <strlen@plt>
  4051f4:	mov	x23, x0
  4051f8:	add	w23, w23, #0x1
  4051fc:	mov	x0, x22
  405200:	bl	4024f0 <strlen@plt>
  405204:	add	x0, x0, #0x2
  405208:	sub	x0, x0, w23, sxtw
  40520c:	mov	x1, x26
  405210:	add	x22, x22, x0
  405214:	mov	x0, x22
  405218:	bl	402a20 <strstr@plt>
  40521c:	cbnz	x0, 4051f0 <nftw@plt+0x2670>
  405220:	adrp	x0, 4a4000 <_obstack_memory_used@@Base+0x42bb8>
  405224:	add	x19, x0, #0x5a4
  405228:	ldr	w0, [x0, #1444]
  40522c:	cbnz	w0, 4058a4 <nftw@plt+0x2d24>
  405230:	ldr	x23, [x20, #8]
  405234:	cbz	x23, 4056f4 <nftw@plt+0x2b74>
  405238:	ldr	w4, [x25, #104]
  40523c:	movi	d10, #0x0
  405240:	cbz	w4, 4058e4 <nftw@plt+0x2d64>
  405244:	adrp	x0, 4a4000 <_obstack_memory_used@@Base+0x42bb8>
  405248:	fmov	d11, d10
  40524c:	add	x7, x0, #0x5b0
  405250:	mov	w26, #0x0                   	// #0
  405254:	b	405264 <nftw@plt+0x26e4>
  405258:	add	w26, w26, #0x1
  40525c:	cmp	w26, w4
  405260:	b.cs	405380 <nftw@plt+0x2800>  // b.hs, b.nlast
  405264:	ldr	x2, [x25, #112]
  405268:	mov	w0, w26
  40526c:	ldr	x1, [x23, #112]
  405270:	ldr	x3, [x2, x0, lsl #3]
  405274:	ldr	x0, [x1, x0, lsl #3]
  405278:	cbz	x3, 405258 <nftw@plt+0x26d8>
  40527c:	ldr	x1, [x3]
  405280:	cmp	x0, #0x0
  405284:	ccmp	x1, x25, #0x0, ne  // ne = any
  405288:	b.ne	405258 <nftw@plt+0x26d8>  // b.any
  40528c:	ldr	x1, [x0]
  405290:	cmp	x1, x23
  405294:	b.ne	405258 <nftw@plt+0x26d8>  // b.any
  405298:	ldr	w6, [x3, #24]
  40529c:	cbz	w6, 4058ec <nftw@plt+0x2d6c>
  4052a0:	movi	d2, #0x0
  4052a4:	adrp	x1, 4a4000 <_obstack_memory_used@@Base+0x42bb8>
  4052a8:	ldr	x8, [x3, #32]
  4052ac:	mov	x2, #0x0                   	// #0
  4052b0:	ldr	d5, [x1, #912]
  4052b4:	mov	w1, #0x0                   	// #0
  4052b8:	fmov	d1, d2
  4052bc:	fmov	d4, d2
  4052c0:	ldr	x9, [x0, #32]
  4052c4:	mov	w0, #0x0                   	// #0
  4052c8:	ldr	d3, [x8, x2, lsl #3]
  4052cc:	ldr	d0, [x9, x2, lsl #3]
  4052d0:	orr	v6.8b, v3.8b, v0.8b
  4052d4:	fmov	x10, d6
  4052d8:	cbz	x10, 405310 <nftw@plt+0x2790>
  4052dc:	scvtf	d3, d3
  4052e0:	scvtf	d0, d0
  4052e4:	fdiv	d3, d3, d4
  4052e8:	fdiv	d0, d0, d4
  4052ec:	fcmpe	d3, d5
  4052f0:	fadd	d1, d1, d3
  4052f4:	fadd	d2, d2, d0
  4052f8:	b.ge	405308 <nftw@plt+0x2788>  // b.tcont
  4052fc:	fcmpe	d0, d5
  405300:	mov	w0, #0x1                   	// #1
  405304:	b.lt	405310 <nftw@plt+0x2790>  // b.tstop
  405308:	mov	w1, #0x1                   	// #1
  40530c:	mov	w0, w1
  405310:	add	x2, x2, #0x1
  405314:	cmp	w6, w2
  405318:	b.hi	4052c8 <nftw@plt+0x2748>  // b.pmore
  40531c:	ldr	w2, [x19]
  405320:	fadd	d11, d11, d1
  405324:	fadd	d10, d10, d2
  405328:	cmp	w2, #0x0
  40532c:	csel	w0, w0, wzr, ne  // ne = any
  405330:	cbz	w0, 405258 <nftw@plt+0x26d8>
  405334:	ldr	w0, [x7]
  405338:	cmp	w0, #0x0
  40533c:	csinc	w1, w1, wzr, ne  // ne = any
  405340:	cbz	w1, 405258 <nftw@plt+0x26d8>
  405344:	mov	x0, #0x4059000000000000    	// #4636737291354636288
  405348:	fmov	d3, x0
  40534c:	movi	d0, #0x0
  405350:	ldr	w1, [x3, #8]
  405354:	fmul	d2, d2, d3
  405358:	fmul	d1, d1, d3
  40535c:	adrp	x0, 472000 <_obstack_memory_used@@Base+0x10bb8>
  405360:	add	x0, x0, #0xce0
  405364:	add	w26, w26, #0x1
  405368:	bl	402a90 <printf@plt>
  40536c:	ldr	w4, [x25, #104]
  405370:	adrp	x0, 4a4000 <_obstack_memory_used@@Base+0x42bb8>
  405374:	add	x7, x0, #0x5b0
  405378:	cmp	w26, w4
  40537c:	b.cc	405264 <nftw@plt+0x26e4>  // b.lo, b.ul, b.last
  405380:	stp	d11, d10, [sp, #176]
  405384:	ldr	w0, [x28, #1452]
  405388:	cbz	w0, 4053d4 <nftw@plt+0x2854>
  40538c:	adrp	x0, 4a4000 <_obstack_memory_used@@Base+0x42bb8>
  405390:	ldr	w0, [x0, #1456]
  405394:	cbz	w0, 4053a4 <nftw@plt+0x2824>
  405398:	mov	w0, #0x44                  	// #68
  40539c:	tst	w24, w0
  4053a0:	b.eq	4053d4 <nftw@plt+0x2854>  // b.none
  4053a4:	ldp	d11, d10, [sp, #176]
  4053a8:	mov	x0, #0x4059000000000000    	// #4636737291354636288
  4053ac:	fmov	d2, x0
  4053b0:	movi	d0, #0x0
  4053b4:	mov	x1, x22
  4053b8:	adrp	x0, 472000 <_obstack_memory_used@@Base+0x10bb8>
  4053bc:	fmul	d1, d11, d2
  4053c0:	fmul	d2, d10, d2
  4053c4:	add	x0, x0, #0xd18
  4053c8:	bl	402a90 <printf@plt>
  4053cc:	fadd	d9, d9, d11
  4053d0:	fadd	d8, d8, d10
  4053d4:	add	w27, w27, #0x1
  4053d8:	add	x20, x20, #0x18
  4053dc:	cmp	w27, w21
  4053e0:	b.cc	4051a0 <nftw@plt+0x2620>  // b.lo, b.ul, b.last
  4053e4:	ldr	w0, [x28, #1452]
  4053e8:	ldp	x25, x26, [sp, #64]
  4053ec:	ldp	d10, d11, [sp, #112]
  4053f0:	ldr	x19, [sp, #128]
  4053f4:	cbz	w0, 405650 <nftw@plt+0x2ad0>
  4053f8:	mov	x0, #0x4059000000000000    	// #4636737291354636288
  4053fc:	fmov	d1, x0
  405400:	movi	d0, #0x0
  405404:	adrp	x1, 472000 <_obstack_memory_used@@Base+0x10bb8>
  405408:	fmul	d2, d8, d1
  40540c:	fmul	d1, d9, d1
  405410:	add	x1, x1, #0x5c0
  405414:	adrp	x0, 472000 <_obstack_memory_used@@Base+0x10bb8>
  405418:	add	x0, x0, #0xd50
  40541c:	bl	402a90 <printf@plt>
  405420:	b	405650 <nftw@plt+0x2ad0>
  405424:	cbz	x4, 4050e8 <nftw@plt+0x2568>
  405428:	ldr	w6, [x4, #104]
  40542c:	add	w8, w8, #0x1
  405430:	add	w13, w13, #0x1
  405434:	mov	w23, #0x1                   	// #1
  405438:	mov	w3, #0x8                   	// #8
  40543c:	cbz	w6, 405570 <nftw@plt+0x29f0>
  405440:	mov	x0, #0x0                   	// #0
  405444:	ldr	x22, [x4, #112]
  405448:	b	405458 <nftw@plt+0x28d8>
  40544c:	add	x0, x0, #0x1
  405450:	cmp	w6, w0
  405454:	b.ls	405570 <nftw@plt+0x29f0>  // b.plast
  405458:	ldr	x2, [x22, x0, lsl #3]
  40545c:	cbz	x2, 40544c <nftw@plt+0x28cc>
  405460:	ldr	x5, [x2]
  405464:	cmp	x5, x4
  405468:	b.ne	40544c <nftw@plt+0x28cc>  // b.any
  40546c:	ldr	w5, [x2, #24]
  405470:	cbz	w5, 40544c <nftw@plt+0x28cc>
  405474:	ldr	x24, [x2, #32]
  405478:	mov	x2, #0x0                   	// #0
  40547c:	b	405488 <nftw@plt+0x2908>
  405480:	cmp	w5, w2
  405484:	b.ls	40544c <nftw@plt+0x28cc>  // b.plast
  405488:	ldr	x25, [x24, x2, lsl #3]
  40548c:	add	x2, x2, #0x1
  405490:	cmp	x25, #0x0
  405494:	b.le	405480 <nftw@plt+0x2900>
  405498:	fmul	d0, d2, d1
  40549c:	mov	x0, #0x0                   	// #0
  4054a0:	fcvtzs	x5, d0
  4054a4:	b	4054b4 <nftw@plt+0x2934>
  4054a8:	add	x0, x0, #0x1
  4054ac:	cmp	w6, w0
  4054b0:	b.ls	4055a8 <nftw@plt+0x2a28>  // b.plast
  4054b4:	ldr	x2, [x22, x0, lsl #3]
  4054b8:	cbz	x2, 4054a8 <nftw@plt+0x2928>
  4054bc:	ldr	x24, [x2]
  4054c0:	cmp	x24, x4
  4054c4:	b.ne	4054a8 <nftw@plt+0x2928>  // b.any
  4054c8:	ldr	w24, [x2, #24]
  4054cc:	cbz	w24, 4054a8 <nftw@plt+0x2928>
  4054d0:	ldr	x25, [x2, #32]
  4054d4:	mov	x2, #0x0                   	// #0
  4054d8:	b	4054e4 <nftw@plt+0x2964>
  4054dc:	cmp	w24, w2
  4054e0:	b.ls	4054a8 <nftw@plt+0x2928>  // b.plast
  4054e4:	ldr	x27, [x25, x2, lsl #3]
  4054e8:	add	x2, x2, #0x1
  4054ec:	cmp	x5, x27
  4054f0:	b.ge	4054dc <nftw@plt+0x295c>  // b.tcont
  4054f4:	ldr	w0, [sp, #128]
  4054f8:	and	w2, w3, w12
  4054fc:	add	w0, w0, #0x1
  405500:	str	w0, [sp, #128]
  405504:	orr	w0, w3, #0x40
  405508:	mov	w3, #0x1                   	// #1
  40550c:	mov	w24, w3
  405510:	strb	w0, [x1, #16]
  405514:	str	w3, [sp, #164]
  405518:	add	w14, w14, #0x1
  40551c:	mov	w3, #0x1                   	// #1
  405520:	str	w3, [sp, #144]
  405524:	mov	w3, #0x22                  	// #34
  405528:	and	w0, w0, w3
  40552c:	cmp	w0, w3
  405530:	b.ne	4050d4 <nftw@plt+0x2554>  // b.any
  405534:	mov	w0, #0x1                   	// #1
  405538:	add	w15, w15, #0x1
  40553c:	str	w0, [sp, #148]
  405540:	b	4050d4 <nftw@plt+0x2554>
  405544:	mov	w2, #0x1                   	// #1
  405548:	str	w2, [sp, #156]
  40554c:	add	w30, w30, #0x1
  405550:	mov	w3, w2
  405554:	mov	w5, #0x0                   	// #0
  405558:	mov	w0, #0x81                  	// #129
  40555c:	cbz	x4, 4050c0 <nftw@plt+0x2540>
  405560:	ldr	w6, [x4, #104]
  405564:	add	w13, w13, #0x1
  405568:	mov	w26, #0x1                   	// #1
  40556c:	cbnz	w6, 405440 <nftw@plt+0x28c0>
  405570:	and	w2, w3, w12
  405574:	mov	w17, #0x1                   	// #1
  405578:	mov	w4, #0x44                  	// #68
  40557c:	add	w18, w18, #0x1
  405580:	orr	w2, w2, #0x10
  405584:	orr	w0, w3, #0x10
  405588:	mov	w24, w17
  40558c:	and	w5, w3, w4
  405590:	b	4050cc <nftw@plt+0x254c>
  405594:	ldr	x0, [x28, #1392]
  405598:	mov	x2, x26
  40559c:	mov	x1, x27
  4055a0:	bl	4090a8 <nftw@plt+0x6528>
  4055a4:	b	404ef4 <nftw@plt+0x2374>
  4055a8:	add	w2, w28, #0x1
  4055ac:	orr	w0, w3, #0x20
  4055b0:	mov	w28, w2
  4055b4:	mov	w2, #0x44                  	// #68
  4055b8:	tst	w3, w2
  4055bc:	and	w2, w3, w12
  4055c0:	mov	w3, #0x1                   	// #1
  4055c4:	strb	w0, [x1, #16]
  4055c8:	str	w3, [sp, #160]
  4055cc:	mov	w24, w3
  4055d0:	b.eq	405524 <nftw@plt+0x29a4>  // b.none
  4055d4:	b	405518 <nftw@plt+0x2998>
  4055d8:	ldr	w0, [sp, #136]
  4055dc:	mov	w3, #0x1                   	// #1
  4055e0:	mov	w2, #0x0                   	// #0
  4055e4:	mov	w5, #0x0                   	// #0
  4055e8:	add	w0, w0, #0x1
  4055ec:	str	w0, [sp, #136]
  4055f0:	mov	w0, #0x82                  	// #130
  4055f4:	str	w3, [sp, #168]
  4055f8:	mov	w3, #0x2                   	// #2
  4055fc:	b	4050bc <nftw@plt+0x253c>
  405600:	cbz	x1, 4058fc <nftw@plt+0x2d7c>
  405604:	stp	x25, x26, [sp, #64]
  405608:	b	404e10 <nftw@plt+0x2290>
  40560c:	mov	w0, #0x30                  	// #48
  405610:	mov	w21, w24
  405614:	umull	x0, w24, w0
  405618:	bl	402670 <malloc@plt>
  40561c:	mov	x20, x0
  405620:	b	404e3c <nftw@plt+0x22bc>
  405624:	mov	w0, #0x0                   	// #0
  405628:	b	404e68 <nftw@plt+0x22e8>
  40562c:	cbnz	w21, 405914 <nftw@plt+0x2d94>
  405630:	movi	d8, #0x0
  405634:	adrp	x19, 4a4000 <_obstack_memory_used@@Base+0x42bb8>
  405638:	ldp	x25, x26, [sp, #64]
  40563c:	add	x19, x19, #0x5c0
  405640:	adrp	x28, 4a4000 <_obstack_memory_used@@Base+0x42bb8>
  405644:	fmov	d9, d8
  405648:	ldr	w0, [x28, #1452]
  40564c:	cbnz	w0, 4053f8 <nftw@plt+0x2878>
  405650:	adrp	x0, 472000 <_obstack_memory_used@@Base+0x10bb8>
  405654:	add	x0, x0, #0xd88
  405658:	bl	402830 <puts@plt>
  40565c:	ldr	w1, [x19, #352]
  405660:	adrp	x0, 472000 <_obstack_memory_used@@Base+0x10bb8>
  405664:	ldr	w2, [x19, #356]
  405668:	add	x0, x0, #0xdd8
  40566c:	ldr	w3, [x19, #344]
  405670:	sub	w3, w1, w3
  405674:	bl	402a90 <printf@plt>
  405678:	ldr	w1, [x19, #344]
  40567c:	adrp	x0, 472000 <_obstack_memory_used@@Base+0x10bb8>
  405680:	ldr	w2, [x19, #348]
  405684:	add	x0, x0, #0xe00
  405688:	bl	402a90 <printf@plt>
  40568c:	ldr	w1, [x19, #360]
  405690:	adrp	x0, 472000 <_obstack_memory_used@@Base+0x10bb8>
  405694:	ldr	w2, [x19, #364]
  405698:	add	x0, x0, #0xe20
  40569c:	ldr	w3, [x19, #384]
  4056a0:	bl	402a90 <printf@plt>
  4056a4:	ldr	w1, [x19, #368]
  4056a8:	adrp	x0, 472000 <_obstack_memory_used@@Base+0x10bb8>
  4056ac:	ldr	w2, [x19, #372]
  4056b0:	add	x0, x0, #0xe48
  4056b4:	ldr	w3, [x19, #388]
  4056b8:	bl	402a90 <printf@plt>
  4056bc:	ldr	w1, [x19, #376]
  4056c0:	adrp	x0, 472000 <_obstack_memory_used@@Base+0x10bb8>
  4056c4:	ldr	w2, [x19, #380]
  4056c8:	add	x0, x0, #0xe70
  4056cc:	ldr	w3, [x19, #392]
  4056d0:	bl	402a90 <printf@plt>
  4056d4:	mov	w0, #0x1                   	// #1
  4056d8:	ldp	x19, x20, [sp, #16]
  4056dc:	ldp	x21, x22, [sp, #32]
  4056e0:	ldp	x23, x24, [sp, #48]
  4056e4:	ldp	x27, x28, [sp, #80]
  4056e8:	ldp	d8, d9, [sp, #96]
  4056ec:	ldp	x29, x30, [sp], #192
  4056f0:	ret
  4056f4:	mov	x23, x25
  4056f8:	add	x5, sp, #0xb0
  4056fc:	str	xzr, [sp, #184]
  405700:	ldr	w6, [x23, #104]
  405704:	cbz	w6, 405898 <nftw@plt+0x2d18>
  405708:	movi	d0, #0x0
  40570c:	mov	x3, #0x0                   	// #0
  405710:	movi	v3.2d, #0x0
  405714:	ldr	x8, [x23, #112]
  405718:	fmov	d2, d0
  40571c:	b	40572c <nftw@plt+0x2bac>
  405720:	add	x3, x3, #0x1
  405724:	cmp	w6, w3
  405728:	b.ls	4057f0 <nftw@plt+0x2c70>  // b.plast
  40572c:	ldr	x0, [x8, x3, lsl #3]
  405730:	cbz	x0, 405720 <nftw@plt+0x2ba0>
  405734:	ldr	x1, [x0]
  405738:	cmp	x1, x23
  40573c:	b.ne	405720 <nftw@plt+0x2ba0>  // b.any
  405740:	ldr	w1, [x0, #24]
  405744:	cbz	w1, 405720 <nftw@plt+0x2ba0>
  405748:	sub	w2, w1, #0x1
  40574c:	cmp	w2, #0x2
  405750:	ldr	x2, [x0, #32]
  405754:	b.ls	4058dc <nftw@plt+0x2d5c>  // b.plast
  405758:	lsr	w0, w1, #1
  40575c:	mov	x4, x2
  405760:	add	x0, x2, w0, uxtw #4
  405764:	nop
  405768:	ldr	q1, [x4], #16
  40576c:	scvtf	v1.2d, v1.2d
  405770:	cmp	x0, x4
  405774:	fdiv	v1.2d, v1.2d, v3.2d
  405778:	mov	d4, v1.d[0]
  40577c:	mov	d1, v1.d[1]
  405780:	fadd	d0, d0, d4
  405784:	fadd	d0, d1, d0
  405788:	b.ne	405768 <nftw@plt+0x2be8>  // b.any
  40578c:	and	w0, w1, #0xfffffffe
  405790:	tbz	w1, #0, 405720 <nftw@plt+0x2ba0>
  405794:	mov	w4, w0
  405798:	add	w7, w0, #0x1
  40579c:	cmp	w1, w7
  4057a0:	ldr	d1, [x2, x4, lsl #3]
  4057a4:	scvtf	d1, d1
  4057a8:	fdiv	d1, d1, d2
  4057ac:	fadd	d0, d0, d1
  4057b0:	b.ls	405720 <nftw@plt+0x2ba0>  // b.plast
  4057b4:	ldr	d1, [x2, w7, uxtw #3]
  4057b8:	add	w0, w0, #0x2
  4057bc:	cmp	w1, w0
  4057c0:	scvtf	d1, d1
  4057c4:	fdiv	d1, d1, d2
  4057c8:	fadd	d0, d0, d1
  4057cc:	b.ls	405720 <nftw@plt+0x2ba0>  // b.plast
  4057d0:	ldr	d1, [x2, x0, lsl #3]
  4057d4:	add	x3, x3, #0x1
  4057d8:	cmp	w6, w3
  4057dc:	scvtf	d1, d1
  4057e0:	fdiv	d1, d1, d2
  4057e4:	fadd	d0, d0, d1
  4057e8:	b.hi	40572c <nftw@plt+0x2bac>  // b.pmore
  4057ec:	nop
  4057f0:	str	d0, [x5]
  4057f4:	b	405384 <nftw@plt+0x2804>
  4057f8:	ldr	x23, [x20, #8]
  4057fc:	cbz	x23, 4053d4 <nftw@plt+0x2854>
  405800:	ldrb	w24, [x20, #16]
  405804:	mov	w0, #0x11                  	// #17
  405808:	and	w0, w24, w0
  40580c:	cmp	w0, #0x11
  405810:	b.eq	4053d4 <nftw@plt+0x2854>  // b.none
  405814:	adrp	x0, 4a4000 <_obstack_memory_used@@Base+0x42bb8>
  405818:	ldr	x22, [x23, #24]
  40581c:	ldr	w0, [x0, #1448]
  405820:	cbnz	w0, 405878 <nftw@plt+0x2cf8>
  405824:	mov	x0, x22
  405828:	bl	4616a8 <_obstack_memory_used@@Base+0x260>
  40582c:	mov	w2, #0x2f                  	// #47
  405830:	add	x26, sp, #0xb8
  405834:	mov	x22, x0
  405838:	mov	x1, x26
  40583c:	strh	w2, [sp, #184]
  405840:	bl	402a20 <strstr@plt>
  405844:	nop
  405848:	bl	4024f0 <strlen@plt>
  40584c:	mov	x19, x0
  405850:	mov	x0, x22
  405854:	bl	4024f0 <strlen@plt>
  405858:	add	w2, w19, #0x1
  40585c:	add	x0, x0, #0x2
  405860:	mov	x1, x26
  405864:	sub	x0, x0, w2, sxtw
  405868:	add	x22, x22, x0
  40586c:	mov	x0, x22
  405870:	bl	402a20 <strstr@plt>
  405874:	cbnz	x0, 405848 <nftw@plt+0x2cc8>
  405878:	adrp	x0, 4a4000 <_obstack_memory_used@@Base+0x42bb8>
  40587c:	add	x19, x0, #0x5a4
  405880:	ldr	w0, [x0, #1444]
  405884:	cbnz	w0, 4058b8 <nftw@plt+0x2d38>
  405888:	ldr	w6, [x23, #104]
  40588c:	add	x5, sp, #0xb8
  405890:	str	xzr, [sp, #176]
  405894:	cbnz	w6, 405708 <nftw@plt+0x2b88>
  405898:	movi	d0, #0x0
  40589c:	str	d0, [x5]
  4058a0:	b	405384 <nftw@plt+0x2804>
  4058a4:	mov	x1, x22
  4058a8:	adrp	x0, 472000 <_obstack_memory_used@@Base+0x10bb8>
  4058ac:	add	x0, x0, #0xe98
  4058b0:	bl	402a90 <printf@plt>
  4058b4:	b	405230 <nftw@plt+0x26b0>
  4058b8:	mov	x1, x22
  4058bc:	adrp	x0, 472000 <_obstack_memory_used@@Base+0x10bb8>
  4058c0:	add	x0, x0, #0xe98
  4058c4:	bl	402a90 <printf@plt>
  4058c8:	ldr	x23, [x20, #8]
  4058cc:	str	xzr, [sp, #176]
  4058d0:	cbz	x23, 405238 <nftw@plt+0x26b8>
  4058d4:	add	x5, sp, #0xb8
  4058d8:	b	405700 <nftw@plt+0x2b80>
  4058dc:	mov	w0, #0x0                   	// #0
  4058e0:	b	405794 <nftw@plt+0x2c14>
  4058e4:	fmov	d11, d10
  4058e8:	b	405380 <nftw@plt+0x2800>
  4058ec:	movi	d0, #0x0
  4058f0:	fadd	d11, d11, d0
  4058f4:	fadd	d10, d10, d0
  4058f8:	b	405258 <nftw@plt+0x26d8>
  4058fc:	movi	d8, #0x0
  405900:	adrp	x19, 4a4000 <_obstack_memory_used@@Base+0x42bb8>
  405904:	adrp	x28, 4a4000 <_obstack_memory_used@@Base+0x42bb8>
  405908:	add	x19, x19, #0x5c0
  40590c:	fmov	d9, d8
  405910:	b	405648 <nftw@plt+0x2ac8>
  405914:	stp	d10, d11, [sp, #112]
  405918:	b	404f4c <nftw@plt+0x23cc>
  40591c:	nop
  405920:	stp	x29, x30, [sp, #-288]!
  405924:	mov	x8, x0
  405928:	adrp	x11, 4a4000 <_obstack_memory_used@@Base+0x42bb8>
  40592c:	mov	x29, sp
  405930:	add	x10, sp, #0xe0
  405934:	add	x12, sp, #0x120
  405938:	mov	w0, #0xffffffc8            	// #-56
  40593c:	mov	w9, #0xffffff80            	// #-128
  405940:	stp	x12, x12, [sp, #64]
  405944:	str	x10, [sp, #80]
  405948:	stp	w0, w9, [sp, #88]
  40594c:	stp	x19, x20, [sp, #16]
  405950:	ldr	x20, [x11, #1392]
  405954:	stp	x1, x2, [sp, #232]
  405958:	mov	x1, x8
  40595c:	ldp	x10, x11, [sp, #64]
  405960:	mov	x0, x20
  405964:	ldp	x8, x9, [sp, #80]
  405968:	add	x2, sp, #0x20
  40596c:	stp	x10, x11, [sp, #32]
  405970:	stp	x8, x9, [sp, #48]
  405974:	str	q0, [sp, #96]
  405978:	str	q1, [sp, #112]
  40597c:	str	q2, [sp, #128]
  405980:	str	q3, [sp, #144]
  405984:	str	q4, [sp, #160]
  405988:	str	q5, [sp, #176]
  40598c:	str	q6, [sp, #192]
  405990:	str	q7, [sp, #208]
  405994:	stp	x3, x4, [sp, #248]
  405998:	stp	x5, x6, [sp, #264]
  40599c:	str	x7, [sp, #280]
  4059a0:	bl	402a80 <vfprintf@plt>
  4059a4:	adrp	x1, 473000 <_obstack_memory_used@@Base+0x11bb8>
  4059a8:	mov	w19, w0
  4059ac:	add	x0, x1, #0x38
  4059b0:	bl	402ab0 <getenv@plt>
  4059b4:	cbnz	x0, 4059c8 <nftw@plt+0x2e48>
  4059b8:	mov	w0, w19
  4059bc:	ldp	x19, x20, [sp, #16]
  4059c0:	ldp	x29, x30, [sp], #288
  4059c4:	ret
  4059c8:	mov	x3, x20
  4059cc:	mov	x2, #0x21                  	// #33
  4059d0:	mov	x1, #0x1                   	// #1
  4059d4:	adrp	x0, 473000 <_obstack_memory_used@@Base+0x11bb8>
  4059d8:	add	x0, x0, #0x50
  4059dc:	bl	402950 <fwrite@plt>
  4059e0:	mov	w0, #0x1                   	// #1
  4059e4:	bl	402520 <exit@plt>
  4059e8:	stp	x29, x30, [sp, #-32]!
  4059ec:	adrp	x0, 4a4000 <_obstack_memory_used@@Base+0x42bb8>
  4059f0:	mov	x29, sp
  4059f4:	str	x19, [sp, #16]
  4059f8:	add	x19, x0, #0x760
  4059fc:	ldr	w1, [x19, #28]
  405a00:	ldr	w4, [x19, #12]
  405a04:	cmp	w1, #0x0
  405a08:	ldr	w1, [x19, #16]
  405a0c:	b.le	405a78 <nftw@plt+0x2ef8>
  405a10:	cmp	w1, w4
  405a14:	b.ne	405a58 <nftw@plt+0x2ed8>  // b.any
  405a18:	ldr	w5, [x19, #8]
  405a1c:	mov	x1, #0x1                   	// #1
  405a20:	ldr	x3, [x0, #1888]
  405a24:	add	w4, w5, w4
  405a28:	adrp	x0, 4a4000 <_obstack_memory_used@@Base+0x42bb8>
  405a2c:	mov	x2, #0x1000                	// #4096
  405a30:	add	x0, x0, #0x780
  405a34:	str	w4, [x19, #8]
  405a38:	stur	xzr, [x19, #12]
  405a3c:	bl	4028d0 <fread@plt>
  405a40:	ldr	w1, [x19, #16]
  405a44:	lsr	x0, x0, #2
  405a48:	add	w0, w1, w0
  405a4c:	str	w0, [x19, #16]
  405a50:	cbz	w0, 405a88 <nftw@plt+0x2f08>
  405a54:	ldr	w4, [x19, #12]
  405a58:	ubfiz	x0, x4, #2, #32
  405a5c:	add	w4, w4, #0x1
  405a60:	add	x0, x0, #0x20
  405a64:	str	w4, [x19, #12]
  405a68:	add	x0, x19, x0
  405a6c:	ldr	x19, [sp, #16]
  405a70:	ldp	x29, x30, [sp], #32
  405a74:	ret
  405a78:	mov	x0, #0x0                   	// #0
  405a7c:	ldr	x19, [sp, #16]
  405a80:	ldp	x29, x30, [sp], #32
  405a84:	ret
  405a88:	ldr	w1, [x19, #20]
  405a8c:	mov	x0, #0x0                   	// #0
  405a90:	add	w1, w1, #0x1
  405a94:	str	w1, [x19, #20]
  405a98:	b	405a6c <nftw@plt+0x2eec>
  405a9c:	nop
  405aa0:	stp	x29, x30, [sp, #-320]!
  405aa4:	mov	x29, sp
  405aa8:	stp	x19, x20, [sp, #16]
  405aac:	mov	x19, x2
  405ab0:	mov	w2, #0x322a                	// #12842
  405ab4:	movk	w2, #0x4139, lsl #16
  405ab8:	cmp	w1, w2
  405abc:	b.eq	405b7c <nftw@plt+0x2ffc>  // b.none
  405ac0:	mov	w2, #0x3941                	// #14657
  405ac4:	rev	w1, w1
  405ac8:	movk	w2, #0x2a32, lsl #16
  405acc:	stp	x21, x22, [sp, #32]
  405ad0:	str	w1, [sp, #48]
  405ad4:	str	w2, [sp, #56]
  405ad8:	cbz	x19, 405b8c <nftw@plt+0x300c>
  405adc:	adrp	x20, 473000 <_obstack_memory_used@@Base+0x11bb8>
  405ae0:	adrp	x21, 473000 <_obstack_memory_used@@Base+0x11bb8>
  405ae4:	add	x20, x20, #0x78
  405ae8:	add	x21, x21, #0x90
  405aec:	mov	x1, x21
  405af0:	mov	x4, x20
  405af4:	add	x0, sp, #0xc0
  405af8:	mov	w3, #0x2                   	// #2
  405afc:	mov	w2, #0x9                   	// #9
  405b00:	bl	4025b0 <sprintf@plt>
  405b04:	ldrb	w0, [sp, #48]
  405b08:	sub	w0, w0, #0x41
  405b0c:	and	w1, w0, #0xff
  405b10:	cmp	w1, #0x19
  405b14:	b.hi	405b2c <nftw@plt+0x2fac>  // b.pmore
  405b18:	ldrb	w2, [sp, #49]
  405b1c:	sub	w2, w2, #0x30
  405b20:	and	w1, w2, #0xff
  405b24:	cmp	w1, #0x9
  405b28:	b.ls	405b94 <nftw@plt+0x3014>  // b.plast
  405b2c:	adrp	x0, 473000 <_obstack_memory_used@@Base+0x11bb8>
  405b30:	add	x0, x0, #0xa0
  405b34:	add	x22, sp, #0x40
  405b38:	ldr	x1, [x0]
  405b3c:	str	x1, [sp, #64]
  405b40:	ldrh	w0, [x0, #8]
  405b44:	strh	w0, [sp, #72]
  405b48:	mov	x4, x22
  405b4c:	add	x2, sp, #0xc0
  405b50:	mov	x1, x19
  405b54:	add	x5, sp, #0x30
  405b58:	add	x3, sp, #0x38
  405b5c:	adrp	x0, 473000 <_obstack_memory_used@@Base+0x11bb8>
  405b60:	add	x0, x0, #0xb0
  405b64:	bl	405920 <nftw@plt+0x2da0>
  405b68:	mov	w0, #0x0                   	// #0
  405b6c:	ldp	x19, x20, [sp, #16]
  405b70:	ldp	x21, x22, [sp, #32]
  405b74:	ldp	x29, x30, [sp], #320
  405b78:	ret
  405b7c:	mov	w0, #0x1                   	// #1
  405b80:	ldp	x19, x20, [sp, #16]
  405b84:	ldp	x29, x30, [sp], #320
  405b88:	ret
  405b8c:	ldr	x19, [x0]
  405b90:	b	405adc <nftw@plt+0x2f5c>
  405b94:	ldrb	w3, [sp, #50]
  405b98:	sub	w3, w3, #0x30
  405b9c:	and	w1, w3, #0xff
  405ba0:	cmp	w1, #0x9
  405ba4:	b.hi	405b2c <nftw@plt+0x2fac>  // b.pmore
  405ba8:	ldrb	w1, [sp, #51]
  405bac:	add	w0, w0, w0, lsl #2
  405bb0:	add	x22, sp, #0x40
  405bb4:	adrp	x4, 473000 <_obstack_memory_used@@Base+0x11bb8>
  405bb8:	cmp	w1, #0x2a
  405bbc:	add	x4, x4, #0x80
  405bc0:	add	w2, w2, w0, lsl #1
  405bc4:	mov	x1, x21
  405bc8:	csel	x4, x4, x20, ne  // ne = any
  405bcc:	mov	x0, x22
  405bd0:	bl	4025b0 <sprintf@plt>
  405bd4:	b	405b48 <nftw@plt+0x2fc8>
  405bd8:	adrp	x1, 4a4000 <_obstack_memory_used@@Base+0x42bb8>
  405bdc:	add	x1, x1, #0x760
  405be0:	ldp	w2, w0, [x1, #8]
  405be4:	add	w0, w2, w0
  405be8:	ret
  405bec:	nop
  405bf0:	adrp	x1, 4a4000 <_obstack_memory_used@@Base+0x42bb8>
  405bf4:	add	x2, x1, #0x760
  405bf8:	mov	w0, #0x1                   	// #1
  405bfc:	ldr	x1, [x1, #1888]
  405c00:	cbz	x1, 405c08 <nftw@plt+0x3088>
  405c04:	ldr	w0, [x2, #24]
  405c08:	ret
  405c0c:	nop
  405c10:	stp	x29, x30, [sp, #-80]!
  405c14:	mov	x29, sp
  405c18:	stp	x19, x20, [sp, #16]
  405c1c:	mov	x19, x0
  405c20:	str	x21, [sp, #32]
  405c24:	adrp	x21, 4a4000 <_obstack_memory_used@@Base+0x42bb8>
  405c28:	strh	wzr, [sp, #50]
  405c2c:	add	x20, x21, #0x760
  405c30:	stp	xzr, xzr, [sp, #56]
  405c34:	bl	402630 <getpid@plt>
  405c38:	mov	w3, w0
  405c3c:	adrp	x0, 473000 <_obstack_memory_used@@Base+0x11bb8>
  405c40:	mov	w4, #0x1                   	// #1
  405c44:	mov	w2, #0x1b6                 	// #438
  405c48:	mov	w1, #0x42                  	// #66
  405c4c:	ldr	q0, [x0, #944]
  405c50:	mov	x0, x19
  405c54:	str	wzr, [x20, #24]
  405c58:	strh	w4, [sp, #48]
  405c5c:	stur	q0, [x20, #8]
  405c60:	str	w3, [sp, #72]
  405c64:	bl	402680 <open@plt>
  405c68:	tbnz	w0, #31, 405cd0 <nftw@plt+0x3150>
  405c6c:	mov	w19, w0
  405c70:	add	x2, sp, #0x30
  405c74:	mov	w0, w19
  405c78:	mov	w1, #0x7                   	// #7
  405c7c:	bl	402960 <fcntl@plt>
  405c80:	cbz	w0, 405c94 <nftw@plt+0x3114>
  405c84:	bl	402aa0 <__errno_location@plt>
  405c88:	ldr	w0, [x0]
  405c8c:	cmp	w0, #0x4
  405c90:	b.eq	405c70 <nftw@plt+0x30f0>  // b.none
  405c94:	mov	w0, w19
  405c98:	adrp	x1, 473000 <_obstack_memory_used@@Base+0x11bb8>
  405c9c:	add	x1, x1, #0x100
  405ca0:	bl	45fcd0 <nftw@plt+0x5d150>
  405ca4:	str	x0, [x21, #1888]
  405ca8:	cbz	x0, 405ce4 <nftw@plt+0x3164>
  405cac:	mov	w19, #0x1                   	// #1
  405cb0:	mov	x1, #0x0                   	// #0
  405cb4:	str	w19, [x20, #28]
  405cb8:	bl	402570 <setbuf@plt>
  405cbc:	mov	w0, w19
  405cc0:	ldp	x19, x20, [sp, #16]
  405cc4:	ldr	x21, [sp, #32]
  405cc8:	ldp	x29, x30, [sp], #80
  405ccc:	ret
  405cd0:	mov	w0, #0x0                   	// #0
  405cd4:	ldp	x19, x20, [sp, #16]
  405cd8:	ldr	x21, [sp, #32]
  405cdc:	ldp	x29, x30, [sp], #80
  405ce0:	ret
  405ce4:	mov	w0, w19
  405ce8:	bl	4027a0 <close@plt>
  405cec:	mov	w0, #0x0                   	// #0
  405cf0:	ldp	x19, x20, [sp, #16]
  405cf4:	ldr	x21, [sp, #32]
  405cf8:	ldp	x29, x30, [sp], #80
  405cfc:	ret
  405d00:	stp	x29, x30, [sp, #-48]!
  405d04:	mov	x29, sp
  405d08:	stp	x19, x20, [sp, #16]
  405d0c:	adrp	x20, 4a4000 <_obstack_memory_used@@Base+0x42bb8>
  405d10:	add	x19, x20, #0x760
  405d14:	ldr	x0, [x20, #1888]
  405d18:	cbz	x0, 405d38 <nftw@plt+0x31b8>
  405d1c:	str	x21, [sp, #32]
  405d20:	ldr	w21, [x19, #12]
  405d24:	cbnz	w21, 405d4c <nftw@plt+0x31cc>
  405d28:	bl	402620 <fclose@plt>
  405d2c:	str	xzr, [x20, #1888]
  405d30:	ldr	x21, [sp, #32]
  405d34:	str	wzr, [x19, #16]
  405d38:	ldr	w0, [x19, #24]
  405d3c:	str	wzr, [x19, #28]
  405d40:	ldp	x19, x20, [sp, #16]
  405d44:	ldp	x29, x30, [sp], #48
  405d48:	ret
  405d4c:	ldr	w1, [x19, #28]
  405d50:	tbz	w1, #31, 405d28 <nftw@plt+0x31a8>
  405d54:	mov	x3, x0
  405d58:	lsl	w1, w21, #2
  405d5c:	adrp	x0, 4a4000 <_obstack_memory_used@@Base+0x42bb8>
  405d60:	mov	x2, #0x1                   	// #1
  405d64:	add	x0, x0, #0x780
  405d68:	bl	402950 <fwrite@plt>
  405d6c:	cmp	x0, #0x1
  405d70:	b.eq	405d7c <nftw@plt+0x31fc>  // b.none
  405d74:	mov	w0, #0x1                   	// #1
  405d78:	str	w0, [x19, #24]
  405d7c:	ldp	w2, w1, [x19, #8]
  405d80:	ldr	x0, [x20, #1888]
  405d84:	add	w2, w2, w21
  405d88:	sub	w21, w1, w21
  405d8c:	stp	w2, w21, [x19, #8]
  405d90:	b	405d28 <nftw@plt+0x31a8>
  405d94:	nop
  405d98:	stp	x29, x30, [sp, #-32]!
  405d9c:	adrp	x2, 4a4000 <_obstack_memory_used@@Base+0x42bb8>
  405da0:	mov	x29, sp
  405da4:	stp	x19, x20, [sp, #16]
  405da8:	add	x19, x2, #0x760
  405dac:	mov	w20, w0
  405db0:	ldr	w1, [x19, #12]
  405db4:	cmp	w1, #0x3ff
  405db8:	b.hi	405dd8 <nftw@plt+0x3258>  // b.pmore
  405dbc:	add	x0, x19, w1, uxtw #2
  405dc0:	add	w1, w1, #0x1
  405dc4:	str	w1, [x19, #12]
  405dc8:	str	w20, [x0, #32]
  405dcc:	ldp	x19, x20, [sp, #16]
  405dd0:	ldp	x29, x30, [sp], #32
  405dd4:	ret
  405dd8:	ldr	x3, [x2, #1888]
  405ddc:	adrp	x0, 4a4000 <_obstack_memory_used@@Base+0x42bb8>
  405de0:	mov	x2, #0x1                   	// #1
  405de4:	add	x0, x0, #0x780
  405de8:	mov	x1, #0x1000                	// #4096
  405dec:	bl	402950 <fwrite@plt>
  405df0:	cmp	x0, #0x1
  405df4:	b.eq	405e00 <nftw@plt+0x3280>  // b.none
  405df8:	mov	w0, #0x1                   	// #1
  405dfc:	str	w0, [x19, #24]
  405e00:	adrp	x0, 473000 <_obstack_memory_used@@Base+0x11bb8>
  405e04:	ldr	d0, [x19, #8]
  405e08:	ldr	w1, [x19, #12]
  405e0c:	ldr	d1, [x0, #960]
  405e10:	subs	w1, w1, #0x400
  405e14:	add	v0.2s, v0.2s, v1.2s
  405e18:	str	d0, [x19, #8]
  405e1c:	b.eq	405dbc <nftw@plt+0x323c>  // b.none
  405e20:	ldr	w0, [x19, #4128]
  405e24:	str	w0, [x19, #32]
  405e28:	add	x0, x19, w1, uxtw #2
  405e2c:	add	w1, w1, #0x1
  405e30:	str	w1, [x19, #12]
  405e34:	str	w20, [x0, #32]
  405e38:	ldp	x19, x20, [sp, #16]
  405e3c:	ldp	x29, x30, [sp], #32
  405e40:	ret
  405e44:	nop
  405e48:	stp	x29, x30, [sp, #-32]!
  405e4c:	adrp	x2, 4a4000 <_obstack_memory_used@@Base+0x42bb8>
  405e50:	mov	x29, sp
  405e54:	stp	x19, x20, [sp, #16]
  405e58:	add	x19, x2, #0x760
  405e5c:	mov	x20, x0
  405e60:	ldr	w1, [x19, #12]
  405e64:	cmp	w1, #0x3ff
  405e68:	b.hi	405e98 <nftw@plt+0x3318>  // b.pmore
  405e6c:	mov	w2, w1
  405e70:	add	w1, w1, #0x2
  405e74:	add	x2, x2, #0x8
  405e78:	str	w1, [x19, #12]
  405e7c:	asr	x1, x20, #32
  405e80:	add	x0, x19, x2, lsl #2
  405e84:	str	w20, [x19, x2, lsl #2]
  405e88:	ldp	x19, x20, [sp, #16]
  405e8c:	str	w1, [x0, #4]
  405e90:	ldp	x29, x30, [sp], #32
  405e94:	ret
  405e98:	ldr	x3, [x2, #1888]
  405e9c:	adrp	x0, 4a4000 <_obstack_memory_used@@Base+0x42bb8>
  405ea0:	mov	x2, #0x1                   	// #1
  405ea4:	add	x0, x0, #0x780
  405ea8:	mov	x1, #0x1000                	// #4096
  405eac:	bl	402950 <fwrite@plt>
  405eb0:	cmp	x0, #0x1
  405eb4:	b.eq	405ec0 <nftw@plt+0x3340>  // b.none
  405eb8:	mov	w0, #0x1                   	// #1
  405ebc:	str	w0, [x19, #24]
  405ec0:	adrp	x0, 473000 <_obstack_memory_used@@Base+0x11bb8>
  405ec4:	ldr	d0, [x19, #8]
  405ec8:	ldr	w1, [x19, #12]
  405ecc:	ldr	d1, [x0, #960]
  405ed0:	subs	w1, w1, #0x400
  405ed4:	add	v0.2s, v0.2s, v1.2s
  405ed8:	str	d0, [x19, #8]
  405edc:	b.eq	405e6c <nftw@plt+0x32ec>  // b.none
  405ee0:	ldr	w0, [x19, #4128]
  405ee4:	str	w0, [x19, #32]
  405ee8:	b	405e6c <nftw@plt+0x32ec>
  405eec:	nop
  405ef0:	stp	x29, x30, [sp, #-48]!
  405ef4:	adrp	x3, 4a4000 <_obstack_memory_used@@Base+0x42bb8>
  405ef8:	mov	x29, sp
  405efc:	stp	x19, x20, [sp, #16]
  405f00:	add	x19, x3, #0x760
  405f04:	mov	w20, w1
  405f08:	str	x21, [sp, #32]
  405f0c:	mov	w21, w0
  405f10:	ldr	w2, [x19, #12]
  405f14:	cmp	w2, #0x3ff
  405f18:	b.hi	405f48 <nftw@plt+0x33c8>  // b.pmore
  405f1c:	mov	w3, w2
  405f20:	add	w2, w2, #0x2
  405f24:	add	x3, x3, #0x8
  405f28:	str	w2, [x19, #12]
  405f2c:	add	x0, x19, x3, lsl #2
  405f30:	str	w21, [x19, x3, lsl #2]
  405f34:	ldr	x21, [sp, #32]
  405f38:	str	w20, [x0, #4]
  405f3c:	ldp	x19, x20, [sp, #16]
  405f40:	ldp	x29, x30, [sp], #48
  405f44:	ret
  405f48:	ldr	x3, [x3, #1888]
  405f4c:	adrp	x0, 4a4000 <_obstack_memory_used@@Base+0x42bb8>
  405f50:	mov	x2, #0x1                   	// #1
  405f54:	add	x0, x0, #0x780
  405f58:	mov	x1, #0x1000                	// #4096
  405f5c:	bl	402950 <fwrite@plt>
  405f60:	cmp	x0, #0x1
  405f64:	b.eq	405f70 <nftw@plt+0x33f0>  // b.none
  405f68:	mov	w0, #0x1                   	// #1
  405f6c:	str	w0, [x19, #24]
  405f70:	adrp	x0, 473000 <_obstack_memory_used@@Base+0x11bb8>
  405f74:	ldr	d0, [x19, #8]
  405f78:	ldr	w2, [x19, #12]
  405f7c:	ldr	d1, [x0, #960]
  405f80:	subs	w2, w2, #0x400
  405f84:	add	v0.2s, v0.2s, v1.2s
  405f88:	str	d0, [x19, #8]
  405f8c:	b.eq	405f1c <nftw@plt+0x339c>  // b.none
  405f90:	ldr	w0, [x19, #4128]
  405f94:	str	w0, [x19, #32]
  405f98:	b	405f1c <nftw@plt+0x339c>
  405f9c:	nop
  405fa0:	stp	x29, x30, [sp, #-48]!
  405fa4:	mov	x29, sp
  405fa8:	stp	x19, x20, [sp, #16]
  405fac:	mov	x20, x1
  405fb0:	stp	x21, x22, [sp, #32]
  405fb4:	adrp	x22, 4a4000 <_obstack_memory_used@@Base+0x42bb8>
  405fb8:	add	x19, x22, #0x760
  405fbc:	mov	w21, w0
  405fc0:	ldr	w2, [x19, #12]
  405fc4:	cmp	w2, #0x3ff
  405fc8:	b.hi	406038 <nftw@plt+0x34b8>  // b.pmore
  405fcc:	mov	w1, w2
  405fd0:	add	w2, w2, #0x2
  405fd4:	add	x1, x1, #0x8
  405fd8:	str	w2, [x19, #12]
  405fdc:	mov	w2, #0x2                   	// #2
  405fe0:	add	x0, x19, x1, lsl #2
  405fe4:	str	w21, [x19, x1, lsl #2]
  405fe8:	str	w2, [x0, #4]
  405fec:	ldr	w2, [x19, #12]
  405ff0:	ldr	w21, [x20]
  405ff4:	add	w0, w2, #0x1
  405ff8:	cmp	w2, #0x3ff
  405ffc:	b.hi	4060fc <nftw@plt+0x357c>  // b.pmore
  406000:	add	x2, x19, w2, uxtw #2
  406004:	ldr	w20, [x20, #8]
  406008:	str	w0, [x19, #12]
  40600c:	cmp	w0, #0x3ff
  406010:	str	w21, [x2, #32]
  406014:	b.hi	40608c <nftw@plt+0x350c>  // b.pmore
  406018:	add	x1, x19, w0, uxtw #2
  40601c:	add	w0, w0, #0x1
  406020:	str	w0, [x19, #12]
  406024:	ldp	x21, x22, [sp, #32]
  406028:	str	w20, [x1, #32]
  40602c:	ldp	x19, x20, [sp, #16]
  406030:	ldp	x29, x30, [sp], #48
  406034:	ret
  406038:	ldr	x3, [x22, #1888]
  40603c:	adrp	x0, 4a4000 <_obstack_memory_used@@Base+0x42bb8>
  406040:	mov	x2, #0x1                   	// #1
  406044:	add	x0, x0, #0x780
  406048:	mov	x1, #0x1000                	// #4096
  40604c:	bl	402950 <fwrite@plt>
  406050:	cmp	x0, #0x1
  406054:	b.eq	406060 <nftw@plt+0x34e0>  // b.none
  406058:	mov	w0, #0x1                   	// #1
  40605c:	str	w0, [x19, #24]
  406060:	adrp	x0, 473000 <_obstack_memory_used@@Base+0x11bb8>
  406064:	ldr	d0, [x19, #8]
  406068:	ldr	w2, [x19, #12]
  40606c:	ldr	d1, [x0, #960]
  406070:	subs	w2, w2, #0x400
  406074:	add	v0.2s, v0.2s, v1.2s
  406078:	str	d0, [x19, #8]
  40607c:	b.eq	405fcc <nftw@plt+0x344c>  // b.none
  406080:	ldr	w0, [x19, #4128]
  406084:	str	w0, [x19, #32]
  406088:	b	405fcc <nftw@plt+0x344c>
  40608c:	ldr	x3, [x22, #1888]
  406090:	adrp	x0, 4a4000 <_obstack_memory_used@@Base+0x42bb8>
  406094:	mov	x2, #0x1                   	// #1
  406098:	add	x0, x0, #0x780
  40609c:	mov	x1, #0x1000                	// #4096
  4060a0:	bl	402950 <fwrite@plt>
  4060a4:	cmp	x0, #0x1
  4060a8:	b.eq	4060b4 <nftw@plt+0x3534>  // b.none
  4060ac:	mov	w0, #0x1                   	// #1
  4060b0:	str	w0, [x19, #24]
  4060b4:	adrp	x0, 473000 <_obstack_memory_used@@Base+0x11bb8>
  4060b8:	ldr	d0, [x19, #8]
  4060bc:	ldr	d1, [x0, #960]
  4060c0:	ldr	w0, [x19, #12]
  4060c4:	add	v0.2s, v0.2s, v1.2s
  4060c8:	subs	w0, w0, #0x400
  4060cc:	str	d0, [x19, #8]
  4060d0:	b.eq	406018 <nftw@plt+0x3498>  // b.none
  4060d4:	ldr	w1, [x19, #4128]
  4060d8:	str	w1, [x19, #32]
  4060dc:	add	x1, x19, w0, uxtw #2
  4060e0:	add	w0, w0, #0x1
  4060e4:	str	w0, [x19, #12]
  4060e8:	ldp	x21, x22, [sp, #32]
  4060ec:	str	w20, [x1, #32]
  4060f0:	ldp	x19, x20, [sp, #16]
  4060f4:	ldp	x29, x30, [sp], #48
  4060f8:	ret
  4060fc:	ldr	x3, [x22, #1888]
  406100:	adrp	x0, 4a4000 <_obstack_memory_used@@Base+0x42bb8>
  406104:	mov	x2, #0x1                   	// #1
  406108:	add	x0, x0, #0x780
  40610c:	mov	x1, #0x1000                	// #4096
  406110:	bl	402950 <fwrite@plt>
  406114:	cmp	x0, #0x1
  406118:	b.eq	406124 <nftw@plt+0x35a4>  // b.none
  40611c:	mov	w0, #0x1                   	// #1
  406120:	str	w0, [x19, #24]
  406124:	adrp	x0, 473000 <_obstack_memory_used@@Base+0x11bb8>
  406128:	ldr	d0, [x19, #8]
  40612c:	ldr	w2, [x19, #12]
  406130:	ldr	d1, [x0, #960]
  406134:	sub	w0, w2, #0x3ff
  406138:	subs	w2, w2, #0x400
  40613c:	add	v0.2s, v0.2s, v1.2s
  406140:	str	d0, [x19, #8]
  406144:	b.eq	406154 <nftw@plt+0x35d4>  // b.none
  406148:	ldr	w1, [x19, #4128]
  40614c:	str	w1, [x19, #32]
  406150:	b	406000 <nftw@plt+0x3480>
  406154:	mov	w0, #0x1                   	// #1
  406158:	ldr	w20, [x20, #8]
  40615c:	add	x1, x19, w0, uxtw #2
  406160:	add	w0, w0, #0x1
  406164:	str	w0, [x19, #12]
  406168:	str	w21, [x19, #32]
  40616c:	ldp	x21, x22, [sp, #32]
  406170:	str	w20, [x1, #32]
  406174:	ldp	x19, x20, [sp, #16]
  406178:	ldp	x29, x30, [sp], #48
  40617c:	ret
  406180:	stp	x29, x30, [sp, #-32]!
  406184:	adrp	x0, 4a4000 <_obstack_memory_used@@Base+0x42bb8>
  406188:	mov	x29, sp
  40618c:	str	x19, [sp, #16]
  406190:	add	x19, x0, #0x760
  406194:	ldr	w1, [x19, #28]
  406198:	ldr	w4, [x19, #12]
  40619c:	cmp	w1, #0x0
  4061a0:	ldr	w1, [x19, #16]
  4061a4:	b.le	40620c <nftw@plt+0x368c>
  4061a8:	cmp	w1, w4
  4061ac:	b.ne	4061f0 <nftw@plt+0x3670>  // b.any
  4061b0:	ldr	w5, [x19, #8]
  4061b4:	mov	x1, #0x1                   	// #1
  4061b8:	ldr	x3, [x0, #1888]
  4061bc:	add	w4, w5, w4
  4061c0:	adrp	x0, 4a4000 <_obstack_memory_used@@Base+0x42bb8>
  4061c4:	mov	x2, #0x1000                	// #4096
  4061c8:	add	x0, x0, #0x780
  4061cc:	str	w4, [x19, #8]
  4061d0:	stur	xzr, [x19, #12]
  4061d4:	bl	4028d0 <fread@plt>
  4061d8:	ldr	w1, [x19, #16]
  4061dc:	lsr	x0, x0, #2
  4061e0:	add	w0, w1, w0
  4061e4:	str	w0, [x19, #16]
  4061e8:	cbz	w0, 40621c <nftw@plt+0x369c>
  4061ec:	ldr	w4, [x19, #12]
  4061f0:	add	x0, x19, w4, uxtw #2
  4061f4:	add	w4, w4, #0x1
  4061f8:	str	w4, [x19, #12]
  4061fc:	ldr	w0, [x0, #32]
  406200:	ldr	x19, [sp, #16]
  406204:	ldp	x29, x30, [sp], #32
  406208:	ret
  40620c:	mov	w0, #0x0                   	// #0
  406210:	ldr	x19, [sp, #16]
  406214:	ldp	x29, x30, [sp], #32
  406218:	ret
  40621c:	ldr	w1, [x19, #20]
  406220:	add	w1, w1, #0x1
  406224:	str	w1, [x19, #20]
  406228:	b	406200 <nftw@plt+0x3680>
  40622c:	nop
  406230:	stp	x29, x30, [sp, #-32]!
  406234:	adrp	x2, 4a4000 <_obstack_memory_used@@Base+0x42bb8>
  406238:	mov	x29, sp
  40623c:	str	x19, [sp, #16]
  406240:	add	x19, x2, #0x760
  406244:	ldp	w1, w4, [x19, #12]
  406248:	ldr	w0, [x19, #28]
  40624c:	sub	w4, w4, w1
  406250:	cmp	w0, #0x0
  406254:	b.le	4062e0 <nftw@plt+0x3760>
  406258:	cmp	w4, #0x1
  40625c:	b.hi	4062b4 <nftw@plt+0x3734>  // b.pmore
  406260:	ldr	w0, [x19, #8]
  406264:	add	w0, w0, w1
  406268:	str	w0, [x19, #8]
  40626c:	adrp	x0, 4a4000 <_obstack_memory_used@@Base+0x42bb8>
  406270:	add	x0, x0, #0x780
  406274:	cbz	w4, 406280 <nftw@plt+0x3700>
  406278:	ldr	w1, [x0, w1, uxtw #2]
  40627c:	str	w1, [x19, #32]
  406280:	ldr	x3, [x2, #1888]
  406284:	mov	x1, #0x1                   	// #1
  406288:	add	x0, x0, w4, uxtw #2
  40628c:	mov	x2, #0x1000                	// #4096
  406290:	stp	wzr, w4, [x19, #12]
  406294:	bl	4028d0 <fread@plt>
  406298:	lsr	x0, x0, #2
  40629c:	ldr	w1, [x19, #16]
  4062a0:	add	w1, w1, w0
  4062a4:	str	w1, [x19, #16]
  4062a8:	cmp	w1, #0x1
  4062ac:	b.ls	4062f0 <nftw@plt+0x3770>  // b.plast
  4062b0:	ldr	w1, [x19, #12]
  4062b4:	mov	w0, w1
  4062b8:	add	w1, w1, #0x2
  4062bc:	add	x0, x0, #0x8
  4062c0:	str	w1, [x19, #12]
  4062c4:	add	x2, x19, x0, lsl #2
  4062c8:	ldr	w1, [x19, x0, lsl #2]
  4062cc:	ldr	w0, [x2, #4]
  4062d0:	orr	x0, x1, x0, lsl #32
  4062d4:	ldr	x19, [sp, #16]
  4062d8:	ldp	x29, x30, [sp], #32
  4062dc:	ret
  4062e0:	mov	x0, #0x0                   	// #0
  4062e4:	ldr	x19, [sp, #16]
  4062e8:	ldp	x29, x30, [sp], #32
  4062ec:	ret
  4062f0:	ldr	w2, [x19, #20]
  4062f4:	mov	x0, #0x0                   	// #0
  4062f8:	add	w2, w2, #0x2
  4062fc:	sub	w1, w2, w1
  406300:	stp	wzr, w1, [x19, #16]
  406304:	b	4062d4 <nftw@plt+0x3754>
  406308:	stp	x29, x30, [sp, #-80]!
  40630c:	mov	x29, sp
  406310:	stp	x19, x20, [sp, #16]
  406314:	stp	x21, x22, [sp, #32]
  406318:	stp	x23, x24, [sp, #48]
  40631c:	mov	w23, #0x5e                  	// #94
  406320:	mov	w24, #0x23                  	// #35
  406324:	str	x0, [sp, #72]
  406328:	bl	4024f0 <strlen@plt>
  40632c:	add	x0, x0, #0x1
  406330:	bl	402670 <malloc@plt>
  406334:	ldr	x1, [sp, #72]
  406338:	mov	x22, x0
  40633c:	mov	x21, x0
  406340:	ldrb	w2, [x1]
  406344:	cbz	w2, 406398 <nftw@plt+0x3818>
  406348:	mov	x20, x1
  40634c:	mov	w19, w2
  406350:	b	40635c <nftw@plt+0x37dc>
  406354:	ldrb	w19, [x20, #1]!
  406358:	cbz	w19, 406364 <nftw@plt+0x37e4>
  40635c:	cmp	w19, #0x2f
  406360:	b.ne	406354 <nftw@plt+0x37d4>  // b.any
  406364:	cmp	w2, #0x2e
  406368:	sub	x2, x20, x1
  40636c:	ccmp	x2, #0x2, #0x0, eq  // eq = none
  406370:	b.eq	4063b4 <nftw@plt+0x3834>  // b.none
  406374:	mov	x0, x21
  406378:	add	x21, x21, x2
  40637c:	bl	402490 <memcpy@plt>
  406380:	mov	x1, x20
  406384:	cbz	w19, 406340 <nftw@plt+0x37c0>
  406388:	ldrb	w2, [x20, #1]
  40638c:	add	x1, x20, #0x1
  406390:	strb	w24, [x21], #1
  406394:	cbnz	w2, 406348 <nftw@plt+0x37c8>
  406398:	strb	wzr, [x21]
  40639c:	mov	x0, x22
  4063a0:	ldp	x19, x20, [sp, #16]
  4063a4:	ldp	x21, x22, [sp, #32]
  4063a8:	ldp	x23, x24, [sp, #48]
  4063ac:	ldp	x29, x30, [sp], #80
  4063b0:	ret
  4063b4:	ldrb	w0, [x1, #1]
  4063b8:	cmp	w0, #0x2e
  4063bc:	b.ne	406374 <nftw@plt+0x37f4>  // b.any
  4063c0:	strb	w23, [x21], #1
  4063c4:	b	406380 <nftw@plt+0x3800>
  4063c8:	stp	x29, x30, [sp, #-48]!
  4063cc:	mov	x29, sp
  4063d0:	stp	x19, x20, [sp, #16]
  4063d4:	str	x21, [sp, #32]
  4063d8:	adrp	x21, 4a4000 <_obstack_memory_used@@Base+0x42bb8>
  4063dc:	add	x19, x21, #0x760
  4063e0:	ldr	w1, [x19, #28]
  4063e4:	ldp	w0, w4, [x19, #12]
  4063e8:	cmp	w1, #0x0
  4063ec:	b.le	40649c <nftw@plt+0x391c>
  4063f0:	cmp	w4, w0
  4063f4:	b.eq	406448 <nftw@plt+0x38c8>  // b.none
  4063f8:	add	x1, x19, w0, uxtw #2
  4063fc:	add	w0, w0, #0x1
  406400:	str	w0, [x19, #12]
  406404:	ldr	w20, [x1, #32]
  406408:	cbz	w20, 40649c <nftw@plt+0x391c>
  40640c:	ldr	w1, [x19, #28]
  406410:	sub	w4, w4, w0
  406414:	cmp	w1, #0x0
  406418:	b.le	40649c <nftw@plt+0x391c>
  40641c:	cmp	w20, w4
  406420:	b.hi	4064b0 <nftw@plt+0x3930>  // b.pmore
  406424:	ubfiz	x1, x0, #2, #32
  406428:	add	w0, w20, w0
  40642c:	add	x1, x1, #0x20
  406430:	str	w0, [x19, #12]
  406434:	add	x0, x19, x1
  406438:	ldp	x19, x20, [sp, #16]
  40643c:	ldr	x21, [sp, #32]
  406440:	ldp	x29, x30, [sp], #48
  406444:	ret
  406448:	ldr	w5, [x19, #8]
  40644c:	adrp	x1, 4a4000 <_obstack_memory_used@@Base+0x42bb8>
  406450:	ldr	x3, [x21, #1888]
  406454:	add	w4, w5, w4
  406458:	add	x0, x1, #0x780
  40645c:	mov	x2, #0x1000                	// #4096
  406460:	mov	x1, #0x1                   	// #1
  406464:	str	w4, [x19, #8]
  406468:	stur	xzr, [x19, #12]
  40646c:	bl	4028d0 <fread@plt>
  406470:	ldr	w4, [x19, #16]
  406474:	lsr	x0, x0, #2
  406478:	add	w4, w4, w0
  40647c:	str	w4, [x19, #16]
  406480:	cbz	w4, 40650c <nftw@plt+0x398c>
  406484:	ldr	w0, [x19, #12]
  406488:	add	x1, x19, w0, uxtw #2
  40648c:	add	w0, w0, #0x1
  406490:	str	w0, [x19, #12]
  406494:	ldr	w20, [x1, #32]
  406498:	cbnz	w20, 40640c <nftw@plt+0x388c>
  40649c:	mov	x0, #0x0                   	// #0
  4064a0:	ldp	x19, x20, [sp, #16]
  4064a4:	ldr	x21, [sp, #32]
  4064a8:	ldp	x29, x30, [sp], #48
  4064ac:	ret
  4064b0:	ldr	w1, [x19, #8]
  4064b4:	add	w1, w1, w0
  4064b8:	str	w1, [x19, #8]
  4064bc:	adrp	x1, 4a4000 <_obstack_memory_used@@Base+0x42bb8>
  4064c0:	add	x1, x1, #0x780
  4064c4:	cbnz	w4, 406500 <nftw@plt+0x3980>
  4064c8:	ldr	x3, [x21, #1888]
  4064cc:	add	x0, x1, w4, uxtw #2
  4064d0:	mov	x2, #0x1000                	// #4096
  4064d4:	mov	x1, #0x1                   	// #1
  4064d8:	stp	wzr, w4, [x19, #12]
  4064dc:	bl	4028d0 <fread@plt>
  4064e0:	lsr	x0, x0, #2
  4064e4:	ldr	w1, [x19, #16]
  4064e8:	add	w1, w1, w0
  4064ec:	str	w1, [x19, #16]
  4064f0:	cmp	w20, w1
  4064f4:	b.hi	406520 <nftw@plt+0x39a0>  // b.pmore
  4064f8:	ldr	w0, [x19, #12]
  4064fc:	b	406424 <nftw@plt+0x38a4>
  406500:	ldr	w0, [x1, w0, uxtw #2]
  406504:	str	w0, [x19, #32]
  406508:	b	4064c8 <nftw@plt+0x3948>
  40650c:	ldr	w1, [x19, #20]
  406510:	mov	x0, #0x0                   	// #0
  406514:	add	w1, w1, #0x1
  406518:	str	w1, [x19, #20]
  40651c:	b	406438 <nftw@plt+0x38b8>
  406520:	ldr	w2, [x19, #20]
  406524:	mov	x0, #0x0                   	// #0
  406528:	add	w20, w20, w2
  40652c:	sub	w20, w20, w1
  406530:	stp	wzr, w20, [x19, #16]
  406534:	b	406438 <nftw@plt+0x38b8>
  406538:	stp	x29, x30, [sp, #-48]!
  40653c:	mov	x29, sp
  406540:	stp	x19, x20, [sp, #16]
  406544:	mov	x20, x0
  406548:	str	x21, [sp, #32]
  40654c:	adrp	x21, 4a4000 <_obstack_memory_used@@Base+0x42bb8>
  406550:	add	x19, x21, #0x760
  406554:	ldr	w0, [x19, #28]
  406558:	ldp	w4, w5, [x19, #12]
  40655c:	cmp	w0, #0x0
  406560:	b.le	406638 <nftw@plt+0x3ab8>
  406564:	cmp	w5, w4
  406568:	b.eq	4065f4 <nftw@plt+0x3a74>  // b.none
  40656c:	add	x1, x19, w4, uxtw #2
  406570:	add	w4, w4, #0x1
  406574:	str	w4, [x19, #12]
  406578:	ldr	w1, [x1, #32]
  40657c:	str	w1, [x20]
  406580:	cmp	w0, #0x0
  406584:	b.le	406680 <nftw@plt+0x3b00>
  406588:	cmp	w4, w5
  40658c:	b.ne	4065d0 <nftw@plt+0x3a50>  // b.any
  406590:	ldr	w5, [x19, #8]
  406594:	mov	x1, #0x1                   	// #1
  406598:	ldr	x3, [x21, #1888]
  40659c:	add	w4, w5, w4
  4065a0:	adrp	x0, 4a4000 <_obstack_memory_used@@Base+0x42bb8>
  4065a4:	mov	x2, #0x1000                	// #4096
  4065a8:	add	x0, x0, #0x780
  4065ac:	str	w4, [x19, #8]
  4065b0:	stur	xzr, [x19, #12]
  4065b4:	bl	4028d0 <fread@plt>
  4065b8:	ldr	w1, [x19, #16]
  4065bc:	lsr	x0, x0, #2
  4065c0:	add	w0, w1, w0
  4065c4:	str	w0, [x19, #16]
  4065c8:	cbz	w0, 40666c <nftw@plt+0x3aec>
  4065cc:	ldr	w4, [x19, #12]
  4065d0:	add	x0, x19, w4, uxtw #2
  4065d4:	add	w4, w4, #0x1
  4065d8:	str	w4, [x19, #12]
  4065dc:	ldr	w0, [x0, #32]
  4065e0:	ldr	x21, [sp, #32]
  4065e4:	str	x0, [x20, #8]
  4065e8:	ldp	x19, x20, [sp, #16]
  4065ec:	ldp	x29, x30, [sp], #48
  4065f0:	ret
  4065f4:	ldr	w4, [x19, #8]
  4065f8:	adrp	x0, 4a4000 <_obstack_memory_used@@Base+0x42bb8>
  4065fc:	ldr	x3, [x21, #1888]
  406600:	add	w5, w4, w5
  406604:	add	x0, x0, #0x780
  406608:	mov	x2, #0x1000                	// #4096
  40660c:	mov	x1, #0x1                   	// #1
  406610:	str	w5, [x19, #8]
  406614:	stur	xzr, [x19, #12]
  406618:	bl	4028d0 <fread@plt>
  40661c:	ldp	w4, w5, [x19, #12]
  406620:	lsr	x0, x0, #2
  406624:	add	w5, w5, w0
  406628:	str	w5, [x19, #16]
  40662c:	cbz	w5, 406654 <nftw@plt+0x3ad4>
  406630:	ldr	w0, [x19, #28]
  406634:	b	40656c <nftw@plt+0x39ec>
  406638:	mov	x0, #0x0                   	// #0
  40663c:	str	wzr, [x20]
  406640:	ldr	x21, [sp, #32]
  406644:	str	x0, [x20, #8]
  406648:	ldp	x19, x20, [sp, #16]
  40664c:	ldp	x29, x30, [sp], #48
  406650:	ret
  406654:	ldr	w2, [x19, #20]
  406658:	mov	w1, #0x0                   	// #0
  40665c:	ldr	w0, [x19, #28]
  406660:	add	w2, w2, #0x1
  406664:	str	w2, [x19, #20]
  406668:	b	40657c <nftw@plt+0x39fc>
  40666c:	ldr	w1, [x19, #20]
  406670:	mov	x0, #0x0                   	// #0
  406674:	add	w1, w1, #0x1
  406678:	str	w1, [x19, #20]
  40667c:	b	4065e0 <nftw@plt+0x3a60>
  406680:	mov	x0, #0x0                   	// #0
  406684:	b	4065e0 <nftw@plt+0x3a60>
  406688:	stp	x29, x30, [sp, #-32]!
  40668c:	add	w1, w0, w1
  406690:	mov	x29, sp
  406694:	stp	x19, x20, [sp, #16]
  406698:	adrp	x20, 4a4000 <_obstack_memory_used@@Base+0x42bb8>
  40669c:	add	x19, x20, #0x760
  4066a0:	ldr	w2, [x19, #8]
  4066a4:	ldr	w0, [x19, #16]
  4066a8:	sub	w2, w1, w2
  4066ac:	cmp	w2, w0
  4066b0:	b.hi	4066c4 <nftw@plt+0x3b44>  // b.pmore
  4066b4:	str	w2, [x19, #12]
  4066b8:	ldp	x19, x20, [sp, #16]
  4066bc:	ldp	x29, x30, [sp], #32
  4066c0:	ret
  4066c4:	ldr	x0, [x20, #1888]
  4066c8:	lsl	w1, w1, #2
  4066cc:	mov	w2, #0x0                   	// #0
  4066d0:	stur	xzr, [x19, #12]
  4066d4:	bl	4027e0 <fseek@plt>
  4066d8:	ldr	x0, [x20, #1888]
  4066dc:	bl	4025a0 <ftell@plt>
  4066e0:	asr	x0, x0, #2
  4066e4:	str	w0, [x19, #8]
  4066e8:	ldp	x19, x20, [sp, #16]
  4066ec:	ldp	x29, x30, [sp], #32
  4066f0:	ret
  4066f4:	nop
  4066f8:	stp	x29, x30, [sp, #-48]!
  4066fc:	mov	x29, sp
  406700:	stp	x19, x20, [sp, #16]
  406704:	adrp	x20, 4a4000 <_obstack_memory_used@@Base+0x42bb8>
  406708:	add	x19, x20, #0x760
  40670c:	stp	x21, x22, [sp, #32]
  406710:	mov	w21, w0
  406714:	ldr	w22, [x19, #12]
  406718:	ldr	x0, [x20, #1888]
  40671c:	cbnz	w22, 40674c <nftw@plt+0x3bcc>
  406720:	lsl	w1, w21, #2
  406724:	mov	w2, #0x0                   	// #0
  406728:	bl	4027e0 <fseek@plt>
  40672c:	ldr	x0, [x20, #1888]
  406730:	bl	4025a0 <ftell@plt>
  406734:	asr	x0, x0, #2
  406738:	str	w0, [x19, #8]
  40673c:	ldp	x19, x20, [sp, #16]
  406740:	ldp	x21, x22, [sp, #32]
  406744:	ldp	x29, x30, [sp], #48
  406748:	ret
  40674c:	mov	x3, x0
  406750:	lsl	w1, w22, #2
  406754:	adrp	x0, 4a4000 <_obstack_memory_used@@Base+0x42bb8>
  406758:	mov	x2, #0x1                   	// #1
  40675c:	add	x0, x0, #0x780
  406760:	bl	402950 <fwrite@plt>
  406764:	cmp	x0, #0x1
  406768:	b.eq	406774 <nftw@plt+0x3bf4>  // b.none
  40676c:	mov	w0, #0x1                   	// #1
  406770:	str	w0, [x19, #24]
  406774:	ldp	w2, w1, [x19, #8]
  406778:	ldr	x0, [x20, #1888]
  40677c:	add	w2, w2, w22
  406780:	sub	w22, w1, w22
  406784:	stp	w2, w22, [x19, #8]
  406788:	b	406720 <nftw@plt+0x3ba0>
  40678c:	nop
  406790:	cmp	w1, #0x2
  406794:	b.le	406818 <nftw@plt+0x3c98>
  406798:	sub	w1, w1, #0x3
  40679c:	add	x8, x0, #0x10
  4067a0:	and	w12, w1, #0xfffffffe
  4067a4:	mov	w9, #0x0                   	// #0
  4067a8:	ldp	x11, x6, [x8]
  4067ac:	mov	w2, w9
  4067b0:	mov	w10, w9
  4067b4:	orr	w7, w9, #0xfffffffe
  4067b8:	mov	x1, x8
  4067bc:	add	w9, w9, #0x2
  4067c0:	ldur	x4, [x1, #-8]
  4067c4:	mov	x3, x1
  4067c8:	sub	w2, w2, #0x2
  4067cc:	add	x5, x1, #0x8
  4067d0:	cmp	x6, x4
  4067d4:	b.le	406804 <nftw@plt+0x3c84>
  4067d8:	ldur	x5, [x1, #-16]
  4067dc:	stp	x5, x4, [x1]
  4067e0:	cmp	w2, w7
  4067e4:	sub	x1, x1, #0x10
  4067e8:	b.ne	4067c0 <nftw@plt+0x3c40>  // b.any
  4067ec:	sxtw	x1, w2
  4067f0:	add	x1, x1, #0x2
  4067f4:	lsl	x1, x1, #3
  4067f8:	add	x5, x1, #0x8
  4067fc:	add	x3, x0, x1
  406800:	add	x5, x0, x5
  406804:	str	x11, [x3]
  406808:	add	x8, x8, #0x10
  40680c:	str	x6, [x5]
  406810:	cmp	w12, w10
  406814:	b.ne	4067a8 <nftw@plt+0x3c28>  // b.any
  406818:	ret
  40681c:	nop
  406820:	stp	x29, x30, [sp, #-224]!
  406824:	mov	x29, sp
  406828:	stp	x19, x20, [sp, #16]
  40682c:	mov	x20, x0
  406830:	stp	x21, x22, [sp, #32]
  406834:	str	w1, [sp, #184]
  406838:	cbz	x0, 407e38 <nftw@plt+0x52b8>
  40683c:	movi	v3.4s, #0x0
  406840:	mov	x8, x0
  406844:	mov	x19, #0x0                   	// #0
  406848:	ldr	w6, [x8, #104]
  40684c:	cbz	w6, 406930 <nftw@plt+0x3db0>
  406850:	ldr	x7, [x8, #112]
  406854:	mov	x4, #0x0                   	// #0
  406858:	ldr	x0, [x7, x4, lsl #3]
  40685c:	ldr	w2, [x0, #24]
  406860:	cbz	w2, 406924 <nftw@plt+0x3da4>
  406864:	sub	w1, w2, #0x1
  406868:	cmp	w1, #0x4
  40686c:	ldr	x3, [x0, #32]
  406870:	b.ls	406dcc <nftw@plt+0x424c>  // b.plast
  406874:	lsr	w1, w2, #1
  406878:	dup	v0.2d, x19
  40687c:	mov	x0, x3
  406880:	add	x1, x3, w1, uxtw #4
  406884:	nop
  406888:	ldr	q1, [x0], #16
  40688c:	cmgt	v2.2d, v1.2d, v0.2d
  406890:	cmp	x1, x0
  406894:	bit	v0.16b, v1.16b, v2.16b
  406898:	b.ne	406888 <nftw@plt+0x3d08>  // b.any
  40689c:	ext	v2.16b, v0.16b, v3.16b, #8
  4068a0:	and	w0, w2, #0xfffffffe
  4068a4:	cmgt	v1.2d, v2.2d, v0.2d
  4068a8:	bit	v0.16b, v2.16b, v1.16b
  4068ac:	mov	x19, v0.d[0]
  4068b0:	tbz	w2, #0, 406924 <nftw@plt+0x3da4>
  4068b4:	mov	w1, w0
  4068b8:	add	w5, w0, #0x1
  4068bc:	ldr	x1, [x3, x1, lsl #3]
  4068c0:	cmp	x19, x1
  4068c4:	csel	x19, x19, x1, ge  // ge = tcont
  4068c8:	cmp	w2, w5
  4068cc:	b.ls	406924 <nftw@plt+0x3da4>  // b.plast
  4068d0:	ldr	x5, [x3, w5, uxtw #3]
  4068d4:	add	w1, w0, #0x2
  4068d8:	cmp	x19, x5
  4068dc:	csel	x19, x19, x5, ge  // ge = tcont
  4068e0:	cmp	w2, w1
  4068e4:	b.ls	406924 <nftw@plt+0x3da4>  // b.plast
  4068e8:	ldr	x1, [x3, x1, lsl #3]
  4068ec:	add	w5, w0, #0x3
  4068f0:	cmp	x19, x1
  4068f4:	csel	x19, x19, x1, ge  // ge = tcont
  4068f8:	cmp	w2, w5
  4068fc:	b.ls	406924 <nftw@plt+0x3da4>  // b.plast
  406900:	ldr	x1, [x3, w5, uxtw #3]
  406904:	add	w0, w0, #0x4
  406908:	cmp	x19, x1
  40690c:	csel	x19, x19, x1, ge  // ge = tcont
  406910:	cmp	w2, w0
  406914:	b.ls	406924 <nftw@plt+0x3da4>  // b.plast
  406918:	ldr	x0, [x3, x0, lsl #3]
  40691c:	cmp	x19, x0
  406920:	csel	x19, x19, x0, ge  // ge = tcont
  406924:	add	x4, x4, #0x1
  406928:	cmp	w6, w4
  40692c:	b.ne	406858 <nftw@plt+0x3cd8>  // b.any
  406930:	ldr	x8, [x8, #8]
  406934:	cbnz	x8, 406848 <nftw@plt+0x3cc8>
  406938:	adrp	x0, 473000 <_obstack_memory_used@@Base+0x11bb8>
  40693c:	add	x0, x0, #0x188
  406940:	bl	402ab0 <getenv@plt>
  406944:	cbz	x0, 407cc0 <nftw@plt+0x5140>
  406948:	mov	x1, #0x0                   	// #0
  40694c:	mov	w2, #0xa                   	// #10
  406950:	bl	4028c0 <strtol@plt>
  406954:	mov	x1, x0
  406958:	cmp	w1, #0x0
  40695c:	adrp	x0, 473000 <_obstack_memory_used@@Base+0x11bb8>
  406960:	csel	w1, w1, wzr, ge  // ge = tcont
  406964:	add	x0, x0, #0x1a0
  406968:	str	w1, [sp, #132]
  40696c:	bl	402ab0 <getenv@plt>
  406970:	mov	x22, x0
  406974:	cbz	x0, 407cf4 <nftw@plt+0x5174>
  406978:	bl	4024f0 <strlen@plt>
  40697c:	cbz	x0, 407cf4 <nftw@plt+0x5174>
  406980:	sub	x21, x0, #0x1
  406984:	ldrb	w1, [x22, x21]
  406988:	cmp	w1, #0x2f
  40698c:	b.eq	407cf0 <nftw@plt+0x5170>  // b.none
  406990:	mov	x21, x0
  406994:	add	x0, x0, #0x1
  406998:	bl	402670 <malloc@plt>
  40699c:	str	x0, [sp, #152]
  4069a0:	mov	x1, x22
  4069a4:	mov	x2, x21
  4069a8:	bl	402490 <memcpy@plt>
  4069ac:	strb	wzr, [x0, x21]
  4069b0:	adrp	x1, 4a4000 <_obstack_memory_used@@Base+0x42bb8>
  4069b4:	adrp	x0, 4a4000 <_obstack_memory_used@@Base+0x42bb8>
  4069b8:	add	x1, x1, #0x750
  4069bc:	add	x0, x0, #0x780
  4069c0:	str	x1, [sp, #112]
  4069c4:	str	x0, [sp, #136]
  4069c8:	cbz	x20, 406db8 <nftw@plt+0x4238>
  4069cc:	str	x19, [sp, #176]
  4069d0:	mov	x19, x20
  4069d4:	stp	x23, x24, [sp, #48]
  4069d8:	stp	x25, x26, [sp, #64]
  4069dc:	stp	x27, x28, [sp, #80]
  4069e0:	str	d8, [sp, #96]
  4069e4:	nop
  4069e8:	ldr	x1, [sp, #112]
  4069ec:	ldr	x0, [x19, #96]
  4069f0:	str	xzr, [x1]
  4069f4:	cbz	x0, 406bb0 <nftw@plt+0x4030>
  4069f8:	ldr	w15, [x19, #104]
  4069fc:	cbz	w15, 406bb0 <nftw@plt+0x4030>
  406a00:	ldp	x25, x24, [x19, #32]
  406a04:	mov	w23, #0x8e39                	// #36409
  406a08:	ldp	x22, x21, [x19, #48]
  406a0c:	mov	x11, #0x0                   	// #0
  406a10:	ldp	x20, x26, [x19, #64]
  406a14:	movk	w23, #0x38e3, lsl #16
  406a18:	ldp	x18, x17, [x19, #80]
  406a1c:	ldr	x16, [x19, #112]
  406a20:	cmp	x25, #0x0
  406a24:	ldr	x0, [x16, x11, lsl #3]
  406a28:	add	x1, x0, #0x18
  406a2c:	add	x0, x0, #0x28
  406a30:	csel	x0, x0, x1, ne  // ne = any
  406a34:	cmp	x24, #0x0
  406a38:	add	x1, x0, #0x10
  406a3c:	csel	x0, x1, x0, ne  // ne = any
  406a40:	cmp	x22, #0x0
  406a44:	add	x1, x0, #0x10
  406a48:	csel	x0, x1, x0, ne  // ne = any
  406a4c:	cmp	x21, #0x0
  406a50:	add	x1, x0, #0x10
  406a54:	csel	x0, x1, x0, ne  // ne = any
  406a58:	cmp	x20, #0x0
  406a5c:	add	x1, x0, #0x10
  406a60:	csel	x0, x1, x0, ne  // ne = any
  406a64:	cmp	x26, #0x0
  406a68:	add	x1, x0, #0x10
  406a6c:	csel	x0, x1, x0, ne  // ne = any
  406a70:	cmp	x18, #0x0
  406a74:	add	x1, x0, #0x10
  406a78:	csel	x0, x1, x0, ne  // ne = any
  406a7c:	cmp	x17, #0x0
  406a80:	add	x1, x0, #0x10
  406a84:	csel	x0, x1, x0, ne  // ne = any
  406a88:	ldr	w6, [x0]
  406a8c:	smull	x1, w6, w23
  406a90:	asr	x1, x1, #33
  406a94:	sub	w1, w1, w6, asr #31
  406a98:	add	w1, w1, w1, lsl #3
  406a9c:	subs	w1, w6, w1
  406aa0:	b.ne	407ed8 <nftw@plt+0x5358>  // b.any
  406aa4:	ldr	x2, [x0, #8]
  406aa8:	cmp	w6, #0x0
  406aac:	add	x0, x2, #0x8
  406ab0:	add	x2, x2, #0x10
  406ab4:	b.le	406ba4 <nftw@plt+0x4024>
  406ab8:	ldp	x4, x10, [x0, #8]
  406abc:	add	x8, x0, #0x10
  406ac0:	ldr	x3, [x0, #24]
  406ac4:	mov	x7, x0
  406ac8:	add	x9, x0, #0x18
  406acc:	cmp	x4, x3
  406ad0:	b.ge	406eb4 <nftw@plt+0x4334>  // b.tcont
  406ad4:	ldr	x5, [x0]
  406ad8:	stp	x5, x4, [x0, #16]
  406adc:	mov	x5, x2
  406ae0:	mov	x4, x0
  406ae4:	str	x10, [x4]
  406ae8:	add	x12, x0, #0x20
  406aec:	str	x3, [x5]
  406af0:	add	x13, x0, #0x28
  406af4:	ldp	x4, x10, [x0, #24]
  406af8:	ldr	x3, [x0, #40]
  406afc:	cmp	x4, x3
  406b00:	b.ge	406ea8 <nftw@plt+0x4328>  // b.tcont
  406b04:	str	x4, [x0, #40]
  406b08:	ldr	x5, [x0, #8]
  406b0c:	ldr	x4, [x0, #16]
  406b10:	str	x4, [x0, #32]
  406b14:	cmp	x5, x3
  406b18:	b.ge	406ec0 <nftw@plt+0x4340>  // b.tcont
  406b1c:	ldr	x4, [x0]
  406b20:	stp	x4, x5, [x0, #16]
  406b24:	mov	x4, x2
  406b28:	mov	x5, x0
  406b2c:	str	x10, [x5]
  406b30:	add	x14, x0, #0x30
  406b34:	str	x3, [x4]
  406b38:	add	x5, x0, #0x38
  406b3c:	ldp	x4, x10, [x0, #40]
  406b40:	ldr	x3, [x0, #56]
  406b44:	cmp	x4, x3
  406b48:	b.ge	406ea0 <nftw@plt+0x4320>  // b.tcont
  406b4c:	str	x4, [x0, #56]
  406b50:	ldr	x5, [x0, #24]
  406b54:	ldr	x4, [x0, #32]
  406b58:	str	x4, [x0, #48]
  406b5c:	cmp	x3, x5
  406b60:	b.le	406ecc <nftw@plt+0x434c>
  406b64:	str	x5, [x0, #40]
  406b68:	ldr	x4, [x0, #8]
  406b6c:	ldr	x5, [x0, #16]
  406b70:	str	x5, [x0, #32]
  406b74:	cmp	x3, x4
  406b78:	b.le	406ed8 <nftw@plt+0x4358>
  406b7c:	mov	x5, x2
  406b80:	ldr	x8, [x0]
  406b84:	stp	x8, x4, [x0, #16]
  406b88:	add	w1, w1, #0x9
  406b8c:	str	x10, [x7]
  406b90:	cmp	w6, w1
  406b94:	str	x3, [x5]
  406b98:	add	x0, x0, #0x48
  406b9c:	add	x2, x2, #0x48
  406ba0:	b.gt	406ab8 <nftw@plt+0x3f38>
  406ba4:	add	x11, x11, #0x1
  406ba8:	cmp	w15, w11
  406bac:	b.ne	406a20 <nftw@plt+0x3ea0>  // b.any
  406bb0:	ldr	w0, [sp, #132]
  406bb4:	ldr	x24, [x19, #24]
  406bb8:	cbz	w0, 406bf8 <nftw@plt+0x4078>
  406bbc:	ldrb	w0, [x24]
  406bc0:	mov	x1, x24
  406bc4:	cmp	w0, #0x2f
  406bc8:	b.eq	406dd4 <nftw@plt+0x4254>  // b.none
  406bcc:	cbz	w0, 406bf8 <nftw@plt+0x4078>
  406bd0:	ldr	w2, [sp, #132]
  406bd4:	nop
  406bd8:	cmp	w0, #0x2f
  406bdc:	b.ne	406be8 <nftw@plt+0x4068>  // b.any
  406be0:	sub	w2, w2, #0x1
  406be4:	mov	x24, x1
  406be8:	ldrb	w0, [x1, #1]!
  406bec:	cmp	w0, #0x0
  406bf0:	ccmp	w2, #0x0, #0x4, ne  // ne = any
  406bf4:	b.ne	406bd8 <nftw@plt+0x4058>  // b.any
  406bf8:	mov	x0, x24
  406bfc:	bl	4024f0 <strlen@plt>
  406c00:	ldr	x25, [sp, #152]
  406c04:	mov	x20, x0
  406c08:	cbz	x25, 406fe0 <nftw@plt+0x4460>
  406c0c:	add	x20, x20, #0x2
  406c10:	mov	x0, x25
  406c14:	bl	4024f0 <strlen@plt>
  406c18:	ldrb	w22, [x24]
  406c1c:	mov	x21, x0
  406c20:	add	x0, x20, x0
  406c24:	bl	402670 <malloc@plt>
  406c28:	strb	wzr, [x0]
  406c2c:	mov	x23, x0
  406c30:	cbz	x21, 406c40 <nftw@plt+0x40c0>
  406c34:	add	x2, x21, #0x1
  406c38:	mov	x1, x25
  406c3c:	bl	402490 <memcpy@plt>
  406c40:	cmp	w22, #0x2f
  406c44:	b.eq	406c50 <nftw@plt+0x40d0>  // b.none
  406c48:	mov	w0, #0x2f                  	// #47
  406c4c:	strb	w0, [x23], #1
  406c50:	mov	x1, x24
  406c54:	mov	x0, x23
  406c58:	bl	4026e0 <strcat@plt>
  406c5c:	strb	wzr, [sp, #200]
  406c60:	ldrb	w1, [x23]
  406c64:	cbz	w1, 407008 <nftw@plt+0x4488>
  406c68:	adrp	x24, 473000 <_obstack_memory_used@@Base+0x11bb8>
  406c6c:	mov	x22, x23
  406c70:	add	x24, x24, #0x1f8
  406c74:	add	x25, sp, #0xc8
  406c78:	mov	x21, x23
  406c7c:	cmp	w1, #0x25
  406c80:	ldrb	w20, [x21, #1]!
  406c84:	b.eq	406de0 <nftw@plt+0x4260>  // b.none
  406c88:	mov	x23, x21
  406c8c:	mov	w1, w20
  406c90:	cbnz	w1, 406c78 <nftw@plt+0x40f8>
  406c94:	nop
  406c98:	mov	x0, x22
  406c9c:	str	x22, [sp, #120]
  406ca0:	bl	405c10 <nftw@plt+0x3090>
  406ca4:	cbz	w0, 406f04 <nftw@plt+0x4384>
  406ca8:	bl	4059e8 <nftw@plt+0x2e68>
  406cac:	cbz	x0, 4075d4 <nftw@plt+0x4a54>
  406cb0:	ldr	w25, [x0]
  406cb4:	cbz	w25, 407014 <nftw@plt+0x4494>
  406cb8:	mov	w0, #0x6461                	// #25697
  406cbc:	movk	w0, #0x6763, lsl #16
  406cc0:	cmp	w25, w0
  406cc4:	b.eq	40780c <nftw@plt+0x4c8c>  // b.none
  406cc8:	ldr	x1, [sp, #120]
  406ccc:	adrp	x0, 473000 <_obstack_memory_used@@Base+0x11bb8>
  406cd0:	add	x0, x0, #0x260
  406cd4:	bl	405920 <nftw@plt+0x2da0>
  406cd8:	adrp	x5, 4a4000 <_obstack_memory_used@@Base+0x42bb8>
  406cdc:	add	x23, x5, #0x760
  406ce0:	ldr	x0, [sp, #112]
  406ce4:	add	x26, x19, #0x20
  406ce8:	add	x20, x19, #0x68
  406cec:	ldr	x22, [x0]
  406cf0:	cbz	x22, 406d48 <nftw@plt+0x41c8>
  406cf4:	nop
  406cf8:	mov	x25, x22
  406cfc:	mov	x21, x26
  406d00:	ldr	x22, [x22]
  406d04:	mov	w0, #0x0                   	// #0
  406d08:	ldr	x1, [x21]
  406d0c:	cbz	x1, 406d28 <nftw@plt+0x41a8>
  406d10:	ubfiz	x1, x0, #4, #32
  406d14:	add	w24, w0, #0x1
  406d18:	add	x0, x25, x1
  406d1c:	ldr	x0, [x0, #48]
  406d20:	bl	402910 <free@plt>
  406d24:	mov	w0, w24
  406d28:	add	x21, x21, #0x8
  406d2c:	cmp	x20, x21
  406d30:	b.ne	406d08 <nftw@plt+0x4188>  // b.any
  406d34:	mov	x0, x25
  406d38:	bl	402910 <free@plt>
  406d3c:	ldr	x0, [sp, #112]
  406d40:	str	x22, [x0]
  406d44:	cbnz	x22, 406cf8 <nftw@plt+0x4178>
  406d48:	ldr	x0, [x23]
  406d4c:	cbz	x0, 406d6c <nftw@plt+0x41ec>
  406d50:	ldr	w20, [x23, #12]
  406d54:	cbz	w20, 406d60 <nftw@plt+0x41e0>
  406d58:	ldr	w1, [x23, #28]
  406d5c:	tbnz	w1, #31, 407c84 <nftw@plt+0x5104>
  406d60:	bl	402620 <fclose@plt>
  406d64:	str	xzr, [x23]
  406d68:	str	wzr, [x23, #16]
  406d6c:	ldr	w0, [x23, #24]
  406d70:	str	wzr, [x23, #28]
  406d74:	cmp	w0, #0x0
  406d78:	cbz	w0, 406d98 <nftw@plt+0x4218>
  406d7c:	adrp	x0, 473000 <_obstack_memory_used@@Base+0x11bb8>
  406d80:	adrp	x1, 473000 <_obstack_memory_used@@Base+0x11bb8>
  406d84:	add	x0, x0, #0x158
  406d88:	add	x1, x1, #0x128
  406d8c:	csel	x0, x1, x0, lt  // lt = tstop
  406d90:	ldr	x1, [sp, #120]
  406d94:	bl	405920 <nftw@plt+0x2da0>
  406d98:	ldr	x0, [sp, #120]
  406d9c:	bl	402910 <free@plt>
  406da0:	ldr	x19, [x19, #8]
  406da4:	cbnz	x19, 4069e8 <nftw@plt+0x3e68>
  406da8:	ldp	x23, x24, [sp, #48]
  406dac:	ldp	x25, x26, [sp, #64]
  406db0:	ldp	x27, x28, [sp, #80]
  406db4:	ldr	d8, [sp, #96]
  406db8:	ldp	x19, x20, [sp, #16]
  406dbc:	ldp	x21, x22, [sp, #32]
  406dc0:	ldr	x0, [sp, #152]
  406dc4:	ldp	x29, x30, [sp], #224
  406dc8:	b	402910 <free@plt>
  406dcc:	mov	w0, #0x0                   	// #0
  406dd0:	b	4068b4 <nftw@plt+0x3d34>
  406dd4:	ldrb	w0, [x24, #1]
  406dd8:	add	x1, x24, #0x1
  406ddc:	b	406bcc <nftw@plt+0x404c>
  406de0:	cbz	w20, 406c98 <nftw@plt+0x4118>
  406de4:	mov	x0, x22
  406de8:	bl	4024f0 <strlen@plt>
  406dec:	cmp	w20, #0x70
  406df0:	mov	x26, x0
  406df4:	b.eq	406ee4 <nftw@plt+0x4364>  // b.none
  406df8:	cmp	w20, #0x71
  406dfc:	b.ne	406c98 <nftw@plt+0x4118>  // b.any
  406e00:	ldrb	w0, [x23, #2]
  406e04:	mov	x3, #0x0                   	// #0
  406e08:	cmp	w0, #0x7b
  406e0c:	b.eq	407594 <nftw@plt+0x4a14>  // b.none
  406e10:	mov	x0, x3
  406e14:	sub	x23, x23, x22
  406e18:	str	x3, [sp, #120]
  406e1c:	bl	4024f0 <strlen@plt>
  406e20:	add	w1, w23, #0x1
  406e24:	sub	x20, x21, x22
  406e28:	sub	w20, w26, w20
  406e2c:	mov	x26, x0
  406e30:	add	w0, w20, w0
  406e34:	and	x28, x23, #0xffffffff
  406e38:	add	w0, w1, w0
  406e3c:	bl	402670 <malloc@plt>
  406e40:	mov	x1, x22
  406e44:	mov	x23, x0
  406e48:	mov	x2, x28
  406e4c:	bl	402490 <memcpy@plt>
  406e50:	ldr	x3, [sp, #120]
  406e54:	and	x26, x26, #0xffffffff
  406e58:	mov	x2, x26
  406e5c:	add	x0, x0, x28
  406e60:	mov	x1, x3
  406e64:	bl	402490 <memcpy@plt>
  406e68:	add	x0, x0, x26
  406e6c:	mov	x1, x21
  406e70:	mov	w2, w20
  406e74:	bl	402490 <memcpy@plt>
  406e78:	mov	x1, x0
  406e7c:	add	x26, x28, x26
  406e80:	mov	x0, x22
  406e84:	mov	x22, x23
  406e88:	add	x23, x23, x26
  406e8c:	strb	wzr, [x1, w20, uxtw]
  406e90:	bl	402910 <free@plt>
  406e94:	ldrb	w1, [x23, #1]!
  406e98:	cbnz	w1, 406c78 <nftw@plt+0x40f8>
  406e9c:	b	406c98 <nftw@plt+0x4118>
  406ea0:	mov	x7, x14
  406ea4:	b	406b88 <nftw@plt+0x4008>
  406ea8:	mov	x4, x13
  406eac:	mov	x5, x12
  406eb0:	b	406b2c <nftw@plt+0x3fac>
  406eb4:	mov	x5, x9
  406eb8:	mov	x4, x8
  406ebc:	b	406ae4 <nftw@plt+0x3f64>
  406ec0:	mov	x4, x9
  406ec4:	mov	x5, x8
  406ec8:	b	406b2c <nftw@plt+0x3fac>
  406ecc:	mov	x5, x13
  406ed0:	mov	x7, x12
  406ed4:	b	406b88 <nftw@plt+0x4008>
  406ed8:	mov	x5, x9
  406edc:	mov	x7, x8
  406ee0:	b	406b88 <nftw@plt+0x4008>
  406ee4:	bl	402630 <getpid@plt>
  406ee8:	mov	w2, w0
  406eec:	mov	x1, x24
  406ef0:	add	x0, sp, #0xd0
  406ef4:	bl	4025b0 <sprintf@plt>
  406ef8:	add	x21, x23, #0x2
  406efc:	add	x3, sp, #0xd0
  406f00:	b	406e10 <nftw@plt+0x4290>
  406f04:	ldr	x21, [sp, #120]
  406f08:	ldrb	w20, [x21]
  406f0c:	cmp	w20, #0x2f
  406f10:	b.ne	406f1c <nftw@plt+0x439c>  // b.any
  406f14:	ldrb	w20, [x21, #1]
  406f18:	add	x21, x21, #0x1
  406f1c:	mov	w22, #0x2f                  	// #47
  406f20:	cbz	w20, 406f60 <nftw@plt+0x43e0>
  406f24:	ldr	x23, [sp, #120]
  406f28:	b	406f34 <nftw@plt+0x43b4>
  406f2c:	ldrb	w20, [x21, #1]!
  406f30:	cbz	w20, 406f60 <nftw@plt+0x43e0>
  406f34:	cmp	w20, #0x2f
  406f38:	b.ne	406f2c <nftw@plt+0x43ac>  // b.any
  406f3c:	strb	wzr, [x21]
  406f40:	mov	x0, x23
  406f44:	mov	w1, #0x0                   	// #0
  406f48:	bl	402810 <access@plt>
  406f4c:	cmn	w0, #0x1
  406f50:	b.eq	406f88 <nftw@plt+0x4408>  // b.none
  406f54:	strb	w22, [x21]
  406f58:	ldrb	w20, [x21, #1]!
  406f5c:	cbnz	w20, 406f34 <nftw@plt+0x43b4>
  406f60:	ldr	x0, [sp, #120]
  406f64:	bl	405c10 <nftw@plt+0x3090>
  406f68:	cbnz	w0, 406ca8 <nftw@plt+0x4128>
  406f6c:	adrp	x0, 4a4000 <_obstack_memory_used@@Base+0x42bb8>
  406f70:	adrp	x1, 473000 <_obstack_memory_used@@Base+0x11bb8>
  406f74:	ldr	x2, [sp, #120]
  406f78:	add	x1, x1, #0x240
  406f7c:	ldr	x0, [x0, #1392]
  406f80:	bl	402b30 <fprintf@plt>
  406f84:	b	406d98 <nftw@plt+0x4218>
  406f88:	mov	x0, x23
  406f8c:	mov	w1, #0x1ed                 	// #493
  406f90:	bl	402b20 <mkdir@plt>
  406f94:	cmn	w0, #0x1
  406f98:	b.ne	406f54 <nftw@plt+0x43d4>  // b.any
  406f9c:	bl	402aa0 <__errno_location@plt>
  406fa0:	ldr	w0, [x0]
  406fa4:	cmp	w0, #0x11
  406fa8:	b.eq	406f54 <nftw@plt+0x43d4>  // b.none
  406fac:	ldr	x22, [sp, #120]
  406fb0:	adrp	x0, 473000 <_obstack_memory_used@@Base+0x11bb8>
  406fb4:	add	x0, x0, #0x200
  406fb8:	mov	x1, x22
  406fbc:	bl	405920 <nftw@plt+0x2da0>
  406fc0:	adrp	x0, 4a4000 <_obstack_memory_used@@Base+0x42bb8>
  406fc4:	strb	w20, [x21]
  406fc8:	mov	x2, x22
  406fcc:	adrp	x1, 473000 <_obstack_memory_used@@Base+0x11bb8>
  406fd0:	ldr	x0, [x0, #1392]
  406fd4:	add	x1, x1, #0x228
  406fd8:	bl	402b30 <fprintf@plt>
  406fdc:	b	406d98 <nftw@plt+0x4218>
  406fe0:	add	x0, x0, #0x2
  406fe4:	bl	402670 <malloc@plt>
  406fe8:	mov	x23, x0
  406fec:	strb	wzr, [x0]
  406ff0:	mov	x1, x24
  406ff4:	mov	x0, x23
  406ff8:	bl	4026e0 <strcat@plt>
  406ffc:	strb	wzr, [sp, #200]
  407000:	ldrb	w1, [x23]
  407004:	cbnz	w1, 406c68 <nftw@plt+0x40e8>
  407008:	mov	x0, x23
  40700c:	str	x23, [sp, #120]
  407010:	b	406ca0 <nftw@plt+0x4120>
  407014:	adrp	x5, 4a4000 <_obstack_memory_used@@Base+0x42bb8>
  407018:	add	x23, x5, #0x760
  40701c:	str	wzr, [sp, #148]
  407020:	str	xzr, [sp, #168]
  407024:	ldr	x0, [x23]
  407028:	mov	w3, #0xffffffff            	// #-1
  40702c:	str	xzr, [x23, #8]
  407030:	mov	w2, #0x0                   	// #0
  407034:	mov	x1, #0x0                   	// #0
  407038:	str	w3, [x23, #28]
  40703c:	bl	4027e0 <fseek@plt>
  407040:	ldr	w0, [sp, #184]
  407044:	cbnz	w0, 40705c <nftw@plt+0x44dc>
  407048:	ldr	w0, [sp, #168]
  40704c:	add	w25, w25, #0x1
  407050:	ldr	w1, [sp, #176]
  407054:	add	w0, w0, w1
  407058:	str	w0, [sp, #148]
  40705c:	ldr	w0, [x23, #12]
  407060:	cmp	w0, #0x3ff
  407064:	b.hi	4076a0 <nftw@plt+0x4b20>  // b.pmore
  407068:	mov	w1, w0
  40706c:	add	w0, w0, #0x2
  407070:	add	x1, x1, #0x8
  407074:	str	w0, [x23, #12]
  407078:	mov	w3, #0x6461                	// #25697
  40707c:	mov	w2, #0x322a                	// #12842
  407080:	add	x0, x23, x1, lsl #2
  407084:	movk	w3, #0x6763, lsl #16
  407088:	str	w3, [x23, x1, lsl #2]
  40708c:	movk	w2, #0x4139, lsl #16
  407090:	str	w2, [x0, #4]
  407094:	ldr	w1, [x23, #12]
  407098:	ldr	w20, [x19, #16]
  40709c:	add	w0, w1, #0x1
  4070a0:	cmp	w1, #0x3ff
  4070a4:	b.hi	4077b8 <nftw@plt+0x4c38>  // b.pmore
  4070a8:	add	x1, x23, w1, uxtw #2
  4070ac:	str	w0, [x23, #12]
  4070b0:	cmp	w0, #0x3ff
  4070b4:	str	w20, [x1, #32]
  4070b8:	b.hi	407768 <nftw@plt+0x4be8>  // b.pmore
  4070bc:	mov	w1, w0
  4070c0:	add	w0, w0, #0x2
  4070c4:	add	x1, x1, #0x8
  4070c8:	str	w0, [x23, #12]
  4070cc:	mov	w3, #0xa1000000            	// #-1593835520
  4070d0:	mov	w2, #0x2                   	// #2
  4070d4:	add	x0, x23, x1, lsl #2
  4070d8:	str	w3, [x23, x1, lsl #2]
  4070dc:	str	w2, [x0, #4]
  4070e0:	ldr	w1, [x23, #12]
  4070e4:	add	w0, w1, #0x1
  4070e8:	cmp	w1, #0x3ff
  4070ec:	b.hi	40764c <nftw@plt+0x4acc>  // b.pmore
  4070f0:	add	x1, x23, w1, uxtw #2
  4070f4:	str	w0, [x23, #12]
  4070f8:	cmp	w0, #0x3ff
  4070fc:	str	w25, [x1, #32]
  407100:	b.hi	4075fc <nftw@plt+0x4a7c>  // b.pmore
  407104:	add	x2, x23, w0, uxtw #2
  407108:	ldr	w1, [x19, #104]
  40710c:	ldr	w3, [sp, #148]
  407110:	add	w0, w0, #0x1
  407114:	str	w0, [x23, #12]
  407118:	str	w3, [x2, #32]
  40711c:	cbz	w1, 4073f0 <nftw@plt+0x4870>
  407120:	adrp	x1, 473000 <_obstack_memory_used@@Base+0x11bb8>
  407124:	mov	w22, #0x0                   	// #0
  407128:	ldr	x24, [sp, #136]
  40712c:	ldr	d8, [x1, #960]
  407130:	b	407188 <nftw@plt+0x4608>
  407134:	ldr	x1, [x19, #112]
  407138:	ldr	x20, [x1, w22, uxtw #3]
  40713c:	cbz	x20, 40714c <nftw@plt+0x45cc>
  407140:	ldr	x1, [x20]
  407144:	cmp	x1, x19
  407148:	b.eq	407580 <nftw@plt+0x4a00>  // b.none
  40714c:	cmp	w0, #0x3ff
  407150:	b.hi	407454 <nftw@plt+0x48d4>  // b.pmore
  407154:	mov	w1, w0
  407158:	add	w0, w0, #0x2
  40715c:	add	x1, x1, #0x8
  407160:	str	w0, [x23, #12]
  407164:	mov	w2, #0x1000000             	// #16777216
  407168:	add	x0, x23, x1, lsl #2
  40716c:	str	w2, [x23, x1, lsl #2]
  407170:	str	wzr, [x0, #4]
  407174:	ldr	w1, [x19, #104]
  407178:	add	w22, w22, #0x1
  40717c:	ldr	w0, [x23, #12]
  407180:	cmp	w1, w22
  407184:	b.eq	4073f0 <nftw@plt+0x4870>  // b.none
  407188:	ldr	x1, [sp, #112]
  40718c:	ldr	x20, [x1]
  407190:	cbz	x20, 407134 <nftw@plt+0x45b4>
  407194:	ldr	w1, [x20, #8]
  407198:	cmp	w22, w1
  40719c:	b.ne	407134 <nftw@plt+0x45b4>  // b.any
  4071a0:	mov	w1, #0x1                   	// #1
  4071a4:	str	w1, [sp, #128]
  4071a8:	add	x20, x20, #0x10
  4071ac:	cmp	w0, #0x3ff
  4071b0:	b.hi	40758c <nftw@plt+0x4a0c>  // b.pmore
  4071b4:	mov	w1, w0
  4071b8:	add	w0, w0, #0x2
  4071bc:	add	x1, x1, #0x8
  4071c0:	str	w0, [x23, #12]
  4071c4:	mov	w3, #0x1000000             	// #16777216
  4071c8:	mov	w2, #0x3                   	// #3
  4071cc:	add	x0, x23, x1, lsl #2
  4071d0:	str	w3, [x23, x1, lsl #2]
  4071d4:	str	w2, [x0, #4]
  4071d8:	ldr	w0, [x23, #12]
  4071dc:	ldr	w21, [x20, #8]
  4071e0:	add	w1, w0, #0x1
  4071e4:	cmp	w0, #0x3ff
  4071e8:	b.hi	4074d4 <nftw@plt+0x4954>  // b.pmore
  4071ec:	add	x0, x23, w0, uxtw #2
  4071f0:	ldr	w25, [x20, #12]
  4071f4:	str	w1, [x23, #12]
  4071f8:	cmp	w1, #0x3ff
  4071fc:	str	w21, [x0, #32]
  407200:	b.hi	407534 <nftw@plt+0x49b4>  // b.pmore
  407204:	add	w0, w1, #0x1
  407208:	add	x1, x23, w1, uxtw #2
  40720c:	str	w0, [x23, #12]
  407210:	ldr	w27, [x20, #16]
  407214:	cmp	w0, #0x3ff
  407218:	str	w25, [x1, #32]
  40721c:	b.ls	407268 <nftw@plt+0x46e8>  // b.plast
  407220:	ldr	x3, [x23]
  407224:	mov	x0, x24
  407228:	mov	x2, #0x1                   	// #1
  40722c:	mov	x1, #0x1000                	// #4096
  407230:	bl	402950 <fwrite@plt>
  407234:	cmp	x0, #0x1
  407238:	b.eq	407244 <nftw@plt+0x46c4>  // b.none
  40723c:	mov	w0, #0x1                   	// #1
  407240:	str	w0, [x23, #24]
  407244:	ldr	d0, [x23, #8]
  407248:	ldr	w0, [x23, #12]
  40724c:	add	v0.2s, v0.2s, v8.2s
  407250:	subs	w0, w0, #0x400
  407254:	str	d0, [x23, #8]
  407258:	b.eq	407268 <nftw@plt+0x46e8>  // b.none
  40725c:	ldr	w1, [x23, #4128]
  407260:	str	w1, [x23, #32]
  407264:	nop
  407268:	add	x1, x23, w0, uxtw #2
  40726c:	add	w0, w0, #0x1
  407270:	str	w0, [x23, #12]
  407274:	add	x20, x20, #0x18
  407278:	add	x21, x19, #0x20
  40727c:	mov	x26, #0x0                   	// #0
  407280:	str	w27, [x1, #32]
  407284:	b	407294 <nftw@plt+0x4714>
  407288:	add	x26, x26, #0x8
  40728c:	cmp	x26, #0x48
  407290:	b.eq	407380 <nftw@plt+0x4800>  // b.none
  407294:	ldr	x0, [x21, x26]
  407298:	cbz	x0, 407288 <nftw@plt+0x4708>
  40729c:	mov	w0, #0x1a10000             	// #27328512
  4072a0:	ldr	w28, [x20]
  4072a4:	add	w27, w0, w26, lsl #14
  4072a8:	ldr	w0, [x23, #12]
  4072ac:	lsl	w25, w28, #1
  4072b0:	cmp	w0, #0x3ff
  4072b4:	b.hi	40740c <nftw@plt+0x488c>  // b.pmore
  4072b8:	mov	w1, w0
  4072bc:	add	w0, w0, #0x2
  4072c0:	add	x1, x1, #0x8
  4072c4:	str	w0, [x23, #12]
  4072c8:	sub	w4, w28, #0x1
  4072cc:	add	x0, x23, x1, lsl #2
  4072d0:	str	w27, [x23, x1, lsl #2]
  4072d4:	ubfiz	x4, x4, #3, #32
  4072d8:	ldr	x27, [x20, #8]
  4072dc:	str	w25, [x0, #4]
  4072e0:	add	x4, x4, #0x8
  4072e4:	add	x25, x27, x4
  4072e8:	cbnz	w28, 407318 <nftw@plt+0x4798>
  4072ec:	b	407370 <nftw@plt+0x47f0>
  4072f0:	mov	w1, w0
  4072f4:	add	w0, w0, #0x2
  4072f8:	add	x1, x1, #0x8
  4072fc:	str	w0, [x23, #12]
  407300:	asr	x2, x28, #32
  407304:	cmp	x27, x25
  407308:	add	x0, x23, x1, lsl #2
  40730c:	str	w28, [x23, x1, lsl #2]
  407310:	str	w2, [x0, #4]
  407314:	b.eq	407370 <nftw@plt+0x47f0>  // b.none
  407318:	ldr	w0, [x23, #12]
  40731c:	ldr	x28, [x27], #8
  407320:	cmp	w0, #0x3ff
  407324:	b.ls	4072f0 <nftw@plt+0x4770>  // b.plast
  407328:	ldr	x3, [x23]
  40732c:	mov	x0, x24
  407330:	mov	x2, #0x1                   	// #1
  407334:	mov	x1, #0x1000                	// #4096
  407338:	bl	402950 <fwrite@plt>
  40733c:	cmp	x0, #0x1
  407340:	b.eq	40734c <nftw@plt+0x47cc>  // b.none
  407344:	mov	w0, #0x1                   	// #1
  407348:	str	w0, [x23, #24]
  40734c:	ldr	d0, [x23, #8]
  407350:	ldr	w0, [x23, #12]
  407354:	add	v0.2s, v0.2s, v8.2s
  407358:	subs	w0, w0, #0x400
  40735c:	str	d0, [x23, #8]
  407360:	b.eq	4072f0 <nftw@plt+0x4770>  // b.none
  407364:	ldr	w1, [x23, #4128]
  407368:	str	w1, [x23, #32]
  40736c:	b	4072f0 <nftw@plt+0x4770>
  407370:	add	x26, x26, #0x8
  407374:	add	x20, x20, #0x10
  407378:	cmp	x26, #0x48
  40737c:	b.ne	407294 <nftw@plt+0x4714>  // b.any
  407380:	ldr	w0, [sp, #128]
  407384:	cbz	w0, 407174 <nftw@plt+0x45f4>
  407388:	ldr	x0, [sp, #112]
  40738c:	ldr	x27, [x0]
  407390:	cbz	x27, 407d1c <nftw@plt+0x519c>
  407394:	ldr	x25, [x27]
  407398:	add	x26, x19, #0x68
  40739c:	mov	w0, #0x0                   	// #0
  4073a0:	ldr	x1, [x21]
  4073a4:	cbz	x1, 4073c0 <nftw@plt+0x4840>
  4073a8:	ubfiz	x1, x0, #4, #32
  4073ac:	add	w20, w0, #0x1
  4073b0:	add	x0, x27, x1
  4073b4:	ldr	x0, [x0, #48]
  4073b8:	bl	402910 <free@plt>
  4073bc:	mov	w0, w20
  4073c0:	add	x21, x21, #0x8
  4073c4:	cmp	x26, x21
  4073c8:	b.ne	4073a0 <nftw@plt+0x4820>  // b.any
  4073cc:	mov	x0, x27
  4073d0:	bl	402910 <free@plt>
  4073d4:	ldr	x0, [sp, #112]
  4073d8:	add	w22, w22, #0x1
  4073dc:	ldr	w1, [x19, #104]
  4073e0:	str	x25, [x0]
  4073e4:	cmp	w1, w22
  4073e8:	ldr	w0, [x23, #12]
  4073ec:	b.ne	407188 <nftw@plt+0x4608>  // b.any
  4073f0:	cmp	w0, #0x3ff
  4073f4:	b.hi	407718 <nftw@plt+0x4b98>  // b.pmore
  4073f8:	add	x1, x23, w0, uxtw #2
  4073fc:	add	w0, w0, #0x1
  407400:	str	w0, [x23, #12]
  407404:	str	wzr, [x1, #32]
  407408:	b	406ce0 <nftw@plt+0x4160>
  40740c:	ldr	x3, [x23]
  407410:	mov	x0, x24
  407414:	mov	x2, #0x1                   	// #1
  407418:	mov	x1, #0x1000                	// #4096
  40741c:	bl	402950 <fwrite@plt>
  407420:	cmp	x0, #0x1
  407424:	b.eq	407430 <nftw@plt+0x48b0>  // b.none
  407428:	mov	w0, #0x1                   	// #1
  40742c:	str	w0, [x23, #24]
  407430:	ldr	d0, [x23, #8]
  407434:	ldr	w0, [x23, #12]
  407438:	add	v0.2s, v0.2s, v8.2s
  40743c:	subs	w0, w0, #0x400
  407440:	str	d0, [x23, #8]
  407444:	b.eq	4072b8 <nftw@plt+0x4738>  // b.none
  407448:	ldr	w1, [x23, #4128]
  40744c:	str	w1, [x23, #32]
  407450:	b	4072b8 <nftw@plt+0x4738>
  407454:	mov	w21, #0x0                   	// #0
  407458:	str	wzr, [sp, #128]
  40745c:	ldr	x3, [x23]
  407460:	mov	x0, x24
  407464:	mov	x2, #0x1                   	// #1
  407468:	mov	x1, #0x1000                	// #4096
  40746c:	bl	402950 <fwrite@plt>
  407470:	cmp	x0, #0x1
  407474:	b.eq	407480 <nftw@plt+0x4900>  // b.none
  407478:	mov	w0, #0x1                   	// #1
  40747c:	str	w0, [x23, #24]
  407480:	ldp	w0, w1, [x23, #8]
  407484:	add	w0, w0, #0x400
  407488:	str	w0, [x23, #8]
  40748c:	subs	w0, w1, #0x400
  407490:	b.eq	40749c <nftw@plt+0x491c>  // b.none
  407494:	ldr	w2, [x23, #4128]
  407498:	str	w2, [x23, #32]
  40749c:	mov	w0, w0
  4074a0:	sub	w1, w1, #0x3fe
  4074a4:	add	x0, x0, #0x8
  4074a8:	str	w1, [x23, #12]
  4074ac:	mov	w2, #0x1000000             	// #16777216
  4074b0:	add	x1, x23, x0, lsl #2
  4074b4:	str	w2, [x23, x0, lsl #2]
  4074b8:	str	w21, [x1, #4]
  4074bc:	cbz	w21, 407174 <nftw@plt+0x45f4>
  4074c0:	ldr	w0, [x23, #12]
  4074c4:	ldr	w21, [x20, #8]
  4074c8:	add	w1, w0, #0x1
  4074cc:	cmp	w0, #0x3ff
  4074d0:	b.ls	4071ec <nftw@plt+0x466c>  // b.plast
  4074d4:	ldr	x3, [x23]
  4074d8:	mov	x0, x24
  4074dc:	mov	x2, #0x1                   	// #1
  4074e0:	mov	x1, #0x1000                	// #4096
  4074e4:	bl	402950 <fwrite@plt>
  4074e8:	cmp	x0, #0x1
  4074ec:	b.eq	4074f8 <nftw@plt+0x4978>  // b.none
  4074f0:	mov	w0, #0x1                   	// #1
  4074f4:	str	w0, [x23, #24]
  4074f8:	ldr	d0, [x23, #8]
  4074fc:	ldr	w0, [x23, #12]
  407500:	add	v0.2s, v0.2s, v8.2s
  407504:	sub	w1, w0, #0x3ff
  407508:	subs	w0, w0, #0x400
  40750c:	str	d0, [x23, #8]
  407510:	b.eq	4075c4 <nftw@plt+0x4a44>  // b.none
  407514:	ldr	w2, [x23, #4128]
  407518:	add	x0, x23, w0, uxtw #2
  40751c:	str	w2, [x23, #32]
  407520:	cmp	w1, #0x3ff
  407524:	ldr	w25, [x20, #12]
  407528:	str	w1, [x23, #12]
  40752c:	str	w21, [x0, #32]
  407530:	b.ls	407204 <nftw@plt+0x4684>  // b.plast
  407534:	ldr	x3, [x23]
  407538:	mov	x0, x24
  40753c:	mov	x2, #0x1                   	// #1
  407540:	mov	x1, #0x1000                	// #4096
  407544:	bl	402950 <fwrite@plt>
  407548:	cmp	x0, #0x1
  40754c:	b.eq	407558 <nftw@plt+0x49d8>  // b.none
  407550:	mov	w0, #0x1                   	// #1
  407554:	str	w0, [x23, #24]
  407558:	ldr	d0, [x23, #8]
  40755c:	ldr	w1, [x23, #12]
  407560:	add	v0.2s, v0.2s, v8.2s
  407564:	sub	w0, w1, #0x3ff
  407568:	subs	w1, w1, #0x400
  40756c:	str	d0, [x23, #8]
  407570:	b.eq	4075ec <nftw@plt+0x4a6c>  // b.none
  407574:	ldr	w2, [x23, #4128]
  407578:	str	w2, [x23, #32]
  40757c:	b	407208 <nftw@plt+0x4688>
  407580:	str	wzr, [sp, #128]
  407584:	cmp	w0, #0x3ff
  407588:	b.ls	4071b4 <nftw@plt+0x4634>  // b.plast
  40758c:	mov	w21, #0x3                   	// #3
  407590:	b	40745c <nftw@plt+0x48dc>
  407594:	add	x20, x23, #0x3
  407598:	mov	w1, #0x7d                  	// #125
  40759c:	mov	x0, x20
  4075a0:	bl	402940 <strchr@plt>
  4075a4:	mov	x21, x0
  4075a8:	cbz	x0, 406c98 <nftw@plt+0x4118>
  4075ac:	strb	wzr, [x21], #1
  4075b0:	mov	x0, x20
  4075b4:	bl	402ab0 <getenv@plt>
  4075b8:	cmp	x0, #0x0
  4075bc:	csel	x3, x25, x0, eq  // eq = none
  4075c0:	b	406e10 <nftw@plt+0x4290>
  4075c4:	ldp	w1, w27, [x20, #12]
  4075c8:	mov	w0, #0x2                   	// #2
  4075cc:	stp	w21, w1, [x23, #32]
  4075d0:	b	407268 <nftw@plt+0x46e8>
  4075d4:	adrp	x5, 4a4000 <_obstack_memory_used@@Base+0x42bb8>
  4075d8:	mov	w25, #0x0                   	// #0
  4075dc:	add	x23, x5, #0x760
  4075e0:	str	wzr, [sp, #148]
  4075e4:	str	xzr, [sp, #168]
  4075e8:	b	407024 <nftw@plt+0x44a4>
  4075ec:	ldr	w27, [x20, #16]
  4075f0:	mov	w0, #0x1                   	// #1
  4075f4:	str	w25, [x23, #32]
  4075f8:	b	407268 <nftw@plt+0x46e8>
  4075fc:	ldr	x3, [x23]
  407600:	mov	x2, #0x1                   	// #1
  407604:	ldr	x0, [sp, #136]
  407608:	mov	x1, #0x1000                	// #4096
  40760c:	bl	402950 <fwrite@plt>
  407610:	cmp	x0, #0x1
  407614:	b.eq	407620 <nftw@plt+0x4aa0>  // b.none
  407618:	mov	w0, #0x1                   	// #1
  40761c:	str	w0, [x23, #24]
  407620:	adrp	x0, 473000 <_obstack_memory_used@@Base+0x11bb8>
  407624:	ldr	d0, [x23, #8]
  407628:	ldr	d1, [x0, #960]
  40762c:	ldr	w0, [x23, #12]
  407630:	add	v0.2s, v0.2s, v1.2s
  407634:	subs	w0, w0, #0x400
  407638:	str	d0, [x23, #8]
  40763c:	b.eq	4076f8 <nftw@plt+0x4b78>  // b.none
  407640:	ldr	w1, [x23, #4128]
  407644:	str	w1, [x23, #32]
  407648:	b	407104 <nftw@plt+0x4584>
  40764c:	ldr	x3, [x23]
  407650:	mov	x2, #0x1                   	// #1
  407654:	ldr	x0, [sp, #136]
  407658:	mov	x1, #0x1000                	// #4096
  40765c:	bl	402950 <fwrite@plt>
  407660:	cmp	x0, #0x1
  407664:	b.eq	407670 <nftw@plt+0x4af0>  // b.none
  407668:	mov	w0, #0x1                   	// #1
  40766c:	str	w0, [x23, #24]
  407670:	adrp	x0, 473000 <_obstack_memory_used@@Base+0x11bb8>
  407674:	ldr	d0, [x23, #8]
  407678:	ldr	w1, [x23, #12]
  40767c:	ldr	d1, [x0, #960]
  407680:	sub	w0, w1, #0x3ff
  407684:	subs	w1, w1, #0x400
  407688:	add	v0.2s, v0.2s, v1.2s
  40768c:	str	d0, [x23, #8]
  407690:	b.eq	4076f0 <nftw@plt+0x4b70>  // b.none
  407694:	ldr	w2, [x23, #4128]
  407698:	str	w2, [x23, #32]
  40769c:	b	4070f0 <nftw@plt+0x4570>
  4076a0:	ldr	x3, [x23]
  4076a4:	mov	x2, #0x1                   	// #1
  4076a8:	ldr	x0, [sp, #136]
  4076ac:	mov	x1, #0x1000                	// #4096
  4076b0:	bl	402950 <fwrite@plt>
  4076b4:	cmp	x0, #0x1
  4076b8:	b.eq	4076c4 <nftw@plt+0x4b44>  // b.none
  4076bc:	mov	w0, #0x1                   	// #1
  4076c0:	str	w0, [x23, #24]
  4076c4:	adrp	x0, 473000 <_obstack_memory_used@@Base+0x11bb8>
  4076c8:	ldr	d0, [x23, #8]
  4076cc:	ldr	d1, [x0, #960]
  4076d0:	ldr	w0, [x23, #12]
  4076d4:	add	v0.2s, v0.2s, v1.2s
  4076d8:	subs	w0, w0, #0x400
  4076dc:	str	d0, [x23, #8]
  4076e0:	b.eq	407068 <nftw@plt+0x44e8>  // b.none
  4076e4:	ldr	w1, [x23, #4128]
  4076e8:	str	w1, [x23, #32]
  4076ec:	b	407068 <nftw@plt+0x44e8>
  4076f0:	mov	w0, #0x1                   	// #1
  4076f4:	str	w25, [x23, #32]
  4076f8:	add	x2, x23, w0, uxtw #2
  4076fc:	ldr	w1, [x19, #104]
  407700:	ldr	w3, [sp, #148]
  407704:	add	w0, w0, #0x1
  407708:	str	w0, [x23, #12]
  40770c:	str	w3, [x2, #32]
  407710:	cbnz	w1, 407120 <nftw@plt+0x45a0>
  407714:	b	4073f8 <nftw@plt+0x4878>
  407718:	ldr	x3, [x23]
  40771c:	mov	x2, #0x1                   	// #1
  407720:	ldr	x0, [sp, #136]
  407724:	mov	x1, #0x1000                	// #4096
  407728:	bl	402950 <fwrite@plt>
  40772c:	cmp	x0, #0x1
  407730:	b.eq	40773c <nftw@plt+0x4bbc>  // b.none
  407734:	mov	w0, #0x1                   	// #1
  407738:	str	w0, [x23, #24]
  40773c:	adrp	x0, 473000 <_obstack_memory_used@@Base+0x11bb8>
  407740:	ldr	d0, [x23, #8]
  407744:	ldr	d1, [x0, #960]
  407748:	ldr	w0, [x23, #12]
  40774c:	add	v0.2s, v0.2s, v1.2s
  407750:	subs	w0, w0, #0x400
  407754:	str	d0, [x23, #8]
  407758:	b.eq	4073f8 <nftw@plt+0x4878>  // b.none
  40775c:	ldr	w1, [x23, #4128]
  407760:	str	w1, [x23, #32]
  407764:	b	4073f8 <nftw@plt+0x4878>
  407768:	ldr	x3, [x23]
  40776c:	mov	x2, #0x1                   	// #1
  407770:	ldr	x0, [sp, #136]
  407774:	mov	x1, #0x1000                	// #4096
  407778:	bl	402950 <fwrite@plt>
  40777c:	cmp	x0, #0x1
  407780:	b.eq	40778c <nftw@plt+0x4c0c>  // b.none
  407784:	mov	w0, #0x1                   	// #1
  407788:	str	w0, [x23, #24]
  40778c:	adrp	x0, 473000 <_obstack_memory_used@@Base+0x11bb8>
  407790:	ldr	d0, [x23, #8]
  407794:	ldr	d1, [x0, #960]
  407798:	ldr	w0, [x23, #12]
  40779c:	add	v0.2s, v0.2s, v1.2s
  4077a0:	subs	w0, w0, #0x400
  4077a4:	str	d0, [x23, #8]
  4077a8:	b.eq	4070bc <nftw@plt+0x453c>  // b.none
  4077ac:	ldr	w1, [x23, #4128]
  4077b0:	str	w1, [x23, #32]
  4077b4:	b	4070bc <nftw@plt+0x453c>
  4077b8:	ldr	x3, [x23]
  4077bc:	mov	x2, #0x1                   	// #1
  4077c0:	ldr	x0, [sp, #136]
  4077c4:	mov	x1, #0x1000                	// #4096
  4077c8:	bl	402950 <fwrite@plt>
  4077cc:	cmp	x0, #0x1
  4077d0:	b.eq	4077dc <nftw@plt+0x4c5c>  // b.none
  4077d4:	mov	w0, #0x1                   	// #1
  4077d8:	str	w0, [x23, #24]
  4077dc:	adrp	x0, 473000 <_obstack_memory_used@@Base+0x11bb8>
  4077e0:	ldr	d0, [x23, #8]
  4077e4:	ldr	w1, [x23, #12]
  4077e8:	ldr	d1, [x0, #960]
  4077ec:	sub	w0, w1, #0x3ff
  4077f0:	subs	w1, w1, #0x400
  4077f4:	add	v0.2s, v0.2s, v1.2s
  4077f8:	str	d0, [x23, #8]
  4077fc:	b.eq	407870 <nftw@plt+0x4cf0>  // b.none
  407800:	ldr	w2, [x23, #4128]
  407804:	str	w2, [x23, #32]
  407808:	b	4070a8 <nftw@plt+0x4528>
  40780c:	bl	4059e8 <nftw@plt+0x2e68>
  407810:	cbz	x0, 407d2c <nftw@plt+0x51ac>
  407814:	ldr	w1, [x0]
  407818:	ldr	x2, [sp, #120]
  40781c:	add	x0, x19, #0x18
  407820:	bl	405aa0 <nftw@plt+0x2f20>
  407824:	adrp	x5, 4a4000 <_obstack_memory_used@@Base+0x42bb8>
  407828:	add	x23, x5, #0x760
  40782c:	cbz	w0, 406ce0 <nftw@plt+0x4160>
  407830:	bl	4059e8 <nftw@plt+0x2e68>
  407834:	cbz	x0, 407d24 <nftw@plt+0x51a4>
  407838:	ldr	w0, [x0]
  40783c:	ldr	w1, [x19, #16]
  407840:	cmp	w1, w0
  407844:	b.eq	40787c <nftw@plt+0x4cfc>  // b.none
  407848:	ldr	x1, [sp, #120]
  40784c:	adrp	x0, 473000 <_obstack_memory_used@@Base+0x11bb8>
  407850:	add	x0, x0, #0x298
  407854:	str	wzr, [sp, #148]
  407858:	mov	w25, #0x0                   	// #0
  40785c:	bl	405920 <nftw@plt+0x2da0>
  407860:	str	xzr, [sp, #168]
  407864:	adrp	x5, 4a4000 <_obstack_memory_used@@Base+0x42bb8>
  407868:	add	x23, x5, #0x760
  40786c:	b	407024 <nftw@plt+0x44a4>
  407870:	mov	w0, #0x1                   	// #1
  407874:	str	w20, [x23, #32]
  407878:	b	4070bc <nftw@plt+0x453c>
  40787c:	bl	4059e8 <nftw@plt+0x2e68>
  407880:	cbz	x0, 407e20 <nftw@plt+0x52a0>
  407884:	ldr	w1, [x0]
  407888:	mov	w0, #0xa1000000            	// #-1593835520
  40788c:	cmp	w1, w0
  407890:	b.ne	407e20 <nftw@plt+0x52a0>  // b.any
  407894:	bl	4059e8 <nftw@plt+0x2e68>
  407898:	cbz	x0, 407ef0 <nftw@plt+0x5370>
  40789c:	ldr	w0, [x0]
  4078a0:	cbz	w0, 407ef0 <nftw@plt+0x5370>
  4078a4:	bl	4059e8 <nftw@plt+0x2e68>
  4078a8:	cbz	x0, 407e6c <nftw@plt+0x52ec>
  4078ac:	ldr	w25, [x0]
  4078b0:	bl	4059e8 <nftw@plt+0x2e68>
  4078b4:	cbz	x0, 407e60 <nftw@plt+0x52e0>
  4078b8:	ldr	w0, [x0]
  4078bc:	str	w0, [sp, #148]
  4078c0:	mov	w0, w0
  4078c4:	str	x0, [sp, #168]
  4078c8:	bl	4059e8 <nftw@plt+0x2e68>
  4078cc:	cbz	x0, 407e40 <nftw@plt+0x52c0>
  4078d0:	ldr	w2, [x19, #104]
  4078d4:	ldr	w1, [x0]
  4078d8:	cbz	w2, 407eac <nftw@plt+0x532c>
  4078dc:	ldr	x0, [x19, #112]
  4078e0:	mov	w2, #0x1000000             	// #16777216
  4078e4:	cmp	w1, w2
  4078e8:	ldr	x20, [x0]
  4078ec:	b.ne	407e48 <nftw@plt+0x52c8>  // b.any
  4078f0:	adrp	x5, 4a4000 <_obstack_memory_used@@Base+0x42bb8>
  4078f4:	add	x23, x5, #0x760
  4078f8:	ldr	x21, [sp, #136]
  4078fc:	add	x28, x19, #0x20
  407900:	mov	x26, x23
  407904:	mov	x24, #0x0                   	// #0
  407908:	ldr	x0, [sp, #112]
  40790c:	str	x0, [sp, #160]
  407910:	str	w25, [sp, #188]
  407914:	bl	4059e8 <nftw@plt+0x2e68>
  407918:	str	w24, [sp, #128]
  40791c:	str	w24, [sp, #144]
  407920:	cbz	x0, 407b34 <nftw@plt+0x4fb4>
  407924:	ldr	w0, [x0]
  407928:	cbz	w0, 407b34 <nftw@plt+0x4fb4>
  40792c:	cmp	w0, #0x3
  407930:	b.ne	407b74 <nftw@plt+0x4ff4>  // b.any
  407934:	cbz	x20, 407944 <nftw@plt+0x4dc4>
  407938:	ldr	x0, [x20]
  40793c:	cmp	x0, x19
  407940:	b.eq	407d34 <nftw@plt+0x51b4>  // b.none
  407944:	ldp	x2, x0, [x19, #88]
  407948:	ldp	x3, x1, [x19, #72]
  40794c:	cmp	x0, #0x0
  407950:	cset	w0, ne  // ne = any
  407954:	cmp	x2, #0x0
  407958:	cinc	w0, w0, ne  // ne = any
  40795c:	cmp	x1, #0x0
  407960:	cinc	w0, w0, ne  // ne = any
  407964:	cmp	x3, #0x0
  407968:	ldp	x3, x1, [x19, #48]
  40796c:	cinc	w0, w0, ne  // ne = any
  407970:	ldr	x2, [x19, #64]
  407974:	cmp	x2, #0x0
  407978:	cinc	w0, w0, ne  // ne = any
  40797c:	cmp	x1, #0x0
  407980:	ldp	x1, x2, [x19, #32]
  407984:	cinc	w0, w0, ne  // ne = any
  407988:	cmp	x3, #0x0
  40798c:	cinc	w0, w0, ne  // ne = any
  407990:	cmp	x2, #0x0
  407994:	cinc	w0, w0, ne  // ne = any
  407998:	cmp	x1, #0x0
  40799c:	cinc	w0, w0, ne  // ne = any
  4079a0:	lsl	w0, w0, #4
  4079a4:	add	w0, w0, #0x38
  4079a8:	bl	402670 <malloc@plt>
  4079ac:	str	xzr, [x0]
  4079b0:	mov	x20, x0
  4079b4:	str	w24, [x0, #8]
  4079b8:	bl	4059e8 <nftw@plt+0x2e68>
  4079bc:	cbz	x0, 407bfc <nftw@plt+0x507c>
  4079c0:	ldr	w0, [x0]
  4079c4:	str	w0, [x20, #24]
  4079c8:	bl	4059e8 <nftw@plt+0x2e68>
  4079cc:	cbz	x0, 407bf4 <nftw@plt+0x5074>
  4079d0:	ldr	w0, [x0]
  4079d4:	str	w0, [x20, #28]
  4079d8:	bl	4059e8 <nftw@plt+0x2e68>
  4079dc:	cbz	x0, 407bec <nftw@plt+0x506c>
  4079e0:	ldr	w0, [x0]
  4079e4:	mov	x25, #0x0                   	// #0
  4079e8:	mov	w27, #0x0                   	// #0
  4079ec:	str	w0, [x20, #32]
  4079f0:	b	407a00 <nftw@plt+0x4e80>
  4079f4:	add	x25, x25, #0x1
  4079f8:	cmp	x25, #0x9
  4079fc:	b.eq	407b28 <nftw@plt+0x4fa8>  // b.none
  407a00:	ldr	x0, [x28, x25, lsl #3]
  407a04:	mov	w23, w25
  407a08:	cbz	x0, 4079f4 <nftw@plt+0x4e74>
  407a0c:	bl	4059e8 <nftw@plt+0x2e68>
  407a10:	cbz	x0, 407c04 <nftw@plt+0x5084>
  407a14:	ldr	w2, [x0]
  407a18:	mov	w1, #0x1a10000             	// #27328512
  407a1c:	add	w0, w1, w25, lsl #17
  407a20:	cmp	w2, w0
  407a24:	b.ne	407c04 <nftw@plt+0x5084>  // b.any
  407a28:	bl	4059e8 <nftw@plt+0x2e68>
  407a2c:	cbz	x0, 407bd0 <nftw@plt+0x5050>
  407a30:	ldr	w1, [x0]
  407a34:	lsr	w22, w1, #1
  407a38:	lsl	w0, w22, #3
  407a3c:	bl	402670 <malloc@plt>
  407a40:	ubfiz	x2, x27, #4, #32
  407a44:	mov	x23, x0
  407a48:	add	x2, x20, x2
  407a4c:	sub	w6, w22, #0x1
  407a50:	str	w22, [x2, #40]
  407a54:	str	x0, [x2, #48]
  407a58:	cbz	w22, 407b18 <nftw@plt+0x4f98>
  407a5c:	ubfiz	x6, x6, #3, #32
  407a60:	add	x6, x6, #0x8
  407a64:	add	x22, x0, x6
  407a68:	b	407aec <nftw@plt+0x4f6c>
  407a6c:	cmp	w4, #0x1
  407a70:	b.hi	407ac0 <nftw@plt+0x4f40>  // b.pmore
  407a74:	ldr	w0, [x26, #8]
  407a78:	add	w0, w0, w1
  407a7c:	str	w0, [x26, #8]
  407a80:	cbz	w4, 407a8c <nftw@plt+0x4f0c>
  407a84:	ldr	w0, [x21, w1, uxtw #2]
  407a88:	str	w0, [x26, #32]
  407a8c:	ldr	x3, [x26]
  407a90:	mov	x1, #0x1                   	// #1
  407a94:	add	x0, x21, w4, uxtw #2
  407a98:	mov	x2, #0x1000                	// #4096
  407a9c:	stp	wzr, w4, [x26, #12]
  407aa0:	bl	4028d0 <fread@plt>
  407aa4:	lsr	x0, x0, #2
  407aa8:	ldr	w1, [x26, #16]
  407aac:	add	w1, w1, w0
  407ab0:	str	w1, [x26, #16]
  407ab4:	cmp	w1, #0x1
  407ab8:	b.ls	407b98 <nftw@plt+0x5018>  // b.plast
  407abc:	ldr	w1, [x26, #12]
  407ac0:	mov	w0, w1
  407ac4:	add	w1, w1, #0x2
  407ac8:	add	x0, x0, #0x8
  407acc:	str	w1, [x26, #12]
  407ad0:	add	x2, x26, x0, lsl #2
  407ad4:	ldr	w1, [x26, x0, lsl #2]
  407ad8:	ldr	w0, [x2, #4]
  407adc:	orr	x0, x1, x0, lsl #32
  407ae0:	stur	x0, [x23, #-8]
  407ae4:	cmp	x23, x22
  407ae8:	b.eq	407b18 <nftw@plt+0x4f98>  // b.none
  407aec:	ldp	w1, w4, [x26, #12]
  407af0:	add	x23, x23, #0x8
  407af4:	ldr	w0, [x26, #28]
  407af8:	sub	w4, w4, w1
  407afc:	cmp	w0, #0x0
  407b00:	b.gt	407a6c <nftw@plt+0x4eec>
  407b04:	mov	x0, #0x0                   	// #0
  407b08:	stur	x0, [x23, #-8]
  407b0c:	cmp	x23, x22
  407b10:	b.ne	407aec <nftw@plt+0x4f6c>  // b.any
  407b14:	nop
  407b18:	add	w27, w27, #0x1
  407b1c:	add	x25, x25, #0x1
  407b20:	cmp	x25, #0x9
  407b24:	b.ne	407a00 <nftw@plt+0x4e80>  // b.any
  407b28:	ldr	x0, [sp, #160]
  407b2c:	str	x20, [sp, #160]
  407b30:	str	x20, [x0]
  407b34:	ldr	w0, [sp, #144]
  407b38:	add	w22, w0, #0x1
  407b3c:	bl	4059e8 <nftw@plt+0x2e68>
  407b40:	str	w22, [sp, #128]
  407b44:	cbz	x0, 407bb0 <nftw@plt+0x5030>
  407b48:	ldr	w1, [x0]
  407b4c:	ldr	w0, [x19, #104]
  407b50:	cmp	w0, w22
  407b54:	b.eq	407bc0 <nftw@plt+0x5040>  // b.none
  407b58:	ldr	x2, [x19, #112]
  407b5c:	add	x0, x24, #0x1
  407b60:	mov	w3, #0x1000000             	// #16777216
  407b64:	mov	x24, x0
  407b68:	cmp	w1, w3
  407b6c:	ldr	x20, [x2, x0, lsl #3]
  407b70:	b.eq	407914 <nftw@plt+0x4d94>  // b.none
  407b74:	mov	x23, x26
  407b78:	adrp	x2, 472000 <_obstack_memory_used@@Base+0x10bb8>
  407b7c:	add	x2, x2, #0x6f8
  407b80:	ldr	w3, [sp, #128]
  407b84:	adrp	x0, 473000 <_obstack_memory_used@@Base+0x11bb8>
  407b88:	ldr	x1, [sp, #120]
  407b8c:	add	x0, x0, #0x350
  407b90:	bl	405920 <nftw@plt+0x2da0>
  407b94:	b	406ce0 <nftw@plt+0x4160>
  407b98:	ldr	w2, [x26, #20]
  407b9c:	mov	x0, #0x0                   	// #0
  407ba0:	add	w2, w2, #0x2
  407ba4:	sub	w1, w2, w1
  407ba8:	stp	wzr, w1, [x26, #16]
  407bac:	b	407ae0 <nftw@plt+0x4f60>
  407bb0:	ldr	w0, [x19, #104]
  407bb4:	mov	w1, #0x0                   	// #0
  407bb8:	cmp	w0, w22
  407bbc:	b.ne	407b58 <nftw@plt+0x4fd8>  // b.any
  407bc0:	ldr	w25, [sp, #188]
  407bc4:	mov	x23, x26
  407bc8:	cbz	w1, 407024 <nftw@plt+0x44a4>
  407bcc:	b	407b78 <nftw@plt+0x4ff8>
  407bd0:	bl	402670 <malloc@plt>
  407bd4:	ubfiz	x1, x27, #4, #32
  407bd8:	add	w27, w27, #0x1
  407bdc:	add	x1, x20, x1
  407be0:	str	wzr, [x1, #40]
  407be4:	str	x0, [x1, #48]
  407be8:	b	407b1c <nftw@plt+0x4f9c>
  407bec:	mov	w0, #0x0                   	// #0
  407bf0:	b	4079e4 <nftw@plt+0x4e64>
  407bf4:	mov	w0, #0x0                   	// #0
  407bf8:	b	4079d4 <nftw@plt+0x4e54>
  407bfc:	mov	w0, #0x0                   	// #0
  407c00:	b	4079c4 <nftw@plt+0x4e44>
  407c04:	ldr	w2, [sp, #144]
  407c08:	mov	w4, w23
  407c0c:	ldr	x1, [sp, #120]
  407c10:	adrp	x3, 473000 <_obstack_memory_used@@Base+0x11bb8>
  407c14:	adrp	x0, 473000 <_obstack_memory_used@@Base+0x11bb8>
  407c18:	add	x3, x3, #0x308
  407c1c:	add	x0, x0, #0x320
  407c20:	bl	405920 <nftw@plt+0x2da0>
  407c24:	ldr	x0, [x20]
  407c28:	str	x0, [sp, #160]
  407c2c:	cbz	w23, 407c70 <nftw@plt+0x50f0>
  407c30:	sub	w23, w23, #0x1
  407c34:	add	x1, x19, #0x28
  407c38:	mov	x27, x28
  407c3c:	mov	w0, #0x0                   	// #0
  407c40:	add	x23, x1, w23, uxtw #3
  407c44:	ldr	x1, [x27]
  407c48:	cbz	x1, 407c64 <nftw@plt+0x50e4>
  407c4c:	ubfiz	x2, x0, #4, #32
  407c50:	add	w25, w0, #0x1
  407c54:	add	x0, x20, x2
  407c58:	ldr	x0, [x0, #48]
  407c5c:	bl	402910 <free@plt>
  407c60:	mov	w0, w25
  407c64:	add	x27, x27, #0x8
  407c68:	cmp	x27, x23
  407c6c:	b.ne	407c44 <nftw@plt+0x50c4>  // b.any
  407c70:	mov	x0, x20
  407c74:	bl	402910 <free@plt>
  407c78:	ldr	x0, [sp, #160]
  407c7c:	cbnz	x0, 407b34 <nftw@plt+0x4fb4>
  407c80:	b	407b74 <nftw@plt+0x4ff4>
  407c84:	mov	x3, x0
  407c88:	lsl	w1, w20, #2
  407c8c:	ldr	x0, [sp, #136]
  407c90:	mov	x2, #0x1                   	// #1
  407c94:	bl	402950 <fwrite@plt>
  407c98:	cmp	x0, #0x1
  407c9c:	b.eq	407ca8 <nftw@plt+0x5128>  // b.none
  407ca0:	mov	w0, #0x1                   	// #1
  407ca4:	str	w0, [x23, #24]
  407ca8:	ldp	w2, w1, [x23, #8]
  407cac:	ldr	x0, [x23]
  407cb0:	add	w2, w2, w20
  407cb4:	sub	w20, w1, w20
  407cb8:	stp	w2, w20, [x23, #8]
  407cbc:	b	406d60 <nftw@plt+0x41e0>
  407cc0:	adrp	x0, 473000 <_obstack_memory_used@@Base+0x11bb8>
  407cc4:	add	x0, x0, #0x1a0
  407cc8:	bl	402ab0 <getenv@plt>
  407ccc:	mov	x22, x0
  407cd0:	cbz	x0, 407d10 <nftw@plt+0x5190>
  407cd4:	bl	4024f0 <strlen@plt>
  407cd8:	cbz	x0, 407d10 <nftw@plt+0x5190>
  407cdc:	sub	x21, x0, #0x1
  407ce0:	str	wzr, [sp, #132]
  407ce4:	ldrb	w1, [x22, x21]
  407ce8:	cmp	w1, #0x2f
  407cec:	b.ne	406990 <nftw@plt+0x3e10>  // b.any
  407cf0:	cbnz	x21, 406998 <nftw@plt+0x3e18>
  407cf4:	ldr	w0, [sp, #132]
  407cf8:	cbz	w0, 407d10 <nftw@plt+0x5190>
  407cfc:	adrp	x0, 481000 <_obstack_memory_used@@Base+0x1fbb8>
  407d00:	mov	x21, #0x1                   	// #1
  407d04:	add	x22, x0, #0x4c0
  407d08:	mov	x0, #0x2                   	// #2
  407d0c:	b	406998 <nftw@plt+0x3e18>
  407d10:	str	wzr, [sp, #132]
  407d14:	str	xzr, [sp, #152]
  407d18:	b	4069b0 <nftw@plt+0x3e30>
  407d1c:	mov	x25, #0x0                   	// #0
  407d20:	b	4073d4 <nftw@plt+0x4854>
  407d24:	mov	w0, #0x0                   	// #0
  407d28:	b	40783c <nftw@plt+0x4cbc>
  407d2c:	mov	w1, #0x0                   	// #0
  407d30:	b	407818 <nftw@plt+0x4c98>
  407d34:	bl	4059e8 <nftw@plt+0x2e68>
  407d38:	cbz	x0, 407ea4 <nftw@plt+0x5324>
  407d3c:	ldr	w0, [x0]
  407d40:	ldr	w1, [x20, #8]
  407d44:	cmp	w1, w0
  407d48:	b.ne	407b74 <nftw@plt+0x4ff4>  // b.any
  407d4c:	bl	4059e8 <nftw@plt+0x2e68>
  407d50:	cbz	x0, 407e9c <nftw@plt+0x531c>
  407d54:	ldr	w0, [x0]
  407d58:	ldr	w1, [x20, #12]
  407d5c:	cmp	w1, w0
  407d60:	b.ne	407b74 <nftw@plt+0x4ff4>  // b.any
  407d64:	bl	4059e8 <nftw@plt+0x2e68>
  407d68:	cbz	x0, 407e94 <nftw@plt+0x5314>
  407d6c:	ldr	w0, [x0]
  407d70:	ldr	w1, [x20, #16]
  407d74:	cmp	w1, w0
  407d78:	b.ne	407b74 <nftw@plt+0x4ff4>  // b.any
  407d7c:	add	x20, x20, #0x18
  407d80:	add	x23, x19, #0x20
  407d84:	mov	w27, #0x1a10000             	// #27328512
  407d88:	ldr	x0, [x23]
  407d8c:	mov	x22, x0
  407d90:	cbz	x0, 407dcc <nftw@plt+0x524c>
  407d94:	bl	4059e8 <nftw@plt+0x2e68>
  407d98:	cbz	x0, 407e10 <nftw@plt+0x5290>
  407d9c:	ldr	w25, [x0]
  407da0:	bl	4059e8 <nftw@plt+0x2e68>
  407da4:	cbz	x0, 407e08 <nftw@plt+0x5288>
  407da8:	ldr	w0, [x0]
  407dac:	cmp	w25, w27
  407db0:	b.ne	407b74 <nftw@plt+0x4ff4>  // b.any
  407db4:	ldr	w1, [x20]
  407db8:	cmp	w0, w1, lsl #1
  407dbc:	b.ne	407b74 <nftw@plt+0x4ff4>  // b.any
  407dc0:	ldr	x0, [x20, #8]
  407dc4:	add	x20, x20, #0x10
  407dc8:	blr	x22
  407dcc:	add	w27, w27, #0x20, lsl #12
  407dd0:	mov	w0, #0x1b30000             	// #28508160
  407dd4:	add	x23, x23, #0x8
  407dd8:	cmp	w27, w0
  407ddc:	b.ne	407d88 <nftw@plt+0x5208>  // b.any
  407de0:	ldr	x0, [x26]
  407de4:	cbz	x0, 407e74 <nftw@plt+0x52f4>
  407de8:	ldr	w0, [x26, #24]
  407dec:	cmp	w0, #0x0
  407df0:	cbz	w0, 407b34 <nftw@plt+0x4fb4>
  407df4:	mov	x23, x26
  407df8:	b.ge	407ecc <nftw@plt+0x534c>  // b.tcont
  407dfc:	adrp	x2, 473000 <_obstack_memory_used@@Base+0x11bb8>
  407e00:	add	x2, x2, #0x118
  407e04:	b	407e80 <nftw@plt+0x5300>
  407e08:	mov	w0, #0x0                   	// #0
  407e0c:	b	407dac <nftw@plt+0x522c>
  407e10:	bl	4059e8 <nftw@plt+0x2e68>
  407e14:	cbz	x0, 407b74 <nftw@plt+0x4ff4>
  407e18:	mov	w25, #0x0                   	// #0
  407e1c:	b	407da8 <nftw@plt+0x5228>
  407e20:	adrp	x2, 473000 <_obstack_memory_used@@Base+0x11bb8>
  407e24:	adrp	x5, 4a4000 <_obstack_memory_used@@Base+0x42bb8>
  407e28:	add	x2, x2, #0x108
  407e2c:	add	x23, x5, #0x760
  407e30:	str	wzr, [sp, #128]
  407e34:	b	407b80 <nftw@plt+0x5000>
  407e38:	mov	x19, #0x0                   	// #0
  407e3c:	b	406938 <nftw@plt+0x3db8>
  407e40:	ldr	w0, [x19, #104]
  407e44:	cbz	w0, 407ec0 <nftw@plt+0x5340>
  407e48:	adrp	x2, 472000 <_obstack_memory_used@@Base+0x10bb8>
  407e4c:	adrp	x5, 4a4000 <_obstack_memory_used@@Base+0x42bb8>
  407e50:	add	x2, x2, #0x6f8
  407e54:	add	x23, x5, #0x760
  407e58:	str	wzr, [sp, #128]
  407e5c:	b	407b80 <nftw@plt+0x5000>
  407e60:	str	wzr, [sp, #148]
  407e64:	str	xzr, [sp, #168]
  407e68:	b	4078c8 <nftw@plt+0x4d48>
  407e6c:	mov	w25, #0x0                   	// #0
  407e70:	b	4078b0 <nftw@plt+0x4d30>
  407e74:	adrp	x2, 473000 <_obstack_memory_used@@Base+0x11bb8>
  407e78:	mov	x23, x26
  407e7c:	add	x2, x2, #0x110
  407e80:	ldr	x1, [sp, #120]
  407e84:	adrp	x0, 473000 <_obstack_memory_used@@Base+0x11bb8>
  407e88:	add	x0, x0, #0x388
  407e8c:	bl	405920 <nftw@plt+0x2da0>
  407e90:	b	406ce0 <nftw@plt+0x4160>
  407e94:	mov	w0, #0x0                   	// #0
  407e98:	b	407d70 <nftw@plt+0x51f0>
  407e9c:	mov	w0, #0x0                   	// #0
  407ea0:	b	407d58 <nftw@plt+0x51d8>
  407ea4:	mov	w0, #0x0                   	// #0
  407ea8:	b	407d40 <nftw@plt+0x51c0>
  407eac:	str	wzr, [sp, #128]
  407eb0:	adrp	x5, 4a4000 <_obstack_memory_used@@Base+0x42bb8>
  407eb4:	add	x23, x5, #0x760
  407eb8:	cbz	w1, 407024 <nftw@plt+0x44a4>
  407ebc:	b	407b78 <nftw@plt+0x4ff8>
  407ec0:	adrp	x5, 4a4000 <_obstack_memory_used@@Base+0x42bb8>
  407ec4:	add	x23, x5, #0x760
  407ec8:	b	407024 <nftw@plt+0x44a4>
  407ecc:	adrp	x2, 473000 <_obstack_memory_used@@Base+0x11bb8>
  407ed0:	add	x2, x2, #0x110
  407ed4:	b	407e80 <nftw@plt+0x5300>
  407ed8:	adrp	x2, 473000 <_obstack_memory_used@@Base+0x11bb8>
  407edc:	adrp	x0, 473000 <_obstack_memory_used@@Base+0x11bb8>
  407ee0:	add	x2, x2, #0x1b0
  407ee4:	add	x0, x0, #0x1d0
  407ee8:	mov	w1, #0x1c7                 	// #455
  407eec:	bl	402bf0 <nftw@plt+0x70>
  407ef0:	adrp	x2, 473000 <_obstack_memory_used@@Base+0x11bb8>
  407ef4:	adrp	x0, 473000 <_obstack_memory_used@@Base+0x11bb8>
  407ef8:	add	x2, x2, #0x2f8
  407efc:	add	x0, x0, #0x1d0
  407f00:	mov	w1, #0xf8                  	// #248
  407f04:	bl	402bf0 <nftw@plt+0x70>
  407f08:	ldr	x0, [x0, #24]
  407f0c:	ret
  407f10:	cbz	w1, 407f6c <nftw@plt+0x53ec>
  407f14:	stp	x29, x30, [sp, #-48]!
  407f18:	mov	x29, sp
  407f1c:	str	x21, [sp, #32]
  407f20:	sub	w21, w1, #0x1
  407f24:	add	x21, x21, #0x1
  407f28:	stp	x19, x20, [sp, #16]
  407f2c:	mov	x19, x0
  407f30:	add	x21, x0, x21, lsl #3
  407f34:	nop
  407f38:	bl	404898 <nftw@plt+0x1d18>
  407f3c:	mov	x20, x0
  407f40:	bl	4048e0 <nftw@plt+0x1d60>
  407f44:	mov	w1, w0
  407f48:	ldr	x2, [x19]
  407f4c:	madd	x1, x1, x20, x2
  407f50:	str	x1, [x19], #8
  407f54:	cmp	x19, x21
  407f58:	b.ne	407f38 <nftw@plt+0x53b8>  // b.any
  407f5c:	ldp	x19, x20, [sp, #16]
  407f60:	ldr	x21, [sp, #32]
  407f64:	ldp	x29, x30, [sp], #48
  407f68:	ret
  407f6c:	ret
  407f70:	cbz	w1, 407fb4 <nftw@plt+0x5434>
  407f74:	stp	x29, x30, [sp, #-32]!
  407f78:	mov	x29, sp
  407f7c:	stp	x19, x20, [sp, #16]
  407f80:	sub	w20, w1, #0x1
  407f84:	add	x20, x20, #0x1
  407f88:	mov	x19, x0
  407f8c:	add	x20, x0, x20, lsl #3
  407f90:	bl	404898 <nftw@plt+0x1d18>
  407f94:	ldr	x1, [x19]
  407f98:	orr	x1, x1, x0
  407f9c:	str	x1, [x19], #8
  407fa0:	cmp	x19, x20
  407fa4:	b.ne	407f90 <nftw@plt+0x5410>  // b.any
  407fa8:	ldp	x19, x20, [sp, #16]
  407fac:	ldp	x29, x30, [sp], #32
  407fb0:	ret
  407fb4:	ret
  407fb8:	cbz	w1, 40800c <nftw@plt+0x548c>
  407fbc:	stp	x29, x30, [sp, #-32]!
  407fc0:	sub	w1, w1, #0x1
  407fc4:	mov	x29, sp
  407fc8:	stp	x19, x20, [sp, #16]
  407fcc:	add	x20, x0, #0x8
  407fd0:	mov	x19, x0
  407fd4:	add	x20, x20, w1, uxtw #3
  407fd8:	bl	404898 <nftw@plt+0x1d18>
  407fdc:	cbz	x0, 407ff4 <nftw@plt+0x5474>
  407fe0:	ldr	x1, [x19]
  407fe4:	cmp	x1, #0x0
  407fe8:	ccmp	x1, x0, #0x0, ne  // ne = any
  407fec:	b.le	407ff4 <nftw@plt+0x5474>
  407ff0:	str	x0, [x19]
  407ff4:	add	x19, x19, #0x8
  407ff8:	cmp	x19, x20
  407ffc:	b.ne	407fd8 <nftw@plt+0x5458>  // b.any
  408000:	ldp	x19, x20, [sp, #16]
  408004:	ldp	x29, x30, [sp], #32
  408008:	ret
  40800c:	ret
  408010:	stp	x29, x30, [sp, #-64]!
  408014:	mov	x29, sp
  408018:	stp	x21, x22, [sp, #32]
  40801c:	mov	w22, #0xaaab                	// #43691
  408020:	movk	w22, #0xaaaa, lsl #16
  408024:	stp	x19, x20, [sp, #16]
  408028:	umull	x22, w1, w22
  40802c:	stp	x23, x24, [sp, #48]
  408030:	lsr	x22, x22, #33
  408034:	add	w24, w22, w22, lsl #1
  408038:	subs	w24, w1, w24
  40803c:	b.ne	408100 <nftw@plt+0x5580>  // b.any
  408040:	mov	x19, x0
  408044:	cmp	w1, #0x2
  408048:	b.hi	40807c <nftw@plt+0x54fc>  // b.pmore
  40804c:	b	4080e0 <nftw@plt+0x5560>
  408050:	cmp	x0, x20
  408054:	b.ge	4080f4 <nftw@plt+0x5574>  // b.tcont
  408058:	sub	x20, x20, x0
  40805c:	stp	x21, x20, [x19]
  408060:	add	w24, w24, #0x1
  408064:	ldr	x0, [x19, #16]
  408068:	cmp	w22, w24
  40806c:	add	x19, x19, #0x18
  408070:	add	x1, x0, x1
  408074:	stur	x1, [x19, #-8]
  408078:	b.ls	4080e0 <nftw@plt+0x5560>  // b.plast
  40807c:	bl	404898 <nftw@plt+0x1d18>
  408080:	mov	x21, x0
  408084:	bl	404898 <nftw@plt+0x1d18>
  408088:	mov	x23, x0
  40808c:	bl	4048e0 <nftw@plt+0x1d60>
  408090:	mov	w20, w0
  408094:	bl	404898 <nftw@plt+0x1d18>
  408098:	mul	x20, x20, x23
  40809c:	mov	x23, x0
  4080a0:	bl	4048e0 <nftw@plt+0x1d60>
  4080a4:	mov	w1, w0
  4080a8:	ldr	x0, [x19]
  4080ac:	mul	x1, x1, x23
  4080b0:	cmp	x0, x21
  4080b4:	ldr	x0, [x19, #8]
  4080b8:	b.ne	408050 <nftw@plt+0x54d0>  // b.any
  4080bc:	add	x20, x0, x20
  4080c0:	str	x20, [x19, #8]
  4080c4:	ldr	x0, [x19, #16]
  4080c8:	add	w24, w24, #0x1
  4080cc:	cmp	w22, w24
  4080d0:	add	x19, x19, #0x18
  4080d4:	add	x1, x0, x1
  4080d8:	stur	x1, [x19, #-8]
  4080dc:	b.hi	40807c <nftw@plt+0x54fc>  // b.pmore
  4080e0:	ldp	x19, x20, [sp, #16]
  4080e4:	ldp	x21, x22, [sp, #32]
  4080e8:	ldp	x23, x24, [sp, #48]
  4080ec:	ldp	x29, x30, [sp], #64
  4080f0:	ret
  4080f4:	sub	x20, x0, x20
  4080f8:	str	x20, [x19, #8]
  4080fc:	b	408060 <nftw@plt+0x54e0>
  408100:	adrp	x2, 473000 <_obstack_memory_used@@Base+0x11bb8>
  408104:	adrp	x0, 473000 <_obstack_memory_used@@Base+0x11bb8>
  408108:	add	x2, x2, #0x3c8
  40810c:	add	x0, x0, #0x3e0
  408110:	mov	w1, #0x67                  	// #103
  408114:	bl	402bf0 <nftw@plt+0x70>
  408118:	stp	x29, x30, [sp, #-96]!
  40811c:	mov	w2, #0x8e39                	// #36409
  408120:	movk	w2, #0x38e3, lsl #16
  408124:	mov	x29, sp
  408128:	stp	x23, x24, [sp, #48]
  40812c:	mov	x24, x0
  408130:	umull	x0, w1, w2
  408134:	stp	x19, x20, [sp, #16]
  408138:	lsr	x0, x0, #33
  40813c:	stp	x21, x22, [sp, #32]
  408140:	stp	x25, x26, [sp, #64]
  408144:	add	w0, w0, w0, lsl #3
  408148:	cmp	w1, w0
  40814c:	stp	x27, x28, [sp, #80]
  408150:	b.ne	408264 <nftw@plt+0x56e4>  // b.any
  408154:	mov	w25, w1
  408158:	cbz	w1, 408230 <nftw@plt+0x56b0>
  40815c:	mov	w23, #0x0                   	// #0
  408160:	add	w21, w23, #0x1
  408164:	sub	sp, sp, #0x80
  408168:	mov	x19, sp
  40816c:	mov	w20, #0x4                   	// #4
  408170:	lsl	x21, x21, #3
  408174:	mov	w27, #0x8                   	// #8
  408178:	add	x22, x24, x21
  40817c:	stp	xzr, xzr, [x19, #64]
  408180:	ldr	q1, [x24, x21]
  408184:	stp	xzr, xzr, [x19, #80]
  408188:	ldr	q0, [x22, #16]
  40818c:	stp	xzr, xzr, [x19, #96]
  408190:	stp	xzr, xzr, [x19, #112]
  408194:	stp	q1, q0, [x19]
  408198:	ldp	q1, q0, [x22, #32]
  40819c:	stp	q1, q0, [x19, #32]
  4081a0:	bl	404898 <nftw@plt+0x1d18>
  4081a4:	bl	4048e0 <nftw@plt+0x1d60>
  4081a8:	bl	404898 <nftw@plt+0x1d18>
  4081ac:	mov	x26, x0
  4081b0:	bl	404898 <nftw@plt+0x1d18>
  4081b4:	mov	x28, x0
  4081b8:	bl	4048e0 <nftw@plt+0x1d60>
  4081bc:	mov	w1, w0
  4081c0:	mul	x0, x1, x28
  4081c4:	cbz	w27, 408250 <nftw@plt+0x56d0>
  4081c8:	mov	w2, #0x0                   	// #0
  4081cc:	b	4081dc <nftw@plt+0x565c>
  4081d0:	add	w2, w2, #0x2
  4081d4:	cmp	w2, w27
  4081d8:	b.cs	408250 <nftw@plt+0x56d0>  // b.hs, b.nlast
  4081dc:	ldr	x3, [x19, w2, uxtw #3]
  4081e0:	cmp	x3, x26
  4081e4:	b.ne	4081d0 <nftw@plt+0x5650>  // b.any
  4081e8:	add	w2, w2, #0x1
  4081ec:	ldr	x1, [x19, x2, lsl #3]
  4081f0:	add	x0, x1, x0
  4081f4:	str	x0, [x19, x2, lsl #3]
  4081f8:	subs	w20, w20, #0x1
  4081fc:	b.ne	4081a8 <nftw@plt+0x5628>  // b.any
  408200:	mov	w1, w27
  408204:	mov	x0, x19
  408208:	bl	406790 <nftw@plt+0x3c10>
  40820c:	add	w23, w23, #0x9
  408210:	ldp	q0, q2, [x19]
  408214:	cmp	w25, w23
  408218:	ldr	q1, [x19, #32]
  40821c:	str	q0, [x24, x21]
  408220:	ldr	q0, [x19, #48]
  408224:	stp	q2, q1, [x22, #16]
  408228:	str	q0, [x22, #48]
  40822c:	b.hi	408160 <nftw@plt+0x55e0>  // b.pmore
  408230:	mov	sp, x29
  408234:	ldp	x19, x20, [sp, #16]
  408238:	ldp	x21, x22, [sp, #32]
  40823c:	ldp	x23, x24, [sp, #48]
  408240:	ldp	x25, x26, [sp, #64]
  408244:	ldp	x27, x28, [sp, #80]
  408248:	ldp	x29, x30, [sp], #96
  40824c:	ret
  408250:	add	w1, w27, #0x1
  408254:	str	x26, [x19, w27, uxtw #3]
  408258:	add	w27, w27, #0x2
  40825c:	str	x0, [x19, x1, lsl #3]
  408260:	b	4081f8 <nftw@plt+0x5678>
  408264:	adrp	x2, 473000 <_obstack_memory_used@@Base+0x11bb8>
  408268:	adrp	x0, 473000 <_obstack_memory_used@@Base+0x11bb8>
  40826c:	add	x2, x2, #0x408
  408270:	add	x0, x0, #0x3e0
  408274:	mov	w1, #0x87                  	// #135
  408278:	bl	402bf0 <nftw@plt+0x70>
  40827c:	nop
  408280:	cmp	w2, #0x0
  408284:	b.lt	4082fc <nftw@plt+0x577c>  // b.tstop
  408288:	stp	x29, x30, [sp, #-32]!
  40828c:	mov	x29, sp
  408290:	stp	x19, x20, [sp, #16]
  408294:	mov	x19, x1
  408298:	adrp	x1, 4a4000 <_obstack_memory_used@@Base+0x42bb8>
  40829c:	ldr	x20, [x1, #1392]
  4082a0:	b.ne	4082cc <nftw@plt+0x574c>  // b.any
  4082a4:	mov	x2, x19
  4082a8:	mov	x0, x20
  4082ac:	ldp	x19, x20, [sp, #16]
  4082b0:	adrp	x3, 472000 <_obstack_memory_used@@Base+0x10bb8>
  4082b4:	ldp	x29, x30, [sp], #32
  4082b8:	add	x3, x3, #0x5c0
  4082bc:	mov	x4, x3
  4082c0:	adrp	x1, 473000 <_obstack_memory_used@@Base+0x11bb8>
  4082c4:	add	x1, x1, #0x428
  4082c8:	b	402b30 <fprintf@plt>
  4082cc:	mov	w0, w2
  4082d0:	bl	4616e0 <_obstack_memory_used@@Base+0x298>
  4082d4:	mov	x2, x19
  4082d8:	mov	x4, x0
  4082dc:	mov	x0, x20
  4082e0:	adrp	x3, 473000 <_obstack_memory_used@@Base+0x11bb8>
  4082e4:	ldp	x19, x20, [sp, #16]
  4082e8:	add	x3, x3, #0x420
  4082ec:	ldp	x29, x30, [sp], #32
  4082f0:	adrp	x1, 473000 <_obstack_memory_used@@Base+0x11bb8>
  4082f4:	add	x1, x1, #0x428
  4082f8:	b	402b30 <fprintf@plt>
  4082fc:	ret
  408300:	mov	x2, x1
  408304:	stp	x29, x30, [sp, #-32]!
  408308:	mov	x29, sp
  40830c:	ldr	w2, [x2, #56]
  408310:	ldr	x1, [x1, #40]
  408314:	str	x19, [sp, #16]
  408318:	mov	x19, x0
  40831c:	bl	40d978 <nftw@plt+0xadf8>
  408320:	ldr	x0, [x19]
  408324:	bl	412618 <nftw@plt+0xfa98>
  408328:	ldr	x0, [x19]
  40832c:	ldr	x19, [sp, #16]
  408330:	ldp	x29, x30, [sp], #32
  408334:	b	412318 <nftw@plt+0xf798>
  408338:	stp	x29, x30, [sp, #-32]!
  40833c:	mov	x29, sp
  408340:	stp	x19, x20, [sp, #16]
  408344:	mov	x19, x0
  408348:	ldr	w0, [x0, #56]
  40834c:	cbz	w0, 408398 <nftw@plt+0x5818>
  408350:	ldrb	w0, [x19, #64]
  408354:	ldr	x20, [x19]
  408358:	cbnz	w0, 40838c <nftw@plt+0x580c>
  40835c:	adrp	x0, 473000 <_obstack_memory_used@@Base+0x11bb8>
  408360:	add	x0, x0, #0x460
  408364:	bl	402b10 <gettext@plt>
  408368:	mov	x1, x0
  40836c:	adrp	x2, 4a5000 <__environ@@GLIBC_2.17+0xa68>
  408370:	mov	x0, x20
  408374:	ldr	x2, [x2, #1936]
  408378:	bl	414b40 <nftw@plt+0x11fc0>
  40837c:	ldr	x0, [x19]
  408380:	ldp	x19, x20, [sp, #16]
  408384:	ldp	x29, x30, [sp], #32
  408388:	b	414d30 <nftw@plt+0x121b0>
  40838c:	adrp	x0, 473000 <_obstack_memory_used@@Base+0x11bb8>
  408390:	add	x0, x0, #0x430
  408394:	b	408364 <nftw@plt+0x57e4>
  408398:	ldp	x19, x20, [sp, #16]
  40839c:	ldp	x29, x30, [sp], #32
  4083a0:	ret
  4083a4:	nop
  4083a8:	stp	x29, x30, [sp, #-64]!
  4083ac:	mov	x29, sp
  4083b0:	stp	x19, x20, [sp, #16]
  4083b4:	mov	x20, x0
  4083b8:	orr	x0, x2, x4
  4083bc:	cbz	x0, 408558 <nftw@plt+0x59d8>
  4083c0:	ldr	w0, [x20]
  4083c4:	cmp	x2, #0x0
  4083c8:	stp	x21, x22, [sp, #32]
  4083cc:	mov	x19, x4
  4083d0:	mov	x21, x2
  4083d4:	str	x23, [sp, #48]
  4083d8:	mov	x22, x1
  4083dc:	ccmp	w0, #0x0, #0x0, ne  // ne = any
  4083e0:	mov	w23, w3
  4083e4:	b.eq	408568 <nftw@plt+0x59e8>  // b.none
  4083e8:	cmp	w0, #0x13
  4083ec:	b.gt	408518 <nftw@plt+0x5998>
  4083f0:	add	w0, w0, #0x1
  4083f4:	str	w0, [x20]
  4083f8:	cbz	x19, 4085a0 <nftw@plt+0x5a20>
  4083fc:	mov	x0, x19
  408400:	mov	w1, #0x400b                	// #16395
  408404:	bl	45d830 <nftw@plt+0x5acb0>
  408408:	cmp	x0, #0x0
  40840c:	csel	x19, x19, x0, eq  // eq = none
  408410:	mov	x20, x0
  408414:	adrp	x1, 473000 <_obstack_memory_used@@Base+0x11bb8>
  408418:	mov	x0, x19
  40841c:	add	x1, x1, #0x4b0
  408420:	mov	x2, #0x4                   	// #4
  408424:	bl	4026a0 <strncmp@plt>
  408428:	cbnz	w0, 40843c <nftw@plt+0x58bc>
  40842c:	ldrb	w0, [x19, #4]
  408430:	cmp	w0, #0x28
  408434:	ccmp	w0, #0x0, #0x4, ne  // ne = any
  408438:	b.eq	408508 <nftw@plt+0x5988>  // b.none
  40843c:	adrp	x1, 473000 <_obstack_memory_used@@Base+0x11bb8>
  408440:	mov	x0, x19
  408444:	add	x1, x1, #0x4a8
  408448:	mov	x2, #0xc                   	// #12
  40844c:	bl	4026a0 <strncmp@plt>
  408450:	cbz	w0, 4084f8 <nftw@plt+0x5978>
  408454:	adrp	x1, 473000 <_obstack_memory_used@@Base+0x11bb8>
  408458:	mov	x0, x19
  40845c:	add	x1, x1, #0x4b8
  408460:	mov	x2, #0x10                  	// #16
  408464:	bl	4026a0 <strncmp@plt>
  408468:	cbnz	w0, 40847c <nftw@plt+0x58fc>
  40846c:	ldrb	w0, [x19, #16]
  408470:	cmp	w0, #0x28
  408474:	ccmp	w0, #0x0, #0x4, ne  // ne = any
  408478:	b.eq	408508 <nftw@plt+0x5988>  // b.none
  40847c:	adrp	x1, 473000 <_obstack_memory_used@@Base+0x11bb8>
  408480:	mov	x0, x19
  408484:	add	x1, x1, #0x4d0
  408488:	mov	x2, #0xc                   	// #12
  40848c:	bl	4026a0 <strncmp@plt>
  408490:	cbnz	w0, 4084a4 <nftw@plt+0x5924>
  408494:	ldrb	w0, [x19, #12]
  408498:	cmp	w0, #0x28
  40849c:	ccmp	w0, #0x0, #0x4, ne  // ne = any
  4084a0:	b.eq	408508 <nftw@plt+0x5988>  // b.none
  4084a4:	adrp	x0, 4a4000 <_obstack_memory_used@@Base+0x42bb8>
  4084a8:	cmp	x21, #0x0
  4084ac:	adrp	x4, 473000 <_obstack_memory_used@@Base+0x11bb8>
  4084b0:	add	x4, x4, #0x490
  4084b4:	ldr	x0, [x0, #1392]
  4084b8:	adrp	x1, 473000 <_obstack_memory_used@@Base+0x11bb8>
  4084bc:	mov	w5, w23
  4084c0:	mov	x3, x19
  4084c4:	mov	x2, x22
  4084c8:	csel	x4, x4, x21, eq  // eq = none
  4084cc:	add	x1, x1, #0x4e0
  4084d0:	bl	402b30 <fprintf@plt>
  4084d4:	cbz	x20, 408590 <nftw@plt+0x5a10>
  4084d8:	mov	x0, x20
  4084dc:	bl	402910 <free@plt>
  4084e0:	mov	w0, #0x0                   	// #0
  4084e4:	ldp	x19, x20, [sp, #16]
  4084e8:	ldp	x21, x22, [sp, #32]
  4084ec:	ldr	x23, [sp, #48]
  4084f0:	ldp	x29, x30, [sp], #64
  4084f4:	ret
  4084f8:	ldrb	w0, [x19, #12]
  4084fc:	cmp	w0, #0x28
  408500:	ccmp	w0, #0x0, #0x4, ne  // ne = any
  408504:	b.ne	408454 <nftw@plt+0x58d4>  // b.any
  408508:	cbz	x20, 408518 <nftw@plt+0x5998>
  40850c:	mov	x0, x20
  408510:	bl	402910 <free@plt>
  408514:	nop
  408518:	ldp	x21, x22, [sp, #32]
  40851c:	mov	w0, #0x1                   	// #1
  408520:	ldr	x23, [sp, #48]
  408524:	ldp	x19, x20, [sp, #16]
  408528:	ldp	x29, x30, [sp], #64
  40852c:	ret
  408530:	adrp	x4, 473000 <_obstack_memory_used@@Base+0x11bb8>
  408534:	add	x4, x4, #0x490
  408538:	mov	w5, w23
  40853c:	mov	x2, x22
  408540:	mov	x3, x4
  408544:	adrp	x1, 473000 <_obstack_memory_used@@Base+0x11bb8>
  408548:	add	x1, x1, #0x4e0
  40854c:	bl	402b30 <fprintf@plt>
  408550:	ldp	x21, x22, [sp, #32]
  408554:	ldr	x23, [sp, #48]
  408558:	mov	w0, #0x0                   	// #0
  40855c:	ldp	x19, x20, [sp, #16]
  408560:	ldp	x29, x30, [sp], #64
  408564:	ret
  408568:	mov	x0, x2
  40856c:	bl	460fc0 <nftw@plt+0x5e440>
  408570:	adrp	x1, 473000 <_obstack_memory_used@@Base+0x11bb8>
  408574:	add	x1, x1, #0x498
  408578:	bl	402890 <strcmp@plt>
  40857c:	cbz	w0, 408590 <nftw@plt+0x5a10>
  408580:	ldr	w0, [x20]
  408584:	cmp	w0, #0x13
  408588:	b.le	4083f0 <nftw@plt+0x5870>
  40858c:	b	408518 <nftw@plt+0x5998>
  408590:	mov	w0, #0x0                   	// #0
  408594:	ldp	x21, x22, [sp, #32]
  408598:	ldr	x23, [sp, #48]
  40859c:	b	40855c <nftw@plt+0x59dc>
  4085a0:	adrp	x0, 4a4000 <_obstack_memory_used@@Base+0x42bb8>
  4085a4:	ldr	x0, [x0, #1392]
  4085a8:	cbz	x21, 408530 <nftw@plt+0x59b0>
  4085ac:	mov	w5, w23
  4085b0:	mov	x4, x21
  4085b4:	mov	x2, x22
  4085b8:	adrp	x3, 473000 <_obstack_memory_used@@Base+0x11bb8>
  4085bc:	adrp	x1, 473000 <_obstack_memory_used@@Base+0x11bb8>
  4085c0:	add	x3, x3, #0x490
  4085c4:	add	x1, x1, #0x4e0
  4085c8:	bl	402b30 <fprintf@plt>
  4085cc:	mov	w0, #0x0                   	// #0
  4085d0:	ldp	x21, x22, [sp, #32]
  4085d4:	ldr	x23, [sp, #48]
  4085d8:	b	408524 <nftw@plt+0x59a4>
  4085dc:	nop
  4085e0:	stp	x29, x30, [sp, #-272]!
  4085e4:	mov	w9, #0xffffffc8            	// #-56
  4085e8:	mov	w8, #0xffffff80            	// #-128
  4085ec:	mov	x29, sp
  4085f0:	add	x10, sp, #0xd0
  4085f4:	add	x11, sp, #0x110
  4085f8:	stp	x11, x11, [sp, #48]
  4085fc:	str	x10, [sp, #64]
  408600:	stp	w9, w8, [sp, #72]
  408604:	ldp	x10, x11, [sp, #48]
  408608:	stp	x10, x11, [sp, #16]
  40860c:	ldp	x8, x9, [sp, #64]
  408610:	stp	x8, x9, [sp, #32]
  408614:	str	q0, [sp, #80]
  408618:	str	q1, [sp, #96]
  40861c:	str	q2, [sp, #112]
  408620:	str	q3, [sp, #128]
  408624:	str	q4, [sp, #144]
  408628:	str	q5, [sp, #160]
  40862c:	str	q6, [sp, #176]
  408630:	str	q7, [sp, #192]
  408634:	stp	x1, x2, [sp, #216]
  408638:	add	x1, sp, #0x10
  40863c:	stp	x3, x4, [sp, #232]
  408640:	stp	x5, x6, [sp, #248]
  408644:	str	x7, [sp, #264]
  408648:	bl	461768 <_obstack_memory_used@@Base+0x320>
  40864c:	ldp	x29, x30, [sp], #272
  408650:	ret
  408654:	nop
  408658:	stp	x29, x30, [sp, #-80]!
  40865c:	mov	x29, sp
  408660:	stp	x21, x22, [sp, #32]
  408664:	mov	x21, x0
  408668:	ldrb	w0, [x0, #67]
  40866c:	stp	x19, x20, [sp, #16]
  408670:	mov	x19, x2
  408674:	mov	x2, #0x5                   	// #5
  408678:	stp	x23, x24, [sp, #48]
  40867c:	mov	w23, w3
  408680:	mov	w24, w4
  408684:	str	x25, [sp, #64]
  408688:	mov	x25, x1
  40868c:	adrp	x1, 473000 <_obstack_memory_used@@Base+0x11bb8>
  408690:	add	x1, x1, #0x508
  408694:	bl	40be18 <nftw@plt+0x9298>
  408698:	mov	x1, x0
  40869c:	ldrb	w0, [x21, #67]
  4086a0:	adrp	x20, 4a5000 <__environ@@GLIBC_2.17+0xa68>
  4086a4:	mov	x21, x1
  4086a8:	bl	40bea8 <nftw@plt+0x9328>
  4086ac:	mov	x22, x0
  4086b0:	ldr	x1, [x20, #1936]
  4086b4:	cmp	x19, #0x0
  4086b8:	csel	x19, x1, x19, eq  // eq = none
  4086bc:	adrp	x1, 473000 <_obstack_memory_used@@Base+0x11bb8>
  4086c0:	mov	x0, x19
  4086c4:	add	x1, x1, #0x510
  4086c8:	bl	402890 <strcmp@plt>
  4086cc:	cbz	w0, 408718 <nftw@plt+0x5b98>
  4086d0:	ldrb	w0, [x25]
  4086d4:	cbz	w0, 408710 <nftw@plt+0x5b90>
  4086d8:	cbz	w23, 408718 <nftw@plt+0x5b98>
  4086dc:	cmp	w24, #0x0
  4086e0:	adrp	x0, 473000 <_obstack_memory_used@@Base+0x11bb8>
  4086e4:	adrp	x2, 473000 <_obstack_memory_used@@Base+0x11bb8>
  4086e8:	add	x0, x0, #0x500
  4086ec:	add	x2, x2, #0x4f8
  4086f0:	csel	x2, x2, x0, eq  // eq = none
  4086f4:	add	x20, x20, #0x790
  4086f8:	mov	w4, w24
  4086fc:	mov	w3, w23
  408700:	add	x0, x20, #0x10
  408704:	mov	x1, #0x20                  	// #32
  408708:	bl	402600 <snprintf@plt>
  40870c:	b	408720 <nftw@plt+0x5ba0>
  408710:	cbnz	w23, 408750 <nftw@plt+0x5bd0>
  408714:	nop
  408718:	add	x20, x20, #0x790
  40871c:	strb	wzr, [x20, #16]
  408720:	mov	x4, x22
  408724:	add	x3, x20, #0x10
  408728:	mov	x2, x19
  40872c:	mov	x1, x21
  408730:	ldp	x19, x20, [sp, #16]
  408734:	adrp	x0, 473000 <_obstack_memory_used@@Base+0x11bb8>
  408738:	ldp	x21, x22, [sp, #32]
  40873c:	add	x0, x0, #0x520
  408740:	ldp	x23, x24, [sp, #48]
  408744:	ldr	x25, [sp, #64]
  408748:	ldp	x29, x30, [sp], #80
  40874c:	b	4085e0 <nftw@plt+0x5a60>
  408750:	adrp	x2, 473000 <_obstack_memory_used@@Base+0x11bb8>
  408754:	mov	w24, #0x0                   	// #0
  408758:	add	x2, x2, #0x4f8
  40875c:	b	4086f4 <nftw@plt+0x5b74>
  408760:	stp	x29, x30, [sp, #-32]!
  408764:	mov	x29, sp
  408768:	stp	x19, x20, [sp, #16]
  40876c:	mov	x19, x0
  408770:	mov	x0, x1
  408774:	mov	x1, x19
  408778:	ldp	w3, w4, [x0, #8]
  40877c:	ldr	x2, [x0]
  408780:	ldr	x0, [x1], #121
  408784:	bl	408658 <nftw@plt+0x5ad8>
  408788:	mov	x1, x0
  40878c:	mov	x20, x0
  408790:	ldr	x0, [x19]
  408794:	bl	414bf0 <nftw@plt+0x12070>
  408798:	mov	x0, x20
  40879c:	bl	402910 <free@plt>
  4087a0:	ldr	x0, [x19]
  4087a4:	ldp	x19, x20, [sp, #16]
  4087a8:	ldp	x29, x30, [sp], #32
  4087ac:	b	412f40 <nftw@plt+0x103c0>
  4087b0:	stp	x29, x30, [sp, #-32]!
  4087b4:	mov	x2, #0x5                   	// #5
  4087b8:	mov	x29, sp
  4087bc:	stp	x19, x20, [sp, #16]
  4087c0:	mov	x19, x0
  4087c4:	mov	x20, x1
  4087c8:	ldr	x0, [x0]
  4087cc:	adrp	x1, 473000 <_obstack_memory_used@@Base+0x11bb8>
  4087d0:	add	x1, x1, #0x508
  4087d4:	ldrb	w0, [x0, #67]
  4087d8:	bl	40be18 <nftw@plt+0x9298>
  4087dc:	ldr	x1, [x19]
  4087e0:	mov	x19, x0
  4087e4:	ldrb	w0, [x1, #67]
  4087e8:	bl	40bea8 <nftw@plt+0x9328>
  4087ec:	mov	x3, x0
  4087f0:	mov	x2, x20
  4087f4:	mov	x1, x19
  4087f8:	ldp	x19, x20, [sp, #16]
  4087fc:	adrp	x0, 473000 <_obstack_memory_used@@Base+0x11bb8>
  408800:	ldp	x29, x30, [sp], #32
  408804:	add	x0, x0, #0x530
  408808:	b	4085e0 <nftw@plt+0x5a60>
  40880c:	nop
  408810:	stp	x29, x30, [sp, #-32]!
  408814:	adrp	x0, 473000 <_obstack_memory_used@@Base+0x11bb8>
  408818:	add	x0, x0, #0x540
  40881c:	mov	x29, sp
  408820:	bl	402ab0 <getenv@plt>
  408824:	cbz	x0, 40883c <nftw@plt+0x5cbc>
  408828:	mov	w2, #0xa                   	// #10
  40882c:	mov	x1, #0x0                   	// #0
  408830:	bl	4028c0 <strtol@plt>
  408834:	cmp	w0, #0x0
  408838:	b.gt	408864 <nftw@plt+0x5ce4>
  40883c:	add	x2, sp, #0x18
  408840:	mov	x1, #0x5413                	// #21523
  408844:	mov	w0, #0x0                   	// #0
  408848:	strh	wzr, [sp, #26]
  40884c:	bl	402b50 <ioctl@plt>
  408850:	cbnz	w0, 40886c <nftw@plt+0x5cec>
  408854:	ldrh	w0, [sp, #26]
  408858:	mov	w1, #0x7fffffff            	// #2147483647
  40885c:	cmp	w0, #0x0
  408860:	csel	w0, w0, w1, ne  // ne = any
  408864:	ldp	x29, x30, [sp], #32
  408868:	ret
  40886c:	mov	w0, #0x7fffffff            	// #2147483647
  408870:	ldp	x29, x30, [sp], #32
  408874:	ret
  408878:	stp	x29, x30, [sp, #-48]!
  40887c:	mov	x29, sp
  408880:	str	x19, [sp, #16]
  408884:	mov	x19, x0
  408888:	cbz	w1, 4088a8 <nftw@plt+0x5d28>
  40888c:	sub	w1, w1, #0x1
  408890:	cmp	w1, #0x0
  408894:	b.le	4088c0 <nftw@plt+0x5d40>
  408898:	str	w1, [x19, #112]
  40889c:	ldr	x19, [sp, #16]
  4088a0:	ldp	x29, x30, [sp], #48
  4088a4:	ret
  4088a8:	ldr	x0, [x0]
  4088ac:	ldr	x0, [x0, #8]
  4088b0:	ldr	x0, [x0, #192]
  4088b4:	bl	4026c0 <fileno_unlocked@plt>
  4088b8:	bl	4029f0 <isatty@plt>
  4088bc:	cbnz	w0, 4088d4 <nftw@plt+0x5d54>
  4088c0:	mov	w1, #0x7fffffff            	// #2147483647
  4088c4:	str	w1, [x19, #112]
  4088c8:	ldr	x19, [sp, #16]
  4088cc:	ldp	x29, x30, [sp], #48
  4088d0:	ret
  4088d4:	adrp	x0, 473000 <_obstack_memory_used@@Base+0x11bb8>
  4088d8:	add	x0, x0, #0x540
  4088dc:	bl	402ab0 <getenv@plt>
  4088e0:	cbz	x0, 4088fc <nftw@plt+0x5d7c>
  4088e4:	mov	x1, #0x0                   	// #0
  4088e8:	mov	w2, #0xa                   	// #10
  4088ec:	bl	4028c0 <strtol@plt>
  4088f0:	mov	x1, x0
  4088f4:	cmp	w0, #0x0
  4088f8:	b.gt	40888c <nftw@plt+0x5d0c>
  4088fc:	add	x2, sp, #0x28
  408900:	mov	x1, #0x5413                	// #21523
  408904:	mov	w0, #0x0                   	// #0
  408908:	strh	wzr, [sp, #42]
  40890c:	bl	402b50 <ioctl@plt>
  408910:	cbnz	w0, 40891c <nftw@plt+0x5d9c>
  408914:	ldrh	w1, [sp, #42]
  408918:	cbnz	w1, 40888c <nftw@plt+0x5d0c>
  40891c:	mov	w1, #0x7ffffffe            	// #2147483646
  408920:	b	408898 <nftw@plt+0x5d18>
  408924:	nop
  408928:	stp	x29, x30, [sp, #-64]!
  40892c:	mov	x29, sp
  408930:	str	x21, [sp, #32]
  408934:	mov	x21, x0
  408938:	stp	x19, x20, [sp, #16]
  40893c:	mov	x19, x0
  408940:	mov	w20, w1
  408944:	mov	x0, #0x48                  	// #72
  408948:	bl	461560 <_obstack_memory_used@@Base+0x118>
  40894c:	str	x0, [x21], #8
  408950:	mov	w1, #0x0                   	// #0
  408954:	bl	412868 <nftw@plt+0xfce8>
  408958:	stp	xzr, xzr, [x19, #8]
  40895c:	sbfiz	x0, x20, #2, #32
  408960:	stp	xzr, xzr, [x21, #16]
  408964:	stp	xzr, xzr, [x21, #32]
  408968:	str	xzr, [x21, #48]
  40896c:	strb	wzr, [x19, #64]
  408970:	str	w20, [x19, #68]
  408974:	bl	461560 <_obstack_memory_used@@Base+0x118>
  408978:	str	x0, [x19, #72]
  40897c:	cmp	w20, #0x0
  408980:	b.le	408998 <nftw@plt+0x5e18>
  408984:	sub	w2, w20, #0x1
  408988:	mov	w1, #0x0                   	// #0
  40898c:	add	x2, x2, #0x1
  408990:	lsl	x2, x2, #2
  408994:	bl	4026f0 <memset@plt>
  408998:	ldr	x1, [x19]
  40899c:	strb	wzr, [x19, #108]
  4089a0:	ldr	w0, [x1, #40]
  4089a4:	sub	w4, w0, #0x1
  4089a8:	cbz	w0, 408a2c <nftw@plt+0x5eac>
  4089ac:	cmp	w4, #0x0
  4089b0:	b.le	408a40 <nftw@plt+0x5ec0>
  4089b4:	mov	w5, #0x5e5e                	// #24158
  4089b8:	adrp	x3, 409000 <nftw@plt+0x6480>
  4089bc:	movk	w5, #0x5e, lsl #16
  4089c0:	add	x3, x3, #0xc98
  4089c4:	adrp	x2, 408000 <nftw@plt+0x5480>
  4089c8:	adrp	x1, 408000 <nftw@plt+0x5480>
  4089cc:	add	x2, x2, #0x760
  4089d0:	add	x1, x1, #0x300
  4089d4:	adrp	x0, 408000 <nftw@plt+0x5480>
  4089d8:	add	x0, x0, #0x338
  4089dc:	stp	w4, w5, [x19, #112]
  4089e0:	str	xzr, [x19, #120]
  4089e4:	strh	wzr, [x19, #128]
  4089e8:	strb	wzr, [x19, #130]
  4089ec:	str	wzr, [x19, #132]
  4089f0:	stp	x3, x2, [x19, #136]
  4089f4:	stp	x1, xzr, [x19, #152]
  4089f8:	stp	xzr, xzr, [x19, #168]
  4089fc:	stp	xzr, xzr, [x19, #184]
  408a00:	str	wzr, [x19, #200]
  408a04:	stp	xzr, xzr, [x19, #208]
  408a08:	str	wzr, [x19, #224]
  408a0c:	strh	wzr, [x19, #228]
  408a10:	stp	xzr, xzr, [x19, #232]
  408a14:	stp	xzr, xzr, [x19, #248]
  408a18:	str	x0, [x19, #264]
  408a1c:	ldp	x19, x20, [sp, #16]
  408a20:	ldr	x21, [sp, #32]
  408a24:	ldp	x29, x30, [sp], #64
  408a28:	ret
  408a2c:	ldr	x0, [x1, #8]
  408a30:	ldr	x0, [x0, #192]
  408a34:	bl	4026c0 <fileno_unlocked@plt>
  408a38:	bl	4029f0 <isatty@plt>
  408a3c:	cbnz	w0, 408a48 <nftw@plt+0x5ec8>
  408a40:	mov	w4, #0x7fffffff            	// #2147483647
  408a44:	b	4089b4 <nftw@plt+0x5e34>
  408a48:	adrp	x0, 473000 <_obstack_memory_used@@Base+0x11bb8>
  408a4c:	add	x0, x0, #0x540
  408a50:	bl	402ab0 <getenv@plt>
  408a54:	cbz	x0, 408a70 <nftw@plt+0x5ef0>
  408a58:	mov	w2, #0xa                   	// #10
  408a5c:	mov	x1, #0x0                   	// #0
  408a60:	bl	4028c0 <strtol@plt>
  408a64:	sub	w4, w0, #0x1
  408a68:	cmp	w0, #0x0
  408a6c:	b.gt	4089ac <nftw@plt+0x5e2c>
  408a70:	add	x2, sp, #0x38
  408a74:	mov	x1, #0x5413                	// #21523
  408a78:	mov	w0, #0x0                   	// #0
  408a7c:	strh	wzr, [sp, #58]
  408a80:	bl	402b50 <ioctl@plt>
  408a84:	cbnz	w0, 408a98 <nftw@plt+0x5f18>
  408a88:	ldrh	w4, [sp, #58]
  408a8c:	cbz	w4, 408a98 <nftw@plt+0x5f18>
  408a90:	sub	w4, w4, #0x1
  408a94:	b	4089ac <nftw@plt+0x5e2c>
  408a98:	mov	w4, #0x7ffffffe            	// #2147483646
  408a9c:	b	4089b4 <nftw@plt+0x5e34>
  408aa0:	stp	x29, x30, [sp, #-32]!
  408aa4:	cmp	w1, #0x0
  408aa8:	mov	w2, #0x2                   	// #2
  408aac:	mov	x29, sp
  408ab0:	str	x19, [sp, #16]
  408ab4:	ldr	x19, [x0]
  408ab8:	csel	w0, w1, w2, ge  // ge = tcont
  408abc:	bl	40bec8 <nftw@plt+0x9348>
  408ac0:	strb	w0, [x19, #67]
  408ac4:	ldr	x19, [sp, #16]
  408ac8:	ldp	x29, x30, [sp], #32
  408acc:	ret
  408ad0:	adrp	x1, 473000 <_obstack_memory_used@@Base+0x11bb8>
  408ad4:	add	x1, x1, #0x9b0
  408ad8:	ldr	x0, [x1, w0, sxtw #3]
  408adc:	ret
  408ae0:	stp	x29, x30, [sp, #-112]!
  408ae4:	mov	x29, sp
  408ae8:	stp	x19, x20, [sp, #16]
  408aec:	mov	x19, x0
  408af0:	mov	w20, w1
  408af4:	ldr	x0, [x0]
  408af8:	str	xzr, [sp, #104]
  408afc:	ldrb	w1, [x0, #65]
  408b00:	cbnz	w1, 408c7c <nftw@plt+0x60fc>
  408b04:	cmp	w20, #0x1
  408b08:	b.ls	408c60 <nftw@plt+0x60e0>  // b.plast
  408b0c:	stp	x21, x22, [sp, #32]
  408b10:	adrp	x22, 4a5000 <__environ@@GLIBC_2.17+0xa68>
  408b14:	mov	w1, w20
  408b18:	ldr	x0, [x22, #2336]
  408b1c:	add	x3, sp, #0x68
  408b20:	mov	w2, #0x2                   	// #2
  408b24:	bl	436ea8 <nftw@plt+0x34328>
  408b28:	ldr	x1, [sp, #104]
  408b2c:	cbz	x1, 408c6c <nftw@plt+0x60ec>
  408b30:	ldr	x0, [x19, #208]
  408b34:	cmp	x1, x0
  408b38:	b.eq	408c6c <nftw@plt+0x60ec>  // b.none
  408b3c:	stp	x27, x28, [sp, #80]
  408b40:	ldr	w27, [x1, #20]
  408b44:	str	x1, [x19, #208]
  408b48:	cbz	w27, 408c8c <nftw@plt+0x610c>
  408b4c:	adrp	x20, 473000 <_obstack_memory_used@@Base+0x11bb8>
  408b50:	adrp	x21, 4a5000 <__environ@@GLIBC_2.17+0xa68>
  408b54:	add	x22, x22, #0x920
  408b58:	add	x20, x20, #0x560
  408b5c:	add	x21, x21, #0x790
  408b60:	mov	w28, #0x1                   	// #1
  408b64:	stp	x23, x24, [sp, #48]
  408b68:	adrp	x24, 473000 <_obstack_memory_used@@Base+0x11bb8>
  408b6c:	adrp	x23, 473000 <_obstack_memory_used@@Base+0x11bb8>
  408b70:	add	x24, x24, #0x508
  408b74:	add	x23, x23, #0x578
  408b78:	stp	x25, x26, [sp, #64]
  408b7c:	adrp	x26, 473000 <_obstack_memory_used@@Base+0x11bb8>
  408b80:	adrp	x25, 473000 <_obstack_memory_used@@Base+0x11bb8>
  408b84:	add	x26, x26, #0x500
  408b88:	add	x25, x25, #0x4f8
  408b8c:	b	408bf8 <nftw@plt+0x6078>
  408b90:	cbz	w3, 408cbc <nftw@plt+0x613c>
  408b94:	mov	x2, x25
  408b98:	mov	w4, #0x0                   	// #0
  408b9c:	add	x0, x21, #0x10
  408ba0:	mov	x1, #0x20                  	// #32
  408ba4:	bl	402600 <snprintf@plt>
  408ba8:	mov	x0, x20
  408bac:	ldr	x27, [x19]
  408bb0:	cbz	w28, 408ca0 <nftw@plt+0x6120>
  408bb4:	bl	402b10 <gettext@plt>
  408bb8:	mov	x3, x0
  408bbc:	ldr	x1, [sp, #104]
  408bc0:	adrp	x2, 472000 <_obstack_memory_used@@Base+0x10bb8>
  408bc4:	mov	x0, x27
  408bc8:	add	x2, x2, #0x5c0
  408bcc:	ldr	x5, [x1, #8]
  408bd0:	add	x6, x21, #0x10
  408bd4:	mov	x1, x23
  408bd8:	mov	x4, x24
  408bdc:	bl	414b40 <nftw@plt+0x11fc0>
  408be0:	ldr	x1, [sp, #104]
  408be4:	ldr	w27, [x1, #20]
  408be8:	cbz	w27, 408c38 <nftw@plt+0x60b8>
  408bec:	adrp	x20, 473000 <_obstack_memory_used@@Base+0x11bb8>
  408bf0:	add	x20, x20, #0x548
  408bf4:	mov	w28, #0x0                   	// #0
  408bf8:	ldr	x0, [x22]
  408bfc:	bl	435558 <nftw@plt+0x329d8>
  408c00:	ldr	w2, [x0]
  408c04:	ldrb	w1, [x0, #6]
  408c08:	sub	w27, w27, w2
  408c0c:	ldr	w2, [x0, #16]
  408c10:	str	x0, [sp, #104]
  408c14:	lsr	w3, w27, w1
  408c18:	add	w3, w3, w2
  408c1c:	cbz	w28, 408b90 <nftw@plt+0x6010>
  408c20:	ldrb	w2, [x19, #121]
  408c24:	cbnz	w2, 408cc4 <nftw@plt+0x6144>
  408c28:	cbz	w3, 408cbc <nftw@plt+0x613c>
  408c2c:	mov	x2, x25
  408c30:	mov	w4, #0x0                   	// #0
  408c34:	b	408b9c <nftw@plt+0x601c>
  408c38:	ldr	x0, [x19]
  408c3c:	adrp	x1, 472000 <_obstack_memory_used@@Base+0x10bb8>
  408c40:	add	x1, x1, #0x2a8
  408c44:	bl	414b40 <nftw@plt+0x11fc0>
  408c48:	ldr	x0, [x19]
  408c4c:	bl	412f40 <nftw@plt+0x103c0>
  408c50:	ldp	x21, x22, [sp, #32]
  408c54:	ldp	x23, x24, [sp, #48]
  408c58:	ldp	x25, x26, [sp, #64]
  408c5c:	ldp	x27, x28, [sp, #80]
  408c60:	ldp	x19, x20, [sp, #16]
  408c64:	ldp	x29, x30, [sp], #112
  408c68:	ret
  408c6c:	ldp	x19, x20, [sp, #16]
  408c70:	ldp	x21, x22, [sp, #32]
  408c74:	ldp	x29, x30, [sp], #112
  408c78:	ret
  408c7c:	bl	412f40 <nftw@plt+0x103c0>
  408c80:	ldr	x0, [x19]
  408c84:	strb	wzr, [x0, #65]
  408c88:	b	408b04 <nftw@plt+0x5f84>
  408c8c:	ldp	x19, x20, [sp, #16]
  408c90:	ldp	x21, x22, [sp, #32]
  408c94:	ldp	x27, x28, [sp, #80]
  408c98:	ldp	x29, x30, [sp], #112
  408c9c:	ret
  408ca0:	bl	402b10 <gettext@plt>
  408ca4:	mov	x3, x0
  408ca8:	adrp	x2, 473000 <_obstack_memory_used@@Base+0x11bb8>
  408cac:	mov	x0, x27
  408cb0:	add	x2, x2, #0x588
  408cb4:	ldr	x1, [sp, #104]
  408cb8:	b	408bcc <nftw@plt+0x604c>
  408cbc:	strb	wzr, [x21, #16]
  408cc0:	b	408ba8 <nftw@plt+0x6028>
  408cc4:	ldrb	w0, [x0, #7]
  408cc8:	cbz	w3, 408cbc <nftw@plt+0x613c>
  408ccc:	mov	w4, #0x1                   	// #1
  408cd0:	lsl	w4, w4, w1
  408cd4:	sub	w4, w4, #0x1
  408cd8:	and	w27, w4, w27
  408cdc:	lsr	w4, w27, w0
  408ce0:	cmp	w4, #0x0
  408ce4:	csel	x2, x25, x26, eq  // eq = none
  408ce8:	b	408b9c <nftw@plt+0x601c>
  408cec:	nop
  408cf0:	stp	x29, x30, [sp, #-64]!
  408cf4:	mov	x29, sp
  408cf8:	stp	x21, x22, [sp, #32]
  408cfc:	mov	w22, #0x0                   	// #0
  408d00:	tbnz	w1, #31, 408dec <nftw@plt+0x626c>
  408d04:	stp	x19, x20, [sp, #16]
  408d08:	mov	w22, #0x0                   	// #0
  408d0c:	mov	w19, w1
  408d10:	stp	x23, x24, [sp, #48]
  408d14:	mov	x23, x0
  408d18:	ldr	w0, [x0, #68]
  408d1c:	cmp	w0, w1
  408d20:	b.le	408dfc <nftw@plt+0x627c>
  408d24:	mov	w21, w2
  408d28:	cmp	w2, #0xd
  408d2c:	b.gt	408dfc <nftw@plt+0x627c>
  408d30:	ldr	x0, [x23, #72]
  408d34:	sxtw	x24, w1
  408d38:	mov	w20, w3
  408d3c:	ldr	w22, [x0, x24, lsl #2]
  408d40:	cbz	w3, 408e14 <nftw@plt+0x6294>
  408d44:	cbnz	w22, 408d64 <nftw@plt+0x61e4>
  408d48:	mov	w0, w1
  408d4c:	mov	w22, #0x1                   	// #1
  408d50:	ldp	x2, x1, [x23, #168]
  408d54:	blr	x2
  408d58:	cbnz	w0, 408e30 <nftw@plt+0x62b0>
  408d5c:	ldr	x0, [x23, #72]
  408d60:	str	w22, [x0, x24, lsl #2]
  408d64:	ldr	w2, [x23, #88]
  408d68:	ldr	x0, [x23, #80]
  408d6c:	subs	w4, w2, #0x1
  408d70:	b.mi	408db0 <nftw@plt+0x6230>  // b.first
  408d74:	mov	w3, #0xc                   	// #12
  408d78:	sub	x5, x0, #0x18
  408d7c:	smull	x1, w4, w3
  408d80:	add	x6, x1, #0xc
  408d84:	add	x1, x0, x1
  408d88:	umsubl	x4, w4, w3, x6
  408d8c:	add	x5, x4, x5
  408d90:	b	408da0 <nftw@plt+0x6220>
  408d94:	sub	x1, x1, #0xc
  408d98:	cmp	x5, x1
  408d9c:	b.eq	408db0 <nftw@plt+0x6230>  // b.none
  408da0:	ldr	w4, [x1, #4]
  408da4:	cmp	w4, w19
  408da8:	b.ne	408d94 <nftw@plt+0x6214>  // b.any
  408dac:	ldr	w22, [x1, #8]
  408db0:	add	w2, w2, #0x1
  408db4:	mov	w24, #0xc                   	// #12
  408db8:	smull	x24, w2, w24
  408dbc:	mov	x1, x24
  408dc0:	sub	x24, x24, #0xc
  408dc4:	bl	4615e8 <_obstack_memory_used@@Base+0x1a0>
  408dc8:	add	x1, x0, x24
  408dcc:	str	x0, [x23, #80]
  408dd0:	str	w20, [x0, x24]
  408dd4:	stp	w19, w21, [x1, #4]
  408dd8:	ldp	x19, x20, [sp, #16]
  408ddc:	ldr	w0, [x23, #88]
  408de0:	add	w0, w0, #0x1
  408de4:	str	w0, [x23, #88]
  408de8:	ldp	x23, x24, [sp, #48]
  408dec:	mov	w0, w22
  408df0:	ldp	x21, x22, [sp, #32]
  408df4:	ldp	x29, x30, [sp], #64
  408df8:	ret
  408dfc:	mov	w0, w22
  408e00:	ldp	x19, x20, [sp, #16]
  408e04:	ldp	x21, x22, [sp, #32]
  408e08:	ldp	x23, x24, [sp, #48]
  408e0c:	ldp	x29, x30, [sp], #64
  408e10:	ret
  408e14:	str	w2, [x0, x24, lsl #2]
  408e18:	mov	w0, w22
  408e1c:	ldp	x19, x20, [sp, #16]
  408e20:	ldp	x21, x22, [sp, #32]
  408e24:	ldp	x23, x24, [sp, #48]
  408e28:	ldp	x29, x30, [sp], #64
  408e2c:	ret
  408e30:	ldrb	w1, [x23, #64]
  408e34:	mov	w22, #0x4                   	// #4
  408e38:	mov	w0, #0x6                   	// #6
  408e3c:	cmp	w1, #0x0
  408e40:	csel	w22, w22, w0, ne  // ne = any
  408e44:	b	408d5c <nftw@plt+0x61dc>
  408e48:	stp	x29, x30, [sp, #-32]!
  408e4c:	mov	x29, sp
  408e50:	ldr	w1, [x0, #104]
  408e54:	str	x19, [sp, #16]
  408e58:	mov	x19, x0
  408e5c:	ldr	x0, [x0, #96]
  408e60:	add	w1, w1, #0x1
  408e64:	sbfiz	x1, x1, #2, #32
  408e68:	bl	4615e8 <_obstack_memory_used@@Base+0x1a0>
  408e6c:	str	x0, [x19, #96]
  408e70:	ldr	w1, [x19, #104]
  408e74:	add	w2, w1, #0x1
  408e78:	str	w2, [x19, #104]
  408e7c:	ldr	w2, [x19, #88]
  408e80:	str	w2, [x0, w1, sxtw #2]
  408e84:	ldr	x19, [sp, #16]
  408e88:	ldp	x29, x30, [sp], #32
  408e8c:	ret
  408e90:	stp	x29, x30, [sp, #-48]!
  408e94:	mov	x29, sp
  408e98:	stp	x21, x22, [sp, #32]
  408e9c:	mov	w22, w1
  408ea0:	ldr	w21, [x0, #104]
  408ea4:	stp	x19, x20, [sp, #16]
  408ea8:	mov	x19, x0
  408eac:	cbz	w21, 408ec0 <nftw@plt+0x6340>
  408eb0:	ldr	x0, [x0, #96]
  408eb4:	sub	w21, w21, #0x1
  408eb8:	str	w21, [x19, #104]
  408ebc:	ldr	w21, [x0, w21, sxtw #2]
  408ec0:	ldr	w20, [x19, #88]
  408ec4:	mov	w1, #0xc                   	// #12
  408ec8:	ldr	x0, [x19, #80]
  408ecc:	add	w20, w20, #0x1
  408ed0:	smull	x20, w20, w1
  408ed4:	mov	x1, x20
  408ed8:	sub	x20, x20, #0xc
  408edc:	bl	4615e8 <_obstack_memory_used@@Base+0x1a0>
  408ee0:	add	x1, x0, x20
  408ee4:	str	x0, [x19, #80]
  408ee8:	mov	w2, #0xf                   	// #15
  408eec:	str	w22, [x0, x20]
  408ef0:	stp	w21, w2, [x1, #4]
  408ef4:	ldp	x21, x22, [sp, #32]
  408ef8:	ldr	w0, [x19, #88]
  408efc:	add	w0, w0, #0x1
  408f00:	str	w0, [x19, #88]
  408f04:	ldp	x19, x20, [sp, #16]
  408f08:	ldp	x29, x30, [sp], #48
  408f0c:	ret
  408f10:	ldrb	w5, [x0]
  408f14:	mov	x4, x0
  408f18:	cmp	w5, #0x2e
  408f1c:	b.eq	408f3c <nftw@plt+0x63bc>  // b.none
  408f20:	b	408f48 <nftw@plt+0x63c8>
  408f24:	ldrb	w2, [x0, #2]
  408f28:	cmp	w2, #0x2f
  408f2c:	b.ne	408fd0 <nftw@plt+0x6450>  // b.any
  408f30:	ldrb	w1, [x0, #3]!
  408f34:	cmp	w1, #0x2e
  408f38:	b.ne	408fd0 <nftw@plt+0x6450>  // b.any
  408f3c:	ldrb	w1, [x0, #1]
  408f40:	cmp	w1, #0x2e
  408f44:	b.eq	408f24 <nftw@plt+0x63a4>  // b.none
  408f48:	adrp	x1, 473000 <_obstack_memory_used@@Base+0x11bb8>
  408f4c:	add	x1, x1, #0x9b0
  408f50:	add	x1, x1, #0x80
  408f54:	nop
  408f58:	ldrb	w2, [x1, #2]
  408f5c:	cmp	w2, #0x2f
  408f60:	b.ne	408fd8 <nftw@plt+0x6458>  // b.any
  408f64:	ldrb	w2, [x1, #3]!
  408f68:	cmp	w2, #0x2e
  408f6c:	b.ne	408f7c <nftw@plt+0x63fc>  // b.any
  408f70:	ldrb	w3, [x1, #1]
  408f74:	cmp	w3, #0x2e
  408f78:	b.eq	408f58 <nftw@plt+0x63d8>  // b.none
  408f7c:	cmp	w2, #0x0
  408f80:	ccmp	w5, w2, #0x0, ne  // ne = any
  408f84:	ccmp	w5, #0x0, #0x4, eq  // eq = none
  408f88:	b.eq	408fa8 <nftw@plt+0x6428>  // b.none
  408f8c:	nop
  408f90:	ldrb	w3, [x0, #1]!
  408f94:	ldrb	w2, [x1, #1]!
  408f98:	cmp	w3, #0x0
  408f9c:	ccmp	w3, w2, #0x0, ne  // ne = any
  408fa0:	ccmp	w2, #0x0, #0x4, eq  // eq = none
  408fa4:	b.ne	408f90 <nftw@plt+0x6410>  // b.any
  408fa8:	cmp	x4, x0
  408fac:	b.cc	408fc0 <nftw@plt+0x6440>  // b.lo, b.ul, b.last
  408fb0:	b	408fcc <nftw@plt+0x644c>
  408fb4:	sub	x0, x0, #0x1
  408fb8:	cmp	x4, x0
  408fbc:	b.eq	408fcc <nftw@plt+0x644c>  // b.none
  408fc0:	ldurb	w1, [x0, #-1]
  408fc4:	cmp	w1, #0x2f
  408fc8:	b.ne	408fb4 <nftw@plt+0x6434>  // b.any
  408fcc:	ret
  408fd0:	mov	w5, w1
  408fd4:	b	408f48 <nftw@plt+0x63c8>
  408fd8:	mov	w2, #0x2e                  	// #46
  408fdc:	b	408f7c <nftw@plt+0x63fc>
  408fe0:	stp	x29, x30, [sp, #-304]!
  408fe4:	mov	w8, #0xffffffc8            	// #-56
  408fe8:	mov	x29, sp
  408fec:	add	x9, sp, #0xf0
  408ff0:	add	x10, sp, #0x130
  408ff4:	stp	x19, x20, [sp, #16]
  408ff8:	mov	x19, x0
  408ffc:	mov	w0, #0xffffff80            	// #-128
  409000:	stp	x10, x10, [sp, #40]
  409004:	adrp	x20, 4a4000 <_obstack_memory_used@@Base+0x42bb8>
  409008:	str	x9, [sp, #56]
  40900c:	stp	w8, w0, [sp, #64]
  409010:	str	q0, [sp, #112]
  409014:	str	q1, [sp, #128]
  409018:	str	q2, [sp, #144]
  40901c:	str	q3, [sp, #160]
  409020:	str	q4, [sp, #176]
  409024:	str	q5, [sp, #192]
  409028:	str	q6, [sp, #208]
  40902c:	str	q7, [sp, #224]
  409030:	stp	x1, x2, [sp, #248]
  409034:	stp	x3, x4, [sp, #264]
  409038:	stp	x5, x6, [sp, #280]
  40903c:	str	x7, [sp, #296]
  409040:	bl	402aa0 <__errno_location@plt>
  409044:	mov	x1, x0
  409048:	add	x2, sp, #0x28
  40904c:	mov	x0, x19
  409050:	str	x2, [sp, #80]
  409054:	ldr	w1, [x1]
  409058:	str	w1, [sp, #88]
  40905c:	bl	402b10 <gettext@plt>
  409060:	str	xzr, [sp, #96]
  409064:	ldr	x2, [x20, #920]
  409068:	str	x0, [sp, #72]
  40906c:	add	x1, sp, #0x48
  409070:	ldr	x0, [x2]
  409074:	bl	414a70 <nftw@plt+0x11ef0>
  409078:	ldr	x0, [x20, #920]
  40907c:	ldr	x0, [x0]
  409080:	bl	414d30 <nftw@plt+0x121b0>
  409084:	ldp	x19, x20, [sp, #16]
  409088:	ldp	x29, x30, [sp], #304
  40908c:	ret
  409090:	adrp	x0, 4a4000 <_obstack_memory_used@@Base+0x42bb8>
  409094:	ldr	x0, [x0, #920]
  409098:	ldr	x0, [x0, #24]
  40909c:	cmp	x0, #0x0
  4090a0:	cset	w0, ne  // ne = any
  4090a4:	ret
  4090a8:	stp	x29, x30, [sp, #-272]!
  4090ac:	mov	w8, #0xffffffd0            	// #-48
  4090b0:	mov	x29, sp
  4090b4:	add	x9, sp, #0xe0
  4090b8:	stp	x2, x3, [sp, #224]
  4090bc:	add	x2, sp, #0x110
  4090c0:	str	x19, [sp, #16]
  4090c4:	mov	x19, x0
  4090c8:	mov	x0, x1
  4090cc:	mov	w1, #0xffffff80            	// #-128
  4090d0:	stp	x2, x2, [sp, #64]
  4090d4:	str	x9, [sp, #80]
  4090d8:	str	w8, [sp, #88]
  4090dc:	str	w1, [sp, #92]
  4090e0:	str	q0, [sp, #96]
  4090e4:	str	q1, [sp, #112]
  4090e8:	str	q2, [sp, #128]
  4090ec:	str	q3, [sp, #144]
  4090f0:	str	q4, [sp, #160]
  4090f4:	str	q5, [sp, #176]
  4090f8:	str	q6, [sp, #192]
  4090fc:	str	q7, [sp, #208]
  409100:	stp	x4, x5, [sp, #240]
  409104:	stp	x6, x7, [sp, #256]
  409108:	bl	402b10 <gettext@plt>
  40910c:	add	x2, sp, #0x20
  409110:	ldp	x6, x7, [sp, #64]
  409114:	mov	x1, x0
  409118:	ldp	x4, x5, [sp, #80]
  40911c:	mov	x0, x19
  409120:	stp	x6, x7, [sp, #32]
  409124:	stp	x4, x5, [sp, #48]
  409128:	bl	402a80 <vfprintf@plt>
  40912c:	ldr	x19, [sp, #16]
  409130:	ldp	x29, x30, [sp], #272
  409134:	ret
  409138:	adrp	x0, 4a4000 <_obstack_memory_used@@Base+0x42bb8>
  40913c:	ldr	x1, [x0, #920]
  409140:	ldr	w0, [x1, #240]
  409144:	add	w0, w0, #0x1
  409148:	str	w0, [x1, #240]
  40914c:	ret
  409150:	stp	x29, x30, [sp, #-32]!
  409154:	mov	x29, sp
  409158:	str	x19, [sp, #16]
  40915c:	adrp	x19, 4a4000 <_obstack_memory_used@@Base+0x42bb8>
  409160:	ldr	x0, [x19, #920]
  409164:	ldr	w1, [x0, #240]
  409168:	sub	w1, w1, #0x1
  40916c:	str	w1, [x0, #240]
  409170:	cbnz	w1, 409194 <nftw@plt+0x6614>
  409174:	ldr	w1, [x0, #244]
  409178:	cmp	w1, #0x0
  40917c:	b.le	409190 <nftw@plt+0x6610>
  409180:	ldr	x1, [x0, #256]
  409184:	cbz	x1, 409190 <nftw@plt+0x6610>
  409188:	blr	x1
  40918c:	ldr	x0, [x19, #920]
  409190:	str	wzr, [x0, #244]
  409194:	ldr	x19, [sp, #16]
  409198:	ldp	x29, x30, [sp], #32
  40919c:	ret
  4091a0:	stp	x29, x30, [sp, #-32]!
  4091a4:	mov	x29, sp
  4091a8:	ldr	x1, [x0, #264]
  4091ac:	stp	x19, x20, [sp, #16]
  4091b0:	mov	x19, x0
  4091b4:	cbz	x1, 4091bc <nftw@plt+0x663c>
  4091b8:	blr	x1
  4091bc:	bl	418f50 <nftw@plt+0x163d0>
  4091c0:	ldr	x0, [x19, #72]
  4091c4:	bl	402910 <free@plt>
  4091c8:	ldr	x0, [x19]
  4091cc:	ldr	x1, [x0]
  4091d0:	ldr	x1, [x1]
  4091d4:	str	xzr, [x19, #72]
  4091d8:	blr	x1
  4091dc:	ldr	x0, [x19]
  4091e0:	bl	402910 <free@plt>
  4091e4:	str	xzr, [x19]
  4091e8:	ldr	x20, [x19, #232]
  4091ec:	cbz	x20, 40920c <nftw@plt+0x668c>
  4091f0:	ldr	x1, [x20, #8]
  4091f4:	add	x0, x20, #0x8
  4091f8:	bl	40bb48 <nftw@plt+0x8fc8>
  4091fc:	mov	x0, x20
  409200:	mov	x1, #0x28                  	// #40
  409204:	bl	461b00 <_obstack_memory_used@@Base+0x6b8>
  409208:	str	xzr, [x19, #232]
  40920c:	ldp	x19, x20, [sp, #16]
  409210:	ldp	x29, x30, [sp], #32
  409214:	ret
  409218:	ldr	w2, [x0, #132]
  40921c:	cbz	w2, 409258 <nftw@plt+0x66d8>
  409220:	stp	x29, x30, [sp, #-32]!
  409224:	mov	x29, sp
  409228:	stp	x19, x20, [sp, #16]
  40922c:	mov	x19, x0
  409230:	and	w20, w1, #0xff
  409234:	ldp	w0, w3, [x0, #24]
  409238:	ldr	w1, [x19, #56]
  40923c:	add	w0, w0, w3
  409240:	add	w0, w0, w1
  409244:	cmp	w2, w0
  409248:	b.le	40925c <nftw@plt+0x66dc>
  40924c:	ldp	x19, x20, [sp, #16]
  409250:	ldp	x29, x30, [sp], #32
  409254:	ret
  409258:	ret
  40925c:	adrp	x0, 4a4000 <_obstack_memory_used@@Base+0x42bb8>
  409260:	adrp	x1, 473000 <_obstack_memory_used@@Base+0x11bb8>
  409264:	add	x1, x1, #0x590
  409268:	ldr	x0, [x0, #1392]
  40926c:	bl	4090a8 <nftw@plt+0x6528>
  409270:	cbnz	w20, 40927c <nftw@plt+0x66fc>
  409274:	mov	w0, #0x1                   	// #1
  409278:	bl	402520 <exit@plt>
  40927c:	mov	x0, x19
  409280:	bl	4091a0 <nftw@plt+0x6620>
  409284:	b	409274 <nftw@plt+0x66f4>
  409288:	stp	x29, x30, [sp, #-48]!
  40928c:	cmp	w1, #0x5
  409290:	mov	x29, sp
  409294:	stp	x19, x20, [sp, #16]
  409298:	mov	x19, x0
  40929c:	b.hi	4092d8 <nftw@plt+0x6758>  // b.pmore
  4092a0:	cmp	w1, #0x3
  4092a4:	b.hi	409398 <nftw@plt+0x6818>  // b.pmore
  4092a8:	cmp	w1, #0x2
  4092ac:	b.ne	4092ec <nftw@plt+0x676c>  // b.any
  4092b0:	ldrb	w1, [x0, #120]
  4092b4:	cbnz	w1, 4093cc <nftw@plt+0x684c>
  4092b8:	bl	4091a0 <nftw@plt+0x6620>
  4092bc:	adrp	x0, 4a4000 <_obstack_memory_used@@Base+0x42bb8>
  4092c0:	adrp	x1, 473000 <_obstack_memory_used@@Base+0x11bb8>
  4092c4:	add	x1, x1, #0x6a0
  4092c8:	ldr	x0, [x0, #1392]
  4092cc:	bl	4090a8 <nftw@plt+0x6528>
  4092d0:	mov	w0, #0x1                   	// #1
  4092d4:	bl	402520 <exit@plt>
  4092d8:	cmp	w1, #0x9
  4092dc:	b.hi	409388 <nftw@plt+0x6808>  // b.pmore
  4092e0:	ldp	x19, x20, [sp, #16]
  4092e4:	ldp	x29, x30, [sp], #48
  4092e8:	ret
  4092ec:	cmp	w1, #0x3
  4092f0:	b.ne	4093d0 <nftw@plt+0x6850>  // b.any
  4092f4:	adrp	x2, 408000 <nftw@plt+0x5480>
  4092f8:	add	x20, x2, #0x280
  4092fc:	mov	x2, x20
  409300:	mov	x3, #0x0                   	// #0
  409304:	mov	w1, #0x0                   	// #0
  409308:	mov	x0, #0x0                   	// #0
  40930c:	bl	442930 <nftw@plt+0x3fdb0>
  409310:	str	wzr, [sp, #44]
  409314:	cbz	x0, 409330 <nftw@plt+0x67b0>
  409318:	adrp	x2, 408000 <nftw@plt+0x5480>
  40931c:	mov	x3, x20
  409320:	add	x4, sp, #0x2c
  409324:	add	x2, x2, #0x3a8
  409328:	mov	w1, #0x2                   	// #2
  40932c:	bl	442a50 <nftw@plt+0x3fed0>
  409330:	ldrb	w0, [x19, #120]
  409334:	cbnz	w0, 4093cc <nftw@plt+0x684c>
  409338:	adrp	x19, 4a4000 <_obstack_memory_used@@Base+0x42bb8>
  40933c:	adrp	x1, 473000 <_obstack_memory_used@@Base+0x11bb8>
  409340:	add	x1, x1, #0x5f0
  409344:	ldr	x0, [x19, #1392]
  409348:	bl	4090a8 <nftw@plt+0x6528>
  40934c:	ldr	w0, [sp, #44]
  409350:	cmp	w0, #0x0
  409354:	b.le	409368 <nftw@plt+0x67e8>
  409358:	ldr	x0, [x19, #1392]
  40935c:	adrp	x1, 473000 <_obstack_memory_used@@Base+0x11bb8>
  409360:	add	x1, x1, #0x640
  409364:	bl	4090a8 <nftw@plt+0x6528>
  409368:	ldr	x0, [x19, #1392]
  40936c:	adrp	x2, 474000 <_obstack_memory_used@@Base+0x12bb8>
  409370:	adrp	x1, 473000 <_obstack_memory_used@@Base+0x11bb8>
  409374:	add	x2, x2, #0xc10
  409378:	add	x1, x1, #0x680
  40937c:	bl	4090a8 <nftw@plt+0x6528>
  409380:	mov	w0, #0x4                   	// #4
  409384:	bl	402520 <exit@plt>
  409388:	cmp	w1, #0xd
  40938c:	b.ne	4093d0 <nftw@plt+0x6850>  // b.any
  409390:	str	wzr, [sp, #44]
  409394:	b	409330 <nftw@plt+0x67b0>
  409398:	ldrb	w0, [x0, #120]
  40939c:	cbnz	w0, 4093cc <nftw@plt+0x684c>
  4093a0:	ldrb	w0, [x19, #128]
  4093a4:	cbz	w0, 4092e0 <nftw@plt+0x6760>
  4093a8:	adrp	x0, 4a4000 <_obstack_memory_used@@Base+0x42bb8>
  4093ac:	adrp	x1, 473000 <_obstack_memory_used@@Base+0x11bb8>
  4093b0:	add	x1, x1, #0x5c0
  4093b4:	ldr	x0, [x0, #1392]
  4093b8:	bl	4090a8 <nftw@plt+0x6528>
  4093bc:	mov	x0, x19
  4093c0:	bl	4091a0 <nftw@plt+0x6620>
  4093c4:	mov	w0, #0x1                   	// #1
  4093c8:	bl	402520 <exit@plt>
  4093cc:	bl	4027f0 <abort@plt>
  4093d0:	adrp	x2, 473000 <_obstack_memory_used@@Base+0x11bb8>
  4093d4:	adrp	x0, 473000 <_obstack_memory_used@@Base+0x11bb8>
  4093d8:	add	x2, x2, #0x6c0
  4093dc:	add	x0, x0, #0x6e0
  4093e0:	mov	w1, #0x231                 	// #561
  4093e4:	bl	402bf0 <nftw@plt+0x70>
  4093e8:	stp	x29, x30, [sp, #-160]!
  4093ec:	mov	x29, sp
  4093f0:	stp	x19, x20, [sp, #16]
  4093f4:	mov	x20, x1
  4093f8:	mov	x19, x0
  4093fc:	mov	x0, x1
  409400:	mov	w1, #0x0                   	// #0
  409404:	stp	x21, x22, [sp, #32]
  409408:	bl	411e40 <nftw@plt+0xf2c0>
  40940c:	ldr	w21, [x20, #56]
  409410:	sub	w1, w21, #0x6
  409414:	tst	w1, #0xfffffffb
  409418:	b.ne	4095c8 <nftw@plt+0x6a48>  // b.any
  40941c:	ldrb	w1, [x19, #129]
  409420:	cbz	w1, 409438 <nftw@plt+0x68b8>
  409424:	mov	w0, #0x0                   	// #0
  409428:	ldp	x19, x20, [sp, #16]
  40942c:	ldp	x21, x22, [sp, #32]
  409430:	ldp	x29, x30, [sp], #160
  409434:	ret
  409438:	stp	x23, x24, [sp, #48]
  40943c:	adrp	x23, 4a5000 <__environ@@GLIBC_2.17+0xa68>
  409440:	mov	w1, w0
  409444:	ldr	x0, [x23, #2336]
  409448:	bl	436990 <nftw@plt+0x33e10>
  40944c:	cbnz	w0, 409654 <nftw@plt+0x6ad4>
  409450:	ldr	w0, [x20, #56]
  409454:	cmp	w0, #0xa
  409458:	b.ne	409968 <nftw@plt+0x6de8>  // b.any
  40945c:	ldrb	w2, [x19, #122]
  409460:	mov	w21, #0x4                   	// #4
  409464:	ldr	w1, [x19, #216]
  409468:	mov	w0, #0x6                   	// #6
  40946c:	cmp	w2, #0x0
  409470:	csel	w21, w21, w0, ne  // ne = any
  409474:	str	w21, [x20, #56]
  409478:	cmp	w1, #0x0
  40947c:	b.gt	4095ec <nftw@plt+0x6a6c>
  409480:	ldp	x23, x24, [sp, #48]
  409484:	ldrb	w1, [x19, #64]
  409488:	ldr	w0, [x20, #60]
  40948c:	cbz	w1, 40949c <nftw@plt+0x691c>
  409490:	ldr	w1, [x20, #56]
  409494:	cmp	w1, #0x6
  409498:	b.eq	409664 <nftw@plt+0x6ae4>  // b.none
  40949c:	cbz	w0, 4094e4 <nftw@plt+0x6964>
  4094a0:	ldr	w1, [x19, #124]
  4094a4:	cmp	w1, w0
  4094a8:	b.eq	4094e4 <nftw@plt+0x6964>  // b.none
  4094ac:	ldp	x2, x1, [x19, #168]
  4094b0:	blr	x2
  4094b4:	cbz	w0, 409424 <nftw@plt+0x68a4>
  4094b8:	ldr	w0, [x19, #88]
  4094bc:	cmp	w0, #0x0
  4094c0:	b.gt	4098c4 <nftw@plt+0x6d44>
  4094c4:	ldrsw	x1, [x20, #60]
  4094c8:	ldr	x0, [x19, #72]
  4094cc:	ldr	w1, [x0, x1, lsl #2]
  4094d0:	cbnz	w1, 4098bc <nftw@plt+0x6d3c>
  4094d4:	ldr	w1, [x20, #56]
  4094d8:	cmp	w1, #0x1
  4094dc:	b.ne	4094e8 <nftw@plt+0x6968>  // b.any
  4094e0:	b	409424 <nftw@plt+0x68a4>
  4094e4:	ldr	w1, [x20, #56]
  4094e8:	cmp	w1, #0x8
  4094ec:	b.ne	409688 <nftw@plt+0x6b08>  // b.any
  4094f0:	ldr	w0, [x19, #216]
  4094f4:	add	w0, w0, #0x1
  4094f8:	str	w0, [x19, #216]
  4094fc:	add	x1, x19, w1, sxtw #2
  409500:	ldr	w0, [x1, #8]
  409504:	add	w0, w0, #0x1
  409508:	str	w0, [x1, #8]
  40950c:	ldr	w0, [x19, #244]
  409510:	cbnz	w0, 409528 <nftw@plt+0x69a8>
  409514:	ldr	x1, [x19, #248]
  409518:	cbz	x1, 409528 <nftw@plt+0x69a8>
  40951c:	mov	x0, x19
  409520:	blr	x1
  409524:	ldr	w0, [x19, #244]
  409528:	add	w0, w0, #0x1
  40952c:	str	w0, [x19, #244]
  409530:	add	x0, x20, #0x30
  409534:	str	x0, [x20, #24]
  409538:	str	xzr, [x20, #48]
  40953c:	mov	x1, x20
  409540:	ldr	x0, [x19]
  409544:	bl	413088 <nftw@plt+0x10508>
  409548:	ldr	x2, [x19, #136]
  40954c:	mov	x1, x20
  409550:	mov	x0, x19
  409554:	blr	x2
  409558:	ldr	x0, [x19]
  40955c:	bl	412d90 <nftw@plt+0x10210>
  409560:	ldrb	w0, [x19, #119]
  409564:	cbnz	w0, 4097f4 <nftw@plt+0x6c74>
  409568:	ldr	x3, [x19, #152]
  40956c:	mov	x0, x19
  409570:	mov	w2, w21
  409574:	mov	x1, x20
  409578:	blr	x3
  40957c:	ldrb	w0, [x19, #229]
  409580:	cbnz	w0, 409704 <nftw@plt+0x6b84>
  409584:	ldr	w1, [x20, #56]
  409588:	mov	x0, x19
  40958c:	bl	409288 <nftw@plt+0x6708>
  409590:	str	xzr, [x20, #48]
  409594:	ldr	x0, [x19, #232]
  409598:	cbz	x0, 4095a8 <nftw@plt+0x6a28>
  40959c:	ldr	x1, [x20, #40]
  4095a0:	ldrb	w2, [x1, #161]
  4095a4:	cbz	w2, 4098a8 <nftw@plt+0x6d28>
  4095a8:	ldr	w1, [x19, #216]
  4095ac:	mov	w0, #0x1                   	// #1
  4095b0:	ldp	x21, x22, [sp, #32]
  4095b4:	sub	w1, w1, #0x1
  4095b8:	str	w1, [x19, #216]
  4095bc:	ldp	x19, x20, [sp, #16]
  4095c0:	ldp	x29, x30, [sp], #160
  4095c4:	ret
  4095c8:	mov	w0, w21
  4095cc:	cmp	w0, #0x8
  4095d0:	b.ne	409628 <nftw@plt+0x6aa8>  // b.any
  4095d4:	ldrb	w0, [x19, #220]
  4095d8:	cbnz	w0, 409424 <nftw@plt+0x68a4>
  4095dc:	ldr	w1, [x19, #216]
  4095e0:	cmp	w1, #0x0
  4095e4:	b.le	409484 <nftw@plt+0x6904>
  4095e8:	stp	x23, x24, [sp, #48]
  4095ec:	cmp	w1, #0x2
  4095f0:	stp	x25, x26, [sp, #64]
  4095f4:	stp	x27, x28, [sp, #80]
  4095f8:	b.gt	409604 <nftw@plt+0x6a84>
  4095fc:	ldr	x0, [x19]
  409600:	bl	414d30 <nftw@plt+0x121b0>
  409604:	adrp	x0, 4a4000 <_obstack_memory_used@@Base+0x42bb8>
  409608:	adrp	x1, 473000 <_obstack_memory_used@@Base+0x11bb8>
  40960c:	add	x1, x1, #0x6f8
  409610:	ldr	x0, [x0, #1392]
  409614:	bl	4090a8 <nftw@plt+0x6528>
  409618:	mov	x0, x19
  40961c:	mov	w1, #0x3                   	// #3
  409620:	bl	409288 <nftw@plt+0x6708>
  409624:	bl	4027f0 <abort@plt>
  409628:	ldr	w1, [x19, #216]
  40962c:	cmp	w1, #0x0
  409630:	b.le	409484 <nftw@plt+0x6904>
  409634:	cmp	w0, #0xd
  409638:	ccmp	w0, #0x3, #0x4, ne  // ne = any
  40963c:	b.ne	4095e8 <nftw@plt+0x6a68>  // b.any
  409640:	cmp	w1, #0x1
  409644:	b.ne	4095e8 <nftw@plt+0x6a68>  // b.any
  409648:	ldr	x0, [x19]
  40964c:	bl	414d30 <nftw@plt+0x121b0>
  409650:	b	409484 <nftw@plt+0x6904>
  409654:	ldrb	w0, [x19, #130]
  409658:	cbnz	w0, 409450 <nftw@plt+0x68d0>
  40965c:	ldp	x23, x24, [sp, #48]
  409660:	b	409424 <nftw@plt+0x68a4>
  409664:	mov	w1, #0x4                   	// #4
  409668:	str	w1, [x20, #56]
  40966c:	cbnz	w0, 4094a0 <nftw@plt+0x6920>
  409670:	ldr	w2, [x19, #132]
  409674:	cbnz	w2, 409690 <nftw@plt+0x6b10>
  409678:	ldr	w0, [x19, #216]
  40967c:	add	w0, w0, #0x1
  409680:	str	w0, [x19, #216]
  409684:	b	4096e4 <nftw@plt+0x6b64>
  409688:	ldr	w2, [x19, #132]
  40968c:	cbz	w2, 4096a8 <nftw@plt+0x6b28>
  409690:	ldp	w0, w4, [x19, #24]
  409694:	ldr	w3, [x19, #56]
  409698:	add	w0, w0, w4
  40969c:	add	w0, w0, w3
  4096a0:	cmp	w0, w2
  4096a4:	b.ge	409978 <nftw@plt+0x6df8>  // b.tcont
  4096a8:	ldr	w0, [x19, #216]
  4096ac:	cmp	w1, #0x3
  4096b0:	add	w0, w0, #0x1
  4096b4:	str	w0, [x19, #216]
  4096b8:	b.ne	4098b0 <nftw@plt+0x6d30>  // b.any
  4096bc:	ldr	w0, [x19, #24]
  4096c0:	cmp	w0, #0x0
  4096c4:	b.le	409898 <nftw@plt+0x6d18>
  4096c8:	ldrb	w0, [x19, #120]
  4096cc:	cbz	w0, 4099a0 <nftw@plt+0x6e20>
  4096d0:	ldr	x3, [x19, #160]
  4096d4:	cbz	x3, 4096e4 <nftw@plt+0x6b64>
  4096d8:	ldp	x1, x2, [x20]
  4096dc:	mov	x0, x19
  4096e0:	blr	x3
  4096e4:	ldr	w1, [x20, #56]
  4096e8:	cmp	w1, #0x4
  4096ec:	ccmp	w21, #0x6, #0x0, eq  // eq = none
  4096f0:	b.ne	4094fc <nftw@plt+0x697c>  // b.any
  4096f4:	ldr	w0, [x19, #56]
  4096f8:	add	w0, w0, #0x1
  4096fc:	str	w0, [x19, #56]
  409700:	b	40950c <nftw@plt+0x698c>
  409704:	ldr	x21, [x19]
  409708:	stp	x27, x28, [sp, #80]
  40970c:	ldr	x27, [x20, #40]
  409710:	cbz	x21, 4099e4 <nftw@plt+0x6e64>
  409714:	cbz	x27, 409a04 <nftw@plt+0x6e84>
  409718:	ldr	w0, [x27, #120]
  40971c:	cbz	w0, 4097e4 <nftw@plt+0x6c64>
  409720:	adrp	x22, 473000 <_obstack_memory_used@@Base+0x11bb8>
  409724:	add	x28, x27, #0x78
  409728:	add	x22, x22, #0x790
  40972c:	stp	x23, x24, [sp, #48]
  409730:	adrp	x23, 473000 <_obstack_memory_used@@Base+0x11bb8>
  409734:	mov	x24, #0xfffffffffffffff0    	// #-16
  409738:	add	x23, x23, #0x788
  40973c:	stp	x25, x26, [sp, #64]
  409740:	mov	w25, #0x0                   	// #0
  409744:	b	4097c0 <nftw@plt+0x6c40>
  409748:	ldr	x0, [x28, #32]
  40974c:	add	x1, x24, w25, sxtw #3
  409750:	add	x0, x0, x1
  409754:	ldr	x26, [x0]
  409758:	add	x8, sp, #0x60
  40975c:	add	w25, w25, #0x1
  409760:	ldr	w0, [x26]
  409764:	bl	419af0 <nftw@plt+0x16f70>
  409768:	mov	x1, x23
  40976c:	mov	x0, x21
  409770:	bl	414bf0 <nftw@plt+0x12070>
  409774:	ldr	x1, [sp, #96]
  409778:	mov	x0, x21
  40977c:	bl	409cf0 <nftw@plt+0x7170>
  409780:	ldr	w0, [x26, #4]
  409784:	add	x8, sp, #0x80
  409788:	bl	419af0 <nftw@plt+0x16f70>
  40978c:	ldp	w2, w3, [sp, #104]
  409790:	mov	x1, x22
  409794:	ldp	w4, w5, [sp, #136]
  409798:	mov	x0, x21
  40979c:	bl	414aa8 <nftw@plt+0x11f28>
  4097a0:	ldr	x1, [x26, #8]
  4097a4:	mov	x0, x21
  4097a8:	bl	409cf0 <nftw@plt+0x7170>
  4097ac:	mov	x0, x21
  4097b0:	bl	412f40 <nftw@plt+0x103c0>
  4097b4:	ldr	w0, [x27, #120]
  4097b8:	cmp	w0, w25
  4097bc:	b.ls	4097d8 <nftw@plt+0x6c58>  // b.plast
  4097c0:	cmp	w25, #0x1
  4097c4:	sxtw	x0, w25
  4097c8:	b.gt	409748 <nftw@plt+0x6bc8>
  4097cc:	add	x0, x0, #0x1
  4097d0:	add	x0, x28, x0, lsl #3
  4097d4:	b	409754 <nftw@plt+0x6bd4>
  4097d8:	ldp	x23, x24, [sp, #48]
  4097dc:	ldp	x25, x26, [sp, #64]
  4097e0:	ldr	x21, [x19]
  4097e4:	mov	x0, x21
  4097e8:	bl	412318 <nftw@plt+0xf798>
  4097ec:	ldp	x27, x28, [sp, #80]
  4097f0:	b	409584 <nftw@plt+0x6a04>
  4097f4:	ldp	w3, w1, [x20, #56]
  4097f8:	mov	w2, w21
  4097fc:	ldr	x4, [x19, #184]
  409800:	mov	x0, x19
  409804:	blr	x4
  409808:	mov	x22, x0
  40980c:	cbz	x0, 409568 <nftw@plt+0x69e8>
  409810:	stp	x23, x24, [sp, #48]
  409814:	adrp	x1, 473000 <_obstack_memory_used@@Base+0x11bb8>
  409818:	add	x1, x1, #0x768
  40981c:	ldr	x23, [x19]
  409820:	mov	x0, x23
  409824:	bl	414bf0 <nftw@plt+0x12070>
  409828:	ldrsw	x1, [x20, #56]
  40982c:	adrp	x0, 473000 <_obstack_memory_used@@Base+0x11bb8>
  409830:	add	x0, x0, #0x9b0
  409834:	ldr	x24, [x0, x1, lsl #3]
  409838:	mov	x0, x24
  40983c:	bl	4024f0 <strlen@plt>
  409840:	mov	x2, x0
  409844:	ldrb	w0, [x23, #67]
  409848:	mov	x1, x24
  40984c:	bl	40be18 <nftw@plt+0x9298>
  409850:	mov	x1, x0
  409854:	mov	x0, x23
  409858:	bl	414bf0 <nftw@plt+0x12070>
  40985c:	mov	x1, x22
  409860:	mov	x0, x23
  409864:	bl	414bf0 <nftw@plt+0x12070>
  409868:	ldrb	w0, [x23, #67]
  40986c:	bl	40bea8 <nftw@plt+0x9328>
  409870:	mov	x1, x0
  409874:	mov	x0, x23
  409878:	bl	414bf0 <nftw@plt+0x12070>
  40987c:	mov	w1, #0x5d                  	// #93
  409880:	mov	x0, x23
  409884:	bl	412fa0 <nftw@plt+0x10420>
  409888:	mov	x0, x22
  40988c:	bl	402910 <free@plt>
  409890:	ldp	x23, x24, [sp, #48]
  409894:	b	409568 <nftw@plt+0x69e8>
  409898:	ldr	w0, [x19, #28]
  40989c:	cmp	w0, #0x0
  4098a0:	b.gt	4096c8 <nftw@plt+0x6b48>
  4098a4:	b	4096d0 <nftw@plt+0x6b50>
  4098a8:	bl	4108a0 <nftw@plt+0xdd20>
  4098ac:	b	4095a8 <nftw@plt+0x6a28>
  4098b0:	cmp	w1, #0xd
  4098b4:	b.eq	4096bc <nftw@plt+0x6b3c>  // b.none
  4098b8:	b	4096e4 <nftw@plt+0x6b64>
  4098bc:	str	w1, [x20, #56]
  4098c0:	b	4094d8 <nftw@plt+0x6958>
  4098c4:	mov	x0, x20
  4098c8:	mov	w1, #0x0                   	// #0
  4098cc:	stp	x23, x24, [sp, #48]
  4098d0:	bl	411e40 <nftw@plt+0xf2c0>
  4098d4:	ldr	w22, [x19, #88]
  4098d8:	mov	w24, w0
  4098dc:	subs	w22, w22, #0x1
  4098e0:	b.mi	409970 <nftw@plt+0x6df0>  // b.first
  4098e4:	adrp	x23, 4a5000 <__environ@@GLIBC_2.17+0xa68>
  4098e8:	add	x23, x23, #0x920
  4098ec:	stp	x25, x26, [sp, #64]
  4098f0:	mov	w25, #0xc                   	// #12
  4098f4:	b	409910 <nftw@plt+0x6d90>
  4098f8:	cbz	w0, 409954 <nftw@plt+0x6dd4>
  4098fc:	ldr	w2, [x20, #60]
  409900:	cmp	w2, w0
  409904:	b.eq	409954 <nftw@plt+0x6dd4>  // b.none
  409908:	subs	w22, w22, #0x1
  40990c:	b.mi	409948 <nftw@plt+0x6dc8>  // b.first
  409910:	smull	x26, w22, w25
  409914:	mov	w2, w24
  409918:	ldr	x1, [x19, #80]
  40991c:	ldr	x0, [x23]
  409920:	ldr	w1, [x1, x26]
  409924:	bl	436c58 <nftw@plt+0x340d8>
  409928:	tbnz	w0, #31, 409908 <nftw@plt+0x6d88>
  40992c:	ldr	x3, [x19, #80]
  409930:	add	x3, x3, x26
  409934:	ldp	w0, w1, [x3, #4]
  409938:	cmp	w1, #0xf
  40993c:	b.ne	4098f8 <nftw@plt+0x6d78>  // b.any
  409940:	mov	w22, w0
  409944:	b	409908 <nftw@plt+0x6d88>
  409948:	ldp	x23, x24, [sp, #48]
  40994c:	ldp	x25, x26, [sp, #64]
  409950:	b	4094c4 <nftw@plt+0x6944>
  409954:	cbz	w1, 409948 <nftw@plt+0x6dc8>
  409958:	ldp	x23, x24, [sp, #48]
  40995c:	ldp	x25, x26, [sp, #64]
  409960:	str	w1, [x20, #56]
  409964:	b	4094d8 <nftw@plt+0x6958>
  409968:	ldp	x23, x24, [sp, #48]
  40996c:	b	4095cc <nftw@plt+0x6a4c>
  409970:	ldp	x23, x24, [sp, #48]
  409974:	b	4094c4 <nftw@plt+0x6944>
  409978:	adrp	x0, 4a4000 <_obstack_memory_used@@Base+0x42bb8>
  40997c:	adrp	x1, 473000 <_obstack_memory_used@@Base+0x11bb8>
  409980:	add	x1, x1, #0x590
  409984:	stp	x23, x24, [sp, #48]
  409988:	ldr	x0, [x0, #1392]
  40998c:	stp	x25, x26, [sp, #64]
  409990:	stp	x27, x28, [sp, #80]
  409994:	bl	4090a8 <nftw@plt+0x6528>
  409998:	mov	w0, #0x1                   	// #1
  40999c:	bl	402520 <exit@plt>
  4099a0:	mov	w1, #0x0                   	// #0
  4099a4:	mov	x0, x20
  4099a8:	stp	x23, x24, [sp, #48]
  4099ac:	stp	x25, x26, [sp, #64]
  4099b0:	stp	x27, x28, [sp, #80]
  4099b4:	bl	411e40 <nftw@plt+0xf2c0>
  4099b8:	add	x8, sp, #0x80
  4099bc:	bl	419af0 <nftw@plt+0x16f70>
  4099c0:	adrp	x0, 4a4000 <_obstack_memory_used@@Base+0x42bb8>
  4099c4:	ldr	w3, [sp, #136]
  4099c8:	ldr	x2, [sp, #128]
  4099cc:	adrp	x1, 473000 <_obstack_memory_used@@Base+0x11bb8>
  4099d0:	ldr	x0, [x0, #1392]
  4099d4:	add	x1, x1, #0x738
  4099d8:	bl	4090a8 <nftw@plt+0x6528>
  4099dc:	mov	w0, #0x4                   	// #4
  4099e0:	bl	402520 <exit@plt>
  4099e4:	adrp	x2, 473000 <_obstack_memory_used@@Base+0x11bb8>
  4099e8:	adrp	x0, 473000 <_obstack_memory_used@@Base+0x11bb8>
  4099ec:	add	x2, x2, #0x770
  4099f0:	add	x0, x0, #0x6e0
  4099f4:	mov	w1, #0x322                 	// #802
  4099f8:	stp	x23, x24, [sp, #48]
  4099fc:	stp	x25, x26, [sp, #64]
  409a00:	bl	402bf0 <nftw@plt+0x70>
  409a04:	adrp	x2, 473000 <_obstack_memory_used@@Base+0x11bb8>
  409a08:	adrp	x0, 473000 <_obstack_memory_used@@Base+0x11bb8>
  409a0c:	add	x2, x2, #0x770
  409a10:	add	x0, x0, #0x6e0
  409a14:	mov	w1, #0x323                 	// #803
  409a18:	stp	x23, x24, [sp, #48]
  409a1c:	stp	x25, x26, [sp, #64]
  409a20:	bl	402bf0 <nftw@plt+0x70>
  409a24:	nop
  409a28:	sub	sp, sp, #0x200
  409a2c:	adrp	x13, 4a5000 <__environ@@GLIBC_2.17+0xa68>
  409a30:	adrp	x12, 4a5000 <__environ@@GLIBC_2.17+0xa68>
  409a34:	add	x11, sp, #0x1c0
  409a38:	mov	w10, #0xffffffc8            	// #-56
  409a3c:	mov	w9, #0xffffff80            	// #-128
  409a40:	stp	x29, x30, [sp]
  409a44:	mov	x29, sp
  409a48:	str	x21, [sp, #32]
  409a4c:	adrp	x21, 4a4000 <_obstack_memory_used@@Base+0x42bb8>
  409a50:	str	q0, [sp, #320]
  409a54:	ldr	x8, [x21, #920]
  409a58:	str	q1, [sp, #336]
  409a5c:	str	q2, [sp, #352]
  409a60:	str	q3, [sp, #368]
  409a64:	str	q4, [sp, #384]
  409a68:	str	q5, [sp, #400]
  409a6c:	str	q6, [sp, #416]
  409a70:	str	q7, [sp, #432]
  409a74:	stp	x1, x2, [sp, #456]
  409a78:	ldr	w2, [x13, #2360]
  409a7c:	stp	x3, x4, [sp, #472]
  409a80:	add	x4, sp, #0x200
  409a84:	mov	x3, #0x0                   	// #0
  409a88:	stp	x5, x6, [sp, #488]
  409a8c:	add	x5, sp, #0x200
  409a90:	str	x7, [sp, #504]
  409a94:	stp	x4, x5, [sp, #56]
  409a98:	ldr	w4, [x8, #240]
  409a9c:	ldr	x1, [x12, #2336]
  409aa0:	add	w4, w4, #0x1
  409aa4:	stp	x19, x20, [sp, #16]
  409aa8:	add	x19, sp, #0x98
  409aac:	mov	x20, x0
  409ab0:	str	w4, [x8, #240]
  409ab4:	mov	x0, x19
  409ab8:	str	x11, [sp, #72]
  409abc:	stp	w10, w9, [sp, #80]
  409ac0:	bl	437b48 <nftw@plt+0x34fc8>
  409ac4:	mov	x0, x20
  409ac8:	bl	402b10 <gettext@plt>
  409acc:	mov	x20, x0
  409ad0:	bl	402aa0 <__errno_location@plt>
  409ad4:	mov	x1, x0
  409ad8:	add	x4, sp, #0x38
  409adc:	ldr	x0, [x21, #920]
  409ae0:	mov	x2, #0x3                   	// #3
  409ae4:	ldr	w3, [x1]
  409ae8:	add	x1, sp, #0x58
  409aec:	stp	x20, x4, [sp, #88]
  409af0:	str	w3, [sp, #104]
  409af4:	stp	x19, x19, [sp, #120]
  409af8:	str	x2, [sp, #144]
  409afc:	bl	4093e8 <nftw@plt+0x6868>
  409b00:	adrp	x2, 473000 <_obstack_memory_used@@Base+0x11bb8>
  409b04:	adrp	x0, 473000 <_obstack_memory_used@@Base+0x11bb8>
  409b08:	add	x2, x2, #0x7a0
  409b0c:	add	x0, x0, #0x6e0
  409b10:	mov	w1, #0x607                 	// #1543
  409b14:	bl	402bf0 <nftw@plt+0x70>
  409b18:	stp	x29, x30, [sp, #-64]!
  409b1c:	mov	x29, sp
  409b20:	stp	x19, x20, [sp, #16]
  409b24:	stp	x21, x22, [sp, #32]
  409b28:	str	x23, [sp, #48]
  409b2c:	cbz	x3, 409b70 <nftw@plt+0x6ff0>
  409b30:	mov	x19, x0
  409b34:	mov	x23, x1
  409b38:	mov	x22, x2
  409b3c:	mov	x20, x3
  409b40:	mov	w21, w4
  409b44:	bl	402aa0 <__errno_location@plt>
  409b48:	ldr	w0, [x0]
  409b4c:	stp	x23, x22, [x19]
  409b50:	str	w0, [x19, #16]
  409b54:	stp	x20, x20, [x19, #32]
  409b58:	stp	w21, wzr, [x19, #56]
  409b5c:	ldp	x19, x20, [sp, #16]
  409b60:	ldp	x21, x22, [sp, #32]
  409b64:	ldr	x23, [sp, #48]
  409b68:	ldp	x29, x30, [sp], #64
  409b6c:	ret
  409b70:	adrp	x2, 473000 <_obstack_memory_used@@Base+0x11bb8>
  409b74:	adrp	x0, 473000 <_obstack_memory_used@@Base+0x11bb8>
  409b78:	add	x2, x2, #0x7c0
  409b7c:	add	x0, x0, #0x6e0
  409b80:	mov	w1, #0x112                 	// #274
  409b84:	bl	402bf0 <nftw@plt+0x70>
  409b88:	stp	x29, x30, [sp, #-96]!
  409b8c:	mov	x29, sp
  409b90:	stp	x19, x20, [sp, #16]
  409b94:	mov	x19, x0
  409b98:	ldr	w0, [x1, #56]
  409b9c:	stp	x21, x22, [sp, #32]
  409ba0:	cmp	w0, #0xd
  409ba4:	stp	x23, x24, [sp, #48]
  409ba8:	b.gt	409c7c <nftw@plt+0x70fc>
  409bac:	adrp	x21, 473000 <_obstack_memory_used@@Base+0x11bb8>
  409bb0:	add	x21, x21, #0x9b0
  409bb4:	mov	x20, x1
  409bb8:	add	x1, x21, #0xa0
  409bbc:	ldr	x0, [x1, w0, sxtw #3]
  409bc0:	bl	402b10 <gettext@plt>
  409bc4:	mov	x22, x0
  409bc8:	ldrsw	x1, [x20, #56]
  409bcc:	ldr	x21, [x21, x1, lsl #3]
  409bd0:	cbz	x21, 409c6c <nftw@plt+0x70ec>
  409bd4:	mov	x0, x21
  409bd8:	bl	4024f0 <strlen@plt>
  409bdc:	ldr	x24, [x19]
  409be0:	mov	x2, x0
  409be4:	mov	x1, x21
  409be8:	ldrb	w0, [x24, #67]
  409bec:	bl	40be18 <nftw@plt+0x9298>
  409bf0:	mov	x23, x0
  409bf4:	ldrb	w0, [x24, #67]
  409bf8:	bl	40bea8 <nftw@plt+0x9328>
  409bfc:	mov	x21, x0
  409c00:	ldr	x0, [x20, #40]
  409c04:	add	x8, sp, #0x40
  409c08:	mov	w1, #0x0                   	// #0
  409c0c:	bl	437cc8 <nftw@plt+0x35148>
  409c10:	mov	x1, x19
  409c14:	ldp	w3, w4, [sp, #72]
  409c18:	ldr	x2, [sp, #64]
  409c1c:	ldr	x0, [x1], #121
  409c20:	bl	408658 <nftw@plt+0x5ad8>
  409c24:	mov	x1, x0
  409c28:	mov	x4, x21
  409c2c:	mov	x3, x22
  409c30:	mov	x2, x23
  409c34:	mov	x19, x0
  409c38:	adrp	x0, 473000 <_obstack_memory_used@@Base+0x11bb8>
  409c3c:	add	x0, x0, #0x7f8
  409c40:	bl	4085e0 <nftw@plt+0x5a60>
  409c44:	mov	x1, x0
  409c48:	mov	x0, x19
  409c4c:	mov	x19, x1
  409c50:	bl	402910 <free@plt>
  409c54:	mov	x0, x19
  409c58:	ldp	x19, x20, [sp, #16]
  409c5c:	ldp	x21, x22, [sp, #32]
  409c60:	ldp	x23, x24, [sp, #48]
  409c64:	ldp	x29, x30, [sp], #96
  409c68:	ret
  409c6c:	adrp	x21, 472000 <_obstack_memory_used@@Base+0x10bb8>
  409c70:	add	x21, x21, #0x5c0
  409c74:	mov	x23, x21
  409c78:	b	409c00 <nftw@plt+0x7080>
  409c7c:	adrp	x2, 473000 <_obstack_memory_used@@Base+0x11bb8>
  409c80:	adrp	x0, 473000 <_obstack_memory_used@@Base+0x11bb8>
  409c84:	add	x2, x2, #0x7e0
  409c88:	add	x0, x0, #0x6e0
  409c8c:	mov	w1, #0x16a                 	// #362
  409c90:	bl	402bf0 <nftw@plt+0x70>
  409c94:	nop
  409c98:	stp	x29, x30, [sp, #-48]!
  409c9c:	mov	x29, sp
  409ca0:	stp	x19, x20, [sp, #16]
  409ca4:	mov	x19, x0
  409ca8:	mov	x20, x1
  409cac:	mov	x0, x1
  409cb0:	mov	w1, #0x0                   	// #0
  409cb4:	str	x21, [sp, #32]
  409cb8:	bl	411e40 <nftw@plt+0xf2c0>
  409cbc:	mov	w1, w0
  409cc0:	mov	x0, x19
  409cc4:	bl	408ae0 <nftw@plt+0x5f60>
  409cc8:	ldr	x21, [x19]
  409ccc:	mov	x1, x20
  409cd0:	mov	x0, x19
  409cd4:	bl	409b88 <nftw@plt+0x7008>
  409cd8:	mov	x1, x0
  409cdc:	mov	x0, x21
  409ce0:	ldp	x19, x20, [sp, #16]
  409ce4:	ldr	x21, [sp, #32]
  409ce8:	ldp	x29, x30, [sp], #48
  409cec:	b	412578 <nftw@plt+0xf9f8>
  409cf0:	stp	x29, x30, [sp, #-64]!
  409cf4:	mov	x29, sp
  409cf8:	stp	x19, x20, [sp, #16]
  409cfc:	cbz	x0, 409e00 <nftw@plt+0x7280>
  409d00:	mov	x19, x1
  409d04:	cbz	x1, 409e20 <nftw@plt+0x72a0>
  409d08:	mov	w1, #0x22                  	// #34
  409d0c:	mov	x20, x0
  409d10:	bl	412fa0 <nftw@plt+0x10420>
  409d14:	ldrb	w1, [x19]
  409d18:	cbz	w1, 409d90 <nftw@plt+0x7210>
  409d1c:	stp	x21, x22, [sp, #32]
  409d20:	adrp	x22, 473000 <_obstack_memory_used@@Base+0x11bb8>
  409d24:	adrp	x21, 481000 <_obstack_memory_used@@Base+0x1fbb8>
  409d28:	add	x22, x22, #0x838
  409d2c:	add	x21, x21, #0xaf0
  409d30:	str	x23, [sp, #48]
  409d34:	adrp	x23, 473000 <_obstack_memory_used@@Base+0x11bb8>
  409d38:	b	409d5c <nftw@plt+0x71dc>
  409d3c:	cmp	w1, #0xa
  409d40:	b.ne	409dd0 <nftw@plt+0x7250>  // b.any
  409d44:	adrp	x1, 473000 <_obstack_memory_used@@Base+0x11bb8>
  409d48:	mov	x0, x20
  409d4c:	add	x1, x1, #0x830
  409d50:	bl	414bf0 <nftw@plt+0x12070>
  409d54:	ldrb	w1, [x19, #1]!
  409d58:	cbz	w1, 409d88 <nftw@plt+0x7208>
  409d5c:	cmp	w1, #0x22
  409d60:	b.eq	409dc0 <nftw@plt+0x7240>  // b.none
  409d64:	b.hi	409da4 <nftw@plt+0x7224>  // b.pmore
  409d68:	cmp	w1, #0x9
  409d6c:	b.ne	409d3c <nftw@plt+0x71bc>  // b.any
  409d70:	mov	x0, x20
  409d74:	adrp	x1, 473000 <_obstack_memory_used@@Base+0x11bb8>
  409d78:	add	x1, x1, #0x828
  409d7c:	bl	414bf0 <nftw@plt+0x12070>
  409d80:	ldrb	w1, [x19, #1]!
  409d84:	cbnz	w1, 409d5c <nftw@plt+0x71dc>
  409d88:	ldp	x21, x22, [sp, #32]
  409d8c:	ldr	x23, [sp, #48]
  409d90:	mov	x0, x20
  409d94:	ldp	x19, x20, [sp, #16]
  409d98:	mov	w1, #0x22                  	// #34
  409d9c:	ldp	x29, x30, [sp], #64
  409da0:	b	412fa0 <nftw@plt+0x10420>
  409da4:	cmp	w1, #0x5c
  409da8:	b.ne	409dd0 <nftw@plt+0x7250>  // b.any
  409dac:	mov	x0, x20
  409db0:	adrp	x1, 473000 <_obstack_memory_used@@Base+0x11bb8>
  409db4:	add	x1, x1, #0x820
  409db8:	bl	414bf0 <nftw@plt+0x12070>
  409dbc:	b	409d54 <nftw@plt+0x71d4>
  409dc0:	mov	x1, x22
  409dc4:	mov	x0, x20
  409dc8:	bl	414bf0 <nftw@plt+0x12070>
  409dcc:	b	409d54 <nftw@plt+0x71d4>
  409dd0:	ldrh	w0, [x21, w1, sxtw #1]
  409dd4:	tbz	w0, #4, 409de4 <nftw@plt+0x7264>
  409dd8:	mov	x0, x20
  409ddc:	bl	412fa0 <nftw@plt+0x10420>
  409de0:	b	409d54 <nftw@plt+0x71d4>
  409de4:	and	w4, w1, #0x7
  409de8:	ubfx	x3, x1, #3, #3
  409dec:	lsr	w2, w1, #6
  409df0:	mov	x0, x20
  409df4:	add	x1, x23, #0x840
  409df8:	bl	414aa8 <nftw@plt+0x11f28>
  409dfc:	b	409d54 <nftw@plt+0x71d4>
  409e00:	adrp	x2, 473000 <_obstack_memory_used@@Base+0x11bb8>
  409e04:	adrp	x0, 473000 <_obstack_memory_used@@Base+0x11bb8>
  409e08:	add	x2, x2, #0x808
  409e0c:	add	x0, x0, #0x6e0
  409e10:	mov	w1, #0x2f5                 	// #757
  409e14:	stp	x21, x22, [sp, #32]
  409e18:	str	x23, [sp, #48]
  409e1c:	bl	402bf0 <nftw@plt+0x70>
  409e20:	adrp	x2, 473000 <_obstack_memory_used@@Base+0x11bb8>
  409e24:	adrp	x0, 473000 <_obstack_memory_used@@Base+0x11bb8>
  409e28:	add	x2, x2, #0x808
  409e2c:	add	x0, x0, #0x6e0
  409e30:	mov	w1, #0x2f6                 	// #758
  409e34:	stp	x21, x22, [sp, #32]
  409e38:	str	x23, [sp, #48]
  409e3c:	bl	402bf0 <nftw@plt+0x70>
  409e40:	cmp	w0, #0x0
  409e44:	b.lt	409e74 <nftw@plt+0x72f4>  // b.tstop
  409e48:	mov	w1, w0
  409e4c:	mov	w0, #0x1                   	// #1
  409e50:	b.eq	409e70 <nftw@plt+0x72f0>  // b.none
  409e54:	mov	w2, #0xcccd                	// #52429
  409e58:	mov	w0, #0x0                   	// #0
  409e5c:	movk	w2, #0xcccc, lsl #16
  409e60:	umull	x1, w1, w2
  409e64:	add	w0, w0, #0x1
  409e68:	lsr	x1, x1, #35
  409e6c:	cbnz	w1, 409e60 <nftw@plt+0x72e0>
  409e70:	ret
  409e74:	stp	x29, x30, [sp, #-16]!
  409e78:	adrp	x2, 473000 <_obstack_memory_used@@Base+0x11bb8>
  409e7c:	adrp	x0, 473000 <_obstack_memory_used@@Base+0x11bb8>
  409e80:	mov	x29, sp
  409e84:	add	x2, x2, #0x848
  409e88:	add	x0, x0, #0x6e0
  409e8c:	mov	w1, #0x415                 	// #1045
  409e90:	bl	402bf0 <nftw@plt+0x70>
  409e94:	nop
  409e98:	sub	sp, sp, #0x200
  409e9c:	adrp	x8, 4a5000 <__environ@@GLIBC_2.17+0xa68>
  409ea0:	stp	x29, x30, [sp]
  409ea4:	mov	x29, sp
  409ea8:	stp	x21, x22, [sp, #32]
  409eac:	mov	x21, x2
  409eb0:	mov	w2, w1
  409eb4:	ldr	x1, [x8, #2336]
  409eb8:	stp	x19, x20, [sp, #16]
  409ebc:	add	x20, sp, #0xa8
  409ec0:	mov	x19, x0
  409ec4:	mov	x0, x20
  409ec8:	str	q0, [sp, #336]
  409ecc:	mov	x22, #0x8                   	// #8
  409ed0:	str	q1, [sp, #352]
  409ed4:	str	q2, [sp, #368]
  409ed8:	str	q3, [sp, #384]
  409edc:	str	q4, [sp, #400]
  409ee0:	str	q5, [sp, #416]
  409ee4:	str	q6, [sp, #432]
  409ee8:	str	q7, [sp, #448]
  409eec:	stp	x3, x4, [sp, #472]
  409ef0:	mov	x3, #0x0                   	// #0
  409ef4:	stp	x5, x6, [sp, #488]
  409ef8:	str	x7, [sp, #504]
  409efc:	bl	437b48 <nftw@plt+0x34fc8>
  409f00:	add	x3, sp, #0x1d0
  409f04:	add	x4, sp, #0x200
  409f08:	mov	w2, #0xffffffd8            	// #-40
  409f0c:	mov	w1, #0xffffff80            	// #-128
  409f10:	mov	x0, x21
  409f14:	stp	x4, x4, [sp, #72]
  409f18:	str	x3, [sp, #88]
  409f1c:	stp	w2, w1, [sp, #96]
  409f20:	bl	402b10 <gettext@plt>
  409f24:	mov	x21, x0
  409f28:	bl	402aa0 <__errno_location@plt>
  409f2c:	ldrb	w1, [x19, #220]
  409f30:	add	x2, sp, #0x48
  409f34:	ldr	w0, [x0]
  409f38:	stp	x21, x2, [sp, #104]
  409f3c:	str	w0, [sp, #120]
  409f40:	stp	x20, x20, [sp, #136]
  409f44:	str	x22, [sp, #160]
  409f48:	cbnz	w1, 409fd0 <nftw@plt+0x7450>
  409f4c:	ldr	x0, [x19]
  409f50:	str	x23, [sp, #48]
  409f54:	bl	412608 <nftw@plt+0xfa88>
  409f58:	mov	x21, x0
  409f5c:	ldr	x23, [x19]
  409f60:	add	x1, sp, #0x68
  409f64:	mov	x0, x19
  409f68:	bl	409b88 <nftw@plt+0x7008>
  409f6c:	mov	x1, x0
  409f70:	mov	x0, x23
  409f74:	bl	412578 <nftw@plt+0xf9f8>
  409f78:	ldr	x0, [x19]
  409f7c:	add	x1, sp, #0x68
  409f80:	bl	413088 <nftw@plt+0x10508>
  409f84:	ldr	x0, [x19]
  409f88:	bl	412d90 <nftw@plt+0x10210>
  409f8c:	ldr	x0, [x19]
  409f90:	bl	412618 <nftw@plt+0xfa98>
  409f94:	ldr	x0, [x19]
  409f98:	mov	x1, x21
  409f9c:	bl	412578 <nftw@plt+0xf9f8>
  409fa0:	mov	w2, w22
  409fa4:	mov	x1, x20
  409fa8:	mov	x0, x19
  409fac:	bl	40d978 <nftw@plt+0xadf8>
  409fb0:	mov	x0, x20
  409fb4:	bl	437b88 <nftw@plt+0x35008>
  409fb8:	ldp	x29, x30, [sp]
  409fbc:	ldp	x19, x20, [sp, #16]
  409fc0:	ldp	x21, x22, [sp, #32]
  409fc4:	ldr	x23, [sp, #48]
  409fc8:	add	sp, sp, #0x200
  409fcc:	ret
  409fd0:	mov	x0, x20
  409fd4:	bl	437b88 <nftw@plt+0x35008>
  409fd8:	ldp	x29, x30, [sp]
  409fdc:	ldp	x19, x20, [sp, #16]
  409fe0:	ldp	x21, x22, [sp, #32]
  409fe4:	add	sp, sp, #0x200
  409fe8:	ret
  409fec:	nop
  409ff0:	stp	x29, x30, [sp, #-64]!
  409ff4:	mov	x29, sp
  409ff8:	stp	x19, x20, [sp, #16]
  409ffc:	stp	x21, x22, [sp, #32]
  40a000:	str	x23, [sp, #48]
  40a004:	cbz	x3, 40a050 <nftw@plt+0x74d0>
  40a008:	mov	x19, x0
  40a00c:	mov	x22, x2
  40a010:	mov	x20, x3
  40a014:	mov	w21, w4
  40a018:	mov	x0, x1
  40a01c:	bl	402b10 <gettext@plt>
  40a020:	mov	x23, x0
  40a024:	bl	402aa0 <__errno_location@plt>
  40a028:	ldr	w0, [x0]
  40a02c:	stp	x23, x22, [x19]
  40a030:	str	w0, [x19, #16]
  40a034:	stp	x20, x20, [x19, #32]
  40a038:	stp	w21, wzr, [x19, #56]
  40a03c:	ldp	x19, x20, [sp, #16]
  40a040:	ldp	x21, x22, [sp, #32]
  40a044:	ldr	x23, [sp, #48]
  40a048:	ldp	x29, x30, [sp], #64
  40a04c:	ret
  40a050:	adrp	x2, 473000 <_obstack_memory_used@@Base+0x11bb8>
  40a054:	adrp	x0, 473000 <_obstack_memory_used@@Base+0x11bb8>
  40a058:	add	x2, x2, #0x858
  40a05c:	add	x0, x0, #0x6e0
  40a060:	mov	w1, #0x123                 	// #291
  40a064:	bl	402bf0 <nftw@plt+0x70>
  40a068:	stp	x29, x30, [sp, #-496]!
  40a06c:	adrp	x12, 4a5000 <__environ@@GLIBC_2.17+0xa68>
  40a070:	mov	w10, #0xffffffe0            	// #-32
  40a074:	mov	x29, sp
  40a078:	stp	x19, x20, [sp, #16]
  40a07c:	adrp	x20, 4a4000 <_obstack_memory_used@@Base+0x42bb8>
  40a080:	add	x11, sp, #0x1d0
  40a084:	ldr	x8, [x20, #920]
  40a088:	str	q0, [sp, #336]
  40a08c:	mov	w9, #0xffffff80            	// #-128
  40a090:	str	q1, [sp, #352]
  40a094:	add	x19, sp, #0xa8
  40a098:	str	q2, [sp, #368]
  40a09c:	str	q3, [sp, #384]
  40a0a0:	str	q4, [sp, #400]
  40a0a4:	str	q5, [sp, #416]
  40a0a8:	str	q6, [sp, #432]
  40a0ac:	str	q7, [sp, #448]
  40a0b0:	stp	x4, x5, [sp, #464]
  40a0b4:	add	x4, sp, #0x1f0
  40a0b8:	add	x5, sp, #0x1f0
  40a0bc:	stp	x6, x7, [sp, #480]
  40a0c0:	stp	x4, x5, [sp, #72]
  40a0c4:	ldr	w4, [x8, #240]
  40a0c8:	str	x23, [sp, #48]
  40a0cc:	mov	x23, x1
  40a0d0:	ldr	x1, [x12, #2336]
  40a0d4:	add	w4, w4, #0x1
  40a0d8:	stp	x21, x22, [sp, #32]
  40a0dc:	mov	x21, x2
  40a0e0:	mov	x22, x3
  40a0e4:	str	w4, [x8, #240]
  40a0e8:	mov	x3, #0x0                   	// #0
  40a0ec:	mov	w2, w0
  40a0f0:	mov	x0, x19
  40a0f4:	str	x11, [sp, #88]
  40a0f8:	stp	w10, w9, [sp, #96]
  40a0fc:	bl	437b48 <nftw@plt+0x34fc8>
  40a100:	mov	x2, x23
  40a104:	mov	x1, x22
  40a108:	mov	x0, x21
  40a10c:	bl	4024b0 <ngettext@plt>
  40a110:	mov	x21, x0
  40a114:	bl	402aa0 <__errno_location@plt>
  40a118:	mov	x2, x0
  40a11c:	ldr	x0, [x20, #920]
  40a120:	add	x4, sp, #0x48
  40a124:	ldr	w3, [x2]
  40a128:	add	x1, sp, #0x68
  40a12c:	mov	x2, #0x4                   	// #4
  40a130:	stp	x21, x4, [sp, #104]
  40a134:	str	w3, [sp, #120]
  40a138:	stp	x19, x19, [sp, #136]
  40a13c:	str	x2, [sp, #160]
  40a140:	bl	4093e8 <nftw@plt+0x6868>
  40a144:	mov	x0, x19
  40a148:	bl	437b88 <nftw@plt+0x35008>
  40a14c:	ldr	x0, [x20, #920]
  40a150:	ldr	w1, [x0, #240]
  40a154:	sub	w1, w1, #0x1
  40a158:	str	w1, [x0, #240]
  40a15c:	cbnz	w1, 40a180 <nftw@plt+0x7600>
  40a160:	ldr	w1, [x0, #244]
  40a164:	cmp	w1, #0x0
  40a168:	b.le	40a17c <nftw@plt+0x75fc>
  40a16c:	ldr	x1, [x0, #256]
  40a170:	cbz	x1, 40a17c <nftw@plt+0x75fc>
  40a174:	blr	x1
  40a178:	ldr	x0, [x20, #920]
  40a17c:	str	wzr, [x0, #244]
  40a180:	ldp	x19, x20, [sp, #16]
  40a184:	ldp	x21, x22, [sp, #32]
  40a188:	ldr	x23, [sp, #48]
  40a18c:	ldp	x29, x30, [sp], #496
  40a190:	ret
  40a194:	nop
  40a198:	stp	x29, x30, [sp, #-320]!
  40a19c:	mov	x8, x0
  40a1a0:	mov	x29, sp
  40a1a4:	stp	x19, x20, [sp, #16]
  40a1a8:	str	x21, [sp, #32]
  40a1ac:	str	q0, [sp, #160]
  40a1b0:	str	q1, [sp, #176]
  40a1b4:	str	q2, [sp, #192]
  40a1b8:	str	q3, [sp, #208]
  40a1bc:	str	q4, [sp, #224]
  40a1c0:	str	q5, [sp, #240]
  40a1c4:	str	q6, [sp, #256]
  40a1c8:	str	q7, [sp, #272]
  40a1cc:	stp	x5, x6, [sp, #296]
  40a1d0:	str	x7, [sp, #312]
  40a1d4:	cbz	x0, 40a2a8 <nftw@plt+0x7728>
  40a1d8:	adrp	x19, 4a4000 <_obstack_memory_used@@Base+0x42bb8>
  40a1dc:	mov	w20, w1
  40a1e0:	mov	x1, x4
  40a1e4:	mov	x0, x3
  40a1e8:	ldr	x4, [x19, #920]
  40a1ec:	add	x3, sp, #0x140
  40a1f0:	stp	x3, x3, [sp, #64]
  40a1f4:	dup	v0.2d, x8
  40a1f8:	add	x7, sp, #0x120
  40a1fc:	ldr	w3, [x4, #240]
  40a200:	mov	w6, #0xffffffe8            	// #-24
  40a204:	mov	w5, #0xffffff80            	// #-128
  40a208:	str	x7, [sp, #80]
  40a20c:	add	w3, w3, #0x1
  40a210:	str	w3, [x4, #240]
  40a214:	str	q0, [sp, #48]
  40a218:	stp	w6, w5, [sp, #88]
  40a21c:	bl	4024b0 <ngettext@plt>
  40a220:	mov	x21, x0
  40a224:	bl	402aa0 <__errno_location@plt>
  40a228:	mov	x1, x0
  40a22c:	add	x4, sp, #0x40
  40a230:	ldr	x0, [x19, #920]
  40a234:	mov	w2, #0x6                   	// #6
  40a238:	ldr	w3, [x1]
  40a23c:	add	x1, sp, #0x60
  40a240:	ldr	q0, [sp, #48]
  40a244:	stp	x21, x4, [sp, #96]
  40a248:	str	w3, [sp, #112]
  40a24c:	str	q0, [sp, #128]
  40a250:	stp	w2, w20, [sp, #152]
  40a254:	bl	4093e8 <nftw@plt+0x6868>
  40a258:	ldr	x2, [x19, #920]
  40a25c:	mov	w20, w0
  40a260:	ldr	w1, [x2, #240]
  40a264:	sub	w1, w1, #0x1
  40a268:	str	w1, [x2, #240]
  40a26c:	cbnz	w1, 40a294 <nftw@plt+0x7714>
  40a270:	ldr	w0, [x2, #244]
  40a274:	cmp	w0, #0x0
  40a278:	b.le	40a290 <nftw@plt+0x7710>
  40a27c:	ldr	x1, [x2, #256]
  40a280:	cbz	x1, 40a290 <nftw@plt+0x7710>
  40a284:	mov	x0, x2
  40a288:	blr	x1
  40a28c:	ldr	x2, [x19, #920]
  40a290:	str	wzr, [x2, #244]
  40a294:	mov	w0, w20
  40a298:	ldp	x19, x20, [sp, #16]
  40a29c:	ldr	x21, [sp, #32]
  40a2a0:	ldp	x29, x30, [sp], #320
  40a2a4:	ret
  40a2a8:	adrp	x2, 473000 <_obstack_memory_used@@Base+0x11bb8>
  40a2ac:	adrp	x0, 473000 <_obstack_memory_used@@Base+0x11bb8>
  40a2b0:	add	x2, x2, #0x870
  40a2b4:	add	x0, x0, #0x6e0
  40a2b8:	mov	w1, #0x528                 	// #1320
  40a2bc:	bl	402bf0 <nftw@plt+0x70>
  40a2c0:	stp	x29, x30, [sp, #-496]!
  40a2c4:	adrp	x12, 4a5000 <__environ@@GLIBC_2.17+0xa68>
  40a2c8:	mov	w10, #0xffffffe8            	// #-24
  40a2cc:	mov	x29, sp
  40a2d0:	stp	x19, x20, [sp, #16]
  40a2d4:	adrp	x20, 4a4000 <_obstack_memory_used@@Base+0x42bb8>
  40a2d8:	add	x11, sp, #0x1d0
  40a2dc:	ldr	x8, [x20, #920]
  40a2e0:	str	q0, [sp, #336]
  40a2e4:	mov	w9, #0xffffff80            	// #-128
  40a2e8:	str	q1, [sp, #352]
  40a2ec:	add	x19, sp, #0xa8
  40a2f0:	str	q2, [sp, #368]
  40a2f4:	str	q3, [sp, #384]
  40a2f8:	str	q4, [sp, #400]
  40a2fc:	str	q5, [sp, #416]
  40a300:	str	q6, [sp, #432]
  40a304:	str	q7, [sp, #448]
  40a308:	stp	x5, x6, [sp, #472]
  40a30c:	add	x5, sp, #0x1f0
  40a310:	str	x7, [sp, #488]
  40a314:	stp	x23, x24, [sp, #48]
  40a318:	mov	x23, x4
  40a31c:	add	x4, sp, #0x1f0
  40a320:	str	x4, [sp, #72]
  40a324:	mov	x24, x2
  40a328:	ldr	w4, [x8, #240]
  40a32c:	mov	w2, w0
  40a330:	stp	x21, x22, [sp, #32]
  40a334:	mov	w21, w1
  40a338:	add	w4, w4, #0x1
  40a33c:	ldr	x1, [x12, #2336]
  40a340:	str	w4, [x8, #240]
  40a344:	mov	x22, x3
  40a348:	mov	x0, x19
  40a34c:	mov	x3, #0x0                   	// #0
  40a350:	str	x5, [sp, #80]
  40a354:	str	x11, [sp, #88]
  40a358:	stp	w10, w9, [sp, #96]
  40a35c:	bl	437b48 <nftw@plt+0x34fc8>
  40a360:	mov	x2, x24
  40a364:	mov	x1, x23
  40a368:	mov	x0, x22
  40a36c:	bl	4024b0 <ngettext@plt>
  40a370:	mov	x22, x0
  40a374:	bl	402aa0 <__errno_location@plt>
  40a378:	mov	x2, x0
  40a37c:	ldr	x0, [x20, #920]
  40a380:	add	x4, sp, #0x48
  40a384:	ldr	w3, [x2]
  40a388:	mov	w2, #0x6                   	// #6
  40a38c:	add	x1, sp, #0x68
  40a390:	stp	x22, x4, [sp, #104]
  40a394:	str	w3, [sp, #120]
  40a398:	stp	x19, x19, [sp, #136]
  40a39c:	stp	w2, w21, [sp, #160]
  40a3a0:	bl	4093e8 <nftw@plt+0x6868>
  40a3a4:	mov	w1, w0
  40a3a8:	mov	x0, x19
  40a3ac:	mov	w19, w1
  40a3b0:	bl	437b88 <nftw@plt+0x35008>
  40a3b4:	ldr	x0, [x20, #920]
  40a3b8:	ldr	w1, [x0, #240]
  40a3bc:	sub	w1, w1, #0x1
  40a3c0:	str	w1, [x0, #240]
  40a3c4:	cbnz	w1, 40a3e8 <nftw@plt+0x7868>
  40a3c8:	ldr	w1, [x0, #244]
  40a3cc:	cmp	w1, #0x0
  40a3d0:	b.le	40a3e4 <nftw@plt+0x7864>
  40a3d4:	ldr	x1, [x0, #256]
  40a3d8:	cbz	x1, 40a3e4 <nftw@plt+0x7864>
  40a3dc:	blr	x1
  40a3e0:	ldr	x0, [x20, #920]
  40a3e4:	str	wzr, [x0, #244]
  40a3e8:	mov	w0, w19
  40a3ec:	ldp	x19, x20, [sp, #16]
  40a3f0:	ldp	x21, x22, [sp, #32]
  40a3f4:	ldp	x23, x24, [sp, #48]
  40a3f8:	ldp	x29, x30, [sp], #496
  40a3fc:	ret
  40a400:	stp	x29, x30, [sp, #-496]!
  40a404:	adrp	x12, 4a5000 <__environ@@GLIBC_2.17+0xa68>
  40a408:	mov	w10, #0xffffffe0            	// #-32
  40a40c:	mov	x29, sp
  40a410:	stp	x19, x20, [sp, #16]
  40a414:	adrp	x20, 4a4000 <_obstack_memory_used@@Base+0x42bb8>
  40a418:	add	x11, sp, #0x1d0
  40a41c:	ldr	x8, [x20, #920]
  40a420:	str	q0, [sp, #336]
  40a424:	mov	w9, #0xffffff80            	// #-128
  40a428:	str	q1, [sp, #352]
  40a42c:	add	x19, sp, #0xa8
  40a430:	str	q2, [sp, #368]
  40a434:	str	q3, [sp, #384]
  40a438:	str	q4, [sp, #400]
  40a43c:	str	q5, [sp, #416]
  40a440:	str	q6, [sp, #432]
  40a444:	str	q7, [sp, #448]
  40a448:	stp	x4, x5, [sp, #464]
  40a44c:	add	x4, sp, #0x1f0
  40a450:	add	x5, sp, #0x1f0
  40a454:	stp	x6, x7, [sp, #480]
  40a458:	stp	x4, x5, [sp, #72]
  40a45c:	ldr	w4, [x8, #240]
  40a460:	str	x23, [sp, #48]
  40a464:	mov	x23, x1
  40a468:	ldr	x1, [x12, #2336]
  40a46c:	add	w4, w4, #0x1
  40a470:	stp	x21, x22, [sp, #32]
  40a474:	mov	x21, x2
  40a478:	mov	x22, x3
  40a47c:	str	w4, [x8, #240]
  40a480:	mov	x3, #0x0                   	// #0
  40a484:	mov	w2, w0
  40a488:	mov	x0, x19
  40a48c:	str	x11, [sp, #88]
  40a490:	stp	w10, w9, [sp, #96]
  40a494:	bl	437b48 <nftw@plt+0x34fc8>
  40a498:	mov	x2, x23
  40a49c:	mov	x1, x22
  40a4a0:	mov	x0, x21
  40a4a4:	bl	4024b0 <ngettext@plt>
  40a4a8:	mov	x21, x0
  40a4ac:	bl	402aa0 <__errno_location@plt>
  40a4b0:	mov	x2, x0
  40a4b4:	ldr	x0, [x20, #920]
  40a4b8:	add	x4, sp, #0x48
  40a4bc:	ldr	w3, [x2]
  40a4c0:	add	x1, sp, #0x68
  40a4c4:	mov	x2, #0x8                   	// #8
  40a4c8:	stp	x21, x4, [sp, #104]
  40a4cc:	str	w3, [sp, #120]
  40a4d0:	stp	x19, x19, [sp, #136]
  40a4d4:	str	x2, [sp, #160]
  40a4d8:	bl	4093e8 <nftw@plt+0x6868>
  40a4dc:	mov	x0, x19
  40a4e0:	bl	437b88 <nftw@plt+0x35008>
  40a4e4:	ldr	x0, [x20, #920]
  40a4e8:	ldr	w1, [x0, #240]
  40a4ec:	sub	w1, w1, #0x1
  40a4f0:	str	w1, [x0, #240]
  40a4f4:	cbnz	w1, 40a518 <nftw@plt+0x7998>
  40a4f8:	ldr	w1, [x0, #244]
  40a4fc:	cmp	w1, #0x0
  40a500:	b.le	40a514 <nftw@plt+0x7994>
  40a504:	ldr	x1, [x0, #256]
  40a508:	cbz	x1, 40a514 <nftw@plt+0x7994>
  40a50c:	blr	x1
  40a510:	ldr	x0, [x20, #920]
  40a514:	str	wzr, [x0, #244]
  40a518:	ldp	x19, x20, [sp, #16]
  40a51c:	ldp	x21, x22, [sp, #32]
  40a520:	ldr	x23, [sp, #48]
  40a524:	ldp	x29, x30, [sp], #496
  40a528:	ret
  40a52c:	nop
  40a530:	stp	x29, x30, [sp, #-496]!
  40a534:	adrp	x12, 4a5000 <__environ@@GLIBC_2.17+0xa68>
  40a538:	mov	w10, #0xffffffd8            	// #-40
  40a53c:	mov	x29, sp
  40a540:	stp	x19, x20, [sp, #16]
  40a544:	adrp	x20, 4a4000 <_obstack_memory_used@@Base+0x42bb8>
  40a548:	add	x11, sp, #0x1c0
  40a54c:	ldr	x8, [x20, #920]
  40a550:	str	q0, [sp, #320]
  40a554:	mov	w9, #0xffffff80            	// #-128
  40a558:	str	q1, [sp, #336]
  40a55c:	add	x19, sp, #0x98
  40a560:	str	q2, [sp, #352]
  40a564:	str	q3, [sp, #368]
  40a568:	str	q4, [sp, #384]
  40a56c:	str	q5, [sp, #400]
  40a570:	str	q6, [sp, #416]
  40a574:	str	q7, [sp, #432]
  40a578:	stp	x3, x4, [sp, #456]
  40a57c:	add	x4, sp, #0x1f0
  40a580:	mov	x3, #0x0                   	// #0
  40a584:	stp	x5, x6, [sp, #472]
  40a588:	add	x5, sp, #0x1f0
  40a58c:	str	x7, [sp, #488]
  40a590:	stp	x4, x5, [sp, #56]
  40a594:	ldr	w4, [x8, #240]
  40a598:	stp	x21, x22, [sp, #32]
  40a59c:	mov	w21, w1
  40a5a0:	add	w4, w4, #0x1
  40a5a4:	ldr	x1, [x12, #2336]
  40a5a8:	mov	x22, x2
  40a5ac:	mov	w2, w0
  40a5b0:	str	w4, [x8, #240]
  40a5b4:	mov	x0, x19
  40a5b8:	str	x11, [sp, #72]
  40a5bc:	stp	w10, w9, [sp, #80]
  40a5c0:	bl	437b48 <nftw@plt+0x34fc8>
  40a5c4:	mov	x0, x22
  40a5c8:	bl	402b10 <gettext@plt>
  40a5cc:	mov	x22, x0
  40a5d0:	bl	402aa0 <__errno_location@plt>
  40a5d4:	mov	x2, x0
  40a5d8:	add	x4, sp, #0x38
  40a5dc:	ldr	x0, [x20, #920]
  40a5e0:	add	x1, sp, #0x58
  40a5e4:	ldr	w3, [x2]
  40a5e8:	mov	w2, #0xa                   	// #10
  40a5ec:	stp	x22, x4, [sp, #88]
  40a5f0:	str	w3, [sp, #104]
  40a5f4:	stp	x19, x19, [sp, #120]
  40a5f8:	stp	w2, w21, [sp, #144]
  40a5fc:	bl	4093e8 <nftw@plt+0x6868>
  40a600:	mov	w1, w0
  40a604:	mov	x0, x19
  40a608:	mov	w19, w1
  40a60c:	bl	437b88 <nftw@plt+0x35008>
  40a610:	ldr	x0, [x20, #920]
  40a614:	ldr	w1, [x0, #240]
  40a618:	sub	w1, w1, #0x1
  40a61c:	str	w1, [x0, #240]
  40a620:	cbnz	w1, 40a644 <nftw@plt+0x7ac4>
  40a624:	ldr	w1, [x0, #244]
  40a628:	cmp	w1, #0x0
  40a62c:	b.le	40a640 <nftw@plt+0x7ac0>
  40a630:	ldr	x1, [x0, #256]
  40a634:	cbz	x1, 40a640 <nftw@plt+0x7ac0>
  40a638:	blr	x1
  40a63c:	ldr	x0, [x20, #920]
  40a640:	str	wzr, [x0, #244]
  40a644:	mov	w0, w19
  40a648:	ldp	x19, x20, [sp, #16]
  40a64c:	ldp	x21, x22, [sp, #32]
  40a650:	ldp	x29, x30, [sp], #496
  40a654:	ret
  40a658:	stp	x29, x30, [sp, #-496]!
  40a65c:	adrp	x12, 4a5000 <__environ@@GLIBC_2.17+0xa68>
  40a660:	mov	w10, #0xffffffd8            	// #-40
  40a664:	mov	x29, sp
  40a668:	stp	x19, x20, [sp, #16]
  40a66c:	adrp	x20, 4a4000 <_obstack_memory_used@@Base+0x42bb8>
  40a670:	add	x11, sp, #0x1c0
  40a674:	ldr	x8, [x20, #920]
  40a678:	str	q0, [sp, #320]
  40a67c:	mov	w9, #0xffffff80            	// #-128
  40a680:	str	q1, [sp, #336]
  40a684:	add	x19, sp, #0x98
  40a688:	str	q2, [sp, #352]
  40a68c:	str	q3, [sp, #368]
  40a690:	str	q4, [sp, #384]
  40a694:	str	q5, [sp, #400]
  40a698:	str	q6, [sp, #416]
  40a69c:	str	q7, [sp, #432]
  40a6a0:	stp	x3, x4, [sp, #456]
  40a6a4:	add	x4, sp, #0x1f0
  40a6a8:	mov	x3, #0x0                   	// #0
  40a6ac:	stp	x5, x6, [sp, #472]
  40a6b0:	add	x5, sp, #0x1f0
  40a6b4:	str	x7, [sp, #488]
  40a6b8:	stp	x4, x5, [sp, #56]
  40a6bc:	ldr	w4, [x8, #240]
  40a6c0:	stp	x21, x22, [sp, #32]
  40a6c4:	mov	w21, w1
  40a6c8:	add	w4, w4, #0x1
  40a6cc:	ldr	x1, [x12, #2336]
  40a6d0:	mov	x22, x2
  40a6d4:	mov	w2, w0
  40a6d8:	str	w4, [x8, #240]
  40a6dc:	mov	x0, x19
  40a6e0:	str	x11, [sp, #72]
  40a6e4:	stp	w10, w9, [sp, #80]
  40a6e8:	bl	437b48 <nftw@plt+0x34fc8>
  40a6ec:	mov	x0, x22
  40a6f0:	bl	402b10 <gettext@plt>
  40a6f4:	mov	x22, x0
  40a6f8:	bl	402aa0 <__errno_location@plt>
  40a6fc:	mov	x2, x0
  40a700:	add	x4, sp, #0x38
  40a704:	ldr	x0, [x20, #920]
  40a708:	add	x1, sp, #0x58
  40a70c:	ldr	w3, [x2]
  40a710:	mov	w2, #0x6                   	// #6
  40a714:	stp	x22, x4, [sp, #88]
  40a718:	str	w3, [sp, #104]
  40a71c:	stp	x19, x19, [sp, #120]
  40a720:	stp	w2, w21, [sp, #144]
  40a724:	bl	4093e8 <nftw@plt+0x6868>
  40a728:	mov	w1, w0
  40a72c:	mov	x0, x19
  40a730:	mov	w19, w1
  40a734:	bl	437b88 <nftw@plt+0x35008>
  40a738:	ldr	x0, [x20, #920]
  40a73c:	ldr	w1, [x0, #240]
  40a740:	sub	w1, w1, #0x1
  40a744:	str	w1, [x0, #240]
  40a748:	cbnz	w1, 40a76c <nftw@plt+0x7bec>
  40a74c:	ldr	w1, [x0, #244]
  40a750:	cmp	w1, #0x0
  40a754:	b.le	40a768 <nftw@plt+0x7be8>
  40a758:	ldr	x1, [x0, #256]
  40a75c:	cbz	x1, 40a768 <nftw@plt+0x7be8>
  40a760:	blr	x1
  40a764:	ldr	x0, [x20, #920]
  40a768:	str	wzr, [x0, #244]
  40a76c:	mov	w0, w19
  40a770:	ldp	x19, x20, [sp, #16]
  40a774:	ldp	x21, x22, [sp, #32]
  40a778:	ldp	x29, x30, [sp], #496
  40a77c:	ret
  40a780:	stp	x29, x30, [sp, #-496]!
  40a784:	adrp	x13, 4a5000 <__environ@@GLIBC_2.17+0xa68>
  40a788:	adrp	x12, 4a5000 <__environ@@GLIBC_2.17+0xa68>
  40a78c:	mov	x29, sp
  40a790:	stp	x19, x20, [sp, #16]
  40a794:	adrp	x20, 4a4000 <_obstack_memory_used@@Base+0x42bb8>
  40a798:	add	x11, sp, #0x1c0
  40a79c:	ldr	x8, [x20, #920]
  40a7a0:	str	q0, [sp, #320]
  40a7a4:	mov	w10, #0xffffffd0            	// #-48
  40a7a8:	str	q1, [sp, #336]
  40a7ac:	mov	w9, #0xffffff80            	// #-128
  40a7b0:	add	x19, sp, #0x98
  40a7b4:	str	q2, [sp, #352]
  40a7b8:	str	q3, [sp, #368]
  40a7bc:	str	q4, [sp, #384]
  40a7c0:	str	q5, [sp, #400]
  40a7c4:	str	q6, [sp, #416]
  40a7c8:	str	q7, [sp, #432]
  40a7cc:	stp	x2, x3, [sp, #448]
  40a7d0:	mov	x3, #0x0                   	// #0
  40a7d4:	ldr	w2, [x13, #2360]
  40a7d8:	stp	x4, x5, [sp, #464]
  40a7dc:	add	x4, sp, #0x1f0
  40a7e0:	add	x5, sp, #0x1f0
  40a7e4:	stp	x6, x7, [sp, #480]
  40a7e8:	stp	x4, x5, [sp, #56]
  40a7ec:	ldr	w4, [x8, #240]
  40a7f0:	stp	x21, x22, [sp, #32]
  40a7f4:	mov	x22, x1
  40a7f8:	add	w4, w4, #0x1
  40a7fc:	ldr	x1, [x12, #2336]
  40a800:	str	w4, [x8, #240]
  40a804:	mov	w21, w0
  40a808:	mov	x0, x19
  40a80c:	str	x11, [sp, #72]
  40a810:	stp	w10, w9, [sp, #80]
  40a814:	bl	437b48 <nftw@plt+0x34fc8>
  40a818:	mov	x0, x22
  40a81c:	bl	402b10 <gettext@plt>
  40a820:	mov	x22, x0
  40a824:	bl	402aa0 <__errno_location@plt>
  40a828:	mov	x2, x0
  40a82c:	add	x4, sp, #0x38
  40a830:	ldr	x0, [x20, #920]
  40a834:	add	x1, sp, #0x58
  40a838:	ldr	w3, [x2]
  40a83c:	mov	w2, #0x6                   	// #6
  40a840:	stp	x22, x4, [sp, #88]
  40a844:	str	w3, [sp, #104]
  40a848:	stp	x19, x19, [sp, #120]
  40a84c:	stp	w2, w21, [sp, #144]
  40a850:	bl	4093e8 <nftw@plt+0x6868>
  40a854:	mov	w1, w0
  40a858:	mov	x0, x19
  40a85c:	mov	w19, w1
  40a860:	bl	437b88 <nftw@plt+0x35008>
  40a864:	ldr	x0, [x20, #920]
  40a868:	ldr	w1, [x0, #240]
  40a86c:	sub	w1, w1, #0x1
  40a870:	str	w1, [x0, #240]
  40a874:	cbnz	w1, 40a898 <nftw@plt+0x7d18>
  40a878:	ldr	w1, [x0, #244]
  40a87c:	cmp	w1, #0x0
  40a880:	b.le	40a894 <nftw@plt+0x7d14>
  40a884:	ldr	x1, [x0, #256]
  40a888:	cbz	x1, 40a894 <nftw@plt+0x7d14>
  40a88c:	blr	x1
  40a890:	ldr	x0, [x20, #920]
  40a894:	str	wzr, [x0, #244]
  40a898:	mov	w0, w19
  40a89c:	ldp	x19, x20, [sp, #16]
  40a8a0:	ldp	x21, x22, [sp, #32]
  40a8a4:	ldp	x29, x30, [sp], #496
  40a8a8:	ret
  40a8ac:	nop
  40a8b0:	stp	x29, x30, [sp, #-496]!
  40a8b4:	adrp	x12, 4a5000 <__environ@@GLIBC_2.17+0xa68>
  40a8b8:	mov	w13, w0
  40a8bc:	mov	x29, sp
  40a8c0:	stp	x19, x20, [sp, #16]
  40a8c4:	adrp	x20, 4a4000 <_obstack_memory_used@@Base+0x42bb8>
  40a8c8:	add	x11, sp, #0x1c0
  40a8cc:	ldr	x8, [x20, #920]
  40a8d0:	str	q0, [sp, #320]
  40a8d4:	mov	w10, #0xffffffd0            	// #-48
  40a8d8:	str	q1, [sp, #336]
  40a8dc:	mov	w9, #0xffffff80            	// #-128
  40a8e0:	add	x19, sp, #0x98
  40a8e4:	str	q2, [sp, #352]
  40a8e8:	mov	x0, x19
  40a8ec:	str	q3, [sp, #368]
  40a8f0:	str	q4, [sp, #384]
  40a8f4:	str	q5, [sp, #400]
  40a8f8:	str	q6, [sp, #416]
  40a8fc:	str	q7, [sp, #432]
  40a900:	stp	x2, x3, [sp, #448]
  40a904:	mov	w2, w13
  40a908:	mov	x3, #0x0                   	// #0
  40a90c:	stp	x4, x5, [sp, #464]
  40a910:	add	x4, sp, #0x1f0
  40a914:	add	x5, sp, #0x1f0
  40a918:	stp	x6, x7, [sp, #480]
  40a91c:	stp	x4, x5, [sp, #56]
  40a920:	ldr	w4, [x8, #240]
  40a924:	str	x21, [sp, #32]
  40a928:	mov	x21, x1
  40a92c:	ldr	x1, [x12, #2336]
  40a930:	add	w4, w4, #0x1
  40a934:	str	w4, [x8, #240]
  40a938:	str	x11, [sp, #72]
  40a93c:	stp	w10, w9, [sp, #80]
  40a940:	bl	437b48 <nftw@plt+0x34fc8>
  40a944:	mov	x0, x21
  40a948:	bl	402b10 <gettext@plt>
  40a94c:	mov	x21, x0
  40a950:	bl	402aa0 <__errno_location@plt>
  40a954:	mov	x2, x0
  40a958:	add	x4, sp, #0x38
  40a95c:	ldr	x0, [x20, #920]
  40a960:	add	x1, sp, #0x58
  40a964:	ldr	w3, [x2]
  40a968:	mov	x2, #0x4                   	// #4
  40a96c:	stp	x21, x4, [sp, #88]
  40a970:	str	w3, [sp, #104]
  40a974:	stp	x19, x19, [sp, #120]
  40a978:	str	x2, [sp, #144]
  40a97c:	bl	4093e8 <nftw@plt+0x6868>
  40a980:	mov	x0, x19
  40a984:	bl	437b88 <nftw@plt+0x35008>
  40a988:	ldr	x0, [x20, #920]
  40a98c:	ldr	w1, [x0, #240]
  40a990:	sub	w1, w1, #0x1
  40a994:	str	w1, [x0, #240]
  40a998:	cbnz	w1, 40a9bc <nftw@plt+0x7e3c>
  40a99c:	ldr	w1, [x0, #244]
  40a9a0:	cmp	w1, #0x0
  40a9a4:	b.le	40a9b8 <nftw@plt+0x7e38>
  40a9a8:	ldr	x1, [x0, #256]
  40a9ac:	cbz	x1, 40a9b8 <nftw@plt+0x7e38>
  40a9b0:	blr	x1
  40a9b4:	ldr	x0, [x20, #920]
  40a9b8:	str	wzr, [x0, #244]
  40a9bc:	ldp	x19, x20, [sp, #16]
  40a9c0:	ldr	x21, [sp, #32]
  40a9c4:	ldp	x29, x30, [sp], #496
  40a9c8:	ret
  40a9cc:	nop
  40a9d0:	stp	x29, x30, [sp, #-496]!
  40a9d4:	adrp	x12, 4a5000 <__environ@@GLIBC_2.17+0xa68>
  40a9d8:	mov	w13, w0
  40a9dc:	mov	x29, sp
  40a9e0:	stp	x19, x20, [sp, #16]
  40a9e4:	adrp	x20, 4a4000 <_obstack_memory_used@@Base+0x42bb8>
  40a9e8:	add	x11, sp, #0x1c0
  40a9ec:	ldr	x8, [x20, #920]
  40a9f0:	str	q0, [sp, #320]
  40a9f4:	mov	w10, #0xffffffd0            	// #-48
  40a9f8:	str	q1, [sp, #336]
  40a9fc:	mov	w9, #0xffffff80            	// #-128
  40aa00:	add	x19, sp, #0x98
  40aa04:	str	q2, [sp, #352]
  40aa08:	mov	x0, x19
  40aa0c:	str	q3, [sp, #368]
  40aa10:	str	q4, [sp, #384]
  40aa14:	str	q5, [sp, #400]
  40aa18:	str	q6, [sp, #416]
  40aa1c:	str	q7, [sp, #432]
  40aa20:	stp	x2, x3, [sp, #448]
  40aa24:	mov	w2, w13
  40aa28:	mov	x3, #0x0                   	// #0
  40aa2c:	stp	x4, x5, [sp, #464]
  40aa30:	add	x4, sp, #0x1f0
  40aa34:	add	x5, sp, #0x1f0
  40aa38:	stp	x6, x7, [sp, #480]
  40aa3c:	stp	x4, x5, [sp, #56]
  40aa40:	ldr	w4, [x8, #240]
  40aa44:	str	x21, [sp, #32]
  40aa48:	mov	x21, x1
  40aa4c:	ldr	x1, [x12, #2336]
  40aa50:	add	w4, w4, #0x1
  40aa54:	str	w4, [x8, #240]
  40aa58:	str	x11, [sp, #72]
  40aa5c:	stp	w10, w9, [sp, #80]
  40aa60:	bl	437b48 <nftw@plt+0x34fc8>
  40aa64:	mov	x0, x21
  40aa68:	bl	402b10 <gettext@plt>
  40aa6c:	mov	x21, x0
  40aa70:	bl	402aa0 <__errno_location@plt>
  40aa74:	mov	x2, x0
  40aa78:	add	x4, sp, #0x38
  40aa7c:	ldr	x0, [x20, #920]
  40aa80:	add	x1, sp, #0x58
  40aa84:	ldr	w3, [x2]
  40aa88:	mov	x2, #0x8                   	// #8
  40aa8c:	stp	x21, x4, [sp, #88]
  40aa90:	str	w3, [sp, #104]
  40aa94:	stp	x19, x19, [sp, #120]
  40aa98:	str	x2, [sp, #144]
  40aa9c:	bl	4093e8 <nftw@plt+0x6868>
  40aaa0:	mov	x0, x19
  40aaa4:	bl	437b88 <nftw@plt+0x35008>
  40aaa8:	ldr	x0, [x20, #920]
  40aaac:	ldr	w1, [x0, #240]
  40aab0:	sub	w1, w1, #0x1
  40aab4:	str	w1, [x0, #240]
  40aab8:	cbnz	w1, 40aadc <nftw@plt+0x7f5c>
  40aabc:	ldr	w1, [x0, #244]
  40aac0:	cmp	w1, #0x0
  40aac4:	b.le	40aad8 <nftw@plt+0x7f58>
  40aac8:	ldr	x1, [x0, #256]
  40aacc:	cbz	x1, 40aad8 <nftw@plt+0x7f58>
  40aad0:	blr	x1
  40aad4:	ldr	x0, [x20, #920]
  40aad8:	str	wzr, [x0, #244]
  40aadc:	ldp	x19, x20, [sp, #16]
  40aae0:	ldr	x21, [sp, #32]
  40aae4:	ldp	x29, x30, [sp], #496
  40aae8:	ret
  40aaec:	nop
  40aaf0:	stp	x29, x30, [sp, #-496]!
  40aaf4:	adrp	x12, 4a5000 <__environ@@GLIBC_2.17+0xa68>
  40aaf8:	mov	w13, w0
  40aafc:	mov	x29, sp
  40ab00:	stp	x19, x20, [sp, #16]
  40ab04:	adrp	x20, 4a4000 <_obstack_memory_used@@Base+0x42bb8>
  40ab08:	add	x11, sp, #0x1c0
  40ab0c:	ldr	x8, [x20, #920]
  40ab10:	str	q0, [sp, #320]
  40ab14:	mov	w10, #0xffffffd0            	// #-48
  40ab18:	str	q1, [sp, #336]
  40ab1c:	mov	w9, #0xffffff80            	// #-128
  40ab20:	add	x19, sp, #0x98
  40ab24:	str	q2, [sp, #352]
  40ab28:	mov	x0, x19
  40ab2c:	str	q3, [sp, #368]
  40ab30:	str	q4, [sp, #384]
  40ab34:	str	q5, [sp, #400]
  40ab38:	str	q6, [sp, #416]
  40ab3c:	str	q7, [sp, #432]
  40ab40:	stp	x2, x3, [sp, #448]
  40ab44:	mov	w2, w13
  40ab48:	mov	x3, #0x0                   	// #0
  40ab4c:	stp	x4, x5, [sp, #464]
  40ab50:	add	x4, sp, #0x1f0
  40ab54:	add	x5, sp, #0x1f0
  40ab58:	stp	x6, x7, [sp, #480]
  40ab5c:	stp	x4, x5, [sp, #56]
  40ab60:	ldr	w4, [x8, #240]
  40ab64:	str	x21, [sp, #32]
  40ab68:	mov	x21, x1
  40ab6c:	ldr	x1, [x12, #2336]
  40ab70:	add	w4, w4, #0x1
  40ab74:	str	w4, [x8, #240]
  40ab78:	str	x11, [sp, #72]
  40ab7c:	stp	w10, w9, [sp, #80]
  40ab80:	bl	437b48 <nftw@plt+0x34fc8>
  40ab84:	mov	x0, x21
  40ab88:	bl	402b10 <gettext@plt>
  40ab8c:	mov	x21, x0
  40ab90:	bl	402aa0 <__errno_location@plt>
  40ab94:	mov	x2, x0
  40ab98:	add	x4, sp, #0x38
  40ab9c:	ldr	x0, [x20, #920]
  40aba0:	add	x1, sp, #0x58
  40aba4:	ldr	w3, [x2]
  40aba8:	mov	x2, #0x5                   	// #5
  40abac:	stp	x21, x4, [sp, #88]
  40abb0:	str	w3, [sp, #104]
  40abb4:	stp	x19, x19, [sp, #120]
  40abb8:	str	x2, [sp, #144]
  40abbc:	bl	4093e8 <nftw@plt+0x6868>
  40abc0:	mov	x0, x19
  40abc4:	bl	437b88 <nftw@plt+0x35008>
  40abc8:	ldr	x0, [x20, #920]
  40abcc:	ldr	w1, [x0, #240]
  40abd0:	sub	w1, w1, #0x1
  40abd4:	str	w1, [x0, #240]
  40abd8:	cbnz	w1, 40abfc <nftw@plt+0x807c>
  40abdc:	ldr	w1, [x0, #244]
  40abe0:	cmp	w1, #0x0
  40abe4:	b.le	40abf8 <nftw@plt+0x8078>
  40abe8:	ldr	x1, [x0, #256]
  40abec:	cbz	x1, 40abf8 <nftw@plt+0x8078>
  40abf0:	blr	x1
  40abf4:	ldr	x0, [x20, #920]
  40abf8:	str	wzr, [x0, #244]
  40abfc:	ldp	x19, x20, [sp, #16]
  40ac00:	ldr	x21, [sp, #32]
  40ac04:	ldp	x29, x30, [sp], #496
  40ac08:	ret
  40ac0c:	nop
  40ac10:	sub	sp, sp, #0x200
  40ac14:	adrp	x13, 4a5000 <__environ@@GLIBC_2.17+0xa68>
  40ac18:	adrp	x12, 4a5000 <__environ@@GLIBC_2.17+0xa68>
  40ac1c:	add	x11, sp, #0x1c0
  40ac20:	mov	w10, #0xffffffc8            	// #-56
  40ac24:	mov	w9, #0xffffff80            	// #-128
  40ac28:	stp	x29, x30, [sp]
  40ac2c:	mov	x29, sp
  40ac30:	stp	x19, x20, [sp, #16]
  40ac34:	adrp	x20, 4a4000 <_obstack_memory_used@@Base+0x42bb8>
  40ac38:	add	x19, sp, #0x98
  40ac3c:	ldr	x8, [x20, #920]
  40ac40:	str	q0, [sp, #320]
  40ac44:	str	q1, [sp, #336]
  40ac48:	str	q2, [sp, #352]
  40ac4c:	str	q3, [sp, #368]
  40ac50:	str	q4, [sp, #384]
  40ac54:	str	q5, [sp, #400]
  40ac58:	str	q6, [sp, #416]
  40ac5c:	str	q7, [sp, #432]
  40ac60:	stp	x1, x2, [sp, #456]
  40ac64:	ldr	w2, [x13, #2360]
  40ac68:	stp	x3, x4, [sp, #472]
  40ac6c:	add	x4, sp, #0x200
  40ac70:	mov	x3, #0x0                   	// #0
  40ac74:	stp	x5, x6, [sp, #488]
  40ac78:	add	x5, sp, #0x200
  40ac7c:	str	x7, [sp, #504]
  40ac80:	stp	x4, x5, [sp, #56]
  40ac84:	ldr	w4, [x8, #240]
  40ac88:	ldr	x1, [x12, #2336]
  40ac8c:	add	w4, w4, #0x1
  40ac90:	str	x21, [sp, #32]
  40ac94:	mov	x21, x0
  40ac98:	str	w4, [x8, #240]
  40ac9c:	mov	x0, x19
  40aca0:	str	x11, [sp, #72]
  40aca4:	stp	w10, w9, [sp, #80]
  40aca8:	bl	437b48 <nftw@plt+0x34fc8>
  40acac:	mov	x0, x21
  40acb0:	bl	402b10 <gettext@plt>
  40acb4:	mov	x21, x0
  40acb8:	bl	402aa0 <__errno_location@plt>
  40acbc:	mov	x2, x0
  40acc0:	add	x4, sp, #0x38
  40acc4:	ldr	x0, [x20, #920]
  40acc8:	add	x1, sp, #0x58
  40accc:	ldr	w3, [x2]
  40acd0:	mov	x2, #0x4                   	// #4
  40acd4:	stp	x21, x4, [sp, #88]
  40acd8:	str	w3, [sp, #104]
  40acdc:	stp	x19, x19, [sp, #120]
  40ace0:	str	x2, [sp, #144]
  40ace4:	bl	4093e8 <nftw@plt+0x6868>
  40ace8:	mov	x0, x19
  40acec:	bl	437b88 <nftw@plt+0x35008>
  40acf0:	ldr	x0, [x20, #920]
  40acf4:	ldr	w1, [x0, #240]
  40acf8:	sub	w1, w1, #0x1
  40acfc:	str	w1, [x0, #240]
  40ad00:	cbnz	w1, 40ad24 <nftw@plt+0x81a4>
  40ad04:	ldr	w1, [x0, #244]
  40ad08:	cmp	w1, #0x0
  40ad0c:	b.le	40ad20 <nftw@plt+0x81a0>
  40ad10:	ldr	x1, [x0, #256]
  40ad14:	cbz	x1, 40ad20 <nftw@plt+0x81a0>
  40ad18:	blr	x1
  40ad1c:	ldr	x0, [x20, #920]
  40ad20:	str	wzr, [x0, #244]
  40ad24:	ldp	x29, x30, [sp]
  40ad28:	ldp	x19, x20, [sp, #16]
  40ad2c:	ldr	x21, [sp, #32]
  40ad30:	add	sp, sp, #0x200
  40ad34:	ret
  40ad38:	sub	sp, sp, #0x200
  40ad3c:	adrp	x13, 4a5000 <__environ@@GLIBC_2.17+0xa68>
  40ad40:	adrp	x12, 4a5000 <__environ@@GLIBC_2.17+0xa68>
  40ad44:	add	x11, sp, #0x1c0
  40ad48:	mov	w10, #0xffffffc8            	// #-56
  40ad4c:	mov	w9, #0xffffff80            	// #-128
  40ad50:	stp	x29, x30, [sp]
  40ad54:	mov	x29, sp
  40ad58:	stp	x19, x20, [sp, #16]
  40ad5c:	adrp	x20, 4a4000 <_obstack_memory_used@@Base+0x42bb8>
  40ad60:	add	x19, sp, #0x98
  40ad64:	ldr	x8, [x20, #920]
  40ad68:	str	q0, [sp, #320]
  40ad6c:	str	q1, [sp, #336]
  40ad70:	str	q2, [sp, #352]
  40ad74:	str	q3, [sp, #368]
  40ad78:	str	q4, [sp, #384]
  40ad7c:	str	q5, [sp, #400]
  40ad80:	str	q6, [sp, #416]
  40ad84:	str	q7, [sp, #432]
  40ad88:	stp	x1, x2, [sp, #456]
  40ad8c:	ldr	w2, [x13, #2360]
  40ad90:	stp	x3, x4, [sp, #472]
  40ad94:	add	x4, sp, #0x200
  40ad98:	mov	x3, #0x0                   	// #0
  40ad9c:	stp	x5, x6, [sp, #488]
  40ada0:	add	x5, sp, #0x200
  40ada4:	str	x7, [sp, #504]
  40ada8:	stp	x4, x5, [sp, #56]
  40adac:	ldr	w4, [x8, #240]
  40adb0:	ldr	x1, [x12, #2336]
  40adb4:	add	w4, w4, #0x1
  40adb8:	str	x21, [sp, #32]
  40adbc:	mov	x21, x0
  40adc0:	str	w4, [x8, #240]
  40adc4:	mov	x0, x19
  40adc8:	str	x11, [sp, #72]
  40adcc:	stp	w10, w9, [sp, #80]
  40add0:	bl	437b48 <nftw@plt+0x34fc8>
  40add4:	mov	x0, x21
  40add8:	bl	402b10 <gettext@plt>
  40addc:	mov	x21, x0
  40ade0:	bl	402aa0 <__errno_location@plt>
  40ade4:	mov	x2, x0
  40ade8:	add	x4, sp, #0x38
  40adec:	ldr	x0, [x20, #920]
  40adf0:	add	x1, sp, #0x58
  40adf4:	ldr	w3, [x2]
  40adf8:	mov	x2, #0x5                   	// #5
  40adfc:	stp	x21, x4, [sp, #88]
  40ae00:	str	w3, [sp, #104]
  40ae04:	stp	x19, x19, [sp, #120]
  40ae08:	str	x2, [sp, #144]
  40ae0c:	bl	4093e8 <nftw@plt+0x6868>
  40ae10:	mov	x0, x19
  40ae14:	bl	437b88 <nftw@plt+0x35008>
  40ae18:	ldr	x0, [x20, #920]
  40ae1c:	ldr	w1, [x0, #240]
  40ae20:	sub	w1, w1, #0x1
  40ae24:	str	w1, [x0, #240]
  40ae28:	cbnz	w1, 40ae4c <nftw@plt+0x82cc>
  40ae2c:	ldr	w1, [x0, #244]
  40ae30:	cmp	w1, #0x0
  40ae34:	b.le	40ae48 <nftw@plt+0x82c8>
  40ae38:	ldr	x1, [x0, #256]
  40ae3c:	cbz	x1, 40ae48 <nftw@plt+0x82c8>
  40ae40:	blr	x1
  40ae44:	ldr	x0, [x20, #920]
  40ae48:	str	wzr, [x0, #244]
  40ae4c:	ldp	x29, x30, [sp]
  40ae50:	ldp	x19, x20, [sp, #16]
  40ae54:	ldr	x21, [sp, #32]
  40ae58:	add	sp, sp, #0x200
  40ae5c:	ret
  40ae60:	stp	x29, x30, [sp, #-336]!
  40ae64:	mov	x8, x0
  40ae68:	mov	x29, sp
  40ae6c:	stp	x19, x20, [sp, #16]
  40ae70:	str	x21, [sp, #32]
  40ae74:	str	q0, [sp, #160]
  40ae78:	str	q1, [sp, #176]
  40ae7c:	str	q2, [sp, #192]
  40ae80:	str	q3, [sp, #208]
  40ae84:	str	q4, [sp, #224]
  40ae88:	str	q5, [sp, #240]
  40ae8c:	str	q6, [sp, #256]
  40ae90:	str	q7, [sp, #272]
  40ae94:	stp	x3, x4, [sp, #296]
  40ae98:	stp	x5, x6, [sp, #312]
  40ae9c:	str	x7, [sp, #328]
  40aea0:	cbz	x0, 40af70 <nftw@plt+0x83f0>
  40aea4:	adrp	x19, 4a4000 <_obstack_memory_used@@Base+0x42bb8>
  40aea8:	mov	x0, x2
  40aeac:	mov	w20, w1
  40aeb0:	add	x1, sp, #0x150
  40aeb4:	ldr	x2, [x19, #920]
  40aeb8:	stp	x1, x1, [sp, #64]
  40aebc:	dup	v0.2d, x8
  40aec0:	add	x5, sp, #0x120
  40aec4:	mov	w4, #0xffffffd8            	// #-40
  40aec8:	ldr	w1, [x2, #240]
  40aecc:	mov	w3, #0xffffff80            	// #-128
  40aed0:	str	x5, [sp, #80]
  40aed4:	add	w1, w1, #0x1
  40aed8:	str	w1, [x2, #240]
  40aedc:	str	q0, [sp, #48]
  40aee0:	stp	w4, w3, [sp, #88]
  40aee4:	bl	402b10 <gettext@plt>
  40aee8:	mov	x21, x0
  40aeec:	bl	402aa0 <__errno_location@plt>
  40aef0:	mov	x1, x0
  40aef4:	add	x4, sp, #0x40
  40aef8:	ldr	x0, [x19, #920]
  40aefc:	mov	w2, #0xa                   	// #10
  40af00:	ldr	w3, [x1]
  40af04:	add	x1, sp, #0x60
  40af08:	ldr	q0, [sp, #48]
  40af0c:	stp	x21, x4, [sp, #96]
  40af10:	str	w3, [sp, #112]
  40af14:	str	q0, [sp, #128]
  40af18:	stp	w2, w20, [sp, #152]
  40af1c:	bl	4093e8 <nftw@plt+0x6868>
  40af20:	ldr	x2, [x19, #920]
  40af24:	mov	w20, w0
  40af28:	ldr	w1, [x2, #240]
  40af2c:	sub	w1, w1, #0x1
  40af30:	str	w1, [x2, #240]
  40af34:	cbnz	w1, 40af5c <nftw@plt+0x83dc>
  40af38:	ldr	w0, [x2, #244]
  40af3c:	cmp	w0, #0x0
  40af40:	b.le	40af58 <nftw@plt+0x83d8>
  40af44:	ldr	x1, [x2, #256]
  40af48:	cbz	x1, 40af58 <nftw@plt+0x83d8>
  40af4c:	mov	x0, x2
  40af50:	blr	x1
  40af54:	ldr	x2, [x19, #920]
  40af58:	str	wzr, [x2, #244]
  40af5c:	mov	w0, w20
  40af60:	ldp	x19, x20, [sp, #16]
  40af64:	ldr	x21, [sp, #32]
  40af68:	ldp	x29, x30, [sp], #336
  40af6c:	ret
  40af70:	adrp	x2, 473000 <_obstack_memory_used@@Base+0x11bb8>
  40af74:	adrp	x0, 473000 <_obstack_memory_used@@Base+0x11bb8>
  40af78:	add	x2, x2, #0x880
  40af7c:	add	x0, x0, #0x6e0
  40af80:	mov	w1, #0x565                 	// #1381
  40af84:	bl	402bf0 <nftw@plt+0x70>
  40af88:	stp	x29, x30, [sp, #-336]!
  40af8c:	mov	x8, x0
  40af90:	mov	x29, sp
  40af94:	stp	x19, x20, [sp, #16]
  40af98:	str	x21, [sp, #32]
  40af9c:	str	q0, [sp, #160]
  40afa0:	str	q1, [sp, #176]
  40afa4:	str	q2, [sp, #192]
  40afa8:	str	q3, [sp, #208]
  40afac:	str	q4, [sp, #224]
  40afb0:	str	q5, [sp, #240]
  40afb4:	str	q6, [sp, #256]
  40afb8:	str	q7, [sp, #272]
  40afbc:	stp	x3, x4, [sp, #296]
  40afc0:	stp	x5, x6, [sp, #312]
  40afc4:	str	x7, [sp, #328]
  40afc8:	cbz	x0, 40b098 <nftw@plt+0x8518>
  40afcc:	adrp	x19, 4a4000 <_obstack_memory_used@@Base+0x42bb8>
  40afd0:	mov	x0, x2
  40afd4:	mov	w20, w1
  40afd8:	add	x1, sp, #0x150
  40afdc:	ldr	x2, [x19, #920]
  40afe0:	stp	x1, x1, [sp, #64]
  40afe4:	dup	v0.2d, x8
  40afe8:	add	x5, sp, #0x120
  40afec:	mov	w4, #0xffffffd8            	// #-40
  40aff0:	ldr	w1, [x2, #240]
  40aff4:	mov	w3, #0xffffff80            	// #-128
  40aff8:	str	x5, [sp, #80]
  40affc:	add	w1, w1, #0x1
  40b000:	str	w1, [x2, #240]
  40b004:	str	q0, [sp, #48]
  40b008:	stp	w4, w3, [sp, #88]
  40b00c:	bl	402b10 <gettext@plt>
  40b010:	mov	x21, x0
  40b014:	bl	402aa0 <__errno_location@plt>
  40b018:	mov	x1, x0
  40b01c:	add	x4, sp, #0x40
  40b020:	ldr	x0, [x19, #920]
  40b024:	mov	w2, #0x6                   	// #6
  40b028:	ldr	w3, [x1]
  40b02c:	add	x1, sp, #0x60
  40b030:	ldr	q0, [sp, #48]
  40b034:	stp	x21, x4, [sp, #96]
  40b038:	str	w3, [sp, #112]
  40b03c:	str	q0, [sp, #128]
  40b040:	stp	w2, w20, [sp, #152]
  40b044:	bl	4093e8 <nftw@plt+0x6868>
  40b048:	ldr	x2, [x19, #920]
  40b04c:	mov	w20, w0
  40b050:	ldr	w1, [x2, #240]
  40b054:	sub	w1, w1, #0x1
  40b058:	str	w1, [x2, #240]
  40b05c:	cbnz	w1, 40b084 <nftw@plt+0x8504>
  40b060:	ldr	w0, [x2, #244]
  40b064:	cmp	w0, #0x0
  40b068:	b.le	40b080 <nftw@plt+0x8500>
  40b06c:	ldr	x1, [x2, #256]
  40b070:	cbz	x1, 40b080 <nftw@plt+0x8500>
  40b074:	mov	x0, x2
  40b078:	blr	x1
  40b07c:	ldr	x2, [x19, #920]
  40b080:	str	wzr, [x2, #244]
  40b084:	mov	w0, w20
  40b088:	ldp	x19, x20, [sp, #16]
  40b08c:	ldr	x21, [sp, #32]
  40b090:	ldp	x29, x30, [sp], #336
  40b094:	ret
  40b098:	adrp	x2, 473000 <_obstack_memory_used@@Base+0x11bb8>
  40b09c:	adrp	x0, 473000 <_obstack_memory_used@@Base+0x11bb8>
  40b0a0:	add	x2, x2, #0x888
  40b0a4:	add	x0, x0, #0x6e0
  40b0a8:	mov	w1, #0x518                 	// #1304
  40b0ac:	bl	402bf0 <nftw@plt+0x70>
  40b0b0:	stp	x29, x30, [sp, #-320]!
  40b0b4:	mov	x8, x0
  40b0b8:	mov	x29, sp
  40b0bc:	stp	x19, x20, [sp, #16]
  40b0c0:	str	q0, [sp, #144]
  40b0c4:	str	q1, [sp, #160]
  40b0c8:	str	q2, [sp, #176]
  40b0cc:	str	q3, [sp, #192]
  40b0d0:	str	q4, [sp, #208]
  40b0d4:	str	q5, [sp, #224]
  40b0d8:	str	q6, [sp, #240]
  40b0dc:	str	q7, [sp, #256]
  40b0e0:	stp	x2, x3, [sp, #272]
  40b0e4:	stp	x4, x5, [sp, #288]
  40b0e8:	stp	x6, x7, [sp, #304]
  40b0ec:	cbz	x0, 40b1a8 <nftw@plt+0x8628>
  40b0f0:	adrp	x19, 4a4000 <_obstack_memory_used@@Base+0x42bb8>
  40b0f4:	mov	x0, x1
  40b0f8:	add	x1, sp, #0x140
  40b0fc:	stp	x1, x1, [sp, #48]
  40b100:	dup	v0.2d, x8
  40b104:	ldr	x2, [x19, #920]
  40b108:	add	x5, sp, #0x110
  40b10c:	mov	w4, #0xffffffd0            	// #-48
  40b110:	mov	w3, #0xffffff80            	// #-128
  40b114:	str	q0, [sp, #32]
  40b118:	ldr	w1, [x2, #240]
  40b11c:	str	x5, [sp, #64]
  40b120:	add	w1, w1, #0x1
  40b124:	str	w1, [x2, #240]
  40b128:	stp	w4, w3, [sp, #72]
  40b12c:	bl	402b10 <gettext@plt>
  40b130:	mov	x20, x0
  40b134:	bl	402aa0 <__errno_location@plt>
  40b138:	mov	x1, x0
  40b13c:	ldr	x0, [x19, #920]
  40b140:	add	x4, sp, #0x30
  40b144:	ldr	w3, [x1]
  40b148:	mov	x2, #0x4                   	// #4
  40b14c:	ldr	q0, [sp, #32]
  40b150:	add	x1, sp, #0x50
  40b154:	stp	x20, x4, [sp, #80]
  40b158:	str	w3, [sp, #96]
  40b15c:	str	q0, [sp, #112]
  40b160:	str	x2, [sp, #136]
  40b164:	bl	4093e8 <nftw@plt+0x6868>
  40b168:	ldr	x0, [x19, #920]
  40b16c:	ldr	w1, [x0, #240]
  40b170:	sub	w1, w1, #0x1
  40b174:	str	w1, [x0, #240]
  40b178:	cbnz	w1, 40b19c <nftw@plt+0x861c>
  40b17c:	ldr	w1, [x0, #244]
  40b180:	cmp	w1, #0x0
  40b184:	b.le	40b198 <nftw@plt+0x8618>
  40b188:	ldr	x1, [x0, #256]
  40b18c:	cbz	x1, 40b198 <nftw@plt+0x8618>
  40b190:	blr	x1
  40b194:	ldr	x0, [x19, #920]
  40b198:	str	wzr, [x0, #244]
  40b19c:	ldp	x19, x20, [sp, #16]
  40b1a0:	ldp	x29, x30, [sp], #320
  40b1a4:	ret
  40b1a8:	adrp	x2, 473000 <_obstack_memory_used@@Base+0x11bb8>
  40b1ac:	adrp	x0, 473000 <_obstack_memory_used@@Base+0x11bb8>
  40b1b0:	add	x2, x2, #0x898
  40b1b4:	add	x0, x0, #0x6e0
  40b1b8:	mov	w1, #0x5be                 	// #1470
  40b1bc:	bl	402bf0 <nftw@plt+0x70>
  40b1c0:	stp	x29, x30, [sp, #-320]!
  40b1c4:	mov	x8, x0
  40b1c8:	mov	x29, sp
  40b1cc:	stp	x19, x20, [sp, #16]
  40b1d0:	str	q0, [sp, #144]
  40b1d4:	str	q1, [sp, #160]
  40b1d8:	str	q2, [sp, #176]
  40b1dc:	str	q3, [sp, #192]
  40b1e0:	str	q4, [sp, #208]
  40b1e4:	str	q5, [sp, #224]
  40b1e8:	str	q6, [sp, #240]
  40b1ec:	str	q7, [sp, #256]
  40b1f0:	stp	x2, x3, [sp, #272]
  40b1f4:	stp	x4, x5, [sp, #288]
  40b1f8:	stp	x6, x7, [sp, #304]
  40b1fc:	cbz	x0, 40b2b8 <nftw@plt+0x8738>
  40b200:	adrp	x19, 4a4000 <_obstack_memory_used@@Base+0x42bb8>
  40b204:	mov	x0, x1
  40b208:	add	x1, sp, #0x140
  40b20c:	stp	x1, x1, [sp, #48]
  40b210:	dup	v0.2d, x8
  40b214:	ldr	x2, [x19, #920]
  40b218:	add	x5, sp, #0x110
  40b21c:	mov	w4, #0xffffffd0            	// #-48
  40b220:	mov	w3, #0xffffff80            	// #-128
  40b224:	str	q0, [sp, #32]
  40b228:	ldr	w1, [x2, #240]
  40b22c:	str	x5, [sp, #64]
  40b230:	add	w1, w1, #0x1
  40b234:	str	w1, [x2, #240]
  40b238:	stp	w4, w3, [sp, #72]
  40b23c:	bl	402b10 <gettext@plt>
  40b240:	mov	x20, x0
  40b244:	bl	402aa0 <__errno_location@plt>
  40b248:	mov	x1, x0
  40b24c:	ldr	x0, [x19, #920]
  40b250:	add	x4, sp, #0x30
  40b254:	ldr	w3, [x1]
  40b258:	mov	x2, #0x8                   	// #8
  40b25c:	ldr	q0, [sp, #32]
  40b260:	add	x1, sp, #0x50
  40b264:	stp	x20, x4, [sp, #80]
  40b268:	str	w3, [sp, #96]
  40b26c:	str	q0, [sp, #112]
  40b270:	str	x2, [sp, #136]
  40b274:	bl	4093e8 <nftw@plt+0x6868>
  40b278:	ldr	x0, [x19, #920]
  40b27c:	ldr	w1, [x0, #240]
  40b280:	sub	w1, w1, #0x1
  40b284:	str	w1, [x0, #240]
  40b288:	cbnz	w1, 40b2ac <nftw@plt+0x872c>
  40b28c:	ldr	w1, [x0, #244]
  40b290:	cmp	w1, #0x0
  40b294:	b.le	40b2a8 <nftw@plt+0x8728>
  40b298:	ldr	x1, [x0, #256]
  40b29c:	cbz	x1, 40b2a8 <nftw@plt+0x8728>
  40b2a0:	blr	x1
  40b2a4:	ldr	x0, [x19, #920]
  40b2a8:	str	wzr, [x0, #244]
  40b2ac:	ldp	x19, x20, [sp, #16]
  40b2b0:	ldp	x29, x30, [sp], #320
  40b2b4:	ret
  40b2b8:	adrp	x2, 473000 <_obstack_memory_used@@Base+0x11bb8>
  40b2bc:	adrp	x0, 473000 <_obstack_memory_used@@Base+0x11bb8>
  40b2c0:	add	x2, x2, #0x8a8
  40b2c4:	add	x0, x0, #0x6e0
  40b2c8:	mov	w1, #0x4dc                 	// #1244
  40b2cc:	bl	402bf0 <nftw@plt+0x70>
  40b2d0:	stp	x29, x30, [sp, #-496]!
  40b2d4:	adrp	x12, 4a5000 <__environ@@GLIBC_2.17+0xa68>
  40b2d8:	mov	w13, w0
  40b2dc:	mov	x29, sp
  40b2e0:	stp	x19, x20, [sp, #16]
  40b2e4:	adrp	x19, 4a4000 <_obstack_memory_used@@Base+0x42bb8>
  40b2e8:	add	x11, sp, #0x1c0
  40b2ec:	ldr	x8, [x19, #920]
  40b2f0:	str	q0, [sp, #320]
  40b2f4:	mov	w10, #0xffffffd0            	// #-48
  40b2f8:	str	q1, [sp, #336]
  40b2fc:	mov	w9, #0xffffff80            	// #-128
  40b300:	add	x20, sp, #0x98
  40b304:	str	q2, [sp, #352]
  40b308:	mov	x0, x20
  40b30c:	str	q3, [sp, #368]
  40b310:	str	q4, [sp, #384]
  40b314:	str	q5, [sp, #400]
  40b318:	str	q6, [sp, #416]
  40b31c:	str	q7, [sp, #432]
  40b320:	stp	x2, x3, [sp, #448]
  40b324:	mov	w2, w13
  40b328:	mov	x3, #0x0                   	// #0
  40b32c:	stp	x4, x5, [sp, #464]
  40b330:	add	x4, sp, #0x1f0
  40b334:	add	x5, sp, #0x1f0
  40b338:	stp	x6, x7, [sp, #480]
  40b33c:	stp	x4, x5, [sp, #56]
  40b340:	ldr	w4, [x8, #240]
  40b344:	stp	x21, x22, [sp, #32]
  40b348:	mov	x21, x1
  40b34c:	add	w4, w4, #0x1
  40b350:	ldr	x1, [x12, #2336]
  40b354:	str	w4, [x8, #240]
  40b358:	str	x11, [sp, #72]
  40b35c:	stp	w10, w9, [sp, #80]
  40b360:	bl	437b48 <nftw@plt+0x34fc8>
  40b364:	ldr	x2, [x19, #920]
  40b368:	mov	w1, #0x4                   	// #4
  40b36c:	mov	x0, x21
  40b370:	mov	w21, #0x6                   	// #6
  40b374:	ldrb	w2, [x2, #123]
  40b378:	cmp	w2, #0x0
  40b37c:	csel	w21, w21, w1, ne  // ne = any
  40b380:	bl	402b10 <gettext@plt>
  40b384:	mov	x22, x0
  40b388:	bl	402aa0 <__errno_location@plt>
  40b38c:	ldr	w3, [x0]
  40b390:	ldr	x2, [x19, #920]
  40b394:	add	x4, sp, #0x38
  40b398:	add	x1, sp, #0x58
  40b39c:	stp	x22, x4, [sp, #88]
  40b3a0:	mov	x0, x2
  40b3a4:	ldr	w2, [x2, #124]
  40b3a8:	str	w3, [sp, #104]
  40b3ac:	stp	x20, x20, [sp, #120]
  40b3b0:	stp	w21, w2, [sp, #144]
  40b3b4:	bl	4093e8 <nftw@plt+0x6868>
  40b3b8:	mov	w1, w0
  40b3bc:	mov	x0, x20
  40b3c0:	mov	w20, w1
  40b3c4:	bl	437b88 <nftw@plt+0x35008>
  40b3c8:	ldr	x0, [x19, #920]
  40b3cc:	ldr	w1, [x0, #240]
  40b3d0:	sub	w1, w1, #0x1
  40b3d4:	str	w1, [x0, #240]
  40b3d8:	cbnz	w1, 40b3fc <nftw@plt+0x887c>
  40b3dc:	ldr	w1, [x0, #244]
  40b3e0:	cmp	w1, #0x0
  40b3e4:	b.le	40b3f8 <nftw@plt+0x8878>
  40b3e8:	ldr	x1, [x0, #256]
  40b3ec:	cbz	x1, 40b3f8 <nftw@plt+0x8878>
  40b3f0:	blr	x1
  40b3f4:	ldr	x0, [x19, #920]
  40b3f8:	str	wzr, [x0, #244]
  40b3fc:	mov	w0, w20
  40b400:	ldp	x19, x20, [sp, #16]
  40b404:	ldp	x21, x22, [sp, #32]
  40b408:	ldp	x29, x30, [sp], #496
  40b40c:	ret
  40b410:	stp	x29, x30, [sp, #-336]!
  40b414:	mov	x8, x0
  40b418:	mov	x29, sp
  40b41c:	stp	x19, x20, [sp, #16]
  40b420:	str	x21, [sp, #32]
  40b424:	str	q0, [sp, #160]
  40b428:	str	q1, [sp, #176]
  40b42c:	str	q2, [sp, #192]
  40b430:	str	q3, [sp, #208]
  40b434:	str	q4, [sp, #224]
  40b438:	str	q5, [sp, #240]
  40b43c:	str	q6, [sp, #256]
  40b440:	str	q7, [sp, #272]
  40b444:	stp	x2, x3, [sp, #288]
  40b448:	stp	x4, x5, [sp, #304]
  40b44c:	stp	x6, x7, [sp, #320]
  40b450:	cbz	x0, 40b534 <nftw@plt+0x89b4>
  40b454:	adrp	x19, 4a4000 <_obstack_memory_used@@Base+0x42bb8>
  40b458:	mov	x0, x1
  40b45c:	add	x2, sp, #0x150
  40b460:	dup	v0.2d, x8
  40b464:	ldr	x1, [x19, #920]
  40b468:	add	x5, sp, #0x120
  40b46c:	mov	w6, #0x4                   	// #4
  40b470:	mov	w4, #0xffffffd0            	// #-48
  40b474:	mov	w3, #0xffffff80            	// #-128
  40b478:	mov	w20, #0x6                   	// #6
  40b47c:	ldrb	w7, [x1, #123]
  40b480:	str	q0, [sp, #48]
  40b484:	cmp	w7, #0x0
  40b488:	add	x7, sp, #0x150
  40b48c:	stp	x2, x7, [sp, #64]
  40b490:	ldr	w2, [x1, #240]
  40b494:	csel	w20, w20, w6, ne  // ne = any
  40b498:	str	x5, [sp, #80]
  40b49c:	add	w2, w2, #0x1
  40b4a0:	str	w2, [x1, #240]
  40b4a4:	stp	w4, w3, [sp, #88]
  40b4a8:	bl	402b10 <gettext@plt>
  40b4ac:	mov	x21, x0
  40b4b0:	bl	402aa0 <__errno_location@plt>
  40b4b4:	ldr	w3, [x0]
  40b4b8:	ldr	x2, [x19, #920]
  40b4bc:	add	x4, sp, #0x40
  40b4c0:	ldr	q0, [sp, #48]
  40b4c4:	mov	x0, x2
  40b4c8:	ldr	w2, [x2, #124]
  40b4cc:	add	x1, sp, #0x60
  40b4d0:	stp	x21, x4, [sp, #96]
  40b4d4:	str	w3, [sp, #112]
  40b4d8:	str	q0, [sp, #128]
  40b4dc:	stp	w20, w2, [sp, #152]
  40b4e0:	bl	4093e8 <nftw@plt+0x6868>
  40b4e4:	ldr	x2, [x19, #920]
  40b4e8:	mov	w20, w0
  40b4ec:	ldr	w1, [x2, #240]
  40b4f0:	sub	w1, w1, #0x1
  40b4f4:	str	w1, [x2, #240]
  40b4f8:	cbnz	w1, 40b520 <nftw@plt+0x89a0>
  40b4fc:	ldr	w0, [x2, #244]
  40b500:	cmp	w0, #0x0
  40b504:	b.le	40b51c <nftw@plt+0x899c>
  40b508:	ldr	x1, [x2, #256]
  40b50c:	cbz	x1, 40b51c <nftw@plt+0x899c>
  40b510:	mov	x0, x2
  40b514:	blr	x1
  40b518:	ldr	x2, [x19, #920]
  40b51c:	str	wzr, [x2, #244]
  40b520:	mov	w0, w20
  40b524:	ldp	x19, x20, [sp, #16]
  40b528:	ldr	x21, [sp, #32]
  40b52c:	ldp	x29, x30, [sp], #336
  40b530:	ret
  40b534:	adrp	x2, 473000 <_obstack_memory_used@@Base+0x11bb8>
  40b538:	adrp	x0, 473000 <_obstack_memory_used@@Base+0x11bb8>
  40b53c:	add	x2, x2, #0x8b0
  40b540:	add	x0, x0, #0x6e0
  40b544:	mov	w1, #0x587                 	// #1415
  40b548:	bl	402bf0 <nftw@plt+0x70>
  40b54c:	nop
  40b550:	stp	x29, x30, [sp, #-304]!
  40b554:	adrp	x6, 4a5000 <__environ@@GLIBC_2.17+0xa68>
  40b558:	mov	w5, w1
  40b55c:	mov	x29, sp
  40b560:	ldr	x1, [x6, #2336]
  40b564:	stp	x19, x20, [sp, #16]
  40b568:	add	x19, sp, #0x88
  40b56c:	mov	w20, w0
  40b570:	mov	x0, x19
  40b574:	stp	x23, x24, [sp, #48]
  40b578:	mov	w24, w2
  40b57c:	mov	w2, w5
  40b580:	stp	x21, x22, [sp, #32]
  40b584:	mov	x22, x3
  40b588:	mov	x3, #0x0                   	// #0
  40b58c:	mov	x23, x4
  40b590:	bl	437b48 <nftw@plt+0x34fc8>
  40b594:	bl	402aa0 <__errno_location@plt>
  40b598:	mov	x21, x0
  40b59c:	cmp	w20, #0xb
  40b5a0:	b.ne	40b61c <nftw@plt+0x8a9c>  // b.any
  40b5a4:	adrp	x24, 4a4000 <_obstack_memory_used@@Base+0x42bb8>
  40b5a8:	mov	w1, #0x4                   	// #4
  40b5ac:	mov	x0, x22
  40b5b0:	mov	w20, #0x6                   	// #6
  40b5b4:	ldr	x2, [x24, #920]
  40b5b8:	ldrb	w2, [x2, #123]
  40b5bc:	cmp	w2, #0x0
  40b5c0:	csel	w20, w20, w1, ne  // ne = any
  40b5c4:	bl	402b10 <gettext@plt>
  40b5c8:	mov	x1, x0
  40b5cc:	ldr	x0, [x24, #920]
  40b5d0:	stp	x1, x23, [sp, #72]
  40b5d4:	ldr	w2, [x21]
  40b5d8:	str	w2, [sp, #88]
  40b5dc:	ldr	w1, [x0, #124]
  40b5e0:	stp	x19, x19, [sp, #104]
  40b5e4:	str	w20, [sp, #128]
  40b5e8:	str	w1, [sp, #132]
  40b5ec:	add	x1, sp, #0x48
  40b5f0:	bl	4093e8 <nftw@plt+0x6868>
  40b5f4:	mov	w1, w0
  40b5f8:	mov	x0, x19
  40b5fc:	mov	w19, w1
  40b600:	bl	437b88 <nftw@plt+0x35008>
  40b604:	mov	w0, w19
  40b608:	ldp	x19, x20, [sp, #16]
  40b60c:	ldp	x21, x22, [sp, #32]
  40b610:	ldp	x23, x24, [sp, #48]
  40b614:	ldp	x29, x30, [sp], #304
  40b618:	ret
  40b61c:	mov	x0, x22
  40b620:	bl	402b10 <gettext@plt>
  40b624:	ldr	w1, [x21]
  40b628:	stp	x0, x23, [sp, #72]
  40b62c:	sub	w0, w20, #0x6
  40b630:	tst	w0, #0xfffffffb
  40b634:	str	w1, [sp, #88]
  40b638:	adrp	x0, 4a4000 <_obstack_memory_used@@Base+0x42bb8>
  40b63c:	stp	x19, x19, [sp, #104]
  40b640:	stp	w20, wzr, [sp, #128]
  40b644:	b.ne	40b64c <nftw@plt+0x8acc>  // b.any
  40b648:	str	w24, [sp, #132]
  40b64c:	ldr	x0, [x0, #920]
  40b650:	b	40b5ec <nftw@plt+0x8a6c>
  40b654:	nop
  40b658:	stp	x29, x30, [sp, #-496]!
  40b65c:	adrp	x12, 4a5000 <__environ@@GLIBC_2.17+0xa68>
  40b660:	mov	w10, #0xffffffe0            	// #-32
  40b664:	mov	x29, sp
  40b668:	stp	x21, x22, [sp, #32]
  40b66c:	adrp	x21, 4a4000 <_obstack_memory_used@@Base+0x42bb8>
  40b670:	add	x11, sp, #0x1d0
  40b674:	ldr	x8, [x21, #920]
  40b678:	str	q0, [sp, #336]
  40b67c:	mov	w9, #0xffffff80            	// #-128
  40b680:	str	q1, [sp, #352]
  40b684:	str	q2, [sp, #368]
  40b688:	str	q3, [sp, #384]
  40b68c:	str	q4, [sp, #400]
  40b690:	str	q5, [sp, #416]
  40b694:	str	q6, [sp, #432]
  40b698:	str	q7, [sp, #448]
  40b69c:	stp	x4, x5, [sp, #464]
  40b6a0:	add	x4, sp, #0x1f0
  40b6a4:	add	x5, sp, #0x1f0
  40b6a8:	stp	x6, x7, [sp, #480]
  40b6ac:	stp	x4, x5, [sp, #72]
  40b6b0:	ldr	w4, [x8, #240]
  40b6b4:	stp	x23, x24, [sp, #48]
  40b6b8:	mov	w24, w2
  40b6bc:	mov	w2, w1
  40b6c0:	ldr	x1, [x12, #2336]
  40b6c4:	add	w4, w4, #0x1
  40b6c8:	stp	x19, x20, [sp, #16]
  40b6cc:	add	x19, sp, #0xa8
  40b6d0:	mov	w20, w0
  40b6d4:	mov	x0, x19
  40b6d8:	str	w4, [x8, #240]
  40b6dc:	mov	x23, x3
  40b6e0:	mov	x3, #0x0                   	// #0
  40b6e4:	str	x11, [sp, #88]
  40b6e8:	stp	w10, w9, [sp, #96]
  40b6ec:	bl	437b48 <nftw@plt+0x34fc8>
  40b6f0:	bl	402aa0 <__errno_location@plt>
  40b6f4:	mov	x22, x0
  40b6f8:	cmp	w20, #0xb
  40b6fc:	b.ne	40b7a8 <nftw@plt+0x8c28>  // b.any
  40b700:	ldr	x2, [x21, #920]
  40b704:	mov	w1, #0x4                   	// #4
  40b708:	mov	x0, x23
  40b70c:	mov	w20, #0x6                   	// #6
  40b710:	ldrb	w2, [x2, #123]
  40b714:	cmp	w2, #0x0
  40b718:	csel	w20, w20, w1, ne  // ne = any
  40b71c:	bl	402b10 <gettext@plt>
  40b720:	mov	x1, x0
  40b724:	ldr	x0, [x21, #920]
  40b728:	add	x3, sp, #0x48
  40b72c:	ldr	w2, [x22]
  40b730:	stp	x1, x3, [sp, #104]
  40b734:	ldr	w1, [x0, #124]
  40b738:	str	w2, [sp, #120]
  40b73c:	stp	x19, x19, [sp, #136]
  40b740:	str	w20, [sp, #160]
  40b744:	str	w1, [sp, #164]
  40b748:	add	x1, sp, #0x68
  40b74c:	bl	4093e8 <nftw@plt+0x6868>
  40b750:	mov	w20, w0
  40b754:	mov	x0, x19
  40b758:	bl	437b88 <nftw@plt+0x35008>
  40b75c:	ldr	x0, [x21, #920]
  40b760:	ldr	w1, [x0, #240]
  40b764:	sub	w1, w1, #0x1
  40b768:	str	w1, [x0, #240]
  40b76c:	cbnz	w1, 40b790 <nftw@plt+0x8c10>
  40b770:	ldr	w1, [x0, #244]
  40b774:	cmp	w1, #0x0
  40b778:	b.le	40b78c <nftw@plt+0x8c0c>
  40b77c:	ldr	x1, [x0, #256]
  40b780:	cbz	x1, 40b78c <nftw@plt+0x8c0c>
  40b784:	blr	x1
  40b788:	ldr	x0, [x21, #920]
  40b78c:	str	wzr, [x0, #244]
  40b790:	mov	w0, w20
  40b794:	ldp	x19, x20, [sp, #16]
  40b798:	ldp	x21, x22, [sp, #32]
  40b79c:	ldp	x23, x24, [sp, #48]
  40b7a0:	ldp	x29, x30, [sp], #496
  40b7a4:	ret
  40b7a8:	mov	x0, x23
  40b7ac:	bl	402b10 <gettext@plt>
  40b7b0:	ldr	w1, [x22]
  40b7b4:	add	x2, sp, #0x48
  40b7b8:	stp	x0, x2, [sp, #104]
  40b7bc:	sub	w0, w20, #0x6
  40b7c0:	tst	w0, #0xfffffffb
  40b7c4:	str	w1, [sp, #120]
  40b7c8:	stp	x19, x19, [sp, #136]
  40b7cc:	stp	w20, wzr, [sp, #160]
  40b7d0:	ldr	x0, [x21, #920]
  40b7d4:	b.ne	40b748 <nftw@plt+0x8bc8>  // b.any
  40b7d8:	str	w24, [sp, #164]
  40b7dc:	b	40b748 <nftw@plt+0x8bc8>
  40b7e0:	stp	x29, x30, [sp, #-320]!
  40b7e4:	mov	w10, #0xffffffe0            	// #-32
  40b7e8:	mov	w9, #0xffffff80            	// #-128
  40b7ec:	mov	x29, sp
  40b7f0:	stp	x19, x20, [sp, #16]
  40b7f4:	adrp	x20, 4a4000 <_obstack_memory_used@@Base+0x42bb8>
  40b7f8:	add	x11, sp, #0x120
  40b7fc:	ldr	x8, [x20, #920]
  40b800:	str	q0, [sp, #160]
  40b804:	mov	w19, w0
  40b808:	str	q1, [sp, #176]
  40b80c:	cmp	w0, #0xb
  40b810:	mov	x0, x3
  40b814:	str	q2, [sp, #192]
  40b818:	str	q3, [sp, #208]
  40b81c:	str	q4, [sp, #224]
  40b820:	str	q5, [sp, #240]
  40b824:	str	q6, [sp, #256]
  40b828:	str	q7, [sp, #272]
  40b82c:	stp	x4, x5, [sp, #288]
  40b830:	stp	x6, x7, [sp, #304]
  40b834:	ldr	w4, [x8, #240]
  40b838:	stp	x21, x22, [sp, #32]
  40b83c:	mov	w21, w2
  40b840:	add	w4, w4, #0x1
  40b844:	add	x2, sp, #0x140
  40b848:	stp	x2, x2, [sp, #64]
  40b84c:	str	x11, [sp, #80]
  40b850:	stp	w10, w9, [sp, #88]
  40b854:	str	w4, [x8, #240]
  40b858:	b.ne	40b90c <nftw@plt+0x8d8c>  // b.any
  40b85c:	ldrb	w3, [x8, #123]
  40b860:	mov	w19, #0x6                   	// #6
  40b864:	mov	w2, #0x4                   	// #4
  40b868:	cmp	w3, #0x0
  40b86c:	csel	w19, w19, w2, ne  // ne = any
  40b870:	cbz	x1, 40b958 <nftw@plt+0x8dd8>
  40b874:	dup	v0.2d, x1
  40b878:	str	q0, [sp, #48]
  40b87c:	bl	402b10 <gettext@plt>
  40b880:	mov	x21, x0
  40b884:	bl	402aa0 <__errno_location@plt>
  40b888:	mov	x2, x0
  40b88c:	ldr	x0, [x20, #920]
  40b890:	add	x1, sp, #0x40
  40b894:	ldr	q0, [sp, #48]
  40b898:	stp	x21, x1, [sp, #96]
  40b89c:	ldr	w2, [x2]
  40b8a0:	ldr	w1, [x0, #124]
  40b8a4:	str	w2, [sp, #112]
  40b8a8:	str	w19, [sp, #152]
  40b8ac:	str	w1, [sp, #156]
  40b8b0:	str	q0, [sp, #128]
  40b8b4:	add	x1, sp, #0x60
  40b8b8:	bl	4093e8 <nftw@plt+0x6868>
  40b8bc:	mov	w19, w0
  40b8c0:	ldr	x2, [x20, #920]
  40b8c4:	ldr	w1, [x2, #240]
  40b8c8:	sub	w1, w1, #0x1
  40b8cc:	str	w1, [x2, #240]
  40b8d0:	cbnz	w1, 40b8f8 <nftw@plt+0x8d78>
  40b8d4:	ldr	w0, [x2, #244]
  40b8d8:	cmp	w0, #0x0
  40b8dc:	b.le	40b8f4 <nftw@plt+0x8d74>
  40b8e0:	ldr	x1, [x2, #256]
  40b8e4:	cbz	x1, 40b8f4 <nftw@plt+0x8d74>
  40b8e8:	mov	x0, x2
  40b8ec:	blr	x1
  40b8f0:	ldr	x2, [x20, #920]
  40b8f4:	str	wzr, [x2, #244]
  40b8f8:	mov	w0, w19
  40b8fc:	ldp	x19, x20, [sp, #16]
  40b900:	ldp	x21, x22, [sp, #32]
  40b904:	ldp	x29, x30, [sp], #320
  40b908:	ret
  40b90c:	cbz	x1, 40b958 <nftw@plt+0x8dd8>
  40b910:	dup	v0.2d, x1
  40b914:	str	q0, [sp, #48]
  40b918:	bl	402b10 <gettext@plt>
  40b91c:	mov	x22, x0
  40b920:	bl	402aa0 <__errno_location@plt>
  40b924:	ldr	w0, [x0]
  40b928:	ldr	q0, [sp, #48]
  40b92c:	add	x2, sp, #0x40
  40b930:	stp	x22, x2, [sp, #96]
  40b934:	sub	w1, w19, #0x6
  40b938:	tst	w1, #0xfffffffb
  40b93c:	str	w0, [sp, #112]
  40b940:	stp	w19, wzr, [sp, #152]
  40b944:	str	q0, [sp, #128]
  40b948:	ldr	x0, [x20, #920]
  40b94c:	b.ne	40b8b4 <nftw@plt+0x8d34>  // b.any
  40b950:	str	w21, [sp, #156]
  40b954:	b	40b8b4 <nftw@plt+0x8d34>
  40b958:	adrp	x2, 473000 <_obstack_memory_used@@Base+0x11bb8>
  40b95c:	adrp	x0, 473000 <_obstack_memory_used@@Base+0x11bb8>
  40b960:	add	x2, x2, #0x858
  40b964:	add	x0, x0, #0x6e0
  40b968:	mov	w1, #0x123                 	// #291
  40b96c:	bl	402bf0 <nftw@plt+0x70>
  40b970:	sub	sp, sp, #0x200
  40b974:	adrp	x13, 4a5000 <__environ@@GLIBC_2.17+0xa68>
  40b978:	adrp	x12, 4a5000 <__environ@@GLIBC_2.17+0xa68>
  40b97c:	add	x11, sp, #0x1c0
  40b980:	mov	w10, #0xffffffc8            	// #-56
  40b984:	mov	w9, #0xffffff80            	// #-128
  40b988:	stp	x29, x30, [sp]
  40b98c:	mov	x29, sp
  40b990:	str	x21, [sp, #32]
  40b994:	adrp	x21, 4a4000 <_obstack_memory_used@@Base+0x42bb8>
  40b998:	str	q0, [sp, #320]
  40b99c:	ldr	x8, [x21, #920]
  40b9a0:	str	q1, [sp, #336]
  40b9a4:	str	q2, [sp, #352]
  40b9a8:	str	q3, [sp, #368]
  40b9ac:	str	q4, [sp, #384]
  40b9b0:	str	q5, [sp, #400]
  40b9b4:	str	q6, [sp, #416]
  40b9b8:	str	q7, [sp, #432]
  40b9bc:	stp	x1, x2, [sp, #456]
  40b9c0:	ldr	w2, [x13, #2360]
  40b9c4:	stp	x3, x4, [sp, #472]
  40b9c8:	add	x4, sp, #0x200
  40b9cc:	mov	x3, #0x0                   	// #0
  40b9d0:	stp	x5, x6, [sp, #488]
  40b9d4:	add	x5, sp, #0x200
  40b9d8:	str	x7, [sp, #504]
  40b9dc:	stp	x4, x5, [sp, #56]
  40b9e0:	ldr	w4, [x8, #240]
  40b9e4:	ldr	x1, [x12, #2336]
  40b9e8:	add	w4, w4, #0x1
  40b9ec:	stp	x19, x20, [sp, #16]
  40b9f0:	add	x19, sp, #0x98
  40b9f4:	mov	x20, x0
  40b9f8:	str	w4, [x8, #240]
  40b9fc:	mov	x0, x19
  40ba00:	str	x11, [sp, #72]
  40ba04:	stp	w10, w9, [sp, #80]
  40ba08:	bl	437b48 <nftw@plt+0x34fc8>
  40ba0c:	mov	x0, x20
  40ba10:	bl	402b10 <gettext@plt>
  40ba14:	mov	x20, x0
  40ba18:	bl	402aa0 <__errno_location@plt>
  40ba1c:	mov	x1, x0
  40ba20:	add	x4, sp, #0x38
  40ba24:	ldr	x0, [x21, #920]
  40ba28:	mov	x2, #0xd                   	// #13
  40ba2c:	ldr	w3, [x1]
  40ba30:	add	x1, sp, #0x58
  40ba34:	stp	x20, x4, [sp, #88]
  40ba38:	str	w3, [sp, #104]
  40ba3c:	stp	x19, x19, [sp, #120]
  40ba40:	str	x2, [sp, #144]
  40ba44:	bl	4093e8 <nftw@plt+0x6868>
  40ba48:	adrp	x2, 473000 <_obstack_memory_used@@Base+0x11bb8>
  40ba4c:	adrp	x0, 473000 <_obstack_memory_used@@Base+0x11bb8>
  40ba50:	add	x2, x2, #0x8c0
  40ba54:	add	x0, x0, #0x6e0
  40ba58:	mov	w1, #0x617                 	// #1559
  40ba5c:	bl	402bf0 <nftw@plt+0x70>
  40ba60:	stp	x29, x30, [sp, #-496]!
  40ba64:	adrp	x12, 4a5000 <__environ@@GLIBC_2.17+0xa68>
  40ba68:	mov	w13, w0
  40ba6c:	mov	x29, sp
  40ba70:	str	x21, [sp, #32]
  40ba74:	adrp	x21, 4a4000 <_obstack_memory_used@@Base+0x42bb8>
  40ba78:	str	q0, [sp, #320]
  40ba7c:	add	x11, sp, #0x1c0
  40ba80:	mov	w10, #0xffffffd0            	// #-48
  40ba84:	ldr	x8, [x21, #920]
  40ba88:	str	q1, [sp, #336]
  40ba8c:	mov	w9, #0xffffff80            	// #-128
  40ba90:	str	q2, [sp, #352]
  40ba94:	str	q3, [sp, #368]
  40ba98:	str	q4, [sp, #384]
  40ba9c:	str	q5, [sp, #400]
  40baa0:	str	q6, [sp, #416]
  40baa4:	str	q7, [sp, #432]
  40baa8:	stp	x2, x3, [sp, #448]
  40baac:	mov	w2, w13
  40bab0:	mov	x3, #0x0                   	// #0
  40bab4:	stp	x4, x5, [sp, #464]
  40bab8:	add	x4, sp, #0x1f0
  40babc:	add	x5, sp, #0x1f0
  40bac0:	stp	x6, x7, [sp, #480]
  40bac4:	stp	x4, x5, [sp, #56]
  40bac8:	ldr	w4, [x8, #240]
  40bacc:	stp	x19, x20, [sp, #16]
  40bad0:	mov	x20, x1
  40bad4:	add	w4, w4, #0x1
  40bad8:	ldr	x1, [x12, #2336]
  40badc:	str	w4, [x8, #240]
  40bae0:	add	x19, sp, #0x98
  40bae4:	str	x11, [sp, #72]
  40bae8:	mov	x0, x19
  40baec:	stp	w10, w9, [sp, #80]
  40baf0:	bl	437b48 <nftw@plt+0x34fc8>
  40baf4:	mov	x0, x20
  40baf8:	bl	402b10 <gettext@plt>
  40bafc:	mov	x20, x0
  40bb00:	bl	402aa0 <__errno_location@plt>
  40bb04:	mov	x1, x0
  40bb08:	add	x4, sp, #0x38
  40bb0c:	ldr	x0, [x21, #920]
  40bb10:	mov	x2, #0x2                   	// #2
  40bb14:	ldr	w3, [x1]
  40bb18:	add	x1, sp, #0x58
  40bb1c:	stp	x20, x4, [sp, #88]
  40bb20:	str	w3, [sp, #104]
  40bb24:	stp	x19, x19, [sp, #120]
  40bb28:	str	x2, [sp, #144]
  40bb2c:	bl	4093e8 <nftw@plt+0x6868>
  40bb30:	adrp	x2, 473000 <_obstack_memory_used@@Base+0x11bb8>
  40bb34:	adrp	x0, 473000 <_obstack_memory_used@@Base+0x11bb8>
  40bb38:	add	x2, x2, #0x8e0
  40bb3c:	add	x0, x0, #0x6e0
  40bb40:	mov	w1, #0x5f6                 	// #1526
  40bb44:	bl	402bf0 <nftw@plt+0x70>
  40bb48:	cbz	x1, 40bc50 <nftw@plt+0x90d0>
  40bb4c:	stp	x29, x30, [sp, #-48]!
  40bb50:	mov	x29, sp
  40bb54:	stp	x19, x20, [sp, #16]
  40bb58:	mov	x20, x1
  40bb5c:	ldr	x1, [x0, #16]
  40bb60:	stp	x21, x22, [sp, #32]
  40bb64:	mov	x22, x0
  40bb68:	cbz	x1, 40bb74 <nftw@plt+0x8ff4>
  40bb6c:	ldr	x0, [x20]
  40bb70:	blr	x1
  40bb74:	ldr	x1, [x22, #24]
  40bb78:	cbz	x1, 40bb84 <nftw@plt+0x9004>
  40bb7c:	ldr	x0, [x20, #8]
  40bb80:	blr	x1
  40bb84:	str	xzr, [x20, #32]
  40bb88:	mov	x19, x20
  40bb8c:	mov	x20, #0x0                   	// #0
  40bb90:	ldr	x21, [x19, #16]
  40bb94:	cbz	x21, 40bc18 <nftw@plt+0x9098>
  40bb98:	ldr	x1, [x22, #16]
  40bb9c:	cbz	x1, 40bbac <nftw@plt+0x902c>
  40bba0:	ldr	x0, [x21]
  40bba4:	blr	x1
  40bba8:	ldr	x21, [x19, #16]
  40bbac:	ldr	x1, [x22, #24]
  40bbb0:	cbz	x1, 40bbc0 <nftw@plt+0x9040>
  40bbb4:	ldr	x0, [x21, #8]
  40bbb8:	blr	x1
  40bbbc:	ldr	x21, [x19, #16]
  40bbc0:	str	x20, [x21, #32]
  40bbc4:	ldr	x20, [x19, #24]
  40bbc8:	cbz	x20, 40bc24 <nftw@plt+0x90a4>
  40bbcc:	ldr	x1, [x22, #16]
  40bbd0:	cbz	x1, 40bbe0 <nftw@plt+0x9060>
  40bbd4:	ldr	x0, [x20]
  40bbd8:	blr	x1
  40bbdc:	ldr	x20, [x19, #24]
  40bbe0:	ldr	x1, [x22, #24]
  40bbe4:	cbz	x1, 40bbf4 <nftw@plt+0x9074>
  40bbe8:	ldr	x0, [x20, #8]
  40bbec:	blr	x1
  40bbf0:	ldr	x20, [x19, #24]
  40bbf4:	str	x21, [x20, #32]
  40bbf8:	mov	x0, x19
  40bbfc:	mov	x1, #0x28                  	// #40
  40bc00:	ldr	x21, [x19, #32]
  40bc04:	bl	461b00 <_obstack_memory_used@@Base+0x6b8>
  40bc08:	cbz	x21, 40bc3c <nftw@plt+0x90bc>
  40bc0c:	mov	x19, x21
  40bc10:	ldr	x21, [x19, #16]
  40bc14:	cbnz	x21, 40bb98 <nftw@plt+0x9018>
  40bc18:	mov	x21, x20
  40bc1c:	ldr	x20, [x19, #24]
  40bc20:	cbnz	x20, 40bbcc <nftw@plt+0x904c>
  40bc24:	mov	x20, x21
  40bc28:	mov	x0, x19
  40bc2c:	ldr	x21, [x19, #32]
  40bc30:	mov	x1, #0x28                  	// #40
  40bc34:	bl	461b00 <_obstack_memory_used@@Base+0x6b8>
  40bc38:	cbnz	x21, 40bc0c <nftw@plt+0x908c>
  40bc3c:	cbnz	x20, 40bb88 <nftw@plt+0x9008>
  40bc40:	ldp	x19, x20, [sp, #16]
  40bc44:	ldp	x21, x22, [sp, #32]
  40bc48:	ldp	x29, x30, [sp], #48
  40bc4c:	ret
  40bc50:	ret
  40bc54:	nop
  40bc58:	stp	x29, x30, [sp, #-96]!
  40bc5c:	adrp	x0, 473000 <_obstack_memory_used@@Base+0x11bb8>
  40bc60:	add	x0, x0, #0xac8
  40bc64:	mov	x29, sp
  40bc68:	bl	402ab0 <getenv@plt>
  40bc6c:	cbz	x0, 40bdc4 <nftw@plt+0x9244>
  40bc70:	str	x27, [sp, #80]
  40bc74:	mov	x27, x0
  40bc78:	ldrb	w1, [x0]
  40bc7c:	mov	w0, #0x0                   	// #0
  40bc80:	cbz	w1, 40be08 <nftw@plt+0x9288>
  40bc84:	stp	x21, x22, [sp, #32]
  40bc88:	mov	x21, x27
  40bc8c:	stp	x25, x26, [sp, #64]
  40bc90:	adrp	x25, 4a4000 <_obstack_memory_used@@Base+0x42bb8>
  40bc94:	adrp	x26, 473000 <_obstack_memory_used@@Base+0x11bb8>
  40bc98:	add	x25, x25, #0x3a0
  40bc9c:	add	x26, x26, #0xad8
  40bca0:	stp	x19, x20, [sp, #16]
  40bca4:	mov	x20, #0x0                   	// #0
  40bca8:	stp	x23, x24, [sp, #48]
  40bcac:	mov	x24, #0x0                   	// #0
  40bcb0:	mov	x23, #0x0                   	// #0
  40bcb4:	nop
  40bcb8:	ldrb	w22, [x21]
  40bcbc:	cmp	w22, #0x3a
  40bcc0:	ccmp	w22, #0x0, #0x4, ne  // ne = any
  40bcc4:	b.eq	40bd00 <nftw@plt+0x9180>  // b.none
  40bcc8:	cmp	w22, #0x3d
  40bccc:	b.eq	40bdd0 <nftw@plt+0x9250>  // b.none
  40bcd0:	cbz	x23, 40bcec <nftw@plt+0x916c>
  40bcd4:	cmp	w22, #0x3b
  40bcd8:	b.eq	40bcec <nftw@plt+0x916c>  // b.none
  40bcdc:	sub	w22, w22, #0x30
  40bce0:	and	w22, w22, #0xff
  40bce4:	cmp	w22, #0x9
  40bce8:	b.hi	40bdb0 <nftw@plt+0x9230>  // b.pmore
  40bcec:	ldrb	w22, [x21, #1]
  40bcf0:	add	x21, x21, #0x1
  40bcf4:	cmp	w22, #0x3a
  40bcf8:	ccmp	w22, #0x0, #0x4, ne  // ne = any
  40bcfc:	b.ne	40bcc8 <nftw@plt+0x9148>  // b.any
  40bd00:	ldr	x0, [x25]
  40bd04:	cbz	x23, 40bdec <nftw@plt+0x926c>
  40bd08:	sub	x24, x21, x23
  40bd0c:	cbz	x0, 40be00 <nftw@plt+0x9280>
  40bd10:	mov	x19, x25
  40bd14:	b	40bd20 <nftw@plt+0x91a0>
  40bd18:	ldr	x0, [x19, #24]!
  40bd1c:	cbz	x0, 40bd3c <nftw@plt+0x91bc>
  40bd20:	ldrb	w2, [x19, #16]
  40bd24:	cmp	x2, x20
  40bd28:	b.ne	40bd18 <nftw@plt+0x9198>  // b.any
  40bd2c:	mov	x2, x20
  40bd30:	mov	x1, x27
  40bd34:	bl	402850 <memcmp@plt>
  40bd38:	cbnz	w0, 40bd18 <nftw@plt+0x9198>
  40bd3c:	ldr	x0, [x19, #8]
  40bd40:	cmp	x0, #0x0
  40bd44:	ccmp	x23, #0x0, #0x4, ne  // ne = any
  40bd48:	b.eq	40bd9c <nftw@plt+0x921c>  // b.none
  40bd4c:	ldrb	w1, [x19, #17]
  40bd50:	cbnz	w1, 40bdf8 <nftw@plt+0x9278>
  40bd54:	add	x0, x24, #0x7
  40bd58:	bl	461560 <_obstack_memory_used@@Base+0x118>
  40bd5c:	mov	w3, #0x5b1b                	// #23323
  40bd60:	mov	x22, x0
  40bd64:	strh	w3, [x0], #2
  40bd68:	mov	x1, x23
  40bd6c:	mov	x2, x24
  40bd70:	bl	402490 <memcpy@plt>
  40bd74:	str	x22, [x19, #8]
  40bd78:	add	x0, x24, #0x2
  40bd7c:	ldr	w4, [x26]
  40bd80:	add	x2, x22, x0
  40bd84:	ldrb	w3, [x26, #4]
  40bd88:	mov	w1, #0x1                   	// #1
  40bd8c:	strb	w1, [x19, #17]
  40bd90:	str	w4, [x22, x0]
  40bd94:	strb	w3, [x2, #4]
  40bd98:	ldrb	w22, [x21]
  40bd9c:	cbz	w22, 40bdb0 <nftw@plt+0x9230>
  40bda0:	add	x21, x21, #0x1
  40bda4:	mov	x23, #0x0                   	// #0
  40bda8:	mov	x27, x21
  40bdac:	b	40bcb8 <nftw@plt+0x9138>
  40bdb0:	ldp	x19, x20, [sp, #16]
  40bdb4:	ldp	x21, x22, [sp, #32]
  40bdb8:	ldp	x23, x24, [sp, #48]
  40bdbc:	ldp	x25, x26, [sp, #64]
  40bdc0:	ldr	x27, [sp, #80]
  40bdc4:	mov	w0, #0x1                   	// #1
  40bdc8:	ldp	x29, x30, [sp], #96
  40bdcc:	ret
  40bdd0:	cmp	x23, #0x0
  40bdd4:	ccmp	x21, x27, #0x4, eq  // eq = none
  40bdd8:	b.eq	40bdb0 <nftw@plt+0x9230>  // b.none
  40bddc:	add	x23, x21, #0x1
  40bde0:	sub	x20, x21, x27
  40bde4:	mov	x21, x23
  40bde8:	b	40bcb8 <nftw@plt+0x9138>
  40bdec:	sub	x20, x21, x27
  40bdf0:	cbnz	x0, 40bd10 <nftw@plt+0x9190>
  40bdf4:	b	40bd9c <nftw@plt+0x921c>
  40bdf8:	bl	402910 <free@plt>
  40bdfc:	b	40bd54 <nftw@plt+0x91d4>
  40be00:	mov	x19, x25
  40be04:	b	40bd3c <nftw@plt+0x91bc>
  40be08:	ldr	x27, [sp, #80]
  40be0c:	ldp	x29, x30, [sp], #96
  40be10:	ret
  40be14:	nop
  40be18:	tst	w0, #0xff
  40be1c:	b.eq	40be9c <nftw@plt+0x931c>  // b.none
  40be20:	stp	x29, x30, [sp, #-48]!
  40be24:	adrp	x0, 4a4000 <_obstack_memory_used@@Base+0x42bb8>
  40be28:	mov	x29, sp
  40be2c:	stp	x19, x20, [sp, #16]
  40be30:	add	x19, x0, #0x3a0
  40be34:	mov	x20, x2
  40be38:	ldr	x0, [x0, #928]
  40be3c:	str	x21, [sp, #32]
  40be40:	mov	x21, x1
  40be44:	cbnz	x0, 40be54 <nftw@plt+0x92d4>
  40be48:	b	40be84 <nftw@plt+0x9304>
  40be4c:	ldr	x0, [x19, #24]!
  40be50:	cbz	x0, 40be84 <nftw@plt+0x9304>
  40be54:	ldrb	w3, [x19, #16]
  40be58:	cmp	x3, x20
  40be5c:	b.ne	40be4c <nftw@plt+0x92cc>  // b.any
  40be60:	mov	x2, x20
  40be64:	mov	x1, x21
  40be68:	bl	402850 <memcmp@plt>
  40be6c:	cbnz	w0, 40be4c <nftw@plt+0x92cc>
  40be70:	ldr	x0, [x19, #8]
  40be74:	ldp	x19, x20, [sp, #16]
  40be78:	ldr	x21, [sp, #32]
  40be7c:	ldp	x29, x30, [sp], #48
  40be80:	ret
  40be84:	adrp	x0, 472000 <_obstack_memory_used@@Base+0x10bb8>
  40be88:	add	x0, x0, #0x5c0
  40be8c:	ldp	x19, x20, [sp, #16]
  40be90:	ldr	x21, [sp, #32]
  40be94:	ldp	x29, x30, [sp], #48
  40be98:	ret
  40be9c:	adrp	x0, 472000 <_obstack_memory_used@@Base+0x10bb8>
  40bea0:	add	x0, x0, #0x5c0
  40bea4:	ret
  40bea8:	tst	w0, #0xff
  40beac:	adrp	x1, 472000 <_obstack_memory_used@@Base+0x10bb8>
  40beb0:	adrp	x0, 473000 <_obstack_memory_used@@Base+0x11bb8>
  40beb4:	add	x1, x1, #0x5c0
  40beb8:	add	x0, x0, #0xae0
  40bebc:	csel	x0, x0, x1, ne  // ne = any
  40bec0:	ret
  40bec4:	nop
  40bec8:	cmp	w0, #0x1
  40becc:	b.eq	40bf40 <nftw@plt+0x93c0>  // b.none
  40bed0:	stp	x29, x30, [sp, #-32]!
  40bed4:	cmp	w0, #0x2
  40bed8:	mov	x29, sp
  40bedc:	str	x19, [sp, #16]
  40bee0:	mov	w19, w0
  40bee4:	b.ne	40bf18 <nftw@plt+0x9398>  // b.any
  40bee8:	adrp	x0, 473000 <_obstack_memory_used@@Base+0x11bb8>
  40beec:	add	x0, x0, #0xae8
  40bef0:	bl	402ab0 <getenv@plt>
  40bef4:	cbz	x0, 40bf08 <nftw@plt+0x9388>
  40bef8:	adrp	x1, 473000 <_obstack_memory_used@@Base+0x11bb8>
  40befc:	add	x1, x1, #0xaf0
  40bf00:	bl	402890 <strcmp@plt>
  40bf04:	cbnz	w0, 40bf2c <nftw@plt+0x93ac>
  40bf08:	mov	w0, #0x0                   	// #0
  40bf0c:	ldr	x19, [sp, #16]
  40bf10:	ldp	x29, x30, [sp], #32
  40bf14:	ret
  40bf18:	mov	w0, #0x0                   	// #0
  40bf1c:	cbnz	w19, 40bf44 <nftw@plt+0x93c4>
  40bf20:	ldr	x19, [sp, #16]
  40bf24:	ldp	x29, x30, [sp], #32
  40bf28:	ret
  40bf2c:	mov	w0, w19
  40bf30:	bl	4029f0 <isatty@plt>
  40bf34:	cbz	w0, 40bf08 <nftw@plt+0x9388>
  40bf38:	ldr	x19, [sp, #16]
  40bf3c:	ldp	x29, x30, [sp], #32
  40bf40:	b	40bc58 <nftw@plt+0x90d8>
  40bf44:	adrp	x2, 473000 <_obstack_memory_used@@Base+0x11bb8>
  40bf48:	adrp	x0, 473000 <_obstack_memory_used@@Base+0x11bb8>
  40bf4c:	add	x2, x2, #0xaf8
  40bf50:	add	x0, x0, #0xb08
  40bf54:	mov	w1, #0xec                  	// #236
  40bf58:	bl	402bf0 <nftw@plt+0x70>
  40bf5c:	nop
  40bf60:	ldr	x2, [x0]
  40bf64:	ldr	x0, [x1]
  40bf68:	ldr	w1, [x2]
  40bf6c:	ldr	w0, [x0]
  40bf70:	sub	w0, w1, w0
  40bf74:	ret
  40bf78:	stp	x29, x30, [sp, #-64]!
  40bf7c:	mov	x29, sp
  40bf80:	stp	x19, x20, [sp, #16]
  40bf84:	mov	w19, w0
  40bf88:	mov	w20, w1
  40bf8c:	stp	x21, x22, [sp, #32]
  40bf90:	adrp	x22, 4a5000 <__environ@@GLIBC_2.17+0xa68>
  40bf94:	stp	x23, x24, [sp, #48]
  40bf98:	tbnz	w19, #31, 40c01c <nftw@plt+0x949c>
  40bf9c:	nop
  40bfa0:	tbnz	w20, #31, 40c030 <nftw@plt+0x94b0>
  40bfa4:	cmp	w19, #0x1
  40bfa8:	mov	w1, w19
  40bfac:	cset	w23, ls  // ls = plast
  40bfb0:	cmp	w20, #0x1
  40bfb4:	cset	w0, ls  // ls = plast
  40bfb8:	orr	w23, w23, w0
  40bfbc:	cbnz	w23, 40c05c <nftw@plt+0x94dc>
  40bfc0:	ldr	x0, [x22, #2336]
  40bfc4:	bl	435de8 <nftw@plt+0x33268>
  40bfc8:	mov	x21, x0
  40bfcc:	ldr	x0, [x22, #2336]
  40bfd0:	mov	w1, w20
  40bfd4:	bl	435de8 <nftw@plt+0x33268>
  40bfd8:	mov	x24, x0
  40bfdc:	cmp	x21, x0
  40bfe0:	b.ne	40c07c <nftw@plt+0x94fc>  // b.any
  40bfe4:	bl	436438 <nftw@plt+0x338b8>
  40bfe8:	tst	w0, #0xff
  40bfec:	mov	w2, w19
  40bff0:	mov	x1, x21
  40bff4:	b.eq	40c0b0 <nftw@plt+0x9530>  // b.none
  40bff8:	ldr	x0, [x22, #2336]
  40bffc:	bl	436458 <nftw@plt+0x338d8>
  40c000:	mov	w19, w0
  40c004:	ldr	x0, [x22, #2336]
  40c008:	mov	w2, w20
  40c00c:	mov	x1, x21
  40c010:	bl	436458 <nftw@plt+0x338d8>
  40c014:	mov	w20, w0
  40c018:	tbz	w19, #31, 40bfa0 <nftw@plt+0x9420>
  40c01c:	ldr	x0, [x22, #2336]
  40c020:	mov	w1, w19
  40c024:	bl	4353d0 <nftw@plt+0x32850>
  40c028:	mov	w19, w0
  40c02c:	tbz	w20, #31, 40bfa4 <nftw@plt+0x9424>
  40c030:	ldr	x0, [x22, #2336]
  40c034:	mov	w1, w20
  40c038:	bl	4353d0 <nftw@plt+0x32850>
  40c03c:	mov	w20, w0
  40c040:	cmp	w19, #0x1
  40c044:	mov	w1, w19
  40c048:	cset	w23, ls  // ls = plast
  40c04c:	cmp	w20, #0x1
  40c050:	cset	w0, ls  // ls = plast
  40c054:	orr	w23, w23, w0
  40c058:	cbz	w23, 40bfc0 <nftw@plt+0x9440>
  40c05c:	cmp	w19, w20
  40c060:	cset	w23, eq  // eq = none
  40c064:	mov	w0, w23
  40c068:	ldp	x19, x20, [sp, #16]
  40c06c:	ldp	x21, x22, [sp, #32]
  40c070:	ldp	x23, x24, [sp, #48]
  40c074:	ldp	x29, x30, [sp], #64
  40c078:	ret
  40c07c:	mov	x0, x21
  40c080:	bl	436438 <nftw@plt+0x338b8>
  40c084:	tst	w0, #0xff
  40c088:	b.ne	40c064 <nftw@plt+0x94e4>  // b.any
  40c08c:	mov	x0, x24
  40c090:	bl	436438 <nftw@plt+0x338b8>
  40c094:	tst	w0, #0xff
  40c098:	b.ne	40c064 <nftw@plt+0x94e4>  // b.any
  40c09c:	ldr	x1, [x21, #8]
  40c0a0:	ldr	x0, [x24, #8]
  40c0a4:	cmp	x1, x0
  40c0a8:	cset	w23, eq  // eq = none
  40c0ac:	b	40c064 <nftw@plt+0x94e4>
  40c0b0:	mov	w23, #0x1                   	// #1
  40c0b4:	mov	w0, w23
  40c0b8:	ldp	x19, x20, [sp, #16]
  40c0bc:	ldp	x21, x22, [sp, #32]
  40c0c0:	ldp	x23, x24, [sp, #48]
  40c0c4:	ldp	x29, x30, [sp], #64
  40c0c8:	ret
  40c0cc:	nop
  40c0d0:	ldr	x7, [x0, #120]
  40c0d4:	cbz	x7, 40c174 <nftw@plt+0x95f4>
  40c0d8:	ldr	w9, [x7, #4]
  40c0dc:	add	x0, x7, #0x8
  40c0e0:	mov	w8, #0x0                   	// #0
  40c0e4:	cmp	w8, w9
  40c0e8:	b.eq	40c174 <nftw@plt+0x95f4>  // b.none
  40c0ec:	ldr	w11, [x0, #16]
  40c0f0:	cmp	w11, #0x2
  40c0f4:	b.eq	40c17c <nftw@plt+0x95fc>  // b.none
  40c0f8:	stp	x29, x30, [sp, #-16]!
  40c0fc:	mov	x29, sp
  40c100:	ldr	w10, [x0]
  40c104:	ldr	w12, [x0, #8]
  40c108:	cmp	w10, w12
  40c10c:	b.hi	40c240 <nftw@plt+0x96c0>  // b.pmore
  40c110:	cmp	w1, w10
  40c114:	b.cc	40c13c <nftw@plt+0x95bc>  // b.lo, b.ul, b.last
  40c118:	b.eq	40c188 <nftw@plt+0x9608>  // b.none
  40c11c:	cmp	w1, w12
  40c120:	b.hi	40c13c <nftw@plt+0x95bc>  // b.pmore
  40c124:	b.cc	40c1ec <nftw@plt+0x966c>  // b.lo, b.ul, b.last
  40c128:	b.ne	40c228 <nftw@plt+0x96a8>  // b.any
  40c12c:	ldr	w10, [x0, #12]
  40c130:	cmp	w2, w10
  40c134:	cset	w10, le
  40c138:	cbnz	w10, 40c19c <nftw@plt+0x961c>
  40c13c:	add	w8, w8, #0x1
  40c140:	add	x0, x0, #0x28
  40c144:	cmp	w8, w9
  40c148:	b.eq	40c168 <nftw@plt+0x95e8>  // b.none
  40c14c:	ldr	w11, [x0, #16]
  40c150:	cmp	w11, #0x2
  40c154:	b.ne	40c100 <nftw@plt+0x9580>  // b.any
  40c158:	add	w8, w8, #0x1
  40c15c:	add	x0, x0, #0x28
  40c160:	cmp	w8, w9
  40c164:	b.ne	40c14c <nftw@plt+0x95cc>  // b.any
  40c168:	mov	w0, #0x0                   	// #0
  40c16c:	ldp	x29, x30, [sp], #16
  40c170:	ret
  40c174:	mov	w0, #0x0                   	// #0
  40c178:	ret
  40c17c:	add	w8, w8, #0x1
  40c180:	add	x0, x0, #0x28
  40c184:	b	40c0e4 <nftw@plt+0x9564>
  40c188:	ldr	w10, [x0, #4]
  40c18c:	cmp	w2, w10
  40c190:	b.lt	40c13c <nftw@plt+0x95bc>  // b.tstop
  40c194:	cmp	w1, w12
  40c198:	b.cs	40c1d0 <nftw@plt+0x9650>  // b.hs, b.nlast
  40c19c:	str	w8, [x5]
  40c1a0:	strb	wzr, [x6]
  40c1a4:	cbnz	w11, 40c1c0 <nftw@plt+0x9640>
  40c1a8:	ubfiz	x0, x8, #2, #32
  40c1ac:	add	x8, x0, w8, uxtw
  40c1b0:	add	x7, x7, x8, lsl #3
  40c1b4:	ldr	w0, [x7, #28]
  40c1b8:	cmp	w1, w0
  40c1bc:	b.eq	40c20c <nftw@plt+0x968c>  // b.none
  40c1c0:	cmp	w2, w3
  40c1c4:	ccmp	w2, w4, #0x0, ge  // ge = tcont
  40c1c8:	cset	w0, le
  40c1cc:	b	40c16c <nftw@plt+0x95ec>
  40c1d0:	b.eq	40c12c <nftw@plt+0x95ac>  // b.none
  40c1d4:	adrp	x2, 473000 <_obstack_memory_used@@Base+0x11bb8>
  40c1d8:	adrp	x0, 473000 <_obstack_memory_used@@Base+0x11bb8>
  40c1dc:	add	x2, x2, #0xc40
  40c1e0:	add	x0, x0, #0xc50
  40c1e4:	mov	w1, #0x1f3                 	// #499
  40c1e8:	bl	402bf0 <nftw@plt+0x70>
  40c1ec:	cmp	w10, w12
  40c1f0:	b.ne	40c19c <nftw@plt+0x961c>  // b.any
  40c1f4:	adrp	x2, 473000 <_obstack_memory_used@@Base+0x11bb8>
  40c1f8:	adrp	x0, 473000 <_obstack_memory_used@@Base+0x11bb8>
  40c1fc:	add	x2, x2, #0xc40
  40c200:	add	x0, x0, #0xc50
  40c204:	mov	w1, #0x207                 	// #519
  40c208:	bl	402bf0 <nftw@plt+0x70>
  40c20c:	ldr	w0, [x7, #32]
  40c210:	cmp	w2, w0
  40c214:	b.ne	40c1c0 <nftw@plt+0x9640>  // b.any
  40c218:	mov	w1, #0x1                   	// #1
  40c21c:	mov	w0, #0x1                   	// #1
  40c220:	strb	w1, [x6]
  40c224:	b	40c16c <nftw@plt+0x95ec>
  40c228:	adrp	x2, 473000 <_obstack_memory_used@@Base+0x11bb8>
  40c22c:	adrp	x0, 473000 <_obstack_memory_used@@Base+0x11bb8>
  40c230:	add	x2, x2, #0xc40
  40c234:	add	x0, x0, #0xc50
  40c238:	mov	w1, #0x20b                 	// #523
  40c23c:	bl	402bf0 <nftw@plt+0x70>
  40c240:	adrp	x2, 473000 <_obstack_memory_used@@Base+0x11bb8>
  40c244:	adrp	x0, 473000 <_obstack_memory_used@@Base+0x11bb8>
  40c248:	add	x2, x2, #0xc40
  40c24c:	add	x0, x0, #0xc50
  40c250:	mov	w1, #0x1d8                 	// #472
  40c254:	bl	402bf0 <nftw@plt+0x70>
  40c258:	ldr	w2, [x0]
  40c25c:	ldr	w3, [x1]
  40c260:	subs	x2, x2, x3
  40c264:	b.ne	40c280 <nftw@plt+0x9700>  // b.any
  40c268:	ldr	w2, [x0, #4]
  40c26c:	mov	w0, #0x0                   	// #0
  40c270:	ldr	w1, [x1, #4]
  40c274:	subs	x2, x2, x1
  40c278:	b.ne	40c280 <nftw@plt+0x9700>  // b.any
  40c27c:	ret
  40c280:	cmp	x2, #0x1
  40c284:	mov	w0, #0x1                   	// #1
  40c288:	cneg	w0, w0, lt  // lt = tstop
  40c28c:	ret
  40c290:	ldr	w2, [x0, #4]
  40c294:	ldr	w3, [x1, #4]
  40c298:	subs	x2, x2, x3
  40c29c:	b.ne	40c2b8 <nftw@plt+0x9738>  // b.any
  40c2a0:	ldr	w2, [x0]
  40c2a4:	mov	w0, #0x0                   	// #0
  40c2a8:	ldr	w1, [x1]
  40c2ac:	subs	x2, x2, x1
  40c2b0:	b.ne	40c2b8 <nftw@plt+0x9738>  // b.any
  40c2b4:	ret
  40c2b8:	cmp	x2, #0x1
  40c2bc:	mov	w0, #0x1                   	// #1
  40c2c0:	cneg	w0, w0, lt  // lt = tstop
  40c2c4:	ret
  40c2c8:	stp	x29, x30, [sp, #-48]!
  40c2cc:	mov	x29, sp
  40c2d0:	stp	x19, x20, [sp, #16]
  40c2d4:	mov	x20, x0
  40c2d8:	ldr	w0, [x0, #12]
  40c2dc:	cmp	w0, w1
  40c2e0:	b.eq	40c310 <nftw@plt+0x9790>  // b.none
  40c2e4:	mov	w19, w1
  40c2e8:	cmn	w0, #0x1
  40c2ec:	b.ne	40c364 <nftw@plt+0x97e4>  // b.any
  40c2f0:	str	w19, [x20, #12]
  40c2f4:	cmp	w19, #0x0
  40c2f8:	cbz	w19, 40c3d0 <nftw@plt+0x9850>
  40c2fc:	b.gt	40c31c <nftw@plt+0x979c>
  40c300:	cmn	w19, #0x2
  40c304:	b.eq	40c3b8 <nftw@plt+0x9838>  // b.none
  40c308:	cmn	w19, #0x1
  40c30c:	b.ne	40c344 <nftw@plt+0x97c4>  // b.any
  40c310:	ldp	x19, x20, [sp, #16]
  40c314:	ldp	x29, x30, [sp], #48
  40c318:	ret
  40c31c:	cmp	w19, #0x1
  40c320:	b.eq	40c378 <nftw@plt+0x97f8>  // b.none
  40c324:	cmp	w19, #0x2
  40c328:	b.ne	40c390 <nftw@plt+0x9810>  // b.any
  40c32c:	ldr	x0, [x20]
  40c330:	ldr	x1, [x20, #24]
  40c334:	ldp	x19, x20, [sp, #16]
  40c338:	ldp	x29, x30, [sp], #48
  40c33c:	ldr	x0, [x0]
  40c340:	b	414bf0 <nftw@plt+0x12070>
  40c344:	cmn	w19, #0x3
  40c348:	b.ne	40c390 <nftw@plt+0x9810>  // b.any
  40c34c:	ldr	x0, [x20]
  40c350:	ldr	x1, [x20, #40]
  40c354:	ldp	x19, x20, [sp, #16]
  40c358:	ldp	x29, x30, [sp], #48
  40c35c:	ldr	x0, [x0]
  40c360:	b	414bf0 <nftw@plt+0x12070>
  40c364:	ldr	x0, [x20]
  40c368:	ldr	x1, [x20, #48]
  40c36c:	ldr	x0, [x0]
  40c370:	bl	414bf0 <nftw@plt+0x12070>
  40c374:	b	40c2f0 <nftw@plt+0x9770>
  40c378:	ldr	x0, [x20]
  40c37c:	ldr	x1, [x20, #16]
  40c380:	ldp	x19, x20, [sp, #16]
  40c384:	ldp	x29, x30, [sp], #48
  40c388:	ldr	x0, [x0]
  40c38c:	b	414bf0 <nftw@plt+0x12070>
  40c390:	cmp	w19, #0x2
  40c394:	b.le	40c418 <nftw@plt+0x9898>
  40c398:	ldr	x0, [x20]
  40c39c:	tst	x19, #0x1
  40c3a0:	ldp	x2, x1, [x20, #16]
  40c3a4:	ldp	x19, x20, [sp, #16]
  40c3a8:	ldp	x29, x30, [sp], #48
  40c3ac:	ldr	x0, [x0]
  40c3b0:	csel	x1, x2, x1, ne  // ne = any
  40c3b4:	b	414bf0 <nftw@plt+0x12070>
  40c3b8:	ldr	x0, [x20]
  40c3bc:	ldr	x1, [x20, #32]
  40c3c0:	ldp	x19, x20, [sp, #16]
  40c3c4:	ldp	x29, x30, [sp], #48
  40c3c8:	ldr	x0, [x0]
  40c3cc:	b	414bf0 <nftw@plt+0x12070>
  40c3d0:	ldr	x1, [x20]
  40c3d4:	ldr	w0, [x20, #8]
  40c3d8:	ldr	x20, [x1]
  40c3dc:	str	x21, [sp, #32]
  40c3e0:	ldrb	w21, [x20, #67]
  40c3e4:	bl	408ad0 <nftw@plt+0x5f50>
  40c3e8:	mov	x19, x0
  40c3ec:	bl	4024f0 <strlen@plt>
  40c3f0:	mov	x1, x19
  40c3f4:	mov	x2, x0
  40c3f8:	mov	w0, w21
  40c3fc:	bl	40be18 <nftw@plt+0x9298>
  40c400:	mov	x1, x0
  40c404:	mov	x0, x20
  40c408:	ldp	x19, x20, [sp, #16]
  40c40c:	ldr	x21, [sp, #32]
  40c410:	ldp	x29, x30, [sp], #48
  40c414:	b	414bf0 <nftw@plt+0x12070>
  40c418:	adrp	x2, 473000 <_obstack_memory_used@@Base+0x11bb8>
  40c41c:	adrp	x0, 473000 <_obstack_memory_used@@Base+0x11bb8>
  40c420:	add	x2, x2, #0xc88
  40c424:	add	x0, x0, #0xc50
  40c428:	mov	w1, #0x17f                 	// #383
  40c42c:	str	x21, [sp, #32]
  40c430:	bl	402bf0 <nftw@plt+0x70>
  40c434:	nop
  40c438:	stp	x29, x30, [sp, #-224]!
  40c43c:	mov	x29, sp
  40c440:	stp	x19, x20, [sp, #16]
  40c444:	stp	x21, x22, [sp, #32]
  40c448:	stp	x23, x24, [sp, #48]
  40c44c:	stp	x25, x26, [sp, #64]
  40c450:	cbz	x1, 40c860 <nftw@plt+0x9ce0>
  40c454:	and	w24, w3, #0xff
  40c458:	adrp	x3, 4a5000 <__environ@@GLIBC_2.17+0xa68>
  40c45c:	mov	x21, x0
  40c460:	mov	x19, x1
  40c464:	ldr	x0, [x3, #2336]
  40c468:	mov	w22, w2
  40c46c:	ldr	w1, [x1]
  40c470:	bl	4360f0 <nftw@plt+0x33570>
  40c474:	mov	x20, x0
  40c478:	add	x8, sp, #0x80
  40c47c:	lsr	x23, x0, #32
  40c480:	mov	w1, #0x1                   	// #1
  40c484:	bl	419d60 <nftw@plt+0x171e0>
  40c488:	mov	w0, w23
  40c48c:	add	x8, sp, #0xa0
  40c490:	mov	w1, #0x2                   	// #2
  40c494:	ldr	w25, [sp, #136]
  40c498:	bl	419d60 <nftw@plt+0x171e0>
  40c49c:	ldr	w26, [sp, #168]
  40c4a0:	ldr	w0, [x19]
  40c4a4:	mov	w1, #0x0                   	// #0
  40c4a8:	add	x8, sp, #0xc0
  40c4ac:	bl	419d60 <nftw@plt+0x171e0>
  40c4b0:	ldr	x3, [x21, #24]
  40c4b4:	ldr	x1, [sp, #128]
  40c4b8:	cmp	x1, x3
  40c4bc:	b.eq	40c4dc <nftw@plt+0x995c>  // b.none
  40c4c0:	mov	w0, #0x0                   	// #0
  40c4c4:	ldp	x19, x20, [sp, #16]
  40c4c8:	ldp	x21, x22, [sp, #32]
  40c4cc:	ldp	x23, x24, [sp, #48]
  40c4d0:	ldp	x25, x26, [sp, #64]
  40c4d4:	ldp	x29, x30, [sp], #224
  40c4d8:	ret
  40c4dc:	ldr	x0, [sp, #160]
  40c4e0:	cmp	x1, x0
  40c4e4:	b.ne	40c4c0 <nftw@plt+0x9940>  // b.any
  40c4e8:	stp	x27, x28, [sp, #80]
  40c4ec:	ldr	w27, [x19, #4]
  40c4f0:	ldr	w28, [sp, #200]
  40c4f4:	cbz	w27, 40c5c8 <nftw@plt+0x9a48>
  40c4f8:	ldr	x0, [x19, #8]
  40c4fc:	str	x0, [sp, #104]
  40c500:	ldr	w7, [sp, #204]
  40c504:	cmp	w25, w26
  40c508:	mov	w2, w28
  40c50c:	b.le	40c6a8 <nftw@plt+0x9b28>
  40c510:	ldr	x0, [x21, #120]
  40c514:	cbz	x0, 40c734 <nftw@plt+0x9bb4>
  40c518:	ldr	w1, [x0, #4]
  40c51c:	cbnz	w1, 40c5c0 <nftw@plt+0x9a40>
  40c520:	cbz	w24, 40c600 <nftw@plt+0x9a80>
  40c524:	mov	w9, w28
  40c528:	mov	w20, w7
  40c52c:	mov	w24, w28
  40c530:	mov	w23, w7
  40c534:	ldr	x0, [x21, #136]
  40c538:	cbz	x0, 40c5c0 <nftw@plt+0x9a40>
  40c53c:	add	x5, x0, #0x8
  40c540:	ldr	w4, [x0, #4]
  40c544:	mov	x0, x5
  40c548:	mov	w1, #0x0                   	// #0
  40c54c:	cmp	w4, w1
  40c550:	b.le	40c5c0 <nftw@plt+0x9a40>
  40c554:	ldr	w2, [x0]
  40c558:	cmp	w2, w25
  40c55c:	b.hi	40c668 <nftw@plt+0x9ae8>  // b.pmore
  40c560:	ldr	w2, [x0, #4]
  40c564:	cmp	w2, w25
  40c568:	b.cc	40c668 <nftw@plt+0x9ae8>  // b.lo, b.ul, b.last
  40c56c:	mov	x0, x5
  40c570:	mov	w1, #0x0                   	// #0
  40c574:	ldr	w2, [x0]
  40c578:	cmp	w2, w26
  40c57c:	b.hi	40c674 <nftw@plt+0x9af4>  // b.pmore
  40c580:	ldr	w2, [x0, #4]
  40c584:	cmp	w2, w26
  40c588:	b.cc	40c674 <nftw@plt+0x9af4>  // b.lo, b.ul, b.last
  40c58c:	ldr	w0, [x19, #4]
  40c590:	cbnz	w0, 40c6fc <nftw@plt+0x9b7c>
  40c594:	mov	w0, #0x0                   	// #0
  40c598:	ldr	w1, [x5]
  40c59c:	cmp	w28, w1
  40c5a0:	b.cc	40c5b0 <nftw@plt+0x9a30>  // b.lo, b.ul, b.last
  40c5a4:	ldr	w1, [x5, #4]
  40c5a8:	cmp	w28, w1
  40c5ac:	b.ls	40c6fc <nftw@plt+0x9b7c>  // b.plast
  40c5b0:	add	w0, w0, #0x1
  40c5b4:	add	x5, x5, #0x8
  40c5b8:	cmp	w4, w0
  40c5bc:	b.gt	40c598 <nftw@plt+0x9a18>
  40c5c0:	ldp	x27, x28, [sp, #80]
  40c5c4:	b	40c4c0 <nftw@plt+0x9940>
  40c5c8:	ldr	x0, [sp, #192]
  40c5cc:	cmp	x1, x0
  40c5d0:	b.ne	40c5c0 <nftw@plt+0x9a40>  // b.any
  40c5d4:	ldr	x0, [x21, #120]
  40c5d8:	cbz	x0, 40c4f8 <nftw@plt+0x9978>
  40c5dc:	ldr	w27, [x0, #4]
  40c5e0:	cbz	w27, 40c68c <nftw@plt+0x9b0c>
  40c5e4:	ldr	w0, [x19]
  40c5e8:	ldr	w1, [x21, #16]
  40c5ec:	bl	40bf78 <nftw@plt+0x93f8>
  40c5f0:	tst	w0, #0xff
  40c5f4:	b.eq	40c5c0 <nftw@plt+0x9a40>  // b.none
  40c5f8:	ldr	w27, [x19, #4]
  40c5fc:	b	40c4f8 <nftw@plt+0x9978>
  40c600:	mov	x19, x0
  40c604:	mov	w9, w28
  40c608:	mov	w20, w7
  40c60c:	mov	w24, w28
  40c610:	mov	w23, w7
  40c614:	ldp	w0, w25, [x19]
  40c618:	add	w26, w25, #0x1
  40c61c:	ubfx	x0, x0, #0, #31
  40c620:	mov	w2, w26
  40c624:	cmp	w0, w25
  40c628:	b.eq	40c754 <nftw@plt+0x9bd4>  // b.none
  40c62c:	mov	w1, #0x28                  	// #40
  40c630:	mov	x4, #0x8                   	// #8
  40c634:	str	w2, [x19, #4]
  40c638:	mov	w0, #0x1                   	// #1
  40c63c:	umaddl	x25, w25, w1, x4
  40c640:	ldr	x2, [sp, #104]
  40c644:	add	x1, x19, x25
  40c648:	str	w24, [x19, x25]
  40c64c:	stp	w23, w9, [x1, #4]
  40c650:	stp	w20, w27, [x1, #12]
  40c654:	stp	w28, w7, [x1, #20]
  40c658:	str	w22, [x1, #28]
  40c65c:	str	x2, [x1, #32]
  40c660:	ldp	x27, x28, [sp, #80]
  40c664:	b	40c4c4 <nftw@plt+0x9944>
  40c668:	add	w1, w1, #0x1
  40c66c:	add	x0, x0, #0x8
  40c670:	b	40c54c <nftw@plt+0x99cc>
  40c674:	add	w1, w1, #0x1
  40c678:	add	x0, x0, #0x8
  40c67c:	cmp	w4, w1
  40c680:	b.gt	40c574 <nftw@plt+0x99f4>
  40c684:	ldp	x27, x28, [sp, #80]
  40c688:	b	40c4c0 <nftw@plt+0x9940>
  40c68c:	ldr	x1, [x19, #8]
  40c690:	str	x1, [sp, #104]
  40c694:	ldr	w7, [sp, #204]
  40c698:	cmp	w25, w26
  40c69c:	mov	w2, w28
  40c6a0:	b.gt	40c518 <nftw@plt+0x9998>
  40c6a4:	nop
  40c6a8:	ldr	w1, [x21, #16]
  40c6ac:	mov	w0, w20
  40c6b0:	stp	w7, w2, [sp, #116]
  40c6b4:	ldr	w2, [sp, #140]
  40c6b8:	ldr	w20, [sp, #172]
  40c6bc:	str	w2, [sp, #124]
  40c6c0:	bl	40bf78 <nftw@plt+0x93f8>
  40c6c4:	tst	w0, #0xff
  40c6c8:	ldp	w7, w2, [sp, #116]
  40c6cc:	b.eq	40c510 <nftw@plt+0x9990>  // b.none
  40c6d0:	ldr	w1, [x21, #16]
  40c6d4:	mov	w0, w23
  40c6d8:	stp	w7, w2, [sp, #116]
  40c6dc:	bl	40bf78 <nftw@plt+0x93f8>
  40c6e0:	tst	w0, #0xff
  40c6e4:	ldr	w7, [sp, #116]
  40c6e8:	b.ne	40c84c <nftw@plt+0x9ccc>  // b.any
  40c6ec:	ldr	w2, [sp, #120]
  40c6f0:	b	40c510 <nftw@plt+0x9990>
  40c6f4:	mov	w24, w2
  40c6f8:	mov	w7, w0
  40c6fc:	ldr	x19, [x21, #120]
  40c700:	cbnz	x19, 40c614 <nftw@plt+0x9a94>
  40c704:	mov	x1, #0xa8                  	// #168
  40c708:	mov	x0, #0x0                   	// #0
  40c70c:	stp	w7, w9, [sp, #116]
  40c710:	bl	4615e8 <_obstack_memory_used@@Base+0x1a0>
  40c714:	mov	x19, x0
  40c718:	str	x19, [x21, #120]
  40c71c:	mov	w25, #0x0                   	// #0
  40c720:	mov	x0, #0x4                   	// #4
  40c724:	ldp	w7, w9, [sp, #116]
  40c728:	add	w2, w25, #0x1
  40c72c:	str	x0, [x19]
  40c730:	b	40c62c <nftw@plt+0x9aac>
  40c734:	mov	w0, w7
  40c738:	mov	w20, w7
  40c73c:	mov	w9, w28
  40c740:	mov	w23, w7
  40c744:	cbz	w24, 40c6f4 <nftw@plt+0x9b74>
  40c748:	mov	w24, w2
  40c74c:	mov	w7, w0
  40c750:	b	40c534 <nftw@plt+0x99b4>
  40c754:	ldrsb	w0, [x19, #3]
  40c758:	tbnz	w0, #31, 40c7b0 <nftw@plt+0x9c30>
  40c75c:	mov	w1, w26
  40c760:	mov	w0, w25
  40c764:	stp	w7, w9, [sp, #116]
  40c768:	bl	416358 <nftw@plt+0x137d8>
  40c76c:	mov	w1, #0x28                  	// #40
  40c770:	mov	x4, #0x8                   	// #8
  40c774:	and	w26, w0, #0x7fffffff
  40c778:	mov	w25, #0x0                   	// #0
  40c77c:	umaddl	x1, w0, w1, x4
  40c780:	ldr	x0, [x21, #120]
  40c784:	ldp	w7, w9, [sp, #116]
  40c788:	cbz	x0, 40c790 <nftw@plt+0x9c10>
  40c78c:	ldr	w25, [x0, #4]
  40c790:	stp	w7, w9, [sp, #116]
  40c794:	bl	4615e8 <_obstack_memory_used@@Base+0x1a0>
  40c798:	str	x0, [x21, #120]
  40c79c:	mov	x19, x0
  40c7a0:	ldp	w7, w9, [sp, #116]
  40c7a4:	add	w2, w25, #0x1
  40c7a8:	stp	w26, w25, [x0]
  40c7ac:	b	40c62c <nftw@plt+0x9aac>
  40c7b0:	cmp	w26, #0x4
  40c7b4:	mov	w2, #0x4                   	// #4
  40c7b8:	csel	w2, w26, w2, cs  // cs = hs, nlast
  40c7bc:	mov	w4, #0x28                  	// #40
  40c7c0:	mov	x3, #0x8                   	// #8
  40c7c4:	str	xzr, [x21, #120]
  40c7c8:	mov	x0, #0x0                   	// #0
  40c7cc:	stp	w2, w7, [sp, #116]
  40c7d0:	umaddl	x1, w2, w4, x3
  40c7d4:	str	w9, [sp, #124]
  40c7d8:	bl	4615e8 <_obstack_memory_used@@Base+0x1a0>
  40c7dc:	str	x0, [x21, #120]
  40c7e0:	ldp	w2, w7, [sp, #116]
  40c7e4:	mov	w4, #0x28                  	// #40
  40c7e8:	ldr	w9, [sp, #124]
  40c7ec:	mov	x3, #0x8                   	// #8
  40c7f0:	and	x2, x2, #0x7fffffff
  40c7f4:	str	x2, [x0]
  40c7f8:	cbz	w25, 40c83c <nftw@plt+0x9cbc>
  40c7fc:	sub	w10, w25, #0x1
  40c800:	mov	x2, #0x30                  	// #48
  40c804:	mov	x1, x3
  40c808:	umaddl	x10, w10, w4, x2
  40c80c:	nop
  40c810:	add	x8, x19, x1
  40c814:	add	x2, x0, x1
  40c818:	add	x1, x1, #0x28
  40c81c:	cmp	x10, x1
  40c820:	ldp	x4, x5, [x8]
  40c824:	stp	x4, x5, [x2]
  40c828:	ldp	x4, x5, [x8, #16]
  40c82c:	stp	x4, x5, [x2, #16]
  40c830:	ldr	x4, [x8, #32]
  40c834:	str	x4, [x2, #32]
  40c838:	b.ne	40c810 <nftw@plt+0x9c90>  // b.any
  40c83c:	mov	w2, w26
  40c840:	mov	x19, x0
  40c844:	str	w25, [x0, #4]
  40c848:	b	40c62c <nftw@plt+0x9aac>
  40c84c:	mov	w0, w7
  40c850:	mov	w9, w26
  40c854:	ldr	w7, [sp, #124]
  40c858:	mov	w2, w25
  40c85c:	b	40c740 <nftw@plt+0x9bc0>
  40c860:	adrp	x2, 473000 <_obstack_memory_used@@Base+0x11bb8>
  40c864:	adrp	x0, 473000 <_obstack_memory_used@@Base+0x11bb8>
  40c868:	add	x2, x2, #0xc98
  40c86c:	add	x0, x0, #0xc50
  40c870:	mov	w1, #0x39f                 	// #927
  40c874:	stp	x27, x28, [sp, #80]
  40c878:	bl	402bf0 <nftw@plt+0x70>
  40c87c:	nop
  40c880:	stp	x29, x30, [sp, #-160]!
  40c884:	mov	x29, sp
  40c888:	stp	x19, x20, [sp, #16]
  40c88c:	mov	x20, x0
  40c890:	stp	x21, x22, [sp, #32]
  40c894:	mov	x22, x1
  40c898:	mov	w21, w3
  40c89c:	stp	x23, x24, [sp, #48]
  40c8a0:	stp	x25, x26, [sp, #64]
  40c8a4:	mov	x26, x2
  40c8a8:	stp	x27, x28, [sp, #80]
  40c8ac:	ldr	x0, [x1]
  40c8b0:	str	d8, [sp, #96]
  40c8b4:	stp	x1, x0, [x20]
  40c8b8:	mov	x0, x2
  40c8bc:	mov	w1, #0x0                   	// #0
  40c8c0:	bl	437ca0 <nftw@plt+0x35120>
  40c8c4:	mov	x2, x0
  40c8c8:	add	x8, x20, #0x18
  40c8cc:	mov	x0, x26
  40c8d0:	mov	w1, #0x0                   	// #0
  40c8d4:	ldr	w2, [x2]
  40c8d8:	str	w2, [x20, #16]
  40c8dc:	bl	437cc8 <nftw@plt+0x35148>
  40c8e0:	ldr	x0, [x22]
  40c8e4:	mov	w2, #0xffffffff            	// #-1
  40c8e8:	adrp	x1, 473000 <_obstack_memory_used@@Base+0x11bb8>
  40c8ec:	add	x1, x1, #0xb58
  40c8f0:	ldrb	w0, [x0, #67]
  40c8f4:	str	x22, [x20, #56]
  40c8f8:	stp	w21, w2, [x20, #64]
  40c8fc:	mov	x2, #0x6                   	// #6
  40c900:	bl	40be18 <nftw@plt+0x9298>
  40c904:	str	x0, [x20, #72]
  40c908:	ldr	x3, [x20, #56]
  40c90c:	mov	x2, #0x6                   	// #6
  40c910:	adrp	x1, 473000 <_obstack_memory_used@@Base+0x11bb8>
  40c914:	add	x1, x1, #0xb70
  40c918:	ldr	x0, [x3]
  40c91c:	ldrb	w0, [x0, #67]
  40c920:	bl	40be18 <nftw@plt+0x9298>
  40c924:	str	x0, [x20, #80]
  40c928:	ldr	x3, [x20, #56]
  40c92c:	mov	x2, #0xc                   	// #12
  40c930:	adrp	x1, 473000 <_obstack_memory_used@@Base+0x11bb8>
  40c934:	add	x1, x1, #0xba0
  40c938:	ldr	x0, [x3]
  40c93c:	ldrb	w0, [x0, #67]
  40c940:	bl	40be18 <nftw@plt+0x9298>
  40c944:	str	x0, [x20, #88]
  40c948:	ldr	x3, [x20, #56]
  40c94c:	mov	x2, #0xc                   	// #12
  40c950:	adrp	x1, 473000 <_obstack_memory_used@@Base+0x11bb8>
  40c954:	add	x1, x1, #0xbb0
  40c958:	ldr	x0, [x3]
  40c95c:	ldrb	w0, [x0, #67]
  40c960:	bl	40be18 <nftw@plt+0x9298>
  40c964:	str	x0, [x20, #96]
  40c968:	ldr	x1, [x22]
  40c96c:	ldrb	w0, [x1, #67]
  40c970:	bl	40bea8 <nftw@plt+0x9328>
  40c974:	ldr	w21, [x26, #8]
  40c978:	ldrb	w1, [x22, #223]
  40c97c:	str	x0, [x20, #104]
  40c980:	ldurh	w0, [x22, #221]
  40c984:	strh	w0, [x20, #112]
  40c988:	strb	w1, [x20, #114]
  40c98c:	str	xzr, [x20, #120]
  40c990:	cbnz	w21, 40d2b4 <nftw@plt+0xa734>
  40c994:	ldr	w19, [x26, #120]
  40c998:	str	xzr, [x20, #128]
  40c99c:	cbnz	w19, 40d294 <nftw@plt+0xa714>
  40c9a0:	ldr	w0, [x26, #8]
  40c9a4:	str	xzr, [x20, #136]
  40c9a8:	adds	w19, w0, #0x1
  40c9ac:	b.ne	40d270 <nftw@plt+0xa6f0>  // b.any
  40c9b0:	str	xzr, [x20, #144]
  40c9b4:	mov	w19, #0x0                   	// #0
  40c9b8:	cbz	w0, 40c9f0 <nftw@plt+0x9e70>
  40c9bc:	nop
  40c9c0:	mov	w1, w19
  40c9c4:	mov	x0, x26
  40c9c8:	bl	437ca0 <nftw@plt+0x35120>
  40c9cc:	mov	x1, x0
  40c9d0:	mov	w2, w19
  40c9d4:	mov	x0, x20
  40c9d8:	mov	w3, #0x0                   	// #0
  40c9dc:	bl	40c438 <nftw@plt+0x98b8>
  40c9e0:	ldr	w0, [x26, #8]
  40c9e4:	add	w19, w19, #0x1
  40c9e8:	cmp	w0, w19
  40c9ec:	b.hi	40c9c0 <nftw@plt+0x9e40>  // b.pmore
  40c9f0:	ldr	w0, [x26, #120]
  40c9f4:	cbz	w0, 40cad4 <nftw@plt+0x9f54>
  40c9f8:	add	x21, x26, #0x78
  40c9fc:	mov	w24, #0x4                   	// #4
  40ca00:	mov	w19, #0x0                   	// #0
  40ca04:	mov	x23, #0xfffffffffffffff0    	// #-16
  40ca08:	b	40ca48 <nftw@plt+0x9ec8>
  40ca0c:	ldr	x0, [x21, #32]
  40ca10:	add	x1, x23, w19, sxtw #3
  40ca14:	add	x8, sp, #0x80
  40ca18:	add	x0, x0, x1
  40ca1c:	ldr	x28, [x0]
  40ca20:	ldr	w0, [x28]
  40ca24:	bl	419af0 <nftw@plt+0x16f70>
  40ca28:	ldr	x0, [x20, #24]
  40ca2c:	ldr	x1, [sp, #128]
  40ca30:	cmp	x1, x0
  40ca34:	b.eq	40ca7c <nftw@plt+0x9efc>  // b.none
  40ca38:	ldr	w0, [x26, #120]
  40ca3c:	add	w19, w19, #0x1
  40ca40:	cmp	w19, w0
  40ca44:	b.cs	40cad4 <nftw@plt+0x9f54>  // b.hs, b.nlast
  40ca48:	cmp	w19, #0x1
  40ca4c:	sxtw	x0, w19
  40ca50:	b.gt	40ca0c <nftw@plt+0x9e8c>
  40ca54:	add	x0, x0, #0x1
  40ca58:	add	x8, sp, #0x80
  40ca5c:	add	x0, x21, x0, lsl #3
  40ca60:	ldr	x28, [x0]
  40ca64:	ldr	w0, [x28]
  40ca68:	bl	419af0 <nftw@plt+0x16f70>
  40ca6c:	ldr	x0, [x20, #24]
  40ca70:	ldr	x1, [sp, #128]
  40ca74:	cmp	x1, x0
  40ca78:	b.ne	40ca38 <nftw@plt+0x9eb8>  // b.any
  40ca7c:	ldr	w0, [x28, #4]
  40ca80:	add	x8, sp, #0x80
  40ca84:	bl	419af0 <nftw@plt+0x16f70>
  40ca88:	ldr	x0, [x20, #24]
  40ca8c:	ldr	x1, [sp, #128]
  40ca90:	cmp	x1, x0
  40ca94:	b.ne	40ca38 <nftw@plt+0x9eb8>  // b.any
  40ca98:	ldr	x27, [x20, #128]
  40ca9c:	cbz	x27, 40d700 <nftw@plt+0xab80>
  40caa0:	ldp	w0, w25, [x27]
  40caa4:	add	w3, w25, #0x1
  40caa8:	ubfx	x0, x0, #0, #31
  40caac:	mov	w1, w3
  40cab0:	cmp	w0, w25
  40cab4:	b.eq	40ce98 <nftw@plt+0xa318>  // b.none
  40cab8:	add	x2, x27, w25, uxtw #3
  40cabc:	str	w1, [x27, #4]
  40cac0:	add	w19, w19, #0x1
  40cac4:	ldr	w0, [x26, #120]
  40cac8:	str	x28, [x2, #8]
  40cacc:	cmp	w19, w0
  40cad0:	b.cc	40ca48 <nftw@plt+0x9ec8>  // b.lo, b.ul, b.last
  40cad4:	ldr	x0, [x20, #128]
  40cad8:	cbz	x0, 40cae8 <nftw@plt+0x9f68>
  40cadc:	ldr	w1, [x0, #4]
  40cae0:	cmp	w1, #0x1
  40cae4:	b.hi	40cf8c <nftw@plt+0xa40c>  // b.pmore
  40cae8:	ldr	x0, [x20, #136]
  40caec:	cbz	x0, 40caf8 <nftw@plt+0x9f78>
  40caf0:	ldr	w0, [x0, #4]
  40caf4:	cbnz	w0, 40d750 <nftw@plt+0xabd0>
  40caf8:	ldr	x0, [x20, #120]
  40cafc:	cbz	x0, 40d620 <nftw@plt+0xaaa0>
  40cb00:	ldr	w21, [x0, #4]
  40cb04:	adds	w21, w21, #0x1
  40cb08:	b.ne	40d204 <nftw@plt+0xa684>  // b.any
  40cb0c:	ldr	s8, [x20, #32]
  40cb10:	mov	x1, #0x28                  	// #40
  40cb14:	mov	x0, #0x0                   	// #0
  40cb18:	bl	4615e8 <_obstack_memory_used@@Base+0x1a0>
  40cb1c:	mov	x19, x0
  40cb20:	mov	w1, #0x4                   	// #4
  40cb24:	str	w1, [x0]
  40cb28:	ubfiz	x1, x21, #3, #32
  40cb2c:	add	w2, w21, #0x1
  40cb30:	add	x1, x1, #0x8
  40cb34:	str	w21, [x19, #4]
  40cb38:	dup	v8.2s, v8.s[0]
  40cb3c:	mov	w23, #0x0                   	// #0
  40cb40:	ldr	x0, [x20, #120]
  40cb44:	str	w2, [x19, #4]
  40cb48:	mov	w24, #0x28                  	// #40
  40cb4c:	mov	w25, #0x4                   	// #4
  40cb50:	str	d8, [x19, x1]
  40cb54:	cbz	x0, 40cbb0 <nftw@plt+0xa030>
  40cb58:	ldr	w1, [x0, #4]
  40cb5c:	cmp	w1, w23
  40cb60:	b.ls	40cbb0 <nftw@plt+0xa030>  // b.plast
  40cb64:	umaddl	x1, w23, w24, x0
  40cb68:	ldr	w27, [x1, #8]
  40cb6c:	ldr	w28, [x1, #16]
  40cb70:	cmp	w27, w28
  40cb74:	b.hi	40d798 <nftw@plt+0xac18>  // b.pmore
  40cb78:	ldp	w1, w21, [x19]
  40cb7c:	add	w26, w21, #0x1
  40cb80:	ubfx	x1, x1, #0, #31
  40cb84:	cmp	w1, w21
  40cb88:	mov	w1, w26
  40cb8c:	b.eq	40cfa8 <nftw@plt+0xa428>  // b.none
  40cb90:	ubfiz	x21, x21, #3, #32
  40cb94:	str	w1, [x19, #4]
  40cb98:	add	x21, x21, #0x8
  40cb9c:	add	w23, w23, #0x1
  40cba0:	add	x1, x19, x21
  40cba4:	str	w27, [x19, x21]
  40cba8:	str	w28, [x1, #4]
  40cbac:	cbnz	x0, 40cb58 <nftw@plt+0x9fd8>
  40cbb0:	ldr	x2, [x20, #128]
  40cbb4:	cbz	x2, 40cc54 <nftw@plt+0xa0d4>
  40cbb8:	mov	w25, #0x0                   	// #0
  40cbbc:	mov	w23, #0x4                   	// #4
  40cbc0:	ldr	w0, [x2, #4]
  40cbc4:	cmp	w0, w25
  40cbc8:	b.ls	40cc54 <nftw@plt+0xa0d4>  // b.plast
  40cbcc:	add	x2, x2, w25, uxtw #3
  40cbd0:	ldr	x21, [x2, #8]
  40cbd4:	cbz	x21, 40d7b0 <nftw@plt+0xac30>
  40cbd8:	ldr	w0, [x21]
  40cbdc:	add	x8, sp, #0x80
  40cbe0:	bl	419af0 <nftw@plt+0x16f70>
  40cbe4:	ldr	w24, [sp, #136]
  40cbe8:	mov	x0, x21
  40cbec:	bl	439b08 <nftw@plt+0x36f88>
  40cbf0:	tst	w0, #0xff
  40cbf4:	ldr	w0, [x21, #4]
  40cbf8:	ccmp	w24, #0x1, #0x4, ne  // ne = any
  40cbfc:	add	x8, sp, #0x80
  40cc00:	cset	w1, gt
  40cc04:	sub	w24, w24, w1
  40cc08:	bl	419af0 <nftw@plt+0x16f70>
  40cc0c:	ldr	w27, [sp, #136]
  40cc10:	cmp	w24, w27
  40cc14:	b.hi	40d7c8 <nftw@plt+0xac48>  // b.pmore
  40cc18:	ldp	w0, w21, [x19]
  40cc1c:	add	w26, w21, #0x1
  40cc20:	ubfx	x0, x0, #0, #31
  40cc24:	mov	w1, w26
  40cc28:	cmp	w0, w21
  40cc2c:	b.eq	40d070 <nftw@plt+0xa4f0>  // b.none
  40cc30:	ubfiz	x0, x21, #3, #32
  40cc34:	add	w25, w25, #0x1
  40cc38:	add	x0, x0, #0x8
  40cc3c:	ldr	x2, [x20, #128]
  40cc40:	str	w1, [x19, #4]
  40cc44:	add	x1, x19, x0
  40cc48:	str	w24, [x19, x0]
  40cc4c:	str	w27, [x1, #4]
  40cc50:	cbnz	x2, 40cbc0 <nftw@plt+0xa040>
  40cc54:	ldr	w1, [x19, #4]
  40cc58:	cmp	w1, #0x1
  40cc5c:	b.hi	40d050 <nftw@plt+0xa4d0>  // b.pmore
  40cc60:	cbz	w1, 40d7e0 <nftw@plt+0xac60>
  40cc64:	ldr	x21, [x20, #136]
  40cc68:	cbz	x21, 40d728 <nftw@plt+0xaba8>
  40cc6c:	ldp	w0, w23, [x21]
  40cc70:	add	w24, w23, #0x1
  40cc74:	ubfx	x0, x0, #0, #31
  40cc78:	mov	w1, w24
  40cc7c:	cmp	w0, w23
  40cc80:	b.eq	40d1bc <nftw@plt+0xa63c>  // b.none
  40cc84:	add	x23, x21, w23, uxtw #3
  40cc88:	ldr	d0, [x19, #8]
  40cc8c:	str	w1, [x21, #4]
  40cc90:	str	d0, [x23, #8]
  40cc94:	ldr	w6, [x19, #4]
  40cc98:	cmp	w6, #0x1
  40cc9c:	b.ls	40cd4c <nftw@plt+0xa1cc>  // b.plast
  40cca0:	mov	w23, #0x1                   	// #1
  40cca4:	mov	w24, #0x4                   	// #4
  40cca8:	b	40cccc <nftw@plt+0xa14c>
  40ccac:	ldr	w0, [x5, #12]
  40ccb0:	cmp	w0, w4
  40ccb4:	b.ls	40ccc0 <nftw@plt+0xa140>  // b.plast
  40ccb8:	str	w0, [x2, #12]
  40ccbc:	ldr	w6, [x19, #4]
  40ccc0:	add	w23, w23, #0x1
  40ccc4:	cmp	w6, w23
  40ccc8:	b.ls	40cd4c <nftw@plt+0xa1cc>  // b.plast
  40cccc:	ldr	w26, [x21, #4]
  40ccd0:	add	x5, x19, w23, uxtw #3
  40ccd4:	mov	w27, w23
  40ccd8:	sub	w25, w26, #0x1
  40ccdc:	ldr	w3, [x5, #8]
  40cce0:	add	x2, x21, x25, lsl #3
  40cce4:	ldr	w0, [x2, #8]
  40cce8:	cmp	w3, w0
  40ccec:	b.cc	40d768 <nftw@plt+0xabe8>  // b.lo, b.ul, b.last
  40ccf0:	ldr	w4, [x2, #12]
  40ccf4:	ldrb	w0, [x20, #114]
  40ccf8:	mov	w1, w4
  40ccfc:	add	x1, x1, #0x1
  40cd00:	add	x0, x0, x1
  40cd04:	cmp	x0, w3, uxtw
  40cd08:	b.ge	40ccac <nftw@plt+0xa12c>  // b.tcont
  40cd0c:	ldr	w0, [x21]
  40cd10:	add	w3, w26, #0x1
  40cd14:	mov	w1, w3
  40cd18:	mov	w28, w26
  40cd1c:	ubfx	x0, x0, #0, #31
  40cd20:	cmp	w0, w26
  40cd24:	b.eq	40d10c <nftw@plt+0xa58c>  // b.none
  40cd28:	add	x27, x27, #0x1
  40cd2c:	add	x28, x21, w28, uxtw #3
  40cd30:	add	w23, w23, #0x1
  40cd34:	ldr	d0, [x19, x27, lsl #3]
  40cd38:	str	w1, [x21, #4]
  40cd3c:	str	d0, [x28, #8]
  40cd40:	ldr	w6, [x19, #4]
  40cd44:	cmp	w6, w23
  40cd48:	b.hi	40cccc <nftw@plt+0xa14c>  // b.pmore
  40cd4c:	ldr	w5, [x21, #4]
  40cd50:	cbz	w5, 40d780 <nftw@plt+0xac00>
  40cd54:	cmp	w5, #0x1
  40cd58:	b.ls	40cda8 <nftw@plt+0xa228>  // b.plast
  40cd5c:	sub	w0, w5, #0x2
  40cd60:	add	x5, x21, #0x10
  40cd64:	add	x2, x21, #0x8
  40cd68:	add	x5, x5, w0, uxtw #3
  40cd6c:	nop
  40cd70:	ldp	w3, w1, [x2]
  40cd74:	cmp	w3, w1
  40cd78:	b.hi	40d858 <nftw@plt+0xacd8>  // b.pmore
  40cd7c:	ldp	w0, w4, [x2, #8]
  40cd80:	cmp	w0, w4
  40cd84:	b.hi	40d870 <nftw@plt+0xacf0>  // b.pmore
  40cd88:	cmp	w3, w0
  40cd8c:	b.cs	40d7f8 <nftw@plt+0xac78>  // b.hs, b.nlast
  40cd90:	add	w1, w1, #0x1
  40cd94:	cmp	w0, w1
  40cd98:	b.ls	40d810 <nftw@plt+0xac90>  // b.plast
  40cd9c:	add	x2, x2, #0x8
  40cda0:	cmp	x2, x5
  40cda4:	b.ne	40cd70 <nftw@plt+0xa1f0>  // b.any
  40cda8:	ldrsb	w0, [x19, #3]
  40cdac:	tbnz	w0, #31, 40d268 <nftw@plt+0xa6e8>
  40cdb0:	mov	x0, x19
  40cdb4:	bl	402910 <free@plt>
  40cdb8:	ldr	x21, [x20, #136]
  40cdbc:	cbz	x21, 40d828 <nftw@plt+0xaca8>
  40cdc0:	ldr	w0, [x21, #4]
  40cdc4:	cbz	w0, 40d828 <nftw@plt+0xaca8>
  40cdc8:	sub	w0, w0, #0x1
  40cdcc:	add	x21, x21, x0, lsl #3
  40cdd0:	ldr	w0, [x21, #12]
  40cdd4:	cmp	w0, #0x0
  40cdd8:	csel	w0, w0, wzr, ge  // ge = tcont
  40cddc:	bl	409e40 <nftw@plt+0x72c0>
  40cde0:	str	w0, [x20, #144]
  40cde4:	ldr	x1, [x20, #136]
  40cde8:	mov	w2, w0
  40cdec:	cbz	x1, 40ce08 <nftw@plt+0xa288>
  40cdf0:	ldr	w0, [x1, #4]
  40cdf4:	cmp	w0, #0x1
  40cdf8:	b.ls	40ce08 <nftw@plt+0xa288>  // b.plast
  40cdfc:	cmp	w2, #0x3
  40ce00:	mov	w0, #0x3                   	// #3
  40ce04:	csel	w2, w2, w0, ge  // ge = tcont
  40ce08:	ldr	w1, [x22, #224]
  40ce0c:	ldr	x4, [x20]
  40ce10:	cmp	w1, w2
  40ce14:	sub	w3, w1, #0x1
  40ce18:	ldr	w1, [x20, #32]
  40ce1c:	ldr	x0, [x20, #24]
  40ce20:	csel	w2, w3, w2, gt
  40ce24:	str	w2, [x20, #144]
  40ce28:	ldrsw	x19, [x4, #112]
  40ce2c:	bl	419390 <nftw@plt+0x16810>
  40ce30:	cbz	x0, 40ce70 <nftw@plt+0xa2f0>
  40ce34:	ldrsw	x0, [x20, #36]
  40ce38:	cmp	x1, x0
  40ce3c:	b.cc	40ce70 <nftw@plt+0xa2f0>  // b.lo, b.ul, b.last
  40ce40:	ldrb	w2, [x20, #114]
  40ce44:	cbnz	w2, 40d648 <nftw@plt+0xaac8>
  40ce48:	sub	x2, x1, x0
  40ce4c:	mov	x3, #0xa                   	// #10
  40ce50:	cmp	x2, x3
  40ce54:	csel	x2, x2, x3, cc  // cc = lo, ul, last
  40ce58:	cmp	x1, x19
  40ce5c:	sub	x2, x19, x2
  40ce60:	ccmp	x0, x2, #0x0, cs  // cs = hs, nlast
  40ce64:	b.hi	40d6f4 <nftw@plt+0xab74>  // b.pmore
  40ce68:	ldr	w0, [x20, #148]
  40ce6c:	tbnz	w0, #31, 40d840 <nftw@plt+0xacc0>
  40ce70:	ldrb	w0, [x22, #228]
  40ce74:	cbnz	w0, 40d2d8 <nftw@plt+0xa758>
  40ce78:	ldp	x19, x20, [sp, #16]
  40ce7c:	ldp	x21, x22, [sp, #32]
  40ce80:	ldp	x23, x24, [sp, #48]
  40ce84:	ldp	x25, x26, [sp, #64]
  40ce88:	ldp	x27, x28, [sp, #80]
  40ce8c:	ldr	d8, [sp, #96]
  40ce90:	ldp	x29, x30, [sp], #160
  40ce94:	ret
  40ce98:	ldrsb	w0, [x27, #3]
  40ce9c:	tbnz	w0, #31, 40cee8 <nftw@plt+0xa368>
  40cea0:	mov	w0, w25
  40cea4:	bl	416358 <nftw@plt+0x137d8>
  40cea8:	mov	w2, w0
  40ceac:	mov	w25, #0x0                   	// #0
  40ceb0:	ubfiz	x1, x2, #3, #32
  40ceb4:	and	w2, w0, #0x7fffffff
  40ceb8:	ldr	x0, [x20, #128]
  40cebc:	add	x1, x1, #0x8
  40cec0:	cbz	x0, 40cec8 <nftw@plt+0xa348>
  40cec4:	ldr	w25, [x0, #4]
  40cec8:	str	w2, [sp, #120]
  40cecc:	bl	4615e8 <_obstack_memory_used@@Base+0x1a0>
  40ced0:	ldr	w2, [sp, #120]
  40ced4:	mov	x27, x0
  40ced8:	str	x0, [x20, #128]
  40cedc:	add	w1, w25, #0x1
  40cee0:	stp	w2, w25, [x0]
  40cee4:	b	40cab8 <nftw@plt+0x9f38>
  40cee8:	cmp	w3, #0x4
  40ceec:	str	xzr, [x20, #128]
  40cef0:	csel	w1, w3, w24, cs  // cs = hs, nlast
  40cef4:	csel	w4, w3, w24, cs  // cs = hs, nlast
  40cef8:	add	x1, x1, #0x1
  40cefc:	mov	x0, #0x0                   	// #0
  40cf00:	stp	w4, w3, [sp, #120]
  40cf04:	lsl	x1, x1, #3
  40cf08:	bl	4615e8 <_obstack_memory_used@@Base+0x1a0>
  40cf0c:	ldp	w4, w3, [sp, #120]
  40cf10:	mov	x5, x0
  40cf14:	str	x0, [x20, #128]
  40cf18:	add	x6, x27, #0x8
  40cf1c:	and	x4, x4, #0x7fffffff
  40cf20:	str	x4, [x5], #8
  40cf24:	cbz	w25, 40cf7c <nftw@plt+0xa3fc>
  40cf28:	add	x1, x27, #0x18
  40cf2c:	add	x4, x0, #0x18
  40cf30:	cmp	x5, x1
  40cf34:	sub	w1, w25, #0x1
  40cf38:	ccmp	x4, x6, #0x0, cc  // cc = lo, ul, last
  40cf3c:	ccmp	w1, #0x9, #0x0, ls  // ls = plast
  40cf40:	b.ls	40d6c0 <nftw@plt+0xab40>  // b.plast
  40cf44:	lsr	w4, w25, #1
  40cf48:	mov	x7, #0x8                   	// #8
  40cf4c:	mov	x1, x7
  40cf50:	add	x4, x7, w4, uxtw #4
  40cf54:	nop
  40cf58:	ldr	q0, [x27, x1]
  40cf5c:	str	q0, [x0, x1]
  40cf60:	add	x1, x1, #0x10
  40cf64:	cmp	x4, x1
  40cf68:	b.ne	40cf58 <nftw@plt+0xa3d8>  // b.any
  40cf6c:	and	x1, x25, #0xfffffffe
  40cf70:	tbz	w25, #0, 40cf7c <nftw@plt+0xa3fc>
  40cf74:	ldr	x4, [x6, x1, lsl #3]
  40cf78:	str	x4, [x5, x1, lsl #3]
  40cf7c:	mov	w1, w3
  40cf80:	mov	x27, x0
  40cf84:	str	w25, [x0, #4]
  40cf88:	b	40cab8 <nftw@plt+0x9f38>
  40cf8c:	mov	w1, w1
  40cf90:	add	x0, x0, #0x8
  40cf94:	adrp	x3, 40b000 <nftw@plt+0x8480>
  40cf98:	mov	x2, #0x8                   	// #8
  40cf9c:	add	x3, x3, #0xf60
  40cfa0:	bl	41c9b8 <nftw@plt+0x19e38>
  40cfa4:	b	40cae8 <nftw@plt+0x9f68>
  40cfa8:	ldrsb	w0, [x19, #3]
  40cfac:	tbnz	w0, #31, 40cfe8 <nftw@plt+0xa468>
  40cfb0:	mov	w0, w21
  40cfb4:	bl	416358 <nftw@plt+0x137d8>
  40cfb8:	mov	w26, w0
  40cfbc:	ldr	w21, [x19, #4]
  40cfc0:	mov	x0, x19
  40cfc4:	ubfiz	x1, x26, #3, #32
  40cfc8:	and	w26, w26, #0x7fffffff
  40cfcc:	add	x1, x1, #0x8
  40cfd0:	bl	4615e8 <_obstack_memory_used@@Base+0x1a0>
  40cfd4:	mov	x19, x0
  40cfd8:	add	w1, w21, #0x1
  40cfdc:	ldr	x0, [x20, #120]
  40cfe0:	stp	w26, w21, [x19]
  40cfe4:	b	40cb90 <nftw@plt+0xa010>
  40cfe8:	cmp	w26, #0x4
  40cfec:	mov	x0, #0x0                   	// #0
  40cff0:	csel	w2, w26, w25, cs  // cs = hs, nlast
  40cff4:	csel	w1, w26, w25, cs  // cs = hs, nlast
  40cff8:	add	x1, x1, #0x1
  40cffc:	str	w2, [sp, #120]
  40d000:	lsl	x1, x1, #3
  40d004:	bl	4615e8 <_obstack_memory_used@@Base+0x1a0>
  40d008:	ldr	w2, [sp, #120]
  40d00c:	and	x2, x2, #0x7fffffff
  40d010:	str	x2, [x0]
  40d014:	cbz	w21, 40d03c <nftw@plt+0xa4bc>
  40d018:	sub	w1, w21, #0x1
  40d01c:	mov	x2, #0x8                   	// #8
  40d020:	add	x1, x1, #0x2
  40d024:	lsl	x1, x1, #3
  40d028:	ldr	x3, [x19, x2]
  40d02c:	str	x3, [x0, x2]
  40d030:	add	x2, x2, #0x8
  40d034:	cmp	x1, x2
  40d038:	b.ne	40d028 <nftw@plt+0xa4a8>  // b.any
  40d03c:	mov	x19, x0
  40d040:	mov	w1, w26
  40d044:	str	w21, [x0, #4]
  40d048:	ldr	x0, [x20, #120]
  40d04c:	b	40cb90 <nftw@plt+0xa010>
  40d050:	mov	w1, w1
  40d054:	mov	x2, #0x8                   	// #8
  40d058:	adrp	x3, 40c000 <nftw@plt+0x9480>
  40d05c:	add	x0, x19, x2
  40d060:	add	x3, x3, #0x258
  40d064:	bl	41c9b8 <nftw@plt+0x19e38>
  40d068:	ldr	w1, [x19, #4]
  40d06c:	b	40cc60 <nftw@plt+0xa0e0>
  40d070:	ldrsb	w0, [x19, #3]
  40d074:	tbnz	w0, #31, 40d0ac <nftw@plt+0xa52c>
  40d078:	mov	w0, w21
  40d07c:	bl	416358 <nftw@plt+0x137d8>
  40d080:	mov	w26, w0
  40d084:	ldr	w21, [x19, #4]
  40d088:	mov	x0, x19
  40d08c:	ubfiz	x1, x26, #3, #32
  40d090:	and	w26, w26, #0x7fffffff
  40d094:	add	x1, x1, #0x8
  40d098:	bl	4615e8 <_obstack_memory_used@@Base+0x1a0>
  40d09c:	add	w1, w21, #0x1
  40d0a0:	mov	x19, x0
  40d0a4:	stp	w26, w21, [x0]
  40d0a8:	b	40cc30 <nftw@plt+0xa0b0>
  40d0ac:	cmp	w26, #0x4
  40d0b0:	mov	x0, #0x0                   	// #0
  40d0b4:	csel	w1, w26, w23, cs  // cs = hs, nlast
  40d0b8:	csel	w28, w26, w23, cs  // cs = hs, nlast
  40d0bc:	add	x1, x1, #0x1
  40d0c0:	and	x28, x28, #0x7fffffff
  40d0c4:	lsl	x1, x1, #3
  40d0c8:	bl	4615e8 <_obstack_memory_used@@Base+0x1a0>
  40d0cc:	str	x28, [x0]
  40d0d0:	cbz	w21, 40d0fc <nftw@plt+0xa57c>
  40d0d4:	sub	w1, w21, #0x1
  40d0d8:	mov	x2, #0x8                   	// #8
  40d0dc:	add	x1, x1, #0x2
  40d0e0:	lsl	x1, x1, #3
  40d0e4:	nop
  40d0e8:	ldr	x3, [x19, x2]
  40d0ec:	str	x3, [x0, x2]
  40d0f0:	add	x2, x2, #0x8
  40d0f4:	cmp	x1, x2
  40d0f8:	b.ne	40d0e8 <nftw@plt+0xa568>  // b.any
  40d0fc:	mov	w1, w26
  40d100:	mov	x19, x0
  40d104:	str	w21, [x0, #4]
  40d108:	b	40cc30 <nftw@plt+0xa0b0>
  40d10c:	ldrsb	w0, [x21, #3]
  40d110:	tbnz	w0, #31, 40d154 <nftw@plt+0xa5d4>
  40d114:	mov	w0, w26
  40d118:	bl	416358 <nftw@plt+0x137d8>
  40d11c:	mov	w25, w0
  40d120:	mov	w28, #0x0                   	// #0
  40d124:	ldr	x0, [x20, #136]
  40d128:	ubfiz	x1, x25, #3, #32
  40d12c:	add	x1, x1, #0x8
  40d130:	cbz	x0, 40d138 <nftw@plt+0xa5b8>
  40d134:	ldr	w28, [x0, #4]
  40d138:	bl	4615e8 <_obstack_memory_used@@Base+0x1a0>
  40d13c:	str	x0, [x20, #136]
  40d140:	and	w25, w25, #0x7fffffff
  40d144:	mov	x21, x0
  40d148:	add	w1, w28, #0x1
  40d14c:	stp	w25, w28, [x0]
  40d150:	b	40cd28 <nftw@plt+0xa1a8>
  40d154:	cmp	w3, #0x4
  40d158:	str	xzr, [x20, #136]
  40d15c:	csel	w1, w3, w24, cs  // cs = hs, nlast
  40d160:	csel	w2, w3, w24, cs  // cs = hs, nlast
  40d164:	add	x1, x1, #0x1
  40d168:	mov	x0, #0x0                   	// #0
  40d16c:	stp	w2, w3, [sp, #120]
  40d170:	add	x25, x25, #0x2
  40d174:	lsl	x1, x1, #3
  40d178:	bl	4615e8 <_obstack_memory_used@@Base+0x1a0>
  40d17c:	ldp	w2, w3, [sp, #120]
  40d180:	str	x0, [x20, #136]
  40d184:	lsl	x25, x25, #3
  40d188:	mov	x1, #0x8                   	// #8
  40d18c:	and	x2, x2, #0x7fffffff
  40d190:	str	x2, [x0]
  40d194:	cbz	w26, 40d1ac <nftw@plt+0xa62c>
  40d198:	ldr	x2, [x21, x1]
  40d19c:	str	x2, [x0, x1]
  40d1a0:	add	x1, x1, #0x8
  40d1a4:	cmp	x25, x1
  40d1a8:	b.ne	40d198 <nftw@plt+0xa618>  // b.any
  40d1ac:	mov	w1, w3
  40d1b0:	mov	x21, x0
  40d1b4:	str	w26, [x0, #4]
  40d1b8:	b	40cd28 <nftw@plt+0xa1a8>
  40d1bc:	ldrsb	w0, [x21, #3]
  40d1c0:	tbnz	w0, #31, 40d590 <nftw@plt+0xaa10>
  40d1c4:	mov	w0, w23
  40d1c8:	bl	416358 <nftw@plt+0x137d8>
  40d1cc:	mov	w2, w0
  40d1d0:	and	w24, w0, #0x7fffffff
  40d1d4:	ldr	x0, [x20, #136]
  40d1d8:	ubfiz	x1, x2, #3, #32
  40d1dc:	add	x1, x1, #0x8
  40d1e0:	mov	w23, #0x0                   	// #0
  40d1e4:	cbz	x0, 40d1ec <nftw@plt+0xa66c>
  40d1e8:	ldr	w23, [x0, #4]
  40d1ec:	bl	4615e8 <_obstack_memory_used@@Base+0x1a0>
  40d1f0:	str	x0, [x20, #136]
  40d1f4:	mov	x21, x0
  40d1f8:	add	w1, w23, #0x1
  40d1fc:	stp	w24, w23, [x0]
  40d200:	b	40cc84 <nftw@plt+0xa104>
  40d204:	ubfiz	x1, x21, #3, #32
  40d208:	mov	x0, #0x0                   	// #0
  40d20c:	add	x1, x1, #0x8
  40d210:	bl	4615e8 <_obstack_memory_used@@Base+0x1a0>
  40d214:	and	x1, x21, #0x7fffffff
  40d218:	str	x1, [x0]
  40d21c:	mov	x19, x0
  40d220:	tst	x21, #0x7fffffff
  40d224:	ldr	s8, [x20, #32]
  40d228:	b.ne	40d6e8 <nftw@plt+0xab68>  // b.any
  40d22c:	ldrsb	w0, [x0, #3]
  40d230:	tbnz	w0, #31, 40d5fc <nftw@plt+0xaa7c>
  40d234:	mov	w1, #0x1                   	// #1
  40d238:	mov	w0, #0x0                   	// #0
  40d23c:	bl	416358 <nftw@plt+0x137d8>
  40d240:	mov	w23, w0
  40d244:	ldr	w21, [x19, #4]
  40d248:	mov	x0, x19
  40d24c:	ubfiz	x1, x23, #3, #32
  40d250:	and	w23, w23, #0x7fffffff
  40d254:	add	x1, x1, #0x8
  40d258:	bl	4615e8 <_obstack_memory_used@@Base+0x1a0>
  40d25c:	mov	x19, x0
  40d260:	str	w23, [x0]
  40d264:	b	40cb28 <nftw@plt+0x9fa8>
  40d268:	str	wzr, [x19, #4]
  40d26c:	b	40cdc0 <nftw@plt+0xa240>
  40d270:	ubfiz	x1, x19, #3, #32
  40d274:	mov	x0, #0x0                   	// #0
  40d278:	add	x1, x1, #0x8
  40d27c:	bl	4615e8 <_obstack_memory_used@@Base+0x1a0>
  40d280:	str	x0, [x20, #136]
  40d284:	and	x19, x19, #0x7fffffff
  40d288:	str	x19, [x0]
  40d28c:	ldr	w0, [x26, #8]
  40d290:	b	40c9b0 <nftw@plt+0x9e30>
  40d294:	ubfiz	x1, x19, #3, #32
  40d298:	mov	x0, #0x0                   	// #0
  40d29c:	add	x1, x1, #0x8
  40d2a0:	bl	4615e8 <_obstack_memory_used@@Base+0x1a0>
  40d2a4:	str	x0, [x20, #128]
  40d2a8:	and	x19, x19, #0x7fffffff
  40d2ac:	str	x19, [x0]
  40d2b0:	b	40c9a0 <nftw@plt+0x9e20>
  40d2b4:	mov	w2, #0x28                  	// #40
  40d2b8:	mov	x1, #0x8                   	// #8
  40d2bc:	mov	x0, #0x0                   	// #0
  40d2c0:	umaddl	x1, w21, w2, x1
  40d2c4:	and	x21, x21, #0x7fffffff
  40d2c8:	bl	4615e8 <_obstack_memory_used@@Base+0x1a0>
  40d2cc:	str	x0, [x20, #120]
  40d2d0:	str	x21, [x0]
  40d2d4:	b	40c994 <nftw@plt+0x9e14>
  40d2d8:	ldr	w23, [x20, #148]
  40d2dc:	ldrb	w0, [x20, #114]
  40d2e0:	add	w23, w23, w19
  40d2e4:	cmp	w23, #0x63
  40d2e8:	b.le	40d400 <nftw@plt+0xa880>
  40d2ec:	cbz	w0, 40d354 <nftw@plt+0xa7d4>
  40d2f0:	ldr	w0, [x20, #144]
  40d2f4:	mov	w19, #0x0                   	// #0
  40d2f8:	cmp	w0, #0x3
  40d2fc:	b.le	40d320 <nftw@plt+0xa7a0>
  40d300:	ldr	x0, [x20, #8]
  40d304:	mov	w1, #0x20                  	// #32
  40d308:	add	w19, w19, #0x1
  40d30c:	bl	412fa0 <nftw@plt+0x10420>
  40d310:	ldr	w0, [x20, #144]
  40d314:	sub	w1, w0, #0x3
  40d318:	cmp	w1, w19
  40d31c:	b.gt	40d300 <nftw@plt+0xa780>
  40d320:	cmp	w19, w0
  40d324:	b.ge	40d344 <nftw@plt+0xa7c4>  // b.tcont
  40d328:	ldr	x0, [x20, #8]
  40d32c:	mov	w1, #0x20                  	// #32
  40d330:	add	w19, w19, #0x1
  40d334:	bl	412fa0 <nftw@plt+0x10420>
  40d338:	ldr	w0, [x20, #144]
  40d33c:	cmp	w0, w19
  40d340:	b.gt	40d328 <nftw@plt+0xa7a8>
  40d344:	ldr	x0, [x20, #8]
  40d348:	adrp	x1, 473000 <_obstack_memory_used@@Base+0x11bb8>
  40d34c:	add	x1, x1, #0xce8
  40d350:	bl	414bf0 <nftw@plt+0x12070>
  40d354:	ldr	x0, [x20, #8]
  40d358:	mov	w1, #0x20                  	// #32
  40d35c:	add	w19, w23, #0x1
  40d360:	bl	412fa0 <nftw@plt+0x10420>
  40d364:	ldr	w25, [x20, #148]
  40d368:	add	w25, w25, #0x1
  40d36c:	cmp	w23, w25
  40d370:	b.lt	40d3f4 <nftw@plt+0xa874>  // b.tstop
  40d374:	mov	w21, #0xcccd                	// #52429
  40d378:	mov	w26, #0x9998                	// #39320
  40d37c:	mov	w24, #0x851f                	// #34079
  40d380:	mov	w22, #0x6667                	// #26215
  40d384:	movk	w21, #0xcccc, lsl #16
  40d388:	movk	w26, #0x1999, lsl #16
  40d38c:	movk	w24, #0x51eb, lsl #16
  40d390:	movk	w22, #0x6666, lsl #16
  40d394:	b	40d3cc <nftw@plt+0xa84c>
  40d398:	smull	x1, w25, w24
  40d39c:	asr	x1, x1, #37
  40d3a0:	sub	w2, w1, w25, asr #31
  40d3a4:	add	w25, w25, #0x1
  40d3a8:	smull	x1, w2, w22
  40d3ac:	asr	x1, x1, #34
  40d3b0:	sub	w1, w1, w2, asr #31
  40d3b4:	add	w1, w1, w1, lsl #2
  40d3b8:	sub	w1, w2, w1, lsl #1
  40d3bc:	add	w1, w1, #0x30
  40d3c0:	bl	412fa0 <nftw@plt+0x10420>
  40d3c4:	cmp	w25, w19
  40d3c8:	b.eq	40d3f4 <nftw@plt+0xa874>  // b.none
  40d3cc:	madd	w1, w25, w21, w26
  40d3d0:	ldr	x0, [x20, #8]
  40d3d4:	ror	w1, w1, #1
  40d3d8:	cmp	w1, w26
  40d3dc:	b.ls	40d398 <nftw@plt+0xa818>  // b.plast
  40d3e0:	add	w25, w25, #0x1
  40d3e4:	mov	w1, #0x20                  	// #32
  40d3e8:	bl	412fa0 <nftw@plt+0x10420>
  40d3ec:	cmp	w25, w19
  40d3f0:	b.ne	40d3cc <nftw@plt+0xa84c>  // b.any
  40d3f4:	ldr	x0, [x20, #8]
  40d3f8:	bl	412f40 <nftw@plt+0x103c0>
  40d3fc:	ldrb	w0, [x20, #114]
  40d400:	cbnz	w0, 40d658 <nftw@plt+0xaad8>
  40d404:	ldr	x0, [x20, #8]
  40d408:	mov	w1, #0x20                  	// #32
  40d40c:	add	w21, w23, #0x1
  40d410:	bl	412fa0 <nftw@plt+0x10420>
  40d414:	ldr	w19, [x20, #148]
  40d418:	add	w19, w19, #0x1
  40d41c:	cmp	w23, w19
  40d420:	b.lt	40d49c <nftw@plt+0xa91c>  // b.tstop
  40d424:	mov	w22, #0xcccd                	// #52429
  40d428:	mov	w25, #0x9998                	// #39320
  40d42c:	mov	w24, #0x6667                	// #26215
  40d430:	movk	w22, #0xcccc, lsl #16
  40d434:	movk	w25, #0x1999, lsl #16
  40d438:	movk	w24, #0x6666, lsl #16
  40d43c:	b	40d474 <nftw@plt+0xa8f4>
  40d440:	smull	x1, w19, w24
  40d444:	asr	x1, x1, #34
  40d448:	sub	w2, w1, w19, asr #31
  40d44c:	add	w19, w19, #0x1
  40d450:	smull	x1, w2, w24
  40d454:	asr	x1, x1, #34
  40d458:	sub	w1, w1, w2, asr #31
  40d45c:	add	w1, w1, w1, lsl #2
  40d460:	sub	w1, w2, w1, lsl #1
  40d464:	add	w1, w1, #0x30
  40d468:	bl	412fa0 <nftw@plt+0x10420>
  40d46c:	cmp	w21, w19
  40d470:	b.eq	40d49c <nftw@plt+0xa91c>  // b.none
  40d474:	madd	w1, w19, w22, w25
  40d478:	ldr	x0, [x20, #8]
  40d47c:	ror	w1, w1, #1
  40d480:	cmp	w1, w25
  40d484:	b.ls	40d440 <nftw@plt+0xa8c0>  // b.plast
  40d488:	add	w19, w19, #0x1
  40d48c:	mov	w1, #0x20                  	// #32
  40d490:	bl	412fa0 <nftw@plt+0x10420>
  40d494:	cmp	w21, w19
  40d498:	b.ne	40d474 <nftw@plt+0xa8f4>  // b.any
  40d49c:	ldr	x0, [x20, #8]
  40d4a0:	bl	412f40 <nftw@plt+0x103c0>
  40d4a4:	ldrb	w0, [x20, #114]
  40d4a8:	cbz	w0, 40d514 <nftw@plt+0xa994>
  40d4ac:	ldr	w0, [x20, #144]
  40d4b0:	mov	w19, #0x0                   	// #0
  40d4b4:	cmp	w0, #0x3
  40d4b8:	b.le	40d4e0 <nftw@plt+0xa960>
  40d4bc:	nop
  40d4c0:	ldr	x0, [x20, #8]
  40d4c4:	mov	w1, #0x20                  	// #32
  40d4c8:	add	w19, w19, #0x1
  40d4cc:	bl	412fa0 <nftw@plt+0x10420>
  40d4d0:	ldr	w0, [x20, #144]
  40d4d4:	sub	w1, w0, #0x3
  40d4d8:	cmp	w1, w19
  40d4dc:	b.gt	40d4c0 <nftw@plt+0xa940>
  40d4e0:	cmp	w19, w0
  40d4e4:	b.ge	40d504 <nftw@plt+0xa984>  // b.tcont
  40d4e8:	ldr	x0, [x20, #8]
  40d4ec:	mov	w1, #0x20                  	// #32
  40d4f0:	add	w19, w19, #0x1
  40d4f4:	bl	412fa0 <nftw@plt+0x10420>
  40d4f8:	ldr	w0, [x20, #144]
  40d4fc:	cmp	w0, w19
  40d500:	b.gt	40d4e8 <nftw@plt+0xa968>
  40d504:	ldr	x0, [x20, #8]
  40d508:	adrp	x1, 473000 <_obstack_memory_used@@Base+0x11bb8>
  40d50c:	add	x1, x1, #0xce8
  40d510:	bl	414bf0 <nftw@plt+0x12070>
  40d514:	ldr	x0, [x20, #8]
  40d518:	mov	w1, #0x20                  	// #32
  40d51c:	mov	w21, #0x6667                	// #26215
  40d520:	add	w22, w23, #0x1
  40d524:	movk	w21, #0x6666, lsl #16
  40d528:	bl	412fa0 <nftw@plt+0x10420>
  40d52c:	ldr	w19, [x20, #148]
  40d530:	add	w19, w19, #0x1
  40d534:	cmp	w23, w19
  40d538:	b.lt	40d56c <nftw@plt+0xa9ec>  // b.tstop
  40d53c:	nop
  40d540:	smull	x1, w19, w21
  40d544:	ldr	x0, [x20, #8]
  40d548:	asr	x1, x1, #34
  40d54c:	sub	w1, w1, w19, asr #31
  40d550:	add	w1, w1, w1, lsl #2
  40d554:	sub	w1, w19, w1, lsl #1
  40d558:	add	w19, w19, #0x1
  40d55c:	add	w1, w1, #0x30
  40d560:	bl	412fa0 <nftw@plt+0x10420>
  40d564:	cmp	w19, w22
  40d568:	b.ne	40d540 <nftw@plt+0xa9c0>  // b.any
  40d56c:	ldr	x0, [x20, #8]
  40d570:	ldp	x19, x20, [sp, #16]
  40d574:	ldp	x21, x22, [sp, #32]
  40d578:	ldp	x23, x24, [sp, #48]
  40d57c:	ldp	x25, x26, [sp, #64]
  40d580:	ldp	x27, x28, [sp, #80]
  40d584:	ldr	d8, [sp, #96]
  40d588:	ldp	x29, x30, [sp], #160
  40d58c:	b	412f40 <nftw@plt+0x103c0>
  40d590:	cmp	w24, #0x4
  40d594:	mov	w0, #0x4                   	// #4
  40d598:	csel	w1, w24, w0, cs  // cs = hs, nlast
  40d59c:	str	xzr, [x20, #136]
  40d5a0:	add	x1, x1, #0x1
  40d5a4:	csel	w25, w24, w0, cs  // cs = hs, nlast
  40d5a8:	mov	x0, #0x0                   	// #0
  40d5ac:	and	x25, x25, #0x7fffffff
  40d5b0:	lsl	x1, x1, #3
  40d5b4:	bl	4615e8 <_obstack_memory_used@@Base+0x1a0>
  40d5b8:	str	x0, [x20, #136]
  40d5bc:	str	x25, [x0]
  40d5c0:	cbz	w23, 40d5ec <nftw@plt+0xaa6c>
  40d5c4:	sub	w3, w23, #0x1
  40d5c8:	mov	x1, #0x8                   	// #8
  40d5cc:	add	x3, x3, #0x2
  40d5d0:	lsl	x3, x3, #3
  40d5d4:	nop
  40d5d8:	ldr	x2, [x21, x1]
  40d5dc:	str	x2, [x0, x1]
  40d5e0:	add	x1, x1, #0x8
  40d5e4:	cmp	x3, x1
  40d5e8:	b.ne	40d5d8 <nftw@plt+0xaa58>  // b.any
  40d5ec:	mov	w1, w24
  40d5f0:	mov	x21, x0
  40d5f4:	str	w23, [x0, #4]
  40d5f8:	b	40cc84 <nftw@plt+0xa104>
  40d5fc:	mov	x1, #0x28                  	// #40
  40d600:	mov	x0, #0x0                   	// #0
  40d604:	bl	4615e8 <_obstack_memory_used@@Base+0x1a0>
  40d608:	mov	x19, x0
  40d60c:	mov	x1, #0x8                   	// #8
  40d610:	mov	x0, #0x4                   	// #4
  40d614:	mov	w2, #0x1                   	// #1
  40d618:	str	x0, [x19]
  40d61c:	b	40cb38 <nftw@plt+0x9fb8>
  40d620:	mov	x1, #0x10                  	// #16
  40d624:	mov	x0, #0x0                   	// #0
  40d628:	bl	4615e8 <_obstack_memory_used@@Base+0x1a0>
  40d62c:	mov	x19, x0
  40d630:	mov	x0, #0x1                   	// #1
  40d634:	mov	x1, #0x8                   	// #8
  40d638:	mov	w2, w0
  40d63c:	str	x0, [x19]
  40d640:	ldr	s8, [x20, #32]
  40d644:	b	40cb38 <nftw@plt+0x9fb8>
  40d648:	ldr	w2, [x20, #144]
  40d64c:	add	w2, w2, #0x2
  40d650:	add	x0, x0, w2, sxtw
  40d654:	b	40ce48 <nftw@plt+0xa2c8>
  40d658:	ldr	w0, [x20, #144]
  40d65c:	mov	w19, #0x0                   	// #0
  40d660:	cmp	w0, #0x3
  40d664:	b.le	40d688 <nftw@plt+0xab08>
  40d668:	ldr	x0, [x20, #8]
  40d66c:	mov	w1, #0x20                  	// #32
  40d670:	add	w19, w19, #0x1
  40d674:	bl	412fa0 <nftw@plt+0x10420>
  40d678:	ldr	w0, [x20, #144]
  40d67c:	sub	w1, w0, #0x3
  40d680:	cmp	w1, w19
  40d684:	b.gt	40d668 <nftw@plt+0xaae8>
  40d688:	cmp	w19, w0
  40d68c:	b.ge	40d6ac <nftw@plt+0xab2c>  // b.tcont
  40d690:	ldr	x0, [x20, #8]
  40d694:	mov	w1, #0x20                  	// #32
  40d698:	add	w19, w19, #0x1
  40d69c:	bl	412fa0 <nftw@plt+0x10420>
  40d6a0:	ldr	w0, [x20, #144]
  40d6a4:	cmp	w0, w19
  40d6a8:	b.gt	40d690 <nftw@plt+0xab10>
  40d6ac:	ldr	x0, [x20, #8]
  40d6b0:	adrp	x1, 473000 <_obstack_memory_used@@Base+0x11bb8>
  40d6b4:	add	x1, x1, #0xce8
  40d6b8:	bl	414bf0 <nftw@plt+0x12070>
  40d6bc:	b	40d404 <nftw@plt+0xa884>
  40d6c0:	ubfiz	x4, x1, #3, #32
  40d6c4:	mov	x1, #0x8                   	// #8
  40d6c8:	add	x4, x4, #0x10
  40d6cc:	nop
  40d6d0:	ldr	x5, [x27, x1]
  40d6d4:	str	x5, [x0, x1]
  40d6d8:	add	x1, x1, #0x8
  40d6dc:	cmp	x4, x1
  40d6e0:	b.ne	40d6d0 <nftw@plt+0xab50>  // b.any
  40d6e4:	b	40cf7c <nftw@plt+0xa3fc>
  40d6e8:	mov	x1, #0x8                   	// #8
  40d6ec:	mov	w2, #0x1                   	// #1
  40d6f0:	b	40cb38 <nftw@plt+0x9fb8>
  40d6f4:	sub	w0, w0, w2
  40d6f8:	str	w0, [x20, #148]
  40d6fc:	b	40ce6c <nftw@plt+0xa2ec>
  40d700:	mov	x1, #0x28                  	// #40
  40d704:	mov	x0, #0x0                   	// #0
  40d708:	bl	4615e8 <_obstack_memory_used@@Base+0x1a0>
  40d70c:	mov	x27, x0
  40d710:	str	x27, [x20, #128]
  40d714:	mov	w25, #0x0                   	// #0
  40d718:	mov	x0, #0x4                   	// #4
  40d71c:	add	w1, w25, #0x1
  40d720:	str	x0, [x27]
  40d724:	b	40cab8 <nftw@plt+0x9f38>
  40d728:	mov	x1, #0x28                  	// #40
  40d72c:	mov	x0, #0x0                   	// #0
  40d730:	bl	4615e8 <_obstack_memory_used@@Base+0x1a0>
  40d734:	mov	x21, x0
  40d738:	str	x21, [x20, #136]
  40d73c:	mov	x0, #0x4                   	// #4
  40d740:	mov	w23, #0x0                   	// #0
  40d744:	add	w1, w23, #0x1
  40d748:	str	x0, [x21]
  40d74c:	b	40cc84 <nftw@plt+0xa104>
  40d750:	adrp	x2, 473000 <_obstack_memory_used@@Base+0x11bb8>
  40d754:	adrp	x0, 473000 <_obstack_memory_used@@Base+0x11bb8>
  40d758:	add	x2, x2, #0xcb8
  40d75c:	add	x0, x0, #0xc50
  40d760:	mov	w1, #0x49b                 	// #1179
  40d764:	bl	402bf0 <nftw@plt+0x70>
  40d768:	adrp	x2, 473000 <_obstack_memory_used@@Base+0x11bb8>
  40d76c:	adrp	x0, 473000 <_obstack_memory_used@@Base+0x11bb8>
  40d770:	add	x2, x2, #0xcb8
  40d774:	add	x0, x0, #0xc50
  40d778:	mov	w1, #0x4bc                 	// #1212
  40d77c:	bl	402bf0 <nftw@plt+0x70>
  40d780:	adrp	x2, 473000 <_obstack_memory_used@@Base+0x11bb8>
  40d784:	adrp	x0, 473000 <_obstack_memory_used@@Base+0x11bb8>
  40d788:	add	x2, x2, #0xcb8
  40d78c:	add	x0, x0, #0xc50
  40d790:	mov	w1, #0x4cd                 	// #1229
  40d794:	bl	402bf0 <nftw@plt+0x70>
  40d798:	adrp	x2, 473000 <_obstack_memory_used@@Base+0x11bb8>
  40d79c:	adrp	x0, 473000 <_obstack_memory_used@@Base+0x11bb8>
  40d7a0:	add	x2, x2, #0xcb8
  40d7a4:	add	x0, x0, #0xc50
  40d7a8:	mov	w1, #0x4a4                 	// #1188
  40d7ac:	bl	402bf0 <nftw@plt+0x70>
  40d7b0:	adrp	x2, 473000 <_obstack_memory_used@@Base+0x11bb8>
  40d7b4:	adrp	x0, 473000 <_obstack_memory_used@@Base+0x11bb8>
  40d7b8:	add	x2, x2, #0xcb8
  40d7bc:	add	x0, x0, #0xc50
  40d7c0:	mov	w1, #0x4ad                 	// #1197
  40d7c4:	bl	402bf0 <nftw@plt+0x70>
  40d7c8:	adrp	x2, 473000 <_obstack_memory_used@@Base+0x11bb8>
  40d7cc:	adrp	x0, 473000 <_obstack_memory_used@@Base+0x11bb8>
  40d7d0:	add	x2, x2, #0xcd0
  40d7d4:	add	x0, x0, #0xc50
  40d7d8:	mov	w1, #0xa5                  	// #165
  40d7dc:	bl	402bf0 <nftw@plt+0x70>
  40d7e0:	adrp	x2, 473000 <_obstack_memory_used@@Base+0x11bb8>
  40d7e4:	adrp	x0, 473000 <_obstack_memory_used@@Base+0x11bb8>
  40d7e8:	add	x2, x2, #0xcb8
  40d7ec:	add	x0, x0, #0xc50
  40d7f0:	mov	w1, #0x4b6                 	// #1206
  40d7f4:	bl	402bf0 <nftw@plt+0x70>
  40d7f8:	adrp	x2, 473000 <_obstack_memory_used@@Base+0x11bb8>
  40d7fc:	adrp	x0, 473000 <_obstack_memory_used@@Base+0x11bb8>
  40d800:	add	x2, x2, #0xcb8
  40d804:	add	x0, x0, #0xc50
  40d808:	mov	w1, #0x4d6                 	// #1238
  40d80c:	bl	402bf0 <nftw@plt+0x70>
  40d810:	adrp	x2, 473000 <_obstack_memory_used@@Base+0x11bb8>
  40d814:	adrp	x0, 473000 <_obstack_memory_used@@Base+0x11bb8>
  40d818:	add	x2, x2, #0xcb8
  40d81c:	add	x0, x0, #0xc50
  40d820:	mov	w1, #0x4d8                 	// #1240
  40d824:	bl	402bf0 <nftw@plt+0x70>
  40d828:	adrp	x2, 473000 <_obstack_memory_used@@Base+0x11bb8>
  40d82c:	adrp	x0, 473000 <_obstack_memory_used@@Base+0x11bb8>
  40d830:	add	x2, x2, #0xce0
  40d834:	add	x0, x0, #0xc50
  40d838:	mov	w1, #0x36a                 	// #874
  40d83c:	bl	402bf0 <nftw@plt+0x70>
  40d840:	adrp	x2, 473000 <_obstack_memory_used@@Base+0x11bb8>
  40d844:	adrp	x0, 473000 <_obstack_memory_used@@Base+0x11bb8>
  40d848:	add	x2, x2, #0xce0
  40d84c:	add	x0, x0, #0xc50
  40d850:	mov	w1, #0x386                 	// #902
  40d854:	bl	402bf0 <nftw@plt+0x70>
  40d858:	adrp	x2, 473000 <_obstack_memory_used@@Base+0x11bb8>
  40d85c:	adrp	x0, 473000 <_obstack_memory_used@@Base+0x11bb8>
  40d860:	add	x2, x2, #0xcb8
  40d864:	add	x0, x0, #0xc50
  40d868:	mov	w1, #0x4d3                 	// #1235
  40d86c:	bl	402bf0 <nftw@plt+0x70>
  40d870:	adrp	x2, 473000 <_obstack_memory_used@@Base+0x11bb8>
  40d874:	adrp	x0, 473000 <_obstack_memory_used@@Base+0x11bb8>
  40d878:	add	x2, x2, #0xcb8
  40d87c:	add	x0, x0, #0xc50
  40d880:	mov	w1, #0x4d4                 	// #1236
  40d884:	bl	402bf0 <nftw@plt+0x70>
  40d888:	stp	x29, x30, [sp, #-224]!
  40d88c:	adrp	x2, 4a4000 <_obstack_memory_used@@Base+0x42bb8>
  40d890:	mov	w3, #0x4                   	// #4
  40d894:	mov	x29, sp
  40d898:	stp	x21, x22, [sp, #32]
  40d89c:	mov	w21, w1
  40d8a0:	mov	w22, #0x1                   	// #1
  40d8a4:	ldr	x1, [x2, #920]
  40d8a8:	mov	x2, x0
  40d8ac:	stp	x19, x20, [sp, #16]
  40d8b0:	mov	x20, x0
  40d8b4:	add	x0, sp, #0x48
  40d8b8:	bl	40c880 <nftw@plt+0x9d00>
  40d8bc:	stp	w21, w22, [sp, #56]
  40d8c0:	add	x0, sp, #0x48
  40d8c4:	mov	w3, w22
  40d8c8:	add	x1, sp, #0x38
  40d8cc:	mov	w2, #0x0                   	// #0
  40d8d0:	bl	40c438 <nftw@plt+0x98b8>
  40d8d4:	mov	w19, w0
  40d8d8:	tst	w0, #0xff
  40d8dc:	b.eq	40d8f4 <nftw@plt+0xad74>  // b.none
  40d8e0:	mov	w2, w22
  40d8e4:	mov	w1, w21
  40d8e8:	mov	x0, x20
  40d8ec:	mov	x3, #0x0                   	// #0
  40d8f0:	bl	437d98 <nftw@plt+0x35218>
  40d8f4:	ldr	x0, [sp, #208]
  40d8f8:	cbz	x0, 40d908 <nftw@plt+0xad88>
  40d8fc:	ldrsb	w1, [x0, #3]
  40d900:	tbnz	w1, #31, 40d960 <nftw@plt+0xade0>
  40d904:	bl	402910 <free@plt>
  40d908:	ldr	x0, [sp, #200]
  40d90c:	cbz	x0, 40d91c <nftw@plt+0xad9c>
  40d910:	ldrsb	w1, [x0, #3]
  40d914:	tbnz	w1, #31, 40d970 <nftw@plt+0xadf0>
  40d918:	bl	402910 <free@plt>
  40d91c:	ldr	x0, [sp, #192]
  40d920:	cbz	x0, 40d930 <nftw@plt+0xadb0>
  40d924:	ldrsb	w1, [x0, #3]
  40d928:	tbnz	w1, #31, 40d968 <nftw@plt+0xade8>
  40d92c:	bl	402910 <free@plt>
  40d930:	ldr	w0, [sp, #140]
  40d934:	cmn	w0, #0x1
  40d938:	b.eq	40d94c <nftw@plt+0xadcc>  // b.none
  40d93c:	ldr	x0, [sp, #128]
  40d940:	ldr	x1, [sp, #176]
  40d944:	ldr	x0, [x0]
  40d948:	bl	414bf0 <nftw@plt+0x12070>
  40d94c:	mov	w0, w19
  40d950:	ldp	x19, x20, [sp, #16]
  40d954:	ldp	x21, x22, [sp, #32]
  40d958:	ldp	x29, x30, [sp], #224
  40d95c:	ret
  40d960:	str	wzr, [x0, #4]
  40d964:	b	40d908 <nftw@plt+0xad88>
  40d968:	str	wzr, [x0, #4]
  40d96c:	b	40d930 <nftw@plt+0xadb0>
  40d970:	str	wzr, [x0, #4]
  40d974:	b	40d91c <nftw@plt+0xad9c>
  40d978:	stp	x29, x30, [sp, #-480]!
  40d97c:	mov	x29, sp
  40d980:	stp	x21, x22, [sp, #32]
  40d984:	mov	x21, x0
  40d988:	str	x0, [sp, #184]
  40d98c:	ldr	x0, [x0]
  40d990:	stp	x19, x20, [sp, #16]
  40d994:	mov	x19, x1
  40d998:	mov	w20, w2
  40d99c:	bl	412f40 <nftw@plt+0x103c0>
  40d9a0:	mov	w1, #0x0                   	// #0
  40d9a4:	mov	x0, x19
  40d9a8:	bl	437c48 <nftw@plt+0x350c8>
  40d9ac:	cmp	w0, #0x1
  40d9b0:	ldrb	w1, [x21, #108]
  40d9b4:	mov	w3, w0
  40d9b8:	cset	w0, ls  // ls = plast
  40d9bc:	eor	w1, w1, #0x1
  40d9c0:	orr	w0, w0, w1
  40d9c4:	tst	w0, #0xff
  40d9c8:	b.eq	40d9dc <nftw@plt+0xae5c>  // b.none
  40d9cc:	ldp	x19, x20, [sp, #16]
  40d9d0:	ldp	x21, x22, [sp, #32]
  40d9d4:	ldp	x29, x30, [sp], #480
  40d9d8:	ret
  40d9dc:	ldr	w0, [x21, #200]
  40d9e0:	cmp	w0, w3
  40d9e4:	b.ne	40d9f0 <nftw@plt+0xae70>  // b.any
  40d9e8:	ldr	w0, [x19, #120]
  40d9ec:	cbz	w0, 40d9cc <nftw@plt+0xae4c>
  40d9f0:	ldr	x21, [sp, #184]
  40d9f4:	mov	x1, #0x8                   	// #8
  40d9f8:	str	wzr, [sp, #156]
  40d9fc:	str	x1, [sp, #160]
  40da00:	ldr	x0, [x21]
  40da04:	str	w3, [x21, #200]
  40da08:	bl	412608 <nftw@plt+0xfa88>
  40da0c:	mov	x1, x0
  40da10:	ldr	x0, [x21]
  40da14:	str	x1, [sp, #192]
  40da18:	mov	x1, #0x0                   	// #0
  40da1c:	bl	412578 <nftw@plt+0xf9f8>
  40da20:	add	x0, sp, #0x148
  40da24:	mov	w3, w20
  40da28:	mov	x2, x19
  40da2c:	mov	x1, x21
  40da30:	bl	40c880 <nftw@plt+0x9d00>
  40da34:	ldr	x0, [sp, #464]
  40da38:	cbz	x0, 40e190 <nftw@plt+0xb610>
  40da3c:	stp	x23, x24, [sp, #48]
  40da40:	stp	x25, x26, [sp, #64]
  40da44:	stp	x27, x28, [sp, #80]
  40da48:	adrp	x28, 473000 <_obstack_memory_used@@Base+0x11bb8>
  40da4c:	add	x1, x28, #0xce8
  40da50:	str	x1, [sp, #136]
  40da54:	nop
  40da58:	ldr	w1, [x0, #4]
  40da5c:	ldr	w2, [sp, #156]
  40da60:	cmp	w1, w2
  40da64:	b.le	40e184 <nftw@plt+0xb604>
  40da68:	ldr	x1, [sp, #184]
  40da6c:	ldr	x3, [sp, #160]
  40da70:	ldrb	w1, [x1, #223]
  40da74:	add	x20, x0, x3
  40da78:	cbz	w1, 40ecc4 <nftw@plt+0xc144>
  40da7c:	cbnz	w2, 40f07c <nftw@plt+0xc4fc>
  40da80:	ldp	w1, w0, [x20]
  40da84:	str	x1, [sp, #96]
  40da88:	str	x0, [sp, #128]
  40da8c:	cmp	x0, x1
  40da90:	b.lt	40e164 <nftw@plt+0xb5e4>  // b.tstop
  40da94:	nop
  40da98:	ldr	x2, [sp, #96]
  40da9c:	ldr	x0, [sp, #352]
  40daa0:	mov	w1, w2
  40daa4:	mov	w22, w2
  40daa8:	mov	w24, w2
  40daac:	bl	419390 <nftw@plt+0x16810>
  40dab0:	mov	x19, x0
  40dab4:	mov	x23, x1
  40dab8:	cbz	x0, 40e14c <nftw@plt+0xb5cc>
  40dabc:	ldr	x0, [sp, #456]
  40dac0:	mov	w20, #0x0                   	// #0
  40dac4:	mov	w25, #0xffffffff            	// #-1
  40dac8:	mov	w26, #0xfffffffe            	// #-2
  40dacc:	cbz	x0, 40db24 <nftw@plt+0xafa4>
  40dad0:	ldr	w1, [x0, #4]
  40dad4:	cmp	w1, w20
  40dad8:	b.ls	40db24 <nftw@plt+0xafa4>  // b.plast
  40dadc:	add	x0, x0, w20, uxtw #3
  40dae0:	ldr	x27, [x0, #8]
  40dae4:	mov	x0, x27
  40dae8:	bl	439b08 <nftw@plt+0x36f88>
  40daec:	tst	w0, #0xff
  40daf0:	b.eq	40db18 <nftw@plt+0xaf98>  // b.none
  40daf4:	ldp	w1, w0, [x27]
  40daf8:	cmp	w1, w0
  40dafc:	b.ne	40f3e4 <nftw@plt+0xc864>  // b.any
  40db00:	ldr	x1, [sp, #352]
  40db04:	mov	w2, w24
  40db08:	mov	x0, x27
  40db0c:	bl	4399e8 <nftw@plt+0x36e68>
  40db10:	tst	w0, #0xff
  40db14:	b.ne	40e544 <nftw@plt+0xb9c4>  // b.any
  40db18:	ldr	x0, [sp, #456]
  40db1c:	add	w20, w20, #0x1
  40db20:	cbnz	x0, 40dad0 <nftw@plt+0xaf50>
  40db24:	ldr	w0, [sp, #396]
  40db28:	cmn	w0, #0x1
  40db2c:	b.eq	40db48 <nftw@plt+0xafc8>  // b.none
  40db30:	ldr	x0, [sp, #384]
  40db34:	ldr	x1, [sp, #432]
  40db38:	ldr	x0, [x0]
  40db3c:	bl	414bf0 <nftw@plt+0x12070>
  40db40:	mov	w0, #0xffffffff            	// #-1
  40db44:	str	w0, [sp, #396]
  40db48:	cmp	w23, #0x0
  40db4c:	mov	w20, w23
  40db50:	b.le	40ee7c <nftw@plt+0xc2fc>
  40db54:	add	x23, x19, w23, sxtw
  40db58:	ldurb	w0, [x23, #-1]
  40db5c:	cmp	w0, #0x20
  40db60:	and	w0, w0, #0xfffffffb
  40db64:	ccmp	w0, #0x9, #0x4, ne  // ne = any
  40db68:	b.ne	40db78 <nftw@plt+0xaff8>  // b.any
  40db6c:	sub	x23, x23, #0x1
  40db70:	subs	w20, w20, #0x1
  40db74:	b.ne	40db58 <nftw@plt+0xafd8>  // b.any
  40db78:	ldrb	w1, [sp, #442]
  40db7c:	ldrsw	x0, [sp, #476]
  40db80:	add	x19, x19, x0
  40db84:	cbz	w1, 40e6ec <nftw@plt+0xbb6c>
  40db88:	mov	w0, w24
  40db8c:	bl	409e40 <nftw@plt+0x72c0>
  40db90:	ldr	w1, [sp, #472]
  40db94:	mov	w23, w0
  40db98:	mov	w25, #0x0                   	// #0
  40db9c:	sub	w1, w1, w0
  40dba0:	cmp	w1, #0x0
  40dba4:	b.le	40dbc8 <nftw@plt+0xb048>
  40dba8:	ldr	x0, [sp, #336]
  40dbac:	mov	w1, #0x20                  	// #32
  40dbb0:	add	w25, w25, #0x1
  40dbb4:	bl	412fa0 <nftw@plt+0x10420>
  40dbb8:	ldr	w0, [sp, #472]
  40dbbc:	sub	w0, w0, w23
  40dbc0:	cmp	w0, w25
  40dbc4:	b.gt	40dba8 <nftw@plt+0xb028>
  40dbc8:	ldr	x0, [sp, #336]
  40dbcc:	mov	w2, w22
  40dbd0:	adrp	x1, 473000 <_obstack_memory_used@@Base+0x11bb8>
  40dbd4:	add	x1, x1, #0xd70
  40dbd8:	bl	414aa8 <nftw@plt+0x11f28>
  40dbdc:	ldr	w2, [sp, #476]
  40dbe0:	add	w28, w2, #0x1
  40dbe4:	cmp	w28, w20
  40dbe8:	b.gt	40e708 <nftw@plt+0xbb88>
  40dbec:	add	w20, w20, #0x1
  40dbf0:	add	x26, sp, #0x12c
  40dbf4:	add	x27, sp, #0x180
  40dbf8:	mov	w23, #0x7fffffff            	// #2147483647
  40dbfc:	mov	w25, #0x0                   	// #0
  40dc00:	b	40dc40 <nftw@plt+0xb0c0>
  40dc04:	ldrb	w0, [x19]
  40dc08:	mov	w1, #0x20                  	// #32
  40dc0c:	and	w3, w0, #0xfffffffb
  40dc10:	cmp	w0, #0x0
  40dc14:	ccmp	w3, #0x9, #0x4, ne  // ne = any
  40dc18:	cset	w3, ne  // ne = any
  40dc1c:	cmp	w0, w1
  40dc20:	csel	w3, w3, wzr, ne  // ne = any
  40dc24:	cbnz	w3, 40dc80 <nftw@plt+0xb100>
  40dc28:	ldr	x0, [sp, #336]
  40dc2c:	add	w28, w28, #0x1
  40dc30:	add	x19, x19, #0x1
  40dc34:	bl	412fa0 <nftw@plt+0x10420>
  40dc38:	cmp	w28, w20
  40dc3c:	b.eq	40dcb0 <nftw@plt+0xb130>  // b.none
  40dc40:	ldrb	w0, [sp, #440]
  40dc44:	cbz	w0, 40dc04 <nftw@plt+0xb084>
  40dc48:	mov	x6, x26
  40dc4c:	add	x5, sp, #0x128
  40dc50:	mov	w2, w28
  40dc54:	mov	w1, w22
  40dc58:	add	x0, sp, #0x148
  40dc5c:	mov	w4, #0x7fffffff            	// #2147483647
  40dc60:	mov	w3, #0x0                   	// #0
  40dc64:	bl	40c0d0 <nftw@plt+0x9550>
  40dc68:	tst	w0, #0xff
  40dc6c:	b.eq	40e204 <nftw@plt+0xb684>  // b.none
  40dc70:	ldr	w1, [sp, #296]
  40dc74:	mov	x0, x27
  40dc78:	bl	40c2c8 <nftw@plt+0x9748>
  40dc7c:	b	40dc04 <nftw@plt+0xb084>
  40dc80:	mov	w1, w0
  40dc84:	mov	w25, w28
  40dc88:	mov	w0, #0x7fffffff            	// #2147483647
  40dc8c:	cmp	w23, w0
  40dc90:	b.ne	40dc28 <nftw@plt+0xb0a8>  // b.any
  40dc94:	ldr	x0, [sp, #336]
  40dc98:	mov	w23, w28
  40dc9c:	add	w28, w28, #0x1
  40dca0:	add	x19, x19, #0x1
  40dca4:	bl	412fa0 <nftw@plt+0x10420>
  40dca8:	cmp	w28, w20
  40dcac:	b.ne	40dc40 <nftw@plt+0xb0c0>  // b.any
  40dcb0:	ldr	w0, [sp, #396]
  40dcb4:	cmn	w0, #0x1
  40dcb8:	b.eq	40dcd4 <nftw@plt+0xb154>  // b.none
  40dcbc:	ldr	x0, [sp, #384]
  40dcc0:	ldr	x1, [sp, #432]
  40dcc4:	ldr	x0, [x0]
  40dcc8:	bl	414bf0 <nftw@plt+0x12070>
  40dccc:	mov	w0, #0xffffffff            	// #-1
  40dcd0:	str	w0, [sp, #396]
  40dcd4:	ldr	x0, [sp, #336]
  40dcd8:	bl	412f40 <nftw@plt+0x103c0>
  40dcdc:	ldr	x0, [sp, #448]
  40dce0:	cbz	x0, 40e240 <nftw@plt+0xb6c0>
  40dce4:	ldr	w4, [x0, #4]
  40dce8:	add	x2, x0, #0x8
  40dcec:	mov	w3, #0x28                  	// #40
  40dcf0:	mov	x1, x2
  40dcf4:	umaddl	x3, w4, w3, x2
  40dcf8:	cmp	x3, x1
  40dcfc:	b.eq	40dedc <nftw@plt+0xb35c>  // b.none
  40dd00:	ldr	w5, [x1, #16]
  40dd04:	cmp	w5, #0x2
  40dd08:	b.eq	40dedc <nftw@plt+0xb35c>  // b.none
  40dd0c:	ldr	w6, [x1]
  40dd10:	ldr	w5, [x1, #8]
  40dd14:	cmp	w6, w5
  40dd18:	b.hi	40f36c <nftw@plt+0xc7ec>  // b.pmore
  40dd1c:	cmp	w6, w22
  40dd20:	add	x1, x1, #0x28
  40dd24:	ccmp	w5, w22, #0x0, ls  // ls = plast
  40dd28:	b.cc	40dcf8 <nftw@plt+0xb178>  // b.lo, b.ul, b.last
  40dd2c:	sub	w4, w4, #0x1
  40dd30:	add	x0, x0, #0x30
  40dd34:	mov	w1, #0x28                  	// #40
  40dd38:	ldr	w20, [sp, #364]
  40dd3c:	add	w3, w25, #0x1
  40dd40:	umaddl	x0, w4, w1, x0
  40dd44:	add	w20, w20, #0x1
  40dd48:	ldr	w1, [x2]
  40dd4c:	cmp	w1, w22
  40dd50:	b.hi	40dd6c <nftw@plt+0xb1ec>  // b.pmore
  40dd54:	ldr	w1, [x2, #8]
  40dd58:	cmp	w1, w22
  40dd5c:	b.eq	40f048 <nftw@plt+0xc4c8>  // b.none
  40dd60:	cmp	w25, w20
  40dd64:	ccmp	w1, w22, #0x0, ge  // ge = tcont
  40dd68:	csel	w20, w3, w20, hi  // hi = pmore
  40dd6c:	add	x2, x2, #0x28
  40dd70:	cmp	x0, x2
  40dd74:	b.ne	40dd48 <nftw@plt+0xb1c8>  // b.any
  40dd78:	ldrb	w0, [sp, #442]
  40dd7c:	cbz	w0, 40dde0 <nftw@plt+0xb260>
  40dd80:	ldr	w0, [sp, #472]
  40dd84:	mov	w19, #0x0                   	// #0
  40dd88:	cmp	w0, #0x3
  40dd8c:	b.le	40ddb0 <nftw@plt+0xb230>
  40dd90:	ldr	x0, [sp, #336]
  40dd94:	mov	w1, #0x20                  	// #32
  40dd98:	add	w19, w19, #0x1
  40dd9c:	bl	412fa0 <nftw@plt+0x10420>
  40dda0:	ldr	w0, [sp, #472]
  40dda4:	sub	w1, w0, #0x3
  40dda8:	cmp	w1, w19
  40ddac:	b.gt	40dd90 <nftw@plt+0xb210>
  40ddb0:	cmp	w0, w19
  40ddb4:	b.le	40ddd4 <nftw@plt+0xb254>
  40ddb8:	ldr	x0, [sp, #336]
  40ddbc:	mov	w1, #0x20                  	// #32
  40ddc0:	add	w19, w19, #0x1
  40ddc4:	bl	412fa0 <nftw@plt+0x10420>
  40ddc8:	ldr	w0, [sp, #472]
  40ddcc:	cmp	w0, w19
  40ddd0:	b.gt	40ddb8 <nftw@plt+0xb238>
  40ddd4:	ldr	x1, [sp, #136]
  40ddd8:	ldr	x0, [sp, #336]
  40dddc:	bl	414bf0 <nftw@plt+0x12070>
  40dde0:	ldr	x0, [sp, #336]
  40dde4:	mov	w1, #0x20                  	// #32
  40dde8:	add	x26, sp, #0x12c
  40ddec:	add	x27, sp, #0x180
  40ddf0:	bl	412fa0 <nftw@plt+0x10420>
  40ddf4:	ldr	w19, [sp, #476]
  40ddf8:	add	w19, w19, #0x1
  40ddfc:	cmp	w19, w20
  40de00:	b.lt	40de4c <nftw@plt+0xb2cc>  // b.tstop
  40de04:	b	40deb0 <nftw@plt+0xb330>
  40de08:	ldr	w1, [sp, #296]
  40de0c:	mov	x0, x27
  40de10:	bl	40c2c8 <nftw@plt+0x9748>
  40de14:	ldrb	w0, [sp, #300]
  40de18:	cbz	w0, 40e714 <nftw@plt+0xbb94>
  40de1c:	ldr	w0, [sp, #296]
  40de20:	mov	w1, #0x5e                  	// #94
  40de24:	cmp	w0, #0x2
  40de28:	b.gt	40de38 <nftw@plt+0xb2b8>
  40de2c:	ldr	x1, [sp, #328]
  40de30:	add	x0, x1, w0, sxtw
  40de34:	ldrb	w1, [x0, #116]
  40de38:	ldr	x0, [sp, #336]
  40de3c:	bl	412fa0 <nftw@plt+0x10420>
  40de40:	add	w19, w19, #0x1
  40de44:	cmp	w19, w20
  40de48:	b.eq	40deb0 <nftw@plt+0xb330>  // b.none
  40de4c:	mov	x6, x26
  40de50:	add	x5, sp, #0x128
  40de54:	mov	w4, w25
  40de58:	mov	w3, w23
  40de5c:	mov	w2, w19
  40de60:	mov	w1, w22
  40de64:	add	x0, sp, #0x148
  40de68:	bl	40c0d0 <nftw@plt+0x9550>
  40de6c:	tst	w0, #0xff
  40de70:	b.ne	40de08 <nftw@plt+0xb288>  // b.any
  40de74:	ldr	w0, [sp, #396]
  40de78:	cmn	w0, #0x1
  40de7c:	b.eq	40de98 <nftw@plt+0xb318>  // b.none
  40de80:	ldr	x0, [sp, #384]
  40de84:	ldr	x1, [sp, #432]
  40de88:	ldr	x0, [x0]
  40de8c:	bl	414bf0 <nftw@plt+0x12070>
  40de90:	mov	w0, #0xffffffff            	// #-1
  40de94:	str	w0, [sp, #396]
  40de98:	ldr	x0, [sp, #336]
  40de9c:	add	w19, w19, #0x1
  40dea0:	mov	w1, #0x20                  	// #32
  40dea4:	bl	412fa0 <nftw@plt+0x10420>
  40dea8:	cmp	w19, w20
  40deac:	b.ne	40de4c <nftw@plt+0xb2cc>  // b.any
  40deb0:	ldr	w0, [sp, #396]
  40deb4:	cmn	w0, #0x1
  40deb8:	b.eq	40ded4 <nftw@plt+0xb354>  // b.none
  40debc:	ldr	x0, [sp, #384]
  40dec0:	ldr	x1, [sp, #432]
  40dec4:	ldr	x0, [x0]
  40dec8:	bl	414bf0 <nftw@plt+0x12070>
  40decc:	mov	w0, #0xffffffff            	// #-1
  40ded0:	str	w0, [sp, #396]
  40ded4:	ldr	x0, [sp, #336]
  40ded8:	bl	412f40 <nftw@plt+0x103c0>
  40dedc:	ldrb	w0, [sp, #441]
  40dee0:	cbz	w0, 40e240 <nftw@plt+0xb6c0>
  40dee4:	ldr	x26, [sp, #448]
  40dee8:	cbz	x26, 40e240 <nftw@plt+0xb6c0>
  40deec:	adrp	x0, 40f000 <nftw@plt+0xc480>
  40def0:	add	x27, x0, #0x400
  40def4:	mov	x25, #0x0                   	// #0
  40def8:	mov	w23, #0x0                   	// #0
  40defc:	mov	x19, #0x4                   	// #4
  40df00:	ldr	w0, [x26, #4]
  40df04:	cmp	w0, w23
  40df08:	b.ls	40dfd0 <nftw@plt+0xb450>  // b.plast
  40df0c:	mov	w20, w23
  40df10:	add	x1, x20, w23, uxtw #2
  40df14:	add	x1, x26, x1, lsl #3
  40df18:	ldr	x0, [x1, #40]
  40df1c:	cbz	x0, 40dfc8 <nftw@plt+0xb448>
  40df20:	ldr	w3, [x1, #28]
  40df24:	cmp	w3, w22
  40df28:	b.ne	40dfc8 <nftw@plt+0xb448>  // b.any
  40df2c:	ldr	w4, [x1, #32]
  40df30:	ldr	w3, [sp, #476]
  40df34:	cmp	w4, w3
  40df38:	b.le	40dfc8 <nftw@plt+0xb448>
  40df3c:	ldr	x3, [x0]
  40df40:	ldr	x3, [x3, #16]
  40df44:	cmp	x3, x27
  40df48:	b.ne	40f1a4 <nftw@plt+0xc624>  // b.any
  40df4c:	ldr	x6, [x0, #8]
  40df50:	mov	w21, #0x0                   	// #0
  40df54:	cbz	x6, 40f100 <nftw@plt+0xc580>
  40df58:	add	x20, x20, x20, lsl #2
  40df5c:	mov	x0, x6
  40df60:	str	x6, [sp, #104]
  40df64:	bl	4024f0 <strlen@plt>
  40df68:	add	x26, x26, x20, lsl #3
  40df6c:	mov	x8, x0
  40df70:	ldr	x6, [sp, #104]
  40df74:	ldr	w20, [x26, #32]
  40df78:	cbz	x25, 40f26c <nftw@plt+0xc6ec>
  40df7c:	ldp	w0, w28, [x25]
  40df80:	add	w10, w28, #0x1
  40df84:	ubfx	x0, x0, #0, #31
  40df88:	mov	w1, w10
  40df8c:	cmp	w0, w28
  40df90:	b.eq	40f0b8 <nftw@plt+0xc538>  // b.none
  40df94:	mov	w0, #0x28                  	// #40
  40df98:	mov	x3, #0x8                   	// #8
  40df9c:	ldr	x26, [sp, #448]
  40dfa0:	umaddl	x9, w28, w0, x3
  40dfa4:	str	w1, [x25, #4]
  40dfa8:	add	x1, x25, x9
  40dfac:	str	w23, [x25, x9]
  40dfb0:	str	w20, [x1, #4]
  40dfb4:	str	x6, [x1, #8]
  40dfb8:	strb	w21, [x1, #16]
  40dfbc:	str	x8, [x1, #24]
  40dfc0:	str	wzr, [x1, #32]
  40dfc4:	nop
  40dfc8:	add	w23, w23, #0x1
  40dfcc:	cbnz	x26, 40df00 <nftw@plt+0xb380>
  40dfd0:	cbz	x25, 40e240 <nftw@plt+0xb6c0>
  40dfd4:	ldr	w1, [x25, #4]
  40dfd8:	cbz	w1, 40e22c <nftw@plt+0xb6ac>
  40dfdc:	cmp	w1, #0x1
  40dfe0:	mov	w2, #0x1                   	// #1
  40dfe4:	mov	w0, #0x0                   	// #0
  40dfe8:	b.hi	40e97c <nftw@plt+0xbdfc>  // b.pmore
  40dfec:	mov	w1, #0x1                   	// #1
  40dff0:	mov	w21, w1
  40dff4:	mov	w5, #0x7fffffff            	// #2147483647
  40dff8:	mov	w7, #0x28                  	// #40
  40dffc:	ubfiz	x1, x0, #2, #32
  40e000:	umaddl	x4, w0, w7, x25
  40e004:	add	x1, x1, w0, uxtw
  40e008:	sub	w0, w0, #0x1
  40e00c:	add	x1, x25, x1, lsl #3
  40e010:	ldrsw	x3, [x4, #12]
  40e014:	ldr	x6, [x1, #32]
  40e018:	add	x3, x3, x6
  40e01c:	cmp	x3, w5, sxtw
  40e020:	cinc	w3, w21, cs  // cs = hs, nlast
  40e024:	str	w3, [x1, #40]
  40e028:	mov	w21, w3
  40e02c:	cmp	w2, w0
  40e030:	b.ls	40e9a8 <nftw@plt+0xbe28>  // b.plast
  40e034:	ldr	w5, [x4, #12]
  40e038:	b	40dffc <nftw@plt+0xb47c>
  40e03c:	cmp	w27, w24
  40e040:	b.gt	40e080 <nftw@plt+0xb500>
  40e044:	mov	w28, w27
  40e048:	ldr	x0, [sp, #336]
  40e04c:	add	w28, w28, #0x1
  40e050:	mov	w1, #0x2d                  	// #45
  40e054:	bl	412fa0 <nftw@plt+0x10420>
  40e058:	cmp	w24, w28
  40e05c:	b.ge	40e048 <nftw@plt+0xb4c8>  // b.tcont
  40e060:	cmp	w27, w24
  40e064:	sub	w24, w24, w27
  40e068:	csel	w24, w24, wzr, le
  40e06c:	add	w2, w27, #0x1
  40e070:	add	w27, w24, w2
  40e074:	ldr	w0, [sp, #396]
  40e078:	cmn	w0, #0x1
  40e07c:	b.eq	40e094 <nftw@plt+0xb514>  // b.none
  40e080:	ldr	x0, [sp, #384]
  40e084:	ldr	x1, [sp, #432]
  40e088:	ldr	x0, [x0]
  40e08c:	bl	414bf0 <nftw@plt+0x12070>
  40e090:	str	w26, [sp, #396]
  40e094:	ldr	x0, [x23, #24]
  40e098:	cbnz	x0, 40e8a0 <nftw@plt+0xbd20>
  40e09c:	ldr	w0, [x19, #4]
  40e0a0:	add	w25, w25, #0x1
  40e0a4:	cmp	w25, w0
  40e0a8:	b.cc	40e328 <nftw@plt+0xb7a8>  // b.lo, b.ul, b.last
  40e0ac:	cmp	w27, #0x0
  40e0b0:	b.le	40e0e4 <nftw@plt+0xb564>
  40e0b4:	ldr	w0, [sp, #396]
  40e0b8:	cmn	w0, #0x1
  40e0bc:	b.eq	40e0d8 <nftw@plt+0xb558>  // b.none
  40e0c0:	ldr	x0, [sp, #384]
  40e0c4:	ldr	x1, [sp, #432]
  40e0c8:	ldr	x0, [x0]
  40e0cc:	bl	414bf0 <nftw@plt+0x12070>
  40e0d0:	mov	w0, #0xffffffff            	// #-1
  40e0d4:	str	w0, [sp, #396]
  40e0d8:	ldr	x0, [sp, #336]
  40e0dc:	bl	412f40 <nftw@plt+0x103c0>
  40e0e0:	ldr	w27, [sp, #476]
  40e0e4:	tbz	w27, #31, 40e0fc <nftw@plt+0xb57c>
  40e0e8:	ldr	x0, [sp, #336]
  40e0ec:	mov	w1, #0x20                  	// #32
  40e0f0:	bl	412fa0 <nftw@plt+0x10420>
  40e0f4:	adds	w27, w27, #0x1
  40e0f8:	b.ne	40e0e8 <nftw@plt+0xb568>  // b.any
  40e0fc:	cbz	x19, 40e14c <nftw@plt+0xb5cc>
  40e100:	ldr	w0, [x19, #4]
  40e104:	cbz	w0, 40e13c <nftw@plt+0xb5bc>
  40e108:	mov	w20, #0x0                   	// #0
  40e10c:	add	x1, x19, w20, uxtw #3
  40e110:	ldr	x22, [x1, #8]
  40e114:	cbz	x22, 40e848 <nftw@plt+0xbcc8>
  40e118:	ldr	x0, [x22, #16]
  40e11c:	add	w20, w20, #0x1
  40e120:	bl	402910 <free@plt>
  40e124:	mov	x0, x22
  40e128:	mov	x1, #0x28                  	// #40
  40e12c:	bl	461b00 <_obstack_memory_used@@Base+0x6b8>
  40e130:	ldr	w0, [x19, #4]
  40e134:	cmp	w20, w0
  40e138:	b.cc	40e10c <nftw@plt+0xb58c>  // b.lo, b.ul, b.last
  40e13c:	ldrsb	w0, [x19, #3]
  40e140:	tbnz	w0, #31, 40e828 <nftw@plt+0xbca8>
  40e144:	mov	x0, x19
  40e148:	bl	402910 <free@plt>
  40e14c:	ldr	x0, [sp, #96]
  40e150:	add	x1, x0, #0x1
  40e154:	str	x1, [sp, #96]
  40e158:	ldr	x0, [sp, #128]
  40e15c:	cmp	x0, x1
  40e160:	b.ge	40da98 <nftw@plt+0xaf18>  // b.tcont
  40e164:	ldr	w1, [sp, #156]
  40e168:	ldr	x0, [sp, #464]
  40e16c:	add	w1, w1, #0x1
  40e170:	str	w1, [sp, #156]
  40e174:	ldr	x1, [sp, #160]
  40e178:	add	x1, x1, #0x8
  40e17c:	str	x1, [sp, #160]
  40e180:	cbnz	x0, 40da58 <nftw@plt+0xaed8>
  40e184:	ldp	x23, x24, [sp, #48]
  40e188:	ldp	x25, x26, [sp, #64]
  40e18c:	ldp	x27, x28, [sp, #80]
  40e190:	ldp	x0, x1, [sp, #184]
  40e194:	ldr	x0, [x0]
  40e198:	bl	412578 <nftw@plt+0xf9f8>
  40e19c:	ldr	x0, [sp, #464]
  40e1a0:	cbz	x0, 40e1b0 <nftw@plt+0xb630>
  40e1a4:	ldrsb	w1, [x0, #3]
  40e1a8:	tbnz	w1, #31, 40f1d8 <nftw@plt+0xc658>
  40e1ac:	bl	402910 <free@plt>
  40e1b0:	ldr	x0, [sp, #456]
  40e1b4:	cbz	x0, 40e1c4 <nftw@plt+0xb644>
  40e1b8:	ldrsb	w1, [x0, #3]
  40e1bc:	tbnz	w1, #31, 40f1bc <nftw@plt+0xc63c>
  40e1c0:	bl	402910 <free@plt>
  40e1c4:	ldr	x0, [sp, #448]
  40e1c8:	cbz	x0, 40e1d8 <nftw@plt+0xb658>
  40e1cc:	ldrsb	w1, [x0, #3]
  40e1d0:	tbnz	w1, #31, 40f1c4 <nftw@plt+0xc644>
  40e1d4:	bl	402910 <free@plt>
  40e1d8:	ldr	w0, [sp, #396]
  40e1dc:	cmn	w0, #0x1
  40e1e0:	b.eq	40d9cc <nftw@plt+0xae4c>  // b.none
  40e1e4:	ldr	x0, [sp, #384]
  40e1e8:	ldr	x1, [sp, #432]
  40e1ec:	ldr	x0, [x0]
  40e1f0:	bl	414bf0 <nftw@plt+0x12070>
  40e1f4:	ldp	x19, x20, [sp, #16]
  40e1f8:	ldp	x21, x22, [sp, #32]
  40e1fc:	ldp	x29, x30, [sp], #480
  40e200:	ret
  40e204:	ldr	w0, [sp, #396]
  40e208:	cmn	w0, #0x1
  40e20c:	b.eq	40dc04 <nftw@plt+0xb084>  // b.none
  40e210:	ldr	x0, [sp, #384]
  40e214:	ldr	x1, [sp, #432]
  40e218:	ldr	x0, [x0]
  40e21c:	bl	414bf0 <nftw@plt+0x12070>
  40e220:	mov	w0, #0xffffffff            	// #-1
  40e224:	str	w0, [sp, #396]
  40e228:	b	40dc04 <nftw@plt+0xb084>
  40e22c:	ldrsb	w0, [x25, #3]
  40e230:	tbnz	w0, #31, 40e240 <nftw@plt+0xb6c0>
  40e234:	mov	x0, x25
  40e238:	bl	402910 <free@plt>
  40e23c:	nop
  40e240:	ldr	x0, [sp, #456]
  40e244:	mov	x19, #0x0                   	// #0
  40e248:	ldr	x1, [sp, #352]
  40e24c:	str	x1, [sp, #144]
  40e250:	mov	w25, #0x0                   	// #0
  40e254:	cbz	x0, 40e858 <nftw@plt+0xbcd8>
  40e258:	ldr	w1, [x0, #4]
  40e25c:	cmp	w1, w25
  40e260:	b.ls	40e2a0 <nftw@plt+0xb720>  // b.plast
  40e264:	add	x0, x0, w25, uxtw #3
  40e268:	ldr	x26, [x0, #8]
  40e26c:	mov	x0, x26
  40e270:	bl	439b08 <nftw@plt+0x36f88>
  40e274:	tst	w0, #0xff
  40e278:	b.ne	40e294 <nftw@plt+0xb714>  // b.any
  40e27c:	ldr	x1, [sp, #352]
  40e280:	mov	w2, w24
  40e284:	mov	x0, x26
  40e288:	bl	4399e8 <nftw@plt+0x36e68>
  40e28c:	tst	w0, #0xff
  40e290:	b.ne	40e3d4 <nftw@plt+0xb854>  // b.any
  40e294:	ldr	x0, [sp, #456]
  40e298:	add	w25, w25, #0x1
  40e29c:	cbnz	x0, 40e258 <nftw@plt+0xb6d8>
  40e2a0:	ldr	w27, [sp, #476]
  40e2a4:	cbz	x19, 40e0ac <nftw@plt+0xb52c>
  40e2a8:	ldr	w0, [x19, #4]
  40e2ac:	cbz	w0, 40e0ac <nftw@plt+0xb52c>
  40e2b0:	ldrb	w0, [sp, #442]
  40e2b4:	cbz	w0, 40e320 <nftw@plt+0xb7a0>
  40e2b8:	ldr	w0, [sp, #472]
  40e2bc:	mov	w20, #0x0                   	// #0
  40e2c0:	cmp	w0, #0x3
  40e2c4:	b.le	40e2e8 <nftw@plt+0xb768>
  40e2c8:	ldr	x0, [sp, #336]
  40e2cc:	mov	w1, #0x20                  	// #32
  40e2d0:	add	w20, w20, #0x1
  40e2d4:	bl	412fa0 <nftw@plt+0x10420>
  40e2d8:	ldr	w0, [sp, #472]
  40e2dc:	sub	w1, w0, #0x3
  40e2e0:	cmp	w1, w20
  40e2e4:	b.gt	40e2c8 <nftw@plt+0xb748>
  40e2e8:	cmp	w0, w20
  40e2ec:	b.le	40e30c <nftw@plt+0xb78c>
  40e2f0:	ldr	x0, [sp, #336]
  40e2f4:	mov	w1, #0x20                  	// #32
  40e2f8:	add	w20, w20, #0x1
  40e2fc:	bl	412fa0 <nftw@plt+0x10420>
  40e300:	ldr	w0, [sp, #472]
  40e304:	cmp	w0, w20
  40e308:	b.gt	40e2f0 <nftw@plt+0xb770>
  40e30c:	ldr	x1, [sp, #136]
  40e310:	ldr	x0, [sp, #336]
  40e314:	bl	414bf0 <nftw@plt+0x12070>
  40e318:	ldr	w0, [x19, #4]
  40e31c:	cbz	w0, 40e0ac <nftw@plt+0xb52c>
  40e320:	mov	w25, #0x0                   	// #0
  40e324:	mov	w26, #0xffffffff            	// #-1
  40e328:	add	x0, x19, w25, uxtw #3
  40e32c:	ldr	x23, [x0, #8]
  40e330:	ldp	w20, w24, [x23]
  40e334:	add	w0, w24, #0x1
  40e338:	cmp	w20, w0
  40e33c:	b.eq	40e94c <nftw@plt+0xbdcc>  // b.none
  40e340:	ldr	x0, [sp, #448]
  40e344:	cbz	x0, 40e360 <nftw@plt+0xb7e0>
  40e348:	ldr	w1, [x0, #4]
  40e34c:	add	x0, x0, #0x8
  40e350:	mov	w3, #0x28                  	// #40
  40e354:	umaddl	x1, w1, w3, x0
  40e358:	cmp	x1, x0
  40e35c:	b.ne	40e860 <nftw@plt+0xbce0>  // b.any
  40e360:	cmp	w20, w27
  40e364:	b.lt	40ee98 <nftw@plt+0xc318>  // b.tstop
  40e368:	cmp	w20, w27
  40e36c:	b.le	40e38c <nftw@plt+0xb80c>
  40e370:	ldr	x0, [sp, #336]
  40e374:	add	w27, w27, #0x1
  40e378:	mov	w1, #0x20                  	// #32
  40e37c:	bl	412fa0 <nftw@plt+0x10420>
  40e380:	cmp	w20, w27
  40e384:	b.ne	40e370 <nftw@plt+0xb7f0>  // b.any
  40e388:	mov	w27, w20
  40e38c:	ldr	w0, [sp, #396]
  40e390:	cmn	w0, #0x3
  40e394:	b.eq	40e03c <nftw@plt+0xb4bc>  // b.none
  40e398:	ldr	x1, [sp, #384]
  40e39c:	cmn	w0, #0x1
  40e3a0:	ldr	x0, [x1]
  40e3a4:	b.eq	40e3b8 <nftw@plt+0xb838>  // b.none
  40e3a8:	ldr	x1, [sp, #432]
  40e3ac:	bl	414bf0 <nftw@plt+0x12070>
  40e3b0:	ldr	x0, [sp, #384]
  40e3b4:	ldr	x0, [x0]
  40e3b8:	mov	w3, #0xfffffffd            	// #-3
  40e3bc:	ldr	x1, [sp, #424]
  40e3c0:	str	w3, [sp, #396]
  40e3c4:	bl	414bf0 <nftw@plt+0x12070>
  40e3c8:	cmp	w27, w24
  40e3cc:	b.le	40e044 <nftw@plt+0xb4c4>
  40e3d0:	b	40e074 <nftw@plt+0xb4f4>
  40e3d4:	ldr	w0, [x26]
  40e3d8:	add	x8, sp, #0x128
  40e3dc:	bl	419af0 <nftw@plt+0x16f70>
  40e3e0:	ldr	w20, [sp, #308]
  40e3e4:	ldr	w0, [x26, #4]
  40e3e8:	add	x8, sp, #0x128
  40e3ec:	bl	419af0 <nftw@plt+0x16f70>
  40e3f0:	ldr	w23, [sp, #308]
  40e3f4:	cmp	w20, w23
  40e3f8:	sub	w23, w23, #0x1
  40e3fc:	ccmp	w20, w23, #0x4, ne  // ne = any
  40e400:	b.gt	40e6a8 <nftw@plt+0xbb28>
  40e404:	ldr	w0, [x26]
  40e408:	add	x8, sp, #0x128
  40e40c:	bl	419af0 <nftw@plt+0x16f70>
  40e410:	ldr	w28, [sp, #308]
  40e414:	ldp	w2, w0, [x26]
  40e418:	sub	w5, w28, #0x1
  40e41c:	ldr	x1, [x26, #16]
  40e420:	cmp	w2, w0
  40e424:	add	w27, w5, w1
  40e428:	b.ne	40e678 <nftw@plt+0xbaf8>  // b.any
  40e42c:	cmp	w28, w27
  40e430:	b.le	40e440 <nftw@plt+0xb8c0>
  40e434:	cmp	w27, w5
  40e438:	mov	w27, w5
  40e43c:	b.ne	40e6a8 <nftw@plt+0xbb28>  // b.any
  40e440:	cbz	x19, 40e7b8 <nftw@plt+0xbc38>
  40e444:	ldr	w0, [x19, #4]
  40e448:	cbz	w0, 40e4d0 <nftw@plt+0xb950>
  40e44c:	sub	w0, w0, #0x1
  40e450:	add	x0, x19, x0, lsl #3
  40e454:	ldr	x6, [x0, #8]
  40e458:	ldr	w0, [x6]
  40e45c:	cmp	w0, w20
  40e460:	b.gt	40f354 <nftw@plt+0xc7d4>
  40e464:	ldr	w0, [x6, #8]
  40e468:	cmp	w0, w28
  40e46c:	b.gt	40f294 <nftw@plt+0xc714>
  40e470:	ldr	w0, [x6, #12]
  40e474:	cmp	w0, w28
  40e478:	b.lt	40e4d0 <nftw@plt+0xb950>  // b.tstop
  40e47c:	ldr	w9, [x6, #4]
  40e480:	str	w5, [sp, #112]
  40e484:	add	w8, w9, #0x1
  40e488:	str	w8, [sp, #104]
  40e48c:	str	w9, [sp, #168]
  40e490:	cmp	w9, w5
  40e494:	str	x6, [sp, #176]
  40e498:	ccmp	w8, w5, #0x4, ne  // ne = any
  40e49c:	b.gt	40e6a8 <nftw@plt+0xbb28>
  40e4a0:	ldr	x0, [sp, #144]
  40e4a4:	mov	w1, w24
  40e4a8:	bl	419390 <nftw@plt+0x16810>
  40e4ac:	cmp	x0, #0x0
  40e4b0:	ldr	w5, [sp, #112]
  40e4b4:	mov	x10, x0
  40e4b8:	ldr	w8, [sp, #104]
  40e4bc:	mov	x7, x1
  40e4c0:	ldr	w9, [sp, #168]
  40e4c4:	ccmp	w5, w1, #0x0, ne  // ne = any
  40e4c8:	ldr	x6, [sp, #176]
  40e4cc:	b.lt	40ed58 <nftw@plt+0xc1d8>  // b.tstop
  40e4d0:	fmov	d0, x20
  40e4d4:	mov	x0, #0x28                  	// #40
  40e4d8:	ldp	x1, x20, [x26, #8]
  40e4dc:	mov	v0.d[1], x21
  40e4e0:	str	x1, [sp, #104]
  40e4e4:	mov	v0.s[1], w23
  40e4e8:	str	q0, [sp, #112]
  40e4ec:	bl	461d40 <_obstack_memory_used@@Base+0x8f8>
  40e4f0:	mov	x23, x0
  40e4f4:	ldr	q0, [sp, #112]
  40e4f8:	ldr	x1, [sp, #104]
  40e4fc:	mov	v0.s[2], w28
  40e500:	mov	x0, x1
  40e504:	mov	v0.s[3], w27
  40e508:	str	q0, [x23]
  40e50c:	bl	4616a8 <_obstack_memory_used@@Base+0x260>
  40e510:	ldr	w1, [x19]
  40e514:	add	x2, x20, #0x1
  40e518:	stp	x0, x20, [x23, #16]
  40e51c:	ldr	w20, [x19, #4]
  40e520:	str	x2, [x23, #32]
  40e524:	ubfx	x1, x1, #0, #31
  40e528:	cmp	w1, w20
  40e52c:	add	w28, w20, #0x1
  40e530:	b.eq	40e6ac <nftw@plt+0xbb2c>  // b.none
  40e534:	add	x20, x19, w20, uxtw #3
  40e538:	str	w28, [x19, #4]
  40e53c:	str	x23, [x20, #8]
  40e540:	b	40e294 <nftw@plt+0xb714>
  40e544:	ldr	w0, [sp, #396]
  40e548:	cmn	w0, #0x1
  40e54c:	b.eq	40e564 <nftw@plt+0xb9e4>  // b.none
  40e550:	ldr	x0, [sp, #384]
  40e554:	ldr	x1, [sp, #432]
  40e558:	ldr	x0, [x0]
  40e55c:	bl	414bf0 <nftw@plt+0x12070>
  40e560:	str	w25, [sp, #396]
  40e564:	ldrb	w0, [sp, #442]
  40e568:	cbz	w0, 40e5d0 <nftw@plt+0xba50>
  40e56c:	ldr	w0, [sp, #472]
  40e570:	mov	w28, #0x0                   	// #0
  40e574:	cmp	w0, #0x3
  40e578:	b.le	40e5a0 <nftw@plt+0xba20>
  40e57c:	nop
  40e580:	ldr	x0, [sp, #336]
  40e584:	mov	w1, #0x20                  	// #32
  40e588:	add	w28, w28, #0x1
  40e58c:	bl	412fa0 <nftw@plt+0x10420>
  40e590:	ldr	w0, [sp, #472]
  40e594:	sub	w1, w0, #0x3
  40e598:	cmp	w1, w28
  40e59c:	b.gt	40e580 <nftw@plt+0xba00>
  40e5a0:	cmp	w0, w28
  40e5a4:	b.le	40e5c4 <nftw@plt+0xba44>
  40e5a8:	ldr	x0, [sp, #336]
  40e5ac:	mov	w1, #0x2b                  	// #43
  40e5b0:	add	w28, w28, #0x1
  40e5b4:	bl	412fa0 <nftw@plt+0x10420>
  40e5b8:	ldr	w0, [sp, #472]
  40e5bc:	cmp	w0, w28
  40e5c0:	b.gt	40e5a8 <nftw@plt+0xba28>
  40e5c4:	ldr	x1, [sp, #136]
  40e5c8:	ldr	x0, [sp, #336]
  40e5cc:	bl	414bf0 <nftw@plt+0x12070>
  40e5d0:	ldr	x0, [sp, #336]
  40e5d4:	mov	w1, #0x2b                  	// #43
  40e5d8:	bl	412fa0 <nftw@plt+0x10420>
  40e5dc:	ldr	w0, [sp, #396]
  40e5e0:	cmn	w0, #0x2
  40e5e4:	b.eq	40e93c <nftw@plt+0xbdbc>  // b.none
  40e5e8:	ldr	x1, [sp, #384]
  40e5ec:	cmn	w0, #0x1
  40e5f0:	ldr	x0, [x1]
  40e5f4:	b.eq	40e608 <nftw@plt+0xba88>  // b.none
  40e5f8:	ldr	x1, [sp, #432]
  40e5fc:	bl	414bf0 <nftw@plt+0x12070>
  40e600:	ldr	x0, [sp, #384]
  40e604:	ldr	x0, [x0]
  40e608:	str	w26, [sp, #396]
  40e60c:	ldr	x1, [sp, #416]
  40e610:	bl	414bf0 <nftw@plt+0x12070>
  40e614:	ldr	x0, [x27, #16]
  40e618:	cmp	x0, #0x1
  40e61c:	b.eq	40e64c <nftw@plt+0xbacc>  // b.none
  40e620:	mov	x28, #0x0                   	// #0
  40e624:	nop
  40e628:	ldr	x1, [x27, #8]
  40e62c:	ldr	x0, [sp, #336]
  40e630:	ldrb	w1, [x1, x28]
  40e634:	add	x28, x28, #0x1
  40e638:	bl	412fa0 <nftw@plt+0x10420>
  40e63c:	ldr	x0, [x27, #16]
  40e640:	sub	x0, x0, #0x1
  40e644:	cmp	x0, x28
  40e648:	b.hi	40e628 <nftw@plt+0xbaa8>  // b.pmore
  40e64c:	ldr	w0, [sp, #396]
  40e650:	cmn	w0, #0x1
  40e654:	b.eq	40e66c <nftw@plt+0xbaec>  // b.none
  40e658:	ldr	x0, [sp, #384]
  40e65c:	ldr	x1, [sp, #432]
  40e660:	ldr	x0, [x0]
  40e664:	bl	414bf0 <nftw@plt+0x12070>
  40e668:	str	w25, [sp, #396]
  40e66c:	ldr	x0, [sp, #336]
  40e670:	bl	412f40 <nftw@plt+0x103c0>
  40e674:	b	40db18 <nftw@plt+0xaf98>
  40e678:	add	x8, sp, #0x128
  40e67c:	str	w5, [sp, #104]
  40e680:	bl	419af0 <nftw@plt+0x16f70>
  40e684:	ldr	w2, [sp, #308]
  40e688:	ldr	w5, [sp, #104]
  40e68c:	sub	w2, w2, #0x1
  40e690:	cmp	w27, w2
  40e694:	csel	w27, w27, w2, ge  // ge = tcont
  40e698:	cmp	w28, w27
  40e69c:	b.le	40e440 <nftw@plt+0xb8c0>
  40e6a0:	cmp	w27, w5
  40e6a4:	b.eq	40e440 <nftw@plt+0xb8c0>  // b.none
  40e6a8:	bl	402c1c <nftw@plt+0x9c>
  40e6ac:	ldrsb	w0, [x19, #3]
  40e6b0:	tbnz	w0, #31, 40e724 <nftw@plt+0xbba4>
  40e6b4:	mov	w1, w28
  40e6b8:	mov	w0, w20
  40e6bc:	bl	416358 <nftw@plt+0x137d8>
  40e6c0:	mov	w28, w0
  40e6c4:	ldr	w20, [x19, #4]
  40e6c8:	mov	x0, x19
  40e6cc:	ubfiz	x1, x28, #3, #32
  40e6d0:	add	x1, x1, #0x8
  40e6d4:	bl	4615e8 <_obstack_memory_used@@Base+0x1a0>
  40e6d8:	and	w2, w28, #0x7fffffff
  40e6dc:	mov	x19, x0
  40e6e0:	add	w28, w20, #0x1
  40e6e4:	stp	w2, w20, [x0]
  40e6e8:	b	40e534 <nftw@plt+0xb9b4>
  40e6ec:	ldr	x0, [sp, #336]
  40e6f0:	mov	w1, #0x20                  	// #32
  40e6f4:	bl	412fa0 <nftw@plt+0x10420>
  40e6f8:	ldr	w2, [sp, #476]
  40e6fc:	add	w28, w2, #0x1
  40e700:	cmp	w28, w20
  40e704:	b.le	40dbec <nftw@plt+0xb06c>
  40e708:	mov	w25, #0x0                   	// #0
  40e70c:	mov	w23, #0x7fffffff            	// #2147483647
  40e710:	b	40dcb0 <nftw@plt+0xb130>
  40e714:	ldr	x0, [sp, #336]
  40e718:	mov	w1, #0x7e                  	// #126
  40e71c:	bl	412fa0 <nftw@plt+0x10420>
  40e720:	b	40de40 <nftw@plt+0xb2c0>
  40e724:	cmp	w28, #0x4
  40e728:	mov	w0, #0x4                   	// #4
  40e72c:	csel	w1, w28, w0, cs  // cs = hs, nlast
  40e730:	csel	w26, w28, w0, cs  // cs = hs, nlast
  40e734:	add	x1, x1, #0x1
  40e738:	mov	x0, #0x0                   	// #0
  40e73c:	lsl	x1, x1, #3
  40e740:	bl	4615e8 <_obstack_memory_used@@Base+0x1a0>
  40e744:	mov	x2, x0
  40e748:	and	x1, x26, #0x7fffffff
  40e74c:	add	x5, x19, #0x8
  40e750:	str	x1, [x2], #8
  40e754:	cbz	w20, 40e7ac <nftw@plt+0xbc2c>
  40e758:	add	x1, x19, #0x18
  40e75c:	add	x4, x0, #0x18
  40e760:	cmp	x1, x2
  40e764:	sub	w1, w20, #0x1
  40e768:	ccmp	x5, x4, #0x2, hi  // hi = pmore
  40e76c:	ccmp	w1, #0x9, #0x0, cs  // cs = hs, nlast
  40e770:	b.ls	40ed30 <nftw@plt+0xc1b0>  // b.plast
  40e774:	lsr	w4, w20, #1
  40e778:	mov	x6, #0x8                   	// #8
  40e77c:	mov	x1, x6
  40e780:	add	x4, x6, w4, uxtw #4
  40e784:	nop
  40e788:	ldr	q0, [x19, x1]
  40e78c:	str	q0, [x0, x1]
  40e790:	add	x1, x1, #0x10
  40e794:	cmp	x4, x1
  40e798:	b.ne	40e788 <nftw@plt+0xbc08>  // b.any
  40e79c:	and	x1, x20, #0xfffffffe
  40e7a0:	tbz	w20, #0, 40e7ac <nftw@plt+0xbc2c>
  40e7a4:	ldr	x4, [x5, x1, lsl #3]
  40e7a8:	str	x4, [x2, x1, lsl #3]
  40e7ac:	mov	x19, x0
  40e7b0:	str	w20, [x0, #4]
  40e7b4:	b	40e534 <nftw@plt+0xb9b4>
  40e7b8:	fmov	d0, x20
  40e7bc:	mov	x0, #0x28                  	// #40
  40e7c0:	ldp	x1, x19, [x26, #8]
  40e7c4:	mov	v0.d[1], x21
  40e7c8:	str	x1, [sp, #104]
  40e7cc:	mov	w20, #0x0                   	// #0
  40e7d0:	mov	v0.s[1], w23
  40e7d4:	str	q0, [sp, #112]
  40e7d8:	bl	461d40 <_obstack_memory_used@@Base+0x8f8>
  40e7dc:	mov	x23, x0
  40e7e0:	ldr	q0, [sp, #112]
  40e7e4:	ldr	x1, [sp, #104]
  40e7e8:	mov	v0.s[2], w28
  40e7ec:	mov	w28, #0x1                   	// #1
  40e7f0:	mov	x0, x1
  40e7f4:	mov	v0.s[3], w27
  40e7f8:	str	q0, [x23]
  40e7fc:	bl	4616a8 <_obstack_memory_used@@Base+0x260>
  40e800:	add	x2, x19, #0x1
  40e804:	stp	x0, x19, [x23, #16]
  40e808:	mov	x1, #0x28                  	// #40
  40e80c:	mov	x0, #0x0                   	// #0
  40e810:	str	x2, [x23, #32]
  40e814:	bl	4615e8 <_obstack_memory_used@@Base+0x1a0>
  40e818:	mov	x19, x0
  40e81c:	mov	x0, #0x4                   	// #4
  40e820:	str	x0, [x19]
  40e824:	b	40e534 <nftw@plt+0xb9b4>
  40e828:	ldr	x0, [sp, #96]
  40e82c:	str	wzr, [x19, #4]
  40e830:	add	x1, x0, #0x1
  40e834:	str	x1, [sp, #96]
  40e838:	ldr	x0, [sp, #128]
  40e83c:	cmp	x0, x1
  40e840:	b.ge	40da98 <nftw@plt+0xaf18>  // b.tcont
  40e844:	b	40e164 <nftw@plt+0xb5e4>
  40e848:	add	w20, w20, #0x1
  40e84c:	cmp	w20, w0
  40e850:	b.cs	40e13c <nftw@plt+0xb5bc>  // b.hs, b.nlast
  40e854:	b	40e10c <nftw@plt+0xb58c>
  40e858:	ldr	w27, [sp, #476]
  40e85c:	b	40e0ac <nftw@plt+0xb52c>
  40e860:	ldr	w3, [x0]
  40e864:	cmp	w3, w22
  40e868:	b.eq	40e874 <nftw@plt+0xbcf4>  // b.none
  40e86c:	add	x0, x0, #0x28
  40e870:	b	40e358 <nftw@plt+0xb7d8>
  40e874:	ldr	w3, [x0, #4]
  40e878:	cmp	w20, w3
  40e87c:	b.ne	40e86c <nftw@plt+0xbcec>  // b.any
  40e880:	ldr	w3, [x0, #8]
  40e884:	cmp	w3, w22
  40e888:	b.ne	40e86c <nftw@plt+0xbcec>  // b.any
  40e88c:	ldr	w3, [x0, #12]
  40e890:	cmp	w24, w3
  40e894:	b.ne	40e86c <nftw@plt+0xbcec>  // b.any
  40e898:	ldr	x0, [x23, #24]
  40e89c:	cbz	x0, 40e360 <nftw@plt+0xb7e0>
  40e8a0:	cmp	w27, w20
  40e8a4:	b.gt	40ef30 <nftw@plt+0xc3b0>
  40e8a8:	cmp	w20, w27
  40e8ac:	b.le	40ecbc <nftw@plt+0xc13c>
  40e8b0:	ldr	x0, [sp, #336]
  40e8b4:	add	w27, w27, #0x1
  40e8b8:	mov	w1, #0x20                  	// #32
  40e8bc:	bl	412fa0 <nftw@plt+0x10420>
  40e8c0:	cmp	w20, w27
  40e8c4:	b.ne	40e8b0 <nftw@plt+0xbd30>  // b.any
  40e8c8:	ldr	w0, [sp, #396]
  40e8cc:	cmn	w0, #0x2
  40e8d0:	b.eq	40e904 <nftw@plt+0xbd84>  // b.none
  40e8d4:	ldr	x1, [sp, #384]
  40e8d8:	cmn	w0, #0x1
  40e8dc:	ldr	x0, [x1]
  40e8e0:	b.eq	40e8f4 <nftw@plt+0xbd74>  // b.none
  40e8e4:	ldr	x1, [sp, #432]
  40e8e8:	bl	414bf0 <nftw@plt+0x12070>
  40e8ec:	ldr	x0, [sp, #384]
  40e8f0:	ldr	x0, [x0]
  40e8f4:	mov	w2, #0xfffffffe            	// #-2
  40e8f8:	ldr	x1, [sp, #416]
  40e8fc:	str	w2, [sp, #396]
  40e900:	bl	414bf0 <nftw@plt+0x12070>
  40e904:	ldr	x1, [x23, #16]
  40e908:	ldr	x0, [sp, #336]
  40e90c:	bl	414bf0 <nftw@plt+0x12070>
  40e910:	ldr	w0, [sp, #396]
  40e914:	cmn	w0, #0x1
  40e918:	b.eq	40e930 <nftw@plt+0xbdb0>  // b.none
  40e91c:	ldr	x0, [sp, #384]
  40e920:	ldr	x1, [sp, #432]
  40e924:	ldr	x0, [x0]
  40e928:	bl	414bf0 <nftw@plt+0x12070>
  40e92c:	str	w26, [sp, #396]
  40e930:	ldr	x2, [x23, #24]
  40e934:	add	w27, w20, w2
  40e938:	b	40e09c <nftw@plt+0xb51c>
  40e93c:	ldr	x0, [x27, #16]
  40e940:	cmp	x0, #0x1
  40e944:	b.ne	40e620 <nftw@plt+0xbaa0>  // b.any
  40e948:	b	40e658 <nftw@plt+0xbad8>
  40e94c:	ldr	w20, [x23, #8]
  40e950:	cmp	w20, w27
  40e954:	b.lt	40ec1c <nftw@plt+0xc09c>  // b.tstop
  40e958:	cmp	w20, w27
  40e95c:	b.le	40ecbc <nftw@plt+0xc13c>
  40e960:	ldr	x0, [sp, #336]
  40e964:	add	w27, w27, #0x1
  40e968:	mov	w1, #0x20                  	// #32
  40e96c:	bl	412fa0 <nftw@plt+0x10420>
  40e970:	cmp	w20, w27
  40e974:	b.ne	40e960 <nftw@plt+0xbde0>  // b.any
  40e978:	b	40e8c8 <nftw@plt+0xbd48>
  40e97c:	add	x0, x25, #0x8
  40e980:	mov	x2, #0x28                  	// #40
  40e984:	mov	w1, w1
  40e988:	adrp	x3, 40c000 <nftw@plt+0x9480>
  40e98c:	add	x3, x3, #0x290
  40e990:	bl	41c9b8 <nftw@plt+0x19e38>
  40e994:	ldr	w2, [x25, #4]
  40e998:	mov	w0, #0x1                   	// #1
  40e99c:	mov	w21, w0
  40e9a0:	sub	w0, w2, #0x1
  40e9a4:	cbnz	w2, 40dfec <nftw@plt+0xb46c>
  40e9a8:	add	x0, sp, #0x180
  40e9ac:	mov	w26, #0x0                   	// #0
  40e9b0:	str	wzr, [sp, #104]
  40e9b4:	str	x0, [sp, #112]
  40e9b8:	ldrb	w0, [sp, #442]
  40e9bc:	cbz	w0, 40ea20 <nftw@plt+0xbea0>
  40e9c0:	ldr	w0, [sp, #472]
  40e9c4:	mov	w19, #0x0                   	// #0
  40e9c8:	cmp	w0, #0x3
  40e9cc:	b.le	40e9f0 <nftw@plt+0xbe70>
  40e9d0:	ldr	x0, [sp, #336]
  40e9d4:	mov	w1, #0x20                  	// #32
  40e9d8:	add	w19, w19, #0x1
  40e9dc:	bl	412fa0 <nftw@plt+0x10420>
  40e9e0:	ldr	w0, [sp, #472]
  40e9e4:	sub	w1, w0, #0x3
  40e9e8:	cmp	w1, w19
  40e9ec:	b.gt	40e9d0 <nftw@plt+0xbe50>
  40e9f0:	cmp	w0, w19
  40e9f4:	b.le	40ea14 <nftw@plt+0xbe94>
  40e9f8:	ldr	x0, [sp, #336]
  40e9fc:	mov	w1, #0x20                  	// #32
  40ea00:	add	w19, w19, #0x1
  40ea04:	bl	412fa0 <nftw@plt+0x10420>
  40ea08:	ldr	w0, [sp, #472]
  40ea0c:	cmp	w0, w19
  40ea10:	b.gt	40e9f8 <nftw@plt+0xbe78>
  40ea14:	ldr	x1, [sp, #136]
  40ea18:	ldr	x0, [sp, #336]
  40ea1c:	bl	414bf0 <nftw@plt+0x12070>
  40ea20:	ldr	x0, [sp, #336]
  40ea24:	mov	w1, #0x20                  	// #32
  40ea28:	bl	412fa0 <nftw@plt+0x10420>
  40ea2c:	ldr	w0, [x25, #4]
  40ea30:	cbz	w0, 40eb04 <nftw@plt+0xbf84>
  40ea34:	ldr	w19, [sp, #476]
  40ea38:	add	x23, x25, #0x8
  40ea3c:	mov	w27, #0x0                   	// #0
  40ea40:	add	w19, w19, #0x1
  40ea44:	ldr	w1, [x23, #32]
  40ea48:	cmp	w1, w26
  40ea4c:	b.lt	40eb04 <nftw@plt+0xbf84>  // b.tstop
  40ea50:	ldr	w20, [x23, #4]
  40ea54:	b.eq	40eb8c <nftw@plt+0xc00c>  // b.none
  40ea58:	ldr	w1, [sp, #104]
  40ea5c:	cmp	w1, w20
  40ea60:	b.eq	40eaf4 <nftw@plt+0xbf74>  // b.none
  40ea64:	cmp	w19, w20
  40ea68:	b.gt	40f2ac <nftw@plt+0xc72c>
  40ea6c:	b.eq	40f058 <nftw@plt+0xc4d8>  // b.none
  40ea70:	mov	w28, w19
  40ea74:	nop
  40ea78:	ldr	x0, [sp, #336]
  40ea7c:	add	w28, w28, #0x1
  40ea80:	mov	w1, #0x20                  	// #32
  40ea84:	bl	412fa0 <nftw@plt+0x10420>
  40ea88:	cmp	w28, w20
  40ea8c:	b.lt	40ea78 <nftw@plt+0xbef8>  // b.tstop
  40ea90:	mvn	w0, w19
  40ea94:	cmp	w19, w20
  40ea98:	add	w20, w0, w20
  40ea9c:	add	w19, w19, #0x1
  40eaa0:	csel	w20, w20, wzr, lt  // lt = tstop
  40eaa4:	add	w0, w20, w19
  40eaa8:	str	w0, [sp, #104]
  40eaac:	ldr	w1, [x23]
  40eab0:	ldr	x0, [sp, #112]
  40eab4:	bl	40c2c8 <nftw@plt+0x9748>
  40eab8:	ldr	x0, [sp, #336]
  40eabc:	mov	w1, #0x7c                  	// #124
  40eac0:	bl	412fa0 <nftw@plt+0x10420>
  40eac4:	ldr	w0, [sp, #396]
  40eac8:	cmn	w0, #0x1
  40eacc:	b.eq	40eae8 <nftw@plt+0xbf68>  // b.none
  40ead0:	ldr	x0, [sp, #384]
  40ead4:	ldr	x1, [sp, #432]
  40ead8:	ldr	x0, [x0]
  40eadc:	bl	414bf0 <nftw@plt+0x12070>
  40eae0:	mov	w0, #0xffffffff            	// #-1
  40eae4:	str	w0, [sp, #396]
  40eae8:	ldr	w1, [sp, #104]
  40eaec:	ldr	w0, [x25, #4]
  40eaf0:	add	w19, w1, #0x1
  40eaf4:	add	w27, w27, #0x1
  40eaf8:	add	x23, x23, #0x28
  40eafc:	cmp	w0, w27
  40eb00:	b.hi	40ea44 <nftw@plt+0xbec4>  // b.pmore
  40eb04:	ldr	w0, [sp, #396]
  40eb08:	cmn	w0, #0x1
  40eb0c:	b.eq	40eb74 <nftw@plt+0xbff4>  // b.none
  40eb10:	ldr	x0, [sp, #384]
  40eb14:	add	w26, w26, #0x1
  40eb18:	ldr	x1, [sp, #432]
  40eb1c:	ldr	x0, [x0]
  40eb20:	bl	414bf0 <nftw@plt+0x12070>
  40eb24:	ldr	x0, [sp, #336]
  40eb28:	mov	w1, #0xffffffff            	// #-1
  40eb2c:	str	w1, [sp, #396]
  40eb30:	bl	412f40 <nftw@plt+0x103c0>
  40eb34:	cmp	w26, w21
  40eb38:	b.le	40e9b8 <nftw@plt+0xbe38>
  40eb3c:	ldr	w0, [x25, #4]
  40eb40:	cbz	w0, 40eb64 <nftw@plt+0xbfe4>
  40eb44:	add	x19, x25, #0x10
  40eb48:	mov	w20, #0x0                   	// #0
  40eb4c:	ldrb	w1, [x19, #8]
  40eb50:	cbnz	w1, 40f060 <nftw@plt+0xc4e0>
  40eb54:	add	w20, w20, #0x1
  40eb58:	add	x19, x19, #0x28
  40eb5c:	cmp	w0, w20
  40eb60:	b.hi	40eb4c <nftw@plt+0xbfcc>  // b.pmore
  40eb64:	ldrsb	w0, [x25, #3]
  40eb68:	tbz	w0, #31, 40e234 <nftw@plt+0xb6b4>
  40eb6c:	str	wzr, [x25, #4]
  40eb70:	b	40e240 <nftw@plt+0xb6c0>
  40eb74:	ldr	x0, [sp, #336]
  40eb78:	add	w26, w26, #0x1
  40eb7c:	bl	412f40 <nftw@plt+0x103c0>
  40eb80:	cmp	w26, w21
  40eb84:	b.le	40e9b8 <nftw@plt+0xbe38>
  40eb88:	b	40eb3c <nftw@plt+0xbfbc>
  40eb8c:	cmp	w19, w20
  40eb90:	b.gt	40f2c4 <nftw@plt+0xc744>
  40eb94:	b.eq	40ebd0 <nftw@plt+0xc050>  // b.none
  40eb98:	mov	w28, w19
  40eb9c:	nop
  40eba0:	ldr	x0, [sp, #336]
  40eba4:	add	w28, w28, #0x1
  40eba8:	mov	w1, #0x20                  	// #32
  40ebac:	bl	412fa0 <nftw@plt+0x10420>
  40ebb0:	cmp	w28, w20
  40ebb4:	b.lt	40eba0 <nftw@plt+0xc020>  // b.tstop
  40ebb8:	mvn	w0, w19
  40ebbc:	cmp	w19, w20
  40ebc0:	add	w20, w0, w20
  40ebc4:	add	w19, w19, #0x1
  40ebc8:	csel	w20, w20, wzr, lt  // lt = tstop
  40ebcc:	add	w20, w19, w20
  40ebd0:	ldr	w1, [x23]
  40ebd4:	ldr	x0, [sp, #112]
  40ebd8:	bl	40c2c8 <nftw@plt+0x9748>
  40ebdc:	ldr	x1, [x23, #8]
  40ebe0:	ldr	x0, [sp, #336]
  40ebe4:	bl	414bf0 <nftw@plt+0x12070>
  40ebe8:	ldr	w0, [sp, #396]
  40ebec:	cmn	w0, #0x1
  40ebf0:	b.eq	40ec0c <nftw@plt+0xc08c>  // b.none
  40ebf4:	ldr	x0, [sp, #384]
  40ebf8:	ldr	x1, [sp, #432]
  40ebfc:	ldr	x0, [x0]
  40ec00:	bl	414bf0 <nftw@plt+0x12070>
  40ec04:	mov	w0, #0xffffffff            	// #-1
  40ec08:	str	w0, [sp, #396]
  40ec0c:	ldr	x19, [x23, #24]
  40ec10:	ldr	w0, [x25, #4]
  40ec14:	add	w19, w20, w19
  40ec18:	b	40eaf4 <nftw@plt+0xbf74>
  40ec1c:	ldr	w0, [sp, #396]
  40ec20:	cmn	w0, #0x1
  40ec24:	b.eq	40ec3c <nftw@plt+0xc0bc>  // b.none
  40ec28:	ldr	x0, [sp, #384]
  40ec2c:	ldr	x1, [sp, #432]
  40ec30:	ldr	x0, [x0]
  40ec34:	bl	414bf0 <nftw@plt+0x12070>
  40ec38:	str	w26, [sp, #396]
  40ec3c:	ldr	x0, [sp, #336]
  40ec40:	bl	412f40 <nftw@plt+0x103c0>
  40ec44:	ldrb	w0, [sp, #442]
  40ec48:	cbz	w0, 40ecb0 <nftw@plt+0xc130>
  40ec4c:	ldr	w0, [sp, #472]
  40ec50:	mov	w24, #0x0                   	// #0
  40ec54:	cmp	w0, #0x3
  40ec58:	b.le	40ec80 <nftw@plt+0xc100>
  40ec5c:	nop
  40ec60:	ldr	x0, [sp, #336]
  40ec64:	mov	w1, #0x20                  	// #32
  40ec68:	add	w24, w24, #0x1
  40ec6c:	bl	412fa0 <nftw@plt+0x10420>
  40ec70:	ldr	w0, [sp, #472]
  40ec74:	sub	w1, w0, #0x3
  40ec78:	cmp	w1, w24
  40ec7c:	b.gt	40ec60 <nftw@plt+0xc0e0>
  40ec80:	cmp	w24, w0
  40ec84:	b.ge	40eca4 <nftw@plt+0xc124>  // b.tcont
  40ec88:	ldr	x0, [sp, #336]
  40ec8c:	mov	w1, #0x20                  	// #32
  40ec90:	add	w24, w24, #0x1
  40ec94:	bl	412fa0 <nftw@plt+0x10420>
  40ec98:	ldr	w0, [sp, #472]
  40ec9c:	cmp	w0, w24
  40eca0:	b.gt	40ec88 <nftw@plt+0xc108>
  40eca4:	ldr	x1, [sp, #136]
  40eca8:	ldr	x0, [sp, #336]
  40ecac:	bl	414bf0 <nftw@plt+0x12070>
  40ecb0:	ldr	w27, [sp, #476]
  40ecb4:	cmp	w20, w27
  40ecb8:	b.gt	40e960 <nftw@plt+0xbde0>
  40ecbc:	mov	w20, w27
  40ecc0:	b	40e8c8 <nftw@plt+0xbd48>
  40ecc4:	ldr	w2, [sp, #156]
  40ecc8:	ldr	w1, [sp, #360]
  40eccc:	cbnz	w2, 40ecdc <nftw@plt+0xc15c>
  40ecd0:	ldr	w0, [x0, #12]
  40ecd4:	cmp	w0, w1
  40ecd8:	b.ge	40da80 <nftw@plt+0xaf00>  // b.tcont
  40ecdc:	ldr	w3, [x20]
  40ece0:	cmp	w1, w3
  40ece4:	b.cc	40efc8 <nftw@plt+0xc448>  // b.lo, b.ul, b.last
  40ece8:	ldr	w0, [x20, #4]
  40ecec:	cmp	w1, w0
  40ecf0:	b.hi	40efc8 <nftw@plt+0xc448>  // b.pmore
  40ecf4:	add	x4, sp, #0x200
  40ecf8:	add	x5, sp, #0x108
  40ecfc:	ldp	x2, x3, [sp, #352]
  40ed00:	ldp	x0, x1, [sp, #368]
  40ed04:	stp	x2, x3, [x4, #-248]
  40ed08:	stp	x0, x1, [x4, #-232]
  40ed0c:	ldp	x0, x1, [x5]
  40ed10:	stp	x0, x1, [sp, #224]
  40ed14:	ldr	x0, [sp, #184]
  40ed18:	add	x1, sp, #0xe0
  40ed1c:	ldp	x4, x5, [x5, #16]
  40ed20:	ldr	x2, [x0, #144]
  40ed24:	stp	x4, x5, [sp, #240]
  40ed28:	blr	x2
  40ed2c:	b	40da80 <nftw@plt+0xaf00>
  40ed30:	ubfiz	x2, x1, #3, #32
  40ed34:	mov	x1, #0x8                   	// #8
  40ed38:	add	x2, x2, #0x10
  40ed3c:	nop
  40ed40:	ldr	x4, [x19, x1]
  40ed44:	str	x4, [x0, x1]
  40ed48:	add	x1, x1, #0x8
  40ed4c:	cmp	x2, x1
  40ed50:	b.ne	40ed40 <nftw@plt+0xc1c0>  // b.any
  40ed54:	b	40e7ac <nftw@plt+0xbc2c>
  40ed58:	ldr	x2, [x6, #24]
  40ed5c:	tbnz	w2, #31, 40f2dc <nftw@plt+0xc75c>
  40ed60:	subs	w27, w28, w8
  40ed64:	b.mi	40f2f4 <nftw@plt+0xc774>  // b.first
  40ed68:	ldr	x0, [x26, #16]
  40ed6c:	add	w5, w27, w2
  40ed70:	adds	w28, w5, w0
  40ed74:	b.mi	40f30c <nftw@plt+0xc78c>  // b.first
  40ed78:	ldr	x8, [x6, #32]
  40ed7c:	sxtw	x20, w28
  40ed80:	add	x1, x20, #0x1
  40ed84:	cmp	x8, x1
  40ed88:	b.cc	40ee38 <nftw@plt+0xc2b8>  // b.lo, b.ul, b.last
  40ed8c:	tbnz	w9, #31, 40f324 <nftw@plt+0xc7a4>
  40ed90:	cmp	w9, w7
  40ed94:	b.ge	40f33c <nftw@plt+0xc7bc>  // b.tcont
  40ed98:	add	w0, w9, w27
  40ed9c:	cmp	w7, w0
  40eda0:	b.lt	40f39c <nftw@plt+0xc81c>  // b.tstop
  40eda4:	sxtw	x27, w27
  40eda8:	add	x1, x10, w9, sxtw
  40edac:	add	x7, x27, w2, sxtw
  40edb0:	sxtw	x0, w2
  40edb4:	cmp	x7, x8
  40edb8:	b.cs	40f3b4 <nftw@plt+0xc834>  // b.hs, b.nlast
  40edbc:	ldr	x7, [x6, #16]
  40edc0:	mov	x2, x27
  40edc4:	str	x6, [sp, #104]
  40edc8:	add	x0, x7, x0
  40edcc:	str	w5, [sp, #112]
  40edd0:	bl	402490 <memcpy@plt>
  40edd4:	ldp	x1, x2, [x26, #8]
  40edd8:	ldr	x6, [sp, #104]
  40eddc:	ldr	w5, [sp, #112]
  40ede0:	sxtw	x0, w5
  40ede4:	ldr	x5, [x6, #32]
  40ede8:	add	x7, x2, x0
  40edec:	cmp	x7, x5
  40edf0:	b.cs	40f3b4 <nftw@plt+0xc834>  // b.hs, b.nlast
  40edf4:	ldr	x5, [x6, #16]
  40edf8:	add	x0, x5, x0
  40edfc:	bl	402490 <memcpy@plt>
  40ee00:	ldr	x6, [sp, #104]
  40ee04:	ldr	x0, [x6, #32]
  40ee08:	str	x20, [x6, #24]
  40ee0c:	cmp	x20, x0
  40ee10:	b.cs	40f3cc <nftw@plt+0xc84c>  // b.hs, b.nlast
  40ee14:	ldr	x0, [x6, #16]
  40ee18:	strb	wzr, [x0, w28, sxtw]
  40ee1c:	ldr	x1, [x26, #16]
  40ee20:	str	w23, [x6, #4]
  40ee24:	ldr	w0, [x6, #12]
  40ee28:	add	x4, x27, x1
  40ee2c:	add	w4, w0, w4
  40ee30:	str	w4, [x6, #12]
  40ee34:	b	40e294 <nftw@plt+0xb714>
  40ee38:	ldr	x0, [x6, #16]
  40ee3c:	lsl	x8, x1, #1
  40ee40:	mov	x1, x8
  40ee44:	stp	x8, x6, [sp, #104]
  40ee48:	str	w9, [sp, #168]
  40ee4c:	str	w5, [sp, #176]
  40ee50:	stp	x2, x10, [sp, #200]
  40ee54:	str	x7, [sp, #216]
  40ee58:	bl	4615e8 <_obstack_memory_used@@Base+0x1a0>
  40ee5c:	ldp	x8, x6, [sp, #104]
  40ee60:	ldr	w9, [sp, #168]
  40ee64:	ldr	w5, [sp, #176]
  40ee68:	ldp	x2, x10, [sp, #200]
  40ee6c:	str	x0, [x6, #16]
  40ee70:	str	x8, [x6, #32]
  40ee74:	ldr	x7, [sp, #216]
  40ee78:	b	40ed8c <nftw@plt+0xc20c>
  40ee7c:	b.eq	40db78 <nftw@plt+0xaff8>  // b.none
  40ee80:	adrp	x2, 473000 <_obstack_memory_used@@Base+0x11bb8>
  40ee84:	adrp	x0, 473000 <_obstack_memory_used@@Base+0x11bb8>
  40ee88:	add	x2, x2, #0xd40
  40ee8c:	add	x0, x0, #0xc50
  40ee90:	mov	w1, #0x2b9                 	// #697
  40ee94:	bl	402bf0 <nftw@plt+0x70>
  40ee98:	ldr	w0, [sp, #396]
  40ee9c:	cmn	w0, #0x1
  40eea0:	b.eq	40eeb8 <nftw@plt+0xc338>  // b.none
  40eea4:	ldr	x0, [sp, #384]
  40eea8:	ldr	x1, [sp, #432]
  40eeac:	ldr	x0, [x0]
  40eeb0:	bl	414bf0 <nftw@plt+0x12070>
  40eeb4:	str	w26, [sp, #396]
  40eeb8:	ldr	x0, [sp, #336]
  40eebc:	bl	412f40 <nftw@plt+0x103c0>
  40eec0:	ldrb	w0, [sp, #442]
  40eec4:	cbz	w0, 40ef28 <nftw@plt+0xc3a8>
  40eec8:	ldr	w0, [sp, #472]
  40eecc:	mov	w27, #0x0                   	// #0
  40eed0:	cmp	w0, #0x3
  40eed4:	b.le	40eef8 <nftw@plt+0xc378>
  40eed8:	ldr	x0, [sp, #336]
  40eedc:	mov	w1, #0x20                  	// #32
  40eee0:	add	w27, w27, #0x1
  40eee4:	bl	412fa0 <nftw@plt+0x10420>
  40eee8:	ldr	w0, [sp, #472]
  40eeec:	sub	w1, w0, #0x3
  40eef0:	cmp	w1, w27
  40eef4:	b.gt	40eed8 <nftw@plt+0xc358>
  40eef8:	cmp	w0, w27
  40eefc:	b.le	40ef1c <nftw@plt+0xc39c>
  40ef00:	ldr	x0, [sp, #336]
  40ef04:	mov	w1, #0x20                  	// #32
  40ef08:	add	w27, w27, #0x1
  40ef0c:	bl	412fa0 <nftw@plt+0x10420>
  40ef10:	ldr	w0, [sp, #472]
  40ef14:	cmp	w0, w27
  40ef18:	b.gt	40ef00 <nftw@plt+0xc380>
  40ef1c:	ldr	x1, [sp, #136]
  40ef20:	ldr	x0, [sp, #336]
  40ef24:	bl	414bf0 <nftw@plt+0x12070>
  40ef28:	ldr	w27, [sp, #476]
  40ef2c:	b	40e368 <nftw@plt+0xb7e8>
  40ef30:	ldr	w0, [sp, #396]
  40ef34:	cmn	w0, #0x1
  40ef38:	b.eq	40ef50 <nftw@plt+0xc3d0>  // b.none
  40ef3c:	ldr	x0, [sp, #384]
  40ef40:	ldr	x1, [sp, #432]
  40ef44:	ldr	x0, [x0]
  40ef48:	bl	414bf0 <nftw@plt+0x12070>
  40ef4c:	str	w26, [sp, #396]
  40ef50:	ldr	x0, [sp, #336]
  40ef54:	bl	412f40 <nftw@plt+0x103c0>
  40ef58:	ldrb	w0, [sp, #442]
  40ef5c:	cbz	w0, 40efc0 <nftw@plt+0xc440>
  40ef60:	ldr	w0, [sp, #472]
  40ef64:	mov	w24, #0x0                   	// #0
  40ef68:	cmp	w0, #0x3
  40ef6c:	b.le	40ef90 <nftw@plt+0xc410>
  40ef70:	ldr	x0, [sp, #336]
  40ef74:	mov	w1, #0x20                  	// #32
  40ef78:	add	w24, w24, #0x1
  40ef7c:	bl	412fa0 <nftw@plt+0x10420>
  40ef80:	ldr	w0, [sp, #472]
  40ef84:	sub	w1, w0, #0x3
  40ef88:	cmp	w1, w24
  40ef8c:	b.gt	40ef70 <nftw@plt+0xc3f0>
  40ef90:	cmp	w24, w0
  40ef94:	b.ge	40efb4 <nftw@plt+0xc434>  // b.tcont
  40ef98:	ldr	x0, [sp, #336]
  40ef9c:	mov	w1, #0x20                  	// #32
  40efa0:	add	w24, w24, #0x1
  40efa4:	bl	412fa0 <nftw@plt+0x10420>
  40efa8:	ldr	w0, [sp, #472]
  40efac:	cmp	w0, w24
  40efb0:	b.gt	40ef98 <nftw@plt+0xc418>
  40efb4:	ldr	x1, [sp, #136]
  40efb8:	ldr	x0, [sp, #336]
  40efbc:	bl	414bf0 <nftw@plt+0x12070>
  40efc0:	ldr	w27, [sp, #476]
  40efc4:	b	40e8a8 <nftw@plt+0xbd28>
  40efc8:	ldr	x4, [sp, #448]
  40efcc:	cbz	x4, 40f1e0 <nftw@plt+0xc660>
  40efd0:	ldr	w5, [x4, #4]
  40efd4:	add	x2, x4, #0x8
  40efd8:	mov	w0, #0x0                   	// #0
  40efdc:	cmp	w0, w5
  40efe0:	b.eq	40f1e0 <nftw@plt+0xc660>  // b.none
  40efe4:	ldr	w1, [x2]
  40efe8:	cmp	w3, w1
  40efec:	b.hi	40f03c <nftw@plt+0xc4bc>  // b.pmore
  40eff0:	ldr	w6, [x20, #4]
  40eff4:	cmp	w1, w6
  40eff8:	b.hi	40f03c <nftw@plt+0xc4bc>  // b.pmore
  40effc:	ubfiz	x2, x0, #2, #32
  40f000:	add	x5, sp, #0x108
  40f004:	add	x0, x2, w0, uxtw
  40f008:	ldp	x2, x3, [sp, #352]
  40f00c:	add	x0, x4, x0, lsl #3
  40f010:	add	x4, sp, #0x200
  40f014:	ldr	w0, [x0, #12]
  40f018:	stp	x2, x3, [x4, #-216]
  40f01c:	str	w1, [sp, #304]
  40f020:	str	w0, [sp, #308]
  40f024:	ldp	x0, x1, [sp, #368]
  40f028:	stp	x0, x1, [x4, #-232]
  40f02c:	ldp	x2, x3, [x4, #-216]
  40f030:	stp	x2, x3, [x4, #-248]
  40f034:	stp	x0, x1, [x4, #-200]
  40f038:	b	40ed0c <nftw@plt+0xc18c>
  40f03c:	add	w0, w0, #0x1
  40f040:	add	x2, x2, #0x28
  40f044:	b	40efdc <nftw@plt+0xc45c>
  40f048:	ldr	w1, [x2, #12]
  40f04c:	cmp	w1, w20
  40f050:	csinc	w20, w20, w1, lt  // lt = tstop
  40f054:	b	40dd6c <nftw@plt+0xb1ec>
  40f058:	str	w19, [sp, #104]
  40f05c:	b	40eaac <nftw@plt+0xbf2c>
  40f060:	ldr	x0, [x19], #40
  40f064:	add	w20, w20, #0x1
  40f068:	bl	402910 <free@plt>
  40f06c:	ldr	w0, [x25, #4]
  40f070:	cmp	w0, w20
  40f074:	b.hi	40eb4c <nftw@plt+0xbfcc>  // b.pmore
  40f078:	b	40eb64 <nftw@plt+0xbfe4>
  40f07c:	ldrb	w0, [sp, #442]
  40f080:	cbz	w0, 40f384 <nftw@plt+0xc804>
  40f084:	ldr	w0, [sp, #472]
  40f088:	mov	w19, #0x0                   	// #0
  40f08c:	tbnz	w0, #31, 40f0ac <nftw@plt+0xc52c>
  40f090:	ldr	x0, [sp, #336]
  40f094:	mov	w1, #0x2e                  	// #46
  40f098:	add	w19, w19, #0x1
  40f09c:	bl	412fa0 <nftw@plt+0x10420>
  40f0a0:	ldr	w0, [sp, #472]
  40f0a4:	cmp	w0, w19
  40f0a8:	b.ge	40f090 <nftw@plt+0xc510>  // b.tcont
  40f0ac:	ldr	x0, [sp, #336]
  40f0b0:	bl	412f40 <nftw@plt+0x103c0>
  40f0b4:	b	40da80 <nftw@plt+0xaf00>
  40f0b8:	ldrsb	w0, [x25, #3]
  40f0bc:	tbnz	w0, #31, 40f108 <nftw@plt+0xc588>
  40f0c0:	mov	w0, w28
  40f0c4:	stp	x8, x6, [sp, #104]
  40f0c8:	bl	416358 <nftw@plt+0x137d8>
  40f0cc:	mov	w26, w0
  40f0d0:	mov	w3, #0x28                  	// #40
  40f0d4:	mov	x1, #0x8                   	// #8
  40f0d8:	ldr	w28, [x25, #4]
  40f0dc:	mov	x0, x25
  40f0e0:	umaddl	x1, w26, w3, x1
  40f0e4:	and	w26, w26, #0x7fffffff
  40f0e8:	bl	4615e8 <_obstack_memory_used@@Base+0x1a0>
  40f0ec:	mov	x25, x0
  40f0f0:	add	w1, w28, #0x1
  40f0f4:	stp	w26, w28, [x0]
  40f0f8:	ldp	x8, x6, [sp, #104]
  40f0fc:	b	40df94 <nftw@plt+0xb414>
  40f100:	ldr	x26, [sp, #448]
  40f104:	b	40dfc8 <nftw@plt+0xb448>
  40f108:	cmp	w10, #0x4
  40f10c:	mov	w3, #0x4                   	// #4
  40f110:	csel	w3, w10, w3, cs  // cs = hs, nlast
  40f114:	mov	w4, #0x28                  	// #40
  40f118:	mov	x26, #0x8                   	// #8
  40f11c:	mov	x0, #0x0                   	// #0
  40f120:	str	w3, [sp, #104]
  40f124:	umaddl	x1, w3, w4, x26
  40f128:	str	w10, [sp, #112]
  40f12c:	str	x8, [sp, #144]
  40f130:	str	x6, [sp, #168]
  40f134:	bl	4615e8 <_obstack_memory_used@@Base+0x1a0>
  40f138:	ldr	w3, [sp, #104]
  40f13c:	mov	w4, #0x28                  	// #40
  40f140:	ldr	w10, [sp, #112]
  40f144:	and	x3, x3, #0x7fffffff
  40f148:	str	x3, [x0]
  40f14c:	ldr	x8, [sp, #144]
  40f150:	ldr	x6, [sp, #168]
  40f154:	cbz	w28, 40f194 <nftw@plt+0xc614>
  40f158:	sub	w11, w28, #0x1
  40f15c:	mov	x3, #0x30                  	// #48
  40f160:	mov	x1, x26
  40f164:	umaddl	x11, w11, w4, x3
  40f168:	add	x7, x25, x1
  40f16c:	add	x3, x0, x1
  40f170:	add	x1, x1, #0x28
  40f174:	cmp	x11, x1
  40f178:	ldp	x4, x5, [x7]
  40f17c:	stp	x4, x5, [x3]
  40f180:	ldp	x4, x5, [x7, #16]
  40f184:	stp	x4, x5, [x3, #16]
  40f188:	ldr	x4, [x7, #32]
  40f18c:	str	x4, [x3, #32]
  40f190:	b.ne	40f168 <nftw@plt+0xc5e8>  // b.any
  40f194:	mov	w1, w10
  40f198:	mov	x25, x0
  40f19c:	str	w28, [x0, #4]
  40f1a0:	b	40df94 <nftw@plt+0xb414>
  40f1a4:	ldr	w1, [x1, #36]
  40f1a8:	blr	x3
  40f1ac:	mov	x6, x0
  40f1b0:	and	w0, w1, #0xff
  40f1b4:	mov	w21, w0
  40f1b8:	b	40df54 <nftw@plt+0xb3d4>
  40f1bc:	str	wzr, [x0, #4]
  40f1c0:	b	40e1c4 <nftw@plt+0xb644>
  40f1c4:	str	wzr, [x0, #4]
  40f1c8:	ldr	w0, [sp, #396]
  40f1cc:	cmn	w0, #0x1
  40f1d0:	b.eq	40d9cc <nftw@plt+0xae4c>  // b.none
  40f1d4:	b	40e1e4 <nftw@plt+0xb664>
  40f1d8:	str	wzr, [x0, #4]
  40f1dc:	b	40e1b0 <nftw@plt+0xb630>
  40f1e0:	ldr	x0, [sp, #456]
  40f1e4:	cbz	x0, 40f254 <nftw@plt+0xc6d4>
  40f1e8:	mov	w19, #0x0                   	// #0
  40f1ec:	ldr	w1, [x0, #4]
  40f1f0:	cmp	w1, w19
  40f1f4:	b.ls	40f254 <nftw@plt+0xc6d4>  // b.plast
  40f1f8:	add	x0, x0, w19, uxtw #3
  40f1fc:	add	x8, sp, #0x128
  40f200:	ldr	x0, [x0, #8]
  40f204:	ldr	w0, [x0]
  40f208:	bl	419af0 <nftw@plt+0x16f70>
  40f20c:	ldr	w1, [x20]
  40f210:	ldr	w0, [sp, #304]
  40f214:	cmp	w0, w1
  40f218:	b.cc	40f248 <nftw@plt+0xc6c8>  // b.lo, b.ul, b.last
  40f21c:	ldr	w1, [x20, #4]
  40f220:	cmp	w0, w1
  40f224:	b.hi	40f248 <nftw@plt+0xc6c8>  // b.pmore
  40f228:	add	x0, sp, #0x200
  40f22c:	add	x4, sp, #0x200
  40f230:	add	x5, sp, #0x108
  40f234:	ldp	x2, x3, [x0, #-216]
  40f238:	stp	x2, x3, [x4, #-248]
  40f23c:	ldp	x0, x1, [x0, #-200]
  40f240:	stp	x0, x1, [x4, #-232]
  40f244:	b	40ed0c <nftw@plt+0xc18c>
  40f248:	ldr	x0, [sp, #456]
  40f24c:	add	w19, w19, #0x1
  40f250:	cbnz	x0, 40f1ec <nftw@plt+0xc66c>
  40f254:	adrp	x2, 473000 <_obstack_memory_used@@Base+0x11bb8>
  40f258:	adrp	x0, 473000 <_obstack_memory_used@@Base+0x11bb8>
  40f25c:	add	x2, x2, #0xd10
  40f260:	add	x0, x0, #0xc50
  40f264:	mov	w1, #0x449                 	// #1097
  40f268:	bl	402bf0 <nftw@plt+0x70>
  40f26c:	mov	x1, #0xa8                  	// #168
  40f270:	mov	x0, #0x0                   	// #0
  40f274:	stp	x8, x6, [sp, #104]
  40f278:	bl	4615e8 <_obstack_memory_used@@Base+0x1a0>
  40f27c:	mov	w28, #0x0                   	// #0
  40f280:	mov	x25, x0
  40f284:	add	w1, w28, #0x1
  40f288:	str	x19, [x0]
  40f28c:	ldp	x8, x6, [sp, #104]
  40f290:	b	40df94 <nftw@plt+0xb414>
  40f294:	adrp	x2, 473000 <_obstack_memory_used@@Base+0x11bb8>
  40f298:	adrp	x0, 473000 <_obstack_memory_used@@Base+0x11bb8>
  40f29c:	add	x2, x2, #0xda8
  40f2a0:	add	x0, x0, #0xc50
  40f2a4:	mov	w1, #0x77c                 	// #1916
  40f2a8:	bl	402bf0 <nftw@plt+0x70>
  40f2ac:	adrp	x2, 473000 <_obstack_memory_used@@Base+0x11bb8>
  40f2b0:	adrp	x0, 473000 <_obstack_memory_used@@Base+0x11bb8>
  40f2b4:	add	x2, x2, #0xd90
  40f2b8:	add	x0, x0, #0xc50
  40f2bc:	mov	w1, #0x612                 	// #1554
  40f2c0:	bl	402bf0 <nftw@plt+0x70>
  40f2c4:	adrp	x2, 473000 <_obstack_memory_used@@Base+0x11bb8>
  40f2c8:	adrp	x0, 473000 <_obstack_memory_used@@Base+0x11bb8>
  40f2cc:	add	x2, x2, #0xd90
  40f2d0:	add	x0, x0, #0xc50
  40f2d4:	mov	w1, #0x609                 	// #1545
  40f2d8:	bl	402bf0 <nftw@plt+0x70>
  40f2dc:	adrp	x2, 473000 <_obstack_memory_used@@Base+0x11bb8>
  40f2e0:	adrp	x0, 473000 <_obstack_memory_used@@Base+0x11bb8>
  40f2e4:	add	x2, x2, #0xda8
  40f2e8:	add	x0, x0, #0xc50
  40f2ec:	mov	w1, #0x792                 	// #1938
  40f2f0:	bl	402bf0 <nftw@plt+0x70>
  40f2f4:	adrp	x2, 473000 <_obstack_memory_used@@Base+0x11bb8>
  40f2f8:	adrp	x0, 473000 <_obstack_memory_used@@Base+0x11bb8>
  40f2fc:	add	x2, x2, #0xda8
  40f300:	add	x0, x0, #0xc50
  40f304:	mov	w1, #0x794                 	// #1940
  40f308:	bl	402bf0 <nftw@plt+0x70>
  40f30c:	adrp	x2, 473000 <_obstack_memory_used@@Base+0x11bb8>
  40f310:	adrp	x0, 473000 <_obstack_memory_used@@Base+0x11bb8>
  40f314:	add	x2, x2, #0xda8
  40f318:	add	x0, x0, #0xc50
  40f31c:	mov	w1, #0x796                 	// #1942
  40f320:	bl	402bf0 <nftw@plt+0x70>
  40f324:	adrp	x2, 473000 <_obstack_memory_used@@Base+0x11bb8>
  40f328:	adrp	x0, 473000 <_obstack_memory_used@@Base+0x11bb8>
  40f32c:	add	x2, x2, #0xdb8
  40f330:	add	x0, x0, #0xdc0
  40f334:	mov	w1, #0x44                  	// #68
  40f338:	bl	402bf0 <nftw@plt+0x70>
  40f33c:	adrp	x2, 473000 <_obstack_memory_used@@Base+0x11bb8>
  40f340:	adrp	x0, 473000 <_obstack_memory_used@@Base+0x11bb8>
  40f344:	add	x2, x2, #0xdb8
  40f348:	add	x0, x0, #0xdc0
  40f34c:	mov	w1, #0x45                  	// #69
  40f350:	bl	402bf0 <nftw@plt+0x70>
  40f354:	adrp	x2, 473000 <_obstack_memory_used@@Base+0x11bb8>
  40f358:	adrp	x0, 473000 <_obstack_memory_used@@Base+0x11bb8>
  40f35c:	add	x2, x2, #0xda8
  40f360:	add	x0, x0, #0xc50
  40f364:	mov	w1, #0x77a                 	// #1914
  40f368:	bl	402bf0 <nftw@plt+0x70>
  40f36c:	adrp	x2, 473000 <_obstack_memory_used@@Base+0x11bb8>
  40f370:	adrp	x0, 473000 <_obstack_memory_used@@Base+0x11bb8>
  40f374:	add	x2, x2, #0xd78
  40f378:	add	x0, x0, #0xc50
  40f37c:	mov	w1, #0x215                 	// #533
  40f380:	bl	402bf0 <nftw@plt+0x70>
  40f384:	adrp	x2, 473000 <_obstack_memory_used@@Base+0x11bb8>
  40f388:	adrp	x0, 473000 <_obstack_memory_used@@Base+0x11bb8>
  40f38c:	add	x2, x2, #0xcf0
  40f390:	add	x0, x0, #0xc50
  40f394:	mov	w1, #0x408                 	// #1032
  40f398:	bl	402bf0 <nftw@plt+0x70>
  40f39c:	adrp	x2, 473000 <_obstack_memory_used@@Base+0x11bb8>
  40f3a0:	adrp	x0, 473000 <_obstack_memory_used@@Base+0x11bb8>
  40f3a4:	add	x2, x2, #0xdb8
  40f3a8:	add	x0, x0, #0xdc0
  40f3ac:	mov	w1, #0x47                  	// #71
  40f3b0:	bl	402bf0 <nftw@plt+0x70>
  40f3b4:	adrp	x2, 473000 <_obstack_memory_used@@Base+0x11bb8>
  40f3b8:	adrp	x0, 473000 <_obstack_memory_used@@Base+0x11bb8>
  40f3bc:	add	x2, x2, #0xdd8
  40f3c0:	add	x0, x0, #0xc50
  40f3c4:	mov	w1, #0x706                 	// #1798
  40f3c8:	bl	402bf0 <nftw@plt+0x70>
  40f3cc:	adrp	x2, 473000 <_obstack_memory_used@@Base+0x11bb8>
  40f3d0:	adrp	x0, 473000 <_obstack_memory_used@@Base+0x11bb8>
  40f3d4:	add	x2, x2, #0xde8
  40f3d8:	add	x0, x0, #0xc50
  40f3dc:	mov	w1, #0x732                 	// #1842
  40f3e0:	bl	402bf0 <nftw@plt+0x70>
  40f3e4:	adrp	x2, 473000 <_obstack_memory_used@@Base+0x11bb8>
  40f3e8:	adrp	x0, 473000 <_obstack_memory_used@@Base+0x11bb8>
  40f3ec:	add	x2, x2, #0xd28
  40f3f0:	add	x0, x0, #0xc50
  40f3f4:	mov	w1, #0x638                 	// #1592
  40f3f8:	bl	402bf0 <nftw@plt+0x70>
  40f3fc:	nop
  40f400:	mov	x1, #0x0                   	// #0
  40f404:	ldr	x0, [x0, #8]
  40f408:	ret
  40f40c:	nop
  40f410:	sub	w0, w0, w1
  40f414:	ret
  40f418:	cbz	x0, 40f4c8 <nftw@plt+0xc948>
  40f41c:	stp	x29, x30, [sp, #-48]!
  40f420:	mov	x29, sp
  40f424:	stp	x19, x20, [sp, #16]
  40f428:	mov	x19, x0
  40f42c:	mov	w20, #0x0                   	// #0
  40f430:	ldr	x0, [x0, #8]
  40f434:	bl	402910 <free@plt>
  40f438:	ldr	x0, [x19, #32]
  40f43c:	cbz	x0, 40f45c <nftw@plt+0xc8dc>
  40f440:	ldr	w1, [x0, #4]
  40f444:	add	x2, x0, w20, uxtw #3
  40f448:	cmp	w1, w20
  40f44c:	b.hi	40f484 <nftw@plt+0xc904>  // b.pmore
  40f450:	ldrsb	w1, [x0, #3]
  40f454:	tbnz	w1, #31, 40f4dc <nftw@plt+0xc95c>
  40f458:	bl	402910 <free@plt>
  40f45c:	ldr	x0, [x19, #24]
  40f460:	cbz	x0, 40f470 <nftw@plt+0xc8f0>
  40f464:	ldrsb	w1, [x0, #3]
  40f468:	tbnz	w1, #31, 40f4ec <nftw@plt+0xc96c>
  40f46c:	bl	402910 <free@plt>
  40f470:	mov	x0, x19
  40f474:	mov	x1, #0x28                  	// #40
  40f478:	ldp	x19, x20, [sp, #16]
  40f47c:	ldp	x29, x30, [sp], #48
  40f480:	b	461b00 <_obstack_memory_used@@Base+0x6b8>
  40f484:	str	x21, [sp, #32]
  40f488:	ldr	x21, [x2, #8]
  40f48c:	cbz	x21, 40f4cc <nftw@plt+0xc94c>
  40f490:	ldr	x0, [x21]
  40f494:	add	w20, w20, #0x1
  40f498:	bl	402910 <free@plt>
  40f49c:	mov	x0, x21
  40f4a0:	mov	x1, #0x10                  	// #16
  40f4a4:	bl	461b00 <_obstack_memory_used@@Base+0x6b8>
  40f4a8:	ldr	x0, [x19, #32]
  40f4ac:	cbz	x0, 40f4d4 <nftw@plt+0xc954>
  40f4b0:	ldr	w1, [x0, #4]
  40f4b4:	add	x2, x0, w20, uxtw #3
  40f4b8:	ldr	x21, [sp, #32]
  40f4bc:	cmp	w1, w20
  40f4c0:	b.ls	40f450 <nftw@plt+0xc8d0>  // b.plast
  40f4c4:	b	40f484 <nftw@plt+0xc904>
  40f4c8:	ret
  40f4cc:	add	w20, w20, #0x1
  40f4d0:	cbnz	x0, 40f4b0 <nftw@plt+0xc930>
  40f4d4:	ldr	x21, [sp, #32]
  40f4d8:	b	40f45c <nftw@plt+0xc8dc>
  40f4dc:	str	wzr, [x0, #4]
  40f4e0:	ldr	x0, [x19, #24]
  40f4e4:	cbnz	x0, 40f464 <nftw@plt+0xc8e4>
  40f4e8:	b	40f470 <nftw@plt+0xc8f0>
  40f4ec:	str	wzr, [x0, #4]
  40f4f0:	mov	x0, x19
  40f4f4:	ldp	x19, x20, [sp, #16]
  40f4f8:	mov	x1, #0x28                  	// #40
  40f4fc:	ldp	x29, x30, [sp], #48
  40f500:	b	461b00 <_obstack_memory_used@@Base+0x6b8>
  40f504:	nop
  40f508:	mov	x1, x0
  40f50c:	mov	w4, #0x1                   	// #1
  40f510:	adrp	x3, 402000 <memcpy@plt-0x490>
  40f514:	adrp	x2, 40f000 <nftw@plt+0xc480>
  40f518:	add	x3, x3, #0x890
  40f51c:	add	x2, x2, #0xed8
  40f520:	strb	w4, [x1], #8
  40f524:	str	xzr, [x0, #8]
  40f528:	stp	x3, xzr, [x1, #8]
  40f52c:	str	x2, [x1, #24]
  40f530:	ret
  40f534:	nop
  40f538:	mov	x2, x0
  40f53c:	adrp	x4, 40f000 <nftw@plt+0xc480>
  40f540:	adrp	x3, 40f000 <nftw@plt+0xc480>
  40f544:	add	x4, x4, #0x410
  40f548:	add	x3, x3, #0x418
  40f54c:	mov	w5, #0xffffffff            	// #-1
  40f550:	str	x1, [x2], #8
  40f554:	str	xzr, [x0, #8]
  40f558:	stp	x4, xzr, [x2, #8]
  40f55c:	str	x3, [x2, #24]
  40f560:	str	w5, [x0, #40]
  40f564:	ret
  40f568:	stp	x29, x30, [sp, #-32]!
  40f56c:	mov	x29, sp
  40f570:	stp	x19, x20, [sp, #16]
  40f574:	cbz	x1, 40f5ec <nftw@plt+0xca6c>
  40f578:	mov	x19, x0
  40f57c:	ldr	w0, [x0, #40]
  40f580:	mov	x20, x1
  40f584:	cmn	w0, #0x1
  40f588:	b.eq	40f5a8 <nftw@plt+0xca28>  // b.none
  40f58c:	ldr	x0, [x19]
  40f590:	bl	4197f0 <nftw@plt+0x16c70>
  40f594:	strb	w0, [x20]
  40f598:	ldr	w0, [x19, #40]
  40f59c:	ldp	x19, x20, [sp, #16]
  40f5a0:	ldp	x29, x30, [sp], #32
  40f5a4:	ret
  40f5a8:	mov	w1, #0x0                   	// #0
  40f5ac:	str	wzr, [x19, #40]
  40f5b0:	b	40f5c0 <nftw@plt+0xca40>
  40f5b4:	ldr	w1, [x19, #40]
  40f5b8:	add	w1, w1, #0x1
  40f5bc:	str	w1, [x19, #40]
  40f5c0:	ldr	x0, [x19]
  40f5c4:	add	w1, w1, #0x1
  40f5c8:	bl	419390 <nftw@plt+0x16810>
  40f5cc:	cbnz	x0, 40f5b4 <nftw@plt+0xca34>
  40f5d0:	ldr	x0, [x19]
  40f5d4:	bl	4197f0 <nftw@plt+0x16c70>
  40f5d8:	strb	w0, [x20]
  40f5dc:	ldr	w0, [x19, #40]
  40f5e0:	ldp	x19, x20, [sp, #16]
  40f5e4:	ldp	x29, x30, [sp], #32
  40f5e8:	ret
  40f5ec:	adrp	x2, 473000 <_obstack_memory_used@@Base+0x11bb8>
  40f5f0:	adrp	x0, 473000 <_obstack_memory_used@@Base+0x11bb8>
  40f5f4:	add	x2, x2, #0xe20
  40f5f8:	add	x0, x0, #0xe00
  40f5fc:	mov	w1, #0x296                 	// #662
  40f600:	bl	402bf0 <nftw@plt+0x70>
  40f604:	nop
  40f608:	stp	x29, x30, [sp, #-48]!
  40f60c:	mov	x29, sp
  40f610:	stp	x19, x20, [sp, #16]
  40f614:	mov	x19, x0
  40f618:	mov	x0, x1
  40f61c:	mov	w1, w2
  40f620:	str	w2, [x19]
  40f624:	stp	xzr, xzr, [x19, #8]
  40f628:	stp	xzr, xzr, [x19, #24]
  40f62c:	bl	419390 <nftw@plt+0x16810>
  40f630:	cbz	x0, 40f678 <nftw@plt+0xcaf8>
  40f634:	ldr	w3, [x19, #20]
  40f638:	mov	w2, w1
  40f63c:	str	x21, [sp, #32]
  40f640:	mov	x21, x0
  40f644:	str	w1, [x19, #16]
  40f648:	cmp	w1, w3
  40f64c:	ldr	x0, [x19, #8]
  40f650:	b.ge	40f684 <nftw@plt+0xcb04>  // b.tcont
  40f654:	mov	x1, x21
  40f658:	sxtw	x2, w2
  40f65c:	bl	402490 <memcpy@plt>
  40f660:	ldp	w0, w1, [x19, #16]
  40f664:	cmp	w0, w1
  40f668:	b.ge	40f6a4 <nftw@plt+0xcb24>  // b.tcont
  40f66c:	ldr	x1, [x19, #8]
  40f670:	strb	wzr, [x1, w0, sxtw]
  40f674:	ldr	x21, [sp, #32]
  40f678:	ldp	x19, x20, [sp, #16]
  40f67c:	ldp	x29, x30, [sp], #48
  40f680:	ret
  40f684:	add	w1, w1, #0x1
  40f688:	lsl	w20, w1, #1
  40f68c:	sxtw	x1, w20
  40f690:	bl	4615e8 <_obstack_memory_used@@Base+0x1a0>
  40f694:	ldr	w2, [x19, #16]
  40f698:	str	x0, [x19, #8]
  40f69c:	str	w20, [x19, #20]
  40f6a0:	b	40f654 <nftw@plt+0xcad4>
  40f6a4:	bl	402c3c <nftw@plt+0xbc>
  40f6a8:	stp	x29, x30, [sp, #-48]!
  40f6ac:	mov	x29, sp
  40f6b0:	stp	x19, x20, [sp, #16]
  40f6b4:	mov	x19, x0
  40f6b8:	mov	w20, #0x0                   	// #0
  40f6bc:	ldr	x0, [x0, #8]
  40f6c0:	bl	402910 <free@plt>
  40f6c4:	ldr	x0, [x19, #32]
  40f6c8:	cbz	x0, 40f728 <nftw@plt+0xcba8>
  40f6cc:	ldr	w1, [x0, #4]
  40f6d0:	add	x2, x0, w20, uxtw #3
  40f6d4:	cmp	w1, w20
  40f6d8:	b.ls	40f71c <nftw@plt+0xcb9c>  // b.plast
  40f6dc:	str	x21, [sp, #32]
  40f6e0:	ldr	x21, [x2, #8]
  40f6e4:	cbz	x21, 40f75c <nftw@plt+0xcbdc>
  40f6e8:	ldr	x0, [x21]
  40f6ec:	add	w20, w20, #0x1
  40f6f0:	bl	402910 <free@plt>
  40f6f4:	mov	x0, x21
  40f6f8:	mov	x1, #0x10                  	// #16
  40f6fc:	bl	461b00 <_obstack_memory_used@@Base+0x6b8>
  40f700:	ldr	x0, [x19, #32]
  40f704:	cbz	x0, 40f764 <nftw@plt+0xcbe4>
  40f708:	ldr	w1, [x0, #4]
  40f70c:	add	x2, x0, w20, uxtw #3
  40f710:	ldr	x21, [sp, #32]
  40f714:	cmp	w1, w20
  40f718:	b.hi	40f6dc <nftw@plt+0xcb5c>  // b.pmore
  40f71c:	ldrsb	w1, [x0, #3]
  40f720:	tbnz	w1, #31, 40f754 <nftw@plt+0xcbd4>
  40f724:	bl	402910 <free@plt>
  40f728:	ldr	x0, [x19, #24]
  40f72c:	cbz	x0, 40f748 <nftw@plt+0xcbc8>
  40f730:	ldrsb	w1, [x0, #3]
  40f734:	tbnz	w1, #31, 40f744 <nftw@plt+0xcbc4>
  40f738:	ldp	x19, x20, [sp, #16]
  40f73c:	ldp	x29, x30, [sp], #48
  40f740:	b	402910 <free@plt>
  40f744:	str	wzr, [x0, #4]
  40f748:	ldp	x19, x20, [sp, #16]
  40f74c:	ldp	x29, x30, [sp], #48
  40f750:	ret
  40f754:	str	wzr, [x0, #4]
  40f758:	b	40f728 <nftw@plt+0xcba8>
  40f75c:	add	w20, w20, #0x1
  40f760:	cbnz	x0, 40f708 <nftw@plt+0xcb88>
  40f764:	ldr	x21, [sp, #32]
  40f768:	b	40f728 <nftw@plt+0xcba8>
  40f76c:	nop
  40f770:	ldr	x2, [x0, #24]
  40f774:	cbz	x2, 40f7b0 <nftw@plt+0xcc30>
  40f778:	ldr	w0, [x2, #4]
  40f77c:	cbz	w0, 40f7b0 <nftw@plt+0xcc30>
  40f780:	sub	w0, w0, #0x1
  40f784:	add	x3, x2, #0x10
  40f788:	add	x2, x2, #0x8
  40f78c:	add	x0, x3, w0, uxtw #3
  40f790:	ldr	w3, [x2]
  40f794:	cmp	w3, w1
  40f798:	b.gt	40f7a4 <nftw@plt+0xcc24>
  40f79c:	ldr	w3, [x2, #4]
  40f7a0:	add	w1, w1, w3
  40f7a4:	add	x2, x2, #0x8
  40f7a8:	cmp	x2, x0
  40f7ac:	b.ne	40f790 <nftw@plt+0xcc10>  // b.any
  40f7b0:	mov	w0, w1
  40f7b4:	ret
  40f7b8:	stp	x29, x30, [sp, #-96]!
  40f7bc:	cmp	w4, #0x1
  40f7c0:	mov	x29, sp
  40f7c4:	stp	x19, x20, [sp, #16]
  40f7c8:	mov	w20, w1
  40f7cc:	stp	x21, x22, [sp, #32]
  40f7d0:	mov	w22, w4
  40f7d4:	mov	x21, x0
  40f7d8:	stp	x23, x24, [sp, #48]
  40f7dc:	stp	x25, x26, [sp, #64]
  40f7e0:	mov	x25, x3
  40f7e4:	b.le	40f7f8 <nftw@plt+0xcc78>
  40f7e8:	add	x0, x3, w4, sxtw
  40f7ec:	ldurb	w0, [x0, #-1]
  40f7f0:	cmp	w0, #0xa
  40f7f4:	b.eq	40fa94 <nftw@plt+0xcf14>  // b.none
  40f7f8:	ldr	x5, [x21, #24]
  40f7fc:	cbz	x5, 40f860 <nftw@plt+0xcce0>
  40f800:	ldr	w0, [x5, #4]
  40f804:	cbz	w0, 40f860 <nftw@plt+0xcce0>
  40f808:	sub	w0, w0, #0x1
  40f80c:	add	x4, x5, #0x10
  40f810:	add	x5, x5, #0x8
  40f814:	add	x6, x4, w0, uxtw #3
  40f818:	mov	x1, x5
  40f81c:	ldr	w3, [x1]
  40f820:	cmp	w3, w20
  40f824:	b.gt	40f830 <nftw@plt+0xccb0>
  40f828:	ldr	w3, [x1, #4]
  40f82c:	add	w20, w20, w3
  40f830:	add	x1, x1, #0x8
  40f834:	cmp	x6, x1
  40f838:	b.ne	40f81c <nftw@plt+0xcc9c>  // b.any
  40f83c:	add	x0, x4, w0, uxtw #3
  40f840:	ldr	w1, [x5]
  40f844:	cmp	w1, w2
  40f848:	b.gt	40f854 <nftw@plt+0xccd4>
  40f84c:	ldr	w1, [x5, #4]
  40f850:	add	w2, w2, w1
  40f854:	add	x5, x5, #0x8
  40f858:	cmp	x0, x5
  40f85c:	b.ne	40f840 <nftw@plt+0xccc0>  // b.any
  40f860:	sub	w23, w2, #0x1
  40f864:	subs	w24, w20, #0x1
  40f868:	b.mi	40fc54 <nftw@plt+0xd0d4>  // b.first
  40f86c:	tbnz	w23, #31, 40fc20 <nftw@plt+0xd0a0>
  40f870:	cmp	w20, w2
  40f874:	b.gt	40f980 <nftw@plt+0xce00>
  40f878:	cmp	w24, w23
  40f87c:	ldr	w1, [x21, #16]
  40f880:	csel	w3, w24, w23, ge  // ge = tcont
  40f884:	mov	w0, #0x0                   	// #0
  40f888:	cmp	w1, w3
  40f88c:	b.ge	40f8a8 <nftw@plt+0xcd28>  // b.tcont
  40f890:	ldp	x19, x20, [sp, #16]
  40f894:	ldp	x21, x22, [sp, #32]
  40f898:	ldp	x23, x24, [sp, #48]
  40f89c:	ldp	x25, x26, [sp, #64]
  40f8a0:	ldp	x29, x30, [sp], #96
  40f8a4:	ret
  40f8a8:	sub	w19, w2, w20
  40f8ac:	add	w26, w1, w22
  40f8b0:	ldr	w2, [x21, #20]
  40f8b4:	sub	w26, w26, w19
  40f8b8:	ldr	x0, [x21, #8]
  40f8bc:	str	x27, [sp, #80]
  40f8c0:	cmp	w26, w2
  40f8c4:	b.ge	40f99c <nftw@plt+0xce1c>  // b.tcont
  40f8c8:	sxtw	x2, w1
  40f8cc:	sxtw	x23, w23
  40f8d0:	add	x1, x0, x23
  40f8d4:	add	x3, x0, x2
  40f8d8:	cmp	x1, x3
  40f8dc:	b.hi	40fc3c <nftw@plt+0xd0bc>  // b.pmore
  40f8e0:	sxtw	x24, w24
  40f8e4:	sxtw	x27, w22
  40f8e8:	add	x3, x24, x27
  40f8ec:	sub	x2, x2, x23
  40f8f0:	add	x0, x0, x3
  40f8f4:	bl	4024a0 <memmove@plt>
  40f8f8:	ldr	x0, [x21, #8]
  40f8fc:	mov	x2, x27
  40f900:	mov	x1, x25
  40f904:	add	x0, x0, x24
  40f908:	bl	402490 <memcpy@plt>
  40f90c:	ldr	w0, [x21, #20]
  40f910:	str	w26, [x21, #16]
  40f914:	cmp	w26, w0
  40f918:	b.ge	40fc70 <nftw@plt+0xd0f0>  // b.tcont
  40f91c:	ldr	x0, [x21, #8]
  40f920:	sub	w19, w22, w19
  40f924:	strb	wzr, [x0, w26, sxtw]
  40f928:	ldr	x22, [x21, #24]
  40f92c:	cbz	x22, 40f9bc <nftw@plt+0xce3c>
  40f930:	ldp	w0, w23, [x22]
  40f934:	add	w24, w23, #0x1
  40f938:	ubfx	x0, x0, #0, #31
  40f93c:	mov	w1, w24
  40f940:	cmp	w0, w23
  40f944:	b.eq	40f9e4 <nftw@plt+0xce64>  // b.none
  40f948:	ubfiz	x23, x23, #3, #32
  40f94c:	mov	w0, #0x1                   	// #1
  40f950:	add	x23, x23, #0x8
  40f954:	ldr	x27, [sp, #80]
  40f958:	str	w1, [x22, #4]
  40f95c:	add	x1, x22, x23
  40f960:	str	w20, [x22, x23]
  40f964:	ldp	x21, x22, [sp, #32]
  40f968:	str	w19, [x1, #4]
  40f96c:	ldp	x19, x20, [sp, #16]
  40f970:	ldp	x23, x24, [sp, #48]
  40f974:	ldp	x25, x26, [sp, #64]
  40f978:	ldp	x29, x30, [sp], #96
  40f97c:	ret
  40f980:	mov	w0, #0x0                   	// #0
  40f984:	ldp	x19, x20, [sp, #16]
  40f988:	ldp	x21, x22, [sp, #32]
  40f98c:	ldp	x23, x24, [sp, #48]
  40f990:	ldp	x25, x26, [sp, #64]
  40f994:	ldp	x29, x30, [sp], #96
  40f998:	ret
  40f99c:	add	w27, w26, #0x1
  40f9a0:	lsl	w27, w27, #1
  40f9a4:	sxtw	x1, w27
  40f9a8:	bl	4615e8 <_obstack_memory_used@@Base+0x1a0>
  40f9ac:	ldr	w1, [x21, #16]
  40f9b0:	str	x0, [x21, #8]
  40f9b4:	str	w27, [x21, #20]
  40f9b8:	b	40f8c8 <nftw@plt+0xcd48>
  40f9bc:	mov	x1, #0x28                  	// #40
  40f9c0:	mov	x0, #0x0                   	// #0
  40f9c4:	bl	4615e8 <_obstack_memory_used@@Base+0x1a0>
  40f9c8:	mov	x22, x0
  40f9cc:	str	x22, [x21, #24]
  40f9d0:	mov	x0, #0x4                   	// #4
  40f9d4:	mov	w23, #0x0                   	// #0
  40f9d8:	add	w1, w23, #0x1
  40f9dc:	str	x0, [x22]
  40f9e0:	b	40f948 <nftw@plt+0xcdc8>
  40f9e4:	ldrsb	w0, [x22, #3]
  40f9e8:	tbnz	w0, #31, 40fa2c <nftw@plt+0xceac>
  40f9ec:	mov	w0, w23
  40f9f0:	bl	416358 <nftw@plt+0x137d8>
  40f9f4:	mov	w2, w0
  40f9f8:	and	w24, w0, #0x7fffffff
  40f9fc:	ldr	x0, [x21, #24]
  40fa00:	ubfiz	x1, x2, #3, #32
  40fa04:	add	x1, x1, #0x8
  40fa08:	mov	w23, #0x0                   	// #0
  40fa0c:	cbz	x0, 40fa14 <nftw@plt+0xce94>
  40fa10:	ldr	w23, [x0, #4]
  40fa14:	bl	4615e8 <_obstack_memory_used@@Base+0x1a0>
  40fa18:	str	x0, [x21, #24]
  40fa1c:	mov	x22, x0
  40fa20:	add	w1, w23, #0x1
  40fa24:	stp	w24, w23, [x0]
  40fa28:	b	40f948 <nftw@plt+0xcdc8>
  40fa2c:	cmp	w24, #0x4
  40fa30:	mov	w0, #0x4                   	// #4
  40fa34:	csel	w1, w24, w0, cs  // cs = hs, nlast
  40fa38:	str	xzr, [x21, #24]
  40fa3c:	add	x1, x1, #0x1
  40fa40:	csel	w25, w24, w0, cs  // cs = hs, nlast
  40fa44:	mov	x0, #0x0                   	// #0
  40fa48:	and	x25, x25, #0x7fffffff
  40fa4c:	lsl	x1, x1, #3
  40fa50:	bl	4615e8 <_obstack_memory_used@@Base+0x1a0>
  40fa54:	str	x0, [x21, #24]
  40fa58:	str	x25, [x0]
  40fa5c:	cbz	w23, 40fa84 <nftw@plt+0xcf04>
  40fa60:	sub	w3, w23, #0x1
  40fa64:	mov	x1, #0x8                   	// #8
  40fa68:	add	x3, x3, #0x2
  40fa6c:	lsl	x3, x3, #3
  40fa70:	ldr	x2, [x22, x1]
  40fa74:	str	x2, [x0, x1]
  40fa78:	add	x1, x1, #0x8
  40fa7c:	cmp	x3, x1
  40fa80:	b.ne	40fa70 <nftw@plt+0xcef0>  // b.any
  40fa84:	mov	w1, w24
  40fa88:	mov	x22, x0
  40fa8c:	str	w23, [x0, #4]
  40fa90:	b	40f948 <nftw@plt+0xcdc8>
  40fa94:	sub	w22, w4, #0x1
  40fa98:	mov	x0, #0x10                  	// #16
  40fa9c:	bl	461d40 <_obstack_memory_used@@Base+0x8f8>
  40faa0:	mov	x23, x0
  40faa4:	sxtw	x1, w22
  40faa8:	mov	x0, x25
  40faac:	bl	461730 <_obstack_memory_used@@Base+0x2e8>
  40fab0:	ldr	x20, [x21, #32]
  40fab4:	str	x0, [x23]
  40fab8:	str	w22, [x23, #8]
  40fabc:	cbz	x20, 40faec <nftw@plt+0xcf6c>
  40fac0:	ldp	w0, w19, [x20]
  40fac4:	add	w22, w19, #0x1
  40fac8:	ubfx	x0, x0, #0, #31
  40facc:	mov	w1, w22
  40fad0:	cmp	w0, w19
  40fad4:	b.eq	40fb14 <nftw@plt+0xcf94>  // b.none
  40fad8:	add	x19, x20, w19, uxtw #3
  40fadc:	str	w1, [x20, #4]
  40fae0:	mov	w0, #0x1                   	// #1
  40fae4:	str	x23, [x19, #8]
  40fae8:	b	40f890 <nftw@plt+0xcd10>
  40faec:	mov	x1, #0x28                  	// #40
  40faf0:	mov	x0, #0x0                   	// #0
  40faf4:	bl	4615e8 <_obstack_memory_used@@Base+0x1a0>
  40faf8:	mov	x20, x0
  40fafc:	str	x20, [x21, #32]
  40fb00:	mov	x0, #0x4                   	// #4
  40fb04:	mov	w19, #0x0                   	// #0
  40fb08:	add	w1, w19, #0x1
  40fb0c:	str	x0, [x20]
  40fb10:	b	40fad8 <nftw@plt+0xcf58>
  40fb14:	ldrsb	w0, [x20, #3]
  40fb18:	tbnz	w0, #31, 40fb5c <nftw@plt+0xcfdc>
  40fb1c:	mov	w0, w19
  40fb20:	bl	416358 <nftw@plt+0x137d8>
  40fb24:	mov	w2, w0
  40fb28:	and	w22, w0, #0x7fffffff
  40fb2c:	ldr	x0, [x21, #32]
  40fb30:	ubfiz	x1, x2, #3, #32
  40fb34:	add	x1, x1, #0x8
  40fb38:	mov	w19, #0x0                   	// #0
  40fb3c:	cbz	x0, 40fb44 <nftw@plt+0xcfc4>
  40fb40:	ldr	w19, [x0, #4]
  40fb44:	bl	4615e8 <_obstack_memory_used@@Base+0x1a0>
  40fb48:	str	x0, [x21, #32]
  40fb4c:	mov	x20, x0
  40fb50:	add	w1, w19, #0x1
  40fb54:	stp	w22, w19, [x0]
  40fb58:	b	40fad8 <nftw@plt+0xcf58>
  40fb5c:	cmp	w22, #0x4
  40fb60:	mov	w0, #0x4                   	// #4
  40fb64:	csel	w1, w22, w0, cs  // cs = hs, nlast
  40fb68:	str	xzr, [x21, #32]
  40fb6c:	add	x1, x1, #0x1
  40fb70:	csel	w24, w22, w0, cs  // cs = hs, nlast
  40fb74:	mov	x0, #0x0                   	// #0
  40fb78:	and	x24, x24, #0x7fffffff
  40fb7c:	lsl	x1, x1, #3
  40fb80:	bl	4615e8 <_obstack_memory_used@@Base+0x1a0>
  40fb84:	mov	x3, x0
  40fb88:	str	x0, [x21, #32]
  40fb8c:	add	x4, x20, #0x8
  40fb90:	str	x24, [x3], #8
  40fb94:	cbz	w19, 40fbec <nftw@plt+0xd06c>
  40fb98:	add	x1, x20, #0x18
  40fb9c:	add	x2, x0, #0x18
  40fba0:	cmp	x1, x3
  40fba4:	sub	w1, w19, #0x1
  40fba8:	ccmp	x4, x2, #0x2, hi  // hi = pmore
  40fbac:	ccmp	w1, #0x9, #0x0, cs  // cs = hs, nlast
  40fbb0:	b.ls	40fbfc <nftw@plt+0xd07c>  // b.plast
  40fbb4:	lsr	w2, w19, #1
  40fbb8:	mov	x5, #0x8                   	// #8
  40fbbc:	mov	x1, x5
  40fbc0:	add	x2, x5, w2, uxtw #4
  40fbc4:	nop
  40fbc8:	ldr	q0, [x20, x1]
  40fbcc:	str	q0, [x0, x1]
  40fbd0:	add	x1, x1, #0x10
  40fbd4:	cmp	x2, x1
  40fbd8:	b.ne	40fbc8 <nftw@plt+0xd048>  // b.any
  40fbdc:	and	x1, x19, #0xfffffffe
  40fbe0:	tbz	w19, #0, 40fbec <nftw@plt+0xd06c>
  40fbe4:	ldr	x2, [x4, x1, lsl #3]
  40fbe8:	str	x2, [x3, x1, lsl #3]
  40fbec:	mov	w1, w22
  40fbf0:	mov	x20, x0
  40fbf4:	str	w19, [x0, #4]
  40fbf8:	b	40fad8 <nftw@plt+0xcf58>
  40fbfc:	ubfiz	x2, x1, #3, #32
  40fc00:	mov	x1, #0x8                   	// #8
  40fc04:	add	x2, x2, #0x10
  40fc08:	ldr	x3, [x20, x1]
  40fc0c:	str	x3, [x0, x1]
  40fc10:	add	x1, x1, #0x8
  40fc14:	cmp	x1, x2
  40fc18:	b.ne	40fc08 <nftw@plt+0xd088>  // b.any
  40fc1c:	b	40fbec <nftw@plt+0xd06c>
  40fc20:	adrp	x2, 473000 <_obstack_memory_used@@Base+0x11bb8>
  40fc24:	adrp	x0, 473000 <_obstack_memory_used@@Base+0x11bb8>
  40fc28:	add	x2, x2, #0xe30
  40fc2c:	add	x0, x0, #0xe00
  40fc30:	mov	w1, #0x2fb                 	// #763
  40fc34:	str	x27, [sp, #80]
  40fc38:	bl	402bf0 <nftw@plt+0x70>
  40fc3c:	adrp	x2, 473000 <_obstack_memory_used@@Base+0x11bb8>
  40fc40:	adrp	x0, 473000 <_obstack_memory_used@@Base+0x11bb8>
  40fc44:	add	x2, x2, #0xe30
  40fc48:	add	x0, x0, #0xe00
  40fc4c:	mov	w1, #0x30b                 	// #779
  40fc50:	bl	402bf0 <nftw@plt+0x70>
  40fc54:	adrp	x2, 473000 <_obstack_memory_used@@Base+0x11bb8>
  40fc58:	adrp	x0, 473000 <_obstack_memory_used@@Base+0x11bb8>
  40fc5c:	add	x2, x2, #0xe30
  40fc60:	add	x0, x0, #0xe00
  40fc64:	mov	w1, #0x2fa                 	// #762
  40fc68:	str	x27, [sp, #80]
  40fc6c:	bl	402bf0 <nftw@plt+0x70>
  40fc70:	bl	402c3c <nftw@plt+0xbc>
  40fc74:	nop
  40fc78:	ldr	x0, [x0, #32]
  40fc7c:	cbz	x0, 40fc8c <nftw@plt+0xd10c>
  40fc80:	ldr	w0, [x0, #4]
  40fc84:	add	w0, w0, #0x1
  40fc88:	ret
  40fc8c:	mov	w0, #0x1                   	// #1
  40fc90:	ret
  40fc94:	nop
  40fc98:	stp	x29, x30, [sp, #-48]!
  40fc9c:	mov	x29, sp
  40fca0:	ldr	x2, [x0, #32]
  40fca4:	stp	x19, x20, [sp, #16]
  40fca8:	mov	x20, x0
  40fcac:	mov	x19, x1
  40fcb0:	cbz	x2, 40fcf4 <nftw@plt+0xd174>
  40fcb4:	str	x21, [sp, #32]
  40fcb8:	mov	w21, #0x0                   	// #0
  40fcbc:	ldr	w1, [x2, #4]
  40fcc0:	add	x3, x2, w21, uxtw #3
  40fcc4:	mov	x0, x19
  40fcc8:	cmp	w1, w21
  40fccc:	b.ls	40fcf0 <nftw@plt+0xd170>  // b.plast
  40fcd0:	ldr	x1, [x3, #8]
  40fcd4:	add	w21, w21, #0x1
  40fcd8:	ldr	x1, [x1]
  40fcdc:	bl	414bf0 <nftw@plt+0x12070>
  40fce0:	mov	x0, x19
  40fce4:	bl	412f40 <nftw@plt+0x103c0>
  40fce8:	ldr	x2, [x20, #32]
  40fcec:	cbnz	x2, 40fcbc <nftw@plt+0xd13c>
  40fcf0:	ldr	x21, [sp, #32]
  40fcf4:	mov	x0, x19
  40fcf8:	ldr	x1, [x20, #8]
  40fcfc:	ldp	x19, x20, [sp, #16]
  40fd00:	ldp	x29, x30, [sp], #48
  40fd04:	b	414bf0 <nftw@plt+0x12070>
  40fd08:	stp	x29, x30, [sp, #-64]!
  40fd0c:	mov	x29, sp
  40fd10:	stp	x21, x22, [sp, #32]
  40fd14:	mov	x21, x0
  40fd18:	ldr	x0, [x0, #32]
  40fd1c:	stp	x19, x20, [sp, #16]
  40fd20:	mov	x20, x1
  40fd24:	cbz	x0, 40fda4 <nftw@plt+0xd224>
  40fd28:	str	x23, [sp, #48]
  40fd2c:	mov	w23, #0x0                   	// #0
  40fd30:	ldr	w1, [x0, #4]
  40fd34:	cmp	w1, w23
  40fd38:	b.ls	40fda0 <nftw@plt+0xd220>  // b.plast
  40fd3c:	add	x2, x0, w23, uxtw #3
  40fd40:	mov	w1, #0x2b                  	// #43
  40fd44:	mov	x0, x20
  40fd48:	ldr	x2, [x2, #8]
  40fd4c:	ldr	w22, [x2, #8]
  40fd50:	ldr	x19, [x2]
  40fd54:	bl	412fa0 <nftw@plt+0x10420>
  40fd58:	cmp	w22, #0x0
  40fd5c:	b.le	40fd84 <nftw@plt+0xd204>
  40fd60:	sub	w22, w22, #0x1
  40fd64:	add	x0, x19, #0x1
  40fd68:	add	x22, x22, x0
  40fd6c:	nop
  40fd70:	ldrb	w1, [x19], #1
  40fd74:	mov	x0, x20
  40fd78:	bl	412fa0 <nftw@plt+0x10420>
  40fd7c:	cmp	x22, x19
  40fd80:	b.ne	40fd70 <nftw@plt+0xd1f0>  // b.any
  40fd84:	mov	x0, x20
  40fd88:	mov	w1, #0xa                   	// #10
  40fd8c:	bl	412fa0 <nftw@plt+0x10420>
  40fd90:	add	w23, w23, #0x1
  40fd94:	ldr	x0, [x21, #32]
  40fd98:	cbnz	x0, 40fd30 <nftw@plt+0xd1b0>
  40fd9c:	nop
  40fda0:	ldr	x23, [sp, #48]
  40fda4:	ldr	x0, [x21, #24]
  40fda8:	ldr	x19, [x21, #8]
  40fdac:	ldr	w21, [x21, #16]
  40fdb0:	cbz	x0, 40fdbc <nftw@plt+0xd23c>
  40fdb4:	ldr	w0, [x0, #4]
  40fdb8:	cbnz	w0, 40fe0c <nftw@plt+0xd28c>
  40fdbc:	mov	x0, x20
  40fdc0:	mov	w1, #0x20                  	// #32
  40fdc4:	bl	412fa0 <nftw@plt+0x10420>
  40fdc8:	cmp	w21, #0x0
  40fdcc:	b.le	40fdf4 <nftw@plt+0xd274>
  40fdd0:	sub	w21, w21, #0x1
  40fdd4:	add	x0, x19, #0x1
  40fdd8:	add	x21, x21, x0
  40fddc:	nop
  40fde0:	ldrb	w1, [x19], #1
  40fde4:	mov	x0, x20
  40fde8:	bl	412fa0 <nftw@plt+0x10420>
  40fdec:	cmp	x19, x21
  40fdf0:	b.ne	40fde0 <nftw@plt+0xd260>  // b.any
  40fdf4:	mov	x0, x20
  40fdf8:	mov	w1, #0xa                   	// #10
  40fdfc:	ldp	x19, x20, [sp, #16]
  40fe00:	ldp	x21, x22, [sp, #32]
  40fe04:	ldp	x29, x30, [sp], #64
  40fe08:	b	412fa0 <nftw@plt+0x10420>
  40fe0c:	mov	x0, x20
  40fe10:	mov	w1, #0x2b                  	// #43
  40fe14:	bl	412fa0 <nftw@plt+0x10420>
  40fe18:	cmp	w21, #0x0
  40fe1c:	b.le	40fdf4 <nftw@plt+0xd274>
  40fe20:	sub	w21, w21, #0x1
  40fe24:	add	x0, x19, #0x1
  40fe28:	add	x21, x21, x0
  40fe2c:	nop
  40fe30:	ldrb	w1, [x19], #1
  40fe34:	mov	x0, x20
  40fe38:	bl	412fa0 <nftw@plt+0x10420>
  40fe3c:	cmp	x21, x19
  40fe40:	b.ne	40fe30 <nftw@plt+0xd2b0>  // b.any
  40fe44:	mov	x0, x20
  40fe48:	mov	w1, #0xa                   	// #10
  40fe4c:	ldp	x19, x20, [sp, #16]
  40fe50:	ldp	x21, x22, [sp, #32]
  40fe54:	ldp	x29, x30, [sp], #64
  40fe58:	b	412fa0 <nftw@plt+0x10420>
  40fe5c:	nop
  40fe60:	stp	x29, x30, [sp, #-32]!
  40fe64:	mov	x29, sp
  40fe68:	stp	x19, x20, [sp, #16]
  40fe6c:	mov	x20, x0
  40fe70:	ldr	w0, [x0, #20]
  40fe74:	cmp	w0, w1
  40fe78:	b.le	40fe88 <nftw@plt+0xd308>
  40fe7c:	ldp	x19, x20, [sp, #16]
  40fe80:	ldp	x29, x30, [sp], #32
  40fe84:	ret
  40fe88:	add	w1, w1, #0x1
  40fe8c:	ldr	x0, [x20, #8]
  40fe90:	lsl	w19, w1, #1
  40fe94:	sxtw	x1, w19
  40fe98:	bl	4615e8 <_obstack_memory_used@@Base+0x1a0>
  40fe9c:	str	x0, [x20, #8]
  40fea0:	str	w19, [x20, #20]
  40fea4:	ldp	x19, x20, [sp, #16]
  40fea8:	ldp	x29, x30, [sp], #32
  40feac:	ret
  40feb0:	ldp	w1, w2, [x0, #16]
  40feb4:	cmp	w1, w2
  40feb8:	b.ge	40fec8 <nftw@plt+0xd348>  // b.tcont
  40febc:	ldr	x0, [x0, #8]
  40fec0:	strb	wzr, [x0, w1, sxtw]
  40fec4:	ret
  40fec8:	stp	x29, x30, [sp, #-16]!
  40fecc:	mov	x29, sp
  40fed0:	bl	402c3c <nftw@plt+0xbc>
  40fed4:	nop
  40fed8:	cbz	x0, 40ff0c <nftw@plt+0xd38c>
  40fedc:	stp	x29, x30, [sp, #-32]!
  40fee0:	mov	x29, sp
  40fee4:	str	x19, [sp, #16]
  40fee8:	mov	x19, x0
  40feec:	add	x0, x0, #0x8
  40fef0:	ldr	x1, [x19, #8]
  40fef4:	bl	411970 <nftw@plt+0xedf0>
  40fef8:	mov	x0, x19
  40fefc:	mov	x1, #0x30                  	// #48
  40ff00:	ldr	x19, [sp, #16]
  40ff04:	ldp	x29, x30, [sp], #32
  40ff08:	b	461b00 <_obstack_memory_used@@Base+0x6b8>
  40ff0c:	ret
  40ff10:	stp	x29, x30, [sp, #-48]!
  40ff14:	mov	x29, sp
  40ff18:	stp	x19, x20, [sp, #16]
  40ff1c:	str	x21, [sp, #32]
  40ff20:	cbz	x1, 40ff84 <nftw@plt+0xd404>
  40ff24:	mov	x19, x0
  40ff28:	add	x21, x0, #0x8
  40ff2c:	mov	x0, x21
  40ff30:	mov	x20, x1
  40ff34:	bl	411a80 <nftw@plt+0xef00>
  40ff38:	ldr	x0, [x19, #8]
  40ff3c:	cbz	x0, 40ff70 <nftw@plt+0xd3f0>
  40ff40:	ldr	x0, [x0]
  40ff44:	mov	x1, x20
  40ff48:	ldr	x2, [x21, #8]
  40ff4c:	blr	x2
  40ff50:	cbnz	w0, 40ff70 <nftw@plt+0xd3f0>
  40ff54:	ldr	x0, [x19, #8]
  40ff58:	cbz	x0, 40ff70 <nftw@plt+0xd3f0>
  40ff5c:	ldr	x0, [x0, #8]
  40ff60:	ldp	x19, x20, [sp, #16]
  40ff64:	ldr	x21, [sp, #32]
  40ff68:	ldp	x29, x30, [sp], #48
  40ff6c:	ret
  40ff70:	mov	x0, #0x0                   	// #0
  40ff74:	ldp	x19, x20, [sp, #16]
  40ff78:	ldr	x21, [sp, #32]
  40ff7c:	ldp	x29, x30, [sp], #48
  40ff80:	ret
  40ff84:	adrp	x2, 473000 <_obstack_memory_used@@Base+0x11bb8>
  40ff88:	adrp	x0, 473000 <_obstack_memory_used@@Base+0x11bb8>
  40ff8c:	add	x2, x2, #0xe40
  40ff90:	add	x0, x0, #0xe00
  40ff94:	mov	w1, #0x140                 	// #320
  40ff98:	bl	402bf0 <nftw@plt+0x70>
  40ff9c:	nop
  40ffa0:	stp	x29, x30, [sp, #-48]!
  40ffa4:	mov	x29, sp
  40ffa8:	stp	x19, x20, [sp, #16]
  40ffac:	stp	x21, x22, [sp, #32]
  40ffb0:	cbz	x1, 410114 <nftw@plt+0xd594>
  40ffb4:	mov	x19, x0
  40ffb8:	add	x22, x0, #0x8
  40ffbc:	mov	x0, x22
  40ffc0:	mov	x20, x1
  40ffc4:	bl	411a80 <nftw@plt+0xef00>
  40ffc8:	ldr	x0, [x19, #8]
  40ffcc:	cbz	x0, 410008 <nftw@plt+0xd488>
  40ffd0:	ldr	x0, [x0]
  40ffd4:	mov	x1, x20
  40ffd8:	ldr	x2, [x22, #8]
  40ffdc:	blr	x2
  40ffe0:	cbnz	w0, 410008 <nftw@plt+0xd488>
  40ffe4:	ldr	x0, [x19, #8]
  40ffe8:	cbz	x0, 410008 <nftw@plt+0xd488>
  40ffec:	ldr	x21, [x0, #8]
  40fff0:	cbz	x21, 410008 <nftw@plt+0xd488>
  40fff4:	mov	x0, x21
  40fff8:	ldp	x19, x20, [sp, #16]
  40fffc:	ldp	x21, x22, [sp, #32]
  410000:	ldp	x29, x30, [sp], #48
  410004:	ret
  410008:	mov	x0, #0x30                  	// #48
  41000c:	bl	461d40 <_obstack_memory_used@@Base+0x8f8>
  410010:	mov	x2, x0
  410014:	mov	x21, x0
  410018:	adrp	x4, 40f000 <nftw@plt+0xc480>
  41001c:	adrp	x3, 40f000 <nftw@plt+0xc480>
  410020:	add	x4, x4, #0x410
  410024:	add	x3, x3, #0x418
  410028:	str	x20, [x2], #8
  41002c:	mov	w5, #0xffffffff            	// #-1
  410030:	str	xzr, [x21, #8]
  410034:	mov	x0, x22
  410038:	stp	x4, xzr, [x2, #8]
  41003c:	mov	x1, x20
  410040:	str	x3, [x2, #24]
  410044:	str	w5, [x21, #40]
  410048:	bl	411a80 <nftw@plt+0xef00>
  41004c:	ldr	x0, [x19, #8]
  410050:	cbz	x0, 4100e0 <nftw@plt+0xd560>
  410054:	ldr	x0, [x0]
  410058:	mov	x1, x20
  41005c:	ldr	x2, [x22, #8]
  410060:	blr	x2
  410064:	cmp	w0, #0x0
  410068:	ldr	x1, [x19, #8]
  41006c:	mov	w22, w0
  410070:	ccmp	x1, #0x0, #0x4, eq  // eq = none
  410074:	b.ne	4100b4 <nftw@plt+0xd534>  // b.any
  410078:	mov	x0, #0x28                  	// #40
  41007c:	bl	461d40 <_obstack_memory_used@@Base+0x8f8>
  410080:	ldr	x1, [x19, #8]
  410084:	stp	x20, x21, [x0]
  410088:	cbz	x1, 4100f4 <nftw@plt+0xd574>
  41008c:	tbnz	w22, #31, 410100 <nftw@plt+0xd580>
  410090:	ldr	x2, [x1, #16]
  410094:	stp	x2, x1, [x0, #16]
  410098:	str	xzr, [x1, #16]
  41009c:	str	x0, [x19, #8]
  4100a0:	mov	x0, x21
  4100a4:	ldp	x19, x20, [sp, #16]
  4100a8:	ldp	x21, x22, [sp, #32]
  4100ac:	ldp	x29, x30, [sp], #48
  4100b0:	ret
  4100b4:	ldr	x2, [x19, #32]
  4100b8:	cbz	x2, 4100c8 <nftw@plt+0xd548>
  4100bc:	ldr	x0, [x1, #8]
  4100c0:	blr	x2
  4100c4:	ldr	x1, [x19, #8]
  4100c8:	str	x21, [x1, #8]
  4100cc:	mov	x0, x21
  4100d0:	ldp	x19, x20, [sp, #16]
  4100d4:	ldp	x21, x22, [sp, #32]
  4100d8:	ldp	x29, x30, [sp], #48
  4100dc:	ret
  4100e0:	mov	x0, #0x28                  	// #40
  4100e4:	bl	461d40 <_obstack_memory_used@@Base+0x8f8>
  4100e8:	ldr	x1, [x19, #8]
  4100ec:	stp	x20, x21, [x0]
  4100f0:	cbnz	x1, 410090 <nftw@plt+0xd510>
  4100f4:	str	x0, [x19, #8]
  4100f8:	stp	xzr, xzr, [x0, #16]
  4100fc:	b	4100a0 <nftw@plt+0xd520>
  410100:	ldr	x2, [x1, #24]
  410104:	stp	x1, x2, [x0, #16]
  410108:	str	xzr, [x1, #24]
  41010c:	str	x0, [x19, #8]
  410110:	b	4100a0 <nftw@plt+0xd520>
  410114:	adrp	x2, 473000 <_obstack_memory_used@@Base+0x11bb8>
  410118:	adrp	x0, 473000 <_obstack_memory_used@@Base+0x11bb8>
  41011c:	add	x2, x2, #0xe50
  410120:	add	x0, x0, #0xe00
  410124:	mov	w1, #0x149                 	// #329
  410128:	bl	402bf0 <nftw@plt+0x70>
  41012c:	nop
  410130:	stp	x29, x30, [sp, #-64]!
  410134:	mov	x29, sp
  410138:	stp	x19, x20, [sp, #16]
  41013c:	mov	x20, x0
  410140:	stp	x23, x24, [sp, #48]
  410144:	add	x23, x0, #0x8
  410148:	mov	x0, x23
  41014c:	stp	x21, x22, [sp, #32]
  410150:	mov	w21, w1
  410154:	bl	411bf0 <nftw@plt+0xf070>
  410158:	ldr	x0, [x20, #8]
  41015c:	cbz	x0, 41019c <nftw@plt+0xd61c>
  410160:	ldr	w0, [x0]
  410164:	mov	w1, w21
  410168:	ldr	x2, [x23, #8]
  41016c:	blr	x2
  410170:	cbnz	w0, 41019c <nftw@plt+0xd61c>
  410174:	ldr	x0, [x20, #8]
  410178:	cbz	x0, 41019c <nftw@plt+0xd61c>
  41017c:	ldr	x19, [x0, #8]
  410180:	cbz	x19, 41019c <nftw@plt+0xd61c>
  410184:	mov	x0, x19
  410188:	ldp	x19, x20, [sp, #16]
  41018c:	ldp	x21, x22, [sp, #32]
  410190:	ldp	x23, x24, [sp, #48]
  410194:	ldp	x29, x30, [sp], #64
  410198:	ret
  41019c:	mov	x0, #0x28                  	// #40
  4101a0:	bl	461d40 <_obstack_memory_used@@Base+0x8f8>
  4101a4:	mov	x19, x0
  4101a8:	stp	xzr, xzr, [x0, #24]
  4101ac:	mov	w1, w21
  4101b0:	ldr	x0, [x20]
  4101b4:	str	w21, [x19]
  4101b8:	stp	xzr, xzr, [x19, #8]
  4101bc:	bl	419390 <nftw@plt+0x16810>
  4101c0:	mov	x24, x0
  4101c4:	cbz	x0, 410200 <nftw@plt+0xd680>
  4101c8:	ldr	w3, [x19, #20]
  4101cc:	mov	w2, w1
  4101d0:	str	w1, [x19, #16]
  4101d4:	cmp	w1, w3
  4101d8:	ldr	x0, [x19, #8]
  4101dc:	b.ge	4102b4 <nftw@plt+0xd734>  // b.tcont
  4101e0:	mov	x1, x24
  4101e4:	sxtw	x2, w2
  4101e8:	bl	402490 <memcpy@plt>
  4101ec:	ldp	w0, w1, [x19, #16]
  4101f0:	cmp	w0, w1
  4101f4:	b.ge	410328 <nftw@plt+0xd7a8>  // b.tcont
  4101f8:	ldr	x1, [x19, #8]
  4101fc:	strb	wzr, [x1, w0, sxtw]
  410200:	ldr	x0, [x19, #8]
  410204:	cbz	x0, 41030c <nftw@plt+0xd78c>
  410208:	mov	x0, x23
  41020c:	mov	w1, w21
  410210:	bl	411bf0 <nftw@plt+0xf070>
  410214:	ldr	x0, [x20, #8]
  410218:	cbz	x0, 4102d4 <nftw@plt+0xd754>
  41021c:	ldr	w0, [x0]
  410220:	mov	w1, w21
  410224:	ldr	x2, [x23, #8]
  410228:	blr	x2
  41022c:	mov	w22, w0
  410230:	ldr	x1, [x20, #8]
  410234:	cmp	x1, #0x0
  410238:	ccmp	w0, #0x0, #0x0, ne  // ne = any
  41023c:	b.eq	410284 <nftw@plt+0xd704>  // b.none
  410240:	mov	x0, #0x28                  	// #40
  410244:	bl	461d40 <_obstack_memory_used@@Base+0x8f8>
  410248:	ldr	x1, [x20, #8]
  41024c:	str	w21, [x0]
  410250:	str	x19, [x0, #8]
  410254:	cbz	x1, 4102ec <nftw@plt+0xd76c>
  410258:	tbnz	w22, #31, 4102f8 <nftw@plt+0xd778>
  41025c:	ldr	x2, [x1, #16]
  410260:	stp	x2, x1, [x0, #16]
  410264:	str	xzr, [x1, #16]
  410268:	str	x0, [x20, #8]
  41026c:	mov	x0, x19
  410270:	ldp	x19, x20, [sp, #16]
  410274:	ldp	x21, x22, [sp, #32]
  410278:	ldp	x23, x24, [sp, #48]
  41027c:	ldp	x29, x30, [sp], #64
  410280:	ret
  410284:	ldr	x2, [x20, #32]
  410288:	cbz	x2, 410298 <nftw@plt+0xd718>
  41028c:	ldr	x0, [x1, #8]
  410290:	blr	x2
  410294:	ldr	x1, [x20, #8]
  410298:	str	x19, [x1, #8]
  41029c:	mov	x0, x19
  4102a0:	ldp	x19, x20, [sp, #16]
  4102a4:	ldp	x21, x22, [sp, #32]
  4102a8:	ldp	x23, x24, [sp, #48]
  4102ac:	ldp	x29, x30, [sp], #64
  4102b0:	ret
  4102b4:	add	w1, w1, #0x1
  4102b8:	lsl	w22, w1, #1
  4102bc:	sxtw	x1, w22
  4102c0:	bl	4615e8 <_obstack_memory_used@@Base+0x1a0>
  4102c4:	ldr	w2, [x19, #16]
  4102c8:	str	x0, [x19, #8]
  4102cc:	str	w22, [x19, #20]
  4102d0:	b	4101e0 <nftw@plt+0xd660>
  4102d4:	mov	x0, #0x28                  	// #40
  4102d8:	bl	461d40 <_obstack_memory_used@@Base+0x8f8>
  4102dc:	ldr	x1, [x20, #8]
  4102e0:	str	w21, [x0]
  4102e4:	str	x19, [x0, #8]
  4102e8:	cbnz	x1, 41025c <nftw@plt+0xd6dc>
  4102ec:	str	x0, [x20, #8]
  4102f0:	stp	xzr, xzr, [x0, #16]
  4102f4:	b	41026c <nftw@plt+0xd6ec>
  4102f8:	ldr	x2, [x1, #24]
  4102fc:	stp	x1, x2, [x0, #16]
  410300:	str	xzr, [x1, #24]
  410304:	str	x0, [x20, #8]
  410308:	b	41026c <nftw@plt+0xd6ec>
  41030c:	mov	x0, x19
  410310:	bl	40f6a8 <nftw@plt+0xcb28>
  410314:	mov	x0, x19
  410318:	mov	x1, #0x28                  	// #40
  41031c:	mov	x19, #0x0                   	// #0
  410320:	bl	461b00 <_obstack_memory_used@@Base+0x6b8>
  410324:	b	410184 <nftw@plt+0xd604>
  410328:	bl	402c3c <nftw@plt+0xbc>
  41032c:	nop
  410330:	stp	x29, x30, [sp, #-96]!
  410334:	mov	x29, sp
  410338:	stp	x19, x20, [sp, #16]
  41033c:	mov	w20, w3
  410340:	stp	x21, x22, [sp, #32]
  410344:	mov	x21, x4
  410348:	stp	x23, x24, [sp, #48]
  41034c:	mov	w24, w2
  410350:	stp	x25, x26, [sp, #64]
  410354:	mov	w25, w5
  410358:	bl	410130 <nftw@plt+0xd5b0>
  41035c:	cbz	x0, 4104ec <nftw@plt+0xd96c>
  410360:	mov	x19, x0
  410364:	cmp	w25, #0x1
  410368:	b.le	41037c <nftw@plt+0xd7fc>
  41036c:	add	x0, x21, w25, sxtw
  410370:	ldurb	w0, [x0, #-1]
  410374:	cmp	w0, #0xa
  410378:	b.eq	4105dc <nftw@plt+0xda5c>  // b.none
  41037c:	ldr	x0, [x19, #24]
  410380:	cbz	x0, 4103e4 <nftw@plt+0xd864>
  410384:	ldr	w1, [x0, #4]
  410388:	cbz	w1, 4103e4 <nftw@plt+0xd864>
  41038c:	sub	w1, w1, #0x1
  410390:	add	x4, x0, #0x10
  410394:	add	x0, x0, #0x8
  410398:	add	x5, x4, w1, uxtw #3
  41039c:	mov	x3, x0
  4103a0:	ldr	w2, [x3]
  4103a4:	cmp	w2, w24
  4103a8:	b.gt	4103b4 <nftw@plt+0xd834>
  4103ac:	ldr	w2, [x3, #4]
  4103b0:	add	w24, w24, w2
  4103b4:	add	x3, x3, #0x8
  4103b8:	cmp	x5, x3
  4103bc:	b.ne	4103a0 <nftw@plt+0xd820>  // b.any
  4103c0:	add	x1, x4, w1, uxtw #3
  4103c4:	ldr	w2, [x0]
  4103c8:	cmp	w2, w20
  4103cc:	b.gt	4103d8 <nftw@plt+0xd858>
  4103d0:	ldr	w2, [x0, #4]
  4103d4:	add	w20, w20, w2
  4103d8:	add	x0, x0, #0x8
  4103dc:	cmp	x1, x0
  4103e0:	b.ne	4103c4 <nftw@plt+0xd844>  // b.any
  4103e4:	sub	w22, w20, #0x1
  4103e8:	subs	w23, w24, #0x1
  4103ec:	b.mi	410790 <nftw@plt+0xdc10>  // b.first
  4103f0:	tbnz	w22, #31, 4107c8 <nftw@plt+0xdc48>
  4103f4:	cmp	w20, w24
  4103f8:	b.lt	4104ec <nftw@plt+0xd96c>  // b.tstop
  4103fc:	cmp	w23, w22
  410400:	ldr	w2, [x19, #16]
  410404:	csel	w1, w23, w22, ge  // ge = tcont
  410408:	mov	w0, #0x0                   	// #0
  41040c:	cmp	w1, w2
  410410:	b.gt	4104f0 <nftw@plt+0xd970>
  410414:	ldr	w1, [x19, #20]
  410418:	sub	w20, w20, w24
  41041c:	add	w26, w25, w2
  410420:	ldr	x0, [x19, #8]
  410424:	str	x27, [sp, #80]
  410428:	sub	w26, w26, w20
  41042c:	cmp	w26, w1
  410430:	b.ge	4105bc <nftw@plt+0xda3c>  // b.tcont
  410434:	sxtw	x22, w22
  410438:	sxtw	x2, w2
  41043c:	add	x1, x0, x22
  410440:	add	x3, x0, x2
  410444:	cmp	x1, x3
  410448:	b.hi	4107b0 <nftw@plt+0xdc30>  // b.pmore
  41044c:	sxtw	x23, w23
  410450:	sxtw	x27, w25
  410454:	add	x3, x23, x27
  410458:	sub	x2, x2, x22
  41045c:	add	x0, x0, x3
  410460:	bl	4024a0 <memmove@plt>
  410464:	ldr	x0, [x19, #8]
  410468:	mov	x2, x27
  41046c:	mov	x1, x21
  410470:	add	x0, x0, x23
  410474:	bl	402490 <memcpy@plt>
  410478:	ldr	w0, [x19, #20]
  41047c:	str	w26, [x19, #16]
  410480:	cmp	w26, w0
  410484:	b.ge	4107ac <nftw@plt+0xdc2c>  // b.tcont
  410488:	ldr	x0, [x19, #8]
  41048c:	sub	w25, w25, w20
  410490:	strb	wzr, [x0, w26, sxtw]
  410494:	ldr	x21, [x19, #24]
  410498:	cbz	x21, 410740 <nftw@plt+0xdbc0>
  41049c:	ldp	w0, w20, [x21]
  4104a0:	add	w22, w20, #0x1
  4104a4:	ubfx	x0, x0, #0, #31
  4104a8:	mov	w1, w22
  4104ac:	cmp	w0, w20
  4104b0:	b.eq	410508 <nftw@plt+0xd988>  // b.none
  4104b4:	ubfiz	x20, x20, #3, #32
  4104b8:	mov	w0, #0x1                   	// #1
  4104bc:	add	x20, x20, #0x8
  4104c0:	ldr	x27, [sp, #80]
  4104c4:	str	w1, [x21, #4]
  4104c8:	add	x1, x21, x20
  4104cc:	str	w24, [x21, x20]
  4104d0:	ldp	x19, x20, [sp, #16]
  4104d4:	str	w25, [x1, #4]
  4104d8:	ldp	x21, x22, [sp, #32]
  4104dc:	ldp	x23, x24, [sp, #48]
  4104e0:	ldp	x25, x26, [sp, #64]
  4104e4:	ldp	x29, x30, [sp], #96
  4104e8:	ret
  4104ec:	mov	w0, #0x0                   	// #0
  4104f0:	ldp	x19, x20, [sp, #16]
  4104f4:	ldp	x21, x22, [sp, #32]
  4104f8:	ldp	x23, x24, [sp, #48]
  4104fc:	ldp	x25, x26, [sp, #64]
  410500:	ldp	x29, x30, [sp], #96
  410504:	ret
  410508:	ldrsb	w0, [x21, #3]
  41050c:	tbnz	w0, #31, 410550 <nftw@plt+0xd9d0>
  410510:	mov	w0, w20
  410514:	bl	416358 <nftw@plt+0x137d8>
  410518:	mov	w2, w0
  41051c:	and	w22, w0, #0x7fffffff
  410520:	ldr	x0, [x19, #24]
  410524:	ubfiz	x1, x2, #3, #32
  410528:	add	x1, x1, #0x8
  41052c:	mov	w20, #0x0                   	// #0
  410530:	cbz	x0, 410538 <nftw@plt+0xd9b8>
  410534:	ldr	w20, [x0, #4]
  410538:	bl	4615e8 <_obstack_memory_used@@Base+0x1a0>
  41053c:	str	x0, [x19, #24]
  410540:	mov	x21, x0
  410544:	add	w1, w20, #0x1
  410548:	stp	w22, w20, [x0]
  41054c:	b	4104b4 <nftw@plt+0xd934>
  410550:	cmp	w22, #0x4
  410554:	mov	w0, #0x4                   	// #4
  410558:	csel	w1, w22, w0, cs  // cs = hs, nlast
  41055c:	str	xzr, [x19, #24]
  410560:	add	x1, x1, #0x1
  410564:	csel	w23, w22, w0, cs  // cs = hs, nlast
  410568:	mov	x0, #0x0                   	// #0
  41056c:	and	x23, x23, #0x7fffffff
  410570:	lsl	x1, x1, #3
  410574:	bl	4615e8 <_obstack_memory_used@@Base+0x1a0>
  410578:	str	x0, [x19, #24]
  41057c:	str	x23, [x0]
  410580:	cbz	w20, 4105ac <nftw@plt+0xda2c>
  410584:	sub	w3, w20, #0x1
  410588:	mov	x1, #0x8                   	// #8
  41058c:	add	x3, x3, #0x2
  410590:	lsl	x3, x3, #3
  410594:	nop
  410598:	ldr	x2, [x21, x1]
  41059c:	str	x2, [x0, x1]
  4105a0:	add	x1, x1, #0x8
  4105a4:	cmp	x3, x1
  4105a8:	b.ne	410598 <nftw@plt+0xda18>  // b.any
  4105ac:	mov	w1, w22
  4105b0:	mov	x21, x0
  4105b4:	str	w20, [x0, #4]
  4105b8:	b	4104b4 <nftw@plt+0xd934>
  4105bc:	add	w27, w26, #0x1
  4105c0:	lsl	w27, w27, #1
  4105c4:	sxtw	x1, w27
  4105c8:	bl	4615e8 <_obstack_memory_used@@Base+0x1a0>
  4105cc:	ldr	w2, [x19, #16]
  4105d0:	str	x0, [x19, #8]
  4105d4:	str	w27, [x19, #20]
  4105d8:	b	410434 <nftw@plt+0xd8b4>
  4105dc:	sub	w25, w25, #0x1
  4105e0:	mov	x0, #0x10                  	// #16
  4105e4:	bl	461d40 <_obstack_memory_used@@Base+0x8f8>
  4105e8:	mov	x22, x0
  4105ec:	sxtw	x1, w25
  4105f0:	mov	x0, x21
  4105f4:	bl	461730 <_obstack_memory_used@@Base+0x2e8>
  4105f8:	ldr	x20, [x19, #32]
  4105fc:	str	x0, [x22]
  410600:	str	w25, [x22, #8]
  410604:	cbz	x20, 410768 <nftw@plt+0xdbe8>
  410608:	ldp	w0, w21, [x20]
  41060c:	add	w23, w21, #0x1
  410610:	ubfx	x0, x0, #0, #31
  410614:	mov	w1, w23
  410618:	cmp	w0, w21
  41061c:	b.eq	410634 <nftw@plt+0xdab4>  // b.none
  410620:	add	x21, x20, w21, uxtw #3
  410624:	str	w1, [x20, #4]
  410628:	mov	w0, #0x1                   	// #1
  41062c:	str	x22, [x21, #8]
  410630:	b	4104f0 <nftw@plt+0xd970>
  410634:	ldrsb	w0, [x20, #3]
  410638:	tbnz	w0, #31, 41067c <nftw@plt+0xdafc>
  41063c:	mov	w0, w21
  410640:	bl	416358 <nftw@plt+0x137d8>
  410644:	mov	w2, w0
  410648:	and	w23, w0, #0x7fffffff
  41064c:	ldr	x0, [x19, #32]
  410650:	ubfiz	x1, x2, #3, #32
  410654:	add	x1, x1, #0x8
  410658:	mov	w21, #0x0                   	// #0
  41065c:	cbz	x0, 410664 <nftw@plt+0xdae4>
  410660:	ldr	w21, [x0, #4]
  410664:	bl	4615e8 <_obstack_memory_used@@Base+0x1a0>
  410668:	str	x0, [x19, #32]
  41066c:	mov	x20, x0
  410670:	add	w1, w21, #0x1
  410674:	stp	w23, w21, [x0]
  410678:	b	410620 <nftw@plt+0xdaa0>
  41067c:	cmp	w23, #0x4
  410680:	mov	w0, #0x4                   	// #4
  410684:	csel	w1, w23, w0, cs  // cs = hs, nlast
  410688:	str	xzr, [x19, #32]
  41068c:	add	x1, x1, #0x1
  410690:	csel	w24, w23, w0, cs  // cs = hs, nlast
  410694:	mov	x0, #0x0                   	// #0
  410698:	and	x24, x24, #0x7fffffff
  41069c:	lsl	x1, x1, #3
  4106a0:	bl	4615e8 <_obstack_memory_used@@Base+0x1a0>
  4106a4:	mov	x3, x0
  4106a8:	str	x0, [x19, #32]
  4106ac:	add	x4, x20, #0x8
  4106b0:	str	x24, [x3], #8
  4106b4:	cbz	w21, 41070c <nftw@plt+0xdb8c>
  4106b8:	add	x1, x20, #0x18
  4106bc:	add	x2, x0, #0x18
  4106c0:	cmp	x1, x3
  4106c4:	sub	w1, w21, #0x1
  4106c8:	ccmp	x4, x2, #0x2, hi  // hi = pmore
  4106cc:	ccmp	w1, #0x9, #0x0, cs  // cs = hs, nlast
  4106d0:	b.ls	41071c <nftw@plt+0xdb9c>  // b.plast
  4106d4:	lsr	w2, w21, #1
  4106d8:	mov	x5, #0x8                   	// #8
  4106dc:	mov	x1, x5
  4106e0:	add	x2, x5, w2, uxtw #4
  4106e4:	nop
  4106e8:	ldr	q0, [x20, x1]
  4106ec:	str	q0, [x0, x1]
  4106f0:	add	x1, x1, #0x10
  4106f4:	cmp	x2, x1
  4106f8:	b.ne	4106e8 <nftw@plt+0xdb68>  // b.any
  4106fc:	and	x1, x21, #0xfffffffe
  410700:	tbz	w21, #0, 41070c <nftw@plt+0xdb8c>
  410704:	ldr	x2, [x4, x1, lsl #3]
  410708:	str	x2, [x3, x1, lsl #3]
  41070c:	mov	w1, w23
  410710:	mov	x20, x0
  410714:	str	w21, [x0, #4]
  410718:	b	410620 <nftw@plt+0xdaa0>
  41071c:	ubfiz	x2, x1, #3, #32
  410720:	mov	x1, #0x8                   	// #8
  410724:	add	x2, x2, #0x10
  410728:	ldr	x3, [x20, x1]
  41072c:	str	x3, [x0, x1]
  410730:	add	x1, x1, #0x8
  410734:	cmp	x1, x2
  410738:	b.ne	410728 <nftw@plt+0xdba8>  // b.any
  41073c:	b	41070c <nftw@plt+0xdb8c>
  410740:	mov	x1, #0x28                  	// #40
  410744:	mov	x0, #0x0                   	// #0
  410748:	bl	4615e8 <_obstack_memory_used@@Base+0x1a0>
  41074c:	mov	x21, x0
  410750:	str	x21, [x19, #24]
  410754:	mov	x0, #0x4                   	// #4
  410758:	mov	w20, #0x0                   	// #0
  41075c:	add	w1, w20, #0x1
  410760:	str	x0, [x21]
  410764:	b	4104b4 <nftw@plt+0xd934>
  410768:	mov	x1, #0x28                  	// #40
  41076c:	mov	x0, #0x0                   	// #0
  410770:	bl	4615e8 <_obstack_memory_used@@Base+0x1a0>
  410774:	mov	x20, x0
  410778:	str	x20, [x19, #32]
  41077c:	mov	x0, #0x4                   	// #4
  410780:	mov	w21, #0x0                   	// #0
  410784:	add	w1, w21, #0x1
  410788:	str	x0, [x20]
  41078c:	b	410620 <nftw@plt+0xdaa0>
  410790:	adrp	x2, 473000 <_obstack_memory_used@@Base+0x11bb8>
  410794:	adrp	x0, 473000 <_obstack_memory_used@@Base+0x11bb8>
  410798:	add	x2, x2, #0xe30
  41079c:	add	x0, x0, #0xe00
  4107a0:	mov	w1, #0x2fa                 	// #762
  4107a4:	str	x27, [sp, #80]
  4107a8:	bl	402bf0 <nftw@plt+0x70>
  4107ac:	bl	402c3c <nftw@plt+0xbc>
  4107b0:	adrp	x2, 473000 <_obstack_memory_used@@Base+0x11bb8>
  4107b4:	adrp	x0, 473000 <_obstack_memory_used@@Base+0x11bb8>
  4107b8:	add	x2, x2, #0xe30
  4107bc:	add	x0, x0, #0xe00
  4107c0:	mov	w1, #0x30b                 	// #779
  4107c4:	bl	402bf0 <nftw@plt+0x70>
  4107c8:	adrp	x2, 473000 <_obstack_memory_used@@Base+0x11bb8>
  4107cc:	adrp	x0, 473000 <_obstack_memory_used@@Base+0x11bb8>
  4107d0:	add	x2, x2, #0xe30
  4107d4:	add	x0, x0, #0xe00
  4107d8:	mov	w1, #0x2fb                 	// #763
  4107dc:	str	x27, [sp, #80]
  4107e0:	bl	402bf0 <nftw@plt+0x70>
  4107e4:	nop
  4107e8:	stp	x29, x30, [sp, #-128]!
  4107ec:	mov	x29, sp
  4107f0:	stp	x19, x20, [sp, #16]
  4107f4:	mov	x20, x0
  4107f8:	ldr	w0, [x1]
  4107fc:	mov	x19, x1
  410800:	add	x8, sp, #0x40
  410804:	stp	x21, x22, [sp, #32]
  410808:	str	x23, [sp, #48]
  41080c:	bl	419af0 <nftw@plt+0x16f70>
  410810:	ldr	w0, [x19, #4]
  410814:	add	x8, sp, #0x60
  410818:	ldp	w22, w23, [sp, #72]
  41081c:	ldr	x21, [sp, #64]
  410820:	bl	419af0 <nftw@plt+0x16f70>
  410824:	ldr	x1, [sp, #96]
  410828:	cmp	x1, x21
  41082c:	b.eq	410848 <nftw@plt+0xdcc8>  // b.none
  410830:	mov	w0, #0x0                   	// #0
  410834:	ldp	x19, x20, [sp, #16]
  410838:	ldp	x21, x22, [sp, #32]
  41083c:	ldr	x23, [sp, #48]
  410840:	ldp	x29, x30, [sp], #128
  410844:	ret
  410848:	ldp	w0, w21, [sp, #104]
  41084c:	cmp	w23, #0x0
  410850:	ccmp	w0, w22, #0x0, ne  // ne = any
  410854:	ccmp	w21, #0x0, #0x4, eq  // eq = none
  410858:	b.eq	410830 <nftw@plt+0xdcb0>  // b.none
  41085c:	mov	x0, x20
  410860:	bl	40ffa0 <nftw@plt+0xd420>
  410864:	ldrb	w1, [x20]
  410868:	cbz	w1, 410830 <nftw@plt+0xdcb0>
  41086c:	mov	w1, w22
  410870:	ldp	x20, x19, [x19, #8]
  410874:	bl	410130 <nftw@plt+0xd5b0>
  410878:	cbz	x0, 410830 <nftw@plt+0xdcb0>
  41087c:	mov	w4, w19
  410880:	mov	x3, x20
  410884:	mov	w2, w21
  410888:	mov	w1, w23
  41088c:	ldp	x19, x20, [sp, #16]
  410890:	ldp	x21, x22, [sp, #32]
  410894:	ldr	x23, [sp, #48]
  410898:	ldp	x29, x30, [sp], #128
  41089c:	b	40f7b8 <nftw@plt+0xcc38>
  4108a0:	stp	x29, x30, [sp, #-160]!
  4108a4:	mov	x29, sp
  4108a8:	stp	x21, x22, [sp, #32]
  4108ac:	mov	x22, x0
  4108b0:	ldrb	w0, [x0]
  4108b4:	cbz	w0, 410954 <nftw@plt+0xddd4>
  4108b8:	ldrb	w0, [x1, #160]
  4108bc:	mov	x21, x1
  4108c0:	cbnz	w0, 4109bc <nftw@plt+0xde3c>
  4108c4:	ldr	w0, [x1, #120]
  4108c8:	cbz	w0, 410954 <nftw@plt+0xddd4>
  4108cc:	stp	x23, x24, [sp, #48]
  4108d0:	add	x23, x1, #0x78
  4108d4:	mov	x24, #0xfffffffffffffff0    	// #-16
  4108d8:	stp	x19, x20, [sp, #16]
  4108dc:	mov	w19, #0x0                   	// #0
  4108e0:	stp	x25, x26, [sp, #64]
  4108e4:	stp	x27, x28, [sp, #80]
  4108e8:	cmp	w19, #0x1
  4108ec:	sxtw	x2, w19
  4108f0:	b.le	4109cc <nftw@plt+0xde4c>
  4108f4:	ldr	x2, [x23, #32]
  4108f8:	add	x0, x24, w19, sxtw #3
  4108fc:	add	x2, x2, x0
  410900:	ldr	x20, [x2]
  410904:	add	x8, sp, #0x60
  410908:	ldr	w0, [x20]
  41090c:	bl	419af0 <nftw@plt+0x16f70>
  410910:	ldr	w0, [x20, #4]
  410914:	add	x8, sp, #0x80
  410918:	ldp	w26, w27, [sp, #104]
  41091c:	ldr	x25, [sp, #96]
  410920:	bl	419af0 <nftw@plt+0x16f70>
  410924:	ldr	x0, [sp, #128]
  410928:	cmp	x25, x0
  41092c:	b.eq	410960 <nftw@plt+0xdde0>  // b.none
  410930:	strb	wzr, [x22]
  410934:	ldr	w0, [x21, #120]
  410938:	add	w19, w19, #0x1
  41093c:	cmp	w0, w19
  410940:	b.hi	4108e8 <nftw@plt+0xdd68>  // b.pmore
  410944:	ldp	x19, x20, [sp, #16]
  410948:	ldp	x23, x24, [sp, #48]
  41094c:	ldp	x25, x26, [sp, #64]
  410950:	ldp	x27, x28, [sp, #80]
  410954:	ldp	x21, x22, [sp, #32]
  410958:	ldp	x29, x30, [sp], #160
  41095c:	ret
  410960:	ldr	w0, [sp, #136]
  410964:	cmp	w26, w0
  410968:	b.ne	410930 <nftw@plt+0xddb0>  // b.any
  41096c:	cbz	w27, 410930 <nftw@plt+0xddb0>
  410970:	ldr	w28, [sp, #140]
  410974:	cbz	w28, 410930 <nftw@plt+0xddb0>
  410978:	mov	x1, x25
  41097c:	mov	x0, x22
  410980:	bl	40ffa0 <nftw@plt+0xd420>
  410984:	ldrb	w1, [x22]
  410988:	cbz	w1, 410930 <nftw@plt+0xddb0>
  41098c:	mov	w1, w26
  410990:	ldp	x25, x20, [x20, #8]
  410994:	bl	410130 <nftw@plt+0xd5b0>
  410998:	cbz	x0, 410930 <nftw@plt+0xddb0>
  41099c:	mov	w4, w20
  4109a0:	mov	x3, x25
  4109a4:	mov	w2, w28
  4109a8:	mov	w1, w27
  4109ac:	bl	40f7b8 <nftw@plt+0xcc38>
  4109b0:	tst	w0, #0xff
  4109b4:	b.ne	410934 <nftw@plt+0xddb4>  // b.any
  4109b8:	b	410930 <nftw@plt+0xddb0>
  4109bc:	strb	wzr, [x22]
  4109c0:	ldp	x21, x22, [sp, #32]
  4109c4:	ldp	x29, x30, [sp], #160
  4109c8:	ret
  4109cc:	add	x2, x2, #0x1
  4109d0:	add	x2, x23, x2, lsl #3
  4109d4:	b	410900 <nftw@plt+0xdd80>
  4109d8:	stp	x29, x30, [sp, #-48]!
  4109dc:	cmp	w1, w2
  4109e0:	mov	x29, sp
  4109e4:	stp	x21, x22, [sp, #32]
  4109e8:	b.gt	410a78 <nftw@plt+0xdef8>
  4109ec:	add	w22, w2, #0x1
  4109f0:	stp	x19, x20, [sp, #16]
  4109f4:	mov	w19, w1
  4109f8:	add	x20, x0, #0x8
  4109fc:	mov	w21, #0x0                   	// #0
  410a00:	mov	w1, w19
  410a04:	mov	x0, x20
  410a08:	bl	411bf0 <nftw@plt+0xf070>
  410a0c:	ldr	x0, [x20]
  410a10:	mov	w1, w19
  410a14:	cbz	x0, 410a70 <nftw@plt+0xdef0>
  410a18:	ldr	w0, [x0]
  410a1c:	ldr	x2, [x20, #8]
  410a20:	blr	x2
  410a24:	cbnz	w0, 410a70 <nftw@plt+0xdef0>
  410a28:	ldr	x1, [x20]
  410a2c:	mov	w0, #0x1                   	// #1
  410a30:	cbz	x1, 410a70 <nftw@plt+0xdef0>
  410a34:	ldr	x1, [x1, #8]
  410a38:	cbz	x1, 410a70 <nftw@plt+0xdef0>
  410a3c:	ldr	x1, [x1, #32]
  410a40:	cbz	x1, 410a4c <nftw@plt+0xdecc>
  410a44:	ldr	w0, [x1, #4]
  410a48:	add	w0, w0, #0x1
  410a4c:	add	w21, w21, w0
  410a50:	add	w19, w19, #0x1
  410a54:	cmp	w22, w19
  410a58:	b.ne	410a00 <nftw@plt+0xde80>  // b.any
  410a5c:	mov	w0, w21
  410a60:	ldp	x19, x20, [sp, #16]
  410a64:	ldp	x21, x22, [sp, #32]
  410a68:	ldp	x29, x30, [sp], #48
  410a6c:	ret
  410a70:	add	w21, w21, #0x1
  410a74:	b	410a50 <nftw@plt+0xded0>
  410a78:	mov	w21, #0x0                   	// #0
  410a7c:	mov	w0, w21
  410a80:	ldp	x21, x22, [sp, #32]
  410a84:	ldp	x29, x30, [sp], #48
  410a88:	ret
  410a8c:	nop
  410a90:	stp	x29, x30, [sp, #-96]!
  410a94:	mov	x29, sp
  410a98:	stp	x19, x20, [sp, #16]
  410a9c:	stp	x21, x22, [sp, #32]
  410aa0:	mov	x22, x1
  410aa4:	stp	x23, x24, [sp, #48]
  410aa8:	stp	x25, x26, [sp, #64]
  410aac:	mov	x26, x0
  410ab0:	ldr	w0, [x0, #40]
  410ab4:	stp	x27, x28, [sp, #80]
  410ab8:	cmn	w0, #0x1
  410abc:	b.eq	410c20 <nftw@plt+0xe0a0>  // b.none
  410ac0:	ldr	x0, [x26]
  410ac4:	add	x23, x26, #0x8
  410ac8:	mov	w20, #0x1                   	// #1
  410acc:	mov	x24, #0x80000000            	// #2147483648
  410ad0:	bl	4197f0 <nftw@plt+0x16c70>
  410ad4:	ldr	w25, [x26, #40]
  410ad8:	and	w27, w0, #0xff
  410adc:	cmp	w25, #0x0
  410ae0:	b.le	410b80 <nftw@plt+0xe000>
  410ae4:	nop
  410ae8:	mov	x0, x23
  410aec:	mov	w1, w20
  410af0:	bl	411bf0 <nftw@plt+0xf070>
  410af4:	ldr	x0, [x23]
  410af8:	cbz	x0, 410ba4 <nftw@plt+0xe024>
  410afc:	ldr	w0, [x0]
  410b00:	mov	w1, w20
  410b04:	ldr	x2, [x23, #8]
  410b08:	blr	x2
  410b0c:	cbnz	w0, 410ba4 <nftw@plt+0xe024>
  410b10:	ldr	x0, [x23]
  410b14:	cbz	x0, 410ba4 <nftw@plt+0xe024>
  410b18:	ldr	x19, [x0, #8]
  410b1c:	cbz	x19, 410ba4 <nftw@plt+0xe024>
  410b20:	ldr	x0, [x19, #32]
  410b24:	mov	w21, #0x0                   	// #0
  410b28:	cbz	x0, 410b60 <nftw@plt+0xdfe0>
  410b2c:	ldr	w1, [x0, #4]
  410b30:	cmp	w1, w21
  410b34:	b.ls	410b60 <nftw@plt+0xdfe0>  // b.plast
  410b38:	add	x1, x0, w21, uxtw #3
  410b3c:	mov	x0, x22
  410b40:	add	w21, w21, #0x1
  410b44:	ldr	x1, [x1, #8]
  410b48:	ldr	x1, [x1]
  410b4c:	bl	414bf0 <nftw@plt+0x12070>
  410b50:	mov	x0, x22
  410b54:	bl	412f40 <nftw@plt+0x103c0>
  410b58:	ldr	x0, [x19, #32]
  410b5c:	cbnz	x0, 410b2c <nftw@plt+0xdfac>
  410b60:	ldr	x1, [x19, #8]
  410b64:	mov	x0, x22
  410b68:	bl	414bf0 <nftw@plt+0x12070>
  410b6c:	cmp	w25, w20
  410b70:	b.gt	410c10 <nftw@plt+0xe090>
  410b74:	add	w20, w20, #0x1
  410b78:	cmp	w20, w25
  410b7c:	b.le	410ae8 <nftw@plt+0xdf68>
  410b80:	cbz	w27, 410c70 <nftw@plt+0xe0f0>
  410b84:	mov	w0, w27
  410b88:	ldp	x19, x20, [sp, #16]
  410b8c:	ldp	x21, x22, [sp, #32]
  410b90:	ldp	x23, x24, [sp, #48]
  410b94:	ldp	x25, x26, [sp, #64]
  410b98:	ldp	x27, x28, [sp, #80]
  410b9c:	ldp	x29, x30, [sp], #96
  410ba0:	ret
  410ba4:	ldr	x0, [x26]
  410ba8:	mov	w1, w20
  410bac:	bl	419390 <nftw@plt+0x16810>
  410bb0:	mov	x21, x0
  410bb4:	mov	x28, x1
  410bb8:	cbz	x0, 410c4c <nftw@plt+0xe0cc>
  410bbc:	mov	x19, #0x0                   	// #0
  410bc0:	mov	w2, #0x0                   	// #0
  410bc4:	cbnz	x1, 410bf0 <nftw@plt+0xe070>
  410bc8:	b	410b6c <nftw@plt+0xdfec>
  410bcc:	ldrb	w1, [x21, w2, sxtw]
  410bd0:	add	x19, x19, #0x1
  410bd4:	mov	x0, x22
  410bd8:	bl	412fa0 <nftw@plt+0x10420>
  410bdc:	cmp	x28, x19
  410be0:	b.eq	410b6c <nftw@plt+0xdfec>  // b.none
  410be4:	cmp	x19, x24
  410be8:	mov	w2, w19
  410bec:	b.eq	410ca0 <nftw@plt+0xe120>  // b.none
  410bf0:	cmp	x28, w2, sxtw
  410bf4:	b.hi	410bcc <nftw@plt+0xe04c>  // b.pmore
  410bf8:	adrp	x2, 473000 <_obstack_memory_used@@Base+0x11bb8>
  410bfc:	adrp	x0, 473000 <_obstack_memory_used@@Base+0x11bb8>
  410c00:	add	x2, x2, #0xe68
  410c04:	add	x0, x0, #0xdc0
  410c08:	mov	w1, #0x3e                  	// #62
  410c0c:	bl	402bf0 <nftw@plt+0x70>
  410c10:	mov	x0, x22
  410c14:	mov	w1, #0xa                   	// #10
  410c18:	bl	412fa0 <nftw@plt+0x10420>
  410c1c:	b	410b74 <nftw@plt+0xdff4>
  410c20:	mov	w1, #0x0                   	// #0
  410c24:	str	wzr, [x26, #40]
  410c28:	b	410c38 <nftw@plt+0xe0b8>
  410c2c:	ldr	w1, [x26, #40]
  410c30:	add	w1, w1, #0x1
  410c34:	str	w1, [x26, #40]
  410c38:	ldr	x0, [x26]
  410c3c:	add	w1, w1, #0x1
  410c40:	bl	419390 <nftw@plt+0x16810>
  410c44:	cbnz	x0, 410c2c <nftw@plt+0xe0ac>
  410c48:	b	410ac0 <nftw@plt+0xdf40>
  410c4c:	mov	w27, #0x0                   	// #0
  410c50:	mov	w0, w27
  410c54:	ldp	x19, x20, [sp, #16]
  410c58:	ldp	x21, x22, [sp, #32]
  410c5c:	ldp	x23, x24, [sp, #48]
  410c60:	ldp	x25, x26, [sp, #64]
  410c64:	ldp	x27, x28, [sp, #80]
  410c68:	ldp	x29, x30, [sp], #96
  410c6c:	ret
  410c70:	mov	x0, x22
  410c74:	mov	w27, #0x1                   	// #1
  410c78:	mov	w1, #0xa                   	// #10
  410c7c:	bl	412fa0 <nftw@plt+0x10420>
  410c80:	mov	w0, w27
  410c84:	ldp	x19, x20, [sp, #16]
  410c88:	ldp	x21, x22, [sp, #32]
  410c8c:	ldp	x23, x24, [sp, #48]
  410c90:	ldp	x25, x26, [sp, #64]
  410c94:	ldp	x27, x28, [sp, #80]
  410c98:	ldp	x29, x30, [sp], #96
  410c9c:	ret
  410ca0:	adrp	x2, 473000 <_obstack_memory_used@@Base+0x11bb8>
  410ca4:	adrp	x0, 473000 <_obstack_memory_used@@Base+0x11bb8>
  410ca8:	add	x2, x2, #0xe68
  410cac:	add	x0, x0, #0xdc0
  410cb0:	mov	w1, #0x3d                  	// #61
  410cb4:	bl	402bf0 <nftw@plt+0x70>
  410cb8:	stp	x29, x30, [sp, #-80]!
  410cbc:	mov	x29, sp
  410cc0:	stp	x25, x26, [sp, #64]
  410cc4:	mov	x25, x0
  410cc8:	ldrb	w0, [x1, #67]
  410ccc:	stp	x23, x24, [sp, #48]
  410cd0:	mov	w23, w2
  410cd4:	mov	x2, #0xb                   	// #11
  410cd8:	mov	w24, w3
  410cdc:	stp	x19, x20, [sp, #16]
  410ce0:	mov	x20, x1
  410ce4:	adrp	x1, 473000 <_obstack_memory_used@@Base+0x11bb8>
  410ce8:	add	x1, x1, #0xc00
  410cec:	bl	40be18 <nftw@plt+0x9298>
  410cf0:	mov	x1, x0
  410cf4:	mov	x0, x20
  410cf8:	bl	414bf0 <nftw@plt+0x12070>
  410cfc:	cmp	w23, w24
  410d00:	b.gt	410fa8 <nftw@plt+0xe428>
  410d04:	mov	w19, w23
  410d08:	stp	x21, x22, [sp, #32]
  410d0c:	add	x22, x25, #0x8
  410d10:	b	410d40 <nftw@plt+0xe1c0>
  410d14:	ldr	x0, [x22]
  410d18:	cbz	x0, 410d68 <nftw@plt+0xe1e8>
  410d1c:	ldr	x1, [x0, #8]
  410d20:	cbz	x1, 410d68 <nftw@plt+0xe1e8>
  410d24:	ldr	x0, [x1, #24]
  410d28:	cbz	x0, 410d34 <nftw@plt+0xe1b4>
  410d2c:	ldr	w0, [x0, #4]
  410d30:	cbnz	w0, 410d80 <nftw@plt+0xe200>
  410d34:	add	w19, w19, #0x1
  410d38:	cmp	w24, w19
  410d3c:	b.lt	410de4 <nftw@plt+0xe264>  // b.tstop
  410d40:	mov	x0, x22
  410d44:	mov	w1, w19
  410d48:	bl	411bf0 <nftw@plt+0xf070>
  410d4c:	ldr	x0, [x22]
  410d50:	cbz	x0, 410d68 <nftw@plt+0xe1e8>
  410d54:	ldr	w0, [x0]
  410d58:	mov	w1, w19
  410d5c:	ldr	x2, [x22, #8]
  410d60:	blr	x2
  410d64:	cbz	w0, 410d14 <nftw@plt+0xe194>
  410d68:	adrp	x2, 473000 <_obstack_memory_used@@Base+0x11bb8>
  410d6c:	adrp	x0, 473000 <_obstack_memory_used@@Base+0x11bb8>
  410d70:	add	x2, x2, #0xe78
  410d74:	add	x0, x0, #0xe00
  410d78:	mov	w1, #0x239                 	// #569
  410d7c:	bl	402bf0 <nftw@plt+0x70>
  410d80:	ldr	x0, [x25]
  410d84:	mov	w1, w19
  410d88:	bl	419390 <nftw@plt+0x16810>
  410d8c:	mov	x26, x1
  410d90:	mov	x21, x0
  410d94:	mov	w1, #0x2d                  	// #45
  410d98:	mov	x0, x20
  410d9c:	bl	412fa0 <nftw@plt+0x10420>
  410da0:	cmp	w26, #0x0
  410da4:	b.le	410dcc <nftw@plt+0xe24c>
  410da8:	sub	w1, w26, #0x1
  410dac:	add	x26, x21, #0x1
  410db0:	add	x26, x26, x1
  410db4:	nop
  410db8:	ldrb	w1, [x21], #1
  410dbc:	mov	x0, x20
  410dc0:	bl	412fa0 <nftw@plt+0x10420>
  410dc4:	cmp	x26, x21
  410dc8:	b.ne	410db8 <nftw@plt+0xe238>  // b.any
  410dcc:	mov	x0, x20
  410dd0:	add	w19, w19, #0x1
  410dd4:	mov	w1, #0xa                   	// #10
  410dd8:	bl	412fa0 <nftw@plt+0x10420>
  410ddc:	cmp	w24, w19
  410de0:	b.ge	410d40 <nftw@plt+0xe1c0>  // b.tcont
  410de4:	ldrb	w0, [x20, #67]
  410de8:	bl	40bea8 <nftw@plt+0x9328>
  410dec:	mov	x1, x0
  410df0:	mov	x0, x20
  410df4:	bl	414bf0 <nftw@plt+0x12070>
  410df8:	ldrb	w0, [x20, #67]
  410dfc:	mov	x2, #0xb                   	// #11
  410e00:	adrp	x1, 473000 <_obstack_memory_used@@Base+0x11bb8>
  410e04:	add	x1, x1, #0xc10
  410e08:	bl	40be18 <nftw@plt+0x9298>
  410e0c:	mov	x1, x0
  410e10:	mov	x0, x20
  410e14:	bl	414bf0 <nftw@plt+0x12070>
  410e18:	mov	x0, x22
  410e1c:	mov	w1, w23
  410e20:	bl	411bf0 <nftw@plt+0xf070>
  410e24:	ldr	x0, [x22]
  410e28:	cbz	x0, 410fe0 <nftw@plt+0xe460>
  410e2c:	ldr	w0, [x0]
  410e30:	mov	w1, w23
  410e34:	ldr	x2, [x22, #8]
  410e38:	blr	x2
  410e3c:	cbnz	w0, 410fe0 <nftw@plt+0xe460>
  410e40:	ldr	x0, [x22]
  410e44:	cbz	x0, 410fe0 <nftw@plt+0xe460>
  410e48:	ldr	x21, [x0, #8]
  410e4c:	cbz	x21, 410fe0 <nftw@plt+0xe460>
  410e50:	ldr	x0, [x21, #32]
  410e54:	mov	w25, #0x0                   	// #0
  410e58:	cbz	x0, 410ec8 <nftw@plt+0xe348>
  410e5c:	ldr	w1, [x0, #4]
  410e60:	cmp	w25, w1
  410e64:	b.cs	410ec8 <nftw@plt+0xe348>  // b.hs, b.nlast
  410e68:	add	x2, x0, w25, uxtw #3
  410e6c:	mov	w1, #0x2b                  	// #43
  410e70:	mov	x0, x20
  410e74:	ldr	x2, [x2, #8]
  410e78:	ldr	w26, [x2, #8]
  410e7c:	ldr	x19, [x2]
  410e80:	bl	412fa0 <nftw@plt+0x10420>
  410e84:	cmp	w26, #0x0
  410e88:	b.le	410eac <nftw@plt+0xe32c>
  410e8c:	sub	w26, w26, #0x1
  410e90:	add	x0, x19, #0x1
  410e94:	add	x26, x26, x0
  410e98:	ldrb	w1, [x19], #1
  410e9c:	mov	x0, x20
  410ea0:	bl	412fa0 <nftw@plt+0x10420>
  410ea4:	cmp	x19, x26
  410ea8:	b.ne	410e98 <nftw@plt+0xe318>  // b.any
  410eac:	mov	x0, x20
  410eb0:	mov	w1, #0xa                   	// #10
  410eb4:	bl	412fa0 <nftw@plt+0x10420>
  410eb8:	add	w25, w25, #0x1
  410ebc:	ldr	x0, [x21, #32]
  410ec0:	cbnz	x0, 410e5c <nftw@plt+0xe2dc>
  410ec4:	nop
  410ec8:	ldr	x0, [x21, #24]
  410ecc:	ldr	x19, [x21, #8]
  410ed0:	ldr	w21, [x21, #16]
  410ed4:	cbz	x0, 410ee0 <nftw@plt+0xe360>
  410ed8:	ldr	w0, [x0, #4]
  410edc:	cbnz	w0, 410f54 <nftw@plt+0xe3d4>
  410ee0:	mov	x0, x20
  410ee4:	mov	w1, #0x20                  	// #32
  410ee8:	bl	412fa0 <nftw@plt+0x10420>
  410eec:	cmp	w21, #0x0
  410ef0:	b.le	410f14 <nftw@plt+0xe394>
  410ef4:	sub	w21, w21, #0x1
  410ef8:	add	x0, x19, #0x1
  410efc:	add	x21, x21, x0
  410f00:	ldrb	w1, [x19], #1
  410f04:	mov	x0, x20
  410f08:	bl	412fa0 <nftw@plt+0x10420>
  410f0c:	cmp	x21, x19
  410f10:	b.ne	410f00 <nftw@plt+0xe380>  // b.any
  410f14:	add	w23, w23, #0x1
  410f18:	mov	x0, x20
  410f1c:	mov	w1, #0xa                   	// #10
  410f20:	bl	412fa0 <nftw@plt+0x10420>
  410f24:	cmp	w24, w23
  410f28:	b.ge	410e18 <nftw@plt+0xe298>  // b.tcont
  410f2c:	ldp	x21, x22, [sp, #32]
  410f30:	ldrb	w0, [x20, #67]
  410f34:	bl	40bea8 <nftw@plt+0x9328>
  410f38:	mov	x1, x0
  410f3c:	mov	x0, x20
  410f40:	ldp	x19, x20, [sp, #16]
  410f44:	ldp	x23, x24, [sp, #48]
  410f48:	ldp	x25, x26, [sp, #64]
  410f4c:	ldp	x29, x30, [sp], #80
  410f50:	b	414bf0 <nftw@plt+0x12070>
  410f54:	mov	x0, x20
  410f58:	mov	w1, #0x2b                  	// #43
  410f5c:	bl	412fa0 <nftw@plt+0x10420>
  410f60:	cmp	w21, #0x0
  410f64:	b.le	410f14 <nftw@plt+0xe394>
  410f68:	sub	w21, w21, #0x1
  410f6c:	add	x0, x19, #0x1
  410f70:	add	x21, x21, x0
  410f74:	nop
  410f78:	ldrb	w1, [x19], #1
  410f7c:	mov	x0, x20
  410f80:	bl	412fa0 <nftw@plt+0x10420>
  410f84:	cmp	x21, x19
  410f88:	b.ne	410f78 <nftw@plt+0xe3f8>  // b.any
  410f8c:	add	w23, w23, #0x1
  410f90:	mov	x0, x20
  410f94:	mov	w1, #0xa                   	// #10
  410f98:	bl	412fa0 <nftw@plt+0x10420>
  410f9c:	cmp	w24, w23
  410fa0:	b.ge	410e18 <nftw@plt+0xe298>  // b.tcont
  410fa4:	b	410f2c <nftw@plt+0xe3ac>
  410fa8:	ldrb	w0, [x20, #67]
  410fac:	bl	40bea8 <nftw@plt+0x9328>
  410fb0:	mov	x1, x0
  410fb4:	mov	x0, x20
  410fb8:	bl	414bf0 <nftw@plt+0x12070>
  410fbc:	ldrb	w0, [x20, #67]
  410fc0:	mov	x2, #0xb                   	// #11
  410fc4:	adrp	x1, 473000 <_obstack_memory_used@@Base+0x11bb8>
  410fc8:	add	x1, x1, #0xc10
  410fcc:	bl	40be18 <nftw@plt+0x9298>
  410fd0:	mov	x1, x0
  410fd4:	mov	x0, x20
  410fd8:	bl	414bf0 <nftw@plt+0x12070>
  410fdc:	b	410f30 <nftw@plt+0xe3b0>
  410fe0:	adrp	x2, 473000 <_obstack_memory_used@@Base+0x11bb8>
  410fe4:	adrp	x0, 473000 <_obstack_memory_used@@Base+0x11bb8>
  410fe8:	add	x2, x2, #0xe78
  410fec:	add	x0, x0, #0xe00
  410ff0:	mov	w1, #0x24b                 	// #587
  410ff4:	bl	402bf0 <nftw@plt+0x70>
  410ff8:	stp	x29, x30, [sp, #-96]!
  410ffc:	mov	x29, sp
  411000:	stp	x21, x22, [sp, #32]
  411004:	mov	w21, w2
  411008:	mov	x22, x1
  41100c:	stp	x23, x24, [sp, #48]
  411010:	stp	x25, x26, [sp, #64]
  411014:	subs	w26, w3, w2
  411018:	add	w26, w26, #0x1
  41101c:	stp	x27, x28, [sp, #80]
  411020:	mov	w28, w4
  411024:	b.lt	41121c <nftw@plt+0xe69c>  // b.tstop
  411028:	mov	w25, w3
  41102c:	mov	x24, x0
  411030:	add	w27, w3, #0x1
  411034:	stp	x19, x20, [sp, #16]
  411038:	add	x19, x0, #0x8
  41103c:	mov	w20, w2
  411040:	mov	w23, #0x0                   	// #0
  411044:	nop
  411048:	mov	w1, w20
  41104c:	mov	x0, x19
  411050:	bl	411bf0 <nftw@plt+0xf070>
  411054:	ldr	x0, [x19]
  411058:	mov	w1, w20
  41105c:	cbz	x0, 4111b4 <nftw@plt+0xe634>
  411060:	ldr	w0, [x0]
  411064:	ldr	x2, [x19, #8]
  411068:	blr	x2
  41106c:	cbnz	w0, 4111b4 <nftw@plt+0xe634>
  411070:	ldr	x1, [x19]
  411074:	mov	w0, #0x1                   	// #1
  411078:	cbz	x1, 4111b4 <nftw@plt+0xe634>
  41107c:	ldr	x1, [x1, #8]
  411080:	cbz	x1, 4111b4 <nftw@plt+0xe634>
  411084:	ldr	x1, [x1, #32]
  411088:	cbz	x1, 411094 <nftw@plt+0xe514>
  41108c:	ldr	w0, [x1, #4]
  411090:	add	w0, w0, #0x1
  411094:	add	w23, w23, w0
  411098:	add	w20, w20, #0x1
  41109c:	cmp	w27, w20
  4110a0:	b.ne	411048 <nftw@plt+0xe4c8>  // b.any
  4110a4:	ldrb	w0, [x22, #67]
  4110a8:	mov	x2, #0x9                   	// #9
  4110ac:	adrp	x1, 473000 <_obstack_memory_used@@Base+0x11bb8>
  4110b0:	add	x1, x1, #0xbe0
  4110b4:	bl	40be18 <nftw@plt+0x9298>
  4110b8:	mov	x1, x0
  4110bc:	mov	x0, x22
  4110c0:	bl	414bf0 <nftw@plt+0x12070>
  4110c4:	mov	w4, w28
  4110c8:	mov	w5, w23
  4110cc:	mov	w3, w26
  4110d0:	mov	w2, w21
  4110d4:	mov	x0, x22
  4110d8:	adrp	x1, 473000 <_obstack_memory_used@@Base+0x11bb8>
  4110dc:	add	x1, x1, #0xe98
  4110e0:	bl	414aa8 <nftw@plt+0x11f28>
  4110e4:	ldrb	w0, [x22, #67]
  4110e8:	bl	40bea8 <nftw@plt+0x9328>
  4110ec:	mov	x1, x0
  4110f0:	mov	x0, x22
  4110f4:	bl	414bf0 <nftw@plt+0x12070>
  4110f8:	mov	x0, x19
  4110fc:	mov	w1, w21
  411100:	bl	411bf0 <nftw@plt+0xf070>
  411104:	ldr	x0, [x19]
  411108:	cbz	x0, 411130 <nftw@plt+0xe5b0>
  41110c:	ldr	w0, [x0]
  411110:	mov	w1, w21
  411114:	ldr	x2, [x19, #8]
  411118:	blr	x2
  41111c:	cbnz	w0, 411130 <nftw@plt+0xe5b0>
  411120:	ldr	x0, [x19]
  411124:	cbz	x0, 411130 <nftw@plt+0xe5b0>
  411128:	ldr	x0, [x0, #8]
  41112c:	cbnz	x0, 4111bc <nftw@plt+0xe63c>
  411130:	ldr	x0, [x24]
  411134:	mov	w1, w21
  411138:	bl	419390 <nftw@plt+0x16810>
  41113c:	mov	x27, x1
  411140:	mov	x20, x0
  411144:	mov	w1, #0x20                  	// #32
  411148:	mov	x0, x22
  41114c:	bl	412fa0 <nftw@plt+0x10420>
  411150:	cmp	w27, #0x0
  411154:	b.le	41117c <nftw@plt+0xe5fc>
  411158:	sub	w27, w27, #0x1
  41115c:	add	x0, x20, #0x1
  411160:	add	x27, x27, x0
  411164:	nop
  411168:	ldrb	w1, [x20], #1
  41116c:	mov	x0, x22
  411170:	bl	412fa0 <nftw@plt+0x10420>
  411174:	cmp	x20, x27
  411178:	b.ne	411168 <nftw@plt+0xe5e8>  // b.any
  41117c:	add	w21, w21, #0x1
  411180:	mov	x0, x22
  411184:	mov	w1, #0xa                   	// #10
  411188:	bl	412fa0 <nftw@plt+0x10420>
  41118c:	cmp	w25, w21
  411190:	b.ge	4110f8 <nftw@plt+0xe578>  // b.tcont
  411194:	sub	w0, w23, w26
  411198:	ldp	x19, x20, [sp, #16]
  41119c:	ldp	x21, x22, [sp, #32]
  4111a0:	ldp	x23, x24, [sp, #48]
  4111a4:	ldp	x25, x26, [sp, #64]
  4111a8:	ldp	x27, x28, [sp, #80]
  4111ac:	ldp	x29, x30, [sp], #96
  4111b0:	ret
  4111b4:	add	w23, w23, #0x1
  4111b8:	b	411098 <nftw@plt+0xe518>
  4111bc:	mov	w20, w21
  4111c0:	b	4111d8 <nftw@plt+0xe658>
  4111c4:	ldr	x0, [x19]
  4111c8:	cbz	x0, 411200 <nftw@plt+0xe680>
  4111cc:	ldr	x0, [x0, #8]
  4111d0:	cbz	x0, 411200 <nftw@plt+0xe680>
  4111d4:	add	w20, w20, #0x1
  4111d8:	mov	w1, w20
  4111dc:	mov	x0, x19
  4111e0:	bl	411bf0 <nftw@plt+0xf070>
  4111e4:	ldr	x0, [x19]
  4111e8:	mov	w1, w20
  4111ec:	cbz	x0, 411200 <nftw@plt+0xe680>
  4111f0:	ldr	w0, [x0]
  4111f4:	ldr	x2, [x19, #8]
  4111f8:	blr	x2
  4111fc:	cbz	w0, 4111c4 <nftw@plt+0xe644>
  411200:	mov	w2, w21
  411204:	sub	w3, w20, #0x1
  411208:	mov	w21, w20
  41120c:	mov	x1, x22
  411210:	mov	x0, x24
  411214:	bl	410cb8 <nftw@plt+0xe138>
  411218:	b	41118c <nftw@plt+0xe60c>
  41121c:	ldrb	w0, [x1, #67]
  411220:	mov	x2, #0x9                   	// #9
  411224:	adrp	x1, 473000 <_obstack_memory_used@@Base+0x11bb8>
  411228:	add	x1, x1, #0xbe0
  41122c:	mov	w23, #0x0                   	// #0
  411230:	bl	40be18 <nftw@plt+0x9298>
  411234:	mov	x1, x0
  411238:	mov	x0, x22
  41123c:	bl	414bf0 <nftw@plt+0x12070>
  411240:	mov	w4, w28
  411244:	mov	w2, w21
  411248:	mov	w3, w26
  41124c:	mov	w5, #0x0                   	// #0
  411250:	mov	x0, x22
  411254:	adrp	x1, 473000 <_obstack_memory_used@@Base+0x11bb8>
  411258:	add	x1, x1, #0xe98
  41125c:	bl	414aa8 <nftw@plt+0x11f28>
  411260:	ldrb	w0, [x22, #67]
  411264:	bl	40bea8 <nftw@plt+0x9328>
  411268:	mov	x1, x0
  41126c:	mov	x0, x22
  411270:	bl	414bf0 <nftw@plt+0x12070>
  411274:	sub	w0, w23, w26
  411278:	ldp	x21, x22, [sp, #32]
  41127c:	ldp	x23, x24, [sp, #48]
  411280:	ldp	x25, x26, [sp, #64]
  411284:	ldp	x27, x28, [sp, #80]
  411288:	ldp	x29, x30, [sp], #96
  41128c:	ret
  411290:	stp	x29, x30, [sp, #-96]!
  411294:	tst	w2, #0xff
  411298:	mov	x29, sp
  41129c:	stp	x19, x20, [sp, #16]
  4112a0:	stp	x23, x24, [sp, #48]
  4112a4:	mov	x23, x0
  4112a8:	stp	x25, x26, [sp, #64]
  4112ac:	mov	x26, x1
  4112b0:	b.ne	4114c0 <nftw@plt+0xe940>  // b.any
  4112b4:	ldp	x0, x20, [x23]
  4112b8:	ldr	w2, [x23, #40]
  4112bc:	cbz	x20, 411520 <nftw@plt+0xe9a0>
  4112c0:	mov	x1, x20
  4112c4:	ldr	x20, [x20, #16]
  4112c8:	cbnz	x20, 4112c0 <nftw@plt+0xe740>
  4112cc:	cmn	w2, #0x1
  4112d0:	ldr	x20, [x1, #8]
  4112d4:	b.eq	411490 <nftw@plt+0xe910>  // b.none
  4112d8:	bl	4197f0 <nftw@plt+0x16c70>
  4112dc:	ldr	w25, [x23, #40]
  4112e0:	cbz	x20, 411428 <nftw@plt+0xe8a8>
  4112e4:	add	x19, x23, #0x8
  4112e8:	mov	w24, #0x0                   	// #0
  4112ec:	stp	x21, x22, [sp, #32]
  4112f0:	ldr	x1, [x23, #8]
  4112f4:	str	x27, [sp, #80]
  4112f8:	mov	w27, #0x1                   	// #1
  4112fc:	nop
  411300:	ldr	w21, [x20]
  411304:	sub	w22, w21, #0x3
  411308:	cmp	w22, #0x0
  41130c:	csel	w22, w22, w27, gt
  411310:	cbz	x1, 411394 <nftw@plt+0xe814>
  411314:	mov	w1, w21
  411318:	mov	x0, x19
  41131c:	bl	411bf0 <nftw@plt+0xf070>
  411320:	ldp	x0, x2, [x19]
  411324:	mov	w1, w21
  411328:	ldr	w0, [x0]
  41132c:	blr	x2
  411330:	cmp	w0, #0x0
  411334:	ldr	x0, [x19]
  411338:	b.gt	411460 <nftw@plt+0xe8e0>
  41133c:	ldr	x2, [x0, #24]
  411340:	cbz	x2, 411468 <nftw@plt+0xe8e8>
  411344:	nop
  411348:	mov	x0, x2
  41134c:	ldr	x2, [x2, #16]
  411350:	cbnz	x2, 411348 <nftw@plt+0xe7c8>
  411354:	ldr	x0, [x0, #8]
  411358:	ldr	w2, [x20]
  41135c:	ldr	x1, [x20, #24]
  411360:	add	w3, w2, #0x3
  411364:	cbz	x0, 411450 <nftw@plt+0xe8d0>
  411368:	cbz	x1, 41143c <nftw@plt+0xe8bc>
  41136c:	ldr	w5, [x1, #4]
  411370:	mov	w4, w3
  411374:	cbz	w5, 41143c <nftw@plt+0xe8bc>
  411378:	ldr	w21, [x0]
  41137c:	sub	w5, w21, #0x3
  411380:	cmp	w5, w4
  411384:	b.gt	411450 <nftw@plt+0xe8d0>
  411388:	ldr	x1, [x19]
  41138c:	mov	x20, x0
  411390:	cbnz	x1, 411314 <nftw@plt+0xe794>
  411394:	ldr	x1, [x20, #24]
  411398:	add	w3, w21, #0x3
  41139c:	cbz	x1, 411458 <nftw@plt+0xe8d8>
  4113a0:	ldr	w0, [x1, #4]
  4113a4:	cbz	w0, 411458 <nftw@plt+0xe8d8>
  4113a8:	cmp	w3, w25
  4113ac:	add	w4, w22, w24
  4113b0:	mov	x1, x26
  4113b4:	csel	w3, w3, w25, le
  4113b8:	mov	w2, w22
  4113bc:	mov	x0, x23
  4113c0:	bl	410ff8 <nftw@plt+0xe478>
  4113c4:	ldr	w20, [x20]
  4113c8:	ldr	x1, [x19]
  4113cc:	add	w24, w24, w0
  4113d0:	cbz	x1, 411420 <nftw@plt+0xe8a0>
  4113d4:	mov	w1, w20
  4113d8:	mov	x0, x19
  4113dc:	bl	411bf0 <nftw@plt+0xf070>
  4113e0:	ldp	x0, x2, [x19]
  4113e4:	mov	w1, w20
  4113e8:	ldr	w0, [x0]
  4113ec:	blr	x2
  4113f0:	cmp	w0, #0x0
  4113f4:	b.gt	411478 <nftw@plt+0xe8f8>
  4113f8:	ldr	x1, [x19]
  4113fc:	ldr	x0, [x1, #24]
  411400:	cbz	x0, 411420 <nftw@plt+0xe8a0>
  411404:	nop
  411408:	mov	x2, x0
  41140c:	ldr	x0, [x0, #16]
  411410:	cbnz	x0, 411408 <nftw@plt+0xe888>
  411414:	ldr	x20, [x2, #8]
  411418:	cbnz	x20, 411300 <nftw@plt+0xe780>
  41141c:	nop
  411420:	ldp	x21, x22, [sp, #32]
  411424:	ldr	x27, [sp, #80]
  411428:	ldp	x19, x20, [sp, #16]
  41142c:	ldp	x23, x24, [sp, #48]
  411430:	ldp	x25, x26, [sp, #64]
  411434:	ldp	x29, x30, [sp], #96
  411438:	ret
  41143c:	ldr	w21, [x0]
  411440:	add	w4, w2, #0x2
  411444:	sub	w5, w21, #0x3
  411448:	cmp	w5, w4
  41144c:	b.le	411388 <nftw@plt+0xe808>
  411450:	mov	w21, w2
  411454:	cbnz	x1, 4113a0 <nftw@plt+0xe820>
  411458:	add	w3, w21, #0x2
  41145c:	b	4113a8 <nftw@plt+0xe828>
  411460:	cbnz	x0, 411354 <nftw@plt+0xe7d4>
  411464:	nop
  411468:	ldr	w21, [x20]
  41146c:	ldr	x1, [x20, #24]
  411470:	add	w3, w21, #0x3
  411474:	b	41139c <nftw@plt+0xe81c>
  411478:	ldr	x2, [x19]
  41147c:	cbz	x2, 411420 <nftw@plt+0xe8a0>
  411480:	ldr	x20, [x2, #8]
  411484:	mov	x1, x2
  411488:	cbnz	x20, 411300 <nftw@plt+0xe780>
  41148c:	b	411420 <nftw@plt+0xe8a0>
  411490:	mov	w1, #0x0                   	// #0
  411494:	str	wzr, [x23, #40]
  411498:	b	4114ac <nftw@plt+0xe92c>
  41149c:	ldr	w1, [x23, #40]
  4114a0:	ldr	x0, [x23]
  4114a4:	add	w1, w1, #0x1
  4114a8:	str	w1, [x23, #40]
  4114ac:	add	w1, w1, #0x1
  4114b0:	bl	419390 <nftw@plt+0x16810>
  4114b4:	cbnz	x0, 41149c <nftw@plt+0xe91c>
  4114b8:	ldr	x0, [x23]
  4114bc:	b	4112d8 <nftw@plt+0xe758>
  4114c0:	ldrb	w0, [x1, #67]
  4114c4:	mov	x2, #0xd                   	// #13
  4114c8:	adrp	x1, 473000 <_obstack_memory_used@@Base+0x11bb8>
  4114cc:	add	x1, x1, #0xbd0
  4114d0:	bl	40be18 <nftw@plt+0x9298>
  4114d4:	mov	x1, x0
  4114d8:	mov	x0, x26
  4114dc:	bl	414bf0 <nftw@plt+0x12070>
  4114e0:	ldr	x2, [x23]
  4114e4:	mov	x0, x26
  4114e8:	adrp	x1, 473000 <_obstack_memory_used@@Base+0x11bb8>
  4114ec:	add	x1, x1, #0xeb0
  4114f0:	bl	414aa8 <nftw@plt+0x11f28>
  4114f4:	ldr	x2, [x23]
  4114f8:	mov	x0, x26
  4114fc:	adrp	x1, 473000 <_obstack_memory_used@@Base+0x11bb8>
  411500:	add	x1, x1, #0xeb8
  411504:	bl	414aa8 <nftw@plt+0x11f28>
  411508:	ldrb	w0, [x26, #67]
  41150c:	bl	40bea8 <nftw@plt+0x9328>
  411510:	mov	x1, x0
  411514:	mov	x0, x26
  411518:	bl	414bf0 <nftw@plt+0x12070>
  41151c:	b	4112b4 <nftw@plt+0xe734>
  411520:	cmn	w2, #0x1
  411524:	b.eq	411490 <nftw@plt+0xe910>  // b.none
  411528:	ldp	x19, x20, [sp, #16]
  41152c:	ldp	x23, x24, [sp, #48]
  411530:	ldp	x25, x26, [sp, #64]
  411534:	ldp	x29, x30, [sp], #96
  411538:	b	4197f0 <nftw@plt+0x16c70>
  41153c:	nop
  411540:	stp	x29, x30, [sp, #-48]!
  411544:	mov	x29, sp
  411548:	stp	x21, x22, [sp, #32]
  41154c:	mov	x21, x1
  411550:	ldrb	w1, [x0]
  411554:	cbnz	w1, 411564 <nftw@plt+0xe9e4>
  411558:	ldp	x21, x22, [sp, #32]
  41155c:	ldp	x29, x30, [sp], #48
  411560:	ret
  411564:	stp	x19, x20, [sp, #16]
  411568:	and	w22, w2, #0xff
  41156c:	mov	x20, #0x0                   	// #0
  411570:	ldr	x19, [x0, #8]
  411574:	cbz	x19, 41158c <nftw@plt+0xea0c>
  411578:	ldr	x0, [x19, #16]
  41157c:	str	x20, [x19, #32]
  411580:	mov	x20, x19
  411584:	mov	x19, x0
  411588:	cbnz	x19, 411578 <nftw@plt+0xe9f8>
  41158c:	cbz	x20, 4115ac <nftw@plt+0xea2c>
  411590:	ldr	x0, [x20, #8]
  411594:	mov	w2, w22
  411598:	mov	x1, x21
  41159c:	ldr	x19, [x20, #32]
  4115a0:	bl	411290 <nftw@plt+0xe710>
  4115a4:	ldr	x0, [x20, #24]
  4115a8:	b	411580 <nftw@plt+0xea00>
  4115ac:	ldp	x19, x20, [sp, #16]
  4115b0:	ldp	x21, x22, [sp, #32]
  4115b4:	ldp	x29, x30, [sp], #48
  4115b8:	ret
  4115bc:	nop
  4115c0:	stp	x29, x30, [sp, #-48]!
  4115c4:	mov	x29, sp
  4115c8:	stp	x19, x20, [sp, #16]
  4115cc:	mov	x19, x0
  4115d0:	mov	w20, w1
  4115d4:	str	x21, [sp, #32]
  4115d8:	add	x21, x0, #0x8
  4115dc:	mov	x0, x21
  4115e0:	bl	411bf0 <nftw@plt+0xf070>
  4115e4:	ldr	x0, [x19, #8]
  4115e8:	cbz	x0, 41161c <nftw@plt+0xea9c>
  4115ec:	ldr	w0, [x0]
  4115f0:	mov	w1, w20
  4115f4:	ldr	x2, [x21, #8]
  4115f8:	blr	x2
  4115fc:	cbnz	w0, 41161c <nftw@plt+0xea9c>
  411600:	ldr	x0, [x19, #8]
  411604:	cbz	x0, 41161c <nftw@plt+0xea9c>
  411608:	ldr	x0, [x0, #8]
  41160c:	ldp	x19, x20, [sp, #16]
  411610:	ldr	x21, [sp, #32]
  411614:	ldp	x29, x30, [sp], #48
  411618:	ret
  41161c:	mov	x0, #0x0                   	// #0
  411620:	ldp	x19, x20, [sp, #16]
  411624:	ldr	x21, [sp, #32]
  411628:	ldp	x29, x30, [sp], #48
  41162c:	ret
  411630:	stp	x29, x30, [sp, #-48]!
  411634:	mov	x29, sp
  411638:	stp	x19, x20, [sp, #16]
  41163c:	mov	x19, x0
  411640:	mov	w20, w2
  411644:	stp	x21, x22, [sp, #32]
  411648:	add	x22, x0, #0x8
  41164c:	mov	x0, x22
  411650:	mov	w21, w1
  411654:	bl	411bf0 <nftw@plt+0xf070>
  411658:	ldr	x0, [x19, #8]
  41165c:	cbz	x0, 4116c4 <nftw@plt+0xeb44>
  411660:	ldr	w0, [x0]
  411664:	mov	w1, w21
  411668:	ldr	x2, [x19, #16]
  41166c:	blr	x2
  411670:	cbnz	w0, 4116c4 <nftw@plt+0xeb44>
  411674:	ldr	x0, [x19, #8]
  411678:	cbz	x0, 4116c4 <nftw@plt+0xeb44>
  41167c:	ldr	x0, [x0, #8]
  411680:	cbz	x0, 4116c4 <nftw@plt+0xeb44>
  411684:	ldr	x0, [x0, #24]
  411688:	cbz	x0, 4116c4 <nftw@plt+0xeb44>
  41168c:	ldr	w1, [x0, #4]
  411690:	cbz	w1, 4116c4 <nftw@plt+0xeb44>
  411694:	sub	w1, w1, #0x1
  411698:	add	x2, x0, #0x10
  41169c:	add	x0, x0, #0x8
  4116a0:	add	x1, x2, w1, uxtw #3
  4116a4:	ldr	w2, [x0]
  4116a8:	cmp	w2, w20
  4116ac:	b.gt	4116b8 <nftw@plt+0xeb38>
  4116b0:	ldr	w2, [x0, #4]
  4116b4:	add	w20, w20, w2
  4116b8:	add	x0, x0, #0x8
  4116bc:	cmp	x0, x1
  4116c0:	b.ne	4116a4 <nftw@plt+0xeb24>  // b.any
  4116c4:	mov	w0, w20
  4116c8:	ldp	x19, x20, [sp, #16]
  4116cc:	ldp	x21, x22, [sp, #32]
  4116d0:	ldp	x29, x30, [sp], #48
  4116d4:	ret
  4116d8:	stp	x29, x30, [sp, #-64]!
  4116dc:	mov	x29, sp
  4116e0:	stp	x19, x20, [sp, #16]
  4116e4:	stp	x21, x22, [sp, #32]
  4116e8:	str	x23, [sp, #48]
  4116ec:	cbz	x1, 4117cc <nftw@plt+0xec4c>
  4116f0:	mov	x19, x0
  4116f4:	add	x23, x0, #0x8
  4116f8:	mov	x0, x23
  4116fc:	mov	w22, w2
  411700:	mov	w21, w3
  411704:	mov	x20, x1
  411708:	bl	411a80 <nftw@plt+0xef00>
  41170c:	ldr	x0, [x19, #8]
  411710:	cbz	x0, 4117b4 <nftw@plt+0xec34>
  411714:	ldr	x0, [x0]
  411718:	mov	x1, x20
  41171c:	ldr	x2, [x19, #16]
  411720:	blr	x2
  411724:	cbnz	w0, 4117b4 <nftw@plt+0xec34>
  411728:	ldr	x0, [x19, #8]
  41172c:	cbz	x0, 4117b4 <nftw@plt+0xec34>
  411730:	ldr	x19, [x0, #8]
  411734:	cbz	x19, 4117b4 <nftw@plt+0xec34>
  411738:	add	x20, x19, #0x8
  41173c:	mov	w1, w22
  411740:	mov	x0, x20
  411744:	bl	411bf0 <nftw@plt+0xf070>
  411748:	ldr	x0, [x19, #8]
  41174c:	cbz	x0, 4117b4 <nftw@plt+0xec34>
  411750:	ldr	w0, [x0]
  411754:	mov	w1, w22
  411758:	ldr	x2, [x19, #16]
  41175c:	blr	x2
  411760:	cbnz	w0, 4117b4 <nftw@plt+0xec34>
  411764:	ldr	x0, [x19, #8]
  411768:	cbz	x0, 4117b4 <nftw@plt+0xec34>
  41176c:	ldr	x0, [x0, #8]
  411770:	cbz	x0, 4117b4 <nftw@plt+0xec34>
  411774:	ldr	x0, [x0, #24]
  411778:	cbz	x0, 4117b4 <nftw@plt+0xec34>
  41177c:	ldr	w1, [x0, #4]
  411780:	cbz	w1, 4117b4 <nftw@plt+0xec34>
  411784:	sub	w1, w1, #0x1
  411788:	add	x2, x0, #0x10
  41178c:	add	x0, x0, #0x8
  411790:	add	x1, x2, w1, uxtw #3
  411794:	ldr	w2, [x0]
  411798:	cmp	w2, w21
  41179c:	b.gt	4117a8 <nftw@plt+0xec28>
  4117a0:	ldr	w2, [x0, #4]
  4117a4:	add	w21, w21, w2
  4117a8:	add	x0, x0, #0x8
  4117ac:	cmp	x0, x1
  4117b0:	b.ne	411794 <nftw@plt+0xec14>  // b.any
  4117b4:	mov	w0, w21
  4117b8:	ldp	x19, x20, [sp, #16]
  4117bc:	ldp	x21, x22, [sp, #32]
  4117c0:	ldr	x23, [sp, #48]
  4117c4:	ldp	x29, x30, [sp], #64
  4117c8:	ret
  4117cc:	adrp	x2, 473000 <_obstack_memory_used@@Base+0x11bb8>
  4117d0:	adrp	x0, 473000 <_obstack_memory_used@@Base+0x11bb8>
  4117d4:	add	x2, x2, #0xe40
  4117d8:	add	x0, x0, #0xe00
  4117dc:	mov	w1, #0x140                 	// #320
  4117e0:	bl	402bf0 <nftw@plt+0x70>
  4117e4:	nop
  4117e8:	stp	x29, x30, [sp, #-128]!
  4117ec:	mov	x29, sp
  4117f0:	stp	x19, x20, [sp, #16]
  4117f4:	mov	x19, x0
  4117f8:	ldrb	w0, [x0]
  4117fc:	cbz	w0, 41188c <nftw@plt+0xed0c>
  411800:	add	x0, sp, #0x38
  411804:	str	x21, [sp, #32]
  411808:	and	w21, w1, #0xff
  41180c:	mov	w1, #0x0                   	// #0
  411810:	bl	412868 <nftw@plt+0xfce8>
  411814:	ldrb	w0, [x19]
  411818:	cbnz	w0, 411848 <nftw@plt+0xecc8>
  41181c:	add	x0, sp, #0x38
  411820:	bl	412e98 <nftw@plt+0x10318>
  411824:	bl	4616a8 <_obstack_memory_used@@Base+0x260>
  411828:	mov	x19, x0
  41182c:	add	x0, sp, #0x38
  411830:	bl	411d60 <nftw@plt+0xf1e0>
  411834:	mov	x0, x19
  411838:	ldp	x19, x20, [sp, #16]
  41183c:	ldr	x21, [sp, #32]
  411840:	ldp	x29, x30, [sp], #128
  411844:	ret
  411848:	ldr	x19, [x19, #8]
  41184c:	mov	x20, #0x0                   	// #0
  411850:	cbz	x19, 41186c <nftw@plt+0xecec>
  411854:	nop
  411858:	ldr	x0, [x19, #16]
  41185c:	str	x20, [x19, #32]
  411860:	mov	x20, x19
  411864:	mov	x19, x0
  411868:	cbnz	x19, 411858 <nftw@plt+0xecd8>
  41186c:	cbz	x20, 41181c <nftw@plt+0xec9c>
  411870:	ldr	x0, [x20, #8]
  411874:	mov	w2, w21
  411878:	add	x1, sp, #0x38
  41187c:	ldr	x19, [x20, #32]
  411880:	bl	411290 <nftw@plt+0xe710>
  411884:	ldr	x0, [x20, #24]
  411888:	b	411860 <nftw@plt+0xece0>
  41188c:	mov	x19, #0x0                   	// #0
  411890:	mov	x0, x19
  411894:	ldp	x19, x20, [sp, #16]
  411898:	ldp	x29, x30, [sp], #128
  41189c:	ret
  4118a0:	stp	x29, x30, [sp, #-112]!
  4118a4:	mov	w1, #0x0                   	// #0
  4118a8:	mov	x29, sp
  4118ac:	str	x19, [sp, #16]
  4118b0:	mov	x19, x0
  4118b4:	add	x0, sp, #0x28
  4118b8:	bl	412868 <nftw@plt+0xfce8>
  4118bc:	mov	x0, x19
  4118c0:	add	x1, sp, #0x28
  4118c4:	mov	x19, #0x0                   	// #0
  4118c8:	bl	410a90 <nftw@plt+0xdf10>
  4118cc:	tst	w0, #0xff
  4118d0:	b.eq	4118e4 <nftw@plt+0xed64>  // b.none
  4118d4:	add	x0, sp, #0x28
  4118d8:	bl	412e98 <nftw@plt+0x10318>
  4118dc:	bl	4616a8 <_obstack_memory_used@@Base+0x260>
  4118e0:	mov	x19, x0
  4118e4:	add	x0, sp, #0x28
  4118e8:	bl	411d60 <nftw@plt+0xf1e0>
  4118ec:	mov	x0, x19
  4118f0:	ldr	x19, [sp, #16]
  4118f4:	ldp	x29, x30, [sp], #112
  4118f8:	ret
  4118fc:	nop
  411900:	stp	x29, x30, [sp, #-112]!
  411904:	mov	x29, sp
  411908:	ldrb	w2, [x0]
  41190c:	str	x19, [sp, #16]
  411910:	mov	x19, #0x0                   	// #0
  411914:	cbz	w2, 41195c <nftw@plt+0xeddc>
  411918:	bl	40ffa0 <nftw@plt+0xd420>
  41191c:	mov	x19, x0
  411920:	mov	w1, #0x0                   	// #0
  411924:	add	x0, sp, #0x28
  411928:	bl	412868 <nftw@plt+0xfce8>
  41192c:	mov	x0, x19
  411930:	add	x1, sp, #0x28
  411934:	mov	x19, #0x0                   	// #0
  411938:	bl	410a90 <nftw@plt+0xdf10>
  41193c:	tst	w0, #0xff
  411940:	b.eq	411954 <nftw@plt+0xedd4>  // b.none
  411944:	add	x0, sp, #0x28
  411948:	bl	412e98 <nftw@plt+0x10318>
  41194c:	bl	4616a8 <_obstack_memory_used@@Base+0x260>
  411950:	mov	x19, x0
  411954:	add	x0, sp, #0x28
  411958:	bl	411d60 <nftw@plt+0xf1e0>
  41195c:	mov	x0, x19
  411960:	ldr	x19, [sp, #16]
  411964:	ldp	x29, x30, [sp], #112
  411968:	ret
  41196c:	nop
  411970:	cbz	x1, 411a78 <nftw@plt+0xeef8>
  411974:	stp	x29, x30, [sp, #-48]!
  411978:	mov	x29, sp
  41197c:	stp	x19, x20, [sp, #16]
  411980:	mov	x20, x1
  411984:	ldr	x1, [x0, #16]
  411988:	stp	x21, x22, [sp, #32]
  41198c:	mov	x22, x0
  411990:	cbz	x1, 41199c <nftw@plt+0xee1c>
  411994:	ldr	w0, [x20]
  411998:	blr	x1
  41199c:	ldr	x1, [x22, #24]
  4119a0:	cbz	x1, 4119ac <nftw@plt+0xee2c>
  4119a4:	ldr	x0, [x20, #8]
  4119a8:	blr	x1
  4119ac:	str	xzr, [x20, #32]
  4119b0:	mov	x19, x20
  4119b4:	mov	x20, #0x0                   	// #0
  4119b8:	ldr	x21, [x19, #16]
  4119bc:	cbz	x21, 411a40 <nftw@plt+0xeec0>
  4119c0:	ldr	x1, [x22, #16]
  4119c4:	cbz	x1, 4119d4 <nftw@plt+0xee54>
  4119c8:	ldr	w0, [x21]
  4119cc:	blr	x1
  4119d0:	ldr	x21, [x19, #16]
  4119d4:	ldr	x1, [x22, #24]
  4119d8:	cbz	x1, 4119e8 <nftw@plt+0xee68>
  4119dc:	ldr	x0, [x21, #8]
  4119e0:	blr	x1
  4119e4:	ldr	x21, [x19, #16]
  4119e8:	str	x20, [x21, #32]
  4119ec:	ldr	x20, [x19, #24]
  4119f0:	cbz	x20, 411a4c <nftw@plt+0xeecc>
  4119f4:	ldr	x1, [x22, #16]
  4119f8:	cbz	x1, 411a08 <nftw@plt+0xee88>
  4119fc:	ldr	w0, [x20]
  411a00:	blr	x1
  411a04:	ldr	x20, [x19, #24]
  411a08:	ldr	x1, [x22, #24]
  411a0c:	cbz	x1, 411a1c <nftw@plt+0xee9c>
  411a10:	ldr	x0, [x20, #8]
  411a14:	blr	x1
  411a18:	ldr	x20, [x19, #24]
  411a1c:	str	x21, [x20, #32]
  411a20:	mov	x0, x19
  411a24:	mov	x1, #0x28                  	// #40
  411a28:	ldr	x21, [x19, #32]
  411a2c:	bl	461b00 <_obstack_memory_used@@Base+0x6b8>
  411a30:	cbz	x21, 411a64 <nftw@plt+0xeee4>
  411a34:	mov	x19, x21
  411a38:	ldr	x21, [x19, #16]
  411a3c:	cbnz	x21, 4119c0 <nftw@plt+0xee40>
  411a40:	mov	x21, x20
  411a44:	ldr	x20, [x19, #24]
  411a48:	cbnz	x20, 4119f4 <nftw@plt+0xee74>
  411a4c:	mov	x20, x21
  411a50:	mov	x0, x19
  411a54:	ldr	x21, [x19, #32]
  411a58:	mov	x1, #0x28                  	// #40
  411a5c:	bl	461b00 <_obstack_memory_used@@Base+0x6b8>
  411a60:	cbnz	x21, 411a34 <nftw@plt+0xeeb4>
  411a64:	cbnz	x20, 4119b0 <nftw@plt+0xee30>
  411a68:	ldp	x19, x20, [sp, #16]
  411a6c:	ldp	x21, x22, [sp, #32]
  411a70:	ldp	x29, x30, [sp], #48
  411a74:	ret
  411a78:	ret
  411a7c:	nop
  411a80:	stp	x29, x30, [sp, #-64]!
  411a84:	mov	x29, sp
  411a88:	stp	x19, x20, [sp, #16]
  411a8c:	ldr	x20, [x0]
  411a90:	stp	x21, x22, [sp, #32]
  411a94:	mov	x22, x0
  411a98:	str	x23, [sp, #48]
  411a9c:	mov	x23, x1
  411aa0:	cbz	x20, 411b3c <nftw@plt+0xefbc>
  411aa4:	nop
  411aa8:	ldr	x1, [x20]
  411aac:	mov	x0, x23
  411ab0:	ldr	x2, [x22, #8]
  411ab4:	blr	x2
  411ab8:	mov	w21, w0
  411abc:	cmp	w0, #0x0
  411ac0:	cbz	w0, 411b3c <nftw@plt+0xefbc>
  411ac4:	ldp	x0, x19, [x20, #16]
  411ac8:	csel	x19, x19, x0, ge  // ge = tcont
  411acc:	cbz	x19, 411b3c <nftw@plt+0xefbc>
  411ad0:	ldr	x1, [x19]
  411ad4:	mov	x0, x23
  411ad8:	ldr	x2, [x22, #8]
  411adc:	blr	x2
  411ae0:	cmp	w0, #0x0
  411ae4:	cbz	w0, 411ba0 <nftw@plt+0xf020>
  411ae8:	b.lt	411b50 <nftw@plt+0xefd0>  // b.tstop
  411aec:	ldr	x2, [x19, #24]
  411af0:	cbz	x2, 411ba0 <nftw@plt+0xf020>
  411af4:	cmp	w21, #0x0
  411af8:	b.le	411b84 <nftw@plt+0xf004>
  411afc:	ldr	x0, [x2, #16]
  411b00:	str	x19, [x2, #16]
  411b04:	str	x0, [x19, #24]
  411b08:	str	x2, [x20, #24]
  411b0c:	ldr	x0, [x2, #16]
  411b10:	str	x20, [x2, #16]
  411b14:	str	x0, [x20, #24]
  411b18:	mov	x20, x2
  411b1c:	str	x2, [x22]
  411b20:	mov	x0, x23
  411b24:	ldr	x2, [x22, #8]
  411b28:	ldr	x1, [x20]
  411b2c:	blr	x2
  411b30:	mov	w21, w0
  411b34:	cmp	w0, #0x0
  411b38:	cbnz	w0, 411ac4 <nftw@plt+0xef44>
  411b3c:	ldp	x19, x20, [sp, #16]
  411b40:	ldp	x21, x22, [sp, #32]
  411b44:	ldr	x23, [sp, #48]
  411b48:	ldp	x29, x30, [sp], #64
  411b4c:	ret
  411b50:	ldr	x2, [x19, #16]
  411b54:	cbz	x2, 411ba0 <nftw@plt+0xf020>
  411b58:	ldr	x0, [x2, #24]
  411b5c:	str	x19, [x2, #24]
  411b60:	str	x0, [x19, #16]
  411b64:	tbz	w21, #31, 411b08 <nftw@plt+0xef88>
  411b68:	str	x2, [x20, #16]
  411b6c:	ldr	x0, [x2, #24]
  411b70:	str	x20, [x2, #24]
  411b74:	str	x0, [x20, #16]
  411b78:	mov	x20, x2
  411b7c:	str	x2, [x22]
  411b80:	b	411aa8 <nftw@plt+0xef28>
  411b84:	b.ge	411b98 <nftw@plt+0xf018>  // b.tcont
  411b88:	ldr	x0, [x2, #16]
  411b8c:	str	x19, [x2, #16]
  411b90:	str	x0, [x19, #24]
  411b94:	b	411b68 <nftw@plt+0xefe8>
  411b98:	ldr	x20, [x22]
  411b9c:	b	411aa8 <nftw@plt+0xef28>
  411ba0:	tbnz	w21, #31, 411bc8 <nftw@plt+0xf048>
  411ba4:	ldr	x0, [x19, #16]
  411ba8:	str	x20, [x19, #16]
  411bac:	str	x0, [x20, #24]
  411bb0:	str	x19, [x22]
  411bb4:	ldp	x19, x20, [sp, #16]
  411bb8:	ldp	x21, x22, [sp, #32]
  411bbc:	ldr	x23, [sp, #48]
  411bc0:	ldp	x29, x30, [sp], #64
  411bc4:	ret
  411bc8:	ldr	x0, [x19, #24]
  411bcc:	str	x20, [x19, #24]
  411bd0:	str	x0, [x20, #16]
  411bd4:	str	x19, [x22]
  411bd8:	ldp	x19, x20, [sp, #16]
  411bdc:	ldp	x21, x22, [sp, #32]
  411be0:	ldr	x23, [sp, #48]
  411be4:	ldp	x29, x30, [sp], #64
  411be8:	ret
  411bec:	nop
  411bf0:	stp	x29, x30, [sp, #-64]!
  411bf4:	mov	x29, sp
  411bf8:	stp	x19, x20, [sp, #16]
  411bfc:	ldr	x20, [x0]
  411c00:	stp	x21, x22, [sp, #32]
  411c04:	mov	x22, x0
  411c08:	str	x23, [sp, #48]
  411c0c:	mov	w23, w1
  411c10:	cbz	x20, 411cac <nftw@plt+0xf12c>
  411c14:	nop
  411c18:	ldr	w1, [x20]
  411c1c:	mov	w0, w23
  411c20:	ldr	x2, [x22, #8]
  411c24:	blr	x2
  411c28:	mov	w21, w0
  411c2c:	cmp	w0, #0x0
  411c30:	cbz	w0, 411cac <nftw@plt+0xf12c>
  411c34:	ldp	x0, x19, [x20, #16]
  411c38:	csel	x19, x19, x0, ge  // ge = tcont
  411c3c:	cbz	x19, 411cac <nftw@plt+0xf12c>
  411c40:	ldr	w1, [x19]
  411c44:	mov	w0, w23
  411c48:	ldr	x2, [x22, #8]
  411c4c:	blr	x2
  411c50:	cmp	w0, #0x0
  411c54:	cbz	w0, 411d10 <nftw@plt+0xf190>
  411c58:	b.lt	411cc0 <nftw@plt+0xf140>  // b.tstop
  411c5c:	ldr	x2, [x19, #24]
  411c60:	cbz	x2, 411d10 <nftw@plt+0xf190>
  411c64:	cmp	w21, #0x0
  411c68:	b.le	411cf4 <nftw@plt+0xf174>
  411c6c:	ldr	x0, [x2, #16]
  411c70:	str	x19, [x2, #16]
  411c74:	str	x0, [x19, #24]
  411c78:	str	x2, [x20, #24]
  411c7c:	ldr	x0, [x2, #16]
  411c80:	str	x20, [x2, #16]
  411c84:	str	x0, [x20, #24]
  411c88:	mov	x20, x2
  411c8c:	str	x2, [x22]
  411c90:	mov	w0, w23
  411c94:	ldr	x2, [x22, #8]
  411c98:	ldr	w1, [x20]
  411c9c:	blr	x2
  411ca0:	mov	w21, w0
  411ca4:	cmp	w0, #0x0
  411ca8:	cbnz	w0, 411c34 <nftw@plt+0xf0b4>
  411cac:	ldp	x19, x20, [sp, #16]
  411cb0:	ldp	x21, x22, [sp, #32]
  411cb4:	ldr	x23, [sp, #48]
  411cb8:	ldp	x29, x30, [sp], #64
  411cbc:	ret
  411cc0:	ldr	x2, [x19, #16]
  411cc4:	cbz	x2, 411d10 <nftw@plt+0xf190>
  411cc8:	ldr	x0, [x2, #24]
  411ccc:	str	x19, [x2, #24]
  411cd0:	str	x0, [x19, #16]
  411cd4:	tbz	w21, #31, 411c78 <nftw@plt+0xf0f8>
  411cd8:	str	x2, [x20, #16]
  411cdc:	ldr	x0, [x2, #24]
  411ce0:	str	x20, [x2, #24]
  411ce4:	str	x0, [x20, #16]
  411ce8:	mov	x20, x2
  411cec:	str	x2, [x22]
  411cf0:	b	411c18 <nftw@plt+0xf098>
  411cf4:	b.ge	411d08 <nftw@plt+0xf188>  // b.tcont
  411cf8:	ldr	x0, [x2, #16]
  411cfc:	str	x19, [x2, #16]
  411d00:	str	x0, [x19, #24]
  411d04:	b	411cd8 <nftw@plt+0xf158>
  411d08:	ldr	x20, [x22]
  411d0c:	b	411c18 <nftw@plt+0xf098>
  411d10:	tbnz	w21, #31, 411d38 <nftw@plt+0xf1b8>
  411d14:	ldr	x0, [x19, #16]
  411d18:	str	x20, [x19, #16]
  411d1c:	str	x0, [x20, #24]
  411d20:	str	x19, [x22]
  411d24:	ldp	x19, x20, [sp, #16]
  411d28:	ldp	x21, x22, [sp, #32]
  411d2c:	ldr	x23, [sp, #48]
  411d30:	ldp	x29, x30, [sp], #64
  411d34:	ret
  411d38:	ldr	x0, [x19, #24]
  411d3c:	str	x20, [x19, #24]
  411d40:	str	x0, [x20, #16]
  411d44:	str	x19, [x22]
  411d48:	ldp	x19, x20, [sp, #16]
  411d4c:	ldp	x21, x22, [sp, #32]
  411d50:	ldr	x23, [sp, #48]
  411d54:	ldp	x29, x30, [sp], #64
  411d58:	ret
  411d5c:	nop
  411d60:	stp	x29, x30, [sp, #-32]!
  411d64:	adrp	x1, 474000 <_obstack_memory_used@@Base+0x12bb8>
  411d68:	add	x1, x1, #0x0
  411d6c:	mov	x29, sp
  411d70:	stp	x19, x20, [sp, #16]
  411d74:	mov	x19, x0
  411d78:	ldr	x0, [x0, #56]
  411d7c:	str	x1, [x19]
  411d80:	cbz	x0, 411d90 <nftw@plt+0xf210>
  411d84:	ldr	x1, [x0]
  411d88:	ldr	x1, [x1, #8]
  411d8c:	blr	x1
  411d90:	ldr	x20, [x19, #8]
  411d94:	mov	x1, #0x0                   	// #0
  411d98:	add	x0, x20, #0x58
  411d9c:	bl	461398 <_obstack_free@@Base>
  411da0:	mov	x0, x20
  411da4:	mov	x1, #0x0                   	// #0
  411da8:	bl	461398 <_obstack_free@@Base>
  411dac:	ldr	x0, [x19, #8]
  411db0:	bl	402910 <free@plt>
  411db4:	ldr	x0, [x19, #16]
  411db8:	ldp	x19, x20, [sp, #16]
  411dbc:	ldp	x29, x30, [sp], #32
  411dc0:	b	402910 <free@plt>
  411dc4:	nop
  411dc8:	stp	x29, x30, [sp, #-32]!
  411dcc:	adrp	x1, 474000 <_obstack_memory_used@@Base+0x12bb8>
  411dd0:	add	x1, x1, #0x0
  411dd4:	mov	x29, sp
  411dd8:	stp	x19, x20, [sp, #16]
  411ddc:	mov	x19, x0
  411de0:	ldr	x0, [x0, #56]
  411de4:	str	x1, [x19]
  411de8:	cbz	x0, 411df8 <nftw@plt+0xf278>
  411dec:	ldr	x1, [x0]
  411df0:	ldr	x1, [x1, #8]
  411df4:	blr	x1
  411df8:	ldr	x20, [x19, #8]
  411dfc:	mov	x1, #0x0                   	// #0
  411e00:	add	x0, x20, #0x58
  411e04:	bl	461398 <_obstack_free@@Base>
  411e08:	mov	x1, #0x0                   	// #0
  411e0c:	mov	x0, x20
  411e10:	bl	461398 <_obstack_free@@Base>
  411e14:	ldr	x0, [x19, #8]
  411e18:	bl	402910 <free@plt>
  411e1c:	ldr	x0, [x19, #16]
  411e20:	bl	402910 <free@plt>
  411e24:	mov	x0, x19
  411e28:	mov	x1, #0x48                  	// #72
  411e2c:	ldp	x19, x20, [sp, #16]
  411e30:	ldp	x29, x30, [sp], #32
  411e34:	b	461b00 <_obstack_memory_used@@Base+0x6b8>
  411e38:	ldr	x0, [x0, #32]
  411e3c:	b	437e70 <nftw@plt+0x352f0>
  411e40:	cbz	w1, 411e4c <nftw@plt+0xf2cc>
  411e44:	mov	w0, #0x0                   	// #0
  411e48:	ret
  411e4c:	ldr	x0, [x0, #32]
  411e50:	b	437c48 <nftw@plt+0x350c8>
  411e54:	nop
  411e58:	stp	x29, x30, [sp, #-48]!
  411e5c:	adrp	x1, 4a4000 <_obstack_memory_used@@Base+0x42bb8>
  411e60:	add	x5, x0, #0xcc
  411e64:	movi	v0.4s, #0x0
  411e68:	mov	x29, sp
  411e6c:	ldrb	w7, [x0, #80]
  411e70:	ldrb	w6, [x0, #168]
  411e74:	mov	w8, #0x1                   	// #1
  411e78:	stp	x19, x20, [sp, #16]
  411e7c:	and	w7, w7, #0xfffffff8
  411e80:	and	w6, w6, #0xfffffff8
  411e84:	str	x21, [sp, #32]
  411e88:	adrp	x20, 41c000 <nftw@plt+0x19480>
  411e8c:	ldr	x9, [x1, #1392]
  411e90:	str	xzr, [x0]
  411e94:	stur	q0, [x0, #8]
  411e98:	add	x20, x20, #0x278
  411e9c:	adrp	x21, 41c000 <nftw@plt+0x19480>
  411ea0:	stur	q0, [x0, #24]
  411ea4:	add	x21, x21, #0x2a0
  411ea8:	mov	x19, x0
  411eac:	stur	q0, [x0, #40]
  411eb0:	mov	x3, x20
  411eb4:	mov	x4, x21
  411eb8:	stur	q0, [x0, #56]
  411ebc:	mov	x2, #0x0                   	// #0
  411ec0:	mov	x1, #0x0                   	// #0
  411ec4:	str	xzr, [x0, #72]
  411ec8:	strb	w7, [x0, #80]
  411ecc:	str	xzr, [x0, #88]
  411ed0:	stp	q0, q0, [x0, #96]
  411ed4:	stp	q0, q0, [x0, #128]
  411ed8:	str	xzr, [x0, #160]
  411edc:	strb	w6, [x0, #168]
  411ee0:	stp	x0, xzr, [x0, #176]
  411ee4:	str	x9, [x0, #192]
  411ee8:	str	wzr, [x0, #200]
  411eec:	stp	xzr, xzr, [x5]
  411ef0:	stp	xzr, xzr, [x5, #16]
  411ef4:	stp	xzr, xzr, [x5, #32]
  411ef8:	stp	xzr, xzr, [x5, #48]
  411efc:	stp	xzr, xzr, [x5, #64]
  411f00:	stp	xzr, xzr, [x5, #80]
  411f04:	stp	xzr, xzr, [x5, #96]
  411f08:	stp	xzr, xzr, [x5, #112]
  411f0c:	strb	w8, [x0, #332]
  411f10:	bl	461058 <_obstack_begin@@Base>
  411f14:	mov	x4, x21
  411f18:	mov	x3, x20
  411f1c:	add	x0, x19, #0x58
  411f20:	mov	x2, #0x0                   	// #0
  411f24:	ldp	x19, x20, [sp, #16]
  411f28:	mov	x1, #0x0                   	// #0
  411f2c:	ldr	x21, [sp, #32]
  411f30:	ldp	x29, x30, [sp], #48
  411f34:	b	461058 <_obstack_begin@@Base>
  411f38:	stp	x29, x30, [sp, #-32]!
  411f3c:	mov	x1, #0x0                   	// #0
  411f40:	mov	x29, sp
  411f44:	str	x19, [sp, #16]
  411f48:	mov	x19, x0
  411f4c:	add	x0, x0, #0x58
  411f50:	bl	461398 <_obstack_free@@Base>
  411f54:	mov	x0, x19
  411f58:	mov	x1, #0x0                   	// #0
  411f5c:	ldr	x19, [sp, #16]
  411f60:	ldp	x29, x30, [sp], #32
  411f64:	b	461398 <_obstack_free@@Base>
  411f68:	stp	x29, x30, [sp, #-48]!
  411f6c:	mov	x29, sp
  411f70:	str	x21, [sp, #32]
  411f74:	ldr	x21, [x0, #8]
  411f78:	stp	x19, x20, [sp, #16]
  411f7c:	mov	x19, x0
  411f80:	ldr	x20, [x21, #176]
  411f84:	ldp	x0, x1, [x20, #24]
  411f88:	cmp	x1, x0
  411f8c:	b.eq	412004 <nftw@plt+0xf484>  // b.none
  411f90:	add	x1, x0, #0x1
  411f94:	str	x1, [x20, #24]
  411f98:	strb	wzr, [x0]
  411f9c:	ldr	x1, [x19, #8]
  411fa0:	ldr	x0, [x21, #176]
  411fa4:	ldr	x1, [x1, #192]
  411fa8:	ldr	x0, [x0, #16]
  411fac:	bl	402500 <fputs@plt>
  411fb0:	ldr	x2, [x19, #8]
  411fb4:	ldr	x0, [x2, #176]
  411fb8:	ldp	x3, x1, [x0, #8]
  411fbc:	cmp	x1, x3
  411fc0:	b.ls	411fd0 <nftw@plt+0xf450>  // b.plast
  411fc4:	ldr	x3, [x0, #32]
  411fc8:	cmp	x1, x3
  411fcc:	b.cc	411fec <nftw@plt+0xf46c>  // b.lo, b.ul, b.last
  411fd0:	bl	461398 <_obstack_free@@Base>
  411fd4:	ldr	x2, [x19, #8]
  411fd8:	ldp	x19, x20, [sp, #16]
  411fdc:	ldr	x21, [sp, #32]
  411fe0:	str	wzr, [x2, #200]
  411fe4:	ldp	x29, x30, [sp], #48
  411fe8:	ret
  411fec:	str	x1, [x0, #24]
  411ff0:	ldp	x19, x20, [sp, #16]
  411ff4:	ldr	x21, [sp, #32]
  411ff8:	str	wzr, [x2, #200]
  411ffc:	ldp	x29, x30, [sp], #48
  412000:	ret
  412004:	mov	x0, x20
  412008:	mov	x1, #0x1                   	// #1
  41200c:	bl	461200 <_obstack_newchunk@@Base>
  412010:	ldr	x0, [x20, #24]
  412014:	b	411f90 <nftw@plt+0xf410>
  412018:	stp	x29, x30, [sp, #-64]!
  41201c:	mov	x29, sp
  412020:	stp	x19, x20, [sp, #16]
  412024:	ldr	x20, [x0, #8]
  412028:	stp	x21, x22, [sp, #32]
  41202c:	and	w21, w1, #0xff
  412030:	stp	x23, x24, [sp, #48]
  412034:	mov	x23, x0
  412038:	ldr	x19, [x20, #176]
  41203c:	ldp	x0, x1, [x19, #24]
  412040:	cmp	x1, x0
  412044:	b.eq	4121d8 <nftw@plt+0xf658>  // b.none
  412048:	add	x1, x0, #0x1
  41204c:	str	x1, [x19, #24]
  412050:	strb	wzr, [x0]
  412054:	ldr	x0, [x20, #176]
  412058:	ldr	x2, [x23, #8]
  41205c:	ldr	x19, [x0, #16]
  412060:	ldr	x20, [x2, #192]
  412064:	ldrb	w0, [x19]
  412068:	cbz	w0, 4120ec <nftw@plt+0xf56c>
  41206c:	cbz	w21, 412128 <nftw@plt+0xf5a8>
  412070:	mov	x21, #0x500000000           	// #21474836480
  412074:	adrp	x24, 473000 <_obstack_memory_used@@Base+0x11bb8>
  412078:	mov	x22, #0x1                   	// #1
  41207c:	add	x24, x24, #0xec0
  412080:	movk	x21, #0x5000, lsl #48
  412084:	b	4120b0 <nftw@plt+0xf530>
  412088:	cmp	w0, #0x9
  41208c:	b.ls	4120a0 <nftw@plt+0xf520>  // b.plast
  412090:	lsl	x1, x22, x0
  412094:	tst	x1, x21
  412098:	b.ne	4120c8 <nftw@plt+0xf548>  // b.any
  41209c:	tbnz	w1, #10, 4121c0 <nftw@plt+0xf640>
  4120a0:	mov	x1, x20
  4120a4:	bl	4025e0 <fputc@plt>
  4120a8:	ldrb	w0, [x19, #1]!
  4120ac:	cbz	w0, 4120e8 <nftw@plt+0xf568>
  4120b0:	cmp	w0, #0x3e
  4120b4:	b.ls	412088 <nftw@plt+0xf508>  // b.plast
  4120b8:	cmp	w0, #0x5c
  4120bc:	b.ne	412194 <nftw@plt+0xf614>  // b.any
  4120c0:	ldrb	w0, [x19, #1]
  4120c4:	cbz	w0, 4121ec <nftw@plt+0xf66c>
  4120c8:	mov	x1, x20
  4120cc:	mov	w0, #0x5c                  	// #92
  4120d0:	bl	4025e0 <fputc@plt>
  4120d4:	ldrb	w0, [x19]
  4120d8:	mov	x1, x20
  4120dc:	bl	4025e0 <fputc@plt>
  4120e0:	ldrb	w0, [x19, #1]!
  4120e4:	cbnz	w0, 4120b0 <nftw@plt+0xf530>
  4120e8:	ldr	x2, [x23, #8]
  4120ec:	ldr	x0, [x2, #176]
  4120f0:	ldp	x3, x1, [x0, #8]
  4120f4:	cmp	x1, x3
  4120f8:	b.ls	412108 <nftw@plt+0xf588>  // b.plast
  4120fc:	ldr	x3, [x0, #32]
  412100:	cmp	x1, x3
  412104:	b.cc	412178 <nftw@plt+0xf5f8>  // b.lo, b.ul, b.last
  412108:	bl	461398 <_obstack_free@@Base>
  41210c:	ldr	x2, [x23, #8]
  412110:	ldp	x19, x20, [sp, #16]
  412114:	ldp	x21, x22, [sp, #32]
  412118:	ldp	x23, x24, [sp, #48]
  41211c:	str	wzr, [x2, #200]
  412120:	ldp	x29, x30, [sp], #64
  412124:	ret
  412128:	adrp	x21, 473000 <_obstack_memory_used@@Base+0x11bb8>
  41212c:	add	x21, x21, #0xec0
  412130:	b	41214c <nftw@plt+0xf5cc>
  412134:	cmp	w0, #0xa
  412138:	b.eq	4121a8 <nftw@plt+0xf628>  // b.none
  41213c:	mov	x1, x20
  412140:	bl	4025e0 <fputc@plt>
  412144:	ldrb	w0, [x19, #1]!
  412148:	cbz	w0, 4120e8 <nftw@plt+0xf568>
  41214c:	cmp	w0, #0x22
  412150:	b.eq	412164 <nftw@plt+0xf5e4>  // b.none
  412154:	cmp	w0, #0x5c
  412158:	b.ne	412134 <nftw@plt+0xf5b4>  // b.any
  41215c:	ldrb	w0, [x19, #1]
  412160:	cbz	w0, 4121ec <nftw@plt+0xf66c>
  412164:	mov	x1, x20
  412168:	mov	w0, #0x5c                  	// #92
  41216c:	bl	4025e0 <fputc@plt>
  412170:	ldrb	w0, [x19]
  412174:	b	41213c <nftw@plt+0xf5bc>
  412178:	str	x1, [x0, #24]
  41217c:	ldp	x19, x20, [sp, #16]
  412180:	ldp	x21, x22, [sp, #32]
  412184:	ldp	x23, x24, [sp, #48]
  412188:	str	wzr, [x2, #200]
  41218c:	ldp	x29, x30, [sp], #64
  412190:	ret
  412194:	sub	w1, w0, #0x7b
  412198:	and	w1, w1, #0xff
  41219c:	cmp	w1, #0x2
  4121a0:	b.hi	4120a0 <nftw@plt+0xf520>  // b.pmore
  4121a4:	b	4120c8 <nftw@plt+0xf548>
  4121a8:	mov	x3, x20
  4121ac:	mov	x0, x21
  4121b0:	mov	x2, #0x2                   	// #2
  4121b4:	mov	x1, #0x1                   	// #1
  4121b8:	bl	402950 <fwrite@plt>
  4121bc:	b	412164 <nftw@plt+0xf5e4>
  4121c0:	mov	x3, x20
  4121c4:	mov	x0, x24
  4121c8:	mov	x2, #0x2                   	// #2
  4121cc:	mov	x1, #0x1                   	// #1
  4121d0:	bl	402950 <fwrite@plt>
  4121d4:	b	4120c8 <nftw@plt+0xf548>
  4121d8:	mov	x0, x19
  4121dc:	mov	x1, #0x1                   	// #1
  4121e0:	bl	461200 <_obstack_newchunk@@Base>
  4121e4:	ldr	x0, [x19, #24]
  4121e8:	b	412048 <nftw@plt+0xf4c8>
  4121ec:	adrp	x2, 473000 <_obstack_memory_used@@Base+0x11bb8>
  4121f0:	adrp	x0, 473000 <_obstack_memory_used@@Base+0x11bb8>
  4121f4:	add	x2, x2, #0xec8
  4121f8:	add	x0, x0, #0xef0
  4121fc:	mov	w1, #0x378                 	// #888
  412200:	bl	402bf0 <nftw@plt+0x70>
  412204:	nop
  412208:	stp	x29, x30, [sp, #-80]!
  41220c:	mov	x29, sp
  412210:	stp	x23, x24, [sp, #48]
  412214:	ldr	w24, [x0, #32]
  412218:	cmp	w24, #0x0
  41221c:	b.le	4122f8 <nftw@plt+0xf778>
  412220:	mov	w23, #0xa                   	// #10
  412224:	stp	x19, x20, [sp, #16]
  412228:	mov	x20, x0
  41222c:	stp	x21, x22, [sp, #32]
  412230:	adrp	x22, 481000 <_obstack_memory_used@@Base+0x1fbb8>
  412234:	mov	w21, #0x0                   	// #0
  412238:	add	x22, x22, #0xaf0
  41223c:	ldr	x1, [x0, #8]
  412240:	str	x25, [sp, #64]
  412244:	mov	w25, #0x20                  	// #32
  412248:	b	412270 <nftw@plt+0xf6f0>
  41224c:	add	x0, x2, #0x1
  412250:	str	x0, [x19, #24]
  412254:	strb	w25, [x2]
  412258:	ldr	x1, [x20, #8]
  41225c:	ldr	w2, [x1, #200]
  412260:	add	w2, w2, #0x1
  412264:	str	w2, [x1, #200]
  412268:	cmp	w24, w21
  41226c:	b.eq	4122ec <nftw@plt+0xf76c>  // b.none
  412270:	ldr	x19, [x1, #176]
  412274:	add	w21, w21, #0x1
  412278:	ldr	w0, [x20, #40]
  41227c:	cmp	w0, #0x0
  412280:	ldp	x2, x3, [x19, #24]
  412284:	b.le	41229c <nftw@plt+0xf71c>
  412288:	ldr	w1, [x1, #200]
  41228c:	ldr	w0, [x20, #28]
  412290:	sub	w0, w0, w1
  412294:	cmp	w0, #0x0
  412298:	b.le	4122b8 <nftw@plt+0xf738>
  41229c:	cmp	x3, x2
  4122a0:	b.ne	41224c <nftw@plt+0xf6cc>  // b.any
  4122a4:	mov	x0, x19
  4122a8:	mov	x1, #0x1                   	// #1
  4122ac:	bl	461200 <_obstack_newchunk@@Base>
  4122b0:	ldr	x2, [x19, #24]
  4122b4:	b	41224c <nftw@plt+0xf6cc>
  4122b8:	cmp	x3, x2
  4122bc:	b.eq	412304 <nftw@plt+0xf784>  // b.none
  4122c0:	add	x1, x2, #0x1
  4122c4:	str	x1, [x19, #24]
  4122c8:	strb	w23, [x2]
  4122cc:	ldrh	w0, [x22, #64]
  4122d0:	ldr	x1, [x20, #8]
  4122d4:	strb	wzr, [x20, #65]
  4122d8:	str	wzr, [x1, #200]
  4122dc:	tbnz	w0, #6, 412268 <nftw@plt+0xf6e8>
  4122e0:	ldr	x19, [x1, #176]
  4122e4:	ldp	x2, x3, [x19, #24]
  4122e8:	b	41229c <nftw@plt+0xf71c>
  4122ec:	ldp	x19, x20, [sp, #16]
  4122f0:	ldp	x21, x22, [sp, #32]
  4122f4:	ldr	x25, [sp, #64]
  4122f8:	ldp	x23, x24, [sp, #48]
  4122fc:	ldp	x29, x30, [sp], #80
  412300:	ret
  412304:	mov	x0, x19
  412308:	mov	x1, #0x1                   	// #1
  41230c:	bl	461200 <_obstack_newchunk@@Base>
  412310:	ldr	x2, [x19, #24]
  412314:	b	4122c0 <nftw@plt+0xf740>
  412318:	stp	x29, x30, [sp, #-48]!
  41231c:	mov	x29, sp
  412320:	stp	x19, x20, [sp, #16]
  412324:	mov	x19, x0
  412328:	ldr	x20, [x0, #8]
  41232c:	strb	wzr, [x0, #64]
  412330:	str	wzr, [x0, #32]
  412334:	ldrb	w0, [x20, #332]
  412338:	cbnz	w0, 412348 <nftw@plt+0xf7c8>
  41233c:	ldp	x19, x20, [sp, #16]
  412340:	ldp	x29, x30, [sp], #48
  412344:	ret
  412348:	str	x21, [sp, #32]
  41234c:	ldr	x21, [x20, #176]
  412350:	ldp	x0, x1, [x21, #24]
  412354:	cmp	x1, x0
  412358:	b.eq	4123d8 <nftw@plt+0xf858>  // b.none
  41235c:	add	x1, x0, #0x1
  412360:	str	x1, [x21, #24]
  412364:	strb	wzr, [x0]
  412368:	ldr	x1, [x19, #8]
  41236c:	ldr	x0, [x20, #176]
  412370:	ldr	x1, [x1, #192]
  412374:	ldr	x0, [x0, #16]
  412378:	bl	402500 <fputs@plt>
  41237c:	ldr	x2, [x19, #8]
  412380:	ldr	x0, [x2, #176]
  412384:	ldp	x3, x1, [x0, #8]
  412388:	cmp	x1, x3
  41238c:	b.ls	41239c <nftw@plt+0xf81c>  // b.plast
  412390:	ldr	x3, [x0, #32]
  412394:	cmp	x1, x3
  412398:	b.cc	4123bc <nftw@plt+0xf83c>  // b.lo, b.ul, b.last
  41239c:	bl	461398 <_obstack_free@@Base>
  4123a0:	ldr	x2, [x19, #8]
  4123a4:	ldp	x19, x20, [sp, #16]
  4123a8:	ldr	x21, [sp, #32]
  4123ac:	str	wzr, [x2, #200]
  4123b0:	ldr	x0, [x2, #192]
  4123b4:	ldp	x29, x30, [sp], #48
  4123b8:	b	402980 <fflush@plt>
  4123bc:	str	x1, [x0, #24]
  4123c0:	ldp	x19, x20, [sp, #16]
  4123c4:	ldr	x21, [sp, #32]
  4123c8:	str	wzr, [x2, #200]
  4123cc:	ldr	x0, [x2, #192]
  4123d0:	ldp	x29, x30, [sp], #48
  4123d4:	b	402980 <fflush@plt>
  4123d8:	mov	x0, x21
  4123dc:	mov	x1, #0x1                   	// #1
  4123e0:	bl	461200 <_obstack_newchunk@@Base>
  4123e4:	ldr	x0, [x21, #24]
  4123e8:	b	41235c <nftw@plt+0xf7dc>
  4123ec:	nop
  4123f0:	stp	x29, x30, [sp, #-48]!
  4123f4:	mov	x29, sp
  4123f8:	str	x21, [sp, #32]
  4123fc:	ldr	x21, [x0, #8]
  412400:	stp	x19, x20, [sp, #16]
  412404:	mov	x19, x0
  412408:	strb	wzr, [x0, #64]
  41240c:	ldr	x20, [x21, #176]
  412410:	ldr	x1, [x20, #32]
  412414:	str	wzr, [x0, #32]
  412418:	ldr	x0, [x20, #24]
  41241c:	cmp	x1, x0
  412420:	b.eq	4124a0 <nftw@plt+0xf920>  // b.none
  412424:	add	x1, x0, #0x1
  412428:	str	x1, [x20, #24]
  41242c:	strb	wzr, [x0]
  412430:	ldr	x1, [x19, #8]
  412434:	ldr	x0, [x21, #176]
  412438:	ldr	x1, [x1, #192]
  41243c:	ldr	x0, [x0, #16]
  412440:	bl	402500 <fputs@plt>
  412444:	ldr	x2, [x19, #8]
  412448:	ldr	x0, [x2, #176]
  41244c:	ldp	x3, x1, [x0, #8]
  412450:	cmp	x1, x3
  412454:	b.ls	412464 <nftw@plt+0xf8e4>  // b.plast
  412458:	ldr	x3, [x0, #32]
  41245c:	cmp	x1, x3
  412460:	b.cc	412484 <nftw@plt+0xf904>  // b.lo, b.ul, b.last
  412464:	bl	461398 <_obstack_free@@Base>
  412468:	ldr	x2, [x19, #8]
  41246c:	ldp	x19, x20, [sp, #16]
  412470:	ldr	x21, [sp, #32]
  412474:	str	wzr, [x2, #200]
  412478:	ldr	x0, [x2, #192]
  41247c:	ldp	x29, x30, [sp], #48
  412480:	b	402980 <fflush@plt>
  412484:	str	x1, [x0, #24]
  412488:	ldp	x19, x20, [sp, #16]
  41248c:	ldr	x21, [sp, #32]
  412490:	str	wzr, [x2, #200]
  412494:	ldr	x0, [x2, #192]
  412498:	ldp	x29, x30, [sp], #48
  41249c:	b	402980 <fflush@plt>
  4124a0:	mov	x0, x20
  4124a4:	mov	x1, #0x1                   	// #1
  4124a8:	bl	461200 <_obstack_newchunk@@Base>
  4124ac:	ldr	x0, [x20, #24]
  4124b0:	b	412424 <nftw@plt+0xf8a4>
  4124b4:	nop
  4124b8:	stp	x29, x30, [sp, #-32]!
  4124bc:	cmp	w1, #0x0
  4124c0:	mov	x29, sp
  4124c4:	stp	x19, x20, [sp, #16]
  4124c8:	mov	x20, x0
  4124cc:	mov	w19, w1
  4124d0:	str	w1, [x0, #40]
  4124d4:	b.le	4124e4 <nftw@plt+0xf964>
  4124d8:	ldr	w0, [x0, #36]
  4124dc:	cmp	w0, #0x1
  4124e0:	b.hi	4124f4 <nftw@plt+0xf974>  // b.pmore
  4124e4:	str	w19, [x20, #28]
  4124e8:	ldp	x19, x20, [sp, #16]
  4124ec:	ldp	x29, x30, [sp], #32
  4124f0:	ret
  4124f4:	ldr	x0, [x20, #16]
  4124f8:	cbz	x0, 412504 <nftw@plt+0xf984>
  4124fc:	bl	4024f0 <strlen@plt>
  412500:	sub	w1, w19, w0
  412504:	cmp	w1, #0x1f
  412508:	b.gt	4124e4 <nftw@plt+0xf964>
  41250c:	add	w19, w19, #0x20
  412510:	b	4124e4 <nftw@plt+0xf964>
  412514:	nop
  412518:	stp	x29, x30, [sp, #-32]!
  41251c:	mov	x29, sp
  412520:	ldr	x2, [x0, #8]
  412524:	str	x19, [sp, #16]
  412528:	mov	x19, x0
  41252c:	ldr	x0, [x2, #176]
  412530:	ldp	x3, x1, [x0, #8]
  412534:	cmp	x3, x1
  412538:	b.cs	412548 <nftw@plt+0xf9c8>  // b.hs, b.nlast
  41253c:	ldr	x3, [x0, #32]
  412540:	cmp	x3, x1
  412544:	b.hi	412560 <nftw@plt+0xf9e0>  // b.pmore
  412548:	bl	461398 <_obstack_free@@Base>
  41254c:	ldr	x2, [x19, #8]
  412550:	ldr	x19, [sp, #16]
  412554:	str	wzr, [x2, #200]
  412558:	ldp	x29, x30, [sp], #32
  41255c:	ret
  412560:	str	x1, [x0, #24]
  412564:	ldr	x19, [sp, #16]
  412568:	str	wzr, [x2, #200]
  41256c:	ldp	x29, x30, [sp], #32
  412570:	ret
  412574:	nop
  412578:	stp	x29, x30, [sp, #-48]!
  41257c:	mov	x29, sp
  412580:	stp	x19, x20, [sp, #16]
  412584:	mov	x19, x0
  412588:	mov	x20, x1
  41258c:	ldr	x0, [x0, #16]
  412590:	str	x21, [sp, #32]
  412594:	bl	402910 <free@plt>
  412598:	ldr	w21, [x19, #40]
  41259c:	str	x20, [x19, #16]
  4125a0:	cmp	w21, #0x0
  4125a4:	b.le	4125b4 <nftw@plt+0xfa34>
  4125a8:	ldr	w0, [x19, #36]
  4125ac:	cmp	w0, #0x1
  4125b0:	b.hi	4125cc <nftw@plt+0xfa4c>  // b.pmore
  4125b4:	stp	w21, wzr, [x19, #28]
  4125b8:	strb	wzr, [x19, #64]
  4125bc:	ldp	x19, x20, [sp, #16]
  4125c0:	ldr	x21, [sp, #32]
  4125c4:	ldp	x29, x30, [sp], #48
  4125c8:	ret
  4125cc:	mov	w0, w21
  4125d0:	cbz	x20, 4125e0 <nftw@plt+0xfa60>
  4125d4:	mov	x0, x20
  4125d8:	bl	4024f0 <strlen@plt>
  4125dc:	sub	w0, w21, w0
  4125e0:	cmp	w0, #0x20
  4125e4:	add	w0, w21, #0x20
  4125e8:	csel	w21, w0, w21, lt  // lt = tstop
  4125ec:	stp	w21, wzr, [x19, #28]
  4125f0:	strb	wzr, [x19, #64]
  4125f4:	ldp	x19, x20, [sp, #16]
  4125f8:	ldr	x21, [sp, #32]
  4125fc:	ldp	x29, x30, [sp], #48
  412600:	ret
  412604:	nop
  412608:	mov	x1, x0
  41260c:	ldr	x0, [x0, #16]
  412610:	str	xzr, [x1, #16]
  412614:	ret
  412618:	stp	x29, x30, [sp, #-32]!
  41261c:	mov	x29, sp
  412620:	str	x19, [sp, #16]
  412624:	mov	x19, x0
  412628:	ldr	x0, [x0, #16]
  41262c:	cbz	x0, 412638 <nftw@plt+0xfab8>
  412630:	bl	402910 <free@plt>
  412634:	str	xzr, [x19, #16]
  412638:	ldr	x19, [sp, #16]
  41263c:	ldp	x29, x30, [sp], #32
  412640:	ret
  412644:	nop
  412648:	stp	x29, x30, [sp, #-80]!
  41264c:	mov	x29, sp
  412650:	stp	x19, x20, [sp, #16]
  412654:	ldr	x19, [x0, #16]
  412658:	cbz	x19, 412704 <nftw@plt+0xfb84>
  41265c:	mov	x20, x0
  412660:	ldr	w0, [x0, #36]
  412664:	cbz	w0, 412710 <nftw@plt+0xfb90>
  412668:	cmp	w0, #0x2
  41266c:	b.ne	412704 <nftw@plt+0xfb84>  // b.any
  412670:	stp	x21, x22, [sp, #32]
  412674:	stp	x23, x24, [sp, #48]
  412678:	mov	x0, x19
  41267c:	bl	4024f0 <strlen@plt>
  412680:	mov	x21, x0
  412684:	ldr	x22, [x20, #8]
  412688:	sxtw	x24, w0
  41268c:	ldr	x23, [x22, #176]
  412690:	ldp	x0, x1, [x23, #24]
  412694:	sub	x1, x1, x0
  412698:	cmp	x1, w21, sxtw
  41269c:	b.cc	412820 <nftw@plt+0xfca0>  // b.lo, b.ul, b.last
  4126a0:	mov	x2, x24
  4126a4:	mov	x1, x19
  4126a8:	bl	402490 <memcpy@plt>
  4126ac:	ldr	x0, [x23, #24]
  4126b0:	cmp	w21, #0x0
  4126b4:	add	x0, x0, x24
  4126b8:	str	x0, [x23, #24]
  4126bc:	b.le	4126f4 <nftw@plt+0xfb74>
  4126c0:	sub	w0, w21, #0x1
  4126c4:	add	x2, x19, #0x1
  4126c8:	mov	x1, x19
  4126cc:	add	x0, x0, x2
  4126d0:	ldrb	w2, [x1]
  4126d4:	cmp	w2, #0xa
  4126d8:	b.eq	4127b8 <nftw@plt+0xfc38>  // b.none
  4126dc:	ldr	w2, [x22, #200]
  4126e0:	add	x1, x1, #0x1
  4126e4:	cmp	x0, x1
  4126e8:	add	w2, w2, #0x1
  4126ec:	str	w2, [x22, #200]
  4126f0:	b.ne	4126d0 <nftw@plt+0xfb50>  // b.any
  4126f4:	ldp	x21, x22, [sp, #32]
  4126f8:	mov	w0, #0x1                   	// #1
  4126fc:	ldp	x23, x24, [sp, #48]
  412700:	strb	w0, [x20, #64]
  412704:	ldp	x19, x20, [sp, #16]
  412708:	ldp	x29, x30, [sp], #80
  41270c:	ret
  412710:	ldrb	w0, [x20, #64]
  412714:	stp	x23, x24, [sp, #48]
  412718:	ldr	w24, [x20, #32]
  41271c:	cbz	w0, 4127dc <nftw@plt+0xfc5c>
  412720:	cmp	w24, #0x0
  412724:	b.le	412860 <nftw@plt+0xfce0>
  412728:	mov	w23, #0xa                   	// #10
  41272c:	stp	x21, x22, [sp, #32]
  412730:	adrp	x22, 481000 <_obstack_memory_used@@Base+0x1fbb8>
  412734:	mov	w21, #0x0                   	// #0
  412738:	add	x22, x22, #0xaf0
  41273c:	ldr	x1, [x20, #8]
  412740:	str	x25, [sp, #64]
  412744:	mov	w25, #0x20                  	// #32
  412748:	b	412770 <nftw@plt+0xfbf0>
  41274c:	add	x1, x0, #0x1
  412750:	str	x1, [x19, #24]
  412754:	strb	w25, [x0]
  412758:	ldr	x1, [x20, #8]
  41275c:	ldr	w0, [x1, #200]
  412760:	add	w0, w0, #0x1
  412764:	str	w0, [x1, #200]
  412768:	cmp	w21, w24
  41276c:	b.eq	412834 <nftw@plt+0xfcb4>  // b.none
  412770:	ldr	x19, [x1, #176]
  412774:	add	w21, w21, #0x1
  412778:	ldr	w0, [x20, #40]
  41277c:	cmp	w0, #0x0
  412780:	ldp	x0, x3, [x19, #24]
  412784:	b.le	41279c <nftw@plt+0xfc1c>
  412788:	ldr	w1, [x1, #200]
  41278c:	ldr	w2, [x20, #28]
  412790:	sub	w1, w2, w1
  412794:	cmp	w1, #0x0
  412798:	b.le	4127ec <nftw@plt+0xfc6c>
  41279c:	cmp	x3, x0
  4127a0:	b.ne	41274c <nftw@plt+0xfbcc>  // b.any
  4127a4:	mov	x0, x19
  4127a8:	mov	x1, #0x1                   	// #1
  4127ac:	bl	461200 <_obstack_newchunk@@Base>
  4127b0:	ldr	x0, [x19, #24]
  4127b4:	b	41274c <nftw@plt+0xfbcc>
  4127b8:	str	wzr, [x22, #200]
  4127bc:	add	x1, x1, #0x1
  4127c0:	cmp	x0, x1
  4127c4:	b.ne	4126d0 <nftw@plt+0xfb50>  // b.any
  4127c8:	mov	w0, #0x1                   	// #1
  4127cc:	strb	w0, [x20, #64]
  4127d0:	ldp	x21, x22, [sp, #32]
  4127d4:	ldp	x23, x24, [sp, #48]
  4127d8:	b	412704 <nftw@plt+0xfb84>
  4127dc:	stp	x21, x22, [sp, #32]
  4127e0:	add	w24, w24, #0x3
  4127e4:	str	w24, [x20, #32]
  4127e8:	b	412678 <nftw@plt+0xfaf8>
  4127ec:	cmp	x3, x0
  4127f0:	b.eq	41284c <nftw@plt+0xfccc>  // b.none
  4127f4:	add	x1, x0, #0x1
  4127f8:	str	x1, [x19, #24]
  4127fc:	strb	w23, [x0]
  412800:	ldrh	w2, [x22, #64]
  412804:	ldr	x1, [x20, #8]
  412808:	strb	wzr, [x20, #65]
  41280c:	str	wzr, [x1, #200]
  412810:	tbnz	w2, #6, 412768 <nftw@plt+0xfbe8>
  412814:	ldr	x19, [x1, #176]
  412818:	ldp	x0, x3, [x19, #24]
  41281c:	b	41279c <nftw@plt+0xfc1c>
  412820:	mov	x0, x23
  412824:	mov	x1, x24
  412828:	bl	461200 <_obstack_newchunk@@Base>
  41282c:	ldr	x0, [x23, #24]
  412830:	b	4126a0 <nftw@plt+0xfb20>
  412834:	ldp	x19, x20, [sp, #16]
  412838:	ldp	x21, x22, [sp, #32]
  41283c:	ldp	x23, x24, [sp, #48]
  412840:	ldr	x25, [sp, #64]
  412844:	ldp	x29, x30, [sp], #80
  412848:	ret
  41284c:	mov	x0, x19
  412850:	mov	x1, #0x1                   	// #1
  412854:	bl	461200 <_obstack_newchunk@@Base>
  412858:	ldr	x0, [x19, #24]
  41285c:	b	4127f4 <nftw@plt+0xfc74>
  412860:	ldp	x23, x24, [sp, #48]
  412864:	b	412704 <nftw@plt+0xfb84>
  412868:	stp	x29, x30, [sp, #-48]!
  41286c:	adrp	x2, 474000 <_obstack_memory_used@@Base+0x12bb8>
  412870:	add	x2, x2, #0x0
  412874:	mov	x29, sp
  412878:	stp	x19, x20, [sp, #16]
  41287c:	mov	x19, x0
  412880:	mov	w20, w1
  412884:	str	x21, [sp, #32]
  412888:	mov	x1, #0x150                 	// #336
  41288c:	str	x2, [x19]
  412890:	mov	x0, #0x1                   	// #1
  412894:	bl	461598 <_obstack_memory_used@@Base+0x150>
  412898:	mov	x21, x0
  41289c:	bl	411e58 <nftw@plt+0xf2d8>
  4128a0:	stp	x21, xzr, [x19, #8]
  4128a4:	mov	w0, #0x10000               	// #65536
  4128a8:	stp	wzr, w20, [x19, #24]
  4128ac:	str	xzr, [x19, #32]
  4128b0:	str	w20, [x19, #40]
  4128b4:	stp	xzr, xzr, [x19, #48]
  4128b8:	str	w0, [x19, #64]
  4128bc:	ldp	x19, x20, [sp, #16]
  4128c0:	ldr	x21, [sp, #32]
  4128c4:	ldp	x29, x30, [sp], #48
  4128c8:	ret
  4128cc:	nop
  4128d0:	stp	x29, x30, [sp, #-64]!
  4128d4:	mov	x29, sp
  4128d8:	stp	x21, x22, [sp, #32]
  4128dc:	ldr	x21, [x0, #8]
  4128e0:	stp	x19, x20, [sp, #16]
  4128e4:	mov	x19, x1
  4128e8:	mov	x20, x2
  4128ec:	ldr	w1, [x21, #200]
  4128f0:	cbz	w1, 4129a4 <nftw@plt+0xfe24>
  4128f4:	str	x23, [sp, #48]
  4128f8:	ldr	x22, [x21, #176]
  4128fc:	sub	x20, x20, x19
  412900:	sxtw	x23, w20
  412904:	ldp	x0, x1, [x22, #24]
  412908:	sub	x1, x1, x0
  41290c:	cmp	x1, w20, sxtw
  412910:	b.cs	412924 <nftw@plt+0xfda4>  // b.hs, b.nlast
  412914:	mov	x0, x22
  412918:	mov	x1, x23
  41291c:	bl	461200 <_obstack_newchunk@@Base>
  412920:	ldr	x0, [x22, #24]
  412924:	mov	x2, x23
  412928:	mov	x1, x19
  41292c:	bl	402490 <memcpy@plt>
  412930:	ldr	x0, [x22, #24]
  412934:	cmp	w20, #0x0
  412938:	add	x0, x0, x23
  41293c:	str	x0, [x22, #24]
  412940:	b.le	41297c <nftw@plt+0xfdfc>
  412944:	sub	w0, w20, #0x1
  412948:	add	x2, x19, #0x1
  41294c:	mov	x1, x19
  412950:	add	x0, x0, x2
  412954:	nop
  412958:	ldrb	w2, [x1]
  41295c:	cmp	w2, #0xa
  412960:	b.eq	412990 <nftw@plt+0xfe10>  // b.none
  412964:	ldr	w2, [x21, #200]
  412968:	add	x1, x1, #0x1
  41296c:	cmp	x0, x1
  412970:	add	w2, w2, #0x1
  412974:	str	w2, [x21, #200]
  412978:	b.ne	412958 <nftw@plt+0xfdd8>  // b.any
  41297c:	ldr	x23, [sp, #48]
  412980:	ldp	x19, x20, [sp, #16]
  412984:	ldp	x21, x22, [sp, #32]
  412988:	ldp	x29, x30, [sp], #64
  41298c:	ret
  412990:	str	wzr, [x21, #200]
  412994:	add	x1, x1, #0x1
  412998:	cmp	x0, x1
  41299c:	b.ne	412958 <nftw@plt+0xfdd8>  // b.any
  4129a0:	b	41297c <nftw@plt+0xfdfc>
  4129a4:	mov	x22, x0
  4129a8:	bl	412648 <nftw@plt+0xfac8>
  4129ac:	ldr	w0, [x22, #40]
  4129b0:	cmp	w0, #0x0
  4129b4:	b.le	4129dc <nftw@plt+0xfe5c>
  4129b8:	cmp	x19, x20
  4129bc:	b.ne	4129d0 <nftw@plt+0xfe50>  // b.any
  4129c0:	b	412980 <nftw@plt+0xfe00>
  4129c4:	add	x19, x19, #0x1
  4129c8:	cmp	x20, x19
  4129cc:	b.eq	412980 <nftw@plt+0xfe00>  // b.none
  4129d0:	ldrb	w0, [x19]
  4129d4:	cmp	w0, #0x20
  4129d8:	b.eq	4129c4 <nftw@plt+0xfe44>  // b.none
  4129dc:	ldr	x21, [x22, #8]
  4129e0:	str	x23, [sp, #48]
  4129e4:	b	4128f8 <nftw@plt+0xfd78>
  4129e8:	stp	x29, x30, [sp, #-80]!
  4129ec:	mov	x29, sp
  4129f0:	stp	x23, x24, [sp, #48]
  4129f4:	mov	w24, #0xa                   	// #10
  4129f8:	ldr	w23, [x0, #40]
  4129fc:	stp	x19, x20, [sp, #16]
  412a00:	mov	x20, x2
  412a04:	stp	x21, x22, [sp, #32]
  412a08:	adrp	x21, 481000 <_obstack_memory_used@@Base+0x1fbb8>
  412a0c:	mov	x22, x1
  412a10:	add	x21, x21, #0xaf0
  412a14:	stp	x25, x26, [sp, #64]
  412a18:	mov	x25, x0
  412a1c:	cmp	x22, x20
  412a20:	b.eq	412ab0 <nftw@plt+0xff30>  // b.none
  412a24:	mov	x19, x22
  412a28:	b	412a38 <nftw@plt+0xfeb8>
  412a2c:	add	x19, x19, #0x1
  412a30:	cmp	x20, x19
  412a34:	b.eq	412b00 <nftw@plt+0xff80>  // b.none
  412a38:	ldrb	w3, [x19]
  412a3c:	cmp	w3, #0xa
  412a40:	ldrh	w3, [x21, w3, sxtw #1]
  412a44:	and	w3, w3, #0x1
  412a48:	csinc	w3, w3, wzr, ne  // ne = any
  412a4c:	cbz	w3, 412a2c <nftw@plt+0xfeac>
  412a50:	cmp	w23, #0x0
  412a54:	b.le	412a74 <nftw@plt+0xfef4>
  412a58:	ldr	x2, [x25, #8]
  412a5c:	sub	x0, x19, x22
  412a60:	ldr	w1, [x25, #28]
  412a64:	ldr	w3, [x2, #200]
  412a68:	sub	w1, w1, w3
  412a6c:	cmp	x0, w1, sxtw
  412a70:	b.ge	412ba8 <nftw@plt+0x10028>  // b.tcont
  412a74:	mov	x1, x22
  412a78:	mov	x2, x19
  412a7c:	mov	x0, x25
  412a80:	bl	4128d0 <nftw@plt+0xfd50>
  412a84:	mov	x22, x20
  412a88:	cmp	x20, x19
  412a8c:	b.eq	412a1c <nftw@plt+0xfe9c>  // b.none
  412a90:	ldrb	w0, [x19]
  412a94:	ldrh	w1, [x21, w0, sxtw #1]
  412a98:	tbnz	w1, #0, 412b3c <nftw@plt+0xffbc>
  412a9c:	cmp	w0, #0xa
  412aa0:	b.eq	412ac8 <nftw@plt+0xff48>  // b.none
  412aa4:	mov	x22, x19
  412aa8:	cmp	x22, x20
  412aac:	b.ne	412a24 <nftw@plt+0xfea4>  // b.any
  412ab0:	ldp	x19, x20, [sp, #16]
  412ab4:	ldp	x21, x22, [sp, #32]
  412ab8:	ldp	x23, x24, [sp, #48]
  412abc:	ldp	x25, x26, [sp, #64]
  412ac0:	ldp	x29, x30, [sp], #80
  412ac4:	ret
  412ac8:	ldr	x0, [x25, #8]
  412acc:	ldr	x22, [x0, #176]
  412ad0:	ldp	x0, x1, [x22, #24]
  412ad4:	cmp	x1, x0
  412ad8:	b.eq	412c30 <nftw@plt+0x100b0>  // b.none
  412adc:	add	x1, x0, #0x1
  412ae0:	str	x1, [x22, #24]
  412ae4:	strb	w24, [x0]
  412ae8:	add	x19, x19, #0x1
  412aec:	strb	wzr, [x25, #65]
  412af0:	mov	x22, x19
  412af4:	ldr	x0, [x25, #8]
  412af8:	str	wzr, [x0, #200]
  412afc:	b	412aa8 <nftw@plt+0xff28>
  412b00:	cmp	w23, #0x0
  412b04:	b.le	412b24 <nftw@plt+0xffa4>
  412b08:	ldr	x2, [x25, #8]
  412b0c:	sub	x0, x20, x22
  412b10:	ldr	w1, [x25, #28]
  412b14:	ldr	w3, [x2, #200]
  412b18:	sub	w1, w1, w3
  412b1c:	cmp	x0, w1, sxtw
  412b20:	b.ge	412ba8 <nftw@plt+0x10028>  // b.tcont
  412b24:	mov	x1, x22
  412b28:	mov	x2, x20
  412b2c:	mov	x0, x25
  412b30:	mov	x22, x20
  412b34:	bl	4128d0 <nftw@plt+0xfd50>
  412b38:	b	412a1c <nftw@plt+0xfe9c>
  412b3c:	ldr	x1, [x25, #8]
  412b40:	ldr	w0, [x25, #40]
  412b44:	ldr	x22, [x1, #176]
  412b48:	cmp	w0, #0x0
  412b4c:	ldp	x0, x3, [x22, #24]
  412b50:	b.le	412b68 <nftw@plt+0xffe8>
  412b54:	ldr	w1, [x1, #200]
  412b58:	ldr	w2, [x25, #28]
  412b5c:	sub	w1, w2, w1
  412b60:	cmp	w1, #0x0
  412b64:	b.le	412be8 <nftw@plt+0x10068>
  412b68:	cmp	x3, x0
  412b6c:	b.eq	412bd4 <nftw@plt+0x10054>  // b.none
  412b70:	add	x1, x0, #0x1
  412b74:	str	x1, [x22, #24]
  412b78:	mov	w1, #0x20                  	// #32
  412b7c:	strb	w1, [x0]
  412b80:	ldr	x1, [x25, #8]
  412b84:	ldr	w0, [x1, #200]
  412b88:	add	w0, w0, #0x1
  412b8c:	str	w0, [x1, #200]
  412b90:	add	x1, x19, #0x1
  412b94:	cmp	x20, x1
  412b98:	b.eq	412c58 <nftw@plt+0x100d8>  // b.none
  412b9c:	ldrb	w0, [x19, #1]
  412ba0:	mov	x19, x1
  412ba4:	b	412a9c <nftw@plt+0xff1c>
  412ba8:	ldr	x26, [x2, #176]
  412bac:	ldp	x0, x1, [x26, #24]
  412bb0:	cmp	x1, x0
  412bb4:	b.eq	412c1c <nftw@plt+0x1009c>  // b.none
  412bb8:	add	x1, x0, #0x1
  412bbc:	str	x1, [x26, #24]
  412bc0:	strb	w24, [x0]
  412bc4:	strb	wzr, [x25, #65]
  412bc8:	ldr	x0, [x25, #8]
  412bcc:	str	wzr, [x0, #200]
  412bd0:	b	412a74 <nftw@plt+0xfef4>
  412bd4:	mov	x0, x22
  412bd8:	mov	x1, #0x1                   	// #1
  412bdc:	bl	461200 <_obstack_newchunk@@Base>
  412be0:	ldr	x0, [x22, #24]
  412be4:	b	412b70 <nftw@plt+0xfff0>
  412be8:	cmp	x3, x0
  412bec:	b.eq	412c44 <nftw@plt+0x100c4>  // b.none
  412bf0:	add	x1, x0, #0x1
  412bf4:	str	x1, [x22, #24]
  412bf8:	strb	w24, [x0]
  412bfc:	ldrh	w0, [x21, #64]
  412c00:	ldr	x1, [x25, #8]
  412c04:	strb	wzr, [x25, #65]
  412c08:	str	wzr, [x1, #200]
  412c0c:	tbnz	w0, #6, 412b90 <nftw@plt+0x10010>
  412c10:	ldr	x22, [x1, #176]
  412c14:	ldp	x0, x3, [x22, #24]
  412c18:	b	412b68 <nftw@plt+0xffe8>
  412c1c:	mov	x0, x26
  412c20:	mov	x1, #0x1                   	// #1
  412c24:	bl	461200 <_obstack_newchunk@@Base>
  412c28:	ldr	x0, [x26, #24]
  412c2c:	b	412bb8 <nftw@plt+0x10038>
  412c30:	mov	x0, x22
  412c34:	mov	x1, #0x1                   	// #1
  412c38:	bl	461200 <_obstack_newchunk@@Base>
  412c3c:	ldr	x0, [x22, #24]
  412c40:	b	412adc <nftw@plt+0xff5c>
  412c44:	mov	x0, x22
  412c48:	mov	x1, #0x1                   	// #1
  412c4c:	bl	461200 <_obstack_newchunk@@Base>
  412c50:	ldr	x0, [x22, #24]
  412c54:	b	412bf0 <nftw@plt+0x10070>
  412c58:	mov	x19, x20
  412c5c:	mov	x22, x19
  412c60:	b	412aa8 <nftw@plt+0xff28>
  412c64:	nop
  412c68:	stp	x29, x30, [sp, #-80]!
  412c6c:	cmn	x2, #0x1
  412c70:	mov	x29, sp
  412c74:	stp	x19, x20, [sp, #16]
  412c78:	mov	x20, x0
  412c7c:	mov	x19, x1
  412c80:	stp	x21, x22, [sp, #32]
  412c84:	b.eq	412d70 <nftw@plt+0x101f0>  // b.none
  412c88:	adrp	x22, 481000 <_obstack_memory_used@@Base+0x1fbb8>
  412c8c:	add	x21, x19, x2
  412c90:	add	x22, x22, #0xaf0
  412c94:	mov	x1, x19
  412c98:	stp	x23, x24, [sp, #48]
  412c9c:	adrp	x24, 473000 <_obstack_memory_used@@Base+0x11bb8>
  412ca0:	add	x23, sp, #0x44
  412ca4:	add	x24, x24, #0xf10
  412ca8:	ldrb	w2, [x19], #1
  412cac:	sub	x3, x19, #0x1
  412cb0:	ldrh	w0, [x22, w2, sxtw #1]
  412cb4:	tbnz	w0, #4, 412cec <nftw@plt+0x1016c>
  412cb8:	cmp	x1, x3
  412cbc:	b.cc	412d30 <nftw@plt+0x101b0>  // b.lo, b.ul, b.last
  412cc0:	mov	x1, x24
  412cc4:	add	x0, sp, #0x40
  412cc8:	bl	4025b0 <sprintf@plt>
  412ccc:	ldr	w0, [x20, #40]
  412cd0:	mov	x2, x23
  412cd4:	add	x1, sp, #0x40
  412cd8:	cmp	w0, #0x0
  412cdc:	b.le	412d20 <nftw@plt+0x101a0>
  412ce0:	mov	x0, x20
  412ce4:	bl	4129e8 <nftw@plt+0xfe68>
  412ce8:	mov	x1, x19
  412cec:	cmp	x21, x19
  412cf0:	b.ne	412ca8 <nftw@plt+0x10128>  // b.any
  412cf4:	ldp	x23, x24, [sp, #48]
  412cf8:	mov	x2, x21
  412cfc:	ldr	w0, [x20, #40]
  412d00:	cmp	w0, #0x0
  412d04:	mov	x0, x20
  412d08:	b.le	412d5c <nftw@plt+0x101dc>
  412d0c:	bl	4129e8 <nftw@plt+0xfe68>
  412d10:	ldp	x19, x20, [sp, #16]
  412d14:	ldp	x21, x22, [sp, #32]
  412d18:	ldp	x29, x30, [sp], #80
  412d1c:	ret
  412d20:	add	x1, sp, #0x40
  412d24:	mov	x0, x20
  412d28:	bl	4128d0 <nftw@plt+0xfd50>
  412d2c:	b	412ce8 <nftw@plt+0x10168>
  412d30:	ldr	w3, [x20, #40]
  412d34:	mov	x0, x20
  412d38:	sub	x2, x19, #0x2
  412d3c:	cmp	w3, #0x0
  412d40:	b.le	412d50 <nftw@plt+0x101d0>
  412d44:	bl	4129e8 <nftw@plt+0xfe68>
  412d48:	ldurb	w2, [x19, #-1]
  412d4c:	b	412cc0 <nftw@plt+0x10140>
  412d50:	bl	4128d0 <nftw@plt+0xfd50>
  412d54:	ldurb	w2, [x19, #-1]
  412d58:	b	412cc0 <nftw@plt+0x10140>
  412d5c:	bl	4128d0 <nftw@plt+0xfd50>
  412d60:	ldp	x19, x20, [sp, #16]
  412d64:	ldp	x21, x22, [sp, #32]
  412d68:	ldp	x29, x30, [sp], #80
  412d6c:	ret
  412d70:	mov	x0, x1
  412d74:	bl	4024f0 <strlen@plt>
  412d78:	mov	x2, x0
  412d7c:	cbnz	x0, 412c88 <nftw@plt+0x10108>
  412d80:	mov	x21, x19
  412d84:	mov	x1, x19
  412d88:	b	412cf8 <nftw@plt+0x10178>
  412d8c:	nop
  412d90:	stp	x29, x30, [sp, #-64]!
  412d94:	mov	x29, sp
  412d98:	stp	x23, x24, [sp, #48]
  412d9c:	ldr	x24, [x0, #8]
  412da0:	stp	x21, x22, [sp, #32]
  412da4:	mov	x21, x0
  412da8:	stp	x19, x20, [sp, #16]
  412dac:	ldp	x0, x23, [x24, #176]
  412db0:	cmp	x0, x24
  412db4:	b.ne	412e80 <nftw@plt+0x10300>  // b.any
  412db8:	ldr	w0, [x0, #200]
  412dbc:	cbnz	w0, 412e68 <nftw@plt+0x102e8>
  412dc0:	ldr	x19, [x23, #8]
  412dc4:	cbz	x19, 412e00 <nftw@plt+0x10280>
  412dc8:	add	x22, x23, #0x8
  412dcc:	mov	w20, #0x0                   	// #0
  412dd0:	mov	x0, x19
  412dd4:	bl	4024f0 <strlen@plt>
  412dd8:	ldr	w1, [x21, #40]
  412ddc:	add	x2, x19, x0
  412de0:	add	w20, w20, #0x1
  412de4:	mov	x0, x21
  412de8:	cmp	w1, #0x0
  412dec:	mov	x1, x19
  412df0:	b.le	412e58 <nftw@plt+0x102d8>
  412df4:	bl	4129e8 <nftw@plt+0xfe68>
  412df8:	ldr	x19, [x22, w20, uxtw #3]
  412dfc:	cbnz	x19, 412dd0 <nftw@plt+0x10250>
  412e00:	add	x0, x24, #0x58
  412e04:	ldr	x1, [x23]
  412e08:	str	x1, [x24, #184]
  412e0c:	ldr	x1, [x0, #8]
  412e10:	cmp	x1, x23
  412e14:	b.cs	412e40 <nftw@plt+0x102c0>  // b.hs, b.nlast
  412e18:	ldr	x1, [x0, #32]
  412e1c:	cmp	x1, x23
  412e20:	b.ls	412e40 <nftw@plt+0x102c0>  // b.plast
  412e24:	dup	v0.2d, x23
  412e28:	ldp	x19, x20, [sp, #16]
  412e2c:	ldp	x21, x22, [sp, #32]
  412e30:	stur	q0, [x24, #104]
  412e34:	ldp	x23, x24, [sp, #48]
  412e38:	ldp	x29, x30, [sp], #64
  412e3c:	ret
  412e40:	mov	x1, x23
  412e44:	ldp	x19, x20, [sp, #16]
  412e48:	ldp	x21, x22, [sp, #32]
  412e4c:	ldp	x23, x24, [sp, #48]
  412e50:	ldp	x29, x30, [sp], #64
  412e54:	b	461398 <_obstack_free@@Base>
  412e58:	bl	4128d0 <nftw@plt+0xfd50>
  412e5c:	ldr	x19, [x22, w20, uxtw #3]
  412e60:	cbnz	x19, 412dd0 <nftw@plt+0x10250>
  412e64:	b	412e00 <nftw@plt+0x10280>
  412e68:	adrp	x2, 473000 <_obstack_memory_used@@Base+0x11bb8>
  412e6c:	adrp	x0, 473000 <_obstack_memory_used@@Base+0x11bb8>
  412e70:	add	x2, x2, #0xf18
  412e74:	add	x0, x0, #0xef0
  412e78:	mov	w1, #0x596                 	// #1430
  412e7c:	bl	402bf0 <nftw@plt+0x70>
  412e80:	adrp	x2, 473000 <_obstack_memory_used@@Base+0x11bb8>
  412e84:	adrp	x0, 473000 <_obstack_memory_used@@Base+0x11bb8>
  412e88:	add	x2, x2, #0xf18
  412e8c:	add	x0, x0, #0xef0
  412e90:	mov	w1, #0x595                 	// #1429
  412e94:	bl	402bf0 <nftw@plt+0x70>
  412e98:	stp	x29, x30, [sp, #-32]!
  412e9c:	mov	x29, sp
  412ea0:	stp	x19, x20, [sp, #16]
  412ea4:	ldr	x20, [x0, #8]
  412ea8:	ldr	x19, [x20, #176]
  412eac:	ldp	x0, x1, [x19, #24]
  412eb0:	cmp	x1, x0
  412eb4:	b.eq	412ed8 <nftw@plt+0x10358>  // b.none
  412eb8:	add	x1, x0, #0x1
  412ebc:	str	x1, [x19, #24]
  412ec0:	strb	wzr, [x0]
  412ec4:	ldr	x0, [x20, #176]
  412ec8:	ldp	x19, x20, [sp, #16]
  412ecc:	ldp	x29, x30, [sp], #32
  412ed0:	ldr	x0, [x0, #16]
  412ed4:	ret
  412ed8:	mov	x0, x19
  412edc:	mov	x1, #0x1                   	// #1
  412ee0:	bl	461200 <_obstack_newchunk@@Base>
  412ee4:	ldr	x0, [x19, #24]
  412ee8:	add	x1, x0, #0x1
  412eec:	str	x1, [x19, #24]
  412ef0:	strb	wzr, [x0]
  412ef4:	ldr	x0, [x20, #176]
  412ef8:	ldp	x19, x20, [sp, #16]
  412efc:	ldp	x29, x30, [sp], #32
  412f00:	ldr	x0, [x0, #16]
  412f04:	ret
  412f08:	ldr	x0, [x0, #8]
  412f0c:	ldr	x0, [x0, #176]
  412f10:	ldp	x1, x0, [x0, #16]
  412f14:	cmp	x1, x0
  412f18:	sub	x0, x0, #0x1
  412f1c:	csel	x0, x0, xzr, ne  // ne = any
  412f20:	ret
  412f24:	nop
  412f28:	ldr	x2, [x0, #8]
  412f2c:	ldr	w1, [x0, #28]
  412f30:	ldr	w0, [x2, #200]
  412f34:	sub	w0, w1, w0
  412f38:	ret
  412f3c:	nop
  412f40:	stp	x29, x30, [sp, #-32]!
  412f44:	mov	x29, sp
  412f48:	stp	x19, x20, [sp, #16]
  412f4c:	mov	x19, x0
  412f50:	ldr	x0, [x0, #8]
  412f54:	ldr	x20, [x0, #176]
  412f58:	ldp	x0, x1, [x20, #24]
  412f5c:	cmp	x1, x0
  412f60:	b.eq	412f8c <nftw@plt+0x1040c>  // b.none
  412f64:	add	x1, x0, #0x1
  412f68:	str	x1, [x20, #24]
  412f6c:	mov	w1, #0xa                   	// #10
  412f70:	strb	w1, [x0]
  412f74:	strb	wzr, [x19, #65]
  412f78:	ldr	x0, [x19, #8]
  412f7c:	ldp	x19, x20, [sp, #16]
  412f80:	str	wzr, [x0, #200]
  412f84:	ldp	x29, x30, [sp], #32
  412f88:	ret
  412f8c:	mov	x0, x20
  412f90:	mov	x1, #0x1                   	// #1
  412f94:	bl	461200 <_obstack_newchunk@@Base>
  412f98:	ldr	x0, [x20, #24]
  412f9c:	b	412f64 <nftw@plt+0x103e4>
  412fa0:	stp	x29, x30, [sp, #-48]!
  412fa4:	mov	x29, sp
  412fa8:	str	x21, [sp, #32]
  412fac:	mov	w21, w1
  412fb0:	ldr	x1, [x0, #8]
  412fb4:	stp	x19, x20, [sp, #16]
  412fb8:	mov	x19, x0
  412fbc:	ldr	w0, [x0, #40]
  412fc0:	ldr	x20, [x1, #176]
  412fc4:	cmp	w0, #0x0
  412fc8:	ldp	x0, x3, [x20, #24]
  412fcc:	b.le	412fe4 <nftw@plt+0x10464>
  412fd0:	ldr	w1, [x1, #200]
  412fd4:	ldr	w2, [x19, #28]
  412fd8:	sub	w1, w2, w1
  412fdc:	cmp	w1, #0x0
  412fe0:	b.le	413018 <nftw@plt+0x10498>
  412fe4:	cmp	x3, x0
  412fe8:	b.eq	41305c <nftw@plt+0x104dc>  // b.none
  412fec:	add	x1, x0, #0x1
  412ff0:	str	x1, [x20, #24]
  412ff4:	strb	w21, [x0]
  412ff8:	ldr	x1, [x19, #8]
  412ffc:	ldr	w0, [x1, #200]
  413000:	add	w0, w0, #0x1
  413004:	str	w0, [x1, #200]
  413008:	ldp	x19, x20, [sp, #16]
  41300c:	ldr	x21, [sp, #32]
  413010:	ldp	x29, x30, [sp], #48
  413014:	ret
  413018:	cmp	x3, x0
  41301c:	b.eq	413070 <nftw@plt+0x104f0>  // b.none
  413020:	add	x1, x0, #0x1
  413024:	str	x1, [x20, #24]
  413028:	mov	w1, #0xa                   	// #10
  41302c:	strb	w1, [x0]
  413030:	and	x1, x21, #0xff
  413034:	adrp	x0, 481000 <_obstack_memory_used@@Base+0x1fbb8>
  413038:	add	x0, x0, #0xaf0
  41303c:	strb	wzr, [x19, #65]
  413040:	ldr	x2, [x19, #8]
  413044:	ldrh	w0, [x0, x1, lsl #1]
  413048:	str	wzr, [x2, #200]
  41304c:	tbnz	w0, #6, 413008 <nftw@plt+0x10488>
  413050:	ldr	x20, [x2, #176]
  413054:	ldp	x0, x3, [x20, #24]
  413058:	b	412fe4 <nftw@plt+0x10464>
  41305c:	mov	x0, x20
  413060:	mov	x1, #0x1                   	// #1
  413064:	bl	461200 <_obstack_newchunk@@Base>
  413068:	ldr	x0, [x20, #24]
  41306c:	b	412fec <nftw@plt+0x1046c>
  413070:	mov	x0, x20
  413074:	mov	x1, #0x1                   	// #1
  413078:	bl	461200 <_obstack_newchunk@@Base>
  41307c:	ldr	x0, [x20, #24]
  413080:	b	413020 <nftw@plt+0x104a0>
  413084:	nop
  413088:	sub	sp, sp, #0x1c0
  41308c:	stp	x29, x30, [sp, #16]
  413090:	add	x29, sp, #0x10
  413094:	stp	x19, x20, [sp, #32]
  413098:	mov	x19, x0
  41309c:	ldr	x0, [x0, #8]
  4130a0:	stp	x25, x26, [sp, #80]
  4130a4:	add	x25, x0, #0x58
  4130a8:	str	x0, [sp, #144]
  4130ac:	ldr	x20, [x25, #32]
  4130b0:	stp	x21, x22, [sp, #48]
  4130b4:	ldr	x0, [x25, #24]
  4130b8:	stp	x23, x24, [sp, #64]
  4130bc:	stp	x27, x28, [sp, #96]
  4130c0:	str	x1, [sp, #120]
  4130c4:	sub	x1, x20, x0
  4130c8:	cmp	x1, #0x1e7
  4130cc:	b.ls	414298 <nftw@plt+0x11718>  // b.plast
  4130d0:	ldr	x1, [x25, #16]
  4130d4:	add	x0, x0, #0x1e8
  4130d8:	cmp	x0, x1
  4130dc:	b.eq	4142b8 <nftw@plt+0x11738>  // b.none
  4130e0:	ldr	x24, [x25, #48]
  4130e4:	ldr	x2, [x25, #8]
  4130e8:	add	x0, x0, x24
  4130ec:	bic	x24, x0, x24
  4130f0:	str	x24, [x25, #24]
  4130f4:	sub	x0, x24, x2
  4130f8:	sub	x2, x20, x2
  4130fc:	cmp	x0, x2
  413100:	b.ls	414010 <nftw@plt+0x11490>  // b.plast
  413104:	ldr	x2, [sp, #144]
  413108:	add	x22, sp, #0xd0
  41310c:	add	x27, x1, #0x8
  413110:	ldr	x0, [x2, #184]
  413114:	stp	x20, x20, [x25, #16]
  413118:	str	x0, [x1]
  41311c:	mov	x0, x22
  413120:	str	x1, [x2, #184]
  413124:	mov	x2, #0xf0                  	// #240
  413128:	mov	w1, #0x0                   	// #0
  41312c:	bl	4026f0 <memset@plt>
  413130:	ldr	x0, [sp, #120]
  413134:	ldr	x28, [x0]
  413138:	ldrb	w0, [x28]
  41313c:	cbz	w0, 414410 <nftw@plt+0x11890>
  413140:	adrp	x1, 473000 <_obstack_memory_used@@Base+0x11bb8>
  413144:	add	x1, x1, #0xb98
  413148:	adrp	x26, 481000 <_obstack_memory_used@@Base+0x1fbb8>
  41314c:	str	wzr, [sp, #172]
  413150:	str	x1, [sp, #176]
  413154:	add	x1, x26, #0xaf0
  413158:	str	x1, [sp, #128]
  41315c:	cmp	w0, #0x25
  413160:	str	wzr, [sp, #184]
  413164:	add	x23, x28, #0x1
  413168:	mov	w24, #0x0                   	// #0
  41316c:	mov	w21, #0x0                   	// #0
  413170:	b.eq	4131ac <nftw@plt+0x1062c>  // b.none
  413174:	nop
  413178:	ldp	x0, x1, [x25, #24]
  41317c:	cmp	x1, x0
  413180:	b.eq	413390 <nftw@plt+0x10810>  // b.none
  413184:	add	x1, x0, #0x1
  413188:	str	x1, [x25, #24]
  41318c:	ldrb	w1, [x28]
  413190:	strb	w1, [x0]
  413194:	ldrb	w0, [x28, #1]
  413198:	cbz	w0, 413260 <nftw@plt+0x106e0>
  41319c:	mov	x28, x23
  4131a0:	cmp	w0, #0x25
  4131a4:	add	x23, x28, #0x1
  4131a8:	b.ne	413178 <nftw@plt+0x105f8>  // b.any
  4131ac:	ldrb	w0, [x28, #1]
  4131b0:	cmp	w0, #0x3e
  4131b4:	b.eq	41391c <nftw@plt+0x10d9c>  // b.none
  4131b8:	b.hi	4133a4 <nftw@plt+0x10824>  // b.pmore
  4131bc:	cmp	w0, #0x27
  4131c0:	b.eq	413958 <nftw@plt+0x10dd8>  // b.none
  4131c4:	b.ls	4133f0 <nftw@plt+0x10870>  // b.plast
  4131c8:	cmp	w0, #0x3c
  4131cc:	b.ne	413a78 <nftw@plt+0x10ef8>  // b.any
  4131d0:	adrp	x20, 4a4000 <_obstack_memory_used@@Base+0x42bb8>
  4131d4:	ldr	x26, [x20, #1304]
  4131d8:	mov	x0, x26
  4131dc:	bl	4024f0 <strlen@plt>
  4131e0:	mov	x23, x0
  4131e4:	ldp	x0, x2, [x25, #24]
  4131e8:	sub	x2, x2, x0
  4131ec:	cmp	x23, x2
  4131f0:	b.hi	413f7c <nftw@plt+0x113fc>  // b.pmore
  4131f4:	mov	x1, x26
  4131f8:	mov	x2, x23
  4131fc:	bl	402490 <memcpy@plt>
  413200:	ldr	x4, [x25, #24]
  413204:	mov	x2, #0x5                   	// #5
  413208:	ldrb	w0, [x19, #67]
  41320c:	ldr	x1, [sp, #176]
  413210:	add	x3, x4, x23
  413214:	str	x3, [x25, #24]
  413218:	bl	40be18 <nftw@plt+0x9298>
  41321c:	mov	x23, x0
  413220:	bl	4024f0 <strlen@plt>
  413224:	mov	x20, x0
  413228:	ldp	x0, x1, [x25, #24]
  41322c:	sub	x1, x1, x0
  413230:	cmp	x20, x1
  413234:	b.hi	4133dc <nftw@plt+0x1085c>  // b.pmore
  413238:	mov	x1, x23
  41323c:	mov	x2, x20
  413240:	bl	402490 <memcpy@plt>
  413244:	add	x23, x28, #0x2
  413248:	ldr	x0, [x25, #24]
  41324c:	add	x0, x0, x20
  413250:	str	x0, [x25, #24]
  413254:	ldrb	w0, [x23]
  413258:	cbnz	w0, 41319c <nftw@plt+0x1061c>
  41325c:	nop
  413260:	ldp	x0, x1, [x25, #24]
  413264:	cmp	x1, x0
  413268:	b.eq	414414 <nftw@plt+0x11894>  // b.none
  41326c:	add	x1, x0, #0x1
  413270:	str	x1, [x25, #24]
  413274:	strb	wzr, [x0]
  413278:	cmp	w21, #0x3b
  41327c:	b.hi	41482c <nftw@plt+0x11cac>  // b.pmore
  413280:	add	w3, w21, #0x1
  413284:	add	x21, x27, w21, uxtw #3
  413288:	ldr	x20, [sp, #208]
  41328c:	lsl	x3, x3, #3
  413290:	ldp	x4, x2, [x25, #16]
  413294:	cmp	x2, x4
  413298:	b.eq	4142dc <nftw@plt+0x1175c>  // b.none
  41329c:	ldr	x0, [x25, #48]
  4132a0:	ldr	x1, [x25, #8]
  4132a4:	add	x2, x2, x0
  4132a8:	ldr	x5, [x25, #32]
  4132ac:	bic	x0, x2, x0
  4132b0:	str	x0, [x25, #24]
  4132b4:	sub	x2, x0, x1
  4132b8:	sub	x1, x5, x1
  4132bc:	cmp	x2, x1
  4132c0:	b.ls	4132cc <nftw@plt+0x1074c>  // b.plast
  4132c4:	mov	x0, x5
  4132c8:	str	x5, [x25, #24]
  4132cc:	str	x0, [x25, #16]
  4132d0:	mov	x0, #0x1                   	// #1
  4132d4:	ldr	x1, [sp, #144]
  4132d8:	str	x4, [x21]
  4132dc:	str	xzr, [x27, x3]
  4132e0:	mov	w21, #0x0                   	// #0
  4132e4:	str	x25, [x1, #176]
  4132e8:	ldur	x1, [x19, #36]
  4132ec:	stur	x0, [x19, #36]
  4132f0:	str	x1, [sp, #160]
  4132f4:	cbz	x20, 4138b4 <nftw@plt+0x10d34>
  4132f8:	adrp	x0, 481000 <_obstack_memory_used@@Base+0x1fbb8>
  4132fc:	add	x0, x0, #0xaf0
  413300:	str	x0, [sp, #152]
  413304:	nop
  413308:	ldr	x26, [x20]
  41330c:	strb	wzr, [sp, #199]
  413310:	mov	w24, #0x0                   	// #0
  413314:	mov	w23, #0x0                   	// #0
  413318:	mov	w28, #0x0                   	// #0
  41331c:	mov	w27, #0x0                   	// #0
  413320:	ldrb	w0, [x26]
  413324:	mov	w1, #0x1                   	// #1
  413328:	cmp	w0, #0x6c
  41332c:	b.eq	41335c <nftw@plt+0x107dc>  // b.none
  413330:	b.hi	413370 <nftw@plt+0x107f0>  // b.pmore
  413334:	cmp	w0, #0x23
  413338:	b.eq	413754 <nftw@plt+0x10bd4>  // b.none
  41333c:	cmp	w0, #0x2b
  413340:	b.ne	413420 <nftw@plt+0x108a0>  // b.any
  413344:	cbnz	w23, 414a0c <nftw@plt+0x11e8c>
  413348:	add	x26, x26, #0x1
  41334c:	mov	w23, #0x1                   	// #1
  413350:	ldrb	w0, [x26]
  413354:	cmp	w0, #0x6c
  413358:	b.ne	413330 <nftw@plt+0x107b0>  // b.any
  41335c:	cmp	w27, #0x1
  413360:	b.gt	41497c <nftw@plt+0x11dfc>
  413364:	add	w27, w27, #0x1
  413368:	add	x26, x26, #0x1
  41336c:	b	413350 <nftw@plt+0x107d0>
  413370:	cmp	w0, #0x71
  413374:	b.eq	413740 <nftw@plt+0x10bc0>  // b.none
  413378:	cmp	w0, #0x77
  41337c:	b.ne	413420 <nftw@plt+0x108a0>  // b.any
  413380:	cbnz	w28, 4149f4 <nftw@plt+0x11e74>
  413384:	add	x26, x26, #0x1
  413388:	mov	w28, #0x1                   	// #1
  41338c:	b	413350 <nftw@plt+0x107d0>
  413390:	mov	x0, x25
  413394:	mov	x1, #0x1                   	// #1
  413398:	bl	461200 <_obstack_newchunk@@Base>
  41339c:	ldr	x0, [x25, #24]
  4133a0:	b	413184 <nftw@plt+0x10604>
  4133a4:	cmp	w0, #0x52
  4133a8:	b.eq	413a6c <nftw@plt+0x10eec>  // b.none
  4133ac:	cmp	w0, #0x6d
  4133b0:	b.ne	413a78 <nftw@plt+0x10ef8>  // b.any
  4133b4:	ldr	x0, [sp, #120]
  4133b8:	ldr	w0, [x0, #16]
  4133bc:	bl	4616e0 <_obstack_memory_used@@Base+0x298>
  4133c0:	mov	x23, x0
  4133c4:	bl	4024f0 <strlen@plt>
  4133c8:	mov	x20, x0
  4133cc:	ldp	x0, x1, [x25, #24]
  4133d0:	sub	x1, x1, x0
  4133d4:	cmp	x20, x1
  4133d8:	b.ls	413238 <nftw@plt+0x106b8>  // b.plast
  4133dc:	mov	x0, x25
  4133e0:	mov	x1, x20
  4133e4:	bl	461200 <_obstack_newchunk@@Base>
  4133e8:	ldr	x0, [x25, #24]
  4133ec:	b	413238 <nftw@plt+0x106b8>
  4133f0:	cbz	w0, 4149c4 <nftw@plt+0x11e44>
  4133f4:	cmp	w0, #0x25
  4133f8:	b.ne	413a78 <nftw@plt+0x10ef8>  // b.any
  4133fc:	ldp	x0, x1, [x25, #24]
  413400:	cmp	x1, x0
  413404:	b.eq	4142c8 <nftw@plt+0x11748>  // b.none
  413408:	add	x1, x0, #0x1
  41340c:	str	x1, [x25, #24]
  413410:	add	x23, x28, #0x2
  413414:	mov	w1, #0x25                  	// #37
  413418:	strb	w1, [x0]
  41341c:	b	413254 <nftw@plt+0x106d4>
  413420:	cmp	w27, #0x0
  413424:	ccmp	w28, #0x0, #0x4, ne  // ne = any
  413428:	b.ne	41488c <nftw@plt+0x11d0c>  // b.any
  41342c:	ldrb	w1, [sp, #199]
  413430:	cbnz	w1, 41399c <nftw@plt+0x10e1c>
  413434:	cmp	w0, #0x6f
  413438:	b.eq	413a18 <nftw@plt+0x10e98>  // b.none
  41343c:	b.hi	413764 <nftw@plt+0x10be4>  // b.pmore
  413440:	cmp	w0, #0x63
  413444:	b.eq	413e1c <nftw@plt+0x1129c>  // b.none
  413448:	b.ls	4135d8 <nftw@plt+0x10a58>  // b.plast
  41344c:	cmp	w0, #0x66
  413450:	b.eq	413d04 <nftw@plt+0x11184>  // b.none
  413454:	cmp	w0, #0x69
  413458:	b.ne	413580 <nftw@plt+0x10a00>  // b.any
  41345c:	cbnz	w28, 4141b8 <nftw@plt+0x11638>
  413460:	cmp	w27, #0x1
  413464:	b.eq	4145d8 <nftw@plt+0x11a58>  // b.none
  413468:	cmp	w27, #0x2
  41346c:	b.eq	41459c <nftw@plt+0x11a1c>  // b.none
  413470:	cbnz	w27, 41384c <nftw@plt+0x10ccc>
  413474:	ldr	x0, [sp, #120]
  413478:	ldr	x2, [x0, #8]
  41347c:	ldr	x0, [x19, #8]
  413480:	ldr	w3, [x2, #24]
  413484:	add	x0, x0, #0xcc
  413488:	ldr	x1, [x2]
  41348c:	tbnz	w3, #31, 4146d8 <nftw@plt+0x11b58>
  413490:	add	x3, x1, #0xb
  413494:	and	x3, x3, #0xfffffffffffffff8
  413498:	str	x3, [x2]
  41349c:	ldr	w2, [x1]
  4134a0:	adrp	x1, 473000 <_obstack_memory_used@@Base+0x11bb8>
  4134a4:	add	x1, x1, #0x1f8
  4134a8:	bl	4025b0 <sprintf@plt>
  4134ac:	ldr	x24, [x19, #8]
  4134b0:	add	x24, x24, #0xcc
  4134b4:	mov	x0, x24
  4134b8:	bl	4024f0 <strlen@plt>
  4134bc:	add	x2, x24, x0
  4134c0:	ldr	w1, [x19, #40]
  4134c4:	mov	x0, x19
  4134c8:	cmp	w1, #0x0
  4134cc:	mov	x1, x24
  4134d0:	b.gt	413848 <nftw@plt+0x10cc8>
  4134d4:	bl	4128d0 <nftw@plt+0xfd50>
  4134d8:	ldrb	w0, [sp, #199]
  4134dc:	cbz	w0, 413854 <nftw@plt+0x10cd4>
  4134e0:	ldrb	w0, [x19, #67]
  4134e4:	bl	40bea8 <nftw@plt+0x9328>
  4134e8:	mov	x24, x0
  4134ec:	bl	4024f0 <strlen@plt>
  4134f0:	add	x2, x24, x0
  4134f4:	ldr	w1, [x19, #40]
  4134f8:	mov	x0, x19
  4134fc:	cmp	w1, #0x0
  413500:	mov	x1, x24
  413504:	b.le	413c58 <nftw@plt+0x110d8>
  413508:	bl	4129e8 <nftw@plt+0xfe68>
  41350c:	adrp	x0, 4a4000 <_obstack_memory_used@@Base+0x42bb8>
  413510:	ldr	x24, [x0, #1312]
  413514:	mov	x0, x24
  413518:	bl	4024f0 <strlen@plt>
  41351c:	ldr	w1, [x19, #40]
  413520:	add	x2, x24, x0
  413524:	mov	x0, x19
  413528:	cmp	w1, #0x0
  41352c:	mov	x1, x24
  413530:	b.le	413c50 <nftw@plt+0x110d0>
  413534:	bl	4129e8 <nftw@plt+0xfe68>
  413538:	ldp	x0, x1, [x25, #24]
  41353c:	cmp	x1, x0
  413540:	b.ne	413860 <nftw@plt+0x10ce0>  // b.any
  413544:	nop
  413548:	mov	x0, x25
  41354c:	mov	x1, #0x1                   	// #1
  413550:	bl	461200 <_obstack_newchunk@@Base>
  413554:	ldr	x0, [x25, #24]
  413558:	add	x1, x0, #0x1
  41355c:	str	x1, [x25, #24]
  413560:	strb	wzr, [x0]
  413564:	ldp	x3, x2, [x25, #16]
  413568:	cmp	x2, x3
  41356c:	b.ne	413878 <nftw@plt+0x10cf8>  // b.any
  413570:	ldrb	w0, [x25, #80]
  413574:	orr	w0, w0, #0x2
  413578:	strb	w0, [x25, #80]
  41357c:	b	413878 <nftw@plt+0x10cf8>
  413580:	cmp	w0, #0x64
  413584:	b.eq	41345c <nftw@plt+0x108dc>  // b.none
  413588:	ldr	x9, [x19, #48]
  41358c:	cbz	x9, 414814 <nftw@plt+0x11c94>
  413590:	ldr	x1, [sp, #120]
  413594:	str	x20, [sp]
  413598:	mov	w6, w24
  41359c:	mov	w5, w23
  4135a0:	mov	w4, w28
  4135a4:	mov	w3, w27
  4135a8:	mov	x2, x26
  4135ac:	add	x7, sp, #0xc7
  4135b0:	mov	x0, x19
  4135b4:	blr	x9
  4135b8:	tst	w0, #0xff
  4135bc:	b.ne	41384c <nftw@plt+0x10ccc>  // b.any
  4135c0:	adrp	x2, 473000 <_obstack_memory_used@@Base+0x11bb8>
  4135c4:	adrp	x0, 473000 <_obstack_memory_used@@Base+0x11bb8>
  4135c8:	add	x2, x2, #0xf38
  4135cc:	add	x0, x0, #0xef0
  4135d0:	mov	w1, #0x571                 	// #1393
  4135d4:	bl	402bf0 <nftw@plt+0x70>
  4135d8:	cmp	w0, #0x2e
  4135dc:	b.eq	413c74 <nftw@plt+0x110f4>  // b.none
  4135e0:	cmp	w0, #0x5a
  4135e4:	b.ne	413588 <nftw@plt+0x10a08>  // b.any
  4135e8:	ldr	x0, [sp, #120]
  4135ec:	ldr	x1, [x0, #8]
  4135f0:	ldr	w2, [x1, #24]
  4135f4:	ldr	x3, [x1]
  4135f8:	tbnz	w2, #31, 4140e0 <nftw@plt+0x11560>
  4135fc:	add	x0, x3, #0xf
  413600:	and	x0, x0, #0xfffffffffffffff8
  413604:	str	x0, [x1]
  413608:	ldr	x2, [x3]
  41360c:	str	x2, [sp, #128]
  413610:	add	x2, x0, #0xb
  413614:	and	x2, x2, #0xfffffffffffffff8
  413618:	str	x2, [x1]
  41361c:	ldr	w26, [x0]
  413620:	cbz	w26, 41384c <nftw@plt+0x10ccc>
  413624:	adrp	x24, 473000 <_obstack_memory_used@@Base+0x11bb8>
  413628:	sub	w28, w26, #0x1
  41362c:	add	x24, x24, #0xf90
  413630:	mov	x23, #0x0                   	// #0
  413634:	b	413650 <nftw@plt+0x10ad0>
  413638:	bl	4129e8 <nftw@plt+0xfe68>
  41363c:	cmp	w28, w23
  413640:	b.hi	41369c <nftw@plt+0x10b1c>  // b.pmore
  413644:	add	x23, x23, #0x1
  413648:	cmp	w26, w23
  41364c:	b.ls	41384c <nftw@plt+0x10ccc>  // b.plast
  413650:	ldr	x0, [sp, #128]
  413654:	mov	x1, x24
  413658:	ldr	w2, [x0, x23, lsl #2]
  41365c:	ldr	x0, [x19, #8]
  413660:	add	x0, x0, #0xcc
  413664:	bl	4025b0 <sprintf@plt>
  413668:	ldr	x1, [x19, #8]
  41366c:	add	x27, x1, #0xcc
  413670:	mov	x0, x27
  413674:	bl	4024f0 <strlen@plt>
  413678:	ldr	w4, [x19, #40]
  41367c:	add	x2, x27, x0
  413680:	mov	x1, x27
  413684:	mov	x0, x19
  413688:	cmp	w4, #0x0
  41368c:	b.gt	413638 <nftw@plt+0x10ab8>
  413690:	bl	4128d0 <nftw@plt+0xfd50>
  413694:	cmp	w28, w23
  413698:	b.ls	413644 <nftw@plt+0x10ac4>  // b.plast
  41369c:	ldr	x2, [x19, #8]
  4136a0:	ldr	w1, [x19, #40]
  4136a4:	ldr	x0, [x2, #176]
  4136a8:	cmp	w1, #0x0
  4136ac:	ldp	x1, x5, [x0, #24]
  4136b0:	b.le	4136c8 <nftw@plt+0x10b48>
  4136b4:	ldr	w2, [x2, #200]
  4136b8:	ldr	w4, [x19, #28]
  4136bc:	sub	w2, w4, w2
  4136c0:	cmp	w2, #0x0
  4136c4:	b.le	414428 <nftw@plt+0x118a8>
  4136c8:	cmp	x5, x1
  4136cc:	b.eq	414394 <nftw@plt+0x11814>  // b.none
  4136d0:	add	x2, x1, #0x1
  4136d4:	str	x2, [x0, #24]
  4136d8:	mov	w0, #0x2c                  	// #44
  4136dc:	strb	w0, [x1]
  4136e0:	ldr	x0, [x19, #8]
  4136e4:	ldr	w2, [x0, #200]
  4136e8:	add	w2, w2, #0x1
  4136ec:	str	w2, [x0, #200]
  4136f0:	ldr	x0, [x0, #176]
  4136f4:	ldr	w1, [x19, #40]
  4136f8:	cmp	w1, #0x0
  4136fc:	ldp	x1, x5, [x0, #24]
  413700:	b.le	413714 <nftw@plt+0x10b94>
  413704:	ldr	w4, [x19, #28]
  413708:	sub	w2, w4, w2
  41370c:	cmp	w2, #0x0
  413710:	b.le	4143d4 <nftw@plt+0x11854>
  413714:	cmp	x5, x1
  413718:	b.eq	41437c <nftw@plt+0x117fc>  // b.none
  41371c:	add	x2, x1, #0x1
  413720:	str	x2, [x0, #24]
  413724:	mov	w0, #0x20                  	// #32
  413728:	strb	w0, [x1]
  41372c:	ldr	x1, [x19, #8]
  413730:	ldr	w0, [x1, #200]
  413734:	add	w0, w0, #0x1
  413738:	str	w0, [x1, #200]
  41373c:	b	413644 <nftw@plt+0x10ac4>
  413740:	ldrb	w0, [sp, #199]
  413744:	cbnz	w0, 414964 <nftw@plt+0x11de4>
  413748:	add	x26, x26, #0x1
  41374c:	strb	w1, [sp, #199]
  413750:	b	413350 <nftw@plt+0x107d0>
  413754:	cbnz	w24, 4148ec <nftw@plt+0x11d6c>
  413758:	add	x26, x26, #0x1
  41375c:	mov	w24, #0x1                   	// #1
  413760:	b	413350 <nftw@plt+0x107d0>
  413764:	cmp	w0, #0x73
  413768:	b.eq	413d50 <nftw@plt+0x111d0>  // b.none
  41376c:	b.ls	4137d4 <nftw@plt+0x10c54>  // b.plast
  413770:	cmp	w0, #0x75
  413774:	b.eq	413d8c <nftw@plt+0x1120c>  // b.none
  413778:	cmp	w0, #0x78
  41377c:	b.ne	413588 <nftw@plt+0x10a08>  // b.any
  413780:	cbnz	w28, 41425c <nftw@plt+0x116dc>
  413784:	cmp	w27, #0x1
  413788:	b.eq	414614 <nftw@plt+0x11a94>  // b.none
  41378c:	cmp	w27, #0x2
  413790:	b.eq	414560 <nftw@plt+0x119e0>  // b.none
  413794:	cbnz	w27, 41384c <nftw@plt+0x10ccc>
  413798:	ldr	x0, [sp, #120]
  41379c:	ldr	x2, [x0, #8]
  4137a0:	ldr	x0, [x19, #8]
  4137a4:	ldr	w3, [x2, #24]
  4137a8:	add	x0, x0, #0xcc
  4137ac:	ldr	x1, [x2]
  4137b0:	tbnz	w3, #31, 414710 <nftw@plt+0x11b90>
  4137b4:	add	x3, x1, #0xb
  4137b8:	and	x3, x3, #0xfffffffffffffff8
  4137bc:	str	x3, [x2]
  4137c0:	ldr	w2, [x1]
  4137c4:	adrp	x1, 473000 <_obstack_memory_used@@Base+0x11bb8>
  4137c8:	add	x1, x1, #0xfa0
  4137cc:	bl	4025b0 <sprintf@plt>
  4137d0:	b	413d40 <nftw@plt+0x111c0>
  4137d4:	cmp	w0, #0x70
  4137d8:	b.eq	413de0 <nftw@plt+0x11260>  // b.none
  4137dc:	cmp	w0, #0x72
  4137e0:	b.ne	413588 <nftw@plt+0x10a08>  // b.any
  4137e4:	ldr	x0, [sp, #120]
  4137e8:	ldrb	w26, [x19, #67]
  4137ec:	ldr	x0, [x0, #8]
  4137f0:	ldr	w2, [x0, #24]
  4137f4:	ldr	x1, [x0]
  4137f8:	tbnz	w2, #31, 4140c4 <nftw@plt+0x11544>
  4137fc:	add	x2, x1, #0xf
  413800:	and	x2, x2, #0xfffffffffffffff8
  413804:	str	x2, [x0]
  413808:	ldr	x24, [x1]
  41380c:	mov	x0, x24
  413810:	bl	4024f0 <strlen@plt>
  413814:	mov	x1, x24
  413818:	mov	x2, x0
  41381c:	mov	w0, w26
  413820:	bl	40be18 <nftw@plt+0x9298>
  413824:	mov	x24, x0
  413828:	bl	4024f0 <strlen@plt>
  41382c:	add	x2, x24, x0
  413830:	ldr	w1, [x19, #40]
  413834:	mov	x0, x19
  413838:	cmp	w1, #0x0
  41383c:	mov	x1, x24
  413840:	b.le	4134d4 <nftw@plt+0x10954>
  413844:	nop
  413848:	bl	4129e8 <nftw@plt+0xfe68>
  41384c:	ldrb	w0, [sp, #199]
  413850:	cbnz	w0, 4134e0 <nftw@plt+0x10960>
  413854:	ldp	x0, x1, [x25, #24]
  413858:	cmp	x1, x0
  41385c:	b.eq	413548 <nftw@plt+0x109c8>  // b.none
  413860:	add	x1, x0, #0x1
  413864:	str	x1, [x25, #24]
  413868:	strb	wzr, [x0]
  41386c:	ldp	x3, x2, [x25, #16]
  413870:	cmp	x2, x3
  413874:	b.eq	413570 <nftw@plt+0x109f0>  // b.none
  413878:	ldr	x0, [x25, #48]
  41387c:	add	w21, w21, #0x1
  413880:	ldr	x1, [x25, #8]
  413884:	add	x2, x2, x0
  413888:	ldr	x4, [x25, #32]
  41388c:	bic	x0, x2, x0
  413890:	str	x0, [x25, #24]
  413894:	sub	x2, x0, x1
  413898:	sub	x1, x4, x1
  41389c:	cmp	x2, x1
  4138a0:	b.ls	413908 <nftw@plt+0x10d88>  // b.plast
  4138a4:	stp	x4, x4, [x25, #16]
  4138a8:	str	x3, [x20]
  4138ac:	ldr	x20, [x22, w21, uxtw #3]
  4138b0:	cbnz	x20, 413308 <nftw@plt+0x10788>
  4138b4:	ldr	x0, [x19, #56]
  4138b8:	cbz	x0, 4138cc <nftw@plt+0x10d4c>
  4138bc:	ldr	x2, [x0]
  4138c0:	mov	x1, x19
  4138c4:	ldr	x2, [x2, #16]
  4138c8:	blr	x2
  4138cc:	ldr	x0, [sp, #144]
  4138d0:	ldp	x29, x30, [sp, #16]
  4138d4:	ldp	x21, x22, [sp, #48]
  4138d8:	ldp	x23, x24, [sp, #64]
  4138dc:	ldp	x25, x26, [sp, #80]
  4138e0:	ldp	x27, x28, [sp, #96]
  4138e4:	str	x0, [x0, #176]
  4138e8:	str	wzr, [x0, #200]
  4138ec:	ldr	x0, [sp, #160]
  4138f0:	str	wzr, [x19, #32]
  4138f4:	stur	x0, [x19, #36]
  4138f8:	strb	wzr, [x19, #64]
  4138fc:	ldp	x19, x20, [sp, #32]
  413900:	add	sp, sp, #0x1c0
  413904:	ret
  413908:	str	x0, [x25, #16]
  41390c:	str	x3, [x20]
  413910:	ldr	x20, [x22, w21, uxtw #3]
  413914:	cbnz	x20, 413308 <nftw@plt+0x10788>
  413918:	b	4138b4 <nftw@plt+0x10d34>
  41391c:	ldrb	w0, [x19, #67]
  413920:	bl	40bea8 <nftw@plt+0x9328>
  413924:	mov	x23, x0
  413928:	bl	4024f0 <strlen@plt>
  41392c:	mov	x20, x0
  413930:	ldp	x0, x1, [x25, #24]
  413934:	sub	x1, x1, x0
  413938:	cmp	x20, x1
  41393c:	b.hi	413fdc <nftw@plt+0x1145c>  // b.pmore
  413940:	mov	x1, x23
  413944:	mov	x2, x20
  413948:	bl	402490 <memcpy@plt>
  41394c:	ldr	x0, [x25, #24]
  413950:	add	x0, x0, x20
  413954:	str	x0, [x25, #24]
  413958:	adrp	x20, 4a4000 <_obstack_memory_used@@Base+0x42bb8>
  41395c:	ldr	x23, [x20, #1312]
  413960:	mov	x0, x23
  413964:	bl	4024f0 <strlen@plt>
  413968:	mov	x26, x0
  41396c:	ldp	x0, x3, [x25, #24]
  413970:	sub	x3, x3, x0
  413974:	cmp	x26, x3
  413978:	b.hi	413c38 <nftw@plt+0x110b8>  // b.pmore
  41397c:	mov	x1, x23
  413980:	mov	x2, x26
  413984:	bl	402490 <memcpy@plt>
  413988:	add	x23, x28, #0x2
  41398c:	ldr	x0, [x25, #24]
  413990:	add	x0, x0, x26
  413994:	str	x0, [x25, #24]
  413998:	b	413254 <nftw@plt+0x106d4>
  41399c:	adrp	x0, 4a4000 <_obstack_memory_used@@Base+0x42bb8>
  4139a0:	ldrb	w1, [x19, #67]
  4139a4:	str	w1, [sp, #128]
  4139a8:	ldr	x1, [x0, #1304]
  4139ac:	str	x1, [sp, #136]
  4139b0:	mov	x0, x1
  4139b4:	bl	4024f0 <strlen@plt>
  4139b8:	ldr	x1, [sp, #136]
  4139bc:	ldr	w3, [x19, #40]
  4139c0:	add	x2, x1, x0
  4139c4:	mov	x0, x19
  4139c8:	cmp	w3, #0x0
  4139cc:	b.le	413c6c <nftw@plt+0x110ec>
  4139d0:	bl	4129e8 <nftw@plt+0xfe68>
  4139d4:	ldrb	w0, [sp, #128]
  4139d8:	adrp	x1, 473000 <_obstack_memory_used@@Base+0x11bb8>
  4139dc:	add	x1, x1, #0xb98
  4139e0:	mov	x2, #0x5                   	// #5
  4139e4:	bl	40be18 <nftw@plt+0x9298>
  4139e8:	str	x0, [sp, #128]
  4139ec:	bl	4024f0 <strlen@plt>
  4139f0:	ldr	x1, [sp, #128]
  4139f4:	ldr	w3, [x19, #40]
  4139f8:	add	x2, x1, x0
  4139fc:	mov	x0, x19
  413a00:	cmp	w3, #0x0
  413a04:	b.le	413c60 <nftw@plt+0x110e0>
  413a08:	bl	4129e8 <nftw@plt+0xfe68>
  413a0c:	ldrb	w0, [x26]
  413a10:	cmp	w0, #0x6f
  413a14:	b.ne	41343c <nftw@plt+0x108bc>  // b.any
  413a18:	cbnz	w28, 414140 <nftw@plt+0x115c0>
  413a1c:	cmp	w27, #0x1
  413a20:	b.eq	414140 <nftw@plt+0x115c0>  // b.none
  413a24:	cmp	w27, #0x2
  413a28:	b.eq	414524 <nftw@plt+0x119a4>  // b.none
  413a2c:	cbnz	w27, 41384c <nftw@plt+0x10ccc>
  413a30:	ldr	x0, [sp, #120]
  413a34:	ldr	x2, [x0, #8]
  413a38:	ldr	x0, [x19, #8]
  413a3c:	ldr	w3, [x2, #24]
  413a40:	add	x0, x0, #0xcc
  413a44:	ldr	x1, [x2]
  413a48:	tbnz	w3, #31, 4146f4 <nftw@plt+0x11b74>
  413a4c:	add	x3, x1, #0xb
  413a50:	and	x3, x3, #0xfffffffffffffff8
  413a54:	str	x3, [x2]
  413a58:	ldr	w2, [x1]
  413a5c:	adrp	x1, 473000 <_obstack_memory_used@@Base+0x11bb8>
  413a60:	add	x1, x1, #0xf60
  413a64:	bl	4025b0 <sprintf@plt>
  413a68:	b	413d40 <nftw@plt+0x111c0>
  413a6c:	ldrb	w0, [x19, #67]
  413a70:	bl	40bea8 <nftw@plt+0x9328>
  413a74:	b	41321c <nftw@plt+0x1069c>
  413a78:	ldp	x0, x1, [x25, #24]
  413a7c:	cmp	x1, x0
  413a80:	b.eq	4142ec <nftw@plt+0x1176c>  // b.none
  413a84:	add	x1, x0, #0x1
  413a88:	str	x1, [x25, #24]
  413a8c:	strb	wzr, [x0]
  413a90:	cmp	w21, #0x3b
  413a94:	b.hi	414844 <nftw@plt+0x11cc4>  // b.pmore
  413a98:	ldp	x4, x2, [x25, #16]
  413a9c:	add	w0, w21, #0x1
  413aa0:	str	w0, [sp, #160]
  413aa4:	add	x6, x27, w21, uxtw #3
  413aa8:	cmp	x2, x4
  413aac:	b.eq	413ff0 <nftw@plt+0x11470>  // b.none
  413ab0:	ldr	x0, [x25, #48]
  413ab4:	ldr	x1, [x25, #8]
  413ab8:	add	x2, x2, x0
  413abc:	ldr	x5, [x25, #32]
  413ac0:	bic	x0, x2, x0
  413ac4:	str	x0, [x25, #24]
  413ac8:	sub	x2, x0, x1
  413acc:	sub	x1, x5, x1
  413ad0:	cmp	x2, x1
  413ad4:	b.ls	413ae0 <nftw@plt+0x10f60>  // b.plast
  413ad8:	mov	x0, x5
  413adc:	str	x5, [x25, #24]
  413ae0:	str	x0, [x25, #16]
  413ae4:	str	x4, [x6]
  413ae8:	ldr	x1, [sp, #128]
  413aec:	ldrb	w0, [x28, #1]
  413af0:	ldrh	w0, [x1, x0, lsl #1]
  413af4:	tbnz	w0, #2, 413f94 <nftw@plt+0x11414>
  413af8:	add	w0, w24, #0x1
  413afc:	str	w0, [sp, #152]
  413b00:	ldr	w0, [sp, #172]
  413b04:	cbnz	w0, 414874 <nftw@plt+0x11cf4>
  413b08:	add	w0, w24, #0x1
  413b0c:	str	w0, [sp, #188]
  413b10:	mov	w0, #0x1                   	// #1
  413b14:	str	w0, [sp, #184]
  413b18:	cmp	w24, #0x1d
  413b1c:	b.hi	41485c <nftw@plt+0x11cdc>  // b.pmore
  413b20:	mov	w0, w24
  413b24:	ldr	x1, [x22, x0, lsl #3]
  413b28:	cbnz	x1, 414a3c <nftw@plt+0x11ebc>
  413b2c:	ldr	x1, [sp, #160]
  413b30:	adrp	x20, 473000 <_obstack_memory_used@@Base+0x11bb8>
  413b34:	add	x20, x20, #0xf48
  413b38:	add	x1, x27, w1, uxtw #3
  413b3c:	str	x1, [x22, x0, lsl #3]
  413b40:	str	x1, [sp, #136]
  413b44:	b	413b74 <nftw@plt+0x10ff4>
  413b48:	add	x0, x1, #0x1
  413b4c:	str	x0, [x25, #24]
  413b50:	mov	x26, x23
  413b54:	mov	x0, x20
  413b58:	ldrb	w4, [x23]
  413b5c:	strb	w4, [x1]
  413b60:	ldrb	w28, [x26], #1
  413b64:	mov	w1, w28
  413b68:	bl	402940 <strchr@plt>
  413b6c:	cbz	x0, 413bb8 <nftw@plt+0x11038>
  413b70:	mov	x23, x26
  413b74:	ldp	x1, x0, [x25, #24]
  413b78:	cmp	x0, x1
  413b7c:	b.ne	413b48 <nftw@plt+0x10fc8>  // b.any
  413b80:	mov	x0, x25
  413b84:	mov	x1, #0x1                   	// #1
  413b88:	bl	461200 <_obstack_newchunk@@Base>
  413b8c:	mov	x26, x23
  413b90:	ldr	x1, [x25, #24]
  413b94:	mov	x0, x20
  413b98:	add	x4, x1, #0x1
  413b9c:	str	x4, [x25, #24]
  413ba0:	ldrb	w4, [x23]
  413ba4:	strb	w4, [x1]
  413ba8:	ldrb	w28, [x26], #1
  413bac:	mov	w1, w28
  413bb0:	bl	402940 <strchr@plt>
  413bb4:	cbnz	x0, 413b70 <nftw@plt+0x10ff0>
  413bb8:	cmp	w28, #0x2e
  413bbc:	b.eq	413e68 <nftw@plt+0x112e8>  // b.none
  413bc0:	ldrb	w3, [x26]
  413bc4:	ldp	x0, x1, [x25, #24]
  413bc8:	cbz	w3, 4146b4 <nftw@plt+0x11b34>
  413bcc:	cmp	x1, x0
  413bd0:	b.eq	414300 <nftw@plt+0x11780>  // b.none
  413bd4:	add	x1, x0, #0x1
  413bd8:	str	x1, [x25, #24]
  413bdc:	strb	wzr, [x0]
  413be0:	add	w21, w21, #0x2
  413be4:	ldp	x4, x3, [x25, #16]
  413be8:	cmp	x3, x4
  413bec:	b.eq	414000 <nftw@plt+0x11480>  // b.none
  413bf0:	ldr	x0, [x25, #48]
  413bf4:	ldr	x1, [x25, #8]
  413bf8:	add	x3, x3, x0
  413bfc:	ldr	x5, [x25, #32]
  413c00:	bic	x0, x3, x0
  413c04:	str	x0, [x25, #24]
  413c08:	sub	x3, x0, x1
  413c0c:	sub	x1, x5, x1
  413c10:	cmp	x3, x1
  413c14:	b.ls	413c20 <nftw@plt+0x110a0>  // b.plast
  413c18:	mov	x0, x5
  413c1c:	str	x5, [x25, #24]
  413c20:	str	x0, [x25, #16]
  413c24:	mov	x23, x26
  413c28:	ldr	x0, [sp, #136]
  413c2c:	ldr	w24, [sp, #152]
  413c30:	str	x4, [x0]
  413c34:	b	413254 <nftw@plt+0x106d4>
  413c38:	mov	x0, x25
  413c3c:	mov	x1, x26
  413c40:	bl	461200 <_obstack_newchunk@@Base>
  413c44:	ldr	x23, [x20, #1312]
  413c48:	ldr	x0, [x25, #24]
  413c4c:	b	41397c <nftw@plt+0x10dfc>
  413c50:	bl	4128d0 <nftw@plt+0xfd50>
  413c54:	b	413854 <nftw@plt+0x10cd4>
  413c58:	bl	4128d0 <nftw@plt+0xfd50>
  413c5c:	b	41350c <nftw@plt+0x1098c>
  413c60:	bl	4128d0 <nftw@plt+0xfd50>
  413c64:	ldrb	w0, [x26]
  413c68:	b	413434 <nftw@plt+0x108b4>
  413c6c:	bl	4128d0 <nftw@plt+0xfd50>
  413c70:	b	4139d4 <nftw@plt+0x10e54>
  413c74:	ldrb	w0, [x26, #1]
  413c78:	ldr	x1, [sp, #152]
  413c7c:	ldrh	w1, [x1, w0, sxtw #1]
  413c80:	tbnz	w1, #2, 4141f4 <nftw@plt+0x11674>
  413c84:	cmp	w0, #0x2a
  413c88:	b.ne	414994 <nftw@plt+0x11e14>  // b.any
  413c8c:	ldrb	w0, [x26, #2]
  413c90:	cmp	w0, #0x73
  413c94:	b.ne	4149ac <nftw@plt+0x11e2c>  // b.any
  413c98:	ldr	x0, [sp, #120]
  413c9c:	add	w21, w21, #0x1
  413ca0:	ldr	x2, [x0, #8]
  413ca4:	ldr	x4, [x22, w21, uxtw #3]
  413ca8:	ldr	w0, [x2, #24]
  413cac:	ldr	x3, [x2]
  413cb0:	tbnz	w0, #31, 4143ac <nftw@plt+0x1182c>
  413cb4:	add	x0, x3, #0xb
  413cb8:	ldr	w1, [x3]
  413cbc:	and	x0, x0, #0xfffffffffffffff8
  413cc0:	str	x0, [x2]
  413cc4:	cmp	x20, x4
  413cc8:	b.ne	41491c <nftw@plt+0x11d9c>  // b.any
  413ccc:	add	x3, x0, #0xf
  413cd0:	mov	x20, x4
  413cd4:	and	x3, x3, #0xfffffffffffffff8
  413cd8:	str	x3, [x2]
  413cdc:	ldr	x24, [x0]
  413ce0:	tbnz	w1, #31, 414250 <nftw@plt+0x116d0>
  413ce4:	sxtw	x1, w1
  413ce8:	mov	x0, x24
  413cec:	bl	402540 <strnlen@plt>
  413cf0:	add	x2, x24, x0
  413cf4:	mov	x1, x24
  413cf8:	mov	x0, x19
  413cfc:	bl	4128d0 <nftw@plt+0xfd50>
  413d00:	b	4134d8 <nftw@plt+0x10958>
  413d04:	ldr	x0, [sp, #120]
  413d08:	ldr	x1, [x0, #8]
  413d0c:	ldr	x0, [x19, #8]
  413d10:	ldr	w3, [x1, #28]
  413d14:	add	x0, x0, #0xcc
  413d18:	ldr	x2, [x1]
  413d1c:	tbnz	w3, #31, 414124 <nftw@plt+0x115a4>
  413d20:	add	x3, x2, #0xf
  413d24:	and	x3, x3, #0xfffffffffffffff8
  413d28:	str	x3, [x1]
  413d2c:	ldr	d0, [x2]
  413d30:	adrp	x1, 472000 <_obstack_memory_used@@Base+0x10bb8>
  413d34:	add	x1, x1, #0x680
  413d38:	bl	4025b0 <sprintf@plt>
  413d3c:	nop
  413d40:	ldr	x24, [x19, #8]
  413d44:	add	x24, x24, #0xcc
  413d48:	mov	x0, x24
  413d4c:	b	4134b8 <nftw@plt+0x10938>
  413d50:	ldr	x0, [sp, #120]
  413d54:	ldrb	w3, [sp, #199]
  413d58:	ldr	x0, [x0, #8]
  413d5c:	ldr	w2, [x0, #24]
  413d60:	ldr	x1, [x0]
  413d64:	cbz	w3, 414070 <nftw@plt+0x114f0>
  413d68:	tbnz	w2, #31, 414508 <nftw@plt+0x11988>
  413d6c:	add	x2, x1, #0xf
  413d70:	and	x2, x2, #0xfffffffffffffff8
  413d74:	str	x2, [x0]
  413d78:	ldr	x1, [x1]
  413d7c:	mov	x0, x19
  413d80:	mov	x2, #0xffffffffffffffff    	// #-1
  413d84:	bl	412c68 <nftw@plt+0x100e8>
  413d88:	b	41384c <nftw@plt+0x10ccc>
  413d8c:	cbnz	w28, 41417c <nftw@plt+0x115fc>
  413d90:	cmp	w27, #0x1
  413d94:	b.eq	41417c <nftw@plt+0x115fc>  // b.none
  413d98:	cmp	w27, #0x2
  413d9c:	b.eq	414650 <nftw@plt+0x11ad0>  // b.none
  413da0:	cbnz	w27, 41384c <nftw@plt+0x10ccc>
  413da4:	ldr	x0, [sp, #120]
  413da8:	ldr	x2, [x0, #8]
  413dac:	ldr	x0, [x19, #8]
  413db0:	ldr	w3, [x2, #24]
  413db4:	add	x0, x0, #0xcc
  413db8:	ldr	x1, [x2]
  413dbc:	tbnz	w3, #31, 4146bc <nftw@plt+0x11b3c>
  413dc0:	add	x3, x1, #0xb
  413dc4:	and	x3, x3, #0xfffffffffffffff8
  413dc8:	str	x3, [x2]
  413dcc:	ldr	w2, [x1]
  413dd0:	adrp	x1, 473000 <_obstack_memory_used@@Base+0x11bb8>
  413dd4:	add	x1, x1, #0xf80
  413dd8:	bl	4025b0 <sprintf@plt>
  413ddc:	b	413d40 <nftw@plt+0x111c0>
  413de0:	ldr	x0, [sp, #120]
  413de4:	ldr	x1, [x0, #8]
  413de8:	ldr	x0, [x19, #8]
  413dec:	ldr	w3, [x1, #24]
  413df0:	add	x0, x0, #0xcc
  413df4:	ldr	x2, [x1]
  413df8:	tbnz	w3, #31, 4140a8 <nftw@plt+0x11528>
  413dfc:	add	x3, x2, #0xf
  413e00:	and	x3, x3, #0xfffffffffffffff8
  413e04:	str	x3, [x1]
  413e08:	ldr	x2, [x2]
  413e0c:	adrp	x1, 473000 <_obstack_memory_used@@Base+0x11bb8>
  413e10:	add	x1, x1, #0xf70
  413e14:	bl	4025b0 <sprintf@plt>
  413e18:	b	413d40 <nftw@plt+0x111c0>
  413e1c:	ldr	x0, [sp, #120]
  413e20:	ldr	x0, [x0, #8]
  413e24:	ldr	w2, [x0, #24]
  413e28:	ldr	x1, [x0]
  413e2c:	tbnz	w2, #31, 41408c <nftw@plt+0x1150c>
  413e30:	add	x2, x1, #0xb
  413e34:	and	x2, x2, #0xfffffffffffffff8
  413e38:	str	x2, [x0]
  413e3c:	ldr	w3, [x1]
  413e40:	ldr	x1, [sp, #152]
  413e44:	and	x0, x3, #0xff
  413e48:	ldrh	w0, [x1, x0, lsl #1]
  413e4c:	tbnz	w0, #4, 413e58 <nftw@plt+0x112d8>
  413e50:	ldrb	w0, [sp, #199]
  413e54:	cbnz	w0, 414314 <nftw@plt+0x11794>
  413e58:	mov	w1, w3
  413e5c:	mov	x0, x19
  413e60:	bl	412fa0 <nftw@plt+0x10420>
  413e64:	b	41384c <nftw@plt+0x10ccc>
  413e68:	ldrb	w0, [x26]
  413e6c:	ldr	x1, [sp, #128]
  413e70:	ldrh	w1, [x1, w0, sxtw #1]
  413e74:	tbnz	w1, #2, 413f30 <nftw@plt+0x113b0>
  413e78:	cmp	w0, #0x2a
  413e7c:	b.ne	414904 <nftw@plt+0x11d84>  // b.any
  413e80:	ldp	x0, x1, [x25, #24]
  413e84:	cmp	x1, x0
  413e88:	b.eq	41468c <nftw@plt+0x11b0c>  // b.none
  413e8c:	add	x1, x0, #0x1
  413e90:	str	x1, [x25, #24]
  413e94:	mov	w1, #0x2a                  	// #42
  413e98:	strb	w1, [x0]
  413e9c:	ldr	x1, [sp, #128]
  413ea0:	add	x23, x23, #0x2
  413ea4:	ldrb	w0, [x26, #1]
  413ea8:	ldrh	w1, [x1, w0, sxtw #1]
  413eac:	tbnz	w1, #2, 414484 <nftw@plt+0x11904>
  413eb0:	ldr	w1, [sp, #172]
  413eb4:	cbnz	w1, 414934 <nftw@plt+0x11db4>
  413eb8:	ldr	w1, [sp, #152]
  413ebc:	ldr	x2, [sp, #136]
  413ec0:	add	w1, w1, #0x1
  413ec4:	str	w1, [sp, #152]
  413ec8:	ldr	w1, [sp, #188]
  413ecc:	str	x2, [x22, w1, uxtw #3]
  413ed0:	cmp	w0, #0x73
  413ed4:	b.ne	41494c <nftw@plt+0x11dcc>  // b.any
  413ed8:	ldp	x0, x1, [x25, #24]
  413edc:	cmp	x1, x0
  413ee0:	b.eq	4146a0 <nftw@plt+0x11b20>  // b.none
  413ee4:	add	x1, x0, #0x1
  413ee8:	str	x1, [x25, #24]
  413eec:	add	x26, x23, #0x1
  413ef0:	mov	w1, #0x73                  	// #115
  413ef4:	strb	w1, [x0]
  413ef8:	b	413bc0 <nftw@plt+0x11040>
  413efc:	mov	x0, x25
  413f00:	mov	x1, #0x1                   	// #1
  413f04:	bl	461200 <_obstack_newchunk@@Base>
  413f08:	ldr	x0, [x25, #24]
  413f0c:	add	x1, x0, #0x1
  413f10:	str	x1, [x25, #24]
  413f14:	ldrb	w1, [x26]
  413f18:	strb	w1, [x0]
  413f1c:	ldrb	w0, [x26], #1
  413f20:	ldr	x1, [sp, #128]
  413f24:	ldrh	w1, [x1, w0, sxtw #1]
  413f28:	tbz	w1, #2, 413f5c <nftw@plt+0x113dc>
  413f2c:	nop
  413f30:	ldp	x0, x1, [x25, #24]
  413f34:	cmp	x1, x0
  413f38:	b.eq	413efc <nftw@plt+0x1137c>  // b.none
  413f3c:	add	x1, x0, #0x1
  413f40:	str	x1, [x25, #24]
  413f44:	ldrb	w1, [x26]
  413f48:	strb	w1, [x0]
  413f4c:	ldrb	w0, [x26], #1
  413f50:	ldr	x1, [sp, #128]
  413f54:	ldrh	w1, [x1, w0, sxtw #1]
  413f58:	tbnz	w1, #2, 413f30 <nftw@plt+0x113b0>
  413f5c:	cmp	w0, #0x73
  413f60:	b.eq	413bc0 <nftw@plt+0x11040>  // b.none
  413f64:	adrp	x2, 473000 <_obstack_memory_used@@Base+0x11bb8>
  413f68:	adrp	x0, 473000 <_obstack_memory_used@@Base+0x11bb8>
  413f6c:	add	x2, x2, #0xf38
  413f70:	add	x0, x0, #0xef0
  413f74:	mov	w1, #0x47c                 	// #1148
  413f78:	bl	402bf0 <nftw@plt+0x70>
  413f7c:	mov	x0, x25
  413f80:	mov	x1, x23
  413f84:	bl	461200 <_obstack_newchunk@@Base>
  413f88:	ldr	x26, [x20, #1304]
  413f8c:	ldr	x0, [x25, #24]
  413f90:	b	4131f4 <nftw@plt+0x10674>
  413f94:	add	x1, sp, #0xc8
  413f98:	mov	x0, x23
  413f9c:	mov	w2, #0xa                   	// #10
  413fa0:	bl	4024e0 <strtoul@plt>
  413fa4:	ldr	x3, [sp, #200]
  413fa8:	str	w0, [sp, #188]
  413fac:	sub	w0, w0, #0x1
  413fb0:	ldrb	w1, [x3]
  413fb4:	cmp	w1, #0x24
  413fb8:	b.ne	414a24 <nftw@plt+0x11ea4>  // b.any
  413fbc:	ldr	w1, [sp, #184]
  413fc0:	add	x23, x3, #0x1
  413fc4:	cbnz	w1, 4149dc <nftw@plt+0x11e5c>
  413fc8:	mov	w1, #0x1                   	// #1
  413fcc:	str	w24, [sp, #152]
  413fd0:	mov	w24, w0
  413fd4:	str	w1, [sp, #172]
  413fd8:	b	413b18 <nftw@plt+0x10f98>
  413fdc:	mov	x0, x25
  413fe0:	mov	x1, x20
  413fe4:	bl	461200 <_obstack_newchunk@@Base>
  413fe8:	ldr	x0, [x25, #24]
  413fec:	b	413940 <nftw@plt+0x10dc0>
  413ff0:	ldrb	w0, [x25, #80]
  413ff4:	orr	w0, w0, #0x2
  413ff8:	strb	w0, [x25, #80]
  413ffc:	b	413ab0 <nftw@plt+0x10f30>
  414000:	ldrb	w0, [x25, #80]
  414004:	orr	w0, w0, #0x2
  414008:	strb	w0, [x25, #80]
  41400c:	b	413bf0 <nftw@plt+0x11070>
  414010:	ldr	x2, [sp, #144]
  414014:	add	x22, sp, #0xd0
  414018:	add	x27, x1, #0x8
  41401c:	ldr	x0, [x2, #184]
  414020:	str	x24, [x25, #16]
  414024:	str	x0, [x1]
  414028:	mov	x0, x22
  41402c:	str	x1, [x2, #184]
  414030:	mov	x2, #0xf0                  	// #240
  414034:	mov	w1, #0x0                   	// #0
  414038:	bl	4026f0 <memset@plt>
  41403c:	ldr	x0, [sp, #120]
  414040:	ldr	x28, [x0]
  414044:	ldrb	w0, [x28]
  414048:	cbnz	w0, 413140 <nftw@plt+0x105c0>
  41404c:	cmp	x24, x20
  414050:	b.eq	414410 <nftw@plt+0x11890>  // b.none
  414054:	add	x0, x24, #0x1
  414058:	str	x0, [x25, #24]
  41405c:	mov	x21, x27
  414060:	mov	x20, #0x0                   	// #0
  414064:	mov	x3, #0x8                   	// #8
  414068:	strb	wzr, [x24]
  41406c:	b	413290 <nftw@plt+0x10710>
  414070:	tbnz	w2, #31, 4144cc <nftw@plt+0x1194c>
  414074:	add	x2, x1, #0xf
  414078:	and	x2, x2, #0xfffffffffffffff8
  41407c:	str	x2, [x0]
  414080:	ldr	x24, [x1]
  414084:	mov	x0, x24
  414088:	b	4134b8 <nftw@plt+0x10938>
  41408c:	add	w3, w2, #0x8
  414090:	str	w3, [x0, #24]
  414094:	cmp	w3, #0x0
  414098:	b.gt	413e30 <nftw@plt+0x112b0>
  41409c:	ldr	x1, [x0, #8]
  4140a0:	add	x1, x1, w2, sxtw
  4140a4:	b	413e3c <nftw@plt+0x112bc>
  4140a8:	add	w4, w3, #0x8
  4140ac:	str	w4, [x1, #24]
  4140b0:	cmp	w4, #0x0
  4140b4:	b.gt	413dfc <nftw@plt+0x1127c>
  4140b8:	ldr	x2, [x1, #8]
  4140bc:	add	x2, x2, w3, sxtw
  4140c0:	b	413e08 <nftw@plt+0x11288>
  4140c4:	add	w3, w2, #0x8
  4140c8:	str	w3, [x0, #24]
  4140cc:	cmp	w3, #0x0
  4140d0:	b.gt	4137fc <nftw@plt+0x10c7c>
  4140d4:	ldr	x1, [x0, #8]
  4140d8:	add	x1, x1, w2, sxtw
  4140dc:	b	413808 <nftw@plt+0x10c88>
  4140e0:	add	w0, w2, #0x8
  4140e4:	str	w0, [x1, #24]
  4140e8:	cmp	w0, #0x0
  4140ec:	b.gt	4135fc <nftw@plt+0x10a7c>
  4140f0:	ldr	x4, [x1, #8]
  4140f4:	ldr	x5, [x4, w2, sxtw]
  4140f8:	str	x5, [sp, #128]
  4140fc:	b.eq	41480c <nftw@plt+0x11c8c>  // b.none
  414100:	add	w2, w2, #0x10
  414104:	str	w2, [x1, #24]
  414108:	cmp	w2, #0x0
  41410c:	b.le	41433c <nftw@plt+0x117bc>
  414110:	add	x2, x3, #0xb
  414114:	mov	x0, x3
  414118:	and	x2, x2, #0xfffffffffffffff8
  41411c:	str	x2, [x1]
  414120:	b	41361c <nftw@plt+0x10a9c>
  414124:	add	w4, w3, #0x10
  414128:	str	w4, [x1, #28]
  41412c:	cmp	w4, #0x0
  414130:	b.gt	413d20 <nftw@plt+0x111a0>
  414134:	ldr	x2, [x1, #16]
  414138:	add	x2, x2, w3, sxtw
  41413c:	b	413d2c <nftw@plt+0x111ac>
  414140:	ldr	x0, [sp, #120]
  414144:	ldr	x2, [x0, #8]
  414148:	ldr	x0, [x19, #8]
  41414c:	ldr	w3, [x2, #24]
  414150:	add	x0, x0, #0xcc
  414154:	ldr	x1, [x2]
  414158:	tbnz	w3, #31, 4144ec <nftw@plt+0x1196c>
  41415c:	add	x3, x1, #0xf
  414160:	and	x3, x3, #0xfffffffffffffff8
  414164:	str	x3, [x2]
  414168:	ldr	x2, [x1]
  41416c:	adrp	x1, 473000 <_obstack_memory_used@@Base+0x11bb8>
  414170:	add	x1, x1, #0xf58
  414174:	bl	4025b0 <sprintf@plt>
  414178:	b	413d40 <nftw@plt+0x111c0>
  41417c:	ldr	x0, [sp, #120]
  414180:	ldr	x2, [x0, #8]
  414184:	ldr	x0, [x19, #8]
  414188:	ldr	w3, [x2, #24]
  41418c:	add	x0, x0, #0xcc
  414190:	ldr	x1, [x2]
  414194:	tbnz	w3, #31, 414468 <nftw@plt+0x118e8>
  414198:	add	x3, x1, #0xf
  41419c:	and	x3, x3, #0xfffffffffffffff8
  4141a0:	str	x3, [x2]
  4141a4:	ldr	x2, [x1]
  4141a8:	adrp	x1, 473000 <_obstack_memory_used@@Base+0x11bb8>
  4141ac:	add	x1, x1, #0xf78
  4141b0:	bl	4025b0 <sprintf@plt>
  4141b4:	b	413d40 <nftw@plt+0x111c0>
  4141b8:	ldr	x0, [sp, #120]
  4141bc:	ldr	x1, [x0, #8]
  4141c0:	ldr	w2, [x1, #24]
  4141c4:	ldr	x0, [x1]
  4141c8:	tbnz	w2, #31, 414360 <nftw@plt+0x117e0>
  4141cc:	add	x2, x0, #0xf
  4141d0:	and	x2, x2, #0xfffffffffffffff8
  4141d4:	str	x2, [x1]
  4141d8:	ldr	x2, [x0]
  4141dc:	adrp	x1, 473000 <_obstack_memory_used@@Base+0x11bb8>
  4141e0:	ldr	x0, [x19, #8]
  4141e4:	add	x1, x1, #0xfe8
  4141e8:	add	x0, x0, #0xcc
  4141ec:	bl	4025b0 <sprintf@plt>
  4141f0:	b	413d40 <nftw@plt+0x111c0>
  4141f4:	add	x1, sp, #0xc8
  4141f8:	mov	w2, #0xa                   	// #10
  4141fc:	add	x0, x26, #0x1
  414200:	bl	4024e0 <strtoul@plt>
  414204:	ldr	x2, [sp, #200]
  414208:	mov	w1, w0
  41420c:	ldrb	w0, [x2]
  414210:	cmp	w0, #0x73
  414214:	b.ne	414a54 <nftw@plt+0x11ed4>  // b.any
  414218:	ldr	x0, [sp, #120]
  41421c:	ldr	x2, [x0, #8]
  414220:	ldr	w5, [x2, #24]
  414224:	ldr	x0, [x2]
  414228:	tbz	w5, #31, 414804 <nftw@plt+0x11c84>
  41422c:	add	w3, w5, #0x8
  414230:	str	w3, [x2, #24]
  414234:	cmp	w3, #0x0
  414238:	b.le	414330 <nftw@plt+0x117b0>
  41423c:	add	x3, x0, #0xf
  414240:	and	x3, x3, #0xfffffffffffffff8
  414244:	str	x3, [x2]
  414248:	ldr	x24, [x0]
  41424c:	tbz	w1, #31, 413ce4 <nftw@plt+0x11164>
  414250:	mov	x0, x24
  414254:	bl	4024f0 <strlen@plt>
  414258:	b	413cf0 <nftw@plt+0x11170>
  41425c:	ldr	x0, [sp, #120]
  414260:	ldr	x2, [x0, #8]
  414264:	ldr	x0, [x19, #8]
  414268:	ldr	w3, [x2, #24]
  41426c:	add	x0, x0, #0xcc
  414270:	ldr	x1, [x2]
  414274:	tbnz	w3, #31, 414344 <nftw@plt+0x117c4>
  414278:	add	x3, x1, #0xf
  41427c:	and	x3, x3, #0xfffffffffffffff8
  414280:	str	x3, [x2]
  414284:	ldr	x2, [x1]
  414288:	adrp	x1, 473000 <_obstack_memory_used@@Base+0x11bb8>
  41428c:	add	x1, x1, #0xf98
  414290:	bl	4025b0 <sprintf@plt>
  414294:	b	413d40 <nftw@plt+0x111c0>
  414298:	mov	x0, x25
  41429c:	mov	x1, #0x1e8                 	// #488
  4142a0:	bl	461200 <_obstack_newchunk@@Base>
  4142a4:	ldp	x0, x20, [x25, #24]
  4142a8:	ldr	x1, [x25, #16]
  4142ac:	add	x0, x0, #0x1e8
  4142b0:	cmp	x0, x1
  4142b4:	b.ne	4130e0 <nftw@plt+0x10560>  // b.any
  4142b8:	ldrb	w2, [x25, #80]
  4142bc:	orr	w2, w2, #0x2
  4142c0:	strb	w2, [x25, #80]
  4142c4:	b	4130e0 <nftw@plt+0x10560>
  4142c8:	mov	x0, x25
  4142cc:	mov	x1, #0x1                   	// #1
  4142d0:	bl	461200 <_obstack_newchunk@@Base>
  4142d4:	ldr	x0, [x25, #24]
  4142d8:	b	413408 <nftw@plt+0x10888>
  4142dc:	ldrb	w0, [x25, #80]
  4142e0:	orr	w0, w0, #0x2
  4142e4:	strb	w0, [x25, #80]
  4142e8:	b	41329c <nftw@plt+0x1071c>
  4142ec:	mov	x0, x25
  4142f0:	mov	x1, #0x1                   	// #1
  4142f4:	bl	461200 <_obstack_newchunk@@Base>
  4142f8:	ldr	x0, [x25, #24]
  4142fc:	b	413a84 <nftw@plt+0x10f04>
  414300:	mov	x0, x25
  414304:	mov	x1, #0x1                   	// #1
  414308:	bl	461200 <_obstack_newchunk@@Base>
  41430c:	ldr	x0, [x25, #24]
  414310:	b	413bd4 <nftw@plt+0x11054>
  414314:	add	x1, sp, #0xc8
  414318:	mov	x0, x19
  41431c:	mov	x2, #0x1                   	// #1
  414320:	strb	w3, [sp, #200]
  414324:	strb	wzr, [sp, #201]
  414328:	bl	412c68 <nftw@plt+0x100e8>
  41432c:	b	41384c <nftw@plt+0x10ccc>
  414330:	ldr	x0, [x2, #8]
  414334:	add	x0, x0, w5, sxtw
  414338:	b	413cdc <nftw@plt+0x1115c>
  41433c:	add	x0, x4, w0, sxtw
  414340:	b	41361c <nftw@plt+0x10a9c>
  414344:	add	w4, w3, #0x8
  414348:	str	w4, [x2, #24]
  41434c:	cmp	w4, #0x0
  414350:	b.gt	414278 <nftw@plt+0x116f8>
  414354:	ldr	x1, [x2, #8]
  414358:	add	x1, x1, w3, sxtw
  41435c:	b	414284 <nftw@plt+0x11704>
  414360:	add	w3, w2, #0x8
  414364:	str	w3, [x1, #24]
  414368:	cmp	w3, #0x0
  41436c:	b.gt	4141cc <nftw@plt+0x1164c>
  414370:	ldr	x0, [x1, #8]
  414374:	add	x0, x0, w2, sxtw
  414378:	b	4141d8 <nftw@plt+0x11658>
  41437c:	mov	x1, #0x1                   	// #1
  414380:	str	x0, [sp, #136]
  414384:	bl	461200 <_obstack_newchunk@@Base>
  414388:	ldr	x0, [sp, #136]
  41438c:	ldr	x1, [x0, #24]
  414390:	b	41371c <nftw@plt+0x10b9c>
  414394:	mov	x1, #0x1                   	// #1
  414398:	str	x0, [sp, #136]
  41439c:	bl	461200 <_obstack_newchunk@@Base>
  4143a0:	ldr	x0, [sp, #136]
  4143a4:	ldr	x1, [x0, #24]
  4143a8:	b	4136d0 <nftw@plt+0x10b50>
  4143ac:	add	w5, w0, #0x8
  4143b0:	str	w5, [x2, #24]
  4143b4:	cmp	w5, #0x0
  4143b8:	b.gt	413cb4 <nftw@plt+0x11134>
  4143bc:	ldr	x1, [x2, #8]
  4143c0:	cmp	x20, x4
  4143c4:	ldr	w1, [x1, w0, sxtw]
  4143c8:	b.ne	41491c <nftw@plt+0x11d9c>  // b.any
  4143cc:	mov	x0, x3
  4143d0:	b	414228 <nftw@plt+0x116a8>
  4143d4:	cmp	x5, x1
  4143d8:	b.eq	4147ec <nftw@plt+0x11c6c>  // b.none
  4143dc:	add	x2, x1, #0x1
  4143e0:	str	x2, [x0, #24]
  4143e4:	mov	w0, #0xa                   	// #10
  4143e8:	strb	w0, [x1]
  4143ec:	ldr	x0, [sp, #152]
  4143f0:	strb	wzr, [x19, #65]
  4143f4:	ldr	x1, [x19, #8]
  4143f8:	ldrh	w0, [x0, #64]
  4143fc:	str	wzr, [x1, #200]
  414400:	tbnz	w0, #6, 413644 <nftw@plt+0x10ac4>
  414404:	ldr	x0, [x1, #176]
  414408:	ldp	x1, x5, [x0, #24]
  41440c:	b	413714 <nftw@plt+0x10b94>
  414410:	mov	w21, #0x0                   	// #0
  414414:	mov	x0, x25
  414418:	mov	x1, #0x1                   	// #1
  41441c:	bl	461200 <_obstack_newchunk@@Base>
  414420:	ldr	x0, [x25, #24]
  414424:	b	41326c <nftw@plt+0x106ec>
  414428:	cmp	x5, x1
  41442c:	b.eq	4147d4 <nftw@plt+0x11c54>  // b.none
  414430:	add	x2, x1, #0x1
  414434:	str	x2, [x0, #24]
  414438:	mov	w0, #0xa                   	// #10
  41443c:	strb	w0, [x1]
  414440:	ldr	x0, [sp, #152]
  414444:	strb	wzr, [x19, #65]
  414448:	mov	w2, #0x0                   	// #0
  41444c:	ldrh	w1, [x0, #88]
  414450:	ldr	x0, [x19, #8]
  414454:	str	wzr, [x0, #200]
  414458:	tbnz	w1, #6, 4136f0 <nftw@plt+0x10b70>
  41445c:	ldr	x0, [x0, #176]
  414460:	ldp	x1, x5, [x0, #24]
  414464:	b	4136c8 <nftw@plt+0x10b48>
  414468:	add	w4, w3, #0x8
  41446c:	str	w4, [x2, #24]
  414470:	cmp	w4, #0x0
  414474:	b.gt	414198 <nftw@plt+0x11618>
  414478:	ldr	x1, [x2, #8]
  41447c:	add	x1, x1, w3, sxtw
  414480:	b	4141a4 <nftw@plt+0x11624>
  414484:	add	x1, sp, #0xc8
  414488:	mov	x0, x23
  41448c:	mov	w2, #0xa                   	// #10
  414490:	bl	4024e0 <strtoul@plt>
  414494:	cmp	w0, w24
  414498:	sub	w1, w0, #0x1
  41449c:	ldr	x0, [sp, #200]
  4144a0:	b.ne	4148d4 <nftw@plt+0x11d54>  // b.any
  4144a4:	ldr	w2, [sp, #184]
  4144a8:	cbnz	w2, 4148bc <nftw@plt+0x11d3c>
  4144ac:	ldrb	w2, [x0]
  4144b0:	cmp	w2, #0x24
  4144b4:	b.ne	4148a4 <nftw@plt+0x11d24>  // b.any
  4144b8:	ldr	x2, [sp, #136]
  4144bc:	add	x23, x0, #0x1
  4144c0:	ldrb	w0, [x0, #1]
  4144c4:	str	x2, [x22, w1, uxtw #3]
  4144c8:	b	413ed0 <nftw@plt+0x11350>
  4144cc:	add	w3, w2, #0x8
  4144d0:	str	w3, [x0, #24]
  4144d4:	cmp	w3, #0x0
  4144d8:	b.gt	414074 <nftw@plt+0x114f4>
  4144dc:	ldr	x1, [x0, #8]
  4144e0:	add	x1, x1, w2, sxtw
  4144e4:	ldr	x24, [x1]
  4144e8:	b	414084 <nftw@plt+0x11504>
  4144ec:	add	w4, w3, #0x8
  4144f0:	str	w4, [x2, #24]
  4144f4:	cmp	w4, #0x0
  4144f8:	b.gt	41415c <nftw@plt+0x115dc>
  4144fc:	ldr	x1, [x2, #8]
  414500:	add	x1, x1, w3, sxtw
  414504:	b	414168 <nftw@plt+0x115e8>
  414508:	add	w3, w2, #0x8
  41450c:	str	w3, [x0, #24]
  414510:	cmp	w3, #0x0
  414514:	b.gt	413d6c <nftw@plt+0x111ec>
  414518:	ldr	x1, [x0, #8]
  41451c:	add	x1, x1, w2, sxtw
  414520:	b	413d78 <nftw@plt+0x111f8>
  414524:	ldr	x0, [sp, #120]
  414528:	ldr	x2, [x0, #8]
  41452c:	ldr	x0, [x19, #8]
  414530:	ldr	w3, [x2, #24]
  414534:	add	x0, x0, #0xcc
  414538:	ldr	x1, [x2]
  41453c:	tbnz	w3, #31, 4147b8 <nftw@plt+0x11c38>
  414540:	add	x3, x1, #0xf
  414544:	and	x3, x3, #0xfffffffffffffff8
  414548:	str	x3, [x2]
  41454c:	ldr	x2, [x1]
  414550:	adrp	x1, 473000 <_obstack_memory_used@@Base+0x11bb8>
  414554:	add	x1, x1, #0xf68
  414558:	bl	4025b0 <sprintf@plt>
  41455c:	b	413d40 <nftw@plt+0x111c0>
  414560:	ldr	x0, [sp, #120]
  414564:	ldr	x2, [x0, #8]
  414568:	ldr	x0, [x19, #8]
  41456c:	ldr	w3, [x2, #24]
  414570:	add	x0, x0, #0xcc
  414574:	ldr	x1, [x2]
  414578:	tbnz	w3, #31, 41479c <nftw@plt+0x11c1c>
  41457c:	add	x3, x1, #0xf
  414580:	and	x3, x3, #0xfffffffffffffff8
  414584:	str	x3, [x2]
  414588:	ldr	x2, [x1]
  41458c:	adrp	x1, 473000 <_obstack_memory_used@@Base+0x11bb8>
  414590:	add	x1, x1, #0xfb0
  414594:	bl	4025b0 <sprintf@plt>
  414598:	b	413d40 <nftw@plt+0x111c0>
  41459c:	ldr	x0, [sp, #120]
  4145a0:	ldr	x2, [x0, #8]
  4145a4:	ldr	x0, [x19, #8]
  4145a8:	ldr	w3, [x2, #24]
  4145ac:	add	x0, x0, #0xcc
  4145b0:	ldr	x1, [x2]
  4145b4:	tbnz	w3, #31, 414780 <nftw@plt+0x11c00>
  4145b8:	add	x3, x1, #0xf
  4145bc:	and	x3, x3, #0xfffffffffffffff8
  4145c0:	str	x3, [x2]
  4145c4:	ldr	x2, [x1]
  4145c8:	adrp	x1, 473000 <_obstack_memory_used@@Base+0x11bb8>
  4145cc:	add	x1, x1, #0xf50
  4145d0:	bl	4025b0 <sprintf@plt>
  4145d4:	b	413d40 <nftw@plt+0x111c0>
  4145d8:	ldr	x0, [sp, #120]
  4145dc:	ldr	x2, [x0, #8]
  4145e0:	ldr	x0, [x19, #8]
  4145e4:	ldr	w3, [x2, #24]
  4145e8:	add	x0, x0, #0xcc
  4145ec:	ldr	x1, [x2]
  4145f0:	tbnz	w3, #31, 414764 <nftw@plt+0x11be4>
  4145f4:	add	x3, x1, #0xf
  4145f8:	and	x3, x3, #0xfffffffffffffff8
  4145fc:	str	x3, [x2]
  414600:	ldr	x2, [x1]
  414604:	adrp	x1, 473000 <_obstack_memory_used@@Base+0x11bb8>
  414608:	add	x1, x1, #0xfe8
  41460c:	bl	4025b0 <sprintf@plt>
  414610:	b	413d40 <nftw@plt+0x111c0>
  414614:	ldr	x0, [sp, #120]
  414618:	ldr	x2, [x0, #8]
  41461c:	ldr	x0, [x19, #8]
  414620:	ldr	w3, [x2, #24]
  414624:	add	x0, x0, #0xcc
  414628:	ldr	x1, [x2]
  41462c:	tbnz	w3, #31, 414748 <nftw@plt+0x11bc8>
  414630:	add	x3, x1, #0xf
  414634:	and	x3, x3, #0xfffffffffffffff8
  414638:	str	x3, [x2]
  41463c:	ldr	x2, [x1]
  414640:	adrp	x1, 473000 <_obstack_memory_used@@Base+0x11bb8>
  414644:	add	x1, x1, #0xfa8
  414648:	bl	4025b0 <sprintf@plt>
  41464c:	b	413d40 <nftw@plt+0x111c0>
  414650:	ldr	x0, [sp, #120]
  414654:	ldr	x2, [x0, #8]
  414658:	ldr	x0, [x19, #8]
  41465c:	ldr	w3, [x2, #24]
  414660:	add	x0, x0, #0xcc
  414664:	ldr	x1, [x2]
  414668:	tbnz	w3, #31, 41472c <nftw@plt+0x11bac>
  41466c:	add	x3, x1, #0xf
  414670:	and	x3, x3, #0xfffffffffffffff8
  414674:	str	x3, [x2]
  414678:	ldr	x2, [x1]
  41467c:	adrp	x1, 473000 <_obstack_memory_used@@Base+0x11bb8>
  414680:	add	x1, x1, #0xf88
  414684:	bl	4025b0 <sprintf@plt>
  414688:	b	413d40 <nftw@plt+0x111c0>
  41468c:	mov	x0, x25
  414690:	mov	x1, #0x1                   	// #1
  414694:	bl	461200 <_obstack_newchunk@@Base>
  414698:	ldr	x0, [x25, #24]
  41469c:	b	413e8c <nftw@plt+0x1130c>
  4146a0:	mov	x0, x25
  4146a4:	mov	x1, #0x1                   	// #1
  4146a8:	bl	461200 <_obstack_newchunk@@Base>
  4146ac:	ldr	x0, [x25, #24]
  4146b0:	b	413ee4 <nftw@plt+0x11364>
  4146b4:	ldr	w21, [sp, #160]
  4146b8:	b	413264 <nftw@plt+0x106e4>
  4146bc:	add	w4, w3, #0x8
  4146c0:	str	w4, [x2, #24]
  4146c4:	cmp	w4, #0x0
  4146c8:	b.gt	413dc0 <nftw@plt+0x11240>
  4146cc:	ldr	x1, [x2, #8]
  4146d0:	add	x1, x1, w3, sxtw
  4146d4:	b	413dcc <nftw@plt+0x1124c>
  4146d8:	add	w4, w3, #0x8
  4146dc:	str	w4, [x2, #24]
  4146e0:	cmp	w4, #0x0
  4146e4:	b.gt	413490 <nftw@plt+0x10910>
  4146e8:	ldr	x1, [x2, #8]
  4146ec:	add	x1, x1, w3, sxtw
  4146f0:	b	41349c <nftw@plt+0x1091c>
  4146f4:	add	w4, w3, #0x8
  4146f8:	str	w4, [x2, #24]
  4146fc:	cmp	w4, #0x0
  414700:	b.gt	413a4c <nftw@plt+0x10ecc>
  414704:	ldr	x1, [x2, #8]
  414708:	add	x1, x1, w3, sxtw
  41470c:	b	413a58 <nftw@plt+0x10ed8>
  414710:	add	w4, w3, #0x8
  414714:	str	w4, [x2, #24]
  414718:	cmp	w4, #0x0
  41471c:	b.gt	4137b4 <nftw@plt+0x10c34>
  414720:	ldr	x1, [x2, #8]
  414724:	add	x1, x1, w3, sxtw
  414728:	b	4137c0 <nftw@plt+0x10c40>
  41472c:	add	w4, w3, #0x8
  414730:	str	w4, [x2, #24]
  414734:	cmp	w4, #0x0
  414738:	b.gt	41466c <nftw@plt+0x11aec>
  41473c:	ldr	x1, [x2, #8]
  414740:	add	x1, x1, w3, sxtw
  414744:	b	414678 <nftw@plt+0x11af8>
  414748:	add	w4, w3, #0x8
  41474c:	str	w4, [x2, #24]
  414750:	cmp	w4, #0x0
  414754:	b.gt	414630 <nftw@plt+0x11ab0>
  414758:	ldr	x1, [x2, #8]
  41475c:	add	x1, x1, w3, sxtw
  414760:	b	41463c <nftw@plt+0x11abc>
  414764:	add	w4, w3, #0x8
  414768:	str	w4, [x2, #24]
  41476c:	cmp	w4, #0x0
  414770:	b.gt	4145f4 <nftw@plt+0x11a74>
  414774:	ldr	x1, [x2, #8]
  414778:	add	x1, x1, w3, sxtw
  41477c:	b	414600 <nftw@plt+0x11a80>
  414780:	add	w4, w3, #0x8
  414784:	str	w4, [x2, #24]
  414788:	cmp	w4, #0x0
  41478c:	b.gt	4145b8 <nftw@plt+0x11a38>
  414790:	ldr	x1, [x2, #8]
  414794:	add	x1, x1, w3, sxtw
  414798:	b	4145c4 <nftw@plt+0x11a44>
  41479c:	add	w4, w3, #0x8
  4147a0:	str	w4, [x2, #24]
  4147a4:	cmp	w4, #0x0
  4147a8:	b.gt	41457c <nftw@plt+0x119fc>
  4147ac:	ldr	x1, [x2, #8]
  4147b0:	add	x1, x1, w3, sxtw
  4147b4:	b	414588 <nftw@plt+0x11a08>
  4147b8:	add	w4, w3, #0x8
  4147bc:	str	w4, [x2, #24]
  4147c0:	cmp	w4, #0x0
  4147c4:	b.gt	414540 <nftw@plt+0x119c0>
  4147c8:	ldr	x1, [x2, #8]
  4147cc:	add	x1, x1, w3, sxtw
  4147d0:	b	41454c <nftw@plt+0x119cc>
  4147d4:	mov	x1, #0x1                   	// #1
  4147d8:	str	x0, [sp, #136]
  4147dc:	bl	461200 <_obstack_newchunk@@Base>
  4147e0:	ldr	x0, [sp, #136]
  4147e4:	ldr	x1, [x0, #24]
  4147e8:	b	414430 <nftw@plt+0x118b0>
  4147ec:	mov	x1, #0x1                   	// #1
  4147f0:	str	x0, [sp, #136]
  4147f4:	bl	461200 <_obstack_newchunk@@Base>
  4147f8:	ldr	x0, [sp, #136]
  4147fc:	ldr	x1, [x0, #24]
  414800:	b	4143dc <nftw@plt+0x1185c>
  414804:	mov	x4, x20
  414808:	b	413ccc <nftw@plt+0x1114c>
  41480c:	mov	x0, x3
  414810:	b	413610 <nftw@plt+0x10a90>
  414814:	adrp	x2, 473000 <_obstack_memory_used@@Base+0x11bb8>
  414818:	adrp	x0, 473000 <_obstack_memory_used@@Base+0x11bb8>
  41481c:	add	x2, x2, #0xf38
  414820:	add	x0, x0, #0xef0
  414824:	mov	w1, #0x56d                 	// #1389
  414828:	bl	402bf0 <nftw@plt+0x70>
  41482c:	adrp	x2, 473000 <_obstack_memory_used@@Base+0x11bb8>
  414830:	adrp	x0, 473000 <_obstack_memory_used@@Base+0x11bb8>
  414834:	add	x2, x2, #0xf38
  414838:	add	x0, x0, #0xef0
  41483c:	mov	w1, #0x4a4                 	// #1188
  414840:	bl	402bf0 <nftw@plt+0x70>
  414844:	adrp	x2, 473000 <_obstack_memory_used@@Base+0x11bb8>
  414848:	adrp	x0, 473000 <_obstack_memory_used@@Base+0x11bb8>
  41484c:	add	x2, x2, #0xf38
  414850:	add	x0, x0, #0xef0
  414854:	mov	w1, #0x450                 	// #1104
  414858:	bl	402bf0 <nftw@plt+0x70>
  41485c:	adrp	x2, 473000 <_obstack_memory_used@@Base+0x11bb8>
  414860:	adrp	x0, 473000 <_obstack_memory_used@@Base+0x11bb8>
  414864:	add	x2, x2, #0xf38
  414868:	add	x0, x0, #0xef0
  41486c:	mov	w1, #0x466                 	// #1126
  414870:	bl	402bf0 <nftw@plt+0x70>
  414874:	adrp	x2, 473000 <_obstack_memory_used@@Base+0x11bb8>
  414878:	adrp	x0, 473000 <_obstack_memory_used@@Base+0x11bb8>
  41487c:	add	x2, x2, #0xf38
  414880:	add	x0, x0, #0xef0
  414884:	mov	w1, #0x464                 	// #1124
  414888:	bl	402bf0 <nftw@plt+0x70>
  41488c:	adrp	x2, 473000 <_obstack_memory_used@@Base+0x11bb8>
  414890:	adrp	x0, 473000 <_obstack_memory_used@@Base+0x11bb8>
  414894:	add	x2, x2, #0xf38
  414898:	add	x0, x0, #0xef0
  41489c:	mov	w1, #0x4dc                 	// #1244
  4148a0:	bl	402bf0 <nftw@plt+0x70>
  4148a4:	adrp	x2, 473000 <_obstack_memory_used@@Base+0x11bb8>
  4148a8:	adrp	x0, 473000 <_obstack_memory_used@@Base+0x11bb8>
  4148ac:	add	x2, x2, #0xf38
  4148b0:	add	x0, x0, #0xef0
  4148b4:	mov	w1, #0x48b                 	// #1163
  4148b8:	bl	402bf0 <nftw@plt+0x70>
  4148bc:	adrp	x2, 473000 <_obstack_memory_used@@Base+0x11bb8>
  4148c0:	adrp	x0, 473000 <_obstack_memory_used@@Base+0x11bb8>
  4148c4:	add	x2, x2, #0xf38
  4148c8:	add	x0, x0, #0xef0
  4148cc:	mov	w1, #0x48a                 	// #1162
  4148d0:	bl	402bf0 <nftw@plt+0x70>
  4148d4:	adrp	x2, 473000 <_obstack_memory_used@@Base+0x11bb8>
  4148d8:	adrp	x0, 473000 <_obstack_memory_used@@Base+0x11bb8>
  4148dc:	add	x2, x2, #0xf38
  4148e0:	add	x0, x0, #0xef0
  4148e4:	mov	w1, #0x489                 	// #1161
  4148e8:	bl	402bf0 <nftw@plt+0x70>
  4148ec:	adrp	x2, 473000 <_obstack_memory_used@@Base+0x11bb8>
  4148f0:	adrp	x0, 473000 <_obstack_memory_used@@Base+0x11bb8>
  4148f4:	add	x2, x2, #0xf38
  4148f8:	add	x0, x0, #0xef0
  4148fc:	mov	w1, #0x4ca                 	// #1226
  414900:	bl	402bf0 <nftw@plt+0x70>
  414904:	adrp	x2, 473000 <_obstack_memory_used@@Base+0x11bb8>
  414908:	adrp	x0, 473000 <_obstack_memory_used@@Base+0x11bb8>
  41490c:	add	x2, x2, #0xf38
  414910:	add	x0, x0, #0xef0
  414914:	mov	w1, #0x480                 	// #1152
  414918:	bl	402bf0 <nftw@plt+0x70>
  41491c:	adrp	x2, 473000 <_obstack_memory_used@@Base+0x11bb8>
  414920:	adrp	x0, 473000 <_obstack_memory_used@@Base+0x11bb8>
  414924:	add	x2, x2, #0xf38
  414928:	add	x0, x0, #0xef0
  41492c:	mov	w1, #0x555                 	// #1365
  414930:	bl	402bf0 <nftw@plt+0x70>
  414934:	adrp	x2, 473000 <_obstack_memory_used@@Base+0x11bb8>
  414938:	adrp	x0, 473000 <_obstack_memory_used@@Base+0x11bb8>
  41493c:	add	x2, x2, #0xf38
  414940:	add	x0, x0, #0xef0
  414944:	mov	w1, #0x492                 	// #1170
  414948:	bl	402bf0 <nftw@plt+0x70>
  41494c:	adrp	x2, 473000 <_obstack_memory_used@@Base+0x11bb8>
  414950:	adrp	x0, 473000 <_obstack_memory_used@@Base+0x11bb8>
  414954:	add	x2, x2, #0xf38
  414958:	add	x0, x0, #0xef0
  41495c:	mov	w1, #0x496                 	// #1174
  414960:	bl	402bf0 <nftw@plt+0x70>
  414964:	adrp	x2, 473000 <_obstack_memory_used@@Base+0x11bb8>
  414968:	adrp	x0, 473000 <_obstack_memory_used@@Base+0x11bb8>
  41496c:	add	x2, x2, #0xf38
  414970:	add	x0, x0, #0xef0
  414974:	mov	w1, #0x4c0                 	// #1216
  414978:	bl	402bf0 <nftw@plt+0x70>
  41497c:	adrp	x2, 473000 <_obstack_memory_used@@Base+0x11bb8>
  414980:	adrp	x0, 473000 <_obstack_memory_used@@Base+0x11bb8>
  414984:	add	x2, x2, #0xf38
  414988:	add	x0, x0, #0xef0
  41498c:	mov	w1, #0x4d5                 	// #1237
  414990:	bl	402bf0 <nftw@plt+0x70>
  414994:	adrp	x2, 473000 <_obstack_memory_used@@Base+0x11bb8>
  414998:	adrp	x0, 473000 <_obstack_memory_used@@Base+0x11bb8>
  41499c:	add	x2, x2, #0xf38
  4149a0:	add	x0, x0, #0xef0
  4149a4:	mov	w1, #0x54f                 	// #1359
  4149a8:	bl	402bf0 <nftw@plt+0x70>
  4149ac:	adrp	x2, 473000 <_obstack_memory_used@@Base+0x11bb8>
  4149b0:	adrp	x0, 473000 <_obstack_memory_used@@Base+0x11bb8>
  4149b4:	add	x2, x2, #0xf38
  4149b8:	add	x0, x0, #0xef0
  4149bc:	mov	w1, #0x551                 	// #1361
  4149c0:	bl	402bf0 <nftw@plt+0x70>
  4149c4:	adrp	x2, 473000 <_obstack_memory_used@@Base+0x11bb8>
  4149c8:	adrp	x0, 473000 <_obstack_memory_used@@Base+0x11bb8>
  4149cc:	add	x2, x2, #0xf38
  4149d0:	add	x0, x0, #0xef0
  4149d4:	mov	w1, #0x41e                 	// #1054
  4149d8:	bl	402bf0 <nftw@plt+0x70>
  4149dc:	adrp	x2, 473000 <_obstack_memory_used@@Base+0x11bb8>
  4149e0:	adrp	x0, 473000 <_obstack_memory_used@@Base+0x11bb8>
  4149e4:	add	x2, x2, #0xf38
  4149e8:	add	x0, x0, #0xef0
  4149ec:	mov	w1, #0x45e                 	// #1118
  4149f0:	bl	402bf0 <nftw@plt+0x70>
  4149f4:	adrp	x2, 473000 <_obstack_memory_used@@Base+0x11bb8>
  4149f8:	adrp	x0, 473000 <_obstack_memory_used@@Base+0x11bb8>
  4149fc:	add	x2, x2, #0xf38
  414a00:	add	x0, x0, #0xef0
  414a04:	mov	w1, #0x4cf                 	// #1231
  414a08:	bl	402bf0 <nftw@plt+0x70>
  414a0c:	adrp	x2, 473000 <_obstack_memory_used@@Base+0x11bb8>
  414a10:	adrp	x0, 473000 <_obstack_memory_used@@Base+0x11bb8>
  414a14:	add	x2, x2, #0xf38
  414a18:	add	x0, x0, #0xef0
  414a1c:	mov	w1, #0x4c5                 	// #1221
  414a20:	bl	402bf0 <nftw@plt+0x70>
  414a24:	adrp	x2, 473000 <_obstack_memory_used@@Base+0x11bb8>
  414a28:	adrp	x0, 473000 <_obstack_memory_used@@Base+0x11bb8>
  414a2c:	add	x2, x2, #0xf38
  414a30:	add	x0, x0, #0xef0
  414a34:	mov	w1, #0x45a                 	// #1114
  414a38:	bl	402bf0 <nftw@plt+0x70>
  414a3c:	adrp	x2, 473000 <_obstack_memory_used@@Base+0x11bb8>
  414a40:	adrp	x0, 473000 <_obstack_memory_used@@Base+0x11bb8>
  414a44:	add	x2, x2, #0xf38
  414a48:	add	x0, x0, #0xef0
  414a4c:	mov	w1, #0x467                 	// #1127
  414a50:	bl	402bf0 <nftw@plt+0x70>
  414a54:	adrp	x2, 473000 <_obstack_memory_used@@Base+0x11bb8>
  414a58:	adrp	x0, 473000 <_obstack_memory_used@@Base+0x11bb8>
  414a5c:	add	x2, x2, #0xf38
  414a60:	add	x0, x0, #0xef0
  414a64:	mov	w1, #0x54b                 	// #1355
  414a68:	bl	402bf0 <nftw@plt+0x70>
  414a6c:	nop
  414a70:	stp	x29, x30, [sp, #-32]!
  414a74:	mov	x2, #0x1                   	// #1
  414a78:	mov	x29, sp
  414a7c:	stp	x19, x20, [sp, #16]
  414a80:	mov	x19, x0
  414a84:	ldur	x20, [x0, #36]
  414a88:	stur	x2, [x0, #36]
  414a8c:	bl	413088 <nftw@plt+0x10508>
  414a90:	mov	x0, x19
  414a94:	bl	412d90 <nftw@plt+0x10210>
  414a98:	stur	x20, [x19, #36]
  414a9c:	ldp	x19, x20, [sp, #16]
  414aa0:	ldp	x29, x30, [sp], #32
  414aa4:	ret
  414aa8:	stp	x29, x30, [sp, #-288]!
  414aac:	mov	x29, sp
  414ab0:	add	x8, sp, #0xf0
  414ab4:	add	x9, sp, #0x120
  414ab8:	stp	x19, x20, [sp, #16]
  414abc:	mov	x19, x0
  414ac0:	mov	x20, x1
  414ac4:	mov	w0, #0xffffff80            	// #-128
  414ac8:	mov	w1, #0xffffffd0            	// #-48
  414acc:	stp	x9, x9, [sp, #40]
  414ad0:	str	x8, [sp, #56]
  414ad4:	stp	w1, w0, [sp, #64]
  414ad8:	str	q0, [sp, #112]
  414adc:	str	q1, [sp, #128]
  414ae0:	str	q2, [sp, #144]
  414ae4:	str	q3, [sp, #160]
  414ae8:	str	q4, [sp, #176]
  414aec:	str	q5, [sp, #192]
  414af0:	str	q6, [sp, #208]
  414af4:	str	q7, [sp, #224]
  414af8:	stp	x2, x3, [sp, #240]
  414afc:	stp	x4, x5, [sp, #256]
  414b00:	stp	x6, x7, [sp, #272]
  414b04:	bl	402aa0 <__errno_location@plt>
  414b08:	mov	x2, x0
  414b0c:	add	x3, sp, #0x28
  414b10:	add	x1, sp, #0x48
  414b14:	mov	x0, x19
  414b18:	stp	x20, x3, [sp, #72]
  414b1c:	ldr	w2, [x2]
  414b20:	str	w2, [sp, #88]
  414b24:	bl	413088 <nftw@plt+0x10508>
  414b28:	mov	x0, x19
  414b2c:	bl	412d90 <nftw@plt+0x10210>
  414b30:	ldp	x19, x20, [sp, #16]
  414b34:	ldp	x29, x30, [sp], #288
  414b38:	ret
  414b3c:	nop
  414b40:	stp	x29, x30, [sp, #-304]!
  414b44:	mov	x29, sp
  414b48:	add	x8, sp, #0x100
  414b4c:	add	x9, sp, #0x130
  414b50:	stp	x19, x20, [sp, #16]
  414b54:	mov	x19, x0
  414b58:	mov	x20, x1
  414b5c:	mov	w0, #0xffffff80            	// #-128
  414b60:	mov	w1, #0xffffffd0            	// #-48
  414b64:	str	x21, [sp, #32]
  414b68:	stp	x9, x9, [sp, #56]
  414b6c:	str	x8, [sp, #72]
  414b70:	stp	w1, w0, [sp, #80]
  414b74:	str	q0, [sp, #128]
  414b78:	str	q1, [sp, #144]
  414b7c:	str	q2, [sp, #160]
  414b80:	str	q3, [sp, #176]
  414b84:	str	q4, [sp, #192]
  414b88:	str	q5, [sp, #208]
  414b8c:	str	q6, [sp, #224]
  414b90:	str	q7, [sp, #240]
  414b94:	stp	x2, x3, [sp, #256]
  414b98:	stp	x4, x5, [sp, #272]
  414b9c:	stp	x6, x7, [sp, #288]
  414ba0:	bl	402aa0 <__errno_location@plt>
  414ba4:	mov	x2, x0
  414ba8:	add	x3, sp, #0x38
  414bac:	add	x1, sp, #0x58
  414bb0:	mov	x4, #0x1                   	// #1
  414bb4:	mov	x0, x19
  414bb8:	ldr	w2, [x2]
  414bbc:	ldur	x21, [x19, #36]
  414bc0:	stur	x4, [x19, #36]
  414bc4:	stp	x20, x3, [sp, #88]
  414bc8:	str	w2, [sp, #104]
  414bcc:	bl	413088 <nftw@plt+0x10508>
  414bd0:	mov	x0, x19
  414bd4:	bl	412d90 <nftw@plt+0x10210>
  414bd8:	stur	x21, [x19, #36]
  414bdc:	ldp	x19, x20, [sp, #16]
  414be0:	ldr	x21, [sp, #32]
  414be4:	ldp	x29, x30, [sp], #304
  414be8:	ret
  414bec:	nop
  414bf0:	stp	x29, x30, [sp, #-32]!
  414bf4:	mov	x29, sp
  414bf8:	stp	x19, x20, [sp, #16]
  414bfc:	mov	x20, x0
  414c00:	mov	x19, x1
  414c04:	mov	x0, x1
  414c08:	bl	4024f0 <strlen@plt>
  414c0c:	ldr	w1, [x20, #40]
  414c10:	add	x2, x19, x0
  414c14:	mov	x0, x20
  414c18:	cmp	w1, #0x0
  414c1c:	mov	x1, x19
  414c20:	b.le	414c30 <nftw@plt+0x120b0>
  414c24:	ldp	x19, x20, [sp, #16]
  414c28:	ldp	x29, x30, [sp], #32
  414c2c:	b	4129e8 <nftw@plt+0xfe68>
  414c30:	ldp	x19, x20, [sp, #16]
  414c34:	ldp	x29, x30, [sp], #32
  414c38:	b	4128d0 <nftw@plt+0xfd50>
  414c3c:	nop
  414c40:	stp	x29, x30, [sp, #-32]!
  414c44:	mov	x29, sp
  414c48:	stp	x19, x20, [sp, #16]
  414c4c:	mov	x19, x0
  414c50:	ldr	w0, [x0, #24]
  414c54:	cbnz	w0, 414c64 <nftw@plt+0x120e4>
  414c58:	ldp	x19, x20, [sp, #16]
  414c5c:	ldp	x29, x30, [sp], #32
  414c60:	ret
  414c64:	ldr	x1, [x19, #8]
  414c68:	ldr	w0, [x19, #40]
  414c6c:	ldr	x20, [x1, #176]
  414c70:	cmp	w0, #0x0
  414c74:	ldp	x0, x3, [x20, #24]
  414c78:	b.le	414c90 <nftw@plt+0x12110>
  414c7c:	ldr	w1, [x1, #200]
  414c80:	ldr	w2, [x19, #28]
  414c84:	sub	w1, w2, w1
  414c88:	cmp	w1, #0x0
  414c8c:	b.le	414cdc <nftw@plt+0x1215c>
  414c90:	cmp	x3, x0
  414c94:	b.eq	414cc8 <nftw@plt+0x12148>  // b.none
  414c98:	add	x1, x0, #0x1
  414c9c:	str	x1, [x20, #24]
  414ca0:	mov	w1, #0x20                  	// #32
  414ca4:	strb	w1, [x0]
  414ca8:	ldr	x1, [x19, #8]
  414cac:	ldr	w0, [x1, #200]
  414cb0:	add	w0, w0, #0x1
  414cb4:	str	w0, [x1, #200]
  414cb8:	str	wzr, [x19, #24]
  414cbc:	ldp	x19, x20, [sp, #16]
  414cc0:	ldp	x29, x30, [sp], #32
  414cc4:	ret
  414cc8:	mov	x0, x20
  414ccc:	mov	x1, #0x1                   	// #1
  414cd0:	bl	461200 <_obstack_newchunk@@Base>
  414cd4:	ldr	x0, [x20, #24]
  414cd8:	b	414c98 <nftw@plt+0x12118>
  414cdc:	cmp	x3, x0
  414ce0:	b.eq	414d18 <nftw@plt+0x12198>  // b.none
  414ce4:	add	x1, x0, #0x1
  414ce8:	str	x1, [x20, #24]
  414cec:	mov	w1, #0xa                   	// #10
  414cf0:	strb	w1, [x0]
  414cf4:	adrp	x1, 481000 <_obstack_memory_used@@Base+0x1fbb8>
  414cf8:	strb	wzr, [x19, #65]
  414cfc:	ldr	x0, [x19, #8]
  414d00:	ldrh	w1, [x1, #2864]
  414d04:	str	wzr, [x0, #200]
  414d08:	tbnz	w1, #6, 414cb8 <nftw@plt+0x12138>
  414d0c:	ldr	x20, [x0, #176]
  414d10:	ldp	x0, x3, [x20, #24]
  414d14:	b	414c90 <nftw@plt+0x12110>
  414d18:	mov	x0, x20
  414d1c:	mov	x1, #0x1                   	// #1
  414d20:	bl	461200 <_obstack_newchunk@@Base>
  414d24:	ldr	x0, [x20, #24]
  414d28:	b	414ce4 <nftw@plt+0x12164>
  414d2c:	nop
  414d30:	stp	x29, x30, [sp, #-32]!
  414d34:	mov	x29, sp
  414d38:	stp	x19, x20, [sp, #16]
  414d3c:	mov	x19, x0
  414d40:	ldr	x0, [x0, #8]
  414d44:	ldr	x20, [x0, #176]
  414d48:	ldp	x0, x1, [x20, #24]
  414d4c:	cmp	x1, x0
  414d50:	b.eq	414da4 <nftw@plt+0x12224>  // b.none
  414d54:	add	x1, x0, #0x1
  414d58:	str	x1, [x20, #24]
  414d5c:	mov	w1, #0xa                   	// #10
  414d60:	strb	w1, [x0]
  414d64:	strb	wzr, [x19, #65]
  414d68:	ldr	x0, [x19, #8]
  414d6c:	str	wzr, [x0, #200]
  414d70:	strb	wzr, [x19, #64]
  414d74:	ldrb	w0, [x0, #332]
  414d78:	str	wzr, [x19, #32]
  414d7c:	cbz	w0, 414d94 <nftw@plt+0x12214>
  414d80:	mov	x0, x19
  414d84:	bl	411f68 <nftw@plt+0xf3e8>
  414d88:	ldr	x0, [x19, #8]
  414d8c:	ldr	x0, [x0, #192]
  414d90:	bl	402980 <fflush@plt>
  414d94:	strb	wzr, [x19, #65]
  414d98:	ldp	x19, x20, [sp, #16]
  414d9c:	ldp	x29, x30, [sp], #32
  414da0:	ret
  414da4:	mov	x0, x20
  414da8:	mov	x1, #0x1                   	// #1
  414dac:	bl	461200 <_obstack_newchunk@@Base>
  414db0:	ldr	x0, [x20, #24]
  414db4:	b	414d54 <nftw@plt+0x121d4>
  414db8:	stp	x29, x30, [sp, #-80]!
  414dbc:	mov	x29, sp
  414dc0:	ldr	x2, [x0, #8]
  414dc4:	stp	x19, x20, [sp, #16]
  414dc8:	mov	x20, x0
  414dcc:	ldr	w0, [x0, #32]
  414dd0:	ldr	x19, [x2, #176]
  414dd4:	add	w0, w0, w1
  414dd8:	stp	x21, x22, [sp, #32]
  414ddc:	stp	x23, x24, [sp, #48]
  414de0:	ldr	x1, [x19, #32]
  414de4:	str	w0, [x20, #32]
  414de8:	ldr	x0, [x19, #24]
  414dec:	cmp	x1, x0
  414df0:	b.eq	414f04 <nftw@plt+0x12384>  // b.none
  414df4:	add	x1, x0, #0x1
  414df8:	str	x1, [x19, #24]
  414dfc:	mov	w22, #0xa                   	// #10
  414e00:	strb	w22, [x0]
  414e04:	strb	wzr, [x20, #65]
  414e08:	mov	w21, #0x0                   	// #0
  414e0c:	ldr	x1, [x20, #8]
  414e10:	str	wzr, [x1, #200]
  414e14:	ldr	w24, [x20, #32]
  414e18:	cmp	w24, #0x0
  414e1c:	b.le	414ed8 <nftw@plt+0x12358>
  414e20:	adrp	x23, 481000 <_obstack_memory_used@@Base+0x1fbb8>
  414e24:	add	x23, x23, #0xaf0
  414e28:	str	x25, [sp, #64]
  414e2c:	mov	w25, #0x20                  	// #32
  414e30:	b	414e58 <nftw@plt+0x122d8>
  414e34:	add	x0, x2, #0x1
  414e38:	str	x0, [x19, #24]
  414e3c:	strb	w25, [x2]
  414e40:	ldr	x1, [x20, #8]
  414e44:	ldr	w0, [x1, #200]
  414e48:	add	w0, w0, #0x1
  414e4c:	str	w0, [x1, #200]
  414e50:	cmp	w24, w21
  414e54:	b.eq	414ed4 <nftw@plt+0x12354>  // b.none
  414e58:	ldr	x19, [x1, #176]
  414e5c:	add	w21, w21, #0x1
  414e60:	ldr	w0, [x20, #40]
  414e64:	cmp	w0, #0x0
  414e68:	ldp	x2, x3, [x19, #24]
  414e6c:	b.le	414e84 <nftw@plt+0x12304>
  414e70:	ldr	w1, [x1, #200]
  414e74:	ldr	w0, [x20, #28]
  414e78:	sub	w0, w0, w1
  414e7c:	cmp	w0, #0x0
  414e80:	b.le	414ea0 <nftw@plt+0x12320>
  414e84:	cmp	x3, x2
  414e88:	b.ne	414e34 <nftw@plt+0x122b4>  // b.any
  414e8c:	mov	x0, x19
  414e90:	mov	x1, #0x1                   	// #1
  414e94:	bl	461200 <_obstack_newchunk@@Base>
  414e98:	ldr	x2, [x19, #24]
  414e9c:	b	414e34 <nftw@plt+0x122b4>
  414ea0:	cmp	x3, x2
  414ea4:	b.eq	414ef0 <nftw@plt+0x12370>  // b.none
  414ea8:	add	x1, x2, #0x1
  414eac:	str	x1, [x19, #24]
  414eb0:	strb	w22, [x2]
  414eb4:	ldrh	w0, [x23, #64]
  414eb8:	ldr	x1, [x20, #8]
  414ebc:	strb	wzr, [x20, #65]
  414ec0:	str	wzr, [x1, #200]
  414ec4:	tbnz	w0, #6, 414e50 <nftw@plt+0x122d0>
  414ec8:	ldr	x19, [x1, #176]
  414ecc:	ldp	x2, x3, [x19, #24]
  414ed0:	b	414e84 <nftw@plt+0x12304>
  414ed4:	ldr	x25, [sp, #64]
  414ed8:	strb	wzr, [x20, #65]
  414edc:	ldp	x19, x20, [sp, #16]
  414ee0:	ldp	x21, x22, [sp, #32]
  414ee4:	ldp	x23, x24, [sp, #48]
  414ee8:	ldp	x29, x30, [sp], #80
  414eec:	ret
  414ef0:	mov	x0, x19
  414ef4:	mov	x1, #0x1                   	// #1
  414ef8:	bl	461200 <_obstack_newchunk@@Base>
  414efc:	ldr	x2, [x19, #24]
  414f00:	b	414ea8 <nftw@plt+0x12328>
  414f04:	mov	x0, x19
  414f08:	mov	x1, #0x1                   	// #1
  414f0c:	bl	461200 <_obstack_newchunk@@Base>
  414f10:	ldr	x0, [x19, #24]
  414f14:	b	414df4 <nftw@plt+0x12274>
  414f18:	stp	x29, x30, [sp, #-48]!
  414f1c:	mov	x29, sp
  414f20:	str	x21, [sp, #32]
  414f24:	and	w21, w1, #0xff
  414f28:	ldr	x1, [x0, #8]
  414f2c:	stp	x19, x20, [sp, #16]
  414f30:	mov	x19, x0
  414f34:	ldr	w0, [x0, #40]
  414f38:	ldr	x20, [x1, #176]
  414f3c:	cmp	w0, #0x0
  414f40:	ldp	x0, x3, [x20, #24]
  414f44:	b.le	414f5c <nftw@plt+0x123dc>
  414f48:	ldr	w1, [x1, #200]
  414f4c:	ldr	w2, [x19, #28]
  414f50:	sub	w1, w2, w1
  414f54:	cmp	w1, #0x0
  414f58:	b.le	415018 <nftw@plt+0x12498>
  414f5c:	cmp	x3, x0
  414f60:	b.eq	415070 <nftw@plt+0x124f0>  // b.none
  414f64:	add	x1, x0, #0x1
  414f68:	str	x1, [x20, #24]
  414f6c:	strb	w21, [x0]
  414f70:	ldr	x0, [x19, #8]
  414f74:	ldr	w1, [x0, #200]
  414f78:	add	w1, w1, #0x1
  414f7c:	str	w1, [x0, #200]
  414f80:	ldr	x20, [x0, #176]
  414f84:	ldr	w0, [x19, #40]
  414f88:	cmp	w0, #0x0
  414f8c:	ldp	x0, x3, [x20, #24]
  414f90:	b.le	414fa4 <nftw@plt+0x12424>
  414f94:	ldr	w2, [x19, #28]
  414f98:	sub	w1, w2, w1
  414f9c:	cmp	w1, #0x0
  414fa0:	b.le	414fdc <nftw@plt+0x1245c>
  414fa4:	cmp	x3, x0
  414fa8:	b.eq	41505c <nftw@plt+0x124dc>  // b.none
  414fac:	add	x1, x0, #0x1
  414fb0:	str	x1, [x20, #24]
  414fb4:	mov	w1, #0x20                  	// #32
  414fb8:	strb	w1, [x0]
  414fbc:	ldr	x1, [x19, #8]
  414fc0:	ldr	w0, [x1, #200]
  414fc4:	add	w0, w0, #0x1
  414fc8:	str	w0, [x1, #200]
  414fcc:	ldp	x19, x20, [sp, #16]
  414fd0:	ldr	x21, [sp, #32]
  414fd4:	ldp	x29, x30, [sp], #48
  414fd8:	ret
  414fdc:	cmp	x3, x0
  414fe0:	b.eq	415084 <nftw@plt+0x12504>  // b.none
  414fe4:	add	x1, x0, #0x1
  414fe8:	str	x1, [x20, #24]
  414fec:	mov	w1, #0xa                   	// #10
  414ff0:	strb	w1, [x0]
  414ff4:	adrp	x1, 481000 <_obstack_memory_used@@Base+0x1fbb8>
  414ff8:	strb	wzr, [x19, #65]
  414ffc:	ldr	x0, [x19, #8]
  415000:	ldrh	w1, [x1, #2864]
  415004:	str	wzr, [x0, #200]
  415008:	tbnz	w1, #6, 414fcc <nftw@plt+0x1244c>
  41500c:	ldr	x20, [x0, #176]
  415010:	ldp	x0, x3, [x20, #24]
  415014:	b	414fa4 <nftw@plt+0x12424>
  415018:	cmp	x3, x0
  41501c:	b.eq	415098 <nftw@plt+0x12518>  // b.none
  415020:	add	x1, x0, #0x1
  415024:	str	x1, [x20, #24]
  415028:	mov	w1, #0xa                   	// #10
  41502c:	strb	w1, [x0]
  415030:	adrp	x2, 481000 <_obstack_memory_used@@Base+0x1fbb8>
  415034:	add	x2, x2, #0xaf0
  415038:	ldr	x0, [x19, #8]
  41503c:	strb	wzr, [x19, #65]
  415040:	ldrh	w2, [x2, w21, sxtw #1]
  415044:	mov	w1, #0x0                   	// #0
  415048:	str	wzr, [x0, #200]
  41504c:	tbnz	w2, #6, 414f80 <nftw@plt+0x12400>
  415050:	ldr	x20, [x0, #176]
  415054:	ldp	x0, x3, [x20, #24]
  415058:	b	414f5c <nftw@plt+0x123dc>
  41505c:	mov	x0, x20
  415060:	mov	x1, #0x1                   	// #1
  415064:	bl	461200 <_obstack_newchunk@@Base>
  415068:	ldr	x0, [x20, #24]
  41506c:	b	414fac <nftw@plt+0x1242c>
  415070:	mov	x0, x20
  415074:	mov	x1, #0x1                   	// #1
  415078:	bl	461200 <_obstack_newchunk@@Base>
  41507c:	ldr	x0, [x20, #24]
  415080:	b	414f64 <nftw@plt+0x123e4>
  415084:	mov	x0, x20
  415088:	mov	x1, #0x1                   	// #1
  41508c:	bl	461200 <_obstack_newchunk@@Base>
  415090:	ldr	x0, [x20, #24]
  415094:	b	414fe4 <nftw@plt+0x12464>
  415098:	mov	x0, x20
  41509c:	mov	x1, #0x1                   	// #1
  4150a0:	bl	461200 <_obstack_newchunk@@Base>
  4150a4:	ldr	x0, [x20, #24]
  4150a8:	b	415020 <nftw@plt+0x124a0>
  4150ac:	nop
  4150b0:	stp	x29, x30, [sp, #-48]!
  4150b4:	adrp	x2, 4a4000 <_obstack_memory_used@@Base+0x42bb8>
  4150b8:	mov	x29, sp
  4150bc:	stp	x19, x20, [sp, #16]
  4150c0:	mov	x19, x0
  4150c4:	ldr	x20, [x2, #1304]
  4150c8:	str	x21, [sp, #32]
  4150cc:	and	w21, w1, #0xff
  4150d0:	mov	x0, x20
  4150d4:	bl	4024f0 <strlen@plt>
  4150d8:	ldr	w1, [x19, #40]
  4150dc:	add	x2, x20, x0
  4150e0:	mov	x0, x19
  4150e4:	cmp	w1, #0x0
  4150e8:	mov	x1, x20
  4150ec:	b.le	415138 <nftw@plt+0x125b8>
  4150f0:	bl	4129e8 <nftw@plt+0xfe68>
  4150f4:	adrp	x1, 473000 <_obstack_memory_used@@Base+0x11bb8>
  4150f8:	add	x1, x1, #0xb98
  4150fc:	mov	x2, #0x5                   	// #5
  415100:	mov	w0, w21
  415104:	bl	40be18 <nftw@plt+0x9298>
  415108:	mov	x20, x0
  41510c:	bl	4024f0 <strlen@plt>
  415110:	add	x2, x20, x0
  415114:	ldr	w1, [x19, #40]
  415118:	mov	x0, x19
  41511c:	cmp	w1, #0x0
  415120:	mov	x1, x20
  415124:	b.le	415140 <nftw@plt+0x125c0>
  415128:	ldp	x19, x20, [sp, #16]
  41512c:	ldr	x21, [sp, #32]
  415130:	ldp	x29, x30, [sp], #48
  415134:	b	4129e8 <nftw@plt+0xfe68>
  415138:	bl	4128d0 <nftw@plt+0xfd50>
  41513c:	b	4150f4 <nftw@plt+0x12574>
  415140:	ldp	x19, x20, [sp, #16]
  415144:	ldr	x21, [sp, #32]
  415148:	ldp	x29, x30, [sp], #48
  41514c:	b	4128d0 <nftw@plt+0xfd50>
  415150:	stp	x29, x30, [sp, #-32]!
  415154:	mov	x29, sp
  415158:	stp	x19, x20, [sp, #16]
  41515c:	mov	x19, x0
  415160:	mov	w0, w1
  415164:	bl	40bea8 <nftw@plt+0x9328>
  415168:	mov	x20, x0
  41516c:	bl	4024f0 <strlen@plt>
  415170:	add	x2, x20, x0
  415174:	ldr	w1, [x19, #40]
  415178:	mov	x0, x19
  41517c:	cmp	w1, #0x0
  415180:	mov	x1, x20
  415184:	b.le	4151c0 <nftw@plt+0x12640>
  415188:	bl	4129e8 <nftw@plt+0xfe68>
  41518c:	adrp	x0, 4a4000 <_obstack_memory_used@@Base+0x42bb8>
  415190:	ldr	x20, [x0, #1312]
  415194:	mov	x0, x20
  415198:	bl	4024f0 <strlen@plt>
  41519c:	ldr	w1, [x19, #40]
  4151a0:	add	x2, x20, x0
  4151a4:	mov	x0, x19
  4151a8:	cmp	w1, #0x0
  4151ac:	mov	x1, x20
  4151b0:	b.le	4151c8 <nftw@plt+0x12648>
  4151b4:	ldp	x19, x20, [sp, #16]
  4151b8:	ldp	x29, x30, [sp], #32
  4151bc:	b	4129e8 <nftw@plt+0xfe68>
  4151c0:	bl	4128d0 <nftw@plt+0xfd50>
  4151c4:	b	41518c <nftw@plt+0x1260c>
  4151c8:	ldp	x19, x20, [sp, #16]
  4151cc:	ldp	x29, x30, [sp], #32
  4151d0:	b	4128d0 <nftw@plt+0xfd50>
  4151d4:	nop
  4151d8:	stp	x29, x30, [sp, #-112]!
  4151dc:	mov	x29, sp
  4151e0:	stp	x19, x20, [sp, #16]
  4151e4:	mov	x20, x0
  4151e8:	stp	x21, x22, [sp, #32]
  4151ec:	bl	4024f0 <strlen@plt>
  4151f0:	cbz	x0, 41554c <nftw@plt+0x129cc>
  4151f4:	ldrb	w2, [x20]
  4151f8:	mov	x19, x0
  4151fc:	mov	x6, x19
  415200:	mov	w0, #0x1                   	// #1
  415204:	mov	w3, w2
  415208:	mov	w9, w0
  41520c:	mov	x5, x20
  415210:	mov	x7, #0x0                   	// #0
  415214:	mov	w8, #0x7                   	// #7
  415218:	mov	w11, #0x1fffff              	// #2097151
  41521c:	mov	w12, #0x3ffffff             	// #67108863
  415220:	mov	w13, #0xffff2800            	// #-55296
  415224:	mov	w10, #0xffff                	// #65535
  415228:	tbz	w2, #7, 415400 <nftw@plt+0x12880>
  41522c:	mov	x1, #0x0                   	// #0
  415230:	mov	x4, x1
  415234:	lsl	w3, w3, #1
  415238:	add	x1, x1, #0x1
  41523c:	tbnz	w3, #7, 415230 <nftw@plt+0x126b0>
  415240:	sub	x4, x4, #0x1
  415244:	cmp	x4, #0x4
  415248:	ccmp	x1, x6, #0x2, ls  // ls = plast
  41524c:	b.hi	415370 <nftw@plt+0x127f0>  // b.pmore
  415250:	ldrb	w3, [x5, #1]
  415254:	sub	w4, w8, w1
  415258:	and	w0, w3, #0xc0
  41525c:	lsl	w4, w9, w4
  415260:	sub	w4, w4, #0x1
  415264:	cmp	w0, #0x80
  415268:	and	w2, w4, w2
  41526c:	b.ne	415370 <nftw@plt+0x127f0>  // b.any
  415270:	bfi	w3, w2, #6, #26
  415274:	cmp	x1, #0x2
  415278:	mov	w2, w3
  41527c:	b.ls	415764 <nftw@plt+0x12be4>  // b.plast
  415280:	ldrb	w0, [x5, #2]
  415284:	and	w3, w0, #0xc0
  415288:	cmp	w3, #0x80
  41528c:	b.ne	415370 <nftw@plt+0x127f0>  // b.any
  415290:	bfi	w0, w2, #6, #26
  415294:	cmp	x1, #0x3
  415298:	mov	w2, w0
  41529c:	b.eq	415318 <nftw@plt+0x12798>  // b.none
  4152a0:	ldrb	w0, [x5, #3]
  4152a4:	and	w3, w0, #0xc0
  4152a8:	cmp	w3, #0x80
  4152ac:	b.ne	415370 <nftw@plt+0x127f0>  // b.any
  4152b0:	bfi	w0, w2, #6, #26
  4152b4:	cmp	x1, #0x4
  4152b8:	mov	w2, w0
  4152bc:	b.eq	415318 <nftw@plt+0x12798>  // b.none
  4152c0:	ldrb	w0, [x5, #4]
  4152c4:	and	w3, w0, #0xc0
  4152c8:	cmp	w3, #0x80
  4152cc:	b.ne	415370 <nftw@plt+0x127f0>  // b.any
  4152d0:	bfi	w0, w2, #6, #26
  4152d4:	cmp	x1, #0x5
  4152d8:	mov	w2, w0
  4152dc:	b.eq	415318 <nftw@plt+0x12798>  // b.none
  4152e0:	ldrb	w0, [x5, #5]
  4152e4:	and	w3, w0, #0xc0
  4152e8:	cmp	w3, #0x80
  4152ec:	b.ne	415370 <nftw@plt+0x127f0>  // b.any
  4152f0:	bfi	w0, w2, #6, #26
  4152f4:	cmp	x1, #0x6
  4152f8:	mov	w2, w0
  4152fc:	b.eq	415318 <nftw@plt+0x12798>  // b.none
  415300:	ldrb	w0, [x5, #6]
  415304:	and	w3, w0, #0xc0
  415308:	cmp	w3, #0x80
  41530c:	b.ne	415370 <nftw@plt+0x127f0>  // b.any
  415310:	bfi	w0, w2, #6, #26
  415314:	mov	w2, w0
  415318:	cmp	w2, #0x7f
  41531c:	b.ls	415370 <nftw@plt+0x127f0>  // b.plast
  415320:	cmp	w2, #0x7ff
  415324:	b.ls	415370 <nftw@plt+0x127f0>  // b.plast
  415328:	cmp	w2, w10
  41532c:	ccmp	x1, #0x3, #0x0, ls  // ls = plast
  415330:	b.hi	415370 <nftw@plt+0x127f0>  // b.pmore
  415334:	cmp	w2, w11
  415338:	ccmp	x1, #0x4, #0x0, ls  // ls = plast
  41533c:	b.hi	415370 <nftw@plt+0x127f0>  // b.pmore
  415340:	cmp	w2, w12
  415344:	cset	w0, ls  // ls = plast
  415348:	cmp	x1, #0x6
  41534c:	csel	w0, w0, wzr, eq  // eq = none
  415350:	cbnz	w0, 415370 <nftw@plt+0x127f0>
  415354:	add	w3, w2, w13
  415358:	cmp	w3, #0x7ff
  41535c:	b.ls	415370 <nftw@plt+0x127f0>  // b.plast
  415360:	sub	w2, w2, #0x7f
  415364:	sxtw	x1, w1
  415368:	cmp	w2, #0x20
  41536c:	b.hi	415418 <nftw@plt+0x12898>  // b.pmore
  415370:	adrp	x1, 4a4000 <_obstack_memory_used@@Base+0x42bb8>
  415374:	stp	x23, x24, [sp, #48]
  415378:	lsl	x0, x19, #2
  41537c:	ldr	x1, [x1, #1288]
  415380:	add	x0, x0, #0x1
  415384:	add	x22, x20, x19
  415388:	adrp	x23, 473000 <_obstack_memory_used@@Base+0x11bb8>
  41538c:	add	x23, x23, #0xfd0
  415390:	blr	x1
  415394:	mov	x21, x0
  415398:	mov	x19, x0
  41539c:	b	4153b4 <nftw@plt+0x12834>
  4153a0:	strb	w2, [x0], #1
  4153a4:	add	x20, x20, #0x1
  4153a8:	cmp	x22, x20
  4153ac:	mov	x19, x0
  4153b0:	b.eq	4153e4 <nftw@plt+0x12864>  // b.none
  4153b4:	ldrb	w2, [x20]
  4153b8:	mov	x0, x19
  4153bc:	sub	w3, w2, #0x20
  4153c0:	and	w3, w3, #0xff
  4153c4:	cmp	w3, #0x5e
  4153c8:	b.ls	4153a0 <nftw@plt+0x12820>  // b.plast
  4153cc:	mov	x1, x23
  4153d0:	add	x20, x20, #0x1
  4153d4:	bl	4025b0 <sprintf@plt>
  4153d8:	add	x19, x19, #0x4
  4153dc:	cmp	x22, x20
  4153e0:	b.ne	4153b4 <nftw@plt+0x12834>  // b.any
  4153e4:	strb	wzr, [x19]
  4153e8:	ldp	x23, x24, [sp, #48]
  4153ec:	mov	x0, x21
  4153f0:	ldp	x19, x20, [sp, #16]
  4153f4:	ldp	x21, x22, [sp, #32]
  4153f8:	ldp	x29, x30, [sp], #112
  4153fc:	ret
  415400:	cmp	w2, #0x1f
  415404:	b.ls	415370 <nftw@plt+0x127f0>  // b.plast
  415408:	sub	w2, w2, #0x7f
  41540c:	cmp	w2, #0x20
  415410:	b.ls	415370 <nftw@plt+0x127f0>  // b.plast
  415414:	mov	x1, #0x1                   	// #1
  415418:	add	x7, x7, x1
  41541c:	cmp	x19, x7
  415420:	b.ls	415458 <nftw@plt+0x128d8>  // b.plast
  415424:	ldrb	w2, [x20, x7]
  415428:	add	x5, x20, x7
  41542c:	subs	x6, x19, x7
  415430:	mov	w3, w2
  415434:	b.ne	415228 <nftw@plt+0x126a8>  // b.any
  415438:	stp	x23, x24, [sp, #48]
  41543c:	stp	x25, x26, [sp, #64]
  415440:	adrp	x2, 473000 <_obstack_memory_used@@Base+0x11bb8>
  415444:	adrp	x0, 473000 <_obstack_memory_used@@Base+0x11bb8>
  415448:	add	x2, x2, #0xfb8
  41544c:	add	x0, x0, #0xef0
  415450:	mov	w1, #0x71b                 	// #1819
  415454:	bl	402bf0 <nftw@plt+0x70>
  415458:	cbnz	w0, 41554c <nftw@plt+0x129cc>
  41545c:	adrp	x0, 4a5000 <__environ@@GLIBC_2.17+0xa68>
  415460:	ldrb	w0, [x0, #2264]
  415464:	cbnz	w0, 41554c <nftw@plt+0x129cc>
  415468:	adrp	x0, 4a5000 <__environ@@GLIBC_2.17+0xa68>
  41546c:	stp	x23, x24, [sp, #48]
  415470:	ldr	x0, [x0, #2256]
  415474:	stp	x25, x26, [sp, #64]
  415478:	cbz	x0, 415564 <nftw@plt+0x129e4>
  41547c:	lsl	x22, x19, #2
  415480:	adrp	x1, 473000 <_obstack_memory_used@@Base+0x11bb8>
  415484:	adrp	x24, 4a4000 <_obstack_memory_used@@Base+0x42bb8>
  415488:	add	x1, x1, #0xfd8
  41548c:	add	x25, x22, #0x1
  415490:	bl	4029a0 <iconv_open@plt>
  415494:	add	x26, x24, #0x508
  415498:	mov	x23, x0
  41549c:	cmn	x0, #0x1
  4154a0:	b.eq	41556c <nftw@plt+0x129ec>  // b.none
  4154a4:	ldr	x1, [x26]
  4154a8:	sub	x2, x25, #0x1
  4154ac:	str	x20, [sp, #80]
  4154b0:	mov	x0, x25
  4154b4:	stp	x19, x2, [sp, #96]
  4154b8:	blr	x1
  4154bc:	mov	x21, x0
  4154c0:	mov	x4, #0x0                   	// #0
  4154c4:	mov	x0, x23
  4154c8:	mov	x3, #0x0                   	// #0
  4154cc:	mov	x2, #0x0                   	// #0
  4154d0:	mov	x1, #0x0                   	// #0
  4154d4:	str	x21, [sp, #88]
  4154d8:	bl	4028a0 <iconv@plt>
  4154dc:	cmn	x0, #0x1
  4154e0:	b.eq	415758 <nftw@plt+0x12bd8>  // b.none
  4154e4:	add	x4, sp, #0x68
  4154e8:	add	x3, sp, #0x58
  4154ec:	add	x2, sp, #0x60
  4154f0:	add	x1, sp, #0x50
  4154f4:	mov	x0, x23
  4154f8:	bl	4028a0 <iconv@plt>
  4154fc:	cmn	x0, #0x1
  415500:	b.eq	415748 <nftw@plt+0x12bc8>  // b.none
  415504:	ldr	x1, [sp, #96]
  415508:	cbnz	x1, 415748 <nftw@plt+0x12bc8>
  41550c:	cbnz	x0, 415758 <nftw@plt+0x12bd8>
  415510:	add	x4, sp, #0x68
  415514:	add	x3, sp, #0x58
  415518:	mov	x0, x23
  41551c:	mov	x2, #0x0                   	// #0
  415520:	mov	x1, #0x0                   	// #0
  415524:	bl	4028a0 <iconv@plt>
  415528:	cmn	x0, #0x1
  41552c:	b.eq	415748 <nftw@plt+0x12bc8>  // b.none
  415530:	ldr	x1, [sp, #88]
  415534:	mov	x0, x23
  415538:	strb	wzr, [x1]
  41553c:	bl	402560 <iconv_close@plt>
  415540:	ldp	x23, x24, [sp, #48]
  415544:	ldp	x25, x26, [sp, #64]
  415548:	b	4153ec <nftw@plt+0x1286c>
  41554c:	mov	x21, x20
  415550:	mov	x0, x21
  415554:	ldp	x19, x20, [sp, #16]
  415558:	ldp	x21, x22, [sp, #32]
  41555c:	ldp	x29, x30, [sp], #112
  415560:	ret
  415564:	lsl	x22, x19, #2
  415568:	adrp	x24, 4a4000 <_obstack_memory_used@@Base+0x42bb8>
  41556c:	ldr	x1, [x24, #1288]
  415570:	add	x0, x22, x19
  415574:	adrp	x25, 473000 <_obstack_memory_used@@Base+0x11bb8>
  415578:	mov	x22, #0x0                   	// #0
  41557c:	lsl	x0, x0, #1
  415580:	add	x25, x25, #0xfe0
  415584:	add	x0, x0, #0x1
  415588:	blr	x1
  41558c:	ldrb	w1, [x20]
  415590:	mov	x21, x0
  415594:	mov	x26, x0
  415598:	mov	x5, x19
  41559c:	mov	w0, w1
  4155a0:	mov	x4, x20
  4155a4:	mov	w24, #0x7                   	// #7
  4155a8:	mov	w23, #0x1                   	// #1
  4155ac:	tbz	w1, #7, 41573c <nftw@plt+0x12bbc>
  4155b0:	mov	x3, #0x0                   	// #0
  4155b4:	nop
  4155b8:	mov	x2, x3
  4155bc:	lsl	w0, w0, #1
  4155c0:	add	x3, x3, #0x1
  4155c4:	tbnz	w0, #7, 4155b8 <nftw@plt+0x12a38>
  4155c8:	sub	x0, x2, #0x1
  4155cc:	mov	w2, #0xffffffff            	// #-1
  4155d0:	cmp	x0, #0x4
  4155d4:	ccmp	x3, x5, #0x2, ls  // ls = plast
  4155d8:	b.hi	41570c <nftw@plt+0x12b8c>  // b.pmore
  4155dc:	ldrb	w5, [x4, #1]
  4155e0:	sub	w0, w24, w3
  4155e4:	and	w6, w5, #0xc0
  4155e8:	lsl	w0, w23, w0
  4155ec:	add	w0, w0, w2
  4155f0:	cmp	w6, #0x80
  4155f4:	and	w0, w0, w1
  4155f8:	b.ne	41570c <nftw@plt+0x12b8c>  // b.any
  4155fc:	mov	w2, w5
  415600:	cmp	x3, #0x2
  415604:	bfi	w2, w0, #6, #26
  415608:	b.ls	4156fc <nftw@plt+0x12b7c>  // b.plast
  41560c:	ldrb	w0, [x4, #2]
  415610:	and	w1, w0, #0xc0
  415614:	cmp	w1, #0x80
  415618:	b.ne	415708 <nftw@plt+0x12b88>  // b.any
  41561c:	bfi	w0, w2, #6, #26
  415620:	cmp	x3, #0x3
  415624:	mov	w2, w0
  415628:	b.eq	4156a4 <nftw@plt+0x12b24>  // b.none
  41562c:	ldrb	w0, [x4, #3]
  415630:	and	w1, w0, #0xc0
  415634:	cmp	w1, #0x80
  415638:	b.ne	415708 <nftw@plt+0x12b88>  // b.any
  41563c:	bfi	w0, w2, #6, #26
  415640:	cmp	x3, #0x4
  415644:	mov	w2, w0
  415648:	b.eq	4156a4 <nftw@plt+0x12b24>  // b.none
  41564c:	ldrb	w0, [x4, #4]
  415650:	and	w1, w0, #0xc0
  415654:	cmp	w1, #0x80
  415658:	b.ne	415708 <nftw@plt+0x12b88>  // b.any
  41565c:	bfi	w0, w2, #6, #26
  415660:	cmp	x3, #0x5
  415664:	mov	w2, w0
  415668:	b.eq	4156a4 <nftw@plt+0x12b24>  // b.none
  41566c:	ldrb	w0, [x4, #5]
  415670:	and	w1, w0, #0xc0
  415674:	cmp	w1, #0x80
  415678:	b.ne	415708 <nftw@plt+0x12b88>  // b.any
  41567c:	bfi	w0, w2, #6, #26
  415680:	cmp	x3, #0x6
  415684:	mov	w2, w0
  415688:	b.eq	4156a4 <nftw@plt+0x12b24>  // b.none
  41568c:	ldrb	w0, [x4, #6]
  415690:	and	w1, w0, #0xc0
  415694:	cmp	w1, #0x80
  415698:	b.ne	415708 <nftw@plt+0x12b88>  // b.any
  41569c:	bfi	w0, w2, #6, #26
  4156a0:	mov	w2, w0
  4156a4:	cmp	w2, #0x7f
  4156a8:	b.ls	415708 <nftw@plt+0x12b88>  // b.plast
  4156ac:	cmp	w2, #0x7ff
  4156b0:	b.ls	415708 <nftw@plt+0x12b88>  // b.plast
  4156b4:	mov	w0, #0xffff                	// #65535
  4156b8:	cmp	w2, w0
  4156bc:	ccmp	x3, #0x3, #0x0, ls  // ls = plast
  4156c0:	b.hi	415708 <nftw@plt+0x12b88>  // b.pmore
  4156c4:	mov	w0, #0x1fffff              	// #2097151
  4156c8:	cmp	w2, w0
  4156cc:	ccmp	x3, #0x4, #0x0, ls  // ls = plast
  4156d0:	b.hi	415708 <nftw@plt+0x12b88>  // b.pmore
  4156d4:	mov	w0, #0x3ffffff             	// #67108863
  4156d8:	cmp	w2, w0
  4156dc:	ccmp	x3, #0x6, #0x0, ls  // ls = plast
  4156e0:	b.eq	415708 <nftw@plt+0x12b88>  // b.none
  4156e4:	mov	w0, #0xffff2800            	// #-55296
  4156e8:	add	w0, w2, w0
  4156ec:	cmp	w0, #0x7ff
  4156f0:	b.ls	415708 <nftw@plt+0x12b88>  // b.plast
  4156f4:	add	x22, x22, w3, sxtw
  4156f8:	b	41570c <nftw@plt+0x12b8c>
  4156fc:	cmp	w2, #0x7f
  415700:	b.hi	4156c4 <nftw@plt+0x12b44>  // b.pmore
  415704:	nop
  415708:	mov	w2, #0xffffffff            	// #-1
  41570c:	mov	x0, x26
  415710:	mov	x1, x25
  415714:	add	x26, x26, #0xa
  415718:	bl	4025b0 <sprintf@plt>
  41571c:	cmp	x19, x22
  415720:	b.ls	415770 <nftw@plt+0x12bf0>  // b.plast
  415724:	ldrb	w1, [x20, x22]
  415728:	add	x4, x20, x22
  41572c:	subs	x5, x19, x22
  415730:	mov	w0, w1
  415734:	b.eq	415440 <nftw@plt+0x128c0>  // b.none
  415738:	tbnz	w1, #7, 4155b0 <nftw@plt+0x12a30>
  41573c:	add	x22, x22, #0x1
  415740:	strb	w1, [x26], #1
  415744:	b	41571c <nftw@plt+0x12b9c>
  415748:	bl	402aa0 <__errno_location@plt>
  41574c:	ldr	w0, [x0]
  415750:	cmp	w0, #0x7
  415754:	b.eq	415780 <nftw@plt+0x12c00>  // b.none
  415758:	mov	x0, x23
  41575c:	bl	402560 <iconv_close@plt>
  415760:	b	41556c <nftw@plt+0x129ec>
  415764:	cmp	w3, #0x7f
  415768:	b.hi	415334 <nftw@plt+0x127b4>  // b.pmore
  41576c:	b	415370 <nftw@plt+0x127f0>
  415770:	strb	wzr, [x26]
  415774:	ldp	x23, x24, [sp, #48]
  415778:	ldp	x25, x26, [sp, #64]
  41577c:	b	4153ec <nftw@plt+0x1286c>
  415780:	ldr	x1, [x26, #8]
  415784:	lsl	x25, x25, #1
  415788:	mov	x0, x21
  41578c:	blr	x1
  415790:	b	4154a4 <nftw@plt+0x12924>
  415794:	nop
  415798:	stp	x29, x30, [sp, #-48]!
  41579c:	mov	x29, sp
  4157a0:	stp	x19, x20, [sp, #16]
  4157a4:	mov	x20, x1
  4157a8:	ldrh	w1, [x1, #2]
  4157ac:	mov	x19, x0
  4157b0:	ldr	x0, [x0, #8]
  4157b4:	cbnz	w1, 415800 <nftw@plt+0x12c80>
  4157b8:	ldrh	w2, [x20]
  4157bc:	add	x0, x0, #0xcc
  4157c0:	adrp	x1, 473000 <_obstack_memory_used@@Base+0x11bb8>
  4157c4:	add	x1, x1, #0xfe8
  4157c8:	bl	4025b0 <sprintf@plt>
  4157cc:	ldr	x20, [x19, #8]
  4157d0:	add	x20, x20, #0xcc
  4157d4:	mov	x0, x20
  4157d8:	bl	4024f0 <strlen@plt>
  4157dc:	ldr	w1, [x19, #40]
  4157e0:	add	x2, x20, x0
  4157e4:	cmp	w1, #0x0
  4157e8:	b.le	41599c <nftw@plt+0x12e1c>
  4157ec:	mov	x1, x20
  4157f0:	mov	x0, x19
  4157f4:	ldp	x19, x20, [sp, #16]
  4157f8:	ldp	x29, x30, [sp], #48
  4157fc:	b	4129e8 <nftw@plt+0xfe68>
  415800:	stp	x21, x22, [sp, #32]
  415804:	ldr	w1, [x19, #40]
  415808:	ldr	x21, [x0, #176]
  41580c:	cmp	w1, #0x0
  415810:	ldp	x1, x3, [x21, #24]
  415814:	b.le	41582c <nftw@plt+0x12cac>
  415818:	ldr	w0, [x0, #200]
  41581c:	ldr	w2, [x19, #28]
  415820:	sub	w2, w2, w0
  415824:	cmp	w2, #0x0
  415828:	b.le	4159ec <nftw@plt+0x12e6c>
  41582c:	cmp	x3, x1
  415830:	b.eq	4159b0 <nftw@plt+0x12e30>  // b.none
  415834:	add	x0, x1, #0x1
  415838:	str	x0, [x21, #24]
  41583c:	mov	w0, #0x5b                  	// #91
  415840:	strb	w0, [x1]
  415844:	ldr	x0, [x19, #8]
  415848:	ldr	w1, [x0, #200]
  41584c:	add	w1, w1, #0x1
  415850:	str	w1, [x0, #200]
  415854:	ldrh	w2, [x20]
  415858:	adrp	x22, 473000 <_obstack_memory_used@@Base+0x11bb8>
  41585c:	add	x22, x22, #0xfe8
  415860:	add	x0, x0, #0xcc
  415864:	mov	x1, x22
  415868:	bl	4025b0 <sprintf@plt>
  41586c:	ldr	x21, [x19, #8]
  415870:	add	x21, x21, #0xcc
  415874:	mov	x0, x21
  415878:	bl	4024f0 <strlen@plt>
  41587c:	ldr	w1, [x19, #40]
  415880:	add	x2, x21, x0
  415884:	mov	x0, x19
  415888:	cmp	w1, #0x0
  41588c:	mov	x1, x21
  415890:	b.le	415994 <nftw@plt+0x12e14>
  415894:	bl	4129e8 <nftw@plt+0xfe68>
  415898:	ldr	x1, [x19, #8]
  41589c:	ldr	w0, [x19, #40]
  4158a0:	ldr	x21, [x1, #176]
  4158a4:	cmp	w0, #0x0
  4158a8:	ldp	x0, x3, [x21, #24]
  4158ac:	b.le	4158c4 <nftw@plt+0x12d44>
  4158b0:	ldr	w1, [x1, #200]
  4158b4:	ldr	w2, [x19, #28]
  4158b8:	sub	w1, w2, w1
  4158bc:	cmp	w1, #0x0
  4158c0:	b.le	415a64 <nftw@plt+0x12ee4>
  4158c4:	cmp	x3, x0
  4158c8:	b.eq	4159d8 <nftw@plt+0x12e58>  // b.none
  4158cc:	add	x1, x0, #0x1
  4158d0:	str	x1, [x21, #24]
  4158d4:	mov	w1, #0x2c                  	// #44
  4158d8:	strb	w1, [x0]
  4158dc:	ldr	x0, [x19, #8]
  4158e0:	ldr	w1, [x0, #200]
  4158e4:	add	w1, w1, #0x1
  4158e8:	str	w1, [x0, #200]
  4158ec:	ldrh	w2, [x20, #2]
  4158f0:	mov	x1, x22
  4158f4:	add	x0, x0, #0xcc
  4158f8:	bl	4025b0 <sprintf@plt>
  4158fc:	ldr	x20, [x19, #8]
  415900:	add	x20, x20, #0xcc
  415904:	mov	x0, x20
  415908:	bl	4024f0 <strlen@plt>
  41590c:	ldr	w1, [x19, #40]
  415910:	add	x2, x20, x0
  415914:	mov	x0, x19
  415918:	cmp	w1, #0x0
  41591c:	mov	x1, x20
  415920:	b.le	41598c <nftw@plt+0x12e0c>
  415924:	bl	4129e8 <nftw@plt+0xfe68>
  415928:	ldr	x1, [x19, #8]
  41592c:	ldr	w0, [x19, #40]
  415930:	ldr	x20, [x1, #176]
  415934:	cmp	w0, #0x0
  415938:	ldp	x0, x3, [x20, #24]
  41593c:	b.le	415954 <nftw@plt+0x12dd4>
  415940:	ldr	w1, [x1, #200]
  415944:	ldr	w2, [x19, #28]
  415948:	sub	w1, w2, w1
  41594c:	cmp	w1, #0x0
  415950:	b.le	415a28 <nftw@plt+0x12ea8>
  415954:	cmp	x3, x0
  415958:	b.eq	4159c4 <nftw@plt+0x12e44>  // b.none
  41595c:	add	x1, x0, #0x1
  415960:	str	x1, [x20, #24]
  415964:	mov	w1, #0x5d                  	// #93
  415968:	strb	w1, [x0]
  41596c:	ldr	x1, [x19, #8]
  415970:	ldr	w0, [x1, #200]
  415974:	add	w0, w0, #0x1
  415978:	str	w0, [x1, #200]
  41597c:	ldp	x19, x20, [sp, #16]
  415980:	ldp	x21, x22, [sp, #32]
  415984:	ldp	x29, x30, [sp], #48
  415988:	ret
  41598c:	bl	4128d0 <nftw@plt+0xfd50>
  415990:	b	415928 <nftw@plt+0x12da8>
  415994:	bl	4128d0 <nftw@plt+0xfd50>
  415998:	b	415898 <nftw@plt+0x12d18>
  41599c:	mov	x1, x20
  4159a0:	mov	x0, x19
  4159a4:	ldp	x19, x20, [sp, #16]
  4159a8:	ldp	x29, x30, [sp], #48
  4159ac:	b	4128d0 <nftw@plt+0xfd50>
  4159b0:	mov	x1, #0x1                   	// #1
  4159b4:	mov	x0, x21
  4159b8:	bl	461200 <_obstack_newchunk@@Base>
  4159bc:	ldr	x1, [x21, #24]
  4159c0:	b	415834 <nftw@plt+0x12cb4>
  4159c4:	mov	x0, x20
  4159c8:	mov	x1, #0x1                   	// #1
  4159cc:	bl	461200 <_obstack_newchunk@@Base>
  4159d0:	ldr	x0, [x20, #24]
  4159d4:	b	41595c <nftw@plt+0x12ddc>
  4159d8:	mov	x0, x21
  4159dc:	mov	x1, #0x1                   	// #1
  4159e0:	bl	461200 <_obstack_newchunk@@Base>
  4159e4:	ldr	x0, [x21, #24]
  4159e8:	b	4158cc <nftw@plt+0x12d4c>
  4159ec:	cmp	x3, x1
  4159f0:	b.eq	415ab4 <nftw@plt+0x12f34>  // b.none
  4159f4:	add	x0, x1, #0x1
  4159f8:	str	x0, [x21, #24]
  4159fc:	mov	w0, #0xa                   	// #10
  415a00:	strb	w0, [x1]
  415a04:	adrp	x1, 481000 <_obstack_memory_used@@Base+0x1fbb8>
  415a08:	strb	wzr, [x19, #65]
  415a0c:	ldr	x0, [x19, #8]
  415a10:	ldrh	w1, [x1, #2982]
  415a14:	str	wzr, [x0, #200]
  415a18:	tbnz	w1, #6, 415854 <nftw@plt+0x12cd4>
  415a1c:	ldr	x21, [x0, #176]
  415a20:	ldp	x1, x3, [x21, #24]
  415a24:	b	41582c <nftw@plt+0x12cac>
  415a28:	cmp	x3, x0
  415a2c:	b.eq	415aa0 <nftw@plt+0x12f20>  // b.none
  415a30:	add	x1, x0, #0x1
  415a34:	str	x1, [x20, #24]
  415a38:	mov	w1, #0xa                   	// #10
  415a3c:	strb	w1, [x0]
  415a40:	adrp	x1, 481000 <_obstack_memory_used@@Base+0x1fbb8>
  415a44:	strb	wzr, [x19, #65]
  415a48:	ldr	x0, [x19, #8]
  415a4c:	ldrh	w1, [x1, #2986]
  415a50:	str	wzr, [x0, #200]
  415a54:	tbnz	w1, #6, 41597c <nftw@plt+0x12dfc>
  415a58:	ldr	x20, [x0, #176]
  415a5c:	ldp	x0, x3, [x20, #24]
  415a60:	b	415954 <nftw@plt+0x12dd4>
  415a64:	cmp	x0, x3
  415a68:	b.eq	415ac8 <nftw@plt+0x12f48>  // b.none
  415a6c:	add	x1, x0, #0x1
  415a70:	str	x1, [x21, #24]
  415a74:	mov	w1, #0xa                   	// #10
  415a78:	strb	w1, [x0]
  415a7c:	adrp	x1, 481000 <_obstack_memory_used@@Base+0x1fbb8>
  415a80:	strb	wzr, [x19, #65]
  415a84:	ldr	x0, [x19, #8]
  415a88:	ldrh	w1, [x1, #2888]
  415a8c:	str	wzr, [x0, #200]
  415a90:	tbnz	w1, #6, 4158ec <nftw@plt+0x12d6c>
  415a94:	ldr	x21, [x0, #176]
  415a98:	ldp	x0, x3, [x21, #24]
  415a9c:	b	4158c4 <nftw@plt+0x12d44>
  415aa0:	mov	x0, x20
  415aa4:	mov	x1, #0x1                   	// #1
  415aa8:	bl	461200 <_obstack_newchunk@@Base>
  415aac:	ldr	x0, [x20, #24]
  415ab0:	b	415a30 <nftw@plt+0x12eb0>
  415ab4:	mov	x1, #0x1                   	// #1
  415ab8:	mov	x0, x21
  415abc:	bl	461200 <_obstack_newchunk@@Base>
  415ac0:	ldr	x1, [x21, #24]
  415ac4:	b	4159f4 <nftw@plt+0x12e74>
  415ac8:	mov	x0, x21
  415acc:	mov	x1, #0x1                   	// #1
  415ad0:	bl	461200 <_obstack_newchunk@@Base>
  415ad4:	ldr	x0, [x21, #24]
  415ad8:	b	415a6c <nftw@plt+0x12eec>
  415adc:	nop
  415ae0:	stp	x29, x30, [sp, #-48]!
  415ae4:	mov	x29, sp
  415ae8:	stp	x19, x20, [sp, #16]
  415aec:	mov	x20, x1
  415af0:	mov	x19, x0
  415af4:	ldr	x1, [x1, #8]
  415af8:	ldr	x0, [x0, #8]
  415afc:	cbnz	x1, 415b48 <nftw@plt+0x12fc8>
  415b00:	ldr	x2, [x20]
  415b04:	add	x0, x0, #0xcc
  415b08:	adrp	x1, 473000 <_obstack_memory_used@@Base+0x11bb8>
  415b0c:	add	x1, x1, #0xfe8
  415b10:	bl	4025b0 <sprintf@plt>
  415b14:	ldr	x20, [x19, #8]
  415b18:	add	x20, x20, #0xcc
  415b1c:	mov	x0, x20
  415b20:	bl	4024f0 <strlen@plt>
  415b24:	ldr	w1, [x19, #40]
  415b28:	add	x2, x20, x0
  415b2c:	cmp	w1, #0x0
  415b30:	b.le	415ce4 <nftw@plt+0x13164>
  415b34:	mov	x1, x20
  415b38:	mov	x0, x19
  415b3c:	ldp	x19, x20, [sp, #16]
  415b40:	ldp	x29, x30, [sp], #48
  415b44:	b	4129e8 <nftw@plt+0xfe68>
  415b48:	stp	x21, x22, [sp, #32]
  415b4c:	ldr	w1, [x19, #40]
  415b50:	ldr	x21, [x0, #176]
  415b54:	cmp	w1, #0x0
  415b58:	ldp	x1, x3, [x21, #24]
  415b5c:	b.le	415b74 <nftw@plt+0x12ff4>
  415b60:	ldr	w0, [x0, #200]
  415b64:	ldr	w2, [x19, #28]
  415b68:	sub	w2, w2, w0
  415b6c:	cmp	w2, #0x0
  415b70:	b.le	415d34 <nftw@plt+0x131b4>
  415b74:	cmp	x3, x1
  415b78:	b.eq	415cf8 <nftw@plt+0x13178>  // b.none
  415b7c:	add	x0, x1, #0x1
  415b80:	str	x0, [x21, #24]
  415b84:	mov	w0, #0x5b                  	// #91
  415b88:	strb	w0, [x1]
  415b8c:	ldr	x0, [x19, #8]
  415b90:	ldr	w1, [x0, #200]
  415b94:	add	w1, w1, #0x1
  415b98:	str	w1, [x0, #200]
  415b9c:	ldr	x2, [x20]
  415ba0:	adrp	x22, 473000 <_obstack_memory_used@@Base+0x11bb8>
  415ba4:	add	x22, x22, #0xfe8
  415ba8:	add	x0, x0, #0xcc
  415bac:	mov	x1, x22
  415bb0:	bl	4025b0 <sprintf@plt>
  415bb4:	ldr	x21, [x19, #8]
  415bb8:	add	x21, x21, #0xcc
  415bbc:	mov	x0, x21
  415bc0:	bl	4024f0 <strlen@plt>
  415bc4:	ldr	w1, [x19, #40]
  415bc8:	add	x2, x21, x0
  415bcc:	mov	x0, x19
  415bd0:	cmp	w1, #0x0
  415bd4:	mov	x1, x21
  415bd8:	b.le	415cdc <nftw@plt+0x1315c>
  415bdc:	bl	4129e8 <nftw@plt+0xfe68>
  415be0:	ldr	x1, [x19, #8]
  415be4:	ldr	w0, [x19, #40]
  415be8:	ldr	x21, [x1, #176]
  415bec:	cmp	w0, #0x0
  415bf0:	ldp	x0, x3, [x21, #24]
  415bf4:	b.le	415c0c <nftw@plt+0x1308c>
  415bf8:	ldr	w1, [x1, #200]
  415bfc:	ldr	w2, [x19, #28]
  415c00:	sub	w1, w2, w1
  415c04:	cmp	w1, #0x0
  415c08:	b.le	415dac <nftw@plt+0x1322c>
  415c0c:	cmp	x3, x0
  415c10:	b.eq	415d20 <nftw@plt+0x131a0>  // b.none
  415c14:	add	x1, x0, #0x1
  415c18:	str	x1, [x21, #24]
  415c1c:	mov	w1, #0x2c                  	// #44
  415c20:	strb	w1, [x0]
  415c24:	ldr	x0, [x19, #8]
  415c28:	ldr	w1, [x0, #200]
  415c2c:	add	w1, w1, #0x1
  415c30:	str	w1, [x0, #200]
  415c34:	ldr	x2, [x20, #8]
  415c38:	mov	x1, x22
  415c3c:	add	x0, x0, #0xcc
  415c40:	bl	4025b0 <sprintf@plt>
  415c44:	ldr	x20, [x19, #8]
  415c48:	add	x20, x20, #0xcc
  415c4c:	mov	x0, x20
  415c50:	bl	4024f0 <strlen@plt>
  415c54:	ldr	w1, [x19, #40]
  415c58:	add	x2, x20, x0
  415c5c:	mov	x0, x19
  415c60:	cmp	w1, #0x0
  415c64:	mov	x1, x20
  415c68:	b.le	415cd4 <nftw@plt+0x13154>
  415c6c:	bl	4129e8 <nftw@plt+0xfe68>
  415c70:	ldr	x1, [x19, #8]
  415c74:	ldr	w0, [x19, #40]
  415c78:	ldr	x20, [x1, #176]
  415c7c:	cmp	w0, #0x0
  415c80:	ldp	x0, x3, [x20, #24]
  415c84:	b.le	415c9c <nftw@plt+0x1311c>
  415c88:	ldr	w1, [x1, #200]
  415c8c:	ldr	w2, [x19, #28]
  415c90:	sub	w1, w2, w1
  415c94:	cmp	w1, #0x0
  415c98:	b.le	415d70 <nftw@plt+0x131f0>
  415c9c:	cmp	x3, x0
  415ca0:	b.eq	415d0c <nftw@plt+0x1318c>  // b.none
  415ca4:	add	x1, x0, #0x1
  415ca8:	str	x1, [x20, #24]
  415cac:	mov	w1, #0x5d                  	// #93
  415cb0:	strb	w1, [x0]
  415cb4:	ldr	x1, [x19, #8]
  415cb8:	ldr	w0, [x1, #200]
  415cbc:	add	w0, w0, #0x1
  415cc0:	str	w0, [x1, #200]
  415cc4:	ldp	x19, x20, [sp, #16]
  415cc8:	ldp	x21, x22, [sp, #32]
  415ccc:	ldp	x29, x30, [sp], #48
  415cd0:	ret
  415cd4:	bl	4128d0 <nftw@plt+0xfd50>
  415cd8:	b	415c70 <nftw@plt+0x130f0>
  415cdc:	bl	4128d0 <nftw@plt+0xfd50>
  415ce0:	b	415be0 <nftw@plt+0x13060>
  415ce4:	mov	x1, x20
  415ce8:	mov	x0, x19
  415cec:	ldp	x19, x20, [sp, #16]
  415cf0:	ldp	x29, x30, [sp], #48
  415cf4:	b	4128d0 <nftw@plt+0xfd50>
  415cf8:	mov	x1, #0x1                   	// #1
  415cfc:	mov	x0, x21
  415d00:	bl	461200 <_obstack_newchunk@@Base>
  415d04:	ldr	x1, [x21, #24]
  415d08:	b	415b7c <nftw@plt+0x12ffc>
  415d0c:	mov	x0, x20
  415d10:	mov	x1, #0x1                   	// #1
  415d14:	bl	461200 <_obstack_newchunk@@Base>
  415d18:	ldr	x0, [x20, #24]
  415d1c:	b	415ca4 <nftw@plt+0x13124>
  415d20:	mov	x0, x21
  415d24:	mov	x1, #0x1                   	// #1
  415d28:	bl	461200 <_obstack_newchunk@@Base>
  415d2c:	ldr	x0, [x21, #24]
  415d30:	b	415c14 <nftw@plt+0x13094>
  415d34:	cmp	x3, x1
  415d38:	b.eq	415dfc <nftw@plt+0x1327c>  // b.none
  415d3c:	add	x0, x1, #0x1
  415d40:	str	x0, [x21, #24]
  415d44:	mov	w0, #0xa                   	// #10
  415d48:	strb	w0, [x1]
  415d4c:	adrp	x1, 481000 <_obstack_memory_used@@Base+0x1fbb8>
  415d50:	strb	wzr, [x19, #65]
  415d54:	ldr	x0, [x19, #8]
  415d58:	ldrh	w1, [x1, #2982]
  415d5c:	str	wzr, [x0, #200]
  415d60:	tbnz	w1, #6, 415b9c <nftw@plt+0x1301c>
  415d64:	ldr	x21, [x0, #176]
  415d68:	ldp	x1, x3, [x21, #24]
  415d6c:	b	415b74 <nftw@plt+0x12ff4>
  415d70:	cmp	x3, x0
  415d74:	b.eq	415de8 <nftw@plt+0x13268>  // b.none
  415d78:	add	x1, x0, #0x1
  415d7c:	str	x1, [x20, #24]
  415d80:	mov	w1, #0xa                   	// #10
  415d84:	strb	w1, [x0]
  415d88:	adrp	x1, 481000 <_obstack_memory_used@@Base+0x1fbb8>
  415d8c:	strb	wzr, [x19, #65]
  415d90:	ldr	x0, [x19, #8]
  415d94:	ldrh	w1, [x1, #2986]
  415d98:	str	wzr, [x0, #200]
  415d9c:	tbnz	w1, #6, 415cc4 <nftw@plt+0x13144>
  415da0:	ldr	x20, [x0, #176]
  415da4:	ldp	x0, x3, [x20, #24]
  415da8:	b	415c9c <nftw@plt+0x1311c>
  415dac:	cmp	x0, x3
  415db0:	b.eq	415e10 <nftw@plt+0x13290>  // b.none
  415db4:	add	x1, x0, #0x1
  415db8:	str	x1, [x21, #24]
  415dbc:	mov	w1, #0xa                   	// #10
  415dc0:	strb	w1, [x0]
  415dc4:	adrp	x1, 481000 <_obstack_memory_used@@Base+0x1fbb8>
  415dc8:	strb	wzr, [x19, #65]
  415dcc:	ldr	x0, [x19, #8]
  415dd0:	ldrh	w1, [x1, #2888]
  415dd4:	str	wzr, [x0, #200]
  415dd8:	tbnz	w1, #6, 415c34 <nftw@plt+0x130b4>
  415ddc:	ldr	x21, [x0, #176]
  415de0:	ldp	x0, x3, [x21, #24]
  415de4:	b	415c0c <nftw@plt+0x1308c>
  415de8:	mov	x0, x20
  415dec:	mov	x1, #0x1                   	// #1
  415df0:	bl	461200 <_obstack_newchunk@@Base>
  415df4:	ldr	x0, [x20, #24]
  415df8:	b	415d78 <nftw@plt+0x131f8>
  415dfc:	mov	x1, #0x1                   	// #1
  415e00:	mov	x0, x21
  415e04:	bl	461200 <_obstack_newchunk@@Base>
  415e08:	ldr	x1, [x21, #24]
  415e0c:	b	415d3c <nftw@plt+0x131bc>
  415e10:	mov	x0, x21
  415e14:	mov	x1, #0x1                   	// #1
  415e18:	bl	461200 <_obstack_newchunk@@Base>
  415e1c:	ldr	x0, [x21, #24]
  415e20:	b	415db4 <nftw@plt+0x13234>
  415e24:	nop
  415e28:	stp	x29, x30, [sp, #-48]!
  415e2c:	mov	x29, sp
  415e30:	stp	x19, x20, [sp, #16]
  415e34:	mov	x20, x1
  415e38:	mov	x19, x0
  415e3c:	ldr	x1, [x1, #8]
  415e40:	ldr	x0, [x0, #8]
  415e44:	cbnz	x1, 415e90 <nftw@plt+0x13310>
  415e48:	ldr	x2, [x20]
  415e4c:	add	x0, x0, #0xcc
  415e50:	adrp	x1, 473000 <_obstack_memory_used@@Base+0x11bb8>
  415e54:	add	x1, x1, #0xfe8
  415e58:	bl	4025b0 <sprintf@plt>
  415e5c:	ldr	x20, [x19, #8]
  415e60:	add	x20, x20, #0xcc
  415e64:	mov	x0, x20
  415e68:	bl	4024f0 <strlen@plt>
  415e6c:	ldr	w1, [x19, #40]
  415e70:	add	x2, x20, x0
  415e74:	cmp	w1, #0x0
  415e78:	b.le	41602c <nftw@plt+0x134ac>
  415e7c:	mov	x1, x20
  415e80:	mov	x0, x19
  415e84:	ldp	x19, x20, [sp, #16]
  415e88:	ldp	x29, x30, [sp], #48
  415e8c:	b	4129e8 <nftw@plt+0xfe68>
  415e90:	stp	x21, x22, [sp, #32]
  415e94:	ldr	w1, [x19, #40]
  415e98:	ldr	x21, [x0, #176]
  415e9c:	cmp	w1, #0x0
  415ea0:	ldp	x1, x3, [x21, #24]
  415ea4:	b.le	415ebc <nftw@plt+0x1333c>
  415ea8:	ldr	w0, [x0, #200]
  415eac:	ldr	w2, [x19, #28]
  415eb0:	sub	w2, w2, w0
  415eb4:	cmp	w2, #0x0
  415eb8:	b.le	41607c <nftw@plt+0x134fc>
  415ebc:	cmp	x3, x1
  415ec0:	b.eq	416040 <nftw@plt+0x134c0>  // b.none
  415ec4:	add	x0, x1, #0x1
  415ec8:	str	x0, [x21, #24]
  415ecc:	mov	w0, #0x5b                  	// #91
  415ed0:	strb	w0, [x1]
  415ed4:	ldr	x0, [x19, #8]
  415ed8:	ldr	w1, [x0, #200]
  415edc:	add	w1, w1, #0x1
  415ee0:	str	w1, [x0, #200]
  415ee4:	ldr	x2, [x20]
  415ee8:	adrp	x22, 473000 <_obstack_memory_used@@Base+0x11bb8>
  415eec:	add	x22, x22, #0xfe8
  415ef0:	add	x0, x0, #0xcc
  415ef4:	mov	x1, x22
  415ef8:	bl	4025b0 <sprintf@plt>
  415efc:	ldr	x21, [x19, #8]
  415f00:	add	x21, x21, #0xcc
  415f04:	mov	x0, x21
  415f08:	bl	4024f0 <strlen@plt>
  415f0c:	ldr	w1, [x19, #40]
  415f10:	add	x2, x21, x0
  415f14:	mov	x0, x19
  415f18:	cmp	w1, #0x0
  415f1c:	mov	x1, x21
  415f20:	b.le	416024 <nftw@plt+0x134a4>
  415f24:	bl	4129e8 <nftw@plt+0xfe68>
  415f28:	ldr	x1, [x19, #8]
  415f2c:	ldr	w0, [x19, #40]
  415f30:	ldr	x21, [x1, #176]
  415f34:	cmp	w0, #0x0
  415f38:	ldp	x0, x3, [x21, #24]
  415f3c:	b.le	415f54 <nftw@plt+0x133d4>
  415f40:	ldr	w1, [x1, #200]
  415f44:	ldr	w2, [x19, #28]
  415f48:	sub	w1, w2, w1
  415f4c:	cmp	w1, #0x0
  415f50:	b.le	4160f4 <nftw@plt+0x13574>
  415f54:	cmp	x0, x3
  415f58:	b.eq	416068 <nftw@plt+0x134e8>  // b.none
  415f5c:	add	x1, x0, #0x1
  415f60:	str	x1, [x21, #24]
  415f64:	mov	w1, #0x2c                  	// #44
  415f68:	strb	w1, [x0]
  415f6c:	ldr	x0, [x19, #8]
  415f70:	ldr	w1, [x0, #200]
  415f74:	add	w1, w1, #0x1
  415f78:	str	w1, [x0, #200]
  415f7c:	ldr	x2, [x20, #8]
  415f80:	mov	x1, x22
  415f84:	add	x0, x0, #0xcc
  415f88:	bl	4025b0 <sprintf@plt>
  415f8c:	ldr	x20, [x19, #8]
  415f90:	add	x20, x20, #0xcc
  415f94:	mov	x0, x20
  415f98:	bl	4024f0 <strlen@plt>
  415f9c:	ldr	w1, [x19, #40]
  415fa0:	add	x2, x20, x0
  415fa4:	mov	x0, x19
  415fa8:	cmp	w1, #0x0
  415fac:	mov	x1, x20
  415fb0:	b.le	41601c <nftw@plt+0x1349c>
  415fb4:	bl	4129e8 <nftw@plt+0xfe68>
  415fb8:	ldr	x1, [x19, #8]
  415fbc:	ldr	w0, [x19, #40]
  415fc0:	ldr	x20, [x1, #176]
  415fc4:	cmp	w0, #0x0
  415fc8:	ldp	x0, x3, [x20, #24]
  415fcc:	b.le	415fe4 <nftw@plt+0x13464>
  415fd0:	ldr	w1, [x1, #200]
  415fd4:	ldr	w2, [x19, #28]
  415fd8:	sub	w1, w2, w1
  415fdc:	cmp	w1, #0x0
  415fe0:	b.le	4160b8 <nftw@plt+0x13538>
  415fe4:	cmp	x3, x0
  415fe8:	b.eq	416054 <nftw@plt+0x134d4>  // b.none
  415fec:	add	x1, x0, #0x1
  415ff0:	str	x1, [x20, #24]
  415ff4:	mov	w1, #0x5d                  	// #93
  415ff8:	strb	w1, [x0]
  415ffc:	ldr	x1, [x19, #8]
  416000:	ldr	w0, [x1, #200]
  416004:	add	w0, w0, #0x1
  416008:	str	w0, [x1, #200]
  41600c:	ldp	x19, x20, [sp, #16]
  416010:	ldp	x21, x22, [sp, #32]
  416014:	ldp	x29, x30, [sp], #48
  416018:	ret
  41601c:	bl	4128d0 <nftw@plt+0xfd50>
  416020:	b	415fb8 <nftw@plt+0x13438>
  416024:	bl	4128d0 <nftw@plt+0xfd50>
  416028:	b	415f28 <nftw@plt+0x133a8>
  41602c:	mov	x1, x20
  416030:	mov	x0, x19
  416034:	ldp	x19, x20, [sp, #16]
  416038:	ldp	x29, x30, [sp], #48
  41603c:	b	4128d0 <nftw@plt+0xfd50>
  416040:	mov	x1, #0x1                   	// #1
  416044:	mov	x0, x21
  416048:	bl	461200 <_obstack_newchunk@@Base>
  41604c:	ldr	x1, [x21, #24]
  416050:	b	415ec4 <nftw@plt+0x13344>
  416054:	mov	x0, x20
  416058:	mov	x1, #0x1                   	// #1
  41605c:	bl	461200 <_obstack_newchunk@@Base>
  416060:	ldr	x0, [x20, #24]
  416064:	b	415fec <nftw@plt+0x1346c>
  416068:	mov	x0, x21
  41606c:	mov	x1, #0x1                   	// #1
  416070:	bl	461200 <_obstack_newchunk@@Base>
  416074:	ldr	x0, [x21, #24]
  416078:	b	415f5c <nftw@plt+0x133dc>
  41607c:	cmp	x3, x1
  416080:	b.eq	416144 <nftw@plt+0x135c4>  // b.none
  416084:	add	x0, x1, #0x1
  416088:	str	x0, [x21, #24]
  41608c:	mov	w0, #0xa                   	// #10
  416090:	strb	w0, [x1]
  416094:	adrp	x1, 481000 <_obstack_memory_used@@Base+0x1fbb8>
  416098:	strb	wzr, [x19, #65]
  41609c:	ldr	x0, [x19, #8]
  4160a0:	ldrh	w1, [x1, #2982]
  4160a4:	str	wzr, [x0, #200]
  4160a8:	tbnz	w1, #6, 415ee4 <nftw@plt+0x13364>
  4160ac:	ldr	x21, [x0, #176]
  4160b0:	ldp	x1, x3, [x21, #24]
  4160b4:	b	415ebc <nftw@plt+0x1333c>
  4160b8:	cmp	x3, x0
  4160bc:	b.eq	416130 <nftw@plt+0x135b0>  // b.none
  4160c0:	add	x1, x0, #0x1
  4160c4:	str	x1, [x20, #24]
  4160c8:	mov	w1, #0xa                   	// #10
  4160cc:	strb	w1, [x0]
  4160d0:	adrp	x1, 481000 <_obstack_memory_used@@Base+0x1fbb8>
  4160d4:	strb	wzr, [x19, #65]
  4160d8:	ldr	x0, [x19, #8]
  4160dc:	ldrh	w1, [x1, #2986]
  4160e0:	str	wzr, [x0, #200]
  4160e4:	tbnz	w1, #6, 41600c <nftw@plt+0x1348c>
  4160e8:	ldr	x20, [x0, #176]
  4160ec:	ldp	x0, x3, [x20, #24]
  4160f0:	b	415fe4 <nftw@plt+0x13464>
  4160f4:	cmp	x3, x0
  4160f8:	b.eq	416158 <nftw@plt+0x135d8>  // b.none
  4160fc:	add	x1, x0, #0x1
  416100:	str	x1, [x21, #24]
  416104:	mov	w1, #0xa                   	// #10
  416108:	strb	w1, [x0]
  41610c:	adrp	x1, 481000 <_obstack_memory_used@@Base+0x1fbb8>
  416110:	strb	wzr, [x19, #65]
  416114:	ldr	x0, [x19, #8]
  416118:	ldrh	w1, [x1, #2888]
  41611c:	str	wzr, [x0, #200]
  416120:	tbnz	w1, #6, 415f7c <nftw@plt+0x133fc>
  416124:	ldr	x21, [x0, #176]
  416128:	ldp	x0, x3, [x21, #24]
  41612c:	b	415f54 <nftw@plt+0x133d4>
  416130:	mov	x0, x20
  416134:	mov	x1, #0x1                   	// #1
  416138:	bl	461200 <_obstack_newchunk@@Base>
  41613c:	ldr	x0, [x20, #24]
  416140:	b	4160c0 <nftw@plt+0x13540>
  416144:	mov	x1, #0x1                   	// #1
  416148:	mov	x0, x21
  41614c:	bl	461200 <_obstack_newchunk@@Base>
  416150:	ldr	x1, [x21, #24]
  416154:	b	416084 <nftw@plt+0x13504>
  416158:	mov	x0, x21
  41615c:	mov	x1, #0x1                   	// #1
  416160:	bl	461200 <_obstack_newchunk@@Base>
  416164:	ldr	x0, [x21, #24]
  416168:	b	4160fc <nftw@plt+0x1357c>
  41616c:	nop
  416170:	stp	x29, x30, [sp, #-64]!
  416174:	mov	w0, #0x0                   	// #0
  416178:	mov	x29, sp
  41617c:	stp	x19, x20, [sp, #16]
  416180:	adrp	x19, 472000 <_obstack_memory_used@@Base+0x10bb8>
  416184:	add	x19, x19, #0x5c0
  416188:	mov	x1, x19
  41618c:	stp	x21, x22, [sp, #32]
  416190:	adrp	x20, 4a4000 <_obstack_memory_used@@Base+0x42bb8>
  416194:	str	x23, [sp, #48]
  416198:	bl	402b60 <setlocale@plt>
  41619c:	mov	x1, x19
  4161a0:	mov	w0, #0x5                   	// #5
  4161a4:	bl	402b60 <setlocale@plt>
  4161a8:	adrp	x19, 474000 <_obstack_memory_used@@Base+0x12bb8>
  4161ac:	adrp	x1, 474000 <_obstack_memory_used@@Base+0x12bb8>
  4161b0:	add	x1, x1, #0x10
  4161b4:	add	x19, x19, #0x28
  4161b8:	adrp	x21, 47c000 <_obstack_memory_used@@Base+0x1abb8>
  4161bc:	mov	x0, x19
  4161c0:	bl	4026b0 <bindtextdomain@plt>
  4161c4:	mov	x0, x19
  4161c8:	bl	402870 <textdomain@plt>
  4161cc:	add	x21, x21, #0x6d0
  4161d0:	adrp	x0, 474000 <_obstack_memory_used@@Base+0x12bb8>
  4161d4:	add	x0, x0, #0x30
  4161d8:	bl	402b10 <gettext@plt>
  4161dc:	add	x23, x20, #0x518
  4161e0:	str	x0, [x20, #1304]
  4161e4:	mov	x0, x21
  4161e8:	bl	402b10 <gettext@plt>
  4161ec:	mov	x1, x0
  4161f0:	adrp	x22, 4a5000 <__environ@@GLIBC_2.17+0xa68>
  4161f4:	mov	w0, #0xe                   	// #14
  4161f8:	str	x1, [x23, #8]
  4161fc:	bl	402640 <nl_langinfo@plt>
  416200:	str	x0, [x22, #2256]
  416204:	cbz	x0, 416228 <nftw@plt+0x136a8>
  416208:	adrp	x1, 474000 <_obstack_memory_used@@Base+0x12bb8>
  41620c:	mov	x19, x0
  416210:	add	x1, x1, #0x38
  416214:	bl	402720 <strcasecmp@plt>
  416218:	cbnz	w0, 416294 <nftw@plt+0x13714>
  41621c:	add	x0, x22, #0x8d0
  416220:	mov	w1, #0x1                   	// #1
  416224:	strb	w1, [x0, #8]
  416228:	ldr	x0, [x20, #1304]
  41622c:	ldrb	w1, [x0]
  416230:	cmp	w1, #0x60
  416234:	b.ne	416280 <nftw@plt+0x13700>  // b.any
  416238:	ldrb	w0, [x0, #1]
  41623c:	cbnz	w0, 416280 <nftw@plt+0x13700>
  416240:	ldr	x0, [x23, #8]
  416244:	ldrb	w1, [x0]
  416248:	cmp	w1, #0x27
  41624c:	b.ne	416280 <nftw@plt+0x13700>  // b.any
  416250:	ldrb	w0, [x0, #1]
  416254:	cbnz	w0, 416280 <nftw@plt+0x13700>
  416258:	add	x22, x22, #0x8d0
  41625c:	str	x21, [x20, #1304]
  416260:	ldrb	w0, [x22, #8]
  416264:	cbz	w0, 416280 <nftw@plt+0x13700>
  416268:	adrp	x1, 474000 <_obstack_memory_used@@Base+0x12bb8>
  41626c:	adrp	x0, 474000 <_obstack_memory_used@@Base+0x12bb8>
  416270:	add	x1, x1, #0x48
  416274:	add	x0, x0, #0x50
  416278:	str	x1, [x20, #1304]
  41627c:	str	x0, [x23, #8]
  416280:	ldp	x19, x20, [sp, #16]
  416284:	ldp	x21, x22, [sp, #32]
  416288:	ldr	x23, [sp, #48]
  41628c:	ldp	x29, x30, [sp], #64
  416290:	ret
  416294:	adrp	x1, 474000 <_obstack_memory_used@@Base+0x12bb8>
  416298:	mov	x0, x19
  41629c:	add	x1, x1, #0x40
  4162a0:	bl	402720 <strcasecmp@plt>
  4162a4:	cbnz	w0, 416228 <nftw@plt+0x136a8>
  4162a8:	b	41621c <nftw@plt+0x1369c>
  4162ac:	nop
  4162b0:	stp	x29, x30, [sp, #-32]!
  4162b4:	mov	x2, #0x0                   	// #0
  4162b8:	mov	x29, sp
  4162bc:	stp	x19, x20, [sp, #16]
  4162c0:	mov	x19, x0
  4162c4:	mov	x1, x19
  4162c8:	mov	x0, #0x0                   	// #0
  4162cc:	bl	402510 <mbstowcs@plt>
  4162d0:	add	x2, x0, #0x1
  4162d4:	mov	x1, x19
  4162d8:	mov	x19, x0
  4162dc:	lsl	x3, x2, #2
  4162e0:	add	x3, x3, #0xf
  4162e4:	and	x3, x3, #0xfffffffffffffff0
  4162e8:	sub	sp, sp, x3
  4162ec:	mov	x20, sp
  4162f0:	mov	x0, x20
  4162f4:	bl	402510 <mbstowcs@plt>
  4162f8:	mov	x1, x19
  4162fc:	mov	x0, x20
  416300:	bl	402690 <wcswidth@plt>
  416304:	mov	sp, x29
  416308:	sxtw	x0, w0
  41630c:	ldp	x19, x20, [sp, #16]
  416310:	ldp	x29, x30, [sp], #32
  416314:	ret
  416318:	stp	x29, x30, [sp, #-32]!
  41631c:	mov	x29, sp
  416320:	stp	x19, x20, [sp, #16]
  416324:	bl	4162b0 <nftw@plt+0x13730>
  416328:	mov	x19, x0
  41632c:	add	x0, x0, #0x1
  416330:	bl	461560 <_obstack_memory_used@@Base+0x118>
  416334:	mov	x20, x0
  416338:	mov	x2, x19
  41633c:	mov	w1, #0x20                  	// #32
  416340:	bl	4026f0 <memset@plt>
  416344:	mov	x0, x20
  416348:	strb	wzr, [x20, x19]
  41634c:	ldp	x19, x20, [sp, #16]
  416350:	ldp	x29, x30, [sp], #32
  416354:	ret
  416358:	cmp	w0, w1
  41635c:	b.cs	416388 <nftw@plt+0x13808>  // b.hs, b.nlast
  416360:	mov	w2, #0x4                   	// #4
  416364:	cbz	w0, 41637c <nftw@plt+0x137fc>
  416368:	lsl	w3, w0, #1
  41636c:	cmp	w0, #0xf
  416370:	add	w2, w3, w0
  416374:	lsr	w2, w2, #1
  416378:	csel	w2, w2, w3, hi  // hi = pmore
  41637c:	cmp	w2, w1
  416380:	csel	w0, w2, w1, cs  // cs = hs, nlast
  416384:	ret
  416388:	stp	x29, x30, [sp, #-16]!
  41638c:	adrp	x2, 474000 <_obstack_memory_used@@Base+0x12bb8>
  416390:	adrp	x0, 474000 <_obstack_memory_used@@Base+0x12bb8>
  416394:	mov	x29, sp
  416398:	add	x2, x2, #0xb0
  41639c:	add	x0, x0, #0xc8
  4163a0:	mov	w1, #0xa2                  	// #162
  4163a4:	bl	402bf0 <nftw@plt+0x70>
  4163a8:	sub	sp, sp, #0xd0
  4163ac:	adrp	x1, 4a4000 <_obstack_memory_used@@Base+0x42bb8>
  4163b0:	mov	w0, #0xa                   	// #10
  4163b4:	stp	x29, x30, [sp, #16]
  4163b8:	add	x29, sp, #0x10
  4163bc:	ldr	x1, [x1, #1392]
  4163c0:	stp	x19, x20, [sp, #32]
  4163c4:	adrp	x19, 4a5000 <__environ@@GLIBC_2.17+0xa68>
  4163c8:	add	x19, x19, #0x8e0
  4163cc:	stp	x21, x22, [sp, #48]
  4163d0:	stp	x23, x24, [sp, #64]
  4163d4:	stp	x25, x26, [sp, #80]
  4163d8:	stp	x27, x28, [sp, #96]
  4163dc:	bl	4025e0 <fputc@plt>
  4163e0:	mov	x1, #0x10                  	// #16
  4163e4:	ldr	x2, [x19, #40]
  4163e8:	ldp	x3, x0, [x2, #16]
  4163ec:	sub	x0, x3, x0
  4163f0:	bl	461598 <_obstack_memory_used@@Base+0x150>
  4163f4:	ldr	x1, [x19, #40]
  4163f8:	mov	x21, x0
  4163fc:	ldp	x0, x2, [x1]
  416400:	add	x2, x0, x2, lsl #4
  416404:	cmp	x0, x2
  416408:	b.cs	41642c <nftw@plt+0x138ac>  // b.hs, b.nlast
  41640c:	nop
  416410:	ldr	x3, [x0]
  416414:	mov	x4, x0
  416418:	add	x0, x0, #0x10
  41641c:	cmp	x3, #0x1
  416420:	b.hi	41673c <nftw@plt+0x13bbc>  // b.pmore
  416424:	cmp	x2, x0
  416428:	b.hi	416410 <nftw@plt+0x13890>  // b.pmore
  41642c:	mov	x1, #0x0                   	// #0
  416430:	mov	w20, #0xffffffff            	// #-1
  416434:	nop
  416438:	adrp	x23, 417000 <nftw@plt+0x14480>
  41643c:	add	x23, x23, #0xf8
  416440:	mov	x3, x23
  416444:	mov	x0, x21
  416448:	mov	x2, #0x10                  	// #16
  41644c:	bl	41c9b8 <nftw@plt+0x19e38>
  416450:	ldr	x2, [x19, #40]
  416454:	mov	x1, #0x10                  	// #16
  416458:	ldp	x3, x0, [x2, #16]
  41645c:	sub	x0, x3, x0
  416460:	bl	461598 <_obstack_memory_used@@Base+0x150>
  416464:	ldr	x2, [x19, #40]
  416468:	mov	x22, x0
  41646c:	ldp	x1, x0, [x2]
  416470:	add	x0, x1, x0, lsl #4
  416474:	cmp	x1, x0
  416478:	b.cs	41649c <nftw@plt+0x1391c>  // b.hs, b.nlast
  41647c:	nop
  416480:	ldr	x4, [x1]
  416484:	mov	x3, x1
  416488:	add	x1, x1, #0x10
  41648c:	cmp	x4, #0x1
  416490:	b.hi	41679c <nftw@plt+0x13c1c>  // b.pmore
  416494:	cmp	x0, x1
  416498:	b.hi	416480 <nftw@plt+0x13900>  // b.pmore
  41649c:	mov	x0, x22
  4164a0:	mov	x3, x23
  4164a4:	mov	x2, #0x10                  	// #16
  4164a8:	mov	x1, #0x0                   	// #0
  4164ac:	bl	41c9b8 <nftw@plt+0x19e38>
  4164b0:	str	xzr, [sp, #192]
  4164b4:	movi	v0.4s, #0x0
  4164b8:	adrp	x0, 474000 <_obstack_memory_used@@Base+0x12bb8>
  4164bc:	ldr	q1, [x0, #464]
  4164c0:	str	q0, [sp, #176]
  4164c4:	stp	q0, q1, [sp, #144]
  4164c8:	adrp	x19, 4a4000 <_obstack_memory_used@@Base+0x42bb8>
  4164cc:	add	x19, x19, #0x570
  4164d0:	mov	x0, x22
  4164d4:	mov	x22, #0x8c                  	// #140
  4164d8:	bl	402910 <free@plt>
  4164dc:	nop
  4164e0:	ldr	x1, [x19]
  4164e4:	mov	w0, #0x2d                  	// #45
  4164e8:	bl	4025e0 <fputc@plt>
  4164ec:	subs	x22, x22, #0x1
  4164f0:	b.ne	4164e0 <nftw@plt+0x13960>  // b.any
  4164f4:	ldr	x1, [x19]
  4164f8:	mov	x2, #0x8c                  	// #140
  4164fc:	mov	w0, #0xa                   	// #10
  416500:	str	x2, [sp, #120]
  416504:	adrp	x28, 474000 <_obstack_memory_used@@Base+0x12bb8>
  416508:	adrp	x27, 474000 <_obstack_memory_used@@Base+0x12bb8>
  41650c:	bl	4025e0 <fputc@plt>
  416510:	add	x28, x28, #0xd8
  416514:	ldr	x0, [x19]
  416518:	adrp	x1, 474000 <_obstack_memory_used@@Base+0x12bb8>
  41651c:	add	x1, x1, #0x140
  416520:	str	x1, [sp]
  416524:	add	x27, x27, #0xe8
  416528:	adrp	x26, 474000 <_obstack_memory_used@@Base+0x12bb8>
  41652c:	adrp	x25, 474000 <_obstack_memory_used@@Base+0x12bb8>
  416530:	add	x26, x26, #0xf0
  416534:	add	x25, x25, #0xf8
  416538:	adrp	x24, 474000 <_obstack_memory_used@@Base+0x12bb8>
  41653c:	adrp	x23, 474000 <_obstack_memory_used@@Base+0x12bb8>
  416540:	add	x24, x24, #0x100
  416544:	add	x23, x23, #0x110
  416548:	adrp	x22, 474000 <_obstack_memory_used@@Base+0x12bb8>
  41654c:	add	x22, x22, #0x120
  416550:	mov	x7, x28
  416554:	mov	x6, x27
  416558:	mov	x5, x26
  41655c:	mov	x4, x25
  416560:	mov	x3, x24
  416564:	mov	x2, x23
  416568:	str	x1, [sp, #128]
  41656c:	mov	x1, x22
  416570:	bl	402b30 <fprintf@plt>
  416574:	nop
  416578:	ldr	x1, [x19]
  41657c:	mov	w0, #0x2d                  	// #45
  416580:	bl	4025e0 <fputc@plt>
  416584:	ldr	x0, [sp, #120]
  416588:	subs	x0, x0, #0x1
  41658c:	str	x0, [sp, #120]
  416590:	b.ne	416578 <nftw@plt+0x139f8>  // b.any
  416594:	ldr	x1, [x19]
  416598:	mov	w0, #0xa                   	// #10
  41659c:	bl	4025e0 <fputc@plt>
  4165a0:	tbnz	w20, #31, 4165dc <nftw@plt+0x13a5c>
  4165a4:	sbfiz	x3, x20, #4, #32
  4165a8:	sub	x0, x21, #0x10
  4165ac:	sub	x20, x3, w20, sxtw #4
  4165b0:	add	x3, x21, x3
  4165b4:	add	x20, x20, x0
  4165b8:	ldp	x1, x0, [x3]
  4165bc:	sub	x3, x3, #0x10
  4165c0:	add	x2, sp, #0x90
  4165c4:	str	x3, [sp, #120]
  4165c8:	str	x3, [sp, #136]
  4165cc:	bl	417158 <nftw@plt+0x145d8>
  4165d0:	ldr	x3, [sp, #120]
  4165d4:	cmp	x20, x3
  4165d8:	b.ne	4165b8 <nftw@plt+0x13a38>  // b.any
  4165dc:	mov	x20, #0x8c                  	// #140
  4165e0:	ldr	x1, [x19]
  4165e4:	mov	w0, #0x2d                  	// #45
  4165e8:	bl	4025e0 <fputc@plt>
  4165ec:	subs	x20, x20, #0x1
  4165f0:	b.ne	4165e0 <nftw@plt+0x13a60>  // b.any
  4165f4:	ldr	x1, [x19]
  4165f8:	mov	w0, #0xa                   	// #10
  4165fc:	mov	x20, #0x8c                  	// #140
  416600:	bl	4025e0 <fputc@plt>
  416604:	ldr	x0, [sp, #128]
  416608:	str	x0, [sp]
  41660c:	mov	x7, x28
  416610:	mov	x6, x27
  416614:	ldr	x0, [x19]
  416618:	mov	x5, x26
  41661c:	mov	x4, x25
  416620:	mov	x3, x24
  416624:	mov	x2, x23
  416628:	mov	x1, x22
  41662c:	bl	402b30 <fprintf@plt>
  416630:	ldr	x1, [x19]
  416634:	mov	w0, #0x2d                  	// #45
  416638:	bl	4025e0 <fputc@plt>
  41663c:	subs	x20, x20, #0x1
  416640:	b.ne	416630 <nftw@plt+0x13ab0>  // b.any
  416644:	ldr	x1, [x19]
  416648:	mov	w0, #0xa                   	// #10
  41664c:	bl	4025e0 <fputc@plt>
  416650:	ldr	x3, [sp, #144]
  416654:	mov	x1, #0x27ff                	// #10239
  416658:	mov	w4, #0x20                  	// #32
  41665c:	cmp	x3, x1
  416660:	ldr	x0, [x19]
  416664:	b.ls	41667c <nftw@plt+0x13afc>  // b.plast
  416668:	mov	w1, #0x9fffff              	// #10485759
  41666c:	cmp	x3, x1
  416670:	b.hi	416894 <nftw@plt+0x13d14>  // b.pmore
  416674:	lsr	x3, x3, #10
  416678:	mov	w4, #0x6b                  	// #107
  41667c:	ldr	x5, [sp, #152]
  416680:	mov	x1, #0x27ff                	// #10239
  416684:	mov	w6, #0x20                  	// #32
  416688:	cmp	x5, x1
  41668c:	b.ls	4166a4 <nftw@plt+0x13b24>  // b.plast
  416690:	mov	w1, #0x9fffff              	// #10485759
  416694:	cmp	x5, x1
  416698:	b.hi	4168a0 <nftw@plt+0x13d20>  // b.pmore
  41669c:	lsr	x5, x5, #10
  4166a0:	mov	w6, #0x6b                  	// #107
  4166a4:	ldr	x7, [sp, #176]
  4166a8:	mov	x2, #0x27ff                	// #10239
  4166ac:	mov	w1, #0x20                  	// #32
  4166b0:	cmp	x7, x2
  4166b4:	b.ls	4166cc <nftw@plt+0x13b4c>  // b.plast
  4166b8:	mov	w1, #0x9fffff              	// #10485759
  4166bc:	cmp	x7, x1
  4166c0:	b.hi	416888 <nftw@plt+0x13d08>  // b.pmore
  4166c4:	lsr	x7, x7, #10
  4166c8:	mov	w1, #0x6b                  	// #107
  4166cc:	str	w1, [sp]
  4166d0:	adrp	x2, 474000 <_obstack_memory_used@@Base+0x12bb8>
  4166d4:	adrp	x1, 474000 <_obstack_memory_used@@Base+0x12bb8>
  4166d8:	add	x2, x2, #0x150
  4166dc:	add	x1, x1, #0x158
  4166e0:	mov	x20, #0x8c                  	// #140
  4166e4:	bl	402b30 <fprintf@plt>
  4166e8:	ldr	x1, [x19]
  4166ec:	mov	w0, #0x2d                  	// #45
  4166f0:	bl	4025e0 <fputc@plt>
  4166f4:	subs	x20, x20, #0x1
  4166f8:	b.ne	4166e8 <nftw@plt+0x13b68>  // b.any
  4166fc:	ldr	x1, [x19]
  416700:	mov	w0, #0xa                   	// #10
  416704:	bl	4025e0 <fputc@plt>
  416708:	mov	x0, x21
  41670c:	bl	402910 <free@plt>
  416710:	ldr	x1, [x19]
  416714:	mov	w0, #0xa                   	// #10
  416718:	bl	4025e0 <fputc@plt>
  41671c:	ldp	x29, x30, [sp, #16]
  416720:	ldp	x19, x20, [sp, #32]
  416724:	ldp	x21, x22, [sp, #48]
  416728:	ldp	x23, x24, [sp, #64]
  41672c:	ldp	x25, x26, [sp, #80]
  416730:	ldp	x27, x28, [sp, #96]
  416734:	add	sp, sp, #0xd0
  416738:	ret
  41673c:	mov	w20, #0x0                   	// #0
  416740:	ldr	w0, [x3, #20]
  416744:	mov	w1, w20
  416748:	cmp	w0, #0x3
  41674c:	b.ne	41676c <nftw@plt+0x13bec>  // b.any
  416750:	lsl	x0, x1, #4
  416754:	add	w1, w20, #0x1
  416758:	add	x5, x21, x0
  41675c:	add	w20, w20, #0x1
  416760:	ldr	x6, [x4, #8]
  416764:	str	x3, [x21, x0]
  416768:	str	x6, [x5, #8]
  41676c:	add	x0, x4, #0x10
  416770:	cmp	x2, x0
  416774:	b.ls	416794 <nftw@plt+0x13c14>  // b.plast
  416778:	ldr	x3, [x0]
  41677c:	mov	x4, x0
  416780:	add	x0, x0, #0x10
  416784:	cmp	x3, #0x1
  416788:	b.hi	416740 <nftw@plt+0x13bc0>  // b.pmore
  41678c:	cmp	x2, x0
  416790:	b.hi	416778 <nftw@plt+0x13bf8>  // b.pmore
  416794:	sub	w20, w20, #0x1
  416798:	b	416438 <nftw@plt+0x138b8>
  41679c:	mov	w19, #0x0                   	// #0
  4167a0:	ldr	w2, [x4, #20]
  4167a4:	mov	w1, w19
  4167a8:	cmp	w2, #0x3
  4167ac:	b.eq	416868 <nftw@plt+0x13ce8>  // b.none
  4167b0:	add	x2, x3, #0x10
  4167b4:	b	4167cc <nftw@plt+0x13c4c>
  4167b8:	ldr	x4, [x2]
  4167bc:	mov	x3, x2
  4167c0:	add	x2, x2, #0x10
  4167c4:	cmp	x4, #0x1
  4167c8:	b.hi	4167a0 <nftw@plt+0x13c20>  // b.pmore
  4167cc:	cmp	x0, x2
  4167d0:	b.hi	4167b8 <nftw@plt+0x13c38>  // b.pmore
  4167d4:	mov	x0, x22
  4167d8:	mov	x3, x23
  4167dc:	mov	x2, #0x10                  	// #16
  4167e0:	bl	41c9b8 <nftw@plt+0x19e38>
  4167e4:	adrp	x0, 474000 <_obstack_memory_used@@Base+0x12bb8>
  4167e8:	str	xzr, [sp, #192]
  4167ec:	movi	v0.4s, #0x0
  4167f0:	ldr	q1, [x0, #464]
  4167f4:	str	q0, [sp, #176]
  4167f8:	stp	q0, q1, [sp, #144]
  4167fc:	cbz	w19, 4164c8 <nftw@plt+0x13948>
  416800:	sub	w1, w19, #0x1
  416804:	add	x6, x22, #0x8
  416808:	add	x19, x22, #0x18
  41680c:	mov	x5, #0x0                   	// #0
  416810:	add	x19, x19, w1, uxtw #4
  416814:	mov	x4, #0x0                   	// #0
  416818:	mov	x3, #0x0                   	// #0
  41681c:	mov	x2, #0x0                   	// #0
  416820:	mov	x1, #0x0                   	// #0
  416824:	nop
  416828:	ldr	x0, [x6], #16
  41682c:	cmp	x6, x19
  416830:	ldp	x8, x7, [x0]
  416834:	add	x1, x1, x8
  416838:	add	x2, x2, x7
  41683c:	ldr	x8, [x0, #16]
  416840:	stp	x1, x2, [sp, #144]
  416844:	ldp	x7, x0, [x0, #32]
  416848:	add	x3, x3, x8
  41684c:	stp	x3, xzr, [sp, #160]
  416850:	str	xzr, [sp, #192]
  416854:	add	x4, x4, x7
  416858:	add	x5, x5, x0
  41685c:	stp	x4, x5, [sp, #176]
  416860:	b.ne	416828 <nftw@plt+0x13ca8>  // b.any
  416864:	b	4164c8 <nftw@plt+0x13948>
  416868:	lsl	x2, x1, #4
  41686c:	add	w1, w19, #0x1
  416870:	add	x5, x22, x2
  416874:	add	w19, w19, #0x1
  416878:	ldr	x6, [x3, #8]
  41687c:	str	x4, [x22, x2]
  416880:	str	x6, [x5, #8]
  416884:	b	4167b0 <nftw@plt+0x13c30>
  416888:	lsr	x7, x7, #20
  41688c:	mov	w1, #0x4d                  	// #77
  416890:	b	4166cc <nftw@plt+0x13b4c>
  416894:	lsr	x3, x3, #20
  416898:	mov	w4, #0x4d                  	// #77
  41689c:	b	41667c <nftw@plt+0x13afc>
  4168a0:	lsr	x5, x5, #20
  4168a4:	mov	w6, #0x4d                  	// #77
  4168a8:	b	4166a4 <nftw@plt+0x13b24>
  4168ac:	nop
  4168b0:	stp	x29, x30, [sp, #-128]!
  4168b4:	mov	x29, sp
  4168b8:	stp	x19, x20, [sp, #16]
  4168bc:	adrp	x20, 4a5000 <__environ@@GLIBC_2.17+0xa68>
  4168c0:	add	x20, x20, #0x8e0
  4168c4:	stp	x23, x24, [sp, #48]
  4168c8:	asr	x23, x1, #3
  4168cc:	mov	x19, x1
  4168d0:	ldr	x0, [x20, #48]
  4168d4:	and	w24, w4, #0xff
  4168d8:	add	x1, sp, #0x78
  4168dc:	stp	x21, x22, [sp, #32]
  4168e0:	mov	x21, x2
  4168e4:	mov	x22, x3
  4168e8:	mov	w2, w23
  4168ec:	str	x19, [sp, #120]
  4168f0:	bl	417490 <nftw@plt+0x14910>
  4168f4:	ldr	x0, [x0]
  4168f8:	cbz	x0, 416994 <nftw@plt+0x13e14>
  4168fc:	ldr	x0, [x20, #48]
  416900:	add	x1, sp, #0x78
  416904:	mov	w2, w23
  416908:	str	x19, [sp, #120]
  41690c:	bl	417490 <nftw@plt+0x14910>
  416910:	ldr	x1, [x0]
  416914:	stp	x25, x26, [sp, #64]
  416918:	cbz	x1, 416c24 <nftw@plt+0x140a4>
  41691c:	ldr	x25, [x0, #8]
  416920:	ldr	x2, [x25]
  416924:	cmp	x21, x2
  416928:	b.hi	416c08 <nftw@plt+0x14088>  // b.pmore
  41692c:	sub	x2, x2, x21
  416930:	str	x2, [x25]
  416934:	cbnz	w24, 41695c <nftw@plt+0x13ddc>
  416938:	ldr	x3, [x25, #32]
  41693c:	ldp	x19, x20, [sp, #16]
  416940:	sub	x22, x3, x22
  416944:	ldp	x23, x24, [sp, #48]
  416948:	str	x22, [x25, #32]
  41694c:	ldp	x21, x22, [sp, #32]
  416950:	ldp	x25, x26, [sp, #64]
  416954:	ldp	x29, x30, [sp], #128
  416958:	ret
  41695c:	ldr	x20, [x20, #48]
  416960:	mov	w2, w23
  416964:	add	x1, sp, #0x78
  416968:	mov	w3, #0x0                   	// #0
  41696c:	mov	x0, x20
  416970:	str	x19, [sp, #120]
  416974:	bl	417db0 <nftw@plt+0x15230>
  416978:	cbz	x0, 416938 <nftw@plt+0x13db8>
  41697c:	ldr	x1, [x20, #24]
  416980:	mov	x2, #0x1                   	// #1
  416984:	str	x2, [x0]
  416988:	add	x0, x1, x2
  41698c:	str	x0, [x20, #24]
  416990:	b	416938 <nftw@plt+0x13db8>
  416994:	mov	x0, #0x20                  	// #32
  416998:	stp	x25, x26, [sp, #64]
  41699c:	mov	w25, #0x79b9                	// #31161
  4169a0:	stp	x27, x28, [sp, #80]
  4169a4:	bl	461d40 <_obstack_memory_used@@Base+0x8f8>
  4169a8:	mov	x26, x0
  4169ac:	movi	v0.4s, #0x0
  4169b0:	mov	x3, #0x300000000           	// #12884901888
  4169b4:	mov	w2, #0x0                   	// #0
  4169b8:	mov	x1, #0x8                   	// #8
  4169bc:	str	x3, [x26, #16]
  4169c0:	add	x0, sp, #0x78
  4169c4:	strb	wzr, [x26, #24]
  4169c8:	movk	w25, #0x9e37, lsl #16
  4169cc:	str	q0, [x26]
  4169d0:	stp	x19, x26, [sp, #104]
  4169d4:	str	xzr, [sp, #120]
  4169d8:	ldr	x27, [x20, #40]
  4169dc:	bl	460c50 <nftw@plt+0x5e0d0>
  4169e0:	ldr	x3, [x26, #8]
  4169e4:	mov	w2, w0
  4169e8:	mov	x1, #0x8                   	// #8
  4169ec:	add	x0, sp, #0x78
  4169f0:	str	x3, [sp, #120]
  4169f4:	bl	460c50 <nftw@plt+0x5e0d0>
  4169f8:	mov	w4, w0
  4169fc:	ldr	w3, [x26, #16]
  416a00:	sub	w2, w25, w0
  416a04:	add	x1, sp, #0x70
  416a08:	mov	x0, x27
  416a0c:	sub	w2, w2, w3
  416a10:	sub	w3, w3, w4
  416a14:	eor	w2, w2, w4, lsr #13
  416a18:	sub	w3, w3, w2
  416a1c:	sub	w4, w4, w2
  416a20:	eor	w3, w3, w2, lsl #8
  416a24:	sub	w4, w4, w3
  416a28:	sub	w2, w2, w3
  416a2c:	eor	w4, w4, w3, lsr #13
  416a30:	sub	w2, w2, w4
  416a34:	sub	w3, w3, w4
  416a38:	eor	w2, w2, w4, lsr #12
  416a3c:	sub	w3, w3, w2
  416a40:	sub	w4, w4, w2
  416a44:	eor	w3, w3, w2, lsl #16
  416a48:	sub	w4, w4, w3
  416a4c:	sub	w2, w2, w3
  416a50:	eor	w4, w4, w3, lsr #5
  416a54:	sub	w2, w2, w4
  416a58:	sub	w3, w3, w4
  416a5c:	eor	w2, w2, w4, lsr #3
  416a60:	sub	w3, w3, w2
  416a64:	sub	w4, w4, w2
  416a68:	eor	w2, w3, w2, lsl #10
  416a6c:	sub	w4, w4, w2
  416a70:	eor	w2, w4, w2, lsr #15
  416a74:	bl	417580 <nftw@plt+0x14a00>
  416a78:	mov	x26, x0
  416a7c:	ldr	x0, [x0]
  416a80:	cbz	x0, 416acc <nftw@plt+0x13f4c>
  416a84:	ldr	x0, [sp, #112]
  416a88:	cbz	x0, 416a94 <nftw@plt+0x13f14>
  416a8c:	mov	x1, #0x20                  	// #32
  416a90:	bl	461b00 <_obstack_memory_used@@Base+0x6b8>
  416a94:	ldr	x26, [x26, #8]
  416a98:	ldr	x0, [x26, #24]
  416a9c:	add	x0, x0, #0x1
  416aa0:	str	x0, [x26, #24]
  416aa4:	ldr	x0, [x20, #48]
  416aa8:	add	x1, sp, #0x68
  416aac:	ldr	x2, [sp, #104]
  416ab0:	ubfx	x2, x2, #3, #32
  416ab4:	bl	417490 <nftw@plt+0x14910>
  416ab8:	ldr	x0, [x0]
  416abc:	cbz	x0, 416bcc <nftw@plt+0x1404c>
  416ac0:	ldp	x25, x26, [sp, #64]
  416ac4:	ldp	x27, x28, [sp, #80]
  416ac8:	b	4168fc <nftw@plt+0x13d7c>
  416acc:	mov	x0, #0x38                  	// #56
  416ad0:	bl	461d40 <_obstack_memory_used@@Base+0x8f8>
  416ad4:	ldr	x27, [sp, #112]
  416ad8:	adrp	x3, 474000 <_obstack_memory_used@@Base+0x12bb8>
  416adc:	mov	x26, x0
  416ae0:	mov	w2, #0x0                   	// #0
  416ae4:	ldr	q1, [x3, #464]
  416ae8:	mov	x1, #0x8                   	// #8
  416aec:	movi	v0.4s, #0x0
  416af0:	add	x0, sp, #0x78
  416af4:	ldr	x3, [x27]
  416af8:	str	xzr, [x26, #48]
  416afc:	str	x3, [sp, #120]
  416b00:	stp	q0, q1, [x26]
  416b04:	str	q0, [x26, #32]
  416b08:	ldr	x28, [x20, #40]
  416b0c:	bl	460c50 <nftw@plt+0x5e0d0>
  416b10:	ldr	x3, [x27, #8]
  416b14:	mov	w2, w0
  416b18:	mov	x1, #0x8                   	// #8
  416b1c:	add	x0, sp, #0x78
  416b20:	str	x3, [sp, #120]
  416b24:	bl	460c50 <nftw@plt+0x5e0d0>
  416b28:	mov	w4, w0
  416b2c:	ldr	w3, [x27, #16]
  416b30:	add	x1, sp, #0x70
  416b34:	mov	x0, x28
  416b38:	sub	w2, w25, w3
  416b3c:	sub	w5, w3, w4
  416b40:	sub	w2, w2, w4
  416b44:	mov	w3, #0x1                   	// #1
  416b48:	eor	w2, w2, w4, lsr #13
  416b4c:	sub	w5, w5, w2
  416b50:	sub	w4, w4, w2
  416b54:	eor	w5, w5, w2, lsl #8
  416b58:	sub	w4, w4, w5
  416b5c:	sub	w2, w2, w5
  416b60:	eor	w4, w4, w5, lsr #13
  416b64:	sub	w2, w2, w4
  416b68:	sub	w5, w5, w4
  416b6c:	eor	w2, w2, w4, lsr #12
  416b70:	sub	w5, w5, w2
  416b74:	sub	w4, w4, w2
  416b78:	eor	w5, w5, w2, lsl #16
  416b7c:	sub	w4, w4, w5
  416b80:	sub	w2, w2, w5
  416b84:	eor	w4, w4, w5, lsr #5
  416b88:	sub	w2, w2, w4
  416b8c:	sub	w5, w5, w4
  416b90:	eor	w2, w2, w4, lsr #3
  416b94:	sub	w5, w5, w2
  416b98:	sub	w4, w4, w2
  416b9c:	eor	w2, w5, w2, lsl #10
  416ba0:	sub	w4, w4, w2
  416ba4:	eor	w2, w4, w2, lsr #15
  416ba8:	bl	417988 <nftw@plt+0x14e08>
  416bac:	ldr	x1, [x0]
  416bb0:	cbz	x1, 416bbc <nftw@plt+0x1403c>
  416bb4:	str	x26, [x0, #8]
  416bb8:	b	416aa4 <nftw@plt+0x13f24>
  416bbc:	ldr	x1, [sp, #112]
  416bc0:	str	x1, [x0]
  416bc4:	str	x26, [x0, #8]
  416bc8:	b	416aa4 <nftw@plt+0x13f24>
  416bcc:	ldr	x0, [x20, #48]
  416bd0:	add	x1, sp, #0x68
  416bd4:	ldr	x2, [sp, #104]
  416bd8:	mov	w3, #0x1                   	// #1
  416bdc:	ubfx	x2, x2, #3, #32
  416be0:	bl	417db0 <nftw@plt+0x15230>
  416be4:	ldr	x1, [x0]
  416be8:	cbz	x1, 416bfc <nftw@plt+0x1407c>
  416bec:	ldp	x27, x28, [sp, #80]
  416bf0:	stp	x26, xzr, [x0, #8]
  416bf4:	ldp	x25, x26, [sp, #64]
  416bf8:	b	4168fc <nftw@plt+0x13d7c>
  416bfc:	ldr	x1, [sp, #104]
  416c00:	str	x1, [x0]
  416c04:	b	416bec <nftw@plt+0x1406c>
  416c08:	adrp	x2, 474000 <_obstack_memory_used@@Base+0x12bb8>
  416c0c:	adrp	x0, 474000 <_obstack_memory_used@@Base+0x12bb8>
  416c10:	add	x2, x2, #0x178
  416c14:	add	x0, x0, #0x190
  416c18:	mov	w1, #0x97                  	// #151
  416c1c:	stp	x27, x28, [sp, #80]
  416c20:	bl	402bf0 <nftw@plt+0x70>
  416c24:	stp	x27, x28, [sp, #80]
  416c28:	ldr	x0, [x1, #32]
  416c2c:	brk	#0x3e8
  416c30:	stp	x29, x30, [sp, #-112]!
  416c34:	mov	x0, #0x20                  	// #32
  416c38:	mov	x29, sp
  416c3c:	stp	x19, x20, [sp, #16]
  416c40:	mov	x19, x2
  416c44:	mov	w20, #0x79b9                	// #31161
  416c48:	stp	x21, x22, [sp, #32]
  416c4c:	mov	x22, x1
  416c50:	adrp	x21, 4a5000 <__environ@@GLIBC_2.17+0xa68>
  416c54:	stp	x23, x24, [sp, #48]
  416c58:	mov	x23, x3
  416c5c:	add	x21, x21, #0x8e0
  416c60:	stp	x25, x26, [sp, #64]
  416c64:	bl	461d40 <_obstack_memory_used@@Base+0x8f8>
  416c68:	mov	x24, x0
  416c6c:	movi	v0.4s, #0x0
  416c70:	mov	x3, #0x300000000           	// #12884901888
  416c74:	mov	w2, #0x0                   	// #0
  416c78:	mov	x1, #0x8                   	// #8
  416c7c:	str	x3, [x24, #16]
  416c80:	add	x0, sp, #0x68
  416c84:	strb	wzr, [x24, #24]
  416c88:	movk	w20, #0x9e37, lsl #16
  416c8c:	str	q0, [x24]
  416c90:	stp	x22, x24, [sp, #88]
  416c94:	str	xzr, [sp, #104]
  416c98:	ldr	x25, [x21, #40]
  416c9c:	bl	460c50 <nftw@plt+0x5e0d0>
  416ca0:	ldr	x3, [x24, #8]
  416ca4:	mov	w2, w0
  416ca8:	mov	x1, #0x8                   	// #8
  416cac:	add	x0, sp, #0x68
  416cb0:	str	x3, [sp, #104]
  416cb4:	bl	460c50 <nftw@plt+0x5e0d0>
  416cb8:	mov	w4, w0
  416cbc:	ldr	w3, [x24, #16]
  416cc0:	sub	w2, w20, w0
  416cc4:	add	x1, sp, #0x60
  416cc8:	mov	x0, x25
  416ccc:	sub	w2, w2, w3
  416cd0:	sub	w3, w3, w4
  416cd4:	eor	w2, w2, w4, lsr #13
  416cd8:	sub	w3, w3, w2
  416cdc:	sub	w4, w4, w2
  416ce0:	eor	w3, w3, w2, lsl #8
  416ce4:	sub	w4, w4, w3
  416ce8:	sub	w2, w2, w3
  416cec:	eor	w4, w4, w3, lsr #13
  416cf0:	sub	w2, w2, w4
  416cf4:	sub	w3, w3, w4
  416cf8:	eor	w2, w2, w4, lsr #12
  416cfc:	sub	w3, w3, w2
  416d00:	sub	w4, w4, w2
  416d04:	eor	w3, w3, w2, lsl #16
  416d08:	sub	w4, w4, w3
  416d0c:	sub	w2, w2, w3
  416d10:	eor	w4, w4, w3, lsr #5
  416d14:	sub	w2, w2, w4
  416d18:	sub	w3, w3, w4
  416d1c:	eor	w2, w2, w4, lsr #3
  416d20:	sub	w3, w3, w2
  416d24:	sub	w4, w4, w2
  416d28:	eor	w2, w3, w2, lsl #10
  416d2c:	sub	w4, w4, w2
  416d30:	eor	w2, w4, w2, lsr #15
  416d34:	bl	417580 <nftw@plt+0x14a00>
  416d38:	mov	x24, x0
  416d3c:	ldr	x0, [x0]
  416d40:	cbz	x0, 416df8 <nftw@plt+0x14278>
  416d44:	ldr	x0, [sp, #96]
  416d48:	cbz	x0, 416d54 <nftw@plt+0x141d4>
  416d4c:	mov	x1, #0x20                  	// #32
  416d50:	bl	461b00 <_obstack_memory_used@@Base+0x6b8>
  416d54:	ldr	x24, [x24, #8]
  416d58:	add	x1, sp, #0x58
  416d5c:	ldr	x2, [sp, #88]
  416d60:	ldr	x0, [x24, #24]
  416d64:	ubfx	x2, x2, #3, #32
  416d68:	add	x0, x0, #0x1
  416d6c:	str	x0, [x24, #24]
  416d70:	ldr	x0, [x21, #48]
  416d74:	bl	417490 <nftw@plt+0x14910>
  416d78:	ldr	x0, [x0]
  416d7c:	cbz	x0, 416f00 <nftw@plt+0x14380>
  416d80:	ldr	x0, [x21, #48]
  416d84:	add	x1, sp, #0x68
  416d88:	ubfx	x2, x22, #3, #32
  416d8c:	str	x22, [sp, #104]
  416d90:	mul	x20, x19, x23
  416d94:	bl	417490 <nftw@plt+0x14910>
  416d98:	ldr	x1, [x0]
  416d9c:	cbz	x1, 416f48 <nftw@plt+0x143c8>
  416da0:	ldr	x0, [x0, #8]
  416da4:	ldp	x1, x2, [x0]
  416da8:	ldr	x3, [x0, #16]
  416dac:	add	x1, x20, x1
  416db0:	add	x2, x2, #0x1
  416db4:	stp	x1, x2, [x0]
  416db8:	cmp	x1, x3
  416dbc:	b.ls	416dc4 <nftw@plt+0x14244>  // b.plast
  416dc0:	str	x1, [x0, #16]
  416dc4:	ldp	x2, x1, [x0, #32]
  416dc8:	str	x23, [x0, #48]
  416dcc:	add	x19, x19, x2
  416dd0:	str	x19, [x0, #32]
  416dd4:	cmp	x19, x1
  416dd8:	b.ls	416de0 <nftw@plt+0x14260>  // b.plast
  416ddc:	str	x19, [x0, #40]
  416de0:	ldp	x19, x20, [sp, #16]
  416de4:	ldp	x21, x22, [sp, #32]
  416de8:	ldp	x23, x24, [sp, #48]
  416dec:	ldp	x25, x26, [sp, #64]
  416df0:	ldp	x29, x30, [sp], #112
  416df4:	ret
  416df8:	mov	x0, #0x38                  	// #56
  416dfc:	bl	461d40 <_obstack_memory_used@@Base+0x8f8>
  416e00:	ldr	x25, [sp, #96]
  416e04:	adrp	x3, 474000 <_obstack_memory_used@@Base+0x12bb8>
  416e08:	mov	x24, x0
  416e0c:	mov	w2, #0x0                   	// #0
  416e10:	ldr	q1, [x3, #464]
  416e14:	mov	x1, #0x8                   	// #8
  416e18:	movi	v0.4s, #0x0
  416e1c:	add	x0, sp, #0x68
  416e20:	ldr	x3, [x25]
  416e24:	str	xzr, [x24, #48]
  416e28:	str	x3, [sp, #104]
  416e2c:	stp	q0, q1, [x24]
  416e30:	str	q0, [x24, #32]
  416e34:	ldr	x26, [x21, #40]
  416e38:	bl	460c50 <nftw@plt+0x5e0d0>
  416e3c:	ldr	x3, [x25, #8]
  416e40:	mov	w2, w0
  416e44:	mov	x1, #0x8                   	// #8
  416e48:	add	x0, sp, #0x68
  416e4c:	str	x3, [sp, #104]
  416e50:	bl	460c50 <nftw@plt+0x5e0d0>
  416e54:	mov	w4, w0
  416e58:	ldr	w5, [x25, #16]
  416e5c:	add	x1, sp, #0x60
  416e60:	mov	x0, x26
  416e64:	mov	w3, #0x1                   	// #1
  416e68:	sub	w2, w20, w5
  416e6c:	sub	w5, w5, w4
  416e70:	sub	w2, w2, w4
  416e74:	eor	w2, w2, w4, lsr #13
  416e78:	sub	w5, w5, w2
  416e7c:	sub	w4, w4, w2
  416e80:	eor	w5, w5, w2, lsl #8
  416e84:	sub	w4, w4, w5
  416e88:	sub	w2, w2, w5
  416e8c:	eor	w4, w4, w5, lsr #13
  416e90:	sub	w2, w2, w4
  416e94:	sub	w5, w5, w4
  416e98:	eor	w2, w2, w4, lsr #12
  416e9c:	sub	w5, w5, w2
  416ea0:	sub	w4, w4, w2
  416ea4:	eor	w5, w5, w2, lsl #16
  416ea8:	sub	w4, w4, w5
  416eac:	sub	w2, w2, w5
  416eb0:	eor	w4, w4, w5, lsr #5
  416eb4:	sub	w2, w2, w4
  416eb8:	sub	w5, w5, w4
  416ebc:	eor	w2, w2, w4, lsr #3
  416ec0:	sub	w5, w5, w2
  416ec4:	sub	w4, w4, w2
  416ec8:	eor	w2, w5, w2, lsl #10
  416ecc:	sub	w4, w4, w2
  416ed0:	eor	w2, w4, w2, lsr #15
  416ed4:	bl	417988 <nftw@plt+0x14e08>
  416ed8:	ldr	x1, [x0]
  416edc:	cbz	x1, 416f28 <nftw@plt+0x143a8>
  416ee0:	str	x24, [x0, #8]
  416ee4:	ldr	x0, [x21, #48]
  416ee8:	add	x1, sp, #0x58
  416eec:	ldr	x2, [sp, #88]
  416ef0:	ubfx	x2, x2, #3, #32
  416ef4:	bl	417490 <nftw@plt+0x14910>
  416ef8:	ldr	x0, [x0]
  416efc:	cbnz	x0, 416d80 <nftw@plt+0x14200>
  416f00:	ldr	x0, [x21, #48]
  416f04:	add	x1, sp, #0x58
  416f08:	ldr	x2, [sp, #88]
  416f0c:	mov	w3, #0x1                   	// #1
  416f10:	ubfx	x2, x2, #3, #32
  416f14:	bl	417db0 <nftw@plt+0x15230>
  416f18:	ldr	x1, [x0]
  416f1c:	cbz	x1, 416f38 <nftw@plt+0x143b8>
  416f20:	stp	x24, xzr, [x0, #8]
  416f24:	b	416d80 <nftw@plt+0x14200>
  416f28:	ldr	x1, [sp, #96]
  416f2c:	str	x1, [x0]
  416f30:	str	x24, [x0, #8]
  416f34:	b	416ee4 <nftw@plt+0x14364>
  416f38:	ldr	x1, [sp, #88]
  416f3c:	str	x1, [x0]
  416f40:	stp	x24, xzr, [x0, #8]
  416f44:	b	416d80 <nftw@plt+0x14200>
  416f48:	str	xzr, [x1, #48]
  416f4c:	brk	#0x3e8
  416f50:	stp	x29, x30, [sp, #-48]!
  416f54:	mov	x29, sp
  416f58:	stp	x21, x22, [sp, #32]
  416f5c:	mov	x21, x0
  416f60:	ldr	x22, [x0, #40]
  416f64:	stp	x19, x20, [sp, #16]
  416f68:	ldp	x3, x2, [x22]
  416f6c:	add	x20, x3, x2, lsl #4
  416f70:	cmp	x3, x20
  416f74:	b.cs	416f9c <nftw@plt+0x1441c>  // b.hs, b.nlast
  416f78:	mov	x1, x3
  416f7c:	nop
  416f80:	ldr	x0, [x1]
  416f84:	mov	x19, x1
  416f88:	add	x1, x1, #0x10
  416f8c:	cmp	x0, #0x1
  416f90:	b.hi	41705c <nftw@plt+0x144dc>  // b.pmore
  416f94:	cmp	x20, x1
  416f98:	b.hi	416f80 <nftw@plt+0x14400>  // b.pmore
  416f9c:	sub	x1, x2, #0x1
  416fa0:	cbz	x2, 416fb4 <nftw@plt+0x14434>
  416fa4:	nop
  416fa8:	sub	x1, x1, #0x1
  416fac:	cmp	x1, x2
  416fb0:	b.cc	416fa8 <nftw@plt+0x14428>  // b.lo, b.ul, b.last
  416fb4:	ldrb	w0, [x22, #44]
  416fb8:	cbz	w0, 4170d8 <nftw@plt+0x14558>
  416fbc:	mov	x0, x3
  416fc0:	bl	41c228 <nftw@plt+0x196a8>
  416fc4:	mov	x0, x22
  416fc8:	mov	x1, #0x30                  	// #48
  416fcc:	bl	461b00 <_obstack_memory_used@@Base+0x6b8>
  416fd0:	ldr	x19, [x21, #48]
  416fd4:	cbz	x19, 417010 <nftw@plt+0x14490>
  416fd8:	ldr	x0, [x19, #8]
  416fdc:	sub	x1, x0, #0x1
  416fe0:	cbz	x0, 416ff4 <nftw@plt+0x14474>
  416fe4:	nop
  416fe8:	sub	x1, x1, #0x1
  416fec:	cmp	x0, x1
  416ff0:	b.hi	416fe8 <nftw@plt+0x14468>  // b.pmore
  416ff4:	ldrb	w1, [x19, #44]
  416ff8:	ldr	x0, [x19]
  416ffc:	cbz	w1, 4170d0 <nftw@plt+0x14550>
  417000:	bl	41c228 <nftw@plt+0x196a8>
  417004:	mov	x0, x19
  417008:	mov	x1, #0x30                  	// #48
  41700c:	bl	461b00 <_obstack_memory_used@@Base+0x6b8>
  417010:	ldr	x19, [x21]
  417014:	cbz	x19, 4170e4 <nftw@plt+0x14564>
  417018:	ldr	x1, [x19, #8]
  41701c:	sub	x0, x1, #0x1
  417020:	cbz	x1, 417034 <nftw@plt+0x144b4>
  417024:	nop
  417028:	sub	x0, x0, #0x1
  41702c:	cmp	x1, x0
  417030:	b.hi	417028 <nftw@plt+0x144a8>  // b.pmore
  417034:	ldrb	w1, [x19, #44]
  417038:	ldr	x0, [x19]
  41703c:	cbz	w1, 4170b4 <nftw@plt+0x14534>
  417040:	bl	41c228 <nftw@plt+0x196a8>
  417044:	mov	x0, x19
  417048:	mov	x1, #0x30                  	// #48
  41704c:	ldp	x19, x20, [sp, #16]
  417050:	ldp	x21, x22, [sp, #32]
  417054:	ldp	x29, x30, [sp], #48
  417058:	b	461b00 <_obstack_memory_used@@Base+0x6b8>
  41705c:	cbz	x0, 417068 <nftw@plt+0x144e8>
  417060:	mov	x1, #0x20                  	// #32
  417064:	bl	461b00 <_obstack_memory_used@@Base+0x6b8>
  417068:	ldr	x0, [x19, #8]
  41706c:	cbz	x0, 417078 <nftw@plt+0x144f8>
  417070:	mov	x1, #0x38                  	// #56
  417074:	bl	461b00 <_obstack_memory_used@@Base+0x6b8>
  417078:	add	x1, x19, #0x10
  41707c:	b	417094 <nftw@plt+0x14514>
  417080:	ldr	x0, [x1]
  417084:	mov	x19, x1
  417088:	add	x1, x1, #0x10
  41708c:	cmp	x0, #0x1
  417090:	b.hi	41705c <nftw@plt+0x144dc>  // b.pmore
  417094:	cmp	x20, x1
  417098:	b.hi	417080 <nftw@plt+0x14500>  // b.pmore
  41709c:	ldr	x22, [x21, #40]
  4170a0:	cbz	x22, 416fd0 <nftw@plt+0x14450>
  4170a4:	ldp	x3, x2, [x22]
  4170a8:	sub	x1, x2, #0x1
  4170ac:	cbnz	x2, 416fa8 <nftw@plt+0x14428>
  4170b0:	b	416fb4 <nftw@plt+0x14434>
  4170b4:	bl	402910 <free@plt>
  4170b8:	mov	x0, x19
  4170bc:	mov	x1, #0x30                  	// #48
  4170c0:	ldp	x19, x20, [sp, #16]
  4170c4:	ldp	x21, x22, [sp, #32]
  4170c8:	ldp	x29, x30, [sp], #48
  4170cc:	b	461b00 <_obstack_memory_used@@Base+0x6b8>
  4170d0:	bl	402910 <free@plt>
  4170d4:	b	417004 <nftw@plt+0x14484>
  4170d8:	mov	x0, x3
  4170dc:	bl	402910 <free@plt>
  4170e0:	b	416fc4 <nftw@plt+0x14444>
  4170e4:	ldp	x19, x20, [sp, #16]
  4170e8:	ldp	x21, x22, [sp, #32]
  4170ec:	ldp	x29, x30, [sp], #48
  4170f0:	ret
  4170f4:	nop
  4170f8:	ldr	x0, [x0, #8]
  4170fc:	ldr	x1, [x1, #8]
  417100:	ldr	x2, [x0]
  417104:	ldr	x3, [x1]
  417108:	cmp	x3, x2
  41710c:	b.eq	417124 <nftw@plt+0x145a4>  // b.none
  417110:	cset	w0, hi  // hi = pmore
  417114:	cmp	w0, #0x0
  417118:	mov	w0, #0x1                   	// #1
  41711c:	cneg	w0, w0, eq  // eq = none
  417120:	ret
  417124:	ldr	x3, [x0, #16]
  417128:	ldr	x2, [x1, #16]
  41712c:	cmp	x3, x2
  417130:	b.eq	41713c <nftw@plt+0x145bc>  // b.none
  417134:	cset	w0, cc  // cc = lo, ul, last
  417138:	b	417114 <nftw@plt+0x14594>
  41713c:	ldr	x2, [x0, #8]
  417140:	mov	w0, #0x0                   	// #0
  417144:	ldr	x1, [x1, #8]
  417148:	cmp	x2, x1
  41714c:	b.eq	417120 <nftw@plt+0x145a0>  // b.none
  417150:	cset	w0, cc  // cc = lo, ul, last
  417154:	b	417114 <nftw@plt+0x14594>
  417158:	mov	x12, #0x1070                	// #4208
  41715c:	sub	sp, sp, x12
  417160:	stp	x29, x30, [sp, #48]
  417164:	add	x29, sp, #0x30
  417168:	stp	x19, x20, [sp, #64]
  41716c:	adrp	x20, 474000 <_obstack_memory_used@@Base+0x12bb8>
  417170:	add	x20, x20, #0x58
  417174:	stp	x21, x22, [sp, #80]
  417178:	mov	x22, x1
  41717c:	mov	x21, x0
  417180:	ldr	x19, [x1]
  417184:	str	x23, [sp, #96]
  417188:	mov	x23, x2
  41718c:	b	417194 <nftw@plt+0x14614>
  417190:	add	x19, x0, #0x4
  417194:	mov	x1, x20
  417198:	mov	x0, x19
  41719c:	bl	402a20 <strstr@plt>
  4171a0:	cbnz	x0, 417190 <nftw@plt+0x14610>
  4171a4:	ldr	w3, [x22, #16]
  4171a8:	mov	x2, x19
  4171ac:	ldr	x4, [x22, #8]
  4171b0:	add	x0, sp, #0x70
  4171b4:	adrp	x1, 474000 <_obstack_memory_used@@Base+0x12bb8>
  4171b8:	add	x1, x1, #0x60
  4171bc:	bl	4025b0 <sprintf@plt>
  4171c0:	strb	wzr, [sp, #160]
  4171c4:	ldr	x1, [x21]
  4171c8:	adrp	x0, 4a4000 <_obstack_memory_used@@Base+0x42bb8>
  4171cc:	mov	x2, #0x27ff                	// #10239
  4171d0:	ldr	x0, [x0, #1392]
  4171d4:	cmp	x1, x2
  4171d8:	ldr	x3, [x21, #48]
  4171dc:	b.ls	4171f8 <nftw@plt+0x14678>  // b.plast
  4171e0:	mov	w2, #0x9fffff              	// #10485759
  4171e4:	cmp	x1, x2
  4171e8:	b.hi	417318 <nftw@plt+0x14798>  // b.pmore
  4171ec:	lsr	x4, x1, #10
  4171f0:	mov	w5, #0x6b                  	// #107
  4171f4:	b	417200 <nftw@plt+0x14680>
  4171f8:	mov	x4, x1
  4171fc:	mov	w5, #0x20                  	// #32
  417200:	ucvtf	d0, x1
  417204:	mov	x1, #0x4059000000000000    	// #4636737291354636288
  417208:	ldr	d1, [x23]
  41720c:	fmov	d2, x1
  417210:	ldr	x6, [x21, #16]
  417214:	fmul	d0, d0, d2
  417218:	ucvtf	d1, d1
  41721c:	mov	x1, #0x27ff                	// #10239
  417220:	mov	w7, #0x20                  	// #32
  417224:	cmp	x6, x1
  417228:	fdiv	d0, d0, d1
  41722c:	b.ls	417244 <nftw@plt+0x146c4>  // b.plast
  417230:	mov	w1, #0x9fffff              	// #10485759
  417234:	cmp	x6, x1
  417238:	b.hi	41730c <nftw@plt+0x1478c>  // b.pmore
  41723c:	lsr	x6, x6, #10
  417240:	mov	w7, #0x6b                  	// #107
  417244:	ldr	d4, [x21, #8]
  417248:	mov	x1, #0x4059000000000000    	// #4636737291354636288
  41724c:	ldr	d2, [x23, #8]
  417250:	fmov	d3, x1
  417254:	ucvtf	d1, d4
  417258:	mov	x1, #0x27ff                	// #10239
  41725c:	ldr	x2, [x21, #32]
  417260:	ucvtf	d2, d2
  417264:	mov	w9, #0x20                  	// #32
  417268:	fmul	d1, d1, d3
  41726c:	cmp	x2, x1
  417270:	fdiv	d1, d1, d2
  417274:	b.ls	41728c <nftw@plt+0x1470c>  // b.plast
  417278:	mov	w1, #0x9fffff              	// #10485759
  41727c:	cmp	x2, x1
  417280:	b.hi	417300 <nftw@plt+0x14780>  // b.pmore
  417284:	lsr	x2, x2, #10
  417288:	mov	w9, #0x6b                  	// #107
  41728c:	ldr	x1, [x21, #40]
  417290:	mov	x10, #0x27ff                	// #10239
  417294:	mov	w8, #0x20                  	// #32
  417298:	cmp	x1, x10
  41729c:	b.ls	4172b4 <nftw@plt+0x14734>  // b.plast
  4172a0:	mov	w8, #0x9fffff              	// #10485759
  4172a4:	cmp	x1, x8
  4172a8:	b.hi	4172f4 <nftw@plt+0x14774>  // b.pmore
  4172ac:	lsr	x1, x1, #10
  4172b0:	mov	w8, #0x6b                  	// #107
  4172b4:	str	d4, [sp]
  4172b8:	str	x2, [sp, #8]
  4172bc:	add	x2, sp, #0x70
  4172c0:	str	w9, [sp, #16]
  4172c4:	str	x1, [sp, #24]
  4172c8:	adrp	x1, 474000 <_obstack_memory_used@@Base+0x12bb8>
  4172cc:	str	w8, [sp, #32]
  4172d0:	add	x1, x1, #0x70
  4172d4:	bl	402b30 <fprintf@plt>
  4172d8:	mov	x12, #0x1070                	// #4208
  4172dc:	ldp	x29, x30, [sp, #48]
  4172e0:	ldp	x19, x20, [sp, #64]
  4172e4:	ldp	x21, x22, [sp, #80]
  4172e8:	ldr	x23, [sp, #96]
  4172ec:	add	sp, sp, x12
  4172f0:	ret
  4172f4:	lsr	x1, x1, #20
  4172f8:	mov	w8, #0x4d                  	// #77
  4172fc:	b	4172b4 <nftw@plt+0x14734>
  417300:	lsr	x2, x2, #20
  417304:	mov	w9, #0x4d                  	// #77
  417308:	b	41728c <nftw@plt+0x1470c>
  41730c:	lsr	x6, x6, #20
  417310:	mov	w7, #0x4d                  	// #77
  417314:	b	417244 <nftw@plt+0x146c4>
  417318:	lsr	x4, x1, #20
  41731c:	mov	w5, #0x4d                  	// #77
  417320:	b	417200 <nftw@plt+0x14680>
  417324:	nop
  417328:	stp	x29, x30, [sp, #-64]!
  41732c:	mov	x29, sp
  417330:	stp	x19, x20, [sp, #16]
  417334:	mov	x20, x0
  417338:	mov	x0, #0x30                  	// #48
  41733c:	stp	x21, x22, [sp, #32]
  417340:	adrp	x21, 474000 <_obstack_memory_used@@Base+0x12bb8>
  417344:	add	x21, x21, #0xc68
  417348:	stp	x23, x24, [sp, #48]
  41734c:	bl	461d40 <_obstack_memory_used@@Base+0x8f8>
  417350:	mov	x19, x0
  417354:	mov	x0, #0xd                   	// #13
  417358:	stp	xzr, xzr, [x19, #16]
  41735c:	str	xzr, [x19, #32]
  417360:	strb	wzr, [x19, #44]
  417364:	bl	41bd20 <nftw@plt+0x191a0>
  417368:	mov	w22, w0
  41736c:	mov	x1, #0x10                  	// #16
  417370:	ubfiz	x0, x22, #4, #32
  417374:	ldr	w23, [x21, x0]
  417378:	mov	w24, w23
  41737c:	mov	x0, x24
  417380:	bl	461598 <_obstack_memory_used@@Base+0x150>
  417384:	mov	x1, x0
  417388:	cbz	x24, 41739c <nftw@plt+0x1481c>
  41738c:	add	x23, x0, w23, uxtw #4
  417390:	str	xzr, [x0], #16
  417394:	cmp	x23, x0
  417398:	b.ne	417390 <nftw@plt+0x14810>  // b.any
  41739c:	stp	x1, x24, [x19]
  4173a0:	mov	x0, #0x30                  	// #48
  4173a4:	str	w22, [x19, #40]
  4173a8:	str	x19, [x20, #40]
  4173ac:	bl	461d40 <_obstack_memory_used@@Base+0x8f8>
  4173b0:	mov	x19, x0
  4173b4:	mov	x0, #0xd                   	// #13
  4173b8:	stp	xzr, xzr, [x19, #16]
  4173bc:	str	xzr, [x19, #32]
  4173c0:	strb	wzr, [x19, #44]
  4173c4:	bl	41bd20 <nftw@plt+0x191a0>
  4173c8:	mov	w22, w0
  4173cc:	mov	x1, #0x18                  	// #24
  4173d0:	ubfiz	x0, x22, #4, #32
  4173d4:	ldr	w23, [x21, x0]
  4173d8:	mov	w24, w23
  4173dc:	mov	x0, x24
  4173e0:	bl	461598 <_obstack_memory_used@@Base+0x150>
  4173e4:	mov	x1, x0
  4173e8:	cbz	x24, 417404 <nftw@plt+0x14884>
  4173ec:	mov	w2, #0x18                  	// #24
  4173f0:	umaddl	x23, w23, w2, x0
  4173f4:	nop
  4173f8:	str	xzr, [x0], #24
  4173fc:	cmp	x23, x0
  417400:	b.ne	4173f8 <nftw@plt+0x14878>  // b.any
  417404:	stp	x1, x24, [x19]
  417408:	mov	x0, #0x30                  	// #48
  41740c:	str	w22, [x19, #40]
  417410:	str	x19, [x20, #48]
  417414:	bl	461d40 <_obstack_memory_used@@Base+0x8f8>
  417418:	mov	x19, x0
  41741c:	mov	x0, #0xd                   	// #13
  417420:	stp	xzr, xzr, [x19, #16]
  417424:	str	xzr, [x19, #32]
  417428:	strb	wzr, [x19, #44]
  41742c:	bl	41bd20 <nftw@plt+0x191a0>
  417430:	mov	w22, w0
  417434:	mov	x1, #0x18                  	// #24
  417438:	ubfiz	x0, x22, #4, #32
  41743c:	ldr	w21, [x21, x0]
  417440:	mov	w23, w21
  417444:	mov	x0, x23
  417448:	bl	461598 <_obstack_memory_used@@Base+0x150>
  41744c:	cbz	x23, 41746c <nftw@plt+0x148ec>
  417450:	mov	w2, #0x18                  	// #24
  417454:	mov	x1, x0
  417458:	umaddl	x21, w21, w2, x0
  41745c:	nop
  417460:	str	xzr, [x1], #24
  417464:	cmp	x21, x1
  417468:	b.ne	417460 <nftw@plt+0x148e0>  // b.any
  41746c:	stp	x0, x23, [x19]
  417470:	str	w22, [x19, #40]
  417474:	ldp	x21, x22, [sp, #32]
  417478:	ldp	x23, x24, [sp, #48]
  41747c:	str	x19, [x20]
  417480:	ldp	x19, x20, [sp, #16]
  417484:	ldp	x29, x30, [sp], #64
  417488:	ret
  41748c:	nop
  417490:	mov	x9, x0
  417494:	adrp	x6, 474000 <_obstack_memory_used@@Base+0x12bb8>
  417498:	ldr	w0, [x0, #32]
  41749c:	add	x6, x6, #0xc68
  4174a0:	mov	w7, #0x18                  	// #24
  4174a4:	ldr	w10, [x9, #40]
  4174a8:	add	w0, w0, #0x1
  4174ac:	str	w0, [x9, #32]
  4174b0:	ldr	x5, [x9]
  4174b4:	lsl	x8, x10, #4
  4174b8:	add	x4, x6, x8
  4174bc:	ldr	w8, [x6, x8]
  4174c0:	ldr	w3, [x4, #4]
  4174c4:	ldr	w11, [x4, #12]
  4174c8:	umull	x3, w2, w3
  4174cc:	lsr	x0, x3, #32
  4174d0:	sub	w3, w2, w0
  4174d4:	add	w3, w0, w3, lsr #1
  4174d8:	lsr	w3, w3, w11
  4174dc:	msub	w3, w3, w8, w2
  4174e0:	umull	x7, w3, w7
  4174e4:	add	x0, x5, x7
  4174e8:	ldr	x7, [x5, x7]
  4174ec:	cbz	x7, 41757c <nftw@plt+0x149fc>
  4174f0:	cmp	x7, #0x1
  4174f4:	b.eq	417504 <nftw@plt+0x14984>  // b.none
  4174f8:	ldr	x4, [x1]
  4174fc:	cmp	x7, x4
  417500:	b.eq	41757c <nftw@plt+0x149fc>  // b.none
  417504:	add	x10, x6, x10, lsl #4
  417508:	sub	w8, w8, #0x2
  41750c:	add	w12, w2, #0x1
  417510:	ldr	w6, [x9, #36]
  417514:	ldr	x7, [x9, #8]
  417518:	ldr	w0, [x10, #8]
  41751c:	umull	x0, w2, w0
  417520:	lsr	x0, x0, #32
  417524:	sub	w4, w2, w0
  417528:	add	w4, w0, w4, lsr #1
  41752c:	lsr	w4, w4, w11
  417530:	msub	w4, w4, w8, w12
  417534:	nop
  417538:	add	w2, w3, w4
  41753c:	add	w6, w6, #0x1
  417540:	mov	x3, x2
  417544:	cmp	x7, w2, uxtw
  417548:	b.hi	417554 <nftw@plt+0x149d4>  // b.pmore
  41754c:	sub	w2, w2, w7
  417550:	mov	x3, x2
  417554:	add	x2, x2, x2, lsl #1
  417558:	add	x0, x5, x2, lsl #3
  41755c:	ldr	x2, [x5, x2, lsl #3]
  417560:	cmp	x2, #0x1
  417564:	cbz	x2, 417578 <nftw@plt+0x149f8>
  417568:	b.eq	417538 <nftw@plt+0x149b8>  // b.none
  41756c:	ldr	x8, [x1]
  417570:	cmp	x8, x2
  417574:	b.ne	417538 <nftw@plt+0x149b8>  // b.any
  417578:	str	w6, [x9, #36]
  41757c:	ret
  417580:	mov	x11, x0
  417584:	adrp	x6, 474000 <_obstack_memory_used@@Base+0x12bb8>
  417588:	ldr	w0, [x0, #32]
  41758c:	add	x6, x6, #0xc68
  417590:	ldr	w8, [x11, #40]
  417594:	add	w0, w0, #0x1
  417598:	str	w0, [x11, #32]
  41759c:	ldr	x10, [x11]
  4175a0:	lsl	x4, x8, #4
  4175a4:	add	x5, x6, x4
  4175a8:	ldr	w7, [x6, x4]
  4175ac:	ldr	w3, [x5, #4]
  4175b0:	ldr	w9, [x5, #12]
  4175b4:	umull	x3, w2, w3
  4175b8:	lsr	x3, x3, #32
  4175bc:	sub	w4, w2, w3
  4175c0:	add	w3, w3, w4, lsr #1
  4175c4:	lsr	w3, w3, w9
  4175c8:	msub	w3, w3, w7, w2
  4175cc:	ubfiz	x4, x3, #4, #32
  4175d0:	add	x0, x10, x4
  4175d4:	ldr	x4, [x10, x4]
  4175d8:	cbz	x4, 417694 <nftw@plt+0x14b14>
  4175dc:	cmp	x4, #0x1
  4175e0:	b.eq	4175f8 <nftw@plt+0x14a78>  // b.none
  4175e4:	ldr	x5, [x1]
  4175e8:	ldr	x13, [x4]
  4175ec:	ldr	x12, [x5]
  4175f0:	cmp	x13, x12
  4175f4:	b.eq	417698 <nftw@plt+0x14b18>  // b.none
  4175f8:	add	x6, x6, x8, lsl #4
  4175fc:	add	w8, w2, #0x1
  417600:	sub	w0, w7, #0x2
  417604:	ldr	w4, [x11, #36]
  417608:	ldr	x7, [x11, #8]
  41760c:	ldr	w5, [x6, #8]
  417610:	umull	x5, w2, w5
  417614:	lsr	x5, x5, #32
  417618:	sub	w2, w2, w5
  41761c:	add	w5, w5, w2, lsr #1
  417620:	lsr	w5, w5, w9
  417624:	msub	w5, w5, w0, w8
  417628:	add	w2, w3, w5
  41762c:	add	w4, w4, #0x1
  417630:	mov	x3, x2
  417634:	cmp	x7, w2, uxtw
  417638:	b.hi	417644 <nftw@plt+0x14ac4>  // b.pmore
  41763c:	sub	w2, w2, w7
  417640:	mov	x3, x2
  417644:	lsl	x2, x2, #4
  417648:	add	x0, x10, x2
  41764c:	ldr	x2, [x10, x2]
  417650:	cmp	x2, #0x1
  417654:	cbz	x2, 417690 <nftw@plt+0x14b10>
  417658:	b.eq	417628 <nftw@plt+0x14aa8>  // b.none
  41765c:	ldr	x6, [x1]
  417660:	ldr	x9, [x2]
  417664:	ldr	x8, [x6]
  417668:	cmp	x9, x8
  41766c:	b.ne	417628 <nftw@plt+0x14aa8>  // b.any
  417670:	ldr	x9, [x2, #8]
  417674:	ldr	x8, [x6, #8]
  417678:	cmp	x9, x8
  41767c:	b.ne	417628 <nftw@plt+0x14aa8>  // b.any
  417680:	ldr	w8, [x2, #16]
  417684:	ldr	w2, [x6, #16]
  417688:	cmp	w8, w2
  41768c:	b.ne	417628 <nftw@plt+0x14aa8>  // b.any
  417690:	str	w4, [x11, #36]
  417694:	ret
  417698:	ldr	x13, [x4, #8]
  41769c:	ldr	x12, [x5, #8]
  4176a0:	cmp	x13, x12
  4176a4:	b.ne	4175f8 <nftw@plt+0x14a78>  // b.any
  4176a8:	ldr	w12, [x4, #16]
  4176ac:	ldr	w4, [x5, #16]
  4176b0:	cmp	w12, w4
  4176b4:	b.ne	4175f8 <nftw@plt+0x14a78>  // b.any
  4176b8:	ret
  4176bc:	nop
  4176c0:	stp	x29, x30, [sp, #-96]!
  4176c4:	mov	x29, sp
  4176c8:	stp	x21, x22, [sp, #32]
  4176cc:	mov	x22, x0
  4176d0:	stp	x25, x26, [sp, #64]
  4176d4:	ldr	w26, [x0, #40]
  4176d8:	ldp	x1, x0, [x0, #16]
  4176dc:	stp	x19, x20, [sp, #16]
  4176e0:	ldp	x20, x25, [x22]
  4176e4:	stp	x23, x24, [sp, #48]
  4176e8:	sub	x1, x1, x0
  4176ec:	lsl	x0, x1, #1
  4176f0:	cmp	x25, x1, lsl #1
  4176f4:	add	x23, x20, x25, lsl #4
  4176f8:	b.cc	4178f8 <nftw@plt+0x14d78>  // b.lo, b.ul, b.last
  4176fc:	lsl	w1, w1, #3
  417700:	mov	x2, #0x20                  	// #32
  417704:	cmp	x1, x2
  417708:	csel	x1, x1, x2, cs  // cs = hs, nlast
  41770c:	cmp	x25, x1
  417710:	b.hi	4178f8 <nftw@plt+0x14d78>  // b.pmore
  417714:	ldrb	w0, [x22, #44]
  417718:	cbnz	w0, 417918 <nftw@plt+0x14d98>
  41771c:	mov	x0, x25
  417720:	mov	x1, #0x10                  	// #16
  417724:	bl	461598 <_obstack_memory_used@@Base+0x150>
  417728:	mov	x1, x0
  41772c:	add	x2, x0, x25, lsl #4
  417730:	cbz	x25, 417744 <nftw@plt+0x14bc4>
  417734:	nop
  417738:	str	xzr, [x1], #16
  41773c:	cmp	x1, x2
  417740:	b.ne	417738 <nftw@plt+0x14bb8>  // b.any
  417744:	ldp	x1, x2, [x22, #16]
  417748:	mov	w19, #0x79b9                	// #31161
  41774c:	adrp	x24, 474000 <_obstack_memory_used@@Base+0x12bb8>
  417750:	mov	x21, x20
  417754:	add	x24, x24, #0xc68
  417758:	movk	w19, #0x9e37, lsl #16
  41775c:	stp	x0, x25, [x22]
  417760:	sub	x1, x1, x2
  417764:	stp	x1, xzr, [x22, #16]
  417768:	str	w26, [x22, #40]
  41776c:	b	41777c <nftw@plt+0x14bfc>
  417770:	add	x21, x21, #0x10
  417774:	cmp	x23, x21
  417778:	b.ls	4178d0 <nftw@plt+0x14d50>  // b.plast
  41777c:	ldr	x25, [x21]
  417780:	cmp	x25, #0x1
  417784:	b.ls	417770 <nftw@plt+0x14bf0>  // b.plast
  417788:	ldr	x3, [x25]
  41778c:	mov	w2, #0x0                   	// #0
  417790:	mov	x1, #0x8                   	// #8
  417794:	add	x0, sp, #0x58
  417798:	str	x3, [sp, #88]
  41779c:	bl	460c50 <nftw@plt+0x5e0d0>
  4177a0:	mov	w2, w0
  4177a4:	ldr	x3, [x25, #8]
  4177a8:	mov	x1, #0x8                   	// #8
  4177ac:	add	x0, sp, #0x58
  4177b0:	str	x3, [sp, #88]
  4177b4:	bl	460c50 <nftw@plt+0x5e0d0>
  4177b8:	ldr	w4, [x25, #16]
  4177bc:	ldr	w2, [x22, #40]
  4177c0:	sub	w1, w19, w4
  4177c4:	sub	w4, w4, w0
  4177c8:	sub	w1, w1, w0
  4177cc:	eor	w1, w1, w0, lsr #13
  4177d0:	lsl	x2, x2, #4
  4177d4:	sub	w4, w4, w1
  4177d8:	sub	w3, w0, w1
  4177dc:	eor	w4, w4, w1, lsl #8
  4177e0:	add	x5, x24, x2
  4177e4:	sub	w3, w3, w4
  4177e8:	sub	w1, w1, w4
  4177ec:	eor	w3, w3, w4, lsr #13
  4177f0:	ldr	w6, [x24, x2]
  4177f4:	sub	w1, w1, w3
  4177f8:	sub	w4, w4, w3
  4177fc:	eor	w1, w1, w3, lsr #12
  417800:	ldr	w0, [x5, #4]
  417804:	sub	w4, w4, w1
  417808:	sub	w3, w3, w1
  41780c:	eor	w4, w4, w1, lsl #16
  417810:	ldr	w7, [x5, #12]
  417814:	sub	w3, w3, w4
  417818:	sub	w2, w1, w4
  41781c:	eor	w3, w3, w4, lsr #5
  417820:	sub	w2, w2, w3
  417824:	sub	w4, w4, w3
  417828:	eor	w2, w2, w3, lsr #3
  41782c:	sub	w4, w4, w2
  417830:	sub	w1, w3, w2
  417834:	eor	w2, w4, w2, lsl #10
  417838:	sub	w1, w1, w2
  41783c:	eor	w1, w1, w2, lsr #15
  417840:	ldr	x2, [x22]
  417844:	umull	x0, w1, w0
  417848:	lsr	x3, x0, #32
  41784c:	sub	w0, w1, w3
  417850:	add	w0, w3, w0, lsr #1
  417854:	lsr	w0, w0, w7
  417858:	msub	w0, w0, w6, w1
  41785c:	ubfiz	x3, x0, #4, #32
  417860:	add	x4, x2, x3
  417864:	ldr	x3, [x2, x3]
  417868:	cbz	x3, 4178bc <nftw@plt+0x14d3c>
  41786c:	ldr	w3, [x5, #8]
  417870:	add	w4, w1, #0x1
  417874:	sub	w6, w6, #0x2
  417878:	ldr	x5, [x22, #8]
  41787c:	umull	x3, w1, w3
  417880:	lsr	x3, x3, #32
  417884:	sub	w1, w1, w3
  417888:	add	w1, w3, w1, lsr #1
  41788c:	lsr	w1, w1, w7
  417890:	msub	w1, w1, w6, w4
  417894:	nop
  417898:	add	w3, w0, w1
  41789c:	mov	x0, x3
  4178a0:	cmp	x5, w3, uxtw
  4178a4:	b.hi	417948 <nftw@plt+0x14dc8>  // b.pmore
  4178a8:	sub	w0, w3, w5
  4178ac:	ubfiz	x3, x0, #4, #32
  4178b0:	add	x4, x2, x3
  4178b4:	ldr	x3, [x2, x3]
  4178b8:	cbnz	x3, 417898 <nftw@plt+0x14d18>
  4178bc:	ldp	x0, x1, [x21]
  4178c0:	stp	x0, x1, [x4]
  4178c4:	add	x21, x21, #0x10
  4178c8:	cmp	x23, x21
  4178cc:	b.hi	41777c <nftw@plt+0x14bfc>  // b.pmore
  4178d0:	ldrb	w0, [x22, #44]
  4178d4:	cbnz	w0, 417964 <nftw@plt+0x14de4>
  4178d8:	mov	x0, x20
  4178dc:	bl	402910 <free@plt>
  4178e0:	ldp	x19, x20, [sp, #16]
  4178e4:	ldp	x21, x22, [sp, #32]
  4178e8:	ldp	x23, x24, [sp, #48]
  4178ec:	ldp	x25, x26, [sp, #64]
  4178f0:	ldp	x29, x30, [sp], #96
  4178f4:	ret
  4178f8:	bl	41bd20 <nftw@plt+0x191a0>
  4178fc:	mov	w26, w0
  417900:	adrp	x1, 474000 <_obstack_memory_used@@Base+0x12bb8>
  417904:	add	x1, x1, #0xc68
  417908:	ubfiz	x0, x26, #4, #32
  41790c:	ldr	w25, [x1, x0]
  417910:	ldrb	w0, [x22, #44]
  417914:	cbz	w0, 41771c <nftw@plt+0x14b9c>
  417918:	lsl	x0, x25, #4
  41791c:	mov	x3, #0x0                   	// #0
  417920:	mov	x2, #0x0                   	// #0
  417924:	mov	x1, #0x0                   	// #0
  417928:	bl	41c1f0 <nftw@plt+0x19670>
  41792c:	cbnz	x0, 417728 <nftw@plt+0x14ba8>
  417930:	adrp	x2, 474000 <_obstack_memory_used@@Base+0x12bb8>
  417934:	adrp	x0, 474000 <_obstack_memory_used@@Base+0x12bb8>
  417938:	add	x2, x2, #0x1a8
  41793c:	add	x0, x0, #0x1b8
  417940:	mov	w1, #0x2b5                 	// #693
  417944:	bl	402bf0 <nftw@plt+0x70>
  417948:	lsl	x3, x3, #4
  41794c:	add	x4, x2, x3
  417950:	ldr	x3, [x2, x3]
  417954:	cbnz	x3, 417898 <nftw@plt+0x14d18>
  417958:	ldp	x0, x1, [x21]
  41795c:	stp	x0, x1, [x4]
  417960:	b	4178c4 <nftw@plt+0x14d44>
  417964:	mov	x0, x20
  417968:	bl	41c228 <nftw@plt+0x196a8>
  41796c:	ldp	x19, x20, [sp, #16]
  417970:	ldp	x21, x22, [sp, #32]
  417974:	ldp	x23, x24, [sp, #48]
  417978:	ldp	x25, x26, [sp, #64]
  41797c:	ldp	x29, x30, [sp], #96
  417980:	ret
  417984:	nop
  417988:	stp	x29, x30, [sp, #-48]!
  41798c:	cmp	w3, #0x1
  417990:	mov	x29, sp
  417994:	stp	x19, x20, [sp, #16]
  417998:	mov	w20, w3
  41799c:	mov	x19, x0
  4179a0:	stp	x21, x22, [sp, #32]
  4179a4:	mov	x21, x1
  4179a8:	mov	w22, w2
  4179ac:	ldr	x3, [x0, #8]
  4179b0:	b.eq	417b10 <nftw@plt+0x14f90>  // b.none
  4179b4:	ldr	w0, [x19, #40]
  4179b8:	adrp	x2, 474000 <_obstack_memory_used@@Base+0x12bb8>
  4179bc:	ldr	w5, [x19, #32]
  4179c0:	add	x2, x2, #0xc68
  4179c4:	ldr	x1, [x19]
  4179c8:	lsl	x0, x0, #4
  4179cc:	add	x4, x2, x0
  4179d0:	add	w5, w5, #0x1
  4179d4:	str	w5, [x19, #32]
  4179d8:	add	w9, w22, #0x1
  4179dc:	ldr	w5, [x4, #4]
  4179e0:	ldr	w7, [x4, #12]
  4179e4:	ldr	w4, [x4, #8]
  4179e8:	ldr	w2, [x2, x0]
  4179ec:	umull	x5, w22, w5
  4179f0:	sub	w8, w2, #0x2
  4179f4:	umull	x4, w22, w4
  4179f8:	lsr	x5, x5, #32
  4179fc:	sub	w0, w22, w5
  417a00:	lsr	x4, x4, #32
  417a04:	add	w5, w5, w0, lsr #1
  417a08:	sub	w6, w22, w4
  417a0c:	lsr	w5, w5, w7
  417a10:	add	w6, w4, w6, lsr #1
  417a14:	msub	w2, w5, w2, w22
  417a18:	lsr	w6, w6, w7
  417a1c:	msub	w6, w6, w8, w9
  417a20:	ubfiz	x4, x2, #4, #32
  417a24:	add	x0, x1, x4
  417a28:	ldr	x4, [x1, x4]
  417a2c:	cbz	x4, 417b68 <nftw@plt+0x14fe8>
  417a30:	cmp	x4, #0x1
  417a34:	b.eq	417a50 <nftw@plt+0x14ed0>  // b.none
  417a38:	ldr	x5, [x21]
  417a3c:	ldr	x8, [x4]
  417a40:	ldr	x7, [x5]
  417a44:	cmp	x8, x7
  417a48:	b.eq	417b2c <nftw@plt+0x14fac>  // b.none
  417a4c:	mov	x0, #0x0                   	// #0
  417a50:	ldr	w5, [x19, #36]
  417a54:	nop
  417a58:	add	w4, w2, w6
  417a5c:	add	w5, w5, #0x1
  417a60:	mov	x2, x4
  417a64:	cmp	x3, w4, uxtw
  417a68:	b.hi	417a74 <nftw@plt+0x14ef4>  // b.pmore
  417a6c:	sub	w4, w4, w3
  417a70:	mov	x2, x4
  417a74:	lsl	x4, x4, #4
  417a78:	add	x10, x1, x4
  417a7c:	ldr	x4, [x1, x4]
  417a80:	cmp	x4, #0x1
  417a84:	cbz	x4, 417ae4 <nftw@plt+0x14f64>
  417a88:	b.eq	417ad8 <nftw@plt+0x14f58>  // b.none
  417a8c:	ldr	x7, [x21]
  417a90:	ldr	x9, [x4]
  417a94:	ldr	x8, [x7]
  417a98:	cmp	x9, x8
  417a9c:	b.ne	417a58 <nftw@plt+0x14ed8>  // b.any
  417aa0:	ldr	x9, [x4, #8]
  417aa4:	ldr	x8, [x7, #8]
  417aa8:	cmp	x9, x8
  417aac:	b.ne	417a58 <nftw@plt+0x14ed8>  // b.any
  417ab0:	ldr	w8, [x4, #16]
  417ab4:	ldr	w4, [x7, #16]
  417ab8:	cmp	w8, w4
  417abc:	b.ne	417a58 <nftw@plt+0x14ed8>  // b.any
  417ac0:	str	w5, [x19, #36]
  417ac4:	mov	x0, x10
  417ac8:	ldp	x19, x20, [sp, #16]
  417acc:	ldp	x21, x22, [sp, #32]
  417ad0:	ldp	x29, x30, [sp], #48
  417ad4:	ret
  417ad8:	cmp	x0, #0x0
  417adc:	csel	x0, x0, x10, ne  // ne = any
  417ae0:	b	417a58 <nftw@plt+0x14ed8>
  417ae4:	str	w5, [x19, #36]
  417ae8:	cbz	w20, 417b54 <nftw@plt+0x14fd4>
  417aec:	cbz	x0, 417b88 <nftw@plt+0x15008>
  417af0:	ldr	x1, [x19, #24]
  417af4:	sub	x1, x1, #0x1
  417af8:	str	x1, [x19, #24]
  417afc:	str	xzr, [x0]
  417b00:	ldp	x19, x20, [sp, #16]
  417b04:	ldp	x21, x22, [sp, #32]
  417b08:	ldp	x29, x30, [sp], #48
  417b0c:	ret
  417b10:	ldr	x2, [x0, #16]
  417b14:	add	x1, x3, x3, lsl #1
  417b18:	cmp	x1, x2, lsl #2
  417b1c:	b.hi	4179b4 <nftw@plt+0x14e34>  // b.pmore
  417b20:	bl	4176c0 <nftw@plt+0x14b40>
  417b24:	ldr	x3, [x19, #8]
  417b28:	b	4179b4 <nftw@plt+0x14e34>
  417b2c:	ldr	x8, [x4, #8]
  417b30:	ldr	x7, [x5, #8]
  417b34:	cmp	x8, x7
  417b38:	b.ne	417a4c <nftw@plt+0x14ecc>  // b.any
  417b3c:	ldr	w7, [x4, #16]
  417b40:	ldr	w4, [x5, #16]
  417b44:	cmp	w7, w4
  417b48:	b.eq	417b00 <nftw@plt+0x14f80>  // b.none
  417b4c:	mov	x0, #0x0                   	// #0
  417b50:	b	417a50 <nftw@plt+0x14ed0>
  417b54:	mov	x0, #0x0                   	// #0
  417b58:	ldp	x19, x20, [sp, #16]
  417b5c:	ldp	x21, x22, [sp, #32]
  417b60:	ldp	x29, x30, [sp], #48
  417b64:	ret
  417b68:	cbz	w20, 417b54 <nftw@plt+0x14fd4>
  417b6c:	ldr	x1, [x19, #16]
  417b70:	ldp	x21, x22, [sp, #32]
  417b74:	add	x1, x1, #0x1
  417b78:	str	x1, [x19, #16]
  417b7c:	ldp	x19, x20, [sp, #16]
  417b80:	ldp	x29, x30, [sp], #48
  417b84:	ret
  417b88:	mov	x0, x10
  417b8c:	b	417b6c <nftw@plt+0x14fec>
  417b90:	stp	x29, x30, [sp, #-64]!
  417b94:	mov	x29, sp
  417b98:	stp	x19, x20, [sp, #16]
  417b9c:	mov	x20, x0
  417ba0:	ldp	x19, x1, [x0, #8]
  417ba4:	stp	x21, x22, [sp, #32]
  417ba8:	ldr	x0, [x0, #24]
  417bac:	ldr	x22, [x20]
  417bb0:	sub	x1, x1, x0
  417bb4:	add	x21, x19, x19, lsl #1
  417bb8:	str	x23, [sp, #48]
  417bbc:	cmp	x19, x1, lsl #1
  417bc0:	ldr	w23, [x20, #40]
  417bc4:	lsl	x0, x1, #1
  417bc8:	add	x21, x22, x21, lsl #3
  417bcc:	b.cc	417d1c <nftw@plt+0x1519c>  // b.lo, b.ul, b.last
  417bd0:	lsl	w1, w1, #3
  417bd4:	mov	x2, #0x20                  	// #32
  417bd8:	cmp	x1, x2
  417bdc:	csel	x1, x1, x2, cs  // cs = hs, nlast
  417be0:	cmp	x19, x1
  417be4:	b.hi	417d1c <nftw@plt+0x1519c>  // b.pmore
  417be8:	ldrb	w0, [x20, #44]
  417bec:	cbnz	w0, 417d3c <nftw@plt+0x151bc>
  417bf0:	mov	x0, x19
  417bf4:	mov	x1, #0x18                  	// #24
  417bf8:	bl	461598 <_obstack_memory_used@@Base+0x150>
  417bfc:	cbz	x19, 417c1c <nftw@plt+0x1509c>
  417c00:	add	x2, x19, x19, lsl #1
  417c04:	mov	x1, x0
  417c08:	add	x2, x0, x2, lsl #3
  417c0c:	nop
  417c10:	str	xzr, [x1], #24
  417c14:	cmp	x1, x2
  417c18:	b.ne	417c10 <nftw@plt+0x15090>  // b.any
  417c1c:	ldp	x1, x2, [x20, #16]
  417c20:	ubfiz	x4, x23, #4, #32
  417c24:	adrp	x9, 474000 <_obstack_memory_used@@Base+0x12bb8>
  417c28:	add	x9, x9, #0xc68
  417c2c:	mov	x3, x22
  417c30:	add	x9, x9, x4
  417c34:	mov	w8, #0x18                  	// #24
  417c38:	stp	x0, x19, [x20]
  417c3c:	sub	x1, x1, x2
  417c40:	stp	x1, xzr, [x20, #16]
  417c44:	str	w23, [x20, #40]
  417c48:	b	417c58 <nftw@plt+0x150d8>
  417c4c:	add	x3, x3, #0x18
  417c50:	cmp	x21, x3
  417c54:	b.ls	417cfc <nftw@plt+0x1517c>  // b.plast
  417c58:	ldr	x2, [x3]
  417c5c:	cmp	x2, #0x1
  417c60:	b.ls	417c4c <nftw@plt+0x150cc>  // b.plast
  417c64:	ldp	w5, w1, [x9]
  417c68:	ubfx	x10, x2, #3, #32
  417c6c:	asr	x2, x2, #3
  417c70:	ldr	w7, [x9, #12]
  417c74:	mul	x1, x1, x10
  417c78:	lsr	x4, x1, #32
  417c7c:	sub	w1, w2, w4
  417c80:	add	w1, w4, w1, lsr #1
  417c84:	lsr	w1, w1, w7
  417c88:	msub	w1, w1, w5, w2
  417c8c:	umull	x6, w1, w8
  417c90:	add	x4, x0, x6
  417c94:	ldr	x6, [x0, x6]
  417c98:	cbz	x6, 417ce0 <nftw@plt+0x15160>
  417c9c:	ldr	w4, [x9, #8]
  417ca0:	add	w6, w2, #0x1
  417ca4:	sub	w5, w5, #0x2
  417ca8:	mul	x4, x4, x10
  417cac:	lsr	x4, x4, #32
  417cb0:	sub	w2, w2, w4
  417cb4:	add	w2, w4, w2, lsr #1
  417cb8:	lsr	w2, w2, w7
  417cbc:	msub	w2, w2, w5, w6
  417cc0:	add	w1, w1, w2
  417cc4:	cmp	x19, w1, uxtw
  417cc8:	b.hi	417d70 <nftw@plt+0x151f0>  // b.pmore
  417ccc:	sub	w1, w1, w19
  417cd0:	umull	x5, w1, w8
  417cd4:	add	x4, x0, x5
  417cd8:	ldr	x5, [x0, x5]
  417cdc:	cbnz	x5, 417cc0 <nftw@plt+0x15140>
  417ce0:	ldp	x6, x7, [x3]
  417ce4:	stp	x6, x7, [x4]
  417ce8:	ldr	x1, [x3, #16]
  417cec:	str	x1, [x4, #16]
  417cf0:	add	x3, x3, #0x18
  417cf4:	cmp	x21, x3
  417cf8:	b.hi	417c58 <nftw@plt+0x150d8>  // b.pmore
  417cfc:	ldrb	w0, [x20, #44]
  417d00:	cbnz	w0, 417d94 <nftw@plt+0x15214>
  417d04:	mov	x0, x22
  417d08:	ldp	x19, x20, [sp, #16]
  417d0c:	ldp	x21, x22, [sp, #32]
  417d10:	ldr	x23, [sp, #48]
  417d14:	ldp	x29, x30, [sp], #64
  417d18:	b	402910 <free@plt>
  417d1c:	bl	41bd20 <nftw@plt+0x191a0>
  417d20:	mov	w23, w0
  417d24:	adrp	x1, 474000 <_obstack_memory_used@@Base+0x12bb8>
  417d28:	add	x1, x1, #0xc68
  417d2c:	ubfiz	x0, x23, #4, #32
  417d30:	ldr	w19, [x1, x0]
  417d34:	ldrb	w0, [x20, #44]
  417d38:	cbz	w0, 417bf0 <nftw@plt+0x15070>
  417d3c:	add	x0, x19, x19, lsl #1
  417d40:	mov	x3, #0x0                   	// #0
  417d44:	mov	x2, #0x0                   	// #0
  417d48:	mov	x1, #0x0                   	// #0
  417d4c:	lsl	x0, x0, #3
  417d50:	bl	41c1f0 <nftw@plt+0x19670>
  417d54:	cbnz	x0, 417bfc <nftw@plt+0x1507c>
  417d58:	adrp	x2, 474000 <_obstack_memory_used@@Base+0x12bb8>
  417d5c:	adrp	x0, 474000 <_obstack_memory_used@@Base+0x12bb8>
  417d60:	add	x2, x2, #0x1a8
  417d64:	add	x0, x0, #0x1b8
  417d68:	mov	w1, #0x2b5                 	// #693
  417d6c:	bl	402bf0 <nftw@plt+0x70>
  417d70:	umull	x5, w1, w8
  417d74:	add	x4, x0, x5
  417d78:	ldr	x5, [x0, x5]
  417d7c:	cbnz	x5, 417cc0 <nftw@plt+0x15140>
  417d80:	ldp	x6, x7, [x3]
  417d84:	stp	x6, x7, [x4]
  417d88:	ldr	x1, [x3, #16]
  417d8c:	str	x1, [x4, #16]
  417d90:	b	417cf0 <nftw@plt+0x15170>
  417d94:	mov	x0, x22
  417d98:	ldp	x19, x20, [sp, #16]
  417d9c:	ldp	x21, x22, [sp, #32]
  417da0:	ldr	x23, [sp, #48]
  417da4:	ldp	x29, x30, [sp], #64
  417da8:	b	41c228 <nftw@plt+0x196a8>
  417dac:	nop
  417db0:	stp	x29, x30, [sp, #-48]!
  417db4:	cmp	w3, #0x1
  417db8:	mov	x29, sp
  417dbc:	stp	x19, x20, [sp, #16]
  417dc0:	mov	x20, x0
  417dc4:	mov	w19, w2
  417dc8:	stp	x21, x22, [sp, #32]
  417dcc:	mov	w22, w3
  417dd0:	mov	x21, x1
  417dd4:	ldr	x10, [x0, #8]
  417dd8:	b.eq	417f10 <nftw@plt+0x15390>  // b.none
  417ddc:	ldr	w3, [x20, #40]
  417de0:	adrp	x0, 474000 <_obstack_memory_used@@Base+0x12bb8>
  417de4:	ldr	w2, [x20, #32]
  417de8:	add	x0, x0, #0xc68
  417dec:	mov	w1, #0x18                  	// #24
  417df0:	lsl	x5, x3, #4
  417df4:	add	w2, w2, #0x1
  417df8:	add	x6, x0, x5
  417dfc:	str	w2, [x20, #32]
  417e00:	ldr	x9, [x20]
  417e04:	ldr	w4, [x6, #4]
  417e08:	ldr	w2, [x0, x5]
  417e0c:	ldr	w7, [x6, #12]
  417e10:	umull	x4, w19, w4
  417e14:	lsr	x4, x4, #32
  417e18:	sub	w5, w19, w4
  417e1c:	add	w4, w4, w5, lsr #1
  417e20:	lsr	w4, w4, w7
  417e24:	msub	w4, w4, w2, w19
  417e28:	umull	x1, w4, w1
  417e2c:	add	x8, x9, x1
  417e30:	ldr	x1, [x9, x1]
  417e34:	cbz	x1, 417f40 <nftw@plt+0x153c0>
  417e38:	cmp	x1, #0x1
  417e3c:	b.eq	417e50 <nftw@plt+0x152d0>  // b.none
  417e40:	ldr	x5, [x21]
  417e44:	cmp	x1, x5
  417e48:	b.eq	417f2c <nftw@plt+0x153ac>  // b.none
  417e4c:	mov	x8, #0x0                   	// #0
  417e50:	add	x0, x0, x3, lsl #4
  417e54:	sub	w2, w2, #0x2
  417e58:	add	w1, w19, #0x1
  417e5c:	ldr	w5, [x20, #36]
  417e60:	ldr	w0, [x0, #8]
  417e64:	umull	x0, w19, w0
  417e68:	lsr	x0, x0, #32
  417e6c:	sub	w6, w19, w0
  417e70:	add	w6, w0, w6, lsr #1
  417e74:	lsr	w6, w6, w7
  417e78:	msub	w6, w6, w2, w1
  417e7c:	nop
  417e80:	add	w2, w4, w6
  417e84:	add	w5, w5, #0x1
  417e88:	mov	x4, x2
  417e8c:	cmp	x10, w2, uxtw
  417e90:	b.hi	417e9c <nftw@plt+0x1531c>  // b.pmore
  417e94:	sub	w2, w2, w10
  417e98:	mov	x4, x2
  417e9c:	add	x2, x2, x2, lsl #1
  417ea0:	add	x0, x9, x2, lsl #3
  417ea4:	ldr	x2, [x9, x2, lsl #3]
  417ea8:	cmp	x2, #0x1
  417eac:	cbz	x2, 417ee0 <nftw@plt+0x15360>
  417eb0:	b.eq	417ed4 <nftw@plt+0x15354>  // b.none
  417eb4:	ldr	x7, [x21]
  417eb8:	cmp	x7, x2
  417ebc:	b.ne	417e80 <nftw@plt+0x15300>  // b.any
  417ec0:	str	w5, [x20, #36]
  417ec4:	ldp	x19, x20, [sp, #16]
  417ec8:	ldp	x21, x22, [sp, #32]
  417ecc:	ldp	x29, x30, [sp], #48
  417ed0:	ret
  417ed4:	cmp	x8, #0x0
  417ed8:	csel	x8, x8, x0, ne  // ne = any
  417edc:	b	417e80 <nftw@plt+0x15300>
  417ee0:	str	w5, [x20, #36]
  417ee4:	cbz	w22, 417f64 <nftw@plt+0x153e4>
  417ee8:	cbz	x8, 417f78 <nftw@plt+0x153f8>
  417eec:	ldr	x1, [x20, #24]
  417ef0:	mov	x0, x8
  417ef4:	ldp	x21, x22, [sp, #32]
  417ef8:	sub	x1, x1, #0x1
  417efc:	str	x1, [x20, #24]
  417f00:	str	xzr, [x8]
  417f04:	ldp	x19, x20, [sp, #16]
  417f08:	ldp	x29, x30, [sp], #48
  417f0c:	ret
  417f10:	ldr	x2, [x0, #16]
  417f14:	add	x1, x10, x10, lsl #1
  417f18:	cmp	x1, x2, lsl #2
  417f1c:	b.hi	417ddc <nftw@plt+0x1525c>  // b.pmore
  417f20:	bl	417b90 <nftw@plt+0x15010>
  417f24:	ldr	x10, [x20, #8]
  417f28:	b	417ddc <nftw@plt+0x1525c>
  417f2c:	mov	x0, x8
  417f30:	ldp	x19, x20, [sp, #16]
  417f34:	ldp	x21, x22, [sp, #32]
  417f38:	ldp	x29, x30, [sp], #48
  417f3c:	ret
  417f40:	cbz	w22, 417f64 <nftw@plt+0x153e4>
  417f44:	ldr	x1, [x20, #16]
  417f48:	mov	x0, x8
  417f4c:	ldp	x21, x22, [sp, #32]
  417f50:	add	x1, x1, #0x1
  417f54:	str	x1, [x20, #16]
  417f58:	ldp	x19, x20, [sp, #16]
  417f5c:	ldp	x29, x30, [sp], #48
  417f60:	ret
  417f64:	mov	x0, #0x0                   	// #0
  417f68:	ldp	x19, x20, [sp, #16]
  417f6c:	ldp	x21, x22, [sp, #32]
  417f70:	ldp	x29, x30, [sp], #48
  417f74:	ret
  417f78:	mov	x8, x0
  417f7c:	b	417f44 <nftw@plt+0x153c4>
  417f80:	stp	x29, x30, [sp, #-112]!
  417f84:	mov	x29, sp
  417f88:	stp	x19, x20, [sp, #16]
  417f8c:	mov	w19, w0
  417f90:	mov	w20, w2
  417f94:	stp	x21, x22, [sp, #32]
  417f98:	mov	x21, x8
  417f9c:	mov	x22, #0x0                   	// #0
  417fa0:	stp	x23, x24, [sp, #48]
  417fa4:	and	w24, w1, #0xff
  417fa8:	tbnz	w0, #31, 418084 <nftw@plt+0x15504>
  417fac:	stp	xzr, xzr, [sp, #80]
  417fb0:	cmp	w19, #0x1
  417fb4:	stp	xzr, xzr, [sp, #96]
  417fb8:	b.ls	418070 <nftw@plt+0x154f0>  // b.plast
  417fbc:	adrp	x23, 4a5000 <__environ@@GLIBC_2.17+0xa68>
  417fc0:	mov	w2, #0x0                   	// #0
  417fc4:	ldr	x0, [x23, #2336]
  417fc8:	cbz	w24, 4180c4 <nftw@plt+0x15544>
  417fcc:	mov	w1, w19
  417fd0:	add	x3, sp, #0x48
  417fd4:	bl	436ea8 <nftw@plt+0x34328>
  417fd8:	mov	w19, w0
  417fdc:	cmp	w20, #0x1
  417fe0:	b.eq	4180ac <nftw@plt+0x1552c>  // b.none
  417fe4:	cmp	w20, #0x2
  417fe8:	b.ne	418028 <nftw@plt+0x154a8>  // b.any
  417fec:	ldr	x0, [x23, #2336]
  417ff0:	mov	w1, w19
  417ff4:	bl	4360f0 <nftw@plt+0x33570>
  417ff8:	lsr	x0, x0, #32
  417ffc:	cmp	w19, w0
  418000:	b.eq	41802c <nftw@plt+0x154ac>  // b.none
  418004:	mov	x8, x21
  418008:	mov	w2, w20
  41800c:	mov	w1, w24
  418010:	bl	417f80 <nftw@plt+0x15400>
  418014:	ldp	x19, x20, [sp, #16]
  418018:	ldp	x21, x22, [sp, #32]
  41801c:	ldp	x23, x24, [sp, #48]
  418020:	ldp	x29, x30, [sp], #112
  418024:	ret
  418028:	cbnz	w20, 41810c <nftw@plt+0x1558c>
  41802c:	ldr	x0, [x23, #2336]
  418030:	add	x8, sp, #0x50
  418034:	ldr	x1, [sp, #72]
  418038:	mov	w2, w19
  41803c:	bl	4373c0 <nftw@plt+0x34840>
  418040:	str	x22, [sp, #96]
  418044:	cmp	w19, #0x1
  418048:	b.ls	418074 <nftw@plt+0x154f4>  // b.plast
  41804c:	ldp	x0, x1, [sp, #80]
  418050:	stp	x0, x1, [x21]
  418054:	ldp	x0, x1, [sp, #96]
  418058:	stp	x0, x1, [x21, #16]
  41805c:	ldp	x19, x20, [sp, #16]
  418060:	ldp	x21, x22, [sp, #32]
  418064:	ldp	x23, x24, [sp, #48]
  418068:	ldp	x29, x30, [sp], #112
  41806c:	ret
  418070:	str	x22, [sp, #96]
  418074:	mov	x0, #0x0                   	// #0
  418078:	cbnz	w19, 4180f8 <nftw@plt+0x15578>
  41807c:	str	x0, [sp, #80]
  418080:	b	41804c <nftw@plt+0x154cc>
  418084:	adrp	x23, 4a5000 <__environ@@GLIBC_2.17+0xa68>
  418088:	mov	w1, w0
  41808c:	ldr	x0, [x23, #2336]
  418090:	bl	4353b8 <nftw@plt+0x32838>
  418094:	mov	x22, x0
  418098:	ldr	x0, [x23, #2336]
  41809c:	mov	w1, w19
  4180a0:	bl	4353d0 <nftw@plt+0x32850>
  4180a4:	mov	w19, w0
  4180a8:	b	417fac <nftw@plt+0x1542c>
  4180ac:	ldr	x0, [x23, #2336]
  4180b0:	mov	w1, w19
  4180b4:	bl	4360f0 <nftw@plt+0x33570>
  4180b8:	cmp	w19, w0
  4180bc:	b.eq	41802c <nftw@plt+0x154ac>  // b.none
  4180c0:	b	418004 <nftw@plt+0x15484>
  4180c4:	mov	w1, w19
  4180c8:	mov	x2, #0x0                   	// #0
  4180cc:	bl	4371e8 <nftw@plt+0x34668>
  4180d0:	mov	w19, w0
  4180d4:	ldr	x0, [x23, #2336]
  4180d8:	mov	w1, w19
  4180dc:	add	x3, sp, #0x48
  4180e0:	mov	w2, #0x1                   	// #1
  4180e4:	bl	436ea8 <nftw@plt+0x34328>
  4180e8:	mov	w19, w0
  4180ec:	cmp	w20, #0x1
  4180f0:	b.ne	417fe4 <nftw@plt+0x15464>  // b.any
  4180f4:	b	4180ac <nftw@plt+0x1552c>
  4180f8:	adrp	x0, 473000 <_obstack_memory_used@@Base+0x11bb8>
  4180fc:	add	x0, x0, #0x510
  418100:	bl	402b10 <gettext@plt>
  418104:	str	x0, [sp, #80]
  418108:	b	41804c <nftw@plt+0x154cc>
  41810c:	adrp	x2, 474000 <_obstack_memory_used@@Base+0x12bb8>
  418110:	adrp	x0, 474000 <_obstack_memory_used@@Base+0x12bb8>
  418114:	add	x2, x2, #0x1e0
  418118:	add	x0, x0, #0x1f8
  41811c:	mov	w1, #0xc7                  	// #199
  418120:	bl	402bf0 <nftw@plt+0x70>
  418124:	nop
  418128:	stp	x29, x30, [sp, #-112]!
  41812c:	mov	x29, sp
  418130:	stp	x19, x20, [sp, #16]
  418134:	mov	x19, x0
  418138:	ldr	x20, [x0, #40]
  41813c:	stp	x21, x22, [sp, #32]
  418140:	mov	x22, x2
  418144:	stp	x23, x24, [sp, #48]
  418148:	mov	x23, x1
  41814c:	cbz	x20, 418170 <nftw@plt+0x155f0>
  418150:	ldr	x0, [x0, #32]
  418154:	cmp	x20, x0
  418158:	b.eq	418170 <nftw@plt+0x155f0>  // b.none
  41815c:	ldr	x21, [x19, #48]
  418160:	sub	x0, x20, #0x1
  418164:	cmp	x21, x0
  418168:	b.cc	418180 <nftw@plt+0x15600>  // b.lo, b.ul, b.last
  41816c:	nop
  418170:	ldr	x0, [x19, #16]
  418174:	bl	402820 <feof@plt>
  418178:	cbz	w0, 4182cc <nftw@plt+0x1574c>
  41817c:	ldp	x20, x21, [x19, #40]
  418180:	subs	x2, x20, x21
  418184:	b.eq	4182b4 <nftw@plt+0x15734>  // b.none
  418188:	stp	x25, x26, [sp, #64]
  41818c:	mov	w1, #0xa                   	// #10
  418190:	ldr	x25, [x19, #24]
  418194:	add	x24, x25, x21
  418198:	mov	x0, x24
  41819c:	bl	4029e0 <memchr@plt>
  4181a0:	mov	x26, x0
  4181a4:	cbz	x0, 41827c <nftw@plt+0x156fc>
  4181a8:	add	x21, x0, #0x1
  4181ac:	strb	wzr, [x19, #72]
  4181b0:	ldr	x0, [x19, #16]
  4181b4:	bl	402b70 <ferror@plt>
  4181b8:	cbnz	w0, 4182b0 <nftw@plt+0x15730>
  4181bc:	stp	x27, x28, [sp, #80]
  4181c0:	sub	x27, x26, x24
  4181c4:	ldp	x0, x25, [x19, #40]
  4181c8:	cmp	x25, x0
  4181cc:	b.cs	4181d4 <nftw@plt+0x15654>  // b.hs, b.nlast
  4181d0:	str	x24, [x23]
  4181d4:	ldp	x23, x1, [x19, #56]
  4181d8:	add	x23, x23, #0x1
  4181dc:	str	x23, [x19, #56]
  4181e0:	cmp	x23, x1
  4181e4:	b.hi	418248 <nftw@plt+0x156c8>  // b.pmore
  4181e8:	ldr	x24, [x19, #80]
  4181ec:	cbz	x24, 41833c <nftw@plt+0x157bc>
  4181f0:	ldr	w0, [x24, #4]
  4181f4:	cmp	w0, #0x63
  4181f8:	b.hi	418248 <nftw@plt+0x156c8>  // b.pmore
  4181fc:	cmp	x1, #0x64
  418200:	b.hi	418468 <nftw@plt+0x158e8>  // b.pmore
  418204:	cmp	x23, w0, uxtw
  418208:	mov	w2, w0
  41820c:	b.ls	418248 <nftw@plt+0x156c8>  // b.plast
  418210:	ldr	w6, [x24]
  418214:	add	w1, w0, #0x1
  418218:	ldr	x20, [x19, #24]
  41821c:	ubfx	x6, x6, #0, #31
  418220:	cmp	w0, w6
  418224:	sub	x20, x26, x20
  418228:	b.eq	4185c8 <nftw@plt+0x15a48>  // b.none
  41822c:	add	x2, x2, x2, lsl #1
  418230:	str	w1, [x24, #4]
  418234:	lsl	x2, x2, #3
  418238:	add	x0, x2, #0x8
  41823c:	add	x1, x24, x0
  418240:	str	x23, [x24, x0]
  418244:	stp	x25, x20, [x1, #8]
  418248:	cbz	x21, 418450 <nftw@plt+0x158d0>
  41824c:	ldr	x0, [x19, #24]
  418250:	sub	x0, x21, x0
  418254:	ldp	x25, x26, [sp, #64]
  418258:	str	x0, [x19, #48]
  41825c:	str	x27, [x22]
  418260:	mov	w0, #0x1                   	// #1
  418264:	ldp	x19, x20, [sp, #16]
  418268:	ldp	x21, x22, [sp, #32]
  41826c:	ldp	x23, x24, [sp, #48]
  418270:	ldp	x27, x28, [sp, #80]
  418274:	ldp	x29, x30, [sp], #112
  418278:	ret
  41827c:	mov	x26, #0x1000                	// #4096
  418280:	cbz	x20, 418374 <nftw@plt+0x157f4>
  418284:	ldr	x0, [x19, #32]
  418288:	cmp	x0, x20
  41828c:	b.eq	418374 <nftw@plt+0x157f4>  // b.none
  418290:	sub	x0, x20, #0x1
  418294:	cmp	x0, x21
  418298:	b.ls	418374 <nftw@plt+0x157f4>  // b.plast
  41829c:	ldr	x0, [x19, #16]
  4182a0:	mov	w1, #0x1                   	// #1
  4182a4:	strb	w1, [x19, #72]
  4182a8:	bl	402b70 <ferror@plt>
  4182ac:	cbz	w0, 418458 <nftw@plt+0x158d8>
  4182b0:	ldp	x25, x26, [sp, #64]
  4182b4:	mov	w0, #0x0                   	// #0
  4182b8:	ldp	x19, x20, [sp, #16]
  4182bc:	ldp	x21, x22, [sp, #32]
  4182c0:	ldp	x23, x24, [sp, #48]
  4182c4:	ldp	x29, x30, [sp], #112
  4182c8:	ret
  4182cc:	ldr	x0, [x19, #16]
  4182d0:	bl	402b70 <ferror@plt>
  4182d4:	cbnz	w0, 41817c <nftw@plt+0x155fc>
  4182d8:	ldp	x0, x20, [x19, #24]
  4182dc:	ldr	x1, [x19, #40]
  4182e0:	cmp	x20, x1
  4182e4:	b.ne	418308 <nftw@plt+0x15788>  // b.any
  4182e8:	cmp	x20, #0x0
  4182ec:	lsl	x20, x20, #1
  4182f0:	mov	x1, #0x1000                	// #4096
  4182f4:	csel	x20, x20, x1, ne  // ne = any
  4182f8:	mov	x1, x20
  4182fc:	bl	4615e8 <_obstack_memory_used@@Base+0x1a0>
  418300:	stp	x0, x20, [x19, #24]
  418304:	ldr	x1, [x19, #40]
  418308:	sub	x2, x20, x1
  41830c:	ldr	x3, [x19, #16]
  418310:	add	x0, x0, x1
  418314:	mov	x1, #0x1                   	// #1
  418318:	bl	4028d0 <fread@plt>
  41831c:	mov	x20, x0
  418320:	ldr	x0, [x19, #16]
  418324:	bl	402b70 <ferror@plt>
  418328:	cbnz	w0, 41817c <nftw@plt+0x155fc>
  41832c:	ldp	x0, x21, [x19, #40]
  418330:	add	x20, x20, x0
  418334:	str	x20, [x19, #40]
  418338:	b	418180 <nftw@plt+0x15600>
  41833c:	cmp	x1, #0x64
  418340:	b.ls	4184c4 <nftw@plt+0x15944>  // b.plast
  418344:	ldr	x20, [x19, #24]
  418348:	mov	x1, #0x68                  	// #104
  41834c:	mov	x0, #0x0                   	// #0
  418350:	bl	4615e8 <_obstack_memory_used@@Base+0x1a0>
  418354:	mov	x1, #0x4                   	// #4
  418358:	str	x0, [x19, #80]
  41835c:	mov	w28, #0x0                   	// #0
  418360:	sub	x20, x26, x20
  418364:	mov	x24, x0
  418368:	str	x1, [x0]
  41836c:	add	w1, w28, #0x1
  418370:	b	4184a4 <nftw@plt+0x15924>
  418374:	ldr	x0, [x19, #16]
  418378:	bl	402820 <feof@plt>
  41837c:	cbnz	w0, 41841c <nftw@plt+0x1589c>
  418380:	ldr	x0, [x19, #16]
  418384:	bl	402b70 <ferror@plt>
  418388:	cbnz	w0, 41841c <nftw@plt+0x1589c>
  41838c:	ldp	x0, x20, [x19, #24]
  418390:	ldr	x1, [x19, #40]
  418394:	cmp	x20, x1
  418398:	b.ne	4183b8 <nftw@plt+0x15838>  // b.any
  41839c:	cmp	x20, #0x0
  4183a0:	lsl	x20, x20, #1
  4183a4:	csel	x20, x20, x26, ne  // ne = any
  4183a8:	mov	x1, x20
  4183ac:	bl	4615e8 <_obstack_memory_used@@Base+0x1a0>
  4183b0:	stp	x0, x20, [x19, #24]
  4183b4:	ldr	x1, [x19, #40]
  4183b8:	sub	x2, x20, x1
  4183bc:	ldr	x3, [x19, #16]
  4183c0:	add	x0, x0, x1
  4183c4:	mov	x1, #0x1                   	// #1
  4183c8:	bl	4028d0 <fread@plt>
  4183cc:	mov	x21, x0
  4183d0:	ldr	x0, [x19, #16]
  4183d4:	bl	402b70 <ferror@plt>
  4183d8:	cbnz	w0, 41841c <nftw@plt+0x1589c>
  4183dc:	ldr	x20, [x19, #40]
  4183e0:	ldr	x25, [x19, #24]
  4183e4:	add	x20, x21, x20
  4183e8:	str	x20, [x19, #40]
  4183ec:	cbz	x21, 418424 <nftw@plt+0x158a4>
  4183f0:	ldr	x21, [x19, #48]
  4183f4:	mov	w1, #0xa                   	// #10
  4183f8:	add	x24, x25, x21
  4183fc:	sub	x2, x20, x21
  418400:	mov	x0, x24
  418404:	bl	4029e0 <memchr@plt>
  418408:	cbz	x0, 418280 <nftw@plt+0x15700>
  41840c:	add	x21, x0, #0x1
  418410:	mov	x26, x0
  418414:	strb	wzr, [x19, #72]
  418418:	b	4181b0 <nftw@plt+0x15630>
  41841c:	ldr	x25, [x19, #24]
  418420:	ldr	x20, [x19, #40]
  418424:	mov	w1, #0x1                   	// #1
  418428:	ldr	x0, [x19, #16]
  41842c:	strb	w1, [x19, #72]
  418430:	bl	402b70 <ferror@plt>
  418434:	cbnz	w0, 4182b0 <nftw@plt+0x15730>
  418438:	stp	x27, x28, [sp, #80]
  41843c:	adds	x20, x25, x20
  418440:	b.eq	418690 <nftw@plt+0x15b10>  // b.none
  418444:	mov	x26, x20
  418448:	mov	x21, #0x0                   	// #0
  41844c:	b	4181c0 <nftw@plt+0x15640>
  418450:	ldr	x0, [x19, #40]
  418454:	b	418254 <nftw@plt+0x156d4>
  418458:	add	x26, x25, x20
  41845c:	mov	x21, #0x0                   	// #0
  418460:	stp	x27, x28, [sp, #80]
  418464:	b	4181c0 <nftw@plt+0x15640>
  418468:	mov	w28, w0
  41846c:	cbz	w0, 418488 <nftw@plt+0x15908>
  418470:	add	x2, x23, x23, lsl #1
  418474:	add	x2, x23, x2, lsl #3
  418478:	lsl	x2, x2, #2
  41847c:	udiv	x1, x2, x1
  418480:	cmp	x1, w0, uxtw
  418484:	b.cc	418248 <nftw@plt+0x156c8>  // b.lo, b.ul, b.last
  418488:	ldr	w6, [x24]
  41848c:	add	w1, w0, #0x1
  418490:	ldr	x20, [x19, #24]
  418494:	ubfx	x6, x6, #0, #31
  418498:	cmp	w0, w6
  41849c:	sub	x20, x26, x20
  4184a0:	b.eq	4184fc <nftw@plt+0x1597c>  // b.none
  4184a4:	mov	w0, #0x18                  	// #24
  4184a8:	mov	x2, #0x8                   	// #8
  4184ac:	str	w1, [x24, #4]
  4184b0:	umaddl	x0, w28, w0, x2
  4184b4:	add	x1, x24, x0
  4184b8:	str	x23, [x24, x0]
  4184bc:	stp	x25, x20, [x1, #8]
  4184c0:	b	418248 <nftw@plt+0x156c8>
  4184c4:	cbz	x23, 418248 <nftw@plt+0x156c8>
  4184c8:	ldr	x20, [x19, #24]
  4184cc:	mov	x1, #0x68                  	// #104
  4184d0:	mov	x0, #0x0                   	// #0
  4184d4:	bl	4615e8 <_obstack_memory_used@@Base+0x1a0>
  4184d8:	sub	x20, x26, x20
  4184dc:	mov	x24, x0
  4184e0:	str	x0, [x19, #80]
  4184e4:	mov	x1, #0x4                   	// #4
  4184e8:	mov	w28, #0x0                   	// #0
  4184ec:	str	x1, [x0]
  4184f0:	mov	w2, w28
  4184f4:	add	w1, w28, #0x1
  4184f8:	b	41822c <nftw@plt+0x156ac>
  4184fc:	ldrsb	w2, [x24, #3]
  418500:	str	w6, [sp, #108]
  418504:	tbnz	w2, #31, 418544 <nftw@plt+0x159c4>
  418508:	bl	416358 <nftw@plt+0x137d8>
  41850c:	and	w26, w0, #0x7fffffff
  418510:	mov	w1, #0x18                  	// #24
  418514:	mov	x3, #0x8                   	// #8
  418518:	mov	w28, #0x0                   	// #0
  41851c:	umaddl	x1, w0, w1, x3
  418520:	ldr	x0, [x19, #80]
  418524:	cbz	x0, 41852c <nftw@plt+0x159ac>
  418528:	ldr	w28, [x0, #4]
  41852c:	bl	4615e8 <_obstack_memory_used@@Base+0x1a0>
  418530:	str	x0, [x19, #80]
  418534:	mov	x24, x0
  418538:	add	w1, w28, #0x1
  41853c:	stp	w26, w28, [x0]
  418540:	b	4184a4 <nftw@plt+0x15924>
  418544:	cmp	w1, #0x4
  418548:	mov	w28, #0x4                   	// #4
  41854c:	csel	w28, w1, w28, cs  // cs = hs, nlast
  418550:	mov	w2, #0x18                  	// #24
  418554:	mov	x26, #0x8                   	// #8
  418558:	str	xzr, [x19, #80]
  41855c:	mov	x0, #0x0                   	// #0
  418560:	umaddl	x1, w28, w2, x26
  418564:	bl	4615e8 <_obstack_memory_used@@Base+0x1a0>
  418568:	str	x0, [x19, #80]
  41856c:	ldr	w6, [sp, #108]
  418570:	and	x1, x28, #0x7fffffff
  418574:	str	x1, [x0]
  418578:	mov	w2, #0x18                  	// #24
  41857c:	cbz	w6, 4185b4 <nftw@plt+0x15a34>
  418580:	sub	w7, w6, #0x1
  418584:	mov	x3, #0x20                  	// #32
  418588:	mov	x1, x26
  41858c:	umaddl	x7, w7, w2, x3
  418590:	add	x5, x24, x1
  418594:	add	x4, x0, x1
  418598:	add	x1, x1, #0x18
  41859c:	cmp	x7, x1
  4185a0:	ldp	x2, x3, [x5]
  4185a4:	stp	x2, x3, [x4]
  4185a8:	ldr	x2, [x5, #16]
  4185ac:	str	x2, [x4, #16]
  4185b0:	b.ne	418590 <nftw@plt+0x15a10>  // b.any
  4185b4:	mov	x24, x0
  4185b8:	add	w1, w6, #0x1
  4185bc:	mov	w28, w6
  4185c0:	str	w6, [x0, #4]
  4185c4:	b	4184a4 <nftw@plt+0x15924>
  4185c8:	ldrsb	w2, [x24, #3]
  4185cc:	str	w6, [sp, #108]
  4185d0:	tbnz	w2, #31, 41860c <nftw@plt+0x15a8c>
  4185d4:	bl	416358 <nftw@plt+0x137d8>
  4185d8:	and	w26, w0, #0x7fffffff
  4185dc:	mov	w1, #0x18                  	// #24
  4185e0:	mov	x3, #0x8                   	// #8
  4185e4:	mov	w28, #0x0                   	// #0
  4185e8:	umaddl	x1, w0, w1, x3
  4185ec:	ldr	x0, [x19, #80]
  4185f0:	cbz	x0, 4185f8 <nftw@plt+0x15a78>
  4185f4:	ldr	w28, [x0, #4]
  4185f8:	bl	4615e8 <_obstack_memory_used@@Base+0x1a0>
  4185fc:	str	x0, [x19, #80]
  418600:	mov	x24, x0
  418604:	stp	w26, w28, [x0]
  418608:	b	4184f0 <nftw@plt+0x15970>
  41860c:	cmp	w1, #0x4
  418610:	mov	w28, #0x4                   	// #4
  418614:	csel	w28, w1, w28, cs  // cs = hs, nlast
  418618:	mov	w2, #0x18                  	// #24
  41861c:	mov	x26, #0x8                   	// #8
  418620:	str	xzr, [x19, #80]
  418624:	mov	x0, #0x0                   	// #0
  418628:	umaddl	x1, w28, w2, x26
  41862c:	bl	4615e8 <_obstack_memory_used@@Base+0x1a0>
  418630:	str	x0, [x19, #80]
  418634:	ldr	w6, [sp, #108]
  418638:	mov	w1, w28
  41863c:	str	x1, [x0]
  418640:	mov	w2, #0x18                  	// #24
  418644:	cbz	w6, 41867c <nftw@plt+0x15afc>
  418648:	sub	w7, w6, #0x1
  41864c:	mov	x3, #0x20                  	// #32
  418650:	mov	x1, x26
  418654:	umaddl	x7, w7, w2, x3
  418658:	add	x5, x24, x1
  41865c:	add	x4, x0, x1
  418660:	add	x1, x1, #0x18
  418664:	cmp	x1, x7
  418668:	ldp	x2, x3, [x5]
  41866c:	stp	x2, x3, [x4]
  418670:	ldr	x2, [x5, #16]
  418674:	str	x2, [x4, #16]
  418678:	b.ne	418658 <nftw@plt+0x15ad8>  // b.any
  41867c:	mov	x24, x0
  418680:	mov	w2, w6
  418684:	add	w1, w6, #0x1
  418688:	str	w6, [x0, #4]
  41868c:	b	41822c <nftw@plt+0x156ac>
  418690:	adrp	x2, 474000 <_obstack_memory_used@@Base+0x12bb8>
  418694:	adrp	x0, 474000 <_obstack_memory_used@@Base+0x12bb8>
  418698:	add	x2, x2, #0x210
  41869c:	add	x0, x0, #0x1f8
  4186a0:	mov	w1, #0x241                 	// #577
  4186a4:	bl	402bf0 <nftw@plt+0x70>
  4186a8:	stp	x29, x30, [sp, #-112]!
  4186ac:	adrp	x1, 47b000 <_obstack_memory_used@@Base+0x19bb8>
  4186b0:	add	x1, x1, #0xf40
  4186b4:	mov	x29, sp
  4186b8:	stp	x19, x20, [sp, #16]
  4186bc:	stp	x21, x22, [sp, #32]
  4186c0:	mov	x22, x0
  4186c4:	bl	402650 <fopen@plt>
  4186c8:	cbz	x0, 418ce4 <nftw@plt+0x16164>
  4186cc:	str	x23, [sp, #48]
  4186d0:	adrp	x23, 4a5000 <__environ@@GLIBC_2.17+0xa68>
  4186d4:	add	x19, x23, #0x920
  4186d8:	mov	x21, x0
  4186dc:	ldr	x1, [x19, #8]
  4186e0:	cbz	x1, 418cfc <nftw@plt+0x1617c>
  4186e4:	mov	x20, x1
  4186e8:	ldr	w3, [x1, #88]
  4186ec:	ldr	w2, [x20], #88
  4186f0:	cmp	w3, w2
  4186f4:	csel	w19, w3, w2, cs  // cs = hs, nlast
  4186f8:	ldr	x0, [x20, #8]
  4186fc:	b.cc	418954 <nftw@plt+0x15dd4>  // b.lo, b.ul, b.last
  418700:	ldr	x3, [x1, #8]
  418704:	cbz	x3, 418950 <nftw@plt+0x15dd0>
  418708:	cbz	x0, 418bb8 <nftw@plt+0x16038>
  41870c:	ldr	w0, [x1, #176]
  418710:	add	x3, x1, #0xb0
  418714:	mov	x20, x1
  418718:	cmp	w19, w0
  41871c:	csel	w19, w19, w0, cs  // cs = hs, nlast
  418720:	cmp	w2, w0
  418724:	ldr	x0, [x3, #8]
  418728:	b.ls	418980 <nftw@plt+0x15e00>  // b.plast
  41872c:	nop
  418730:	cbz	x0, 418c70 <nftw@plt+0x160f0>
  418734:	ldr	w4, [x1, #264]
  418738:	add	x2, x1, #0x108
  41873c:	ldr	w0, [x3]
  418740:	cmp	w19, w4
  418744:	csel	w19, w19, w4, cs  // cs = hs, nlast
  418748:	cmp	w0, w4
  41874c:	ldr	x0, [x2, #8]
  418750:	b.ls	418c50 <nftw@plt+0x160d0>  // b.plast
  418754:	cbz	x0, 418f28 <nftw@plt+0x163a8>
  418758:	ldr	w3, [x1, #352]
  41875c:	add	x20, x1, #0x160
  418760:	ldr	w0, [x2]
  418764:	cmp	w19, w3
  418768:	csel	w19, w19, w3, cs  // cs = hs, nlast
  41876c:	cmp	w0, w3
  418770:	ldr	x0, [x20, #8]
  418774:	b.ls	418c60 <nftw@plt+0x160e0>  // b.plast
  418778:	cbz	x0, 418bb8 <nftw@plt+0x16038>
  41877c:	ldr	w0, [x1, #440]
  418780:	add	x3, x1, #0x1b8
  418784:	ldr	w2, [x20]
  418788:	cmp	w19, w0
  41878c:	csel	w19, w19, w0, cs  // cs = hs, nlast
  418790:	cmp	w2, w0
  418794:	ldr	x0, [x3, #8]
  418798:	b.hi	418a00 <nftw@plt+0x15e80>  // b.pmore
  41879c:	ldr	x2, [x20, #8]
  4187a0:	cbz	x2, 418ccc <nftw@plt+0x1614c>
  4187a4:	cbz	x0, 418c70 <nftw@plt+0x160f0>
  4187a8:	ldr	w0, [x1, #528]
  4187ac:	add	x2, x1, #0x210
  4187b0:	ldr	w3, [x20]
  4187b4:	cmp	w19, w0
  4187b8:	csel	w19, w19, w0, cs  // cs = hs, nlast
  4187bc:	cmp	w0, w3
  4187c0:	mov	x3, x20
  4187c4:	ldr	x0, [x2, #8]
  4187c8:	b.cs	418a2c <nftw@plt+0x15eac>  // b.hs, b.nlast
  4187cc:	nop
  4187d0:	cbz	x0, 418f28 <nftw@plt+0x163a8>
  4187d4:	ldr	w0, [x1, #616]
  4187d8:	add	x20, x1, #0x268
  4187dc:	ldr	w3, [x2]
  4187e0:	cmp	w19, w0
  4187e4:	csel	w19, w19, w0, cs  // cs = hs, nlast
  4187e8:	cmp	w3, w0
  4187ec:	ldr	x0, [x20, #8]
  4187f0:	b.hi	418a58 <nftw@plt+0x15ed8>  // b.pmore
  4187f4:	ldr	x3, [x2, #8]
  4187f8:	cbz	x3, 418cdc <nftw@plt+0x1615c>
  4187fc:	cbz	x0, 418bb8 <nftw@plt+0x16038>
  418800:	ldr	w0, [x1, #704]
  418804:	add	x3, x1, #0x2c0
  418808:	ldr	w4, [x2]
  41880c:	mov	x20, x2
  418810:	cmp	w19, w0
  418814:	csel	w19, w19, w0, cs  // cs = hs, nlast
  418818:	cmp	w0, w4
  41881c:	ldr	x0, [x3, #8]
  418820:	b.cc	418a88 <nftw@plt+0x15f08>  // b.lo, b.ul, b.last
  418824:	cbz	x0, 418c70 <nftw@plt+0x160f0>
  418828:	ldr	w0, [x1, #792]
  41882c:	add	x2, x1, #0x318
  418830:	ldr	w3, [x20]
  418834:	cmp	w19, w0
  418838:	csel	w19, w19, w0, cs  // cs = hs, nlast
  41883c:	cmp	w0, w3
  418840:	mov	x3, x20
  418844:	ldr	x0, [x2, #8]
  418848:	b.cs	418ab4 <nftw@plt+0x15f34>  // b.hs, b.nlast
  41884c:	nop
  418850:	cbz	x0, 418f28 <nftw@plt+0x163a8>
  418854:	ldr	w0, [x1, #880]
  418858:	add	x20, x1, #0x370
  41885c:	ldr	w3, [x2]
  418860:	cmp	w19, w0
  418864:	csel	w19, w19, w0, cs  // cs = hs, nlast
  418868:	cmp	w3, w0
  41886c:	ldr	x0, [x20, #8]
  418870:	b.ls	418c84 <nftw@plt+0x16104>  // b.plast
  418874:	cbz	x0, 418bb8 <nftw@plt+0x16038>
  418878:	ldr	w0, [x1, #968]
  41887c:	add	x3, x1, #0x3c8
  418880:	ldr	w2, [x20]
  418884:	cmp	w19, w0
  418888:	csel	w19, w19, w0, cs  // cs = hs, nlast
  41888c:	cmp	w2, w0
  418890:	ldr	x0, [x3, #8]
  418894:	b.ls	418c94 <nftw@plt+0x16114>  // b.plast
  418898:	cbz	x0, 418c70 <nftw@plt+0x160f0>
  41889c:	ldr	w2, [x1, #1056]
  4188a0:	add	x0, x1, #0x420
  4188a4:	ldr	w4, [x3]
  4188a8:	cmp	w19, w2
  4188ac:	csel	w19, w19, w2, cs  // cs = hs, nlast
  4188b0:	cmp	w4, w2
  4188b4:	ldr	x2, [x0, #8]
  4188b8:	b.hi	418b30 <nftw@plt+0x15fb0>  // b.pmore
  4188bc:	ldr	x4, [x3, #8]
  4188c0:	cbz	x4, 418f20 <nftw@plt+0x163a0>
  4188c4:	mov	x20, x0
  4188c8:	cbz	x2, 418bb8 <nftw@plt+0x16038>
  4188cc:	ldr	w0, [x1, #1144]
  4188d0:	add	x2, x1, #0x478
  4188d4:	ldr	w4, [x3]
  4188d8:	cmp	w19, w0
  4188dc:	csel	w19, w19, w0, cs  // cs = hs, nlast
  4188e0:	cmp	w0, w4
  4188e4:	mov	x0, x3
  4188e8:	ldr	x4, [x2, #8]
  4188ec:	b.cc	418b54 <nftw@plt+0x15fd4>  // b.lo, b.ul, b.last
  4188f0:	mov	x20, x2
  4188f4:	cbz	x4, 418bb8 <nftw@plt+0x16038>
  4188f8:	ldr	w2, [x1, #1232]
  4188fc:	add	x3, x1, #0x4d0
  418900:	ldr	w4, [x0]
  418904:	cmp	w19, w2
  418908:	csel	w19, w19, w2, cs  // cs = hs, nlast
  41890c:	cmp	w4, w2
  418910:	mov	x2, x0
  418914:	ldr	x4, [x3, #8]
  418918:	b.hi	418b78 <nftw@plt+0x15ff8>  // b.pmore
  41891c:	mov	x20, x3
  418920:	cbz	x4, 418bb8 <nftw@plt+0x16038>
  418924:	ldr	w0, [x1, #1320]
  418928:	add	x20, x1, #0x528
  41892c:	ldr	w1, [x2]
  418930:	cmp	w19, w0
  418934:	csel	w19, w19, w0, cs  // cs = hs, nlast
  418938:	cmp	w1, w0
  41893c:	ldr	x0, [x20, #8]
  418940:	b.hi	418bb8 <nftw@plt+0x16038>  // b.pmore
  418944:	mov	x1, x20
  418948:	mov	x20, x2
  41894c:	b	418bac <nftw@plt+0x1602c>
  418950:	mov	x20, x1
  418954:	cbz	x0, 418bb8 <nftw@plt+0x16038>
  418958:	ldr	w2, [x1, #176]
  41895c:	add	x3, x1, #0xb0
  418960:	ldr	w0, [x20]
  418964:	cmp	w19, w2
  418968:	csel	w19, w19, w2, cs  // cs = hs, nlast
  41896c:	cmp	w0, w2
  418970:	ldr	x0, [x3, #8]
  418974:	b.hi	418730 <nftw@plt+0x15bb0>  // b.pmore
  418978:	ldr	x2, [x20, #8]
  41897c:	cbz	x2, 418cc4 <nftw@plt+0x16144>
  418980:	cbz	x0, 418c70 <nftw@plt+0x160f0>
  418984:	ldr	w0, [x1, #264]
  418988:	add	x2, x1, #0x108
  41898c:	ldr	w3, [x20]
  418990:	cmp	w19, w0
  418994:	csel	w19, w19, w0, cs  // cs = hs, nlast
  418998:	cmp	w3, w0
  41899c:	mov	x3, x20
  4189a0:	ldr	x0, [x2, #8]
  4189a4:	b.hi	418754 <nftw@plt+0x15bd4>  // b.pmore
  4189a8:	mov	x20, x2
  4189ac:	cbz	x0, 418bb8 <nftw@plt+0x16038>
  4189b0:	ldr	w0, [x1, #352]
  4189b4:	add	x20, x1, #0x160
  4189b8:	ldr	w2, [x3]
  4189bc:	cmp	w19, w0
  4189c0:	csel	w19, w19, w0, cs  // cs = hs, nlast
  4189c4:	cmp	w0, w2
  4189c8:	mov	x2, x3
  4189cc:	ldr	x0, [x20, #8]
  4189d0:	b.cc	418778 <nftw@plt+0x15bf8>  // b.lo, b.ul, b.last
  4189d4:	cbz	x0, 418bb8 <nftw@plt+0x16038>
  4189d8:	ldr	w0, [x1, #440]
  4189dc:	add	x3, x1, #0x1b8
  4189e0:	ldr	w4, [x2]
  4189e4:	mov	x20, x2
  4189e8:	cmp	w19, w0
  4189ec:	csel	w19, w19, w0, cs  // cs = hs, nlast
  4189f0:	cmp	w0, w4
  4189f4:	ldr	x0, [x3, #8]
  4189f8:	b.cs	4187a4 <nftw@plt+0x15c24>  // b.hs, b.nlast
  4189fc:	nop
  418a00:	cbz	x0, 418c70 <nftw@plt+0x160f0>
  418a04:	ldr	w0, [x1, #528]
  418a08:	add	x2, x1, #0x210
  418a0c:	ldr	w4, [x3]
  418a10:	cmp	w19, w0
  418a14:	csel	w19, w19, w0, cs  // cs = hs, nlast
  418a18:	cmp	w4, w0
  418a1c:	ldr	x0, [x2, #8]
  418a20:	b.hi	4187d0 <nftw@plt+0x15c50>  // b.pmore
  418a24:	ldr	x4, [x3, #8]
  418a28:	cbz	x4, 418cd4 <nftw@plt+0x16154>
  418a2c:	mov	x20, x2
  418a30:	cbz	x0, 418bb8 <nftw@plt+0x16038>
  418a34:	ldr	w0, [x1, #616]
  418a38:	add	x20, x1, #0x268
  418a3c:	ldr	w2, [x3]
  418a40:	cmp	w19, w0
  418a44:	csel	w19, w19, w0, cs  // cs = hs, nlast
  418a48:	cmp	w0, w2
  418a4c:	mov	x2, x3
  418a50:	ldr	x0, [x20, #8]
  418a54:	b.cs	4187fc <nftw@plt+0x15c7c>  // b.hs, b.nlast
  418a58:	cbz	x0, 418bb8 <nftw@plt+0x16038>
  418a5c:	ldr	w0, [x1, #704]
  418a60:	add	x3, x1, #0x2c0
  418a64:	ldr	w2, [x20]
  418a68:	cmp	w19, w0
  418a6c:	csel	w19, w19, w0, cs  // cs = hs, nlast
  418a70:	cmp	w2, w0
  418a74:	ldr	x0, [x3, #8]
  418a78:	b.hi	418a88 <nftw@plt+0x15f08>  // b.pmore
  418a7c:	ldr	x2, [x20, #8]
  418a80:	cbnz	x2, 418824 <nftw@plt+0x15ca4>
  418a84:	mov	x3, x20
  418a88:	cbz	x0, 418c70 <nftw@plt+0x160f0>
  418a8c:	ldr	w0, [x1, #792]
  418a90:	add	x2, x1, #0x318
  418a94:	ldr	w4, [x3]
  418a98:	cmp	w19, w0
  418a9c:	csel	w19, w19, w0, cs  // cs = hs, nlast
  418aa0:	cmp	w4, w0
  418aa4:	ldr	x0, [x2, #8]
  418aa8:	b.hi	418850 <nftw@plt+0x15cd0>  // b.pmore
  418aac:	ldr	x4, [x3, #8]
  418ab0:	cbz	x4, 418f18 <nftw@plt+0x16398>
  418ab4:	mov	x20, x2
  418ab8:	cbz	x0, 418bb8 <nftw@plt+0x16038>
  418abc:	ldr	w0, [x1, #880]
  418ac0:	add	x20, x1, #0x370
  418ac4:	ldr	w2, [x3]
  418ac8:	cmp	w19, w0
  418acc:	csel	w19, w19, w0, cs  // cs = hs, nlast
  418ad0:	cmp	w0, w2
  418ad4:	mov	x2, x3
  418ad8:	ldr	x0, [x20, #8]
  418adc:	b.cc	418874 <nftw@plt+0x15cf4>  // b.lo, b.ul, b.last
  418ae0:	cbz	x0, 418bb8 <nftw@plt+0x16038>
  418ae4:	ldr	w0, [x1, #968]
  418ae8:	add	x3, x1, #0x3c8
  418aec:	ldr	w4, [x2]
  418af0:	mov	x20, x2
  418af4:	cmp	w19, w0
  418af8:	csel	w19, w19, w0, cs  // cs = hs, nlast
  418afc:	cmp	w0, w4
  418b00:	ldr	x0, [x3, #8]
  418b04:	b.cc	418898 <nftw@plt+0x15d18>  // b.lo, b.ul, b.last
  418b08:	cbz	x0, 418c70 <nftw@plt+0x160f0>
  418b0c:	ldr	w2, [x1, #1056]
  418b10:	add	x0, x1, #0x420
  418b14:	ldr	w3, [x20]
  418b18:	cmp	w19, w2
  418b1c:	csel	w19, w19, w2, cs  // cs = hs, nlast
  418b20:	cmp	w3, w2
  418b24:	mov	x3, x20
  418b28:	ldr	x2, [x0, #8]
  418b2c:	b.ls	4188c4 <nftw@plt+0x15d44>  // b.plast
  418b30:	cbz	x2, 418f30 <nftw@plt+0x163b0>
  418b34:	ldr	w3, [x1, #1144]
  418b38:	add	x2, x1, #0x478
  418b3c:	ldr	w4, [x0]
  418b40:	cmp	w19, w3
  418b44:	csel	w19, w19, w3, cs  // cs = hs, nlast
  418b48:	cmp	w4, w3
  418b4c:	ldr	x4, [x2, #8]
  418b50:	b.ls	418ca4 <nftw@plt+0x16124>  // b.plast
  418b54:	cbz	x4, 418f28 <nftw@plt+0x163a8>
  418b58:	ldr	w0, [x1, #1232]
  418b5c:	add	x3, x1, #0x4d0
  418b60:	ldr	w4, [x2]
  418b64:	cmp	w19, w0
  418b68:	csel	w19, w19, w0, cs  // cs = hs, nlast
  418b6c:	cmp	w4, w0
  418b70:	ldr	x4, [x3, #8]
  418b74:	b.ls	418cb4 <nftw@plt+0x16134>  // b.plast
  418b78:	cbz	x4, 418c70 <nftw@plt+0x160f0>
  418b7c:	ldr	w0, [x1, #1320]
  418b80:	add	x20, x1, #0x528
  418b84:	ldr	w1, [x3]
  418b88:	cmp	w19, w0
  418b8c:	csel	w19, w19, w0, cs  // cs = hs, nlast
  418b90:	cmp	w0, w1
  418b94:	ldr	x0, [x20, #8]
  418b98:	b.cc	418bb8 <nftw@plt+0x16038>  // b.lo, b.ul, b.last
  418b9c:	ldr	x1, [x3, #8]
  418ba0:	cbz	x1, 418c70 <nftw@plt+0x160f0>
  418ba4:	mov	x1, x20
  418ba8:	mov	x20, x3
  418bac:	cmp	x0, #0x0
  418bb0:	csel	x20, x20, x1, ne  // ne = any
  418bb4:	nop
  418bb8:	ldr	x0, [x20, #16]
  418bbc:	str	x22, [x20, #8]
  418bc0:	cbz	x0, 418bc8 <nftw@plt+0x16048>
  418bc4:	bl	402620 <fclose@plt>
  418bc8:	ldr	x1, [x20, #80]
  418bcc:	str	x21, [x20, #16]
  418bd0:	stp	xzr, xzr, [x20, #40]
  418bd4:	str	xzr, [x20, #56]
  418bd8:	cbz	x1, 418be0 <nftw@plt+0x16060>
  418bdc:	str	wzr, [x1, #4]
  418be0:	ldr	x0, [x23, #2336]
  418be4:	add	w19, w19, #0x1
  418be8:	str	w19, [x20]
  418bec:	mov	x1, x22
  418bf0:	add	x2, sp, #0x4c
  418bf4:	str	wzr, [sp, #76]
  418bf8:	bl	4377c8 <nftw@plt+0x34c48>
  418bfc:	tst	w0, #0xff
  418c00:	b.ne	418c2c <nftw@plt+0x160ac>  // b.any
  418c04:	mov	x1, #0x0                   	// #0
  418c08:	mov	w0, #0x1                   	// #1
  418c0c:	strb	w0, [x20, #72]
  418c10:	ldr	x23, [sp, #48]
  418c14:	str	x1, [x20, #64]
  418c18:	mov	x0, x20
  418c1c:	ldp	x19, x20, [sp, #16]
  418c20:	ldp	x21, x22, [sp, #32]
  418c24:	ldp	x29, x30, [sp], #112
  418c28:	ret
  418c2c:	ldr	w0, [sp, #76]
  418c30:	cmp	w0, #0x1
  418c34:	b.ls	418f38 <nftw@plt+0x163b8>  // b.plast
  418c38:	mov	w1, #0x1                   	// #1
  418c3c:	add	x8, sp, #0x50
  418c40:	mov	w2, #0x0                   	// #0
  418c44:	bl	417f80 <nftw@plt+0x15400>
  418c48:	ldrsw	x1, [sp, #88]
  418c4c:	b	418c08 <nftw@plt+0x16088>
  418c50:	ldr	x4, [x3, #8]
  418c54:	cbnz	x4, 4189a8 <nftw@plt+0x15e28>
  418c58:	mov	x2, x3
  418c5c:	b	418754 <nftw@plt+0x15bd4>
  418c60:	ldr	x3, [x2, #8]
  418c64:	cbnz	x3, 4189d4 <nftw@plt+0x15e54>
  418c68:	mov	x20, x2
  418c6c:	b	418778 <nftw@plt+0x15bf8>
  418c70:	mov	x20, x3
  418c74:	ldr	x0, [x20, #16]
  418c78:	str	x22, [x20, #8]
  418c7c:	cbnz	x0, 418bc4 <nftw@plt+0x16044>
  418c80:	b	418bc8 <nftw@plt+0x16048>
  418c84:	ldr	x3, [x2, #8]
  418c88:	cbnz	x3, 418ae0 <nftw@plt+0x15f60>
  418c8c:	mov	x20, x2
  418c90:	b	418874 <nftw@plt+0x15cf4>
  418c94:	ldr	x2, [x20, #8]
  418c98:	cbnz	x2, 418b08 <nftw@plt+0x15f88>
  418c9c:	mov	x3, x20
  418ca0:	b	418898 <nftw@plt+0x15d18>
  418ca4:	ldr	x3, [x0, #8]
  418ca8:	cbnz	x3, 4188f0 <nftw@plt+0x15d70>
  418cac:	mov	x2, x0
  418cb0:	b	418b54 <nftw@plt+0x15fd4>
  418cb4:	ldr	x0, [x2, #8]
  418cb8:	cbnz	x0, 41891c <nftw@plt+0x15d9c>
  418cbc:	mov	x3, x2
  418cc0:	b	418b78 <nftw@plt+0x15ff8>
  418cc4:	mov	x3, x20
  418cc8:	b	418730 <nftw@plt+0x15bb0>
  418ccc:	mov	x3, x20
  418cd0:	b	418a00 <nftw@plt+0x15e80>
  418cd4:	mov	x2, x3
  418cd8:	b	4187d0 <nftw@plt+0x15c50>
  418cdc:	mov	x20, x2
  418ce0:	b	418a58 <nftw@plt+0x15ed8>
  418ce4:	mov	x20, #0x0                   	// #0
  418ce8:	mov	x0, x20
  418cec:	ldp	x19, x20, [sp, #16]
  418cf0:	ldp	x21, x22, [sp, #32]
  418cf4:	ldp	x29, x30, [sp], #112
  418cf8:	ret
  418cfc:	mov	x0, #0x588                 	// #1416
  418d00:	bl	461da8 <_obstack_memory_used@@Base+0x960>
  418d04:	mov	x1, x0
  418d08:	mov	x2, x0
  418d0c:	movi	v0.4s, #0x0
  418d10:	mov	x4, #0x10                  	// #16
  418d14:	mov	w3, #0x1                   	// #1
  418d18:	add	x0, x0, #0x200
  418d1c:	str	x4, [x1], #8
  418d20:	add	x4, x2, #0x400
  418d24:	str	wzr, [x2, #8]
  418d28:	add	x17, x2, #0x600
  418d2c:	str	q0, [x2, #16]
  418d30:	str	xzr, [x1, #24]
  418d34:	stur	q0, [x2, #40]
  418d38:	stur	q0, [x2, #56]
  418d3c:	str	xzr, [x1, #64]
  418d40:	strb	w3, [x1, #72]
  418d44:	str	xzr, [x2, #88]
  418d48:	str	wzr, [x2, #96]
  418d4c:	str	xzr, [x2, #120]
  418d50:	str	xzr, [x2, #160]
  418d54:	strb	w3, [x2, #168]
  418d58:	str	xzr, [x2, #176]
  418d5c:	str	wzr, [x2, #184]
  418d60:	str	xzr, [x2, #208]
  418d64:	str	xzr, [x2, #248]
  418d68:	strb	w3, [x2, #256]
  418d6c:	str	xzr, [x2, #264]
  418d70:	str	wzr, [x2, #272]
  418d74:	stur	q0, [x2, #104]
  418d78:	stp	q0, q0, [x2, #128]
  418d7c:	str	q0, [x2, #192]
  418d80:	stur	q0, [x2, #216]
  418d84:	stur	q0, [x2, #232]
  418d88:	stur	q0, [x0, #-232]
  418d8c:	str	xzr, [x2, #296]
  418d90:	stp	q0, q0, [x2, #304]
  418d94:	str	xzr, [x2, #336]
  418d98:	strb	w3, [x2, #344]
  418d9c:	str	xzr, [x2, #352]
  418da0:	str	wzr, [x2, #360]
  418da4:	str	xzr, [x2, #384]
  418da8:	str	q0, [x2, #368]
  418dac:	stur	q0, [x0, #-120]
  418db0:	stur	q0, [x0, #-104]
  418db4:	str	xzr, [x2, #424]
  418db8:	strb	w3, [x2, #432]
  418dbc:	str	xzr, [x2, #440]
  418dc0:	str	wzr, [x2, #448]
  418dc4:	stur	q0, [x0, #-56]
  418dc8:	str	xzr, [x2, #472]
  418dcc:	str	xzr, [x2, #512]
  418dd0:	strb	w3, [x2, #520]
  418dd4:	str	xzr, [x2, #528]
  418dd8:	str	wzr, [x2, #536]
  418ddc:	str	xzr, [x2, #560]
  418de0:	stp	q0, q0, [x2, #480]
  418de4:	str	q0, [x2, #544]
  418de8:	stur	q0, [x0, #56]
  418dec:	stur	q0, [x0, #72]
  418df0:	str	xzr, [x2, #600]
  418df4:	strb	w3, [x2, #608]
  418df8:	str	xzr, [x2, #616]
  418dfc:	str	wzr, [x2, #624]
  418e00:	stur	q0, [x0, #120]
  418e04:	str	xzr, [x2, #648]
  418e08:	stp	q0, q0, [x2, #656]
  418e0c:	str	xzr, [x2, #688]
  418e10:	strb	w3, [x2, #696]
  418e14:	str	xzr, [x2, #704]
  418e18:	str	wzr, [x2, #712]
  418e1c:	str	xzr, [x2, #736]
  418e20:	str	q0, [x2, #720]
  418e24:	stur	q0, [x0, #232]
  418e28:	stur	q0, [x0, #248]
  418e2c:	str	xzr, [x2, #776]
  418e30:	strb	w3, [x2, #784]
  418e34:	str	xzr, [x2, #792]
  418e38:	str	wzr, [x2, #800]
  418e3c:	stur	q0, [x4, #-216]
  418e40:	str	xzr, [x2, #824]
  418e44:	str	xzr, [x2, #864]
  418e48:	strb	w3, [x2, #872]
  418e4c:	str	xzr, [x2, #880]
  418e50:	str	wzr, [x2, #888]
  418e54:	str	xzr, [x2, #912]
  418e58:	stp	q0, q0, [x2, #832]
  418e5c:	str	q0, [x2, #896]
  418e60:	stur	q0, [x4, #-104]
  418e64:	stur	q0, [x4, #-88]
  418e68:	str	xzr, [x2, #952]
  418e6c:	strb	w3, [x2, #960]
  418e70:	str	xzr, [x2, #968]
  418e74:	str	wzr, [x2, #976]
  418e78:	stur	q0, [x4, #-40]
  418e7c:	str	xzr, [x2, #1000]
  418e80:	str	xzr, [x2, #1040]
  418e84:	strb	w3, [x2, #1048]
  418e88:	str	xzr, [x2, #1056]
  418e8c:	str	wzr, [x2, #1064]
  418e90:	stp	q0, q0, [x2, #1008]
  418e94:	str	q0, [x2, #1072]
  418e98:	str	xzr, [x2, #1088]
  418e9c:	str	x1, [x19, #8]
  418ea0:	stur	q0, [x4, #72]
  418ea4:	stur	q0, [x4, #88]
  418ea8:	str	xzr, [x2, #1128]
  418eac:	strb	w3, [x2, #1136]
  418eb0:	str	xzr, [x2, #1144]
  418eb4:	str	wzr, [x2, #1152]
  418eb8:	stur	q0, [x4, #136]
  418ebc:	str	xzr, [x2, #1176]
  418ec0:	str	xzr, [x2, #1216]
  418ec4:	strb	w3, [x2, #1224]
  418ec8:	str	xzr, [x2, #1232]
  418ecc:	str	wzr, [x2, #1240]
  418ed0:	str	xzr, [x2, #1264]
  418ed4:	str	q0, [x2, #1184]
  418ed8:	str	q0, [x2, #1200]
  418edc:	str	q0, [x2, #1248]
  418ee0:	stur	q0, [x4, #248]
  418ee4:	stur	q0, [x17, #-248]
  418ee8:	str	xzr, [x2, #1304]
  418eec:	strb	w3, [x2, #1312]
  418ef0:	str	xzr, [x2, #1320]
  418ef4:	str	wzr, [x2, #1328]
  418ef8:	stur	q0, [x17, #-200]
  418efc:	str	xzr, [x2, #1352]
  418f00:	str	q0, [x2, #1360]
  418f04:	str	q0, [x2, #1376]
  418f08:	str	xzr, [x2, #1392]
  418f0c:	strb	w3, [x2, #1400]
  418f10:	str	xzr, [x2, #1408]
  418f14:	b	4186e4 <nftw@plt+0x15b64>
  418f18:	mov	x2, x3
  418f1c:	b	418850 <nftw@plt+0x15cd0>
  418f20:	mov	x0, x3
  418f24:	b	418b30 <nftw@plt+0x15fb0>
  418f28:	mov	x20, x2
  418f2c:	b	418bb8 <nftw@plt+0x16038>
  418f30:	mov	x20, x0
  418f34:	b	418bb8 <nftw@plt+0x16038>
  418f38:	adrp	x2, 474000 <_obstack_memory_used@@Base+0x12bb8>
  418f3c:	adrp	x0, 474000 <_obstack_memory_used@@Base+0x12bb8>
  418f40:	add	x2, x2, #0x220
  418f44:	add	x0, x0, #0x1f8
  418f48:	mov	w1, #0x107                 	// #263
  418f4c:	bl	402bf0 <nftw@plt+0x70>
  418f50:	stp	x29, x30, [sp, #-48]!
  418f54:	mov	x29, sp
  418f58:	stp	x21, x22, [sp, #32]
  418f5c:	adrp	x21, 4a5000 <__environ@@GLIBC_2.17+0xa68>
  418f60:	add	x21, x21, #0x920
  418f64:	stp	x19, x20, [sp, #16]
  418f68:	ldr	x20, [x21, #8]
  418f6c:	cbz	x20, 41900c <nftw@plt+0x1648c>
  418f70:	ldur	x0, [x20, #-8]
  418f74:	add	x1, x0, x0, lsl #1
  418f78:	lsl	x1, x1, #2
  418f7c:	sub	x1, x1, x0
  418f80:	lsl	x1, x1, #3
  418f84:	add	x19, x20, x1
  418f88:	cmp	x20, x19
  418f8c:	b.ne	418fa0 <nftw@plt+0x16420>  // b.any
  418f90:	b	418ffc <nftw@plt+0x1647c>
  418f94:	bl	402910 <free@plt>
  418f98:	cmp	x19, x20
  418f9c:	b.eq	418fe8 <nftw@plt+0x16468>  // b.none
  418fa0:	mov	x22, x19
  418fa4:	sub	x19, x19, #0x58
  418fa8:	ldr	x0, [x19, #16]
  418fac:	cbz	x0, 418fbc <nftw@plt+0x1643c>
  418fb0:	bl	402620 <fclose@plt>
  418fb4:	str	xzr, [x19, #16]
  418fb8:	ldr	x20, [x21, #8]
  418fbc:	ldr	x0, [x19, #24]
  418fc0:	cbz	x0, 418fc8 <nftw@plt+0x16448>
  418fc4:	bl	402910 <free@plt>
  418fc8:	ldr	x1, [x19, #80]
  418fcc:	mov	x0, x1
  418fd0:	cbz	x1, 418f98 <nftw@plt+0x16418>
  418fd4:	ldrsb	w2, [x1, #3]
  418fd8:	tbz	w2, #31, 418f94 <nftw@plt+0x16414>
  418fdc:	str	wzr, [x1, #4]
  418fe0:	cmp	x19, x20
  418fe4:	b.ne	418fa0 <nftw@plt+0x16420>  // b.any
  418fe8:	ldur	x0, [x22, #-96]
  418fec:	add	x1, x0, x0, lsl #1
  418ff0:	lsl	x1, x1, #2
  418ff4:	sub	x1, x1, x0
  418ff8:	lsl	x1, x1, #3
  418ffc:	add	x1, x1, #0x8
  419000:	sub	x0, x20, #0x8
  419004:	bl	461b08 <_obstack_memory_used@@Base+0x6c0>
  419008:	str	xzr, [x21, #8]
  41900c:	ldp	x19, x20, [sp, #16]
  419010:	ldp	x21, x22, [sp, #32]
  419014:	ldp	x29, x30, [sp], #48
  419018:	ret
  41901c:	nop
  419020:	stp	x29, x30, [sp, #-48]!
  419024:	mov	x29, sp
  419028:	stp	x19, x20, [sp, #16]
  41902c:	stp	x21, x22, [sp, #32]
  419030:	cbz	x0, 4192f4 <nftw@plt+0x16774>
  419034:	adrp	x20, 4a5000 <__environ@@GLIBC_2.17+0xa68>
  419038:	add	x20, x20, #0x920
  41903c:	mov	x21, x0
  419040:	ldr	x19, [x20, #8]
  419044:	cbz	x19, 4190d8 <nftw@plt+0x16558>
  419048:	add	x22, x19, #0x580
  41904c:	mov	x20, #0x0                   	// #0
  419050:	ldr	x0, [x19, #8]
  419054:	cbz	x0, 419074 <nftw@plt+0x164f4>
  419058:	mov	x1, x21
  41905c:	bl	402890 <strcmp@plt>
  419060:	cbnz	w0, 419074 <nftw@plt+0x164f4>
  419064:	ldr	w0, [x19]
  419068:	mov	x20, x19
  41906c:	add	w0, w0, #0x1
  419070:	str	w0, [x19]
  419074:	add	x19, x19, #0x58
  419078:	cmp	x19, x22
  41907c:	b.ne	419050 <nftw@plt+0x164d0>  // b.any
  419080:	cbz	x20, 4190c8 <nftw@plt+0x16548>
  419084:	ldr	w1, [x20]
  419088:	ldr	x0, [x20, #16]
  41908c:	add	w1, w1, #0x1
  419090:	str	w1, [x20]
  419094:	str	xzr, [x20, #8]
  419098:	cbz	x0, 4190a0 <nftw@plt+0x16520>
  41909c:	bl	402620 <fclose@plt>
  4190a0:	ldr	x0, [x20, #80]
  4190a4:	str	xzr, [x20, #16]
  4190a8:	stp	xzr, xzr, [x20, #40]
  4190ac:	str	xzr, [x20, #56]
  4190b0:	cbz	x0, 4190b8 <nftw@plt+0x16538>
  4190b4:	str	wzr, [x0, #4]
  4190b8:	mov	w0, #0x1                   	// #1
  4190bc:	str	wzr, [x20]
  4190c0:	str	xzr, [x20, #64]
  4190c4:	strb	w0, [x20, #72]
  4190c8:	ldp	x19, x20, [sp, #16]
  4190cc:	ldp	x21, x22, [sp, #32]
  4190d0:	ldp	x29, x30, [sp], #48
  4190d4:	ret
  4190d8:	mov	x0, #0x588                 	// #1416
  4190dc:	bl	461da8 <_obstack_memory_used@@Base+0x960>
  4190e0:	mov	x2, x0
  4190e4:	mov	x3, #0x10                  	// #16
  4190e8:	mov	x19, x2
  4190ec:	mov	w0, #0x1                   	// #1
  4190f0:	movi	v0.4s, #0x0
  4190f4:	add	x1, x2, #0x200
  4190f8:	add	x18, x2, #0x600
  4190fc:	str	x3, [x19], #8
  419100:	add	x3, x2, #0x400
  419104:	str	wzr, [x2, #8]
  419108:	str	q0, [x2, #16]
  41910c:	str	xzr, [x19, #24]
  419110:	stur	q0, [x2, #40]
  419114:	stur	q0, [x2, #56]
  419118:	str	xzr, [x19, #64]
  41911c:	strb	w0, [x19, #72]
  419120:	str	xzr, [x2, #88]
  419124:	str	wzr, [x2, #96]
  419128:	str	xzr, [x2, #120]
  41912c:	str	xzr, [x2, #160]
  419130:	strb	w0, [x2, #168]
  419134:	str	xzr, [x2, #176]
  419138:	str	wzr, [x2, #184]
  41913c:	str	xzr, [x2, #208]
  419140:	str	xzr, [x2, #248]
  419144:	strb	w0, [x2, #256]
  419148:	str	xzr, [x2, #264]
  41914c:	str	wzr, [x2, #272]
  419150:	stur	q0, [x2, #104]
  419154:	stp	q0, q0, [x2, #128]
  419158:	str	q0, [x2, #192]
  41915c:	stur	q0, [x2, #216]
  419160:	stur	q0, [x2, #232]
  419164:	stur	q0, [x1, #-232]
  419168:	str	xzr, [x2, #296]
  41916c:	stp	q0, q0, [x2, #304]
  419170:	str	xzr, [x2, #336]
  419174:	strb	w0, [x2, #344]
  419178:	str	xzr, [x2, #352]
  41917c:	str	wzr, [x2, #360]
  419180:	str	xzr, [x2, #384]
  419184:	str	q0, [x2, #368]
  419188:	stur	q0, [x1, #-120]
  41918c:	stur	q0, [x1, #-104]
  419190:	str	xzr, [x2, #424]
  419194:	strb	w0, [x2, #432]
  419198:	str	xzr, [x2, #440]
  41919c:	str	wzr, [x2, #448]
  4191a0:	stur	q0, [x1, #-56]
  4191a4:	str	xzr, [x2, #472]
  4191a8:	str	xzr, [x2, #512]
  4191ac:	strb	w0, [x2, #520]
  4191b0:	str	xzr, [x2, #528]
  4191b4:	str	wzr, [x2, #536]
  4191b8:	str	xzr, [x2, #560]
  4191bc:	stp	q0, q0, [x2, #480]
  4191c0:	str	q0, [x2, #544]
  4191c4:	stur	q0, [x1, #56]
  4191c8:	stur	q0, [x1, #72]
  4191cc:	str	xzr, [x2, #600]
  4191d0:	strb	w0, [x2, #608]
  4191d4:	str	xzr, [x2, #616]
  4191d8:	str	wzr, [x2, #624]
  4191dc:	stur	q0, [x1, #120]
  4191e0:	str	xzr, [x2, #648]
  4191e4:	stp	q0, q0, [x2, #656]
  4191e8:	str	xzr, [x2, #688]
  4191ec:	strb	w0, [x2, #696]
  4191f0:	str	xzr, [x2, #704]
  4191f4:	str	wzr, [x2, #712]
  4191f8:	str	xzr, [x2, #736]
  4191fc:	str	q0, [x2, #720]
  419200:	stur	q0, [x1, #232]
  419204:	stur	q0, [x1, #248]
  419208:	str	xzr, [x2, #776]
  41920c:	strb	w0, [x2, #784]
  419210:	str	xzr, [x2, #792]
  419214:	str	wzr, [x2, #800]
  419218:	stur	q0, [x3, #-216]
  41921c:	str	xzr, [x2, #824]
  419220:	str	xzr, [x2, #864]
  419224:	strb	w0, [x2, #872]
  419228:	str	xzr, [x2, #880]
  41922c:	str	wzr, [x2, #888]
  419230:	str	xzr, [x2, #912]
  419234:	stp	q0, q0, [x2, #832]
  419238:	str	q0, [x2, #896]
  41923c:	stur	q0, [x3, #-104]
  419240:	stur	q0, [x3, #-88]
  419244:	str	xzr, [x2, #952]
  419248:	strb	w0, [x2, #960]
  41924c:	str	xzr, [x2, #968]
  419250:	str	wzr, [x2, #976]
  419254:	stur	q0, [x3, #-40]
  419258:	str	xzr, [x2, #1000]
  41925c:	str	xzr, [x2, #1040]
  419260:	strb	w0, [x2, #1048]
  419264:	str	xzr, [x2, #1056]
  419268:	str	wzr, [x2, #1064]
  41926c:	stp	q0, q0, [x2, #1008]
  419270:	str	q0, [x2, #1072]
  419274:	str	xzr, [x2, #1088]
  419278:	str	x19, [x20, #8]
  41927c:	stur	q0, [x3, #72]
  419280:	stur	q0, [x3, #88]
  419284:	str	xzr, [x2, #1128]
  419288:	strb	w0, [x2, #1136]
  41928c:	str	xzr, [x2, #1144]
  419290:	str	wzr, [x2, #1152]
  419294:	stur	q0, [x3, #136]
  419298:	str	xzr, [x2, #1176]
  41929c:	str	xzr, [x2, #1216]
  4192a0:	strb	w0, [x2, #1224]
  4192a4:	str	xzr, [x2, #1232]
  4192a8:	str	wzr, [x2, #1240]
  4192ac:	str	xzr, [x2, #1264]
  4192b0:	str	q0, [x2, #1184]
  4192b4:	str	q0, [x2, #1200]
  4192b8:	str	q0, [x2, #1248]
  4192bc:	stur	q0, [x3, #248]
  4192c0:	stur	q0, [x18, #-248]
  4192c4:	str	xzr, [x2, #1304]
  4192c8:	strb	w0, [x2, #1312]
  4192cc:	str	xzr, [x2, #1320]
  4192d0:	str	wzr, [x2, #1328]
  4192d4:	stur	q0, [x18, #-200]
  4192d8:	str	xzr, [x2, #1352]
  4192dc:	str	q0, [x2, #1360]
  4192e0:	str	q0, [x2, #1376]
  4192e4:	str	xzr, [x2, #1392]
  4192e8:	strb	w0, [x2, #1400]
  4192ec:	str	xzr, [x2, #1408]
  4192f0:	b	419048 <nftw@plt+0x164c8>
  4192f4:	adrp	x2, 474000 <_obstack_memory_used@@Base+0x12bb8>
  4192f8:	adrp	x0, 474000 <_obstack_memory_used@@Base+0x12bb8>
  4192fc:	add	x2, x2, #0x230
  419300:	add	x0, x0, #0x1f8
  419304:	mov	w1, #0x133                 	// #307
  419308:	bl	402bf0 <nftw@plt+0x70>
  41930c:	nop
  419310:	movi	v0.4s, #0x0
  419314:	mov	w1, #0x1                   	// #1
  419318:	str	wzr, [x0]
  41931c:	str	xzr, [x0, #24]
  419320:	str	xzr, [x0, #64]
  419324:	stur	q0, [x0, #8]
  419328:	stp	q0, q0, [x0, #32]
  41932c:	strb	w1, [x0, #72]
  419330:	str	xzr, [x0, #80]
  419334:	ret
  419338:	stp	x29, x30, [sp, #-32]!
  41933c:	mov	x29, sp
  419340:	str	x19, [sp, #16]
  419344:	mov	x19, x0
  419348:	ldr	x0, [x0, #16]
  41934c:	cbz	x0, 419354 <nftw@plt+0x167d4>
  419350:	bl	402620 <fclose@plt>
  419354:	ldr	x0, [x19, #24]
  419358:	cbz	x0, 419360 <nftw@plt+0x167e0>
  41935c:	bl	402910 <free@plt>
  419360:	ldr	x0, [x19, #80]
  419364:	cbz	x0, 419380 <nftw@plt+0x16800>
  419368:	ldrsb	w1, [x0, #3]
  41936c:	tbnz	w1, #31, 41937c <nftw@plt+0x167fc>
  419370:	ldr	x19, [sp, #16]
  419374:	ldp	x29, x30, [sp], #32
  419378:	b	402910 <free@plt>
  41937c:	str	wzr, [x0, #4]
  419380:	ldr	x19, [sp, #16]
  419384:	ldp	x29, x30, [sp], #32
  419388:	ret
  41938c:	nop
  419390:	stp	x29, x30, [sp, #-96]!
  419394:	mov	x29, sp
  419398:	str	xzr, [sp, #72]
  41939c:	cbnz	w1, 4193b0 <nftw@plt+0x16830>
  4193a0:	mov	x0, #0x0                   	// #0
  4193a4:	mov	x1, #0x0                   	// #0
  4193a8:	ldp	x29, x30, [sp], #96
  4193ac:	ret
  4193b0:	stp	x19, x20, [sp, #16]
  4193b4:	stp	x21, x22, [sp, #32]
  4193b8:	mov	x21, x0
  4193bc:	mov	w22, w1
  4193c0:	cbz	x0, 4194f0 <nftw@plt+0x16970>
  4193c4:	adrp	x20, 4a5000 <__environ@@GLIBC_2.17+0xa68>
  4193c8:	add	x20, x20, #0x920
  4193cc:	ldr	x19, [x20, #8]
  4193d0:	str	x23, [sp, #48]
  4193d4:	cbz	x19, 41950c <nftw@plt+0x1698c>
  4193d8:	add	x23, x19, #0x580
  4193dc:	mov	x20, #0x0                   	// #0
  4193e0:	ldr	x0, [x19, #8]
  4193e4:	cbz	x0, 419404 <nftw@plt+0x16884>
  4193e8:	mov	x1, x21
  4193ec:	bl	402890 <strcmp@plt>
  4193f0:	cbnz	w0, 419404 <nftw@plt+0x16884>
  4193f4:	ldr	w0, [x19]
  4193f8:	mov	x20, x19
  4193fc:	add	w0, w0, #0x1
  419400:	str	w0, [x19]
  419404:	add	x19, x19, #0x58
  419408:	cmp	x19, x23
  41940c:	b.ne	4193e0 <nftw@plt+0x16860>  // b.any
  419410:	cbz	x20, 4194ec <nftw@plt+0x1696c>
  419414:	ldr	w0, [x20]
  419418:	ldr	x23, [sp, #48]
  41941c:	add	w0, w0, #0x1
  419420:	str	w0, [x20]
  419424:	ldr	x0, [x20, #56]
  419428:	sxtw	x19, w22
  41942c:	cmp	x0, w22, sxtw
  419430:	b.cs	419488 <nftw@plt+0x16908>  // b.hs, b.nlast
  419434:	sub	x19, x19, #0x1
  419438:	b	419454 <nftw@plt+0x168d4>
  41943c:	add	x1, sp, #0x50
  419440:	mov	x0, x20
  419444:	bl	418128 <nftw@plt+0x155a8>
  419448:	tst	w0, #0xff
  41944c:	b.eq	419500 <nftw@plt+0x16980>  // b.none
  419450:	ldr	x0, [x20, #56]
  419454:	add	x2, sp, #0x58
  419458:	cmp	x19, x0
  41945c:	b.hi	41943c <nftw@plt+0x168bc>  // b.pmore
  419460:	mov	x0, x20
  419464:	add	x1, sp, #0x48
  419468:	bl	418128 <nftw@plt+0x155a8>
  41946c:	tst	w0, #0xff
  419470:	b.eq	419500 <nftw@plt+0x16980>  // b.none
  419474:	ldp	x19, x20, [sp, #16]
  419478:	ldp	x21, x22, [sp, #32]
  41947c:	ldr	x0, [sp, #72]
  419480:	ldr	x1, [sp, #88]
  419484:	b	4193a8 <nftw@plt+0x16828>
  419488:	ldr	x1, [x20, #80]
  41948c:	cbz	x1, 4194e0 <nftw@plt+0x16960>
  419490:	ldr	w3, [x1, #4]
  419494:	cbz	w3, 4194e0 <nftw@plt+0x16960>
  419498:	ldr	x2, [x20, #64]
  41949c:	cmp	x2, #0x64
  4194a0:	b.hi	419724 <nftw@plt+0x16ba4>  // b.pmore
  4194a4:	cmp	x19, x2
  4194a8:	b.hi	419784 <nftw@plt+0x16c04>  // b.pmore
  4194ac:	sub	w2, w22, #0x1
  4194b0:	mov	w0, #0x18                  	// #24
  4194b4:	umaddl	x1, w2, w0, x1
  4194b8:	add	x2, x1, #0x8
  4194bc:	ldr	x0, [x2]
  4194c0:	cmp	x19, x0
  4194c4:	b.cc	4197b4 <nftw@plt+0x16c34>  // b.lo, b.ul, b.last
  4194c8:	cmp	x19, x0
  4194cc:	ldr	x3, [x2, #8]
  4194d0:	b.eq	419798 <nftw@plt+0x16c18>  // b.none
  4194d4:	sub	x0, x0, #0x1
  4194d8:	stp	x3, x0, [x20, #48]
  4194dc:	b	419434 <nftw@plt+0x168b4>
  4194e0:	mov	x0, #0x0                   	// #0
  4194e4:	stp	xzr, xzr, [x20, #48]
  4194e8:	b	419434 <nftw@plt+0x168b4>
  4194ec:	ldr	x23, [sp, #48]
  4194f0:	mov	x0, x21
  4194f4:	bl	4186a8 <nftw@plt+0x15b28>
  4194f8:	mov	x20, x0
  4194fc:	cbnz	x0, 419424 <nftw@plt+0x168a4>
  419500:	ldp	x19, x20, [sp, #16]
  419504:	ldp	x21, x22, [sp, #32]
  419508:	b	4193a0 <nftw@plt+0x16820>
  41950c:	mov	x0, #0x588                 	// #1416
  419510:	bl	461da8 <_obstack_memory_used@@Base+0x960>
  419514:	mov	x19, x0
  419518:	mov	x3, #0x10                  	// #16
  41951c:	movi	v0.4s, #0x0
  419520:	mov	w1, #0x1                   	// #1
  419524:	add	x2, x0, #0x200
  419528:	add	x17, x0, #0x600
  41952c:	str	x3, [x19], #8
  419530:	add	x3, x0, #0x400
  419534:	str	wzr, [x0, #8]
  419538:	str	q0, [x0, #16]
  41953c:	str	xzr, [x19, #24]
  419540:	stur	q0, [x0, #40]
  419544:	stur	q0, [x0, #56]
  419548:	str	xzr, [x19, #64]
  41954c:	strb	w1, [x19, #72]
  419550:	str	xzr, [x0, #88]
  419554:	str	wzr, [x0, #96]
  419558:	str	xzr, [x0, #120]
  41955c:	str	xzr, [x0, #160]
  419560:	strb	w1, [x0, #168]
  419564:	str	xzr, [x0, #176]
  419568:	str	wzr, [x0, #184]
  41956c:	str	xzr, [x0, #208]
  419570:	str	xzr, [x0, #248]
  419574:	strb	w1, [x0, #256]
  419578:	str	xzr, [x0, #264]
  41957c:	str	wzr, [x0, #272]
  419580:	stur	q0, [x0, #104]
  419584:	stp	q0, q0, [x0, #128]
  419588:	str	q0, [x0, #192]
  41958c:	stur	q0, [x0, #216]
  419590:	stur	q0, [x0, #232]
  419594:	stur	q0, [x2, #-232]
  419598:	str	xzr, [x0, #296]
  41959c:	stp	q0, q0, [x0, #304]
  4195a0:	str	xzr, [x0, #336]
  4195a4:	strb	w1, [x0, #344]
  4195a8:	str	xzr, [x0, #352]
  4195ac:	str	wzr, [x0, #360]
  4195b0:	str	xzr, [x0, #384]
  4195b4:	str	q0, [x0, #368]
  4195b8:	stur	q0, [x2, #-120]
  4195bc:	stur	q0, [x2, #-104]
  4195c0:	str	xzr, [x0, #424]
  4195c4:	strb	w1, [x0, #432]
  4195c8:	str	xzr, [x0, #440]
  4195cc:	str	wzr, [x0, #448]
  4195d0:	stur	q0, [x2, #-56]
  4195d4:	str	xzr, [x0, #472]
  4195d8:	str	xzr, [x0, #512]
  4195dc:	strb	w1, [x0, #520]
  4195e0:	str	xzr, [x0, #528]
  4195e4:	str	wzr, [x0, #536]
  4195e8:	str	xzr, [x0, #560]
  4195ec:	stp	q0, q0, [x0, #480]
  4195f0:	str	q0, [x0, #544]
  4195f4:	stur	q0, [x2, #56]
  4195f8:	stur	q0, [x2, #72]
  4195fc:	str	xzr, [x0, #600]
  419600:	strb	w1, [x0, #608]
  419604:	str	xzr, [x0, #616]
  419608:	str	wzr, [x0, #624]
  41960c:	stur	q0, [x2, #120]
  419610:	str	xzr, [x0, #648]
  419614:	stp	q0, q0, [x0, #656]
  419618:	str	xzr, [x0, #688]
  41961c:	strb	w1, [x0, #696]
  419620:	str	xzr, [x0, #704]
  419624:	str	wzr, [x0, #712]
  419628:	str	xzr, [x0, #736]
  41962c:	str	q0, [x0, #720]
  419630:	stur	q0, [x2, #232]
  419634:	stur	q0, [x2, #248]
  419638:	str	xzr, [x0, #776]
  41963c:	strb	w1, [x0, #784]
  419640:	str	xzr, [x0, #792]
  419644:	str	wzr, [x0, #800]
  419648:	stur	q0, [x3, #-216]
  41964c:	str	xzr, [x0, #824]
  419650:	str	xzr, [x0, #864]
  419654:	strb	w1, [x0, #872]
  419658:	str	xzr, [x0, #880]
  41965c:	str	wzr, [x0, #888]
  419660:	str	xzr, [x0, #912]
  419664:	stp	q0, q0, [x0, #832]
  419668:	str	q0, [x0, #896]
  41966c:	stur	q0, [x3, #-104]
  419670:	stur	q0, [x3, #-88]
  419674:	str	xzr, [x0, #952]
  419678:	strb	w1, [x0, #960]
  41967c:	str	xzr, [x0, #968]
  419680:	str	wzr, [x0, #976]
  419684:	stur	q0, [x3, #-40]
  419688:	str	xzr, [x0, #1000]
  41968c:	str	xzr, [x0, #1040]
  419690:	strb	w1, [x0, #1048]
  419694:	str	xzr, [x0, #1056]
  419698:	str	wzr, [x0, #1064]
  41969c:	stp	q0, q0, [x0, #1008]
  4196a0:	str	q0, [x0, #1072]
  4196a4:	str	xzr, [x0, #1088]
  4196a8:	str	x19, [x20, #8]
  4196ac:	stur	q0, [x3, #72]
  4196b0:	stur	q0, [x3, #88]
  4196b4:	str	xzr, [x0, #1128]
  4196b8:	strb	w1, [x0, #1136]
  4196bc:	str	xzr, [x0, #1144]
  4196c0:	str	wzr, [x0, #1152]
  4196c4:	stur	q0, [x3, #136]
  4196c8:	str	xzr, [x0, #1176]
  4196cc:	str	xzr, [x0, #1216]
  4196d0:	strb	w1, [x0, #1224]
  4196d4:	str	xzr, [x0, #1232]
  4196d8:	str	wzr, [x0, #1240]
  4196dc:	str	xzr, [x0, #1264]
  4196e0:	str	q0, [x0, #1184]
  4196e4:	str	q0, [x0, #1200]
  4196e8:	str	q0, [x0, #1248]
  4196ec:	stur	q0, [x3, #248]
  4196f0:	stur	q0, [x17, #-248]
  4196f4:	str	xzr, [x0, #1304]
  4196f8:	strb	w1, [x0, #1312]
  4196fc:	str	xzr, [x0, #1320]
  419700:	str	wzr, [x0, #1328]
  419704:	stur	q0, [x17, #-200]
  419708:	str	xzr, [x0, #1352]
  41970c:	str	q0, [x0, #1360]
  419710:	str	q0, [x0, #1376]
  419714:	str	xzr, [x0, #1392]
  419718:	strb	w1, [x0, #1400]
  41971c:	str	xzr, [x0, #1408]
  419720:	b	4193d8 <nftw@plt+0x16858>
  419724:	cmp	x19, x2
  419728:	b.hi	41977c <nftw@plt+0x16bfc>  // b.pmore
  41972c:	mov	w0, #0x64                  	// #100
  419730:	smull	x0, w22, w0
  419734:	udiv	x0, x0, x2
  419738:	cmp	x0, w3, uxtw
  41973c:	b.cs	419770 <nftw@plt+0x16bf0>  // b.hs, b.nlast
  419740:	ubfiz	x2, x0, #1, #32
  419744:	add	x3, x0, x0, lsl #1
  419748:	add	x0, x2, w0, uxtw
  41974c:	lsl	x3, x3, #3
  419750:	add	x0, x1, x0, lsl #3
  419754:	add	x3, x3, #0x8
  419758:	add	x2, x1, x3
  41975c:	ldr	x0, [x0, #8]
  419760:	cmp	x19, x0
  419764:	b.cc	4197d0 <nftw@plt+0x16c50>  // b.lo, b.ul, b.last
  419768:	ldr	x0, [x1, x3]
  41976c:	b	4194c8 <nftw@plt+0x16948>
  419770:	mov	x0, #0x0                   	// #0
  419774:	stp	xzr, xzr, [x20, #48]
  419778:	b	419434 <nftw@plt+0x168b4>
  41977c:	sub	w0, w3, #0x1
  419780:	b	419738 <nftw@plt+0x16bb8>
  419784:	sub	w2, w2, #0x1
  419788:	mov	w0, #0x18                  	// #24
  41978c:	umaddl	x1, w2, w0, x1
  419790:	add	x2, x1, #0x8
  419794:	b	4194bc <nftw@plt+0x1693c>
  419798:	ldr	x1, [x2, #16]
  41979c:	ldr	x0, [x20, #24]
  4197a0:	sub	x1, x1, x3
  4197a4:	ldp	x19, x20, [sp, #16]
  4197a8:	add	x0, x0, x3
  4197ac:	ldp	x21, x22, [sp, #32]
  4197b0:	b	4193a8 <nftw@plt+0x16828>
  4197b4:	adrp	x2, 474000 <_obstack_memory_used@@Base+0x12bb8>
  4197b8:	adrp	x0, 474000 <_obstack_memory_used@@Base+0x12bb8>
  4197bc:	add	x2, x2, #0x260
  4197c0:	add	x0, x0, #0x1f8
  4197c4:	mov	w1, #0x2b2                 	// #690
  4197c8:	str	x23, [sp, #48]
  4197cc:	bl	402bf0 <nftw@plt+0x70>
  4197d0:	adrp	x2, 474000 <_obstack_memory_used@@Base+0x12bb8>
  4197d4:	adrp	x0, 474000 <_obstack_memory_used@@Base+0x12bb8>
  4197d8:	add	x2, x2, #0x260
  4197dc:	add	x0, x0, #0x1f8
  4197e0:	mov	w1, #0x2c1                 	// #705
  4197e4:	str	x23, [sp, #48]
  4197e8:	bl	402bf0 <nftw@plt+0x70>
  4197ec:	nop
  4197f0:	stp	x29, x30, [sp, #-48]!
  4197f4:	mov	x29, sp
  4197f8:	stp	x19, x20, [sp, #16]
  4197fc:	stp	x21, x22, [sp, #32]
  419800:	mov	x21, x0
  419804:	cbz	x0, 419874 <nftw@plt+0x16cf4>
  419808:	adrp	x20, 4a5000 <__environ@@GLIBC_2.17+0xa68>
  41980c:	add	x20, x20, #0x920
  419810:	ldr	x19, [x20, #8]
  419814:	cbz	x19, 419898 <nftw@plt+0x16d18>
  419818:	add	x22, x19, #0x580
  41981c:	mov	x20, #0x0                   	// #0
  419820:	ldr	x0, [x19, #8]
  419824:	mov	x1, x21
  419828:	cbz	x0, 419844 <nftw@plt+0x16cc4>
  41982c:	bl	402890 <strcmp@plt>
  419830:	cbnz	w0, 419844 <nftw@plt+0x16cc4>
  419834:	ldr	w0, [x19]
  419838:	mov	x20, x19
  41983c:	add	w0, w0, #0x1
  419840:	str	w0, [x19]
  419844:	add	x19, x19, #0x58
  419848:	cmp	x22, x19
  41984c:	b.ne	419820 <nftw@plt+0x16ca0>  // b.any
  419850:	cbz	x20, 419874 <nftw@plt+0x16cf4>
  419854:	ldr	w0, [x20]
  419858:	add	w0, w0, #0x1
  41985c:	str	w0, [x20]
  419860:	ldrb	w0, [x20, #72]
  419864:	ldp	x19, x20, [sp, #16]
  419868:	ldp	x21, x22, [sp, #32]
  41986c:	ldp	x29, x30, [sp], #48
  419870:	ret
  419874:	mov	x0, x21
  419878:	bl	4186a8 <nftw@plt+0x15b28>
  41987c:	mov	x20, x0
  419880:	mov	w0, #0x0                   	// #0
  419884:	cbnz	x20, 419860 <nftw@plt+0x16ce0>
  419888:	ldp	x19, x20, [sp, #16]
  41988c:	ldp	x21, x22, [sp, #32]
  419890:	ldp	x29, x30, [sp], #48
  419894:	ret
  419898:	mov	x0, #0x588                 	// #1416
  41989c:	bl	461da8 <_obstack_memory_used@@Base+0x960>
  4198a0:	mov	x1, x0
  4198a4:	mov	x3, #0x10                  	// #16
  4198a8:	mov	x19, x1
  4198ac:	mov	w0, #0x1                   	// #1
  4198b0:	movi	v0.4s, #0x0
  4198b4:	add	x2, x1, #0x200
  4198b8:	add	x18, x1, #0x600
  4198bc:	str	x3, [x19], #8
  4198c0:	add	x3, x1, #0x400
  4198c4:	str	wzr, [x1, #8]
  4198c8:	str	q0, [x1, #16]
  4198cc:	str	xzr, [x19, #24]
  4198d0:	stur	q0, [x1, #40]
  4198d4:	stur	q0, [x1, #56]
  4198d8:	str	xzr, [x19, #64]
  4198dc:	strb	w0, [x19, #72]
  4198e0:	str	xzr, [x1, #88]
  4198e4:	str	wzr, [x1, #96]
  4198e8:	str	xzr, [x1, #120]
  4198ec:	str	xzr, [x1, #160]
  4198f0:	strb	w0, [x1, #168]
  4198f4:	str	xzr, [x1, #176]
  4198f8:	str	wzr, [x1, #184]
  4198fc:	str	xzr, [x1, #208]
  419900:	str	xzr, [x1, #248]
  419904:	strb	w0, [x1, #256]
  419908:	str	xzr, [x1, #264]
  41990c:	str	wzr, [x1, #272]
  419910:	stur	q0, [x1, #104]
  419914:	stp	q0, q0, [x1, #128]
  419918:	str	q0, [x1, #192]
  41991c:	stur	q0, [x1, #216]
  419920:	stur	q0, [x1, #232]
  419924:	stur	q0, [x2, #-232]
  419928:	str	xzr, [x1, #296]
  41992c:	stp	q0, q0, [x1, #304]
  419930:	str	xzr, [x1, #336]
  419934:	strb	w0, [x1, #344]
  419938:	str	xzr, [x1, #352]
  41993c:	str	wzr, [x1, #360]
  419940:	str	xzr, [x1, #384]
  419944:	str	q0, [x1, #368]
  419948:	stur	q0, [x2, #-120]
  41994c:	stur	q0, [x2, #-104]
  419950:	str	xzr, [x1, #424]
  419954:	strb	w0, [x1, #432]
  419958:	str	xzr, [x1, #440]
  41995c:	str	wzr, [x1, #448]
  419960:	stur	q0, [x2, #-56]
  419964:	str	xzr, [x1, #472]
  419968:	str	xzr, [x1, #512]
  41996c:	strb	w0, [x1, #520]
  419970:	str	xzr, [x1, #528]
  419974:	str	wzr, [x1, #536]
  419978:	str	xzr, [x1, #560]
  41997c:	stp	q0, q0, [x1, #480]
  419980:	str	q0, [x1, #544]
  419984:	stur	q0, [x2, #56]
  419988:	stur	q0, [x2, #72]
  41998c:	str	xzr, [x1, #600]
  419990:	strb	w0, [x1, #608]
  419994:	str	xzr, [x1, #616]
  419998:	str	wzr, [x1, #624]
  41999c:	stur	q0, [x2, #120]
  4199a0:	str	xzr, [x1, #648]
  4199a4:	stp	q0, q0, [x1, #656]
  4199a8:	str	xzr, [x1, #688]
  4199ac:	strb	w0, [x1, #696]
  4199b0:	str	xzr, [x1, #704]
  4199b4:	str	wzr, [x1, #712]
  4199b8:	str	xzr, [x1, #736]
  4199bc:	str	q0, [x1, #720]
  4199c0:	stur	q0, [x2, #232]
  4199c4:	stur	q0, [x2, #248]
  4199c8:	str	xzr, [x1, #776]
  4199cc:	strb	w0, [x1, #784]
  4199d0:	str	xzr, [x1, #792]
  4199d4:	str	wzr, [x1, #800]
  4199d8:	stur	q0, [x3, #-216]
  4199dc:	str	xzr, [x1, #824]
  4199e0:	str	xzr, [x1, #864]
  4199e4:	strb	w0, [x1, #872]
  4199e8:	str	xzr, [x1, #880]
  4199ec:	str	wzr, [x1, #888]
  4199f0:	str	xzr, [x1, #912]
  4199f4:	stp	q0, q0, [x1, #832]
  4199f8:	str	q0, [x1, #896]
  4199fc:	stur	q0, [x3, #-104]
  419a00:	stur	q0, [x3, #-88]
  419a04:	str	xzr, [x1, #952]
  419a08:	strb	w0, [x1, #960]
  419a0c:	str	xzr, [x1, #968]
  419a10:	str	wzr, [x1, #976]
  419a14:	stur	q0, [x3, #-40]
  419a18:	str	xzr, [x1, #1000]
  419a1c:	str	xzr, [x1, #1040]
  419a20:	strb	w0, [x1, #1048]
  419a24:	str	xzr, [x1, #1056]
  419a28:	str	wzr, [x1, #1064]
  419a2c:	stp	q0, q0, [x1, #1008]
  419a30:	str	q0, [x1, #1072]
  419a34:	str	xzr, [x1, #1088]
  419a38:	str	x19, [x20, #8]
  419a3c:	stur	q0, [x3, #72]
  419a40:	stur	q0, [x3, #88]
  419a44:	str	xzr, [x1, #1128]
  419a48:	strb	w0, [x1, #1136]
  419a4c:	str	xzr, [x1, #1144]
  419a50:	str	wzr, [x1, #1152]
  419a54:	stur	q0, [x3, #136]
  419a58:	str	xzr, [x1, #1176]
  419a5c:	str	xzr, [x1, #1216]
  419a60:	strb	w0, [x1, #1224]
  419a64:	str	xzr, [x1, #1232]
  419a68:	str	wzr, [x1, #1240]
  419a6c:	str	xzr, [x1, #1264]
  419a70:	str	q0, [x1, #1184]
  419a74:	str	q0, [x1, #1200]
  419a78:	str	q0, [x1, #1248]
  419a7c:	stur	q0, [x3, #248]
  419a80:	stur	q0, [x18, #-248]
  419a84:	str	xzr, [x1, #1304]
  419a88:	strb	w0, [x1, #1312]
  419a8c:	str	xzr, [x1, #1320]
  419a90:	str	wzr, [x1, #1328]
  419a94:	stur	q0, [x18, #-200]
  419a98:	str	xzr, [x1, #1352]
  419a9c:	str	q0, [x1, #1360]
  419aa0:	str	q0, [x1, #1376]
  419aa4:	str	xzr, [x1, #1392]
  419aa8:	strb	w0, [x1, #1400]
  419aac:	str	xzr, [x1, #1408]
  419ab0:	b	419818 <nftw@plt+0x16c98>
  419ab4:	nop
  419ab8:	stp	x29, x30, [sp, #-32]!
  419abc:	adrp	x2, 4a5000 <__environ@@GLIBC_2.17+0xa68>
  419ac0:	mov	w1, w0
  419ac4:	mov	x29, sp
  419ac8:	ldr	x0, [x2, #2336]
  419acc:	add	x3, sp, #0x18
  419ad0:	mov	w2, #0x1                   	// #1
  419ad4:	str	xzr, [sp, #24]
  419ad8:	bl	436ea8 <nftw@plt+0x34328>
  419adc:	cmp	w0, #0x1
  419ae0:	cset	w0, eq  // eq = none
  419ae4:	ldp	x29, x30, [sp], #32
  419ae8:	ret
  419aec:	nop
  419af0:	stp	x29, x30, [sp, #-96]!
  419af4:	mov	x29, sp
  419af8:	stp	x19, x20, [sp, #16]
  419afc:	mov	x20, x8
  419b00:	mov	w19, w0
  419b04:	stp	x21, x22, [sp, #32]
  419b08:	mov	x21, #0x0                   	// #0
  419b0c:	tbnz	w0, #31, 419bac <nftw@plt+0x1702c>
  419b10:	stp	xzr, xzr, [sp, #64]
  419b14:	cmp	w19, #0x1
  419b18:	stp	xzr, xzr, [sp, #80]
  419b1c:	b.ls	419b7c <nftw@plt+0x16ffc>  // b.plast
  419b20:	adrp	x22, 4a5000 <__environ@@GLIBC_2.17+0xa68>
  419b24:	mov	w1, w19
  419b28:	add	x3, sp, #0x38
  419b2c:	mov	w2, #0x0                   	// #0
  419b30:	ldr	x0, [x22, #2336]
  419b34:	bl	436ea8 <nftw@plt+0x34328>
  419b38:	mov	w19, w0
  419b3c:	ldr	x0, [x22, #2336]
  419b40:	add	x8, sp, #0x40
  419b44:	ldr	x1, [sp, #56]
  419b48:	mov	w2, w19
  419b4c:	bl	4373c0 <nftw@plt+0x34840>
  419b50:	str	x21, [sp, #80]
  419b54:	cmp	w19, #0x1
  419b58:	b.ls	419b80 <nftw@plt+0x17000>  // b.plast
  419b5c:	ldp	x0, x1, [sp, #64]
  419b60:	stp	x0, x1, [x20]
  419b64:	ldp	x0, x1, [sp, #80]
  419b68:	stp	x0, x1, [x20, #16]
  419b6c:	ldp	x19, x20, [sp, #16]
  419b70:	ldp	x21, x22, [sp, #32]
  419b74:	ldp	x29, x30, [sp], #96
  419b78:	ret
  419b7c:	str	x21, [sp, #80]
  419b80:	mov	x0, #0x0                   	// #0
  419b84:	cbnz	w19, 419bd4 <nftw@plt+0x17054>
  419b88:	str	x0, [sp, #64]
  419b8c:	ldp	x0, x1, [sp, #64]
  419b90:	stp	x0, x1, [x20]
  419b94:	ldp	x0, x1, [sp, #80]
  419b98:	stp	x0, x1, [x20, #16]
  419b9c:	ldp	x19, x20, [sp, #16]
  419ba0:	ldp	x21, x22, [sp, #32]
  419ba4:	ldp	x29, x30, [sp], #96
  419ba8:	ret
  419bac:	adrp	x22, 4a5000 <__environ@@GLIBC_2.17+0xa68>
  419bb0:	mov	w1, w0
  419bb4:	ldr	x0, [x22, #2336]
  419bb8:	bl	4353b8 <nftw@plt+0x32838>
  419bbc:	mov	x21, x0
  419bc0:	ldr	x0, [x22, #2336]
  419bc4:	mov	w1, w19
  419bc8:	bl	4353d0 <nftw@plt+0x32850>
  419bcc:	mov	w19, w0
  419bd0:	b	419b10 <nftw@plt+0x16f90>
  419bd4:	adrp	x0, 473000 <_obstack_memory_used@@Base+0x11bb8>
  419bd8:	add	x0, x0, #0x510
  419bdc:	bl	402b10 <gettext@plt>
  419be0:	str	x0, [sp, #64]
  419be4:	b	419b8c <nftw@plt+0x1700c>
  419be8:	stp	x29, x30, [sp, #-112]!
  419bec:	mov	x29, sp
  419bf0:	stp	x19, x20, [sp, #16]
  419bf4:	mov	w19, w0
  419bf8:	mov	w20, w1
  419bfc:	stp	x21, x22, [sp, #32]
  419c00:	mov	x21, x8
  419c04:	str	x23, [sp, #48]
  419c08:	mov	x23, #0x0                   	// #0
  419c0c:	tbnz	w0, #31, 419cf4 <nftw@plt+0x17174>
  419c10:	stp	xzr, xzr, [sp, #80]
  419c14:	cmp	w19, #0x1
  419c18:	stp	xzr, xzr, [sp, #96]
  419c1c:	b.ls	419ce0 <nftw@plt+0x17160>  // b.plast
  419c20:	adrp	x22, 4a5000 <__environ@@GLIBC_2.17+0xa68>
  419c24:	mov	w1, w19
  419c28:	mov	x2, #0x0                   	// #0
  419c2c:	ldr	x0, [x22, #2336]
  419c30:	bl	4371e8 <nftw@plt+0x34668>
  419c34:	mov	w1, w0
  419c38:	ldr	x0, [x22, #2336]
  419c3c:	add	x3, sp, #0x48
  419c40:	mov	w2, #0x1                   	// #1
  419c44:	bl	436ea8 <nftw@plt+0x34328>
  419c48:	mov	w19, w0
  419c4c:	cmp	w20, #0x1
  419c50:	b.eq	419d1c <nftw@plt+0x1719c>  // b.none
  419c54:	cmp	w20, #0x2
  419c58:	b.ne	419c98 <nftw@plt+0x17118>  // b.any
  419c5c:	ldr	x0, [x22, #2336]
  419c60:	mov	w1, w19
  419c64:	bl	4360f0 <nftw@plt+0x33570>
  419c68:	lsr	x0, x0, #32
  419c6c:	cmp	w19, w0
  419c70:	b.eq	419c9c <nftw@plt+0x1711c>  // b.none
  419c74:	mov	x8, x21
  419c78:	mov	w2, w20
  419c7c:	mov	w1, #0x0                   	// #0
  419c80:	bl	417f80 <nftw@plt+0x15400>
  419c84:	ldp	x19, x20, [sp, #16]
  419c88:	ldp	x21, x22, [sp, #32]
  419c8c:	ldr	x23, [sp, #48]
  419c90:	ldp	x29, x30, [sp], #112
  419c94:	ret
  419c98:	cbnz	w20, 419d48 <nftw@plt+0x171c8>
  419c9c:	ldr	x0, [x22, #2336]
  419ca0:	add	x8, sp, #0x50
  419ca4:	ldr	x1, [sp, #72]
  419ca8:	mov	w2, w19
  419cac:	bl	4373c0 <nftw@plt+0x34840>
  419cb0:	str	x23, [sp, #96]
  419cb4:	cmp	w19, #0x1
  419cb8:	b.ls	419ce4 <nftw@plt+0x17164>  // b.plast
  419cbc:	ldp	x0, x1, [sp, #80]
  419cc0:	stp	x0, x1, [x21]
  419cc4:	ldp	x0, x1, [sp, #96]
  419cc8:	stp	x0, x1, [x21, #16]
  419ccc:	ldp	x19, x20, [sp, #16]
  419cd0:	ldp	x21, x22, [sp, #32]
  419cd4:	ldr	x23, [sp, #48]
  419cd8:	ldp	x29, x30, [sp], #112
  419cdc:	ret
  419ce0:	str	x23, [sp, #96]
  419ce4:	mov	x0, #0x0                   	// #0
  419ce8:	cbnz	w19, 419d34 <nftw@plt+0x171b4>
  419cec:	str	x0, [sp, #80]
  419cf0:	b	419cbc <nftw@plt+0x1713c>
  419cf4:	adrp	x22, 4a5000 <__environ@@GLIBC_2.17+0xa68>
  419cf8:	mov	w1, w0
  419cfc:	ldr	x0, [x22, #2336]
  419d00:	bl	4353b8 <nftw@plt+0x32838>
  419d04:	mov	x23, x0
  419d08:	ldr	x0, [x22, #2336]
  419d0c:	mov	w1, w19
  419d10:	bl	4353d0 <nftw@plt+0x32850>
  419d14:	mov	w19, w0
  419d18:	b	419c10 <nftw@plt+0x17090>
  419d1c:	ldr	x0, [x22, #2336]
  419d20:	mov	w1, w19
  419d24:	bl	4360f0 <nftw@plt+0x33570>
  419d28:	cmp	w19, w0
  419d2c:	b.eq	419c9c <nftw@plt+0x1711c>  // b.none
  419d30:	b	419c74 <nftw@plt+0x170f4>
  419d34:	adrp	x0, 473000 <_obstack_memory_used@@Base+0x11bb8>
  419d38:	add	x0, x0, #0x510
  419d3c:	bl	402b10 <gettext@plt>
  419d40:	str	x0, [sp, #80]
  419d44:	b	419cbc <nftw@plt+0x1713c>
  419d48:	adrp	x2, 474000 <_obstack_memory_used@@Base+0x12bb8>
  419d4c:	adrp	x0, 474000 <_obstack_memory_used@@Base+0x12bb8>
  419d50:	add	x2, x2, #0x1e0
  419d54:	add	x0, x0, #0x1f8
  419d58:	mov	w1, #0xc7                  	// #199
  419d5c:	bl	402bf0 <nftw@plt+0x70>
  419d60:	stp	x29, x30, [sp, #-112]!
  419d64:	mov	x29, sp
  419d68:	stp	x19, x20, [sp, #16]
  419d6c:	mov	w19, w0
  419d70:	mov	w20, w1
  419d74:	stp	x21, x22, [sp, #32]
  419d78:	mov	x21, x8
  419d7c:	str	x23, [sp, #48]
  419d80:	mov	x23, #0x0                   	// #0
  419d84:	tbnz	w0, #31, 419e6c <nftw@plt+0x172ec>
  419d88:	stp	xzr, xzr, [sp, #80]
  419d8c:	cmp	w19, #0x1
  419d90:	stp	xzr, xzr, [sp, #96]
  419d94:	b.ls	419e58 <nftw@plt+0x172d8>  // b.plast
  419d98:	adrp	x22, 4a5000 <__environ@@GLIBC_2.17+0xa68>
  419d9c:	mov	w1, w19
  419da0:	mov	x2, #0x0                   	// #0
  419da4:	ldr	x0, [x22, #2336]
  419da8:	bl	4371e8 <nftw@plt+0x34668>
  419dac:	mov	w1, w0
  419db0:	ldr	x0, [x22, #2336]
  419db4:	add	x3, sp, #0x48
  419db8:	mov	w2, #0x1                   	// #1
  419dbc:	bl	436ea8 <nftw@plt+0x34328>
  419dc0:	mov	w19, w0
  419dc4:	cmp	w20, #0x1
  419dc8:	b.eq	419e94 <nftw@plt+0x17314>  // b.none
  419dcc:	cmp	w20, #0x2
  419dd0:	b.ne	419e10 <nftw@plt+0x17290>  // b.any
  419dd4:	ldr	x0, [x22, #2336]
  419dd8:	mov	w1, w19
  419ddc:	bl	4360f0 <nftw@plt+0x33570>
  419de0:	lsr	x0, x0, #32
  419de4:	cmp	w19, w0
  419de8:	b.eq	419e14 <nftw@plt+0x17294>  // b.none
  419dec:	mov	x8, x21
  419df0:	mov	w2, w20
  419df4:	mov	w1, #0x0                   	// #0
  419df8:	bl	417f80 <nftw@plt+0x15400>
  419dfc:	ldp	x19, x20, [sp, #16]
  419e00:	ldp	x21, x22, [sp, #32]
  419e04:	ldr	x23, [sp, #48]
  419e08:	ldp	x29, x30, [sp], #112
  419e0c:	ret
  419e10:	cbnz	w20, 419ec0 <nftw@plt+0x17340>
  419e14:	ldr	x0, [x22, #2336]
  419e18:	add	x8, sp, #0x50
  419e1c:	ldr	x1, [sp, #72]
  419e20:	mov	w2, w19
  419e24:	bl	4373c0 <nftw@plt+0x34840>
  419e28:	str	x23, [sp, #96]
  419e2c:	cmp	w19, #0x1
  419e30:	b.ls	419e5c <nftw@plt+0x172dc>  // b.plast
  419e34:	ldp	x0, x1, [sp, #80]
  419e38:	stp	x0, x1, [x21]
  419e3c:	ldp	x0, x1, [sp, #96]
  419e40:	stp	x0, x1, [x21, #16]
  419e44:	ldp	x19, x20, [sp, #16]
  419e48:	ldp	x21, x22, [sp, #32]
  419e4c:	ldr	x23, [sp, #48]
  419e50:	ldp	x29, x30, [sp], #112
  419e54:	ret
  419e58:	str	x23, [sp, #96]
  419e5c:	mov	x0, #0x0                   	// #0
  419e60:	cbnz	w19, 419eac <nftw@plt+0x1732c>
  419e64:	str	x0, [sp, #80]
  419e68:	b	419e34 <nftw@plt+0x172b4>
  419e6c:	adrp	x22, 4a5000 <__environ@@GLIBC_2.17+0xa68>
  419e70:	mov	w1, w0
  419e74:	ldr	x0, [x22, #2336]
  419e78:	bl	4353b8 <nftw@plt+0x32838>
  419e7c:	mov	x23, x0
  419e80:	ldr	x0, [x22, #2336]
  419e84:	mov	w1, w19
  419e88:	bl	4353d0 <nftw@plt+0x32850>
  419e8c:	mov	w19, w0
  419e90:	b	419d88 <nftw@plt+0x17208>
  419e94:	ldr	x0, [x22, #2336]
  419e98:	mov	w1, w19
  419e9c:	bl	4360f0 <nftw@plt+0x33570>
  419ea0:	cmp	w19, w0
  419ea4:	b.eq	419e14 <nftw@plt+0x17294>  // b.none
  419ea8:	b	419dec <nftw@plt+0x1726c>
  419eac:	adrp	x0, 473000 <_obstack_memory_used@@Base+0x11bb8>
  419eb0:	add	x0, x0, #0x510
  419eb4:	bl	402b10 <gettext@plt>
  419eb8:	str	x0, [sp, #80]
  419ebc:	b	419e34 <nftw@plt+0x172b4>
  419ec0:	adrp	x2, 474000 <_obstack_memory_used@@Base+0x12bb8>
  419ec4:	adrp	x0, 474000 <_obstack_memory_used@@Base+0x12bb8>
  419ec8:	add	x2, x2, #0x1e0
  419ecc:	add	x0, x0, #0x1f8
  419ed0:	mov	w1, #0xc7                  	// #199
  419ed4:	bl	402bf0 <nftw@plt+0x70>
  419ed8:	stp	x29, x30, [sp, #-32]!
  419edc:	mov	x29, sp
  419ee0:	stp	x19, x20, [sp, #16]
  419ee4:	adrp	x20, 4a5000 <__environ@@GLIBC_2.17+0xa68>
  419ee8:	mov	w19, w0
  419eec:	ldr	x0, [x20, #2336]
  419ef0:	mov	w1, w19
  419ef4:	bl	436990 <nftw@plt+0x33e10>
  419ef8:	cbnz	w0, 419f0c <nftw@plt+0x1738c>
  419efc:	mov	w0, w19
  419f00:	ldp	x19, x20, [sp, #16]
  419f04:	ldp	x29, x30, [sp], #32
  419f08:	ret
  419f0c:	ldr	x0, [x20, #2336]
  419f10:	mov	w1, w19
  419f14:	ldp	x19, x20, [sp, #16]
  419f18:	mov	x3, #0x0                   	// #0
  419f1c:	ldp	x29, x30, [sp], #32
  419f20:	mov	w2, #0x0                   	// #0
  419f24:	b	436ea8 <nftw@plt+0x34328>
  419f28:	adrp	x2, 4a5000 <__environ@@GLIBC_2.17+0xa68>
  419f2c:	mov	w1, w0
  419f30:	mov	x3, #0x0                   	// #0
  419f34:	ldr	x0, [x2, #2336]
  419f38:	mov	w2, #0x0                   	// #0
  419f3c:	b	436ea8 <nftw@plt+0x34328>
  419f40:	stp	x29, x30, [sp, #-48]!
  419f44:	mov	w3, w0
  419f48:	mov	x29, sp
  419f4c:	stp	x19, x20, [sp, #16]
  419f50:	adrp	x19, 4a5000 <__environ@@GLIBC_2.17+0xa68>
  419f54:	mov	w20, w1
  419f58:	ldr	x0, [x19, #2336]
  419f5c:	mov	w1, w3
  419f60:	stp	x21, x22, [sp, #32]
  419f64:	mov	w22, w2
  419f68:	bl	4361a0 <nftw@plt+0x33620>
  419f6c:	mov	w21, w0
  419f70:	ldr	x0, [x19, #2336]
  419f74:	mov	w1, w20
  419f78:	bl	4360f0 <nftw@plt+0x33570>
  419f7c:	mov	x20, x0
  419f80:	ldr	x0, [x19, #2336]
  419f84:	mov	w1, w22
  419f88:	bl	4360f0 <nftw@plt+0x33570>
  419f8c:	mov	x2, x0
  419f90:	mov	w1, w21
  419f94:	mov	x3, #0x0                   	// #0
  419f98:	ldr	x0, [x19, #2336]
  419f9c:	bfxil	x2, x20, #0, #32
  419fa0:	ldp	x19, x20, [sp, #16]
  419fa4:	ldp	x21, x22, [sp, #32]
  419fa8:	ldp	x29, x30, [sp], #48
  419fac:	b	435ed0 <nftw@plt+0x33350>
  419fb0:	stp	x29, x30, [sp, #-32]!
  419fb4:	mov	x29, sp
  419fb8:	stp	x19, x20, [sp, #16]
  419fbc:	adrp	x20, 4a5000 <__environ@@GLIBC_2.17+0xa68>
  419fc0:	mov	x19, x1
  419fc4:	mov	w1, w0
  419fc8:	ldr	x0, [x20, #2336]
  419fcc:	bl	4361a0 <nftw@plt+0x33620>
  419fd0:	mov	w1, w0
  419fd4:	mov	x2, x19
  419fd8:	mov	x3, #0x0                   	// #0
  419fdc:	ldr	x0, [x20, #2336]
  419fe0:	ldp	x19, x20, [sp, #16]
  419fe4:	ldp	x29, x30, [sp], #32
  419fe8:	b	435ed0 <nftw@plt+0x33350>
  419fec:	nop
  419ff0:	stp	x29, x30, [sp, #-176]!
  419ff4:	mov	x29, sp
  419ff8:	str	x23, [sp, #48]
  419ffc:	adrp	x23, 4a5000 <__environ@@GLIBC_2.17+0xa68>
  41a000:	add	x1, sp, #0x48
  41a004:	stp	x19, x20, [sp, #16]
  41a008:	adrp	x19, 4a4000 <_obstack_memory_used@@Base+0x42bb8>
  41a00c:	ldr	x0, [x23, #2336]
  41a010:	stp	x21, x22, [sp, #32]
  41a014:	stp	xzr, xzr, [sp, #72]
  41a018:	stp	xzr, xzr, [sp, #88]
  41a01c:	stp	xzr, xzr, [sp, #104]
  41a020:	stp	xzr, xzr, [sp, #120]
  41a024:	stp	xzr, xzr, [sp, #136]
  41a028:	stp	xzr, xzr, [sp, #152]
  41a02c:	str	xzr, [sp, #168]
  41a030:	bl	4378a8 <nftw@plt+0x34d28>
  41a034:	ldp	x21, x20, [sp, #88]
  41a038:	adrp	x1, 474000 <_obstack_memory_used@@Base+0x12bb8>
  41a03c:	ldp	x3, x22, [sp, #128]
  41a040:	add	x1, x1, #0x270
  41a044:	ldr	x0, [x19, #1392]
  41a048:	ldr	x2, [sp, #104]
  41a04c:	add	x21, x21, x3
  41a050:	add	x20, x22, x20
  41a054:	ldr	x3, [sp, #144]
  41a058:	add	x20, x20, x3
  41a05c:	add	x22, x22, x3
  41a060:	add	x21, x21, x3
  41a064:	bl	402b30 <fprintf@plt>
  41a068:	ldr	x2, [sp, #104]
  41a06c:	cbnz	x2, 41a4e0 <nftw@plt+0x17960>
  41a070:	ldr	x3, [x19, #1392]
  41a074:	mov	x2, #0x37                  	// #55
  41a078:	mov	x1, #0x1                   	// #1
  41a07c:	adrp	x0, 474000 <_obstack_memory_used@@Base+0x12bb8>
  41a080:	add	x0, x0, #0x2e0
  41a084:	bl	402950 <fwrite@plt>
  41a088:	ldr	x2, [sp, #80]
  41a08c:	mov	x1, #0x27ff                	// #10239
  41a090:	ldr	x0, [x19, #1392]
  41a094:	cmp	x2, x1
  41a098:	mov	w3, #0x20                  	// #32
  41a09c:	b.le	41a0b4 <nftw@plt+0x17534>
  41a0a0:	mov	w1, #0x9fffff              	// #10485759
  41a0a4:	cmp	x2, x1
  41a0a8:	b.gt	41a4d4 <nftw@plt+0x17954>
  41a0ac:	asr	x2, x2, #10
  41a0b0:	mov	w3, #0x6b                  	// #107
  41a0b4:	adrp	x1, 474000 <_obstack_memory_used@@Base+0x12bb8>
  41a0b8:	add	x1, x1, #0x318
  41a0bc:	bl	402b30 <fprintf@plt>
  41a0c0:	ldr	x2, [sp, #96]
  41a0c4:	mov	x1, #0x27ff                	// #10239
  41a0c8:	ldr	x0, [x19, #1392]
  41a0cc:	cmp	x2, x1
  41a0d0:	mov	w3, #0x20                  	// #32
  41a0d4:	b.le	41a0ec <nftw@plt+0x1756c>
  41a0d8:	mov	w1, #0x9fffff              	// #10485759
  41a0dc:	cmp	x2, x1
  41a0e0:	b.gt	41a4c8 <nftw@plt+0x17948>
  41a0e4:	asr	x2, x2, #10
  41a0e8:	mov	w3, #0x6b                  	// #107
  41a0ec:	adrp	x1, 474000 <_obstack_memory_used@@Base+0x12bb8>
  41a0f0:	add	x1, x1, #0x348
  41a0f4:	bl	402b30 <fprintf@plt>
  41a0f8:	ldr	x2, [sp, #72]
  41a0fc:	mov	x1, #0x27ff                	// #10239
  41a100:	ldr	x0, [x19, #1392]
  41a104:	cmp	x2, x1
  41a108:	mov	w3, #0x20                  	// #32
  41a10c:	b.le	41a124 <nftw@plt+0x175a4>
  41a110:	mov	w1, #0x9fffff              	// #10485759
  41a114:	cmp	x2, x1
  41a118:	b.gt	41a4bc <nftw@plt+0x1793c>
  41a11c:	asr	x2, x2, #10
  41a120:	mov	w3, #0x6b                  	// #107
  41a124:	adrp	x1, 474000 <_obstack_memory_used@@Base+0x12bb8>
  41a128:	add	x1, x1, #0x378
  41a12c:	bl	402b30 <fprintf@plt>
  41a130:	ldr	x2, [sp, #88]
  41a134:	mov	x1, #0x27ff                	// #10239
  41a138:	ldr	x0, [x19, #1392]
  41a13c:	cmp	x2, x1
  41a140:	mov	w3, #0x20                  	// #32
  41a144:	b.le	41a15c <nftw@plt+0x175dc>
  41a148:	mov	w1, #0x9fffff              	// #10485759
  41a14c:	cmp	x2, x1
  41a150:	b.gt	41a4b0 <nftw@plt+0x17930>
  41a154:	asr	x2, x2, #10
  41a158:	mov	w3, #0x6b                  	// #107
  41a15c:	adrp	x1, 474000 <_obstack_memory_used@@Base+0x12bb8>
  41a160:	add	x1, x1, #0x3a8
  41a164:	bl	402b30 <fprintf@plt>
  41a168:	ldr	x2, [sp, #120]
  41a16c:	mov	x1, #0x27ff                	// #10239
  41a170:	ldr	x0, [x19, #1392]
  41a174:	cmp	x2, x1
  41a178:	mov	w3, #0x20                  	// #32
  41a17c:	b.le	41a194 <nftw@plt+0x17614>
  41a180:	mov	w1, #0x9fffff              	// #10485759
  41a184:	cmp	x2, x1
  41a188:	b.gt	41a4a4 <nftw@plt+0x17924>
  41a18c:	asr	x2, x2, #10
  41a190:	mov	w3, #0x6b                  	// #107
  41a194:	adrp	x1, 474000 <_obstack_memory_used@@Base+0x12bb8>
  41a198:	add	x1, x1, #0x3d8
  41a19c:	bl	402b30 <fprintf@plt>
  41a1a0:	ldr	x2, [sp, #136]
  41a1a4:	mov	x1, #0x27ff                	// #10239
  41a1a8:	ldr	x0, [x19, #1392]
  41a1ac:	cmp	x2, x1
  41a1b0:	mov	w3, #0x20                  	// #32
  41a1b4:	b.le	41a1cc <nftw@plt+0x1764c>
  41a1b8:	mov	w1, #0x9fffff              	// #10485759
  41a1bc:	cmp	x2, x1
  41a1c0:	b.gt	41a498 <nftw@plt+0x17918>
  41a1c4:	asr	x2, x2, #10
  41a1c8:	mov	w3, #0x6b                  	// #107
  41a1cc:	adrp	x1, 474000 <_obstack_memory_used@@Base+0x12bb8>
  41a1d0:	add	x1, x1, #0x408
  41a1d4:	bl	402b30 <fprintf@plt>
  41a1d8:	ldr	x2, [sp, #144]
  41a1dc:	mov	x1, #0x27ff                	// #10239
  41a1e0:	ldr	x0, [x19, #1392]
  41a1e4:	cmp	x2, x1
  41a1e8:	mov	w3, #0x20                  	// #32
  41a1ec:	b.le	41a204 <nftw@plt+0x17684>
  41a1f0:	mov	w1, #0x9fffff              	// #10485759
  41a1f4:	cmp	x2, x1
  41a1f8:	b.gt	41a48c <nftw@plt+0x1790c>
  41a1fc:	asr	x2, x2, #10
  41a200:	mov	w3, #0x6b                  	// #107
  41a204:	adrp	x1, 474000 <_obstack_memory_used@@Base+0x12bb8>
  41a208:	add	x1, x1, #0x438
  41a20c:	bl	402b30 <fprintf@plt>
  41a210:	mov	x0, #0x27ff                	// #10239
  41a214:	cmp	x22, x0
  41a218:	ldr	x0, [x19, #1392]
  41a21c:	b.le	41a238 <nftw@plt+0x176b8>
  41a220:	mov	w1, #0x9fffff              	// #10485759
  41a224:	cmp	x22, x1
  41a228:	b.gt	41a480 <nftw@plt+0x17900>
  41a22c:	asr	x2, x22, #10
  41a230:	mov	w3, #0x6b                  	// #107
  41a234:	b	41a240 <nftw@plt+0x176c0>
  41a238:	mov	x2, x22
  41a23c:	mov	w3, #0x20                  	// #32
  41a240:	adrp	x1, 474000 <_obstack_memory_used@@Base+0x12bb8>
  41a244:	add	x1, x1, #0x468
  41a248:	bl	402b30 <fprintf@plt>
  41a24c:	ldr	x2, [sp, #152]
  41a250:	mov	x1, #0x27ff                	// #10239
  41a254:	ldr	x0, [x19, #1392]
  41a258:	cmp	x2, x1
  41a25c:	mov	w3, #0x20                  	// #32
  41a260:	b.le	41a278 <nftw@plt+0x176f8>
  41a264:	mov	w1, #0x9fffff              	// #10485759
  41a268:	cmp	x2, x1
  41a26c:	b.gt	41a474 <nftw@plt+0x178f4>
  41a270:	asr	x2, x2, #10
  41a274:	mov	w3, #0x6b                  	// #107
  41a278:	adrp	x1, 474000 <_obstack_memory_used@@Base+0x12bb8>
  41a27c:	add	x1, x1, #0x498
  41a280:	bl	402b30 <fprintf@plt>
  41a284:	mov	x0, #0x27ff                	// #10239
  41a288:	cmp	x21, x0
  41a28c:	ldr	x0, [x19, #1392]
  41a290:	b.le	41a3c0 <nftw@plt+0x17840>
  41a294:	mov	w1, #0x9fffff              	// #10485759
  41a298:	cmp	x21, x1
  41a29c:	b.gt	41a468 <nftw@plt+0x178e8>
  41a2a0:	asr	x2, x21, #10
  41a2a4:	mov	w3, #0x6b                  	// #107
  41a2a8:	adrp	x1, 474000 <_obstack_memory_used@@Base+0x12bb8>
  41a2ac:	add	x1, x1, #0x4c8
  41a2b0:	bl	402b30 <fprintf@plt>
  41a2b4:	mov	x0, #0x27ff                	// #10239
  41a2b8:	cmp	x20, x0
  41a2bc:	ldr	x0, [x19, #1392]
  41a2c0:	b.gt	41a3e4 <nftw@plt+0x17864>
  41a2c4:	mov	x2, x20
  41a2c8:	mov	w3, #0x20                  	// #32
  41a2cc:	adrp	x1, 474000 <_obstack_memory_used@@Base+0x12bb8>
  41a2d0:	add	x1, x1, #0x4f8
  41a2d4:	bl	402b30 <fprintf@plt>
  41a2d8:	ldr	x2, [sp, #160]
  41a2dc:	mov	x1, #0x27ff                	// #10239
  41a2e0:	ldr	x0, [x19, #1392]
  41a2e4:	cmp	x2, x1
  41a2e8:	mov	w3, #0x20                  	// #32
  41a2ec:	b.le	41a304 <nftw@plt+0x17784>
  41a2f0:	mov	w1, #0x9fffff              	// #10485759
  41a2f4:	cmp	x2, x1
  41a2f8:	b.gt	41a450 <nftw@plt+0x178d0>
  41a2fc:	asr	x2, x2, #10
  41a300:	mov	w3, #0x6b                  	// #107
  41a304:	adrp	x1, 474000 <_obstack_memory_used@@Base+0x12bb8>
  41a308:	add	x1, x1, #0x528
  41a30c:	bl	402b30 <fprintf@plt>
  41a310:	ldr	x2, [sp, #168]
  41a314:	mov	x1, #0x27ff                	// #10239
  41a318:	ldr	x0, [x19, #1392]
  41a31c:	cmp	x2, x1
  41a320:	mov	w3, #0x20                  	// #32
  41a324:	b.le	41a33c <nftw@plt+0x177bc>
  41a328:	mov	w1, #0x9fffff              	// #10485759
  41a32c:	cmp	x2, x1
  41a330:	b.gt	41a444 <nftw@plt+0x178c4>
  41a334:	asr	x2, x2, #10
  41a338:	mov	w3, #0x6b                  	// #107
  41a33c:	adrp	x1, 474000 <_obstack_memory_used@@Base+0x12bb8>
  41a340:	add	x1, x1, #0x558
  41a344:	bl	402b30 <fprintf@plt>
  41a348:	ldr	x2, [x23, #2336]
  41a34c:	mov	w1, #0x27ff                	// #10239
  41a350:	ldr	x0, [x19, #1392]
  41a354:	ldr	w2, [x2, #124]
  41a358:	cmp	w2, w1
  41a35c:	b.hi	41a3fc <nftw@plt+0x1787c>  // b.pmore
  41a360:	mov	w2, w2
  41a364:	mov	w3, #0x20                  	// #32
  41a368:	adrp	x1, 474000 <_obstack_memory_used@@Base+0x12bb8>
  41a36c:	add	x1, x1, #0x588
  41a370:	bl	402b30 <fprintf@plt>
  41a374:	ldr	x2, [x23, #2336]
  41a378:	mov	w1, #0x27ff                	// #10239
  41a37c:	ldr	x0, [x19, #1392]
  41a380:	ldr	w2, [x2, #128]
  41a384:	cmp	w2, w1
  41a388:	b.hi	41a414 <nftw@plt+0x17894>  // b.pmore
  41a38c:	mov	w2, w2
  41a390:	mov	w3, #0x20                  	// #32
  41a394:	adrp	x1, 474000 <_obstack_memory_used@@Base+0x12bb8>
  41a398:	add	x1, x1, #0x5b8
  41a39c:	bl	402b30 <fprintf@plt>
  41a3a0:	ldr	x1, [x19, #1392]
  41a3a4:	mov	w0, #0xa                   	// #10
  41a3a8:	bl	4025e0 <fputc@plt>
  41a3ac:	ldp	x19, x20, [sp, #16]
  41a3b0:	ldp	x21, x22, [sp, #32]
  41a3b4:	ldr	x23, [sp, #48]
  41a3b8:	ldp	x29, x30, [sp], #176
  41a3bc:	ret
  41a3c0:	mov	x2, x21
  41a3c4:	mov	w3, #0x20                  	// #32
  41a3c8:	adrp	x1, 474000 <_obstack_memory_used@@Base+0x12bb8>
  41a3cc:	add	x1, x1, #0x4c8
  41a3d0:	bl	402b30 <fprintf@plt>
  41a3d4:	mov	x0, #0x27ff                	// #10239
  41a3d8:	cmp	x20, x0
  41a3dc:	ldr	x0, [x19, #1392]
  41a3e0:	b.le	41a2c4 <nftw@plt+0x17744>
  41a3e4:	mov	w1, #0x9fffff              	// #10485759
  41a3e8:	cmp	x20, x1
  41a3ec:	b.gt	41a45c <nftw@plt+0x178dc>
  41a3f0:	asr	x2, x20, #10
  41a3f4:	mov	w3, #0x6b                  	// #107
  41a3f8:	b	41a2cc <nftw@plt+0x1774c>
  41a3fc:	mov	w1, #0x9fffff              	// #10485759
  41a400:	cmp	w2, w1
  41a404:	b.hi	41a438 <nftw@plt+0x178b8>  // b.pmore
  41a408:	lsr	w2, w2, #10
  41a40c:	mov	w3, #0x6b                  	// #107
  41a410:	b	41a368 <nftw@plt+0x177e8>
  41a414:	mov	w1, #0x9fffff              	// #10485759
  41a418:	cmp	w2, w1
  41a41c:	b.hi	41a42c <nftw@plt+0x178ac>  // b.pmore
  41a420:	lsr	w2, w2, #10
  41a424:	mov	w3, #0x6b                  	// #107
  41a428:	b	41a394 <nftw@plt+0x17814>
  41a42c:	lsr	w2, w2, #20
  41a430:	mov	w3, #0x4d                  	// #77
  41a434:	b	41a394 <nftw@plt+0x17814>
  41a438:	lsr	w2, w2, #20
  41a43c:	mov	w3, #0x4d                  	// #77
  41a440:	b	41a368 <nftw@plt+0x177e8>
  41a444:	asr	x2, x2, #20
  41a448:	mov	w3, #0x4d                  	// #77
  41a44c:	b	41a33c <nftw@plt+0x177bc>
  41a450:	asr	x2, x2, #20
  41a454:	mov	w3, #0x4d                  	// #77
  41a458:	b	41a304 <nftw@plt+0x17784>
  41a45c:	asr	x2, x20, #20
  41a460:	mov	w3, #0x4d                  	// #77
  41a464:	b	41a2cc <nftw@plt+0x1774c>
  41a468:	asr	x2, x21, #20
  41a46c:	mov	w3, #0x4d                  	// #77
  41a470:	b	41a3c8 <nftw@plt+0x17848>
  41a474:	asr	x2, x2, #20
  41a478:	mov	w3, #0x4d                  	// #77
  41a47c:	b	41a278 <nftw@plt+0x176f8>
  41a480:	asr	x2, x22, #20
  41a484:	mov	w3, #0x4d                  	// #77
  41a488:	b	41a240 <nftw@plt+0x176c0>
  41a48c:	asr	x2, x2, #20
  41a490:	mov	w3, #0x4d                  	// #77
  41a494:	b	41a204 <nftw@plt+0x17684>
  41a498:	asr	x2, x2, #20
  41a49c:	mov	w3, #0x4d                  	// #77
  41a4a0:	b	41a1cc <nftw@plt+0x1764c>
  41a4a4:	asr	x2, x2, #20
  41a4a8:	mov	w3, #0x4d                  	// #77
  41a4ac:	b	41a194 <nftw@plt+0x17614>
  41a4b0:	asr	x2, x2, #20
  41a4b4:	mov	w3, #0x4d                  	// #77
  41a4b8:	b	41a15c <nftw@plt+0x175dc>
  41a4bc:	asr	x2, x2, #20
  41a4c0:	mov	w3, #0x4d                  	// #77
  41a4c4:	b	41a124 <nftw@plt+0x175a4>
  41a4c8:	asr	x2, x2, #20
  41a4cc:	mov	w3, #0x4d                  	// #77
  41a4d0:	b	41a0ec <nftw@plt+0x1756c>
  41a4d4:	asr	x2, x2, #20
  41a4d8:	mov	w3, #0x4d                  	// #77
  41a4dc:	b	41a0b4 <nftw@plt+0x17534>
  41a4e0:	ldr	x3, [sp, #112]
  41a4e4:	adrp	x1, 474000 <_obstack_memory_used@@Base+0x12bb8>
  41a4e8:	ldr	x0, [x19, #1392]
  41a4ec:	add	x1, x1, #0x2a8
  41a4f0:	sdiv	x2, x3, x2
  41a4f4:	bl	402b30 <fprintf@plt>
  41a4f8:	b	41a070 <nftw@plt+0x174f0>
  41a4fc:	nop
  41a500:	stp	x29, x30, [sp, #-224]!
  41a504:	adrp	x1, 474000 <_obstack_memory_used@@Base+0x12bb8>
  41a508:	adrp	x2, 474000 <_obstack_memory_used@@Base+0x12bb8>
  41a50c:	mov	x29, sp
  41a510:	add	x1, x1, #0x650
  41a514:	add	x2, x2, #0x5f0
  41a518:	stp	x19, x20, [sp, #16]
  41a51c:	mov	x20, x0
  41a520:	stp	x21, x22, [sp, #32]
  41a524:	stp	x23, x24, [sp, #48]
  41a528:	stp	x25, x26, [sp, #64]
  41a52c:	stp	x27, x28, [sp, #80]
  41a530:	str	x1, [sp, #184]
  41a534:	bl	402b30 <fprintf@plt>
  41a538:	mov	w3, #0x2                   	// #2
  41a53c:	mov	w2, #0x0                   	// #0
  41a540:	adrp	x0, 474000 <_obstack_memory_used@@Base+0x12bb8>
  41a544:	add	x0, x0, #0x608
  41a548:	mov	x1, x0
  41a54c:	str	x0, [sp, #112]
  41a550:	mov	x0, x20
  41a554:	bl	402b30 <fprintf@plt>
  41a558:	mov	x1, x20
  41a55c:	mov	w0, #0xa                   	// #10
  41a560:	bl	4025e0 <fputc@plt>
  41a564:	adrp	x0, 4a5000 <__environ@@GLIBC_2.17+0xa68>
  41a568:	ldr	x1, [x0, #2336]
  41a56c:	ldr	w0, [x1, #12]
  41a570:	cbz	w0, 41a950 <nftw@plt+0x17dd0>
  41a574:	adrp	x3, 474000 <_obstack_memory_used@@Base+0x12bb8>
  41a578:	add	x3, x3, #0x630
  41a57c:	adrp	x2, 474000 <_obstack_memory_used@@Base+0x12bb8>
  41a580:	add	x2, x2, #0x648
  41a584:	stp	x3, x2, [sp, #120]
  41a588:	adrp	x3, 474000 <_obstack_memory_used@@Base+0x12bb8>
  41a58c:	add	x3, x3, #0x658
  41a590:	adrp	x2, 474000 <_obstack_memory_used@@Base+0x12bb8>
  41a594:	add	x2, x2, #0x670
  41a598:	stp	x3, x2, [sp, #136]
  41a59c:	adrp	x3, 474000 <_obstack_memory_used@@Base+0x12bb8>
  41a5a0:	add	x3, x3, #0x690
  41a5a4:	adrp	x2, 474000 <_obstack_memory_used@@Base+0x12bb8>
  41a5a8:	add	x2, x2, #0x6a8
  41a5ac:	stp	x3, x2, [sp, #152]
  41a5b0:	adrp	x3, 474000 <_obstack_memory_used@@Base+0x12bb8>
  41a5b4:	add	x3, x3, #0x6c0
  41a5b8:	adrp	x2, 474000 <_obstack_memory_used@@Base+0x12bb8>
  41a5bc:	add	x2, x2, #0x6d8
  41a5c0:	stp	x3, x2, [sp, #168]
  41a5c4:	adrp	x3, 4a5000 <__environ@@GLIBC_2.17+0xa68>
  41a5c8:	add	x24, x3, #0x920
  41a5cc:	adrp	x2, 474000 <_obstack_memory_used@@Base+0x12bb8>
  41a5d0:	add	x2, x2, #0x728
  41a5d4:	str	wzr, [sp, #96]
  41a5d8:	str	x2, [sp, #104]
  41a5dc:	nop
  41a5e0:	ldr	w2, [sp, #96]
  41a5e4:	sub	w0, w0, #0x1
  41a5e8:	ldr	x23, [x1]
  41a5ec:	cmp	w0, w2
  41a5f0:	b.eq	41ad68 <nftw@plt+0x181e8>  // b.none
  41a5f4:	ldr	w0, [sp, #96]
  41a5f8:	mov	w1, #0x18                  	// #24
  41a5fc:	add	w0, w0, #0x1
  41a600:	smull	x0, w0, w1
  41a604:	ldr	w25, [x23, x0]
  41a608:	ldr	w2, [sp, #96]
  41a60c:	mov	w22, #0x18                  	// #24
  41a610:	ldr	x1, [sp, #120]
  41a614:	mov	x0, x20
  41a618:	smull	x22, w2, w22
  41a61c:	bl	402b30 <fprintf@plt>
  41a620:	ldr	x1, [sp, #112]
  41a624:	add	x21, x23, x22
  41a628:	ldr	w2, [x23, x22]
  41a62c:	mov	w3, w25
  41a630:	mov	x0, x20
  41a634:	bl	402b30 <fprintf@plt>
  41a638:	ldr	x2, [x21, #8]
  41a63c:	mov	x0, x20
  41a640:	ldr	x1, [sp, #128]
  41a644:	bl	402b30 <fprintf@plt>
  41a648:	ldr	w2, [x21, #16]
  41a64c:	mov	x0, x20
  41a650:	ldr	x1, [sp, #136]
  41a654:	bl	402b30 <fprintf@plt>
  41a658:	ldrb	w2, [x21, #6]
  41a65c:	mov	x0, x20
  41a660:	ldr	x1, [sp, #144]
  41a664:	bl	402b30 <fprintf@plt>
  41a668:	ldrb	w3, [x21, #6]
  41a66c:	mov	x0, x20
  41a670:	ldr	x1, [sp, #152]
  41a674:	ldrb	w2, [x21, #7]
  41a678:	sub	w2, w3, w2
  41a67c:	bl	402b30 <fprintf@plt>
  41a680:	ldrb	w2, [x21, #7]
  41a684:	mov	x0, x20
  41a688:	ldr	x1, [sp, #160]
  41a68c:	bl	402b30 <fprintf@plt>
  41a690:	ldrb	w2, [x21, #4]
  41a694:	cmp	w2, #0x4
  41a698:	b.hi	41ad20 <nftw@plt+0x181a0>  // b.pmore
  41a69c:	and	x1, x2, #0xff
  41a6a0:	adrp	x0, 474000 <_obstack_memory_used@@Base+0x12bb8>
  41a6a4:	add	x0, x0, #0xbd8
  41a6a8:	ldr	x3, [x0, x1, lsl #3]
  41a6ac:	mov	x0, x20
  41a6b0:	ldr	x1, [sp, #168]
  41a6b4:	bl	402b30 <fprintf@plt>
  41a6b8:	ldr	x0, [x24]
  41a6bc:	mov	x1, x21
  41a6c0:	bl	435558 <nftw@plt+0x329d8>
  41a6c4:	mov	x19, x0
  41a6c8:	ldr	w2, [x21, #20]
  41a6cc:	mov	x0, x20
  41a6d0:	ldr	x1, [sp, #176]
  41a6d4:	bl	402b30 <fprintf@plt>
  41a6d8:	cbz	x19, 41a708 <nftw@plt+0x17b88>
  41a6dc:	ldr	x3, [x24]
  41a6e0:	mov	x2, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  41a6e4:	movk	x2, #0xaaab
  41a6e8:	adrp	x1, 474000 <_obstack_memory_used@@Base+0x12bb8>
  41a6ec:	mov	x0, x20
  41a6f0:	add	x1, x1, #0x6f8
  41a6f4:	ldr	x3, [x3]
  41a6f8:	sub	x19, x19, x3
  41a6fc:	asr	x19, x19, #3
  41a700:	mul	w2, w19, w2
  41a704:	bl	402b30 <fprintf@plt>
  41a708:	mov	x1, x20
  41a70c:	mov	w0, #0xa                   	// #10
  41a710:	bl	4025e0 <fputc@plt>
  41a714:	ldr	w19, [x23, x22]
  41a718:	adrp	x26, 474000 <_obstack_memory_used@@Base+0x12bb8>
  41a71c:	add	x26, x26, #0x740
  41a720:	cmp	w25, w19
  41a724:	b.hi	41a744 <nftw@plt+0x17bc4>  // b.pmore
  41a728:	b	41a924 <nftw@plt+0x17da4>
  41a72c:	ldrb	w1, [x21, #7]
  41a730:	mov	w0, #0x1                   	// #1
  41a734:	lsl	w0, w0, w1
  41a738:	add	w19, w19, w0
  41a73c:	cmp	w25, w19
  41a740:	b.ls	41a924 <nftw@plt+0x17da4>  // b.plast
  41a744:	ldr	x0, [x24]
  41a748:	mov	w1, w19
  41a74c:	bl	4353e8 <nftw@plt+0x32868>
  41a750:	tst	w0, #0xff
  41a754:	b.eq	41ad70 <nftw@plt+0x181f0>  // b.none
  41a758:	ldr	x0, [x24]
  41a75c:	add	x8, sp, #0xc0
  41a760:	mov	w2, w19
  41a764:	mov	x1, x21
  41a768:	bl	4373c0 <nftw@plt+0x34840>
  41a76c:	ldr	w0, [sp, #204]
  41a770:	cbnz	w0, 41a72c <nftw@plt+0x17bac>
  41a774:	ldr	x27, [sp, #192]
  41a778:	ldr	w28, [sp, #200]
  41a77c:	mov	x0, x27
  41a780:	mov	w1, w28
  41a784:	bl	419390 <nftw@plt+0x16810>
  41a788:	mov	x23, x1
  41a78c:	mov	x6, x0
  41a790:	cbz	x0, 41a924 <nftw@plt+0x17da4>
  41a794:	mov	w5, w1
  41a798:	mov	w3, w28
  41a79c:	ldr	x1, [sp, #104]
  41a7a0:	mov	w4, w19
  41a7a4:	mov	x2, x27
  41a7a8:	mov	x0, x20
  41a7ac:	bl	402b30 <fprintf@plt>
  41a7b0:	ldrb	w22, [x21, #6]
  41a7b4:	mov	w1, #0x1                   	// #1
  41a7b8:	mov	w0, w28
  41a7bc:	lsl	w22, w1, w22
  41a7c0:	sub	w22, w22, #0x1
  41a7c4:	cmp	x23, w22, sxtw
  41a7c8:	csinc	w22, w22, w23, cs  // cs = hs, nlast
  41a7cc:	bl	409e40 <nftw@plt+0x72c0>
  41a7d0:	mov	w28, w0
  41a7d4:	mov	w0, w19
  41a7d8:	bl	409e40 <nftw@plt+0x72c0>
  41a7dc:	mov	w23, w0
  41a7e0:	mov	x0, x27
  41a7e4:	bl	4024f0 <strlen@plt>
  41a7e8:	add	w0, w0, #0x6
  41a7ec:	cmp	w28, #0x3
  41a7f0:	mov	w1, #0x3                   	// #3
  41a7f4:	csel	w28, w28, w1, ge  // ge = tcont
  41a7f8:	cmp	w23, #0x5
  41a7fc:	mov	w1, #0x5                   	// #5
  41a800:	csel	w23, w23, w1, ge  // ge = tcont
  41a804:	add	w28, w28, w23
  41a808:	cmp	w25, #0x3e7
  41a80c:	add	w23, w28, w0
  41a810:	b.hi	41ac7c <nftw@plt+0x180fc>  // b.pmore
  41a814:	cmp	w25, #0x63
  41a818:	b.hi	41abf4 <nftw@plt+0x18074>  // b.pmore
  41a81c:	mov	w2, w23
  41a820:	mov	w3, #0x20                  	// #32
  41a824:	mov	x1, x26
  41a828:	mov	x0, x20
  41a82c:	bl	402b30 <fprintf@plt>
  41a830:	mov	x1, x20
  41a834:	mov	w0, #0x7c                  	// #124
  41a838:	bl	4025e0 <fputc@plt>
  41a83c:	cmp	w22, #0x1
  41a840:	b.le	41ad2c <nftw@plt+0x181ac>
  41a844:	mov	w28, #0xcccd                	// #52429
  41a848:	mov	w27, #0x1                   	// #1
  41a84c:	movk	w28, #0xcccc, lsl #16
  41a850:	ldrb	w0, [x21, #7]
  41a854:	mov	x1, x20
  41a858:	lsl	w0, w27, w0
  41a85c:	add	w0, w0, w19
  41a860:	add	w27, w27, #0x1
  41a864:	umull	x0, w0, w28
  41a868:	lsr	x0, x0, #35
  41a86c:	umull	x2, w0, w28
  41a870:	lsr	x2, x2, #35
  41a874:	add	w2, w2, w2, lsl #2
  41a878:	sub	w0, w0, w2, lsl #1
  41a87c:	add	w0, w0, #0x30
  41a880:	bl	4025e0 <fputc@plt>
  41a884:	cmp	w27, w22
  41a888:	b.ne	41a850 <nftw@plt+0x17cd0>  // b.any
  41a88c:	mov	x1, x20
  41a890:	mov	w0, #0xa                   	// #10
  41a894:	bl	4025e0 <fputc@plt>
  41a898:	mov	w27, #0x1                   	// #1
  41a89c:	mov	w2, w23
  41a8a0:	mov	w3, #0x20                  	// #32
  41a8a4:	mov	x1, x26
  41a8a8:	mov	x0, x20
  41a8ac:	mov	w23, #0x6667                	// #26215
  41a8b0:	bl	402b30 <fprintf@plt>
  41a8b4:	mov	x1, x20
  41a8b8:	mov	w0, #0x7c                  	// #124
  41a8bc:	movk	w23, #0x6666, lsl #16
  41a8c0:	bl	4025e0 <fputc@plt>
  41a8c4:	nop
  41a8c8:	ldrb	w0, [x21, #7]
  41a8cc:	mov	x1, x20
  41a8d0:	lsl	w0, w27, w0
  41a8d4:	add	w2, w0, w19
  41a8d8:	add	w27, w27, #0x1
  41a8dc:	smull	x0, w2, w23
  41a8e0:	asr	x0, x0, #34
  41a8e4:	sub	w0, w0, w2, asr #31
  41a8e8:	add	w0, w0, w0, lsl #2
  41a8ec:	sub	w0, w2, w0, lsl #1
  41a8f0:	add	w0, w0, #0x30
  41a8f4:	bl	4025e0 <fputc@plt>
  41a8f8:	cmp	w27, w22
  41a8fc:	b.ne	41a8c8 <nftw@plt+0x17d48>  // b.any
  41a900:	mov	x1, x20
  41a904:	mov	w0, #0xa                   	// #10
  41a908:	bl	4025e0 <fputc@plt>
  41a90c:	ldrb	w1, [x21, #7]
  41a910:	mov	w0, #0x1                   	// #1
  41a914:	lsl	w0, w0, w1
  41a918:	add	w19, w19, w0
  41a91c:	cmp	w25, w19
  41a920:	b.hi	41a744 <nftw@plt+0x17bc4>  // b.pmore
  41a924:	mov	x1, x20
  41a928:	mov	w0, #0xa                   	// #10
  41a92c:	bl	4025e0 <fputc@plt>
  41a930:	ldr	x1, [x24]
  41a934:	ldr	w0, [sp, #96]
  41a938:	add	w0, w0, #0x1
  41a93c:	mov	w2, w0
  41a940:	ldr	w0, [x1, #12]
  41a944:	str	w2, [sp, #96]
  41a948:	cmp	w0, w2
  41a94c:	b.hi	41a5e0 <nftw@plt+0x17a60>  // b.pmore
  41a950:	ldr	w0, [x1, #36]
  41a954:	mov	w19, #0x80000000            	// #-2147483648
  41a958:	ldr	w21, [x1, #56]
  41a95c:	cbz	w0, 41a970 <nftw@plt+0x17df0>
  41a960:	sub	w0, w0, #0x1
  41a964:	ldr	x1, [x1, #24]
  41a968:	sbfiz	x0, x0, #5, #32
  41a96c:	ldr	w19, [x1, x0]
  41a970:	ldr	x1, [sp, #184]
  41a974:	mov	x0, x20
  41a978:	adrp	x2, 474000 <_obstack_memory_used@@Base+0x12bb8>
  41a97c:	add	x2, x2, #0x748
  41a980:	bl	402b30 <fprintf@plt>
  41a984:	ldr	x1, [sp, #112]
  41a988:	mov	w3, w19
  41a98c:	mov	w2, w21
  41a990:	mov	x0, x20
  41a994:	bl	402b30 <fprintf@plt>
  41a998:	mov	x1, x20
  41a99c:	mov	w0, #0xa                   	// #10
  41a9a0:	bl	4025e0 <fputc@plt>
  41a9a4:	adrp	x0, 4a5000 <__environ@@GLIBC_2.17+0xa68>
  41a9a8:	ldr	x1, [x0, #2336]
  41a9ac:	ldr	w0, [x1, #36]
  41a9b0:	cbz	w0, 41ab6c <nftw@plt+0x17fec>
  41a9b4:	adrp	x27, 474000 <_obstack_memory_used@@Base+0x12bb8>
  41a9b8:	add	x2, x27, #0x788
  41a9bc:	adrp	x26, 474000 <_obstack_memory_used@@Base+0x12bb8>
  41a9c0:	str	x2, [sp, #96]
  41a9c4:	add	x2, x26, #0x7a8
  41a9c8:	adrp	x28, 474000 <_obstack_memory_used@@Base+0x12bb8>
  41a9cc:	adrp	x19, 474000 <_obstack_memory_used@@Base+0x12bb8>
  41a9d0:	adrp	x22, 474000 <_obstack_memory_used@@Base+0x12bb8>
  41a9d4:	add	x19, x19, #0x800
  41a9d8:	add	x22, x22, #0x878
  41a9dc:	str	x2, [sp, #104]
  41a9e0:	add	x2, x28, #0x7c8
  41a9e4:	adrp	x24, 4a5000 <__environ@@GLIBC_2.17+0xa68>
  41a9e8:	mov	w27, #0x0                   	// #0
  41a9ec:	add	x24, x24, #0x920
  41a9f0:	str	x2, [sp, #120]
  41a9f4:	adrp	x2, 474000 <_obstack_memory_used@@Base+0x12bb8>
  41a9f8:	add	x2, x2, #0x7e8
  41a9fc:	str	x2, [sp, #128]
  41aa00:	str	x24, [sp, #136]
  41aa04:	nop
  41aa08:	sub	w21, w0, #0x1
  41aa0c:	sub	w21, w21, w27
  41aa10:	ldr	x25, [x1, #24]
  41aa14:	sbfiz	x23, x21, #5, #32
  41aa18:	add	x24, x25, x23
  41aa1c:	mov	x0, x24
  41aa20:	bl	436980 <nftw@plt+0x33e00>
  41aa24:	ldr	x1, [sp, #96]
  41aa28:	mov	x3, x0
  41aa2c:	ldr	w4, [x24, #4]
  41aa30:	mov	w2, w21
  41aa34:	mov	x0, x20
  41aa38:	bl	402b30 <fprintf@plt>
  41aa3c:	ldr	w2, [x25, x23]
  41aa40:	mov	x0, x20
  41aa44:	ldr	x1, [sp, #112]
  41aa48:	ldr	w3, [x24, #4]
  41aa4c:	add	w3, w2, w3
  41aa50:	bl	402b30 <fprintf@plt>
  41aa54:	ldr	w2, [x24, #24]
  41aa58:	ldr	x1, [sp, #104]
  41aa5c:	mov	w0, w2
  41aa60:	bl	40a9d0 <nftw@plt+0x7e50>
  41aa64:	ldr	w2, [x25, x23]
  41aa68:	mov	x0, x20
  41aa6c:	ldr	x1, [sp, #120]
  41aa70:	bl	402b30 <fprintf@plt>
  41aa74:	ldr	x0, [sp, #128]
  41aa78:	mov	x3, x20
  41aa7c:	mov	x2, #0x13                  	// #19
  41aa80:	mov	x1, #0x1                   	// #1
  41aa84:	bl	402950 <fwrite@plt>
  41aa88:	ldr	w0, [x24, #4]
  41aa8c:	cbz	w0, 41ab48 <nftw@plt+0x17fc8>
  41aa90:	adrp	x26, 474000 <_obstack_memory_used@@Base+0x12bb8>
  41aa94:	mov	w25, #0x0                   	// #0
  41aa98:	add	x26, x26, #0x898
  41aa9c:	mov	w23, #0x0                   	// #0
  41aaa0:	b	41aadc <nftw@plt+0x17f5c>
  41aaa4:	ldr	w3, [x24]
  41aaa8:	cmp	w21, w3
  41aaac:	b.cs	41ad04 <nftw@plt+0x18184>  // b.hs, b.nlast
  41aab0:	adrp	x1, 474000 <_obstack_memory_used@@Base+0x12bb8>
  41aab4:	mov	w3, w21
  41aab8:	add	x1, x1, #0x810
  41aabc:	mov	w0, w21
  41aac0:	mov	w2, w23
  41aac4:	bl	40a9d0 <nftw@plt+0x7e50>
  41aac8:	ldr	w0, [x24, #4]
  41aacc:	add	w23, w23, #0x1
  41aad0:	add	w25, w25, #0x2
  41aad4:	cmp	w23, w0
  41aad8:	b.cs	41ab48 <nftw@plt+0x17fc8>  // b.hs, b.nlast
  41aadc:	ldr	x4, [x24, #16]
  41aae0:	add	w3, w25, #0x1
  41aae4:	mov	w2, w23
  41aae8:	mov	x1, x19
  41aaec:	mov	x0, x20
  41aaf0:	ldr	w21, [x4, w25, uxtw #2]
  41aaf4:	ldr	w28, [x4, x3, lsl #2]
  41aaf8:	mov	w3, w21
  41aafc:	mov	w4, w28
  41ab00:	bl	402b30 <fprintf@plt>
  41ab04:	cmp	w21, w28
  41ab08:	b.eq	41aaa4 <nftw@plt+0x17f24>  // b.none
  41ab0c:	mov	w2, w23
  41ab10:	mov	w3, w21
  41ab14:	mov	x1, x22
  41ab18:	mov	w0, w21
  41ab1c:	bl	40a9d0 <nftw@plt+0x7e50>
  41ab20:	add	w25, w25, #0x2
  41ab24:	mov	w2, w23
  41ab28:	mov	w0, w21
  41ab2c:	mov	w3, w28
  41ab30:	mov	x1, x26
  41ab34:	bl	40a9d0 <nftw@plt+0x7e50>
  41ab38:	add	w23, w23, #0x1
  41ab3c:	ldr	w0, [x24, #4]
  41ab40:	cmp	w23, w0
  41ab44:	b.cc	41aadc <nftw@plt+0x17f5c>  // b.lo, b.ul, b.last
  41ab48:	mov	x1, x20
  41ab4c:	mov	w0, #0xa                   	// #10
  41ab50:	bl	4025e0 <fputc@plt>
  41ab54:	add	w27, w27, #0x1
  41ab58:	ldr	x0, [sp, #136]
  41ab5c:	ldr	x1, [x0]
  41ab60:	ldr	w0, [x1, #36]
  41ab64:	cmp	w27, w0
  41ab68:	b.cc	41aa08 <nftw@plt+0x17e88>  // b.lo, b.ul, b.last
  41ab6c:	ldr	x21, [sp, #184]
  41ab70:	mov	x0, x20
  41ab74:	adrp	x2, 474000 <_obstack_memory_used@@Base+0x12bb8>
  41ab78:	add	x2, x2, #0x760
  41ab7c:	mov	x1, x21
  41ab80:	bl	402b30 <fprintf@plt>
  41ab84:	ldr	x19, [sp, #112]
  41ab88:	mov	w3, #0x80000000            	// #-2147483648
  41ab8c:	mov	w2, #0x7fffffff            	// #2147483647
  41ab90:	mov	x0, x20
  41ab94:	mov	x1, x19
  41ab98:	bl	402b30 <fprintf@plt>
  41ab9c:	mov	x1, x20
  41aba0:	mov	w0, #0xa                   	// #10
  41aba4:	bl	4025e0 <fputc@plt>
  41aba8:	mov	x1, x21
  41abac:	mov	x0, x20
  41abb0:	adrp	x2, 474000 <_obstack_memory_used@@Base+0x12bb8>
  41abb4:	add	x2, x2, #0x770
  41abb8:	bl	402b30 <fprintf@plt>
  41abbc:	mov	x1, x19
  41abc0:	mov	x0, x20
  41abc4:	mov	w3, #0xffffffff            	// #-1
  41abc8:	mov	w2, #0x80000000            	// #-2147483648
  41abcc:	bl	402b30 <fprintf@plt>
  41abd0:	mov	x1, x20
  41abd4:	mov	w0, #0xa                   	// #10
  41abd8:	ldp	x19, x20, [sp, #16]
  41abdc:	ldp	x21, x22, [sp, #32]
  41abe0:	ldp	x23, x24, [sp, #48]
  41abe4:	ldp	x25, x26, [sp, #64]
  41abe8:	ldp	x27, x28, [sp, #80]
  41abec:	ldp	x29, x30, [sp], #224
  41abf0:	b	4025e0 <fputc@plt>
  41abf4:	mov	w2, w23
  41abf8:	mov	w3, #0x20                  	// #32
  41abfc:	mov	x1, x26
  41ac00:	mov	x0, x20
  41ac04:	bl	402b30 <fprintf@plt>
  41ac08:	mov	w27, #0x1                   	// #1
  41ac0c:	mov	x1, x20
  41ac10:	mov	w0, #0x7c                  	// #124
  41ac14:	bl	4025e0 <fputc@plt>
  41ac18:	cmp	w22, #0x1
  41ac1c:	b.le	41ac6c <nftw@plt+0x180ec>
  41ac20:	mov	w28, #0x851f                	// #34079
  41ac24:	movk	w28, #0x51eb, lsl #16
  41ac28:	ldrb	w0, [x21, #7]
  41ac2c:	mov	w2, #0xcccd                	// #52429
  41ac30:	movk	w2, #0xcccc, lsl #16
  41ac34:	mov	x1, x20
  41ac38:	lsl	w0, w27, w0
  41ac3c:	add	w0, w0, w19
  41ac40:	add	w27, w27, #0x1
  41ac44:	umull	x0, w0, w28
  41ac48:	lsr	x0, x0, #37
  41ac4c:	umull	x2, w0, w2
  41ac50:	lsr	x2, x2, #35
  41ac54:	add	w2, w2, w2, lsl #2
  41ac58:	sub	w0, w0, w2, lsl #1
  41ac5c:	add	w0, w0, #0x30
  41ac60:	bl	4025e0 <fputc@plt>
  41ac64:	cmp	w27, w22
  41ac68:	b.ne	41ac28 <nftw@plt+0x180a8>  // b.any
  41ac6c:	mov	x1, x20
  41ac70:	mov	w0, #0xa                   	// #10
  41ac74:	bl	4025e0 <fputc@plt>
  41ac78:	b	41a81c <nftw@plt+0x17c9c>
  41ac7c:	mov	w2, w23
  41ac80:	mov	w3, #0x20                  	// #32
  41ac84:	mov	x1, x26
  41ac88:	mov	x0, x20
  41ac8c:	bl	402b30 <fprintf@plt>
  41ac90:	mov	w27, #0x1                   	// #1
  41ac94:	mov	x1, x20
  41ac98:	mov	w0, #0x7c                  	// #124
  41ac9c:	bl	4025e0 <fputc@plt>
  41aca0:	cmp	w22, w27
  41aca4:	b.le	41acf4 <nftw@plt+0x18174>
  41aca8:	mov	w28, #0x4dd3                	// #19923
  41acac:	movk	w28, #0x1062, lsl #16
  41acb0:	ldrb	w0, [x21, #7]
  41acb4:	mov	w2, #0xcccd                	// #52429
  41acb8:	movk	w2, #0xcccc, lsl #16
  41acbc:	mov	x1, x20
  41acc0:	lsl	w0, w27, w0
  41acc4:	add	w0, w0, w19
  41acc8:	add	w27, w27, #0x1
  41accc:	umull	x0, w0, w28
  41acd0:	lsr	x0, x0, #38
  41acd4:	umull	x2, w0, w2
  41acd8:	lsr	x2, x2, #35
  41acdc:	add	w2, w2, w2, lsl #2
  41ace0:	sub	w0, w0, w2, lsl #1
  41ace4:	add	w0, w0, #0x30
  41ace8:	bl	4025e0 <fputc@plt>
  41acec:	cmp	w27, w22
  41acf0:	b.ne	41acb0 <nftw@plt+0x18130>  // b.any
  41acf4:	mov	x1, x20
  41acf8:	mov	w0, #0xa                   	// #10
  41acfc:	bl	4025e0 <fputc@plt>
  41ad00:	b	41a814 <nftw@plt+0x17c94>
  41ad04:	adrp	x0, 474000 <_obstack_memory_used@@Base+0x12bb8>
  41ad08:	sub	w3, w21, w3
  41ad0c:	add	x1, x0, #0x840
  41ad10:	mov	w2, w21
  41ad14:	mov	x0, x20
  41ad18:	bl	402b30 <fprintf@plt>
  41ad1c:	b	41aac8 <nftw@plt+0x17f48>
  41ad20:	adrp	x3, 474000 <_obstack_memory_used@@Base+0x12bb8>
  41ad24:	add	x3, x3, #0x5e8
  41ad28:	b	41a6ac <nftw@plt+0x17b2c>
  41ad2c:	mov	x1, x20
  41ad30:	mov	w0, #0xa                   	// #10
  41ad34:	bl	4025e0 <fputc@plt>
  41ad38:	mov	w2, w23
  41ad3c:	mov	w3, #0x20                  	// #32
  41ad40:	mov	x1, x26
  41ad44:	mov	x0, x20
  41ad48:	bl	402b30 <fprintf@plt>
  41ad4c:	mov	x1, x20
  41ad50:	mov	w0, #0x7c                  	// #124
  41ad54:	bl	4025e0 <fputc@plt>
  41ad58:	mov	x1, x20
  41ad5c:	mov	w0, #0xa                   	// #10
  41ad60:	bl	4025e0 <fputc@plt>
  41ad64:	b	41a90c <nftw@plt+0x17d8c>
  41ad68:	ldr	w25, [x1, #56]
  41ad6c:	b	41a608 <nftw@plt+0x17a88>
  41ad70:	adrp	x2, 474000 <_obstack_memory_used@@Base+0x12bb8>
  41ad74:	adrp	x0, 474000 <_obstack_memory_used@@Base+0x12bb8>
  41ad78:	add	x2, x2, #0x710
  41ad7c:	add	x0, x0, #0x1f8
  41ad80:	mov	w1, #0x454                 	// #1108
  41ad84:	bl	402bf0 <nftw@plt+0x70>
  41ad88:	stp	x29, x30, [sp, #-48]!
  41ad8c:	mov	x3, #0x0                   	// #0
  41ad90:	mov	x29, sp
  41ad94:	stp	x19, x20, [sp, #16]
  41ad98:	mov	x20, x0
  41ad9c:	mov	w19, w1
  41ada0:	str	x21, [sp, #32]
  41ada4:	sbfiz	x0, x1, #2, #32
  41ada8:	str	w1, [x20]
  41adac:	mov	x21, x2
  41adb0:	mov	x1, #0x0                   	// #0
  41adb4:	mov	x2, #0x0                   	// #0
  41adb8:	bl	41c1c8 <nftw@plt+0x19648>
  41adbc:	str	x0, [x20, #8]
  41adc0:	cmp	w19, #0x0
  41adc4:	b.le	41ade8 <nftw@plt+0x18268>
  41adc8:	sub	w19, w19, #0x1
  41adcc:	mov	x1, x21
  41add0:	add	x2, x19, #0x1
  41add4:	ldp	x19, x20, [sp, #16]
  41add8:	lsl	x2, x2, #2
  41addc:	ldr	x21, [sp, #32]
  41ade0:	ldp	x29, x30, [sp], #48
  41ade4:	b	402490 <memcpy@plt>
  41ade8:	ldp	x19, x20, [sp, #16]
  41adec:	ldr	x21, [sp, #32]
  41adf0:	ldp	x29, x30, [sp], #48
  41adf4:	ret
  41adf8:	stp	x29, x30, [sp, #-64]!
  41adfc:	mov	x3, #0x1                   	// #1
  41ae00:	mov	x2, #0x0                   	// #0
  41ae04:	mov	x29, sp
  41ae08:	adrp	x1, 41b000 <nftw@plt+0x18480>
  41ae0c:	add	x1, x1, #0xb00
  41ae10:	stp	x19, x20, [sp, #16]
  41ae14:	stp	x21, x22, [sp, #32]
  41ae18:	str	x23, [sp, #48]
  41ae1c:	mov	x23, x0
  41ae20:	mov	x0, #0x30                  	// #48
  41ae24:	bl	41c1c8 <nftw@plt+0x19648>
  41ae28:	mov	x19, x0
  41ae2c:	mov	w1, #0x1                   	// #1
  41ae30:	mov	x0, #0x40                  	// #64
  41ae34:	stp	xzr, xzr, [x19, #16]
  41ae38:	str	xzr, [x19, #32]
  41ae3c:	strb	w1, [x19, #44]
  41ae40:	bl	41bd20 <nftw@plt+0x191a0>
  41ae44:	mov	w20, w0
  41ae48:	adrp	x1, 474000 <_obstack_memory_used@@Base+0x12bb8>
  41ae4c:	add	x0, x1, #0xc68
  41ae50:	mov	x3, #0x0                   	// #0
  41ae54:	ubfiz	x4, x20, #4, #32
  41ae58:	mov	x2, #0x0                   	// #0
  41ae5c:	mov	x1, #0x0                   	// #0
  41ae60:	ldr	w22, [x0, x4]
  41ae64:	lsl	x21, x22, #4
  41ae68:	mov	x0, x21
  41ae6c:	bl	41c1f0 <nftw@plt+0x19670>
  41ae70:	cbz	x0, 41aeac <nftw@plt+0x1832c>
  41ae74:	mov	x1, x0
  41ae78:	cbz	x22, 41ae8c <nftw@plt+0x1830c>
  41ae7c:	add	x21, x21, x0
  41ae80:	str	wzr, [x0], #16
  41ae84:	cmp	x21, x0
  41ae88:	b.ne	41ae80 <nftw@plt+0x18300>  // b.any
  41ae8c:	stp	x1, x22, [x19]
  41ae90:	ldp	x21, x22, [sp, #32]
  41ae94:	str	x19, [x23]
  41ae98:	str	w20, [x19, #40]
  41ae9c:	ldp	x19, x20, [sp, #16]
  41aea0:	ldr	x23, [sp, #48]
  41aea4:	ldp	x29, x30, [sp], #64
  41aea8:	ret
  41aeac:	adrp	x2, 474000 <_obstack_memory_used@@Base+0x12bb8>
  41aeb0:	adrp	x0, 474000 <_obstack_memory_used@@Base+0x12bb8>
  41aeb4:	add	x2, x2, #0x1a8
  41aeb8:	add	x0, x0, #0x1b8
  41aebc:	mov	w1, #0x2b5                 	// #693
  41aec0:	bl	402bf0 <nftw@plt+0x70>
  41aec4:	nop
  41aec8:	stp	x29, x30, [sp, #-48]!
  41aecc:	mov	x29, sp
  41aed0:	stp	x19, x20, [sp, #16]
  41aed4:	stp	x21, x22, [sp, #32]
  41aed8:	cbz	x2, 41b030 <nftw@plt+0x184b0>
  41aedc:	mov	x19, x3
  41aee0:	cbz	x3, 41b018 <nftw@plt+0x18498>
  41aee4:	adrp	x22, 4a5000 <__environ@@GLIBC_2.17+0xa68>
  41aee8:	mov	x21, x0
  41aeec:	mov	x3, #0x0                   	// #0
  41aef0:	mov	x20, x2
  41aef4:	ldr	x0, [x22, #2336]
  41aef8:	mov	w2, #0x1                   	// #1
  41aefc:	bl	436ea8 <nftw@plt+0x34328>
  41af00:	mov	w1, w0
  41af04:	ldr	x0, [x22, #2336]
  41af08:	bl	4360f0 <nftw@plt+0x33570>
  41af0c:	mov	w8, w0
  41af10:	ldr	x6, [x21]
  41af14:	adrp	x7, 474000 <_obstack_memory_used@@Base+0x12bb8>
  41af18:	add	x7, x7, #0xc68
  41af1c:	ldr	w4, [x6, #40]
  41af20:	ldr	w1, [x6, #32]
  41af24:	ldr	x5, [x6]
  41af28:	lsl	x4, x4, #4
  41af2c:	add	x2, x7, x4
  41af30:	add	w1, w1, #0x1
  41af34:	str	w1, [x6, #32]
  41af38:	ldr	w1, [x2, #4]
  41af3c:	ldr	w7, [x7, x4]
  41af40:	ldr	w9, [x2, #12]
  41af44:	umull	x1, w0, w1
  41af48:	lsr	x4, x1, #32
  41af4c:	sub	w1, w0, w4
  41af50:	add	w1, w4, w1, lsr #1
  41af54:	lsr	w1, w1, w9
  41af58:	msub	w1, w1, w7, w0
  41af5c:	ubfiz	x4, x1, #4, #32
  41af60:	add	x3, x5, x4
  41af64:	ldr	w4, [x5, x4]
  41af68:	cmp	w4, #0x0
  41af6c:	ccmp	w4, w0, #0x4, ne  // ne = any
  41af70:	b.ne	41afa4 <nftw@plt+0x18424>  // b.any
  41af74:	mov	w0, #0x0                   	// #0
  41af78:	cbz	w4, 41af94 <nftw@plt+0x18414>
  41af7c:	ldr	x1, [x3, #8]
  41af80:	mov	w0, #0x1                   	// #1
  41af84:	ldr	w2, [x1]
  41af88:	ldr	x1, [x1, #8]
  41af8c:	str	w2, [x20]
  41af90:	str	x1, [x19]
  41af94:	ldp	x19, x20, [sp, #16]
  41af98:	ldp	x21, x22, [sp, #32]
  41af9c:	ldp	x29, x30, [sp], #48
  41afa0:	ret
  41afa4:	ldr	w3, [x2, #8]
  41afa8:	add	w4, w0, #0x1
  41afac:	sub	w2, w7, #0x2
  41afb0:	ldr	w7, [x6, #36]
  41afb4:	ldr	x10, [x6, #8]
  41afb8:	add	w7, w7, #0x1
  41afbc:	umull	x3, w0, w3
  41afc0:	lsr	x3, x3, #32
  41afc4:	sub	w0, w0, w3
  41afc8:	add	w0, w3, w0, lsr #1
  41afcc:	lsr	w0, w0, w9
  41afd0:	msub	w0, w0, w2, w4
  41afd4:	b	41aff8 <nftw@plt+0x18478>
  41afd8:	sub	w1, w2, w10
  41afdc:	add	w7, w7, #0x1
  41afe0:	ubfiz	x2, x1, #4, #32
  41afe4:	ldr	w4, [x5, x2]
  41afe8:	add	x3, x5, x2
  41afec:	cmp	w4, #0x0
  41aff0:	ccmp	w4, w8, #0x4, ne  // ne = any
  41aff4:	b.eq	41af74 <nftw@plt+0x183f4>  // b.none
  41aff8:	add	w2, w1, w0
  41affc:	str	w7, [x6, #36]
  41b000:	mov	x1, x2
  41b004:	cmp	x10, w2, uxtw
  41b008:	b.ls	41afd8 <nftw@plt+0x18458>  // b.plast
  41b00c:	lsl	x2, x2, #4
  41b010:	add	w7, w7, #0x1
  41b014:	b	41afe4 <nftw@plt+0x18464>
  41b018:	adrp	x2, 474000 <_obstack_memory_used@@Base+0x12bb8>
  41b01c:	adrp	x0, 474000 <_obstack_memory_used@@Base+0x12bb8>
  41b020:	add	x2, x2, #0x8b8
  41b024:	add	x0, x0, #0x1f8
  41b028:	mov	w1, #0x50e                 	// #1294
  41b02c:	bl	402bf0 <nftw@plt+0x70>
  41b030:	adrp	x2, 474000 <_obstack_memory_used@@Base+0x12bb8>
  41b034:	adrp	x0, 474000 <_obstack_memory_used@@Base+0x12bb8>
  41b038:	add	x2, x2, #0x8b8
  41b03c:	add	x0, x0, #0x1f8
  41b040:	mov	w1, #0x50d                 	// #1293
  41b044:	bl	402bf0 <nftw@plt+0x70>
  41b048:	stp	x29, x30, [sp, #-32]!
  41b04c:	mov	w1, w0
  41b050:	mov	x3, #0x0                   	// #0
  41b054:	mov	x29, sp
  41b058:	str	x19, [sp, #16]
  41b05c:	adrp	x19, 4a5000 <__environ@@GLIBC_2.17+0xa68>
  41b060:	mov	w2, #0x1                   	// #1
  41b064:	ldr	x0, [x19, #2336]
  41b068:	bl	436ea8 <nftw@plt+0x34328>
  41b06c:	mov	w1, w0
  41b070:	ldr	x0, [x19, #2336]
  41b074:	bl	4360f0 <nftw@plt+0x33570>
  41b078:	ldr	x19, [sp, #16]
  41b07c:	ldp	x29, x30, [sp], #32
  41b080:	ret
  41b084:	nop
  41b088:	stp	x29, x30, [sp, #-288]!
  41b08c:	mov	x29, sp
  41b090:	stp	x19, x20, [sp, #16]
  41b094:	stp	x23, x24, [sp, #48]
  41b098:	mov	x23, x0
  41b09c:	str	w4, [sp, #108]
  41b0a0:	str	w5, [sp, #116]
  41b0a4:	str	x7, [sp, #120]
  41b0a8:	stp	w6, w3, [sp, #128]
  41b0ac:	cbz	x7, 41b8dc <nftw@plt+0x18d5c>
  41b0b0:	mov	w19, w2
  41b0b4:	mov	x20, x1
  41b0b8:	add	x0, sp, #0xc0
  41b0bc:	bl	41e200 <nftw@plt+0x1b680>
  41b0c0:	stp	x21, x22, [sp, #32]
  41b0c4:	str	w19, [sp, #160]
  41b0c8:	cbz	x23, 41b88c <nftw@plt+0x18d0c>
  41b0cc:	cbnz	w19, 41b0f8 <nftw@plt+0x18578>
  41b0d0:	adrp	x21, 474000 <_obstack_memory_used@@Base+0x12bb8>
  41b0d4:	add	x21, x21, #0xad0
  41b0d8:	add	x0, sp, #0xc0
  41b0dc:	bl	41e238 <nftw@plt+0x1b6b8>
  41b0e0:	mov	x0, x21
  41b0e4:	ldp	x19, x20, [sp, #16]
  41b0e8:	ldp	x21, x22, [sp, #32]
  41b0ec:	ldp	x23, x24, [sp, #48]
  41b0f0:	ldp	x29, x30, [sp], #288
  41b0f4:	ret
  41b0f8:	mov	x0, x23
  41b0fc:	bl	425b28 <nftw@plt+0x22fa8>
  41b100:	ldrb	w0, [x0, #45]
  41b104:	cmp	w0, #0x2
  41b108:	b.ne	41b21c <nftw@plt+0x1869c>  // b.any
  41b10c:	adrp	x0, 4a5000 <__environ@@GLIBC_2.17+0xa68>
  41b110:	ldr	x0, [x0, #2336]
  41b114:	ldrb	w0, [x0, #116]
  41b118:	cbnz	w0, 41b244 <nftw@plt+0x186c4>
  41b11c:	add	x1, sp, #0xa0
  41b120:	mov	w0, #0x1                   	// #1
  41b124:	str	w0, [sp, #164]
  41b128:	str	x1, [sp, #168]
  41b12c:	cbz	x20, 41b2a0 <nftw@plt+0x18720>
  41b130:	ldr	w1, [sp, #160]
  41b134:	mov	x0, x20
  41b138:	add	x3, sp, #0xa8
  41b13c:	add	x2, sp, #0xa4
  41b140:	bl	41aec8 <nftw@plt+0x18348>
  41b144:	ldr	w0, [sp, #164]
  41b148:	sxtw	x21, w0
  41b14c:	cbnz	w0, 41b87c <nftw@plt+0x18cfc>
  41b150:	mov	x19, #0x0                   	// #0
  41b154:	mov	x20, #0x0                   	// #0
  41b158:	mov	x1, #0x0                   	// #0
  41b15c:	mov	x2, #0x0                   	// #0
  41b160:	ldr	w5, [sp, #132]
  41b164:	mov	x3, x21
  41b168:	mov	x0, x23
  41b16c:	add	x4, sp, #0xc0
  41b170:	bl	4214e8 <nftw@plt+0x1e968>
  41b174:	mov	x21, x0
  41b178:	cbz	x19, 41b18c <nftw@plt+0x1860c>
  41b17c:	ldrsb	w0, [x19, #3]
  41b180:	tbnz	w0, #31, 41b6dc <nftw@plt+0x18b5c>
  41b184:	mov	x0, x19
  41b188:	bl	402910 <free@plt>
  41b18c:	cbz	x20, 41b1c8 <nftw@plt+0x18648>
  41b190:	ldr	w0, [x20, #4]
  41b194:	cbz	w0, 41b1b8 <nftw@plt+0x18638>
  41b198:	add	x22, x20, #0x10
  41b19c:	mov	w19, #0x0                   	// #0
  41b1a0:	ldr	x0, [x22], #16
  41b1a4:	add	w19, w19, #0x1
  41b1a8:	bl	402910 <free@plt>
  41b1ac:	ldr	w0, [x20, #4]
  41b1b0:	cmp	w19, w0
  41b1b4:	b.cc	41b1a0 <nftw@plt+0x18620>  // b.lo, b.ul, b.last
  41b1b8:	ldrsb	w0, [x20, #3]
  41b1bc:	tbnz	w0, #31, 41b6e4 <nftw@plt+0x18b64>
  41b1c0:	mov	x0, x20
  41b1c4:	bl	402910 <free@plt>
  41b1c8:	cbnz	x21, 41b0d8 <nftw@plt+0x18558>
  41b1cc:	ldr	w1, [sp, #108]
  41b1d0:	ldr	w0, [sp, #200]
  41b1d4:	cmp	w1, w0
  41b1d8:	b.ge	41b250 <nftw@plt+0x186d0>  // b.tcont
  41b1dc:	ldr	w1, [sp, #116]
  41b1e0:	cmp	w1, w0
  41b1e4:	b.ge	41b278 <nftw@plt+0x186f8>  // b.tcont
  41b1e8:	ldr	w1, [sp, #128]
  41b1ec:	cmp	w1, w0
  41b1f0:	b.lt	41b6ec <nftw@plt+0x18b6c>  // b.tstop
  41b1f4:	add	x0, sp, #0xc0
  41b1f8:	adrp	x21, 474000 <_obstack_memory_used@@Base+0x12bb8>
  41b1fc:	bl	41e238 <nftw@plt+0x1b6b8>
  41b200:	add	x21, x21, #0xab8
  41b204:	mov	x0, x21
  41b208:	ldp	x19, x20, [sp, #16]
  41b20c:	ldp	x21, x22, [sp, #32]
  41b210:	ldp	x23, x24, [sp, #48]
  41b214:	ldp	x29, x30, [sp], #288
  41b218:	ret
  41b21c:	add	x0, sp, #0xc0
  41b220:	adrp	x21, 474000 <_obstack_memory_used@@Base+0x12bb8>
  41b224:	bl	41e238 <nftw@plt+0x1b6b8>
  41b228:	add	x21, x21, #0xae8
  41b22c:	mov	x0, x21
  41b230:	ldp	x19, x20, [sp, #16]
  41b234:	ldp	x21, x22, [sp, #32]
  41b238:	ldp	x23, x24, [sp, #48]
  41b23c:	ldp	x29, x30, [sp], #288
  41b240:	ret
  41b244:	adrp	x21, 474000 <_obstack_memory_used@@Base+0x12bb8>
  41b248:	add	x21, x21, #0xb08
  41b24c:	b	41b0d8 <nftw@plt+0x18558>
  41b250:	add	x0, sp, #0xc0
  41b254:	adrp	x21, 474000 <_obstack_memory_used@@Base+0x12bb8>
  41b258:	bl	41e238 <nftw@plt+0x1b6b8>
  41b25c:	add	x21, x21, #0xa88
  41b260:	mov	x0, x21
  41b264:	ldp	x19, x20, [sp, #16]
  41b268:	ldp	x21, x22, [sp, #32]
  41b26c:	ldp	x23, x24, [sp, #48]
  41b270:	ldp	x29, x30, [sp], #288
  41b274:	ret
  41b278:	add	x0, sp, #0xc0
  41b27c:	adrp	x21, 474000 <_obstack_memory_used@@Base+0x12bb8>
  41b280:	bl	41e238 <nftw@plt+0x1b6b8>
  41b284:	add	x21, x21, #0xaa0
  41b288:	mov	x0, x21
  41b28c:	ldp	x19, x20, [sp, #16]
  41b290:	ldp	x21, x22, [sp, #32]
  41b294:	ldp	x23, x24, [sp, #48]
  41b298:	ldp	x29, x30, [sp], #288
  41b29c:	ret
  41b2a0:	mov	w19, w0
  41b2a4:	mov	x1, #0x18                  	// #24
  41b2a8:	mov	x0, #0x0                   	// #0
  41b2ac:	bl	4615e8 <_obstack_memory_used@@Base+0x1a0>
  41b2b0:	mov	x20, x0
  41b2b4:	mov	w0, w19
  41b2b8:	str	x0, [x20]
  41b2bc:	ldr	w0, [sp, #164]
  41b2c0:	sxtw	x21, w0
  41b2c4:	cbz	w0, 41b86c <nftw@plt+0x18cec>
  41b2c8:	ubfiz	x1, x21, #4, #32
  41b2cc:	mov	x0, #0x0                   	// #0
  41b2d0:	add	x1, x1, #0x8
  41b2d4:	and	x21, x21, #0x7fffffff
  41b2d8:	stp	x25, x26, [sp, #64]
  41b2dc:	stp	x27, x28, [sp, #80]
  41b2e0:	bl	4615e8 <_obstack_memory_used@@Base+0x1a0>
  41b2e4:	mov	x19, x0
  41b2e8:	str	x21, [x0]
  41b2ec:	ldr	w0, [sp, #164]
  41b2f0:	cmp	w0, #0x0
  41b2f4:	b.le	41b4fc <nftw@plt+0x1897c>
  41b2f8:	adrp	x22, 4a5000 <__environ@@GLIBC_2.17+0xa68>
  41b2fc:	add	x22, x22, #0x920
  41b300:	mov	x28, #0x0                   	// #0
  41b304:	ldr	x1, [sp, #168]
  41b308:	ldr	x0, [x22]
  41b30c:	ldr	w1, [x1, x28, lsl #2]
  41b310:	bl	4360f0 <nftw@plt+0x33570>
  41b314:	mov	x21, x0
  41b318:	ldr	x2, [x22]
  41b31c:	lsr	x25, x0, #32
  41b320:	mov	w1, #0x80000000            	// #-2147483648
  41b324:	ldr	w0, [x2, #36]
  41b328:	cbz	w0, 41b33c <nftw@plt+0x187bc>
  41b32c:	sub	w0, w0, #0x1
  41b330:	ldr	x1, [x2, #24]
  41b334:	sbfiz	x0, x0, #5, #32
  41b338:	ldr	w1, [x1, x0]
  41b33c:	cmp	w21, w1
  41b340:	b.cc	41b514 <nftw@plt+0x18994>  // b.lo, b.ul, b.last
  41b344:	cmp	w21, w25
  41b348:	b.ne	41b844 <nftw@plt+0x18cc4>  // b.any
  41b34c:	add	x8, sp, #0xe0
  41b350:	mov	w0, w21
  41b354:	mov	w2, #0x1                   	// #1
  41b358:	mov	w1, #0x0                   	// #0
  41b35c:	bl	417f80 <nftw@plt+0x15400>
  41b360:	mov	w0, w25
  41b364:	mov	w2, #0x2                   	// #2
  41b368:	ldp	w27, w24, [sp, #232]
  41b36c:	add	x8, sp, #0x100
  41b370:	mov	w1, #0x0                   	// #0
  41b374:	ldr	x26, [sp, #224]
  41b378:	bl	417f80 <nftw@plt+0x15400>
  41b37c:	ldr	x0, [sp, #256]
  41b380:	ldr	w2, [sp, #268]
  41b384:	cmp	x26, x0
  41b388:	b.ne	41b7b8 <nftw@plt+0x18c38>  // b.any
  41b38c:	ldr	w0, [sp, #264]
  41b390:	cmp	w27, w0
  41b394:	b.ne	41b7cc <nftw@plt+0x18c4c>  // b.any
  41b398:	str	w2, [sp, #112]
  41b39c:	cmp	w24, w2
  41b3a0:	b.gt	41b7e0 <nftw@plt+0x18c60>
  41b3a4:	mov	w1, w27
  41b3a8:	mov	x0, x26
  41b3ac:	bl	419390 <nftw@plt+0x16810>
  41b3b0:	mov	x4, x1
  41b3b4:	cbz	x0, 41b7f4 <nftw@plt+0x18c74>
  41b3b8:	ldr	w2, [sp, #112]
  41b3bc:	sub	w3, w24, #0x1
  41b3c0:	sub	w2, w2, w24
  41b3c4:	sxtw	x5, w3
  41b3c8:	add	w2, w2, #0x1
  41b3cc:	sxtw	x1, w2
  41b3d0:	add	x6, x1, x5
  41b3d4:	cmp	x4, x6
  41b3d8:	b.cc	41b808 <nftw@plt+0x18c88>  // b.lo, b.ul, b.last
  41b3dc:	tbnz	w3, #31, 41b8c4 <nftw@plt+0x18d44>
  41b3e0:	cmp	w3, w4
  41b3e4:	b.ge	41b8ac <nftw@plt+0x18d2c>  // b.tcont
  41b3e8:	add	w3, w2, w3
  41b3ec:	cmp	w4, w3
  41b3f0:	b.lt	41b900 <nftw@plt+0x18d80>  // b.tstop
  41b3f4:	add	x0, x0, x5
  41b3f8:	str	w2, [sp, #112]
  41b3fc:	bl	461730 <_obstack_memory_used@@Base+0x2e8>
  41b400:	mov	x5, x0
  41b404:	ldr	w2, [sp, #112]
  41b408:	cbz	x20, 41b770 <nftw@plt+0x18bf0>
  41b40c:	ldp	w0, w3, [x20]
  41b410:	add	w8, w3, #0x1
  41b414:	ubfx	x0, x0, #0, #31
  41b418:	mov	w1, w8
  41b41c:	cmp	w0, w3
  41b420:	b.eq	41b53c <nftw@plt+0x189bc>  // b.none
  41b424:	mov	x4, #0x8                   	// #8
  41b428:	add	x4, x4, w3, uxtw #4
  41b42c:	add	x3, sp, #0xb0
  41b430:	add	x6, x20, x4
  41b434:	ldr	x0, [x22]
  41b438:	str	w1, [x20, #4]
  41b43c:	str	w2, [x20, x4]
  41b440:	mov	w1, w21
  41b444:	str	x5, [x6, #8]
  41b448:	mov	w2, #0x1                   	// #1
  41b44c:	bl	436ea8 <nftw@plt+0x34328>
  41b450:	ldr	x0, [x22]
  41b454:	add	x3, sp, #0xb8
  41b458:	mov	w1, w25
  41b45c:	mov	w2, #0x1                   	// #1
  41b460:	bl	436ea8 <nftw@plt+0x34328>
  41b464:	ldr	x0, [sp, #176]
  41b468:	cbz	x0, 41b7a4 <nftw@plt+0x18c24>
  41b46c:	ldr	x1, [sp, #184]
  41b470:	cbz	x1, 41b7a4 <nftw@plt+0x18c24>
  41b474:	cmp	x0, x1
  41b478:	ldr	x0, [x0, #8]
  41b47c:	b.eq	41b48c <nftw@plt+0x1890c>  // b.none
  41b480:	ldr	x2, [x1, #8]
  41b484:	cmp	x2, x0
  41b488:	b.ne	41b830 <nftw@plt+0x18cb0>  // b.any
  41b48c:	cmp	x26, x0
  41b490:	b.ne	41b81c <nftw@plt+0x18c9c>  // b.any
  41b494:	ldr	x0, [x22]
  41b498:	mov	w2, w27
  41b49c:	mov	w3, w24
  41b4a0:	bl	435d68 <nftw@plt+0x331e8>
  41b4a4:	mov	w1, w0
  41b4a8:	ldr	x2, [x22]
  41b4ac:	add	x0, sp, #0xd0
  41b4b0:	bl	4220f8 <nftw@plt+0x1f578>
  41b4b4:	cbz	x19, 41b6b8 <nftw@plt+0x18b38>
  41b4b8:	ldp	w0, w21, [x19]
  41b4bc:	add	w24, w21, #0x1
  41b4c0:	ubfx	x0, x0, #0, #31
  41b4c4:	mov	w1, w24
  41b4c8:	cmp	w0, w21
  41b4cc:	b.eq	41b598 <nftw@plt+0x18a18>  // b.none
  41b4d0:	mov	x0, #0x8                   	// #8
  41b4d4:	add	x28, x28, #0x1
  41b4d8:	add	x21, x0, w21, uxtw #4
  41b4dc:	ldr	w0, [sp, #164]
  41b4e0:	add	x2, x19, x21
  41b4e4:	ldp	x4, x3, [sp, #208]
  41b4e8:	str	w1, [x19, #4]
  41b4ec:	str	x4, [x19, x21]
  41b4f0:	cmp	w0, w28
  41b4f4:	str	x3, [x2, #8]
  41b4f8:	b.gt	41b304 <nftw@plt+0x18784>
  41b4fc:	sxtw	x21, w0
  41b500:	add	x1, x20, #0x8
  41b504:	add	x2, x19, #0x8
  41b508:	ldp	x25, x26, [sp, #64]
  41b50c:	ldp	x27, x28, [sp, #80]
  41b510:	b	41b160 <nftw@plt+0x185e0>
  41b514:	mov	w0, #0x5fffffff            	// #1610612735
  41b518:	cmp	w21, w0
  41b51c:	b.hi	41b858 <nftw@plt+0x18cd8>  // b.pmore
  41b520:	cmp	w25, w0
  41b524:	b.ls	41b34c <nftw@plt+0x187cc>  // b.plast
  41b528:	adrp	x21, 474000 <_obstack_memory_used@@Base+0x12bb8>
  41b52c:	add	x21, x21, #0x990
  41b530:	ldp	x25, x26, [sp, #64]
  41b534:	ldp	x27, x28, [sp, #80]
  41b538:	b	41b178 <nftw@plt+0x185f8>
  41b53c:	ldrsb	w0, [x20, #3]
  41b540:	tbnz	w0, #31, 41b5d4 <nftw@plt+0x18a54>
  41b544:	mov	w0, w3
  41b548:	str	x5, [sp, #144]
  41b54c:	str	w2, [sp, #152]
  41b550:	bl	416358 <nftw@plt+0x137d8>
  41b554:	ldr	w3, [x20, #4]
  41b558:	mov	w4, w0
  41b55c:	mov	x0, x20
  41b560:	str	w4, [sp, #112]
  41b564:	ubfiz	x1, x4, #4, #32
  41b568:	str	w3, [sp, #136]
  41b56c:	add	x1, x1, #0x8
  41b570:	bl	4615e8 <_obstack_memory_used@@Base+0x1a0>
  41b574:	mov	x20, x0
  41b578:	ldr	w3, [sp, #136]
  41b57c:	ldr	w4, [sp, #112]
  41b580:	ldr	w2, [sp, #152]
  41b584:	add	w1, w3, #0x1
  41b588:	and	w4, w4, #0x7fffffff
  41b58c:	stp	w4, w3, [x0]
  41b590:	ldr	x5, [sp, #144]
  41b594:	b	41b424 <nftw@plt+0x188a4>
  41b598:	ldrsb	w0, [x19, #3]
  41b59c:	tbnz	w0, #31, 41b658 <nftw@plt+0x18ad8>
  41b5a0:	mov	w0, w21
  41b5a4:	bl	416358 <nftw@plt+0x137d8>
  41b5a8:	mov	w24, w0
  41b5ac:	ldr	w21, [x19, #4]
  41b5b0:	mov	x0, x19
  41b5b4:	ubfiz	x1, x24, #4, #32
  41b5b8:	and	w24, w24, #0x7fffffff
  41b5bc:	add	x1, x1, #0x8
  41b5c0:	bl	4615e8 <_obstack_memory_used@@Base+0x1a0>
  41b5c4:	add	w1, w21, #0x1
  41b5c8:	mov	x19, x0
  41b5cc:	stp	w24, w21, [x0]
  41b5d0:	b	41b4d0 <nftw@plt+0x18950>
  41b5d4:	cmp	w8, #0x4
  41b5d8:	mov	w4, #0x4                   	// #4
  41b5dc:	csel	w4, w8, w4, cs  // cs = hs, nlast
  41b5e0:	mov	x0, #0x0                   	// #0
  41b5e4:	str	w4, [sp, #112]
  41b5e8:	ubfiz	x1, x4, #4, #32
  41b5ec:	str	w8, [sp, #136]
  41b5f0:	add	x1, x1, #0x8
  41b5f4:	str	x5, [sp, #144]
  41b5f8:	stp	w2, w3, [sp, #152]
  41b5fc:	bl	4615e8 <_obstack_memory_used@@Base+0x1a0>
  41b600:	ldr	w4, [sp, #112]
  41b604:	add	x1, x20, #0x8
  41b608:	ldp	w2, w3, [sp, #152]
  41b60c:	and	x6, x4, #0x7fffffff
  41b610:	mov	x4, x0
  41b614:	ldr	w8, [sp, #136]
  41b618:	ldr	x5, [sp, #144]
  41b61c:	str	x6, [x4], #8
  41b620:	cbz	w3, 41b648 <nftw@plt+0x18ac8>
  41b624:	sub	w6, w3, #0x1
  41b628:	mov	x7, #0x18                  	// #24
  41b62c:	add	x6, x7, w6, uxtw #4
  41b630:	add	x20, x20, x6
  41b634:	nop
  41b638:	ldp	x6, x7, [x1], #16
  41b63c:	stp	x6, x7, [x4], #16
  41b640:	cmp	x1, x20
  41b644:	b.ne	41b638 <nftw@plt+0x18ab8>  // b.any
  41b648:	mov	w1, w8
  41b64c:	mov	x20, x0
  41b650:	str	w3, [x0, #4]
  41b654:	b	41b424 <nftw@plt+0x188a4>
  41b658:	cmp	w24, #0x4
  41b65c:	mov	w25, #0x4                   	// #4
  41b660:	csel	w25, w24, w25, cs  // cs = hs, nlast
  41b664:	mov	x0, #0x0                   	// #0
  41b668:	add	x19, x19, #0x8
  41b66c:	ubfiz	x1, x25, #4, #32
  41b670:	and	x25, x25, #0x7fffffff
  41b674:	add	x1, x1, #0x8
  41b678:	bl	4615e8 <_obstack_memory_used@@Base+0x1a0>
  41b67c:	mov	x1, x0
  41b680:	str	x25, [x1], #8
  41b684:	cbz	w21, 41b6a8 <nftw@plt+0x18b28>
  41b688:	sub	w4, w21, #0x1
  41b68c:	mov	x2, #0x18                  	// #24
  41b690:	add	x4, x2, w4, uxtw #4
  41b694:	add	x4, x0, x4
  41b698:	ldp	x2, x3, [x19], #16
  41b69c:	stp	x2, x3, [x1], #16
  41b6a0:	cmp	x1, x4
  41b6a4:	b.ne	41b698 <nftw@plt+0x18b18>  // b.any
  41b6a8:	mov	w1, w24
  41b6ac:	mov	x19, x0
  41b6b0:	str	w21, [x0, #4]
  41b6b4:	b	41b4d0 <nftw@plt+0x18950>
  41b6b8:	mov	x1, #0x48                  	// #72
  41b6bc:	mov	x0, #0x0                   	// #0
  41b6c0:	bl	4615e8 <_obstack_memory_used@@Base+0x1a0>
  41b6c4:	mov	x19, x0
  41b6c8:	mov	w21, #0x0                   	// #0
  41b6cc:	mov	x0, #0x4                   	// #4
  41b6d0:	add	w1, w21, #0x1
  41b6d4:	str	x0, [x19]
  41b6d8:	b	41b4d0 <nftw@plt+0x18950>
  41b6dc:	str	wzr, [x19, #4]
  41b6e0:	b	41b18c <nftw@plt+0x1860c>
  41b6e4:	str	wzr, [x20, #4]
  41b6e8:	b	41b1c8 <nftw@plt+0x18648>
  41b6ec:	ldr	w0, [sp, #108]
  41b6f0:	ldr	x2, [sp, #192]
  41b6f4:	sbfiz	x4, x0, #3, #32
  41b6f8:	ldr	w1, [sp, #116]
  41b6fc:	ldr	w3, [sp, #128]
  41b700:	adrp	x0, 4a5000 <__environ@@GLIBC_2.17+0xa68>
  41b704:	sbfiz	x5, x1, #3, #32
  41b708:	ldr	w1, [x2, x4]
  41b70c:	ldr	x0, [x0, #2336]
  41b710:	add	x6, x2, w3, sxtw #3
  41b714:	ldr	w19, [x2, x5]
  41b718:	ldr	w22, [x6, #4]
  41b71c:	bl	4361a0 <nftw@plt+0x33620>
  41b720:	mov	w20, w0
  41b724:	adrp	x0, 4a5000 <__environ@@GLIBC_2.17+0xa68>
  41b728:	mov	w1, w19
  41b72c:	ldr	x0, [x0, #2336]
  41b730:	bl	4360f0 <nftw@plt+0x33570>
  41b734:	mov	x19, x0
  41b738:	adrp	x0, 4a5000 <__environ@@GLIBC_2.17+0xa68>
  41b73c:	mov	w1, w22
  41b740:	ldr	x0, [x0, #2336]
  41b744:	bl	4360f0 <nftw@plt+0x33570>
  41b748:	mov	x2, x0
  41b74c:	adrp	x0, 4a5000 <__environ@@GLIBC_2.17+0xa68>
  41b750:	mov	w1, w20
  41b754:	bfxil	x2, x19, #0, #32
  41b758:	mov	x3, #0x0                   	// #0
  41b75c:	ldr	x0, [x0, #2336]
  41b760:	bl	435ed0 <nftw@plt+0x33350>
  41b764:	ldr	x1, [sp, #120]
  41b768:	str	w0, [x1]
  41b76c:	b	41b0d8 <nftw@plt+0x18558>
  41b770:	mov	x1, #0x48                  	// #72
  41b774:	mov	x0, #0x0                   	// #0
  41b778:	str	w2, [sp, #112]
  41b77c:	str	x5, [sp, #136]
  41b780:	bl	4615e8 <_obstack_memory_used@@Base+0x1a0>
  41b784:	mov	x20, x0
  41b788:	mov	w3, #0x0                   	// #0
  41b78c:	mov	x0, #0x4                   	// #4
  41b790:	ldr	w2, [sp, #112]
  41b794:	add	w1, w3, #0x1
  41b798:	str	x0, [x20]
  41b79c:	ldr	x5, [sp, #136]
  41b7a0:	b	41b424 <nftw@plt+0x188a4>
  41b7a4:	adrp	x21, 474000 <_obstack_memory_used@@Base+0x12bb8>
  41b7a8:	add	x21, x21, #0x8f0
  41b7ac:	ldp	x25, x26, [sp, #64]
  41b7b0:	ldp	x27, x28, [sp, #80]
  41b7b4:	b	41b178 <nftw@plt+0x185f8>
  41b7b8:	adrp	x21, 474000 <_obstack_memory_used@@Base+0x12bb8>
  41b7bc:	add	x21, x21, #0x9c8
  41b7c0:	ldp	x25, x26, [sp, #64]
  41b7c4:	ldp	x27, x28, [sp, #80]
  41b7c8:	b	41b178 <nftw@plt+0x185f8>
  41b7cc:	adrp	x21, 474000 <_obstack_memory_used@@Base+0x12bb8>
  41b7d0:	add	x21, x21, #0x9f0
  41b7d4:	ldp	x25, x26, [sp, #64]
  41b7d8:	ldp	x27, x28, [sp, #80]
  41b7dc:	b	41b178 <nftw@plt+0x185f8>
  41b7e0:	adrp	x21, 474000 <_obstack_memory_used@@Base+0x12bb8>
  41b7e4:	add	x21, x21, #0xa18
  41b7e8:	ldp	x25, x26, [sp, #64]
  41b7ec:	ldp	x27, x28, [sp, #80]
  41b7f0:	b	41b178 <nftw@plt+0x185f8>
  41b7f4:	adrp	x21, 474000 <_obstack_memory_used@@Base+0x12bb8>
  41b7f8:	add	x21, x21, #0xa38
  41b7fc:	ldp	x25, x26, [sp, #64]
  41b800:	ldp	x27, x28, [sp, #80]
  41b804:	b	41b178 <nftw@plt+0x185f8>
  41b808:	adrp	x21, 474000 <_obstack_memory_used@@Base+0x12bb8>
  41b80c:	add	x21, x21, #0x8d8
  41b810:	ldp	x25, x26, [sp, #64]
  41b814:	ldp	x27, x28, [sp, #80]
  41b818:	b	41b178 <nftw@plt+0x185f8>
  41b81c:	adrp	x21, 474000 <_obstack_memory_used@@Base+0x12bb8>
  41b820:	add	x21, x21, #0xa58
  41b824:	ldp	x25, x26, [sp, #64]
  41b828:	ldp	x27, x28, [sp, #80]
  41b82c:	b	41b178 <nftw@plt+0x185f8>
  41b830:	adrp	x21, 474000 <_obstack_memory_used@@Base+0x12bb8>
  41b834:	add	x21, x21, #0x910
  41b838:	ldp	x25, x26, [sp, #64]
  41b83c:	ldp	x27, x28, [sp, #80]
  41b840:	b	41b178 <nftw@plt+0x185f8>
  41b844:	adrp	x21, 474000 <_obstack_memory_used@@Base+0x12bb8>
  41b848:	add	x21, x21, #0x948
  41b84c:	ldp	x25, x26, [sp, #64]
  41b850:	ldp	x27, x28, [sp, #80]
  41b854:	b	41b178 <nftw@plt+0x185f8>
  41b858:	adrp	x21, 474000 <_obstack_memory_used@@Base+0x12bb8>
  41b85c:	add	x21, x21, #0x958
  41b860:	ldp	x25, x26, [sp, #64]
  41b864:	ldp	x27, x28, [sp, #80]
  41b868:	b	41b178 <nftw@plt+0x185f8>
  41b86c:	add	x1, x20, #0x8
  41b870:	mov	x19, #0x0                   	// #0
  41b874:	mov	x2, #0x0                   	// #0
  41b878:	b	41b160 <nftw@plt+0x185e0>
  41b87c:	ubfiz	x1, x21, #4, #32
  41b880:	and	w19, w0, #0x7fffffff
  41b884:	add	x1, x1, #0x8
  41b888:	b	41b2a8 <nftw@plt+0x18728>
  41b88c:	adrp	x2, 474000 <_obstack_memory_used@@Base+0x12bb8>
  41b890:	adrp	x0, 474000 <_obstack_memory_used@@Base+0x12bb8>
  41b894:	add	x2, x2, #0xb40
  41b898:	add	x0, x0, #0x1f8
  41b89c:	mov	w1, #0x551                 	// #1361
  41b8a0:	stp	x25, x26, [sp, #64]
  41b8a4:	stp	x27, x28, [sp, #80]
  41b8a8:	bl	402bf0 <nftw@plt+0x70>
  41b8ac:	adrp	x2, 473000 <_obstack_memory_used@@Base+0x11bb8>
  41b8b0:	adrp	x0, 473000 <_obstack_memory_used@@Base+0x11bb8>
  41b8b4:	add	x2, x2, #0xdb8
  41b8b8:	add	x0, x0, #0xdc0
  41b8bc:	mov	w1, #0x45                  	// #69
  41b8c0:	bl	402bf0 <nftw@plt+0x70>
  41b8c4:	adrp	x2, 473000 <_obstack_memory_used@@Base+0x11bb8>
  41b8c8:	adrp	x0, 473000 <_obstack_memory_used@@Base+0x11bb8>
  41b8cc:	add	x2, x2, #0xdb8
  41b8d0:	add	x0, x0, #0xdc0
  41b8d4:	mov	w1, #0x44                  	// #68
  41b8d8:	bl	402bf0 <nftw@plt+0x70>
  41b8dc:	adrp	x2, 474000 <_obstack_memory_used@@Base+0x12bb8>
  41b8e0:	adrp	x0, 474000 <_obstack_memory_used@@Base+0x12bb8>
  41b8e4:	add	x2, x2, #0xb20
  41b8e8:	add	x0, x0, #0x1f8
  41b8ec:	mov	w1, #0x5fa                 	// #1530
  41b8f0:	stp	x21, x22, [sp, #32]
  41b8f4:	stp	x25, x26, [sp, #64]
  41b8f8:	stp	x27, x28, [sp, #80]
  41b8fc:	bl	402bf0 <nftw@plt+0x70>
  41b900:	adrp	x2, 473000 <_obstack_memory_used@@Base+0x11bb8>
  41b904:	adrp	x0, 473000 <_obstack_memory_used@@Base+0x11bb8>
  41b908:	add	x2, x2, #0xdb8
  41b90c:	add	x0, x0, #0xdc0
  41b910:	mov	w1, #0x47                  	// #71
  41b914:	bl	402bf0 <nftw@plt+0x70>
  41b918:	stp	x29, x30, [sp, #-64]!
  41b91c:	cmp	w1, #0x1
  41b920:	mov	x29, sp
  41b924:	stp	x19, x20, [sp, #16]
  41b928:	stp	x21, x22, [sp, #32]
  41b92c:	stp	x23, x24, [sp, #48]
  41b930:	b.le	41bae4 <nftw@plt+0x18f64>
  41b934:	mov	x23, x2
  41b938:	cbz	x2, 41bacc <nftw@plt+0x18f4c>
  41b93c:	adrp	x20, 4a5000 <__environ@@GLIBC_2.17+0xa68>
  41b940:	mov	w19, w1
  41b944:	mov	x24, x0
  41b948:	ldr	w1, [x23]
  41b94c:	ldr	x0, [x20, #2336]
  41b950:	mov	x3, #0x0                   	// #0
  41b954:	mov	w2, #0x1                   	// #1
  41b958:	bl	436ea8 <nftw@plt+0x34328>
  41b95c:	mov	w1, w0
  41b960:	ldr	x0, [x20, #2336]
  41b964:	bl	4360f0 <nftw@plt+0x33570>
  41b968:	mov	x22, x0
  41b96c:	mov	x3, #0x1                   	// #1
  41b970:	mov	x2, #0x0                   	// #0
  41b974:	mov	x1, #0x0                   	// #0
  41b978:	mov	x0, #0x10                  	// #16
  41b97c:	bl	41c1c8 <nftw@plt+0x19648>
  41b980:	mov	x20, x0
  41b984:	sbfiz	x0, x19, #2, #32
  41b988:	mov	x3, #0x0                   	// #0
  41b98c:	mov	x2, #0x0                   	// #0
  41b990:	mov	x1, #0x0                   	// #0
  41b994:	str	w19, [x20]
  41b998:	sub	w19, w19, #0x1
  41b99c:	add	x19, x19, #0x1
  41b9a0:	mov	w21, w22
  41b9a4:	bl	41c1c8 <nftw@plt+0x19648>
  41b9a8:	str	x0, [x20, #8]
  41b9ac:	lsl	x2, x19, #2
  41b9b0:	mov	x1, x23
  41b9b4:	bl	402490 <memcpy@plt>
  41b9b8:	ldr	x19, [x24]
  41b9bc:	ldp	x2, x1, [x19, #8]
  41b9c0:	add	x0, x2, x2, lsl #1
  41b9c4:	cmp	x0, x1, lsl #2
  41b9c8:	b.ls	41babc <nftw@plt+0x18f3c>  // b.plast
  41b9cc:	ldr	w0, [x19, #40]
  41b9d0:	adrp	x4, 474000 <_obstack_memory_used@@Base+0x12bb8>
  41b9d4:	ldr	w1, [x19, #32]
  41b9d8:	add	x4, x4, #0xc68
  41b9dc:	ldr	x3, [x19]
  41b9e0:	lsl	x0, x0, #4
  41b9e4:	add	x7, x4, x0
  41b9e8:	add	w1, w1, #0x1
  41b9ec:	str	w1, [x19, #32]
  41b9f0:	ldr	w1, [x7, #4]
  41b9f4:	ldr	w5, [x4, x0]
  41b9f8:	ldr	w9, [x7, #12]
  41b9fc:	umull	x1, w22, w1
  41ba00:	lsr	x0, x1, #32
  41ba04:	sub	w1, w22, w0
  41ba08:	add	w1, w0, w1, lsr #1
  41ba0c:	lsr	w1, w1, w9
  41ba10:	msub	w1, w1, w5, w22
  41ba14:	ubfiz	x8, x1, #4, #32
  41ba18:	add	x6, x3, x8
  41ba1c:	ldr	w8, [x3, x8]
  41ba20:	cbz	w8, 41ba94 <nftw@plt+0x18f14>
  41ba24:	cmp	w22, w8
  41ba28:	b.eq	41baa4 <nftw@plt+0x18f24>  // b.none
  41ba2c:	ldr	w0, [x7, #8]
  41ba30:	add	w4, w22, #0x1
  41ba34:	sub	w7, w5, #0x2
  41ba38:	ldr	w5, [x19, #36]
  41ba3c:	add	w5, w5, #0x1
  41ba40:	umull	x0, w22, w0
  41ba44:	lsr	x6, x0, #32
  41ba48:	sub	w0, w22, w6
  41ba4c:	add	w0, w6, w0, lsr #1
  41ba50:	lsr	w0, w0, w9
  41ba54:	msub	w4, w0, w7, w4
  41ba58:	b	41ba68 <nftw@plt+0x18ee8>
  41ba5c:	add	w5, w5, #0x1
  41ba60:	cmp	w21, w0
  41ba64:	b.eq	41baa4 <nftw@plt+0x18f24>  // b.none
  41ba68:	add	w0, w1, w4
  41ba6c:	str	w5, [x19, #36]
  41ba70:	mov	x1, x0
  41ba74:	cmp	x2, w0, uxtw
  41ba78:	b.hi	41ba84 <nftw@plt+0x18f04>  // b.pmore
  41ba7c:	sub	w0, w0, w2
  41ba80:	mov	x1, x0
  41ba84:	lsl	x0, x0, #4
  41ba88:	add	x6, x3, x0
  41ba8c:	ldr	w0, [x3, x0]
  41ba90:	cbnz	w0, 41ba5c <nftw@plt+0x18edc>
  41ba94:	ldr	x0, [x19, #16]
  41ba98:	add	x0, x0, #0x1
  41ba9c:	str	x0, [x19, #16]
  41baa0:	str	w22, [x6]
  41baa4:	ldp	x21, x22, [sp, #32]
  41baa8:	ldp	x23, x24, [sp, #48]
  41baac:	str	x20, [x6, #8]
  41bab0:	ldp	x19, x20, [sp, #16]
  41bab4:	ldp	x29, x30, [sp], #64
  41bab8:	ret
  41babc:	mov	x0, x19
  41bac0:	bl	41bb30 <nftw@plt+0x18fb0>
  41bac4:	ldr	x2, [x19, #8]
  41bac8:	b	41b9cc <nftw@plt+0x18e4c>
  41bacc:	adrp	x2, 474000 <_obstack_memory_used@@Base+0x12bb8>
  41bad0:	adrp	x0, 474000 <_obstack_memory_used@@Base+0x12bb8>
  41bad4:	add	x2, x2, #0xb60
  41bad8:	add	x0, x0, #0x1f8
  41badc:	mov	w1, #0x4f7                 	// #1271
  41bae0:	bl	402bf0 <nftw@plt+0x70>
  41bae4:	adrp	x2, 474000 <_obstack_memory_used@@Base+0x12bb8>
  41bae8:	adrp	x0, 474000 <_obstack_memory_used@@Base+0x12bb8>
  41baec:	add	x2, x2, #0xb60
  41baf0:	add	x0, x0, #0x1f8
  41baf4:	mov	w1, #0x4f6                 	// #1270
  41baf8:	bl	402bf0 <nftw@plt+0x70>
  41bafc:	nop
  41bb00:	ldr	x1, [x0, #8]
  41bb04:	sub	x2, x1, #0x1
  41bb08:	cbz	x1, 41bb1c <nftw@plt+0x18f9c>
  41bb0c:	nop
  41bb10:	sub	x2, x2, #0x1
  41bb14:	cmp	x1, x2
  41bb18:	b.hi	41bb10 <nftw@plt+0x18f90>  // b.pmore
  41bb1c:	ldrb	w1, [x0, #44]
  41bb20:	ldr	x0, [x0]
  41bb24:	cbnz	w1, 41bb2c <nftw@plt+0x18fac>
  41bb28:	b	402910 <free@plt>
  41bb2c:	b	41c228 <nftw@plt+0x196a8>
  41bb30:	stp	x29, x30, [sp, #-64]!
  41bb34:	mov	x29, sp
  41bb38:	stp	x19, x20, [sp, #16]
  41bb3c:	mov	x20, x0
  41bb40:	ldp	x1, x0, [x0, #16]
  41bb44:	stp	x21, x22, [sp, #32]
  41bb48:	ldp	x22, x19, [x20]
  41bb4c:	str	x23, [sp, #48]
  41bb50:	ldr	w23, [x20, #40]
  41bb54:	sub	x1, x1, x0
  41bb58:	lsl	x0, x1, #1
  41bb5c:	cmp	x19, x1, lsl #1
  41bb60:	add	x21, x22, x19, lsl #4
  41bb64:	b.cc	41bc98 <nftw@plt+0x19118>  // b.lo, b.ul, b.last
  41bb68:	lsl	w1, w1, #3
  41bb6c:	mov	x2, #0x20                  	// #32
  41bb70:	cmp	x1, x2
  41bb74:	csel	x1, x1, x2, cs  // cs = hs, nlast
  41bb78:	cmp	x19, x1
  41bb7c:	b.hi	41bc98 <nftw@plt+0x19118>  // b.pmore
  41bb80:	ldrb	w0, [x20, #44]
  41bb84:	cbnz	w0, 41bcb8 <nftw@plt+0x19138>
  41bb88:	mov	x0, x19
  41bb8c:	mov	x1, #0x10                  	// #16
  41bb90:	bl	461598 <_obstack_memory_used@@Base+0x150>
  41bb94:	mov	x1, x0
  41bb98:	add	x2, x0, x19, lsl #4
  41bb9c:	cbz	x19, 41bbac <nftw@plt+0x1902c>
  41bba0:	str	wzr, [x1], #16
  41bba4:	cmp	x1, x2
  41bba8:	b.ne	41bba0 <nftw@plt+0x19020>  // b.any
  41bbac:	ldp	x1, x2, [x20, #16]
  41bbb0:	ubfiz	x4, x23, #4, #32
  41bbb4:	adrp	x7, 474000 <_obstack_memory_used@@Base+0x12bb8>
  41bbb8:	add	x7, x7, #0xc68
  41bbbc:	mov	x3, x22
  41bbc0:	add	x7, x7, x4
  41bbc4:	stp	x0, x19, [x20]
  41bbc8:	sub	x1, x1, x2
  41bbcc:	stp	x1, xzr, [x20, #16]
  41bbd0:	str	w23, [x20, #40]
  41bbd4:	b	41bbe4 <nftw@plt+0x19064>
  41bbd8:	add	x3, x3, #0x10
  41bbdc:	cmp	x21, x3
  41bbe0:	b.ls	41bc78 <nftw@plt+0x190f8>  // b.plast
  41bbe4:	ldr	w2, [x3]
  41bbe8:	cbz	w2, 41bbd8 <nftw@plt+0x19058>
  41bbec:	ldp	w5, w1, [x7]
  41bbf0:	ldr	w8, [x7, #12]
  41bbf4:	umull	x1, w2, w1
  41bbf8:	lsr	x4, x1, #32
  41bbfc:	sub	w1, w2, w4
  41bc00:	add	w1, w4, w1, lsr #1
  41bc04:	lsr	w1, w1, w8
  41bc08:	msub	w1, w1, w5, w2
  41bc0c:	ubfiz	x4, x1, #4, #32
  41bc10:	add	x6, x0, x4
  41bc14:	ldr	w4, [x0, x4]
  41bc18:	cbz	w4, 41bc64 <nftw@plt+0x190e4>
  41bc1c:	ldr	w4, [x7, #8]
  41bc20:	add	w6, w2, #0x1
  41bc24:	sub	w5, w5, #0x2
  41bc28:	umull	x4, w2, w4
  41bc2c:	lsr	x4, x4, #32
  41bc30:	sub	w2, w2, w4
  41bc34:	add	w2, w4, w2, lsr #1
  41bc38:	lsr	w2, w2, w8
  41bc3c:	msub	w2, w2, w5, w6
  41bc40:	add	w4, w1, w2
  41bc44:	mov	x1, x4
  41bc48:	cmp	x19, w4, uxtw
  41bc4c:	b.hi	41bce8 <nftw@plt+0x19168>  // b.pmore
  41bc50:	sub	w1, w4, w19
  41bc54:	ubfiz	x4, x1, #4, #32
  41bc58:	add	x6, x0, x4
  41bc5c:	ldr	w4, [x0, x4]
  41bc60:	cbnz	w4, 41bc40 <nftw@plt+0x190c0>
  41bc64:	ldp	x4, x5, [x3]
  41bc68:	stp	x4, x5, [x6]
  41bc6c:	add	x3, x3, #0x10
  41bc70:	cmp	x21, x3
  41bc74:	b.hi	41bbe4 <nftw@plt+0x19064>  // b.pmore
  41bc78:	ldrb	w0, [x20, #44]
  41bc7c:	cbnz	w0, 41bd04 <nftw@plt+0x19184>
  41bc80:	mov	x0, x22
  41bc84:	ldp	x19, x20, [sp, #16]
  41bc88:	ldp	x21, x22, [sp, #32]
  41bc8c:	ldr	x23, [sp, #48]
  41bc90:	ldp	x29, x30, [sp], #64
  41bc94:	b	402910 <free@plt>
  41bc98:	bl	41bd20 <nftw@plt+0x191a0>
  41bc9c:	mov	w23, w0
  41bca0:	adrp	x1, 474000 <_obstack_memory_used@@Base+0x12bb8>
  41bca4:	add	x1, x1, #0xc68
  41bca8:	ubfiz	x0, x23, #4, #32
  41bcac:	ldr	w19, [x1, x0]
  41bcb0:	ldrb	w0, [x20, #44]
  41bcb4:	cbz	w0, 41bb88 <nftw@plt+0x19008>
  41bcb8:	lsl	x0, x19, #4
  41bcbc:	mov	x3, #0x0                   	// #0
  41bcc0:	mov	x2, #0x0                   	// #0
  41bcc4:	mov	x1, #0x0                   	// #0
  41bcc8:	bl	41c1f0 <nftw@plt+0x19670>
  41bccc:	cbnz	x0, 41bb94 <nftw@plt+0x19014>
  41bcd0:	adrp	x2, 474000 <_obstack_memory_used@@Base+0x12bb8>
  41bcd4:	adrp	x0, 474000 <_obstack_memory_used@@Base+0x12bb8>
  41bcd8:	add	x2, x2, #0x1a8
  41bcdc:	add	x0, x0, #0x1b8
  41bce0:	mov	w1, #0x2b5                 	// #693
  41bce4:	bl	402bf0 <nftw@plt+0x70>
  41bce8:	lsl	x4, x4, #4
  41bcec:	add	x6, x0, x4
  41bcf0:	ldr	w4, [x0, x4]
  41bcf4:	cbnz	w4, 41bc40 <nftw@plt+0x190c0>
  41bcf8:	ldp	x4, x5, [x3]
  41bcfc:	stp	x4, x5, [x6]
  41bd00:	b	41bc6c <nftw@plt+0x190ec>
  41bd04:	mov	x0, x22
  41bd08:	ldp	x19, x20, [sp, #16]
  41bd0c:	ldp	x21, x22, [sp, #32]
  41bd10:	ldr	x23, [sp, #48]
  41bd14:	ldp	x29, x30, [sp], #64
  41bd18:	b	41c228 <nftw@plt+0x196a8>
  41bd1c:	nop
  41bd20:	mov	x4, x0
  41bd24:	adrp	x5, 474000 <_obstack_memory_used@@Base+0x12bb8>
  41bd28:	mov	w0, #0x1e                  	// #30
  41bd2c:	add	x5, x5, #0xc68
  41bd30:	mov	w2, #0x0                   	// #0
  41bd34:	b	41bd54 <nftw@plt+0x191d4>
  41bd38:	sub	w1, w0, w2
  41bd3c:	add	w1, w2, w1, lsr #1
  41bd40:	ubfiz	x3, x1, #4, #32
  41bd44:	ldr	w3, [x5, x3]
  41bd48:	cmp	x3, x4
  41bd4c:	b.cc	41bd70 <nftw@plt+0x191f0>  // b.lo, b.ul, b.last
  41bd50:	mov	w0, w1
  41bd54:	cmp	w0, w2
  41bd58:	b.ne	41bd38 <nftw@plt+0x191b8>  // b.any
  41bd5c:	ubfiz	x1, x0, #4, #32
  41bd60:	ldr	w1, [x5, x1]
  41bd64:	cmp	x1, x4
  41bd68:	b.cc	41bd78 <nftw@plt+0x191f8>  // b.lo, b.ul, b.last
  41bd6c:	ret
  41bd70:	add	w2, w1, #0x1
  41bd74:	b	41bd54 <nftw@plt+0x191d4>
  41bd78:	stp	x29, x30, [sp, #-16]!
  41bd7c:	adrp	x2, 474000 <_obstack_memory_used@@Base+0x12bb8>
  41bd80:	adrp	x0, 474000 <_obstack_memory_used@@Base+0x12bb8>
  41bd84:	mov	x29, sp
  41bd88:	add	x2, x2, #0xc30
  41bd8c:	add	x0, x0, #0xc50
  41bd90:	mov	w1, #0x60                  	// #96
  41bd94:	bl	402bf0 <nftw@plt+0x70>
  41bd98:	stp	x29, x30, [sp, #-64]!
  41bd9c:	mov	x29, sp
  41bda0:	stp	x19, x20, [sp, #16]
  41bda4:	adrp	x19, 4a5000 <__environ@@GLIBC_2.17+0xa68>
  41bda8:	add	x19, x19, #0x940
  41bdac:	ldarb	w0, [x19]
  41bdb0:	tbz	w0, #0, 41bdc4 <nftw@plt+0x19244>
  41bdb4:	add	x0, x19, #0x8
  41bdb8:	ldp	x19, x20, [sp, #16]
  41bdbc:	ldp	x29, x30, [sp], #64
  41bdc0:	ret
  41bdc4:	mov	x0, x19
  41bdc8:	bl	461b10 <_obstack_memory_used@@Base+0x6c8>
  41bdcc:	cbz	w0, 41bdb4 <nftw@plt+0x19234>
  41bdd0:	mov	x0, #0x30                  	// #48
  41bdd4:	stp	x21, x22, [sp, #32]
  41bdd8:	adrp	x20, 474000 <_obstack_memory_used@@Base+0x12bb8>
  41bddc:	stp	x23, x24, [sp, #48]
  41bde0:	bl	461d40 <_obstack_memory_used@@Base+0x8f8>
  41bde4:	add	x20, x20, #0xc68
  41bde8:	mov	x23, x0
  41bdec:	mov	w2, #0x1e                  	// #30
  41bdf0:	mov	w21, #0x0                   	// #0
  41bdf4:	stp	xzr, xzr, [x0, #16]
  41bdf8:	str	xzr, [x0, #32]
  41bdfc:	strb	wzr, [x0, #44]
  41be00:	b	41be20 <nftw@plt+0x192a0>
  41be04:	sub	w1, w2, w21
  41be08:	add	w1, w21, w1, lsr #1
  41be0c:	ubfiz	x3, x1, #4, #32
  41be10:	ldr	w3, [x20, x3]
  41be14:	cmp	w3, #0xc
  41be18:	b.ls	41bfe4 <nftw@plt+0x19464>  // b.plast
  41be1c:	mov	w2, w1
  41be20:	cmp	w2, w21
  41be24:	b.ne	41be04 <nftw@plt+0x19284>  // b.any
  41be28:	ubfiz	x0, x21, #4, #32
  41be2c:	ldr	w22, [x20, x0]
  41be30:	cmp	w22, #0xc
  41be34:	mov	w24, w22
  41be38:	b.ls	41bff4 <nftw@plt+0x19474>  // b.plast
  41be3c:	mov	x0, x24
  41be40:	mov	x1, #0x10                  	// #16
  41be44:	bl	461598 <_obstack_memory_used@@Base+0x150>
  41be48:	mov	x3, x0
  41be4c:	cbz	x24, 41be64 <nftw@plt+0x192e4>
  41be50:	add	x2, x0, w22, uxtw #4
  41be54:	mov	x1, x0
  41be58:	str	xzr, [x1], #16
  41be5c:	cmp	x1, x2
  41be60:	b.ne	41be58 <nftw@plt+0x192d8>  // b.any
  41be64:	stp	x3, x24, [x23]
  41be68:	mov	x0, #0x30                  	// #48
  41be6c:	mov	w22, #0x0                   	// #0
  41be70:	str	w21, [x23, #40]
  41be74:	str	x23, [x19, #48]
  41be78:	bl	461d40 <_obstack_memory_used@@Base+0x8f8>
  41be7c:	mov	x23, x0
  41be80:	mov	w2, #0x1e                  	// #30
  41be84:	stp	xzr, xzr, [x0, #16]
  41be88:	str	xzr, [x0, #32]
  41be8c:	strb	wzr, [x0, #44]
  41be90:	b	41beb0 <nftw@plt+0x19330>
  41be94:	sub	w1, w2, w22
  41be98:	add	w1, w22, w1, lsr #1
  41be9c:	ubfiz	x3, x1, #4, #32
  41bea0:	ldr	w3, [x20, x3]
  41bea4:	cmp	w3, #0xc
  41bea8:	b.ls	41bfec <nftw@plt+0x1946c>  // b.plast
  41beac:	mov	w2, w1
  41beb0:	cmp	w2, w22
  41beb4:	b.ne	41be94 <nftw@plt+0x19314>  // b.any
  41beb8:	ubfiz	x0, x22, #4, #32
  41bebc:	ldr	w21, [x20, x0]
  41bec0:	cmp	w21, #0xc
  41bec4:	mov	w24, w21
  41bec8:	b.ls	41bff4 <nftw@plt+0x19474>  // b.plast
  41becc:	mov	x0, x24
  41bed0:	mov	x1, #0x18                  	// #24
  41bed4:	bl	461598 <_obstack_memory_used@@Base+0x150>
  41bed8:	mov	x3, x0
  41bedc:	cbz	x24, 41befc <nftw@plt+0x1937c>
  41bee0:	mov	w2, #0x18                  	// #24
  41bee4:	mov	x1, x0
  41bee8:	umaddl	x2, w21, w2, x0
  41beec:	nop
  41bef0:	str	xzr, [x1], #24
  41bef4:	cmp	x2, x1
  41bef8:	b.ne	41bef0 <nftw@plt+0x19370>  // b.any
  41befc:	stp	x3, x24, [x23]
  41bf00:	mov	x0, #0x30                  	// #48
  41bf04:	mov	w21, #0x0                   	// #0
  41bf08:	str	w22, [x23, #40]
  41bf0c:	str	x23, [x19, #56]
  41bf10:	bl	461d40 <_obstack_memory_used@@Base+0x8f8>
  41bf14:	mov	x22, x0
  41bf18:	mov	w2, #0x1e                  	// #30
  41bf1c:	stp	xzr, xzr, [x0, #16]
  41bf20:	str	xzr, [x0, #32]
  41bf24:	strb	wzr, [x0, #44]
  41bf28:	b	41bf48 <nftw@plt+0x193c8>
  41bf2c:	sub	w1, w2, w21
  41bf30:	add	w1, w21, w1, lsr #1
  41bf34:	ubfiz	x3, x1, #4, #32
  41bf38:	ldr	w3, [x20, x3]
  41bf3c:	cmp	w3, #0xc
  41bf40:	b.ls	41bfdc <nftw@plt+0x1945c>  // b.plast
  41bf44:	mov	w2, w1
  41bf48:	cmp	w2, w21
  41bf4c:	b.ne	41bf2c <nftw@plt+0x193ac>  // b.any
  41bf50:	ubfiz	x0, x21, #4, #32
  41bf54:	ldr	w20, [x20, x0]
  41bf58:	cmp	w20, #0xc
  41bf5c:	mov	w23, w20
  41bf60:	b.ls	41bff4 <nftw@plt+0x19474>  // b.plast
  41bf64:	mov	x0, x23
  41bf68:	mov	x1, #0x18                  	// #24
  41bf6c:	bl	461598 <_obstack_memory_used@@Base+0x150>
  41bf70:	mov	x3, x0
  41bf74:	cbz	x23, 41bf94 <nftw@plt+0x19414>
  41bf78:	mov	w2, #0x18                  	// #24
  41bf7c:	mov	x1, x0
  41bf80:	umaddl	x2, w20, w2, x0
  41bf84:	nop
  41bf88:	str	xzr, [x1], #24
  41bf8c:	cmp	x1, x2
  41bf90:	b.ne	41bf88 <nftw@plt+0x19408>  // b.any
  41bf94:	stp	x3, x23, [x22]
  41bf98:	mov	x0, x19
  41bf9c:	add	x20, x19, #0x8
  41bfa0:	str	w21, [x22, #40]
  41bfa4:	str	x22, [x19, #8]
  41bfa8:	bl	461ca0 <_obstack_memory_used@@Base+0x858>
  41bfac:	mov	x1, x20
  41bfb0:	adrp	x2, 4a4000 <_obstack_memory_used@@Base+0x42bb8>
  41bfb4:	adrp	x0, 41c000 <nftw@plt+0x19480>
  41bfb8:	add	x2, x2, #0x388
  41bfbc:	add	x0, x0, #0x18
  41bfc0:	bl	4025d0 <__cxa_atexit@plt>
  41bfc4:	add	x0, x19, #0x8
  41bfc8:	ldp	x19, x20, [sp, #16]
  41bfcc:	ldp	x21, x22, [sp, #32]
  41bfd0:	ldp	x23, x24, [sp, #48]
  41bfd4:	ldp	x29, x30, [sp], #64
  41bfd8:	ret
  41bfdc:	add	w21, w1, #0x1
  41bfe0:	b	41bf48 <nftw@plt+0x193c8>
  41bfe4:	add	w21, w1, #0x1
  41bfe8:	b	41be20 <nftw@plt+0x192a0>
  41bfec:	add	w22, w1, #0x1
  41bff0:	b	41beb0 <nftw@plt+0x19330>
  41bff4:	adrp	x2, 474000 <_obstack_memory_used@@Base+0x12bb8>
  41bff8:	adrp	x0, 474000 <_obstack_memory_used@@Base+0x12bb8>
  41bffc:	add	x2, x2, #0xc30
  41c000:	add	x0, x0, #0xc50
  41c004:	mov	w1, #0x60                  	// #96
  41c008:	bl	402bf0 <nftw@plt+0x70>
  41c00c:	nop
  41c010:	ret
  41c014:	nop
  41c018:	stp	x29, x30, [sp, #-48]!
  41c01c:	mov	x29, sp
  41c020:	stp	x21, x22, [sp, #32]
  41c024:	mov	x21, x0
  41c028:	ldr	x22, [x0, #40]
  41c02c:	stp	x19, x20, [sp, #16]
  41c030:	ldp	x3, x2, [x22]
  41c034:	add	x20, x3, x2, lsl #4
  41c038:	cmp	x3, x20
  41c03c:	b.cs	41c064 <nftw@plt+0x194e4>  // b.hs, b.nlast
  41c040:	mov	x1, x3
  41c044:	nop
  41c048:	ldr	x0, [x1]
  41c04c:	mov	x19, x1
  41c050:	add	x1, x1, #0x10
  41c054:	cmp	x0, #0x1
  41c058:	b.hi	41c124 <nftw@plt+0x195a4>  // b.pmore
  41c05c:	cmp	x20, x1
  41c060:	b.hi	41c048 <nftw@plt+0x194c8>  // b.pmore
  41c064:	sub	x1, x2, #0x1
  41c068:	cbz	x2, 41c07c <nftw@plt+0x194fc>
  41c06c:	nop
  41c070:	sub	x1, x1, #0x1
  41c074:	cmp	x1, x2
  41c078:	b.cc	41c070 <nftw@plt+0x194f0>  // b.lo, b.ul, b.last
  41c07c:	ldrb	w0, [x22, #44]
  41c080:	cbz	w0, 41c1a0 <nftw@plt+0x19620>
  41c084:	mov	x0, x3
  41c088:	bl	41c228 <nftw@plt+0x196a8>
  41c08c:	mov	x0, x22
  41c090:	mov	x1, #0x30                  	// #48
  41c094:	bl	461b00 <_obstack_memory_used@@Base+0x6b8>
  41c098:	ldr	x19, [x21, #48]
  41c09c:	cbz	x19, 41c0d8 <nftw@plt+0x19558>
  41c0a0:	ldr	x0, [x19, #8]
  41c0a4:	sub	x1, x0, #0x1
  41c0a8:	cbz	x0, 41c0bc <nftw@plt+0x1953c>
  41c0ac:	nop
  41c0b0:	sub	x1, x1, #0x1
  41c0b4:	cmp	x0, x1
  41c0b8:	b.hi	41c0b0 <nftw@plt+0x19530>  // b.pmore
  41c0bc:	ldrb	w1, [x19, #44]
  41c0c0:	ldr	x0, [x19]
  41c0c4:	cbz	w1, 41c198 <nftw@plt+0x19618>
  41c0c8:	bl	41c228 <nftw@plt+0x196a8>
  41c0cc:	mov	x0, x19
  41c0d0:	mov	x1, #0x30                  	// #48
  41c0d4:	bl	461b00 <_obstack_memory_used@@Base+0x6b8>
  41c0d8:	ldr	x19, [x21]
  41c0dc:	cbz	x19, 41c1ac <nftw@plt+0x1962c>
  41c0e0:	ldr	x1, [x19, #8]
  41c0e4:	sub	x0, x1, #0x1
  41c0e8:	cbz	x1, 41c0fc <nftw@plt+0x1957c>
  41c0ec:	nop
  41c0f0:	sub	x0, x0, #0x1
  41c0f4:	cmp	x1, x0
  41c0f8:	b.hi	41c0f0 <nftw@plt+0x19570>  // b.pmore
  41c0fc:	ldrb	w1, [x19, #44]
  41c100:	ldr	x0, [x19]
  41c104:	cbz	w1, 41c17c <nftw@plt+0x195fc>
  41c108:	bl	41c228 <nftw@plt+0x196a8>
  41c10c:	mov	x0, x19
  41c110:	mov	x1, #0x30                  	// #48
  41c114:	ldp	x19, x20, [sp, #16]
  41c118:	ldp	x21, x22, [sp, #32]
  41c11c:	ldp	x29, x30, [sp], #48
  41c120:	b	461b00 <_obstack_memory_used@@Base+0x6b8>
  41c124:	cbz	x0, 41c130 <nftw@plt+0x195b0>
  41c128:	mov	x1, #0x20                  	// #32
  41c12c:	bl	461b00 <_obstack_memory_used@@Base+0x6b8>
  41c130:	ldr	x0, [x19, #8]
  41c134:	cbz	x0, 41c140 <nftw@plt+0x195c0>
  41c138:	mov	x1, #0x20                  	// #32
  41c13c:	bl	461b00 <_obstack_memory_used@@Base+0x6b8>
  41c140:	add	x1, x19, #0x10
  41c144:	b	41c15c <nftw@plt+0x195dc>
  41c148:	ldr	x0, [x1]
  41c14c:	mov	x19, x1
  41c150:	add	x1, x1, #0x10
  41c154:	cmp	x0, #0x1
  41c158:	b.hi	41c124 <nftw@plt+0x195a4>  // b.pmore
  41c15c:	cmp	x20, x1
  41c160:	b.hi	41c148 <nftw@plt+0x195c8>  // b.pmore
  41c164:	ldr	x22, [x21, #40]
  41c168:	cbz	x22, 41c098 <nftw@plt+0x19518>
  41c16c:	ldp	x3, x2, [x22]
  41c170:	sub	x1, x2, #0x1
  41c174:	cbnz	x2, 41c070 <nftw@plt+0x194f0>
  41c178:	b	41c07c <nftw@plt+0x194fc>
  41c17c:	bl	402910 <free@plt>
  41c180:	mov	x0, x19
  41c184:	mov	x1, #0x30                  	// #48
  41c188:	ldp	x19, x20, [sp, #16]
  41c18c:	ldp	x21, x22, [sp, #32]
  41c190:	ldp	x29, x30, [sp], #48
  41c194:	b	461b00 <_obstack_memory_used@@Base+0x6b8>
  41c198:	bl	402910 <free@plt>
  41c19c:	b	41c0cc <nftw@plt+0x1954c>
  41c1a0:	mov	x0, x3
  41c1a4:	bl	402910 <free@plt>
  41c1a8:	b	41c08c <nftw@plt+0x1950c>
  41c1ac:	ldp	x19, x20, [sp, #16]
  41c1b0:	ldp	x21, x22, [sp, #32]
  41c1b4:	ldp	x29, x30, [sp], #48
  41c1b8:	ret
  41c1bc:	nop
  41c1c0:	ret
  41c1c4:	nop
  41c1c8:	cbnz	x1, 41c1d0 <nftw@plt+0x19650>
  41c1cc:	b	461560 <_obstack_memory_used@@Base+0x118>
  41c1d0:	stp	x29, x30, [sp, #-16]!
  41c1d4:	adrp	x2, 474000 <_obstack_memory_used@@Base+0x12bb8>
  41c1d8:	adrp	x0, 474000 <_obstack_memory_used@@Base+0x12bb8>
  41c1dc:	mov	x29, sp
  41c1e0:	add	x2, x2, #0xe48
  41c1e4:	add	x0, x0, #0xe60
  41c1e8:	mov	w1, #0x2f                  	// #47
  41c1ec:	bl	402bf0 <nftw@plt+0x70>
  41c1f0:	cbnz	x1, 41c1fc <nftw@plt+0x1967c>
  41c1f4:	mov	x1, #0x1                   	// #1
  41c1f8:	b	461598 <_obstack_memory_used@@Base+0x150>
  41c1fc:	stp	x29, x30, [sp, #-16]!
  41c200:	adrp	x2, 474000 <_obstack_memory_used@@Base+0x12bb8>
  41c204:	adrp	x0, 474000 <_obstack_memory_used@@Base+0x12bb8>
  41c208:	mov	x29, sp
  41c20c:	add	x2, x2, #0xe78
  41c210:	add	x0, x0, #0xe60
  41c214:	mov	w1, #0x37                  	// #55
  41c218:	bl	402bf0 <nftw@plt+0x70>
  41c21c:	nop
  41c220:	b	4615e8 <_obstack_memory_used@@Base+0x1a0>
  41c224:	nop
  41c228:	b	402910 <free@plt>
  41c22c:	nop
  41c230:	ret
  41c234:	nop
  41c238:	str	xzr, [x0]
  41c23c:	ret
  41c240:	stp	x29, x30, [sp, #-32]!
  41c244:	mov	x29, sp
  41c248:	stp	x19, x20, [sp, #16]
  41c24c:	ldr	x19, [x0]
  41c250:	cbz	x19, 41c26c <nftw@plt+0x196ec>
  41c254:	mov	x20, x0
  41c258:	mov	x0, x19
  41c25c:	ldr	x19, [x19]
  41c260:	bl	402910 <free@plt>
  41c264:	str	x19, [x20]
  41c268:	cbnz	x19, 41c258 <nftw@plt+0x196d8>
  41c26c:	ldp	x19, x20, [sp, #16]
  41c270:	ldp	x29, x30, [sp], #32
  41c274:	ret
  41c278:	cmp	x0, #0x10, lsl #12
  41c27c:	b.ne	41c29c <nftw@plt+0x1971c>  // b.any
  41c280:	adrp	x2, 4a5000 <__environ@@GLIBC_2.17+0xa68>
  41c284:	ldr	x1, [x2, #2432]
  41c288:	cbz	x1, 41c29c <nftw@plt+0x1971c>
  41c28c:	ldr	x0, [x1]
  41c290:	str	x0, [x2, #2432]
  41c294:	mov	x0, x1
  41c298:	ret
  41c29c:	b	461560 <_obstack_memory_used@@Base+0x118>
  41c2a0:	ldr	x2, [x0]
  41c2a4:	mov	x1, x0
  41c2a8:	sub	x2, x2, x0
  41c2ac:	cmp	x2, #0x10, lsl #12
  41c2b0:	b.ne	41c2c8 <nftw@plt+0x19748>  // b.any
  41c2b4:	adrp	x0, 4a5000 <__environ@@GLIBC_2.17+0xa68>
  41c2b8:	ldr	x2, [x0, #2432]
  41c2bc:	str	x2, [x1]
  41c2c0:	str	x1, [x0, #2432]
  41c2c4:	ret
  41c2c8:	b	402910 <free@plt>
  41c2cc:	nop
  41c2d0:	stp	x29, x30, [sp, #-32]!
  41c2d4:	mov	x29, sp
  41c2d8:	str	x19, [sp, #16]
  41c2dc:	eor	x19, x1, x0
  41c2e0:	blr	x2
  41c2e4:	asr	w0, w0, #31
  41c2e8:	sxtw	x0, w0
  41c2ec:	and	x0, x0, x19
  41c2f0:	ldr	x19, [sp, #16]
  41c2f4:	ldp	x29, x30, [sp], #32
  41c2f8:	ret
  41c2fc:	nop
  41c300:	stp	x29, x30, [sp, #-80]!
  41c304:	mov	x29, sp
  41c308:	stp	x19, x20, [sp, #16]
  41c30c:	mov	x19, x1
  41c310:	mov	x1, x0
  41c314:	stp	x21, x22, [sp, #32]
  41c318:	mov	x22, x0
  41c31c:	ldr	x2, [x19]
  41c320:	stp	x23, x24, [sp, #48]
  41c324:	ldr	x21, [x19, #24]
  41c328:	add	x20, x0, x21
  41c32c:	mov	x0, x20
  41c330:	bl	41c2d0 <nftw@plt+0x19750>
  41c334:	ldr	x1, [x19, #16]
  41c338:	add	x21, x20, x21
  41c33c:	eor	x22, x22, x0
  41c340:	eor	x20, x20, x0
  41c344:	cmp	x1, #0x3
  41c348:	b.ne	41c380 <nftw@plt+0x19800>  // b.any
  41c34c:	ldr	x2, [x19]
  41c350:	mov	x1, x20
  41c354:	mov	x0, x21
  41c358:	bl	41c2d0 <nftw@plt+0x19750>
  41c35c:	eor	x20, x20, x0
  41c360:	ldr	x2, [x19]
  41c364:	mov	x1, x22
  41c368:	eor	x21, x21, x0
  41c36c:	mov	x0, x20
  41c370:	bl	41c2d0 <nftw@plt+0x19750>
  41c374:	eor	x20, x20, x0
  41c378:	ldr	x1, [x19, #16]
  41c37c:	eor	x22, x22, x0
  41c380:	cmp	x1, #0x3
  41c384:	ldr	x24, [x19, #24]
  41c388:	b.ls	41c4c0 <nftw@plt+0x19940>  // b.plast
  41c38c:	ldr	x2, [x19]
  41c390:	str	x25, [sp, #64]
  41c394:	add	x25, x21, x24
  41c398:	cmp	x1, #0x5
  41c39c:	add	x24, x25, x24
  41c3a0:	b.ne	41c3d4 <nftw@plt+0x19854>  // b.any
  41c3a4:	mov	x1, x25
  41c3a8:	mov	x0, x24
  41c3ac:	bl	41c2d0 <nftw@plt+0x19750>
  41c3b0:	eor	x24, x24, x0
  41c3b4:	ldr	x2, [x19]
  41c3b8:	mov	x1, x21
  41c3bc:	eor	x25, x25, x0
  41c3c0:	mov	x0, x24
  41c3c4:	bl	41c2d0 <nftw@plt+0x19750>
  41c3c8:	eor	x24, x24, x0
  41c3cc:	ldr	x2, [x19]
  41c3d0:	eor	x21, x21, x0
  41c3d4:	mov	x1, x21
  41c3d8:	mov	x0, x25
  41c3dc:	bl	41c2d0 <nftw@plt+0x19750>
  41c3e0:	eor	x21, x21, x0
  41c3e4:	ldr	x1, [x19, #16]
  41c3e8:	eor	x25, x25, x0
  41c3ec:	cmp	x1, #0x5
  41c3f0:	b.ne	41c424 <nftw@plt+0x198a4>  // b.any
  41c3f4:	ldr	x2, [x19]
  41c3f8:	mov	x1, x22
  41c3fc:	mov	x0, x25
  41c400:	bl	41c2d0 <nftw@plt+0x19750>
  41c404:	eor	x22, x22, x0
  41c408:	ldr	x2, [x19]
  41c40c:	mov	x1, x20
  41c410:	eor	x25, x25, x0
  41c414:	mov	x0, x24
  41c418:	bl	41c2d0 <nftw@plt+0x19750>
  41c41c:	eor	x20, x20, x0
  41c420:	eor	x24, x24, x0
  41c424:	ldr	x2, [x19]
  41c428:	mov	x1, x22
  41c42c:	mov	x0, x21
  41c430:	bl	41c2d0 <nftw@plt+0x19750>
  41c434:	eor	x21, x21, x0
  41c438:	ldr	x2, [x19]
  41c43c:	mov	x1, x20
  41c440:	eor	x23, x0, x22
  41c444:	mov	x0, x25
  41c448:	bl	41c2d0 <nftw@plt+0x19750>
  41c44c:	eor	x20, x0, x20
  41c450:	ldr	x2, [x19]
  41c454:	mov	x1, x20
  41c458:	eor	x25, x0, x25
  41c45c:	mov	x0, x21
  41c460:	bl	41c2d0 <nftw@plt+0x19750>
  41c464:	eor	x20, x20, x0
  41c468:	ldr	x1, [x19, #24]
  41c46c:	eor	x21, x21, x0
  41c470:	cmp	x1, #0x8
  41c474:	b.ne	41c4fc <nftw@plt+0x1997c>  // b.any
  41c478:	ldr	x0, [x19, #16]
  41c47c:	ldr	x3, [x20]
  41c480:	cmp	x0, #0x5
  41c484:	ldr	x2, [x21]
  41c488:	ldr	x4, [x23]
  41c48c:	ldr	x1, [x25]
  41c490:	ldr	x0, [x19, #8]
  41c494:	b.ne	41c4a0 <nftw@plt+0x19920>  // b.any
  41c498:	ldr	x5, [x24]
  41c49c:	str	x5, [x0, #32]
  41c4a0:	stp	x4, x3, [x0]
  41c4a4:	stp	x2, x1, [x0, #16]
  41c4a8:	ldr	x25, [sp, #64]
  41c4ac:	ldp	x19, x20, [sp, #16]
  41c4b0:	ldp	x21, x22, [sp, #32]
  41c4b4:	ldp	x23, x24, [sp, #48]
  41c4b8:	ldp	x29, x30, [sp], #80
  41c4bc:	ret
  41c4c0:	cmp	x24, #0x8
  41c4c4:	b.ne	41c544 <nftw@plt+0x199c4>  // b.any
  41c4c8:	cmp	x1, #0x3
  41c4cc:	ldr	x2, [x22]
  41c4d0:	ldr	x1, [x20]
  41c4d4:	ldr	x0, [x19, #8]
  41c4d8:	b.ne	41c4e4 <nftw@plt+0x19964>  // b.any
  41c4dc:	ldr	x3, [x21]
  41c4e0:	str	x3, [x0, #16]
  41c4e4:	stp	x2, x1, [x0]
  41c4e8:	ldp	x19, x20, [sp, #16]
  41c4ec:	ldp	x21, x22, [sp, #32]
  41c4f0:	ldp	x23, x24, [sp, #48]
  41c4f4:	ldp	x29, x30, [sp], #80
  41c4f8:	ret
  41c4fc:	cmp	x1, #0x4
  41c500:	b.ne	41c570 <nftw@plt+0x199f0>  // b.any
  41c504:	ldr	x0, [x19, #16]
  41c508:	ldr	s3, [x20]
  41c50c:	cmp	x0, #0x5
  41c510:	ldr	s2, [x21]
  41c514:	ldr	s0, [x23]
  41c518:	ldr	s1, [x25]
  41c51c:	ldr	x0, [x19, #8]
  41c520:	b.ne	41c52c <nftw@plt+0x199ac>  // b.any
  41c524:	ldr	w1, [x24]
  41c528:	str	w1, [x0, #16]
  41c52c:	mov	v0.s[1], v3.s[0]
  41c530:	mov	v0.s[2], v2.s[0]
  41c534:	mov	v0.s[3], v1.s[0]
  41c538:	str	q0, [x0]
  41c53c:	ldr	x25, [sp, #64]
  41c540:	b	41c4ac <nftw@plt+0x1992c>
  41c544:	cmp	x24, #0x4
  41c548:	b.ne	41c6ac <nftw@plt+0x19b2c>  // b.any
  41c54c:	cmp	x1, #0x3
  41c550:	ldr	w2, [x22]
  41c554:	ldr	w1, [x20]
  41c558:	ldr	x0, [x19, #8]
  41c55c:	b.ne	41c568 <nftw@plt+0x199e8>  // b.any
  41c560:	ldr	w3, [x21]
  41c564:	str	w3, [x0, #8]
  41c568:	stp	w2, w1, [x0]
  41c56c:	b	41c4ac <nftw@plt+0x1992c>
  41c570:	cmp	x1, #0x7
  41c574:	sub	x12, x24, #0x8
  41c578:	mov	x0, #0x8                   	// #8
  41c57c:	b.hi	41c588 <nftw@plt+0x19a08>  // b.pmore
  41c580:	b	41c798 <nftw@plt+0x19c18>
  41c584:	mov	x0, x9
  41c588:	ldp	x8, x11, [x19, #8]
  41c58c:	add	x5, x0, x23
  41c590:	add	x4, x0, x20
  41c594:	add	x3, x0, x21
  41c598:	add	x2, x0, x25
  41c59c:	sub	x7, x0, #0x8
  41c5a0:	lsl	x1, x1, #2
  41c5a4:	add	x9, x0, #0x8
  41c5a8:	ldur	x10, [x5, #-8]
  41c5ac:	add	x6, x8, x7
  41c5b0:	cmp	x11, #0x5
  41c5b4:	ldur	x5, [x4, #-8]
  41c5b8:	ldur	x4, [x3, #-8]
  41c5bc:	ldur	x3, [x2, #-8]
  41c5c0:	b.ne	41c6a0 <nftw@plt+0x19b20>  // b.any
  41c5c4:	ldr	x2, [x12, x0]
  41c5c8:	str	x2, [x6, x1]
  41c5cc:	str	x10, [x8, x7]
  41c5d0:	ldr	x1, [x19, #24]
  41c5d4:	add	x2, x6, x1
  41c5d8:	str	x5, [x6, x1]
  41c5dc:	ldr	x1, [x19, #24]
  41c5e0:	add	x5, x2, x1
  41c5e4:	str	x4, [x2, x1]
  41c5e8:	ldr	x1, [x19, #24]
  41c5ec:	str	x3, [x5, x1]
  41c5f0:	ldr	x1, [x19, #24]
  41c5f4:	cmp	x1, x9
  41c5f8:	b.cs	41c584 <nftw@plt+0x19a04>  // b.hs, b.nlast
  41c5fc:	cmp	x1, x0
  41c600:	b.hi	41c644 <nftw@plt+0x19ac4>  // b.pmore
  41c604:	b	41c698 <nftw@plt+0x19b18>
  41c608:	ldrb	w8, [x24, x0]
  41c60c:	strb	w8, [x2, x1]
  41c610:	strb	w7, [x3, x0]
  41c614:	add	x0, x0, #0x1
  41c618:	ldr	x1, [x19, #24]
  41c61c:	add	x3, x2, x1
  41c620:	strb	w6, [x2, x1]
  41c624:	ldr	x1, [x19, #24]
  41c628:	add	x2, x3, x1
  41c62c:	strb	w5, [x3, x1]
  41c630:	ldr	x1, [x19, #24]
  41c634:	strb	w4, [x2, x1]
  41c638:	ldr	x1, [x19, #24]
  41c63c:	cmp	x0, x1
  41c640:	b.cs	41c698 <nftw@plt+0x19b18>  // b.hs, b.nlast
  41c644:	ldp	x3, x4, [x19, #8]
  41c648:	lsl	x1, x1, #2
  41c64c:	ldrb	w7, [x23, x0]
  41c650:	ldrb	w6, [x20, x0]
  41c654:	ldrb	w5, [x21, x0]
  41c658:	cmp	x4, #0x5
  41c65c:	add	x2, x3, x0
  41c660:	ldrb	w4, [x25, x0]
  41c664:	b.eq	41c608 <nftw@plt+0x19a88>  // b.none
  41c668:	strb	w7, [x3, x0]
  41c66c:	add	x0, x0, #0x1
  41c670:	ldr	x1, [x19, #24]
  41c674:	add	x3, x2, x1
  41c678:	strb	w6, [x2, x1]
  41c67c:	ldr	x1, [x19, #24]
  41c680:	add	x2, x3, x1
  41c684:	strb	w5, [x3, x1]
  41c688:	ldr	x1, [x19, #24]
  41c68c:	strb	w4, [x2, x1]
  41c690:	ldr	x1, [x19, #24]
  41c694:	b	41c5fc <nftw@plt+0x19a7c>
  41c698:	ldr	x25, [sp, #64]
  41c69c:	b	41c4ac <nftw@plt+0x1992c>
  41c6a0:	add	x9, x0, #0x8
  41c6a4:	str	x10, [x8, x7]
  41c6a8:	b	41c5d0 <nftw@plt+0x19a50>
  41c6ac:	cmp	x24, #0x7
  41c6b0:	mov	x0, #0x0                   	// #0
  41c6b4:	b.ls	41c754 <nftw@plt+0x19bd4>  // b.plast
  41c6b8:	sub	x9, x22, #0x8
  41c6bc:	sub	x8, x20, #0x8
  41c6c0:	sub	x10, x21, #0x8
  41c6c4:	mov	x0, #0x8                   	// #8
  41c6c8:	b	41c6f4 <nftw@plt+0x19b74>
  41c6cc:	ldr	x7, [x10, x0]
  41c6d0:	str	x7, [x1, x24]
  41c6d4:	str	x6, [x3, x2]
  41c6d8:	ldr	x2, [x19, #24]
  41c6dc:	str	x5, [x1, x2]
  41c6e0:	ldr	x24, [x19, #24]
  41c6e4:	cmp	x24, x4
  41c6e8:	b.cc	41c754 <nftw@plt+0x19bd4>  // b.lo, b.ul, b.last
  41c6ec:	ldr	x1, [x19, #16]
  41c6f0:	mov	x0, x4
  41c6f4:	ldr	x3, [x19, #8]
  41c6f8:	sub	x2, x0, #0x8
  41c6fc:	cmp	x1, #0x3
  41c700:	lsl	x24, x24, #1
  41c704:	add	x4, x0, #0x8
  41c708:	add	x1, x3, x2
  41c70c:	ldr	x6, [x9, x0]
  41c710:	ldr	x5, [x8, x0]
  41c714:	b.eq	41c6cc <nftw@plt+0x19b4c>  // b.none
  41c718:	str	x6, [x3, x2]
  41c71c:	add	x4, x0, #0x8
  41c720:	ldr	x2, [x19, #24]
  41c724:	str	x5, [x1, x2]
  41c728:	ldr	x24, [x19, #24]
  41c72c:	cmp	x4, x24
  41c730:	b.ls	41c6ec <nftw@plt+0x19b6c>  // b.plast
  41c734:	b	41c754 <nftw@plt+0x19bd4>
  41c738:	ldrb	w3, [x21, x0]
  41c73c:	strb	w3, [x2, x24]
  41c740:	strb	w5, [x1, x0]
  41c744:	add	x0, x0, #0x1
  41c748:	ldr	x1, [x19, #24]
  41c74c:	strb	w4, [x2, x1]
  41c750:	ldr	x24, [x19, #24]
  41c754:	cmp	x0, x24
  41c758:	b.cs	41c4ac <nftw@plt+0x1992c>  // b.hs, b.nlast
  41c75c:	ldp	x1, x3, [x19, #8]
  41c760:	lsl	x24, x24, #1
  41c764:	ldrb	w5, [x22, x0]
  41c768:	ldrb	w4, [x20, x0]
  41c76c:	add	x2, x1, x0
  41c770:	cmp	x3, #0x3
  41c774:	b.eq	41c738 <nftw@plt+0x19bb8>  // b.none
  41c778:	strb	w5, [x1, x0]
  41c77c:	add	x0, x0, #0x1
  41c780:	ldr	x1, [x19, #24]
  41c784:	strb	w4, [x2, x1]
  41c788:	ldr	x24, [x19, #24]
  41c78c:	cmp	x24, x0
  41c790:	b.hi	41c75c <nftw@plt+0x19bdc>  // b.pmore
  41c794:	b	41c4ac <nftw@plt+0x1992c>
  41c798:	mov	x0, #0x0                   	// #0
  41c79c:	b	41c5fc <nftw@plt+0x19a7c>
  41c7a0:	stp	x29, x30, [sp, #-96]!
  41c7a4:	mov	x29, sp
  41c7a8:	stp	x19, x20, [sp, #16]
  41c7ac:	mov	x20, x2
  41c7b0:	ldr	x2, [x1, #32]
  41c7b4:	stp	x21, x22, [sp, #32]
  41c7b8:	mov	x22, x1
  41c7bc:	stp	x23, x24, [sp, #48]
  41c7c0:	cmp	x2, x20
  41c7c4:	mov	x23, x3
  41c7c8:	b.cc	41c7e4 <nftw@plt+0x19c64>  // b.lo, b.ul, b.last
  41c7cc:	stp	x3, x20, [x1, #8]
  41c7d0:	ldp	x19, x20, [sp, #16]
  41c7d4:	ldp	x21, x22, [sp, #32]
  41c7d8:	ldp	x23, x24, [sp, #48]
  41c7dc:	ldp	x29, x30, [sp], #96
  41c7e0:	b	41c300 <nftw@plt+0x19780>
  41c7e4:	stp	x25, x26, [sp, #64]
  41c7e8:	lsr	x26, x20, #1
  41c7ec:	cmp	x0, x3
  41c7f0:	ldr	x25, [x1, #24]
  41c7f4:	str	x27, [sp, #80]
  41c7f8:	csel	x19, x4, x0, eq  // eq = none
  41c7fc:	mov	x21, x0
  41c800:	sub	x2, x20, x26
  41c804:	mul	x25, x26, x25
  41c808:	add	x24, x3, x25
  41c80c:	add	x27, x0, x25
  41c810:	mov	x3, x24
  41c814:	mov	x0, x27
  41c818:	bl	41c7a0 <nftw@plt+0x19c20>
  41c81c:	mov	x2, x26
  41c820:	mov	x1, x22
  41c824:	mov	x0, x21
  41c828:	mov	x4, x27
  41c82c:	mov	x3, x19
  41c830:	bl	41c7a0 <nftw@plt+0x19c20>
  41c834:	ldr	x2, [x22]
  41c838:	mov	x0, x24
  41c83c:	ldr	x1, [x22, #24]
  41c840:	sub	x1, x25, x1
  41c844:	add	x1, x19, x1
  41c848:	blr	x2
  41c84c:	tbz	w0, #31, 41c8d0 <nftw@plt+0x19d50>
  41c850:	ldr	x0, [x22, #24]
  41c854:	cmp	x0, #0x8
  41c858:	madd	x20, x0, x20, x23
  41c85c:	b.eq	41c86c <nftw@plt+0x19cec>  // b.none
  41c860:	b	41c8f8 <nftw@plt+0x19d78>
  41c864:	cmp	x20, x24
  41c868:	b.eq	41c8d0 <nftw@plt+0x19d50>  // b.none
  41c86c:	ldr	x2, [x22]
  41c870:	mov	x1, x19
  41c874:	mov	x0, x24
  41c878:	blr	x2
  41c87c:	asr	w0, w0, #31
  41c880:	eor	x2, x24, x19
  41c884:	and	w1, w0, #0x8
  41c888:	sxtw	x0, w0
  41c88c:	and	x2, x2, x0
  41c890:	mvn	x0, x0
  41c894:	eor	x2, x19, x2
  41c898:	and	x0, x0, #0x8
  41c89c:	add	x19, x19, x0
  41c8a0:	add	x24, x24, w1, sxtw
  41c8a4:	ldr	x0, [x2]
  41c8a8:	str	x0, [x23], #8
  41c8ac:	cmp	x23, x24
  41c8b0:	b.ne	41c864 <nftw@plt+0x19ce4>  // b.any
  41c8b4:	ldp	x19, x20, [sp, #16]
  41c8b8:	ldp	x21, x22, [sp, #32]
  41c8bc:	ldp	x23, x24, [sp, #48]
  41c8c0:	ldp	x25, x26, [sp, #64]
  41c8c4:	ldr	x27, [sp, #80]
  41c8c8:	ldp	x29, x30, [sp], #96
  41c8cc:	ret
  41c8d0:	sub	x2, x24, x23
  41c8d4:	mov	x1, x19
  41c8d8:	mov	x0, x23
  41c8dc:	ldp	x19, x20, [sp, #16]
  41c8e0:	ldp	x21, x22, [sp, #32]
  41c8e4:	ldp	x23, x24, [sp, #48]
  41c8e8:	ldp	x25, x26, [sp, #64]
  41c8ec:	ldr	x27, [sp, #80]
  41c8f0:	ldp	x29, x30, [sp], #96
  41c8f4:	b	402490 <memcpy@plt>
  41c8f8:	cmp	x0, #0x4
  41c8fc:	b.eq	41c90c <nftw@plt+0x19d8c>  // b.none
  41c900:	b	41c964 <nftw@plt+0x19de4>
  41c904:	cmp	x20, x24
  41c908:	b.eq	41c8d0 <nftw@plt+0x19d50>  // b.none
  41c90c:	ldr	x2, [x22]
  41c910:	mov	x1, x19
  41c914:	mov	x0, x24
  41c918:	blr	x2
  41c91c:	asr	w0, w0, #31
  41c920:	eor	x1, x24, x19
  41c924:	and	w2, w0, #0x4
  41c928:	sxtw	x0, w0
  41c92c:	and	x1, x1, x0
  41c930:	mvn	x0, x0
  41c934:	eor	x1, x19, x1
  41c938:	and	x0, x0, #0x4
  41c93c:	add	x19, x19, x0
  41c940:	add	x24, x24, w2, sxtw
  41c944:	ldr	w0, [x1]
  41c948:	str	w0, [x23], #4
  41c94c:	cmp	x23, x24
  41c950:	b.ne	41c904 <nftw@plt+0x19d84>  // b.any
  41c954:	b	41c8b4 <nftw@plt+0x19d34>
  41c958:	add	x19, x19, x1
  41c95c:	cmp	x20, x24
  41c960:	b.eq	41c8d0 <nftw@plt+0x19d50>  // b.none
  41c964:	ldr	x2, [x22]
  41c968:	mov	x1, x19
  41c96c:	mov	x0, x24
  41c970:	blr	x2
  41c974:	asr	w21, w0, #31
  41c978:	ldr	x2, [x22, #24]
  41c97c:	sxtw	x21, w21
  41c980:	eor	x1, x24, x19
  41c984:	mov	x0, x23
  41c988:	and	x1, x1, x21
  41c98c:	eor	x1, x19, x1
  41c990:	bl	402490 <memcpy@plt>
  41c994:	ldr	x2, [x22, #24]
  41c998:	mvn	x1, x21
  41c99c:	and	x21, x21, x2
  41c9a0:	add	x23, x0, x2
  41c9a4:	add	x24, x24, x21
  41c9a8:	and	x1, x1, x2
  41c9ac:	cmp	x23, x24
  41c9b0:	b.ne	41c958 <nftw@plt+0x19dd8>  // b.any
  41c9b4:	b	41c8b4 <nftw@plt+0x19d34>
  41c9b8:	cmp	x1, #0x1
  41c9bc:	b.ls	41ca68 <nftw@plt+0x19ee8>  // b.plast
  41c9c0:	stp	x29, x30, [sp, #-400]!
  41c9c4:	mov	x29, sp
  41c9c8:	stp	x19, x20, [sp, #16]
  41c9cc:	mov	x20, x1
  41c9d0:	mov	x19, x0
  41c9d4:	stp	x21, x22, [sp, #32]
  41c9d8:	mov	x1, #0x5                   	// #5
  41c9dc:	stp	x23, x24, [sp, #48]
  41c9e0:	tbnz	x2, #63, 41ca44 <nftw@plt+0x19ec4>
  41c9e4:	lsr	x24, x20, #1
  41c9e8:	stp	x3, x19, [sp, #104]
  41c9ec:	add	x22, sp, #0x90
  41c9f0:	stp	x20, x2, [sp, #120]
  41c9f4:	mov	x21, x22
  41c9f8:	mul	x0, x24, x2
  41c9fc:	str	x1, [sp, #136]
  41ca00:	cmp	x0, #0x100
  41ca04:	b.hi	41ca50 <nftw@plt+0x19ed0>  // b.pmore
  41ca08:	cmp	x20, x1
  41ca0c:	b.hi	41ca6c <nftw@plt+0x19eec>  // b.pmore
  41ca10:	mov	x0, x19
  41ca14:	add	x1, sp, #0x68
  41ca18:	stp	x19, x20, [sp, #112]
  41ca1c:	bl	41c300 <nftw@plt+0x19780>
  41ca20:	cmp	x21, x22
  41ca24:	b.eq	41ca30 <nftw@plt+0x19eb0>  // b.none
  41ca28:	mov	x0, x21
  41ca2c:	bl	402910 <free@plt>
  41ca30:	ldp	x19, x20, [sp, #16]
  41ca34:	ldp	x21, x22, [sp, #32]
  41ca38:	ldp	x23, x24, [sp, #48]
  41ca3c:	ldp	x29, x30, [sp], #400
  41ca40:	ret
  41ca44:	mvn	x2, x2
  41ca48:	mov	x1, #0x3                   	// #3
  41ca4c:	b	41c9e4 <nftw@plt+0x19e64>
  41ca50:	bl	461560 <_obstack_memory_used@@Base+0x118>
  41ca54:	add	x22, sp, #0x90
  41ca58:	mov	x21, x0
  41ca5c:	str	x0, [sp, #88]
  41ca60:	ldr	x1, [sp, #136]
  41ca64:	b	41ca08 <nftw@plt+0x19e88>
  41ca68:	ret
  41ca6c:	stp	x25, x26, [sp, #64]
  41ca70:	add	x1, sp, #0x68
  41ca74:	mov	x4, x21
  41ca78:	ldr	x25, [sp, #128]
  41ca7c:	sub	x2, x20, x24
  41ca80:	mul	x25, x24, x25
  41ca84:	add	x23, x19, x25
  41ca88:	mov	x3, x23
  41ca8c:	mov	x0, x23
  41ca90:	bl	41c7a0 <nftw@plt+0x19c20>
  41ca94:	mov	x2, x24
  41ca98:	add	x1, sp, #0x68
  41ca9c:	mov	x0, x19
  41caa0:	mov	x4, x23
  41caa4:	mov	x3, x21
  41caa8:	bl	41c7a0 <nftw@plt+0x19c20>
  41caac:	ldr	x2, [sp, #104]
  41cab0:	mov	x0, x23
  41cab4:	ldr	x1, [sp, #128]
  41cab8:	sub	x1, x25, x1
  41cabc:	add	x1, x21, x1
  41cac0:	blr	x2
  41cac4:	tbz	w0, #31, 41cb38 <nftw@plt+0x19fb8>
  41cac8:	ldr	x0, [sp, #128]
  41cacc:	mov	x24, x21
  41cad0:	cmp	x0, #0x8
  41cad4:	madd	x20, x20, x0, x19
  41cad8:	b.eq	41cae8 <nftw@plt+0x19f68>  // b.none
  41cadc:	b	41cb58 <nftw@plt+0x19fd8>
  41cae0:	cmp	x20, x23
  41cae4:	b.eq	41cb40 <nftw@plt+0x19fc0>  // b.none
  41cae8:	ldr	x2, [sp, #104]
  41caec:	mov	x1, x24
  41caf0:	mov	x0, x23
  41caf4:	blr	x2
  41caf8:	asr	w0, w0, #31
  41cafc:	eor	x1, x23, x24
  41cb00:	and	w2, w0, #0x8
  41cb04:	sxtw	x0, w0
  41cb08:	and	x1, x1, x0
  41cb0c:	mvn	x0, x0
  41cb10:	eor	x1, x24, x1
  41cb14:	and	x0, x0, #0x8
  41cb18:	add	x24, x24, x0
  41cb1c:	add	x23, x23, w2, sxtw
  41cb20:	ldr	x0, [x1]
  41cb24:	str	x0, [x19], #8
  41cb28:	cmp	x19, x23
  41cb2c:	b.ne	41cae0 <nftw@plt+0x19f60>  // b.any
  41cb30:	ldp	x25, x26, [sp, #64]
  41cb34:	b	41ca20 <nftw@plt+0x19ea0>
  41cb38:	mov	x24, x21
  41cb3c:	nop
  41cb40:	sub	x2, x23, x19
  41cb44:	mov	x1, x24
  41cb48:	mov	x0, x19
  41cb4c:	bl	402490 <memcpy@plt>
  41cb50:	ldp	x25, x26, [sp, #64]
  41cb54:	b	41ca20 <nftw@plt+0x19ea0>
  41cb58:	cmp	x0, #0x4
  41cb5c:	b.eq	41cb6c <nftw@plt+0x19fec>  // b.none
  41cb60:	b	41cbc8 <nftw@plt+0x1a048>
  41cb64:	cmp	x20, x23
  41cb68:	b.eq	41cb40 <nftw@plt+0x19fc0>  // b.none
  41cb6c:	ldr	x2, [sp, #104]
  41cb70:	mov	x1, x24
  41cb74:	mov	x0, x23
  41cb78:	blr	x2
  41cb7c:	asr	w0, w0, #31
  41cb80:	eor	x1, x23, x24
  41cb84:	and	w2, w0, #0x4
  41cb88:	sxtw	x0, w0
  41cb8c:	and	x1, x1, x0
  41cb90:	mvn	x0, x0
  41cb94:	eor	x1, x24, x1
  41cb98:	and	x0, x0, #0x4
  41cb9c:	add	x24, x24, x0
  41cba0:	add	x23, x23, w2, sxtw
  41cba4:	ldr	w0, [x1]
  41cba8:	str	w0, [x19], #4
  41cbac:	cmp	x19, x23
  41cbb0:	b.ne	41cb64 <nftw@plt+0x19fe4>  // b.any
  41cbb4:	ldp	x25, x26, [sp, #64]
  41cbb8:	b	41ca20 <nftw@plt+0x19ea0>
  41cbbc:	add	x24, x24, x25
  41cbc0:	cmp	x20, x23
  41cbc4:	b.eq	41cb40 <nftw@plt+0x19fc0>  // b.none
  41cbc8:	ldr	x2, [sp, #104]
  41cbcc:	mov	x1, x24
  41cbd0:	mov	x0, x23
  41cbd4:	blr	x2
  41cbd8:	asr	w25, w0, #31
  41cbdc:	ldr	x26, [sp, #128]
  41cbe0:	sxtw	x25, w25
  41cbe4:	eor	x1, x23, x24
  41cbe8:	mov	x0, x19
  41cbec:	and	x1, x1, x25
  41cbf0:	mov	x2, x26
  41cbf4:	eor	x1, x24, x1
  41cbf8:	bl	402490 <memcpy@plt>
  41cbfc:	and	x1, x25, x26
  41cc00:	add	x19, x0, x26
  41cc04:	mvn	x25, x25
  41cc08:	add	x23, x23, x1
  41cc0c:	and	x25, x25, x26
  41cc10:	cmp	x19, x23
  41cc14:	b.ne	41cbbc <nftw@plt+0x1a03c>  // b.any
  41cc18:	ldp	x25, x26, [sp, #64]
  41cc1c:	b	41ca20 <nftw@plt+0x19ea0>
  41cc20:	mvn	x2, x2
  41cc24:	b	41c9b8 <nftw@plt+0x19e38>
  41cc28:	mov	w0, #0x1                   	// #1
  41cc2c:	ret
  41cc30:	stp	x29, x30, [sp, #-80]!
  41cc34:	mov	x29, sp
  41cc38:	stp	x21, x22, [sp, #32]
  41cc3c:	mov	x21, x1
  41cc40:	mov	x1, x2
  41cc44:	stp	x19, x20, [sp, #16]
  41cc48:	mov	x20, x2
  41cc4c:	mov	x19, x8
  41cc50:	stp	x23, x24, [sp, #48]
  41cc54:	mov	x24, x0
  41cc58:	mov	x0, x21
  41cc5c:	str	x25, [sp, #64]
  41cc60:	bl	402720 <strcasecmp@plt>
  41cc64:	cbnz	w0, 41cc98 <nftw@plt+0x1a118>
  41cc68:	mov	x1, #0xffffffffffffffff    	// #-1
  41cc6c:	adrp	x0, 41d000 <nftw@plt+0x1a480>
  41cc70:	add	x0, x0, #0x8
  41cc74:	stp	x0, x1, [x19]
  41cc78:	str	w1, [x19, #16]
  41cc7c:	mov	sp, x29
  41cc80:	ldp	x19, x20, [sp, #16]
  41cc84:	ldp	x21, x22, [sp, #32]
  41cc88:	ldp	x23, x24, [sp, #48]
  41cc8c:	ldr	x25, [sp, #64]
  41cc90:	ldp	x29, x30, [sp], #80
  41cc94:	ret
  41cc98:	mov	x0, x21
  41cc9c:	bl	4024f0 <strlen@plt>
  41cca0:	mov	x25, x0
  41cca4:	mov	x0, x20
  41cca8:	bl	4024f0 <strlen@plt>
  41ccac:	add	x3, x25, x0
  41ccb0:	add	x3, x3, #0x11
  41ccb4:	mov	x23, x0
  41ccb8:	and	x3, x3, #0xfffffffffffffff0
  41ccbc:	mov	x2, x0
  41ccc0:	sub	sp, sp, x3
  41ccc4:	mov	x1, x20
  41ccc8:	mov	x22, sp
  41cccc:	mov	x0, x22
  41ccd0:	bl	402490 <memcpy@plt>
  41ccd4:	mov	w3, #0x2f                  	// #47
  41ccd8:	add	x2, x25, #0x1
  41ccdc:	add	x0, x23, #0x1
  41cce0:	mov	x1, x21
  41cce4:	add	x0, x22, x0
  41cce8:	strb	w3, [x22, x23]
  41ccec:	bl	402490 <memcpy@plt>
  41ccf0:	adrp	x1, 474000 <_obstack_memory_used@@Base+0x12bb8>
  41ccf4:	mov	x0, x22
  41ccf8:	add	x1, x1, #0xe98
  41ccfc:	bl	402720 <strcasecmp@plt>
  41cd00:	cbz	w0, 41ce10 <nftw@plt+0x1a290>
  41cd04:	adrp	x1, 474000 <_obstack_memory_used@@Base+0x12bb8>
  41cd08:	mov	x0, x22
  41cd0c:	add	x1, x1, #0xea8
  41cd10:	bl	402720 <strcasecmp@plt>
  41cd14:	cbz	w0, 41ce50 <nftw@plt+0x1a2d0>
  41cd18:	adrp	x1, 474000 <_obstack_memory_used@@Base+0x12bb8>
  41cd1c:	mov	x0, x22
  41cd20:	add	x1, x1, #0xeb8
  41cd24:	bl	402720 <strcasecmp@plt>
  41cd28:	cbz	w0, 41ce58 <nftw@plt+0x1a2d8>
  41cd2c:	adrp	x1, 474000 <_obstack_memory_used@@Base+0x12bb8>
  41cd30:	mov	x0, x22
  41cd34:	add	x1, x1, #0xec8
  41cd38:	bl	402720 <strcasecmp@plt>
  41cd3c:	cbz	w0, 41ce60 <nftw@plt+0x1a2e0>
  41cd40:	adrp	x1, 474000 <_obstack_memory_used@@Base+0x12bb8>
  41cd44:	mov	x0, x22
  41cd48:	add	x1, x1, #0xed8
  41cd4c:	bl	402720 <strcasecmp@plt>
  41cd50:	cbz	w0, 41ce68 <nftw@plt+0x1a2e8>
  41cd54:	adrp	x1, 474000 <_obstack_memory_used@@Base+0x12bb8>
  41cd58:	mov	x0, x22
  41cd5c:	add	x1, x1, #0xee8
  41cd60:	bl	402720 <strcasecmp@plt>
  41cd64:	cbz	w0, 41ce70 <nftw@plt+0x1a2f0>
  41cd68:	adrp	x1, 474000 <_obstack_memory_used@@Base+0x12bb8>
  41cd6c:	mov	x0, x22
  41cd70:	add	x1, x1, #0xef8
  41cd74:	bl	402720 <strcasecmp@plt>
  41cd78:	cbz	w0, 41ce78 <nftw@plt+0x1a2f8>
  41cd7c:	adrp	x1, 474000 <_obstack_memory_used@@Base+0x12bb8>
  41cd80:	mov	x0, x22
  41cd84:	add	x1, x1, #0xf08
  41cd88:	bl	402720 <strcasecmp@plt>
  41cd8c:	cbz	w0, 41ce80 <nftw@plt+0x1a300>
  41cd90:	adrp	x2, 41c000 <nftw@plt+0x19480>
  41cd94:	add	x2, x2, #0xe88
  41cd98:	mov	x1, x20
  41cd9c:	mov	x0, x21
  41cda0:	str	x2, [x19]
  41cda4:	bl	4029a0 <iconv_open@plt>
  41cda8:	str	x0, [x19, #8]
  41cdac:	mov	w1, #0xffffffff            	// #-1
  41cdb0:	str	w1, [x19, #16]
  41cdb4:	cmn	x0, #0x1
  41cdb8:	b.ne	41cc7c <nftw@plt+0x1a0fc>  // b.any
  41cdbc:	bl	402aa0 <__errno_location@plt>
  41cdc0:	ldr	w0, [x0]
  41cdc4:	cmp	w0, #0x16
  41cdc8:	b.eq	41cdf0 <nftw@plt+0x1a270>  // b.none
  41cdcc:	adrp	x2, 474000 <_obstack_memory_used@@Base+0x12bb8>
  41cdd0:	mov	x0, x24
  41cdd4:	add	x2, x2, #0xf48
  41cdd8:	mov	w1, #0x3                   	// #3
  41cddc:	bl	427990 <nftw@plt+0x24e10>
  41cde0:	adrp	x0, 41d000 <nftw@plt+0x1a480>
  41cde4:	add	x0, x0, #0x8
  41cde8:	str	x0, [x19]
  41cdec:	b	41cc7c <nftw@plt+0x1a0fc>
  41cdf0:	mov	x4, x21
  41cdf4:	mov	x3, x20
  41cdf8:	mov	x0, x24
  41cdfc:	adrp	x2, 474000 <_obstack_memory_used@@Base+0x12bb8>
  41ce00:	mov	w1, #0x3                   	// #3
  41ce04:	add	x2, x2, #0xf18
  41ce08:	bl	427178 <nftw@plt+0x245f8>
  41ce0c:	b	41cde0 <nftw@plt+0x1a260>
  41ce10:	mov	x0, #0x0                   	// #0
  41ce14:	add	x0, x0, x0, lsl #1
  41ce18:	adrp	x1, 477000 <_obstack_memory_used@@Base+0x15bb8>
  41ce1c:	add	x1, x1, #0x5d0
  41ce20:	mov	w2, #0xffffffff            	// #-1
  41ce24:	add	x0, x1, x0, lsl #3
  41ce28:	str	w2, [x19, #16]
  41ce2c:	ldp	x1, x0, [x0, #8]
  41ce30:	stp	x1, x0, [x19]
  41ce34:	mov	sp, x29
  41ce38:	ldp	x19, x20, [sp, #16]
  41ce3c:	ldp	x21, x22, [sp, #32]
  41ce40:	ldp	x23, x24, [sp, #48]
  41ce44:	ldr	x25, [sp, #64]
  41ce48:	ldp	x29, x30, [sp], #80
  41ce4c:	ret
  41ce50:	mov	x0, #0x1                   	// #1
  41ce54:	b	41ce14 <nftw@plt+0x1a294>
  41ce58:	mov	x0, #0x2                   	// #2
  41ce5c:	b	41ce14 <nftw@plt+0x1a294>
  41ce60:	mov	x0, #0x3                   	// #3
  41ce64:	b	41ce14 <nftw@plt+0x1a294>
  41ce68:	mov	x0, #0x4                   	// #4
  41ce6c:	b	41ce14 <nftw@plt+0x1a294>
  41ce70:	mov	x0, #0x5                   	// #5
  41ce74:	b	41ce14 <nftw@plt+0x1a294>
  41ce78:	mov	x0, #0x6                   	// #6
  41ce7c:	b	41ce14 <nftw@plt+0x1a294>
  41ce80:	mov	x0, #0x7                   	// #7
  41ce84:	b	41ce14 <nftw@plt+0x1a294>
  41ce88:	stp	x29, x30, [sp, #-80]!
  41ce8c:	mov	x4, #0x0                   	// #0
  41ce90:	mov	x29, sp
  41ce94:	stp	x19, x20, [sp, #16]
  41ce98:	mov	x20, x2
  41ce9c:	mov	x19, x3
  41cea0:	mov	x2, #0x0                   	// #0
  41cea4:	mov	x3, #0x0                   	// #0
  41cea8:	stp	x21, x22, [sp, #32]
  41ceac:	mov	x22, x1
  41ceb0:	mov	x21, x0
  41ceb4:	mov	x1, #0x0                   	// #0
  41ceb8:	bl	4028a0 <iconv@plt>
  41cebc:	cmn	x0, #0x1
  41cec0:	b.eq	41cf2c <nftw@plt+0x1a3ac>  // b.none
  41cec4:	ldp	x4, x3, [x19]
  41cec8:	ldr	x5, [x19, #16]
  41cecc:	add	x4, x4, x5
  41ced0:	sub	x1, x3, x5
  41ced4:	stp	x22, x4, [sp, #48]
  41ced8:	stp	x20, x1, [sp, #64]
  41cedc:	add	x4, sp, #0x48
  41cee0:	add	x3, sp, #0x38
  41cee4:	add	x2, sp, #0x40
  41cee8:	add	x1, sp, #0x30
  41ceec:	mov	x0, x21
  41cef0:	bl	4028a0 <iconv@plt>
  41cef4:	ldr	x0, [sp, #64]
  41cef8:	cbnz	x0, 41cfbc <nftw@plt+0x1a43c>
  41cefc:	add	x4, sp, #0x48
  41cf00:	add	x3, sp, #0x38
  41cf04:	mov	x0, x21
  41cf08:	mov	x2, #0x0                   	// #0
  41cf0c:	mov	x1, #0x0                   	// #0
  41cf10:	bl	4028a0 <iconv@plt>
  41cf14:	cmn	x0, #0x1
  41cf18:	b.ne	41cf98 <nftw@plt+0x1a418>  // b.any
  41cf1c:	bl	402aa0 <__errno_location@plt>
  41cf20:	ldr	w0, [x0]
  41cf24:	cmp	w0, #0x7
  41cf28:	b.eq	41cf40 <nftw@plt+0x1a3c0>  // b.none
  41cf2c:	mov	w0, #0x0                   	// #0
  41cf30:	ldp	x19, x20, [sp, #16]
  41cf34:	ldp	x21, x22, [sp, #32]
  41cf38:	ldp	x29, x30, [sp], #80
  41cf3c:	ret
  41cf40:	ldp	x0, x1, [x19]
  41cf44:	ldr	x2, [sp, #72]
  41cf48:	add	x2, x2, #0x100
  41cf4c:	str	x2, [sp, #72]
  41cf50:	add	x1, x1, #0x100
  41cf54:	str	x1, [x19, #8]
  41cf58:	bl	4615e8 <_obstack_memory_used@@Base+0x1a0>
  41cf5c:	mov	x1, x0
  41cf60:	ldr	x5, [x19, #8]
  41cf64:	str	x1, [x19]
  41cf68:	ldr	x2, [sp, #72]
  41cf6c:	add	x4, sp, #0x48
  41cf70:	add	x3, sp, #0x38
  41cf74:	mov	x0, x21
  41cf78:	sub	x5, x5, x2
  41cf7c:	mov	x2, #0x0                   	// #0
  41cf80:	add	x5, x1, x5
  41cf84:	mov	x1, #0x0                   	// #0
  41cf88:	str	x5, [sp, #56]
  41cf8c:	bl	4028a0 <iconv@plt>
  41cf90:	cmn	x0, #0x1
  41cf94:	b.eq	41cf2c <nftw@plt+0x1a3ac>  // b.none
  41cf98:	ldr	x1, [x19, #8]
  41cf9c:	mov	w0, #0x1                   	// #1
  41cfa0:	ldr	x2, [sp, #72]
  41cfa4:	ldp	x21, x22, [sp, #32]
  41cfa8:	sub	x1, x1, x2
  41cfac:	str	x1, [x19, #16]
  41cfb0:	ldp	x19, x20, [sp, #16]
  41cfb4:	ldp	x29, x30, [sp], #80
  41cfb8:	ret
  41cfbc:	bl	402aa0 <__errno_location@plt>
  41cfc0:	ldr	w0, [x0]
  41cfc4:	cmp	w0, #0x7
  41cfc8:	b.ne	41cf2c <nftw@plt+0x1a3ac>  // b.any
  41cfcc:	ldp	x0, x1, [x19]
  41cfd0:	ldr	x2, [sp, #72]
  41cfd4:	add	x2, x2, #0x100
  41cfd8:	str	x2, [sp, #72]
  41cfdc:	add	x1, x1, #0x100
  41cfe0:	str	x1, [x19, #8]
  41cfe4:	bl	4615e8 <_obstack_memory_used@@Base+0x1a0>
  41cfe8:	str	x0, [x19]
  41cfec:	ldr	x1, [x19, #8]
  41cff0:	ldr	x2, [sp, #72]
  41cff4:	sub	x1, x1, x2
  41cff8:	add	x0, x0, x1
  41cffc:	str	x0, [sp, #56]
  41d000:	b	41cedc <nftw@plt+0x1a35c>
  41d004:	nop
  41d008:	stp	x29, x30, [sp, #-48]!
  41d00c:	mov	x29, sp
  41d010:	stp	x19, x20, [sp, #16]
  41d014:	mov	x19, x3
  41d018:	mov	x20, x2
  41d01c:	ldr	x2, [x3, #16]
  41d020:	ldr	x3, [x3, #8]
  41d024:	ldr	x0, [x19]
  41d028:	str	x21, [sp, #32]
  41d02c:	mov	x21, x1
  41d030:	add	x1, x2, x20
  41d034:	cmp	x1, x3
  41d038:	b.hi	41d06c <nftw@plt+0x1a4ec>  // b.pmore
  41d03c:	mov	x1, x21
  41d040:	add	x0, x0, x2
  41d044:	mov	x2, x20
  41d048:	bl	402490 <memcpy@plt>
  41d04c:	ldr	x2, [x19, #16]
  41d050:	mov	w0, #0x1                   	// #1
  41d054:	ldr	x21, [sp, #32]
  41d058:	add	x2, x2, x20
  41d05c:	str	x2, [x19, #16]
  41d060:	ldp	x19, x20, [sp, #16]
  41d064:	ldp	x29, x30, [sp], #48
  41d068:	ret
  41d06c:	add	x1, x1, x1, lsr #2
  41d070:	str	x1, [x19, #8]
  41d074:	bl	4615e8 <_obstack_memory_used@@Base+0x1a0>
  41d078:	str	x0, [x19]
  41d07c:	ldr	x2, [x19, #16]
  41d080:	b	41d03c <nftw@plt+0x1a4bc>
  41d084:	nop
  41d088:	stp	x29, x30, [sp, #-96]!
  41d08c:	cmp	x0, w4, sxtw
  41d090:	mov	x29, sp
  41d094:	stp	x19, x20, [sp, #16]
  41d098:	mov	w19, w2
  41d09c:	mov	x20, x3
  41d0a0:	stp	x23, x24, [sp, #48]
  41d0a4:	ldp	x2, x24, [x3, #8]
  41d0a8:	b.eq	41d190 <nftw@plt+0x1a610>  // b.none
  41d0ac:	stp	x25, x26, [sp, #64]
  41d0b0:	sxtw	x25, w4
  41d0b4:	cmp	x0, #0x20
  41d0b8:	mov	x3, #0x20                  	// #32
  41d0bc:	stp	x21, x22, [sp, #32]
  41d0c0:	mov	x21, x0
  41d0c4:	udiv	x23, x25, x0
  41d0c8:	csel	x0, x0, x3, ls  // ls = plast
  41d0cc:	mov	x3, #0x1                   	// #1
  41d0d0:	str	x27, [sp, #80]
  41d0d4:	lsl	x3, x3, x0
  41d0d8:	ldrb	w27, [x1]
  41d0dc:	sub	x22, x3, #0x1
  41d0e0:	add	x0, x23, x24
  41d0e4:	sub	x26, x23, #0x1
  41d0e8:	cmp	x0, x2
  41d0ec:	b.hi	41d178 <nftw@plt+0x1a5f8>  // b.pmore
  41d0f0:	cmp	x25, x21
  41d0f4:	b.cc	41d128 <nftw@plt+0x1a5a8>  // b.lo, b.ul, b.last
  41d0f8:	mov	w3, w22
  41d0fc:	mov	w0, w21
  41d100:	mov	x1, #0x0                   	// #0
  41d104:	cbnz	w27, 41d150 <nftw@plt+0x1a5d0>
  41d108:	ldr	x2, [x20]
  41d10c:	and	w4, w3, w19
  41d110:	lsr	w19, w19, w0
  41d114:	add	x2, x2, x1
  41d118:	add	x1, x1, #0x1
  41d11c:	cmp	x1, x23
  41d120:	strb	w4, [x2, x24]
  41d124:	b.cc	41d108 <nftw@plt+0x1a588>  // b.lo, b.ul, b.last
  41d128:	ldr	x0, [x20, #16]
  41d12c:	ldp	x21, x22, [sp, #32]
  41d130:	add	x23, x0, x23
  41d134:	ldp	x25, x26, [sp, #64]
  41d138:	ldr	x27, [sp, #80]
  41d13c:	str	x23, [x20, #16]
  41d140:	ldp	x19, x20, [sp, #16]
  41d144:	ldp	x23, x24, [sp, #48]
  41d148:	ldp	x29, x30, [sp], #96
  41d14c:	ret
  41d150:	ldr	x2, [x20]
  41d154:	sub	x4, x24, x1
  41d158:	and	w5, w19, w3
  41d15c:	add	x1, x1, #0x1
  41d160:	add	x2, x2, x26
  41d164:	cmp	x23, x1
  41d168:	lsr	w19, w19, w0
  41d16c:	strb	w5, [x2, x4]
  41d170:	b.hi	41d150 <nftw@plt+0x1a5d0>  // b.pmore
  41d174:	b	41d128 <nftw@plt+0x1a5a8>
  41d178:	ldr	x0, [x20]
  41d17c:	add	x1, x2, #0x100
  41d180:	str	x1, [x20, #8]
  41d184:	bl	4615e8 <_obstack_memory_used@@Base+0x1a0>
  41d188:	str	x0, [x20]
  41d18c:	b	41d0f0 <nftw@plt+0x1a570>
  41d190:	add	x1, x24, #0x1
  41d194:	cmp	x1, x2
  41d198:	ldr	x0, [x3]
  41d19c:	b.hi	41d1b8 <nftw@plt+0x1a638>  // b.pmore
  41d1a0:	str	x1, [x20, #16]
  41d1a4:	strb	w19, [x0, x24]
  41d1a8:	ldp	x19, x20, [sp, #16]
  41d1ac:	ldp	x23, x24, [sp, #48]
  41d1b0:	ldp	x29, x30, [sp], #96
  41d1b4:	ret
  41d1b8:	add	x1, x2, #0x100
  41d1bc:	str	x1, [x3, #8]
  41d1c0:	bl	4615e8 <_obstack_memory_used@@Base+0x1a0>
  41d1c4:	str	x0, [x20]
  41d1c8:	ldr	x24, [x20, #16]
  41d1cc:	add	x1, x24, #0x1
  41d1d0:	b	41d1a0 <nftw@plt+0x1a620>
  41d1d4:	nop
  41d1d8:	stp	x29, x30, [sp, #-128]!
  41d1dc:	cmp	x2, #0x3
  41d1e0:	mov	x29, sp
  41d1e4:	stp	x19, x20, [sp, #16]
  41d1e8:	mov	x20, x1
  41d1ec:	mov	x19, x3
  41d1f0:	ldp	x4, x1, [x3]
  41d1f4:	stp	x21, x22, [sp, #32]
  41d1f8:	mov	x22, x2
  41d1fc:	ldr	x21, [x3, #16]
  41d200:	add	x4, x4, x21
  41d204:	sub	x21, x1, x21
  41d208:	b.ls	41d3fc <nftw@plt+0x1a87c>  // b.plast
  41d20c:	cmp	x0, #0x0
  41d210:	stp	x23, x24, [sp, #48]
  41d214:	add	x24, sp, #0x7d
  41d218:	stp	x27, x28, [sp, #80]
  41d21c:	mov	x27, #0x3                   	// #3
  41d220:	csel	x27, x27, xzr, ne  // ne = any
  41d224:	adrp	x23, 47b000 <_obstack_memory_used@@Base+0x19bb8>
  41d228:	mov	w28, #0xffff2800            	// #-55296
  41d22c:	stp	x25, x26, [sp, #64]
  41d230:	mov	x25, x0
  41d234:	add	x0, x23, #0x78
  41d238:	str	x0, [sp, #104]
  41d23c:	ldrb	w0, [x20, #1]
  41d240:	ldrb	w3, [x20, #2]
  41d244:	cbz	x25, 41d3ac <nftw@plt+0x1a82c>
  41d248:	ldrb	w2, [x20]
  41d24c:	lsl	w1, w0, #16
  41d250:	mov	w0, #0x7ffffffe            	// #2147483646
  41d254:	add	w1, w1, w2, lsl #24
  41d258:	add	w1, w1, w3, lsl #8
  41d25c:	ldrb	w3, [x20, x27]
  41d260:	add	w3, w3, w1
  41d264:	add	w1, w3, w28
  41d268:	cmp	w1, #0x7ff
  41d26c:	ccmp	w3, w0, #0x2, hi  // hi = pmore
  41d270:	b.hi	41d3d8 <nftw@plt+0x1a858>  // b.pmore
  41d274:	cmp	w3, #0x7f
  41d278:	b.hi	41d2dc <nftw@plt+0x1a75c>  // b.pmore
  41d27c:	strb	w3, [sp, #125]
  41d280:	mov	x1, x24
  41d284:	mov	x23, #0x1                   	// #1
  41d288:	cbz	x21, 41d37c <nftw@plt+0x1a7fc>
  41d28c:	add	x26, sp, #0x7e
  41d290:	mov	x0, x4
  41d294:	sub	x26, x26, x1
  41d298:	sub	x21, x21, x23
  41d29c:	mov	x2, x26
  41d2a0:	bl	402490 <memcpy@plt>
  41d2a4:	subs	x22, x22, #0x4
  41d2a8:	add	x4, x0, x26
  41d2ac:	b.ne	41d408 <nftw@plt+0x1a888>  // b.any
  41d2b0:	ldp	x23, x24, [sp, #48]
  41d2b4:	ldp	x25, x26, [sp, #64]
  41d2b8:	ldp	x27, x28, [sp, #80]
  41d2bc:	ldr	x1, [x19, #8]
  41d2c0:	sub	x21, x1, x21
  41d2c4:	mov	w0, #0x1                   	// #1
  41d2c8:	str	x21, [x19, #16]
  41d2cc:	ldp	x19, x20, [sp, #16]
  41d2d0:	ldp	x21, x22, [sp, #32]
  41d2d4:	ldp	x29, x30, [sp], #128
  41d2d8:	ret
  41d2dc:	and	w0, w3, #0x3f
  41d2e0:	cmp	w3, #0xfbf
  41d2e4:	orr	w0, w0, #0xffffff80
  41d2e8:	strb	w0, [sp, #125]
  41d2ec:	lsr	w0, w3, #6
  41d2f0:	b.ls	41d428 <nftw@plt+0x1a8a8>  // b.plast
  41d2f4:	and	w1, w0, #0x3f
  41d2f8:	lsr	w0, w3, #12
  41d2fc:	orr	w1, w1, #0xffffff80
  41d300:	strb	w1, [sp, #124]
  41d304:	cmp	w0, #0x3e
  41d308:	b.ls	41d450 <nftw@plt+0x1a8d0>  // b.plast
  41d30c:	and	w1, w0, #0x3f
  41d310:	lsr	w0, w3, #18
  41d314:	orr	w1, w1, #0xffffff80
  41d318:	strb	w1, [sp, #123]
  41d31c:	cmp	w0, #0x3e
  41d320:	b.ls	41d47c <nftw@plt+0x1a8fc>  // b.plast
  41d324:	and	w1, w0, #0x3f
  41d328:	lsr	w0, w3, #24
  41d32c:	orr	w1, w1, #0xffffff80
  41d330:	strb	w1, [sp, #122]
  41d334:	cmp	w0, #0x3e
  41d338:	b.ls	41d4a8 <nftw@plt+0x1a928>  // b.plast
  41d33c:	and	w0, w0, #0x3f
  41d340:	add	x1, sp, #0x78
  41d344:	orr	w6, w0, #0xffffff80
  41d348:	add	x1, x1, #0x2
  41d34c:	lsr	w0, w3, #30
  41d350:	add	x3, sp, #0x79
  41d354:	mov	x23, #0x6                   	// #6
  41d358:	mov	x2, #0x5                   	// #5
  41d35c:	strb	w6, [sp, #121]
  41d360:	ldr	x5, [sp, #104]
  41d364:	sub	x1, x1, #0x2
  41d368:	cmp	x21, x23
  41d36c:	ldrb	w2, [x5, x2]
  41d370:	orr	w0, w0, w2
  41d374:	sturb	w0, [x3, #-1]
  41d378:	b.cs	41d28c <nftw@plt+0x1a70c>  // b.hs, b.nlast
  41d37c:	ldp	x0, x1, [x19]
  41d380:	add	x21, x21, #0x100
  41d384:	add	x1, x1, #0x100
  41d388:	str	x1, [x19, #8]
  41d38c:	bl	4615e8 <_obstack_memory_used@@Base+0x1a0>
  41d390:	str	x0, [x19]
  41d394:	ldr	x4, [x19, #8]
  41d398:	ldrb	w3, [x20, #2]
  41d39c:	sub	x4, x4, x21
  41d3a0:	add	x4, x0, x4
  41d3a4:	ldrb	w0, [x20, #1]
  41d3a8:	cbnz	x25, 41d248 <nftw@plt+0x1a6c8>
  41d3ac:	ldrb	w1, [x20, #3]
  41d3b0:	lsl	w3, w3, #16
  41d3b4:	add	w3, w3, w1, lsl #24
  41d3b8:	add	w1, w3, w0, lsl #8
  41d3bc:	ldrb	w3, [x20, x27]
  41d3c0:	mov	w0, #0x7ffffffe            	// #2147483646
  41d3c4:	add	w3, w3, w1
  41d3c8:	add	w1, w3, w28
  41d3cc:	cmp	w1, #0x7ff
  41d3d0:	ccmp	w3, w0, #0x2, hi  // hi = pmore
  41d3d4:	b.ls	41d274 <nftw@plt+0x1a6f4>  // b.plast
  41d3d8:	ldp	x23, x24, [sp, #48]
  41d3dc:	mov	w19, #0x54                  	// #84
  41d3e0:	ldp	x25, x26, [sp, #64]
  41d3e4:	ldp	x27, x28, [sp, #80]
  41d3e8:	bl	402aa0 <__errno_location@plt>
  41d3ec:	mov	x1, x0
  41d3f0:	mov	w0, #0x0                   	// #0
  41d3f4:	str	w19, [x1]
  41d3f8:	b	41d2cc <nftw@plt+0x1a74c>
  41d3fc:	cbz	x2, 41d2c0 <nftw@plt+0x1a740>
  41d400:	mov	w19, #0x16                  	// #22
  41d404:	b	41d3e8 <nftw@plt+0x1a868>
  41d408:	add	x20, x20, #0x4
  41d40c:	cmp	x22, #0x3
  41d410:	b.hi	41d23c <nftw@plt+0x1a6bc>  // b.pmore
  41d414:	mov	w19, #0x16                  	// #22
  41d418:	ldp	x23, x24, [sp, #48]
  41d41c:	ldp	x25, x26, [sp, #64]
  41d420:	ldp	x27, x28, [sp, #80]
  41d424:	b	41d3e8 <nftw@plt+0x1a868>
  41d428:	tst	w0, #0xe0
  41d42c:	b.eq	41d4b4 <nftw@plt+0x1a934>  // b.none
  41d430:	orr	w1, w0, #0xffffff80
  41d434:	mov	w0, #0x0                   	// #0
  41d438:	strb	w1, [sp, #124]
  41d43c:	add	x3, sp, #0x7c
  41d440:	mov	x1, x24
  41d444:	mov	x23, #0x3                   	// #3
  41d448:	mov	x2, #0x2                   	// #2
  41d44c:	b	41d360 <nftw@plt+0x1a7e0>
  41d450:	tst	w0, #0xf0
  41d454:	b.eq	41d43c <nftw@plt+0x1a8bc>  // b.none
  41d458:	orr	w1, w0, #0xffffff80
  41d45c:	mov	w0, #0x0                   	// #0
  41d460:	strb	w1, [sp, #123]
  41d464:	add	x1, sp, #0x78
  41d468:	mov	x23, #0x4                   	// #4
  41d46c:	mov	x2, #0x3                   	// #3
  41d470:	add	x3, x1, x2
  41d474:	add	x1, x1, x23
  41d478:	b	41d360 <nftw@plt+0x1a7e0>
  41d47c:	tst	w0, #0xf8
  41d480:	b.eq	41d464 <nftw@plt+0x1a8e4>  // b.none
  41d484:	orr	w1, w0, #0xffffff80
  41d488:	mov	w0, #0x0                   	// #0
  41d48c:	strb	w1, [sp, #122]
  41d490:	add	x1, sp, #0x78
  41d494:	add	x3, sp, #0x7a
  41d498:	add	x1, x1, #0x3
  41d49c:	mov	x23, #0x5                   	// #5
  41d4a0:	mov	x2, #0x4                   	// #4
  41d4a4:	b	41d360 <nftw@plt+0x1a7e0>
  41d4a8:	tst	w0, #0xfc
  41d4ac:	b.ne	41d33c <nftw@plt+0x1a7bc>  // b.any
  41d4b0:	b	41d490 <nftw@plt+0x1a910>
  41d4b4:	mov	x3, x24
  41d4b8:	add	x1, sp, #0x7e
  41d4bc:	mov	x23, #0x2                   	// #2
  41d4c0:	mov	x2, #0x1                   	// #1
  41d4c4:	b	41d360 <nftw@plt+0x1a7e0>
  41d4c8:	stp	x29, x30, [sp, #-144]!
  41d4cc:	cmp	x2, #0x1
  41d4d0:	mov	x29, sp
  41d4d4:	stp	x19, x20, [sp, #16]
  41d4d8:	mov	x19, x3
  41d4dc:	ldp	x4, x3, [x3]
  41d4e0:	stp	x21, x22, [sp, #32]
  41d4e4:	ldr	x21, [x19, #16]
  41d4e8:	stp	x25, x26, [sp, #64]
  41d4ec:	mov	x26, x2
  41d4f0:	add	x4, x4, x21
  41d4f4:	sub	x21, x3, x21
  41d4f8:	b.ls	41d6cc <nftw@plt+0x1ab4c>  // b.plast
  41d4fc:	cmp	x0, #0x0
  41d500:	mov	x22, #0x3                   	// #3
  41d504:	cset	x7, ne  // ne = any
  41d508:	stp	x23, x24, [sp, #48]
  41d50c:	adrp	x23, 47b000 <_obstack_memory_used@@Base+0x19bb8>
  41d510:	add	x23, x23, #0x78
  41d514:	stp	x27, x28, [sp, #80]
  41d518:	mov	x28, x0
  41d51c:	mov	x27, x1
  41d520:	mov	x0, #0x2                   	// #2
  41d524:	csel	x0, x22, x0, ne  // ne = any
  41d528:	cset	x22, eq  // eq = none
  41d52c:	mov	w24, #0xffff2400            	// #-56320
  41d530:	str	x0, [sp, #96]
  41d534:	add	x0, sp, #0x8c
  41d538:	str	x0, [sp, #104]
  41d53c:	ldrb	w0, [x27, x7]
  41d540:	ldrb	w20, [x27, x22]
  41d544:	add	w20, w0, w20, lsl #8
  41d548:	add	w0, w20, w24
  41d54c:	cmp	w0, #0x3ff
  41d550:	b.ls	41d660 <nftw@plt+0x1aae0>  // b.plast
  41d554:	mov	w1, #0xffff2800            	// #-55296
  41d558:	add	w3, w20, w1
  41d55c:	cmp	w3, #0x3ff
  41d560:	b.hi	41d680 <nftw@plt+0x1ab00>  // b.pmore
  41d564:	cmp	x26, #0x3
  41d568:	b.ls	41d6f4 <nftw@plt+0x1ab74>  // b.plast
  41d56c:	cbz	x28, 41d704 <nftw@plt+0x1ab84>
  41d570:	ldrb	w0, [x27, #2]
  41d574:	lsl	w1, w0, #8
  41d578:	ldr	x0, [sp, #96]
  41d57c:	ldrb	w0, [x27, x0]
  41d580:	add	w0, w0, w1
  41d584:	add	w1, w0, w24
  41d588:	cmp	w1, #0x3ff
  41d58c:	b.hi	41d660 <nftw@plt+0x1aae0>  // b.pmore
  41d590:	add	w3, w0, w3, lsl #10
  41d594:	mov	w0, #0x2400                	// #9216
  41d598:	add	w20, w3, w0
  41d59c:	and	w3, w3, #0x3f
  41d5a0:	orr	w3, w3, #0xffffff80
  41d5a4:	strb	w3, [sp, #141]
  41d5a8:	ubfx	x0, x20, #6, #6
  41d5ac:	lsr	w3, w20, #12
  41d5b0:	orr	w0, w0, #0xffffff80
  41d5b4:	strb	w0, [sp, #140]
  41d5b8:	cmp	w3, #0x3e
  41d5bc:	b.ls	41d710 <nftw@plt+0x1ab90>  // b.plast
  41d5c0:	add	x1, sp, #0x88
  41d5c4:	and	w3, w3, #0x3f
  41d5c8:	mov	x0, #0x3                   	// #3
  41d5cc:	add	x2, x1, x0
  41d5d0:	ldr	x1, [sp, #104]
  41d5d4:	orr	w9, w3, #0xffffff80
  41d5d8:	lsr	w3, w20, #18
  41d5dc:	mov	x8, #0x4                   	// #4
  41d5e0:	strb	w9, [sp, #139]
  41d5e4:	ldrb	w0, [x23, x0]
  41d5e8:	sub	x1, x1, #0x2
  41d5ec:	cmp	x8, x21
  41d5f0:	orr	w3, w3, w0
  41d5f4:	sturb	w3, [x2, #-1]
  41d5f8:	b.hi	41d69c <nftw@plt+0x1ab1c>  // b.pmore
  41d5fc:	add	x25, sp, #0x8e
  41d600:	mov	x0, x4
  41d604:	sub	x25, x25, x1
  41d608:	stp	x7, x8, [sp, #112]
  41d60c:	mov	x2, x25
  41d610:	bl	402490 <memcpy@plt>
  41d614:	add	x4, x0, x25
  41d618:	ldp	x7, x8, [sp, #112]
  41d61c:	mov	w0, #0xffff                	// #65535
  41d620:	cmp	w20, w0
  41d624:	sub	x21, x21, x8
  41d628:	b.hi	41d6d8 <nftw@plt+0x1ab58>  // b.pmore
  41d62c:	subs	x26, x26, #0x2
  41d630:	b.ne	41d6e8 <nftw@plt+0x1ab68>  // b.any
  41d634:	ldp	x23, x24, [sp, #48]
  41d638:	ldp	x27, x28, [sp, #80]
  41d63c:	ldr	x3, [x19, #8]
  41d640:	sub	x21, x3, x21
  41d644:	mov	w0, #0x1                   	// #1
  41d648:	str	x21, [x19, #16]
  41d64c:	ldp	x19, x20, [sp, #16]
  41d650:	ldp	x21, x22, [sp, #32]
  41d654:	ldp	x25, x26, [sp, #64]
  41d658:	ldp	x29, x30, [sp], #144
  41d65c:	ret
  41d660:	ldp	x23, x24, [sp, #48]
  41d664:	mov	w19, #0x54                  	// #84
  41d668:	ldp	x27, x28, [sp, #80]
  41d66c:	bl	402aa0 <__errno_location@plt>
  41d670:	mov	x1, x0
  41d674:	mov	w0, #0x0                   	// #0
  41d678:	str	w19, [x1]
  41d67c:	b	41d64c <nftw@plt+0x1aacc>
  41d680:	cmp	w20, #0x7f
  41d684:	and	w0, w20, #0xff
  41d688:	b.hi	41d72c <nftw@plt+0x1abac>  // b.pmore
  41d68c:	strb	w0, [sp, #141]
  41d690:	add	x1, sp, #0x8d
  41d694:	mov	x8, #0x1                   	// #1
  41d698:	cbnz	x21, 41d5fc <nftw@plt+0x1aa7c>
  41d69c:	ldp	x0, x1, [x19]
  41d6a0:	str	x7, [sp, #112]
  41d6a4:	add	x21, x21, #0x100
  41d6a8:	add	x1, x1, #0x100
  41d6ac:	str	x1, [x19, #8]
  41d6b0:	bl	4615e8 <_obstack_memory_used@@Base+0x1a0>
  41d6b4:	str	x0, [x19]
  41d6b8:	ldr	x4, [x19, #8]
  41d6bc:	ldr	x7, [sp, #112]
  41d6c0:	sub	x4, x4, x21
  41d6c4:	add	x4, x0, x4
  41d6c8:	b	41d53c <nftw@plt+0x1a9bc>
  41d6cc:	cbz	x2, 41d640 <nftw@plt+0x1aac0>
  41d6d0:	mov	w19, #0x16                  	// #22
  41d6d4:	b	41d66c <nftw@plt+0x1aaec>
  41d6d8:	subs	x26, x26, #0x4
  41d6dc:	b.eq	41d634 <nftw@plt+0x1aab4>  // b.none
  41d6e0:	add	x27, x27, #0x4
  41d6e4:	b	41d6ec <nftw@plt+0x1ab6c>
  41d6e8:	add	x27, x27, #0x2
  41d6ec:	cmp	x26, #0x1
  41d6f0:	b.hi	41d53c <nftw@plt+0x1a9bc>  // b.pmore
  41d6f4:	mov	w19, #0x16                  	// #22
  41d6f8:	ldp	x23, x24, [sp, #48]
  41d6fc:	ldp	x27, x28, [sp, #80]
  41d700:	b	41d66c <nftw@plt+0x1aaec>
  41d704:	ldrb	w0, [x27, #3]
  41d708:	lsl	w1, w0, #8
  41d70c:	b	41d578 <nftw@plt+0x1a9f8>
  41d710:	tst	w3, #0xf0
  41d714:	b.ne	41d5c0 <nftw@plt+0x1aa40>  // b.any
  41d718:	add	x1, sp, #0x8d
  41d71c:	mov	x8, #0x3                   	// #3
  41d720:	mov	x0, #0x2                   	// #2
  41d724:	ldr	x2, [sp, #104]
  41d728:	b	41d5e4 <nftw@plt+0x1aa64>
  41d72c:	and	w0, w20, #0x3f
  41d730:	cmp	w20, #0xfbf
  41d734:	orr	w0, w0, #0xffffff80
  41d738:	strb	w0, [sp, #141]
  41d73c:	lsr	w3, w20, #6
  41d740:	b.hi	41d784 <nftw@plt+0x1ac04>  // b.pmore
  41d744:	tst	w3, #0xe0
  41d748:	b.eq	41d76c <nftw@plt+0x1abec>  // b.none
  41d74c:	orr	w0, w3, #0xffffff80
  41d750:	add	x1, sp, #0x8d
  41d754:	mov	w3, #0x0                   	// #0
  41d758:	mov	x8, #0x3                   	// #3
  41d75c:	strb	w0, [sp, #140]
  41d760:	mov	x0, #0x2                   	// #2
  41d764:	ldr	x2, [sp, #104]
  41d768:	b	41d5e4 <nftw@plt+0x1aa64>
  41d76c:	add	x0, sp, #0x88
  41d770:	add	x2, sp, #0x8d
  41d774:	add	x1, x0, #0x6
  41d778:	mov	x8, #0x2                   	// #2
  41d77c:	mov	x0, #0x1                   	// #1
  41d780:	b	41d5e4 <nftw@plt+0x1aa64>
  41d784:	and	w0, w3, #0x3f
  41d788:	lsr	w3, w20, #12
  41d78c:	orr	w0, w0, #0xffffff80
  41d790:	strb	w0, [sp, #140]
  41d794:	b	41d718 <nftw@plt+0x1ab98>
  41d798:	stp	x29, x30, [sp, #-96]!
  41d79c:	mov	x29, sp
  41d7a0:	ldp	x4, x5, [x3]
  41d7a4:	stp	x19, x20, [sp, #16]
  41d7a8:	mov	x19, x3
  41d7ac:	ldr	x3, [x3, #16]
  41d7b0:	add	x4, x4, x3
  41d7b4:	sub	x20, x5, x3
  41d7b8:	cbz	x2, 41d8b8 <nftw@plt+0x1ad38>
  41d7bc:	cmp	x0, #0x0
  41d7c0:	stp	x21, x22, [sp, #32]
  41d7c4:	mov	x21, x1
  41d7c8:	mov	x22, x2
  41d7cc:	mov	x1, #0x2                   	// #2
  41d7d0:	stp	x23, x24, [sp, #48]
  41d7d4:	mov	x23, x0
  41d7d8:	mov	x0, #0x3                   	// #3
  41d7dc:	csel	x24, x1, x0, ne  // ne = any
  41d7e0:	stp	x25, x26, [sp, #64]
  41d7e4:	mov	w25, #0x7fffff80            	// #2147483520
  41d7e8:	mov	w26, #0xffff                	// #65535
  41d7ec:	str	x27, [sp, #80]
  41d7f0:	mov	w27, #0x1fffff              	// #2097151
  41d7f4:	ldrb	w3, [x21]
  41d7f8:	cmp	w3, #0x7f
  41d7fc:	mov	w5, w3
  41d800:	b.ls	41d870 <nftw@plt+0x1acf0>  // b.plast
  41d804:	and	w0, w3, #0xffffffe0
  41d808:	cmp	w0, #0xc0
  41d80c:	b.eq	41daa8 <nftw@plt+0x1af28>  // b.none
  41d810:	and	w0, w3, #0xfffffff0
  41d814:	cmp	w0, #0xe0
  41d818:	b.eq	41dac4 <nftw@plt+0x1af44>  // b.none
  41d81c:	and	w0, w3, #0xfffffff8
  41d820:	cmp	w0, #0xf0
  41d824:	b.eq	41dae0 <nftw@plt+0x1af60>  // b.none
  41d828:	and	w0, w3, #0xfffffffc
  41d82c:	cmp	w0, #0xf8
  41d830:	b.eq	41dafc <nftw@plt+0x1af7c>  // b.none
  41d834:	and	w0, w3, #0xfffffffe
  41d838:	cmp	w0, #0xfc
  41d83c:	b.eq	41d910 <nftw@plt+0x1ad90>  // b.none
  41d840:	mov	w19, #0x54                  	// #84
  41d844:	bl	402aa0 <__errno_location@plt>
  41d848:	mov	x1, x0
  41d84c:	ldp	x21, x22, [sp, #32]
  41d850:	mov	w0, #0x0                   	// #0
  41d854:	ldp	x23, x24, [sp, #48]
  41d858:	ldp	x25, x26, [sp, #64]
  41d85c:	ldr	x27, [sp, #80]
  41d860:	str	w19, [x1]
  41d864:	ldp	x19, x20, [sp, #16]
  41d868:	ldp	x29, x30, [sp], #96
  41d86c:	ret
  41d870:	cmp	x20, #0x1
  41d874:	sub	x6, x22, #0x1
  41d878:	add	x2, x21, #0x1
  41d87c:	b.ls	41d8d8 <nftw@plt+0x1ad58>  // b.plast
  41d880:	cmp	x23, #0x0
  41d884:	lsr	w1, w5, #8
  41d888:	cset	w3, ne  // ne = any
  41d88c:	cset	w0, eq  // eq = none
  41d890:	sub	x20, x20, #0x2
  41d894:	strb	w5, [x4, w3, uxtw]
  41d898:	strb	w1, [x4, w0, uxtw]
  41d89c:	cbnz	x6, 41d900 <nftw@plt+0x1ad80>
  41d8a0:	ldr	x3, [x19, #8]
  41d8a4:	ldp	x21, x22, [sp, #32]
  41d8a8:	sub	x3, x3, x20
  41d8ac:	ldp	x23, x24, [sp, #48]
  41d8b0:	ldp	x25, x26, [sp, #64]
  41d8b4:	ldr	x27, [sp, #80]
  41d8b8:	str	x3, [x19, #16]
  41d8bc:	mov	w0, #0x1                   	// #1
  41d8c0:	ldp	x19, x20, [sp, #16]
  41d8c4:	ldp	x29, x30, [sp], #96
  41d8c8:	ret
  41d8cc:	cmp	x20, #0x1
  41d8d0:	b.hi	41d880 <nftw@plt+0x1ad00>  // b.pmore
  41d8d4:	nop
  41d8d8:	ldp	x0, x1, [x19]
  41d8dc:	add	x20, x20, #0x100
  41d8e0:	add	x1, x1, #0x100
  41d8e4:	str	x1, [x19, #8]
  41d8e8:	bl	4615e8 <_obstack_memory_used@@Base+0x1a0>
  41d8ec:	str	x0, [x19]
  41d8f0:	ldr	x4, [x19, #8]
  41d8f4:	sub	x4, x4, x20
  41d8f8:	add	x4, x0, x4
  41d8fc:	b	41d7f4 <nftw@plt+0x1ac74>
  41d900:	add	x4, x4, #0x2
  41d904:	mov	x22, x6
  41d908:	mov	x21, x2
  41d90c:	b	41d7f4 <nftw@plt+0x1ac74>
  41d910:	mov	w1, #0x1                   	// #1
  41d914:	mov	w7, w1
  41d918:	mov	w8, w1
  41d91c:	mov	w9, w1
  41d920:	mov	w0, w1
  41d924:	mov	x6, #0x6                   	// #6
  41d928:	cmp	x22, x6
  41d92c:	b.cc	41db18 <nftw@plt+0x1af98>  // b.lo, b.ul, b.last
  41d930:	ldrb	w5, [x21, #1]
  41d934:	and	w3, w3, w0
  41d938:	add	x2, x21, #0x2
  41d93c:	and	w0, w5, #0xc0
  41d940:	cmp	w0, #0x80
  41d944:	b.ne	41d840 <nftw@plt+0x1acc0>  // b.any
  41d948:	and	w5, w5, #0x3f
  41d94c:	cmp	x6, #0x2
  41d950:	add	w5, w5, w3, lsl #6
  41d954:	b.eq	41d9e0 <nftw@plt+0x1ae60>  // b.none
  41d958:	ldrb	w0, [x21, #2]
  41d95c:	add	x2, x21, #0x3
  41d960:	and	w3, w0, #0xc0
  41d964:	cmp	w3, #0x80
  41d968:	b.ne	41d840 <nftw@plt+0x1acc0>  // b.any
  41d96c:	and	w0, w0, #0x3f
  41d970:	cmp	x6, #0x3
  41d974:	add	w5, w0, w5, lsl #6
  41d978:	b.eq	41d9e0 <nftw@plt+0x1ae60>  // b.none
  41d97c:	ldrb	w0, [x21, #3]
  41d980:	add	x2, x21, #0x4
  41d984:	and	w3, w0, #0xc0
  41d988:	cmp	w3, #0x80
  41d98c:	b.ne	41d840 <nftw@plt+0x1acc0>  // b.any
  41d990:	and	w0, w0, #0x3f
  41d994:	cmp	x6, #0x4
  41d998:	add	w5, w0, w5, lsl #6
  41d99c:	b.eq	41d9e0 <nftw@plt+0x1ae60>  // b.none
  41d9a0:	ldrb	w0, [x21, #4]
  41d9a4:	add	x2, x21, #0x5
  41d9a8:	and	w3, w0, #0xc0
  41d9ac:	cmp	w3, #0x80
  41d9b0:	b.ne	41d840 <nftw@plt+0x1acc0>  // b.any
  41d9b4:	and	w0, w0, #0x3f
  41d9b8:	cmp	x6, #0x5
  41d9bc:	add	w5, w0, w5, lsl #6
  41d9c0:	b.eq	41d9e0 <nftw@plt+0x1ae60>  // b.none
  41d9c4:	ldrb	w0, [x21, #5]
  41d9c8:	add	x2, x21, #0x6
  41d9cc:	and	w3, w0, #0xc0
  41d9d0:	cmp	w3, #0x80
  41d9d4:	b.ne	41d840 <nftw@plt+0x1acc0>  // b.any
  41d9d8:	and	w0, w0, #0x3f
  41d9dc:	add	w5, w0, w5, lsl #6
  41d9e0:	sub	w0, w5, #0x80
  41d9e4:	cmp	w0, w25
  41d9e8:	b.cs	41d840 <nftw@plt+0x1acc0>  // b.hs, b.nlast
  41d9ec:	cmp	w5, #0x7ff
  41d9f0:	ccmp	w9, #0x0, #0x4, ls  // ls = plast
  41d9f4:	b.ne	41d840 <nftw@plt+0x1acc0>  // b.any
  41d9f8:	cmp	w8, #0x0
  41d9fc:	ccmp	w5, w26, #0x2, ne  // ne = any
  41da00:	b.ls	41d840 <nftw@plt+0x1acc0>  // b.plast
  41da04:	cmp	w7, #0x0
  41da08:	ccmp	w5, w27, #0x2, ne  // ne = any
  41da0c:	b.ls	41d840 <nftw@plt+0x1acc0>  // b.plast
  41da10:	cmp	w1, #0x0
  41da14:	mov	w0, #0x3ffffff             	// #67108863
  41da18:	ccmp	w5, w0, #0x2, ne  // ne = any
  41da1c:	b.ls	41d840 <nftw@plt+0x1acc0>  // b.plast
  41da20:	mov	w3, #0xffff2800            	// #-55296
  41da24:	add	w0, w5, w3
  41da28:	cmp	w0, #0x7ff
  41da2c:	b.ls	41d840 <nftw@plt+0x1acc0>  // b.plast
  41da30:	mov	w0, #0x10ffff              	// #1114111
  41da34:	sub	x6, x22, x6
  41da38:	cmp	w5, w0
  41da3c:	b.hi	41d840 <nftw@plt+0x1acc0>  // b.pmore
  41da40:	cmp	w5, w26
  41da44:	b.ls	41d8cc <nftw@plt+0x1ad4c>  // b.plast
  41da48:	cmp	x20, #0x3
  41da4c:	b.ls	41d8d8 <nftw@plt+0x1ad58>  // b.plast
  41da50:	and	w0, w5, #0x3ff
  41da54:	sub	w3, w5, #0x10, lsl #12
  41da58:	mov	w1, #0xdc00                	// #56320
  41da5c:	add	w1, w0, w1
  41da60:	mov	w5, #0xd800                	// #55296
  41da64:	and	w0, w0, #0xff
  41da68:	add	w3, w5, w3, lsr #10
  41da6c:	lsr	w1, w1, #8
  41da70:	cbz	x23, 41da9c <nftw@plt+0x1af1c>
  41da74:	rev16	w3, w3
  41da78:	strh	w3, [x4]
  41da7c:	strb	w0, [x4, #3]
  41da80:	strb	w1, [x4, x24]
  41da84:	sub	x20, x20, #0x4
  41da88:	cbz	x6, 41d8a0 <nftw@plt+0x1ad20>
  41da8c:	add	x4, x4, #0x4
  41da90:	mov	x22, x6
  41da94:	mov	x21, x2
  41da98:	b	41d7f4 <nftw@plt+0x1ac74>
  41da9c:	strh	w3, [x4]
  41daa0:	strb	w0, [x4, #2]
  41daa4:	b	41da80 <nftw@plt+0x1af00>
  41daa8:	mov	w1, #0x0                   	// #0
  41daac:	mov	w7, #0x0                   	// #0
  41dab0:	mov	w8, #0x0                   	// #0
  41dab4:	mov	w9, #0x0                   	// #0
  41dab8:	mov	x6, #0x2                   	// #2
  41dabc:	mov	w0, #0x1f                  	// #31
  41dac0:	b	41d928 <nftw@plt+0x1ada8>
  41dac4:	mov	w1, #0x0                   	// #0
  41dac8:	mov	w7, #0x0                   	// #0
  41dacc:	mov	w8, #0x0                   	// #0
  41dad0:	mov	w9, #0x1                   	// #1
  41dad4:	mov	x6, #0x3                   	// #3
  41dad8:	mov	w0, #0xf                   	// #15
  41dadc:	b	41d928 <nftw@plt+0x1ada8>
  41dae0:	mov	w8, #0x1                   	// #1
  41dae4:	mov	w1, #0x0                   	// #0
  41dae8:	mov	w9, w8
  41daec:	mov	w7, #0x0                   	// #0
  41daf0:	mov	x6, #0x4                   	// #4
  41daf4:	mov	w0, #0x7                   	// #7
  41daf8:	b	41d928 <nftw@plt+0x1ada8>
  41dafc:	mov	w7, #0x1                   	// #1
  41db00:	mov	w1, #0x0                   	// #0
  41db04:	mov	w8, w7
  41db08:	mov	w9, w7
  41db0c:	mov	x6, #0x5                   	// #5
  41db10:	mov	w0, #0x3                   	// #3
  41db14:	b	41d928 <nftw@plt+0x1ada8>
  41db18:	mov	w19, #0x16                  	// #22
  41db1c:	b	41d844 <nftw@plt+0x1acc4>
  41db20:	stp	x29, x30, [sp, #-80]!
  41db24:	mov	x29, sp
  41db28:	stp	x19, x20, [sp, #16]
  41db2c:	mov	x19, x3
  41db30:	mov	x20, x2
  41db34:	ldr	x3, [x3]
  41db38:	stp	x21, x22, [sp, #32]
  41db3c:	mov	x22, x0
  41db40:	ldp	x5, x4, [x19, #8]
  41db44:	mov	x21, x1
  41db48:	stp	x25, x26, [sp, #64]
  41db4c:	mov	w25, #0x1fffff              	// #2097151
  41db50:	stp	x23, x24, [sp, #48]
  41db54:	mov	w23, #0x7fffff80            	// #2147483520
  41db58:	mov	w24, #0xffff                	// #65535
  41db5c:	add	x3, x3, x4
  41db60:	sub	x26, x5, x4
  41db64:	cmp	x26, #0x3
  41db68:	b.ls	41dbd4 <nftw@plt+0x1b054>  // b.plast
  41db6c:	cbz	x20, 41dc00 <nftw@plt+0x1b080>
  41db70:	ldrb	w4, [x21]
  41db74:	cmp	w4, #0x7f
  41db78:	mov	w5, w4
  41db7c:	b.ls	41dc08 <nftw@plt+0x1b088>  // b.plast
  41db80:	and	w0, w4, #0xffffffe0
  41db84:	cmp	w0, #0xc0
  41db88:	b.eq	41ddb0 <nftw@plt+0x1b230>  // b.none
  41db8c:	and	w0, w4, #0xfffffff0
  41db90:	cmp	w0, #0xe0
  41db94:	b.eq	41ddcc <nftw@plt+0x1b24c>  // b.none
  41db98:	and	w0, w4, #0xfffffff8
  41db9c:	cmp	w0, #0xf0
  41dba0:	b.eq	41dde8 <nftw@plt+0x1b268>  // b.none
  41dba4:	and	w0, w4, #0xfffffffc
  41dba8:	cmp	w0, #0xf8
  41dbac:	b.eq	41de04 <nftw@plt+0x1b284>  // b.none
  41dbb0:	and	w0, w4, #0xfffffffe
  41dbb4:	cmp	w0, #0xfc
  41dbb8:	b.eq	41dc80 <nftw@plt+0x1b100>  // b.none
  41dbbc:	mov	w19, #0x54                  	// #84
  41dbc0:	bl	402aa0 <__errno_location@plt>
  41dbc4:	mov	x1, x0
  41dbc8:	mov	w0, #0x0                   	// #0
  41dbcc:	str	w19, [x1]
  41dbd0:	b	41dbe8 <nftw@plt+0x1b068>
  41dbd4:	ldr	x3, [x19, #8]
  41dbd8:	cbnz	x20, 41dc58 <nftw@plt+0x1b0d8>
  41dbdc:	sub	x3, x3, x26
  41dbe0:	mov	w0, #0x1                   	// #1
  41dbe4:	str	x3, [x19, #16]
  41dbe8:	ldp	x19, x20, [sp, #16]
  41dbec:	ldp	x21, x22, [sp, #32]
  41dbf0:	ldp	x23, x24, [sp, #48]
  41dbf4:	ldp	x25, x26, [sp, #64]
  41dbf8:	ldp	x29, x30, [sp], #80
  41dbfc:	ret
  41dc00:	ldr	x3, [x19, #8]
  41dc04:	b	41dbdc <nftw@plt+0x1b05c>
  41dc08:	sub	x20, x20, #0x1
  41dc0c:	add	x21, x21, #0x1
  41dc10:	ubfx	x0, x5, #16, #8
  41dc14:	lsr	w2, w5, #24
  41dc18:	ubfx	x5, x5, #8, #8
  41dc1c:	cbz	x22, 41dc44 <nftw@plt+0x1b0c4>
  41dc20:	mov	x1, x3
  41dc24:	strb	w0, [x3, #1]
  41dc28:	strb	w5, [x3, #2]
  41dc2c:	strb	w4, [x3, #3]
  41dc30:	strb	w2, [x1]
  41dc34:	sub	x26, x26, #0x4
  41dc38:	cbz	x20, 41dc00 <nftw@plt+0x1b080>
  41dc3c:	add	x3, x3, #0x4
  41dc40:	b	41db64 <nftw@plt+0x1afe4>
  41dc44:	add	x1, x3, #0x3
  41dc48:	strb	w4, [x3]
  41dc4c:	strb	w5, [x3, #1]
  41dc50:	strb	w0, [x3, #2]
  41dc54:	b	41dc30 <nftw@plt+0x1b0b0>
  41dc58:	ldr	x0, [x19]
  41dc5c:	add	x1, x3, #0x100
  41dc60:	str	x1, [x19, #8]
  41dc64:	add	x26, x26, #0x100
  41dc68:	bl	4615e8 <_obstack_memory_used@@Base+0x1a0>
  41dc6c:	str	x0, [x19]
  41dc70:	ldr	x3, [x19, #8]
  41dc74:	sub	x3, x3, x26
  41dc78:	add	x3, x0, x3
  41dc7c:	b	41db64 <nftw@plt+0x1afe4>
  41dc80:	mov	w6, #0x1                   	// #1
  41dc84:	mov	w7, w6
  41dc88:	mov	w8, w6
  41dc8c:	mov	w9, w6
  41dc90:	mov	w1, w6
  41dc94:	mov	x0, #0x6                   	// #6
  41dc98:	cmp	x0, x20
  41dc9c:	b.hi	41de20 <nftw@plt+0x1b2a0>  // b.pmore
  41dca0:	ldrb	w5, [x21, #1]
  41dca4:	and	w4, w4, w1
  41dca8:	add	x2, x21, #0x2
  41dcac:	and	w1, w5, #0xc0
  41dcb0:	cmp	w1, #0x80
  41dcb4:	b.ne	41dbbc <nftw@plt+0x1b03c>  // b.any
  41dcb8:	and	w5, w5, #0x3f
  41dcbc:	cmp	x0, #0x2
  41dcc0:	add	w5, w5, w4, lsl #6
  41dcc4:	b.ls	41dd50 <nftw@plt+0x1b1d0>  // b.plast
  41dcc8:	ldrb	w1, [x21, #2]
  41dccc:	add	x2, x21, #0x3
  41dcd0:	and	w4, w1, #0xc0
  41dcd4:	cmp	w4, #0x80
  41dcd8:	b.ne	41dbbc <nftw@plt+0x1b03c>  // b.any
  41dcdc:	and	w1, w1, #0x3f
  41dce0:	cmp	x0, #0x3
  41dce4:	add	w5, w1, w5, lsl #6
  41dce8:	b.eq	41dd50 <nftw@plt+0x1b1d0>  // b.none
  41dcec:	ldrb	w1, [x21, #3]
  41dcf0:	add	x2, x21, #0x4
  41dcf4:	and	w4, w1, #0xc0
  41dcf8:	cmp	w4, #0x80
  41dcfc:	b.ne	41dbbc <nftw@plt+0x1b03c>  // b.any
  41dd00:	and	w1, w1, #0x3f
  41dd04:	cmp	x0, #0x4
  41dd08:	add	w5, w1, w5, lsl #6
  41dd0c:	b.eq	41dd50 <nftw@plt+0x1b1d0>  // b.none
  41dd10:	ldrb	w1, [x21, #4]
  41dd14:	add	x2, x21, #0x5
  41dd18:	and	w4, w1, #0xc0
  41dd1c:	cmp	w4, #0x80
  41dd20:	b.ne	41dbbc <nftw@plt+0x1b03c>  // b.any
  41dd24:	and	w1, w1, #0x3f
  41dd28:	cmp	x0, #0x5
  41dd2c:	add	w5, w1, w5, lsl #6
  41dd30:	b.eq	41dd50 <nftw@plt+0x1b1d0>  // b.none
  41dd34:	ldrb	w1, [x21, #5]
  41dd38:	add	x2, x21, #0x6
  41dd3c:	and	w4, w1, #0xc0
  41dd40:	cmp	w4, #0x80
  41dd44:	b.ne	41dbbc <nftw@plt+0x1b03c>  // b.any
  41dd48:	and	w1, w1, #0x3f
  41dd4c:	add	w5, w1, w5, lsl #6
  41dd50:	sub	w1, w5, #0x80
  41dd54:	cmp	w1, w23
  41dd58:	b.cs	41dbbc <nftw@plt+0x1b03c>  // b.hs, b.nlast
  41dd5c:	cmp	w5, #0x7ff
  41dd60:	ccmp	w9, #0x0, #0x4, ls  // ls = plast
  41dd64:	b.ne	41dbbc <nftw@plt+0x1b03c>  // b.any
  41dd68:	cmp	w8, #0x0
  41dd6c:	ccmp	w5, w24, #0x2, ne  // ne = any
  41dd70:	b.ls	41dbbc <nftw@plt+0x1b03c>  // b.plast
  41dd74:	cmp	w7, #0x0
  41dd78:	ccmp	w5, w25, #0x2, ne  // ne = any
  41dd7c:	b.ls	41dbbc <nftw@plt+0x1b03c>  // b.plast
  41dd80:	cmp	w6, #0x0
  41dd84:	mov	w1, #0x3ffffff             	// #67108863
  41dd88:	ccmp	w5, w1, #0x2, ne  // ne = any
  41dd8c:	b.ls	41dbbc <nftw@plt+0x1b03c>  // b.plast
  41dd90:	mov	w1, #0xffff2800            	// #-55296
  41dd94:	add	w1, w5, w1
  41dd98:	cmp	w1, #0x7ff
  41dd9c:	b.ls	41dbbc <nftw@plt+0x1b03c>  // b.plast
  41dda0:	sub	x20, x20, x0
  41dda4:	mov	x21, x2
  41dda8:	and	w4, w5, #0xff
  41ddac:	b	41dc10 <nftw@plt+0x1b090>
  41ddb0:	mov	w6, #0x0                   	// #0
  41ddb4:	mov	w7, #0x0                   	// #0
  41ddb8:	mov	w8, #0x0                   	// #0
  41ddbc:	mov	w9, #0x0                   	// #0
  41ddc0:	mov	x0, #0x2                   	// #2
  41ddc4:	mov	w1, #0x1f                  	// #31
  41ddc8:	b	41dc98 <nftw@plt+0x1b118>
  41ddcc:	mov	w6, #0x0                   	// #0
  41ddd0:	mov	w7, #0x0                   	// #0
  41ddd4:	mov	w8, #0x0                   	// #0
  41ddd8:	mov	w9, #0x1                   	// #1
  41dddc:	mov	x0, #0x3                   	// #3
  41dde0:	mov	w1, #0xf                   	// #15
  41dde4:	b	41dc98 <nftw@plt+0x1b118>
  41dde8:	mov	w8, #0x1                   	// #1
  41ddec:	mov	w6, #0x0                   	// #0
  41ddf0:	mov	w9, w8
  41ddf4:	mov	w7, #0x0                   	// #0
  41ddf8:	mov	x0, #0x4                   	// #4
  41ddfc:	mov	w1, #0x7                   	// #7
  41de00:	b	41dc98 <nftw@plt+0x1b118>
  41de04:	mov	w7, #0x1                   	// #1
  41de08:	mov	w6, #0x0                   	// #0
  41de0c:	mov	w8, w7
  41de10:	mov	w9, w7
  41de14:	mov	x0, #0x5                   	// #5
  41de18:	mov	w1, #0x3                   	// #3
  41de1c:	b	41dc98 <nftw@plt+0x1b118>
  41de20:	mov	w19, #0x16                  	// #22
  41de24:	b	41dbc0 <nftw@plt+0x1b040>
  41de28:	stp	x29, x30, [sp, #-96]!
  41de2c:	mov	x29, sp
  41de30:	stp	x19, x20, [sp, #16]
  41de34:	mov	x19, x0
  41de38:	stp	x23, x24, [sp, #48]
  41de3c:	ldrb	w24, [x0, #1242]
  41de40:	ldr	x0, [x0, #1232]
  41de44:	stp	x21, x22, [sp, #32]
  41de48:	cmp	x0, #0x1f
  41de4c:	ldr	x1, [x19, #1168]
  41de50:	ldr	x21, [x19, #1176]
  41de54:	b.ls	41de70 <nftw@plt+0x1b2f0>  // b.plast
  41de58:	cbz	w24, 41dfb8 <nftw@plt+0x1b438>
  41de5c:	adrp	x0, 474000 <_obstack_memory_used@@Base+0x12bb8>
  41de60:	adrp	x20, 473000 <_obstack_memory_used@@Base+0x11bb8>
  41de64:	add	x0, x0, #0xf58
  41de68:	add	x20, x20, #0xfd8
  41de6c:	b	41de84 <nftw@plt+0x1b304>
  41de70:	cmp	x0, #0xf
  41de74:	b.hi	41dfa0 <nftw@plt+0x1b420>  // b.pmore
  41de78:	adrp	x20, 473000 <_obstack_memory_used@@Base+0x11bb8>
  41de7c:	add	x20, x20, #0xfd8
  41de80:	mov	x0, x20
  41de84:	cmp	x1, #0x0
  41de88:	add	x23, x19, #0x208
  41de8c:	csel	x1, x1, x20, ne  // ne = any
  41de90:	cmp	x21, #0x0
  41de94:	csel	x21, x21, x0, ne  // ne = any
  41de98:	add	x8, sp, #0x40
  41de9c:	mov	x2, x20
  41dea0:	mov	x0, x19
  41dea4:	bl	41cc30 <nftw@plt+0x1a0b0>
  41dea8:	add	x22, x19, #0x220
  41deac:	ldp	x2, x3, [sp, #64]
  41deb0:	stp	x2, x3, [x23]
  41deb4:	add	x8, sp, #0x40
  41deb8:	ldr	x1, [sp, #80]
  41debc:	str	x1, [x23, #16]
  41dec0:	ldr	x0, [x19, #1216]
  41dec4:	str	w0, [x19, #536]
  41dec8:	mov	x2, x20
  41decc:	mov	x1, x20
  41ded0:	mov	x0, x19
  41ded4:	bl	41cc30 <nftw@plt+0x1a0b0>
  41ded8:	ldp	x2, x3, [sp, #64]
  41dedc:	stp	x2, x3, [x22]
  41dee0:	ldr	x1, [sp, #80]
  41dee4:	str	x1, [x22, #16]
  41dee8:	ldr	x0, [x19, #1216]
  41deec:	str	w0, [x19, #560]
  41def0:	cbz	w24, 41dfcc <nftw@plt+0x1b44c>
  41def4:	add	x22, x19, #0x238
  41def8:	mov	x2, x20
  41defc:	add	x8, sp, #0x40
  41df00:	mov	x0, x19
  41df04:	adrp	x1, 474000 <_obstack_memory_used@@Base+0x12bb8>
  41df08:	add	x1, x1, #0xf78
  41df0c:	bl	41cc30 <nftw@plt+0x1a0b0>
  41df10:	ldp	x4, x5, [sp, #64]
  41df14:	stp	x4, x5, [x22]
  41df18:	adrp	x1, 474000 <_obstack_memory_used@@Base+0x12bb8>
  41df1c:	ldr	x3, [sp, #80]
  41df20:	add	x1, x1, #0xf58
  41df24:	str	x3, [x22, #16]
  41df28:	mov	w2, #0x10                  	// #16
  41df2c:	str	w2, [x19, #584]
  41df30:	add	x22, x19, #0x250
  41df34:	add	x8, sp, #0x40
  41df38:	mov	x2, x20
  41df3c:	mov	x0, x19
  41df40:	bl	41cc30 <nftw@plt+0x1a0b0>
  41df44:	ldp	x0, x1, [sp, #64]
  41df48:	stp	x0, x1, [x22]
  41df4c:	add	x22, x19, #0x268
  41df50:	ldr	x1, [sp, #80]
  41df54:	str	x1, [x19, #608]
  41df58:	mov	w0, #0x20                  	// #32
  41df5c:	str	w0, [x19, #608]
  41df60:	add	x8, sp, #0x40
  41df64:	mov	x2, x20
  41df68:	mov	x1, x21
  41df6c:	mov	x0, x19
  41df70:	bl	41cc30 <nftw@plt+0x1a0b0>
  41df74:	ldp	x0, x1, [sp, #64]
  41df78:	stp	x0, x1, [x22]
  41df7c:	ldr	x0, [sp, #80]
  41df80:	ldp	x21, x22, [sp, #32]
  41df84:	ldp	x23, x24, [sp, #48]
  41df88:	str	x0, [x19, #632]
  41df8c:	ldr	x0, [x19, #1232]
  41df90:	str	w0, [x19, #632]
  41df94:	ldp	x19, x20, [sp, #16]
  41df98:	ldp	x29, x30, [sp], #96
  41df9c:	ret
  41dfa0:	cbz	w24, 41e00c <nftw@plt+0x1b48c>
  41dfa4:	adrp	x0, 474000 <_obstack_memory_used@@Base+0x12bb8>
  41dfa8:	adrp	x20, 473000 <_obstack_memory_used@@Base+0x11bb8>
  41dfac:	add	x0, x0, #0xf78
  41dfb0:	add	x20, x20, #0xfd8
  41dfb4:	b	41de84 <nftw@plt+0x1b304>
  41dfb8:	adrp	x0, 474000 <_obstack_memory_used@@Base+0x12bb8>
  41dfbc:	adrp	x20, 473000 <_obstack_memory_used@@Base+0x11bb8>
  41dfc0:	add	x0, x0, #0xf68
  41dfc4:	add	x20, x20, #0xfd8
  41dfc8:	b	41de84 <nftw@plt+0x1b304>
  41dfcc:	add	x22, x19, #0x238
  41dfd0:	mov	x2, x20
  41dfd4:	add	x8, sp, #0x40
  41dfd8:	mov	x0, x19
  41dfdc:	adrp	x1, 474000 <_obstack_memory_used@@Base+0x12bb8>
  41dfe0:	add	x1, x1, #0xf88
  41dfe4:	bl	41cc30 <nftw@plt+0x1a0b0>
  41dfe8:	ldp	x4, x5, [sp, #64]
  41dfec:	stp	x4, x5, [x22]
  41dff0:	mov	w2, #0x10                  	// #16
  41dff4:	ldr	x3, [sp, #80]
  41dff8:	str	x3, [x22, #16]
  41dffc:	adrp	x1, 474000 <_obstack_memory_used@@Base+0x12bb8>
  41e000:	add	x1, x1, #0xf68
  41e004:	str	w2, [x19, #584]
  41e008:	b	41df30 <nftw@plt+0x1b3b0>
  41e00c:	adrp	x0, 474000 <_obstack_memory_used@@Base+0x12bb8>
  41e010:	adrp	x20, 473000 <_obstack_memory_used@@Base+0x11bb8>
  41e014:	add	x0, x0, #0xf88
  41e018:	add	x20, x20, #0xfd8
  41e01c:	b	41de84 <nftw@plt+0x1b304>
  41e020:	stp	x29, x30, [sp, #-32]!
  41e024:	mov	x29, sp
  41e028:	stp	x19, x20, [sp, #16]
  41e02c:	mov	x19, x0
  41e030:	adrp	x20, 41c000 <nftw@plt+0x19480>
  41e034:	ldr	x0, [x0, #520]
  41e038:	add	x20, x20, #0xe88
  41e03c:	cmp	x0, x20
  41e040:	b.eq	41e080 <nftw@plt+0x1b500>  // b.none
  41e044:	ldr	x0, [x19, #544]
  41e048:	cmp	x0, x20
  41e04c:	b.eq	41e098 <nftw@plt+0x1b518>  // b.none
  41e050:	ldr	x0, [x19, #568]
  41e054:	cmp	x0, x20
  41e058:	b.eq	41e0b0 <nftw@plt+0x1b530>  // b.none
  41e05c:	ldr	x0, [x19, #592]
  41e060:	cmp	x0, x20
  41e064:	b.eq	41e0c8 <nftw@plt+0x1b548>  // b.none
  41e068:	ldr	x0, [x19, #616]
  41e06c:	cmp	x0, x20
  41e070:	b.eq	41e0dc <nftw@plt+0x1b55c>  // b.none
  41e074:	ldp	x19, x20, [sp, #16]
  41e078:	ldp	x29, x30, [sp], #32
  41e07c:	ret
  41e080:	ldr	x0, [x19, #528]
  41e084:	bl	402560 <iconv_close@plt>
  41e088:	ldr	x0, [x19, #544]
  41e08c:	cmp	x0, x20
  41e090:	b.ne	41e050 <nftw@plt+0x1b4d0>  // b.any
  41e094:	nop
  41e098:	ldr	x0, [x19, #552]
  41e09c:	bl	402560 <iconv_close@plt>
  41e0a0:	ldr	x0, [x19, #568]
  41e0a4:	cmp	x0, x20
  41e0a8:	b.ne	41e05c <nftw@plt+0x1b4dc>  // b.any
  41e0ac:	nop
  41e0b0:	ldr	x0, [x19, #576]
  41e0b4:	bl	402560 <iconv_close@plt>
  41e0b8:	ldr	x0, [x19, #592]
  41e0bc:	cmp	x0, x20
  41e0c0:	b.ne	41e068 <nftw@plt+0x1b4e8>  // b.any
  41e0c4:	nop
  41e0c8:	ldr	x0, [x19, #600]
  41e0cc:	bl	402560 <iconv_close@plt>
  41e0d0:	ldr	x0, [x19, #616]
  41e0d4:	cmp	x0, x20
  41e0d8:	b.ne	41e074 <nftw@plt+0x1b4f4>  // b.any
  41e0dc:	ldr	x0, [x19, #624]
  41e0e0:	ldp	x19, x20, [sp, #16]
  41e0e4:	ldp	x29, x30, [sp], #32
  41e0e8:	b	402560 <iconv_close@plt>
  41e0ec:	nop
  41e0f0:	stp	x29, x30, [sp, #-80]!
  41e0f4:	cmp	w1, #0x7e
  41e0f8:	mov	x29, sp
  41e0fc:	stp	x19, x20, [sp, #16]
  41e100:	mov	w19, w1
  41e104:	b.hi	41e1a8 <nftw@plt+0x1b628>  // b.pmore
  41e108:	mov	x20, x0
  41e10c:	str	x21, [sp, #32]
  41e110:	mov	x21, #0x1                   	// #1
  41e114:	mov	x0, x21
  41e118:	strb	w1, [sp, #48]
  41e11c:	str	x21, [sp, #64]
  41e120:	bl	461560 <_obstack_memory_used@@Base+0x118>
  41e124:	str	x0, [sp, #56]
  41e128:	mov	x2, x21
  41e12c:	ldr	x4, [x20, #520]
  41e130:	str	xzr, [sp, #72]
  41e134:	ldr	x0, [x20, #528]
  41e138:	add	x3, sp, #0x38
  41e13c:	add	x1, sp, #0x30
  41e140:	blr	x4
  41e144:	tst	w0, #0xff
  41e148:	b.eq	41e1d0 <nftw@plt+0x1b650>  // b.none
  41e14c:	ldr	x0, [sp, #72]
  41e150:	cmp	x0, #0x1
  41e154:	b.ne	41e178 <nftw@plt+0x1b5f8>  // b.any
  41e158:	ldr	x0, [sp, #56]
  41e15c:	ldrb	w19, [x0]
  41e160:	bl	402910 <free@plt>
  41e164:	ldr	x21, [sp, #32]
  41e168:	mov	w0, w19
  41e16c:	ldp	x19, x20, [sp, #16]
  41e170:	ldp	x29, x30, [sp], #80
  41e174:	ret
  41e178:	mov	w3, w19
  41e17c:	mov	x0, x20
  41e180:	mov	w1, #0x4                   	// #4
  41e184:	mov	w19, #0x0                   	// #0
  41e188:	adrp	x2, 475000 <_obstack_memory_used@@Base+0x13bb8>
  41e18c:	add	x2, x2, #0x0
  41e190:	bl	427178 <nftw@plt+0x245f8>
  41e194:	mov	w0, w19
  41e198:	ldp	x19, x20, [sp, #16]
  41e19c:	ldr	x21, [sp, #32]
  41e1a0:	ldp	x29, x30, [sp], #80
  41e1a4:	ret
  41e1a8:	mov	w3, w1
  41e1ac:	mov	w19, #0x0                   	// #0
  41e1b0:	mov	w1, #0x4                   	// #4
  41e1b4:	adrp	x2, 474000 <_obstack_memory_used@@Base+0x12bb8>
  41e1b8:	add	x2, x2, #0xf98
  41e1bc:	bl	427178 <nftw@plt+0x245f8>
  41e1c0:	mov	w0, w19
  41e1c4:	ldp	x19, x20, [sp, #16]
  41e1c8:	ldp	x29, x30, [sp], #80
  41e1cc:	ret
  41e1d0:	mov	x0, x20
  41e1d4:	mov	w1, #0x4                   	// #4
  41e1d8:	mov	w19, #0x0                   	// #0
  41e1dc:	adrp	x2, 474000 <_obstack_memory_used@@Base+0x12bb8>
  41e1e0:	add	x2, x2, #0xfd8
  41e1e4:	bl	427990 <nftw@plt+0x24e10>
  41e1e8:	mov	w0, w19
  41e1ec:	ldp	x19, x20, [sp, #16]
  41e1f0:	ldr	x21, [sp, #32]
  41e1f4:	ldp	x29, x30, [sp], #80
  41e1f8:	ret
  41e1fc:	nop
  41e200:	stp	x29, x30, [sp, #-32]!
  41e204:	adrp	x1, 47b000 <_obstack_memory_used@@Base+0x19bb8>
  41e208:	mov	x29, sp
  41e20c:	str	x19, [sp, #16]
  41e210:	mov	x19, x0
  41e214:	ldr	d0, [x1, #128]
  41e218:	mov	x0, #0x40                  	// #64
  41e21c:	str	xzr, [x19]
  41e220:	str	d0, [x19, #8]
  41e224:	bl	461560 <_obstack_memory_used@@Base+0x118>
  41e228:	str	x0, [x19]
  41e22c:	ldr	x19, [sp, #16]
  41e230:	ldp	x29, x30, [sp], #32
  41e234:	ret
  41e238:	ldr	x0, [x0]
  41e23c:	b	402910 <free@plt>
  41e240:	stp	x29, x30, [sp, #-32]!
  41e244:	mov	x29, sp
  41e248:	stp	x19, x20, [sp, #16]
  41e24c:	mov	x20, x1
  41e250:	mov	x19, x0
  41e254:	ldp	w2, w1, [x0, #8]
  41e258:	ldr	x0, [x0]
  41e25c:	cmp	w2, w1
  41e260:	b.ge	41e27c <nftw@plt+0x1b6fc>  // b.tcont
  41e264:	add	w1, w2, #0x1
  41e268:	str	w1, [x19, #8]
  41e26c:	str	x20, [x0, w2, sxtw #3]
  41e270:	ldp	x19, x20, [sp, #16]
  41e274:	ldp	x29, x30, [sp], #32
  41e278:	ret
  41e27c:	lsl	w1, w1, #1
  41e280:	str	w1, [x19, #12]
  41e284:	sbfiz	x1, x1, #3, #32
  41e288:	bl	4615e8 <_obstack_memory_used@@Base+0x1a0>
  41e28c:	ldr	w2, [x19, #8]
  41e290:	str	x0, [x19]
  41e294:	add	w1, w2, #0x1
  41e298:	str	w1, [x19, #8]
  41e29c:	str	x20, [x0, w2, sxtw #3]
  41e2a0:	ldp	x19, x20, [sp, #16]
  41e2a4:	ldp	x29, x30, [sp], #32
  41e2a8:	ret
  41e2ac:	nop
  41e2b0:	cmp	w1, #0x0
  41e2b4:	b.le	41e380 <nftw@plt+0x1b800>
  41e2b8:	stp	x29, x30, [sp, #-64]!
  41e2bc:	mov	x29, sp
  41e2c0:	ldp	w3, w5, [x0, #8]
  41e2c4:	stp	x21, x22, [sp, #32]
  41e2c8:	mov	x21, x0
  41e2cc:	ldr	x0, [x0]
  41e2d0:	mov	x22, x2
  41e2d4:	stp	x23, x24, [sp, #48]
  41e2d8:	mov	w23, w1
  41e2dc:	mov	w24, #0x60000000            	// #1610612736
  41e2e0:	stp	x19, x20, [sp, #16]
  41e2e4:	mov	w20, #0x0                   	// #0
  41e2e8:	ldr	w19, [x22]
  41e2ec:	add	w4, w3, #0x1
  41e2f0:	cmp	w19, w24
  41e2f4:	b.hi	41e304 <nftw@plt+0x1b784>  // b.pmore
  41e2f8:	ldr	w2, [x22, #4]
  41e2fc:	add	w2, w2, w19
  41e300:	str	w2, [x22]
  41e304:	dup	v0.2s, w19
  41e308:	cmp	w3, w5
  41e30c:	b.ge	41e340 <nftw@plt+0x1b7c0>  // b.tcont
  41e310:	str	w4, [x21, #8]
  41e314:	add	w20, w20, #0x1
  41e318:	cmp	w23, w20
  41e31c:	str	d0, [x0, w3, sxtw #3]
  41e320:	b.eq	41e32c <nftw@plt+0x1b7ac>  // b.none
  41e324:	mov	w3, w4
  41e328:	b	41e2e8 <nftw@plt+0x1b768>
  41e32c:	ldp	x19, x20, [sp, #16]
  41e330:	ldp	x21, x22, [sp, #32]
  41e334:	ldp	x23, x24, [sp, #48]
  41e338:	ldp	x29, x30, [sp], #64
  41e33c:	ret
  41e340:	lsl	w5, w5, #1
  41e344:	str	w5, [x21, #12]
  41e348:	add	w20, w20, #0x1
  41e34c:	sbfiz	x1, x5, #3, #32
  41e350:	bl	4615e8 <_obstack_memory_used@@Base+0x1a0>
  41e354:	str	x0, [x21]
  41e358:	ldr	w1, [x21, #8]
  41e35c:	dup	v0.2s, w19
  41e360:	cmp	w23, w20
  41e364:	add	w4, w1, #0x1
  41e368:	str	w4, [x21, #8]
  41e36c:	str	d0, [x0, w1, sxtw #3]
  41e370:	b.eq	41e32c <nftw@plt+0x1b7ac>  // b.none
  41e374:	ldr	w5, [x21, #12]
  41e378:	mov	w3, w4
  41e37c:	b	41e2e8 <nftw@plt+0x1b768>
  41e380:	ret
  41e384:	nop
  41e388:	stp	x29, x30, [sp, #-112]!
  41e38c:	mov	x29, sp
  41e390:	stp	x19, x20, [sp, #16]
  41e394:	mov	x20, x1
  41e398:	mov	x19, x5
  41e39c:	stp	x21, x22, [sp, #32]
  41e3a0:	stp	x23, x24, [sp, #48]
  41e3a4:	mov	x23, x0
  41e3a8:	mov	w24, w3
  41e3ac:	stp	x25, x26, [sp, #64]
  41e3b0:	stp	x27, x28, [sp, #80]
  41e3b4:	mov	x28, x2
  41e3b8:	mov	x27, x7
  41e3bc:	ldrb	w1, [x0, #1120]
  41e3c0:	ldr	x26, [x20]
  41e3c4:	str	x4, [sp, #96]
  41e3c8:	sub	x25, x26, #0x2
  41e3cc:	cbnz	w1, 41e3e4 <nftw@plt+0x1b864>
  41e3d0:	ldrb	w1, [x0, #1152]
  41e3d4:	cbz	w1, 41e950 <nftw@plt+0x1bdd0>
  41e3d8:	ldrsb	w1, [x0, #1198]
  41e3dc:	cmp	w1, #0x0
  41e3e0:	b.gt	41e96c <nftw@plt+0x1bdec>
  41e3e4:	ldrb	w0, [x23, #1138]
  41e3e8:	ldurb	w3, [x26, #-1]
  41e3ec:	cmp	w0, #0x0
  41e3f0:	ccmp	w24, #0x0, #0x0, ne  // ne = any
  41e3f4:	b.eq	41e9ec <nftw@plt+0x1be6c>  // b.none
  41e3f8:	cmp	w3, #0x75
  41e3fc:	mov	w2, #0x4                   	// #4
  41e400:	b.eq	41e410 <nftw@plt+0x1b890>  // b.none
  41e404:	cmp	w3, #0x55
  41e408:	mov	w2, #0x8                   	// #8
  41e40c:	b.ne	41e748 <nftw@plt+0x1bbc8>  // b.any
  41e410:	cbz	x27, 41e76c <nftw@plt+0x1bbec>
  41e414:	ldrb	w1, [x26]
  41e418:	cbz	x6, 41eb04 <nftw@plt+0x1bf84>
  41e41c:	adrp	x0, 481000 <_obstack_memory_used@@Base+0x1fbb8>
  41e420:	add	x0, x0, #0xaf0
  41e424:	mov	x4, x1
  41e428:	ldrh	w1, [x0, x1, lsl #1]
  41e42c:	tbz	w1, #8, 41e70c <nftw@plt+0x1bb8c>
  41e430:	ldr	w1, [x27]
  41e434:	mov	w3, #0x60000000            	// #1610612736
  41e438:	add	x22, x26, #0x1
  41e43c:	cmp	w1, w3
  41e440:	b.ls	41e738 <nftw@plt+0x1bbb8>  // b.plast
  41e444:	adrp	x3, 481000 <_obstack_memory_used@@Base+0x1fbb8>
  41e448:	add	x3, x3, #0x7d0
  41e44c:	str	w1, [x6, #4]
  41e450:	cmp	x28, x22
  41e454:	ldrb	w1, [x3, w4, sxtw]
  41e458:	b.ls	41e710 <nftw@plt+0x1bb90>  // b.plast
  41e45c:	ldrb	w4, [x26, #1]
  41e460:	mov	x5, x4
  41e464:	ldrh	w4, [x0, x4, lsl #1]
  41e468:	tbz	w4, #8, 41e710 <nftw@plt+0x1bb90>
  41e46c:	ldr	w4, [x27]
  41e470:	mov	w7, #0x60000000            	// #1610612736
  41e474:	add	x22, x26, #0x2
  41e478:	cmp	w4, w7
  41e47c:	b.ls	41e8c8 <nftw@plt+0x1bd48>  // b.plast
  41e480:	ldrb	w21, [x3, w5, sxtw]
  41e484:	cmp	x28, x22
  41e488:	str	w4, [x6, #4]
  41e48c:	add	w1, w21, w1, lsl #4
  41e490:	b.ls	41e710 <nftw@plt+0x1bb90>  // b.plast
  41e494:	ldrb	w4, [x26, #2]
  41e498:	mov	x5, x4
  41e49c:	ldrh	w4, [x0, x4, lsl #1]
  41e4a0:	tbz	w4, #8, 41e710 <nftw@plt+0x1bb90>
  41e4a4:	ldr	w4, [x27]
  41e4a8:	mov	w7, #0x60000000            	// #1610612736
  41e4ac:	add	x22, x26, #0x3
  41e4b0:	cmp	w4, w7
  41e4b4:	b.ls	41e8d8 <nftw@plt+0x1bd58>  // b.plast
  41e4b8:	ldrb	w21, [x3, w5, sxtw]
  41e4bc:	cmp	x28, x22
  41e4c0:	str	w4, [x6, #4]
  41e4c4:	add	w1, w21, w1, lsl #4
  41e4c8:	b.ls	41e710 <nftw@plt+0x1bb90>  // b.plast
  41e4cc:	ldrb	w4, [x26, #3]
  41e4d0:	mov	x5, x4
  41e4d4:	ldrh	w4, [x0, x4, lsl #1]
  41e4d8:	tbz	w4, #8, 41e710 <nftw@plt+0x1bb90>
  41e4dc:	ldr	w4, [x27]
  41e4e0:	mov	w7, #0x60000000            	// #1610612736
  41e4e4:	add	x22, x26, #0x4
  41e4e8:	cmp	w4, w7
  41e4ec:	b.ls	41e930 <nftw@plt+0x1bdb0>  // b.plast
  41e4f0:	ldrb	w21, [x3, w5, sxtw]
  41e4f4:	cmp	w2, #0x4
  41e4f8:	str	w4, [x6, #4]
  41e4fc:	add	w21, w21, w1, lsl #4
  41e500:	b.eq	41e608 <nftw@plt+0x1ba88>  // b.none
  41e504:	cmp	x28, x22
  41e508:	b.ls	41e710 <nftw@plt+0x1bb90>  // b.plast
  41e50c:	ldrb	w2, [x26, #4]
  41e510:	mov	x1, x2
  41e514:	ldrh	w2, [x0, x2, lsl #1]
  41e518:	tbz	w2, #8, 41e710 <nftw@plt+0x1bb90>
  41e51c:	ldr	w2, [x27]
  41e520:	mov	w4, #0x60000000            	// #1610612736
  41e524:	add	x22, x26, #0x5
  41e528:	cmp	w2, w4
  41e52c:	b.hi	41e53c <nftw@plt+0x1b9bc>  // b.pmore
  41e530:	ldr	w4, [x27, #4]
  41e534:	add	w4, w4, w2
  41e538:	str	w4, [x27]
  41e53c:	ldrb	w1, [x3, w1, sxtw]
  41e540:	cmp	x28, x22
  41e544:	str	w2, [x6, #4]
  41e548:	add	w21, w1, w21, lsl #4
  41e54c:	b.ls	41e710 <nftw@plt+0x1bb90>  // b.plast
  41e550:	ldrb	w1, [x26, #5]
  41e554:	mov	x2, x1
  41e558:	ldrh	w1, [x0, x1, lsl #1]
  41e55c:	tbz	w1, #8, 41e710 <nftw@plt+0x1bb90>
  41e560:	ldr	w1, [x27]
  41e564:	mov	w4, #0x60000000            	// #1610612736
  41e568:	add	x22, x26, #0x6
  41e56c:	cmp	w1, w4
  41e570:	b.hi	41e580 <nftw@plt+0x1ba00>  // b.pmore
  41e574:	ldr	w4, [x27, #4]
  41e578:	add	w4, w4, w1
  41e57c:	str	w4, [x27]
  41e580:	ldrb	w2, [x3, w2, sxtw]
  41e584:	cmp	x28, x22
  41e588:	str	w1, [x6, #4]
  41e58c:	add	w21, w2, w21, lsl #4
  41e590:	b.ls	41e710 <nftw@plt+0x1bb90>  // b.plast
  41e594:	ldrb	w1, [x26, #6]
  41e598:	mov	x2, x1
  41e59c:	ldrh	w1, [x0, x1, lsl #1]
  41e5a0:	tbz	w1, #8, 41e710 <nftw@plt+0x1bb90>
  41e5a4:	ldr	w1, [x27]
  41e5a8:	mov	w4, #0x60000000            	// #1610612736
  41e5ac:	add	x22, x26, #0x7
  41e5b0:	cmp	w1, w4
  41e5b4:	b.hi	41e5c4 <nftw@plt+0x1ba44>  // b.pmore
  41e5b8:	ldr	w4, [x27, #4]
  41e5bc:	add	w4, w4, w1
  41e5c0:	str	w4, [x27]
  41e5c4:	ldrb	w2, [x3, w2, sxtw]
  41e5c8:	cmp	x28, x22
  41e5cc:	str	w1, [x6, #4]
  41e5d0:	add	w21, w2, w21, lsl #4
  41e5d4:	b.ls	41e710 <nftw@plt+0x1bb90>  // b.plast
  41e5d8:	ldrb	w2, [x26, #7]
  41e5dc:	mov	x1, x2
  41e5e0:	ldrh	w0, [x0, x2, lsl #1]
  41e5e4:	tbz	w0, #8, 41e710 <nftw@plt+0x1bb90>
  41e5e8:	ldr	w0, [x27]
  41e5ec:	mov	w2, #0x60000000            	// #1610612736
  41e5f0:	add	x22, x26, #0x8
  41e5f4:	cmp	w0, w2
  41e5f8:	b.ls	41e940 <nftw@plt+0x1bdc0>  // b.plast
  41e5fc:	ldrb	w1, [x3, w1, sxtw]
  41e600:	str	w0, [x6, #4]
  41e604:	add	w21, w1, w21, lsl #4
  41e608:	str	x22, [x20]
  41e60c:	cmp	w21, #0x9f
  41e610:	b.hi	41e8a0 <nftw@plt+0x1bd20>  // b.pmore
  41e614:	ldrb	w0, [x23, #1120]
  41e618:	cbz	w0, 41e98c <nftw@plt+0x1be0c>
  41e61c:	cmp	w24, #0x0
  41e620:	cset	w0, ne  // ne = any
  41e624:	cmp	w21, #0x24
  41e628:	ccmp	w0, #0x0, #0x4, eq  // eq = none
  41e62c:	b.eq	41e9bc <nftw@plt+0x1be3c>  // b.none
  41e630:	ldrb	w0, [x23, #1146]
  41e634:	cbnz	w0, 41ea10 <nftw@plt+0x1be90>
  41e638:	adrp	x4, 477000 <_obstack_memory_used@@Base+0x15bb8>
  41e63c:	mov	x1, #0x73c                 	// #1852
  41e640:	add	x4, x4, #0x690
  41e644:	mov	w2, #0x0                   	// #0
  41e648:	b	41e66c <nftw@plt+0x1baec>
  41e64c:	add	w0, w1, w2
  41e650:	add	w0, w0, w0, lsr #31
  41e654:	asr	w0, w0, #1
  41e658:	add	x3, x4, w0, sxtw #3
  41e65c:	ldr	w3, [x3, #4]
  41e660:	cmp	w3, w21
  41e664:	b.cc	41ea38 <nftw@plt+0x1beb8>  // b.lo, b.ul, b.last
  41e668:	sxtw	x1, w0
  41e66c:	cmp	w1, w2
  41e670:	b.ne	41e64c <nftw@plt+0x1bacc>  // b.any
  41e674:	ldrb	w2, [x23, #1154]
  41e678:	sbfiz	x0, x1, #3, #32
  41e67c:	ldrh	w0, [x4, x0]
  41e680:	cbz	w2, 41ea40 <nftw@plt+0x1bec0>
  41e684:	ldrb	w2, [x23, #1164]
  41e688:	cbnz	w2, 41eabc <nftw@plt+0x1bf3c>
  41e68c:	ldrb	w2, [x23, #1152]
  41e690:	cbnz	w2, 41eb64 <nftw@plt+0x1bfe4>
  41e694:	ldrb	w5, [x23, #1120]
  41e698:	mov	w2, #0x4                   	// #4
  41e69c:	mov	w3, #0xd                   	// #13
  41e6a0:	mov	w26, #0x0                   	// #0
  41e6a4:	cmp	w5, #0x0
  41e6a8:	csel	w2, w2, w3, ne  // ne = any
  41e6ac:	tst	w0, w2
  41e6b0:	b.eq	41e9cc <nftw@plt+0x1be4c>  // b.none
  41e6b4:	add	x1, x4, x1, lsl #3
  41e6b8:	ldrb	w27, [x1, #2]
  41e6bc:	cbz	w27, 41ea68 <nftw@plt+0x1bee8>
  41e6c0:	ldr	x2, [sp, #96]
  41e6c4:	ldrb	w1, [x2, #4]
  41e6c8:	cmp	w1, w27
  41e6cc:	b.ls	41ea68 <nftw@plt+0x1bee8>  // b.plast
  41e6d0:	mov	w0, #0x3                   	// #3
  41e6d4:	str	w0, [x2, #8]
  41e6d8:	ldr	x0, [sp, #96]
  41e6dc:	strb	w27, [x0, #4]
  41e6e0:	cbz	w26, 41e90c <nftw@plt+0x1bd8c>
  41e6e4:	cmp	w24, #0x1
  41e6e8:	b.ne	41e90c <nftw@plt+0x1bd8c>  // b.any
  41e6ec:	sub	w3, w22, w25
  41e6f0:	mov	x4, x25
  41e6f4:	mov	x0, x23
  41e6f8:	adrp	x2, 475000 <_obstack_memory_used@@Base+0x13bb8>
  41e6fc:	mov	w1, #0x3                   	// #3
  41e700:	add	x2, x2, #0x1d8
  41e704:	bl	427178 <nftw@plt+0x245f8>
  41e708:	b	41e90c <nftw@plt+0x1bd8c>
  41e70c:	mov	x22, x26
  41e710:	cbz	w24, 41e8e8 <nftw@plt+0x1bd68>
  41e714:	str	wzr, [x19]
  41e718:	mov	w0, #0x0                   	// #0
  41e71c:	ldp	x19, x20, [sp, #16]
  41e720:	ldp	x21, x22, [sp, #32]
  41e724:	ldp	x23, x24, [sp, #48]
  41e728:	ldp	x25, x26, [sp, #64]
  41e72c:	ldp	x27, x28, [sp, #80]
  41e730:	ldp	x29, x30, [sp], #112
  41e734:	ret
  41e738:	ldr	w3, [x27, #4]
  41e73c:	add	w3, w3, w1
  41e740:	str	w3, [x27]
  41e744:	b	41e444 <nftw@plt+0x1b8c4>
  41e748:	mov	x0, x23
  41e74c:	adrp	x2, 475000 <_obstack_memory_used@@Base+0x13bb8>
  41e750:	mov	w1, #0x4                   	// #4
  41e754:	add	x2, x2, #0xf0
  41e758:	str	x6, [sp, #104]
  41e75c:	bl	427178 <nftw@plt+0x245f8>
  41e760:	mov	w2, #0x4                   	// #4
  41e764:	ldr	x6, [sp, #104]
  41e768:	cbnz	x27, 41e414 <nftw@plt+0x1b894>
  41e76c:	ldrb	w3, [x26]
  41e770:	adrp	x0, 481000 <_obstack_memory_used@@Base+0x1fbb8>
  41e774:	add	x0, x0, #0xaf0
  41e778:	mov	x1, x3
  41e77c:	ldrh	w3, [x0, x3, lsl #1]
  41e780:	tbz	w3, #8, 41e70c <nftw@plt+0x1bb8c>
  41e784:	adrp	x3, 481000 <_obstack_memory_used@@Base+0x1fbb8>
  41e788:	add	x3, x3, #0x7d0
  41e78c:	add	x22, x26, #0x1
  41e790:	cmp	x22, x28
  41e794:	ldrb	w1, [x3, w1, sxtw]
  41e798:	b.cs	41e710 <nftw@plt+0x1bb90>  // b.hs, b.nlast
  41e79c:	ldrb	w5, [x26, #1]
  41e7a0:	mov	x4, x5
  41e7a4:	ldrh	w5, [x0, x5, lsl #1]
  41e7a8:	tbz	w5, #8, 41e710 <nftw@plt+0x1bb90>
  41e7ac:	ldrb	w4, [x3, w4, sxtw]
  41e7b0:	add	x22, x26, #0x2
  41e7b4:	cmp	x22, x28
  41e7b8:	add	w1, w4, w1, lsl #4
  41e7bc:	b.cs	41e710 <nftw@plt+0x1bb90>  // b.hs, b.nlast
  41e7c0:	ldrb	w5, [x26, #2]
  41e7c4:	mov	x4, x5
  41e7c8:	ldrh	w5, [x0, x5, lsl #1]
  41e7cc:	tbz	w5, #8, 41e710 <nftw@plt+0x1bb90>
  41e7d0:	ldrb	w21, [x3, w4, sxtw]
  41e7d4:	add	x22, x26, #0x3
  41e7d8:	cmp	x28, x22
  41e7dc:	add	w1, w21, w1, lsl #4
  41e7e0:	b.ls	41e710 <nftw@plt+0x1bb90>  // b.plast
  41e7e4:	ldrb	w5, [x26, #3]
  41e7e8:	mov	x4, x5
  41e7ec:	ldrh	w5, [x0, x5, lsl #1]
  41e7f0:	tbz	w5, #8, 41e710 <nftw@plt+0x1bb90>
  41e7f4:	ldrb	w21, [x3, w4, sxtw]
  41e7f8:	cmp	w2, #0x4
  41e7fc:	add	x22, x26, #0x4
  41e800:	add	w21, w21, w1, lsl #4
  41e804:	b.eq	41e608 <nftw@plt+0x1ba88>  // b.none
  41e808:	cmp	x28, x22
  41e80c:	b.ls	41e710 <nftw@plt+0x1bb90>  // b.plast
  41e810:	ldrb	w2, [x26, #4]
  41e814:	mov	x1, x2
  41e818:	ldrh	w2, [x0, x2, lsl #1]
  41e81c:	tbz	w2, #8, 41e710 <nftw@plt+0x1bb90>
  41e820:	ldrb	w1, [x3, w1, sxtw]
  41e824:	add	x22, x26, #0x5
  41e828:	cmp	x28, x22
  41e82c:	add	w1, w1, w21, lsl #4
  41e830:	b.ls	41e710 <nftw@plt+0x1bb90>  // b.plast
  41e834:	ldrb	w4, [x26, #5]
  41e838:	mov	x2, x4
  41e83c:	ldrh	w4, [x0, x4, lsl #1]
  41e840:	tbz	w4, #8, 41e710 <nftw@plt+0x1bb90>
  41e844:	ldrb	w2, [x3, w2, sxtw]
  41e848:	add	x22, x26, #0x6
  41e84c:	cmp	x28, x22
  41e850:	add	w1, w2, w1, lsl #4
  41e854:	b.ls	41e710 <nftw@plt+0x1bb90>  // b.plast
  41e858:	ldrb	w4, [x26, #6]
  41e85c:	mov	x2, x4
  41e860:	ldrh	w4, [x0, x4, lsl #1]
  41e864:	tbz	w4, #8, 41e710 <nftw@plt+0x1bb90>
  41e868:	ldrb	w21, [x3, w2, sxtw]
  41e86c:	add	x22, x26, #0x7
  41e870:	cmp	x28, x22
  41e874:	add	w1, w21, w1, lsl #4
  41e878:	b.ls	41e710 <nftw@plt+0x1bb90>  // b.plast
  41e87c:	ldrb	w4, [x26, #7]
  41e880:	ldrh	w0, [x0, x4, lsl #1]
  41e884:	tbz	w0, #8, 41e710 <nftw@plt+0x1bb90>
  41e888:	ldrb	w21, [x3, w4, sxtw]
  41e88c:	add	x22, x26, #0x8
  41e890:	str	x22, [x20]
  41e894:	add	w21, w21, w1, lsl #4
  41e898:	cmp	w21, #0x9f
  41e89c:	b.ls	41e614 <nftw@plt+0x1ba94>  // b.plast
  41e8a0:	tbz	w21, #31, 41e9a4 <nftw@plt+0x1be24>
  41e8a4:	sub	w3, w22, w25
  41e8a8:	mov	x4, x25
  41e8ac:	mov	x0, x23
  41e8b0:	adrp	x2, 475000 <_obstack_memory_used@@Base+0x13bb8>
  41e8b4:	mov	w1, #0x3                   	// #3
  41e8b8:	add	x2, x2, #0x138
  41e8bc:	mov	w21, #0x1                   	// #1
  41e8c0:	bl	427178 <nftw@plt+0x245f8>
  41e8c4:	b	41e90c <nftw@plt+0x1bd8c>
  41e8c8:	ldr	w7, [x27, #4]
  41e8cc:	add	w7, w7, w4
  41e8d0:	str	w7, [x27]
  41e8d4:	b	41e480 <nftw@plt+0x1b900>
  41e8d8:	ldr	w7, [x27, #4]
  41e8dc:	add	w7, w7, w4
  41e8e0:	str	w7, [x27]
  41e8e4:	b	41e4b8 <nftw@plt+0x1b938>
  41e8e8:	str	x22, [x20]
  41e8ec:	adrp	x2, 475000 <_obstack_memory_used@@Base+0x13bb8>
  41e8f0:	sub	w3, w22, w25
  41e8f4:	mov	x4, x25
  41e8f8:	mov	x0, x23
  41e8fc:	add	x2, x2, #0x220
  41e900:	mov	w1, #0x3                   	// #3
  41e904:	mov	w21, #0x1                   	// #1
  41e908:	bl	427178 <nftw@plt+0x245f8>
  41e90c:	str	w21, [x19]
  41e910:	mov	w0, #0x1                   	// #1
  41e914:	ldp	x19, x20, [sp, #16]
  41e918:	ldp	x21, x22, [sp, #32]
  41e91c:	ldp	x23, x24, [sp, #48]
  41e920:	ldp	x25, x26, [sp, #64]
  41e924:	ldp	x27, x28, [sp, #80]
  41e928:	ldp	x29, x30, [sp], #112
  41e92c:	ret
  41e930:	ldr	w7, [x27, #4]
  41e934:	add	w7, w7, w4
  41e938:	str	w7, [x27]
  41e93c:	b	41e4f0 <nftw@plt+0x1b970>
  41e940:	ldr	w2, [x27, #4]
  41e944:	add	w2, w2, w0
  41e948:	str	w2, [x27]
  41e94c:	b	41e5fc <nftw@plt+0x1ba7c>
  41e950:	adrp	x2, 475000 <_obstack_memory_used@@Base+0x13bb8>
  41e954:	add	x2, x2, #0x40
  41e958:	str	x6, [sp, #104]
  41e95c:	bl	427178 <nftw@plt+0x245f8>
  41e960:	ldurb	w3, [x26, #-1]
  41e964:	ldr	x6, [sp, #104]
  41e968:	b	41e3f8 <nftw@plt+0x1b878>
  41e96c:	adrp	x2, 475000 <_obstack_memory_used@@Base+0x13bb8>
  41e970:	mov	w1, #0x0                   	// #0
  41e974:	add	x2, x2, #0x78
  41e978:	str	x6, [sp, #104]
  41e97c:	bl	427178 <nftw@plt+0x245f8>
  41e980:	ldurb	w3, [x26, #-1]
  41e984:	ldr	x6, [sp, #104]
  41e988:	b	41e3f8 <nftw@plt+0x1b878>
  41e98c:	and	w0, w21, #0xffffffdf
  41e990:	mov	w1, #0x24                  	// #36
  41e994:	cmp	w0, #0x40
  41e998:	ccmp	w21, w1, #0x4, ne  // ne = any
  41e99c:	b.eq	41e61c <nftw@plt+0x1ba9c>  // b.none
  41e9a0:	b	41e8a4 <nftw@plt+0x1bd24>
  41e9a4:	mov	w0, #0xffff2800            	// #-55296
  41e9a8:	add	w0, w21, w0
  41e9ac:	cmp	w0, #0x7ff
  41e9b0:	b.ls	41e8a4 <nftw@plt+0x1bd24>  // b.plast
  41e9b4:	cmp	w24, #0x0
  41e9b8:	cset	w0, ne  // ne = any
  41e9bc:	cbz	w0, 41e90c <nftw@plt+0x1bd8c>
  41e9c0:	mov	w0, #0x10ffff              	// #1114111
  41e9c4:	cmp	w21, w0
  41e9c8:	b.ls	41e638 <nftw@plt+0x1bab8>  // b.plast
  41e9cc:	sub	w3, w22, w25
  41e9d0:	mov	x4, x25
  41e9d4:	mov	x0, x23
  41e9d8:	adrp	x2, 475000 <_obstack_memory_used@@Base+0x13bb8>
  41e9dc:	mov	w1, #0x3                   	// #3
  41e9e0:	add	x2, x2, #0x1a0
  41e9e4:	bl	427178 <nftw@plt+0x245f8>
  41e9e8:	b	41e90c <nftw@plt+0x1bd8c>
  41e9ec:	mov	x0, x23
  41e9f0:	adrp	x2, 475000 <_obstack_memory_used@@Base+0x13bb8>
  41e9f4:	mov	w1, #0x6                   	// #6
  41e9f8:	add	x2, x2, #0xb8
  41e9fc:	str	x6, [sp, #104]
  41ea00:	bl	427298 <nftw@plt+0x24718>
  41ea04:	ldurb	w3, [x26, #-1]
  41ea08:	ldr	x6, [sp, #104]
  41ea0c:	b	41e3f8 <nftw@plt+0x1b878>
  41ea10:	ldrb	w0, [x23, #1148]
  41ea14:	cbz	w0, 41ea20 <nftw@plt+0x1bea0>
  41ea18:	ldrb	w0, [x23, #18]
  41ea1c:	cbz	w0, 41eac8 <nftw@plt+0x1bf48>
  41ea20:	ldr	x1, [sp, #96]
  41ea24:	mov	w0, #0x24                  	// #36
  41ea28:	mov	w21, w0
  41ea2c:	str	w0, [x1]
  41ea30:	strb	wzr, [x1, #4]
  41ea34:	b	41e90c <nftw@plt+0x1bd8c>
  41ea38:	add	w2, w0, #0x1
  41ea3c:	b	41e66c <nftw@plt+0x1baec>
  41ea40:	mov	w2, #0xd                   	// #13
  41ea44:	tst	w0, w2
  41ea48:	b.eq	41e9cc <nftw@plt+0x1be4c>  // b.none
  41ea4c:	ldrb	w2, [x23, #1164]
  41ea50:	cbnz	w2, 41eac0 <nftw@plt+0x1bf40>
  41ea54:	ldrb	w2, [x23, #1152]
  41ea58:	mov	w26, #0x0                   	// #0
  41ea5c:	cbz	w2, 41e6b4 <nftw@plt+0x1bb34>
  41ea60:	and	w26, w0, #0x2
  41ea64:	b	41e6b4 <nftw@plt+0x1bb34>
  41ea68:	tbz	w0, #8, 41eae4 <nftw@plt+0x1bf64>
  41ea6c:	ldr	x1, [sp, #96]
  41ea70:	mov	w18, #0xffffee9f            	// #-4449
  41ea74:	add	w0, w21, w18
  41ea78:	cmp	w0, #0x14
  41ea7c:	ldr	w1, [x1]
  41ea80:	b.hi	41eb2c <nftw@plt+0x1bfac>  // b.pmore
  41ea84:	mov	w17, #0xffffef00            	// #-4352
  41ea88:	add	w1, w1, w17
  41ea8c:	cmp	w1, #0x12
  41ea90:	b.hi	41eaac <nftw@plt+0x1bf2c>  // b.pmore
  41ea94:	ldr	x2, [sp, #96]
  41ea98:	mov	w1, #0x2                   	// #2
  41ea9c:	ldr	w0, [x2, #8]
  41eaa0:	cmp	w0, w1
  41eaa4:	csel	w0, w0, w1, ge  // ge = tcont
  41eaa8:	str	w0, [x2, #8]
  41eaac:	cbnz	w27, 41e6d8 <nftw@plt+0x1bb58>
  41eab0:	ldr	x0, [sp, #96]
  41eab4:	str	w21, [x0]
  41eab8:	b	41e6d8 <nftw@plt+0x1bb58>
  41eabc:	tbz	w0, #3, 41e9cc <nftw@plt+0x1be4c>
  41eac0:	and	w26, w0, #0x10
  41eac4:	b	41e6b4 <nftw@plt+0x1bb34>
  41eac8:	strb	wzr, [x23, #1148]
  41eacc:	mov	x0, x23
  41ead0:	adrp	x2, 475000 <_obstack_memory_used@@Base+0x13bb8>
  41ead4:	mov	w1, #0x2                   	// #2
  41ead8:	add	x2, x2, #0x160
  41eadc:	bl	427178 <nftw@plt+0x245f8>
  41eae0:	b	41ea20 <nftw@plt+0x1bea0>
  41eae4:	tbnz	w0, #7, 41eaac <nftw@plt+0x1bf2c>
  41eae8:	tbz	w0, #6, 41eb70 <nftw@plt+0x1bff0>
  41eaec:	ldr	x1, [sp, #96]
  41eaf0:	ldr	w0, [x1, #8]
  41eaf4:	cmp	w0, #0x0
  41eaf8:	csinc	w0, w0, wzr, gt
  41eafc:	str	w0, [x1, #8]
  41eb00:	b	41eaac <nftw@plt+0x1bf2c>
  41eb04:	adrp	x0, 481000 <_obstack_memory_used@@Base+0x1fbb8>
  41eb08:	add	x0, x0, #0xaf0
  41eb0c:	ldrh	w0, [x0, x1, lsl #1]
  41eb10:	tbz	w0, #8, 41e70c <nftw@plt+0x1bb8c>
  41eb14:	adrp	x2, 475000 <_obstack_memory_used@@Base+0x13bb8>
  41eb18:	adrp	x0, 475000 <_obstack_memory_used@@Base+0x13bb8>
  41eb1c:	add	x2, x2, #0x110
  41eb20:	add	x0, x0, #0x120
  41eb24:	mov	w1, #0x434                 	// #1076
  41eb28:	bl	402bf0 <nftw@plt+0x70>
  41eb2c:	mov	w16, #0xffffee58            	// #-4520
  41eb30:	add	w0, w21, w16
  41eb34:	cmp	w0, #0x1a
  41eb38:	b.hi	41eb84 <nftw@plt+0x1c004>  // b.pmore
  41eb3c:	mov	w15, #0xffff5400            	// #-44032
  41eb40:	add	w1, w1, w15
  41eb44:	mov	w0, #0x2ba3                	// #11171
  41eb48:	cmp	w1, w0
  41eb4c:	b.hi	41eaac <nftw@plt+0x1bf2c>  // b.pmore
  41eb50:	mov	w2, #0x1c                  	// #28
  41eb54:	udiv	w0, w1, w2
  41eb58:	msub	w0, w0, w2, w1
  41eb5c:	cbnz	w0, 41eaac <nftw@plt+0x1bf2c>
  41eb60:	b	41ea94 <nftw@plt+0x1bf14>
  41eb64:	tbz	w0, #0, 41e9cc <nftw@plt+0x1be4c>
  41eb68:	and	w26, w0, #0x2
  41eb6c:	b	41e6b4 <nftw@plt+0x1bb34>
  41eb70:	tbnz	w0, #5, 41ea94 <nftw@plt+0x1bf14>
  41eb74:	ldr	x1, [sp, #96]
  41eb78:	mov	w0, #0x3                   	// #3
  41eb7c:	str	w0, [x1, #8]
  41eb80:	b	41eaac <nftw@plt+0x1bf2c>
  41eb84:	cmp	w21, #0x345
  41eb88:	b.hi	41f3c8 <nftw@plt+0x1c848>  // b.pmore
  41eb8c:	cmp	w21, #0x2ff
  41eb90:	b.ls	41edf8 <nftw@plt+0x1c278>  // b.plast
  41eb94:	sub	w2, w21, #0x300
  41eb98:	cmp	w2, #0x45
  41eb9c:	b.hi	41edf8 <nftw@plt+0x1c278>  // b.pmore
  41eba0:	adrp	x0, 475000 <_obstack_memory_used@@Base+0x13bb8>
  41eba4:	add	x0, x0, #0x580
  41eba8:	ldrh	w0, [x0, w2, uxtw #1]
  41ebac:	adr	x2, 41ebb8 <nftw@plt+0x1c038>
  41ebb0:	add	x0, x2, w0, sxth #2
  41ebb4:	br	x0
  41ebb8:	sub	w1, w1, #0x41
  41ebbc:	cmp	w1, #0x34
  41ebc0:	b.hi	41eaac <nftw@plt+0x1bf2c>  // b.pmore
  41ebc4:	mov	x2, #0x4111                	// #16657
  41ebc8:	mov	x0, #0x1                   	// #1
  41ebcc:	movk	x2, #0x12, lsl #16
  41ebd0:	lsl	x1, x0, x1
  41ebd4:	movk	x2, #0x4111, lsl #32
  41ebd8:	movk	x2, #0x12, lsl #48
  41ebdc:	tst	x1, x2
  41ebe0:	b.eq	41eaac <nftw@plt+0x1bf2c>  // b.none
  41ebe4:	ldr	x1, [sp, #96]
  41ebe8:	mov	w0, #0x3                   	// #3
  41ebec:	str	w0, [x1, #8]
  41ebf0:	b	41eaac <nftw@plt+0x1bf2c>
  41ebf4:	sub	w1, w1, #0x41
  41ebf8:	cmp	w1, #0x38
  41ebfc:	b.hi	41eaac <nftw@plt+0x1bf2c>  // b.pmore
  41ec00:	mov	x2, #0x1                   	// #1
  41ec04:	mov	x0, #0x1                   	// #1
  41ec08:	movk	x2, #0x10, lsl #16
  41ec0c:	lsl	x1, x0, x1
  41ec10:	movk	x2, #0x1, lsl #32
  41ec14:	movk	x2, #0x150, lsl #48
  41ec18:	tst	x1, x2
  41ec1c:	b.eq	41eaac <nftw@plt+0x1bf2c>  // b.none
  41ec20:	b	41ebe4 <nftw@plt+0x1c064>
  41ec24:	cmp	w1, #0x7a
  41ec28:	b.hi	420224 <nftw@plt+0x1d6a4>  // b.pmore
  41ec2c:	cmp	w1, #0x40
  41ec30:	b.ls	41eaac <nftw@plt+0x1bf2c>  // b.plast
  41ec34:	mov	x2, #0x6ddd                	// #28125
  41ec38:	sub	w1, w1, #0x41
  41ec3c:	movk	x2, #0x21e, lsl #16
  41ec40:	mov	x0, #0x1                   	// #1
  41ec44:	movk	x2, #0x6fdd, lsl #32
  41ec48:	lsl	x1, x0, x1
  41ec4c:	movk	x2, #0x21e, lsl #48
  41ec50:	tst	x1, x2
  41ec54:	b.ne	41ebe4 <nftw@plt+0x1c064>  // b.any
  41ec58:	b	41eaac <nftw@plt+0x1bf2c>
  41ec5c:	cmp	w1, #0x75
  41ec60:	b.hi	41fcc4 <nftw@plt+0x1d144>  // b.pmore
  41ec64:	cmp	w1, #0x4e
  41ec68:	b.ls	41eaac <nftw@plt+0x1bf2c>  // b.plast
  41ec6c:	sub	w1, w1, #0x4f
  41ec70:	mov	x0, #0x1                   	// #1
  41ec74:	mov	x2, #0x41                  	// #65
  41ec78:	movk	x2, #0x41, lsl #32
  41ec7c:	lsl	x1, x0, x1
  41ec80:	tst	x1, x2
  41ec84:	b.eq	41eaac <nftw@plt+0x1bf2c>  // b.none
  41ec88:	b	41ebe4 <nftw@plt+0x1c064>
  41ec8c:	cmp	w1, #0x75
  41ec90:	b.hi	41fd54 <nftw@plt+0x1d1d4>  // b.pmore
  41ec94:	cmp	w1, #0x40
  41ec98:	b.ls	41eaac <nftw@plt+0x1bf2c>  // b.plast
  41ec9c:	mov	x2, #0x4111                	// #16657
  41eca0:	sub	w1, w1, #0x41
  41eca4:	movk	x2, #0x12, lsl #16
  41eca8:	mov	x0, #0x1                   	// #1
  41ecac:	movk	x2, #0x4111, lsl #32
  41ecb0:	lsl	x1, x0, x1
  41ecb4:	movk	x2, #0x12, lsl #48
  41ecb8:	tst	x1, x2
  41ecbc:	b.eq	41eaac <nftw@plt+0x1bf2c>  // b.none
  41ecc0:	b	41ebe4 <nftw@plt+0x1c064>
  41ecc4:	cmp	w1, #0x456
  41ecc8:	b.hi	41f924 <nftw@plt+0x1cda4>  // b.pmore
  41eccc:	cmp	w1, #0x3b8
  41ecd0:	b.hi	41f2c8 <nftw@plt+0x1c748>  // b.pmore
  41ecd4:	cmp	w1, #0x79
  41ecd8:	b.hi	41fcd4 <nftw@plt+0x1d154>  // b.pmore
  41ecdc:	cmp	w1, #0x40
  41ece0:	b.ls	41eaac <nftw@plt+0x1bf2c>  // b.plast
  41ece4:	mov	x2, #0x4191                	// #16785
  41ece8:	sub	w1, w1, #0x41
  41ecec:	movk	x2, #0x1d0, lsl #16
  41ecf0:	mov	x0, #0x1                   	// #1
  41ecf4:	movk	x2, #0x4191, lsl #32
  41ecf8:	lsl	x1, x0, x1
  41ecfc:	movk	x2, #0x1d8, lsl #48
  41ed00:	tst	x1, x2
  41ed04:	b.eq	41eaac <nftw@plt+0x1bf2c>  // b.none
  41ed08:	b	41ebe4 <nftw@plt+0x1c064>
  41ed0c:	cmp	w1, #0x79
  41ed10:	b.hi	41fd64 <nftw@plt+0x1d1e4>  // b.pmore
  41ed14:	cmp	w1, #0x40
  41ed18:	b.ls	41eaac <nftw@plt+0x1bf2c>  // b.plast
  41ed1c:	mov	x2, #0x4111                	// #16657
  41ed20:	sub	w1, w1, #0x41
  41ed24:	movk	x2, #0x110, lsl #16
  41ed28:	mov	x0, #0x1                   	// #1
  41ed2c:	movk	x2, #0x4111, lsl #32
  41ed30:	lsl	x1, x0, x1
  41ed34:	movk	x2, #0x110, lsl #48
  41ed38:	tst	x1, x2
  41ed3c:	b.eq	41eaac <nftw@plt+0x1bf2c>  // b.none
  41ed40:	b	41ebe4 <nftw@plt+0x1c064>
  41ed44:	cmp	w1, #0x7a
  41ed48:	b.hi	41fa80 <nftw@plt+0x1cf00>  // b.pmore
  41ed4c:	cmp	w1, #0x40
  41ed50:	b.ls	41eaac <nftw@plt+0x1bf2c>  // b.plast
  41ed54:	mov	x2, #0xf1ff                	// #61951
  41ed58:	sub	w1, w1, #0x41
  41ed5c:	movk	x2, #0x3ce, lsl #16
  41ed60:	mov	x0, #0x1                   	// #1
  41ed64:	movk	x2, #0xf0ff, lsl #32
  41ed68:	lsl	x1, x0, x1
  41ed6c:	movk	x2, #0x3ce, lsl #48
  41ed70:	tst	x1, x2
  41ed74:	b.ne	41ebe4 <nftw@plt+0x1c064>  // b.any
  41ed78:	b	41eaac <nftw@plt+0x1bf2c>
  41ed7c:	cmp	w1, #0x3c5
  41ed80:	b.hi	41fad8 <nftw@plt+0x1cf58>  // b.pmore
  41ed84:	cmp	w1, #0x390
  41ed88:	b.hi	41f310 <nftw@plt+0x1c790>  // b.pmore
  41ed8c:	cmp	w1, #0x75
  41ed90:	b.hi	41f8a0 <nftw@plt+0x1cd20>  // b.pmore
  41ed94:	cmp	w1, #0x40
  41ed98:	b.ls	41eaac <nftw@plt+0x1bf2c>  // b.plast
  41ed9c:	mov	x2, #0x4151                	// #16721
  41eda0:	sub	w1, w1, #0x41
  41eda4:	movk	x2, #0x10, lsl #16
  41eda8:	mov	x0, #0x1                   	// #1
  41edac:	movk	x2, #0x4151, lsl #32
  41edb0:	lsl	x1, x0, x1
  41edb4:	movk	x2, #0x10, lsl #48
  41edb8:	tst	x1, x2
  41edbc:	b.eq	41eaac <nftw@plt+0x1bf2c>  // b.none
  41edc0:	b	41ebe4 <nftw@plt+0x1c064>
  41edc4:	cmp	w1, #0x41a
  41edc8:	b.hi	41fdbc <nftw@plt+0x1d23c>  // b.pmore
  41edcc:	cmp	w1, #0x390
  41edd0:	b.hi	41f2ec <nftw@plt+0x1c76c>  // b.pmore
  41edd4:	sub	w1, w1, #0x41
  41edd8:	cmp	w1, #0x16f
  41eddc:	b.hi	41eaac <nftw@plt+0x1bf2c>  // b.pmore
  41ede0:	adrp	x0, 475000 <_obstack_memory_used@@Base+0x13bb8>
  41ede4:	add	x0, x0, #0x60c
  41ede8:	ldrh	w0, [x0, w1, uxtw #1]
  41edec:	adr	x1, 41edf8 <nftw@plt+0x1c278>
  41edf0:	add	x0, x1, w0, sxth #2
  41edf4:	br	x0
  41edf8:	mov	w3, w21
  41edfc:	mov	x0, x23
  41ee00:	adrp	x2, 475000 <_obstack_memory_used@@Base+0x13bb8>
  41ee04:	mov	w1, #0x4                   	// #4
  41ee08:	add	x2, x2, #0x180
  41ee0c:	bl	427178 <nftw@plt+0x245f8>
  41ee10:	b	41eaac <nftw@plt+0x1bf2c>
  41ee14:	cmp	w1, #0x3ce
  41ee18:	b.hi	420174 <nftw@plt+0x1d5f4>  // b.pmore
  41ee1c:	cmp	w1, #0x390
  41ee20:	b.ls	41eaac <nftw@plt+0x1bf2c>  // b.plast
  41ee24:	mov	x2, #0x41                  	// #65
  41ee28:	sub	w1, w1, #0x391
  41ee2c:	movk	x2, #0x2900, lsl #16
  41ee30:	mov	x0, #0x1                   	// #1
  41ee34:	movk	x2, #0x41, lsl #32
  41ee38:	lsl	x1, x0, x1
  41ee3c:	movk	x2, #0x2100, lsl #48
  41ee40:	tst	x1, x2
  41ee44:	b.eq	41eaac <nftw@plt+0x1bf2c>  // b.none
  41ee48:	b	41ebe4 <nftw@plt+0x1c064>
  41ee4c:	mov	w0, #0x1ffe                	// #8190
  41ee50:	cmp	w1, w0
  41ee54:	b.hi	41eaac <nftw@plt+0x1bf2c>  // b.pmore
  41ee58:	mov	w0, #0x1eff                	// #7935
  41ee5c:	cmp	w1, w0
  41ee60:	b.hi	41f35c <nftw@plt+0x1c7dc>  // b.pmore
  41ee64:	cmp	w1, #0xa8
  41ee68:	b.eq	41ebe4 <nftw@plt+0x1c064>  // b.none
  41ee6c:	sub	w2, w1, #0x3b1
  41ee70:	cmp	w2, #0x1a
  41ee74:	b.hi	41eaac <nftw@plt+0x1bf2c>  // b.pmore
  41ee78:	mov	x1, #0x1                   	// #1
  41ee7c:	mov	x0, #0x141                 	// #321
  41ee80:	movk	x0, #0x710, lsl #16
  41ee84:	lsl	x1, x1, x2
  41ee88:	tst	x1, x0
  41ee8c:	b.eq	41eaac <nftw@plt+0x1bf2c>  // b.none
  41ee90:	b	41ebe4 <nftw@plt+0x1c064>
  41ee94:	cmp	w1, #0x79
  41ee98:	b.hi	41fe48 <nftw@plt+0x1d2c8>  // b.pmore
  41ee9c:	cmp	w1, #0x40
  41eea0:	b.ls	41eaac <nftw@plt+0x1bf2c>  // b.plast
  41eea4:	mov	x2, #0x6111                	// #24849
  41eea8:	sub	w1, w1, #0x41
  41eeac:	movk	x2, #0x130, lsl #16
  41eeb0:	mov	x0, #0x1                   	// #1
  41eeb4:	movk	x2, #0x6111, lsl #32
  41eeb8:	lsl	x1, x0, x1
  41eebc:	movk	x2, #0x130, lsl #48
  41eec0:	tst	x1, x2
  41eec4:	b.eq	41eaac <nftw@plt+0x1bf2c>  // b.none
  41eec8:	b	41ebe4 <nftw@plt+0x1c064>
  41eecc:	cmp	w1, #0x21f
  41eed0:	b.hi	41f8b0 <nftw@plt+0x1cd30>  // b.pmore
  41eed4:	cmp	w1, #0x42
  41eed8:	b.ls	41eaac <nftw@plt+0x1bf2c>  // b.plast
  41eedc:	sub	w1, w1, #0x43
  41eee0:	cmp	w1, #0x1dc
  41eee4:	b.hi	41eaac <nftw@plt+0x1bf2c>  // b.pmore
  41eee8:	adrp	x0, 475000 <_obstack_memory_used@@Base+0x13bb8>
  41eeec:	add	x0, x0, #0x8ec
  41eef0:	ldrh	w0, [x0, w1, uxtw #1]
  41eef4:	adr	x1, 41ef00 <nftw@plt+0x1c380>
  41eef8:	add	x0, x1, w0, sxth #2
  41eefc:	br	x0
  41ef00:	cmp	w1, #0x3cb
  41ef04:	b.hi	41f8f4 <nftw@plt+0x1cd74>  // b.pmore
  41ef08:	cmp	w1, #0x390
  41ef0c:	b.hi	41f258 <nftw@plt+0x1c6d8>  // b.pmore
  41ef10:	cmp	w1, #0x113
  41ef14:	b.hi	4201b8 <nftw@plt+0x1d638>  // b.pmore
  41ef18:	cmp	w1, #0x40
  41ef1c:	b.ls	41eaac <nftw@plt+0x1bf2c>  // b.plast
  41ef20:	sub	w1, w1, #0x41
  41ef24:	cmp	w1, #0xd2
  41ef28:	b.hi	41eaac <nftw@plt+0x1bf2c>  // b.pmore
  41ef2c:	adrp	x0, 475000 <_obstack_memory_used@@Base+0x13bb8>
  41ef30:	add	x0, x0, #0xca8
  41ef34:	ldrh	w0, [x0, w1, uxtw #1]
  41ef38:	adr	x1, 41ef44 <nftw@plt+0x1c3c4>
  41ef3c:	add	x0, x1, w0, sxth #2
  41ef40:	br	x0
  41ef44:	cmp	w1, #0x130
  41ef48:	b.hi	41ff54 <nftw@plt+0x1d3d4>  // b.pmore
  41ef4c:	cmp	w1, #0xf8
  41ef50:	b.hi	41f2a0 <nftw@plt+0x1c720>  // b.pmore
  41ef54:	cmp	w1, #0x75
  41ef58:	b.hi	41ff2c <nftw@plt+0x1d3ac>  // b.pmore
  41ef5c:	cmp	w1, #0x44
  41ef60:	b.ls	41eaac <nftw@plt+0x1bf2c>  // b.plast
  41ef64:	mov	x2, #0x11                  	// #17
  41ef68:	sub	w1, w1, #0x45
  41ef6c:	movk	x2, #0x1, lsl #16
  41ef70:	mov	x0, #0x1                   	// #1
  41ef74:	movk	x2, #0x11, lsl #32
  41ef78:	lsl	x1, x0, x1
  41ef7c:	movk	x2, #0x1, lsl #48
  41ef80:	tst	x1, x2
  41ef84:	b.eq	41eaac <nftw@plt+0x1bf2c>  // b.none
  41ef88:	b	41ebe4 <nftw@plt+0x1c064>
  41ef8c:	cmp	w1, #0x171
  41ef90:	b.hi	420068 <nftw@plt+0x1d4e8>  // b.pmore
  41ef94:	cmp	w1, #0x43
  41ef98:	b.ls	41eaac <nftw@plt+0x1bf2c>  // b.plast
  41ef9c:	sub	w1, w1, #0x44
  41efa0:	cmp	w1, #0x12d
  41efa4:	b.hi	41eaac <nftw@plt+0x1bf2c>  // b.pmore
  41efa8:	adrp	x0, 475000 <_obstack_memory_used@@Base+0x13bb8>
  41efac:	add	x0, x0, #0xe50
  41efb0:	ldrh	w0, [x0, w1, uxtw #1]
  41efb4:	adr	x1, 41efc0 <nftw@plt+0x1c440>
  41efb8:	add	x0, x1, w0, sxth #2
  41efbc:	br	x0
  41efc0:	cmp	w1, #0x231
  41efc4:	b.hi	41fb10 <nftw@plt+0x1cf90>  // b.pmore
  41efc8:	cmp	w1, #0xbf
  41efcc:	b.hi	41f338 <nftw@plt+0x1c7b8>  // b.pmore
  41efd0:	sub	w2, w1, #0x41
  41efd4:	cmp	w2, #0x34
  41efd8:	b.hi	41eaac <nftw@plt+0x1bf2c>  // b.pmore
  41efdc:	mov	x0, #0x4111                	// #16657
  41efe0:	mov	x1, #0x1                   	// #1
  41efe4:	movk	x0, #0x10, lsl #16
  41efe8:	lsl	x1, x1, x2
  41efec:	movk	x0, #0x4111, lsl #32
  41eff0:	movk	x0, #0x10, lsl #48
  41eff4:	tst	x1, x0
  41eff8:	b.eq	41eaac <nftw@plt+0x1bf2c>  // b.none
  41effc:	b	41ebe4 <nftw@plt+0x1c064>
  41f000:	cmp	w1, #0xfc
  41f004:	b.hi	41f9b8 <nftw@plt+0x1ce38>  // b.pmore
  41f008:	cmp	w1, #0x40
  41f00c:	b.ls	41eaac <nftw@plt+0x1bf2c>  // b.plast
  41f010:	sub	w1, w1, #0x41
  41f014:	cmp	w1, #0xbb
  41f018:	b.hi	41eaac <nftw@plt+0x1bf2c>  // b.pmore
  41f01c:	adrp	x0, 476000 <_obstack_memory_used@@Base+0x14bb8>
  41f020:	add	x0, x0, #0xac
  41f024:	ldrh	w0, [x0, w1, uxtw #1]
  41f028:	adr	x1, 41f034 <nftw@plt+0x1c4b4>
  41f02c:	add	x0, x1, w0, sxth #2
  41f030:	br	x0
  41f034:	cmp	w1, #0x233
  41f038:	b.hi	41f938 <nftw@plt+0x1cdb8>  // b.pmore
  41f03c:	cmp	w1, #0x40
  41f040:	b.ls	41eaac <nftw@plt+0x1bf2c>  // b.plast
  41f044:	sub	w1, w1, #0x41
  41f048:	cmp	w1, #0x1f2
  41f04c:	b.hi	41eaac <nftw@plt+0x1bf2c>  // b.pmore
  41f050:	adrp	x0, 476000 <_obstack_memory_used@@Base+0x14bb8>
  41f054:	add	x0, x0, #0x224
  41f058:	ldrh	w0, [x0, w1, uxtw #1]
  41f05c:	adr	x1, 41f068 <nftw@plt+0x1c4e8>
  41f060:	add	x0, x1, w0, sxth #2
  41f064:	br	x0
  41f068:	cmp	w1, #0x7a
  41f06c:	b.hi	420274 <nftw@plt+0x1d6f4>  // b.pmore
  41f070:	cmp	w1, #0x40
  41f074:	b.ls	41eaac <nftw@plt+0x1bf2c>  // b.plast
  41f078:	sub	w1, w1, #0x41
  41f07c:	cmp	w1, #0x39
  41f080:	b.hi	41eaac <nftw@plt+0x1bf2c>  // b.pmore
  41f084:	adrp	x0, 476000 <_obstack_memory_used@@Base+0x14bb8>
  41f088:	add	x0, x0, #0x60c
  41f08c:	ldrh	w0, [x0, w1, uxtw #1]
  41f090:	adr	x1, 41f09c <nftw@plt+0x1c51c>
  41f094:	add	x0, x1, w0, sxth #2
  41f098:	br	x0
  41f09c:	cmp	w1, #0x13e
  41f0a0:	b.hi	41f850 <nftw@plt+0x1ccd0>  // b.pmore
  41f0a4:	cmp	w1, #0x10d
  41f0a8:	b.hi	41f3a0 <nftw@plt+0x1c820>  // b.pmore
  41f0ac:	cmp	w1, #0x7a
  41f0b0:	b.hi	41f738 <nftw@plt+0x1cbb8>  // b.pmore
  41f0b4:	cmp	w1, #0x41
  41f0b8:	b.ls	41eaac <nftw@plt+0x1bf2c>  // b.plast
  41f0bc:	mov	x2, #0x1605                	// #5637
  41f0c0:	sub	w1, w1, #0x42
  41f0c4:	movk	x2, #0x105, lsl #16
  41f0c8:	mov	x0, #0x1                   	// #1
  41f0cc:	movk	x2, #0x1645, lsl #32
  41f0d0:	lsl	x1, x0, x1
  41f0d4:	movk	x2, #0x105, lsl #48
  41f0d8:	tst	x1, x2
  41f0dc:	b.eq	41eaac <nftw@plt+0x1bf2c>  // b.none
  41f0e0:	b	41ebe4 <nftw@plt+0x1c064>
  41f0e4:	cmp	w1, #0x1e1
  41f0e8:	b.hi	41fed0 <nftw@plt+0x1d350>  // b.pmore
  41f0ec:	cmp	w1, #0x1dd
  41f0f0:	b.hi	41ebe4 <nftw@plt+0x1c064>  // b.pmore
  41f0f4:	cmp	w1, #0xe5
  41f0f8:	b.hi	41febc <nftw@plt+0x1d33c>  // b.pmore
  41f0fc:	cmp	w1, #0xdf
  41f100:	b.hi	41ebe4 <nftw@plt+0x1c064>  // b.pmore
  41f104:	cmp	w1, #0x61
  41f108:	b.eq	41ebe4 <nftw@plt+0x1c064>  // b.none
  41f10c:	b.ls	41fea0 <nftw@plt+0x1d320>  // b.plast
  41f110:	sub	w1, w1, #0xc0
  41f114:	cmp	w1, #0x5
  41f118:	b.hi	41eaac <nftw@plt+0x1bf2c>  // b.pmore
  41f11c:	b	41ebe4 <nftw@plt+0x1c064>
  41f120:	cmp	w1, #0x165
  41f124:	b.hi	4201d8 <nftw@plt+0x1d658>  // b.pmore
  41f128:	cmp	w1, #0x159
  41f12c:	b.hi	41f384 <nftw@plt+0x1c804>  // b.pmore
  41f130:	cmp	w1, #0x54
  41f134:	b.hi	4202b8 <nftw@plt+0x1d738>  // b.pmore
  41f138:	cmp	w1, #0x52
  41f13c:	b.ls	41eaac <nftw@plt+0x1bf2c>  // b.plast
  41f140:	b	41ebe4 <nftw@plt+0x1c064>
  41f144:	cmp	w1, #0x21f
  41f148:	b.hi	41f684 <nftw@plt+0x1cb04>  // b.pmore
  41f14c:	cmp	w1, #0x21d
  41f150:	b.hi	41ebe4 <nftw@plt+0x1c064>  // b.pmore
  41f154:	cmp	w1, #0x68
  41f158:	b.eq	41ebe4 <nftw@plt+0x1c064>  // b.none
  41f15c:	b.ls	41f678 <nftw@plt+0x1caf8>  // b.plast
  41f160:	sub	w1, w1, #0x124
  41f164:	cmp	w1, #0x1
  41f168:	b.hi	41eaac <nftw@plt+0x1bf2c>  // b.pmore
  41f16c:	b	41ebe4 <nftw@plt+0x1c064>
  41f170:	cmp	w1, #0x3c9
  41f174:	b.hi	41f960 <nftw@plt+0x1cde0>  // b.pmore
  41f178:	cmp	w1, #0x390
  41f17c:	b.ls	41eaac <nftw@plt+0x1bf2c>  // b.plast
  41f180:	mov	x2, #0x4151                	// #16721
  41f184:	sub	w1, w1, #0x391
  41f188:	movk	x2, #0x111, lsl #16
  41f18c:	mov	x0, #0x1                   	// #1
  41f190:	movk	x2, #0x4151, lsl #32
  41f194:	lsl	x1, x0, x1
  41f198:	movk	x2, #0x111, lsl #48
  41f19c:	tst	x1, x2
  41f1a0:	b.eq	41eaac <nftw@plt+0x1bf2c>  // b.none
  41f1a4:	b	41ebe4 <nftw@plt+0x1c064>
  41f1a8:	cmp	w1, #0x3c9
  41f1ac:	b.hi	41f748 <nftw@plt+0x1cbc8>  // b.pmore
  41f1b0:	cmp	w1, #0x390
  41f1b4:	b.ls	41eaac <nftw@plt+0x1bf2c>  // b.plast
  41f1b8:	mov	x2, #0x4151                	// #16721
  41f1bc:	sub	w1, w1, #0x391
  41f1c0:	movk	x2, #0x100, lsl #16
  41f1c4:	mov	x0, #0x1                   	// #1
  41f1c8:	movk	x2, #0x4151, lsl #32
  41f1cc:	lsl	x1, x0, x1
  41f1d0:	movk	x2, #0x111, lsl #48
  41f1d4:	tst	x1, x2
  41f1d8:	b.eq	41eaac <nftw@plt+0x1bf2c>  // b.none
  41f1dc:	b	41ebe4 <nftw@plt+0x1c064>
  41f1e0:	cmp	w1, #0x171
  41f1e4:	b.hi	41f6b0 <nftw@plt+0x1cb30>  // b.pmore
  41f1e8:	cmp	w1, #0x167
  41f1ec:	b.hi	41ebe4 <nftw@plt+0x1c064>  // b.pmore
  41f1f0:	cmp	w1, #0xdc
  41f1f4:	b.hi	41f6a0 <nftw@plt+0x1cb20>  // b.pmore
  41f1f8:	cmp	w1, #0xd8
  41f1fc:	b.hi	41ebe4 <nftw@plt+0x1c064>  // b.pmore
  41f200:	and	w1, w1, #0xffffffdf
  41f204:	cmp	w1, #0x55
  41f208:	b.ne	41eaac <nftw@plt+0x1bf2c>  // b.any
  41f20c:	b	41ebe4 <nftw@plt+0x1c064>
  41f210:	cmp	w1, #0x171
  41f214:	b.hi	41fc7c <nftw@plt+0x1d0fc>  // b.pmore
  41f218:	cmp	w1, #0x167
  41f21c:	b.hi	41ebe4 <nftw@plt+0x1c064>  // b.pmore
  41f220:	cmp	w1, #0xfc
  41f224:	b.hi	41fc6c <nftw@plt+0x1d0ec>  // b.pmore
  41f228:	cmp	w1, #0xd1
  41f22c:	b.hi	41f280 <nftw@plt+0x1c700>  // b.pmore
  41f230:	sub	w2, w1, #0x4f
  41f234:	cmp	w2, #0x26
  41f238:	b.hi	41eaac <nftw@plt+0x1bf2c>  // b.pmore
  41f23c:	mov	x1, #0x1                   	// #1
  41f240:	mov	x0, #0x41                  	// #65
  41f244:	movk	x0, #0x41, lsl #32
  41f248:	lsl	x1, x1, x2
  41f24c:	tst	x1, x0
  41f250:	b.eq	41eaac <nftw@plt+0x1bf2c>  // b.none
  41f254:	b	41ebe4 <nftw@plt+0x1c064>
  41f258:	mov	x2, #0x4151                	// #16721
  41f25c:	sub	w1, w1, #0x391
  41f260:	movk	x2, #0x110, lsl #16
  41f264:	mov	x0, #0x1                   	// #1
  41f268:	movk	x2, #0x4151, lsl #32
  41f26c:	lsl	x1, x0, x1
  41f270:	movk	x2, #0x710, lsl #48
  41f274:	tst	x1, x2
  41f278:	b.eq	41eaac <nftw@plt+0x1bf2c>  // b.none
  41f27c:	b	41ebe4 <nftw@plt+0x1c064>
  41f280:	sub	w1, w1, #0xd2
  41f284:	mov	x0, #0x1                   	// #1
  41f288:	mov	x2, #0x79f                 	// #1951
  41f28c:	movk	x2, #0x79f, lsl #32
  41f290:	lsl	x1, x0, x1
  41f294:	tst	x1, x2
  41f298:	b.eq	41eaac <nftw@plt+0x1bf2c>  // b.none
  41f29c:	b	41ebe4 <nftw@plt+0x1c064>
  41f2a0:	mov	x2, #0xf                   	// #15
  41f2a4:	sub	w1, w1, #0xf9
  41f2a8:	movk	x2, #0x7e00, lsl #16
  41f2ac:	mov	x0, #0x1                   	// #1
  41f2b0:	movk	x2, #0x8006, lsl #32
  41f2b4:	lsl	x1, x0, x1
  41f2b8:	movk	x2, #0x9f, lsl #48
  41f2bc:	tst	x1, x2
  41f2c0:	b.eq	41eaac <nftw@plt+0x1bf2c>  // b.none
  41f2c4:	b	41ebe4 <nftw@plt+0x1c064>
  41f2c8:	sub	w1, w1, #0x3b9
  41f2cc:	cmp	w1, #0x9d
  41f2d0:	b.hi	41eaac <nftw@plt+0x1bf2c>  // b.pmore
  41f2d4:	adrp	x0, 476000 <_obstack_memory_used@@Base+0x14bb8>
  41f2d8:	add	x0, x0, #0x680
  41f2dc:	ldrh	w0, [x0, w1, uxtw #1]
  41f2e0:	adr	x1, 41f2ec <nftw@plt+0x1c76c>
  41f2e4:	add	x0, x1, w0, sxth #2
  41f2e8:	br	x0
  41f2ec:	sub	w1, w1, #0x391
  41f2f0:	cmp	w1, #0x89
  41f2f4:	b.hi	41eaac <nftw@plt+0x1bf2c>  // b.pmore
  41f2f8:	adrp	x0, 476000 <_obstack_memory_used@@Base+0x14bb8>
  41f2fc:	add	x0, x0, #0x7bc
  41f300:	ldrh	w0, [x0, w1, uxtw #1]
  41f304:	adr	x1, 41f310 <nftw@plt+0x1c790>
  41f308:	add	x0, x1, w0, sxth #2
  41f30c:	br	x0
  41f310:	mov	x2, #0x101                 	// #257
  41f314:	sub	w1, w1, #0x391
  41f318:	movk	x2, #0x10, lsl #16
  41f31c:	mov	x0, #0x1                   	// #1
  41f320:	movk	x2, #0x101, lsl #32
  41f324:	lsl	x1, x0, x1
  41f328:	movk	x2, #0x10, lsl #48
  41f32c:	tst	x1, x2
  41f330:	b.eq	41eaac <nftw@plt+0x1bf2c>  // b.none
  41f334:	b	41ebe4 <nftw@plt+0x1c064>
  41f338:	sub	w1, w1, #0xc0
  41f33c:	cmp	w1, #0x171
  41f340:	b.hi	41eaac <nftw@plt+0x1bf2c>  // b.pmore
  41f344:	adrp	x0, 476000 <_obstack_memory_used@@Base+0x14bb8>
  41f348:	add	x0, x0, #0x8d0
  41f34c:	ldrh	w0, [x0, w1, uxtw #1]
  41f350:	adr	x1, 41f35c <nftw@plt+0x1c7dc>
  41f354:	add	x0, x1, w0, sxth #2
  41f358:	br	x0
  41f35c:	mov	w7, #0xffffe100            	// #-7936
  41f360:	add	w1, w1, w7
  41f364:	cmp	w1, #0xfe
  41f368:	b.hi	41eaac <nftw@plt+0x1bf2c>  // b.pmore
  41f36c:	adrp	x0, 476000 <_obstack_memory_used@@Base+0x14bb8>
  41f370:	add	x0, x0, #0xbb4
  41f374:	ldrh	w0, [x0, w1, uxtw #1]
  41f378:	adr	x1, 41f384 <nftw@plt+0x1c804>
  41f37c:	add	x0, x1, w0, sxth #2
  41f380:	br	x0
  41f384:	sub	w1, w1, #0x15a
  41f388:	mov	x0, #0x1                   	// #1
  41f38c:	mov	x2, #0xccf                 	// #3279
  41f390:	lsl	x1, x0, x1
  41f394:	tst	x1, x2
  41f398:	b.ne	41ebe4 <nftw@plt+0x1c064>  // b.any
  41f39c:	b	41eaac <nftw@plt+0x1bf2c>
  41f3a0:	mov	x2, #0x3                   	// #3
  41f3a4:	sub	w1, w1, #0x10e
  41f3a8:	movk	x2, #0x80, lsl #16
  41f3ac:	mov	x0, #0x1                   	// #1
  41f3b0:	movk	x2, #0x9800, lsl #32
  41f3b4:	lsl	x1, x0, x1
  41f3b8:	movk	x2, #0x1, lsl #48
  41f3bc:	tst	x1, x2
  41f3c0:	b.eq	41eaac <nftw@plt+0x1bf2c>  // b.none
  41f3c4:	b	41ebe4 <nftw@plt+0x1c064>
  41f3c8:	cmp	w21, #0xcd5
  41f3cc:	b.eq	41f400 <nftw@plt+0x1c880>  // b.none
  41f3d0:	b.hi	41f4d8 <nftw@plt+0x1c958>  // b.pmore
  41f3d4:	cmp	w21, #0xb3e
  41f3d8:	b.eq	41f660 <nftw@plt+0x1cae0>  // b.none
  41f3dc:	b.ls	41f458 <nftw@plt+0x1c8d8>  // b.plast
  41f3e0:	cmp	w21, #0xbd7
  41f3e4:	b.eq	41f724 <nftw@plt+0x1cba4>  // b.none
  41f3e8:	b.ls	41f438 <nftw@plt+0x1c8b8>  // b.plast
  41f3ec:	cmp	w21, #0xc56
  41f3f0:	b.ne	41f424 <nftw@plt+0x1c8a4>  // b.any
  41f3f4:	cmp	w1, #0xc46
  41f3f8:	b.ne	41eaac <nftw@plt+0x1bf2c>  // b.any
  41f3fc:	b	41ebe4 <nftw@plt+0x1c064>
  41f400:	sub	w0, w1, #0xcbf
  41f404:	cmp	w0, #0xb
  41f408:	b.hi	41eaac <nftw@plt+0x1bf2c>  // b.pmore
  41f40c:	mov	x1, #0x1                   	// #1
  41f410:	mov	x2, #0x881                 	// #2177
  41f414:	lsl	x1, x1, x0
  41f418:	tst	x1, x2
  41f41c:	b.eq	41eaac <nftw@plt+0x1bf2c>  // b.none
  41f420:	b	41ebe4 <nftw@plt+0x1c064>
  41f424:	cmp	w21, #0xcc2
  41f428:	b.ne	41edf8 <nftw@plt+0x1c278>  // b.any
  41f42c:	cmp	w1, #0xcc6
  41f430:	b.ne	41eaac <nftw@plt+0x1bf2c>  // b.any
  41f434:	b	41ebe4 <nftw@plt+0x1c064>
  41f438:	cmp	w21, #0xb57
  41f43c:	b.eq	41f7d8 <nftw@plt+0x1cc58>  // b.none
  41f440:	cmp	w21, #0xbbe
  41f444:	b.ne	41f5e0 <nftw@plt+0x1ca60>  // b.any
  41f448:	sub	w1, w1, #0xbc6
  41f44c:	cmp	w1, #0x1
  41f450:	b.hi	41eaac <nftw@plt+0x1bf2c>  // b.pmore
  41f454:	b	41ebe4 <nftw@plt+0x1c064>
  41f458:	cmp	w21, #0x93c
  41f45c:	b.eq	41f478 <nftw@plt+0x1c8f8>  // b.none
  41f460:	b.ls	41f4b4 <nftw@plt+0x1c934>  // b.plast
  41f464:	cmp	w21, #0x9be
  41f468:	b.ne	41f4a0 <nftw@plt+0x1c920>  // b.any
  41f46c:	cmp	w1, #0x9c7
  41f470:	b.ne	41eaac <nftw@plt+0x1bf2c>  // b.any
  41f474:	b	41ebe4 <nftw@plt+0x1c064>
  41f478:	sub	w1, w1, #0x915
  41f47c:	cmp	w1, #0x1e
  41f480:	b.hi	41eaac <nftw@plt+0x1bf2c>  // b.pmore
  41f484:	mov	x0, #0x1                   	// #1
  41f488:	mov	x2, #0x3087                	// #12423
  41f48c:	movk	x2, #0x4c48, lsl #16
  41f490:	lsl	x1, x0, x1
  41f494:	tst	x1, x2
  41f498:	b.eq	41eaac <nftw@plt+0x1bf2c>  // b.none
  41f49c:	b	41ebe4 <nftw@plt+0x1c064>
  41f4a0:	cmp	w21, #0x9d7
  41f4a4:	b.ne	41edf8 <nftw@plt+0x1c278>  // b.any
  41f4a8:	cmp	w1, #0x9c7
  41f4ac:	b.ne	41eaac <nftw@plt+0x1bf2c>  // b.any
  41f4b0:	b	41ebe4 <nftw@plt+0x1c064>
  41f4b4:	cmp	w21, #0x654
  41f4b8:	b.eq	41f820 <nftw@plt+0x1cca0>  // b.none
  41f4bc:	cmp	w21, #0x655
  41f4c0:	b.ne	41f628 <nftw@plt+0x1caa8>  // b.any
  41f4c4:	cmp	w1, #0x623
  41f4c8:	b.hi	41f66c <nftw@plt+0x1caec>  // b.pmore
  41f4cc:	cmp	w1, #0x621
  41f4d0:	b.ls	41eaac <nftw@plt+0x1bf2c>  // b.plast
  41f4d4:	b	41ebe4 <nftw@plt+0x1c064>
  41f4d8:	mov	w0, #0x102e                	// #4142
  41f4dc:	cmp	w21, w0
  41f4e0:	b.eq	41f714 <nftw@plt+0x1cb94>  // b.none
  41f4e4:	b.ls	41f5bc <nftw@plt+0x1ca3c>  // b.plast
  41f4e8:	mov	w0, #0x309a                	// #12442
  41f4ec:	cmp	w21, w0
  41f4f0:	b.eq	41f7a0 <nftw@plt+0x1cc20>  // b.none
  41f4f4:	b.ls	41f550 <nftw@plt+0x1c9d0>  // b.plast
  41f4f8:	mov	w0, #0x10ba                	// #4282
  41f4fc:	movk	w0, #0x1, lsl #16
  41f500:	cmp	w21, w0
  41f504:	b.eq	41f528 <nftw@plt+0x1c9a8>  // b.none
  41f508:	add	w0, w0, #0x6d
  41f50c:	cmp	w21, w0
  41f510:	b.ne	41edf8 <nftw@plt+0x1c278>  // b.any
  41f514:	sub	w1, w1, #0x11, lsl #12
  41f518:	sub	w1, w1, #0x131
  41f51c:	cmp	w1, #0x1
  41f520:	b.hi	41eaac <nftw@plt+0x1bf2c>  // b.pmore
  41f524:	b	41ebe4 <nftw@plt+0x1c064>
  41f528:	sub	w0, w1, #0x11, lsl #12
  41f52c:	sub	w0, w0, #0x99
  41f530:	cmp	w0, #0xc
  41f534:	b.hi	41eaac <nftw@plt+0x1bf2c>  // b.pmore
  41f538:	mov	x1, #0x1                   	// #1
  41f53c:	mov	x2, #0x1005                	// #4101
  41f540:	lsl	x1, x1, x0
  41f544:	tst	x1, x2
  41f548:	b.eq	41eaac <nftw@plt+0x1bf2c>  // b.none
  41f54c:	b	41ebe4 <nftw@plt+0x1c064>
  41f550:	mov	w0, #0x1b35                	// #6965
  41f554:	cmp	w21, w0
  41f558:	b.eq	41f590 <nftw@plt+0x1ca10>  // b.none
  41f55c:	mov	w0, #0x3099                	// #12441
  41f560:	cmp	w21, w0
  41f564:	b.ne	41edf8 <nftw@plt+0x1c278>  // b.any
  41f568:	mov	w4, #0xffffcfba            	// #-12358
  41f56c:	add	w1, w1, w4
  41f570:	cmp	w1, #0xb7
  41f574:	b.hi	41eaac <nftw@plt+0x1bf2c>  // b.pmore
  41f578:	adrp	x2, 476000 <_obstack_memory_used@@Base+0x14bb8>
  41f57c:	add	x2, x2, #0xdb4
  41f580:	ldrh	w0, [x2, w1, uxtw #1]
  41f584:	adr	x1, 41f590 <nftw@plt+0x1ca10>
  41f588:	add	x0, x1, w0, sxth #2
  41f58c:	br	x0
  41f590:	mov	w5, #0xffffe4fb            	// #-6917
  41f594:	add	w0, w1, w5
  41f598:	cmp	w0, #0x3d
  41f59c:	b.hi	41eaac <nftw@plt+0x1bf2c>  // b.pmore
  41f5a0:	mov	x1, #0x1                   	// #1
  41f5a4:	mov	x2, #0x1155                	// #4437
  41f5a8:	movk	x2, #0x26a0, lsl #48
  41f5ac:	lsl	x1, x1, x0
  41f5b0:	tst	x1, x2
  41f5b4:	b.eq	41eaac <nftw@plt+0x1bf2c>  // b.none
  41f5b8:	b	41ebe4 <nftw@plt+0x1c064>
  41f5bc:	cmp	w21, #0xdca
  41f5c0:	b.eq	41f80c <nftw@plt+0x1cc8c>  // b.none
  41f5c4:	b.ls	41f60c <nftw@plt+0x1ca8c>  // b.plast
  41f5c8:	cmp	w21, #0xdcf
  41f5cc:	b.ne	41f5f4 <nftw@plt+0x1ca74>  // b.any
  41f5d0:	sub	w1, w1, #0xdd9
  41f5d4:	cmp	w1, #0x1
  41f5d8:	b.hi	41eaac <nftw@plt+0x1bf2c>  // b.pmore
  41f5dc:	b	41ebe4 <nftw@plt+0x1c064>
  41f5e0:	cmp	w21, #0xb56
  41f5e4:	b.ne	41edf8 <nftw@plt+0x1c278>  // b.any
  41f5e8:	cmp	w1, #0xb47
  41f5ec:	b.ne	41eaac <nftw@plt+0x1bf2c>  // b.any
  41f5f0:	b	41ebe4 <nftw@plt+0x1c064>
  41f5f4:	cmp	w21, #0xddf
  41f5f8:	b.ne	41edf8 <nftw@plt+0x1c278>  // b.any
  41f5fc:	sub	w1, w1, #0xdd9
  41f600:	cmp	w1, #0x1
  41f604:	b.hi	41eaac <nftw@plt+0x1bf2c>  // b.pmore
  41f608:	b	41ebe4 <nftw@plt+0x1c064>
  41f60c:	cmp	w21, #0xd3e
  41f610:	b.eq	41f650 <nftw@plt+0x1cad0>  // b.none
  41f614:	cmp	w21, #0xd57
  41f618:	b.ne	41f63c <nftw@plt+0x1cabc>  // b.any
  41f61c:	cmp	w1, #0xd46
  41f620:	b.ne	41eaac <nftw@plt+0x1bf2c>  // b.any
  41f624:	b	41ebe4 <nftw@plt+0x1c064>
  41f628:	cmp	w21, #0x653
  41f62c:	b.ne	41edf8 <nftw@plt+0x1c278>  // b.any
  41f630:	cmp	w1, #0x627
  41f634:	b.ne	41eaac <nftw@plt+0x1bf2c>  // b.any
  41f638:	b	41ebe4 <nftw@plt+0x1c064>
  41f63c:	cmp	w21, #0xcd6
  41f640:	b.ne	41edf8 <nftw@plt+0x1c278>  // b.any
  41f644:	cmp	w1, #0xcc6
  41f648:	b.ne	41eaac <nftw@plt+0x1bf2c>  // b.any
  41f64c:	b	41ebe4 <nftw@plt+0x1c064>
  41f650:	sub	w1, w1, #0xd46
  41f654:	cmp	w1, #0x1
  41f658:	b.hi	41eaac <nftw@plt+0x1bf2c>  // b.pmore
  41f65c:	b	41ebe4 <nftw@plt+0x1c064>
  41f660:	cmp	w1, #0xb47
  41f664:	b.ne	41eaac <nftw@plt+0x1bf2c>  // b.any
  41f668:	b	41ebe4 <nftw@plt+0x1c064>
  41f66c:	cmp	w1, #0x627
  41f670:	b.eq	41ebe4 <nftw@plt+0x1c064>  // b.none
  41f674:	b	41eaac <nftw@plt+0x1bf2c>
  41f678:	cmp	w1, #0x48
  41f67c:	b.ne	41eaac <nftw@plt+0x1bf2c>  // b.any
  41f680:	b	41ebe4 <nftw@plt+0x1c064>
  41f684:	mov	w0, #0x1e23                	// #7715
  41f688:	cmp	w1, w0
  41f68c:	b.hi	41f6dc <nftw@plt+0x1cb5c>  // b.pmore
  41f690:	mov	w0, #0x1e21                	// #7713
  41f694:	cmp	w1, w0
  41f698:	b.ls	41eaac <nftw@plt+0x1bf2c>  // b.plast
  41f69c:	b	41ebe4 <nftw@plt+0x1c064>
  41f6a0:	sub	w1, w1, #0xf9
  41f6a4:	cmp	w1, #0x3
  41f6a8:	b.hi	41eaac <nftw@plt+0x1bf2c>  // b.pmore
  41f6ac:	b	41ebe4 <nftw@plt+0x1c064>
  41f6b0:	mov	w0, #0x1e7b                	// #7803
  41f6b4:	cmp	w1, w0
  41f6b8:	b.hi	41f700 <nftw@plt+0x1cb80>  // b.pmore
  41f6bc:	mov	w0, #0x1e77                	// #7799
  41f6c0:	cmp	w1, w0
  41f6c4:	b.hi	41ebe4 <nftw@plt+0x1c064>  // b.pmore
  41f6c8:	cmp	w1, #0x1dc
  41f6cc:	b.hi	41f6f0 <nftw@plt+0x1cb70>  // b.pmore
  41f6d0:	cmp	w1, #0x1d2
  41f6d4:	b.ls	41eaac <nftw@plt+0x1bf2c>  // b.plast
  41f6d8:	b	41ebe4 <nftw@plt+0x1c064>
  41f6dc:	mov	w13, #0xffffe1da            	// #-7718
  41f6e0:	add	w1, w1, w13
  41f6e4:	cmp	w1, #0x1
  41f6e8:	b.hi	41eaac <nftw@plt+0x1bf2c>  // b.pmore
  41f6ec:	b	41ebe4 <nftw@plt+0x1c064>
  41f6f0:	sub	w1, w1, #0x214
  41f6f4:	cmp	w1, #0x3
  41f6f8:	b.hi	41eaac <nftw@plt+0x1bf2c>  // b.pmore
  41f6fc:	b	41ebe4 <nftw@plt+0x1c064>
  41f700:	mov	w3, #0xffffe11a            	// #-7910
  41f704:	add	w1, w1, w3
  41f708:	cmp	w1, #0x1
  41f70c:	b.hi	41eaac <nftw@plt+0x1bf2c>  // b.pmore
  41f710:	b	41ebe4 <nftw@plt+0x1c064>
  41f714:	mov	w0, #0x1025                	// #4133
  41f718:	cmp	w1, w0
  41f71c:	b.ne	41eaac <nftw@plt+0x1bf2c>  // b.any
  41f720:	b	41ebe4 <nftw@plt+0x1c064>
  41f724:	cmp	w1, #0xb92
  41f728:	b.eq	41ebe4 <nftw@plt+0x1c064>  // b.none
  41f72c:	cmp	w1, #0xbc6
  41f730:	b.ne	41eaac <nftw@plt+0x1bf2c>  // b.any
  41f734:	b	41ebe4 <nftw@plt+0x1c064>
  41f738:	and	w1, w1, #0xffffffdf
  41f73c:	cmp	w1, #0xd1
  41f740:	b.ne	41eaac <nftw@plt+0x1bf2c>  // b.any
  41f744:	b	41ebe4 <nftw@plt+0x1c064>
  41f748:	mov	w0, #0x1ffc                	// #8188
  41f74c:	cmp	w1, w0
  41f750:	b.hi	41eaac <nftw@plt+0x1bf2c>  // b.pmore
  41f754:	mov	w0, #0x1fc2                	// #8130
  41f758:	cmp	w1, w0
  41f75c:	b.hi	41f77c <nftw@plt+0x1cbfc>  // b.pmore
  41f760:	mov	w0, #0x1fb3                	// #8115
  41f764:	cmp	w1, w0
  41f768:	b.eq	41ebe4 <nftw@plt+0x1c064>  // b.none
  41f76c:	mov	w0, #0x1fbc                	// #8124
  41f770:	cmp	w1, w0
  41f774:	b.ne	41eaac <nftw@plt+0x1bf2c>  // b.any
  41f778:	b	41ebe4 <nftw@plt+0x1c064>
  41f77c:	mov	w8, #0xffffe03d            	// #-8131
  41f780:	add	w1, w1, w8
  41f784:	mov	x0, #0x1                   	// #1
  41f788:	mov	x2, #0x201                 	// #513
  41f78c:	movk	x2, #0x201, lsl #48
  41f790:	lsl	x1, x0, x1
  41f794:	tst	x1, x2
  41f798:	b.eq	41eaac <nftw@plt+0x1bf2c>  // b.none
  41f79c:	b	41ebe4 <nftw@plt+0x1c064>
  41f7a0:	mov	w0, #0x307b                	// #12411
  41f7a4:	cmp	w1, w0
  41f7a8:	b.hi	41f7e4 <nftw@plt+0x1cc64>  // b.pmore
  41f7ac:	mov	w0, #0x306e                	// #12398
  41f7b0:	cmp	w1, w0
  41f7b4:	b.ls	41eaac <nftw@plt+0x1bf2c>  // b.plast
  41f7b8:	mov	w3, #0xffffcf91            	// #-12399
  41f7bc:	add	w2, w1, w3
  41f7c0:	mov	x1, #0x1                   	// #1
  41f7c4:	mov	x0, #0x1249                	// #4681
  41f7c8:	lsl	x1, x1, x2
  41f7cc:	tst	x1, x0
  41f7d0:	b.eq	41eaac <nftw@plt+0x1bf2c>  // b.none
  41f7d4:	b	41ebe4 <nftw@plt+0x1c064>
  41f7d8:	cmp	w1, #0xb47
  41f7dc:	b.ne	41eaac <nftw@plt+0x1bf2c>  // b.any
  41f7e0:	b	41ebe4 <nftw@plt+0x1c064>
  41f7e4:	mov	w2, #0xffffcf31            	// #-12495
  41f7e8:	add	w2, w1, w2
  41f7ec:	cmp	w2, #0xc
  41f7f0:	b.hi	41eaac <nftw@plt+0x1bf2c>  // b.pmore
  41f7f4:	mov	x1, #0x1                   	// #1
  41f7f8:	mov	x0, #0x1249                	// #4681
  41f7fc:	lsl	x1, x1, x2
  41f800:	tst	x1, x0
  41f804:	b.eq	41eaac <nftw@plt+0x1bf2c>  // b.none
  41f808:	b	41ebe4 <nftw@plt+0x1c064>
  41f80c:	cmp	w1, #0xdd9
  41f810:	b.eq	41ebe4 <nftw@plt+0x1c064>  // b.none
  41f814:	cmp	w1, #0xddc
  41f818:	b.ne	41eaac <nftw@plt+0x1bf2c>  // b.any
  41f81c:	b	41ebe4 <nftw@plt+0x1c064>
  41f820:	cmp	w1, #0x64a
  41f824:	b.hi	42023c <nftw@plt+0x1d6bc>  // b.pmore
  41f828:	cmp	w1, #0x626
  41f82c:	b.ls	41eaac <nftw@plt+0x1bf2c>  // b.plast
  41f830:	sub	w1, w1, #0x627
  41f834:	mov	x0, #0x1                   	// #1
  41f838:	mov	x2, #0x1                   	// #1
  41f83c:	movk	x2, #0xa, lsl #32
  41f840:	lsl	x1, x0, x1
  41f844:	tst	x1, x2
  41f848:	b.eq	41eaac <nftw@plt+0x1bf2c>  // b.none
  41f84c:	b	41ebe4 <nftw@plt+0x1c064>
  41f850:	mov	w0, #0x1e03                	// #7683
  41f854:	cmp	w1, w0
  41f858:	b.hi	41fbec <nftw@plt+0x1d06c>  // b.pmore
  41f85c:	mov	w0, #0x1e01                	// #7681
  41f860:	cmp	w1, w0
  41f864:	b.hi	41ebe4 <nftw@plt+0x1c064>  // b.pmore
  41f868:	cmp	w1, #0x17e
  41f86c:	b.hi	41fbbc <nftw@plt+0x1d03c>  // b.pmore
  41f870:	cmp	w1, #0x142
  41f874:	b.ls	41eaac <nftw@plt+0x1bf2c>  // b.plast
  41f878:	mov	x2, #0x33                  	// #51
  41f87c:	sub	w1, w1, #0x143
  41f880:	movk	x2, #0x66, lsl #16
  41f884:	mov	x0, #0x1                   	// #1
  41f888:	movk	x2, #0x6, lsl #32
  41f88c:	lsl	x1, x0, x1
  41f890:	movk	x2, #0xfc0, lsl #48
  41f894:	tst	x1, x2
  41f898:	b.eq	41eaac <nftw@plt+0x1bf2c>  // b.none
  41f89c:	b	41ebe4 <nftw@plt+0x1c064>
  41f8a0:	sub	w1, w1, #0x228
  41f8a4:	cmp	w1, #0x1
  41f8a8:	b.hi	41eaac <nftw@plt+0x1bf2c>  // b.pmore
  41f8ac:	b	41ebe4 <nftw@plt+0x1c064>
  41f8b0:	mov	w0, #0x1e3d                	// #7741
  41f8b4:	cmp	w1, w0
  41f8b8:	b.hi	41ff90 <nftw@plt+0x1d410>  // b.pmore
  41f8bc:	mov	w0, #0x1e09                	// #7689
  41f8c0:	cmp	w1, w0
  41f8c4:	b.ls	41eaac <nftw@plt+0x1bf2c>  // b.plast
  41f8c8:	mov	x2, #0xff3f                	// #65343
  41f8cc:	mov	w30, #0xffffe1f6            	// #-7690
  41f8d0:	movk	x2, #0x3fc3, lsl #16
  41f8d4:	add	w1, w1, w30
  41f8d8:	mov	x0, #0x1                   	// #1
  41f8dc:	movk	x2, #0xffc3, lsl #32
  41f8e0:	movk	x2, #0xf, lsl #48
  41f8e4:	lsl	x1, x0, x1
  41f8e8:	tst	x1, x2
  41f8ec:	b.ne	41ebe4 <nftw@plt+0x1c064>  // b.any
  41f8f0:	b	41eaac <nftw@plt+0x1bf2c>
  41f8f4:	cmp	w1, #0x438
  41f8f8:	b.ls	41fdfc <nftw@plt+0x1d27c>  // b.plast
  41f8fc:	mov	w14, #0xffffe100            	// #-7936
  41f900:	add	w1, w1, w14
  41f904:	cmp	w1, #0xfe
  41f908:	b.hi	41eaac <nftw@plt+0x1bf2c>  // b.pmore
  41f90c:	adrp	x0, 476000 <_obstack_memory_used@@Base+0x14bb8>
  41f910:	add	x0, x0, #0xf24
  41f914:	ldrh	w0, [x0, w1, uxtw #1]
  41f918:	adr	x1, 41f924 <nftw@plt+0x1cda4>
  41f91c:	add	x0, x1, w0, sxth #2
  41f920:	br	x0
  41f924:	cmp	w1, #0x4d9
  41f928:	b.hi	420204 <nftw@plt+0x1d684>  // b.pmore
  41f92c:	cmp	w1, #0x4d7
  41f930:	b.ls	41eaac <nftw@plt+0x1bf2c>  // b.plast
  41f934:	b	41ebe4 <nftw@plt+0x1c064>
  41f938:	mov	w4, #0xffffe1fe            	// #-7682
  41f93c:	add	w1, w1, w4
  41f940:	cmp	w1, #0xf7
  41f944:	b.hi	41eaac <nftw@plt+0x1bf2c>  // b.pmore
  41f948:	adrp	x0, 477000 <_obstack_memory_used@@Base+0x15bb8>
  41f94c:	add	x0, x0, #0x124
  41f950:	ldrh	w0, [x0, w1, uxtw #1]
  41f954:	adr	x1, 41f960 <nftw@plt+0x1cde0>
  41f958:	add	x0, x1, w0, sxth #2
  41f95c:	br	x0
  41f960:	mov	w0, #0x1ffc                	// #8188
  41f964:	cmp	w1, w0
  41f968:	b.hi	41eaac <nftw@plt+0x1bf2c>  // b.pmore
  41f96c:	mov	w0, #0x1fc2                	// #8130
  41f970:	cmp	w1, w0
  41f974:	b.hi	41f994 <nftw@plt+0x1ce14>  // b.pmore
  41f978:	mov	w0, #0x1fb3                	// #8115
  41f97c:	cmp	w1, w0
  41f980:	b.eq	41ebe4 <nftw@plt+0x1c064>  // b.none
  41f984:	mov	w0, #0x1fbc                	// #8124
  41f988:	cmp	w1, w0
  41f98c:	b.ne	41eaac <nftw@plt+0x1bf2c>  // b.any
  41f990:	b	41ebe4 <nftw@plt+0x1c064>
  41f994:	mov	w7, #0xffffe03d            	// #-8131
  41f998:	add	w1, w1, w7
  41f99c:	mov	x0, #0x1                   	// #1
  41f9a0:	mov	x2, #0x201                 	// #513
  41f9a4:	movk	x2, #0x201, lsl #48
  41f9a8:	lsl	x1, x0, x1
  41f9ac:	tst	x1, x2
  41f9b0:	b.eq	41eaac <nftw@plt+0x1bf2c>  // b.none
  41f9b4:	b	41ebe4 <nftw@plt+0x1c064>
  41f9b8:	cmp	w1, #0x3c5
  41f9bc:	b.hi	41fa10 <nftw@plt+0x1ce90>  // b.pmore
  41f9c0:	cmp	w1, #0x390
  41f9c4:	b.hi	41f9e8 <nftw@plt+0x1ce68>  // b.pmore
  41f9c8:	cmp	w1, #0x227
  41f9cc:	b.hi	41fa50 <nftw@plt+0x1ced0>  // b.pmore
  41f9d0:	cmp	w1, #0x225
  41f9d4:	b.hi	41ebe4 <nftw@plt+0x1c064>  // b.pmore
  41f9d8:	sub	w1, w1, #0x1ea
  41f9dc:	cmp	w1, #0x1
  41f9e0:	b.hi	41eaac <nftw@plt+0x1bf2c>  // b.pmore
  41f9e4:	b	41ebe4 <nftw@plt+0x1c064>
  41f9e8:	mov	x2, #0x101                 	// #257
  41f9ec:	sub	w1, w1, #0x391
  41f9f0:	movk	x2, #0x10, lsl #16
  41f9f4:	mov	x0, #0x1                   	// #1
  41f9f8:	movk	x2, #0x101, lsl #32
  41f9fc:	lsl	x1, x0, x1
  41fa00:	movk	x2, #0x10, lsl #48
  41fa04:	tst	x1, x2
  41fa08:	b.eq	41eaac <nftw@plt+0x1bf2c>  // b.none
  41fa0c:	b	41ebe4 <nftw@plt+0x1c064>
  41fa10:	mov	w0, #0x1e37                	// #7735
  41fa14:	cmp	w1, w0
  41fa18:	b.hi	41fa60 <nftw@plt+0x1cee0>  // b.pmore
  41fa1c:	mov	w0, #0x1e35                	// #7733
  41fa20:	cmp	w1, w0
  41fa24:	b.hi	41ebe4 <nftw@plt+0x1c064>  // b.pmore
  41fa28:	sub	w2, w1, #0x418
  41fa2c:	cmp	w2, #0x2b
  41fa30:	b.hi	41eaac <nftw@plt+0x1bf2c>  // b.pmore
  41fa34:	mov	x1, #0x1                   	// #1
  41fa38:	mov	x0, #0x801                 	// #2049
  41fa3c:	movk	x0, #0x801, lsl #32
  41fa40:	lsl	x1, x1, x2
  41fa44:	tst	x1, x0
  41fa48:	b.eq	41eaac <nftw@plt+0x1bf2c>  // b.none
  41fa4c:	b	41ebe4 <nftw@plt+0x1c064>
  41fa50:	sub	w1, w1, #0x22e
  41fa54:	cmp	w1, #0x1
  41fa58:	b.hi	41eaac <nftw@plt+0x1bf2c>  // b.pmore
  41fa5c:	b	41ebe4 <nftw@plt+0x1c064>
  41fa60:	mov	w0, #0x1fb3                	// #8115
  41fa64:	cmp	w1, w0
  41fa68:	b.eq	41ebe4 <nftw@plt+0x1c064>  // b.none
  41fa6c:	b.ls	41fab0 <nftw@plt+0x1cf30>  // b.plast
  41fa70:	mov	w0, #0x1fbc                	// #8124
  41fa74:	cmp	w1, w0
  41fa78:	b.ne	41eaac <nftw@plt+0x1bf2c>  // b.any
  41fa7c:	b	41ebe4 <nftw@plt+0x1c064>
  41fa80:	cmp	w1, #0x17f
  41fa84:	b.hi	41fac4 <nftw@plt+0x1cf44>  // b.pmore
  41fa88:	cmp	w1, #0x159
  41fa8c:	b.ls	41eaac <nftw@plt+0x1bf2c>  // b.plast
  41fa90:	sub	w1, w1, #0x15a
  41fa94:	mov	x0, #0x1                   	// #1
  41fa98:	mov	x2, #0xc3                  	// #195
  41fa9c:	movk	x2, #0x20, lsl #32
  41faa0:	lsl	x1, x0, x1
  41faa4:	tst	x1, x2
  41faa8:	b.eq	41eaac <nftw@plt+0x1bf2c>  // b.none
  41faac:	b	41ebe4 <nftw@plt+0x1c064>
  41fab0:	mov	w11, #0xffffe1a6            	// #-7770
  41fab4:	add	w1, w1, w11
  41fab8:	cmp	w1, #0x1
  41fabc:	b.hi	41eaac <nftw@plt+0x1bf2c>  // b.pmore
  41fac0:	b	41ebe4 <nftw@plt+0x1c064>
  41fac4:	mov	w9, #0xffffe19e            	// #-7778
  41fac8:	add	w1, w1, w9
  41facc:	cmp	w1, #0x1
  41fad0:	b.hi	41eaac <nftw@plt+0x1bf2c>  // b.pmore
  41fad4:	b	41ebe4 <nftw@plt+0x1c064>
  41fad8:	cmp	w1, #0x443
  41fadc:	b.hi	41fb58 <nftw@plt+0x1cfd8>  // b.pmore
  41fae0:	cmp	w1, #0x40f
  41fae4:	b.ls	41eaac <nftw@plt+0x1bf2c>  // b.plast
  41fae8:	mov	x2, #0x161                 	// #353
  41faec:	sub	w1, w1, #0x410
  41faf0:	movk	x2, #0x8, lsl #16
  41faf4:	mov	x0, #0x1                   	// #1
  41faf8:	movk	x2, #0x161, lsl #32
  41fafc:	lsl	x1, x0, x1
  41fb00:	movk	x2, #0x8, lsl #48
  41fb04:	tst	x1, x2
  41fb08:	b.eq	41eaac <nftw@plt+0x1bf2c>  // b.none
  41fb0c:	b	41ebe4 <nftw@plt+0x1c064>
  41fb10:	mov	w0, #0x1e53                	// #7763
  41fb14:	cmp	w1, w0
  41fb18:	b.hi	41fb78 <nftw@plt+0x1cff8>  // b.pmore
  41fb1c:	mov	w0, #0x1e4b                	// #7755
  41fb20:	cmp	w1, w0
  41fb24:	b.hi	41ebe4 <nftw@plt+0x1c064>  // b.pmore
  41fb28:	mov	w18, #0xffffe200            	// #-7680
  41fb2c:	add	w2, w1, w18
  41fb30:	cmp	w2, #0x2f
  41fb34:	b.hi	41eaac <nftw@plt+0x1bf2c>  // b.pmore
  41fb38:	mov	x0, #0x3                   	// #3
  41fb3c:	mov	x1, #0x1                   	// #1
  41fb40:	movk	x0, #0xff0, lsl #16
  41fb44:	lsl	x1, x1, x2
  41fb48:	movk	x0, #0xf000, lsl #32
  41fb4c:	tst	x1, x0
  41fb50:	b.eq	41eaac <nftw@plt+0x1bf2c>  // b.none
  41fb54:	b	41ebe4 <nftw@plt+0x1c064>
  41fb58:	mov	w0, #0x1fb3                	// #8115
  41fb5c:	cmp	w1, w0
  41fb60:	b.eq	41ebe4 <nftw@plt+0x1c064>  // b.none
  41fb64:	b.ls	41fb94 <nftw@plt+0x1d014>  // b.plast
  41fb68:	mov	w0, #0x1fbc                	// #8124
  41fb6c:	cmp	w1, w0
  41fb70:	b.ne	41eaac <nftw@plt+0x1bf2c>  // b.any
  41fb74:	b	41ebe4 <nftw@plt+0x1c064>
  41fb78:	mov	w0, #0x1e7b                	// #7803
  41fb7c:	cmp	w1, w0
  41fb80:	b.hi	41fba8 <nftw@plt+0x1d028>  // b.pmore
  41fb84:	mov	w0, #0x1e71                	// #7793
  41fb88:	cmp	w1, w0
  41fb8c:	b.ls	41eaac <nftw@plt+0x1bf2c>  // b.plast
  41fb90:	b	41ebe4 <nftw@plt+0x1c064>
  41fb94:	mov	w10, #0xffffe160            	// #-7840
  41fb98:	add	w1, w1, w10
  41fb9c:	cmp	w1, #0x1
  41fba0:	b.hi	41eaac <nftw@plt+0x1bf2c>  // b.pmore
  41fba4:	b	41ebe4 <nftw@plt+0x1c064>
  41fba8:	mov	w17, #0xffffe160            	// #-7840
  41fbac:	add	w1, w1, w17
  41fbb0:	cmp	w1, #0x51
  41fbb4:	b.hi	41eaac <nftw@plt+0x1bf2c>  // b.pmore
  41fbb8:	b	41ebe4 <nftw@plt+0x1c064>
  41fbbc:	sub	w2, w1, #0x1e8
  41fbc0:	cmp	w2, #0x37
  41fbc4:	b.hi	41eaac <nftw@plt+0x1bf2c>  // b.pmore
  41fbc8:	mov	x0, #0x3                   	// #3
  41fbcc:	mov	x1, #0x1                   	// #1
  41fbd0:	movk	x0, #0x3, lsl #16
  41fbd4:	lsl	x1, x1, x2
  41fbd8:	movk	x0, #0xf00, lsl #32
  41fbdc:	movk	x0, #0x80, lsl #48
  41fbe0:	tst	x1, x0
  41fbe4:	b.eq	41eaac <nftw@plt+0x1bf2c>  // b.none
  41fbe8:	b	41ebe4 <nftw@plt+0x1c064>
  41fbec:	mov	w0, #0x1e59                	// #7769
  41fbf0:	cmp	w1, w0
  41fbf4:	b.hi	41fc40 <nftw@plt+0x1d0c0>  // b.pmore
  41fbf8:	mov	w0, #0x1e22                	// #7714
  41fbfc:	cmp	w1, w0
  41fc00:	b.hi	41fc18 <nftw@plt+0x1d098>  // b.pmore
  41fc04:	mov	w9, #0xffffe1f6            	// #-7690
  41fc08:	add	w1, w1, w9
  41fc0c:	cmp	w1, #0x1
  41fc10:	b.hi	41eaac <nftw@plt+0x1bf2c>  // b.pmore
  41fc14:	b	41ebe4 <nftw@plt+0x1c064>
  41fc18:	mov	w10, #0xffffe1dd            	// #-7715
  41fc1c:	mov	x2, #0x6011                	// #24593
  41fc20:	add	w1, w1, w10
  41fc24:	mov	x0, #0x1                   	// #1
  41fc28:	movk	x2, #0x6, lsl #32
  41fc2c:	movk	x2, #0x60, lsl #48
  41fc30:	lsl	x1, x0, x1
  41fc34:	tst	x1, x2
  41fc38:	b.eq	41eaac <nftw@plt+0x1bf2c>  // b.none
  41fc3c:	b	41ebe4 <nftw@plt+0x1c064>
  41fc40:	mov	w8, #0xffffe196            	// #-7786
  41fc44:	add	w2, w1, w8
  41fc48:	cmp	w2, #0x2d
  41fc4c:	b.hi	41eaac <nftw@plt+0x1bf2c>  // b.pmore
  41fc50:	mov	x1, #0x1                   	// #1
  41fc54:	mov	x0, #0x3                   	// #3
  41fc58:	movk	x0, #0x20c0, lsl #32
  41fc5c:	lsl	x1, x1, x2
  41fc60:	tst	x1, x0
  41fc64:	b.eq	41eaac <nftw@plt+0x1bf2c>  // b.none
  41fc68:	b	41ebe4 <nftw@plt+0x1c064>
  41fc6c:	sub	w1, w1, #0x14c
  41fc70:	cmp	w1, #0x5
  41fc74:	b.hi	41eaac <nftw@plt+0x1bf2c>  // b.pmore
  41fc78:	b	41ebe4 <nftw@plt+0x1c064>
  41fc7c:	mov	w0, #0x1e53                	// #7763
  41fc80:	cmp	w1, w0
  41fc84:	b.hi	41fd00 <nftw@plt+0x1d180>  // b.pmore
  41fc88:	mov	w0, #0x1e4b                	// #7755
  41fc8c:	cmp	w1, w0
  41fc90:	b.hi	41ebe4 <nftw@plt+0x1c064>  // b.pmore
  41fc94:	cmp	w1, #0x1dc
  41fc98:	b.ls	41fcf4 <nftw@plt+0x1d174>  // b.plast
  41fc9c:	sub	w2, w1, #0x20c
  41fca0:	cmp	w2, #0x25
  41fca4:	b.hi	41eaac <nftw@plt+0x1bf2c>  // b.pmore
  41fca8:	mov	x1, #0x1                   	// #1
  41fcac:	mov	x0, #0x3fc0000000          	// #273804165120
  41fcb0:	movk	x0, #0xf0f
  41fcb4:	lsl	x1, x1, x2
  41fcb8:	tst	x1, x0
  41fcbc:	b.eq	41eaac <nftw@plt+0x1bf2c>  // b.none
  41fcc0:	b	41ebe4 <nftw@plt+0x1c064>
  41fcc4:	sub	w1, w1, #0x423
  41fcc8:	tst	w1, #0xffffffdf
  41fccc:	b.ne	41eaac <nftw@plt+0x1bf2c>  // b.any
  41fcd0:	b	41ebe4 <nftw@plt+0x1c064>
  41fcd4:	cmp	w1, #0x16b
  41fcd8:	b.hi	41fd2c <nftw@plt+0x1d1ac>  // b.pmore
  41fcdc:	cmp	w1, #0x169
  41fce0:	b.hi	41ebe4 <nftw@plt+0x1c064>  // b.pmore
  41fce4:	and	w1, w1, #0xffffffdf
  41fce8:	cmp	w1, #0xd5
  41fcec:	b.ne	41eaac <nftw@plt+0x1bf2c>  // b.any
  41fcf0:	b	41ebe4 <nftw@plt+0x1c064>
  41fcf4:	cmp	w1, #0x1d0
  41fcf8:	b.ls	41eaac <nftw@plt+0x1bf2c>  // b.plast
  41fcfc:	b	41ebe4 <nftw@plt+0x1c064>
  41fd00:	mov	w0, #0x1ed9                	// #7897
  41fd04:	cmp	w1, w0
  41fd08:	b.hi	41fd40 <nftw@plt+0x1d1c0>  // b.pmore
  41fd0c:	mov	w0, #0x1ecb                	// #7883
  41fd10:	cmp	w1, w0
  41fd14:	b.hi	41ebe4 <nftw@plt+0x1c064>  // b.pmore
  41fd18:	mov	w6, #0xffffe18e            	// #-7794
  41fd1c:	add	w1, w1, w6
  41fd20:	cmp	w1, #0x9
  41fd24:	b.hi	41eaac <nftw@plt+0x1bf2c>  // b.pmore
  41fd28:	b	41ebe4 <nftw@plt+0x1c064>
  41fd2c:	cmp	w1, #0x399
  41fd30:	b.eq	41ebe4 <nftw@plt+0x1c064>  // b.none
  41fd34:	cmp	w1, #0x3a5
  41fd38:	b.ne	41eaac <nftw@plt+0x1bf2c>  // b.any
  41fd3c:	b	41ebe4 <nftw@plt+0x1c064>
  41fd40:	mov	w5, #0xffffe11c            	// #-7908
  41fd44:	add	w1, w1, w5
  41fd48:	cmp	w1, #0x3
  41fd4c:	b.hi	41eaac <nftw@plt+0x1bf2c>  // b.pmore
  41fd50:	b	41ebe4 <nftw@plt+0x1c064>
  41fd54:	sub	w1, w1, #0x474
  41fd58:	cmp	w1, #0x1
  41fd5c:	b.hi	41eaac <nftw@plt+0x1bf2c>  // b.pmore
  41fd60:	b	41ebe4 <nftw@plt+0x1c064>
  41fd64:	cmp	w1, #0x103
  41fd68:	b.hi	41fda8 <nftw@plt+0x1d228>  // b.pmore
  41fd6c:	cmp	w1, #0xc9
  41fd70:	b.hi	41fd80 <nftw@plt+0x1d200>  // b.pmore
  41fd74:	cmp	w1, #0xc2
  41fd78:	b.ne	41eaac <nftw@plt+0x1bf2c>  // b.any
  41fd7c:	b	41ebe4 <nftw@plt+0x1c064>
  41fd80:	mov	x2, #0x401                 	// #1025
  41fd84:	sub	w1, w1, #0xca
  41fd88:	movk	x2, #0x100, lsl #16
  41fd8c:	mov	x0, #0x1                   	// #1
  41fd90:	movk	x2, #0x401, lsl #32
  41fd94:	lsl	x1, x0, x1
  41fd98:	movk	x2, #0x300, lsl #48
  41fd9c:	tst	x1, x2
  41fda0:	b.eq	41eaac <nftw@plt+0x1bf2c>  // b.none
  41fda4:	b	41ebe4 <nftw@plt+0x1c064>
  41fda8:	cmp	w1, #0x1a1
  41fdac:	b.hi	41fe24 <nftw@plt+0x1d2a4>  // b.pmore
  41fdb0:	cmp	w1, #0x19f
  41fdb4:	b.ls	41eaac <nftw@plt+0x1bf2c>  // b.plast
  41fdb8:	b	41ebe4 <nftw@plt+0x1c064>
  41fdbc:	mov	w0, #0x1ffe                	// #8190
  41fdc0:	cmp	w1, w0
  41fdc4:	b.hi	41eaac <nftw@plt+0x1bf2c>  // b.pmore
  41fdc8:	mov	w0, #0x1eff                	// #7935
  41fdcc:	cmp	w1, w0
  41fdd0:	b.ls	41fe34 <nftw@plt+0x1d2b4>  // b.plast
  41fdd4:	mov	w13, #0xffffe100            	// #-7936
  41fdd8:	add	w1, w1, w13
  41fddc:	cmp	w1, #0xfe
  41fde0:	b.hi	41eaac <nftw@plt+0x1bf2c>  // b.pmore
  41fde4:	adrp	x0, 477000 <_obstack_memory_used@@Base+0x15bb8>
  41fde8:	add	x0, x0, #0x314
  41fdec:	ldrh	w0, [x0, w1, uxtw #1]
  41fdf0:	adr	x1, 41fdfc <nftw@plt+0x1d27c>
  41fdf4:	add	x0, x1, w0, sxth #2
  41fdf8:	br	x0
  41fdfc:	cmp	w1, #0x414
  41fe00:	b.ls	41eaac <nftw@plt+0x1bf2c>  // b.plast
  41fe04:	sub	w1, w1, #0x415
  41fe08:	mov	x0, #0x1                   	// #1
  41fe0c:	mov	x2, #0x9                   	// #9
  41fe10:	movk	x2, #0x9, lsl #32
  41fe14:	lsl	x1, x0, x1
  41fe18:	tst	x1, x2
  41fe1c:	b.eq	41eaac <nftw@plt+0x1bf2c>  // b.none
  41fe20:	b	41ebe4 <nftw@plt+0x1c064>
  41fe24:	sub	w1, w1, #0x1af
  41fe28:	cmp	w1, #0x1
  41fe2c:	b.hi	41eaac <nftw@plt+0x1bf2c>  // b.pmore
  41fe30:	b	41ebe4 <nftw@plt+0x1c064>
  41fe34:	cmp	w1, #0x433
  41fe38:	b.eq	41ebe4 <nftw@plt+0x1c064>  // b.none
  41fe3c:	cmp	w1, #0x43a
  41fe40:	b.ne	41eaac <nftw@plt+0x1bf2c>  // b.any
  41fe44:	b	41ebe4 <nftw@plt+0x1c064>
  41fe48:	cmp	w1, #0x103
  41fe4c:	b.hi	41fe8c <nftw@plt+0x1d30c>  // b.pmore
  41fe50:	cmp	w1, #0xc9
  41fe54:	b.hi	41fe64 <nftw@plt+0x1d2e4>  // b.pmore
  41fe58:	cmp	w1, #0xc2
  41fe5c:	b.ne	41eaac <nftw@plt+0x1bf2c>  // b.any
  41fe60:	b	41ebe4 <nftw@plt+0x1c064>
  41fe64:	mov	x2, #0x401                 	// #1025
  41fe68:	sub	w1, w1, #0xca
  41fe6c:	movk	x2, #0x100, lsl #16
  41fe70:	mov	x0, #0x1                   	// #1
  41fe74:	movk	x2, #0x401, lsl #32
  41fe78:	lsl	x1, x0, x1
  41fe7c:	movk	x2, #0x300, lsl #48
  41fe80:	tst	x1, x2
  41fe84:	b.eq	41eaac <nftw@plt+0x1bf2c>  // b.none
  41fe88:	b	41ebe4 <nftw@plt+0x1c064>
  41fe8c:	cmp	w1, #0x1a1
  41fe90:	b.hi	41feac <nftw@plt+0x1d32c>  // b.pmore
  41fe94:	cmp	w1, #0x19f
  41fe98:	b.ls	41eaac <nftw@plt+0x1bf2c>  // b.plast
  41fe9c:	b	41ebe4 <nftw@plt+0x1c064>
  41fea0:	cmp	w1, #0x41
  41fea4:	b.ne	41eaac <nftw@plt+0x1bf2c>  // b.any
  41fea8:	b	41ebe4 <nftw@plt+0x1c064>
  41feac:	sub	w1, w1, #0x1af
  41feb0:	cmp	w1, #0x1
  41feb4:	b.hi	41eaac <nftw@plt+0x1bf2c>  // b.pmore
  41feb8:	b	41ebe4 <nftw@plt+0x1c064>
  41febc:	cmp	w1, #0x103
  41fec0:	b.hi	41ff00 <nftw@plt+0x1d380>  // b.pmore
  41fec4:	cmp	w1, #0xff
  41fec8:	b.ls	41eaac <nftw@plt+0x1bf2c>  // b.plast
  41fecc:	b	41ebe4 <nftw@plt+0x1c064>
  41fed0:	cmp	w1, #0x227
  41fed4:	b.hi	41ff10 <nftw@plt+0x1d390>  // b.pmore
  41fed8:	cmp	w1, #0x1f9
  41fedc:	b.ls	41eaac <nftw@plt+0x1bf2c>  // b.plast
  41fee0:	sub	w1, w1, #0x1fa
  41fee4:	mov	x0, #0x1                   	// #1
  41fee8:	mov	x2, #0x3c3                 	// #963
  41feec:	movk	x2, #0x3000, lsl #32
  41fef0:	lsl	x1, x0, x1
  41fef4:	tst	x1, x2
  41fef8:	b.eq	41eaac <nftw@plt+0x1bf2c>  // b.none
  41fefc:	b	41ebe4 <nftw@plt+0x1c064>
  41ff00:	sub	w1, w1, #0x1cd
  41ff04:	cmp	w1, #0x1
  41ff08:	b.hi	41eaac <nftw@plt+0x1bf2c>  // b.pmore
  41ff0c:	b	41ebe4 <nftw@plt+0x1c064>
  41ff10:	mov	w0, #0x1eab                	// #7851
  41ff14:	cmp	w1, w0
  41ff18:	b.hi	420124 <nftw@plt+0x1d5a4>  // b.pmore
  41ff1c:	mov	w0, #0x1ea1                	// #7841
  41ff20:	cmp	w1, w0
  41ff24:	b.ls	41eaac <nftw@plt+0x1bf2c>  // b.plast
  41ff28:	b	41ebe4 <nftw@plt+0x1c064>
  41ff2c:	sub	w2, w1, #0xc8
  41ff30:	cmp	w2, #0x27
  41ff34:	b.hi	41eaac <nftw@plt+0x1bf2c>  // b.pmore
  41ff38:	mov	x1, #0x1                   	// #1
  41ff3c:	mov	x0, #0xff000000ff          	// #1095216660735
  41ff40:	movk	x0, #0x1e, lsl #16
  41ff44:	lsl	x1, x1, x2
  41ff48:	tst	x1, x0
  41ff4c:	b.ne	41ebe4 <nftw@plt+0x1c064>  // b.any
  41ff50:	b	41eaac <nftw@plt+0x1bf2c>
  41ff54:	mov	w0, #0x1e17                	// #7703
  41ff58:	cmp	w1, w0
  41ff5c:	b.hi	420010 <nftw@plt+0x1d490>  // b.pmore
  41ff60:	mov	w0, #0x1e13                	// #7699
  41ff64:	cmp	w1, w0
  41ff68:	b.hi	41ebe4 <nftw@plt+0x1c064>  // b.pmore
  41ff6c:	cmp	w1, #0x1dc
  41ff70:	b.hi	41fffc <nftw@plt+0x1d47c>  // b.pmore
  41ff74:	cmp	w1, #0x1d2
  41ff78:	b.hi	41ebe4 <nftw@plt+0x1c064>  // b.pmore
  41ff7c:	cmp	w1, #0x171
  41ff80:	b.hi	41ffc4 <nftw@plt+0x1d444>  // b.pmore
  41ff84:	cmp	w1, #0x167
  41ff88:	b.ls	41eaac <nftw@plt+0x1bf2c>  // b.plast
  41ff8c:	b	41ebe4 <nftw@plt+0x1c064>
  41ff90:	mov	w0, #0x1e97                	// #7831
  41ff94:	cmp	w1, w0
  41ff98:	b.hi	41ffe8 <nftw@plt+0x1d468>  // b.pmore
  41ff9c:	mov	w0, #0x1e95                	// #7829
  41ffa0:	cmp	w1, w0
  41ffa4:	b.hi	41ebe4 <nftw@plt+0x1c064>  // b.pmore
  41ffa8:	mov	w0, #0x1e4b                	// #7755
  41ffac:	cmp	w1, w0
  41ffb0:	b.hi	41ffd4 <nftw@plt+0x1d454>  // b.pmore
  41ffb4:	mov	w0, #0x1e43                	// #7747
  41ffb8:	cmp	w1, w0
  41ffbc:	b.ls	41eaac <nftw@plt+0x1bf2c>  // b.plast
  41ffc0:	b	41ebe4 <nftw@plt+0x1c064>
  41ffc4:	sub	w1, w1, #0x1cf
  41ffc8:	cmp	w1, #0x1
  41ffcc:	b.hi	41eaac <nftw@plt+0x1bf2c>  // b.pmore
  41ffd0:	b	41ebe4 <nftw@plt+0x1c064>
  41ffd4:	mov	w28, #0xffffe1a8            	// #-7768
  41ffd8:	add	w1, w1, w28
  41ffdc:	cmp	w1, #0x19
  41ffe0:	b.hi	41eaac <nftw@plt+0x1bf2c>  // b.pmore
  41ffe4:	b	41ebe4 <nftw@plt+0x1c064>
  41ffe8:	mov	w20, #0xffffe148            	// #-7864
  41ffec:	add	w1, w1, w20
  41fff0:	cmp	w1, #0xf
  41fff4:	b.hi	41eaac <nftw@plt+0x1bf2c>  // b.pmore
  41fff8:	b	41ebe4 <nftw@plt+0x1c064>
  41fffc:	cmp	w1, #0x20b
  420000:	b.hi	420114 <nftw@plt+0x1d594>  // b.pmore
  420004:	cmp	w1, #0x203
  420008:	b.ls	41eaac <nftw@plt+0x1bf2c>  // b.plast
  42000c:	b	41ebe4 <nftw@plt+0x1c064>
  420010:	mov	w0, #0x1ee7                	// #7911
  420014:	cmp	w1, w0
  420018:	b.hi	41eaac <nftw@plt+0x1bf2c>  // b.pmore
  42001c:	mov	w0, #0x1eb9                	// #7865
  420020:	cmp	w1, w0
  420024:	b.hi	420044 <nftw@plt+0x1d4c4>  // b.pmore
  420028:	mov	w0, #0x1e2f                	// #7727
  42002c:	cmp	w1, w0
  420030:	b.hi	420144 <nftw@plt+0x1d5c4>  // b.pmore
  420034:	mov	w0, #0x1e2d                	// #7725
  420038:	cmp	w1, w0
  42003c:	b.ls	41eaac <nftw@plt+0x1bf2c>  // b.plast
  420040:	b	41ebe4 <nftw@plt+0x1c064>
  420044:	mov	w12, #0xffffe146            	// #-7866
  420048:	add	w1, w1, w12
  42004c:	mov	x0, #0x1                   	// #1
  420050:	mov	x2, #0xcfff                	// #53247
  420054:	movk	x2, #0x3000, lsl #32
  420058:	lsl	x1, x0, x1
  42005c:	tst	x1, x2
  420060:	b.eq	41eaac <nftw@plt+0x1bf2c>  // b.none
  420064:	b	41ebe4 <nftw@plt+0x1c064>
  420068:	mov	w0, #0x1e45                	// #7749
  42006c:	cmp	w1, w0
  420070:	b.hi	4200d4 <nftw@plt+0x1d554>  // b.pmore
  420074:	mov	w0, #0x1e09                	// #7689
  420078:	cmp	w1, w0
  42007c:	b.hi	4200b0 <nftw@plt+0x1d530>  // b.pmore
  420080:	cmp	w1, #0x1dc
  420084:	b.ls	420138 <nftw@plt+0x1d5b8>  // b.plast
  420088:	sub	w2, w1, #0x1f8
  42008c:	cmp	w2, #0x1f
  420090:	b.hi	41eaac <nftw@plt+0x1bf2c>  // b.pmore
  420094:	mov	x1, #0x1                   	// #1
  420098:	mov	x0, #0xf003                	// #61443
  42009c:	movk	x0, #0xf000, lsl #16
  4200a0:	lsl	x1, x1, x2
  4200a4:	tst	x1, x0
  4200a8:	b.eq	41eaac <nftw@plt+0x1bf2c>  // b.none
  4200ac:	b	41ebe4 <nftw@plt+0x1c064>
  4200b0:	mov	w15, #0xffffe1f6            	// #-7690
  4200b4:	add	w1, w1, w15
  4200b8:	mov	x0, #0x1                   	// #1
  4200bc:	mov	x2, #0x3c03                	// #15363
  4200c0:	movk	x2, #0xc00, lsl #48
  4200c4:	lsl	x1, x0, x1
  4200c8:	tst	x1, x2
  4200cc:	b.eq	41eaac <nftw@plt+0x1bf2c>  // b.none
  4200d0:	b	41ebe4 <nftw@plt+0x1c064>
  4200d4:	mov	w0, #0x1e97                	// #7831
  4200d8:	cmp	w1, w0
  4200dc:	b.hi	420158 <nftw@plt+0x1d5d8>  // b.pmore
  4200e0:	mov	w0, #0x1e69                	// #7785
  4200e4:	cmp	w1, w0
  4200e8:	b.ls	41eaac <nftw@plt+0x1bf2c>  // b.plast
  4200ec:	mov	w16, #0xffffe196            	// #-7786
  4200f0:	mov	x2, #0xc003                	// #49155
  4200f4:	add	w1, w1, w16
  4200f8:	mov	x0, #0x1                   	// #1
  4200fc:	movk	x2, #0x3, lsl #16
  420100:	movk	x2, #0x2000, lsl #32
  420104:	lsl	x1, x0, x1
  420108:	tst	x1, x2
  42010c:	b.eq	41eaac <nftw@plt+0x1bf2c>  // b.none
  420110:	b	41ebe4 <nftw@plt+0x1c064>
  420114:	sub	w1, w1, #0x214
  420118:	cmp	w1, #0x3
  42011c:	b.hi	41eaac <nftw@plt+0x1bf2c>  // b.pmore
  420120:	b	41ebe4 <nftw@plt+0x1c064>
  420124:	mov	w2, #0xffffe152            	// #-7854
  420128:	add	w1, w1, w2
  42012c:	cmp	w1, #0x7
  420130:	b.hi	41eaac <nftw@plt+0x1bf2c>  // b.pmore
  420134:	b	41ebe4 <nftw@plt+0x1c064>
  420138:	cmp	w1, #0x1d2
  42013c:	b.ls	41eaac <nftw@plt+0x1bf2c>  // b.plast
  420140:	b	41ebe4 <nftw@plt+0x1c064>
  420144:	mov	w11, #0xffffe188            	// #-7800
  420148:	add	w1, w1, w11
  42014c:	cmp	w1, #0x3
  420150:	b.hi	41eaac <nftw@plt+0x1bf2c>  // b.pmore
  420154:	b	41ebe4 <nftw@plt+0x1c064>
  420158:	mov	w0, #0x1ec5                	// #7877
  42015c:	cmp	w1, w0
  420160:	b.hi	4202a4 <nftw@plt+0x1d724>  // b.pmore
  420164:	mov	w0, #0x1eb9                	// #7865
  420168:	cmp	w1, w0
  42016c:	b.ls	41eaac <nftw@plt+0x1bf2c>  // b.plast
  420170:	b	41ebe4 <nftw@plt+0x1c064>
  420174:	mov	w0, #0x1f7c                	// #8060
  420178:	cmp	w1, w0
  42017c:	b.eq	41ebe4 <nftw@plt+0x1c064>  // b.none
  420180:	b.hi	4202ec <nftw@plt+0x1d76c>  // b.pmore
  420184:	mov	w0, #0x1f70                	// #8048
  420188:	cmp	w1, w0
  42018c:	b.hi	4202dc <nftw@plt+0x1d75c>  // b.pmore
  420190:	mov	w0, #0x1f5f                	// #8031
  420194:	cmp	w1, w0
  420198:	b.hi	41ebe4 <nftw@plt+0x1c064>  // b.pmore
  42019c:	mov	w0, #0x1f0f                	// #7951
  4201a0:	cmp	w1, w0
  4201a4:	b.hi	4202c8 <nftw@plt+0x1d748>  // b.pmore
  4201a8:	mov	w0, #0x1eff                	// #7935
  4201ac:	cmp	w1, w0
  4201b0:	b.ls	41eaac <nftw@plt+0x1bf2c>  // b.plast
  4201b4:	b	41ebe4 <nftw@plt+0x1c064>
  4201b8:	cmp	w1, #0x1a1
  4201bc:	b.hi	420214 <nftw@plt+0x1d694>  // b.pmore
  4201c0:	cmp	w1, #0x19f
  4201c4:	b.hi	41ebe4 <nftw@plt+0x1c064>  // b.pmore
  4201c8:	sub	w1, w1, #0x14c
  4201cc:	cmp	w1, #0x1
  4201d0:	b.hi	41eaac <nftw@plt+0x1bf2c>  // b.pmore
  4201d4:	b	41ebe4 <nftw@plt+0x1c064>
  4201d8:	mov	w0, #0xffffe1a0            	// #-7776
  4201dc:	add	w2, w1, w0
  4201e0:	cmp	w2, #0x37
  4201e4:	b.hi	41eaac <nftw@plt+0x1bf2c>  // b.pmore
  4201e8:	mov	x1, #0x1                   	// #1
  4201ec:	mov	x0, #0xcf3                 	// #3315
  4201f0:	movk	x0, #0x80, lsl #48
  4201f4:	lsl	x1, x1, x2
  4201f8:	tst	x1, x0
  4201fc:	b.eq	41eaac <nftw@plt+0x1bf2c>  // b.none
  420200:	b	41ebe4 <nftw@plt+0x1c064>
  420204:	sub	w1, w1, #0x4e8
  420208:	cmp	w1, #0x1
  42020c:	b.hi	41eaac <nftw@plt+0x1bf2c>  // b.pmore
  420210:	b	41ebe4 <nftw@plt+0x1c064>
  420214:	sub	w1, w1, #0x1af
  420218:	cmp	w1, #0x1
  42021c:	b.hi	41eaac <nftw@plt+0x1bf2c>  // b.pmore
  420220:	b	41ebe4 <nftw@plt+0x1c064>
  420224:	cmp	w1, #0x1b7
  420228:	b.eq	41ebe4 <nftw@plt+0x1c064>  // b.none
  42022c:	b.ls	420264 <nftw@plt+0x1d6e4>  // b.plast
  420230:	cmp	w1, #0x292
  420234:	b.ne	41eaac <nftw@plt+0x1bf2c>  // b.any
  420238:	b	41ebe4 <nftw@plt+0x1c064>
  42023c:	sub	w2, w1, #0x6c1
  420240:	cmp	w2, #0x14
  420244:	b.hi	41eaac <nftw@plt+0x1bf2c>  // b.pmore
  420248:	mov	x1, #0x1                   	// #1
  42024c:	mov	x0, #0x1                   	// #1
  420250:	movk	x0, #0x12, lsl #16
  420254:	lsl	x1, x1, x2
  420258:	tst	x1, x0
  42025c:	b.eq	41eaac <nftw@plt+0x1bf2c>  // b.none
  420260:	b	41ebe4 <nftw@plt+0x1c064>
  420264:	and	w1, w1, #0xffffffdf
  420268:	cmp	w1, #0xdc
  42026c:	b.ne	41eaac <nftw@plt+0x1bf2c>  // b.any
  420270:	b	41ebe4 <nftw@plt+0x1c064>
  420274:	mov	w12, #0xffffe160            	// #-7840
  420278:	add	w2, w1, w12
  42027c:	cmp	w2, #0x2d
  420280:	b.hi	41eaac <nftw@plt+0x1bf2c>  // b.pmore
  420284:	mov	x0, #0x3                   	// #3
  420288:	mov	x1, #0x1                   	// #1
  42028c:	movk	x0, #0x300, lsl #16
  420290:	lsl	x1, x1, x2
  420294:	movk	x0, #0x3000, lsl #32
  420298:	tst	x1, x0
  42029c:	b.eq	41eaac <nftw@plt+0x1bf2c>  // b.none
  4202a0:	b	41ebe4 <nftw@plt+0x1c064>
  4202a4:	mov	w14, #0xffffe11a            	// #-7910
  4202a8:	add	w1, w1, w14
  4202ac:	cmp	w1, #0x1
  4202b0:	b.hi	41eaac <nftw@plt+0x1bf2c>  // b.pmore
  4202b4:	b	41ebe4 <nftw@plt+0x1c064>
  4202b8:	sub	w1, w1, #0x73
  4202bc:	cmp	w1, #0x1
  4202c0:	b.hi	41eaac <nftw@plt+0x1bf2c>  // b.pmore
  4202c4:	b	41ebe4 <nftw@plt+0x1c064>
  4202c8:	mov	w6, #0xffffe0e0            	// #-7968
  4202cc:	add	w1, w1, w6
  4202d0:	cmp	w1, #0xf
  4202d4:	b.hi	41eaac <nftw@plt+0x1bf2c>  // b.pmore
  4202d8:	b	41ebe4 <nftw@plt+0x1c064>
  4202dc:	mov	w0, #0x1f74                	// #8052
  4202e0:	cmp	w1, w0
  4202e4:	b.ne	41eaac <nftw@plt+0x1bf2c>  // b.any
  4202e8:	b	41ebe4 <nftw@plt+0x1c064>
  4202ec:	mov	w0, #0x1fc6                	// #8134
  4202f0:	cmp	w1, w0
  4202f4:	b.eq	41ebe4 <nftw@plt+0x1c064>  // b.none
  4202f8:	and	w1, w1, #0xffffffbf
  4202fc:	mov	w0, #0x1fb6                	// #8118
  420300:	cmp	w1, w0
  420304:	b.ne	41eaac <nftw@plt+0x1bf2c>  // b.any
  420308:	b	41ebe4 <nftw@plt+0x1c064>
  42030c:	nop
  420310:	stp	x29, x30, [sp, #-320]!
  420314:	cmp	w4, #0x3f
  420318:	mov	x29, sp
  42031c:	stp	x25, x26, [sp, #64]
  420320:	mov	x25, x1
  420324:	mov	x26, x6
  420328:	stp	x0, x3, [sp, #120]
  42032c:	stp	x5, x2, [sp, #184]
  420330:	b.eq	4212f4 <nftw@plt+0x1e774>  // b.none
  420334:	b.hi	421018 <nftw@plt+0x1e498>  // b.pmore
  420338:	cmp	w4, #0x3b
  42033c:	b.eq	4212d4 <nftw@plt+0x1e754>  // b.none
  420340:	b.hi	420ff0 <nftw@plt+0x1e470>  // b.pmore
  420344:	cmp	w4, #0x39
  420348:	b.eq	4212f4 <nftw@plt+0x1e774>  // b.none
  42034c:	cmp	w4, #0x3a
  420350:	b.ne	421030 <nftw@plt+0x1e4b0>  // b.any
  420354:	ldr	x0, [sp, #120]
  420358:	ldr	x1, [x0, #568]
  42035c:	str	x1, [sp, #104]
  420360:	ldr	x1, [x0, #576]
  420364:	str	x1, [sp, #112]
  420368:	ldr	w0, [x0, #584]
  42036c:	str	w0, [sp, #200]
  420370:	ldr	x0, [sp, #184]
  420374:	cmp	x26, #0x0
  420378:	cset	w1, ne  // ne = any
  42037c:	stp	x19, x20, [sp, #16]
  420380:	cmp	x0, #0x0
  420384:	str	w1, [sp, #156]
  420388:	cset	w0, ne  // ne = any
  42038c:	cmp	w0, w1
  420390:	b.ne	421430 <nftw@plt+0x1e8b0>  // b.any
  420394:	ldr	x0, [sp, #128]
  420398:	stp	x27, x28, [sp, #80]
  42039c:	cbz	x0, 42128c <nftw@plt+0x1e70c>
  4203a0:	ldr	w0, [x25]
  4203a4:	mov	w1, #0x100                 	// #256
  4203a8:	cmp	w0, w1
  4203ac:	csel	w0, w0, w1, cs  // cs = hs, nlast
  4203b0:	str	x0, [sp, #272]
  4203b4:	bl	461560 <_obstack_memory_used@@Base+0x118>
  4203b8:	str	x0, [sp, #264]
  4203bc:	ldr	x0, [sp, #192]
  4203c0:	str	xzr, [sp, #280]
  4203c4:	cbz	x0, 421454 <nftw@plt+0x1e8d4>
  4203c8:	ldr	x0, [sp, #128]
  4203cc:	mov	x27, #0x0                   	// #0
  4203d0:	mov	x28, x27
  4203d4:	stp	x21, x22, [sp, #32]
  4203d8:	cmp	x0, #0x0
  4203dc:	add	x0, sp, #0x108
  4203e0:	stp	x23, x24, [sp, #48]
  4203e4:	mov	x1, x0
  4203e8:	csel	x20, x0, xzr, ne  // ne = any
  4203ec:	ldrsw	x0, [sp, #200]
  4203f0:	str	x1, [sp, #136]
  4203f4:	mov	x1, #0x20                  	// #32
  4203f8:	cmp	x0, #0x20
  4203fc:	stp	x25, xzr, [sp, #160]
  420400:	csel	x0, x0, x1, ls  // ls = plast
  420404:	mov	x1, #0x1                   	// #1
  420408:	lsl	x0, x1, x0
  42040c:	sub	x0, x0, #0x1
  420410:	str	x0, [sp, #176]
  420414:	str	w0, [sp, #216]
  420418:	add	x0, sp, #0xf5
  42041c:	str	x0, [sp, #208]
  420420:	ldr	x0, [sp, #160]
  420424:	ldr	x1, [sp, #184]
  420428:	ldr	x8, [x0, #8]
  42042c:	ldrb	w0, [x8]
  420430:	cmp	w0, #0x75
  420434:	cbz	x1, 420f1c <nftw@plt+0x1e39c>
  420438:	ldr	x2, [sp, #168]
  42043c:	add	x28, x1, x2, lsl #4
  420440:	b.eq	421050 <nftw@plt+0x1e4d0>  // b.none
  420444:	cmp	w0, #0x55
  420448:	mov	w1, #0x4c                  	// #76
  42044c:	mov	x2, x8
  420450:	ccmp	w0, w1, #0x4, ne  // ne = any
  420454:	b.ne	420460 <nftw@plt+0x1d8e0>  // b.any
  420458:	ldrb	w0, [x8, #1]
  42045c:	add	x2, x8, #0x1
  420460:	cmp	w0, #0x52
  420464:	b.eq	420764 <nftw@plt+0x1dbe4>  // b.none
  420468:	cmp	w0, #0x22
  42046c:	cset	w25, ne  // ne = any
  420470:	cmp	w0, #0x27
  420474:	csel	w0, w25, wzr, ne  // ne = any
  420478:	str	w0, [sp, #152]
  42047c:	cbnz	w0, 4213a4 <nftw@plt+0x1e824>
  420480:	add	x25, x2, #0x1
  420484:	cbz	x28, 4204ac <nftw@plt+0x1d92c>
  420488:	ldr	w0, [x28]
  42048c:	mov	w2, #0x1                   	// #1
  420490:	str	w2, [sp, #152]
  420494:	mov	w1, #0x60000000            	// #1610612736
  420498:	cmp	w0, w1
  42049c:	b.hi	4204ac <nftw@plt+0x1d92c>  // b.pmore
  4204a0:	ldr	w1, [x28, #4]
  4204a4:	add	w0, w1, w0
  4204a8:	str	w0, [x28]
  4204ac:	ldr	x0, [sp, #160]
  4204b0:	adrp	x1, 41d000 <nftw@plt+0x1a480>
  4204b4:	add	x1, x1, #0x8
  4204b8:	str	x1, [sp, #144]
  4204bc:	ldr	w0, [x0]
  4204c0:	sub	x0, x0, #0x1
  4204c4:	add	x24, x8, x0
  4204c8:	cmp	x25, x24
  4204cc:	b.cs	4205e0 <nftw@plt+0x1da60>  // b.hs, b.nlast
  4204d0:	mov	x21, x25
  4204d4:	b	4204e4 <nftw@plt+0x1d964>
  4204d8:	add	x21, x21, #0x1
  4204dc:	cmp	x24, x21
  4204e0:	b.eq	4206b0 <nftw@plt+0x1db30>  // b.none
  4204e4:	ldrb	w0, [x21]
  4204e8:	cmp	w0, #0x5c
  4204ec:	b.ne	4204d8 <nftw@plt+0x1d958>  // b.any
  4204f0:	cmp	x21, x25
  4204f4:	b.hi	4206b4 <nftw@plt+0x1db34>  // b.pmore
  4204f8:	cmp	x21, x24
  4204fc:	b.cs	4205e0 <nftw@plt+0x1da60>  // b.hs, b.nlast
  420500:	add	x25, x21, #0x1
  420504:	cbz	x28, 420528 <nftw@plt+0x1d9a8>
  420508:	ldr	w19, [x28]
  42050c:	mov	w0, #0x60000000            	// #1610612736
  420510:	cmp	w19, w0
  420514:	b.hi	420524 <nftw@plt+0x1d9a4>  // b.pmore
  420518:	ldr	w0, [x28, #4]
  42051c:	add	w0, w0, w19
  420520:	str	w0, [x28]
  420524:	str	w19, [sp, #100]
  420528:	ldrb	w3, [x21, #1]
  42052c:	strb	w3, [sp, #227]
  420530:	sub	w0, w3, #0x22
  420534:	cmp	w0, #0x59
  420538:	b.ls	4208c0 <nftw@plt+0x1dd40>  // b.plast
  42053c:	adrp	x0, 481000 <_obstack_memory_used@@Base+0x1fbb8>
  420540:	add	x0, x0, #0xaf0
  420544:	mov	w1, #0xac                  	// #172
  420548:	ldrh	w0, [x0, w3, sxtw #1]
  42054c:	tst	w1, w0
  420550:	b.eq	420a4c <nftw@plt+0x1decc>  // b.none
  420554:	ldr	x0, [sp, #120]
  420558:	adrp	x2, 475000 <_obstack_memory_used@@Base+0x13bb8>
  42055c:	mov	w1, #0x2                   	// #2
  420560:	add	x2, x2, #0x418
  420564:	bl	427178 <nftw@plt+0x245f8>
  420568:	cbz	x20, 420588 <nftw@plt+0x1da08>
  42056c:	ldp	x4, x0, [sp, #104]
  420570:	mov	x3, x20
  420574:	add	x1, sp, #0xe3
  420578:	mov	x2, #0x1                   	// #1
  42057c:	blr	x4
  420580:	tst	w0, #0xff
  420584:	b.eq	420698 <nftw@plt+0x1db18>  // b.none
  420588:	cbz	x28, 4205d4 <nftw@plt+0x1da54>
  42058c:	ldr	w25, [x28]
  420590:	mov	w0, #0x60000000            	// #1610612736
  420594:	cmp	w25, w0
  420598:	b.hi	4205a8 <nftw@plt+0x1da28>  // b.pmore
  42059c:	ldr	w0, [x28, #4]
  4205a0:	add	w0, w0, w25
  4205a4:	str	w0, [x28]
  4205a8:	ldp	w2, w1, [x26, #8]
  4205ac:	ldr	x0, [x26]
  4205b0:	cmp	w2, w1
  4205b4:	b.ge	420e04 <nftw@plt+0x1e284>  // b.tcont
  4205b8:	sbfiz	x1, x2, #3, #32
  4205bc:	add	w2, w2, #0x1
  4205c0:	add	x3, x0, x1
  4205c4:	str	w2, [x26, #8]
  4205c8:	ldr	w2, [sp, #100]
  4205cc:	str	w2, [x0, x1]
  4205d0:	str	w25, [x3, #4]
  4205d4:	add	x25, x21, #0x2
  4205d8:	cmp	x25, x24
  4205dc:	b.cc	4204d0 <nftw@plt+0x1d950>  // b.lo, b.ul, b.last
  4205e0:	ldp	x1, x0, [sp, #160]
  4205e4:	add	x1, x1, #0x10
  4205e8:	add	x0, x0, #0x1
  4205ec:	stp	x1, x0, [sp, #160]
  4205f0:	ldr	x1, [sp, #192]
  4205f4:	cmp	x1, x0
  4205f8:	b.ne	420420 <nftw@plt+0x1d8a0>  // b.any
  4205fc:	ldr	x0, [sp, #128]
  420600:	mov	x27, x28
  420604:	ldp	x21, x22, [sp, #32]
  420608:	ldp	x23, x24, [sp, #48]
  42060c:	cbz	x0, 420650 <nftw@plt+0x1dad0>
  420610:	ldr	x1, [sp, #120]
  420614:	mov	w2, #0x0                   	// #0
  420618:	ldr	w4, [sp, #200]
  42061c:	mov	x0, x1
  420620:	add	x1, x1, #0x4da
  420624:	ldr	x3, [sp, #136]
  420628:	ldr	x0, [x0, #1216]
  42062c:	bl	41d088 <nftw@plt+0x1a508>
  420630:	ldr	x0, [sp, #264]
  420634:	ldr	x1, [sp, #280]
  420638:	bl	4615e8 <_obstack_memory_used@@Base+0x1a0>
  42063c:	str	x0, [sp, #264]
  420640:	ldr	x2, [sp, #128]
  420644:	ldr	x1, [sp, #280]
  420648:	str	w1, [x2]
  42064c:	str	x0, [x2, #8]
  420650:	cbz	x27, 421294 <nftw@plt+0x1e714>
  420654:	ldr	w19, [x27]
  420658:	mov	w0, #0x60000000            	// #1610612736
  42065c:	cmp	w19, w0
  420660:	b.hi	420670 <nftw@plt+0x1daf0>  // b.pmore
  420664:	ldr	w0, [x27, #4]
  420668:	add	w0, w0, w19
  42066c:	str	w0, [x27]
  420670:	ldp	w2, w1, [x26, #8]
  420674:	ldr	x0, [x26]
  420678:	cmp	w2, w1
  42067c:	b.ge	4213e4 <nftw@plt+0x1e864>  // b.tcont
  420680:	dup	v0.2s, w19
  420684:	add	w1, w2, #0x1
  420688:	str	w1, [x26, #8]
  42068c:	mov	w19, #0x1                   	// #1
  420690:	str	d0, [x0, w2, sxtw #3]
  420694:	b	420868 <nftw@plt+0x1dce8>
  420698:	ldr	x0, [sp, #120]
  42069c:	adrp	x2, 475000 <_obstack_memory_used@@Base+0x13bb8>
  4206a0:	mov	w1, #0x3                   	// #3
  4206a4:	add	x2, x2, #0x460
  4206a8:	bl	427990 <nftw@plt+0x24e10>
  4206ac:	b	420588 <nftw@plt+0x1da08>
  4206b0:	mov	x21, x24
  4206b4:	ldr	x0, [sp, #128]
  4206b8:	cbz	x0, 4206d8 <nftw@plt+0x1db58>
  4206bc:	ldp	x4, x0, [sp, #104]
  4206c0:	sub	x2, x21, x25
  4206c4:	ldr	x3, [sp, #136]
  4206c8:	mov	x1, x25
  4206cc:	blr	x4
  4206d0:	tst	w0, #0xff
  4206d4:	b.eq	420840 <nftw@plt+0x1dcc0>  // b.none
  4206d8:	cbz	x28, 420e20 <nftw@plt+0x1e2a0>
  4206dc:	ldr	x0, [sp, #104]
  4206e0:	ldr	x1, [sp, #144]
  4206e4:	cmp	x0, x1
  4206e8:	b.ne	421494 <nftw@plt+0x1e914>  // b.any
  4206ec:	sub	x5, x21, x25
  4206f0:	cmp	w5, #0x0
  4206f4:	mov	w27, w5
  4206f8:	b.le	420754 <nftw@plt+0x1dbd4>
  4206fc:	ldp	w2, w1, [x26, #8]
  420700:	mov	w22, #0x0                   	// #0
  420704:	ldr	x0, [x26]
  420708:	mov	w23, #0x60000000            	// #1610612736
  42070c:	nop
  420710:	ldr	w25, [x28]
  420714:	cmp	w25, w23
  420718:	b.hi	420728 <nftw@plt+0x1dba8>  // b.pmore
  42071c:	ldr	w3, [x28, #4]
  420720:	add	w3, w3, w25
  420724:	str	w3, [x28]
  420728:	cmp	w1, w2
  42072c:	b.le	420880 <nftw@plt+0x1dd00>
  420730:	dup	v0.2s, w25
  420734:	add	w3, w2, #0x1
  420738:	str	w3, [x26, #8]
  42073c:	add	w22, w22, #0x1
  420740:	cmp	w27, w22
  420744:	str	d0, [x0, w2, sxtw #3]
  420748:	b.eq	420754 <nftw@plt+0x1dbd4>  // b.none
  42074c:	mov	w2, w3
  420750:	b	420710 <nftw@plt+0x1db90>
  420754:	cmp	x24, x21
  420758:	b.ls	4205e0 <nftw@plt+0x1da60>  // b.plast
  42075c:	add	x25, x21, #0x1
  420760:	b	420508 <nftw@plt+0x1d988>
  420764:	add	x2, x2, #0x2
  420768:	cbz	x28, 421318 <nftw@plt+0x1e798>
  42076c:	ldr	w0, [x28]
  420770:	mov	w3, #0x60000000            	// #1610612736
  420774:	cmp	w0, w3
  420778:	b.hi	420794 <nftw@plt+0x1dc14>  // b.pmore
  42077c:	ldr	w1, [x28, #4]
  420780:	add	w0, w0, w1
  420784:	cmp	w0, w3
  420788:	b.hi	420790 <nftw@plt+0x1dc10>  // b.pmore
  42078c:	add	w0, w0, w1
  420790:	str	w0, [x28]
  420794:	ldrb	w1, [x2]
  420798:	cmp	w1, #0x28
  42079c:	b.eq	4213d4 <nftw@plt+0x1e854>  // b.none
  4207a0:	ldr	w0, [x28]
  4207a4:	mov	x3, x2
  4207a8:	mov	w5, #0x60000000            	// #1610612736
  4207ac:	b	4207b4 <nftw@plt+0x1dc34>
  4207b0:	mov	x3, x1
  4207b4:	cmp	w0, w5
  4207b8:	add	x1, x3, #0x1
  4207bc:	b.hi	4207cc <nftw@plt+0x1dc4c>  // b.pmore
  4207c0:	ldr	w4, [x28, #4]
  4207c4:	add	w0, w4, w0
  4207c8:	str	w0, [x28]
  4207cc:	ldrb	w4, [x3, #1]
  4207d0:	cmp	w4, #0x28
  4207d4:	b.ne	4207b0 <nftw@plt+0x1dc30>  // b.any
  4207d8:	add	x27, x3, #0x2
  4207dc:	sub	x2, x27, x2
  4207e0:	add	x3, x2, #0x1
  4207e4:	mov	w1, #0x60000000            	// #1610612736
  4207e8:	cmp	w0, w1
  4207ec:	b.hi	4207fc <nftw@plt+0x1dc7c>  // b.pmore
  4207f0:	ldr	w1, [x28, #4]
  4207f4:	add	w0, w1, w0
  4207f8:	str	w0, [x28]
  4207fc:	ldr	x0, [sp, #160]
  420800:	add	x3, x27, x3
  420804:	mvn	x2, x2
  420808:	ldr	w25, [x0]
  42080c:	add	x25, x8, x25
  420810:	add	x0, x25, x2
  420814:	cmp	x25, x3
  420818:	csel	x25, x0, x25, cs  // cs = hs, nlast
  42081c:	ldr	x0, [sp, #128]
  420820:	cbz	x0, 4211d0 <nftw@plt+0x1e650>
  420824:	ldp	x4, x0, [sp, #104]
  420828:	sub	x2, x25, x27
  42082c:	ldr	x3, [sp, #136]
  420830:	mov	x1, x27
  420834:	blr	x4
  420838:	tst	w0, #0xff
  42083c:	b.ne	4211d0 <nftw@plt+0x1e650>  // b.any
  420840:	ldr	x0, [sp, #120]
  420844:	adrp	x2, 474000 <_obstack_memory_used@@Base+0x12bb8>
  420848:	mov	w1, #0x3                   	// #3
  42084c:	add	x2, x2, #0xfd8
  420850:	mov	w19, #0x0                   	// #0
  420854:	bl	427990 <nftw@plt+0x24e10>
  420858:	ldr	x0, [sp, #264]
  42085c:	bl	402910 <free@plt>
  420860:	ldp	x21, x22, [sp, #32]
  420864:	ldp	x23, x24, [sp, #48]
  420868:	mov	w0, w19
  42086c:	ldp	x19, x20, [sp, #16]
  420870:	ldp	x25, x26, [sp, #64]
  420874:	ldp	x27, x28, [sp, #80]
  420878:	ldp	x29, x30, [sp], #320
  42087c:	ret
  420880:	lsl	w1, w1, #1
  420884:	str	w1, [x26, #12]
  420888:	add	w22, w22, #0x1
  42088c:	sbfiz	x1, x1, #3, #32
  420890:	bl	4615e8 <_obstack_memory_used@@Base+0x1a0>
  420894:	ldr	w1, [x26, #8]
  420898:	dup	v0.2s, w25
  42089c:	str	x0, [x26]
  4208a0:	cmp	w27, w22
  4208a4:	add	w3, w1, #0x1
  4208a8:	str	w3, [x26, #8]
  4208ac:	str	d0, [x0, w1, sxtw #3]
  4208b0:	b.eq	420754 <nftw@plt+0x1dbd4>  // b.none
  4208b4:	ldr	w1, [x26, #12]
  4208b8:	mov	w2, w3
  4208bc:	b	420710 <nftw@plt+0x1db90>
  4208c0:	adrp	x1, 477000 <_obstack_memory_used@@Base+0x15bb8>
  4208c4:	add	x1, x1, #0x514
  4208c8:	ldrh	w0, [x1, w0, uxtw #1]
  4208cc:	adr	x1, 4208d8 <nftw@plt+0x1dd58>
  4208d0:	add	x0, x1, w0, sxth #2
  4208d4:	br	x0
  4208d8:	ldp	w1, w0, [sp, #152]
  4208dc:	cmp	w0, w1
  4208e0:	b.ne	421418 <nftw@plt+0x1e898>  // b.any
  4208e4:	cmp	x24, x25
  4208e8:	b.ls	421368 <nftw@plt+0x1e7e8>  // b.plast
  4208ec:	sub	w3, w3, #0x30
  4208f0:	add	x25, x21, #0x2
  4208f4:	cbz	x28, 420914 <nftw@plt+0x1dd94>
  4208f8:	ldr	w19, [x28]
  4208fc:	mov	w0, #0x60000000            	// #1610612736
  420900:	cmp	w19, w0
  420904:	b.hi	420914 <nftw@plt+0x1dd94>  // b.pmore
  420908:	ldr	w0, [x28, #4]
  42090c:	add	w0, w0, w19
  420910:	str	w0, [x28]
  420914:	cmp	x24, x25
  420918:	b.ls	420994 <nftw@plt+0x1de14>  // b.plast
  42091c:	ldrb	w0, [x21, #2]
  420920:	sub	w0, w0, #0x30
  420924:	cmp	w0, #0x7
  420928:	b.hi	420994 <nftw@plt+0x1de14>  // b.pmore
  42092c:	add	x25, x21, #0x3
  420930:	cbz	x28, 420950 <nftw@plt+0x1ddd0>
  420934:	ldr	w19, [x28]
  420938:	mov	w1, #0x60000000            	// #1610612736
  42093c:	cmp	w19, w1
  420940:	b.hi	420950 <nftw@plt+0x1ddd0>  // b.pmore
  420944:	ldr	w1, [x28, #4]
  420948:	add	w1, w1, w19
  42094c:	str	w1, [x28]
  420950:	add	w3, w0, w3, lsl #3
  420954:	cmp	x24, x25
  420958:	b.ls	420994 <nftw@plt+0x1de14>  // b.plast
  42095c:	ldrb	w0, [x21, #3]
  420960:	sub	w0, w0, #0x30
  420964:	cmp	w0, #0x7
  420968:	b.hi	420994 <nftw@plt+0x1de14>  // b.pmore
  42096c:	add	x25, x21, #0x4
  420970:	cbz	x28, 420990 <nftw@plt+0x1de10>
  420974:	ldr	w19, [x28]
  420978:	mov	w1, #0x60000000            	// #1610612736
  42097c:	cmp	w19, w1
  420980:	b.hi	420990 <nftw@plt+0x1de10>  // b.pmore
  420984:	ldr	w1, [x28, #4]
  420988:	add	w1, w1, w19
  42098c:	str	w1, [x28]
  420990:	add	w3, w0, w3, lsl #3
  420994:	ldr	w0, [sp, #176]
  420998:	and	w0, w3, w0
  42099c:	cmp	x0, w3, uxtw
  4209a0:	b.eq	4209cc <nftw@plt+0x1de4c>  // b.none
  4209a4:	ldr	w0, [sp, #216]
  4209a8:	adrp	x2, 475000 <_obstack_memory_used@@Base+0x13bb8>
  4209ac:	mov	w1, #0x2                   	// #2
  4209b0:	add	x2, x2, #0x390
  4209b4:	and	w3, w3, w0
  4209b8:	str	w3, [sp, #204]
  4209bc:	ldr	x0, [sp, #120]
  4209c0:	str	w3, [sp, #220]
  4209c4:	bl	427178 <nftw@plt+0x245f8>
  4209c8:	ldr	w3, [sp, #204]
  4209cc:	cbz	x20, 4209f0 <nftw@plt+0x1de70>
  4209d0:	ldr	x1, [sp, #120]
  4209d4:	mov	w2, w3
  4209d8:	ldr	w4, [sp, #200]
  4209dc:	mov	x3, x20
  4209e0:	mov	x0, x1
  4209e4:	add	x1, x1, #0x4da
  4209e8:	ldr	x0, [x0, #1216]
  4209ec:	bl	41d088 <nftw@plt+0x1a508>
  4209f0:	ldr	w0, [sp, #152]
  4209f4:	cbz	w0, 4204c8 <nftw@plt+0x1d948>
  4209f8:	ldp	w2, w1, [x26, #8]
  4209fc:	ldr	x0, [x26]
  420a00:	cmp	w2, w1
  420a04:	b.ge	420f00 <nftw@plt+0x1e380>  // b.tcont
  420a08:	sbfiz	x1, x2, #3, #32
  420a0c:	add	w2, w2, #0x1
  420a10:	add	x3, x0, x1
  420a14:	str	w2, [x26, #8]
  420a18:	ldr	w2, [sp, #100]
  420a1c:	str	w2, [x0, x1]
  420a20:	str	w19, [x3, #4]
  420a24:	b	4204c8 <nftw@plt+0x1d948>
  420a28:	ldr	x0, [sp, #120]
  420a2c:	ldrb	w0, [x0, #1154]
  420a30:	cbz	w0, 420568 <nftw@plt+0x1d9e8>
  420a34:	adrp	x0, 481000 <_obstack_memory_used@@Base+0x1fbb8>
  420a38:	add	x0, x0, #0xaf0
  420a3c:	mov	w1, #0xac                  	// #172
  420a40:	ldrh	w0, [x0, w3, sxtw #1]
  420a44:	tst	w1, w0
  420a48:	b.ne	420554 <nftw@plt+0x1d9d4>  // b.any
  420a4c:	mov	w2, w3
  420a50:	add	x0, sp, #0x120
  420a54:	adrp	x1, 475000 <_obstack_memory_used@@Base+0x13bb8>
  420a58:	add	x1, x1, #0x438
  420a5c:	bl	4025b0 <sprintf@plt>
  420a60:	ldr	x0, [sp, #120]
  420a64:	add	x3, sp, #0x120
  420a68:	adrp	x2, 475000 <_obstack_memory_used@@Base+0x13bb8>
  420a6c:	mov	w1, #0x2                   	// #2
  420a70:	add	x2, x2, #0x440
  420a74:	bl	427178 <nftw@plt+0x245f8>
  420a78:	b	420568 <nftw@plt+0x1d9e8>
  420a7c:	ldp	w1, w0, [sp, #152]
  420a80:	str	x25, [sp, #248]
  420a84:	str	w19, [sp, #260]
  420a88:	cmp	w0, w1
  420a8c:	ldr	w0, [sp, #100]
  420a90:	str	w0, [sp, #256]
  420a94:	str	wzr, [sp, #288]
  420a98:	strb	wzr, [sp, #292]
  420a9c:	str	wzr, [sp, #296]
  420aa0:	b.ne	421400 <nftw@plt+0x1e880>  // b.any
  420aa4:	add	x21, x21, #0x2
  420aa8:	str	x21, [sp, #248]
  420aac:	cbz	x28, 420ad0 <nftw@plt+0x1df50>
  420ab0:	ldr	w0, [x28]
  420ab4:	mov	w1, #0x60000000            	// #1610612736
  420ab8:	cmp	w0, w1
  420abc:	b.hi	420acc <nftw@plt+0x1df4c>  // b.pmore
  420ac0:	ldr	w1, [x28, #4]
  420ac4:	add	w1, w1, w0
  420ac8:	str	w1, [x28]
  420acc:	str	w0, [sp, #260]
  420ad0:	ldr	x0, [sp, #120]
  420ad4:	mov	x7, x28
  420ad8:	add	x6, sp, #0x100
  420adc:	add	x5, sp, #0xe4
  420ae0:	add	x4, sp, #0x120
  420ae4:	mov	x2, x24
  420ae8:	add	x1, sp, #0xf8
  420aec:	mov	w3, #0x0                   	// #0
  420af0:	bl	41e388 <nftw@plt+0x1b808>
  420af4:	ldr	w0, [sp, #228]
  420af8:	cmp	w0, #0x7f
  420afc:	b.ls	420e30 <nftw@plt+0x1e2b0>  // b.plast
  420b00:	and	w1, w0, #0x3f
  420b04:	cmp	w0, #0xfbf
  420b08:	orr	w1, w1, #0xffffff80
  420b0c:	strb	w1, [sp, #245]
  420b10:	lsr	w1, w0, #6
  420b14:	b.hi	420f60 <nftw@plt+0x1e3e0>  // b.pmore
  420b18:	tst	w1, #0xe0
  420b1c:	b.eq	421354 <nftw@plt+0x1e7d4>  // b.none
  420b20:	orr	w1, w1, #0xffffff80
  420b24:	strb	w1, [sp, #244]
  420b28:	mov	w1, #0x0                   	// #0
  420b2c:	orr	w0, w1, #0xffffffe0
  420b30:	mov	x25, #0x3                   	// #3
  420b34:	ldr	x1, [sp, #208]
  420b38:	strb	w0, [sp, #243]
  420b3c:	mov	x21, #0x6                   	// #6
  420b40:	sub	x1, x1, #0x2
  420b44:	sub	x21, x21, x25
  420b48:	add	x0, sp, #0xf6
  420b4c:	add	x2, x1, #0x1
  420b50:	cmp	x0, x2
  420b54:	sub	x0, x0, x1
  420b58:	csinc	x2, x0, xzr, cs  // cs = hs, nlast
  420b5c:	add	x0, sp, #0xe8
  420b60:	bl	402490 <memcpy@plt>
  420b64:	cbz	x20, 420b84 <nftw@plt+0x1e004>
  420b68:	ldp	x4, x0, [sp, #104]
  420b6c:	mov	x2, x25
  420b70:	add	x1, sp, #0xe8
  420b74:	mov	x3, x20
  420b78:	blr	x4
  420b7c:	tst	w0, #0xff
  420b80:	b.eq	420dec <nftw@plt+0x1e26c>  // b.none
  420b84:	cbz	x28, 420c64 <nftw@plt+0x1e0e4>
  420b88:	ldp	w3, w1, [x26, #8]
  420b8c:	mov	w0, #0x6                   	// #6
  420b90:	sub	w21, w0, w21
  420b94:	cmp	w1, w3
  420b98:	ldr	x0, [x26]
  420b9c:	ldr	x25, [sp, #256]
  420ba0:	b.le	421110 <nftw@plt+0x1e590>
  420ba4:	add	w2, w3, #0x1
  420ba8:	str	w2, [x26, #8]
  420bac:	str	x25, [x0, w3, sxtw #3]
  420bb0:	cmp	w21, #0x1
  420bb4:	b.eq	420c64 <nftw@plt+0x1e0e4>  // b.none
  420bb8:	ldr	w1, [x26, #12]
  420bbc:	ldr	x25, [sp, #256]
  420bc0:	cmp	w1, w2
  420bc4:	b.le	42112c <nftw@plt+0x1e5ac>
  420bc8:	add	w3, w2, #0x1
  420bcc:	str	w3, [x26, #8]
  420bd0:	str	x25, [x0, w2, sxtw #3]
  420bd4:	cmp	w21, #0x2
  420bd8:	b.eq	420c64 <nftw@plt+0x1e0e4>  // b.none
  420bdc:	ldr	w1, [x26, #12]
  420be0:	ldr	x25, [sp, #256]
  420be4:	cmp	w1, w3
  420be8:	b.le	421198 <nftw@plt+0x1e618>
  420bec:	add	w2, w3, #0x1
  420bf0:	str	w2, [x26, #8]
  420bf4:	str	x25, [x0, w3, sxtw #3]
  420bf8:	cmp	w21, #0x3
  420bfc:	b.eq	420c64 <nftw@plt+0x1e0e4>  // b.none
  420c00:	ldr	w1, [x26, #12]
  420c04:	ldr	x25, [sp, #256]
  420c08:	cmp	w1, w2
  420c0c:	b.le	4211b4 <nftw@plt+0x1e634>
  420c10:	add	w3, w2, #0x1
  420c14:	str	w3, [x26, #8]
  420c18:	str	x25, [x0, w2, sxtw #3]
  420c1c:	cmp	w21, #0x4
  420c20:	b.eq	420c64 <nftw@plt+0x1e0e4>  // b.none
  420c24:	ldr	w1, [x26, #12]
  420c28:	ldr	x25, [sp, #256]
  420c2c:	cmp	w1, w3
  420c30:	b.le	42129c <nftw@plt+0x1e71c>
  420c34:	add	w2, w3, #0x1
  420c38:	str	w2, [x26, #8]
  420c3c:	str	x25, [x0, w3, sxtw #3]
  420c40:	cmp	w21, #0x5
  420c44:	b.eq	420c64 <nftw@plt+0x1e0e4>  // b.none
  420c48:	ldr	w1, [x26, #12]
  420c4c:	ldr	x21, [sp, #256]
  420c50:	cmp	w1, w2
  420c54:	b.le	4212b8 <nftw@plt+0x1e738>
  420c58:	add	w1, w2, #0x1
  420c5c:	str	w1, [x26, #8]
  420c60:	str	x21, [x0, w2, sxtw #3]
  420c64:	ldr	x25, [sp, #248]
  420c68:	b	4204c8 <nftw@plt+0x1d948>
  420c6c:	ldr	x0, [sp, #120]
  420c70:	ldrb	w0, [x0, #1154]
  420c74:	cbnz	w0, 420ed0 <nftw@plt+0x1e350>
  420c78:	mov	w0, #0x1b                  	// #27
  420c7c:	strb	w0, [sp, #227]
  420c80:	b	420568 <nftw@plt+0x1d9e8>
  420c84:	mov	w0, #0x8                   	// #8
  420c88:	strb	w0, [sp, #227]
  420c8c:	b	420568 <nftw@plt+0x1d9e8>
  420c90:	ldr	x0, [sp, #120]
  420c94:	ldrb	w0, [x0, #1138]
  420c98:	cbnz	w0, 420ee8 <nftw@plt+0x1e368>
  420c9c:	mov	w0, #0x7                   	// #7
  420ca0:	strb	w0, [sp, #227]
  420ca4:	b	420568 <nftw@plt+0x1d9e8>
  420ca8:	ldp	w1, w0, [sp, #152]
  420cac:	cmp	w0, w1
  420cb0:	b.ne	42147c <nftw@plt+0x1e8fc>  // b.any
  420cb4:	ldr	x0, [sp, #120]
  420cb8:	ldrb	w0, [x0, #1138]
  420cbc:	cbnz	w0, 420e4c <nftw@plt+0x1e2cc>
  420cc0:	add	x25, x21, #0x2
  420cc4:	cbz	x28, 420e68 <nftw@plt+0x1e2e8>
  420cc8:	ldr	w19, [x28]
  420ccc:	mov	w0, #0x60000000            	// #1610612736
  420cd0:	cmp	w19, w0
  420cd4:	b.hi	420ce4 <nftw@plt+0x1e164>  // b.pmore
  420cd8:	ldr	w0, [x28, #4]
  420cdc:	add	w0, w0, w19
  420ce0:	str	w0, [x28]
  420ce4:	cmp	x24, x25
  420ce8:	b.ls	420eb8 <nftw@plt+0x1e338>  // b.plast
  420cec:	adrp	x3, 481000 <_obstack_memory_used@@Base+0x1fbb8>
  420cf0:	mov	w2, #0x0                   	// #0
  420cf4:	add	x3, x3, #0x7d0
  420cf8:	mov	w0, #0x0                   	// #0
  420cfc:	mov	w21, #0x0                   	// #0
  420d00:	mov	w4, #0x60000000            	// #1610612736
  420d04:	b	420d3c <nftw@plt+0x1e1bc>
  420d08:	ldr	w19, [x28]
  420d0c:	add	x25, x25, #0x1
  420d10:	cmp	w19, w4
  420d14:	b.hi	420d24 <nftw@plt+0x1e1a4>  // b.pmore
  420d18:	ldr	w2, [x28, #4]
  420d1c:	add	w2, w2, w19
  420d20:	str	w2, [x28]
  420d24:	and	w2, w21, #0xf0000000
  420d28:	cmp	x24, x25
  420d2c:	orr	w0, w0, w2
  420d30:	add	w21, w1, w21, lsl #4
  420d34:	mov	w2, #0x1                   	// #1
  420d38:	b.eq	420e44 <nftw@plt+0x1e2c4>  // b.none
  420d3c:	ldrb	w1, [x25]
  420d40:	ldrb	w1, [x3, w1, sxtw]
  420d44:	cmp	w1, #0x63
  420d48:	b.ne	420d08 <nftw@plt+0x1e188>  // b.any
  420d4c:	cbz	w2, 420eb8 <nftw@plt+0x1e338>
  420d50:	ldr	w1, [sp, #176]
  420d54:	and	w1, w21, w1
  420d58:	cmp	x1, w21, uxtw
  420d5c:	cset	w1, ne  // ne = any
  420d60:	orr	w0, w1, w0
  420d64:	cbnz	w0, 420d90 <nftw@plt+0x1e210>
  420d68:	cbz	x20, 4209f0 <nftw@plt+0x1de70>
  420d6c:	ldr	x1, [sp, #120]
  420d70:	mov	w2, w21
  420d74:	ldr	w4, [sp, #200]
  420d78:	mov	x3, x20
  420d7c:	mov	x0, x1
  420d80:	add	x1, x1, #0x4da
  420d84:	ldr	x0, [x0, #1216]
  420d88:	bl	41d088 <nftw@plt+0x1a508>
  420d8c:	b	4209f0 <nftw@plt+0x1de70>
  420d90:	ldr	w0, [sp, #216]
  420d94:	adrp	x2, 475000 <_obstack_memory_used@@Base+0x13bb8>
  420d98:	mov	w1, #0x2                   	// #2
  420d9c:	add	x2, x2, #0x358
  420da0:	and	w21, w21, w0
  420da4:	ldr	x0, [sp, #120]
  420da8:	bl	427178 <nftw@plt+0x245f8>
  420dac:	b	420d68 <nftw@plt+0x1e1e8>
  420db0:	mov	w0, #0xb                   	// #11
  420db4:	strb	w0, [sp, #227]
  420db8:	b	420568 <nftw@plt+0x1d9e8>
  420dbc:	mov	w0, #0x9                   	// #9
  420dc0:	strb	w0, [sp, #227]
  420dc4:	b	420568 <nftw@plt+0x1d9e8>
  420dc8:	mov	w0, #0xd                   	// #13
  420dcc:	strb	w0, [sp, #227]
  420dd0:	b	420568 <nftw@plt+0x1d9e8>
  420dd4:	mov	w0, #0xa                   	// #10
  420dd8:	strb	w0, [sp, #227]
  420ddc:	b	420568 <nftw@plt+0x1d9e8>
  420de0:	mov	w0, #0xc                   	// #12
  420de4:	strb	w0, [sp, #227]
  420de8:	b	420568 <nftw@plt+0x1d9e8>
  420dec:	ldr	x0, [sp, #120]
  420df0:	adrp	x2, 475000 <_obstack_memory_used@@Base+0x13bb8>
  420df4:	mov	w1, #0x3                   	// #3
  420df8:	add	x2, x2, #0x2b8
  420dfc:	bl	427990 <nftw@plt+0x24e10>
  420e00:	b	420b84 <nftw@plt+0x1e004>
  420e04:	lsl	w1, w1, #1
  420e08:	str	w1, [x26, #12]
  420e0c:	sbfiz	x1, x1, #3, #32
  420e10:	bl	4615e8 <_obstack_memory_used@@Base+0x1a0>
  420e14:	ldr	w2, [x26, #8]
  420e18:	str	x0, [x26]
  420e1c:	b	4205b8 <nftw@plt+0x1da38>
  420e20:	cmp	x24, x21
  420e24:	b.ls	4205e0 <nftw@plt+0x1da60>  // b.plast
  420e28:	add	x25, x21, #0x1
  420e2c:	b	420528 <nftw@plt+0x1d9a8>
  420e30:	mov	x21, #0x5                   	// #5
  420e34:	mov	x25, #0x1                   	// #1
  420e38:	strb	w0, [sp, #245]
  420e3c:	ldr	x1, [sp, #208]
  420e40:	b	420b48 <nftw@plt+0x1dfc8>
  420e44:	mov	x25, x24
  420e48:	b	420d50 <nftw@plt+0x1e1d0>
  420e4c:	ldr	x0, [sp, #120]
  420e50:	adrp	x2, 475000 <_obstack_memory_used@@Base+0x13bb8>
  420e54:	mov	w1, #0x6                   	// #6
  420e58:	add	x2, x2, #0x2f8
  420e5c:	add	x25, x21, #0x2
  420e60:	bl	427298 <nftw@plt+0x24718>
  420e64:	cbnz	x28, 420cc8 <nftw@plt+0x1e148>
  420e68:	cmp	x24, x25
  420e6c:	b.ls	420eb8 <nftw@plt+0x1e338>  // b.plast
  420e70:	adrp	x3, 481000 <_obstack_memory_used@@Base+0x1fbb8>
  420e74:	mov	w2, #0x0                   	// #0
  420e78:	add	x3, x3, #0x7d0
  420e7c:	mov	w0, #0x0                   	// #0
  420e80:	mov	w21, #0x0                   	// #0
  420e84:	b	420ea4 <nftw@plt+0x1e324>
  420e88:	and	w2, w21, #0xf0000000
  420e8c:	add	x25, x25, #0x1
  420e90:	orr	w0, w0, w2
  420e94:	cmp	x24, x25
  420e98:	add	w21, w1, w21, lsl #4
  420e9c:	mov	w2, #0x1                   	// #1
  420ea0:	b.eq	420e44 <nftw@plt+0x1e2c4>  // b.none
  420ea4:	ldrb	w1, [x25]
  420ea8:	ldrb	w1, [x3, w1, sxtw]
  420eac:	cmp	w1, #0x63
  420eb0:	b.ne	420e88 <nftw@plt+0x1e308>  // b.any
  420eb4:	cbnz	w2, 420d50 <nftw@plt+0x1e1d0>
  420eb8:	ldr	x0, [sp, #120]
  420ebc:	adrp	x2, 475000 <_obstack_memory_used@@Base+0x13bb8>
  420ec0:	mov	w1, #0x3                   	// #3
  420ec4:	add	x2, x2, #0x330
  420ec8:	bl	427178 <nftw@plt+0x245f8>
  420ecc:	b	4204c8 <nftw@plt+0x1d948>
  420ed0:	ldr	x0, [sp, #120]
  420ed4:	adrp	x2, 475000 <_obstack_memory_used@@Base+0x13bb8>
  420ed8:	mov	w1, #0x2                   	// #2
  420edc:	add	x2, x2, #0x3f0
  420ee0:	bl	427178 <nftw@plt+0x245f8>
  420ee4:	b	420c78 <nftw@plt+0x1e0f8>
  420ee8:	ldr	x0, [sp, #120]
  420eec:	adrp	x2, 475000 <_obstack_memory_used@@Base+0x13bb8>
  420ef0:	mov	w1, #0x6                   	// #6
  420ef4:	add	x2, x2, #0x3b8
  420ef8:	bl	427298 <nftw@plt+0x24718>
  420efc:	b	420c9c <nftw@plt+0x1e11c>
  420f00:	lsl	w1, w1, #1
  420f04:	str	w1, [x26, #12]
  420f08:	sbfiz	x1, x1, #3, #32
  420f0c:	bl	4615e8 <_obstack_memory_used@@Base+0x1a0>
  420f10:	ldr	w2, [x26, #8]
  420f14:	str	x0, [x26]
  420f18:	b	420a08 <nftw@plt+0x1de88>
  420f1c:	b.ne	420444 <nftw@plt+0x1d8c4>  // b.any
  420f20:	add	x2, x8, #0x1
  420f24:	cbnz	x28, 421054 <nftw@plt+0x1e4d4>
  420f28:	ldrb	w0, [x8, #1]
  420f2c:	cmp	w0, #0x38
  420f30:	b.eq	421378 <nftw@plt+0x1e7f8>  // b.none
  420f34:	add	x2, x8, #0x3
  420f38:	cmp	w0, #0x52
  420f3c:	b.eq	421318 <nftw@plt+0x1e798>  // b.none
  420f40:	cmp	w0, #0x22
  420f44:	cset	w25, ne  // ne = any
  420f48:	cmp	w0, #0x27
  420f4c:	csel	w0, w25, wzr, ne  // ne = any
  420f50:	str	w0, [sp, #152]
  420f54:	cbnz	w0, 4213a4 <nftw@plt+0x1e824>
  420f58:	add	x25, x8, #0x2
  420f5c:	b	4204ac <nftw@plt+0x1d92c>
  420f60:	and	w2, w1, #0x3f
  420f64:	lsr	w1, w0, #12
  420f68:	orr	w2, w2, #0xffffff80
  420f6c:	strb	w2, [sp, #244]
  420f70:	cmp	w1, #0x3e
  420f74:	b.ls	421094 <nftw@plt+0x1e514>  // b.plast
  420f78:	and	w2, w1, #0x3f
  420f7c:	lsr	w1, w0, #18
  420f80:	orr	w2, w2, #0xffffff80
  420f84:	strb	w2, [sp, #243]
  420f88:	cmp	w1, #0x3e
  420f8c:	b.ls	4210bc <nftw@plt+0x1e53c>  // b.plast
  420f90:	and	w2, w1, #0x3f
  420f94:	lsr	w1, w0, #24
  420f98:	orr	w2, w2, #0xffffff80
  420f9c:	strb	w2, [sp, #242]
  420fa0:	cmp	w1, #0x3e
  420fa4:	b.ls	4210e4 <nftw@plt+0x1e564>  // b.plast
  420fa8:	and	w1, w1, #0x3f
  420fac:	lsr	w2, w0, #30
  420fb0:	orr	w1, w1, #0xffffff80
  420fb4:	strb	w1, [sp, #241]
  420fb8:	tbz	w0, #31, 4210fc <nftw@plt+0x1e57c>
  420fbc:	adrp	x0, 47b000 <_obstack_memory_used@@Base+0x19bb8>
  420fc0:	ldrb	w0, [x0, #126]
  420fc4:	strb	w0, [sp, #239]
  420fc8:	bl	402aa0 <__errno_location@plt>
  420fcc:	mov	w3, #0x7                   	// #7
  420fd0:	str	w3, [x0]
  420fd4:	ldr	x0, [sp, #120]
  420fd8:	adrp	x2, 475000 <_obstack_memory_used@@Base+0x13bb8>
  420fdc:	mov	w1, #0x3                   	// #3
  420fe0:	add	x2, x2, #0x290
  420fe4:	bl	427990 <nftw@plt+0x24e10>
  420fe8:	ldr	x25, [sp, #248]
  420fec:	b	4204c8 <nftw@plt+0x1d948>
  420ff0:	cmp	w4, #0x3c
  420ff4:	b.ne	421030 <nftw@plt+0x1e4b0>  // b.any
  420ff8:	ldr	x0, [sp, #120]
  420ffc:	ldr	x1, [x0, #544]
  421000:	str	x1, [sp, #104]
  421004:	ldr	x1, [x0, #552]
  421008:	str	x1, [sp, #112]
  42100c:	ldr	w0, [x0, #560]
  421010:	str	w0, [sp, #200]
  421014:	b	420370 <nftw@plt+0x1d7f0>
  421018:	cmp	w4, #0x41
  42101c:	b.eq	4212d4 <nftw@plt+0x1e754>  // b.none
  421020:	cmp	w4, #0x42
  421024:	b.eq	420ff8 <nftw@plt+0x1e478>  // b.none
  421028:	cmp	w4, #0x40
  42102c:	b.eq	420354 <nftw@plt+0x1d7d4>  // b.none
  421030:	ldr	x0, [sp, #120]
  421034:	ldr	x1, [x0, #520]
  421038:	str	x1, [sp, #104]
  42103c:	ldr	x1, [x0, #528]
  421040:	str	x1, [sp, #112]
  421044:	ldr	w0, [x0, #536]
  421048:	str	w0, [sp, #200]
  42104c:	b	420370 <nftw@plt+0x1d7f0>
  421050:	add	x2, x8, #0x1
  421054:	ldr	w0, [x28]
  421058:	mov	w1, #0x60000000            	// #1610612736
  42105c:	cmp	w0, w1
  421060:	b.ls	421148 <nftw@plt+0x1e5c8>  // b.plast
  421064:	ldrb	w1, [x8, #1]
  421068:	cmp	w1, #0x38
  42106c:	b.eq	42134c <nftw@plt+0x1e7cc>  // b.none
  421070:	ldrb	w1, [x2]
  421074:	cmp	w1, #0x52
  421078:	b.eq	421370 <nftw@plt+0x1e7f0>  // b.none
  42107c:	cmp	w1, #0x27
  421080:	mov	w0, #0x22                  	// #34
  421084:	ccmp	w1, w0, #0x4, ne  // ne = any
  421088:	b.ne	4213a4 <nftw@plt+0x1e824>  // b.any
  42108c:	add	x25, x2, #0x1
  421090:	b	420488 <nftw@plt+0x1d908>
  421094:	tst	w1, #0xf0
  421098:	b.eq	420b2c <nftw@plt+0x1dfac>  // b.none
  42109c:	orr	w1, w1, #0xffffff80
  4210a0:	strb	w1, [sp, #243]
  4210a4:	mov	w1, #0x0                   	// #0
  4210a8:	orr	w0, w1, #0xfffffff0
  4210ac:	mov	x25, #0x4                   	// #4
  4210b0:	add	x1, sp, #0xf4
  4210b4:	strb	w0, [sp, #242]
  4210b8:	b	420b3c <nftw@plt+0x1dfbc>
  4210bc:	tst	w1, #0xf8
  4210c0:	b.eq	4210a8 <nftw@plt+0x1e528>  // b.none
  4210c4:	orr	w1, w1, #0xffffff80
  4210c8:	strb	w1, [sp, #242]
  4210cc:	mov	w1, #0x0                   	// #0
  4210d0:	orr	w0, w1, #0xfffffff8
  4210d4:	mov	x25, #0x5                   	// #5
  4210d8:	add	x1, sp, #0xf3
  4210dc:	strb	w0, [sp, #241]
  4210e0:	b	420b3c <nftw@plt+0x1dfbc>
  4210e4:	tst	w1, #0xfc
  4210e8:	b.eq	4210d0 <nftw@plt+0x1e550>  // b.none
  4210ec:	and	w1, w1, #0x3f
  4210f0:	lsr	w2, w0, #30
  4210f4:	orr	w0, w1, #0xffffff80
  4210f8:	strb	w0, [sp, #241]
  4210fc:	orr	w2, w2, #0xfffffffc
  421100:	add	x1, sp, #0xf2
  421104:	mov	x25, #0x6                   	// #6
  421108:	strb	w2, [sp, #240]
  42110c:	b	420b3c <nftw@plt+0x1dfbc>
  421110:	lsl	w1, w1, #1
  421114:	str	w1, [x26, #12]
  421118:	sbfiz	x1, x1, #3, #32
  42111c:	bl	4615e8 <_obstack_memory_used@@Base+0x1a0>
  421120:	ldr	w3, [x26, #8]
  421124:	str	x0, [x26]
  421128:	b	420ba4 <nftw@plt+0x1e024>
  42112c:	lsl	w1, w1, #1
  421130:	str	w1, [x26, #12]
  421134:	sbfiz	x1, x1, #3, #32
  421138:	bl	4615e8 <_obstack_memory_used@@Base+0x1a0>
  42113c:	ldr	w2, [x26, #8]
  421140:	str	x0, [x26]
  421144:	b	420bc8 <nftw@plt+0x1e048>
  421148:	ldr	w3, [x28, #4]
  42114c:	add	w0, w0, w3
  421150:	str	w0, [x28]
  421154:	ldrb	w4, [x8, #1]
  421158:	cmp	w4, #0x38
  42115c:	b.ne	421070 <nftw@plt+0x1e4f0>  // b.any
  421160:	cmp	w0, w1
  421164:	add	x2, x8, #0x2
  421168:	b.hi	421174 <nftw@plt+0x1e5f4>  // b.pmore
  42116c:	add	w0, w0, w3
  421170:	str	w0, [x28]
  421174:	ldrb	w1, [x2]
  421178:	cmp	w1, #0x52
  42117c:	b.eq	421370 <nftw@plt+0x1e7f0>  // b.none
  421180:	cmp	w1, #0x27
  421184:	mov	w3, #0x22                  	// #34
  421188:	ccmp	w1, w3, #0x4, ne  // ne = any
  42118c:	b.ne	4213a4 <nftw@plt+0x1e824>  // b.any
  421190:	add	x25, x2, #0x1
  421194:	b	42048c <nftw@plt+0x1d90c>
  421198:	lsl	w1, w1, #1
  42119c:	str	w1, [x26, #12]
  4211a0:	sbfiz	x1, x1, #3, #32
  4211a4:	bl	4615e8 <_obstack_memory_used@@Base+0x1a0>
  4211a8:	ldr	w3, [x26, #8]
  4211ac:	str	x0, [x26]
  4211b0:	b	420bec <nftw@plt+0x1e06c>
  4211b4:	lsl	w1, w1, #1
  4211b8:	str	w1, [x26, #12]
  4211bc:	sbfiz	x1, x1, #3, #32
  4211c0:	bl	4615e8 <_obstack_memory_used@@Base+0x1a0>
  4211c4:	ldr	w2, [x26, #8]
  4211c8:	str	x0, [x26]
  4211cc:	b	420c10 <nftw@plt+0x1e090>
  4211d0:	cbz	x28, 4205e0 <nftw@plt+0x1da60>
  4211d4:	ldr	x1, [sp, #104]
  4211d8:	adrp	x0, 41d000 <nftw@plt+0x1a480>
  4211dc:	add	x0, x0, #0x8
  4211e0:	cmp	x1, x0
  4211e4:	b.ne	421464 <nftw@plt+0x1e8e4>  // b.any
  4211e8:	sub	x2, x25, x27
  4211ec:	cmp	w2, #0x0
  4211f0:	b.le	4205e0 <nftw@plt+0x1da60>
  4211f4:	ldp	w1, w4, [x26, #8]
  4211f8:	mov	w22, w2
  4211fc:	ldr	x0, [x26]
  421200:	mov	w27, #0x0                   	// #0
  421204:	mov	w24, #0x60000000            	// #1610612736
  421208:	ldr	w21, [x28]
  42120c:	cmp	w21, w24
  421210:	b.hi	421220 <nftw@plt+0x1e6a0>  // b.pmore
  421214:	ldr	w3, [x28, #4]
  421218:	add	w3, w3, w21
  42121c:	str	w3, [x28]
  421220:	cmp	w4, w1
  421224:	b.le	42124c <nftw@plt+0x1e6cc>
  421228:	dup	v0.2s, w21
  42122c:	add	w3, w1, #0x1
  421230:	str	w3, [x26, #8]
  421234:	add	w27, w27, #0x1
  421238:	cmp	w22, w27
  42123c:	str	d0, [x0, w1, sxtw #3]
  421240:	b.eq	4205e0 <nftw@plt+0x1da60>  // b.none
  421244:	mov	w1, w3
  421248:	b	421208 <nftw@plt+0x1e688>
  42124c:	lsl	w1, w4, #1
  421250:	str	w1, [x26, #12]
  421254:	add	w27, w27, #0x1
  421258:	sbfiz	x1, x1, #3, #32
  42125c:	bl	4615e8 <_obstack_memory_used@@Base+0x1a0>
  421260:	ldr	w1, [x26, #8]
  421264:	dup	v0.2s, w21
  421268:	str	x0, [x26]
  42126c:	cmp	w22, w27
  421270:	add	w3, w1, #0x1
  421274:	str	w3, [x26, #8]
  421278:	str	d0, [x0, w1, sxtw #3]
  42127c:	b.eq	4205e0 <nftw@plt+0x1da60>  // b.none
  421280:	ldr	w4, [x26, #12]
  421284:	mov	w1, w3
  421288:	b	421208 <nftw@plt+0x1e688>
  42128c:	ldr	x0, [sp, #192]
  421290:	cbnz	x0, 4203c8 <nftw@plt+0x1d848>
  421294:	mov	w19, #0x1                   	// #1
  421298:	b	420868 <nftw@plt+0x1dce8>
  42129c:	lsl	w1, w1, #1
  4212a0:	str	w1, [x26, #12]
  4212a4:	sbfiz	x1, x1, #3, #32
  4212a8:	bl	4615e8 <_obstack_memory_used@@Base+0x1a0>
  4212ac:	ldr	w3, [x26, #8]
  4212b0:	str	x0, [x26]
  4212b4:	b	420c34 <nftw@plt+0x1e0b4>
  4212b8:	lsl	w1, w1, #1
  4212bc:	str	w1, [x26, #12]
  4212c0:	sbfiz	x1, x1, #3, #32
  4212c4:	bl	4615e8 <_obstack_memory_used@@Base+0x1a0>
  4212c8:	ldr	w2, [x26, #8]
  4212cc:	str	x0, [x26]
  4212d0:	b	420c58 <nftw@plt+0x1e0d8>
  4212d4:	ldr	x0, [sp, #120]
  4212d8:	ldr	x1, [x0, #592]
  4212dc:	str	x1, [sp, #104]
  4212e0:	ldr	x1, [x0, #600]
  4212e4:	str	x1, [sp, #112]
  4212e8:	ldr	w0, [x0, #608]
  4212ec:	str	w0, [sp, #200]
  4212f0:	b	420370 <nftw@plt+0x1d7f0>
  4212f4:	ldr	x0, [sp, #120]
  4212f8:	ldr	x1, [x0, #616]
  4212fc:	str	x1, [sp, #104]
  421300:	ldr	x1, [x0, #624]
  421304:	str	x1, [sp, #112]
  421308:	ldr	w0, [x0, #632]
  42130c:	str	w0, [sp, #200]
  421310:	b	420370 <nftw@plt+0x1d7f0>
  421314:	add	x2, x8, #0x4
  421318:	ldrb	w1, [x2]
  42131c:	mov	x0, x2
  421320:	cmp	w1, #0x28
  421324:	b.eq	4214ac <nftw@plt+0x1e92c>  // b.none
  421328:	mov	x3, x0
  42132c:	ldrb	w1, [x0, #1]!
  421330:	cmp	w1, #0x28
  421334:	b.ne	421328 <nftw@plt+0x1e7a8>  // b.any
  421338:	add	x27, x3, #0x2
  42133c:	mov	x28, #0x0                   	// #0
  421340:	sub	x2, x27, x2
  421344:	add	x3, x2, #0x1
  421348:	b	4207fc <nftw@plt+0x1dc7c>
  42134c:	add	x2, x8, #0x2
  421350:	b	421174 <nftw@plt+0x1e5f4>
  421354:	orr	w0, w1, #0xffffffc0
  421358:	mov	x25, #0x2                   	// #2
  42135c:	add	x1, sp, #0xf6
  421360:	strb	w0, [sp, #244]
  421364:	b	420b3c <nftw@plt+0x1dfbc>
  421368:	mov	w3, #0x0                   	// #0
  42136c:	b	4209cc <nftw@plt+0x1de4c>
  421370:	add	x2, x2, #0x2
  421374:	b	420770 <nftw@plt+0x1dbf0>
  421378:	ldrb	w0, [x8, #2]
  42137c:	cmp	w0, #0x52
  421380:	b.eq	421314 <nftw@plt+0x1e794>  // b.none
  421384:	cmp	w0, #0x27
  421388:	cset	w25, ne  // ne = any
  42138c:	cmp	w0, #0x22
  421390:	csel	w0, w25, wzr, ne  // ne = any
  421394:	str	w0, [sp, #152]
  421398:	cbnz	w0, 4213a4 <nftw@plt+0x1e824>
  42139c:	add	x25, x8, #0x3
  4213a0:	b	4204ac <nftw@plt+0x1d92c>
  4213a4:	cbz	x26, 4214c0 <nftw@plt+0x1e940>
  4213a8:	ldr	x0, [sp, #120]
  4213ac:	adrp	x2, 475000 <_obstack_memory_used@@Base+0x13bb8>
  4213b0:	mov	w1, #0x3                   	// #3
  4213b4:	add	x2, x2, #0x268
  4213b8:	mov	w19, #0x0                   	// #0
  4213bc:	bl	427178 <nftw@plt+0x245f8>
  4213c0:	ldr	x0, [sp, #128]
  4213c4:	cbnz	x0, 420858 <nftw@plt+0x1dcd8>
  4213c8:	ldp	x21, x22, [sp, #32]
  4213cc:	ldp	x23, x24, [sp, #48]
  4213d0:	b	420868 <nftw@plt+0x1dce8>
  4213d4:	add	x27, x2, #0x1
  4213d8:	mov	x3, #0x2                   	// #2
  4213dc:	mov	x2, #0x1                   	// #1
  4213e0:	b	4207e4 <nftw@plt+0x1dc64>
  4213e4:	lsl	w1, w1, #1
  4213e8:	str	w1, [x26, #12]
  4213ec:	sbfiz	x1, x1, #3, #32
  4213f0:	bl	4615e8 <_obstack_memory_used@@Base+0x1a0>
  4213f4:	ldr	w2, [x26, #8]
  4213f8:	str	x0, [x26]
  4213fc:	b	420680 <nftw@plt+0x1db00>
  421400:	adrp	x2, 475000 <_obstack_memory_used@@Base+0x13bb8>
  421404:	adrp	x0, 475000 <_obstack_memory_used@@Base+0x13bb8>
  421408:	add	x2, x2, #0x280
  42140c:	add	x0, x0, #0x120
  421410:	mov	w1, #0x48d                 	// #1165
  421414:	bl	402bf0 <nftw@plt+0x70>
  421418:	adrp	x2, 475000 <_obstack_memory_used@@Base+0x13bb8>
  42141c:	adrp	x0, 475000 <_obstack_memory_used@@Base+0x13bb8>
  421420:	add	x2, x2, #0x380
  421424:	add	x0, x0, #0x120
  421428:	mov	w1, #0x540                 	// #1344
  42142c:	bl	402bf0 <nftw@plt+0x70>
  421430:	adrp	x2, 475000 <_obstack_memory_used@@Base+0x13bb8>
  421434:	adrp	x0, 475000 <_obstack_memory_used@@Base+0x13bb8>
  421438:	add	x2, x2, #0x250
  42143c:	add	x0, x0, #0x120
  421440:	mov	w1, #0x5fc                 	// #1532
  421444:	stp	x21, x22, [sp, #32]
  421448:	stp	x23, x24, [sp, #48]
  42144c:	stp	x27, x28, [sp, #80]
  421450:	bl	402bf0 <nftw@plt+0x70>
  421454:	add	x0, sp, #0x108
  421458:	mov	x27, #0x0                   	// #0
  42145c:	str	x0, [sp, #136]
  421460:	b	420610 <nftw@plt+0x1da90>
  421464:	adrp	x2, 475000 <_obstack_memory_used@@Base+0x13bb8>
  421468:	adrp	x0, 475000 <_obstack_memory_used@@Base+0x13bb8>
  42146c:	add	x2, x2, #0x250
  421470:	add	x0, x0, #0x120
  421474:	mov	w1, #0x641                 	// #1601
  421478:	bl	402bf0 <nftw@plt+0x70>
  42147c:	adrp	x2, 475000 <_obstack_memory_used@@Base+0x13bb8>
  421480:	adrp	x0, 475000 <_obstack_memory_used@@Base+0x13bb8>
  421484:	add	x2, x2, #0x2e8
  421488:	add	x0, x0, #0x120
  42148c:	mov	w1, #0x4f9                 	// #1273
  421490:	bl	402bf0 <nftw@plt+0x70>
  421494:	adrp	x2, 475000 <_obstack_memory_used@@Base+0x13bb8>
  421498:	adrp	x0, 475000 <_obstack_memory_used@@Base+0x13bb8>
  42149c:	add	x2, x2, #0x250
  4214a0:	add	x0, x0, #0x120
  4214a4:	mov	w1, #0x66c                 	// #1644
  4214a8:	bl	402bf0 <nftw@plt+0x70>
  4214ac:	add	x27, x2, #0x1
  4214b0:	mov	x3, #0x2                   	// #2
  4214b4:	mov	x2, #0x1                   	// #1
  4214b8:	mov	x28, #0x0                   	// #0
  4214bc:	b	4207fc <nftw@plt+0x1dc7c>
  4214c0:	adrp	x2, 475000 <_obstack_memory_used@@Base+0x13bb8>
  4214c4:	adrp	x0, 475000 <_obstack_memory_used@@Base+0x13bb8>
  4214c8:	add	x2, x2, #0x250
  4214cc:	add	x0, x0, #0x120
  4214d0:	mov	w1, #0x64d                 	// #1613
  4214d4:	bl	402bf0 <nftw@plt+0x70>
  4214d8:	mov	x6, #0x0                   	// #0
  4214dc:	mov	x5, #0x0                   	// #0
  4214e0:	b	420310 <nftw@plt+0x1d790>
  4214e4:	nop
  4214e8:	stp	x29, x30, [sp, #-32]!
  4214ec:	mov	w7, w5
  4214f0:	cmp	w5, #0x3f
  4214f4:	mov	x29, sp
  4214f8:	stp	x19, x20, [sp, #16]
  4214fc:	mov	x19, x0
  421500:	b.eq	4215dc <nftw@plt+0x1ea5c>  // b.none
  421504:	b.hi	4215bc <nftw@plt+0x1ea3c>  // b.pmore
  421508:	cmp	w5, #0x3b
  42150c:	b.eq	4215e4 <nftw@plt+0x1ea64>  // b.none
  421510:	b.ls	421584 <nftw@plt+0x1ea04>  // b.plast
  421514:	cmp	w5, #0x3c
  421518:	b.ne	4215d4 <nftw@plt+0x1ea54>  // b.any
  42151c:	ldr	x5, [x19, #544]
  421520:	adrp	x0, 41d000 <nftw@plt+0x1a480>
  421524:	add	x0, x0, #0x8
  421528:	adrp	x8, 475000 <_obstack_memory_used@@Base+0x13bb8>
  42152c:	cmp	x5, x0
  421530:	add	x0, x8, #0x498
  421534:	b.ne	4215b0 <nftw@plt+0x1ea30>  // b.any
  421538:	adrp	x0, 41c000 <nftw@plt+0x19480>
  42153c:	add	x0, x0, #0xc28
  421540:	ldr	x20, [x19, #1000]
  421544:	str	x0, [x19, #1000]
  421548:	mov	x6, x4
  42154c:	mov	x5, x2
  421550:	mov	w4, w7
  421554:	mov	x2, x3
  421558:	mov	x0, x19
  42155c:	mov	x3, #0x0                   	// #0
  421560:	bl	420310 <nftw@plt+0x1d790>
  421564:	str	x20, [x19, #1000]
  421568:	tst	w0, #0xff
  42156c:	adrp	x1, 475000 <_obstack_memory_used@@Base+0x13bb8>
  421570:	add	x1, x1, #0x4c8
  421574:	csel	x0, x1, xzr, eq  // eq = none
  421578:	ldp	x19, x20, [sp, #16]
  42157c:	ldp	x29, x30, [sp], #32
  421580:	ret
  421584:	cmp	w5, #0x39
  421588:	b.eq	4215dc <nftw@plt+0x1ea5c>  // b.none
  42158c:	cmp	w5, #0x3a
  421590:	b.ne	4215d4 <nftw@plt+0x1ea54>  // b.any
  421594:	ldr	x5, [x19, #568]
  421598:	adrp	x0, 41d000 <nftw@plt+0x1a480>
  42159c:	add	x0, x0, #0x8
  4215a0:	adrp	x8, 475000 <_obstack_memory_used@@Base+0x13bb8>
  4215a4:	cmp	x5, x0
  4215a8:	add	x0, x8, #0x498
  4215ac:	b.eq	421538 <nftw@plt+0x1e9b8>  // b.none
  4215b0:	ldp	x19, x20, [sp, #16]
  4215b4:	ldp	x29, x30, [sp], #32
  4215b8:	ret
  4215bc:	cmp	w5, #0x41
  4215c0:	b.eq	4215e4 <nftw@plt+0x1ea64>  // b.none
  4215c4:	cmp	w5, #0x42
  4215c8:	b.eq	42151c <nftw@plt+0x1e99c>  // b.none
  4215cc:	cmp	w5, #0x40
  4215d0:	b.eq	421594 <nftw@plt+0x1ea14>  // b.none
  4215d4:	ldr	x5, [x19, #520]
  4215d8:	b	421598 <nftw@plt+0x1ea18>
  4215dc:	ldr	x5, [x19, #616]
  4215e0:	b	421598 <nftw@plt+0x1ea18>
  4215e4:	ldr	x5, [x19, #592]
  4215e8:	b	421598 <nftw@plt+0x1ea18>
  4215ec:	nop
  4215f0:	stp	x29, x30, [sp, #-64]!
  4215f4:	adrp	x8, 41d000 <nftw@plt+0x1a480>
  4215f8:	add	x8, x8, #0x8
  4215fc:	mov	x29, sp
  421600:	ldr	x9, [x0, #536]
  421604:	mov	x11, #0xffffffffffffffff    	// #-1
  421608:	ldr	x10, [x0, #1216]
  42160c:	str	x19, [sp, #16]
  421610:	add	x19, x0, #0x208
  421614:	mov	x6, #0x0                   	// #0
  421618:	mov	x5, #0x0                   	// #0
  42161c:	mov	w4, #0x3e                  	// #62
  421620:	str	x9, [sp, #56]
  421624:	ldp	x12, x13, [x19]
  421628:	str	x8, [x0, #520]
  42162c:	str	x11, [x0, #528]
  421630:	str	w10, [x0, #536]
  421634:	stp	x12, x13, [sp, #40]
  421638:	bl	420310 <nftw@plt+0x1d790>
  42163c:	ldp	x2, x3, [sp, #40]
  421640:	stp	x2, x3, [x19]
  421644:	ldr	x1, [sp, #56]
  421648:	str	x1, [x19, #16]
  42164c:	ldr	x19, [sp, #16]
  421650:	ldp	x29, x30, [sp], #64
  421654:	ret
  421658:	stp	x29, x30, [sp, #-96]!
  42165c:	mov	x29, sp
  421660:	ldrb	w4, [x1, #4]
  421664:	stp	x21, x22, [sp, #32]
  421668:	mov	x22, x1
  42166c:	and	w21, w4, #0xfffffffb
  421670:	cmp	w21, #0x38
  421674:	stp	x23, x24, [sp, #48]
  421678:	mov	x23, x2
  42167c:	cset	w2, ne  // ne = any
  421680:	cmp	w4, #0x3c
  421684:	mov	x24, x3
  421688:	ldr	w3, [x1, #8]
  42168c:	cset	w1, eq  // eq = none
  421690:	add	w2, w2, #0x2
  421694:	stp	x19, x20, [sp, #16]
  421698:	add	w1, w2, w1, lsl #1
  42169c:	str	wzr, [sp, #80]
  4216a0:	str	xzr, [sp, #88]
  4216a4:	cmp	x3, w1, sxtw
  4216a8:	b.eq	421a78 <nftw@plt+0x1eef8>  // b.none
  4216ac:	add	x3, sp, #0x50
  4216b0:	add	x1, x22, #0x8
  4216b4:	mov	x6, #0x0                   	// #0
  4216b8:	mov	x5, #0x0                   	// #0
  4216bc:	mov	x2, #0x1                   	// #1
  4216c0:	stp	x25, x26, [sp, #64]
  4216c4:	mov	x25, x0
  4216c8:	bl	420310 <nftw@plt+0x1d790>
  4216cc:	tst	w0, #0xff
  4216d0:	b.eq	421a50 <nftw@plt+0x1eed0>  // b.none
  4216d4:	ldr	x20, [x25, #1216]
  4216d8:	mov	x1, #0x20                  	// #32
  4216dc:	and	w21, w21, #0xff
  4216e0:	mov	x5, #0x1                   	// #1
  4216e4:	cmp	x20, x1
  4216e8:	ldr	w19, [sp, #80]
  4216ec:	csel	x1, x20, x1, ls  // ls = plast
  4216f0:	cmp	w21, #0x38
  4216f4:	ldr	x0, [sp, #88]
  4216f8:	lsl	x5, x5, x1
  4216fc:	sub	x5, x5, #0x1
  421700:	b.eq	421734 <nftw@plt+0x1ebb4>  // b.none
  421704:	ldrb	w26, [x22, #4]
  421708:	ldrb	w1, [x25, #1242]
  42170c:	cmp	w26, #0x3f
  421710:	b.eq	421ad8 <nftw@plt+0x1ef58>  // b.none
  421714:	b.hi	421a30 <nftw@plt+0x1eeb0>  // b.pmore
  421718:	cmp	w26, #0x3b
  42171c:	b.eq	421ae0 <nftw@plt+0x1ef60>  // b.none
  421720:	b.ls	421948 <nftw@plt+0x1edc8>  // b.plast
  421724:	cmp	w26, #0x3c
  421728:	b.ne	421a48 <nftw@plt+0x1eec8>  // b.any
  42172c:	ldr	w21, [x25, #560]
  421730:	b	42195c <nftw@plt+0x1eddc>
  421734:	ldr	x6, [x25, #1224]
  421738:	sub	w2, w19, #0x1
  42173c:	mov	x19, x2
  421740:	udiv	x26, x6, x20
  421744:	cbz	w2, 421b18 <nftw@plt+0x1ef98>
  421748:	cmp	x20, #0x1f
  42174c:	mov	w3, w5
  421750:	b.ls	421aac <nftw@plt+0x1ef2c>  // b.plast
  421754:	sub	x1, x2, #0x1
  421758:	and	w3, w5, #0xff
  42175c:	cmp	x1, #0xe
  421760:	fmov	s1, w3
  421764:	b.ls	421be4 <nftw@plt+0x1f064>  // b.plast
  421768:	and	x3, x2, #0xfffffff0
  42176c:	mov	x1, x0
  421770:	dup	v1.16b, v1.b[0]
  421774:	add	x3, x3, x0
  421778:	ldr	q0, [x1], #16
  42177c:	and	v0.16b, v0.16b, v1.16b
  421780:	cmp	x1, x3
  421784:	uxtl2	v0.8h, v0.16b
  421788:	uxtl2	v0.4s, v0.8h
  42178c:	b.ne	421778 <nftw@plt+0x1ebf8>  // b.any
  421790:	mov	w19, v0.s[3]
  421794:	tst	x2, #0xffffffff0000000f
  421798:	and	x1, x2, #0xfffffffffffffff0
  42179c:	b.eq	4218c0 <nftw@plt+0x1ed40>  // b.none
  4217a0:	ldrb	w19, [x0, x1]
  4217a4:	add	x3, x1, #0x1
  4217a8:	cmp	x2, x3
  4217ac:	and	w19, w19, w5
  4217b0:	b.ls	4218c0 <nftw@plt+0x1ed40>  // b.plast
  4217b4:	ldrb	w19, [x0, x3]
  4217b8:	add	x3, x1, #0x2
  4217bc:	cmp	x2, x3
  4217c0:	and	w19, w19, w5
  4217c4:	b.ls	4218c0 <nftw@plt+0x1ed40>  // b.plast
  4217c8:	ldrb	w19, [x0, x3]
  4217cc:	add	x3, x1, #0x3
  4217d0:	cmp	x2, x3
  4217d4:	and	w19, w19, w5
  4217d8:	b.ls	4218c0 <nftw@plt+0x1ed40>  // b.plast
  4217dc:	ldrb	w19, [x0, x3]
  4217e0:	add	x3, x1, #0x4
  4217e4:	cmp	x2, x3
  4217e8:	and	w19, w19, w5
  4217ec:	b.ls	4218c0 <nftw@plt+0x1ed40>  // b.plast
  4217f0:	ldrb	w19, [x0, x3]
  4217f4:	add	x3, x1, #0x5
  4217f8:	cmp	x3, x2
  4217fc:	and	w19, w19, w5
  421800:	b.cs	4218c0 <nftw@plt+0x1ed40>  // b.hs, b.nlast
  421804:	ldrb	w19, [x0, x3]
  421808:	add	x3, x1, #0x6
  42180c:	cmp	x2, x3
  421810:	and	w19, w19, w5
  421814:	b.ls	4218c0 <nftw@plt+0x1ed40>  // b.plast
  421818:	ldrb	w19, [x0, x3]
  42181c:	add	x3, x1, #0x7
  421820:	cmp	x3, x2
  421824:	and	w19, w19, w5
  421828:	b.cs	4218c0 <nftw@plt+0x1ed40>  // b.hs, b.nlast
  42182c:	ldrb	w19, [x0, x3]
  421830:	add	x3, x1, #0x8
  421834:	cmp	x2, x3
  421838:	and	w19, w19, w5
  42183c:	b.ls	4218c0 <nftw@plt+0x1ed40>  // b.plast
  421840:	ldrb	w19, [x0, x3]
  421844:	add	x3, x1, #0x9
  421848:	cmp	x2, x3
  42184c:	and	w19, w19, w5
  421850:	b.ls	4218c0 <nftw@plt+0x1ed40>  // b.plast
  421854:	ldrb	w19, [x0, x3]
  421858:	add	x3, x1, #0xa
  42185c:	cmp	x2, x3
  421860:	and	w19, w19, w5
  421864:	b.ls	4218c0 <nftw@plt+0x1ed40>  // b.plast
  421868:	ldrb	w19, [x0, x3]
  42186c:	add	x3, x1, #0xb
  421870:	cmp	x3, x2
  421874:	and	w19, w19, w5
  421878:	b.cs	4218c0 <nftw@plt+0x1ed40>  // b.hs, b.nlast
  42187c:	ldrb	w19, [x0, x3]
  421880:	add	x3, x1, #0xc
  421884:	cmp	x3, x2
  421888:	and	w19, w19, w5
  42188c:	b.cs	4218c0 <nftw@plt+0x1ed40>  // b.hs, b.nlast
  421890:	ldrb	w19, [x0, x3]
  421894:	add	x3, x1, #0xd
  421898:	cmp	x2, x3
  42189c:	and	w19, w19, w5
  4218a0:	b.ls	4218c0 <nftw@plt+0x1ed40>  // b.plast
  4218a4:	ldrb	w19, [x0, x3]
  4218a8:	add	x1, x1, #0xe
  4218ac:	cmp	x2, x1
  4218b0:	and	w19, w19, w5
  4218b4:	b.ls	4218c0 <nftw@plt+0x1ed40>  // b.plast
  4218b8:	ldrb	w19, [x0, x1]
  4218bc:	and	w19, w19, w5
  4218c0:	mov	x4, x2
  4218c4:	cmp	x4, x26
  4218c8:	b.hi	421b48 <nftw@plt+0x1efc8>  // b.pmore
  4218cc:	cmp	x4, #0x1
  4218d0:	mov	w21, w4
  4218d4:	b.eq	421b1c <nftw@plt+0x1ef9c>  // b.none
  4218d8:	ldrb	w1, [x25, #1137]
  4218dc:	cbnz	w1, 421bbc <nftw@plt+0x1f03c>
  4218e0:	cmp	x6, #0x1f
  4218e4:	mov	w1, #0x0                   	// #0
  4218e8:	b.hi	421918 <nftw@plt+0x1ed98>  // b.pmore
  4218ec:	mov	w20, #0x1                   	// #1
  4218f0:	mov	w2, w6
  4218f4:	lsl	w20, w20, w6
  4218f8:	sub	w3, w20, #0x1
  4218fc:	sub	w2, w2, #0x1
  421900:	mov	w1, #0x1                   	// #1
  421904:	lsl	w2, w1, w2
  421908:	tst	w2, w19
  42190c:	b.ne	421bac <nftw@plt+0x1f02c>  // b.any
  421910:	and	w19, w19, w3
  421914:	mov	w1, #0x0                   	// #0
  421918:	str	w21, [x23]
  42191c:	str	w1, [x24]
  421920:	ldr	x1, [x22, #16]
  421924:	cmp	x1, x0
  421928:	b.ne	421a10 <nftw@plt+0x1ee90>  // b.any
  42192c:	mov	w0, w19
  421930:	ldp	x19, x20, [sp, #16]
  421934:	ldp	x21, x22, [sp, #32]
  421938:	ldp	x23, x24, [sp, #48]
  42193c:	ldp	x25, x26, [sp, #64]
  421940:	ldp	x29, x30, [sp], #96
  421944:	ret
  421948:	cmp	w26, #0x39
  42194c:	b.eq	421ad8 <nftw@plt+0x1ef58>  // b.none
  421950:	cmp	w26, #0x3a
  421954:	b.ne	421a48 <nftw@plt+0x1eec8>  // b.any
  421958:	ldr	w21, [x25, #584]
  42195c:	sxtw	x21, w21
  421960:	mov	w7, w19
  421964:	cmp	x21, x20
  421968:	udiv	x6, x21, x20
  42196c:	lsl	x9, x6, #1
  421970:	sub	x4, x7, x9
  421974:	b.cc	421bdc <nftw@plt+0x1f05c>  // b.lo, b.ul, b.last
  421978:	cbnz	w1, 421ae8 <nftw@plt+0x1ef68>
  42197c:	add	x3, x6, x4
  421980:	add	x8, x0, x6
  421984:	add	x3, x0, x3
  421988:	mov	w19, #0x0                   	// #0
  42198c:	nop
  421990:	ldrb	w2, [x3, #-1]!
  421994:	lsl	w19, w19, w20
  421998:	sub	x1, x4, x3
  42199c:	and	w2, w2, w5
  4219a0:	add	x1, x1, x8
  4219a4:	orr	w19, w2, w19
  4219a8:	cmp	x6, x1
  4219ac:	b.hi	421990 <nftw@plt+0x1ee10>  // b.pmore
  4219b0:	cmp	x7, x9
  4219b4:	b.hi	421b74 <nftw@plt+0x1eff4>  // b.pmore
  4219b8:	sub	w1, w26, #0x3a
  4219bc:	cmp	x21, #0x1f
  4219c0:	b.hi	4219e4 <nftw@plt+0x1ee64>  // b.pmore
  4219c4:	mov	x4, #0x1                   	// #1
  4219c8:	cmp	w1, #0x1
  4219cc:	lsl	x3, x4, x21
  4219d0:	b.ls	4219dc <nftw@plt+0x1ee5c>  // b.plast
  4219d4:	ldrb	w2, [x25, #1241]
  4219d8:	cbz	w2, 421b90 <nftw@plt+0x1f010>
  4219dc:	sub	x3, x3, #0x1
  4219e0:	and	w19, w19, w3
  4219e4:	cmp	w1, #0x1
  4219e8:	mov	w1, #0x1                   	// #1
  4219ec:	b.ls	4219f8 <nftw@plt+0x1ee78>  // b.plast
  4219f0:	ldrb	w2, [x25, #1241]
  4219f4:	mov	w1, w2
  4219f8:	str	w1, [x24]
  4219fc:	mov	w1, #0x1                   	// #1
  421a00:	str	w1, [x23]
  421a04:	ldr	x1, [x22, #16]
  421a08:	cmp	x1, x0
  421a0c:	b.eq	42192c <nftw@plt+0x1edac>  // b.none
  421a10:	bl	402910 <free@plt>
  421a14:	mov	w0, w19
  421a18:	ldp	x19, x20, [sp, #16]
  421a1c:	ldp	x21, x22, [sp, #32]
  421a20:	ldp	x23, x24, [sp, #48]
  421a24:	ldp	x25, x26, [sp, #64]
  421a28:	ldp	x29, x30, [sp], #96
  421a2c:	ret
  421a30:	cmp	w26, #0x41
  421a34:	b.eq	421ae0 <nftw@plt+0x1ef60>  // b.none
  421a38:	cmp	w26, #0x42
  421a3c:	b.eq	42172c <nftw@plt+0x1ebac>  // b.none
  421a40:	cmp	w26, #0x40
  421a44:	b.eq	421958 <nftw@plt+0x1edd8>  // b.none
  421a48:	ldr	w21, [x25, #536]
  421a4c:	b	42195c <nftw@plt+0x1eddc>
  421a50:	ldp	x25, x26, [sp, #64]
  421a54:	str	wzr, [x23]
  421a58:	str	wzr, [x24]
  421a5c:	mov	w19, #0x0                   	// #0
  421a60:	mov	w0, w19
  421a64:	ldp	x19, x20, [sp, #16]
  421a68:	ldp	x21, x22, [sp, #32]
  421a6c:	ldp	x23, x24, [sp, #48]
  421a70:	ldp	x29, x30, [sp], #96
  421a74:	ret
  421a78:	mov	w1, #0x3                   	// #3
  421a7c:	adrp	x2, 475000 <_obstack_memory_used@@Base+0x13bb8>
  421a80:	add	x2, x2, #0x4e8
  421a84:	bl	427178 <nftw@plt+0x245f8>
  421a88:	str	wzr, [x23]
  421a8c:	mov	w19, #0x0                   	// #0
  421a90:	str	wzr, [x24]
  421a94:	mov	w0, w19
  421a98:	ldp	x19, x20, [sp, #16]
  421a9c:	ldp	x21, x22, [sp, #32]
  421aa0:	ldp	x23, x24, [sp, #48]
  421aa4:	ldp	x29, x30, [sp], #96
  421aa8:	ret
  421aac:	mov	w19, #0x0                   	// #0
  421ab0:	mov	x4, #0x0                   	// #0
  421ab4:	nop
  421ab8:	ldrb	w1, [x0, x4]
  421abc:	add	x4, x4, #0x1
  421ac0:	lsl	w19, w19, w20
  421ac4:	cmp	x2, x4
  421ac8:	and	w1, w1, w3
  421acc:	orr	w19, w1, w19
  421ad0:	b.ne	421ab8 <nftw@plt+0x1ef38>  // b.any
  421ad4:	b	4218c4 <nftw@plt+0x1ed44>
  421ad8:	ldr	w21, [x25, #632]
  421adc:	b	42195c <nftw@plt+0x1eddc>
  421ae0:	ldr	w21, [x25, #608]
  421ae4:	b	42195c <nftw@plt+0x1eddc>
  421ae8:	add	x4, x0, x4
  421aec:	mov	w19, #0x0                   	// #0
  421af0:	mov	x1, #0x0                   	// #0
  421af4:	nop
  421af8:	ldrb	w2, [x4, x1]
  421afc:	add	x1, x1, #0x1
  421b00:	lsl	w19, w19, w20
  421b04:	cmp	x6, x1
  421b08:	and	w2, w2, w5
  421b0c:	orr	w19, w2, w19
  421b10:	b.hi	421af8 <nftw@plt+0x1ef78>  // b.pmore
  421b14:	b	4219b0 <nftw@plt+0x1ee30>
  421b18:	mov	w21, #0x0                   	// #0
  421b1c:	ldrb	w4, [x25, #1240]
  421b20:	cmp	x20, #0x1f
  421b24:	mov	w1, w4
  421b28:	b.hi	421918 <nftw@plt+0x1ed98>  // b.pmore
  421b2c:	mov	w1, #0x1                   	// #1
  421b30:	mov	w2, w20
  421b34:	lsl	w20, w1, w20
  421b38:	sub	w3, w20, #0x1
  421b3c:	cbz	w4, 4218fc <nftw@plt+0x1ed7c>
  421b40:	and	w19, w19, w3
  421b44:	b	421918 <nftw@plt+0x1ed98>
  421b48:	mov	x0, x25
  421b4c:	adrp	x2, 475000 <_obstack_memory_used@@Base+0x13bb8>
  421b50:	mov	w1, #0x0                   	// #0
  421b54:	add	x2, x2, #0x508
  421b58:	bl	427178 <nftw@plt+0x245f8>
  421b5c:	mov	w21, w26
  421b60:	cmp	x26, #0x1
  421b64:	ldr	x0, [sp, #88]
  421b68:	b.ls	421b1c <nftw@plt+0x1ef9c>  // b.plast
  421b6c:	ldr	x6, [x25, #1224]
  421b70:	b	4218e0 <nftw@plt+0x1ed60>
  421b74:	mov	x0, x25
  421b78:	adrp	x2, 475000 <_obstack_memory_used@@Base+0x13bb8>
  421b7c:	mov	w1, #0x0                   	// #0
  421b80:	add	x2, x2, #0x508
  421b84:	bl	427178 <nftw@plt+0x245f8>
  421b88:	ldr	x0, [sp, #88]
  421b8c:	b	4219b8 <nftw@plt+0x1ee38>
  421b90:	sub	w21, w21, #0x1
  421b94:	lsl	w21, w4, w21
  421b98:	tst	w21, w19
  421b9c:	b.eq	4219dc <nftw@plt+0x1ee5c>  // b.none
  421ba0:	neg	x3, x3
  421ba4:	orr	w19, w19, w3
  421ba8:	b	4219f4 <nftw@plt+0x1ee74>
  421bac:	neg	w20, w20
  421bb0:	mov	w1, #0x0                   	// #0
  421bb4:	orr	w19, w19, w20
  421bb8:	b	421918 <nftw@plt+0x1ed98>
  421bbc:	mov	x0, x25
  421bc0:	adrp	x2, 475000 <_obstack_memory_used@@Base+0x13bb8>
  421bc4:	mov	w1, #0x5                   	// #5
  421bc8:	add	x2, x2, #0x538
  421bcc:	bl	427298 <nftw@plt+0x24718>
  421bd0:	ldr	x0, [sp, #88]
  421bd4:	ldr	x6, [x25, #1224]
  421bd8:	b	4218e0 <nftw@plt+0x1ed60>
  421bdc:	mov	w19, #0x0                   	// #0
  421be0:	b	4219b0 <nftw@plt+0x1ee30>
  421be4:	mov	x1, #0x0                   	// #0
  421be8:	b	4217a0 <nftw@plt+0x1ec20>
  421bec:	nop
  421bf0:	stp	x29, x30, [sp, #-112]!
  421bf4:	mov	x29, sp
  421bf8:	stp	x21, x22, [sp, #32]
  421bfc:	mov	x21, x2
  421c00:	add	x2, x2, #0x10
  421c04:	and	x2, x2, #0xfffffffffffffff0
  421c08:	stp	x19, x20, [sp, #16]
  421c0c:	mov	x22, x0
  421c10:	stp	x23, x24, [sp, #48]
  421c14:	stp	x25, x26, [sp, #64]
  421c18:	str	x27, [sp, #80]
  421c1c:	sub	sp, sp, x2
  421c20:	mov	x26, sp
  421c24:	cbz	x21, 421ef8 <nftw@plt+0x1f378>
  421c28:	adrp	x25, 481000 <_obstack_memory_used@@Base+0x1fbb8>
  421c2c:	mov	x24, x1
  421c30:	add	x23, x29, #0x6d
  421c34:	add	x25, x25, #0x7d0
  421c38:	mov	x20, x26
  421c3c:	mov	x19, #0x0                   	// #0
  421c40:	b	421c5c <nftw@plt+0x1f0dc>
  421c44:	mov	x0, x20
  421c48:	mov	x19, x1
  421c4c:	strb	w2, [x0], #1
  421c50:	mov	x20, x0
  421c54:	cmp	x21, x19
  421c58:	b.ls	421db0 <nftw@plt+0x1f230>  // b.plast
  421c5c:	ldrb	w2, [x24, x19]
  421c60:	add	x1, x19, #0x1
  421c64:	cmp	w2, #0x5c
  421c68:	b.ne	421c44 <nftw@plt+0x1f0c4>  // b.any
  421c6c:	ldrb	w0, [x24, x1]
  421c70:	add	x19, x19, #0x2
  421c74:	sub	x27, x20, x26
  421c78:	mov	w1, #0x4                   	// #4
  421c7c:	cmp	w0, #0x75
  421c80:	sub	x5, x21, x27
  421c84:	mov	w0, #0x8                   	// #8
  421c88:	csel	w1, w1, w0, eq  // eq = none
  421c8c:	cmp	x21, x19
  421c90:	b.ls	421edc <nftw@plt+0x1f35c>  // b.plast
  421c94:	adrp	x2, 481000 <_obstack_memory_used@@Base+0x1fbb8>
  421c98:	add	w1, w1, w19
  421c9c:	add	x2, x2, #0xaf0
  421ca0:	mov	w4, #0x0                   	// #0
  421ca4:	b	421cc0 <nftw@plt+0x1f140>
  421ca8:	ldrb	w0, [x25, w3, sxtw]
  421cac:	add	x19, x19, #0x1
  421cb0:	cmp	w1, w19
  421cb4:	ccmp	x21, x19, #0x0, ne  // ne = any
  421cb8:	add	w4, w0, w4, lsl #4
  421cbc:	b.ls	421ccc <nftw@plt+0x1f14c>  // b.plast
  421cc0:	ldrb	w3, [x24, x19]
  421cc4:	ldrh	w0, [x2, w3, sxtw #1]
  421cc8:	tbnz	w0, #8, 421ca8 <nftw@plt+0x1f128>
  421ccc:	cmp	w4, #0x24
  421cd0:	b.eq	421de8 <nftw@plt+0x1f268>  // b.none
  421cd4:	cmp	w4, #0x7f
  421cd8:	b.ls	421df8 <nftw@plt+0x1f278>  // b.plast
  421cdc:	and	w0, w4, #0x3f
  421ce0:	cmp	w4, #0xfbf
  421ce4:	orr	w0, w0, #0xffffff80
  421ce8:	strb	w0, [x29, #109]
  421cec:	lsr	w0, w4, #6
  421cf0:	b.ls	421e2c <nftw@plt+0x1f2ac>  // b.plast
  421cf4:	and	w1, w0, #0x3f
  421cf8:	lsr	w0, w4, #12
  421cfc:	orr	w1, w1, #0xffffff80
  421d00:	strb	w1, [x29, #108]
  421d04:	cmp	w0, #0x3e
  421d08:	b.ls	421e54 <nftw@plt+0x1f2d4>  // b.plast
  421d0c:	and	w1, w0, #0x3f
  421d10:	lsr	w0, w4, #18
  421d14:	orr	w1, w1, #0xffffff80
  421d18:	strb	w1, [x29, #107]
  421d1c:	cmp	w0, #0x3e
  421d20:	b.ls	421e80 <nftw@plt+0x1f300>  // b.plast
  421d24:	and	w1, w0, #0x3f
  421d28:	lsr	w0, w4, #24
  421d2c:	orr	w1, w1, #0xffffff80
  421d30:	strb	w1, [x29, #106]
  421d34:	cmp	w0, #0x3e
  421d38:	b.ls	421eac <nftw@plt+0x1f32c>  // b.plast
  421d3c:	and	w1, w0, #0x3f
  421d40:	lsr	w0, w4, #30
  421d44:	orr	w1, w1, #0xffffff80
  421d48:	strb	w1, [x29, #105]
  421d4c:	tbz	w4, #31, 421ec4 <nftw@plt+0x1f344>
  421d50:	add	x3, x29, #0x68
  421d54:	orr	w2, w0, #0xffffff80
  421d58:	add	x1, x3, #0x1
  421d5c:	mov	x6, #0x7                   	// #7
  421d60:	mov	x4, #0x6                   	// #6
  421d64:	mov	w0, #0x0                   	// #0
  421d68:	strb	w2, [x29, #104]
  421d6c:	adrp	x2, 47b000 <_obstack_memory_used@@Base+0x19bb8>
  421d70:	add	x2, x2, #0x78
  421d74:	sub	x1, x1, #0x2
  421d78:	cmp	x5, x6
  421d7c:	ldrb	w2, [x2, x4]
  421d80:	orr	w0, w0, w2
  421d84:	sturb	w0, [x3, #-1]
  421d88:	b.cs	421e08 <nftw@plt+0x1f288>  // b.hs, b.nlast
  421d8c:	bl	402aa0 <__errno_location@plt>
  421d90:	mov	w3, #0x7                   	// #7
  421d94:	str	w3, [x0]
  421d98:	adrp	x2, 475000 <_obstack_memory_used@@Base+0x13bb8>
  421d9c:	mov	x0, x22
  421da0:	add	x2, x2, #0x290
  421da4:	mov	w1, #0x3                   	// #3
  421da8:	bl	427990 <nftw@plt+0x24e10>
  421dac:	b	421db4 <nftw@plt+0x1f234>
  421db0:	sub	x27, x20, x26
  421db4:	ldr	x0, [x22, #1088]
  421db8:	mov	x2, x27
  421dbc:	mov	x1, x26
  421dc0:	mov	w3, #0x1                   	// #1
  421dc4:	bl	43f8e8 <nftw@plt+0x3cd68>
  421dc8:	mov	sp, x29
  421dcc:	ldp	x19, x20, [sp, #16]
  421dd0:	ldp	x21, x22, [sp, #32]
  421dd4:	ldp	x23, x24, [sp, #48]
  421dd8:	ldp	x25, x26, [sp, #64]
  421ddc:	ldr	x27, [sp, #80]
  421de0:	ldp	x29, x30, [sp], #112
  421de4:	ret
  421de8:	mov	x0, x20
  421dec:	strb	w4, [x0], #1
  421df0:	mov	x20, x0
  421df4:	b	421c54 <nftw@plt+0x1f0d4>
  421df8:	and	w4, w4, #0xff
  421dfc:	strb	w4, [x29, #109]
  421e00:	cbz	x5, 421d8c <nftw@plt+0x1f20c>
  421e04:	mov	x1, x23
  421e08:	add	x2, x29, #0x6e
  421e0c:	add	x0, x1, #0x1
  421e10:	cmp	x2, x0
  421e14:	sub	x2, x2, x1
  421e18:	csinc	x2, x2, xzr, cs  // cs = hs, nlast
  421e1c:	mov	x0, x20
  421e20:	add	x20, x20, x2
  421e24:	bl	402490 <memcpy@plt>
  421e28:	b	421c54 <nftw@plt+0x1f0d4>
  421e2c:	tst	w0, #0xe0
  421e30:	b.eq	421ee4 <nftw@plt+0x1f364>  // b.none
  421e34:	orr	w1, w0, #0xffffff80
  421e38:	mov	w0, #0x0                   	// #0
  421e3c:	strb	w1, [x29, #108]
  421e40:	add	x3, x29, #0x6c
  421e44:	mov	x1, x23
  421e48:	mov	x6, #0x3                   	// #3
  421e4c:	mov	x4, #0x2                   	// #2
  421e50:	b	421d6c <nftw@plt+0x1f1ec>
  421e54:	tst	w0, #0xf0
  421e58:	b.eq	421e40 <nftw@plt+0x1f2c0>  // b.none
  421e5c:	orr	w1, w0, #0xffffff80
  421e60:	mov	w0, #0x0                   	// #0
  421e64:	strb	w1, [x29, #107]
  421e68:	add	x1, x29, #0x68
  421e6c:	mov	x6, #0x4                   	// #4
  421e70:	mov	x4, #0x3                   	// #3
  421e74:	add	x3, x1, x4
  421e78:	add	x1, x1, x6
  421e7c:	b	421d6c <nftw@plt+0x1f1ec>
  421e80:	tst	w0, #0xf8
  421e84:	b.eq	421e68 <nftw@plt+0x1f2e8>  // b.none
  421e88:	orr	w1, w0, #0xffffff80
  421e8c:	mov	w0, #0x0                   	// #0
  421e90:	strb	w1, [x29, #106]
  421e94:	add	x1, x29, #0x68
  421e98:	add	x3, x29, #0x6a
  421e9c:	add	x1, x1, #0x3
  421ea0:	mov	x6, #0x5                   	// #5
  421ea4:	mov	x4, #0x4                   	// #4
  421ea8:	b	421d6c <nftw@plt+0x1f1ec>
  421eac:	tst	w0, #0xfc
  421eb0:	b.eq	421e94 <nftw@plt+0x1f314>  // b.none
  421eb4:	and	w1, w0, #0x3f
  421eb8:	lsr	w0, w4, #30
  421ebc:	orr	w1, w1, #0xffffff80
  421ec0:	strb	w1, [x29, #105]
  421ec4:	add	x1, x29, #0x68
  421ec8:	add	x3, x29, #0x69
  421ecc:	add	x1, x1, #0x2
  421ed0:	mov	x6, #0x6                   	// #6
  421ed4:	mov	x4, #0x5                   	// #5
  421ed8:	b	421d6c <nftw@plt+0x1f1ec>
  421edc:	mov	w4, #0x0                   	// #0
  421ee0:	b	421dfc <nftw@plt+0x1f27c>
  421ee4:	mov	x3, x23
  421ee8:	add	x1, x29, #0x6e
  421eec:	mov	x6, #0x2                   	// #2
  421ef0:	mov	x4, #0x1                   	// #1
  421ef4:	b	421d6c <nftw@plt+0x1f1ec>
  421ef8:	mov	x27, #0x0                   	// #0
  421efc:	b	421db4 <nftw@plt+0x1f234>
  421f00:	stp	x29, x30, [sp, #-128]!
  421f04:	mov	x29, sp
  421f08:	stp	x21, x22, [sp, #32]
  421f0c:	adrp	x22, 473000 <_obstack_memory_used@@Base+0x11bb8>
  421f10:	add	x22, x22, #0xfd8
  421f14:	mov	x21, x3
  421f18:	add	x8, sp, #0x50
  421f1c:	stp	x19, x20, [sp, #16]
  421f20:	mov	x19, x2
  421f24:	mov	x20, x4
  421f28:	mov	x2, x1
  421f2c:	mov	x1, x22
  421f30:	stp	x23, x24, [sp, #48]
  421f34:	mov	x24, x5
  421f38:	mov	x23, x6
  421f3c:	stp	x25, x26, [sp, #64]
  421f40:	mov	x25, x0
  421f44:	bl	41cc30 <nftw@plt+0x1a0b0>
  421f48:	ldr	x26, [sp, #80]
  421f4c:	adrp	x1, 41d000 <nftw@plt+0x1a480>
  421f50:	add	x1, x1, #0x8
  421f54:	cmp	x26, x1
  421f58:	b.eq	422068 <nftw@plt+0x1f4e8>  // b.none
  421f5c:	cmp	x20, #0x10, lsl #12
  421f60:	mov	x0, #0x10000               	// #65536
  421f64:	ldr	x21, [sp, #88]
  421f68:	csel	x0, x20, x0, cs  // cs = hs, nlast
  421f6c:	str	x0, [sp, #112]
  421f70:	bl	461560 <_obstack_memory_used@@Base+0x118>
  421f74:	str	x0, [sp, #104]
  421f78:	mov	x2, x20
  421f7c:	str	xzr, [sp, #120]
  421f80:	add	x3, sp, #0x68
  421f84:	mov	x1, x19
  421f88:	mov	x0, x21
  421f8c:	blr	x26
  421f90:	tst	w0, #0xff
  421f94:	b.eq	422074 <nftw@plt+0x1f4f4>  // b.none
  421f98:	mov	x0, x19
  421f9c:	bl	402910 <free@plt>
  421fa0:	adrp	x0, 41c000 <nftw@plt+0x19480>
  421fa4:	add	x0, x0, #0xe88
  421fa8:	cmp	x26, x0
  421fac:	b.eq	4220a8 <nftw@plt+0x1f528>  // b.none
  421fb0:	ldp	x19, x21, [sp, #104]
  421fb4:	ldr	x20, [sp, #120]
  421fb8:	add	x0, x20, #0x1, lsl #12
  421fbc:	cmp	x0, x21
  421fc0:	add	x1, x20, #0x10
  421fc4:	b.cc	42203c <nftw@plt+0x1f4bc>  // b.lo, b.ul, b.last
  421fc8:	cmp	x21, x1
  421fcc:	b.cc	42203c <nftw@plt+0x1f4bc>  // b.lo, b.ul, b.last
  421fd0:	add	x19, x19, x20
  421fd4:	stp	xzr, xzr, [x19]
  421fd8:	ldr	x0, [sp, #120]
  421fdc:	cbz	x0, 422060 <nftw@plt+0x1f4e0>
  421fe0:	ldr	x2, [sp, #104]
  421fe4:	add	x1, x2, x0
  421fe8:	ldurb	w3, [x1, #-1]
  421fec:	cmp	w3, #0xd
  421ff0:	b.eq	4220dc <nftw@plt+0x1f55c>  // b.none
  421ff4:	mov	w0, #0xa                   	// #10
  421ff8:	strb	w0, [x1]
  421ffc:	ldr	x1, [sp, #104]
  422000:	ldr	x2, [sp, #120]
  422004:	str	x2, [x23]
  422008:	mov	x0, x1
  42200c:	cmp	x2, #0x2
  422010:	b.ls	422020 <nftw@plt+0x1f4a0>  // b.plast
  422014:	ldrb	w3, [x1]
  422018:	cmp	w3, #0xef
  42201c:	b.eq	4220b4 <nftw@plt+0x1f534>  // b.none
  422020:	ldp	x19, x20, [sp, #16]
  422024:	ldp	x21, x22, [sp, #32]
  422028:	ldp	x25, x26, [sp, #64]
  42202c:	str	x1, [x24]
  422030:	ldp	x23, x24, [sp, #48]
  422034:	ldp	x29, x30, [sp], #128
  422038:	ret
  42203c:	mov	x0, x19
  422040:	bl	4615e8 <_obstack_memory_used@@Base+0x1a0>
  422044:	ldr	x20, [sp, #120]
  422048:	mov	x19, x0
  42204c:	str	x0, [sp, #104]
  422050:	add	x19, x19, x20
  422054:	stp	xzr, xzr, [x19]
  422058:	ldr	x0, [sp, #120]
  42205c:	cbnz	x0, 421fe0 <nftw@plt+0x1f460>
  422060:	ldr	x1, [sp, #104]
  422064:	b	421ff4 <nftw@plt+0x1f474>
  422068:	stp	x19, x21, [sp, #104]
  42206c:	str	x20, [sp, #120]
  422070:	b	421fb8 <nftw@plt+0x1f438>
  422074:	ldr	x3, [x25, #1184]
  422078:	mov	x4, x22
  42207c:	adrp	x2, 475000 <_obstack_memory_used@@Base+0x13bb8>
  422080:	add	x2, x2, #0x560
  422084:	mov	w1, #0x3                   	// #3
  422088:	mov	x0, x25
  42208c:	bl	427178 <nftw@plt+0x245f8>
  422090:	mov	x0, x19
  422094:	bl	402910 <free@plt>
  422098:	adrp	x0, 41c000 <nftw@plt+0x19480>
  42209c:	add	x0, x0, #0xe88
  4220a0:	cmp	x26, x0
  4220a4:	b.ne	421fb0 <nftw@plt+0x1f430>  // b.any
  4220a8:	mov	x0, x21
  4220ac:	bl	402560 <iconv_close@plt>
  4220b0:	b	421fb0 <nftw@plt+0x1f430>
  4220b4:	ldrb	w3, [x1, #1]
  4220b8:	cmp	w3, #0xbb
  4220bc:	b.ne	422020 <nftw@plt+0x1f4a0>  // b.any
  4220c0:	ldrb	w3, [x1, #2]
  4220c4:	cmp	w3, #0xbf
  4220c8:	b.ne	422020 <nftw@plt+0x1f4a0>  // b.any
  4220cc:	sub	x2, x2, #0x3
  4220d0:	add	x0, x1, #0x3
  4220d4:	str	x2, [x23]
  4220d8:	b	422020 <nftw@plt+0x1f4a0>
  4220dc:	strb	w3, [x2, x0]
  4220e0:	b	421ffc <nftw@plt+0x1f47c>
  4220e4:	nop
  4220e8:	adrp	x0, 473000 <_obstack_memory_used@@Base+0x11bb8>
  4220ec:	add	x0, x0, #0xfd8
  4220f0:	ret
  4220f4:	nop
  4220f8:	stp	x29, x30, [sp, #-32]!
  4220fc:	mov	x29, sp
  422100:	stp	x19, x20, [sp, #16]
  422104:	mov	x20, x0
  422108:	mov	x19, x2
  42210c:	mov	x0, x2
  422110:	str	x2, [x20, #8]
  422114:	bl	4360f0 <nftw@plt+0x33570>
  422118:	mov	w1, w0
  42211c:	mov	x3, #0x0                   	// #0
  422120:	mov	w2, #0x1                   	// #1
  422124:	mov	x0, x19
  422128:	bl	436ea8 <nftw@plt+0x34328>
  42212c:	mov	w1, w0
  422130:	str	w1, [x20]
  422134:	mov	x0, x19
  422138:	bl	435de8 <nftw@plt+0x33268>
  42213c:	ldrb	w0, [x0, #7]
  422140:	mov	w1, #0x1                   	// #1
  422144:	lsl	w1, w1, w0
  422148:	str	w1, [x20, #4]
  42214c:	ldp	x19, x20, [sp, #16]
  422150:	ldp	x29, x30, [sp], #32
  422154:	ret
  422158:	ldr	w1, [x0]
  42215c:	mov	w2, #0x60000000            	// #1610612736
  422160:	cmp	w1, w2
  422164:	b.hi	422174 <nftw@plt+0x1f5f4>  // b.pmore
  422168:	ldr	w2, [x0, #4]
  42216c:	add	w2, w2, w1
  422170:	str	w2, [x0]
  422174:	dup	v0.2s, w1
  422178:	mov	x0, v0.d[0]
  42217c:	ret
  422180:	ldrb	w3, [x1, #18]
  422184:	mov	w4, #0xffffffcd            	// #-51
  422188:	mov	w0, #0x1                   	// #1
  42218c:	str	xzr, [x1, #24]
  422190:	and	w3, w3, #0xfffffffc
  422194:	strb	w3, [x1, #18]
  422198:	ldrh	w2, [x1, #18]
  42219c:	mov	w3, w2
  4221a0:	ubfx	x2, x2, #2, #8
  4221a4:	and	w2, w2, w4
  4221a8:	bfi	w3, w2, #2, #8
  4221ac:	strh	w3, [x1, #18]
  4221b0:	ret
  4221b4:	nop
  4221b8:	stp	x29, x30, [sp, #-32]!
  4221bc:	mov	x29, sp
  4221c0:	stp	x19, x20, [sp, #16]
  4221c4:	mov	w20, #0x0                   	// #0
  4221c8:	cbz	x0, 4221e8 <nftw@plt+0x1f668>
  4221cc:	mov	x19, x0
  4221d0:	mov	w20, #0x0                   	// #0
  4221d4:	ldrb	w0, [x19, #16]
  4221d8:	cbnz	w0, 4221f8 <nftw@plt+0x1f678>
  4221dc:	ldr	x19, [x19]
  4221e0:	add	w20, w20, #0x1
  4221e4:	cbnz	x19, 4221d4 <nftw@plt+0x1f654>
  4221e8:	mov	w0, w20
  4221ec:	ldp	x19, x20, [sp, #16]
  4221f0:	ldp	x29, x30, [sp], #32
  4221f4:	ret
  4221f8:	ldr	x0, [x19, #24]
  4221fc:	bl	4221b8 <nftw@plt+0x1f638>
  422200:	add	w20, w0, w20
  422204:	ldr	x19, [x19]
  422208:	add	w20, w20, #0x1
  42220c:	cbnz	x19, 4221d4 <nftw@plt+0x1f654>
  422210:	mov	w0, w20
  422214:	ldp	x19, x20, [sp, #16]
  422218:	ldp	x29, x30, [sp], #32
  42221c:	ret
  422220:	stp	x29, x30, [sp, #-32]!
  422224:	mov	x29, sp
  422228:	stp	x19, x20, [sp, #16]
  42222c:	and	w20, w1, #0xff
  422230:	mov	x19, x0
  422234:	bl	434b58 <nftw@plt+0x31fd8>
  422238:	ldrb	w1, [x0, #4]
  42223c:	cmp	w1, #0x35
  422240:	b.eq	422278 <nftw@plt+0x1f6f8>  // b.none
  422244:	ldrh	w2, [x0, #6]
  422248:	tbnz	w2, #4, 4222e8 <nftw@plt+0x1f768>
  42224c:	cmp	w1, #0x16
  422250:	b.eq	4222bc <nftw@plt+0x1f73c>  // b.none
  422254:	mov	x0, x19
  422258:	adrp	x2, 47b000 <_obstack_memory_used@@Base+0x19bb8>
  42225c:	mov	w1, #0x3                   	// #3
  422260:	add	x2, x2, #0x158
  422264:	bl	427178 <nftw@plt+0x245f8>
  422268:	mov	x0, #0x0                   	// #0
  42226c:	ldp	x19, x20, [sp, #16]
  422270:	ldp	x29, x30, [sp], #32
  422274:	ret
  422278:	ldr	x0, [x0, #8]
  42227c:	cbz	w20, 4222a4 <nftw@plt+0x1f724>
  422280:	ldr	x1, [x19, #1248]
  422284:	cmp	x1, x0
  422288:	b.eq	422330 <nftw@plt+0x1f7b0>  // b.none
  42228c:	ldr	x1, [x19, #1288]
  422290:	cmp	x1, x0
  422294:	b.eq	422314 <nftw@plt+0x1f794>  // b.none
  422298:	ldr	x1, [x19, #1296]
  42229c:	cmp	x1, x0
  4222a0:	b.eq	422314 <nftw@plt+0x1f794>  // b.none
  4222a4:	ldrh	w1, [x0, #18]
  4222a8:	ldp	x19, x20, [sp, #16]
  4222ac:	tst	x1, #0x8
  4222b0:	csel	x0, x0, xzr, eq  // eq = none
  4222b4:	ldp	x29, x30, [sp], #32
  4222b8:	ret
  4222bc:	ldr	x3, [x19, #144]
  4222c0:	mov	x0, x19
  4222c4:	mov	w1, #0x3                   	// #3
  4222c8:	adrp	x2, 47b000 <_obstack_memory_used@@Base+0x19bb8>
  4222cc:	add	x2, x2, #0x130
  4222d0:	ldr	x3, [x3, #8]
  4222d4:	bl	427178 <nftw@plt+0x245f8>
  4222d8:	mov	x0, #0x0                   	// #0
  4222dc:	ldp	x19, x20, [sp, #16]
  4222e0:	ldp	x29, x30, [sp], #32
  4222e4:	ret
  4222e8:	ldr	x3, [x0, #8]
  4222ec:	mov	w1, #0x3                   	// #3
  4222f0:	mov	x0, x19
  4222f4:	adrp	x2, 47b000 <_obstack_memory_used@@Base+0x19bb8>
  4222f8:	add	x2, x2, #0xf0
  4222fc:	ldr	x3, [x3]
  422300:	bl	427178 <nftw@plt+0x245f8>
  422304:	mov	x0, #0x0                   	// #0
  422308:	ldp	x19, x20, [sp, #16]
  42230c:	ldp	x29, x30, [sp], #32
  422310:	ret
  422314:	mov	x0, x19
  422318:	adrp	x2, 47b000 <_obstack_memory_used@@Base+0x19bb8>
  42231c:	mov	w1, #0x3                   	// #3
  422320:	add	x2, x2, #0xb8
  422324:	bl	427178 <nftw@plt+0x245f8>
  422328:	mov	x0, #0x0                   	// #0
  42232c:	b	42226c <nftw@plt+0x1f6ec>
  422330:	mov	x0, x19
  422334:	adrp	x2, 47b000 <_obstack_memory_used@@Base+0x19bb8>
  422338:	mov	w1, #0x3                   	// #3
  42233c:	add	x2, x2, #0x88
  422340:	bl	427178 <nftw@plt+0x245f8>
  422344:	mov	x0, #0x0                   	// #0
  422348:	b	42226c <nftw@plt+0x1f6ec>
  42234c:	nop
  422350:	stp	x29, x30, [sp, #-32]!
  422354:	mov	x29, sp
  422358:	stp	x19, x20, [sp, #16]
  42235c:	mov	w20, w1
  422360:	mov	x19, x0
  422364:	bl	434b58 <nftw@plt+0x31fd8>
  422368:	mov	x1, x0
  42236c:	ldrb	w0, [x0, #4]
  422370:	cmp	w0, #0x37
  422374:	b.eq	422390 <nftw@plt+0x1f810>  // b.none
  422378:	cmp	w0, #0x16
  42237c:	mov	w0, #0x0                   	// #0
  422380:	b.ne	42239c <nftw@plt+0x1f81c>  // b.any
  422384:	ldp	x19, x20, [sp, #16]
  422388:	ldp	x29, x30, [sp], #32
  42238c:	ret
  422390:	ldr	w0, [x1, #8]
  422394:	cmp	w0, #0x1
  422398:	b.eq	4223cc <nftw@plt+0x1f84c>  // b.none
  42239c:	mov	x0, x19
  4223a0:	bl	4307f8 <nftw@plt+0x2dc78>
  4223a4:	mov	w1, #0x3                   	// #3
  4223a8:	mov	x3, x0
  4223ac:	adrp	x2, 47b000 <_obstack_memory_used@@Base+0x19bb8>
  4223b0:	mov	x0, x19
  4223b4:	add	x2, x2, #0x178
  4223b8:	bl	427178 <nftw@plt+0x245f8>
  4223bc:	mov	w0, #0x0                   	// #0
  4223c0:	ldp	x19, x20, [sp, #16]
  4223c4:	ldp	x29, x30, [sp], #32
  4223c8:	ret
  4223cc:	ldr	x0, [x1, #16]
  4223d0:	ldrb	w0, [x0]
  4223d4:	sub	w0, w0, #0x30
  4223d8:	cmp	w0, w20
  4223dc:	ccmp	w0, #0x4, #0x2, hi  // hi = pmore
  4223e0:	b.hi	42239c <nftw@plt+0x1f81c>  // b.pmore
  4223e4:	cmp	w0, #0x4
  4223e8:	ccmp	w20, #0x3, #0x4, eq  // eq = none
  4223ec:	b.ne	42239c <nftw@plt+0x1f81c>  // b.any
  4223f0:	cmp	w20, #0x0
  4223f4:	ccmp	w0, #0x2, #0x0, ne  // ne = any
  4223f8:	b.eq	42239c <nftw@plt+0x1f81c>  // b.none
  4223fc:	b	422384 <nftw@plt+0x1f804>
  422400:	stp	x29, x30, [sp, #-48]!
  422404:	mov	x29, sp
  422408:	stp	x19, x20, [sp, #16]
  42240c:	mov	x20, x0
  422410:	mov	w0, #0x1                   	// #1
  422414:	str	x21, [sp, #32]
  422418:	adrp	x21, 47b000 <_obstack_memory_used@@Base+0x19bb8>
  42241c:	add	x21, x21, #0x1c8
  422420:	strb	w0, [x20, #23]
  422424:	mov	x0, x20
  422428:	bl	434b58 <nftw@plt+0x31fd8>
  42242c:	ldrb	w1, [x0, #4]
  422430:	cmp	w1, #0x16
  422434:	b.eq	42247c <nftw@plt+0x1f8fc>  // b.none
  422438:	cmp	w1, #0x35
  42243c:	b.ne	4224a8 <nftw@plt+0x1f928>  // b.any
  422440:	ldr	x19, [x0, #8]
  422444:	ldrh	w1, [x19, #18]
  422448:	tbnz	w1, #3, 422424 <nftw@plt+0x1f8a4>
  42244c:	ldrb	w0, [x19, #18]
  422450:	tbnz	w0, #1, 422490 <nftw@plt+0x1f910>
  422454:	mov	x0, x19
  422458:	bl	43ac98 <nftw@plt+0x38118>
  42245c:	ldrh	w1, [x19, #18]
  422460:	mov	x0, x20
  422464:	orr	w1, w1, #0x18
  422468:	strh	w1, [x19, #18]
  42246c:	bl	434b58 <nftw@plt+0x31fd8>
  422470:	ldrb	w1, [x0, #4]
  422474:	cmp	w1, #0x16
  422478:	b.ne	422438 <nftw@plt+0x1f8b8>  // b.any
  42247c:	strb	wzr, [x20, #23]
  422480:	ldp	x19, x20, [sp, #16]
  422484:	ldr	x21, [sp, #32]
  422488:	ldp	x29, x30, [sp], #48
  42248c:	ret
  422490:	ldr	x3, [x19]
  422494:	mov	x2, x21
  422498:	mov	x0, x20
  42249c:	mov	w1, #0x0                   	// #0
  4224a0:	bl	427178 <nftw@plt+0x245f8>
  4224a4:	b	422454 <nftw@plt+0x1f8d4>
  4224a8:	mov	x0, x20
  4224ac:	mov	w1, #0x3                   	// #3
  4224b0:	adrp	x2, 47b000 <_obstack_memory_used@@Base+0x19bb8>
  4224b4:	add	x2, x2, #0x1a0
  4224b8:	bl	427178 <nftw@plt+0x245f8>
  4224bc:	strb	wzr, [x20, #23]
  4224c0:	ldp	x19, x20, [sp, #16]
  4224c4:	ldr	x21, [sp, #32]
  4224c8:	ldp	x29, x30, [sp], #48
  4224cc:	ret
  4224d0:	stp	x29, x30, [sp, #-96]!
  4224d4:	mov	x29, sp
  4224d8:	stp	x19, x20, [sp, #16]
  4224dc:	mov	x19, x0
  4224e0:	mov	w20, w1
  4224e4:	stp	x21, x22, [sp, #32]
  4224e8:	mov	x22, x2
  4224ec:	stp	x23, x24, [sp, #48]
  4224f0:	stp	x25, x26, [sp, #64]
  4224f4:	str	x27, [sp, #80]
  4224f8:	ldrb	w2, [x0, #24]
  4224fc:	add	w2, w2, #0x1
  422500:	strb	w2, [x0, #24]
  422504:	str	xzr, [x22]
  422508:	bl	43e370 <nftw@plt+0x3b7f0>
  42250c:	mov	x21, x0
  422510:	ldrb	w0, [x0, #4]
  422514:	cmp	w0, #0x16
  422518:	b.eq	4226d8 <nftw@plt+0x1fb58>  // b.none
  42251c:	ldr	w23, [x21]
  422520:	cmp	w0, #0x35
  422524:	b.ne	42259c <nftw@plt+0x1fa1c>  // b.any
  422528:	mov	x0, x19
  42252c:	bl	43e370 <nftw@plt+0x3b7f0>
  422530:	ldrb	w0, [x0, #4]
  422534:	cmp	w0, #0x14
  422538:	b.eq	422628 <nftw@plt+0x1faa8>  // b.none
  42253c:	cmp	w20, #0x4
  422540:	b.eq	42272c <nftw@plt+0x1fbac>  // b.none
  422544:	cmp	w0, #0x16
  422548:	ccmp	w20, #0x11, #0x0, eq  // eq = none
  42254c:	b.eq	4225d8 <nftw@plt+0x1fa58>  // b.none
  422550:	mov	w2, w23
  422554:	mov	x0, x19
  422558:	adrp	x4, 47b000 <_obstack_memory_used@@Base+0x19bb8>
  42255c:	mov	w3, #0x0                   	// #0
  422560:	add	x4, x4, #0x228
  422564:	mov	w1, #0x3                   	// #3
  422568:	bl	4275f8 <nftw@plt+0x24a78>
  42256c:	mov	x0, #0x0                   	// #0
  422570:	ldrb	w1, [x19, #24]
  422574:	sub	w1, w1, #0x1
  422578:	strb	w1, [x19, #24]
  42257c:	mov	sp, x29
  422580:	ldp	x19, x20, [sp, #16]
  422584:	ldp	x21, x22, [sp, #32]
  422588:	ldp	x23, x24, [sp, #48]
  42258c:	ldp	x25, x26, [sp, #64]
  422590:	ldr	x27, [sp, #80]
  422594:	ldp	x29, x30, [sp], #96
  422598:	ret
  42259c:	mov	w2, w23
  4225a0:	mov	x0, x19
  4225a4:	adrp	x4, 47b000 <_obstack_memory_used@@Base+0x19bb8>
  4225a8:	mov	w3, #0x0                   	// #0
  4225ac:	add	x4, x4, #0x208
  4225b0:	mov	w1, #0x3                   	// #3
  4225b4:	bl	4275f8 <nftw@plt+0x24a78>
  4225b8:	mov	x0, #0x0                   	// #0
  4225bc:	b	422570 <nftw@plt+0x1f9f0>
  4225c0:	cbz	w26, 42273c <nftw@plt+0x1fbbc>
  4225c4:	ldrh	w0, [x27, #30]
  4225c8:	str	w26, [x27, #12]
  4225cc:	and	w0, w0, #0xfffffffe
  4225d0:	strh	w0, [x27, #30]
  4225d4:	str	x27, [x22]
  4225d8:	ldr	x0, [x21, #8]
  4225dc:	mov	w1, #0x23                  	// #35
  4225e0:	ldr	w2, [x0, #8]
  4225e4:	add	w0, w2, #0x1
  4225e8:	add	w22, w2, #0x1
  4225ec:	add	x0, x0, #0xf
  4225f0:	mov	w2, w2
  4225f4:	and	x0, x0, #0x1fffffff0
  4225f8:	sub	sp, sp, x0
  4225fc:	mov	x20, sp
  422600:	mov	x0, x20
  422604:	strb	w1, [x0], #1
  422608:	ldr	x1, [x21, #8]
  42260c:	ldr	x1, [x1]
  422610:	bl	402490 <memcpy@plt>
  422614:	mov	w2, w22
  422618:	mov	x1, x20
  42261c:	mov	x0, x19
  422620:	bl	42eb68 <nftw@plt+0x2bfe8>
  422624:	b	422570 <nftw@plt+0x1f9f0>
  422628:	ldr	x0, [x19, #56]
  42262c:	ldp	x2, x0, [x0, #16]
  422630:	sub	x0, x0, x2
  422634:	cmp	x0, #0x2f
  422638:	b.ls	422710 <nftw@plt+0x1fb90>  // b.plast
  42263c:	mov	x0, x19
  422640:	mov	w1, #0x1                   	// #1
  422644:	add	x25, x19, #0x38
  422648:	bl	43ae28 <nftw@plt+0x382a8>
  42264c:	mov	w26, #0x0                   	// #0
  422650:	mov	x27, x0
  422654:	mov	w24, #0x18                  	// #24
  422658:	mov	x23, #0x48                  	// #72
  42265c:	str	xzr, [x0]
  422660:	b	422684 <nftw@plt+0x1fb04>
  422664:	ubfiz	x1, x26, #1, #32
  422668:	add	x1, x1, w26, uxtw
  42266c:	add	w26, w26, #0x1
  422670:	ldp	x2, x3, [x20]
  422674:	add	x1, x27, x1, lsl #3
  422678:	stp	x2, x3, [x1, #24]
  42267c:	ldr	x0, [x20, #16]
  422680:	str	x0, [x1, #40]
  422684:	mov	x0, x19
  422688:	bl	43e370 <nftw@plt+0x3b7f0>
  42268c:	mov	x20, x0
  422690:	ldrb	w0, [x0, #4]
  422694:	umaddl	x1, w26, w24, x23
  422698:	cmp	w0, #0x15
  42269c:	b.eq	4225c0 <nftw@plt+0x1fa40>  // b.none
  4226a0:	cmp	w0, #0x16
  4226a4:	b.eq	4226f4 <nftw@plt+0x1fb74>  // b.none
  4226a8:	ldr	x0, [x19, #56]
  4226ac:	ldp	x27, x0, [x0, #16]
  4226b0:	sub	x0, x0, x27
  4226b4:	cmp	x0, x1
  4226b8:	b.cs	422664 <nftw@plt+0x1fae4>  // b.hs, b.nlast
  4226bc:	mov	x0, x19
  4226c0:	mov	x1, x25
  4226c4:	mov	x2, #0x18                  	// #24
  4226c8:	bl	431618 <nftw@plt+0x2ea98>
  4226cc:	ldr	x0, [x19, #56]
  4226d0:	ldr	x27, [x0, #16]
  4226d4:	b	422664 <nftw@plt+0x1fae4>
  4226d8:	mov	x0, x19
  4226dc:	adrp	x2, 47b000 <_obstack_memory_used@@Base+0x19bb8>
  4226e0:	mov	w1, #0x3                   	// #3
  4226e4:	add	x2, x2, #0x1e8
  4226e8:	bl	427178 <nftw@plt+0x245f8>
  4226ec:	mov	x0, #0x0                   	// #0
  4226f0:	b	422570 <nftw@plt+0x1f9f0>
  4226f4:	mov	x0, x19
  4226f8:	adrp	x2, 47b000 <_obstack_memory_used@@Base+0x19bb8>
  4226fc:	mov	w1, #0x3                   	// #3
  422700:	add	x2, x2, #0x248
  422704:	bl	427178 <nftw@plt+0x245f8>
  422708:	mov	x0, #0x0                   	// #0
  42270c:	b	422570 <nftw@plt+0x1f9f0>
  422710:	mov	x0, x19
  422714:	mov	x2, #0x30                  	// #48
  422718:	add	x1, x19, #0x38
  42271c:	bl	431618 <nftw@plt+0x2ea98>
  422720:	ldr	x0, [x19, #56]
  422724:	ldr	x2, [x0, #16]
  422728:	b	42263c <nftw@plt+0x1fabc>
  42272c:	mov	x0, x19
  422730:	mov	w1, #0x1                   	// #1
  422734:	bl	43ab60 <nftw@plt+0x37fe0>
  422738:	b	4225d8 <nftw@plt+0x1fa58>
  42273c:	mov	x0, x19
  422740:	adrp	x2, 47b000 <_obstack_memory_used@@Base+0x19bb8>
  422744:	mov	w1, #0x3                   	// #3
  422748:	add	x2, x2, #0x268
  42274c:	bl	427178 <nftw@plt+0x245f8>
  422750:	mov	x0, #0x0                   	// #0
  422754:	b	422570 <nftw@plt+0x1f9f0>
  422758:	stp	x29, x30, [sp, #-48]!
  42275c:	mov	x29, sp
  422760:	str	x19, [sp, #16]
  422764:	mov	x19, x0
  422768:	bl	434b58 <nftw@plt+0x31fd8>
  42276c:	ldrb	w4, [x0, #4]
  422770:	cmp	w4, #0x3e
  422774:	b.eq	4227a0 <nftw@plt+0x1fc20>  // b.none
  422778:	mov	x0, x19
  42277c:	mov	w1, #0x3                   	// #3
  422780:	adrp	x3, 473000 <_obstack_memory_used@@Base+0x11bb8>
  422784:	adrp	x2, 47b000 <_obstack_memory_used@@Base+0x19bb8>
  422788:	add	x3, x3, #0x9a0
  42278c:	add	x2, x2, #0x288
  422790:	bl	427178 <nftw@plt+0x245f8>
  422794:	ldr	x19, [sp, #16]
  422798:	ldp	x29, x30, [sp], #48
  42279c:	ret
  4227a0:	add	x1, x0, #0x8
  4227a4:	add	x3, sp, #0x20
  4227a8:	mov	x0, x19
  4227ac:	mov	x2, #0x1                   	// #1
  4227b0:	bl	4215f0 <nftw@plt+0x1ea70>
  4227b4:	tst	w0, #0xff
  4227b8:	b.eq	422778 <nftw@plt+0x1fbf8>  // b.none
  4227bc:	ldr	w0, [sp, #32]
  4227c0:	cbz	w0, 422778 <nftw@plt+0x1fbf8>
  4227c4:	ldr	x3, [sp, #40]
  4227c8:	mov	w1, #0x0                   	// #0
  4227cc:	mov	x0, x19
  4227d0:	adrp	x2, 47b000 <_obstack_memory_used@@Base+0x19bb8>
  4227d4:	add	x2, x2, #0x3a0
  4227d8:	bl	427178 <nftw@plt+0x245f8>
  4227dc:	ldr	x0, [sp, #40]
  4227e0:	bl	402910 <free@plt>
  4227e4:	ldr	x19, [sp, #16]
  4227e8:	ldp	x29, x30, [sp], #48
  4227ec:	ret
  4227f0:	stp	x29, x30, [sp, #-64]!
  4227f4:	mov	x29, sp
  4227f8:	stp	x19, x20, [sp, #16]
  4227fc:	mov	x20, x0
  422800:	mov	x0, #0x400                 	// #1024
  422804:	stp	x21, x22, [sp, #32]
  422808:	mov	x21, #0x0                   	// #0
  42280c:	stp	x23, x24, [sp, #48]
  422810:	bl	461560 <_obstack_memory_used@@Base+0x118>
  422814:	mov	x22, x0
  422818:	mov	x24, #0x400                 	// #1024
  42281c:	mov	w23, #0x20                  	// #32
  422820:	mov	x0, x20
  422824:	bl	43e370 <nftw@plt+0x3b7f0>
  422828:	ldrb	w1, [x0, #4]
  42282c:	mov	x19, x0
  422830:	cmp	w1, #0x53
  422834:	b.eq	422820 <nftw@plt+0x1fca0>  // b.none
  422838:	cmp	w1, #0x2
  42283c:	b.eq	4228bc <nftw@plt+0x1fd3c>  // b.none
  422840:	cmp	w1, #0x16
  422844:	b.eq	4228a8 <nftw@plt+0x1fd28>  // b.none
  422848:	bl	430378 <nftw@plt+0x2d7f8>
  42284c:	add	w1, w0, #0x2
  422850:	add	x0, x21, x1
  422854:	cmp	x0, x24
  422858:	b.hi	42288c <nftw@plt+0x1fd0c>  // b.pmore
  42285c:	ldrh	w4, [x19, #6]
  422860:	add	x5, x21, #0x1
  422864:	mov	x1, x19
  422868:	mov	x0, x20
  42286c:	add	x2, x22, x21
  422870:	mov	w3, #0x1                   	// #1
  422874:	tbz	w4, #0, 422880 <nftw@plt+0x1fd00>
  422878:	add	x2, x22, x5
  42287c:	strb	w23, [x22, x21]
  422880:	bl	4306e0 <nftw@plt+0x2db60>
  422884:	sub	x21, x0, x22
  422888:	b	422820 <nftw@plt+0x1fca0>
  42288c:	add	x1, x24, x1
  422890:	mov	x0, x22
  422894:	lsl	x24, x1, #1
  422898:	mov	x1, x24
  42289c:	bl	4615e8 <_obstack_memory_used@@Base+0x1a0>
  4228a0:	mov	x22, x0
  4228a4:	b	42285c <nftw@plt+0x1fcdc>
  4228a8:	adrp	x2, 47b000 <_obstack_memory_used@@Base+0x19bb8>
  4228ac:	mov	x0, x20
  4228b0:	add	x2, x2, #0x2b0
  4228b4:	mov	w1, #0x3                   	// #3
  4228b8:	bl	427178 <nftw@plt+0x245f8>
  4228bc:	strb	wzr, [x22, x21]
  4228c0:	mov	x0, x22
  4228c4:	ldp	x19, x20, [sp, #16]
  4228c8:	ldp	x21, x22, [sp, #32]
  4228cc:	ldp	x23, x24, [sp, #48]
  4228d0:	ldp	x29, x30, [sp], #64
  4228d4:	ret
  4228d8:	stp	x29, x30, [sp, #-96]!
  4228dc:	mov	x29, sp
  4228e0:	stp	x19, x20, [sp, #16]
  4228e4:	add	x1, sp, #0x44
  4228e8:	mov	x20, x0
  4228ec:	stp	x21, x22, [sp, #32]
  4228f0:	ldrb	w2, [x0, #24]
  4228f4:	str	wzr, [sp, #68]
  4228f8:	add	w2, w2, #0x1
  4228fc:	strb	w2, [x0, #24]
  422900:	bl	43e420 <nftw@plt+0x3b8a0>
  422904:	mov	x21, x0
  422908:	ldp	x0, x1, [x0]
  42290c:	stp	x0, x1, [sp, #72]
  422910:	ldrb	w0, [x21, #4]
  422914:	ldr	x1, [x21, #16]
  422918:	str	x1, [sp, #88]
  42291c:	cmp	w0, #0x35
  422920:	b.eq	422968 <nftw@plt+0x1fde8>  // b.none
  422924:	ldr	x0, [x20, #960]
  422928:	mov	w1, #0x1                   	// #1
  42292c:	cbz	x0, 422948 <nftw@plt+0x1fdc8>
  422930:	mov	x0, x20
  422934:	bl	43ab60 <nftw@plt+0x37fe0>
  422938:	ldr	w1, [x20, #48]
  42293c:	mov	x0, x20
  422940:	ldr	x2, [x20, #960]
  422944:	blr	x2
  422948:	ldrb	w1, [x20, #24]
  42294c:	sub	w1, w1, #0x1
  422950:	and	w1, w1, #0xff
  422954:	strb	w1, [x20, #24]
  422958:	ldp	x19, x20, [sp, #16]
  42295c:	ldp	x21, x22, [sp, #32]
  422960:	ldp	x29, x30, [sp], #96
  422964:	ret
  422968:	ldr	x19, [x20, #896]
  42296c:	ldr	x1, [x21, #8]
  422970:	cbnz	x19, 422980 <nftw@plt+0x1fe00>
  422974:	b	422924 <nftw@plt+0x1fda4>
  422978:	ldr	x19, [x19]
  42297c:	cbz	x19, 422924 <nftw@plt+0x1fda4>
  422980:	ldr	x0, [x19, #8]
  422984:	cmp	x1, x0
  422988:	b.ne	422978 <nftw@plt+0x1fdf8>  // b.any
  42298c:	ldrb	w0, [x19, #16]
  422990:	cbz	w0, 422a60 <nftw@plt+0x1fee0>
  422994:	str	x23, [sp, #48]
  422998:	ldrb	w23, [x19, #19]
  42299c:	cbz	w23, 422b24 <nftw@plt+0x1ffa4>
  4229a0:	ldrb	w1, [x20, #24]
  4229a4:	mov	x0, x20
  4229a8:	sub	w1, w1, #0x1
  4229ac:	strb	w1, [x20, #24]
  4229b0:	bl	43e370 <nftw@plt+0x3b7f0>
  4229b4:	mov	x22, x0
  4229b8:	ldrb	w0, [x0, #4]
  4229bc:	cmp	w0, #0x35
  4229c0:	b.eq	422b80 <nftw@plt+0x20000>  // b.none
  4229c4:	ldrb	w1, [x20, #24]
  4229c8:	add	w0, w1, #0x1
  4229cc:	strb	w0, [x20, #24]
  4229d0:	ldr	x0, [x20, #960]
  4229d4:	cbz	x0, 422b5c <nftw@plt+0x1ffdc>
  4229d8:	ldr	x0, [x20, #136]
  4229dc:	ldr	x0, [x0, #8]
  4229e0:	cbz	x0, 422b18 <nftw@plt+0x1ff98>
  4229e4:	mov	x0, #0x30                  	// #48
  4229e8:	bl	461560 <_obstack_memory_used@@Base+0x118>
  4229ec:	ldp	x1, x6, [sp, #72]
  4229f0:	mov	x2, x0
  4229f4:	ldr	x5, [sp, #88]
  4229f8:	mov	w3, #0x2                   	// #2
  4229fc:	stp	x1, x6, [x2]
  422a00:	lsr	x0, x1, #48
  422a04:	str	x5, [x2, #16]
  422a08:	orr	w0, w0, #0x400
  422a0c:	strh	w0, [x2, #6]
  422a10:	mov	x1, #0x0                   	// #0
  422a14:	mov	x0, x20
  422a18:	ldp	x6, x7, [x22]
  422a1c:	stp	x6, x7, [x2, #24]
  422a20:	ldrh	w5, [x2, #30]
  422a24:	ldr	x6, [x22, #16]
  422a28:	orr	w5, w5, #0x400
  422a2c:	strh	w5, [x2, #30]
  422a30:	str	x6, [x2, #40]
  422a34:	bl	43a868 <nftw@plt+0x37ce8>
  422a38:	ldr	x23, [sp, #48]
  422a3c:	b	422938 <nftw@plt+0x1fdb8>
  422a40:	ldr	x19, [x19]
  422a44:	cbz	x19, 422b78 <nftw@plt+0x1fff8>
  422a48:	ldr	x1, [x19, #8]
  422a4c:	cmp	x0, x1
  422a50:	b.ne	422a40 <nftw@plt+0x1fec0>  // b.any
  422a54:	cbnz	w23, 422b64 <nftw@plt+0x1ffe4>
  422a58:	ldr	x23, [sp, #48]
  422a5c:	nop
  422a60:	ldrb	w0, [x19, #18]
  422a64:	cbz	w0, 422ac0 <nftw@plt+0x1ff40>
  422a68:	ldrh	w4, [x21, #6]
  422a6c:	mov	w0, #0x1                   	// #1
  422a70:	ldr	w3, [x19, #24]
  422a74:	mov	w5, #0x51                  	// #81
  422a78:	strb	w0, [x20, #32]
  422a7c:	ldrb	w1, [x20, #24]
  422a80:	ldrb	w2, [x19, #19]
  422a84:	sub	w0, w1, #0x1
  422a88:	ldr	w6, [sp, #68]
  422a8c:	cmp	w2, #0x0
  422a90:	and	w0, w0, #0xff
  422a94:	csel	w1, w0, w1, ne  // ne = any
  422a98:	strb	w1, [x20, #24]
  422a9c:	strb	w2, [x20, #33]
  422aa0:	str	w6, [x20, #152]
  422aa4:	strb	w5, [x20, #156]
  422aa8:	strh	w4, [x20, #158]
  422aac:	str	w3, [x20, #160]
  422ab0:	ldp	x19, x20, [sp, #16]
  422ab4:	ldp	x21, x22, [sp, #32]
  422ab8:	ldp	x29, x30, [sp], #96
  422abc:	ret
  422ac0:	ldr	x3, [x20, #904]
  422ac4:	cbz	x3, 422ad8 <nftw@plt+0x1ff58>
  422ac8:	mov	x1, x21
  422acc:	mov	x0, x20
  422ad0:	mov	w2, #0x0                   	// #0
  422ad4:	blr	x3
  422ad8:	ldrb	w0, [x19, #19]
  422adc:	cbz	w0, 422aec <nftw@plt+0x1ff6c>
  422ae0:	ldrb	w0, [x20, #24]
  422ae4:	sub	w0, w0, #0x1
  422ae8:	strb	w0, [x20, #24]
  422aec:	ldr	x1, [x19, #24]
  422af0:	mov	x0, x20
  422af4:	blr	x1
  422af8:	ldrb	w0, [x19, #19]
  422afc:	cbz	w0, 422948 <nftw@plt+0x1fdc8>
  422b00:	ldrb	w1, [x20, #24]
  422b04:	strb	w1, [x20, #24]
  422b08:	ldp	x19, x20, [sp, #16]
  422b0c:	ldp	x21, x22, [sp, #32]
  422b10:	ldp	x29, x30, [sp], #96
  422b14:	ret
  422b18:	mov	w1, #0x2                   	// #2
  422b1c:	ldr	x23, [sp, #48]
  422b20:	b	422930 <nftw@plt+0x1fdb0>
  422b24:	mov	x0, x20
  422b28:	bl	43e370 <nftw@plt+0x3b7f0>
  422b2c:	mov	x22, x0
  422b30:	ldrb	w0, [x0, #4]
  422b34:	cmp	w0, #0x35
  422b38:	b.ne	422b48 <nftw@plt+0x1ffc8>  // b.any
  422b3c:	ldr	x19, [x19, #24]
  422b40:	ldr	x0, [x22, #8]
  422b44:	cbnz	x19, 422a48 <nftw@plt+0x1fec8>
  422b48:	ldr	x0, [x20, #960]
  422b4c:	cbnz	x0, 4229d8 <nftw@plt+0x1fe58>
  422b50:	ldrb	w1, [x20, #24]
  422b54:	sub	w1, w1, #0x1
  422b58:	and	w1, w1, #0xff
  422b5c:	ldr	x23, [sp, #48]
  422b60:	b	422954 <nftw@plt+0x1fdd4>
  422b64:	ldrb	w0, [x20, #24]
  422b68:	add	w0, w0, #0x1
  422b6c:	strb	w0, [x20, #24]
  422b70:	ldr	x23, [sp, #48]
  422b74:	b	422a60 <nftw@plt+0x1fee0>
  422b78:	cbz	w23, 422b48 <nftw@plt+0x1ffc8>
  422b7c:	b	4229c4 <nftw@plt+0x1fe44>
  422b80:	ldr	x19, [x19, #24]
  422b84:	ldr	x0, [x22, #8]
  422b88:	cbnz	x19, 422a48 <nftw@plt+0x1fec8>
  422b8c:	b	4229c4 <nftw@plt+0x1fe44>
  422b90:	stp	x29, x30, [sp, #-32]!
  422b94:	adrp	x1, 47b000 <_obstack_memory_used@@Base+0x19bb8>
  422b98:	mov	x29, sp
  422b9c:	stp	x19, x20, [sp, #16]
  422ba0:	mov	x19, x0
  422ba4:	add	x0, x1, #0xab0
  422ba8:	ldr	x1, [x19, #144]
  422bac:	cmp	x1, x0
  422bb0:	b.eq	422c38 <nftw@plt+0x200b8>  // b.none
  422bb4:	cbz	x1, 422c50 <nftw@plt+0x200d0>
  422bb8:	ldrb	w2, [x1, #19]
  422bbc:	add	x3, x0, #0x60
  422bc0:	ldrb	w4, [x19, #18]
  422bc4:	eor	x2, x2, #0x10
  422bc8:	cmp	w4, #0x0
  422bcc:	cset	w20, ne  // ne = any
  422bd0:	ubfx	w2, w2, #4, #1
  422bd4:	cmp	x1, x3
  422bd8:	b.eq	422be8 <nftw@plt+0x20068>  // b.none
  422bdc:	add	x0, x0, #0xd8
  422be0:	cmp	x1, x0
  422be4:	b.ne	422ca0 <nftw@plt+0x20120>  // b.any
  422be8:	mov	w0, #0x1                   	// #1
  422bec:	strb	wzr, [x19, #18]
  422bf0:	strb	w0, [x19, #20]
  422bf4:	cbz	w2, 422c60 <nftw@plt+0x200e0>
  422bf8:	ldrb	w3, [x19, #24]
  422bfc:	mov	w2, #0x0                   	// #0
  422c00:	mov	x1, #0x0                   	// #0
  422c04:	mov	x0, x19
  422c08:	add	w3, w3, #0x1
  422c0c:	strb	w3, [x19, #24]
  422c10:	bl	440120 <nftw@plt+0x3d5a0>
  422c14:	strb	w20, [x19, #18]
  422c18:	ldrb	w0, [x19, #24]
  422c1c:	ldr	x1, [x19, #1312]
  422c20:	sub	w0, w0, #0x1
  422c24:	ldr	x2, [x19, #1328]
  422c28:	strb	w0, [x19, #24]
  422c2c:	mov	x0, x19
  422c30:	sub	x2, x2, x1
  422c34:	bl	4400b0 <nftw@plt+0x3d530>
  422c38:	ldrb	w0, [x19, #24]
  422c3c:	add	w0, w0, #0x1
  422c40:	strb	w0, [x19, #24]
  422c44:	ldp	x19, x20, [sp, #16]
  422c48:	ldp	x29, x30, [sp], #32
  422c4c:	ret
  422c50:	ldrb	w0, [x19, #18]
  422c54:	strb	wzr, [x19, #20]
  422c58:	cmp	w0, #0x0
  422c5c:	cset	w20, ne  // ne = any
  422c60:	mov	x0, x19
  422c64:	mov	w2, #0x0                   	// #0
  422c68:	mov	x1, #0x0                   	// #0
  422c6c:	bl	440120 <nftw@plt+0x3d5a0>
  422c70:	ldr	x1, [x19, #1312]
  422c74:	strb	w20, [x19, #18]
  422c78:	ldr	x2, [x19, #1328]
  422c7c:	mov	x0, x19
  422c80:	sub	x2, x2, x1
  422c84:	bl	4400b0 <nftw@plt+0x3d530>
  422c88:	ldrb	w0, [x19, #24]
  422c8c:	add	w0, w0, #0x1
  422c90:	strb	w0, [x19, #24]
  422c94:	ldp	x19, x20, [sp, #16]
  422c98:	ldp	x29, x30, [sp], #32
  422c9c:	ret
  422ca0:	strb	wzr, [x19, #20]
  422ca4:	b	422bf4 <nftw@plt+0x20074>
  422ca8:	stp	x29, x30, [sp, #-48]!
  422cac:	mov	x29, sp
  422cb0:	stp	x19, x20, [sp, #16]
  422cb4:	mov	x19, x1
  422cb8:	mov	x20, x2
  422cbc:	stp	x21, x22, [sp, #32]
  422cc0:	mov	x21, x0
  422cc4:	cbz	x1, 422d00 <nftw@plt+0x20180>
  422cc8:	ldrb	w0, [x19, #16]
  422ccc:	cbnz	w0, 422d14 <nftw@plt+0x20194>
  422cd0:	ldr	x22, [x20]
  422cd4:	mov	x0, x22
  422cd8:	bl	4024f0 <strlen@plt>
  422cdc:	mov	w2, w0
  422ce0:	mov	x1, x22
  422ce4:	mov	x0, x21
  422ce8:	bl	42eb68 <nftw@plt+0x2bfe8>
  422cec:	str	x0, [x19, #8]
  422cf0:	ldr	x0, [x20], #8
  422cf4:	bl	402910 <free@plt>
  422cf8:	ldr	x19, [x19]
  422cfc:	cbnz	x19, 422cc8 <nftw@plt+0x20148>
  422d00:	mov	x0, x20
  422d04:	ldp	x19, x20, [sp, #16]
  422d08:	ldp	x21, x22, [sp, #32]
  422d0c:	ldp	x29, x30, [sp], #48
  422d10:	ret
  422d14:	ldr	x1, [x19, #24]
  422d18:	mov	x2, x20
  422d1c:	mov	x0, x21
  422d20:	bl	422ca8 <nftw@plt+0x20128>
  422d24:	mov	x20, x0
  422d28:	ldr	x22, [x0]
  422d2c:	b	422cd4 <nftw@plt+0x20154>
  422d30:	stp	x29, x30, [sp, #-32]!
  422d34:	mov	x29, sp
  422d38:	stp	x19, x20, [sp, #16]
  422d3c:	mov	x20, x1
  422d40:	cbz	x0, 422db8 <nftw@plt+0x20238>
  422d44:	mov	x19, x0
  422d48:	mov	x20, x1
  422d4c:	ldrb	w0, [x19, #16]
  422d50:	cbnz	w0, 422d88 <nftw@plt+0x20208>
  422d54:	ldr	x1, [x19, #8]
  422d58:	ldr	x0, [x1]
  422d5c:	ldr	w1, [x1, #8]
  422d60:	add	w2, w1, #0x1
  422d64:	mov	w1, w1
  422d68:	bl	461630 <_obstack_memory_used@@Base+0x1e8>
  422d6c:	ldr	x19, [x19]
  422d70:	str	x0, [x20], #8
  422d74:	cbz	x19, 422db8 <nftw@plt+0x20238>
  422d78:	ldrb	w0, [x19, #16]
  422d7c:	mov	x1, x20
  422d80:	mov	x20, x1
  422d84:	cbz	w0, 422d54 <nftw@plt+0x201d4>
  422d88:	ldr	x0, [x19, #24]
  422d8c:	bl	422d30 <nftw@plt+0x201b0>
  422d90:	mov	x20, x0
  422d94:	ldr	x1, [x19, #8]
  422d98:	ldr	x0, [x1]
  422d9c:	ldr	w1, [x1, #8]
  422da0:	add	w2, w1, #0x1
  422da4:	mov	w1, w1
  422da8:	bl	461630 <_obstack_memory_used@@Base+0x1e8>
  422dac:	ldr	x19, [x19]
  422db0:	str	x0, [x20], #8
  422db4:	cbnz	x19, 422d78 <nftw@plt+0x201f8>
  422db8:	mov	x0, x20
  422dbc:	ldp	x19, x20, [sp, #16]
  422dc0:	ldp	x29, x30, [sp], #32
  422dc4:	ret
  422dc8:	stp	x29, x30, [sp, #-48]!
  422dcc:	mov	x29, sp
  422dd0:	stp	x19, x20, [sp, #16]
  422dd4:	mov	x20, x0
  422dd8:	mov	x0, x20
  422ddc:	bl	43e370 <nftw@plt+0x3b7f0>
  422de0:	mov	x19, x0
  422de4:	ldrb	w0, [x0, #4]
  422de8:	cmp	w0, #0x53
  422dec:	b.eq	422dd8 <nftw@plt+0x20258>  // b.none
  422df0:	cmp	w0, #0x16
  422df4:	b.eq	422e88 <nftw@plt+0x20308>  // b.none
  422df8:	cmp	w0, #0x14
  422dfc:	b.ne	422e74 <nftw@plt+0x202f4>  // b.any
  422e00:	mov	x0, x20
  422e04:	bl	43e370 <nftw@plt+0x3b7f0>
  422e08:	mov	x19, x0
  422e0c:	ldrb	w0, [x0, #4]
  422e10:	cmp	w0, #0x53
  422e14:	b.eq	422e00 <nftw@plt+0x20280>  // b.none
  422e18:	cmp	w0, #0x16
  422e1c:	b.eq	422e9c <nftw@plt+0x2031c>  // b.none
  422e20:	sub	w0, w0, #0x3e
  422e24:	and	w0, w0, #0xff
  422e28:	cmp	w0, #0x4
  422e2c:	b.hi	422e74 <nftw@plt+0x202f4>  // b.pmore
  422e30:	str	x21, [sp, #32]
  422e34:	nop
  422e38:	mov	x0, x20
  422e3c:	bl	43e370 <nftw@plt+0x3b7f0>
  422e40:	mov	x21, x0
  422e44:	ldrb	w0, [x0, #4]
  422e48:	cmp	w0, #0x53
  422e4c:	b.eq	422e38 <nftw@plt+0x202b8>  // b.none
  422e50:	cmp	w0, #0x16
  422e54:	b.eq	422eb0 <nftw@plt+0x20330>  // b.none
  422e58:	cmp	w0, #0x15
  422e5c:	ldr	x21, [sp, #32]
  422e60:	b.ne	422e74 <nftw@plt+0x202f4>  // b.any
  422e64:	mov	x0, x19
  422e68:	ldp	x19, x20, [sp, #16]
  422e6c:	ldp	x29, x30, [sp], #48
  422e70:	ret
  422e74:	mov	x19, #0x0                   	// #0
  422e78:	mov	x0, x19
  422e7c:	ldp	x19, x20, [sp, #16]
  422e80:	ldp	x29, x30, [sp], #48
  422e84:	ret
  422e88:	mov	x0, x20
  422e8c:	mov	w1, #0x1                   	// #1
  422e90:	bl	43ab60 <nftw@plt+0x37fe0>
  422e94:	ldrb	w0, [x19, #4]
  422e98:	b	422df8 <nftw@plt+0x20278>
  422e9c:	mov	x0, x20
  422ea0:	mov	w1, #0x1                   	// #1
  422ea4:	bl	43ab60 <nftw@plt+0x37fe0>
  422ea8:	ldrb	w0, [x19, #4]
  422eac:	b	422e20 <nftw@plt+0x202a0>
  422eb0:	mov	x0, x20
  422eb4:	mov	w1, #0x1                   	// #1
  422eb8:	bl	43ab60 <nftw@plt+0x37fe0>
  422ebc:	ldrb	w0, [x21, #4]
  422ec0:	b	422e58 <nftw@plt+0x202d8>
  422ec4:	nop
  422ec8:	stp	x29, x30, [sp, #-32]!
  422ecc:	mov	x29, sp
  422ed0:	ldr	x1, [x0]
  422ed4:	stp	x19, x20, [sp, #16]
  422ed8:	ldr	x19, [x1, #96]
  422edc:	cbz	x19, 422f40 <nftw@plt+0x203c0>
  422ee0:	ldr	w1, [x19, #28]
  422ee4:	mov	x20, x0
  422ee8:	cmp	w1, #0x5
  422eec:	b.eq	422f58 <nftw@plt+0x203d8>  // b.none
  422ef0:	ldrb	w0, [x19, #24]
  422ef4:	mov	w1, #0x9                   	// #9
  422ef8:	str	w1, [x19, #28]
  422efc:	cbz	w0, 422f18 <nftw@plt+0x20398>
  422f00:	mov	w0, #0x1                   	// #1
  422f04:	strb	w0, [x20, #18]
  422f08:	str	xzr, [x19, #16]
  422f0c:	ldp	x19, x20, [sp, #16]
  422f10:	ldp	x29, x30, [sp], #32
  422f14:	ret
  422f18:	mov	w1, #0x0                   	// #0
  422f1c:	mov	x0, x20
  422f20:	bl	429e48 <nftw@plt+0x272c8>
  422f24:	eor	w1, w0, #0x1
  422f28:	strb	w1, [x20, #18]
  422f2c:	str	xzr, [x19, #16]
  422f30:	strb	w0, [x19, #24]
  422f34:	ldp	x19, x20, [sp, #16]
  422f38:	ldp	x29, x30, [sp], #32
  422f3c:	ret
  422f40:	ldp	x19, x20, [sp, #16]
  422f44:	adrp	x2, 47b000 <_obstack_memory_used@@Base+0x19bb8>
  422f48:	ldp	x29, x30, [sp], #32
  422f4c:	add	x2, x2, #0x2d0
  422f50:	mov	w1, #0x3                   	// #3
  422f54:	b	427178 <nftw@plt+0x245f8>
  422f58:	mov	w1, #0x3                   	// #3
  422f5c:	adrp	x2, 47b000 <_obstack_memory_used@@Base+0x19bb8>
  422f60:	add	x2, x2, #0x2e8
  422f64:	bl	427178 <nftw@plt+0x245f8>
  422f68:	ldr	w2, [x19, #8]
  422f6c:	mov	x0, x20
  422f70:	adrp	x4, 47b000 <_obstack_memory_used@@Base+0x19bb8>
  422f74:	mov	w3, #0x0                   	// #0
  422f78:	add	x4, x4, #0x300
  422f7c:	mov	w1, #0x3                   	// #3
  422f80:	bl	4275f8 <nftw@plt+0x24a78>
  422f84:	b	422ef0 <nftw@plt+0x20370>
  422f88:	stp	x29, x30, [sp, #-96]!
  422f8c:	mov	x29, sp
  422f90:	stp	x19, x20, [sp, #16]
  422f94:	mov	x20, x0
  422f98:	stp	x21, x22, [sp, #32]
  422f9c:	mov	x22, x2
  422fa0:	mov	x21, x3
  422fa4:	stp	x23, x24, [sp, #48]
  422fa8:	mov	x23, x1
  422fac:	nop
  422fb0:	mov	x0, x20
  422fb4:	bl	43e370 <nftw@plt+0x3b7f0>
  422fb8:	ldrb	w4, [x0, #4]
  422fbc:	mov	x19, x0
  422fc0:	cmp	w4, #0x53
  422fc4:	b.eq	422fb0 <nftw@plt+0x20430>  // b.none
  422fc8:	ldr	w0, [x0]
  422fcc:	str	w0, [x21]
  422fd0:	ldrb	w0, [x19, #4]
  422fd4:	cmp	w0, #0x3e
  422fd8:	b.eq	423060 <nftw@plt+0x204e0>  // b.none
  422fdc:	cmp	w0, #0x44
  422fe0:	b.eq	423070 <nftw@plt+0x204f0>  // b.none
  422fe4:	cmp	w0, #0x3
  422fe8:	b.ne	4230b4 <nftw@plt+0x20534>  // b.any
  422fec:	mov	x0, x20
  422ff0:	bl	4227f0 <nftw@plt+0x1fc70>
  422ff4:	mov	x21, x0
  422ff8:	mov	w1, #0x1                   	// #1
  422ffc:	str	w1, [x23]
  423000:	ldr	x0, [x20, #144]
  423004:	adrp	x1, 47b000 <_obstack_memory_used@@Base+0x19bb8>
  423008:	add	x1, x1, #0xab0
  42300c:	add	x1, x1, #0x108
  423010:	cmp	x0, x1
  423014:	b.eq	423048 <nftw@plt+0x204c8>  // b.none
  423018:	cbz	x22, 423024 <nftw@plt+0x204a4>
  42301c:	ldrb	w0, [x20, #1123]
  423020:	cbz	w0, 423140 <nftw@plt+0x205c0>
  423024:	ldr	x0, [x20, #448]
  423028:	ldurb	w0, [x0, #-20]
  42302c:	cmp	w0, #0x16
  423030:	b.eq	423048 <nftw@plt+0x204c8>  // b.none
  423034:	mov	x0, x20
  423038:	bl	43e370 <nftw@plt+0x3b7f0>
  42303c:	ldrb	w0, [x0, #4]
  423040:	cmp	w0, #0x16
  423044:	b.ne	423100 <nftw@plt+0x20580>  // b.any
  423048:	mov	x0, x21
  42304c:	ldp	x19, x20, [sp, #16]
  423050:	ldp	x21, x22, [sp, #32]
  423054:	ldp	x23, x24, [sp, #48]
  423058:	ldp	x29, x30, [sp], #96
  42305c:	ret
  423060:	ldr	x0, [x19, #16]
  423064:	ldrb	w0, [x0]
  423068:	cmp	w0, #0x52
  42306c:	b.eq	4230b4 <nftw@plt+0x20534>  // b.none
  423070:	ldr	w0, [x19, #8]
  423074:	sub	w0, w0, #0x1
  423078:	bl	461560 <_obstack_memory_used@@Base+0x118>
  42307c:	ldr	x1, [x19, #16]
  423080:	mov	x21, x0
  423084:	ldr	w2, [x19, #8]
  423088:	add	x1, x1, #0x1
  42308c:	sub	w2, w2, #0x2
  423090:	bl	402490 <memcpy@plt>
  423094:	ldr	w0, [x19, #8]
  423098:	sub	w0, w0, #0x2
  42309c:	strb	wzr, [x21, w0, uxtw]
  4230a0:	ldrb	w0, [x19, #4]
  4230a4:	cmp	w0, #0x44
  4230a8:	cset	w0, eq  // eq = none
  4230ac:	str	w0, [x23]
  4230b0:	b	423000 <nftw@plt+0x20480>
  4230b4:	ldr	x1, [x20, #144]
  4230b8:	adrp	x0, 47b000 <_obstack_memory_used@@Base+0x19bb8>
  4230bc:	add	x0, x0, #0xab0
  4230c0:	add	x0, x0, #0x108
  4230c4:	cmp	x1, x0
  4230c8:	b.eq	423134 <nftw@plt+0x205b4>  // b.none
  4230cc:	ldr	x3, [x1, #8]
  4230d0:	mov	x0, x20
  4230d4:	mov	w1, #0x3                   	// #3
  4230d8:	mov	x21, #0x0                   	// #0
  4230dc:	adrp	x2, 47b000 <_obstack_memory_used@@Base+0x19bb8>
  4230e0:	add	x2, x2, #0x338
  4230e4:	bl	427178 <nftw@plt+0x245f8>
  4230e8:	mov	x0, x21
  4230ec:	ldp	x19, x20, [sp, #16]
  4230f0:	ldp	x21, x22, [sp, #32]
  4230f4:	ldp	x23, x24, [sp, #48]
  4230f8:	ldp	x29, x30, [sp], #96
  4230fc:	ret
  423100:	ldr	x3, [x20, #144]
  423104:	mov	x0, x20
  423108:	mov	w1, #0x0                   	// #0
  42310c:	adrp	x2, 47b000 <_obstack_memory_used@@Base+0x19bb8>
  423110:	add	x2, x2, #0x360
  423114:	ldr	x3, [x3, #8]
  423118:	bl	4273b8 <nftw@plt+0x24838>
  42311c:	mov	x0, x21
  423120:	ldp	x19, x20, [sp, #16]
  423124:	ldp	x21, x22, [sp, #32]
  423128:	ldp	x23, x24, [sp, #48]
  42312c:	ldp	x29, x30, [sp], #96
  423130:	ret
  423134:	adrp	x3, 47b000 <_obstack_memory_used@@Base+0x19bb8>
  423138:	add	x3, x3, #0x320
  42313c:	b	4230d0 <nftw@plt+0x20550>
  423140:	mov	x0, #0x40                  	// #64
  423144:	stp	x25, x26, [sp, #64]
  423148:	bl	461560 <_obstack_memory_used@@Base+0x118>
  42314c:	ldr	x1, [x20, #448]
  423150:	mov	x24, x0
  423154:	adrp	x25, 47b000 <_obstack_memory_used@@Base+0x19bb8>
  423158:	mov	x26, #0x8                   	// #8
  42315c:	add	x25, x25, #0x360
  423160:	mov	x23, #0x0                   	// #0
  423164:	ldurb	w0, [x1, #-20]
  423168:	cmp	w0, #0x16
  42316c:	b.eq	423210 <nftw@plt+0x20690>  // b.none
  423170:	str	x27, [sp, #80]
  423174:	nop
  423178:	mov	x0, x20
  42317c:	bl	434b58 <nftw@plt+0x31fd8>
  423180:	mov	x19, x0
  423184:	add	x27, x23, #0x1
  423188:	mov	x2, x25
  42318c:	mov	x0, x20
  423190:	mov	w1, #0x2                   	// #2
  423194:	ldrb	w3, [x19, #4]
  423198:	cmp	w3, #0x16
  42319c:	b.eq	4231e4 <nftw@plt+0x20664>  // b.none
  4231a0:	cmp	w3, #0x4f
  4231a4:	b.eq	4231b8 <nftw@plt+0x20638>  // b.none
  4231a8:	ldr	x3, [x20, #144]
  4231ac:	ldr	x3, [x3, #8]
  4231b0:	bl	427178 <nftw@plt+0x245f8>
  4231b4:	b	423178 <nftw@plt+0x205f8>
  4231b8:	cmp	x27, x26
  4231bc:	b.cs	4231cc <nftw@plt+0x2064c>  // b.hs, b.nlast
  4231c0:	str	x19, [x24, x23, lsl #3]
  4231c4:	mov	x23, x27
  4231c8:	b	423178 <nftw@plt+0x205f8>
  4231cc:	mov	x0, x24
  4231d0:	lsl	x1, x26, #4
  4231d4:	lsl	x26, x26, #1
  4231d8:	bl	4615e8 <_obstack_memory_used@@Base+0x1a0>
  4231dc:	mov	x24, x0
  4231e0:	b	4231c0 <nftw@plt+0x20640>
  4231e4:	ldr	x27, [sp, #80]
  4231e8:	add	x23, x24, x23, lsl #3
  4231ec:	ldp	x25, x26, [sp, #64]
  4231f0:	str	xzr, [x23]
  4231f4:	mov	x0, x21
  4231f8:	str	x24, [x22]
  4231fc:	ldp	x19, x20, [sp, #16]
  423200:	ldp	x21, x22, [sp, #32]
  423204:	ldp	x23, x24, [sp, #48]
  423208:	ldp	x29, x30, [sp], #96
  42320c:	ret
  423210:	mov	x23, x24
  423214:	b	4231ec <nftw@plt+0x2066c>
  423218:	stp	x29, x30, [sp, #-64]!
  42321c:	mov	x2, #0x0                   	// #0
  423220:	mov	x29, sp
  423224:	add	x3, sp, #0x3c
  423228:	add	x1, sp, #0x38
  42322c:	stp	x19, x20, [sp, #16]
  423230:	mov	x20, x0
  423234:	bl	422f88 <nftw@plt+0x20408>
  423238:	cbz	x0, 423264 <nftw@plt+0x206e4>
  42323c:	ldr	w2, [sp, #56]
  423240:	mov	x1, x0
  423244:	mov	x19, x0
  423248:	mov	x0, x20
  42324c:	bl	42e190 <nftw@plt+0x2b610>
  423250:	cmp	w0, #0x0
  423254:	b.lt	42330c <nftw@plt+0x2078c>  // b.tstop
  423258:	b.ne	423270 <nftw@plt+0x206f0>  // b.any
  42325c:	mov	x0, x19
  423260:	bl	402910 <free@plt>
  423264:	ldp	x19, x20, [sp, #16]
  423268:	ldp	x29, x30, [sp], #64
  42326c:	ret
  423270:	mov	x3, x19
  423274:	adrp	x2, 47b000 <_obstack_memory_used@@Base+0x19bb8>
  423278:	add	x2, x2, #0x3a8
  42327c:	mov	w1, #0x0                   	// #0
  423280:	mov	x0, x20
  423284:	bl	427178 <nftw@plt+0x245f8>
  423288:	mov	x0, x20
  42328c:	bl	43e370 <nftw@plt+0x3b7f0>
  423290:	ldrb	w0, [x0, #4]
  423294:	cmp	w0, #0x16
  423298:	b.eq	42325c <nftw@plt+0x206dc>  // b.none
  42329c:	mov	x0, x20
  4232a0:	mov	w1, #0x1                   	// #1
  4232a4:	stp	x21, x22, [sp, #32]
  4232a8:	bl	43ab60 <nftw@plt+0x37fe0>
  4232ac:	ldrb	w3, [x20, #24]
  4232b0:	ldr	x2, [x20, #448]
  4232b4:	add	w3, w3, #0x1
  4232b8:	mov	x1, #0x0                   	// #0
  4232bc:	mov	x0, x20
  4232c0:	ldur	w22, [x2, #-24]
  4232c4:	strb	w3, [x20, #24]
  4232c8:	bl	431228 <nftw@plt+0x2e6a8>
  4232cc:	mov	x21, x0
  4232d0:	ldrb	w0, [x20, #24]
  4232d4:	mov	w2, w22
  4232d8:	mov	x5, x21
  4232dc:	adrp	x4, 47b000 <_obstack_memory_used@@Base+0x19bb8>
  4232e0:	sub	w0, w0, #0x1
  4232e4:	add	x4, x4, #0x3a0
  4232e8:	strb	w0, [x20, #24]
  4232ec:	mov	w3, #0x0                   	// #0
  4232f0:	mov	w1, #0x0                   	// #0
  4232f4:	mov	x0, x20
  4232f8:	bl	4275f8 <nftw@plt+0x24a78>
  4232fc:	mov	x0, x21
  423300:	bl	402910 <free@plt>
  423304:	ldp	x21, x22, [sp, #32]
  423308:	b	42325c <nftw@plt+0x206dc>
  42330c:	mov	x0, x20
  423310:	mov	x3, x19
  423314:	adrp	x2, 47b000 <_obstack_memory_used@@Base+0x19bb8>
  423318:	mov	w1, #0x0                   	// #0
  42331c:	add	x2, x2, #0x388
  423320:	bl	427178 <nftw@plt+0x245f8>
  423324:	b	42325c <nftw@plt+0x206dc>
  423328:	stp	x29, x30, [sp, #-64]!
  42332c:	mov	x29, sp
  423330:	stp	x19, x20, [sp, #16]
  423334:	stp	x21, x22, [sp, #32]
  423338:	mov	x22, x1
  42333c:	mov	x21, x0
  423340:	stp	x23, x24, [sp, #48]
  423344:	mov	x23, x2
  423348:	and	w24, w3, #0xff
  42334c:	cbz	x1, 423420 <nftw@plt+0x208a0>
  423350:	mov	x0, x1
  423354:	bl	4024f0 <strlen@plt>
  423358:	mov	x1, x22
  42335c:	mov	w2, w0
  423360:	mov	x0, x21
  423364:	bl	42eb68 <nftw@plt+0x2bfe8>
  423368:	ldr	x5, [x21, #896]
  42336c:	mov	x20, x0
  423370:	cbnz	x5, 423380 <nftw@plt+0x20800>
  423374:	b	4234c4 <nftw@plt+0x20944>
  423378:	ldr	x5, [x5]
  42337c:	cbz	x5, 4234c4 <nftw@plt+0x20944>
  423380:	ldr	x6, [x5, #8]
  423384:	cmp	x20, x6
  423388:	b.ne	423378 <nftw@plt+0x207f8>  // b.any
  42338c:	ldrb	w0, [x5, #16]
  423390:	cbz	w0, 423444 <nftw@plt+0x208c4>
  423394:	ldrb	w0, [x5, #19]
  423398:	cmp	w0, w24
  42339c:	b.ne	423474 <nftw@plt+0x208f4>  // b.any
  4233a0:	add	x19, x5, #0x18
  4233a4:	mov	x0, x23
  4233a8:	bl	4024f0 <strlen@plt>
  4233ac:	mov	x1, x23
  4233b0:	mov	w2, w0
  4233b4:	mov	x0, x21
  4233b8:	bl	42eb68 <nftw@plt+0x2bfe8>
  4233bc:	ldr	x3, [x19]
  4233c0:	mov	x20, x0
  4233c4:	cbnz	x3, 4233d4 <nftw@plt+0x20854>
  4233c8:	b	4234fc <nftw@plt+0x2097c>
  4233cc:	ldr	x3, [x3]
  4233d0:	cbz	x3, 4234fc <nftw@plt+0x2097c>
  4233d4:	ldr	x5, [x3, #8]
  4233d8:	cmp	x20, x5
  4233dc:	b.ne	4233cc <nftw@plt+0x2084c>  // b.any
  4233e0:	ldrb	w0, [x3, #16]
  4233e4:	cbnz	w0, 423444 <nftw@plt+0x208c4>
  4233e8:	cbz	x22, 423494 <nftw@plt+0x20914>
  4233ec:	mov	x4, x23
  4233f0:	mov	x3, x22
  4233f4:	mov	x0, x21
  4233f8:	adrp	x2, 47b000 <_obstack_memory_used@@Base+0x19bb8>
  4233fc:	mov	w1, #0x4                   	// #4
  423400:	add	x2, x2, #0x490
  423404:	bl	427178 <nftw@plt+0x245f8>
  423408:	mov	x0, #0x0                   	// #0
  42340c:	ldp	x19, x20, [sp, #16]
  423410:	ldp	x21, x22, [sp, #32]
  423414:	ldp	x23, x24, [sp, #48]
  423418:	ldp	x29, x30, [sp], #64
  42341c:	ret
  423420:	add	x19, x0, #0x380
  423424:	cbz	w24, 4233a4 <nftw@plt+0x20824>
  423428:	mov	x3, x2
  42342c:	mov	w1, #0x4                   	// #4
  423430:	adrp	x2, 47b000 <_obstack_memory_used@@Base+0x19bb8>
  423434:	add	x2, x2, #0x410
  423438:	bl	427178 <nftw@plt+0x245f8>
  42343c:	mov	x0, #0x0                   	// #0
  423440:	b	42340c <nftw@plt+0x2088c>
  423444:	ldr	x3, [x20]
  423448:	mov	x0, x21
  42344c:	mov	w1, #0x4                   	// #4
  423450:	adrp	x2, 47b000 <_obstack_memory_used@@Base+0x19bb8>
  423454:	add	x2, x2, #0x450
  423458:	bl	427178 <nftw@plt+0x245f8>
  42345c:	mov	x0, #0x0                   	// #0
  423460:	ldp	x19, x20, [sp, #16]
  423464:	ldp	x21, x22, [sp, #32]
  423468:	ldp	x23, x24, [sp, #48]
  42346c:	ldp	x29, x30, [sp], #64
  423470:	ret
  423474:	mov	x3, x22
  423478:	mov	x0, x21
  42347c:	adrp	x2, 47b000 <_obstack_memory_used@@Base+0x19bb8>
  423480:	mov	w1, #0x4                   	// #4
  423484:	add	x2, x2, #0x3c8
  423488:	bl	427178 <nftw@plt+0x245f8>
  42348c:	mov	x0, #0x0                   	// #0
  423490:	b	42340c <nftw@plt+0x2088c>
  423494:	mov	x3, x23
  423498:	mov	x0, x21
  42349c:	mov	w1, #0x4                   	// #4
  4234a0:	adrp	x2, 47b000 <_obstack_memory_used@@Base+0x19bb8>
  4234a4:	add	x2, x2, #0x4b8
  4234a8:	bl	427178 <nftw@plt+0x245f8>
  4234ac:	mov	x0, #0x0                   	// #0
  4234b0:	ldp	x19, x20, [sp, #16]
  4234b4:	ldp	x21, x22, [sp, #32]
  4234b8:	ldp	x23, x24, [sp, #48]
  4234bc:	ldp	x29, x30, [sp], #64
  4234c0:	ret
  4234c4:	mov	x1, #0x20                  	// #32
  4234c8:	mov	x0, x21
  4234cc:	bl	434e60 <nftw@plt+0x322e0>
  4234d0:	mov	x5, x0
  4234d4:	mov	w0, #0x1                   	// #1
  4234d8:	stp	xzr, xzr, [x5]
  4234dc:	stp	xzr, xzr, [x5, #16]
  4234e0:	ldr	x1, [x21, #896]
  4234e4:	str	x1, [x5]
  4234e8:	str	x5, [x21, #896]
  4234ec:	str	x20, [x5, #8]
  4234f0:	strb	w0, [x5, #16]
  4234f4:	strb	w24, [x5, #19]
  4234f8:	b	4233a0 <nftw@plt+0x20820>
  4234fc:	mov	x1, #0x20                  	// #32
  423500:	mov	x0, x21
  423504:	bl	434e60 <nftw@plt+0x322e0>
  423508:	stp	xzr, xzr, [x0]
  42350c:	stp	xzr, xzr, [x0, #16]
  423510:	ldr	x1, [x19]
  423514:	str	x1, [x0]
  423518:	str	x0, [x19]
  42351c:	str	x20, [x0, #8]
  423520:	b	42340c <nftw@plt+0x2088c>
  423524:	nop
  423528:	stp	x29, x30, [sp, #-48]!
  42352c:	mov	x29, sp
  423530:	str	x19, [sp, #16]
  423534:	mov	x19, x0
  423538:	bl	434b58 <nftw@plt+0x31fd8>
  42353c:	ldrb	w4, [x0, #4]
  423540:	cmp	w4, #0x3e
  423544:	b.eq	423570 <nftw@plt+0x209f0>  // b.none
  423548:	mov	x0, x19
  42354c:	mov	w1, #0x3                   	// #3
  423550:	adrp	x3, 481000 <_obstack_memory_used@@Base+0x1fbb8>
  423554:	adrp	x2, 47b000 <_obstack_memory_used@@Base+0x19bb8>
  423558:	add	x3, x3, #0xe50
  42355c:	add	x2, x2, #0x288
  423560:	bl	427178 <nftw@plt+0x245f8>
  423564:	ldr	x19, [sp, #16]
  423568:	ldp	x29, x30, [sp], #48
  42356c:	ret
  423570:	add	x1, x0, #0x8
  423574:	add	x3, sp, #0x20
  423578:	mov	x0, x19
  42357c:	mov	x2, #0x1                   	// #1
  423580:	bl	4215f0 <nftw@plt+0x1ea70>
  423584:	tst	w0, #0xff
  423588:	b.eq	423548 <nftw@plt+0x209c8>  // b.none
  42358c:	ldr	w0, [sp, #32]
  423590:	cbz	w0, 423548 <nftw@plt+0x209c8>
  423594:	ldr	x3, [sp, #40]
  423598:	mov	w1, #0x3                   	// #3
  42359c:	mov	x0, x19
  4235a0:	adrp	x2, 47b000 <_obstack_memory_used@@Base+0x19bb8>
  4235a4:	add	x2, x2, #0x3a0
  4235a8:	bl	427178 <nftw@plt+0x245f8>
  4235ac:	ldr	x0, [sp, #40]
  4235b0:	bl	402910 <free@plt>
  4235b4:	ldr	x19, [sp, #16]
  4235b8:	ldp	x29, x30, [sp], #48
  4235bc:	ret
  4235c0:	stp	x29, x30, [sp, #-48]!
  4235c4:	mov	x29, sp
  4235c8:	ldr	x1, [x0, #144]
  4235cc:	stp	x19, x20, [sp, #16]
  4235d0:	mov	x19, x0
  4235d4:	ldr	x2, [x0, #448]
  4235d8:	ldr	x1, [x1, #8]
  4235dc:	str	x21, [sp, #32]
  4235e0:	ldur	w21, [x2, #-24]
  4235e4:	ldrb	w3, [x0, #24]
  4235e8:	add	w3, w3, #0x1
  4235ec:	strb	w3, [x0, #24]
  4235f0:	bl	431228 <nftw@plt+0x2e6a8>
  4235f4:	mov	x20, x0
  4235f8:	ldrb	w1, [x19, #24]
  4235fc:	mov	w2, w21
  423600:	mov	x5, x20
  423604:	mov	x0, x19
  423608:	sub	w1, w1, #0x1
  42360c:	strb	w1, [x19, #24]
  423610:	mov	w3, #0x0                   	// #0
  423614:	mov	w1, #0x3                   	// #3
  423618:	adrp	x4, 47b000 <_obstack_memory_used@@Base+0x19bb8>
  42361c:	add	x4, x4, #0x3a0
  423620:	bl	4275f8 <nftw@plt+0x24a78>
  423624:	mov	x0, x20
  423628:	ldp	x19, x20, [sp, #16]
  42362c:	ldr	x21, [sp, #32]
  423630:	ldp	x29, x30, [sp], #48
  423634:	b	402910 <free@plt>
  423638:	stp	x29, x30, [sp, #-48]!
  42363c:	mov	x29, sp
  423640:	ldr	x1, [x0, #144]
  423644:	stp	x19, x20, [sp, #16]
  423648:	mov	x19, x0
  42364c:	ldr	x2, [x0, #448]
  423650:	ldr	x1, [x1, #8]
  423654:	str	x21, [sp, #32]
  423658:	ldur	w21, [x2, #-24]
  42365c:	ldrb	w3, [x0, #24]
  423660:	add	w3, w3, #0x1
  423664:	strb	w3, [x0, #24]
  423668:	bl	431228 <nftw@plt+0x2e6a8>
  42366c:	mov	x20, x0
  423670:	ldrb	w1, [x19, #24]
  423674:	mov	w2, w21
  423678:	mov	x5, x20
  42367c:	mov	x0, x19
  423680:	sub	w1, w1, #0x1
  423684:	strb	w1, [x19, #24]
  423688:	mov	w3, #0x0                   	// #0
  42368c:	mov	w1, #0x12                  	// #18
  423690:	adrp	x4, 47b000 <_obstack_memory_used@@Base+0x19bb8>
  423694:	add	x4, x4, #0x3a0
  423698:	bl	427770 <nftw@plt+0x24bf0>
  42369c:	mov	x0, x20
  4236a0:	ldp	x19, x20, [sp, #16]
  4236a4:	ldr	x21, [sp, #32]
  4236a8:	ldp	x29, x30, [sp], #48
  4236ac:	b	402910 <free@plt>
  4236b0:	stp	x29, x30, [sp, #-64]!
  4236b4:	mov	x29, sp
  4236b8:	stp	x19, x20, [sp, #16]
  4236bc:	mov	x19, x0
  4236c0:	stp	x21, x22, [sp, #32]
  4236c4:	stp	x23, x24, [sp, #48]
  4236c8:	mov	w24, #0x1                   	// #1
  4236cc:	mov	w23, #0x0                   	// #0
  4236d0:	ldrb	w1, [x0, #18]
  4236d4:	cbz	w1, 4237c4 <nftw@plt+0x20c44>
  4236d8:	add	x20, x19, #0x328
  4236dc:	ldr	x22, [x19]
  4236e0:	ldp	x1, x5, [x20, #24]
  4236e4:	ldr	x21, [x19, #432]
  4236e8:	sub	x2, x5, x1
  4236ec:	cmp	x2, #0x1f
  4236f0:	b.ls	4237f0 <nftw@plt+0x20c70>  // b.plast
  4236f4:	add	x2, x1, #0x20
  4236f8:	ldr	x1, [x20, #16]
  4236fc:	cmp	x2, x1
  423700:	b.eq	423810 <nftw@plt+0x20c90>  // b.none
  423704:	ldr	x3, [x20, #48]
  423708:	ldr	x4, [x20, #8]
  42370c:	add	x2, x2, x3
  423710:	bic	x2, x2, x3
  423714:	str	x2, [x20, #24]
  423718:	sub	x3, x2, x4
  42371c:	sub	x4, x5, x4
  423720:	cmp	x3, x4
  423724:	b.ls	423730 <nftw@plt+0x20bb0>  // b.plast
  423728:	mov	x2, x5
  42372c:	str	x5, [x20, #24]
  423730:	ldr	x3, [x22, #96]
  423734:	str	x2, [x20, #16]
  423738:	ldr	w2, [x19, #48]
  42373c:	mov	w4, #0x4                   	// #4
  423740:	str	x3, [x1]
  423744:	str	w2, [x1, #8]
  423748:	ldrb	w3, [x19, #440]
  42374c:	ldrb	w2, [x19, #18]
  423750:	str	w4, [x1, #28]
  423754:	cmp	w2, #0x0
  423758:	cset	w2, ne  // ne = any
  42375c:	strb	w2, [x1, #25]
  423760:	cmp	w2, #0x0
  423764:	ccmp	w23, #0x0, #0x0, eq  // eq = none
  423768:	cset	w0, ne  // ne = any
  42376c:	strb	w0, [x1, #24]
  423770:	cbz	w3, 4237a0 <nftw@plt+0x20c20>
  423774:	ldr	x0, [x19, #424]
  423778:	cmp	x0, #0x0
  42377c:	csel	x21, x21, xzr, eq  // eq = none
  423780:	str	x21, [x1, #16]
  423784:	strb	w24, [x19, #18]
  423788:	ldp	x19, x20, [sp, #16]
  42378c:	ldp	x23, x24, [sp, #48]
  423790:	str	x1, [x22, #96]
  423794:	ldp	x21, x22, [sp, #32]
  423798:	ldp	x29, x30, [sp], #64
  42379c:	ret
  4237a0:	mov	x21, #0x0                   	// #0
  4237a4:	str	x21, [x1, #16]
  4237a8:	strb	w24, [x19, #18]
  4237ac:	ldp	x19, x20, [sp, #16]
  4237b0:	ldp	x23, x24, [sp, #48]
  4237b4:	str	x1, [x22, #96]
  4237b8:	ldp	x21, x22, [sp, #32]
  4237bc:	ldp	x29, x30, [sp], #64
  4237c0:	ret
  4237c4:	add	x20, x19, #0x328
  4237c8:	mov	w1, w24
  4237cc:	bl	429e48 <nftw@plt+0x272c8>
  4237d0:	and	w23, w0, #0xff
  4237d4:	eor	w24, w23, w24
  4237d8:	ldp	x1, x5, [x20, #24]
  4237dc:	ldr	x22, [x19]
  4237e0:	ldr	x21, [x19, #432]
  4237e4:	sub	x2, x5, x1
  4237e8:	cmp	x2, #0x1f
  4237ec:	b.hi	4236f4 <nftw@plt+0x20b74>  // b.pmore
  4237f0:	mov	x1, #0x20                  	// #32
  4237f4:	mov	x0, x20
  4237f8:	bl	461200 <_obstack_newchunk@@Base>
  4237fc:	ldp	x1, x5, [x20, #24]
  423800:	add	x2, x1, #0x20
  423804:	ldr	x1, [x20, #16]
  423808:	cmp	x2, x1
  42380c:	b.ne	423704 <nftw@plt+0x20b84>  // b.any
  423810:	ldrb	w0, [x20, #80]
  423814:	orr	w0, w0, #0x2
  423818:	strb	w0, [x20, #80]
  42381c:	b	423704 <nftw@plt+0x20b84>
  423820:	stp	x29, x30, [sp, #-32]!
  423824:	mov	x29, sp
  423828:	ldr	x1, [x0, #40]
  42382c:	ldr	w1, [x1, #48]
  423830:	str	x19, [sp, #16]
  423834:	mov	x19, x0
  423838:	cmp	w1, #0x1
  42383c:	b.eq	4238b0 <nftw@plt+0x20d30>  // b.none
  423840:	ldr	x0, [x19, #448]
  423844:	ldurb	w0, [x0, #-20]
  423848:	cmp	w0, #0x16
  42384c:	b.eq	423864 <nftw@plt+0x20ce4>  // b.none
  423850:	mov	x0, x19
  423854:	bl	434b58 <nftw@plt+0x31fd8>
  423858:	ldrb	w0, [x0, #4]
  42385c:	cmp	w0, #0x16
  423860:	b.ne	42387c <nftw@plt+0x20cfc>  // b.any
  423864:	ldr	x1, [x19]
  423868:	mov	x0, x19
  42386c:	ldr	x19, [sp, #16]
  423870:	ldp	x29, x30, [sp], #32
  423874:	ldr	x1, [x1, #80]
  423878:	b	42d878 <nftw@plt+0x2acf8>
  42387c:	ldr	x3, [x19, #144]
  423880:	mov	x0, x19
  423884:	mov	w1, #0x0                   	// #0
  423888:	adrp	x2, 47b000 <_obstack_memory_used@@Base+0x19bb8>
  42388c:	add	x2, x2, #0x360
  423890:	ldr	x3, [x3, #8]
  423894:	bl	4273b8 <nftw@plt+0x24838>
  423898:	ldr	x1, [x19]
  42389c:	mov	x0, x19
  4238a0:	ldr	x19, [sp, #16]
  4238a4:	ldp	x29, x30, [sp], #32
  4238a8:	ldr	x1, [x1, #80]
  4238ac:	b	42d878 <nftw@plt+0x2acf8>
  4238b0:	adrp	x2, 47b000 <_obstack_memory_used@@Base+0x19bb8>
  4238b4:	mov	w1, #0x0                   	// #0
  4238b8:	add	x2, x2, #0x4e0
  4238bc:	bl	427178 <nftw@plt+0x245f8>
  4238c0:	b	423840 <nftw@plt+0x20cc0>
  4238c4:	nop
  4238c8:	stp	x29, x30, [sp, #-32]!
  4238cc:	mov	x29, sp
  4238d0:	str	x19, [sp, #16]
  4238d4:	mov	x19, x0
  4238d8:	bl	43e370 <nftw@plt+0x3b7f0>
  4238dc:	ldrb	w1, [x0, #4]
  4238e0:	cmp	w1, #0x3e
  4238e4:	b.ne	423954 <nftw@plt+0x20dd4>  // b.any
  4238e8:	ldr	x3, [x19, #952]
  4238ec:	cbz	x3, 423900 <nftw@plt+0x20d80>
  4238f0:	ldr	w1, [x19, #48]
  4238f4:	add	x2, x0, #0x8
  4238f8:	mov	x0, x19
  4238fc:	blr	x3
  423900:	ldr	x0, [x19, #448]
  423904:	ldurb	w0, [x0, #-20]
  423908:	cmp	w0, #0x16
  42390c:	b.eq	423924 <nftw@plt+0x20da4>  // b.none
  423910:	mov	x0, x19
  423914:	bl	434b58 <nftw@plt+0x31fd8>
  423918:	ldrb	w0, [x0, #4]
  42391c:	cmp	w0, #0x16
  423920:	b.ne	423930 <nftw@plt+0x20db0>  // b.any
  423924:	ldr	x19, [sp, #16]
  423928:	ldp	x29, x30, [sp], #32
  42392c:	ret
  423930:	ldr	x3, [x19, #144]
  423934:	mov	x0, x19
  423938:	ldr	x19, [sp, #16]
  42393c:	adrp	x2, 47b000 <_obstack_memory_used@@Base+0x19bb8>
  423940:	ldp	x29, x30, [sp], #32
  423944:	add	x2, x2, #0x360
  423948:	ldr	x3, [x3, #8]
  42394c:	mov	w1, #0x0                   	// #0
  423950:	b	4273b8 <nftw@plt+0x24838>
  423954:	ldr	x3, [x19, #144]
  423958:	mov	x0, x19
  42395c:	adrp	x2, 47b000 <_obstack_memory_used@@Base+0x19bb8>
  423960:	mov	w1, #0x3                   	// #3
  423964:	add	x2, x2, #0x500
  423968:	ldr	x3, [x3, #8]
  42396c:	bl	427178 <nftw@plt+0x245f8>
  423970:	b	423900 <nftw@plt+0x20d80>
  423974:	nop
  423978:	ldr	x1, [x0, #40]
  42397c:	ldr	w1, [x1, #48]
  423980:	cmp	w1, #0x1
  423984:	b.eq	423a3c <nftw@plt+0x20ebc>  // b.none
  423988:	stp	x29, x30, [sp, #-32]!
  42398c:	mov	x29, sp
  423990:	ldr	x1, [x0, #448]
  423994:	str	x19, [sp, #16]
  423998:	mov	x19, x0
  42399c:	ldurb	w1, [x1, #-20]
  4239a0:	cmp	w1, #0x16
  4239a4:	b.eq	423a2c <nftw@plt+0x20eac>  // b.none
  4239a8:	bl	434b58 <nftw@plt+0x31fd8>
  4239ac:	ldrb	w0, [x0, #4]
  4239b0:	cmp	w0, #0x16
  4239b4:	b.eq	4239e0 <nftw@plt+0x20e60>  // b.none
  4239b8:	ldr	x3, [x19, #144]
  4239bc:	mov	x0, x19
  4239c0:	adrp	x2, 47b000 <_obstack_memory_used@@Base+0x19bb8>
  4239c4:	mov	w1, #0x0                   	// #0
  4239c8:	add	x2, x2, #0x360
  4239cc:	ldr	x3, [x3, #8]
  4239d0:	bl	4273b8 <nftw@plt+0x24838>
  4239d4:	b	4239e0 <nftw@plt+0x20e60>
  4239d8:	mov	x0, x19
  4239dc:	bl	43a9a8 <nftw@plt+0x37e28>
  4239e0:	ldr	x0, [x19, #136]
  4239e4:	ldr	x0, [x0, #8]
  4239e8:	cbnz	x0, 4239d8 <nftw@plt+0x20e58>
  4239ec:	ldr	x0, [x19, #448]
  4239f0:	ldurb	w0, [x0, #-20]
  4239f4:	cmp	w0, #0x16
  4239f8:	b.eq	423a14 <nftw@plt+0x20e94>  // b.none
  4239fc:	nop
  423a00:	mov	x0, x19
  423a04:	bl	434b58 <nftw@plt+0x31fd8>
  423a08:	ldrb	w0, [x0, #4]
  423a0c:	cmp	w0, #0x16
  423a10:	b.ne	423a00 <nftw@plt+0x20e80>  // b.any
  423a14:	mov	x0, x19
  423a18:	mov	w2, #0x0                   	// #0
  423a1c:	ldr	x19, [sp, #16]
  423a20:	mov	w1, #0x1                   	// #1
  423a24:	ldp	x29, x30, [sp], #32
  423a28:	b	42e008 <nftw@plt+0x2b488>
  423a2c:	ldr	x0, [x0, #136]
  423a30:	ldr	x0, [x0, #8]
  423a34:	cbnz	x0, 4239d8 <nftw@plt+0x20e58>
  423a38:	b	423a14 <nftw@plt+0x20e94>
  423a3c:	adrp	x2, 47b000 <_obstack_memory_used@@Base+0x19bb8>
  423a40:	mov	w1, #0x0                   	// #0
  423a44:	add	x2, x2, #0x518
  423a48:	b	427178 <nftw@plt+0x245f8>
  423a4c:	nop
  423a50:	stp	x29, x30, [sp, #-64]!
  423a54:	mov	x29, sp
  423a58:	stp	x19, x20, [sp, #16]
  423a5c:	add	x3, sp, #0x34
  423a60:	mov	x19, x0
  423a64:	str	x21, [sp, #32]
  423a68:	add	x2, sp, #0x38
  423a6c:	mov	w21, w1
  423a70:	add	x1, sp, #0x30
  423a74:	ldrb	w4, [x0, #1123]
  423a78:	str	xzr, [sp, #56]
  423a7c:	cmp	w4, #0x0
  423a80:	cset	w4, eq  // eq = none
  423a84:	strb	w4, [x0, #21]
  423a88:	bl	422f88 <nftw@plt+0x20408>
  423a8c:	mov	x20, x0
  423a90:	cbz	x0, 423b38 <nftw@plt+0x20fb8>
  423a94:	ldrb	w0, [x0]
  423a98:	cbz	w0, 423b74 <nftw@plt+0x20ff4>
  423a9c:	ldr	x0, [x19, #40]
  423aa0:	ldr	w0, [x0, #48]
  423aa4:	cmp	w0, #0xc7
  423aa8:	b.hi	423b5c <nftw@plt+0x20fdc>  // b.pmore
  423aac:	ldr	x0, [x19, #136]
  423ab0:	ldr	x0, [x0, #8]
  423ab4:	cbz	x0, 423acc <nftw@plt+0x20f4c>
  423ab8:	mov	x0, x19
  423abc:	bl	43a9a8 <nftw@plt+0x37e28>
  423ac0:	ldr	x0, [x19, #136]
  423ac4:	ldr	x0, [x0, #8]
  423ac8:	cbnz	x0, 423ab8 <nftw@plt+0x20f38>
  423acc:	ldr	x0, [x19, #448]
  423ad0:	ldurb	w0, [x0, #-20]
  423ad4:	cmp	w0, #0x16
  423ad8:	b.eq	423af4 <nftw@plt+0x20f74>  // b.none
  423adc:	nop
  423ae0:	mov	x0, x19
  423ae4:	bl	434b58 <nftw@plt+0x31fd8>
  423ae8:	ldrb	w0, [x0, #4]
  423aec:	cmp	w0, #0x16
  423af0:	b.ne	423ae0 <nftw@plt+0x20f60>  // b.any
  423af4:	ldr	x6, [x19, #928]
  423af8:	ldr	w2, [sp, #48]
  423afc:	cbz	x6, 423b24 <nftw@plt+0x20fa4>
  423b00:	ldr	x0, [x19, #144]
  423b04:	mov	w4, w2
  423b08:	ldr	w1, [x19, #48]
  423b0c:	mov	x3, x20
  423b10:	ldr	x5, [sp, #56]
  423b14:	ldr	x2, [x0, #8]
  423b18:	mov	x0, x19
  423b1c:	blr	x6
  423b20:	ldr	w2, [sp, #48]
  423b24:	ldr	w4, [sp, #52]
  423b28:	mov	w3, w21
  423b2c:	mov	x0, x19
  423b30:	mov	x1, x20
  423b34:	bl	42d888 <nftw@plt+0x2ad08>
  423b38:	mov	x0, x20
  423b3c:	bl	402910 <free@plt>
  423b40:	ldr	x0, [sp, #56]
  423b44:	cbz	x0, 423b4c <nftw@plt+0x20fcc>
  423b48:	bl	402910 <free@plt>
  423b4c:	ldp	x19, x20, [sp, #16]
  423b50:	ldr	x21, [sp, #32]
  423b54:	ldp	x29, x30, [sp], #64
  423b58:	ret
  423b5c:	mov	x0, x19
  423b60:	adrp	x2, 47b000 <_obstack_memory_used@@Base+0x19bb8>
  423b64:	mov	w1, #0x3                   	// #3
  423b68:	add	x2, x2, #0x568
  423b6c:	bl	427178 <nftw@plt+0x245f8>
  423b70:	b	423b38 <nftw@plt+0x20fb8>
  423b74:	ldr	x1, [x19, #144]
  423b78:	mov	x0, x19
  423b7c:	ldr	w2, [sp, #52]
  423b80:	adrp	x4, 47b000 <_obstack_memory_used@@Base+0x19bb8>
  423b84:	mov	w3, #0x0                   	// #0
  423b88:	add	x4, x4, #0x550
  423b8c:	ldr	x5, [x1, #8]
  423b90:	mov	w1, #0x3                   	// #3
  423b94:	bl	4275f8 <nftw@plt+0x24a78>
  423b98:	b	423b38 <nftw@plt+0x20fb8>
  423b9c:	nop
  423ba0:	mov	w1, #0x2                   	// #2
  423ba4:	b	423a50 <nftw@plt+0x20ed0>
  423ba8:	stp	x29, x30, [sp, #-32]!
  423bac:	mov	w1, #0x1                   	// #1
  423bb0:	mov	x29, sp
  423bb4:	ldr	x2, [x0, #40]
  423bb8:	ldr	w2, [x2, #48]
  423bbc:	str	x19, [sp, #16]
  423bc0:	mov	x19, x0
  423bc4:	cmp	w2, w1
  423bc8:	b.eq	423bdc <nftw@plt+0x2105c>  // b.none
  423bcc:	mov	x0, x19
  423bd0:	ldr	x19, [sp, #16]
  423bd4:	ldp	x29, x30, [sp], #32
  423bd8:	b	423a50 <nftw@plt+0x20ed0>
  423bdc:	mov	w1, #0x0                   	// #0
  423be0:	adrp	x2, 47b000 <_obstack_memory_used@@Base+0x19bb8>
  423be4:	add	x2, x2, #0x588
  423be8:	bl	427178 <nftw@plt+0x245f8>
  423bec:	mov	x0, x19
  423bf0:	mov	w1, #0x0                   	// #0
  423bf4:	ldr	x19, [sp, #16]
  423bf8:	ldp	x29, x30, [sp], #32
  423bfc:	b	423a50 <nftw@plt+0x20ed0>
  423c00:	mov	w1, #0x0                   	// #0
  423c04:	b	423a50 <nftw@plt+0x20ed0>
  423c08:	stp	x29, x30, [sp, #-80]!
  423c0c:	mov	w3, #0x18                  	// #24
  423c10:	mov	w4, #0x7fff                	// #32767
  423c14:	mov	x29, sp
  423c18:	stp	x21, x22, [sp, #32]
  423c1c:	mov	w22, #0x7fffffff            	// #2147483647
  423c20:	ldr	x21, [x0, #40]
  423c24:	stp	x19, x20, [sp, #16]
  423c28:	mov	x20, x0
  423c2c:	stp	x23, x24, [sp, #48]
  423c30:	ldr	w1, [x21, #12]
  423c34:	ldrb	w2, [x0, #1152]
  423c38:	sub	w1, w1, #0x1
  423c3c:	cmp	w2, #0x0
  423c40:	ldr	x2, [x21]
  423c44:	csel	w22, w22, w4, ne  // ne = any
  423c48:	smaddl	x1, w1, w3, x2
  423c4c:	ldrb	w24, [x1, #5]
  423c50:	ldr	x23, [x1, #8]
  423c54:	bl	43e370 <nftw@plt+0x3b7f0>
  423c58:	mov	x1, x0
  423c5c:	ldrb	w0, [x0, #4]
  423c60:	cmp	w0, #0x37
  423c64:	b.eq	423ca4 <nftw@plt+0x21124>  // b.none
  423c68:	cmp	w0, #0x16
  423c6c:	b.eq	423e7c <nftw@plt+0x212fc>  // b.none
  423c70:	mov	x0, x20
  423c74:	bl	4307f8 <nftw@plt+0x2dc78>
  423c78:	mov	w1, #0x3                   	// #3
  423c7c:	mov	x3, x0
  423c80:	adrp	x2, 47b000 <_obstack_memory_used@@Base+0x19bb8>
  423c84:	mov	x0, x20
  423c88:	add	x2, x2, #0x5d8
  423c8c:	bl	427178 <nftw@plt+0x245f8>
  423c90:	ldp	x19, x20, [sp, #16]
  423c94:	ldp	x21, x22, [sp, #32]
  423c98:	ldp	x23, x24, [sp, #48]
  423c9c:	ldp	x29, x30, [sp], #80
  423ca0:	ret
  423ca4:	ldr	w0, [x1, #8]
  423ca8:	ldr	x3, [x1, #16]
  423cac:	cbz	x0, 423edc <nftw@plt+0x2135c>
  423cb0:	adrp	x7, 481000 <_obstack_memory_used@@Base+0x1fbb8>
  423cb4:	add	x0, x3, x0
  423cb8:	add	x7, x7, #0xaf0
  423cbc:	mov	w5, #0x0                   	// #0
  423cc0:	mov	w2, #0x0                   	// #0
  423cc4:	mov	w8, #0x1                   	// #1
  423cc8:	b	423ce0 <nftw@plt+0x21160>
  423ccc:	cmp	w2, w19
  423cd0:	mov	w2, w19
  423cd4:	csel	w5, w5, w8, ls  // ls = plast
  423cd8:	cmp	x3, x0
  423cdc:	b.eq	423cfc <nftw@plt+0x2117c>  // b.none
  423ce0:	ldrb	w4, [x3], #1
  423ce4:	add	w19, w2, w2, lsl #2
  423ce8:	sub	w6, w4, #0x30
  423cec:	add	w19, w6, w19, lsl #1
  423cf0:	ldrh	w4, [x7, w4, sxtw #1]
  423cf4:	tbnz	w4, #2, 423ccc <nftw@plt+0x2114c>
  423cf8:	b	423c70 <nftw@plt+0x210f0>
  423cfc:	ldrb	w0, [x20, #1154]
  423d00:	cbz	w0, 423de4 <nftw@plt+0x21264>
  423d04:	cmp	w19, #0x0
  423d08:	ccmp	w22, w19, #0x0, ne  // ne = any
  423d0c:	ccmp	w5, #0x0, #0x0, cs  // cs = hs, nlast
  423d10:	b.eq	423d28 <nftw@plt+0x211a8>  // b.none
  423d14:	adrp	x2, 47b000 <_obstack_memory_used@@Base+0x19bb8>
  423d18:	mov	x0, x20
  423d1c:	add	x2, x2, #0x608
  423d20:	mov	w1, #0x2                   	// #2
  423d24:	bl	427178 <nftw@plt+0x245f8>
  423d28:	mov	x0, x20
  423d2c:	bl	43e370 <nftw@plt+0x3b7f0>
  423d30:	ldrb	w4, [x0, #4]
  423d34:	cmp	w4, #0x3e
  423d38:	b.eq	423e10 <nftw@plt+0x21290>  // b.none
  423d3c:	cmp	w4, #0x16
  423d40:	b.eq	423d50 <nftw@plt+0x211d0>  // b.none
  423d44:	b	423ea4 <nftw@plt+0x21324>
  423d48:	mov	x0, x20
  423d4c:	bl	43a9a8 <nftw@plt+0x37e28>
  423d50:	ldr	x0, [x20, #136]
  423d54:	ldr	x0, [x0, #8]
  423d58:	cbnz	x0, 423d48 <nftw@plt+0x211c8>
  423d5c:	ldr	x0, [x20, #448]
  423d60:	ldurb	w0, [x0, #-20]
  423d64:	cmp	w0, #0x16
  423d68:	b.eq	423d84 <nftw@plt+0x21204>  // b.none
  423d6c:	nop
  423d70:	mov	x0, x20
  423d74:	bl	434b58 <nftw@plt+0x31fd8>
  423d78:	ldrb	w0, [x0, #4]
  423d7c:	cmp	w0, #0x16
  423d80:	b.ne	423d70 <nftw@plt+0x211f0>  // b.any
  423d84:	ldr	x0, [x20, #40]
  423d88:	mov	w4, w19
  423d8c:	mov	x3, x23
  423d90:	mov	w2, w24
  423d94:	mov	w1, #0x3                   	// #3
  423d98:	bl	4355d8 <nftw@plt+0x32a58>
  423d9c:	mov	x19, x0
  423da0:	cbz	x0, 423db4 <nftw@plt+0x21234>
  423da4:	ldr	w1, [x0, #16]
  423da8:	mov	w2, #0x7f                  	// #127
  423dac:	ldr	x0, [x20, #40]
  423db0:	bl	4359a8 <nftw@plt+0x32e28>
  423db4:	ldr	x2, [x20, #912]
  423db8:	cbz	x2, 423dc8 <nftw@plt+0x21248>
  423dbc:	mov	x1, x19
  423dc0:	mov	x0, x20
  423dc4:	blr	x2
  423dc8:	mov	w0, #0x1                   	// #1
  423dcc:	strb	w0, [x21, #116]
  423dd0:	ldp	x19, x20, [sp, #16]
  423dd4:	ldp	x21, x22, [sp, #32]
  423dd8:	ldp	x23, x24, [sp, #48]
  423ddc:	ldp	x29, x30, [sp], #80
  423de0:	ret
  423de4:	cbz	w5, 423d28 <nftw@plt+0x211a8>
  423de8:	adrp	x2, 47b000 <_obstack_memory_used@@Base+0x19bb8>
  423dec:	add	x2, x2, #0x608
  423df0:	mov	w1, #0x0                   	// #0
  423df4:	mov	x0, x20
  423df8:	bl	427178 <nftw@plt+0x245f8>
  423dfc:	mov	x0, x20
  423e00:	bl	43e370 <nftw@plt+0x3b7f0>
  423e04:	ldrb	w4, [x0, #4]
  423e08:	cmp	w4, #0x3e
  423e0c:	b.ne	423d3c <nftw@plt+0x211bc>  // b.any
  423e10:	add	x1, x0, #0x8
  423e14:	mov	x2, #0x1                   	// #1
  423e18:	add	x3, sp, #0x40
  423e1c:	mov	x0, x20
  423e20:	str	wzr, [sp, #64]
  423e24:	str	xzr, [sp, #72]
  423e28:	bl	4215f0 <nftw@plt+0x1ea70>
  423e2c:	ldr	x2, [x20, #448]
  423e30:	tst	w0, #0xff
  423e34:	ldr	x1, [sp, #72]
  423e38:	ldurb	w0, [x2, #-20]
  423e3c:	csel	x23, x1, x23, ne  // ne = any
  423e40:	cmp	w0, #0x16
  423e44:	b.eq	423d50 <nftw@plt+0x211d0>  // b.none
  423e48:	mov	x0, x20
  423e4c:	bl	43e370 <nftw@plt+0x3b7f0>
  423e50:	ldrb	w0, [x0, #4]
  423e54:	cmp	w0, #0x16
  423e58:	b.eq	423d50 <nftw@plt+0x211d0>  // b.none
  423e5c:	ldr	x3, [x20, #144]
  423e60:	mov	x0, x20
  423e64:	adrp	x2, 47b000 <_obstack_memory_used@@Base+0x19bb8>
  423e68:	mov	w1, #0x0                   	// #0
  423e6c:	add	x2, x2, #0x360
  423e70:	ldr	x3, [x3, #8]
  423e74:	bl	4273b8 <nftw@plt+0x24838>
  423e78:	b	423d50 <nftw@plt+0x211d0>
  423e7c:	mov	x0, x20
  423e80:	mov	w1, #0x3                   	// #3
  423e84:	adrp	x2, 47b000 <_obstack_memory_used@@Base+0x19bb8>
  423e88:	add	x2, x2, #0x5b0
  423e8c:	bl	427178 <nftw@plt+0x245f8>
  423e90:	ldp	x19, x20, [sp, #16]
  423e94:	ldp	x21, x22, [sp, #32]
  423e98:	ldp	x23, x24, [sp, #48]
  423e9c:	ldp	x29, x30, [sp], #80
  423ea0:	ret
  423ea4:	mov	x1, x0
  423ea8:	mov	x0, x20
  423eac:	bl	4307f8 <nftw@plt+0x2dc78>
  423eb0:	mov	x3, x0
  423eb4:	mov	w1, #0x3                   	// #3
  423eb8:	mov	x0, x20
  423ebc:	adrp	x2, 47b000 <_obstack_memory_used@@Base+0x19bb8>
  423ec0:	add	x2, x2, #0x628
  423ec4:	bl	427178 <nftw@plt+0x245f8>
  423ec8:	ldp	x19, x20, [sp, #16]
  423ecc:	ldp	x21, x22, [sp, #32]
  423ed0:	ldp	x23, x24, [sp, #48]
  423ed4:	ldp	x29, x30, [sp], #80
  423ed8:	ret
  423edc:	ldrb	w0, [x20, #1154]
  423ee0:	mov	w19, #0x0                   	// #0
  423ee4:	cbnz	w0, 423d14 <nftw@plt+0x21194>
  423ee8:	b	423d28 <nftw@plt+0x211a8>
  423eec:	nop
  423ef0:	stp	x29, x30, [sp, #-80]!
  423ef4:	mov	w1, #0x11                  	// #17
  423ef8:	mov	x29, sp
  423efc:	add	x2, sp, #0x48
  423f00:	stp	x21, x22, [sp, #32]
  423f04:	mov	x22, x0
  423f08:	bl	4224d0 <nftw@plt+0x1f950>
  423f0c:	cbz	x0, 423fd0 <nftw@plt+0x21450>
  423f10:	str	x23, [sp, #48]
  423f14:	ldr	x23, [sp, #72]
  423f18:	cbz	x23, 423fdc <nftw@plt+0x2145c>
  423f1c:	stp	x19, x20, [sp, #16]
  423f20:	add	x20, x0, #0x18
  423f24:	ldr	x19, [x0, #24]
  423f28:	cbnz	x19, 423f3c <nftw@plt+0x213bc>
  423f2c:	b	423fa4 <nftw@plt+0x21424>
  423f30:	mov	x20, x19
  423f34:	ldr	x19, [x19]
  423f38:	cbz	x19, 423fa4 <nftw@plt+0x21424>
  423f3c:	ldr	w0, [x19, #12]
  423f40:	ldr	w1, [x23, #12]
  423f44:	cmp	w0, w1
  423f48:	b.ne	423f30 <nftw@plt+0x213b0>  // b.any
  423f4c:	cbz	w0, 423f9c <nftw@plt+0x2141c>
  423f50:	mov	w21, #0x0                   	// #0
  423f54:	b	423f68 <nftw@plt+0x213e8>
  423f58:	ldr	w0, [x19, #12]
  423f5c:	add	w21, w21, #0x1
  423f60:	cmp	w0, w21
  423f64:	b.ls	423f8c <nftw@plt+0x2140c>  // b.plast
  423f68:	mov	w1, w21
  423f6c:	add	x1, x1, #0x1
  423f70:	add	x1, x1, x1, lsl #1
  423f74:	lsl	x0, x1, #3
  423f78:	add	x1, x23, x0
  423f7c:	add	x0, x19, x0
  423f80:	bl	430d40 <nftw@plt+0x2e1c0>
  423f84:	cbnz	w0, 423f58 <nftw@plt+0x213d8>
  423f88:	ldr	w0, [x19, #12]
  423f8c:	cmp	w21, w0
  423f90:	ldr	x19, [x20]
  423f94:	b.ne	423f30 <nftw@plt+0x213b0>  // b.any
  423f98:	cbz	x19, 423fa4 <nftw@plt+0x21424>
  423f9c:	ldr	x0, [x19]
  423fa0:	str	x0, [x20]
  423fa4:	ldr	x0, [x22, #448]
  423fa8:	ldurb	w0, [x0, #-20]
  423fac:	cmp	w0, #0x16
  423fb0:	b.eq	423fc8 <nftw@plt+0x21448>  // b.none
  423fb4:	mov	x0, x22
  423fb8:	bl	434b58 <nftw@plt+0x31fd8>
  423fbc:	ldrb	w0, [x0, #4]
  423fc0:	cmp	w0, #0x16
  423fc4:	b.ne	423ff0 <nftw@plt+0x21470>  // b.any
  423fc8:	ldp	x19, x20, [sp, #16]
  423fcc:	ldr	x23, [sp, #48]
  423fd0:	ldp	x21, x22, [sp, #32]
  423fd4:	ldp	x29, x30, [sp], #80
  423fd8:	ret
  423fdc:	bl	43ac98 <nftw@plt+0x38118>
  423fe0:	ldp	x21, x22, [sp, #32]
  423fe4:	ldr	x23, [sp, #48]
  423fe8:	ldp	x29, x30, [sp], #80
  423fec:	ret
  423ff0:	ldr	x3, [x22, #144]
  423ff4:	mov	x0, x22
  423ff8:	mov	w1, #0x0                   	// #0
  423ffc:	adrp	x2, 47b000 <_obstack_memory_used@@Base+0x19bb8>
  424000:	add	x2, x2, #0x360
  424004:	ldr	x3, [x3, #8]
  424008:	bl	4273b8 <nftw@plt+0x24838>
  42400c:	ldp	x19, x20, [sp, #16]
  424010:	ldp	x21, x22, [sp, #32]
  424014:	ldr	x23, [sp, #48]
  424018:	ldp	x29, x30, [sp], #80
  42401c:	ret
  424020:	stp	x29, x30, [sp, #-96]!
  424024:	mov	w4, #0x18                  	// #24
  424028:	mov	w1, #0x1                   	// #1
  42402c:	mov	x29, sp
  424030:	stp	x21, x22, [sp, #32]
  424034:	ldr	x21, [x0, #40]
  424038:	stp	x19, x20, [sp, #16]
  42403c:	mov	x20, x0
  424040:	stp	x23, x24, [sp, #48]
  424044:	ldr	w2, [x21, #12]
  424048:	ldr	x3, [x21]
  42404c:	sub	w2, w2, #0x1
  424050:	smaddl	x2, w2, w4, x3
  424054:	ldrb	w22, [x2, #5]
  424058:	ldr	x23, [x2, #8]
  42405c:	bl	43ab60 <nftw@plt+0x37fe0>
  424060:	mov	x0, x20
  424064:	bl	43e370 <nftw@plt+0x3b7f0>
  424068:	mov	x1, x0
  42406c:	ldrb	w0, [x0, #4]
  424070:	cmp	w0, #0x37
  424074:	b.ne	4240b8 <nftw@plt+0x21538>  // b.any
  424078:	ldr	w5, [x1, #8]
  42407c:	ldr	x3, [x1, #16]
  424080:	cbz	x5, 4240ec <nftw@plt+0x2156c>
  424084:	adrp	x6, 481000 <_obstack_memory_used@@Base+0x1fbb8>
  424088:	add	x5, x3, x5
  42408c:	add	x6, x6, #0xaf0
  424090:	mov	w19, #0x0                   	// #0
  424094:	b	4240a0 <nftw@plt+0x21520>
  424098:	cmp	x3, x5
  42409c:	b.eq	4240f0 <nftw@plt+0x21570>  // b.none
  4240a0:	ldrb	w4, [x3], #1
  4240a4:	add	w19, w19, w19, lsl #2
  4240a8:	add	w19, w4, w19, lsl #1
  4240ac:	ldrh	w2, [x6, w4, sxtw #1]
  4240b0:	sub	w19, w19, #0x30
  4240b4:	tbnz	w2, #2, 424098 <nftw@plt+0x21518>
  4240b8:	mov	x0, x20
  4240bc:	bl	4307f8 <nftw@plt+0x2dc78>
  4240c0:	adrp	x2, 47b000 <_obstack_memory_used@@Base+0x19bb8>
  4240c4:	mov	x3, x0
  4240c8:	add	x2, x2, #0x648
  4240cc:	mov	x0, x20
  4240d0:	mov	w1, #0x3                   	// #3
  4240d4:	bl	427178 <nftw@plt+0x245f8>
  4240d8:	ldp	x19, x20, [sp, #16]
  4240dc:	ldp	x21, x22, [sp, #32]
  4240e0:	ldp	x23, x24, [sp, #48]
  4240e4:	ldp	x29, x30, [sp], #96
  4240e8:	ret
  4240ec:	mov	w19, #0x0                   	// #0
  4240f0:	mov	x0, x20
  4240f4:	bl	43e370 <nftw@plt+0x3b7f0>
  4240f8:	ldrb	w4, [x0, #4]
  4240fc:	cmp	w4, #0x3e
  424100:	b.eq	424260 <nftw@plt+0x216e0>  // b.none
  424104:	cmp	w4, #0x16
  424108:	mov	w24, #0x3                   	// #3
  42410c:	b.ne	4241d0 <nftw@plt+0x21650>  // b.any
  424110:	ldr	x0, [x20, #136]
  424114:	ldr	x0, [x0, #8]
  424118:	cbz	x0, 424134 <nftw@plt+0x215b4>
  42411c:	nop
  424120:	mov	x0, x20
  424124:	bl	43a9a8 <nftw@plt+0x37e28>
  424128:	ldr	x0, [x20, #136]
  42412c:	ldr	x0, [x0, #8]
  424130:	cbnz	x0, 424120 <nftw@plt+0x215a0>
  424134:	ldr	x0, [x20, #448]
  424138:	ldurb	w0, [x0, #-20]
  42413c:	cmp	w0, #0x16
  424140:	b.eq	42415c <nftw@plt+0x215dc>  // b.none
  424144:	nop
  424148:	mov	x0, x20
  42414c:	bl	434b58 <nftw@plt+0x31fd8>
  424150:	ldrb	w0, [x0, #4]
  424154:	cmp	w0, #0x16
  424158:	b.ne	424148 <nftw@plt+0x215c8>  // b.any
  42415c:	cmp	w24, #0x1
  424160:	b.eq	4241f8 <nftw@plt+0x21678>  // b.none
  424164:	ldr	x0, [x20, #40]
  424168:	mov	w4, w19
  42416c:	mov	x3, x23
  424170:	mov	w2, w22
  424174:	mov	w1, w24
  424178:	ldr	w5, [x0, #56]
  42417c:	sub	w5, w5, #0x1
  424180:	str	w5, [x0, #56]
  424184:	bl	4355d8 <nftw@plt+0x32a58>
  424188:	mov	x19, x0
  42418c:	cbz	x0, 4241a0 <nftw@plt+0x21620>
  424190:	ldr	w1, [x0, #16]
  424194:	mov	w2, #0x7f                  	// #127
  424198:	ldr	x0, [x20, #40]
  42419c:	bl	4359a8 <nftw@plt+0x32e28>
  4241a0:	ldr	x2, [x20, #912]
  4241a4:	cbz	x2, 4241b4 <nftw@plt+0x21634>
  4241a8:	mov	x1, x19
  4241ac:	mov	x0, x20
  4241b0:	blr	x2
  4241b4:	mov	w0, #0x1                   	// #1
  4241b8:	strb	w0, [x21, #116]
  4241bc:	ldp	x19, x20, [sp, #16]
  4241c0:	ldp	x21, x22, [sp, #32]
  4241c4:	ldp	x23, x24, [sp, #48]
  4241c8:	ldp	x29, x30, [sp], #96
  4241cc:	ret
  4241d0:	mov	x1, x0
  4241d4:	mov	x0, x20
  4241d8:	bl	4307f8 <nftw@plt+0x2dc78>
  4241dc:	mov	x3, x0
  4241e0:	mov	w1, w24
  4241e4:	mov	x0, x20
  4241e8:	adrp	x2, 47b000 <_obstack_memory_used@@Base+0x19bb8>
  4241ec:	add	x2, x2, #0x628
  4241f0:	bl	427178 <nftw@plt+0x245f8>
  4241f4:	b	4240d8 <nftw@plt+0x21558>
  4241f8:	ldr	x1, [x21]
  4241fc:	str	x25, [sp, #64]
  424200:	ldr	w25, [x21, #12]
  424204:	mov	w2, #0x18                  	// #24
  424208:	mov	x0, x21
  42420c:	sub	w25, w25, #0x1
  424210:	smaddl	x25, w25, w2, x1
  424214:	mov	x1, x25
  424218:	bl	435558 <nftw@plt+0x329d8>
  42421c:	ldr	w1, [x25, #20]
  424220:	cbz	w1, 424238 <nftw@plt+0x216b8>
  424224:	cbz	x0, 424258 <nftw@plt+0x216d8>
  424228:	ldr	x0, [x0, #8]
  42422c:	mov	x1, x23
  424230:	bl	45fb48 <nftw@plt+0x5cfc8>
  424234:	cbz	w0, 424258 <nftw@plt+0x216d8>
  424238:	mov	x3, x23
  42423c:	mov	x0, x20
  424240:	adrp	x2, 47b000 <_obstack_memory_used@@Base+0x19bb8>
  424244:	mov	w1, #0x0                   	// #0
  424248:	add	x2, x2, #0x670
  42424c:	bl	427298 <nftw@plt+0x24718>
  424250:	ldr	x25, [sp, #64]
  424254:	b	4240d8 <nftw@plt+0x21558>
  424258:	ldr	x25, [sp, #64]
  42425c:	b	424164 <nftw@plt+0x215e4>
  424260:	add	x1, x0, #0x8
  424264:	add	x3, sp, #0x50
  424268:	mov	x2, #0x1                   	// #1
  42426c:	mov	x0, x20
  424270:	str	x25, [sp, #64]
  424274:	str	wzr, [sp, #80]
  424278:	str	xzr, [sp, #88]
  42427c:	bl	4215f0 <nftw@plt+0x1ea70>
  424280:	ldr	x2, [sp, #88]
  424284:	tst	w0, #0xff
  424288:	mov	w1, #0x0                   	// #0
  42428c:	mov	x0, x20
  424290:	csel	x23, x2, x23, ne  // ne = any
  424294:	bl	422350 <nftw@plt+0x1f7d0>
  424298:	mov	w25, w0
  42429c:	cmp	w0, #0x1
  4242a0:	b.eq	424330 <nftw@plt+0x217b0>  // b.none
  4242a4:	cmp	w0, #0x2
  4242a8:	mov	w24, #0x3                   	// #3
  4242ac:	b.eq	424318 <nftw@plt+0x21798>  // b.none
  4242b0:	cmp	w25, #0x3
  4242b4:	mov	w0, #0x0                   	// #0
  4242b8:	mov	w22, #0x0                   	// #0
  4242bc:	b.eq	424354 <nftw@plt+0x217d4>  // b.none
  4242c0:	ldr	x1, [x20]
  4242c4:	strb	w0, [x1, #106]
  4242c8:	ldr	x0, [x20, #448]
  4242cc:	ldurb	w0, [x0, #-20]
  4242d0:	cmp	w0, #0x16
  4242d4:	b.eq	424310 <nftw@plt+0x21790>  // b.none
  4242d8:	mov	x0, x20
  4242dc:	bl	434b58 <nftw@plt+0x31fd8>
  4242e0:	ldrb	w0, [x0, #4]
  4242e4:	cmp	w0, #0x16
  4242e8:	b.eq	424310 <nftw@plt+0x21790>  // b.none
  4242ec:	ldr	x3, [x20, #144]
  4242f0:	mov	x0, x20
  4242f4:	adrp	x2, 47b000 <_obstack_memory_used@@Base+0x19bb8>
  4242f8:	mov	w1, #0x0                   	// #0
  4242fc:	add	x2, x2, #0x360
  424300:	ldr	x3, [x3, #8]
  424304:	bl	4273b8 <nftw@plt+0x24838>
  424308:	ldr	x25, [sp, #64]
  42430c:	b	424110 <nftw@plt+0x21590>
  424310:	ldr	x25, [sp, #64]
  424314:	b	424110 <nftw@plt+0x21590>
  424318:	mov	w1, w0
  42431c:	mov	w24, #0x1                   	// #1
  424320:	mov	x0, x20
  424324:	bl	422350 <nftw@plt+0x1f7d0>
  424328:	mov	w25, w0
  42432c:	b	4242b0 <nftw@plt+0x21730>
  424330:	mov	x1, x23
  424334:	mov	x0, x20
  424338:	bl	42de90 <nftw@plt+0x2b310>
  42433c:	mov	w24, #0x0                   	// #0
  424340:	mov	w1, w25
  424344:	mov	x0, x20
  424348:	bl	422350 <nftw@plt+0x1f7d0>
  42434c:	mov	w25, w0
  424350:	b	4242b0 <nftw@plt+0x21730>
  424354:	mov	w1, w25
  424358:	mov	x0, x20
  42435c:	bl	422350 <nftw@plt+0x1f7d0>
  424360:	cmp	w0, #0x4
  424364:	mov	w0, #0x1                   	// #1
  424368:	mov	w22, w0
  42436c:	b.ne	4242c0 <nftw@plt+0x21740>  // b.any
  424370:	mov	w0, #0x2                   	// #2
  424374:	mov	w22, w0
  424378:	b	4242c0 <nftw@plt+0x21740>
  42437c:	nop
  424380:	stp	x29, x30, [sp, #-32]!
  424384:	mov	x29, sp
  424388:	stp	x19, x20, [sp, #16]
  42438c:	mov	x19, x0
  424390:	bl	434b58 <nftw@plt+0x31fd8>
  424394:	ldrb	w1, [x0, #4]
  424398:	cmp	w1, #0x35
  42439c:	b.eq	4243cc <nftw@plt+0x2184c>  // b.none
  4243a0:	ldrh	w2, [x0, #6]
  4243a4:	tbnz	w2, #4, 424490 <nftw@plt+0x21910>
  4243a8:	cmp	w1, #0x16
  4243ac:	b.eq	42446c <nftw@plt+0x218ec>  // b.none
  4243b0:	mov	x0, x19
  4243b4:	adrp	x2, 47b000 <_obstack_memory_used@@Base+0x19bb8>
  4243b8:	ldp	x19, x20, [sp, #16]
  4243bc:	add	x2, x2, #0x158
  4243c0:	ldp	x29, x30, [sp], #32
  4243c4:	mov	w1, #0x3                   	// #3
  4243c8:	b	427178 <nftw@plt+0x245f8>
  4243cc:	ldr	x20, [x0, #8]
  4243d0:	ldr	x0, [x19, #1248]
  4243d4:	cmp	x20, x0
  4243d8:	b.eq	4244d0 <nftw@plt+0x21950>  // b.none
  4243dc:	ldr	x0, [x19, #1288]
  4243e0:	cmp	x20, x0
  4243e4:	b.eq	4244b4 <nftw@plt+0x21934>  // b.none
  4243e8:	ldr	x0, [x19, #1296]
  4243ec:	cmp	x20, x0
  4243f0:	b.eq	4244b4 <nftw@plt+0x21934>  // b.none
  4243f4:	ldrh	w0, [x20, #18]
  4243f8:	tbnz	w0, #3, 424460 <nftw@plt+0x218e0>
  4243fc:	ldrb	w0, [x19, #1124]
  424400:	ldr	x1, [x19, #1024]
  424404:	cmp	w0, #0x0
  424408:	cset	w0, eq  // eq = none
  42440c:	strb	w0, [x19, #21]
  424410:	cbz	x1, 42441c <nftw@plt+0x2189c>
  424414:	mov	x0, x19
  424418:	blr	x1
  42441c:	mov	x1, x20
  424420:	mov	x0, x19
  424424:	bl	43ae98 <nftw@plt+0x38318>
  424428:	tst	w0, #0xff
  42442c:	b.eq	424448 <nftw@plt+0x218c8>  // b.none
  424430:	ldr	x3, [x19, #936]
  424434:	cbz	x3, 424448 <nftw@plt+0x218c8>
  424438:	ldr	w1, [x19, #48]
  42443c:	mov	x0, x19
  424440:	mov	x2, x20
  424444:	blr	x3
  424448:	ldrh	w0, [x20, #18]
  42444c:	mov	w1, w0
  424450:	ubfx	x0, x0, #2, #8
  424454:	and	w0, w0, #0xffffffdf
  424458:	bfi	w1, w0, #2, #8
  42445c:	strh	w1, [x20, #18]
  424460:	ldp	x19, x20, [sp, #16]
  424464:	ldp	x29, x30, [sp], #32
  424468:	ret
  42446c:	ldr	x3, [x19, #144]
  424470:	mov	x0, x19
  424474:	ldp	x19, x20, [sp, #16]
  424478:	adrp	x2, 47b000 <_obstack_memory_used@@Base+0x19bb8>
  42447c:	ldp	x29, x30, [sp], #32
  424480:	add	x2, x2, #0x130
  424484:	ldr	x3, [x3, #8]
  424488:	mov	w1, #0x3                   	// #3
  42448c:	b	427178 <nftw@plt+0x245f8>
  424490:	ldr	x3, [x0, #8]
  424494:	mov	x0, x19
  424498:	ldp	x19, x20, [sp, #16]
  42449c:	adrp	x2, 47b000 <_obstack_memory_used@@Base+0x19bb8>
  4244a0:	ldp	x29, x30, [sp], #32
  4244a4:	add	x2, x2, #0xf0
  4244a8:	ldr	x3, [x3]
  4244ac:	mov	w1, #0x3                   	// #3
  4244b0:	b	427178 <nftw@plt+0x245f8>
  4244b4:	mov	x0, x19
  4244b8:	adrp	x2, 47b000 <_obstack_memory_used@@Base+0x19bb8>
  4244bc:	ldp	x19, x20, [sp, #16]
  4244c0:	add	x2, x2, #0xb8
  4244c4:	ldp	x29, x30, [sp], #32
  4244c8:	mov	w1, #0x3                   	// #3
  4244cc:	b	427178 <nftw@plt+0x245f8>
  4244d0:	mov	x0, x19
  4244d4:	adrp	x2, 47b000 <_obstack_memory_used@@Base+0x19bb8>
  4244d8:	ldp	x19, x20, [sp, #16]
  4244dc:	add	x2, x2, #0x88
  4244e0:	ldp	x29, x30, [sp], #32
  4244e4:	mov	w1, #0x3                   	// #3
  4244e8:	b	427178 <nftw@plt+0x245f8>
  4244ec:	nop
  4244f0:	stp	x29, x30, [sp, #-80]!
  4244f4:	mov	w1, #0x10                  	// #16
  4244f8:	mov	x29, sp
  4244fc:	add	x2, sp, #0x48
  424500:	stp	x21, x22, [sp, #32]
  424504:	mov	x22, x0
  424508:	bl	4224d0 <nftw@plt+0x1f950>
  42450c:	cbz	x0, 4245c0 <nftw@plt+0x21a40>
  424510:	stp	x19, x20, [sp, #16]
  424514:	mov	x21, x0
  424518:	ldr	x19, [x0, #24]
  42451c:	stp	x23, x24, [sp, #48]
  424520:	add	x24, x0, #0x18
  424524:	ldr	x23, [sp, #72]
  424528:	cbnz	x19, 42453c <nftw@plt+0x219bc>
  42452c:	b	4245d0 <nftw@plt+0x21a50>
  424530:	mov	x24, x19
  424534:	ldr	x19, [x19]
  424538:	cbz	x19, 4245cc <nftw@plt+0x21a4c>
  42453c:	ldr	w0, [x19, #12]
  424540:	ldr	w1, [x23, #12]
  424544:	cmp	w0, w1
  424548:	b.ne	424530 <nftw@plt+0x219b0>  // b.any
  42454c:	cbz	w0, 42459c <nftw@plt+0x21a1c>
  424550:	mov	w20, #0x0                   	// #0
  424554:	b	424568 <nftw@plt+0x219e8>
  424558:	ldr	w0, [x19, #12]
  42455c:	add	w20, w20, #0x1
  424560:	cmp	w0, w20
  424564:	b.ls	42458c <nftw@plt+0x21a0c>  // b.plast
  424568:	mov	w2, w20
  42456c:	add	x2, x2, #0x1
  424570:	add	x2, x2, x2, lsl #1
  424574:	lsl	x2, x2, #3
  424578:	add	x1, x23, x2
  42457c:	add	x0, x19, x2
  424580:	bl	430d40 <nftw@plt+0x2e1c0>
  424584:	cbnz	w0, 424558 <nftw@plt+0x219d8>
  424588:	ldr	w0, [x19, #12]
  42458c:	cmp	w20, w0
  424590:	ldr	x19, [x24]
  424594:	b.ne	424530 <nftw@plt+0x219b0>  // b.any
  424598:	cbz	x19, 4245cc <nftw@plt+0x21a4c>
  42459c:	ldr	x3, [x21]
  4245a0:	mov	x0, x22
  4245a4:	adrp	x2, 47b000 <_obstack_memory_used@@Base+0x19bb8>
  4245a8:	mov	w1, #0x0                   	// #0
  4245ac:	add	x2, x2, #0x6a8
  4245b0:	add	x3, x3, #0x1
  4245b4:	bl	427178 <nftw@plt+0x245f8>
  4245b8:	ldp	x19, x20, [sp, #16]
  4245bc:	ldp	x23, x24, [sp, #48]
  4245c0:	ldp	x21, x22, [sp, #32]
  4245c4:	ldp	x29, x30, [sp], #80
  4245c8:	ret
  4245cc:	ldr	x23, [sp, #72]
  4245d0:	mov	x0, x22
  4245d4:	ldr	w1, [x23, #12]
  4245d8:	add	x1, x1, #0x1
  4245dc:	add	x1, x1, x1, lsl #1
  4245e0:	lsl	x1, x1, #3
  4245e4:	bl	434f48 <nftw@plt+0x323c8>
  4245e8:	ldr	x1, [x22, #448]
  4245ec:	ldr	x2, [x21, #24]
  4245f0:	ldurb	w1, [x1, #-20]
  4245f4:	str	x0, [sp, #72]
  4245f8:	str	x2, [x0]
  4245fc:	cmp	w1, #0x16
  424600:	str	x0, [x21, #24]
  424604:	b.eq	424644 <nftw@plt+0x21ac4>  // b.none
  424608:	mov	x0, x22
  42460c:	bl	434b58 <nftw@plt+0x31fd8>
  424610:	ldrb	w0, [x0, #4]
  424614:	cmp	w0, #0x16
  424618:	b.eq	424644 <nftw@plt+0x21ac4>  // b.none
  42461c:	ldr	x3, [x22, #144]
  424620:	mov	x0, x22
  424624:	adrp	x2, 47b000 <_obstack_memory_used@@Base+0x19bb8>
  424628:	mov	w1, #0x0                   	// #0
  42462c:	add	x2, x2, #0x360
  424630:	ldr	x3, [x3, #8]
  424634:	bl	4273b8 <nftw@plt+0x24838>
  424638:	ldp	x19, x20, [sp, #16]
  42463c:	ldp	x23, x24, [sp, #48]
  424640:	b	4245c0 <nftw@plt+0x21a40>
  424644:	ldp	x19, x20, [sp, #16]
  424648:	ldp	x21, x22, [sp, #32]
  42464c:	ldp	x23, x24, [sp, #48]
  424650:	ldp	x29, x30, [sp], #80
  424654:	ret
  424658:	stp	x29, x30, [sp, #-32]!
  42465c:	mov	x29, sp
  424660:	stp	x19, x20, [sp, #16]
  424664:	mov	x19, x0
  424668:	bl	434b58 <nftw@plt+0x31fd8>
  42466c:	ldrb	w1, [x0, #4]
  424670:	cmp	w1, #0x35
  424674:	b.eq	4246f0 <nftw@plt+0x21b70>  // b.none
  424678:	ldrh	w2, [x0, #6]
  42467c:	tbnz	w2, #4, 4247f8 <nftw@plt+0x21c78>
  424680:	cmp	w1, #0x16
  424684:	b.eq	424778 <nftw@plt+0x21bf8>  // b.none
  424688:	adrp	x2, 47b000 <_obstack_memory_used@@Base+0x19bb8>
  42468c:	mov	x0, x19
  424690:	add	x2, x2, #0x158
  424694:	mov	w1, #0x3                   	// #3
  424698:	bl	427178 <nftw@plt+0x245f8>
  42469c:	ldr	x0, [x19, #448]
  4246a0:	ldurb	w0, [x0, #-20]
  4246a4:	cmp	w0, #0x16
  4246a8:	b.eq	4246e4 <nftw@plt+0x21b64>  // b.none
  4246ac:	mov	x0, x19
  4246b0:	bl	434b58 <nftw@plt+0x31fd8>
  4246b4:	ldrb	w0, [x0, #4]
  4246b8:	cmp	w0, #0x16
  4246bc:	b.eq	4246e4 <nftw@plt+0x21b64>  // b.none
  4246c0:	ldr	x3, [x19, #144]
  4246c4:	mov	x0, x19
  4246c8:	ldp	x19, x20, [sp, #16]
  4246cc:	adrp	x2, 47b000 <_obstack_memory_used@@Base+0x19bb8>
  4246d0:	ldp	x29, x30, [sp], #32
  4246d4:	add	x2, x2, #0x360
  4246d8:	ldr	x3, [x3, #8]
  4246dc:	mov	w1, #0x0                   	// #0
  4246e0:	b	4273b8 <nftw@plt+0x24838>
  4246e4:	ldp	x19, x20, [sp, #16]
  4246e8:	ldp	x29, x30, [sp], #32
  4246ec:	ret
  4246f0:	ldr	x20, [x0, #8]
  4246f4:	ldr	x0, [x19, #1248]
  4246f8:	cmp	x20, x0
  4246fc:	b.eq	424830 <nftw@plt+0x21cb0>  // b.none
  424700:	ldr	x0, [x19, #1288]
  424704:	cmp	x20, x0
  424708:	b.eq	424818 <nftw@plt+0x21c98>  // b.none
  42470c:	ldr	x0, [x19, #1296]
  424710:	cmp	x20, x0
  424714:	b.eq	424818 <nftw@plt+0x21c98>  // b.none
  424718:	ldrh	w0, [x20, #18]
  42471c:	tbnz	w0, #3, 42469c <nftw@plt+0x21b1c>
  424720:	ldr	x1, [x19, #1024]
  424724:	cbz	x1, 424730 <nftw@plt+0x21bb0>
  424728:	mov	x0, x19
  42472c:	blr	x1
  424730:	ldr	x3, [x19, #944]
  424734:	cbz	x3, 424748 <nftw@plt+0x21bc8>
  424738:	ldr	w1, [x19, #48]
  42473c:	mov	x2, x20
  424740:	mov	x0, x19
  424744:	blr	x3
  424748:	ldrb	w0, [x20, #18]
  42474c:	tbz	w0, #1, 42469c <nftw@plt+0x21b1c>
  424750:	ldrh	w1, [x20, #18]
  424754:	tbnz	w1, #5, 4247c4 <nftw@plt+0x21c44>
  424758:	and	w0, w0, #0x3
  42475c:	cmp	w0, #0x3
  424760:	b.eq	424798 <nftw@plt+0x21c18>  // b.none
  424764:	ldrb	w0, [x19, #1151]
  424768:	cbnz	w0, 4247e4 <nftw@plt+0x21c64>
  42476c:	mov	x0, x20
  424770:	bl	43ac98 <nftw@plt+0x38118>
  424774:	b	42469c <nftw@plt+0x21b1c>
  424778:	ldr	x3, [x19, #144]
  42477c:	mov	x0, x19
  424780:	adrp	x2, 47b000 <_obstack_memory_used@@Base+0x19bb8>
  424784:	mov	w1, #0x3                   	// #3
  424788:	add	x2, x2, #0x130
  42478c:	ldr	x3, [x3, #8]
  424790:	bl	427178 <nftw@plt+0x245f8>
  424794:	b	42469c <nftw@plt+0x21b1c>
  424798:	ldrb	w0, [x19, #1143]
  42479c:	cbz	w0, 424764 <nftw@plt+0x21be4>
  4247a0:	ldr	w2, [x19, #48]
  4247a4:	mov	x0, x19
  4247a8:	ldr	x5, [x20]
  4247ac:	adrp	x4, 47b000 <_obstack_memory_used@@Base+0x19bb8>
  4247b0:	mov	w3, #0x0                   	// #0
  4247b4:	add	x4, x4, #0x6c0
  4247b8:	mov	w1, #0xb                   	// #11
  4247bc:	bl	427670 <nftw@plt+0x24af0>
  4247c0:	b	424764 <nftw@plt+0x21be4>
  4247c4:	ldr	x3, [x20]
  4247c8:	mov	x0, x19
  4247cc:	adrp	x2, 47b000 <_obstack_memory_used@@Base+0x19bb8>
  4247d0:	mov	w1, #0x0                   	// #0
  4247d4:	add	x2, x2, #0x6c0
  4247d8:	bl	427178 <nftw@plt+0x245f8>
  4247dc:	ldrb	w0, [x19, #1151]
  4247e0:	cbz	w0, 42476c <nftw@plt+0x21bec>
  4247e4:	mov	x1, x20
  4247e8:	mov	x0, x19
  4247ec:	mov	x2, #0x0                   	// #0
  4247f0:	bl	439ef0 <nftw@plt+0x37370>
  4247f4:	b	42476c <nftw@plt+0x21bec>
  4247f8:	ldr	x3, [x0, #8]
  4247fc:	adrp	x2, 47b000 <_obstack_memory_used@@Base+0x19bb8>
  424800:	mov	x0, x19
  424804:	add	x2, x2, #0xf0
  424808:	mov	w1, #0x3                   	// #3
  42480c:	ldr	x3, [x3]
  424810:	bl	427178 <nftw@plt+0x245f8>
  424814:	b	42469c <nftw@plt+0x21b1c>
  424818:	mov	x0, x19
  42481c:	adrp	x2, 47b000 <_obstack_memory_used@@Base+0x19bb8>
  424820:	mov	w1, #0x3                   	// #3
  424824:	add	x2, x2, #0xb8
  424828:	bl	427178 <nftw@plt+0x245f8>
  42482c:	b	42469c <nftw@plt+0x21b1c>
  424830:	mov	x0, x19
  424834:	adrp	x2, 47b000 <_obstack_memory_used@@Base+0x19bb8>
  424838:	mov	w1, #0x3                   	// #3
  42483c:	add	x2, x2, #0x88
  424840:	bl	427178 <nftw@plt+0x245f8>
  424844:	b	42469c <nftw@plt+0x21b1c>
  424848:	stp	x29, x30, [sp, #-64]!
  42484c:	mov	x29, sp
  424850:	stp	x19, x20, [sp, #16]
  424854:	mov	x19, x0
  424858:	stp	x21, x22, [sp, #32]
  42485c:	str	x23, [sp, #48]
  424860:	ldrb	w1, [x0, #18]
  424864:	cbz	w1, 424920 <nftw@plt+0x21da0>
  424868:	mov	w23, #0x0                   	// #0
  42486c:	mov	w22, #0x1                   	// #1
  424870:	add	x20, x19, #0x328
  424874:	ldr	x21, [x19]
  424878:	ldp	x0, x4, [x20, #24]
  42487c:	sub	x1, x4, x0
  424880:	cmp	x1, #0x1f
  424884:	b.ls	4249b8 <nftw@plt+0x21e38>  // b.plast
  424888:	add	x1, x0, #0x20
  42488c:	ldr	x0, [x20, #16]
  424890:	cmp	x1, x0
  424894:	b.eq	4249d8 <nftw@plt+0x21e58>  // b.none
  424898:	ldr	x2, [x20, #48]
  42489c:	ldr	x3, [x20, #8]
  4248a0:	add	x1, x1, x2
  4248a4:	bic	x1, x1, x2
  4248a8:	str	x1, [x20, #24]
  4248ac:	sub	x2, x1, x3
  4248b0:	sub	x3, x4, x3
  4248b4:	cmp	x2, x3
  4248b8:	b.ls	4248c4 <nftw@plt+0x21d44>  // b.plast
  4248bc:	mov	x1, x4
  4248c0:	str	x4, [x20, #24]
  4248c4:	ldr	w2, [x19, #48]
  4248c8:	ldr	x3, [x21, #96]
  4248cc:	str	x1, [x20, #16]
  4248d0:	str	x3, [x0]
  4248d4:	mov	w1, #0x3                   	// #3
  4248d8:	str	w2, [x0, #8]
  4248dc:	ldrb	w2, [x19, #18]
  4248e0:	str	w1, [x0, #28]
  4248e4:	cmp	w2, #0x0
  4248e8:	str	xzr, [x0, #16]
  4248ec:	cset	w1, ne  // ne = any
  4248f0:	strb	w1, [x0, #25]
  4248f4:	cmp	w1, #0x0
  4248f8:	ccmp	w23, #0x0, #0x0, eq  // eq = none
  4248fc:	cset	w1, ne  // ne = any
  424900:	strb	w1, [x0, #24]
  424904:	strb	w22, [x19, #18]
  424908:	ldp	x19, x20, [sp, #16]
  42490c:	ldr	x23, [sp, #48]
  424910:	str	x0, [x21, #96]
  424914:	ldp	x21, x22, [sp, #32]
  424918:	ldp	x29, x30, [sp], #64
  42491c:	ret
  424920:	mov	w1, #0x0                   	// #0
  424924:	bl	422220 <nftw@plt+0x1f6a0>
  424928:	mov	x20, x0
  42492c:	cbz	x0, 424868 <nftw@plt+0x21ce8>
  424930:	ldrb	w0, [x0, #18]
  424934:	ldrh	w1, [x20, #18]
  424938:	ubfx	x1, x1, #2, #8
  42493c:	tbz	w0, #1, 4249e8 <nftw@plt+0x21e68>
  424940:	ands	w2, w1, #0x40
  424944:	ubfx	x22, x1, #6, #1
  424948:	cset	w23, eq  // eq = none
  42494c:	and	w0, w0, #0x3
  424950:	cmp	w0, #0x2
  424954:	b.eq	4249f4 <nftw@plt+0x21e74>  // b.none
  424958:	tbz	w1, #5, 424a08 <nftw@plt+0x21e88>
  42495c:	ldr	x3, [x19, #1032]
  424960:	cbz	x3, 424974 <nftw@plt+0x21df4>
  424964:	ldr	w1, [x19, #48]
  424968:	mov	x2, x20
  42496c:	mov	x0, x19
  424970:	blr	x3
  424974:	ldr	x0, [x19, #448]
  424978:	ldurb	w0, [x0, #-20]
  42497c:	cmp	w0, #0x16
  424980:	b.eq	424870 <nftw@plt+0x21cf0>  // b.none
  424984:	mov	x0, x19
  424988:	bl	434b58 <nftw@plt+0x31fd8>
  42498c:	ldrb	w0, [x0, #4]
  424990:	cmp	w0, #0x16
  424994:	b.eq	424870 <nftw@plt+0x21cf0>  // b.none
  424998:	ldr	x3, [x19, #144]
  42499c:	mov	x0, x19
  4249a0:	adrp	x2, 47b000 <_obstack_memory_used@@Base+0x19bb8>
  4249a4:	mov	w1, #0x0                   	// #0
  4249a8:	add	x2, x2, #0x360
  4249ac:	ldr	x3, [x3, #8]
  4249b0:	bl	4273b8 <nftw@plt+0x24838>
  4249b4:	b	424870 <nftw@plt+0x21cf0>
  4249b8:	mov	x0, x20
  4249bc:	mov	x1, #0x20                  	// #32
  4249c0:	bl	461200 <_obstack_newchunk@@Base>
  4249c4:	ldp	x0, x4, [x20, #24]
  4249c8:	add	x1, x0, #0x20
  4249cc:	ldr	x0, [x20, #16]
  4249d0:	cmp	x1, x0
  4249d4:	b.ne	424898 <nftw@plt+0x21d18>  // b.any
  4249d8:	ldrb	w2, [x20, #80]
  4249dc:	orr	w2, w2, #0x2
  4249e0:	strb	w2, [x20, #80]
  4249e4:	b	424898 <nftw@plt+0x21d18>
  4249e8:	mov	w23, #0x0                   	// #0
  4249ec:	mov	w22, #0x1                   	// #1
  4249f0:	b	42494c <nftw@plt+0x21dcc>
  4249f4:	ldr	x2, [x20, #24]
  4249f8:	ldrb	w0, [x2, #19]
  4249fc:	orr	w0, w0, #0x20
  424a00:	strb	w0, [x2, #19]
  424a04:	b	424958 <nftw@plt+0x21dd8>
  424a08:	mov	x1, x20
  424a0c:	mov	x0, x19
  424a10:	bl	43be58 <nftw@plt+0x392d8>
  424a14:	b	42495c <nftw@plt+0x21ddc>
  424a18:	stp	x29, x30, [sp, #-80]!
  424a1c:	mov	x29, sp
  424a20:	stp	x19, x20, [sp, #16]
  424a24:	mov	x19, x0
  424a28:	stp	x21, x22, [sp, #32]
  424a2c:	stp	x23, x24, [sp, #48]
  424a30:	ldrb	w22, [x0, #18]
  424a34:	str	x0, [sp, #72]
  424a38:	cbz	w22, 424b30 <nftw@plt+0x21fb0>
  424a3c:	mov	w24, #0x0                   	// #0
  424a40:	mov	w22, #0x1                   	// #1
  424a44:	mov	x21, #0x0                   	// #0
  424a48:	add	x20, x19, #0x328
  424a4c:	ldr	x23, [x19]
  424a50:	ldp	x1, x4, [x20, #24]
  424a54:	sub	x0, x4, x1
  424a58:	cmp	x0, #0x1f
  424a5c:	b.ls	424bcc <nftw@plt+0x2204c>  // b.plast
  424a60:	add	x2, x1, #0x20
  424a64:	ldr	x1, [x20, #16]
  424a68:	cmp	x2, x1
  424a6c:	b.eq	424bec <nftw@plt+0x2206c>  // b.none
  424a70:	ldr	x3, [x20, #48]
  424a74:	ldr	x0, [x20, #8]
  424a78:	add	x2, x2, x3
  424a7c:	bic	x2, x2, x3
  424a80:	str	x2, [x20, #24]
  424a84:	sub	x3, x2, x0
  424a88:	sub	x0, x4, x0
  424a8c:	cmp	x3, x0
  424a90:	b.ls	424a9c <nftw@plt+0x21f1c>  // b.plast
  424a94:	mov	x2, x4
  424a98:	str	x4, [x20, #24]
  424a9c:	ldr	w0, [x19, #48]
  424aa0:	mov	w3, #0x6                   	// #6
  424aa4:	str	x2, [x20, #16]
  424aa8:	ldr	x2, [x23, #96]
  424aac:	str	x2, [x1]
  424ab0:	str	w0, [x1, #8]
  424ab4:	ldrb	w2, [x19, #440]
  424ab8:	ldrb	w0, [x19, #18]
  424abc:	str	w3, [x1, #28]
  424ac0:	cmp	w0, #0x0
  424ac4:	cset	w0, ne  // ne = any
  424ac8:	strb	w0, [x1, #25]
  424acc:	cmp	w0, #0x0
  424ad0:	ccmp	w24, #0x0, #0x0, eq  // eq = none
  424ad4:	cset	w0, ne  // ne = any
  424ad8:	strb	w0, [x1, #24]
  424adc:	cbz	w2, 424b0c <nftw@plt+0x21f8c>
  424ae0:	ldr	x0, [x19, #424]
  424ae4:	cmp	x0, #0x0
  424ae8:	csel	x21, x21, xzr, eq  // eq = none
  424aec:	str	x21, [x1, #16]
  424af0:	strb	w22, [x19, #18]
  424af4:	ldp	x19, x20, [sp, #16]
  424af8:	ldp	x21, x22, [sp, #32]
  424afc:	str	x1, [x23, #96]
  424b00:	ldp	x23, x24, [sp, #48]
  424b04:	ldp	x29, x30, [sp], #80
  424b08:	ret
  424b0c:	mov	x21, #0x0                   	// #0
  424b10:	str	x21, [x1, #16]
  424b14:	strb	w22, [x19, #18]
  424b18:	ldp	x19, x20, [sp, #16]
  424b1c:	ldp	x21, x22, [sp, #32]
  424b20:	str	x1, [x23, #96]
  424b24:	ldp	x23, x24, [sp, #48]
  424b28:	ldp	x29, x30, [sp], #80
  424b2c:	ret
  424b30:	mov	w1, #0x0                   	// #0
  424b34:	bl	422220 <nftw@plt+0x1f6a0>
  424b38:	mov	x21, x0
  424b3c:	cbz	x0, 424a3c <nftw@plt+0x21ebc>
  424b40:	ldrb	w0, [x0, #18]
  424b44:	mov	w24, #0x1                   	// #1
  424b48:	ldrh	w1, [x21, #18]
  424b4c:	ubfx	x1, x1, #2, #8
  424b50:	tbz	w0, #1, 424b60 <nftw@plt+0x21fe0>
  424b54:	ands	w2, w1, #0x40
  424b58:	ubfx	x24, x1, #6, #1
  424b5c:	cset	w22, eq  // eq = none
  424b60:	and	w0, w0, #0x3
  424b64:	cmp	w0, #0x2
  424b68:	b.eq	424bfc <nftw@plt+0x2207c>  // b.none
  424b6c:	tbz	w1, #5, 424c10 <nftw@plt+0x22090>
  424b70:	ldr	x3, [x19, #1032]
  424b74:	cbz	x3, 424b88 <nftw@plt+0x22008>
  424b78:	ldr	w1, [x19, #48]
  424b7c:	mov	x2, x21
  424b80:	mov	x0, x19
  424b84:	blr	x3
  424b88:	ldr	x0, [x19, #448]
  424b8c:	ldurb	w0, [x0, #-20]
  424b90:	cmp	w0, #0x16
  424b94:	b.eq	424a48 <nftw@plt+0x21ec8>  // b.none
  424b98:	mov	x0, x19
  424b9c:	bl	434b58 <nftw@plt+0x31fd8>
  424ba0:	ldrb	w0, [x0, #4]
  424ba4:	cmp	w0, #0x16
  424ba8:	b.eq	424a48 <nftw@plt+0x21ec8>  // b.none
  424bac:	ldr	x3, [x19, #144]
  424bb0:	mov	x0, x19
  424bb4:	adrp	x2, 47b000 <_obstack_memory_used@@Base+0x19bb8>
  424bb8:	mov	w1, #0x0                   	// #0
  424bbc:	add	x2, x2, #0x360
  424bc0:	ldr	x3, [x3, #8]
  424bc4:	bl	4273b8 <nftw@plt+0x24838>
  424bc8:	b	424a48 <nftw@plt+0x21ec8>
  424bcc:	mov	x1, #0x20                  	// #32
  424bd0:	mov	x0, x20
  424bd4:	bl	461200 <_obstack_newchunk@@Base>
  424bd8:	ldp	x1, x4, [x20, #24]
  424bdc:	add	x2, x1, #0x20
  424be0:	ldr	x1, [x20, #16]
  424be4:	cmp	x2, x1
  424be8:	b.ne	424a70 <nftw@plt+0x21ef0>  // b.any
  424bec:	ldrb	w0, [x20, #80]
  424bf0:	orr	w0, w0, #0x2
  424bf4:	strb	w0, [x20, #80]
  424bf8:	b	424a70 <nftw@plt+0x21ef0>
  424bfc:	ldr	x2, [x21, #24]
  424c00:	ldrb	w0, [x2, #19]
  424c04:	orr	w0, w0, #0x20
  424c08:	strb	w0, [x2, #19]
  424c0c:	tbnz	w1, #5, 424b70 <nftw@plt+0x21ff0>
  424c10:	mov	x1, x21
  424c14:	mov	x0, x19
  424c18:	bl	43be58 <nftw@plt+0x392d8>
  424c1c:	b	424b70 <nftw@plt+0x21ff0>
  424c20:	stp	x29, x30, [sp, #-32]!
  424c24:	mov	x29, sp
  424c28:	ldr	x1, [x0]
  424c2c:	stp	x19, x20, [sp, #16]
  424c30:	ldr	x19, [x1, #96]
  424c34:	cbz	x19, 424cc8 <nftw@plt+0x22148>
  424c38:	ldr	w1, [x19, #28]
  424c3c:	mov	x20, x0
  424c40:	cmp	w1, #0x5
  424c44:	b.eq	424ce0 <nftw@plt+0x22160>  // b.none
  424c48:	mov	w0, #0x5                   	// #5
  424c4c:	str	w0, [x19, #28]
  424c50:	ldrb	w0, [x19, #24]
  424c54:	mov	w1, #0x1                   	// #1
  424c58:	strb	w0, [x20, #18]
  424c5c:	str	xzr, [x19, #16]
  424c60:	ldrb	w0, [x19, #25]
  424c64:	strb	w1, [x19, #24]
  424c68:	cbnz	w0, 424c74 <nftw@plt+0x220f4>
  424c6c:	ldrb	w0, [x20, #1140]
  424c70:	cbnz	w0, 424c80 <nftw@plt+0x22100>
  424c74:	ldp	x19, x20, [sp, #16]
  424c78:	ldp	x29, x30, [sp], #32
  424c7c:	ret
  424c80:	ldr	x0, [x20, #448]
  424c84:	ldurb	w0, [x0, #-20]
  424c88:	cmp	w0, #0x16
  424c8c:	b.eq	424c74 <nftw@plt+0x220f4>  // b.none
  424c90:	mov	x0, x20
  424c94:	bl	434b58 <nftw@plt+0x31fd8>
  424c98:	ldrb	w0, [x0, #4]
  424c9c:	cmp	w0, #0x16
  424ca0:	b.eq	424c74 <nftw@plt+0x220f4>  // b.none
  424ca4:	ldr	x3, [x20, #144]
  424ca8:	mov	x0, x20
  424cac:	ldp	x19, x20, [sp, #16]
  424cb0:	adrp	x2, 47b000 <_obstack_memory_used@@Base+0x19bb8>
  424cb4:	ldp	x29, x30, [sp], #32
  424cb8:	add	x2, x2, #0x360
  424cbc:	ldr	x3, [x3, #8]
  424cc0:	mov	w1, #0x8                   	// #8
  424cc4:	b	4273b8 <nftw@plt+0x24838>
  424cc8:	ldp	x19, x20, [sp, #16]
  424ccc:	adrp	x2, 47b000 <_obstack_memory_used@@Base+0x19bb8>
  424cd0:	ldp	x29, x30, [sp], #32
  424cd4:	add	x2, x2, #0x6d0
  424cd8:	mov	w1, #0x3                   	// #3
  424cdc:	b	427178 <nftw@plt+0x245f8>
  424ce0:	mov	w1, #0x3                   	// #3
  424ce4:	adrp	x2, 47b000 <_obstack_memory_used@@Base+0x19bb8>
  424ce8:	add	x2, x2, #0x6e8
  424cec:	bl	427178 <nftw@plt+0x245f8>
  424cf0:	ldr	w2, [x19, #8]
  424cf4:	mov	x0, x20
  424cf8:	adrp	x4, 47b000 <_obstack_memory_used@@Base+0x19bb8>
  424cfc:	mov	w3, #0x0                   	// #0
  424d00:	add	x4, x4, #0x300
  424d04:	mov	w1, #0x3                   	// #3
  424d08:	bl	4275f8 <nftw@plt+0x24a78>
  424d0c:	b	424c48 <nftw@plt+0x220c8>
  424d10:	stp	x29, x30, [sp, #-48]!
  424d14:	mov	x29, sp
  424d18:	str	x21, [sp, #32]
  424d1c:	ldr	x21, [x0]
  424d20:	stp	x19, x20, [sp, #16]
  424d24:	ldr	x20, [x21, #96]
  424d28:	cbz	x20, 424ddc <nftw@plt+0x2225c>
  424d2c:	ldrb	w1, [x20, #25]
  424d30:	mov	x19, x0
  424d34:	cbz	w1, 424d94 <nftw@plt+0x22214>
  424d38:	ldr	x2, [x20]
  424d3c:	cbz	x2, 424dc4 <nftw@plt+0x22244>
  424d40:	add	x0, x19, #0x328
  424d44:	str	x2, [x21, #96]
  424d48:	strb	w1, [x19, #18]
  424d4c:	add	x19, x19, #0x400
  424d50:	ldr	x1, [x0, #8]
  424d54:	cmp	x1, x20
  424d58:	b.cs	424d80 <nftw@plt+0x22200>  // b.hs, b.nlast
  424d5c:	ldr	x1, [x0, #32]
  424d60:	cmp	x1, x20
  424d64:	b.ls	424d80 <nftw@plt+0x22200>  // b.plast
  424d68:	dup	v0.2d, x20
  424d6c:	ldr	x21, [sp, #32]
  424d70:	stur	q0, [x19, #-200]
  424d74:	ldp	x19, x20, [sp, #16]
  424d78:	ldp	x29, x30, [sp], #48
  424d7c:	ret
  424d80:	mov	x1, x20
  424d84:	ldp	x19, x20, [sp, #16]
  424d88:	ldr	x21, [sp, #32]
  424d8c:	ldp	x29, x30, [sp], #48
  424d90:	b	461398 <_obstack_free@@Base>
  424d94:	ldrb	w2, [x0, #1140]
  424d98:	cbz	w2, 424d38 <nftw@plt+0x221b8>
  424d9c:	ldr	x2, [x0, #448]
  424da0:	ldurb	w2, [x2, #-20]
  424da4:	cmp	w2, #0x16
  424da8:	b.eq	424d38 <nftw@plt+0x221b8>  // b.none
  424dac:	bl	434b58 <nftw@plt+0x31fd8>
  424db0:	ldrb	w0, [x0, #4]
  424db4:	cmp	w0, #0x16
  424db8:	b.ne	424df8 <nftw@plt+0x22278>  // b.any
  424dbc:	ldrb	w1, [x20, #25]
  424dc0:	b	424d38 <nftw@plt+0x221b8>
  424dc4:	ldr	x0, [x20, #16]
  424dc8:	cbz	x0, 424d40 <nftw@plt+0x221c0>
  424dcc:	mov	w3, #0x1                   	// #1
  424dd0:	str	x0, [x19, #424]
  424dd4:	strb	w3, [x19, #440]
  424dd8:	b	424d40 <nftw@plt+0x221c0>
  424ddc:	ldp	x19, x20, [sp, #16]
  424de0:	adrp	x2, 47b000 <_obstack_memory_used@@Base+0x19bb8>
  424de4:	ldr	x21, [sp, #32]
  424de8:	add	x2, x2, #0x700
  424dec:	ldp	x29, x30, [sp], #48
  424df0:	mov	w1, #0x3                   	// #3
  424df4:	b	427178 <nftw@plt+0x245f8>
  424df8:	ldr	x3, [x19, #144]
  424dfc:	mov	w1, #0x8                   	// #8
  424e00:	mov	x0, x19
  424e04:	adrp	x2, 47b000 <_obstack_memory_used@@Base+0x19bb8>
  424e08:	add	x2, x2, #0x360
  424e0c:	ldr	x3, [x3, #8]
  424e10:	bl	4273b8 <nftw@plt+0x24838>
  424e14:	ldrb	w1, [x20, #25]
  424e18:	b	424d38 <nftw@plt+0x221b8>
  424e1c:	nop
  424e20:	stp	x29, x30, [sp, #-64]!
  424e24:	mov	x29, sp
  424e28:	stp	x19, x20, [sp, #16]
  424e2c:	mov	x19, x0
  424e30:	stp	x21, x22, [sp, #32]
  424e34:	str	x23, [sp, #48]
  424e38:	bl	422dc8 <nftw@plt+0x20248>
  424e3c:	cbz	x0, 425068 <nftw@plt+0x224e8>
  424e40:	ldr	x1, [x0, #16]
  424e44:	ldr	w0, [x0, #8]
  424e48:	ldrb	w3, [x1]
  424e4c:	add	w2, w0, #0x2
  424e50:	mov	w4, w0
  424e54:	add	x0, x2, #0xf
  424e58:	cmp	w3, #0x4c
  424e5c:	and	x0, x0, #0x1fffffff0
  424e60:	cset	x2, eq  // eq = none
  424e64:	sub	x4, x4, #0x1
  424e68:	add	x2, x2, #0x1
  424e6c:	sub	sp, sp, x0
  424e70:	add	x4, x1, x4
  424e74:	mov	x20, sp
  424e78:	add	x1, x1, x2
  424e7c:	mov	x3, x20
  424e80:	cmp	x1, x4
  424e84:	b.cs	424eb0 <nftw@plt+0x22330>  // b.hs, b.nlast
  424e88:	mov	w6, #0x22                  	// #34
  424e8c:	nop
  424e90:	mov	x0, x1
  424e94:	ldrb	w2, [x0], #1
  424e98:	cmp	w2, #0x5c
  424e9c:	b.eq	424fac <nftw@plt+0x2242c>  // b.none
  424ea0:	mov	x1, x0
  424ea4:	strb	w2, [x3], #1
  424ea8:	cmp	x4, x1
  424eac:	b.hi	424e90 <nftw@plt+0x22310>  // b.pmore
  424eb0:	ldr	x0, [x19, #448]
  424eb4:	strb	wzr, [x3]
  424eb8:	ldurb	w0, [x0, #-20]
  424ebc:	cmp	w0, #0x16
  424ec0:	b.eq	424fe8 <nftw@plt+0x22468>  // b.none
  424ec4:	mov	x0, x19
  424ec8:	bl	434b58 <nftw@plt+0x31fd8>
  424ecc:	ldrb	w0, [x0, #4]
  424ed0:	cmp	w0, #0x16
  424ed4:	b.ne	424fc8 <nftw@plt+0x22448>  // b.any
  424ed8:	ldr	x0, [x19, #136]
  424edc:	ldr	x0, [x0, #8]
  424ee0:	cbz	x0, 424efc <nftw@plt+0x2237c>
  424ee4:	nop
  424ee8:	mov	x0, x19
  424eec:	bl	43a9a8 <nftw@plt+0x37e28>
  424ef0:	ldr	x0, [x19, #136]
  424ef4:	ldr	x0, [x0, #8]
  424ef8:	cbnz	x0, 424ee8 <nftw@plt+0x22368>
  424efc:	ldr	x0, [x19, #448]
  424f00:	ldurb	w0, [x0, #-20]
  424f04:	cmp	w0, #0x16
  424f08:	b.eq	424f24 <nftw@plt+0x223a4>  // b.none
  424f0c:	nop
  424f10:	mov	x0, x19
  424f14:	bl	434b58 <nftw@plt+0x31fd8>
  424f18:	ldrb	w0, [x0, #4]
  424f1c:	cmp	w0, #0x16
  424f20:	b.ne	424f10 <nftw@plt+0x22390>  // b.any
  424f24:	mov	x0, #0x20                  	// #32
  424f28:	bl	461560 <_obstack_memory_used@@Base+0x118>
  424f2c:	mov	x21, x0
  424f30:	mov	x0, x20
  424f34:	stp	xzr, xzr, [x21]
  424f38:	stp	xzr, xzr, [x21, #16]
  424f3c:	bl	4024f0 <strlen@plt>
  424f40:	add	x22, x0, #0x1
  424f44:	mov	x0, x22
  424f48:	bl	461560 <_obstack_memory_used@@Base+0x118>
  424f4c:	str	x0, [x21, #8]
  424f50:	mov	x1, x20
  424f54:	mov	x2, x22
  424f58:	mov	x20, x0
  424f5c:	bl	402490 <memcpy@plt>
  424f60:	ldr	x2, [x19, #1400]
  424f64:	str	x2, [x21]
  424f68:	mov	x1, x20
  424f6c:	mov	x0, x19
  424f70:	bl	42fe98 <nftw@plt+0x2d318>
  424f74:	mov	x20, x0
  424f78:	ldrb	w0, [x0, #18]
  424f7c:	tst	x0, #0x3
  424f80:	b.ne	424ff8 <nftw@plt+0x22478>  // b.any
  424f84:	ldrb	w0, [x21, #28]
  424f88:	orr	w0, w0, #0x4
  424f8c:	strb	w0, [x21, #28]
  424f90:	str	x21, [x19, #1400]
  424f94:	mov	sp, x29
  424f98:	ldp	x19, x20, [sp, #16]
  424f9c:	ldp	x21, x22, [sp, #32]
  424fa0:	ldr	x23, [sp, #48]
  424fa4:	ldp	x29, x30, [sp], #64
  424fa8:	ret
  424fac:	ldrb	w5, [x1, #1]
  424fb0:	add	x1, x1, #0x2
  424fb4:	cmp	w5, #0x5c
  424fb8:	ccmp	w5, w6, #0x4, ne  // ne = any
  424fbc:	b.ne	424ea0 <nftw@plt+0x22320>  // b.any
  424fc0:	mov	w2, w5
  424fc4:	b	424ea4 <nftw@plt+0x22324>
  424fc8:	ldr	x3, [x19, #144]
  424fcc:	mov	x0, x19
  424fd0:	adrp	x2, 47b000 <_obstack_memory_used@@Base+0x19bb8>
  424fd4:	mov	w1, #0x0                   	// #0
  424fd8:	add	x2, x2, #0x360
  424fdc:	ldr	x3, [x3, #8]
  424fe0:	bl	4273b8 <nftw@plt+0x24838>
  424fe4:	b	424ed8 <nftw@plt+0x22358>
  424fe8:	ldr	x0, [x19, #136]
  424fec:	ldr	x0, [x0, #8]
  424ff0:	cbnz	x0, 424ee8 <nftw@plt+0x22368>
  424ff4:	b	424f24 <nftw@plt+0x223a4>
  424ff8:	mov	x1, x20
  424ffc:	mov	x0, x19
  425000:	bl	43e428 <nftw@plt+0x3b8a8>
  425004:	mov	x23, x0
  425008:	bl	4024f0 <strlen@plt>
  42500c:	mov	x22, x0
  425010:	add	x0, x0, #0x2
  425014:	bl	461560 <_obstack_memory_used@@Base+0x118>
  425018:	add	x4, x0, x22
  42501c:	mov	w6, #0xa                   	// #10
  425020:	strb	w6, [x0, x22]
  425024:	mov	x1, x23
  425028:	ldrb	w5, [x21, #28]
  42502c:	mov	x2, x22
  425030:	strb	wzr, [x4, #1]
  425034:	str	x0, [x21, #16]
  425038:	ldr	x3, [x20, #24]
  42503c:	ldrb	w4, [x3, #19]
  425040:	ldr	w3, [x3, #8]
  425044:	str	w3, [x21, #24]
  425048:	ubfx	x3, x4, #5, #1
  42504c:	ubfx	x4, x4, #4, #1
  425050:	ubfiz	w3, w3, #1, #7
  425054:	orr	w3, w3, w4
  425058:	bfxil	w5, w3, #0, #2
  42505c:	strb	w5, [x21, #28]
  425060:	bl	402490 <memcpy@plt>
  425064:	b	424f90 <nftw@plt+0x22410>
  425068:	ldr	x2, [x19, #448]
  42506c:	mov	x0, x19
  425070:	adrp	x4, 47b000 <_obstack_memory_used@@Base+0x19bb8>
  425074:	mov	w3, #0x0                   	// #0
  425078:	add	x4, x4, #0x718
  42507c:	mov	w1, #0x3                   	// #3
  425080:	ldur	w2, [x2, #-24]
  425084:	bl	4275f8 <nftw@plt+0x24a78>
  425088:	ldr	x0, [x19, #448]
  42508c:	ldurb	w0, [x0, #-20]
  425090:	cmp	w0, #0x16
  425094:	b.eq	425118 <nftw@plt+0x22598>  // b.none
  425098:	mov	x0, x19
  42509c:	bl	434b58 <nftw@plt+0x31fd8>
  4250a0:	ldrb	w0, [x0, #4]
  4250a4:	cmp	w0, #0x16
  4250a8:	b.ne	4250f8 <nftw@plt+0x22578>  // b.any
  4250ac:	ldr	x0, [x19, #136]
  4250b0:	ldr	x0, [x0, #8]
  4250b4:	cbz	x0, 4250cc <nftw@plt+0x2254c>
  4250b8:	mov	x0, x19
  4250bc:	bl	43a9a8 <nftw@plt+0x37e28>
  4250c0:	ldr	x0, [x19, #136]
  4250c4:	ldr	x0, [x0, #8]
  4250c8:	cbnz	x0, 4250b8 <nftw@plt+0x22538>
  4250cc:	ldr	x0, [x19, #448]
  4250d0:	ldurb	w0, [x0, #-20]
  4250d4:	cmp	w0, #0x16
  4250d8:	b.eq	424f94 <nftw@plt+0x22414>  // b.none
  4250dc:	nop
  4250e0:	mov	x0, x19
  4250e4:	bl	434b58 <nftw@plt+0x31fd8>
  4250e8:	ldrb	w0, [x0, #4]
  4250ec:	cmp	w0, #0x16
  4250f0:	b.ne	4250e0 <nftw@plt+0x22560>  // b.any
  4250f4:	b	424f94 <nftw@plt+0x22414>
  4250f8:	ldr	x3, [x19, #144]
  4250fc:	mov	x0, x19
  425100:	adrp	x2, 47b000 <_obstack_memory_used@@Base+0x19bb8>
  425104:	mov	w1, #0x0                   	// #0
  425108:	add	x2, x2, #0x360
  42510c:	ldr	x3, [x3, #8]
  425110:	bl	4273b8 <nftw@plt+0x24838>
  425114:	b	4250ac <nftw@plt+0x2252c>
  425118:	ldr	x0, [x19, #136]
  42511c:	ldr	x0, [x0, #8]
  425120:	cbnz	x0, 4250b8 <nftw@plt+0x22538>
  425124:	b	424f94 <nftw@plt+0x22414>
  425128:	stp	x29, x30, [sp, #-240]!
  42512c:	mov	x29, sp
  425130:	stp	x19, x20, [sp, #16]
  425134:	mov	x19, x0
  425138:	stp	x21, x22, [sp, #32]
  42513c:	mov	w21, w1
  425140:	stp	x23, x24, [sp, #48]
  425144:	ldrb	w23, [x0, #27]
  425148:	ldrb	w22, [x0, #25]
  42514c:	cbz	w23, 425154 <nftw@plt+0x225d4>
  425150:	strb	wzr, [x0, #24]
  425154:	cbz	w22, 425164 <nftw@plt+0x225e4>
  425158:	ldrb	w0, [x19, #1154]
  42515c:	cbnz	w0, 42547c <nftw@plt+0x228fc>
  425160:	strh	wzr, [x19, #24]
  425164:	ldr	x1, [x19, #40]
  425168:	mov	w0, #0x1                   	// #1
  42516c:	strb	w0, [x19, #16]
  425170:	mov	w2, #0x53                  	// #83
  425174:	strb	wzr, [x19, #21]
  425178:	mov	x0, x19
  42517c:	strb	w2, [x19, #156]
  425180:	ldr	w1, [x1, #60]
  425184:	str	w1, [x19, #48]
  425188:	bl	434b58 <nftw@plt+0x31fd8>
  42518c:	mov	x20, x0
  425190:	ldrb	w0, [x0, #4]
  425194:	cmp	w0, #0x35
  425198:	b.eq	425348 <nftw@plt+0x227c8>  // b.none
  42519c:	cmp	w0, #0x37
  4251a0:	b.eq	425250 <nftw@plt+0x226d0>  // b.none
  4251a4:	cmp	w0, #0x16
  4251a8:	b.ne	425354 <nftw@plt+0x227d4>  // b.any
  4251ac:	ldrb	w0, [x19, #1160]
  4251b0:	str	xzr, [x19, #144]
  4251b4:	cbz	w0, 425338 <nftw@plt+0x227b8>
  4251b8:	mov	x0, x19
  4251bc:	bl	422b90 <nftw@plt+0x20010>
  4251c0:	ldrb	w0, [x19, #1160]
  4251c4:	cbz	w0, 425338 <nftw@plt+0x227b8>
  4251c8:	mov	w20, #0x1                   	// #1
  4251cc:	ldrb	w0, [x19, #32]
  4251d0:	cbnz	w0, 4251e0 <nftw@plt+0x22660>
  4251d4:	ldrb	w0, [x19, #24]
  4251d8:	sub	w0, w0, #0x1
  4251dc:	strb	w0, [x19, #24]
  4251e0:	ldr	x1, [x19, #144]
  4251e4:	adrp	x0, 47b000 <_obstack_memory_used@@Base+0x19bb8>
  4251e8:	add	x0, x0, #0xab0
  4251ec:	cmp	x1, x0
  4251f0:	b.eq	4251fc <nftw@plt+0x2267c>  // b.none
  4251f4:	mov	x0, x19
  4251f8:	bl	4400f0 <nftw@plt+0x3d570>
  4251fc:	ldrb	w0, [x19, #1123]
  425200:	strb	wzr, [x19, #16]
  425204:	cmp	w0, #0x0
  425208:	sturh	wzr, [x19, #19]
  42520c:	cset	w0, eq  // eq = none
  425210:	strb	w0, [x19, #21]
  425214:	str	xzr, [x19, #144]
  425218:	cbz	w22, 42522c <nftw@plt+0x226ac>
  42521c:	ldrb	w0, [x19, #32]
  425220:	cbnz	w0, 42522c <nftw@plt+0x226ac>
  425224:	mov	w0, #0x201                 	// #513
  425228:	strh	w0, [x19, #24]
  42522c:	cbz	w23, 425238 <nftw@plt+0x226b8>
  425230:	mov	w0, #0x1                   	// #1
  425234:	strb	w0, [x19, #24]
  425238:	mov	w0, w20
  42523c:	ldp	x19, x20, [sp, #16]
  425240:	ldp	x21, x22, [sp, #32]
  425244:	ldp	x23, x24, [sp, #48]
  425248:	ldp	x29, x30, [sp], #240
  42524c:	ret
  425250:	ldr	w0, [x19, #1116]
  425254:	cmp	w0, #0x15
  425258:	b.eq	425308 <nftw@plt+0x22788>  // b.none
  42525c:	ldrb	w0, [x19, #1154]
  425260:	ldrb	w2, [x19, #1155]
  425264:	cbz	w0, 4252e0 <nftw@plt+0x22760>
  425268:	cbnz	w2, 4252e0 <nftw@plt+0x22760>
  42526c:	ldrb	w0, [x19, #18]
  425270:	cbz	w0, 4252c8 <nftw@plt+0x22748>
  425274:	adrp	x24, 47b000 <_obstack_memory_used@@Base+0x19bb8>
  425278:	add	x24, x24, #0xab0
  42527c:	add	x20, x24, #0x1c8
  425280:	strb	wzr, [x19, #17]
  425284:	strb	wzr, [x19, #19]
  425288:	strb	wzr, [x19, #440]
  42528c:	ldrb	w0, [x19, #1138]
  425290:	cbz	w0, 425538 <nftw@plt+0x229b8>
  425294:	add	x24, x24, #0xd8
  425298:	cmp	x20, x24
  42529c:	b.eq	4255d4 <nftw@plt+0x22a54>  // b.none
  4252a0:	ldrb	w0, [x20, #18]
  4252a4:	cbnz	w21, 4255b4 <nftw@plt+0x22a34>
  4252a8:	cbz	w0, 425530 <nftw@plt+0x229b0>
  4252ac:	ldr	x3, [x20, #8]
  4252b0:	mov	x0, x19
  4252b4:	adrp	x2, 47b000 <_obstack_memory_used@@Base+0x19bb8>
  4252b8:	mov	w1, #0x6                   	// #6
  4252bc:	add	x2, x2, #0x850
  4252c0:	bl	427298 <nftw@plt+0x24718>
  4252c4:	b	425530 <nftw@plt+0x229b0>
  4252c8:	mov	x0, x19
  4252cc:	adrp	x2, 47b000 <_obstack_memory_used@@Base+0x19bb8>
  4252d0:	mov	w1, #0x2                   	// #2
  4252d4:	add	x2, x2, #0x780
  4252d8:	bl	427178 <nftw@plt+0x245f8>
  4252dc:	ldrb	w2, [x19, #1155]
  4252e0:	adrp	x24, 47b000 <_obstack_memory_used@@Base+0x19bb8>
  4252e4:	add	x24, x24, #0xab0
  4252e8:	add	x20, x24, #0x1c8
  4252ec:	mov	w0, #0x8                   	// #8
  4252f0:	strb	wzr, [x19, #440]
  4252f4:	cbz	w2, 42542c <nftw@plt+0x228ac>
  4252f8:	ldrb	w1, [x19, #1244]
  4252fc:	cbnz	w1, 425524 <nftw@plt+0x229a4>
  425300:	cbz	w21, 425520 <nftw@plt+0x229a0>
  425304:	nop
  425308:	ldrb	w0, [x19, #1160]
  42530c:	str	xzr, [x19, #144]
  425310:	cbz	w0, 42531c <nftw@plt+0x2279c>
  425314:	mov	x0, x19
  425318:	bl	422b90 <nftw@plt+0x20010>
  42531c:	mov	x0, x19
  425320:	mov	w1, #0x1                   	// #1
  425324:	bl	43ab60 <nftw@plt+0x37fe0>
  425328:	mov	w20, #0x0                   	// #0
  42532c:	ldrb	w0, [x19, #1160]
  425330:	cbnz	w0, 4251cc <nftw@plt+0x2264c>
  425334:	b	4251fc <nftw@plt+0x2267c>
  425338:	ldrb	w0, [x19, #32]
  42533c:	cbz	w0, 425498 <nftw@plt+0x22918>
  425340:	mov	w20, #0x1                   	// #1
  425344:	b	4251fc <nftw@plt+0x2267c>
  425348:	ldr	x0, [x20, #8]
  42534c:	ldrb	w0, [x0, #16]
  425350:	tbnz	w0, #0, 4253fc <nftw@plt+0x2287c>
  425354:	ldr	w0, [x19, #1116]
  425358:	cmp	w0, #0x15
  42535c:	b.eq	425308 <nftw@plt+0x22788>  // b.none
  425360:	ldrb	w0, [x19, #18]
  425364:	cbnz	w0, 4251ac <nftw@plt+0x2262c>
  425368:	mov	x1, x20
  42536c:	mov	x0, x19
  425370:	bl	4307f8 <nftw@plt+0x2dc78>
  425374:	mov	x21, x0
  425378:	ldr	x3, [x19, #1064]
  42537c:	cbz	x3, 425504 <nftw@plt+0x22984>
  425380:	adrp	x2, 47b000 <_obstack_memory_used@@Base+0x19bb8>
  425384:	add	x2, x2, #0xab0
  425388:	mov	x1, x0
  42538c:	add	x2, x2, #0x1e0
  425390:	mov	x0, x19
  425394:	blr	x3
  425398:	mov	x24, x0
  42539c:	cbz	x0, 425504 <nftw@plt+0x22984>
  4253a0:	ldr	w2, [x20]
  4253a4:	mov	x3, #0x0                   	// #0
  4253a8:	ldr	x1, [x19, #40]
  4253ac:	add	x0, sp, #0x48
  4253b0:	bl	437b48 <nftw@plt+0x34fc8>
  4253b4:	ldr	w1, [x20]
  4253b8:	ldr	x0, [x19, #40]
  4253bc:	bl	4360f0 <nftw@plt+0x33570>
  4253c0:	mov	x1, x0
  4253c4:	mov	x2, x24
  4253c8:	add	x0, sp, #0x48
  4253cc:	bl	438a28 <nftw@plt+0x35ea8>
  4253d0:	mov	x5, x24
  4253d4:	mov	x4, x21
  4253d8:	add	x2, sp, #0x48
  4253dc:	adrp	x3, 47b000 <_obstack_memory_used@@Base+0x19bb8>
  4253e0:	add	x3, x3, #0x890
  4253e4:	mov	w1, #0x3                   	// #3
  4253e8:	mov	x0, x19
  4253ec:	bl	4278d0 <nftw@plt+0x24d50>
  4253f0:	add	x0, sp, #0x48
  4253f4:	bl	437b88 <nftw@plt+0x35008>
  4253f8:	b	4251ac <nftw@plt+0x2262c>
  4253fc:	ubfx	x0, x0, #1, #7
  425400:	adrp	x24, 47b000 <_obstack_memory_used@@Base+0x19bb8>
  425404:	add	x24, x24, #0xab0
  425408:	mov	w20, #0x18                  	// #24
  42540c:	sbfiz	x1, x0, #1, #32
  425410:	ldrb	w2, [x19, #1155]
  425414:	add	x1, x1, w0, sxtw
  425418:	umaddl	x20, w0, w20, x24
  42541c:	add	x0, x24, x1, lsl #3
  425420:	ldrb	w0, [x0, #19]
  425424:	tbz	w0, #1, 4252f0 <nftw@plt+0x22770>
  425428:	cbnz	w2, 4252f8 <nftw@plt+0x22778>
  42542c:	ldrb	w2, [x19, #18]
  425430:	and	w1, w0, #0x4
  425434:	strb	w1, [x19, #17]
  425438:	strb	w1, [x19, #19]
  42543c:	cbnz	w2, 42528c <nftw@plt+0x2270c>
  425440:	ldrb	w1, [x20, #18]
  425444:	cmp	w1, #0x2
  425448:	b.ne	425460 <nftw@plt+0x228e0>  // b.any
  42544c:	add	x1, x24, #0x168
  425450:	cmp	x20, x1
  425454:	b.eq	425580 <nftw@plt+0x22a00>  // b.none
  425458:	ldrb	w1, [x19, #1154]
  42545c:	cbnz	w1, 42555c <nftw@plt+0x229dc>
  425460:	tbnz	w0, #5, 425590 <nftw@plt+0x22a10>
  425464:	add	x0, x24, #0x168
  425468:	cmp	x20, x0
  42546c:	b.eq	4255ec <nftw@plt+0x22a6c>  // b.none
  425470:	ldrb	w0, [x19, #1138]
  425474:	cbnz	w0, 425294 <nftw@plt+0x22714>
  425478:	b	425540 <nftw@plt+0x229c0>
  42547c:	mov	x0, x19
  425480:	adrp	x2, 47b000 <_obstack_memory_used@@Base+0x19bb8>
  425484:	mov	w1, #0x2                   	// #2
  425488:	add	x2, x2, #0x740
  42548c:	bl	427178 <nftw@plt+0x245f8>
  425490:	strh	wzr, [x19, #24]
  425494:	b	425164 <nftw@plt+0x225e4>
  425498:	ldr	x0, [x19, #136]
  42549c:	ldr	x0, [x0, #8]
  4254a0:	cbz	x0, 4254bc <nftw@plt+0x2293c>
  4254a4:	nop
  4254a8:	mov	x0, x19
  4254ac:	bl	43a9a8 <nftw@plt+0x37e28>
  4254b0:	ldr	x0, [x19, #136]
  4254b4:	ldr	x0, [x0, #8]
  4254b8:	cbnz	x0, 4254a8 <nftw@plt+0x22928>
  4254bc:	ldr	x0, [x19, #448]
  4254c0:	ldurb	w0, [x0, #-20]
  4254c4:	cmp	w0, #0x16
  4254c8:	b.eq	4254e4 <nftw@plt+0x22964>  // b.none
  4254cc:	nop
  4254d0:	mov	x0, x19
  4254d4:	bl	434b58 <nftw@plt+0x31fd8>
  4254d8:	ldrb	w0, [x0, #4]
  4254dc:	cmp	w0, #0x16
  4254e0:	b.ne	4254d0 <nftw@plt+0x22950>  // b.any
  4254e4:	ldr	w0, [x19, #500]
  4254e8:	cbnz	w0, 425340 <nftw@plt+0x227c0>
  4254ec:	ldr	x1, [x19, #472]
  4254f0:	add	x0, x19, #0x1c8
  4254f4:	mov	w20, #0x1                   	// #1
  4254f8:	str	x1, [x19, #448]
  4254fc:	str	x0, [x19, #488]
  425500:	b	4251fc <nftw@plt+0x2267c>
  425504:	mov	x3, x21
  425508:	mov	x0, x19
  42550c:	adrp	x2, 47b000 <_obstack_memory_used@@Base+0x19bb8>
  425510:	mov	w1, #0x3                   	// #3
  425514:	add	x2, x2, #0x8c8
  425518:	bl	427178 <nftw@plt+0x245f8>
  42551c:	b	4251ac <nftw@plt+0x2262c>
  425520:	tbz	w0, #3, 425308 <nftw@plt+0x22788>
  425524:	and	w0, w0, #0x4
  425528:	strb	w0, [x19, #17]
  42552c:	strb	w0, [x19, #19]
  425530:	ldrb	w0, [x19, #18]
  425534:	cbz	w0, 425540 <nftw@plt+0x229c0>
  425538:	ldrb	w0, [x20, #19]
  42553c:	tbz	w0, #0, 4251ac <nftw@plt+0x2262c>
  425540:	ldrb	w0, [x19, #1160]
  425544:	str	x20, [x19, #144]
  425548:	cbnz	w0, 425600 <nftw@plt+0x22a80>
  42554c:	ldr	x1, [x20]
  425550:	mov	x0, x19
  425554:	blr	x1
  425558:	b	4251c0 <nftw@plt+0x22640>
  42555c:	ldr	x3, [x20, #8]
  425560:	adrp	x2, 47b000 <_obstack_memory_used@@Base+0x19bb8>
  425564:	mov	x0, x19
  425568:	add	x2, x2, #0x7b0
  42556c:	mov	w1, #0x2                   	// #2
  425570:	bl	427178 <nftw@plt+0x245f8>
  425574:	ldrb	w0, [x19, #1138]
  425578:	cbz	w0, 425530 <nftw@plt+0x229b0>
  42557c:	b	425294 <nftw@plt+0x22714>
  425580:	ldrb	w1, [x19, #1122]
  425584:	cbz	w1, 425458 <nftw@plt+0x228d8>
  425588:	tbz	w0, #5, 4255f4 <nftw@plt+0x22a74>
  42558c:	nop
  425590:	ldrb	w0, [x19, #1132]
  425594:	cbz	w0, 425470 <nftw@plt+0x228f0>
  425598:	ldr	x3, [x20, #8]
  42559c:	mov	x0, x19
  4255a0:	adrp	x2, 47b000 <_obstack_memory_used@@Base+0x19bb8>
  4255a4:	mov	w1, #0x1                   	// #1
  4255a8:	add	x2, x2, #0x7c8
  4255ac:	bl	427298 <nftw@plt+0x24718>
  4255b0:	b	425574 <nftw@plt+0x229f4>
  4255b4:	cbnz	w0, 425530 <nftw@plt+0x229b0>
  4255b8:	ldr	x3, [x20, #8]
  4255bc:	mov	x0, x19
  4255c0:	adrp	x2, 47b000 <_obstack_memory_used@@Base+0x19bb8>
  4255c4:	mov	w1, #0x6                   	// #6
  4255c8:	add	x2, x2, #0x820
  4255cc:	bl	427298 <nftw@plt+0x24718>
  4255d0:	b	425530 <nftw@plt+0x229b0>
  4255d4:	mov	x0, x19
  4255d8:	adrp	x2, 47b000 <_obstack_memory_used@@Base+0x19bb8>
  4255dc:	mov	w1, #0x6                   	// #6
  4255e0:	add	x2, x2, #0x7f0
  4255e4:	bl	427298 <nftw@plt+0x24718>
  4255e8:	b	425540 <nftw@plt+0x229c0>
  4255ec:	ldrb	w0, [x19, #1122]
  4255f0:	cbz	w0, 425590 <nftw@plt+0x22a10>
  4255f4:	ldrb	w0, [x19, #1138]
  4255f8:	cbnz	w0, 4252a0 <nftw@plt+0x22720>
  4255fc:	b	425540 <nftw@plt+0x229c0>
  425600:	mov	x0, x19
  425604:	bl	422b90 <nftw@plt+0x20010>
  425608:	ldr	x20, [x19, #144]
  42560c:	b	42554c <nftw@plt+0x229cc>
  425610:	adrp	x1, 422000 <nftw@plt+0x1f480>
  425614:	mov	x2, #0x0                   	// #0
  425618:	add	x1, x1, #0x180
  42561c:	b	42ebb0 <nftw@plt+0x2c030>
  425620:	stp	x29, x30, [sp, #-32]!
  425624:	mov	w5, w3
  425628:	mov	x3, x2
  42562c:	mov	x29, sp
  425630:	stp	x19, x20, [sp, #16]
  425634:	mov	x19, x0
  425638:	mov	w0, w4
  42563c:	mov	w2, w0
  425640:	mov	w4, w5
  425644:	ldr	x0, [x19, #40]
  425648:	bl	4355d8 <nftw@plt+0x32a58>
  42564c:	mov	x20, x0
  425650:	cbz	x0, 425664 <nftw@plt+0x22ae4>
  425654:	ldr	w1, [x0, #16]
  425658:	mov	w2, #0x7f                  	// #127
  42565c:	ldr	x0, [x19, #40]
  425660:	bl	4359a8 <nftw@plt+0x32e28>
  425664:	ldr	x2, [x19, #912]
  425668:	cbz	x2, 425684 <nftw@plt+0x22b04>
  42566c:	mov	x1, x20
  425670:	mov	x0, x19
  425674:	ldp	x19, x20, [sp, #16]
  425678:	mov	x16, x2
  42567c:	ldp	x29, x30, [sp], #32
  425680:	br	x16
  425684:	ldp	x19, x20, [sp, #16]
  425688:	ldp	x29, x30, [sp], #32
  42568c:	ret
  425690:	cbz	x3, 4256c8 <nftw@plt+0x22b48>
  425694:	stp	x29, x30, [sp, #-32]!
  425698:	mov	x29, sp
  42569c:	stp	x19, x20, [sp, #16]
  4256a0:	mov	x19, x3
  4256a4:	and	w20, w4, #0xff
  4256a8:	mov	w3, #0x0                   	// #0
  4256ac:	bl	423328 <nftw@plt+0x207a8>
  4256b0:	cbz	x0, 4256bc <nftw@plt+0x22b3c>
  4256b4:	strb	w20, [x0, #19]
  4256b8:	str	x19, [x0, #24]
  4256bc:	ldp	x19, x20, [sp, #16]
  4256c0:	ldp	x29, x30, [sp], #32
  4256c4:	ret
  4256c8:	adrp	x2, 47b000 <_obstack_memory_used@@Base+0x19bb8>
  4256cc:	mov	w1, #0x4                   	// #4
  4256d0:	add	x2, x2, #0x8f0
  4256d4:	b	427178 <nftw@plt+0x245f8>
  4256d8:	stp	x29, x30, [sp, #-32]!
  4256dc:	mov	x29, sp
  4256e0:	stp	x19, x20, [sp, #16]
  4256e4:	mov	w19, w3
  4256e8:	and	w20, w4, #0xff
  4256ec:	mov	w3, w5
  4256f0:	bl	423328 <nftw@plt+0x207a8>
  4256f4:	cbz	x0, 425708 <nftw@plt+0x22b88>
  4256f8:	mov	w1, #0x1                   	// #1
  4256fc:	strb	w1, [x0, #18]
  425700:	strb	w20, [x0, #19]
  425704:	str	w19, [x0, #24]
  425708:	ldp	x19, x20, [sp, #16]
  42570c:	ldp	x29, x30, [sp], #32
  425710:	ret
  425714:	nop
  425718:	stp	x29, x30, [sp, #-48]!
  42571c:	mov	x1, #0x0                   	// #0
  425720:	mov	w3, #0x0                   	// #0
  425724:	mov	x29, sp
  425728:	adrp	x2, 47b000 <_obstack_memory_used@@Base+0x19bb8>
  42572c:	add	x2, x2, #0x918
  425730:	stp	x19, x20, [sp, #16]
  425734:	mov	x19, x0
  425738:	mov	w20, #0x1                   	// #1
  42573c:	str	x21, [sp, #32]
  425740:	bl	423328 <nftw@plt+0x207a8>
  425744:	mov	x1, x0
  425748:	adrp	x3, 423000 <nftw@plt+0x20480>
  42574c:	add	x3, x3, #0x820
  425750:	mov	x0, x19
  425754:	adrp	x2, 47b000 <_obstack_memory_used@@Base+0x19bb8>
  425758:	add	x2, x2, #0x920
  42575c:	strb	w20, [x1, #17]
  425760:	adrp	x21, 47b000 <_obstack_memory_used@@Base+0x19bb8>
  425764:	str	x3, [x1, #24]
  425768:	mov	x1, #0x0                   	// #0
  42576c:	mov	w3, #0x0                   	// #0
  425770:	add	x21, x21, #0x948
  425774:	bl	423328 <nftw@plt+0x207a8>
  425778:	mov	x1, x0
  42577c:	adrp	x4, 424000 <nftw@plt+0x21480>
  425780:	add	x4, x4, #0xe20
  425784:	adrp	x2, 47b000 <_obstack_memory_used@@Base+0x19bb8>
  425788:	add	x2, x2, #0x930
  42578c:	strb	w20, [x1, #17]
  425790:	mov	x0, x19
  425794:	str	x4, [x1, #24]
  425798:	mov	w3, #0x0                   	// #0
  42579c:	mov	x1, #0x0                   	// #0
  4257a0:	bl	423328 <nftw@plt+0x207a8>
  4257a4:	mov	x2, x0
  4257a8:	adrp	x3, 425000 <nftw@plt+0x22480>
  4257ac:	add	x3, x3, #0xe08
  4257b0:	mov	x1, x21
  4257b4:	mov	x0, x19
  4257b8:	strb	w20, [x2, #17]
  4257bc:	str	x3, [x2, #24]
  4257c0:	mov	w3, #0x0                   	// #0
  4257c4:	adrp	x2, 47b000 <_obstack_memory_used@@Base+0x19bb8>
  4257c8:	add	x2, x2, #0x940
  4257cc:	bl	423328 <nftw@plt+0x207a8>
  4257d0:	mov	x3, x0
  4257d4:	adrp	x4, 422000 <nftw@plt+0x1f480>
  4257d8:	add	x4, x4, #0x400
  4257dc:	mov	x1, x21
  4257e0:	mov	x0, x19
  4257e4:	strb	w20, [x3, #17]
  4257e8:	adrp	x2, 47b000 <_obstack_memory_used@@Base+0x19bb8>
  4257ec:	str	x4, [x3, #24]
  4257f0:	mov	w3, #0x0                   	// #0
  4257f4:	add	x2, x2, #0x950
  4257f8:	bl	423328 <nftw@plt+0x207a8>
  4257fc:	mov	x3, x0
  425800:	adrp	x4, 423000 <nftw@plt+0x20480>
  425804:	add	x4, x4, #0x978
  425808:	mov	x1, x21
  42580c:	mov	x0, x19
  425810:	strb	w20, [x3, #17]
  425814:	adrp	x2, 47b000 <_obstack_memory_used@@Base+0x19bb8>
  425818:	str	x4, [x3, #24]
  42581c:	mov	w3, #0x0                   	// #0
  425820:	add	x2, x2, #0x960
  425824:	bl	423328 <nftw@plt+0x207a8>
  425828:	mov	x3, x0
  42582c:	adrp	x4, 423000 <nftw@plt+0x20480>
  425830:	add	x4, x4, #0x218
  425834:	mov	x1, x21
  425838:	mov	x0, x19
  42583c:	strb	w20, [x3, #17]
  425840:	adrp	x2, 473000 <_obstack_memory_used@@Base+0x11bb8>
  425844:	str	x4, [x3, #24]
  425848:	mov	w3, #0x0                   	// #0
  42584c:	add	x2, x2, #0x9a0
  425850:	bl	423328 <nftw@plt+0x207a8>
  425854:	mov	x3, x0
  425858:	adrp	x4, 422000 <nftw@plt+0x1f480>
  42585c:	add	x4, x4, #0x758
  425860:	mov	x1, x21
  425864:	mov	x0, x19
  425868:	strb	w20, [x3, #17]
  42586c:	adrp	x2, 481000 <_obstack_memory_used@@Base+0x1fbb8>
  425870:	str	x4, [x3, #24]
  425874:	add	x2, x2, #0xe50
  425878:	mov	w3, #0x0                   	// #0
  42587c:	bl	423328 <nftw@plt+0x207a8>
  425880:	strb	w20, [x0, #17]
  425884:	adrp	x1, 423000 <nftw@plt+0x20480>
  425888:	add	x1, x1, #0x528
  42588c:	ldp	x19, x20, [sp, #16]
  425890:	ldr	x21, [sp, #32]
  425894:	str	x1, [x0, #24]
  425898:	ldp	x29, x30, [sp], #48
  42589c:	ret
  4258a0:	stp	x29, x30, [sp, #-48]!
  4258a4:	mov	x1, #0x0                   	// #0
  4258a8:	mov	x29, sp
  4258ac:	ldr	x2, [x0, #896]
  4258b0:	stp	x19, x20, [sp, #16]
  4258b4:	mov	x19, x0
  4258b8:	str	x21, [sp, #32]
  4258bc:	cbz	x2, 4258d8 <nftw@plt+0x22d58>
  4258c0:	ldrb	w0, [x2, #16]
  4258c4:	cbnz	w0, 425974 <nftw@plt+0x22df4>
  4258c8:	ldr	x2, [x2]
  4258cc:	add	w1, w1, #0x1
  4258d0:	cbnz	x2, 4258c0 <nftw@plt+0x22d40>
  4258d4:	sbfiz	x1, x1, #3, #32
  4258d8:	mov	x0, x1
  4258dc:	bl	461560 <_obstack_memory_used@@Base+0x118>
  4258e0:	ldr	x19, [x19, #896]
  4258e4:	mov	x21, x0
  4258e8:	mov	x1, x0
  4258ec:	cbz	x19, 425960 <nftw@plt+0x22de0>
  4258f0:	ldrb	w0, [x19, #16]
  4258f4:	mov	x20, x1
  4258f8:	cbnz	w0, 425930 <nftw@plt+0x22db0>
  4258fc:	ldr	x1, [x19, #8]
  425900:	ldr	x0, [x1]
  425904:	ldr	w1, [x1, #8]
  425908:	add	w2, w1, #0x1
  42590c:	mov	w1, w1
  425910:	bl	461630 <_obstack_memory_used@@Base+0x1e8>
  425914:	ldr	x19, [x19]
  425918:	str	x0, [x20], #8
  42591c:	cbz	x19, 425960 <nftw@plt+0x22de0>
  425920:	ldrb	w0, [x19, #16]
  425924:	mov	x1, x20
  425928:	mov	x20, x1
  42592c:	cbz	w0, 4258fc <nftw@plt+0x22d7c>
  425930:	ldr	x0, [x19, #24]
  425934:	bl	422d30 <nftw@plt+0x201b0>
  425938:	mov	x20, x0
  42593c:	ldr	x1, [x19, #8]
  425940:	ldr	x0, [x1]
  425944:	ldr	w1, [x1, #8]
  425948:	add	w2, w1, #0x1
  42594c:	mov	w1, w1
  425950:	bl	461630 <_obstack_memory_used@@Base+0x1e8>
  425954:	ldr	x19, [x19]
  425958:	str	x0, [x20], #8
  42595c:	cbnz	x19, 425920 <nftw@plt+0x22da0>
  425960:	mov	x0, x21
  425964:	ldp	x19, x20, [sp, #16]
  425968:	ldr	x21, [sp, #32]
  42596c:	ldp	x29, x30, [sp], #48
  425970:	ret
  425974:	ldr	x0, [x2, #24]
  425978:	bl	4221b8 <nftw@plt+0x1f638>
  42597c:	add	w1, w0, w1
  425980:	ldr	x2, [x2]
  425984:	add	w1, w1, #0x1
  425988:	cbnz	x2, 4258c0 <nftw@plt+0x22d40>
  42598c:	b	4258d4 <nftw@plt+0x22d54>
  425990:	stp	x29, x30, [sp, #-64]!
  425994:	mov	x29, sp
  425998:	stp	x19, x20, [sp, #16]
  42599c:	ldr	x19, [x0, #896]
  4259a0:	stp	x21, x22, [sp, #32]
  4259a4:	mov	x22, x1
  4259a8:	cbz	x19, 4259f4 <nftw@plt+0x22e74>
  4259ac:	mov	x21, x0
  4259b0:	mov	x20, x1
  4259b4:	str	x23, [sp, #48]
  4259b8:	ldrb	w0, [x19, #16]
  4259bc:	cbnz	w0, 425a08 <nftw@plt+0x22e88>
  4259c0:	ldr	x23, [x20]
  4259c4:	mov	x0, x23
  4259c8:	bl	4024f0 <strlen@plt>
  4259cc:	mov	w2, w0
  4259d0:	mov	x1, x23
  4259d4:	mov	x0, x21
  4259d8:	bl	42eb68 <nftw@plt+0x2bfe8>
  4259dc:	str	x0, [x19, #8]
  4259e0:	ldr	x0, [x20], #8
  4259e4:	bl	402910 <free@plt>
  4259e8:	ldr	x19, [x19]
  4259ec:	cbnz	x19, 4259b8 <nftw@plt+0x22e38>
  4259f0:	ldr	x23, [sp, #48]
  4259f4:	mov	x0, x22
  4259f8:	ldp	x19, x20, [sp, #16]
  4259fc:	ldp	x21, x22, [sp, #32]
  425a00:	ldp	x29, x30, [sp], #64
  425a04:	b	402910 <free@plt>
  425a08:	ldr	x1, [x19, #24]
  425a0c:	mov	x2, x20
  425a10:	mov	x0, x21
  425a14:	bl	422ca8 <nftw@plt+0x20128>
  425a18:	mov	x20, x0
  425a1c:	ldr	x23, [x0]
  425a20:	b	4259c4 <nftw@plt+0x22e44>
  425a24:	nop
  425a28:	stp	x29, x30, [sp, #-80]!
  425a2c:	mov	x29, sp
  425a30:	stp	x21, x22, [sp, #32]
  425a34:	mov	x22, x1
  425a38:	add	x2, sp, #0x48
  425a3c:	mov	w1, #0x4                   	// #4
  425a40:	stp	x19, x20, [sp, #16]
  425a44:	mov	x19, x0
  425a48:	bl	4224d0 <nftw@plt+0x1f950>
  425a4c:	str	wzr, [x22]
  425a50:	mov	x20, x0
  425a54:	cbz	x0, 425b08 <nftw@plt+0x22f88>
  425a58:	ldr	x19, [x0, #24]
  425a5c:	cbz	x19, 425af0 <nftw@plt+0x22f70>
  425a60:	stp	x23, x24, [sp, #48]
  425a64:	mov	w0, #0x1                   	// #1
  425a68:	ldr	x23, [sp, #72]
  425a6c:	cbz	x23, 425ae8 <nftw@plt+0x22f68>
  425a70:	add	x24, x20, #0x18
  425a74:	b	425a84 <nftw@plt+0x22f04>
  425a78:	mov	x24, x19
  425a7c:	ldr	x19, [x19]
  425a80:	cbz	x19, 425ae0 <nftw@plt+0x22f60>
  425a84:	ldr	w0, [x19, #12]
  425a88:	ldr	w1, [x23, #12]
  425a8c:	cmp	w0, w1
  425a90:	b.ne	425a78 <nftw@plt+0x22ef8>  // b.any
  425a94:	cbz	w0, 425ae0 <nftw@plt+0x22f60>
  425a98:	mov	w21, #0x0                   	// #0
  425a9c:	b	425ab0 <nftw@plt+0x22f30>
  425aa0:	ldr	w0, [x19, #12]
  425aa4:	add	w21, w21, #0x1
  425aa8:	cmp	w0, w21
  425aac:	b.ls	425ad4 <nftw@plt+0x22f54>  // b.plast
  425ab0:	mov	w2, w21
  425ab4:	add	x2, x2, #0x1
  425ab8:	add	x2, x2, x2, lsl #1
  425abc:	lsl	x2, x2, #3
  425ac0:	add	x1, x23, x2
  425ac4:	add	x0, x19, x2
  425ac8:	bl	430d40 <nftw@plt+0x2e1c0>
  425acc:	cbnz	w0, 425aa0 <nftw@plt+0x22f20>
  425ad0:	ldr	w0, [x19, #12]
  425ad4:	cmp	w21, w0
  425ad8:	ldr	x19, [x24]
  425adc:	b.ne	425a78 <nftw@plt+0x22ef8>  // b.any
  425ae0:	cmp	x19, #0x0
  425ae4:	cset	w0, ne  // ne = any
  425ae8:	ldp	x23, x24, [sp, #48]
  425aec:	str	w0, [x22]
  425af0:	cmp	x20, #0x0
  425af4:	cset	w0, eq  // eq = none
  425af8:	ldp	x19, x20, [sp, #16]
  425afc:	ldp	x21, x22, [sp, #32]
  425b00:	ldp	x29, x30, [sp], #80
  425b04:	ret
  425b08:	ldr	x0, [x19, #448]
  425b0c:	ldurb	w0, [x0, #-20]
  425b10:	cmp	w0, #0x16
  425b14:	b.ne	425af0 <nftw@plt+0x22f70>  // b.any
  425b18:	mov	x0, x19
  425b1c:	mov	w1, #0x1                   	// #1
  425b20:	bl	43ab60 <nftw@plt+0x37fe0>
  425b24:	b	425af0 <nftw@plt+0x22f70>
  425b28:	add	x0, x0, #0x458
  425b2c:	ret
  425b30:	add	x0, x0, #0x388
  425b34:	ret
  425b38:	stp	x29, x30, [sp, #-16]!
  425b3c:	mov	x2, #0xb8                  	// #184
  425b40:	add	x0, x0, #0x388
  425b44:	mov	x29, sp
  425b48:	bl	402490 <memcpy@plt>
  425b4c:	ldp	x29, x30, [sp], #16
  425b50:	ret
  425b54:	nop
  425b58:	stp	x29, x30, [sp, #-32]!
  425b5c:	mov	x29, sp
  425b60:	str	x19, [sp, #16]
  425b64:	mov	x19, x0
  425b68:	ldr	x0, [x0, #712]
  425b6c:	cbz	x0, 425b7c <nftw@plt+0x22ffc>
  425b70:	ldr	x19, [sp, #16]
  425b74:	ldp	x29, x30, [sp], #32
  425b78:	ret
  425b7c:	bl	43ea48 <nftw@plt+0x3bec8>
  425b80:	str	x0, [x19, #712]
  425b84:	ldr	x19, [sp, #16]
  425b88:	ldp	x29, x30, [sp], #32
  425b8c:	ret
  425b90:	stp	x29, x30, [sp, #-64]!
  425b94:	mov	x29, sp
  425b98:	stp	x19, x20, [sp, #16]
  425b9c:	add	x20, x0, #0x328
  425ba0:	mov	w19, w3
  425ba4:	ldr	x5, [x20, #32]
  425ba8:	str	d8, [sp, #48]
  425bac:	fmov	d8, x1
  425bb0:	stp	x21, x22, [sp, #32]
  425bb4:	mov	x21, x0
  425bb8:	ldr	x1, [x20, #24]
  425bbc:	mov	x22, x2
  425bc0:	sub	x0, x5, x1
  425bc4:	cmp	x0, #0xc7
  425bc8:	b.ls	425c90 <nftw@plt+0x23110>  // b.plast
  425bcc:	ldr	x0, [x20, #16]
  425bd0:	add	x1, x1, #0xc8
  425bd4:	cmp	x1, x0
  425bd8:	b.eq	425cb0 <nftw@plt+0x23130>  // b.none
  425bdc:	ldr	x3, [x20, #48]
  425be0:	ldr	x4, [x20, #8]
  425be4:	add	x1, x1, x3
  425be8:	bic	x1, x1, x3
  425bec:	str	x1, [x20, #24]
  425bf0:	sub	x2, x1, x4
  425bf4:	sub	x4, x5, x4
  425bf8:	cmp	x2, x4
  425bfc:	b.ls	425c08 <nftw@plt+0x23088>  // b.plast
  425c00:	mov	x1, x5
  425c04:	str	x5, [x20, #24]
  425c08:	str	x1, [x20, #16]
  425c0c:	and	w19, w19, #0x1
  425c10:	stp	xzr, xzr, [x0, #96]
  425c14:	mov	w2, #0xfffffd00            	// #-768
  425c18:	ubfiz	w19, w19, #9, #7
  425c1c:	ldrh	w1, [x0, #104]
  425c20:	orr	w19, w19, #0x1
  425c24:	dup	v0.2d, v8.d[0]
  425c28:	stp	xzr, xzr, [x0]
  425c2c:	and	w1, w1, w2
  425c30:	fmov	x2, d8
  425c34:	stp	xzr, xzr, [x0, #32]
  425c38:	orr	w19, w19, w1
  425c3c:	stp	xzr, xzr, [x0, #48]
  425c40:	stp	xzr, xzr, [x0, #64]
  425c44:	add	x2, x2, x22
  425c48:	stp	xzr, xzr, [x0, #80]
  425c4c:	stp	xzr, xzr, [x0, #112]
  425c50:	stp	xzr, xzr, [x0, #128]
  425c54:	stp	xzr, xzr, [x0, #144]
  425c58:	stp	xzr, xzr, [x0, #160]
  425c5c:	stp	xzr, xzr, [x0, #176]
  425c60:	str	xzr, [x0, #192]
  425c64:	str	q0, [x0, #16]
  425c68:	ldr	x1, [x21]
  425c6c:	strh	w19, [x0, #104]
  425c70:	ldp	x19, x20, [sp, #16]
  425c74:	ldr	d8, [sp, #48]
  425c78:	str	x2, [x0, #32]
  425c7c:	str	x1, [x0, #72]
  425c80:	str	x0, [x21]
  425c84:	ldp	x21, x22, [sp, #32]
  425c88:	ldp	x29, x30, [sp], #64
  425c8c:	ret
  425c90:	mov	x0, x20
  425c94:	mov	x1, #0xc8                  	// #200
  425c98:	bl	461200 <_obstack_newchunk@@Base>
  425c9c:	ldp	x1, x5, [x20, #24]
  425ca0:	ldr	x0, [x20, #16]
  425ca4:	add	x1, x1, #0xc8
  425ca8:	cmp	x1, x0
  425cac:	b.ne	425bdc <nftw@plt+0x2305c>  // b.any
  425cb0:	ldrb	w2, [x20, #80]
  425cb4:	orr	w2, w2, #0x2
  425cb8:	strb	w2, [x20, #80]
  425cbc:	b	425bdc <nftw@plt+0x2305c>
  425cc0:	stp	x29, x30, [sp, #-64]!
  425cc4:	mov	x29, sp
  425cc8:	stp	x23, x24, [sp, #48]
  425ccc:	ldr	x23, [x0]
  425cd0:	stp	x19, x20, [sp, #16]
  425cd4:	mov	x20, x0
  425cd8:	ldr	x19, [x23, #96]
  425cdc:	ldr	x24, [x23, #80]
  425ce0:	cbz	x19, 425d2c <nftw@plt+0x231ac>
  425ce4:	stp	x21, x22, [sp, #32]
  425ce8:	adrp	x22, 47b000 <_obstack_memory_used@@Base+0x19bb8>
  425cec:	adrp	x21, 47b000 <_obstack_memory_used@@Base+0x19bb8>
  425cf0:	add	x22, x22, #0xab0
  425cf4:	add	x21, x21, #0x970
  425cf8:	ldrsw	x5, [x19, #28]
  425cfc:	mov	x4, x21
  425d00:	ldr	w2, [x19, #8]
  425d04:	mov	x0, x20
  425d08:	mov	w3, #0x0                   	// #0
  425d0c:	mov	w1, #0x3                   	// #3
  425d10:	add	x5, x5, x5, lsl #1
  425d14:	add	x5, x22, x5, lsl #3
  425d18:	ldr	x5, [x5, #8]
  425d1c:	bl	4275f8 <nftw@plt+0x24a78>
  425d20:	ldr	x19, [x19]
  425d24:	cbnz	x19, 425cf8 <nftw@plt+0x23178>
  425d28:	ldp	x21, x22, [sp, #32]
  425d2c:	strb	wzr, [x20, #18]
  425d30:	ldp	x19, x0, [x23, #40]
  425d34:	ldr	x1, [x23, #72]
  425d38:	str	x1, [x20]
  425d3c:	bl	402910 <free@plt>
  425d40:	ldr	x1, [x20, #816]
  425d44:	add	x0, x20, #0x328
  425d48:	add	x2, x20, #0x400
  425d4c:	cmp	x1, x23
  425d50:	b.cs	425dd0 <nftw@plt+0x23250>  // b.hs, b.nlast
  425d54:	ldr	x1, [x0, #32]
  425d58:	cmp	x1, x23
  425d5c:	b.ls	425dd0 <nftw@plt+0x23250>  // b.plast
  425d60:	dup	v0.2d, x23
  425d64:	stur	q0, [x2, #-200]
  425d68:	cbz	x24, 425ddc <nftw@plt+0x2325c>
  425d6c:	mov	x2, x19
  425d70:	mov	x1, x24
  425d74:	mov	x0, x20
  425d78:	bl	42e430 <nftw@plt+0x2b8b0>
  425d7c:	ldr	x0, [x20, #40]
  425d80:	mov	w4, #0x0                   	// #0
  425d84:	mov	x3, #0x0                   	// #0
  425d88:	mov	w2, #0x0                   	// #0
  425d8c:	mov	w1, #0x1                   	// #1
  425d90:	bl	4355d8 <nftw@plt+0x32a58>
  425d94:	mov	x19, x0
  425d98:	cbz	x0, 425dac <nftw@plt+0x2322c>
  425d9c:	ldr	w1, [x0, #16]
  425da0:	mov	w2, #0x7f                  	// #127
  425da4:	ldr	x0, [x20, #40]
  425da8:	bl	4359a8 <nftw@plt+0x32e28>
  425dac:	ldr	x2, [x20, #912]
  425db0:	cbz	x2, 425df4 <nftw@plt+0x23274>
  425db4:	mov	x1, x19
  425db8:	mov	x0, x20
  425dbc:	ldp	x19, x20, [sp, #16]
  425dc0:	mov	x16, x2
  425dc4:	ldp	x23, x24, [sp, #48]
  425dc8:	ldp	x29, x30, [sp], #64
  425dcc:	br	x16
  425dd0:	mov	x1, x23
  425dd4:	bl	461398 <_obstack_free@@Base>
  425dd8:	cbnz	x24, 425d6c <nftw@plt+0x231ec>
  425ddc:	cbz	x19, 425df4 <nftw@plt+0x23274>
  425de0:	mov	x0, x19
  425de4:	ldp	x19, x20, [sp, #16]
  425de8:	ldp	x23, x24, [sp, #48]
  425dec:	ldp	x29, x30, [sp], #64
  425df0:	b	402910 <free@plt>
  425df4:	ldp	x19, x20, [sp, #16]
  425df8:	ldp	x23, x24, [sp, #48]
  425dfc:	ldp	x29, x30, [sp], #64
  425e00:	ret
  425e04:	nop
  425e08:	stp	x29, x30, [sp, #-80]!
  425e0c:	mov	x29, sp
  425e10:	stp	x19, x20, [sp, #16]
  425e14:	mov	x20, x0
  425e18:	stp	x21, x22, [sp, #32]
  425e1c:	stp	x23, x24, [sp, #48]
  425e20:	ldr	x19, [x0, #1400]
  425e24:	str	x25, [sp, #64]
  425e28:	bl	422dc8 <nftw@plt+0x20248>
  425e2c:	cbz	x0, 4261a8 <nftw@plt+0x23628>
  425e30:	ldr	x1, [x0, #16]
  425e34:	ldr	w0, [x0, #8]
  425e38:	ldrb	w3, [x1]
  425e3c:	add	w2, w0, #0x2
  425e40:	add	x2, x2, #0xf
  425e44:	mov	w4, w0
  425e48:	cmp	w3, #0x4c
  425e4c:	and	x2, x2, #0x1fffffff0
  425e50:	cset	x0, eq  // eq = none
  425e54:	sub	x4, x4, #0x1
  425e58:	add	x0, x0, #0x1
  425e5c:	sub	sp, sp, x2
  425e60:	add	x4, x1, x4
  425e64:	add	x0, x1, x0
  425e68:	mov	x23, sp
  425e6c:	cmp	x0, x4
  425e70:	mov	x3, x23
  425e74:	b.cs	425e98 <nftw@plt+0x23318>  // b.hs, b.nlast
  425e78:	mov	x1, x0
  425e7c:	ldrb	w2, [x1], #1
  425e80:	cmp	w2, #0x5c
  425e84:	b.eq	425fd8 <nftw@plt+0x23458>  // b.none
  425e88:	mov	x0, x1
  425e8c:	strb	w2, [x3], #1
  425e90:	cmp	x4, x0
  425e94:	b.hi	425e78 <nftw@plt+0x232f8>  // b.pmore
  425e98:	ldr	x0, [x20, #448]
  425e9c:	strb	wzr, [x3]
  425ea0:	ldurb	w0, [x0, #-20]
  425ea4:	cmp	w0, #0x16
  425ea8:	b.eq	426014 <nftw@plt+0x23494>  // b.none
  425eac:	mov	x0, x20
  425eb0:	bl	434b58 <nftw@plt+0x31fd8>
  425eb4:	ldrb	w0, [x0, #4]
  425eb8:	cmp	w0, #0x16
  425ebc:	b.ne	425ff4 <nftw@plt+0x23474>  // b.any
  425ec0:	ldr	x0, [x20, #136]
  425ec4:	ldr	x0, [x0, #8]
  425ec8:	cbz	x0, 425ee4 <nftw@plt+0x23364>
  425ecc:	nop
  425ed0:	mov	x0, x20
  425ed4:	bl	43a9a8 <nftw@plt+0x37e28>
  425ed8:	ldr	x0, [x20, #136]
  425edc:	ldr	x0, [x0, #8]
  425ee0:	cbnz	x0, 425ed0 <nftw@plt+0x23350>
  425ee4:	ldr	x0, [x20, #448]
  425ee8:	ldurb	w0, [x0, #-20]
  425eec:	cmp	w0, #0x16
  425ef0:	b.eq	425f0c <nftw@plt+0x2338c>  // b.none
  425ef4:	nop
  425ef8:	mov	x0, x20
  425efc:	bl	434b58 <nftw@plt+0x31fd8>
  425f00:	ldrb	w0, [x0, #4]
  425f04:	cmp	w0, #0x16
  425f08:	b.ne	425ef8 <nftw@plt+0x23378>  // b.any
  425f0c:	cbz	x19, 425fbc <nftw@plt+0x2343c>
  425f10:	mov	x24, #0x0                   	// #0
  425f14:	b	425f20 <nftw@plt+0x233a0>
  425f18:	mov	x24, x21
  425f1c:	cbz	x19, 425fbc <nftw@plt+0x2343c>
  425f20:	ldr	x22, [x19, #8]
  425f24:	mov	x1, x23
  425f28:	mov	x21, x19
  425f2c:	mov	x0, x22
  425f30:	bl	402890 <strcmp@plt>
  425f34:	ldr	x19, [x19]
  425f38:	cbnz	w0, 425f18 <nftw@plt+0x23398>
  425f3c:	cbz	x24, 4261a0 <nftw@plt+0x23620>
  425f40:	str	x19, [x24]
  425f44:	mov	x1, x22
  425f48:	mov	x0, x20
  425f4c:	bl	42fe98 <nftw@plt+0x2d318>
  425f50:	mov	x19, x0
  425f54:	cbz	x0, 426238 <nftw@plt+0x236b8>
  425f58:	ldr	x1, [x20, #1024]
  425f5c:	cbz	x1, 425f68 <nftw@plt+0x233e8>
  425f60:	mov	x0, x20
  425f64:	blr	x1
  425f68:	ldrb	w0, [x19, #18]
  425f6c:	tbz	w0, #1, 425f98 <nftw@plt+0x23418>
  425f70:	ldr	x3, [x20, #944]
  425f74:	cbz	x3, 425f88 <nftw@plt+0x23408>
  425f78:	ldr	w1, [x20, #48]
  425f7c:	mov	x2, x19
  425f80:	mov	x0, x20
  425f84:	blr	x3
  425f88:	ldrb	w0, [x20, #1151]
  425f8c:	cbnz	w0, 426240 <nftw@plt+0x236c0>
  425f90:	mov	x0, x19
  425f94:	bl	43ac98 <nftw@plt+0x38118>
  425f98:	ldrb	w0, [x21, #28]
  425f9c:	ldr	x19, [x21, #16]
  425fa0:	tbz	w0, #2, 426024 <nftw@plt+0x234a4>
  425fa4:	mov	x0, x19
  425fa8:	bl	402910 <free@plt>
  425fac:	ldr	x0, [x21, #8]
  425fb0:	bl	402910 <free@plt>
  425fb4:	mov	x0, x21
  425fb8:	bl	402910 <free@plt>
  425fbc:	mov	sp, x29
  425fc0:	ldp	x19, x20, [sp, #16]
  425fc4:	ldp	x21, x22, [sp, #32]
  425fc8:	ldp	x23, x24, [sp, #48]
  425fcc:	ldr	x25, [sp, #64]
  425fd0:	ldp	x29, x30, [sp], #80
  425fd4:	ret
  425fd8:	ldrb	w5, [x0, #1]
  425fdc:	cmp	w5, #0x22
  425fe0:	ccmp	w5, w2, #0x4, ne  // ne = any
  425fe4:	b.ne	425e88 <nftw@plt+0x23308>  // b.any
  425fe8:	add	x0, x0, #0x2
  425fec:	mov	w2, w5
  425ff0:	b	425e8c <nftw@plt+0x2330c>
  425ff4:	ldr	x3, [x20, #144]
  425ff8:	mov	x0, x20
  425ffc:	adrp	x2, 47b000 <_obstack_memory_used@@Base+0x19bb8>
  426000:	mov	w1, #0x0                   	// #0
  426004:	add	x2, x2, #0x360
  426008:	ldr	x3, [x3, #8]
  42600c:	bl	4273b8 <nftw@plt+0x24838>
  426010:	b	425ec0 <nftw@plt+0x23340>
  426014:	ldr	x0, [x20, #136]
  426018:	ldr	x0, [x0, #8]
  42601c:	cbnz	x0, 425ed0 <nftw@plt+0x23350>
  426020:	b	425f0c <nftw@plt+0x2338c>
  426024:	mov	x0, x19
  426028:	adrp	x1, 47b000 <_obstack_memory_used@@Base+0x19bb8>
  42602c:	add	x1, x1, #0x9b0
  426030:	bl	402a70 <strcspn@plt>
  426034:	mov	x23, x0
  426038:	mov	x1, x19
  42603c:	mov	x0, x20
  426040:	add	x22, x20, #0x328
  426044:	sxtw	x23, w23
  426048:	mov	w2, w23
  42604c:	bl	42eb68 <nftw@plt+0x2bfe8>
  426050:	ldr	x2, [x21, #16]
  426054:	mov	w1, #0xa                   	// #10
  426058:	mov	x24, x0
  42605c:	add	x23, x2, x23
  426060:	mov	x0, x23
  426064:	bl	402940 <strchr@plt>
  426068:	ldp	x1, x3, [x22, #24]
  42606c:	sub	x25, x0, x23
  426070:	sub	x0, x3, x1
  426074:	cmp	x0, #0xc7
  426078:	b.ls	426254 <nftw@plt+0x236d4>  // b.plast
  42607c:	ldr	x19, [x22, #16]
  426080:	add	x1, x1, #0xc8
  426084:	cmp	x1, x19
  426088:	b.eq	426268 <nftw@plt+0x236e8>  // b.none
  42608c:	ldr	x0, [x22, #48]
  426090:	ldr	x2, [x22, #8]
  426094:	add	x1, x1, x0
  426098:	bic	x1, x1, x0
  42609c:	str	x1, [x22, #24]
  4260a0:	sub	x0, x1, x2
  4260a4:	sub	x2, x3, x2
  4260a8:	cmp	x0, x2
  4260ac:	b.ls	4260b8 <nftw@plt+0x23538>  // b.plast
  4260b0:	mov	x1, x3
  4260b4:	str	x3, [x22, #24]
  4260b8:	str	x1, [x22, #16]
  4260bc:	dup	v0.2d, x23
  4260c0:	stp	xzr, xzr, [x19, #96]
  4260c4:	mov	w3, #0xfffffd00            	// #-768
  4260c8:	mov	w2, #0x201                 	// #513
  4260cc:	ldrh	w1, [x19, #104]
  4260d0:	add	x25, x23, x25
  4260d4:	stp	xzr, xzr, [x19]
  4260d8:	mov	x0, x20
  4260dc:	and	w1, w1, w3
  4260e0:	stp	xzr, xzr, [x19, #32]
  4260e4:	orr	w1, w1, w2
  4260e8:	stp	xzr, xzr, [x19, #48]
  4260ec:	stp	xzr, xzr, [x19, #64]
  4260f0:	stp	xzr, xzr, [x19, #80]
  4260f4:	stp	xzr, xzr, [x19, #112]
  4260f8:	stp	xzr, xzr, [x19, #128]
  4260fc:	stp	xzr, xzr, [x19, #144]
  426100:	stp	xzr, xzr, [x19, #160]
  426104:	stp	xzr, xzr, [x19, #176]
  426108:	str	xzr, [x19, #192]
  42610c:	str	q0, [x19, #16]
  426110:	ldr	x2, [x20]
  426114:	str	x25, [x19, #32]
  426118:	str	x2, [x19, #72]
  42611c:	strh	w1, [x19, #104]
  426120:	str	x19, [x20]
  426124:	bl	42f460 <nftw@plt+0x2c8e0>
  426128:	mov	w0, #0x1                   	// #1
  42612c:	strb	w0, [x19, #106]
  426130:	mov	x1, x24
  426134:	mov	x0, x20
  426138:	bl	43ae98 <nftw@plt+0x38318>
  42613c:	tst	w0, #0xff
  426140:	b.eq	4262a8 <nftw@plt+0x23728>  // b.none
  426144:	mov	x0, x20
  426148:	bl	425cc0 <nftw@plt+0x23140>
  42614c:	ldrb	w1, [x21, #28]
  426150:	ldr	x2, [x24, #24]
  426154:	ubfx	x0, x1, #1, #1
  426158:	ubfx	x1, x1, #0, #1
  42615c:	ldr	x19, [x21, #16]
  426160:	ubfiz	w1, w1, #4, #4
  426164:	ldrb	w3, [x2, #19]
  426168:	ubfiz	w0, w0, #5, #3
  42616c:	orr	w0, w0, w1
  426170:	and	w1, w3, #0xffffffcf
  426174:	ldr	w3, [x21, #24]
  426178:	orr	w0, w0, w1
  42617c:	str	w3, [x2, #8]
  426180:	strb	w0, [x2, #19]
  426184:	mov	x0, x19
  426188:	bl	402910 <free@plt>
  42618c:	ldr	x0, [x21, #8]
  426190:	bl	402910 <free@plt>
  426194:	mov	x0, x21
  426198:	bl	402910 <free@plt>
  42619c:	b	425fbc <nftw@plt+0x2343c>
  4261a0:	str	x19, [x20, #1400]
  4261a4:	b	425f44 <nftw@plt+0x233c4>
  4261a8:	ldr	x2, [x20, #448]
  4261ac:	mov	x0, x20
  4261b0:	adrp	x4, 47b000 <_obstack_memory_used@@Base+0x19bb8>
  4261b4:	mov	w3, #0x0                   	// #0
  4261b8:	add	x4, x4, #0x988
  4261bc:	mov	w1, #0x3                   	// #3
  4261c0:	ldur	w2, [x2, #-24]
  4261c4:	bl	4275f8 <nftw@plt+0x24a78>
  4261c8:	ldr	x0, [x20, #448]
  4261cc:	ldurb	w0, [x0, #-20]
  4261d0:	cmp	w0, #0x16
  4261d4:	b.eq	426298 <nftw@plt+0x23718>  // b.none
  4261d8:	mov	x0, x20
  4261dc:	bl	434b58 <nftw@plt+0x31fd8>
  4261e0:	ldrb	w0, [x0, #4]
  4261e4:	cmp	w0, #0x16
  4261e8:	b.ne	426278 <nftw@plt+0x236f8>  // b.any
  4261ec:	ldr	x0, [x20, #136]
  4261f0:	ldr	x0, [x0, #8]
  4261f4:	cbz	x0, 42620c <nftw@plt+0x2368c>
  4261f8:	mov	x0, x20
  4261fc:	bl	43a9a8 <nftw@plt+0x37e28>
  426200:	ldr	x0, [x20, #136]
  426204:	ldr	x0, [x0, #8]
  426208:	cbnz	x0, 4261f8 <nftw@plt+0x23678>
  42620c:	ldr	x0, [x20, #448]
  426210:	ldurb	w0, [x0, #-20]
  426214:	cmp	w0, #0x16
  426218:	b.eq	425fbc <nftw@plt+0x2343c>  // b.none
  42621c:	nop
  426220:	mov	x0, x20
  426224:	bl	434b58 <nftw@plt+0x31fd8>
  426228:	ldrb	w0, [x0, #4]
  42622c:	cmp	w0, #0x16
  426230:	b.ne	426220 <nftw@plt+0x236a0>  // b.any
  426234:	b	425fbc <nftw@plt+0x2343c>
  426238:	ldr	x19, [x21, #16]
  42623c:	b	425fa4 <nftw@plt+0x23424>
  426240:	mov	x1, x19
  426244:	mov	x0, x20
  426248:	mov	x2, #0x0                   	// #0
  42624c:	bl	439ef0 <nftw@plt+0x37370>
  426250:	b	425f90 <nftw@plt+0x23410>
  426254:	mov	x1, #0xc8                  	// #200
  426258:	mov	x0, x22
  42625c:	bl	461200 <_obstack_newchunk@@Base>
  426260:	ldp	x1, x3, [x22, #24]
  426264:	b	42607c <nftw@plt+0x234fc>
  426268:	ldrb	w0, [x22, #80]
  42626c:	orr	w0, w0, #0x2
  426270:	strb	w0, [x22, #80]
  426274:	b	42608c <nftw@plt+0x2350c>
  426278:	ldr	x3, [x20, #144]
  42627c:	mov	x0, x20
  426280:	adrp	x2, 47b000 <_obstack_memory_used@@Base+0x19bb8>
  426284:	mov	w1, #0x0                   	// #0
  426288:	add	x2, x2, #0x360
  42628c:	ldr	x3, [x3, #8]
  426290:	bl	4273b8 <nftw@plt+0x24838>
  426294:	b	4261ec <nftw@plt+0x2366c>
  426298:	ldr	x0, [x20, #136]
  42629c:	ldr	x0, [x0, #8]
  4262a0:	cbnz	x0, 4261f8 <nftw@plt+0x23678>
  4262a4:	b	425fbc <nftw@plt+0x2343c>
  4262a8:	adrp	x2, 47b000 <_obstack_memory_used@@Base+0x19bb8>
  4262ac:	adrp	x0, 47b000 <_obstack_memory_used@@Base+0x19bb8>
  4262b0:	add	x2, x2, #0x9b8
  4262b4:	add	x0, x0, #0x9d0
  4262b8:	mov	w1, #0x9a8                 	// #2472
  4262bc:	bl	402bf0 <nftw@plt+0x70>
  4262c0:	stp	x29, x30, [sp, #-96]!
  4262c4:	sub	w5, w1, #0x1
  4262c8:	mov	w4, w1
  4262cc:	mov	x29, sp
  4262d0:	ldr	x1, [x2]
  4262d4:	stp	x19, x20, [sp, #16]
  4262d8:	add	x2, x5, #0xf
  4262dc:	stp	x21, x22, [sp, #32]
  4262e0:	mov	x19, x0
  4262e4:	and	x2, x2, #0x1fffffff0
  4262e8:	stp	x23, x24, [sp, #48]
  4262ec:	sub	x4, x4, #0x1
  4262f0:	add	x4, x1, x4
  4262f4:	stp	x25, x26, [sp, #64]
  4262f8:	mov	w21, w3
  4262fc:	stp	x27, x28, [sp, #80]
  426300:	sub	sp, sp, x2
  426304:	mov	x26, sp
  426308:	ldrb	w5, [x1]
  42630c:	mov	x20, x26
  426310:	cmp	w5, #0x4c
  426314:	cset	x0, eq  // eq = none
  426318:	add	x0, x0, #0x1
  42631c:	add	x0, x1, x0
  426320:	cmp	x0, x4
  426324:	b.cs	426348 <nftw@plt+0x237c8>  // b.hs, b.nlast
  426328:	mov	x1, x0
  42632c:	ldrb	w2, [x1], #1
  426330:	cmp	w2, #0x5c
  426334:	b.eq	42655c <nftw@plt+0x239dc>  // b.none
  426338:	mov	x0, x1
  42633c:	strb	w2, [x20], #1
  426340:	cmp	x4, x0
  426344:	b.hi	426328 <nftw@plt+0x237a8>  // b.pmore
  426348:	add	x25, x19, #0x328
  42634c:	mov	w2, #0xa                   	// #10
  426350:	strb	w2, [x20]
  426354:	mov	x1, #0x38                  	// #56
  426358:	mov	x0, #0x1                   	// #1
  42635c:	ldr	x24, [x19, #136]
  426360:	ldr	x23, [x19, #448]
  426364:	ldr	x22, [x19, #488]
  426368:	bl	461598 <_obstack_memory_used@@Base+0x150>
  42636c:	ldr	x4, [x25, #32]
  426370:	str	x0, [x19, #136]
  426374:	ldr	x0, [x25, #24]
  426378:	sub	x1, x4, x0
  42637c:	cmp	x1, #0xc7
  426380:	b.ls	42667c <nftw@plt+0x23afc>  // b.plast
  426384:	add	x1, x0, #0xc8
  426388:	ldr	x0, [x25, #16]
  42638c:	cmp	x1, x0
  426390:	b.eq	42669c <nftw@plt+0x23b1c>  // b.none
  426394:	ldr	x2, [x25, #48]
  426398:	ldr	x3, [x25, #8]
  42639c:	add	x1, x1, x2
  4263a0:	bic	x1, x1, x2
  4263a4:	str	x1, [x25, #24]
  4263a8:	sub	x2, x1, x3
  4263ac:	sub	x3, x4, x3
  4263b0:	cmp	x2, x3
  4263b4:	b.ls	4263c0 <nftw@plt+0x23840>  // b.plast
  4263b8:	mov	x1, x4
  4263bc:	str	x4, [x25, #24]
  4263c0:	str	x1, [x25, #16]
  4263c4:	dup	v0.2d, x26
  4263c8:	stp	xzr, xzr, [x0, #96]
  4263cc:	mov	w2, #0x201                 	// #513
  4263d0:	mov	w3, #0xfffffd00            	// #-768
  4263d4:	ldrh	w1, [x0, #104]
  4263d8:	stp	xzr, xzr, [x0]
  4263dc:	and	w1, w1, w3
  4263e0:	stp	xzr, xzr, [x0, #32]
  4263e4:	orr	w1, w1, w2
  4263e8:	stp	xzr, xzr, [x0, #48]
  4263ec:	stp	xzr, xzr, [x0, #64]
  4263f0:	stp	xzr, xzr, [x0, #80]
  4263f4:	stp	xzr, xzr, [x0, #112]
  4263f8:	stp	xzr, xzr, [x0, #128]
  4263fc:	stp	xzr, xzr, [x0, #144]
  426400:	stp	xzr, xzr, [x0, #160]
  426404:	stp	xzr, xzr, [x0, #176]
  426408:	str	xzr, [x0, #192]
  42640c:	str	q0, [x0, #16]
  426410:	ldr	x2, [x19]
  426414:	str	x20, [x0, #32]
  426418:	str	x2, [x0, #72]
  42641c:	strh	w1, [x0, #104]
  426420:	str	x0, [x19]
  426424:	cbz	x2, 426430 <nftw@plt+0x238b0>
  426428:	ldr	x1, [x2, #80]
  42642c:	str	x1, [x0, #80]
  426430:	ldr	x1, [x19, #40]
  426434:	mov	w0, #0x1                   	// #1
  426438:	strb	w0, [x19, #16]
  42643c:	mov	w2, #0x53                  	// #83
  426440:	strb	wzr, [x19, #21]
  426444:	mov	x0, x19
  426448:	strb	w2, [x19, #156]
  42644c:	adrp	x20, 47b000 <_obstack_memory_used@@Base+0x19bb8>
  426450:	ldr	w1, [x1, #60]
  426454:	add	x20, x20, #0xab0
  426458:	str	w1, [x19, #48]
  42645c:	bl	42f460 <nftw@plt+0x2c8e0>
  426460:	add	x1, x20, #0x108
  426464:	mov	x0, x19
  426468:	ldr	x25, [x19, #144]
  42646c:	str	x1, [x19, #144]
  426470:	bl	4228d8 <nftw@plt+0x1fd58>
  426474:	ldrb	w0, [x19, #1160]
  426478:	cbz	w0, 426578 <nftw@plt+0x239f8>
  42647c:	ldrb	w0, [x19, #32]
  426480:	cbnz	w0, 426490 <nftw@plt+0x23910>
  426484:	ldrb	w0, [x19, #24]
  426488:	sub	w0, w0, #0x1
  42648c:	strb	w0, [x19, #24]
  426490:	ldr	x0, [x19, #144]
  426494:	cmp	x0, x20
  426498:	b.eq	4264a4 <nftw@plt+0x23924>  // b.none
  42649c:	mov	x0, x19
  4264a0:	bl	4400f0 <nftw@plt+0x3d570>
  4264a4:	ldrb	w1, [x19, #1123]
  4264a8:	ldrb	w0, [x19, #156]
  4264ac:	cmp	w1, #0x0
  4264b0:	strb	wzr, [x19, #16]
  4264b4:	cset	w1, eq  // eq = none
  4264b8:	sturh	wzr, [x19, #19]
  4264bc:	strb	w1, [x19, #21]
  4264c0:	cmp	w0, #0x51
  4264c4:	str	x25, [x19, #144]
  4264c8:	b.eq	4265e8 <nftw@plt+0x23a68>  // b.none
  4264cc:	mov	x0, #0x18                  	// #24
  4264d0:	bl	461560 <_obstack_memory_used@@Base+0x118>
  4264d4:	mov	x26, x0
  4264d8:	mov	w28, #0x1                   	// #1
  4264dc:	ldp	x0, x1, [x19, #152]
  4264e0:	ldr	x3, [x19, #904]
  4264e4:	stp	x0, x1, [x26]
  4264e8:	ldr	x0, [x19, #168]
  4264ec:	str	x0, [x26, #16]
  4264f0:	cbz	x3, 426504 <nftw@plt+0x23984>
  4264f4:	ldr	x1, [x19, #448]
  4264f8:	mov	x0, x19
  4264fc:	mov	w2, #0x0                   	// #0
  426500:	blr	x3
  426504:	ldr	x1, [x19]
  426508:	mov	x0, x19
  42650c:	str	xzr, [x1, #80]
  426510:	bl	425cc0 <nftw@plt+0x23140>
  426514:	ldr	x0, [x19, #136]
  426518:	bl	402910 <free@plt>
  42651c:	str	x24, [x19, #136]
  426520:	str	x23, [x19, #448]
  426524:	mov	w3, w28
  426528:	str	x22, [x19, #488]
  42652c:	mov	x2, x26
  426530:	mov	x0, x19
  426534:	mov	x1, #0x0                   	// #0
  426538:	bl	43a868 <nftw@plt+0x37ce8>
  42653c:	mov	sp, x29
  426540:	ldp	x19, x20, [sp, #16]
  426544:	ldp	x21, x22, [sp, #32]
  426548:	ldp	x23, x24, [sp, #48]
  42654c:	ldp	x25, x26, [sp, #64]
  426550:	ldp	x27, x28, [sp, #80]
  426554:	ldp	x29, x30, [sp], #96
  426558:	ret
  42655c:	ldrb	w3, [x0, #1]
  426560:	add	x0, x0, #0x2
  426564:	cmp	w3, #0x22
  426568:	ccmp	w3, w2, #0x4, ne  // ne = any
  42656c:	b.ne	426338 <nftw@plt+0x237b8>  // b.any
  426570:	mov	w2, w3
  426574:	b	42633c <nftw@plt+0x237bc>
  426578:	ldrb	w0, [x19, #32]
  42657c:	cbnz	w0, 4264a4 <nftw@plt+0x23924>
  426580:	ldr	x0, [x19, #136]
  426584:	ldr	x0, [x0, #8]
  426588:	cbz	x0, 4265a4 <nftw@plt+0x23a24>
  42658c:	nop
  426590:	mov	x0, x19
  426594:	bl	43a9a8 <nftw@plt+0x37e28>
  426598:	ldr	x0, [x19, #136]
  42659c:	ldr	x0, [x0, #8]
  4265a0:	cbnz	x0, 426590 <nftw@plt+0x23a10>
  4265a4:	ldr	x0, [x19, #448]
  4265a8:	ldurb	w0, [x0, #-20]
  4265ac:	cmp	w0, #0x16
  4265b0:	b.eq	4265cc <nftw@plt+0x23a4c>  // b.none
  4265b4:	nop
  4265b8:	mov	x0, x19
  4265bc:	bl	434b58 <nftw@plt+0x31fd8>
  4265c0:	ldrb	w0, [x0, #4]
  4265c4:	cmp	w0, #0x16
  4265c8:	b.ne	4265b8 <nftw@plt+0x23a38>  // b.any
  4265cc:	ldr	w0, [x19, #500]
  4265d0:	cbnz	w0, 4264a4 <nftw@plt+0x23924>
  4265d4:	ldr	x1, [x19, #472]
  4265d8:	add	x0, x19, #0x1c8
  4265dc:	str	x1, [x19, #448]
  4265e0:	str	x0, [x19, #488]
  4265e4:	b	4264a4 <nftw@plt+0x23924>
  4265e8:	mov	x0, #0x4b0                 	// #1200
  4265ec:	bl	461560 <_obstack_memory_used@@Base+0x118>
  4265f0:	mov	x26, x0
  4265f4:	mov	x27, #0x18                  	// #24
  4265f8:	mov	w25, w27
  4265fc:	mov	w28, #0x1                   	// #1
  426600:	ldp	x0, x1, [x19, #152]
  426604:	mov	w20, #0x32                  	// #50
  426608:	ldr	x2, [x19, #168]
  42660c:	stp	x0, x1, [x26]
  426610:	str	x2, [x26, #16]
  426614:	nop
  426618:	mov	x0, x19
  42661c:	bl	43e370 <nftw@plt+0x3b7f0>
  426620:	add	x1, x26, x27
  426624:	add	w28, w28, #0x1
  426628:	ldp	x2, x3, [x0]
  42662c:	stp	x2, x3, [x1]
  426630:	ldr	x0, [x0, #16]
  426634:	str	x0, [x1, #16]
  426638:	ldrh	w0, [x1, #6]
  42663c:	ldrb	w2, [x1, #4]
  426640:	str	w21, [x26, x27]
  426644:	orr	w0, w0, #0x400
  426648:	strh	w0, [x1, #6]
  42664c:	cmp	w2, #0x52
  426650:	add	x27, x27, #0x18
  426654:	b.eq	426504 <nftw@plt+0x23984>  // b.none
  426658:	cmp	w28, w20
  42665c:	b.ne	426618 <nftw@plt+0x23a98>  // b.any
  426660:	add	w20, w28, w28, lsl #1
  426664:	mov	x0, x26
  426668:	asr	w20, w20, #1
  42666c:	smull	x1, w20, w25
  426670:	bl	4615e8 <_obstack_memory_used@@Base+0x1a0>
  426674:	mov	x26, x0
  426678:	b	426618 <nftw@plt+0x23a98>
  42667c:	mov	x0, x25
  426680:	mov	x1, #0xc8                  	// #200
  426684:	bl	461200 <_obstack_newchunk@@Base>
  426688:	ldp	x0, x4, [x25, #24]
  42668c:	add	x1, x0, #0xc8
  426690:	ldr	x0, [x25, #16]
  426694:	cmp	x1, x0
  426698:	b.ne	426394 <nftw@plt+0x23814>  // b.any
  42669c:	ldrb	w2, [x25, #80]
  4266a0:	orr	w2, w2, #0x2
  4266a4:	strb	w2, [x25, #80]
  4266a8:	b	426394 <nftw@plt+0x23814>
  4266ac:	nop
  4266b0:	stp	x29, x30, [sp, #-32]!
  4266b4:	mov	x29, sp
  4266b8:	stp	x19, x20, [sp, #16]
  4266bc:	mov	x19, x0
  4266c0:	mov	w20, w1
  4266c4:	bl	422dc8 <nftw@plt+0x20248>
  4266c8:	mov	w1, #0x53                  	// #83
  4266cc:	strb	w1, [x19, #156]
  4266d0:	cbz	x0, 4266fc <nftw@plt+0x23b7c>
  4266d4:	mov	x2, x0
  4266d8:	mov	w3, w20
  4266dc:	mov	x0, x19
  4266e0:	add	x2, x2, #0x10
  4266e4:	ldur	w1, [x2, #-8]
  4266e8:	bl	4262c0 <nftw@plt+0x23740>
  4266ec:	mov	w0, #0x1                   	// #1
  4266f0:	ldp	x19, x20, [sp, #16]
  4266f4:	ldp	x29, x30, [sp], #32
  4266f8:	ret
  4266fc:	mov	x0, x19
  426700:	mov	w1, #0x3                   	// #3
  426704:	adrp	x2, 47b000 <_obstack_memory_used@@Base+0x19bb8>
  426708:	add	x2, x2, #0x9f0
  42670c:	bl	427178 <nftw@plt+0x245f8>
  426710:	mov	w0, #0x0                   	// #0
  426714:	ldp	x19, x20, [sp, #16]
  426718:	ldp	x29, x30, [sp], #32
  42671c:	ret
  426720:	stp	x29, x30, [sp, #-64]!
  426724:	mov	x29, sp
  426728:	stp	x19, x20, [sp, #16]
  42672c:	add	x20, x0, #0x328
  426730:	mov	x19, x0
  426734:	stp	x21, x22, [sp, #32]
  426738:	mov	x22, x3
  42673c:	mov	w21, w1
  426740:	ldp	x0, x3, [x20, #24]
  426744:	str	d8, [sp, #48]
  426748:	fmov	d8, x2
  42674c:	sub	x1, x3, x0
  426750:	cmp	x1, #0xc7
  426754:	b.ls	426920 <nftw@plt+0x23da0>  // b.plast
  426758:	ldr	x2, [x20, #16]
  42675c:	add	x0, x0, #0xc8
  426760:	cmp	x0, x2
  426764:	b.eq	426940 <nftw@plt+0x23dc0>  // b.none
  426768:	ldr	x4, [x20, #48]
  42676c:	ldr	x1, [x20, #8]
  426770:	add	x0, x0, x4
  426774:	bic	x0, x0, x4
  426778:	str	x0, [x20, #24]
  42677c:	sub	x4, x0, x1
  426780:	sub	x1, x3, x1
  426784:	cmp	x4, x1
  426788:	b.ls	426794 <nftw@plt+0x23c14>  // b.plast
  42678c:	mov	x0, x3
  426790:	str	x3, [x20, #24]
  426794:	fmov	x1, d8
  426798:	str	x0, [x20, #16]
  42679c:	stp	xzr, xzr, [x2, #96]
  4267a0:	mov	w5, #0xfffffd00            	// #-768
  4267a4:	mov	w0, #0x201                 	// #513
  4267a8:	stp	xzr, xzr, [x2]
  4267ac:	mov	w4, #0x1                   	// #1
  4267b0:	add	x22, x1, x22
  4267b4:	ldrh	w1, [x2, #104]
  4267b8:	mov	w3, #0x53                  	// #83
  4267bc:	stp	xzr, xzr, [x2, #32]
  4267c0:	adrp	x20, 47b000 <_obstack_memory_used@@Base+0x19bb8>
  4267c4:	and	w1, w1, w5
  4267c8:	stp	xzr, xzr, [x2, #48]
  4267cc:	orr	w1, w1, w0
  4267d0:	add	x20, x20, #0xab0
  4267d4:	stp	xzr, xzr, [x2, #64]
  4267d8:	mov	x0, x19
  4267dc:	stp	xzr, xzr, [x2, #80]
  4267e0:	stp	xzr, xzr, [x2, #112]
  4267e4:	stp	xzr, xzr, [x2, #128]
  4267e8:	stp	xzr, xzr, [x2, #144]
  4267ec:	stp	xzr, xzr, [x2, #160]
  4267f0:	stp	xzr, xzr, [x2, #176]
  4267f4:	dup	v8.2d, v8.d[0]
  4267f8:	str	xzr, [x2, #192]
  4267fc:	str	x22, [x2, #32]
  426800:	ldr	x5, [x19]
  426804:	strh	w1, [x2, #104]
  426808:	ldr	x1, [x19, #40]
  42680c:	str	q8, [x2, #16]
  426810:	str	x5, [x2, #72]
  426814:	strb	w4, [x19, #16]
  426818:	strb	wzr, [x19, #21]
  42681c:	ldr	w1, [x1, #60]
  426820:	str	x2, [x19]
  426824:	str	w1, [x19, #48]
  426828:	strb	w3, [x19, #156]
  42682c:	bl	42f460 <nftw@plt+0x2c8e0>
  426830:	mov	w1, #0x18                  	// #24
  426834:	ldrb	w0, [x19, #1160]
  426838:	smaddl	x21, w21, w1, x20
  42683c:	str	x21, [x19, #144]
  426840:	cbnz	w0, 426950 <nftw@plt+0x23dd0>
  426844:	ldr	x1, [x21]
  426848:	mov	x0, x19
  42684c:	blr	x1
  426850:	ldrb	w0, [x19, #1160]
  426854:	cbz	w0, 4268b4 <nftw@plt+0x23d34>
  426858:	ldrb	w0, [x19, #32]
  42685c:	cbnz	w0, 42686c <nftw@plt+0x23cec>
  426860:	ldrb	w0, [x19, #24]
  426864:	sub	w0, w0, #0x1
  426868:	strb	w0, [x19, #24]
  42686c:	ldr	x0, [x19, #144]
  426870:	cmp	x0, x20
  426874:	b.eq	426880 <nftw@plt+0x23d00>  // b.none
  426878:	mov	x0, x19
  42687c:	bl	4400f0 <nftw@plt+0x3d570>
  426880:	ldrb	w1, [x19, #1123]
  426884:	mov	x0, x19
  426888:	strb	wzr, [x19, #16]
  42688c:	cmp	w1, #0x0
  426890:	sturh	wzr, [x19, #19]
  426894:	cset	w1, eq  // eq = none
  426898:	strb	w1, [x19, #21]
  42689c:	ldp	x21, x22, [sp, #32]
  4268a0:	ldr	d8, [sp, #48]
  4268a4:	str	xzr, [x19, #144]
  4268a8:	ldp	x19, x20, [sp, #16]
  4268ac:	ldp	x29, x30, [sp], #64
  4268b0:	b	425cc0 <nftw@plt+0x23140>
  4268b4:	ldrb	w0, [x19, #32]
  4268b8:	cbnz	w0, 426880 <nftw@plt+0x23d00>
  4268bc:	ldr	x0, [x19, #136]
  4268c0:	ldr	x0, [x0, #8]
  4268c4:	cbz	x0, 4268dc <nftw@plt+0x23d5c>
  4268c8:	mov	x0, x19
  4268cc:	bl	43a9a8 <nftw@plt+0x37e28>
  4268d0:	ldr	x0, [x19, #136]
  4268d4:	ldr	x0, [x0, #8]
  4268d8:	cbnz	x0, 4268c8 <nftw@plt+0x23d48>
  4268dc:	ldr	x0, [x19, #448]
  4268e0:	ldurb	w0, [x0, #-20]
  4268e4:	cmp	w0, #0x16
  4268e8:	b.eq	426904 <nftw@plt+0x23d84>  // b.none
  4268ec:	nop
  4268f0:	mov	x0, x19
  4268f4:	bl	434b58 <nftw@plt+0x31fd8>
  4268f8:	ldrb	w0, [x0, #4]
  4268fc:	cmp	w0, #0x16
  426900:	b.ne	4268f0 <nftw@plt+0x23d70>  // b.any
  426904:	ldr	w0, [x19, #500]
  426908:	cbnz	w0, 426880 <nftw@plt+0x23d00>
  42690c:	ldr	x1, [x19, #472]
  426910:	add	x0, x19, #0x1c8
  426914:	str	x1, [x19, #448]
  426918:	str	x0, [x19, #488]
  42691c:	b	426880 <nftw@plt+0x23d00>
  426920:	mov	x0, x20
  426924:	mov	x1, #0xc8                  	// #200
  426928:	bl	461200 <_obstack_newchunk@@Base>
  42692c:	ldp	x0, x3, [x20, #24]
  426930:	ldr	x2, [x20, #16]
  426934:	add	x0, x0, #0xc8
  426938:	cmp	x0, x2
  42693c:	b.ne	426768 <nftw@plt+0x23be8>  // b.any
  426940:	ldrb	w1, [x20, #80]
  426944:	orr	w1, w1, #0x2
  426948:	strb	w1, [x20, #80]
  42694c:	b	426768 <nftw@plt+0x23be8>
  426950:	mov	x0, x19
  426954:	bl	422b90 <nftw@plt+0x20010>
  426958:	ldr	x21, [x19, #144]
  42695c:	b	426844 <nftw@plt+0x23cc4>
  426960:	stp	x29, x30, [sp, #-48]!
  426964:	mov	x29, sp
  426968:	stp	x19, x20, [sp, #16]
  42696c:	mov	x20, x1
  426970:	stp	x21, x22, [sp, #32]
  426974:	mov	x22, x0
  426978:	mov	x0, x1
  42697c:	bl	4024f0 <strlen@plt>
  426980:	mov	x19, x0
  426984:	add	x0, x0, #0x12
  426988:	mov	x2, x19
  42698c:	and	x0, x0, #0xfffffffffffffff0
  426990:	mov	x1, x20
  426994:	sub	sp, sp, x0
  426998:	mov	x21, sp
  42699c:	mov	x0, x21
  4269a0:	bl	402490 <memcpy@plt>
  4269a4:	mov	x0, x20
  4269a8:	mov	w1, #0x3d                  	// #61
  4269ac:	bl	402940 <strchr@plt>
  4269b0:	cbz	x0, 4269f0 <nftw@plt+0x23e70>
  4269b4:	sub	x20, x0, x20
  4269b8:	mov	w0, #0x20                  	// #32
  4269bc:	strb	w0, [x21, x20]
  4269c0:	mov	w4, #0xa                   	// #10
  4269c4:	mov	x0, x22
  4269c8:	mov	x3, x19
  4269cc:	mov	x2, x21
  4269d0:	mov	w1, #0x0                   	// #0
  4269d4:	strb	w4, [x21, x19]
  4269d8:	bl	426720 <nftw@plt+0x23ba0>
  4269dc:	mov	sp, x29
  4269e0:	ldp	x19, x20, [sp, #16]
  4269e4:	ldp	x21, x22, [sp, #32]
  4269e8:	ldp	x29, x30, [sp], #48
  4269ec:	ret
  4269f0:	add	x0, x19, #0x1
  4269f4:	mov	w1, #0x20                  	// #32
  4269f8:	strb	w1, [x21, x19]
  4269fc:	mov	w1, #0x31                  	// #49
  426a00:	add	x19, x19, #0x2
  426a04:	strb	w1, [x21, x0]
  426a08:	b	4269c0 <nftw@plt+0x23e40>
  426a0c:	nop
  426a10:	stp	x29, x30, [sp, #-272]!
  426a14:	mov	w9, #0xffffffd0            	// #-48
  426a18:	mov	w8, #0xffffff80            	// #-128
  426a1c:	mov	x29, sp
  426a20:	add	x10, sp, #0xe0
  426a24:	add	x11, sp, #0x110
  426a28:	stp	x11, x11, [sp, #64]
  426a2c:	str	x10, [sp, #80]
  426a30:	stp	w9, w8, [sp, #88]
  426a34:	ldp	x10, x11, [sp, #64]
  426a38:	stp	x19, x20, [sp, #16]
  426a3c:	mov	x20, x0
  426a40:	ldp	x8, x9, [sp, #80]
  426a44:	mov	x0, x1
  426a48:	add	x1, sp, #0x20
  426a4c:	stp	x10, x11, [sp, #32]
  426a50:	stp	x8, x9, [sp, #48]
  426a54:	str	q0, [sp, #96]
  426a58:	str	q1, [sp, #112]
  426a5c:	str	q2, [sp, #128]
  426a60:	str	q3, [sp, #144]
  426a64:	str	q4, [sp, #160]
  426a68:	str	q5, [sp, #176]
  426a6c:	str	q6, [sp, #192]
  426a70:	str	q7, [sp, #208]
  426a74:	stp	x2, x3, [sp, #224]
  426a78:	stp	x4, x5, [sp, #240]
  426a7c:	stp	x6, x7, [sp, #256]
  426a80:	bl	461768 <_obstack_memory_used@@Base+0x320>
  426a84:	mov	x19, x0
  426a88:	mov	x1, x19
  426a8c:	mov	x0, x20
  426a90:	bl	426960 <nftw@plt+0x23de0>
  426a94:	mov	x0, x19
  426a98:	bl	402910 <free@plt>
  426a9c:	ldp	x19, x20, [sp, #16]
  426aa0:	ldp	x29, x30, [sp], #272
  426aa4:	ret
  426aa8:	stp	x29, x30, [sp, #-64]!
  426aac:	mov	x29, sp
  426ab0:	stp	x19, x20, [sp, #16]
  426ab4:	mov	x20, x1
  426ab8:	stp	x21, x22, [sp, #32]
  426abc:	mov	x22, x0
  426ac0:	mov	x0, x1
  426ac4:	str	x23, [sp, #48]
  426ac8:	mov	w23, w2
  426acc:	bl	4024f0 <strlen@plt>
  426ad0:	mov	x19, x0
  426ad4:	mov	w1, #0x3d                  	// #61
  426ad8:	mov	x0, x20
  426adc:	bl	402940 <strchr@plt>
  426ae0:	mov	x21, x0
  426ae4:	add	x1, x19, #0x11
  426ae8:	mov	x2, x19
  426aec:	and	x0, x1, #0xfffffffffffffff0
  426af0:	mov	x1, x20
  426af4:	sub	sp, sp, x0
  426af8:	mov	x4, sp
  426afc:	mov	x0, x4
  426b00:	bl	402490 <memcpy@plt>
  426b04:	mov	x4, x0
  426b08:	mov	x3, x19
  426b0c:	cbz	x21, 426b28 <nftw@plt+0x23fa8>
  426b10:	sub	x20, x21, x20
  426b14:	mov	w1, #0x28                  	// #40
  426b18:	add	x3, x19, #0x1
  426b1c:	mov	w0, #0x29                  	// #41
  426b20:	strb	w1, [x4, x20]
  426b24:	strb	w0, [x4, x19]
  426b28:	mov	w5, #0xa                   	// #10
  426b2c:	strb	w5, [x4, x3]
  426b30:	mov	w1, w23
  426b34:	mov	x0, x22
  426b38:	mov	x2, x4
  426b3c:	bl	426720 <nftw@plt+0x23ba0>
  426b40:	mov	sp, x29
  426b44:	ldp	x19, x20, [sp, #16]
  426b48:	ldp	x21, x22, [sp, #32]
  426b4c:	ldr	x23, [sp, #48]
  426b50:	ldp	x29, x30, [sp], #64
  426b54:	ret
  426b58:	mov	w2, #0x10                  	// #16
  426b5c:	b	426aa8 <nftw@plt+0x23f28>
  426b60:	mov	w2, #0x11                  	// #17
  426b64:	b	426aa8 <nftw@plt+0x23f28>
  426b68:	stp	x29, x30, [sp, #-48]!
  426b6c:	mov	x29, sp
  426b70:	stp	x19, x20, [sp, #16]
  426b74:	mov	x19, x0
  426b78:	mov	x0, x1
  426b7c:	stp	x21, x22, [sp, #32]
  426b80:	mov	x22, x1
  426b84:	bl	4024f0 <strlen@plt>
  426b88:	mov	x21, x0
  426b8c:	add	x0, x0, #0x10
  426b90:	and	x0, x0, #0xfffffffffffffff0
  426b94:	add	x20, x19, #0x328
  426b98:	sub	sp, sp, x0
  426b9c:	mov	x1, x22
  426ba0:	mov	x22, sp
  426ba4:	mov	x2, x21
  426ba8:	mov	x0, x22
  426bac:	bl	402490 <memcpy@plt>
  426bb0:	ldp	x0, x4, [x20, #24]
  426bb4:	mov	w1, #0xa                   	// #10
  426bb8:	strb	w1, [x22, x21]
  426bbc:	add	x21, x22, x21
  426bc0:	sub	x1, x4, x0
  426bc4:	cmp	x1, #0xc7
  426bc8:	b.ls	426d90 <nftw@plt+0x24210>  // b.plast
  426bcc:	ldr	x1, [x20, #16]
  426bd0:	add	x0, x0, #0xc8
  426bd4:	cmp	x0, x1
  426bd8:	b.eq	426db0 <nftw@plt+0x24230>  // b.none
  426bdc:	ldr	x2, [x20, #48]
  426be0:	ldr	x3, [x20, #8]
  426be4:	add	x0, x0, x2
  426be8:	bic	x0, x0, x2
  426bec:	str	x0, [x20, #24]
  426bf0:	sub	x2, x0, x3
  426bf4:	sub	x3, x4, x3
  426bf8:	cmp	x2, x3
  426bfc:	b.ls	426c08 <nftw@plt+0x24088>  // b.plast
  426c00:	mov	x0, x4
  426c04:	str	x4, [x20, #24]
  426c08:	str	x0, [x20, #16]
  426c0c:	dup	v0.2d, x22
  426c10:	stp	xzr, xzr, [x1, #96]
  426c14:	mov	w6, #0xfffffd00            	// #-768
  426c18:	mov	w5, #0x201                 	// #513
  426c1c:	ldrh	w2, [x1, #104]
  426c20:	mov	w4, #0x1                   	// #1
  426c24:	stp	xzr, xzr, [x1]
  426c28:	mov	w3, #0x53                  	// #83
  426c2c:	and	w2, w2, w6
  426c30:	stp	xzr, xzr, [x1, #32]
  426c34:	orr	w2, w2, w5
  426c38:	mov	x0, x19
  426c3c:	stp	xzr, xzr, [x1, #48]
  426c40:	adrp	x20, 47b000 <_obstack_memory_used@@Base+0x19bb8>
  426c44:	add	x20, x20, #0xab0
  426c48:	stp	xzr, xzr, [x1, #64]
  426c4c:	stp	xzr, xzr, [x1, #80]
  426c50:	stp	xzr, xzr, [x1, #112]
  426c54:	stp	xzr, xzr, [x1, #128]
  426c58:	stp	xzr, xzr, [x1, #144]
  426c5c:	stp	xzr, xzr, [x1, #160]
  426c60:	stp	xzr, xzr, [x1, #176]
  426c64:	str	xzr, [x1, #192]
  426c68:	str	x21, [x1, #32]
  426c6c:	ldr	x5, [x19]
  426c70:	strh	w2, [x1, #104]
  426c74:	ldr	x2, [x19, #40]
  426c78:	str	q0, [x1, #16]
  426c7c:	str	x5, [x1, #72]
  426c80:	strb	w4, [x19, #16]
  426c84:	strb	wzr, [x19, #21]
  426c88:	str	x1, [x19]
  426c8c:	ldr	w1, [x2, #60]
  426c90:	str	w1, [x19, #48]
  426c94:	strb	w3, [x19, #156]
  426c98:	bl	42f460 <nftw@plt+0x2c8e0>
  426c9c:	str	x20, [x19, #144]
  426ca0:	ldrb	w0, [x19, #1160]
  426ca4:	adrp	x1, 424000 <nftw@plt+0x21480>
  426ca8:	add	x1, x1, #0x380
  426cac:	cbnz	w0, 426dc0 <nftw@plt+0x24240>
  426cb0:	mov	x0, x19
  426cb4:	blr	x1
  426cb8:	ldrb	w0, [x19, #1160]
  426cbc:	cbz	w0, 426d20 <nftw@plt+0x241a0>
  426cc0:	ldrb	w0, [x19, #32]
  426cc4:	cbnz	w0, 426cd4 <nftw@plt+0x24154>
  426cc8:	ldrb	w0, [x19, #24]
  426ccc:	sub	w0, w0, #0x1
  426cd0:	strb	w0, [x19, #24]
  426cd4:	ldr	x0, [x19, #144]
  426cd8:	cmp	x0, x20
  426cdc:	b.eq	426ce8 <nftw@plt+0x24168>  // b.none
  426ce0:	mov	x0, x19
  426ce4:	bl	4400f0 <nftw@plt+0x3d570>
  426ce8:	ldrb	w1, [x19, #1123]
  426cec:	mov	x0, x19
  426cf0:	strb	wzr, [x19, #16]
  426cf4:	cmp	w1, #0x0
  426cf8:	sturh	wzr, [x19, #19]
  426cfc:	cset	w1, eq  // eq = none
  426d00:	strb	w1, [x19, #21]
  426d04:	str	xzr, [x19, #144]
  426d08:	bl	425cc0 <nftw@plt+0x23140>
  426d0c:	mov	sp, x29
  426d10:	ldp	x19, x20, [sp, #16]
  426d14:	ldp	x21, x22, [sp, #32]
  426d18:	ldp	x29, x30, [sp], #48
  426d1c:	ret
  426d20:	ldrb	w0, [x19, #32]
  426d24:	cbnz	w0, 426ce8 <nftw@plt+0x24168>
  426d28:	ldr	x0, [x19, #136]
  426d2c:	ldr	x0, [x0, #8]
  426d30:	cbz	x0, 426d4c <nftw@plt+0x241cc>
  426d34:	nop
  426d38:	mov	x0, x19
  426d3c:	bl	43a9a8 <nftw@plt+0x37e28>
  426d40:	ldr	x0, [x19, #136]
  426d44:	ldr	x0, [x0, #8]
  426d48:	cbnz	x0, 426d38 <nftw@plt+0x241b8>
  426d4c:	ldr	x0, [x19, #448]
  426d50:	ldurb	w0, [x0, #-20]
  426d54:	cmp	w0, #0x16
  426d58:	b.eq	426d74 <nftw@plt+0x241f4>  // b.none
  426d5c:	nop
  426d60:	mov	x0, x19
  426d64:	bl	434b58 <nftw@plt+0x31fd8>
  426d68:	ldrb	w0, [x0, #4]
  426d6c:	cmp	w0, #0x16
  426d70:	b.ne	426d60 <nftw@plt+0x241e0>  // b.any
  426d74:	ldr	w0, [x19, #500]
  426d78:	cbnz	w0, 426ce8 <nftw@plt+0x24168>
  426d7c:	ldr	x1, [x19, #472]
  426d80:	add	x0, x19, #0x1c8
  426d84:	str	x1, [x19, #448]
  426d88:	str	x0, [x19, #488]
  426d8c:	b	426ce8 <nftw@plt+0x24168>
  426d90:	mov	x0, x20
  426d94:	mov	x1, #0xc8                  	// #200
  426d98:	bl	461200 <_obstack_newchunk@@Base>
  426d9c:	ldp	x0, x4, [x20, #24]
  426da0:	ldr	x1, [x20, #16]
  426da4:	add	x0, x0, #0xc8
  426da8:	cmp	x0, x1
  426dac:	b.ne	426bdc <nftw@plt+0x2405c>  // b.any
  426db0:	ldrb	w2, [x20, #80]
  426db4:	orr	w2, w2, #0x2
  426db8:	strb	w2, [x20, #80]
  426dbc:	b	426bdc <nftw@plt+0x2405c>
  426dc0:	mov	x0, x19
  426dc4:	bl	422b90 <nftw@plt+0x20010>
  426dc8:	ldr	x0, [x19, #144]
  426dcc:	ldr	x1, [x0]
  426dd0:	b	426cb0 <nftw@plt+0x24130>
  426dd4:	nop
  426dd8:	stp	x29, x30, [sp, #-48]!
  426ddc:	mov	x29, sp
  426de0:	stp	x19, x20, [sp, #16]
  426de4:	mov	x19, x0
  426de8:	mov	x0, x1
  426dec:	stp	x21, x22, [sp, #32]
  426df0:	mov	x22, x1
  426df4:	bl	4024f0 <strlen@plt>
  426df8:	mov	x21, x0
  426dfc:	add	x0, x0, #0x10
  426e00:	and	x0, x0, #0xfffffffffffffff0
  426e04:	add	x20, x19, #0x328
  426e08:	sub	sp, sp, x0
  426e0c:	mov	x1, x22
  426e10:	mov	x22, sp
  426e14:	mov	x2, x21
  426e18:	mov	x0, x22
  426e1c:	bl	402490 <memcpy@plt>
  426e20:	ldp	x0, x4, [x20, #24]
  426e24:	mov	w1, #0xa                   	// #10
  426e28:	strb	w1, [x22, x21]
  426e2c:	add	x21, x22, x21
  426e30:	sub	x1, x4, x0
  426e34:	cmp	x1, #0xc7
  426e38:	b.ls	427000 <nftw@plt+0x24480>  // b.plast
  426e3c:	ldr	x1, [x20, #16]
  426e40:	add	x0, x0, #0xc8
  426e44:	cmp	x0, x1
  426e48:	b.eq	427020 <nftw@plt+0x244a0>  // b.none
  426e4c:	ldr	x2, [x20, #48]
  426e50:	ldr	x3, [x20, #8]
  426e54:	add	x0, x0, x2
  426e58:	bic	x0, x0, x2
  426e5c:	str	x0, [x20, #24]
  426e60:	sub	x2, x0, x3
  426e64:	sub	x3, x4, x3
  426e68:	cmp	x2, x3
  426e6c:	b.ls	426e78 <nftw@plt+0x242f8>  // b.plast
  426e70:	mov	x0, x4
  426e74:	str	x4, [x20, #24]
  426e78:	str	x0, [x20, #16]
  426e7c:	dup	v0.2d, x22
  426e80:	stp	xzr, xzr, [x1, #96]
  426e84:	mov	w6, #0xfffffd00            	// #-768
  426e88:	mov	w5, #0x201                 	// #513
  426e8c:	ldrh	w2, [x1, #104]
  426e90:	mov	w4, #0x1                   	// #1
  426e94:	stp	xzr, xzr, [x1]
  426e98:	mov	w3, #0x53                  	// #83
  426e9c:	and	w2, w2, w6
  426ea0:	stp	xzr, xzr, [x1, #32]
  426ea4:	orr	w2, w2, w5
  426ea8:	mov	x0, x19
  426eac:	stp	xzr, xzr, [x1, #48]
  426eb0:	adrp	x20, 47b000 <_obstack_memory_used@@Base+0x19bb8>
  426eb4:	add	x20, x20, #0xab0
  426eb8:	stp	xzr, xzr, [x1, #64]
  426ebc:	stp	xzr, xzr, [x1, #80]
  426ec0:	stp	xzr, xzr, [x1, #112]
  426ec4:	stp	xzr, xzr, [x1, #128]
  426ec8:	stp	xzr, xzr, [x1, #144]
  426ecc:	stp	xzr, xzr, [x1, #160]
  426ed0:	stp	xzr, xzr, [x1, #176]
  426ed4:	str	xzr, [x1, #192]
  426ed8:	str	x21, [x1, #32]
  426edc:	ldr	x5, [x19]
  426ee0:	strh	w2, [x1, #104]
  426ee4:	ldr	x2, [x19, #40]
  426ee8:	str	q0, [x1, #16]
  426eec:	str	x5, [x1, #72]
  426ef0:	strb	w4, [x19, #16]
  426ef4:	strb	wzr, [x19, #21]
  426ef8:	str	x1, [x19]
  426efc:	ldr	w1, [x2, #60]
  426f00:	str	w1, [x19, #48]
  426f04:	strb	w3, [x19, #156]
  426f08:	bl	42f460 <nftw@plt+0x2c8e0>
  426f0c:	ldrb	w0, [x19, #1160]
  426f10:	add	x1, x20, #0xa8
  426f14:	str	x1, [x19, #144]
  426f18:	adrp	x1, 424000 <nftw@plt+0x21480>
  426f1c:	add	x1, x1, #0x658
  426f20:	cbnz	w0, 427030 <nftw@plt+0x244b0>
  426f24:	mov	x0, x19
  426f28:	blr	x1
  426f2c:	ldrb	w0, [x19, #1160]
  426f30:	cbz	w0, 426f94 <nftw@plt+0x24414>
  426f34:	ldrb	w0, [x19, #32]
  426f38:	cbnz	w0, 426f48 <nftw@plt+0x243c8>
  426f3c:	ldrb	w0, [x19, #24]
  426f40:	sub	w0, w0, #0x1
  426f44:	strb	w0, [x19, #24]
  426f48:	ldr	x0, [x19, #144]
  426f4c:	cmp	x0, x20
  426f50:	b.eq	426f5c <nftw@plt+0x243dc>  // b.none
  426f54:	mov	x0, x19
  426f58:	bl	4400f0 <nftw@plt+0x3d570>
  426f5c:	ldrb	w1, [x19, #1123]
  426f60:	mov	x0, x19
  426f64:	strb	wzr, [x19, #16]
  426f68:	cmp	w1, #0x0
  426f6c:	sturh	wzr, [x19, #19]
  426f70:	cset	w1, eq  // eq = none
  426f74:	strb	w1, [x19, #21]
  426f78:	str	xzr, [x19, #144]
  426f7c:	bl	425cc0 <nftw@plt+0x23140>
  426f80:	mov	sp, x29
  426f84:	ldp	x19, x20, [sp, #16]
  426f88:	ldp	x21, x22, [sp, #32]
  426f8c:	ldp	x29, x30, [sp], #48
  426f90:	ret
  426f94:	ldrb	w0, [x19, #32]
  426f98:	cbnz	w0, 426f5c <nftw@plt+0x243dc>
  426f9c:	ldr	x0, [x19, #136]
  426fa0:	ldr	x0, [x0, #8]
  426fa4:	cbz	x0, 426fbc <nftw@plt+0x2443c>
  426fa8:	mov	x0, x19
  426fac:	bl	43a9a8 <nftw@plt+0x37e28>
  426fb0:	ldr	x0, [x19, #136]
  426fb4:	ldr	x0, [x0, #8]
  426fb8:	cbnz	x0, 426fa8 <nftw@plt+0x24428>
  426fbc:	ldr	x0, [x19, #448]
  426fc0:	ldurb	w0, [x0, #-20]
  426fc4:	cmp	w0, #0x16
  426fc8:	b.eq	426fe4 <nftw@plt+0x24464>  // b.none
  426fcc:	nop
  426fd0:	mov	x0, x19
  426fd4:	bl	434b58 <nftw@plt+0x31fd8>
  426fd8:	ldrb	w0, [x0, #4]
  426fdc:	cmp	w0, #0x16
  426fe0:	b.ne	426fd0 <nftw@plt+0x24450>  // b.any
  426fe4:	ldr	w0, [x19, #500]
  426fe8:	cbnz	w0, 426f5c <nftw@plt+0x243dc>
  426fec:	ldr	x1, [x19, #472]
  426ff0:	add	x0, x19, #0x1c8
  426ff4:	str	x1, [x19, #448]
  426ff8:	str	x0, [x19, #488]
  426ffc:	b	426f5c <nftw@plt+0x243dc>
  427000:	mov	x0, x20
  427004:	mov	x1, #0xc8                  	// #200
  427008:	bl	461200 <_obstack_newchunk@@Base>
  42700c:	ldp	x0, x4, [x20, #24]
  427010:	ldr	x1, [x20, #16]
  427014:	add	x0, x0, #0xc8
  427018:	cmp	x0, x1
  42701c:	b.ne	426e4c <nftw@plt+0x242cc>  // b.any
  427020:	ldrb	w2, [x20, #80]
  427024:	orr	w2, w2, #0x2
  427028:	strb	w2, [x20, #80]
  42702c:	b	426e4c <nftw@plt+0x242cc>
  427030:	mov	x0, x19
  427034:	bl	422b90 <nftw@plt+0x20010>
  427038:	ldr	x0, [x19, #144]
  42703c:	ldr	x1, [x0]
  427040:	b	426f24 <nftw@plt+0x243a4>
  427044:	nop
  427048:	stp	x29, x30, [sp, #-48]!
  42704c:	mov	x29, sp
  427050:	stp	x19, x20, [sp, #16]
  427054:	adrp	x20, 47b000 <_obstack_memory_used@@Base+0x19bb8>
  427058:	add	x20, x20, #0xab0
  42705c:	add	x20, x20, #0x8
  427060:	str	x21, [sp, #32]
  427064:	mov	x21, x0
  427068:	mov	w19, #0x0                   	// #0
  42706c:	nop
  427070:	ldrh	w2, [x20, #8]
  427074:	mov	x0, x21
  427078:	ldr	x1, [x20], #24
  42707c:	bl	42eb68 <nftw@plt+0x2bfe8>
  427080:	ubfiz	w1, w19, #1, #7
  427084:	add	w19, w19, #0x1
  427088:	orr	w1, w1, #0x1
  42708c:	strb	w1, [x0, #16]
  427090:	cmp	w19, #0x13
  427094:	b.ne	427070 <nftw@plt+0x244f0>  // b.any
  427098:	ldp	x19, x20, [sp, #16]
  42709c:	ldr	x21, [sp, #32]
  4270a0:	ldp	x29, x30, [sp], #48
  4270a4:	ret
  4270a8:	b	4227f0 <nftw@plt+0x1fc70>
  4270ac:	nop
  4270b0:	stp	x29, x30, [sp, #-240]!
  4270b4:	mov	x29, sp
  4270b8:	stp	x19, x20, [sp, #16]
  4270bc:	mov	x19, x0
  4270c0:	ldr	x0, [x0, #1000]
  4270c4:	stp	x21, x22, [sp, #32]
  4270c8:	stp	x23, x24, [sp, #48]
  4270cc:	cbz	x0, 427160 <nftw@plt+0x245e0>
  4270d0:	mov	w21, w1
  4270d4:	mov	w22, w2
  4270d8:	ldr	x1, [x19, #40]
  4270dc:	mov	w2, w3
  4270e0:	mov	w20, w4
  4270e4:	mov	x23, x5
  4270e8:	mov	x24, x6
  4270ec:	add	x0, sp, #0x48
  4270f0:	mov	x3, #0x0                   	// #0
  4270f4:	bl	437b48 <nftw@plt+0x34fc8>
  4270f8:	cbnz	w20, 427150 <nftw@plt+0x245d0>
  4270fc:	ldr	x20, [x19, #1000]
  427100:	mov	x1, x23
  427104:	adrp	x0, 47b000 <_obstack_memory_used@@Base+0x19bb8>
  427108:	add	x0, x0, #0xd68
  42710c:	bl	402900 <dgettext@plt>
  427110:	mov	x4, x0
  427114:	mov	x5, x24
  427118:	add	x3, sp, #0x48
  42711c:	mov	w2, w22
  427120:	mov	w1, w21
  427124:	mov	x0, x19
  427128:	blr	x20
  42712c:	mov	w19, w0
  427130:	add	x0, sp, #0x48
  427134:	bl	437b88 <nftw@plt+0x35008>
  427138:	mov	w0, w19
  42713c:	ldp	x19, x20, [sp, #16]
  427140:	ldp	x21, x22, [sp, #32]
  427144:	ldp	x23, x24, [sp, #48]
  427148:	ldp	x29, x30, [sp], #240
  42714c:	ret
  427150:	mov	w1, w20
  427154:	add	x0, sp, #0x48
  427158:	bl	437d88 <nftw@plt+0x35208>
  42715c:	b	4270fc <nftw@plt+0x2457c>
  427160:	adrp	x2, 47b000 <_obstack_memory_used@@Base+0x19bb8>
  427164:	adrp	x0, 47b000 <_obstack_memory_used@@Base+0x19bb8>
  427168:	add	x2, x2, #0xd30
  42716c:	add	x0, x0, #0xd50
  427170:	mov	w1, #0x9f                  	// #159
  427174:	bl	402bf0 <nftw@plt+0x70>
  427178:	stp	x29, x30, [sp, #-432]!
  42717c:	mov	w9, #0xffffffd8            	// #-40
  427180:	mov	w8, #0xffffff80            	// #-128
  427184:	mov	x29, sp
  427188:	stp	x19, x20, [sp, #16]
  42718c:	mov	x19, x0
  427190:	add	x0, sp, #0x1b0
  427194:	stp	x21, x22, [sp, #32]
  427198:	add	x10, sp, #0x180
  42719c:	mov	w22, w1
  4271a0:	stp	x0, x0, [sp, #56]
  4271a4:	mov	x20, x2
  4271a8:	ldrb	w0, [x19, #1160]
  4271ac:	str	x10, [sp, #72]
  4271b0:	stp	w9, w8, [sp, #80]
  4271b4:	str	q0, [sp, #256]
  4271b8:	str	q1, [sp, #272]
  4271bc:	str	q2, [sp, #288]
  4271c0:	str	q3, [sp, #304]
  4271c4:	str	q4, [sp, #320]
  4271c8:	str	q5, [sp, #336]
  4271cc:	str	q6, [sp, #352]
  4271d0:	str	q7, [sp, #368]
  4271d4:	stp	x3, x4, [sp, #392]
  4271d8:	stp	x5, x6, [sp, #408]
  4271dc:	str	x7, [sp, #424]
  4271e0:	cbz	w0, 42725c <nftw@plt+0x246dc>
  4271e4:	ldrb	w0, [x19, #16]
  4271e8:	ldr	x1, [x19, #40]
  4271ec:	cbnz	w0, 427254 <nftw@plt+0x246d4>
  4271f0:	ldr	w2, [x1, #60]
  4271f4:	add	x0, sp, #0x58
  4271f8:	mov	x3, #0x0                   	// #0
  4271fc:	bl	437b48 <nftw@plt+0x34fc8>
  427200:	ldr	x21, [x19, #1000]
  427204:	cbz	x21, 427280 <nftw@plt+0x24700>
  427208:	mov	x1, x20
  42720c:	adrp	x0, 47b000 <_obstack_memory_used@@Base+0x19bb8>
  427210:	add	x0, x0, #0xd68
  427214:	bl	402900 <dgettext@plt>
  427218:	mov	w1, w22
  42721c:	mov	x4, x0
  427220:	add	x5, sp, #0x38
  427224:	add	x3, sp, #0x58
  427228:	mov	w2, #0x0                   	// #0
  42722c:	mov	x0, x19
  427230:	blr	x21
  427234:	mov	w19, w0
  427238:	add	x0, sp, #0x58
  42723c:	bl	437b88 <nftw@plt+0x35008>
  427240:	mov	w0, w19
  427244:	ldp	x19, x20, [sp, #16]
  427248:	ldp	x21, x22, [sp, #32]
  42724c:	ldp	x29, x30, [sp], #432
  427250:	ret
  427254:	ldr	w2, [x19, #48]
  427258:	b	4271f4 <nftw@plt+0x24674>
  42725c:	ldr	x1, [x19, #488]
  427260:	mov	w2, #0x0                   	// #0
  427264:	ldr	x0, [x19, #448]
  427268:	ldr	x3, [x1, #16]
  42726c:	ldr	x1, [x19, #40]
  427270:	cmp	x0, x3
  427274:	b.eq	4271f4 <nftw@plt+0x24674>  // b.none
  427278:	ldur	w2, [x0, #-24]
  42727c:	b	4271f4 <nftw@plt+0x24674>
  427280:	adrp	x2, 47b000 <_obstack_memory_used@@Base+0x19bb8>
  427284:	adrp	x0, 47b000 <_obstack_memory_used@@Base+0x19bb8>
  427288:	add	x2, x2, #0xd70
  42728c:	add	x0, x0, #0xd50
  427290:	mov	w1, #0x29                  	// #41
  427294:	bl	402bf0 <nftw@plt+0x70>
  427298:	stp	x29, x30, [sp, #-432]!
  42729c:	mov	w9, #0xffffffd8            	// #-40
  4272a0:	mov	w8, #0xffffff80            	// #-128
  4272a4:	mov	x29, sp
  4272a8:	stp	x19, x20, [sp, #16]
  4272ac:	mov	x19, x0
  4272b0:	add	x0, sp, #0x1b0
  4272b4:	stp	x21, x22, [sp, #32]
  4272b8:	add	x10, sp, #0x180
  4272bc:	mov	w22, w1
  4272c0:	stp	x0, x0, [sp, #56]
  4272c4:	mov	x20, x2
  4272c8:	ldrb	w0, [x19, #1160]
  4272cc:	str	x10, [sp, #72]
  4272d0:	stp	w9, w8, [sp, #80]
  4272d4:	str	q0, [sp, #256]
  4272d8:	str	q1, [sp, #272]
  4272dc:	str	q2, [sp, #288]
  4272e0:	str	q3, [sp, #304]
  4272e4:	str	q4, [sp, #320]
  4272e8:	str	q5, [sp, #336]
  4272ec:	str	q6, [sp, #352]
  4272f0:	str	q7, [sp, #368]
  4272f4:	stp	x3, x4, [sp, #392]
  4272f8:	stp	x5, x6, [sp, #408]
  4272fc:	str	x7, [sp, #424]
  427300:	cbz	w0, 42737c <nftw@plt+0x247fc>
  427304:	ldrb	w0, [x19, #16]
  427308:	ldr	x1, [x19, #40]
  42730c:	cbnz	w0, 427374 <nftw@plt+0x247f4>
  427310:	ldr	w2, [x1, #60]
  427314:	add	x0, sp, #0x58
  427318:	mov	x3, #0x0                   	// #0
  42731c:	bl	437b48 <nftw@plt+0x34fc8>
  427320:	ldr	x21, [x19, #1000]
  427324:	cbz	x21, 4273a0 <nftw@plt+0x24820>
  427328:	mov	x1, x20
  42732c:	adrp	x0, 47b000 <_obstack_memory_used@@Base+0x19bb8>
  427330:	add	x0, x0, #0xd68
  427334:	bl	402900 <dgettext@plt>
  427338:	mov	w2, w22
  42733c:	mov	x4, x0
  427340:	add	x5, sp, #0x38
  427344:	add	x3, sp, #0x58
  427348:	mov	w1, #0x0                   	// #0
  42734c:	mov	x0, x19
  427350:	blr	x21
  427354:	mov	w19, w0
  427358:	add	x0, sp, #0x58
  42735c:	bl	437b88 <nftw@plt+0x35008>
  427360:	mov	w0, w19
  427364:	ldp	x19, x20, [sp, #16]
  427368:	ldp	x21, x22, [sp, #32]
  42736c:	ldp	x29, x30, [sp], #432
  427370:	ret
  427374:	ldr	w2, [x19, #48]
  427378:	b	427314 <nftw@plt+0x24794>
  42737c:	ldr	x1, [x19, #488]
  427380:	mov	w2, #0x0                   	// #0
  427384:	ldr	x0, [x19, #448]
  427388:	ldr	x3, [x1, #16]
  42738c:	ldr	x1, [x19, #40]
  427390:	cmp	x0, x3
  427394:	b.eq	427314 <nftw@plt+0x24794>  // b.none
  427398:	ldur	w2, [x0, #-24]
  42739c:	b	427314 <nftw@plt+0x24794>
  4273a0:	adrp	x2, 47b000 <_obstack_memory_used@@Base+0x19bb8>
  4273a4:	adrp	x0, 47b000 <_obstack_memory_used@@Base+0x19bb8>
  4273a8:	add	x2, x2, #0xd70
  4273ac:	add	x0, x0, #0xd50
  4273b0:	mov	w1, #0x29                  	// #41
  4273b4:	bl	402bf0 <nftw@plt+0x70>
  4273b8:	stp	x29, x30, [sp, #-432]!
  4273bc:	mov	w9, #0xffffffd8            	// #-40
  4273c0:	mov	w8, #0xffffff80            	// #-128
  4273c4:	mov	x29, sp
  4273c8:	stp	x19, x20, [sp, #16]
  4273cc:	mov	x19, x0
  4273d0:	add	x0, sp, #0x1b0
  4273d4:	stp	x21, x22, [sp, #32]
  4273d8:	add	x10, sp, #0x180
  4273dc:	mov	w22, w1
  4273e0:	stp	x0, x0, [sp, #56]
  4273e4:	mov	x20, x2
  4273e8:	ldrb	w0, [x19, #1160]
  4273ec:	str	x10, [sp, #72]
  4273f0:	stp	w9, w8, [sp, #80]
  4273f4:	str	q0, [sp, #256]
  4273f8:	str	q1, [sp, #272]
  4273fc:	str	q2, [sp, #288]
  427400:	str	q3, [sp, #304]
  427404:	str	q4, [sp, #320]
  427408:	str	q5, [sp, #336]
  42740c:	str	q6, [sp, #352]
  427410:	str	q7, [sp, #368]
  427414:	stp	x3, x4, [sp, #392]
  427418:	stp	x5, x6, [sp, #408]
  42741c:	str	x7, [sp, #424]
  427420:	cbz	w0, 42749c <nftw@plt+0x2491c>
  427424:	ldrb	w0, [x19, #16]
  427428:	ldr	x1, [x19, #40]
  42742c:	cbnz	w0, 427494 <nftw@plt+0x24914>
  427430:	ldr	w2, [x1, #60]
  427434:	add	x0, sp, #0x58
  427438:	mov	x3, #0x0                   	// #0
  42743c:	bl	437b48 <nftw@plt+0x34fc8>
  427440:	ldr	x21, [x19, #1000]
  427444:	cbz	x21, 4274c0 <nftw@plt+0x24940>
  427448:	mov	x1, x20
  42744c:	adrp	x0, 47b000 <_obstack_memory_used@@Base+0x19bb8>
  427450:	add	x0, x0, #0xd68
  427454:	bl	402900 <dgettext@plt>
  427458:	mov	w2, w22
  42745c:	mov	x4, x0
  427460:	add	x5, sp, #0x38
  427464:	add	x3, sp, #0x58
  427468:	mov	w1, #0x2                   	// #2
  42746c:	mov	x0, x19
  427470:	blr	x21
  427474:	mov	w19, w0
  427478:	add	x0, sp, #0x58
  42747c:	bl	437b88 <nftw@plt+0x35008>
  427480:	mov	w0, w19
  427484:	ldp	x19, x20, [sp, #16]
  427488:	ldp	x21, x22, [sp, #32]
  42748c:	ldp	x29, x30, [sp], #432
  427490:	ret
  427494:	ldr	w2, [x19, #48]
  427498:	b	427434 <nftw@plt+0x248b4>
  42749c:	ldr	x1, [x19, #488]
  4274a0:	mov	w2, #0x0                   	// #0
  4274a4:	ldr	x0, [x19, #448]
  4274a8:	ldr	x3, [x1, #16]
  4274ac:	ldr	x1, [x19, #40]
  4274b0:	cmp	x0, x3
  4274b4:	b.eq	427434 <nftw@plt+0x248b4>  // b.none
  4274b8:	ldur	w2, [x0, #-24]
  4274bc:	b	427434 <nftw@plt+0x248b4>
  4274c0:	adrp	x2, 47b000 <_obstack_memory_used@@Base+0x19bb8>
  4274c4:	adrp	x0, 47b000 <_obstack_memory_used@@Base+0x19bb8>
  4274c8:	add	x2, x2, #0xd70
  4274cc:	add	x0, x0, #0xd50
  4274d0:	mov	w1, #0x29                  	// #41
  4274d4:	bl	402bf0 <nftw@plt+0x70>
  4274d8:	stp	x29, x30, [sp, #-432]!
  4274dc:	mov	w9, #0xffffffd8            	// #-40
  4274e0:	mov	w8, #0xffffff80            	// #-128
  4274e4:	mov	x29, sp
  4274e8:	stp	x19, x20, [sp, #16]
  4274ec:	mov	x19, x0
  4274f0:	add	x0, sp, #0x1b0
  4274f4:	stp	x21, x22, [sp, #32]
  4274f8:	add	x10, sp, #0x180
  4274fc:	mov	w22, w1
  427500:	stp	x0, x0, [sp, #56]
  427504:	mov	x20, x2
  427508:	ldrb	w0, [x19, #1160]
  42750c:	str	x10, [sp, #72]
  427510:	stp	w9, w8, [sp, #80]
  427514:	str	q0, [sp, #256]
  427518:	str	q1, [sp, #272]
  42751c:	str	q2, [sp, #288]
  427520:	str	q3, [sp, #304]
  427524:	str	q4, [sp, #320]
  427528:	str	q5, [sp, #336]
  42752c:	str	q6, [sp, #352]
  427530:	str	q7, [sp, #368]
  427534:	stp	x3, x4, [sp, #392]
  427538:	stp	x5, x6, [sp, #408]
  42753c:	str	x7, [sp, #424]
  427540:	cbz	w0, 4275bc <nftw@plt+0x24a3c>
  427544:	ldrb	w0, [x19, #16]
  427548:	ldr	x1, [x19, #40]
  42754c:	cbnz	w0, 4275b4 <nftw@plt+0x24a34>
  427550:	ldr	w2, [x1, #60]
  427554:	add	x0, sp, #0x58
  427558:	mov	x3, #0x0                   	// #0
  42755c:	bl	437b48 <nftw@plt+0x34fc8>
  427560:	ldr	x21, [x19, #1000]
  427564:	cbz	x21, 4275e0 <nftw@plt+0x24a60>
  427568:	mov	x1, x20
  42756c:	adrp	x0, 47b000 <_obstack_memory_used@@Base+0x19bb8>
  427570:	add	x0, x0, #0xd68
  427574:	bl	402900 <dgettext@plt>
  427578:	mov	w2, w22
  42757c:	mov	x4, x0
  427580:	add	x5, sp, #0x38
  427584:	add	x3, sp, #0x58
  427588:	mov	w1, #0x1                   	// #1
  42758c:	mov	x0, x19
  427590:	blr	x21
  427594:	mov	w19, w0
  427598:	add	x0, sp, #0x58
  42759c:	bl	437b88 <nftw@plt+0x35008>
  4275a0:	mov	w0, w19
  4275a4:	ldp	x19, x20, [sp, #16]
  4275a8:	ldp	x21, x22, [sp, #32]
  4275ac:	ldp	x29, x30, [sp], #432
  4275b0:	ret
  4275b4:	ldr	w2, [x19, #48]
  4275b8:	b	427554 <nftw@plt+0x249d4>
  4275bc:	ldr	x1, [x19, #488]
  4275c0:	mov	w2, #0x0                   	// #0
  4275c4:	ldr	x0, [x19, #448]
  4275c8:	ldr	x3, [x1, #16]
  4275cc:	ldr	x1, [x19, #40]
  4275d0:	cmp	x0, x3
  4275d4:	b.eq	427554 <nftw@plt+0x249d4>  // b.none
  4275d8:	ldur	w2, [x0, #-24]
  4275dc:	b	427554 <nftw@plt+0x249d4>
  4275e0:	adrp	x2, 47b000 <_obstack_memory_used@@Base+0x19bb8>
  4275e4:	adrp	x0, 47b000 <_obstack_memory_used@@Base+0x19bb8>
  4275e8:	add	x2, x2, #0xd70
  4275ec:	add	x0, x0, #0xd50
  4275f0:	mov	w1, #0x29                  	// #41
  4275f4:	bl	402bf0 <nftw@plt+0x70>
  4275f8:	stp	x29, x30, [sp, #-208]!
  4275fc:	mov	x11, x4
  427600:	mov	w8, w3
  427604:	add	x12, sp, #0xd0
  427608:	add	x10, sp, #0xb0
  42760c:	mov	w4, w8
  427610:	mov	w9, #0xffffffe8            	// #-24
  427614:	mov	w8, #0xffffff80            	// #-128
  427618:	mov	x29, sp
  42761c:	mov	w3, w2
  427620:	mov	w2, #0x0                   	// #0
  427624:	str	x12, [sp, #16]
  427628:	str	x12, [sp, #24]
  42762c:	str	x10, [sp, #32]
  427630:	stp	w9, w8, [sp, #40]
  427634:	str	q0, [sp, #48]
  427638:	str	q1, [sp, #64]
  42763c:	str	q2, [sp, #80]
  427640:	str	q3, [sp, #96]
  427644:	str	q4, [sp, #112]
  427648:	str	q5, [sp, #128]
  42764c:	str	q6, [sp, #144]
  427650:	str	q7, [sp, #160]
  427654:	stp	x5, x6, [sp, #184]
  427658:	add	x6, sp, #0x10
  42765c:	mov	x5, x11
  427660:	str	x7, [sp, #200]
  427664:	bl	4270b0 <nftw@plt+0x24530>
  427668:	ldp	x29, x30, [sp], #208
  42766c:	ret
  427670:	stp	x29, x30, [sp, #-208]!
  427674:	mov	x11, x4
  427678:	mov	w9, w2
  42767c:	add	x12, sp, #0xd0
  427680:	add	x10, sp, #0xb0
  427684:	mov	w8, w3
  427688:	mov	w3, w9
  42768c:	mov	w4, w8
  427690:	mov	w9, #0xffffffe8            	// #-24
  427694:	mov	w8, #0xffffff80            	// #-128
  427698:	mov	x29, sp
  42769c:	mov	w2, w1
  4276a0:	mov	w1, #0x0                   	// #0
  4276a4:	str	x12, [sp, #16]
  4276a8:	str	x12, [sp, #24]
  4276ac:	str	x10, [sp, #32]
  4276b0:	stp	w9, w8, [sp, #40]
  4276b4:	str	q0, [sp, #48]
  4276b8:	str	q1, [sp, #64]
  4276bc:	str	q2, [sp, #80]
  4276c0:	str	q3, [sp, #96]
  4276c4:	str	q4, [sp, #112]
  4276c8:	str	q5, [sp, #128]
  4276cc:	str	q6, [sp, #144]
  4276d0:	str	q7, [sp, #160]
  4276d4:	stp	x5, x6, [sp, #184]
  4276d8:	add	x6, sp, #0x10
  4276dc:	mov	x5, x11
  4276e0:	str	x7, [sp, #200]
  4276e4:	bl	4270b0 <nftw@plt+0x24530>
  4276e8:	ldp	x29, x30, [sp], #208
  4276ec:	ret
  4276f0:	stp	x29, x30, [sp, #-208]!
  4276f4:	mov	x11, x4
  4276f8:	mov	w9, w2
  4276fc:	add	x12, sp, #0xd0
  427700:	add	x10, sp, #0xb0
  427704:	mov	w8, w3
  427708:	mov	w3, w9
  42770c:	mov	w4, w8
  427710:	mov	w9, #0xffffffe8            	// #-24
  427714:	mov	w8, #0xffffff80            	// #-128
  427718:	mov	x29, sp
  42771c:	mov	w2, w1
  427720:	mov	w1, #0x2                   	// #2
  427724:	str	x12, [sp, #16]
  427728:	str	x12, [sp, #24]
  42772c:	str	x10, [sp, #32]
  427730:	stp	w9, w8, [sp, #40]
  427734:	str	q0, [sp, #48]
  427738:	str	q1, [sp, #64]
  42773c:	str	q2, [sp, #80]
  427740:	str	q3, [sp, #96]
  427744:	str	q4, [sp, #112]
  427748:	str	q5, [sp, #128]
  42774c:	str	q6, [sp, #144]
  427750:	str	q7, [sp, #160]
  427754:	stp	x5, x6, [sp, #184]
  427758:	add	x6, sp, #0x10
  42775c:	mov	x5, x11
  427760:	str	x7, [sp, #200]
  427764:	bl	4270b0 <nftw@plt+0x24530>
  427768:	ldp	x29, x30, [sp], #208
  42776c:	ret
  427770:	stp	x29, x30, [sp, #-208]!
  427774:	mov	x11, x4
  427778:	mov	w9, w2
  42777c:	add	x12, sp, #0xd0
  427780:	add	x10, sp, #0xb0
  427784:	mov	w8, w3
  427788:	mov	w3, w9
  42778c:	mov	w4, w8
  427790:	mov	w9, #0xffffffe8            	// #-24
  427794:	mov	w8, #0xffffff80            	// #-128
  427798:	mov	x29, sp
  42779c:	mov	w2, w1
  4277a0:	mov	w1, #0x1                   	// #1
  4277a4:	str	x12, [sp, #16]
  4277a8:	str	x12, [sp, #24]
  4277ac:	str	x10, [sp, #32]
  4277b0:	stp	w9, w8, [sp, #40]
  4277b4:	str	q0, [sp, #48]
  4277b8:	str	q1, [sp, #64]
  4277bc:	str	q2, [sp, #80]
  4277c0:	str	q3, [sp, #96]
  4277c4:	str	q4, [sp, #112]
  4277c8:	str	q5, [sp, #128]
  4277cc:	str	q6, [sp, #144]
  4277d0:	str	q7, [sp, #160]
  4277d4:	stp	x5, x6, [sp, #184]
  4277d8:	add	x6, sp, #0x10
  4277dc:	mov	x5, x11
  4277e0:	str	x7, [sp, #200]
  4277e4:	bl	4270b0 <nftw@plt+0x24530>
  4277e8:	ldp	x29, x30, [sp], #208
  4277ec:	ret
  4277f0:	stp	x29, x30, [sp, #-416]!
  4277f4:	mov	w9, #0xffffffe0            	// #-32
  4277f8:	mov	w8, #0xffffff80            	// #-128
  4277fc:	mov	x29, sp
  427800:	stp	x19, x20, [sp, #16]
  427804:	mov	x19, x0
  427808:	mov	w20, w1
  42780c:	add	x10, sp, #0x180
  427810:	add	x11, sp, #0x1a0
  427814:	ldr	x1, [x19, #40]
  427818:	add	x0, sp, #0x58
  42781c:	stp	x21, x22, [sp, #32]
  427820:	mov	x21, x3
  427824:	mov	x3, #0x0                   	// #0
  427828:	stp	x11, x11, [sp, #56]
  42782c:	str	x10, [sp, #72]
  427830:	stp	w9, w8, [sp, #80]
  427834:	str	q0, [sp, #256]
  427838:	str	q1, [sp, #272]
  42783c:	str	q2, [sp, #288]
  427840:	str	q3, [sp, #304]
  427844:	str	q4, [sp, #320]
  427848:	str	q5, [sp, #336]
  42784c:	str	q6, [sp, #352]
  427850:	str	q7, [sp, #368]
  427854:	stp	x4, x5, [sp, #384]
  427858:	stp	x6, x7, [sp, #400]
  42785c:	bl	437b48 <nftw@plt+0x34fc8>
  427860:	ldr	x22, [x19, #1000]
  427864:	cbz	x22, 4278b4 <nftw@plt+0x24d34>
  427868:	mov	x1, x21
  42786c:	adrp	x0, 47b000 <_obstack_memory_used@@Base+0x19bb8>
  427870:	add	x0, x0, #0xd68
  427874:	bl	402900 <dgettext@plt>
  427878:	mov	w1, w20
  42787c:	mov	x4, x0
  427880:	add	x5, sp, #0x38
  427884:	add	x3, sp, #0x58
  427888:	mov	w2, #0x0                   	// #0
  42788c:	mov	x0, x19
  427890:	blr	x22
  427894:	mov	w19, w0
  427898:	add	x0, sp, #0x58
  42789c:	bl	437b88 <nftw@plt+0x35008>
  4278a0:	mov	w0, w19
  4278a4:	ldp	x19, x20, [sp, #16]
  4278a8:	ldp	x21, x22, [sp, #32]
  4278ac:	ldp	x29, x30, [sp], #416
  4278b0:	ret
  4278b4:	adrp	x2, 47b000 <_obstack_memory_used@@Base+0x19bb8>
  4278b8:	adrp	x0, 47b000 <_obstack_memory_used@@Base+0x19bb8>
  4278bc:	add	x2, x2, #0xd70
  4278c0:	add	x0, x0, #0xd50
  4278c4:	mov	w1, #0x29                  	// #41
  4278c8:	bl	402bf0 <nftw@plt+0x70>
  4278cc:	nop
  4278d0:	stp	x29, x30, [sp, #-240]!
  4278d4:	mov	w8, #0xffffffe0            	// #-32
  4278d8:	mov	x29, sp
  4278dc:	stp	x19, x20, [sp, #16]
  4278e0:	mov	x19, x0
  4278e4:	add	x9, sp, #0xd0
  4278e8:	str	q0, [sp, #80]
  4278ec:	mov	w0, #0xffffff80            	// #-128
  4278f0:	stp	x21, x22, [sp, #32]
  4278f4:	mov	x21, x2
  4278f8:	add	x2, sp, #0xf0
  4278fc:	ldr	x22, [x19, #1000]
  427900:	stp	x2, x2, [sp, #48]
  427904:	str	x9, [sp, #64]
  427908:	stp	w8, w0, [sp, #72]
  42790c:	str	q1, [sp, #96]
  427910:	str	q2, [sp, #112]
  427914:	str	q3, [sp, #128]
  427918:	str	q4, [sp, #144]
  42791c:	str	q5, [sp, #160]
  427920:	str	q6, [sp, #176]
  427924:	str	q7, [sp, #192]
  427928:	stp	x4, x5, [sp, #208]
  42792c:	stp	x6, x7, [sp, #224]
  427930:	cbz	x22, 427974 <nftw@plt+0x24df4>
  427934:	mov	w20, w1
  427938:	adrp	x0, 47b000 <_obstack_memory_used@@Base+0x19bb8>
  42793c:	mov	x1, x3
  427940:	add	x0, x0, #0xd68
  427944:	bl	402900 <dgettext@plt>
  427948:	mov	x4, x0
  42794c:	mov	x3, x21
  427950:	mov	w1, w20
  427954:	add	x5, sp, #0x30
  427958:	mov	x0, x19
  42795c:	mov	w2, #0x0                   	// #0
  427960:	blr	x22
  427964:	ldp	x19, x20, [sp, #16]
  427968:	ldp	x21, x22, [sp, #32]
  42796c:	ldp	x29, x30, [sp], #240
  427970:	ret
  427974:	adrp	x2, 47b000 <_obstack_memory_used@@Base+0x19bb8>
  427978:	adrp	x0, 47b000 <_obstack_memory_used@@Base+0x19bb8>
  42797c:	add	x2, x2, #0xd70
  427980:	add	x0, x0, #0xd50
  427984:	mov	w1, #0x29                  	// #41
  427988:	bl	402bf0 <nftw@plt+0x70>
  42798c:	nop
  427990:	stp	x29, x30, [sp, #-48]!
  427994:	mov	x29, sp
  427998:	stp	x19, x20, [sp, #16]
  42799c:	mov	w20, w1
  4279a0:	mov	x1, x2
  4279a4:	mov	x19, x0
  4279a8:	adrp	x0, 47b000 <_obstack_memory_used@@Base+0x19bb8>
  4279ac:	add	x0, x0, #0xd68
  4279b0:	str	x21, [sp, #32]
  4279b4:	bl	402900 <dgettext@plt>
  4279b8:	mov	x21, x0
  4279bc:	bl	402aa0 <__errno_location@plt>
  4279c0:	ldr	w0, [x0]
  4279c4:	bl	4616e0 <_obstack_memory_used@@Base+0x298>
  4279c8:	mov	x4, x0
  4279cc:	mov	x3, x21
  4279d0:	mov	w1, w20
  4279d4:	mov	x0, x19
  4279d8:	adrp	x2, 47b000 <_obstack_memory_used@@Base+0x19bb8>
  4279dc:	ldp	x19, x20, [sp, #16]
  4279e0:	add	x2, x2, #0xd88
  4279e4:	ldr	x21, [sp, #32]
  4279e8:	ldp	x29, x30, [sp], #48
  4279ec:	b	427178 <nftw@plt+0x245f8>
  4279f0:	stp	x29, x30, [sp, #-48]!
  4279f4:	mov	x29, sp
  4279f8:	stp	x19, x20, [sp, #16]
  4279fc:	mov	x20, x0
  427a00:	mov	x19, x2
  427a04:	stp	x21, x22, [sp, #32]
  427a08:	mov	w21, w1
  427a0c:	mov	w22, w3
  427a10:	ldrb	w0, [x2]
  427a14:	cbz	w0, 427a50 <nftw@plt+0x24ed0>
  427a18:	bl	402aa0 <__errno_location@plt>
  427a1c:	ldr	w0, [x0]
  427a20:	bl	4616e0 <_obstack_memory_used@@Base+0x298>
  427a24:	mov	x5, x0
  427a28:	mov	x4, x19
  427a2c:	mov	w2, w22
  427a30:	mov	w1, w21
  427a34:	mov	x0, x20
  427a38:	ldp	x19, x20, [sp, #16]
  427a3c:	adrp	x3, 47b000 <_obstack_memory_used@@Base+0x19bb8>
  427a40:	ldp	x21, x22, [sp, #32]
  427a44:	add	x3, x3, #0xd88
  427a48:	ldp	x29, x30, [sp], #48
  427a4c:	b	4277f0 <nftw@plt+0x24c70>
  427a50:	adrp	x1, 47b000 <_obstack_memory_used@@Base+0x19bb8>
  427a54:	adrp	x0, 47b000 <_obstack_memory_used@@Base+0x19bb8>
  427a58:	add	x1, x1, #0xd90
  427a5c:	add	x0, x0, #0xd68
  427a60:	bl	402900 <dgettext@plt>
  427a64:	mov	x19, x0
  427a68:	b	427a18 <nftw@plt+0x24e98>
  427a6c:	nop
  427a70:	stp	x29, x30, [sp, #-32]!
  427a74:	cmp	x2, #0x2
  427a78:	mov	x8, x0
  427a7c:	mov	x29, sp
  427a80:	b.eq	427d10 <nftw@plt+0x25190>  // b.none
  427a84:	ldrb	w7, [x0, #1163]
  427a88:	cbz	w7, 427b50 <nftw@plt+0x24fd0>
  427a8c:	cbnz	x2, 427eb4 <nftw@plt+0x25334>
  427a90:	mov	x9, #0x0                   	// #0
  427a94:	mov	x13, #0x0                   	// #0
  427a98:	mov	x11, #0x0                   	// #0
  427a9c:	mov	x5, #0x0                   	// #0
  427aa0:	mov	x10, #0x0                   	// #0
  427aa4:	mov	x15, #0x0                   	// #0
  427aa8:	mov	x12, #0x0                   	// #0
  427aac:	mov	x14, #0x0                   	// #0
  427ab0:	mov	w3, #0x0                   	// #0
  427ab4:	cmp	x14, #0x60
  427ab8:	mov	w0, #0x0                   	// #0
  427abc:	ccmp	w3, #0x0, #0x4, eq  // eq = none
  427ac0:	b.ne	427c3c <nftw@plt+0x250bc>  // b.any
  427ac4:	cbz	x9, 42802c <nftw@plt+0x254ac>
  427ac8:	mov	w0, #0x0                   	// #0
  427acc:	cbz	w7, 427c3c <nftw@plt+0x250bc>
  427ad0:	ldrb	w4, [x8, #1120]
  427ad4:	cbz	w4, 427af0 <nftw@plt+0x24f70>
  427ad8:	ldr	w4, [x8, #1116]
  427adc:	cmp	w4, #0xe
  427ae0:	b.le	427af0 <nftw@plt+0x24f70>
  427ae4:	ldrb	w4, [x1]
  427ae8:	cmp	w4, #0x69
  427aec:	b.eq	428084 <nftw@plt+0x25504>  // b.none
  427af0:	mov	w6, #0x2000                	// #8192
  427af4:	mov	w2, #0x2000                	// #8192
  427af8:	mov	w0, #0x2010                	// #8208
  427afc:	mov	w8, #0x2020                	// #8224
  427b00:	mov	w7, #0x2040                	// #8256
  427b04:	movk	w6, #0x1, lsl #16
  427b08:	movk	w2, #0x2, lsl #16
  427b0c:	mov	w4, #0xa000                	// #40960
  427b10:	mov	w1, #0x2000                	// #8192
  427b14:	cbnz	x5, 427c3c <nftw@plt+0x250bc>
  427b18:	mov	w0, w8
  427b1c:	cbnz	x13, 427c3c <nftw@plt+0x250bc>
  427b20:	mov	w0, w7
  427b24:	cbnz	x12, 427c3c <nftw@plt+0x250bc>
  427b28:	mov	w0, w6
  427b2c:	cbnz	x11, 427c3c <nftw@plt+0x250bc>
  427b30:	cbnz	x10, 4280bc <nftw@plt+0x2553c>
  427b34:	orr	w0, w1, w14, lsl #24
  427b38:	cbz	w3, 4280ac <nftw@plt+0x2552c>
  427b3c:	orr	w0, w0, #0x400000
  427b40:	b	427c3c <nftw@plt+0x250bc>
  427b44:	ldrb	w7, [x8, #1163]
  427b48:	cbnz	w7, 427eb4 <nftw@plt+0x25334>
  427b4c:	nop
  427b50:	sub	x4, x2, #0x1
  427b54:	mov	w7, #0x0                   	// #0
  427b58:	cbz	x2, 427a90 <nftw@plt+0x24f10>
  427b5c:	ldrb	w3, [x1]
  427b60:	mov	x6, x1
  427b64:	mov	x14, #0x0                   	// #0
  427b68:	mov	x15, #0x0                   	// #0
  427b6c:	mov	x16, #0x0                   	// #0
  427b70:	mov	x9, #0x0                   	// #0
  427b74:	mov	x10, #0x0                   	// #0
  427b78:	mov	x11, #0x0                   	// #0
  427b7c:	mov	x12, #0x0                   	// #0
  427b80:	mov	x13, #0x0                   	// #0
  427b84:	mov	x0, #0x0                   	// #0
  427b88:	cmp	w3, #0x64
  427b8c:	b.eq	427be4 <nftw@plt+0x25064>  // b.none
  427b90:	b.hi	427bf8 <nftw@plt+0x25078>  // b.pmore
  427b94:	cmp	w3, #0x4c
  427b98:	b.eq	427ce8 <nftw@plt+0x25168>  // b.none
  427b9c:	b.hi	427c28 <nftw@plt+0x250a8>  // b.pmore
  427ba0:	cmp	w3, #0x46
  427ba4:	b.eq	427c7c <nftw@plt+0x250fc>  // b.none
  427ba8:	b.ls	427c60 <nftw@plt+0x250e0>  // b.plast
  427bac:	sub	w3, w3, #0x49
  427bb0:	and	w3, w3, #0xff
  427bb4:	cmp	w3, #0x1
  427bb8:	b.hi	427c38 <nftw@plt+0x250b8>  // b.pmore
  427bbc:	mov	x5, x4
  427bc0:	add	x9, x9, #0x1
  427bc4:	mov	x3, x6
  427bc8:	sub	x4, x4, #0x1
  427bcc:	nop
  427bd0:	add	x6, x3, #0x1
  427bd4:	cbz	x5, 4280c4 <nftw@plt+0x25544>
  427bd8:	ldrb	w3, [x3, #1]
  427bdc:	cmp	w3, #0x64
  427be0:	b.ne	427b90 <nftw@plt+0x25010>  // b.any
  427be4:	mov	x5, x4
  427be8:	add	x13, x13, #0x1
  427bec:	mov	x3, x6
  427bf0:	sub	x4, x4, #0x1
  427bf4:	b	427bd0 <nftw@plt+0x25050>
  427bf8:	cmp	w3, #0x6c
  427bfc:	b.eq	427ce8 <nftw@plt+0x25168>  // b.none
  427c00:	b.ls	427c44 <nftw@plt+0x250c4>  // b.plast
  427c04:	cmp	w3, #0x71
  427c08:	b.eq	427cfc <nftw@plt+0x2517c>  // b.none
  427c0c:	cmp	w3, #0x77
  427c10:	b.ne	427c38 <nftw@plt+0x250b8>  // b.any
  427c14:	mov	x5, x4
  427c18:	add	x11, x11, #0x1
  427c1c:	mov	x3, x6
  427c20:	sub	x4, x4, #0x1
  427c24:	b	427bd0 <nftw@plt+0x25050>
  427c28:	cmp	w3, #0x51
  427c2c:	b.eq	427cfc <nftw@plt+0x2517c>  // b.none
  427c30:	cmp	w3, #0x57
  427c34:	b.eq	427c14 <nftw@plt+0x25094>  // b.none
  427c38:	mov	w0, #0x0                   	// #0
  427c3c:	ldp	x29, x30, [sp], #32
  427c40:	ret
  427c44:	cmp	w3, #0x66
  427c48:	b.eq	427c7c <nftw@plt+0x250fc>  // b.none
  427c4c:	sub	w3, w3, #0x69
  427c50:	and	w3, w3, #0xff
  427c54:	cmp	w3, #0x1
  427c58:	b.hi	427c38 <nftw@plt+0x250b8>  // b.pmore
  427c5c:	b	427bbc <nftw@plt+0x2503c>
  427c60:	cmp	w3, #0x44
  427c64:	b.ne	427c38 <nftw@plt+0x250b8>  // b.any
  427c68:	mov	x5, x4
  427c6c:	add	x13, x13, #0x1
  427c70:	mov	x3, x6
  427c74:	sub	x4, x4, #0x1
  427c78:	b	427bd0 <nftw@plt+0x25050>
  427c7c:	add	x5, x0, #0x1
  427c80:	cbnz	x4, 427d54 <nftw@plt+0x251d4>
  427c84:	add	x0, x15, x10
  427c88:	add	x3, x12, x16
  427c8c:	add	x3, x0, x3
  427c90:	add	x0, x5, x11
  427c94:	cmp	x14, #0xf0
  427c98:	add	x0, x3, x0
  427c9c:	add	x0, x0, x13
  427ca0:	ccmp	x9, #0x1, #0x2, ls  // ls = plast
  427ca4:	ccmp	x0, #0x1, #0x2, ls  // ls = plast
  427ca8:	mov	w0, #0x0                   	// #0
  427cac:	cset	w4, hi  // hi = pmore
  427cb0:	b.hi	427c3c <nftw@plt+0x250bc>  // b.pmore
  427cb4:	sub	x3, x14, #0x20
  427cb8:	tst	x3, #0xffffffffffffffdf
  427cbc:	cset	w3, ne  // ne = any
  427cc0:	cmp	x15, #0x0
  427cc4:	csel	w3, w3, wzr, ne  // ne = any
  427cc8:	cbz	w3, 42800c <nftw@plt+0x2548c>
  427ccc:	mov	w0, w4
  427cd0:	cmp	x14, #0x80
  427cd4:	b.ne	427c3c <nftw@plt+0x250bc>  // b.any
  427cd8:	cmp	x16, #0x0
  427cdc:	cset	w0, ne  // ne = any
  427ce0:	csel	w3, w3, w0, ne  // ne = any
  427ce4:	b	427ac4 <nftw@plt+0x24f44>
  427ce8:	mov	x5, x4
  427cec:	add	x12, x12, #0x1
  427cf0:	mov	x3, x6
  427cf4:	sub	x4, x4, #0x1
  427cf8:	b	427bd0 <nftw@plt+0x25050>
  427cfc:	mov	x5, x4
  427d00:	add	x10, x10, #0x1
  427d04:	mov	x3, x6
  427d08:	sub	x4, x4, #0x1
  427d0c:	b	427bd0 <nftw@plt+0x25050>
  427d10:	ldrb	w3, [x1]
  427d14:	and	w0, w3, #0xffffffdf
  427d18:	cmp	w0, #0x44
  427d1c:	and	w0, w0, #0xff
  427d20:	b.ne	427d88 <nftw@plt+0x25208>  // b.any
  427d24:	ldrb	w0, [x1, #1]
  427d28:	cmp	w0, #0x64
  427d2c:	b.eq	427fb4 <nftw@plt+0x25434>  // b.none
  427d30:	b.hi	427e94 <nftw@plt+0x25314>  // b.pmore
  427d34:	cmp	w0, #0x46
  427d38:	b.eq	427fc4 <nftw@plt+0x25444>  // b.none
  427d3c:	cmp	w0, #0x4c
  427d40:	b.ne	427e7c <nftw@plt+0x252fc>  // b.any
  427d44:	cmp	w3, #0x44
  427d48:	mov	w0, #0x4040                	// #16448
  427d4c:	csel	w0, wzr, w0, ne  // ne = any
  427d50:	b	427c3c <nftw@plt+0x250bc>
  427d54:	ldrb	w18, [x8, #1120]
  427d58:	sub	x17, x4, #0x1
  427d5c:	ldrb	w3, [x6, #1]
  427d60:	cbnz	w18, 427d78 <nftw@plt+0x251f8>
  427d64:	sub	w18, w3, #0x31
  427d68:	cmp	x14, #0x0
  427d6c:	and	w18, w18, #0xff
  427d70:	ccmp	w18, #0x8, #0x2, eq  // eq = none
  427d74:	b.ls	427f30 <nftw@plt+0x253b0>  // b.plast
  427d78:	add	x6, x6, #0x1
  427d7c:	mov	x4, x17
  427d80:	mov	x0, x5
  427d84:	b	427b88 <nftw@plt+0x25008>
  427d88:	ldrb	w7, [x8, #1163]
  427d8c:	mov	x4, #0x1                   	// #1
  427d90:	cbz	w7, 427b60 <nftw@plt+0x24fe0>
  427d94:	ldrb	w5, [x1, #1]
  427d98:	cmp	w5, #0x6b
  427d9c:	b.eq	427fe0 <nftw@plt+0x25460>  // b.none
  427da0:	mov	x4, #0x1                   	// #1
  427da4:	cmp	w5, #0x6b
  427da8:	b.hi	427e70 <nftw@plt+0x252f0>  // b.pmore
  427dac:	cmp	w5, #0x4b
  427db0:	b.eq	427ec4 <nftw@plt+0x25344>  // b.none
  427db4:	cmp	w5, #0x52
  427db8:	b.ne	427b58 <nftw@plt+0x24fd8>  // b.any
  427dbc:	mov	w10, #0x1010                	// #4112
  427dc0:	mov	w9, #0x1020                	// #4128
  427dc4:	mov	w8, #0x1040                	// #4160
  427dc8:	mov	w5, #0x20                  	// #32
  427dcc:	mov	w7, #0x40                  	// #64
  427dd0:	mov	w11, #0x1000                	// #4096
  427dd4:	movk	w10, #0x10, lsl #16
  427dd8:	movk	w9, #0x10, lsl #16
  427ddc:	movk	w8, #0x10, lsl #16
  427de0:	mov	w6, #0x100010              	// #1048592
  427de4:	movk	w5, #0x10, lsl #16
  427de8:	movk	w7, #0x10, lsl #16
  427dec:	mov	w0, #0x100000              	// #1048576
  427df0:	movk	w11, #0x10, lsl #16
  427df4:	cmp	x2, #0x1
  427df8:	b.eq	427c3c <nftw@plt+0x250bc>  // b.none
  427dfc:	ldrb	w3, [x1]
  427e00:	and	w0, w3, #0xffffffdf
  427e04:	cmp	w0, #0x55
  427e08:	b.ne	427e2c <nftw@plt+0x252ac>  // b.any
  427e0c:	cmp	x4, #0x1
  427e10:	b.eq	427f9c <nftw@plt+0x2541c>  // b.none
  427e14:	ldrb	w3, [x1, #1]
  427e18:	sub	x4, x2, #0x2
  427e1c:	mov	w6, w10
  427e20:	mov	w5, w9
  427e24:	mov	w7, w8
  427e28:	add	x1, x1, #0x1
  427e2c:	cmp	w3, #0x68
  427e30:	b.eq	427fd4 <nftw@plt+0x25454>  // b.none
  427e34:	b.hi	427f00 <nftw@plt+0x25380>  // b.pmore
  427e38:	cmp	w3, #0x48
  427e3c:	b.eq	427fd4 <nftw@plt+0x25454>  // b.none
  427e40:	cmp	w3, #0x4c
  427e44:	b.ne	427c38 <nftw@plt+0x250b8>  // b.any
  427e48:	mov	w0, w5
  427e4c:	cmp	x4, #0x1
  427e50:	b.eq	427c3c <nftw@plt+0x250bc>  // b.none
  427e54:	cmp	x4, #0x2
  427e58:	mov	w0, #0x0                   	// #0
  427e5c:	b.ne	427c3c <nftw@plt+0x250bc>  // b.any
  427e60:	ldrb	w0, [x1, #1]
  427e64:	cmp	w0, #0x4c
  427e68:	csel	w0, w7, wzr, eq  // eq = none
  427e6c:	b	427c3c <nftw@plt+0x250bc>
  427e70:	cmp	w5, #0x72
  427e74:	b.ne	427b58 <nftw@plt+0x24fd8>  // b.any
  427e78:	b	427dbc <nftw@plt+0x2523c>
  427e7c:	cmp	w0, #0x44
  427e80:	b.ne	427b44 <nftw@plt+0x24fc4>  // b.any
  427e84:	cmp	w3, #0x44
  427e88:	mov	w0, #0x4020                	// #16416
  427e8c:	csel	w0, wzr, w0, ne  // ne = any
  427e90:	b	427c3c <nftw@plt+0x250bc>
  427e94:	cmp	w0, #0x66
  427e98:	b.eq	427fa4 <nftw@plt+0x25424>  // b.none
  427e9c:	cmp	w0, #0x6c
  427ea0:	b.ne	427b44 <nftw@plt+0x24fc4>  // b.any
  427ea4:	cmp	w3, #0x44
  427ea8:	mov	w0, #0x4040                	// #16448
  427eac:	csel	w0, w0, wzr, ne  // ne = any
  427eb0:	b	427c3c <nftw@plt+0x250bc>
  427eb4:	sub	x4, x2, #0x1
  427eb8:	ldrb	w5, [x1, x4]
  427ebc:	cmp	w5, #0x6b
  427ec0:	b.ne	427da4 <nftw@plt+0x25224>  // b.any
  427ec4:	mov	w10, #0x1010                	// #4112
  427ec8:	mov	w9, #0x1020                	// #4128
  427ecc:	mov	w8, #0x1040                	// #4160
  427ed0:	mov	w6, #0x10                  	// #16
  427ed4:	mov	w7, #0x40                  	// #64
  427ed8:	mov	w11, #0x1000                	// #4096
  427edc:	movk	w10, #0x20, lsl #16
  427ee0:	movk	w9, #0x20, lsl #16
  427ee4:	movk	w8, #0x20, lsl #16
  427ee8:	movk	w6, #0x20, lsl #16
  427eec:	mov	w5, #0x200020              	// #2097184
  427ef0:	movk	w7, #0x20, lsl #16
  427ef4:	mov	w0, #0x200000              	// #2097152
  427ef8:	movk	w11, #0x20, lsl #16
  427efc:	b	427df4 <nftw@plt+0x25274>
  427f00:	cmp	w3, #0x6c
  427f04:	b.ne	427c38 <nftw@plt+0x250b8>  // b.any
  427f08:	mov	w0, w5
  427f0c:	cmp	x4, #0x1
  427f10:	b.eq	427c3c <nftw@plt+0x250bc>  // b.none
  427f14:	cmp	x4, #0x2
  427f18:	mov	w0, #0x0                   	// #0
  427f1c:	b.ne	427c3c <nftw@plt+0x250bc>  // b.any
  427f20:	ldrb	w0, [x1, #1]
  427f24:	cmp	w0, #0x6c
  427f28:	csel	w0, w7, wzr, eq  // eq = none
  427f2c:	b	427c3c <nftw@plt+0x250bc>
  427f30:	sub	w18, w3, #0x30
  427f34:	mov	x14, #0x0                   	// #0
  427f38:	str	x19, [sp, #16]
  427f3c:	nop
  427f40:	add	x14, x14, x14, lsl #2
  427f44:	sxtw	x18, w18
  427f48:	mov	x19, x4
  427f4c:	mov	x5, x6
  427f50:	add	x14, x18, x14, lsl #1
  427f54:	add	x6, x6, #0x1
  427f58:	cmp	x14, #0xef
  427f5c:	mov	x4, x17
  427f60:	cbz	x17, 428060 <nftw@plt+0x254e0>
  427f64:	ldrb	w3, [x6, #1]
  427f68:	sub	x17, x17, #0x1
  427f6c:	sub	w18, w3, #0x30
  427f70:	and	w30, w18, #0xff
  427f74:	ccmp	w30, #0x9, #0x2, ls  // ls = plast
  427f78:	b.ls	427f40 <nftw@plt+0x253c0>  // b.plast
  427f7c:	cmp	w3, #0x78
  427f80:	b.eq	42806c <nftw@plt+0x254ec>  // b.none
  427f84:	mov	x5, x4
  427f88:	sub	x4, x19, #0x2
  427f8c:	add	x16, x16, #0x1
  427f90:	mov	x3, x6
  427f94:	ldr	x19, [sp, #16]
  427f98:	b	427bd0 <nftw@plt+0x25050>
  427f9c:	mov	w0, w11
  427fa0:	b	427c3c <nftw@plt+0x250bc>
  427fa4:	cmp	w3, #0x44
  427fa8:	mov	w0, #0x4010                	// #16400
  427fac:	csel	w0, w0, wzr, ne  // ne = any
  427fb0:	b	427c3c <nftw@plt+0x250bc>
  427fb4:	cmp	w3, #0x44
  427fb8:	mov	w0, #0x4020                	// #16416
  427fbc:	csel	w0, w0, wzr, ne  // ne = any
  427fc0:	b	427c3c <nftw@plt+0x250bc>
  427fc4:	cmp	w3, #0x44
  427fc8:	mov	w0, #0x4010                	// #16400
  427fcc:	csel	w0, wzr, w0, ne  // ne = any
  427fd0:	b	427c3c <nftw@plt+0x250bc>
  427fd4:	cmp	x4, #0x1
  427fd8:	csel	w0, w6, wzr, eq  // eq = none
  427fdc:	b	427c3c <nftw@plt+0x250bc>
  427fe0:	cmp	w0, #0x55
  427fe4:	mov	w0, #0x1000                	// #4096
  427fe8:	movk	w0, #0x20, lsl #16
  427fec:	b.eq	427c3c <nftw@plt+0x250bc>  // b.none
  427ff0:	mov	w6, #0x10                  	// #16
  427ff4:	mov	w7, #0x40                  	// #64
  427ff8:	movk	w6, #0x20, lsl #16
  427ffc:	mov	w5, #0x200020              	// #2097184
  428000:	movk	w7, #0x20, lsl #16
  428004:	mov	x4, #0x1                   	// #1
  428008:	b	427e2c <nftw@plt+0x252ac>
  42800c:	cmp	x16, #0x0
  428010:	cset	w4, ne  // ne = any
  428014:	cmp	x14, #0x10
  428018:	csel	w3, w4, wzr, ne  // ne = any
  42801c:	cbz	w3, 4280cc <nftw@plt+0x2554c>
  428020:	tst	x14, #0x1f
  428024:	b.ne	427c3c <nftw@plt+0x250bc>  // b.any
  428028:	b	427ab4 <nftw@plt+0x24f34>
  42802c:	orr	x1, x11, x10
  428030:	mov	w0, #0x0                   	// #0
  428034:	cmp	x1, #0x0
  428038:	ccmp	w7, #0x0, #0x0, ne  // ne = any
  42803c:	b.eq	427c3c <nftw@plt+0x250bc>  // b.none
  428040:	mov	w0, #0x10                  	// #16
  428044:	mov	w8, #0x20                  	// #32
  428048:	mov	w7, #0x40                  	// #64
  42804c:	mov	w6, #0x10000               	// #65536
  428050:	mov	w2, #0x20000               	// #131072
  428054:	mov	w4, #0x8000                	// #32768
  428058:	mov	w1, #0x0                   	// #0
  42805c:	b	427b14 <nftw@plt+0x24f94>
  428060:	mov	x5, #0x0                   	// #0
  428064:	mov	x4, #0xffffffffffffffff    	// #-1
  428068:	b	427f8c <nftw@plt+0x2540c>
  42806c:	add	x3, x5, #0x2
  428070:	sub	x4, x19, #0x3
  428074:	sub	x5, x19, #0x2
  428078:	add	x15, x15, #0x1
  42807c:	ldr	x19, [sp, #16]
  428080:	b	427bd0 <nftw@plt+0x25050>
  428084:	cmp	x2, #0x1
  428088:	b.eq	427c3c <nftw@plt+0x250bc>  // b.none
  42808c:	cmp	x2, #0x2
  428090:	b.ne	427af0 <nftw@plt+0x24f70>  // b.any
  428094:	ldrb	w1, [x1, #1]
  428098:	mov	w2, #0x6c                  	// #108
  42809c:	cmp	w1, #0x66
  4280a0:	ccmp	w1, w2, #0x4, ne  // ne = any
  4280a4:	b.ne	427af0 <nftw@plt+0x24f70>  // b.any
  4280a8:	b	427c3c <nftw@plt+0x250bc>
  4280ac:	cmp	x15, #0x0
  4280b0:	orr	w0, w0, #0x800000
  4280b4:	csel	w0, w0, w4, ne  // ne = any
  4280b8:	b	427c3c <nftw@plt+0x250bc>
  4280bc:	mov	w0, w2
  4280c0:	b	427c3c <nftw@plt+0x250bc>
  4280c4:	mov	x5, x0
  4280c8:	b	427c84 <nftw@plt+0x25104>
  4280cc:	mov	w3, w4
  4280d0:	b	427ab4 <nftw@plt+0x24f34>
  4280d4:	nop
  4280d8:	ldp	x6, x5, [x0]
  4280dc:	sub	sp, sp, #0x30
  4280e0:	ldr	x4, [x0, #16]
  4280e4:	str	x4, [sp, #16]
  4280e8:	ldrb	w4, [x0, #16]
  4280ec:	negs	x3, x5
  4280f0:	neg	x2, x6
  4280f4:	csinv	x2, x2, x6, eq  // eq = none
  4280f8:	stp	x2, x3, [x0]
  4280fc:	cmp	x1, #0x40
  428100:	b.ls	428168 <nftw@plt+0x255e8>  // b.plast
  428104:	sub	x1, x1, #0x40
  428108:	mov	x7, #0xffffffffffffffff    	// #-1
  42810c:	cmp	x1, #0x40
  428110:	lsl	x1, x7, x1
  428114:	bic	x1, x2, x1
  428118:	csel	x2, x1, x2, cc  // cc = lo, ul, last
  42811c:	stp	x2, x3, [sp]
  428120:	cmp	x2, x6
  428124:	ccmp	x3, x5, #0x0, eq  // eq = none
  428128:	ldp	x6, x7, [sp]
  42812c:	stp	x6, x7, [x0]
  428130:	cset	w5, eq  // eq = none
  428134:	ldr	x1, [sp, #16]
  428138:	str	x1, [x0, #16]
  42813c:	eor	w1, w4, #0x1
  428140:	mov	w4, #0x0                   	// #0
  428144:	tst	w5, w1
  428148:	b.ne	428184 <nftw@plt+0x25604>  // b.any
  42814c:	strb	w4, [x0, #17]
  428150:	ldp	x2, x3, [x0]
  428154:	stp	x2, x3, [x8]
  428158:	ldr	x0, [x0, #16]
  42815c:	str	x0, [x8, #16]
  428160:	add	sp, sp, #0x30
  428164:	ret
  428168:	mov	x2, x3
  42816c:	mov	x7, #0xffffffffffffffff    	// #-1
  428170:	lsl	x3, x7, x1
  428174:	bic	x3, x2, x3
  428178:	csel	x3, x3, x2, ne  // ne = any
  42817c:	mov	x2, #0x0                   	// #0
  428180:	b	42811c <nftw@plt+0x2559c>
  428184:	orr	x2, x2, x3
  428188:	cmp	x2, #0x0
  42818c:	cset	w4, ne  // ne = any
  428190:	b	42814c <nftw@plt+0x255cc>
  428194:	nop
  428198:	stp	x29, x30, [sp, #-80]!
  42819c:	mov	x29, sp
  4281a0:	stp	x19, x20, [sp, #16]
  4281a4:	mov	x19, x0
  4281a8:	stp	x21, x22, [sp, #32]
  4281ac:	mov	x21, x8
  4281b0:	stp	x23, x24, [sp, #48]
  4281b4:	mov	w23, w1
  4281b8:	mov	w24, #0x0                   	// #0
  4281bc:	str	x25, [sp, #64]
  4281c0:	stp	xzr, xzr, [x8]
  4281c4:	ldrb	w1, [x0, #26]
  4281c8:	strh	wzr, [x8, #16]
  4281cc:	add	w1, w1, #0x1
  4281d0:	strb	w1, [x0, #26]
  4281d4:	bl	43e370 <nftw@plt+0x3b7f0>
  4281d8:	mov	x20, x0
  4281dc:	ldrb	w0, [x0, #4]
  4281e0:	cmp	w0, #0x14
  4281e4:	b.eq	428328 <nftw@plt+0x257a8>  // b.none
  4281e8:	cmp	w0, #0x3e
  4281ec:	b.eq	428258 <nftw@plt+0x256d8>  // b.none
  4281f0:	cmp	w0, #0x44
  4281f4:	mov	w25, #0x1                   	// #1
  4281f8:	b.eq	42825c <nftw@plt+0x256dc>  // b.none
  4281fc:	cmp	w0, #0x3
  428200:	b.eq	428340 <nftw@plt+0x257c0>  // b.none
  428204:	adrp	x2, 47b000 <_obstack_memory_used@@Base+0x19bb8>
  428208:	mov	x0, x19
  42820c:	add	x2, x2, #0xd98
  428210:	mov	w1, #0x3                   	// #3
  428214:	bl	427178 <nftw@plt+0x245f8>
  428218:	cbz	w24, 4282c8 <nftw@plt+0x25748>
  42821c:	ldr	x0, [x19, #448]
  428220:	ldurb	w0, [x0, #-20]
  428224:	cmp	w0, #0x16
  428228:	b.eq	4282c8 <nftw@plt+0x25748>  // b.none
  42822c:	mov	x0, x19
  428230:	bl	43e370 <nftw@plt+0x3b7f0>
  428234:	ldrb	w0, [x0, #4]
  428238:	cmp	w0, #0x15
  42823c:	b.eq	4282c8 <nftw@plt+0x25748>  // b.none
  428240:	mov	x0, x19
  428244:	adrp	x2, 47b000 <_obstack_memory_used@@Base+0x19bb8>
  428248:	mov	w1, #0x3                   	// #3
  42824c:	add	x2, x2, #0xdd0
  428250:	bl	427178 <nftw@plt+0x245f8>
  428254:	b	4282c8 <nftw@plt+0x25748>
  428258:	mov	w25, #0x0                   	// #0
  42825c:	ldr	w0, [x20, #8]
  428260:	sub	w0, w0, #0x1
  428264:	bl	461560 <_obstack_memory_used@@Base+0x118>
  428268:	ldr	x1, [x20, #16]
  42826c:	mov	x22, x0
  428270:	ldr	w2, [x20, #8]
  428274:	add	x1, x1, #0x1
  428278:	sub	w2, w2, #0x2
  42827c:	bl	402490 <memcpy@plt>
  428280:	ldr	w0, [x20, #8]
  428284:	sub	w0, w0, #0x2
  428288:	strb	wzr, [x22, w0, uxtw]
  42828c:	ldr	x20, [x20, #8]
  428290:	mov	w3, w23
  428294:	mov	w2, w25
  428298:	mov	x1, x22
  42829c:	mov	x0, x19
  4282a0:	bl	42e798 <nftw@plt+0x2bc18>
  4282a4:	tst	w0, #0xff
  4282a8:	b.eq	4282b4 <nftw@plt+0x25734>  // b.none
  4282ac:	mov	x0, #0x1                   	// #1
  4282b0:	str	x0, [x21, #8]
  4282b4:	mov	x0, x22
  4282b8:	bl	402910 <free@plt>
  4282bc:	cbnz	w24, 4282ec <nftw@plt+0x2576c>
  4282c0:	cbz	x20, 4282c8 <nftw@plt+0x25748>
  4282c4:	str	x20, [x19, #432]
  4282c8:	ldrb	w0, [x19, #26]
  4282cc:	sub	w0, w0, #0x1
  4282d0:	strb	w0, [x19, #26]
  4282d4:	ldp	x19, x20, [sp, #16]
  4282d8:	ldp	x21, x22, [sp, #32]
  4282dc:	ldp	x23, x24, [sp, #48]
  4282e0:	ldr	x25, [sp, #64]
  4282e4:	ldp	x29, x30, [sp], #80
  4282e8:	ret
  4282ec:	ldr	x0, [x19, #448]
  4282f0:	ldurb	w0, [x0, #-20]
  4282f4:	cmp	w0, #0x16
  4282f8:	b.eq	4282c0 <nftw@plt+0x25740>  // b.none
  4282fc:	mov	x0, x19
  428300:	bl	43e370 <nftw@plt+0x3b7f0>
  428304:	ldrb	w0, [x0, #4]
  428308:	cmp	w0, #0x15
  42830c:	b.eq	4282c0 <nftw@plt+0x25740>  // b.none
  428310:	mov	x0, x19
  428314:	adrp	x2, 47b000 <_obstack_memory_used@@Base+0x19bb8>
  428318:	mov	w1, #0x3                   	// #3
  42831c:	add	x2, x2, #0xdd0
  428320:	bl	427178 <nftw@plt+0x245f8>
  428324:	b	4282c0 <nftw@plt+0x25740>
  428328:	mov	x0, x19
  42832c:	mov	w24, #0x1                   	// #1
  428330:	bl	43e370 <nftw@plt+0x3b7f0>
  428334:	mov	x20, x0
  428338:	ldrb	w0, [x0, #4]
  42833c:	b	4281e8 <nftw@plt+0x25668>
  428340:	mov	x0, x19
  428344:	mov	x20, #0x0                   	// #0
  428348:	bl	4270a8 <nftw@plt+0x24528>
  42834c:	mov	w25, #0x1                   	// #1
  428350:	mov	x22, x0
  428354:	cbnz	x0, 428290 <nftw@plt+0x25710>
  428358:	cbz	w24, 4282c8 <nftw@plt+0x25748>
  42835c:	b	42821c <nftw@plt+0x2569c>
  428360:	ldrb	w3, [x0, #16]
  428364:	sub	sp, sp, #0x30
  428368:	cmp	x1, #0x40
  42836c:	ldp	x9, x6, [x0]
  428370:	b.hi	428458 <nftw@plt+0x258d8>  // b.pmore
  428374:	sub	w4, w1, #0x1
  428378:	cmp	x1, x2
  42837c:	lsr	x4, x6, x4
  428380:	mvn	x4, x4
  428384:	and	w4, w4, #0x1
  428388:	orr	w3, w3, w4
  42838c:	eor	w3, w3, #0x1
  428390:	and	x3, x3, #0xff
  428394:	neg	x3, x3
  428398:	b.hi	4283ec <nftw@plt+0x2586c>  // b.pmore
  42839c:	ldr	x2, [x0, #16]
  4283a0:	stp	x3, x3, [x0]
  4283a4:	str	x2, [sp, #16]
  4283a8:	mov	x2, #0xffffffffffffffff    	// #-1
  4283ac:	cmp	x1, #0x40
  4283b0:	lsl	x1, x2, x1
  4283b4:	bic	x1, x3, x1
  4283b8:	csel	x3, x1, x3, ne  // ne = any
  4283bc:	mov	x4, #0x0                   	// #0
  4283c0:	ldr	x1, [sp, #16]
  4283c4:	stp	x4, x3, [sp]
  4283c8:	str	x1, [x0, #16]
  4283cc:	strb	wzr, [x0, #17]
  4283d0:	ldp	x2, x3, [sp]
  4283d4:	stp	x2, x3, [x0]
  4283d8:	ldr	x0, [x0, #16]
  4283dc:	stp	x2, x3, [x8]
  4283e0:	str	x0, [x8, #16]
  4283e4:	add	sp, sp, #0x30
  4283e8:	ret
  4283ec:	cmp	x1, #0x3f
  4283f0:	b.hi	4284c0 <nftw@plt+0x25940>  // b.pmore
  4283f4:	mov	x5, x3
  4283f8:	mov	x4, x3
  4283fc:	lsl	x7, x3, x1
  428400:	orr	x3, x7, x6
  428404:	cbz	x2, 428428 <nftw@plt+0x258a8>
  428408:	mov	w6, #0x40                  	// #64
  42840c:	sub	w6, w6, w2
  428410:	lsr	x3, x3, x2
  428414:	lsl	x5, x5, x6
  428418:	lsl	x6, x4, x6
  42841c:	orr	x3, x3, x6
  428420:	lsr	x4, x4, x2
  428424:	orr	x4, x4, x5
  428428:	ldr	x2, [x0, #16]
  42842c:	stp	x4, x3, [x0]
  428430:	cmp	x1, #0x40
  428434:	str	x2, [sp, #16]
  428438:	b.ls	4283a8 <nftw@plt+0x25828>  // b.plast
  42843c:	sub	x7, x1, #0x40
  428440:	mov	x1, #0xffffffffffffffff    	// #-1
  428444:	cmp	x7, #0x40
  428448:	lsl	x1, x1, x7
  42844c:	bic	x1, x4, x1
  428450:	csel	x4, x1, x4, cc  // cc = lo, ul, last
  428454:	b	4283c0 <nftw@plt+0x25840>
  428458:	sub	w4, w1, #0x41
  42845c:	cmp	x1, x2
  428460:	sub	x7, x1, #0x40
  428464:	lsr	x4, x9, x4
  428468:	mvn	x4, x4
  42846c:	and	w4, w4, #0x1
  428470:	orr	w3, w3, w4
  428474:	eor	w3, w3, #0x1
  428478:	and	x3, x3, #0xff
  42847c:	neg	x5, x3
  428480:	b.ls	4284a4 <nftw@plt+0x25924>  // b.plast
  428484:	cmp	x1, #0x7f
  428488:	mov	x3, x9
  42848c:	b.ls	4284bc <nftw@plt+0x2593c>  // b.plast
  428490:	cmp	x2, #0x3f
  428494:	b.ls	4284d4 <nftw@plt+0x25954>  // b.plast
  428498:	sub	x2, x2, #0x40
  42849c:	mov	x4, x5
  4284a0:	b	428404 <nftw@plt+0x25884>
  4284a4:	ldr	x1, [x0, #16]
  4284a8:	mov	x3, x5
  4284ac:	mov	x4, x5
  4284b0:	stp	x5, x5, [x0]
  4284b4:	str	x1, [sp, #16]
  4284b8:	b	428440 <nftw@plt+0x258c0>
  4284bc:	mov	x3, x5
  4284c0:	sub	w4, w1, #0x40
  4284c4:	mov	x5, x3
  4284c8:	lsl	x3, x3, x4
  4284cc:	orr	x3, x3, x9
  4284d0:	b	428490 <nftw@plt+0x25910>
  4284d4:	mov	x4, x3
  4284d8:	mov	x3, x6
  4284dc:	b	428404 <nftw@plt+0x25884>
  4284e0:	ldrb	w14, [x0, #16]
  4284e4:	mov	x10, x0
  4284e8:	cmp	x2, x1
  4284ec:	mov	x12, x8
  4284f0:	ldp	x15, x18, [x0]
  4284f4:	b.cc	428534 <nftw@plt+0x259b4>  // b.lo, b.ul, b.last
  4284f8:	mov	w0, #0x0                   	// #0
  4284fc:	cbnz	w14, 42850c <nftw@plt+0x2598c>
  428500:	orr	x15, x18, x15
  428504:	cmp	x15, #0x0
  428508:	cset	w0, ne  // ne = any
  42850c:	mov	x13, #0x0                   	// #0
  428510:	mov	x11, #0x0                   	// #0
  428514:	stp	x11, x13, [x10]
  428518:	strb	w14, [x10, #16]
  42851c:	strb	w0, [x10, #17]
  428520:	ldp	x0, x1, [x10]
  428524:	stp	x0, x1, [x12]
  428528:	ldr	x0, [x10, #16]
  42852c:	str	x0, [x12, #16]
  428530:	ret
  428534:	stp	x29, x30, [sp, #-96]!
  428538:	cmp	x2, #0x3f
  42853c:	mov	x29, sp
  428540:	b.ls	4285d8 <nftw@plt+0x25a58>  // b.plast
  428544:	sub	x0, x2, #0x40
  428548:	mov	x11, x18
  42854c:	mov	x13, #0x0                   	// #0
  428550:	cbz	x0, 428568 <nftw@plt+0x259e8>
  428554:	neg	w3, w0
  428558:	lsl	x11, x11, x0
  42855c:	lsr	x3, x13, x3
  428560:	orr	x11, x3, x11
  428564:	lsl	x13, x13, x0
  428568:	ldr	x0, [x10, #16]
  42856c:	stp	x11, x13, [x10]
  428570:	cmp	x1, #0x40
  428574:	str	x0, [sp, #64]
  428578:	b.ls	4285e8 <nftw@plt+0x25a68>  // b.plast
  42857c:	sub	x0, x1, #0x40
  428580:	mov	x3, #0xffffffffffffffff    	// #-1
  428584:	cmp	x0, #0x40
  428588:	lsl	x0, x3, x0
  42858c:	bic	x0, x11, x0
  428590:	csel	x11, x0, x11, cc  // cc = lo, ul, last
  428594:	stp	x11, x13, [sp, #48]
  428598:	mov	w0, #0x0                   	// #0
  42859c:	ldp	x4, x5, [sp, #48]
  4285a0:	stp	x4, x5, [x10]
  4285a4:	ldr	x3, [sp, #64]
  4285a8:	str	x3, [x10, #16]
  4285ac:	stp	x4, x5, [sp, #72]
  4285b0:	cbz	w14, 42861c <nftw@plt+0x25a9c>
  4285b4:	stp	x11, x13, [x10]
  4285b8:	strb	w14, [x10, #16]
  4285bc:	strb	w0, [x10, #17]
  4285c0:	ldp	x0, x1, [x10]
  4285c4:	stp	x0, x1, [x12]
  4285c8:	ldr	x0, [x10, #16]
  4285cc:	str	x0, [x12, #16]
  4285d0:	ldp	x29, x30, [sp], #96
  4285d4:	ret
  4285d8:	mov	x13, x18
  4285dc:	mov	x11, x15
  4285e0:	mov	x0, x2
  4285e4:	b	428550 <nftw@plt+0x259d0>
  4285e8:	mov	x0, #0xffffffffffffffff    	// #-1
  4285ec:	mov	x11, #0x0                   	// #0
  4285f0:	lsl	x0, x0, x1
  4285f4:	bic	x0, x13, x0
  4285f8:	csel	x13, x0, x13, ne  // ne = any
  4285fc:	stp	x11, x13, [sp, #48]
  428600:	mov	w0, #0x0                   	// #0
  428604:	ldp	x4, x5, [sp, #48]
  428608:	stp	x4, x5, [x10]
  42860c:	ldr	x3, [sp, #64]
  428610:	str	x3, [x10, #16]
  428614:	stp	x4, x5, [sp, #72]
  428618:	cbnz	w14, 4285b4 <nftw@plt+0x25a34>
  42861c:	add	x0, sp, #0x10
  428620:	add	x8, sp, #0x48
  428624:	stp	x4, x5, [sp, #16]
  428628:	str	x3, [sp, #32]
  42862c:	bl	428360 <nftw@plt+0x257e0>
  428630:	ldr	x1, [sp, #80]
  428634:	mov	w0, #0x1                   	// #1
  428638:	cmp	x1, x18
  42863c:	b.ne	4285b4 <nftw@plt+0x25a34>  // b.any
  428640:	ldr	x0, [sp, #72]
  428644:	cmp	x0, x15
  428648:	cset	w0, ne  // ne = any
  42864c:	b	4285b4 <nftw@plt+0x25a34>
  428650:	stp	x29, x30, [sp, #-32]!
  428654:	cmp	x2, #0x2
  428658:	mov	x8, x0
  42865c:	mov	x29, sp
  428660:	b.eq	42889c <nftw@plt+0x25d1c>  // b.none
  428664:	ldrb	w7, [x0, #1163]
  428668:	cbz	w7, 428730 <nftw@plt+0x25bb0>
  42866c:	cbnz	x2, 428964 <nftw@plt+0x25de4>
  428670:	mov	x14, #0x0                   	// #0
  428674:	mov	x16, #0x0                   	// #0
  428678:	mov	x17, #0x0                   	// #0
  42867c:	mov	x9, #0x0                   	// #0
  428680:	mov	x11, #0x0                   	// #0
  428684:	mov	x10, #0x0                   	// #0
  428688:	mov	x13, #0x0                   	// #0
  42868c:	mov	x12, #0x0                   	// #0
  428690:	mov	w3, #0x0                   	// #0
  428694:	cmp	x14, #0x60
  428698:	mov	w0, #0x0                   	// #0
  42869c:	ccmp	w3, #0x0, #0x4, eq  // eq = none
  4286a0:	b.ne	4287e8 <nftw@plt+0x25c68>  // b.any
  4286a4:	cbz	x9, 428bfc <nftw@plt+0x2607c>
  4286a8:	mov	w0, #0x0                   	// #0
  4286ac:	cbz	w7, 4287e8 <nftw@plt+0x25c68>
  4286b0:	ldrb	w4, [x8, #1120]
  4286b4:	cbz	w4, 4286d0 <nftw@plt+0x25b50>
  4286b8:	ldr	w4, [x8, #1116]
  4286bc:	cmp	w4, #0xe
  4286c0:	b.le	4286d0 <nftw@plt+0x25b50>
  4286c4:	ldrb	w4, [x1]
  4286c8:	cmp	w4, #0x69
  4286cc:	b.eq	428c50 <nftw@plt+0x260d0>  // b.none
  4286d0:	mov	w7, #0x2000                	// #8192
  4286d4:	mov	w5, #0x2000                	// #8192
  4286d8:	mov	w0, #0x2010                	// #8208
  4286dc:	mov	w2, #0x2020                	// #8224
  4286e0:	mov	w4, #0x2040                	// #8256
  4286e4:	movk	w7, #0x1, lsl #16
  4286e8:	movk	w5, #0x2, lsl #16
  4286ec:	mov	w6, #0xa000                	// #40960
  4286f0:	mov	w1, #0x2000                	// #8192
  4286f4:	cbnz	x16, 4287e8 <nftw@plt+0x25c68>
  4286f8:	mov	w0, w2
  4286fc:	cbnz	x12, 4287e8 <nftw@plt+0x25c68>
  428700:	mov	w0, w4
  428704:	cbnz	x13, 4287e8 <nftw@plt+0x25c68>
  428708:	mov	w0, w7
  42870c:	cbnz	x10, 4287e8 <nftw@plt+0x25c68>
  428710:	cbnz	x11, 428c78 <nftw@plt+0x260f8>
  428714:	orr	w0, w1, w14, lsl #24
  428718:	cbz	w3, 428c80 <nftw@plt+0x26100>
  42871c:	orr	w0, w0, #0x400000
  428720:	b	4287e8 <nftw@plt+0x25c68>
  428724:	ldrb	w7, [x8, #1163]
  428728:	cbnz	w7, 428964 <nftw@plt+0x25de4>
  42872c:	nop
  428730:	sub	x4, x2, #0x1
  428734:	mov	w7, #0x0                   	// #0
  428738:	cbz	x2, 428670 <nftw@plt+0x25af0>
  42873c:	str	x19, [sp, #16]
  428740:	ldrb	w3, [x1]
  428744:	mov	x5, x1
  428748:	mov	x9, #0x0                   	// #0
  42874c:	mov	x11, #0x0                   	// #0
  428750:	mov	x10, #0x0                   	// #0
  428754:	mov	x13, #0x0                   	// #0
  428758:	mov	x12, #0x0                   	// #0
  42875c:	mov	x18, #0x0                   	// #0
  428760:	mov	x17, #0x0                   	// #0
  428764:	mov	x14, #0x0                   	// #0
  428768:	mov	x15, #0x0                   	// #0
  42876c:	nop
  428770:	cmp	w3, #0x64
  428774:	b.eq	428820 <nftw@plt+0x25ca0>  // b.none
  428778:	b.hi	4287f0 <nftw@plt+0x25c70>  // b.pmore
  42877c:	cmp	w3, #0x4c
  428780:	b.eq	428840 <nftw@plt+0x25cc0>  // b.none
  428784:	b.hi	42882c <nftw@plt+0x25cac>  // b.pmore
  428788:	cmp	w3, #0x46
  42878c:	b.eq	428858 <nftw@plt+0x25cd8>  // b.none
  428790:	b.ls	428818 <nftw@plt+0x25c98>  // b.plast
  428794:	sub	w3, w3, #0x49
  428798:	and	w3, w3, #0xff
  42879c:	cmp	w3, #0x1
  4287a0:	b.hi	4287e0 <nftw@plt+0x25c60>  // b.pmore
  4287a4:	add	x9, x9, #0x1
  4287a8:	sub	x6, x4, #0x1
  4287ac:	nop
  4287b0:	add	x0, x5, #0x1
  4287b4:	cbz	x4, 428c90 <nftw@plt+0x26110>
  4287b8:	ldrb	w3, [x5, #1]
  4287bc:	mov	x4, x6
  4287c0:	mov	x5, x0
  4287c4:	b	428770 <nftw@plt+0x25bf0>
  4287c8:	cmp	w3, #0x66
  4287cc:	b.eq	428858 <nftw@plt+0x25cd8>  // b.none
  4287d0:	sub	w3, w3, #0x69
  4287d4:	and	w3, w3, #0xff
  4287d8:	cmp	w3, #0x1
  4287dc:	b.ls	4287a4 <nftw@plt+0x25c24>  // b.plast
  4287e0:	ldr	x19, [sp, #16]
  4287e4:	mov	w0, #0x0                   	// #0
  4287e8:	ldp	x29, x30, [sp], #32
  4287ec:	ret
  4287f0:	cmp	w3, #0x6c
  4287f4:	b.eq	428840 <nftw@plt+0x25cc0>  // b.none
  4287f8:	b.ls	4287c8 <nftw@plt+0x25c48>  // b.plast
  4287fc:	cmp	w3, #0x71
  428800:	b.eq	42884c <nftw@plt+0x25ccc>  // b.none
  428804:	cmp	w3, #0x77
  428808:	b.ne	4287e0 <nftw@plt+0x25c60>  // b.any
  42880c:	add	x10, x10, #0x1
  428810:	sub	x6, x4, #0x1
  428814:	b	4287b0 <nftw@plt+0x25c30>
  428818:	cmp	w3, #0x44
  42881c:	b.ne	4287e0 <nftw@plt+0x25c60>  // b.any
  428820:	add	x12, x12, #0x1
  428824:	sub	x6, x4, #0x1
  428828:	b	4287b0 <nftw@plt+0x25c30>
  42882c:	cmp	w3, #0x51
  428830:	b.eq	42884c <nftw@plt+0x25ccc>  // b.none
  428834:	cmp	w3, #0x57
  428838:	b.eq	42880c <nftw@plt+0x25c8c>  // b.none
  42883c:	b	4287e0 <nftw@plt+0x25c60>
  428840:	add	x13, x13, #0x1
  428844:	sub	x6, x4, #0x1
  428848:	b	4287b0 <nftw@plt+0x25c30>
  42884c:	add	x11, x11, #0x1
  428850:	sub	x6, x4, #0x1
  428854:	b	4287b0 <nftw@plt+0x25c30>
  428858:	add	x16, x15, #0x1
  42885c:	cbnz	x4, 4288e0 <nftw@plt+0x25d60>
  428860:	add	x0, x13, x10
  428864:	add	x3, x18, x12
  428868:	add	x3, x0, x3
  42886c:	add	x0, x11, x17
  428870:	cmp	x14, #0xf0
  428874:	add	x0, x3, x0
  428878:	add	x0, x0, x16
  42887c:	ccmp	x9, #0x1, #0x2, ls  // ls = plast
  428880:	ccmp	x0, #0x1, #0x2, ls  // ls = plast
  428884:	mov	w0, #0x0                   	// #0
  428888:	cset	w4, hi  // hi = pmore
  42888c:	b.ls	428b30 <nftw@plt+0x25fb0>  // b.plast
  428890:	ldr	x19, [sp, #16]
  428894:	ldp	x29, x30, [sp], #32
  428898:	ret
  42889c:	ldrb	w3, [x1]
  4288a0:	and	w0, w3, #0xffffffdf
  4288a4:	cmp	w0, #0x44
  4288a8:	and	w0, w0, #0xff
  4288ac:	b.ne	428918 <nftw@plt+0x25d98>  // b.any
  4288b0:	ldrb	w0, [x1, #1]
  4288b4:	cmp	w0, #0x64
  4288b8:	b.eq	428b90 <nftw@plt+0x26010>  // b.none
  4288bc:	b.hi	42892c <nftw@plt+0x25dac>  // b.pmore
  4288c0:	cmp	w0, #0x46
  4288c4:	b.eq	428b70 <nftw@plt+0x25ff0>  // b.none
  4288c8:	cmp	w0, #0x4c
  4288cc:	b.ne	42894c <nftw@plt+0x25dcc>  // b.any
  4288d0:	cmp	w3, #0x44
  4288d4:	mov	w0, #0x4040                	// #16448
  4288d8:	csel	w0, wzr, w0, ne  // ne = any
  4288dc:	b	4287e8 <nftw@plt+0x25c68>
  4288e0:	ldrb	w30, [x8, #1120]
  4288e4:	sub	x0, x4, #0x1
  4288e8:	ldrb	w3, [x5, #1]
  4288ec:	mov	x6, x0
  4288f0:	cbnz	w30, 428908 <nftw@plt+0x25d88>
  4288f4:	sub	w30, w3, #0x31
  4288f8:	cmp	x14, #0x0
  4288fc:	and	w30, w30, #0xff
  428900:	ccmp	w30, #0x8, #0x2, eq  // eq = none
  428904:	b.ls	428acc <nftw@plt+0x25f4c>  // b.plast
  428908:	add	x5, x5, #0x1
  42890c:	mov	x15, x16
  428910:	mov	x4, x6
  428914:	b	428770 <nftw@plt+0x25bf0>
  428918:	ldrb	w7, [x8, #1163]
  42891c:	cbnz	w7, 428ab8 <nftw@plt+0x25f38>
  428920:	mov	x4, #0x1                   	// #1
  428924:	str	x19, [sp, #16]
  428928:	b	428744 <nftw@plt+0x25bc4>
  42892c:	cmp	w0, #0x66
  428930:	b.eq	428b80 <nftw@plt+0x26000>  // b.none
  428934:	cmp	w0, #0x6c
  428938:	b.ne	428724 <nftw@plt+0x25ba4>  // b.any
  42893c:	cmp	w3, #0x44
  428940:	mov	w0, #0x4040                	// #16448
  428944:	csel	w0, w0, wzr, ne  // ne = any
  428948:	b	4287e8 <nftw@plt+0x25c68>
  42894c:	cmp	w0, #0x44
  428950:	b.ne	428724 <nftw@plt+0x25ba4>  // b.any
  428954:	cmp	w3, #0x44
  428958:	mov	w0, #0x4020                	// #16416
  42895c:	csel	w0, wzr, w0, ne  // ne = any
  428960:	b	4287e8 <nftw@plt+0x25c68>
  428964:	sub	x4, x2, #0x1
  428968:	ldrb	w5, [x1, x4]
  42896c:	cmp	w5, #0x6b
  428970:	b.eq	428a7c <nftw@plt+0x25efc>  // b.none
  428974:	cmp	w5, #0x6b
  428978:	b.hi	428a40 <nftw@plt+0x25ec0>  // b.pmore
  42897c:	cmp	w5, #0x4b
  428980:	b.eq	428a7c <nftw@plt+0x25efc>  // b.none
  428984:	cmp	w5, #0x52
  428988:	b.ne	428738 <nftw@plt+0x25bb8>  // b.any
  42898c:	mov	w10, #0x1040                	// #4160
  428990:	mov	w9, #0x1020                	// #4128
  428994:	mov	w8, #0x1010                	// #4112
  428998:	mov	w7, #0x40                  	// #64
  42899c:	mov	w5, #0x20                  	// #32
  4289a0:	mov	w11, #0x1000                	// #4096
  4289a4:	movk	w10, #0x10, lsl #16
  4289a8:	movk	w9, #0x10, lsl #16
  4289ac:	movk	w8, #0x10, lsl #16
  4289b0:	movk	w7, #0x10, lsl #16
  4289b4:	movk	w5, #0x10, lsl #16
  4289b8:	mov	w6, #0x100010              	// #1048592
  4289bc:	movk	w11, #0x10, lsl #16
  4289c0:	mov	w0, #0x100000              	// #1048576
  4289c4:	cmp	x2, #0x1
  4289c8:	b.eq	4287e8 <nftw@plt+0x25c68>  // b.none
  4289cc:	ldrb	w3, [x1]
  4289d0:	and	w0, w3, #0xffffffdf
  4289d4:	cmp	w0, #0x55
  4289d8:	b.ne	4289fc <nftw@plt+0x25e7c>  // b.any
  4289dc:	cmp	x4, #0x1
  4289e0:	b.eq	428b28 <nftw@plt+0x25fa8>  // b.none
  4289e4:	ldrb	w3, [x1, #1]
  4289e8:	sub	x4, x2, #0x2
  4289ec:	mov	w7, w10
  4289f0:	mov	w5, w9
  4289f4:	mov	w6, w8
  4289f8:	add	x1, x1, #0x1
  4289fc:	cmp	w3, #0x68
  428a00:	b.eq	428ba0 <nftw@plt+0x26020>  // b.none
  428a04:	b.hi	428a4c <nftw@plt+0x25ecc>  // b.pmore
  428a08:	cmp	w3, #0x48
  428a0c:	b.eq	428ba0 <nftw@plt+0x26020>  // b.none
  428a10:	cmp	w3, #0x4c
  428a14:	b.ne	428b68 <nftw@plt+0x25fe8>  // b.any
  428a18:	mov	w0, w5
  428a1c:	cmp	x4, #0x1
  428a20:	b.eq	4287e8 <nftw@plt+0x25c68>  // b.none
  428a24:	cmp	x4, #0x2
  428a28:	mov	w0, #0x0                   	// #0
  428a2c:	b.ne	4287e8 <nftw@plt+0x25c68>  // b.any
  428a30:	ldrb	w0, [x1, #1]
  428a34:	cmp	w0, #0x4c
  428a38:	csel	w0, w7, wzr, eq  // eq = none
  428a3c:	b	4287e8 <nftw@plt+0x25c68>
  428a40:	cmp	w5, #0x72
  428a44:	b.ne	428738 <nftw@plt+0x25bb8>  // b.any
  428a48:	b	42898c <nftw@plt+0x25e0c>
  428a4c:	cmp	w3, #0x6c
  428a50:	b.ne	428b68 <nftw@plt+0x25fe8>  // b.any
  428a54:	mov	w0, w5
  428a58:	cmp	x4, #0x1
  428a5c:	b.eq	4287e8 <nftw@plt+0x25c68>  // b.none
  428a60:	cmp	x4, #0x2
  428a64:	mov	w0, #0x0                   	// #0
  428a68:	b.ne	4287e8 <nftw@plt+0x25c68>  // b.any
  428a6c:	ldrb	w0, [x1, #1]
  428a70:	cmp	w0, #0x6c
  428a74:	csel	w0, w7, wzr, eq  // eq = none
  428a78:	b	4287e8 <nftw@plt+0x25c68>
  428a7c:	mov	w10, #0x1040                	// #4160
  428a80:	mov	w9, #0x1020                	// #4128
  428a84:	mov	w8, #0x1010                	// #4112
  428a88:	mov	w7, #0x40                  	// #64
  428a8c:	mov	w6, #0x10                  	// #16
  428a90:	mov	w11, #0x1000                	// #4096
  428a94:	movk	w10, #0x20, lsl #16
  428a98:	movk	w9, #0x20, lsl #16
  428a9c:	movk	w8, #0x20, lsl #16
  428aa0:	movk	w7, #0x20, lsl #16
  428aa4:	mov	w5, #0x200020              	// #2097184
  428aa8:	movk	w6, #0x20, lsl #16
  428aac:	movk	w11, #0x20, lsl #16
  428ab0:	mov	w0, #0x200000              	// #2097152
  428ab4:	b	4289c4 <nftw@plt+0x25e44>
  428ab8:	ldrb	w5, [x1, #1]
  428abc:	cmp	w5, #0x6b
  428ac0:	b.eq	428bac <nftw@plt+0x2602c>  // b.none
  428ac4:	mov	x4, #0x1                   	// #1
  428ac8:	b	428974 <nftw@plt+0x25df4>
  428acc:	sub	w16, w3, #0x30
  428ad0:	mov	x14, #0x0                   	// #0
  428ad4:	nop
  428ad8:	add	x14, x14, x14, lsl #2
  428adc:	sxtw	x16, w16
  428ae0:	mov	x6, x4
  428ae4:	mov	x19, x5
  428ae8:	add	x14, x16, x14, lsl #1
  428aec:	add	x5, x5, #0x1
  428af0:	cmp	x14, #0xef
  428af4:	mov	x4, x0
  428af8:	cbz	x0, 428c30 <nftw@plt+0x260b0>
  428afc:	ldrb	w3, [x5, #1]
  428b00:	sub	x0, x0, #0x1
  428b04:	sub	w16, w3, #0x30
  428b08:	and	w30, w16, #0xff
  428b0c:	ccmp	w30, #0x9, #0x2, ls  // ls = plast
  428b10:	b.ls	428ad8 <nftw@plt+0x25f58>  // b.plast
  428b14:	cmp	w3, #0x78
  428b18:	b.eq	428c3c <nftw@plt+0x260bc>  // b.none
  428b1c:	sub	x6, x6, #0x2
  428b20:	add	x18, x18, #0x1
  428b24:	b	4287b0 <nftw@plt+0x25c30>
  428b28:	mov	w0, w11
  428b2c:	b	4287e8 <nftw@plt+0x25c68>
  428b30:	sub	x3, x14, #0x20
  428b34:	tst	x3, #0xffffffffffffffdf
  428b38:	cset	w3, ne  // ne = any
  428b3c:	cmp	x17, #0x0
  428b40:	csel	w3, w3, wzr, ne  // ne = any
  428b44:	cbz	w3, 428bd8 <nftw@plt+0x26058>
  428b48:	mov	w0, w4
  428b4c:	cmp	x14, #0x80
  428b50:	b.ne	428890 <nftw@plt+0x25d10>  // b.any
  428b54:	cmp	x18, #0x0
  428b58:	cset	w0, ne  // ne = any
  428b5c:	csel	w3, w3, w0, ne  // ne = any
  428b60:	ldr	x19, [sp, #16]
  428b64:	b	4286a4 <nftw@plt+0x25b24>
  428b68:	mov	w0, #0x0                   	// #0
  428b6c:	b	4287e8 <nftw@plt+0x25c68>
  428b70:	cmp	w3, #0x44
  428b74:	mov	w0, #0x4010                	// #16400
  428b78:	csel	w0, wzr, w0, ne  // ne = any
  428b7c:	b	4287e8 <nftw@plt+0x25c68>
  428b80:	cmp	w3, #0x44
  428b84:	mov	w0, #0x4010                	// #16400
  428b88:	csel	w0, w0, wzr, ne  // ne = any
  428b8c:	b	4287e8 <nftw@plt+0x25c68>
  428b90:	cmp	w3, #0x44
  428b94:	mov	w0, #0x4020                	// #16416
  428b98:	csel	w0, w0, wzr, ne  // ne = any
  428b9c:	b	4287e8 <nftw@plt+0x25c68>
  428ba0:	cmp	x4, #0x1
  428ba4:	csel	w0, w6, wzr, eq  // eq = none
  428ba8:	b	4287e8 <nftw@plt+0x25c68>
  428bac:	cmp	w0, #0x55
  428bb0:	mov	w0, #0x1000                	// #4096
  428bb4:	movk	w0, #0x20, lsl #16
  428bb8:	b.eq	4287e8 <nftw@plt+0x25c68>  // b.none
  428bbc:	mov	w7, #0x40                  	// #64
  428bc0:	mov	w6, #0x10                  	// #16
  428bc4:	movk	w7, #0x20, lsl #16
  428bc8:	mov	w5, #0x200020              	// #2097184
  428bcc:	movk	w6, #0x20, lsl #16
  428bd0:	mov	x4, #0x1                   	// #1
  428bd4:	b	4289fc <nftw@plt+0x25e7c>
  428bd8:	cmp	x18, #0x0
  428bdc:	cset	w4, ne  // ne = any
  428be0:	cmp	x14, #0x10
  428be4:	csel	w3, w4, wzr, ne  // ne = any
  428be8:	cbz	w3, 428c98 <nftw@plt+0x26118>
  428bec:	tst	x14, #0x1f
  428bf0:	ldr	x19, [sp, #16]
  428bf4:	b.ne	4287e8 <nftw@plt+0x25c68>  // b.any
  428bf8:	b	428694 <nftw@plt+0x25b14>
  428bfc:	orr	x1, x11, x10
  428c00:	mov	w0, #0x0                   	// #0
  428c04:	cmp	x1, #0x0
  428c08:	ccmp	w7, #0x0, #0x0, ne  // ne = any
  428c0c:	b.eq	4287e8 <nftw@plt+0x25c68>  // b.none
  428c10:	mov	w0, #0x10                  	// #16
  428c14:	mov	w2, #0x20                  	// #32
  428c18:	mov	w4, #0x40                  	// #64
  428c1c:	mov	w7, #0x10000               	// #65536
  428c20:	mov	w5, #0x20000               	// #131072
  428c24:	mov	w6, #0x8000                	// #32768
  428c28:	mov	w1, #0x0                   	// #0
  428c2c:	b	4286f4 <nftw@plt+0x25b74>
  428c30:	add	x18, x18, #0x1
  428c34:	mov	x6, #0xffffffffffffffff    	// #-1
  428c38:	b	4287b0 <nftw@plt+0x25c30>
  428c3c:	sub	x4, x6, #0x2
  428c40:	add	x17, x17, #0x1
  428c44:	add	x5, x19, #0x2
  428c48:	sub	x6, x6, #0x3
  428c4c:	b	4287b0 <nftw@plt+0x25c30>
  428c50:	cmp	x2, #0x1
  428c54:	b.eq	4287e8 <nftw@plt+0x25c68>  // b.none
  428c58:	cmp	x2, #0x2
  428c5c:	b.ne	4286d0 <nftw@plt+0x25b50>  // b.any
  428c60:	ldrb	w1, [x1, #1]
  428c64:	mov	w2, #0x6c                  	// #108
  428c68:	cmp	w1, #0x66
  428c6c:	ccmp	w1, w2, #0x4, ne  // ne = any
  428c70:	b.ne	4286d0 <nftw@plt+0x25b50>  // b.any
  428c74:	b	4287e8 <nftw@plt+0x25c68>
  428c78:	mov	w0, w5
  428c7c:	b	4287e8 <nftw@plt+0x25c68>
  428c80:	cmp	x17, #0x0
  428c84:	orr	w0, w0, #0x800000
  428c88:	csel	w0, w0, w6, ne  // ne = any
  428c8c:	b	4287e8 <nftw@plt+0x25c68>
  428c90:	mov	x16, x15
  428c94:	b	428860 <nftw@plt+0x25ce0>
  428c98:	mov	w3, w4
  428c9c:	ldr	x19, [sp, #16]
  428ca0:	b	428694 <nftw@plt+0x25b14>
  428ca4:	nop
  428ca8:	mov	x6, x0
  428cac:	cbz	x2, 428dac <nftw@plt+0x2622c>
  428cb0:	add	x4, x1, x2
  428cb4:	mov	x5, #0x0                   	// #0
  428cb8:	mov	x7, #0x0                   	// #0
  428cbc:	mov	x8, #0x0                   	// #0
  428cc0:	mov	x9, #0x1                   	// #1
  428cc4:	ldurb	w0, [x4, #-1]
  428cc8:	sub	w3, w0, #0x49
  428ccc:	and	w3, w3, #0xff
  428cd0:	cmp	w3, #0x2c
  428cd4:	b.hi	428cf4 <nftw@plt+0x26174>  // b.pmore
  428cd8:	lsl	x3, x9, x3
  428cdc:	tst	x3, #0x300000003
  428ce0:	b.ne	428da4 <nftw@plt+0x26224>  // b.any
  428ce4:	tst	x3, #0x800000008
  428ce8:	b.ne	428d84 <nftw@plt+0x26204>  // b.any
  428cec:	tst	x3, #0x100000001000
  428cf0:	b.ne	428cfc <nftw@plt+0x2617c>  // b.any
  428cf4:	mov	w0, #0x0                   	// #0
  428cf8:	ret
  428cfc:	add	x8, x8, #0x1
  428d00:	sub	x4, x4, #0x1
  428d04:	cmp	x1, x4
  428d08:	b.ne	428cc4 <nftw@plt+0x26144>  // b.any
  428d0c:	cmp	x5, #0x2
  428d10:	mov	w0, #0x0                   	// #0
  428d14:	ccmp	x8, #0x1, #0x2, ls  // ls = plast
  428d18:	ccmp	x7, #0x1, #0x2, ls  // ls = plast
  428d1c:	cset	w3, hi  // hi = pmore
  428d20:	b.hi	428cf8 <nftw@plt+0x26178>  // b.pmore
  428d24:	cbz	x7, 428dbc <nftw@plt+0x2623c>
  428d28:	ldrb	w4, [x6, #1163]
  428d2c:	mov	w0, w3
  428d30:	cbz	w4, 428cf8 <nftw@plt+0x26178>
  428d34:	ldrb	w0, [x6, #1120]
  428d38:	cbz	w0, 428dc8 <nftw@plt+0x26248>
  428d3c:	ldr	w0, [x6, #1116]
  428d40:	cmp	w0, #0xe
  428d44:	b.le	428dc8 <nftw@plt+0x26248>
  428d48:	ldrb	w0, [x1]
  428d4c:	mov	w4, #0x3000                	// #12288
  428d50:	mov	w6, #0x2000                	// #8192
  428d54:	cmp	w0, #0x69
  428d58:	b.eq	428dd4 <nftw@plt+0x26254>  // b.none
  428d5c:	nop
  428d60:	cmp	x8, #0x0
  428d64:	csel	w4, w4, w6, ne  // ne = any
  428d68:	cbz	x5, 428dfc <nftw@plt+0x2627c>
  428d6c:	cmp	x5, #0x1
  428d70:	mov	w0, #0x20                  	// #32
  428d74:	mov	w1, #0x40                  	// #64
  428d78:	csel	w0, w0, w1, eq  // eq = none
  428d7c:	orr	w0, w0, w4
  428d80:	ret
  428d84:	add	x5, x5, #0x1
  428d88:	cmp	x5, #0x2
  428d8c:	b.ne	428d00 <nftw@plt+0x26180>  // b.any
  428d90:	ldrb	w3, [x4]
  428d94:	cmp	w3, w0
  428d98:	b.eq	428d00 <nftw@plt+0x26180>  // b.none
  428d9c:	mov	w0, #0x0                   	// #0
  428da0:	b	428cf8 <nftw@plt+0x26178>
  428da4:	add	x7, x7, #0x1
  428da8:	b	428d00 <nftw@plt+0x26180>
  428dac:	mov	w4, #0x0                   	// #0
  428db0:	mov	w0, #0x10                  	// #16
  428db4:	orr	w0, w0, w4
  428db8:	b	428d80 <nftw@plt+0x26200>
  428dbc:	mov	w4, #0x1000                	// #4096
  428dc0:	mov	w6, #0x0                   	// #0
  428dc4:	b	428d60 <nftw@plt+0x261e0>
  428dc8:	mov	w4, #0x3000                	// #12288
  428dcc:	mov	w6, #0x2000                	// #8192
  428dd0:	b	428d60 <nftw@plt+0x261e0>
  428dd4:	mov	w0, w3
  428dd8:	cmp	x2, #0x1
  428ddc:	b.eq	428cf8 <nftw@plt+0x26178>  // b.none
  428de0:	cmp	x2, #0x2
  428de4:	b.ne	428d60 <nftw@plt+0x261e0>  // b.any
  428de8:	ldrb	w0, [x1, #1]
  428dec:	cmp	w0, #0x6c
  428df0:	b.ne	428d60 <nftw@plt+0x261e0>  // b.any
  428df4:	mov	w0, #0x0                   	// #0
  428df8:	b	428cf8 <nftw@plt+0x26178>
  428dfc:	mov	w0, #0x10                  	// #16
  428e00:	orr	w0, w0, w4
  428e04:	b	428d80 <nftw@plt+0x26200>
  428e08:	cmp	w0, #0x4a
  428e0c:	b.eq	428e38 <nftw@plt+0x262b8>  // b.none
  428e10:	cmp	w0, #0x4b
  428e14:	b.eq	428e40 <nftw@plt+0x262c0>  // b.none
  428e18:	cmp	w0, #0x4c
  428e1c:	b.eq	428e48 <nftw@plt+0x262c8>  // b.none
  428e20:	cmp	w0, #0x4d
  428e24:	b.eq	428e50 <nftw@plt+0x262d0>  // b.none
  428e28:	cmp	w0, #0x4e
  428e2c:	mov	w1, #0x42                  	// #66
  428e30:	csel	w0, w0, w1, ne  // ne = any
  428e34:	ret
  428e38:	mov	w0, #0x3e                  	// #62
  428e3c:	ret
  428e40:	mov	w0, #0x3f                  	// #63
  428e44:	ret
  428e48:	mov	w0, #0x40                  	// #64
  428e4c:	ret
  428e50:	mov	w0, #0x41                  	// #65
  428e54:	ret
  428e58:	cmp	w0, #0x3e
  428e5c:	b.eq	428e88 <nftw@plt+0x26308>  // b.none
  428e60:	cmp	w0, #0x3f
  428e64:	b.eq	428e90 <nftw@plt+0x26310>  // b.none
  428e68:	cmp	w0, #0x40
  428e6c:	b.eq	428e98 <nftw@plt+0x26318>  // b.none
  428e70:	cmp	w0, #0x41
  428e74:	b.eq	428ea0 <nftw@plt+0x26320>  // b.none
  428e78:	cmp	w0, #0x42
  428e7c:	mov	w1, #0x4e                  	// #78
  428e80:	csel	w0, w0, w1, ne  // ne = any
  428e84:	ret
  428e88:	mov	w0, #0x4a                  	// #74
  428e8c:	ret
  428e90:	mov	w0, #0x4b                  	// #75
  428e94:	ret
  428e98:	mov	w0, #0x4c                  	// #76
  428e9c:	ret
  428ea0:	mov	w0, #0x4d                  	// #77
  428ea4:	ret
  428ea8:	cmp	w0, #0x45
  428eac:	b.eq	428ed8 <nftw@plt+0x26358>  // b.none
  428eb0:	cmp	w0, #0x46
  428eb4:	b.eq	428ee0 <nftw@plt+0x26360>  // b.none
  428eb8:	cmp	w0, #0x47
  428ebc:	b.eq	428ee8 <nftw@plt+0x26368>  // b.none
  428ec0:	cmp	w0, #0x48
  428ec4:	b.eq	428ef0 <nftw@plt+0x26370>  // b.none
  428ec8:	cmp	w0, #0x49
  428ecc:	mov	w1, #0x3c                  	// #60
  428ed0:	csel	w0, w0, w1, ne  // ne = any
  428ed4:	ret
  428ed8:	mov	w0, #0x38                  	// #56
  428edc:	ret
  428ee0:	mov	w0, #0x39                  	// #57
  428ee4:	ret
  428ee8:	mov	w0, #0x3a                  	// #58
  428eec:	ret
  428ef0:	mov	w0, #0x3b                  	// #59
  428ef4:	ret
  428ef8:	cmp	w0, #0x38
  428efc:	b.eq	428f28 <nftw@plt+0x263a8>  // b.none
  428f00:	cmp	w0, #0x39
  428f04:	b.eq	428f30 <nftw@plt+0x263b0>  // b.none
  428f08:	cmp	w0, #0x3a
  428f0c:	b.eq	428f38 <nftw@plt+0x263b8>  // b.none
  428f10:	cmp	w0, #0x3b
  428f14:	b.eq	428f40 <nftw@plt+0x263c0>  // b.none
  428f18:	cmp	w0, #0x3c
  428f1c:	mov	w1, #0x49                  	// #73
  428f20:	csel	w0, w0, w1, ne  // ne = any
  428f24:	ret
  428f28:	mov	w0, #0x45                  	// #69
  428f2c:	ret
  428f30:	mov	w0, #0x46                  	// #70
  428f34:	ret
  428f38:	mov	w0, #0x47                  	// #71
  428f3c:	ret
  428f40:	mov	w0, #0x48                  	// #72
  428f44:	ret
  428f48:	sub	w0, w0, #0x4a
  428f4c:	cmp	w0, #0x4
  428f50:	cset	w0, ls  // ls = plast
  428f54:	ret
  428f58:	sub	w0, w0, #0x45
  428f5c:	cmp	w0, #0x4
  428f60:	cset	w0, ls  // ls = plast
  428f64:	ret
  428f68:	ldr	w2, [x0, #8]
  428f6c:	ldr	x0, [x0, #16]
  428f70:	cbz	w2, 428fe0 <nftw@plt+0x26460>
  428f74:	mov	x1, #0x0                   	// #0
  428f78:	mov	w4, #0x22                  	// #34
  428f7c:	b	428f88 <nftw@plt+0x26408>
  428f80:	cmp	w2, w1
  428f84:	b.ls	428fc4 <nftw@plt+0x26444>  // b.plast
  428f88:	ldrb	w3, [x0, x1]
  428f8c:	add	w5, w1, #0x1
  428f90:	add	x1, x1, #0x1
  428f94:	cmp	w3, #0x27
  428f98:	ccmp	w3, w4, #0x4, ne  // ne = any
  428f9c:	b.ne	428f80 <nftw@plt+0x26400>  // b.any
  428fa0:	mov	w4, w2
  428fa4:	sub	w2, w2, #0x1
  428fa8:	ldrb	w1, [x0, w2, uxtw]
  428fac:	cmp	w1, w3
  428fb0:	b.eq	428fbc <nftw@plt+0x2643c>  // b.none
  428fb4:	cbnz	w2, 428fa0 <nftw@plt+0x26420>
  428fb8:	ret
  428fbc:	add	x0, x0, w4, uxtw
  428fc0:	ret
  428fc4:	cmp	w2, w5
  428fc8:	add	x1, x0, w5, uxtw
  428fcc:	b.ne	428fd8 <nftw@plt+0x26458>  // b.any
  428fd0:	mov	x0, x1
  428fd4:	ret
  428fd8:	ldrb	w3, [x0, w5, uxtw]
  428fdc:	b	428fa0 <nftw@plt+0x26420>
  428fe0:	mov	x1, x0
  428fe4:	mov	x0, x1
  428fe8:	b	428fd4 <nftw@plt+0x26454>
  428fec:	nop
  428ff0:	stp	x29, x30, [sp, #-112]!
  428ff4:	mov	x29, sp
  428ff8:	stp	x19, x20, [sp, #16]
  428ffc:	stp	x23, x24, [sp, #48]
  429000:	mov	x23, x0
  429004:	mov	w24, w3
  429008:	stp	x27, x28, [sp, #80]
  42900c:	mov	x27, x2
  429010:	ldr	x20, [x1, #16]
  429014:	cbz	x2, 42901c <nftw@plt+0x2649c>
  429018:	str	xzr, [x2]
  42901c:	ldr	w28, [x1, #8]
  429020:	cmp	w28, #0x1
  429024:	b.eq	429270 <nftw@plt+0x266f0>  // b.none
  429028:	mov	x5, x20
  42902c:	stp	x21, x22, [sp, #32]
  429030:	add	x28, x20, w28, uxtw
  429034:	stp	x25, x26, [sp, #64]
  429038:	ldrb	w4, [x5], #1
  42903c:	cmp	w4, #0x30
  429040:	b.eq	4291c8 <nftw@plt+0x26648>  // b.none
  429044:	adrp	x21, 481000 <_obstack_memory_used@@Base+0x1fbb8>
  429048:	add	x21, x21, #0xaf0
  42904c:	mov	w9, #0x0                   	// #0
  429050:	mov	w25, #0xa                   	// #10
  429054:	mov	w7, w4
  429058:	adrp	x0, 481000 <_obstack_memory_used@@Base+0x1fbb8>
  42905c:	mov	x22, x5
  429060:	add	x0, x0, #0x7d0
  429064:	mov	w8, #0x0                   	// #0
  429068:	mov	w2, #0x0                   	// #0
  42906c:	ldrh	w7, [x21, x7, lsl #1]
  429070:	mov	w26, #0x0                   	// #0
  429074:	mov	w19, #0x0                   	// #0
  429078:	tbnz	w7, #2, 4290c8 <nftw@plt+0x26548>
  42907c:	nop
  429080:	ands	w7, w9, w7, lsr #8
  429084:	b.ne	4290c8 <nftw@plt+0x26548>  // b.any
  429088:	cmp	w4, #0x27
  42908c:	b.eq	42912c <nftw@plt+0x265ac>  // b.none
  429090:	cmp	w4, #0x2e
  429094:	b.ne	4292f4 <nftw@plt+0x26774>  // b.any
  429098:	cbnz	w8, 4290ec <nftw@plt+0x2656c>
  42909c:	ldrb	w4, [x5]
  4290a0:	cmp	w4, #0x27
  4290a4:	b.eq	4290e4 <nftw@plt+0x26564>  // b.none
  4290a8:	cbnz	w26, 429214 <nftw@plt+0x26694>
  4290ac:	mov	w26, #0x1                   	// #1
  4290b0:	mov	w7, w4
  4290b4:	mov	x20, x5
  4290b8:	add	x5, x5, #0x1
  4290bc:	mov	x22, x5
  4290c0:	ldrh	w7, [x21, x7, lsl #1]
  4290c4:	tbz	w7, #2, 429080 <nftw@plt+0x26500>
  4290c8:	ldrb	w1, [x0, w4, sxtw]
  4290cc:	mov	w8, #0x0                   	// #0
  4290d0:	ldrb	w4, [x5]
  4290d4:	mov	w2, #0x1                   	// #1
  4290d8:	cmp	w19, w1
  4290dc:	csel	w19, w19, w1, cs  // cs = hs, nlast
  4290e0:	b	4290b0 <nftw@plt+0x26530>
  4290e4:	ldrb	w1, [x23, #1166]
  4290e8:	cbz	w1, 4290a8 <nftw@plt+0x26528>
  4290ec:	adrp	x4, 47b000 <_obstack_memory_used@@Base+0x19bb8>
  4290f0:	mov	w2, w24
  4290f4:	mov	x0, x23
  4290f8:	add	x4, x4, #0xef0
  4290fc:	mov	w3, #0x0                   	// #0
  429100:	mov	w1, #0x3                   	// #3
  429104:	bl	4275f8 <nftw@plt+0x24a78>
  429108:	ldp	x21, x22, [sp, #32]
  42910c:	mov	w19, #0x0                   	// #0
  429110:	ldp	x25, x26, [sp, #64]
  429114:	mov	w0, w19
  429118:	ldp	x19, x20, [sp, #16]
  42911c:	ldp	x23, x24, [sp, #48]
  429120:	ldp	x27, x28, [sp, #80]
  429124:	ldp	x29, x30, [sp], #112
  429128:	ret
  42912c:	ldrb	w1, [x23, #1166]
  429130:	cbnz	w1, 4291b8 <nftw@plt+0x26638>
  429134:	cmp	w25, #0xa
  429138:	b.ls	429144 <nftw@plt+0x265c4>  // b.plast
  42913c:	cmp	w25, #0x10
  429140:	b.eq	429310 <nftw@plt+0x26790>  // b.none
  429144:	cbnz	w8, 4292c4 <nftw@plt+0x26744>
  429148:	eor	w0, w26, #0x1
  42914c:	cmp	w25, #0x10
  429150:	and	w0, w0, #0x1
  429154:	csel	w0, w0, wzr, ne  // ne = any
  429158:	cbz	w0, 4295bc <nftw@plt+0x26a3c>
  42915c:	sub	x28, x28, x20
  429160:	mov	x1, x20
  429164:	mov	x2, x28
  429168:	mov	x0, x23
  42916c:	bl	427a70 <nftw@plt+0x24ef0>
  429170:	tst	w0, #0x300000
  429174:	b.ne	429368 <nftw@plt+0x267e8>  // b.any
  429178:	cmp	w19, w25
  42917c:	b.cc	42948c <nftw@plt+0x2690c>  // b.lo, b.ul, b.last
  429180:	add	w5, w19, #0x30
  429184:	cmp	w25, #0x2
  429188:	b.ne	429324 <nftw@plt+0x267a4>  // b.any
  42918c:	adrp	x4, 47b000 <_obstack_memory_used@@Base+0x19bb8>
  429190:	mov	w2, w24
  429194:	mov	x0, x23
  429198:	add	x4, x4, #0xfc8
  42919c:	mov	w3, #0x0                   	// #0
  4291a0:	mov	w1, #0x3                   	// #3
  4291a4:	mov	w19, #0x0                   	// #0
  4291a8:	bl	4275f8 <nftw@plt+0x24a78>
  4291ac:	ldp	x21, x22, [sp, #32]
  4291b0:	ldp	x25, x26, [sp, #64]
  4291b4:	b	429114 <nftw@plt+0x26594>
  4291b8:	cbnz	w8, 4292dc <nftw@plt+0x2675c>
  4291bc:	ldrb	w4, [x5]
  4291c0:	mov	w8, #0x1                   	// #1
  4291c4:	b	4290b0 <nftw@plt+0x26530>
  4291c8:	ldrb	w4, [x20, #1]
  4291cc:	and	w0, w4, #0xffffffdf
  4291d0:	and	w0, w0, #0xff
  4291d4:	cmp	w0, #0x58
  4291d8:	b.ne	42922c <nftw@plt+0x266ac>  // b.any
  4291dc:	ldrb	w0, [x20, #2]
  4291e0:	adrp	x21, 481000 <_obstack_memory_used@@Base+0x1fbb8>
  4291e4:	add	x21, x21, #0xaf0
  4291e8:	cmp	w0, #0x2e
  4291ec:	b.eq	42928c <nftw@plt+0x2670c>  // b.none
  4291f0:	ldrh	w1, [x21, w0, sxtw #1]
  4291f4:	tbnz	w1, #8, 42928c <nftw@plt+0x2670c>
  4291f8:	cmp	w0, #0x27
  4291fc:	b.eq	42935c <nftw@plt+0x267dc>  // b.none
  429200:	mov	x20, x5
  429204:	mov	w9, #0x0                   	// #0
  429208:	add	x5, x5, #0x1
  42920c:	mov	w25, #0x8                   	// #8
  429210:	b	429054 <nftw@plt+0x264d4>
  429214:	adrp	x4, 47b000 <_obstack_memory_used@@Base+0x19bb8>
  429218:	mov	w2, w24
  42921c:	mov	x0, x23
  429220:	add	x4, x4, #0xf20
  429224:	mov	w3, #0x0                   	// #0
  429228:	b	429100 <nftw@plt+0x26580>
  42922c:	cmp	w0, #0x42
  429230:	b.ne	4292a4 <nftw@plt+0x26724>  // b.any
  429234:	ldrb	w1, [x20, #2]
  429238:	sub	w0, w1, #0x30
  42923c:	and	w0, w0, #0xff
  429240:	cmp	w0, #0x1
  429244:	b.ls	42933c <nftw@plt+0x267bc>  // b.plast
  429248:	cmp	w1, #0x27
  42924c:	b.ne	4292a4 <nftw@plt+0x26724>  // b.any
  429250:	ldrb	w1, [x23, #1166]
  429254:	cbz	w1, 4292a4 <nftw@plt+0x26724>
  429258:	adrp	x4, 47b000 <_obstack_memory_used@@Base+0x19bb8>
  42925c:	mov	w2, w24
  429260:	mov	x0, x23
  429264:	add	x4, x4, #0xea8
  429268:	mov	w3, #0x0                   	// #0
  42926c:	b	429100 <nftw@plt+0x26580>
  429270:	mov	w19, #0x111                 	// #273
  429274:	mov	w0, w19
  429278:	ldp	x19, x20, [sp, #16]
  42927c:	ldp	x23, x24, [sp, #48]
  429280:	ldp	x27, x28, [sp, #80]
  429284:	ldp	x29, x30, [sp], #112
  429288:	ret
  42928c:	add	x20, x20, #0x2
  429290:	mov	w4, w0
  429294:	add	x5, x20, #0x1
  429298:	mov	w9, #0x1                   	// #1
  42929c:	mov	w25, #0x10                  	// #16
  4292a0:	b	429054 <nftw@plt+0x264d4>
  4292a4:	mov	x20, x5
  4292a8:	adrp	x21, 481000 <_obstack_memory_used@@Base+0x1fbb8>
  4292ac:	add	x5, x5, #0x1
  4292b0:	add	x21, x21, #0xaf0
  4292b4:	mov	w9, #0x0                   	// #0
  4292b8:	mov	w25, #0x8                   	// #8
  4292bc:	b	429054 <nftw@plt+0x264d4>
  4292c0:	cbz	w2, 4295e4 <nftw@plt+0x26a64>
  4292c4:	adrp	x4, 47b000 <_obstack_memory_used@@Base+0x19bb8>
  4292c8:	mov	w2, w24
  4292cc:	mov	x0, x23
  4292d0:	add	x4, x4, #0xf70
  4292d4:	mov	w3, #0x0                   	// #0
  4292d8:	b	429100 <nftw@plt+0x26580>
  4292dc:	adrp	x4, 47b000 <_obstack_memory_used@@Base+0x19bb8>
  4292e0:	mov	w2, w24
  4292e4:	mov	x0, x23
  4292e8:	add	x4, x4, #0xed0
  4292ec:	mov	w3, #0x0                   	// #0
  4292f0:	b	429100 <nftw@plt+0x26580>
  4292f4:	cmp	w25, #0xa
  4292f8:	b.ls	429890 <nftw@plt+0x26d10>  // b.plast
  4292fc:	cmp	w25, #0x10
  429300:	b.ne	429144 <nftw@plt+0x265c4>  // b.any
  429304:	and	w0, w4, #0xffffffdf
  429308:	cmp	w0, #0x50
  42930c:	b.eq	42989c <nftw@plt+0x26d1c>  // b.none
  429310:	cbnz	w8, 4292c4 <nftw@plt+0x26744>
  429314:	mov	x22, x20
  429318:	cmp	w19, #0x10
  42931c:	add	w5, w19, #0x30
  429320:	b.cc	4293b0 <nftw@plt+0x26830>  // b.lo, b.ul, b.last
  429324:	adrp	x4, 47b000 <_obstack_memory_used@@Base+0x19bb8>
  429328:	mov	w2, w24
  42932c:	mov	x0, x23
  429330:	add	x4, x4, #0xff0
  429334:	mov	w3, #0x0                   	// #0
  429338:	b	4291a0 <nftw@plt+0x26620>
  42933c:	add	x20, x20, #0x2
  429340:	adrp	x21, 481000 <_obstack_memory_used@@Base+0x1fbb8>
  429344:	mov	w4, w1
  429348:	add	x5, x20, #0x1
  42934c:	add	x21, x21, #0xaf0
  429350:	mov	w9, #0x0                   	// #0
  429354:	mov	w25, #0x2                   	// #2
  429358:	b	429054 <nftw@plt+0x264d4>
  42935c:	ldrb	w1, [x23, #1166]
  429360:	cbz	w1, 429200 <nftw@plt+0x26680>
  429364:	b	429258 <nftw@plt+0x266d8>
  429368:	ldrb	w1, [x23, #1154]
  42936c:	cmp	w25, #0x8
  429370:	orr	w21, w0, #0x2
  429374:	b.eq	4297f0 <nftw@plt+0x26c70>  // b.none
  429378:	cbnz	w1, 4297f8 <nftw@plt+0x26c78>
  42937c:	cmp	w25, #0x2
  429380:	b.eq	429674 <nftw@plt+0x26af4>  // b.none
  429384:	cmp	w25, #0xa
  429388:	b.eq	429664 <nftw@plt+0x26ae4>  // b.none
  42938c:	cmp	w25, #0x10
  429390:	orr	w0, w21, #0x400
  429394:	orr	w19, w21, #0x200
  429398:	csel	w19, w19, w0, eq  // eq = none
  42939c:	ldp	x21, x22, [sp, #32]
  4293a0:	ldp	x25, x26, [sp, #64]
  4293a4:	b	429114 <nftw@plt+0x26594>
  4293a8:	cmp	w19, w25
  4293ac:	b.cs	429180 <nftw@plt+0x26600>  // b.hs, b.nlast
  4293b0:	cbz	w26, 429484 <nftw@plt+0x26904>
  4293b4:	cmp	w25, #0x2
  4293b8:	b.eq	429924 <nftw@plt+0x26da4>  // b.none
  4293bc:	eor	w2, w2, #0x1
  4293c0:	tst	w9, w2
  4293c4:	b.ne	42973c <nftw@plt+0x26bbc>  // b.any
  4293c8:	cmp	w25, #0x10
  4293cc:	b.ne	4295dc <nftw@plt+0x26a5c>  // b.any
  4293d0:	ldrb	w0, [x23, #1154]
  4293d4:	cbz	w0, 42940c <nftw@plt+0x2688c>
  4293d8:	ldrb	w0, [x23, #1127]
  4293dc:	cbnz	w0, 42940c <nftw@plt+0x2688c>
  4293e0:	ldrb	w0, [x23, #1120]
  4293e4:	str	w7, [sp, #108]
  4293e8:	cbz	w0, 429a5c <nftw@plt+0x26edc>
  4293ec:	adrp	x4, 47c000 <_obstack_memory_used@@Base+0x1abb8>
  4293f0:	add	x4, x4, #0x78
  4293f4:	mov	w3, #0x0                   	// #0
  4293f8:	mov	w2, w24
  4293fc:	mov	x0, x23
  429400:	mov	w1, #0x2                   	// #2
  429404:	bl	4275f8 <nftw@plt+0x24a78>
  429408:	ldr	w7, [sp, #108]
  42940c:	cmp	w26, #0x2
  429410:	b.ne	429950 <nftw@plt+0x26dd0>  // b.any
  429414:	ldrb	w4, [x22]
  429418:	sub	w0, w4, #0x2b
  42941c:	mov	w2, #0xfd                  	// #253
  429420:	mov	x1, x22
  429424:	tst	w0, w2
  429428:	b.ne	429434 <nftw@plt+0x268b4>  // b.any
  42942c:	ldrb	w4, [x22, #1]
  429430:	add	x1, x22, #0x1
  429434:	ldrh	w0, [x21, w4, sxtw #1]
  429438:	tbz	w0, #2, 429868 <nftw@plt+0x26ce8>
  42943c:	ldrb	w0, [x1]
  429440:	mov	x22, x1
  429444:	cmp	w0, #0x27
  429448:	mov	w2, #0x0                   	// #0
  42944c:	b.eq	429860 <nftw@plt+0x26ce0>  // b.none
  429450:	ldrb	w0, [x22, #1]!
  429454:	ldrh	w1, [x21, w0, sxtw #1]
  429458:	tbnz	w1, #2, 429444 <nftw@plt+0x268c4>
  42945c:	cmp	w0, #0x27
  429460:	b.ne	4292c0 <nftw@plt+0x26740>  // b.any
  429464:	ldrb	w1, [x23, #1166]
  429468:	cbz	w1, 4292c0 <nftw@plt+0x26740>
  42946c:	ldrb	w0, [x22, #1]!
  429470:	cmp	w1, #0x0
  429474:	cset	w2, ne  // ne = any
  429478:	ldrh	w1, [x21, w0, sxtw #1]
  42947c:	tbnz	w1, #2, 429444 <nftw@plt+0x268c4>
  429480:	b	42945c <nftw@plt+0x268dc>
  429484:	sub	x28, x28, x22
  429488:	mov	x20, x22
  42948c:	cbz	x28, 42981c <nftw@plt+0x26c9c>
  429490:	add	x0, x20, x28
  429494:	mov	x3, #0x0                   	// #0
  429498:	mov	x6, #0x0                   	// #0
  42949c:	mov	x5, #0x0                   	// #0
  4294a0:	mov	x1, #0x1                   	// #1
  4294a4:	ldurb	w2, [x0, #-1]
  4294a8:	sub	w4, w2, #0x49
  4294ac:	and	w4, w4, #0xff
  4294b0:	cmp	w4, #0x2c
  4294b4:	b.hi	4294d4 <nftw@plt+0x26954>  // b.pmore
  4294b8:	lsl	x4, x1, x4
  4294bc:	tst	x4, #0x300000003
  4294c0:	b.ne	4295b4 <nftw@plt+0x26a34>  // b.any
  4294c4:	tst	x4, #0x800000008
  4294c8:	b.ne	429598 <nftw@plt+0x26a18>  // b.any
  4294cc:	tst	x4, #0x100000001000
  4294d0:	b.ne	429500 <nftw@plt+0x26980>  // b.any
  4294d4:	ldrb	w0, [x23, #1161]
  4294d8:	cbz	w0, 429968 <nftw@plt+0x26de8>
  4294dc:	cbz	x27, 4294e4 <nftw@plt+0x26964>
  4294e0:	str	x20, [x27]
  4294e4:	ldrb	w0, [x23, #1138]
  4294e8:	cbnz	w0, 42979c <nftw@plt+0x26c1c>
  4294ec:	ldrb	w0, [x23, #1139]
  4294f0:	cbnz	w0, 429754 <nftw@plt+0x26bd4>
  4294f4:	mov	w21, #0x1041                	// #4161
  4294f8:	movk	w21, #0x100, lsl #16
  4294fc:	b	42937c <nftw@plt+0x267fc>
  429500:	add	x5, x5, #0x1
  429504:	sub	x0, x0, #0x1
  429508:	cmp	x20, x0
  42950c:	b.ne	4294a4 <nftw@plt+0x26924>  // b.any
  429510:	cmp	x3, #0x2
  429514:	ccmp	x5, #0x1, #0x2, ls  // ls = plast
  429518:	ccmp	x6, #0x1, #0x2, ls  // ls = plast
  42951c:	b.hi	4294d4 <nftw@plt+0x26954>  // b.pmore
  429520:	mov	w0, #0x0                   	// #0
  429524:	cbnz	x6, 429a08 <nftw@plt+0x26e88>
  429528:	cmp	x5, #0x0
  42952c:	cset	w22, ne  // ne = any
  429530:	orr	w22, w0, w22, lsl #12
  429534:	cbz	x3, 429a6c <nftw@plt+0x26eec>
  429538:	cmp	x3, #0x1
  42953c:	mov	w0, #0x20                  	// #32
  429540:	mov	w1, #0x40                  	// #64
  429544:	csel	w0, w0, w1, eq  // eq = none
  429548:	ldrb	w1, [x23, #1138]
  42954c:	orr	w22, w22, w0
  429550:	mov	w27, w22
  429554:	and	w26, w22, #0xf0
  429558:	orr	w21, w22, #0x1
  42955c:	and	w19, w22, #0x2000
  429560:	cbnz	w1, 42983c <nftw@plt+0x26cbc>
  429564:	cmp	w26, #0x40
  429568:	b.eq	4299ec <nftw@plt+0x26e6c>  // b.none
  42956c:	cbz	w19, 42937c <nftw@plt+0x267fc>
  429570:	ldrb	w0, [x23, #1154]
  429574:	cbz	w0, 42937c <nftw@plt+0x267fc>
  429578:	mov	w2, w24
  42957c:	mov	x0, x23
  429580:	adrp	x4, 47c000 <_obstack_memory_used@@Base+0x1abb8>
  429584:	mov	w3, #0x0                   	// #0
  429588:	add	x4, x4, #0x250
  42958c:	mov	w1, #0x2                   	// #2
  429590:	bl	4275f8 <nftw@plt+0x24a78>
  429594:	b	42937c <nftw@plt+0x267fc>
  429598:	add	x3, x3, #0x1
  42959c:	cmp	x3, #0x2
  4295a0:	b.ne	429504 <nftw@plt+0x26984>  // b.any
  4295a4:	ldrb	w4, [x0]
  4295a8:	cmp	w4, w2
  4295ac:	b.eq	429504 <nftw@plt+0x26984>  // b.none
  4295b0:	b	4294d4 <nftw@plt+0x26954>
  4295b4:	add	x6, x6, #0x1
  4295b8:	b	429504 <nftw@plt+0x26984>
  4295bc:	mov	x22, x20
  4295c0:	and	w0, w26, #0x1
  4295c4:	cmp	w0, #0x0
  4295c8:	ccmp	w25, #0x8, #0x0, ne  // ne = any
  4295cc:	b.ne	4293a8 <nftw@plt+0x26828>  // b.any
  4295d0:	cmp	w19, #0x9
  4295d4:	mov	w25, #0xa                   	// #10
  4295d8:	b.hi	42965c <nftw@plt+0x26adc>  // b.pmore
  4295dc:	cmp	w26, #0x2
  4295e0:	b.eq	429418 <nftw@plt+0x26898>  // b.none
  4295e4:	sub	x20, x28, x22
  4295e8:	mov	x1, x22
  4295ec:	mov	x2, x20
  4295f0:	mov	x0, x23
  4295f4:	str	w7, [sp, #108]
  4295f8:	bl	427a70 <nftw@plt+0x24ef0>
  4295fc:	mov	w19, w0
  429600:	cbnz	w0, 4296c8 <nftw@plt+0x26b48>
  429604:	ldrb	w0, [x23, #1161]
  429608:	cbz	w0, 429a80 <nftw@plt+0x26f00>
  42960c:	ldr	w7, [sp, #108]
  429610:	cbz	x27, 429618 <nftw@plt+0x26a98>
  429614:	str	x22, [x27]
  429618:	mov	w21, #0x42                  	// #66
  42961c:	cmp	x28, x22
  429620:	movk	w21, #0x100, lsl #16
  429624:	b.eq	429384 <nftw@plt+0x26804>  // b.none
  429628:	ldrb	w0, [x23, #1138]
  42962c:	cbnz	w0, 429988 <nftw@plt+0x26e08>
  429630:	mov	w19, #0x40                  	// #64
  429634:	movk	w19, #0x100, lsl #16
  429638:	tst	w19, #0x300000
  42963c:	b.eq	429710 <nftw@plt+0x26b90>  // b.none
  429640:	ldrb	w0, [x23, #1154]
  429644:	cbnz	w0, 42993c <nftw@plt+0x26dbc>
  429648:	orr	w21, w19, #0x2
  42964c:	tbz	w19, #13, 429384 <nftw@plt+0x26804>
  429650:	ldrb	w0, [x23, #1154]
  429654:	cbz	w0, 429384 <nftw@plt+0x26804>
  429658:	b	429578 <nftw@plt+0x269f8>
  42965c:	add	w5, w19, #0x30
  429660:	b	429324 <nftw@plt+0x267a4>
  429664:	orr	w19, w21, #0x100
  429668:	ldp	x21, x22, [sp, #32]
  42966c:	ldp	x25, x26, [sp, #64]
  429670:	b	429114 <nftw@plt+0x26594>
  429674:	ldrb	w0, [x23, #1165]
  429678:	cbz	w0, 42968c <nftw@plt+0x26b0c>
  42967c:	orr	w19, w21, #0x800
  429680:	ldp	x21, x22, [sp, #32]
  429684:	ldp	x25, x26, [sp, #64]
  429688:	b	429114 <nftw@plt+0x26594>
  42968c:	ldrb	w0, [x23, #1154]
  429690:	cbz	w0, 42967c <nftw@plt+0x26afc>
  429694:	ldrb	w0, [x23, #1120]
  429698:	adrp	x3, 47b000 <_obstack_memory_used@@Base+0x19bb8>
  42969c:	adrp	x4, 47b000 <_obstack_memory_used@@Base+0x19bb8>
  4296a0:	add	x3, x3, #0xe80
  4296a4:	cmp	w0, #0x0
  4296a8:	add	x4, x4, #0xe48
  4296ac:	csel	x4, x4, x3, ne  // ne = any
  4296b0:	mov	w2, w24
  4296b4:	mov	w1, w25
  4296b8:	mov	x0, x23
  4296bc:	mov	w3, #0x0                   	// #0
  4296c0:	bl	4275f8 <nftw@plt+0x24a78>
  4296c4:	b	42967c <nftw@plt+0x26afc>
  4296c8:	cmp	x28, x22
  4296cc:	ubfx	x7, x19, #14, #1
  4296d0:	b.eq	4296dc <nftw@plt+0x26b5c>  // b.none
  4296d4:	ldrb	w0, [x23, #1138]
  4296d8:	cbnz	w0, 4299d4 <nftw@plt+0x26e54>
  4296dc:	cmp	w19, #0x20
  4296e0:	b.ne	4298d4 <nftw@plt+0x26d54>  // b.any
  4296e4:	ldrb	w0, [x23, #1154]
  4296e8:	cbz	w0, 429710 <nftw@plt+0x26b90>
  4296ec:	adrp	x4, 47c000 <_obstack_memory_used@@Base+0x1abb8>
  4296f0:	add	x4, x4, #0x180
  4296f4:	mov	w3, #0x0                   	// #0
  4296f8:	str	w7, [sp, #108]
  4296fc:	mov	w2, w24
  429700:	mov	x0, x23
  429704:	mov	w1, #0x2                   	// #2
  429708:	bl	4275f8 <nftw@plt+0x24a78>
  42970c:	ldr	w7, [sp, #108]
  429710:	cbz	w7, 429648 <nftw@plt+0x26ac8>
  429714:	ldrb	w0, [x23, #1154]
  429718:	cbz	w0, 429648 <nftw@plt+0x26ac8>
  42971c:	mov	w2, w24
  429720:	mov	x0, x23
  429724:	adrp	x4, 47c000 <_obstack_memory_used@@Base+0x1abb8>
  429728:	mov	w3, #0x0                   	// #0
  42972c:	add	x4, x4, #0x1f0
  429730:	mov	w1, #0x2                   	// #2
  429734:	bl	4275f8 <nftw@plt+0x24a78>
  429738:	b	429648 <nftw@plt+0x26ac8>
  42973c:	adrp	x4, 47c000 <_obstack_memory_used@@Base+0x1abb8>
  429740:	mov	w2, w24
  429744:	mov	x0, x23
  429748:	add	x4, x4, #0x48
  42974c:	mov	w3, #0x0                   	// #0
  429750:	b	429100 <nftw@plt+0x26580>
  429754:	mov	w21, #0x1041                	// #4161
  429758:	mov	w19, #0x0                   	// #0
  42975c:	movk	w21, #0x100, lsl #16
  429760:	ldrb	w1, [x23, #1152]
  429764:	adrp	x0, 47b000 <_obstack_memory_used@@Base+0x19bb8>
  429768:	ldrb	w2, [x23, #1120]
  42976c:	add	x0, x0, #0xe20
  429770:	adrp	x4, 47b000 <_obstack_memory_used@@Base+0x19bb8>
  429774:	add	x4, x4, #0xdf8
  429778:	cmp	w2, #0x0
  42977c:	mov	w3, #0x0                   	// #0
  429780:	csel	x4, x4, x0, ne  // ne = any
  429784:	mov	w2, w24
  429788:	cbz	w1, 429914 <nftw@plt+0x26d94>
  42978c:	mov	x0, x23
  429790:	mov	w1, #0x7                   	// #7
  429794:	bl	427670 <nftw@plt+0x24af0>
  429798:	b	42956c <nftw@plt+0x269ec>
  42979c:	mov	x0, x23
  4297a0:	bl	43aac0 <nftw@plt+0x37f40>
  4297a4:	cbnz	w0, 4294ec <nftw@plt+0x2696c>
  4297a8:	ldrb	w0, [x23, #1139]
  4297ac:	mov	w21, #0x1041                	// #4161
  4297b0:	mov	w27, #0x1040                	// #4160
  4297b4:	mov	w19, #0x0                   	// #0
  4297b8:	movk	w21, #0x100, lsl #16
  4297bc:	movk	w27, #0x100, lsl #16
  4297c0:	cbnz	w0, 429a74 <nftw@plt+0x26ef4>
  4297c4:	and	w26, w27, #0xf0
  4297c8:	mov	w1, #0x6                   	// #6
  4297cc:	mov	x6, x20
  4297d0:	mov	w5, w28
  4297d4:	mov	w2, w24
  4297d8:	mov	x0, x23
  4297dc:	adrp	x4, 47c000 <_obstack_memory_used@@Base+0x1abb8>
  4297e0:	mov	w3, #0x0                   	// #0
  4297e4:	add	x4, x4, #0x158
  4297e8:	bl	427670 <nftw@plt+0x24af0>
  4297ec:	b	429564 <nftw@plt+0x269e4>
  4297f0:	cbz	w1, 429664 <nftw@plt+0x26ae4>
  4297f4:	mov	w25, #0xa                   	// #10
  4297f8:	and	w19, w0, #0x2000
  4297fc:	mov	w2, w24
  429800:	mov	x0, x23
  429804:	adrp	x4, 47b000 <_obstack_memory_used@@Base+0x19bb8>
  429808:	mov	w3, #0x0                   	// #0
  42980c:	add	x4, x4, #0xf98
  429810:	mov	w1, #0x2                   	// #2
  429814:	bl	4275f8 <nftw@plt+0x24a78>
  429818:	b	42956c <nftw@plt+0x269ec>
  42981c:	ldrb	w0, [x23, #1138]
  429820:	mov	w21, #0x11                  	// #17
  429824:	cbz	w0, 42937c <nftw@plt+0x267fc>
  429828:	mov	w26, #0x10                  	// #16
  42982c:	mov	w27, w26
  429830:	mov	w22, w26
  429834:	mov	w19, #0x0                   	// #0
  429838:	mov	w21, #0x11                  	// #17
  42983c:	mov	x0, x23
  429840:	bl	43aac0 <nftw@plt+0x37f40>
  429844:	cbnz	w0, 429564 <nftw@plt+0x269e4>
  429848:	and	w22, w22, #0x3000
  42984c:	cmp	w26, #0x40
  429850:	b.eq	4299f8 <nftw@plt+0x26e78>  // b.none
  429854:	cbz	w22, 42956c <nftw@plt+0x269ec>
  429858:	mov	w1, #0x6                   	// #6
  42985c:	b	4297cc <nftw@plt+0x26c4c>
  429860:	ldrb	w1, [x23, #1166]
  429864:	b	42946c <nftw@plt+0x268ec>
  429868:	cmp	w4, #0x27
  42986c:	b.ne	429878 <nftw@plt+0x26cf8>  // b.any
  429870:	ldrb	w0, [x23, #1166]
  429874:	cbnz	w0, 4298bc <nftw@plt+0x26d3c>
  429878:	adrp	x4, 47c000 <_obstack_memory_used@@Base+0x1abb8>
  42987c:	mov	w2, w24
  429880:	mov	x0, x23
  429884:	add	x4, x4, #0xd8
  429888:	mov	w3, #0x0                   	// #0
  42988c:	b	429100 <nftw@plt+0x26580>
  429890:	and	w0, w4, #0xffffffdf
  429894:	cmp	w0, #0x45
  429898:	b.ne	429144 <nftw@plt+0x265c4>  // b.any
  42989c:	cbnz	w8, 4298bc <nftw@plt+0x26d3c>
  4298a0:	ldrb	w4, [x5]
  4298a4:	mov	w0, #0x1                   	// #1
  4298a8:	mov	w26, #0x2                   	// #2
  4298ac:	cmp	w4, #0x27
  4298b0:	b.ne	4295c4 <nftw@plt+0x26a44>  // b.any
  4298b4:	ldrb	w1, [x23, #1166]
  4298b8:	cbz	w1, 4295c4 <nftw@plt+0x26a44>
  4298bc:	adrp	x4, 47b000 <_obstack_memory_used@@Base+0x19bb8>
  4298c0:	mov	w2, w24
  4298c4:	mov	x0, x23
  4298c8:	add	x4, x4, #0xf48
  4298cc:	mov	w3, #0x0                   	// #0
  4298d0:	b	429100 <nftw@plt+0x26580>
  4298d4:	cmp	w7, #0x0
  4298d8:	ccmp	w25, #0xa, #0x4, ne  // ne = any
  4298dc:	b.eq	429638 <nftw@plt+0x26ab8>  // b.none
  4298e0:	adrp	x4, 47c000 <_obstack_memory_used@@Base+0x1abb8>
  4298e4:	mov	x6, x22
  4298e8:	mov	w5, w20
  4298ec:	mov	w2, w24
  4298f0:	mov	x0, x23
  4298f4:	add	x4, x4, #0x1b0
  4298f8:	mov	w3, #0x0                   	// #0
  4298fc:	mov	w1, #0x3                   	// #3
  429900:	mov	w19, #0x0                   	// #0
  429904:	bl	4275f8 <nftw@plt+0x24a78>
  429908:	ldp	x21, x22, [sp, #32]
  42990c:	ldp	x25, x26, [sp, #64]
  429910:	b	429114 <nftw@plt+0x26594>
  429914:	mov	x0, x23
  429918:	mov	w1, #0x7                   	// #7
  42991c:	bl	4276f0 <nftw@plt+0x24b70>
  429920:	b	42956c <nftw@plt+0x269ec>
  429924:	adrp	x4, 47c000 <_obstack_memory_used@@Base+0x1abb8>
  429928:	mov	w2, w24
  42992c:	mov	x0, x23
  429930:	add	x4, x4, #0x18
  429934:	mov	w3, #0x0                   	// #0
  429938:	b	429100 <nftw@plt+0x26580>
  42993c:	adrp	x4, 47b000 <_obstack_memory_used@@Base+0x19bb8>
  429940:	mov	w3, #0x0                   	// #0
  429944:	add	x4, x4, #0xf98
  429948:	str	w7, [sp, #108]
  42994c:	b	4296fc <nftw@plt+0x26b7c>
  429950:	adrp	x4, 47c000 <_obstack_memory_used@@Base+0x1abb8>
  429954:	mov	w2, w24
  429958:	mov	x0, x23
  42995c:	add	x4, x4, #0xf0
  429960:	mov	w3, #0x0                   	// #0
  429964:	b	429100 <nftw@plt+0x26580>
  429968:	adrp	x4, 47c000 <_obstack_memory_used@@Base+0x1abb8>
  42996c:	mov	x6, x20
  429970:	mov	w5, w28
  429974:	mov	w2, w24
  429978:	mov	x0, x23
  42997c:	add	x4, x4, #0x220
  429980:	mov	w3, #0x0                   	// #0
  429984:	b	4298fc <nftw@plt+0x26d7c>
  429988:	mov	x0, x23
  42998c:	mov	w19, #0x40                  	// #64
  429990:	str	w7, [sp, #108]
  429994:	bl	43aac0 <nftw@plt+0x37f40>
  429998:	ldr	w7, [sp, #108]
  42999c:	movk	w19, #0x100, lsl #16
  4299a0:	cbnz	w0, 4298d4 <nftw@plt+0x26d54>
  4299a4:	mov	x6, x22
  4299a8:	mov	w5, w20
  4299ac:	mov	w2, w24
  4299b0:	mov	x0, x23
  4299b4:	adrp	x4, 47c000 <_obstack_memory_used@@Base+0x1abb8>
  4299b8:	mov	w3, #0x0                   	// #0
  4299bc:	add	x4, x4, #0x158
  4299c0:	mov	w1, #0x6                   	// #6
  4299c4:	str	w7, [sp, #108]
  4299c8:	bl	427670 <nftw@plt+0x24af0>
  4299cc:	ldr	w7, [sp, #108]
  4299d0:	b	4296dc <nftw@plt+0x26b5c>
  4299d4:	mov	x0, x23
  4299d8:	str	w7, [sp, #108]
  4299dc:	bl	43aac0 <nftw@plt+0x37f40>
  4299e0:	ldr	w7, [sp, #108]
  4299e4:	cbnz	w0, 4296dc <nftw@plt+0x26b5c>
  4299e8:	b	4299a4 <nftw@plt+0x26e24>
  4299ec:	ldrb	w0, [x23, #1139]
  4299f0:	cbz	w0, 42956c <nftw@plt+0x269ec>
  4299f4:	b	429760 <nftw@plt+0x26be0>
  4299f8:	ldrb	w0, [x23, #1139]
  4299fc:	cbnz	w0, 429a74 <nftw@plt+0x26ef4>
  429a00:	cbz	w22, 42956c <nftw@plt+0x269ec>
  429a04:	b	4297c4 <nftw@plt+0x26c44>
  429a08:	ldrb	w0, [x23, #1163]
  429a0c:	cbz	w0, 4294d4 <nftw@plt+0x26954>
  429a10:	ldrb	w0, [x23, #1120]
  429a14:	cbz	w0, 429a30 <nftw@plt+0x26eb0>
  429a18:	ldr	w0, [x23, #1116]
  429a1c:	cmp	w0, #0xe
  429a20:	b.le	429a30 <nftw@plt+0x26eb0>
  429a24:	ldrb	w0, [x20]
  429a28:	cmp	w0, #0x69
  429a2c:	b.eq	429a38 <nftw@plt+0x26eb8>  // b.none
  429a30:	mov	w0, #0x2000                	// #8192
  429a34:	b	429528 <nftw@plt+0x269a8>
  429a38:	cmp	x28, #0x1
  429a3c:	b.eq	4294d4 <nftw@plt+0x26954>  // b.none
  429a40:	cmp	x28, #0x2
  429a44:	b.ne	429a30 <nftw@plt+0x26eb0>  // b.any
  429a48:	ldrb	w0, [x20, #1]
  429a4c:	cmp	w0, #0x6c
  429a50:	b.eq	4294d4 <nftw@plt+0x26954>  // b.none
  429a54:	mov	w0, #0x2000                	// #8192
  429a58:	b	429528 <nftw@plt+0x269a8>
  429a5c:	adrp	x4, 47c000 <_obstack_memory_used@@Base+0x1abb8>
  429a60:	mov	w3, #0x0                   	// #0
  429a64:	add	x4, x4, #0xa8
  429a68:	b	4293f8 <nftw@plt+0x26878>
  429a6c:	mov	w0, #0x10                  	// #16
  429a70:	b	429548 <nftw@plt+0x269c8>
  429a74:	and	w26, w27, #0xf0
  429a78:	mov	w1, #0x7                   	// #7
  429a7c:	b	4297cc <nftw@plt+0x26c4c>
  429a80:	mov	x6, x22
  429a84:	mov	w5, w20
  429a88:	mov	w2, w24
  429a8c:	mov	x0, x23
  429a90:	adrp	x4, 47c000 <_obstack_memory_used@@Base+0x1abb8>
  429a94:	mov	w3, #0x0                   	// #0
  429a98:	add	x4, x4, #0x128
  429a9c:	mov	w1, #0x3                   	// #3
  429aa0:	bl	4275f8 <nftw@plt+0x24a78>
  429aa4:	ldp	x21, x22, [sp, #32]
  429aa8:	ldp	x25, x26, [sp, #64]
  429aac:	b	429114 <nftw@plt+0x26594>
  429ab0:	ldr	w6, [x1, #8]
  429ab4:	ubfx	x4, x2, #12, #1
  429ab8:	stp	xzr, xzr, [x8]
  429abc:	cmp	w6, #0x1
  429ac0:	strb	w4, [x8, #16]
  429ac4:	strb	wzr, [x8, #17]
  429ac8:	ldr	x5, [x1, #16]
  429acc:	b.eq	429d08 <nftw@plt+0x27188>  // b.none
  429ad0:	stp	x29, x30, [sp, #-64]!
  429ad4:	and	w1, w2, #0xf00
  429ad8:	cmp	w1, #0x400
  429adc:	mov	x29, sp
  429ae0:	ldr	x9, [x0, #1208]
  429ae4:	b.eq	429b14 <nftw@plt+0x26f94>  // b.none
  429ae8:	cmp	w1, #0x200
  429aec:	b.eq	429ddc <nftw@plt+0x2725c>  // b.none
  429af0:	cmp	w1, #0x800
  429af4:	b.eq	429d7c <nftw@plt+0x271fc>  // b.none
  429af8:	mov	x7, #0x9999999999999999    	// #-7378697629483820647
  429afc:	mov	x11, #0xa                   	// #10
  429b00:	mov	x3, x5
  429b04:	mov	w10, w11
  429b08:	movk	x7, #0x1999, lsl #48
  429b0c:	mov	x12, #0xfffffffffffffff7    	// #-9
  429b10:	b	429b28 <nftw@plt+0x26fa8>
  429b14:	mov	x11, #0x8                   	// #8
  429b18:	add	x3, x5, #0x1
  429b1c:	mov	w10, w11
  429b20:	mov	x7, #0x2000000000000000    	// #2305843009213693952
  429b24:	mov	x12, #0xfffffffffffffff9    	// #-7
  429b28:	cmp	x9, #0x3f
  429b2c:	b.hi	429b48 <nftw@plt+0x26fc8>  // b.pmore
  429b30:	neg	w7, w9
  429b34:	mov	x1, #0xffffffffffffffff    	// #-1
  429b38:	lsr	x7, x1, x7
  429b3c:	add	x7, x7, x12
  429b40:	udiv	x7, x7, x11
  429b44:	add	x7, x7, #0x1
  429b48:	add	x6, x5, w6, uxtw
  429b4c:	cmp	x3, x6
  429b50:	b.cs	429bc8 <nftw@plt+0x27048>  // b.hs, b.nlast
  429b54:	sub	x16, x9, #0x40
  429b58:	mov	x4, #0xffffffffffffffff    	// #-1
  429b5c:	lsl	x17, x4, x9
  429b60:	adrp	x12, 481000 <_obstack_memory_used@@Base+0x1fbb8>
  429b64:	lsl	x4, x4, x16
  429b68:	adrp	x14, 481000 <_obstack_memory_used@@Base+0x1fbb8>
  429b6c:	mvn	x17, x17
  429b70:	mvn	x13, x4
  429b74:	add	x12, x12, #0xaf0
  429b78:	add	x14, x14, #0x7d0
  429b7c:	mov	w15, #0x0                   	// #0
  429b80:	mov	w18, #0x1                   	// #1
  429b84:	stp	x19, x20, [sp, #16]
  429b88:	stp	x21, x22, [sp, #32]
  429b8c:	ldrb	w1, [x3]
  429b90:	mov	x4, x1
  429b94:	ldrh	w1, [x12, x1, lsl #1]
  429b98:	tbnz	w1, #2, 429c30 <nftw@plt+0x270b0>
  429b9c:	cmp	w10, #0x10
  429ba0:	b.eq	429c5c <nftw@plt+0x270dc>  // b.none
  429ba4:	cmp	w4, #0x27
  429ba8:	b.ne	429bb4 <nftw@plt+0x27034>  // b.any
  429bac:	ldrb	w1, [x0, #1166]
  429bb0:	cbnz	w1, 429c4c <nftw@plt+0x270cc>
  429bb4:	cbz	w15, 429bbc <nftw@plt+0x2703c>
  429bb8:	tbz	w2, #24, 429e0c <nftw@plt+0x2728c>
  429bbc:	ldp	x19, x20, [sp, #16]
  429bc0:	ldp	x21, x22, [sp, #32]
  429bc4:	ldrb	w4, [x8, #16]
  429bc8:	cbnz	w4, 429c28 <nftw@plt+0x270a8>
  429bcc:	ldrb	w1, [x0, #1160]
  429bd0:	cbnz	w1, 429d70 <nftw@plt+0x271f0>
  429bd4:	cmp	x9, #0x40
  429bd8:	ldp	x3, x2, [x8]
  429bdc:	b.hi	429d94 <nftw@plt+0x27214>  // b.pmore
  429be0:	sub	w1, w9, #0x1
  429be4:	lsr	x1, x2, x1
  429be8:	mvn	x1, x1
  429bec:	and	w1, w1, #0x1
  429bf0:	cbnz	w1, 429c28 <nftw@plt+0x270a8>
  429bf4:	cmp	w10, #0xa
  429bf8:	b.ne	429c20 <nftw@plt+0x270a0>  // b.any
  429bfc:	ldrb	w1, [x0, #1152]
  429c00:	adrp	x2, 47c000 <_obstack_memory_used@@Base+0x1abb8>
  429c04:	add	x2, x2, #0x2a8
  429c08:	str	x8, [sp, #56]
  429c0c:	cmp	w1, #0x0
  429c10:	cset	w1, ne  // ne = any
  429c14:	lsl	w1, w1, #1
  429c18:	bl	427178 <nftw@plt+0x245f8>
  429c1c:	ldr	x8, [sp, #56]
  429c20:	mov	w0, #0x1                   	// #1
  429c24:	strb	w0, [x8, #16]
  429c28:	ldp	x29, x30, [sp], #64
  429c2c:	ret
  429c30:	ldr	x5, [x8, #8]
  429c34:	ldrb	w1, [x14, w4, sxtw]
  429c38:	cmp	x5, x7
  429c3c:	b.cs	429d1c <nftw@plt+0x2719c>  // b.hs, b.nlast
  429c40:	and	x1, x1, #0xff
  429c44:	madd	x1, x11, x5, x1
  429c48:	str	x1, [x8, #8]
  429c4c:	add	x3, x3, #0x1
  429c50:	cmp	x6, x3
  429c54:	b.ne	429b8c <nftw@plt+0x2700c>  // b.any
  429c58:	b	429bb4 <nftw@plt+0x27034>
  429c5c:	tbz	w1, #8, 429ba4 <nftw@plt+0x27024>
  429c60:	ldr	x5, [x8, #8]
  429c64:	ldrb	w1, [x14, w4, sxtw]
  429c68:	cmp	x5, x7
  429c6c:	b.cc	429c40 <nftw@plt+0x270c0>  // b.lo, b.ul, b.last
  429c70:	ldrb	w20, [x8, #16]
  429c74:	and	x1, x1, #0xff
  429c78:	ldr	x7, [x8]
  429c7c:	mov	w22, #0x3c                  	// #60
  429c80:	mov	w30, #0x4                   	// #4
  429c84:	nop
  429c88:	lsr	x4, x7, x22
  429c8c:	cmp	x4, #0x0
  429c90:	lsr	x22, x5, x22
  429c94:	cset	w21, ne  // ne = any
  429c98:	lsl	x4, x7, x30
  429c9c:	orr	x22, x4, x22
  429ca0:	lsl	x30, x5, x30
  429ca4:	adds	x1, x1, x30
  429ca8:	mov	w5, w21
  429cac:	b.cc	429cc0 <nftw@plt+0x27140>  // b.lo, b.ul, b.last
  429cb0:	mov	x4, #0x1                   	// #1
  429cb4:	adds	x4, x4, x22
  429cb8:	mov	x22, x4
  429cbc:	csel	w5, w21, w18, cc  // cc = lo, ul, last
  429cc0:	cmp	x9, #0x40
  429cc4:	b.ls	429da8 <nftw@plt+0x27228>  // b.plast
  429cc8:	and	x4, x13, x22
  429ccc:	cmp	x16, #0x3f
  429cd0:	b.ls	429e30 <nftw@plt+0x272b0>  // b.plast
  429cd4:	mov	x19, x1
  429cd8:	mov	x4, x22
  429cdc:	orr	w15, w15, w5
  429ce0:	mov	x7, #0x0                   	// #0
  429ce4:	and	w15, w15, #0xff
  429ce8:	stp	x4, x19, [x8]
  429cec:	strb	w20, [x8, #16]
  429cf0:	strb	w5, [x8, #17]
  429cf4:	nop
  429cf8:	add	x3, x3, #0x1
  429cfc:	cmp	x6, x3
  429d00:	b.ne	429b8c <nftw@plt+0x2700c>  // b.any
  429d04:	b	429bb4 <nftw@plt+0x27034>
  429d08:	ldrb	w0, [x5]
  429d0c:	sub	w0, w0, #0x30
  429d10:	sxtw	x0, w0
  429d14:	str	x0, [x8, #8]
  429d18:	ret
  429d1c:	ldrb	w20, [x8, #16]
  429d20:	and	x1, x1, #0xff
  429d24:	cmp	w10, #0x2
  429d28:	ldr	x7, [x8]
  429d2c:	b.eq	429df4 <nftw@plt+0x27274>  // b.none
  429d30:	cmp	w10, #0x10
  429d34:	b.eq	429e00 <nftw@plt+0x27280>  // b.none
  429d38:	cmp	xzr, x7, lsr #61
  429d3c:	lsl	x30, x5, #3
  429d40:	cset	w21, ne  // ne = any
  429d44:	extr	x22, x7, x5, #61
  429d48:	cmp	w10, #0xa
  429d4c:	b.ne	429ca4 <nftw@plt+0x27124>  // b.any
  429d50:	lsr	x4, x5, #63
  429d54:	lsl	x19, x5, #1
  429d58:	adds	x1, x19, x1
  429d5c:	add	x4, x4, x7, lsl #1
  429d60:	cinc	x4, x4, cs  // cs = hs, nlast
  429d64:	adds	x1, x30, x1
  429d68:	cinc	x4, x4, cs  // cs = hs, nlast
  429d6c:	b	429cb4 <nftw@plt+0x27134>
  429d70:	ldrb	w1, [x0, #16]
  429d74:	cbnz	w1, 429c28 <nftw@plt+0x270a8>
  429d78:	b	429bd4 <nftw@plt+0x27054>
  429d7c:	mov	x11, #0x2                   	// #2
  429d80:	mov	x7, #0x8000000000000000    	// #-9223372036854775808
  429d84:	add	x3, x5, x11
  429d88:	mov	w10, w11
  429d8c:	mov	x12, #0xffffffffffffffff    	// #-1
  429d90:	b	429b28 <nftw@plt+0x26fa8>
  429d94:	sub	w1, w9, #0x41
  429d98:	lsr	x1, x3, x1
  429d9c:	mvn	x1, x1
  429da0:	and	w1, w1, #0x1
  429da4:	b	429bf0 <nftw@plt+0x27070>
  429da8:	b.eq	429e2c <nftw@plt+0x272ac>  // b.none
  429dac:	bics	xzr, x1, x17
  429db0:	and	x19, x17, x1
  429db4:	mov	x4, #0x0                   	// #0
  429db8:	b.eq	429e30 <nftw@plt+0x272b0>  // b.none
  429dbc:	mov	w5, #0x1                   	// #1
  429dc0:	orr	w15, w15, w5
  429dc4:	mov	x7, #0x0                   	// #0
  429dc8:	and	w15, w15, #0xff
  429dcc:	stp	x4, x19, [x8]
  429dd0:	strb	w20, [x8, #16]
  429dd4:	strb	w5, [x8, #17]
  429dd8:	b	429cf8 <nftw@plt+0x27178>
  429ddc:	mov	x11, #0x10                  	// #16
  429de0:	add	x3, x5, #0x2
  429de4:	mov	w10, w11
  429de8:	mov	x7, #0x1000000000000000    	// #1152921504606846976
  429dec:	mov	x12, #0xfffffffffffffff1    	// #-15
  429df0:	b	429b28 <nftw@plt+0x26fa8>
  429df4:	mov	w22, #0x3f                  	// #63
  429df8:	mov	w30, #0x1                   	// #1
  429dfc:	b	429c88 <nftw@plt+0x27108>
  429e00:	mov	w22, #0x3c                  	// #60
  429e04:	mov	w30, #0x4                   	// #4
  429e08:	b	429c88 <nftw@plt+0x27108>
  429e0c:	mov	w1, #0x2                   	// #2
  429e10:	adrp	x2, 47c000 <_obstack_memory_used@@Base+0x1abb8>
  429e14:	add	x2, x2, #0x278
  429e18:	bl	427178 <nftw@plt+0x245f8>
  429e1c:	ldp	x19, x20, [sp, #16]
  429e20:	ldp	x21, x22, [sp, #32]
  429e24:	ldp	x29, x30, [sp], #64
  429e28:	ret
  429e2c:	mov	x4, #0x0                   	// #0
  429e30:	mov	x19, x1
  429e34:	cmp	x4, x22
  429e38:	b.eq	429cdc <nftw@plt+0x2715c>  // b.none
  429e3c:	mov	w5, #0x1                   	// #1
  429e40:	b	429dc0 <nftw@plt+0x27240>
  429e44:	nop
  429e48:	stp	x29, x30, [sp, #-384]!
  429e4c:	and	w1, w1, #0xff
  429e50:	mov	x29, sp
  429e54:	stp	x21, x22, [sp, #32]
  429e58:	mov	x22, x0
  429e5c:	adrp	x0, 47c000 <_obstack_memory_used@@Base+0x1abb8>
  429e60:	stp	x19, x20, [sp, #16]
  429e64:	add	x0, x0, #0x5f0
  429e68:	ldr	x19, [x22, #1096]
  429e6c:	stp	x23, x24, [sp, #48]
  429e70:	mov	w24, #0x1                   	// #1
  429e74:	stp	x25, x26, [sp, #64]
  429e78:	mov	w25, #0x0                   	// #0
  429e7c:	stp	x27, x28, [sp, #80]
  429e80:	str	wzr, [x22, #28]
  429e84:	str	xzr, [x22, #432]
  429e88:	str	wzr, [sp, #124]
  429e8c:	str	x0, [sp, #176]
  429e90:	mov	w0, #0x16                  	// #22
  429e94:	str	w0, [x19, #36]
  429e98:	str	w1, [sp, #188]
  429e9c:	str	wzr, [sp, #260]
  429ea0:	add	x1, sp, #0x104
  429ea4:	mov	x0, x22
  429ea8:	bl	43e420 <nftw@plt+0x3b8a0>
  429eac:	ldrb	w7, [x0, #4]
  429eb0:	ldr	w9, [sp, #260]
  429eb4:	mov	x27, x0
  429eb8:	add	w25, w25, #0x1
  429ebc:	cmp	w7, #0x5
  429ec0:	b.eq	42ab20 <nftw@plt+0x27fa0>  // b.none
  429ec4:	b.hi	42a948 <nftw@plt+0x27dc8>  // b.pmore
  429ec8:	cmp	w7, #0x1
  429ecc:	b.eq	42ab5c <nftw@plt+0x27fdc>  // b.none
  429ed0:	cmp	w7, #0x4
  429ed4:	b.ne	42abf4 <nftw@plt+0x28074>  // b.any
  429ed8:	cbz	w24, 42abbc <nftw@plt+0x2803c>
  429edc:	ldr	w21, [x19, #36]
  429ee0:	sub	w0, w21, #0x1
  429ee4:	cmp	w0, #0x1b
  429ee8:	b.hi	429f48 <nftw@plt+0x273c8>  // b.pmore
  429eec:	sbfiz	x1, x21, #1, #32
  429ef0:	adrp	x23, 47c000 <_obstack_memory_used@@Base+0x1abb8>
  429ef4:	add	x23, x23, #0x7a0
  429ef8:	sxtw	x0, w21
  429efc:	ldrb	w1, [x23, x1]
  429f00:	cmp	w1, #0x10
  429f04:	b.ls	42bab0 <nftw@plt+0x28f30>  // b.plast
  429f08:	mov	w7, #0x10                  	// #16
  429f0c:	mov	w28, #0x1b                  	// #27
  429f10:	adrp	x1, 47c000 <_obstack_memory_used@@Base+0x1abb8>
  429f14:	add	x1, x1, #0x5b8
  429f18:	stp	x27, x1, [sp, #104]
  429f1c:	mov	x27, x23
  429f20:	mov	w23, w7
  429f24:	str	w9, [sp, #120]
  429f28:	ldrb	w1, [x22, #1141]
  429f2c:	cbz	w1, 429f3c <nftw@plt+0x273bc>
  429f30:	add	x0, x27, x0, lsl #1
  429f34:	ldrb	w0, [x0, #1]
  429f38:	tbnz	w0, #2, 42aab0 <nftw@plt+0x27f30>
  429f3c:	sub	w1, w21, #0x1
  429f40:	cmp	w1, #0x1b
  429f44:	b.ls	429f84 <nftw@plt+0x27404>  // b.plast
  429f48:	adrp	x2, 47c000 <_obstack_memory_used@@Base+0x1abb8>
  429f4c:	mov	w3, w21
  429f50:	mov	x0, x22
  429f54:	add	x2, x2, #0x598
  429f58:	mov	w1, #0x4                   	// #4
  429f5c:	mov	w24, #0x0                   	// #0
  429f60:	bl	427178 <nftw@plt+0x245f8>
  429f64:	mov	w0, w24
  429f68:	ldp	x19, x20, [sp, #16]
  429f6c:	ldp	x21, x22, [sp, #32]
  429f70:	ldp	x23, x24, [sp, #48]
  429f74:	ldp	x25, x26, [sp, #64]
  429f78:	ldp	x27, x28, [sp, #80]
  429f7c:	ldp	x29, x30, [sp], #384
  429f80:	ret
  429f84:	adrp	x0, 47c000 <_obstack_memory_used@@Base+0x1abb8>
  429f88:	add	x0, x0, #0x760
  429f8c:	ldrh	w0, [x0, w1, uxtw #1]
  429f90:	adr	x1, 429f9c <nftw@plt+0x2741c>
  429f94:	add	x0, x1, w0, sxth #2
  429f98:	br	x0
  429f9c:	add	x2, sp, #0x200
  429fa0:	sub	x20, x19, #0x28
  429fa4:	ldp	x0, x1, [x19, #-32]
  429fa8:	cmp	w21, #0x5
  429fac:	stp	x0, x1, [x2, #-200]
  429fb0:	add	x3, sp, #0x138
  429fb4:	add	x26, sp, #0x150
  429fb8:	ldr	x0, [x20, #24]
  429fbc:	str	x0, [sp, #328]
  429fc0:	ldp	x0, x1, [x19, #8]
  429fc4:	ldurb	w12, [x19, #-16]
  429fc8:	ldp	x13, x11, [x19, #-32]
  429fcc:	stp	x0, x1, [sp, #336]
  429fd0:	ldr	x0, [x19, #24]
  429fd4:	str	x0, [sp, #352]
  429fd8:	ldr	x1, [x22, #1208]
  429fdc:	ldrb	w6, [x19, #24]
  429fe0:	ldp	x5, x4, [x19, #8]
  429fe4:	b.eq	42b190 <nftw@plt+0x28610>  // b.none
  429fe8:	b.hi	42ace4 <nftw@plt+0x28164>  // b.pmore
  429fec:	cmp	w21, #0x4
  429ff0:	b.ne	42b33c <nftw@plt+0x287bc>  // b.any
  429ff4:	adds	x8, x11, x4
  429ff8:	adc	x3, x5, x13
  429ffc:	cbz	w12, 42b51c <nftw@plt+0x2899c>
  42a000:	cmp	x1, #0x40
  42a004:	mov	w6, #0x1                   	// #1
  42a008:	b.ls	42b528 <nftw@plt+0x289a8>  // b.plast
  42a00c:	sub	x1, x1, #0x40
  42a010:	mov	x0, #0xffffffffffffffff    	// #-1
  42a014:	cmp	x1, #0x40
  42a018:	lsl	x0, x0, x1
  42a01c:	bic	x0, x3, x0
  42a020:	csel	x3, x0, x3, cc  // cc = lo, ul, last
  42a024:	cbz	w12, 42b820 <nftw@plt+0x28ca0>
  42a028:	mov	x4, x8
  42a02c:	mov	x5, x3
  42a030:	add	x12, sp, #0x168
  42a034:	mov	w2, #0x0                   	// #0
  42a038:	b	42ad74 <nftw@plt+0x281f4>
  42a03c:	sub	x20, x19, #0x28
  42a040:	ldrb	w6, [x19, #24]
  42a044:	ldp	x4, x5, [x19, #-32]
  42a048:	add	x26, sp, #0x150
  42a04c:	ldp	x3, x8, [x19, #8]
  42a050:	stp	x4, x5, [sp, #336]
  42a054:	ldr	x0, [x20, #24]
  42a058:	str	x0, [sp, #352]
  42a05c:	ldr	x1, [x22, #1208]
  42a060:	ldurb	w0, [x19, #-16]
  42a064:	ldp	x2, x5, [x19, #-32]
  42a068:	orr	w0, w0, w6
  42a06c:	cbz	w0, 42b2cc <nftw@plt+0x2874c>
  42a070:	cmp	x3, x2
  42a074:	b.cc	42aed8 <nftw@plt+0x28358>  // b.lo, b.ul, b.last
  42a078:	cmp	x8, x5
  42a07c:	cset	w1, ls  // ls = plast
  42a080:	cmp	x3, x2
  42a084:	csel	w1, w1, wzr, eq  // eq = none
  42a088:	cmp	w21, #0x19
  42a08c:	cbnz	w1, 42b574 <nftw@plt+0x289f4>
  42a090:	mov	x0, #0x0                   	// #0
  42a094:	b.eq	42a0ac <nftw@plt+0x2752c>  // b.none
  42a098:	cmp	w21, #0x3
  42a09c:	mov	x0, #0x1                   	// #1
  42a0a0:	b.eq	42a0ac <nftw@plt+0x2752c>  // b.none
  42a0a4:	cmp	w21, #0x2
  42a0a8:	cset	x0, ne  // ne = any
  42a0ac:	stp	xzr, x0, [sp, #336]
  42a0b0:	strh	wzr, [sp, #352]
  42a0b4:	b	42a1a0 <nftw@plt+0x27620>
  42a0b8:	add	x2, sp, #0x200
  42a0bc:	cmp	w21, #0x1b
  42a0c0:	ldp	x0, x1, [x19, #8]
  42a0c4:	add	x3, sp, #0x138
  42a0c8:	stp	x0, x1, [x2, #-200]
  42a0cc:	ldr	x0, [x19, #24]
  42a0d0:	str	x0, [sp, #328]
  42a0d4:	ldrb	w5, [x19, #24]
  42a0d8:	ldrb	w1, [x19, #25]
  42a0dc:	ldp	x20, x4, [x19, #8]
  42a0e0:	b.eq	42b2b0 <nftw@plt+0x28730>  // b.none
  42a0e4:	cmp	w21, #0x1c
  42a0e8:	b.eq	42b258 <nftw@plt+0x286d8>  // b.none
  42a0ec:	cmp	w21, #0xe
  42a0f0:	b.eq	42b1dc <nftw@plt+0x2865c>  // b.none
  42a0f4:	orr	x20, x4, x20
  42a0f8:	mov	w0, #0x0                   	// #0
  42a0fc:	cmp	x20, #0x0
  42a100:	mov	w5, #0x0                   	// #0
  42a104:	cset	x4, eq  // eq = none
  42a108:	mov	x20, #0x0                   	// #0
  42a10c:	add	x12, sp, #0x168
  42a110:	ldr	w2, [x19, #32]
  42a114:	stp	x20, x4, [sp, #312]
  42a118:	sub	x20, x19, #0x28
  42a11c:	strb	w5, [sp, #328]
  42a120:	strb	w0, [sp, #329]
  42a124:	ldp	x0, x1, [x3]
  42a128:	stp	x0, x1, [x12]
  42a12c:	ldr	x3, [x3, #16]
  42a130:	str	x3, [x12, #16]
  42a134:	stp	x0, x1, [x19, #-32]
  42a138:	ldr	x0, [x12, #16]
  42a13c:	str	x0, [x20, #24]
  42a140:	stur	w2, [x19, #-8]
  42a144:	b	42a3e0 <nftw@plt+0x27860>
  42a148:	sub	x20, x19, #0x28
  42a14c:	ldrb	w1, [x19, #24]
  42a150:	ldp	x2, x3, [x19, #-32]
  42a154:	cmp	w21, #0x9
  42a158:	ldp	x4, x6, [x19, #8]
  42a15c:	stp	x2, x3, [sp, #336]
  42a160:	add	x26, sp, #0x150
  42a164:	ldr	x0, [x20, #24]
  42a168:	str	x0, [sp, #352]
  42a16c:	ldurb	w0, [x19, #-16]
  42a170:	ldp	x3, x5, [x19, #-32]
  42a174:	orr	w0, w0, w1
  42a178:	b.eq	42b100 <nftw@plt+0x28580>  // b.none
  42a17c:	cmp	w21, #0xa
  42a180:	eor	x1, x6, x5
  42a184:	eor	x2, x4, x3
  42a188:	b.ne	42a194 <nftw@plt+0x27614>  // b.any
  42a18c:	orr	x1, x6, x5
  42a190:	orr	x2, x4, x3
  42a194:	stp	x2, x1, [sp, #336]
  42a198:	strb	w0, [sp, #352]
  42a19c:	strb	wzr, [sp, #353]
  42a1a0:	add	x3, sp, #0x260
  42a1a4:	ldr	w2, [x19, #32]
  42a1a8:	ldp	x0, x1, [x26]
  42a1ac:	stp	x0, x1, [x3, #-248]
  42a1b0:	ldr	x3, [x26, #16]
  42a1b4:	str	x3, [sp, #376]
  42a1b8:	stp	x0, x1, [x20, #8]
  42a1bc:	ldr	x0, [sp, #376]
  42a1c0:	str	x0, [x20, #24]
  42a1c4:	str	w2, [x20, #32]
  42a1c8:	b	42a3e0 <nftw@plt+0x27860>
  42a1cc:	add	x2, sp, #0x200
  42a1d0:	sub	x20, x19, #0x28
  42a1d4:	ldp	x0, x1, [x19, #-32]
  42a1d8:	add	x12, sp, #0x120
  42a1dc:	stp	x0, x1, [x2, #-248]
  42a1e0:	ldurb	w13, [x19, #-16]
  42a1e4:	ldp	x0, x1, [x19, #8]
  42a1e8:	stp	x0, x1, [sp, #288]
  42a1ec:	ldurb	w11, [x19, #-15]
  42a1f0:	ldr	x0, [x20, #24]
  42a1f4:	str	x0, [sp, #280]
  42a1f8:	ldr	x0, [x19, #24]
  42a1fc:	str	x0, [sp, #304]
  42a200:	ldr	w18, [x19, #32]
  42a204:	mov	w14, w13
  42a208:	ldp	x6, x9, [x19, #-32]
  42a20c:	ldp	x4, x10, [x19, #8]
  42a210:	ldr	x1, [x22, #1208]
  42a214:	cbnz	w13, 42ae00 <nftw@plt+0x28280>
  42a218:	ldrb	w0, [x19, #24]
  42a21c:	str	w0, [sp, #184]
  42a220:	cbz	w0, 42a414 <nftw@plt+0x27894>
  42a224:	mov	w26, #0x0                   	// #0
  42a228:	mov	w15, #0x1                   	// #1
  42a22c:	cbz	x4, 42a4b0 <nftw@plt+0x27930>
  42a230:	sub	w2, w1, #0x41
  42a234:	mov	x0, #0x1                   	// #1
  42a238:	sub	x8, x1, #0x1
  42a23c:	lsl	x0, x0, x2
  42a240:	tst	x4, x0
  42a244:	b.ne	42b7d0 <nftw@plt+0x28c50>  // b.any
  42a248:	lsr	x0, x0, #1
  42a24c:	mov	x2, x8
  42a250:	tst	x4, x0
  42a254:	sub	x8, x8, #0x1
  42a258:	b.eq	42a248 <nftw@plt+0x276c8>  // b.none
  42a25c:	sub	x2, x1, x2
  42a260:	mov	w0, #0x1                   	// #1
  42a264:	stp	x4, x10, [sp, #288]
  42a268:	add	x8, sp, #0x150
  42a26c:	strb	w0, [sp, #304]
  42a270:	add	x0, sp, #0xe0
  42a274:	stp	x1, x2, [sp, #128]
  42a278:	ldp	x4, x5, [x12]
  42a27c:	stp	x4, x5, [sp, #224]
  42a280:	ldr	x4, [x12, #16]
  42a284:	str	w14, [sp, #144]
  42a288:	str	w15, [sp, #152]
  42a28c:	stp	x9, x6, [sp, #160]
  42a290:	str	x4, [sp, #240]
  42a294:	bl	4284e0 <nftw@plt+0x25960>
  42a298:	ldr	w14, [sp, #144]
  42a29c:	mov	x13, #0x0                   	// #0
  42a2a0:	ldr	w15, [sp, #152]
  42a2a4:	mov	x8, #0x0                   	// #0
  42a2a8:	mov	x12, #0x1                   	// #1
  42a2ac:	mov	x11, #0xffffffffffffffff    	// #-1
  42a2b0:	ldp	x1, x2, [sp, #128]
  42a2b4:	ldp	x9, x6, [sp, #160]
  42a2b8:	ldp	x0, x4, [sp, #336]
  42a2bc:	b	42a30c <nftw@plt+0x2778c>
  42a2c0:	ldr	x3, [x22, #1208]
  42a2c4:	cmp	x9, x4
  42a2c8:	sbc	x6, x6, x0
  42a2cc:	sub	x9, x9, x4
  42a2d0:	cmp	x3, #0x40
  42a2d4:	b.ls	42ae24 <nftw@plt+0x282a4>  // b.plast
  42a2d8:	sub	x3, x3, #0x40
  42a2dc:	cmp	x3, #0x40
  42a2e0:	lsl	x3, x11, x3
  42a2e4:	bic	x3, x6, x3
  42a2e8:	csel	x6, x3, x6, cc  // cc = lo, ul, last
  42a2ec:	cmp	x2, #0x3f
  42a2f0:	b.ls	42ae14 <nftw@plt+0x28294>  // b.plast
  42a2f4:	sub	w3, w2, #0x40
  42a2f8:	lsl	x3, x12, x3
  42a2fc:	orr	x8, x8, x3
  42a300:	sub	x2, x2, #0x1
  42a304:	extr	x4, x0, x4, #1
  42a308:	lsr	x0, x0, #1
  42a30c:	cmp	x6, x0
  42a310:	b.hi	42a2c0 <nftw@plt+0x27740>  // b.pmore
  42a314:	cmp	x9, x4
  42a318:	ccmp	x6, x0, #0x0, cs  // cs = hs, nlast
  42a31c:	b.eq	42a2c0 <nftw@plt+0x27740>  // b.none
  42a320:	cbnz	x2, 42a300 <nftw@plt+0x27780>
  42a324:	cmp	w21, #0x7
  42a328:	b.eq	42b13c <nftw@plt+0x285bc>  // b.none
  42a32c:	mov	w11, #0x0                   	// #0
  42a330:	cbnz	w26, 42b094 <nftw@plt+0x28514>
  42a334:	strb	w15, [sp, #280]
  42a338:	add	x12, sp, #0x168
  42a33c:	strb	w11, [sp, #281]
  42a340:	stp	x6, x9, [sp, #264]
  42a344:	ldr	x0, [sp, #280]
  42a348:	str	x0, [sp, #376]
  42a34c:	stp	x6, x9, [sp, #360]
  42a350:	strb	w15, [sp, #376]
  42a354:	strb	w11, [sp, #377]
  42a358:	ldp	x0, x1, [x12]
  42a35c:	ldr	w2, [x19, #32]
  42a360:	stp	x0, x1, [x20, #8]
  42a364:	ldr	x0, [x12, #16]
  42a368:	str	x0, [x20, #24]
  42a36c:	str	w2, [x20, #32]
  42a370:	b	42a3e0 <nftw@plt+0x27860>
  42a374:	sub	x20, x19, #0x28
  42a378:	ldr	w4, [x19, #32]
  42a37c:	ldp	x2, x3, [x19, #-32]
  42a380:	ldp	x0, x5, [x19, #8]
  42a384:	stp	x2, x3, [sp, #336]
  42a388:	ldr	x2, [x20, #24]
  42a38c:	str	x2, [sp, #352]
  42a390:	ldp	x3, x2, [x19, #-32]
  42a394:	strh	wzr, [sp, #352]
  42a398:	cmp	x3, x0
  42a39c:	cset	w0, eq  // eq = none
  42a3a0:	cmp	x2, x5
  42a3a4:	csel	w0, w0, wzr, eq  // eq = none
  42a3a8:	cmp	w21, #0x18
  42a3ac:	eor	w2, w0, #0x1
  42a3b0:	csel	w0, w0, w2, ne  // ne = any
  42a3b4:	and	x0, x0, #0xff
  42a3b8:	stp	xzr, x0, [sp, #336]
  42a3bc:	ldr	x0, [sp, #352]
  42a3c0:	str	x0, [sp, #376]
  42a3c4:	add	x0, sp, #0x260
  42a3c8:	ldp	x2, x3, [sp, #336]
  42a3cc:	stp	x2, x3, [x0, #-248]
  42a3d0:	stp	x2, x3, [x19, #-32]
  42a3d4:	ldr	x0, [sp, #376]
  42a3d8:	str	x0, [x20, #24]
  42a3dc:	stur	w4, [x19, #-8]
  42a3e0:	ldrb	w0, [x20, #25]
  42a3e4:	mov	x26, x20
  42a3e8:	cbz	w0, 42a3f4 <nftw@plt+0x27874>
  42a3ec:	ldr	w0, [x22, #28]
  42a3f0:	cbz	w0, 42accc <nftw@plt+0x2814c>
  42a3f4:	ldr	w21, [x26, #36]
  42a3f8:	sbfiz	x1, x21, #1, #32
  42a3fc:	sxtw	x0, w21
  42a400:	ldrb	w1, [x27, x1]
  42a404:	cmp	w1, w23
  42a408:	b.ls	42a570 <nftw@plt+0x279f0>  // b.plast
  42a40c:	mov	x19, x26
  42a410:	b	429f28 <nftw@plt+0x273a8>
  42a414:	cmp	x1, #0x40
  42a418:	b.hi	42b074 <nftw@plt+0x284f4>  // b.pmore
  42a41c:	sub	w14, w1, #0x1
  42a420:	mov	w26, #0x0                   	// #0
  42a424:	lsr	x0, x9, x14
  42a428:	tbnz	w0, #0, 42b704 <nftw@plt+0x28b84>
  42a42c:	lsr	x0, x10, x14
  42a430:	mvn	x0, x0
  42a434:	and	w0, w0, #0x1
  42a438:	mov	w14, w26
  42a43c:	mov	w15, #0x0                   	// #0
  42a440:	cbnz	w0, 42a22c <nftw@plt+0x276ac>
  42a444:	stp	x4, x10, [sp, #288]
  42a448:	add	x0, sp, #0xc0
  42a44c:	add	x8, sp, #0xe0
  42a450:	strb	wzr, [sp, #304]
  42a454:	str	w15, [sp, #128]
  42a458:	ldp	x4, x5, [x12]
  42a45c:	stp	x4, x5, [sp, #192]
  42a460:	ldr	x2, [x12, #16]
  42a464:	str	x1, [sp, #136]
  42a468:	str	w13, [sp, #144]
  42a46c:	str	w11, [sp, #152]
  42a470:	stp	x9, x6, [sp, #160]
  42a474:	str	w15, [sp, #184]
  42a478:	str	x2, [sp, #208]
  42a47c:	bl	4280d8 <nftw@plt+0x25558>
  42a480:	ldp	x4, x5, [sp, #224]
  42a484:	stp	x4, x5, [x12]
  42a488:	ldr	w15, [sp, #128]
  42a48c:	ldp	x4, x10, [sp, #288]
  42a490:	eor	w14, w26, #0x1
  42a494:	ldr	x0, [sp, #240]
  42a498:	str	x0, [x12, #16]
  42a49c:	ldr	w13, [sp, #144]
  42a4a0:	ldr	w11, [sp, #152]
  42a4a4:	ldr	x1, [sp, #136]
  42a4a8:	ldp	x9, x6, [sp, #160]
  42a4ac:	cbnz	x4, 42a230 <nftw@plt+0x276b0>
  42a4b0:	cbnz	x10, 42afa4 <nftw@plt+0x28424>
  42a4b4:	ldr	w0, [x22, #28]
  42a4b8:	cbz	w0, 42b798 <nftw@plt+0x28c18>
  42a4bc:	strb	w13, [sp, #280]
  42a4c0:	mov	w15, w13
  42a4c4:	strb	w11, [sp, #281]
  42a4c8:	add	x12, sp, #0x168
  42a4cc:	stp	x6, x9, [sp, #264]
  42a4d0:	ldr	x0, [sp, #280]
  42a4d4:	str	x0, [sp, #376]
  42a4d8:	b	42a34c <nftw@plt+0x277cc>
  42a4dc:	cmp	w28, #0x15
  42a4e0:	b.ne	42b39c <nftw@plt+0x2881c>  // b.any
  42a4e4:	ldp	x2, x3, [x19, #8]
  42a4e8:	sub	x0, x19, #0x28
  42a4ec:	ldr	w1, [x19, #32]
  42a4f0:	stp	x2, x3, [x19, #-32]
  42a4f4:	ldr	x2, [x19, #24]
  42a4f8:	stur	x2, [x19, #-16]
  42a4fc:	stur	w1, [x19, #-8]
  42a500:	mov	x19, x0
  42a504:	b	429ea0 <nftw@plt+0x27320>
  42a508:	ldp	x1, x0, [x19, #-72]
  42a50c:	sub	x2, x19, #0x50
  42a510:	mov	x26, x2
  42a514:	orr	x0, x0, x1
  42a518:	cbz	x0, 42ade0 <nftw@plt+0x28260>
  42a51c:	ldr	w0, [x22, #28]
  42a520:	sub	x20, x19, #0x28
  42a524:	ldp	x4, x5, [x19, #-32]
  42a528:	sub	w0, w0, #0x1
  42a52c:	str	w0, [x22, #28]
  42a530:	stp	x4, x5, [x19, #-72]
  42a534:	ldur	w0, [x19, #-8]
  42a538:	ldr	x1, [x20, #24]
  42a53c:	str	x1, [x2, #24]
  42a540:	stur	w0, [x19, #-48]
  42a544:	ldrb	w0, [x20, #24]
  42a548:	cbnz	w0, 42a550 <nftw@plt+0x279d0>
  42a54c:	ldrb	w0, [x19, #24]
  42a550:	ldr	w21, [x26, #36]
  42a554:	strb	w0, [x2, #24]
  42a558:	sbfiz	x1, x21, #1, #32
  42a55c:	sxtw	x0, w21
  42a560:	ldrb	w1, [x27, x1]
  42a564:	cmp	w1, w23
  42a568:	b.hi	42a40c <nftw@plt+0x2788c>  // b.pmore
  42a56c:	nop
  42a570:	ldr	w9, [sp, #120]
  42a574:	mov	x19, x26
  42a578:	ldr	x27, [sp, #104]
  42a57c:	cmp	w28, #0x15
  42a580:	b.eq	42ba68 <nftw@plt+0x28ee8>  // b.none
  42a584:	cmp	w28, #0x16
  42a588:	b.ne	42a608 <nftw@plt+0x27a88>  // b.any
  42a58c:	ldr	x0, [x22, #432]
  42a590:	cbz	x0, 42a5a8 <nftw@plt+0x27a28>
  42a594:	ldr	w0, [sp, #124]
  42a598:	cmp	w25, #0x3
  42a59c:	eor	w0, w0, #0x1
  42a5a0:	csinc	w0, w0, wzr, eq  // eq = none
  42a5a4:	cbnz	w0, 42b994 <nftw@plt+0x28e14>
  42a5a8:	ldr	x0, [x22, #1096]
  42a5ac:	cmp	x0, x19
  42a5b0:	b.eq	42b8dc <nftw@plt+0x28d5c>  // b.none
  42a5b4:	ldr	w0, [sp, #188]
  42a5b8:	adrp	x1, 47c000 <_obstack_memory_used@@Base+0x1abb8>
  42a5bc:	ldr	w2, [x19, #32]
  42a5c0:	add	x1, x1, #0x2e8
  42a5c4:	cmp	w0, #0x0
  42a5c8:	adrp	x5, 47c000 <_obstack_memory_used@@Base+0x1abb8>
  42a5cc:	add	x5, x5, #0x2e0
  42a5d0:	mov	x0, x22
  42a5d4:	csel	x5, x5, x1, ne  // ne = any
  42a5d8:	adrp	x4, 47c000 <_obstack_memory_used@@Base+0x1abb8>
  42a5dc:	mov	w3, #0x0                   	// #0
  42a5e0:	add	x4, x4, #0x748
  42a5e4:	mov	w24, #0x0                   	// #0
  42a5e8:	mov	w1, #0x4                   	// #4
  42a5ec:	bl	4275f8 <nftw@plt+0x24a78>
  42a5f0:	b	429f64 <nftw@plt+0x273e4>
  42a5f4:	sub	w0, w28, #0x12
  42a5f8:	ldr	w9, [sp, #120]
  42a5fc:	cmp	w0, #0x1
  42a600:	ldr	x27, [sp, #104]
  42a604:	b.hi	42b0e4 <nftw@plt+0x28564>  // b.pmore
  42a608:	cmp	w28, #0x11
  42a60c:	b.eq	42ad98 <nftw@plt+0x28218>  // b.none
  42a610:	b.hi	42aa2c <nftw@plt+0x27eac>  // b.pmore
  42a614:	cmp	w28, #0xf
  42a618:	b.eq	42ad98 <nftw@plt+0x28218>  // b.none
  42a61c:	cmp	w28, #0x10
  42a620:	b.ne	42a63c <nftw@plt+0x27abc>  // b.any
  42a624:	ldp	x1, x0, [x19, #8]
  42a628:	orr	x0, x0, x1
  42a62c:	cbz	x0, 42a63c <nftw@plt+0x27abc>
  42a630:	ldr	w0, [x22, #28]
  42a634:	add	w0, w0, #0x1
  42a638:	str	w0, [x22, #28]
  42a63c:	ldr	x0, [x22, #1104]
  42a640:	add	x19, x19, #0x28
  42a644:	cmp	x0, x19
  42a648:	b.eq	42aa6c <nftw@plt+0x27eec>  // b.none
  42a64c:	mov	w24, #0x1                   	// #1
  42a650:	str	x27, [x19]
  42a654:	stp	w9, w28, [x19, #32]
  42a658:	b	429ea0 <nftw@plt+0x27320>
  42a65c:	ldp	x1, x0, [x19, #-32]
  42a660:	sub	x20, x19, #0x28
  42a664:	mov	x26, x20
  42a668:	orr	x0, x0, x1
  42a66c:	cbz	x0, 42ad84 <nftw@plt+0x28204>
  42a670:	ldr	w1, [x22, #28]
  42a674:	mov	x0, #0x1                   	// #1
  42a678:	sub	w1, w1, #0x1
  42a67c:	str	w1, [x22, #28]
  42a680:	ldr	w1, [x19, #32]
  42a684:	stp	xzr, x0, [x20, #8]
  42a688:	strb	wzr, [x20, #24]
  42a68c:	strb	wzr, [x20, #25]
  42a690:	str	w1, [x20, #32]
  42a694:	b	42a3f4 <nftw@plt+0x27874>
  42a698:	ldp	x1, x0, [x19, #-32]
  42a69c:	sub	x20, x19, #0x28
  42a6a0:	mov	x26, x20
  42a6a4:	orr	x0, x0, x1
  42a6a8:	cbnz	x0, 42ad84 <nftw@plt+0x28204>
  42a6ac:	ldr	w1, [x22, #28]
  42a6b0:	sub	w1, w1, #0x1
  42a6b4:	str	w1, [x22, #28]
  42a6b8:	b	42a680 <nftw@plt+0x27b00>
  42a6bc:	add	x2, sp, #0x200
  42a6c0:	sub	x20, x19, #0x28
  42a6c4:	ldp	x0, x1, [x19, #-32]
  42a6c8:	add	x12, sp, #0x120
  42a6cc:	stp	x0, x1, [x2, #-248]
  42a6d0:	ldurb	w11, [x19, #-16]
  42a6d4:	ldp	x0, x1, [x19, #8]
  42a6d8:	stp	x0, x1, [sp, #288]
  42a6dc:	ldr	x0, [x20, #24]
  42a6e0:	str	x0, [sp, #280]
  42a6e4:	ldr	x0, [x19, #24]
  42a6e8:	str	x0, [sp, #304]
  42a6ec:	ldp	x18, x26, [x19, #-32]
  42a6f0:	ldp	x15, x10, [x19, #8]
  42a6f4:	ldr	x9, [x22, #1208]
  42a6f8:	cbnz	w11, 42ae38 <nftw@plt+0x282b8>
  42a6fc:	ldrb	w13, [x19, #24]
  42a700:	mov	w14, #0x1                   	// #1
  42a704:	cbz	w13, 42a8d0 <nftw@plt+0x27d50>
  42a708:	and	x0, x26, #0xffffffff
  42a70c:	lsr	x8, x10, #32
  42a710:	and	x2, x10, #0xffffffff
  42a714:	lsr	x4, x26, #32
  42a718:	mov	w5, #0x1                   	// #1
  42a71c:	and	x3, x18, #0xffffffff
  42a720:	mul	x6, x0, x8
  42a724:	strh	w5, [sp, #352]
  42a728:	mul	x1, x0, x2
  42a72c:	lsr	x12, x18, #32
  42a730:	mul	x17, x2, x4
  42a734:	lsl	x5, x6, #32
  42a738:	mul	x16, x3, x8
  42a73c:	adds	x1, x1, x5
  42a740:	mul	x3, x3, x2
  42a744:	cset	x21, cs  // cs = hs, nlast
  42a748:	lsr	x5, x17, #32
  42a74c:	mul	x2, x12, x2
  42a750:	add	x6, x5, x6, lsr #32
  42a754:	lsl	x26, x17, #32
  42a758:	lsl	x17, x16, #32
  42a75c:	madd	x5, x4, x8, x21
  42a760:	adds	x1, x1, x26
  42a764:	lsl	x21, x2, #32
  42a768:	str	x1, [sp, #344]
  42a76c:	adc	x5, x5, x6
  42a770:	adds	x3, x3, x17
  42a774:	cset	x6, cs  // cs = hs, nlast
  42a778:	adds	x3, x21, x3
  42a77c:	cset	x17, cs  // cs = hs, nlast
  42a780:	cbnz	x6, 42aed0 <nftw@plt+0x28350>
  42a784:	cbnz	x17, 42aed0 <nftw@plt+0x28350>
  42a788:	lsr	x2, x2, #32
  42a78c:	add	x16, x2, x16, lsr #32
  42a790:	madd	x8, x12, x8, x16
  42a794:	cbnz	x8, 42aed0 <nftw@plt+0x28350>
  42a798:	cmp	x18, #0x0
  42a79c:	cset	w12, ne  // ne = any
  42a7a0:	cmp	x15, #0x0
  42a7a4:	csel	w12, w12, wzr, ne  // ne = any
  42a7a8:	lsr	x8, x15, #32
  42a7ac:	and	x15, x15, #0xffffffff
  42a7b0:	mul	x6, x0, x8
  42a7b4:	mul	x16, x4, x15
  42a7b8:	mul	x0, x0, x15
  42a7bc:	lsl	x2, x6, #32
  42a7c0:	adds	x0, x0, x2
  42a7c4:	lsl	x2, x16, #32
  42a7c8:	cset	x15, cs  // cs = hs, nlast
  42a7cc:	adds	x0, x2, x0
  42a7d0:	add	x0, x0, x3
  42a7d4:	cset	x2, cs  // cs = hs, nlast
  42a7d8:	add	x0, x0, x5
  42a7dc:	cbnz	x15, 42aec8 <nftw@plt+0x28348>
  42a7e0:	cbnz	x2, 42aec8 <nftw@plt+0x28348>
  42a7e4:	lsr	x16, x16, #32
  42a7e8:	add	x6, x16, x6, lsr #32
  42a7ec:	madd	x4, x4, x8, x6
  42a7f0:	cmp	x4, #0x0
  42a7f4:	csinc	w12, w12, wzr, eq  // eq = none
  42a7f8:	ldr	x4, [sp, #352]
  42a7fc:	add	x5, sp, #0x200
  42a800:	stp	x4, x0, [sp, #328]
  42a804:	cmp	x9, #0x40
  42a808:	add	x26, sp, #0x150
  42a80c:	ldp	x2, x3, [sp, #336]
  42a810:	stp	x2, x3, [x5, #-200]
  42a814:	add	x3, sp, #0x138
  42a818:	b.ls	42ae48 <nftw@plt+0x282c8>  // b.plast
  42a81c:	sub	x2, x9, #0x40
  42a820:	cmp	x2, #0x3f
  42a824:	b.hi	42b3c4 <nftw@plt+0x28844>  // b.pmore
  42a828:	mov	x6, #0xffffffffffffffff    	// #-1
  42a82c:	lsl	x6, x6, x2
  42a830:	bic	x6, x0, x6
  42a834:	ldr	x2, [x3, #16]
  42a838:	stp	x6, x1, [sp, #312]
  42a83c:	ldp	x4, x5, [x3]
  42a840:	add	x3, sp, #0x260
  42a844:	stp	x4, x5, [x26]
  42a848:	stp	x4, x5, [x3, #-248]
  42a84c:	str	x2, [x26, #16]
  42a850:	str	x2, [sp, #376]
  42a854:	cmp	x6, x0
  42a858:	mov	x2, x1
  42a85c:	csinc	w12, w12, wzr, eq  // eq = none
  42a860:	cbnz	w11, 42ae84 <nftw@plt+0x28304>
  42a864:	mov	w0, #0x0                   	// #0
  42a868:	cbnz	w13, 42a8a8 <nftw@plt+0x27d28>
  42a86c:	mov	w0, #0x1                   	// #1
  42a870:	cbnz	w12, 42a8a8 <nftw@plt+0x27d28>
  42a874:	cmp	x9, #0x40
  42a878:	b.hi	42b77c <nftw@plt+0x28bfc>  // b.pmore
  42a87c:	sub	w1, w9, #0x1
  42a880:	lsr	x1, x2, x1
  42a884:	mvn	x1, x1
  42a888:	and	w1, w1, #0x1
  42a88c:	eor	w11, w11, #0x1
  42a890:	mov	w0, #0x0                   	// #0
  42a894:	cmp	w11, w1
  42a898:	b.eq	42a8a8 <nftw@plt+0x27d28>  // b.none
  42a89c:	orr	x0, x6, x2
  42a8a0:	cmp	x0, #0x0
  42a8a4:	cset	w0, ne  // ne = any
  42a8a8:	strb	w14, [sp, #352]
  42a8ac:	strb	w0, [sp, #353]
  42a8b0:	ldr	w0, [x19, #32]
  42a8b4:	stp	x6, x2, [sp, #336]
  42a8b8:	ldp	x2, x3, [x26]
  42a8bc:	stp	x2, x3, [x20, #8]
  42a8c0:	ldr	x1, [x26, #16]
  42a8c4:	str	x1, [x20, #24]
  42a8c8:	str	w0, [x20, #32]
  42a8cc:	b	42a3e0 <nftw@plt+0x27860>
  42a8d0:	cmp	x9, #0x40
  42a8d4:	b.hi	42b054 <nftw@plt+0x284d4>  // b.pmore
  42a8d8:	sub	w21, w9, #0x1
  42a8dc:	mov	w11, w13
  42a8e0:	lsr	x0, x26, x21
  42a8e4:	tbnz	w0, #0, 42b6bc <nftw@plt+0x28b3c>
  42a8e8:	lsr	x0, x10, x21
  42a8ec:	mvn	x0, x0
  42a8f0:	and	w0, w0, #0x1
  42a8f4:	mov	w14, #0x0                   	// #0
  42a8f8:	cbnz	w0, 42a708 <nftw@plt+0x27b88>
  42a8fc:	stp	x15, x10, [sp, #288]
  42a900:	eor	w11, w11, #0x1
  42a904:	mov	x1, x9
  42a908:	strb	wzr, [sp, #304]
  42a90c:	add	x0, sp, #0xc0
  42a910:	add	x8, sp, #0xe0
  42a914:	ldp	x2, x3, [x12]
  42a918:	stp	x2, x3, [sp, #192]
  42a91c:	ldr	x2, [x12, #16]
  42a920:	str	x2, [sp, #208]
  42a924:	bl	4280d8 <nftw@plt+0x25558>
  42a928:	ldp	x0, x1, [sp, #224]
  42a92c:	stp	x0, x1, [x12]
  42a930:	mov	w13, #0x0                   	// #0
  42a934:	ldr	x0, [sp, #240]
  42a938:	mov	w14, w13
  42a93c:	ldp	x15, x10, [sp, #288]
  42a940:	str	x0, [x12, #16]
  42a944:	b	42a708 <nftw@plt+0x27b88>
  42a948:	cmp	w7, #0x35
  42a94c:	b.eq	42baf4 <nftw@plt+0x28f74>  // b.none
  42a950:	b.ls	42a9cc <nftw@plt+0x27e4c>  // b.plast
  42a954:	sub	w0, w7, #0x37
  42a958:	and	w0, w0, #0xff
  42a95c:	cmp	w0, #0x5
  42a960:	b.hi	42ba30 <nftw@plt+0x28eb0>  // b.pmore
  42a964:	cbz	w24, 42a9d8 <nftw@plt+0x27e58>
  42a968:	str	wzr, [sp, #336]
  42a96c:	cmp	w7, #0x37
  42a970:	b.eq	42afe0 <nftw@plt+0x28460>  // b.none
  42a974:	mov	x1, x27
  42a978:	add	x2, sp, #0x138
  42a97c:	add	x3, sp, #0x150
  42a980:	mov	x0, x22
  42a984:	bl	421658 <nftw@plt+0x1ead8>
  42a988:	mov	w1, w0
  42a98c:	ldr	w2, [sp, #336]
  42a990:	cbnz	w2, 42af04 <nftw@plt+0x28384>
  42a994:	mov	w2, #0x0                   	// #0
  42a998:	mov	x3, #0x0                   	// #0
  42a99c:	tbnz	w0, #31, 42b690 <nftw@plt+0x28b10>
  42a9a0:	add	x20, sp, #0x168
  42a9a4:	mov	w0, #0x0                   	// #0
  42a9a8:	stp	x3, x1, [sp, #360]
  42a9ac:	mov	w24, #0x0                   	// #0
  42a9b0:	strb	w2, [sp, #376]
  42a9b4:	strb	w0, [sp, #377]
  42a9b8:	ldp	x0, x1, [x20]
  42a9bc:	stp	x0, x1, [x19, #8]
  42a9c0:	ldr	x0, [x20, #16]
  42a9c4:	str	x0, [x19, #24]
  42a9c8:	b	429ea0 <nftw@plt+0x27320>
  42a9cc:	cmp	w7, #0x25
  42a9d0:	b.ne	42abf4 <nftw@plt+0x28074>  // b.any
  42a9d4:	cbnz	w24, 42af10 <nftw@plt+0x28390>
  42a9d8:	mov	w26, w9
  42a9dc:	mov	x1, x27
  42a9e0:	mov	x0, x22
  42a9e4:	bl	4307f8 <nftw@plt+0x2dc78>
  42a9e8:	mov	w2, w26
  42a9ec:	mov	x5, x0
  42a9f0:	mov	w3, #0x0                   	// #0
  42a9f4:	mov	x0, x22
  42a9f8:	mov	w1, #0x3                   	// #3
  42a9fc:	mov	w24, #0x0                   	// #0
  42aa00:	adrp	x4, 47c000 <_obstack_memory_used@@Base+0x1abb8>
  42aa04:	add	x4, x4, #0x2f0
  42aa08:	bl	4275f8 <nftw@plt+0x24a78>
  42aa0c:	mov	w0, w24
  42aa10:	ldp	x19, x20, [sp, #16]
  42aa14:	ldp	x21, x22, [sp, #32]
  42aa18:	ldp	x23, x24, [sp, #48]
  42aa1c:	ldp	x25, x26, [sp, #64]
  42aa20:	ldp	x27, x28, [sp, #80]
  42aa24:	ldp	x29, x30, [sp], #384
  42aa28:	ret
  42aa2c:	cmp	w28, #0x12
  42aa30:	b.ne	42aaa4 <nftw@plt+0x27f24>  // b.any
  42aa34:	ldr	w0, [x19, #36]
  42aa38:	cmp	w0, #0x11
  42aa3c:	b.ne	42ba84 <nftw@plt+0x28f04>  // b.any
  42aa40:	ldp	x2, x1, [x19, #-32]
  42aa44:	add	x19, x19, #0x28
  42aa48:	ldr	w0, [x22, #28]
  42aa4c:	orr	x1, x1, x2
  42aa50:	cmp	x1, #0x0
  42aa54:	sub	w1, w0, #0x1
  42aa58:	csinc	w0, w1, w0, eq  // eq = none
  42aa5c:	str	w0, [x22, #28]
  42aa60:	ldr	x0, [x22, #1104]
  42aa64:	cmp	x0, x19
  42aa68:	b.ne	42a64c <nftw@plt+0x27acc>  // b.any
  42aa6c:	ldr	x0, [x22, #1096]
  42aa70:	str	w9, [sp, #104]
  42aa74:	sub	x19, x19, x0
  42aa78:	asr	x20, x19, #3
  42aa7c:	add	x20, x20, #0x32
  42aa80:	lsl	x20, x20, #4
  42aa84:	mov	x1, x20
  42aa88:	bl	4615e8 <_obstack_memory_used@@Base+0x1a0>
  42aa8c:	ldr	w9, [sp, #104]
  42aa90:	add	x19, x0, x19
  42aa94:	str	x0, [x22, #1096]
  42aa98:	add	x0, x0, x20
  42aa9c:	str	x0, [x22, #1104]
  42aaa0:	b	42a64c <nftw@plt+0x27acc>
  42aaa4:	cmp	w28, #0x15
  42aaa8:	b.eq	429ea0 <nftw@plt+0x27320>  // b.none
  42aaac:	b	42a63c <nftw@plt+0x27abc>
  42aab0:	ldrb	w1, [x19, #24]
  42aab4:	sub	x20, x19, #0x28
  42aab8:	ldurb	w0, [x19, #-16]
  42aabc:	cmp	w0, w1
  42aac0:	b.eq	429f3c <nftw@plt+0x273bc>  // b.none
  42aac4:	ldr	x0, [x22, #1208]
  42aac8:	cmp	x0, #0x40
  42aacc:	cbz	w1, 42ada8 <nftw@plt+0x28228>
  42aad0:	ldp	x2, x1, [x19, #-32]
  42aad4:	b.hi	42b10c <nftw@plt+0x2858c>  // b.pmore
  42aad8:	sub	w0, w0, #0x1
  42aadc:	lsr	x0, x1, x0
  42aae0:	mvn	x0, x0
  42aae4:	and	w0, w0, #0x1
  42aae8:	cbnz	w0, 429f3c <nftw@plt+0x273bc>
  42aaec:	ldr	x1, [x19]
  42aaf0:	mov	x0, x22
  42aaf4:	ldr	w20, [x20, #32]
  42aaf8:	bl	4307f8 <nftw@plt+0x2dc78>
  42aafc:	mov	x5, x0
  42ab00:	ldr	x4, [sp, #112]
  42ab04:	mov	w2, w20
  42ab08:	mov	x0, x22
  42ab0c:	mov	w3, #0x0                   	// #0
  42ab10:	mov	w1, #0x0                   	// #0
  42ab14:	bl	4275f8 <nftw@plt+0x24a78>
  42ab18:	ldr	w21, [x19, #36]
  42ab1c:	b	429f3c <nftw@plt+0x273bc>
  42ab20:	cbz	w24, 42abbc <nftw@plt+0x2803c>
  42ab24:	ldr	w21, [x19, #36]
  42ab28:	sub	w0, w21, #0x1
  42ab2c:	cmp	w0, #0x1b
  42ab30:	b.hi	429f48 <nftw@plt+0x273c8>  // b.pmore
  42ab34:	sbfiz	x1, x21, #1, #32
  42ab38:	adrp	x23, 47c000 <_obstack_memory_used@@Base+0x1abb8>
  42ab3c:	add	x23, x23, #0x7a0
  42ab40:	sxtw	x0, w21
  42ab44:	ldrb	w1, [x23, x1]
  42ab48:	cmp	w1, #0x10
  42ab4c:	b.ls	42baa8 <nftw@plt+0x28f28>  // b.plast
  42ab50:	mov	w7, #0x10                  	// #16
  42ab54:	mov	w28, #0x1c                  	// #28
  42ab58:	b	429f10 <nftw@plt+0x27390>
  42ab5c:	cmp	w25, #0x1
  42ab60:	mov	w28, w7
  42ab64:	cset	w0, eq  // eq = none
  42ab68:	str	w0, [sp, #124]
  42ab6c:	mov	w0, w7
  42ab70:	cbz	w24, 42b7d8 <nftw@plt+0x28c58>
  42ab74:	ldr	w21, [x19, #36]
  42ab78:	sub	w1, w21, #0x1
  42ab7c:	cmp	w1, #0x1b
  42ab80:	b.hi	429f48 <nftw@plt+0x273c8>  // b.pmore
  42ab84:	cmp	w28, #0x14
  42ab88:	b.eq	42a63c <nftw@plt+0x27abc>  // b.none
  42ab8c:	adrp	x23, 47c000 <_obstack_memory_used@@Base+0x1abb8>
  42ab90:	add	x23, x23, #0x7a0
  42ab94:	sbfiz	x1, x0, #1, #32
  42ab98:	sbfiz	x2, x21, #1, #32
  42ab9c:	ubfx	x7, x7, #1, #1
  42aba0:	sxtw	x0, w21
  42aba4:	ldrb	w3, [x23, x1]
  42aba8:	ldrb	w1, [x23, x2]
  42abac:	sub	w7, w3, w7
  42abb0:	cmp	w7, w1
  42abb4:	b.cc	429f10 <nftw@plt+0x27390>  // b.lo, b.ul, b.last
  42abb8:	b	42a57c <nftw@plt+0x279fc>
  42abbc:	ldr	w21, [x19, #36]
  42abc0:	mov	w28, w7
  42abc4:	sub	w0, w21, #0x1
  42abc8:	cmp	w0, #0x1b
  42abcc:	b.hi	429f48 <nftw@plt+0x273c8>  // b.pmore
  42abd0:	sbfiz	x1, x21, #1, #32
  42abd4:	adrp	x23, 47c000 <_obstack_memory_used@@Base+0x1abb8>
  42abd8:	add	x23, x23, #0x7a0
  42abdc:	sxtw	x0, w21
  42abe0:	ldrb	w1, [x23, x1]
  42abe4:	cmp	w1, #0xd
  42abe8:	b.ls	42a608 <nftw@plt+0x27a88>  // b.plast
  42abec:	mov	w7, #0xd                   	// #13
  42abf0:	b	429f10 <nftw@plt+0x27390>
  42abf4:	sub	w0, w7, #0x1
  42abf8:	mov	w28, w7
  42abfc:	cmp	w0, #0x19
  42ac00:	b.hi	42ba30 <nftw@plt+0x28eb0>  // b.pmore
  42ac04:	adrp	x23, 47c000 <_obstack_memory_used@@Base+0x1abb8>
  42ac08:	add	x23, x23, #0x7a0
  42ac0c:	add	x1, x23, w7, sxtw #1
  42ac10:	mov	w0, w7
  42ac14:	ldrb	w7, [x1, #1]
  42ac18:	tbnz	w7, #0, 42ab70 <nftw@plt+0x27ff0>
  42ac1c:	ldr	w21, [x19, #36]
  42ac20:	cbz	w24, 42ab78 <nftw@plt+0x27ff8>
  42ac24:	cmp	w28, #0x15
  42ac28:	b.ne	42ac7c <nftw@plt+0x280fc>  // b.any
  42ac2c:	cmp	w21, #0x14
  42ac30:	b.eq	42bac4 <nftw@plt+0x28f44>  // b.none
  42ac34:	and	w1, w21, #0xfffffffd
  42ac38:	mov	w0, w28
  42ac3c:	cmp	w1, #0x14
  42ac40:	b.eq	42ab94 <nftw@plt+0x28014>  // b.none
  42ac44:	ldr	x1, [x19]
  42ac48:	mov	w26, w9
  42ac4c:	mov	x0, x22
  42ac50:	mov	w24, #0x0                   	// #0
  42ac54:	bl	4307f8 <nftw@plt+0x2dc78>
  42ac58:	mov	x5, x0
  42ac5c:	mov	w2, w26
  42ac60:	mov	x0, x22
  42ac64:	adrp	x4, 47c000 <_obstack_memory_used@@Base+0x1abb8>
  42ac68:	mov	w3, #0x0                   	// #0
  42ac6c:	add	x4, x4, #0x548
  42ac70:	mov	w1, #0x3                   	// #3
  42ac74:	bl	4275f8 <nftw@plt+0x24a78>
  42ac78:	b	429f64 <nftw@plt+0x273e4>
  42ac7c:	cmp	w28, #0x16
  42ac80:	b.ne	42af54 <nftw@plt+0x283d4>  // b.any
  42ac84:	cmp	w21, #0x16
  42ac88:	b.ne	42ac34 <nftw@plt+0x280b4>  // b.any
  42ac8c:	ldr	w0, [sp, #188]
  42ac90:	adrp	x1, 47c000 <_obstack_memory_used@@Base+0x1abb8>
  42ac94:	adrp	x5, 47c000 <_obstack_memory_used@@Base+0x1abb8>
  42ac98:	add	x1, x1, #0x2e8
  42ac9c:	cmp	w0, #0x0
  42aca0:	add	x5, x5, #0x2e0
  42aca4:	csel	x5, x5, x1, ne  // ne = any
  42aca8:	mov	w2, w9
  42acac:	mov	x0, x22
  42acb0:	adrp	x4, 47c000 <_obstack_memory_used@@Base+0x1abb8>
  42acb4:	mov	w3, #0x0                   	// #0
  42acb8:	add	x4, x4, #0x530
  42acbc:	mov	w24, #0x0                   	// #0
  42acc0:	mov	w1, #0x3                   	// #3
  42acc4:	bl	4275f8 <nftw@plt+0x24a78>
  42acc8:	b	429f64 <nftw@plt+0x273e4>
  42accc:	mov	x0, x22
  42acd0:	adrp	x2, 47c000 <_obstack_memory_used@@Base+0x1abb8>
  42acd4:	mov	w1, #0x2                   	// #2
  42acd8:	add	x2, x2, #0x6d8
  42acdc:	bl	427178 <nftw@plt+0x245f8>
  42ace0:	b	42a3f4 <nftw@plt+0x27874>
  42ace4:	sub	w0, w21, #0xc
  42ace8:	cmp	w0, #0x1
  42acec:	b.hi	42b33c <nftw@plt+0x287bc>  // b.pmore
  42acf0:	cbz	w6, 42b420 <nftw@plt+0x288a0>
  42acf4:	add	x9, sp, #0xc0
  42acf8:	cmp	x5, #0x0
  42acfc:	stp	x13, x11, [sp, #312]
  42ad00:	csinv	x4, x4, xzr, eq  // eq = none
  42ad04:	strb	w12, [sp, #328]
  42ad08:	mov	x2, x4
  42ad0c:	mov	x0, x9
  42ad10:	add	x8, sp, #0xe0
  42ad14:	ldp	x4, x5, [x3]
  42ad18:	stp	x4, x5, [x9]
  42ad1c:	cmp	w21, #0xd
  42ad20:	str	x3, [sp, #128]
  42ad24:	ldr	x4, [x3, #16]
  42ad28:	str	x4, [x9, #16]
  42ad2c:	b.eq	42b790 <nftw@plt+0x28c10>  // b.none
  42ad30:	bl	428360 <nftw@plt+0x257e0>
  42ad34:	ldr	x3, [sp, #128]
  42ad38:	ldp	x0, x1, [sp, #224]
  42ad3c:	stp	x0, x1, [x3]
  42ad40:	ldr	x0, [sp, #240]
  42ad44:	ldp	x5, x4, [sp, #312]
  42ad48:	str	x0, [x3, #16]
  42ad4c:	ldrb	w6, [sp, #328]
  42ad50:	stp	x5, x4, [sp, #312]
  42ad54:	add	x7, sp, #0x260
  42ad58:	ldrb	w2, [sp, #329]
  42ad5c:	strb	w6, [sp, #328]
  42ad60:	add	x12, sp, #0x168
  42ad64:	ldp	x0, x1, [x3]
  42ad68:	stp	x0, x1, [x7, #-248]
  42ad6c:	ldr	x0, [x3, #16]
  42ad70:	str	x0, [sp, #376]
  42ad74:	stp	x5, x4, [sp, #360]
  42ad78:	strb	w6, [sp, #376]
  42ad7c:	strb	w2, [sp, #377]
  42ad80:	b	42a358 <nftw@plt+0x277d8>
  42ad84:	ldp	x1, x0, [x19, #8]
  42ad88:	orr	x0, x0, x1
  42ad8c:	cmp	x0, #0x0
  42ad90:	cset	x0, ne  // ne = any
  42ad94:	b	42a680 <nftw@plt+0x27b00>
  42ad98:	ldp	x1, x0, [x19, #8]
  42ad9c:	orr	x0, x0, x1
  42ada0:	cbnz	x0, 42a63c <nftw@plt+0x27abc>
  42ada4:	b	42a630 <nftw@plt+0x27ab0>
  42ada8:	ldp	x2, x1, [x19, #8]
  42adac:	b.hi	42b124 <nftw@plt+0x285a4>  // b.pmore
  42adb0:	sub	w0, w0, #0x1
  42adb4:	lsr	x0, x1, x0
  42adb8:	mvn	x0, x0
  42adbc:	and	w0, w0, #0x1
  42adc0:	cbnz	w0, 429f3c <nftw@plt+0x273bc>
  42adc4:	ldr	x1, [x19]
  42adc8:	mov	x0, x22
  42adcc:	ldr	w20, [x19, #32]
  42add0:	bl	4307f8 <nftw@plt+0x2dc78>
  42add4:	mov	x5, x0
  42add8:	ldr	x4, [sp, #176]
  42addc:	b	42ab04 <nftw@plt+0x27f84>
  42ade0:	ldp	x0, x1, [x19, #8]
  42ade4:	stp	x0, x1, [x19, #-72]
  42ade8:	sub	x20, x19, #0x28
  42adec:	ldr	x0, [x19, #24]
  42adf0:	str	x0, [x2, #24]
  42adf4:	ldr	w0, [x19, #32]
  42adf8:	stur	w0, [x19, #-48]
  42adfc:	b	42a544 <nftw@plt+0x279c4>
  42ae00:	mov	w15, #0x1                   	// #1
  42ae04:	mov	w26, #0x0                   	// #0
  42ae08:	mov	w14, #0x0                   	// #0
  42ae0c:	str	w13, [sp, #184]
  42ae10:	b	42a22c <nftw@plt+0x276ac>
  42ae14:	lsl	x3, x12, x2
  42ae18:	orr	x13, x13, x3
  42ae1c:	cbnz	x2, 42a300 <nftw@plt+0x27780>
  42ae20:	b	42a324 <nftw@plt+0x277a4>
  42ae24:	lsl	x3, x11, x3
  42ae28:	bic	x3, x9, x3
  42ae2c:	csel	x9, x3, x9, ne  // ne = any
  42ae30:	mov	x6, #0x0                   	// #0
  42ae34:	b	42a2ec <nftw@plt+0x2776c>
  42ae38:	mov	w13, w11
  42ae3c:	mov	w14, #0x1                   	// #1
  42ae40:	mov	w11, #0x0                   	// #0
  42ae44:	b	42a708 <nftw@plt+0x27b88>
  42ae48:	b.eq	42b04c <nftw@plt+0x284cc>  // b.none
  42ae4c:	mov	x2, #0xffffffffffffffff    	// #-1
  42ae50:	str	x4, [sp, #376]
  42ae54:	lsl	x2, x2, x9
  42ae58:	bic	x2, x1, x2
  42ae5c:	stp	xzr, x2, [sp, #312]
  42ae60:	cmp	x2, x1
  42ae64:	mov	x6, #0x0                   	// #0
  42ae68:	ldp	x4, x5, [x3]
  42ae6c:	add	x3, sp, #0x260
  42ae70:	stp	x4, x5, [x26]
  42ae74:	stp	x4, x5, [x3, #-248]
  42ae78:	b.eq	42a854 <nftw@plt+0x27cd4>  // b.none
  42ae7c:	mov	w12, #0x1                   	// #1
  42ae80:	cbz	w11, 42a864 <nftw@plt+0x27ce4>
  42ae84:	mov	w0, #0x1                   	// #1
  42ae88:	stp	x6, x2, [sp, #336]
  42ae8c:	mov	x1, x9
  42ae90:	strh	w0, [sp, #352]
  42ae94:	add	x8, sp, #0xe0
  42ae98:	add	x0, sp, #0xc0
  42ae9c:	ldp	x2, x3, [x26]
  42aea0:	stp	x2, x3, [sp, #192]
  42aea4:	ldr	x2, [x26, #16]
  42aea8:	str	x2, [sp, #208]
  42aeac:	bl	4280d8 <nftw@plt+0x25558>
  42aeb0:	ldp	x0, x1, [sp, #224]
  42aeb4:	stp	x0, x1, [x26]
  42aeb8:	ldr	x0, [sp, #240]
  42aebc:	ldp	x6, x2, [sp, #336]
  42aec0:	str	x0, [x26, #16]
  42aec4:	b	42a864 <nftw@plt+0x27ce4>
  42aec8:	mov	w12, #0x1                   	// #1
  42aecc:	b	42a7f8 <nftw@plt+0x27c78>
  42aed0:	mov	w12, #0x1                   	// #1
  42aed4:	b	42a7a8 <nftw@plt+0x27c28>
  42aed8:	cmp	w21, #0x19
  42aedc:	mov	x0, #0x1                   	// #1
  42aee0:	b.eq	42a0ac <nftw@plt+0x2752c>  // b.none
  42aee4:	cmp	w21, #0x3
  42aee8:	mov	x0, #0x0                   	// #0
  42aeec:	b.eq	42a0ac <nftw@plt+0x2752c>  // b.none
  42aef0:	cmp	w21, #0x2
  42aef4:	strh	wzr, [sp, #352]
  42aef8:	cset	x0, eq  // eq = none
  42aefc:	stp	xzr, x0, [sp, #336]
  42af00:	b	42a1a0 <nftw@plt+0x27620>
  42af04:	mov	w2, #0x1                   	// #1
  42af08:	mov	x3, #0x0                   	// #0
  42af0c:	b	42a9a0 <nftw@plt+0x27e20>
  42af10:	ldrb	w0, [x22, #18]
  42af14:	str	wzr, [sp, #336]
  42af18:	cbnz	w0, 42af30 <nftw@plt+0x283b0>
  42af1c:	ldrb	w0, [x22, #1154]
  42af20:	cbnz	w0, 42b9e4 <nftw@plt+0x28e64>
  42af24:	ldrb	w0, [x22, #1132]
  42af28:	cbnz	w0, 42b99c <nftw@plt+0x28e1c>
  42af2c:	nop
  42af30:	add	x1, sp, #0x138
  42af34:	mov	x0, x22
  42af38:	bl	425a28 <nftw@plt+0x22ea8>
  42af3c:	ldr	w0, [sp, #336]
  42af40:	mov	x3, #0x0                   	// #0
  42af44:	ldr	w1, [sp, #312]
  42af48:	cmp	w0, #0x0
  42af4c:	cset	w2, ne  // ne = any
  42af50:	b	42a9a0 <nftw@plt+0x27e20>
  42af54:	and	w1, w21, #0xfffffffd
  42af58:	cmp	w1, #0x14
  42af5c:	b.ne	42ac44 <nftw@plt+0x280c4>  // b.any
  42af60:	sub	w1, w28, #0x15
  42af64:	cmp	w1, #0x1
  42af68:	b.ls	42ab94 <nftw@plt+0x28014>  // b.plast
  42af6c:	mov	w26, w9
  42af70:	mov	x1, x27
  42af74:	mov	x0, x22
  42af78:	bl	4307f8 <nftw@plt+0x2dc78>
  42af7c:	mov	w2, w26
  42af80:	mov	x5, x0
  42af84:	adrp	x4, 47c000 <_obstack_memory_used@@Base+0x1abb8>
  42af88:	mov	x0, x22
  42af8c:	add	x4, x4, #0x570
  42af90:	mov	w3, #0x0                   	// #0
  42af94:	mov	w1, #0x3                   	// #3
  42af98:	mov	w24, #0x0                   	// #0
  42af9c:	bl	4275f8 <nftw@plt+0x24a78>
  42afa0:	b	429f64 <nftw@plt+0x273e4>
  42afa4:	cmp	x1, #0x40
  42afa8:	sub	x8, x1, #0x1
  42afac:	mov	x2, #0x0                   	// #0
  42afb0:	b.hi	42b490 <nftw@plt+0x28910>  // b.pmore
  42afb4:	mov	x0, #0x1                   	// #1
  42afb8:	lsl	x0, x0, x8
  42afbc:	tst	x10, x0
  42afc0:	b.ne	42a260 <nftw@plt+0x276e0>  // b.any
  42afc4:	nop
  42afc8:	lsr	x0, x0, #1
  42afcc:	mov	x2, x8
  42afd0:	tst	x10, x0
  42afd4:	sub	x8, x8, #0x1
  42afd8:	b.eq	42afc8 <nftw@plt+0x28448>  // b.none
  42afdc:	b	42a25c <nftw@plt+0x276dc>
  42afe0:	mov	w3, w9
  42afe4:	mov	x1, x27
  42afe8:	mov	x0, x22
  42afec:	mov	x2, #0x0                   	// #0
  42aff0:	str	w9, [sp, #104]
  42aff4:	bl	428ff0 <nftw@plt+0x26470>
  42aff8:	str	w0, [sp, #312]
  42affc:	ldr	w9, [sp, #104]
  42b000:	tbnz	w0, #24, 42b5cc <nftw@plt+0x28a4c>
  42b004:	and	w1, w0, #0xf
  42b008:	cmp	w1, #0x1
  42b00c:	b.eq	42b5a0 <nftw@plt+0x28a20>  // b.none
  42b010:	cmp	w1, #0x2
  42b014:	b.ne	42b034 <nftw@plt+0x284b4>  // b.any
  42b018:	adrp	x4, 47c000 <_obstack_memory_used@@Base+0x1abb8>
  42b01c:	mov	w2, w9
  42b020:	add	x4, x4, #0x350
  42b024:	mov	w3, #0x0                   	// #0
  42b028:	mov	x0, x22
  42b02c:	mov	w1, #0x3                   	// #3
  42b030:	bl	4275f8 <nftw@plt+0x24a78>
  42b034:	ldr	w0, [sp, #336]
  42b038:	mov	x1, #0x0                   	// #0
  42b03c:	mov	x3, #0x0                   	// #0
  42b040:	cmp	w0, #0x0
  42b044:	cset	w2, ne  // ne = any
  42b048:	b	42a9a0 <nftw@plt+0x27e20>
  42b04c:	mov	x6, #0x0                   	// #0
  42b050:	b	42a834 <nftw@plt+0x27cb4>
  42b054:	sub	w21, w9, #0x41
  42b058:	mov	w11, w13
  42b05c:	lsr	x0, x18, x21
  42b060:	tbnz	w0, #0, 42b648 <nftw@plt+0x28ac8>
  42b064:	lsr	x0, x15, x21
  42b068:	mvn	x0, x0
  42b06c:	and	w0, w0, #0x1
  42b070:	b	42a8f4 <nftw@plt+0x27d74>
  42b074:	sub	w14, w1, #0x41
  42b078:	mov	w26, #0x0                   	// #0
  42b07c:	lsr	x0, x6, x14
  42b080:	tbnz	w0, #0, 42b5f0 <nftw@plt+0x28a70>
  42b084:	lsr	x0, x4, x14
  42b088:	mvn	x0, x0
  42b08c:	and	w0, w0, #0x1
  42b090:	b	42a438 <nftw@plt+0x278b8>
  42b094:	add	x2, sp, #0x200
  42b098:	stp	x6, x9, [sp, #264]
  42b09c:	add	x0, sp, #0xc0
  42b0a0:	strb	w15, [sp, #280]
  42b0a4:	add	x8, sp, #0xe0
  42b0a8:	strb	wzr, [sp, #281]
  42b0ac:	ldp	x2, x3, [x2, #-248]
  42b0b0:	stp	x2, x3, [sp, #192]
  42b0b4:	ldr	x2, [sp, #280]
  42b0b8:	str	x2, [sp, #208]
  42b0bc:	bl	4280d8 <nftw@plt+0x25558>
  42b0c0:	ldp	x0, x11, [sp, #232]
  42b0c4:	stp	x0, x11, [sp, #272]
  42b0c8:	ldr	x0, [sp, #224]
  42b0cc:	str	x0, [sp, #264]
  42b0d0:	ldr	x9, [sp, #272]
  42b0d4:	and	w15, w11, #0xff
  42b0d8:	mov	x6, x0
  42b0dc:	ubfx	w11, w11, #8, #8
  42b0e0:	b	42a334 <nftw@plt+0x277b4>
  42b0e4:	mov	x0, x22
  42b0e8:	adrp	x2, 47c000 <_obstack_memory_used@@Base+0x1abb8>
  42b0ec:	mov	w1, #0x3                   	// #3
  42b0f0:	add	x2, x2, #0x6b8
  42b0f4:	mov	w24, #0x0                   	// #0
  42b0f8:	bl	427178 <nftw@plt+0x245f8>
  42b0fc:	b	429f64 <nftw@plt+0x273e4>
  42b100:	and	x1, x6, x5
  42b104:	and	x2, x4, x3
  42b108:	b	42a194 <nftw@plt+0x27614>
  42b10c:	sub	w0, w0, #0x41
  42b110:	lsr	x0, x2, x0
  42b114:	mvn	x0, x0
  42b118:	and	w0, w0, #0x1
  42b11c:	cbnz	w0, 429f3c <nftw@plt+0x273bc>
  42b120:	b	42aaec <nftw@plt+0x27f6c>
  42b124:	sub	w0, w0, #0x41
  42b128:	lsr	x0, x2, x0
  42b12c:	mvn	x0, x0
  42b130:	and	w0, w0, #0x1
  42b134:	cbnz	w0, 429f3c <nftw@plt+0x273bc>
  42b138:	b	42adc4 <nftw@plt+0x28244>
  42b13c:	ldr	w0, [sp, #184]
  42b140:	cbnz	w0, 42b3e8 <nftw@plt+0x28868>
  42b144:	add	x3, sp, #0x138
  42b148:	mov	w15, #0x0                   	// #0
  42b14c:	cbnz	w14, 42b8f0 <nftw@plt+0x28d70>
  42b150:	cmp	x1, #0x40
  42b154:	b.hi	42b80c <nftw@plt+0x28c8c>  // b.pmore
  42b158:	sub	w0, w1, #0x1
  42b15c:	lsr	x0, x13, x0
  42b160:	mvn	x0, x0
  42b164:	and	w0, w0, #0x1
  42b168:	eor	w14, w14, #0x1
  42b16c:	mov	w11, #0x0                   	// #0
  42b170:	cmp	w0, w14, uxtb
  42b174:	b.eq	42b184 <nftw@plt+0x28604>  // b.none
  42b178:	orr	x0, x8, x13
  42b17c:	cmp	x0, #0x0
  42b180:	cset	w11, ne  // ne = any
  42b184:	mov	x9, x13
  42b188:	mov	x6, x8
  42b18c:	b	42b3f8 <nftw@plt+0x28878>
  42b190:	subs	x8, x11, x4
  42b194:	cmp	x11, x4
  42b198:	sbc	x0, x13, x5
  42b19c:	cbz	w12, 42b4b8 <nftw@plt+0x28938>
  42b1a0:	cmp	x1, #0x40
  42b1a4:	mov	w6, #0x1                   	// #1
  42b1a8:	b.ls	42b4c4 <nftw@plt+0x28944>  // b.plast
  42b1ac:	sub	x1, x1, #0x40
  42b1b0:	mov	x2, #0xffffffffffffffff    	// #-1
  42b1b4:	cmp	x1, #0x40
  42b1b8:	lsl	x2, x2, x1
  42b1bc:	bic	x2, x0, x2
  42b1c0:	csel	x0, x2, x0, cc  // cc = lo, ul, last
  42b1c4:	cbz	w12, 42b864 <nftw@plt+0x28ce4>
  42b1c8:	mov	x4, x8
  42b1cc:	mov	x5, x0
  42b1d0:	add	x12, sp, #0x168
  42b1d4:	mov	w2, #0x0                   	// #0
  42b1d8:	b	42ad74 <nftw@plt+0x281f4>
  42b1dc:	mvn	x8, x20
  42b1e0:	mvn	x2, x4
  42b1e4:	stp	x8, x2, [sp, #312]
  42b1e8:	add	x26, sp, #0x150
  42b1ec:	strb	w5, [sp, #328]
  42b1f0:	strb	w1, [sp, #329]
  42b1f4:	ldr	x6, [x22, #1208]
  42b1f8:	ldp	x0, x1, [x3]
  42b1fc:	stp	x0, x1, [sp, #336]
  42b200:	cmp	x6, #0x40
  42b204:	ldr	x0, [x3, #16]
  42b208:	str	x0, [sp, #352]
  42b20c:	b.hi	42b49c <nftw@plt+0x2891c>  // b.pmore
  42b210:	mov	x0, #0xffffffffffffffff    	// #-1
  42b214:	mov	x20, #0x0                   	// #0
  42b218:	lsl	x0, x0, x6
  42b21c:	orr	x0, x0, x4
  42b220:	mvn	x0, x0
  42b224:	csel	x2, x0, x2, ne  // ne = any
  42b228:	stp	x20, x2, [sp, #336]
  42b22c:	add	x6, sp, #0x260
  42b230:	mov	x4, x2
  42b234:	ldp	x0, x1, [x26]
  42b238:	add	x12, sp, #0x168
  42b23c:	ldr	x2, [x26, #16]
  42b240:	stp	x0, x1, [x6, #-248]
  42b244:	stp	x0, x1, [x3]
  42b248:	mov	w0, #0x0                   	// #0
  42b24c:	str	x2, [x3, #16]
  42b250:	str	x2, [sp, #376]
  42b254:	b	42a110 <nftw@plt+0x27590>
  42b258:	stp	x20, x4, [sp, #312]
  42b25c:	add	x12, sp, #0x168
  42b260:	add	x0, sp, #0xc0
  42b264:	strb	w5, [sp, #328]
  42b268:	add	x8, sp, #0xe0
  42b26c:	strb	w1, [sp, #329]
  42b270:	ldr	x1, [x22, #1208]
  42b274:	str	x3, [sp, #128]
  42b278:	ldp	x4, x5, [x3]
  42b27c:	stp	x4, x5, [sp, #192]
  42b280:	ldr	x2, [x3, #16]
  42b284:	str	x2, [sp, #208]
  42b288:	bl	4280d8 <nftw@plt+0x25558>
  42b28c:	ldr	x3, [sp, #128]
  42b290:	ldp	x0, x1, [sp, #224]
  42b294:	stp	x0, x1, [x3]
  42b298:	ldr	x0, [sp, #240]
  42b29c:	ldp	x20, x4, [sp, #312]
  42b2a0:	str	x0, [x3, #16]
  42b2a4:	ldrb	w5, [sp, #328]
  42b2a8:	ldrb	w0, [sp, #329]
  42b2ac:	b	42a110 <nftw@plt+0x27590>
  42b2b0:	ldrb	w0, [x22, #1138]
  42b2b4:	cbz	w0, 42a10c <nftw@plt+0x2758c>
  42b2b8:	ldr	w0, [x22, #28]
  42b2bc:	cbz	w0, 42b950 <nftw@plt+0x28dd0>
  42b2c0:	add	x12, sp, #0x168
  42b2c4:	mov	w0, #0x0                   	// #0
  42b2c8:	b	42a110 <nftw@plt+0x27590>
  42b2cc:	cmp	x1, #0x40
  42b2d0:	b.hi	42b75c <nftw@plt+0x28bdc>  // b.pmore
  42b2d4:	sub	w1, w1, #0x1
  42b2d8:	lsr	x4, x5, x1
  42b2dc:	mvn	x4, x4
  42b2e0:	lsr	x0, x8, x1
  42b2e4:	mvn	x0, x0
  42b2e8:	and	w1, w4, #0x1
  42b2ec:	and	w0, w0, #0x1
  42b2f0:	cmp	w0, w1
  42b2f4:	b.eq	42a070 <nftw@plt+0x274f0>  // b.none
  42b2f8:	and	x0, x1, #0xff
  42b2fc:	cmp	w21, #0x19
  42b300:	b.eq	42a0ac <nftw@plt+0x2752c>  // b.none
  42b304:	eor	w0, w1, #0x1
  42b308:	cmp	w21, #0x3
  42b30c:	and	x0, x0, #0xff
  42b310:	b.eq	42a0ac <nftw@plt+0x2752c>  // b.none
  42b314:	cmp	w21, #0x2
  42b318:	b.eq	42b9d8 <nftw@plt+0x28e58>  // b.none
  42b31c:	mov	x0, #0x1                   	// #1
  42b320:	cbz	w1, 42a0ac <nftw@plt+0x2752c>
  42b324:	cmp	x3, x2
  42b328:	cset	w1, eq  // eq = none
  42b32c:	cmp	w1, #0x0
  42b330:	ccmp	x8, x5, #0x0, ne  // ne = any
  42b334:	cset	x0, eq  // eq = none
  42b338:	b	42a0ac <nftw@plt+0x2752c>
  42b33c:	ldrb	w0, [x22, #1154]
  42b340:	cbz	w0, 42b380 <nftw@plt+0x28800>
  42b344:	ldrb	w0, [x22, #1152]
  42b348:	cbz	w0, 42b354 <nftw@plt+0x287d4>
  42b34c:	ldr	w0, [x22, #28]
  42b350:	cbnz	w0, 42b380 <nftw@plt+0x28800>
  42b354:	mov	x0, x22
  42b358:	adrp	x2, 47c000 <_obstack_memory_used@@Base+0x1abb8>
  42b35c:	mov	w1, #0x15                  	// #21
  42b360:	add	x2, x2, #0x658
  42b364:	stp	x5, x4, [sp, #128]
  42b368:	str	w6, [sp, #144]
  42b36c:	str	x3, [sp, #152]
  42b370:	bl	4273b8 <nftw@plt+0x24838>
  42b374:	ldp	x5, x4, [sp, #128]
  42b378:	ldr	w6, [sp, #144]
  42b37c:	ldr	x3, [sp, #152]
  42b380:	stp	x5, x4, [sp, #336]
  42b384:	strb	w6, [sp, #352]
  42b388:	ldp	x0, x1, [x26]
  42b38c:	stp	x0, x1, [x3]
  42b390:	ldr	x0, [x26, #16]
  42b394:	str	x0, [x3, #16]
  42b398:	b	42ad50 <nftw@plt+0x281d0>
  42b39c:	ldr	x2, [x19]
  42b3a0:	mov	x0, x22
  42b3a4:	adrp	x4, 47c000 <_obstack_memory_used@@Base+0x1abb8>
  42b3a8:	mov	w3, #0x0                   	// #0
  42b3ac:	add	x4, x4, #0x698
  42b3b0:	mov	w1, #0x3                   	// #3
  42b3b4:	ldr	w2, [x2]
  42b3b8:	mov	w24, #0x0                   	// #0
  42b3bc:	bl	4275f8 <nftw@plt+0x24a78>
  42b3c0:	b	429f64 <nftw@plt+0x273e4>
  42b3c4:	str	x1, [sp, #320]
  42b3c8:	mov	x2, x1
  42b3cc:	mov	x6, x0
  42b3d0:	str	x4, [sp, #376]
  42b3d4:	ldp	x0, x1, [x3]
  42b3d8:	add	x3, sp, #0x260
  42b3dc:	stp	x0, x1, [x26]
  42b3e0:	stp	x0, x1, [x3, #-248]
  42b3e4:	b	42a860 <nftw@plt+0x27ce0>
  42b3e8:	mov	x9, x13
  42b3ec:	mov	x6, x8
  42b3f0:	add	x3, sp, #0x138
  42b3f4:	mov	w11, #0x0                   	// #0
  42b3f8:	stp	x8, x13, [sp, #312]
  42b3fc:	add	x2, sp, #0x260
  42b400:	add	x12, sp, #0x168
  42b404:	strb	w15, [sp, #328]
  42b408:	strb	w11, [sp, #329]
  42b40c:	ldp	x0, x1, [x3]
  42b410:	stp	x0, x1, [x2, #-248]
  42b414:	ldr	x0, [x3, #16]
  42b418:	str	x0, [sp, #376]
  42b41c:	b	42a34c <nftw@plt+0x277cc>
  42b420:	cmp	x1, #0x40
  42b424:	b.hi	42b8c8 <nftw@plt+0x28d48>  // b.pmore
  42b428:	sub	w0, w1, #0x1
  42b42c:	lsr	x0, x4, x0
  42b430:	mvn	x0, x0
  42b434:	and	w0, w0, #0x1
  42b438:	cbnz	w0, 42acf4 <nftw@plt+0x28174>
  42b43c:	stp	x5, x4, [sp, #336]
  42b440:	cmp	w21, #0xd
  42b444:	add	x9, sp, #0xc0
  42b448:	strb	wzr, [sp, #352]
  42b44c:	cset	w21, ne  // ne = any
  42b450:	mov	x0, x9
  42b454:	add	x8, sp, #0xe0
  42b458:	ldp	x4, x5, [x26]
  42b45c:	stp	x4, x5, [sp, #192]
  42b460:	add	w21, w21, #0xc
  42b464:	ldr	x2, [x26, #16]
  42b468:	stp	x1, x3, [sp, #128]
  42b46c:	str	x2, [sp, #208]
  42b470:	bl	4280d8 <nftw@plt+0x25558>
  42b474:	ldp	x4, x5, [sp, #224]
  42b478:	stp	x4, x5, [x26]
  42b47c:	ldr	x0, [sp, #240]
  42b480:	ldp	x1, x3, [sp, #128]
  42b484:	ldp	x5, x4, [sp, #336]
  42b488:	str	x0, [x26, #16]
  42b48c:	b	42acf8 <nftw@plt+0x28178>
  42b490:	sub	x8, x1, #0x41
  42b494:	mov	x2, #0x40                  	// #64
  42b498:	b	42afb4 <nftw@plt+0x28434>
  42b49c:	sub	x6, x6, #0x40
  42b4a0:	mov	x0, #0xffffffffffffffff    	// #-1
  42b4a4:	cmp	x6, #0x40
  42b4a8:	lsl	x6, x0, x6
  42b4ac:	orr	x20, x6, x20
  42b4b0:	csinv	x20, x8, x20, cs  // cs = hs, nlast
  42b4b4:	b	42b228 <nftw@plt+0x286a8>
  42b4b8:	mov	w12, w6
  42b4bc:	cmp	x1, #0x40
  42b4c0:	b.hi	42b1ac <nftw@plt+0x2862c>  // b.pmore
  42b4c4:	mov	x0, #0xffffffffffffffff    	// #-1
  42b4c8:	lsl	x0, x0, x1
  42b4cc:	bic	x0, x8, x0
  42b4d0:	csel	x0, x0, x8, ne  // ne = any
  42b4d4:	cbnz	w12, 42b8b4 <nftw@plt+0x28d34>
  42b4d8:	sub	w1, w1, #0x1
  42b4dc:	lsr	x2, x11, x1
  42b4e0:	mvn	x2, x2
  42b4e4:	lsr	x4, x4, x1
  42b4e8:	mvn	x4, x4
  42b4ec:	and	w3, w2, #0x1
  42b4f0:	and	w2, w4, #0x1
  42b4f4:	cmp	w3, w2
  42b4f8:	b.eq	42ba1c <nftw@plt+0x28e9c>  // b.none
  42b4fc:	lsr	x1, x0, x1
  42b500:	mvn	x2, x1
  42b504:	and	w2, w2, #0x1
  42b508:	mov	x4, x0
  42b50c:	mov	x5, #0x0                   	// #0
  42b510:	eor	w2, w2, w3
  42b514:	add	x12, sp, #0x168
  42b518:	b	42ad74 <nftw@plt+0x281f4>
  42b51c:	mov	w12, w6
  42b520:	cmp	x1, #0x40
  42b524:	b.hi	42a00c <nftw@plt+0x2748c>  // b.pmore
  42b528:	mov	x3, #0xffffffffffffffff    	// #-1
  42b52c:	lsl	x3, x3, x1
  42b530:	bic	x3, x8, x3
  42b534:	csel	x3, x3, x8, ne  // ne = any
  42b538:	cbnz	w12, 42b8a0 <nftw@plt+0x28d20>
  42b53c:	sub	w1, w1, #0x1
  42b540:	lsr	x0, x11, x1
  42b544:	mvn	x0, x0
  42b548:	lsr	x2, x4, x1
  42b54c:	mvn	x2, x2
  42b550:	and	w0, w0, #0x1
  42b554:	and	w2, w2, #0x1
  42b558:	cmp	w0, w2
  42b55c:	b.eq	42ba04 <nftw@plt+0x28e84>  // b.none
  42b560:	mov	x4, x3
  42b564:	add	x12, sp, #0x168
  42b568:	mov	w2, #0x0                   	// #0
  42b56c:	mov	x5, #0x0                   	// #0
  42b570:	b	42ad74 <nftw@plt+0x281f4>
  42b574:	mov	x0, #0x1                   	// #1
  42b578:	b.eq	42a0ac <nftw@plt+0x2752c>  // b.none
  42b57c:	cmp	w21, #0x3
  42b580:	mov	x0, #0x0                   	// #0
  42b584:	b.eq	42a0ac <nftw@plt+0x2752c>  // b.none
  42b588:	cmp	w21, #0x2
  42b58c:	b.ne	42b32c <nftw@plt+0x287ac>  // b.any
  42b590:	cmp	x8, x5
  42b594:	ccmp	x3, x2, #0x0, eq  // eq = none
  42b598:	cset	x0, ne  // ne = any
  42b59c:	b	42a0ac <nftw@plt+0x2752c>
  42b5a0:	tbnz	w0, #13, 42b980 <nftw@plt+0x28e00>
  42b5a4:	add	x20, sp, #0x168
  42b5a8:	mov	w2, w0
  42b5ac:	mov	x1, x27
  42b5b0:	mov	x0, x22
  42b5b4:	mov	x8, x20
  42b5b8:	bl	429ab0 <nftw@plt+0x26f30>
  42b5bc:	ldrb	w2, [sp, #376]
  42b5c0:	ldrb	w0, [sp, #377]
  42b5c4:	ldp	x3, x1, [sp, #360]
  42b5c8:	b	42a9a8 <nftw@plt+0x27e28>
  42b5cc:	mov	x0, x22
  42b5d0:	adrp	x2, 47c000 <_obstack_memory_used@@Base+0x1abb8>
  42b5d4:	mov	w1, #0x3                   	// #3
  42b5d8:	add	x2, x2, #0x320
  42b5dc:	str	w9, [sp, #104]
  42b5e0:	bl	427178 <nftw@plt+0x245f8>
  42b5e4:	ldr	w9, [sp, #104]
  42b5e8:	ldr	w0, [sp, #312]
  42b5ec:	b	42b004 <nftw@plt+0x28484>
  42b5f0:	add	x2, sp, #0x200
  42b5f4:	stp	x6, x9, [sp, #264]
  42b5f8:	add	x0, sp, #0xc0
  42b5fc:	strb	wzr, [sp, #280]
  42b600:	add	x8, sp, #0xe0
  42b604:	strb	w11, [sp, #281]
  42b608:	mov	w26, #0x1                   	// #1
  42b60c:	stp	x1, x4, [sp, #128]
  42b610:	ldp	x16, x17, [x2, #-248]
  42b614:	stp	x16, x17, [sp, #192]
  42b618:	ldr	x2, [sp, #280]
  42b61c:	str	x2, [sp, #208]
  42b620:	bl	4280d8 <nftw@plt+0x25558>
  42b624:	ldp	x6, x0, [sp, #224]
  42b628:	stp	x6, x0, [sp, #264]
  42b62c:	ldr	x11, [sp, #240]
  42b630:	str	x11, [sp, #280]
  42b634:	ldp	x1, x4, [sp, #128]
  42b638:	and	w13, w11, #0xff
  42b63c:	mov	x9, x0
  42b640:	ubfx	w11, w11, #8, #8
  42b644:	b	42b084 <nftw@plt+0x28504>
  42b648:	add	x0, sp, #0x200
  42b64c:	stp	x18, x26, [sp, #264]
  42b650:	mov	w11, w14
  42b654:	strb	wzr, [sp, #280]
  42b658:	add	x8, sp, #0xe0
  42b65c:	mov	x1, x9
  42b660:	ldp	x4, x5, [x0, #-248]
  42b664:	add	x0, sp, #0xc0
  42b668:	ldr	x3, [sp, #280]
  42b66c:	stp	x4, x5, [sp, #192]
  42b670:	str	x3, [sp, #208]
  42b674:	bl	4280d8 <nftw@plt+0x25558>
  42b678:	ldp	x18, x0, [sp, #224]
  42b67c:	stp	x18, x0, [sp, #264]
  42b680:	ldr	x0, [sp, #240]
  42b684:	str	x0, [sp, #280]
  42b688:	ldr	x26, [sp, #272]
  42b68c:	b	42b064 <nftw@plt+0x284e4>
  42b690:	ldr	x0, [x22, #1208]
  42b694:	orr	x1, x1, #0xffffffff00000000
  42b698:	cmp	x0, #0x40
  42b69c:	b.ls	42b9bc <nftw@plt+0x28e3c>  // b.plast
  42b6a0:	sub	x0, x0, #0x40
  42b6a4:	cmp	x0, #0x3f
  42b6a8:	b.hi	42bab8 <nftw@plt+0x28f38>  // b.pmore
  42b6ac:	mov	x3, #0xffffffffffffffff    	// #-1
  42b6b0:	lsl	x3, x3, x0
  42b6b4:	mvn	x3, x3
  42b6b8:	b	42a9a0 <nftw@plt+0x27e20>
  42b6bc:	add	x0, sp, #0x200
  42b6c0:	stp	x18, x26, [sp, #264]
  42b6c4:	mov	w11, w14
  42b6c8:	strb	wzr, [sp, #280]
  42b6cc:	add	x8, sp, #0xe0
  42b6d0:	mov	x1, x9
  42b6d4:	ldp	x4, x5, [x0, #-248]
  42b6d8:	add	x0, sp, #0xc0
  42b6dc:	ldr	x3, [sp, #280]
  42b6e0:	stp	x4, x5, [sp, #192]
  42b6e4:	str	x3, [sp, #208]
  42b6e8:	bl	4280d8 <nftw@plt+0x25558>
  42b6ec:	ldp	x18, x0, [sp, #224]
  42b6f0:	stp	x18, x0, [sp, #264]
  42b6f4:	ldr	x0, [sp, #240]
  42b6f8:	str	x0, [sp, #280]
  42b6fc:	ldr	x26, [sp, #272]
  42b700:	b	42a8e8 <nftw@plt+0x27d68>
  42b704:	add	x2, sp, #0x200
  42b708:	stp	x6, x9, [sp, #264]
  42b70c:	add	x0, sp, #0xc0
  42b710:	strb	wzr, [sp, #280]
  42b714:	add	x8, sp, #0xe0
  42b718:	strb	w11, [sp, #281]
  42b71c:	mov	w26, #0x1                   	// #1
  42b720:	stp	x1, x4, [sp, #128]
  42b724:	ldp	x16, x17, [x2, #-248]
  42b728:	stp	x16, x17, [sp, #192]
  42b72c:	ldr	x2, [sp, #280]
  42b730:	str	x2, [sp, #208]
  42b734:	bl	4280d8 <nftw@plt+0x25558>
  42b738:	ldp	x6, x0, [sp, #224]
  42b73c:	stp	x6, x0, [sp, #264]
  42b740:	ldr	x11, [sp, #240]
  42b744:	str	x11, [sp, #280]
  42b748:	ldp	x1, x4, [sp, #128]
  42b74c:	and	w13, w11, #0xff
  42b750:	mov	x9, x0
  42b754:	ubfx	w11, w11, #8, #8
  42b758:	b	42a42c <nftw@plt+0x278ac>
  42b75c:	sub	w1, w1, #0x41
  42b760:	lsr	x4, x2, x1
  42b764:	mvn	x4, x4
  42b768:	lsr	x0, x3, x1
  42b76c:	mvn	x0, x0
  42b770:	and	w1, w4, #0x1
  42b774:	and	w0, w0, #0x1
  42b778:	b	42b2f0 <nftw@plt+0x28770>
  42b77c:	sub	w1, w9, #0x41
  42b780:	lsr	x1, x6, x1
  42b784:	mvn	x1, x1
  42b788:	and	w1, w1, w0
  42b78c:	b	42a88c <nftw@plt+0x27d0c>
  42b790:	bl	4284e0 <nftw@plt+0x25960>
  42b794:	b	42ad34 <nftw@plt+0x281b4>
  42b798:	mov	w2, w18
  42b79c:	mov	x0, x22
  42b7a0:	adrp	x4, 47c000 <_obstack_memory_used@@Base+0x1abb8>
  42b7a4:	mov	w3, #0x0                   	// #0
  42b7a8:	add	x4, x4, #0x680
  42b7ac:	mov	w1, #0x3                   	// #3
  42b7b0:	str	w13, [sp, #128]
  42b7b4:	str	w11, [sp, #136]
  42b7b8:	stp	x9, x6, [sp, #144]
  42b7bc:	bl	4275f8 <nftw@plt+0x24a78>
  42b7c0:	ldr	w13, [sp, #128]
  42b7c4:	ldr	w11, [sp, #136]
  42b7c8:	ldp	x9, x6, [sp, #144]
  42b7cc:	b	42a4bc <nftw@plt+0x2793c>
  42b7d0:	mov	x2, #0x0                   	// #0
  42b7d4:	b	42a260 <nftw@plt+0x276e0>
  42b7d8:	mov	w26, w9
  42b7dc:	mov	x1, x27
  42b7e0:	mov	x0, x22
  42b7e4:	bl	4307f8 <nftw@plt+0x2dc78>
  42b7e8:	mov	w2, w26
  42b7ec:	mov	x5, x0
  42b7f0:	adrp	x4, 47c000 <_obstack_memory_used@@Base+0x1abb8>
  42b7f4:	mov	x0, x22
  42b7f8:	add	x4, x4, #0x2f0
  42b7fc:	mov	w3, #0x0                   	// #0
  42b800:	mov	w1, #0x3                   	// #3
  42b804:	bl	4275f8 <nftw@plt+0x24a78>
  42b808:	b	429f64 <nftw@plt+0x273e4>
  42b80c:	sub	w0, w1, #0x41
  42b810:	lsr	x0, x8, x0
  42b814:	mvn	x0, x0
  42b818:	and	w0, w0, #0x1
  42b81c:	b	42b168 <nftw@plt+0x285e8>
  42b820:	sub	w1, w1, #0x1
  42b824:	lsr	x0, x13, x1
  42b828:	mvn	x0, x0
  42b82c:	lsr	x2, x5, x1
  42b830:	mvn	x2, x2
  42b834:	and	w0, w0, #0x1
  42b838:	and	w2, w2, #0x1
  42b83c:	cmp	w0, w2
  42b840:	b.ne	42a028 <nftw@plt+0x274a8>  // b.any
  42b844:	lsr	x1, x3, x1
  42b848:	mvn	x2, x1
  42b84c:	and	w2, w2, #0x1
  42b850:	mov	x4, x8
  42b854:	mov	x5, x3
  42b858:	eor	w2, w2, w0
  42b85c:	add	x12, sp, #0x168
  42b860:	b	42ad74 <nftw@plt+0x281f4>
  42b864:	sub	w1, w1, #0x1
  42b868:	lsr	x2, x13, x1
  42b86c:	mvn	x2, x2
  42b870:	lsr	x4, x5, x1
  42b874:	mvn	x4, x4
  42b878:	and	w3, w2, #0x1
  42b87c:	and	w2, w4, #0x1
  42b880:	cmp	w3, w2
  42b884:	b.eq	42b1c8 <nftw@plt+0x28648>  // b.none
  42b888:	lsr	x1, x0, x1
  42b88c:	mvn	x2, x1
  42b890:	and	w2, w2, #0x1
  42b894:	mov	x4, x8
  42b898:	mov	x5, x0
  42b89c:	b	42b510 <nftw@plt+0x28990>
  42b8a0:	mov	x4, x3
  42b8a4:	add	x12, sp, #0x168
  42b8a8:	mov	x5, #0x0                   	// #0
  42b8ac:	mov	w2, #0x0                   	// #0
  42b8b0:	b	42ad74 <nftw@plt+0x281f4>
  42b8b4:	mov	x4, x0
  42b8b8:	add	x12, sp, #0x168
  42b8bc:	mov	x5, #0x0                   	// #0
  42b8c0:	mov	w2, #0x0                   	// #0
  42b8c4:	b	42ad74 <nftw@plt+0x281f4>
  42b8c8:	sub	w0, w1, #0x41
  42b8cc:	lsr	x0, x5, x0
  42b8d0:	mvn	x0, x0
  42b8d4:	and	w0, w0, #0x1
  42b8d8:	b	42b438 <nftw@plt+0x288b8>
  42b8dc:	ldp	x1, x0, [x19, #8]
  42b8e0:	orr	x0, x0, x1
  42b8e4:	cmp	x0, #0x0
  42b8e8:	cset	w24, ne  // ne = any
  42b8ec:	b	429f64 <nftw@plt+0x273e4>
  42b8f0:	add	x2, sp, #0x200
  42b8f4:	stp	x8, x13, [sp, #312]
  42b8f8:	add	x0, sp, #0xc0
  42b8fc:	strh	wzr, [sp, #328]
  42b900:	add	x8, sp, #0xe0
  42b904:	str	x1, [sp, #136]
  42b908:	ldp	x2, x3, [x2, #-200]
  42b90c:	stp	x2, x3, [sp, #192]
  42b910:	ldr	x2, [sp, #328]
  42b914:	add	x3, sp, #0x138
  42b918:	str	x3, [sp, #128]
  42b91c:	str	w14, [sp, #144]
  42b920:	str	x2, [sp, #208]
  42b924:	bl	4280d8 <nftw@plt+0x25558>
  42b928:	add	x0, sp, #0x200
  42b92c:	ldr	w14, [sp, #144]
  42b930:	ldp	x4, x5, [sp, #224]
  42b934:	stp	x4, x5, [x0, #-200]
  42b938:	ldr	x0, [sp, #240]
  42b93c:	str	x0, [sp, #328]
  42b940:	ldp	x3, x1, [sp, #128]
  42b944:	ldrb	w15, [sp, #328]
  42b948:	ldp	x8, x13, [sp, #312]
  42b94c:	b	42b150 <nftw@plt+0x285d0>
  42b950:	mov	x0, x22
  42b954:	adrp	x2, 47c000 <_obstack_memory_used@@Base+0x1abb8>
  42b958:	mov	w1, #0x6                   	// #6
  42b95c:	add	x2, x2, #0x628
  42b960:	str	w5, [sp, #128]
  42b964:	stp	x4, x3, [sp, #136]
  42b968:	bl	427298 <nftw@plt+0x24718>
  42b96c:	ldr	w5, [sp, #128]
  42b970:	add	x12, sp, #0x168
  42b974:	mov	w0, #0x0                   	// #0
  42b978:	ldp	x4, x3, [sp, #136]
  42b97c:	b	42a110 <nftw@plt+0x27590>
  42b980:	adrp	x4, 47c000 <_obstack_memory_used@@Base+0x1abb8>
  42b984:	mov	w2, w9
  42b988:	add	x4, x4, #0x380
  42b98c:	mov	w3, #0x0                   	// #0
  42b990:	b	42b028 <nftw@plt+0x284a8>
  42b994:	str	xzr, [x22, #432]
  42b998:	b	42a5a8 <nftw@plt+0x27a28>
  42b99c:	mov	w2, w9
  42b9a0:	mov	x0, x22
  42b9a4:	adrp	x4, 47c000 <_obstack_memory_used@@Base+0x1abb8>
  42b9a8:	mov	w3, #0x0                   	// #0
  42b9ac:	add	x4, x4, #0x4a8
  42b9b0:	mov	w1, #0x1                   	// #1
  42b9b4:	bl	427670 <nftw@plt+0x24af0>
  42b9b8:	b	42af30 <nftw@plt+0x283b0>
  42b9bc:	b.eq	42bae8 <nftw@plt+0x28f68>  // b.none
  42b9c0:	mov	x3, #0xffffffffffffffff    	// #-1
  42b9c4:	mov	w2, #0x0                   	// #0
  42b9c8:	lsl	x0, x3, x0
  42b9cc:	mov	x3, #0x0                   	// #0
  42b9d0:	bic	x1, x1, x0
  42b9d4:	b	42a9a0 <nftw@plt+0x27e20>
  42b9d8:	mov	x0, #0x0                   	// #0
  42b9dc:	cbz	w1, 42a0ac <nftw@plt+0x2752c>
  42b9e0:	b	42b590 <nftw@plt+0x28a10>
  42b9e4:	mov	w2, w9
  42b9e8:	mov	x0, x22
  42b9ec:	adrp	x4, 47c000 <_obstack_memory_used@@Base+0x1abb8>
  42b9f0:	mov	w3, #0x0                   	// #0
  42b9f4:	add	x4, x4, #0x488
  42b9f8:	mov	w1, #0x2                   	// #2
  42b9fc:	bl	4275f8 <nftw@plt+0x24a78>
  42ba00:	b	42af30 <nftw@plt+0x283b0>
  42ba04:	lsr	x1, x3, x1
  42ba08:	mvn	x2, x1
  42ba0c:	and	w2, w2, #0x1
  42ba10:	mov	x4, x3
  42ba14:	mov	x5, #0x0                   	// #0
  42ba18:	b	42b858 <nftw@plt+0x28cd8>
  42ba1c:	mov	x4, x0
  42ba20:	add	x12, sp, #0x168
  42ba24:	mov	w2, #0x0                   	// #0
  42ba28:	mov	x5, #0x0                   	// #0
  42ba2c:	b	42ad74 <nftw@plt+0x281f4>
  42ba30:	mov	w26, w9
  42ba34:	mov	x1, x27
  42ba38:	mov	x0, x22
  42ba3c:	bl	4307f8 <nftw@plt+0x2dc78>
  42ba40:	mov	w2, w26
  42ba44:	mov	x5, x0
  42ba48:	adrp	x4, 47c000 <_obstack_memory_used@@Base+0x1abb8>
  42ba4c:	mov	x0, x22
  42ba50:	add	x4, x4, #0x4d0
  42ba54:	mov	w3, #0x0                   	// #0
  42ba58:	mov	w1, #0x3                   	// #3
  42ba5c:	mov	w24, #0x0                   	// #0
  42ba60:	bl	4275f8 <nftw@plt+0x24a78>
  42ba64:	b	429f64 <nftw@plt+0x273e4>
  42ba68:	mov	x0, x22
  42ba6c:	adrp	x2, 47c000 <_obstack_memory_used@@Base+0x1abb8>
  42ba70:	mov	w1, #0x3                   	// #3
  42ba74:	add	x2, x2, #0x708
  42ba78:	mov	w24, #0x0                   	// #0
  42ba7c:	bl	427178 <nftw@plt+0x245f8>
  42ba80:	b	429f64 <nftw@plt+0x273e4>
  42ba84:	mov	w2, w9
  42ba88:	mov	x0, x22
  42ba8c:	adrp	x4, 47c000 <_obstack_memory_used@@Base+0x1abb8>
  42ba90:	mov	w3, #0x0                   	// #0
  42ba94:	add	x4, x4, #0x728
  42ba98:	mov	w1, #0x3                   	// #3
  42ba9c:	mov	w24, #0x0                   	// #0
  42baa0:	bl	4275f8 <nftw@plt+0x24a78>
  42baa4:	b	429f64 <nftw@plt+0x273e4>
  42baa8:	mov	w28, #0x1c                  	// #28
  42baac:	b	42a63c <nftw@plt+0x27abc>
  42bab0:	mov	w28, #0x1b                  	// #27
  42bab4:	b	42a63c <nftw@plt+0x27abc>
  42bab8:	mov	w2, #0x0                   	// #0
  42babc:	mov	x3, #0xffffffffffffffff    	// #-1
  42bac0:	b	42a9a0 <nftw@plt+0x27e20>
  42bac4:	mov	w2, w9
  42bac8:	mov	x0, x22
  42bacc:	adrp	x4, 47c000 <_obstack_memory_used@@Base+0x1abb8>
  42bad0:	mov	w3, #0x0                   	// #0
  42bad4:	add	x4, x4, #0x508
  42bad8:	mov	w1, #0x3                   	// #3
  42badc:	mov	w24, #0x0                   	// #0
  42bae0:	bl	4275f8 <nftw@plt+0x24a78>
  42bae4:	b	429f64 <nftw@plt+0x273e4>
  42bae8:	mov	w2, #0x0                   	// #0
  42baec:	mov	x3, #0x0                   	// #0
  42baf0:	b	42a9a0 <nftw@plt+0x27e20>
  42baf4:	cbz	w24, 42a9d8 <nftw@plt+0x27e58>
  42baf8:	str	wzr, [sp, #336]
  42bafc:	ldr	x1, [x22, #1248]
  42bb00:	ldr	x0, [x27, #8]
  42bb04:	cmp	x0, x1
  42bb08:	b.eq	42bb64 <nftw@plt+0x28fe4>  // b.none
  42bb0c:	ldr	x1, [x22, #1288]
  42bb10:	cmp	x0, x1
  42bb14:	b.eq	42bc24 <nftw@plt+0x290a4>  // b.none
  42bb18:	ldr	x1, [x22, #1296]
  42bb1c:	cmp	x0, x1
  42bb20:	b.eq	42bc48 <nftw@plt+0x290c8>  // b.none
  42bb24:	ldrb	w1, [x22, #1120]
  42bb28:	cbz	w1, 42bb44 <nftw@plt+0x28fc4>
  42bb2c:	ldr	x1, [x22, #1256]
  42bb30:	cmp	x0, x1
  42bb34:	b.eq	42bc10 <nftw@plt+0x29090>  // b.none
  42bb38:	ldr	x2, [x22, #1264]
  42bb3c:	cmp	x0, x2
  42bb40:	b.eq	42bc10 <nftw@plt+0x29090>  // b.none
  42bb44:	ldrb	w2, [x22, #1149]
  42bb48:	cbz	w2, 42bb58 <nftw@plt+0x28fd8>
  42bb4c:	ldr	w1, [x22, #28]
  42bb50:	mov	w2, #0x0                   	// #0
  42bb54:	cbz	w1, 42bc88 <nftw@plt+0x29108>
  42bb58:	mov	x1, #0x0                   	// #0
  42bb5c:	mov	x3, #0x0                   	// #0
  42bb60:	b	42a9a0 <nftw@plt+0x27e20>
  42bb64:	ldrb	w1, [x22, #24]
  42bb68:	mov	x0, x22
  42bb6c:	ldr	x21, [x22, #136]
  42bb70:	add	w1, w1, #0x1
  42bb74:	strb	w1, [x22, #24]
  42bb78:	bl	43e370 <nftw@plt+0x3b7f0>
  42bb7c:	mov	x20, x0
  42bb80:	ldrb	w0, [x0, #4]
  42bb84:	cmp	w0, #0x14
  42bb88:	b.eq	42bcb8 <nftw@plt+0x29138>  // b.none
  42bb8c:	cmp	w0, #0x35
  42bb90:	b.ne	42bc54 <nftw@plt+0x290d4>  // b.any
  42bb94:	ldr	x20, [x20, #8]
  42bb98:	cbz	x20, 42bc70 <nftw@plt+0x290f0>
  42bb9c:	ldr	x0, [x22, #136]
  42bba0:	cmp	x21, x0
  42bba4:	b.eq	42bd6c <nftw@plt+0x291ec>  // b.none
  42bba8:	ldrb	w0, [x22, #1150]
  42bbac:	cbnz	w0, 42bd7c <nftw@plt+0x291fc>
  42bbb0:	ldrb	w0, [x20, #18]
  42bbb4:	and	w0, w0, #0x3
  42bbb8:	cmp	w0, #0x2
  42bbbc:	b.ne	42bbd0 <nftw@plt+0x29050>  // b.any
  42bbc0:	ldr	x1, [x20, #24]
  42bbc4:	ldrb	w0, [x1, #19]
  42bbc8:	orr	w0, w0, #0x20
  42bbcc:	strb	w0, [x1, #19]
  42bbd0:	ldrh	w0, [x20, #18]
  42bbd4:	tbz	w0, #7, 42bd5c <nftw@plt+0x291dc>
  42bbd8:	ldrb	w0, [x22, #24]
  42bbdc:	sub	w0, w0, #0x1
  42bbe0:	strb	w0, [x22, #24]
  42bbe4:	ldrb	w0, [x20, #18]
  42bbe8:	str	x20, [x22, #432]
  42bbec:	tbz	w0, #1, 42bcac <nftw@plt+0x2912c>
  42bbf0:	ldrh	w1, [x20, #18]
  42bbf4:	add	x20, sp, #0x168
  42bbf8:	eor	x1, x1, #0x100
  42bbfc:	ubfx	x1, x1, #8, #1
  42bc00:	mov	w0, #0x0                   	// #0
  42bc04:	mov	w2, #0x0                   	// #0
  42bc08:	mov	x3, #0x0                   	// #0
  42bc0c:	b	42a9a8 <nftw@plt+0x27e28>
  42bc10:	cmp	x0, x1
  42bc14:	mov	w2, #0x0                   	// #0
  42bc18:	cset	x1, eq  // eq = none
  42bc1c:	mov	x3, #0x0                   	// #0
  42bc20:	b	42a9a0 <nftw@plt+0x27e20>
  42bc24:	add	x20, sp, #0x168
  42bc28:	mov	w1, #0x0                   	// #0
  42bc2c:	mov	x0, x22
  42bc30:	mov	x8, x20
  42bc34:	bl	428198 <nftw@plt+0x25618>
  42bc38:	ldrb	w2, [sp, #376]
  42bc3c:	ldrb	w0, [sp, #377]
  42bc40:	ldp	x3, x1, [sp, #360]
  42bc44:	b	42a9a8 <nftw@plt+0x27e28>
  42bc48:	add	x20, sp, #0x168
  42bc4c:	mov	w1, #0x1                   	// #1
  42bc50:	b	42bc2c <nftw@plt+0x290ac>
  42bc54:	mov	x0, x22
  42bc58:	adrp	x2, 47c000 <_obstack_memory_used@@Base+0x1abb8>
  42bc5c:	mov	w1, #0x3                   	// #3
  42bc60:	add	x2, x2, #0x3d0
  42bc64:	bl	427178 <nftw@plt+0x245f8>
  42bc68:	ldrh	w0, [x20, #6]
  42bc6c:	tbnz	w0, #4, 42bd00 <nftw@plt+0x29180>
  42bc70:	ldrb	w0, [x22, #24]
  42bc74:	add	x20, sp, #0x168
  42bc78:	mov	x1, #0x0                   	// #0
  42bc7c:	sub	w0, w0, #0x1
  42bc80:	strb	w0, [x22, #24]
  42bc84:	b	42bc00 <nftw@plt+0x29080>
  42bc88:	ldr	x5, [x0]
  42bc8c:	mov	w2, w9
  42bc90:	mov	x0, x22
  42bc94:	adrp	x4, 47c000 <_obstack_memory_used@@Base+0x1abb8>
  42bc98:	mov	w3, #0x0                   	// #0
  42bc9c:	add	x4, x4, #0x460
  42bca0:	mov	w1, #0xd                   	// #13
  42bca4:	bl	427670 <nftw@plt+0x24af0>
  42bca8:	b	42b034 <nftw@plt+0x284b4>
  42bcac:	add	x20, sp, #0x168
  42bcb0:	mov	x1, #0x0                   	// #0
  42bcb4:	b	42bc00 <nftw@plt+0x29080>
  42bcb8:	mov	x0, x22
  42bcbc:	bl	43e370 <nftw@plt+0x3b7f0>
  42bcc0:	mov	x20, x0
  42bcc4:	ldrb	w0, [x0, #4]
  42bcc8:	cmp	w0, #0x35
  42bccc:	b.ne	42bc54 <nftw@plt+0x290d4>  // b.any
  42bcd0:	mov	x0, x22
  42bcd4:	ldr	x20, [x20, #8]
  42bcd8:	bl	43e370 <nftw@plt+0x3b7f0>
  42bcdc:	ldrb	w0, [x0, #4]
  42bce0:	cmp	w0, #0x15
  42bce4:	b.eq	42bb98 <nftw@plt+0x29018>  // b.none
  42bce8:	mov	x0, x22
  42bcec:	adrp	x2, 47c000 <_obstack_memory_used@@Base+0x1abb8>
  42bcf0:	mov	w1, #0x3                   	// #3
  42bcf4:	add	x2, x2, #0x3b0
  42bcf8:	bl	427178 <nftw@plt+0x245f8>
  42bcfc:	b	42bc70 <nftw@plt+0x290f0>
  42bd00:	ldrb	w2, [x20, #4]
  42bd04:	mov	x1, x20
  42bd08:	mov	x0, x22
  42bd0c:	add	x20, sp, #0x168
  42bd10:	strb	w2, [sp, #364]
  42bd14:	strh	wzr, [sp, #366]
  42bd18:	bl	4307f8 <nftw@plt+0x2dc78>
  42bd1c:	mov	x21, x0
  42bd20:	mov	x1, x20
  42bd24:	mov	x0, x22
  42bd28:	bl	4307f8 <nftw@plt+0x2dc78>
  42bd2c:	mov	x4, x0
  42bd30:	mov	w1, #0x3                   	// #3
  42bd34:	mov	x3, x21
  42bd38:	mov	x0, x22
  42bd3c:	adrp	x2, 47c000 <_obstack_memory_used@@Base+0x1abb8>
  42bd40:	add	x2, x2, #0x400
  42bd44:	bl	427178 <nftw@plt+0x245f8>
  42bd48:	ldrb	w0, [x22, #24]
  42bd4c:	mov	x1, #0x0                   	// #0
  42bd50:	sub	w0, w0, #0x1
  42bd54:	strb	w0, [x22, #24]
  42bd58:	b	42bc00 <nftw@plt+0x29080>
  42bd5c:	mov	x1, x20
  42bd60:	mov	x0, x22
  42bd64:	bl	43be58 <nftw@plt+0x392d8>
  42bd68:	b	42bbd8 <nftw@plt+0x29058>
  42bd6c:	add	x0, x22, #0x50
  42bd70:	cmp	x21, x0
  42bd74:	b.ne	42bba8 <nftw@plt+0x29028>  // b.any
  42bd78:	b	42bbb0 <nftw@plt+0x29030>
  42bd7c:	mov	x0, x22
  42bd80:	adrp	x2, 47c000 <_obstack_memory_used@@Base+0x1abb8>
  42bd84:	mov	w1, #0x18                  	// #24
  42bd88:	add	x2, x2, #0x430
  42bd8c:	bl	4273b8 <nftw@plt+0x24838>
  42bd90:	b	42bbb0 <nftw@plt+0x29030>
  42bd94:	nop
  42bd98:	stp	x29, x30, [sp, #-48]!
  42bd9c:	mov	x29, sp
  42bda0:	stp	x19, x20, [sp, #16]
  42bda4:	mov	x20, x0
  42bda8:	ldr	x0, [x0, #1096]
  42bdac:	str	x21, [sp, #32]
  42bdb0:	ldr	x21, [x20, #1104]
  42bdb4:	sub	x21, x21, x0
  42bdb8:	asr	x19, x21, #3
  42bdbc:	add	x19, x19, #0x32
  42bdc0:	lsl	x19, x19, #4
  42bdc4:	mov	x1, x19
  42bdc8:	bl	4615e8 <_obstack_memory_used@@Base+0x1a0>
  42bdcc:	add	x19, x0, x19
  42bdd0:	str	x0, [x20, #1096]
  42bdd4:	str	x19, [x20, #1104]
  42bdd8:	add	x0, x0, x21
  42bddc:	ldp	x19, x20, [sp, #16]
  42bde0:	ldr	x21, [sp, #32]
  42bde4:	ldp	x29, x30, [sp], #48
  42bde8:	ret
  42bdec:	nop
  42bdf0:	ldrb	w4, [x0, #16]
  42bdf4:	ldp	x3, x2, [x0]
  42bdf8:	cbnz	w4, 42be2c <nftw@plt+0x292ac>
  42bdfc:	cmp	x1, #0x40
  42be00:	b.ls	42be44 <nftw@plt+0x292c4>  // b.plast
  42be04:	sub	x1, x1, #0x40
  42be08:	cmp	x1, #0x3f
  42be0c:	b.hi	42be2c <nftw@plt+0x292ac>  // b.pmore
  42be10:	sub	w4, w1, #0x1
  42be14:	lsr	x4, x3, x4
  42be18:	tbz	w4, #0, 42be2c <nftw@plt+0x292ac>
  42be1c:	neg	w1, w1
  42be20:	mov	x4, #0xffffffffffffffff    	// #-1
  42be24:	lsr	x1, x4, x1
  42be28:	orn	x3, x3, x1
  42be2c:	stp	x3, x2, [x0]
  42be30:	ldr	x1, [x0, #16]
  42be34:	str	x1, [x8, #16]
  42be38:	ldp	x0, x1, [x0]
  42be3c:	stp	x0, x1, [x8]
  42be40:	ret
  42be44:	sub	w4, w1, #0x1
  42be48:	lsr	x4, x2, x4
  42be4c:	tbz	w4, #0, 42be2c <nftw@plt+0x292ac>
  42be50:	neg	w4, w1
  42be54:	mov	x3, #0xffffffffffffffff    	// #-1
  42be58:	cmp	x1, #0x40
  42be5c:	lsr	x1, x3, x4
  42be60:	orn	x1, x2, x1
  42be64:	csel	x2, x1, x2, ne  // ne = any
  42be68:	stp	x3, x2, [x0]
  42be6c:	ldr	x1, [x0, #16]
  42be70:	str	x1, [x8, #16]
  42be74:	ldp	x0, x1, [x0]
  42be78:	stp	x0, x1, [x8]
  42be7c:	ret
  42be80:	ldr	x1, [x0, #8]
  42be84:	ldr	x0, [x0, #24]
  42be88:	cmp	x1, #0x0
  42be8c:	add	x1, x0, #0x8
  42be90:	csel	x0, x1, x0, eq  // eq = none
  42be94:	ldr	x0, [x0]
  42be98:	b	460c20 <nftw@plt+0x5e0a0>
  42be9c:	nop
  42bea0:	stp	x29, x30, [sp, #-32]!
  42bea4:	mov	x29, sp
  42bea8:	ldr	x0, [x0]
  42beac:	stp	x19, x20, [sp, #16]
  42beb0:	mov	x19, x1
  42beb4:	ldr	x1, [x0, #8]
  42beb8:	cbz	x1, 42bed0 <nftw@plt+0x29350>
  42bebc:	ldr	x20, [x0, #24]
  42bec0:	ldrb	w0, [x20, #210]
  42bec4:	cbnz	w0, 42bed0 <nftw@plt+0x29350>
  42bec8:	ldr	x0, [x20, #56]
  42becc:	cbz	x0, 42bee0 <nftw@plt+0x29360>
  42bed0:	mov	w0, #0x1                   	// #1
  42bed4:	ldp	x19, x20, [sp, #16]
  42bed8:	ldp	x29, x30, [sp], #32
  42bedc:	ret
  42bee0:	ldrh	w0, [x20, #208]
  42bee4:	cmp	w0, #0x1
  42bee8:	b.ne	42bed0 <nftw@plt+0x29350>  // b.any
  42beec:	ldrb	w0, [x20, #212]
  42bef0:	cbnz	w0, 42bed0 <nftw@plt+0x29350>
  42bef4:	ldp	x1, x0, [x19]
  42bef8:	cbz	x1, 42bf14 <nftw@plt+0x29394>
  42befc:	add	x1, x1, x0, lsl #3
  42bf00:	add	x0, x0, #0x1
  42bf04:	str	x0, [x19, #8]
  42bf08:	ldr	x0, [x20, #8]
  42bf0c:	str	x0, [x1]
  42bf10:	b	42bed0 <nftw@plt+0x29350>
  42bf14:	mov	x1, #0x8                   	// #8
  42bf18:	bl	461598 <_obstack_memory_used@@Base+0x150>
  42bf1c:	mov	x1, x0
  42bf20:	mov	x0, #0x1                   	// #1
  42bf24:	str	x1, [x19]
  42bf28:	b	42bf04 <nftw@plt+0x29384>
  42bf2c:	nop
  42bf30:	stp	x29, x30, [sp, #-16]!
  42bf34:	mov	x29, sp
  42bf38:	bl	45fb48 <nftw@plt+0x5cfc8>
  42bf3c:	cmp	w0, #0x0
  42bf40:	cset	w0, eq  // eq = none
  42bf44:	ldp	x29, x30, [sp], #16
  42bf48:	ret
  42bf4c:	nop
  42bf50:	stp	x29, x30, [sp, #-16]!
  42bf54:	mov	x29, sp
  42bf58:	ldr	x2, [x0, #8]
  42bf5c:	ldr	x0, [x0, #24]
  42bf60:	cmp	x2, #0x0
  42bf64:	add	x2, x0, #0x8
  42bf68:	csel	x0, x2, x0, eq  // eq = none
  42bf6c:	ldr	x0, [x0]
  42bf70:	bl	45fb48 <nftw@plt+0x5cfc8>
  42bf74:	cmp	w0, #0x0
  42bf78:	cset	w0, eq  // eq = none
  42bf7c:	ldp	x29, x30, [sp], #16
  42bf80:	ret
  42bf84:	nop
  42bf88:	stp	x29, x30, [sp, #-80]!
  42bf8c:	mov	x29, sp
  42bf90:	stp	x19, x20, [sp, #16]
  42bf94:	mov	w20, w0
  42bf98:	mov	x0, #0x15                  	// #21
  42bf9c:	stp	x21, x22, [sp, #32]
  42bfa0:	mov	x21, x1
  42bfa4:	str	x25, [sp, #64]
  42bfa8:	bl	461560 <_obstack_memory_used@@Base+0x118>
  42bfac:	and	x1, x20, #0xff
  42bfb0:	adrp	x25, 481000 <_obstack_memory_used@@Base+0x1fbb8>
  42bfb4:	add	x25, x25, #0xaf0
  42bfb8:	mov	x22, x0
  42bfbc:	mov	x19, x0
  42bfc0:	ldrh	w0, [x25, x1, lsl #1]
  42bfc4:	tst	w0, #0xc00
  42bfc8:	b.ne	42c06c <nftw@plt+0x294ec>  // b.any
  42bfcc:	stp	x23, x24, [sp, #48]
  42bfd0:	mov	w24, #0x14                  	// #20
  42bfd4:	nop
  42bfd8:	strb	w20, [x19], #1
  42bfdc:	ldp	x2, x0, [x21, #8]
  42bfe0:	add	x1, x2, #0x1
  42bfe4:	cmp	x2, x0
  42bfe8:	b.cs	42c040 <nftw@plt+0x294c0>  // b.hs, b.nlast
  42bfec:	str	x1, [x21, #8]
  42bff0:	sub	x23, x19, x22
  42bff4:	ldrb	w20, [x2]
  42bff8:	mov	w0, w20
  42bffc:	ldrh	w0, [x25, w0, sxtw #1]
  42c000:	tst	w0, #0xc00
  42c004:	b.ne	42c068 <nftw@plt+0x294e8>  // b.any
  42c008:	cmp	x23, w24, sxtw
  42c00c:	b.ne	42bfd8 <nftw@plt+0x29458>  // b.any
  42c010:	lsl	w24, w24, #1
  42c014:	mov	x0, x22
  42c018:	add	w1, w24, #0x1
  42c01c:	sxtw	x1, w1
  42c020:	bl	4615e8 <_obstack_memory_used@@Base+0x1a0>
  42c024:	add	x19, x0, x23
  42c028:	mov	x22, x0
  42c02c:	strb	w20, [x19], #1
  42c030:	ldp	x2, x0, [x21, #8]
  42c034:	add	x1, x2, #0x1
  42c038:	cmp	x2, x0
  42c03c:	b.cc	42bfec <nftw@plt+0x2946c>  // b.lo, b.ul, b.last
  42c040:	mov	x0, x21
  42c044:	bl	402b40 <__uflow@plt>
  42c048:	mov	w20, w0
  42c04c:	cmn	w0, #0x1
  42c050:	b.eq	42c068 <nftw@plt+0x294e8>  // b.none
  42c054:	and	w0, w0, #0xff
  42c058:	sub	x23, x19, x22
  42c05c:	ldrh	w0, [x25, w0, sxtw #1]
  42c060:	tst	w0, #0xc00
  42c064:	b.eq	42c008 <nftw@plt+0x29488>  // b.none
  42c068:	ldp	x23, x24, [sp, #48]
  42c06c:	strb	wzr, [x19]
  42c070:	mov	x1, x21
  42c074:	mov	w0, w20
  42c078:	bl	402920 <ungetc@plt>
  42c07c:	mov	x0, x22
  42c080:	ldp	x19, x20, [sp, #16]
  42c084:	ldp	x21, x22, [sp, #32]
  42c088:	ldr	x25, [sp, #64]
  42c08c:	ldp	x29, x30, [sp], #80
  42c090:	ret
  42c094:	nop
  42c098:	ldr	x0, [x0]
  42c09c:	ldr	x1, [x1]
  42c0a0:	b	402890 <strcmp@plt>
  42c0a4:	nop
  42c0a8:	stp	x29, x30, [sp, #-32]!
  42c0ac:	mov	x29, sp
  42c0b0:	stp	x19, x20, [sp, #16]
  42c0b4:	mov	x19, x0
  42c0b8:	ldr	x0, [x0, #8]
  42c0bc:	ldrb	w1, [x0]
  42c0c0:	cbnz	w1, 42c120 <nftw@plt+0x295a0>
  42c0c4:	str	wzr, [x19, #200]
  42c0c8:	add	x2, x19, #0x48
  42c0cc:	mov	w0, #0x0                   	// #0
  42c0d0:	bl	402a10 <__fxstat@plt>
  42c0d4:	cbnz	w0, 42c170 <nftw@plt+0x295f0>
  42c0d8:	ldr	w0, [x19, #88]
  42c0dc:	and	w0, w0, #0xf000
  42c0e0:	cmp	w0, #0x4, lsl #12
  42c0e4:	b.ne	42c15c <nftw@plt+0x295dc>  // b.any
  42c0e8:	bl	402aa0 <__errno_location@plt>
  42c0ec:	mov	x20, x0
  42c0f0:	mov	w0, #0x2                   	// #2
  42c0f4:	str	w0, [x20]
  42c0f8:	ldr	w0, [x19, #200]
  42c0fc:	bl	4027a0 <close@plt>
  42c100:	mov	w0, #0xffffffff            	// #-1
  42c104:	str	w0, [x19, #200]
  42c108:	ldr	w1, [x20]
  42c10c:	str	w1, [x19, #204]
  42c110:	mov	w0, #0x0                   	// #0
  42c114:	ldp	x19, x20, [sp, #16]
  42c118:	ldp	x29, x30, [sp], #32
  42c11c:	ret
  42c120:	mov	w1, #0x100                 	// #256
  42c124:	mov	w2, #0x1b6                 	// #438
  42c128:	bl	402680 <open@plt>
  42c12c:	str	w0, [x19, #200]
  42c130:	mov	w1, w0
  42c134:	cmn	w0, #0x1
  42c138:	b.ne	42c0c8 <nftw@plt+0x29548>  // b.any
  42c13c:	bl	402aa0 <__errno_location@plt>
  42c140:	ldr	w1, [x0]
  42c144:	cmp	w1, #0x14
  42c148:	b.ne	42c10c <nftw@plt+0x2958c>  // b.any
  42c14c:	mov	w2, #0x2                   	// #2
  42c150:	mov	w1, w2
  42c154:	str	w2, [x0]
  42c158:	b	42c10c <nftw@plt+0x2958c>
  42c15c:	str	wzr, [x19, #204]
  42c160:	mov	w0, #0x1                   	// #1
  42c164:	ldp	x19, x20, [sp, #16]
  42c168:	ldp	x29, x30, [sp], #32
  42c16c:	ret
  42c170:	bl	402aa0 <__errno_location@plt>
  42c174:	mov	x20, x0
  42c178:	b	42c0f8 <nftw@plt+0x29578>
  42c17c:	nop
  42c180:	stp	x29, x30, [sp, #-96]!
  42c184:	mov	x29, sp
  42c188:	stp	x19, x20, [sp, #16]
  42c18c:	mov	x19, x1
  42c190:	mov	x20, x0
  42c194:	stp	x21, x22, [sp, #32]
  42c198:	mov	x0, x1
  42c19c:	mov	x22, x2
  42c1a0:	stp	x23, x24, [sp, #48]
  42c1a4:	stp	x25, x26, [sp, #64]
  42c1a8:	ldr	x23, [x1, #8]
  42c1ac:	str	x2, [x1, #8]
  42c1b0:	bl	42c0a8 <nftw@plt+0x29528>
  42c1b4:	ands	w26, w0, #0xff
  42c1b8:	b.eq	42c280 <nftw@plt+0x29700>  // b.none
  42c1bc:	ldr	w2, [x19, #200]
  42c1c0:	mov	x1, x22
  42c1c4:	ldr	x3, [x20, #968]
  42c1c8:	stp	x27, x28, [sp, #80]
  42c1cc:	mov	x0, x20
  42c1d0:	blr	x3
  42c1d4:	and	w26, w0, #0x1
  42c1d8:	mov	w27, w26
  42c1dc:	tbz	w0, #0, 42c2c4 <nftw@plt+0x29744>
  42c1e0:	ldrb	w0, [x20, #1131]
  42c1e4:	cbz	w0, 42c2a0 <nftw@plt+0x29720>
  42c1e8:	ldr	x0, [x20, #40]
  42c1ec:	adrp	x28, 4a4000 <_obstack_memory_used@@Base+0x42bb8>
  42c1f0:	mov	w21, #0x1                   	// #1
  42c1f4:	add	x24, x28, #0x570
  42c1f8:	mov	w25, #0x2e                  	// #46
  42c1fc:	ldr	w0, [x0, #48]
  42c200:	cmp	w0, #0x1
  42c204:	b.hi	42c228 <nftw@plt+0x296a8>  // b.pmore
  42c208:	b	42c258 <nftw@plt+0x296d8>
  42c20c:	str	x2, [x0, #40]
  42c210:	add	w21, w21, #0x1
  42c214:	strb	w25, [x3]
  42c218:	ldr	x1, [x20, #40]
  42c21c:	ldr	w1, [x1, #48]
  42c220:	cmp	w1, w21
  42c224:	b.ls	42c258 <nftw@plt+0x296d8>  // b.plast
  42c228:	ldr	x0, [x24]
  42c22c:	ldp	x3, x1, [x0, #40]
  42c230:	add	x2, x3, #0x1
  42c234:	cmp	x3, x1
  42c238:	b.cc	42c20c <nftw@plt+0x2968c>  // b.lo, b.ul, b.last
  42c23c:	mov	w1, #0x2e                  	// #46
  42c240:	bl	402800 <__overflow@plt>
  42c244:	ldr	x0, [x20, #40]
  42c248:	add	w21, w21, #0x1
  42c24c:	ldr	w0, [x0, #48]
  42c250:	cmp	w0, w21
  42c254:	b.hi	42c228 <nftw@plt+0x296a8>  // b.pmore
  42c258:	ldr	x0, [x28, #1392]
  42c25c:	cmp	w27, #0x0
  42c260:	mov	w4, #0x21                  	// #33
  42c264:	mov	x3, x22
  42c268:	mov	w2, #0x78                  	// #120
  42c26c:	adrp	x1, 47c000 <_obstack_memory_used@@Base+0x1abb8>
  42c270:	csel	w2, w4, w2, ne  // ne = any
  42c274:	add	x1, x1, #0x7e0
  42c278:	bl	402b30 <fprintf@plt>
  42c27c:	ldp	x27, x28, [sp, #80]
  42c280:	mov	w0, w26
  42c284:	ldp	x21, x22, [sp, #32]
  42c288:	ldp	x25, x26, [sp, #64]
  42c28c:	str	x23, [x19, #8]
  42c290:	ldp	x19, x20, [sp, #16]
  42c294:	ldp	x23, x24, [sp, #48]
  42c298:	ldp	x29, x30, [sp], #96
  42c29c:	ret
  42c2a0:	mov	w0, w26
  42c2a4:	ldp	x21, x22, [sp, #32]
  42c2a8:	ldp	x25, x26, [sp, #64]
  42c2ac:	ldp	x27, x28, [sp, #80]
  42c2b0:	str	x23, [x19, #8]
  42c2b4:	ldp	x19, x20, [sp, #16]
  42c2b8:	ldp	x23, x24, [sp, #48]
  42c2bc:	ldp	x29, x30, [sp], #96
  42c2c0:	ret
  42c2c4:	ldr	w0, [x19, #200]
  42c2c8:	bl	4027a0 <close@plt>
  42c2cc:	mov	w0, #0xffffffff            	// #-1
  42c2d0:	str	w0, [x19, #200]
  42c2d4:	ldrb	w0, [x20, #1131]
  42c2d8:	cbz	w0, 42c2a0 <nftw@plt+0x29720>
  42c2dc:	b	42c1e8 <nftw@plt+0x29668>
  42c2e0:	stp	x29, x30, [sp, #-48]!
  42c2e4:	mov	x29, sp
  42c2e8:	stp	x19, x20, [sp, #16]
  42c2ec:	mov	x19, x0
  42c2f0:	mov	x20, x1
  42c2f4:	ldr	x0, [x0, #40]
  42c2f8:	stp	x21, x22, [sp, #32]
  42c2fc:	mov	w21, w2
  42c300:	mov	w22, w3
  42c304:	ldr	w0, [x0, #60]
  42c308:	cmp	w0, #0x1
  42c30c:	b.ls	42c320 <nftw@plt+0x297a0>  // b.plast
  42c310:	ldr	x0, [x19]
  42c314:	cbz	x0, 42c320 <nftw@plt+0x297a0>
  42c318:	ldrb	w0, [x0, #106]
  42c31c:	orr	w21, w2, w0
  42c320:	ldrb	w0, [x19, #26]
  42c324:	cbnz	w0, 42c3b0 <nftw@plt+0x29830>
  42c328:	bl	402aa0 <__errno_location@plt>
  42c32c:	ldr	w2, [x20, #204]
  42c330:	cmp	w21, #0x0
  42c334:	ldr	w1, [x19, #1200]
  42c338:	cset	w3, ne  // ne = any
  42c33c:	str	w2, [x0]
  42c340:	cmp	w1, w3
  42c344:	b.le	42c380 <nftw@plt+0x29800>
  42c348:	cmp	w2, #0x2
  42c34c:	ldrb	w0, [x19, #1204]
  42c350:	cset	w1, eq  // eq = none
  42c354:	tst	w1, w0
  42c358:	b.ne	42c3c0 <nftw@plt+0x29840>  // b.any
  42c35c:	ldr	x2, [x20, #8]
  42c360:	cbz	x2, 42c3dc <nftw@plt+0x2985c>
  42c364:	mov	w3, w22
  42c368:	mov	x0, x19
  42c36c:	ldp	x19, x20, [sp, #16]
  42c370:	mov	w1, #0x6                   	// #6
  42c374:	ldp	x21, x22, [sp, #32]
  42c378:	ldp	x29, x30, [sp], #48
  42c37c:	b	4279f0 <nftw@plt+0x24e70>
  42c380:	ldr	x2, [x20, #8]
  42c384:	cbz	w1, 42c360 <nftw@plt+0x297e0>
  42c388:	ldrb	w0, [x19, #1207]
  42c38c:	cbnz	w0, 42c360 <nftw@plt+0x297e0>
  42c390:	cbz	x2, 42c3fc <nftw@plt+0x2987c>
  42c394:	mov	w3, w22
  42c398:	mov	x0, x19
  42c39c:	ldp	x19, x20, [sp, #16]
  42c3a0:	mov	w1, #0x0                   	// #0
  42c3a4:	ldp	x21, x22, [sp, #32]
  42c3a8:	ldp	x29, x30, [sp], #48
  42c3ac:	b	4279f0 <nftw@plt+0x24e70>
  42c3b0:	ldp	x19, x20, [sp, #16]
  42c3b4:	ldp	x21, x22, [sp, #32]
  42c3b8:	ldp	x29, x30, [sp], #48
  42c3bc:	ret
  42c3c0:	ldr	x1, [x20]
  42c3c4:	ldr	x0, [x19, #712]
  42c3c8:	bl	43ece0 <nftw@plt+0x3c160>
  42c3cc:	ldrb	w0, [x19, #1207]
  42c3d0:	cbz	w0, 42c3b0 <nftw@plt+0x29830>
  42c3d4:	ldr	x2, [x20, #8]
  42c3d8:	cbnz	x2, 42c364 <nftw@plt+0x297e4>
  42c3dc:	mov	w3, w22
  42c3e0:	mov	x0, x19
  42c3e4:	ldr	x2, [x20]
  42c3e8:	mov	w1, #0x6                   	// #6
  42c3ec:	ldp	x19, x20, [sp, #16]
  42c3f0:	ldp	x21, x22, [sp, #32]
  42c3f4:	ldp	x29, x30, [sp], #48
  42c3f8:	b	4279f0 <nftw@plt+0x24e70>
  42c3fc:	ldr	x2, [x20]
  42c400:	b	42c394 <nftw@plt+0x29814>
  42c404:	nop
  42c408:	mov	x2, #0x20                  	// #32
  42c40c:	b	402850 <memcmp@plt>
  42c410:	stp	x29, x30, [sp, #-80]!
  42c414:	mov	x29, sp
  42c418:	stp	x19, x20, [sp, #16]
  42c41c:	ldrb	w20, [x1, #213]
  42c420:	cbnz	w20, 42c5ac <nftw@plt+0x29a2c>
  42c424:	stp	x23, x24, [sp, #48]
  42c428:	mov	x19, x1
  42c42c:	ldrb	w24, [x1, #211]
  42c430:	cbnz	w24, 42c5c0 <nftw@plt+0x29a40>
  42c434:	stp	x21, x22, [sp, #32]
  42c438:	mov	x22, x0
  42c43c:	ldr	w0, [x1, #204]
  42c440:	cbnz	w0, 42c5bc <nftw@plt+0x29a3c>
  42c444:	ldr	w0, [x1, #200]
  42c448:	mov	w23, w2
  42c44c:	cmn	w0, #0x1
  42c450:	b.eq	42c5d4 <nftw@plt+0x29a54>  // b.none
  42c454:	ldr	w0, [x19, #88]
  42c458:	and	w0, w0, #0xf000
  42c45c:	cmp	w0, #0x6, lsl #12
  42c460:	b.eq	42c604 <nftw@plt+0x29a84>  // b.none
  42c464:	stp	x25, x26, [sp, #64]
  42c468:	cmp	w0, #0x8, lsl #12
  42c46c:	b.eq	42c514 <nftw@plt+0x29994>  // b.none
  42c470:	mov	x0, #0x2010                	// #8208
  42c474:	bl	461560 <_obstack_memory_used@@Base+0x118>
  42c478:	mov	x21, x0
  42c47c:	mov	x20, #0x0                   	// #0
  42c480:	mov	x25, #0x2000                	// #8192
  42c484:	nop
  42c488:	ldr	w0, [x19, #200]
  42c48c:	sub	x2, x25, x20
  42c490:	add	x1, x21, x20
  42c494:	mov	x26, x20
  42c498:	bl	4029d0 <read@plt>
  42c49c:	add	x20, x20, x0
  42c4a0:	cmp	x0, #0x0
  42c4a4:	b.le	42c4e4 <nftw@plt+0x29964>
  42c4a8:	cmp	x20, x25
  42c4ac:	b.ne	42c488 <nftw@plt+0x29908>  // b.any
  42c4b0:	lsl	x25, x20, #1
  42c4b4:	mov	x0, x21
  42c4b8:	add	x1, x25, #0x10
  42c4bc:	bl	4615e8 <_obstack_memory_used@@Base+0x1a0>
  42c4c0:	mov	x21, x0
  42c4c4:	ldr	w0, [x19, #200]
  42c4c8:	sub	x2, x25, x20
  42c4cc:	add	x1, x21, x20
  42c4d0:	mov	x26, x20
  42c4d4:	bl	4029d0 <read@plt>
  42c4d8:	add	x20, x20, x0
  42c4dc:	cmp	x0, #0x0
  42c4e0:	b.gt	42c4a8 <nftw@plt+0x29928>
  42c4e4:	add	x20, x25, #0x10
  42c4e8:	b.eq	42c558 <nftw@plt+0x299d8>  // b.none
  42c4ec:	ldr	x2, [x19, #8]
  42c4f0:	mov	w3, w23
  42c4f4:	mov	w1, #0x3                   	// #3
  42c4f8:	mov	x0, x22
  42c4fc:	mov	w24, #0x1                   	// #1
  42c500:	bl	4279f0 <nftw@plt+0x24e70>
  42c504:	mov	x0, x21
  42c508:	bl	402910 <free@plt>
  42c50c:	ldp	x25, x26, [sp, #64]
  42c510:	b	42c588 <nftw@plt+0x29a08>
  42c514:	ldr	x25, [x19, #120]
  42c518:	add	x20, x25, #0x10
  42c51c:	mov	x0, x20
  42c520:	bl	461560 <_obstack_memory_used@@Base+0x118>
  42c524:	mov	x21, x0
  42c528:	mov	x1, #0x0                   	// #0
  42c52c:	ldr	w0, [x19, #200]
  42c530:	mov	x26, x1
  42c534:	sub	x2, x25, x1
  42c538:	add	x1, x21, x1
  42c53c:	bl	4029d0 <read@plt>
  42c540:	add	x1, x26, x0
  42c544:	cmp	x0, #0x0
  42c548:	b.le	42c628 <nftw@plt+0x29aa8>
  42c54c:	cmp	x25, x1
  42c550:	b.ne	42c52c <nftw@plt+0x299ac>  // b.any
  42c554:	mov	x26, x25
  42c558:	ldr	x1, [x22, #1184]
  42c55c:	mov	x4, x26
  42c560:	mov	x3, x20
  42c564:	mov	x2, x21
  42c568:	mov	x0, x22
  42c56c:	add	x6, x19, #0x78
  42c570:	add	x5, x19, #0x30
  42c574:	bl	421f00 <nftw@plt+0x1f380>
  42c578:	mov	w1, #0x1                   	// #1
  42c57c:	strb	w1, [x19, #213]
  42c580:	ldp	x25, x26, [sp, #64]
  42c584:	str	x0, [x19, #40]
  42c588:	ldr	w0, [x19, #200]
  42c58c:	strb	w24, [x19, #211]
  42c590:	bl	4027a0 <close@plt>
  42c594:	ldrb	w20, [x19, #211]
  42c598:	mov	w0, #0xffffffff            	// #-1
  42c59c:	eor	w20, w20, #0x1
  42c5a0:	ldp	x21, x22, [sp, #32]
  42c5a4:	ldp	x23, x24, [sp, #48]
  42c5a8:	str	w0, [x19, #200]
  42c5ac:	mov	w0, w20
  42c5b0:	ldp	x19, x20, [sp, #16]
  42c5b4:	ldp	x29, x30, [sp], #80
  42c5b8:	ret
  42c5bc:	ldp	x21, x22, [sp, #32]
  42c5c0:	mov	w0, w20
  42c5c4:	ldp	x19, x20, [sp, #16]
  42c5c8:	ldp	x23, x24, [sp, #48]
  42c5cc:	ldp	x29, x30, [sp], #80
  42c5d0:	ret
  42c5d4:	mov	x0, x1
  42c5d8:	bl	42c0a8 <nftw@plt+0x29528>
  42c5dc:	ands	w20, w0, #0xff
  42c5e0:	b.ne	42c454 <nftw@plt+0x298d4>  // b.any
  42c5e4:	mov	w3, w23
  42c5e8:	mov	x0, x22
  42c5ec:	mov	x1, x19
  42c5f0:	mov	w2, #0x0                   	// #0
  42c5f4:	bl	42c2e0 <nftw@plt+0x29760>
  42c5f8:	ldp	x21, x22, [sp, #32]
  42c5fc:	ldp	x23, x24, [sp, #48]
  42c600:	b	42c5ac <nftw@plt+0x29a2c>
  42c604:	ldr	x4, [x19, #8]
  42c608:	mov	w2, w23
  42c60c:	mov	x0, x22
  42c610:	adrp	x3, 47c000 <_obstack_memory_used@@Base+0x1abb8>
  42c614:	mov	w1, #0x3                   	// #3
  42c618:	add	x3, x3, #0x7e8
  42c61c:	mov	w24, #0x1                   	// #1
  42c620:	bl	4277f0 <nftw@plt+0x24c70>
  42c624:	b	42c588 <nftw@plt+0x29a08>
  42c628:	b.ne	42c4ec <nftw@plt+0x2996c>  // b.any
  42c62c:	cmp	x25, x26
  42c630:	b.eq	42c558 <nftw@plt+0x299d8>  // b.none
  42c634:	ldr	x4, [x19, #8]
  42c638:	mov	w2, w23
  42c63c:	mov	x0, x22
  42c640:	adrp	x3, 47c000 <_obstack_memory_used@@Base+0x1abb8>
  42c644:	mov	w1, #0x0                   	// #0
  42c648:	add	x3, x3, #0x800
  42c64c:	bl	4277f0 <nftw@plt+0x24c70>
  42c650:	b	42c558 <nftw@plt+0x299d8>
  42c654:	nop
  42c658:	stp	x29, x30, [sp, #-64]!
  42c65c:	mov	x29, sp
  42c660:	stp	x21, x22, [sp, #32]
  42c664:	mov	x21, x0
  42c668:	mov	x0, x1
  42c66c:	stp	x19, x20, [sp, #16]
  42c670:	mov	x20, x1
  42c674:	ldr	x19, [x21, #304]
  42c678:	str	x23, [sp, #48]
  42c67c:	mov	w23, w2
  42c680:	bl	460c20 <nftw@plt+0x5e0a0>
  42c684:	mov	w3, #0x1                   	// #1
  42c688:	mov	w2, w0
  42c68c:	mov	x1, x20
  42c690:	mov	x0, x19
  42c694:	bl	460718 <nftw@plt+0x5db98>
  42c698:	mov	x22, x0
  42c69c:	ldr	x3, [x0]
  42c6a0:	cbnz	x3, 42c6b0 <nftw@plt+0x29b30>
  42c6a4:	b	42c6d4 <nftw@plt+0x29b54>
  42c6a8:	ldr	x3, [x3]
  42c6ac:	cbz	x3, 42c6d4 <nftw@plt+0x29b54>
  42c6b0:	ldr	x4, [x3, #8]
  42c6b4:	cbnz	x4, 42c6a8 <nftw@plt+0x29b28>
  42c6b8:	ldr	x19, [x3, #24]
  42c6bc:	ldp	x21, x22, [sp, #32]
  42c6c0:	mov	x0, x19
  42c6c4:	ldp	x19, x20, [sp, #16]
  42c6c8:	ldr	x23, [sp, #48]
  42c6cc:	ldp	x29, x30, [sp], #64
  42c6d0:	ret
  42c6d4:	mov	x1, #0x40                  	// #64
  42c6d8:	mov	x0, #0x1                   	// #1
  42c6dc:	bl	461598 <_obstack_memory_used@@Base+0x150>
  42c6e0:	mov	x19, x0
  42c6e4:	ldr	x1, [x21, #200]
  42c6e8:	mov	x0, x20
  42c6ec:	stp	x1, x20, [x19]
  42c6f0:	bl	4024f0 <strlen@plt>
  42c6f4:	strb	w23, [x19, #20]
  42c6f8:	ldr	x3, [x21, #312]
  42c6fc:	ldr	w1, [x3]
  42c700:	str	w0, [x19, #16]
  42c704:	str	xzr, [x19, #40]
  42c708:	cmp	w1, #0x7f
  42c70c:	b.eq	42c760 <nftw@plt+0x29be0>  // b.none
  42c710:	ubfiz	x0, x1, #5, #32
  42c714:	add	w2, w1, #0x1
  42c718:	add	x0, x0, #0x10
  42c71c:	ldr	x4, [x21, #40]
  42c720:	ubfiz	x1, x1, #5, #32
  42c724:	add	x1, x3, x1
  42c728:	str	w2, [x3]
  42c72c:	add	x3, x3, x0
  42c730:	ldr	w0, [x4, #56]
  42c734:	ldr	x2, [x22]
  42c738:	stp	x2, xzr, [x1, #16]
  42c73c:	str	w0, [x1, #32]
  42c740:	mov	x0, x19
  42c744:	str	x19, [x1, #40]
  42c748:	str	x3, [x22]
  42c74c:	ldp	x19, x20, [sp, #16]
  42c750:	ldp	x21, x22, [sp, #32]
  42c754:	ldr	x23, [sp, #48]
  42c758:	ldp	x29, x30, [sp], #64
  42c75c:	ret
  42c760:	mov	x0, #0xff0                 	// #4080
  42c764:	bl	461560 <_obstack_memory_used@@Base+0x118>
  42c768:	mov	x3, x0
  42c76c:	mov	w2, #0x1                   	// #1
  42c770:	ldr	x4, [x21, #312]
  42c774:	mov	w1, #0x0                   	// #0
  42c778:	mov	x0, #0x10                  	// #16
  42c77c:	str	wzr, [x3]
  42c780:	str	x4, [x3, #8]
  42c784:	str	x3, [x21, #312]
  42c788:	b	42c71c <nftw@plt+0x29b9c>
  42c78c:	nop
  42c790:	stp	x29, x30, [sp, #-112]!
  42c794:	mov	x29, sp
  42c798:	stp	x19, x20, [sp, #16]
  42c79c:	mov	x20, x0
  42c7a0:	ldr	w19, [x0, #16]
  42c7a4:	ldr	x1, [x0, #8]
  42c7a8:	add	x0, x19, #0x1b
  42c7ac:	and	x0, x0, #0x1fffffff0
  42c7b0:	stp	x21, x22, [sp, #32]
  42c7b4:	mov	x2, x19
  42c7b8:	stp	x23, x24, [sp, #48]
  42c7bc:	stp	x25, x26, [sp, #64]
  42c7c0:	stp	x27, x28, [sp, #80]
  42c7c4:	sub	sp, sp, x0
  42c7c8:	mov	x3, sp
  42c7cc:	mov	x0, x3
  42c7d0:	bl	402490 <memcpy@plt>
  42c7d4:	mov	x3, x0
  42c7d8:	mov	x4, x0
  42c7dc:	cbz	x19, 42c800 <nftw@plt+0x29c80>
  42c7e0:	add	x4, x0, x19
  42c7e4:	ldurb	w0, [x4, #-1]
  42c7e8:	cmp	w0, #0x2f
  42c7ec:	b.eq	42c800 <nftw@plt+0x29c80>  // b.none
  42c7f0:	add	x4, x19, #0x1
  42c7f4:	mov	w0, #0x2f                  	// #47
  42c7f8:	add	x4, x3, x4
  42c7fc:	strb	w0, [x3, x19]
  42c800:	adrp	x2, 47c000 <_obstack_memory_used@@Base+0x1abb8>
  42c804:	add	x2, x2, #0x820
  42c808:	mov	x0, x3
  42c80c:	adrp	x1, 47b000 <_obstack_memory_used@@Base+0x19bb8>
  42c810:	add	x1, x1, #0xf40
  42c814:	ldr	x3, [x2]
  42c818:	str	x3, [x4]
  42c81c:	ldur	w2, [x2, #7]
  42c820:	stur	w2, [x4, #7]
  42c824:	bl	45fca0 <nftw@plt+0x5d120>
  42c828:	mov	x19, x0
  42c82c:	mov	x0, #0x48                  	// #72
  42c830:	bl	461560 <_obstack_memory_used@@Base+0x118>
  42c834:	str	x0, [x20, #32]
  42c838:	cbz	x19, 42c8b0 <nftw@plt+0x29d30>
  42c83c:	ldr	x3, [x19, #16]
  42c840:	adrp	x25, 481000 <_obstack_memory_used@@Base+0x1fbb8>
  42c844:	add	x25, x25, #0xaf0
  42c848:	mov	x22, #0x8                   	// #8
  42c84c:	mov	x23, #0x9                   	// #9
  42c850:	mov	x21, #0x0                   	// #0
  42c854:	ldr	x0, [x19, #8]
  42c858:	cmp	x0, x3
  42c85c:	b.cs	42c88c <nftw@plt+0x29d0c>  // b.hs, b.nlast
  42c860:	add	x1, x0, #0x1
  42c864:	str	x1, [x19, #8]
  42c868:	ldrb	w26, [x0]
  42c86c:	mov	w0, w26
  42c870:	ldrh	w0, [x25, w0, sxtw #1]
  42c874:	tst	w0, #0xc00
  42c878:	b.eq	42c8d4 <nftw@plt+0x29d54>  // b.none
  42c87c:	ldr	x0, [x19, #8]
  42c880:	ldr	x3, [x19, #16]
  42c884:	cmp	x0, x3
  42c888:	b.cc	42c860 <nftw@plt+0x29ce0>  // b.lo, b.ul, b.last
  42c88c:	mov	x0, x19
  42c890:	bl	402b40 <__uflow@plt>
  42c894:	mov	w26, w0
  42c898:	cmn	w0, #0x1
  42c89c:	b.ne	42ca4c <nftw@plt+0x29ecc>  // b.any
  42c8a0:	mov	x0, x19
  42c8a4:	bl	402620 <fclose@plt>
  42c8a8:	ldr	x0, [x20, #32]
  42c8ac:	add	x0, x0, x21, lsl #3
  42c8b0:	str	xzr, [x0]
  42c8b4:	mov	sp, x29
  42c8b8:	ldp	x19, x20, [sp, #16]
  42c8bc:	ldp	x21, x22, [sp, #32]
  42c8c0:	ldp	x23, x24, [sp, #48]
  42c8c4:	ldp	x25, x26, [sp, #64]
  42c8c8:	ldp	x27, x28, [sp, #80]
  42c8cc:	ldp	x29, x30, [sp], #112
  42c8d0:	ret
  42c8d4:	add	x21, x21, #0x2
  42c8d8:	cmp	x21, x23
  42c8dc:	ldr	x27, [x20, #32]
  42c8e0:	b.hi	42ca30 <nftw@plt+0x29eb0>  // b.pmore
  42c8e4:	sub	x28, x22, #0x8
  42c8e8:	mov	w0, w26
  42c8ec:	mov	x1, x19
  42c8f0:	bl	42bf88 <nftw@plt+0x29408>
  42c8f4:	str	x0, [x27, x28]
  42c8f8:	b	42c910 <nftw@plt+0x29d90>
  42c8fc:	str	x2, [x19, #8]
  42c900:	ldrb	w0, [x1]
  42c904:	mov	w1, w0
  42c908:	ldrh	w1, [x25, w1, sxtw #1]
  42c90c:	tbz	w1, #0, 42c930 <nftw@plt+0x29db0>
  42c910:	ldp	x1, x0, [x19, #8]
  42c914:	add	x2, x1, #0x1
  42c918:	cmp	x1, x0
  42c91c:	b.cc	42c8fc <nftw@plt+0x29d7c>  // b.lo, b.ul, b.last
  42c920:	mov	x0, x19
  42c924:	bl	402b40 <__uflow@plt>
  42c928:	cmn	w0, #0x1
  42c92c:	b.ne	42ca1c <nftw@plt+0x29e9c>  // b.any
  42c930:	mov	x1, x19
  42c934:	bl	42bf88 <nftw@plt+0x29408>
  42c938:	ldrb	w1, [x0]
  42c93c:	mov	x26, x0
  42c940:	cmp	w1, #0x2f
  42c944:	b.ne	42c9a0 <nftw@plt+0x29e20>  // b.any
  42c948:	ldr	x0, [x20, #32]
  42c94c:	str	x26, [x0, x22]
  42c950:	ldp	x1, x3, [x19, #8]
  42c954:	add	x2, x1, #0x1
  42c958:	cmp	x3, x1
  42c95c:	b.ls	42c980 <nftw@plt+0x29e00>  // b.plast
  42c960:	str	x2, [x19, #8]
  42c964:	ldrb	w0, [x1]
  42c968:	cmp	w0, #0xa
  42c96c:	b.eq	42c998 <nftw@plt+0x29e18>  // b.none
  42c970:	mov	x1, x2
  42c974:	add	x2, x1, #0x1
  42c978:	cmp	x3, x1
  42c97c:	b.hi	42c960 <nftw@plt+0x29de0>  // b.pmore
  42c980:	mov	x0, x19
  42c984:	bl	402b40 <__uflow@plt>
  42c988:	cmp	w0, #0xa
  42c98c:	ccmn	w0, #0x1, #0x4, ne  // ne = any
  42c990:	b.ne	42ca24 <nftw@plt+0x29ea4>  // b.any
  42c994:	ldr	x3, [x19, #16]
  42c998:	add	x22, x22, #0x10
  42c99c:	b	42c854 <nftw@plt+0x29cd4>
  42c9a0:	ldr	x1, [x20, #32]
  42c9a4:	ldr	w28, [x20, #16]
  42c9a8:	add	x1, x1, x22
  42c9ac:	str	x1, [x29, #104]
  42c9b0:	bl	4024f0 <strlen@plt>
  42c9b4:	mov	x24, x0
  42c9b8:	add	x1, x28, #0x2
  42c9bc:	add	x0, x1, x0
  42c9c0:	bl	461560 <_obstack_memory_used@@Base+0x118>
  42c9c4:	mov	x27, x0
  42c9c8:	ldr	x1, [x20, #8]
  42c9cc:	mov	x2, x28
  42c9d0:	bl	402490 <memcpy@plt>
  42c9d4:	mov	x0, x27
  42c9d8:	cbz	x28, 42c9fc <nftw@plt+0x29e7c>
  42c9dc:	add	x0, x27, x28
  42c9e0:	ldurb	w1, [x0, #-1]
  42c9e4:	cmp	w1, #0x2f
  42c9e8:	b.eq	42c9fc <nftw@plt+0x29e7c>  // b.none
  42c9ec:	add	x0, x28, #0x1
  42c9f0:	mov	w1, #0x2f                  	// #47
  42c9f4:	add	x0, x27, x0
  42c9f8:	strb	w1, [x27, x28]
  42c9fc:	add	x2, x24, #0x1
  42ca00:	mov	x1, x26
  42ca04:	bl	402490 <memcpy@plt>
  42ca08:	ldr	x0, [x29, #104]
  42ca0c:	str	x27, [x0]
  42ca10:	mov	x0, x26
  42ca14:	bl	402910 <free@plt>
  42ca18:	b	42c950 <nftw@plt+0x29dd0>
  42ca1c:	and	w1, w0, #0xff
  42ca20:	b	42c908 <nftw@plt+0x29d88>
  42ca24:	ldp	x2, x3, [x19, #8]
  42ca28:	mov	x1, x2
  42ca2c:	b	42c974 <nftw@plt+0x29df4>
  42ca30:	add	x23, x23, #0x8
  42ca34:	mov	x0, x27
  42ca38:	lsl	x1, x23, #3
  42ca3c:	bl	4615e8 <_obstack_memory_used@@Base+0x1a0>
  42ca40:	mov	x27, x0
  42ca44:	str	x0, [x20, #32]
  42ca48:	b	42c8e4 <nftw@plt+0x29d64>
  42ca4c:	and	w0, w0, #0xff
  42ca50:	b	42c870 <nftw@plt+0x29cf0>
  42ca54:	nop
  42ca58:	ldr	w0, [x0, #204]
  42ca5c:	cmp	w0, #0x0
  42ca60:	cset	w0, ne  // ne = any
  42ca64:	ret
  42ca68:	stp	x29, x30, [sp, #-288]!
  42ca6c:	mov	x29, sp
  42ca70:	stp	x19, x20, [sp, #16]
  42ca74:	mov	x19, x0
  42ca78:	stp	x21, x22, [sp, #32]
  42ca7c:	mov	x22, x2
  42ca80:	and	w21, w3, #0xff
  42ca84:	stp	x23, x24, [sp, #48]
  42ca88:	stp	x25, x26, [sp, #64]
  42ca8c:	mov	x25, x1
  42ca90:	and	w1, w5, #0xff
  42ca94:	stp	w1, w6, [sp, #120]
  42ca98:	str	w4, [sp, #140]
  42ca9c:	cbz	x2, 42d098 <nftw@plt+0x2a518>
  42caa0:	ldr	x20, [x19, #296]
  42caa4:	mov	x0, x25
  42caa8:	bl	460c20 <nftw@plt+0x5e0a0>
  42caac:	mov	w2, w0
  42cab0:	mov	x1, x25
  42cab4:	mov	x0, x20
  42cab8:	mov	w3, #0x1                   	// #1
  42cabc:	bl	460718 <nftw@plt+0x5db98>
  42cac0:	mov	x24, x0
  42cac4:	ldr	x0, [x0]
  42cac8:	cbnz	x0, 42cad8 <nftw@plt+0x29f58>
  42cacc:	b	42cb04 <nftw@plt+0x29f84>
  42cad0:	ldr	x0, [x0]
  42cad4:	cbz	x0, 42cb04 <nftw@plt+0x29f84>
  42cad8:	ldr	x1, [x0, #8]
  42cadc:	cmp	x22, x1
  42cae0:	b.ne	42cad0 <nftw@plt+0x29f50>  // b.any
  42cae4:	ldr	x20, [x0, #24]
  42cae8:	mov	x0, x20
  42caec:	ldp	x19, x20, [sp, #16]
  42caf0:	ldp	x21, x22, [sp, #32]
  42caf4:	ldp	x23, x24, [sp, #48]
  42caf8:	ldp	x25, x26, [sp, #64]
  42cafc:	ldp	x29, x30, [sp], #288
  42cb00:	ret
  42cb04:	mov	x1, #0xd8                  	// #216
  42cb08:	mov	x0, #0x1                   	// #1
  42cb0c:	stp	x27, x28, [sp, #80]
  42cb10:	bl	461598 <_obstack_memory_used@@Base+0x150>
  42cb14:	mov	x20, x0
  42cb18:	ldr	x1, [x19]
  42cb1c:	mov	w2, #0xffffffff            	// #-1
  42cb20:	str	x22, [x20, #64]
  42cb24:	mov	x0, x25
  42cb28:	cmp	x1, #0x0
  42cb2c:	str	w2, [x20, #200]
  42cb30:	cset	w1, eq  // eq = none
  42cb34:	strb	w1, [x20, #212]
  42cb38:	bl	4616a8 <_obstack_memory_used@@Base+0x260>
  42cb3c:	mov	x27, x0
  42cb40:	ldr	w1, [sp, #120]
  42cb44:	str	x27, [x20]
  42cb48:	mov	w0, w1
  42cb4c:	cbz	w1, 42d068 <nftw@plt+0x2a4e8>
  42cb50:	strb	w0, [x20, #214]
  42cb54:	cbnz	w21, 42d400 <nftw@plt+0x2a880>
  42cb58:	adrp	x0, 47c000 <_obstack_memory_used@@Base+0x1abb8>
  42cb5c:	add	x0, x0, #0x8b8
  42cb60:	str	x0, [sp, #144]
  42cb64:	ldrb	w0, [x19, #1145]
  42cb68:	str	wzr, [sp, #136]
  42cb6c:	stp	wzr, wzr, [sp, #152]
  42cb70:	ldr	x23, [x20, #64]
  42cb74:	cbnz	w0, 42cbd4 <nftw@plt+0x2a054>
  42cb78:	ldr	x2, [x23, #40]
  42cb7c:	cbz	x2, 42cee0 <nftw@plt+0x2a360>
  42cb80:	mov	x1, x23
  42cb84:	mov	x0, x27
  42cb88:	blr	x2
  42cb8c:	mov	x21, x0
  42cb90:	cbnz	x0, 42cc1c <nftw@plt+0x2a09c>
  42cb94:	mov	w0, #0x2                   	// #2
  42cb98:	str	xzr, [x20, #8]
  42cb9c:	str	w0, [x20, #204]
  42cba0:	ldr	x0, [x20, #64]
  42cba4:	ldr	x23, [x0]
  42cba8:	str	x23, [x20, #64]
  42cbac:	cbz	x23, 42d0c8 <nftw@plt+0x2a548>
  42cbb0:	ldr	x0, [x19, #208]
  42cbb4:	cmp	x23, x0
  42cbb8:	b.eq	42ced4 <nftw@plt+0x2a354>  // b.none
  42cbbc:	ldr	x0, [x19, #200]
  42cbc0:	cmp	x23, x0
  42cbc4:	b.eq	42cc5c <nftw@plt+0x2a0dc>  // b.none
  42cbc8:	ldrb	w0, [x19, #1145]
  42cbcc:	ldr	x27, [x20]
  42cbd0:	cbz	w0, 42cb78 <nftw@plt+0x29ff8>
  42cbd4:	ldr	x0, [x23, #32]
  42cbd8:	cbz	x0, 42cd64 <nftw@plt+0x2a1e4>
  42cbdc:	ldr	x0, [x0]
  42cbe0:	mov	x21, #0x0                   	// #0
  42cbe4:	cbnz	x0, 42cbfc <nftw@plt+0x2a07c>
  42cbe8:	b	42cc9c <nftw@plt+0x2a11c>
  42cbec:	ldr	x0, [x23, #32]
  42cbf0:	add	x21, x21, #0x2
  42cbf4:	ldr	x0, [x0, x21, lsl #3]
  42cbf8:	cbz	x0, 42cc9c <nftw@plt+0x2a11c>
  42cbfc:	mov	x1, x27
  42cc00:	bl	45fb48 <nftw@plt+0x5cfc8>
  42cc04:	cbnz	w0, 42cbec <nftw@plt+0x2a06c>
  42cc08:	ldr	x0, [x23, #32]
  42cc0c:	add	x21, x21, #0x1
  42cc10:	ldr	x0, [x0, x21, lsl #3]
  42cc14:	bl	4616a8 <_obstack_memory_used@@Base+0x260>
  42cc18:	mov	x21, x0
  42cc1c:	ldrb	w0, [x19, #1245]
  42cc20:	cbz	w0, 42cc30 <nftw@plt+0x2a0b0>
  42cc24:	ldr	x0, [x20, #64]
  42cc28:	ldrb	w0, [x0, #20]
  42cc2c:	cbnz	w0, 42cf4c <nftw@plt+0x2a3cc>
  42cc30:	mov	x0, x21
  42cc34:	bl	460c20 <nftw@plt+0x5e0a0>
  42cc38:	mov	w23, w0
  42cc3c:	mov	w2, w0
  42cc40:	ldr	x0, [x19, #320]
  42cc44:	mov	x1, x21
  42cc48:	bl	460558 <nftw@plt+0x5d9d8>
  42cc4c:	cbz	x0, 42cd74 <nftw@plt+0x2a1f4>
  42cc50:	mov	w0, #0x2                   	// #2
  42cc54:	str	w0, [x20, #204]
  42cc58:	b	42cba0 <nftw@plt+0x2a020>
  42cc5c:	mov	w0, #0x1                   	// #1
  42cc60:	str	w0, [sp, #136]
  42cc64:	ldr	x21, [x24]
  42cc68:	cbnz	x21, 42cc78 <nftw@plt+0x2a0f8>
  42cc6c:	b	42cbc8 <nftw@plt+0x2a048>
  42cc70:	ldr	x21, [x21]
  42cc74:	cbz	x21, 42cbc8 <nftw@plt+0x2a048>
  42cc78:	ldr	x27, [x21, #8]
  42cc7c:	cmp	x23, x27
  42cc80:	b.ne	42cc70 <nftw@plt+0x2a0f0>  // b.any
  42cc84:	ldr	x0, [x20]
  42cc88:	bl	402910 <free@plt>
  42cc8c:	mov	x0, x20
  42cc90:	bl	402910 <free@plt>
  42cc94:	ldr	x20, [x21, #24]
  42cc98:	b	42ce3c <nftw@plt+0x2a2bc>
  42cc9c:	ldrb	w0, [x27]
  42cca0:	cmp	w0, #0x2f
  42cca4:	b.eq	42d154 <nftw@plt+0x2a5d4>  // b.none
  42cca8:	mov	x0, x27
  42ccac:	mov	w1, #0x2f                  	// #47
  42ccb0:	bl	402940 <strchr@plt>
  42ccb4:	cmp	x0, #0x0
  42ccb8:	mov	x26, x0
  42ccbc:	ccmp	x27, x0, #0x4, ne  // ne = any
  42ccc0:	b.eq	42d154 <nftw@plt+0x2a5d4>  // b.none
  42ccc4:	sub	x4, x0, x27
  42ccc8:	ldr	w21, [x23, #16]
  42cccc:	add	x4, x4, #0x1
  42ccd0:	str	x4, [sp, #112]
  42ccd4:	add	x21, x21, x4
  42ccd8:	add	x0, x21, #0x2
  42ccdc:	bl	461560 <_obstack_memory_used@@Base+0x118>
  42cce0:	mov	x28, x0
  42cce4:	ldr	w2, [x23, #16]
  42cce8:	ldr	x1, [x23, #8]
  42ccec:	add	x6, x0, x2
  42ccf0:	str	x6, [sp, #104]
  42ccf4:	str	x2, [sp, #128]
  42ccf8:	bl	402490 <memcpy@plt>
  42ccfc:	ldr	w0, [x23, #16]
  42cd00:	ldp	x6, x4, [sp, #104]
  42cd04:	cbz	w0, 42cd30 <nftw@plt+0x2a1b0>
  42cd08:	ldr	x1, [x23, #8]
  42cd0c:	sub	w0, w0, #0x1
  42cd10:	ldrb	w0, [x1, w0, uxtw]
  42cd14:	cmp	w0, #0x2f
  42cd18:	b.eq	42cd30 <nftw@plt+0x2a1b0>  // b.none
  42cd1c:	ldr	x2, [sp, #128]
  42cd20:	add	x21, x21, #0x1
  42cd24:	add	x6, x6, #0x1
  42cd28:	mov	w0, #0x2f                  	// #47
  42cd2c:	strb	w0, [x28, x2]
  42cd30:	mov	x2, x4
  42cd34:	mov	x1, x27
  42cd38:	mov	x0, x6
  42cd3c:	bl	402490 <memcpy@plt>
  42cd40:	strb	wzr, [x28, x21]
  42cd44:	mov	x1, x28
  42cd48:	mov	x0, x19
  42cd4c:	add	x27, x26, #0x1
  42cd50:	ldrb	w2, [x23, #20]
  42cd54:	bl	42c658 <nftw@plt+0x29ad8>
  42cd58:	mov	x23, x0
  42cd5c:	ldr	x0, [x23, #32]
  42cd60:	cbnz	x0, 42cbdc <nftw@plt+0x2a05c>
  42cd64:	mov	x0, x23
  42cd68:	bl	42c790 <nftw@plt+0x29c10>
  42cd6c:	ldr	x0, [x23, #32]
  42cd70:	b	42cbdc <nftw@plt+0x2a05c>
  42cd74:	ldr	x0, [x20]
  42cd78:	str	x21, [x20, #8]
  42cd7c:	ldrb	w0, [x0]
  42cd80:	cbz	w0, 42cf90 <nftw@plt+0x2a410>
  42cd84:	ldr	x0, [x19, #968]
  42cd88:	cbz	x0, 42cf90 <nftw@plt+0x2a410>
  42cd8c:	ldr	x0, [x19, #280]
  42cd90:	cbz	x0, 42cda4 <nftw@plt+0x2a224>
  42cd94:	ldrb	w1, [x0, #214]
  42cd98:	cbnz	w1, 42d0b0 <nftw@plt+0x2a530>
  42cd9c:	ldrb	w0, [x0, #212]
  42cda0:	cbz	w0, 42cf90 <nftw@plt+0x2a410>
  42cda4:	mov	x0, x21
  42cda8:	bl	4024f0 <strlen@plt>
  42cdac:	mov	x2, x0
  42cdb0:	add	x0, x0, #0x5
  42cdb4:	mov	x28, x0
  42cdb8:	str	x2, [sp, #104]
  42cdbc:	bl	461560 <_obstack_memory_used@@Base+0x118>
  42cdc0:	mov	x27, x0
  42cdc4:	ldr	x2, [sp, #104]
  42cdc8:	mov	x1, x21
  42cdcc:	add	x26, x0, x2
  42cdd0:	bl	402490 <memcpy@plt>
  42cdd4:	ldr	x3, [sp, #144]
  42cdd8:	mov	x1, x27
  42cddc:	ldr	x2, [sp, #104]
  42cde0:	ldr	w0, [x3]
  42cde4:	ldrb	w3, [x3, #4]
  42cde8:	str	w0, [x27, x2]
  42cdec:	add	x2, sp, #0xa0
  42cdf0:	strb	w3, [x26, #4]
  42cdf4:	mov	w0, #0x0                   	// #0
  42cdf8:	bl	402ac0 <__xstat@plt>
  42cdfc:	cbnz	w0, 42cf84 <nftw@plt+0x2a404>
  42ce00:	ldr	w0, [sp, #176]
  42ce04:	and	w0, w0, #0xf000
  42ce08:	cmp	w0, #0x4, lsl #12
  42ce0c:	b.eq	42d130 <nftw@plt+0x2a5b0>  // b.none
  42ce10:	mov	x1, x20
  42ce14:	mov	x2, x27
  42ce18:	mov	x0, x19
  42ce1c:	bl	42c180 <nftw@plt+0x29600>
  42ce20:	and	w1, w0, #0xff
  42ce24:	cbz	w1, 42d140 <nftw@plt+0x2a5c0>
  42ce28:	str	x27, [x20, #16]
  42ce2c:	ldr	x0, [x19, #280]
  42ce30:	mov	x27, #0x0                   	// #0
  42ce34:	str	x0, [x20, #32]
  42ce38:	str	x20, [x19, #280]
  42ce3c:	ldr	x0, [x19, #312]
  42ce40:	ldr	w1, [x0]
  42ce44:	cmp	w1, #0x7f
  42ce48:	b.eq	42d160 <nftw@plt+0x2a5e0>  // b.none
  42ce4c:	ubfiz	x2, x1, #5, #32
  42ce50:	add	w3, w1, #0x1
  42ce54:	add	x2, x2, #0x10
  42ce58:	ldr	x4, [x19, #40]
  42ce5c:	ubfiz	x1, x1, #5, #32
  42ce60:	add	x1, x0, x1
  42ce64:	str	w3, [x0]
  42ce68:	add	x0, x0, x2
  42ce6c:	ldr	w2, [x4, #56]
  42ce70:	ldr	x3, [x24]
  42ce74:	stp	x3, x22, [x1, #16]
  42ce78:	str	w2, [x1, #32]
  42ce7c:	str	x20, [x1, #40]
  42ce80:	ldr	w1, [sp, #152]
  42ce84:	str	x0, [x24]
  42ce88:	cbz	w1, 42ce9c <nftw@plt+0x2a31c>
  42ce8c:	ldr	x2, [x19, #208]
  42ce90:	cmp	x2, x22
  42ce94:	ccmp	x2, x27, #0x4, ne  // ne = any
  42ce98:	b.ne	42d2f0 <nftw@plt+0x2a770>  // b.any
  42ce9c:	ldr	w1, [sp, #136]
  42cea0:	cbz	w1, 42ceb4 <nftw@plt+0x2a334>
  42cea4:	ldr	x2, [x19, #200]
  42cea8:	cmp	x2, x27
  42ceac:	ccmp	x2, x22, #0x4, ne  // ne = any
  42ceb0:	b.ne	42d188 <nftw@plt+0x2a608>  // b.any
  42ceb4:	mov	x0, x20
  42ceb8:	ldp	x19, x20, [sp, #16]
  42cebc:	ldp	x21, x22, [sp, #32]
  42cec0:	ldp	x23, x24, [sp, #48]
  42cec4:	ldp	x25, x26, [sp, #64]
  42cec8:	ldp	x27, x28, [sp, #80]
  42cecc:	ldp	x29, x30, [sp], #288
  42ced0:	ret
  42ced4:	mov	w0, #0x1                   	// #1
  42ced8:	str	w0, [sp, #152]
  42cedc:	b	42cc64 <nftw@plt+0x2a0e4>
  42cee0:	mov	x0, x27
  42cee4:	bl	4024f0 <strlen@plt>
  42cee8:	ldr	w26, [x23, #16]
  42ceec:	mov	x3, x0
  42cef0:	str	x3, [sp, #104]
  42cef4:	add	x0, x26, #0x2
  42cef8:	add	x0, x0, x3
  42cefc:	bl	461560 <_obstack_memory_used@@Base+0x118>
  42cf00:	ldr	x1, [x23, #8]
  42cf04:	mov	x21, x0
  42cf08:	mov	x2, x26
  42cf0c:	bl	402490 <memcpy@plt>
  42cf10:	mov	x0, x21
  42cf14:	ldr	x3, [sp, #104]
  42cf18:	cbz	x26, 42cf3c <nftw@plt+0x2a3bc>
  42cf1c:	add	x0, x21, x26
  42cf20:	ldurb	w1, [x0, #-1]
  42cf24:	cmp	w1, #0x2f
  42cf28:	b.eq	42cf3c <nftw@plt+0x2a3bc>  // b.none
  42cf2c:	add	x0, x26, #0x1
  42cf30:	mov	w1, #0x2f                  	// #47
  42cf34:	add	x0, x21, x0
  42cf38:	strb	w1, [x21, x26]
  42cf3c:	add	x2, x3, #0x1
  42cf40:	mov	x1, x27
  42cf44:	bl	402490 <memcpy@plt>
  42cf48:	b	42cc1c <nftw@plt+0x2a09c>
  42cf4c:	mov	x0, x21
  42cf50:	bl	460fe8 <nftw@plt+0x5e468>
  42cf54:	mov	x23, x0
  42cf58:	cbz	x0, 42d0bc <nftw@plt+0x2a53c>
  42cf5c:	bl	4024f0 <strlen@plt>
  42cf60:	mov	x27, x0
  42cf64:	mov	x0, x21
  42cf68:	bl	4024f0 <strlen@plt>
  42cf6c:	cmp	x27, x0
  42cf70:	b.cs	42d0bc <nftw@plt+0x2a53c>  // b.hs, b.nlast
  42cf74:	mov	x0, x21
  42cf78:	mov	x21, x23
  42cf7c:	bl	402910 <free@plt>
  42cf80:	b	42cc30 <nftw@plt+0x2a0b0>
  42cf84:	mov	x0, x27
  42cf88:	bl	402910 <free@plt>
  42cf8c:	nop
  42cf90:	mov	x0, x20
  42cf94:	bl	42c0a8 <nftw@plt+0x29528>
  42cf98:	tst	w0, #0xff
  42cf9c:	b.ne	42ce2c <nftw@plt+0x2a2ac>  // b.any
  42cfa0:	ldr	w0, [x20, #204]
  42cfa4:	cmp	w0, #0x2
  42cfa8:	b.ne	42d080 <nftw@plt+0x2a500>  // b.any
  42cfac:	add	x27, x19, #0x148
  42cfb0:	mov	x0, x21
  42cfb4:	bl	4024f0 <strlen@plt>
  42cfb8:	add	x1, x0, #0x1
  42cfbc:	mov	x2, x0
  42cfc0:	ldp	x0, x3, [x27, #24]
  42cfc4:	sub	x3, x3, x0
  42cfc8:	cmp	x3, x1
  42cfcc:	b.cc	42d33c <nftw@plt+0x2a7bc>  // b.lo, b.ul, b.last
  42cfd0:	mov	x1, x21
  42cfd4:	str	x2, [sp, #104]
  42cfd8:	bl	402490 <memcpy@plt>
  42cfdc:	ldr	x1, [x27, #24]
  42cfe0:	ldr	x2, [sp, #104]
  42cfe4:	add	x0, x1, x2
  42cfe8:	add	x0, x0, #0x1
  42cfec:	str	x0, [x27, #24]
  42cff0:	strb	wzr, [x1, x2]
  42cff4:	ldp	x1, x3, [x27, #16]
  42cff8:	cmp	x1, x3
  42cffc:	b.eq	42d354 <nftw@plt+0x2a7d4>  // b.none
  42d000:	ldr	x0, [x27, #48]
  42d004:	ldr	x2, [x27, #8]
  42d008:	add	x3, x3, x0
  42d00c:	ldr	x4, [x27, #32]
  42d010:	bic	x0, x3, x0
  42d014:	str	x0, [x27, #24]
  42d018:	sub	x3, x0, x2
  42d01c:	sub	x2, x4, x2
  42d020:	cmp	x3, x2
  42d024:	b.ls	42d030 <nftw@plt+0x2a4b0>  // b.plast
  42d028:	mov	x0, x4
  42d02c:	str	x4, [x27, #24]
  42d030:	str	x0, [x27, #16]
  42d034:	mov	x0, x21
  42d038:	str	x1, [sp, #104]
  42d03c:	bl	402910 <free@plt>
  42d040:	ldr	x1, [sp, #104]
  42d044:	mov	w2, w23
  42d048:	ldr	x0, [x19, #320]
  42d04c:	mov	w3, #0x1                   	// #1
  42d050:	bl	460718 <nftw@plt+0x5db98>
  42d054:	ldr	x1, [sp, #104]
  42d058:	str	x1, [x0]
  42d05c:	ldr	x0, [x20]
  42d060:	str	x0, [x20, #8]
  42d064:	b	42cba0 <nftw@plt+0x2a020>
  42d068:	ldr	x1, [x19]
  42d06c:	ldr	w0, [sp, #120]
  42d070:	cbz	x1, 42cb50 <nftw@plt+0x29fd0>
  42d074:	ldr	x0, [x1, #80]
  42d078:	ldrb	w0, [x0, #214]
  42d07c:	b	42cb50 <nftw@plt+0x29fd0>
  42d080:	ldr	w3, [sp, #124]
  42d084:	mov	x1, x20
  42d088:	mov	x0, x19
  42d08c:	mov	w2, #0x0                   	// #0
  42d090:	bl	42c2e0 <nftw@plt+0x29760>
  42d094:	b	42ce2c <nftw@plt+0x2a2ac>
  42d098:	mov	w2, w6
  42d09c:	adrp	x3, 47c000 <_obstack_memory_used@@Base+0x1abb8>
  42d0a0:	mov	w1, #0x4                   	// #4
  42d0a4:	add	x3, x3, #0x830
  42d0a8:	bl	4277f0 <nftw@plt+0x24c70>
  42d0ac:	b	42caa0 <nftw@plt+0x29f20>
  42d0b0:	ldr	x0, [x0, #32]
  42d0b4:	cbnz	x0, 42cd94 <nftw@plt+0x2a214>
  42d0b8:	b	42cda4 <nftw@plt+0x2a224>
  42d0bc:	mov	x0, x23
  42d0c0:	bl	402910 <free@plt>
  42d0c4:	b	42cc30 <nftw@plt+0x2a0b0>
  42d0c8:	ldr	x3, [x19, #984]
  42d0cc:	cbz	x3, 42d108 <nftw@plt+0x2a588>
  42d0d0:	mov	x1, x25
  42d0d4:	add	x2, x20, #0x40
  42d0d8:	mov	x0, x19
  42d0dc:	blr	x3
  42d0e0:	str	x0, [x20, #8]
  42d0e4:	cbz	x0, 42d100 <nftw@plt+0x2a580>
  42d0e8:	mov	x0, x20
  42d0ec:	bl	42c0a8 <nftw@plt+0x29528>
  42d0f0:	tst	w0, #0xff
  42d0f4:	b.ne	42d364 <nftw@plt+0x2a7e4>  // b.any
  42d0f8:	ldr	x0, [x20, #8]
  42d0fc:	bl	402910 <free@plt>
  42d100:	ldr	x0, [x20]
  42d104:	str	x0, [x20, #8]
  42d108:	ldr	w0, [sp, #156]
  42d10c:	cbnz	w0, 42d260 <nftw@plt+0x2a6e0>
  42d110:	ldr	w0, [sp, #120]
  42d114:	cbnz	w0, 42d29c <nftw@plt+0x2a71c>
  42d118:	ldr	w3, [sp, #124]
  42d11c:	mov	x1, x20
  42d120:	ldr	w2, [sp, #140]
  42d124:	mov	x0, x19
  42d128:	bl	42c2e0 <nftw@plt+0x29760>
  42d12c:	b	42ce2c <nftw@plt+0x2a2ac>
  42d130:	mov	x0, x27
  42d134:	bl	4025c0 <opendir@plt>
  42d138:	str	x0, [sp, #104]
  42d13c:	cbnz	x0, 42d1d4 <nftw@plt+0x2a654>
  42d140:	mov	w1, #0x1                   	// #1
  42d144:	mov	x0, x27
  42d148:	str	w1, [sp, #156]
  42d14c:	bl	402910 <free@plt>
  42d150:	b	42cf90 <nftw@plt+0x2a410>
  42d154:	ldr	x27, [x20]
  42d158:	ldr	x23, [x20, #64]
  42d15c:	b	42cb78 <nftw@plt+0x29ff8>
  42d160:	mov	x0, #0xff0                 	// #4080
  42d164:	bl	461560 <_obstack_memory_used@@Base+0x118>
  42d168:	ldr	x4, [x19, #312]
  42d16c:	mov	x2, #0x10                  	// #16
  42d170:	mov	w3, #0x1                   	// #1
  42d174:	mov	w1, #0x0                   	// #0
  42d178:	str	wzr, [x0]
  42d17c:	str	x4, [x0, #8]
  42d180:	str	x0, [x19, #312]
  42d184:	b	42ce58 <nftw@plt+0x2a2d8>
  42d188:	ldr	x3, [x19, #312]
  42d18c:	ldr	w1, [x3]
  42d190:	cmp	w1, #0x7f
  42d194:	b.eq	42d3cc <nftw@plt+0x2a84c>  // b.none
  42d198:	ubfiz	x4, x1, #5, #32
  42d19c:	add	w6, w1, #0x1
  42d1a0:	add	x4, x4, #0x10
  42d1a4:	ldr	x5, [x19, #40]
  42d1a8:	ubfiz	x1, x1, #5, #32
  42d1ac:	add	x1, x3, x1
  42d1b0:	ldp	x27, x28, [sp, #80]
  42d1b4:	str	w6, [x3]
  42d1b8:	add	x3, x3, x4
  42d1bc:	ldr	w4, [x5, #56]
  42d1c0:	stp	x0, x2, [x1, #16]
  42d1c4:	str	w4, [x1, #32]
  42d1c8:	str	x20, [x1, #40]
  42d1cc:	str	x3, [x24]
  42d1d0:	b	42cae8 <nftw@plt+0x29f68>
  42d1d4:	mov	w1, #0x2f                  	// #47
  42d1d8:	strb	w1, [x26, #4]
  42d1dc:	str	x28, [sp, #112]
  42d1e0:	ldr	x0, [sp, #104]
  42d1e4:	bl	402740 <readdir@plt>
  42d1e8:	mov	x1, x0
  42d1ec:	cbz	x0, 42d390 <nftw@plt+0x2a810>
  42d1f0:	ldurh	w1, [x1, #19]
  42d1f4:	add	x26, x0, #0x13
  42d1f8:	mov	x0, x26
  42d1fc:	cmp	w1, #0x2e
  42d200:	b.eq	42d1e0 <nftw@plt+0x2a660>  // b.none
  42d204:	mov	w2, #0x2e2e                	// #11822
  42d208:	cmp	w1, w2
  42d20c:	b.eq	42d2c0 <nftw@plt+0x2a740>  // b.none
  42d210:	bl	4024f0 <strlen@plt>
  42d214:	add	x2, x0, #0x1
  42d218:	ldr	x1, [sp, #112]
  42d21c:	add	x0, x28, x2
  42d220:	cmp	x0, x1
  42d224:	b.hi	42d2cc <nftw@plt+0x2a74c>  // b.pmore
  42d228:	mov	x1, x26
  42d22c:	add	x0, x27, x28
  42d230:	bl	402490 <memcpy@plt>
  42d234:	mov	x1, x20
  42d238:	mov	x2, x27
  42d23c:	mov	x0, x19
  42d240:	bl	42c180 <nftw@plt+0x29600>
  42d244:	ands	w1, w0, #0xff
  42d248:	b.eq	42d1e0 <nftw@plt+0x2a660>  // b.none
  42d24c:	ldr	x0, [sp, #104]
  42d250:	str	w1, [sp, #112]
  42d254:	bl	402780 <closedir@plt>
  42d258:	ldr	w1, [sp, #112]
  42d25c:	b	42ce24 <nftw@plt+0x2a2a4>
  42d260:	adrp	x2, 47c000 <_obstack_memory_used@@Base+0x1abb8>
  42d264:	add	x2, x2, #0x858
  42d268:	mov	w1, #0x3                   	// #3
  42d26c:	mov	x0, x19
  42d270:	bl	427178 <nftw@plt+0x245f8>
  42d274:	mov	x0, x19
  42d278:	bl	425b28 <nftw@plt+0x22fa8>
  42d27c:	ldrb	w0, [x0, #84]
  42d280:	cbnz	w0, 42d110 <nftw@plt+0x2a590>
  42d284:	mov	x0, x19
  42d288:	adrp	x2, 47c000 <_obstack_memory_used@@Base+0x1abb8>
  42d28c:	mov	w1, #0x3                   	// #3
  42d290:	add	x2, x2, #0x890
  42d294:	bl	427178 <nftw@plt+0x245f8>
  42d298:	b	42d110 <nftw@plt+0x2a590>
  42d29c:	ldr	x0, [x20]
  42d2a0:	bl	402910 <free@plt>
  42d2a4:	mov	x0, x20
  42d2a8:	bl	402910 <free@plt>
  42d2ac:	ldr	x0, [x24]
  42d2b0:	cbz	x0, 42d40c <nftw@plt+0x2a88c>
  42d2b4:	mov	x20, #0x0                   	// #0
  42d2b8:	ldp	x27, x28, [sp, #80]
  42d2bc:	b	42cae8 <nftw@plt+0x29f68>
  42d2c0:	ldrb	w1, [x26, #2]
  42d2c4:	cbz	w1, 42d1e0 <nftw@plt+0x2a660>
  42d2c8:	b	42d210 <nftw@plt+0x2a690>
  42d2cc:	add	x1, x1, #0x40
  42d2d0:	mov	x0, x27
  42d2d4:	add	x1, x2, x1
  42d2d8:	str	x1, [sp, #112]
  42d2dc:	str	x2, [sp, #128]
  42d2e0:	bl	4615e8 <_obstack_memory_used@@Base+0x1a0>
  42d2e4:	mov	x27, x0
  42d2e8:	ldr	x2, [sp, #128]
  42d2ec:	b	42d228 <nftw@plt+0x2a6a8>
  42d2f0:	ldr	x3, [x19, #312]
  42d2f4:	ldr	w1, [x3]
  42d2f8:	cmp	w1, #0x7f
  42d2fc:	b.eq	42d398 <nftw@plt+0x2a818>  // b.none
  42d300:	ubfiz	x4, x1, #5, #32
  42d304:	mov	x5, x0
  42d308:	add	w6, w1, #0x1
  42d30c:	add	x0, x4, #0x10
  42d310:	ldr	x4, [x19, #40]
  42d314:	ubfiz	x1, x1, #5, #32
  42d318:	add	x1, x3, x1
  42d31c:	add	x0, x3, x0
  42d320:	str	w6, [x3]
  42d324:	ldr	w3, [x4, #56]
  42d328:	stp	x5, x2, [x1, #16]
  42d32c:	str	w3, [x1, #32]
  42d330:	str	x20, [x1, #40]
  42d334:	str	x0, [x24]
  42d338:	b	42ce9c <nftw@plt+0x2a31c>
  42d33c:	mov	x0, x27
  42d340:	str	x2, [sp, #104]
  42d344:	bl	461200 <_obstack_newchunk@@Base>
  42d348:	ldr	x0, [x27, #24]
  42d34c:	ldr	x2, [sp, #104]
  42d350:	b	42cfd0 <nftw@plt+0x2a450>
  42d354:	ldrb	w0, [x27, #80]
  42d358:	orr	w0, w0, #0x2
  42d35c:	strb	w0, [x27, #80]
  42d360:	b	42d000 <nftw@plt+0x2a480>
  42d364:	ldr	x0, [x19, #280]
  42d368:	str	x0, [x20, #32]
  42d36c:	str	x20, [x19, #280]
  42d370:	ldr	x0, [x24]
  42d374:	cbnz	x0, 42ceb4 <nftw@plt+0x2a334>
  42d378:	str	x20, [x24]
  42d37c:	mov	x1, x24
  42d380:	ldr	x0, [x19, #296]
  42d384:	bl	460aa8 <nftw@plt+0x5df28>
  42d388:	ldp	x27, x28, [sp, #80]
  42d38c:	b	42cae8 <nftw@plt+0x29f68>
  42d390:	mov	w1, #0x0                   	// #0
  42d394:	b	42d24c <nftw@plt+0x2a6cc>
  42d398:	mov	x0, #0xff0                 	// #4080
  42d39c:	bl	461560 <_obstack_memory_used@@Base+0x118>
  42d3a0:	mov	x3, x0
  42d3a4:	mov	w6, #0x1                   	// #1
  42d3a8:	ldr	x0, [x19, #312]
  42d3ac:	str	x3, [x19, #312]
  42d3b0:	str	x0, [x3, #8]
  42d3b4:	mov	w1, #0x0                   	// #0
  42d3b8:	mov	x0, #0x10                  	// #16
  42d3bc:	str	wzr, [x3]
  42d3c0:	ldr	x5, [x24]
  42d3c4:	ldr	x2, [x19, #208]
  42d3c8:	b	42d310 <nftw@plt+0x2a790>
  42d3cc:	mov	x0, #0xff0                 	// #4080
  42d3d0:	bl	461560 <_obstack_memory_used@@Base+0x118>
  42d3d4:	mov	x3, x0
  42d3d8:	mov	w6, #0x1                   	// #1
  42d3dc:	ldr	x0, [x19, #312]
  42d3e0:	str	x3, [x19, #312]
  42d3e4:	str	x0, [x3, #8]
  42d3e8:	mov	w1, #0x0                   	// #0
  42d3ec:	mov	x4, #0x10                  	// #16
  42d3f0:	str	wzr, [x3]
  42d3f4:	ldr	x0, [x24]
  42d3f8:	ldr	x2, [x19, #200]
  42d3fc:	b	42d1a4 <nftw@plt+0x2a624>
  42d400:	str	wzr, [sp, #136]
  42d404:	str	wzr, [sp, #152]
  42d408:	b	42ce2c <nftw@plt+0x2a2ac>
  42d40c:	str	x20, [x24]
  42d410:	mov	x1, x24
  42d414:	mov	x20, #0x0                   	// #0
  42d418:	ldr	x0, [x19, #296]
  42d41c:	bl	460aa8 <nftw@plt+0x5df28>
  42d420:	ldp	x27, x28, [sp, #80]
  42d424:	b	42cae8 <nftw@plt+0x29f68>
  42d428:	stp	x29, x30, [sp, #-160]!
  42d42c:	mov	x29, sp
  42d430:	stp	x19, x20, [sp, #16]
  42d434:	ldrb	w20, [x1, #210]
  42d438:	cbnz	w20, 42d4d8 <nftw@plt+0x2a958>
  42d43c:	stp	x21, x22, [sp, #32]
  42d440:	mov	x19, x1
  42d444:	mov	w21, w3
  42d448:	stp	x27, x28, [sp, #80]
  42d44c:	mov	x28, x0
  42d450:	and	w27, w2, #0xff
  42d454:	cbz	w27, 42d46c <nftw@plt+0x2a8ec>
  42d458:	ldrh	w1, [x1, #208]
  42d45c:	mov	w0, #0x1                   	// #1
  42d460:	strb	w0, [x28, #417]
  42d464:	strb	w0, [x19, #210]
  42d468:	cbnz	w1, 42d4ec <nftw@plt+0x2a96c>
  42d46c:	ldr	x0, [x19, #56]
  42d470:	cbz	x0, 42d47c <nftw@plt+0x2a8fc>
  42d474:	ldrb	w0, [x0, #18]
  42d478:	tbnz	w0, #1, 42d4ec <nftw@plt+0x2a96c>
  42d47c:	ldr	x1, [x19, #16]
  42d480:	cbz	x1, 42d4f8 <nftw@plt+0x2a978>
  42d484:	ldr	w2, [x19, #200]
  42d488:	mov	x0, x28
  42d48c:	ldr	x3, [x19, #8]
  42d490:	ldr	x4, [x28, #976]
  42d494:	blr	x4
  42d498:	ldr	x0, [x19, #16]
  42d49c:	mov	w1, #0xffffffff            	// #-1
  42d4a0:	str	w1, [x19, #200]
  42d4a4:	bl	402910 <free@plt>
  42d4a8:	ldp	x21, x22, [sp, #32]
  42d4ac:	mov	w0, w20
  42d4b0:	ldp	x27, x28, [sp, #80]
  42d4b4:	str	xzr, [x19, #16]
  42d4b8:	ldp	x19, x20, [sp, #16]
  42d4bc:	ldp	x29, x30, [sp], #160
  42d4c0:	ret
  42d4c4:	ldp	x21, x22, [sp, #32]
  42d4c8:	ldp	x23, x24, [sp, #48]
  42d4cc:	ldp	x25, x26, [sp, #64]
  42d4d0:	ldp	x27, x28, [sp, #80]
  42d4d4:	nop
  42d4d8:	mov	w20, #0x0                   	// #0
  42d4dc:	mov	w0, w20
  42d4e0:	ldp	x19, x20, [sp, #16]
  42d4e4:	ldp	x29, x30, [sp], #160
  42d4e8:	ret
  42d4ec:	ldp	x21, x22, [sp, #32]
  42d4f0:	ldp	x27, x28, [sp, #80]
  42d4f4:	b	42d4d8 <nftw@plt+0x2a958>
  42d4f8:	mov	w2, w21
  42d4fc:	mov	x1, x19
  42d500:	mov	x0, x28
  42d504:	bl	42c410 <nftw@plt+0x29890>
  42d508:	ands	w20, w0, #0xff
  42d50c:	b.eq	42d4ec <nftw@plt+0x2a96c>  // b.none
  42d510:	adrp	x0, 4a5000 <__environ@@GLIBC_2.17+0xa68>
  42d514:	stp	x25, x26, [sp, #64]
  42d518:	ldr	x26, [x0, #2440]
  42d51c:	stp	x23, x24, [sp, #48]
  42d520:	cbz	x26, 42d5bc <nftw@plt+0x2aa3c>
  42d524:	cbnz	w27, 42d530 <nftw@plt+0x2a9b0>
  42d528:	ldrb	w0, [x26, #8]
  42d52c:	cbz	w0, 42d5bc <nftw@plt+0x2aa3c>
  42d530:	ldr	x0, [x19, #120]
  42d534:	str	x0, [sp, #120]
  42d538:	mov	x0, x26
  42d53c:	strb	wzr, [sp, #144]
  42d540:	strb	w27, [sp, #145]
  42d544:	ldr	x25, [x0], #16
  42d548:	str	x0, [sp, #104]
  42d54c:	str	x19, [sp, #152]
  42d550:	cbz	x25, 42d5bc <nftw@plt+0x2aa3c>
  42d554:	add	x26, sp, #0x80
  42d558:	mov	x24, #0x0                   	// #0
  42d55c:	nop
  42d560:	add	x22, x25, x24
  42d564:	add	x0, sp, #0x78
  42d568:	ldr	x1, [sp, #104]
  42d56c:	lsr	x22, x22, #1
  42d570:	mov	x2, #0x8                   	// #8
  42d574:	add	x23, x1, x22, lsl #5
  42d578:	mov	x1, x23
  42d57c:	bl	402850 <memcmp@plt>
  42d580:	cbnz	w0, 42d7b0 <nftw@plt+0x2ac30>
  42d584:	ldrb	w0, [sp, #144]
  42d588:	cbz	w0, 42d7bc <nftw@plt+0x2ac3c>
  42d58c:	add	x1, x23, #0x8
  42d590:	mov	x0, x26
  42d594:	mov	x2, #0x10                  	// #16
  42d598:	bl	402850 <memcmp@plt>
  42d59c:	cbnz	w0, 42d7b0 <nftw@plt+0x2ac30>
  42d5a0:	ldrb	w0, [sp, #145]
  42d5a4:	cbnz	w0, 42d68c <nftw@plt+0x2ab0c>
  42d5a8:	ldrb	w0, [x23, #24]
  42d5ac:	cbnz	w0, 42d68c <nftw@plt+0x2ab0c>
  42d5b0:	add	x24, x22, #0x1
  42d5b4:	cmp	x25, x24
  42d5b8:	b.hi	42d560 <nftw@plt+0x2a9e0>  // b.pmore
  42d5bc:	ldrb	w0, [x28, #417]
  42d5c0:	cbz	w0, 42d6b4 <nftw@plt+0x2ab34>
  42d5c4:	ldr	x22, [x28, #280]
  42d5c8:	cbz	x22, 42d6b4 <nftw@plt+0x2ab34>
  42d5cc:	mov	w23, #0xffffffff            	// #-1
  42d5d0:	b	42d5dc <nftw@plt+0x2aa5c>
  42d5d4:	ldr	x22, [x22, #32]
  42d5d8:	cbz	x22, 42d6b4 <nftw@plt+0x2ab34>
  42d5dc:	cmp	x19, x22
  42d5e0:	b.eq	42d5d4 <nftw@plt+0x2aa54>  // b.none
  42d5e4:	cbnz	w27, 42d5f0 <nftw@plt+0x2aa70>
  42d5e8:	ldrb	w0, [x22, #210]
  42d5ec:	cbz	w0, 42d5d4 <nftw@plt+0x2aa54>
  42d5f0:	ldr	w0, [x22, #204]
  42d5f4:	cbnz	w0, 42d5d4 <nftw@plt+0x2aa54>
  42d5f8:	ldr	x0, [x19, #160]
  42d5fc:	ldr	x1, [x22, #160]
  42d600:	cmp	x1, x0
  42d604:	b.ne	42d5d4 <nftw@plt+0x2aa54>  // b.any
  42d608:	ldr	x0, [x19, #120]
  42d60c:	ldr	x1, [x22, #120]
  42d610:	cmp	x1, x0
  42d614:	b.ne	42d5d4 <nftw@plt+0x2aa54>  // b.any
  42d618:	ldr	x0, [x22, #40]
  42d61c:	mov	x24, x22
  42d620:	cbz	x0, 42d62c <nftw@plt+0x2aaac>
  42d624:	ldrb	w0, [x22, #213]
  42d628:	cbz	w0, 42d7dc <nftw@plt+0x2ac5c>
  42d62c:	mov	w2, w21
  42d630:	mov	x1, x24
  42d634:	mov	x0, x28
  42d638:	bl	42c410 <nftw@plt+0x29890>
  42d63c:	tst	w0, #0xff
  42d640:	b.eq	42d654 <nftw@plt+0x2aad4>  // b.none
  42d644:	ldr	x0, [x19, #120]
  42d648:	ldr	x2, [x24, #120]
  42d64c:	cmp	x2, x0
  42d650:	b.eq	42d820 <nftw@plt+0x2aca0>  // b.none
  42d654:	ldr	x0, [x22, #40]
  42d658:	cbz	x0, 42d5d4 <nftw@plt+0x2aa54>
  42d65c:	ldrb	w0, [x22, #213]
  42d660:	cbnz	w0, 42d5d4 <nftw@plt+0x2aa54>
  42d664:	ldr	x0, [x24, #48]
  42d668:	str	xzr, [x24, #8]
  42d66c:	bl	402910 <free@plt>
  42d670:	ldr	x0, [x24]
  42d674:	bl	402910 <free@plt>
  42d678:	ldr	x0, [x24, #8]
  42d67c:	bl	402910 <free@plt>
  42d680:	mov	x0, x24
  42d684:	bl	402910 <free@plt>
  42d688:	b	42d5d4 <nftw@plt+0x2aa54>
  42d68c:	cbnz	w27, 42d4c4 <nftw@plt+0x2a944>
  42d690:	mov	w0, #0x1                   	// #1
  42d694:	strb	w0, [x28, #417]
  42d698:	mov	w20, #0x0                   	// #0
  42d69c:	strb	w0, [x19, #210]
  42d6a0:	ldp	x21, x22, [sp, #32]
  42d6a4:	ldp	x23, x24, [sp, #48]
  42d6a8:	ldp	x25, x26, [sp, #64]
  42d6ac:	ldp	x27, x28, [sp, #80]
  42d6b0:	b	42d4dc <nftw@plt+0x2a95c>
  42d6b4:	ldr	x0, [x28]
  42d6b8:	cbz	x0, 42d7a0 <nftw@plt+0x2ac20>
  42d6bc:	ldr	x1, [x19, #64]
  42d6c0:	cbz	x1, 42d7a0 <nftw@plt+0x2ac20>
  42d6c4:	ldrb	w21, [x1, #20]
  42d6c8:	ldrb	w0, [x0, #106]
  42d6cc:	cmp	w21, w0, uxtb
  42d6d0:	csel	w21, w21, w0, cs  // cs = hs, nlast
  42d6d4:	ands	w21, w21, #0xff
  42d6d8:	cset	w2, ne  // ne = any
  42d6dc:	mov	w22, w21
  42d6e0:	ldr	w1, [x28, #1200]
  42d6e4:	ldrh	w0, [x19, #208]
  42d6e8:	cmp	w1, w2
  42d6ec:	b.le	42d718 <nftw@plt+0x2ab98>
  42d6f0:	cbnz	w0, 42d718 <nftw@plt+0x2ab98>
  42d6f4:	ldrb	w1, [x19, #212]
  42d6f8:	cbz	w1, 42d704 <nftw@plt+0x2ab84>
  42d6fc:	ldrb	w1, [x28, #1206]
  42d700:	cbnz	w1, 42d718 <nftw@plt+0x2ab98>
  42d704:	ldr	x1, [x19, #8]
  42d708:	ldr	x0, [x28, #712]
  42d70c:	bl	43ece0 <nftw@plt+0x3c160>
  42d710:	ldrh	w0, [x19, #208]
  42d714:	nop
  42d718:	add	w0, w0, #0x1
  42d71c:	strh	w0, [x19, #208]
  42d720:	strb	wzr, [x19, #213]
  42d724:	mov	w3, #0x0                   	// #0
  42d728:	ldr	x1, [x19, #40]
  42d72c:	ldrb	w0, [x28, #1155]
  42d730:	ldr	x2, [x19, #120]
  42d734:	cbz	w0, 42d740 <nftw@plt+0x2abc0>
  42d738:	ldrb	w3, [x28, #1244]
  42d73c:	eor	w3, w3, #0x1
  42d740:	mov	x0, x28
  42d744:	bl	425b90 <nftw@plt+0x23010>
  42d748:	mov	x6, x0
  42d74c:	mov	w7, #0x1                   	// #1
  42d750:	mov	w4, w22
  42d754:	mov	x0, x28
  42d758:	mov	w3, #0x1                   	// #1
  42d75c:	mov	w1, #0x0                   	// #0
  42d760:	strb	w21, [x6, #106]
  42d764:	ldr	x2, [x19, #8]
  42d768:	ldr	x8, [x19, #48]
  42d76c:	str	x8, [x6, #40]
  42d770:	str	x19, [x6, #80]
  42d774:	str	xzr, [x28, #424]
  42d778:	strb	w7, [x28, #440]
  42d77c:	bl	425620 <nftw@plt+0x22aa0>
  42d780:	mov	w0, w20
  42d784:	ldp	x19, x20, [sp, #16]
  42d788:	ldp	x21, x22, [sp, #32]
  42d78c:	ldp	x23, x24, [sp, #48]
  42d790:	ldp	x25, x26, [sp, #64]
  42d794:	ldp	x27, x28, [sp, #80]
  42d798:	ldp	x29, x30, [sp], #160
  42d79c:	ret
  42d7a0:	mov	w22, #0x0                   	// #0
  42d7a4:	mov	w21, #0x0                   	// #0
  42d7a8:	mov	w2, #0x0                   	// #0
  42d7ac:	b	42d6e0 <nftw@plt+0x2ab60>
  42d7b0:	tbz	w0, #31, 42d5b0 <nftw@plt+0x2aa30>
  42d7b4:	mov	x25, x22
  42d7b8:	b	42d5b4 <nftw@plt+0x2aa34>
  42d7bc:	ldr	x1, [sp, #152]
  42d7c0:	mov	x2, x26
  42d7c4:	ldr	x0, [x1, #40]
  42d7c8:	ldr	x1, [x1, #120]
  42d7cc:	bl	45f1e8 <nftw@plt+0x5c668>
  42d7d0:	mov	w0, #0x1                   	// #1
  42d7d4:	strb	w0, [sp, #144]
  42d7d8:	b	42d58c <nftw@plt+0x2aa0c>
  42d7dc:	mov	x1, #0xd8                  	// #216
  42d7e0:	mov	x0, #0x1                   	// #1
  42d7e4:	ldr	x26, [x22]
  42d7e8:	ldr	x25, [x22, #64]
  42d7ec:	bl	461598 <_obstack_memory_used@@Base+0x150>
  42d7f0:	ldr	x1, [x28]
  42d7f4:	mov	x24, x0
  42d7f8:	mov	x0, x26
  42d7fc:	cmp	x1, #0x0
  42d800:	cset	w1, eq  // eq = none
  42d804:	str	x25, [x24, #64]
  42d808:	str	w23, [x24, #200]
  42d80c:	strb	w1, [x24, #212]
  42d810:	bl	4616a8 <_obstack_memory_used@@Base+0x260>
  42d814:	ldr	x1, [x22, #8]
  42d818:	stp	x0, x1, [x24]
  42d81c:	b	42d62c <nftw@plt+0x2aaac>
  42d820:	ldr	x1, [x19, #40]
  42d824:	ldr	x0, [x24, #40]
  42d828:	bl	402850 <memcmp@plt>
  42d82c:	cbnz	w0, 42d654 <nftw@plt+0x2aad4>
  42d830:	ldr	x0, [x22, #40]
  42d834:	cbz	x0, 42d4c4 <nftw@plt+0x2a944>
  42d838:	ldrb	w20, [x22, #213]
  42d83c:	cbnz	w20, 42d4c4 <nftw@plt+0x2a944>
  42d840:	ldr	x0, [x24, #48]
  42d844:	str	xzr, [x24, #8]
  42d848:	bl	402910 <free@plt>
  42d84c:	ldr	x0, [x24]
  42d850:	bl	402910 <free@plt>
  42d854:	ldr	x0, [x24, #8]
  42d858:	bl	402910 <free@plt>
  42d85c:	mov	x0, x24
  42d860:	bl	402910 <free@plt>
  42d864:	ldp	x21, x22, [sp, #32]
  42d868:	ldp	x23, x24, [sp, #48]
  42d86c:	ldp	x25, x26, [sp, #64]
  42d870:	ldp	x27, x28, [sp, #80]
  42d874:	b	42d4dc <nftw@plt+0x2a95c>
  42d878:	mov	w2, #0x1                   	// #1
  42d87c:	strb	w2, [x0, #417]
  42d880:	strb	w2, [x1, #210]
  42d884:	ret
  42d888:	stp	x29, x30, [sp, #-96]!
  42d88c:	cmp	w3, #0x3
  42d890:	mov	x29, sp
  42d894:	stp	x19, x20, [sp, #16]
  42d898:	mov	w20, w3
  42d89c:	mov	x19, x0
  42d8a0:	stp	x21, x22, [sp, #32]
  42d8a4:	mov	x21, x1
  42d8a8:	mov	w22, w2
  42d8ac:	stp	x23, x24, [sp, #48]
  42d8b0:	mov	w23, w4
  42d8b4:	b.eq	42d9a4 <nftw@plt+0x2ae24>  // b.none
  42d8b8:	ldrb	w0, [x21]
  42d8bc:	add	x2, x19, #0xd8
  42d8c0:	cmp	w0, #0x2f
  42d8c4:	b.eq	42d8e8 <nftw@plt+0x2ad68>  // b.none
  42d8c8:	ldr	x1, [x19]
  42d8cc:	cbz	x1, 42da98 <nftw@plt+0x2af18>
  42d8d0:	ldr	x24, [x1, #80]
  42d8d4:	cmp	w20, #0x1
  42d8d8:	b.eq	42d9c0 <nftw@plt+0x2ae40>  // b.none
  42d8dc:	cbz	w22, 42d94c <nftw@plt+0x2adcc>
  42d8e0:	ldr	x2, [x19, #208]
  42d8e4:	cbz	x2, 42daa8 <nftw@plt+0x2af28>
  42d8e8:	cmp	w20, #0x4
  42d8ec:	mov	w4, w22
  42d8f0:	cset	w22, eq  // eq = none
  42d8f4:	mov	x1, x21
  42d8f8:	mov	w5, w22
  42d8fc:	mov	w6, w23
  42d900:	mov	x0, x19
  42d904:	mov	w3, #0x0                   	// #0
  42d908:	bl	42ca68 <nftw@plt+0x29ee8>
  42d90c:	cmp	x0, #0x0
  42d910:	mov	x21, x0
  42d914:	ccmp	w22, #0x0, #0x4, eq  // eq = none
  42d918:	b.ne	42d98c <nftw@plt+0x2ae0c>  // b.any
  42d91c:	ldr	x0, [x21, #16]
  42d920:	cmp	w20, #0x2
  42d924:	cset	w2, eq  // eq = none
  42d928:	cbz	x0, 42da0c <nftw@plt+0x2ae8c>
  42d92c:	mov	w3, w23
  42d930:	mov	x1, x21
  42d934:	mov	x0, x19
  42d938:	ldp	x19, x20, [sp, #16]
  42d93c:	ldp	x21, x22, [sp, #32]
  42d940:	ldp	x23, x24, [sp, #48]
  42d944:	ldp	x29, x30, [sp], #96
  42d948:	b	42d428 <nftw@plt+0x2a8a8>
  42d94c:	cmp	w20, #0x3
  42d950:	b.eq	42dad0 <nftw@plt+0x2af50>  // b.none
  42d954:	ldrb	w0, [x19, #416]
  42d958:	cbnz	w0, 42daa0 <nftw@plt+0x2af20>
  42d95c:	stp	x25, x26, [sp, #64]
  42d960:	ldr	x25, [x24, #24]
  42d964:	cbz	x25, 42db10 <nftw@plt+0x2af90>
  42d968:	mov	w2, #0x0                   	// #0
  42d96c:	cbz	x1, 42d974 <nftw@plt+0x2adf4>
  42d970:	ldrb	w2, [x1, #106]
  42d974:	mov	x1, x25
  42d978:	mov	x0, x19
  42d97c:	bl	42c658 <nftw@plt+0x29ad8>
  42d980:	mov	x2, x0
  42d984:	ldp	x25, x26, [sp, #64]
  42d988:	cbnz	x0, 42d8e8 <nftw@plt+0x2ad68>
  42d98c:	mov	w0, #0x0                   	// #0
  42d990:	ldp	x19, x20, [sp, #16]
  42d994:	ldp	x21, x22, [sp, #32]
  42d998:	ldp	x23, x24, [sp, #48]
  42d99c:	ldp	x29, x30, [sp], #96
  42d9a0:	ret
  42d9a4:	ldr	x1, [x19, #488]
  42d9a8:	ldr	x0, [x0, #448]
  42d9ac:	ldr	x1, [x1, #16]
  42d9b0:	cmp	x0, x1
  42d9b4:	b.eq	42d8b8 <nftw@plt+0x2ad38>  // b.none
  42d9b8:	stur	wzr, [x0, #-24]
  42d9bc:	b	42d8b8 <nftw@plt+0x2ad38>
  42d9c0:	ldr	x0, [x24, #64]
  42d9c4:	cbz	x0, 42dac4 <nftw@plt+0x2af44>
  42d9c8:	add	x2, x19, #0xd8
  42d9cc:	cmp	x0, x2
  42d9d0:	b.eq	42dac4 <nftw@plt+0x2af44>  // b.none
  42d9d4:	ldr	x2, [x0]
  42d9d8:	cbz	x2, 42daa8 <nftw@plt+0x2af28>
  42d9dc:	mov	x1, x21
  42d9e0:	mov	w4, w22
  42d9e4:	mov	w6, w23
  42d9e8:	mov	x0, x19
  42d9ec:	mov	w5, #0x0                   	// #0
  42d9f0:	mov	w3, #0x0                   	// #0
  42d9f4:	bl	42ca68 <nftw@plt+0x29ee8>
  42d9f8:	mov	x21, x0
  42d9fc:	cmp	w20, #0x2
  42da00:	cset	w2, eq  // eq = none
  42da04:	ldr	x0, [x21, #16]
  42da08:	cbnz	x0, 42d92c <nftw@plt+0x2adac>
  42da0c:	ldr	w0, [x21, #204]
  42da10:	cbnz	w0, 42d92c <nftw@plt+0x2adac>
  42da14:	sub	w20, w20, #0x3
  42da18:	cmp	w20, #0x1
  42da1c:	b.ls	42d92c <nftw@plt+0x2adac>  // b.plast
  42da20:	ldr	x0, [x19, #40]
  42da24:	str	w2, [sp, #92]
  42da28:	ldr	w1, [x0, #56]
  42da2c:	bl	436488 <nftw@plt+0x33908>
  42da30:	mov	w20, w0
  42da34:	ldr	x0, [x19, #40]
  42da38:	mov	w1, w23
  42da3c:	bl	436488 <nftw@plt+0x33908>
  42da40:	cmp	w20, w0
  42da44:	ldr	w2, [sp, #92]
  42da48:	b.le	42d92c <nftw@plt+0x2adac>
  42da4c:	ldr	x5, [x19, #40]
  42da50:	mov	w3, w23
  42da54:	mov	x1, x21
  42da58:	mov	x0, x19
  42da5c:	ldr	w4, [x5, #56]
  42da60:	sub	w4, w4, #0x1
  42da64:	str	w4, [x5, #56]
  42da68:	bl	42d428 <nftw@plt+0x2a8a8>
  42da6c:	ands	w0, w0, #0xff
  42da70:	b.ne	42d990 <nftw@plt+0x2ae10>  // b.any
  42da74:	ldr	x2, [x19, #40]
  42da78:	ldp	x19, x20, [sp, #16]
  42da7c:	ldr	w1, [x2, #56]
  42da80:	ldp	x21, x22, [sp, #32]
  42da84:	add	w1, w1, #0x1
  42da88:	str	w1, [x2, #56]
  42da8c:	ldp	x23, x24, [sp, #48]
  42da90:	ldp	x29, x30, [sp], #96
  42da94:	ret
  42da98:	ldr	x24, [x19, #288]
  42da9c:	b	42d8d4 <nftw@plt+0x2ad54>
  42daa0:	ldr	x2, [x19, #200]
  42daa4:	cbnz	x2, 42d8e8 <nftw@plt+0x2ad68>
  42daa8:	mov	x3, x21
  42daac:	mov	x0, x19
  42dab0:	adrp	x2, 47c000 <_obstack_memory_used@@Base+0x1abb8>
  42dab4:	mov	w1, #0x3                   	// #3
  42dab8:	add	x2, x2, #0x8c8
  42dabc:	bl	427178 <nftw@plt+0x245f8>
  42dac0:	b	42d98c <nftw@plt+0x2ae0c>
  42dac4:	cbz	w22, 42d954 <nftw@plt+0x2add4>
  42dac8:	ldr	x2, [x19, #208]
  42dacc:	b	42d8e4 <nftw@plt+0x2ad64>
  42dad0:	adrp	x1, 47c000 <_obstack_memory_used@@Base+0x1abb8>
  42dad4:	mov	x0, x19
  42dad8:	add	x1, x1, #0x8c0
  42dadc:	mov	w2, #0x0                   	// #0
  42dae0:	bl	42c658 <nftw@plt+0x29ad8>
  42dae4:	cbz	x0, 42d98c <nftw@plt+0x2ae0c>
  42dae8:	mov	x2, x0
  42daec:	mov	x1, x21
  42daf0:	mov	w6, w23
  42daf4:	mov	x0, x19
  42daf8:	mov	w5, #0x0                   	// #0
  42dafc:	mov	w4, #0x0                   	// #0
  42db00:	mov	w3, #0x0                   	// #0
  42db04:	bl	42ca68 <nftw@plt+0x29ee8>
  42db08:	mov	x21, x0
  42db0c:	b	42d91c <nftw@plt+0x2ad9c>
  42db10:	ldr	x0, [x24, #8]
  42db14:	bl	460fc0 <nftw@plt+0x5e440>
  42db18:	ldr	x26, [x24, #8]
  42db1c:	sub	x26, x0, x26
  42db20:	add	x0, x26, #0x1
  42db24:	bl	461560 <_obstack_memory_used@@Base+0x118>
  42db28:	ldr	x1, [x24, #8]
  42db2c:	mov	x25, x0
  42db30:	mov	x2, x26
  42db34:	bl	402490 <memcpy@plt>
  42db38:	strb	wzr, [x25, x26]
  42db3c:	ldr	x1, [x19]
  42db40:	str	x25, [x24, #24]
  42db44:	b	42d968 <nftw@plt+0x2ade8>
  42db48:	stp	x29, x30, [sp, #-32]!
  42db4c:	mov	x2, x0
  42db50:	mov	x0, x1
  42db54:	mov	x29, sp
  42db58:	stp	x19, x20, [sp, #16]
  42db5c:	mov	x19, x1
  42db60:	ldr	x20, [x2, #296]
  42db64:	bl	460c20 <nftw@plt+0x5e0a0>
  42db68:	mov	x1, x19
  42db6c:	mov	w2, w0
  42db70:	mov	x0, x20
  42db74:	bl	460558 <nftw@plt+0x5d9d8>
  42db78:	cbz	x0, 42dbb8 <nftw@plt+0x2b038>
  42db7c:	nop
  42db80:	ldr	x1, [x0, #8]
  42db84:	cbz	x1, 42db94 <nftw@plt+0x2b014>
  42db88:	ldr	x1, [x0, #24]
  42db8c:	ldr	w1, [x1, #204]
  42db90:	cbz	w1, 42dba8 <nftw@plt+0x2b028>
  42db94:	ldr	x0, [x0]
  42db98:	cbnz	x0, 42db80 <nftw@plt+0x2b000>
  42db9c:	ldp	x19, x20, [sp, #16]
  42dba0:	ldp	x29, x30, [sp], #32
  42dba4:	ret
  42dba8:	mov	w0, #0x1                   	// #1
  42dbac:	ldp	x19, x20, [sp, #16]
  42dbb0:	ldp	x29, x30, [sp], #32
  42dbb4:	ret
  42dbb8:	mov	w0, #0x0                   	// #0
  42dbbc:	b	42db9c <nftw@plt+0x2b01c>
  42dbc0:	stp	x29, x30, [sp, #-48]!
  42dbc4:	mov	x29, sp
  42dbc8:	stp	x21, x22, [sp, #32]
  42dbcc:	mov	x21, x0
  42dbd0:	mov	x0, x1
  42dbd4:	stp	x19, x20, [sp, #16]
  42dbd8:	mov	x19, x1
  42dbdc:	mov	w20, w2
  42dbe0:	ldr	x22, [x21, #296]
  42dbe4:	bl	460c20 <nftw@plt+0x5e0a0>
  42dbe8:	mov	x1, x19
  42dbec:	mov	w2, w0
  42dbf0:	mov	x0, x22
  42dbf4:	bl	460558 <nftw@plt+0x5d9d8>
  42dbf8:	mov	x19, x0
  42dbfc:	tbnz	w20, #31, 42dc44 <nftw@plt+0x2b0c4>
  42dc00:	cbz	x19, 42dc30 <nftw@plt+0x2b0b0>
  42dc04:	nop
  42dc08:	ldr	x1, [x19, #8]
  42dc0c:	cbz	x1, 42dc28 <nftw@plt+0x2b0a8>
  42dc10:	ldr	x1, [x19, #24]
  42dc14:	ldr	w1, [x1, #204]
  42dc18:	cbnz	w1, 42dc28 <nftw@plt+0x2b0a8>
  42dc1c:	ldr	w0, [x19, #16]
  42dc20:	cmp	w0, w20
  42dc24:	b.ls	42dc58 <nftw@plt+0x2b0d8>  // b.plast
  42dc28:	ldr	x19, [x19]
  42dc2c:	cbnz	x19, 42dc08 <nftw@plt+0x2b088>
  42dc30:	mov	w0, #0x0                   	// #0
  42dc34:	ldp	x19, x20, [sp, #16]
  42dc38:	ldp	x21, x22, [sp, #32]
  42dc3c:	ldp	x29, x30, [sp], #48
  42dc40:	ret
  42dc44:	ldr	x0, [x21, #40]
  42dc48:	mov	w1, w20
  42dc4c:	bl	4353d0 <nftw@plt+0x32850>
  42dc50:	mov	w20, w0
  42dc54:	b	42dc00 <nftw@plt+0x2b080>
  42dc58:	mov	w0, #0x1                   	// #1
  42dc5c:	ldp	x19, x20, [sp, #16]
  42dc60:	ldp	x21, x22, [sp, #32]
  42dc64:	ldp	x29, x30, [sp], #48
  42dc68:	ret
  42dc6c:	nop
  42dc70:	stp	x29, x30, [sp, #-64]!
  42dc74:	mov	x3, #0x0                   	// #0
  42dc78:	mov	x29, sp
  42dc7c:	stp	x19, x20, [sp, #16]
  42dc80:	mov	x19, x0
  42dc84:	adrp	x20, 402000 <memcpy@plt-0x490>
  42dc88:	add	x20, x20, #0x910
  42dc8c:	stp	x21, x22, [sp, #32]
  42dc90:	adrp	x21, 461000 <nftw@plt+0x5e480>
  42dc94:	adrp	x22, 42b000 <nftw@plt+0x28480>
  42dc98:	add	x21, x21, #0x598
  42dc9c:	add	x22, x22, #0xe80
  42dca0:	str	x23, [sp, #48]
  42dca4:	adrp	x23, 42b000 <nftw@plt+0x28480>
  42dca8:	add	x23, x23, #0xf50
  42dcac:	mov	x5, x20
  42dcb0:	mov	x4, x21
  42dcb4:	mov	x1, x22
  42dcb8:	mov	x2, x23
  42dcbc:	mov	x0, #0x7f                  	// #127
  42dcc0:	bl	4602d0 <nftw@plt+0x5d750>
  42dcc4:	str	x0, [x19, #296]
  42dcc8:	mov	x2, x23
  42dccc:	mov	x1, x22
  42dcd0:	mov	x5, x20
  42dcd4:	mov	x4, x21
  42dcd8:	mov	x3, #0x0                   	// #0
  42dcdc:	mov	x0, #0x7f                  	// #127
  42dce0:	bl	4602d0 <nftw@plt+0x5d750>
  42dce4:	str	x0, [x19, #304]
  42dce8:	mov	x0, #0xff0                 	// #4080
  42dcec:	bl	461560 <_obstack_memory_used@@Base+0x118>
  42dcf0:	mov	x6, x0
  42dcf4:	ldr	x7, [x19, #312]
  42dcf8:	str	x6, [x19, #312]
  42dcfc:	str	wzr, [x6]
  42dd00:	mov	x4, x21
  42dd04:	str	x7, [x6, #8]
  42dd08:	mov	x5, x20
  42dd0c:	mov	x3, #0x0                   	// #0
  42dd10:	adrp	x2, 42b000 <nftw@plt+0x28480>
  42dd14:	adrp	x1, 460000 <nftw@plt+0x5d480>
  42dd18:	add	x2, x2, #0xf30
  42dd1c:	add	x1, x1, #0xc20
  42dd20:	mov	x0, #0x7f                  	// #127
  42dd24:	bl	4602d0 <nftw@plt+0x5d750>
  42dd28:	ldp	x21, x22, [sp, #32]
  42dd2c:	mov	x4, x20
  42dd30:	ldr	x23, [sp, #48]
  42dd34:	str	x0, [x19, #320]
  42dd38:	add	x0, x19, #0x148
  42dd3c:	adrp	x3, 461000 <nftw@plt+0x5e480>
  42dd40:	ldp	x19, x20, [sp, #16]
  42dd44:	add	x3, x3, #0x560
  42dd48:	ldp	x29, x30, [sp], #64
  42dd4c:	mov	x2, #0x0                   	// #0
  42dd50:	mov	x1, #0x0                   	// #0
  42dd54:	b	461058 <_obstack_begin@@Base>
  42dd58:	stp	x29, x30, [sp, #-32]!
  42dd5c:	mov	x29, sp
  42dd60:	stp	x19, x20, [sp, #16]
  42dd64:	mov	x20, x0
  42dd68:	ldr	x0, [x0, #296]
  42dd6c:	bl	460328 <nftw@plt+0x5d7a8>
  42dd70:	ldr	x0, [x20, #304]
  42dd74:	bl	460328 <nftw@plt+0x5d7a8>
  42dd78:	ldr	x0, [x20, #320]
  42dd7c:	bl	460328 <nftw@plt+0x5d7a8>
  42dd80:	add	x0, x20, #0x148
  42dd84:	mov	x1, #0x0                   	// #0
  42dd88:	bl	461398 <_obstack_free@@Base>
  42dd8c:	ldr	x19, [x20, #312]
  42dd90:	cbz	x19, 42dda8 <nftw@plt+0x2b228>
  42dd94:	nop
  42dd98:	mov	x0, x19
  42dd9c:	ldr	x19, [x19, #8]
  42dda0:	bl	402910 <free@plt>
  42dda4:	cbnz	x19, 42dd98 <nftw@plt+0x2b218>
  42dda8:	ldr	x20, [x20, #280]
  42ddac:	cbz	x20, 42dddc <nftw@plt+0x2b25c>
  42ddb0:	ldr	x0, [x20, #48]
  42ddb4:	mov	x19, x20
  42ddb8:	ldr	x20, [x20, #32]
  42ddbc:	bl	402910 <free@plt>
  42ddc0:	ldr	x0, [x19]
  42ddc4:	bl	402910 <free@plt>
  42ddc8:	ldr	x0, [x19, #8]
  42ddcc:	bl	402910 <free@plt>
  42ddd0:	mov	x0, x19
  42ddd4:	bl	402910 <free@plt>
  42ddd8:	cbnz	x20, 42ddb0 <nftw@plt+0x2b230>
  42dddc:	ldp	x19, x20, [sp, #16]
  42dde0:	ldp	x29, x30, [sp], #32
  42dde4:	ret
  42dde8:	stp	x29, x30, [sp, #-48]!
  42ddec:	mov	x29, sp
  42ddf0:	stp	x19, x20, [sp, #16]
  42ddf4:	mov	x19, x0
  42ddf8:	ldr	x0, [x0, #296]
  42ddfc:	bl	460328 <nftw@plt+0x5d7a8>
  42de00:	ldr	x0, [x19, #304]
  42de04:	bl	460328 <nftw@plt+0x5d7a8>
  42de08:	ldr	x0, [x19, #320]
  42de0c:	bl	460328 <nftw@plt+0x5d7a8>
  42de10:	add	x0, x19, #0x148
  42de14:	mov	x1, #0x0                   	// #0
  42de18:	bl	461398 <_obstack_free@@Base>
  42de1c:	ldr	x20, [x19, #312]
  42de20:	cbz	x20, 42de38 <nftw@plt+0x2b2b8>
  42de24:	nop
  42de28:	mov	x0, x20
  42de2c:	ldr	x20, [x20, #8]
  42de30:	bl	402910 <free@plt>
  42de34:	cbnz	x20, 42de28 <nftw@plt+0x2b2a8>
  42de38:	ldr	x20, [x19, #280]
  42de3c:	cbz	x20, 42de78 <nftw@plt+0x2b2f8>
  42de40:	str	x21, [sp, #32]
  42de44:	nop
  42de48:	mov	x21, x20
  42de4c:	ldr	x20, [x20, #32]
  42de50:	ldr	x0, [x21, #48]
  42de54:	bl	402910 <free@plt>
  42de58:	ldr	x0, [x21]
  42de5c:	bl	402910 <free@plt>
  42de60:	ldr	x0, [x21, #8]
  42de64:	bl	402910 <free@plt>
  42de68:	mov	x0, x21
  42de6c:	bl	402910 <free@plt>
  42de70:	cbnz	x20, 42de48 <nftw@plt+0x2b2c8>
  42de74:	ldr	x21, [sp, #32]
  42de78:	str	xzr, [x19, #280]
  42de7c:	str	xzr, [x19, #312]
  42de80:	mov	x0, x19
  42de84:	ldp	x19, x20, [sp, #16]
  42de88:	ldp	x29, x30, [sp], #48
  42de8c:	b	42dc70 <nftw@plt+0x2b0f0>
  42de90:	stp	x29, x30, [sp, #-64]!
  42de94:	mov	x29, sp
  42de98:	stp	x19, x20, [sp, #16]
  42de9c:	mov	x20, x1
  42dea0:	mov	x19, x0
  42dea4:	ldr	x1, [x0]
  42dea8:	stp	x21, x22, [sp, #32]
  42deac:	ldr	x1, [x1, #80]
  42deb0:	ldr	x22, [x1, #64]
  42deb4:	cbz	x22, 42dfc8 <nftw@plt+0x2b448>
  42deb8:	ldr	x21, [x19, #296]
  42debc:	mov	x0, x20
  42dec0:	bl	460c20 <nftw@plt+0x5e0a0>
  42dec4:	mov	w2, w0
  42dec8:	mov	x1, x20
  42decc:	mov	x0, x21
  42ded0:	mov	w3, #0x1                   	// #1
  42ded4:	bl	460718 <nftw@plt+0x5db98>
  42ded8:	ldr	x2, [x0]
  42dedc:	mov	x21, x0
  42dee0:	cbnz	x2, 42def0 <nftw@plt+0x2b370>
  42dee4:	b	42df0c <nftw@plt+0x2b38c>
  42dee8:	ldr	x2, [x2]
  42deec:	cbz	x2, 42df0c <nftw@plt+0x2b38c>
  42def0:	ldr	x0, [x2, #8]
  42def4:	cmp	x22, x0
  42def8:	b.ne	42dee8 <nftw@plt+0x2b368>  // b.any
  42defc:	ldp	x19, x20, [sp, #16]
  42df00:	ldp	x21, x22, [sp, #32]
  42df04:	ldp	x29, x30, [sp], #64
  42df08:	ret
  42df0c:	mov	x1, #0xd8                  	// #216
  42df10:	mov	x0, #0x1                   	// #1
  42df14:	str	x23, [sp, #48]
  42df18:	bl	461598 <_obstack_memory_used@@Base+0x150>
  42df1c:	ldr	x1, [x19]
  42df20:	mov	x23, x0
  42df24:	mov	w2, #0xffffffff            	// #-1
  42df28:	mov	x0, x20
  42df2c:	cmp	x1, #0x0
  42df30:	cset	w1, eq  // eq = none
  42df34:	str	x22, [x23, #64]
  42df38:	str	w2, [x23, #200]
  42df3c:	strb	w1, [x23, #212]
  42df40:	bl	4616a8 <_obstack_memory_used@@Base+0x260>
  42df44:	str	x0, [x23]
  42df48:	ldr	x0, [x19]
  42df4c:	mov	w1, #0x0                   	// #0
  42df50:	cbz	x0, 42df5c <nftw@plt+0x2b3dc>
  42df54:	ldr	x0, [x0, #80]
  42df58:	ldrb	w1, [x0, #214]
  42df5c:	ldr	x0, [x19, #312]
  42df60:	strb	w1, [x23, #214]
  42df64:	ldr	x1, [x19, #280]
  42df68:	str	x1, [x23, #32]
  42df6c:	ldr	w1, [x0]
  42df70:	str	x23, [x19, #280]
  42df74:	cmp	w1, #0x7f
  42df78:	b.eq	42dfe0 <nftw@plt+0x2b460>  // b.none
  42df7c:	ubfiz	x2, x1, #5, #32
  42df80:	add	w3, w1, #0x1
  42df84:	add	x2, x2, #0x10
  42df88:	ldr	x4, [x19, #40]
  42df8c:	ubfiz	x1, x1, #5, #32
  42df90:	add	x1, x0, x1
  42df94:	str	w3, [x0]
  42df98:	add	x0, x0, x2
  42df9c:	ldr	w2, [x4, #56]
  42dfa0:	ldr	x3, [x21]
  42dfa4:	stp	x3, x22, [x1, #16]
  42dfa8:	str	w2, [x1, #32]
  42dfac:	str	x23, [x1, #40]
  42dfb0:	ldr	x23, [sp, #48]
  42dfb4:	str	x0, [x21]
  42dfb8:	ldp	x19, x20, [sp, #16]
  42dfbc:	ldp	x21, x22, [sp, #32]
  42dfc0:	ldp	x29, x30, [sp], #64
  42dfc4:	ret
  42dfc8:	adrp	x3, 47c000 <_obstack_memory_used@@Base+0x1abb8>
  42dfcc:	mov	w2, #0x0                   	// #0
  42dfd0:	add	x3, x3, #0x830
  42dfd4:	mov	w1, #0x4                   	// #4
  42dfd8:	bl	4277f0 <nftw@plt+0x24c70>
  42dfdc:	b	42deb8 <nftw@plt+0x2b338>
  42dfe0:	mov	x0, #0xff0                 	// #4080
  42dfe4:	bl	461560 <_obstack_memory_used@@Base+0x118>
  42dfe8:	ldr	x4, [x19, #312]
  42dfec:	mov	w3, #0x1                   	// #1
  42dff0:	mov	w1, #0x0                   	// #0
  42dff4:	mov	x2, #0x10                  	// #16
  42dff8:	str	wzr, [x0]
  42dffc:	str	x4, [x0, #8]
  42e000:	str	x0, [x19, #312]
  42e004:	b	42df88 <nftw@plt+0x2b408>
  42e008:	ldr	x6, [x0, #40]
  42e00c:	mov	w3, #0x18                  	// #24
  42e010:	ldr	w5, [x6, #12]
  42e014:	ldr	x8, [x6]
  42e018:	sub	w5, w5, #0x1
  42e01c:	smull	x5, w5, w3
  42e020:	add	x7, x8, x5
  42e024:	cbz	w1, 42e038 <nftw@plt+0x2b4b8>
  42e028:	cbz	w2, 42e070 <nftw@plt+0x2b4f0>
  42e02c:	mov	w4, #0x2                   	// #2
  42e030:	mov	w3, w4
  42e034:	b	42e040 <nftw@plt+0x2b4c0>
  42e038:	mov	w4, #0x0                   	// #0
  42e03c:	mov	w3, #0x0                   	// #0
  42e040:	ldr	x2, [x0]
  42e044:	mov	w1, #0x2                   	// #2
  42e048:	strb	w3, [x2, #106]
  42e04c:	ldrb	w3, [x7, #6]
  42e050:	ldr	w8, [x8, x5]
  42e054:	ldr	w5, [x6, #60]
  42e058:	ldr	x2, [x7, #8]
  42e05c:	sub	w5, w5, w8
  42e060:	ldr	w7, [x7, #16]
  42e064:	lsr	w3, w5, w3
  42e068:	add	w3, w3, w7
  42e06c:	b	425620 <nftw@plt+0x22aa0>
  42e070:	mov	w4, #0x1                   	// #1
  42e074:	mov	w3, w4
  42e078:	b	42e040 <nftw@plt+0x2b4c0>
  42e07c:	nop
  42e080:	mov	w4, #0x0                   	// #0
  42e084:	mov	w3, #0x1                   	// #1
  42e088:	b	425620 <nftw@plt+0x22aa0>
  42e08c:	nop
  42e090:	stp	x29, x30, [sp, #-64]!
  42e094:	mov	x29, sp
  42e098:	stp	x19, x20, [sp, #16]
  42e09c:	mov	x19, x0
  42e0a0:	ldr	x0, [x0, #296]
  42e0a4:	str	xzr, [sp, #48]
  42e0a8:	bl	460050 <nftw@plt+0x5d4d0>
  42e0ac:	mov	x3, x0
  42e0b0:	ldr	x0, [x19, #296]
  42e0b4:	add	x2, sp, #0x30
  42e0b8:	adrp	x1, 42b000 <nftw@plt+0x28480>
  42e0bc:	add	x1, x1, #0xea0
  42e0c0:	str	x3, [sp, #56]
  42e0c4:	bl	460b70 <nftw@plt+0x5dff0>
  42e0c8:	ldr	x0, [sp, #48]
  42e0cc:	cbz	x0, 42e184 <nftw@plt+0x2b604>
  42e0d0:	ldr	x1, [sp, #56]
  42e0d4:	adrp	x3, 42c000 <nftw@plt+0x29480>
  42e0d8:	add	x3, x3, #0x98
  42e0dc:	mov	x2, #0x8                   	// #8
  42e0e0:	adrp	x20, 4a4000 <_obstack_memory_used@@Base+0x42bb8>
  42e0e4:	bl	4025f0 <qsort@plt>
  42e0e8:	adrp	x1, 47c000 <_obstack_memory_used@@Base+0x1abb8>
  42e0ec:	adrp	x0, 47b000 <_obstack_memory_used@@Base+0x19bb8>
  42e0f0:	add	x1, x1, #0x8f8
  42e0f4:	add	x0, x0, #0xd68
  42e0f8:	bl	402900 <dgettext@plt>
  42e0fc:	ldr	x1, [x20, #1392]
  42e100:	bl	402a50 <fputs_unlocked@plt>
  42e104:	ldr	x0, [sp, #56]
  42e108:	cbz	x0, 42e17c <nftw@plt+0x2b5fc>
  42e10c:	add	x20, x20, #0x570
  42e110:	mov	x19, #0x0                   	// #0
  42e114:	str	x21, [sp, #32]
  42e118:	mov	w21, #0xa                   	// #10
  42e11c:	b	42e138 <nftw@plt+0x2b5b8>
  42e120:	str	x3, [x0, #40]
  42e124:	add	x19, x19, #0x1
  42e128:	strb	w21, [x1]
  42e12c:	ldr	x0, [sp, #56]
  42e130:	cmp	x0, x19
  42e134:	b.ls	42e178 <nftw@plt+0x2b5f8>  // b.plast
  42e138:	ldr	x0, [sp, #48]
  42e13c:	ldr	x1, [x20]
  42e140:	ldr	x0, [x0, x19, lsl #3]
  42e144:	bl	402a50 <fputs_unlocked@plt>
  42e148:	ldr	x0, [x20]
  42e14c:	ldp	x1, x2, [x0, #40]
  42e150:	add	x3, x1, #0x1
  42e154:	cmp	x1, x2
  42e158:	b.cc	42e120 <nftw@plt+0x2b5a0>  // b.lo, b.ul, b.last
  42e15c:	mov	w1, #0xa                   	// #10
  42e160:	bl	402800 <__overflow@plt>
  42e164:	ldr	x0, [sp, #56]
  42e168:	add	x19, x19, #0x1
  42e16c:	cmp	x0, x19
  42e170:	b.hi	42e138 <nftw@plt+0x2b5b8>  // b.pmore
  42e174:	nop
  42e178:	ldr	x21, [sp, #32]
  42e17c:	ldr	x0, [sp, #48]
  42e180:	bl	402910 <free@plt>
  42e184:	ldp	x19, x20, [sp, #16]
  42e188:	ldp	x29, x30, [sp], #64
  42e18c:	ret
  42e190:	stp	x29, x30, [sp, #-64]!
  42e194:	mov	x29, sp
  42e198:	stp	x19, x20, [sp, #16]
  42e19c:	mov	x19, x0
  42e1a0:	mov	x20, x1
  42e1a4:	stp	x21, x22, [sp, #32]
  42e1a8:	mov	w21, w2
  42e1ac:	add	x2, x19, #0xd8
  42e1b0:	ldrb	w0, [x1]
  42e1b4:	cmp	w0, #0x2f
  42e1b8:	b.eq	42e1dc <nftw@plt+0x2b65c>  // b.none
  42e1bc:	ldr	x1, [x19]
  42e1c0:	cbz	x1, 42e294 <nftw@plt+0x2b714>
  42e1c4:	ldr	x22, [x1, #80]
  42e1c8:	cbnz	w21, 42e288 <nftw@plt+0x2b708>
  42e1cc:	ldrb	w0, [x19, #416]
  42e1d0:	cbz	w0, 42e244 <nftw@plt+0x2b6c4>
  42e1d4:	ldr	x2, [x19, #200]
  42e1d8:	cbz	x2, 42e2a0 <nftw@plt+0x2b720>
  42e1dc:	mov	x1, x20
  42e1e0:	mov	w4, w21
  42e1e4:	mov	x0, x19
  42e1e8:	mov	w6, #0x0                   	// #0
  42e1ec:	mov	w5, #0x0                   	// #0
  42e1f0:	mov	w3, #0x0                   	// #0
  42e1f4:	bl	42ca68 <nftw@plt+0x29ee8>
  42e1f8:	mov	x20, x0
  42e1fc:	ldr	w0, [x0, #204]
  42e200:	cbnz	w0, 42e274 <nftw@plt+0x2b6f4>
  42e204:	ldr	w0, [x20, #200]
  42e208:	cmn	w0, #0x1
  42e20c:	b.eq	42e21c <nftw@plt+0x2b69c>  // b.none
  42e210:	bl	4027a0 <close@plt>
  42e214:	mov	w0, #0xffffffff            	// #-1
  42e218:	str	w0, [x20, #200]
  42e21c:	ldr	x0, [x19]
  42e220:	ldr	x1, [x20, #160]
  42e224:	ldr	x0, [x0, #80]
  42e228:	ldp	x19, x20, [sp, #16]
  42e22c:	ldr	x0, [x0, #160]
  42e230:	ldp	x21, x22, [sp, #32]
  42e234:	cmp	x1, x0
  42e238:	cset	w0, gt
  42e23c:	ldp	x29, x30, [sp], #64
  42e240:	ret
  42e244:	stp	x23, x24, [sp, #48]
  42e248:	ldr	x23, [x22, #24]
  42e24c:	cbz	x23, 42e2bc <nftw@plt+0x2b73c>
  42e250:	mov	w2, #0x0                   	// #0
  42e254:	cbz	x1, 42e25c <nftw@plt+0x2b6dc>
  42e258:	ldrb	w2, [x1, #106]
  42e25c:	mov	x1, x23
  42e260:	mov	x0, x19
  42e264:	bl	42c658 <nftw@plt+0x29ad8>
  42e268:	mov	x2, x0
  42e26c:	ldp	x23, x24, [sp, #48]
  42e270:	cbnz	x0, 42e1dc <nftw@plt+0x2b65c>
  42e274:	mov	w0, #0xffffffff            	// #-1
  42e278:	ldp	x19, x20, [sp, #16]
  42e27c:	ldp	x21, x22, [sp, #32]
  42e280:	ldp	x29, x30, [sp], #64
  42e284:	ret
  42e288:	ldr	x2, [x19, #208]
  42e28c:	cbnz	x2, 42e1dc <nftw@plt+0x2b65c>
  42e290:	b	42e2a0 <nftw@plt+0x2b720>
  42e294:	ldr	x22, [x19, #288]
  42e298:	cbz	w21, 42e1cc <nftw@plt+0x2b64c>
  42e29c:	b	42e288 <nftw@plt+0x2b708>
  42e2a0:	mov	x3, x20
  42e2a4:	mov	x0, x19
  42e2a8:	adrp	x2, 47c000 <_obstack_memory_used@@Base+0x1abb8>
  42e2ac:	mov	w1, #0x3                   	// #3
  42e2b0:	add	x2, x2, #0x8c8
  42e2b4:	bl	427178 <nftw@plt+0x245f8>
  42e2b8:	b	42e274 <nftw@plt+0x2b6f4>
  42e2bc:	ldr	x0, [x22, #8]
  42e2c0:	bl	460fc0 <nftw@plt+0x5e440>
  42e2c4:	ldr	x24, [x22, #8]
  42e2c8:	sub	x24, x0, x24
  42e2cc:	add	x0, x24, #0x1
  42e2d0:	bl	461560 <_obstack_memory_used@@Base+0x118>
  42e2d4:	ldr	x1, [x22, #8]
  42e2d8:	mov	x23, x0
  42e2dc:	mov	x2, x24
  42e2e0:	bl	402490 <memcpy@plt>
  42e2e4:	strb	wzr, [x23, x24]
  42e2e8:	ldr	x1, [x19]
  42e2ec:	str	x23, [x22, #24]
  42e2f0:	b	42e250 <nftw@plt+0x2b6d0>
  42e2f4:	nop
  42e2f8:	stp	x29, x30, [sp, #-32]!
  42e2fc:	mov	x29, sp
  42e300:	stp	x19, x20, [sp, #16]
  42e304:	mov	x20, x1
  42e308:	mov	x19, x0
  42e30c:	ldr	x1, [x0, #488]
  42e310:	ldr	x0, [x0, #448]
  42e314:	ldr	x1, [x1, #16]
  42e318:	cmp	x0, x1
  42e31c:	b.eq	42e324 <nftw@plt+0x2b7a4>  // b.none
  42e320:	stur	wzr, [x0, #-24]
  42e324:	ldrb	w0, [x20]
  42e328:	add	x2, x19, #0xd8
  42e32c:	cmp	w0, #0x2f
  42e330:	b.eq	42e350 <nftw@plt+0x2b7d0>  // b.none
  42e334:	mov	w2, #0x0                   	// #0
  42e338:	mov	x0, x19
  42e33c:	adrp	x1, 47c000 <_obstack_memory_used@@Base+0x1abb8>
  42e340:	add	x1, x1, #0x8c0
  42e344:	bl	42c658 <nftw@plt+0x29ad8>
  42e348:	mov	x2, x0
  42e34c:	cbz	x0, 42e388 <nftw@plt+0x2b808>
  42e350:	mov	x1, x20
  42e354:	mov	x0, x19
  42e358:	mov	w6, #0x0                   	// #0
  42e35c:	mov	w5, #0x0                   	// #0
  42e360:	mov	w4, #0x0                   	// #0
  42e364:	mov	w3, #0x0                   	// #0
  42e368:	bl	42ca68 <nftw@plt+0x29ee8>
  42e36c:	mov	x1, x0
  42e370:	mov	x0, x19
  42e374:	mov	w3, #0x0                   	// #0
  42e378:	ldp	x19, x20, [sp, #16]
  42e37c:	mov	w2, #0x0                   	// #0
  42e380:	ldp	x29, x30, [sp], #32
  42e384:	b	42d428 <nftw@plt+0x2a8a8>
  42e388:	mov	w0, #0x0                   	// #0
  42e38c:	ldp	x19, x20, [sp, #16]
  42e390:	ldp	x29, x30, [sp], #32
  42e394:	ret
  42e398:	stp	x29, x30, [sp, #-32]!
  42e39c:	mov	x29, sp
  42e3a0:	str	x19, [sp, #16]
  42e3a4:	mov	x19, x0
  42e3a8:	ldrb	w2, [x1]
  42e3ac:	cmp	w2, #0x2f
  42e3b0:	b.eq	42e404 <nftw@plt+0x2b884>  // b.none
  42e3b4:	ldr	x2, [x0, #208]
  42e3b8:	cbz	x2, 42e40c <nftw@plt+0x2b88c>
  42e3bc:	mov	x0, x19
  42e3c0:	mov	w6, #0x0                   	// #0
  42e3c4:	mov	w5, #0x1                   	// #1
  42e3c8:	mov	w4, #0x1                   	// #1
  42e3cc:	mov	w3, #0x0                   	// #0
  42e3d0:	bl	42ca68 <nftw@plt+0x29ee8>
  42e3d4:	mov	x1, x0
  42e3d8:	cbz	x0, 42e3f4 <nftw@plt+0x2b874>
  42e3dc:	mov	x0, x19
  42e3e0:	mov	w3, #0x0                   	// #0
  42e3e4:	ldr	x19, [sp, #16]
  42e3e8:	mov	w2, #0x0                   	// #0
  42e3ec:	ldp	x29, x30, [sp], #32
  42e3f0:	b	42d428 <nftw@plt+0x2a8a8>
  42e3f4:	mov	w0, #0x0                   	// #0
  42e3f8:	ldr	x19, [sp, #16]
  42e3fc:	ldp	x29, x30, [sp], #32
  42e400:	ret
  42e404:	add	x2, x0, #0xd8
  42e408:	b	42e3bc <nftw@plt+0x2b83c>
  42e40c:	mov	x3, x1
  42e410:	adrp	x2, 47c000 <_obstack_memory_used@@Base+0x1abb8>
  42e414:	mov	w1, #0x3                   	// #3
  42e418:	add	x2, x2, #0x8c8
  42e41c:	bl	427178 <nftw@plt+0x245f8>
  42e420:	mov	w0, #0x0                   	// #0
  42e424:	ldr	x19, [sp, #16]
  42e428:	ldp	x29, x30, [sp], #32
  42e42c:	ret
  42e430:	mov	x3, x0
  42e434:	mov	x0, x2
  42e438:	ldrb	w2, [x3, #440]
  42e43c:	cbz	w2, 42e448 <nftw@plt+0x2b8c8>
  42e440:	ldr	x2, [x1, #56]
  42e444:	cbz	x2, 42e470 <nftw@plt+0x2b8f0>
  42e448:	strb	wzr, [x3, #440]
  42e44c:	cbz	x0, 42e46c <nftw@plt+0x2b8ec>
  42e450:	ldr	x2, [x1, #48]
  42e454:	cmp	x2, x0
  42e458:	b.eq	42e460 <nftw@plt+0x2b8e0>  // b.none
  42e45c:	b	402910 <free@plt>
  42e460:	stp	xzr, xzr, [x1, #40]
  42e464:	strb	wzr, [x1, #213]
  42e468:	b	402910 <free@plt>
  42e46c:	ret
  42e470:	ldr	x2, [x3, #424]
  42e474:	str	x2, [x1, #56]
  42e478:	b	42e448 <nftw@plt+0x2b8c8>
  42e47c:	nop
  42e480:	ldr	x0, [x0]
  42e484:	ret
  42e488:	add	x0, x0, #0x48
  42e48c:	ret
  42e490:	stp	x29, x30, [sp, #-48]!
  42e494:	dup	v0.2d, x1
  42e498:	cmp	w3, #0x0
  42e49c:	mov	x29, sp
  42e4a0:	str	x21, [sp, #32]
  42e4a4:	mov	x21, x0
  42e4a8:	stp	x19, x20, [sp, #16]
  42e4ac:	cset	w0, ne  // ne = any
  42e4b0:	mov	x19, x1
  42e4b4:	strb	w0, [x21, #416]
  42e4b8:	mov	x20, x2
  42e4bc:	stur	q0, [x21, #200]
  42e4c0:	cbz	x1, 42e4e8 <nftw@plt+0x2b968>
  42e4c4:	nop
  42e4c8:	ldr	x0, [x19, #8]
  42e4cc:	str	xzr, [x19, #32]
  42e4d0:	bl	4024f0 <strlen@plt>
  42e4d4:	str	w0, [x19, #16]
  42e4d8:	cmp	x20, x19
  42e4dc:	b.eq	42e4f8 <nftw@plt+0x2b978>  // b.none
  42e4e0:	ldr	x19, [x19]
  42e4e4:	cbnz	x19, 42e4c8 <nftw@plt+0x2b948>
  42e4e8:	ldp	x19, x20, [sp, #16]
  42e4ec:	ldr	x21, [sp, #32]
  42e4f0:	ldp	x29, x30, [sp], #48
  42e4f4:	ret
  42e4f8:	ldr	x19, [x20]
  42e4fc:	str	x20, [x21, #208]
  42e500:	cbnz	x19, 42e4c8 <nftw@plt+0x2b948>
  42e504:	ldp	x19, x20, [sp, #16]
  42e508:	ldr	x21, [sp, #32]
  42e50c:	ldp	x29, x30, [sp], #48
  42e510:	ret
  42e514:	nop
  42e518:	ldr	x0, [x0, #8]
  42e51c:	ret
  42e520:	ldr	x0, [x0, #64]
  42e524:	ret
  42e528:	ldr	x0, [x0]
  42e52c:	ret
  42e530:	ldr	x0, [x0, #80]
  42e534:	ret
  42e538:	ldr	x0, [x0, #72]
  42e53c:	ret
  42e540:	stp	x29, x30, [sp, #-80]!
  42e544:	mov	x29, sp
  42e548:	ldr	x2, [x0, #280]
  42e54c:	stp	x19, x20, [sp, #16]
  42e550:	stp	x21, x22, [sp, #32]
  42e554:	mov	x22, x0
  42e558:	stp	x23, x24, [sp, #48]
  42e55c:	mov	x23, x1
  42e560:	stp	x25, x26, [sp, #64]
  42e564:	cbz	x2, 42e6fc <nftw@plt+0x2bb7c>
  42e568:	mov	x3, #0x0                   	// #0
  42e56c:	nop
  42e570:	ldr	x2, [x2, #32]
  42e574:	mov	x0, x3
  42e578:	add	x3, x3, #0x1
  42e57c:	cbnz	x2, 42e570 <nftw@plt+0x2b9f0>
  42e580:	lsl	x0, x0, #5
  42e584:	add	x1, x0, #0x30
  42e588:	mov	x0, #0x1                   	// #1
  42e58c:	bl	461598 <_obstack_memory_used@@Base+0x150>
  42e590:	ldr	x19, [x22, #280]
  42e594:	str	xzr, [x0]
  42e598:	strb	wzr, [x0, #8]
  42e59c:	mov	x20, x0
  42e5a0:	cbz	x19, 42e704 <nftw@plt+0x2bb84>
  42e5a4:	adrp	x24, 47c000 <_obstack_memory_used@@Base+0x1abb8>
  42e5a8:	mov	x1, #0x0                   	// #0
  42e5ac:	add	x24, x24, #0x928
  42e5b0:	b	42e5e0 <nftw@plt+0x2ba60>
  42e5b4:	ldr	x0, [x19, #40]
  42e5b8:	add	x2, x21, #0x18
  42e5bc:	ldr	x1, [x19, #120]
  42e5c0:	add	x2, x20, x2
  42e5c4:	bl	45f1e8 <nftw@plt+0x5c668>
  42e5c8:	add	x21, x20, x21
  42e5cc:	ldr	x0, [x19, #120]
  42e5d0:	str	x0, [x21, #16]
  42e5d4:	ldr	x1, [x20]
  42e5d8:	ldr	x19, [x19, #32]
  42e5dc:	cbz	x19, 42e668 <nftw@plt+0x2bae8>
  42e5e0:	ldrb	w2, [x19, #211]
  42e5e4:	cbnz	w2, 42e5d8 <nftw@plt+0x2ba58>
  42e5e8:	ldr	w0, [x19, #204]
  42e5ec:	add	x2, x1, #0x1
  42e5f0:	add	x3, x20, x2, lsl #5
  42e5f4:	cbnz	w0, 42e5d8 <nftw@plt+0x2ba58>
  42e5f8:	ldrh	w0, [x19, #208]
  42e5fc:	cbz	w0, 42e5d8 <nftw@plt+0x2ba58>
  42e600:	ldrb	w4, [x19, #210]
  42e604:	lsl	x21, x1, #5
  42e608:	str	x2, [x20]
  42e60c:	mov	x0, x19
  42e610:	strb	w4, [x3, #8]
  42e614:	ldrb	w2, [x20, #8]
  42e618:	ldrb	w3, [x19, #210]
  42e61c:	orr	w2, w2, w3
  42e620:	strb	w2, [x20, #8]
  42e624:	ldrb	w2, [x19, #213]
  42e628:	cbnz	w2, 42e5b4 <nftw@plt+0x2ba34>
  42e62c:	ldr	w26, [x19, #200]
  42e630:	bl	42c0a8 <nftw@plt+0x29528>
  42e634:	mov	x1, x24
  42e638:	ands	w25, w0, #0xff
  42e63c:	b.eq	42e6c4 <nftw@plt+0x2bb44>  // b.none
  42e640:	ldr	w0, [x19, #200]
  42e644:	bl	45fcd0 <nftw@plt+0x5d150>
  42e648:	mov	x25, x0
  42e64c:	add	x1, x21, #0x18
  42e650:	add	x1, x20, x1
  42e654:	bl	45f0f0 <nftw@plt+0x5c570>
  42e658:	mov	x0, x25
  42e65c:	bl	402620 <fclose@plt>
  42e660:	str	w26, [x19, #200]
  42e664:	b	42e5c8 <nftw@plt+0x2ba48>
  42e668:	lsl	x19, x1, #5
  42e66c:	add	x19, x19, #0x10
  42e670:	add	x0, x20, #0x10
  42e674:	mov	x2, #0x20                  	// #32
  42e678:	adrp	x3, 42c000 <nftw@plt+0x29480>
  42e67c:	add	x3, x3, #0x408
  42e680:	bl	4025f0 <qsort@plt>
  42e684:	mov	x3, x23
  42e688:	mov	x1, x19
  42e68c:	mov	x2, #0x1                   	// #1
  42e690:	mov	x0, x20
  42e694:	bl	4024d0 <fwrite_unlocked@plt>
  42e698:	cmp	x0, #0x1
  42e69c:	cset	w25, eq  // eq = none
  42e6a0:	mov	x0, x20
  42e6a4:	bl	402910 <free@plt>
  42e6a8:	mov	w0, w25
  42e6ac:	ldp	x19, x20, [sp, #16]
  42e6b0:	ldp	x21, x22, [sp, #32]
  42e6b4:	ldp	x23, x24, [sp, #48]
  42e6b8:	ldp	x25, x26, [sp, #64]
  42e6bc:	ldp	x29, x30, [sp], #80
  42e6c0:	ret
  42e6c4:	mov	x1, x19
  42e6c8:	mov	w3, #0x0                   	// #0
  42e6cc:	mov	w2, #0x0                   	// #0
  42e6d0:	mov	x0, x22
  42e6d4:	bl	42c2e0 <nftw@plt+0x29760>
  42e6d8:	mov	x0, x20
  42e6dc:	bl	402910 <free@plt>
  42e6e0:	mov	w0, w25
  42e6e4:	ldp	x19, x20, [sp, #16]
  42e6e8:	ldp	x21, x22, [sp, #32]
  42e6ec:	ldp	x23, x24, [sp, #48]
  42e6f0:	ldp	x25, x26, [sp, #64]
  42e6f4:	ldp	x29, x30, [sp], #80
  42e6f8:	ret
  42e6fc:	mov	x1, #0x10                  	// #16
  42e700:	b	42e588 <nftw@plt+0x2ba08>
  42e704:	mov	x19, #0x10                  	// #16
  42e708:	mov	x1, #0x0                   	// #0
  42e70c:	b	42e670 <nftw@plt+0x2baf0>
  42e710:	stp	x29, x30, [sp, #-80]!
  42e714:	mov	x2, #0x1                   	// #1
  42e718:	mov	x29, sp
  42e71c:	str	x19, [sp, #16]
  42e720:	mov	x19, x1
  42e724:	add	x0, sp, #0x20
  42e728:	mov	x3, x19
  42e72c:	mov	x1, #0x10                  	// #16
  42e730:	bl	402840 <fread_unlocked@plt>
  42e734:	cmp	x0, #0x1
  42e738:	b.eq	42e74c <nftw@plt+0x2bbcc>  // b.none
  42e73c:	mov	w0, #0x0                   	// #0
  42e740:	ldr	x19, [sp, #16]
  42e744:	ldp	x29, x30, [sp], #80
  42e748:	ret
  42e74c:	ldr	x0, [sp, #32]
  42e750:	lsl	x0, x0, #5
  42e754:	add	x0, x0, #0x10
  42e758:	bl	461560 <_obstack_memory_used@@Base+0x118>
  42e75c:	adrp	x2, 4a5000 <__environ@@GLIBC_2.17+0xa68>
  42e760:	mov	x3, x19
  42e764:	ldp	x4, x5, [sp, #32]
  42e768:	str	x0, [x2, #2440]
  42e76c:	ldr	x2, [sp, #32]
  42e770:	stp	x4, x5, [x0], #16
  42e774:	mov	x1, #0x20                  	// #32
  42e778:	bl	402840 <fread_unlocked@plt>
  42e77c:	ldr	x1, [sp, #32]
  42e780:	ldr	x19, [sp, #16]
  42e784:	cmp	x1, x0
  42e788:	cset	w0, eq  // eq = none
  42e78c:	ldp	x29, x30, [sp], #80
  42e790:	ret
  42e794:	nop
  42e798:	stp	x29, x30, [sp, #-64]!
  42e79c:	mov	x29, sp
  42e7a0:	stp	x19, x20, [sp, #16]
  42e7a4:	mov	x19, x0
  42e7a8:	mov	w20, w2
  42e7ac:	stp	x21, x22, [sp, #32]
  42e7b0:	mov	x22, x1
  42e7b4:	add	x21, x19, #0xd8
  42e7b8:	ldrb	w0, [x1]
  42e7bc:	cmp	w0, #0x2f
  42e7c0:	b.eq	42e7e4 <nftw@plt+0x2bc64>  // b.none
  42e7c4:	ldr	x4, [x19]
  42e7c8:	cbz	x4, 42e85c <nftw@plt+0x2bcdc>
  42e7cc:	ldr	x21, [x4, #80]
  42e7d0:	cmp	w3, #0x1
  42e7d4:	b.eq	42e83c <nftw@plt+0x2bcbc>  // b.none
  42e7d8:	cbz	w20, 42e820 <nftw@plt+0x2bca0>
  42e7dc:	ldr	x21, [x19, #208]
  42e7e0:	cbz	x21, 42e864 <nftw@plt+0x2bce4>
  42e7e4:	mov	w4, w20
  42e7e8:	mov	x2, x21
  42e7ec:	mov	x1, x22
  42e7f0:	mov	x0, x19
  42e7f4:	mov	w6, #0x0                   	// #0
  42e7f8:	mov	w5, #0x0                   	// #0
  42e7fc:	mov	w3, #0x0                   	// #0
  42e800:	bl	42ca68 <nftw@plt+0x29ee8>
  42e804:	ldr	w0, [x0, #204]
  42e808:	ldp	x19, x20, [sp, #16]
  42e80c:	cmp	w0, #0x2
  42e810:	cset	w0, ne  // ne = any
  42e814:	ldp	x21, x22, [sp, #32]
  42e818:	ldp	x29, x30, [sp], #64
  42e81c:	ret
  42e820:	cmp	w3, #0x3
  42e824:	b.eq	42e8bc <nftw@plt+0x2bd3c>  // b.none
  42e828:	ldrb	w0, [x19, #416]
  42e82c:	cbz	w0, 42e880 <nftw@plt+0x2bd00>
  42e830:	ldr	x21, [x19, #200]
  42e834:	cbnz	x21, 42e7e4 <nftw@plt+0x2bc64>
  42e838:	b	42e864 <nftw@plt+0x2bce4>
  42e83c:	ldr	x0, [x21, #64]
  42e840:	cbz	x0, 42e8b0 <nftw@plt+0x2bd30>
  42e844:	add	x1, x19, #0xd8
  42e848:	cmp	x0, x1
  42e84c:	b.eq	42e8b0 <nftw@plt+0x2bd30>  // b.none
  42e850:	ldr	x21, [x0]
  42e854:	cbnz	x21, 42e7e4 <nftw@plt+0x2bc64>
  42e858:	b	42e864 <nftw@plt+0x2bce4>
  42e85c:	ldr	x21, [x19, #288]
  42e860:	b	42e7d0 <nftw@plt+0x2bc50>
  42e864:	mov	x3, x22
  42e868:	mov	x0, x19
  42e86c:	adrp	x2, 47c000 <_obstack_memory_used@@Base+0x1abb8>
  42e870:	mov	w1, #0x3                   	// #3
  42e874:	add	x2, x2, #0x8c8
  42e878:	bl	427178 <nftw@plt+0x245f8>
  42e87c:	b	42e7e4 <nftw@plt+0x2bc64>
  42e880:	stp	x23, x24, [sp, #48]
  42e884:	ldr	x23, [x21, #24]
  42e888:	cbz	x23, 42e8d8 <nftw@plt+0x2bd58>
  42e88c:	mov	w2, #0x0                   	// #0
  42e890:	cbz	x4, 42e898 <nftw@plt+0x2bd18>
  42e894:	ldrb	w2, [x4, #106]
  42e898:	mov	x1, x23
  42e89c:	mov	x0, x19
  42e8a0:	bl	42c658 <nftw@plt+0x29ad8>
  42e8a4:	mov	x21, x0
  42e8a8:	ldp	x23, x24, [sp, #48]
  42e8ac:	b	42e7e4 <nftw@plt+0x2bc64>
  42e8b0:	cbz	w20, 42e828 <nftw@plt+0x2bca8>
  42e8b4:	ldr	x21, [x19, #208]
  42e8b8:	b	42e7e0 <nftw@plt+0x2bc60>
  42e8bc:	mov	x0, x19
  42e8c0:	adrp	x1, 47c000 <_obstack_memory_used@@Base+0x1abb8>
  42e8c4:	mov	w2, #0x0                   	// #0
  42e8c8:	add	x1, x1, #0x8c0
  42e8cc:	bl	42c658 <nftw@plt+0x29ad8>
  42e8d0:	mov	x21, x0
  42e8d4:	b	42e7e4 <nftw@plt+0x2bc64>
  42e8d8:	ldr	x0, [x21, #8]
  42e8dc:	bl	460fc0 <nftw@plt+0x5e440>
  42e8e0:	ldr	x24, [x21, #8]
  42e8e4:	sub	x24, x0, x24
  42e8e8:	add	x0, x24, #0x1
  42e8ec:	bl	461560 <_obstack_memory_used@@Base+0x118>
  42e8f0:	ldr	x1, [x21, #8]
  42e8f4:	mov	x23, x0
  42e8f8:	mov	x2, x24
  42e8fc:	bl	402490 <memcpy@plt>
  42e900:	strb	wzr, [x23, x24]
  42e904:	ldr	x4, [x19]
  42e908:	str	x23, [x21, #24]
  42e90c:	b	42e88c <nftw@plt+0x2bd0c>
  42e910:	stp	x29, x30, [sp, #-32]!
  42e914:	mov	x29, sp
  42e918:	str	x19, [sp, #16]
  42e91c:	ldr	x19, [x0, #120]
  42e920:	add	x19, x19, #0x2d0
  42e924:	ldp	x0, x4, [x19, #24]
  42e928:	sub	x1, x4, x0
  42e92c:	cmp	x1, #0x1f
  42e930:	b.ls	42e988 <nftw@plt+0x2be08>  // b.plast
  42e934:	add	x1, x0, #0x20
  42e938:	ldr	x0, [x19, #16]
  42e93c:	cmp	x1, x0
  42e940:	b.eq	42e9a8 <nftw@plt+0x2be28>  // b.none
  42e944:	ldr	x2, [x19, #48]
  42e948:	ldr	x3, [x19, #8]
  42e94c:	add	x1, x1, x2
  42e950:	bic	x1, x1, x2
  42e954:	str	x1, [x19, #24]
  42e958:	sub	x2, x1, x3
  42e95c:	sub	x3, x4, x3
  42e960:	cmp	x2, x3
  42e964:	b.ls	42e970 <nftw@plt+0x2bdf0>  // b.plast
  42e968:	mov	x1, x4
  42e96c:	str	x4, [x19, #24]
  42e970:	str	x1, [x19, #16]
  42e974:	stp	xzr, xzr, [x0]
  42e978:	stp	xzr, xzr, [x0, #16]
  42e97c:	ldr	x19, [sp, #16]
  42e980:	ldp	x29, x30, [sp], #32
  42e984:	ret
  42e988:	mov	x0, x19
  42e98c:	mov	x1, #0x20                  	// #32
  42e990:	bl	461200 <_obstack_newchunk@@Base>
  42e994:	ldp	x0, x4, [x19, #24]
  42e998:	add	x1, x0, #0x20
  42e99c:	ldr	x0, [x19, #16]
  42e9a0:	cmp	x1, x0
  42e9a4:	b.ne	42e944 <nftw@plt+0x2bdc4>  // b.any
  42e9a8:	ldrb	w2, [x19, #80]
  42e9ac:	orr	w2, w2, #0x2
  42e9b0:	strb	w2, [x19, #80]
  42e9b4:	b	42e944 <nftw@plt+0x2bdc4>
  42e9b8:	stp	x29, x30, [sp, #-32]!
  42e9bc:	mov	x29, sp
  42e9c0:	stp	x19, x20, [sp, #16]
  42e9c4:	mov	x19, x0
  42e9c8:	mov	x20, x1
  42e9cc:	cbz	x1, 42eae0 <nftw@plt+0x2bf60>
  42e9d0:	str	x19, [x20, #120]
  42e9d4:	mov	x0, x19
  42e9d8:	str	x20, [x19, #1088]
  42e9dc:	bl	427048 <nftw@plt+0x244c8>
  42e9e0:	mov	x0, x19
  42e9e4:	bl	425718 <nftw@plt+0x22b98>
  42e9e8:	ldr	x0, [x19, #1088]
  42e9ec:	mov	w3, #0x1                   	// #1
  42e9f0:	mov	x2, #0x7                   	// #7
  42e9f4:	adrp	x1, 47c000 <_obstack_memory_used@@Base+0x1abb8>
  42e9f8:	add	x1, x1, #0x930
  42e9fc:	bl	43f8e8 <nftw@plt+0x3cd68>
  42ea00:	mov	x1, x0
  42ea04:	ldr	x0, [x19, #1088]
  42ea08:	str	x1, [x19, #1248]
  42ea0c:	mov	w3, #0x1                   	// #1
  42ea10:	mov	x2, #0x4                   	// #4
  42ea14:	adrp	x1, 47c000 <_obstack_memory_used@@Base+0x1abb8>
  42ea18:	add	x1, x1, #0x938
  42ea1c:	bl	43f8e8 <nftw@plt+0x3cd68>
  42ea20:	mov	x1, x0
  42ea24:	ldr	x0, [x19, #1088]
  42ea28:	str	x1, [x19, #1256]
  42ea2c:	mov	w3, #0x1                   	// #1
  42ea30:	mov	x2, #0x5                   	// #5
  42ea34:	adrp	x1, 47c000 <_obstack_memory_used@@Base+0x1abb8>
  42ea38:	add	x1, x1, #0x940
  42ea3c:	bl	43f8e8 <nftw@plt+0x3cd68>
  42ea40:	mov	x1, x0
  42ea44:	ldr	x0, [x19, #1088]
  42ea48:	str	x1, [x19, #1264]
  42ea4c:	mov	w3, #0x1                   	// #1
  42ea50:	mov	x2, #0xb                   	// #11
  42ea54:	adrp	x1, 47c000 <_obstack_memory_used@@Base+0x1abb8>
  42ea58:	add	x1, x1, #0x948
  42ea5c:	bl	43f8e8 <nftw@plt+0x3cd68>
  42ea60:	str	x0, [x19, #1272]
  42ea64:	mov	w3, #0x1                   	// #1
  42ea68:	mov	x2, #0xa                   	// #10
  42ea6c:	ldrh	w4, [x0, #18]
  42ea70:	adrp	x1, 47c000 <_obstack_memory_used@@Base+0x1abb8>
  42ea74:	add	x1, x1, #0x958
  42ea78:	orr	w4, w4, #0x10
  42ea7c:	strh	w4, [x0, #18]
  42ea80:	ldr	x0, [x19, #1088]
  42ea84:	bl	43f8e8 <nftw@plt+0x3cd68>
  42ea88:	str	x0, [x19, #1280]
  42ea8c:	mov	w3, #0x1                   	// #1
  42ea90:	mov	x2, #0xf                   	// #15
  42ea94:	ldrh	w4, [x0, #18]
  42ea98:	adrp	x1, 47c000 <_obstack_memory_used@@Base+0x1abb8>
  42ea9c:	add	x1, x1, #0x968
  42eaa0:	orr	w4, w4, #0x10
  42eaa4:	strh	w4, [x0, #18]
  42eaa8:	ldr	x0, [x19, #1088]
  42eaac:	bl	43f8e8 <nftw@plt+0x3cd68>
  42eab0:	mov	x1, x0
  42eab4:	ldr	x0, [x19, #1088]
  42eab8:	str	x1, [x19, #1288]
  42eabc:	mov	w3, #0x1                   	// #1
  42eac0:	mov	x2, #0x14                  	// #20
  42eac4:	adrp	x1, 47c000 <_obstack_memory_used@@Base+0x1abb8>
  42eac8:	add	x1, x1, #0x978
  42eacc:	bl	43f8e8 <nftw@plt+0x3cd68>
  42ead0:	str	x0, [x19, #1296]
  42ead4:	ldp	x19, x20, [sp, #16]
  42ead8:	ldp	x29, x30, [sp], #32
  42eadc:	ret
  42eae0:	mov	w0, #0x1                   	// #1
  42eae4:	strb	w0, [x19, #1304]
  42eae8:	mov	w0, #0xd                   	// #13
  42eaec:	bl	43f4b0 <nftw@plt+0x3c930>
  42eaf0:	mov	x20, x0
  42eaf4:	adrp	x0, 42e000 <nftw@plt+0x2b480>
  42eaf8:	add	x0, x0, #0x910
  42eafc:	adrp	x4, 402000 <memcpy@plt-0x490>
  42eb00:	adrp	x3, 461000 <nftw@plt+0x5e480>
  42eb04:	str	x0, [x20, #96]
  42eb08:	add	x4, x4, #0x910
  42eb0c:	add	x3, x3, #0x560
  42eb10:	add	x0, x19, #0x2d0
  42eb14:	mov	x2, #0x0                   	// #0
  42eb18:	mov	x1, #0x0                   	// #0
  42eb1c:	bl	461058 <_obstack_begin@@Base>
  42eb20:	b	42e9d0 <nftw@plt+0x2be50>
  42eb24:	nop
  42eb28:	stp	x29, x30, [sp, #-32]!
  42eb2c:	mov	x29, sp
  42eb30:	str	x19, [sp, #16]
  42eb34:	mov	x19, x0
  42eb38:	ldrb	w0, [x0, #1304]
  42eb3c:	cbnz	w0, 42eb4c <nftw@plt+0x2bfcc>
  42eb40:	ldr	x19, [sp, #16]
  42eb44:	ldp	x29, x30, [sp], #32
  42eb48:	ret
  42eb4c:	ldr	x0, [x19, #1088]
  42eb50:	bl	43f530 <nftw@plt+0x3c9b0>
  42eb54:	add	x0, x19, #0x2d0
  42eb58:	mov	x1, #0x0                   	// #0
  42eb5c:	ldr	x19, [sp, #16]
  42eb60:	ldp	x29, x30, [sp], #32
  42eb64:	b	461398 <_obstack_free@@Base>
  42eb68:	ldr	x0, [x0, #1088]
  42eb6c:	mov	w2, w2
  42eb70:	mov	w3, #0x1                   	// #1
  42eb74:	b	43f8e8 <nftw@plt+0x3cd68>
  42eb78:	stp	x29, x30, [sp, #-16]!
  42eb7c:	sxtw	x2, w2
  42eb80:	mov	w3, #0x0                   	// #0
  42eb84:	mov	x29, sp
  42eb88:	ldr	x0, [x0, #1088]
  42eb8c:	bl	43f8e8 <nftw@plt+0x3cd68>
  42eb90:	cbz	x0, 42eba4 <nftw@plt+0x2c024>
  42eb94:	ldrb	w0, [x0, #18]
  42eb98:	ldp	x29, x30, [sp], #16
  42eb9c:	ubfx	x0, x0, #1, #1
  42eba0:	ret
  42eba4:	mov	w0, #0x0                   	// #0
  42eba8:	ldp	x29, x30, [sp], #16
  42ebac:	ret
  42ebb0:	ldr	x0, [x0, #1088]
  42ebb4:	b	43f930 <nftw@plt+0x3cdb0>
  42ebb8:	stp	x29, x30, [sp, #-48]!
  42ebbc:	mov	x4, x2
  42ebc0:	mov	x29, sp
  42ebc4:	stp	x19, x20, [sp, #16]
  42ebc8:	ldr	x20, [x0]
  42ebcc:	ldr	x3, [x20]
  42ebd0:	ldrb	w2, [x3]
  42ebd4:	cmp	w2, #0x24
  42ebd8:	b.eq	42ec04 <nftw@plt+0x2c084>  // b.none
  42ebdc:	ldrb	w5, [x0, #1147]
  42ebe0:	cmp	w5, #0x0
  42ebe4:	cset	w19, ne  // ne = any
  42ebe8:	cmp	w2, #0x5c
  42ebec:	csel	w19, w19, wzr, eq  // eq = none
  42ebf0:	cbnz	w19, 42ec44 <nftw@plt+0x2c0c4>
  42ebf4:	mov	w0, w19
  42ebf8:	ldp	x19, x20, [sp, #16]
  42ebfc:	ldp	x29, x30, [sp], #48
  42ec00:	ret
  42ec04:	ldrb	w1, [x0, #1146]
  42ec08:	mov	w19, #0x0                   	// #0
  42ec0c:	cbz	w1, 42ebf4 <nftw@plt+0x2c074>
  42ec10:	add	x3, x3, #0x1
  42ec14:	str	x3, [x20]
  42ec18:	mov	w19, #0x1                   	// #1
  42ec1c:	ldrb	w1, [x0, #1148]
  42ec20:	cbz	w1, 42ebf4 <nftw@plt+0x2c074>
  42ec24:	ldrb	w1, [x0, #18]
  42ec28:	cbnz	w1, 42ebf4 <nftw@plt+0x2c074>
  42ec2c:	strb	wzr, [x0, #1148]
  42ec30:	adrp	x2, 475000 <_obstack_memory_used@@Base+0x13bb8>
  42ec34:	mov	w1, #0x2                   	// #2
  42ec38:	add	x2, x2, #0x160
  42ec3c:	bl	427178 <nftw@plt+0x245f8>
  42ec40:	b	42ebf4 <nftw@plt+0x2c074>
  42ec44:	ldrb	w2, [x3, #1]
  42ec48:	mov	w19, #0x0                   	// #0
  42ec4c:	and	w2, w2, #0xffffffdf
  42ec50:	and	w2, w2, #0xff
  42ec54:	cmp	w2, #0x55
  42ec58:	b.ne	42ebf4 <nftw@plt+0x2c074>  // b.any
  42ec5c:	ldr	x2, [x20, #32]
  42ec60:	add	x3, x3, #0x2
  42ec64:	str	x3, [x20]
  42ec68:	add	x5, sp, #0x2c
  42ec6c:	mov	x7, #0x0                   	// #0
  42ec70:	mov	x6, #0x0                   	// #0
  42ec74:	mov	w3, #0x2                   	// #2
  42ec78:	sub	w3, w3, w1
  42ec7c:	mov	x1, x20
  42ec80:	bl	41e388 <nftw@plt+0x1b808>
  42ec84:	ands	w19, w0, #0xff
  42ec88:	b.ne	42ebf4 <nftw@plt+0x2c074>  // b.any
  42ec8c:	ldr	x0, [x20]
  42ec90:	sub	x0, x0, #0x2
  42ec94:	str	x0, [x20]
  42ec98:	b	42ebf4 <nftw@plt+0x2c074>
  42ec9c:	nop
  42eca0:	stp	x29, x30, [sp, #-64]!
  42eca4:	mov	x29, sp
  42eca8:	stp	x19, x20, [sp, #16]
  42ecac:	ldr	x19, [x0]
  42ecb0:	stp	x23, x24, [sp, #48]
  42ecb4:	mov	x23, x0
  42ecb8:	ldr	w1, [x19, #56]
  42ecbc:	ldr	x5, [x19, #48]
  42ecc0:	ubfiz	x0, x1, #4, #32
  42ecc4:	ldr	x7, [x19]
  42ecc8:	add	x24, x5, x0
  42eccc:	ldr	x2, [x5, x0]
  42ecd0:	cmp	x7, x2
  42ecd4:	b.cc	42ee24 <nftw@plt+0x2c2a4>  // b.lo, b.ul, b.last
  42ecd8:	mov	w20, #0x20                  	// #32
  42ecdc:	stp	x21, x22, [sp, #32]
  42ece0:	adrp	x21, 4a5000 <__environ@@GLIBC_2.17+0xa68>
  42ece4:	adrp	x22, 481000 <_obstack_memory_used@@Base+0x1fbb8>
  42ece8:	add	x21, x21, #0x9b0
  42ecec:	add	x22, x22, #0xaf0
  42ecf0:	b	42ed6c <nftw@plt+0x2c1ec>
  42ecf4:	ldr	x0, [x23, #40]
  42ecf8:	ldr	x5, [x19, #16]
  42ecfc:	ldr	x1, [x19, #32]
  42ed00:	ldr	w4, [x0, #60]
  42ed04:	cmp	x5, x1
  42ed08:	b.hi	42ee50 <nftw@plt+0x2c2d0>  // b.pmore
  42ed0c:	ldr	w3, [x0, #12]
  42ed10:	mov	w5, #0x18                  	// #24
  42ed14:	ldr	x1, [x0]
  42ed18:	sub	w3, w3, #0x1
  42ed1c:	smull	x3, w3, w5
  42ed20:	add	x5, x1, x3
  42ed24:	ldr	w6, [x1, x3]
  42ed28:	ldrb	w3, [x5, #6]
  42ed2c:	sub	w4, w4, w6
  42ed30:	ldr	w1, [x5, #16]
  42ed34:	str	x2, [x19, #8]
  42ed38:	mov	w2, #0x0                   	// #0
  42ed3c:	lsr	w4, w4, w3
  42ed40:	add	w1, w1, #0x1
  42ed44:	add	w1, w4, w1
  42ed48:	bl	4359a8 <nftw@plt+0x32e28>
  42ed4c:	ldr	w1, [x19, #56]
  42ed50:	ldr	x7, [x19]
  42ed54:	ldr	x5, [x19, #48]
  42ed58:	ubfiz	x2, x1, #4, #32
  42ed5c:	add	x24, x5, x2
  42ed60:	ldr	x2, [x5, x2]
  42ed64:	cmp	x2, x7
  42ed68:	b.hi	42ee20 <nftw@plt+0x2c2a0>  // b.pmore
  42ed6c:	ldr	w4, [x24, #8]
  42ed70:	add	w1, w1, #0x1
  42ed74:	ldr	x0, [x19, #8]
  42ed78:	str	w1, [x19, #56]
  42ed7c:	add	x3, x2, #0x1
  42ed80:	cmp	w4, #0x5c
  42ed84:	ccmp	w4, w20, #0x4, ne  // ne = any
  42ed88:	sub	x3, x3, x0
  42ed8c:	b.eq	42ecf4 <nftw@plt+0x2c174>  // b.none
  42ed90:	ldrb	w6, [x21, w4, uxtw]
  42ed94:	cbz	w6, 42ee34 <nftw@plt+0x2c2b4>
  42ed98:	ldrb	w0, [x23, #1136]
  42ed9c:	cmp	w4, #0x2f
  42eda0:	ccmp	w0, #0x0, #0x4, eq  // eq = none
  42eda4:	b.eq	42ed58 <nftw@plt+0x2c1d8>  // b.none
  42eda8:	ldrb	w0, [x23, #1125]
  42edac:	cbnz	w0, 42ee80 <nftw@plt+0x2c300>
  42edb0:	ldrb	w0, [x2, #3]
  42edb4:	add	x2, x2, #0x3
  42edb8:	ldrh	w4, [x22, w0, sxtw #1]
  42edbc:	tbz	w4, #11, 42edcc <nftw@plt+0x2c24c>
  42edc0:	ldrb	w0, [x2, #1]!
  42edc4:	ldrh	w4, [x22, w0, sxtw #1]
  42edc8:	tbnz	w4, #11, 42edc0 <nftw@plt+0x2c240>
  42edcc:	cmp	w0, #0xa
  42edd0:	b.ne	42ed58 <nftw@plt+0x2c1d8>  // b.any
  42edd4:	ldr	x0, [x24, #16]
  42edd8:	cmp	x0, x2
  42eddc:	b.ls	42ed58 <nftw@plt+0x2c1d8>  // b.plast
  42ede0:	ldr	x0, [x23, #40]
  42ede4:	mov	w5, #0x2f                  	// #47
  42ede8:	mov	w1, #0x4                   	// #4
  42edec:	adrp	x4, 47c000 <_obstack_memory_used@@Base+0x1abb8>
  42edf0:	add	x4, x4, #0xa08
  42edf4:	ldr	w2, [x0, #60]
  42edf8:	mov	x0, x23
  42edfc:	bl	427670 <nftw@plt+0x24af0>
  42ee00:	ldr	w1, [x19, #56]
  42ee04:	ldr	x5, [x19, #48]
  42ee08:	ubfiz	x2, x1, #4, #32
  42ee0c:	add	x24, x5, x2
  42ee10:	ldr	x7, [x19]
  42ee14:	ldr	x2, [x5, x2]
  42ee18:	cmp	x2, x7
  42ee1c:	b.ls	42ed6c <nftw@plt+0x2c1ec>  // b.plast
  42ee20:	ldp	x21, x22, [sp, #32]
  42ee24:	ldp	x19, x20, [sp, #16]
  42ee28:	ldp	x23, x24, [sp, #48]
  42ee2c:	ldp	x29, x30, [sp], #64
  42ee30:	ret
  42ee34:	cbz	w4, 42ed58 <nftw@plt+0x2c1d8>
  42ee38:	adrp	x2, 47c000 <_obstack_memory_used@@Base+0x1abb8>
  42ee3c:	adrp	x0, 47c000 <_obstack_memory_used@@Base+0x1abb8>
  42ee40:	add	x2, x2, #0x9b8
  42ee44:	add	x0, x0, #0x9d0
  42ee48:	mov	w1, #0x48b                 	// #1163
  42ee4c:	bl	402bf0 <nftw@plt+0x70>
  42ee50:	mov	w2, w4
  42ee54:	mov	w1, #0x2                   	// #2
  42ee58:	mov	x0, x23
  42ee5c:	adrp	x4, 47c000 <_obstack_memory_used@@Base+0x1abb8>
  42ee60:	add	x4, x4, #0x990
  42ee64:	bl	4275f8 <nftw@plt+0x24a78>
  42ee68:	ldr	x0, [x23, #40]
  42ee6c:	ldr	x1, [x19, #32]
  42ee70:	ldr	w4, [x0, #60]
  42ee74:	ldr	x2, [x24]
  42ee78:	str	x1, [x19, #16]
  42ee7c:	b	42ed0c <nftw@plt+0x2c18c>
  42ee80:	ldr	x0, [x24, #16]
  42ee84:	cmp	x0, x2
  42ee88:	b.ne	42ed58 <nftw@plt+0x2c1d8>  // b.any
  42ee8c:	ldr	x0, [x23, #40]
  42ee90:	mov	w5, #0x2f                  	// #47
  42ee94:	mov	w1, #0x4                   	// #4
  42ee98:	adrp	x4, 47c000 <_obstack_memory_used@@Base+0x1abb8>
  42ee9c:	add	x4, x4, #0x9e8
  42eea0:	ldr	w2, [x0, #60]
  42eea4:	mov	x0, x23
  42eea8:	bl	427670 <nftw@plt+0x24af0>
  42eeac:	ldr	w1, [x19, #56]
  42eeb0:	ldr	x7, [x19]
  42eeb4:	ldr	x5, [x19, #48]
  42eeb8:	b	42ed58 <nftw@plt+0x2c1d8>
  42eebc:	nop
  42eec0:	stp	x29, x30, [sp, #-112]!
  42eec4:	tst	w2, #0xff
  42eec8:	mov	x29, sp
  42eecc:	stp	x25, x26, [sp, #64]
  42eed0:	ldr	x25, [x0]
  42eed4:	stp	x19, x20, [sp, #16]
  42eed8:	mov	x20, x3
  42eedc:	stp	x21, x22, [sp, #32]
  42eee0:	adrp	x22, 481000 <_obstack_memory_used@@Base+0x1fbb8>
  42eee4:	add	x22, x22, #0xaf0
  42eee8:	ldr	x19, [x25]
  42eeec:	stp	x23, x24, [sp, #48]
  42eef0:	mov	x21, x0
  42eef4:	str	x27, [sp, #80]
  42eef8:	mov	x24, x4
  42eefc:	mov	x27, x1
  42ef00:	ldrb	w2, [x19]
  42ef04:	ldrh	w5, [x22, w2, sxtw #1]
  42ef08:	b.ne	42ef78 <nftw@plt+0x2c3f8>  // b.any
  42ef0c:	ldrb	w23, [x1]
  42ef10:	mov	w1, #0x204                 	// #516
  42ef14:	tst	w5, w1
  42ef18:	sub	w23, w23, #0x71
  42ef1c:	b.eq	42ef40 <nftw@plt+0x2c3c0>  // b.none
  42ef20:	mov	w3, #0x43                  	// #67
  42ef24:	nop
  42ef28:	madd	w23, w23, w3, w2
  42ef2c:	ldrb	w2, [x19, #1]!
  42ef30:	sub	w23, w23, #0x71
  42ef34:	ldrh	w0, [x22, w2, sxtw #1]
  42ef38:	tst	w1, w0
  42ef3c:	b.ne	42ef28 <nftw@plt+0x2c3a8>  // b.any
  42ef40:	ldurb	w0, [x19, #-1]
  42ef44:	mov	x2, x20
  42ef48:	str	w0, [x20]
  42ef4c:	mov	w1, #0x0                   	// #0
  42ef50:	strb	wzr, [x20, #4]
  42ef54:	mov	x0, x21
  42ef58:	str	x19, [x25]
  42ef5c:	bl	42ebb8 <nftw@plt+0x2c038>
  42ef60:	tst	w0, #0xff
  42ef64:	b.eq	42f0d0 <nftw@plt+0x2c550>  // b.none
  42ef68:	ldr	x25, [x21]
  42ef6c:	ldr	x19, [x25]
  42ef70:	ldrb	w2, [x19]
  42ef74:	ldrh	w5, [x22, w2, sxtw #1]
  42ef78:	adrp	x26, 475000 <_obstack_memory_used@@Base+0x13bb8>
  42ef7c:	mov	w23, #0x204                 	// #516
  42ef80:	add	x26, x26, #0x160
  42ef84:	tst	w5, w23
  42ef88:	b.eq	42efb0 <nftw@plt+0x2c430>  // b.none
  42ef8c:	nop
  42ef90:	str	w2, [x20]
  42ef94:	add	x19, x19, #0x1
  42ef98:	strb	wzr, [x20, #4]
  42ef9c:	str	x19, [x25]
  42efa0:	ldrb	w2, [x19]
  42efa4:	ldrh	w5, [x22, w2, sxtw #1]
  42efa8:	tst	w5, w23
  42efac:	b.ne	42ef90 <nftw@plt+0x2c410>  // b.any
  42efb0:	cmp	w2, #0x24
  42efb4:	b.eq	42f024 <nftw@plt+0x2c4a4>  // b.none
  42efb8:	ldrb	w0, [x21, #1147]
  42efbc:	cmp	w2, #0x5c
  42efc0:	ccmp	w0, #0x0, #0x4, eq  // eq = none
  42efc4:	b.ne	42f064 <nftw@plt+0x2c4e4>  // b.any
  42efc8:	sub	x2, x19, x27
  42efcc:	mov	x1, x27
  42efd0:	mov	x0, x21
  42efd4:	bl	421bf0 <nftw@plt+0x1f070>
  42efd8:	ldr	x2, [x21]
  42efdc:	mov	x19, x0
  42efe0:	mov	x1, x27
  42efe4:	mov	x0, x21
  42efe8:	ldr	x2, [x2]
  42efec:	sub	w2, w2, w27
  42eff0:	bl	42eb68 <nftw@plt+0x2bfe8>
  42eff4:	str	x0, [x24]
  42eff8:	ldrh	w0, [x19, #18]
  42effc:	ubfx	x1, x0, #2, #8
  42f000:	tbnz	w0, #4, 42f100 <nftw@plt+0x2c580>
  42f004:	mov	x0, x19
  42f008:	ldp	x19, x20, [sp, #16]
  42f00c:	ldp	x21, x22, [sp, #32]
  42f010:	ldp	x23, x24, [sp, #48]
  42f014:	ldp	x25, x26, [sp, #64]
  42f018:	ldr	x27, [sp, #80]
  42f01c:	ldp	x29, x30, [sp], #112
  42f020:	ret
  42f024:	ldrb	w0, [x21, #1146]
  42f028:	cbz	w0, 42efc8 <nftw@plt+0x2c448>
  42f02c:	add	x19, x19, #0x1
  42f030:	str	x19, [x25]
  42f034:	ldrb	w0, [x21, #1148]
  42f038:	cbz	w0, 42efa0 <nftw@plt+0x2c420>
  42f03c:	ldrb	w0, [x21, #18]
  42f040:	cbnz	w0, 42efa0 <nftw@plt+0x2c420>
  42f044:	strb	wzr, [x21, #1148]
  42f048:	mov	x2, x26
  42f04c:	mov	x0, x21
  42f050:	mov	w1, #0x2                   	// #2
  42f054:	bl	427178 <nftw@plt+0x245f8>
  42f058:	ldr	x25, [x21]
  42f05c:	ldr	x19, [x25]
  42f060:	b	42efa0 <nftw@plt+0x2c420>
  42f064:	ldrb	w0, [x19, #1]
  42f068:	and	w0, w0, #0xffffffdf
  42f06c:	and	w0, w0, #0xff
  42f070:	cmp	w0, #0x55
  42f074:	b.ne	42efc8 <nftw@plt+0x2c448>  // b.any
  42f078:	ldr	x2, [x25, #32]
  42f07c:	add	x19, x19, #0x2
  42f080:	str	x19, [x25]
  42f084:	add	x5, sp, #0x6c
  42f088:	mov	x4, x20
  42f08c:	mov	x1, x25
  42f090:	mov	x0, x21
  42f094:	mov	x7, #0x0                   	// #0
  42f098:	mov	x6, #0x0                   	// #0
  42f09c:	mov	w3, #0x2                   	// #2
  42f0a0:	bl	41e388 <nftw@plt+0x1b808>
  42f0a4:	tst	w0, #0xff
  42f0a8:	b.ne	42f0c4 <nftw@plt+0x2c544>  // b.any
  42f0ac:	ldr	x0, [x25]
  42f0b0:	ldr	x1, [x21]
  42f0b4:	sub	x0, x0, #0x2
  42f0b8:	str	x0, [x25]
  42f0bc:	ldr	x19, [x1]
  42f0c0:	b	42efc8 <nftw@plt+0x2c448>
  42f0c4:	ldr	x25, [x21]
  42f0c8:	ldr	x19, [x25]
  42f0cc:	b	42efa0 <nftw@plt+0x2c420>
  42f0d0:	ldr	x0, [x21, #1088]
  42f0d4:	sub	x3, x19, x27
  42f0d8:	sub	w2, w19, w27
  42f0dc:	mov	x1, x27
  42f0e0:	add	w3, w23, w3
  42f0e4:	mov	w4, #0x1                   	// #1
  42f0e8:	bl	43f578 <nftw@plt+0x3c9f8>
  42f0ec:	mov	x19, x0
  42f0f0:	str	x0, [x24]
  42f0f4:	ldrh	w0, [x19, #18]
  42f0f8:	ubfx	x1, x0, #2, #8
  42f0fc:	tbz	w0, #4, 42f004 <nftw@plt+0x2c484>
  42f100:	ldrb	w0, [x21, #18]
  42f104:	cbnz	w0, 42f004 <nftw@plt+0x2c484>
  42f108:	tbz	w1, #1, 42f114 <nftw@plt+0x2c594>
  42f10c:	ldrb	w0, [x21, #23]
  42f110:	cbz	w0, 42f178 <nftw@plt+0x2c5f8>
  42f114:	ldr	x0, [x21, #1272]
  42f118:	cmp	x0, x19
  42f11c:	b.eq	42f150 <nftw@plt+0x2c5d0>  // b.none
  42f120:	ldr	x0, [x21, #1280]
  42f124:	cmp	x0, x19
  42f128:	b.eq	42f194 <nftw@plt+0x2c614>  // b.none
  42f12c:	ldrh	w0, [x19, #18]
  42f130:	tbz	w0, #9, 42f004 <nftw@plt+0x2c484>
  42f134:	ldr	x3, [x19]
  42f138:	mov	x0, x21
  42f13c:	adrp	x2, 47c000 <_obstack_memory_used@@Base+0x1abb8>
  42f140:	mov	w1, #0xf                   	// #15
  42f144:	add	x2, x2, #0xb58
  42f148:	bl	427298 <nftw@plt+0x24718>
  42f14c:	b	42f004 <nftw@plt+0x2c484>
  42f150:	ldrb	w0, [x21, #22]
  42f154:	cbnz	w0, 42f120 <nftw@plt+0x2c5a0>
  42f158:	ldrb	w0, [x21, #1120]
  42f15c:	cbz	w0, 42f1ec <nftw@plt+0x2c66c>
  42f160:	mov	x0, x21
  42f164:	adrp	x2, 47c000 <_obstack_memory_used@@Base+0x1abb8>
  42f168:	mov	w1, #0x2                   	// #2
  42f16c:	add	x2, x2, #0xa58
  42f170:	bl	427178 <nftw@plt+0x245f8>
  42f174:	b	42f120 <nftw@plt+0x2c5a0>
  42f178:	ldr	x3, [x19]
  42f17c:	mov	x0, x21
  42f180:	adrp	x2, 47c000 <_obstack_memory_used@@Base+0x1abb8>
  42f184:	mov	w1, #0x3                   	// #3
  42f188:	add	x2, x2, #0xa38
  42f18c:	bl	427178 <nftw@plt+0x245f8>
  42f190:	b	42f114 <nftw@plt+0x2c594>
  42f194:	ldrb	w0, [x21, #1154]
  42f198:	cbz	w0, 42f1cc <nftw@plt+0x2c64c>
  42f19c:	ldrb	w0, [x21, #1167]
  42f1a0:	cbnz	w0, 42f1cc <nftw@plt+0x2c64c>
  42f1a4:	ldr	x0, [x21]
  42f1a8:	cbz	x0, 42f1b4 <nftw@plt+0x2c634>
  42f1ac:	ldrb	w0, [x0, #106]
  42f1b0:	cbnz	w0, 42f12c <nftw@plt+0x2c5ac>
  42f1b4:	mov	x0, x21
  42f1b8:	adrp	x2, 47c000 <_obstack_memory_used@@Base+0x1abb8>
  42f1bc:	mov	w1, #0x2                   	// #2
  42f1c0:	add	x2, x2, #0xae8
  42f1c4:	bl	427178 <nftw@plt+0x245f8>
  42f1c8:	b	42f12c <nftw@plt+0x2c5ac>
  42f1cc:	ldrb	w0, [x21, #22]
  42f1d0:	cbnz	w0, 42f12c <nftw@plt+0x2c5ac>
  42f1d4:	mov	x0, x21
  42f1d8:	adrp	x2, 47c000 <_obstack_memory_used@@Base+0x1abb8>
  42f1dc:	mov	w1, #0x2                   	// #2
  42f1e0:	add	x2, x2, #0xb10
  42f1e4:	bl	427178 <nftw@plt+0x245f8>
  42f1e8:	b	42f12c <nftw@plt+0x2c5ac>
  42f1ec:	mov	x0, x21
  42f1f0:	adrp	x2, 47c000 <_obstack_memory_used@@Base+0x1abb8>
  42f1f4:	mov	w1, #0x2                   	// #2
  42f1f8:	add	x2, x2, #0xaa0
  42f1fc:	bl	427178 <nftw@plt+0x245f8>
  42f200:	b	42f120 <nftw@plt+0x2c5a0>
  42f204:	nop
  42f208:	stp	x29, x30, [sp, #-80]!
  42f20c:	mov	x29, sp
  42f210:	ldr	x4, [x0]
  42f214:	stp	x19, x20, [sp, #16]
  42f218:	mov	x20, x3
  42f21c:	stp	x21, x22, [sp, #32]
  42f220:	mov	x21, x1
  42f224:	mov	x22, x2
  42f228:	ldr	x3, [x4]
  42f22c:	stp	x23, x24, [sp, #48]
  42f230:	adrp	x24, 481000 <_obstack_memory_used@@Base+0x1fbb8>
  42f234:	sub	x23, x3, #0x1
  42f238:	add	x24, x24, #0xaf0
  42f23c:	stp	x25, x26, [sp, #64]
  42f240:	mov	x26, x0
  42f244:	mov	w25, #0x204                 	// #516
  42f248:	mov	x19, x3
  42f24c:	b	42f25c <nftw@plt+0x2c6dc>
  42f250:	add	x19, x19, #0x1
  42f254:	str	w0, [x20]
  42f258:	strb	wzr, [x20, #4]
  42f25c:	ldrb	w0, [x19]
  42f260:	cmp	w0, #0x2e
  42f264:	ldrh	w1, [x24, w0, sxtw #1]
  42f268:	and	w1, w25, w1
  42f26c:	ccmp	w1, #0x0, #0x0, ne  // ne = any
  42f270:	b.ne	42f250 <nftw@plt+0x2c6d0>  // b.any
  42f274:	sub	w1, w0, #0x2b
  42f278:	cmp	w0, #0x27
  42f27c:	b.eq	42f2d8 <nftw@plt+0x2c758>  // b.none
  42f280:	mov	w2, #0xfd                  	// #253
  42f284:	tst	w1, w2
  42f288:	b.ne	42f2e0 <nftw@plt+0x2c760>  // b.any
  42f28c:	ldurb	w1, [x19, #-1]
  42f290:	and	w1, w1, #0xffffffdf
  42f294:	and	w1, w1, #0xff
  42f298:	cmp	w1, #0x45
  42f29c:	b.eq	42f250 <nftw@plt+0x2c6d0>  // b.none
  42f2a0:	cmp	w1, #0x50
  42f2a4:	b.ne	42f2e0 <nftw@plt+0x2c760>  // b.any
  42f2a8:	ldrb	w1, [x26, #1127]
  42f2ac:	cbnz	w1, 42f250 <nftw@plt+0x2c6d0>
  42f2b0:	str	x19, [x4]
  42f2b4:	mov	x2, x20
  42f2b8:	mov	x0, x26
  42f2bc:	mov	w1, #0x0                   	// #0
  42f2c0:	bl	42ebb8 <nftw@plt+0x2c038>
  42f2c4:	tst	w0, #0xff
  42f2c8:	b.eq	42f328 <nftw@plt+0x2c7a8>  // b.none
  42f2cc:	ldr	x4, [x26]
  42f2d0:	ldr	x3, [x4]
  42f2d4:	b	42f248 <nftw@plt+0x2c6c8>
  42f2d8:	ldrb	w1, [x26, #1166]
  42f2dc:	cbnz	w1, 42f250 <nftw@plt+0x2c6d0>
  42f2e0:	cmp	x19, x3
  42f2e4:	b.hi	42f2f8 <nftw@plt+0x2c778>  // b.pmore
  42f2e8:	b	42f2b0 <nftw@plt+0x2c730>
  42f2ec:	sub	x19, x19, #0x1
  42f2f0:	cmp	x19, x3
  42f2f4:	b.eq	42f2b0 <nftw@plt+0x2c730>  // b.none
  42f2f8:	ldurb	w0, [x19, #-1]
  42f2fc:	cmp	w0, #0x27
  42f300:	b.ne	42f2b0 <nftw@plt+0x2c730>  // b.any
  42f304:	ldrb	w0, [x26, #1166]
  42f308:	cbnz	w0, 42f2ec <nftw@plt+0x2c76c>
  42f30c:	str	x19, [x4]
  42f310:	mov	x2, x20
  42f314:	mov	x0, x26
  42f318:	mov	w1, #0x0                   	// #0
  42f31c:	bl	42ebb8 <nftw@plt+0x2c038>
  42f320:	tst	w0, #0xff
  42f324:	b.ne	42f2cc <nftw@plt+0x2c74c>  // b.any
  42f328:	ldr	x0, [x26, #64]
  42f32c:	sub	x19, x19, x23
  42f330:	add	w20, w19, #0x1
  42f334:	ldp	x3, x1, [x0, #16]
  42f338:	str	w19, [x21]
  42f33c:	sub	x1, x1, x3
  42f340:	cmp	x20, x1
  42f344:	b.hi	42f388 <nftw@plt+0x2c808>  // b.pmore
  42f348:	add	x20, x3, x20
  42f34c:	str	x20, [x0, #16]
  42f350:	mov	w2, w19
  42f354:	mov	x1, x23
  42f358:	mov	x0, x3
  42f35c:	bl	402490 <memcpy@plt>
  42f360:	mov	x3, x0
  42f364:	ldr	w0, [x21]
  42f368:	strb	wzr, [x3, x0]
  42f36c:	ldp	x19, x20, [sp, #16]
  42f370:	ldp	x23, x24, [sp, #48]
  42f374:	ldp	x25, x26, [sp, #64]
  42f378:	str	x3, [x22]
  42f37c:	ldp	x21, x22, [sp, #32]
  42f380:	ldp	x29, x30, [sp], #80
  42f384:	ret
  42f388:	ldr	x0, [x26, #72]
  42f38c:	add	x2, x26, #0x48
  42f390:	cbz	x0, 42f3c8 <nftw@plt+0x2c848>
  42f394:	add	x4, x20, x20, lsl #1
  42f398:	mov	x1, #0x1f40                	// #8000
  42f39c:	add	x4, x1, x4, lsr #1
  42f3a0:	ldr	x3, [x0, #8]
  42f3a4:	ldr	x1, [x0, #24]
  42f3a8:	sub	x1, x1, x3
  42f3ac:	cmp	x20, x1
  42f3b0:	b.hi	42f3bc <nftw@plt+0x2c83c>  // b.pmore
  42f3b4:	cmp	x1, x4
  42f3b8:	b.ls	42f40c <nftw@plt+0x2c88c>  // b.plast
  42f3bc:	mov	x2, x0
  42f3c0:	ldr	x0, [x0]
  42f3c4:	cbnz	x0, 42f3a0 <nftw@plt+0x2c820>
  42f3c8:	mov	x0, #0x1f40                	// #8000
  42f3cc:	cmp	x20, x0
  42f3d0:	csel	x24, x20, x0, cs  // cs = hs, nlast
  42f3d4:	add	x24, x24, #0x7
  42f3d8:	and	x24, x24, #0xfffffffffffffff8
  42f3dc:	add	x0, x24, #0x20
  42f3e0:	bl	461560 <_obstack_memory_used@@Base+0x118>
  42f3e4:	mov	x3, x0
  42f3e8:	add	x0, x0, x24
  42f3ec:	ldr	w19, [x21]
  42f3f0:	stp	x3, x3, [x0, #8]
  42f3f4:	str	x0, [x0, #24]
  42f3f8:	str	xzr, [x3, x24]
  42f3fc:	ldr	x1, [x26, #64]
  42f400:	str	x1, [x0]
  42f404:	str	x0, [x26, #64]
  42f408:	b	42f348 <nftw@plt+0x2c7c8>
  42f40c:	ldr	x1, [x0]
  42f410:	str	x1, [x2]
  42f414:	str	xzr, [x0]
  42f418:	str	x3, [x0, #16]
  42f41c:	b	42f3fc <nftw@plt+0x2c87c>
  42f420:	ldrb	w2, [x0, #4]
  42f424:	cmp	w2, #0x35
  42f428:	b.ne	42f450 <nftw@plt+0x2c8d0>  // b.any
  42f42c:	stp	x29, x30, [sp, #-16]!
  42f430:	mov	x29, sp
  42f434:	ldr	x0, [x0, #8]
  42f438:	ldr	x0, [x0]
  42f43c:	bl	402890 <strcmp@plt>
  42f440:	cmp	w0, #0x0
  42f444:	cset	w0, eq  // eq = none
  42f448:	ldp	x29, x30, [sp], #16
  42f44c:	ret
  42f450:	mov	w0, #0x0                   	// #0
  42f454:	ret
  42f458:	ret
  42f45c:	nop
  42f460:	stp	x29, x30, [sp, #-112]!
  42f464:	mov	x29, sp
  42f468:	stp	x21, x22, [sp, #32]
  42f46c:	ldr	x21, [x0]
  42f470:	stp	x19, x20, [sp, #16]
  42f474:	stp	x23, x24, [sp, #48]
  42f478:	mov	x23, x0
  42f47c:	ldrb	w0, [x21, #105]
  42f480:	ldr	x20, [x21, #16]
  42f484:	str	xzr, [x21, #56]
  42f488:	strb	wzr, [x21, #104]
  42f48c:	dup	v0.2d, x20
  42f490:	str	q0, [x21]
  42f494:	tbnz	w0, #1, 42f608 <nftw@plt+0x2ca88>
  42f498:	adrp	x1, 47d000 <_obstack_memory_used@@Base+0x1bbb8>
  42f49c:	adrp	x0, 47d000 <_obstack_memory_used@@Base+0x1bbb8>
  42f4a0:	stp	x25, x26, [sp, #64]
  42f4a4:	mov	x22, #0x1000                	// #4096
  42f4a8:	mov	x26, #0x0                   	// #0
  42f4ac:	ldr	q16, [x1, #2528]
  42f4b0:	ldr	q17, [x0, #2512]
  42f4b4:	adrp	x0, 4a5000 <__environ@@GLIBC_2.17+0xa68>
  42f4b8:	add	x25, x0, #0x9b0
  42f4bc:	and	x0, x20, #0xfff
  42f4c0:	and	x2, x20, #0xfffffffffffffff0
  42f4c4:	sub	x0, x22, x0
  42f4c8:	mov	x1, x2
  42f4cc:	movi	v1.16b, #0xa
  42f4d0:	cmp	x0, #0xf
  42f4d4:	b.ls	42f6c8 <nftw@plt+0x2cb48>  // b.plast
  42f4d8:	movi	v0.16b, #0xd
  42f4dc:	ldr	q2, [x20]
  42f4e0:	movi	v3.16b, #0x5c
  42f4e4:	movi	v4.16b, #0x3f
  42f4e8:	cmeq	v1.16b, v2.16b, v1.16b
  42f4ec:	cmeq	v0.16b, v2.16b, v0.16b
  42f4f0:	cmeq	v3.16b, v2.16b, v3.16b
  42f4f4:	cmeq	v2.16b, v2.16b, v4.16b
  42f4f8:	orr	v0.16b, v1.16b, v0.16b
  42f4fc:	orr	v0.16b, v0.16b, v3.16b
  42f500:	orr	v0.16b, v0.16b, v2.16b
  42f504:	addp	d1, v0.2d
  42f508:	fmov	x0, d1
  42f50c:	cbnz	x0, 42f550 <nftw@plt+0x2c9d0>
  42f510:	movi	v7.16b, #0xa
  42f514:	movi	v6.16b, #0xd
  42f518:	movi	v5.16b, #0x5c
  42f51c:	movi	v4.16b, #0x3f
  42f520:	ldr	q1, [x1, #16]!
  42f524:	cmeq	v0.16b, v1.16b, v7.16b
  42f528:	cmeq	v3.16b, v1.16b, v6.16b
  42f52c:	cmeq	v2.16b, v1.16b, v5.16b
  42f530:	cmeq	v1.16b, v1.16b, v4.16b
  42f534:	orr	v0.16b, v0.16b, v3.16b
  42f538:	orr	v0.16b, v0.16b, v2.16b
  42f53c:	orr	v0.16b, v0.16b, v1.16b
  42f540:	addp	d1, v0.2d
  42f544:	fmov	x2, d1
  42f548:	cbz	x2, 42f520 <nftw@plt+0x2c9a0>
  42f54c:	mov	x2, x1
  42f550:	and	v0.16b, v0.16b, v17.16b
  42f554:	cmp	x20, x2
  42f558:	uaddlp	v0.8h, v0.16b
  42f55c:	ushl	v0.8h, v0.8h, v16.8h
  42f560:	csel	x20, x20, x1, hi  // hi = pmore
  42f564:	addv	h0, v0.8h
  42f568:	umov	w19, v0.h[0]
  42f56c:	rbit	w19, w19
  42f570:	clz	w19, w19
  42f574:	add	x19, x20, w19, sxtw
  42f578:	mov	x20, x19
  42f57c:	ldrb	w0, [x20], #1
  42f580:	cmp	w0, #0x5c
  42f584:	b.eq	42f6b0 <nftw@plt+0x2cb30>  // b.none
  42f588:	cmp	w0, #0x3f
  42f58c:	b.eq	42f6a0 <nftw@plt+0x2cb20>  // b.none
  42f590:	ldr	x1, [x21, #32]
  42f594:	cmp	x1, x19
  42f598:	b.eq	42f8e4 <nftw@plt+0x2cd64>  // b.none
  42f59c:	stp	x27, x28, [sp, #80]
  42f5a0:	cmp	w0, #0xd
  42f5a4:	mov	x22, x20
  42f5a8:	mov	x27, x19
  42f5ac:	b.eq	42f72c <nftw@plt+0x2cbac>  // b.none
  42f5b0:	cbnz	x26, 42f8f0 <nftw@plt+0x2cd70>
  42f5b4:	ldp	x25, x26, [sp, #64]
  42f5b8:	ldp	x27, x28, [sp, #80]
  42f5bc:	mov	w0, #0xa                   	// #10
  42f5c0:	strb	w0, [x19]
  42f5c4:	ldp	w1, w0, [x21, #60]
  42f5c8:	cmp	w1, w0
  42f5cc:	b.eq	42f678 <nftw@plt+0x2caf8>  // b.none
  42f5d0:	ldr	x0, [x21, #48]
  42f5d4:	ubfiz	x2, x1, #4, #32
  42f5d8:	add	x3, x0, x2
  42f5dc:	mov	w4, #0xa                   	// #10
  42f5e0:	ldp	x23, x24, [sp, #48]
  42f5e4:	str	x20, [x0, x2]
  42f5e8:	ldp	x19, x20, [sp, #16]
  42f5ec:	str	w4, [x3, #8]
  42f5f0:	add	w1, w1, #0x1
  42f5f4:	str	x22, [x21, #16]
  42f5f8:	str	w1, [x21, #60]
  42f5fc:	ldp	x21, x22, [sp, #32]
  42f600:	ldp	x29, x30, [sp], #112
  42f604:	ret
  42f608:	ldrb	w0, [x20]
  42f60c:	cmp	w0, #0xa
  42f610:	b.ne	42f630 <nftw@plt+0x2cab0>  // b.any
  42f614:	add	x22, x20, #0x1
  42f618:	mov	x19, x20
  42f61c:	mov	x20, x22
  42f620:	b	42f5bc <nftw@plt+0x2ca3c>
  42f624:	ldrb	w0, [x20]
  42f628:	cmp	w0, #0xa
  42f62c:	b.eq	42f6b8 <nftw@plt+0x2cb38>  // b.none
  42f630:	mov	x19, x20
  42f634:	cmp	w0, #0xd
  42f638:	add	x20, x20, #0x1
  42f63c:	b.ne	42f624 <nftw@plt+0x2caa4>  // b.any
  42f640:	ldr	x0, [x21, #32]
  42f644:	mov	x22, x20
  42f648:	cmp	x0, x19
  42f64c:	b.eq	42f5bc <nftw@plt+0x2ca3c>  // b.none
  42f650:	ldrb	w0, [x19, #1]
  42f654:	add	x22, x19, #0x2
  42f658:	cmp	w0, #0xa
  42f65c:	mov	w0, #0xa                   	// #10
  42f660:	strb	w0, [x19]
  42f664:	csel	x22, x22, x20, eq  // eq = none
  42f668:	ldp	w1, w0, [x21, #60]
  42f66c:	cmp	w1, w0
  42f670:	b.ne	42f5d0 <nftw@plt+0x2ca50>  // b.any
  42f674:	nop
  42f678:	add	w1, w1, #0x64
  42f67c:	ldr	x0, [x21, #48]
  42f680:	lsl	w1, w1, #1
  42f684:	mov	x2, x1
  42f688:	str	w2, [x21, #64]
  42f68c:	lsl	x1, x1, #4
  42f690:	bl	4615e8 <_obstack_memory_used@@Base+0x1a0>
  42f694:	str	x0, [x21, #48]
  42f698:	ldr	w1, [x21, #60]
  42f69c:	b	42f5d4 <nftw@plt+0x2ca54>
  42f6a0:	ldrb	w0, [x19, #1]
  42f6a4:	cmp	w0, #0x3f
  42f6a8:	b.eq	42f74c <nftw@plt+0x2cbcc>  // b.none
  42f6ac:	mov	x19, x26
  42f6b0:	mov	x26, x19
  42f6b4:	b	42f4bc <nftw@plt+0x2c93c>
  42f6b8:	add	x22, x19, #0x2
  42f6bc:	mov	x19, x20
  42f6c0:	mov	x20, x22
  42f6c4:	b	42f5bc <nftw@plt+0x2ca3c>
  42f6c8:	movi	v0.16b, #0xd
  42f6cc:	and	w0, w20, #0xf
  42f6d0:	ldr	q2, [x2]
  42f6d4:	mov	w3, #0xffffffff            	// #-1
  42f6d8:	movi	v3.16b, #0x5c
  42f6dc:	lsl	w3, w3, w0
  42f6e0:	movi	v4.16b, #0x3f
  42f6e4:	cmeq	v1.16b, v2.16b, v1.16b
  42f6e8:	cmeq	v0.16b, v2.16b, v0.16b
  42f6ec:	cmeq	v3.16b, v2.16b, v3.16b
  42f6f0:	cmeq	v2.16b, v2.16b, v4.16b
  42f6f4:	orr	v0.16b, v1.16b, v0.16b
  42f6f8:	orr	v0.16b, v0.16b, v3.16b
  42f6fc:	orr	v0.16b, v0.16b, v2.16b
  42f700:	and	v0.16b, v0.16b, v17.16b
  42f704:	uaddlp	v0.8h, v0.16b
  42f708:	ushl	v0.8h, v0.8h, v16.8h
  42f70c:	addv	h0, v0.8h
  42f710:	umov	w0, v0.h[0]
  42f714:	ands	w0, w3, w0
  42f718:	b.eq	42f510 <nftw@plt+0x2c990>  // b.none
  42f71c:	rbit	w0, w0
  42f720:	clz	w0, w0
  42f724:	add	x19, x2, w0, sxtw
  42f728:	b	42f578 <nftw@plt+0x2c9f8>
  42f72c:	ldrb	w0, [x19, #1]
  42f730:	cmp	w0, #0xa
  42f734:	b.ne	42f5b0 <nftw@plt+0x2ca30>  // b.any
  42f738:	cmp	x1, x20
  42f73c:	add	x22, x19, #0x2
  42f740:	b.eq	42f5b4 <nftw@plt+0x2ca34>  // b.none
  42f744:	mov	x27, x20
  42f748:	b	42f5b0 <nftw@plt+0x2ca30>
  42f74c:	ldrb	w24, [x19, #2]
  42f750:	ldrb	w0, [x25, w24, sxtw]
  42f754:	cbz	w0, 42f6ac <nftw@plt+0x2cb2c>
  42f758:	ldp	w1, w2, [x21, #60]
  42f75c:	ldr	x0, [x21, #48]
  42f760:	cmp	w1, w2
  42f764:	b.eq	42fa48 <nftw@plt+0x2cec8>  // b.none
  42f768:	ubfiz	x2, x1, #4, #32
  42f76c:	add	w1, w1, #0x1
  42f770:	add	x3, x0, x2
  42f774:	str	x19, [x0, x2]
  42f778:	str	w24, [x3, #8]
  42f77c:	str	w1, [x21, #60]
  42f780:	ldrb	w0, [x23, #1125]
  42f784:	cbz	w0, 42f6ac <nftw@plt+0x2cb2c>
  42f788:	stp	x27, x28, [sp, #80]
  42f78c:	mov	x27, x19
  42f790:	mov	x24, x19
  42f794:	ldrb	w0, [x19, #2]
  42f798:	ldrb	w0, [x25, x0]
  42f79c:	strb	w0, [x27], #2
  42f7a0:	adrp	x22, 4a5000 <__environ@@GLIBC_2.17+0xa68>
  42f7a4:	add	x0, x22, #0x9b0
  42f7a8:	str	x0, [sp, #104]
  42f7ac:	adrp	x25, 481000 <_obstack_memory_used@@Base+0x1fbb8>
  42f7b0:	ldrb	w0, [x27, #1]
  42f7b4:	add	x25, x25, #0xaf0
  42f7b8:	mov	w22, #0x20                  	// #32
  42f7bc:	nop
  42f7c0:	strb	w0, [x24, #1]
  42f7c4:	cmp	w0, #0xa
  42f7c8:	ccmp	w0, #0xd, #0x4, ne  // ne = any
  42f7cc:	add	x26, x27, #0x1
  42f7d0:	add	x19, x24, #0x1
  42f7d4:	b.ne	42f884 <nftw@plt+0x2cd04>  // b.any
  42f7d8:	cmp	w0, #0xd
  42f7dc:	ldr	x0, [x21, #32]
  42f7e0:	b.eq	42f8b0 <nftw@plt+0x2cd30>  // b.none
  42f7e4:	cmp	x26, x0
  42f7e8:	b.eq	42f89c <nftw@plt+0x2cd1c>  // b.none
  42f7ec:	ldr	x2, [x21, #16]
  42f7f0:	cmp	x2, x19
  42f7f4:	b.eq	42f89c <nftw@plt+0x2cd1c>  // b.none
  42f7f8:	mov	x20, x19
  42f7fc:	b	42f80c <nftw@plt+0x2cc8c>
  42f800:	sub	x20, x20, #0x1
  42f804:	cmp	x2, x20
  42f808:	b.eq	42f89c <nftw@plt+0x2cd1c>  // b.none
  42f80c:	ldurb	w0, [x20, #-1]
  42f810:	ldrh	w1, [x25, w0, sxtw #1]
  42f814:	tbnz	w1, #11, 42f800 <nftw@plt+0x2cc80>
  42f818:	cmp	x2, x20
  42f81c:	b.eq	42f89c <nftw@plt+0x2cd1c>  // b.none
  42f820:	cmp	w0, #0x5c
  42f824:	b.ne	42f89c <nftw@plt+0x2cd1c>  // b.any
  42f828:	ldp	w1, w2, [x21, #60]
  42f82c:	cmp	x19, x20
  42f830:	csel	w19, w22, w0, ne  // ne = any
  42f834:	sub	x28, x20, #0x1
  42f838:	cmp	w1, w2
  42f83c:	ldr	x0, [x21, #48]
  42f840:	b.eq	42f96c <nftw@plt+0x2cdec>  // b.none
  42f844:	ubfiz	x2, x1, #4, #32
  42f848:	sub	x24, x20, #0x2
  42f84c:	add	x4, x0, x2
  42f850:	add	w1, w1, #0x1
  42f854:	mov	x27, x26
  42f858:	str	x28, [x0, x2]
  42f85c:	str	w19, [x4, #8]
  42f860:	add	x19, x24, #0x1
  42f864:	str	x28, [x21, #16]
  42f868:	str	w1, [x21, #60]
  42f86c:	ldrb	w0, [x26, #1]
  42f870:	add	x26, x27, #0x1
  42f874:	strb	w0, [x24, #1]
  42f878:	cmp	w0, #0xa
  42f87c:	ccmp	w0, #0xd, #0x4, ne  // ne = any
  42f880:	b.eq	42f7d8 <nftw@plt+0x2cc58>  // b.none
  42f884:	cmp	w0, #0x3f
  42f888:	b.eq	42f8cc <nftw@plt+0x2cd4c>  // b.none
  42f88c:	ldrb	w0, [x27, #2]
  42f890:	mov	x24, x19
  42f894:	mov	x27, x26
  42f898:	b	42f7c0 <nftw@plt+0x2cc40>
  42f89c:	add	x22, x26, #0x1
  42f8a0:	add	x20, x24, #0x2
  42f8a4:	ldp	x25, x26, [sp, #64]
  42f8a8:	ldp	x27, x28, [sp, #80]
  42f8ac:	b	42f5bc <nftw@plt+0x2ca3c>
  42f8b0:	cmp	x26, x0
  42f8b4:	b.eq	42f89c <nftw@plt+0x2cd1c>  // b.none
  42f8b8:	ldrb	w1, [x27, #2]
  42f8bc:	cmp	w1, #0xa
  42f8c0:	b.ne	42f7ec <nftw@plt+0x2cc6c>  // b.any
  42f8c4:	add	x26, x27, #0x2
  42f8c8:	b	42f7e4 <nftw@plt+0x2cc64>
  42f8cc:	ldrb	w0, [x27, #2]
  42f8d0:	cmp	w0, #0x3f
  42f8d4:	b.eq	42f98c <nftw@plt+0x2ce0c>  // b.none
  42f8d8:	mov	x24, x19
  42f8dc:	mov	x27, x26
  42f8e0:	b	42f7c0 <nftw@plt+0x2cc40>
  42f8e4:	mov	x22, x20
  42f8e8:	ldp	x25, x26, [sp, #64]
  42f8ec:	b	42f5bc <nftw@plt+0x2ca3c>
  42f8f0:	ldurb	w0, [x19, #-1]
  42f8f4:	adrp	x1, 481000 <_obstack_memory_used@@Base+0x1fbb8>
  42f8f8:	add	x1, x1, #0xaf0
  42f8fc:	ldrh	w0, [x1, x0, lsl #1]
  42f900:	tbz	w0, #11, 42f9f0 <nftw@plt+0x2ce70>
  42f904:	mov	x24, x19
  42f908:	mov	x2, x24
  42f90c:	sub	x24, x24, #0x1
  42f910:	ldurb	w0, [x24, #-1]
  42f914:	ldrh	w0, [x1, x0, lsl #1]
  42f918:	tbnz	w0, #11, 42f908 <nftw@plt+0x2cd88>
  42f91c:	sub	x2, x2, #0x2
  42f920:	cmp	x26, x2
  42f924:	b.ne	42f5b4 <nftw@plt+0x2ca34>  // b.any
  42f928:	cmp	x24, x19
  42f92c:	mov	w0, #0x5c                  	// #92
  42f930:	mov	w19, #0x20                  	// #32
  42f934:	csel	w19, w19, w0, ne  // ne = any
  42f938:	ldp	w1, w2, [x21, #60]
  42f93c:	ldr	x0, [x21, #48]
  42f940:	cmp	w1, w2
  42f944:	b.eq	42fa08 <nftw@plt+0x2ce88>  // b.none
  42f948:	ubfiz	x2, x1, #4, #32
  42f94c:	sub	x24, x24, #0x2
  42f950:	add	x3, x0, x2
  42f954:	add	w1, w1, #0x1
  42f958:	str	x26, [x0, x2]
  42f95c:	str	w19, [x3, #8]
  42f960:	str	x26, [x21, #16]
  42f964:	str	w1, [x21, #60]
  42f968:	b	42f7a0 <nftw@plt+0x2cc20>
  42f96c:	add	w1, w1, #0x64
  42f970:	lsl	w1, w1, #1
  42f974:	str	w1, [x21, #64]
  42f978:	lsl	x1, x1, #4
  42f97c:	bl	4615e8 <_obstack_memory_used@@Base+0x1a0>
  42f980:	ldr	w1, [x21, #60]
  42f984:	str	x0, [x21, #48]
  42f988:	b	42f844 <nftw@plt+0x2ccc4>
  42f98c:	ldrb	w20, [x27, #3]
  42f990:	ldr	x1, [sp, #104]
  42f994:	ldrb	w1, [x1, w20, sxtw]
  42f998:	cbz	w1, 42f8d8 <nftw@plt+0x2cd58>
  42f99c:	ldp	w1, w2, [x21, #60]
  42f9a0:	ldr	x0, [x21, #48]
  42f9a4:	cmp	w1, w2
  42f9a8:	b.eq	42fa28 <nftw@plt+0x2cea8>  // b.none
  42f9ac:	ubfiz	x2, x1, #4, #32
  42f9b0:	add	w1, w1, #0x1
  42f9b4:	add	x4, x0, x2
  42f9b8:	str	x19, [x0, x2]
  42f9bc:	str	w20, [x4, #8]
  42f9c0:	str	w1, [x21, #60]
  42f9c4:	ldrb	w0, [x23, #1125]
  42f9c8:	cbz	w0, 42f88c <nftw@plt+0x2cd0c>
  42f9cc:	mov	x1, x27
  42f9d0:	ldr	x2, [sp, #104]
  42f9d4:	ldrb	w0, [x1, #3]!
  42f9d8:	ldrb	w0, [x2, w0, sxtw]
  42f9dc:	strb	w0, [x24, #1]
  42f9e0:	mov	x24, x19
  42f9e4:	ldrb	w0, [x27, #4]
  42f9e8:	mov	x27, x1
  42f9ec:	b	42f7c0 <nftw@plt+0x2cc40>
  42f9f0:	sub	x0, x19, #0x1
  42f9f4:	cmp	x26, x0
  42f9f8:	b.ne	42f5b4 <nftw@plt+0x2ca34>  // b.any
  42f9fc:	mov	x24, x19
  42fa00:	mov	w19, #0x5c                  	// #92
  42fa04:	b	42f938 <nftw@plt+0x2cdb8>
  42fa08:	add	w1, w1, #0x64
  42fa0c:	lsl	w1, w1, #1
  42fa10:	str	w1, [x21, #64]
  42fa14:	lsl	x1, x1, #4
  42fa18:	bl	4615e8 <_obstack_memory_used@@Base+0x1a0>
  42fa1c:	ldr	w1, [x21, #60]
  42fa20:	str	x0, [x21, #48]
  42fa24:	b	42f948 <nftw@plt+0x2cdc8>
  42fa28:	add	w1, w1, #0x64
  42fa2c:	lsl	w1, w1, #1
  42fa30:	str	w1, [x21, #64]
  42fa34:	lsl	x1, x1, #4
  42fa38:	bl	4615e8 <_obstack_memory_used@@Base+0x1a0>
  42fa3c:	ldr	w1, [x21, #60]
  42fa40:	str	x0, [x21, #48]
  42fa44:	b	42f9ac <nftw@plt+0x2ce2c>
  42fa48:	add	w1, w1, #0x64
  42fa4c:	lsl	w1, w1, #1
  42fa50:	str	w1, [x21, #64]
  42fa54:	lsl	x1, x1, #4
  42fa58:	bl	4615e8 <_obstack_memory_used@@Base+0x1a0>
  42fa5c:	adrp	x2, 47d000 <_obstack_memory_used@@Base+0x1bbb8>
  42fa60:	ldr	w1, [x21, #60]
  42fa64:	str	x0, [x21, #48]
  42fa68:	ldr	q16, [x2, #2528]
  42fa6c:	adrp	x2, 47d000 <_obstack_memory_used@@Base+0x1bbb8>
  42fa70:	ldr	q17, [x2, #2512]
  42fa74:	b	42f768 <nftw@plt+0x2cbe8>
  42fa78:	stp	x29, x30, [sp, #-80]!
  42fa7c:	mov	x29, sp
  42fa80:	stp	x19, x20, [sp, #16]
  42fa84:	ldr	x19, [x0]
  42fa88:	stp	x25, x26, [sp, #64]
  42fa8c:	mov	x25, x0
  42fa90:	stp	x23, x24, [sp, #48]
  42fa94:	mov	w23, w1
  42fa98:	ldr	w2, [x19, #56]
  42fa9c:	ldr	x4, [x19, #48]
  42faa0:	ubfiz	x0, x2, #4, #32
  42faa4:	ldr	x7, [x19]
  42faa8:	add	x26, x4, x0
  42faac:	ldr	x1, [x4, x0]
  42fab0:	cmp	x7, x1
  42fab4:	b.cc	42fbd8 <nftw@plt+0x2d058>  // b.lo, b.ul, b.last
  42fab8:	adrp	x24, 47c000 <_obstack_memory_used@@Base+0x1abb8>
  42fabc:	add	x24, x24, #0x990
  42fac0:	stp	x21, x22, [sp, #32]
  42fac4:	adrp	x22, 4a5000 <__environ@@GLIBC_2.17+0xa68>
  42fac8:	mov	w21, #0x18                  	// #24
  42facc:	add	x22, x22, #0x9b0
  42fad0:	b	42fb3c <nftw@plt+0x2cfbc>
  42fad4:	cmp	w5, #0x20
  42fad8:	b.eq	42fbec <nftw@plt+0x2d06c>  // b.none
  42fadc:	ldrb	w6, [x22, w5, uxtw]
  42fae0:	cbz	w6, 42fc18 <nftw@plt+0x2d098>
  42fae4:	ldrb	w0, [x25, #1136]
  42fae8:	cbz	w0, 42fb28 <nftw@plt+0x2cfa8>
  42faec:	cbnz	w23, 42fc60 <nftw@plt+0x2d0e0>
  42faf0:	ldrb	w0, [x25, #1125]
  42faf4:	ldr	x1, [x25, #40]
  42faf8:	ldr	w2, [x1, #60]
  42fafc:	cbz	w0, 42fca8 <nftw@plt+0x2d128>
  42fb00:	mov	w3, w20
  42fb04:	mov	x0, x25
  42fb08:	adrp	x4, 47c000 <_obstack_memory_used@@Base+0x1abb8>
  42fb0c:	mov	w1, #0x4                   	// #4
  42fb10:	add	x4, x4, #0x9e8
  42fb14:	bl	427670 <nftw@plt+0x24af0>
  42fb18:	ldr	w2, [x19, #56]
  42fb1c:	ldr	x7, [x19]
  42fb20:	ldr	x4, [x19, #48]
  42fb24:	nop
  42fb28:	ubfiz	x0, x2, #4, #32
  42fb2c:	add	x26, x4, x0
  42fb30:	ldr	x1, [x4, x0]
  42fb34:	cmp	x1, x7
  42fb38:	b.hi	42fbd4 <nftw@plt+0x2d054>  // b.pmore
  42fb3c:	ldr	x20, [x19, #8]
  42fb40:	add	w2, w2, #0x1
  42fb44:	ldr	w5, [x26, #8]
  42fb48:	add	x3, x1, #0x1
  42fb4c:	str	w2, [x19, #56]
  42fb50:	sub	x20, x3, x20
  42fb54:	cmp	w5, #0x5c
  42fb58:	b.ne	42fad4 <nftw@plt+0x2cf54>  // b.any
  42fb5c:	ldr	x0, [x25, #40]
  42fb60:	ldr	w4, [x0, #60]
  42fb64:	ldr	x2, [x19, #16]
  42fb68:	ldr	x1, [x19, #32]
  42fb6c:	cmp	x2, x1
  42fb70:	b.hi	42fc34 <nftw@plt+0x2d0b4>  // b.pmore
  42fb74:	ldr	w3, [x0, #12]
  42fb78:	ldr	x1, [x0]
  42fb7c:	sub	w3, w3, #0x1
  42fb80:	ldr	x2, [x26]
  42fb84:	smull	x3, w3, w21
  42fb88:	add	x5, x1, x3
  42fb8c:	ldr	w6, [x1, x3]
  42fb90:	ldrb	w3, [x5, #6]
  42fb94:	sub	w4, w4, w6
  42fb98:	ldr	w1, [x5, #16]
  42fb9c:	str	x2, [x19, #8]
  42fba0:	mov	w2, #0x0                   	// #0
  42fba4:	lsr	w4, w4, w3
  42fba8:	add	w1, w1, #0x1
  42fbac:	add	w1, w4, w1
  42fbb0:	bl	4359a8 <nftw@plt+0x32e28>
  42fbb4:	ldr	w2, [x19, #56]
  42fbb8:	ldr	x4, [x19, #48]
  42fbbc:	ubfiz	x0, x2, #4, #32
  42fbc0:	ldr	x7, [x19]
  42fbc4:	add	x26, x4, x0
  42fbc8:	ldr	x1, [x4, x0]
  42fbcc:	cmp	x1, x7
  42fbd0:	b.ls	42fb3c <nftw@plt+0x2cfbc>  // b.plast
  42fbd4:	ldp	x21, x22, [sp, #32]
  42fbd8:	ldp	x19, x20, [sp, #16]
  42fbdc:	ldp	x23, x24, [sp, #48]
  42fbe0:	ldp	x25, x26, [sp, #64]
  42fbe4:	ldp	x29, x30, [sp], #80
  42fbe8:	ret
  42fbec:	ldr	x0, [x25, #40]
  42fbf0:	ldr	w4, [x0, #60]
  42fbf4:	cbnz	w23, 42fb64 <nftw@plt+0x2cfe4>
  42fbf8:	mov	w2, w4
  42fbfc:	mov	w3, w20
  42fc00:	mov	x0, x25
  42fc04:	adrp	x4, 47c000 <_obstack_memory_used@@Base+0x1abb8>
  42fc08:	mov	w1, #0x0                   	// #0
  42fc0c:	add	x4, x4, #0xb90
  42fc10:	bl	4275f8 <nftw@plt+0x24a78>
  42fc14:	b	42fb5c <nftw@plt+0x2cfdc>
  42fc18:	cbz	w5, 42fb28 <nftw@plt+0x2cfa8>
  42fc1c:	adrp	x2, 47c000 <_obstack_memory_used@@Base+0x1abb8>
  42fc20:	adrp	x0, 47c000 <_obstack_memory_used@@Base+0x1abb8>
  42fc24:	add	x2, x2, #0x9b8
  42fc28:	add	x0, x0, #0x9d0
  42fc2c:	mov	w1, #0x48b                 	// #1163
  42fc30:	bl	402bf0 <nftw@plt+0x70>
  42fc34:	mov	w2, w4
  42fc38:	mov	w1, #0x2                   	// #2
  42fc3c:	mov	x4, x24
  42fc40:	mov	w3, w20
  42fc44:	mov	x0, x25
  42fc48:	bl	4275f8 <nftw@plt+0x24a78>
  42fc4c:	ldr	x0, [x25, #40]
  42fc50:	ldr	x1, [x19, #32]
  42fc54:	ldr	w4, [x0, #60]
  42fc58:	str	x1, [x19, #16]
  42fc5c:	b	42fb74 <nftw@plt+0x2cff4>
  42fc60:	cmp	w5, #0x2f
  42fc64:	b.ne	42fb28 <nftw@plt+0x2cfa8>  // b.any
  42fc68:	ldrb	w0, [x25, #1125]
  42fc6c:	cbnz	w0, 42fcec <nftw@plt+0x2d16c>
  42fc70:	ldrb	w0, [x1, #3]
  42fc74:	adrp	x6, 481000 <_obstack_memory_used@@Base+0x1fbb8>
  42fc78:	add	x6, x6, #0xaf0
  42fc7c:	add	x1, x1, #0x3
  42fc80:	ldrh	w3, [x6, w0, sxtw #1]
  42fc84:	tbnz	w3, #11, 42fcd0 <nftw@plt+0x2d150>
  42fc88:	cmp	w0, #0xa
  42fc8c:	b.ne	42fb28 <nftw@plt+0x2cfa8>  // b.any
  42fc90:	ldr	x0, [x26, #16]
  42fc94:	cmp	x0, x1
  42fc98:	b.ls	42fb28 <nftw@plt+0x2cfa8>  // b.plast
  42fc9c:	ldr	x0, [x25, #40]
  42fca0:	ldr	w2, [x0, #60]
  42fca4:	nop
  42fca8:	mov	w3, w20
  42fcac:	mov	x0, x25
  42fcb0:	adrp	x4, 47c000 <_obstack_memory_used@@Base+0x1abb8>
  42fcb4:	mov	w1, #0x4                   	// #4
  42fcb8:	add	x4, x4, #0xa08
  42fcbc:	bl	427670 <nftw@plt+0x24af0>
  42fcc0:	ldr	w2, [x19, #56]
  42fcc4:	ldr	x7, [x19]
  42fcc8:	ldr	x4, [x19, #48]
  42fccc:	b	42fb28 <nftw@plt+0x2cfa8>
  42fcd0:	ldrb	w0, [x1, #1]!
  42fcd4:	ldrh	w3, [x6, w0, sxtw #1]
  42fcd8:	tbz	w3, #11, 42fc88 <nftw@plt+0x2d108>
  42fcdc:	ldrb	w0, [x1, #1]!
  42fce0:	ldrh	w3, [x6, w0, sxtw #1]
  42fce4:	tbnz	w3, #11, 42fcd0 <nftw@plt+0x2d150>
  42fce8:	b	42fc88 <nftw@plt+0x2d108>
  42fcec:	ldr	x0, [x26, #16]
  42fcf0:	cmp	x0, x1
  42fcf4:	b.ne	42fb28 <nftw@plt+0x2cfa8>  // b.any
  42fcf8:	ldr	x0, [x25, #40]
  42fcfc:	ldr	w2, [x0, #60]
  42fd00:	b	42fb00 <nftw@plt+0x2cf80>
  42fd04:	nop
  42fd08:	stp	x29, x30, [sp, #-64]!
  42fd0c:	mov	x29, sp
  42fd10:	stp	x21, x22, [sp, #32]
  42fd14:	mov	x22, x0
  42fd18:	ldr	x21, [x0]
  42fd1c:	stp	x19, x20, [sp, #16]
  42fd20:	stp	x23, x24, [sp, #48]
  42fd24:	ldr	x19, [x21]
  42fd28:	ldrb	w1, [x19, #1]
  42fd2c:	cmp	w1, #0x2f
  42fd30:	b.eq	42fe74 <nftw@plt+0x2d2f4>  // b.none
  42fd34:	add	x19, x19, #0x1
  42fd38:	adrp	x24, 47c000 <_obstack_memory_used@@Base+0x1abb8>
  42fd3c:	add	x24, x24, #0xbc0
  42fd40:	mov	w23, #0x18                  	// #24
  42fd44:	nop
  42fd48:	cmp	w1, #0x2f
  42fd4c:	add	x20, x19, #0x1
  42fd50:	b.eq	42fd70 <nftw@plt+0x2d1f0>  // b.none
  42fd54:	cmp	w1, #0xa
  42fd58:	b.eq	42fd98 <nftw@plt+0x2d218>  // b.none
  42fd5c:	ldrb	w1, [x19, #1]
  42fd60:	mov	x19, x20
  42fd64:	add	x20, x19, #0x1
  42fd68:	cmp	w1, #0x2f
  42fd6c:	b.ne	42fd54 <nftw@plt+0x2d1d4>  // b.any
  42fd70:	ldurb	w0, [x19, #-1]
  42fd74:	cmp	w0, #0x2a
  42fd78:	b.eq	42fe50 <nftw@plt+0x2d2d0>  // b.none
  42fd7c:	ldrb	w0, [x22, #1133]
  42fd80:	cbz	w0, 42fd5c <nftw@plt+0x2d1dc>
  42fd84:	ldrb	w1, [x19, #1]
  42fd88:	cmp	w1, #0x2a
  42fd8c:	b.eq	42fe0c <nftw@plt+0x2d28c>  // b.none
  42fd90:	mov	x19, x20
  42fd94:	b	42fd48 <nftw@plt+0x2d1c8>
  42fd98:	str	x19, [x21]
  42fd9c:	mov	x0, x22
  42fda0:	bl	42eca0 <nftw@plt+0x2c120>
  42fda4:	ldr	x1, [x21, #16]
  42fda8:	ldr	x0, [x21, #32]
  42fdac:	cmp	x1, x0
  42fdb0:	b.cs	42fe80 <nftw@plt+0x2d300>  // b.hs, b.nlast
  42fdb4:	mov	x0, x22
  42fdb8:	bl	42f460 <nftw@plt+0x2c8e0>
  42fdbc:	ldr	x0, [x22, #40]
  42fdc0:	ldp	x2, x6, [x21, #8]
  42fdc4:	ldr	w1, [x0, #12]
  42fdc8:	ldr	x5, [x0]
  42fdcc:	sub	w1, w1, #0x1
  42fdd0:	ldr	w3, [x0, #60]
  42fdd4:	sub	w2, w6, w2
  42fdd8:	smull	x1, w1, w23
  42fddc:	add	x4, x5, x1
  42fde0:	ldr	w6, [x5, x1]
  42fde4:	ldrb	w5, [x4, #6]
  42fde8:	sub	w3, w3, w6
  42fdec:	ldr	w1, [x4, #16]
  42fdf0:	lsr	w3, w3, w5
  42fdf4:	add	w1, w1, #0x1
  42fdf8:	add	w1, w3, w1
  42fdfc:	bl	4359a8 <nftw@plt+0x32e28>
  42fe00:	ldr	x19, [x21]
  42fe04:	ldrb	w1, [x19]
  42fe08:	b	42fd48 <nftw@plt+0x2d1c8>
  42fe0c:	ldrb	w0, [x19, #2]
  42fe10:	cmp	w0, #0x2f
  42fe14:	b.ne	42fe28 <nftw@plt+0x2d2a8>  // b.any
  42fe18:	add	x0, x19, #0x2
  42fe1c:	mov	x19, x20
  42fe20:	mov	x20, x0
  42fe24:	b	42fd5c <nftw@plt+0x2d1dc>
  42fe28:	ldr	x0, [x22, #40]
  42fe2c:	mov	x4, x24
  42fe30:	ldr	x3, [x21, #8]
  42fe34:	mov	w1, #0x2                   	// #2
  42fe38:	ldr	w2, [x0, #60]
  42fe3c:	mov	x0, x22
  42fe40:	str	x20, [x21]
  42fe44:	sub	w3, w20, w3
  42fe48:	bl	427670 <nftw@plt+0x24af0>
  42fe4c:	b	42fd5c <nftw@plt+0x2d1dc>
  42fe50:	str	x20, [x21]
  42fe54:	mov	x0, x22
  42fe58:	bl	42eca0 <nftw@plt+0x2c120>
  42fe5c:	mov	w0, #0x0                   	// #0
  42fe60:	ldp	x19, x20, [sp, #16]
  42fe64:	ldp	x21, x22, [sp, #32]
  42fe68:	ldp	x23, x24, [sp, #48]
  42fe6c:	ldp	x29, x30, [sp], #64
  42fe70:	ret
  42fe74:	ldrb	w1, [x19, #2]
  42fe78:	add	x19, x19, #0x2
  42fe7c:	b	42fd38 <nftw@plt+0x2d1b8>
  42fe80:	mov	w0, #0x1                   	// #1
  42fe84:	ldp	x19, x20, [sp, #16]
  42fe88:	ldp	x21, x22, [sp, #32]
  42fe8c:	ldp	x23, x24, [sp, #48]
  42fe90:	ldp	x29, x30, [sp], #64
  42fe94:	ret
  42fe98:	stp	x29, x30, [sp, #-32]!
  42fe9c:	mov	x2, x1
  42fea0:	adrp	x5, 481000 <_obstack_memory_used@@Base+0x1fbb8>
  42fea4:	mov	x29, sp
  42fea8:	stp	x19, x20, [sp, #16]
  42feac:	add	x5, x5, #0xaf0
  42feb0:	mov	x20, x0
  42feb4:	ldrb	w4, [x1, #1]
  42feb8:	mov	w6, #0x204                 	// #516
  42febc:	ldrb	w3, [x2], #1
  42fec0:	sub	w3, w3, #0x71
  42fec4:	ldrh	w0, [x5, w4, sxtw #1]
  42fec8:	tst	w6, w0
  42fecc:	b.eq	42ff2c <nftw@plt+0x2d3ac>  // b.none
  42fed0:	mov	w7, #0x43                  	// #67
  42fed4:	nop
  42fed8:	madd	w3, w3, w7, w4
  42fedc:	ldrb	w4, [x2, #1]!
  42fee0:	sub	w3, w3, #0x71
  42fee4:	ldrh	w0, [x5, w4, sxtw #1]
  42fee8:	tst	w6, w0
  42feec:	b.ne	42fed8 <nftw@plt+0x2d358>  // b.any
  42fef0:	ldr	x0, [x20, #1088]
  42fef4:	sub	x2, x2, x1
  42fef8:	mov	w4, w2
  42fefc:	and	x2, x2, #0xffffffff
  42ff00:	add	w3, w3, w4
  42ff04:	mov	w4, #0x1                   	// #1
  42ff08:	bl	43f578 <nftw@plt+0x3c9f8>
  42ff0c:	mov	x19, x0
  42ff10:	ldrh	w0, [x0, #18]
  42ff14:	ubfx	x1, x0, #2, #8
  42ff18:	tbnz	w0, #4, 42ff58 <nftw@plt+0x2d3d8>
  42ff1c:	mov	x0, x19
  42ff20:	ldp	x19, x20, [sp, #16]
  42ff24:	ldp	x29, x30, [sp], #32
  42ff28:	ret
  42ff2c:	ldr	x0, [x20, #1088]
  42ff30:	mov	x2, #0x1                   	// #1
  42ff34:	mov	w4, w2
  42ff38:	add	w3, w3, w4
  42ff3c:	mov	w4, #0x1                   	// #1
  42ff40:	bl	43f578 <nftw@plt+0x3c9f8>
  42ff44:	mov	x19, x0
  42ff48:	ldrh	w0, [x0, #18]
  42ff4c:	ubfx	x1, x0, #2, #8
  42ff50:	tbz	w0, #4, 42ff1c <nftw@plt+0x2d39c>
  42ff54:	nop
  42ff58:	ldrb	w0, [x20, #18]
  42ff5c:	cbnz	w0, 42ff1c <nftw@plt+0x2d39c>
  42ff60:	tbz	w1, #1, 42ff6c <nftw@plt+0x2d3ec>
  42ff64:	ldrb	w0, [x20, #23]
  42ff68:	cbz	w0, 430008 <nftw@plt+0x2d488>
  42ff6c:	ldr	x0, [x20, #1272]
  42ff70:	cmp	x19, x0
  42ff74:	b.eq	42ffa8 <nftw@plt+0x2d428>  // b.none
  42ff78:	ldr	x0, [x20, #1280]
  42ff7c:	cmp	x19, x0
  42ff80:	b.eq	42ffd0 <nftw@plt+0x2d450>  // b.none
  42ff84:	ldrh	w0, [x19, #18]
  42ff88:	tbz	w0, #9, 42ff1c <nftw@plt+0x2d39c>
  42ff8c:	ldr	x3, [x19]
  42ff90:	mov	x0, x20
  42ff94:	adrp	x2, 47c000 <_obstack_memory_used@@Base+0x1abb8>
  42ff98:	mov	w1, #0xf                   	// #15
  42ff9c:	add	x2, x2, #0xb58
  42ffa0:	bl	427298 <nftw@plt+0x24718>
  42ffa4:	b	42ff1c <nftw@plt+0x2d39c>
  42ffa8:	ldrb	w0, [x20, #22]
  42ffac:	cbnz	w0, 42ff78 <nftw@plt+0x2d3f8>
  42ffb0:	ldrb	w0, [x20, #1120]
  42ffb4:	cbz	w0, 430044 <nftw@plt+0x2d4c4>
  42ffb8:	mov	x0, x20
  42ffbc:	adrp	x2, 47c000 <_obstack_memory_used@@Base+0x1abb8>
  42ffc0:	mov	w1, #0x2                   	// #2
  42ffc4:	add	x2, x2, #0xa58
  42ffc8:	bl	427178 <nftw@plt+0x245f8>
  42ffcc:	b	42ff78 <nftw@plt+0x2d3f8>
  42ffd0:	ldrb	w0, [x20, #1154]
  42ffd4:	cbz	w0, 430024 <nftw@plt+0x2d4a4>
  42ffd8:	ldrb	w0, [x20, #1167]
  42ffdc:	cbnz	w0, 430024 <nftw@plt+0x2d4a4>
  42ffe0:	ldr	x0, [x20]
  42ffe4:	cbz	x0, 42fff0 <nftw@plt+0x2d470>
  42ffe8:	ldrb	w0, [x0, #106]
  42ffec:	cbnz	w0, 42ff84 <nftw@plt+0x2d404>
  42fff0:	mov	x0, x20
  42fff4:	adrp	x2, 47c000 <_obstack_memory_used@@Base+0x1abb8>
  42fff8:	mov	w1, #0x2                   	// #2
  42fffc:	add	x2, x2, #0xae8
  430000:	bl	427178 <nftw@plt+0x245f8>
  430004:	b	42ff84 <nftw@plt+0x2d404>
  430008:	ldr	x3, [x19]
  43000c:	mov	x0, x20
  430010:	adrp	x2, 47c000 <_obstack_memory_used@@Base+0x1abb8>
  430014:	mov	w1, #0x3                   	// #3
  430018:	add	x2, x2, #0xa38
  43001c:	bl	427178 <nftw@plt+0x245f8>
  430020:	b	42ff6c <nftw@plt+0x2d3ec>
  430024:	ldrb	w0, [x20, #22]
  430028:	cbnz	w0, 42ff84 <nftw@plt+0x2d404>
  43002c:	mov	x0, x20
  430030:	adrp	x2, 47c000 <_obstack_memory_used@@Base+0x1abb8>
  430034:	mov	w1, #0x2                   	// #2
  430038:	add	x2, x2, #0xb10
  43003c:	bl	427178 <nftw@plt+0x245f8>
  430040:	b	42ff84 <nftw@plt+0x2d404>
  430044:	mov	x0, x20
  430048:	adrp	x2, 47c000 <_obstack_memory_used@@Base+0x1abb8>
  43004c:	mov	w1, #0x2                   	// #2
  430050:	add	x2, x2, #0xaa0
  430054:	bl	427178 <nftw@plt+0x245f8>
  430058:	b	42ff78 <nftw@plt+0x2d3f8>
  43005c:	nop
  430060:	add	x0, x0, #0x568
  430064:	ret
  430068:	stp	x29, x30, [sp, #-32]!
  43006c:	mov	x29, sp
  430070:	stp	x19, x20, [sp, #16]
  430074:	mov	w20, #0x18                  	// #24
  430078:	mov	x19, x0
  43007c:	umull	x20, w1, w20
  430080:	mov	x0, x20
  430084:	bl	461560 <_obstack_memory_used@@Base+0x118>
  430088:	add	x1, x0, x20
  43008c:	str	xzr, [x19]
  430090:	stp	x0, x1, [x19, #16]
  430094:	ldp	x19, x20, [sp, #16]
  430098:	ldp	x29, x30, [sp], #32
  43009c:	ret
  4300a0:	ldr	w1, [x0, #48]
  4300a4:	cmp	w1, #0x1
  4300a8:	b.eq	4300c4 <nftw@plt+0x2d544>  // b.none
  4300ac:	tst	w1, #0xfffffffd
  4300b0:	b.ne	4300e0 <nftw@plt+0x2d560>  // b.any
  4300b4:	ldp	x1, x0, [x0, #16]
  4300b8:	sub	x0, x0, x1
  4300bc:	ubfx	x0, x0, #3, #32
  4300c0:	ret
  4300c4:	ldp	x2, x0, [x0, #16]
  4300c8:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  4300cc:	movk	x1, #0xaaab
  4300d0:	sub	x0, x0, x2
  4300d4:	asr	x0, x0, #3
  4300d8:	mul	w0, w0, w1
  4300dc:	ret
  4300e0:	stp	x29, x30, [sp, #-16]!
  4300e4:	adrp	x2, 47c000 <_obstack_memory_used@@Base+0x1abb8>
  4300e8:	adrp	x0, 47c000 <_obstack_memory_used@@Base+0x1abb8>
  4300ec:	mov	x29, sp
  4300f0:	add	x2, x2, #0xbd8
  4300f4:	add	x0, x0, #0x9d0
  4300f8:	mov	w1, #0x99f                 	// #2463
  4300fc:	bl	402bf0 <nftw@plt+0x70>
  430100:	stp	x29, x30, [sp, #-80]!
  430104:	mov	x29, sp
  430108:	stp	x23, x24, [sp, #48]
  43010c:	ldr	w24, [x0, #496]
  430110:	ldr	x23, [x0, #488]
  430114:	stp	x19, x20, [sp, #16]
  430118:	mov	x19, x0
  43011c:	stp	x21, x22, [sp, #32]
  430120:	ldr	x20, [x23, #24]
  430124:	ldr	x22, [x0, #448]
  430128:	sub	x20, x20, x22
  43012c:	cbz	x24, 430188 <nftw@plt+0x2d608>
  430130:	asr	x21, x20, #3
  430134:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  430138:	movk	x1, #0xaaab
  43013c:	mov	x0, x22
  430140:	mul	x21, x21, x1
  430144:	cmp	x21, x24
  430148:	b.le	4301b8 <nftw@plt+0x2d638>
  43014c:	cmp	x20, #0x18
  430150:	b.gt	430190 <nftw@plt+0x2d610>
  430154:	cbnz	x20, 430164 <nftw@plt+0x2d5e4>
  430158:	ldr	x1, [x23, #24]
  43015c:	cmp	x1, x0
  430160:	b.eq	4301fc <nftw@plt+0x2d67c>  // b.none
  430164:	add	x1, x0, #0x18
  430168:	ldp	x23, x24, [sp, #48]
  43016c:	str	x1, [x19, #448]
  430170:	ldur	w1, [x22, #-24]
  430174:	ldp	x19, x20, [sp, #16]
  430178:	ldp	x21, x22, [sp, #32]
  43017c:	str	w1, [x0]
  430180:	ldp	x29, x30, [sp], #80
  430184:	ret
  430188:	mov	x0, x22
  43018c:	b	430154 <nftw@plt+0x2d5d4>
  430190:	sub	x21, x21, #0x1
  430194:	mov	x1, x0
  430198:	cmp	x21, x24
  43019c:	add	x0, x0, #0x18
  4301a0:	csel	x21, x21, x24, le
  4301a4:	add	x21, x21, x21, lsl #1
  4301a8:	lsl	x2, x21, #3
  4301ac:	bl	4024a0 <memmove@plt>
  4301b0:	ldr	x0, [x19, #448]
  4301b4:	b	430164 <nftw@plt+0x2d5e4>
  4301b8:	stp	x25, x26, [sp, #64]
  4301bc:	ldr	x25, [x23]
  4301c0:	cbz	x25, 43022c <nftw@plt+0x2d6ac>
  4301c4:	cmp	x21, x24
  4301c8:	ldr	x1, [x25, #16]
  4301cc:	b.lt	430210 <nftw@plt+0x2d690>  // b.tstop
  4301d0:	ldr	x23, [x19, #488]
  4301d4:	cmp	x20, #0x18
  4301d8:	ldp	x25, x26, [sp, #64]
  4301dc:	ldr	x4, [x23, #24]
  4301e0:	ldr	x0, [x19, #448]
  4301e4:	ldp	x2, x3, [x4, #-24]
  4301e8:	stp	x2, x3, [x1]
  4301ec:	ldur	x2, [x4, #-8]
  4301f0:	str	x2, [x1, #16]
  4301f4:	b.le	430154 <nftw@plt+0x2d5d4>
  4301f8:	b	430190 <nftw@plt+0x2d610>
  4301fc:	ldr	x1, [x23]
  430200:	cbz	x1, 430264 <nftw@plt+0x2d6e4>
  430204:	ldr	x0, [x1, #16]
  430208:	str	x1, [x19, #488]
  43020c:	b	430164 <nftw@plt+0x2d5e4>
  430210:	sub	x2, x24, x21
  430214:	add	x0, x1, #0x18
  430218:	add	x2, x2, x2, lsl #1
  43021c:	lsl	x2, x2, #3
  430220:	bl	4024a0 <memmove@plt>
  430224:	ldr	x1, [x25, #16]
  430228:	b	4301d0 <nftw@plt+0x2d650>
  43022c:	mov	x0, #0x20                  	// #32
  430230:	bl	461560 <_obstack_memory_used@@Base+0x118>
  430234:	mov	x26, x0
  430238:	str	x26, [x23]
  43023c:	mov	x0, #0x1770                	// #6000
  430240:	str	x23, [x26, #8]
  430244:	bl	461560 <_obstack_memory_used@@Base+0x118>
  430248:	str	xzr, [x26]
  43024c:	mov	x2, #0x1770                	// #6000
  430250:	str	x0, [x26, #16]
  430254:	add	x0, x0, x2
  430258:	ldr	x25, [x23]
  43025c:	str	x0, [x26, #24]
  430260:	b	4301c4 <nftw@plt+0x2d644>
  430264:	mov	x0, #0x20                  	// #32
  430268:	bl	461560 <_obstack_memory_used@@Base+0x118>
  43026c:	mov	x20, x0
  430270:	str	x20, [x23]
  430274:	mov	x0, #0x1770                	// #6000
  430278:	str	x23, [x20, #8]
  43027c:	bl	461560 <_obstack_memory_used@@Base+0x118>
  430280:	str	xzr, [x20]
  430284:	mov	x1, #0x1770                	// #6000
  430288:	str	x0, [x20, #16]
  43028c:	add	x0, x0, x1
  430290:	ldr	x1, [x23]
  430294:	str	x0, [x20, #24]
  430298:	b	430204 <nftw@plt+0x2d684>
  43029c:	nop
  4302a0:	stp	x29, x30, [sp, #-32]!
  4302a4:	mov	x29, sp
  4302a8:	stp	x19, x20, [sp, #16]
  4302ac:	mov	x20, x0
  4302b0:	ldrb	w0, [x0, #16]
  4302b4:	cbnz	w0, 430334 <nftw@plt+0x2d7b4>
  4302b8:	ldr	x1, [x20]
  4302bc:	b	4302dc <nftw@plt+0x2d75c>
  4302c0:	ubfx	x19, x2, #2, #1
  4302c4:	mov	x0, x20
  4302c8:	bl	425cc0 <nftw@plt+0x23140>
  4302cc:	ldr	x1, [x20]
  4302d0:	cmp	x1, #0x0
  4302d4:	csinc	w2, w19, wzr, ne  // ne = any
  4302d8:	cbnz	w2, 430334 <nftw@plt+0x2d7b4>
  4302dc:	ldrb	w19, [x1, #104]
  4302e0:	cbz	w19, 430348 <nftw@plt+0x2d7c8>
  4302e4:	ldr	x0, [x1, #16]
  4302e8:	ldr	x3, [x1, #32]
  4302ec:	cmp	x0, x3
  4302f0:	b.cc	43035c <nftw@plt+0x2d7dc>  // b.lo, b.ul, b.last
  4302f4:	ldrb	w2, [x20, #25]
  4302f8:	cbnz	w2, 430334 <nftw@plt+0x2d7b4>
  4302fc:	ldr	x2, [x1, #24]
  430300:	cmp	x2, x3
  430304:	ldrb	w2, [x1, #105]
  430308:	ccmp	x0, x3, #0x0, ne  // ne = any
  43030c:	b.ls	4302c0 <nftw@plt+0x2d740>  // b.plast
  430310:	tbnz	w2, #1, 4302c0 <nftw@plt+0x2d740>
  430314:	str	x3, [x1, #16]
  430318:	ubfx	x19, x2, #2, #1
  43031c:	mov	x0, x20
  430320:	bl	425cc0 <nftw@plt+0x23140>
  430324:	ldr	x1, [x20]
  430328:	cmp	x1, #0x0
  43032c:	csinc	w2, w19, wzr, ne  // ne = any
  430330:	cbz	w2, 4302dc <nftw@plt+0x2d75c>
  430334:	mov	w19, #0x0                   	// #0
  430338:	mov	w0, w19
  43033c:	ldp	x19, x20, [sp, #16]
  430340:	ldp	x29, x30, [sp], #32
  430344:	ret
  430348:	mov	w19, #0x1                   	// #1
  43034c:	mov	w0, w19
  430350:	ldp	x19, x20, [sp, #16]
  430354:	ldp	x29, x30, [sp], #32
  430358:	ret
  43035c:	mov	x0, x20
  430360:	bl	42f460 <nftw@plt+0x2c8e0>
  430364:	mov	w0, w19
  430368:	ldp	x19, x20, [sp, #16]
  43036c:	ldp	x29, x30, [sp], #32
  430370:	ret
  430374:	nop
  430378:	mov	x1, x0
  43037c:	ldrb	w0, [x0, #4]
  430380:	adrp	x2, 47d000 <_obstack_memory_used@@Base+0x1bbb8>
  430384:	add	x2, x2, #0x460
  430388:	lsl	x0, x0, #4
  43038c:	ldr	w0, [x2, x0]
  430390:	cmp	w0, #0x1
  430394:	b.eq	4303ac <nftw@plt+0x2d82c>  // b.none
  430398:	cmp	w0, #0x2
  43039c:	mov	w0, #0x6                   	// #6
  4303a0:	b.ne	4303a8 <nftw@plt+0x2d828>  // b.any
  4303a4:	ldr	w0, [x1, #8]
  4303a8:	ret
  4303ac:	ldr	x0, [x1, #8]
  4303b0:	ldr	w0, [x0, #8]
  4303b4:	add	w0, w0, w0, lsl #2
  4303b8:	lsl	w0, w0, #1
  4303bc:	ret
  4303c0:	ldr	w2, [x1, #8]
  4303c4:	ldr	x11, [x1]
  4303c8:	cbz	w2, 4304e8 <nftw@plt+0x2d968>
  4303cc:	adrp	x8, 47c000 <_obstack_memory_used@@Base+0x1abb8>
  4303d0:	mov	x7, #0x0                   	// #0
  4303d4:	add	x8, x8, #0xc10
  4303d8:	mov	w12, #0x555c                	// #21852
  4303dc:	mov	w13, #0x7f                  	// #127
  4303e0:	b	4303f8 <nftw@plt+0x2d878>
  4303e4:	strb	w5, [x0], #1
  4303e8:	add	x7, x7, #0x1
  4303ec:	ldr	w2, [x1, #8]
  4303f0:	cmp	x2, x7
  4303f4:	b.ls	4304e8 <nftw@plt+0x2d968>  // b.plast
  4303f8:	ldrb	w5, [x11, x7]
  4303fc:	add	x6, x11, x7
  430400:	tbz	w5, #7, 4303e4 <nftw@plt+0x2d864>
  430404:	mov	w4, w5
  430408:	tbz	w5, #7, 4304ec <nftw@plt+0x2d96c>
  43040c:	mov	w3, #0x0                   	// #0
  430410:	mov	w9, w3
  430414:	lsl	w4, w4, #1
  430418:	add	w3, w3, #0x1
  43041c:	tbnz	w4, #7, 430410 <nftw@plt+0x2d890>
  430420:	asr	w2, w13, w3
  430424:	and	w2, w2, w5
  430428:	cmp	w3, #0x1
  43042c:	sxtw	x2, w2
  430430:	b.eq	4304f8 <nftw@plt+0x2d978>  // b.none
  430434:	add	x6, x6, #0x1
  430438:	mov	x4, #0x0                   	// #0
  43043c:	nop
  430440:	ldrb	w5, [x6, x4]
  430444:	and	w10, w5, #0xffffffc0
  430448:	bfi	x5, x2, #6, #58
  43044c:	cmp	w10, #0x80
  430450:	mov	x2, x5
  430454:	b.ne	430500 <nftw@plt+0x2d980>  // b.any
  430458:	add	x4, x4, #0x1
  43045c:	cmp	w9, w4
  430460:	b.gt	430440 <nftw@plt+0x2d8c0>
  430464:	sxtw	x3, w3
  430468:	lsr	w14, w2, #28
  43046c:	ubfx	x10, x2, #24, #4
  430470:	ubfx	x9, x2, #20, #4
  430474:	ubfx	x6, x2, #16, #4
  430478:	ubfx	x5, x2, #12, #4
  43047c:	ubfx	x4, x2, #8, #4
  430480:	ubfx	x15, x2, #4, #4
  430484:	and	x2, x2, #0xf
  430488:	sub	x7, x7, #0x1
  43048c:	ldrb	w14, [x8, x14]
  430490:	add	x7, x7, x3
  430494:	ldrb	w10, [x8, x10]
  430498:	ldrb	w2, [x8, x2]
  43049c:	add	x7, x7, #0x1
  4304a0:	ldrb	w9, [x8, x9]
  4304a4:	add	x0, x0, #0xa
  4304a8:	ldrb	w6, [x8, x6]
  4304ac:	ldrb	w5, [x8, x5]
  4304b0:	ldrb	w4, [x8, x4]
  4304b4:	ldrb	w3, [x8, x15]
  4304b8:	sturh	w12, [x0, #-10]
  4304bc:	sturb	w14, [x0, #-8]
  4304c0:	sturb	w10, [x0, #-7]
  4304c4:	sturb	w9, [x0, #-6]
  4304c8:	sturb	w6, [x0, #-5]
  4304cc:	sturb	w5, [x0, #-4]
  4304d0:	sturb	w4, [x0, #-3]
  4304d4:	sturb	w3, [x0, #-2]
  4304d8:	sturb	w2, [x0, #-1]
  4304dc:	ldr	w2, [x1, #8]
  4304e0:	cmp	x2, x7
  4304e4:	b.hi	4303f8 <nftw@plt+0x2d878>  // b.pmore
  4304e8:	ret
  4304ec:	and	x2, x5, #0xff
  4304f0:	mov	x3, #0x0                   	// #0
  4304f4:	b	430468 <nftw@plt+0x2d8e8>
  4304f8:	mov	x3, #0x1                   	// #1
  4304fc:	b	430468 <nftw@plt+0x2d8e8>
  430500:	stp	x29, x30, [sp, #-16]!
  430504:	adrp	x2, 47c000 <_obstack_memory_used@@Base+0x1abb8>
  430508:	adrp	x0, 47c000 <_obstack_memory_used@@Base+0x1abb8>
  43050c:	mov	x29, sp
  430510:	add	x2, x2, #0xc00
  430514:	add	x0, x0, #0x9d0
  430518:	mov	w1, #0xc89                 	// #3209
  43051c:	bl	402bf0 <nftw@plt+0x70>
  430520:	stp	x29, x30, [sp, #-64]!
  430524:	mov	x29, sp
  430528:	stp	x21, x22, [sp, #32]
  43052c:	mov	x22, x0
  430530:	ldrb	w0, [x1, #4]
  430534:	stp	x19, x20, [sp, #16]
  430538:	adrp	x20, 47d000 <_obstack_memory_used@@Base+0x1bbb8>
  43053c:	add	x20, x20, #0x460
  430540:	lsl	x0, x0, #4
  430544:	str	x23, [sp, #48]
  430548:	mov	x19, x1
  43054c:	mov	x23, x2
  430550:	ldr	w0, [x20, x0]
  430554:	cmp	w0, #0x1
  430558:	b.eq	430658 <nftw@plt+0x2dad8>  // b.none
  43055c:	cmp	w0, #0x2
  430560:	mov	x0, #0x6                   	// #6
  430564:	b.ne	43056c <nftw@plt+0x2d9ec>  // b.any
  430568:	ldr	w0, [x1, #8]
  43056c:	bl	461560 <_obstack_memory_used@@Base+0x118>
  430570:	mov	x21, x0
  430574:	ldrb	w2, [x19, #4]
  430578:	sbfiz	x1, x2, #4, #32
  43057c:	add	x3, x20, x1
  430580:	ldr	w1, [x20, x1]
  430584:	cmp	w1, #0x2
  430588:	b.eq	430688 <nftw@plt+0x2db08>  // b.none
  43058c:	b.hi	4305e8 <nftw@plt+0x2da68>  // b.pmore
  430590:	cbz	w1, 4306a0 <nftw@plt+0x2db20>
  430594:	ldr	x1, [x19, #8]
  430598:	mov	x0, x21
  43059c:	bl	4303c0 <nftw@plt+0x2d840>
  4305a0:	sub	w5, w0, w21
  4305a4:	ldr	w0, [x23]
  4305a8:	ldr	w2, [x19]
  4305ac:	cmp	w0, #0x1
  4305b0:	mov	x0, x22
  4305b4:	b.eq	430620 <nftw@plt+0x2daa0>  // b.none
  4305b8:	mov	x6, x21
  4305bc:	mov	w3, #0x0                   	// #0
  4305c0:	mov	w1, #0x10                  	// #16
  4305c4:	adrp	x4, 47c000 <_obstack_memory_used@@Base+0x1abb8>
  4305c8:	add	x4, x4, #0xc58
  4305cc:	bl	427670 <nftw@plt+0x24af0>
  4305d0:	mov	x0, x21
  4305d4:	ldp	x19, x20, [sp, #16]
  4305d8:	ldp	x21, x22, [sp, #32]
  4305dc:	ldr	x23, [sp, #48]
  4305e0:	ldp	x29, x30, [sp], #64
  4305e4:	b	402910 <free@plt>
  4305e8:	cmp	w1, #0x3
  4305ec:	b.ne	430650 <nftw@plt+0x2dad0>  // b.any
  4305f0:	ldr	x3, [x3, #8]
  4305f4:	mov	x0, x22
  4305f8:	adrp	x2, 47c000 <_obstack_memory_used@@Base+0x1abb8>
  4305fc:	mov	w1, #0x4                   	// #4
  430600:	add	x2, x2, #0xc28
  430604:	bl	427178 <nftw@plt+0x245f8>
  430608:	ldr	w0, [x23]
  43060c:	mov	w5, #0x0                   	// #0
  430610:	ldr	w2, [x19]
  430614:	cmp	w0, #0x1
  430618:	mov	x0, x22
  43061c:	b.ne	4305b8 <nftw@plt+0x2da38>  // b.any
  430620:	mov	x6, x21
  430624:	mov	w3, #0x0                   	// #0
  430628:	mov	w1, #0x10                  	// #16
  43062c:	adrp	x4, 47c000 <_obstack_memory_used@@Base+0x1abb8>
  430630:	add	x4, x4, #0xc40
  430634:	bl	427670 <nftw@plt+0x24af0>
  430638:	mov	x0, x21
  43063c:	ldp	x19, x20, [sp, #16]
  430640:	ldp	x21, x22, [sp, #32]
  430644:	ldr	x23, [sp, #48]
  430648:	ldp	x29, x30, [sp], #64
  43064c:	b	402910 <free@plt>
  430650:	mov	w5, #0x0                   	// #0
  430654:	b	4305a4 <nftw@plt+0x2da24>
  430658:	ldr	x0, [x1, #8]
  43065c:	ldr	w0, [x0, #8]
  430660:	add	w0, w0, w0, lsl #2
  430664:	lsl	w0, w0, #1
  430668:	bl	461560 <_obstack_memory_used@@Base+0x118>
  43066c:	ldrb	w2, [x19, #4]
  430670:	mov	x21, x0
  430674:	sbfiz	x1, x2, #4, #32
  430678:	add	x3, x20, x1
  43067c:	ldr	w1, [x20, x1]
  430680:	cmp	w1, #0x2
  430684:	b.ne	43058c <nftw@plt+0x2da0c>  // b.any
  430688:	ldr	x1, [x19, #16]
  43068c:	ldr	w20, [x19, #8]
  430690:	mov	w2, w20
  430694:	bl	402490 <memcpy@plt>
  430698:	mov	w5, w20
  43069c:	b	4305a4 <nftw@plt+0x2da24>
  4306a0:	ldrh	w0, [x19, #6]
  4306a4:	tbz	w0, #1, 4306d4 <nftw@plt+0x2db54>
  4306a8:	add	x20, x20, #0x540
  4306ac:	sub	w2, w2, #0x25
  4306b0:	ldr	x1, [x20, w2, sxtw #3]
  4306b4:	ldrb	w0, [x1], #1
  4306b8:	cbz	w0, 430650 <nftw@plt+0x2dad0>
  4306bc:	mov	x5, x21
  4306c0:	strb	w0, [x5], #1
  4306c4:	ldrb	w0, [x1], #1
  4306c8:	cbnz	w0, 4306c0 <nftw@plt+0x2db40>
  4306cc:	sub	w5, w5, w21
  4306d0:	b	4305a4 <nftw@plt+0x2da24>
  4306d4:	tbnz	w0, #4, 430594 <nftw@plt+0x2da14>
  4306d8:	ldr	x1, [x3, #8]
  4306dc:	b	4306b4 <nftw@plt+0x2db34>
  4306e0:	stp	x29, x30, [sp, #-32]!
  4306e4:	adrp	x4, 47d000 <_obstack_memory_used@@Base+0x1bbb8>
  4306e8:	add	x4, x4, #0x460
  4306ec:	mov	x29, sp
  4306f0:	stp	x19, x20, [sp, #16]
  4306f4:	mov	x19, x2
  4306f8:	ldrb	w2, [x1, #4]
  4306fc:	mov	x20, x1
  430700:	sbfiz	x1, x2, #4, #32
  430704:	add	x5, x4, x1
  430708:	ldr	w1, [x4, x1]
  43070c:	cmp	w1, #0x2
  430710:	b.eq	4307b0 <nftw@plt+0x2dc30>  // b.none
  430714:	b.hi	430750 <nftw@plt+0x2dbd0>  // b.pmore
  430718:	and	w3, w3, #0xff
  43071c:	cbz	w1, 43077c <nftw@plt+0x2dbfc>
  430720:	cbz	w3, 4307d4 <nftw@plt+0x2dc54>
  430724:	ldr	x1, [x20, #16]
  430728:	mov	x0, x19
  43072c:	ldr	w2, [x1, #8]
  430730:	ldr	x1, [x1]
  430734:	bl	402490 <memcpy@plt>
  430738:	ldr	x0, [x20, #16]
  43073c:	ldr	w0, [x0, #8]
  430740:	add	x0, x19, x0
  430744:	ldp	x19, x20, [sp, #16]
  430748:	ldp	x29, x30, [sp], #32
  43074c:	ret
  430750:	cmp	w1, #0x3
  430754:	b.ne	43076c <nftw@plt+0x2dbec>  // b.any
  430758:	ldr	x3, [x5, #8]
  43075c:	adrp	x2, 47c000 <_obstack_memory_used@@Base+0x1abb8>
  430760:	mov	w1, #0x4                   	// #4
  430764:	add	x2, x2, #0xc28
  430768:	bl	427178 <nftw@plt+0x245f8>
  43076c:	mov	x0, x19
  430770:	ldp	x19, x20, [sp, #16]
  430774:	ldp	x29, x30, [sp], #32
  430778:	ret
  43077c:	ldrh	w0, [x20, #6]
  430780:	tbnz	w0, #1, 4307e8 <nftw@plt+0x2dc68>
  430784:	tbnz	w0, #4, 430720 <nftw@plt+0x2dba0>
  430788:	ldr	x2, [x5, #8]
  43078c:	mov	x0, x19
  430790:	ldrb	w1, [x2], #1
  430794:	cbz	w1, 430770 <nftw@plt+0x2dbf0>
  430798:	strb	w1, [x0], #1
  43079c:	ldrb	w1, [x2], #1
  4307a0:	cbnz	w1, 430798 <nftw@plt+0x2dc18>
  4307a4:	ldp	x19, x20, [sp, #16]
  4307a8:	ldp	x29, x30, [sp], #32
  4307ac:	ret
  4307b0:	ldr	w2, [x20, #8]
  4307b4:	mov	x0, x19
  4307b8:	ldr	x1, [x20, #16]
  4307bc:	bl	402490 <memcpy@plt>
  4307c0:	ldr	w0, [x20, #8]
  4307c4:	add	x0, x19, x0
  4307c8:	ldp	x19, x20, [sp, #16]
  4307cc:	ldp	x29, x30, [sp], #32
  4307d0:	ret
  4307d4:	mov	x0, x19
  4307d8:	ldr	x1, [x20, #8]
  4307dc:	ldp	x19, x20, [sp, #16]
  4307e0:	ldp	x29, x30, [sp], #32
  4307e4:	b	4303c0 <nftw@plt+0x2d840>
  4307e8:	add	x4, x4, #0x540
  4307ec:	sub	w2, w2, #0x25
  4307f0:	ldr	x2, [x4, w2, sxtw #3]
  4307f4:	b	43078c <nftw@plt+0x2dc0c>
  4307f8:	stp	x29, x30, [sp, #-64]!
  4307fc:	mov	x29, sp
  430800:	stp	x23, x24, [sp, #48]
  430804:	mov	x23, x0
  430808:	ldrb	w0, [x1, #4]
  43080c:	adrp	x24, 47d000 <_obstack_memory_used@@Base+0x1bbb8>
  430810:	add	x24, x24, #0x460
  430814:	stp	x21, x22, [sp, #32]
  430818:	mov	x22, x1
  43081c:	sbfiz	x1, x0, #4, #32
  430820:	stp	x19, x20, [sp, #16]
  430824:	mov	x5, x0
  430828:	ldr	w6, [x24, x1]
  43082c:	cmp	w6, #0x1
  430830:	b.eq	4309d0 <nftw@plt+0x2de50>  // b.none
  430834:	cmp	w6, #0x2
  430838:	ldr	x2, [x23, #64]
  43083c:	b.ne	430894 <nftw@plt+0x2dd14>  // b.any
  430840:	ldp	x19, x1, [x2, #16]
  430844:	ldr	w20, [x22, #8]
  430848:	add	w20, w20, #0x1
  43084c:	sub	x1, x1, x19
  430850:	cmp	x1, x20
  430854:	b.cc	4308e4 <nftw@plt+0x2dd64>  // b.lo, b.ul, b.last
  430858:	add	x20, x19, x20
  43085c:	str	x20, [x2, #16]
  430860:	ldr	w2, [x22, #8]
  430864:	mov	x0, x19
  430868:	ldr	x1, [x22, #16]
  43086c:	bl	402490 <memcpy@plt>
  430870:	ldr	w0, [x22, #8]
  430874:	add	x0, x19, x0
  430878:	strb	wzr, [x0]
  43087c:	mov	x0, x19
  430880:	ldp	x19, x20, [sp, #16]
  430884:	ldp	x21, x22, [sp, #32]
  430888:	ldp	x23, x24, [sp, #48]
  43088c:	ldp	x29, x30, [sp], #64
  430890:	ret
  430894:	ldp	x19, x1, [x2, #16]
  430898:	sub	x1, x1, x19
  43089c:	cmp	x1, #0x6
  4308a0:	b.ls	4308e0 <nftw@plt+0x2dd60>  // b.plast
  4308a4:	add	x1, x19, #0x7
  4308a8:	str	x1, [x2, #16]
  4308ac:	cmp	w6, #0x2
  4308b0:	b.hi	43098c <nftw@plt+0x2de0c>  // b.pmore
  4308b4:	cbz	w6, 430a04 <nftw@plt+0x2de84>
  4308b8:	ldr	x1, [x22, #8]
  4308bc:	mov	x0, x19
  4308c0:	bl	4303c0 <nftw@plt+0x2d840>
  4308c4:	strb	wzr, [x0]
  4308c8:	mov	x0, x19
  4308cc:	ldp	x19, x20, [sp, #16]
  4308d0:	ldp	x21, x22, [sp, #32]
  4308d4:	ldp	x23, x24, [sp, #48]
  4308d8:	ldp	x29, x30, [sp], #64
  4308dc:	ret
  4308e0:	mov	x20, #0x7                   	// #7
  4308e4:	ldr	x2, [x23, #72]
  4308e8:	add	x1, x23, #0x48
  4308ec:	cbz	x2, 430928 <nftw@plt+0x2dda8>
  4308f0:	add	x4, x20, x20, lsl #1
  4308f4:	mov	x3, #0x1f40                	// #8000
  4308f8:	add	x4, x3, x4, lsr #1
  4308fc:	nop
  430900:	ldr	x19, [x2, #8]
  430904:	ldr	x3, [x2, #24]
  430908:	sub	x3, x3, x19
  43090c:	cmp	x20, x3
  430910:	b.hi	43091c <nftw@plt+0x2dd9c>  // b.pmore
  430914:	cmp	x3, x4
  430918:	b.ls	430a50 <nftw@plt+0x2ded0>  // b.plast
  43091c:	mov	x1, x2
  430920:	ldr	x2, [x2]
  430924:	cbnz	x2, 430900 <nftw@plt+0x2dd80>
  430928:	mov	x21, #0x1f40                	// #8000
  43092c:	cmp	x20, x21
  430930:	csel	x21, x20, x21, cs  // cs = hs, nlast
  430934:	add	x21, x21, #0x7
  430938:	and	x21, x21, #0xfffffffffffffff8
  43093c:	add	x0, x21, #0x20
  430940:	bl	461560 <_obstack_memory_used@@Base+0x118>
  430944:	ldrb	w5, [x22, #4]
  430948:	add	x2, x0, x21
  43094c:	mov	x19, x0
  430950:	sbfiz	x1, x5, #4, #32
  430954:	sxtw	x0, w5
  430958:	stp	x19, x19, [x2, #8]
  43095c:	ldr	w6, [x24, x1]
  430960:	str	x2, [x2, #24]
  430964:	str	xzr, [x19, x21]
  430968:	ldr	x1, [x23, #64]
  43096c:	str	x1, [x2]
  430970:	str	x2, [x23, #64]
  430974:	add	x20, x19, x20
  430978:	str	x20, [x2, #16]
  43097c:	cmp	w6, #0x2
  430980:	b.eq	430860 <nftw@plt+0x2dce0>  // b.none
  430984:	cmp	w6, #0x2
  430988:	b.ls	4308b4 <nftw@plt+0x2dd34>  // b.plast
  43098c:	cmp	w6, #0x3
  430990:	b.ne	4309b0 <nftw@plt+0x2de30>  // b.any
  430994:	add	x24, x24, x0, lsl #4
  430998:	adrp	x2, 47c000 <_obstack_memory_used@@Base+0x1abb8>
  43099c:	mov	x0, x23
  4309a0:	add	x2, x2, #0xc28
  4309a4:	mov	w1, #0x4                   	// #4
  4309a8:	ldr	x3, [x24, #8]
  4309ac:	bl	427178 <nftw@plt+0x245f8>
  4309b0:	mov	x0, x19
  4309b4:	strb	wzr, [x0]
  4309b8:	mov	x0, x19
  4309bc:	ldp	x19, x20, [sp, #16]
  4309c0:	ldp	x21, x22, [sp, #32]
  4309c4:	ldp	x23, x24, [sp, #48]
  4309c8:	ldp	x29, x30, [sp], #64
  4309cc:	ret
  4309d0:	ldr	x1, [x22, #8]
  4309d4:	ldr	x3, [x23, #64]
  4309d8:	ldr	w20, [x1, #8]
  4309dc:	ldp	x19, x2, [x3, #16]
  4309e0:	add	w20, w20, w20, lsl #2
  4309e4:	lsl	w20, w20, #1
  4309e8:	add	w20, w20, #0x1
  4309ec:	sub	x2, x2, x19
  4309f0:	cmp	x20, x2
  4309f4:	b.hi	4308e4 <nftw@plt+0x2dd64>  // b.pmore
  4309f8:	add	x20, x19, x20
  4309fc:	str	x20, [x3, #16]
  430a00:	b	4308bc <nftw@plt+0x2dd3c>
  430a04:	ldrh	w1, [x22, #6]
  430a08:	tbz	w1, #1, 430a64 <nftw@plt+0x2dee4>
  430a0c:	add	x24, x24, #0x540
  430a10:	sub	w5, w5, #0x25
  430a14:	ldr	x2, [x24, w5, sxtw #3]
  430a18:	mov	x0, x19
  430a1c:	ldrb	w1, [x2], #1
  430a20:	cbz	w1, 4308c4 <nftw@plt+0x2dd44>
  430a24:	nop
  430a28:	strb	w1, [x0], #1
  430a2c:	ldrb	w1, [x2], #1
  430a30:	cbnz	w1, 430a28 <nftw@plt+0x2dea8>
  430a34:	strb	wzr, [x0]
  430a38:	mov	x0, x19
  430a3c:	ldp	x19, x20, [sp, #16]
  430a40:	ldp	x21, x22, [sp, #32]
  430a44:	ldp	x23, x24, [sp, #48]
  430a48:	ldp	x29, x30, [sp], #64
  430a4c:	ret
  430a50:	ldr	x3, [x2]
  430a54:	str	x3, [x1]
  430a58:	str	xzr, [x2]
  430a5c:	str	x19, [x2, #16]
  430a60:	b	430968 <nftw@plt+0x2dde8>
  430a64:	tbnz	w1, #4, 4308b8 <nftw@plt+0x2dd38>
  430a68:	add	x0, x24, x0, lsl #4
  430a6c:	ldr	x2, [x0, #8]
  430a70:	b	430a18 <nftw@plt+0x2de98>
  430a74:	nop
  430a78:	tst	w1, #0x2
  430a7c:	mov	w2, w0
  430a80:	and	w1, w1, #0xff
  430a84:	b.eq	430aa0 <nftw@plt+0x2df20>  // b.none
  430a88:	adrp	x1, 47d000 <_obstack_memory_used@@Base+0x1bbb8>
  430a8c:	add	x1, x1, #0x460
  430a90:	add	x1, x1, #0x540
  430a94:	sub	w0, w0, #0x25
  430a98:	ldr	x0, [x1, w0, sxtw #3]
  430a9c:	ret
  430aa0:	tbnz	w1, #4, 430ab8 <nftw@plt+0x2df38>
  430aa4:	adrp	x0, 47d000 <_obstack_memory_used@@Base+0x1bbb8>
  430aa8:	add	x0, x0, #0x460
  430aac:	add	x0, x0, w2, sxtw #4
  430ab0:	ldr	x0, [x0, #8]
  430ab4:	ret
  430ab8:	b	4421c8 <nftw@plt+0x3f648>
  430abc:	nop
  430ac0:	stp	x29, x30, [sp, #-80]!
  430ac4:	adrp	x2, 47d000 <_obstack_memory_used@@Base+0x1bbb8>
  430ac8:	mov	x29, sp
  430acc:	stp	x21, x22, [sp, #32]
  430ad0:	mov	x22, x0
  430ad4:	add	x0, x2, #0x460
  430ad8:	stp	x19, x20, [sp, #16]
  430adc:	mov	x20, x1
  430ae0:	ldrb	w2, [x22, #4]
  430ae4:	sbfiz	x1, x2, #4, #32
  430ae8:	add	x3, x0, x1
  430aec:	ldr	w1, [x0, x1]
  430af0:	cmp	w1, #0x1
  430af4:	b.eq	430b14 <nftw@plt+0x2df94>  // b.none
  430af8:	cmp	w1, #0x2
  430afc:	b.eq	430cd4 <nftw@plt+0x2e154>  // b.none
  430b00:	cbz	w1, 430c88 <nftw@plt+0x2e108>
  430b04:	ldp	x19, x20, [sp, #16]
  430b08:	ldp	x21, x22, [sp, #32]
  430b0c:	ldp	x29, x30, [sp], #80
  430b10:	ret
  430b14:	ldr	x0, [x22, #8]
  430b18:	stp	x23, x24, [sp, #48]
  430b1c:	ldr	w1, [x0, #8]
  430b20:	ldr	x24, [x0]
  430b24:	cbz	w1, 430c74 <nftw@plt+0x2e0f4>
  430b28:	adrp	x23, 47c000 <_obstack_memory_used@@Base+0x1abb8>
  430b2c:	mov	x19, #0x0                   	// #0
  430b30:	add	x23, x23, #0xc10
  430b34:	mov	w21, #0x555c                	// #21852
  430b38:	b	430b70 <nftw@plt+0x2dff0>
  430b3c:	ldr	x1, [x0]
  430b40:	ldp	x0, x2, [x20, #40]
  430b44:	ldrb	w1, [x1, x19]
  430b48:	cmp	x0, x2
  430b4c:	b.cs	430d08 <nftw@plt+0x2e188>  // b.hs, b.nlast
  430b50:	add	x2, x0, #0x1
  430b54:	str	x2, [x20, #40]
  430b58:	strb	w1, [x0]
  430b5c:	ldr	x0, [x22, #8]
  430b60:	add	x19, x19, #0x1
  430b64:	ldr	w1, [x0, #8]
  430b68:	cmp	x1, x19
  430b6c:	b.ls	430c74 <nftw@plt+0x2e0f4>  // b.plast
  430b70:	ldrb	w4, [x24, x19]
  430b74:	add	x5, x24, x19
  430b78:	tbz	w4, #7, 430b3c <nftw@plt+0x2dfbc>
  430b7c:	mov	w3, w4
  430b80:	tbz	w4, #7, 430d14 <nftw@plt+0x2e194>
  430b84:	mov	w1, #0x0                   	// #0
  430b88:	mov	w6, w1
  430b8c:	lsl	w3, w3, #1
  430b90:	add	w1, w1, #0x1
  430b94:	tbnz	w3, #7, 430b88 <nftw@plt+0x2e008>
  430b98:	mov	w2, #0x7f                  	// #127
  430b9c:	cmp	w1, #0x1
  430ba0:	asr	w2, w2, w1
  430ba4:	and	w2, w2, w4
  430ba8:	sxtw	x2, w2
  430bac:	b.eq	430d20 <nftw@plt+0x2e1a0>  // b.none
  430bb0:	add	x0, x5, #0x1
  430bb4:	mov	x3, #0x0                   	// #0
  430bb8:	ldrb	w4, [x0, x3]
  430bbc:	and	w5, w4, #0xffffffc0
  430bc0:	bfi	x4, x2, #6, #58
  430bc4:	cmp	w5, #0x80
  430bc8:	mov	x2, x4
  430bcc:	b.ne	430d28 <nftw@plt+0x2e1a8>  // b.any
  430bd0:	add	x3, x3, #0x1
  430bd4:	cmp	w6, w3
  430bd8:	b.gt	430bb8 <nftw@plt+0x2e038>
  430bdc:	sxtw	x1, w1
  430be0:	lsr	w9, w2, #28
  430be4:	ubfx	x8, x2, #24, #4
  430be8:	ubfx	x3, x2, #20, #4
  430bec:	ubfx	x7, x2, #16, #4
  430bf0:	ubfx	x6, x2, #12, #4
  430bf4:	ubfx	x0, x2, #8, #4
  430bf8:	ubfx	x5, x2, #4, #4
  430bfc:	and	x4, x2, #0xf
  430c00:	ldrb	w11, [x23, x9]
  430c04:	sub	x19, x19, #0x1
  430c08:	ldrb	w10, [x23, x8]
  430c0c:	add	x19, x19, x1
  430c10:	ldrb	w9, [x23, x3]
  430c14:	mov	x1, #0x1                   	// #1
  430c18:	ldrb	w8, [x23, x7]
  430c1c:	mov	x3, x20
  430c20:	ldrb	w7, [x23, x6]
  430c24:	mov	x2, #0xa                   	// #10
  430c28:	ldrb	w6, [x23, x0]
  430c2c:	add	x0, sp, #0x40
  430c30:	ldrb	w5, [x23, x5]
  430c34:	add	x19, x19, #0x1
  430c38:	ldrb	w4, [x23, x4]
  430c3c:	strh	w21, [sp, #64]
  430c40:	strb	w11, [sp, #66]
  430c44:	strb	w10, [sp, #67]
  430c48:	strb	w9, [sp, #68]
  430c4c:	strb	w8, [sp, #69]
  430c50:	strb	w7, [sp, #70]
  430c54:	strb	w6, [sp, #71]
  430c58:	strb	w5, [sp, #72]
  430c5c:	strb	w4, [sp, #73]
  430c60:	bl	4024d0 <fwrite_unlocked@plt>
  430c64:	ldr	x0, [x22, #8]
  430c68:	ldr	w1, [x0, #8]
  430c6c:	cmp	x1, x19
  430c70:	b.hi	430b70 <nftw@plt+0x2dff0>  // b.pmore
  430c74:	ldp	x19, x20, [sp, #16]
  430c78:	ldp	x21, x22, [sp, #32]
  430c7c:	ldp	x23, x24, [sp, #48]
  430c80:	ldp	x29, x30, [sp], #80
  430c84:	ret
  430c88:	ldrh	w1, [x22, #6]
  430c8c:	tbnz	w1, #1, 430cf8 <nftw@plt+0x2e178>
  430c90:	tbnz	w1, #4, 430b14 <nftw@plt+0x2df94>
  430c94:	ldr	x19, [x3, #8]
  430c98:	ldrb	w1, [x19]
  430c9c:	b	430cb4 <nftw@plt+0x2e134>
  430ca0:	add	x2, x0, #0x1
  430ca4:	str	x2, [x20, #40]
  430ca8:	strb	w1, [x0]
  430cac:	ldrb	w1, [x19, #1]!
  430cb0:	cbz	w1, 430b04 <nftw@plt+0x2df84>
  430cb4:	ldp	x0, x2, [x20, #40]
  430cb8:	cmp	x0, x2
  430cbc:	b.cc	430ca0 <nftw@plt+0x2e120>  // b.lo, b.ul, b.last
  430cc0:	mov	x0, x20
  430cc4:	bl	402800 <__overflow@plt>
  430cc8:	ldrb	w1, [x19, #1]!
  430ccc:	cbnz	w1, 430cb4 <nftw@plt+0x2e134>
  430cd0:	b	430b04 <nftw@plt+0x2df84>
  430cd4:	ldr	w2, [x22, #8]
  430cd8:	mov	x3, x20
  430cdc:	ldr	x0, [x22, #16]
  430ce0:	mov	x1, #0x1                   	// #1
  430ce4:	bl	4024d0 <fwrite_unlocked@plt>
  430ce8:	ldp	x19, x20, [sp, #16]
  430cec:	ldp	x21, x22, [sp, #32]
  430cf0:	ldp	x29, x30, [sp], #80
  430cf4:	ret
  430cf8:	add	x0, x0, #0x540
  430cfc:	sub	w2, w2, #0x25
  430d00:	ldr	x19, [x0, w2, sxtw #3]
  430d04:	b	430c98 <nftw@plt+0x2e118>
  430d08:	mov	x0, x20
  430d0c:	bl	402800 <__overflow@plt>
  430d10:	b	430b5c <nftw@plt+0x2dfdc>
  430d14:	and	x2, x4, #0xff
  430d18:	mov	x1, #0x0                   	// #0
  430d1c:	b	430be0 <nftw@plt+0x2e060>
  430d20:	mov	x1, #0x1                   	// #1
  430d24:	b	430be0 <nftw@plt+0x2e060>
  430d28:	adrp	x2, 47c000 <_obstack_memory_used@@Base+0x1abb8>
  430d2c:	adrp	x0, 47c000 <_obstack_memory_used@@Base+0x1abb8>
  430d30:	add	x2, x2, #0xc00
  430d34:	add	x0, x0, #0x9d0
  430d38:	mov	w1, #0xc89                 	// #3209
  430d3c:	bl	402bf0 <nftw@plt+0x70>
  430d40:	ldr	w2, [x0, #4]
  430d44:	mov	x3, x0
  430d48:	ldr	w0, [x1, #4]
  430d4c:	and	w2, w2, #0xffff00ff
  430d50:	and	w0, w0, #0xffff00ff
  430d54:	cmp	w2, w0
  430d58:	b.eq	430d64 <nftw@plt+0x2e1e4>  // b.none
  430d5c:	mov	w0, #0x0                   	// #0
  430d60:	ret
  430d64:	ldrb	w2, [x3, #4]
  430d68:	adrp	x0, 47d000 <_obstack_memory_used@@Base+0x1bbb8>
  430d6c:	add	x0, x0, #0x460
  430d70:	sbfiz	x4, x2, #4, #32
  430d74:	ldr	w0, [x0, x4]
  430d78:	cmp	w0, #0x2
  430d7c:	b.eq	430dec <nftw@plt+0x2e26c>  // b.none
  430d80:	cmp	w0, #0x3
  430d84:	b.eq	430db8 <nftw@plt+0x2e238>  // b.none
  430d88:	cmp	w0, #0x1
  430d8c:	b.eq	430da0 <nftw@plt+0x2e220>  // b.none
  430d90:	cmp	w2, #0x26
  430d94:	mov	w0, #0x1                   	// #1
  430d98:	b.eq	430e28 <nftw@plt+0x2e2a8>  // b.none
  430d9c:	ret
  430da0:	ldr	x2, [x1, #8]
  430da4:	mov	w0, #0x0                   	// #0
  430da8:	ldr	x4, [x3, #8]
  430dac:	cmp	x4, x2
  430db0:	b.eq	430dd8 <nftw@plt+0x2e258>  // b.none
  430db4:	ret
  430db8:	cmp	w2, #0x50
  430dbc:	mov	w0, #0x1                   	// #1
  430dc0:	b.ne	430d9c <nftw@plt+0x2e21c>  // b.any
  430dc4:	ldr	w2, [x1, #8]
  430dc8:	mov	w0, #0x0                   	// #0
  430dcc:	ldr	w4, [x3, #8]
  430dd0:	cmp	w4, w2
  430dd4:	b.ne	430d9c <nftw@plt+0x2e21c>  // b.any
  430dd8:	ldr	x0, [x1, #16]
  430ddc:	ldr	x2, [x3, #16]
  430de0:	cmp	x2, x0
  430de4:	cset	w0, eq  // eq = none
  430de8:	ret
  430dec:	ldr	w4, [x1, #8]
  430df0:	mov	w0, #0x0                   	// #0
  430df4:	ldr	w2, [x3, #8]
  430df8:	cmp	w2, w4
  430dfc:	b.ne	430d9c <nftw@plt+0x2e21c>  // b.any
  430e00:	stp	x29, x30, [sp, #-16]!
  430e04:	mov	w2, w2
  430e08:	mov	x29, sp
  430e0c:	ldr	x1, [x1, #16]
  430e10:	ldr	x0, [x3, #16]
  430e14:	bl	402850 <memcmp@plt>
  430e18:	cmp	w0, #0x0
  430e1c:	cset	w0, eq  // eq = none
  430e20:	ldp	x29, x30, [sp], #16
  430e24:	ret
  430e28:	ldr	w0, [x1, #8]
  430e2c:	ldr	w2, [x3, #8]
  430e30:	cmp	w2, w0
  430e34:	cset	w0, eq  // eq = none
  430e38:	ret
  430e3c:	nop
  430e40:	ldrh	w6, [x1, #6]
  430e44:	mov	w5, #0x35                  	// #53
  430e48:	ldrh	w4, [x2, #6]
  430e4c:	mov	x8, x0
  430e50:	ldrb	w3, [x1, #4]
  430e54:	tst	x6, #0x10
  430e58:	ldrb	w6, [x2, #4]
  430e5c:	csel	w3, w3, w5, eq  // eq = none
  430e60:	tbnz	w4, #4, 431038 <nftw@plt+0x2e4b8>
  430e64:	mov	w5, w6
  430e68:	mov	w7, w6
  430e6c:	mov	w9, w6
  430e70:	tbz	w4, #1, 431014 <nftw@plt+0x2e494>
  430e74:	adrp	x4, 47d000 <_obstack_memory_used@@Base+0x1bbb8>
  430e78:	add	x4, x4, #0x460
  430e7c:	sub	w5, w5, #0x25
  430e80:	add	x0, x4, #0x540
  430e84:	ldr	x0, [x0, w5, sxtw #3]
  430e88:	ldrb	w5, [x0]
  430e8c:	cmp	w5, #0x3d
  430e90:	mov	w0, #0x1                   	// #1
  430e94:	ccmp	w3, #0xd, #0x0, eq  // eq = none
  430e98:	b.le	430ecc <nftw@plt+0x2e34c>
  430e9c:	cmp	w3, #0x12
  430ea0:	b.eq	430fdc <nftw@plt+0x2e45c>  // b.none
  430ea4:	b.hi	430ef8 <nftw@plt+0x2e378>  // b.pmore
  430ea8:	cmp	w3, #0x7
  430eac:	b.eq	4310ec <nftw@plt+0x2e56c>  // b.none
  430eb0:	b.ls	430ed0 <nftw@plt+0x2e350>  // b.plast
  430eb4:	cmp	w3, #0x9
  430eb8:	b.eq	4310ac <nftw@plt+0x2e52c>  // b.none
  430ebc:	cmp	w3, #0xa
  430ec0:	b.ne	430fd4 <nftw@plt+0x2e454>  // b.any
  430ec4:	cmp	w5, #0x7c
  430ec8:	cset	w0, eq  // eq = none
  430ecc:	ret
  430ed0:	cmp	w3, #0x4
  430ed4:	b.eq	4310b8 <nftw@plt+0x2e538>  // b.none
  430ed8:	b.ls	430fec <nftw@plt+0x2e46c>  // b.plast
  430edc:	cmp	w3, #0x5
  430ee0:	b.ne	43104c <nftw@plt+0x2e4cc>  // b.any
  430ee4:	cmp	w5, #0x2d
  430ee8:	mov	w0, #0x3e                  	// #62
  430eec:	ccmp	w5, w0, #0x4, ne  // ne = any
  430ef0:	cset	w0, eq  // eq = none
  430ef4:	ret
  430ef8:	cmp	w3, #0x35
  430efc:	b.eq	4310c4 <nftw@plt+0x2e544>  // b.none
  430f00:	b.ls	430f64 <nftw@plt+0x2e3e4>  // b.plast
  430f04:	cmp	w3, #0x3d
  430f08:	b.eq	43106c <nftw@plt+0x2e4ec>  // b.none
  430f0c:	b.ls	430f90 <nftw@plt+0x2e410>  // b.plast
  430f10:	sub	w3, w3, #0x3e
  430f14:	cmp	w3, #0x4
  430f18:	b.hi	43104c <nftw@plt+0x2e4cc>  // b.pmore
  430f1c:	ldrb	w1, [x8, #1161]
  430f20:	mov	w0, #0x0                   	// #0
  430f24:	cbz	w1, 430ecc <nftw@plt+0x2e34c>
  430f28:	cmp	w7, #0x35
  430f2c:	mov	w0, #0x1                   	// #1
  430f30:	b.eq	430ecc <nftw@plt+0x2e34c>  // b.none
  430f34:	sbfiz	x6, x6, #4, #32
  430f38:	mov	w0, #0x0                   	// #0
  430f3c:	ldr	w1, [x4, x6]
  430f40:	cmp	w1, #0x2
  430f44:	b.ne	430ecc <nftw@plt+0x2e34c>  // b.any
  430f48:	ldr	x1, [x2, #16]
  430f4c:	adrp	x0, 481000 <_obstack_memory_used@@Base+0x1fbb8>
  430f50:	add	x0, x0, #0xaf0
  430f54:	ldrb	w1, [x1]
  430f58:	ldrh	w0, [x0, x1, lsl #1]
  430f5c:	ubfx	x0, x0, #9, #1
  430f60:	ret
  430f64:	cmp	w3, #0x2f
  430f68:	b.eq	431060 <nftw@plt+0x2e4e0>  // b.none
  430f6c:	cmp	w3, #0x30
  430f70:	b.ne	430fbc <nftw@plt+0x2e43c>  // b.any
  430f74:	cmp	w5, #0x2e
  430f78:	mov	w0, #0x25                  	// #37
  430f7c:	ccmp	w5, w0, #0x4, ne  // ne = any
  430f80:	mov	w0, #0x37                  	// #55
  430f84:	ccmp	w7, w0, #0x4, ne  // ne = any
  430f88:	cset	w0, eq  // eq = none
  430f8c:	ret
  430f90:	cmp	w3, #0x37
  430f94:	b.ne	43104c <nftw@plt+0x2e4cc>  // b.any
  430f98:	and	w9, w9, #0xfffffffd
  430f9c:	mov	w0, #0x1                   	// #1
  430fa0:	cmp	w9, #0x35
  430fa4:	b.eq	430ecc <nftw@plt+0x2e34c>  // b.none
  430fa8:	cmp	w5, #0x2b
  430fac:	sub	w5, w5, #0x2d
  430fb0:	ccmp	w5, w0, #0x0, ne  // ne = any
  430fb4:	cset	w0, ls  // ls = plast
  430fb8:	ret
  430fbc:	cmp	w3, #0x25
  430fc0:	b.ne	43104c <nftw@plt+0x2e4cc>  // b.any
  430fc4:	sub	w5, w5, #0x23
  430fc8:	tst	w5, #0xfffffffd
  430fcc:	cset	w0, eq  // eq = none
  430fd0:	ret
  430fd4:	cmp	w3, #0x8
  430fd8:	b.ne	43104c <nftw@plt+0x2e4cc>  // b.any
  430fdc:	and	w5, w5, #0xfffffffb
  430fe0:	cmp	w5, #0x3a
  430fe4:	cset	w0, eq  // eq = none
  430fe8:	ret
  430fec:	cmp	w3, #0x2
  430ff0:	b.eq	431054 <nftw@plt+0x2e4d4>  // b.none
  430ff4:	cmp	w3, #0x3
  430ff8:	b.ne	43104c <nftw@plt+0x2e4cc>  // b.any
  430ffc:	sub	w0, w5, #0x3a
  431000:	cmp	w5, #0x25
  431004:	and	w0, w0, #0xfffffffd
  431008:	ccmp	w0, #0x0, #0x4, ne  // ne = any
  43100c:	cset	w0, eq  // eq = none
  431010:	ret
  431014:	sbfiz	x5, x5, #4, #32
  431018:	adrp	x4, 47d000 <_obstack_memory_used@@Base+0x1bbb8>
  43101c:	add	x4, x4, #0x460
  431020:	add	x10, x4, x5
  431024:	ldr	w0, [x4, x5]
  431028:	cbnz	w0, 431044 <nftw@plt+0x2e4c4>
  43102c:	ldr	x0, [x10, #8]
  431030:	ldrb	w5, [x0]
  431034:	b	430e8c <nftw@plt+0x2e30c>
  431038:	mov	w7, w5
  43103c:	mov	w9, w5
  431040:	b	430e70 <nftw@plt+0x2e2f0>
  431044:	mov	w5, #0xffffffff            	// #-1
  431048:	b	430e9c <nftw@plt+0x2e31c>
  43104c:	mov	w0, #0x0                   	// #0
  431050:	ret
  431054:	cmp	w5, #0x3e
  431058:	cset	w0, eq  // eq = none
  43105c:	ret
  431060:	cmp	w5, #0x2a
  431064:	cset	w0, eq  // eq = none
  431068:	ret
  43106c:	ldr	x0, [x1, #16]
  431070:	cmp	w7, #0x35
  431074:	cset	w1, eq  // eq = none
  431078:	ldrb	w0, [x0]
  43107c:	cmp	w0, #0x5c
  431080:	ccmp	w1, #0x0, #0x4, eq  // eq = none
  431084:	b.ne	431154 <nftw@plt+0x2e5d4>  // b.any
  431088:	ldrb	w2, [x8, #1122]
  43108c:	cmp	w0, #0x40
  431090:	mov	w0, #0x0                   	// #0
  431094:	ccmp	w2, #0x0, #0x4, eq  // eq = none
  431098:	b.eq	430ecc <nftw@plt+0x2e34c>  // b.none
  43109c:	cmp	w7, #0x3e
  4310a0:	ccmp	w1, #0x0, #0x0, ne  // ne = any
  4310a4:	cset	w0, ne  // ne = any
  4310a8:	ret
  4310ac:	cmp	w5, #0x26
  4310b0:	cset	w0, eq  // eq = none
  4310b4:	ret
  4310b8:	cmp	w5, #0x2b
  4310bc:	cset	w0, eq  // eq = none
  4310c0:	ret
  4310c4:	cmp	w7, #0x37
  4310c8:	b.eq	431100 <nftw@plt+0x2e580>  // b.none
  4310cc:	cmp	w7, #0x35
  4310d0:	mov	w1, #0x38                  	// #56
  4310d4:	mov	w0, #0x1                   	// #1
  4310d8:	ccmp	w7, w1, #0x4, ne  // ne = any
  4310dc:	b.eq	430ecc <nftw@plt+0x2e34c>  // b.none
  4310e0:	cmp	w7, #0x3e
  4310e4:	cset	w0, eq  // eq = none
  4310e8:	ret
  4310ec:	cmp	w5, #0x2f
  4310f0:	mov	w0, #0x2a                  	// #42
  4310f4:	ccmp	w5, w0, #0x4, ne  // ne = any
  4310f8:	cset	w0, eq  // eq = none
  4310fc:	ret
  431100:	ldr	w1, [x2, #8]
  431104:	cbz	w1, 431154 <nftw@plt+0x2e5d4>
  431108:	ldr	x0, [x2, #16]
  43110c:	sub	w1, w1, #0x1
  431110:	adrp	x3, 481000 <_obstack_memory_used@@Base+0x1fbb8>
  431114:	add	x3, x3, #0xaf0
  431118:	add	x4, x0, #0x1
  43111c:	mov	w5, #0x204                 	// #516
  431120:	add	x4, x4, x1
  431124:	nop
  431128:	ldrb	w1, [x0]
  43112c:	add	x0, x0, #0x1
  431130:	ldrh	w2, [x3, w1, sxtw #1]
  431134:	tst	w5, w2
  431138:	b.ne	43114c <nftw@plt+0x2e5cc>  // b.any
  43113c:	cmp	w1, #0x24
  431140:	b.ne	4310e0 <nftw@plt+0x2e560>  // b.any
  431144:	ldrb	w1, [x8, #1146]
  431148:	cbz	w1, 4310e0 <nftw@plt+0x2e560>
  43114c:	cmp	x0, x4
  431150:	b.ne	431128 <nftw@plt+0x2e5a8>  // b.any
  431154:	mov	w0, #0x1                   	// #1
  431158:	ret
  43115c:	nop
  431160:	stp	x29, x30, [sp, #-48]!
  431164:	mov	x29, sp
  431168:	stp	x19, x20, [sp, #16]
  43116c:	mov	x20, x1
  431170:	stp	x21, x22, [sp, #32]
  431174:	mov	x21, x0
  431178:	bl	43e370 <nftw@plt+0x3b7f0>
  43117c:	mov	x19, x0
  431180:	ldrb	w0, [x0, #4]
  431184:	cmp	w0, #0x16
  431188:	b.eq	4311d4 <nftw@plt+0x2e654>  // b.none
  43118c:	mov	w22, #0x20                  	// #32
  431190:	mov	x1, x20
  431194:	mov	x0, x19
  431198:	bl	430ac0 <nftw@plt+0x2df40>
  43119c:	mov	x0, x21
  4311a0:	bl	43e370 <nftw@plt+0x3b7f0>
  4311a4:	ldrh	w1, [x0, #6]
  4311a8:	mov	x19, x0
  4311ac:	tbz	w1, #0, 4311c8 <nftw@plt+0x2e648>
  4311b0:	ldp	x1, x0, [x20, #40]
  4311b4:	add	x2, x1, #0x1
  4311b8:	cmp	x1, x0
  4311bc:	b.cs	431200 <nftw@plt+0x2e680>  // b.hs, b.nlast
  4311c0:	str	x2, [x20, #40]
  4311c4:	strb	w22, [x1]
  4311c8:	ldrb	w1, [x19, #4]
  4311cc:	cmp	w1, #0x16
  4311d0:	b.ne	431190 <nftw@plt+0x2e610>  // b.any
  4311d4:	ldp	x0, x1, [x20, #40]
  4311d8:	cmp	x0, x1
  4311dc:	b.cs	431210 <nftw@plt+0x2e690>  // b.hs, b.nlast
  4311e0:	add	x1, x0, #0x1
  4311e4:	str	x1, [x20, #40]
  4311e8:	mov	w1, #0xa                   	// #10
  4311ec:	strb	w1, [x0]
  4311f0:	ldp	x19, x20, [sp, #16]
  4311f4:	ldp	x21, x22, [sp, #32]
  4311f8:	ldp	x29, x30, [sp], #48
  4311fc:	ret
  431200:	mov	x0, x20
  431204:	mov	w1, #0x20                  	// #32
  431208:	bl	402800 <__overflow@plt>
  43120c:	b	4311c8 <nftw@plt+0x2e648>
  431210:	mov	x0, x20
  431214:	mov	w1, #0xa                   	// #10
  431218:	ldp	x19, x20, [sp, #16]
  43121c:	ldp	x21, x22, [sp, #32]
  431220:	ldp	x29, x30, [sp], #48
  431224:	b	402800 <__overflow@plt>
  431228:	stp	x29, x30, [sp, #-96]!
  43122c:	mov	x29, sp
  431230:	stp	x19, x20, [sp, #16]
  431234:	stp	x21, x22, [sp, #32]
  431238:	stp	x23, x24, [sp, #48]
  43123c:	mov	x23, x0
  431240:	stp	x25, x26, [sp, #64]
  431244:	str	x27, [sp, #80]
  431248:	cbz	x1, 43146c <nftw@plt+0x2e8ec>
  43124c:	mov	x19, x1
  431250:	mov	x0, x1
  431254:	bl	4024f0 <strlen@plt>
  431258:	add	w22, w0, #0x78
  43125c:	add	w27, w0, #0x2
  431260:	add	w21, w0, #0x2
  431264:	add	w0, w0, #0x78
  431268:	bl	461560 <_obstack_memory_used@@Base+0x118>
  43126c:	adrp	x1, 47c000 <_obstack_memory_used@@Base+0x1abb8>
  431270:	mov	x2, x19
  431274:	mov	x26, x0
  431278:	add	x1, x1, #0xc70
  43127c:	bl	4025b0 <sprintf@plt>
  431280:	mov	x0, x23
  431284:	bl	43e370 <nftw@plt+0x3b7f0>
  431288:	ldrb	w1, [x0, #4]
  43128c:	mov	x20, x0
  431290:	cmp	w1, #0x16
  431294:	b.eq	43134c <nftw@plt+0x2e7cc>  // b.none
  431298:	adrp	x21, 47d000 <_obstack_memory_used@@Base+0x1bbb8>
  43129c:	add	x21, x21, #0x460
  4312a0:	adrp	x24, 47c000 <_obstack_memory_used@@Base+0x1abb8>
  4312a4:	add	x25, x21, #0x540
  4312a8:	add	x24, x24, #0xc28
  4312ac:	nop
  4312b0:	sbfiz	x1, x1, #4, #32
  4312b4:	ldr	w0, [x21, x1]
  4312b8:	cmp	w0, #0x1
  4312bc:	b.eq	4313c4 <nftw@plt+0x2e844>  // b.none
  4312c0:	cmp	w0, #0x2
  4312c4:	mov	w0, #0x6                   	// #6
  4312c8:	b.ne	4312d0 <nftw@plt+0x2e750>  // b.any
  4312cc:	ldr	w0, [x20, #8]
  4312d0:	add	w1, w27, #0x2
  4312d4:	add	w1, w1, w0
  4312d8:	cmp	w1, w22
  4312dc:	b.hi	4313e4 <nftw@plt+0x2e864>  // b.pmore
  4312e0:	ldrb	w1, [x20, #4]
  4312e4:	add	x19, x26, w27, uxtw
  4312e8:	sbfiz	x0, x1, #4, #32
  4312ec:	add	x2, x21, x0
  4312f0:	ldr	w0, [x21, x0]
  4312f4:	cmp	w0, #0x2
  4312f8:	b.eq	43141c <nftw@plt+0x2e89c>  // b.none
  4312fc:	b.hi	431370 <nftw@plt+0x2e7f0>  // b.pmore
  431300:	cbz	w0, 431438 <nftw@plt+0x2e8b8>
  431304:	ldr	x1, [x20, #8]
  431308:	mov	x0, x19
  43130c:	bl	4303c0 <nftw@plt+0x2d840>
  431310:	mov	x19, x0
  431314:	mov	x0, x23
  431318:	bl	43e370 <nftw@plt+0x3b7f0>
  43131c:	mov	x20, x0
  431320:	ldrh	w0, [x0, #6]
  431324:	sub	x19, x19, x26
  431328:	mov	w27, w19
  43132c:	tbz	w0, #0, 4313a8 <nftw@plt+0x2e828>
  431330:	mov	w0, #0x20                  	// #32
  431334:	strb	w0, [x26, w19, uxtw]
  431338:	add	w27, w19, #0x1
  43133c:	ldrb	w1, [x20, #4]
  431340:	cmp	w1, #0x16
  431344:	b.ne	4312b0 <nftw@plt+0x2e730>  // b.any
  431348:	mov	w21, w27
  43134c:	strb	wzr, [x26, x21]
  431350:	mov	x0, x26
  431354:	ldp	x19, x20, [sp, #16]
  431358:	ldp	x21, x22, [sp, #32]
  43135c:	ldp	x23, x24, [sp, #48]
  431360:	ldp	x25, x26, [sp, #64]
  431364:	ldr	x27, [sp, #80]
  431368:	ldp	x29, x30, [sp], #96
  43136c:	ret
  431370:	cmp	w0, #0x3
  431374:	b.ne	431314 <nftw@plt+0x2e794>  // b.any
  431378:	ldr	x3, [x2, #8]
  43137c:	mov	x2, x24
  431380:	mov	w1, #0x4                   	// #4
  431384:	mov	x0, x23
  431388:	sub	x19, x19, x26
  43138c:	bl	427178 <nftw@plt+0x245f8>
  431390:	mov	w27, w19
  431394:	mov	x0, x23
  431398:	bl	43e370 <nftw@plt+0x3b7f0>
  43139c:	mov	x20, x0
  4313a0:	ldrh	w0, [x0, #6]
  4313a4:	tbnz	w0, #0, 431330 <nftw@plt+0x2e7b0>
  4313a8:	ldrb	w1, [x20, #4]
  4313ac:	cmp	w1, #0x16
  4313b0:	b.eq	431348 <nftw@plt+0x2e7c8>  // b.none
  4313b4:	sbfiz	x1, x1, #4, #32
  4313b8:	ldr	w0, [x21, x1]
  4313bc:	cmp	w0, #0x1
  4313c0:	b.ne	4312c0 <nftw@plt+0x2e740>  // b.any
  4313c4:	ldr	x0, [x20, #8]
  4313c8:	ldr	w1, [x0, #8]
  4313cc:	add	w1, w1, w1, lsl #2
  4313d0:	lsl	w0, w1, #1
  4313d4:	add	w1, w27, #0x2
  4313d8:	add	w1, w1, w0
  4313dc:	cmp	w1, w22
  4313e0:	b.ls	4312e0 <nftw@plt+0x2e760>  // b.plast
  4313e4:	lsl	w2, w22, #1
  4313e8:	mov	x0, x26
  4313ec:	cmp	w1, w2
  4313f0:	csel	w22, w1, w2, cs  // cs = hs, nlast
  4313f4:	csel	w1, w1, w2, cs  // cs = hs, nlast
  4313f8:	bl	4615e8 <_obstack_memory_used@@Base+0x1a0>
  4313fc:	mov	x26, x0
  431400:	ldrb	w1, [x20, #4]
  431404:	add	x19, x26, w27, uxtw
  431408:	sbfiz	x0, x1, #4, #32
  43140c:	add	x2, x21, x0
  431410:	ldr	w0, [x21, x0]
  431414:	cmp	w0, #0x2
  431418:	b.ne	4312fc <nftw@plt+0x2e77c>  // b.any
  43141c:	ldr	w2, [x20, #8]
  431420:	mov	x0, x19
  431424:	ldr	x1, [x20, #16]
  431428:	bl	402490 <memcpy@plt>
  43142c:	ldr	w0, [x20, #8]
  431430:	add	x19, x19, x0
  431434:	b	431314 <nftw@plt+0x2e794>
  431438:	ldrh	w0, [x20, #6]
  43143c:	tbz	w0, #1, 431460 <nftw@plt+0x2e8e0>
  431440:	sub	w1, w1, #0x25
  431444:	ldr	x1, [x25, w1, sxtw #3]
  431448:	ldrb	w0, [x1], #1
  43144c:	cbz	w0, 431314 <nftw@plt+0x2e794>
  431450:	strb	w0, [x19], #1
  431454:	ldrb	w0, [x1], #1
  431458:	cbnz	w0, 431450 <nftw@plt+0x2e8d0>
  43145c:	b	431314 <nftw@plt+0x2e794>
  431460:	tbnz	w0, #4, 431304 <nftw@plt+0x2e784>
  431464:	ldr	x1, [x2, #8]
  431468:	b	431448 <nftw@plt+0x2e8c8>
  43146c:	mov	x0, #0x78                  	// #120
  431470:	mov	x21, #0x0                   	// #0
  431474:	bl	461560 <_obstack_memory_used@@Base+0x118>
  431478:	mov	w22, #0x78                  	// #120
  43147c:	mov	x26, x0
  431480:	mov	w27, #0x0                   	// #0
  431484:	b	431280 <nftw@plt+0x2e700>
  431488:	mov	x2, x1
  43148c:	nop
  431490:	mov	x3, x2
  431494:	ldr	x2, [x2]
  431498:	cbnz	x2, 431490 <nftw@plt+0x2e910>
  43149c:	ldr	x2, [x0, #72]
  4314a0:	str	x2, [x3]
  4314a4:	str	x1, [x0, #72]
  4314a8:	ret
  4314ac:	nop
  4314b0:	add	x4, x0, #0x48
  4314b4:	ldr	x0, [x0, #72]
  4314b8:	cbz	x0, 4314f0 <nftw@plt+0x2e970>
  4314bc:	add	x5, x1, x1, lsl #1
  4314c0:	mov	x2, #0x1f40                	// #8000
  4314c4:	add	x5, x2, x5, lsr #1
  4314c8:	ldr	x3, [x0, #8]
  4314cc:	ldr	x2, [x0, #24]
  4314d0:	sub	x2, x2, x3
  4314d4:	cmp	x2, x1
  4314d8:	b.cc	4314e4 <nftw@plt+0x2e964>  // b.lo, b.ul, b.last
  4314dc:	cmp	x5, x2
  4314e0:	b.cs	431538 <nftw@plt+0x2e9b8>  // b.hs, b.nlast
  4314e4:	mov	x4, x0
  4314e8:	ldr	x0, [x0]
  4314ec:	cbnz	x0, 4314c8 <nftw@plt+0x2e948>
  4314f0:	stp	x29, x30, [sp, #-32]!
  4314f4:	mov	x29, sp
  4314f8:	str	x19, [sp, #16]
  4314fc:	mov	x19, #0x1f40                	// #8000
  431500:	cmp	x1, x19
  431504:	csel	x19, x1, x19, cs  // cs = hs, nlast
  431508:	add	x19, x19, #0x7
  43150c:	and	x19, x19, #0xfffffffffffffff8
  431510:	add	x0, x19, #0x20
  431514:	bl	461560 <_obstack_memory_used@@Base+0x118>
  431518:	mov	x1, x0
  43151c:	add	x0, x0, x19
  431520:	stp	x1, x1, [x0, #8]
  431524:	str	x0, [x0, #24]
  431528:	str	xzr, [x1, x19]
  43152c:	ldr	x19, [sp, #16]
  431530:	ldp	x29, x30, [sp], #32
  431534:	ret
  431538:	ldr	x1, [x0]
  43153c:	str	x1, [x4]
  431540:	str	xzr, [x0]
  431544:	str	x3, [x0, #16]
  431548:	ret
  43154c:	nop
  431550:	stp	x29, x30, [sp, #-48]!
  431554:	mov	x29, sp
  431558:	ldp	x3, x5, [x1, #16]
  43155c:	stp	x19, x20, [sp, #16]
  431560:	ldr	x20, [x0, #72]
  431564:	str	x21, [sp, #32]
  431568:	mov	x21, x1
  43156c:	sub	x3, x5, x3
  431570:	add	x3, x2, x3, lsl #1
  431574:	cbz	x20, 4315b0 <nftw@plt+0x2ea30>
  431578:	add	x1, x3, x3, lsl #1
  43157c:	add	x6, x0, #0x48
  431580:	mov	x0, #0x1f40                	// #8000
  431584:	add	x1, x0, x1, lsr #1
  431588:	ldr	x0, [x20, #8]
  43158c:	ldr	x4, [x20, #24]
  431590:	sub	x4, x4, x0
  431594:	cmp	x3, x4
  431598:	b.hi	4315a4 <nftw@plt+0x2ea24>  // b.pmore
  43159c:	cmp	x4, x1
  4315a0:	b.ls	431604 <nftw@plt+0x2ea84>  // b.plast
  4315a4:	mov	x6, x20
  4315a8:	ldr	x20, [x20]
  4315ac:	cbnz	x20, 431588 <nftw@plt+0x2ea08>
  4315b0:	mov	x19, #0x1f40                	// #8000
  4315b4:	cmp	x3, x19
  4315b8:	csel	x19, x3, x19, cs  // cs = hs, nlast
  4315bc:	add	x19, x19, #0x7
  4315c0:	and	x19, x19, #0xfffffffffffffff8
  4315c4:	add	x0, x19, #0x20
  4315c8:	bl	461560 <_obstack_memory_used@@Base+0x118>
  4315cc:	add	x20, x0, x19
  4315d0:	ldr	x5, [x21, #24]
  4315d4:	stp	x0, x0, [x20, #8]
  4315d8:	str	x20, [x20, #24]
  4315dc:	str	xzr, [x0, x19]
  4315e0:	ldr	x1, [x21, #16]
  4315e4:	str	x20, [x21]
  4315e8:	sub	x2, x5, x1
  4315ec:	bl	402490 <memcpy@plt>
  4315f0:	mov	x0, x20
  4315f4:	ldp	x19, x20, [sp, #16]
  4315f8:	ldr	x21, [sp, #32]
  4315fc:	ldp	x29, x30, [sp], #48
  431600:	ret
  431604:	ldr	x1, [x20]
  431608:	str	x1, [x6]
  43160c:	str	xzr, [x20]
  431610:	str	x0, [x20, #16]
  431614:	b	4315e0 <nftw@plt+0x2ea60>
  431618:	stp	x29, x30, [sp, #-48]!
  43161c:	mov	x29, sp
  431620:	stp	x21, x22, [sp, #32]
  431624:	mov	x21, x1
  431628:	ldr	x22, [x1]
  43162c:	stp	x19, x20, [sp, #16]
  431630:	ldr	x20, [x0, #72]
  431634:	ldp	x3, x5, [x22, #16]
  431638:	sub	x3, x5, x3
  43163c:	add	x3, x2, x3, lsl #1
  431640:	cbz	x20, 431680 <nftw@plt+0x2eb00>
  431644:	add	x1, x3, x3, lsl #1
  431648:	add	x6, x0, #0x48
  43164c:	mov	x0, #0x1f40                	// #8000
  431650:	add	x1, x0, x1, lsr #1
  431654:	nop
  431658:	ldr	x0, [x20, #8]
  43165c:	ldr	x4, [x20, #24]
  431660:	sub	x4, x4, x0
  431664:	cmp	x3, x4
  431668:	b.hi	431674 <nftw@plt+0x2eaf4>  // b.pmore
  43166c:	cmp	x4, x1
  431670:	b.ls	4316d4 <nftw@plt+0x2eb54>  // b.plast
  431674:	mov	x6, x20
  431678:	ldr	x20, [x20]
  43167c:	cbnz	x20, 431658 <nftw@plt+0x2ead8>
  431680:	mov	x19, #0x1f40                	// #8000
  431684:	cmp	x3, x19
  431688:	csel	x19, x3, x19, cs  // cs = hs, nlast
  43168c:	add	x19, x19, #0x7
  431690:	and	x19, x19, #0xfffffffffffffff8
  431694:	add	x0, x19, #0x20
  431698:	bl	461560 <_obstack_memory_used@@Base+0x118>
  43169c:	add	x20, x0, x19
  4316a0:	str	x20, [x20, #24]
  4316a4:	stp	x0, x0, [x20, #8]
  4316a8:	ldr	x5, [x22, #24]
  4316ac:	str	xzr, [x0, x19]
  4316b0:	ldr	x1, [x22, #16]
  4316b4:	sub	x2, x5, x1
  4316b8:	bl	402490 <memcpy@plt>
  4316bc:	str	x22, [x20]
  4316c0:	str	x20, [x21]
  4316c4:	ldp	x19, x20, [sp, #16]
  4316c8:	ldp	x21, x22, [sp, #32]
  4316cc:	ldp	x29, x30, [sp], #48
  4316d0:	ret
  4316d4:	ldr	x1, [x20]
  4316d8:	str	x1, [x6]
  4316dc:	str	xzr, [x20]
  4316e0:	str	x0, [x20, #16]
  4316e4:	b	4316b0 <nftw@plt+0x2eb30>
  4316e8:	cbz	x0, 43171c <nftw@plt+0x2eb9c>
  4316ec:	stp	x29, x30, [sp, #-32]!
  4316f0:	mov	x29, sp
  4316f4:	str	x19, [sp, #16]
  4316f8:	mov	x19, x0
  4316fc:	nop
  431700:	ldr	x0, [x19, #8]
  431704:	ldr	x19, [x19]
  431708:	bl	402910 <free@plt>
  43170c:	cbnz	x19, 431700 <nftw@plt+0x2eb80>
  431710:	ldr	x19, [sp, #16]
  431714:	ldp	x29, x30, [sp], #32
  431718:	ret
  43171c:	ret
  431720:	stp	x29, x30, [sp, #-48]!
  431724:	mov	x29, sp
  431728:	ldr	x2, [x0, #64]
  43172c:	stp	x19, x20, [sp, #16]
  431730:	mov	x19, x1
  431734:	mov	x20, x0
  431738:	ldp	x0, x1, [x2, #16]
  43173c:	sub	x1, x1, x0
  431740:	cmp	x1, x19
  431744:	b.cc	43175c <nftw@plt+0x2ebdc>  // b.lo, b.ul, b.last
  431748:	add	x19, x0, x19
  43174c:	str	x19, [x2, #16]
  431750:	ldp	x19, x20, [sp, #16]
  431754:	ldp	x29, x30, [sp], #48
  431758:	ret
  43175c:	ldr	x2, [x20, #72]
  431760:	add	x4, x20, #0x48
  431764:	cbz	x2, 4317a0 <nftw@plt+0x2ec20>
  431768:	add	x3, x19, x19, lsl #1
  43176c:	mov	x0, #0x1f40                	// #8000
  431770:	add	x3, x0, x3, lsr #1
  431774:	nop
  431778:	ldr	x0, [x2, #8]
  43177c:	ldr	x1, [x2, #24]
  431780:	sub	x1, x1, x0
  431784:	cmp	x19, x1
  431788:	b.hi	431794 <nftw@plt+0x2ec14>  // b.pmore
  43178c:	cmp	x1, x3
  431790:	b.ls	4317f4 <nftw@plt+0x2ec74>  // b.plast
  431794:	mov	x4, x2
  431798:	ldr	x2, [x2]
  43179c:	cbnz	x2, 431778 <nftw@plt+0x2ebf8>
  4317a0:	str	x21, [sp, #32]
  4317a4:	mov	x21, #0x1f40                	// #8000
  4317a8:	cmp	x19, x21
  4317ac:	csel	x21, x19, x21, cs  // cs = hs, nlast
  4317b0:	add	x21, x21, #0x7
  4317b4:	and	x21, x21, #0xfffffffffffffff8
  4317b8:	add	x0, x21, #0x20
  4317bc:	bl	461560 <_obstack_memory_used@@Base+0x118>
  4317c0:	add	x2, x0, x21
  4317c4:	stp	x0, x0, [x2, #8]
  4317c8:	str	x2, [x2, #24]
  4317cc:	str	xzr, [x0, x21]
  4317d0:	ldr	x21, [sp, #32]
  4317d4:	add	x19, x0, x19
  4317d8:	ldr	x1, [x20, #64]
  4317dc:	str	x1, [x2]
  4317e0:	str	x2, [x20, #64]
  4317e4:	str	x19, [x2, #16]
  4317e8:	ldp	x19, x20, [sp, #16]
  4317ec:	ldp	x29, x30, [sp], #48
  4317f0:	ret
  4317f4:	ldr	x1, [x2]
  4317f8:	str	x1, [x4]
  4317fc:	str	xzr, [x2]
  431800:	str	x0, [x2, #16]
  431804:	b	4317d4 <nftw@plt+0x2ec54>
  431808:	stp	x29, x30, [sp, #-224]!
  43180c:	mov	x3, x2
  431810:	mov	x29, sp
  431814:	stp	x19, x20, [sp, #16]
  431818:	stp	x21, x22, [sp, #32]
  43181c:	mov	x22, x1
  431820:	stp	x23, x24, [sp, #48]
  431824:	stp	x27, x28, [sp, #80]
  431828:	mov	x28, x0
  43182c:	ldrb	w0, [x2]
  431830:	str	x2, [sp, #128]
  431834:	mov	w2, #0x55                  	// #85
  431838:	cmp	w0, #0x4c
  43183c:	ccmp	w0, w2, #0x4, ne  // ne = any
  431840:	b.ne	4318e4 <nftw@plt+0x2ed64>  // b.any
  431844:	ldrb	w23, [x3, #1]
  431848:	add	x19, x3, #0x2
  43184c:	cmp	w23, #0x52
  431850:	b.eq	431ca0 <nftw@plt+0x2f120>  // b.none
  431854:	cmp	w23, #0x22
  431858:	b.eq	4328c4 <nftw@plt+0x2fd44>  // b.none
  43185c:	cmp	w23, #0x27
  431860:	b.eq	431c70 <nftw@plt+0x2f0f0>  // b.none
  431864:	mov	w23, #0x3e                  	// #62
  431868:	mov	w21, #0x44                  	// #68
  43186c:	ldrb	w1, [x19]
  431870:	mov	w2, #0x0                   	// #0
  431874:	nop
  431878:	cmp	w1, #0x5c
  43187c:	add	x20, x19, #0x1
  431880:	b.eq	4318b0 <nftw@plt+0x2ed30>  // b.none
  431884:	cmp	w1, w23
  431888:	b.eq	431944 <nftw@plt+0x2edc4>  // b.none
  43188c:	cmp	w1, #0xa
  431890:	b.eq	431adc <nftw@plt+0x2ef5c>  // b.none
  431894:	cbnz	w1, 4318d0 <nftw@plt+0x2ed50>
  431898:	ldrb	w1, [x19, #1]
  43189c:	mov	x19, x20
  4318a0:	add	x20, x19, #0x1
  4318a4:	mov	w2, #0x1                   	// #1
  4318a8:	cmp	w1, #0x5c
  4318ac:	b.ne	431884 <nftw@plt+0x2ed04>  // b.any
  4318b0:	ldrb	w0, [x28, #19]
  4318b4:	cbnz	w0, 4318d0 <nftw@plt+0x2ed50>
  4318b8:	ldrb	w1, [x19, #1]
  4318bc:	cmp	w1, #0xa
  4318c0:	b.eq	4318dc <nftw@plt+0x2ed5c>  // b.none
  4318c4:	ldrb	w1, [x19, #2]
  4318c8:	add	x19, x19, #0x2
  4318cc:	b	431878 <nftw@plt+0x2ecf8>
  4318d0:	ldrb	w1, [x19, #1]
  4318d4:	mov	x19, x20
  4318d8:	b	431878 <nftw@plt+0x2ecf8>
  4318dc:	mov	x19, x20
  4318e0:	b	431878 <nftw@plt+0x2ecf8>
  4318e4:	mov	w1, w0
  4318e8:	cmp	w0, #0x75
  4318ec:	add	x19, x3, #0x1
  4318f0:	b.eq	432834 <nftw@plt+0x2fcb4>  // b.none
  4318f4:	cmp	w1, #0x52
  4318f8:	b.eq	432adc <nftw@plt+0x2ff5c>  // b.none
  4318fc:	cmp	w1, #0x22
  431900:	b.eq	4328e0 <nftw@plt+0x2fd60>  // b.none
  431904:	cmp	w1, #0x27
  431908:	b.ne	431864 <nftw@plt+0x2ece4>  // b.any
  43190c:	cmp	w0, #0x55
  431910:	mov	w23, #0x27                  	// #39
  431914:	mov	w21, #0x3b                  	// #59
  431918:	b.eq	43186c <nftw@plt+0x2ecec>  // b.none
  43191c:	cmp	w0, #0x75
  431920:	mov	w21, #0x38                  	// #56
  431924:	b.ne	43186c <nftw@plt+0x2ecec>  // b.any
  431928:	ldr	x0, [sp, #128]
  43192c:	mov	w21, #0x3c                  	// #60
  431930:	ldrb	w1, [x0, #1]
  431934:	mov	w0, #0x3a                  	// #58
  431938:	cmp	w1, #0x38
  43193c:	csel	w21, w21, w0, eq  // eq = none
  431940:	b	43186c <nftw@plt+0x2ecec>
  431944:	cbz	w2, 431950 <nftw@plt+0x2edd0>
  431948:	ldrb	w0, [x28, #18]
  43194c:	cbz	w0, 431c80 <nftw@plt+0x2f100>
  431950:	cmp	w21, #0x3d
  431954:	b.eq	432e40 <nftw@plt+0x302c0>  // b.none
  431958:	ldrb	w0, [x28, #1161]
  43195c:	cbz	w0, 431b20 <nftw@plt+0x2efa0>
  431960:	stp	x25, x26, [sp, #64]
  431964:	adrp	x25, 481000 <_obstack_memory_used@@Base+0x1fbb8>
  431968:	add	x25, x25, #0xaf0
  43196c:	ldrb	w1, [x20]
  431970:	cmp	w1, #0x5f
  431974:	b.ne	431a3c <nftw@plt+0x2eebc>  // b.any
  431978:	ldrb	w0, [x20, #1]
  43197c:	cmp	w0, #0x5f
  431980:	b.eq	431a3c <nftw@plt+0x2eebc>  // b.none
  431984:	ldrh	w0, [x25, w1, sxtw #1]
  431988:	tbz	w0, #9, 4319c8 <nftw@plt+0x2ee48>
  43198c:	mov	w0, w21
  431990:	bl	428ef8 <nftw@plt+0x26378>
  431994:	bl	428e58 <nftw@plt+0x262d8>
  431998:	mov	w21, w0
  43199c:	ldrb	w2, [x20, #1]
  4319a0:	mov	w1, #0x204                 	// #516
  4319a4:	add	x20, x20, #0x1
  4319a8:	ldrh	w0, [x25, x2, lsl #1]
  4319ac:	tst	w1, w0
  4319b0:	b.eq	4319c8 <nftw@plt+0x2ee48>  // b.none
  4319b4:	nop
  4319b8:	ldrb	w0, [x20, #1]!
  4319bc:	ldrh	w0, [x25, x0, lsl #1]
  4319c0:	tst	w1, w0
  4319c4:	b.ne	4319b8 <nftw@plt+0x2ee38>  // b.any
  4319c8:	ldp	x25, x26, [sp, #64]
  4319cc:	ldr	x1, [x28, #64]
  4319d0:	ldr	x0, [sp, #128]
  4319d4:	ldr	x2, [x28]
  4319d8:	sub	x23, x20, x0
  4319dc:	ldr	x3, [x1, #16]
  4319e0:	add	w19, w23, #0x1
  4319e4:	ldr	x0, [x1, #24]
  4319e8:	str	x20, [x2]
  4319ec:	sub	x0, x0, x3
  4319f0:	cmp	x19, x0
  4319f4:	b.hi	431bcc <nftw@plt+0x2f04c>  // b.pmore
  4319f8:	add	x19, x3, x19
  4319fc:	str	x19, [x1, #16]
  431a00:	ldr	x1, [sp, #128]
  431a04:	and	x20, x23, #0xffffffff
  431a08:	mov	x2, x20
  431a0c:	mov	x0, x3
  431a10:	bl	402490 <memcpy@plt>
  431a14:	strb	wzr, [x0, x20]
  431a18:	strb	w21, [x22, #4]
  431a1c:	str	w23, [x22, #8]
  431a20:	str	x0, [x22, #16]
  431a24:	ldp	x19, x20, [sp, #16]
  431a28:	ldp	x21, x22, [sp, #32]
  431a2c:	ldp	x23, x24, [sp, #48]
  431a30:	ldp	x27, x28, [sp, #80]
  431a34:	ldp	x29, x30, [sp], #224
  431a38:	ret
  431a3c:	ldrh	w0, [x25, w1, sxtw #1]
  431a40:	tbz	w0, #9, 4319c8 <nftw@plt+0x2ee48>
  431a44:	ldrb	w0, [x20, #1]
  431a48:	mov	w4, #0x204                 	// #516
  431a4c:	sub	w1, w1, #0x71
  431a50:	add	x2, x20, #0x1
  431a54:	ldrh	w3, [x25, w0, sxtw #1]
  431a58:	tst	w4, w3
  431a5c:	b.eq	432d2c <nftw@plt+0x301ac>  // b.none
  431a60:	mov	w5, #0x43                  	// #67
  431a64:	nop
  431a68:	madd	w1, w1, w5, w0
  431a6c:	ldrb	w0, [x2, #1]!
  431a70:	sub	w1, w1, #0x71
  431a74:	ldrh	w3, [x25, w0, sxtw #1]
  431a78:	tst	w4, w3
  431a7c:	b.ne	431a68 <nftw@plt+0x2eee8>  // b.any
  431a80:	sub	x2, x2, x20
  431a84:	mov	w3, w2
  431a88:	ldr	x0, [x28, #1088]
  431a8c:	add	w3, w3, w1
  431a90:	mov	w4, #0x0                   	// #0
  431a94:	mov	x1, x20
  431a98:	bl	43f578 <nftw@plt+0x3c9f8>
  431a9c:	cbz	x0, 431c98 <nftw@plt+0x2f118>
  431aa0:	ldrb	w0, [x0, #18]
  431aa4:	tbz	w0, #1, 431c98 <nftw@plt+0x2f118>
  431aa8:	ldrb	w0, [x28, #1162]
  431aac:	cbz	w0, 4319c8 <nftw@plt+0x2ee48>
  431ab0:	ldrb	w0, [x28, #18]
  431ab4:	cbnz	w0, 4319c8 <nftw@plt+0x2ee48>
  431ab8:	ldr	w2, [x22]
  431abc:	mov	x0, x28
  431ac0:	adrp	x4, 47c000 <_obstack_memory_used@@Base+0x1abb8>
  431ac4:	mov	w3, #0x0                   	// #0
  431ac8:	add	x4, x4, #0xd40
  431acc:	mov	w1, #0x13                  	// #19
  431ad0:	bl	427670 <nftw@plt+0x24af0>
  431ad4:	ldp	x25, x26, [sp, #64]
  431ad8:	b	4319cc <nftw@plt+0x2ee4c>
  431adc:	cmp	w23, #0x3e
  431ae0:	b.eq	432950 <nftw@plt+0x2fdd0>  // b.none
  431ae4:	cbnz	w2, 431c50 <nftw@plt+0x2f0d0>
  431ae8:	ldr	w0, [x28, #1116]
  431aec:	mov	x20, x19
  431af0:	mov	w21, #0x3d                  	// #61
  431af4:	cmp	w0, #0x15
  431af8:	b.eq	431958 <nftw@plt+0x2edd8>  // b.none
  431afc:	mov	w3, w23
  431b00:	mov	x0, x28
  431b04:	adrp	x2, 47c000 <_obstack_memory_used@@Base+0x1abb8>
  431b08:	mov	w1, #0x2                   	// #2
  431b0c:	add	x2, x2, #0xdc0
  431b10:	bl	427178 <nftw@plt+0x245f8>
  431b14:	ldrb	w0, [x28, #1161]
  431b18:	mov	w21, #0x3d                  	// #61
  431b1c:	cbnz	w0, 431960 <nftw@plt+0x2ede0>
  431b20:	ldrb	w0, [x28, #1199]
  431b24:	cbz	w0, 4319cc <nftw@plt+0x2ee4c>
  431b28:	stp	x25, x26, [sp, #64]
  431b2c:	adrp	x25, 481000 <_obstack_memory_used@@Base+0x1fbb8>
  431b30:	add	x25, x25, #0xaf0
  431b34:	ldrb	w1, [x20]
  431b38:	ldrh	w0, [x25, w1, sxtw #1]
  431b3c:	tbz	w0, #9, 4319c8 <nftw@plt+0x2ee48>
  431b40:	ldrb	w0, [x20, #1]
  431b44:	mov	w4, #0x204                 	// #516
  431b48:	sub	w1, w1, #0x71
  431b4c:	add	x2, x20, #0x1
  431b50:	ldrh	w3, [x25, w0, sxtw #1]
  431b54:	tst	w4, w3
  431b58:	b.eq	432de0 <nftw@plt+0x30260>  // b.none
  431b5c:	mov	w5, #0x43                  	// #67
  431b60:	madd	w1, w1, w5, w0
  431b64:	ldrb	w0, [x2, #1]!
  431b68:	sub	w1, w1, #0x71
  431b6c:	ldrh	w3, [x25, w0, sxtw #1]
  431b70:	tst	w4, w3
  431b74:	b.ne	431b60 <nftw@plt+0x2efe0>  // b.any
  431b78:	sub	x2, x2, x20
  431b7c:	mov	w3, w2
  431b80:	ldr	x0, [x28, #1088]
  431b84:	add	w3, w3, w1
  431b88:	mov	w4, #0x0                   	// #0
  431b8c:	mov	x1, x20
  431b90:	bl	43f578 <nftw@plt+0x3c9f8>
  431b94:	cbz	x0, 4319c8 <nftw@plt+0x2ee48>
  431b98:	ldrb	w0, [x0, #18]
  431b9c:	tbz	w0, #1, 4319c8 <nftw@plt+0x2ee48>
  431ba0:	ldrb	w0, [x28, #18]
  431ba4:	cbnz	w0, 4319c8 <nftw@plt+0x2ee48>
  431ba8:	ldr	w2, [x22]
  431bac:	mov	x0, x28
  431bb0:	adrp	x4, 47c000 <_obstack_memory_used@@Base+0x1abb8>
  431bb4:	mov	w3, #0x0                   	// #0
  431bb8:	add	x4, x4, #0xde8
  431bbc:	mov	w1, #0x17                  	// #23
  431bc0:	bl	427670 <nftw@plt+0x24af0>
  431bc4:	ldp	x25, x26, [sp, #64]
  431bc8:	b	4319cc <nftw@plt+0x2ee4c>
  431bcc:	ldr	x1, [x28, #72]
  431bd0:	add	x0, x28, #0x48
  431bd4:	cbz	x1, 431c10 <nftw@plt+0x2f090>
  431bd8:	add	x4, x19, x19, lsl #1
  431bdc:	mov	x2, #0x1f40                	// #8000
  431be0:	add	x4, x2, x4, lsr #1
  431be4:	nop
  431be8:	ldr	x3, [x1, #8]
  431bec:	ldr	x2, [x1, #24]
  431bf0:	sub	x2, x2, x3
  431bf4:	cmp	x19, x2
  431bf8:	b.hi	431c04 <nftw@plt+0x2f084>  // b.pmore
  431bfc:	cmp	x2, x4
  431c00:	b.ls	43295c <nftw@plt+0x2fddc>  // b.plast
  431c04:	mov	x0, x1
  431c08:	ldr	x1, [x1]
  431c0c:	cbnz	x1, 431be8 <nftw@plt+0x2f068>
  431c10:	mov	x0, #0x1f40                	// #8000
  431c14:	cmp	x19, x0
  431c18:	csel	x20, x19, x0, cs  // cs = hs, nlast
  431c1c:	add	x20, x20, #0x7
  431c20:	and	x20, x20, #0xfffffffffffffff8
  431c24:	add	x0, x20, #0x20
  431c28:	bl	461560 <_obstack_memory_used@@Base+0x118>
  431c2c:	add	x1, x0, x20
  431c30:	mov	x3, x0
  431c34:	stp	x0, x0, [x1, #8]
  431c38:	str	x1, [x1, #24]
  431c3c:	str	xzr, [x0, x20]
  431c40:	ldr	x0, [x28, #64]
  431c44:	str	x0, [x1]
  431c48:	str	x1, [x28, #64]
  431c4c:	b	4319f8 <nftw@plt+0x2ee78>
  431c50:	ldrb	w0, [x28, #18]
  431c54:	cbnz	w0, 431ae8 <nftw@plt+0x2ef68>
  431c58:	mov	x0, x28
  431c5c:	adrp	x2, 47c000 <_obstack_memory_used@@Base+0x1abb8>
  431c60:	mov	w1, #0x0                   	// #0
  431c64:	add	x2, x2, #0xd98
  431c68:	bl	427178 <nftw@plt+0x245f8>
  431c6c:	b	431ae8 <nftw@plt+0x2ef68>
  431c70:	cmp	w0, #0x4c
  431c74:	mov	w21, #0x39                  	// #57
  431c78:	b.eq	43186c <nftw@plt+0x2ecec>  // b.none
  431c7c:	b	43190c <nftw@plt+0x2ed8c>
  431c80:	mov	x0, x28
  431c84:	adrp	x2, 47c000 <_obstack_memory_used@@Base+0x1abb8>
  431c88:	mov	w1, #0x0                   	// #0
  431c8c:	add	x2, x2, #0xd98
  431c90:	bl	427178 <nftw@plt+0x245f8>
  431c94:	b	431950 <nftw@plt+0x2edd0>
  431c98:	ldrb	w1, [x20]
  431c9c:	b	431984 <nftw@plt+0x2ee04>
  431ca0:	ldr	x1, [x28]
  431ca4:	mov	w2, #0x3f                  	// #63
  431ca8:	str	w2, [sp, #172]
  431cac:	cmp	w0, #0x4c
  431cb0:	stp	x25, x26, [sp, #64]
  431cb4:	ldr	w4, [x1, #56]
  431cb8:	ldr	x2, [x1, #48]
  431cbc:	add	x27, x2, x4, lsl #4
  431cc0:	b.ne	432bc0 <nftw@plt+0x30040>  // b.any
  431cc4:	ldr	x24, [sp, #128]
  431cc8:	add	x0, x19, #0x1
  431ccc:	adrp	x25, 47c000 <_obstack_memory_used@@Base+0x1abb8>
  431cd0:	mov	x20, x0
  431cd4:	mov	x21, #0x0                   	// #0
  431cd8:	mov	x19, #0x0                   	// #0
  431cdc:	str	xzr, [sp, #104]
  431ce0:	stp	wzr, wzr, [sp, #152]
  431ce4:	str	x0, [sp, #160]
  431ce8:	add	x0, x25, #0xc78
  431cec:	mov	x25, #0x0                   	// #0
  431cf0:	str	x0, [sp, #112]
  431cf4:	str	wzr, [sp, #168]
  431cf8:	ldr	x0, [x27]
  431cfc:	cmp	x0, x20
  431d00:	b.cs	431d14 <nftw@plt+0x2f194>  // b.hs, b.nlast
  431d04:	ldr	x0, [x27, #16]
  431d08:	add	x27, x27, #0x10
  431d0c:	cmp	x0, x20
  431d10:	b.cc	431d04 <nftw@plt+0x2f184>  // b.lo, b.ul, b.last
  431d14:	b.ne	432dd8 <nftw@plt+0x30258>  // b.any
  431d18:	adrp	x26, 472000 <_obstack_memory_used@@Base+0x10bb8>
  431d1c:	add	x0, x26, #0xd80
  431d20:	str	x0, [sp, #136]
  431d24:	b	431d5c <nftw@plt+0x2f1dc>
  431d28:	cbz	w26, 431d48 <nftw@plt+0x2f1c8>
  431d2c:	adrp	x0, 4a5000 <__environ@@GLIBC_2.17+0xa68>
  431d30:	add	x0, x0, #0x9b0
  431d34:	ldrb	w0, [x0, w26, uxtw]
  431d38:	cbz	w0, 432f78 <nftw@plt+0x303f8>
  431d3c:	str	wzr, [x27, #8]
  431d40:	ldrb	w0, [x28, #1125]
  431d44:	cbnz	w0, 432004 <nftw@plt+0x2f484>
  431d48:	ldr	x0, [x27, #16]
  431d4c:	add	x4, x27, #0x10
  431d50:	cmp	x20, x0
  431d54:	b.ne	431e48 <nftw@plt+0x2f2c8>  // b.any
  431d58:	mov	x27, x4
  431d5c:	ldr	w26, [x27, #8]
  431d60:	cmp	w26, #0x20
  431d64:	b.eq	431d70 <nftw@plt+0x2f1f0>  // b.none
  431d68:	cmp	w26, #0x5c
  431d6c:	b.ne	431d28 <nftw@plt+0x2f1a8>  // b.any
  431d70:	ldr	x0, [sp, #104]
  431d74:	sub	x26, x20, x24
  431d78:	cbz	x0, 43229c <nftw@plt+0x2f71c>
  431d7c:	ldp	x0, x2, [x25, #16]
  431d80:	mov	x23, x26
  431d84:	sub	x2, x2, x0
  431d88:	cmp	x26, x2
  431d8c:	b.hi	4321d4 <nftw@plt+0x2f654>  // b.pmore
  431d90:	mov	x1, x24
  431d94:	mov	x2, x23
  431d98:	bl	402490 <memcpy@plt>
  431d9c:	add	x24, x19, #0x1
  431da0:	ldp	x0, x2, [x25, #16]
  431da4:	add	x0, x0, x23
  431da8:	str	x0, [x25, #16]
  431dac:	cmp	x2, x0
  431db0:	b.eq	43214c <nftw@plt+0x2f5cc>  // b.none
  431db4:	mov	w2, #0x5c                  	// #92
  431db8:	strb	w2, [x0]
  431dbc:	adrp	x0, 47c000 <_obstack_memory_used@@Base+0x1abb8>
  431dc0:	add	x0, x0, #0xc80
  431dc4:	ldr	x1, [x25, #16]
  431dc8:	cmp	x20, x0
  431dcc:	add	x19, x26, x24
  431dd0:	ccmp	x21, #0x10, #0x2, ne  // ne = any
  431dd4:	add	x1, x1, #0x1
  431dd8:	str	x1, [x25, #16]
  431ddc:	b.ls	432694 <nftw@plt+0x2fb14>  // b.plast
  431de0:	ldr	w0, [x27, #8]
  431de4:	ldr	x2, [x25, #24]
  431de8:	cmp	w0, #0x20
  431dec:	b.eq	4320fc <nftw@plt+0x2f57c>  // b.none
  431df0:	cmp	x2, x1
  431df4:	b.eq	431f7c <nftw@plt+0x2f3fc>  // b.none
  431df8:	mov	w2, #0xa                   	// #10
  431dfc:	strb	w2, [x1]
  431e00:	add	x19, x19, #0x1
  431e04:	cmp	x21, #0x10
  431e08:	ldr	x0, [x25, #16]
  431e0c:	mov	x24, x20
  431e10:	add	x0, x0, #0x1
  431e14:	str	x0, [x25, #16]
  431e18:	b.hi	431d48 <nftw@plt+0x2f1c8>  // b.pmore
  431e1c:	ldr	x0, [sp, #136]
  431e20:	cmp	x20, x0
  431e24:	b.eq	431d48 <nftw@plt+0x2f1c8>  // b.none
  431e28:	add	x0, sp, #0xc8
  431e2c:	add	x4, x27, #0x10
  431e30:	strb	w2, [x0, x21]
  431e34:	add	x21, x21, #0x1
  431e38:	ldr	x0, [x27, #16]
  431e3c:	cmp	x20, x0
  431e40:	b.eq	431d58 <nftw@plt+0x2f1d8>  // b.none
  431e44:	nop
  431e48:	mov	x26, x20
  431e4c:	cmp	x21, #0x10
  431e50:	ldrb	w7, [x26], #1
  431e54:	b.ls	432b28 <nftw@plt+0x2ffa8>  // b.plast
  431e58:	ldr	w0, [sp, #152]
  431e5c:	cbz	w0, 4326cc <nftw@plt+0x2fb4c>
  431e60:	ldr	w0, [sp, #152]
  431e64:	cmp	w0, #0x2
  431e68:	b.eq	432970 <nftw@plt+0x2fdf0>  // b.none
  431e6c:	mov	x27, x4
  431e70:	cmp	w7, #0x29
  431e74:	b.eq	432850 <nftw@plt+0x2fcd0>  // b.none
  431e78:	cmp	w7, #0xa
  431e7c:	mov	x20, x26
  431e80:	b.ne	431cf8 <nftw@plt+0x2f178>  // b.any
  431e84:	ldrb	w0, [x28, #16]
  431e88:	cbnz	w0, 432e48 <nftw@plt+0x302c8>
  431e8c:	ldrb	w0, [x28, #25]
  431e90:	cbz	w0, 431ea8 <nftw@plt+0x2f328>
  431e94:	ldr	x0, [x28]
  431e98:	ldr	x1, [x0, #16]
  431e9c:	ldr	x0, [x0, #32]
  431ea0:	cmp	x1, x0
  431ea4:	b.cs	432e48 <nftw@plt+0x302c8>  // b.hs, b.nlast
  431ea8:	ldr	x0, [sp, #104]
  431eac:	sub	x20, x26, x24
  431eb0:	cbz	x0, 432d54 <nftw@plt+0x301d4>
  431eb4:	ldp	x0, x2, [x25, #16]
  431eb8:	mov	x27, x20
  431ebc:	sub	x2, x2, x0
  431ec0:	cmp	x20, x2
  431ec4:	b.hi	432c64 <nftw@plt+0x300e4>  // b.pmore
  431ec8:	mov	x1, x24
  431ecc:	mov	x2, x27
  431ed0:	bl	402490 <memcpy@plt>
  431ed4:	ldr	x0, [x28]
  431ed8:	ldr	x1, [x25, #16]
  431edc:	ldr	x2, [x0]
  431ee0:	add	x7, x1, x27
  431ee4:	ldr	x1, [x0, #32]
  431ee8:	str	x7, [x25, #16]
  431eec:	cmp	x2, x1
  431ef0:	b.cc	432bf4 <nftw@plt+0x30074>  // b.lo, b.ul, b.last
  431ef4:	mov	w1, #0x1                   	// #1
  431ef8:	sub	x26, x26, #0x1
  431efc:	str	x26, [x0]
  431f00:	strb	w1, [x0, #104]
  431f04:	mov	x0, x28
  431f08:	mov	w1, #0x0                   	// #0
  431f0c:	bl	42fa78 <nftw@plt+0x2cef8>
  431f10:	ldrb	w0, [x28, #16]
  431f14:	cbnz	w0, 432a08 <nftw@plt+0x2fe88>
  431f18:	ldr	x0, [x28]
  431f1c:	b	431f3c <nftw@plt+0x2f3bc>
  431f20:	ubfx	x26, x1, #2, #1
  431f24:	mov	x0, x28
  431f28:	bl	425cc0 <nftw@plt+0x23140>
  431f2c:	ldr	x0, [x28]
  431f30:	cmp	x0, #0x0
  431f34:	csinc	w1, w26, wzr, ne  // ne = any
  431f38:	cbnz	w1, 432a08 <nftw@plt+0x2fe88>
  431f3c:	ldrb	w1, [x0, #104]
  431f40:	cbz	w1, 432a84 <nftw@plt+0x2ff04>
  431f44:	ldr	x1, [x0, #16]
  431f48:	ldr	x2, [x0, #32]
  431f4c:	cmp	x1, x2
  431f50:	b.cc	432a78 <nftw@plt+0x2fef8>  // b.lo, b.ul, b.last
  431f54:	ldrb	w4, [x28, #25]
  431f58:	cbnz	w4, 432a08 <nftw@plt+0x2fe88>
  431f5c:	ldr	x4, [x0, #24]
  431f60:	cmp	x4, x2
  431f64:	ccmp	x1, x2, #0x0, ne  // ne = any
  431f68:	ldrb	w1, [x0, #105]
  431f6c:	b.ls	431f20 <nftw@plt+0x2f3a0>  // b.plast
  431f70:	tbnz	w1, #1, 431f20 <nftw@plt+0x2f3a0>
  431f74:	str	x2, [x0, #16]
  431f78:	b	431f20 <nftw@plt+0x2f3a0>
  431f7c:	ldr	x1, [x28, #72]
  431f80:	add	x8, x28, #0x48
  431f84:	mov	x9, #0x1f40                	// #8000
  431f88:	cbz	x1, 431fe0 <nftw@plt+0x2f460>
  431f8c:	nop
  431f90:	ldr	x0, [x1, #8]
  431f94:	mov	x23, x1
  431f98:	ldr	x5, [x1, #24]
  431f9c:	ldr	x1, [x1]
  431fa0:	sub	x5, x5, x0
  431fa4:	sub	x5, x5, #0x1
  431fa8:	cmp	x5, x9
  431fac:	b.hi	431fd8 <nftw@plt+0x2f458>  // b.pmore
  431fb0:	str	x1, [x8]
  431fb4:	str	xzr, [x23]
  431fb8:	str	x0, [x23, #16]
  431fbc:	ldr	x1, [x25, #16]
  431fc0:	str	x23, [x25]
  431fc4:	mov	x25, x23
  431fc8:	sub	x2, x2, x1
  431fcc:	bl	402490 <memcpy@plt>
  431fd0:	ldr	x1, [x23, #16]
  431fd4:	b	431df8 <nftw@plt+0x2f278>
  431fd8:	mov	x8, x23
  431fdc:	cbnz	x1, 431f90 <nftw@plt+0x2f410>
  431fe0:	mov	x0, #0x1f60                	// #8032
  431fe4:	bl	461560 <_obstack_memory_used@@Base+0x118>
  431fe8:	mov	x2, #0x1f40                	// #8000
  431fec:	add	x23, x0, x2
  431ff0:	str	x23, [x23, #24]
  431ff4:	stp	x0, x0, [x23, #8]
  431ff8:	ldr	x2, [x25, #24]
  431ffc:	str	xzr, [x0, #8000]
  432000:	b	431fbc <nftw@plt+0x2f43c>
  432004:	ldr	x0, [sp, #104]
  432008:	sub	x9, x20, x24
  43200c:	cbz	x0, 4325ec <nftw@plt+0x2fa6c>
  432010:	ldp	x0, x2, [x25, #16]
  432014:	mov	x23, x9
  432018:	sub	x2, x2, x0
  43201c:	cmp	x9, x2
  432020:	b.hi	4323ec <nftw@plt+0x2f86c>  // b.pmore
  432024:	mov	x2, x23
  432028:	mov	x1, x24
  43202c:	str	x9, [sp, #120]
  432030:	bl	402490 <memcpy@plt>
  432034:	ldp	x0, x2, [x25, #16]
  432038:	ldr	x9, [sp, #120]
  43203c:	add	x19, x9, x19
  432040:	add	x0, x0, x23
  432044:	str	x0, [x25, #16]
  432048:	sub	x23, x2, x0
  43204c:	cmp	x23, #0x1
  432050:	b.ls	432320 <nftw@plt+0x2f7a0>  // b.plast
  432054:	ldr	x23, [sp, #112]
  432058:	mov	x24, #0x2                   	// #2
  43205c:	mov	x1, x23
  432060:	mov	x2, x24
  432064:	bl	402490 <memcpy@plt>
  432068:	ldr	x0, [x25, #16]
  43206c:	ldr	x1, [sp, #112]
  432070:	add	x9, x0, x24
  432074:	str	x9, [x25, #16]
  432078:	cmp	x20, x1
  43207c:	ccmp	x21, #0x10, #0x2, ne  // ne = any
  432080:	b.ls	432928 <nftw@plt+0x2fda8>  // b.plast
  432084:	and	w24, w26, #0xff
  432088:	cmp	w24, #0x2f
  43208c:	b.ne	432aa0 <nftw@plt+0x2ff20>  // b.any
  432090:	ldr	x0, [x27, #16]
  432094:	cmp	x20, x0
  432098:	b.ne	432b20 <nftw@plt+0x2ffa0>  // b.any
  43209c:	ldr	w0, [x27, #24]
  4320a0:	mov	w1, #0x20                  	// #32
  4320a4:	cmp	w0, #0x5c
  4320a8:	ccmp	w0, w1, #0x4, ne  // ne = any
  4320ac:	b.ne	433080 <nftw@plt+0x30500>  // b.any
  4320b0:	ldr	x2, [x25, #24]
  4320b4:	cmp	x9, x2
  4320b8:	b.eq	4324e0 <nftw@plt+0x2f960>  // b.none
  4320bc:	mov	w2, #0x2f                  	// #47
  4320c0:	strb	w2, [x9]
  4320c4:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x1dbb8>
  4320c8:	add	x0, x0, #0x208
  4320cc:	ldr	x1, [x25, #16]
  4320d0:	cmp	x20, x0
  4320d4:	add	x19, x19, #0x3
  4320d8:	ccmp	x21, #0x10, #0x2, ne  // ne = any
  4320dc:	add	x1, x1, #0x1
  4320e0:	str	x1, [x25, #16]
  4320e4:	b.ls	432138 <nftw@plt+0x2f5b8>  // b.plast
  4320e8:	add	x27, x27, #0x10
  4320ec:	ldr	w0, [x27, #8]
  4320f0:	ldr	x2, [x25, #24]
  4320f4:	cmp	w0, #0x20
  4320f8:	b.ne	431df0 <nftw@plt+0x2f270>  // b.any
  4320fc:	cmp	x1, x2
  432100:	b.eq	432564 <nftw@plt+0x2f9e4>  // b.none
  432104:	mov	w2, #0x20                  	// #32
  432108:	strb	w2, [x1]
  43210c:	adrp	x0, 473000 <_obstack_memory_used@@Base+0x11bb8>
  432110:	add	x0, x0, #0x948
  432114:	ldr	x1, [x25, #16]
  432118:	cmp	x20, x0
  43211c:	add	x19, x19, #0x1
  432120:	ccmp	x21, #0x10, #0x2, ne  // ne = any
  432124:	add	x1, x1, #0x1
  432128:	str	x1, [x25, #16]
  43212c:	b.ls	43293c <nftw@plt+0x2fdbc>  // b.plast
  432130:	ldr	x2, [x25, #24]
  432134:	b	431df0 <nftw@plt+0x2f270>
  432138:	add	x0, sp, #0xc8
  43213c:	add	x27, x27, #0x10
  432140:	strb	w2, [x0, x21]
  432144:	add	x21, x21, #0x1
  432148:	b	4320ec <nftw@plt+0x2f56c>
  43214c:	ldr	x1, [x28, #72]
  432150:	add	x9, x28, #0x48
  432154:	mov	x10, #0x1f40                	// #8000
  432158:	cbz	x1, 4321b0 <nftw@plt+0x2f630>
  43215c:	nop
  432160:	ldr	x0, [x1, #8]
  432164:	mov	x19, x1
  432168:	ldr	x5, [x1, #24]
  43216c:	ldr	x1, [x1]
  432170:	sub	x5, x5, x0
  432174:	sub	x5, x5, #0x1
  432178:	cmp	x5, x10
  43217c:	b.hi	4321a8 <nftw@plt+0x2f628>  // b.pmore
  432180:	str	x1, [x9]
  432184:	str	xzr, [x19]
  432188:	str	x0, [x19, #16]
  43218c:	ldr	x1, [x25, #16]
  432190:	str	x19, [x25]
  432194:	mov	x25, x19
  432198:	sub	x2, x2, x1
  43219c:	bl	402490 <memcpy@plt>
  4321a0:	ldr	x0, [x19, #16]
  4321a4:	b	431db4 <nftw@plt+0x2f234>
  4321a8:	mov	x9, x19
  4321ac:	cbnz	x1, 432160 <nftw@plt+0x2f5e0>
  4321b0:	mov	x0, #0x1f60                	// #8032
  4321b4:	bl	461560 <_obstack_memory_used@@Base+0x118>
  4321b8:	mov	x4, #0x1f40                	// #8000
  4321bc:	add	x19, x0, x4
  4321c0:	str	x19, [x19, #24]
  4321c4:	stp	x0, x0, [x19, #8]
  4321c8:	ldr	x2, [x25, #24]
  4321cc:	str	xzr, [x0, #8000]
  4321d0:	b	43218c <nftw@plt+0x2f60c>
  4321d4:	mov	x1, x24
  4321d8:	str	x2, [sp, #120]
  4321dc:	bl	402490 <memcpy@plt>
  4321e0:	ldp	x0, x13, [x25, #16]
  4321e4:	add	x12, x28, #0x48
  4321e8:	ldr	x2, [sp, #120]
  4321ec:	ldr	x5, [x28, #72]
  4321f0:	sub	x23, x26, x2
  4321f4:	add	x0, x0, x2
  4321f8:	str	x0, [x25, #16]
  4321fc:	sub	x10, x13, x0
  432200:	add	x24, x24, x2
  432204:	add	x10, x23, x10, lsl #1
  432208:	cbz	x5, 432240 <nftw@plt+0x2f6c0>
  43220c:	add	x11, x10, x10, lsl #1
  432210:	mov	x0, #0x1f40                	// #8000
  432214:	add	x11, x0, x11, lsr #1
  432218:	ldr	x0, [x5, #8]
  43221c:	ldr	x1, [x5, #24]
  432220:	sub	x1, x1, x0
  432224:	cmp	x10, x1
  432228:	b.hi	432234 <nftw@plt+0x2f6b4>  // b.pmore
  43222c:	cmp	x1, x11
  432230:	b.ls	4324cc <nftw@plt+0x2f94c>  // b.plast
  432234:	mov	x12, x5
  432238:	ldr	x5, [x5]
  43223c:	cbnz	x5, 432218 <nftw@plt+0x2f698>
  432240:	mov	x0, #0x1f40                	// #8000
  432244:	cmp	x10, x0
  432248:	csel	x10, x10, x0, cs  // cs = hs, nlast
  43224c:	add	x10, x10, #0x7
  432250:	and	x10, x10, #0xfffffffffffffff8
  432254:	str	x10, [sp, #120]
  432258:	add	x0, x10, #0x20
  43225c:	bl	461560 <_obstack_memory_used@@Base+0x118>
  432260:	ldr	x10, [sp, #120]
  432264:	add	x5, x0, x10
  432268:	str	x5, [x5, #24]
  43226c:	stp	x0, x0, [x5, #8]
  432270:	ldr	x13, [x25, #24]
  432274:	str	xzr, [x0, x10]
  432278:	ldr	x1, [x25, #16]
  43227c:	str	x5, [x25]
  432280:	mov	x25, x5
  432284:	str	x5, [sp, #120]
  432288:	sub	x2, x13, x1
  43228c:	bl	402490 <memcpy@plt>
  432290:	ldr	x5, [sp, #120]
  432294:	ldr	x0, [x5, #16]
  432298:	b	431d90 <nftw@plt+0x2f210>
  43229c:	ldr	x25, [x28, #72]
  4322a0:	add	x5, x28, #0x48
  4322a4:	cbz	x25, 4322e0 <nftw@plt+0x2f760>
  4322a8:	add	x2, x26, x26, lsl #1
  4322ac:	mov	x0, #0x1f40                	// #8000
  4322b0:	add	x2, x0, x2, lsr #1
  4322b4:	nop
  4322b8:	ldr	x0, [x25, #8]
  4322bc:	ldr	x1, [x25, #24]
  4322c0:	sub	x1, x1, x0
  4322c4:	cmp	x26, x1
  4322c8:	b.hi	4322d4 <nftw@plt+0x2f754>  // b.pmore
  4322cc:	cmp	x1, x2
  4322d0:	b.ls	432678 <nftw@plt+0x2faf8>  // b.plast
  4322d4:	mov	x5, x25
  4322d8:	ldr	x25, [x25]
  4322dc:	cbnz	x25, 4322b8 <nftw@plt+0x2f738>
  4322e0:	mov	x0, #0x1f40                	// #8000
  4322e4:	cmp	x26, x0
  4322e8:	csel	x1, x26, x0, cs  // cs = hs, nlast
  4322ec:	mov	x23, x26
  4322f0:	add	x1, x1, #0x7
  4322f4:	and	x1, x1, #0xfffffffffffffff8
  4322f8:	str	x1, [sp, #104]
  4322fc:	add	x0, x1, #0x20
  432300:	bl	461560 <_obstack_memory_used@@Base+0x118>
  432304:	ldr	x1, [sp, #104]
  432308:	add	x25, x0, x1
  43230c:	str	x25, [sp, #104]
  432310:	stp	x0, x0, [x25, #8]
  432314:	str	x25, [x25, #24]
  432318:	str	xzr, [x0, x1]
  43231c:	b	431d90 <nftw@plt+0x2f210>
  432320:	ldr	x1, [sp, #112]
  432324:	mov	x2, x23
  432328:	bl	402490 <memcpy@plt>
  43232c:	ldp	x0, x2, [x25, #16]
  432330:	mov	x9, #0x2                   	// #2
  432334:	ldr	x5, [x28, #72]
  432338:	sub	x24, x9, x23
  43233c:	add	x10, x28, #0x48
  432340:	add	x0, x0, x23
  432344:	str	x0, [x25, #16]
  432348:	sub	x8, x2, x0
  43234c:	ldr	x0, [sp, #112]
  432350:	add	x8, x24, x8, lsl #1
  432354:	add	x23, x0, x23
  432358:	cbz	x5, 432390 <nftw@plt+0x2f810>
  43235c:	add	x12, x8, x8, lsl #1
  432360:	mov	x0, #0x1f40                	// #8000
  432364:	add	x12, x0, x12, lsr #1
  432368:	ldr	x0, [x5, #8]
  43236c:	ldr	x1, [x5, #24]
  432370:	sub	x1, x1, x0
  432374:	cmp	x8, x1
  432378:	b.hi	432384 <nftw@plt+0x2f804>  // b.pmore
  43237c:	cmp	x1, x12
  432380:	b.ls	4326a4 <nftw@plt+0x2fb24>  // b.plast
  432384:	mov	x10, x5
  432388:	ldr	x5, [x5]
  43238c:	cbnz	x5, 432368 <nftw@plt+0x2f7e8>
  432390:	mov	x1, #0x1f40                	// #8000
  432394:	cmp	x8, x1
  432398:	csel	x1, x8, x1, cs  // cs = hs, nlast
  43239c:	add	x1, x1, #0x7
  4323a0:	and	x1, x1, #0xfffffffffffffff8
  4323a4:	str	x1, [sp, #120]
  4323a8:	add	x0, x1, #0x20
  4323ac:	bl	461560 <_obstack_memory_used@@Base+0x118>
  4323b0:	ldr	x1, [sp, #120]
  4323b4:	add	x5, x0, x1
  4323b8:	str	x5, [x5, #24]
  4323bc:	stp	x0, x0, [x5, #8]
  4323c0:	ldr	x2, [x25, #24]
  4323c4:	str	xzr, [x0, x1]
  4323c8:	ldr	x1, [x25, #16]
  4323cc:	str	x5, [x25]
  4323d0:	mov	x25, x5
  4323d4:	str	x5, [sp, #120]
  4323d8:	sub	x2, x2, x1
  4323dc:	bl	402490 <memcpy@plt>
  4323e0:	ldr	x5, [sp, #120]
  4323e4:	ldr	x0, [x5, #16]
  4323e8:	b	43205c <nftw@plt+0x2f4dc>
  4323ec:	mov	x1, x24
  4323f0:	str	x2, [sp, #120]
  4323f4:	str	x9, [sp, #144]
  4323f8:	bl	402490 <memcpy@plt>
  4323fc:	ldp	x11, x14, [x25, #16]
  432400:	add	x12, x28, #0x48
  432404:	ldr	x2, [sp, #120]
  432408:	ldr	x5, [x28, #72]
  43240c:	add	x24, x24, x2
  432410:	ldr	x9, [sp, #144]
  432414:	add	x11, x11, x2
  432418:	str	x11, [x25, #16]
  43241c:	sub	x11, x14, x11
  432420:	sub	x23, x9, x2
  432424:	add	x11, x23, x11, lsl #1
  432428:	cbz	x5, 432460 <nftw@plt+0x2f8e0>
  43242c:	add	x13, x11, x11, lsl #1
  432430:	mov	x0, #0x1f40                	// #8000
  432434:	add	x13, x0, x13, lsr #1
  432438:	ldr	x0, [x5, #8]
  43243c:	ldr	x1, [x5, #24]
  432440:	sub	x1, x1, x0
  432444:	cmp	x11, x1
  432448:	b.hi	432454 <nftw@plt+0x2f8d4>  // b.pmore
  43244c:	cmp	x1, x13
  432450:	b.ls	4326b8 <nftw@plt+0x2fb38>  // b.plast
  432454:	mov	x12, x5
  432458:	ldr	x5, [x5]
  43245c:	cbnz	x5, 432438 <nftw@plt+0x2f8b8>
  432460:	mov	x1, #0x1f40                	// #8000
  432464:	cmp	x11, x1
  432468:	csel	x1, x11, x1, cs  // cs = hs, nlast
  43246c:	str	x9, [sp, #144]
  432470:	add	x1, x1, #0x7
  432474:	and	x1, x1, #0xfffffffffffffff8
  432478:	str	x1, [sp, #120]
  43247c:	add	x0, x1, #0x20
  432480:	bl	461560 <_obstack_memory_used@@Base+0x118>
  432484:	ldr	x1, [sp, #120]
  432488:	ldr	x9, [sp, #144]
  43248c:	add	x5, x0, x1
  432490:	str	x5, [x5, #24]
  432494:	stp	x0, x0, [x5, #8]
  432498:	ldr	x14, [x25, #24]
  43249c:	str	xzr, [x0, x1]
  4324a0:	ldr	x1, [x25, #16]
  4324a4:	str	x5, [x25]
  4324a8:	mov	x25, x5
  4324ac:	str	x5, [sp, #120]
  4324b0:	sub	x2, x14, x1
  4324b4:	str	x9, [sp, #144]
  4324b8:	bl	402490 <memcpy@plt>
  4324bc:	ldr	x5, [sp, #120]
  4324c0:	ldr	x9, [sp, #144]
  4324c4:	ldr	x0, [x5, #16]
  4324c8:	b	432024 <nftw@plt+0x2f4a4>
  4324cc:	ldr	x1, [x5]
  4324d0:	str	x1, [x12]
  4324d4:	str	xzr, [x5]
  4324d8:	str	x0, [x5, #16]
  4324dc:	b	432278 <nftw@plt+0x2f6f8>
  4324e0:	ldr	x1, [x28, #72]
  4324e4:	add	x9, x28, #0x48
  4324e8:	mov	x8, #0x1f40                	// #8000
  4324ec:	cbz	x1, 432540 <nftw@plt+0x2f9c0>
  4324f0:	ldr	x0, [x1, #8]
  4324f4:	mov	x23, x1
  4324f8:	ldr	x5, [x1, #24]
  4324fc:	ldr	x1, [x1]
  432500:	sub	x5, x5, x0
  432504:	sub	x5, x5, #0x1
  432508:	cmp	x5, x8
  43250c:	b.hi	432538 <nftw@plt+0x2f9b8>  // b.pmore
  432510:	str	x1, [x9]
  432514:	str	xzr, [x23]
  432518:	str	x0, [x23, #16]
  43251c:	ldr	x1, [x25, #16]
  432520:	str	x23, [x25]
  432524:	mov	x25, x23
  432528:	sub	x2, x2, x1
  43252c:	bl	402490 <memcpy@plt>
  432530:	ldr	x9, [x23, #16]
  432534:	b	4320bc <nftw@plt+0x2f53c>
  432538:	mov	x9, x23
  43253c:	cbnz	x1, 4324f0 <nftw@plt+0x2f970>
  432540:	mov	x0, #0x1f60                	// #8032
  432544:	bl	461560 <_obstack_memory_used@@Base+0x118>
  432548:	mov	x1, #0x1f40                	// #8000
  43254c:	add	x23, x0, x1
  432550:	str	x23, [x23, #24]
  432554:	stp	x0, x0, [x23, #8]
  432558:	ldr	x2, [x25, #24]
  43255c:	str	xzr, [x0, #8000]
  432560:	b	43251c <nftw@plt+0x2f99c>
  432564:	ldr	x1, [x28, #72]
  432568:	add	x8, x28, #0x48
  43256c:	mov	x9, #0x1f40                	// #8000
  432570:	cbz	x1, 4325c8 <nftw@plt+0x2fa48>
  432574:	nop
  432578:	ldr	x0, [x1, #8]
  43257c:	mov	x23, x1
  432580:	ldr	x5, [x1, #24]
  432584:	ldr	x1, [x1]
  432588:	sub	x5, x5, x0
  43258c:	sub	x5, x5, #0x1
  432590:	cmp	x5, x9
  432594:	b.hi	4325c0 <nftw@plt+0x2fa40>  // b.pmore
  432598:	str	x1, [x8]
  43259c:	str	xzr, [x23]
  4325a0:	str	x0, [x23, #16]
  4325a4:	ldr	x1, [x25, #16]
  4325a8:	str	x23, [x25]
  4325ac:	mov	x25, x23
  4325b0:	sub	x2, x2, x1
  4325b4:	bl	402490 <memcpy@plt>
  4325b8:	ldr	x1, [x23, #16]
  4325bc:	b	432104 <nftw@plt+0x2f584>
  4325c0:	mov	x8, x23
  4325c4:	cbnz	x1, 432578 <nftw@plt+0x2f9f8>
  4325c8:	mov	x0, #0x1f60                	// #8032
  4325cc:	bl	461560 <_obstack_memory_used@@Base+0x118>
  4325d0:	mov	x3, #0x1f40                	// #8000
  4325d4:	add	x23, x0, x3
  4325d8:	str	x23, [x23, #24]
  4325dc:	stp	x0, x0, [x23, #8]
  4325e0:	ldr	x2, [x25, #24]
  4325e4:	str	xzr, [x0, #8000]
  4325e8:	b	4325a4 <nftw@plt+0x2fa24>
  4325ec:	ldr	x25, [x28, #72]
  4325f0:	add	x2, x28, #0x48
  4325f4:	cbz	x25, 432630 <nftw@plt+0x2fab0>
  4325f8:	add	x5, x9, x9, lsl #1
  4325fc:	mov	x0, #0x1f40                	// #8000
  432600:	add	x5, x0, x5, lsr #1
  432604:	nop
  432608:	ldr	x0, [x25, #8]
  43260c:	ldr	x1, [x25, #24]
  432610:	sub	x1, x1, x0
  432614:	cmp	x9, x1
  432618:	b.hi	432624 <nftw@plt+0x2faa4>  // b.pmore
  43261c:	cmp	x1, x5
  432620:	b.ls	43290c <nftw@plt+0x2fd8c>  // b.plast
  432624:	mov	x2, x25
  432628:	ldr	x25, [x25]
  43262c:	cbnz	x25, 432608 <nftw@plt+0x2fa88>
  432630:	mov	x0, #0x1f40                	// #8000
  432634:	cmp	x9, x0
  432638:	csel	x1, x9, x0, cs  // cs = hs, nlast
  43263c:	mov	x23, x9
  432640:	add	x1, x1, #0x7
  432644:	str	x9, [sp, #120]
  432648:	and	x1, x1, #0xfffffffffffffff8
  43264c:	str	x1, [sp, #104]
  432650:	add	x0, x1, #0x20
  432654:	bl	461560 <_obstack_memory_used@@Base+0x118>
  432658:	ldr	x1, [sp, #104]
  43265c:	ldr	x9, [sp, #120]
  432660:	add	x25, x0, x1
  432664:	str	x25, [sp, #104]
  432668:	stp	x0, x0, [x25, #8]
  43266c:	str	x25, [x25, #24]
  432670:	str	xzr, [x0, x1]
  432674:	b	432024 <nftw@plt+0x2f4a4>
  432678:	ldr	x1, [x25]
  43267c:	str	x1, [x5]
  432680:	mov	x23, x26
  432684:	str	xzr, [x25]
  432688:	str	x0, [x25, #16]
  43268c:	str	x25, [sp, #104]
  432690:	b	431d90 <nftw@plt+0x2f210>
  432694:	add	x0, sp, #0xc8
  432698:	strb	w2, [x0, x21]
  43269c:	add	x21, x21, #0x1
  4326a0:	b	431de0 <nftw@plt+0x2f260>
  4326a4:	ldr	x1, [x5]
  4326a8:	str	x1, [x10]
  4326ac:	str	xzr, [x5]
  4326b0:	str	x0, [x5, #16]
  4326b4:	b	4323c8 <nftw@plt+0x2f848>
  4326b8:	ldr	x1, [x5]
  4326bc:	str	x1, [x12]
  4326c0:	str	xzr, [x5]
  4326c4:	str	x0, [x5, #16]
  4326c8:	b	4324a0 <nftw@plt+0x2f920>
  4326cc:	ldr	w0, [sp, #156]
  4326d0:	mov	w1, w0
  4326d4:	cmp	x21, w0, uxtw
  4326d8:	b.ls	4329fc <nftw@plt+0x2fe7c>  // b.plast
  4326dc:	add	w2, w0, #0x1
  4326e0:	add	x10, sp, #0xb0
  4326e4:	sub	x14, x2, #0x1
  4326e8:	mov	x9, #0xffffffff77ffffff    	// #-2281701377
  4326ec:	add	x2, sp, #0xc8
  4326f0:	mov	x7, #0xfcee00000000        	// #278099132416000
  4326f4:	add	x13, x10, x1
  4326f8:	add	x11, x2, x1
  4326fc:	mov	x12, #0x0                   	// #0
  432700:	mov	x2, #0x1                   	// #1
  432704:	movk	x9, #0x3fff, lsl #48
  432708:	movk	x7, #0xffff, lsl #48
  43270c:	ldrb	w5, [x11, x12]
  432710:	strb	w5, [x13, x12]
  432714:	cmp	w5, #0x3f
  432718:	b.hi	432868 <nftw@plt+0x2fce8>  // b.pmore
  43271c:	cmp	w5, #0x20
  432720:	b.hi	4327fc <nftw@plt+0x2fc7c>  // b.pmore
  432724:	cmp	w5, #0x28
  432728:	b.eq	432bd4 <nftw@plt+0x30054>  // b.none
  43272c:	ldr	x1, [x28]
  432730:	cmp	w0, #0x10
  432734:	ldr	w2, [x22]
  432738:	ldr	x3, [x1, #8]
  43273c:	sub	x26, x26, x3
  432740:	add	w26, w26, #0x1
  432744:	b.eq	4328a8 <nftw@plt+0x2fd28>  // b.none
  432748:	cmp	w5, #0xa
  43274c:	b.eq	432d38 <nftw@plt+0x301b8>  // b.none
  432750:	adrp	x4, 47c000 <_obstack_memory_used@@Base+0x1abb8>
  432754:	mov	w3, w26
  432758:	add	x4, x4, #0xcf8
  43275c:	mov	x0, x28
  432760:	mov	w1, #0x3                   	// #3
  432764:	bl	4275f8 <nftw@plt+0x24a78>
  432768:	ldr	x0, [x28, #64]
  43276c:	ldr	x2, [sp, #128]
  432770:	ldr	x1, [sp, #160]
  432774:	ldr	x4, [x28]
  432778:	sub	x2, x1, x2
  43277c:	sub	x5, x1, #0x1
  432780:	sub	w20, w2, #0x1
  432784:	ldr	x3, [x0, #16]
  432788:	and	x19, x2, #0xffffffff
  43278c:	ldr	x1, [x0, #24]
  432790:	str	x5, [x4]
  432794:	sub	x1, x1, x3
  432798:	cmp	x1, w2, uxtw
  43279c:	b.cc	432b38 <nftw@plt+0x2ffb8>  // b.lo, b.ul, b.last
  4327a0:	ldr	x1, [sp, #128]
  4327a4:	add	x19, x3, x19
  4327a8:	str	x19, [x0, #16]
  4327ac:	mov	w2, w20
  4327b0:	mov	x0, x3
  4327b4:	bl	402490 <memcpy@plt>
  4327b8:	mov	x3, x0
  4327bc:	strb	wzr, [x0, w20, uxtw]
  4327c0:	mov	w0, #0x3d                  	// #61
  4327c4:	strb	w0, [x22, #4]
  4327c8:	ldr	x0, [sp, #104]
  4327cc:	str	w20, [x22, #8]
  4327d0:	str	x3, [x22, #16]
  4327d4:	cbz	x0, 432bb8 <nftw@plt+0x30038>
  4327d8:	mov	x1, x0
  4327dc:	ldr	x0, [x0]
  4327e0:	cbnz	x0, 4327d8 <nftw@plt+0x2fc58>
  4327e4:	ldr	x0, [x28, #72]
  4327e8:	ldp	x25, x26, [sp, #64]
  4327ec:	str	x0, [x1]
  4327f0:	ldr	x0, [sp, #104]
  4327f4:	str	x0, [x28, #72]
  4327f8:	b	431a24 <nftw@plt+0x2eea4>
  4327fc:	lsl	x1, x2, x5
  432800:	tst	x1, x7
  432804:	b.eq	432724 <nftw@plt+0x2fba4>  // b.none
  432808:	cmp	w0, #0xf
  43280c:	b.hi	432724 <nftw@plt+0x2fba4>  // b.pmore
  432810:	add	x12, x12, #0x1
  432814:	add	w0, w0, #0x1
  432818:	add	x1, x14, x12
  43281c:	cmp	x21, x1
  432820:	b.hi	43270c <nftw@plt+0x2fb8c>  // b.pmore
  432824:	mov	x27, x4
  432828:	mov	x20, x26
  43282c:	str	w0, [sp, #156]
  432830:	b	431cf8 <nftw@plt+0x2f178>
  432834:	ldrb	w1, [x3, #1]
  432838:	add	x19, x3, #0x2
  43283c:	cmp	w1, #0x38
  432840:	b.ne	4318f4 <nftw@plt+0x2ed74>  // b.any
  432844:	ldrb	w1, [x3, #2]
  432848:	add	x19, x3, #0x3
  43284c:	b	4318f4 <nftw@plt+0x2ed74>
  432850:	mov	w0, #0x2                   	// #2
  432854:	mov	x20, x26
  432858:	mov	x21, #0x0                   	// #0
  43285c:	str	w0, [sp, #152]
  432860:	str	wzr, [sp, #168]
  432864:	b	431cf8 <nftw@plt+0x2f178>
  432868:	sub	w1, w5, #0x41
  43286c:	and	w1, w1, #0xff
  432870:	cmp	w1, #0x3d
  432874:	b.hi	43288c <nftw@plt+0x2fd0c>  // b.pmore
  432878:	lsl	x1, x2, x1
  43287c:	tst	x1, x9
  432880:	b.eq	43288c <nftw@plt+0x2fd0c>  // b.none
  432884:	cmp	w0, #0xf
  432888:	b.ls	432810 <nftw@plt+0x2fc90>  // b.plast
  43288c:	ldr	x1, [x28]
  432890:	cmp	w0, #0x10
  432894:	ldr	w2, [x22]
  432898:	ldr	x3, [x1, #8]
  43289c:	sub	x26, x26, x3
  4328a0:	add	w26, w26, #0x1
  4328a4:	b.ne	432750 <nftw@plt+0x2fbd0>  // b.any
  4328a8:	mov	w3, w26
  4328ac:	mov	x0, x28
  4328b0:	adrp	x4, 47c000 <_obstack_memory_used@@Base+0x1abb8>
  4328b4:	mov	w1, #0x3                   	// #3
  4328b8:	add	x4, x4, #0xc98
  4328bc:	bl	4275f8 <nftw@plt+0x24a78>
  4328c0:	b	432768 <nftw@plt+0x2fbe8>
  4328c4:	cmp	w0, #0x4c
  4328c8:	mov	w21, #0x3f                  	// #63
  4328cc:	b.eq	43186c <nftw@plt+0x2ecec>  // b.none
  4328d0:	cmp	w0, #0x55
  4328d4:	mov	w21, #0x41                  	// #65
  4328d8:	b.eq	43186c <nftw@plt+0x2ecec>  // b.none
  4328dc:	nop
  4328e0:	cmp	w0, #0x75
  4328e4:	mov	w23, #0x22                  	// #34
  4328e8:	mov	w21, #0x3e                  	// #62
  4328ec:	b.ne	43186c <nftw@plt+0x2ecec>  // b.any
  4328f0:	ldr	x0, [sp, #128]
  4328f4:	mov	w21, #0x42                  	// #66
  4328f8:	ldrb	w1, [x0, #1]
  4328fc:	mov	w0, #0x40                  	// #64
  432900:	cmp	w1, #0x38
  432904:	csel	w21, w21, w0, eq  // eq = none
  432908:	b	43186c <nftw@plt+0x2ecec>
  43290c:	ldr	x1, [x25]
  432910:	str	x1, [x2]
  432914:	mov	x23, x9
  432918:	str	xzr, [x25]
  43291c:	str	x0, [x25, #16]
  432920:	str	x25, [sp, #104]
  432924:	b	432024 <nftw@plt+0x2f4a4>
  432928:	add	x1, sp, #0xc8
  43292c:	mov	w0, #0x3f3f                	// #16191
  432930:	strh	w0, [x1, x21]
  432934:	add	x21, x21, #0x2
  432938:	b	432084 <nftw@plt+0x2f504>
  43293c:	add	x0, sp, #0xc8
  432940:	strb	w2, [x0, x21]
  432944:	add	x21, x21, #0x1
  432948:	ldr	x2, [x25, #24]
  43294c:	b	431df0 <nftw@plt+0x2f270>
  432950:	mov	w0, #0x3                   	// #3
  432954:	strb	w0, [x22, #4]
  432958:	b	431a24 <nftw@plt+0x2eea4>
  43295c:	ldr	x2, [x1]
  432960:	str	x2, [x0]
  432964:	str	xzr, [x1]
  432968:	str	x3, [x1, #16]
  43296c:	b	431c40 <nftw@plt+0x2f0c0>
  432970:	ldr	w1, [sp, #156]
  432974:	ldr	w0, [sp, #168]
  432978:	cmp	w1, w0
  43297c:	b.cc	432e70 <nftw@plt+0x302f0>  // b.lo, b.ul, b.last
  432980:	cmp	x21, w0, uxtw
  432984:	mov	w5, w0
  432988:	b.ls	432f90 <nftw@plt+0x30410>  // b.plast
  43298c:	add	w0, w0, #0x1
  432990:	add	x10, sp, #0xb0
  432994:	sub	x5, x5, x0
  432998:	add	x1, sp, #0xc8
  43299c:	add	x9, x1, x5
  4329a0:	add	x5, x10, x5
  4329a4:	b	4329c4 <nftw@plt+0x2fe44>
  4329a8:	ldr	w1, [sp, #156]
  4329ac:	cmp	w1, w0
  4329b0:	b.cc	432e70 <nftw@plt+0x302f0>  // b.lo, b.ul, b.last
  4329b4:	cmp	x21, x0
  4329b8:	add	x1, x0, #0x1
  4329bc:	b.ls	4329e4 <nftw@plt+0x2fe64>  // b.plast
  4329c0:	mov	x0, x1
  4329c4:	ldrb	w2, [x9, x0]
  4329c8:	sub	w10, w0, #0x1
  4329cc:	ldrb	w1, [x5, x0]
  4329d0:	str	w0, [sp, #168]
  4329d4:	cmp	w2, w1
  4329d8:	b.eq	4329a8 <nftw@plt+0x2fe28>  // b.none
  4329dc:	mov	w0, w10
  4329e0:	str	w10, [sp, #168]
  4329e4:	cmp	x21, x0
  4329e8:	b.eq	4329fc <nftw@plt+0x2fe7c>  // b.none
  4329ec:	mov	w0, #0x1                   	// #1
  4329f0:	mov	x21, #0x11                  	// #17
  4329f4:	str	w0, [sp, #152]
  4329f8:	b	431e6c <nftw@plt+0x2f2ec>
  4329fc:	mov	x27, x4
  432a00:	mov	x20, x26
  432a04:	b	431cf8 <nftw@plt+0x2f178>
  432a08:	ldr	x1, [x28, #40]
  432a0c:	mov	w2, #0x40                  	// #64
  432a10:	ldr	x0, [sp, #104]
  432a14:	mov	w3, #0x16                  	// #22
  432a18:	ldr	w1, [x1, #60]
  432a1c:	strb	w3, [x22, #4]
  432a20:	strh	w2, [x22, #6]
  432a24:	ldr	w2, [x22]
  432a28:	str	w1, [x22]
  432a2c:	mov	x1, x0
  432a30:	ldr	x0, [x0]
  432a34:	cbnz	x0, 432a2c <nftw@plt+0x2feac>
  432a38:	ldr	x0, [x28, #72]
  432a3c:	adrp	x4, 47c000 <_obstack_memory_used@@Base+0x1abb8>
  432a40:	ldp	x19, x20, [sp, #16]
  432a44:	add	x4, x4, #0xd28
  432a48:	ldp	x21, x22, [sp, #32]
  432a4c:	mov	w3, #0x0                   	// #0
  432a50:	ldp	x23, x24, [sp, #48]
  432a54:	ldp	x25, x26, [sp, #64]
  432a58:	str	x0, [x1]
  432a5c:	ldr	x0, [sp, #104]
  432a60:	str	x0, [x28, #72]
  432a64:	mov	x0, x28
  432a68:	mov	w1, #0x3                   	// #3
  432a6c:	ldp	x27, x28, [sp, #80]
  432a70:	ldp	x29, x30, [sp], #224
  432a74:	b	4275f8 <nftw@plt+0x24a78>
  432a78:	mov	x0, x28
  432a7c:	bl	42f460 <nftw@plt+0x2c8e0>
  432a80:	ldr	x0, [x28]
  432a84:	add	x19, x19, x20
  432a88:	ldr	x1, [x0, #48]
  432a8c:	ldr	w4, [x0, #56]
  432a90:	ldr	x24, [x0]
  432a94:	add	x27, x1, x4, lsl #4
  432a98:	mov	x20, x24
  432a9c:	b	431cf8 <nftw@plt+0x2f178>
  432aa0:	and	w7, w26, #0xff
  432aa4:	ldr	x0, [x25, #24]
  432aa8:	add	x26, x20, #0x1
  432aac:	cmp	x9, x0
  432ab0:	b.eq	432c40 <nftw@plt+0x300c0>  // b.none
  432ab4:	strb	w24, [x9]
  432ab8:	add	x19, x19, #0x3
  432abc:	cmp	x21, #0x10
  432ac0:	ldr	x0, [x25, #16]
  432ac4:	add	x0, x0, #0x1
  432ac8:	str	x0, [x25, #16]
  432acc:	b.ls	432e00 <nftw@plt+0x30280>  // b.plast
  432ad0:	mov	x4, x27
  432ad4:	mov	x24, x26
  432ad8:	b	431e58 <nftw@plt+0x2f2d8>
  432adc:	ldr	x1, [x28]
  432ae0:	stp	x25, x26, [sp, #64]
  432ae4:	ldr	x2, [x1, #48]
  432ae8:	ldr	w4, [x1, #56]
  432aec:	add	x27, x2, x4, lsl #4
  432af0:	cmp	w0, #0x75
  432af4:	mov	w0, #0x3e                  	// #62
  432af8:	str	w0, [sp, #172]
  432afc:	b.ne	431cc4 <nftw@plt+0x2f144>  // b.any
  432b00:	ldr	x0, [sp, #128]
  432b04:	mov	w1, #0x42                  	// #66
  432b08:	ldrb	w2, [x0, #1]
  432b0c:	mov	w0, #0x40                  	// #64
  432b10:	cmp	w2, #0x38
  432b14:	csel	w0, w1, w0, eq  // eq = none
  432b18:	str	w0, [sp, #172]
  432b1c:	b	431cc4 <nftw@plt+0x2f144>
  432b20:	mov	w7, w24
  432b24:	b	432aa4 <nftw@plt+0x2ff24>
  432b28:	add	x0, sp, #0xc8
  432b2c:	strb	w7, [x0, x21]
  432b30:	add	x21, x21, #0x1
  432b34:	b	431e58 <nftw@plt+0x2f2d8>
  432b38:	ldr	x0, [x28, #72]
  432b3c:	add	x2, x28, #0x48
  432b40:	cbz	x0, 432b78 <nftw@plt+0x2fff8>
  432b44:	add	x4, x19, x19, lsl #1
  432b48:	mov	x1, #0x1f40                	// #8000
  432b4c:	add	x4, x1, x4, lsr #1
  432b50:	ldr	x3, [x0, #8]
  432b54:	ldr	x1, [x0, #24]
  432b58:	sub	x1, x1, x3
  432b5c:	cmp	x19, x1
  432b60:	b.hi	432b6c <nftw@plt+0x2ffec>  // b.pmore
  432b64:	cmp	x1, x4
  432b68:	b.ls	432e10 <nftw@plt+0x30290>  // b.plast
  432b6c:	mov	x2, x0
  432b70:	ldr	x0, [x0]
  432b74:	cbnz	x0, 432b50 <nftw@plt+0x2ffd0>
  432b78:	mov	x0, #0x1f40                	// #8000
  432b7c:	cmp	x19, x0
  432b80:	csel	x21, x19, x0, cs  // cs = hs, nlast
  432b84:	add	x21, x21, #0x7
  432b88:	and	x21, x21, #0xfffffffffffffff8
  432b8c:	add	x0, x21, #0x20
  432b90:	bl	461560 <_obstack_memory_used@@Base+0x118>
  432b94:	mov	x3, x0
  432b98:	add	x0, x0, x21
  432b9c:	stp	x3, x3, [x0, #8]
  432ba0:	str	x0, [x0, #24]
  432ba4:	str	xzr, [x3, x21]
  432ba8:	ldr	x1, [x28, #64]
  432bac:	str	x1, [x0]
  432bb0:	str	x0, [x28, #64]
  432bb4:	b	4327a0 <nftw@plt+0x2fc20>
  432bb8:	ldp	x25, x26, [sp, #64]
  432bbc:	b	431a24 <nftw@plt+0x2eea4>
  432bc0:	mov	w1, #0x41                  	// #65
  432bc4:	str	w1, [sp, #172]
  432bc8:	cmp	w0, #0x55
  432bcc:	b.eq	431cc4 <nftw@plt+0x2f144>  // b.none
  432bd0:	b	432af0 <nftw@plt+0x2ff70>
  432bd4:	mov	w1, #0x22                  	// #34
  432bd8:	mov	w2, #0x1                   	// #1
  432bdc:	mov	x27, x4
  432be0:	mov	x20, x26
  432be4:	mov	x21, #0x11                  	// #17
  432be8:	strb	w1, [x10, w0, uxtw]
  432bec:	stp	w2, w0, [sp, #152]
  432bf0:	b	431cf8 <nftw@plt+0x2f178>
  432bf4:	ldr	x0, [x28, #40]
  432bf8:	mov	w5, #0x18                  	// #24
  432bfc:	mov	w2, #0x0                   	// #0
  432c00:	ldr	w1, [x0, #12]
  432c04:	ldr	x7, [x0]
  432c08:	sub	w1, w1, #0x1
  432c0c:	ldr	w4, [x0, #60]
  432c10:	smull	x1, w1, w5
  432c14:	add	x5, x7, x1
  432c18:	ldr	w7, [x7, x1]
  432c1c:	ldrb	w1, [x5, #6]
  432c20:	ldr	w5, [x5, #16]
  432c24:	sub	w4, w4, w7
  432c28:	add	w5, w5, #0x1
  432c2c:	lsr	w1, w4, w1
  432c30:	add	w1, w1, w5
  432c34:	bl	4359a8 <nftw@plt+0x32e28>
  432c38:	ldr	x0, [x28]
  432c3c:	b	431ef4 <nftw@plt+0x2f374>
  432c40:	mov	x1, x25
  432c44:	mov	x0, x28
  432c48:	mov	x2, #0x1                   	// #1
  432c4c:	str	w7, [sp, #120]
  432c50:	bl	431550 <nftw@plt+0x2e9d0>
  432c54:	mov	x25, x0
  432c58:	ldr	w7, [sp, #120]
  432c5c:	ldr	x9, [x0, #16]
  432c60:	b	432ab4 <nftw@plt+0x2ff34>
  432c64:	mov	x1, x24
  432c68:	str	x2, [sp, #120]
  432c6c:	bl	402490 <memcpy@plt>
  432c70:	ldp	x0, x11, [x25, #16]
  432c74:	add	x9, x28, #0x48
  432c78:	ldr	x2, [sp, #120]
  432c7c:	ldr	x4, [x28, #72]
  432c80:	sub	x27, x20, x2
  432c84:	add	x0, x0, x2
  432c88:	str	x0, [x25, #16]
  432c8c:	sub	x0, x11, x0
  432c90:	add	x24, x24, x2
  432c94:	add	x5, x27, x0, lsl #1
  432c98:	cbz	x4, 432cd0 <nftw@plt+0x30150>
  432c9c:	add	x10, x5, x5, lsl #1
  432ca0:	mov	x0, #0x1f40                	// #8000
  432ca4:	add	x10, x0, x10, lsr #1
  432ca8:	ldr	x0, [x4, #8]
  432cac:	ldr	x1, [x4, #24]
  432cb0:	sub	x1, x1, x0
  432cb4:	cmp	x5, x1
  432cb8:	b.hi	432cc4 <nftw@plt+0x30144>  // b.pmore
  432cbc:	cmp	x1, x10
  432cc0:	b.ls	432dec <nftw@plt+0x3026c>  // b.plast
  432cc4:	mov	x9, x4
  432cc8:	ldr	x4, [x4]
  432ccc:	cbnz	x4, 432ca8 <nftw@plt+0x30128>
  432cd0:	mov	x1, #0x1f40                	// #8000
  432cd4:	cmp	x5, x1
  432cd8:	csel	x1, x5, x1, cs  // cs = hs, nlast
  432cdc:	add	x1, x1, #0x7
  432ce0:	and	x1, x1, #0xfffffffffffffff8
  432ce4:	str	x1, [sp, #120]
  432ce8:	add	x0, x1, #0x20
  432cec:	bl	461560 <_obstack_memory_used@@Base+0x118>
  432cf0:	ldr	x1, [sp, #120]
  432cf4:	add	x4, x0, x1
  432cf8:	str	x4, [x4, #24]
  432cfc:	stp	x0, x0, [x4, #8]
  432d00:	ldr	x11, [x25, #24]
  432d04:	str	xzr, [x0, x1]
  432d08:	ldr	x1, [x25, #16]
  432d0c:	str	x4, [x25]
  432d10:	mov	x25, x4
  432d14:	str	x4, [sp, #120]
  432d18:	sub	x2, x11, x1
  432d1c:	bl	402490 <memcpy@plt>
  432d20:	ldr	x4, [sp, #120]
  432d24:	ldr	x0, [x4, #16]
  432d28:	b	431ec8 <nftw@plt+0x2f348>
  432d2c:	mov	x2, #0x1                   	// #1
  432d30:	mov	w3, w2
  432d34:	b	431a88 <nftw@plt+0x2ef08>
  432d38:	mov	w3, w26
  432d3c:	mov	x0, x28
  432d40:	adrp	x4, 47c000 <_obstack_memory_used@@Base+0x1abb8>
  432d44:	mov	w1, #0x3                   	// #3
  432d48:	add	x4, x4, #0xcc8
  432d4c:	bl	4275f8 <nftw@plt+0x24a78>
  432d50:	b	432768 <nftw@plt+0x2fbe8>
  432d54:	ldr	x25, [x28, #72]
  432d58:	add	x2, x28, #0x48
  432d5c:	cbz	x25, 432d98 <nftw@plt+0x30218>
  432d60:	add	x4, x20, x20, lsl #1
  432d64:	mov	x0, #0x1f40                	// #8000
  432d68:	add	x4, x0, x4, lsr #1
  432d6c:	nop
  432d70:	ldr	x0, [x25, #8]
  432d74:	ldr	x1, [x25, #24]
  432d78:	sub	x1, x1, x0
  432d7c:	cmp	x20, x1
  432d80:	b.hi	432d8c <nftw@plt+0x3020c>  // b.pmore
  432d84:	cmp	x1, x4
  432d88:	b.ls	432e24 <nftw@plt+0x302a4>  // b.plast
  432d8c:	mov	x2, x25
  432d90:	ldr	x25, [x25]
  432d94:	cbnz	x25, 432d70 <nftw@plt+0x301f0>
  432d98:	mov	x0, #0x1f40                	// #8000
  432d9c:	cmp	x20, x0
  432da0:	csel	x1, x20, x0, cs  // cs = hs, nlast
  432da4:	mov	x27, x20
  432da8:	add	x1, x1, #0x7
  432dac:	and	x1, x1, #0xfffffffffffffff8
  432db0:	str	x1, [sp, #104]
  432db4:	add	x0, x1, #0x20
  432db8:	bl	461560 <_obstack_memory_used@@Base+0x118>
  432dbc:	ldr	x1, [sp, #104]
  432dc0:	add	x25, x0, x1
  432dc4:	str	x25, [sp, #104]
  432dc8:	stp	x0, x0, [x25, #8]
  432dcc:	str	x25, [x25, #24]
  432dd0:	str	xzr, [x0, x1]
  432dd4:	b	431ec8 <nftw@plt+0x2f348>
  432dd8:	mov	x4, x27
  432ddc:	b	431e48 <nftw@plt+0x2f2c8>
  432de0:	mov	x2, #0x1                   	// #1
  432de4:	mov	w3, w2
  432de8:	b	431b80 <nftw@plt+0x2f000>
  432dec:	ldr	x1, [x4]
  432df0:	str	x1, [x9]
  432df4:	str	xzr, [x4]
  432df8:	str	x0, [x4, #16]
  432dfc:	b	432d08 <nftw@plt+0x30188>
  432e00:	add	x0, sp, #0xc8
  432e04:	strb	w24, [x0, x21]
  432e08:	add	x21, x21, #0x1
  432e0c:	b	432ad0 <nftw@plt+0x2ff50>
  432e10:	ldr	x1, [x0]
  432e14:	str	x1, [x2]
  432e18:	str	xzr, [x0]
  432e1c:	str	x3, [x0, #16]
  432e20:	b	432ba8 <nftw@plt+0x30028>
  432e24:	ldr	x1, [x25]
  432e28:	str	x1, [x2]
  432e2c:	mov	x27, x20
  432e30:	str	xzr, [x25]
  432e34:	str	x0, [x25, #16]
  432e38:	str	x25, [sp, #104]
  432e3c:	b	431ec8 <nftw@plt+0x2f348>
  432e40:	mov	x19, x20
  432e44:	b	431ae8 <nftw@plt+0x2ef68>
  432e48:	ldr	w2, [x22]
  432e4c:	mov	w5, #0x3d                  	// #61
  432e50:	adrp	x4, 47c000 <_obstack_memory_used@@Base+0x1abb8>
  432e54:	sub	x26, x26, #0x1
  432e58:	add	x4, x4, #0xd28
  432e5c:	mov	x0, x28
  432e60:	mov	w3, #0x0                   	// #0
  432e64:	mov	w1, #0x3                   	// #3
  432e68:	str	w5, [sp, #172]
  432e6c:	bl	4275f8 <nftw@plt+0x24a78>
  432e70:	ldrb	w0, [x28, #1161]
  432e74:	cbz	w0, 432ed4 <nftw@plt+0x30354>
  432e78:	ldrb	w0, [x26]
  432e7c:	adrp	x25, 481000 <_obstack_memory_used@@Base+0x1fbb8>
  432e80:	add	x25, x25, #0xaf0
  432e84:	cmp	w0, #0x5f
  432e88:	b.ne	432fe8 <nftw@plt+0x30468>  // b.any
  432e8c:	ldrb	w1, [x26, #1]
  432e90:	cmp	w1, #0x5f
  432e94:	b.eq	432fe8 <nftw@plt+0x30468>  // b.none
  432e98:	ldrh	w0, [x25, w0, sxtw #1]
  432e9c:	tbz	w0, #9, 432ed4 <nftw@plt+0x30354>
  432ea0:	ldr	w0, [sp, #172]
  432ea4:	add	x26, x26, #0x1
  432ea8:	bl	428e58 <nftw@plt+0x262d8>
  432eac:	str	w0, [sp, #172]
  432eb0:	ldrb	w1, [x26]
  432eb4:	mov	w0, #0x204                 	// #516
  432eb8:	ldrh	w1, [x25, x1, lsl #1]
  432ebc:	tst	w0, w1
  432ec0:	b.eq	432ed4 <nftw@plt+0x30354>  // b.none
  432ec4:	ldrb	w1, [x26, #1]!
  432ec8:	ldrh	w1, [x25, x1, lsl #1]
  432ecc:	tst	w0, w1
  432ed0:	b.ne	432ec4 <nftw@plt+0x30344>  // b.any
  432ed4:	ldr	x0, [x28]
  432ed8:	sub	x20, x26, x24
  432edc:	ldrb	w21, [sp, #172]
  432ee0:	str	x26, [x0]
  432ee4:	ldr	x0, [sp, #104]
  432ee8:	cbz	x0, 432f98 <nftw@plt+0x30418>
  432eec:	add	x1, x19, #0x1
  432ef0:	mov	x23, x0
  432ef4:	add	x1, x1, x20
  432ef8:	mov	x0, x28
  432efc:	bl	431720 <nftw@plt+0x2eba0>
  432f00:	mov	x3, x0
  432f04:	add	w19, w19, w20
  432f08:	strb	w21, [x22, #4]
  432f0c:	str	w19, [x22, #8]
  432f10:	str	x0, [x22, #16]
  432f14:	ldp	x1, x2, [x23, #8]
  432f18:	mov	x0, x3
  432f1c:	sub	x2, x2, x1
  432f20:	bl	402490 <memcpy@plt>
  432f24:	mov	x3, x0
  432f28:	ldp	x1, x0, [x23, #8]
  432f2c:	ldr	x23, [x23]
  432f30:	sub	x0, x0, x1
  432f34:	add	x3, x3, x0
  432f38:	cbnz	x23, 432f14 <nftw@plt+0x30394>
  432f3c:	ldr	x0, [sp, #104]
  432f40:	mov	x1, x0
  432f44:	ldr	x0, [x0]
  432f48:	cbnz	x0, 432f40 <nftw@plt+0x303c0>
  432f4c:	ldr	x0, [x28, #72]
  432f50:	str	x0, [x1]
  432f54:	ldr	x0, [sp, #104]
  432f58:	str	x0, [x28, #72]
  432f5c:	mov	x2, x20
  432f60:	mov	x1, x24
  432f64:	mov	x0, x3
  432f68:	bl	402490 <memcpy@plt>
  432f6c:	strb	wzr, [x0, x20]
  432f70:	ldp	x25, x26, [sp, #64]
  432f74:	b	431a24 <nftw@plt+0x2eea4>
  432f78:	adrp	x2, 47c000 <_obstack_memory_used@@Base+0x1abb8>
  432f7c:	adrp	x0, 47c000 <_obstack_memory_used@@Base+0x1abb8>
  432f80:	add	x2, x2, #0xc88
  432f84:	add	x0, x0, #0x9d0
  432f88:	mov	w1, #0x6f0                 	// #1776
  432f8c:	bl	402bf0 <nftw@plt+0x70>
  432f90:	mov	x0, x5
  432f94:	b	4329e4 <nftw@plt+0x2fe64>
  432f98:	ldr	x0, [x28, #64]
  432f9c:	add	w23, w20, #0x1
  432fa0:	add	w1, w20, #0x1
  432fa4:	ldp	x3, x2, [x0, #16]
  432fa8:	sub	x2, x2, x3
  432fac:	cmp	x23, x2
  432fb0:	b.hi	433098 <nftw@plt+0x30518>  // b.pmore
  432fb4:	and	x19, x20, #0xffffffff
  432fb8:	add	x23, x3, x23
  432fbc:	str	x23, [x0, #16]
  432fc0:	mov	x1, x24
  432fc4:	mov	x2, x19
  432fc8:	mov	x0, x3
  432fcc:	bl	402490 <memcpy@plt>
  432fd0:	strb	wzr, [x0, x19]
  432fd4:	strb	w21, [x22, #4]
  432fd8:	ldp	x25, x26, [sp, #64]
  432fdc:	str	w20, [x22, #8]
  432fe0:	str	x0, [x22, #16]
  432fe4:	b	431a24 <nftw@plt+0x2eea4>
  432fe8:	ldrh	w1, [x25, w0, sxtw #1]
  432fec:	tbz	w1, #9, 432ed4 <nftw@plt+0x30354>
  432ff0:	ldrb	w4, [x26, #1]
  432ff4:	sub	w3, w0, #0x71
  432ff8:	add	x1, x26, #0x1
  432ffc:	mov	w0, #0x204                 	// #516
  433000:	ldrh	w2, [x25, w4, sxtw #1]
  433004:	tst	w0, w2
  433008:	b.eq	43302c <nftw@plt+0x304ac>  // b.none
  43300c:	mov	w2, w0
  433010:	mov	w5, #0x43                  	// #67
  433014:	madd	w0, w3, w5, w4
  433018:	ldrb	w4, [x1, #1]!
  43301c:	sub	w3, w0, #0x71
  433020:	ldrh	w0, [x25, w4, sxtw #1]
  433024:	tst	w2, w0
  433028:	b.ne	433014 <nftw@plt+0x30494>  // b.any
  43302c:	ldr	x0, [x28, #1088]
  433030:	sub	x2, x1, x26
  433034:	add	w3, w3, w2
  433038:	mov	x1, x26
  43303c:	mov	w4, #0x0                   	// #0
  433040:	bl	43f578 <nftw@plt+0x3c9f8>
  433044:	cbz	x0, 433120 <nftw@plt+0x305a0>
  433048:	ldrb	w0, [x0, #18]
  43304c:	tbz	w0, #1, 433120 <nftw@plt+0x305a0>
  433050:	ldrb	w0, [x28, #1162]
  433054:	cbz	w0, 432ed4 <nftw@plt+0x30354>
  433058:	ldrb	w0, [x28, #18]
  43305c:	cbnz	w0, 432ed4 <nftw@plt+0x30354>
  433060:	ldr	w2, [x22]
  433064:	mov	x0, x28
  433068:	adrp	x4, 47c000 <_obstack_memory_used@@Base+0x1abb8>
  43306c:	mov	w3, #0x0                   	// #0
  433070:	add	x4, x4, #0xd40
  433074:	mov	w1, #0x13                  	// #19
  433078:	bl	427670 <nftw@plt+0x24af0>
  43307c:	b	432ed4 <nftw@plt+0x30354>
  433080:	adrp	x2, 47c000 <_obstack_memory_used@@Base+0x1abb8>
  433084:	adrp	x0, 47c000 <_obstack_memory_used@@Base+0x1abb8>
  433088:	add	x2, x2, #0xc88
  43308c:	add	x0, x0, #0x9d0
  433090:	mov	w1, #0x6e1                 	// #1761
  433094:	bl	402bf0 <nftw@plt+0x70>
  433098:	ldr	x0, [x28, #72]
  43309c:	add	x4, x28, #0x48
  4330a0:	cbz	x0, 4330dc <nftw@plt+0x3055c>
  4330a4:	mov	w3, #0x3                   	// #3
  4330a8:	mov	x2, #0x1f40                	// #8000
  4330ac:	umull	x1, w1, w3
  4330b0:	add	x1, x2, x1, lsr #1
  4330b4:	ldr	x3, [x0, #8]
  4330b8:	ldr	x2, [x0, #24]
  4330bc:	sub	x2, x2, x3
  4330c0:	cmp	x23, x2
  4330c4:	b.hi	4330d0 <nftw@plt+0x30550>  // b.pmore
  4330c8:	cmp	x2, x1
  4330cc:	b.ls	433128 <nftw@plt+0x305a8>  // b.plast
  4330d0:	mov	x4, x0
  4330d4:	ldr	x0, [x0]
  4330d8:	cbnz	x0, 4330b4 <nftw@plt+0x30534>
  4330dc:	mov	x0, #0x1f40                	// #8000
  4330e0:	cmp	x23, x0
  4330e4:	csel	x19, x23, x0, cs  // cs = hs, nlast
  4330e8:	add	x19, x19, #0x7
  4330ec:	and	x19, x19, #0xfffffffffffffff8
  4330f0:	add	x0, x19, #0x20
  4330f4:	bl	461560 <_obstack_memory_used@@Base+0x118>
  4330f8:	mov	x1, x0
  4330fc:	add	x0, x0, x19
  433100:	stp	x1, x1, [x0, #8]
  433104:	str	x0, [x0, #24]
  433108:	str	xzr, [x1, x19]
  43310c:	ldr	x1, [x28, #64]
  433110:	str	x1, [x0]
  433114:	ldr	x3, [x0, #16]
  433118:	str	x0, [x28, #64]
  43311c:	b	432fb4 <nftw@plt+0x30434>
  433120:	ldrb	w0, [x26]
  433124:	b	432e98 <nftw@plt+0x30318>
  433128:	ldr	x1, [x0]
  43312c:	str	x1, [x4]
  433130:	str	xzr, [x0]
  433134:	str	x3, [x0, #16]
  433138:	b	43310c <nftw@plt+0x3058c>
  43313c:	nop
  433140:	stp	x29, x30, [sp, #-144]!
  433144:	mov	x29, sp
  433148:	stp	x19, x20, [sp, #16]
  43314c:	mov	x19, x0
  433150:	stp	x25, x26, [sp, #64]
  433154:	mov	x25, #0x6166                	// #24934
  433158:	movk	x25, #0x6c6c, lsl #16
  43315c:	ldr	x20, [x0, #448]
  433160:	movk	x25, #0x6874, lsl #32
  433164:	stp	x21, x22, [sp, #32]
  433168:	movk	x25, #0x6f72, lsl #48
  43316c:	add	x0, x20, #0x18
  433170:	stp	x23, x24, [sp, #48]
  433174:	adrp	x23, 47c000 <_obstack_memory_used@@Base+0x1abb8>
  433178:	add	x23, x23, #0xe30
  43317c:	mov	w24, #0x0                   	// #0
  433180:	str	x0, [x19, #448]
  433184:	ldr	x21, [x19]
  433188:	strh	wzr, [x20, #6]
  43318c:	ldrb	w0, [x21, #104]
  433190:	cbz	w0, 433260 <nftw@plt+0x306e0>
  433194:	ldrb	w0, [x19, #32]
  433198:	cbnz	w0, 433de4 <nftw@plt+0x31264>
  43319c:	ldrb	w0, [x19, #16]
  4331a0:	cbnz	w0, 433220 <nftw@plt+0x306a0>
  4331a4:	mov	x0, x21
  4331a8:	b	4331d0 <nftw@plt+0x30650>
  4331ac:	ubfx	x22, x1, #2, #1
  4331b0:	mov	x0, x19
  4331b4:	bl	425cc0 <nftw@plt+0x23140>
  4331b8:	ldr	x0, [x19]
  4331bc:	cmp	x0, #0x0
  4331c0:	csinc	w1, w22, wzr, ne  // ne = any
  4331c4:	cbnz	w1, 433220 <nftw@plt+0x306a0>
  4331c8:	ldrb	w1, [x0, #104]
  4331cc:	cbz	w1, 4333e8 <nftw@plt+0x30868>
  4331d0:	ldr	x1, [x0, #16]
  4331d4:	ldr	x2, [x0, #32]
  4331d8:	cmp	x1, x2
  4331dc:	b.cc	433434 <nftw@plt+0x308b4>  // b.lo, b.ul, b.last
  4331e0:	ldrb	w3, [x19, #25]
  4331e4:	cbnz	w3, 433220 <nftw@plt+0x306a0>
  4331e8:	ldr	x3, [x0, #24]
  4331ec:	cmp	x3, x2
  4331f0:	ccmp	x1, x2, #0x0, ne  // ne = any
  4331f4:	ldrb	w1, [x0, #105]
  4331f8:	b.ls	4331ac <nftw@plt+0x3062c>  // b.plast
  4331fc:	tbnz	w1, #1, 4331ac <nftw@plt+0x3062c>
  433200:	str	x2, [x0, #16]
  433204:	ubfx	x22, x1, #2, #1
  433208:	mov	x0, x19
  43320c:	bl	425cc0 <nftw@plt+0x23140>
  433210:	ldr	x0, [x19]
  433214:	cmp	x0, #0x0
  433218:	csinc	w1, w22, wzr, ne  // ne = any
  43321c:	cbz	w1, 4331c8 <nftw@plt+0x30648>
  433220:	mov	w0, #0x16                  	// #22
  433224:	strb	w0, [x20, #4]
  433228:	ldrb	w0, [x19, #16]
  43322c:	cbnz	w0, 433244 <nftw@plt+0x306c4>
  433230:	ldr	x1, [x19, #40]
  433234:	mov	w0, #0x40                  	// #64
  433238:	ldr	w1, [x1, #60]
  43323c:	str	w1, [x20]
  433240:	strh	w0, [x20, #6]
  433244:	mov	x0, x20
  433248:	ldp	x19, x20, [sp, #16]
  43324c:	ldp	x21, x22, [sp, #32]
  433250:	ldp	x23, x24, [sp, #48]
  433254:	ldp	x25, x26, [sp, #64]
  433258:	ldp	x29, x30, [sp], #144
  43325c:	ret
  433260:	stp	x27, x28, [sp, #80]
  433264:	mov	w26, #0x594c                	// #22860
  433268:	movk	w26, #0x4620, lsl #16
  43326c:	ldr	x0, [x19, #40]
  433270:	adrp	x1, 47d000 <_obstack_memory_used@@Base+0x1bbb8>
  433274:	add	x6, x1, #0x360
  433278:	ldr	w0, [x0, #60]
  43327c:	str	w0, [x20]
  433280:	ldr	w1, [x21, #56]
  433284:	ldr	x2, [x21, #48]
  433288:	lsl	x1, x1, #4
  43328c:	ldr	x0, [x21]
  433290:	ldr	x1, [x2, x1]
  433294:	cmp	x0, x1
  433298:	b.cs	433398 <nftw@plt+0x30818>  // b.hs, b.nlast
  43329c:	ldr	w22, [x19, #1408]
  4332a0:	add	x1, x0, #0x1
  4332a4:	str	x1, [x21]
  4332a8:	ldrb	w27, [x0]
  4332ac:	mov	w28, w27
  4332b0:	cbz	w22, 4333c4 <nftw@plt+0x30844>
  4332b4:	str	w22, [x20]
  4332b8:	cmp	w27, #0x7e
  4332bc:	b.ls	433388 <nftw@plt+0x30808>  // b.plast
  4332c0:	ldr	x22, [x21]
  4332c4:	ldr	x3, [x19, #64]
  4332c8:	ldp	x0, x1, [x3, #16]
  4332cc:	sub	x1, x1, x0
  4332d0:	cmp	x1, #0x1
  4332d4:	b.ls	433d80 <nftw@plt+0x31200>  // b.plast
  4332d8:	add	x1, x0, #0x2
  4332dc:	str	x1, [x3, #16]
  4332e0:	mov	w2, #0x3d                  	// #61
  4332e4:	mov	w1, #0x1                   	// #1
  4332e8:	ldurb	w3, [x22, #-1]
  4332ec:	strb	w3, [x0]
  4332f0:	strb	wzr, [x0, #1]
  4332f4:	strb	w2, [x20, #4]
  4332f8:	ldr	w22, [x20]
  4332fc:	str	w1, [x20, #8]
  433300:	str	x0, [x20, #16]
  433304:	nop
  433308:	cmp	w22, #0x1
  43330c:	b.ls	4334f4 <nftw@plt+0x30974>  // b.plast
  433310:	ldr	w0, [x21, #56]
  433314:	ldr	x2, [x21, #48]
  433318:	lsl	x0, x0, #4
  43331c:	ldr	x1, [x21]
  433320:	ldr	x0, [x2, x0]
  433324:	cmp	x1, x0
  433328:	b.cc	433334 <nftw@plt+0x307b4>  // b.lo, b.ul, b.last
  43332c:	ldr	x0, [x19, #8]
  433330:	cbz	x0, 433ca0 <nftw@plt+0x31120>
  433334:	ldr	x2, [x21, #8]
  433338:	ldr	x0, [x19, #40]
  43333c:	sub	w1, w1, w2
  433340:	bl	435c98 <nftw@plt+0x33118>
  433344:	mov	w3, w0
  433348:	ldr	w1, [x20]
  43334c:	mov	x2, #0x0                   	// #0
  433350:	ldr	x0, [x19, #40]
  433354:	bfxil	x2, x22, #0, #32
  433358:	bfi	x2, x3, #32, #32
  43335c:	mov	x3, #0x0                   	// #0
  433360:	bl	435ed0 <nftw@plt+0x33350>
  433364:	ldp	x27, x28, [sp, #80]
  433368:	str	w0, [x20]
  43336c:	mov	x0, x20
  433370:	ldp	x19, x20, [sp, #16]
  433374:	ldp	x21, x22, [sp, #32]
  433378:	ldp	x23, x24, [sp, #48]
  43337c:	ldp	x25, x26, [sp, #64]
  433380:	ldp	x29, x30, [sp], #144
  433384:	ret
  433388:	ldrh	w0, [x6, w27, uxtw #1]
  43338c:	adr	x1, 433398 <nftw@plt+0x30818>
  433390:	add	x0, x1, w0, sxth #2
  433394:	br	x0
  433398:	ldr	x1, [x19, #8]
  43339c:	cbnz	x1, 43329c <nftw@plt+0x3071c>
  4333a0:	mov	x0, x19
  4333a4:	bl	42fa78 <nftw@plt+0x2cef8>
  4333a8:	ldr	x1, [x19, #40]
  4333ac:	ldr	x0, [x21]
  4333b0:	ldr	w1, [x1, #60]
  4333b4:	str	w1, [x20]
  4333b8:	adrp	x1, 47d000 <_obstack_memory_used@@Base+0x1bbb8>
  4333bc:	add	x6, x1, #0x360
  4333c0:	b	43329c <nftw@plt+0x3071c>
  4333c4:	ldr	x2, [x21, #8]
  4333c8:	ldr	x0, [x19, #40]
  4333cc:	sub	w1, w1, w2
  4333d0:	bl	435c98 <nftw@plt+0x33118>
  4333d4:	mov	w22, w0
  4333d8:	adrp	x0, 47d000 <_obstack_memory_used@@Base+0x1bbb8>
  4333dc:	add	x6, x0, #0x360
  4333e0:	str	w22, [x20]
  4333e4:	b	4332b8 <nftw@plt+0x30738>
  4333e8:	stp	x27, x28, [sp, #80]
  4333ec:	ldr	w1, [x19, #500]
  4333f0:	cmp	x21, x0
  4333f4:	csel	w24, w24, wzr, eq  // eq = none
  4333f8:	cbnz	w1, 433410 <nftw@plt+0x30890>
  4333fc:	ldr	x20, [x19, #472]
  433400:	add	x1, x19, #0x1c8
  433404:	str	x1, [x19, #488]
  433408:	add	x1, x20, #0x18
  43340c:	str	x1, [x19, #448]
  433410:	mov	w1, #0x40                  	// #64
  433414:	strh	w1, [x20, #6]
  433418:	mov	x21, x0
  43341c:	mov	w0, #0x41                  	// #65
  433420:	ldrb	w2, [x19, #25]
  433424:	cmp	w2, #0x2
  433428:	csel	w1, w0, w1, eq  // eq = none
  43342c:	strh	w1, [x20, #6]
  433430:	b	433264 <nftw@plt+0x306e4>
  433434:	mov	x0, x19
  433438:	stp	x27, x28, [sp, #80]
  43343c:	bl	42f460 <nftw@plt+0x2c8e0>
  433440:	ldr	x0, [x19]
  433444:	b	4333ec <nftw@plt+0x3086c>
  433448:	ldr	x1, [x21]
  43344c:	mov	w0, #0x35                  	// #53
  433450:	strb	w0, [x20, #4]
  433454:	sub	x1, x1, #0x1
  433458:	mov	w2, #0x0                   	// #0
  43345c:	add	x3, sp, #0x80
  433460:	add	x4, x20, #0x10
  433464:	mov	x0, x19
  433468:	str	wzr, [sp, #128]
  43346c:	strb	wzr, [sp, #132]
  433470:	str	wzr, [sp, #136]
  433474:	bl	42eec0 <nftw@plt+0x2c340>
  433478:	ldr	w2, [x19, #1192]
  43347c:	ldr	w1, [sp, #136]
  433480:	str	x0, [x20, #8]
  433484:	cmp	w2, w1
  433488:	b.ge	4334a8 <nftw@plt+0x30928>  // b.tcont
  43348c:	ldrb	w1, [x19, #18]
  433490:	cbnz	w1, 4334a8 <nftw@plt+0x30928>
  433494:	mov	x0, x19
  433498:	add	x2, sp, #0x88
  43349c:	mov	x1, x20
  4334a0:	bl	430520 <nftw@plt+0x2d9a0>
  4334a4:	ldr	x0, [x20, #8]
  4334a8:	ldrh	w1, [x0, #18]
  4334ac:	tbz	w1, #2, 4334c8 <nftw@plt+0x30948>
  4334b0:	ldrb	w1, [x0, #16]
  4334b4:	ldrh	w0, [x20, #6]
  4334b8:	ubfx	x1, x1, #1, #7
  4334bc:	orr	w0, w0, #0x10
  4334c0:	strb	w1, [x20, #4]
  4334c4:	strh	w0, [x20, #6]
  4334c8:	ldr	w22, [x20]
  4334cc:	cbz	w24, 4334e0 <nftw@plt+0x30960>
  4334d0:	ldrh	w0, [x20, #6]
  4334d4:	orr	w0, w0, #0x20
  4334d8:	strh	w0, [x20, #6]
  4334dc:	nop
  4334e0:	cmp	w22, #0x1
  4334e4:	b.ls	4334f4 <nftw@plt+0x30974>  // b.plast
  4334e8:	ldrb	w0, [x20, #4]
  4334ec:	cmp	w0, #0x16
  4334f0:	b.ne	433310 <nftw@plt+0x30790>  // b.any
  4334f4:	mov	x0, x20
  4334f8:	ldp	x19, x20, [sp, #16]
  4334fc:	ldp	x21, x22, [sp, #32]
  433500:	ldp	x23, x24, [sp, #48]
  433504:	ldp	x25, x26, [sp, #64]
  433508:	ldp	x27, x28, [sp, #80]
  43350c:	ldp	x29, x30, [sp], #144
  433510:	ret
  433514:	str	wzr, [sp, #128]
  433518:	mov	w0, #0x37                  	// #55
  43351c:	strb	wzr, [sp, #132]
  433520:	add	x1, x20, #0x8
  433524:	str	wzr, [sp, #136]
  433528:	add	x3, sp, #0x80
  43352c:	strb	w0, [x20, #4]
  433530:	add	x2, x20, #0x10
  433534:	mov	x0, x19
  433538:	bl	42f208 <nftw@plt+0x2c688>
  43353c:	ldr	w1, [x19, #1192]
  433540:	ldr	w0, [sp, #136]
  433544:	cmp	w1, w0
  433548:	b.ge	433564 <nftw@plt+0x309e4>  // b.tcont
  43354c:	ldrb	w0, [x19, #18]
  433550:	cbnz	w0, 433564 <nftw@plt+0x309e4>
  433554:	add	x2, sp, #0x88
  433558:	mov	x1, x20
  43355c:	mov	x0, x19
  433560:	bl	430520 <nftw@plt+0x2d9a0>
  433564:	ldr	w22, [x20]
  433568:	b	4334e0 <nftw@plt+0x30960>
  43356c:	ldr	x22, [x19]
  433570:	adrp	x27, 481000 <_obstack_memory_used@@Base+0x1fbb8>
  433574:	ldrh	w0, [x20, #6]
  433578:	adrp	x1, 47c000 <_obstack_memory_used@@Base+0x1abb8>
  43357c:	add	x27, x27, #0xaf0
  433580:	add	x8, x1, #0xe20
  433584:	orr	w0, w0, #0x1
  433588:	mov	w7, #0x0                   	// #0
  43358c:	strh	w0, [x20, #6]
  433590:	ldr	x0, [x22]
  433594:	b	43360c <nftw@plt+0x30a8c>
  433598:	ldrb	w1, [x19, #16]
  43359c:	cbz	w1, 4335f0 <nftw@plt+0x30a70>
  4335a0:	ldrb	w1, [x19, #1154]
  4335a4:	cbz	w1, 4335f0 <nftw@plt+0x30a70>
  4335a8:	ldr	x1, [x19, #40]
  4335ac:	cmp	w28, #0xc
  4335b0:	ldr	x3, [x22, #8]
  4335b4:	csel	x5, x8, x23, eq  // eq = none
  4335b8:	ldr	w2, [x1, #60]
  4335bc:	adrp	x4, 47c000 <_obstack_memory_used@@Base+0x1abb8>
  4335c0:	sub	w3, w0, w3
  4335c4:	mov	w1, #0x2                   	// #2
  4335c8:	add	x4, x4, #0xe60
  4335cc:	mov	x0, x19
  4335d0:	str	w7, [sp, #96]
  4335d4:	bl	4275f8 <nftw@plt+0x24a78>
  4335d8:	adrp	x1, 47c000 <_obstack_memory_used@@Base+0x1abb8>
  4335dc:	ldr	w7, [sp, #96]
  4335e0:	ldr	x0, [x22]
  4335e4:	add	x8, x1, #0xe20
  4335e8:	adrp	x1, 47d000 <_obstack_memory_used@@Base+0x1bbb8>
  4335ec:	add	x6, x1, #0x360
  4335f0:	add	x1, x0, #0x1
  4335f4:	str	x1, [x22]
  4335f8:	ldrb	w2, [x0]
  4335fc:	mov	x28, x2
  433600:	ldrh	w2, [x27, x2, lsl #1]
  433604:	tbz	w2, #11, 433cb8 <nftw@plt+0x31138>
  433608:	mov	x0, x1
  43360c:	cmp	w28, #0x20
  433610:	ccmp	w28, #0x9, #0x4, ne  // ne = any
  433614:	b.eq	4335f0 <nftw@plt+0x30a70>  // b.none
  433618:	cbnz	w28, 433598 <nftw@plt+0x30a18>
  43361c:	mov	w7, #0x1                   	// #1
  433620:	b	4335f0 <nftw@plt+0x30a70>
  433624:	cmp	w27, #0x4c
  433628:	ldr	x1, [x21]
  43362c:	b.eq	433648 <nftw@plt+0x30ac8>  // b.none
  433630:	ldrb	w0, [x19, #1130]
  433634:	cbnz	w0, 433f70 <nftw@plt+0x313f0>
  433638:	cmp	w27, #0x52
  43363c:	b.eq	43344c <nftw@plt+0x308cc>  // b.none
  433640:	ldrb	w0, [x19, #1128]
  433644:	cbz	w0, 43344c <nftw@plt+0x308cc>
  433648:	ldrb	w0, [x1]
  43364c:	cmp	w0, #0x27
  433650:	b.eq	4336b0 <nftw@plt+0x30b30>  // b.none
  433654:	cmp	w0, #0x22
  433658:	b.eq	4336b0 <nftw@plt+0x30b30>  // b.none
  43365c:	cmp	w0, #0x52
  433660:	mov	w2, #0x52                  	// #82
  433664:	ccmp	w27, w2, #0x4, eq  // eq = none
  433668:	b.ne	434588 <nftw@plt+0x31a08>  // b.any
  43366c:	cmp	w0, #0x38
  433670:	mov	w0, #0x75                  	// #117
  433674:	ccmp	w27, w0, #0x0, eq  // eq = none
  433678:	b.ne	43344c <nftw@plt+0x308cc>  // b.any
  43367c:	ldrb	w0, [x1, #1]
  433680:	cmp	w0, #0x22
  433684:	b.eq	4336b0 <nftw@plt+0x30b30>  // b.none
  433688:	cmp	w0, #0x27
  43368c:	b.eq	4348b0 <nftw@plt+0x31d30>  // b.none
  433690:	cmp	w0, #0x52
  433694:	b.ne	43344c <nftw@plt+0x308cc>  // b.any
  433698:	ldrb	w0, [x1, #2]
  43369c:	cmp	w0, #0x22
  4336a0:	b.ne	43344c <nftw@plt+0x308cc>  // b.any
  4336a4:	ldrb	w0, [x19, #1130]
  4336a8:	cbz	w0, 43344c <nftw@plt+0x308cc>
  4336ac:	nop
  4336b0:	sub	x2, x1, #0x1
  4336b4:	mov	x0, x19
  4336b8:	mov	x1, x20
  4336bc:	bl	431808 <nftw@plt+0x2ec88>
  4336c0:	ldr	w22, [x20]
  4336c4:	b	4334e0 <nftw@plt+0x30960>
  4336c8:	ldr	x22, [x21]
  4336cc:	add	x2, sp, #0x80
  4336d0:	mov	x0, x19
  4336d4:	mov	w1, #0x1                   	// #1
  4336d8:	sub	x22, x22, #0x1
  4336dc:	str	x22, [x21]
  4336e0:	str	wzr, [sp, #128]
  4336e4:	strb	wzr, [sp, #132]
  4336e8:	str	wzr, [sp, #136]
  4336ec:	bl	42ebb8 <nftw@plt+0x2c038>
  4336f0:	tst	w0, #0xff
  4336f4:	b.ne	433f34 <nftw@plt+0x313b4>  // b.any
  4336f8:	ldr	x22, [x21]
  4336fc:	add	x22, x22, #0x1
  433700:	str	x22, [x21]
  433704:	b	4332c4 <nftw@plt+0x30744>
  433708:	ldr	x2, [x21]
  43370c:	mov	x1, x20
  433710:	mov	x0, x19
  433714:	sub	x2, x2, #0x1
  433718:	bl	431808 <nftw@plt+0x2ec88>
  43371c:	ldr	w22, [x20]
  433720:	b	4334e0 <nftw@plt+0x30960>
  433724:	mov	w0, #0x27                  	// #39
  433728:	ldr	w22, [x20]
  43372c:	strb	w0, [x20, #4]
  433730:	b	433308 <nftw@plt+0x30788>
  433734:	mov	w0, #0x28                  	// #40
  433738:	ldr	w22, [x20]
  43373c:	strb	w0, [x20, #4]
  433740:	b	433308 <nftw@plt+0x30788>
  433744:	ldr	x0, [x21]
  433748:	strb	wzr, [x20, #4]
  43374c:	ldrb	w1, [x0]
  433750:	cmp	w1, #0x3d
  433754:	b.ne	433308 <nftw@plt+0x30788>  // b.any
  433758:	add	x0, x0, #0x1
  43375c:	ldr	w22, [x20]
  433760:	str	x0, [x21]
  433764:	mov	w0, #0x17                  	// #23
  433768:	strb	w0, [x20, #4]
  43376c:	b	433308 <nftw@plt+0x30788>
  433770:	mov	w0, #0x15                  	// #21
  433774:	ldr	w22, [x20]
  433778:	strb	w0, [x20, #4]
  43377c:	b	433308 <nftw@plt+0x30788>
  433780:	ldr	x0, [x21]
  433784:	mov	w1, #0x6                   	// #6
  433788:	strb	w1, [x20, #4]
  43378c:	ldrb	w1, [x0]
  433790:	cmp	w1, #0x3d
  433794:	b.ne	433308 <nftw@plt+0x30788>  // b.any
  433798:	add	x0, x0, #0x1
  43379c:	ldr	w22, [x20]
  4337a0:	str	x0, [x21]
  4337a4:	mov	w0, #0x1d                  	// #29
  4337a8:	strb	w0, [x20, #4]
  4337ac:	b	433308 <nftw@plt+0x30788>
  4337b0:	ldr	x0, [x21]
  4337b4:	mov	w1, #0x4                   	// #4
  4337b8:	strb	w1, [x20, #4]
  4337bc:	ldrb	w1, [x0]
  4337c0:	cmp	w1, #0x2b
  4337c4:	b.eq	433e88 <nftw@plt+0x31308>  // b.none
  4337c8:	cmp	w1, #0x3d
  4337cc:	b.ne	433308 <nftw@plt+0x30788>  // b.any
  4337d0:	add	x0, x0, #0x1
  4337d4:	str	x0, [x21]
  4337d8:	mov	w0, #0x1b                  	// #27
  4337dc:	strb	w0, [x20, #4]
  4337e0:	b	433308 <nftw@plt+0x30788>
  4337e4:	ldr	x0, [x21]
  4337e8:	mov	w1, #0x8                   	// #8
  4337ec:	strb	w1, [x20, #4]
  4337f0:	ldrb	w1, [x0]
  4337f4:	cmp	w1, #0x3d
  4337f8:	b.eq	433eb0 <nftw@plt+0x31330>  // b.none
  4337fc:	ldrb	w2, [x19, #1126]
  433800:	cbz	w2, 433308 <nftw@plt+0x30788>
  433804:	cmp	w1, #0x3a
  433808:	b.eq	4342fc <nftw@plt+0x3177c>  // b.none
  43380c:	cmp	w1, #0x3e
  433810:	b.ne	433308 <nftw@plt+0x30788>  // b.any
  433814:	ldrh	w1, [x20, #6]
  433818:	add	x0, x0, #0x1
  43381c:	str	x0, [x21]
  433820:	mov	w2, #0x2a                  	// #42
  433824:	orr	w0, w1, #0x2
  433828:	strb	w2, [x20, #4]
  43382c:	strh	w0, [x20, #6]
  433830:	b	433308 <nftw@plt+0x30788>
  433834:	ldr	x0, [x21]
  433838:	mov	w1, #0x9                   	// #9
  43383c:	strb	w1, [x20, #4]
  433840:	ldr	w22, [x20]
  433844:	ldrb	w1, [x0]
  433848:	cmp	w1, #0x26
  43384c:	b.eq	433e9c <nftw@plt+0x3131c>  // b.none
  433850:	cmp	w1, #0x3d
  433854:	b.ne	433308 <nftw@plt+0x30788>  // b.any
  433858:	add	x0, x0, #0x1
  43385c:	str	x0, [x21]
  433860:	mov	w0, #0x20                  	// #32
  433864:	strb	w0, [x20, #4]
  433868:	b	433308 <nftw@plt+0x30788>
  43386c:	ldr	x0, [x21]
  433870:	mov	w1, #0x25                  	// #37
  433874:	strb	w1, [x20, #4]
  433878:	ldrb	w1, [x0]
  43387c:	cmp	w1, #0x23
  433880:	b.eq	43388c <nftw@plt+0x30d0c>  // b.none
  433884:	str	wzr, [x20, #8]
  433888:	b	4334e0 <nftw@plt+0x30960>
  43388c:	add	x0, x0, #0x1
  433890:	str	x0, [x21]
  433894:	mov	w0, #0x26                  	// #38
  433898:	strb	w0, [x20, #4]
  43389c:	str	wzr, [x20, #8]
  4338a0:	b	4334e0 <nftw@plt+0x30960>
  4338a4:	ldr	x0, [x21]
  4338a8:	mov	w1, #0x1                   	// #1
  4338ac:	strb	w1, [x20, #4]
  4338b0:	ldrb	w1, [x0]
  4338b4:	cmp	w1, #0x3d
  4338b8:	b.ne	433308 <nftw@plt+0x30788>  // b.any
  4338bc:	add	x0, x0, #0x1
  4338c0:	ldr	w22, [x20]
  4338c4:	str	x0, [x21]
  4338c8:	mov	w0, #0x18                  	// #24
  4338cc:	strb	w0, [x20, #4]
  4338d0:	b	433308 <nftw@plt+0x30788>
  4338d4:	ldr	x1, [x21]
  4338d8:	ldr	x0, [x21, #32]
  4338dc:	cmp	x1, x0
  4338e0:	b.cc	433eec <nftw@plt+0x3136c>  // b.lo, b.ul, b.last
  4338e4:	mov	w0, #0x1                   	// #1
  4338e8:	strb	w0, [x21, #104]
  4338ec:	ldp	x27, x28, [sp, #80]
  4338f0:	b	433184 <nftw@plt+0x30604>
  4338f4:	ldr	x0, [x21]
  4338f8:	mov	w1, #0x2                   	// #2
  4338fc:	strb	w1, [x20, #4]
  433900:	ldrb	w1, [x0]
  433904:	cmp	w1, #0x3d
  433908:	b.eq	433e08 <nftw@plt+0x31288>  // b.none
  43390c:	cmp	w1, #0x3e
  433910:	b.ne	433308 <nftw@plt+0x30788>  // b.any
  433914:	add	x1, x0, #0x1
  433918:	ldr	w22, [x20]
  43391c:	str	x1, [x21]
  433920:	mov	w1, #0xc                   	// #12
  433924:	strb	w1, [x20, #4]
  433928:	ldrb	w1, [x0, #1]
  43392c:	cmp	w1, #0x3d
  433930:	b.ne	433308 <nftw@plt+0x30788>  // b.any
  433934:	add	x0, x0, #0x2
  433938:	str	x0, [x21]
  43393c:	mov	w0, #0x23                  	// #35
  433940:	strb	w0, [x20, #4]
  433944:	b	433308 <nftw@plt+0x30788>
  433948:	ldr	x0, [x21]
  43394c:	mov	w1, #0x5                   	// #5
  433950:	strb	w1, [x20, #4]
  433954:	ldrb	w1, [x0]
  433958:	cmp	w1, #0x3e
  43395c:	b.eq	433e30 <nftw@plt+0x312b0>  // b.none
  433960:	cmp	w1, #0x2d
  433964:	b.eq	434264 <nftw@plt+0x316e4>  // b.none
  433968:	ldr	w22, [x20]
  43396c:	cmp	w1, #0x3d
  433970:	b.ne	433308 <nftw@plt+0x30788>  // b.any
  433974:	add	x0, x0, #0x1
  433978:	str	x0, [x21]
  43397c:	mov	w0, #0x1c                  	// #28
  433980:	strb	w0, [x20, #4]
  433984:	b	433308 <nftw@plt+0x30788>
  433988:	mov	w0, #0x29                  	// #41
  43398c:	ldr	w22, [x20]
  433990:	strb	w0, [x20, #4]
  433994:	b	433308 <nftw@plt+0x30788>
  433998:	ldr	x0, [x21]
  43399c:	mov	w1, #0xa                   	// #10
  4339a0:	strb	w1, [x20, #4]
  4339a4:	ldrb	w1, [x0]
  4339a8:	cmp	w1, #0x7c
  4339ac:	b.eq	433e1c <nftw@plt+0x3129c>  // b.none
  4339b0:	cmp	w1, #0x3d
  4339b4:	b.ne	433308 <nftw@plt+0x30788>  // b.any
  4339b8:	add	x0, x0, #0x1
  4339bc:	str	x0, [x21]
  4339c0:	mov	w0, #0x21                  	// #33
  4339c4:	strb	w0, [x20, #4]
  4339c8:	b	433308 <nftw@plt+0x30788>
  4339cc:	ldrb	w0, [x19, #19]
  4339d0:	ldr	x2, [x21]
  4339d4:	cbnz	w0, 433ec4 <nftw@plt+0x31344>
  4339d8:	mov	w0, #0x3                   	// #3
  4339dc:	strb	w0, [x20, #4]
  4339e0:	ldrb	w0, [x2]
  4339e4:	cmp	w0, #0x3d
  4339e8:	b.eq	4340c8 <nftw@plt+0x31548>  // b.none
  4339ec:	cmp	w0, #0x3c
  4339f0:	b.eq	4342a4 <nftw@plt+0x31724>  // b.none
  4339f4:	ldrb	w1, [x19, #1126]
  4339f8:	cbz	w1, 433308 <nftw@plt+0x30788>
  4339fc:	cmp	w0, #0x3a
  433a00:	b.eq	434598 <nftw@plt+0x31a18>  // b.none
  433a04:	cmp	w0, #0x25
  433a08:	b.ne	433308 <nftw@plt+0x30788>  // b.any
  433a0c:	ldrh	w0, [x20, #6]
  433a10:	add	x2, x2, #0x1
  433a14:	str	x2, [x21]
  433a18:	mov	w1, #0x29                  	// #41
  433a1c:	orr	w0, w0, #0x2
  433a20:	strb	w1, [x20, #4]
  433a24:	strh	w0, [x20, #6]
  433a28:	b	433308 <nftw@plt+0x30788>
  433a2c:	mov	w0, #0x34                  	// #52
  433a30:	ldr	w22, [x20]
  433a34:	strb	w0, [x20, #4]
  433a38:	b	433308 <nftw@plt+0x30788>
  433a3c:	ldr	x0, [x21]
  433a40:	mov	w1, #0xb                   	// #11
  433a44:	strb	w1, [x20, #4]
  433a48:	ldr	w22, [x20]
  433a4c:	ldrb	w1, [x0]
  433a50:	cmp	w1, #0x3d
  433a54:	b.ne	433308 <nftw@plt+0x30788>  // b.any
  433a58:	add	x0, x0, #0x1
  433a5c:	str	x0, [x21]
  433a60:	mov	w0, #0x22                  	// #34
  433a64:	strb	w0, [x20, #4]
  433a68:	b	433308 <nftw@plt+0x30788>
  433a6c:	mov	w0, #0x11                  	// #17
  433a70:	ldr	w22, [x20]
  433a74:	strb	w0, [x20, #4]
  433a78:	b	433308 <nftw@plt+0x30788>
  433a7c:	ldr	x28, [x21]
  433a80:	ldrb	w27, [x28]
  433a84:	cmp	w27, #0x2a
  433a88:	b.eq	43427c <nftw@plt+0x316fc>  // b.none
  433a8c:	cmp	w27, #0x2f
  433a90:	b.ne	43485c <nftw@plt+0x31cdc>  // b.any
  433a94:	ldrb	w0, [x19, #1160]
  433a98:	cbnz	w0, 43484c <nftw@plt+0x31ccc>
  433a9c:	ldr	x2, [x19]
  433aa0:	cbz	x2, 433aac <nftw@plt+0x30f2c>
  433aa4:	ldrb	w0, [x2, #106]
  433aa8:	cbnz	w0, 433b10 <nftw@plt+0x30f90>
  433aac:	ldr	w0, [x19, #1116]
  433ab0:	cbnz	w0, 4340dc <nftw@plt+0x3155c>
  433ab4:	ldrb	w1, [x19, #1154]
  433ab8:	cbz	w1, 433ac4 <nftw@plt+0x30f44>
  433abc:	ldrb	w1, [x21, #105]
  433ac0:	tbz	w1, #0, 434634 <nftw@plt+0x31ab4>
  433ac4:	ldrsb	w1, [x19, #1198]
  433ac8:	cmp	w1, #0x0
  433acc:	b.le	433b10 <nftw@plt+0x30f90>
  433ad0:	ldrb	w1, [x19, #1120]
  433ad4:	cbnz	w1, 433b10 <nftw@plt+0x30f90>
  433ad8:	ldrb	w1, [x21, #105]
  433adc:	tbz	w1, #0, 434600 <nftw@plt+0x31a80>
  433ae0:	sub	w0, w0, #0x5
  433ae4:	cmp	w0, #0x1
  433ae8:	b.hi	433b10 <nftw@plt+0x30f90>  // b.pmore
  433aec:	ldrb	w0, [x28, #1]
  433af0:	cmp	w0, #0x2a
  433af4:	b.eq	434900 <nftw@plt+0x31d80>  // b.none
  433af8:	ldr	w0, [x19, #16]
  433afc:	tst	w0, #0xff00ff
  433b00:	b.ne	434900 <nftw@plt+0x31d80>  // b.any
  433b04:	ldrb	w0, [x21, #105]
  433b08:	tbz	w0, #0, 4345d0 <nftw@plt+0x31a50>
  433b0c:	nop
  433b10:	ldr	x0, [x2]
  433b14:	ldr	x1, [x19, #40]
  433b18:	ldrb	w3, [x0], #1
  433b1c:	ldr	w22, [x1, #60]
  433b20:	cmp	w3, #0xa
  433b24:	b.eq	433b38 <nftw@plt+0x30fb8>  // b.none
  433b28:	str	x0, [x2]
  433b2c:	ldrb	w1, [x0], #1
  433b30:	cmp	w1, #0xa
  433b34:	b.ne	433b28 <nftw@plt+0x30fa8>  // b.any
  433b38:	mov	x0, x19
  433b3c:	bl	42eca0 <nftw@plt+0x2c120>
  433b40:	ldr	x0, [x19, #40]
  433b44:	ldr	w0, [x0, #60]
  433b48:	cmp	w22, w0
  433b4c:	b.eq	433b58 <nftw@plt+0x30fd8>  // b.none
  433b50:	ldrb	w0, [x19, #1133]
  433b54:	cbnz	w0, 4342e4 <nftw@plt+0x31764>
  433b58:	ldrb	w0, [x19, #1144]
  433b5c:	add	x22, x28, #0x1
  433b60:	ldr	x3, [x19]
  433b64:	cmp	w0, #0x2
  433b68:	b.eq	4340f4 <nftw@plt+0x31574>  // b.none
  433b6c:	b.hi	433cf0 <nftw@plt+0x31170>  // b.pmore
  433b70:	cmp	w0, #0x1
  433b74:	csinc	w24, w24, wzr, ne  // ne = any
  433b78:	ldr	x4, [x19, #1072]
  433b7c:	cbz	x4, 433f88 <nftw@plt+0x31408>
  433b80:	ldr	w1, [x20]
  433b84:	mov	x0, x19
  433b88:	ldr	x3, [x3]
  433b8c:	sub	x2, x28, #0x1
  433b90:	sub	x3, x3, x28
  433b94:	add	x3, x3, #0x1
  433b98:	blr	x4
  433b9c:	ldrb	w0, [x19, #21]
  433ba0:	cbnz	w0, 433f90 <nftw@plt+0x31410>
  433ba4:	ldrh	w0, [x20, #6]
  433ba8:	orr	w0, w0, #0x1
  433bac:	strh	w0, [x20, #6]
  433bb0:	b	43326c <nftw@plt+0x306ec>
  433bb4:	mov	w0, #0x2b                  	// #43
  433bb8:	ldr	w22, [x20]
  433bbc:	strb	w0, [x20, #4]
  433bc0:	b	433308 <nftw@plt+0x30788>
  433bc4:	ldr	x2, [x21]
  433bc8:	mov	w0, #0x30                  	// #48
  433bcc:	strb	w0, [x20, #4]
  433bd0:	adrp	x0, 481000 <_obstack_memory_used@@Base+0x1fbb8>
  433bd4:	add	x0, x0, #0xaf0
  433bd8:	ldrb	w1, [x2]
  433bdc:	ldrh	w0, [x0, w1, sxtw #1]
  433be0:	tbnz	w0, #2, 433514 <nftw@plt+0x30994>
  433be4:	cmp	w1, #0x2e
  433be8:	b.eq	434238 <nftw@plt+0x316b8>  // b.none
  433bec:	ldr	w22, [x20]
  433bf0:	cmp	w1, #0x2a
  433bf4:	b.ne	433308 <nftw@plt+0x30788>  // b.any
  433bf8:	ldrb	w0, [x19, #1120]
  433bfc:	cbz	w0, 433308 <nftw@plt+0x30788>
  433c00:	add	x2, x2, #0x1
  433c04:	str	x2, [x21]
  433c08:	mov	w0, #0x33                  	// #51
  433c0c:	strb	w0, [x20, #4]
  433c10:	b	433308 <nftw@plt+0x30788>
  433c14:	mov	w0, #0x2a                  	// #42
  433c18:	ldr	w22, [x20]
  433c1c:	strb	w0, [x20, #4]
  433c20:	b	433308 <nftw@plt+0x30788>
  433c24:	mov	w0, #0xe                   	// #14
  433c28:	ldr	w22, [x20]
  433c2c:	strb	w0, [x20, #4]
  433c30:	b	433308 <nftw@plt+0x30788>
  433c34:	mov	w0, #0x14                  	// #20
  433c38:	ldr	w22, [x20]
  433c3c:	strb	w0, [x20, #4]
  433c40:	b	433308 <nftw@plt+0x30788>
  433c44:	ldr	x0, [x21]
  433c48:	mov	w1, #0x12                  	// #18
  433c4c:	strb	w1, [x20, #4]
  433c50:	ldr	w22, [x20]
  433c54:	ldrb	w1, [x0]
  433c58:	cmp	w1, #0x3a
  433c5c:	b.eq	433e6c <nftw@plt+0x312ec>  // b.none
  433c60:	cmp	w1, #0x3e
  433c64:	b.ne	433308 <nftw@plt+0x30788>  // b.any
  433c68:	ldrb	w1, [x19, #1126]
  433c6c:	cbz	w1, 433308 <nftw@plt+0x30788>
  433c70:	ldrh	w1, [x20, #6]
  433c74:	add	x0, x0, #0x1
  433c78:	str	x0, [x21]
  433c7c:	mov	w2, #0x28                  	// #40
  433c80:	orr	w0, w1, #0x2
  433c84:	strb	w2, [x20, #4]
  433c88:	strh	w0, [x20, #6]
  433c8c:	b	433308 <nftw@plt+0x30788>
  433c90:	mov	w0, #0x13                  	// #19
  433c94:	ldr	w22, [x20]
  433c98:	strb	w0, [x20, #4]
  433c9c:	b	433308 <nftw@plt+0x30788>
  433ca0:	mov	w1, #0x0                   	// #0
  433ca4:	mov	x0, x19
  433ca8:	bl	42fa78 <nftw@plt+0x2cef8>
  433cac:	ldr	w22, [x20]
  433cb0:	ldr	x1, [x21]
  433cb4:	b	433334 <nftw@plt+0x307b4>
  433cb8:	cbnz	w7, 433cc4 <nftw@plt+0x31144>
  433cbc:	str	x0, [x22]
  433cc0:	b	433280 <nftw@plt+0x30700>
  433cc4:	mov	w1, #0x0                   	// #0
  433cc8:	mov	x0, x19
  433ccc:	adrp	x2, 47c000 <_obstack_memory_used@@Base+0x1abb8>
  433cd0:	add	x2, x2, #0xe80
  433cd4:	bl	427178 <nftw@plt+0x245f8>
  433cd8:	ldr	x0, [x22]
  433cdc:	adrp	x1, 47d000 <_obstack_memory_used@@Base+0x1bbb8>
  433ce0:	add	x6, x1, #0x360
  433ce4:	sub	x0, x0, #0x1
  433ce8:	str	x0, [x22]
  433cec:	b	433280 <nftw@plt+0x30700>
  433cf0:	sub	w1, w0, #0x3
  433cf4:	and	w1, w1, #0xff
  433cf8:	cmp	w1, #0x1
  433cfc:	b.hi	433b78 <nftw@plt+0x30ff8>  // b.pmore
  433d00:	ldrb	w4, [x28, #1]
  433d04:	cmp	w4, #0x40
  433d08:	cset	w5, eq  // eq = none
  433d0c:	cmp	w4, #0x2d
  433d10:	csinc	w5, w5, wzr, ne  // ne = any
  433d14:	cbz	w5, 434348 <nftw@plt+0x317c8>
  433d18:	ldr	x0, [x3]
  433d1c:	sub	x0, x0, x22
  433d20:	sub	x0, x0, #0x1
  433d24:	cmp	x0, #0xa
  433d28:	b.ls	433b78 <nftw@plt+0x30ff8>  // b.plast
  433d2c:	ldur	x1, [x28, #2]
  433d30:	cmp	x1, x25
  433d34:	b.ne	433b78 <nftw@plt+0x30ff8>  // b.any
  433d38:	ldrh	w2, [x28, #10]
  433d3c:	mov	w1, #0x6775                	// #26485
  433d40:	cmp	w2, w1
  433d44:	b.ne	433b78 <nftw@plt+0x30ff8>  // b.any
  433d48:	ldrb	w0, [x28, #12]
  433d4c:	cmp	w0, #0x68
  433d50:	b.ne	433b78 <nftw@plt+0x30ff8>  // b.any
  433d54:	cmp	w4, #0x40
  433d58:	b.eq	434838 <nftw@plt+0x31cb8>  // b.none
  433d5c:	mov	x0, #0xc                   	// #12
  433d60:	add	x22, x22, x0
  433d64:	ldrb	w0, [x28]
  433d68:	cmp	w0, #0x2a
  433d6c:	b.eq	43481c <nftw@plt+0x31c9c>  // b.none
  433d70:	ldrb	w0, [x22]
  433d74:	cmp	w0, #0xa
  433d78:	csinc	w24, w24, wzr, ne  // ne = any
  433d7c:	b	433b78 <nftw@plt+0x30ff8>
  433d80:	ldr	x1, [x19, #72]
  433d84:	add	x4, x19, #0x48
  433d88:	mov	x5, #0x1f41                	// #8001
  433d8c:	cbz	x1, 433db8 <nftw@plt+0x31238>
  433d90:	ldr	x0, [x1, #8]
  433d94:	mov	x3, x1
  433d98:	ldr	x2, [x1, #24]
  433d9c:	ldr	x1, [x1]
  433da0:	sub	x2, x2, x0
  433da4:	sub	x2, x2, #0x2
  433da8:	cmp	x2, x5
  433dac:	b.ls	4342d4 <nftw@plt+0x31754>  // b.plast
  433db0:	mov	x4, x3
  433db4:	cbnz	x1, 433d90 <nftw@plt+0x31210>
  433db8:	mov	x0, #0x1f60                	// #8032
  433dbc:	bl	461560 <_obstack_memory_used@@Base+0x118>
  433dc0:	mov	x1, #0x1f40                	// #8000
  433dc4:	add	x3, x0, x1
  433dc8:	stp	x0, x0, [x3, #8]
  433dcc:	str	x3, [x3, #24]
  433dd0:	str	xzr, [x0, #8000]
  433dd4:	ldr	x1, [x19, #64]
  433dd8:	str	x1, [x3]
  433ddc:	str	x3, [x19, #64]
  433de0:	b	4332d8 <nftw@plt+0x30758>
  433de4:	mov	w0, #0x52                  	// #82
  433de8:	strb	w0, [x20, #4]
  433dec:	strb	wzr, [x19, #32]
  433df0:	ldrb	w0, [x19, #33]
  433df4:	cbnz	w0, 433244 <nftw@plt+0x306c4>
  433df8:	ldrb	w0, [x19, #24]
  433dfc:	sub	w0, w0, #0x1
  433e00:	strb	w0, [x19, #24]
  433e04:	b	433244 <nftw@plt+0x306c4>
  433e08:	add	x0, x0, #0x1
  433e0c:	str	x0, [x21]
  433e10:	mov	w0, #0x19                  	// #25
  433e14:	strb	w0, [x20, #4]
  433e18:	b	433308 <nftw@plt+0x30788>
  433e1c:	add	x0, x0, #0x1
  433e20:	str	x0, [x21]
  433e24:	mov	w0, #0x10                  	// #16
  433e28:	strb	w0, [x20, #4]
  433e2c:	b	433308 <nftw@plt+0x30788>
  433e30:	add	x1, x0, #0x1
  433e34:	ldr	w22, [x20]
  433e38:	str	x1, [x21]
  433e3c:	mov	w1, #0x2f                  	// #47
  433e40:	strb	w1, [x20, #4]
  433e44:	ldrb	w1, [x0, #1]
  433e48:	cmp	w1, #0x2a
  433e4c:	b.ne	433308 <nftw@plt+0x30788>  // b.any
  433e50:	ldrb	w1, [x19, #1120]
  433e54:	cbz	w1, 433308 <nftw@plt+0x30788>
  433e58:	add	x0, x0, #0x2
  433e5c:	str	x0, [x21]
  433e60:	mov	w0, #0x32                  	// #50
  433e64:	strb	w0, [x20, #4]
  433e68:	b	433308 <nftw@plt+0x30788>
  433e6c:	ldrb	w1, [x19, #1120]
  433e70:	cbz	w1, 433308 <nftw@plt+0x30788>
  433e74:	add	x0, x0, #0x1
  433e78:	str	x0, [x21]
  433e7c:	mov	w0, #0x31                  	// #49
  433e80:	strb	w0, [x20, #4]
  433e84:	b	433308 <nftw@plt+0x30788>
  433e88:	add	x0, x0, #0x1
  433e8c:	str	x0, [x21]
  433e90:	mov	w0, #0x2d                  	// #45
  433e94:	strb	w0, [x20, #4]
  433e98:	b	433308 <nftw@plt+0x30788>
  433e9c:	add	x0, x0, #0x1
  433ea0:	str	x0, [x21]
  433ea4:	mov	w0, #0xf                   	// #15
  433ea8:	strb	w0, [x20, #4]
  433eac:	b	433308 <nftw@plt+0x30788>
  433eb0:	add	x0, x0, #0x1
  433eb4:	str	x0, [x21]
  433eb8:	mov	w0, #0x1f                  	// #31
  433ebc:	strb	w0, [x20, #4]
  433ec0:	b	433308 <nftw@plt+0x30788>
  433ec4:	mov	x0, x19
  433ec8:	sub	x2, x2, #0x1
  433ecc:	mov	x1, x20
  433ed0:	bl	431808 <nftw@plt+0x2ec88>
  433ed4:	ldrb	w0, [x20, #4]
  433ed8:	cmp	w0, #0x3
  433edc:	b.ne	433564 <nftw@plt+0x309e4>  // b.any
  433ee0:	ldr	w22, [x20]
  433ee4:	ldr	x2, [x21]
  433ee8:	b	4339d8 <nftw@plt+0x30e58>
  433eec:	ldr	x0, [x19, #40]
  433ef0:	mov	w4, #0x18                  	// #24
  433ef4:	mov	w2, #0x0                   	// #0
  433ef8:	ldr	w1, [x0, #12]
  433efc:	ldr	x5, [x0]
  433f00:	sub	w1, w1, #0x1
  433f04:	ldr	w3, [x0, #60]
  433f08:	smull	x1, w1, w4
  433f0c:	add	x4, x5, x1
  433f10:	ldr	w1, [x5, x1]
  433f14:	ldrb	w5, [x4, #6]
  433f18:	ldr	w4, [x4, #16]
  433f1c:	sub	w1, w3, w1
  433f20:	add	w4, w4, #0x1
  433f24:	lsr	w1, w1, w5
  433f28:	add	w1, w1, w4
  433f2c:	bl	4359a8 <nftw@plt+0x32e28>
  433f30:	b	4338e4 <nftw@plt+0x30d64>
  433f34:	mov	w0, #0x35                  	// #53
  433f38:	strb	w0, [x20, #4]
  433f3c:	mov	x1, x22
  433f40:	add	x4, x20, #0x10
  433f44:	add	x3, sp, #0x80
  433f48:	mov	x0, x19
  433f4c:	mov	w2, #0x1                   	// #1
  433f50:	bl	42eec0 <nftw@plt+0x2c340>
  433f54:	ldr	w1, [x19, #1192]
  433f58:	str	x0, [x20, #8]
  433f5c:	ldr	w0, [sp, #136]
  433f60:	cmp	w1, w0
  433f64:	b.lt	43354c <nftw@plt+0x309cc>  // b.tstop
  433f68:	ldr	w22, [x20]
  433f6c:	b	4334e0 <nftw@plt+0x30960>
  433f70:	ldrb	w0, [x1]
  433f74:	cmp	w0, #0x27
  433f78:	b.ne	433654 <nftw@plt+0x30ad4>  // b.any
  433f7c:	cmp	w27, #0x52
  433f80:	b.eq	43344c <nftw@plt+0x308cc>  // b.none
  433f84:	b	4336b0 <nftw@plt+0x30b30>
  433f88:	ldrb	w0, [x19, #21]
  433f8c:	cbz	w0, 433ba4 <nftw@plt+0x31024>
  433f90:	cbz	w24, 433fa0 <nftw@plt+0x31420>
  433f94:	ldrh	w0, [x20, #6]
  433f98:	orr	w0, w0, #0x20
  433f9c:	strh	w0, [x20, #6]
  433fa0:	ldr	x1, [x19]
  433fa4:	adrp	x0, 481000 <_obstack_memory_used@@Base+0x1fbb8>
  433fa8:	add	x0, x0, #0xaf0
  433fac:	ldrb	w2, [x19, #16]
  433fb0:	ldr	x1, [x1]
  433fb4:	sub	w24, w1, w28
  433fb8:	ldurb	w1, [x1, #-1]
  433fbc:	ldrh	w0, [x0, x1, lsl #1]
  433fc0:	tst	x0, #0x400
  433fc4:	cinc	w24, w24, eq  // eq = none
  433fc8:	cbnz	w2, 43487c <nftw@plt+0x31cfc>
  433fcc:	ldrb	w0, [x19, #25]
  433fd0:	cbnz	w0, 43487c <nftw@plt+0x31cfc>
  433fd4:	mov	w22, w24
  433fd8:	ldr	x0, [x19, #64]
  433fdc:	mov	w25, w22
  433fe0:	ldp	x23, x1, [x0, #16]
  433fe4:	sub	x1, x1, x23
  433fe8:	cmp	x1, w22, uxtw
  433fec:	b.cc	4348e0 <nftw@plt+0x31d60>  // b.lo, b.ul, b.last
  433ff0:	mov	x3, x23
  433ff4:	add	x25, x23, x25
  433ff8:	str	x25, [x0, #16]
  433ffc:	mov	w0, #0x4f                  	// #79
  434000:	strb	w0, [x20, #4]
  434004:	mov	w0, #0x2f                  	// #47
  434008:	str	w22, [x20, #8]
  43400c:	sub	w2, w24, #0x1
  434010:	str	x23, [x20, #16]
  434014:	mov	x1, x28
  434018:	strb	w0, [x3], #1
  43401c:	mov	x0, x3
  434020:	bl	402490 <memcpy@plt>
  434024:	mov	x3, x0
  434028:	ldrb	w0, [x19, #16]
  43402c:	cbnz	w0, 434038 <nftw@plt+0x314b8>
  434030:	ldrb	w0, [x19, #25]
  434034:	cbz	w0, 434040 <nftw@plt+0x314c0>
  434038:	cmp	w27, #0x2f
  43403c:	b.eq	434968 <nftw@plt+0x31de8>  // b.none
  434040:	ldr	w1, [x19, #1396]
  434044:	cbz	w1, 4348c4 <nftw@plt+0x31d44>
  434048:	ldr	w0, [x19, #1392]
  43404c:	cmp	w0, w1
  434050:	b.eq	43490c <nftw@plt+0x31d8c>  // b.none
  434054:	ldr	w22, [x20, #8]
  434058:	ldrsw	x23, [x19, #1392]
  43405c:	add	w0, w22, #0x1
  434060:	ldr	x24, [x19, #1384]
  434064:	sxtw	x0, w0
  434068:	bl	461560 <_obstack_memory_used@@Base+0x118>
  43406c:	lsl	x23, x23, #4
  434070:	ldrsw	x1, [x19, #1392]
  434074:	sxtw	x22, w22
  434078:	ldr	x3, [x19, #1384]
  43407c:	str	x0, [x24, x23]
  434080:	lsl	x0, x1, #4
  434084:	mov	x2, x22
  434088:	ldr	x1, [x20, #16]
  43408c:	ldr	x0, [x3, x0]
  434090:	bl	402490 <memcpy@plt>
  434094:	ldrsw	x0, [x19, #1392]
  434098:	ldr	x1, [x19, #1384]
  43409c:	lsl	x0, x0, #4
  4340a0:	ldr	x0, [x1, x0]
  4340a4:	strb	wzr, [x0, x22]
  4340a8:	ldr	x2, [x19, #1384]
  4340ac:	ldr	w0, [x19, #1392]
  4340b0:	ldr	w22, [x20]
  4340b4:	add	w1, w0, #0x1
  4340b8:	add	x0, x2, w0, sxtw #4
  4340bc:	str	w22, [x0, #8]
  4340c0:	str	w1, [x19, #1392]
  4340c4:	b	4334e0 <nftw@plt+0x30960>
  4340c8:	add	x2, x2, #0x1
  4340cc:	str	x2, [x21]
  4340d0:	mov	w0, #0x1a                  	// #26
  4340d4:	strb	w0, [x20, #4]
  4340d8:	b	433308 <nftw@plt+0x30788>
  4340dc:	ldrsb	w1, [x19, #1198]
  4340e0:	cmp	w1, #0x0
  4340e4:	b.le	433ae0 <nftw@plt+0x30f60>
  4340e8:	ldrb	w1, [x19, #1120]
  4340ec:	cbnz	w1, 433ae0 <nftw@plt+0x30f60>
  4340f0:	b	433ad8 <nftw@plt+0x30f58>
  4340f4:	ldr	x2, [x3]
  4340f8:	sub	x0, x2, x22
  4340fc:	cmp	x0, #0x7
  434100:	b.ls	433b78 <nftw@plt+0x30ff8>  // b.plast
  434104:	mov	w1, #0x2d                  	// #45
  434108:	b	43411c <nftw@plt+0x3159c>
  43410c:	add	x22, x22, #0x1
  434110:	sub	x0, x2, x22
  434114:	cmp	x0, #0x7
  434118:	b.ls	433b78 <nftw@plt+0x30ff8>  // b.plast
  43411c:	ldrb	w0, [x22]
  434120:	and	w0, w0, #0xffffffdf
  434124:	and	w0, w0, #0xff
  434128:	cmp	w0, #0x46
  43412c:	b.ne	43410c <nftw@plt+0x3158c>  // b.any
  434130:	ldrb	w0, [x22, #1]
  434134:	and	w0, w0, #0xffffffdf
  434138:	and	w0, w0, #0xff
  43413c:	cmp	w0, #0x41
  434140:	b.ne	43410c <nftw@plt+0x3158c>  // b.any
  434144:	ldrb	w0, [x22, #2]
  434148:	and	w0, w0, #0xffffffdf
  43414c:	and	w0, w0, #0xff
  434150:	cmp	w0, #0x4c
  434154:	b.ne	43410c <nftw@plt+0x3158c>  // b.any
  434158:	ldrb	w0, [x22, #3]
  43415c:	and	w0, w0, #0xffffffdf
  434160:	and	w0, w0, #0xff
  434164:	cmp	w0, #0x4c
  434168:	b.ne	43410c <nftw@plt+0x3158c>  // b.any
  43416c:	ldrb	w0, [x22, #4]
  434170:	and	w4, w0, #0xffffffdf
  434174:	cmp	w4, #0x53
  434178:	b.ne	434230 <nftw@plt+0x316b0>  // b.any
  43417c:	ldrb	w0, [x22, #5]
  434180:	add	x22, x22, #0x5
  434184:	b	43418c <nftw@plt+0x3160c>
  434188:	ldrb	w0, [x22, #1]!
  43418c:	cmp	w0, #0x20
  434190:	ccmp	w0, #0x9, #0x4, ne  // ne = any
  434194:	ccmp	w0, w1, #0x4, ne  // ne = any
  434198:	b.eq	434188 <nftw@plt+0x31608>  // b.none
  43419c:	and	w0, w0, #0xffffffdf
  4341a0:	cmp	w0, #0x54
  4341a4:	b.ne	43410c <nftw@plt+0x3158c>  // b.any
  4341a8:	ldrb	w0, [x22, #1]
  4341ac:	and	w0, w0, #0xffffffdf
  4341b0:	and	w0, w0, #0xff
  4341b4:	cmp	w0, #0x48
  4341b8:	b.ne	43410c <nftw@plt+0x3158c>  // b.any
  4341bc:	ldrb	w0, [x22, #2]
  4341c0:	and	w0, w0, #0xffffffdf
  4341c4:	and	w0, w0, #0xff
  4341c8:	cmp	w0, #0x52
  4341cc:	b.ne	43410c <nftw@plt+0x3158c>  // b.any
  4341d0:	ldrb	w0, [x22, #3]
  4341d4:	and	w0, w0, #0xffffffdf
  4341d8:	and	w0, w0, #0xff
  4341dc:	cmp	w0, #0x55
  4341e0:	b.eq	434228 <nftw@plt+0x316a8>  // b.none
  4341e4:	cmp	w0, #0x4f
  4341e8:	b.ne	43410c <nftw@plt+0x3158c>  // b.any
  4341ec:	ldrb	w0, [x22, #4]
  4341f0:	and	w0, w0, #0xffffffdf
  4341f4:	and	w0, w0, #0xff
  4341f8:	cmp	w0, #0x55
  4341fc:	b.ne	43410c <nftw@plt+0x3158c>  // b.any
  434200:	ldrb	w0, [x22, #5]
  434204:	and	w0, w0, #0xffffffdf
  434208:	and	w0, w0, #0xff
  43420c:	cmp	w0, #0x47
  434210:	b.ne	43410c <nftw@plt+0x3158c>  // b.any
  434214:	ldrb	w0, [x22, #6]
  434218:	and	w0, w0, #0xffffffdf
  43421c:	and	w0, w0, #0xff
  434220:	cmp	w0, #0x48
  434224:	b.ne	43410c <nftw@plt+0x3158c>  // b.any
  434228:	mov	w24, #0x1                   	// #1
  43422c:	b	433b78 <nftw@plt+0x30ff8>
  434230:	add	x22, x22, #0x4
  434234:	b	43418c <nftw@plt+0x3160c>
  434238:	ldrb	w0, [x2, #1]
  43423c:	cmp	w0, #0x2e
  434240:	b.eq	43424c <nftw@plt+0x316cc>  // b.none
  434244:	ldr	w22, [x20]
  434248:	b	433308 <nftw@plt+0x30788>
  43424c:	ldr	w22, [x20]
  434250:	add	x2, x2, #0x2
  434254:	str	x2, [x21]
  434258:	mov	w0, #0x2c                  	// #44
  43425c:	strb	w0, [x20, #4]
  434260:	b	433308 <nftw@plt+0x30788>
  434264:	add	x0, x0, #0x1
  434268:	str	x0, [x21]
  43426c:	ldr	w22, [x20]
  434270:	mov	w0, #0x2e                  	// #46
  434274:	strb	w0, [x20, #4]
  434278:	b	433308 <nftw@plt+0x30788>
  43427c:	mov	x0, x19
  434280:	bl	42fd08 <nftw@plt+0x2d188>
  434284:	tst	w0, #0xff
  434288:	b.eq	433b58 <nftw@plt+0x30fd8>  // b.none
  43428c:	mov	x0, x19
  434290:	adrp	x2, 47c000 <_obstack_memory_used@@Base+0x1abb8>
  434294:	mov	w1, #0x3                   	// #3
  434298:	add	x2, x2, #0xea0
  43429c:	bl	427178 <nftw@plt+0x245f8>
  4342a0:	b	433b58 <nftw@plt+0x30fd8>
  4342a4:	add	x0, x2, #0x1
  4342a8:	str	x0, [x21]
  4342ac:	mov	w0, #0xd                   	// #13
  4342b0:	strb	w0, [x20, #4]
  4342b4:	ldrb	w0, [x2, #1]
  4342b8:	cmp	w0, #0x3d
  4342bc:	b.ne	433308 <nftw@plt+0x30788>  // b.any
  4342c0:	add	x2, x2, #0x2
  4342c4:	str	x2, [x21]
  4342c8:	mov	w0, #0x24                  	// #36
  4342cc:	strb	w0, [x20, #4]
  4342d0:	b	433308 <nftw@plt+0x30788>
  4342d4:	str	x1, [x4]
  4342d8:	str	xzr, [x3]
  4342dc:	str	x0, [x3, #16]
  4342e0:	b	433dd4 <nftw@plt+0x31254>
  4342e4:	mov	x0, x19
  4342e8:	adrp	x2, 47c000 <_obstack_memory_used@@Base+0x1abb8>
  4342ec:	mov	w1, #0x2                   	// #2
  4342f0:	add	x2, x2, #0xf50
  4342f4:	bl	427298 <nftw@plt+0x24718>
  4342f8:	b	433b58 <nftw@plt+0x30fd8>
  4342fc:	ldrh	w1, [x20, #6]
  434300:	add	x2, x0, #0x1
  434304:	str	x2, [x21]
  434308:	mov	w2, #0x25                  	// #37
  43430c:	orr	w1, w1, #0x2
  434310:	strb	w2, [x20, #4]
  434314:	strh	w1, [x20, #6]
  434318:	ldrb	w1, [x0, #1]
  43431c:	cmp	w1, #0x25
  434320:	b.ne	433308 <nftw@plt+0x30788>  // b.any
  434324:	ldrb	w1, [x0, #2]
  434328:	cmp	w1, #0x3a
  43432c:	b.ne	433308 <nftw@plt+0x30788>  // b.any
  434330:	add	x0, x0, #0x3
  434334:	str	x0, [x21]
  434338:	mov	w0, #0x26                  	// #38
  43433c:	strb	w0, [x20, #4]
  434340:	str	wzr, [x20, #8]
  434344:	b	433308 <nftw@plt+0x30788>
  434348:	cmp	w4, #0x6c
  43434c:	b.eq	434640 <nftw@plt+0x31ac0>  // b.none
  434350:	cmp	w4, #0x9
  434354:	cset	w1, ne  // ne = any
  434358:	cmp	w0, #0x4
  43435c:	b.eq	43469c <nftw@plt+0x31b1c>  // b.none
  434360:	cmp	w4, #0x2e
  434364:	sub	w0, w4, #0x20
  434368:	ccmp	w1, #0x0, #0x4, ne  // ne = any
  43436c:	and	w0, w0, #0xff
  434370:	ccmp	w0, #0x1, #0x0, ne  // ne = any
  434374:	b.hi	434394 <nftw@plt+0x31814>  // b.pmore
  434378:	ldrb	w4, [x22, #1]!
  43437c:	cmp	w4, #0x2e
  434380:	sub	w0, w4, #0x20
  434384:	ccmp	w4, #0x9, #0x4, ne  // ne = any
  434388:	and	w0, w0, #0xff
  43438c:	ccmp	w0, #0x1, #0x0, ne  // ne = any
  434390:	b.ls	434378 <nftw@plt+0x317f8>  // b.plast
  434394:	and	w0, w4, #0xffffffdf
  434398:	cmp	w0, #0x45
  43439c:	and	w0, w0, #0xff
  4343a0:	b.ne	434748 <nftw@plt+0x31bc8>  // b.any
  4343a4:	ldr	x0, [x3]
  4343a8:	sub	x0, x0, x22
  4343ac:	cmp	x0, #0xc
  4343b0:	b.ls	433b78 <nftw@plt+0x30ff8>  // b.plast
  4343b4:	cmp	w4, #0x45
  4343b8:	add	x6, x22, #0x1
  4343bc:	b.eq	434928 <nftw@plt+0x31da8>  // b.none
  4343c0:	mov	x0, x6
  4343c4:	adrp	x1, 47c000 <_obstack_memory_used@@Base+0x1abb8>
  4343c8:	mov	x2, #0x3                   	// #3
  4343cc:	add	x1, x1, #0xfa0
  4343d0:	str	x3, [sp, #96]
  4343d4:	str	w4, [sp, #104]
  4343d8:	str	w5, [sp, #112]
  4343dc:	bl	402850 <memcmp@plt>
  4343e0:	ldr	w4, [sp, #104]
  4343e4:	ldr	w5, [sp, #112]
  4343e8:	ldr	x3, [sp, #96]
  4343ec:	cbnz	w0, 433b78 <nftw@plt+0x30ff8>
  4343f0:	add	x0, x22, #0x5
  4343f4:	ldrb	w1, [x22, #4]!
  4343f8:	cmp	w1, #0x2c
  4343fc:	csel	x0, x0, x22, eq  // eq = none
  434400:	ldrb	w1, [x0]
  434404:	cmp	w1, #0x20
  434408:	b.ne	433b78 <nftw@plt+0x30ff8>  // b.any
  43440c:	ldrb	w7, [x0, #1]
  434410:	add	x22, x0, #0x1
  434414:	cbz	w5, 434420 <nftw@plt+0x318a0>
  434418:	cmp	w7, #0x66
  43441c:	b.eq	433b78 <nftw@plt+0x30ff8>  // b.none
  434420:	cmp	w4, #0x65
  434424:	b.eq	434a7c <nftw@plt+0x31efc>  // b.none
  434428:	and	w0, w7, #0xffffffdf
  43442c:	and	w0, w0, #0xff
  434430:	cmp	w0, #0x46
  434434:	b.ne	433b78 <nftw@plt+0x30ff8>  // b.any
  434438:	ldr	x6, [x3]
  43443c:	sub	x0, x6, x22
  434440:	cmp	x0, #0x7
  434444:	b.ls	433b78 <nftw@plt+0x30ff8>  // b.plast
  434448:	cmp	w7, #0x46
  43444c:	b.eq	434a30 <nftw@plt+0x31eb0>  // b.none
  434450:	str	w5, [sp, #104]
  434454:	str	w7, [sp, #112]
  434458:	str	x6, [sp, #120]
  43445c:	cbnz	w5, 433b78 <nftw@plt+0x30ff8>
  434460:	add	x0, x22, #0x1
  434464:	adrp	x1, 47c000 <_obstack_memory_used@@Base+0x1abb8>
  434468:	mov	x2, #0x3                   	// #3
  43446c:	add	x1, x1, #0xfd8
  434470:	str	x3, [sp, #96]
  434474:	bl	402850 <memcmp@plt>
  434478:	ldr	w5, [sp, #104]
  43447c:	ldr	w7, [sp, #112]
  434480:	ldr	x3, [sp, #96]
  434484:	ldr	x6, [sp, #120]
  434488:	cbnz	w0, 433b78 <nftw@plt+0x30ff8>
  43448c:	ldrb	w0, [x22, #4]
  434490:	add	x4, x22, #0x4
  434494:	mov	w1, #0x73                  	// #115
  434498:	cmp	w1, w0
  43449c:	b.eq	434ad8 <nftw@plt+0x31f58>  // b.none
  4344a0:	cmp	w0, #0x20
  4344a4:	mov	w1, #0x2d                  	// #45
  4344a8:	ccmp	w0, w1, #0x4, ne  // ne = any
  4344ac:	b.ne	434abc <nftw@plt+0x31f3c>  // b.any
  4344b0:	add	x4, x22, #0x5
  4344b4:	cmp	w7, #0x66
  4344b8:	b.eq	4344c8 <nftw@plt+0x31948>  // b.none
  4344bc:	ldrb	w0, [x4]
  4344c0:	cmp	w0, #0x54
  4344c4:	b.eq	434a88 <nftw@plt+0x31f08>  // b.none
  4344c8:	cbnz	w5, 433b78 <nftw@plt+0x30ff8>
  4344cc:	ldrb	w0, [x4]
  4344d0:	cmp	w0, #0x74
  4344d4:	b.ne	433b78 <nftw@plt+0x30ff8>  // b.any
  4344d8:	sub	x22, x6, x4
  4344dc:	cmp	x22, #0x3
  4344e0:	b.ls	433b78 <nftw@plt+0x30ff8>  // b.plast
  4344e4:	adrp	x1, 47c000 <_obstack_memory_used@@Base+0x1abb8>
  4344e8:	add	x6, x4, #0x1
  4344ec:	add	x1, x1, #0xe40
  4344f0:	mov	x0, x6
  4344f4:	mov	x2, #0x3                   	// #3
  4344f8:	stp	x3, x4, [sp, #96]
  4344fc:	str	x6, [sp, #112]
  434500:	str	w5, [sp, #120]
  434504:	bl	402850 <memcmp@plt>
  434508:	ldp	x3, x4, [sp, #96]
  43450c:	cbz	w0, 434aec <nftw@plt+0x31f6c>
  434510:	cmp	x22, #0x6
  434514:	b.ls	433b78 <nftw@plt+0x30ff8>  // b.plast
  434518:	ldr	w5, [sp, #120]
  43451c:	adrp	x1, 47c000 <_obstack_memory_used@@Base+0x1abb8>
  434520:	ldr	x6, [sp, #112]
  434524:	cmp	w5, #0x0
  434528:	add	x1, x1, #0xe58
  43452c:	adrp	x2, 47c000 <_obstack_memory_used@@Base+0x1abb8>
  434530:	add	x2, x2, #0xe50
  434534:	mov	x0, x6
  434538:	csel	x1, x2, x1, ne  // ne = any
  43453c:	mov	x2, #0x6                   	// #6
  434540:	bl	402850 <memcmp@plt>
  434544:	ldr	x3, [sp, #96]
  434548:	cbnz	w0, 433b78 <nftw@plt+0x30ff8>
  43454c:	ldr	x4, [sp, #104]
  434550:	add	x4, x4, #0x7
  434554:	b	43455c <nftw@plt+0x319dc>
  434558:	add	x4, x4, #0x1
  43455c:	ldrb	w0, [x4]
  434560:	cmp	w0, #0x2e
  434564:	sub	w1, w0, #0x20
  434568:	ccmp	w0, #0x9, #0x4, ne  // ne = any
  43456c:	and	w1, w1, #0xff
  434570:	ccmp	w1, #0x1, #0x0, ne  // ne = any
  434574:	b.ls	434558 <nftw@plt+0x319d8>  // b.plast
  434578:	cmp	w0, #0x2d
  43457c:	b.eq	434af4 <nftw@plt+0x31f74>  // b.none
  434580:	mov	x22, x4
  434584:	b	433d64 <nftw@plt+0x311e4>
  434588:	ldrb	w0, [x1, #1]
  43458c:	cmp	w0, #0x22
  434590:	b.ne	43344c <nftw@plt+0x308cc>  // b.any
  434594:	b	4336a4 <nftw@plt+0x30b24>
  434598:	ldrb	w0, [x19, #1120]
  43459c:	cbz	w0, 4345b0 <nftw@plt+0x31a30>
  4345a0:	ldr	w0, [x19, #1116]
  4345a4:	sub	w0, w0, #0xb
  4345a8:	cmp	w0, #0x1
  4345ac:	b.hi	43488c <nftw@plt+0x31d0c>  // b.pmore
  4345b0:	ldrh	w0, [x20, #6]
  4345b4:	add	x2, x2, #0x1
  4345b8:	str	x2, [x21]
  4345bc:	mov	w1, #0x27                  	// #39
  4345c0:	orr	w0, w0, #0x2
  4345c4:	strb	w1, [x20, #4]
  4345c8:	strh	w0, [x20, #6]
  4345cc:	b	433308 <nftw@plt+0x30788>
  4345d0:	adrp	x2, 47c000 <_obstack_memory_used@@Base+0x1abb8>
  4345d4:	mov	w1, #0x3                   	// #3
  4345d8:	add	x2, x2, #0xeb8
  4345dc:	mov	x0, x19
  4345e0:	bl	427178 <nftw@plt+0x245f8>
  4345e4:	tst	w0, #0xff
  4345e8:	b.ne	43461c <nftw@plt+0x31a9c>  // b.any
  4345ec:	ldrb	w0, [x21, #105]
  4345f0:	orr	w0, w0, #0x1
  4345f4:	strb	w0, [x21, #105]
  4345f8:	ldr	x2, [x19]
  4345fc:	b	433b10 <nftw@plt+0x30f90>
  434600:	mov	x0, x19
  434604:	adrp	x2, 47c000 <_obstack_memory_used@@Base+0x1abb8>
  434608:	mov	w1, #0x0                   	// #0
  43460c:	add	x2, x2, #0xf20
  434610:	bl	427178 <nftw@plt+0x245f8>
  434614:	tst	w0, #0xff
  434618:	b.eq	4345ec <nftw@plt+0x31a6c>  // b.none
  43461c:	mov	x0, x19
  434620:	adrp	x2, 47c000 <_obstack_memory_used@@Base+0x1abb8>
  434624:	mov	w1, #0x5                   	// #5
  434628:	add	x2, x2, #0xee8
  43462c:	bl	427178 <nftw@plt+0x245f8>
  434630:	b	4345ec <nftw@plt+0x31a6c>
  434634:	adrp	x2, 47c000 <_obstack_memory_used@@Base+0x1abb8>
  434638:	mov	w1, #0x2                   	// #2
  43463c:	b	4345d8 <nftw@plt+0x31a58>
  434640:	ldr	x0, [x3]
  434644:	sub	x0, x0, x22
  434648:	sub	x0, x0, #0x1
  43464c:	cmp	x0, #0xf
  434650:	b.ls	433b78 <nftw@plt+0x30ff8>  // b.plast
  434654:	add	x0, x28, #0x2
  434658:	adrp	x1, 47c000 <_obstack_memory_used@@Base+0x1abb8>
  43465c:	mov	x2, #0x10                  	// #16
  434660:	add	x1, x1, #0xf78
  434664:	str	x3, [sp, #96]
  434668:	bl	402850 <memcmp@plt>
  43466c:	ldr	x3, [sp, #96]
  434670:	cbnz	w0, 433b78 <nftw@plt+0x30ff8>
  434674:	ldrb	w0, [x28, #18]
  434678:	add	x22, x28, #0x12
  43467c:	cmp	w0, #0x20
  434680:	ccmp	w0, #0x9, #0x4, ne  // ne = any
  434684:	b.ne	433d64 <nftw@plt+0x311e4>  // b.any
  434688:	ldrb	w0, [x22, #1]!
  43468c:	cmp	w0, #0x20
  434690:	ccmp	w0, #0x9, #0x4, ne  // ne = any
  434694:	b.eq	434688 <nftw@plt+0x31b08>  // b.none
  434698:	b	433d64 <nftw@plt+0x311e4>
  43469c:	cmp	w4, #0x20
  4346a0:	ccmp	w1, #0x0, #0x4, ne  // ne = any
  4346a4:	b.ne	4346b8 <nftw@plt+0x31b38>  // b.any
  4346a8:	ldrb	w0, [x22, #1]!
  4346ac:	cmp	w0, #0x20
  4346b0:	ccmp	w0, #0x9, #0x4, ne  // ne = any
  4346b4:	b.eq	4346a8 <nftw@plt+0x31b28>  // b.none
  4346b8:	ldr	x4, [x3]
  4346bc:	str	x4, [sp, #104]
  4346c0:	sub	x0, x4, x22
  4346c4:	cmp	x0, #0x7
  4346c8:	b.ls	433b78 <nftw@plt+0x30ff8>  // b.plast
  4346cc:	mov	x0, x22
  4346d0:	adrp	x1, 47c000 <_obstack_memory_used@@Base+0x1abb8>
  4346d4:	mov	x2, #0x7                   	// #7
  4346d8:	add	x1, x1, #0xf90
  4346dc:	str	x3, [sp, #96]
  4346e0:	bl	402850 <memcmp@plt>
  4346e4:	ldr	x3, [sp, #96]
  4346e8:	cbnz	w0, 433b78 <nftw@plt+0x30ff8>
  4346ec:	ldrb	w0, [x22, #7]
  4346f0:	ldr	x4, [sp, #104]
  4346f4:	cmp	w0, #0x55
  4346f8:	b.eq	434960 <nftw@plt+0x31de0>  // b.none
  4346fc:	add	x0, x22, #0x7
  434700:	sub	x4, x4, x0
  434704:	cmp	x4, #0x3
  434708:	b.ls	433b78 <nftw@plt+0x30ff8>  // b.plast
  43470c:	ldur	w1, [x22, #7]
  434710:	mov	w0, #0x554f                	// #21839
  434714:	movk	w0, #0x4847, lsl #16
  434718:	cmp	w1, w0
  43471c:	b.ne	433b78 <nftw@plt+0x30ff8>  // b.any
  434720:	add	x22, x22, #0xb
  434724:	ldrb	w0, [x22]
  434728:	cmp	w0, #0x20
  43472c:	ccmp	w0, #0x9, #0x4, ne  // ne = any
  434730:	b.ne	433d64 <nftw@plt+0x311e4>  // b.any
  434734:	ldrb	w0, [x22, #1]!
  434738:	cmp	w0, #0x20
  43473c:	ccmp	w0, #0x9, #0x4, ne  // ne = any
  434740:	b.eq	434734 <nftw@plt+0x31bb4>  // b.none
  434744:	b	433d64 <nftw@plt+0x311e4>
  434748:	cmp	w0, #0x49
  43474c:	b.ne	4348bc <nftw@plt+0x31d3c>  // b.any
  434750:	ldr	x0, [x3]
  434754:	sub	x0, x0, x22
  434758:	cmp	x0, #0x13
  43475c:	b.ls	433b78 <nftw@plt+0x30ff8>  // b.plast
  434760:	cmp	w4, #0x49
  434764:	add	x6, x22, #0x1
  434768:	b.eq	4349d8 <nftw@plt+0x31e58>  // b.none
  43476c:	mov	x0, x6
  434770:	adrp	x1, 47c000 <_obstack_memory_used@@Base+0x1abb8>
  434774:	mov	x2, #0xa                   	// #10
  434778:	add	x1, x1, #0xfb8
  43477c:	str	x3, [sp, #96]
  434780:	str	w4, [sp, #104]
  434784:	str	w5, [sp, #112]
  434788:	bl	402850 <memcmp@plt>
  43478c:	ldr	w4, [sp, #104]
  434790:	ldr	w5, [sp, #112]
  434794:	ldr	x3, [sp, #96]
  434798:	cbnz	w0, 433b78 <nftw@plt+0x30ff8>
  43479c:	ldrb	w1, [x22, #11]
  4347a0:	add	x0, x22, #0xb
  4347a4:	cmp	w1, #0x20
  4347a8:	b.eq	434ab4 <nftw@plt+0x31f34>  // b.none
  4347ac:	adrp	x1, 47c000 <_obstack_memory_used@@Base+0x1abb8>
  4347b0:	mov	x2, #0x3                   	// #3
  4347b4:	add	x1, x1, #0xfc8
  4347b8:	str	x3, [sp, #96]
  4347bc:	str	w4, [sp, #104]
  4347c0:	str	w5, [sp, #112]
  4347c4:	bl	402850 <memcmp@plt>
  4347c8:	ldr	w4, [sp, #104]
  4347cc:	ldr	w5, [sp, #112]
  4347d0:	ldr	x3, [sp, #96]
  4347d4:	cbnz	w0, 433b78 <nftw@plt+0x30ff8>
  4347d8:	add	x22, x22, #0xe
  4347dc:	ldrb	w0, [x22]
  4347e0:	cmp	w4, #0x69
  4347e4:	b.ne	4347f0 <nftw@plt+0x31c70>  // b.any
  4347e8:	cmp	w0, #0x46
  4347ec:	b.eq	433b78 <nftw@plt+0x30ff8>  // b.none
  4347f0:	ldrb	w7, [x22]
  4347f4:	b	434428 <nftw@plt+0x318a8>
  4347f8:	add	x4, x4, #0x2
  4347fc:	ldurb	w0, [x4, #-1]
  434800:	sub	x22, x4, #0x1
  434804:	cmp	w0, #0x2a
  434808:	ccmp	w0, #0x0, #0x4, ne  // ne = any
  43480c:	b.eq	434b3c <nftw@plt+0x31fbc>  // b.none
  434810:	cmp	w0, #0xd
  434814:	ccmp	w0, #0xa, #0x4, ne  // ne = any
  434818:	b.ne	434b50 <nftw@plt+0x31fd0>  // b.any
  43481c:	ldrb	w0, [x22]
  434820:	cmp	w0, #0x2a
  434824:	b.ne	433b78 <nftw@plt+0x30ff8>  // b.any
  434828:	ldrb	w0, [x22, #1]
  43482c:	cmp	w0, #0x2f
  434830:	csinc	w24, w24, wzr, ne  // ne = any
  434834:	b	433b78 <nftw@plt+0x30ff8>
  434838:	ldrb	w0, [x28, #13]
  43483c:	cmp	w0, #0x40
  434840:	b.ne	433b78 <nftw@plt+0x30ff8>  // b.any
  434844:	mov	x0, #0xd                   	// #13
  434848:	b	433d60 <nftw@plt+0x311e0>
  43484c:	mov	w0, #0x7                   	// #7
  434850:	ldr	w22, [x20]
  434854:	strb	w0, [x20, #4]
  434858:	b	433308 <nftw@plt+0x30788>
  43485c:	cmp	w27, #0x3d
  434860:	b.ne	43484c <nftw@plt+0x31ccc>  // b.any
  434864:	ldr	w22, [x20]
  434868:	add	x28, x28, #0x1
  43486c:	str	x28, [x21]
  434870:	mov	w0, #0x1e                  	// #30
  434874:	strb	w0, [x20, #4]
  434878:	b	433308 <nftw@plt+0x30788>
  43487c:	cmp	w27, #0x2f
  434880:	add	w22, w24, #0x2
  434884:	csel	w22, w22, w24, eq  // eq = none
  434888:	b	433fd8 <nftw@plt+0x31458>
  43488c:	ldrb	w0, [x2, #1]
  434890:	cmp	w0, #0x3a
  434894:	b.ne	4345b0 <nftw@plt+0x31a30>  // b.any
  434898:	ldrb	w0, [x2, #2]
  43489c:	and	w0, w0, #0xfffffffb
  4348a0:	and	w0, w0, #0xff
  4348a4:	cmp	w0, #0x3a
  4348a8:	b.eq	4345b0 <nftw@plt+0x31a30>  // b.none
  4348ac:	b	433308 <nftw@plt+0x30788>
  4348b0:	ldrb	w0, [x19, #1129]
  4348b4:	cbnz	w0, 4336b0 <nftw@plt+0x30b30>
  4348b8:	b	43344c <nftw@plt+0x308cc>
  4348bc:	mov	w7, w4
  4348c0:	b	434428 <nftw@plt+0x318a8>
  4348c4:	mov	w0, #0x100                 	// #256
  4348c8:	str	w0, [x19, #1396]
  4348cc:	mov	x0, #0x1000                	// #4096
  4348d0:	bl	461560 <_obstack_memory_used@@Base+0x118>
  4348d4:	str	x0, [x19, #1384]
  4348d8:	ldr	w1, [x19, #1396]
  4348dc:	b	434048 <nftw@plt+0x314c8>
  4348e0:	mov	x1, x25
  4348e4:	mov	x0, x19
  4348e8:	bl	4314b0 <nftw@plt+0x2e930>
  4348ec:	ldr	x1, [x19, #64]
  4348f0:	str	x1, [x0]
  4348f4:	ldr	x23, [x0, #16]
  4348f8:	str	x0, [x19, #64]
  4348fc:	b	433ff0 <nftw@plt+0x31470>
  434900:	mov	w0, #0x7                   	// #7
  434904:	strb	w0, [x20, #4]
  434908:	b	433308 <nftw@plt+0x30788>
  43490c:	ldr	x0, [x19, #1384]
  434910:	lsl	w1, w1, #1
  434914:	str	w1, [x19, #1396]
  434918:	sbfiz	x1, x1, #4, #32
  43491c:	bl	4615e8 <_obstack_memory_used@@Base+0x1a0>
  434920:	str	x0, [x19, #1384]
  434924:	b	434054 <nftw@plt+0x314d4>
  434928:	mov	x0, x6
  43492c:	adrp	x1, 47c000 <_obstack_memory_used@@Base+0x1abb8>
  434930:	mov	x2, #0x3                   	// #3
  434934:	add	x1, x1, #0xf98
  434938:	stp	x6, x3, [sp, #96]
  43493c:	str	w4, [sp, #112]
  434940:	str	w5, [sp, #120]
  434944:	bl	402850 <memcmp@plt>
  434948:	ldr	w4, [sp, #112]
  43494c:	ldr	w5, [sp, #120]
  434950:	ldp	x6, x3, [sp, #96]
  434954:	cbnz	w0, 4343c0 <nftw@plt+0x31840>
  434958:	mov	w5, #0x1                   	// #1
  43495c:	b	4343f0 <nftw@plt+0x31870>
  434960:	add	x22, x22, #0x8
  434964:	b	434724 <nftw@plt+0x31ba4>
  434968:	sub	w0, w22, #0x2
  43496c:	sub	w1, w22, #0x1
  434970:	mov	w2, #0x2a                  	// #42
  434974:	strb	w2, [x23, #1]
  434978:	cmp	w0, #0x2
  43497c:	strb	w2, [x23, w0, uxtw]
  434980:	strb	w27, [x23, x1]
  434984:	b.ls	434040 <nftw@plt+0x314c0>  // b.plast
  434988:	sub	w1, w22, #0x5
  43498c:	mov	x0, x3
  434990:	add	x1, x1, #0x2
  434994:	mov	w2, #0x7c                  	// #124
  434998:	add	x1, x23, x1
  43499c:	b	4349ac <nftw@plt+0x31e2c>
  4349a0:	add	x0, x0, #0x1
  4349a4:	cmp	x0, x1
  4349a8:	b.eq	434040 <nftw@plt+0x314c0>  // b.none
  4349ac:	ldrb	w3, [x0, #1]
  4349b0:	cmp	w3, #0x2f
  4349b4:	b.ne	4349a0 <nftw@plt+0x31e20>  // b.any
  4349b8:	ldrb	w3, [x0]
  4349bc:	cmp	w3, #0x2a
  4349c0:	b.eq	4349d0 <nftw@plt+0x31e50>  // b.none
  4349c4:	ldrb	w3, [x0, #2]
  4349c8:	cmp	w3, #0x2a
  4349cc:	b.ne	4349a0 <nftw@plt+0x31e20>  // b.any
  4349d0:	strb	w2, [x0, #1]
  4349d4:	b	4349a0 <nftw@plt+0x31e20>
  4349d8:	mov	x0, x6
  4349dc:	adrp	x1, 47c000 <_obstack_memory_used@@Base+0x1abb8>
  4349e0:	mov	x2, #0xa                   	// #10
  4349e4:	add	x1, x1, #0xfa8
  4349e8:	stp	x6, x3, [sp, #96]
  4349ec:	str	w4, [sp, #112]
  4349f0:	str	w5, [sp, #120]
  4349f4:	bl	402850 <memcmp@plt>
  4349f8:	ldr	w4, [sp, #112]
  4349fc:	ldr	w5, [sp, #120]
  434a00:	ldp	x6, x3, [sp, #96]
  434a04:	cbnz	w0, 43476c <nftw@plt+0x31bec>
  434a08:	ldrb	w0, [x22, #11]
  434a0c:	cmp	w0, #0x20
  434a10:	b.ne	434b24 <nftw@plt+0x31fa4>  // b.any
  434a14:	ldrb	w0, [x22, #12]
  434a18:	add	x22, x22, #0xc
  434a1c:	cmp	w0, #0x66
  434a20:	b.eq	433b78 <nftw@plt+0x30ff8>  // b.none
  434a24:	mov	w5, #0x1                   	// #1
  434a28:	ldrb	w7, [x22]
  434a2c:	b	434428 <nftw@plt+0x318a8>
  434a30:	add	x0, x22, #0x1
  434a34:	adrp	x1, 47c000 <_obstack_memory_used@@Base+0x1abb8>
  434a38:	mov	x2, #0x3                   	// #3
  434a3c:	add	x1, x1, #0xfd0
  434a40:	str	x3, [sp, #96]
  434a44:	str	w5, [sp, #104]
  434a48:	str	w7, [sp, #112]
  434a4c:	str	x6, [sp, #120]
  434a50:	bl	402850 <memcmp@plt>
  434a54:	ldr	w5, [sp, #104]
  434a58:	ldr	w7, [sp, #112]
  434a5c:	ldr	x3, [sp, #96]
  434a60:	ldr	x6, [sp, #120]
  434a64:	cbnz	w0, 434450 <nftw@plt+0x318d0>
  434a68:	ldrb	w0, [x22, #4]
  434a6c:	add	x4, x22, #0x4
  434a70:	mov	w5, #0x1                   	// #1
  434a74:	mov	w1, #0x53                  	// #83
  434a78:	b	434498 <nftw@plt+0x31918>
  434a7c:	cmp	w7, #0x46
  434a80:	b.ne	434428 <nftw@plt+0x318a8>  // b.any
  434a84:	b	433b78 <nftw@plt+0x30ff8>
  434a88:	sub	x22, x6, x4
  434a8c:	cmp	x22, #0x3
  434a90:	b.ls	433b78 <nftw@plt+0x30ff8>  // b.plast
  434a94:	cmp	w5, #0x0
  434a98:	adrp	x0, 47c000 <_obstack_memory_used@@Base+0x1abb8>
  434a9c:	adrp	x1, 47c000 <_obstack_memory_used@@Base+0x1abb8>
  434aa0:	add	x0, x0, #0xe48
  434aa4:	add	x1, x1, #0xe40
  434aa8:	add	x6, x4, #0x1
  434aac:	csel	x1, x1, x0, eq  // eq = none
  434ab0:	b	4344f0 <nftw@plt+0x31970>
  434ab4:	add	x22, x22, #0xc
  434ab8:	b	4347dc <nftw@plt+0x31c5c>
  434abc:	cmp	w5, #0x0
  434ac0:	mov	w1, #0x54                  	// #84
  434ac4:	mov	w2, #0x74                  	// #116
  434ac8:	csel	w1, w1, w2, ne  // ne = any
  434acc:	cmp	w1, w0
  434ad0:	b.ne	433b78 <nftw@plt+0x30ff8>  // b.any
  434ad4:	b	4344b4 <nftw@plt+0x31934>
  434ad8:	ldrb	w1, [x22, #5]
  434adc:	cmp	w1, #0x20
  434ae0:	b.ne	4344a0 <nftw@plt+0x31920>  // b.any
  434ae4:	add	x4, x22, #0x6
  434ae8:	b	4344b4 <nftw@plt+0x31934>
  434aec:	add	x4, x4, #0x4
  434af0:	b	43455c <nftw@plt+0x319dc>
  434af4:	ldrb	w0, [x28]
  434af8:	add	x22, x4, #0x1
  434afc:	cmp	w0, #0x2a
  434b00:	b.ne	434b0c <nftw@plt+0x31f8c>  // b.any
  434b04:	b	4347f8 <nftw@plt+0x31c78>
  434b08:	add	x22, x22, #0x1
  434b0c:	ldrb	w0, [x22]
  434b10:	cmp	w0, #0x0
  434b14:	ccmp	w0, #0xa, #0x4, ne  // ne = any
  434b18:	ccmp	w0, #0xd, #0x4, ne  // ne = any
  434b1c:	b.ne	434b08 <nftw@plt+0x31f88>  // b.any
  434b20:	b	433d70 <nftw@plt+0x311f0>
  434b24:	ldur	w0, [x22, #11]
  434b28:	cmp	w0, w26
  434b2c:	b.ne	433b78 <nftw@plt+0x30ff8>  // b.any
  434b30:	add	x22, x22, #0xe
  434b34:	mov	w5, #0x1                   	// #1
  434b38:	b	434a28 <nftw@plt+0x31ea8>
  434b3c:	cmp	w0, #0x2a
  434b40:	b.ne	43481c <nftw@plt+0x31c9c>  // b.any
  434b44:	ldrb	w0, [x4]
  434b48:	cmp	w0, #0x2f
  434b4c:	b.eq	43481c <nftw@plt+0x31c9c>  // b.none
  434b50:	add	x4, x4, #0x1
  434b54:	b	4347fc <nftw@plt+0x31c7c>
  434b58:	stp	x29, x30, [sp, #-64]!
  434b5c:	mov	x29, sp
  434b60:	stp	x19, x20, [sp, #16]
  434b64:	mov	x19, x0
  434b68:	stp	x21, x22, [sp, #32]
  434b6c:	add	x22, x0, #0x98
  434b70:	str	x23, [sp, #48]
  434b74:	mov	x23, #0x1770                	// #6000
  434b78:	ldr	x21, [x19, #488]
  434b7c:	ldr	x20, [x19, #448]
  434b80:	ldr	x0, [x21, #24]
  434b84:	cmp	x20, x0
  434b88:	b.eq	434c78 <nftw@plt+0x320f8>  // b.none
  434b8c:	ldr	x1, [x21, #16]
  434b90:	cmp	x20, x1
  434b94:	b.cc	434cc4 <nftw@plt+0x32144>  // b.lo, b.ul, b.last
  434b98:	cmp	x20, x0
  434b9c:	b.cs	434cc4 <nftw@plt+0x32144>  // b.hs, b.nlast
  434ba0:	ldr	w0, [x19, #496]
  434ba4:	cbz	w0, 434c68 <nftw@plt+0x320e8>
  434ba8:	sub	w0, w0, #0x1
  434bac:	add	x1, x20, #0x18
  434bb0:	str	x1, [x19, #448]
  434bb4:	str	w0, [x19, #496]
  434bb8:	ldrh	w1, [x20, #6]
  434bbc:	tbz	w1, #6, 434bf8 <nftw@plt+0x32078>
  434bc0:	ldrb	w0, [x20, #4]
  434bc4:	cmp	w0, #0x25
  434bc8:	b.eq	434c38 <nftw@plt+0x320b8>  // b.none
  434bcc:	ldrb	w0, [x19, #32]
  434bd0:	cbnz	w0, 434c60 <nftw@plt+0x320e0>
  434bd4:	ldr	x3, [x19, #904]
  434bd8:	cbz	x3, 434bf8 <nftw@plt+0x32078>
  434bdc:	ldrb	w0, [x19, #18]
  434be0:	cbnz	w0, 434bf8 <nftw@plt+0x32078>
  434be4:	ldrb	w2, [x19, #25]
  434be8:	mov	x1, x20
  434bec:	mov	x0, x19
  434bf0:	blr	x3
  434bf4:	nop
  434bf8:	ldrb	w0, [x19, #16]
  434bfc:	cbnz	w0, 434c20 <nftw@plt+0x320a0>
  434c00:	ldrb	w0, [x19, #32]
  434c04:	cbnz	w0, 434c20 <nftw@plt+0x320a0>
  434c08:	ldrb	w0, [x19, #18]
  434c0c:	strb	wzr, [x19, #440]
  434c10:	cbz	w0, 434c20 <nftw@plt+0x320a0>
  434c14:	ldrb	w0, [x20, #4]
  434c18:	cmp	w0, #0x16
  434c1c:	b.ne	434b78 <nftw@plt+0x31ff8>  // b.any
  434c20:	mov	x0, x20
  434c24:	ldp	x19, x20, [sp, #16]
  434c28:	ldp	x21, x22, [sp, #32]
  434c2c:	ldr	x23, [sp, #48]
  434c30:	ldp	x29, x30, [sp], #64
  434c34:	ret
  434c38:	ldrb	w0, [x19, #25]
  434c3c:	cmp	w0, #0x1
  434c40:	b.eq	434bcc <nftw@plt+0x3204c>  // b.none
  434c44:	and	w1, w1, #0x1
  434c48:	mov	x0, x19
  434c4c:	bl	425128 <nftw@plt+0x225a8>
  434c50:	cbz	w0, 434bd4 <nftw@plt+0x32054>
  434c54:	ldrb	w0, [x19, #156]
  434c58:	cmp	w0, #0x53
  434c5c:	b.eq	434b78 <nftw@plt+0x31ff8>  // b.none
  434c60:	mov	x20, x22
  434c64:	b	434bd4 <nftw@plt+0x32054>
  434c68:	mov	x0, x19
  434c6c:	bl	433140 <nftw@plt+0x305c0>
  434c70:	mov	x20, x0
  434c74:	b	434bb8 <nftw@plt+0x32038>
  434c78:	ldr	x1, [x21]
  434c7c:	cbz	x1, 434c90 <nftw@plt+0x32110>
  434c80:	ldp	x20, x0, [x1, #16]
  434c84:	str	x20, [x19, #448]
  434c88:	str	x1, [x19, #488]
  434c8c:	b	434b98 <nftw@plt+0x32018>
  434c90:	mov	x0, #0x20                  	// #32
  434c94:	bl	461560 <_obstack_memory_used@@Base+0x118>
  434c98:	mov	x20, x0
  434c9c:	str	x20, [x21]
  434ca0:	mov	x0, #0x1770                	// #6000
  434ca4:	str	x21, [x20, #8]
  434ca8:	bl	461560 <_obstack_memory_used@@Base+0x118>
  434cac:	str	xzr, [x20]
  434cb0:	str	x0, [x20, #16]
  434cb4:	add	x0, x0, x23
  434cb8:	ldr	x1, [x21]
  434cbc:	str	x0, [x20, #24]
  434cc0:	b	434c80 <nftw@plt+0x32100>
  434cc4:	adrp	x2, 47c000 <_obstack_memory_used@@Base+0x1abb8>
  434cc8:	adrp	x0, 47c000 <_obstack_memory_used@@Base+0x1abb8>
  434ccc:	add	x2, x2, #0xfe0
  434cd0:	add	x0, x0, #0x9d0
  434cd4:	mov	w1, #0xa1d                 	// #2589
  434cd8:	bl	402bf0 <nftw@plt+0x70>
  434cdc:	nop
  434ce0:	stp	x29, x30, [sp, #-64]!
  434ce4:	mov	x29, sp
  434ce8:	ldr	x2, [x0, #136]
  434cec:	stp	x19, x20, [sp, #16]
  434cf0:	mov	w19, w1
  434cf4:	stp	x21, x22, [sp, #32]
  434cf8:	mov	x22, x0
  434cfc:	ldr	x1, [x2, #8]
  434d00:	cbz	x1, 434d8c <nftw@plt+0x3220c>
  434d04:	mov	x0, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  434d08:	movk	x0, #0xaaab
  434d0c:	b	434d40 <nftw@plt+0x321c0>
  434d10:	tst	w3, #0xfffffffd
  434d14:	b.ne	434e28 <nftw@plt+0x322a8>  // b.any
  434d18:	ldp	x4, x2, [x2, #16]
  434d1c:	sub	x2, x2, x4
  434d20:	ubfx	x2, x2, #3, #32
  434d24:	cmp	w2, w19
  434d28:	b.gt	434d64 <nftw@plt+0x321e4>
  434d2c:	ldr	x3, [x1, #8]
  434d30:	sub	w19, w19, w2
  434d34:	mov	x2, x1
  434d38:	cbz	x3, 434d8c <nftw@plt+0x3220c>
  434d3c:	mov	x1, x3
  434d40:	ldr	w3, [x2, #48]
  434d44:	cmp	w3, #0x1
  434d48:	b.ne	434d10 <nftw@plt+0x32190>  // b.any
  434d4c:	ldp	x4, x2, [x2, #16]
  434d50:	sub	x2, x2, x4
  434d54:	asr	x2, x2, #3
  434d58:	mul	w2, w2, w0
  434d5c:	cmp	w2, w19
  434d60:	b.le	434d2c <nftw@plt+0x321ac>
  434d64:	cmp	w3, #0x1
  434d68:	b.eq	434e0c <nftw@plt+0x3228c>  // b.none
  434d6c:	tst	w3, #0xfffffffd
  434d70:	b.ne	434e44 <nftw@plt+0x322c4>  // b.any
  434d74:	ldr	x20, [x4, w19, sxtw #3]
  434d78:	ldp	x21, x22, [sp, #32]
  434d7c:	mov	x0, x20
  434d80:	ldp	x19, x20, [sp, #16]
  434d84:	ldp	x29, x30, [sp], #64
  434d88:	ret
  434d8c:	ldr	w0, [x22, #500]
  434d90:	mov	w21, w19
  434d94:	str	x23, [sp, #48]
  434d98:	add	w0, w0, #0x1
  434d9c:	str	w0, [x22, #500]
  434da0:	ldr	x23, [x22, #904]
  434da4:	str	xzr, [x22, #904]
  434da8:	b	434db0 <nftw@plt+0x32230>
  434dac:	cbz	w1, 434e04 <nftw@plt+0x32284>
  434db0:	mov	x0, x22
  434db4:	bl	434b58 <nftw@plt+0x31fd8>
  434db8:	mov	x20, x0
  434dbc:	ldrb	w0, [x0, #4]
  434dc0:	mov	w1, w21
  434dc4:	sub	w21, w21, #0x1
  434dc8:	cmp	w0, #0x16
  434dcc:	b.ne	434dac <nftw@plt+0x3222c>  // b.any
  434dd0:	sub	w1, w19, w21
  434dd4:	mov	x0, x22
  434dd8:	bl	43aaf8 <nftw@plt+0x37f78>
  434ddc:	str	x23, [x22, #904]
  434de0:	ldr	w0, [x22, #500]
  434de4:	ldr	x23, [sp, #48]
  434de8:	sub	w0, w0, #0x1
  434dec:	str	w0, [x22, #500]
  434df0:	mov	x0, x20
  434df4:	ldp	x19, x20, [sp, #16]
  434df8:	ldp	x21, x22, [sp, #32]
  434dfc:	ldp	x29, x30, [sp], #64
  434e00:	ret
  434e04:	mov	w21, #0xffffffff            	// #-1
  434e08:	b	434dd0 <nftw@plt+0x32250>
  434e0c:	mov	w20, #0x18                  	// #24
  434e10:	ldp	x21, x22, [sp, #32]
  434e14:	smaddl	x20, w19, w20, x4
  434e18:	mov	x0, x20
  434e1c:	ldp	x19, x20, [sp, #16]
  434e20:	ldp	x29, x30, [sp], #64
  434e24:	ret
  434e28:	adrp	x2, 47c000 <_obstack_memory_used@@Base+0x1abb8>
  434e2c:	adrp	x0, 47c000 <_obstack_memory_used@@Base+0x1abb8>
  434e30:	add	x2, x2, #0xbd8
  434e34:	add	x0, x0, #0x9d0
  434e38:	mov	w1, #0x99f                 	// #2463
  434e3c:	str	x23, [sp, #48]
  434e40:	bl	402bf0 <nftw@plt+0x70>
  434e44:	adrp	x2, 47c000 <_obstack_memory_used@@Base+0x1abb8>
  434e48:	adrp	x0, 47c000 <_obstack_memory_used@@Base+0x1abb8>
  434e4c:	add	x2, x2, #0xff0
  434e50:	add	x0, x0, #0x9d0
  434e54:	mov	w1, #0x9ad                 	// #2477
  434e58:	str	x23, [sp, #48]
  434e5c:	bl	402bf0 <nftw@plt+0x70>
  434e60:	stp	x29, x30, [sp, #-48]!
  434e64:	mov	x29, sp
  434e68:	ldr	x2, [x0, #56]
  434e6c:	stp	x19, x20, [sp, #16]
  434e70:	mov	x19, x1
  434e74:	mov	x20, x0
  434e78:	ldp	x0, x1, [x2, #16]
  434e7c:	sub	x1, x1, x0
  434e80:	cmp	x1, x19
  434e84:	b.cc	434e9c <nftw@plt+0x3231c>  // b.lo, b.ul, b.last
  434e88:	add	x19, x0, x19
  434e8c:	str	x19, [x2, #16]
  434e90:	ldp	x19, x20, [sp, #16]
  434e94:	ldp	x29, x30, [sp], #48
  434e98:	ret
  434e9c:	ldr	x2, [x20, #72]
  434ea0:	add	x4, x20, #0x48
  434ea4:	cbz	x2, 434ee0 <nftw@plt+0x32360>
  434ea8:	add	x3, x19, x19, lsl #1
  434eac:	mov	x0, #0x1f40                	// #8000
  434eb0:	add	x3, x0, x3, lsr #1
  434eb4:	nop
  434eb8:	ldr	x0, [x2, #8]
  434ebc:	ldr	x1, [x2, #24]
  434ec0:	sub	x1, x1, x0
  434ec4:	cmp	x19, x1
  434ec8:	b.hi	434ed4 <nftw@plt+0x32354>  // b.pmore
  434ecc:	cmp	x1, x3
  434ed0:	b.ls	434f34 <nftw@plt+0x323b4>  // b.plast
  434ed4:	mov	x4, x2
  434ed8:	ldr	x2, [x2]
  434edc:	cbnz	x2, 434eb8 <nftw@plt+0x32338>
  434ee0:	str	x21, [sp, #32]
  434ee4:	mov	x21, #0x1f40                	// #8000
  434ee8:	cmp	x19, x21
  434eec:	csel	x21, x19, x21, cs  // cs = hs, nlast
  434ef0:	add	x21, x21, #0x7
  434ef4:	and	x21, x21, #0xfffffffffffffff8
  434ef8:	add	x0, x21, #0x20
  434efc:	bl	461560 <_obstack_memory_used@@Base+0x118>
  434f00:	add	x2, x0, x21
  434f04:	stp	x0, x0, [x2, #8]
  434f08:	str	x2, [x2, #24]
  434f0c:	str	xzr, [x0, x21]
  434f10:	ldr	x21, [sp, #32]
  434f14:	add	x19, x0, x19
  434f18:	ldr	x1, [x20, #56]
  434f1c:	str	x1, [x2]
  434f20:	str	x2, [x20, #56]
  434f24:	str	x19, [x2, #16]
  434f28:	ldp	x19, x20, [sp, #16]
  434f2c:	ldp	x29, x30, [sp], #48
  434f30:	ret
  434f34:	ldr	x1, [x2]
  434f38:	str	x1, [x4]
  434f3c:	str	xzr, [x2]
  434f40:	str	x0, [x2, #16]
  434f44:	b	434f14 <nftw@plt+0x32394>
  434f48:	stp	x29, x30, [sp, #-48]!
  434f4c:	mov	x29, sp
  434f50:	stp	x19, x20, [sp, #16]
  434f54:	mov	x19, x1
  434f58:	ldr	x1, [x0, #1088]
  434f5c:	ldr	x0, [x0, #56]
  434f60:	ldr	x1, [x1, #104]
  434f64:	str	x21, [sp, #32]
  434f68:	ldr	x21, [x0, #16]
  434f6c:	cbz	x1, 434f9c <nftw@plt+0x3241c>
  434f70:	mov	x0, x19
  434f74:	blr	x1
  434f78:	mov	x2, x19
  434f7c:	mov	x1, x21
  434f80:	mov	x20, x0
  434f84:	bl	402490 <memcpy@plt>
  434f88:	mov	x0, x20
  434f8c:	ldp	x19, x20, [sp, #16]
  434f90:	ldr	x21, [sp, #32]
  434f94:	ldp	x29, x30, [sp], #48
  434f98:	ret
  434f9c:	add	x19, x21, x19
  434fa0:	str	x19, [x0, #16]
  434fa4:	mov	x20, x21
  434fa8:	mov	x0, x20
  434fac:	ldp	x19, x20, [sp, #16]
  434fb0:	ldr	x21, [sp, #32]
  434fb4:	ldp	x29, x30, [sp], #48
  434fb8:	ret
  434fbc:	nop
  434fc0:	ldrb	w2, [x0, #4]
  434fc4:	adrp	x1, 47d000 <_obstack_memory_used@@Base+0x1bbb8>
  434fc8:	add	x1, x1, #0x460
  434fcc:	sbfiz	x0, x2, #4, #32
  434fd0:	ldr	w0, [x1, x0]
  434fd4:	cmp	w0, #0x2
  434fd8:	b.eq	434fe8 <nftw@plt+0x32468>  // b.none
  434fdc:	b.hi	434fec <nftw@plt+0x3246c>  // b.pmore
  434fe0:	cbz	w0, 435020 <nftw@plt+0x324a0>
  434fe4:	mov	w0, #0x0                   	// #0
  434fe8:	ret
  434fec:	cmp	w0, #0x3
  434ff0:	b.ne	435018 <nftw@plt+0x32498>  // b.any
  434ff4:	cmp	w2, #0x50
  434ff8:	b.eq	434fe8 <nftw@plt+0x32468>  // b.none
  434ffc:	cmp	w2, #0x53
  435000:	mov	w0, #0x1                   	// #1
  435004:	b.eq	434fe8 <nftw@plt+0x32468>  // b.none
  435008:	cmp	w2, #0x51
  43500c:	cset	w0, ne  // ne = any
  435010:	add	w0, w0, #0x5
  435014:	ret
  435018:	mov	w0, #0x6                   	// #6
  43501c:	ret
  435020:	cmp	w2, #0x26
  435024:	mov	w1, #0x6                   	// #6
  435028:	mov	w0, #0x4                   	// #4
  43502c:	csel	w0, w0, w1, eq  // eq = none
  435030:	ret
  435034:	nop
  435038:	str	w1, [x0, #1408]
  43503c:	ret
  435040:	str	wzr, [x0, #1408]
  435044:	ret
  435048:	ldp	w2, w4, [x0]
  43504c:	ldr	x3, [x0, #16]
  435050:	add	w2, w2, w4
  435054:	ldr	w1, [x0, #8]
  435058:	add	w0, w1, w3
  43505c:	add	w0, w2, w0
  435060:	ret
  435064:	nop
  435068:	mov	x2, x0
  43506c:	ldr	x0, [x1]
  435070:	ldr	x3, [x2]
  435074:	cmp	x3, x0
  435078:	b.eq	435084 <nftw@plt+0x32504>  // b.none
  43507c:	mov	w0, #0x0                   	// #0
  435080:	ret
  435084:	ldr	w3, [x1, #8]
  435088:	mov	w0, #0x0                   	// #0
  43508c:	ldr	w4, [x2, #8]
  435090:	cmp	w4, w3
  435094:	b.ne	435080 <nftw@plt+0x32500>  // b.any
  435098:	ldr	x0, [x1, #16]
  43509c:	ldr	x2, [x2, #16]
  4350a0:	cmp	x2, x0
  4350a4:	cset	w0, eq  // eq = none
  4350a8:	ret
  4350ac:	nop
  4350b0:	mov	x2, x0
  4350b4:	mov	w0, #0x1                   	// #1
  4350b8:	ldr	x3, [x1]
  4350bc:	ldr	x1, [x2]
  4350c0:	add	x1, x1, x3
  4350c4:	str	x1, [x2]
  4350c8:	ret
  4350cc:	nop
  4350d0:	mov	x8, x0
  4350d4:	tbz	w1, #31, 4350ec <nftw@plt+0x3256c>
  4350d8:	and	w1, w1, #0x7fffffff
  4350dc:	mov	w2, #0x18                  	// #24
  4350e0:	ldr	x0, [x0, #104]
  4350e4:	umull	x1, w1, w2
  4350e8:	ldr	w1, [x0, x1]
  4350ec:	cmp	x8, #0x0
  4350f0:	ccmp	w1, #0x1, #0x0, ne  // ne = any
  4350f4:	b.ls	435184 <nftw@plt+0x32604>  // b.plast
  4350f8:	ldr	w4, [x8, #16]
  4350fc:	mov	w2, #0x18                  	// #24
  435100:	ldr	x6, [x8]
  435104:	smull	x2, w4, w2
  435108:	add	x0, x6, x2
  43510c:	ldr	w2, [x6, x2]
  435110:	cmp	w1, w2
  435114:	b.cc	43517c <nftw@plt+0x325fc>  // b.lo, b.ul, b.last
  435118:	ldr	w2, [x8, #12]
  43511c:	add	w3, w4, #0x1
  435120:	cmp	w3, w2
  435124:	b.eq	435178 <nftw@plt+0x325f8>  // b.none
  435128:	ldr	w3, [x0, #24]
  43512c:	cmp	w1, w3
  435130:	b.cc	435178 <nftw@plt+0x325f8>  // b.lo, b.ul, b.last
  435134:	mov	w3, w4
  435138:	mov	w4, w2
  43513c:	mov	w7, #0x18                  	// #24
  435140:	b	43515c <nftw@plt+0x325dc>
  435144:	lsr	w2, w2, #1
  435148:	umull	x5, w2, w7
  43514c:	ldr	w5, [x6, x5]
  435150:	cmp	w1, w5
  435154:	csel	w3, w3, w2, cc  // cc = lo, ul, last
  435158:	csel	w4, w2, w4, cc  // cc = lo, ul, last
  43515c:	sub	w5, w4, w3
  435160:	add	w2, w3, w4
  435164:	cmp	w5, #0x1
  435168:	b.hi	435144 <nftw@plt+0x325c4>  // b.pmore
  43516c:	mov	w0, #0x18                  	// #24
  435170:	str	w3, [x8, #16]
  435174:	smaddl	x0, w3, w0, x6
  435178:	ret
  43517c:	mov	w3, #0x0                   	// #0
  435180:	b	43513c <nftw@plt+0x325bc>
  435184:	mov	x0, #0x0                   	// #0
  435188:	ret
  43518c:	nop
  435190:	stp	x29, x30, [sp, #-80]!
  435194:	mov	x29, sp
  435198:	stp	x19, x20, [sp, #16]
  43519c:	mov	x19, x0
  4351a0:	mov	w0, #0x6fffffff            	// #1879048191
  4351a4:	stp	x21, x22, [sp, #32]
  4351a8:	cmp	w1, w0
  4351ac:	mov	w22, w1
  4351b0:	stp	x23, x24, [sp, #48]
  4351b4:	b.ls	4351f4 <nftw@plt+0x32674>  // b.plast
  4351b8:	ldp	w0, w21, [x19, #32]
  4351bc:	add	x23, x19, #0x24
  4351c0:	cmp	w0, w21
  4351c4:	mov	w20, w21
  4351c8:	b.eq	4352bc <nftw@plt+0x3273c>  // b.none
  4351cc:	ldr	x0, [x19, #24]
  4351d0:	add	w21, w21, #0x1
  4351d4:	add	x0, x0, x20, lsl #5
  4351d8:	ldp	x19, x20, [sp, #16]
  4351dc:	str	w21, [x23]
  4351e0:	ldp	x23, x24, [sp, #48]
  4351e4:	str	w22, [x0]
  4351e8:	ldp	x21, x22, [sp, #32]
  4351ec:	ldp	x29, x30, [sp], #80
  4351f0:	ret
  4351f4:	ldp	w0, w20, [x19, #8]
  4351f8:	add	x23, x19, #0xc
  4351fc:	cmp	w0, w20
  435200:	mov	w21, w20
  435204:	b.eq	435234 <nftw@plt+0x326b4>  // b.none
  435208:	ldr	x0, [x19]
  43520c:	mov	w1, #0x18                  	// #24
  435210:	umaddl	x0, w20, w1, x0
  435214:	add	w21, w21, #0x1
  435218:	ldp	x19, x20, [sp, #16]
  43521c:	str	w21, [x23]
  435220:	ldp	x23, x24, [sp, #48]
  435224:	str	w22, [x0]
  435228:	ldp	x21, x22, [sp, #32]
  43522c:	ldp	x29, x30, [sp], #80
  435230:	ret
  435234:	cmp	w20, #0x0
  435238:	mov	x1, #0x100                 	// #256
  43523c:	lsl	w0, w20, #1
  435240:	csel	x0, x0, x1, ne  // ne = any
  435244:	ldr	x1, [x19, #80]
  435248:	add	x0, x0, x0, lsl #1
  43524c:	ldr	x24, [x19]
  435250:	lsl	x0, x0, #3
  435254:	blr	x1
  435258:	mov	x21, x0
  43525c:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  435260:	mov	x0, x24
  435264:	movk	x1, #0xaaab
  435268:	ldr	x2, [x19, #72]
  43526c:	umulh	x21, x21, x1
  435270:	ubfx	x1, x21, #4, #32
  435274:	lsr	x21, x21, #4
  435278:	add	x1, x1, x1, lsl #1
  43527c:	lsl	x1, x1, #3
  435280:	blr	x2
  435284:	sub	w2, w21, w20
  435288:	mov	x24, x0
  43528c:	mov	w0, #0x18                  	// #24
  435290:	mov	w1, #0x0                   	// #0
  435294:	umull	x2, w2, w0
  435298:	umaddl	x0, w20, w0, x24
  43529c:	bl	4026f0 <memset@plt>
  4352a0:	str	x24, [x19]
  4352a4:	mov	w1, #0x18                  	// #24
  4352a8:	str	w21, [x19, #8]
  4352ac:	ldr	x0, [x19]
  4352b0:	ldr	w21, [x19, #12]
  4352b4:	umaddl	x0, w20, w1, x0
  4352b8:	b	435214 <nftw@plt+0x32694>
  4352bc:	ldr	x1, [x19, #80]
  4352c0:	cmp	w21, #0x0
  4352c4:	lsl	w0, w21, #1
  4352c8:	mov	x2, #0x100                 	// #256
  4352cc:	csel	x0, x0, x2, ne  // ne = any
  4352d0:	str	x25, [sp, #64]
  4352d4:	ldr	x25, [x19, #24]
  4352d8:	lsl	x0, x0, #5
  4352dc:	blr	x1
  4352e0:	mov	x1, x0
  4352e4:	ldr	x2, [x19, #72]
  4352e8:	lsr	x24, x0, #5
  4352ec:	and	x1, x1, #0x1fffffffe0
  4352f0:	mov	x0, x25
  4352f4:	blr	x2
  4352f8:	sub	w2, w24, w21
  4352fc:	mov	x21, x0
  435300:	mov	w1, #0x0                   	// #0
  435304:	add	x0, x0, x20, lsl #5
  435308:	lsl	x2, x2, #5
  43530c:	bl	4026f0 <memset@plt>
  435310:	ldr	x25, [sp, #64]
  435314:	str	x21, [x19, #24]
  435318:	ldr	w21, [x19, #36]
  43531c:	str	w24, [x19, #32]
  435320:	b	4351cc <nftw@plt+0x3264c>
  435324:	nop
  435328:	ldr	x0, [x0, #88]
  43532c:	cbz	x0, 435334 <nftw@plt+0x327b4>
  435330:	b	460328 <nftw@plt+0x5d7a8>
  435334:	ret
  435338:	stp	x29, x30, [sp, #-48]!
  43533c:	adrp	x2, 435000 <nftw@plt+0x32480>
  435340:	adrp	x1, 435000 <nftw@plt+0x32480>
  435344:	mov	x29, sp
  435348:	stp	x19, x20, [sp, #16]
  43534c:	mov	x20, x0
  435350:	add	x1, x1, #0x48
  435354:	add	x2, x2, #0x68
  435358:	mov	x3, #0x0                   	// #0
  43535c:	mov	x0, #0x64                  	// #100
  435360:	bl	4602f8 <nftw@plt+0x5d778>
  435364:	ldr	w1, [x20, #96]
  435368:	str	x0, [x20, #88]
  43536c:	cbz	w1, 4353a8 <nftw@plt+0x32828>
  435370:	mov	w19, #0x0                   	// #0
  435374:	str	x21, [sp, #32]
  435378:	mov	w21, #0x18                  	// #24
  43537c:	b	435384 <nftw@plt+0x32804>
  435380:	ldr	x0, [x20, #88]
  435384:	mov	w2, #0x1                   	// #1
  435388:	ldr	x1, [x20, #104]
  43538c:	umaddl	x1, w19, w21, x1
  435390:	add	w19, w19, w2
  435394:	bl	4609a0 <nftw@plt+0x5de20>
  435398:	ldr	w0, [x20, #96]
  43539c:	cmp	w0, w19
  4353a0:	b.hi	435380 <nftw@plt+0x32800>  // b.pmore
  4353a4:	ldr	x21, [sp, #32]
  4353a8:	ldp	x19, x20, [sp, #16]
  4353ac:	ldp	x29, x30, [sp], #48
  4353b0:	ret
  4353b4:	nop
  4353b8:	ldr	x0, [x0, #104]
  4353bc:	and	w1, w1, #0x7fffffff
  4353c0:	mov	w2, #0x18                  	// #24
  4353c4:	umaddl	x1, w1, w2, x0
  4353c8:	ldr	x0, [x1, #16]
  4353cc:	ret
  4353d0:	and	w1, w1, #0x7fffffff
  4353d4:	mov	w2, #0x18                  	// #24
  4353d8:	ldr	x0, [x0, #104]
  4353dc:	umull	x1, w1, w2
  4353e0:	ldr	w0, [x0, x1]
  4353e4:	ret
  4353e8:	tbnz	w1, #31, 435468 <nftw@plt+0x328e8>
  4353ec:	mov	w2, #0x6fffffff            	// #1879048191
  4353f0:	mov	w9, w1
  4353f4:	cmp	w1, w2
  4353f8:	b.ls	43543c <nftw@plt+0x328bc>  // b.plast
  4353fc:	mov	x3, x0
  435400:	cbz	x0, 4354d0 <nftw@plt+0x32950>
  435404:	ldp	w4, w5, [x0, #36]
  435408:	ldr	x6, [x0, #24]
  43540c:	sbfiz	x1, x5, #5, #32
  435410:	add	x0, x6, x1
  435414:	ldr	w1, [x6, x1]
  435418:	cmp	w9, w1
  43541c:	b.cc	43548c <nftw@plt+0x3290c>  // b.lo, b.ul, b.last
  435420:	cbz	w5, 4354a8 <nftw@plt+0x32928>
  435424:	ldur	w1, [x0, #-32]
  435428:	cmp	w9, w1
  43542c:	b.cc	4354a8 <nftw@plt+0x32928>  // b.lo, b.ul, b.last
  435430:	sub	w4, w5, #0x1
  435434:	mov	w5, #0x0                   	// #0
  435438:	b	43548c <nftw@plt+0x3290c>
  43543c:	stp	x29, x30, [sp, #-16]!
  435440:	mov	x29, sp
  435444:	bl	4350d0 <nftw@plt+0x32550>
  435448:	cbz	x0, 4354c8 <nftw@plt+0x32948>
  43544c:	ldrb	w1, [x0, #7]
  435450:	mov	w0, #0xffffffff            	// #-1
  435454:	lsl	w0, w0, w1
  435458:	bics	wzr, w9, w0
  43545c:	cset	w0, eq  // eq = none
  435460:	ldp	x29, x30, [sp], #16
  435464:	ret
  435468:	mov	w0, #0x0                   	// #0
  43546c:	ret
  435470:	lsr	w2, w1, #1
  435474:	lsr	w1, w1, #1
  435478:	lsl	x2, x2, #5
  43547c:	ldr	w0, [x6, x2]
  435480:	cmp	w9, w0
  435484:	b.cc	4354c0 <nftw@plt+0x32940>  // b.lo, b.ul, b.last
  435488:	mov	w4, w1
  43548c:	add	w1, w4, w5
  435490:	cmp	w4, w5
  435494:	b.hi	435470 <nftw@plt+0x328f0>  // b.pmore
  435498:	str	w4, [x3, #40]
  43549c:	sbfiz	x0, x4, #5, #32
  4354a0:	add	x0, x6, x0
  4354a4:	cbz	x0, 4354d0 <nftw@plt+0x32950>
  4354a8:	ldrb	w1, [x0, #7]
  4354ac:	mov	w0, #0xffffffff            	// #-1
  4354b0:	lsl	w0, w0, w1
  4354b4:	bics	wzr, w9, w0
  4354b8:	cset	w0, eq  // eq = none
  4354bc:	ret
  4354c0:	add	w5, w1, #0x1
  4354c4:	b	43548c <nftw@plt+0x3290c>
  4354c8:	mov	w0, #0x1                   	// #1
  4354cc:	b	435460 <nftw@plt+0x328e0>
  4354d0:	mov	w0, #0x1                   	// #1
  4354d4:	ret
  4354d8:	stp	x29, x30, [sp, #-32]!
  4354dc:	movi	v0.2s, #0x1
  4354e0:	adrp	x4, 461000 <nftw@plt+0x5e480>
  4354e4:	mov	x29, sp
  4354e8:	stp	x19, x20, [sp, #16]
  4354ec:	mov	x19, x0
  4354f0:	add	x4, x4, #0x5e8
  4354f4:	stp	xzr, xzr, [x0]
  4354f8:	mov	w20, w1
  4354fc:	mov	x3, #0x0                   	// #0
  435500:	stp	xzr, xzr, [x0, #16]
  435504:	adrp	x2, 435000 <nftw@plt+0x32480>
  435508:	adrp	x1, 435000 <nftw@plt+0x32480>
  43550c:	stp	xzr, xzr, [x0, #64]
  435510:	add	x2, x2, #0x68
  435514:	add	x1, x1, #0x48
  435518:	stp	xzr, xzr, [x19, #32]
  43551c:	mov	x0, #0x64                  	// #100
  435520:	stp	xzr, xzr, [x19, #48]
  435524:	str	x4, [x19, #72]
  435528:	stp	xzr, xzr, [x19, #80]
  43552c:	stp	xzr, xzr, [x19, #96]
  435530:	stp	xzr, xzr, [x19, #112]
  435534:	str	xzr, [x19, #128]
  435538:	str	d0, [x19, #56]
  43553c:	bl	4602f8 <nftw@plt+0x5d778>
  435540:	str	x0, [x19, #88]
  435544:	str	w20, [x19, #112]
  435548:	ldp	x19, x20, [sp, #16]
  43554c:	ldp	x29, x30, [sp], #32
  435550:	ret
  435554:	nop
  435558:	ldr	w1, [x1, #20]
  43555c:	b	4350d0 <nftw@plt+0x32550>
  435560:	stp	x29, x30, [sp, #-48]!
  435564:	mov	w1, #0x18                  	// #24
  435568:	mov	x29, sp
  43556c:	stp	x19, x20, [sp, #16]
  435570:	mov	x20, x0
  435574:	ldr	w19, [x0, #12]
  435578:	ldr	x0, [x0]
  43557c:	sub	w19, w19, #0x1
  435580:	smaddl	x19, w19, w1, x0
  435584:	ldr	w0, [x19, #20]
  435588:	cbz	w0, 4355cc <nftw@plt+0x32a4c>
  43558c:	stp	x21, x22, [sp, #32]
  435590:	adrp	x22, 47d000 <_obstack_memory_used@@Base+0x1bbb8>
  435594:	adrp	x21, 4a4000 <_obstack_memory_used@@Base+0x42bb8>
  435598:	add	x22, x22, #0xa00
  43559c:	add	x21, x21, #0x570
  4355a0:	ldr	x0, [x21]
  4355a4:	mov	x1, x22
  4355a8:	ldr	x2, [x19, #8]
  4355ac:	bl	402b30 <fprintf@plt>
  4355b0:	ldr	w1, [x19, #20]
  4355b4:	mov	x0, x20
  4355b8:	bl	4350d0 <nftw@plt+0x32550>
  4355bc:	ldr	w1, [x0, #20]
  4355c0:	mov	x19, x0
  4355c4:	cbnz	w1, 4355a0 <nftw@plt+0x32a20>
  4355c8:	ldp	x21, x22, [sp, #32]
  4355cc:	ldp	x19, x20, [sp, #16]
  4355d0:	ldp	x29, x30, [sp], #48
  4355d4:	ret
  4355d8:	stp	x29, x30, [sp, #-80]!
  4355dc:	mov	x29, sp
  4355e0:	ldr	w5, [x0, #56]
  4355e4:	stp	x19, x20, [sp, #16]
  4355e8:	mov	x19, x0
  4355ec:	mov	w0, #0x5fffffff            	// #1610612735
  4355f0:	stp	x21, x22, [sp, #32]
  4355f4:	cmp	w5, w0
  4355f8:	mov	w22, w2
  4355fc:	stp	x23, x24, [sp, #48]
  435600:	add	w21, w5, #0x1
  435604:	mov	w24, w1
  435608:	str	x25, [sp, #64]
  43560c:	mov	w23, w4
  435610:	mov	x25, x3
  435614:	b.hi	435638 <nftw@plt+0x32ab8>  // b.pmore
  435618:	ldr	w1, [x19, #120]
  43561c:	mov	w0, #0x1                   	// #1
  435620:	cmp	w1, #0x0
  435624:	lsl	w0, w0, w1
  435628:	add	w21, w0, w5
  43562c:	neg	w0, w0
  435630:	and	w0, w21, w0
  435634:	csel	w21, w0, w21, ne  // ne = any
  435638:	cmp	w24, #0x1
  43563c:	b.eq	4357c0 <nftw@plt+0x32c40>  // b.none
  435640:	mov	w0, #0x6fffffff            	// #1879048191
  435644:	cmp	w21, w0
  435648:	csel	w21, w21, wzr, ls  // ls = plast
  43564c:	mov	x0, x19
  435650:	mov	w1, w21
  435654:	bl	435190 <nftw@plt+0x32610>
  435658:	strb	w24, [x0, #4]
  43565c:	mov	x20, x0
  435660:	cmp	w24, #0x3
  435664:	cbz	x25, 435688 <nftw@plt+0x32b08>
  435668:	ldrb	w0, [x25]
  43566c:	cbnz	w0, 435688 <nftw@plt+0x32b08>
  435670:	b.eq	435770 <nftw@plt+0x32bf0>  // b.none
  435674:	cmp	w24, #0x1
  435678:	b.eq	435874 <nftw@plt+0x32cf4>  // b.none
  43567c:	adrp	x3, 47d000 <_obstack_memory_used@@Base+0x1bbb8>
  435680:	add	x25, x3, #0xa30
  435684:	b	435694 <nftw@plt+0x32b14>
  435688:	b.eq	435770 <nftw@plt+0x32bf0>  // b.none
  43568c:	cmp	w24, #0x1
  435690:	b.eq	435858 <nftw@plt+0x32cd8>  // b.none
  435694:	and	w22, w22, #0xff
  435698:	mov	x0, #0x0                   	// #0
  43569c:	strb	w22, [x20, #5]
  4356a0:	dup	v0.2s, w21
  4356a4:	str	w23, [x20, #16]
  4356a8:	str	x25, [x20, #8]
  4356ac:	ldr	w4, [x19, #12]
  4356b0:	sub	w4, w4, #0x1
  4356b4:	str	w4, [x19, #16]
  4356b8:	strh	wzr, [x20, #6]
  4356bc:	str	wzr, [x19, #64]
  4356c0:	str	d0, [x19, #56]
  4356c4:	cbnz	w24, 435780 <nftw@plt+0x32c00>
  4356c8:	ldr	w21, [x19, #48]
  4356cc:	ldrb	w1, [x19, #52]
  4356d0:	add	w3, w21, #0x1
  4356d4:	cbz	w21, 4357f8 <nftw@plt+0x32c78>
  4356d8:	ldr	w0, [x20]
  4356dc:	mov	w2, #0xffffffff            	// #-1
  4356e0:	ldur	w4, [x20, #-24]
  4356e4:	adrp	x24, 4a4000 <_obstack_memory_used@@Base+0x42bb8>
  4356e8:	ldurb	w5, [x20, #-18]
  4356ec:	add	w0, w0, w2
  4356f0:	sub	w0, w0, w4
  4356f4:	add	x23, x24, #0x570
  4356f8:	mov	w22, #0x2e                  	// #46
  4356fc:	lsl	w2, w2, w5
  435700:	and	w0, w0, w2
  435704:	add	w0, w0, w4
  435708:	str	w0, [x20, #20]
  43570c:	str	w3, [x19, #48]
  435710:	cbz	w1, 435754 <nftw@plt+0x32bd4>
  435714:	nop
  435718:	ldr	x0, [x23]
  43571c:	ldp	x1, x3, [x0, #40]
  435720:	add	x2, x1, #0x1
  435724:	cmp	x1, x3
  435728:	b.cs	43584c <nftw@plt+0x32ccc>  // b.hs, b.nlast
  43572c:	str	x2, [x0, #40]
  435730:	strb	w22, [x1]
  435734:	subs	w21, w21, #0x1
  435738:	b.ne	435718 <nftw@plt+0x32b98>  // b.any
  43573c:	ldr	x25, [x20, #8]
  435740:	adrp	x1, 47d000 <_obstack_memory_used@@Base+0x1bbb8>
  435744:	ldr	x0, [x24, #1392]
  435748:	mov	x2, x25
  43574c:	add	x1, x1, #0xa38
  435750:	bl	402b30 <fprintf@plt>
  435754:	mov	x0, x20
  435758:	ldp	x19, x20, [sp, #16]
  43575c:	ldp	x21, x22, [sp, #32]
  435760:	ldp	x23, x24, [sp, #48]
  435764:	ldr	x25, [sp, #64]
  435768:	ldp	x29, x30, [sp], #80
  43576c:	ret
  435770:	and	w22, w22, #0xff
  435774:	mov	w24, #0x2                   	// #2
  435778:	mov	x0, #0x0                   	// #0
  43577c:	b	43569c <nftw@plt+0x32b1c>
  435780:	cmp	w24, #0x2
  435784:	b.eq	435828 <nftw@plt+0x32ca8>  // b.none
  435788:	cmp	w24, #0x1
  43578c:	b.ne	435754 <nftw@plt+0x32bd4>  // b.any
  435790:	ldr	w1, [x19, #48]
  435794:	ldp	x21, x22, [sp, #32]
  435798:	sub	w1, w1, #0x1
  43579c:	str	w1, [x19, #48]
  4357a0:	ldp	x23, x24, [sp, #48]
  4357a4:	ldr	w0, [x0, #20]
  4357a8:	str	w0, [x20, #20]
  4357ac:	mov	x0, x20
  4357b0:	ldp	x19, x20, [sp, #16]
  4357b4:	ldr	x25, [sp, #64]
  4357b8:	ldp	x29, x30, [sp], #80
  4357bc:	ret
  4357c0:	ldr	w0, [x19, #12]
  4357c4:	mov	w2, #0x18                  	// #24
  4357c8:	ldr	x1, [x19]
  4357cc:	sub	w0, w0, #0x1
  4357d0:	smaddl	x0, w0, w2, x1
  4357d4:	ldr	w0, [x0, #20]
  4357d8:	cmp	w0, #0x0
  4357dc:	ccmp	x25, #0x0, #0x0, eq  // eq = none
  4357e0:	b.ne	435640 <nftw@plt+0x32ac0>  // b.any
  4357e4:	ldr	w0, [x19, #48]
  4357e8:	mov	x20, #0x0                   	// #0
  4357ec:	sub	w0, w0, #0x1
  4357f0:	str	w0, [x19, #48]
  4357f4:	b	435754 <nftw@plt+0x32bd4>
  4357f8:	str	wzr, [x20, #20]
  4357fc:	mov	w0, #0x1                   	// #1
  435800:	str	w0, [x19, #48]
  435804:	adrp	x24, 4a4000 <_obstack_memory_used@@Base+0x42bb8>
  435808:	cbnz	w1, 435740 <nftw@plt+0x32bc0>
  43580c:	mov	x0, x20
  435810:	ldp	x19, x20, [sp, #16]
  435814:	ldp	x21, x22, [sp, #32]
  435818:	ldp	x23, x24, [sp, #48]
  43581c:	ldr	x25, [sp, #64]
  435820:	ldp	x29, x30, [sp], #80
  435824:	ret
  435828:	ldur	w0, [x20, #-4]
  43582c:	str	w0, [x20, #20]
  435830:	mov	x0, x20
  435834:	ldp	x19, x20, [sp, #16]
  435838:	ldp	x21, x22, [sp, #32]
  43583c:	ldp	x23, x24, [sp, #48]
  435840:	ldr	x25, [sp, #64]
  435844:	ldp	x29, x30, [sp], #80
  435848:	ret
  43584c:	mov	w1, #0x2e                  	// #46
  435850:	bl	402800 <__overflow@plt>
  435854:	b	435734 <nftw@plt+0x32bb4>
  435858:	ldur	w1, [x20, #-4]
  43585c:	mov	x0, x19
  435860:	bl	4350d0 <nftw@plt+0x32550>
  435864:	cbz	x25, 43588c <nftw@plt+0x32d0c>
  435868:	and	w22, w22, #0xff
  43586c:	mov	w24, #0x1                   	// #1
  435870:	b	43569c <nftw@plt+0x32b1c>
  435874:	ldur	w1, [x20, #-4]
  435878:	mov	x0, x19
  43587c:	bl	4350d0 <nftw@plt+0x32550>
  435880:	adrp	x3, 47d000 <_obstack_memory_used@@Base+0x1bbb8>
  435884:	add	x25, x3, #0xa30
  435888:	b	435868 <nftw@plt+0x32ce8>
  43588c:	ldr	w2, [x0]
  435890:	ldr	w23, [x0, #24]
  435894:	ldrb	w1, [x0, #6]
  435898:	ldr	w4, [x0, #16]
  43589c:	sub	w23, w23, w2
  4358a0:	ldrb	w22, [x0, #5]
  4358a4:	lsr	w23, w23, w1
  4358a8:	add	w23, w23, w4
  4358ac:	ldr	x25, [x0, #8]
  4358b0:	b	43569c <nftw@plt+0x32b1c>
  4358b4:	nop
  4358b8:	ldr	x0, [x0, #24]
  4358bc:	cmp	x0, #0x0
  4358c0:	cset	w0, ne  // ne = any
  4358c4:	ret
  4358c8:	stp	x29, x30, [sp, #-64]!
  4358cc:	mov	x29, sp
  4358d0:	stp	x21, x22, [sp, #32]
  4358d4:	mov	w21, w3
  4358d8:	ldr	w3, [x0, #36]
  4358dc:	stp	x19, x20, [sp, #16]
  4358e0:	mov	w22, w2
  4358e4:	mov	x19, x0
  4358e8:	stp	x23, x24, [sp, #48]
  4358ec:	mov	w0, #0x80000000            	// #-2147483648
  4358f0:	mov	x23, x1
  4358f4:	cbz	w3, 435908 <nftw@plt+0x32d88>
  4358f8:	sub	w3, w3, #0x1
  4358fc:	ldr	x0, [x19, #24]
  435900:	sbfiz	x3, x3, #5, #32
  435904:	ldr	w0, [x0, x3]
  435908:	sub	w1, w0, w21
  43590c:	mov	x20, #0x0                   	// #0
  435910:	mov	w0, #0x6fffffff            	// #1879048191
  435914:	cmp	w1, w0
  435918:	b.ls	435964 <nftw@plt+0x32de4>  // b.plast
  43591c:	mov	x0, x19
  435920:	bl	435190 <nftw@plt+0x32610>
  435924:	mov	x20, x0
  435928:	ubfiz	x24, x21, #3, #31
  43592c:	ldr	x2, [x19, #72]
  435930:	mov	x1, x24
  435934:	str	w21, [x20, #4]
  435938:	mov	x0, #0x0                   	// #0
  43593c:	str	x23, [x20, #8]
  435940:	blr	x2
  435944:	str	x0, [x20, #16]
  435948:	str	w22, [x20, #24]
  43594c:	mov	x2, x24
  435950:	mov	w1, #0x0                   	// #0
  435954:	bl	4026f0 <memset@plt>
  435958:	ldr	w0, [x19, #36]
  43595c:	sub	w0, w0, #0x1
  435960:	str	w0, [x19, #40]
  435964:	mov	x0, x20
  435968:	ldp	x19, x20, [sp, #16]
  43596c:	ldp	x21, x22, [sp, #32]
  435970:	ldp	x23, x24, [sp, #48]
  435974:	ldp	x29, x30, [sp], #64
  435978:	ret
  43597c:	nop
  435980:	ldr	x5, [x0, #16]
  435984:	lsl	w6, w1, #1
  435988:	lsl	w4, w1, #1
  43598c:	add	w4, w4, #0x1
  435990:	str	w2, [x5, x6, lsl #2]
  435994:	str	w3, [x5, x4, lsl #2]
  435998:	ldr	w0, [x0]
  43599c:	add	w0, w1, w0
  4359a0:	ret
  4359a4:	nop
  4359a8:	stp	x29, x30, [sp, #-96]!
  4359ac:	mov	w3, #0x18                  	// #24
  4359b0:	mov	x29, sp
  4359b4:	stp	x19, x20, [sp, #16]
  4359b8:	mov	x19, x0
  4359bc:	ldr	w0, [x0, #12]
  4359c0:	stp	x21, x22, [sp, #32]
  4359c4:	mov	w22, w1
  4359c8:	sub	w0, w0, #0x1
  4359cc:	ldr	x4, [x19]
  4359d0:	stp	x23, x24, [sp, #48]
  4359d4:	smull	x0, w0, w3
  4359d8:	ldp	w1, w7, [x19, #56]
  4359dc:	add	x3, x4, x0
  4359e0:	stp	x25, x26, [sp, #64]
  4359e4:	ldr	w9, [x4, x0]
  4359e8:	ldrb	w8, [x3, #6]
  4359ec:	ldr	w0, [x3, #16]
  4359f0:	sub	w6, w7, w9
  4359f4:	ldrb	w10, [x3, #7]
  4359f8:	lsr	w6, w6, w8
  4359fc:	add	w6, w6, w0
  435a00:	subs	w5, w22, w6
  435a04:	b.mi	435a58 <nftw@plt+0x32ed8>  // b.first
  435a08:	cmp	w5, #0xa
  435a0c:	b.gt	435a4c <nftw@plt+0x32ecc>
  435a10:	sub	w11, w8, w10
  435a14:	mov	w4, #0x1                   	// #1
  435a18:	lsl	w4, w4, w11
  435a1c:	cmp	w4, w2
  435a20:	b.ls	435a58 <nftw@plt+0x32ed8>  // b.plast
  435a24:	cmp	w2, #0x50
  435a28:	ccmp	w11, #0x9, #0x4, ls  // ls = plast
  435a2c:	b.gt	435a58 <nftw@plt+0x32ed8>
  435a30:	mov	w4, #0x50000000            	// #1342177280
  435a34:	cmp	w1, w4
  435a38:	b.hi	435af8 <nftw@plt+0x32f78>  // b.pmore
  435a3c:	ldr	w20, [x19, #64]
  435a40:	lsl	w0, w5, w8
  435a44:	add	w0, w0, w7
  435a48:	b	435c04 <nftw@plt+0x33084>
  435a4c:	mul	w4, w5, w8
  435a50:	cmp	w4, #0x3e8
  435a54:	b.le	435a10 <nftw@plt+0x32e90>
  435a58:	cmp	w2, #0x1, lsl #12
  435a5c:	mov	w4, #0x60000000            	// #1610612736
  435a60:	ccmp	w1, w4, #0x2, ls  // ls = plast
  435a64:	b.hi	435b10 <nftw@plt+0x32f90>  // b.pmore
  435a68:	mov	w4, #0x50000000            	// #1342177280
  435a6c:	cmp	w1, w4
  435a70:	b.hi	435c5c <nftw@plt+0x330dc>  // b.pmore
  435a74:	ldr	w11, [x19, #120]
  435a78:	and	w24, w11, #0xff
  435a7c:	cmp	w2, #0x7f
  435a80:	mov	w4, #0x7                   	// #7
  435a84:	b.ls	435c68 <nftw@plt+0x330e8>  // b.plast
  435a88:	mov	w7, #0x1                   	// #1
  435a8c:	nop
  435a90:	add	w4, w4, #0x1
  435a94:	lsl	w20, w7, w4
  435a98:	cmp	w20, w2
  435a9c:	b.ls	435a90 <nftw@plt+0x32f10>  // b.plast
  435aa0:	add	w26, w11, w4
  435aa4:	cmp	w5, #0x0
  435aa8:	and	w25, w26, #0xff
  435aac:	ccmp	w6, w0, #0x0, ge  // ge = tcont
  435ab0:	b.ne	435b40 <nftw@plt+0x32fc0>  // b.any
  435ab4:	mov	w5, #0x1                   	// #1
  435ab8:	sub	w2, w1, w9
  435abc:	lsl	w8, w5, w8
  435ac0:	sub	w8, w8, #0x1
  435ac4:	and	w2, w8, w2
  435ac8:	lsr	w2, w2, w10
  435acc:	lsr	w4, w2, w4
  435ad0:	cbnz	w4, 435b40 <nftw@plt+0x32fc0>
  435ad4:	sub	w2, w22, w0
  435ad8:	mov	w4, #0x20                  	// #32
  435adc:	sub	w4, w4, w26
  435ae0:	sub	w0, w22, w0
  435ae4:	lsr	x2, x2, x4
  435ae8:	cmp	x2, #0x0
  435aec:	ccmp	w10, w11, #0x0, eq  // eq = none
  435af0:	b.gt	435b40 <nftw@plt+0x32fc0>
  435af4:	b	435bf4 <nftw@plt+0x33074>
  435af8:	cbz	w10, 435c70 <nftw@plt+0x330f0>
  435afc:	cmp	w2, #0x1, lsl #12
  435b00:	mov	w4, #0x60000000            	// #1610612736
  435b04:	ccmp	w1, w4, #0x2, ls  // ls = plast
  435b08:	b.ls	435c5c <nftw@plt+0x330dc>  // b.plast
  435b0c:	nop
  435b10:	mov	w2, #0x6fffffff            	// #1879048191
  435b14:	cmp	w1, w2
  435b18:	b.hi	435c40 <nftw@plt+0x330c0>  // b.pmore
  435b1c:	cmp	w5, #0x0
  435b20:	mov	w4, #0x0                   	// #0
  435b24:	ccmp	w6, w0, #0x0, ge  // ge = tcont
  435b28:	mov	w24, #0x0                   	// #0
  435b2c:	mov	w25, #0x0                   	// #0
  435b30:	mov	w11, #0x0                   	// #0
  435b34:	mov	w26, #0x0                   	// #0
  435b38:	mov	w20, #0x0                   	// #0
  435b3c:	b.eq	435ab4 <nftw@plt+0x32f34>  // b.none
  435b40:	ldr	x23, [x3, #8]
  435b44:	str	x27, [sp, #80]
  435b48:	mov	w0, #0x5fffffff            	// #1610612735
  435b4c:	add	w21, w1, #0x1
  435b50:	ldrb	w27, [x3, #5]
  435b54:	cmp	w1, w0
  435b58:	b.hi	435b7c <nftw@plt+0x32ffc>  // b.pmore
  435b5c:	ldr	w2, [x19, #120]
  435b60:	mov	w0, #0x1                   	// #1
  435b64:	cmp	w2, #0x0
  435b68:	lsl	w0, w0, w2
  435b6c:	add	w21, w0, w1
  435b70:	neg	w0, w0
  435b74:	and	w0, w21, w0
  435b78:	csel	w21, w0, w21, ne  // ne = any
  435b7c:	mov	w0, #0x6fffffff            	// #1879048191
  435b80:	cmp	w21, w0
  435b84:	csel	w21, w21, wzr, ls  // ls = plast
  435b88:	mov	x0, x19
  435b8c:	mov	w1, w21
  435b90:	bl	435190 <nftw@plt+0x32610>
  435b94:	mov	x3, x0
  435b98:	mov	w0, #0x2                   	// #2
  435b9c:	strb	w0, [x3, #4]
  435ba0:	cbz	x23, 435bb8 <nftw@plt+0x33038>
  435ba4:	ldrb	w1, [x23]
  435ba8:	adrp	x0, 47d000 <_obstack_memory_used@@Base+0x1bbb8>
  435bac:	add	x0, x0, #0xa30
  435bb0:	cmp	w1, #0x0
  435bb4:	csel	x23, x0, x23, eq  // eq = none
  435bb8:	strb	w27, [x3, #5]
  435bbc:	dup	v0.2s, w21
  435bc0:	ldr	x27, [sp, #80]
  435bc4:	str	w22, [x3, #16]
  435bc8:	str	x23, [x3, #8]
  435bcc:	ldr	w0, [x19, #12]
  435bd0:	sub	w0, w0, #0x1
  435bd4:	str	w0, [x19, #16]
  435bd8:	strh	wzr, [x3, #6]
  435bdc:	str	wzr, [x19, #64]
  435be0:	str	d0, [x19, #56]
  435be4:	ldr	w0, [x3, #16]
  435be8:	ldp	w1, w9, [x3, #-4]
  435bec:	sub	w0, w22, w0
  435bf0:	str	w1, [x3, #20]
  435bf4:	lsl	w0, w0, w26
  435bf8:	add	w0, w0, w9
  435bfc:	strb	w25, [x3, #6]
  435c00:	strb	w24, [x3, #7]
  435c04:	mov	w1, #0x6fffffff            	// #1879048191
  435c08:	cmp	w0, w1
  435c0c:	b.hi	435c40 <nftw@plt+0x330c0>  // b.pmore
  435c10:	ldr	w1, [x19, #56]
  435c14:	str	w0, [x19, #60]
  435c18:	cmp	w1, w0
  435c1c:	b.cs	435c24 <nftw@plt+0x330a4>  // b.hs, b.nlast
  435c20:	str	w0, [x19, #56]
  435c24:	str	w20, [x19, #64]
  435c28:	ldp	x19, x20, [sp, #16]
  435c2c:	ldp	x21, x22, [sp, #32]
  435c30:	ldp	x23, x24, [sp, #48]
  435c34:	ldp	x25, x26, [sp, #64]
  435c38:	ldp	x29, x30, [sp], #96
  435c3c:	ret
  435c40:	mov	w0, #0x0                   	// #0
  435c44:	ldp	x19, x20, [sp, #16]
  435c48:	ldp	x21, x22, [sp, #32]
  435c4c:	ldp	x23, x24, [sp, #48]
  435c50:	ldp	x25, x26, [sp, #64]
  435c54:	ldp	x29, x30, [sp], #96
  435c58:	ret
  435c5c:	mov	w24, #0x0                   	// #0
  435c60:	mov	w11, #0x0                   	// #0
  435c64:	b	435a7c <nftw@plt+0x32efc>
  435c68:	mov	w20, #0x80                  	// #128
  435c6c:	b	435aa0 <nftw@plt+0x32f20>
  435c70:	mov	w2, #0x60000000            	// #1610612736
  435c74:	ldr	w20, [x19, #64]
  435c78:	cmp	w1, w2
  435c7c:	b.ls	435a40 <nftw@plt+0x32ec0>  // b.plast
  435c80:	cmp	w20, #0x0
  435c84:	mov	w2, #0x6fffffff            	// #1879048191
  435c88:	ccmp	w1, w2, #0x2, eq  // eq = none
  435c8c:	b.hi	435b10 <nftw@plt+0x32f90>  // b.pmore
  435c90:	mov	w20, #0x0                   	// #0
  435c94:	b	435a40 <nftw@plt+0x32ec0>
  435c98:	stp	x29, x30, [sp, #-48]!
  435c9c:	mov	x29, sp
  435ca0:	stp	x19, x20, [sp, #16]
  435ca4:	mov	w20, w1
  435ca8:	mov	x19, x0
  435cac:	ldp	w3, w1, [x0, #60]
  435cb0:	cmp	w1, w20
  435cb4:	b.ls	435cf8 <nftw@plt+0x33178>  // b.plast
  435cb8:	ldr	w0, [x0, #12]
  435cbc:	mov	w2, #0x18                  	// #24
  435cc0:	ldr	x1, [x19]
  435cc4:	sub	w0, w0, #0x1
  435cc8:	smaddl	x0, w0, w2, x1
  435ccc:	ldrb	w1, [x0, #7]
  435cd0:	ldr	w0, [x19, #56]
  435cd4:	lsl	w20, w20, w1
  435cd8:	add	w3, w3, w20
  435cdc:	cmp	w0, w3
  435ce0:	b.hi	435ce8 <nftw@plt+0x33168>  // b.pmore
  435ce4:	str	w3, [x19, #56]
  435ce8:	mov	w0, w3
  435cec:	ldp	x19, x20, [sp, #16]
  435cf0:	ldp	x29, x30, [sp], #48
  435cf4:	ret
  435cf8:	cmp	w20, #0x1, lsl #12
  435cfc:	mov	w1, #0x60000000            	// #1610612736
  435d00:	ccmp	w3, w1, #0x2, ls  // ls = plast
  435d04:	b.hi	435ce8 <nftw@plt+0x33168>  // b.pmore
  435d08:	ldr	w1, [x0, #12]
  435d0c:	add	w2, w20, #0x32
  435d10:	ldr	x5, [x0]
  435d14:	sub	w1, w1, #0x1
  435d18:	str	x21, [sp, #32]
  435d1c:	mov	w21, #0x18                  	// #24
  435d20:	smull	x1, w1, w21
  435d24:	add	x4, x5, x1
  435d28:	ldr	w1, [x5, x1]
  435d2c:	ldrb	w5, [x4, #6]
  435d30:	sub	w3, w3, w1
  435d34:	ldr	w1, [x4, #16]
  435d38:	lsr	w3, w3, w5
  435d3c:	add	w1, w3, w1
  435d40:	bl	4359a8 <nftw@plt+0x32e28>
  435d44:	mov	w3, w0
  435d48:	ldr	w1, [x19, #12]
  435d4c:	ldr	x2, [x19]
  435d50:	sub	w0, w1, #0x1
  435d54:	smaddl	x0, w0, w21, x2
  435d58:	ldr	x21, [sp, #32]
  435d5c:	ldrb	w1, [x0, #6]
  435d60:	cbnz	w1, 435ccc <nftw@plt+0x3314c>
  435d64:	b	435ce8 <nftw@plt+0x33168>
  435d68:	mov	x4, x0
  435d6c:	ldr	w0, [x1, #16]
  435d70:	ldrb	w5, [x1, #6]
  435d74:	mov	w6, #0x60000000            	// #1610612736
  435d78:	sub	w2, w2, w0
  435d7c:	ldr	w0, [x1]
  435d80:	lsl	w2, w2, w5
  435d84:	add	w0, w2, w0
  435d88:	cmp	w0, w6
  435d8c:	b.hi	435dac <nftw@plt+0x3322c>  // b.pmore
  435d90:	mov	w2, #0x1                   	// #1
  435d94:	ldrb	w6, [x1, #7]
  435d98:	lsl	w1, w2, w5
  435d9c:	sub	w1, w1, #0x1
  435da0:	and	w1, w1, w3
  435da4:	lsl	w1, w1, w6
  435da8:	add	w0, w0, w1
  435dac:	ldr	w2, [x4, #36]
  435db0:	mov	w1, #0x80000000            	// #-2147483648
  435db4:	cbz	w2, 435dc8 <nftw@plt+0x33248>
  435db8:	sub	w2, w2, #0x1
  435dbc:	ldr	x1, [x4, #24]
  435dc0:	sbfiz	x2, x2, #5, #32
  435dc4:	ldr	w1, [x1, x2]
  435dc8:	cmp	w0, w1
  435dcc:	ldr	w2, [x4, #56]
  435dd0:	sub	w1, w1, #0x1
  435dd4:	csel	w0, w1, w0, cs  // cs = hs, nlast
  435dd8:	cmp	w2, w0
  435ddc:	b.cs	435de4 <nftw@plt+0x33264>  // b.hs, b.nlast
  435de0:	str	w0, [x4, #56]
  435de4:	ret
  435de8:	tbnz	w1, #31, 435e18 <nftw@plt+0x33298>
  435dec:	mov	w2, #0x6fffffff            	// #1879048191
  435df0:	cmp	w1, w2
  435df4:	b.ls	435e14 <nftw@plt+0x33294>  // b.plast
  435df8:	mov	x2, #0x0                   	// #0
  435dfc:	cbz	x0, 435ebc <nftw@plt+0x3333c>
  435e00:	mov	w5, w1
  435e04:	b	435e50 <nftw@plt+0x332d0>
  435e08:	mov	w2, #0x6fffffff            	// #1879048191
  435e0c:	cmp	w1, w2
  435e10:	b.hi	435e00 <nftw@plt+0x33280>  // b.pmore
  435e14:	b	4350d0 <nftw@plt+0x32550>
  435e18:	and	w1, w1, #0x7fffffff
  435e1c:	mov	w5, #0x18                  	// #24
  435e20:	ldr	x4, [x0, #104]
  435e24:	umull	x1, w1, w5
  435e28:	ldr	w1, [x4, x1]
  435e2c:	tbz	w1, #31, 435e08 <nftw@plt+0x33288>
  435e30:	and	w3, w1, #0x7fffffff
  435e34:	mov	w2, #0x90000000            	// #-1879048192
  435e38:	mov	w6, #0xfffffff             	// #268435455
  435e3c:	umull	x3, w3, w5
  435e40:	ldr	w5, [x4, x3]
  435e44:	add	w2, w5, w2
  435e48:	cmp	w2, w6
  435e4c:	b.hi	435e14 <nftw@plt+0x33294>  // b.pmore
  435e50:	ldp	w3, w4, [x0, #36]
  435e54:	ldr	x6, [x0, #24]
  435e58:	sbfiz	x1, x4, #5, #32
  435e5c:	add	x2, x6, x1
  435e60:	ldr	w1, [x6, x1]
  435e64:	cmp	w1, w5
  435e68:	b.hi	435ea4 <nftw@plt+0x33324>  // b.pmore
  435e6c:	cbz	w4, 435ebc <nftw@plt+0x3333c>
  435e70:	ldur	w1, [x2, #-32]
  435e74:	cmp	w1, w5
  435e78:	b.hi	435ebc <nftw@plt+0x3333c>  // b.pmore
  435e7c:	sub	w3, w4, #0x1
  435e80:	mov	w4, #0x0                   	// #0
  435e84:	b	435ea4 <nftw@plt+0x33324>
  435e88:	lsr	w2, w1, #1
  435e8c:	lsr	w1, w1, #1
  435e90:	lsl	x2, x2, #5
  435e94:	ldr	w2, [x6, x2]
  435e98:	cmp	w2, w5
  435e9c:	b.hi	435ec4 <nftw@plt+0x33344>  // b.pmore
  435ea0:	mov	w3, w1
  435ea4:	add	w1, w3, w4
  435ea8:	cmp	w3, w4
  435eac:	b.hi	435e88 <nftw@plt+0x33308>  // b.pmore
  435eb0:	sbfiz	x2, x3, #5, #32
  435eb4:	str	w3, [x0, #40]
  435eb8:	add	x2, x6, x2
  435ebc:	mov	x0, x2
  435ec0:	ret
  435ec4:	add	w4, w1, #0x1
  435ec8:	b	435ea4 <nftw@plt+0x33324>
  435ecc:	nop
  435ed0:	stp	x29, x30, [sp, #-80]!
  435ed4:	mov	w9, w1
  435ed8:	mov	x12, x2
  435edc:	mov	x29, sp
  435ee0:	stp	x19, x20, [sp, #16]
  435ee4:	mov	x10, x3
  435ee8:	mov	x19, x0
  435eec:	tbz	w1, #31, 435f04 <nftw@plt+0x33384>
  435ef0:	and	w9, w1, #0x7fffffff
  435ef4:	mov	w1, #0x18                  	// #24
  435ef8:	ldr	x0, [x0, #104]
  435efc:	umull	x9, w9, w1
  435f00:	ldr	w9, [x0, x9]
  435f04:	cmp	w9, #0x0
  435f08:	mov	w0, #0x0                   	// #0
  435f0c:	ccmp	x10, #0x0, #0x0, eq  // eq = none
  435f10:	b.eq	435f64 <nftw@plt+0x333e4>  // b.none
  435f14:	lsr	x11, x12, #32
  435f18:	mov	w0, w11
  435f1c:	cbz	x10, 435f70 <nftw@plt+0x333f0>
  435f20:	ldr	x0, [x19, #88]
  435f24:	add	x1, sp, #0x38
  435f28:	mov	w2, #0x1                   	// #1
  435f2c:	stp	w9, w12, [sp, #56]
  435f30:	str	w11, [sp, #64]
  435f34:	str	x10, [sp, #72]
  435f38:	bl	4609a0 <nftw@plt+0x5de20>
  435f3c:	ldr	x1, [x0]
  435f40:	mov	x20, x0
  435f44:	cbz	x1, 435ff8 <nftw@plt+0x33478>
  435f48:	ldr	x0, [x19, #104]
  435f4c:	sub	x0, x1, x0
  435f50:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  435f54:	asr	x0, x0, #3
  435f58:	movk	x1, #0xaaab
  435f5c:	mul	x0, x0, x1
  435f60:	orr	w0, w0, #0x80000000
  435f64:	ldp	x19, x20, [sp, #16]
  435f68:	ldp	x29, x30, [sp], #80
  435f6c:	ret
  435f70:	cmp	w9, w12
  435f74:	b.ne	4360a0 <nftw@plt+0x33520>  // b.any
  435f78:	cmp	w11, w9
  435f7c:	b.cc	4360a0 <nftw@plt+0x33520>  // b.lo, b.ul, b.last
  435f80:	sub	w2, w9, #0x2
  435f84:	mov	w1, #0xfffd                	// #65533
  435f88:	movk	w1, #0x4fff, lsl #16
  435f8c:	cmp	w2, w1
  435f90:	b.hi	436098 <nftw@plt+0x33518>  // b.pmore
  435f94:	ldr	w0, [x19, #36]
  435f98:	mov	w1, #0x80000000            	// #-2147483648
  435f9c:	cbz	w0, 435fb0 <nftw@plt+0x33430>
  435fa0:	sub	w0, w0, #0x1
  435fa4:	ldr	x1, [x19, #24]
  435fa8:	sbfiz	x0, x0, #5, #32
  435fac:	ldr	w1, [x1, x0]
  435fb0:	cmp	w12, w1
  435fb4:	b.cs	435fe8 <nftw@plt+0x33468>  // b.hs, b.nlast
  435fb8:	cmp	w11, w1
  435fbc:	b.cs	435fe8 <nftw@plt+0x33468>  // b.hs, b.nlast
  435fc0:	mov	w1, w12
  435fc4:	mov	x0, x19
  435fc8:	bl	435de8 <nftw@plt+0x33268>
  435fcc:	ldrb	w0, [x0, #7]
  435fd0:	sub	w4, w11, w12
  435fd4:	mov	w1, #0x1                   	// #1
  435fd8:	lsr	w4, w4, w0
  435fdc:	lsl	w1, w1, w0
  435fe0:	cmp	w1, w4
  435fe4:	b.hi	4360bc <nftw@plt+0x3353c>  // b.pmore
  435fe8:	cmp	w11, w12
  435fec:	b.ne	4360a0 <nftw@plt+0x33520>  // b.any
  435ff0:	mov	w0, w11
  435ff4:	b	435f64 <nftw@plt+0x333e4>
  435ff8:	ldp	w0, w1, [x19, #96]
  435ffc:	str	x21, [sp, #32]
  436000:	ldr	x21, [x19, #104]
  436004:	cmp	w0, w1
  436008:	b.cc	43605c <nftw@plt+0x334dc>  // b.lo, b.ul, b.last
  43600c:	ldr	x2, [x19, #72]
  436010:	adrp	x0, 461000 <nftw@plt+0x5e480>
  436014:	add	x0, x0, #0x5e8
  436018:	cmp	x2, #0x0
  43601c:	csel	x2, x0, x2, eq  // eq = none
  436020:	cbz	w1, 4360b0 <nftw@plt+0x33530>
  436024:	lsl	w0, w1, #1
  436028:	mov	w1, #0x18                  	// #24
  43602c:	umull	x1, w0, w1
  436030:	str	w0, [x19, #100]
  436034:	mov	x0, x21
  436038:	blr	x2
  43603c:	sub	x21, x0, x21
  436040:	ldr	w1, [x19, #100]
  436044:	str	x21, [sp, #48]
  436048:	str	x0, [x19, #104]
  43604c:	cmp	w1, #0x80
  436050:	b.hi	4360d0 <nftw@plt+0x33550>  // b.pmore
  436054:	mov	x21, x0
  436058:	ldr	w0, [x19, #96]
  43605c:	mov	w2, #0x18                  	// #24
  436060:	add	w1, w0, #0x1
  436064:	umull	x2, w0, w2
  436068:	add	x21, x21, x2
  43606c:	str	x21, [x20]
  436070:	ldr	x21, [sp, #32]
  436074:	str	w1, [x19, #96]
  436078:	ldr	x0, [x19, #104]
  43607c:	ldp	x4, x5, [sp, #56]
  436080:	add	x2, x0, x2
  436084:	stp	x4, x5, [x2]
  436088:	ldr	x1, [sp, #72]
  43608c:	str	x1, [x2, #16]
  436090:	ldr	x1, [x20]
  436094:	b	435f4c <nftw@plt+0x333cc>
  436098:	cmp	w11, w9
  43609c:	b.eq	435f64 <nftw@plt+0x333e4>  // b.none
  4360a0:	ldr	w0, [x19, #128]
  4360a4:	add	w0, w0, #0x1
  4360a8:	str	w0, [x19, #128]
  4360ac:	b	435f20 <nftw@plt+0x333a0>
  4360b0:	mov	x1, #0xc00                 	// #3072
  4360b4:	mov	w0, #0x80                  	// #128
  4360b8:	b	436030 <nftw@plt+0x334b0>
  4360bc:	ldr	w1, [x19, #124]
  4360c0:	orr	w0, w4, w12
  4360c4:	add	w1, w1, #0x1
  4360c8:	str	w1, [x19, #124]
  4360cc:	b	435f64 <nftw@plt+0x333e4>
  4360d0:	ldr	x0, [x19, #88]
  4360d4:	add	x2, sp, #0x30
  4360d8:	adrp	x1, 435000 <nftw@plt+0x32480>
  4360dc:	add	x1, x1, #0xb0
  4360e0:	bl	460b70 <nftw@plt+0x5dff0>
  4360e4:	ldr	x0, [x19, #104]
  4360e8:	b	436054 <nftw@plt+0x334d4>
  4360ec:	nop
  4360f0:	tbnz	w1, #31, 436128 <nftw@plt+0x335a8>
  4360f4:	cmp	w1, #0x1
  4360f8:	b.ls	43611c <nftw@plt+0x3359c>  // b.plast
  4360fc:	ldr	w2, [x0, #36]
  436100:	cbz	w2, 436144 <nftw@plt+0x335c4>
  436104:	sub	w2, w2, #0x1
  436108:	ldr	x3, [x0, #24]
  43610c:	sbfiz	x2, x2, #5, #32
  436110:	ldr	w2, [x3, x2]
  436114:	cmp	w1, w2
  436118:	b.cc	436144 <nftw@plt+0x335c4>  // b.lo, b.ul, b.last
  43611c:	dup	v0.2s, w1
  436120:	mov	x0, v0.d[0]
  436124:	ret
  436128:	ldr	x0, [x0, #104]
  43612c:	and	w1, w1, #0x7fffffff
  436130:	mov	w2, #0x18                  	// #24
  436134:	umaddl	x1, w1, w2, x0
  436138:	ldur	d0, [x1, #4]
  43613c:	fmov	x0, d0
  436140:	ret
  436144:	mov	w2, #0x50000000            	// #1342177280
  436148:	cmp	w1, w2
  43614c:	b.hi	43611c <nftw@plt+0x3359c>  // b.pmore
  436150:	stp	x29, x30, [sp, #-32]!
  436154:	mov	x29, sp
  436158:	str	w1, [sp, #28]
  43615c:	bl	435de8 <nftw@plt+0x33268>
  436160:	mov	x3, x0
  436164:	ldr	w1, [sp, #28]
  436168:	mov	w2, #0x1                   	// #1
  43616c:	mov	x0, #0x0                   	// #0
  436170:	ldrb	w4, [x3, #7]
  436174:	ldp	x29, x30, [sp], #32
  436178:	lsl	w2, w2, w4
  43617c:	sub	w2, w2, #0x1
  436180:	and	w3, w2, w1
  436184:	bic	w1, w1, w2
  436188:	lsl	w3, w3, w4
  43618c:	bfxil	x0, x1, #0, #32
  436190:	add	w1, w3, w1
  436194:	bfi	x0, x1, #32, #32
  436198:	ret
  43619c:	nop
  4361a0:	mov	w9, w1
  4361a4:	tbz	w1, #31, 4361bc <nftw@plt+0x3363c>
  4361a8:	and	w9, w1, #0x7fffffff
  4361ac:	mov	w2, #0x18                  	// #24
  4361b0:	ldr	x1, [x0, #104]
  4361b4:	umull	x9, w9, w2
  4361b8:	ldr	w9, [x1, x9]
  4361bc:	ldr	w1, [x0, #36]
  4361c0:	mov	w2, #0x80000000            	// #-2147483648
  4361c4:	cbz	w1, 4361d8 <nftw@plt+0x33658>
  4361c8:	sub	w1, w1, #0x1
  4361cc:	ldr	x2, [x0, #24]
  4361d0:	sbfiz	x1, x1, #5, #32
  4361d4:	ldr	w2, [x2, x1]
  4361d8:	cmp	w9, #0x1
  4361dc:	ccmp	w9, w2, #0x2, hi  // hi = pmore
  4361e0:	b.cc	4361ec <nftw@plt+0x3366c>  // b.lo, b.ul, b.last
  4361e4:	mov	w0, w9
  4361e8:	ret
  4361ec:	stp	x29, x30, [sp, #-16]!
  4361f0:	mov	w1, w9
  4361f4:	mov	x29, sp
  4361f8:	bl	435de8 <nftw@plt+0x33268>
  4361fc:	ldrb	w0, [x0, #7]
  436200:	mov	w1, #0xffffffff            	// #-1
  436204:	ldp	x29, x30, [sp], #16
  436208:	lsl	w1, w1, w0
  43620c:	and	w9, w9, w1
  436210:	mov	w0, w9
  436214:	ret
  436218:	mov	x13, x0
  43621c:	mov	w11, w2
  436220:	tbnz	w1, #31, 436254 <nftw@plt+0x336d4>
  436224:	mov	w0, #0x6fffffff            	// #1879048191
  436228:	cmp	w1, w0
  43622c:	b.hi	43624c <nftw@plt+0x336cc>  // b.pmore
  436230:	mov	w0, w1
  436234:	cmp	w11, #0x0
  436238:	mov	w10, w1
  43623c:	ccmp	w1, #0x1, #0x0, ne  // ne = any
  436240:	b.hi	436414 <nftw@plt+0x33894>  // b.pmore
  436244:	mov	w0, w10
  436248:	ret
  43624c:	mov	w10, w1
  436250:	b	436244 <nftw@plt+0x336c4>
  436254:	and	w1, w1, #0x7fffffff
  436258:	mov	w3, #0x18                  	// #24
  43625c:	ldr	x2, [x0, #104]
  436260:	umull	x1, w1, w3
  436264:	ldr	w1, [x2, x1]
  436268:	tbz	w1, #31, 436224 <nftw@plt+0x336a4>
  43626c:	and	w0, w1, #0x7fffffff
  436270:	mov	w4, #0x6fffffff            	// #1879048191
  436274:	umull	x0, w0, w3
  436278:	ldr	w0, [x2, x0]
  43627c:	cmp	w0, w4
  436280:	b.ls	436234 <nftw@plt+0x336b4>  // b.plast
  436284:	tbz	w0, #31, 43624c <nftw@plt+0x336cc>
  436288:	mov	w10, w1
  43628c:	cbz	w11, 436244 <nftw@plt+0x336c4>
  436290:	stp	x29, x30, [sp, #-16]!
  436294:	mov	w10, w1
  436298:	mov	w12, #0x6fffffff            	// #1879048191
  43629c:	mov	x29, sp
  4362a0:	mov	w14, #0x18                  	// #24
  4362a4:	b	4362cc <nftw@plt+0x3374c>
  4362a8:	tbz	w10, #31, 4362bc <nftw@plt+0x3373c>
  4362ac:	and	w10, w10, #0x7fffffff
  4362b0:	ldr	x0, [x13, #104]
  4362b4:	umull	x10, w10, w14
  4362b8:	ldr	w10, [x0, x10]
  4362bc:	sub	w10, w10, w1
  4362c0:	ldr	x1, [x9, #16]
  4362c4:	lsl	w10, w10, #1
  4362c8:	ldr	w10, [x1, x10, lsl #2]
  4362cc:	mov	w1, w10
  4362d0:	mov	x0, x13
  4362d4:	bl	435de8 <nftw@plt+0x33268>
  4362d8:	mov	x9, x0
  4362dc:	cbz	x0, 436428 <nftw@plt+0x338a8>
  4362e0:	ldr	w1, [x0]
  4362e4:	cmp	w1, w12
  4362e8:	b.hi	4362a8 <nftw@plt+0x33728>  // b.pmore
  4362ec:	ldrb	w5, [x0, #7]
  4362f0:	mov	w12, w5
  4362f4:	lsl	w2, w11, w5
  4362f8:	add	w2, w2, w10
  4362fc:	cmp	w2, w1
  436300:	b.ls	436408 <nftw@plt+0x33888>  // b.plast
  436304:	ldrb	w7, [x0, #6]
  436308:	sub	w8, w10, w1
  43630c:	ldr	w6, [x0, #16]
  436310:	mov	w3, #0x18                  	// #24
  436314:	ldr	w0, [x13, #12]
  436318:	ldr	x2, [x13]
  43631c:	sub	w0, w0, #0x1
  436320:	smaddl	x0, w0, w3, x2
  436324:	lsr	w2, w8, w7
  436328:	add	w2, w2, w6
  43632c:	b	43635c <nftw@plt+0x337dc>
  436330:	ldr	w4, [x9, #24]
  436334:	lsl	w3, w11, w5
  436338:	add	w3, w3, w10
  43633c:	cmp	w3, w4
  436340:	b.cc	436364 <nftw@plt+0x337e4>  // b.lo, b.ul, b.last
  436344:	ldr	w6, [x9, #40]
  436348:	add	x9, x9, #0x18
  43634c:	cmp	w6, w2
  436350:	b.hi	436408 <nftw@plt+0x33888>  // b.pmore
  436354:	ldrb	w5, [x9, #7]
  436358:	mov	w1, w4
  43635c:	cmp	x0, x9
  436360:	b.ne	436330 <nftw@plt+0x337b0>  // b.any
  436364:	mov	w3, #0x1                   	// #1
  436368:	ldrb	w14, [x9, #6]
  43636c:	lsl	w0, w3, w7
  436370:	sub	w0, w0, #0x1
  436374:	and	w0, w0, w8
  436378:	sub	w4, w14, w5
  43637c:	lsr	w0, w0, w12
  436380:	add	w11, w0, w11
  436384:	lsl	w0, w3, w4
  436388:	cmp	w0, w11
  43638c:	b.ls	436408 <nftw@plt+0x33888>  // b.plast
  436390:	sub	w12, w2, w6
  436394:	mov	w0, #0x60000000            	// #1610612736
  436398:	lsl	w12, w12, w14
  43639c:	add	w12, w12, w1
  4363a0:	cmp	w12, w0
  4363a4:	b.hi	4363bc <nftw@plt+0x3383c>  // b.pmore
  4363a8:	lsl	w0, w3, w14
  4363ac:	sub	w0, w0, #0x1
  4363b0:	and	w11, w0, w11
  4363b4:	lsl	w5, w11, w5
  4363b8:	add	w12, w12, w5
  4363bc:	ldr	w1, [x13, #36]
  4363c0:	mov	w0, #0x80000000            	// #-2147483648
  4363c4:	cbz	w1, 4363d8 <nftw@plt+0x33858>
  4363c8:	sub	w0, w1, #0x1
  4363cc:	ldr	x1, [x13, #24]
  4363d0:	sbfiz	x0, x0, #5, #32
  4363d4:	ldr	w0, [x1, x0]
  4363d8:	cmp	w12, w0
  4363dc:	ldr	w1, [x13, #56]
  4363e0:	sub	w0, w0, #0x1
  4363e4:	csel	w12, w0, w12, cs  // cs = hs, nlast
  4363e8:	cmp	w1, w12
  4363ec:	b.cs	4363f4 <nftw@plt+0x33874>  // b.hs, b.nlast
  4363f0:	str	w12, [x13, #56]
  4363f4:	mov	x0, x13
  4363f8:	mov	w1, w12
  4363fc:	bl	435de8 <nftw@plt+0x33268>
  436400:	cmp	x9, x0
  436404:	csel	w10, w10, w12, ne  // ne = any
  436408:	mov	w0, w10
  43640c:	ldp	x29, x30, [sp], #16
  436410:	ret
  436414:	cmp	w0, #0x1
  436418:	b.hi	436290 <nftw@plt+0x33710>  // b.pmore
  43641c:	mov	x0, #0x0                   	// #0
  436420:	ldr	w0, [x0]
  436424:	brk	#0x3e8
  436428:	mov	x0, #0x0                   	// #0
  43642c:	ldr	w0, [x0]
  436430:	brk	#0x3e8
  436434:	nop
  436438:	cbz	x0, 436450 <nftw@plt+0x338d0>
  43643c:	ldr	w1, [x0]
  436440:	mov	w0, #0x6fffffff            	// #1879048191
  436444:	cmp	w1, w0
  436448:	cset	w0, hi  // hi = pmore
  43644c:	ret
  436450:	mov	w0, #0x0                   	// #0
  436454:	ret
  436458:	tbz	w2, #31, 436470 <nftw@plt+0x338f0>
  43645c:	and	w2, w2, #0x7fffffff
  436460:	mov	w3, #0x18                  	// #24
  436464:	ldr	x0, [x0, #104]
  436468:	umull	x2, w2, w3
  43646c:	ldr	w2, [x0, x2]
  436470:	ldr	w3, [x1]
  436474:	ldr	x0, [x1, #16]
  436478:	sub	w2, w2, w3
  43647c:	lsl	w2, w2, #1
  436480:	ldr	w0, [x0, x2, lsl #2]
  436484:	ret
  436488:	mov	x13, x0
  43648c:	mov	w9, w1
  436490:	tbnz	w1, #31, 436504 <nftw@plt+0x33984>
  436494:	cmp	w1, #0x1
  436498:	b.ls	4364fc <nftw@plt+0x3397c>  // b.plast
  43649c:	mov	w10, #0x6fffffff            	// #1879048191
  4364a0:	mov	w14, #0x18                  	// #24
  4364a4:	mov	w12, #0x90000000            	// #-1879048192
  4364a8:	mov	w11, #0xfffffff             	// #268435455
  4364ac:	tbnz	w9, #31, 4366a8 <nftw@plt+0x33b28>
  4364b0:	cmp	w9, w10
  4364b4:	b.hi	43661c <nftw@plt+0x33a9c>  // b.pmore
  4364b8:	mov	w1, w9
  4364bc:	stp	x29, x30, [sp, #-16]!
  4364c0:	mov	x29, sp
  4364c4:	nop
  4364c8:	mov	x0, x13
  4364cc:	bl	4350d0 <nftw@plt+0x32550>
  4364d0:	cbz	x0, 436714 <nftw@plt+0x33b94>
  4364d4:	ldr	w1, [x0]
  4364d8:	cmp	w1, w10
  4364dc:	b.hi	436544 <nftw@plt+0x339c4>  // b.pmore
  4364e0:	ldrb	w3, [x0, #6]
  4364e4:	sub	w1, w9, w1
  4364e8:	ldr	w2, [x0, #16]
  4364ec:	ldp	x29, x30, [sp], #16
  4364f0:	lsr	w0, w1, w3
  4364f4:	add	w0, w0, w2
  4364f8:	ret
  4364fc:	mov	w0, #0x0                   	// #0
  436500:	ret
  436504:	and	w9, w1, #0x7fffffff
  436508:	mov	w2, #0x18                  	// #24
  43650c:	ldr	x0, [x0, #104]
  436510:	umull	x9, w9, w2
  436514:	ldr	w9, [x0, x9]
  436518:	cmp	w9, #0x1
  43651c:	b.ls	4364fc <nftw@plt+0x3397c>  // b.plast
  436520:	tbz	w9, #31, 43649c <nftw@plt+0x3391c>
  436524:	and	w9, w9, #0x7fffffff
  436528:	mov	w10, #0x6fffffff            	// #1879048191
  43652c:	mov	w14, #0x18                  	// #24
  436530:	mov	w12, #0x90000000            	// #-1879048192
  436534:	mov	w11, #0xfffffff             	// #268435455
  436538:	umull	x2, w9, w2
  43653c:	ldr	w9, [x0, x2]
  436540:	b	4364ac <nftw@plt+0x3392c>
  436544:	ldr	w9, [x0, #24]
  436548:	tbnz	w9, #31, 4365cc <nftw@plt+0x33a4c>
  43654c:	cmp	w9, w10
  436550:	b.ls	4365fc <nftw@plt+0x33a7c>  // b.plast
  436554:	cbz	x13, 436714 <nftw@plt+0x33b94>
  436558:	mov	w5, w9
  43655c:	ldp	w3, w4, [x13, #36]
  436560:	ldr	x6, [x13, #24]
  436564:	sbfiz	x1, x4, #5, #32
  436568:	add	x0, x6, x1
  43656c:	ldr	w1, [x6, x1]
  436570:	cmp	w1, w5
  436574:	b.hi	4365b4 <nftw@plt+0x33a34>  // b.pmore
  436578:	cbz	w4, 4364d8 <nftw@plt+0x33958>
  43657c:	ldur	w2, [x0, #-32]
  436580:	cmp	w2, w5
  436584:	b.hi	4364d8 <nftw@plt+0x33958>  // b.pmore
  436588:	sub	w3, w4, #0x1
  43658c:	mov	w4, #0x0                   	// #0
  436590:	b	4365b4 <nftw@plt+0x33a34>
  436594:	add	w1, w3, w4
  436598:	lsr	w2, w1, #1
  43659c:	lsr	w1, w1, #1
  4365a0:	lsl	x2, x2, #5
  4365a4:	ldr	w0, [x6, x2]
  4365a8:	cmp	w0, w5
  4365ac:	b.hi	436604 <nftw@plt+0x33a84>  // b.pmore
  4365b0:	mov	w3, w1
  4365b4:	cmp	w3, w4
  4365b8:	b.hi	436594 <nftw@plt+0x33a14>  // b.pmore
  4365bc:	sbfiz	x1, x3, #5, #32
  4365c0:	str	w3, [x13, #40]
  4365c4:	add	x0, x6, x1
  4365c8:	b	4364d0 <nftw@plt+0x33950>
  4365cc:	and	w0, w9, #0x7fffffff
  4365d0:	ldr	x2, [x13, #104]
  4365d4:	umull	x0, w0, w14
  4365d8:	ldr	w1, [x2, x0]
  4365dc:	tbz	w1, #31, 43660c <nftw@plt+0x33a8c>
  4365e0:	and	w0, w1, #0x7fffffff
  4365e4:	umull	x0, w0, w14
  4365e8:	ldr	w5, [x2, x0]
  4365ec:	add	w0, w5, w12
  4365f0:	cmp	w0, w11
  4365f4:	b.ls	43655c <nftw@plt+0x339dc>  // b.plast
  4365f8:	b	4364c8 <nftw@plt+0x33948>
  4365fc:	mov	w1, w9
  436600:	b	4364c8 <nftw@plt+0x33948>
  436604:	add	w4, w1, #0x1
  436608:	b	4365b4 <nftw@plt+0x33a34>
  43660c:	cmp	w1, w10
  436610:	b.ls	4364c8 <nftw@plt+0x33948>  // b.plast
  436614:	mov	w5, w1
  436618:	b	43655c <nftw@plt+0x339dc>
  43661c:	cbz	x13, 436708 <nftw@plt+0x33b88>
  436620:	mov	w5, w9
  436624:	ldp	w3, w4, [x13, #36]
  436628:	ldr	x6, [x13, #24]
  43662c:	sbfiz	x1, x4, #5, #32
  436630:	add	x0, x6, x1
  436634:	ldr	w1, [x6, x1]
  436638:	cmp	w1, w5
  43663c:	b.hi	436658 <nftw@plt+0x33ad8>  // b.pmore
  436640:	cbz	w4, 436698 <nftw@plt+0x33b18>
  436644:	ldur	w2, [x0, #-32]
  436648:	cmp	w2, w5
  43664c:	b.hi	436698 <nftw@plt+0x33b18>  // b.pmore
  436650:	sub	w3, w4, #0x1
  436654:	mov	w4, #0x0                   	// #0
  436658:	cmp	w3, w4
  43665c:	b.ls	436684 <nftw@plt+0x33b04>  // b.plast
  436660:	add	w1, w3, w4
  436664:	lsr	w2, w1, #1
  436668:	lsr	w1, w1, #1
  43666c:	lsl	x2, x2, #5
  436670:	ldr	w0, [x6, x2]
  436674:	cmp	w0, w5
  436678:	b.hi	4366d8 <nftw@plt+0x33b58>  // b.pmore
  43667c:	mov	w3, w1
  436680:	b	436658 <nftw@plt+0x33ad8>
  436684:	str	w3, [x13, #40]
  436688:	sbfiz	x1, x3, #5, #32
  43668c:	add	x0, x6, x1
  436690:	cbz	x0, 436708 <nftw@plt+0x33b88>
  436694:	ldr	w1, [x0]
  436698:	cmp	w1, w10
  43669c:	b.ls	4366e0 <nftw@plt+0x33b60>  // b.plast
  4366a0:	ldr	w9, [x0, #24]
  4366a4:	b	4364ac <nftw@plt+0x3392c>
  4366a8:	and	w0, w9, #0x7fffffff
  4366ac:	ldr	x2, [x13, #104]
  4366b0:	umull	x0, w0, w14
  4366b4:	ldr	w1, [x2, x0]
  4366b8:	tbz	w1, #31, 4366f8 <nftw@plt+0x33b78>
  4366bc:	and	w0, w1, #0x7fffffff
  4366c0:	umull	x0, w0, w14
  4366c4:	ldr	w5, [x2, x0]
  4366c8:	add	w0, w5, w12
  4366cc:	cmp	w0, w11
  4366d0:	b.ls	436624 <nftw@plt+0x33aa4>  // b.plast
  4366d4:	b	4364bc <nftw@plt+0x3393c>
  4366d8:	add	w4, w1, #0x1
  4366dc:	b	436658 <nftw@plt+0x33ad8>
  4366e0:	ldrb	w3, [x0, #6]
  4366e4:	sub	w1, w9, w1
  4366e8:	ldr	w2, [x0, #16]
  4366ec:	lsr	w0, w1, w3
  4366f0:	add	w0, w0, w2
  4366f4:	ret
  4366f8:	cmp	w1, w10
  4366fc:	b.ls	4364bc <nftw@plt+0x3393c>  // b.plast
  436700:	mov	w5, w1
  436704:	b	436624 <nftw@plt+0x33aa4>
  436708:	mov	x0, #0x0                   	// #0
  43670c:	ldr	w0, [x0]
  436710:	brk	#0x3e8
  436714:	mov	x0, #0x0                   	// #0
  436718:	ldr	w0, [x0]
  43671c:	brk	#0x3e8
  436720:	mov	x9, x0
  436724:	tbnz	w1, #31, 436760 <nftw@plt+0x33be0>
  436728:	cmp	w1, #0x1
  43672c:	b.ls	436758 <nftw@plt+0x33bd8>  // b.plast
  436730:	mov	w10, #0x6fffffff            	// #1879048191
  436734:	mov	w13, #0x18                  	// #24
  436738:	mov	w12, #0x90000000            	// #-1879048192
  43673c:	mov	w11, #0xfffffff             	// #268435455
  436740:	tbnz	w1, #31, 4367a0 <nftw@plt+0x33c20>
  436744:	cmp	w1, w10
  436748:	b.ls	436834 <nftw@plt+0x33cb4>  // b.plast
  43674c:	cbz	x9, 436970 <nftw@plt+0x33df0>
  436750:	mov	w4, w1
  436754:	b	4367cc <nftw@plt+0x33c4c>
  436758:	mov	x0, #0x0                   	// #0
  43675c:	ret
  436760:	and	w1, w1, #0x7fffffff
  436764:	mov	w2, #0x18                  	// #24
  436768:	ldr	x0, [x0, #104]
  43676c:	umull	x1, w1, w2
  436770:	ldr	w1, [x0, x1]
  436774:	cmp	w1, #0x1
  436778:	b.ls	436758 <nftw@plt+0x33bd8>  // b.plast
  43677c:	tbz	w1, #31, 436730 <nftw@plt+0x33bb0>
  436780:	and	w1, w1, #0x7fffffff
  436784:	mov	w10, #0x6fffffff            	// #1879048191
  436788:	mov	w13, #0x18                  	// #24
  43678c:	mov	w12, #0x90000000            	// #-1879048192
  436790:	mov	w11, #0xfffffff             	// #268435455
  436794:	umull	x1, w1, w2
  436798:	ldr	w1, [x0, x1]
  43679c:	b	436740 <nftw@plt+0x33bc0>
  4367a0:	and	w1, w1, #0x7fffffff
  4367a4:	ldr	x2, [x9, #104]
  4367a8:	umull	x1, w1, w13
  4367ac:	ldr	w1, [x2, x1]
  4367b0:	tbz	w1, #31, 43682c <nftw@plt+0x33cac>
  4367b4:	and	w0, w1, #0x7fffffff
  4367b8:	umull	x0, w0, w13
  4367bc:	ldr	w4, [x2, x0]
  4367c0:	add	w0, w4, w12
  4367c4:	cmp	w0, w11
  4367c8:	b.hi	436834 <nftw@plt+0x33cb4>  // b.pmore
  4367cc:	ldp	w2, w3, [x9, #36]
  4367d0:	ldr	x5, [x9, #24]
  4367d4:	sbfiz	x1, x3, #5, #32
  4367d8:	add	x0, x5, x1
  4367dc:	ldr	w1, [x5, x1]
  4367e0:	cmp	w1, w4
  4367e4:	b.hi	436800 <nftw@plt+0x33c80>  // b.pmore
  4367e8:	cbz	w3, 43694c <nftw@plt+0x33dcc>
  4367ec:	ldur	w2, [x0, #-32]
  4367f0:	cmp	w2, w4
  4367f4:	b.hi	43694c <nftw@plt+0x33dcc>  // b.pmore
  4367f8:	sub	w2, w3, #0x1
  4367fc:	mov	w3, #0x0                   	// #0
  436800:	cmp	w2, w3
  436804:	b.ls	436938 <nftw@plt+0x33db8>  // b.plast
  436808:	add	w0, w2, w3
  43680c:	lsr	w1, w0, #1
  436810:	lsr	w0, w0, #1
  436814:	lsl	x1, x1, #5
  436818:	ldr	w1, [x5, x1]
  43681c:	cmp	w1, w4
  436820:	b.hi	436930 <nftw@plt+0x33db0>  // b.pmore
  436824:	mov	w2, w0
  436828:	b	436800 <nftw@plt+0x33c80>
  43682c:	cmp	w1, w10
  436830:	b.hi	436750 <nftw@plt+0x33bd0>  // b.pmore
  436834:	stp	x29, x30, [sp, #-16]!
  436838:	mov	x29, sp
  43683c:	nop
  436840:	mov	x0, x9
  436844:	bl	4350d0 <nftw@plt+0x32550>
  436848:	cbz	x0, 436964 <nftw@plt+0x33de4>
  43684c:	ldr	w1, [x0]
  436850:	cmp	w1, w10
  436854:	b.hi	436864 <nftw@plt+0x33ce4>  // b.pmore
  436858:	ldp	x29, x30, [sp], #16
  43685c:	ldr	x0, [x0, #8]
  436860:	ret
  436864:	ldr	w1, [x0, #24]
  436868:	tbnz	w1, #31, 4368ec <nftw@plt+0x33d6c>
  43686c:	cmp	w1, w10
  436870:	b.ls	436840 <nftw@plt+0x33cc0>  // b.plast
  436874:	cbz	x9, 436964 <nftw@plt+0x33de4>
  436878:	mov	w4, w1
  43687c:	ldp	w2, w3, [x9, #36]
  436880:	ldr	x5, [x9, #24]
  436884:	sbfiz	x1, x3, #5, #32
  436888:	add	x0, x5, x1
  43688c:	ldr	w1, [x5, x1]
  436890:	cmp	w1, w4
  436894:	b.hi	4368d4 <nftw@plt+0x33d54>  // b.pmore
  436898:	cbz	w3, 436850 <nftw@plt+0x33cd0>
  43689c:	ldur	w2, [x0, #-32]
  4368a0:	cmp	w2, w4
  4368a4:	b.hi	436850 <nftw@plt+0x33cd0>  // b.pmore
  4368a8:	sub	w2, w3, #0x1
  4368ac:	mov	w3, #0x0                   	// #0
  4368b0:	b	4368d4 <nftw@plt+0x33d54>
  4368b4:	add	w0, w2, w3
  4368b8:	lsr	w1, w0, #1
  4368bc:	lsr	w0, w0, #1
  4368c0:	lsl	x1, x1, #5
  4368c4:	ldr	w1, [x5, x1]
  4368c8:	cmp	w1, w4
  4368cc:	b.hi	43691c <nftw@plt+0x33d9c>  // b.pmore
  4368d0:	mov	w2, w0
  4368d4:	cmp	w2, w3
  4368d8:	b.hi	4368b4 <nftw@plt+0x33d34>  // b.pmore
  4368dc:	sbfiz	x1, x2, #5, #32
  4368e0:	str	w2, [x9, #40]
  4368e4:	add	x0, x5, x1
  4368e8:	b	436848 <nftw@plt+0x33cc8>
  4368ec:	and	w1, w1, #0x7fffffff
  4368f0:	ldr	x2, [x9, #104]
  4368f4:	umull	x1, w1, w13
  4368f8:	ldr	w1, [x2, x1]
  4368fc:	tbz	w1, #31, 436924 <nftw@plt+0x33da4>
  436900:	and	w0, w1, #0x7fffffff
  436904:	umull	x0, w0, w13
  436908:	ldr	w4, [x2, x0]
  43690c:	add	w0, w4, w12
  436910:	cmp	w0, w11
  436914:	b.ls	43687c <nftw@plt+0x33cfc>  // b.plast
  436918:	b	436840 <nftw@plt+0x33cc0>
  43691c:	add	w3, w0, #0x1
  436920:	b	4368d4 <nftw@plt+0x33d54>
  436924:	cmp	w1, w10
  436928:	b.hi	436878 <nftw@plt+0x33cf8>  // b.pmore
  43692c:	b	436840 <nftw@plt+0x33cc0>
  436930:	add	w3, w0, #0x1
  436934:	b	436800 <nftw@plt+0x33c80>
  436938:	str	w2, [x9, #40]
  43693c:	sbfiz	x1, x2, #5, #32
  436940:	add	x0, x5, x1
  436944:	cbz	x0, 436970 <nftw@plt+0x33df0>
  436948:	ldr	w1, [x0]
  43694c:	cmp	w1, w10
  436950:	b.ls	43695c <nftw@plt+0x33ddc>  // b.plast
  436954:	ldr	w1, [x0, #24]
  436958:	b	436740 <nftw@plt+0x33bc0>
  43695c:	ldr	x0, [x0, #8]
  436960:	ret
  436964:	mov	x0, #0x0                   	// #0
  436968:	ldr	x0, [x0, #8]
  43696c:	brk	#0x3e8
  436970:	mov	x0, #0x0                   	// #0
  436974:	ldr	x0, [x0, #8]
  436978:	brk	#0x3e8
  43697c:	nop
  436980:	ldr	x0, [x0, #8]
  436984:	ldr	x0, [x0]
  436988:	ret
  43698c:	nop
  436990:	mov	x10, x0
  436994:	mov	w9, w1
  436998:	tbz	w1, #31, 4369b0 <nftw@plt+0x33e30>
  43699c:	and	w9, w1, #0x7fffffff
  4369a0:	mov	w1, #0x18                  	// #24
  4369a4:	ldr	x0, [x0, #104]
  4369a8:	umull	x9, w9, w1
  4369ac:	ldr	w9, [x0, x9]
  4369b0:	cmp	w9, #0x1
  4369b4:	b.ls	436ba0 <nftw@plt+0x34020>  // b.plast
  4369b8:	mov	w13, #0x6fffffff            	// #1879048191
  4369bc:	mov	w14, #0x18                  	// #24
  4369c0:	mov	w12, #0x90000000            	// #-1879048192
  4369c4:	mov	w11, #0xfffffff             	// #268435455
  4369c8:	tbnz	w9, #31, 436b70 <nftw@plt+0x33ff0>
  4369cc:	cmp	w9, w13
  4369d0:	b.hi	436b08 <nftw@plt+0x33f88>  // b.pmore
  4369d4:	mov	w1, w9
  4369d8:	stp	x29, x30, [sp, #-16]!
  4369dc:	mov	x29, sp
  4369e0:	mov	x0, x10
  4369e4:	bl	4350d0 <nftw@plt+0x32550>
  4369e8:	cbz	x0, 436af4 <nftw@plt+0x33f74>
  4369ec:	ldr	w2, [x0]
  4369f0:	cmp	w2, w13
  4369f4:	b.ls	436ae0 <nftw@plt+0x33f60>  // b.plast
  4369f8:	tbz	w9, #31, 436a0c <nftw@plt+0x33e8c>
  4369fc:	and	w9, w9, #0x7fffffff
  436a00:	ldr	x1, [x10, #104]
  436a04:	umull	x9, w9, w14
  436a08:	ldr	w9, [x1, x9]
  436a0c:	sub	w9, w9, w2
  436a10:	ldr	x1, [x0, #16]
  436a14:	lsl	w9, w9, #1
  436a18:	ldr	w9, [x1, x9, lsl #2]
  436a1c:	cmp	w9, #0x1
  436a20:	b.ls	436aa8 <nftw@plt+0x33f28>  // b.plast
  436a24:	tbnz	w9, #31, 436ab0 <nftw@plt+0x33f30>
  436a28:	cmp	w9, w13
  436a2c:	b.ls	436aec <nftw@plt+0x33f6c>  // b.plast
  436a30:	cbz	x10, 436af4 <nftw@plt+0x33f74>
  436a34:	mov	w5, w9
  436a38:	ldp	w3, w4, [x10, #36]
  436a3c:	ldr	x6, [x10, #24]
  436a40:	sbfiz	x1, x4, #5, #32
  436a44:	add	x0, x6, x1
  436a48:	ldr	w2, [x6, x1]
  436a4c:	cmp	w2, w5
  436a50:	b.hi	436a8c <nftw@plt+0x33f0c>  // b.pmore
  436a54:	cbz	w4, 4369f0 <nftw@plt+0x33e70>
  436a58:	ldur	w1, [x0, #-32]
  436a5c:	cmp	w1, w5
  436a60:	b.hi	4369f0 <nftw@plt+0x33e70>  // b.pmore
  436a64:	sub	w3, w4, #0x1
  436a68:	mov	w4, #0x0                   	// #0
  436a6c:	b	436a8c <nftw@plt+0x33f0c>
  436a70:	lsr	w0, w1, #1
  436a74:	lsr	w1, w1, #1
  436a78:	lsl	x0, x0, #5
  436a7c:	ldr	w0, [x6, x0]
  436a80:	cmp	w0, w5
  436a84:	b.hi	436b00 <nftw@plt+0x33f80>  // b.pmore
  436a88:	mov	w3, w1
  436a8c:	add	w1, w3, w4
  436a90:	cmp	w3, w4
  436a94:	b.hi	436a70 <nftw@plt+0x33ef0>  // b.pmore
  436a98:	sbfiz	x1, x3, #5, #32
  436a9c:	str	w3, [x10, #40]
  436aa0:	add	x0, x6, x1
  436aa4:	b	4369e8 <nftw@plt+0x33e68>
  436aa8:	ldr	w9, [x0, #24]
  436aac:	tbz	w9, #31, 436a28 <nftw@plt+0x33ea8>
  436ab0:	and	w0, w9, #0x7fffffff
  436ab4:	ldr	x2, [x10, #104]
  436ab8:	umull	x0, w0, w14
  436abc:	ldr	w1, [x2, x0]
  436ac0:	tbz	w1, #31, 436bb8 <nftw@plt+0x34038>
  436ac4:	and	w0, w1, #0x7fffffff
  436ac8:	umull	x0, w0, w14
  436acc:	ldr	w5, [x2, x0]
  436ad0:	add	w0, w5, w12
  436ad4:	cmp	w0, w11
  436ad8:	b.ls	436a38 <nftw@plt+0x33eb8>  // b.plast
  436adc:	b	4369e0 <nftw@plt+0x33e60>
  436ae0:	ldrb	w0, [x0, #5]
  436ae4:	ldp	x29, x30, [sp], #16
  436ae8:	ret
  436aec:	mov	w1, w9
  436af0:	b	4369e0 <nftw@plt+0x33e60>
  436af4:	mov	w0, #0x0                   	// #0
  436af8:	ldp	x29, x30, [sp], #16
  436afc:	ret
  436b00:	add	w4, w1, #0x1
  436b04:	b	436a8c <nftw@plt+0x33f0c>
  436b08:	cbz	x10, 436ba0 <nftw@plt+0x34020>
  436b0c:	mov	w5, w9
  436b10:	ldp	w3, w4, [x10, #36]
  436b14:	ldr	x6, [x10, #24]
  436b18:	sbfiz	x1, x4, #5, #32
  436b1c:	add	x0, x6, x1
  436b20:	ldr	w2, [x6, x1]
  436b24:	cmp	w2, w5
  436b28:	b.hi	436b44 <nftw@plt+0x33fc4>  // b.pmore
  436b2c:	cbz	w4, 436bdc <nftw@plt+0x3405c>
  436b30:	ldur	w1, [x0, #-32]
  436b34:	cmp	w1, w5
  436b38:	b.hi	436bdc <nftw@plt+0x3405c>  // b.pmore
  436b3c:	sub	w3, w4, #0x1
  436b40:	mov	w4, #0x0                   	// #0
  436b44:	add	w1, w3, w4
  436b48:	cmp	w3, w4
  436b4c:	b.ls	436bc8 <nftw@plt+0x34048>  // b.plast
  436b50:	lsr	w0, w1, #1
  436b54:	lsr	w1, w1, #1
  436b58:	lsl	x0, x0, #5
  436b5c:	ldr	w0, [x6, x0]
  436b60:	cmp	w0, w5
  436b64:	b.hi	436c20 <nftw@plt+0x340a0>  // b.pmore
  436b68:	mov	w3, w1
  436b6c:	b	436b44 <nftw@plt+0x33fc4>
  436b70:	and	w0, w9, #0x7fffffff
  436b74:	ldr	x2, [x10, #104]
  436b78:	umull	x0, w0, w14
  436b7c:	ldr	w1, [x2, x0]
  436b80:	tbz	w1, #31, 436ba8 <nftw@plt+0x34028>
  436b84:	and	w0, w1, #0x7fffffff
  436b88:	umull	x0, w0, w14
  436b8c:	ldr	w5, [x2, x0]
  436b90:	add	w0, w5, w12
  436b94:	cmp	w0, w11
  436b98:	b.ls	436b10 <nftw@plt+0x33f90>  // b.plast
  436b9c:	b	4369d8 <nftw@plt+0x33e58>
  436ba0:	mov	w0, #0x0                   	// #0
  436ba4:	ret
  436ba8:	cmp	w1, w13
  436bac:	b.ls	4369d8 <nftw@plt+0x33e58>  // b.plast
  436bb0:	mov	w5, w1
  436bb4:	b	436b10 <nftw@plt+0x33f90>
  436bb8:	cmp	w1, w13
  436bbc:	b.ls	4369e0 <nftw@plt+0x33e60>  // b.plast
  436bc0:	mov	w5, w1
  436bc4:	b	436a38 <nftw@plt+0x33eb8>
  436bc8:	str	w3, [x10, #40]
  436bcc:	sbfiz	x1, x3, #5, #32
  436bd0:	add	x0, x6, x1
  436bd4:	cbz	x0, 436ba0 <nftw@plt+0x34020>
  436bd8:	ldr	w2, [x0]
  436bdc:	cmp	w2, w13
  436be0:	b.ls	436c18 <nftw@plt+0x34098>  // b.plast
  436be4:	tbz	w9, #31, 436bf8 <nftw@plt+0x34078>
  436be8:	and	w9, w9, #0x7fffffff
  436bec:	ldr	x1, [x10, #104]
  436bf0:	umull	x9, w9, w14
  436bf4:	ldr	w9, [x1, x9]
  436bf8:	sub	w9, w9, w2
  436bfc:	ldr	x1, [x0, #16]
  436c00:	lsl	w9, w9, #1
  436c04:	ldr	w9, [x1, x9, lsl #2]
  436c08:	cmp	w9, #0x1
  436c0c:	b.hi	4369c8 <nftw@plt+0x33e48>  // b.pmore
  436c10:	ldr	w9, [x0, #24]
  436c14:	b	4369c8 <nftw@plt+0x33e48>
  436c18:	ldrb	w0, [x0, #5]
  436c1c:	ret
  436c20:	add	w4, w1, #0x1
  436c24:	b	436b44 <nftw@plt+0x33fc4>
  436c28:	tbz	w1, #31, 436c40 <nftw@plt+0x340c0>
  436c2c:	and	w1, w1, #0x7fffffff
  436c30:	mov	w2, #0x18                  	// #24
  436c34:	ldr	x0, [x0, #104]
  436c38:	umull	x1, w1, w2
  436c3c:	ldr	w1, [x0, x1]
  436c40:	mov	w0, #0x90000000            	// #-1879048192
  436c44:	add	w1, w1, w0
  436c48:	mov	w0, #0xfffffff             	// #268435455
  436c4c:	cmp	w1, w0
  436c50:	cset	w0, ls  // ls = plast
  436c54:	ret
  436c58:	mov	w11, w1
  436c5c:	mov	x12, x0
  436c60:	mov	w13, w2
  436c64:	mov	w10, w1
  436c68:	tbz	w1, #31, 436c80 <nftw@plt+0x34100>
  436c6c:	and	w0, w1, #0x7fffffff
  436c70:	mov	w1, #0x18                  	// #24
  436c74:	ldr	x3, [x12, #104]
  436c78:	umull	x0, w0, w1
  436c7c:	ldr	w10, [x3, x0]
  436c80:	mov	w9, w13
  436c84:	tbz	w13, #31, 436c9c <nftw@plt+0x3411c>
  436c88:	and	w0, w13, #0x7fffffff
  436c8c:	mov	w1, #0x18                  	// #24
  436c90:	ldr	x3, [x12, #104]
  436c94:	umull	x0, w0, w1
  436c98:	ldr	w9, [x3, x0]
  436c9c:	cmp	w10, w9
  436ca0:	b.eq	436dd0 <nftw@plt+0x34250>  // b.none
  436ca4:	stp	x29, x30, [sp, #-16]!
  436ca8:	mov	x29, sp
  436cac:	tbnz	w10, #31, 436cf8 <nftw@plt+0x34178>
  436cb0:	mov	w0, #0x6fffffff            	// #1879048191
  436cb4:	mov	w14, #0x0                   	// #0
  436cb8:	cmp	w10, w0
  436cbc:	b.hi	436d28 <nftw@plt+0x341a8>  // b.pmore
  436cc0:	tbnz	w9, #31, 436da0 <nftw@plt+0x34220>
  436cc4:	mov	w0, #0x6fffffff            	// #1879048191
  436cc8:	cmp	w9, w0
  436ccc:	b.ls	436d50 <nftw@plt+0x341d0>  // b.plast
  436cd0:	mov	w15, #0x6fffffff            	// #1879048191
  436cd4:	mov	w1, w9
  436cd8:	mov	x0, x12
  436cdc:	bl	435de8 <nftw@plt+0x33268>
  436ce0:	cbz	x0, 436d64 <nftw@plt+0x341e4>
  436ce4:	ldr	w1, [x0]
  436ce8:	cmp	w1, w15
  436cec:	b.ls	436d64 <nftw@plt+0x341e4>  // b.plast
  436cf0:	ldr	w9, [x0, #24]
  436cf4:	b	436cd4 <nftw@plt+0x34154>
  436cf8:	and	w1, w10, #0x7fffffff
  436cfc:	mov	w2, #0x18                  	// #24
  436d00:	ldr	x3, [x12, #104]
  436d04:	mov	w0, #0x90000000            	// #-1879048192
  436d08:	umull	x1, w1, w2
  436d0c:	mov	w14, #0x0                   	// #0
  436d10:	mov	w2, #0xfffffff             	// #268435455
  436d14:	ldr	w1, [x3, x1]
  436d18:	add	w0, w1, w0
  436d1c:	cmp	w0, w2
  436d20:	b.hi	436cc0 <nftw@plt+0x34140>  // b.pmore
  436d24:	mov	w10, w1
  436d28:	mov	w14, #0x6fffffff            	// #1879048191
  436d2c:	mov	w1, w10
  436d30:	mov	x0, x12
  436d34:	bl	435de8 <nftw@plt+0x33268>
  436d38:	cbz	x0, 436e70 <nftw@plt+0x342f0>
  436d3c:	ldr	w1, [x0]
  436d40:	cmp	w1, w14
  436d44:	b.ls	436e70 <nftw@plt+0x342f0>  // b.plast
  436d48:	ldr	w10, [x0, #24]
  436d4c:	b	436d2c <nftw@plt+0x341ac>
  436d50:	tbnz	w10, #31, 436d70 <nftw@plt+0x341f0>
  436d54:	nop
  436d58:	sub	w0, w9, w10
  436d5c:	ldp	x29, x30, [sp], #16
  436d60:	ret
  436d64:	cmp	w9, w10
  436d68:	b.eq	436de0 <nftw@plt+0x34260>  // b.none
  436d6c:	tbz	w10, #31, 436d84 <nftw@plt+0x34204>
  436d70:	ldr	x3, [x12, #104]
  436d74:	and	w0, w10, #0x7fffffff
  436d78:	mov	w10, #0x18                  	// #24
  436d7c:	umull	x0, w0, w10
  436d80:	ldr	w10, [x3, x0]
  436d84:	tbz	w9, #31, 436d58 <nftw@plt+0x341d8>
  436d88:	ldr	x3, [x12, #104]
  436d8c:	and	w0, w9, #0x7fffffff
  436d90:	mov	w1, #0x18                  	// #24
  436d94:	umull	x0, w0, w1
  436d98:	ldr	w9, [x3, x0]
  436d9c:	b	436d58 <nftw@plt+0x341d8>
  436da0:	and	w0, w9, #0x7fffffff
  436da4:	mov	w4, #0x18                  	// #24
  436da8:	ldr	x3, [x12, #104]
  436dac:	mov	w1, #0x90000000            	// #-1879048192
  436db0:	umull	x4, w0, w4
  436db4:	mov	w5, #0xfffffff             	// #268435455
  436db8:	ldr	w2, [x3, x4]
  436dbc:	add	w1, w2, w1
  436dc0:	cmp	w1, w5
  436dc4:	b.hi	436dd8 <nftw@plt+0x34258>  // b.pmore
  436dc8:	mov	w9, w2
  436dcc:	b	436cd0 <nftw@plt+0x34150>
  436dd0:	mov	w0, #0x0                   	// #0
  436dd4:	ret
  436dd8:	tbz	w10, #31, 436d90 <nftw@plt+0x34210>
  436ddc:	b	436d74 <nftw@plt+0x341f4>
  436de0:	cbz	w14, 436d6c <nftw@plt+0x341ec>
  436de4:	mov	w1, w11
  436de8:	mov	x0, x12
  436dec:	bl	435de8 <nftw@plt+0x33268>
  436df0:	mov	x9, x0
  436df4:	mov	w1, w13
  436df8:	mov	x0, x12
  436dfc:	bl	435de8 <nftw@plt+0x33268>
  436e00:	mov	x10, x0
  436e04:	mov	w14, #0x6fffffff            	// #1879048191
  436e08:	cbz	x9, 436e58 <nftw@plt+0x342d8>
  436e0c:	ldr	w0, [x9]
  436e10:	cmp	w0, w14
  436e14:	b.ls	436e78 <nftw@plt+0x342f8>  // b.plast
  436e18:	cbz	x10, 436e58 <nftw@plt+0x342d8>
  436e1c:	cmp	x10, x9
  436e20:	ldr	w2, [x10]
  436e24:	cset	w1, ne  // ne = any
  436e28:	cmp	w1, #0x0
  436e2c:	ccmp	w2, w14, #0x0, ne  // ne = any
  436e30:	b.ls	436e80 <nftw@plt+0x34300>  // b.plast
  436e34:	cmp	w0, w2
  436e38:	b.cs	436e8c <nftw@plt+0x3430c>  // b.hs, b.nlast
  436e3c:	ldr	w11, [x9, #24]
  436e40:	mov	x0, x12
  436e44:	mov	w1, w11
  436e48:	bl	435de8 <nftw@plt+0x33268>
  436e4c:	mov	x9, x0
  436e50:	cbnz	x0, 436e0c <nftw@plt+0x3428c>
  436e54:	nop
  436e58:	adrp	x2, 47d000 <_obstack_memory_used@@Base+0x1bbb8>
  436e5c:	adrp	x0, 47d000 <_obstack_memory_used@@Base+0x1bbb8>
  436e60:	add	x2, x2, #0xa40
  436e64:	add	x0, x0, #0xa60
  436e68:	mov	w1, #0x549                 	// #1353
  436e6c:	bl	402bf0 <nftw@plt+0x70>
  436e70:	mov	w14, #0x1                   	// #1
  436e74:	b	436cc0 <nftw@plt+0x34140>
  436e78:	cmp	x10, x9
  436e7c:	cset	w1, ne  // ne = any
  436e80:	sub	w0, w13, w11
  436e84:	cbz	w1, 436d5c <nftw@plt+0x341dc>
  436e88:	b	436e58 <nftw@plt+0x342d8>
  436e8c:	ldr	w13, [x10, #24]
  436e90:	mov	x0, x12
  436e94:	mov	w1, w13
  436e98:	bl	435de8 <nftw@plt+0x33268>
  436e9c:	mov	x10, x0
  436ea0:	b	436e0c <nftw@plt+0x3428c>
  436ea4:	nop
  436ea8:	mov	w9, w1
  436eac:	mov	x12, x0
  436eb0:	mov	x11, x3
  436eb4:	mov	w10, w1
  436eb8:	tbz	w1, #31, 436ed0 <nftw@plt+0x34350>
  436ebc:	and	w0, w1, #0x7fffffff
  436ec0:	mov	w3, #0x18                  	// #24
  436ec4:	ldr	x1, [x12, #104]
  436ec8:	umull	x0, w0, w3
  436ecc:	ldr	w10, [x1, x0]
  436ed0:	cmp	w10, #0x1
  436ed4:	b.ls	437018 <nftw@plt+0x34498>  // b.plast
  436ed8:	stp	x29, x30, [sp, #-16]!
  436edc:	cmp	w2, #0x1
  436ee0:	mov	x29, sp
  436ee4:	b.eq	436fc8 <nftw@plt+0x34448>  // b.none
  436ee8:	cmp	w2, #0x2
  436eec:	b.eq	436f5c <nftw@plt+0x343dc>  // b.none
  436ef0:	cbz	w2, 436f0c <nftw@plt+0x3438c>
  436ef4:	adrp	x2, 47d000 <_obstack_memory_used@@Base+0x1bbb8>
  436ef8:	adrp	x0, 47d000 <_obstack_memory_used@@Base+0x1bbb8>
  436efc:	add	x2, x2, #0xa78
  436f00:	add	x0, x0, #0xa60
  436f04:	mov	w1, #0x621                 	// #1569
  436f08:	bl	402bf0 <nftw@plt+0x70>
  436f0c:	mov	w9, #0x6fffffff            	// #1879048191
  436f10:	mov	w1, w10
  436f14:	mov	x0, x12
  436f18:	bl	435de8 <nftw@plt+0x33268>
  436f1c:	mov	x1, x0
  436f20:	cbz	x0, 436f48 <nftw@plt+0x343c8>
  436f24:	ldr	w0, [x0]
  436f28:	cmp	w0, w9
  436f2c:	b.ls	436f48 <nftw@plt+0x343c8>  // b.plast
  436f30:	ldr	w10, [x1, #24]
  436f34:	mov	x0, x12
  436f38:	mov	w1, w10
  436f3c:	bl	435de8 <nftw@plt+0x33268>
  436f40:	mov	x1, x0
  436f44:	cbnz	x0, 436f24 <nftw@plt+0x343a4>
  436f48:	cbz	x11, 436fbc <nftw@plt+0x3443c>
  436f4c:	str	x1, [x11]
  436f50:	mov	w0, w10
  436f54:	ldp	x29, x30, [sp], #16
  436f58:	ret
  436f5c:	mov	w14, #0x18                  	// #24
  436f60:	mov	w13, #0x6fffffff            	// #1879048191
  436f64:	b	436f88 <nftw@plt+0x34408>
  436f68:	ldr	w1, [x0]
  436f6c:	cmp	w1, w13
  436f70:	b.ls	436fb0 <nftw@plt+0x34430>  // b.plast
  436f74:	sub	w10, w10, w1
  436f78:	ldr	x0, [x0, #16]
  436f7c:	lsl	w10, w10, #1
  436f80:	add	w10, w10, #0x1
  436f84:	ldr	w9, [x0, x10, lsl #2]
  436f88:	mov	w10, w9
  436f8c:	tbz	w9, #31, 436fa0 <nftw@plt+0x34420>
  436f90:	and	w1, w9, #0x7fffffff
  436f94:	ldr	x0, [x12, #104]
  436f98:	umull	x1, w1, w14
  436f9c:	ldr	w10, [x0, x1]
  436fa0:	mov	w1, w10
  436fa4:	mov	x0, x12
  436fa8:	bl	435de8 <nftw@plt+0x33268>
  436fac:	cbnz	x0, 436f68 <nftw@plt+0x343e8>
  436fb0:	mov	w10, w9
  436fb4:	cbz	x11, 436fbc <nftw@plt+0x3443c>
  436fb8:	str	x0, [x11]
  436fbc:	mov	w0, w10
  436fc0:	ldp	x29, x30, [sp], #16
  436fc4:	ret
  436fc8:	mov	w10, #0x6fffffff            	// #1879048191
  436fcc:	mov	w13, #0x18                  	// #24
  436fd0:	b	437004 <nftw@plt+0x34484>
  436fd4:	ldr	w2, [x0]
  436fd8:	cmp	w2, w10
  436fdc:	b.ls	436fb0 <nftw@plt+0x34430>  // b.plast
  436fe0:	tbz	w9, #31, 436ff4 <nftw@plt+0x34474>
  436fe4:	and	w9, w9, #0x7fffffff
  436fe8:	ldr	x1, [x12, #104]
  436fec:	umull	x9, w9, w13
  436ff0:	ldr	w9, [x1, x9]
  436ff4:	sub	w9, w9, w2
  436ff8:	ldr	x0, [x0, #16]
  436ffc:	lsl	w9, w9, #1
  437000:	ldr	w9, [x0, x9, lsl #2]
  437004:	mov	w1, w9
  437008:	mov	x0, x12
  43700c:	bl	435de8 <nftw@plt+0x33268>
  437010:	cbnz	x0, 436fd4 <nftw@plt+0x34454>
  437014:	b	436fb0 <nftw@plt+0x34430>
  437018:	mov	w10, w9
  43701c:	cbz	x11, 437024 <nftw@plt+0x344a4>
  437020:	str	xzr, [x11]
  437024:	mov	w0, w10
  437028:	ret
  43702c:	nop
  437030:	mov	x10, x0
  437034:	mov	w9, w1
  437038:	tbnz	w1, #31, 4370f4 <nftw@plt+0x34574>
  43703c:	mov	w0, #0x6fffffff            	// #1879048191
  437040:	cmp	w9, w0
  437044:	b.ls	4370b4 <nftw@plt+0x34534>  // b.plast
  437048:	stp	x29, x30, [sp, #-16]!
  43704c:	mov	w11, #0x18                  	// #24
  437050:	mov	w12, #0x6fffffff            	// #1879048191
  437054:	mov	w14, #0x90000000            	// #-1879048192
  437058:	mov	w13, #0xfffffff             	// #268435455
  43705c:	mov	x29, sp
  437060:	mov	w1, w9
  437064:	mov	x0, x10
  437068:	bl	435de8 <nftw@plt+0x33268>
  43706c:	and	w1, w9, #0x7fffffff
  437070:	mov	x3, x0
  437074:	mov	w2, w9
  437078:	tbz	w9, #31, 437088 <nftw@plt+0x34508>
  43707c:	umull	x1, w1, w11
  437080:	ldr	x0, [x10, #104]
  437084:	ldr	w2, [x0, x1]
  437088:	ldr	w1, [x3]
  43708c:	ldr	x0, [x3, #16]
  437090:	sub	w2, w2, w1
  437094:	lsl	w2, w2, #1
  437098:	ldr	w2, [x0, x2, lsl #2]
  43709c:	and	w3, w2, #0x7fffffff
  4370a0:	tbnz	w2, #31, 4370bc <nftw@plt+0x3453c>
  4370a4:	cmp	w2, w12
  4370a8:	b.ls	4370d4 <nftw@plt+0x34554>  // b.plast
  4370ac:	mov	w9, w2
  4370b0:	b	437060 <nftw@plt+0x344e0>
  4370b4:	mov	w0, #0x0                   	// #0
  4370b8:	ret
  4370bc:	umull	x3, w3, w11
  4370c0:	ldr	x4, [x10, #104]
  4370c4:	ldr	w3, [x4, x3]
  4370c8:	add	w3, w3, w14
  4370cc:	cmp	w3, w13
  4370d0:	b.ls	4370ac <nftw@plt+0x3452c>  // b.plast
  4370d4:	sub	w1, w9, w1
  4370d8:	ldp	x29, x30, [sp], #16
  4370dc:	lsl	w1, w1, #1
  4370e0:	add	w1, w1, #0x1
  4370e4:	ldr	w0, [x0, x1, lsl #2]
  4370e8:	cmp	w0, w2
  4370ec:	cset	w0, eq  // eq = none
  4370f0:	ret
  4370f4:	and	w9, w1, #0x7fffffff
  4370f8:	mov	w4, #0x18                  	// #24
  4370fc:	ldr	x3, [x0, #104]
  437100:	umull	x9, w9, w4
  437104:	ldr	w9, [x3, x9]
  437108:	tbz	w9, #31, 43703c <nftw@plt+0x344bc>
  43710c:	and	w2, w9, #0x7fffffff
  437110:	mov	w6, #0x90000000            	// #-1879048192
  437114:	mov	w5, #0xfffffff             	// #268435455
  437118:	mov	w0, #0x0                   	// #0
  43711c:	umull	x2, w2, w4
  437120:	ldr	w1, [x3, x2]
  437124:	add	w1, w1, w6
  437128:	cmp	w1, w5
  43712c:	b.ls	437048 <nftw@plt+0x344c8>  // b.plast
  437130:	ret
  437134:	nop
  437138:	stp	x29, x30, [sp, #-16]!
  43713c:	mov	x10, x2
  437140:	mov	x9, x0
  437144:	mov	x29, sp
  437148:	ldr	x12, [x2]
  43714c:	tbnz	w1, #31, 4371bc <nftw@plt+0x3463c>
  437150:	ldr	w3, [x12]
  437154:	mov	x0, x9
  437158:	ldr	x2, [x12, #16]
  43715c:	sub	w1, w1, w3
  437160:	lsl	w1, w1, #1
  437164:	ldr	w11, [x2, x1, lsl #2]
  437168:	mov	w1, w11
  43716c:	bl	435de8 <nftw@plt+0x33268>
  437170:	mov	x3, x0
  437174:	cbz	x0, 437198 <nftw@plt+0x34618>
  437178:	ldr	w1, [x3]
  43717c:	mov	w0, #0x6fffffff            	// #1879048191
  437180:	cmp	w1, w0
  437184:	b.ls	437198 <nftw@plt+0x34618>  // b.plast
  437188:	str	x3, [x10]
  43718c:	mov	w0, w11
  437190:	ldp	x29, x30, [sp], #16
  437194:	ret
  437198:	ldr	w11, [x12, #24]
  43719c:	mov	x0, x9
  4371a0:	mov	w1, w11
  4371a4:	bl	435de8 <nftw@plt+0x33268>
  4371a8:	mov	x3, x0
  4371ac:	str	x3, [x10]
  4371b0:	mov	w0, w11
  4371b4:	ldp	x29, x30, [sp], #16
  4371b8:	ret
  4371bc:	and	w1, w1, #0x7fffffff
  4371c0:	mov	w2, #0x18                  	// #24
  4371c4:	ldr	x0, [x0, #104]
  4371c8:	umull	x1, w1, w2
  4371cc:	ldr	w1, [x0, x1]
  4371d0:	tbz	w1, #31, 437150 <nftw@plt+0x345d0>
  4371d4:	and	w1, w1, #0x7fffffff
  4371d8:	umull	x1, w1, w2
  4371dc:	ldr	w1, [x0, x1]
  4371e0:	b	437150 <nftw@plt+0x345d0>
  4371e4:	nop
  4371e8:	stp	x29, x30, [sp, #-32]!
  4371ec:	mov	x14, x0
  4371f0:	mov	w10, w1
  4371f4:	mov	x29, sp
  4371f8:	str	xzr, [sp, #24]
  4371fc:	mov	x13, x2
  437200:	tbz	w1, #31, 437218 <nftw@plt+0x34698>
  437204:	and	w10, w1, #0x7fffffff
  437208:	mov	w1, #0x18                  	// #24
  43720c:	ldr	x0, [x0, #104]
  437210:	umull	x10, w10, w1
  437214:	ldr	w10, [x0, x10]
  437218:	mov	w1, w10
  43721c:	mov	x0, x14
  437220:	bl	435de8 <nftw@plt+0x33268>
  437224:	str	x0, [sp, #24]
  437228:	mov	x1, x0
  43722c:	cbz	x0, 437370 <nftw@plt+0x347f0>
  437230:	ldr	w2, [x1]
  437234:	mov	w0, #0x6fffffff            	// #1879048191
  437238:	cmp	w2, w0
  43723c:	b.ls	437370 <nftw@plt+0x347f0>  // b.plast
  437240:	tbnz	w10, #31, 437384 <nftw@plt+0x34804>
  437244:	mov	w9, w10
  437248:	cmp	w10, #0x1
  43724c:	b.ls	43737c <nftw@plt+0x347fc>  // b.plast
  437250:	mov	w11, #0x6fffffff            	// #1879048191
  437254:	mov	w12, #0x18                  	// #24
  437258:	b	43728c <nftw@plt+0x3470c>
  43725c:	ldr	w1, [x0]
  437260:	cmp	w1, w11
  437264:	b.ls	43729c <nftw@plt+0x3471c>  // b.plast
  437268:	tbz	w9, #31, 43727c <nftw@plt+0x346fc>
  43726c:	and	w3, w9, #0x7fffffff
  437270:	ldr	x2, [x14, #104]
  437274:	umull	x3, w3, w12
  437278:	ldr	w9, [x2, x3]
  43727c:	sub	w9, w9, w1
  437280:	ldr	x0, [x0, #16]
  437284:	lsl	w9, w9, #1
  437288:	ldr	w9, [x0, x9, lsl #2]
  43728c:	mov	w1, w9
  437290:	mov	x0, x14
  437294:	bl	435de8 <nftw@plt+0x33268>
  437298:	cbnz	x0, 43725c <nftw@plt+0x346dc>
  43729c:	cmp	w9, #0x1
  4372a0:	b.ls	4372ac <nftw@plt+0x3472c>  // b.plast
  4372a4:	ldrb	w1, [x0, #5]
  4372a8:	cbz	w1, 437370 <nftw@plt+0x347f0>
  4372ac:	ldr	x1, [sp, #24]
  4372b0:	cbz	x1, 437368 <nftw@plt+0x347e8>
  4372b4:	ldr	w2, [x1]
  4372b8:	mov	w15, #0x6fffffff            	// #1879048191
  4372bc:	mov	w18, #0x18                  	// #24
  4372c0:	cmp	w2, w15
  4372c4:	b.ls	437368 <nftw@plt+0x347e8>  // b.plast
  4372c8:	cmp	w9, #0x1
  4372cc:	b.ls	4372d8 <nftw@plt+0x34758>  // b.plast
  4372d0:	ldrb	w0, [x0, #5]
  4372d4:	cbz	w0, 437368 <nftw@plt+0x347e8>
  4372d8:	mov	w1, w10
  4372dc:	add	x2, sp, #0x18
  4372e0:	mov	x0, x14
  4372e4:	bl	437138 <nftw@plt+0x345b8>
  4372e8:	mov	w10, w0
  4372ec:	tbz	w0, #31, 437300 <nftw@plt+0x34780>
  4372f0:	and	w0, w0, #0x7fffffff
  4372f4:	ldr	x1, [x14, #104]
  4372f8:	umull	x0, w0, w18
  4372fc:	ldr	w0, [x1, x0]
  437300:	mov	w9, w10
  437304:	cmp	w0, #0x1
  437308:	b.hi	437340 <nftw@plt+0x347c0>  // b.pmore
  43730c:	b	4373a8 <nftw@plt+0x34828>
  437310:	ldr	w1, [x0]
  437314:	cmp	w1, w15
  437318:	b.ls	437350 <nftw@plt+0x347d0>  // b.plast
  43731c:	tbz	w9, #31, 437330 <nftw@plt+0x347b0>
  437320:	and	w3, w9, #0x7fffffff
  437324:	ldr	x2, [x14, #104]
  437328:	umull	x3, w3, w18
  43732c:	ldr	w9, [x2, x3]
  437330:	sub	w9, w9, w1
  437334:	ldr	x0, [x0, #16]
  437338:	lsl	w9, w9, #1
  43733c:	ldr	w9, [x0, x9, lsl #2]
  437340:	mov	w1, w9
  437344:	mov	x0, x14
  437348:	bl	435de8 <nftw@plt+0x33268>
  43734c:	cbnz	x0, 437310 <nftw@plt+0x34790>
  437350:	ldr	x1, [sp, #24]
  437354:	cbz	x1, 437368 <nftw@plt+0x347e8>
  437358:	ldr	w2, [x1]
  43735c:	cmp	w2, w15
  437360:	b.hi	4372c8 <nftw@plt+0x34748>  // b.pmore
  437364:	nop
  437368:	cbz	x13, 437370 <nftw@plt+0x347f0>
  43736c:	str	x1, [x13]
  437370:	mov	w0, w10
  437374:	ldp	x29, x30, [sp], #32
  437378:	ret
  43737c:	mov	x0, #0x0                   	// #0
  437380:	b	4372b8 <nftw@plt+0x34738>
  437384:	and	w0, w10, #0x7fffffff
  437388:	mov	w2, #0x18                  	// #24
  43738c:	ldr	x1, [x14, #104]
  437390:	umull	x0, w0, w2
  437394:	ldr	w0, [x1, x0]
  437398:	cmp	w0, #0x1
  43739c:	b.ls	4373b0 <nftw@plt+0x34830>  // b.plast
  4373a0:	mov	w9, w10
  4373a4:	b	437250 <nftw@plt+0x346d0>
  4373a8:	mov	x0, #0x0                   	// #0
  4373ac:	b	437350 <nftw@plt+0x347d0>
  4373b0:	mov	x0, #0x0                   	// #0
  4373b4:	ldrb	w0, [x0, #5]
  4373b8:	brk	#0x3e8
  4373bc:	nop
  4373c0:	stp	xzr, xzr, [x8]
  4373c4:	stp	xzr, xzr, [x8, #16]
  4373c8:	tbz	w2, #31, 4373ec <nftw@plt+0x3486c>
  4373cc:	and	w2, w2, #0x7fffffff
  4373d0:	mov	w4, #0x18                  	// #24
  4373d4:	ldr	x3, [x0, #104]
  4373d8:	umull	x2, w2, w4
  4373dc:	add	x4, x3, x2
  4373e0:	ldr	w2, [x3, x2]
  4373e4:	ldr	x3, [x4, #16]
  4373e8:	str	x3, [x8, #16]
  4373ec:	cmp	w2, #0x1
  4373f0:	b.ls	4374a4 <nftw@plt+0x34924>  // b.plast
  4373f4:	stp	x29, x30, [sp, #-16]!
  4373f8:	mov	x29, sp
  4373fc:	cbz	x1, 4374a8 <nftw@plt+0x34928>
  437400:	tbnz	w2, #31, 437428 <nftw@plt+0x348a8>
  437404:	mov	w0, #0x6fffffff            	// #1879048191
  437408:	cmp	w2, w0
  43740c:	b.ls	437450 <nftw@plt+0x348d0>  // b.plast
  437410:	adrp	x2, 47d000 <_obstack_memory_used@@Base+0x1bbb8>
  437414:	adrp	x0, 47d000 <_obstack_memory_used@@Base+0x1bbb8>
  437418:	add	x2, x2, #0xa98
  43741c:	add	x0, x0, #0xa60
  437420:	mov	w1, #0x6c5                 	// #1733
  437424:	bl	402bf0 <nftw@plt+0x70>
  437428:	and	w3, w2, #0x7fffffff
  43742c:	mov	w4, #0x18                  	// #24
  437430:	ldr	x0, [x0, #104]
  437434:	mov	w5, #0x90000000            	// #-1879048192
  437438:	umull	x3, w3, w4
  43743c:	mov	w4, #0xfffffff             	// #268435455
  437440:	ldr	w0, [x0, x3]
  437444:	add	w0, w0, w5
  437448:	cmp	w0, w4
  43744c:	b.ls	437410 <nftw@plt+0x34890>  // b.plast
  437450:	ldrb	w3, [x1, #6]
  437454:	mov	w0, #0x1                   	// #1
  437458:	ldr	w4, [x1]
  43745c:	ldrb	w5, [x1, #7]
  437460:	ldrb	w6, [x1, #5]
  437464:	sub	w2, w2, w4
  437468:	lsl	w0, w0, w3
  43746c:	sub	w0, w0, #0x1
  437470:	ldr	w4, [x1, #16]
  437474:	and	w0, w0, w2
  437478:	cmp	w6, #0x0
  43747c:	lsr	w2, w2, w3
  437480:	ldr	x3, [x1, #8]
  437484:	add	w2, w2, w4
  437488:	cset	w1, ne  // ne = any
  43748c:	lsr	w0, w0, w5
  437490:	str	x3, [x8]
  437494:	stp	w2, w0, [x8, #8]
  437498:	strb	w1, [x8, #24]
  43749c:	ldp	x29, x30, [sp], #16
  4374a0:	ret
  4374a4:	ret
  4374a8:	adrp	x2, 47d000 <_obstack_memory_used@@Base+0x1bbb8>
  4374ac:	adrp	x0, 47d000 <_obstack_memory_used@@Base+0x1bbb8>
  4374b0:	add	x2, x2, #0xa98
  4374b4:	add	x0, x0, #0xa60
  4374b8:	mov	w1, #0x6bd                 	// #1725
  4374bc:	bl	402bf0 <nftw@plt+0x70>
  4374c0:	adrp	x4, 47d000 <_obstack_memory_used@@Base+0x1bbb8>
  4374c4:	add	x4, x4, #0xc30
  4374c8:	stp	x29, x30, [sp, #-96]!
  4374cc:	adrp	x5, 4a4000 <_obstack_memory_used@@Base+0x42bb8>
  4374d0:	mov	x29, sp
  4374d4:	ldp	x6, x7, [x4]
  4374d8:	stp	x19, x20, [sp, #16]
  4374dc:	mov	x19, x0
  4374e0:	ldr	x0, [x5, #1392]
  4374e4:	stp	x6, x7, [sp, #56]
  4374e8:	cmp	x19, #0x0
  4374ec:	ldp	x6, x7, [x4, #16]
  4374f0:	stp	x21, x22, [sp, #32]
  4374f4:	csel	x19, x0, x19, eq  // eq = none
  4374f8:	ldr	x5, [x4, #32]
  4374fc:	stp	x6, x7, [sp, #72]
  437500:	mov	x21, x1
  437504:	str	x5, [sp, #88]
  437508:	mov	w0, w2
  43750c:	tst	w3, #0xff
  437510:	b.ne	4375e0 <nftw@plt+0x34a60>  // b.any
  437514:	mov	w1, #0x18                  	// #24
  437518:	smull	x1, w2, w1
  43751c:	ldr	x2, [x21]
  437520:	add	x22, x2, x1
  437524:	ldr	w4, [x2, x1]
  437528:	ldrb	w1, [x22, #4]
  43752c:	cmp	w1, #0x4
  437530:	b.ls	437640 <nftw@plt+0x34ac0>  // b.plast
  437534:	adrp	x5, 473000 <_obstack_memory_used@@Base+0x11bb8>
  437538:	add	x5, x5, #0x490
  43753c:	ldrb	w2, [x22, #5]
  437540:	adrp	x1, 47d000 <_obstack_memory_used@@Base+0x1bbb8>
  437544:	adrp	x6, 47d000 <_obstack_memory_used@@Base+0x1bbb8>
  437548:	add	x1, x1, #0xac0
  43754c:	cmp	w2, #0x0
  437550:	add	x6, x6, #0xab8
  437554:	mov	w2, w0
  437558:	csel	x6, x6, x1, ne  // ne = any
  43755c:	mov	x3, x22
  437560:	mov	x0, x19
  437564:	adrp	x1, 47d000 <_obstack_memory_used@@Base+0x1bbb8>
  437568:	add	x1, x1, #0xac8
  43756c:	bl	402b30 <fprintf@plt>
  437570:	ldr	w1, [x22, #20]
  437574:	mov	x0, x21
  437578:	bl	4350d0 <nftw@plt+0x32550>
  43757c:	mov	x20, x0
  437580:	ldr	w3, [x22, #16]
  437584:	adrp	x1, 47d000 <_obstack_memory_used@@Base+0x1bbb8>
  437588:	ldr	x2, [x22, #8]
  43758c:	mov	x0, x19
  437590:	add	x1, x1, #0xb28
  437594:	bl	402b30 <fprintf@plt>
  437598:	cbz	x20, 437650 <nftw@plt+0x34ad0>
  43759c:	ldr	x2, [x21]
  4375a0:	mov	x0, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  4375a4:	movk	x0, #0xaaab
  4375a8:	sub	x2, x20, x2
  4375ac:	ldr	x3, [x20, #8]
  4375b0:	asr	x2, x2, #3
  4375b4:	mul	w2, w2, w0
  4375b8:	mov	x0, x19
  4375bc:	adrp	x1, 47d000 <_obstack_memory_used@@Base+0x1bbb8>
  4375c0:	add	x1, x1, #0xb10
  4375c4:	bl	402b30 <fprintf@plt>
  4375c8:	mov	x1, x19
  4375cc:	mov	w0, #0xa                   	// #10
  4375d0:	ldp	x19, x20, [sp, #16]
  4375d4:	ldp	x21, x22, [sp, #32]
  4375d8:	ldp	x29, x30, [sp], #96
  4375dc:	b	4025e0 <fputc@plt>
  4375e0:	ldr	x1, [x1, #24]
  4375e4:	sbfiz	x0, x2, #5, #32
  4375e8:	adrp	x6, 47d000 <_obstack_memory_used@@Base+0x1bbb8>
  4375ec:	add	x6, x6, #0xac0
  4375f0:	add	x20, x1, x0
  4375f4:	ldr	w4, [x1, x0]
  4375f8:	mov	x3, x20
  4375fc:	mov	x0, x19
  437600:	adrp	x1, 47d000 <_obstack_memory_used@@Base+0x1bbb8>
  437604:	add	x1, x1, #0xac8
  437608:	bl	402b30 <fprintf@plt>
  43760c:	ldr	x2, [x20, #8]
  437610:	mov	x0, x19
  437614:	ldr	w3, [x20, #4]
  437618:	adrp	x1, 47d000 <_obstack_memory_used@@Base+0x1bbb8>
  43761c:	add	x1, x1, #0xaf8
  437620:	ldr	x2, [x2]
  437624:	bl	402b30 <fprintf@plt>
  437628:	mov	x1, x19
  43762c:	mov	w0, #0xa                   	// #10
  437630:	ldp	x19, x20, [sp, #16]
  437634:	ldp	x21, x22, [sp, #32]
  437638:	ldp	x29, x30, [sp], #96
  43763c:	b	4025e0 <fputc@plt>
  437640:	add	x2, sp, #0x60
  437644:	add	x1, x2, w1, uxtb #3
  437648:	ldur	x5, [x1, #-40]
  43764c:	b	43753c <nftw@plt+0x349bc>
  437650:	adrp	x3, 47d000 <_obstack_memory_used@@Base+0x1bbb8>
  437654:	mov	w2, #0xffffffff            	// #-1
  437658:	add	x3, x3, #0xab0
  43765c:	b	4375b8 <nftw@plt+0x34a38>
  437660:	sub	sp, sp, #0x80
  437664:	stp	x29, x30, [sp, #32]
  437668:	add	x29, sp, #0x20
  43766c:	stp	x19, x20, [sp, #48]
  437670:	mov	x20, x0
  437674:	mov	w19, w1
  437678:	str	x21, [sp, #64]
  43767c:	mov	x21, x2
  437680:	tbnz	w1, #31, 43769c <nftw@plt+0x34b1c>
  437684:	cbnz	w19, 4376b4 <nftw@plt+0x34b34>
  437688:	ldp	x29, x30, [sp, #32]
  43768c:	ldp	x19, x20, [sp, #48]
  437690:	ldr	x21, [sp, #64]
  437694:	add	sp, sp, #0x80
  437698:	ret
  43769c:	and	w19, w1, #0x7fffffff
  4376a0:	mov	w1, #0x18                  	// #24
  4376a4:	ldr	x0, [x0, #104]
  4376a8:	umull	x19, w19, w1
  4376ac:	ldr	w19, [x0, x19]
  4376b0:	cbz	w19, 437688 <nftw@plt+0x34b08>
  4376b4:	add	x3, sp, #0x78
  4376b8:	mov	w1, w19
  4376bc:	mov	x0, x20
  4376c0:	mov	w2, #0x2                   	// #2
  4376c4:	bl	436ea8 <nftw@plt+0x34328>
  4376c8:	mov	w9, w0
  4376cc:	ldr	x7, [sp, #120]
  4376d0:	cbz	x7, 437758 <nftw@plt+0x34bd8>
  4376d4:	ldrb	w4, [x7, #6]
  4376d8:	mov	w3, #0x1                   	// #1
  4376dc:	ldrb	w6, [x7, #5]
  4376e0:	ldr	w1, [x7]
  4376e4:	ldrb	w2, [x7, #7]
  4376e8:	cmp	w6, #0x0
  4376ec:	sub	w1, w9, w1
  4376f0:	lsl	w5, w3, w4
  4376f4:	sub	w5, w5, #0x1
  4376f8:	cset	w6, ne  // ne = any
  4376fc:	and	w5, w5, w1
  437700:	cmp	w19, w0
  437704:	ldr	w0, [x7, #16]
  437708:	lsr	w1, w1, w4
  43770c:	lsr	w5, w5, w2
  437710:	add	w4, w1, w0
  437714:	ldr	x2, [x7, #8]
  437718:	b.eq	437778 <nftw@plt+0x34bf8>  // b.none
  43771c:	mov	w1, w3
  437720:	adrp	x3, 47d000 <_obstack_memory_used@@Base+0x1bbb8>
  437724:	add	x3, x3, #0xb40
  437728:	str	w1, [sp]
  43772c:	mov	x0, x21
  437730:	str	w19, [sp, #8]
  437734:	adrp	x1, 47d000 <_obstack_memory_used@@Base+0x1bbb8>
  437738:	str	w9, [sp, #16]
  43773c:	add	x1, x1, #0xb48
  437740:	bl	402b30 <fprintf@plt>
  437744:	ldp	x29, x30, [sp, #32]
  437748:	ldp	x19, x20, [sp, #48]
  43774c:	ldr	x21, [sp, #64]
  437750:	add	sp, sp, #0x80
  437754:	ret
  437758:	adrp	x3, 472000 <_obstack_memory_used@@Base+0x10bb8>
  43775c:	add	x3, x3, #0x5c0
  437760:	mov	w1, #0xffffffff            	// #-1
  437764:	mov	x2, x3
  437768:	mov	w6, w1
  43776c:	mov	w5, w1
  437770:	mov	w4, w1
  437774:	b	437728 <nftw@plt+0x34ba8>
  437778:	ldr	w1, [x7, #20]
  43777c:	mov	x0, x20
  437780:	str	x2, [sp, #88]
  437784:	stp	w4, w5, [sp, #100]
  437788:	str	w6, [sp, #108]
  43778c:	bl	4350d0 <nftw@plt+0x32550>
  437790:	ldp	w4, w5, [sp, #100]
  437794:	ldr	w6, [sp, #108]
  437798:	ldr	x2, [sp, #88]
  43779c:	cbz	x0, 4377b0 <nftw@plt+0x34c30>
  4377a0:	mov	w1, #0x0                   	// #0
  4377a4:	ldr	x3, [x0, #8]
  4377a8:	ldr	x7, [sp, #120]
  4377ac:	b	437728 <nftw@plt+0x34ba8>
  4377b0:	adrp	x3, 47d000 <_obstack_memory_used@@Base+0x1bbb8>
  4377b4:	mov	w1, #0x0                   	// #0
  4377b8:	add	x3, x3, #0xb38
  4377bc:	ldr	x7, [sp, #120]
  4377c0:	b	437728 <nftw@plt+0x34ba8>
  4377c4:	nop
  4377c8:	cbz	x0, 437894 <nftw@plt+0x34d14>
  4377cc:	stp	x29, x30, [sp, #-64]!
  4377d0:	mov	x29, sp
  4377d4:	stp	x19, x20, [sp, #16]
  4377d8:	ldr	w19, [x0, #12]
  4377dc:	stp	x23, x24, [sp, #48]
  4377e0:	mov	x23, x0
  4377e4:	cbz	w19, 43783c <nftw@plt+0x34cbc>
  4377e8:	subs	w19, w19, #0x1
  4377ec:	b.mi	43783c <nftw@plt+0x34cbc>  // b.first
  4377f0:	mov	w20, #0x18                  	// #24
  4377f4:	mov	x24, x1
  4377f8:	stp	x21, x22, [sp, #32]
  4377fc:	mov	x22, x2
  437800:	smull	x20, w19, w20
  437804:	sxtw	x21, w19
  437808:	ldr	x3, [x23]
  43780c:	mov	x1, x24
  437810:	add	x3, x3, x20
  437814:	sub	x20, x20, #0x18
  437818:	ldr	x0, [x3, #8]
  43781c:	cbz	x0, 437828 <nftw@plt+0x34ca8>
  437820:	bl	45fb48 <nftw@plt+0x5cfc8>
  437824:	cbz	w0, 437850 <nftw@plt+0x34cd0>
  437828:	sub	w19, w19, #0x1
  43782c:	sub	x21, x21, #0x1
  437830:	cmn	w19, #0x1
  437834:	b.ne	437808 <nftw@plt+0x34c88>  // b.any
  437838:	ldp	x21, x22, [sp, #32]
  43783c:	mov	w0, #0x0                   	// #0
  437840:	ldp	x19, x20, [sp, #16]
  437844:	ldp	x23, x24, [sp, #48]
  437848:	ldp	x29, x30, [sp], #64
  43784c:	ret
  437850:	ldr	w0, [x23, #12]
  437854:	sub	w0, w0, #0x1
  437858:	cmp	w0, w19
  43785c:	b.eq	43789c <nftw@plt+0x34d1c>  // b.none
  437860:	add	x21, x21, #0x1
  437864:	ldr	x0, [x23]
  437868:	add	x21, x21, x21, lsl #1
  43786c:	lsl	x21, x21, #3
  437870:	ldr	w1, [x0, x21]
  437874:	sub	w1, w1, #0x1
  437878:	str	w1, [x22]
  43787c:	mov	w0, #0x1                   	// #1
  437880:	ldp	x19, x20, [sp, #16]
  437884:	ldp	x21, x22, [sp, #32]
  437888:	ldp	x23, x24, [sp, #48]
  43788c:	ldp	x29, x30, [sp], #64
  437890:	ret
  437894:	mov	w0, #0x0                   	// #0
  437898:	ret
  43789c:	ldr	w1, [x23, #56]
  4378a0:	b	437878 <nftw@plt+0x34cf8>
  4378a4:	nop
  4378a8:	ldp	w13, w15, [x0, #8]
  4378ac:	mov	w2, #0x18                  	// #24
  4378b0:	ldp	w16, w12, [x0, #32]
  4378b4:	ldr	x9, [x0, #24]
  4378b8:	umull	x17, w13, w2
  4378bc:	umull	x14, w15, w2
  4378c0:	lsl	x16, x16, #5
  4378c4:	cbz	x9, 437974 <nftw@plt+0x34df4>
  4378c8:	sub	w11, w12, #0x1
  4378cc:	mov	x3, #0x0                   	// #0
  4378d0:	mov	x10, #0x0                   	// #0
  4378d4:	sbfiz	x11, x11, #5, #32
  4378d8:	adds	x11, x9, x11
  4378dc:	b.cs	437928 <nftw@plt+0x34da8>  // b.hs, b.nlast
  4378e0:	ldr	w8, [x9, #4]
  4378e4:	lsl	w8, w8, #1
  4378e8:	add	x10, x10, w8, uxtw #2
  4378ec:	cbz	w8, 43791c <nftw@plt+0x34d9c>
  4378f0:	ldr	x4, [x9, #16]
  4378f4:	mov	w2, #0x0                   	// #0
  4378f8:	add	w7, w2, #0x1
  4378fc:	ldr	w6, [x4, w2, uxtw #2]
  437900:	add	x5, x3, #0x4
  437904:	add	w2, w2, #0x2
  437908:	ldr	w7, [x4, x7, lsl #2]
  43790c:	cmp	w7, w6
  437910:	csel	x3, x5, x3, eq  // eq = none
  437914:	cmp	w8, w2
  437918:	b.hi	4378f8 <nftw@plt+0x34d78>  // b.pmore
  43791c:	add	x9, x9, #0x20
  437920:	cmp	x11, x9
  437924:	b.cs	4378e0 <nftw@plt+0x34d60>  // b.hs, b.nlast
  437928:	ldp	w5, w4, [x0, #96]
  43792c:	mov	w8, #0x18                  	// #24
  437930:	adrp	x7, 4a5000 <__environ@@GLIBC_2.17+0xa68>
  437934:	adrp	x6, 4a5000 <__environ@@GLIBC_2.17+0xa68>
  437938:	mov	w2, w12
  43793c:	mov	w13, w13
  437940:	ldr	w7, [x7, #2452]
  437944:	umull	x0, w4, w8
  437948:	ldr	w6, [x6, #2448]
  43794c:	mov	w15, w15
  437950:	lsl	x4, x2, #5
  437954:	stp	x13, x15, [x1]
  437958:	stp	x17, x14, [x1, #16]
  43795c:	stp	x7, x6, [x1, #32]
  437960:	stp	x2, x16, [x1, #48]
  437964:	stp	x4, x10, [x1, #64]
  437968:	stp	x3, x0, [x1, #80]
  43796c:	str	x5, [x1, #96]
  437970:	ret
  437974:	mov	x3, #0x0                   	// #0
  437978:	mov	x10, #0x0                   	// #0
  43797c:	b	437928 <nftw@plt+0x34da8>
  437980:	cbz	x1, 437b44 <nftw@plt+0x34fc4>
  437984:	stp	x29, x30, [sp, #-80]!
  437988:	mov	x29, sp
  43798c:	stp	x19, x20, [sp, #16]
  437990:	mov	x20, x1
  437994:	mov	x19, x0
  437998:	adrp	x0, 4a4000 <_obstack_memory_used@@Base+0x42bb8>
  43799c:	stp	x21, x22, [sp, #32]
  4379a0:	mov	w22, w2
  4379a4:	ldr	x0, [x0, #1392]
  4379a8:	cmp	x19, #0x0
  4379ac:	ldr	w2, [x20, #12]
  4379b0:	adrp	x1, 47d000 <_obstack_memory_used@@Base+0x1bbb8>
  4379b4:	csel	x19, x0, x19, eq  // eq = none
  4379b8:	add	x1, x1, #0xb80
  4379bc:	mov	x0, x19
  4379c0:	stp	x23, x24, [sp, #48]
  4379c4:	mov	w23, w3
  4379c8:	bl	402b30 <fprintf@plt>
  4379cc:	ldr	w2, [x20, #36]
  4379d0:	mov	x0, x19
  4379d4:	adrp	x1, 47d000 <_obstack_memory_used@@Base+0x1bbb8>
  4379d8:	add	x1, x1, #0xba0
  4379dc:	bl	402b30 <fprintf@plt>
  4379e0:	ldr	w2, [x20, #48]
  4379e4:	mov	x0, x19
  4379e8:	adrp	x1, 47d000 <_obstack_memory_used@@Base+0x1bbb8>
  4379ec:	add	x1, x1, #0xbc0
  4379f0:	bl	402b30 <fprintf@plt>
  4379f4:	ldr	w2, [x20, #56]
  4379f8:	adrp	x1, 47d000 <_obstack_memory_used@@Base+0x1bbb8>
  4379fc:	mov	x0, x19
  437a00:	add	x1, x1, #0xbe0
  437a04:	bl	402b30 <fprintf@plt>
  437a08:	cbnz	w22, 437a24 <nftw@plt+0x34ea4>
  437a0c:	cbnz	w23, 437a80 <nftw@plt+0x34f00>
  437a10:	ldp	x19, x20, [sp, #16]
  437a14:	ldp	x21, x22, [sp, #32]
  437a18:	ldp	x23, x24, [sp, #48]
  437a1c:	ldp	x29, x30, [sp], #80
  437a20:	ret
  437a24:	mov	x3, x19
  437a28:	mov	w21, #0x0                   	// #0
  437a2c:	adrp	x0, 47d000 <_obstack_memory_used@@Base+0x1bbb8>
  437a30:	mov	x2, #0x14                  	// #20
  437a34:	mov	x1, #0x1                   	// #1
  437a38:	add	x0, x0, #0xc00
  437a3c:	bl	402950 <fwrite@plt>
  437a40:	b	437a50 <nftw@plt+0x34ed0>
  437a44:	bl	4374c0 <nftw@plt+0x34940>
  437a48:	cmp	w22, w21
  437a4c:	b.eq	437a70 <nftw@plt+0x34ef0>  // b.none
  437a50:	ldr	w4, [x20, #12]
  437a54:	mov	w2, w21
  437a58:	mov	x1, x20
  437a5c:	mov	x0, x19
  437a60:	cmp	w4, w21
  437a64:	mov	w3, #0x0                   	// #0
  437a68:	add	w21, w21, #0x1
  437a6c:	b.hi	437a44 <nftw@plt+0x34ec4>  // b.pmore
  437a70:	mov	x1, x19
  437a74:	mov	w0, #0xa                   	// #10
  437a78:	bl	4025e0 <fputc@plt>
  437a7c:	cbz	w23, 437a10 <nftw@plt+0x34e90>
  437a80:	mov	x3, x19
  437a84:	adrp	x0, 47d000 <_obstack_memory_used@@Base+0x1bbb8>
  437a88:	mov	x2, #0x11                  	// #17
  437a8c:	add	x0, x0, #0xc18
  437a90:	mov	x1, #0x1                   	// #1
  437a94:	adrp	x24, 47d000 <_obstack_memory_used@@Base+0x1bbb8>
  437a98:	mov	w21, #0x0                   	// #0
  437a9c:	add	x24, x24, #0x9f0
  437aa0:	stp	x25, x26, [sp, #64]
  437aa4:	adrp	x25, 47d000 <_obstack_memory_used@@Base+0x1bbb8>
  437aa8:	adrp	x26, 47d000 <_obstack_memory_used@@Base+0x1bbb8>
  437aac:	add	x25, x25, #0xac0
  437ab0:	bl	402950 <fwrite@plt>
  437ab4:	b	437afc <nftw@plt+0x34f7c>
  437ab8:	ldr	x7, [x20, #24]
  437abc:	add	x22, x7, x4
  437ac0:	ldr	w4, [x7, x4]
  437ac4:	mov	x3, x22
  437ac8:	bl	402b30 <fprintf@plt>
  437acc:	ldr	x2, [x22, #8]
  437ad0:	mov	x0, x19
  437ad4:	ldr	w3, [x22, #4]
  437ad8:	adrp	x1, 47d000 <_obstack_memory_used@@Base+0x1bbb8>
  437adc:	add	x1, x1, #0xaf8
  437ae0:	ldr	x2, [x2]
  437ae4:	bl	402b30 <fprintf@plt>
  437ae8:	mov	x1, x19
  437aec:	mov	w0, #0xa                   	// #10
  437af0:	bl	4025e0 <fputc@plt>
  437af4:	cmp	w23, w21
  437af8:	b.eq	437b24 <nftw@plt+0x34fa4>  // b.none
  437afc:	ldr	w3, [x20, #36]
  437b00:	sbfiz	x4, x21, #5, #32
  437b04:	mov	w2, w21
  437b08:	mov	x6, x25
  437b0c:	cmp	w3, w21
  437b10:	mov	x5, x24
  437b14:	add	x1, x26, #0xac8
  437b18:	mov	x0, x19
  437b1c:	add	w21, w21, #0x1
  437b20:	b.hi	437ab8 <nftw@plt+0x34f38>  // b.pmore
  437b24:	mov	x1, x19
  437b28:	mov	w0, #0xa                   	// #10
  437b2c:	ldp	x19, x20, [sp, #16]
  437b30:	ldp	x21, x22, [sp, #32]
  437b34:	ldp	x23, x24, [sp, #48]
  437b38:	ldp	x25, x26, [sp, #64]
  437b3c:	ldp	x29, x30, [sp], #80
  437b40:	b	4025e0 <fputc@plt>
  437b44:	ret
  437b48:	mov	x4, x0
  437b4c:	mov	w6, #0x1                   	// #1
  437b50:	str	x1, [x4], #8
  437b54:	str	wzr, [x4, #56]
  437b58:	str	xzr, [x4, #64]
  437b5c:	str	w6, [x0, #8]
  437b60:	stp	w2, wzr, [x0, #16]
  437b64:	str	x3, [x0, #24]
  437b68:	str	wzr, [x0, #80]
  437b6c:	strb	wzr, [x0, #84]
  437b70:	str	wzr, [x0, #120]
  437b74:	str	wzr, [x0, #144]
  437b78:	str	xzr, [x0, #152]
  437b7c:	strh	wzr, [x0, #160]
  437b80:	ret
  437b84:	nop
  437b88:	stp	x29, x30, [sp, #-64]!
  437b8c:	mov	x29, sp
  437b90:	stp	x21, x22, [sp, #32]
  437b94:	mov	x21, x0
  437b98:	mov	x22, x0
  437b9c:	stp	x19, x20, [sp, #16]
  437ba0:	mov	w19, #0x0                   	// #0
  437ba4:	ldr	w3, [x21, #120]!
  437ba8:	str	x23, [sp, #48]
  437bac:	mov	x23, #0xfffffffffffffff0    	// #-16
  437bb0:	cbz	w3, 437bfc <nftw@plt+0x3507c>
  437bb4:	nop
  437bb8:	add	x4, x23, w19, sxtw #3
  437bbc:	cmp	w19, #0x1
  437bc0:	sxtw	x2, w19
  437bc4:	b.le	437c38 <nftw@plt+0x350b8>
  437bc8:	ldr	x1, [x21, #32]
  437bcc:	add	x1, x1, x4
  437bd0:	ldr	x20, [x1]
  437bd4:	cbz	x20, 437c1c <nftw@plt+0x3509c>
  437bd8:	ldr	x0, [x20, #8]
  437bdc:	add	w19, w19, #0x1
  437be0:	bl	402910 <free@plt>
  437be4:	mov	x0, x20
  437be8:	mov	x1, #0x18                  	// #24
  437bec:	bl	461b00 <_obstack_memory_used@@Base+0x6b8>
  437bf0:	ldr	w3, [x22, #120]
  437bf4:	cmp	w3, w19
  437bf8:	b.hi	437bb8 <nftw@plt+0x35038>  // b.pmore
  437bfc:	ldr	x0, [x21, #32]
  437c00:	bl	402910 <free@plt>
  437c04:	ldp	x19, x20, [sp, #16]
  437c08:	ldr	x23, [sp, #48]
  437c0c:	ldr	x0, [x22, #72]
  437c10:	ldp	x21, x22, [sp, #32]
  437c14:	ldp	x29, x30, [sp], #64
  437c18:	b	402910 <free@plt>
  437c1c:	add	w19, w19, #0x1
  437c20:	cmp	w3, w19
  437c24:	b.ls	437bfc <nftw@plt+0x3507c>  // b.plast
  437c28:	add	x4, x23, w19, sxtw #3
  437c2c:	cmp	w19, #0x1
  437c30:	sxtw	x2, w19
  437c34:	b.gt	437bc8 <nftw@plt+0x35048>
  437c38:	add	x1, x2, #0x1
  437c3c:	add	x1, x21, x1, lsl #3
  437c40:	b	437bd0 <nftw@plt+0x35050>
  437c44:	nop
  437c48:	cmp	w1, #0x2
  437c4c:	sbfiz	x1, x1, #4, #32
  437c50:	b.gt	437c64 <nftw@plt+0x350e4>
  437c54:	add	x0, x0, x1
  437c58:	add	x0, x0, #0x10
  437c5c:	ldr	w0, [x0]
  437c60:	ret
  437c64:	ldr	x0, [x0, #72]
  437c68:	sub	x1, x1, #0x30
  437c6c:	add	x0, x0, x1
  437c70:	ldr	w0, [x0]
  437c74:	ret
  437c78:	cmp	w1, #0x2
  437c7c:	sbfiz	x1, x1, #4, #32
  437c80:	b.gt	437c90 <nftw@plt+0x35110>
  437c84:	add	x0, x0, x1
  437c88:	add	x0, x0, #0x10
  437c8c:	ret
  437c90:	ldr	x0, [x0, #72]
  437c94:	sub	x1, x1, #0x30
  437c98:	add	x0, x0, x1
  437c9c:	ret
  437ca0:	cmp	w1, #0x2
  437ca4:	sbfiz	x1, x1, #4, #32
  437ca8:	b.gt	437cb8 <nftw@plt+0x35138>
  437cac:	add	x0, x0, x1
  437cb0:	add	x0, x0, #0x10
  437cb4:	ret
  437cb8:	ldr	x0, [x0, #72]
  437cbc:	sub	x1, x1, #0x30
  437cc0:	add	x0, x0, x1
  437cc4:	ret
  437cc8:	stp	x29, x30, [sp, #-80]!
  437ccc:	mov	x29, sp
  437cd0:	stp	x19, x20, [sp, #16]
  437cd4:	mov	x20, x8
  437cd8:	mov	x19, x0
  437cdc:	cbnz	w1, 437d10 <nftw@plt+0x35190>
  437ce0:	ldrb	w0, [x0, #84]
  437ce4:	str	x21, [sp, #32]
  437ce8:	add	x21, x19, #0x58
  437cec:	cbz	w0, 437d50 <nftw@plt+0x351d0>
  437cf0:	ldp	x0, x1, [x21, #16]
  437cf4:	stp	x0, x1, [x20, #16]
  437cf8:	ldp	x0, x1, [x19, #88]
  437cfc:	stp	x0, x1, [x20]
  437d00:	ldp	x19, x20, [sp, #16]
  437d04:	ldr	x21, [sp, #32]
  437d08:	ldp	x29, x30, [sp], #80
  437d0c:	ret
  437d10:	cmp	w1, #0x2
  437d14:	sbfiz	x0, x1, #4, #32
  437d18:	b.le	437d44 <nftw@plt+0x351c4>
  437d1c:	ldr	x19, [x19, #72]
  437d20:	sub	x0, x0, #0x30
  437d24:	add	x19, x19, x0
  437d28:	ldr	w0, [x19]
  437d2c:	mov	x8, x20
  437d30:	mov	w1, #0x0                   	// #0
  437d34:	bl	419d60 <nftw@plt+0x171e0>
  437d38:	ldp	x19, x20, [sp, #16]
  437d3c:	ldp	x29, x30, [sp], #80
  437d40:	ret
  437d44:	add	x19, x19, x0
  437d48:	add	x19, x19, #0x10
  437d4c:	b	437d28 <nftw@plt+0x351a8>
  437d50:	ldr	w0, [x19, #16]
  437d54:	add	x8, sp, #0x30
  437d58:	bl	419d60 <nftw@plt+0x171e0>
  437d5c:	ldp	x2, x3, [sp, #48]
  437d60:	stp	x2, x3, [x19, #88]
  437d64:	ldr	w0, [x19, #80]
  437d68:	ldp	x2, x3, [sp, #64]
  437d6c:	stp	x2, x3, [x21, #16]
  437d70:	cbz	w0, 437d78 <nftw@plt+0x351f8>
  437d74:	str	w0, [x19, #100]
  437d78:	mov	w0, #0x1                   	// #1
  437d7c:	strb	w0, [x19, #84]
  437d80:	b	437cf0 <nftw@plt+0x35170>
  437d84:	nop
  437d88:	str	w1, [x0, #80]
  437d8c:	strb	wzr, [x0, #84]
  437d90:	ret
  437d94:	nop
  437d98:	stp	x29, x30, [sp, #-64]!
  437d9c:	mov	x29, sp
  437da0:	ldr	w4, [x0, #8]
  437da4:	stp	x19, x20, [sp, #16]
  437da8:	mov	x20, x3
  437dac:	cmp	w4, #0x2
  437db0:	stp	x21, x22, [sp, #32]
  437db4:	mov	w22, w1
  437db8:	add	w1, w4, #0x1
  437dbc:	str	x23, [sp, #48]
  437dc0:	mov	w21, w2
  437dc4:	str	w1, [x0, #8]
  437dc8:	add	x23, x0, #0x8
  437dcc:	b.gt	437dfc <nftw@plt+0x3527c>
  437dd0:	mov	x0, #0x8                   	// #8
  437dd4:	add	x4, x0, w4, sxtw #4
  437dd8:	add	x0, x23, x4
  437ddc:	ldp	x19, x20, [sp, #16]
  437de0:	str	w22, [x23, x4]
  437de4:	str	w2, [x0, #4]
  437de8:	str	x3, [x0, #8]
  437dec:	ldp	x21, x22, [sp, #32]
  437df0:	ldr	x23, [sp, #48]
  437df4:	ldp	x29, x30, [sp], #64
  437df8:	ret
  437dfc:	ldr	x0, [x23, #64]
  437e00:	sub	w19, w4, #0x3
  437e04:	cbz	x0, 437e3c <nftw@plt+0x352bc>
  437e08:	ldr	w1, [x23, #56]
  437e0c:	cmp	w19, w1
  437e10:	b.ge	437e54 <nftw@plt+0x352d4>  // b.tcont
  437e14:	sbfiz	x4, x19, #4, #32
  437e18:	add	x1, x0, x4
  437e1c:	ldr	x23, [sp, #48]
  437e20:	str	w22, [x0, x4]
  437e24:	str	w21, [x1, #4]
  437e28:	str	x20, [x1, #8]
  437e2c:	ldp	x19, x20, [sp, #16]
  437e30:	ldp	x21, x22, [sp, #32]
  437e34:	ldp	x29, x30, [sp], #64
  437e38:	ret
  437e3c:	mov	w0, #0x10                  	// #16
  437e40:	str	w0, [x23, #56]
  437e44:	mov	x0, #0x100                 	// #256
  437e48:	bl	461560 <_obstack_memory_used@@Base+0x118>
  437e4c:	str	x0, [x23, #64]
  437e50:	b	437e14 <nftw@plt+0x35294>
  437e54:	lsl	w1, w1, #1
  437e58:	str	w1, [x23, #56]
  437e5c:	sbfiz	x1, x1, #4, #32
  437e60:	bl	4615e8 <_obstack_memory_used@@Base+0x1a0>
  437e64:	str	x0, [x23, #64]
  437e68:	b	437e14 <nftw@plt+0x35294>
  437e6c:	nop
  437e70:	stp	x29, x30, [sp, #-64]!
  437e74:	mov	x29, sp
  437e78:	stp	x19, x20, [sp, #16]
  437e7c:	mov	w19, w1
  437e80:	ldr	w1, [x0, #8]
  437e84:	mov	x20, x0
  437e88:	cmp	w1, w19
  437e8c:	b.eq	437ed0 <nftw@plt+0x35350>  // b.none
  437e90:	cmp	w19, #0x2
  437e94:	sbfiz	x4, x19, #4, #32
  437e98:	b.gt	437ebc <nftw@plt+0x3533c>
  437e9c:	add	x1, x0, x4
  437ea0:	add	x1, x1, #0x10
  437ea4:	stp	w2, w3, [x1]
  437ea8:	cbnz	w19, 437eb0 <nftw@plt+0x35330>
  437eac:	strb	wzr, [x20, #84]
  437eb0:	ldp	x19, x20, [sp, #16]
  437eb4:	ldp	x29, x30, [sp], #64
  437eb8:	ret
  437ebc:	ldr	x1, [x0, #72]
  437ec0:	sub	x4, x4, #0x30
  437ec4:	add	x1, x1, x4
  437ec8:	stp	w2, w3, [x1]
  437ecc:	b	437ea8 <nftw@plt+0x35328>
  437ed0:	stp	x21, x22, [sp, #32]
  437ed4:	add	w0, w19, #0x1
  437ed8:	cmp	w19, #0x2
  437edc:	str	w0, [x20, #8]
  437ee0:	add	x21, x20, #0x8
  437ee4:	b.le	437f1c <nftw@plt+0x3539c>
  437ee8:	ldr	x0, [x21, #64]
  437eec:	sub	w22, w19, #0x3
  437ef0:	cbz	x0, 437f5c <nftw@plt+0x353dc>
  437ef4:	ldr	w1, [x21, #56]
  437ef8:	cmp	w22, w1
  437efc:	b.ge	437f3c <nftw@plt+0x353bc>  // b.tcont
  437f00:	sbfiz	x1, x22, #4, #32
  437f04:	add	x4, x0, x1
  437f08:	ldp	x21, x22, [sp, #32]
  437f0c:	str	w2, [x0, x1]
  437f10:	str	w3, [x4, #4]
  437f14:	str	xzr, [x4, #8]
  437f18:	b	437ea8 <nftw@plt+0x35328>
  437f1c:	mov	x0, #0x8                   	// #8
  437f20:	add	x0, x0, w19, sxtw #4
  437f24:	add	x1, x21, x0
  437f28:	str	w2, [x21, x0]
  437f2c:	ldp	x21, x22, [sp, #32]
  437f30:	str	w3, [x1, #4]
  437f34:	str	xzr, [x1, #8]
  437f38:	b	437ea8 <nftw@plt+0x35328>
  437f3c:	lsl	w1, w1, #1
  437f40:	str	w1, [x21, #56]
  437f44:	stp	w2, w3, [sp, #56]
  437f48:	sbfiz	x1, x1, #4, #32
  437f4c:	bl	4615e8 <_obstack_memory_used@@Base+0x1a0>
  437f50:	ldp	w2, w3, [sp, #56]
  437f54:	str	x0, [x21, #64]
  437f58:	b	437f00 <nftw@plt+0x35380>
  437f5c:	mov	w0, #0x10                  	// #16
  437f60:	str	w0, [x21, #56]
  437f64:	mov	x0, #0x100                 	// #256
  437f68:	stp	w2, w3, [sp, #56]
  437f6c:	bl	461560 <_obstack_memory_used@@Base+0x118>
  437f70:	str	x0, [x21, #64]
  437f74:	ldp	w2, w3, [sp, #56]
  437f78:	b	437f00 <nftw@plt+0x35380>
  437f7c:	nop
  437f80:	ldr	w1, [x0, #120]
  437f84:	cbz	w1, 437fc0 <nftw@plt+0x35440>
  437f88:	sub	w1, w1, #0x1
  437f8c:	cmp	w1, #0x1
  437f90:	sxtw	x2, w1
  437f94:	b.le	437fb0 <nftw@plt+0x35430>
  437f98:	ldr	x0, [x0, #152]
  437f9c:	mov	x2, #0xfffffffffffffff0    	// #-16
  437fa0:	add	x1, x2, w1, sxtw #3
  437fa4:	add	x1, x0, x1
  437fa8:	ldr	x0, [x1]
  437fac:	ret
  437fb0:	add	x1, x0, x2, lsl #3
  437fb4:	add	x1, x1, #0x80
  437fb8:	ldr	x0, [x1]
  437fbc:	b	437fac <nftw@plt+0x3542c>
  437fc0:	mov	x0, #0x0                   	// #0
  437fc4:	ret
  437fc8:	stp	x29, x30, [sp, #-64]!
  437fcc:	mov	x29, sp
  437fd0:	stp	x19, x20, [sp, #16]
  437fd4:	mov	x20, x0
  437fd8:	ldrb	w0, [x0, #160]
  437fdc:	cbnz	w0, 437fec <nftw@plt+0x3546c>
  437fe0:	mov	w2, #0x60000000            	// #1610612736
  437fe4:	cmp	w1, w2
  437fe8:	b.hi	437ff8 <nftw@plt+0x35478>  // b.pmore
  437fec:	ldp	x19, x20, [sp, #16]
  437ff0:	ldp	x29, x30, [sp], #64
  437ff4:	ret
  437ff8:	stp	x21, x22, [sp, #32]
  437ffc:	mov	x22, x20
  438000:	mov	w0, #0x1                   	// #1
  438004:	str	x23, [sp, #48]
  438008:	mov	w19, #0x0                   	// #0
  43800c:	strb	w0, [x20, #160]
  438010:	mov	x23, #0xfffffffffffffff0    	// #-16
  438014:	ldr	w0, [x22, #120]!
  438018:	cbz	w0, 438064 <nftw@plt+0x354e4>
  43801c:	nop
  438020:	add	x2, x23, w19, sxtw #3
  438024:	cmp	w19, #0x1
  438028:	sxtw	x1, w19
  43802c:	b.le	43809c <nftw@plt+0x3551c>
  438030:	ldr	x1, [x22, #32]
  438034:	add	x1, x1, x2
  438038:	ldr	x21, [x1]
  43803c:	cbz	x21, 438080 <nftw@plt+0x35500>
  438040:	ldr	x0, [x21, #8]
  438044:	add	w19, w19, #0x1
  438048:	bl	402910 <free@plt>
  43804c:	mov	x0, x21
  438050:	mov	x1, #0x18                  	// #24
  438054:	bl	461b00 <_obstack_memory_used@@Base+0x6b8>
  438058:	ldr	w0, [x20, #120]
  43805c:	cmp	w0, w19
  438060:	b.hi	438020 <nftw@plt+0x354a0>  // b.pmore
  438064:	ldp	x21, x22, [sp, #32]
  438068:	mov	w0, #0x1                   	// #1
  43806c:	ldr	x23, [sp, #48]
  438070:	str	wzr, [x20, #120]
  438074:	ldp	x19, x20, [sp, #16]
  438078:	ldp	x29, x30, [sp], #64
  43807c:	ret
  438080:	add	w19, w19, #0x1
  438084:	cmp	w0, w19
  438088:	b.ls	438064 <nftw@plt+0x354e4>  // b.plast
  43808c:	add	x2, x23, w19, sxtw #3
  438090:	cmp	w19, #0x1
  438094:	sxtw	x1, w19
  438098:	b.gt	438030 <nftw@plt+0x354b0>
  43809c:	add	x1, x1, #0x1
  4380a0:	add	x1, x22, x1, lsl #3
  4380a4:	b	438038 <nftw@plt+0x354b8>
  4380a8:	stp	x29, x30, [sp, #-64]!
  4380ac:	mov	w1, #0x1                   	// #1
  4380b0:	mov	x29, sp
  4380b4:	stp	x21, x22, [sp, #32]
  4380b8:	mov	x21, x0
  4380bc:	mov	x22, x0
  4380c0:	stp	x19, x20, [sp, #16]
  4380c4:	mov	w19, #0x0                   	// #0
  4380c8:	ldr	w3, [x21, #120]!
  4380cc:	str	x23, [sp, #48]
  4380d0:	mov	x23, #0xfffffffffffffff0    	// #-16
  4380d4:	strb	w1, [x0, #160]
  4380d8:	cbz	w3, 438124 <nftw@plt+0x355a4>
  4380dc:	nop
  4380e0:	add	x4, x23, w19, sxtw #3
  4380e4:	cmp	w19, #0x1
  4380e8:	sxtw	x2, w19
  4380ec:	b.le	438158 <nftw@plt+0x355d8>
  4380f0:	ldr	x1, [x21, #32]
  4380f4:	add	x1, x1, x4
  4380f8:	ldr	x20, [x1]
  4380fc:	cbz	x20, 43813c <nftw@plt+0x355bc>
  438100:	ldr	x0, [x20, #8]
  438104:	add	w19, w19, #0x1
  438108:	bl	402910 <free@plt>
  43810c:	mov	x0, x20
  438110:	mov	x1, #0x18                  	// #24
  438114:	bl	461b00 <_obstack_memory_used@@Base+0x6b8>
  438118:	ldr	w3, [x22, #120]
  43811c:	cmp	w3, w19
  438120:	b.hi	4380e0 <nftw@plt+0x35560>  // b.pmore
  438124:	ldp	x19, x20, [sp, #16]
  438128:	ldr	x23, [sp, #48]
  43812c:	str	wzr, [x22, #120]
  438130:	ldp	x21, x22, [sp, #32]
  438134:	ldp	x29, x30, [sp], #64
  438138:	ret
  43813c:	add	w19, w19, #0x1
  438140:	cmp	w3, w19
  438144:	b.ls	438124 <nftw@plt+0x355a4>  // b.plast
  438148:	add	x4, x23, w19, sxtw #3
  43814c:	cmp	w19, #0x1
  438150:	sxtw	x2, w19
  438154:	b.gt	4380f0 <nftw@plt+0x35570>
  438158:	add	x1, x2, #0x1
  43815c:	add	x1, x21, x1, lsl #3
  438160:	b	4380f8 <nftw@plt+0x35578>
  438164:	nop
  438168:	stp	x29, x30, [sp, #-144]!
  43816c:	mov	x29, sp
  438170:	stp	x19, x20, [sp, #16]
  438174:	mov	x20, x0
  438178:	ldrb	w0, [x0, #160]
  43817c:	cbnz	w0, 4382ec <nftw@plt+0x3576c>
  438180:	stp	x21, x22, [sp, #32]
  438184:	mov	w0, #0x60000000            	// #1610612736
  438188:	cmp	w1, w0
  43818c:	stp	x23, x24, [sp, #48]
  438190:	mov	w24, w1
  438194:	b.hi	4382f8 <nftw@plt+0x35778>  // b.pmore
  438198:	mov	w23, w2
  43819c:	cmp	w2, w0
  4381a0:	b.hi	43839c <nftw@plt+0x3581c>  // b.pmore
  4381a4:	mov	x19, x3
  4381a8:	add	x8, sp, #0x50
  4381ac:	mov	w0, w24
  4381b0:	mov	w1, #0x1                   	// #1
  4381b4:	bl	419d60 <nftw@plt+0x171e0>
  4381b8:	ldr	w22, [sp, #92]
  4381bc:	mov	w0, w23
  4381c0:	mov	w1, #0x1                   	// #1
  4381c4:	add	x8, sp, #0x70
  4381c8:	bl	419d60 <nftw@plt+0x171e0>
  4381cc:	ldr	x1, [sp, #80]
  4381d0:	ldr	x0, [sp, #112]
  4381d4:	cmp	x1, x0
  4381d8:	b.ne	43842c <nftw@plt+0x358ac>  // b.any
  4381dc:	ldr	w1, [sp, #88]
  4381e0:	ldr	w0, [sp, #120]
  4381e4:	ldr	w21, [x20, #120]
  4381e8:	cmp	w1, w0
  4381ec:	b.ne	438514 <nftw@plt+0x35994>  // b.any
  4381f0:	ldr	w0, [sp, #124]
  4381f4:	cmp	w0, w22
  4381f8:	b.lt	4385a0 <nftw@plt+0x35a20>  // b.tstop
  4381fc:	mov	x0, x19
  438200:	mov	w1, #0xa                   	// #10
  438204:	bl	402940 <strchr@plt>
  438208:	cbz	x0, 438224 <nftw@plt+0x356a4>
  43820c:	cmp	w24, w23
  438210:	b.ne	43861c <nftw@plt+0x35a9c>  // b.any
  438214:	cmp	w22, #0x1
  438218:	b.ne	4386c0 <nftw@plt+0x35b40>  // b.any
  43821c:	ldrb	w0, [x0, #1]
  438220:	cbnz	w0, 438754 <nftw@plt+0x35bd4>
  438224:	add	x22, x20, #0x78
  438228:	cbz	w21, 438288 <nftw@plt+0x35708>
  43822c:	sub	w21, w21, #0x1
  438230:	cmp	w21, #0x1
  438234:	sxtw	x0, w21
  438238:	b.le	4386b0 <nftw@plt+0x35b30>
  43823c:	add	x22, x20, #0x78
  438240:	mov	x0, #0xfffffffffffffff0    	// #-16
  438244:	add	x21, x0, w21, sxtw #3
  438248:	ldr	x0, [x22, #32]
  43824c:	add	x21, x0, x21
  438250:	ldr	x21, [x21]
  438254:	cbz	x21, 438288 <nftw@plt+0x35708>
  438258:	str	x25, [sp, #64]
  43825c:	ldr	x25, [x21, #16]
  438260:	cbz	x25, 438278 <nftw@plt+0x356f8>
  438264:	ldr	x0, [x21, #8]
  438268:	add	x0, x0, x25
  43826c:	ldurb	w0, [x0, #-1]
  438270:	cmp	w0, #0xa
  438274:	b.eq	438284 <nftw@plt+0x35704>  // b.none
  438278:	ldr	w0, [x21, #4]
  43827c:	cmp	w24, w0
  438280:	b.eq	4384bc <nftw@plt+0x3593c>  // b.none
  438284:	ldr	x25, [sp, #64]
  438288:	mov	x0, #0x18                  	// #24
  43828c:	bl	461d40 <_obstack_memory_used@@Base+0x8f8>
  438290:	mov	x21, x0
  438294:	mov	x0, x19
  438298:	stp	w24, w23, [x21]
  43829c:	bl	4616a8 <_obstack_memory_used@@Base+0x260>
  4382a0:	mov	x1, x0
  4382a4:	str	x1, [x21, #8]
  4382a8:	mov	x0, x19
  4382ac:	bl	4024f0 <strlen@plt>
  4382b0:	str	x0, [x21, #16]
  4382b4:	ldr	w1, [x20, #120]
  4382b8:	add	w0, w1, #0x1
  4382bc:	str	w0, [x20, #120]
  4382c0:	cmp	w1, #0x1
  4382c4:	b.le	43869c <nftw@plt+0x35b1c>
  4382c8:	ldr	x0, [x22, #32]
  4382cc:	sub	w19, w1, #0x2
  4382d0:	cbz	x0, 4387d4 <nftw@plt+0x35c54>
  4382d4:	ldr	w1, [x22, #24]
  4382d8:	cmp	w19, w1
  4382dc:	b.ge	43873c <nftw@plt+0x35bbc>  // b.tcont
  4382e0:	str	x21, [x0, w19, sxtw #3]
  4382e4:	ldp	x21, x22, [sp, #32]
  4382e8:	ldp	x23, x24, [sp, #48]
  4382ec:	ldp	x19, x20, [sp, #16]
  4382f0:	ldp	x29, x30, [sp], #144
  4382f4:	ret
  4382f8:	mov	x22, x20
  4382fc:	mov	w0, #0x1                   	// #1
  438300:	strb	w0, [x20, #160]
  438304:	mov	w19, #0x0                   	// #0
  438308:	mov	x24, #0xfffffffffffffff0    	// #-16
  43830c:	ldr	w21, [x22, #120]!
  438310:	cbz	w21, 43835c <nftw@plt+0x357dc>
  438314:	nop
  438318:	add	x0, x24, w19, sxtw #3
  43831c:	cmp	w19, #0x1
  438320:	sxtw	x1, w19
  438324:	b.le	438390 <nftw@plt+0x35810>
  438328:	ldr	x1, [x22, #32]
  43832c:	add	x1, x1, x0
  438330:	ldr	x23, [x1]
  438334:	cbz	x23, 438374 <nftw@plt+0x357f4>
  438338:	ldr	x0, [x23, #8]
  43833c:	add	w19, w19, #0x1
  438340:	bl	402910 <free@plt>
  438344:	mov	x0, x23
  438348:	mov	x1, #0x18                  	// #24
  43834c:	bl	461b00 <_obstack_memory_used@@Base+0x6b8>
  438350:	ldr	w21, [x20, #120]
  438354:	cmp	w21, w19
  438358:	b.hi	438318 <nftw@plt+0x35798>  // b.pmore
  43835c:	ldp	x21, x22, [sp, #32]
  438360:	ldp	x23, x24, [sp, #48]
  438364:	str	wzr, [x20, #120]
  438368:	ldp	x19, x20, [sp, #16]
  43836c:	ldp	x29, x30, [sp], #144
  438370:	ret
  438374:	add	w19, w19, #0x1
  438378:	cmp	w21, w19
  43837c:	b.ls	43835c <nftw@plt+0x357dc>  // b.plast
  438380:	add	x0, x24, w19, sxtw #3
  438384:	cmp	w19, #0x1
  438388:	sxtw	x1, w19
  43838c:	b.gt	438328 <nftw@plt+0x357a8>
  438390:	add	x1, x1, #0x1
  438394:	add	x1, x22, x1, lsl #3
  438398:	b	438330 <nftw@plt+0x357b0>
  43839c:	ldr	w21, [x20, #120]
  4383a0:	mov	w0, #0x1                   	// #1
  4383a4:	strb	w0, [x20, #160]
  4383a8:	cbz	w21, 43835c <nftw@plt+0x357dc>
  4383ac:	add	x22, x20, #0x78
  4383b0:	mov	w19, #0x0                   	// #0
  4383b4:	mov	x24, #0xfffffffffffffff0    	// #-16
  4383b8:	add	x2, x24, w19, sxtw #3
  4383bc:	cmp	w19, #0x1
  4383c0:	sxtw	x1, w19
  4383c4:	b.le	43840c <nftw@plt+0x3588c>
  4383c8:	ldr	x0, [x22, #32]
  4383cc:	add	x0, x0, x2
  4383d0:	ldr	x23, [x0]
  4383d4:	cbz	x23, 43841c <nftw@plt+0x3589c>
  4383d8:	ldr	x0, [x23, #8]
  4383dc:	add	w19, w19, #0x1
  4383e0:	bl	402910 <free@plt>
  4383e4:	mov	x0, x23
  4383e8:	mov	x1, #0x18                  	// #24
  4383ec:	bl	461b00 <_obstack_memory_used@@Base+0x6b8>
  4383f0:	ldr	w21, [x20, #120]
  4383f4:	cmp	w21, w19
  4383f8:	b.ls	43835c <nftw@plt+0x357dc>  // b.plast
  4383fc:	add	x2, x24, w19, sxtw #3
  438400:	cmp	w19, #0x1
  438404:	sxtw	x1, w19
  438408:	b.gt	4383c8 <nftw@plt+0x35848>
  43840c:	add	x0, x1, #0x1
  438410:	add	x0, x22, x0, lsl #3
  438414:	ldr	x23, [x0]
  438418:	cbnz	x23, 4383d8 <nftw@plt+0x35858>
  43841c:	add	w19, w19, #0x1
  438420:	cmp	w21, w19
  438424:	b.hi	4383b8 <nftw@plt+0x35838>  // b.pmore
  438428:	b	43835c <nftw@plt+0x357dc>
  43842c:	ldr	w21, [x20, #120]
  438430:	mov	w0, #0x1                   	// #1
  438434:	strb	w0, [x20, #160]
  438438:	cbz	w21, 43835c <nftw@plt+0x357dc>
  43843c:	add	x22, x20, #0x78
  438440:	mov	w19, #0x0                   	// #0
  438444:	mov	x24, #0xfffffffffffffff0    	// #-16
  438448:	add	x2, x24, w19, sxtw #3
  43844c:	cmp	w19, #0x1
  438450:	sxtw	x1, w19
  438454:	b.le	43849c <nftw@plt+0x3591c>
  438458:	ldr	x0, [x22, #32]
  43845c:	add	x0, x0, x2
  438460:	ldr	x23, [x0]
  438464:	cbz	x23, 4384ac <nftw@plt+0x3592c>
  438468:	ldr	x0, [x23, #8]
  43846c:	add	w19, w19, #0x1
  438470:	bl	402910 <free@plt>
  438474:	mov	x0, x23
  438478:	mov	x1, #0x18                  	// #24
  43847c:	bl	461b00 <_obstack_memory_used@@Base+0x6b8>
  438480:	ldr	w21, [x20, #120]
  438484:	cmp	w21, w19
  438488:	b.ls	43835c <nftw@plt+0x357dc>  // b.plast
  43848c:	add	x2, x24, w19, sxtw #3
  438490:	cmp	w19, #0x1
  438494:	sxtw	x1, w19
  438498:	b.gt	438458 <nftw@plt+0x358d8>
  43849c:	add	x0, x1, #0x1
  4384a0:	add	x0, x22, x0, lsl #3
  4384a4:	ldr	x23, [x0]
  4384a8:	cbnz	x23, 438468 <nftw@plt+0x358e8>
  4384ac:	add	w19, w19, #0x1
  4384b0:	cmp	w21, w19
  4384b4:	b.hi	438448 <nftw@plt+0x358c8>  // b.pmore
  4384b8:	b	43835c <nftw@plt+0x357dc>
  4384bc:	str	w23, [x21, #4]
  4384c0:	mov	x0, x19
  4384c4:	bl	4024f0 <strlen@plt>
  4384c8:	mov	x20, x0
  4384cc:	add	x1, x25, #0x1
  4384d0:	add	x1, x1, x0
  4384d4:	ldr	x0, [x21, #8]
  4384d8:	bl	4615e8 <_obstack_memory_used@@Base+0x1a0>
  4384dc:	str	x0, [x21, #8]
  4384e0:	ldr	x2, [x21, #16]
  4384e4:	mov	x1, x19
  4384e8:	add	x0, x0, x2
  4384ec:	mov	x2, x20
  4384f0:	bl	402490 <memcpy@plt>
  4384f4:	ldp	x0, x1, [x21, #8]
  4384f8:	add	x20, x20, x1
  4384fc:	str	x20, [x21, #16]
  438500:	strb	wzr, [x0, x20]
  438504:	ldp	x21, x22, [sp, #32]
  438508:	ldp	x23, x24, [sp, #48]
  43850c:	ldr	x25, [sp, #64]
  438510:	b	4382ec <nftw@plt+0x3576c>
  438514:	mov	w0, #0x1                   	// #1
  438518:	strb	w0, [x20, #160]
  43851c:	cbz	w21, 43835c <nftw@plt+0x357dc>
  438520:	add	x22, x20, #0x78
  438524:	mov	w19, #0x0                   	// #0
  438528:	mov	x24, #0xfffffffffffffff0    	// #-16
  43852c:	add	x2, x24, w19, sxtw #3
  438530:	cmp	w19, #0x1
  438534:	sxtw	x1, w19
  438538:	b.le	438580 <nftw@plt+0x35a00>
  43853c:	ldr	x0, [x22, #32]
  438540:	add	x0, x0, x2
  438544:	ldr	x23, [x0]
  438548:	cbz	x23, 438590 <nftw@plt+0x35a10>
  43854c:	ldr	x0, [x23, #8]
  438550:	add	w19, w19, #0x1
  438554:	bl	402910 <free@plt>
  438558:	mov	x0, x23
  43855c:	mov	x1, #0x18                  	// #24
  438560:	bl	461b00 <_obstack_memory_used@@Base+0x6b8>
  438564:	ldr	w21, [x20, #120]
  438568:	cmp	w21, w19
  43856c:	b.ls	43835c <nftw@plt+0x357dc>  // b.plast
  438570:	add	x2, x24, w19, sxtw #3
  438574:	cmp	w19, #0x1
  438578:	sxtw	x1, w19
  43857c:	b.gt	43853c <nftw@plt+0x359bc>
  438580:	add	x0, x1, #0x1
  438584:	add	x0, x22, x0, lsl #3
  438588:	ldr	x23, [x0]
  43858c:	cbnz	x23, 43854c <nftw@plt+0x359cc>
  438590:	add	w19, w19, #0x1
  438594:	cmp	w21, w19
  438598:	b.hi	43852c <nftw@plt+0x359ac>  // b.pmore
  43859c:	b	43835c <nftw@plt+0x357dc>
  4385a0:	mov	w0, #0x1                   	// #1
  4385a4:	strb	w0, [x20, #160]
  4385a8:	cbz	w21, 43835c <nftw@plt+0x357dc>
  4385ac:	add	x22, x20, #0x78
  4385b0:	mov	w19, #0x0                   	// #0
  4385b4:	mov	x24, #0xfffffffffffffff0    	// #-16
  4385b8:	add	x2, x24, w19, sxtw #3
  4385bc:	cmp	w19, #0x1
  4385c0:	sxtw	x1, w19
  4385c4:	b.le	438610 <nftw@plt+0x35a90>
  4385c8:	ldr	x0, [x22, #32]
  4385cc:	add	x0, x0, x2
  4385d0:	ldr	x23, [x0]
  4385d4:	cbz	x23, 438600 <nftw@plt+0x35a80>
  4385d8:	ldr	x0, [x23, #8]
  4385dc:	add	w19, w19, #0x1
  4385e0:	bl	402910 <free@plt>
  4385e4:	mov	x0, x23
  4385e8:	mov	x1, #0x18                  	// #24
  4385ec:	bl	461b00 <_obstack_memory_used@@Base+0x6b8>
  4385f0:	ldr	w21, [x20, #120]
  4385f4:	cmp	w21, w19
  4385f8:	b.hi	4385b8 <nftw@plt+0x35a38>  // b.pmore
  4385fc:	b	43835c <nftw@plt+0x357dc>
  438600:	add	w19, w19, #0x1
  438604:	cmp	w21, w19
  438608:	b.hi	4385b8 <nftw@plt+0x35a38>  // b.pmore
  43860c:	b	43835c <nftw@plt+0x357dc>
  438610:	add	x0, x1, #0x1
  438614:	add	x0, x22, x0, lsl #3
  438618:	b	4385d0 <nftw@plt+0x35a50>
  43861c:	mov	w0, #0x1                   	// #1
  438620:	strb	w0, [x20, #160]
  438624:	cbz	w21, 43835c <nftw@plt+0x357dc>
  438628:	add	x22, x20, #0x78
  43862c:	mov	w19, #0x0                   	// #0
  438630:	mov	x24, #0xfffffffffffffff0    	// #-16
  438634:	nop
  438638:	add	x1, x24, w19, sxtw #3
  43863c:	cmp	w19, #0x1
  438640:	sxtw	x0, w19
  438644:	b.le	438690 <nftw@plt+0x35b10>
  438648:	ldr	x0, [x22, #32]
  43864c:	add	x0, x0, x1
  438650:	ldr	x23, [x0]
  438654:	cbz	x23, 438680 <nftw@plt+0x35b00>
  438658:	ldr	x0, [x23, #8]
  43865c:	add	w19, w19, #0x1
  438660:	bl	402910 <free@plt>
  438664:	mov	x0, x23
  438668:	mov	x1, #0x18                  	// #24
  43866c:	bl	461b00 <_obstack_memory_used@@Base+0x6b8>
  438670:	ldr	w21, [x20, #120]
  438674:	cmp	w21, w19
  438678:	b.hi	438638 <nftw@plt+0x35ab8>  // b.pmore
  43867c:	b	43835c <nftw@plt+0x357dc>
  438680:	add	w19, w19, #0x1
  438684:	cmp	w21, w19
  438688:	b.hi	438638 <nftw@plt+0x35ab8>  // b.pmore
  43868c:	b	43835c <nftw@plt+0x357dc>
  438690:	add	x0, x0, #0x1
  438694:	add	x0, x22, x0, lsl #3
  438698:	b	438650 <nftw@plt+0x35ad0>
  43869c:	add	x1, x22, w1, sxtw #3
  4386a0:	ldp	x23, x24, [sp, #48]
  4386a4:	str	x21, [x1, #8]
  4386a8:	ldp	x21, x22, [sp, #32]
  4386ac:	b	4382ec <nftw@plt+0x3576c>
  4386b0:	add	x21, x0, #0x1
  4386b4:	add	x22, x20, #0x78
  4386b8:	add	x21, x22, x21, lsl #3
  4386bc:	b	438250 <nftw@plt+0x356d0>
  4386c0:	mov	w0, #0x1                   	// #1
  4386c4:	strb	w0, [x20, #160]
  4386c8:	cbz	w21, 43835c <nftw@plt+0x357dc>
  4386cc:	add	x22, x20, #0x78
  4386d0:	mov	w19, #0x0                   	// #0
  4386d4:	mov	x24, #0xfffffffffffffff0    	// #-16
  4386d8:	add	x2, x24, w19, sxtw #3
  4386dc:	cmp	w19, #0x1
  4386e0:	sxtw	x1, w19
  4386e4:	b.le	438730 <nftw@plt+0x35bb0>
  4386e8:	ldr	x0, [x22, #32]
  4386ec:	add	x0, x0, x2
  4386f0:	ldr	x23, [x0]
  4386f4:	cbz	x23, 438720 <nftw@plt+0x35ba0>
  4386f8:	ldr	x0, [x23, #8]
  4386fc:	add	w19, w19, #0x1
  438700:	bl	402910 <free@plt>
  438704:	mov	x0, x23
  438708:	mov	x1, #0x18                  	// #24
  43870c:	bl	461b00 <_obstack_memory_used@@Base+0x6b8>
  438710:	ldr	w21, [x20, #120]
  438714:	cmp	w21, w19
  438718:	b.hi	4386d8 <nftw@plt+0x35b58>  // b.pmore
  43871c:	b	43835c <nftw@plt+0x357dc>
  438720:	add	w19, w19, #0x1
  438724:	cmp	w21, w19
  438728:	b.hi	4386d8 <nftw@plt+0x35b58>  // b.pmore
  43872c:	b	43835c <nftw@plt+0x357dc>
  438730:	add	x0, x1, #0x1
  438734:	add	x0, x22, x0, lsl #3
  438738:	b	4386f0 <nftw@plt+0x35b70>
  43873c:	lsl	w1, w1, #1
  438740:	str	w1, [x22, #24]
  438744:	sbfiz	x1, x1, #3, #32
  438748:	bl	4615e8 <_obstack_memory_used@@Base+0x1a0>
  43874c:	str	x0, [x22, #32]
  438750:	b	4382e0 <nftw@plt+0x35760>
  438754:	mov	w0, #0x1                   	// #1
  438758:	strb	w0, [x20, #160]
  43875c:	cbz	w21, 43835c <nftw@plt+0x357dc>
  438760:	add	x22, x20, #0x78
  438764:	mov	w19, #0x0                   	// #0
  438768:	mov	x24, #0xfffffffffffffff0    	// #-16
  43876c:	nop
  438770:	add	x1, x24, w19, sxtw #3
  438774:	cmp	w19, #0x1
  438778:	sxtw	x0, w19
  43877c:	b.le	4387c8 <nftw@plt+0x35c48>
  438780:	ldr	x0, [x22, #32]
  438784:	add	x0, x0, x1
  438788:	ldr	x23, [x0]
  43878c:	cbz	x23, 4387b8 <nftw@plt+0x35c38>
  438790:	ldr	x0, [x23, #8]
  438794:	add	w19, w19, #0x1
  438798:	bl	402910 <free@plt>
  43879c:	mov	x0, x23
  4387a0:	mov	x1, #0x18                  	// #24
  4387a4:	bl	461b00 <_obstack_memory_used@@Base+0x6b8>
  4387a8:	ldr	w21, [x20, #120]
  4387ac:	cmp	w21, w19
  4387b0:	b.hi	438770 <nftw@plt+0x35bf0>  // b.pmore
  4387b4:	b	43835c <nftw@plt+0x357dc>
  4387b8:	add	w19, w19, #0x1
  4387bc:	cmp	w21, w19
  4387c0:	b.hi	438770 <nftw@plt+0x35bf0>  // b.pmore
  4387c4:	b	43835c <nftw@plt+0x357dc>
  4387c8:	add	x0, x0, #0x1
  4387cc:	add	x0, x22, x0, lsl #3
  4387d0:	b	438788 <nftw@plt+0x35c08>
  4387d4:	mov	w0, #0x10                  	// #16
  4387d8:	str	w0, [x22, #24]
  4387dc:	mov	x0, #0x80                  	// #128
  4387e0:	bl	461560 <_obstack_memory_used@@Base+0x118>
  4387e4:	str	x0, [x22, #32]
  4387e8:	b	4382e0 <nftw@plt+0x35760>
  4387ec:	nop
  4387f0:	mov	x9, x0
  4387f4:	mov	x3, x2
  4387f8:	ldr	x0, [x0]
  4387fc:	tbnz	w1, #31, 438834 <nftw@plt+0x35cb4>
  438800:	cmp	w1, #0x1
  438804:	b.ls	438828 <nftw@plt+0x35ca8>  // b.plast
  438808:	ldr	w2, [x0, #36]
  43880c:	cbz	w2, 438854 <nftw@plt+0x35cd4>
  438810:	sub	w2, w2, #0x1
  438814:	ldr	x4, [x0, #24]
  438818:	sbfiz	x2, x2, #5, #32
  43881c:	ldr	w2, [x4, x2]
  438820:	cmp	w1, w2
  438824:	b.cc	438854 <nftw@plt+0x35cd4>  // b.lo, b.ul, b.last
  438828:	mov	x0, x9
  43882c:	mov	w2, w1
  438830:	b	438168 <nftw@plt+0x355e8>
  438834:	ldr	x0, [x0, #104]
  438838:	and	w1, w1, #0x7fffffff
  43883c:	mov	w2, #0x18                  	// #24
  438840:	umaddl	x1, w1, w2, x0
  438844:	mov	x0, x9
  438848:	ldr	w1, [x1, #4]
  43884c:	mov	w2, w1
  438850:	b	438168 <nftw@plt+0x355e8>
  438854:	mov	w2, #0x50000000            	// #1342177280
  438858:	cmp	w1, w2
  43885c:	b.hi	438828 <nftw@plt+0x35ca8>  // b.pmore
  438860:	stp	x29, x30, [sp, #-32]!
  438864:	mov	x29, sp
  438868:	str	w1, [sp, #20]
  43886c:	str	x3, [sp, #24]
  438870:	bl	435de8 <nftw@plt+0x33268>
  438874:	ldr	w1, [sp, #20]
  438878:	mov	w2, #0xffffffff            	// #-1
  43887c:	ldrb	w0, [x0, #7]
  438880:	ldr	x3, [sp, #24]
  438884:	ldp	x29, x30, [sp], #32
  438888:	lsl	w2, w2, w0
  43888c:	and	w1, w1, w2
  438890:	mov	x0, x9
  438894:	mov	w2, w1
  438898:	b	438168 <nftw@plt+0x355e8>
  43889c:	nop
  4388a0:	stp	x29, x30, [sp, #-64]!
  4388a4:	mov	w15, w1
  4388a8:	mov	x18, x2
  4388ac:	mov	x29, sp
  4388b0:	stp	x19, x20, [sp, #16]
  4388b4:	mov	x20, x0
  4388b8:	ldr	x0, [x0]
  4388bc:	tbnz	w1, #31, 438918 <nftw@plt+0x35d98>
  4388c0:	cmp	w1, #0x1
  4388c4:	b.ls	4388e8 <nftw@plt+0x35d68>  // b.plast
  4388c8:	ldr	w1, [x0, #36]
  4388cc:	cbz	w1, 4389ec <nftw@plt+0x35e6c>
  4388d0:	sub	w1, w1, #0x1
  4388d4:	ldr	x2, [x0, #24]
  4388d8:	sbfiz	x1, x1, #5, #32
  4388dc:	ldr	w1, [x2, x1]
  4388e0:	cmp	w15, w1
  4388e4:	b.cc	4389ec <nftw@plt+0x35e6c>  // b.lo, b.ul, b.last
  4388e8:	mov	w2, #0x1                   	// #1
  4388ec:	mov	w1, w15
  4388f0:	bl	436218 <nftw@plt+0x33698>
  4388f4:	mov	w2, w0
  4388f8:	cmp	w0, w15
  4388fc:	b.eq	438944 <nftw@plt+0x35dc4>  // b.none
  438900:	mov	x0, x20
  438904:	mov	x3, x18
  438908:	ldp	x19, x20, [sp, #16]
  43890c:	mov	w1, w2
  438910:	ldp	x29, x30, [sp], #64
  438914:	b	438168 <nftw@plt+0x355e8>
  438918:	and	w15, w1, #0x7fffffff
  43891c:	mov	w2, #0x18                  	// #24
  438920:	ldr	x1, [x0, #104]
  438924:	umaddl	x15, w15, w2, x1
  438928:	mov	w2, #0x1                   	// #1
  43892c:	ldr	w15, [x15, #8]
  438930:	mov	w1, w15
  438934:	bl	436218 <nftw@plt+0x33698>
  438938:	mov	w2, w0
  43893c:	cmp	w0, w15
  438940:	b.ne	438900 <nftw@plt+0x35d80>  // b.any
  438944:	stp	x21, x22, [sp, #32]
  438948:	mov	x22, x20
  43894c:	mov	w0, #0x1                   	// #1
  438950:	str	x23, [sp, #48]
  438954:	mov	w19, #0x0                   	// #0
  438958:	strb	w0, [x20, #160]
  43895c:	mov	x23, #0xfffffffffffffff0    	// #-16
  438960:	ldr	w0, [x22, #120]!
  438964:	cbz	w0, 4389ac <nftw@plt+0x35e2c>
  438968:	add	x3, x23, w19, sxtw #3
  43896c:	cmp	w19, #0x1
  438970:	sxtw	x2, w19
  438974:	b.le	4389e0 <nftw@plt+0x35e60>
  438978:	ldr	x1, [x22, #32]
  43897c:	add	x1, x1, x3
  438980:	ldr	x21, [x1]
  438984:	cbz	x21, 4389c4 <nftw@plt+0x35e44>
  438988:	ldr	x0, [x21, #8]
  43898c:	add	w19, w19, #0x1
  438990:	bl	402910 <free@plt>
  438994:	mov	x0, x21
  438998:	mov	x1, #0x18                  	// #24
  43899c:	bl	461b00 <_obstack_memory_used@@Base+0x6b8>
  4389a0:	ldr	w0, [x20, #120]
  4389a4:	cmp	w0, w19
  4389a8:	b.hi	438968 <nftw@plt+0x35de8>  // b.pmore
  4389ac:	ldp	x21, x22, [sp, #32]
  4389b0:	ldr	x23, [sp, #48]
  4389b4:	str	wzr, [x20, #120]
  4389b8:	ldp	x19, x20, [sp, #16]
  4389bc:	ldp	x29, x30, [sp], #64
  4389c0:	ret
  4389c4:	add	w19, w19, #0x1
  4389c8:	cmp	w0, w19
  4389cc:	b.ls	4389ac <nftw@plt+0x35e2c>  // b.plast
  4389d0:	add	x3, x23, w19, sxtw #3
  4389d4:	cmp	w19, #0x1
  4389d8:	sxtw	x2, w19
  4389dc:	b.gt	438978 <nftw@plt+0x35df8>
  4389e0:	add	x1, x2, #0x1
  4389e4:	add	x1, x22, x1, lsl #3
  4389e8:	b	438980 <nftw@plt+0x35e00>
  4389ec:	mov	w1, #0x50000000            	// #1342177280
  4389f0:	cmp	w15, w1
  4389f4:	b.hi	4388e8 <nftw@plt+0x35d68>  // b.pmore
  4389f8:	mov	w1, w15
  4389fc:	bl	435de8 <nftw@plt+0x33268>
  438a00:	ldrb	w3, [x0, #7]
  438a04:	mov	w1, #0x1                   	// #1
  438a08:	ldr	x0, [x20]
  438a0c:	lsl	w1, w1, w3
  438a10:	sub	w1, w1, #0x1
  438a14:	and	w2, w1, w15
  438a18:	bic	w15, w15, w1
  438a1c:	lsl	w2, w2, w3
  438a20:	add	w15, w15, w2
  438a24:	b	4388e8 <nftw@plt+0x35d68>
  438a28:	stp	x29, x30, [sp, #-64]!
  438a2c:	mov	x9, x1
  438a30:	mov	w18, w1
  438a34:	mov	x29, sp
  438a38:	stp	x19, x20, [sp, #16]
  438a3c:	mov	x20, x0
  438a40:	mov	x19, x2
  438a44:	ldr	x0, [x0]
  438a48:	tbz	w1, #31, 438a60 <nftw@plt+0x35ee0>
  438a4c:	and	w1, w1, #0x7fffffff
  438a50:	mov	w3, #0x18                  	// #24
  438a54:	ldr	x2, [x0, #104]
  438a58:	umull	x1, w1, w3
  438a5c:	ldr	w18, [x2, x1]
  438a60:	ldr	w3, [x0, #36]
  438a64:	mov	w1, #0x80000000            	// #-2147483648
  438a68:	cbz	w3, 438a7c <nftw@plt+0x35efc>
  438a6c:	sub	w1, w3, #0x1
  438a70:	ldr	x2, [x0, #24]
  438a74:	sbfiz	x1, x1, #5, #32
  438a78:	ldr	w1, [x2, x1]
  438a7c:	cmp	w18, #0x1
  438a80:	ccmp	w18, w1, #0x2, hi  // hi = pmore
  438a84:	b.cs	438aa8 <nftw@plt+0x35f28>  // b.hs, b.nlast
  438a88:	mov	w1, w18
  438a8c:	bl	435de8 <nftw@plt+0x33268>
  438a90:	ldrb	w2, [x0, #7]
  438a94:	mov	w1, #0xffffffff            	// #-1
  438a98:	ldr	x0, [x20]
  438a9c:	lsl	w1, w1, w2
  438aa0:	and	w18, w18, w1
  438aa4:	ldr	w3, [x0, #36]
  438aa8:	lsr	x9, x9, #32
  438aac:	mov	w15, w9
  438ab0:	tbz	w9, #31, 438ac8 <nftw@plt+0x35f48>
  438ab4:	and	w9, w9, #0x7fffffff
  438ab8:	mov	w2, #0x18                  	// #24
  438abc:	ldr	x1, [x0, #104]
  438ac0:	umull	x9, w9, w2
  438ac4:	ldr	w15, [x1, x9]
  438ac8:	mov	w1, #0x80000000            	// #-2147483648
  438acc:	cbz	w3, 438ae0 <nftw@plt+0x35f60>
  438ad0:	sub	w3, w3, #0x1
  438ad4:	ldr	x1, [x0, #24]
  438ad8:	sbfiz	x3, x3, #5, #32
  438adc:	ldr	w1, [x1, x3]
  438ae0:	cmp	w15, #0x1
  438ae4:	ccmp	w15, w1, #0x2, hi  // hi = pmore
  438ae8:	b.cs	438b08 <nftw@plt+0x35f88>  // b.hs, b.nlast
  438aec:	mov	w1, w15
  438af0:	bl	435de8 <nftw@plt+0x33268>
  438af4:	ldrb	w2, [x0, #7]
  438af8:	mov	w1, #0xffffffff            	// #-1
  438afc:	ldr	x0, [x20]
  438b00:	lsl	w1, w1, w2
  438b04:	and	w15, w15, w1
  438b08:	mov	w2, #0x1                   	// #1
  438b0c:	mov	w1, w15
  438b10:	bl	436218 <nftw@plt+0x33698>
  438b14:	mov	w2, w0
  438b18:	cmp	w0, w15
  438b1c:	b.eq	438b38 <nftw@plt+0x35fb8>  // b.none
  438b20:	mov	x3, x19
  438b24:	mov	x0, x20
  438b28:	ldp	x19, x20, [sp, #16]
  438b2c:	mov	w1, w18
  438b30:	ldp	x29, x30, [sp], #64
  438b34:	b	438168 <nftw@plt+0x355e8>
  438b38:	stp	x21, x22, [sp, #32]
  438b3c:	mov	x22, x20
  438b40:	mov	w0, #0x1                   	// #1
  438b44:	str	x23, [sp, #48]
  438b48:	mov	w19, #0x0                   	// #0
  438b4c:	strb	w0, [x20, #160]
  438b50:	mov	x23, #0xfffffffffffffff0    	// #-16
  438b54:	ldr	w0, [x22, #120]!
  438b58:	cbz	w0, 438ba4 <nftw@plt+0x36024>
  438b5c:	nop
  438b60:	add	x3, x23, w19, sxtw #3
  438b64:	cmp	w19, #0x1
  438b68:	sxtw	x2, w19
  438b6c:	b.le	438bd8 <nftw@plt+0x36058>
  438b70:	ldr	x1, [x22, #32]
  438b74:	add	x1, x1, x3
  438b78:	ldr	x21, [x1]
  438b7c:	cbz	x21, 438bbc <nftw@plt+0x3603c>
  438b80:	ldr	x0, [x21, #8]
  438b84:	add	w19, w19, #0x1
  438b88:	bl	402910 <free@plt>
  438b8c:	mov	x0, x21
  438b90:	mov	x1, #0x18                  	// #24
  438b94:	bl	461b00 <_obstack_memory_used@@Base+0x6b8>
  438b98:	ldr	w0, [x20, #120]
  438b9c:	cmp	w0, w19
  438ba0:	b.hi	438b60 <nftw@plt+0x35fe0>  // b.pmore
  438ba4:	ldp	x21, x22, [sp, #32]
  438ba8:	ldr	x23, [sp, #48]
  438bac:	str	wzr, [x20, #120]
  438bb0:	ldp	x19, x20, [sp, #16]
  438bb4:	ldp	x29, x30, [sp], #64
  438bb8:	ret
  438bbc:	add	w19, w19, #0x1
  438bc0:	cmp	w0, w19
  438bc4:	b.ls	438ba4 <nftw@plt+0x36024>  // b.plast
  438bc8:	add	x3, x23, w19, sxtw #3
  438bcc:	cmp	w19, #0x1
  438bd0:	sxtw	x2, w19
  438bd4:	b.gt	438b70 <nftw@plt+0x35ff0>
  438bd8:	add	x1, x2, #0x1
  438bdc:	add	x1, x22, x1, lsl #3
  438be0:	b	438b78 <nftw@plt+0x35ff8>
  438be4:	nop
  438be8:	ldr	w2, [x0, #16]
  438bec:	mov	x9, x0
  438bf0:	mov	x3, x1
  438bf4:	ldr	x0, [x0]
  438bf8:	tbnz	w2, #31, 438c30 <nftw@plt+0x360b0>
  438bfc:	cmp	w2, #0x1
  438c00:	b.ls	438c24 <nftw@plt+0x360a4>  // b.plast
  438c04:	ldr	w1, [x0, #36]
  438c08:	cbz	w1, 438c50 <nftw@plt+0x360d0>
  438c0c:	sub	w1, w1, #0x1
  438c10:	ldr	x4, [x0, #24]
  438c14:	sbfiz	x1, x1, #5, #32
  438c18:	ldr	w1, [x4, x1]
  438c1c:	cmp	w2, w1
  438c20:	b.cc	438c50 <nftw@plt+0x360d0>  // b.lo, b.ul, b.last
  438c24:	mov	x0, x9
  438c28:	mov	w1, w2
  438c2c:	b	438168 <nftw@plt+0x355e8>
  438c30:	ldr	x1, [x0, #104]
  438c34:	and	w2, w2, #0x7fffffff
  438c38:	mov	w0, #0x18                  	// #24
  438c3c:	umaddl	x2, w2, w0, x1
  438c40:	mov	x0, x9
  438c44:	ldr	w2, [x2, #4]
  438c48:	mov	w1, w2
  438c4c:	b	438168 <nftw@plt+0x355e8>
  438c50:	mov	w1, #0x50000000            	// #1342177280
  438c54:	cmp	w2, w1
  438c58:	b.hi	438c24 <nftw@plt+0x360a4>  // b.pmore
  438c5c:	stp	x29, x30, [sp, #-32]!
  438c60:	mov	w1, w2
  438c64:	mov	x29, sp
  438c68:	str	w2, [sp, #20]
  438c6c:	str	x3, [sp, #24]
  438c70:	bl	435de8 <nftw@plt+0x33268>
  438c74:	ldr	w2, [sp, #20]
  438c78:	mov	w1, #0xffffffff            	// #-1
  438c7c:	ldrb	w0, [x0, #7]
  438c80:	ldr	x3, [sp, #24]
  438c84:	ldp	x29, x30, [sp], #32
  438c88:	lsl	w1, w1, w0
  438c8c:	and	w2, w2, w1
  438c90:	mov	x0, x9
  438c94:	mov	w1, w2
  438c98:	b	438168 <nftw@plt+0x355e8>
  438c9c:	nop
  438ca0:	stp	x29, x30, [sp, #-64]!
  438ca4:	mov	x18, x1
  438ca8:	mov	x29, sp
  438cac:	ldr	w15, [x0, #16]
  438cb0:	stp	x19, x20, [sp, #16]
  438cb4:	mov	x20, x0
  438cb8:	ldr	x0, [x0]
  438cbc:	tbnz	w15, #31, 438d18 <nftw@plt+0x36198>
  438cc0:	cmp	w15, #0x1
  438cc4:	b.ls	438ce8 <nftw@plt+0x36168>  // b.plast
  438cc8:	ldr	w1, [x0, #36]
  438ccc:	cbz	w1, 438dec <nftw@plt+0x3626c>
  438cd0:	sub	w1, w1, #0x1
  438cd4:	ldr	x2, [x0, #24]
  438cd8:	sbfiz	x1, x1, #5, #32
  438cdc:	ldr	w1, [x2, x1]
  438ce0:	cmp	w15, w1
  438ce4:	b.cc	438dec <nftw@plt+0x3626c>  // b.lo, b.ul, b.last
  438ce8:	mov	w2, #0x1                   	// #1
  438cec:	mov	w1, w15
  438cf0:	bl	436218 <nftw@plt+0x33698>
  438cf4:	mov	w2, w0
  438cf8:	cmp	w0, w15
  438cfc:	b.eq	438d44 <nftw@plt+0x361c4>  // b.none
  438d00:	mov	x0, x20
  438d04:	mov	x3, x18
  438d08:	ldp	x19, x20, [sp, #16]
  438d0c:	mov	w1, w2
  438d10:	ldp	x29, x30, [sp], #64
  438d14:	b	438168 <nftw@plt+0x355e8>
  438d18:	ldr	x1, [x0, #104]
  438d1c:	and	w15, w15, #0x7fffffff
  438d20:	mov	w2, #0x18                  	// #24
  438d24:	umaddl	x15, w15, w2, x1
  438d28:	mov	w2, #0x1                   	// #1
  438d2c:	ldr	w15, [x15, #8]
  438d30:	mov	w1, w15
  438d34:	bl	436218 <nftw@plt+0x33698>
  438d38:	mov	w2, w0
  438d3c:	cmp	w0, w15
  438d40:	b.ne	438d00 <nftw@plt+0x36180>  // b.any
  438d44:	stp	x21, x22, [sp, #32]
  438d48:	mov	x22, x20
  438d4c:	mov	w0, #0x1                   	// #1
  438d50:	str	x23, [sp, #48]
  438d54:	mov	w19, #0x0                   	// #0
  438d58:	strb	w0, [x20, #160]
  438d5c:	mov	x23, #0xfffffffffffffff0    	// #-16
  438d60:	ldr	w0, [x22, #120]!
  438d64:	cbz	w0, 438dac <nftw@plt+0x3622c>
  438d68:	add	x3, x23, w19, sxtw #3
  438d6c:	cmp	w19, #0x1
  438d70:	sxtw	x2, w19
  438d74:	b.le	438de0 <nftw@plt+0x36260>
  438d78:	ldr	x1, [x22, #32]
  438d7c:	add	x1, x1, x3
  438d80:	ldr	x21, [x1]
  438d84:	cbz	x21, 438dc4 <nftw@plt+0x36244>
  438d88:	ldr	x0, [x21, #8]
  438d8c:	add	w19, w19, #0x1
  438d90:	bl	402910 <free@plt>
  438d94:	mov	x0, x21
  438d98:	mov	x1, #0x18                  	// #24
  438d9c:	bl	461b00 <_obstack_memory_used@@Base+0x6b8>
  438da0:	ldr	w0, [x20, #120]
  438da4:	cmp	w0, w19
  438da8:	b.hi	438d68 <nftw@plt+0x361e8>  // b.pmore
  438dac:	ldp	x21, x22, [sp, #32]
  438db0:	ldr	x23, [sp, #48]
  438db4:	str	wzr, [x20, #120]
  438db8:	ldp	x19, x20, [sp, #16]
  438dbc:	ldp	x29, x30, [sp], #64
  438dc0:	ret
  438dc4:	add	w19, w19, #0x1
  438dc8:	cmp	w0, w19
  438dcc:	b.ls	438dac <nftw@plt+0x3622c>  // b.plast
  438dd0:	add	x3, x23, w19, sxtw #3
  438dd4:	cmp	w19, #0x1
  438dd8:	sxtw	x2, w19
  438ddc:	b.gt	438d78 <nftw@plt+0x361f8>
  438de0:	add	x1, x2, #0x1
  438de4:	add	x1, x22, x1, lsl #3
  438de8:	b	438d80 <nftw@plt+0x36200>
  438dec:	mov	w1, #0x50000000            	// #1342177280
  438df0:	cmp	w15, w1
  438df4:	b.hi	438ce8 <nftw@plt+0x36168>  // b.pmore
  438df8:	mov	w1, w15
  438dfc:	bl	435de8 <nftw@plt+0x33268>
  438e00:	ldrb	w3, [x0, #7]
  438e04:	mov	w1, #0x1                   	// #1
  438e08:	ldr	x0, [x20]
  438e0c:	lsl	w1, w1, w3
  438e10:	sub	w1, w1, #0x1
  438e14:	and	w2, w1, w15
  438e18:	bic	w15, w15, w1
  438e1c:	lsl	w2, w2, w3
  438e20:	add	w15, w15, w2
  438e24:	b	438ce8 <nftw@plt+0x36168>
  438e28:	stp	x29, x30, [sp, #-64]!
  438e2c:	mov	x29, sp
  438e30:	ldr	w15, [x0, #16]
  438e34:	ldr	x1, [x0]
  438e38:	stp	x19, x20, [sp, #16]
  438e3c:	mov	x20, x0
  438e40:	ldr	w0, [x1, #36]
  438e44:	tbnz	w15, #31, 438f34 <nftw@plt+0x363b4>
  438e48:	mov	w9, w15
  438e4c:	cmp	w15, #0x1
  438e50:	b.ls	438f24 <nftw@plt+0x363a4>  // b.plast
  438e54:	cbz	w0, 438f74 <nftw@plt+0x363f4>
  438e58:	sub	w2, w0, #0x1
  438e5c:	mov	w18, w15
  438e60:	ldr	x4, [x1, #24]
  438e64:	sbfiz	x3, x2, #5, #32
  438e68:	ldr	w3, [x4, x3]
  438e6c:	cmp	w15, w3
  438e70:	b.cc	438f74 <nftw@plt+0x363f4>  // b.lo, b.ul, b.last
  438e74:	ldr	x0, [x1, #24]
  438e78:	sbfiz	x2, x2, #5, #32
  438e7c:	ldr	w2, [x0, x2]
  438e80:	cmp	w2, w15
  438e84:	ccmp	w15, #0x1, #0x0, hi  // hi = pmore
  438e88:	b.hi	438f88 <nftw@plt+0x36408>  // b.pmore
  438e8c:	mov	x0, x1
  438e90:	tbz	w9, #31, 438ea8 <nftw@plt+0x36328>
  438e94:	and	w18, w18, #0x7fffffff
  438e98:	mov	w3, #0x18                  	// #24
  438e9c:	ldr	x2, [x1, #104]
  438ea0:	umull	x18, w18, w3
  438ea4:	ldr	w18, [x2, x18]
  438ea8:	ldr	w2, [x1, #36]
  438eac:	mov	w3, #0x80000000            	// #-2147483648
  438eb0:	cbz	w2, 438ec4 <nftw@plt+0x36344>
  438eb4:	sub	w2, w2, #0x1
  438eb8:	ldr	x3, [x1, #24]
  438ebc:	sbfiz	x2, x2, #5, #32
  438ec0:	ldr	w3, [x3, x2]
  438ec4:	cmp	w18, w3
  438ec8:	ccmp	w18, #0x1, #0x0, cc  // cc = lo, ul, last
  438ecc:	b.ls	438ef0 <nftw@plt+0x36370>  // b.plast
  438ed0:	mov	x0, x1
  438ed4:	mov	w1, w18
  438ed8:	bl	435de8 <nftw@plt+0x33268>
  438edc:	ldrb	w2, [x0, #7]
  438ee0:	mov	w1, #0xffffffff            	// #-1
  438ee4:	ldr	x0, [x20]
  438ee8:	lsl	w1, w1, w2
  438eec:	and	w18, w18, w1
  438ef0:	mov	w2, #0x1                   	// #1
  438ef4:	mov	w1, w18
  438ef8:	bl	436218 <nftw@plt+0x33698>
  438efc:	mov	w2, w0
  438f00:	cmp	w0, w18
  438f04:	b.eq	438fac <nftw@plt+0x3642c>  // b.none
  438f08:	mov	x0, x20
  438f0c:	mov	w1, w15
  438f10:	ldp	x19, x20, [sp, #16]
  438f14:	adrp	x3, 472000 <_obstack_memory_used@@Base+0x10bb8>
  438f18:	ldp	x29, x30, [sp], #64
  438f1c:	add	x3, x3, #0x5c0
  438f20:	b	438168 <nftw@plt+0x355e8>
  438f24:	cbz	w0, 439054 <nftw@plt+0x364d4>
  438f28:	sub	w2, w0, #0x1
  438f2c:	mov	w18, w15
  438f30:	b	438e74 <nftw@plt+0x362f4>
  438f34:	ldr	x2, [x1, #104]
  438f38:	and	w15, w15, #0x7fffffff
  438f3c:	mov	w3, #0x18                  	// #24
  438f40:	umaddl	x2, w15, w3, x2
  438f44:	ldp	w15, w18, [x2, #4]
  438f48:	mov	w9, w18
  438f4c:	tbz	w15, #31, 438f64 <nftw@plt+0x363e4>
  438f50:	and	w15, w15, #0x7fffffff
  438f54:	mov	w3, #0x18                  	// #24
  438f58:	ldr	x2, [x1, #104]
  438f5c:	umull	x15, w15, w3
  438f60:	ldr	w15, [x2, x15]
  438f64:	mov	w2, #0x80000000            	// #-2147483648
  438f68:	cbz	w0, 438e80 <nftw@plt+0x36300>
  438f6c:	sub	w2, w0, #0x1
  438f70:	b	438e74 <nftw@plt+0x362f4>
  438f74:	mov	w2, #0x50000000            	// #1342177280
  438f78:	cmp	w15, w2
  438f7c:	b.ls	439060 <nftw@plt+0x364e0>  // b.plast
  438f80:	mov	w18, w15
  438f84:	cbnz	w0, 438f28 <nftw@plt+0x363a8>
  438f88:	mov	x0, x1
  438f8c:	mov	w1, w15
  438f90:	bl	435de8 <nftw@plt+0x33268>
  438f94:	ldrb	w0, [x0, #7]
  438f98:	mov	w2, #0xffffffff            	// #-1
  438f9c:	ldr	x1, [x20]
  438fa0:	lsl	w2, w2, w0
  438fa4:	and	w15, w15, w2
  438fa8:	b	438e8c <nftw@plt+0x3630c>
  438fac:	stp	x21, x22, [sp, #32]
  438fb0:	mov	x22, x20
  438fb4:	mov	w0, #0x1                   	// #1
  438fb8:	mov	w19, #0x0                   	// #0
  438fbc:	ldr	w2, [x22, #120]!
  438fc0:	str	x23, [sp, #48]
  438fc4:	mov	x23, #0xfffffffffffffff0    	// #-16
  438fc8:	strb	w0, [x20, #160]
  438fcc:	cbz	w2, 439014 <nftw@plt+0x36494>
  438fd0:	add	x3, x23, w19, sxtw #3
  438fd4:	cmp	w19, #0x1
  438fd8:	sxtw	x1, w19
  438fdc:	b.le	439048 <nftw@plt+0x364c8>
  438fe0:	ldr	x0, [x22, #32]
  438fe4:	add	x0, x0, x3
  438fe8:	ldr	x21, [x0]
  438fec:	cbz	x21, 43902c <nftw@plt+0x364ac>
  438ff0:	ldr	x0, [x21, #8]
  438ff4:	add	w19, w19, #0x1
  438ff8:	bl	402910 <free@plt>
  438ffc:	mov	x0, x21
  439000:	mov	x1, #0x18                  	// #24
  439004:	bl	461b00 <_obstack_memory_used@@Base+0x6b8>
  439008:	ldr	w2, [x20, #120]
  43900c:	cmp	w2, w19
  439010:	b.hi	438fd0 <nftw@plt+0x36450>  // b.pmore
  439014:	ldp	x21, x22, [sp, #32]
  439018:	ldr	x23, [sp, #48]
  43901c:	str	wzr, [x20, #120]
  439020:	ldp	x19, x20, [sp, #16]
  439024:	ldp	x29, x30, [sp], #64
  439028:	ret
  43902c:	add	w19, w19, #0x1
  439030:	cmp	w2, w19
  439034:	b.ls	439014 <nftw@plt+0x36494>  // b.plast
  439038:	add	x3, x23, w19, sxtw #3
  43903c:	cmp	w19, #0x1
  439040:	sxtw	x1, w19
  439044:	b.gt	438fe0 <nftw@plt+0x36460>
  439048:	add	x0, x1, #0x1
  43904c:	add	x0, x22, x0, lsl #3
  439050:	b	438fe8 <nftw@plt+0x36468>
  439054:	mov	x0, x1
  439058:	mov	w18, w15
  43905c:	b	438ea8 <nftw@plt+0x36328>
  439060:	mov	x0, x1
  439064:	mov	w1, w15
  439068:	bl	435de8 <nftw@plt+0x33268>
  43906c:	ldrb	w3, [x0, #7]
  439070:	mov	w2, #0x1                   	// #1
  439074:	ldr	x1, [x20]
  439078:	lsl	w18, w2, w3
  43907c:	sub	w18, w18, #0x1
  439080:	and	w18, w18, w15
  439084:	sub	w15, w15, w18
  439088:	ldr	w0, [x1, #36]
  43908c:	lsl	w18, w18, w3
  439090:	add	w18, w18, w15
  439094:	b	438f48 <nftw@plt+0x363c8>
  439098:	stp	x29, x30, [sp, #-64]!
  43909c:	lsr	x9, x1, #32
  4390a0:	mov	w15, w9
  4390a4:	mov	x29, sp
  4390a8:	stp	x19, x20, [sp, #16]
  4390ac:	mov	w18, w1
  4390b0:	mov	x20, x0
  4390b4:	ldr	x0, [x0]
  4390b8:	tbz	w1, #31, 4390d0 <nftw@plt+0x36550>
  4390bc:	and	w1, w1, #0x7fffffff
  4390c0:	mov	w3, #0x18                  	// #24
  4390c4:	ldr	x2, [x0, #104]
  4390c8:	umull	x1, w1, w3
  4390cc:	ldr	w18, [x2, x1]
  4390d0:	ldr	w1, [x0, #36]
  4390d4:	mov	w2, #0x80000000            	// #-2147483648
  4390d8:	cbz	w1, 4390ec <nftw@plt+0x3656c>
  4390dc:	sub	w2, w1, #0x1
  4390e0:	ldr	x3, [x0, #24]
  4390e4:	sbfiz	x2, x2, #5, #32
  4390e8:	ldr	w2, [x3, x2]
  4390ec:	cmp	w18, #0x1
  4390f0:	ccmp	w18, w2, #0x2, hi  // hi = pmore
  4390f4:	b.cc	439184 <nftw@plt+0x36604>  // b.lo, b.ul, b.last
  4390f8:	tbz	w9, #31, 439110 <nftw@plt+0x36590>
  4390fc:	and	w9, w9, #0x7fffffff
  439100:	mov	w3, #0x18                  	// #24
  439104:	ldr	x2, [x0, #104]
  439108:	umull	x9, w9, w3
  43910c:	ldr	w15, [x2, x9]
  439110:	mov	w2, #0x80000000            	// #-2147483648
  439114:	cbz	w1, 439128 <nftw@plt+0x365a8>
  439118:	sub	w1, w1, #0x1
  43911c:	ldr	x2, [x0, #24]
  439120:	sbfiz	x1, x1, #5, #32
  439124:	ldr	w2, [x2, x1]
  439128:	cmp	w15, #0x1
  43912c:	ccmp	w15, w2, #0x2, hi  // hi = pmore
  439130:	b.cs	439150 <nftw@plt+0x365d0>  // b.hs, b.nlast
  439134:	mov	w1, w15
  439138:	bl	435de8 <nftw@plt+0x33268>
  43913c:	ldrb	w2, [x0, #7]
  439140:	mov	w1, #0xffffffff            	// #-1
  439144:	ldr	x0, [x20]
  439148:	lsl	w1, w1, w2
  43914c:	and	w15, w15, w1
  439150:	mov	w2, #0x1                   	// #1
  439154:	mov	w1, w15
  439158:	bl	436218 <nftw@plt+0x33698>
  43915c:	mov	w2, w0
  439160:	cmp	w0, w15
  439164:	b.eq	4391a8 <nftw@plt+0x36628>  // b.none
  439168:	mov	x0, x20
  43916c:	mov	w1, w18
  439170:	ldp	x19, x20, [sp, #16]
  439174:	adrp	x3, 472000 <_obstack_memory_used@@Base+0x10bb8>
  439178:	ldp	x29, x30, [sp], #64
  43917c:	add	x3, x3, #0x5c0
  439180:	b	438168 <nftw@plt+0x355e8>
  439184:	mov	w1, w18
  439188:	bl	435de8 <nftw@plt+0x33268>
  43918c:	ldrb	w3, [x0, #7]
  439190:	mov	w2, #0xffffffff            	// #-1
  439194:	ldr	x0, [x20]
  439198:	lsl	w2, w2, w3
  43919c:	and	w18, w18, w2
  4391a0:	ldr	w1, [x0, #36]
  4391a4:	b	4390f8 <nftw@plt+0x36578>
  4391a8:	stp	x21, x22, [sp, #32]
  4391ac:	mov	x22, x20
  4391b0:	mov	w0, #0x1                   	// #1
  4391b4:	str	x23, [sp, #48]
  4391b8:	mov	w19, #0x0                   	// #0
  4391bc:	strb	w0, [x20, #160]
  4391c0:	mov	x23, #0xfffffffffffffff0    	// #-16
  4391c4:	ldr	w0, [x22, #120]!
  4391c8:	cbz	w0, 439214 <nftw@plt+0x36694>
  4391cc:	nop
  4391d0:	add	x3, x23, w19, sxtw #3
  4391d4:	cmp	w19, #0x1
  4391d8:	sxtw	x2, w19
  4391dc:	b.le	439248 <nftw@plt+0x366c8>
  4391e0:	ldr	x1, [x22, #32]
  4391e4:	add	x1, x1, x3
  4391e8:	ldr	x21, [x1]
  4391ec:	cbz	x21, 43922c <nftw@plt+0x366ac>
  4391f0:	ldr	x0, [x21, #8]
  4391f4:	add	w19, w19, #0x1
  4391f8:	bl	402910 <free@plt>
  4391fc:	mov	x0, x21
  439200:	mov	x1, #0x18                  	// #24
  439204:	bl	461b00 <_obstack_memory_used@@Base+0x6b8>
  439208:	ldr	w0, [x20, #120]
  43920c:	cmp	w0, w19
  439210:	b.hi	4391d0 <nftw@plt+0x36650>  // b.pmore
  439214:	ldp	x21, x22, [sp, #32]
  439218:	ldr	x23, [sp, #48]
  43921c:	str	wzr, [x20, #120]
  439220:	ldp	x19, x20, [sp, #16]
  439224:	ldp	x29, x30, [sp], #64
  439228:	ret
  43922c:	add	w19, w19, #0x1
  439230:	cmp	w0, w19
  439234:	b.ls	439214 <nftw@plt+0x36694>  // b.plast
  439238:	add	x3, x23, w19, sxtw #3
  43923c:	cmp	w19, #0x1
  439240:	sxtw	x2, w19
  439244:	b.gt	4391e0 <nftw@plt+0x36660>
  439248:	add	x1, x2, #0x1
  43924c:	add	x1, x22, x1, lsl #3
  439250:	b	4391e8 <nftw@plt+0x36668>
  439254:	nop
  439258:	stp	x29, x30, [sp, #-64]!
  43925c:	mov	x29, sp
  439260:	ldr	w15, [x0, #16]
  439264:	ldr	x2, [x0]
  439268:	stp	x19, x20, [sp, #16]
  43926c:	mov	x20, x0
  439270:	mov	x19, x1
  439274:	ldr	w0, [x2, #36]
  439278:	tbnz	w15, #31, 439364 <nftw@plt+0x367e4>
  43927c:	mov	w9, w15
  439280:	cmp	w15, #0x1
  439284:	b.ls	439354 <nftw@plt+0x367d4>  // b.plast
  439288:	cbz	w0, 4393a4 <nftw@plt+0x36824>
  43928c:	sub	w1, w0, #0x1
  439290:	mov	w18, w15
  439294:	ldr	x4, [x2, #24]
  439298:	sbfiz	x3, x1, #5, #32
  43929c:	ldr	w3, [x4, x3]
  4392a0:	cmp	w15, w3
  4392a4:	b.cc	4393a4 <nftw@plt+0x36824>  // b.lo, b.ul, b.last
  4392a8:	ldr	x0, [x2, #24]
  4392ac:	sbfiz	x1, x1, #5, #32
  4392b0:	ldr	w1, [x0, x1]
  4392b4:	cmp	w1, w15
  4392b8:	ccmp	w15, #0x1, #0x0, hi  // hi = pmore
  4392bc:	b.hi	4393b8 <nftw@plt+0x36838>  // b.pmore
  4392c0:	mov	x0, x2
  4392c4:	tbz	w9, #31, 4392dc <nftw@plt+0x3675c>
  4392c8:	and	w18, w18, #0x7fffffff
  4392cc:	mov	w3, #0x18                  	// #24
  4392d0:	ldr	x1, [x2, #104]
  4392d4:	umull	x18, w18, w3
  4392d8:	ldr	w18, [x1, x18]
  4392dc:	ldr	w3, [x2, #36]
  4392e0:	mov	w1, #0x80000000            	// #-2147483648
  4392e4:	cbz	w3, 4392f8 <nftw@plt+0x36778>
  4392e8:	sub	w3, w3, #0x1
  4392ec:	ldr	x1, [x2, #24]
  4392f0:	sbfiz	x3, x3, #5, #32
  4392f4:	ldr	w1, [x1, x3]
  4392f8:	cmp	w18, w1
  4392fc:	ccmp	w18, #0x1, #0x0, cc  // cc = lo, ul, last
  439300:	b.ls	439324 <nftw@plt+0x367a4>  // b.plast
  439304:	mov	w1, w18
  439308:	mov	x0, x2
  43930c:	bl	435de8 <nftw@plt+0x33268>
  439310:	ldrb	w2, [x0, #7]
  439314:	mov	w1, #0xffffffff            	// #-1
  439318:	ldr	x0, [x20]
  43931c:	lsl	w1, w1, w2
  439320:	and	w18, w18, w1
  439324:	mov	w2, #0x1                   	// #1
  439328:	mov	w1, w18
  43932c:	bl	436218 <nftw@plt+0x33698>
  439330:	mov	w2, w0
  439334:	cmp	w0, w18
  439338:	b.eq	4393dc <nftw@plt+0x3685c>  // b.none
  43933c:	mov	x3, x19
  439340:	mov	x0, x20
  439344:	ldp	x19, x20, [sp, #16]
  439348:	mov	w1, w15
  43934c:	ldp	x29, x30, [sp], #64
  439350:	b	438168 <nftw@plt+0x355e8>
  439354:	cbz	w0, 439484 <nftw@plt+0x36904>
  439358:	sub	w1, w0, #0x1
  43935c:	mov	w18, w15
  439360:	b	4392a8 <nftw@plt+0x36728>
  439364:	ldr	x1, [x2, #104]
  439368:	and	w15, w15, #0x7fffffff
  43936c:	mov	w3, #0x18                  	// #24
  439370:	umaddl	x1, w15, w3, x1
  439374:	ldp	w15, w18, [x1, #4]
  439378:	mov	w9, w18
  43937c:	tbz	w15, #31, 439394 <nftw@plt+0x36814>
  439380:	and	w15, w15, #0x7fffffff
  439384:	mov	w3, #0x18                  	// #24
  439388:	ldr	x1, [x2, #104]
  43938c:	umull	x15, w15, w3
  439390:	ldr	w15, [x1, x15]
  439394:	mov	w1, #0x80000000            	// #-2147483648
  439398:	cbz	w0, 4392b4 <nftw@plt+0x36734>
  43939c:	sub	w1, w0, #0x1
  4393a0:	b	4392a8 <nftw@plt+0x36728>
  4393a4:	mov	w1, #0x50000000            	// #1342177280
  4393a8:	cmp	w15, w1
  4393ac:	b.ls	439490 <nftw@plt+0x36910>  // b.plast
  4393b0:	mov	w18, w15
  4393b4:	cbnz	w0, 439358 <nftw@plt+0x367d8>
  4393b8:	mov	w1, w15
  4393bc:	mov	x0, x2
  4393c0:	bl	435de8 <nftw@plt+0x33268>
  4393c4:	ldrb	w0, [x0, #7]
  4393c8:	mov	w1, #0xffffffff            	// #-1
  4393cc:	ldr	x2, [x20]
  4393d0:	lsl	w1, w1, w0
  4393d4:	and	w15, w15, w1
  4393d8:	b	4392c0 <nftw@plt+0x36740>
  4393dc:	stp	x21, x22, [sp, #32]
  4393e0:	mov	x22, x20
  4393e4:	mov	w0, #0x1                   	// #1
  4393e8:	mov	w19, #0x0                   	// #0
  4393ec:	ldr	w2, [x22, #120]!
  4393f0:	str	x23, [sp, #48]
  4393f4:	mov	x23, #0xfffffffffffffff0    	// #-16
  4393f8:	strb	w0, [x20, #160]
  4393fc:	cbz	w2, 439444 <nftw@plt+0x368c4>
  439400:	add	x3, x23, w19, sxtw #3
  439404:	cmp	w19, #0x1
  439408:	sxtw	x1, w19
  43940c:	b.le	439478 <nftw@plt+0x368f8>
  439410:	ldr	x0, [x22, #32]
  439414:	add	x0, x0, x3
  439418:	ldr	x21, [x0]
  43941c:	cbz	x21, 43945c <nftw@plt+0x368dc>
  439420:	ldr	x0, [x21, #8]
  439424:	add	w19, w19, #0x1
  439428:	bl	402910 <free@plt>
  43942c:	mov	x0, x21
  439430:	mov	x1, #0x18                  	// #24
  439434:	bl	461b00 <_obstack_memory_used@@Base+0x6b8>
  439438:	ldr	w2, [x20, #120]
  43943c:	cmp	w2, w19
  439440:	b.hi	439400 <nftw@plt+0x36880>  // b.pmore
  439444:	ldp	x21, x22, [sp, #32]
  439448:	ldr	x23, [sp, #48]
  43944c:	str	wzr, [x20, #120]
  439450:	ldp	x19, x20, [sp, #16]
  439454:	ldp	x29, x30, [sp], #64
  439458:	ret
  43945c:	add	w19, w19, #0x1
  439460:	cmp	w2, w19
  439464:	b.ls	439444 <nftw@plt+0x368c4>  // b.plast
  439468:	add	x3, x23, w19, sxtw #3
  43946c:	cmp	w19, #0x1
  439470:	sxtw	x1, w19
  439474:	b.gt	439410 <nftw@plt+0x36890>
  439478:	add	x0, x1, #0x1
  43947c:	add	x0, x22, x0, lsl #3
  439480:	b	439418 <nftw@plt+0x36898>
  439484:	mov	x0, x2
  439488:	mov	w18, w15
  43948c:	b	4392dc <nftw@plt+0x3675c>
  439490:	mov	w1, w15
  439494:	mov	x0, x2
  439498:	bl	435de8 <nftw@plt+0x33268>
  43949c:	ldrb	w3, [x0, #7]
  4394a0:	mov	w1, #0x1                   	// #1
  4394a4:	ldr	x2, [x20]
  4394a8:	lsl	w18, w1, w3
  4394ac:	sub	w18, w18, #0x1
  4394b0:	and	w18, w18, w15
  4394b4:	sub	w15, w15, w18
  4394b8:	ldr	w0, [x2, #36]
  4394bc:	lsl	w18, w18, w3
  4394c0:	add	w18, w18, w15
  4394c4:	b	439378 <nftw@plt+0x367f8>
  4394c8:	stp	x29, x30, [sp, #-64]!
  4394cc:	mov	w15, w1
  4394d0:	mov	x29, sp
  4394d4:	ldr	x3, [x0]
  4394d8:	stp	x19, x20, [sp, #16]
  4394dc:	mov	x20, x0
  4394e0:	mov	x19, x2
  4394e4:	ldr	w0, [x3, #36]
  4394e8:	tbnz	w1, #31, 4395d4 <nftw@plt+0x36a54>
  4394ec:	mov	w9, w1
  4394f0:	cmp	w1, #0x1
  4394f4:	b.ls	4395c4 <nftw@plt+0x36a44>  // b.plast
  4394f8:	cbz	w0, 439614 <nftw@plt+0x36a94>
  4394fc:	sub	w1, w0, #0x1
  439500:	mov	w18, w15
  439504:	ldr	x4, [x3, #24]
  439508:	sbfiz	x2, x1, #5, #32
  43950c:	ldr	w2, [x4, x2]
  439510:	cmp	w15, w2
  439514:	b.cc	439614 <nftw@plt+0x36a94>  // b.lo, b.ul, b.last
  439518:	ldr	x0, [x3, #24]
  43951c:	sbfiz	x1, x1, #5, #32
  439520:	ldr	w1, [x0, x1]
  439524:	cmp	w15, w1
  439528:	ccmp	w15, #0x1, #0x0, cc  // cc = lo, ul, last
  43952c:	b.hi	439628 <nftw@plt+0x36aa8>  // b.pmore
  439530:	mov	x0, x3
  439534:	tbz	w9, #31, 43954c <nftw@plt+0x369cc>
  439538:	and	w18, w18, #0x7fffffff
  43953c:	mov	w2, #0x18                  	// #24
  439540:	ldr	x1, [x3, #104]
  439544:	umull	x18, w18, w2
  439548:	ldr	w18, [x1, x18]
  43954c:	ldr	w1, [x3, #36]
  439550:	mov	w2, #0x80000000            	// #-2147483648
  439554:	cbz	w1, 439568 <nftw@plt+0x369e8>
  439558:	sub	w1, w1, #0x1
  43955c:	ldr	x2, [x3, #24]
  439560:	sbfiz	x1, x1, #5, #32
  439564:	ldr	w2, [x2, x1]
  439568:	cmp	w18, w2
  43956c:	ccmp	w18, #0x1, #0x0, cc  // cc = lo, ul, last
  439570:	b.ls	439594 <nftw@plt+0x36a14>  // b.plast
  439574:	mov	w1, w18
  439578:	mov	x0, x3
  43957c:	bl	435de8 <nftw@plt+0x33268>
  439580:	ldrb	w2, [x0, #7]
  439584:	mov	w1, #0xffffffff            	// #-1
  439588:	ldr	x0, [x20]
  43958c:	lsl	w1, w1, w2
  439590:	and	w18, w18, w1
  439594:	mov	w2, #0x1                   	// #1
  439598:	mov	w1, w18
  43959c:	bl	436218 <nftw@plt+0x33698>
  4395a0:	mov	w2, w0
  4395a4:	cmp	w0, w18
  4395a8:	b.eq	43964c <nftw@plt+0x36acc>  // b.none
  4395ac:	mov	x3, x19
  4395b0:	mov	x0, x20
  4395b4:	ldp	x19, x20, [sp, #16]
  4395b8:	mov	w1, w15
  4395bc:	ldp	x29, x30, [sp], #64
  4395c0:	b	438168 <nftw@plt+0x355e8>
  4395c4:	cbz	w0, 4396f4 <nftw@plt+0x36b74>
  4395c8:	sub	w1, w0, #0x1
  4395cc:	mov	w18, w15
  4395d0:	b	439518 <nftw@plt+0x36998>
  4395d4:	and	w15, w1, #0x7fffffff
  4395d8:	mov	w2, #0x18                  	// #24
  4395dc:	ldr	x1, [x3, #104]
  4395e0:	umaddl	x1, w15, w2, x1
  4395e4:	ldp	w15, w18, [x1, #4]
  4395e8:	mov	w9, w18
  4395ec:	tbz	w15, #31, 439604 <nftw@plt+0x36a84>
  4395f0:	and	w15, w15, #0x7fffffff
  4395f4:	mov	w2, #0x18                  	// #24
  4395f8:	ldr	x1, [x3, #104]
  4395fc:	umull	x15, w15, w2
  439600:	ldr	w15, [x1, x15]
  439604:	mov	w1, #0x80000000            	// #-2147483648
  439608:	cbz	w0, 439524 <nftw@plt+0x369a4>
  43960c:	sub	w1, w0, #0x1
  439610:	b	439518 <nftw@plt+0x36998>
  439614:	mov	w1, #0x50000000            	// #1342177280
  439618:	cmp	w15, w1
  43961c:	b.ls	439700 <nftw@plt+0x36b80>  // b.plast
  439620:	mov	w18, w15
  439624:	cbnz	w0, 4395c8 <nftw@plt+0x36a48>
  439628:	mov	w1, w15
  43962c:	mov	x0, x3
  439630:	bl	435de8 <nftw@plt+0x33268>
  439634:	ldrb	w0, [x0, #7]
  439638:	mov	w1, #0xffffffff            	// #-1
  43963c:	ldr	x3, [x20]
  439640:	lsl	w1, w1, w0
  439644:	and	w15, w15, w1
  439648:	b	439530 <nftw@plt+0x369b0>
  43964c:	stp	x21, x22, [sp, #32]
  439650:	mov	x22, x20
  439654:	mov	w0, #0x1                   	// #1
  439658:	str	x23, [sp, #48]
  43965c:	mov	w19, #0x0                   	// #0
  439660:	strb	w0, [x20, #160]
  439664:	mov	x23, #0xfffffffffffffff0    	// #-16
  439668:	ldr	w0, [x22, #120]!
  43966c:	cbz	w0, 4396b4 <nftw@plt+0x36b34>
  439670:	add	x3, x23, w19, sxtw #3
  439674:	cmp	w19, #0x1
  439678:	sxtw	x2, w19
  43967c:	b.le	4396e8 <nftw@plt+0x36b68>
  439680:	ldr	x1, [x22, #32]
  439684:	add	x1, x1, x3
  439688:	ldr	x21, [x1]
  43968c:	cbz	x21, 4396cc <nftw@plt+0x36b4c>
  439690:	ldr	x0, [x21, #8]
  439694:	add	w19, w19, #0x1
  439698:	bl	402910 <free@plt>
  43969c:	mov	x0, x21
  4396a0:	mov	x1, #0x18                  	// #24
  4396a4:	bl	461b00 <_obstack_memory_used@@Base+0x6b8>
  4396a8:	ldr	w0, [x20, #120]
  4396ac:	cmp	w0, w19
  4396b0:	b.hi	439670 <nftw@plt+0x36af0>  // b.pmore
  4396b4:	ldp	x21, x22, [sp, #32]
  4396b8:	ldr	x23, [sp, #48]
  4396bc:	str	wzr, [x20, #120]
  4396c0:	ldp	x19, x20, [sp, #16]
  4396c4:	ldp	x29, x30, [sp], #64
  4396c8:	ret
  4396cc:	add	w19, w19, #0x1
  4396d0:	cmp	w0, w19
  4396d4:	b.ls	4396b4 <nftw@plt+0x36b34>  // b.plast
  4396d8:	add	x3, x23, w19, sxtw #3
  4396dc:	cmp	w19, #0x1
  4396e0:	sxtw	x2, w19
  4396e4:	b.gt	439680 <nftw@plt+0x36b00>
  4396e8:	add	x1, x2, #0x1
  4396ec:	add	x1, x22, x1, lsl #3
  4396f0:	b	439688 <nftw@plt+0x36b08>
  4396f4:	mov	x0, x3
  4396f8:	mov	w18, w1
  4396fc:	b	43954c <nftw@plt+0x369cc>
  439700:	mov	w1, w15
  439704:	mov	x0, x3
  439708:	bl	435de8 <nftw@plt+0x33268>
  43970c:	ldrb	w2, [x0, #7]
  439710:	mov	w1, #0x1                   	// #1
  439714:	ldr	x3, [x20]
  439718:	lsl	w18, w1, w2
  43971c:	sub	w18, w18, #0x1
  439720:	and	w18, w18, w15
  439724:	sub	w15, w15, w18
  439728:	ldr	w0, [x3, #36]
  43972c:	lsl	w18, w18, w2
  439730:	add	w18, w18, w15
  439734:	b	4395e8 <nftw@plt+0x36a68>
  439738:	stp	x29, x30, [sp, #-64]!
  43973c:	mov	w15, w1
  439740:	mov	x29, sp
  439744:	ldr	x2, [x0]
  439748:	stp	x19, x20, [sp, #16]
  43974c:	mov	x20, x0
  439750:	ldr	w0, [x2, #36]
  439754:	tbnz	w1, #31, 439844 <nftw@plt+0x36cc4>
  439758:	mov	w9, w1
  43975c:	cmp	w1, #0x1
  439760:	b.ls	439834 <nftw@plt+0x36cb4>  // b.plast
  439764:	cbz	w0, 439884 <nftw@plt+0x36d04>
  439768:	sub	w1, w0, #0x1
  43976c:	mov	w18, w15
  439770:	ldr	x4, [x2, #24]
  439774:	sbfiz	x3, x1, #5, #32
  439778:	ldr	w3, [x4, x3]
  43977c:	cmp	w15, w3
  439780:	b.cc	439884 <nftw@plt+0x36d04>  // b.lo, b.ul, b.last
  439784:	ldr	x0, [x2, #24]
  439788:	sbfiz	x1, x1, #5, #32
  43978c:	ldr	w1, [x0, x1]
  439790:	cmp	w15, w1
  439794:	ccmp	w15, #0x1, #0x0, cc  // cc = lo, ul, last
  439798:	b.hi	439898 <nftw@plt+0x36d18>  // b.pmore
  43979c:	mov	x0, x2
  4397a0:	tbz	w9, #31, 4397b8 <nftw@plt+0x36c38>
  4397a4:	and	w18, w18, #0x7fffffff
  4397a8:	mov	w3, #0x18                  	// #24
  4397ac:	ldr	x1, [x2, #104]
  4397b0:	umull	x18, w18, w3
  4397b4:	ldr	w18, [x1, x18]
  4397b8:	ldr	w1, [x2, #36]
  4397bc:	mov	w3, #0x80000000            	// #-2147483648
  4397c0:	cbz	w1, 4397d4 <nftw@plt+0x36c54>
  4397c4:	sub	w1, w1, #0x1
  4397c8:	ldr	x3, [x2, #24]
  4397cc:	sbfiz	x1, x1, #5, #32
  4397d0:	ldr	w3, [x3, x1]
  4397d4:	cmp	w18, w3
  4397d8:	ccmp	w18, #0x1, #0x0, cc  // cc = lo, ul, last
  4397dc:	b.ls	439800 <nftw@plt+0x36c80>  // b.plast
  4397e0:	mov	w1, w18
  4397e4:	mov	x0, x2
  4397e8:	bl	435de8 <nftw@plt+0x33268>
  4397ec:	ldrb	w2, [x0, #7]
  4397f0:	mov	w1, #0xffffffff            	// #-1
  4397f4:	ldr	x0, [x20]
  4397f8:	lsl	w1, w1, w2
  4397fc:	and	w18, w18, w1
  439800:	mov	w2, #0x1                   	// #1
  439804:	mov	w1, w18
  439808:	bl	436218 <nftw@plt+0x33698>
  43980c:	mov	w2, w0
  439810:	cmp	w0, w18
  439814:	b.eq	4398bc <nftw@plt+0x36d3c>  // b.none
  439818:	mov	x0, x20
  43981c:	mov	w1, w15
  439820:	ldp	x19, x20, [sp, #16]
  439824:	adrp	x3, 472000 <_obstack_memory_used@@Base+0x10bb8>
  439828:	ldp	x29, x30, [sp], #64
  43982c:	add	x3, x3, #0x5c0
  439830:	b	438168 <nftw@plt+0x355e8>
  439834:	cbz	w0, 439964 <nftw@plt+0x36de4>
  439838:	sub	w1, w0, #0x1
  43983c:	mov	w18, w15
  439840:	b	439784 <nftw@plt+0x36c04>
  439844:	and	w15, w1, #0x7fffffff
  439848:	mov	w3, #0x18                  	// #24
  43984c:	ldr	x1, [x2, #104]
  439850:	umaddl	x1, w15, w3, x1
  439854:	ldp	w15, w18, [x1, #4]
  439858:	mov	w9, w18
  43985c:	tbz	w15, #31, 439874 <nftw@plt+0x36cf4>
  439860:	and	w15, w15, #0x7fffffff
  439864:	mov	w3, #0x18                  	// #24
  439868:	ldr	x1, [x2, #104]
  43986c:	umull	x15, w15, w3
  439870:	ldr	w15, [x1, x15]
  439874:	mov	w1, #0x80000000            	// #-2147483648
  439878:	cbz	w0, 439790 <nftw@plt+0x36c10>
  43987c:	sub	w1, w0, #0x1
  439880:	b	439784 <nftw@plt+0x36c04>
  439884:	mov	w1, #0x50000000            	// #1342177280
  439888:	cmp	w15, w1
  43988c:	b.ls	439970 <nftw@plt+0x36df0>  // b.plast
  439890:	mov	w18, w15
  439894:	cbnz	w0, 439838 <nftw@plt+0x36cb8>
  439898:	mov	w1, w15
  43989c:	mov	x0, x2
  4398a0:	bl	435de8 <nftw@plt+0x33268>
  4398a4:	ldrb	w0, [x0, #7]
  4398a8:	mov	w1, #0xffffffff            	// #-1
  4398ac:	ldr	x2, [x20]
  4398b0:	lsl	w1, w1, w0
  4398b4:	and	w15, w15, w1
  4398b8:	b	43979c <nftw@plt+0x36c1c>
  4398bc:	stp	x21, x22, [sp, #32]
  4398c0:	mov	x22, x20
  4398c4:	mov	w0, #0x1                   	// #1
  4398c8:	str	x23, [sp, #48]
  4398cc:	mov	w19, #0x0                   	// #0
  4398d0:	strb	w0, [x20, #160]
  4398d4:	mov	x23, #0xfffffffffffffff0    	// #-16
  4398d8:	ldr	w0, [x22, #120]!
  4398dc:	cbz	w0, 439924 <nftw@plt+0x36da4>
  4398e0:	add	x3, x23, w19, sxtw #3
  4398e4:	cmp	w19, #0x1
  4398e8:	sxtw	x2, w19
  4398ec:	b.le	439958 <nftw@plt+0x36dd8>
  4398f0:	ldr	x1, [x22, #32]
  4398f4:	add	x1, x1, x3
  4398f8:	ldr	x21, [x1]
  4398fc:	cbz	x21, 43993c <nftw@plt+0x36dbc>
  439900:	ldr	x0, [x21, #8]
  439904:	add	w19, w19, #0x1
  439908:	bl	402910 <free@plt>
  43990c:	mov	x0, x21
  439910:	mov	x1, #0x18                  	// #24
  439914:	bl	461b00 <_obstack_memory_used@@Base+0x6b8>
  439918:	ldr	w0, [x20, #120]
  43991c:	cmp	w0, w19
  439920:	b.hi	4398e0 <nftw@plt+0x36d60>  // b.pmore
  439924:	ldp	x21, x22, [sp, #32]
  439928:	ldr	x23, [sp, #48]
  43992c:	str	wzr, [x20, #120]
  439930:	ldp	x19, x20, [sp, #16]
  439934:	ldp	x29, x30, [sp], #64
  439938:	ret
  43993c:	add	w19, w19, #0x1
  439940:	cmp	w0, w19
  439944:	b.ls	439924 <nftw@plt+0x36da4>  // b.plast
  439948:	add	x3, x23, w19, sxtw #3
  43994c:	cmp	w19, #0x1
  439950:	sxtw	x2, w19
  439954:	b.gt	4398f0 <nftw@plt+0x36d70>
  439958:	add	x1, x2, #0x1
  43995c:	add	x1, x22, x1, lsl #3
  439960:	b	4398f8 <nftw@plt+0x36d78>
  439964:	mov	x0, x2
  439968:	mov	w18, w1
  43996c:	b	4397b8 <nftw@plt+0x36c38>
  439970:	mov	w1, w15
  439974:	mov	x0, x2
  439978:	bl	435de8 <nftw@plt+0x33268>
  43997c:	ldrb	w3, [x0, #7]
  439980:	mov	w1, #0x1                   	// #1
  439984:	ldr	x2, [x20]
  439988:	lsl	w18, w1, w3
  43998c:	sub	w18, w18, #0x1
  439990:	and	w18, w18, w15
  439994:	sub	w15, w15, w18
  439998:	ldr	w0, [x2, #36]
  43999c:	lsl	w18, w18, w3
  4399a0:	add	w18, w18, w15
  4399a4:	b	439858 <nftw@plt+0x36cd8>
  4399a8:	stp	x29, x30, [sp, #-32]!
  4399ac:	mov	x29, sp
  4399b0:	stp	x19, x20, [sp, #16]
  4399b4:	mov	x19, x0
  4399b8:	mov	x20, x3
  4399bc:	mov	x0, x3
  4399c0:	stp	w1, w2, [x19]
  4399c4:	bl	4616a8 <_obstack_memory_used@@Base+0x260>
  4399c8:	str	x0, [x19, #8]
  4399cc:	mov	x0, x20
  4399d0:	bl	4024f0 <strlen@plt>
  4399d4:	str	x0, [x19, #16]
  4399d8:	ldp	x19, x20, [sp, #16]
  4399dc:	ldp	x29, x30, [sp], #32
  4399e0:	ret
  4399e4:	nop
  4399e8:	stp	x29, x30, [sp, #-112]!
  4399ec:	mov	x29, sp
  4399f0:	stp	x19, x20, [sp, #16]
  4399f4:	mov	x19, x0
  4399f8:	ldr	w0, [x0]
  4399fc:	mov	x20, x1
  439a00:	add	x8, sp, #0x30
  439a04:	mov	w1, #0x1                   	// #1
  439a08:	stp	x21, x22, [sp, #32]
  439a0c:	mov	w21, w2
  439a10:	bl	419d60 <nftw@plt+0x171e0>
  439a14:	ldr	x22, [sp, #48]
  439a18:	cmp	x22, x20
  439a1c:	b.eq	439a34 <nftw@plt+0x36eb4>  // b.none
  439a20:	mov	w0, #0x0                   	// #0
  439a24:	ldp	x19, x20, [sp, #16]
  439a28:	ldp	x21, x22, [sp, #32]
  439a2c:	ldp	x29, x30, [sp], #112
  439a30:	ret
  439a34:	ldr	w0, [sp, #56]
  439a38:	cmp	w0, w21
  439a3c:	b.gt	439a20 <nftw@plt+0x36ea0>
  439a40:	ldr	w0, [x19, #4]
  439a44:	add	x8, sp, #0x50
  439a48:	mov	w1, #0x1                   	// #1
  439a4c:	bl	419d60 <nftw@plt+0x171e0>
  439a50:	ldr	x0, [sp, #80]
  439a54:	cmp	x0, x22
  439a58:	b.ne	439a20 <nftw@plt+0x36ea0>  // b.any
  439a5c:	ldr	w0, [sp, #88]
  439a60:	ldp	x19, x20, [sp, #16]
  439a64:	cmp	w0, w21
  439a68:	cset	w0, ge  // ge = tcont
  439a6c:	ldp	x21, x22, [sp, #32]
  439a70:	ldp	x29, x30, [sp], #112
  439a74:	ret
  439a78:	stp	x29, x30, [sp, #-48]!
  439a7c:	mov	x29, sp
  439a80:	stp	x19, x20, [sp, #16]
  439a84:	mov	x19, x0
  439a88:	ldr	w0, [x0, #4]
  439a8c:	cmp	w0, w1
  439a90:	b.eq	439aa4 <nftw@plt+0x36f24>  // b.none
  439a94:	mov	w0, #0x0                   	// #0
  439a98:	ldp	x19, x20, [sp, #16]
  439a9c:	ldp	x29, x30, [sp], #48
  439aa0:	ret
  439aa4:	str	x21, [sp, #32]
  439aa8:	mov	x20, x3
  439aac:	str	w2, [x19, #4]
  439ab0:	mov	x0, x3
  439ab4:	bl	4024f0 <strlen@plt>
  439ab8:	mov	x21, x0
  439abc:	ldp	x0, x1, [x19, #8]
  439ac0:	add	x1, x1, #0x1
  439ac4:	add	x1, x1, x21
  439ac8:	bl	4615e8 <_obstack_memory_used@@Base+0x1a0>
  439acc:	ldr	x3, [x19, #16]
  439ad0:	str	x0, [x19, #8]
  439ad4:	mov	x1, x20
  439ad8:	mov	x2, x21
  439adc:	add	x0, x0, x3
  439ae0:	bl	402490 <memcpy@plt>
  439ae4:	ldp	x1, x2, [x19, #8]
  439ae8:	mov	w0, #0x1                   	// #1
  439aec:	add	x21, x21, x2
  439af0:	str	x21, [x19, #16]
  439af4:	strb	wzr, [x1, x21]
  439af8:	ldp	x19, x20, [sp, #16]
  439afc:	ldr	x21, [sp, #32]
  439b00:	ldp	x29, x30, [sp], #48
  439b04:	ret
  439b08:	ldr	x1, [x0, #16]
  439b0c:	cbz	x1, 439b28 <nftw@plt+0x36fa8>
  439b10:	ldr	x0, [x0, #8]
  439b14:	add	x1, x0, x1
  439b18:	ldurb	w0, [x1, #-1]
  439b1c:	cmp	w0, #0xa
  439b20:	cset	w0, eq  // eq = none
  439b24:	ret
  439b28:	mov	w0, #0x0                   	// #0
  439b2c:	ret
  439b30:	ldr	x1, [x0, #136]
  439b34:	ldr	x2, [x1, #8]
  439b38:	cbz	x2, 439b6c <nftw@plt+0x36fec>
  439b3c:	ldr	w0, [x1, #48]
  439b40:	cmp	w0, #0x1
  439b44:	b.eq	439b5c <nftw@plt+0x36fdc>  // b.none
  439b48:	cbnz	w0, 439b98 <nftw@plt+0x37018>
  439b4c:	ldr	x0, [x1, #16]
  439b50:	sub	x0, x0, #0x8
  439b54:	str	x0, [x1, #16]
  439b58:	ret
  439b5c:	ldr	x0, [x1, #16]
  439b60:	sub	x0, x0, #0x18
  439b64:	str	x0, [x1, #16]
  439b68:	ret
  439b6c:	ldr	x3, [x0, #488]
  439b70:	ldr	x1, [x0, #448]
  439b74:	ldr	w2, [x0, #496]
  439b78:	ldr	x4, [x3, #16]
  439b7c:	sub	x1, x1, #0x18
  439b80:	add	w2, w2, #0x1
  439b84:	str	x1, [x0, #448]
  439b88:	str	w2, [x0, #496]
  439b8c:	cmp	x1, x4
  439b90:	b.eq	439bd0 <nftw@plt+0x37050>  // b.none
  439b94:	ret
  439b98:	stp	x29, x30, [sp, #-16]!
  439b9c:	cmp	w0, #0x2
  439ba0:	mov	x29, sp
  439ba4:	b.ne	439c00 <nftw@plt+0x37080>  // b.any
  439ba8:	ldr	x2, [x1, #16]
  439bac:	ldr	x0, [x1, #40]
  439bb0:	sub	x2, x2, #0x8
  439bb4:	str	x2, [x1, #16]
  439bb8:	cbz	x0, 439be8 <nftw@plt+0x37068>
  439bbc:	ldr	x1, [x0, #16]
  439bc0:	sub	x1, x1, #0x4
  439bc4:	str	x1, [x0, #16]
  439bc8:	ldp	x29, x30, [sp], #16
  439bcc:	ret
  439bd0:	ldr	x1, [x3, #8]
  439bd4:	cbz	x1, 439b94 <nftw@plt+0x37014>
  439bd8:	ldr	x2, [x1, #24]
  439bdc:	str	x2, [x0, #448]
  439be0:	str	x1, [x0, #488]
  439be4:	ret
  439be8:	adrp	x2, 47d000 <_obstack_memory_used@@Base+0x1bbb8>
  439bec:	adrp	x0, 47d000 <_obstack_memory_used@@Base+0x1bbb8>
  439bf0:	add	x2, x2, #0xd10
  439bf4:	add	x0, x0, #0xd28
  439bf8:	mov	w1, #0xb9e                 	// #2974
  439bfc:	bl	402bf0 <nftw@plt+0x70>
  439c00:	adrp	x2, 47d000 <_obstack_memory_used@@Base+0x1bbb8>
  439c04:	adrp	x0, 47d000 <_obstack_memory_used@@Base+0x1bbb8>
  439c08:	add	x2, x2, #0xd10
  439c0c:	add	x0, x0, #0xd28
  439c10:	mov	w1, #0xba1                 	// #2977
  439c14:	bl	402bf0 <nftw@plt+0x70>
  439c18:	stp	x29, x30, [sp, #-80]!
  439c1c:	mov	x29, sp
  439c20:	stp	x19, x20, [sp, #16]
  439c24:	mov	x19, x0
  439c28:	ldr	x0, [x2]
  439c2c:	stp	x21, x22, [sp, #32]
  439c30:	mov	x21, x2
  439c34:	mov	x22, x3
  439c38:	stp	x23, x24, [sp, #48]
  439c3c:	mov	w23, w1
  439c40:	stp	x25, x26, [sp, #64]
  439c44:	bl	430378 <nftw@plt+0x2d7f8>
  439c48:	mov	w20, w0
  439c4c:	mov	x0, x22
  439c50:	bl	430378 <nftw@plt+0x2d7f8>
  439c54:	add	w20, w20, w0
  439c58:	mov	w3, #0x1                   	// #1
  439c5c:	add	w20, w20, #0x1
  439c60:	mov	x0, x19
  439c64:	add	x20, x20, #0xf
  439c68:	ldr	x1, [x21]
  439c6c:	and	x20, x20, #0x1fffffff0
  439c70:	sub	sp, sp, x20
  439c74:	mov	x25, sp
  439c78:	mov	x2, x25
  439c7c:	bl	4306e0 <nftw@plt+0x2db60>
  439c80:	ldr	x1, [x21]
  439c84:	mov	x24, x0
  439c88:	mov	x4, x0
  439c8c:	ldrb	w0, [x1, #4]
  439c90:	cmp	w0, #0x7
  439c94:	b.eq	439db4 <nftw@plt+0x37234>  // b.none
  439c98:	ldrb	w0, [x22, #4]
  439c9c:	cmp	w0, #0x53
  439ca0:	b.ne	439dbc <nftw@plt+0x3723c>  // b.any
  439ca4:	sub	x2, x4, x25
  439ca8:	mov	x1, x25
  439cac:	mov	w0, #0xa                   	// #10
  439cb0:	strb	w0, [x4]
  439cb4:	mov	w3, #0x1                   	// #1
  439cb8:	mov	x0, x19
  439cbc:	bl	425b90 <nftw@plt+0x23010>
  439cc0:	mov	x0, x19
  439cc4:	bl	42f460 <nftw@plt+0x2c8e0>
  439cc8:	mov	x0, x19
  439ccc:	bl	430100 <nftw@plt+0x2d580>
  439cd0:	str	x0, [x19, #448]
  439cd4:	mov	x0, x19
  439cd8:	bl	433140 <nftw@plt+0x305c0>
  439cdc:	mov	x20, x0
  439ce0:	ldr	x1, [x19]
  439ce4:	ldr	x2, [x1]
  439ce8:	ldr	x0, [x1, #32]
  439cec:	cmp	x2, x0
  439cf0:	b.eq	439dd8 <nftw@plt+0x37258>  // b.none
  439cf4:	ldr	w26, [x20]
  439cf8:	mov	x0, x19
  439cfc:	bl	425cc0 <nftw@plt+0x23140>
  439d00:	mov	x0, x19
  439d04:	bl	439b30 <nftw@plt+0x36fb0>
  439d08:	strb	wzr, [x24]
  439d0c:	mov	w24, #0x0                   	// #0
  439d10:	ldr	x2, [x21]
  439d14:	ldr	w3, [x19, #1116]
  439d18:	ldp	x0, x1, [x2]
  439d1c:	stp	x0, x1, [x20]
  439d20:	cmp	w3, #0x15
  439d24:	ldr	x0, [x2, #16]
  439d28:	str	x0, [x20, #16]
  439d2c:	ldrh	w0, [x20, #6]
  439d30:	str	x20, [x21]
  439d34:	and	w0, w0, #0xfffffff7
  439d38:	str	w26, [x20]
  439d3c:	strh	w0, [x20, #6]
  439d40:	b.ne	439d64 <nftw@plt+0x371e4>  // b.any
  439d44:	mov	sp, x29
  439d48:	mov	w0, w24
  439d4c:	ldp	x19, x20, [sp, #16]
  439d50:	ldp	x21, x22, [sp, #32]
  439d54:	ldp	x23, x24, [sp, #48]
  439d58:	ldp	x25, x26, [sp, #64]
  439d5c:	ldp	x29, x30, [sp], #80
  439d60:	ret
  439d64:	mov	x1, x22
  439d68:	mov	x0, x19
  439d6c:	bl	4307f8 <nftw@plt+0x2dc78>
  439d70:	mov	x6, x0
  439d74:	mov	x5, x25
  439d78:	mov	w2, w23
  439d7c:	mov	x0, x19
  439d80:	mov	w3, #0x0                   	// #0
  439d84:	mov	w1, #0x3                   	// #3
  439d88:	adrp	x4, 47d000 <_obstack_memory_used@@Base+0x1bbb8>
  439d8c:	add	x4, x4, #0xd40
  439d90:	bl	4275f8 <nftw@plt+0x24a78>
  439d94:	mov	sp, x29
  439d98:	mov	w0, w24
  439d9c:	ldp	x19, x20, [sp, #16]
  439da0:	ldp	x21, x22, [sp, #32]
  439da4:	ldp	x23, x24, [sp, #48]
  439da8:	ldp	x25, x26, [sp, #64]
  439dac:	ldp	x29, x30, [sp], #80
  439db0:	ret
  439db4:	ldrb	w0, [x22, #4]
  439db8:	cbnz	w0, 439e08 <nftw@plt+0x37288>
  439dbc:	mov	x2, x4
  439dc0:	mov	x1, x22
  439dc4:	mov	x0, x19
  439dc8:	mov	w3, #0x1                   	// #1
  439dcc:	bl	4306e0 <nftw@plt+0x2db60>
  439dd0:	mov	x4, x0
  439dd4:	b	439ca4 <nftw@plt+0x37124>
  439dd8:	str	x20, [x21]
  439ddc:	mov	x0, x19
  439de0:	mov	w24, #0x1                   	// #1
  439de4:	bl	425cc0 <nftw@plt+0x23140>
  439de8:	mov	sp, x29
  439dec:	mov	w0, w24
  439df0:	ldp	x19, x20, [sp, #16]
  439df4:	ldp	x21, x22, [sp, #32]
  439df8:	ldp	x23, x24, [sp, #48]
  439dfc:	ldp	x25, x26, [sp, #64]
  439e00:	ldp	x29, x30, [sp], #80
  439e04:	ret
  439e08:	mov	w0, #0x20                  	// #32
  439e0c:	strb	w0, [x4], #1
  439e10:	b	439c98 <nftw@plt+0x37118>
  439e14:	nop
  439e18:	stp	x29, x30, [sp, #-80]!
  439e1c:	mov	x29, sp
  439e20:	stp	x19, x20, [sp, #16]
  439e24:	mov	w20, w5
  439e28:	stp	x21, x22, [sp, #32]
  439e2c:	mov	x22, x0
  439e30:	mov	x21, x1
  439e34:	stp	x23, x24, [sp, #48]
  439e38:	mov	x24, x3
  439e3c:	mov	x23, x4
  439e40:	ldr	x0, [x0, #136]
  439e44:	str	x25, [sp, #64]
  439e48:	mov	x25, x2
  439e4c:	cbz	x1, 439e9c <nftw@plt+0x3731c>
  439e50:	ldr	x19, [x0]
  439e54:	cbz	x19, 439eb8 <nftw@plt+0x37338>
  439e58:	str	x19, [x22, #136]
  439e5c:	mov	w1, #0x2                   	// #2
  439e60:	str	x25, [x19, #32]
  439e64:	mov	x0, #0x18                  	// #24
  439e68:	str	w1, [x19, #48]
  439e6c:	add	x20, x23, w20, uxtw #3
  439e70:	bl	461560 <_obstack_memory_used@@Base+0x118>
  439e74:	ldr	x25, [sp, #64]
  439e78:	stp	x21, x24, [x0]
  439e7c:	str	x24, [x0, #16]
  439e80:	ldp	x21, x22, [sp, #32]
  439e84:	stp	x23, x20, [x19, #16]
  439e88:	str	x0, [x19, #40]
  439e8c:	ldp	x19, x20, [sp, #16]
  439e90:	ldp	x23, x24, [sp, #48]
  439e94:	ldp	x29, x30, [sp], #80
  439e98:	ret
  439e9c:	cbz	x0, 439ee4 <nftw@plt+0x37364>
  439ea0:	ldr	w1, [x0, #48]
  439ea4:	ldr	x21, [x0, #40]
  439ea8:	cmp	w1, #0x2
  439eac:	b.ne	439e50 <nftw@plt+0x372d0>  // b.any
  439eb0:	ldr	x21, [x21]
  439eb4:	b	439e50 <nftw@plt+0x372d0>
  439eb8:	mov	x0, #0x38                  	// #56
  439ebc:	bl	461560 <_obstack_memory_used@@Base+0x118>
  439ec0:	mov	x19, x0
  439ec4:	stp	xzr, xzr, [x0]
  439ec8:	stp	xzr, xzr, [x0, #16]
  439ecc:	stp	xzr, xzr, [x0, #32]
  439ed0:	ldr	x0, [x22, #136]
  439ed4:	str	x0, [x19, #8]
  439ed8:	str	xzr, [x19, #48]
  439edc:	str	x19, [x0]
  439ee0:	b	439e58 <nftw@plt+0x372d8>
  439ee4:	mov	x21, x0
  439ee8:	b	439e50 <nftw@plt+0x372d0>
  439eec:	nop
  439ef0:	stp	x29, x30, [sp, #-48]!
  439ef4:	mov	x29, sp
  439ef8:	stp	x19, x20, [sp, #16]
  439efc:	mov	x19, x1
  439f00:	ldrb	w1, [x1, #18]
  439f04:	and	w1, w1, #0x3
  439f08:	cmp	w1, #0x2
  439f0c:	b.eq	439f20 <nftw@plt+0x373a0>  // b.none
  439f10:	mov	w0, #0x1                   	// #1
  439f14:	ldp	x19, x20, [sp, #16]
  439f18:	ldp	x29, x30, [sp], #48
  439f1c:	ret
  439f20:	str	x21, [sp, #32]
  439f24:	mov	x20, x0
  439f28:	ldr	x21, [x19, #24]
  439f2c:	ldrb	w0, [x21, #19]
  439f30:	tbz	w0, #5, 439f48 <nftw@plt+0x373c8>
  439f34:	mov	w0, #0x1                   	// #1
  439f38:	ldp	x19, x20, [sp, #16]
  439f3c:	ldr	x21, [sp, #32]
  439f40:	ldp	x29, x30, [sp], #48
  439f44:	ret
  439f48:	ldr	w1, [x21, #8]
  439f4c:	ldr	x0, [x20, #40]
  439f50:	bl	435de8 <nftw@plt+0x33268>
  439f54:	ldr	w0, [x0, #20]
  439f58:	cbnz	w0, 439f34 <nftw@plt+0x373b4>
  439f5c:	ldr	w2, [x21, #8]
  439f60:	mov	x0, x20
  439f64:	ldr	x5, [x19]
  439f68:	adrp	x4, 47d000 <_obstack_memory_used@@Base+0x1bbb8>
  439f6c:	mov	w3, #0x0                   	// #0
  439f70:	add	x4, x4, #0xd80
  439f74:	mov	w1, #0xe                   	// #14
  439f78:	bl	427670 <nftw@plt+0x24af0>
  439f7c:	ldr	x21, [sp, #32]
  439f80:	b	439f10 <nftw@plt+0x37390>
  439f84:	nop
  439f88:	stp	x29, x30, [sp, #-80]!
  439f8c:	mov	x29, sp
  439f90:	ldr	w3, [x1, #24]
  439f94:	stp	x19, x20, [sp, #16]
  439f98:	mov	x20, x1
  439f9c:	mov	x19, x0
  439fa0:	cmp	w3, #0x5
  439fa4:	b.eq	43a068 <nftw@plt+0x374e8>  // b.none
  439fa8:	b.ls	43a038 <nftw@plt+0x374b8>  // b.plast
  439fac:	cmp	w3, #0x9
  439fb0:	b.eq	43a150 <nftw@plt+0x375d0>  // b.none
  439fb4:	b.ls	43a000 <nftw@plt+0x37480>  // b.plast
  439fb8:	cmp	w3, #0xa
  439fbc:	b.ne	43a170 <nftw@plt+0x375f0>  // b.any
  439fc0:	ldr	x1, [x0, #1040]
  439fc4:	blr	x1
  439fc8:	mov	w20, w0
  439fcc:	nop
  439fd0:	mov	x1, #0x15                  	// #21
  439fd4:	mov	x0, x19
  439fd8:	bl	431720 <nftw@plt+0x2eba0>
  439fdc:	mov	w2, w20
  439fe0:	adrp	x1, 473000 <_obstack_memory_used@@Base+0x11bb8>
  439fe4:	mov	x20, x0
  439fe8:	add	x1, x1, #0xf80
  439fec:	bl	4025b0 <sprintf@plt>
  439ff0:	mov	x0, x20
  439ff4:	ldp	x19, x20, [sp, #16]
  439ff8:	ldp	x29, x30, [sp], #80
  439ffc:	ret
  43a000:	cmp	w3, #0x6
  43a004:	b.eq	43a190 <nftw@plt+0x37610>  // b.none
  43a008:	cmp	w3, #0x8
  43a00c:	b.ne	43a170 <nftw@plt+0x375f0>  // b.any
  43a010:	stp	x21, x22, [sp, #32]
  43a014:	ldrb	w1, [x0, #1134]
  43a018:	cbnz	w1, 43a1d4 <nftw@plt+0x37654>
  43a01c:	mov	x0, x19
  43a020:	bl	42e528 <nftw@plt+0x2b9a8>
  43a024:	ldr	x20, [x0, #88]
  43a028:	mov	x21, x0
  43a02c:	cbz	x20, 43a2f8 <nftw@plt+0x37778>
  43a030:	ldp	x21, x22, [sp, #32]
  43a034:	b	439ff0 <nftw@plt+0x37470>
  43a038:	cmp	w3, #0x4
  43a03c:	b.eq	43a1a8 <nftw@plt+0x37628>  // b.none
  43a040:	cmp	w3, #0x1
  43a044:	b.hi	43a094 <nftw@plt+0x37514>  // b.pmore
  43a048:	cbnz	w3, 43a068 <nftw@plt+0x374e8>
  43a04c:	ldrb	w1, [x0, #1160]
  43a050:	ldr	x0, [x0, #40]
  43a054:	cbz	w1, 43a1ec <nftw@plt+0x3766c>
  43a058:	ldr	w1, [x0, #60]
  43a05c:	bl	436488 <nftw@plt+0x33908>
  43a060:	mov	w20, w0
  43a064:	b	439fd0 <nftw@plt+0x37450>
  43a068:	ldrb	w0, [x19, #1134]
  43a06c:	cbnz	w0, 43a23c <nftw@plt+0x376bc>
  43a070:	ldr	x0, [x19, #640]
  43a074:	cbz	x0, 43a258 <nftw@plt+0x376d8>
  43a078:	ldr	w0, [x20, #24]
  43a07c:	cmp	w0, #0x1
  43a080:	b.eq	43a21c <nftw@plt+0x3769c>  // b.none
  43a084:	ldr	x20, [x19, #648]
  43a088:	cbnz	x20, 439ff0 <nftw@plt+0x37470>
  43a08c:	mov	w20, #0x1                   	// #1
  43a090:	b	439fd0 <nftw@plt+0x37450>
  43a094:	stp	x21, x22, [sp, #32]
  43a098:	cmp	w3, #0x2
  43a09c:	b.eq	43a228 <nftw@plt+0x376a8>  // b.none
  43a0a0:	ldr	x0, [x0, #288]
  43a0a4:	bl	42e480 <nftw@plt+0x2b900>
  43a0a8:	mov	x21, x0
  43a0ac:	cbz	x0, 43a404 <nftw@plt+0x37884>
  43a0b0:	ldr	x1, [x19, #1080]
  43a0b4:	cbz	x1, 43a0c4 <nftw@plt+0x37544>
  43a0b8:	mov	x0, x21
  43a0bc:	blr	x1
  43a0c0:	mov	x21, x0
  43a0c4:	mov	x0, x21
  43a0c8:	bl	4024f0 <strlen@plt>
  43a0cc:	mov	x1, x0
  43a0d0:	mov	x0, x19
  43a0d4:	mov	x19, x1
  43a0d8:	lsl	w1, w1, #1
  43a0dc:	add	w1, w1, #0x3
  43a0e0:	bl	431720 <nftw@plt+0x2eba0>
  43a0e4:	mov	x2, x0
  43a0e8:	mov	w3, #0x22                  	// #34
  43a0ec:	mov	x20, x0
  43a0f0:	sub	w1, w19, #0x1
  43a0f4:	strb	w3, [x2], #1
  43a0f8:	cbz	w19, 43a1b8 <nftw@plt+0x37638>
  43a0fc:	mov	w3, w1
  43a100:	mov	w4, #0x5c                  	// #92
  43a104:	add	x3, x3, #0x1
  43a108:	add	x3, x21, x3
  43a10c:	b	43a120 <nftw@plt+0x375a0>
  43a110:	mov	x2, x0
  43a114:	cmp	x21, x3
  43a118:	strb	w1, [x2], #1
  43a11c:	b.eq	43a1b8 <nftw@plt+0x37638>  // b.none
  43a120:	ldrb	w1, [x21], #1
  43a124:	cmp	w1, #0x22
  43a128:	b.eq	43a144 <nftw@plt+0x375c4>  // b.none
  43a12c:	cmp	w1, #0x5c
  43a130:	b.eq	43a144 <nftw@plt+0x375c4>  // b.none
  43a134:	cmp	w1, #0xa
  43a138:	mov	x0, x2
  43a13c:	b.ne	43a110 <nftw@plt+0x37590>  // b.any
  43a140:	mov	w1, #0x6e                  	// #110
  43a144:	mov	x0, x2
  43a148:	strb	w4, [x0], #1
  43a14c:	b	43a110 <nftw@plt+0x37590>
  43a150:	ldrb	w1, [x0, #1244]
  43a154:	cbz	w1, 43a160 <nftw@plt+0x375e0>
  43a158:	ldrb	w1, [x0, #16]
  43a15c:	cbnz	w1, 43a208 <nftw@plt+0x37688>
  43a160:	ldr	w20, [x19, #1376]
  43a164:	add	w0, w20, #0x1
  43a168:	str	w0, [x19, #1376]
  43a16c:	b	439fd0 <nftw@plt+0x37450>
  43a170:	ldr	x3, [x20]
  43a174:	mov	x0, x19
  43a178:	adrp	x2, 47d000 <_obstack_memory_used@@Base+0x1bbb8>
  43a17c:	mov	w1, #0x4                   	// #4
  43a180:	add	x2, x2, #0xdb8
  43a184:	mov	w20, #0x1                   	// #1
  43a188:	bl	427178 <nftw@plt+0x245f8>
  43a18c:	b	439fd0 <nftw@plt+0x37450>
  43a190:	ldr	x0, [x0]
  43a194:	cbz	x0, 43a08c <nftw@plt+0x3750c>
  43a198:	ldrb	w0, [x0, #106]
  43a19c:	cmp	w0, #0x0
  43a1a0:	cset	w20, eq  // eq = none
  43a1a4:	b	439fd0 <nftw@plt+0x37450>
  43a1a8:	ldr	x0, [x0, #40]
  43a1ac:	ldr	w20, [x0, #48]
  43a1b0:	sub	w20, w20, #0x1
  43a1b4:	b	439fd0 <nftw@plt+0x37450>
  43a1b8:	mov	w0, #0x22                  	// #34
  43a1bc:	strh	w0, [x2]
  43a1c0:	mov	x0, x20
  43a1c4:	ldp	x19, x20, [sp, #16]
  43a1c8:	ldp	x21, x22, [sp, #32]
  43a1cc:	ldp	x29, x30, [sp], #80
  43a1d0:	ret
  43a1d4:	ldr	x3, [x20]
  43a1d8:	adrp	x2, 47d000 <_obstack_memory_used@@Base+0x1bbb8>
  43a1dc:	mov	w1, #0x14                  	// #20
  43a1e0:	add	x2, x2, #0xdd8
  43a1e4:	bl	427298 <nftw@plt+0x24718>
  43a1e8:	b	43a01c <nftw@plt+0x3749c>
  43a1ec:	mov	w1, w2
  43a1f0:	mov	x3, #0x0                   	// #0
  43a1f4:	mov	w2, #0x0                   	// #0
  43a1f8:	bl	436ea8 <nftw@plt+0x34328>
  43a1fc:	mov	w1, w0
  43a200:	ldr	x0, [x19, #40]
  43a204:	b	43a05c <nftw@plt+0x374dc>
  43a208:	adrp	x2, 47d000 <_obstack_memory_used@@Base+0x1bbb8>
  43a20c:	mov	w1, #0x3                   	// #3
  43a210:	add	x2, x2, #0xeb8
  43a214:	bl	427178 <nftw@plt+0x245f8>
  43a218:	b	43a160 <nftw@plt+0x375e0>
  43a21c:	ldr	x20, [x19, #640]
  43a220:	cbz	x20, 43a08c <nftw@plt+0x3750c>
  43a224:	b	439ff0 <nftw@plt+0x37470>
  43a228:	ldr	x0, [x0, #40]
  43a22c:	ldr	w1, [x0, #60]
  43a230:	bl	436720 <nftw@plt+0x33ba0>
  43a234:	mov	x21, x0
  43a238:	b	43a0b0 <nftw@plt+0x37530>
  43a23c:	ldr	x3, [x20]
  43a240:	mov	x0, x19
  43a244:	adrp	x2, 47d000 <_obstack_memory_used@@Base+0x1bbb8>
  43a248:	mov	w1, #0x14                  	// #20
  43a24c:	add	x2, x2, #0xdd8
  43a250:	bl	427298 <nftw@plt+0x24718>
  43a254:	b	43a070 <nftw@plt+0x374f0>
  43a258:	ldr	x0, [x19, #656]
  43a25c:	stp	x21, x22, [sp, #32]
  43a260:	cmn	x0, #0x2
  43a264:	b.eq	43a2e0 <nftw@plt+0x37760>  // b.none
  43a268:	tbnz	x0, #63, 43a394 <nftw@plt+0x37814>
  43a26c:	add	x0, x19, #0x290
  43a270:	bl	402730 <gmtime@plt>
  43a274:	mov	x21, x0
  43a278:	cbz	x21, 43a360 <nftw@plt+0x377e0>
  43a27c:	mov	x1, #0xe                   	// #14
  43a280:	mov	x0, x19
  43a284:	bl	431720 <nftw@plt+0x2eba0>
  43a288:	ldrsw	x5, [x21, #16]
  43a28c:	adrp	x2, 47e000 <_obstack_memory_used@@Base+0x1cbb8>
  43a290:	add	x2, x2, #0x5d0
  43a294:	ldr	w3, [x21, #12]
  43a298:	ldr	w4, [x21, #20]
  43a29c:	adrp	x1, 47d000 <_obstack_memory_used@@Base+0x1bbb8>
  43a2a0:	str	x0, [x19, #640]
  43a2a4:	add	x1, x1, #0xe48
  43a2a8:	ldr	x2, [x2, x5, lsl #3]
  43a2ac:	add	w4, w4, #0x76c
  43a2b0:	bl	4025b0 <sprintf@plt>
  43a2b4:	mov	x1, #0xb                   	// #11
  43a2b8:	mov	x0, x19
  43a2bc:	bl	431720 <nftw@plt+0x2eba0>
  43a2c0:	ldp	w4, w3, [x21]
  43a2c4:	adrp	x1, 47d000 <_obstack_memory_used@@Base+0x1bbb8>
  43a2c8:	ldr	w2, [x21, #8]
  43a2cc:	add	x1, x1, #0xe58
  43a2d0:	str	x0, [x19, #648]
  43a2d4:	bl	4025b0 <sprintf@plt>
  43a2d8:	ldp	x21, x22, [sp, #32]
  43a2dc:	b	43a078 <nftw@plt+0x374f8>
  43a2e0:	ldr	x1, [x19, #1056]
  43a2e4:	cbz	x1, 43a394 <nftw@plt+0x37814>
  43a2e8:	mov	x0, x19
  43a2ec:	blr	x1
  43a2f0:	str	x0, [x19, #656]
  43a2f4:	b	43a268 <nftw@plt+0x376e8>
  43a2f8:	bl	42e530 <nftw@plt+0x2b9b0>
  43a2fc:	cbz	x0, 43a3cc <nftw@plt+0x3784c>
  43a300:	bl	42e488 <nftw@plt+0x2b908>
  43a304:	cbz	x0, 43a3dc <nftw@plt+0x3785c>
  43a308:	add	x0, x0, #0x58
  43a30c:	bl	402610 <localtime@plt>
  43a310:	cbz	x0, 43a3dc <nftw@plt+0x3785c>
  43a314:	str	x23, [sp, #48]
  43a318:	bl	402a00 <asctime@plt>
  43a31c:	mov	x22, x0
  43a320:	bl	4024f0 <strlen@plt>
  43a324:	mov	x1, x0
  43a328:	mov	x0, x19
  43a32c:	mov	x19, x1
  43a330:	add	x1, x1, #0x2
  43a334:	bl	431720 <nftw@plt+0x2eba0>
  43a338:	mov	x20, x0
  43a33c:	mov	w23, #0x22                  	// #34
  43a340:	strb	w23, [x0], #1
  43a344:	mov	x1, x22
  43a348:	bl	402990 <strcpy@plt>
  43a34c:	strb	w23, [x20, x19]
  43a350:	ldr	x23, [sp, #48]
  43a354:	str	x20, [x21, #88]
  43a358:	ldp	x21, x22, [sp, #32]
  43a35c:	b	439ff0 <nftw@plt+0x37470>
  43a360:	mov	w1, #0x0                   	// #0
  43a364:	mov	x0, x19
  43a368:	adrp	x2, 47d000 <_obstack_memory_used@@Base+0x1bbb8>
  43a36c:	add	x2, x2, #0xe70
  43a370:	bl	427990 <nftw@plt+0x24e10>
  43a374:	adrp	x1, 47d000 <_obstack_memory_used@@Base+0x1bbb8>
  43a378:	adrp	x0, 47d000 <_obstack_memory_used@@Base+0x1bbb8>
  43a37c:	add	x1, x1, #0xe98
  43a380:	add	x0, x0, #0xea8
  43a384:	ldp	x21, x22, [sp, #32]
  43a388:	str	x1, [x19, #640]
  43a38c:	str	x0, [x19, #648]
  43a390:	b	43a078 <nftw@plt+0x374f8>
  43a394:	bl	402aa0 <__errno_location@plt>
  43a398:	mov	x21, x0
  43a39c:	mov	x0, #0x0                   	// #0
  43a3a0:	str	wzr, [x21]
  43a3a4:	bl	402660 <time@plt>
  43a3a8:	str	x0, [sp, #72]
  43a3ac:	cmn	x0, #0x1
  43a3b0:	b.ne	43a3bc <nftw@plt+0x3783c>  // b.any
  43a3b4:	ldr	w0, [x21]
  43a3b8:	cbnz	w0, 43a360 <nftw@plt+0x377e0>
  43a3bc:	add	x0, sp, #0x48
  43a3c0:	bl	402610 <localtime@plt>
  43a3c4:	mov	x21, x0
  43a3c8:	b	43a278 <nftw@plt+0x376f8>
  43a3cc:	ldr	x20, [x21, #88]
  43a3d0:	ldp	x21, x22, [sp, #32]
  43a3d4:	cbz	x20, 43a08c <nftw@plt+0x3750c>
  43a3d8:	b	439ff0 <nftw@plt+0x37470>
  43a3dc:	mov	x0, x19
  43a3e0:	adrp	x2, 47d000 <_obstack_memory_used@@Base+0x1bbb8>
  43a3e4:	mov	w1, #0x0                   	// #0
  43a3e8:	add	x2, x2, #0xe08
  43a3ec:	adrp	x20, 47d000 <_obstack_memory_used@@Base+0x1bbb8>
  43a3f0:	bl	427990 <nftw@plt+0x24e10>
  43a3f4:	add	x20, x20, #0xd98
  43a3f8:	str	x20, [x21, #88]
  43a3fc:	ldp	x21, x22, [sp, #32]
  43a400:	b	439ff0 <nftw@plt+0x37470>
  43a404:	adrp	x2, 47d000 <_obstack_memory_used@@Base+0x1bbb8>
  43a408:	adrp	x0, 47d000 <_obstack_memory_used@@Base+0x1bbb8>
  43a40c:	add	x2, x2, #0xe30
  43a410:	add	x0, x0, #0xd28
  43a414:	mov	w1, #0x1c5                 	// #453
  43a418:	str	x23, [sp, #48]
  43a41c:	bl	402bf0 <nftw@plt+0x70>
  43a420:	stp	x29, x30, [sp, #-80]!
  43a424:	mov	x29, sp
  43a428:	ldr	w4, [x1, #24]
  43a42c:	stp	x19, x20, [sp, #16]
  43a430:	mov	x19, x0
  43a434:	cmp	w4, #0x7
  43a438:	stp	x21, x22, [sp, #32]
  43a43c:	mov	w22, w2
  43a440:	stp	x23, x24, [sp, #48]
  43a444:	stp	x25, x26, [sp, #64]
  43a448:	b.ne	43a4a4 <nftw@plt+0x37924>  // b.any
  43a44c:	ldrb	w2, [x0, #16]
  43a450:	mov	w1, #0x0                   	// #0
  43a454:	cbz	w2, 43a478 <nftw@plt+0x378f8>
  43a458:	mov	sp, x29
  43a45c:	mov	w0, w1
  43a460:	ldp	x19, x20, [sp, #16]
  43a464:	ldp	x21, x22, [sp, #32]
  43a468:	ldp	x23, x24, [sp, #48]
  43a46c:	ldp	x25, x26, [sp, #64]
  43a470:	ldp	x29, x30, [sp], #80
  43a474:	ret
  43a478:	mov	w1, w22
  43a47c:	bl	4266b0 <nftw@plt+0x23b30>
  43a480:	mov	sp, x29
  43a484:	mov	w1, w0
  43a488:	mov	w0, w1
  43a48c:	ldp	x19, x20, [sp, #16]
  43a490:	ldp	x21, x22, [sp, #32]
  43a494:	ldp	x23, x24, [sp, #48]
  43a498:	ldp	x25, x26, [sp, #64]
  43a49c:	ldp	x29, x30, [sp], #80
  43a4a0:	ret
  43a4a4:	mov	w2, w3
  43a4a8:	mov	x21, x1
  43a4ac:	bl	439f88 <nftw@plt+0x37408>
  43a4b0:	mov	x23, x0
  43a4b4:	bl	4024f0 <strlen@plt>
  43a4b8:	mov	x20, x0
  43a4bc:	add	x0, x0, #0x10
  43a4c0:	mov	x2, x20
  43a4c4:	and	x0, x0, #0xfffffffffffffff0
  43a4c8:	mov	x1, x23
  43a4cc:	sub	sp, sp, x0
  43a4d0:	mov	x4, sp
  43a4d4:	mov	x0, x4
  43a4d8:	bl	402490 <memcpy@plt>
  43a4dc:	mov	x4, x0
  43a4e0:	mov	x1, x0
  43a4e4:	mov	x2, x20
  43a4e8:	mov	w5, #0xa                   	// #10
  43a4ec:	mov	w3, #0x1                   	// #1
  43a4f0:	strb	w5, [x4, x20]
  43a4f4:	mov	x0, x19
  43a4f8:	bl	425b90 <nftw@plt+0x23010>
  43a4fc:	mov	x0, x19
  43a500:	bl	42f460 <nftw@plt+0x2c8e0>
  43a504:	mov	x0, x19
  43a508:	bl	430100 <nftw@plt+0x2d580>
  43a50c:	str	x0, [x19, #448]
  43a510:	mov	x0, x19
  43a514:	bl	433140 <nftw@plt+0x305c0>
  43a518:	mov	x20, x0
  43a51c:	ldr	x1, [x19, #136]
  43a520:	ldr	w0, [x1, #48]
  43a524:	str	w22, [x20]
  43a528:	cmp	w0, #0x2
  43a52c:	b.eq	43a5ac <nftw@plt+0x37a2c>  // b.none
  43a530:	ldr	x2, [x1]
  43a534:	ldr	x22, [x1, #40]
  43a538:	cbz	x2, 43a660 <nftw@plt+0x37ae0>
  43a53c:	str	x2, [x19, #136]
  43a540:	add	x1, x20, #0x18
  43a544:	mov	w0, #0x1                   	// #1
  43a548:	stp	x20, x1, [x2, #16]
  43a54c:	stp	xzr, x22, [x2, #32]
  43a550:	str	w0, [x2, #48]
  43a554:	ldr	x0, [x19]
  43a558:	ldr	x1, [x0]
  43a55c:	ldr	x0, [x0, #32]
  43a560:	cmp	x1, x0
  43a564:	b.eq	43a580 <nftw@plt+0x37a00>  // b.none
  43a568:	ldr	x3, [x21]
  43a56c:	adrp	x2, 47d000 <_obstack_memory_used@@Base+0x1bbb8>
  43a570:	mov	x0, x19
  43a574:	add	x2, x2, #0xdb8
  43a578:	mov	w1, #0x4                   	// #4
  43a57c:	bl	427178 <nftw@plt+0x245f8>
  43a580:	mov	x0, x19
  43a584:	bl	425cc0 <nftw@plt+0x23140>
  43a588:	mov	sp, x29
  43a58c:	mov	w1, #0x1                   	// #1
  43a590:	mov	w0, w1
  43a594:	ldp	x19, x20, [sp, #16]
  43a598:	ldp	x21, x22, [sp, #32]
  43a59c:	ldp	x23, x24, [sp, #48]
  43a5a0:	ldp	x25, x26, [sp, #64]
  43a5a4:	ldp	x29, x30, [sp], #80
  43a5a8:	ret
  43a5ac:	mov	x0, #0x10                  	// #16
  43a5b0:	bl	461560 <_obstack_memory_used@@Base+0x118>
  43a5b4:	mov	x1, #0x8                   	// #8
  43a5b8:	mov	x24, x0
  43a5bc:	mov	x0, x19
  43a5c0:	bl	4314b0 <nftw@plt+0x2e930>
  43a5c4:	mov	x23, x0
  43a5c8:	mov	w2, w22
  43a5cc:	ldr	x0, [x19, #40]
  43a5d0:	mov	x1, x21
  43a5d4:	mov	w3, #0x1                   	// #1
  43a5d8:	bl	4358c8 <nftw@plt+0x32d48>
  43a5dc:	ldp	x22, x2, [x23, #16]
  43a5e0:	cmp	x22, x2
  43a5e4:	b.hi	43a6b8 <nftw@plt+0x37b38>  // b.pmore
  43a5e8:	ldr	x25, [x23, #8]
  43a5ec:	ldr	x2, [x19, #40]
  43a5f0:	sub	x26, x22, x25
  43a5f4:	ubfx	x26, x26, #3, #32
  43a5f8:	ldr	w3, [x2, #112]
  43a5fc:	cbz	x0, 43a614 <nftw@plt+0x37a94>
  43a600:	mov	w2, w3
  43a604:	mov	w1, #0x0                   	// #0
  43a608:	bl	435980 <nftw@plt+0x32e00>
  43a60c:	mov	w3, w0
  43a610:	ldr	x25, [x23, #8]
  43a614:	mov	x1, x22
  43a618:	ldr	x0, [x19, #136]
  43a61c:	str	w3, [x24, x26, lsl #2]
  43a620:	str	x20, [x1], #8
  43a624:	ldr	x20, [x0]
  43a628:	str	x1, [x23, #16]
  43a62c:	cbz	x20, 43a68c <nftw@plt+0x37b0c>
  43a630:	str	x20, [x19, #136]
  43a634:	mov	w1, #0x2                   	// #2
  43a638:	str	x23, [x20, #32]
  43a63c:	mov	x0, #0x18                  	// #24
  43a640:	str	w1, [x20, #48]
  43a644:	bl	461560 <_obstack_memory_used@@Base+0x118>
  43a648:	stp	x21, x24, [x0]
  43a64c:	add	x1, x25, #0x8
  43a650:	str	x24, [x0, #16]
  43a654:	stp	x25, x1, [x20, #16]
  43a658:	str	x0, [x20, #40]
  43a65c:	b	43a554 <nftw@plt+0x379d4>
  43a660:	mov	x0, #0x38                  	// #56
  43a664:	bl	461560 <_obstack_memory_used@@Base+0x118>
  43a668:	mov	x2, x0
  43a66c:	stp	xzr, xzr, [x0]
  43a670:	stp	xzr, xzr, [x0, #16]
  43a674:	stp	xzr, xzr, [x0, #32]
  43a678:	ldr	x0, [x19, #136]
  43a67c:	str	x0, [x2, #8]
  43a680:	str	xzr, [x2, #48]
  43a684:	str	x2, [x0]
  43a688:	b	43a53c <nftw@plt+0x379bc>
  43a68c:	mov	x0, #0x38                  	// #56
  43a690:	bl	461560 <_obstack_memory_used@@Base+0x118>
  43a694:	mov	x20, x0
  43a698:	stp	xzr, xzr, [x0]
  43a69c:	stp	xzr, xzr, [x0, #16]
  43a6a0:	stp	xzr, xzr, [x0, #32]
  43a6a4:	ldr	x0, [x19, #136]
  43a6a8:	str	x0, [x20, #8]
  43a6ac:	str	xzr, [x20, #48]
  43a6b0:	str	x20, [x0]
  43a6b4:	b	43a630 <nftw@plt+0x37ab0>
  43a6b8:	adrp	x2, 47d000 <_obstack_memory_used@@Base+0x1bbb8>
  43a6bc:	adrp	x0, 47d000 <_obstack_memory_used@@Base+0x1bbb8>
  43a6c0:	add	x2, x2, #0xef8
  43a6c4:	add	x0, x0, #0xd28
  43a6c8:	mov	w1, #0x953                 	// #2387
  43a6cc:	bl	402bf0 <nftw@plt+0x70>
  43a6d0:	sub	w3, w2, #0x1
  43a6d4:	cbz	w2, 43a738 <nftw@plt+0x37bb8>
  43a6d8:	mov	w4, w3
  43a6dc:	mov	w5, #0x5c                  	// #92
  43a6e0:	add	x4, x4, #0x1
  43a6e4:	add	x4, x1, x4
  43a6e8:	b	43a6fc <nftw@plt+0x37b7c>
  43a6ec:	mov	x0, x3
  43a6f0:	cmp	x1, x4
  43a6f4:	strb	w2, [x0], #1
  43a6f8:	b.eq	43a738 <nftw@plt+0x37bb8>  // b.none
  43a6fc:	ldrb	w2, [x1], #1
  43a700:	mov	x3, x0
  43a704:	cmp	w2, #0x22
  43a708:	b.eq	43a720 <nftw@plt+0x37ba0>  // b.none
  43a70c:	cmp	w2, #0x5c
  43a710:	b.eq	43a720 <nftw@plt+0x37ba0>  // b.none
  43a714:	cmp	w2, #0xa
  43a718:	b.ne	43a6ec <nftw@plt+0x37b6c>  // b.any
  43a71c:	mov	w2, #0x6e                  	// #110
  43a720:	mov	x3, x0
  43a724:	cmp	x1, x4
  43a728:	strb	w5, [x3], #1
  43a72c:	mov	x0, x3
  43a730:	strb	w2, [x0], #1
  43a734:	b.ne	43a6fc <nftw@plt+0x37b7c>  // b.any
  43a738:	ret
  43a73c:	nop
  43a740:	stp	x29, x30, [sp, #-48]!
  43a744:	mov	x29, sp
  43a748:	ldrh	w4, [x1, #16]
  43a74c:	stp	x19, x20, [sp, #16]
  43a750:	mov	w19, #0x1                   	// #1
  43a754:	cmp	w4, w3
  43a758:	b.eq	43a7b8 <nftw@plt+0x37c38>  // b.none
  43a75c:	str	x21, [sp, #32]
  43a760:	mov	x19, x1
  43a764:	mov	w6, w3
  43a768:	mov	x20, x2
  43a76c:	mov	x21, x0
  43a770:	b.ls	43a7f4 <nftw@plt+0x37c74>  // b.plast
  43a774:	add	w1, w3, #0x1
  43a778:	cmp	w4, w1
  43a77c:	b.ne	43a788 <nftw@plt+0x37c08>  // b.any
  43a780:	ldrb	w1, [x19, #19]
  43a784:	tbnz	w1, #3, 43a814 <nftw@plt+0x37c94>
  43a788:	ldr	x3, [x20]
  43a78c:	adrp	x2, 47d000 <_obstack_memory_used@@Base+0x1bbb8>
  43a790:	mov	w5, w6
  43a794:	add	x2, x2, #0xfb0
  43a798:	mov	x0, x21
  43a79c:	mov	w1, #0x3                   	// #3
  43a7a0:	bl	427178 <nftw@plt+0x245f8>
  43a7a4:	ldr	w2, [x19, #8]
  43a7a8:	mov	w19, #0x0                   	// #0
  43a7ac:	cmp	w2, #0x2
  43a7b0:	b.hi	43a7c8 <nftw@plt+0x37c48>  // b.pmore
  43a7b4:	ldr	x21, [sp, #32]
  43a7b8:	mov	w0, w19
  43a7bc:	ldp	x19, x20, [sp, #16]
  43a7c0:	ldp	x29, x30, [sp], #48
  43a7c4:	ret
  43a7c8:	ldr	x4, [x20]
  43a7cc:	mov	x0, x21
  43a7d0:	mov	w1, #0x5                   	// #5
  43a7d4:	adrp	x3, 47e000 <_obstack_memory_used@@Base+0x1cbb8>
  43a7d8:	add	x3, x3, #0x20
  43a7dc:	bl	4277f0 <nftw@plt+0x24c70>
  43a7e0:	mov	w0, w19
  43a7e4:	ldp	x19, x20, [sp, #16]
  43a7e8:	ldr	x21, [sp, #32]
  43a7ec:	ldp	x29, x30, [sp], #48
  43a7f0:	ret
  43a7f4:	mov	w5, w4
  43a7f8:	mov	w4, w3
  43a7fc:	ldr	x3, [x20]
  43a800:	adrp	x2, 47d000 <_obstack_memory_used@@Base+0x1bbb8>
  43a804:	mov	w1, #0x3                   	// #3
  43a808:	add	x2, x2, #0xfe8
  43a80c:	bl	427178 <nftw@plt+0x245f8>
  43a810:	b	43a7a4 <nftw@plt+0x37c24>
  43a814:	ldrb	w2, [x0, #1154]
  43a818:	mov	w19, #0x1                   	// #1
  43a81c:	cbz	w2, 43a7b4 <nftw@plt+0x37c34>
  43a820:	tbnz	w1, #4, 43a7b4 <nftw@plt+0x37c34>
  43a824:	ldrb	w1, [x0, #1167]
  43a828:	cbnz	w1, 43a7b4 <nftw@plt+0x37c34>
  43a82c:	ldrb	w1, [x0, #1120]
  43a830:	cbz	w1, 43a84c <nftw@plt+0x37ccc>
  43a834:	adrp	x2, 47d000 <_obstack_memory_used@@Base+0x1bbb8>
  43a838:	mov	w1, #0x2                   	// #2
  43a83c:	add	x2, x2, #0xf10
  43a840:	bl	427178 <nftw@plt+0x245f8>
  43a844:	ldr	x21, [sp, #32]
  43a848:	b	43a7b8 <nftw@plt+0x37c38>
  43a84c:	adrp	x2, 47d000 <_obstack_memory_used@@Base+0x1bbb8>
  43a850:	mov	w1, #0x2                   	// #2
  43a854:	add	x2, x2, #0xf60
  43a858:	bl	427178 <nftw@plt+0x245f8>
  43a85c:	ldr	x21, [sp, #32]
  43a860:	b	43a7b8 <nftw@plt+0x37c38>
  43a864:	nop
  43a868:	stp	x29, x30, [sp, #-48]!
  43a86c:	mov	x29, sp
  43a870:	stp	x19, x20, [sp, #16]
  43a874:	mov	x20, x1
  43a878:	mov	w19, w3
  43a87c:	stp	x21, x22, [sp, #32]
  43a880:	mov	x21, x0
  43a884:	mov	x22, x2
  43a888:	ldr	x0, [x0, #136]
  43a88c:	cbz	x1, 43a8c4 <nftw@plt+0x37d44>
  43a890:	ldr	x4, [x0]
  43a894:	cbz	x4, 43a8e0 <nftw@plt+0x37d60>
  43a898:	mov	w2, #0x18                  	// #24
  43a89c:	str	x4, [x21, #136]
  43a8a0:	mov	w0, #0x1                   	// #1
  43a8a4:	stp	xzr, x20, [x4, #32]
  43a8a8:	umaddl	x19, w19, w2, x22
  43a8ac:	stp	x22, x19, [x4, #16]
  43a8b0:	str	w0, [x4, #48]
  43a8b4:	ldp	x19, x20, [sp, #16]
  43a8b8:	ldp	x21, x22, [sp, #32]
  43a8bc:	ldp	x29, x30, [sp], #48
  43a8c0:	ret
  43a8c4:	cbz	x0, 43a90c <nftw@plt+0x37d8c>
  43a8c8:	ldr	w1, [x0, #48]
  43a8cc:	ldr	x20, [x0, #40]
  43a8d0:	cmp	w1, #0x2
  43a8d4:	b.ne	43a890 <nftw@plt+0x37d10>  // b.any
  43a8d8:	ldr	x20, [x20]
  43a8dc:	b	43a890 <nftw@plt+0x37d10>
  43a8e0:	mov	x0, #0x38                  	// #56
  43a8e4:	bl	461560 <_obstack_memory_used@@Base+0x118>
  43a8e8:	mov	x4, x0
  43a8ec:	stp	xzr, xzr, [x0]
  43a8f0:	stp	xzr, xzr, [x0, #16]
  43a8f4:	stp	xzr, xzr, [x0, #32]
  43a8f8:	ldr	x0, [x21, #136]
  43a8fc:	str	x0, [x4, #8]
  43a900:	str	xzr, [x4, #48]
  43a904:	str	x4, [x0]
  43a908:	b	43a898 <nftw@plt+0x37d18>
  43a90c:	mov	x20, x0
  43a910:	b	43a890 <nftw@plt+0x37d10>
  43a914:	nop
  43a918:	stp	x29, x30, [sp, #-48]!
  43a91c:	mov	x29, sp
  43a920:	stp	x21, x22, [sp, #32]
  43a924:	mov	x21, x0
  43a928:	mov	x22, x2
  43a92c:	ldr	x0, [x0, #136]
  43a930:	stp	x19, x20, [sp, #16]
  43a934:	mov	x19, x1
  43a938:	mov	x20, x3
  43a93c:	ldr	x4, [x0]
  43a940:	cbz	x4, 43a978 <nftw@plt+0x37df8>
  43a944:	str	x4, [x21, #136]
  43a948:	add	x20, x22, x20
  43a94c:	mov	w0, #0x1                   	// #1
  43a950:	stp	x22, x20, [x4, #16]
  43a954:	stp	xzr, x19, [x4, #32]
  43a958:	str	w0, [x4, #48]
  43a95c:	ldrh	w0, [x19, #18]
  43a960:	orr	w0, w0, #0x40
  43a964:	strh	w0, [x19, #18]
  43a968:	ldp	x19, x20, [sp, #16]
  43a96c:	ldp	x21, x22, [sp, #32]
  43a970:	ldp	x29, x30, [sp], #48
  43a974:	ret
  43a978:	mov	x0, #0x38                  	// #56
  43a97c:	bl	461560 <_obstack_memory_used@@Base+0x118>
  43a980:	mov	x4, x0
  43a984:	stp	xzr, xzr, [x0]
  43a988:	stp	xzr, xzr, [x0, #16]
  43a98c:	stp	xzr, xzr, [x0, #32]
  43a990:	ldr	x0, [x21, #136]
  43a994:	str	x0, [x4, #8]
  43a998:	str	xzr, [x4, #48]
  43a99c:	str	x4, [x0]
  43a9a0:	b	43a944 <nftw@plt+0x37dc4>
  43a9a4:	nop
  43a9a8:	stp	x29, x30, [sp, #-48]!
  43a9ac:	mov	x29, sp
  43a9b0:	stp	x19, x20, [sp, #16]
  43a9b4:	mov	x20, x0
  43a9b8:	add	x0, x0, #0x50
  43a9bc:	stp	x21, x22, [sp, #32]
  43a9c0:	ldr	x19, [x20, #136]
  43a9c4:	cmp	x19, x0
  43a9c8:	b.eq	43aaa4 <nftw@plt+0x37f24>  // b.none
  43a9cc:	ldr	x21, [x19, #40]
  43a9d0:	cbz	x21, 43aa28 <nftw@plt+0x37ea8>
  43a9d4:	ldr	w0, [x19, #48]
  43a9d8:	cmp	w0, #0x2
  43a9dc:	b.eq	43aa54 <nftw@plt+0x37ed4>  // b.none
  43a9e0:	ldr	x0, [x19, #8]
  43a9e4:	cbz	x0, 43aa04 <nftw@plt+0x37e84>
  43a9e8:	ldr	w1, [x0, #48]
  43a9ec:	ldr	x0, [x0, #40]
  43a9f0:	cmp	w1, #0x2
  43a9f4:	b.ne	43a9fc <nftw@plt+0x37e7c>  // b.any
  43a9f8:	ldr	x0, [x0]
  43a9fc:	cmp	x0, x21
  43aa00:	b.eq	43aa28 <nftw@plt+0x37ea8>  // b.none
  43aa04:	ldrh	w0, [x21, #18]
  43aa08:	ldr	x1, [x20, #184]
  43aa0c:	mov	w2, w0
  43aa10:	ubfx	x0, x0, #2, #8
  43aa14:	and	w0, w0, #0xffffffef
  43aa18:	cmp	x1, x21
  43aa1c:	bfi	w2, w0, #2, #8
  43aa20:	strh	w2, [x21, #18]
  43aa24:	b.eq	43aa8c <nftw@plt+0x37f0c>  // b.none
  43aa28:	ldr	x0, [x19, #32]
  43aa2c:	cbz	x0, 43aa34 <nftw@plt+0x37eb4>
  43aa30:	bl	4316e8 <nftw@plt+0x2eb68>
  43aa34:	ldr	x1, [x19, #8]
  43aa38:	mov	x0, x19
  43aa3c:	ldp	x21, x22, [sp, #32]
  43aa40:	str	x1, [x20, #136]
  43aa44:	ldp	x19, x20, [sp, #16]
  43aa48:	str	xzr, [x1]
  43aa4c:	ldp	x29, x30, [sp], #48
  43aa50:	b	402910 <free@plt>
  43aa54:	ldr	x0, [x19, #32]
  43aa58:	ldr	x22, [x21]
  43aa5c:	cbz	x0, 43aa6c <nftw@plt+0x37eec>
  43aa60:	ldr	x0, [x21, #8]
  43aa64:	cbz	x0, 43aa6c <nftw@plt+0x37eec>
  43aa68:	bl	402910 <free@plt>
  43aa6c:	mov	x0, x21
  43aa70:	bl	402910 <free@plt>
  43aa74:	str	xzr, [x19, #40]
  43aa78:	cbnz	x22, 43aa9c <nftw@plt+0x37f1c>
  43aa7c:	ldr	x1, [x20, #184]
  43aa80:	mov	x21, #0x0                   	// #0
  43aa84:	cmp	x1, x21
  43aa88:	b.ne	43aa28 <nftw@plt+0x37ea8>  // b.any
  43aa8c:	ldr	x0, [x19, #8]
  43aa90:	cbnz	x0, 43aa28 <nftw@plt+0x37ea8>
  43aa94:	str	xzr, [x20, #184]
  43aa98:	b	43aa28 <nftw@plt+0x37ea8>
  43aa9c:	mov	x21, x22
  43aaa0:	b	43a9e0 <nftw@plt+0x37e60>
  43aaa4:	adrp	x2, 47e000 <_obstack_memory_used@@Base+0x1cbb8>
  43aaa8:	adrp	x0, 47d000 <_obstack_memory_used@@Base+0x1bbb8>
  43aaac:	add	x2, x2, #0x38
  43aab0:	add	x0, x0, #0xd28
  43aab4:	mov	w1, #0x9eb                 	// #2539
  43aab8:	bl	402bf0 <nftw@plt+0x70>
  43aabc:	nop
  43aac0:	ldr	x0, [x0, #136]
  43aac4:	ldr	w2, [x0, #48]
  43aac8:	ldr	x1, [x0, #40]
  43aacc:	cmp	w2, #0x2
  43aad0:	b.ne	43aad8 <nftw@plt+0x37f58>  // b.any
  43aad4:	ldr	x1, [x1]
  43aad8:	mov	w0, #0x0                   	// #0
  43aadc:	cbz	x1, 43aaf0 <nftw@plt+0x37f70>
  43aae0:	ldr	x1, [x1, #24]
  43aae4:	cbz	x1, 43aaf0 <nftw@plt+0x37f70>
  43aae8:	ldrb	w0, [x1, #19]
  43aaec:	ubfx	x0, x0, #4, #1
  43aaf0:	ret
  43aaf4:	nop
  43aaf8:	ldr	w3, [x0, #496]
  43aafc:	sub	w2, w1, #0x1
  43ab00:	add	w3, w3, w1
  43ab04:	str	w3, [x0, #496]
  43ab08:	cbz	w1, 43ab58 <nftw@plt+0x37fd8>
  43ab0c:	ldr	x1, [x0, #448]
  43ab10:	ldr	x4, [x0, #488]
  43ab14:	b	43ab24 <nftw@plt+0x37fa4>
  43ab18:	sub	w2, w2, #0x1
  43ab1c:	cmn	w2, #0x1
  43ab20:	b.eq	43ab54 <nftw@plt+0x37fd4>  // b.none
  43ab24:	ldr	x3, [x4, #16]
  43ab28:	sub	x1, x1, #0x18
  43ab2c:	cmp	x1, x3
  43ab30:	b.ne	43ab18 <nftw@plt+0x37f98>  // b.any
  43ab34:	ldr	x3, [x4, #8]
  43ab38:	cbz	x3, 43ab18 <nftw@plt+0x37f98>
  43ab3c:	ldr	x1, [x3, #24]
  43ab40:	str	x3, [x0, #488]
  43ab44:	sub	w2, w2, #0x1
  43ab48:	mov	x4, x3
  43ab4c:	cmn	w2, #0x1
  43ab50:	b.ne	43ab24 <nftw@plt+0x37fa4>  // b.any
  43ab54:	str	x1, [x0, #448]
  43ab58:	ret
  43ab5c:	nop
  43ab60:	ldr	x2, [x0, #136]
  43ab64:	ldr	x3, [x2, #8]
  43ab68:	cbz	x3, 43abb4 <nftw@plt+0x38034>
  43ab6c:	stp	x29, x30, [sp, #-16]!
  43ab70:	cmp	w1, #0x1
  43ab74:	mov	x29, sp
  43ab78:	b.ne	43ac4c <nftw@plt+0x380cc>  // b.any
  43ab7c:	ldr	w0, [x2, #48]
  43ab80:	cmp	w0, #0x1
  43ab84:	b.eq	43aba0 <nftw@plt+0x38020>  // b.none
  43ab88:	cbnz	w0, 43ac1c <nftw@plt+0x3809c>
  43ab8c:	ldr	x0, [x2, #16]
  43ab90:	sub	x0, x0, #0x8
  43ab94:	str	x0, [x2, #16]
  43ab98:	ldp	x29, x30, [sp], #16
  43ab9c:	ret
  43aba0:	ldr	x0, [x2, #16]
  43aba4:	sub	x0, x0, #0x18
  43aba8:	str	x0, [x2, #16]
  43abac:	ldp	x29, x30, [sp], #16
  43abb0:	ret
  43abb4:	ldr	w3, [x0, #496]
  43abb8:	sub	w2, w1, #0x1
  43abbc:	add	w3, w3, w1
  43abc0:	str	w3, [x0, #496]
  43abc4:	cbz	w1, 43ac18 <nftw@plt+0x38098>
  43abc8:	ldr	x1, [x0, #448]
  43abcc:	ldr	x4, [x0, #488]
  43abd0:	b	43abe0 <nftw@plt+0x38060>
  43abd4:	sub	w2, w2, #0x1
  43abd8:	cmn	w2, #0x1
  43abdc:	b.eq	43ac10 <nftw@plt+0x38090>  // b.none
  43abe0:	ldr	x3, [x4, #16]
  43abe4:	sub	x1, x1, #0x18
  43abe8:	cmp	x1, x3
  43abec:	b.ne	43abd4 <nftw@plt+0x38054>  // b.any
  43abf0:	ldr	x3, [x4, #8]
  43abf4:	cbz	x3, 43abd4 <nftw@plt+0x38054>
  43abf8:	ldr	x1, [x3, #24]
  43abfc:	str	x3, [x0, #488]
  43ac00:	sub	w2, w2, #0x1
  43ac04:	mov	x4, x3
  43ac08:	cmn	w2, #0x1
  43ac0c:	b.ne	43abe0 <nftw@plt+0x38060>  // b.any
  43ac10:	str	x1, [x0, #448]
  43ac14:	ret
  43ac18:	ret
  43ac1c:	cmp	w0, #0x2
  43ac20:	b.ne	43ac64 <nftw@plt+0x380e4>  // b.any
  43ac24:	ldr	x1, [x2, #16]
  43ac28:	ldr	x0, [x2, #40]
  43ac2c:	sub	x1, x1, #0x8
  43ac30:	str	x1, [x2, #16]
  43ac34:	cbz	x0, 43ac7c <nftw@plt+0x380fc>
  43ac38:	ldr	x1, [x0, #16]
  43ac3c:	sub	x1, x1, #0x4
  43ac40:	str	x1, [x0, #16]
  43ac44:	ldp	x29, x30, [sp], #16
  43ac48:	ret
  43ac4c:	adrp	x2, 47d000 <_obstack_memory_used@@Base+0x1bbb8>
  43ac50:	adrp	x0, 47d000 <_obstack_memory_used@@Base+0x1bbb8>
  43ac54:	add	x2, x2, #0xd10
  43ac58:	add	x0, x0, #0xd28
  43ac5c:	mov	w1, #0xb8f                 	// #2959
  43ac60:	bl	402bf0 <nftw@plt+0x70>
  43ac64:	adrp	x2, 47d000 <_obstack_memory_used@@Base+0x1bbb8>
  43ac68:	adrp	x0, 47d000 <_obstack_memory_used@@Base+0x1bbb8>
  43ac6c:	add	x2, x2, #0xd10
  43ac70:	add	x0, x0, #0xd28
  43ac74:	mov	w1, #0xba1                 	// #2977
  43ac78:	bl	402bf0 <nftw@plt+0x70>
  43ac7c:	adrp	x2, 47d000 <_obstack_memory_used@@Base+0x1bbb8>
  43ac80:	adrp	x0, 47d000 <_obstack_memory_used@@Base+0x1bbb8>
  43ac84:	add	x2, x2, #0xd10
  43ac88:	add	x0, x0, #0xd28
  43ac8c:	mov	w1, #0xb9e                 	// #2974
  43ac90:	bl	402bf0 <nftw@plt+0x70>
  43ac94:	nop
  43ac98:	ldrb	w1, [x0, #18]
  43ac9c:	str	xzr, [x0, #24]
  43aca0:	and	w1, w1, #0xfffffffc
  43aca4:	strb	w1, [x0, #18]
  43aca8:	ldrh	w1, [x0, #18]
  43acac:	mov	w2, w1
  43acb0:	ubfx	x1, x1, #2, #8
  43acb4:	and	w1, w1, #0xffffffcf
  43acb8:	bfi	w2, w1, #2, #8
  43acbc:	strh	w2, [x0, #18]
  43acc0:	ret
  43acc4:	nop
  43acc8:	stp	x29, x30, [sp, #-64]!
  43accc:	mov	x29, sp
  43acd0:	stp	x19, x20, [sp, #16]
  43acd4:	mov	w20, w1
  43acd8:	ldrb	w1, [x2, #18]
  43acdc:	mov	x19, x2
  43ace0:	and	w2, w1, #0x3
  43ace4:	cmp	w2, #0x1
  43ace8:	b.eq	43adbc <nftw@plt+0x3823c>  // b.none
  43acec:	stp	x23, x24, [sp, #48]
  43acf0:	add	w24, w20, #0x1
  43acf4:	mov	x23, x3
  43acf8:	ldr	w3, [x0, #512]
  43acfc:	add	w2, w24, w24, lsl #1
  43ad00:	stp	x21, x22, [sp, #32]
  43ad04:	mov	x21, x0
  43ad08:	lsl	w22, w2, #3
  43ad0c:	cmp	w3, w2, lsl #3
  43ad10:	ldr	x0, [x0, #504]
  43ad14:	b.cc	43ad88 <nftw@plt+0x38208>  // b.lo, b.ul, b.last
  43ad18:	mov	w2, #0x18                  	// #24
  43ad1c:	and	w1, w1, #0x3
  43ad20:	ldr	x5, [x21, #56]
  43ad24:	umull	x2, w20, w2
  43ad28:	ldr	x6, [x19, #24]
  43ad2c:	add	x4, x0, x2
  43ad30:	ldr	x3, [x5, #16]
  43ad34:	str	x19, [x0, x2]
  43ad38:	ldr	x2, [x5, #24]
  43ad3c:	ubfiz	x0, x20, #3, #32
  43ad40:	str	x6, [x4, #8]
  43ad44:	add	x0, x0, #0x8
  43ad48:	str	w1, [x4, #16]
  43ad4c:	sub	x1, x2, x3
  43ad50:	cmp	x1, x0
  43ad54:	b.cc	43ada0 <nftw@plt+0x38220>  // b.lo, b.ul, b.last
  43ad58:	ldrb	w1, [x19, #18]
  43ad5c:	mov	w2, #0x1                   	// #1
  43ad60:	str	x23, [x3, x20, lsl #3]
  43ad64:	mov	w0, w2
  43ad68:	strh	w24, [x19, #24]
  43ad6c:	bfxil	w1, w2, #0, #2
  43ad70:	strb	w1, [x19, #18]
  43ad74:	ldp	x19, x20, [sp, #16]
  43ad78:	ldp	x21, x22, [sp, #32]
  43ad7c:	ldp	x23, x24, [sp, #48]
  43ad80:	ldp	x29, x30, [sp], #64
  43ad84:	ret
  43ad88:	mov	w1, w22
  43ad8c:	bl	4615e8 <_obstack_memory_used@@Base+0x1a0>
  43ad90:	ldrb	w1, [x19, #18]
  43ad94:	str	x0, [x21, #504]
  43ad98:	str	w22, [x21, #512]
  43ad9c:	b	43ad18 <nftw@plt+0x38198>
  43ada0:	mov	x0, x21
  43ada4:	add	x1, x21, #0x38
  43ada8:	mov	x2, #0x8                   	// #8
  43adac:	bl	431618 <nftw@plt+0x2ea98>
  43adb0:	ldr	x0, [x21, #56]
  43adb4:	ldr	x3, [x0, #16]
  43adb8:	b	43ad58 <nftw@plt+0x381d8>
  43adbc:	ldr	x3, [x19]
  43adc0:	mov	w1, #0x3                   	// #3
  43adc4:	adrp	x2, 47e000 <_obstack_memory_used@@Base+0x1cbb8>
  43adc8:	add	x2, x2, #0x50
  43adcc:	bl	427178 <nftw@plt+0x245f8>
  43add0:	mov	w0, #0x0                   	// #0
  43add4:	ldp	x19, x20, [sp, #16]
  43add8:	ldp	x29, x30, [sp], #64
  43addc:	ret
  43ade0:	sub	w2, w1, #0x1
  43ade4:	cbz	w1, 43ae20 <nftw@plt+0x382a0>
  43ade8:	ldr	x4, [x0, #504]
  43adec:	mov	w0, #0x18                  	// #24
  43adf0:	umaddl	x0, w2, w0, x4
  43adf4:	nop
  43adf8:	ldr	x1, [x0]
  43adfc:	cmp	x4, x0
  43ae00:	ldr	w3, [x0, #16]
  43ae04:	sub	x0, x0, #0x18
  43ae08:	ldrb	w2, [x1, #18]
  43ae0c:	bfxil	w2, w3, #0, #2
  43ae10:	strb	w2, [x1, #18]
  43ae14:	ldr	x2, [x0, #32]
  43ae18:	str	x2, [x1, #24]
  43ae1c:	b.ne	43adf8 <nftw@plt+0x38278>  // b.any
  43ae20:	ret
  43ae24:	nop
  43ae28:	mov	x3, x0
  43ae2c:	mov	x0, x2
  43ae30:	mov	x5, #0x9300000000000000    	// #-7854277750134145024
  43ae34:	mov	w2, #0x0                   	// #0
  43ae38:	ldr	w4, [x3, #48]
  43ae3c:	str	xzr, [x0]
  43ae40:	str	w4, [x0, #8]
  43ae44:	ldur	x4, [x0, #12]
  43ae48:	ldrb	w6, [x3, #1151]
  43ae4c:	and	x5, x4, x5
  43ae50:	cmp	w6, #0x0
  43ae54:	cset	x4, eq  // eq = none
  43ae58:	orr	x4, x5, x4, lsl #61
  43ae5c:	stur	x4, [x0, #12]
  43ae60:	ldr	x3, [x3]
  43ae64:	cbz	x3, 43ae74 <nftw@plt+0x382f4>
  43ae68:	ldrb	w2, [x3, #106]
  43ae6c:	cmp	w2, #0x0
  43ae70:	cset	w2, ne  // ne = any
  43ae74:	ldrb	w3, [x0, #19]
  43ae78:	and	w1, w1, #0x3
  43ae7c:	orr	w2, w1, w2, lsl #4
  43ae80:	mov	w1, #0xffffffec            	// #-20
  43ae84:	and	w1, w3, w1
  43ae88:	orr	w2, w2, w1
  43ae8c:	strb	w2, [x0, #19]
  43ae90:	ret
  43ae94:	nop
  43ae98:	stp	x29, x30, [sp, #-240]!
  43ae9c:	mov	x29, sp
  43aea0:	stp	x19, x20, [sp, #16]
  43aea4:	mov	x19, x1
  43aea8:	stp	x21, x22, [sp, #32]
  43aeac:	stp	x23, x24, [sp, #48]
  43aeb0:	mov	x24, x0
  43aeb4:	stp	x25, x26, [sp, #64]
  43aeb8:	ldrb	w1, [x0, #1160]
  43aebc:	cbz	w1, 43af64 <nftw@plt+0x383e4>
  43aec0:	bl	4413f0 <nftw@plt+0x3e870>
  43aec4:	mov	x26, x0
  43aec8:	cbz	x26, 43bd70 <nftw@plt+0x391f0>
  43aecc:	ldrb	w0, [x19, #18]
  43aed0:	tbnz	w0, #1, 43b0c8 <nftw@plt+0x38548>
  43aed4:	ldrh	w20, [x19, #18]
  43aed8:	ubfx	x20, x20, #2, #8
  43aedc:	ldrb	w0, [x19, #18]
  43aee0:	mov	w1, #0x2                   	// #2
  43aee4:	ldr	x21, [x19]
  43aee8:	str	x26, [x19, #24]
  43aeec:	bfxil	w0, w1, #0, #2
  43aef0:	strb	w0, [x19, #18]
  43aef4:	adrp	x1, 47e000 <_obstack_memory_used@@Base+0x1cbb8>
  43aef8:	mov	x0, x21
  43aefc:	add	x1, x1, #0x390
  43af00:	mov	x2, #0x7                   	// #7
  43af04:	bl	4026a0 <strncmp@plt>
  43af08:	cbnz	w0, 43af38 <nftw@plt+0x383b8>
  43af0c:	adrp	x1, 47e000 <_obstack_memory_used@@Base+0x1cbb8>
  43af10:	mov	x0, x21
  43af14:	add	x1, x1, #0x398
  43af18:	bl	402890 <strcmp@plt>
  43af1c:	cbz	w0, 43af38 <nftw@plt+0x383b8>
  43af20:	adrp	x1, 47e000 <_obstack_memory_used@@Base+0x1cbb8>
  43af24:	mov	x0, x21
  43af28:	add	x1, x1, #0x3b0
  43af2c:	bl	402890 <strcmp@plt>
  43af30:	cbnz	w0, 43b714 <nftw@plt+0x38b94>
  43af34:	nop
  43af38:	ldrh	w1, [x19, #18]
  43af3c:	and	w20, w20, #0xffffffbf
  43af40:	mov	w0, #0x1                   	// #1
  43af44:	bfi	w1, w20, #2, #8
  43af48:	strh	w1, [x19, #18]
  43af4c:	ldp	x19, x20, [sp, #16]
  43af50:	ldp	x21, x22, [sp, #32]
  43af54:	ldp	x23, x24, [sp, #48]
  43af58:	ldp	x25, x26, [sp, #64]
  43af5c:	ldp	x29, x30, [sp], #240
  43af60:	ret
  43af64:	add	x1, sp, #0xb0
  43af68:	stp	x27, x28, [sp, #80]
  43af6c:	ldr	x21, [x0, #448]
  43af70:	str	x1, [x0, #448]
  43af74:	bl	433140 <nftw@plt+0x305c0>
  43af78:	mov	x20, x0
  43af7c:	ldrh	w0, [x0, #6]
  43af80:	str	x21, [x24, #448]
  43af84:	tbz	w0, #0, 43b19c <nftw@plt+0x3861c>
  43af88:	mov	w0, #0xffffffff            	// #-1
  43af8c:	mov	w21, #0x0                   	// #0
  43af90:	mov	x22, #0x0                   	// #0
  43af94:	stp	wzr, w0, [sp, #168]
  43af98:	ldr	x1, [x24, #56]
  43af9c:	ldp	x26, x0, [x1, #16]
  43afa0:	sub	x0, x0, x26
  43afa4:	cmp	x0, #0x2f
  43afa8:	b.ls	43b8ac <nftw@plt+0x38d2c>  // b.plast
  43afac:	ldr	w0, [x24, #48]
  43afb0:	mov	x4, #0x9300000000000000    	// #-7854277750134145024
  43afb4:	str	xzr, [x26]
  43afb8:	mov	w2, #0x0                   	// #0
  43afbc:	str	w0, [x26, #8]
  43afc0:	ldur	x3, [x26, #12]
  43afc4:	ldrb	w0, [x24, #1151]
  43afc8:	and	x4, x3, x4
  43afcc:	cmp	w0, #0x0
  43afd0:	cset	x3, eq  // eq = none
  43afd4:	orr	x3, x4, x3, lsl #61
  43afd8:	stur	x3, [x26, #12]
  43afdc:	ldr	x0, [x24]
  43afe0:	cbz	x0, 43aff0 <nftw@plt+0x38470>
  43afe4:	ldrb	w0, [x0, #106]
  43afe8:	cmp	w0, #0x0
  43afec:	cset	w2, ne  // ne = any
  43aff0:	ldrb	w3, [x26, #19]
  43aff4:	mov	w0, #0xffffffec            	// #-20
  43aff8:	and	w3, w3, w0
  43affc:	orr	w2, w3, w2, lsl #4
  43b000:	strb	w2, [x26, #19]
  43b004:	cbz	x20, 43bac4 <nftw@plt+0x38f44>
  43b008:	ldp	x2, x3, [x20]
  43b00c:	stp	x2, x3, [x26, #24]
  43b010:	add	x0, x26, #0x18
  43b014:	ldr	x1, [x20, #16]
  43b018:	str	x1, [x26, #40]
  43b01c:	ldrb	w7, [x26, #19]
  43b020:	mov	x2, x0
  43b024:	mov	x3, #0x1                   	// #1
  43b028:	ldrb	w0, [x0, #4]
  43b02c:	str	w3, [x26, #12]
  43b030:	ubfx	x21, x7, #3, #1
  43b034:	cmp	w0, #0x16
  43b038:	b.eq	43bd98 <nftw@plt+0x39218>  // b.none
  43b03c:	cmp	w0, #0x26
  43b040:	b.eq	43baac <nftw@plt+0x38f2c>  // b.none
  43b044:	mov	w25, #0x0                   	// #0
  43b048:	mov	w27, #0x0                   	// #0
  43b04c:	stp	wzr, wzr, [sp, #96]
  43b050:	mov	w23, w21
  43b054:	cbz	w21, 43b648 <nftw@plt+0x38ac8>
  43b058:	cmp	w0, #0x35
  43b05c:	b.ne	43b5c4 <nftw@plt+0x38a44>  // b.any
  43b060:	ldr	x7, [x2, #8]
  43b064:	ldr	x1, [x24, #1280]
  43b068:	cmp	x7, x1
  43b06c:	b.eq	43b660 <nftw@plt+0x38ae0>  // b.none
  43b070:	cmp	w27, #0x1
  43b074:	b.eq	43b5f8 <nftw@plt+0x38a78>  // b.none
  43b078:	mov	w21, #0x0                   	// #0
  43b07c:	b.le	43b5a4 <nftw@plt+0x38a24>
  43b080:	cmp	w27, #0x2
  43b084:	mov	w23, #0x0                   	// #0
  43b088:	cset	w1, eq  // eq = none
  43b08c:	mov	w21, #0x0                   	// #0
  43b090:	cbnz	w1, 43b614 <nftw@plt+0x38a94>
  43b094:	cbnz	w23, 43b684 <nftw@plt+0x38b04>
  43b098:	cmp	w0, #0x14
  43b09c:	b.eq	43b620 <nftw@plt+0x38aa0>  // b.none
  43b0a0:	cmp	w0, #0x15
  43b0a4:	b.ne	43b314 <nftw@plt+0x38794>  // b.any
  43b0a8:	sub	w27, w27, #0x1
  43b0ac:	cmp	w27, #0x2
  43b0b0:	b.ne	43b314 <nftw@plt+0x38794>  // b.any
  43b0b4:	ldr	w0, [sp, #96]
  43b0b8:	cbnz	w0, 43b2a4 <nftw@plt+0x38724>
  43b0bc:	ldr	w3, [x26, #12]
  43b0c0:	mov	w27, #0x0                   	// #0
  43b0c4:	b	43b31c <nftw@plt+0x3879c>
  43b0c8:	ldrb	w1, [x24, #1151]
  43b0cc:	and	w0, w0, #0x3
  43b0d0:	cbz	w1, 43b0dc <nftw@plt+0x3855c>
  43b0d4:	cmp	w0, #0x2
  43b0d8:	b.eq	43b814 <nftw@plt+0x38c94>  // b.none
  43b0dc:	ldrh	w1, [x19, #18]
  43b0e0:	ubfx	x20, x1, #2, #8
  43b0e4:	tbnz	w1, #5, 43b830 <nftw@plt+0x38cb0>
  43b0e8:	cmp	w0, #0x3
  43b0ec:	b.eq	43b838 <nftw@plt+0x38cb8>  // b.none
  43b0f0:	tbnz	w20, #6, 43b184 <nftw@plt+0x38604>
  43b0f4:	ldr	x20, [x19, #24]
  43b0f8:	ldrb	w2, [x20, #18]
  43b0fc:	cbz	w2, 43b8c8 <nftw@plt+0x38d48>
  43b100:	ldr	x3, [x24, #1048]
  43b104:	mov	x1, x20
  43b108:	mov	x0, x24
  43b10c:	sub	w2, w2, #0x1
  43b110:	blr	x3
  43b114:	strb	wzr, [x20, #18]
  43b118:	ldrh	w1, [x20, #16]
  43b11c:	ldrh	w0, [x26, #16]
  43b120:	cmp	w1, w0
  43b124:	b.eq	43b8d8 <nftw@plt+0x38d58>  // b.none
  43b128:	ldrb	w0, [x19, #18]
  43b12c:	and	w0, w0, #0x3
  43b130:	cmp	w0, #0x3
  43b134:	b.ne	43b830 <nftw@plt+0x38cb0>  // b.any
  43b138:	ldrh	w0, [x19, #18]
  43b13c:	mov	w1, #0xb                   	// #11
  43b140:	tbnz	w0, #5, 43b830 <nftw@plt+0x38cb0>
  43b144:	nop
  43b148:	ldr	w2, [x24, #48]
  43b14c:	mov	x0, x24
  43b150:	ldr	x5, [x19]
  43b154:	adrp	x4, 47e000 <_obstack_memory_used@@Base+0x1cbb8>
  43b158:	mov	w3, #0x0                   	// #0
  43b15c:	add	x4, x4, #0x350
  43b160:	bl	4276f0 <nftw@plt+0x24b70>
  43b164:	tst	w0, #0xff
  43b168:	b.eq	43b17c <nftw@plt+0x385fc>  // b.none
  43b16c:	ldrb	w0, [x19, #18]
  43b170:	and	w0, w0, #0x3
  43b174:	cmp	w0, #0x2
  43b178:	b.eq	43bc74 <nftw@plt+0x390f4>  // b.none
  43b17c:	ldrh	w20, [x19, #18]
  43b180:	ubfx	x20, x20, #2, #8
  43b184:	ldrh	w0, [x19, #18]
  43b188:	and	w20, w20, #0xffffffcf
  43b18c:	and	w20, w20, #0xff
  43b190:	bfi	w0, w20, #2, #8
  43b194:	strh	w0, [x19, #18]
  43b198:	b	43aedc <nftw@plt+0x3835c>
  43b19c:	ldrb	w0, [x20, #4]
  43b1a0:	cmp	w0, #0x14
  43b1a4:	b.eq	43b738 <nftw@plt+0x38bb8>  // b.none
  43b1a8:	cmp	w0, #0x16
  43b1ac:	b.eq	43af88 <nftw@plt+0x38408>  // b.none
  43b1b0:	cmp	w0, #0x4f
  43b1b4:	b.eq	43b848 <nftw@plt+0x38cc8>  // b.none
  43b1b8:	ldrb	w1, [x24, #1152]
  43b1bc:	cbnz	w1, 43b85c <nftw@plt+0x38cdc>
  43b1c0:	cmp	w0, #0x3d
  43b1c4:	b.eq	43bc98 <nftw@plt+0x39118>  // b.none
  43b1c8:	b.hi	43bb90 <nftw@plt+0x39010>  // b.pmore
  43b1cc:	and	w0, w0, #0xfffffffd
  43b1d0:	cmp	w0, #0x34
  43b1d4:	cset	w1, eq  // eq = none
  43b1d8:	lsl	w1, w1, #1
  43b1dc:	adrp	x2, 47e000 <_obstack_memory_used@@Base+0x1cbb8>
  43b1e0:	mov	x0, x24
  43b1e4:	add	x2, x2, #0x1d0
  43b1e8:	b	43b880 <nftw@plt+0x38d00>
  43b1ec:	ldr	x3, [x0, #8]
  43b1f0:	ldrb	w2, [x3, #18]
  43b1f4:	and	w2, w2, #0x3
  43b1f8:	cmp	w2, #0x1
  43b1fc:	b.ne	43b390 <nftw@plt+0x38810>  // b.any
  43b200:	ldrh	w1, [x3, #24]
  43b204:	mov	w2, #0x50                  	// #80
  43b208:	strb	w2, [x0, #4]
  43b20c:	str	w1, [x0, #8]
  43b210:	ldr	w11, [x26, #12]
  43b214:	mov	w0, w11
  43b218:	add	w3, w11, #0x1
  43b21c:	add	x1, x0, #0x1
  43b220:	str	w3, [x26, #12]
  43b224:	cmp	w3, #0x1
  43b228:	add	x1, x1, x1, lsl #1
  43b22c:	lsl	x1, x1, #3
  43b230:	add	x2, x26, x1
  43b234:	b.ls	43b244 <nftw@plt+0x386c4>  // b.plast
  43b238:	ldurb	w8, [x2, #-20]
  43b23c:	cmp	w8, #0x25
  43b240:	b.eq	43b564 <nftw@plt+0x389e4>  // b.none
  43b244:	ldrb	w0, [x2, #4]
  43b248:	cmp	w0, #0x16
  43b24c:	b.eq	43b9dc <nftw@plt+0x38e5c>  // b.none
  43b250:	cmp	w0, #0x26
  43b254:	b.ne	43b050 <nftw@plt+0x384d0>  // b.any
  43b258:	cmp	w3, #0x1
  43b25c:	b.eq	43baac <nftw@plt+0x38f2c>  // b.none
  43b260:	cbz	w22, 43b4e0 <nftw@plt+0x38960>
  43b264:	ldr	w1, [sp, #100]
  43b268:	str	w11, [x2, #8]
  43b26c:	add	w1, w1, #0x1
  43b270:	str	w1, [sp, #100]
  43b274:	cbz	w23, 43b518 <nftw@plt+0x38998>
  43b278:	cmp	w27, #0x1
  43b27c:	b.eq	43b5f8 <nftw@plt+0x38a78>  // b.none
  43b280:	cmp	w27, #0x1
  43b284:	b.le	43b5a4 <nftw@plt+0x38a24>
  43b288:	cmp	w0, #0x26
  43b28c:	cset	w23, eq  // eq = none
  43b290:	cmp	w27, #0x2
  43b294:	cset	w1, eq  // eq = none
  43b298:	cmp	w23, #0x0
  43b29c:	ccmp	w1, #0x0, #0x4, ne  // ne = any
  43b2a0:	b.eq	43b090 <nftw@plt+0x38510>  // b.none
  43b2a4:	ldr	w2, [x2]
  43b2a8:	adrp	x3, 47e000 <_obstack_memory_used@@Base+0x1cbb8>
  43b2ac:	mov	x0, x24
  43b2b0:	add	x3, x3, #0x320
  43b2b4:	mov	w1, #0x3                   	// #3
  43b2b8:	bl	4277f0 <nftw@plt+0x24c70>
  43b2bc:	nop
  43b2c0:	ldr	w0, [sp, #168]
  43b2c4:	mov	w20, #0x0                   	// #0
  43b2c8:	strb	wzr, [x24, #22]
  43b2cc:	cbz	w0, 43b7f4 <nftw@plt+0x38c74>
  43b2d0:	ldr	w1, [sp, #172]
  43b2d4:	mov	w0, #0x18                  	// #24
  43b2d8:	ldr	x3, [x24, #504]
  43b2dc:	umaddl	x27, w1, w0, x3
  43b2e0:	ldr	x0, [x27]
  43b2e4:	cmp	x3, x27
  43b2e8:	ldr	w2, [x27, #16]
  43b2ec:	sub	x27, x27, #0x18
  43b2f0:	ldrb	w1, [x0, #18]
  43b2f4:	bfxil	w1, w2, #0, #2
  43b2f8:	strb	w1, [x0, #18]
  43b2fc:	ldr	x1, [x27, #32]
  43b300:	str	x1, [x0, #24]
  43b304:	b.ne	43b2e0 <nftw@plt+0x38760>  // b.any
  43b308:	cbz	w20, 43b7f4 <nftw@plt+0x38c74>
  43b30c:	ldp	x27, x28, [sp, #80]
  43b310:	b	43aec8 <nftw@plt+0x38348>
  43b314:	ldr	w3, [x26, #12]
  43b318:	str	wzr, [sp, #96]
  43b31c:	ldr	x1, [x24, #56]
  43b320:	add	x3, x3, #0x2
  43b324:	mov	w23, #0x1                   	// #1
  43b328:	add	x3, x3, x3, lsl #1
  43b32c:	ldr	x26, [x1, #16]
  43b330:	lsl	x3, x3, #3
  43b334:	mov	w22, w21
  43b338:	adrp	x21, 47e000 <_obstack_memory_used@@Base+0x1cbb8>
  43b33c:	add	x0, x21, #0x1f8
  43b340:	str	x0, [sp, #160]
  43b344:	ldr	x0, [x1, #24]
  43b348:	adrp	x20, 481000 <_obstack_memory_used@@Base+0x1fbb8>
  43b34c:	mov	w21, w23
  43b350:	add	x20, x20, #0xaf0
  43b354:	sub	x0, x0, x26
  43b358:	cmp	x0, x3
  43b35c:	b.cc	43b548 <nftw@plt+0x389c8>  // b.lo, b.ul, b.last
  43b360:	ldr	w1, [x26, #12]
  43b364:	mov	x0, x24
  43b368:	ldr	x28, [x24, #448]
  43b36c:	add	x1, x1, #0x1
  43b370:	add	x1, x1, x1, lsl #1
  43b374:	add	x1, x26, x1, lsl #3
  43b378:	str	x1, [x24, #448]
  43b37c:	bl	433140 <nftw@plt+0x305c0>
  43b380:	ldrb	w1, [x0, #4]
  43b384:	str	x28, [x24, #448]
  43b388:	cmp	w1, #0x35
  43b38c:	b.eq	43b1ec <nftw@plt+0x3866c>  // b.none
  43b390:	ldrb	w2, [x24, #1138]
  43b394:	cbz	w2, 43b210 <nftw@plt+0x38690>
  43b398:	ldrh	w11, [x26, #16]
  43b39c:	cbz	w11, 43b210 <nftw@plt+0x38690>
  43b3a0:	cmp	w1, #0x3e
  43b3a4:	mov	w2, #0x38                  	// #56
  43b3a8:	ccmp	w1, w2, #0x4, ne  // ne = any
  43b3ac:	b.ne	43b210 <nftw@plt+0x38690>  // b.any
  43b3b0:	ldr	w12, [x0, #8]
  43b3b4:	ldr	x8, [x0, #16]
  43b3b8:	sub	x12, x12, #0x1
  43b3bc:	add	x12, x8, x12
  43b3c0:	add	x28, x8, #0x1
  43b3c4:	cmp	x12, x28
  43b3c8:	b.hi	43b3dc <nftw@plt+0x3885c>  // b.pmore
  43b3cc:	b	43b210 <nftw@plt+0x38690>
  43b3d0:	add	x28, x28, #0x1
  43b3d4:	cmp	x12, x28
  43b3d8:	b.ls	43b980 <nftw@plt+0x38e00>  // b.plast
  43b3dc:	ldrb	w1, [x28]
  43b3e0:	ldrh	w0, [x20, w1, sxtw #1]
  43b3e4:	tbnz	w0, #9, 43b3f8 <nftw@plt+0x38878>
  43b3e8:	cmp	w1, #0x24
  43b3ec:	b.ne	43b3d0 <nftw@plt+0x38850>  // b.any
  43b3f0:	ldrb	w1, [x24, #1146]
  43b3f4:	cbz	w1, 43b3d0 <nftw@plt+0x38850>
  43b3f8:	mov	x9, x28
  43b3fc:	cmp	x12, x28
  43b400:	b.ls	43b984 <nftw@plt+0x38e04>  // b.plast
  43b404:	mov	w1, #0x204                 	// #516
  43b408:	b	43b414 <nftw@plt+0x38894>
  43b40c:	ldrb	w0, [x9]
  43b410:	ldrh	w0, [x20, x0, lsl #1]
  43b414:	tst	w0, w1
  43b418:	b.ne	43b430 <nftw@plt+0x388b0>  // b.any
  43b41c:	ldrb	w0, [x9]
  43b420:	cmp	w0, #0x24
  43b424:	b.ne	43b970 <nftw@plt+0x38df0>  // b.any
  43b428:	ldrb	w0, [x24, #1146]
  43b42c:	cbz	w0, 43b970 <nftw@plt+0x38df0>
  43b430:	add	x9, x9, #0x1
  43b434:	cmp	x12, x9
  43b438:	b.ne	43b40c <nftw@plt+0x3888c>  // b.any
  43b43c:	sub	x2, x12, x28
  43b440:	mov	x9, x12
  43b444:	mov	w14, w2
  43b448:	cbz	w11, 43b210 <nftw@plt+0x38690>
  43b44c:	ldr	x0, [x26]
  43b450:	and	x2, x2, #0xffffffff
  43b454:	mov	x13, #0x0                   	// #0
  43b458:	str	x0, [sp, #152]
  43b45c:	b	43b468 <nftw@plt+0x388e8>
  43b460:	cmp	w11, w13
  43b464:	b.ls	43b4cc <nftw@plt+0x3894c>  // b.plast
  43b468:	ldr	x0, [sp, #152]
  43b46c:	ldr	x0, [x0, x13, lsl #3]
  43b470:	add	x13, x13, #0x1
  43b474:	ldr	w1, [x0, #8]
  43b478:	cmp	w14, w1
  43b47c:	b.ne	43b460 <nftw@plt+0x388e0>  // b.any
  43b480:	ldr	x1, [x0]
  43b484:	mov	x0, x28
  43b488:	stp	x1, x2, [sp, #104]
  43b48c:	stp	x12, x9, [sp, #120]
  43b490:	str	x13, [sp, #136]
  43b494:	stp	w14, w11, [sp, #144]
  43b498:	bl	402850 <memcmp@plt>
  43b49c:	ldp	w14, w11, [sp, #144]
  43b4a0:	ldp	x1, x2, [sp, #104]
  43b4a4:	ldp	x12, x9, [sp, #120]
  43b4a8:	ldr	x13, [sp, #136]
  43b4ac:	cbnz	w0, 43b460 <nftw@plt+0x388e0>
  43b4b0:	ldr	x2, [sp, #160]
  43b4b4:	mov	x3, x1
  43b4b8:	mov	x0, x24
  43b4bc:	mov	w1, #0x6                   	// #6
  43b4c0:	stp	x12, x9, [sp, #104]
  43b4c4:	bl	427298 <nftw@plt+0x24718>
  43b4c8:	ldp	x12, x9, [sp, #104]
  43b4cc:	cmp	x12, x9
  43b4d0:	b.ls	43b210 <nftw@plt+0x38690>  // b.plast
  43b4d4:	ldrh	w11, [x26, #16]
  43b4d8:	mov	x28, x9
  43b4dc:	b	43b3dc <nftw@plt+0x3885c>
  43b4e0:	ldurh	w8, [x2, #-18]
  43b4e4:	sub	x9, x2, #0x18
  43b4e8:	ldrh	w3, [x2, #6]
  43b4ec:	str	w11, [x26, #12]
  43b4f0:	orr	w1, w8, #0x8
  43b4f4:	sturh	w1, [x2, #-18]
  43b4f8:	tbz	w3, #1, 43b508 <nftw@plt+0x38988>
  43b4fc:	mov	w1, #0x108                 	// #264
  43b500:	orr	w1, w8, w1
  43b504:	sturh	w1, [x2, #-18]
  43b508:	tbz	w3, #0, 43b274 <nftw@plt+0x386f4>
  43b50c:	orr	w1, w1, #0x200
  43b510:	strh	w1, [x9, #6]
  43b514:	cbnz	w23, 43b278 <nftw@plt+0x386f8>
  43b518:	ldr	x1, [x24, #56]
  43b51c:	mov	w22, #0x1                   	// #1
  43b520:	ldr	w3, [x26, #12]
  43b524:	add	x3, x3, #0x2
  43b528:	ldr	x26, [x1, #16]
  43b52c:	add	x3, x3, x3, lsl #1
  43b530:	ldr	x0, [x1, #24]
  43b534:	lsl	x3, x3, #3
  43b538:	sub	x0, x0, x26
  43b53c:	cmp	x0, x3
  43b540:	b.cs	43b360 <nftw@plt+0x387e0>  // b.hs, b.nlast
  43b544:	nop
  43b548:	mov	x0, x24
  43b54c:	add	x1, x24, #0x38
  43b550:	mov	x2, #0x18                  	// #24
  43b554:	bl	431618 <nftw@plt+0x2ea98>
  43b558:	ldr	x0, [x24, #56]
  43b55c:	ldr	x26, [x0, #16]
  43b560:	b	43b360 <nftw@plt+0x387e0>
  43b564:	ldrb	w8, [x26, #19]
  43b568:	tbz	w8, #2, 43b244 <nftw@plt+0x386c4>
  43b56c:	add	x8, x0, x0, lsl #1
  43b570:	add	x8, x26, x8, lsl #3
  43b574:	ldrb	w9, [x8, #28]
  43b578:	cmp	w9, #0x50
  43b57c:	b.eq	43b694 <nftw@plt+0x38b14>  // b.none
  43b580:	ldr	w0, [x24, #1116]
  43b584:	cmp	w0, #0x15
  43b588:	b.eq	43b244 <nftw@plt+0x386c4>  // b.none
  43b58c:	mov	x0, x24
  43b590:	adrp	x2, 47e000 <_obstack_memory_used@@Base+0x1cbb8>
  43b594:	mov	w1, #0x3                   	// #3
  43b598:	add	x2, x2, #0x238
  43b59c:	bl	427178 <nftw@plt+0x245f8>
  43b5a0:	b	43b2c0 <nftw@plt+0x38740>
  43b5a4:	ldr	w3, [x26, #12]
  43b5a8:	mov	w23, #0x1                   	// #1
  43b5ac:	add	x3, x3, #0x2
  43b5b0:	ldr	x1, [x24, #56]
  43b5b4:	add	x3, x3, x3, lsl #1
  43b5b8:	lsl	x3, x3, #3
  43b5bc:	ldr	x26, [x1, #16]
  43b5c0:	b	43b334 <nftw@plt+0x387b4>
  43b5c4:	cmp	w27, #0x1
  43b5c8:	b.ne	43be14 <nftw@plt+0x39294>  // b.any
  43b5cc:	cmp	w0, #0x14
  43b5d0:	b.ne	43b5f8 <nftw@plt+0x38a78>  // b.any
  43b5d4:	ldr	w3, [x26, #12]
  43b5d8:	mov	w27, #0x2                   	// #2
  43b5dc:	ldr	x1, [x24, #56]
  43b5e0:	add	x3, x3, #0x2
  43b5e4:	mov	w21, #0x0                   	// #0
  43b5e8:	add	x3, x3, x3, lsl #1
  43b5ec:	ldr	x26, [x1, #16]
  43b5f0:	lsl	x3, x3, #3
  43b5f4:	b	43b334 <nftw@plt+0x387b4>
  43b5f8:	mov	w2, w25
  43b5fc:	mov	x0, x24
  43b600:	adrp	x3, 47e000 <_obstack_memory_used@@Base+0x1cbb8>
  43b604:	mov	w1, #0x3                   	// #3
  43b608:	add	x3, x3, #0x2e8
  43b60c:	bl	4277f0 <nftw@plt+0x24c70>
  43b610:	b	43b2c0 <nftw@plt+0x38740>
  43b614:	cmp	w0, #0x14
  43b618:	mov	w27, #0x3                   	// #3
  43b61c:	b.ne	43b0a0 <nftw@plt+0x38520>  // b.any
  43b620:	ldr	w3, [x26, #12]
  43b624:	add	w27, w27, #0x1
  43b628:	ldr	x1, [x24, #56]
  43b62c:	add	x3, x3, #0x2
  43b630:	mov	w23, #0x1                   	// #1
  43b634:	add	x3, x3, x3, lsl #1
  43b638:	ldr	x26, [x1, #16]
  43b63c:	lsl	x3, x3, #3
  43b640:	str	wzr, [sp, #96]
  43b644:	b	43b334 <nftw@plt+0x387b4>
  43b648:	add	x3, x3, #0x2
  43b64c:	ldr	x1, [x24, #56]
  43b650:	add	x3, x3, x3, lsl #1
  43b654:	lsl	x3, x3, #3
  43b658:	ldr	x26, [x1, #16]
  43b65c:	b	43b334 <nftw@plt+0x387b4>
  43b660:	ldr	w25, [x2]
  43b664:	cbz	w27, 43b6f4 <nftw@plt+0x38b74>
  43b668:	mov	w2, w25
  43b66c:	mov	x0, x24
  43b670:	adrp	x3, 47e000 <_obstack_memory_used@@Base+0x1cbb8>
  43b674:	mov	w1, #0x3                   	// #3
  43b678:	add	x3, x3, #0x2b8
  43b67c:	bl	4277f0 <nftw@plt+0x24c70>
  43b680:	b	43b2c0 <nftw@plt+0x38740>
  43b684:	mov	w0, #0x1                   	// #1
  43b688:	ldr	w3, [x26, #12]
  43b68c:	str	w0, [sp, #96]
  43b690:	b	43b5ac <nftw@plt+0x38a2c>
  43b694:	ldrh	w1, [x8, #30]
  43b698:	tbz	w1, #0, 43b6a4 <nftw@plt+0x38b24>
  43b69c:	orr	w1, w1, #0x200
  43b6a0:	strh	w1, [x8, #30]
  43b6a4:	ldurh	w8, [x2, #-18]
  43b6a8:	orr	w9, w1, #0x100
  43b6ac:	add	x0, x0, x0, lsl #1
  43b6b0:	and	w9, w9, #0xffff
  43b6b4:	mov	w3, w11
  43b6b8:	tst	x8, #0x2
  43b6bc:	add	x0, x26, x0, lsl #3
  43b6c0:	csel	w1, w9, w1, ne  // ne = any
  43b6c4:	and	w8, w8, #0x1
  43b6c8:	and	w1, w1, #0xfffffffe
  43b6cc:	orr	w1, w1, #0x4
  43b6d0:	orr	w1, w1, w8
  43b6d4:	strh	w1, [x0, #30]
  43b6d8:	ldp	x8, x9, [x0, #24]
  43b6dc:	stp	x8, x9, [x2, #-24]
  43b6e0:	ldr	x1, [x0, #40]
  43b6e4:	stur	x1, [x2, #-8]
  43b6e8:	str	w11, [x26, #12]
  43b6ec:	ldrb	w0, [x0, #28]
  43b6f0:	b	43b054 <nftw@plt+0x384d4>
  43b6f4:	add	x3, x3, #0x2
  43b6f8:	mov	w27, #0x1                   	// #1
  43b6fc:	ldr	x1, [x24, #56]
  43b700:	add	x3, x3, x3, lsl #1
  43b704:	mov	w21, #0x0                   	// #0
  43b708:	lsl	x3, x3, #3
  43b70c:	ldr	x26, [x1, #16]
  43b710:	b	43b334 <nftw@plt+0x387b4>
  43b714:	mov	x0, x21
  43b718:	adrp	x1, 47e000 <_obstack_memory_used@@Base+0x1cbb8>
  43b71c:	add	x1, x1, #0x3c8
  43b720:	bl	402890 <strcmp@plt>
  43b724:	orr	w1, w20, #0x8
  43b728:	cmp	w0, #0x0
  43b72c:	and	w1, w1, #0xff
  43b730:	csel	w20, w1, w20, ne  // ne = any
  43b734:	b	43af38 <nftw@plt+0x383b8>
  43b738:	adrp	x23, 47e000 <_obstack_memory_used@@Base+0x1cbb8>
  43b73c:	adrp	x22, 47e000 <_obstack_memory_used@@Base+0x1cbb8>
  43b740:	add	x23, x23, #0x110
  43b744:	add	x22, x22, #0xe0
  43b748:	mov	w21, #0x0                   	// #0
  43b74c:	mov	w20, #0x0                   	// #0
  43b750:	str	wzr, [sp, #168]
  43b754:	mov	x0, x24
  43b758:	bl	434b58 <nftw@plt+0x31fd8>
  43b75c:	ldrb	w1, [x0, #4]
  43b760:	cmp	w1, #0x2c
  43b764:	b.eq	43bba0 <nftw@plt+0x39020>  // b.none
  43b768:	b.hi	43b990 <nftw@plt+0x38e10>  // b.pmore
  43b76c:	cmp	w1, #0x13
  43b770:	b.eq	43bb00 <nftw@plt+0x38f80>  // b.none
  43b774:	cmp	w1, #0x15
  43b778:	b.ne	43bc08 <nftw@plt+0x39088>  // b.any
  43b77c:	ldr	w1, [sp, #168]
  43b780:	cmp	w1, #0x0
  43b784:	ccmp	w20, #0x0, #0x0, ne  // ne = any
  43b788:	b.ne	43bb6c <nftw@plt+0x38fec>  // b.any
  43b78c:	cbnz	w21, 43bb6c <nftw@plt+0x38fec>
  43b790:	adrp	x1, 47e000 <_obstack_memory_used@@Base+0x1cbb8>
  43b794:	add	x1, x1, #0x5d0
  43b798:	mov	w20, #0x0                   	// #0
  43b79c:	ldp	x4, x5, [x1, #96]
  43b7a0:	stp	x4, x5, [sp, #200]
  43b7a4:	ldp	x4, x5, [x1, #112]
  43b7a8:	stp	x4, x5, [sp, #216]
  43b7ac:	ldr	x1, [x1, #128]
  43b7b0:	str	x1, [sp, #232]
  43b7b4:	mov	x1, x0
  43b7b8:	mov	x0, x24
  43b7bc:	bl	4307f8 <nftw@plt+0x2dc78>
  43b7c0:	mov	x3, x0
  43b7c4:	add	x2, sp, #0xc8
  43b7c8:	ldr	w21, [sp, #168]
  43b7cc:	mov	x0, x24
  43b7d0:	mov	w1, #0x3                   	// #3
  43b7d4:	sub	w4, w21, #0x1
  43b7d8:	str	w4, [sp, #172]
  43b7dc:	ldr	x2, [x2, w20, uxtw #3]
  43b7e0:	mov	x26, #0x0                   	// #0
  43b7e4:	mov	w20, #0x0                   	// #0
  43b7e8:	bl	427178 <nftw@plt+0x245f8>
  43b7ec:	strb	wzr, [x24, #22]
  43b7f0:	cbnz	w21, 43b2d0 <nftw@plt+0x38750>
  43b7f4:	mov	w0, #0x0                   	// #0
  43b7f8:	ldp	x19, x20, [sp, #16]
  43b7fc:	ldp	x21, x22, [sp, #32]
  43b800:	ldp	x23, x24, [sp, #48]
  43b804:	ldp	x25, x26, [sp, #64]
  43b808:	ldp	x27, x28, [sp, #80]
  43b80c:	ldp	x29, x30, [sp], #240
  43b810:	ret
  43b814:	ldr	x20, [x19, #24]
  43b818:	ldrb	w0, [x20, #19]
  43b81c:	tbz	w0, #5, 43bb30 <nftw@plt+0x38fb0>
  43b820:	ldrh	w0, [x19, #18]
  43b824:	ubfx	x20, x0, #2, #8
  43b828:	tbz	w0, #5, 43b0f0 <nftw@plt+0x38570>
  43b82c:	nop
  43b830:	mov	w1, #0x0                   	// #0
  43b834:	b	43b148 <nftw@plt+0x385c8>
  43b838:	ldrb	w0, [x24, #1143]
  43b83c:	cbz	w0, 43b184 <nftw@plt+0x38604>
  43b840:	mov	w1, #0xb                   	// #11
  43b844:	b	43b148 <nftw@plt+0x385c8>
  43b848:	ldrb	w0, [x24, #1124]
  43b84c:	cbz	w0, 43af88 <nftw@plt+0x38408>
  43b850:	ldrb	w0, [x24, #1152]
  43b854:	mov	w1, #0x0                   	// #0
  43b858:	cbz	w0, 43b1dc <nftw@plt+0x3865c>
  43b85c:	ldrb	w1, [x24, #1120]
  43b860:	adrp	x0, 47e000 <_obstack_memory_used@@Base+0x1cbb8>
  43b864:	adrp	x2, 47e000 <_obstack_memory_used@@Base+0x1cbb8>
  43b868:	add	x0, x0, #0x178
  43b86c:	cmp	w1, #0x0
  43b870:	add	x2, x2, #0x140
  43b874:	csel	x2, x2, x0, ne  // ne = any
  43b878:	mov	x0, x24
  43b87c:	mov	w1, #0x2                   	// #2
  43b880:	mov	w3, #0xffffffff            	// #-1
  43b884:	str	w3, [sp, #172]
  43b888:	mov	w21, #0x0                   	// #0
  43b88c:	mov	x22, #0x0                   	// #0
  43b890:	bl	427178 <nftw@plt+0x245f8>
  43b894:	str	wzr, [sp, #168]
  43b898:	ldr	x1, [x24, #56]
  43b89c:	ldp	x26, x0, [x1, #16]
  43b8a0:	sub	x0, x0, x26
  43b8a4:	cmp	x0, #0x2f
  43b8a8:	b.hi	43afac <nftw@plt+0x3842c>  // b.pmore
  43b8ac:	add	x1, x24, #0x38
  43b8b0:	mov	x0, x24
  43b8b4:	mov	x2, #0x30                  	// #48
  43b8b8:	bl	431618 <nftw@plt+0x2ea98>
  43b8bc:	ldr	x1, [x24, #56]
  43b8c0:	ldr	x26, [x1, #16]
  43b8c4:	b	43afac <nftw@plt+0x3842c>
  43b8c8:	ldrh	w0, [x20, #16]
  43b8cc:	ldrh	w1, [x26, #16]
  43b8d0:	cmp	w1, w0
  43b8d4:	b.ne	43b830 <nftw@plt+0x38cb0>  // b.any
  43b8d8:	ldrb	w4, [x20, #19]
  43b8dc:	ldrb	w1, [x26, #19]
  43b8e0:	eor	w1, w4, w1
  43b8e4:	tst	w1, #0xc
  43b8e8:	b.ne	43b128 <nftw@plt+0x385a8>  // b.any
  43b8ec:	sub	w0, w0, #0x1
  43b8f0:	b	43b910 <nftw@plt+0x38d90>
  43b8f4:	ldr	x2, [x20]
  43b8f8:	sub	w0, w0, #0x1
  43b8fc:	ldr	x3, [x26]
  43b900:	ldr	x2, [x2, x1, lsl #3]
  43b904:	ldr	x1, [x3, x1, lsl #3]
  43b908:	cmp	x2, x1
  43b90c:	b.ne	43b128 <nftw@plt+0x385a8>  // b.any
  43b910:	mov	w1, w0
  43b914:	cmn	w0, #0x1
  43b918:	b.ne	43b8f4 <nftw@plt+0x38d74>  // b.any
  43b91c:	and	w4, w4, #0x3
  43b920:	cmp	w4, #0x2
  43b924:	b.eq	43bcbc <nftw@plt+0x3913c>  // b.none
  43b928:	ldr	w21, [x20, #12]
  43b92c:	ldr	w0, [x26, #12]
  43b930:	cmp	w21, w0
  43b934:	b.ne	43b128 <nftw@plt+0x385a8>  // b.any
  43b938:	sub	w21, w21, #0x1
  43b93c:	nop
  43b940:	mov	w0, w21
  43b944:	cmn	w21, #0x1
  43b948:	add	x0, x0, #0x1
  43b94c:	b.eq	43b17c <nftw@plt+0x385fc>  // b.none
  43b950:	add	x0, x0, x0, lsl #1
  43b954:	sub	w21, w21, #0x1
  43b958:	lsl	x0, x0, #3
  43b95c:	add	x1, x26, x0
  43b960:	add	x0, x20, x0
  43b964:	bl	430d40 <nftw@plt+0x2e1c0>
  43b968:	cbnz	w0, 43b940 <nftw@plt+0x38dc0>
  43b96c:	b	43b128 <nftw@plt+0x385a8>
  43b970:	sub	x2, x9, x28
  43b974:	mov	w14, w2
  43b978:	cbnz	w11, 43b44c <nftw@plt+0x388cc>
  43b97c:	b	43b4cc <nftw@plt+0x3894c>
  43b980:	mov	x9, x28
  43b984:	mov	x2, #0x0                   	// #0
  43b988:	mov	w14, #0x0                   	// #0
  43b98c:	b	43b448 <nftw@plt+0x388c8>
  43b990:	cmp	w1, #0x35
  43b994:	b.eq	43bbd8 <nftw@plt+0x39058>  // b.none
  43b998:	cmp	w1, #0x4f
  43b99c:	b.ne	43b9a8 <nftw@plt+0x38e28>  // b.any
  43b9a0:	ldrb	w1, [x24, #1124]
  43b9a4:	cbz	w1, 43b754 <nftw@plt+0x38bd4>
  43b9a8:	adrp	x1, 47e000 <_obstack_memory_used@@Base+0x1cbb8>
  43b9ac:	add	x1, x1, #0x5d0
  43b9b0:	ldp	x4, x5, [x1, #96]
  43b9b4:	stp	x4, x5, [sp, #200]
  43b9b8:	ldp	x4, x5, [x1, #112]
  43b9bc:	stp	x4, x5, [sp, #216]
  43b9c0:	ldr	x1, [x1, #128]
  43b9c4:	str	x1, [sp, #232]
  43b9c8:	cbz	w21, 43b7b4 <nftw@plt+0x38c34>
  43b9cc:	nop
  43b9d0:	mov	x3, #0x0                   	// #0
  43b9d4:	mov	w20, #0x4                   	// #4
  43b9d8:	b	43b7c4 <nftw@plt+0x38c44>
  43b9dc:	cbnz	w22, 43baac <nftw@plt+0x38f2c>
  43b9e0:	cbz	w23, 43bb10 <nftw@plt+0x38f90>
  43b9e4:	cbnz	w27, 43bb50 <nftw@plt+0x38fd0>
  43b9e8:	str	w11, [x26, #12]
  43b9ec:	mov	x0, x24
  43b9f0:	bl	434f48 <nftw@plt+0x323c8>
  43b9f4:	mov	x26, x0
  43b9f8:	ldr	w0, [x0, #12]
  43b9fc:	cbz	w0, 43ba0c <nftw@plt+0x38e8c>
  43ba00:	ldrh	w1, [x26, #30]
  43ba04:	and	w1, w1, #0xfffffffe
  43ba08:	strh	w1, [x26, #30]
  43ba0c:	ldr	w3, [sp, #100]
  43ba10:	cbz	w3, 43bb18 <nftw@plt+0x38f98>
  43ba14:	ldr	x2, [x24, #56]
  43ba18:	mov	w1, #0x18                  	// #24
  43ba1c:	umull	x20, w3, w1
  43ba20:	ldp	x1, x2, [x2, #16]
  43ba24:	sub	x2, x2, x1
  43ba28:	cmp	x20, x2
  43ba2c:	b.hi	43bd78 <nftw@plt+0x391f8>  // b.pmore
  43ba30:	add	x11, x26, #0x18
  43ba34:	cbz	w0, 43bc44 <nftw@plt+0x390c4>
  43ba38:	sub	w0, w0, #0x1
  43ba3c:	add	x2, x26, #0x30
  43ba40:	mov	w9, #0x18                  	// #24
  43ba44:	mov	x3, x11
  43ba48:	mov	w8, w9
  43ba4c:	mov	w7, #0x0                   	// #0
  43ba50:	umaddl	x9, w0, w9, x2
  43ba54:	mov	w13, #0x0                   	// #0
  43ba58:	b	43ba80 <nftw@plt+0x38f00>
  43ba5c:	ldp	x4, x5, [x3]
  43ba60:	add	w7, w7, #0x1
  43ba64:	stp	x4, x5, [x0]
  43ba68:	ldr	x4, [x3, #16]
  43ba6c:	str	x4, [x0, #16]
  43ba70:	umaddl	x0, w7, w8, x11
  43ba74:	add	x3, x3, #0x18
  43ba78:	cmp	x9, x3
  43ba7c:	b.eq	43bc48 <nftw@plt+0x390c8>  // b.none
  43ba80:	ldrb	w4, [x3, #4]
  43ba84:	umaddl	x0, w7, w8, x11
  43ba88:	cmp	w4, #0x26
  43ba8c:	b.ne	43ba5c <nftw@plt+0x38edc>  // b.any
  43ba90:	umaddl	x12, w13, w8, x1
  43ba94:	add	w13, w13, #0x1
  43ba98:	ldp	x4, x5, [x3]
  43ba9c:	stp	x4, x5, [x12]
  43baa0:	ldr	x4, [x3, #16]
  43baa4:	str	x4, [x12, #16]
  43baa8:	b	43ba74 <nftw@plt+0x38ef4>
  43baac:	mov	x0, x24
  43bab0:	adrp	x2, 47e000 <_obstack_memory_used@@Base+0x1cbb8>
  43bab4:	mov	w1, #0x3                   	// #3
  43bab8:	add	x2, x2, #0x268
  43babc:	bl	427178 <nftw@plt+0x245f8>
  43bac0:	b	43b2c0 <nftw@plt+0x38740>
  43bac4:	ubfiz	w21, w21, #3, #1
  43bac8:	and	w2, w2, #0xfffffff3
  43bacc:	orr	w21, w21, #0x4
  43bad0:	ldrh	w0, [sp, #168]
  43bad4:	orr	w2, w21, w2
  43bad8:	mov	x3, #0x30                  	// #48
  43badc:	mov	w25, #0x0                   	// #0
  43bae0:	mov	w27, #0x0                   	// #0
  43bae4:	ubfx	x23, x2, #3, #1
  43bae8:	mov	w21, #0x0                   	// #0
  43baec:	str	x22, [x26]
  43baf0:	strh	w0, [x26, #16]
  43baf4:	strb	w2, [x26, #19]
  43baf8:	stp	wzr, wzr, [sp, #96]
  43bafc:	b	43b334 <nftw@plt+0x387b4>
  43bb00:	cbz	w20, 43be1c <nftw@plt+0x3929c>
  43bb04:	cbnz	w21, 43bdcc <nftw@plt+0x3924c>
  43bb08:	mov	w20, #0x0                   	// #0
  43bb0c:	b	43b754 <nftw@plt+0x38bd4>
  43bb10:	cbnz	w27, 43b2c0 <nftw@plt+0x38740>
  43bb14:	b	43b9e8 <nftw@plt+0x38e68>
  43bb18:	ldr	w0, [sp, #168]
  43bb1c:	mov	w20, #0x1                   	// #1
  43bb20:	strb	wzr, [x24, #22]
  43bb24:	cbnz	w0, 43b2d0 <nftw@plt+0x38750>
  43bb28:	ldp	x27, x28, [sp, #80]
  43bb2c:	b	43aec8 <nftw@plt+0x38348>
  43bb30:	ldr	w1, [x20, #8]
  43bb34:	ldr	x0, [x24, #40]
  43bb38:	bl	435de8 <nftw@plt+0x33268>
  43bb3c:	ldr	w0, [x0, #20]
  43bb40:	cbz	w0, 43bda8 <nftw@plt+0x39228>
  43bb44:	ldrb	w0, [x19, #18]
  43bb48:	and	w0, w0, #0x3
  43bb4c:	b	43b0dc <nftw@plt+0x3855c>
  43bb50:	mov	w2, w25
  43bb54:	mov	x0, x24
  43bb58:	adrp	x3, 47e000 <_obstack_memory_used@@Base+0x1cbb8>
  43bb5c:	mov	w1, #0x3                   	// #3
  43bb60:	add	x3, x3, #0x2a0
  43bb64:	bl	4277f0 <nftw@plt+0x24c70>
  43bb68:	b	43b2c0 <nftw@plt+0x38740>
  43bb6c:	ldr	w20, [sp, #168]
  43bb70:	mov	x0, x24
  43bb74:	ubfiz	x1, x20, #3, #32
  43bb78:	bl	434f48 <nftw@plt+0x323c8>
  43bb7c:	mov	x22, x0
  43bb80:	sub	w0, w20, #0x1
  43bb84:	mov	x20, #0x0                   	// #0
  43bb88:	str	w0, [sp, #172]
  43bb8c:	b	43af98 <nftw@plt+0x38418>
  43bb90:	cmp	w0, #0x43
  43bb94:	cset	w1, eq  // eq = none
  43bb98:	lsl	w1, w1, #1
  43bb9c:	b	43b1dc <nftw@plt+0x3865c>
  43bba0:	cbnz	w21, 43bdcc <nftw@plt+0x3924c>
  43bba4:	cbz	w20, 43bcd4 <nftw@plt+0x39154>
  43bba8:	ldrb	w0, [x24, #1154]
  43bbac:	mov	w21, w20
  43bbb0:	cbz	w0, 43b754 <nftw@plt+0x38bd4>
  43bbb4:	ldrb	w0, [x24, #1142]
  43bbb8:	cbz	w0, 43b754 <nftw@plt+0x38bd4>
  43bbbc:	ldrb	w2, [x24, #1120]
  43bbc0:	mov	x0, x24
  43bbc4:	mov	w1, #0xa                   	// #10
  43bbc8:	cmp	w2, #0x0
  43bbcc:	csel	x2, x22, x23, ne  // ne = any
  43bbd0:	bl	4273b8 <nftw@plt+0x24838>
  43bbd4:	b	43b754 <nftw@plt+0x38bd4>
  43bbd8:	cbnz	w20, 43b9a8 <nftw@plt+0x38e28>
  43bbdc:	cbnz	w21, 43bdcc <nftw@plt+0x3924c>
  43bbe0:	ldp	x2, x3, [x0, #8]
  43bbe4:	mov	x0, x24
  43bbe8:	ldr	w25, [sp, #168]
  43bbec:	mov	w1, w25
  43bbf0:	bl	43acc8 <nftw@plt+0x38148>
  43bbf4:	ands	w20, w0, #0xff
  43bbf8:	b.eq	43bdf8 <nftw@plt+0x39278>  // b.none
  43bbfc:	add	w0, w25, #0x1
  43bc00:	str	w0, [sp, #168]
  43bc04:	b	43b754 <nftw@plt+0x38bd4>
  43bc08:	adrp	x2, 47e000 <_obstack_memory_used@@Base+0x1cbb8>
  43bc0c:	add	x2, x2, #0x5d0
  43bc10:	add	x4, x2, #0x60
  43bc14:	ldp	x2, x3, [x2, #96]
  43bc18:	stp	x2, x3, [sp, #200]
  43bc1c:	ldp	x2, x3, [x4, #16]
  43bc20:	stp	x2, x3, [sp, #216]
  43bc24:	ldr	x2, [x4, #32]
  43bc28:	str	x2, [sp, #232]
  43bc2c:	cbnz	w21, 43b9d0 <nftw@plt+0x38e50>
  43bc30:	cmp	w1, #0x16
  43bc34:	b.ne	43b7b4 <nftw@plt+0x38c34>  // b.any
  43bc38:	add	w20, w20, #0x2
  43bc3c:	mov	x3, #0x0                   	// #0
  43bc40:	b	43b7c4 <nftw@plt+0x38c44>
  43bc44:	mov	x0, x11
  43bc48:	mov	x2, x20
  43bc4c:	bl	402490 <memcpy@plt>
  43bc50:	ldrb	w0, [x26, #19]
  43bc54:	mov	w20, #0x1                   	// #1
  43bc58:	orr	w0, w0, #0x40
  43bc5c:	strb	w0, [x26, #19]
  43bc60:	ldr	w0, [sp, #168]
  43bc64:	strb	wzr, [x24, #22]
  43bc68:	cbnz	w0, 43b2d0 <nftw@plt+0x38750>
  43bc6c:	ldp	x27, x28, [sp, #80]
  43bc70:	b	43aec8 <nftw@plt+0x38348>
  43bc74:	ldr	x2, [x19, #24]
  43bc78:	mov	x0, x24
  43bc7c:	adrp	x4, 47e000 <_obstack_memory_used@@Base+0x1cbb8>
  43bc80:	mov	w3, #0x0                   	// #0
  43bc84:	add	x4, x4, #0x360
  43bc88:	mov	w1, #0x5                   	// #5
  43bc8c:	ldr	w2, [x2, #8]
  43bc90:	bl	4275f8 <nftw@plt+0x24a78>
  43bc94:	b	43b17c <nftw@plt+0x385fc>
  43bc98:	ldr	x1, [x20, #16]
  43bc9c:	adrp	x0, 47e000 <_obstack_memory_used@@Base+0x1cbb8>
  43bca0:	add	x0, x0, #0x1b0
  43bca4:	ldrb	w1, [x1]
  43bca8:	bl	402940 <strchr@plt>
  43bcac:	cmp	x0, #0x0
  43bcb0:	cset	w1, eq  // eq = none
  43bcb4:	lsl	w1, w1, #1
  43bcb8:	b	43b1dc <nftw@plt+0x3865c>
  43bcbc:	mov	x0, x20
  43bcc0:	mov	x1, x26
  43bcc4:	bl	4417f0 <nftw@plt+0x3ec70>
  43bcc8:	tst	w0, #0xff
  43bccc:	b.eq	43b17c <nftw@plt+0x385fc>  // b.none
  43bcd0:	b	43b128 <nftw@plt+0x385a8>
  43bcd4:	ldr	w1, [sp, #168]
  43bcd8:	mov	x0, x24
  43bcdc:	ldr	x3, [x24, #1272]
  43bce0:	add	w2, w1, #0x1
  43bce4:	str	w2, [sp, #168]
  43bce8:	mov	x2, x3
  43bcec:	bl	43acc8 <nftw@plt+0x38148>
  43bcf0:	ldrb	w0, [x24, #1152]
  43bcf4:	mov	w1, #0x1                   	// #1
  43bcf8:	strb	w1, [x24, #22]
  43bcfc:	cbnz	w0, 43bd40 <nftw@plt+0x391c0>
  43bd00:	ldrb	w0, [x24, #1154]
  43bd04:	cbz	w0, 43bd40 <nftw@plt+0x391c0>
  43bd08:	ldrb	w0, [x24, #1142]
  43bd0c:	cbz	w0, 43bd40 <nftw@plt+0x391c0>
  43bd10:	ldrb	w1, [x24, #1120]
  43bd14:	adrp	x0, 47e000 <_obstack_memory_used@@Base+0x1cbb8>
  43bd18:	adrp	x2, 47e000 <_obstack_memory_used@@Base+0x1cbb8>
  43bd1c:	add	x0, x0, #0xa8
  43bd20:	cmp	w1, #0x0
  43bd24:	add	x2, x2, #0x70
  43bd28:	csel	x2, x2, x0, ne  // ne = any
  43bd2c:	mov	w1, #0xa                   	// #10
  43bd30:	mov	x0, x24
  43bd34:	mov	w21, #0x1                   	// #1
  43bd38:	bl	4273b8 <nftw@plt+0x24838>
  43bd3c:	b	43b754 <nftw@plt+0x38bd4>
  43bd40:	ldrsb	w0, [x24, #1198]
  43bd44:	mov	w21, #0x1                   	// #1
  43bd48:	cmp	w0, #0x0
  43bd4c:	b.le	43b754 <nftw@plt+0x38bd4>
  43bd50:	ldrb	w0, [x24, #1120]
  43bd54:	cbnz	w0, 43b754 <nftw@plt+0x38bd4>
  43bd58:	mov	x0, x24
  43bd5c:	adrp	x2, 47e000 <_obstack_memory_used@@Base+0x1cbb8>
  43bd60:	mov	w1, #0x0                   	// #0
  43bd64:	add	x2, x2, #0xa8
  43bd68:	bl	427178 <nftw@plt+0x245f8>
  43bd6c:	b	43b754 <nftw@plt+0x38bd4>
  43bd70:	mov	w0, #0x0                   	// #0
  43bd74:	b	43af4c <nftw@plt+0x383cc>
  43bd78:	add	x1, x24, #0x38
  43bd7c:	mov	x0, x24
  43bd80:	mov	x2, x20
  43bd84:	bl	431618 <nftw@plt+0x2ea98>
  43bd88:	ldr	x1, [x24, #56]
  43bd8c:	ldr	w0, [x26, #12]
  43bd90:	ldr	x1, [x1, #16]
  43bd94:	b	43ba30 <nftw@plt+0x38eb0>
  43bd98:	mov	w11, #0x0                   	// #0
  43bd9c:	mov	x1, #0x18                  	// #24
  43bda0:	str	wzr, [sp, #100]
  43bda4:	b	43b9e8 <nftw@plt+0x38e68>
  43bda8:	ldr	w2, [x20, #8]
  43bdac:	mov	x0, x24
  43bdb0:	ldr	x5, [x19]
  43bdb4:	adrp	x4, 47d000 <_obstack_memory_used@@Base+0x1bbb8>
  43bdb8:	mov	w3, #0x0                   	// #0
  43bdbc:	add	x4, x4, #0xd80
  43bdc0:	mov	w1, #0xe                   	// #14
  43bdc4:	bl	427670 <nftw@plt+0x24af0>
  43bdc8:	b	43bb44 <nftw@plt+0x38fc4>
  43bdcc:	adrp	x0, 47e000 <_obstack_memory_used@@Base+0x1cbb8>
  43bdd0:	add	x0, x0, #0x5d0
  43bdd4:	mov	x3, #0x0                   	// #0
  43bdd8:	mov	w20, #0x4                   	// #4
  43bddc:	ldp	x4, x5, [x0, #96]
  43bde0:	stp	x4, x5, [sp, #200]
  43bde4:	ldp	x4, x5, [x0, #112]
  43bde8:	stp	x4, x5, [sp, #216]
  43bdec:	ldr	x0, [x0, #128]
  43bdf0:	str	x0, [sp, #232]
  43bdf4:	b	43b7c4 <nftw@plt+0x38c44>
  43bdf8:	ldr	w0, [sp, #168]
  43bdfc:	strb	wzr, [x24, #22]
  43be00:	cbz	w0, 43b7f4 <nftw@plt+0x38c74>
  43be04:	sub	w0, w0, #0x1
  43be08:	mov	x26, #0x0                   	// #0
  43be0c:	str	w0, [sp, #172]
  43be10:	b	43b2d0 <nftw@plt+0x38750>
  43be14:	mov	w21, #0x0                   	// #0
  43be18:	b	43b280 <nftw@plt+0x38700>
  43be1c:	adrp	x1, 47e000 <_obstack_memory_used@@Base+0x1cbb8>
  43be20:	add	x1, x1, #0x5d0
  43be24:	ldp	x4, x5, [x1, #96]
  43be28:	stp	x4, x5, [sp, #200]
  43be2c:	ldp	x4, x5, [x1, #112]
  43be30:	stp	x4, x5, [sp, #216]
  43be34:	ldr	x1, [x1, #128]
  43be38:	str	x1, [sp, #232]
  43be3c:	cbnz	w21, 43b9d0 <nftw@plt+0x38e50>
  43be40:	mov	w20, #0x0                   	// #0
  43be44:	b	43b7b4 <nftw@plt+0x38c34>
  43be48:	ldr	x0, [x1, #24]
  43be4c:	add	w2, w2, #0x1
  43be50:	strb	w2, [x0, #18]
  43be54:	ret
  43be58:	stp	x29, x30, [sp, #-48]!
  43be5c:	mov	x29, sp
  43be60:	stp	x19, x20, [sp, #16]
  43be64:	mov	x19, x1
  43be68:	mov	x20, x0
  43be6c:	ldrh	w2, [x1, #18]
  43be70:	orr	w2, w2, #0x80
  43be74:	strh	w2, [x1, #18]
  43be78:	and	w2, w2, #0x3
  43be7c:	cmp	w2, #0x2
  43be80:	b.eq	43beac <nftw@plt+0x3932c>  // b.none
  43be84:	cmp	w2, #0x3
  43be88:	b.eq	43bec0 <nftw@plt+0x39340>  // b.none
  43be8c:	cbz	w2, 43bef0 <nftw@plt+0x39370>
  43be90:	adrp	x2, 47e000 <_obstack_memory_used@@Base+0x1cbb8>
  43be94:	adrp	x0, 47d000 <_obstack_memory_used@@Base+0x1bbb8>
  43be98:	add	x2, x2, #0x3e0
  43be9c:	add	x0, x0, #0xd28
  43bea0:	mov	w1, #0xe0b                 	// #3595
  43bea4:	str	x21, [sp, #32]
  43bea8:	bl	402bf0 <nftw@plt+0x70>
  43beac:	str	x21, [sp, #32]
  43beb0:	ldr	x21, [x1, #24]
  43beb4:	ldrb	w2, [x21, #18]
  43beb8:	cbnz	w2, 43bf10 <nftw@plt+0x39390>
  43bebc:	ldr	x21, [sp, #32]
  43bec0:	ldr	x3, [x20, #1008]
  43bec4:	cbz	x3, 43bee4 <nftw@plt+0x39364>
  43bec8:	ldr	w1, [x20, #48]
  43becc:	mov	x2, x19
  43bed0:	mov	x0, x20
  43bed4:	mov	x16, x3
  43bed8:	ldp	x19, x20, [sp, #16]
  43bedc:	ldp	x29, x30, [sp], #48
  43bee0:	br	x16
  43bee4:	ldp	x19, x20, [sp, #16]
  43bee8:	ldp	x29, x30, [sp], #48
  43beec:	ret
  43bef0:	ldr	x3, [x0, #1016]
  43bef4:	cbz	x3, 43bee4 <nftw@plt+0x39364>
  43bef8:	ldp	x19, x20, [sp, #16]
  43befc:	mov	x2, x1
  43bf00:	ldp	x29, x30, [sp], #48
  43bf04:	mov	x16, x3
  43bf08:	ldr	w1, [x0, #48]
  43bf0c:	br	x16
  43bf10:	ldr	x3, [x0, #1048]
  43bf14:	mov	x1, x21
  43bf18:	sub	w2, w2, #0x1
  43bf1c:	blr	x3
  43bf20:	strb	wzr, [x21, #18]
  43bf24:	ldr	x3, [x20, #1008]
  43bf28:	ldr	x21, [sp, #32]
  43bf2c:	cbnz	x3, 43bec8 <nftw@plt+0x39348>
  43bf30:	b	43bee4 <nftw@plt+0x39364>
  43bf34:	nop
  43bf38:	stp	x29, x30, [sp, #-320]!
  43bf3c:	mov	x29, sp
  43bf40:	stp	x27, x28, [sp, #80]
  43bf44:	mov	x27, x0
  43bf48:	ldr	x0, [x1, #24]
  43bf4c:	str	x0, [sp, #104]
  43bf50:	stp	x19, x20, [sp, #16]
  43bf54:	mov	x19, #0x0                   	// #0
  43bf58:	ldrb	w0, [x0, #19]
  43bf5c:	stp	x21, x22, [sp, #32]
  43bf60:	stp	x23, x24, [sp, #48]
  43bf64:	mov	x23, x1
  43bf68:	str	w3, [sp, #124]
  43bf6c:	str	x2, [sp, #128]
  43bf70:	tbnz	w0, #2, 43c280 <nftw@plt+0x39700>
  43bf74:	ldrh	w0, [x23, #18]
  43bf78:	mov	w1, w0
  43bf7c:	ubfx	x0, x0, #2, #8
  43bf80:	orr	w2, w0, #0x10
  43bf84:	bfi	w1, w2, #2, #8
  43bf88:	strh	w1, [x23, #18]
  43bf8c:	tbz	w0, #5, 43c374 <nftw@plt+0x397f4>
  43bf90:	ldr	x3, [x27, #1032]
  43bf94:	cbz	x3, 43bfa8 <nftw@plt+0x39428>
  43bf98:	ldr	w1, [sp, #124]
  43bf9c:	mov	x2, x23
  43bfa0:	mov	x0, x27
  43bfa4:	blr	x3
  43bfa8:	ldr	x2, [sp, #104]
  43bfac:	ldrb	w0, [x2, #19]
  43bfb0:	ldrh	w1, [x2, #16]
  43bfb4:	orr	w0, w0, #0x20
  43bfb8:	strb	w0, [x2, #19]
  43bfbc:	cbnz	w1, 43c104 <nftw@plt+0x39584>
  43bfc0:	stp	x25, x26, [sp, #64]
  43bfc4:	ldr	w25, [x2, #12]
  43bfc8:	ldrb	w1, [x27, #1157]
  43bfcc:	tbnz	w0, #6, 43c1a4 <nftw@plt+0x39624>
  43bfd0:	add	x22, x2, #0x18
  43bfd4:	cbz	w1, 43c3f0 <nftw@plt+0x39870>
  43bfd8:	ubfiz	x0, x25, #4, #32
  43bfdc:	bl	461560 <_obstack_memory_used@@Base+0x118>
  43bfe0:	mov	x5, x0
  43bfe4:	mov	w20, w25
  43bfe8:	mov	x0, x27
  43bfec:	str	x5, [sp, #96]
  43bff0:	lsl	x1, x20, #3
  43bff4:	bl	4314b0 <nftw@plt+0x2e930>
  43bff8:	mov	x26, x0
  43bffc:	ldr	w2, [sp, #124]
  43c000:	mov	w3, w25
  43c004:	ldr	x0, [x27, #40]
  43c008:	mov	x1, x23
  43c00c:	bl	4358c8 <nftw@plt+0x32d48>
  43c010:	mov	x28, x0
  43c014:	ldr	x5, [sp, #96]
  43c018:	cbz	w25, 43c96c <nftw@plt+0x39dec>
  43c01c:	ldp	x4, x20, [x26, #8]
  43c020:	mov	x0, x23
  43c024:	ldr	x1, [x26, #24]
  43c028:	mov	x23, x19
  43c02c:	mov	x19, x5
  43c030:	mov	x5, x0
  43c034:	mov	w24, #0x0                   	// #0
  43c038:	cmp	x20, x1
  43c03c:	b.hi	43c094 <nftw@plt+0x39514>  // b.pmore
  43c040:	sub	x21, x20, x4
  43c044:	ldr	w3, [x22]
  43c048:	ubfx	x21, x21, #3, #32
  43c04c:	cbz	x28, 43c0ac <nftw@plt+0x3952c>
  43c050:	mov	w1, w24
  43c054:	mov	w2, w3
  43c058:	mov	x0, x28
  43c05c:	str	x5, [sp, #96]
  43c060:	bl	435980 <nftw@plt+0x32e00>
  43c064:	add	w24, w24, #0x1
  43c068:	ldr	x4, [x26, #8]
  43c06c:	str	w0, [x19, x21, lsl #2]
  43c070:	str	x22, [x20], #8
  43c074:	cmp	w25, w24
  43c078:	add	x22, x22, #0x18
  43c07c:	str	x20, [x26, #16]
  43c080:	ldr	x5, [sp, #96]
  43c084:	b.ls	43c0c8 <nftw@plt+0x39548>  // b.plast
  43c088:	ldr	x1, [x26, #24]
  43c08c:	cmp	x20, x1
  43c090:	b.ls	43c040 <nftw@plt+0x394c0>  // b.plast
  43c094:	adrp	x2, 47d000 <_obstack_memory_used@@Base+0x1bbb8>
  43c098:	adrp	x0, 47d000 <_obstack_memory_used@@Base+0x1bbb8>
  43c09c:	add	x2, x2, #0xef8
  43c0a0:	add	x0, x0, #0xd28
  43c0a4:	mov	w1, #0x953                 	// #2387
  43c0a8:	bl	402bf0 <nftw@plt+0x70>
  43c0ac:	str	w3, [x19, x21, lsl #2]
  43c0b0:	add	w24, w24, #0x1
  43c0b4:	str	x22, [x20], #8
  43c0b8:	cmp	w24, w25
  43c0bc:	add	x22, x22, #0x18
  43c0c0:	str	x20, [x26, #16]
  43c0c4:	b.cc	43c038 <nftw@plt+0x394b8>  // b.lo, b.ul, b.last
  43c0c8:	mov	x0, x5
  43c0cc:	mov	x5, x19
  43c0d0:	mov	x19, x23
  43c0d4:	mov	x23, x0
  43c0d8:	mov	x3, x5
  43c0dc:	mov	x2, x26
  43c0e0:	mov	x1, x23
  43c0e4:	mov	w5, w25
  43c0e8:	mov	x0, x27
  43c0ec:	bl	439e18 <nftw@plt+0x37298>
  43c0f0:	adrp	x1, 4a5000 <__environ@@GLIBC_2.17+0xa68>
  43c0f4:	ldr	w0, [x1, #2448]
  43c0f8:	add	w25, w0, w25
  43c0fc:	str	w25, [x1, #2448]
  43c100:	ldp	x25, x26, [sp, #64]
  43c104:	cbz	x19, 43c384 <nftw@plt+0x39804>
  43c108:	ldrb	w0, [x27, #16]
  43c10c:	cbz	w0, 43c1f8 <nftw@plt+0x39678>
  43c110:	ldr	x0, [x27, #136]
  43c114:	adrp	x23, 4a5000 <__environ@@GLIBC_2.17+0xa68>
  43c118:	add	x23, x23, #0x990
  43c11c:	nop
  43c120:	mov	x21, x19
  43c124:	ldr	x0, [x0]
  43c128:	ldp	x22, x20, [x21, #8]
  43c12c:	ldr	x19, [x19]
  43c130:	str	xzr, [x21]
  43c134:	sub	x20, x20, x22
  43c138:	asr	x20, x20, #3
  43c13c:	cbz	x0, 43c258 <nftw@plt+0x396d8>
  43c140:	str	x0, [x27, #136]
  43c144:	add	x1, x22, w20, uxtw #3
  43c148:	stp	x22, x1, [x0, #16]
  43c14c:	stp	x21, xzr, [x0, #32]
  43c150:	str	wzr, [x0, #48]
  43c154:	ldrb	w1, [x27, #1157]
  43c158:	cbnz	w1, 43c168 <nftw@plt+0x395e8>
  43c15c:	ldr	w1, [x23]
  43c160:	add	w20, w1, w20
  43c164:	str	w20, [x23]
  43c168:	cbnz	x19, 43c120 <nftw@plt+0x395a0>
  43c16c:	mov	w0, #0x2                   	// #2
  43c170:	strb	wzr, [x27, #192]
  43c174:	ldp	x19, x20, [sp, #16]
  43c178:	ldp	x21, x22, [sp, #32]
  43c17c:	ldp	x23, x24, [sp, #48]
  43c180:	ldp	x27, x28, [sp, #80]
  43c184:	ldp	x29, x30, [sp], #320
  43c188:	ret
  43c18c:	ubfiz	x0, x25, #1, #32
  43c190:	add	x0, x0, w25, uxtw
  43c194:	add	x0, x2, x0, lsl #3
  43c198:	ldrb	w0, [x0, #28]
  43c19c:	cmp	w0, #0x26
  43c1a0:	b.ne	43d7fc <nftw@plt+0x3ac7c>  // b.any
  43c1a4:	mov	w20, w25
  43c1a8:	sub	w25, w25, #0x1
  43c1ac:	cbnz	w20, 43c18c <nftw@plt+0x3960c>
  43c1b0:	cbz	w1, 43d928 <nftw@plt+0x3ada8>
  43c1b4:	mov	x0, #0x0                   	// #0
  43c1b8:	bl	461560 <_obstack_memory_used@@Base+0x118>
  43c1bc:	mov	x5, x0
  43c1c0:	mov	x1, #0x0                   	// #0
  43c1c4:	mov	x0, x27
  43c1c8:	str	x5, [sp, #96]
  43c1cc:	mov	w25, #0x0                   	// #0
  43c1d0:	bl	4314b0 <nftw@plt+0x2e930>
  43c1d4:	mov	x26, x0
  43c1d8:	ldr	w2, [sp, #124]
  43c1dc:	mov	x1, x23
  43c1e0:	ldr	x0, [x27, #40]
  43c1e4:	mov	w3, #0x0                   	// #0
  43c1e8:	bl	4358c8 <nftw@plt+0x32d48>
  43c1ec:	ldr	x4, [x26, #8]
  43c1f0:	ldr	x5, [sp, #96]
  43c1f4:	b	43c0d8 <nftw@plt+0x39558>
  43c1f8:	mov	x0, x27
  43c1fc:	bl	430100 <nftw@plt+0x2d580>
  43c200:	mov	x20, x0
  43c204:	mov	w1, #0x53                  	// #83
  43c208:	ldr	x0, [x27, #136]
  43c20c:	strb	w1, [x20, #4]
  43c210:	ldr	x1, [sp, #128]
  43c214:	strh	wzr, [x20, #6]
  43c218:	str	x1, [x20, #8]
  43c21c:	cbz	x0, 43c964 <nftw@plt+0x39de4>
  43c220:	ldr	w1, [x0, #48]
  43c224:	ldr	x21, [x0, #40]
  43c228:	cmp	w1, #0x2
  43c22c:	b.ne	43c234 <nftw@plt+0x396b4>  // b.any
  43c230:	ldr	x21, [x21]
  43c234:	ldr	x0, [x0]
  43c238:	cbz	x0, 43d5f4 <nftw@plt+0x3aa74>
  43c23c:	str	x0, [x27, #136]
  43c240:	add	x2, x20, #0x18
  43c244:	mov	w1, #0x1                   	// #1
  43c248:	stp	x20, x2, [x0, #16]
  43c24c:	stp	xzr, x21, [x0, #32]
  43c250:	str	w1, [x0, #48]
  43c254:	b	43c114 <nftw@plt+0x39594>
  43c258:	mov	x0, #0x38                  	// #56
  43c25c:	bl	461560 <_obstack_memory_used@@Base+0x118>
  43c260:	ldr	x1, [x27, #136]
  43c264:	stp	xzr, xzr, [x0]
  43c268:	str	x1, [x0, #8]
  43c26c:	stp	xzr, xzr, [x0, #16]
  43c270:	stp	xzr, xzr, [x0, #32]
  43c274:	str	xzr, [x0, #48]
  43c278:	str	x0, [x1]
  43c27c:	b	43c140 <nftw@plt+0x395c0>
  43c280:	ldrb	w1, [x27, #24]
  43c284:	mov	w2, #0x1                   	// #1
  43c288:	ldr	w0, [x27, #500]
  43c28c:	add	w1, w1, #0x1
  43c290:	strb	w1, [x27, #24]
  43c294:	add	w0, w0, #0x1
  43c298:	strb	w2, [x27, #25]
  43c29c:	str	w0, [x27, #500]
  43c2a0:	mov	x1, #0x0                   	// #0
  43c2a4:	mov	x0, x27
  43c2a8:	bl	43dd38 <nftw@plt+0x3b1b8>
  43c2ac:	ldrb	w1, [x0, #4]
  43c2b0:	cmp	w1, #0x53
  43c2b4:	b.ne	43c2e8 <nftw@plt+0x39768>  // b.any
  43c2b8:	cbz	x19, 43c36c <nftw@plt+0x397ec>
  43c2bc:	ldrh	w1, [x19, #6]
  43c2c0:	tbnz	w1, #0, 43c2a0 <nftw@plt+0x39720>
  43c2c4:	ldr	x1, [x0, #8]
  43c2c8:	cmp	x1, #0x0
  43c2cc:	mov	x1, #0x0                   	// #0
  43c2d0:	csel	x19, x19, x0, ne  // ne = any
  43c2d4:	mov	x0, x27
  43c2d8:	bl	43dd38 <nftw@plt+0x3b1b8>
  43c2dc:	ldrb	w1, [x0, #4]
  43c2e0:	cmp	w1, #0x53
  43c2e4:	b.eq	43c2b8 <nftw@plt+0x39738>  // b.none
  43c2e8:	cmp	w1, #0x14
  43c2ec:	b.eq	43c420 <nftw@plt+0x398a0>  // b.none
  43c2f0:	cmp	w1, #0x16
  43c2f4:	b.ne	43c3a4 <nftw@plt+0x39824>  // b.any
  43c2f8:	add	x1, x27, #0x2b0
  43c2fc:	cmp	x0, x1
  43c300:	b.eq	43c3a4 <nftw@plt+0x39824>  // b.none
  43c304:	ldrb	w1, [x27, #24]
  43c308:	ldr	w0, [x27, #500]
  43c30c:	ldrb	w2, [x27, #1138]
  43c310:	sub	w1, w1, #0x1
  43c314:	sub	w0, w0, #0x1
  43c318:	strb	w1, [x27, #24]
  43c31c:	strb	wzr, [x27, #25]
  43c320:	str	w0, [x27, #500]
  43c324:	cbz	w2, 43c360 <nftw@plt+0x397e0>
  43c328:	ldr	x0, [x23, #24]
  43c32c:	mov	x19, #0x0                   	// #0
  43c330:	ldrb	w0, [x0, #19]
  43c334:	tbnz	w0, #4, 43c360 <nftw@plt+0x397e0>
  43c338:	ldr	x3, [x23]
  43c33c:	adrp	x2, 47e000 <_obstack_memory_used@@Base+0x1cbb8>
  43c340:	mov	x0, x27
  43c344:	add	x2, x2, #0x428
  43c348:	mov	w1, #0x6                   	// #6
  43c34c:	bl	427298 <nftw@plt+0x24718>
  43c350:	cbz	x19, 43c360 <nftw@plt+0x397e0>
  43c354:	mov	x1, x19
  43c358:	mov	x0, x27
  43c35c:	bl	431488 <nftw@plt+0x2e908>
  43c360:	mov	w0, #0x0                   	// #0
  43c364:	strb	wzr, [x27, #192]
  43c368:	b	43c174 <nftw@plt+0x395f4>
  43c36c:	mov	x19, x0
  43c370:	b	43c2a0 <nftw@plt+0x39720>
  43c374:	mov	x1, x23
  43c378:	mov	x0, x27
  43c37c:	bl	43be58 <nftw@plt+0x392d8>
  43c380:	b	43bf90 <nftw@plt+0x39410>
  43c384:	strb	wzr, [x27, #192]
  43c388:	mov	w0, #0x1                   	// #1
  43c38c:	ldp	x19, x20, [sp, #16]
  43c390:	ldp	x21, x22, [sp, #32]
  43c394:	ldp	x23, x24, [sp, #48]
  43c398:	ldp	x27, x28, [sp, #80]
  43c39c:	ldp	x29, x30, [sp], #320
  43c3a0:	ret
  43c3a4:	mov	x0, x27
  43c3a8:	bl	439b30 <nftw@plt+0x36fb0>
  43c3ac:	cbz	x19, 43c304 <nftw@plt+0x39784>
  43c3b0:	ldr	x0, [x27, #136]
  43c3b4:	cbz	x0, 43d920 <nftw@plt+0x3ada0>
  43c3b8:	ldr	w1, [x0, #48]
  43c3bc:	ldr	x20, [x0, #40]
  43c3c0:	cmp	w1, #0x2
  43c3c4:	b.ne	43c3cc <nftw@plt+0x3984c>  // b.any
  43c3c8:	ldr	x20, [x20]
  43c3cc:	ldr	x0, [x0]
  43c3d0:	cbz	x0, 43d850 <nftw@plt+0x3acd0>
  43c3d4:	str	x0, [x27, #136]
  43c3d8:	add	x2, x19, #0x18
  43c3dc:	mov	w1, #0x1                   	// #1
  43c3e0:	stp	x19, x2, [x0, #16]
  43c3e4:	stp	xzr, x20, [x0, #32]
  43c3e8:	str	w1, [x0, #48]
  43c3ec:	b	43c304 <nftw@plt+0x39784>
  43c3f0:	mov	w20, #0x18                  	// #24
  43c3f4:	umull	x20, w25, w20
  43c3f8:	ldr	x0, [x27, #136]
  43c3fc:	ldr	x0, [x0]
  43c400:	cbz	x0, 43d5c0 <nftw@plt+0x3aa40>
  43c404:	str	x0, [x27, #136]
  43c408:	add	x20, x22, x20
  43c40c:	mov	w1, #0x1                   	// #1
  43c410:	stp	x22, x20, [x0, #16]
  43c414:	stp	xzr, x23, [x0, #32]
  43c418:	str	w1, [x0, #48]
  43c41c:	b	43c0f0 <nftw@plt+0x39570>
  43c420:	stp	x25, x26, [sp, #64]
  43c424:	mov	w0, #0x2                   	// #2
  43c428:	mov	w1, #0x1c0                 	// #448
  43c42c:	strb	w0, [x27, #25]
  43c430:	mov	x19, #0x0                   	// #0
  43c434:	ldrb	w25, [x27, #1157]
  43c438:	ldr	x0, [x23, #24]
  43c43c:	str	w25, [sp, #136]
  43c440:	str	wzr, [sp, #208]
  43c444:	mov	x2, x0
  43c448:	mov	x0, x27
  43c44c:	str	x2, [sp, #112]
  43c450:	ldrh	w20, [x2, #16]
  43c454:	cmp	w20, #0x0
  43c458:	csinc	w20, w20, wzr, ne  // ne = any
  43c45c:	umull	x1, w20, w1
  43c460:	bl	4314b0 <nftw@plt+0x2e930>
  43c464:	mov	x21, x0
  43c468:	mov	w0, #0x30                  	// #48
  43c46c:	mov	w1, #0x0                   	// #0
  43c470:	mov	x24, x21
  43c474:	ldr	x22, [x21, #8]
  43c478:	umull	x20, w20, w0
  43c47c:	stp	x21, x22, [sp, #152]
  43c480:	mov	x2, x20
  43c484:	mov	x0, x22
  43c488:	bl	4026f0 <memset@plt>
  43c48c:	ldr	w0, [sp, #208]
  43c490:	cmp	w25, #0x0
  43c494:	mov	x25, x22
  43c498:	add	x1, x22, x20
  43c49c:	add	w0, w0, #0x1
  43c4a0:	str	w0, [sp, #96]
  43c4a4:	ldr	w0, [sp, #136]
  43c4a8:	cset	w2, ne  // ne = any
  43c4ac:	str	x1, [x21, #16]
  43c4b0:	str	x1, [x25]
  43c4b4:	str	x23, [sp, #144]
  43c4b8:	mov	w23, w2
  43c4bc:	cbnz	w0, 43c6a8 <nftw@plt+0x39b28>
  43c4c0:	mov	w21, #0x32                  	// #50
  43c4c4:	mov	w26, #0x0                   	// #0
  43c4c8:	mov	w20, #0x0                   	// #0
  43c4cc:	mov	w22, #0x2                   	// #2
  43c4d0:	b	43c4e4 <nftw@plt+0x39964>
  43c4d4:	cbz	x1, 43c5e0 <nftw@plt+0x39a60>
  43c4d8:	str	x28, [x1, w26, uxtw #3]
  43c4dc:	add	w26, w26, #0x1
  43c4e0:	add	w22, w26, #0x2
  43c4e4:	ldr	x0, [x24, #24]
  43c4e8:	add	x1, x1, w22, uxtw #3
  43c4ec:	cmp	x0, x1
  43c4f0:	b.cc	43c5a0 <nftw@plt+0x39a20>  // b.lo, b.ul, b.last
  43c4f4:	cmp	w23, #0x0
  43c4f8:	ccmp	w22, w21, #0x0, ne  // ne = any
  43c4fc:	b.hi	43c5c8 <nftw@plt+0x39a48>  // b.pmore
  43c500:	add	x1, sp, #0x13c
  43c504:	mov	x0, x27
  43c508:	bl	43dd38 <nftw@plt+0x3b1b8>
  43c50c:	ldrb	w1, [x0, #4]
  43c510:	mov	x28, x0
  43c514:	cmp	w1, #0x53
  43c518:	b.eq	43c588 <nftw@plt+0x39a08>  // b.none
  43c51c:	cmp	w1, #0x14
  43c520:	b.eq	43c57c <nftw@plt+0x399fc>  // b.none
  43c524:	cmp	w1, #0x15
  43c528:	b.eq	43c5ec <nftw@plt+0x39a6c>  // b.none
  43c52c:	cmp	w1, #0x13
  43c530:	b.eq	43c6bc <nftw@plt+0x39b3c>  // b.none
  43c534:	cmp	w1, #0x16
  43c538:	b.eq	43c604 <nftw@plt+0x39a84>  // b.none
  43c53c:	cmp	w1, #0x25
  43c540:	b.eq	43c6e8 <nftw@plt+0x39b68>  // b.none
  43c544:	cmp	w1, #0x51
  43c548:	b.eq	43c6fc <nftw@plt+0x39b7c>  // b.none
  43c54c:	ldr	x1, [x25]
  43c550:	ldrb	w0, [x27, #1157]
  43c554:	cbz	w0, 43c4d4 <nftw@plt+0x39954>
  43c558:	cbz	x1, 43c5e0 <nftw@plt+0x39a60>
  43c55c:	mov	w5, w26
  43c560:	ldr	w6, [sp, #316]
  43c564:	ldr	x0, [x25, #32]
  43c568:	str	x28, [x1, x5, lsl #3]
  43c56c:	add	x7, x0, w26, uxtw #2
  43c570:	cbz	x7, 43c4dc <nftw@plt+0x3995c>
  43c574:	str	w6, [x0, x5, lsl #2]
  43c578:	b	43c4dc <nftw@plt+0x3995c>
  43c57c:	add	w20, w20, #0x1
  43c580:	ldr	x1, [x25]
  43c584:	b	43c550 <nftw@plt+0x399d0>
  43c588:	ldr	x1, [x25]
  43c58c:	cbnz	w26, 43c550 <nftw@plt+0x399d0>
  43c590:	ldr	x0, [x24, #24]
  43c594:	add	x1, x1, w22, uxtw #3
  43c598:	cmp	x0, x1
  43c59c:	b.cs	43c4f4 <nftw@plt+0x39974>  // b.hs, b.nlast
  43c5a0:	mov	x1, x24
  43c5a4:	mov	x0, x27
  43c5a8:	mov	x2, #0x1f40                	// #8000
  43c5ac:	bl	431550 <nftw@plt+0x2e9d0>
  43c5b0:	mov	x24, x0
  43c5b4:	cmp	w23, #0x0
  43c5b8:	ldr	x0, [x0, #16]
  43c5bc:	str	x0, [x25]
  43c5c0:	ccmp	w22, w21, #0x0, ne  // ne = any
  43c5c4:	b.ls	43c500 <nftw@plt+0x39980>  // b.plast
  43c5c8:	ldr	x0, [x25, #32]
  43c5cc:	add	w21, w21, #0x3e8
  43c5d0:	ubfiz	x1, x21, #2, #32
  43c5d4:	bl	4615e8 <_obstack_memory_used@@Base+0x1a0>
  43c5d8:	str	x0, [x25, #32]
  43c5dc:	b	43c500 <nftw@plt+0x39980>
  43c5e0:	mov	x0, #0x0                   	// #0
  43c5e4:	str	x28, [x0]
  43c5e8:	brk	#0x3e8
  43c5ec:	ldr	x1, [x25]
  43c5f0:	sub	w5, w20, #0x1
  43c5f4:	mov	x0, x1
  43c5f8:	cbz	w20, 43c608 <nftw@plt+0x39a88>
  43c5fc:	mov	w20, w5
  43c600:	b	43c550 <nftw@plt+0x399d0>
  43c604:	ldr	x0, [x25]
  43c608:	cbz	w26, 43c62c <nftw@plt+0x39aac>
  43c60c:	nop
  43c610:	sub	w1, w26, #0x1
  43c614:	ldr	x5, [x0, w1, uxtw #3]
  43c618:	ldrb	w5, [x5, #4]
  43c61c:	cmp	w5, #0x53
  43c620:	b.ne	43c7d4 <nftw@plt+0x39c54>  // b.any
  43c624:	mov	w26, w1
  43c628:	cbnz	w26, 43c610 <nftw@plt+0x39a90>
  43c62c:	mov	x1, #0x0                   	// #0
  43c630:	str	w26, [x25, #24]
  43c634:	add	x7, x27, #0x2b0
  43c638:	ldrb	w5, [x27, #1157]
  43c63c:	cbnz	w5, 43c7b4 <nftw@plt+0x39c34>
  43c640:	cbz	x0, 43c7dc <nftw@plt+0x39c5c>
  43c644:	str	x7, [x0, x1, lsl #3]
  43c648:	ldr	x1, [sp, #112]
  43c64c:	ldrh	w7, [x1, #16]
  43c650:	ldr	w1, [sp, #96]
  43c654:	cmp	w1, w7
  43c658:	b.hi	43c670 <nftw@plt+0x39af0>  // b.pmore
  43c65c:	add	w3, w26, #0x1
  43c660:	add	x1, x25, #0x30
  43c664:	csel	x25, x1, x25, ne  // ne = any
  43c668:	add	x3, x0, x3, lsl #3
  43c66c:	str	x3, [x24, #16]
  43c670:	ldrb	w1, [x28, #4]
  43c674:	sub	w0, w1, #0x15
  43c678:	and	w0, w0, #0xff
  43c67c:	cmp	w0, #0x1
  43c680:	b.ls	43c7e8 <nftw@plt+0x39c68>  // b.plast
  43c684:	ldr	w0, [sp, #96]
  43c688:	str	w0, [sp, #208]
  43c68c:	ldr	x1, [x24, #16]
  43c690:	str	x1, [x25]
  43c694:	ldr	w0, [sp, #208]
  43c698:	add	w0, w0, #0x1
  43c69c:	str	w0, [sp, #96]
  43c6a0:	ldr	w0, [sp, #136]
  43c6a4:	cbz	w0, 43c4c0 <nftw@plt+0x39940>
  43c6a8:	mov	x0, #0xc8                  	// #200
  43c6ac:	bl	461560 <_obstack_memory_used@@Base+0x118>
  43c6b0:	str	x0, [x25, #32]
  43c6b4:	ldr	x1, [x25]
  43c6b8:	b	43c4c0 <nftw@plt+0x39940>
  43c6bc:	ldr	x0, [x25]
  43c6c0:	mov	x1, x0
  43c6c4:	cbnz	w20, 43c550 <nftw@plt+0x399d0>
  43c6c8:	ldr	x2, [sp, #112]
  43c6cc:	ldrb	w5, [x2, #19]
  43c6d0:	tbz	w5, #3, 43c608 <nftw@plt+0x39a88>
  43c6d4:	ldrh	w5, [x2, #16]
  43c6d8:	ldr	w2, [sp, #96]
  43c6dc:	cmp	w2, w5
  43c6e0:	b.eq	43c550 <nftw@plt+0x399d0>  // b.none
  43c6e4:	b	43c608 <nftw@plt+0x39a88>
  43c6e8:	ldrh	w5, [x0, #6]
  43c6ec:	ldr	x0, [x25]
  43c6f0:	mov	x1, x0
  43c6f4:	tbz	w5, #6, 43c550 <nftw@plt+0x399d0>
  43c6f8:	b	43c608 <nftw@plt+0x39a88>
  43c6fc:	mov	x0, x27
  43c700:	bl	430100 <nftw@plt+0x2d580>
  43c704:	ldp	x6, x7, [x28]
  43c708:	stp	x6, x7, [x0]
  43c70c:	ldr	x1, [x28, #16]
  43c710:	mov	x28, x0
  43c714:	str	x1, [x0, #16]
  43c718:	cbz	x19, 43c79c <nftw@plt+0x39c1c>
  43c71c:	ldp	x1, x0, [x19, #16]
  43c720:	sub	x0, x0, x1
  43c724:	cmp	x0, #0x7
  43c728:	b.hi	43c74c <nftw@plt+0x39bcc>  // b.pmore
  43c72c:	ldr	x5, [x19, #8]
  43c730:	mov	x0, x27
  43c734:	sub	x1, x1, x5
  43c738:	lsl	x1, x1, #1
  43c73c:	bl	4314b0 <nftw@plt+0x2e930>
  43c740:	ldr	x1, [x0, #16]
  43c744:	str	x19, [x0]
  43c748:	mov	x19, x0
  43c74c:	str	x28, [x1], #8
  43c750:	ldrb	w0, [x28, #4]
  43c754:	str	x1, [x19, #16]
  43c758:	cmp	w0, #0x52
  43c75c:	b.eq	43c77c <nftw@plt+0x39bfc>  // b.none
  43c760:	add	x1, sp, #0x13c
  43c764:	mov	x0, x27
  43c768:	bl	43dd38 <nftw@plt+0x3b1b8>
  43c76c:	mov	x28, x0
  43c770:	ldrb	w0, [x0, #4]
  43c774:	cmp	w0, #0x16
  43c778:	b.ne	43c718 <nftw@plt+0x39b98>  // b.any
  43c77c:	mov	w0, #0x201                 	// #513
  43c780:	strh	w0, [x27, #24]
  43c784:	ldr	x0, [x25]
  43c788:	ldrb	w5, [x28, #4]
  43c78c:	mov	x1, x0
  43c790:	cmp	w5, #0x16
  43c794:	b.eq	43c608 <nftw@plt+0x39a88>  // b.none
  43c798:	b	43c4e4 <nftw@plt+0x39964>
  43c79c:	mov	x1, #0x100                 	// #256
  43c7a0:	mov	x0, x27
  43c7a4:	bl	4314b0 <nftw@plt+0x2e930>
  43c7a8:	mov	x19, x0
  43c7ac:	ldr	x1, [x0, #16]
  43c7b0:	b	43c74c <nftw@plt+0x39bcc>
  43c7b4:	cbz	x0, 43c7dc <nftw@plt+0x39c5c>
  43c7b8:	ldr	x5, [x25, #32]
  43c7bc:	ldr	w6, [x27, #688]
  43c7c0:	str	x7, [x0, x1, lsl #3]
  43c7c4:	add	x7, x5, x1, lsl #2
  43c7c8:	cbz	x7, 43c648 <nftw@plt+0x39ac8>
  43c7cc:	str	w6, [x5, x1, lsl #2]
  43c7d0:	b	43c648 <nftw@plt+0x39ac8>
  43c7d4:	mov	w1, w26
  43c7d8:	b	43c630 <nftw@plt+0x39ab0>
  43c7dc:	mov	x0, #0x0                   	// #0
  43c7e0:	str	x7, [x0]
  43c7e4:	brk	#0x3e8
  43c7e8:	cmp	w1, #0x16
  43c7ec:	ldr	x23, [sp, #144]
  43c7f0:	b.eq	43c8e4 <nftw@plt+0x39d64>  // b.none
  43c7f4:	ldr	w0, [sp, #96]
  43c7f8:	cmp	w0, #0x1
  43c7fc:	mov	w21, w0
  43c800:	b.eq	43c948 <nftw@plt+0x39dc8>  // b.none
  43c804:	ldr	x20, [sp, #112]
  43c808:	mov	w3, w21
  43c80c:	mov	x2, x23
  43c810:	mov	x0, x27
  43c814:	mov	x1, x20
  43c818:	bl	43a740 <nftw@plt+0x37bc0>
  43c81c:	ands	w0, w0, #0xff
  43c820:	str	w0, [sp, #176]
  43c824:	b.eq	43c910 <nftw@plt+0x39d90>  // b.none
  43c828:	ldrb	w0, [x20, #19]
  43c82c:	tbz	w0, #3, 43c844 <nftw@plt+0x39cc4>
  43c830:	ldrh	w0, [x20, #16]
  43c834:	cmp	w21, w0
  43c838:	b.cc	43d9bc <nftw@plt+0x3ae3c>  // b.lo, b.ul, b.last
  43c83c:	cmp	w21, #0x1
  43c840:	b.eq	43d9a8 <nftw@plt+0x3ae28>  // b.none
  43c844:	ldrb	w0, [x27, #24]
  43c848:	ldr	x1, [sp, #104]
  43c84c:	sub	w0, w0, #0x1
  43c850:	strb	w0, [x27, #24]
  43c854:	ldr	w0, [x27, #500]
  43c858:	strb	wzr, [x27, #25]
  43c85c:	sub	w0, w0, #0x1
  43c860:	ldrh	w1, [x1, #16]
  43c864:	str	w0, [x27, #500]
  43c868:	ldr	x0, [sp, #152]
  43c86c:	ldr	x0, [x0, #8]
  43c870:	str	x0, [sp, #112]
  43c874:	cbnz	w1, 43c974 <nftw@plt+0x39df4>
  43c878:	ldr	w0, [sp, #96]
  43c87c:	cbz	w0, 43c8d4 <nftw@plt+0x39d54>
  43c880:	ldr	w1, [sp, #208]
  43c884:	mov	w21, #0x30                  	// #48
  43c888:	ldr	x0, [sp, #112]
  43c88c:	add	x20, x0, #0x8
  43c890:	umaddl	x21, w1, w21, x0
  43c894:	add	x21, x21, #0x38
  43c898:	ldr	x0, [x20]
  43c89c:	cbz	x0, 43c8a8 <nftw@plt+0x39d28>
  43c8a0:	bl	402910 <free@plt>
  43c8a4:	str	xzr, [x20]
  43c8a8:	ldr	x0, [x20, #24]
  43c8ac:	cbz	x0, 43c8b8 <nftw@plt+0x39d38>
  43c8b0:	bl	402910 <free@plt>
  43c8b4:	str	xzr, [x20, #24]
  43c8b8:	ldr	x0, [x20, #32]
  43c8bc:	cbz	x0, 43c8c8 <nftw@plt+0x39d48>
  43c8c0:	bl	402910 <free@plt>
  43c8c4:	str	xzr, [x20, #32]
  43c8c8:	add	x20, x20, #0x30
  43c8cc:	cmp	x21, x20
  43c8d0:	b.ne	43c898 <nftw@plt+0x39d18>  // b.any
  43c8d4:	ldr	x0, [sp, #152]
  43c8d8:	bl	4316e8 <nftw@plt+0x2eb68>
  43c8dc:	ldp	x25, x26, [sp, #64]
  43c8e0:	b	43bf74 <nftw@plt+0x393f4>
  43c8e4:	ldr	x0, [x27, #136]
  43c8e8:	ldr	x0, [x0, #8]
  43c8ec:	cbz	x0, 43db8c <nftw@plt+0x3b00c>
  43c8f0:	mov	x0, x27
  43c8f4:	bl	439b30 <nftw@plt+0x36fb0>
  43c8f8:	ldr	x3, [x23]
  43c8fc:	adrp	x2, 47e000 <_obstack_memory_used@@Base+0x1cbb8>
  43c900:	mov	x0, x27
  43c904:	add	x2, x2, #0x3f8
  43c908:	mov	w1, #0x3                   	// #3
  43c90c:	bl	427178 <nftw@plt+0x245f8>
  43c910:	ldr	x1, [sp, #152]
  43c914:	mov	x0, x27
  43c918:	bl	431488 <nftw@plt+0x2e908>
  43c91c:	strb	wzr, [x27, #25]
  43c920:	ldrb	w1, [x27, #24]
  43c924:	ldr	w0, [x27, #500]
  43c928:	ldrb	w2, [x27, #1138]
  43c92c:	sub	w1, w1, #0x1
  43c930:	sub	w0, w0, #0x1
  43c934:	strb	w1, [x27, #24]
  43c938:	str	w0, [x27, #500]
  43c93c:	cbnz	w2, 43dcdc <nftw@plt+0x3b15c>
  43c940:	ldp	x25, x26, [sp, #64]
  43c944:	b	43c350 <nftw@plt+0x397d0>
  43c948:	mov	x21, x0
  43c94c:	cbnz	w7, 43c804 <nftw@plt+0x39c84>
  43c950:	ldr	x0, [sp, #160]
  43c954:	ldr	w0, [x0, #24]
  43c958:	cmp	w0, #0x0
  43c95c:	cset	w21, ne  // ne = any
  43c960:	b	43c804 <nftw@plt+0x39c84>
  43c964:	mov	x21, #0x0                   	// #0
  43c968:	b	43c234 <nftw@plt+0x396b4>
  43c96c:	ldr	x4, [x26, #8]
  43c970:	b	43c0d8 <nftw@plt+0x39558>
  43c974:	ldr	x1, [sp, #104]
  43c978:	ldrb	w0, [x1, #19]
  43c97c:	ldr	w25, [x1, #12]
  43c980:	tbnz	w0, #6, 43cbdc <nftw@plt+0x3a05c>
  43c984:	ldr	x0, [sp, #104]
  43c988:	mov	w1, #0x18                  	// #24
  43c98c:	add	x28, x0, #0x18
  43c990:	mov	w0, w25
  43c994:	umaddl	x21, w25, w1, x28
  43c998:	stp	x28, x21, [sp, #136]
  43c99c:	cmp	x28, x21
  43c9a0:	b.cs	43db80 <nftw@plt+0x3b000>  // b.hs, b.nlast
  43c9a4:	mov	w22, w25
  43c9a8:	mov	x26, x27
  43c9ac:	stp	x19, x23, [sp, #160]
  43c9b0:	b	43c9c0 <nftw@plt+0x39e40>
  43c9b4:	add	x28, x28, #0x18
  43c9b8:	cmp	x21, x28
  43c9bc:	b.ls	43d238 <nftw@plt+0x3a6b8>  // b.plast
  43c9c0:	ldrb	w0, [x28, #4]
  43c9c4:	cmp	w0, #0x50
  43c9c8:	b.ne	43c9b4 <nftw@plt+0x39e34>  // b.any
  43c9cc:	ldr	w4, [x28, #8]
  43c9d0:	mov	w1, #0x30                  	// #48
  43c9d4:	ldrh	w0, [x28, #6]
  43c9d8:	add	w25, w25, #0x2
  43c9dc:	ldr	x2, [sp, #112]
  43c9e0:	sub	w4, w4, #0x1
  43c9e4:	add	w24, w22, #0x2
  43c9e8:	umaddl	x19, w4, w1, x2
  43c9ec:	tbz	w0, #2, 43d150 <nftw@plt+0x3a5d0>
  43c9f0:	ldr	x0, [x19, #16]
  43c9f4:	mov	w22, w24
  43c9f8:	cbnz	x0, 43c9b4 <nftw@plt+0x39e34>
  43c9fc:	ldr	x1, [x26, #64]
  43ca00:	ldp	x0, x1, [x1, #16]
  43ca04:	sub	x1, x1, x0
  43ca08:	cmp	x1, #0x2
  43ca0c:	b.ls	43da0c <nftw@plt+0x3ae8c>  // b.plast
  43ca10:	mov	x20, x0
  43ca14:	mov	w1, #0x22                  	// #34
  43ca18:	mov	x23, #0x0                   	// #0
  43ca1c:	mov	w2, #0x0                   	// #0
  43ca20:	mov	w22, #0x0                   	// #0
  43ca24:	strb	w1, [x20], #1
  43ca28:	ldr	w1, [x19, #24]
  43ca2c:	cbz	w1, 43dc2c <nftw@plt+0x3b0ac>
  43ca30:	mov	w27, w2
  43ca34:	str	x21, [sp, #184]
  43ca38:	mov	x21, x26
  43ca3c:	str	w24, [sp, #192]
  43ca40:	str	w25, [sp, #200]
  43ca44:	nop
  43ca48:	ldr	x0, [x19]
  43ca4c:	ldr	x24, [x0, w22, uxtw #3]
  43ca50:	ldrb	w0, [x24, #4]
  43ca54:	cmp	w0, #0x53
  43ca58:	b.eq	43d734 <nftw@plt+0x3abb4>  // b.none
  43ca5c:	cmp	w0, #0x3e
  43ca60:	b.eq	43cab8 <nftw@plt+0x39f38>  // b.none
  43ca64:	cmp	w0, #0x38
  43ca68:	b.eq	43cab8 <nftw@plt+0x39f38>  // b.none
  43ca6c:	cmp	w0, #0x3f
  43ca70:	b.eq	43cab8 <nftw@plt+0x39f38>  // b.none
  43ca74:	cmp	w0, #0x39
  43ca78:	b.eq	43cab8 <nftw@plt+0x39f38>  // b.none
  43ca7c:	cmp	w0, #0x41
  43ca80:	b.eq	43cab8 <nftw@plt+0x39f38>  // b.none
  43ca84:	cmp	w0, #0x3b
  43ca88:	b.eq	43cab8 <nftw@plt+0x39f38>  // b.none
  43ca8c:	cmp	w0, #0x40
  43ca90:	b.eq	43cab8 <nftw@plt+0x39f38>  // b.none
  43ca94:	cmp	w0, #0x3a
  43ca98:	b.eq	43cab8 <nftw@plt+0x39f38>  // b.none
  43ca9c:	cmp	w0, #0x42
  43caa0:	b.eq	43cab8 <nftw@plt+0x39f38>  // b.none
  43caa4:	cmp	w0, #0x3c
  43caa8:	b.eq	43cab8 <nftw@plt+0x39f38>  // b.none
  43caac:	bl	428f48 <nftw@plt+0x263c8>
  43cab0:	tst	w0, #0xff
  43cab4:	b.eq	43cdc0 <nftw@plt+0x3a240>  // b.none
  43cab8:	mov	x0, x24
  43cabc:	bl	430378 <nftw@plt+0x2d7f8>
  43cac0:	mov	w0, w0
  43cac4:	ldr	w25, [sp, #176]
  43cac8:	lsl	x0, x0, #2
  43cacc:	ldr	x1, [x21, #64]
  43cad0:	add	x26, x0, #0x3
  43cad4:	ldr	x0, [x1, #24]
  43cad8:	ldr	x1, [x1, #16]
  43cadc:	sub	x0, x0, x20
  43cae0:	cmp	x26, x0
  43cae4:	b.hi	43d574 <nftw@plt+0x3a9f4>  // b.pmore
  43cae8:	sub	x0, x20, #0x1
  43caec:	cmp	x1, x0
  43caf0:	b.eq	43cb0c <nftw@plt+0x39f8c>  // b.none
  43caf4:	cmp	x23, #0x0
  43caf8:	csel	x23, x23, x24, ne  // ne = any
  43cafc:	ldrh	w0, [x23, #6]
  43cb00:	tbz	w0, #0, 43cb0c <nftw@plt+0x39f8c>
  43cb04:	mov	w0, #0x20                  	// #32
  43cb08:	strb	w0, [x20], #1
  43cb0c:	cbnz	w25, 43d61c <nftw@plt+0x3aa9c>
  43cb10:	mov	x2, x20
  43cb14:	mov	x1, x24
  43cb18:	mov	x0, x21
  43cb1c:	mov	w3, #0x1                   	// #1
  43cb20:	bl	4306e0 <nftw@plt+0x2db60>
  43cb24:	mov	x20, x0
  43cb28:	ldrb	w0, [x24, #4]
  43cb2c:	ldr	w1, [x19, #24]
  43cb30:	cmp	w0, #0x3d
  43cb34:	b.eq	43d558 <nftw@plt+0x3a9d8>  // b.none
  43cb38:	mov	x23, #0x0                   	// #0
  43cb3c:	mov	w27, #0x0                   	// #0
  43cb40:	add	w22, w22, #0x1
  43cb44:	cmp	w22, w1
  43cb48:	b.cc	43ca48 <nftw@plt+0x39ec8>  // b.lo, b.ul, b.last
  43cb4c:	mov	x26, x21
  43cb50:	ldr	w24, [sp, #192]
  43cb54:	ldr	w25, [sp, #200]
  43cb58:	add	x1, x20, #0x1
  43cb5c:	ldr	x21, [sp, #184]
  43cb60:	tbz	w27, #0, 43cb80 <nftw@plt+0x3a000>
  43cb64:	mov	w1, #0x0                   	// #0
  43cb68:	mov	x0, x26
  43cb6c:	adrp	x2, 47e000 <_obstack_memory_used@@Base+0x1cbb8>
  43cb70:	add	x2, x2, #0x470
  43cb74:	bl	427178 <nftw@plt+0x245f8>
  43cb78:	mov	x1, x20
  43cb7c:	sub	x20, x20, #0x1
  43cb80:	mov	w2, #0x22                  	// #34
  43cb84:	strb	w2, [x20], #2
  43cb88:	mov	w22, w24
  43cb8c:	mov	x0, x26
  43cb90:	ldr	x2, [x26, #64]
  43cb94:	ldr	x24, [x2, #16]
  43cb98:	str	x20, [x2, #16]
  43cb9c:	sub	x20, x1, x24
  43cba0:	bl	430100 <nftw@plt+0x2d580>
  43cba4:	mov	w1, #0x3e                  	// #62
  43cba8:	strb	wzr, [x24, w20, uxtw]
  43cbac:	strb	w1, [x0, #4]
  43cbb0:	strh	wzr, [x0, #6]
  43cbb4:	str	w20, [x0, #8]
  43cbb8:	str	x24, [x0, #16]
  43cbbc:	str	x0, [x19, #16]
  43cbc0:	b	43c9b4 <nftw@plt+0x39e34>
  43cbc4:	ubfiz	x0, x25, #1, #32
  43cbc8:	add	x0, x0, w25, uxtw
  43cbcc:	add	x0, x1, x0, lsl #3
  43cbd0:	ldrb	w0, [x0, #28]
  43cbd4:	cmp	w0, #0x26
  43cbd8:	b.ne	43db98 <nftw@plt+0x3b018>  // b.any
  43cbdc:	mov	w22, w25
  43cbe0:	sub	w25, w25, #0x1
  43cbe4:	cbnz	w22, 43cbc4 <nftw@plt+0x3a044>
  43cbe8:	ldr	x0, [sp, #104]
  43cbec:	mov	w25, #0x0                   	// #0
  43cbf0:	mov	x20, #0x0                   	// #0
  43cbf4:	add	x0, x0, #0x18
  43cbf8:	stp	x0, x0, [sp, #136]
  43cbfc:	mov	x0, #0x0                   	// #0
  43cc00:	ldrb	w1, [x27, #1157]
  43cc04:	str	w1, [sp, #272]
  43cc08:	cbnz	w1, 43d490 <nftw@plt+0x3a910>
  43cc0c:	mov	x1, x20
  43cc10:	mov	x0, x27
  43cc14:	bl	4314b0 <nftw@plt+0x2e930>
  43cc18:	mov	x21, x0
  43cc1c:	ldr	x0, [x0, #8]
  43cc20:	mov	x14, #0x0                   	// #0
  43cc24:	mov	x7, #0x0                   	// #0
  43cc28:	str	x0, [sp, #248]
  43cc2c:	ldr	x1, [sp, #104]
  43cc30:	mov	x2, #0xffffffffffffffd0    	// #-48
  43cc34:	mov	w0, #0x30                  	// #48
  43cc38:	ldp	x4, x5, [sp, #136]
  43cc3c:	ldrh	w3, [x1, #16]
  43cc40:	ldrb	w1, [x1, #19]
  43cc44:	and	w1, w1, #0x8
  43cc48:	umaddl	x0, w0, w3, x2
  43cc4c:	mov	w2, w1
  43cc50:	ldr	x1, [sp, #112]
  43cc54:	cmp	x4, x5
  43cc58:	add	x0, x1, x0
  43cc5c:	ldr	w0, [x0, #24]
  43cc60:	str	w0, [sp, #228]
  43cc64:	b.cs	43d1b4 <nftw@plt+0x3a634>  // b.hs, b.nlast
  43cc68:	adrp	x1, 47e000 <_obstack_memory_used@@Base+0x1cbb8>
  43cc6c:	adrp	x0, 47e000 <_obstack_memory_used@@Base+0x1cbb8>
  43cc70:	add	x1, x1, #0x4f0
  43cc74:	add	x0, x0, #0x4a0
  43cc78:	mov	w6, #0x0                   	// #0
  43cc7c:	mov	x20, x4
  43cc80:	mov	x26, x7
  43cc84:	mov	w25, w2
  43cc88:	mov	x24, x14
  43cc8c:	mov	w28, #0x0                   	// #0
  43cc90:	str	xzr, [sp, #160]
  43cc94:	str	wzr, [sp, #168]
  43cc98:	str	wzr, [sp, #224]
  43cc9c:	str	x23, [sp, #240]
  43cca0:	mov	w23, w6
  43cca4:	stp	x19, x1, [sp, #256]
  43cca8:	str	x0, [sp, #296]
  43ccac:	b	43cd20 <nftw@plt+0x3a1a0>
  43ccb0:	cmp	w23, #0x1
  43ccb4:	b.eq	43d124 <nftw@plt+0x3a5a4>  // b.none
  43ccb8:	b.le	43cdf0 <nftw@plt+0x3a270>
  43ccbc:	cmp	w23, #0x2
  43ccc0:	b.eq	43d220 <nftw@plt+0x3a6a0>  // b.none
  43ccc4:	cmp	w0, #0x26
  43ccc8:	b.eq	43d47c <nftw@plt+0x3a8fc>  // b.none
  43cccc:	cmp	w0, #0x14
  43ccd0:	b.eq	43d5e8 <nftw@plt+0x3aa68>  // b.none
  43ccd4:	cmp	w0, #0x15
  43ccd8:	b.ne	43cde0 <nftw@plt+0x3a260>  // b.any
  43ccdc:	sub	w23, w23, #0x1
  43cce0:	cmp	w23, #0x2
  43cce4:	b.ne	43d72c <nftw@plt+0x3abac>  // b.any
  43cce8:	ldr	w0, [sp, #168]
  43ccec:	cbz	w0, 43d6b4 <nftw@plt+0x3ab34>
  43ccf0:	ldr	w2, [x20]
  43ccf4:	mov	x0, x27
  43ccf8:	adrp	x3, 47e000 <_obstack_memory_used@@Base+0x1cbb8>
  43ccfc:	mov	w1, #0x3                   	// #3
  43cd00:	add	x3, x3, #0x320
  43cd04:	mov	w23, #0x0                   	// #0
  43cd08:	bl	4277f0 <nftw@plt+0x24c70>
  43cd0c:	str	wzr, [sp, #168]
  43cd10:	ldr	x0, [sp, #144]
  43cd14:	add	x20, x20, #0x18
  43cd18:	cmp	x20, x0
  43cd1c:	b.cs	43d1a8 <nftw@plt+0x3a628>  // b.hs, b.nlast
  43cd20:	ldrb	w0, [x20, #4]
  43cd24:	cbz	w25, 43cdf0 <nftw@plt+0x3a270>
  43cd28:	cmp	w0, #0x35
  43cd2c:	b.ne	43ccb0 <nftw@plt+0x3a130>  // b.any
  43cd30:	ldr	x2, [x20, #8]
  43cd34:	ldr	x1, [x27, #1280]
  43cd38:	cmp	x2, x1
  43cd3c:	b.eq	43d258 <nftw@plt+0x3a6d8>  // b.none
  43cd40:	cmp	w23, #0x1
  43cd44:	b.eq	43d130 <nftw@plt+0x3a5b0>  // b.none
  43cd48:	b.gt	43ccbc <nftw@plt+0x3a13c>
  43cd4c:	ldrb	w8, [x27, #1157]
  43cd50:	ldr	x0, [sp, #136]
  43cd54:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  43cd58:	ldp	x19, x2, [x21, #16]
  43cd5c:	sub	x0, x20, x0
  43cd60:	movk	x1, #0xaaab
  43cd64:	cmp	w8, #0x2
  43cd68:	asr	x0, x0, #3
  43cd6c:	mul	x0, x0, x1
  43cd70:	csel	w1, w28, w0, cs  // cs = hs, nlast
  43cd74:	cmp	x19, x2
  43cd78:	b.hi	43c094 <nftw@plt+0x39514>  // b.pmore
  43cd7c:	cbz	x24, 43cdac <nftw@plt+0x3a22c>
  43cd80:	ldr	x22, [x21, #8]
  43cd84:	ldr	w3, [x20]
  43cd88:	sub	x22, x19, x22
  43cd8c:	ubfx	x22, x22, #3, #32
  43cd90:	add	x22, x24, x22, lsl #2
  43cd94:	cbz	x26, 43cda8 <nftw@plt+0x3a228>
  43cd98:	mov	w2, w3
  43cd9c:	mov	x0, x26
  43cda0:	bl	435980 <nftw@plt+0x32e00>
  43cda4:	mov	w3, w0
  43cda8:	str	w3, [x22]
  43cdac:	mov	x0, x19
  43cdb0:	add	w28, w28, #0x1
  43cdb4:	str	x20, [x0], #8
  43cdb8:	str	x0, [x21, #16]
  43cdbc:	b	43cd10 <nftw@plt+0x3a190>
  43cdc0:	ldrb	w0, [x24, #4]
  43cdc4:	bl	428f58 <nftw@plt+0x263d8>
  43cdc8:	ands	w25, w0, #0xff
  43cdcc:	mov	x0, x24
  43cdd0:	b.ne	43cabc <nftw@plt+0x39f3c>  // b.any
  43cdd4:	bl	430378 <nftw@plt+0x2d7f8>
  43cdd8:	mov	w0, w0
  43cddc:	b	43cacc <nftw@plt+0x39f4c>
  43cde0:	ldr	w1, [sp, #228]
  43cde4:	str	wzr, [sp, #168]
  43cde8:	cbz	w1, 43cd10 <nftw@plt+0x3a190>
  43cdec:	nop
  43cdf0:	ldrb	w8, [x27, #1157]
  43cdf4:	cmp	w0, #0x50
  43cdf8:	b.ne	43cd50 <nftw@plt+0x3a1d0>  // b.any
  43cdfc:	ldr	w2, [x20, #8]
  43ce00:	mov	w3, #0x30                  	// #48
  43ce04:	ldrh	w1, [x20, #6]
  43ce08:	ldr	x4, [sp, #112]
  43ce0c:	sub	w0, w2, #0x1
  43ce10:	umaddl	x0, w0, w3, x4
  43ce14:	tbz	w1, #2, 43d180 <nftw@plt+0x3a600>
  43ce18:	mov	w19, #0x1                   	// #1
  43ce1c:	add	x22, x0, #0x10
  43ce20:	mov	w18, w19
  43ce24:	mov	x9, #0x0                   	// #0
  43ce28:	cbnz	w8, 43d758 <nftw@plt+0x3abd8>
  43ce2c:	ldrb	w0, [x27, #16]
  43ce30:	cbz	w0, 43ce40 <nftw@plt+0x3a2c0>
  43ce34:	ldrb	w0, [x27, #17]
  43ce38:	mov	x11, #0x0                   	// #0
  43ce3c:	cbz	w0, 43cf40 <nftw@plt+0x3a3c0>
  43ce40:	ldr	x0, [sp, #136]
  43ce44:	cmp	x20, x0
  43ce48:	b.eq	43d230 <nftw@plt+0x3a6b0>  // b.none
  43ce4c:	ldurh	w0, [x20, #-18]
  43ce50:	tbnz	w0, #3, 43d230 <nftw@plt+0x3a6b0>
  43ce54:	ldr	x2, [sp, #160]
  43ce58:	cbz	x2, 43ce74 <nftw@plt+0x3a2f4>
  43ce5c:	ldp	x1, x0, [x21, #8]
  43ce60:	cmp	x1, x0
  43ce64:	b.eq	43ce74 <nftw@plt+0x3a2f4>  // b.none
  43ce68:	sub	x0, x0, #0x8
  43ce6c:	cmp	x2, x0
  43ce70:	b.eq	43d230 <nftw@plt+0x3a6b0>  // b.none
  43ce74:	mov	x0, x27
  43ce78:	str	w8, [sp, #176]
  43ce7c:	str	w18, [sp, #184]
  43ce80:	str	x9, [sp, #192]
  43ce84:	bl	430100 <nftw@plt+0x2d580>
  43ce88:	ldr	x1, [sp, #136]
  43ce8c:	mov	x5, x0
  43ce90:	mov	w2, #0x53                  	// #83
  43ce94:	sub	x1, x20, x1
  43ce98:	ldr	x4, [x21, #16]
  43ce9c:	strb	w2, [x0, #4]
  43cea0:	strh	wzr, [x0, #6]
  43cea4:	asr	x0, x1, #3
  43cea8:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  43ceac:	movk	x1, #0xaaab
  43ceb0:	ldr	x2, [x21, #24]
  43ceb4:	str	x20, [x5, #8]
  43ceb8:	mul	x0, x0, x1
  43cebc:	ldrb	w1, [x27, #1157]
  43cec0:	cmp	w1, #0x2
  43cec4:	csel	w1, w28, w0, cs  // cs = hs, nlast
  43cec8:	cmp	x4, x2
  43cecc:	b.hi	43c094 <nftw@plt+0x39514>  // b.pmore
  43ced0:	ldr	w8, [sp, #176]
  43ced4:	ldr	w18, [sp, #184]
  43ced8:	ldr	x9, [sp, #192]
  43cedc:	cbz	x24, 43cf34 <nftw@plt+0x3a3b4>
  43cee0:	ldr	x10, [x21, #8]
  43cee4:	ldr	w3, [x5]
  43cee8:	sub	x10, x4, x10
  43ceec:	ubfx	x10, x10, #3, #32
  43cef0:	add	x10, x24, x10, lsl #2
  43cef4:	cbz	x26, 43cf30 <nftw@plt+0x3a3b0>
  43cef8:	mov	w2, w3
  43cefc:	mov	x0, x26
  43cf00:	str	w8, [sp, #176]
  43cf04:	stp	x5, x4, [sp, #184]
  43cf08:	str	x10, [sp, #200]
  43cf0c:	str	w18, [sp, #212]
  43cf10:	str	x9, [sp, #216]
  43cf14:	bl	435980 <nftw@plt+0x32e00>
  43cf18:	ldp	x5, x4, [sp, #184]
  43cf1c:	mov	w3, w0
  43cf20:	ldr	w8, [sp, #176]
  43cf24:	ldr	w18, [sp, #212]
  43cf28:	ldr	x10, [sp, #200]
  43cf2c:	ldr	x9, [sp, #216]
  43cf30:	str	w3, [x10]
  43cf34:	str	x5, [x4], #8
  43cf38:	mov	x11, #0x0                   	// #0
  43cf3c:	str	x4, [x21, #16]
  43cf40:	cbnz	w18, 43d340 <nftw@plt+0x3a7c0>
  43cf44:	ldrb	w0, [x27, #1154]
  43cf48:	cbz	w0, 43d0cc <nftw@plt+0x3a54c>
  43cf4c:	ldrb	w0, [x27, #1152]
  43cf50:	cbnz	w0, 43d0cc <nftw@plt+0x3a54c>
  43cf54:	ldr	x0, [sp, #104]
  43cf58:	ldrb	w0, [x0, #19]
  43cf5c:	tbnz	w0, #4, 43d0cc <nftw@plt+0x3a54c>
  43cf60:	ldr	x0, [x27]
  43cf64:	cbz	x0, 43cf70 <nftw@plt+0x3a3f0>
  43cf68:	ldrb	w0, [x0, #106]
  43cf6c:	cbnz	w0, 43d0cc <nftw@plt+0x3a54c>
  43cf70:	ldrb	w0, [x27, #1120]
  43cf74:	cbnz	w0, 43dbb0 <nftw@plt+0x3b030>
  43cf78:	ldrsb	w0, [x27, #1198]
  43cf7c:	cmp	w0, #0x0
  43cf80:	cbz	w0, 43cfb0 <nftw@plt+0x3a430>
  43cf84:	ldr	x0, [sp, #240]
  43cf88:	cset	w1, gt
  43cf8c:	ldr	w4, [x20, #8]
  43cf90:	add	w1, w1, #0x15
  43cf94:	ldr	x2, [sp, #264]
  43cf98:	str	x11, [sp, #176]
  43cf9c:	ldr	x3, [x0]
  43cfa0:	mov	x0, x27
  43cfa4:	bl	4273b8 <nftw@plt+0x24838>
  43cfa8:	ldr	x11, [sp, #176]
  43cfac:	nop
  43cfb0:	ldrb	w0, [x27, #16]
  43cfb4:	cbnz	w0, 43d24c <nftw@plt+0x3a6cc>
  43cfb8:	ldrh	w0, [x20, #6]
  43cfbc:	mov	w12, w28
  43cfc0:	tbnz	w0, #3, 43d024 <nftw@plt+0x3a4a4>
  43cfc4:	ldr	x0, [x21, #16]
  43cfc8:	mov	w18, #0x0                   	// #0
  43cfcc:	ldr	x2, [sp, #160]
  43cfd0:	cbz	x2, 43cff0 <nftw@plt+0x3a470>
  43cfd4:	ldr	x1, [x21, #8]
  43cfd8:	cmp	x0, x1
  43cfdc:	b.eq	43cff0 <nftw@plt+0x3a470>  // b.none
  43cfe0:	sub	x0, x0, #0x8
  43cfe4:	add	w12, w28, w18
  43cfe8:	cmp	x2, x0
  43cfec:	b.eq	43d024 <nftw@plt+0x3a4a4>  // b.none
  43cff0:	ldp	x0, x1, [x21, #16]
  43cff4:	add	x2, x27, #0x298
  43cff8:	cmp	x0, x1
  43cffc:	b.hi	43c094 <nftw@plt+0x39514>  // b.pmore
  43d000:	cbz	x24, 43d018 <nftw@plt+0x3a498>
  43d004:	ldr	x1, [x21, #8]
  43d008:	ldr	w3, [x27, #664]
  43d00c:	sub	x1, x0, x1
  43d010:	ubfx	x1, x1, #3, #32
  43d014:	str	w3, [x24, x1, lsl #2]
  43d018:	str	x2, [x0], #8
  43d01c:	add	w12, w28, w18
  43d020:	str	x0, [x21, #16]
  43d024:	cbnz	x11, 43d078 <nftw@plt+0x3a4f8>
  43d028:	mov	w28, w12
  43d02c:	b	43cd10 <nftw@plt+0x3a190>
  43d030:	mov	x24, x5
  43d034:	mov	x5, x20
  43d038:	ldr	x20, [sp, #232]
  43d03c:	mov	x1, x28
  43d040:	mov	w28, w21
  43d044:	mov	x21, x1
  43d048:	mov	x26, x25
  43d04c:	ldr	w23, [sp, #288]
  43d050:	ldrh	w1, [x20, #6]
  43d054:	mov	x27, x13
  43d058:	ldr	w25, [sp, #276]
  43d05c:	ldr	w18, [sp, #292]
  43d060:	ldr	x11, [sp, #280]
  43d064:	tbz	w1, #3, 43d7ec <nftw@plt+0x3ac6c>
  43d068:	ldr	x1, [x21, #8]
  43d06c:	mov	x11, x5
  43d070:	cmp	x1, x0
  43d074:	b.eq	43d028 <nftw@plt+0x3a4a8>  // b.none
  43d078:	mov	x0, x27
  43d07c:	str	x11, [sp, #176]
  43d080:	str	w12, [sp, #184]
  43d084:	bl	430100 <nftw@plt+0x2d580>
  43d088:	ldr	x11, [sp, #176]
  43d08c:	ldr	w12, [sp, #184]
  43d090:	ldr	x1, [x11]
  43d094:	ldrb	w1, [x1, #4]
  43d098:	strb	w1, [x0, #4]
  43d09c:	ldr	x2, [x11]
  43d0a0:	ldrh	w1, [x20, #6]
  43d0a4:	ldp	x2, x3, [x2, #8]
  43d0a8:	stp	x2, x3, [x0, #8]
  43d0ac:	tbz	w1, #3, 43d468 <nftw@plt+0x3a8e8>
  43d0b0:	ldr	x1, [x11]
  43d0b4:	ldrh	w1, [x1, #6]
  43d0b8:	orr	w1, w1, #0x8
  43d0bc:	strh	w1, [x0, #6]
  43d0c0:	mov	w28, w12
  43d0c4:	str	x0, [x11]
  43d0c8:	b	43cd10 <nftw@plt+0x3a190>
  43d0cc:	ldrsb	w0, [x27, #1198]
  43d0d0:	cmp	w0, #0x0
  43d0d4:	b.le	43cfb0 <nftw@plt+0x3a430>
  43d0d8:	ldrb	w0, [x27, #1120]
  43d0dc:	cbnz	w0, 43cfb0 <nftw@plt+0x3a430>
  43d0e0:	ldr	x0, [sp, #104]
  43d0e4:	ldrb	w0, [x0, #19]
  43d0e8:	tbnz	w0, #4, 43cfb0 <nftw@plt+0x3a430>
  43d0ec:	ldr	x0, [x27]
  43d0f0:	cbz	x0, 43d0fc <nftw@plt+0x3a57c>
  43d0f4:	ldrb	w0, [x0, #106]
  43d0f8:	cbnz	w0, 43cfb0 <nftw@plt+0x3a430>
  43d0fc:	ldr	x0, [sp, #240]
  43d100:	mov	w1, #0x16                  	// #22
  43d104:	ldr	w4, [x20, #8]
  43d108:	ldr	x2, [sp, #264]
  43d10c:	str	x11, [sp, #176]
  43d110:	ldr	x3, [x0]
  43d114:	mov	x0, x27
  43d118:	bl	427298 <nftw@plt+0x24718>
  43d11c:	ldr	x11, [sp, #176]
  43d120:	b	43cfb0 <nftw@plt+0x3a430>
  43d124:	cmp	w0, #0x14
  43d128:	mov	w23, #0x2                   	// #2
  43d12c:	b.eq	43cd10 <nftw@plt+0x3a190>  // b.none
  43d130:	ldr	w2, [sp, #224]
  43d134:	mov	x0, x27
  43d138:	adrp	x3, 47e000 <_obstack_memory_used@@Base+0x1cbb8>
  43d13c:	mov	w1, #0x3                   	// #3
  43d140:	add	x3, x3, #0x2e8
  43d144:	mov	w23, #0x1                   	// #1
  43d148:	bl	4277f0 <nftw@plt+0x24c70>
  43d14c:	b	43cd10 <nftw@plt+0x3a190>
  43d150:	tbnz	w0, #3, 43d210 <nftw@plt+0x3a690>
  43d154:	ldr	x0, [sp, #136]
  43d158:	cmp	x0, x28
  43d15c:	b.eq	43d168 <nftw@plt+0x3a5e8>  // b.none
  43d160:	ldurh	w0, [x28, #-18]
  43d164:	tbnz	w0, #3, 43d210 <nftw@plt+0x3a690>
  43d168:	ldr	x0, [x19, #8]
  43d16c:	cbz	x0, 43da28 <nftw@plt+0x3aea8>
  43d170:	ldr	w0, [x19, #28]
  43d174:	add	w22, w22, #0x1
  43d178:	add	w22, w22, w0
  43d17c:	b	43c9b4 <nftw@plt+0x39e34>
  43d180:	tbz	w1, #3, 43d4e0 <nftw@plt+0x3a960>
  43d184:	ldr	w18, [x0, #24]
  43d188:	mov	x9, #0x0                   	// #0
  43d18c:	mov	w19, #0x0                   	// #0
  43d190:	ldr	x22, [x0]
  43d194:	cbz	w8, 43ce2c <nftw@plt+0x3a2ac>
  43d198:	cbz	x22, 43dc10 <nftw@plt+0x3b090>
  43d19c:	mov	w19, #0x0                   	// #0
  43d1a0:	ldr	x9, [x0, #32]
  43d1a4:	b	43ce2c <nftw@plt+0x3a2ac>
  43d1a8:	ldr	x23, [sp, #240]
  43d1ac:	mov	x14, x24
  43d1b0:	ldr	x19, [sp, #256]
  43d1b4:	ldp	x0, x20, [x21, #8]
  43d1b8:	sub	x20, x20, x0
  43d1bc:	ldr	w0, [sp, #272]
  43d1c0:	lsr	x20, x20, #3
  43d1c4:	cbz	w0, 43d598 <nftw@plt+0x3aa18>
  43d1c8:	ldr	x4, [sp, #248]
  43d1cc:	mov	w5, w20
  43d1d0:	mov	x3, x14
  43d1d4:	mov	x2, x21
  43d1d8:	mov	x1, x23
  43d1dc:	mov	x0, x27
  43d1e0:	bl	439e18 <nftw@plt+0x37298>
  43d1e4:	ldp	x3, x0, [x21, #8]
  43d1e8:	adrp	x2, 4a5000 <__environ@@GLIBC_2.17+0xa68>
  43d1ec:	ldr	w1, [x2, #2448]
  43d1f0:	sub	x0, x0, x3
  43d1f4:	ldr	x3, [sp, #152]
  43d1f8:	lsr	x0, x0, #3
  43d1fc:	add	w0, w1, w0
  43d200:	str	w0, [x2, #2448]
  43d204:	ldr	x3, [x3, #8]
  43d208:	str	x3, [sp, #112]
  43d20c:	b	43c878 <nftw@plt+0x39cf8>
  43d210:	ldr	w0, [x19, #24]
  43d214:	add	w22, w22, #0x1
  43d218:	add	w22, w22, w0
  43d21c:	b	43c9b4 <nftw@plt+0x39e34>
  43d220:	cmp	w0, #0x26
  43d224:	b.eq	43d8f8 <nftw@plt+0x3ad78>  // b.none
  43d228:	mov	w23, #0x3                   	// #3
  43d22c:	b	43cccc <nftw@plt+0x3a14c>
  43d230:	mov	x11, #0x0                   	// #0
  43d234:	b	43cf40 <nftw@plt+0x3a3c0>
  43d238:	mov	x27, x26
  43d23c:	mov	w0, w22
  43d240:	ubfiz	x20, x22, #3, #32
  43d244:	ldp	x19, x23, [sp, #160]
  43d248:	b	43cc00 <nftw@plt+0x3a080>
  43d24c:	mov	w12, w28
  43d250:	cbz	x11, 43d028 <nftw@plt+0x3a4a8>
  43d254:	b	43d078 <nftw@plt+0x3a4f8>
  43d258:	cbz	w23, 43d278 <nftw@plt+0x3a6f8>
  43d25c:	ldr	w2, [x20]
  43d260:	mov	x0, x27
  43d264:	adrp	x3, 47e000 <_obstack_memory_used@@Base+0x1cbb8>
  43d268:	mov	w1, #0x3                   	// #3
  43d26c:	add	x3, x3, #0x2b8
  43d270:	bl	4277f0 <nftw@plt+0x24c70>
  43d274:	b	43cd10 <nftw@plt+0x3a190>
  43d278:	ldr	x0, [sp, #136]
  43d27c:	cmp	x20, x0
  43d280:	ldr	w0, [x20]
  43d284:	str	w0, [sp, #224]
  43d288:	b.eq	43d294 <nftw@plt+0x3a714>  // b.none
  43d28c:	ldurh	w0, [x20, #-18]
  43d290:	tbz	w0, #3, 43d2b4 <nftw@plt+0x3a734>
  43d294:	ldr	x23, [x21, #16]
  43d298:	ldr	x0, [x21, #8]
  43d29c:	cmp	x0, x23
  43d2a0:	b.eq	43d8ec <nftw@plt+0x3ad6c>  // b.none
  43d2a4:	sub	x0, x23, #0x8
  43d2a8:	mov	w23, #0x1                   	// #1
  43d2ac:	str	x0, [sp, #160]
  43d2b0:	b	43cd10 <nftw@plt+0x3a190>
  43d2b4:	mov	x0, x27
  43d2b8:	bl	430100 <nftw@plt+0x2d580>
  43d2bc:	ldr	x1, [sp, #136]
  43d2c0:	mov	x19, x0
  43d2c4:	mov	w0, #0x53                  	// #83
  43d2c8:	sub	x1, x20, x1
  43d2cc:	ldr	x23, [x21, #16]
  43d2d0:	asr	x1, x1, #3
  43d2d4:	strb	w0, [x19, #4]
  43d2d8:	mov	x0, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  43d2dc:	movk	x0, #0xaaab
  43d2e0:	strh	wzr, [x19, #6]
  43d2e4:	mul	x1, x1, x0
  43d2e8:	ldr	x0, [x21, #24]
  43d2ec:	str	x20, [x19, #8]
  43d2f0:	ldrb	w2, [x27, #1157]
  43d2f4:	cmp	w2, #0x2
  43d2f8:	csel	w1, w28, w1, cs  // cs = hs, nlast
  43d2fc:	cmp	x23, x0
  43d300:	b.hi	43c094 <nftw@plt+0x39514>  // b.pmore
  43d304:	cbz	x24, 43d334 <nftw@plt+0x3a7b4>
  43d308:	ldr	x22, [x21, #8]
  43d30c:	ldr	w3, [x19]
  43d310:	sub	x22, x23, x22
  43d314:	ubfx	x22, x22, #3, #32
  43d318:	add	x22, x24, x22, lsl #2
  43d31c:	cbz	x26, 43d330 <nftw@plt+0x3a7b0>
  43d320:	mov	w2, w3
  43d324:	mov	x0, x26
  43d328:	bl	435980 <nftw@plt+0x32e00>
  43d32c:	mov	w3, w0
  43d330:	str	w3, [x22]
  43d334:	str	x19, [x23], #8
  43d338:	str	x23, [x21, #16]
  43d33c:	b	43d298 <nftw@plt+0x3a718>
  43d340:	ldr	x0, [sp, #136]
  43d344:	and	w10, w19, #0xfffffffd
  43d348:	ldr	x5, [x21, #16]
  43d34c:	sub	x15, x20, x0
  43d350:	mov	w0, #0xaaab                	// #43691
  43d354:	str	x20, [sp, #232]
  43d358:	asr	x15, x15, #3
  43d35c:	movk	w0, #0xaaaa, lsl #16
  43d360:	mov	x20, x5
  43d364:	mov	x5, x24
  43d368:	ldr	w24, [sp, #272]
  43d36c:	add	w12, w28, w18
  43d370:	mul	w15, w15, w0
  43d374:	mov	x0, x21
  43d378:	mov	x13, x27
  43d37c:	mov	w21, w28
  43d380:	mov	x27, x22
  43d384:	eor	w10, w10, #0x1
  43d388:	mov	w22, w28
  43d38c:	mov	x28, x0
  43d390:	str	w25, [sp, #276]
  43d394:	mov	x25, x26
  43d398:	mov	w26, w15
  43d39c:	str	w23, [sp, #288]
  43d3a0:	mov	w23, w8
  43d3a4:	str	x11, [sp, #280]
  43d3a8:	str	w18, [sp, #292]
  43d3ac:	nop
  43d3b0:	ldrb	w0, [x13, #1157]
  43d3b4:	cmp	w24, #0x1
  43d3b8:	csel	w1, w22, w21, gt
  43d3bc:	cmp	w0, #0x1
  43d3c0:	csel	w1, w1, w26, hi  // hi = pmore
  43d3c4:	cbz	x27, 43d750 <nftw@plt+0x3abd0>
  43d3c8:	ldr	x4, [x27]
  43d3cc:	cbz	w23, 43d45c <nftw@plt+0x3a8dc>
  43d3d0:	ldr	w2, [x9]
  43d3d4:	ldr	x0, [x28, #24]
  43d3d8:	cmp	x0, x20
  43d3dc:	b.cc	43c094 <nftw@plt+0x39514>  // b.lo, b.ul, b.last
  43d3e0:	cbz	x5, 43d428 <nftw@plt+0x3a8a8>
  43d3e4:	ldr	x19, [x28, #8]
  43d3e8:	sub	x19, x20, x19
  43d3ec:	ubfx	x19, x19, #3, #32
  43d3f0:	add	x19, x5, x19, lsl #2
  43d3f4:	cbz	x25, 43d424 <nftw@plt+0x3a8a4>
  43d3f8:	ldr	x0, [sp, #232]
  43d3fc:	stp	x4, x5, [sp, #176]
  43d400:	stp	x9, x13, [sp, #192]
  43d404:	ldr	w3, [x0]
  43d408:	mov	x0, x25
  43d40c:	stp	w12, w10, [sp, #212]
  43d410:	bl	435980 <nftw@plt+0x32e00>
  43d414:	mov	w2, w0
  43d418:	ldp	x4, x5, [sp, #176]
  43d41c:	ldp	x9, x13, [sp, #192]
  43d420:	ldp	w12, w10, [sp, #212]
  43d424:	str	w2, [x19]
  43d428:	mov	x0, x20
  43d42c:	str	x4, [x0], #8
  43d430:	str	x0, [x28, #16]
  43d434:	cbz	w10, 43d448 <nftw@plt+0x3a8c8>
  43d438:	cmp	w23, #0x0
  43d43c:	add	x1, x9, #0x4
  43d440:	add	x27, x27, #0x8
  43d444:	csel	x9, x1, x9, ne  // ne = any
  43d448:	add	w22, w22, #0x1
  43d44c:	cmp	w12, w22
  43d450:	b.eq	43d030 <nftw@plt+0x3a4b0>  // b.none
  43d454:	mov	x20, x0
  43d458:	b	43d3b0 <nftw@plt+0x3a830>
  43d45c:	ldr	x0, [x27]
  43d460:	ldr	w2, [x0]
  43d464:	b	43d3d4 <nftw@plt+0x3a854>
  43d468:	ldr	x1, [x11]
  43d46c:	ldrh	w1, [x1, #6]
  43d470:	and	w1, w1, #0xfffffff7
  43d474:	and	w1, w1, #0xffff
  43d478:	b	43d0bc <nftw@plt+0x3a53c>
  43d47c:	mov	w0, #0x1                   	// #1
  43d480:	str	w0, [sp, #168]
  43d484:	ldr	w0, [sp, #228]
  43d488:	cbz	w0, 43cd10 <nftw@plt+0x3a190>
  43d48c:	b	43cd4c <nftw@plt+0x3a1cc>
  43d490:	lsl	x0, x0, #4
  43d494:	bl	461560 <_obstack_memory_used@@Base+0x118>
  43d498:	mov	x14, x0
  43d49c:	mov	x1, x20
  43d4a0:	mov	x0, x27
  43d4a4:	str	x14, [sp, #160]
  43d4a8:	bl	4314b0 <nftw@plt+0x2e930>
  43d4ac:	mov	x21, x0
  43d4b0:	ldr	w1, [sp, #272]
  43d4b4:	ldr	w2, [sp, #124]
  43d4b8:	ldr	x4, [x0, #8]
  43d4bc:	cmp	w1, #0x1
  43d4c0:	ldr	x0, [x27, #40]
  43d4c4:	csel	w3, w22, w25, ne  // ne = any
  43d4c8:	mov	x1, x23
  43d4cc:	str	x4, [sp, #248]
  43d4d0:	bl	4358c8 <nftw@plt+0x32d48>
  43d4d4:	mov	x7, x0
  43d4d8:	ldr	x14, [sp, #160]
  43d4dc:	b	43cc2c <nftw@plt+0x3a0ac>
  43d4e0:	ldr	x1, [sp, #136]
  43d4e4:	mov	x9, #0x0                   	// #0
  43d4e8:	cmp	x20, x1
  43d4ec:	b.eq	43d760 <nftw@plt+0x3abe0>  // b.none
  43d4f0:	ldurh	w1, [x20, #-18]
  43d4f4:	tbz	w1, #3, 43d760 <nftw@plt+0x3abe0>
  43d4f8:	ldr	w18, [x0, #24]
  43d4fc:	ldr	x22, [x0]
  43d500:	cbnz	w8, 43db74 <nftw@plt+0x3aff4>
  43d504:	ldp	x1, x0, [x21, #8]
  43d508:	sub	x3, x0, x1
  43d50c:	tst	x3, #0x7fffffff8
  43d510:	b.eq	43d8b8 <nftw@plt+0x3ad38>  // b.none
  43d514:	cmp	x1, x0
  43d518:	b.eq	43dd28 <nftw@plt+0x3b1a8>  // b.none
  43d51c:	ldur	x3, [x0, #-8]
  43d520:	sub	x11, x0, #0x8
  43d524:	ldrb	w3, [x3, #4]
  43d528:	cmp	w3, #0x13
  43d52c:	b.eq	43dbd8 <nftw@plt+0x3b058>  // b.none
  43d530:	ldr	x0, [sp, #160]
  43d534:	cmp	w18, #0x0
  43d538:	ccmp	x11, x0, #0x4, eq  // eq = none
  43d53c:	b.eq	43d8b8 <nftw@plt+0x3ad38>  // b.none
  43d540:	ldrb	w0, [x27, #16]
  43d544:	cbz	w0, 43cf44 <nftw@plt+0x3a3c4>
  43d548:	ldrb	w0, [x27, #17]
  43d54c:	cbz	w0, 43cf44 <nftw@plt+0x3a3c4>
  43d550:	mov	w19, #0x0                   	// #0
  43d554:	b	43cf40 <nftw@plt+0x3a3c0>
  43d558:	ldr	x0, [x24, #16]
  43d55c:	add	w27, w27, #0x1
  43d560:	mov	x23, #0x0                   	// #0
  43d564:	ldrb	w0, [x0]
  43d568:	cmp	w0, #0x5c
  43d56c:	b.ne	43cb38 <nftw@plt+0x39fb8>  // b.any
  43d570:	b	43cb40 <nftw@plt+0x39fc0>
  43d574:	sub	x20, x20, x1
  43d578:	mov	x0, x21
  43d57c:	add	x1, x21, #0x40
  43d580:	mov	x2, x26
  43d584:	bl	431618 <nftw@plt+0x2ea98>
  43d588:	ldr	x0, [x21, #64]
  43d58c:	ldr	x1, [x0, #16]
  43d590:	add	x20, x1, x20
  43d594:	b	43cae8 <nftw@plt+0x39f68>
  43d598:	ldr	x0, [x27, #136]
  43d59c:	ldr	x0, [x0]
  43d5a0:	cbz	x0, 43d9d4 <nftw@plt+0x3ae54>
  43d5a4:	ldr	x1, [sp, #248]
  43d5a8:	str	x0, [x27, #136]
  43d5ac:	stp	x21, x23, [x0, #32]
  43d5b0:	add	x20, x1, w20, uxtw #3
  43d5b4:	stp	x1, x20, [x0, #16]
  43d5b8:	str	wzr, [x0, #48]
  43d5bc:	b	43d1e4 <nftw@plt+0x3a664>
  43d5c0:	mov	x0, #0x38                  	// #56
  43d5c4:	bl	461560 <_obstack_memory_used@@Base+0x118>
  43d5c8:	ldr	x1, [x27, #136]
  43d5cc:	stp	xzr, xzr, [x0]
  43d5d0:	str	x1, [x0, #8]
  43d5d4:	stp	xzr, xzr, [x0, #16]
  43d5d8:	stp	xzr, xzr, [x0, #32]
  43d5dc:	str	xzr, [x0, #48]
  43d5e0:	str	x0, [x1]
  43d5e4:	b	43c404 <nftw@plt+0x39884>
  43d5e8:	add	w23, w23, #0x1
  43d5ec:	str	wzr, [sp, #168]
  43d5f0:	b	43d484 <nftw@plt+0x3a904>
  43d5f4:	mov	x0, #0x38                  	// #56
  43d5f8:	bl	461560 <_obstack_memory_used@@Base+0x118>
  43d5fc:	ldr	x1, [x27, #136]
  43d600:	stp	xzr, xzr, [x0]
  43d604:	str	x1, [x0, #8]
  43d608:	stp	xzr, xzr, [x0, #16]
  43d60c:	stp	xzr, xzr, [x0, #32]
  43d610:	str	xzr, [x0, #48]
  43d614:	str	x0, [x1]
  43d618:	b	43c23c <nftw@plt+0x396bc>
  43d61c:	mov	x1, x26
  43d620:	mov	x0, x21
  43d624:	bl	4314b0 <nftw@plt+0x2e930>
  43d628:	mov	x23, x0
  43d62c:	mov	x1, x24
  43d630:	mov	x0, x21
  43d634:	mov	w3, #0x1                   	// #1
  43d638:	ldr	x26, [x23, #16]
  43d63c:	mov	x2, x26
  43d640:	bl	4306e0 <nftw@plt+0x2db60>
  43d644:	sub	x0, x0, x26
  43d648:	sub	w1, w0, #0x1
  43d64c:	cbz	w0, 43d6a4 <nftw@plt+0x3ab24>
  43d650:	mov	w2, w1
  43d654:	add	x2, x2, #0x1
  43d658:	add	x2, x26, x2
  43d65c:	b	43d670 <nftw@plt+0x3aaf0>
  43d660:	mov	x20, x1
  43d664:	cmp	x26, x2
  43d668:	strb	w0, [x20], #1
  43d66c:	b.eq	43d6a4 <nftw@plt+0x3ab24>  // b.none
  43d670:	ldrb	w0, [x26], #1
  43d674:	cmp	w0, #0x22
  43d678:	b.eq	43d694 <nftw@plt+0x3ab14>  // b.none
  43d67c:	cmp	w0, #0x5c
  43d680:	b.eq	43d694 <nftw@plt+0x3ab14>  // b.none
  43d684:	cmp	w0, #0xa
  43d688:	mov	x1, x20
  43d68c:	b.ne	43d660 <nftw@plt+0x3aae0>  // b.any
  43d690:	mov	w0, #0x6e                  	// #110
  43d694:	mov	x1, x20
  43d698:	mov	w3, #0x5c                  	// #92
  43d69c:	strb	w3, [x1], #1
  43d6a0:	b	43d660 <nftw@plt+0x3aae0>
  43d6a4:	mov	x1, x23
  43d6a8:	mov	x0, x21
  43d6ac:	bl	431488 <nftw@plt+0x2e908>
  43d6b0:	b	43cb28 <nftw@plt+0x39fa8>
  43d6b4:	ldp	x2, x1, [x21, #8]
  43d6b8:	ldrh	w4, [x20, #6]
  43d6bc:	and	w4, w4, #0x8
  43d6c0:	cmp	x2, x1
  43d6c4:	b.eq	43dc1c <nftw@plt+0x3b09c>  // b.none
  43d6c8:	ldr	x5, [sp, #160]
  43d6cc:	sub	x0, x1, #0x8
  43d6d0:	mov	x19, x0
  43d6d4:	cmp	x0, x5
  43d6d8:	b.ne	43d6f0 <nftw@plt+0x3ab70>  // b.any
  43d6dc:	b	43d93c <nftw@plt+0x3adbc>
  43d6e0:	sub	x0, x1, #0x8
  43d6e4:	cmp	x0, x5
  43d6e8:	mov	x19, x0
  43d6ec:	b.eq	43d93c <nftw@plt+0x3adbc>  // b.none
  43d6f0:	ldr	x3, [x0]
  43d6f4:	ldrb	w3, [x3, #4]
  43d6f8:	cmp	w3, #0x53
  43d6fc:	b.ne	43d878 <nftw@plt+0x3acf8>  // b.any
  43d700:	cmp	x2, x1
  43d704:	b.cs	43d710 <nftw@plt+0x3ab90>  // b.hs, b.nlast
  43d708:	mov	x1, x0
  43d70c:	str	x0, [x21, #16]
  43d710:	cmp	x2, x1
  43d714:	b.ne	43d6e0 <nftw@plt+0x3ab60>  // b.any
  43d718:	cbz	w4, 43d87c <nftw@plt+0x3acfc>
  43d71c:	mov	w23, #0x0                   	// #0
  43d720:	str	xzr, [sp, #160]
  43d724:	str	wzr, [sp, #168]
  43d728:	b	43cd10 <nftw@plt+0x3a190>
  43d72c:	str	wzr, [sp, #168]
  43d730:	b	43d484 <nftw@plt+0x3a904>
  43d734:	cbz	x23, 43d8e0 <nftw@plt+0x3ad60>
  43d738:	ldrh	w0, [x23, #6]
  43d73c:	tbnz	w0, #0, 43cb40 <nftw@plt+0x39fc0>
  43d740:	ldr	x0, [x24, #8]
  43d744:	cbnz	x0, 43cb40 <nftw@plt+0x39fc0>
  43d748:	mov	x23, x0
  43d74c:	b	43cb40 <nftw@plt+0x39fc0>
  43d750:	mov	x4, #0x0                   	// #0
  43d754:	b	43d3cc <nftw@plt+0x3a84c>
  43d758:	ldr	x9, [x0, #16]
  43d75c:	b	43ce2c <nftw@plt+0x3a2ac>
  43d760:	ldr	w18, [x0, #28]
  43d764:	ldr	x22, [x0, #8]
  43d768:	cbnz	w8, 43d914 <nftw@plt+0x3ad94>
  43d76c:	ldr	x2, [sp, #160]
  43d770:	cbz	x2, 43d8d8 <nftw@plt+0x3ad58>
  43d774:	ldp	x1, x0, [x21, #8]
  43d778:	cmp	x1, x0
  43d77c:	b.eq	43d8d8 <nftw@plt+0x3ad58>  // b.none
  43d780:	sub	x0, x0, #0x8
  43d784:	mov	w19, #0x2                   	// #2
  43d788:	cmp	x2, x0
  43d78c:	b.ne	43ce2c <nftw@plt+0x3a2ac>  // b.any
  43d790:	cbz	w18, 43ce2c <nftw@plt+0x3a2ac>
  43d794:	cbnz	w8, 43d7c4 <nftw@plt+0x3ac44>
  43d798:	cbz	x22, 43dd1c <nftw@plt+0x3b19c>
  43d79c:	ldr	x0, [x22]
  43d7a0:	ldrb	w0, [x0, #4]
  43d7a4:	cmp	w0, #0x53
  43d7a8:	b.ne	43d8d8 <nftw@plt+0x3ad58>  // b.any
  43d7ac:	add	x22, x22, #0x8
  43d7b0:	subs	w18, w18, #0x1
  43d7b4:	b.ne	43d798 <nftw@plt+0x3ac18>  // b.any
  43d7b8:	mov	w19, #0x2                   	// #2
  43d7bc:	mov	w18, #0x0                   	// #0
  43d7c0:	b	43ce2c <nftw@plt+0x3a2ac>
  43d7c4:	cbz	x22, 43dd1c <nftw@plt+0x3b19c>
  43d7c8:	ldr	x0, [x22]
  43d7cc:	ldrb	w0, [x0, #4]
  43d7d0:	cmp	w0, #0x53
  43d7d4:	b.ne	43d8d8 <nftw@plt+0x3ad58>  // b.any
  43d7d8:	add	x22, x22, #0x8
  43d7dc:	add	x9, x9, #0x4
  43d7e0:	subs	w18, w18, #0x1
  43d7e4:	b.ne	43d7c4 <nftw@plt+0x3ac44>  // b.any
  43d7e8:	b	43d7b8 <nftw@plt+0x3ac38>
  43d7ec:	ldrb	w1, [x13, #16]
  43d7f0:	cbz	w1, 43cfcc <nftw@plt+0x3a44c>
  43d7f4:	cbz	x11, 43d028 <nftw@plt+0x3a4a8>
  43d7f8:	b	43d078 <nftw@plt+0x3a4f8>
  43d7fc:	ldr	x0, [sp, #104]
  43d800:	add	x22, x0, #0x18
  43d804:	cbz	w1, 43d9fc <nftw@plt+0x3ae7c>
  43d808:	ubfiz	x0, x20, #4, #32
  43d80c:	bl	461560 <_obstack_memory_used@@Base+0x118>
  43d810:	mov	x5, x0
  43d814:	mov	w21, w20
  43d818:	mov	x0, x27
  43d81c:	str	x5, [sp, #96]
  43d820:	lsl	x1, x21, #3
  43d824:	mov	w25, w20
  43d828:	bl	4314b0 <nftw@plt+0x2e930>
  43d82c:	mov	x26, x0
  43d830:	ldr	w2, [sp, #124]
  43d834:	mov	w3, w20
  43d838:	ldr	x0, [x27, #40]
  43d83c:	mov	x1, x23
  43d840:	bl	4358c8 <nftw@plt+0x32d48>
  43d844:	mov	x28, x0
  43d848:	ldr	x5, [sp, #96]
  43d84c:	b	43c01c <nftw@plt+0x3949c>
  43d850:	mov	x0, #0x38                  	// #56
  43d854:	bl	461560 <_obstack_memory_used@@Base+0x118>
  43d858:	ldr	x1, [x27, #136]
  43d85c:	stp	xzr, xzr, [x0]
  43d860:	str	x1, [x0, #8]
  43d864:	stp	xzr, xzr, [x0, #16]
  43d868:	stp	xzr, xzr, [x0, #32]
  43d86c:	str	xzr, [x0, #48]
  43d870:	str	x0, [x1]
  43d874:	b	43c3d4 <nftw@plt+0x39854>
  43d878:	cbnz	w4, 43d958 <nftw@plt+0x3add8>
  43d87c:	ldr	x0, [x21, #24]
  43d880:	add	x3, x27, #0x298
  43d884:	cmp	x0, x1
  43d888:	b.cc	43c094 <nftw@plt+0x39514>  // b.lo, b.ul, b.last
  43d88c:	cbz	x24, 43d8a0 <nftw@plt+0x3ad20>
  43d890:	sub	x0, x1, x2
  43d894:	ldr	w2, [x27, #664]
  43d898:	ubfx	x0, x0, #3, #32
  43d89c:	str	w2, [x24, x0, lsl #2]
  43d8a0:	str	x3, [x1], #8
  43d8a4:	mov	w23, #0x0                   	// #0
  43d8a8:	str	xzr, [sp, #160]
  43d8ac:	str	x1, [x21, #16]
  43d8b0:	str	wzr, [sp, #168]
  43d8b4:	b	43cd10 <nftw@plt+0x3a190>
  43d8b8:	mov	x11, #0x0                   	// #0
  43d8bc:	ldrb	w0, [x27, #16]
  43d8c0:	mov	w19, #0x0                   	// #0
  43d8c4:	cbz	w0, 43cf40 <nftw@plt+0x3a3c0>
  43d8c8:	ldrb	w0, [x27, #17]
  43d8cc:	cbz	w0, 43cf40 <nftw@plt+0x3a3c0>
  43d8d0:	mov	w19, #0x0                   	// #0
  43d8d4:	b	43cf40 <nftw@plt+0x3a3c0>
  43d8d8:	mov	w19, #0x2                   	// #2
  43d8dc:	b	43ce2c <nftw@plt+0x3a2ac>
  43d8e0:	ldr	x0, [x24, #8]
  43d8e4:	mov	x23, x0
  43d8e8:	b	43cb40 <nftw@plt+0x39fc0>
  43d8ec:	mov	w23, #0x1                   	// #1
  43d8f0:	str	xzr, [sp, #160]
  43d8f4:	b	43cd10 <nftw@plt+0x3a190>
  43d8f8:	ldr	w2, [x20]
  43d8fc:	mov	x0, x27
  43d900:	adrp	x3, 47e000 <_obstack_memory_used@@Base+0x1cbb8>
  43d904:	mov	w1, #0x3                   	// #3
  43d908:	add	x3, x3, #0x320
  43d90c:	bl	4277f0 <nftw@plt+0x24c70>
  43d910:	b	43cd10 <nftw@plt+0x3a190>
  43d914:	cbz	x22, 43dc34 <nftw@plt+0x3b0b4>
  43d918:	ldr	x9, [x0, #40]
  43d91c:	b	43d76c <nftw@plt+0x3abec>
  43d920:	mov	x20, #0x0                   	// #0
  43d924:	b	43c3cc <nftw@plt+0x3984c>
  43d928:	ldr	x0, [sp, #104]
  43d92c:	mov	w25, #0x0                   	// #0
  43d930:	mov	x20, #0x0                   	// #0
  43d934:	add	x22, x0, #0x18
  43d938:	b	43c3f8 <nftw@plt+0x39878>
  43d93c:	cbz	w4, 43d87c <nftw@plt+0x3acfc>
  43d940:	ldr	x0, [sp, #160]
  43d944:	ldr	x0, [x0]
  43d948:	ldrb	w0, [x0, #4]
  43d94c:	cmp	w0, #0x53
  43d950:	b.eq	43d71c <nftw@plt+0x3ab9c>  // b.none
  43d954:	ldr	x19, [sp, #160]
  43d958:	mov	x0, x27
  43d95c:	bl	430100 <nftw@plt+0x2d580>
  43d960:	mov	x2, x0
  43d964:	ldr	x1, [x19]
  43d968:	ldrb	w0, [x1, #4]
  43d96c:	strb	w0, [x2, #4]
  43d970:	ldr	x0, [x19]
  43d974:	ldrh	w3, [x20, #6]
  43d978:	ldp	x0, x1, [x0, #8]
  43d97c:	stp	x0, x1, [x2, #8]
  43d980:	ldr	x0, [x19]
  43d984:	tbz	w3, #3, 43dba0 <nftw@plt+0x3b020>
  43d988:	ldrh	w0, [x0, #6]
  43d98c:	orr	w0, w0, #0x8
  43d990:	strh	w0, [x2, #6]
  43d994:	mov	w23, #0x0                   	// #0
  43d998:	str	x2, [x19]
  43d99c:	str	xzr, [sp, #160]
  43d9a0:	str	wzr, [sp, #168]
  43d9a4:	b	43cd10 <nftw@plt+0x3a190>
  43d9a8:	ldr	x1, [sp, #160]
  43d9ac:	ldr	w1, [x1, #24]
  43d9b0:	cbnz	w1, 43c844 <nftw@plt+0x39cc4>
  43d9b4:	ldrb	w1, [x27, #1153]
  43d9b8:	cbnz	w1, 43c844 <nftw@plt+0x39cc4>
  43d9bc:	mov	w1, #0x30                  	// #48
  43d9c0:	mov	x2, #0xffffffffffffffd0    	// #-48
  43d9c4:	umaddl	x0, w1, w0, x2
  43d9c8:	ldr	x1, [sp, #160]
  43d9cc:	str	xzr, [x1, x0]
  43d9d0:	b	43c844 <nftw@plt+0x39cc4>
  43d9d4:	mov	x0, #0x38                  	// #56
  43d9d8:	bl	461560 <_obstack_memory_used@@Base+0x118>
  43d9dc:	ldr	x1, [x27, #136]
  43d9e0:	stp	xzr, xzr, [x0]
  43d9e4:	str	x1, [x0, #8]
  43d9e8:	stp	xzr, xzr, [x0, #16]
  43d9ec:	stp	xzr, xzr, [x0, #32]
  43d9f0:	str	xzr, [x0, #48]
  43d9f4:	str	x0, [x1]
  43d9f8:	b	43d5a4 <nftw@plt+0x3aa24>
  43d9fc:	mov	w0, #0x18                  	// #24
  43da00:	mov	w25, w20
  43da04:	umull	x20, w20, w0
  43da08:	b	43c3f8 <nftw@plt+0x39878>
  43da0c:	mov	x0, x26
  43da10:	add	x1, x26, #0x40
  43da14:	mov	x2, #0x3                   	// #3
  43da18:	bl	431618 <nftw@plt+0x2ea98>
  43da1c:	ldr	x0, [x26, #64]
  43da20:	ldr	x0, [x0, #16]
  43da24:	b	43ca10 <nftw@plt+0x39e90>
  43da28:	ldr	w0, [x19, #24]
  43da2c:	cbz	w0, 43d170 <nftw@plt+0x3a5f0>
  43da30:	ldrb	w1, [x26, #1138]
  43da34:	mov	x0, #0x800                 	// #2048
  43da38:	strb	wzr, [x26, #1138]
  43da3c:	cmp	w1, #0x0
  43da40:	ldrb	w1, [x26, #1157]
  43da44:	mov	w23, w1
  43da48:	cset	w1, ne  // ne = any
  43da4c:	str	w1, [sp, #184]
  43da50:	bl	461560 <_obstack_memory_used@@Base+0x118>
  43da54:	str	x0, [x19, #8]
  43da58:	ldrb	w0, [x26, #1157]
  43da5c:	cbnz	w0, 43dc90 <nftw@plt+0x3b110>
  43da60:	ldr	x0, [x26, #136]
  43da64:	ldr	w20, [x19, #24]
  43da68:	ldr	x24, [x19]
  43da6c:	add	w20, w20, #0x1
  43da70:	ldr	x27, [x0]
  43da74:	cbz	w23, 43dc74 <nftw@plt+0x3b0f4>
  43da78:	ldr	w2, [x0, #48]
  43da7c:	ldr	x1, [x0, #40]
  43da80:	cmp	w2, #0x2
  43da84:	ldr	x0, [x19, #32]
  43da88:	mov	x23, x0
  43da8c:	b.eq	43dcd4 <nftw@plt+0x3b154>  // b.none
  43da90:	cbz	x27, 43dca0 <nftw@plt+0x3b120>
  43da94:	str	x27, [x26, #136]
  43da98:	mov	w2, #0x2                   	// #2
  43da9c:	str	xzr, [x27, #32]
  43daa0:	mov	x0, #0x18                  	// #24
  43daa4:	str	w2, [x27, #48]
  43daa8:	add	x20, x24, w20, uxtw #3
  43daac:	str	x1, [sp, #192]
  43dab0:	bl	461560 <_obstack_memory_used@@Base+0x118>
  43dab4:	stp	x23, x23, [x0, #8]
  43dab8:	ldr	x1, [sp, #192]
  43dabc:	str	x1, [x0]
  43dac0:	stp	x24, x20, [x27, #16]
  43dac4:	str	x0, [x27, #40]
  43dac8:	ldr	w0, [x19, #28]
  43dacc:	mov	x20, #0x100                 	// #256
  43dad0:	b	43dae4 <nftw@plt+0x3af64>
  43dad4:	cbz	x2, 43dc3c <nftw@plt+0x3b0bc>
  43dad8:	str	x1, [x2, w0, uxtw #3]
  43dadc:	add	w0, w0, #0x1
  43dae0:	str	w0, [x19, #28]
  43dae4:	add	w23, w0, #0x1
  43dae8:	cmp	x23, x20
  43daec:	b.ls	43db20 <nftw@plt+0x3afa0>  // b.plast
  43daf0:	ldr	x0, [x19, #8]
  43daf4:	lsl	x1, x23, #4
  43daf8:	lsl	x20, x23, #1
  43dafc:	bl	4615e8 <_obstack_memory_used@@Base+0x1a0>
  43db00:	str	x0, [x19, #8]
  43db04:	ldrb	w0, [x26, #1157]
  43db08:	cbz	w0, 43db20 <nftw@plt+0x3afa0>
  43db0c:	ldr	x0, [x19, #40]
  43db10:	lsl	x1, x23, #3
  43db14:	cbz	x0, 43dc64 <nftw@plt+0x3b0e4>
  43db18:	bl	4615e8 <_obstack_memory_used@@Base+0x1a0>
  43db1c:	str	x0, [x19, #40]
  43db20:	add	x1, sp, #0x13c
  43db24:	mov	x0, x26
  43db28:	bl	43dd38 <nftw@plt+0x3b1b8>
  43db2c:	mov	x1, x0
  43db30:	ldrb	w0, [x0, #4]
  43db34:	cmp	w0, #0x16
  43db38:	b.eq	43dc48 <nftw@plt+0x3b0c8>  // b.none
  43db3c:	ldrb	w3, [x26, #1157]
  43db40:	ldr	w0, [x19, #28]
  43db44:	ldr	x2, [x19, #8]
  43db48:	cbz	w3, 43dad4 <nftw@plt+0x3af54>
  43db4c:	cbz	x2, 43dc3c <nftw@plt+0x3b0bc>
  43db50:	mov	w4, w0
  43db54:	ldr	w5, [sp, #316]
  43db58:	ldr	x3, [x19, #40]
  43db5c:	str	x1, [x2, x4, lsl #3]
  43db60:	add	x1, x3, w0, uxtw #2
  43db64:	cbz	x1, 43dadc <nftw@plt+0x3af5c>
  43db68:	str	w5, [x3, x4, lsl #2]
  43db6c:	ldr	w0, [x19, #28]
  43db70:	b	43dadc <nftw@plt+0x3af5c>
  43db74:	cbz	x22, 43dc5c <nftw@plt+0x3b0dc>
  43db78:	ldr	x9, [x0, #32]
  43db7c:	b	43d504 <nftw@plt+0x3a984>
  43db80:	lsl	x20, x0, #3
  43db84:	mov	w22, w25
  43db88:	b	43cc00 <nftw@plt+0x3a080>
  43db8c:	ldrb	w0, [x27, #16]
  43db90:	cbz	w0, 43c8f8 <nftw@plt+0x39d78>
  43db94:	b	43c8f0 <nftw@plt+0x39d70>
  43db98:	mov	w25, w22
  43db9c:	b	43c984 <nftw@plt+0x39e04>
  43dba0:	ldrh	w0, [x0, #6]
  43dba4:	and	w0, w0, #0xfffffff7
  43dba8:	and	w0, w0, #0xffff
  43dbac:	b	43d990 <nftw@plt+0x3ae10>
  43dbb0:	ldr	x0, [sp, #240]
  43dbb4:	mov	w1, #0x15                  	// #21
  43dbb8:	ldr	w4, [x20, #8]
  43dbbc:	ldr	x2, [sp, #296]
  43dbc0:	str	x11, [sp, #176]
  43dbc4:	ldr	x3, [x0]
  43dbc8:	mov	x0, x27
  43dbcc:	bl	4273b8 <nftw@plt+0x24838>
  43dbd0:	ldr	x11, [sp, #176]
  43dbd4:	b	43cfb0 <nftw@plt+0x3a430>
  43dbd8:	ldr	x4, [sp, #104]
  43dbdc:	ldrb	w3, [x4, #19]
  43dbe0:	tbz	w3, #3, 43d530 <nftw@plt+0x3a9b0>
  43dbe4:	ldrh	w3, [x4, #16]
  43dbe8:	cmp	w2, w3
  43dbec:	b.ne	43d530 <nftw@plt+0x3a9b0>  // b.any
  43dbf0:	cbz	x22, 43dbfc <nftw@plt+0x3b07c>
  43dbf4:	ldr	x2, [x22]
  43dbf8:	cbnz	x2, 43d8bc <nftw@plt+0x3ad3c>
  43dbfc:	cmp	x1, x0
  43dc00:	b.cs	43d8b8 <nftw@plt+0x3ad38>  // b.hs, b.nlast
  43dc04:	str	x11, [x21, #16]
  43dc08:	mov	x11, #0x0                   	// #0
  43dc0c:	b	43d8bc <nftw@plt+0x3ad3c>
  43dc10:	mov	x9, x22
  43dc14:	mov	w19, #0x0                   	// #0
  43dc18:	b	43ce2c <nftw@plt+0x3a2ac>
  43dc1c:	str	xzr, [sp, #160]
  43dc20:	mov	w23, #0x0                   	// #0
  43dc24:	cbnz	w4, 43cd10 <nftw@plt+0x3a190>
  43dc28:	b	43d87c <nftw@plt+0x3acfc>
  43dc2c:	add	x1, x0, #0x2
  43dc30:	b	43cb80 <nftw@plt+0x3a000>
  43dc34:	mov	x9, x22
  43dc38:	b	43d76c <nftw@plt+0x3abec>
  43dc3c:	mov	x0, #0x0                   	// #0
  43dc40:	str	x1, [x0]
  43dc44:	brk	#0x3e8
  43dc48:	mov	x0, x26
  43dc4c:	bl	43a9a8 <nftw@plt+0x37e28>
  43dc50:	ldrb	w0, [sp, #184]
  43dc54:	strb	w0, [x26, #1138]
  43dc58:	b	43d170 <nftw@plt+0x3a5f0>
  43dc5c:	mov	x9, x22
  43dc60:	b	43d504 <nftw@plt+0x3a984>
  43dc64:	mov	x0, x1
  43dc68:	bl	461560 <_obstack_memory_used@@Base+0x118>
  43dc6c:	str	x0, [x19, #40]
  43dc70:	b	43db20 <nftw@plt+0x3afa0>
  43dc74:	cbz	x27, 43dcf0 <nftw@plt+0x3b170>
  43dc78:	str	x27, [x26, #136]
  43dc7c:	add	x20, x24, w20, uxtw #3
  43dc80:	stp	x24, x20, [x27, #16]
  43dc84:	stp	xzr, xzr, [x27, #32]
  43dc88:	str	wzr, [x27, #48]
  43dc8c:	b	43dac8 <nftw@plt+0x3af48>
  43dc90:	mov	x0, #0x400                 	// #1024
  43dc94:	bl	461560 <_obstack_memory_used@@Base+0x118>
  43dc98:	str	x0, [x19, #40]
  43dc9c:	b	43da60 <nftw@plt+0x3aee0>
  43dca0:	mov	x0, #0x38                  	// #56
  43dca4:	str	x1, [sp, #192]
  43dca8:	bl	461560 <_obstack_memory_used@@Base+0x118>
  43dcac:	mov	x27, x0
  43dcb0:	stp	xzr, xzr, [x0]
  43dcb4:	stp	xzr, xzr, [x0, #16]
  43dcb8:	stp	xzr, xzr, [x0, #32]
  43dcbc:	ldr	x0, [x26, #136]
  43dcc0:	str	x0, [x27, #8]
  43dcc4:	str	xzr, [x27, #48]
  43dcc8:	ldr	x1, [sp, #192]
  43dccc:	str	x27, [x0]
  43dcd0:	b	43da94 <nftw@plt+0x3af14>
  43dcd4:	ldr	x1, [x1]
  43dcd8:	b	43da90 <nftw@plt+0x3af10>
  43dcdc:	ldr	x0, [x23, #24]
  43dce0:	ldp	x25, x26, [sp, #64]
  43dce4:	ldrb	w0, [x0, #19]
  43dce8:	tbnz	w0, #4, 43c350 <nftw@plt+0x397d0>
  43dcec:	b	43c338 <nftw@plt+0x397b8>
  43dcf0:	mov	x0, #0x38                  	// #56
  43dcf4:	bl	461560 <_obstack_memory_used@@Base+0x118>
  43dcf8:	mov	x27, x0
  43dcfc:	stp	xzr, xzr, [x0]
  43dd00:	stp	xzr, xzr, [x0, #16]
  43dd04:	stp	xzr, xzr, [x0, #32]
  43dd08:	ldr	x0, [x26, #136]
  43dd0c:	str	x0, [x27, #8]
  43dd10:	str	xzr, [x27, #48]
  43dd14:	str	x27, [x0]
  43dd18:	b	43dc78 <nftw@plt+0x3b0f8>
  43dd1c:	mov	x0, #0x0                   	// #0
  43dd20:	ldrb	w0, [x0, #4]
  43dd24:	brk	#0x3e8
  43dd28:	mov	x0, #0x0                   	// #0
  43dd2c:	ldr	x0, [x0]
  43dd30:	brk	#0x3e8
  43dd34:	nop
  43dd38:	stp	x29, x30, [sp, #-128]!
  43dd3c:	mov	x29, sp
  43dd40:	stp	x25, x26, [sp, #64]
  43dd44:	ldrb	w26, [x0, #192]
  43dd48:	stp	x19, x20, [sp, #16]
  43dd4c:	mov	x19, x0
  43dd50:	stp	x23, x24, [sp, #48]
  43dd54:	adrp	x24, 4a5000 <__environ@@GLIBC_2.17+0xa68>
  43dd58:	mov	x23, x1
  43dd5c:	add	x24, x24, #0x990
  43dd60:	stp	x21, x22, [sp, #32]
  43dd64:	mov	w22, #0x0                   	// #0
  43dd68:	stp	x27, x28, [sp, #80]
  43dd6c:	mov	w27, #0x1                   	// #1
  43dd70:	ldr	x20, [x19, #136]
  43dd74:	ldr	x0, [x20, #8]
  43dd78:	cbz	x0, 43de30 <nftw@plt+0x3b2b0>
  43dd7c:	ldr	w2, [x20, #48]
  43dd80:	cmp	w2, #0x1
  43dd84:	b.eq	43e064 <nftw@plt+0x3b4e4>  // b.none
  43dd88:	tst	w2, #0xfffffffd
  43dd8c:	b.ne	43e33c <nftw@plt+0x3b7bc>  // b.any
  43dd90:	ldp	x0, x1, [x20, #16]
  43dd94:	cmp	x0, x1
  43dd98:	b.ne	43dfb4 <nftw@plt+0x3b434>  // b.any
  43dd9c:	ldr	x0, [x20, #40]
  43dda0:	cbz	x0, 43ddb0 <nftw@plt+0x3b230>
  43dda4:	ldr	w0, [x24, #4]
  43dda8:	add	w0, w0, #0x1
  43ddac:	str	w0, [x24, #4]
  43ddb0:	mov	x0, x19
  43ddb4:	bl	43a9a8 <nftw@plt+0x37e28>
  43ddb8:	ldrb	w0, [x19, #16]
  43ddbc:	cbnz	w0, 43dd70 <nftw@plt+0x3b1f0>
  43ddc0:	add	x20, x19, #0x298
  43ddc4:	cbz	x23, 43de0c <nftw@plt+0x3b28c>
  43ddc8:	cbnz	w22, 43ddd0 <nftw@plt+0x3b250>
  43ddcc:	ldr	w22, [x20]
  43ddd0:	str	w22, [x23]
  43ddd4:	ldrb	w0, [x19, #1157]
  43ddd8:	cbnz	w0, 43de00 <nftw@plt+0x3b280>
  43dddc:	ldr	x0, [x19, #136]
  43dde0:	cbz	x0, 43de00 <nftw@plt+0x3b280>
  43dde4:	ldr	w1, [x0, #48]
  43dde8:	ldr	x0, [x0, #40]
  43ddec:	cmp	w1, #0x2
  43ddf0:	b.eq	43e0cc <nftw@plt+0x3b54c>  // b.none
  43ddf4:	cbz	x0, 43de00 <nftw@plt+0x3b280>
  43ddf8:	ldr	w22, [x19, #176]
  43ddfc:	str	w22, [x23]
  43de00:	ldrb	w0, [x19, #1160]
  43de04:	cbnz	w0, 43df7c <nftw@plt+0x3b3fc>
  43de08:	str	w22, [x23]
  43de0c:	strb	w26, [x19, #192]
  43de10:	mov	x0, x20
  43de14:	ldp	x19, x20, [sp, #16]
  43de18:	ldp	x21, x22, [sp, #32]
  43de1c:	ldp	x23, x24, [sp, #48]
  43de20:	ldp	x25, x26, [sp, #64]
  43de24:	ldp	x27, x28, [sp, #80]
  43de28:	ldp	x29, x30, [sp], #128
  43de2c:	ret
  43de30:	mov	x0, x19
  43de34:	bl	434b58 <nftw@plt+0x31fd8>
  43de38:	ldr	w22, [x0]
  43de3c:	mov	x21, x0
  43de40:	ldrb	w1, [x19, #16]
  43de44:	ldrb	w0, [x21, #4]
  43de48:	cbz	w1, 43de54 <nftw@plt+0x3b2d4>
  43de4c:	cmp	w0, #0x4f
  43de50:	b.eq	43dd70 <nftw@plt+0x3b1f0>  // b.none
  43de54:	cmp	w0, #0x35
  43de58:	b.ne	43e158 <nftw@plt+0x3b5d8>  // b.any
  43de5c:	ldr	x1, [x21, #8]
  43de60:	ldrb	w0, [x1, #18]
  43de64:	ands	w0, w0, #0x3
  43de68:	b.eq	43e158 <nftw@plt+0x3b5d8>  // b.none
  43de6c:	ldrh	w2, [x21, #6]
  43de70:	tbnz	w2, #10, 43e158 <nftw@plt+0x3b5d8>
  43de74:	ldrh	w2, [x1, #18]
  43de78:	ubfx	x3, x2, #2, #8
  43de7c:	tbnz	w2, #6, 43e274 <nftw@plt+0x3b6f4>
  43de80:	ldrb	w2, [x19, #192]
  43de84:	cbz	w2, 43df50 <nftw@plt+0x3b3d0>
  43de88:	ldrb	w2, [x19, #24]
  43de8c:	cbnz	w2, 43e158 <nftw@plt+0x3b5d8>
  43de90:	tbz	w3, #6, 43df8c <nftw@plt+0x3b40c>
  43de94:	ldr	x0, [x19, #992]
  43de98:	cbz	x0, 43e158 <nftw@plt+0x3b5d8>
  43de9c:	mov	w1, #0x0                   	// #0
  43dea0:	mov	x0, x19
  43dea4:	bl	434ce0 <nftw@plt+0x32160>
  43dea8:	ldrb	w1, [x0, #4]
  43deac:	mov	w25, #0x1                   	// #1
  43deb0:	cmp	w1, #0x53
  43deb4:	b.eq	43dec0 <nftw@plt+0x3b340>  // b.none
  43deb8:	ldrb	w25, [x0, #6]
  43debc:	and	w25, w25, #0x1
  43dec0:	ldr	x2, [x19, #992]
  43dec4:	mov	x1, x21
  43dec8:	mov	x0, x19
  43decc:	blr	x2
  43ded0:	mov	x1, x0
  43ded4:	cbz	x0, 43e2b8 <nftw@plt+0x3b738>
  43ded8:	strb	wzr, [x19, #19]
  43dedc:	strb	w27, [x19, #192]
  43dee0:	ldrb	w0, [x0, #18]
  43dee4:	strb	wzr, [x19, #440]
  43dee8:	and	w0, w0, #0x3
  43deec:	cmp	w0, #0x2
  43def0:	b.eq	43dfa0 <nftw@plt+0x3b420>  // b.none
  43def4:	ldr	x2, [x19, #184]
  43def8:	strb	wzr, [x19, #192]
  43defc:	ldrb	w0, [x2, #18]
  43df00:	and	w0, w0, #0x3
  43df04:	cmp	w0, #0x2
  43df08:	b.eq	43e098 <nftw@plt+0x3b518>  // b.none
  43df0c:	ldr	w3, [x19, #176]
  43df10:	mov	w2, w22
  43df14:	mov	x0, x19
  43df18:	bl	43a420 <nftw@plt+0x378a0>
  43df1c:	cbz	w0, 43e158 <nftw@plt+0x3b5d8>
  43df20:	ldrb	w1, [x19, #16]
  43df24:	cmp	w1, #0x0
  43df28:	ccmp	w0, #0x2, #0x4, eq  // eq = none
  43df2c:	b.eq	43dd70 <nftw@plt+0x3b1f0>  // b.none
  43df30:	mov	x0, x19
  43df34:	bl	430100 <nftw@plt+0x2d580>
  43df38:	mov	w1, #0x53                  	// #83
  43df3c:	mov	x20, x0
  43df40:	strb	w1, [x0, #4]
  43df44:	strh	wzr, [x0, #6]
  43df48:	str	x21, [x0, #8]
  43df4c:	b	43ddc4 <nftw@plt+0x3b244>
  43df50:	ldr	x2, [x19, #136]
  43df54:	cbz	x2, 43df6c <nftw@plt+0x3b3ec>
  43df58:	ldr	w4, [x2, #48]
  43df5c:	ldr	x2, [x2, #40]
  43df60:	cmp	w4, #0x2
  43df64:	b.eq	43e0c0 <nftw@plt+0x3b540>  // b.none
  43df68:	cbnz	x2, 43de88 <nftw@plt+0x3b308>
  43df6c:	ldr	w2, [x21]
  43df70:	str	w2, [x19, #176]
  43df74:	str	x1, [x19, #184]
  43df78:	b	43de88 <nftw@plt+0x3b308>
  43df7c:	ldrb	w0, [x19, #16]
  43df80:	cbz	w0, 43de08 <nftw@plt+0x3b288>
  43df84:	ldr	w22, [x19, #48]
  43df88:	b	43de08 <nftw@plt+0x3b288>
  43df8c:	strb	wzr, [x19, #19]
  43df90:	cmp	w0, #0x2
  43df94:	strb	w27, [x19, #192]
  43df98:	strb	wzr, [x19, #440]
  43df9c:	b.ne	43def4 <nftw@plt+0x3b374>  // b.any
  43dfa0:	mov	w3, w22
  43dfa4:	mov	x2, x21
  43dfa8:	mov	x0, x19
  43dfac:	bl	43bf38 <nftw@plt+0x393b8>
  43dfb0:	b	43df1c <nftw@plt+0x3b39c>
  43dfb4:	ldr	x21, [x0], #8
  43dfb8:	cbz	w2, 43e0b4 <nftw@plt+0x3b534>
  43dfbc:	ldr	x1, [x20, #40]
  43dfc0:	ldr	x3, [x1, #8]
  43dfc4:	cbz	x3, 43e1f4 <nftw@plt+0x3b674>
  43dfc8:	ldr	x3, [x1, #16]
  43dfcc:	ldr	w22, [x3], #4
  43dfd0:	str	x3, [x1, #16]
  43dfd4:	ldrh	w3, [x21, #6]
  43dfd8:	str	x0, [x20, #16]
  43dfdc:	tbz	w3, #3, 43de40 <nftw@plt+0x3b2c0>
  43dfe0:	ldr	x0, [x1]
  43dfe4:	str	x21, [sp, #120]
  43dfe8:	cbz	x0, 43e2a0 <nftw@plt+0x3b720>
  43dfec:	ldr	x0, [x1, #16]
  43dff0:	ldur	w25, [x0, #-4]
  43dff4:	mov	x28, #0x0                   	// #0
  43dff8:	b	43e04c <nftw@plt+0x3b4cc>
  43dffc:	cbnz	w2, 43e0d4 <nftw@plt+0x3b554>
  43e000:	ldr	x0, [x20, #16]
  43e004:	add	x1, x0, #0x8
  43e008:	str	x1, [x20, #16]
  43e00c:	ldr	x28, [x0]
  43e010:	ldrb	w0, [x28, #4]
  43e014:	cmp	w0, #0x53
  43e018:	b.ne	43e024 <nftw@plt+0x3b4a4>  // b.any
  43e01c:	ldrh	w0, [x28, #6]
  43e020:	tbnz	w0, #3, 43e324 <nftw@plt+0x3b7a4>
  43e024:	mov	x3, x28
  43e028:	add	x2, sp, #0x78
  43e02c:	mov	w1, w25
  43e030:	mov	x0, x19
  43e034:	bl	439c18 <nftw@plt+0x37098>
  43e038:	tst	w0, #0xff
  43e03c:	b.eq	43e100 <nftw@plt+0x3b580>  // b.none
  43e040:	ldrh	w0, [x28, #6]
  43e044:	ldr	w2, [x20, #48]
  43e048:	tbz	w0, #3, 43e104 <nftw@plt+0x3b584>
  43e04c:	cmp	w2, #0x1
  43e050:	b.ne	43dffc <nftw@plt+0x3b47c>  // b.any
  43e054:	ldr	x28, [x20, #16]
  43e058:	add	x0, x28, #0x18
  43e05c:	str	x0, [x20, #16]
  43e060:	b	43e010 <nftw@plt+0x3b490>
  43e064:	ldp	x21, x0, [x20, #16]
  43e068:	cmp	x21, x0
  43e06c:	b.eq	43dd9c <nftw@plt+0x3b21c>  // b.none
  43e070:	mov	x0, x21
  43e074:	ldr	w22, [x0], #24
  43e078:	str	x0, [x20, #16]
  43e07c:	ldrh	w0, [x21, #6]
  43e080:	tbz	w0, #3, 43de40 <nftw@plt+0x3b2c0>
  43e084:	ldr	x0, [x20, #40]
  43e088:	str	x21, [sp, #120]
  43e08c:	cbz	x0, 43e2a0 <nftw@plt+0x3b720>
  43e090:	ldr	w25, [x19, #176]
  43e094:	b	43dff4 <nftw@plt+0x3b474>
  43e098:	ldr	x0, [x2, #24]
  43e09c:	ldrb	w0, [x0, #19]
  43e0a0:	tbz	w0, #2, 43df0c <nftw@plt+0x3b38c>
  43e0a4:	ldrb	w0, [x19, #1157]
  43e0a8:	mov	w3, w22
  43e0ac:	cbnz	w0, 43df10 <nftw@plt+0x3b390>
  43e0b0:	b	43df0c <nftw@plt+0x3b38c>
  43e0b4:	ldr	w22, [x21]
  43e0b8:	str	x0, [x20, #16]
  43e0bc:	b	43e07c <nftw@plt+0x3b4fc>
  43e0c0:	ldr	x2, [x2]
  43e0c4:	cbnz	x2, 43de88 <nftw@plt+0x3b308>
  43e0c8:	b	43df6c <nftw@plt+0x3b3ec>
  43e0cc:	ldr	x0, [x0]
  43e0d0:	b	43ddf4 <nftw@plt+0x3b274>
  43e0d4:	cmp	w2, #0x2
  43e0d8:	b.ne	43e010 <nftw@plt+0x3b490>  // b.any
  43e0dc:	ldr	x1, [x20, #40]
  43e0e0:	ldr	x2, [x20, #16]
  43e0e4:	ldr	x0, [x1, #16]
  43e0e8:	add	x3, x2, #0x8
  43e0ec:	str	x3, [x20, #16]
  43e0f0:	add	x0, x0, #0x4
  43e0f4:	ldr	x28, [x2]
  43e0f8:	str	x0, [x1, #16]
  43e0fc:	b	43e010 <nftw@plt+0x3b490>
  43e100:	ldr	w2, [x20, #48]
  43e104:	cmp	w2, #0x2
  43e108:	b.eq	43e160 <nftw@plt+0x3b5e0>  // b.none
  43e10c:	ldr	x0, [x19, #136]
  43e110:	ldr	x20, [sp, #120]
  43e114:	cbz	x0, 43e314 <nftw@plt+0x3b794>
  43e118:	ldr	w1, [x0, #48]
  43e11c:	ldr	x25, [x0, #40]
  43e120:	cmp	w1, #0x2
  43e124:	b.ne	43e12c <nftw@plt+0x3b5ac>  // b.any
  43e128:	ldr	x25, [x25]
  43e12c:	ldr	x0, [x0]
  43e130:	cbz	x0, 43e24c <nftw@plt+0x3b6cc>
  43e134:	str	x0, [x19, #136]
  43e138:	add	x2, x20, #0x18
  43e13c:	mov	w1, #0x1                   	// #1
  43e140:	stp	x20, x2, [x0, #16]
  43e144:	stp	xzr, x25, [x0, #32]
  43e148:	str	w1, [x0, #48]
  43e14c:	ldrb	w0, [x19, #16]
  43e150:	cbnz	w0, 43dd70 <nftw@plt+0x3b1f0>
  43e154:	b	43df30 <nftw@plt+0x3b3b0>
  43e158:	mov	x20, x21
  43e15c:	b	43ddc4 <nftw@plt+0x3b244>
  43e160:	mov	x0, #0x10                  	// #16
  43e164:	bl	461560 <_obstack_memory_used@@Base+0x118>
  43e168:	mov	x1, #0x8                   	// #8
  43e16c:	mov	x28, x0
  43e170:	mov	x0, x19
  43e174:	bl	4314b0 <nftw@plt+0x2e930>
  43e178:	mov	x1, x0
  43e17c:	ldp	x3, x0, [x0, #8]
  43e180:	ldr	x4, [x1, #24]
  43e184:	ldr	x5, [sp, #120]
  43e188:	sub	x2, x0, x3
  43e18c:	cmp	x0, x4
  43e190:	lsr	x2, x2, #3
  43e194:	b.hi	43e354 <nftw@plt+0x3b7d4>  // b.pmore
  43e198:	ldr	x4, [x20, #40]
  43e19c:	str	w25, [x28, w2, uxtw #2]
  43e1a0:	ldr	x2, [x19, #136]
  43e1a4:	ldr	x25, [x4]
  43e1a8:	str	x5, [x0], #8
  43e1ac:	str	x0, [x1, #16]
  43e1b0:	cbz	x25, 43e1fc <nftw@plt+0x3b67c>
  43e1b4:	ldr	x20, [x2]
  43e1b8:	cbz	x20, 43e218 <nftw@plt+0x3b698>
  43e1bc:	str	x20, [x19, #136]
  43e1c0:	mov	w2, #0x2                   	// #2
  43e1c4:	str	x1, [x20, #32]
  43e1c8:	mov	x0, #0x18                  	// #24
  43e1cc:	str	w2, [x20, #48]
  43e1d0:	str	x3, [sp, #96]
  43e1d4:	bl	461560 <_obstack_memory_used@@Base+0x118>
  43e1d8:	stp	x25, x28, [x0]
  43e1dc:	ldr	x3, [sp, #96]
  43e1e0:	str	x28, [x0, #16]
  43e1e4:	str	x0, [x20, #40]
  43e1e8:	add	x1, x3, #0x8
  43e1ec:	stp	x3, x1, [x20, #16]
  43e1f0:	b	43e14c <nftw@plt+0x3b5cc>
  43e1f4:	ldr	w22, [x21]
  43e1f8:	b	43dfd4 <nftw@plt+0x3b454>
  43e1fc:	cbz	x2, 43e31c <nftw@plt+0x3b79c>
  43e200:	ldr	w0, [x2, #48]
  43e204:	ldr	x25, [x2, #40]
  43e208:	cmp	w0, #0x2
  43e20c:	b.ne	43e1b4 <nftw@plt+0x3b634>  // b.any
  43e210:	ldr	x25, [x25]
  43e214:	b	43e1b4 <nftw@plt+0x3b634>
  43e218:	mov	x0, #0x38                  	// #56
  43e21c:	stp	x1, x3, [sp, #96]
  43e220:	bl	461560 <_obstack_memory_used@@Base+0x118>
  43e224:	mov	x20, x0
  43e228:	stp	xzr, xzr, [x0]
  43e22c:	stp	xzr, xzr, [x0, #16]
  43e230:	stp	xzr, xzr, [x0, #32]
  43e234:	ldr	x0, [x19, #136]
  43e238:	str	x0, [x20, #8]
  43e23c:	str	xzr, [x20, #48]
  43e240:	ldp	x1, x3, [sp, #96]
  43e244:	str	x20, [x0]
  43e248:	b	43e1bc <nftw@plt+0x3b63c>
  43e24c:	mov	x0, #0x38                  	// #56
  43e250:	bl	461560 <_obstack_memory_used@@Base+0x118>
  43e254:	ldr	x1, [x19, #136]
  43e258:	stp	xzr, xzr, [x0]
  43e25c:	str	x1, [x0, #8]
  43e260:	stp	xzr, xzr, [x0, #16]
  43e264:	stp	xzr, xzr, [x0, #32]
  43e268:	str	xzr, [x0, #48]
  43e26c:	str	x0, [x1]
  43e270:	b	43e134 <nftw@plt+0x3b5b4>
  43e274:	mov	x0, x19
  43e278:	bl	430100 <nftw@plt+0x2d580>
  43e27c:	mov	x20, x0
  43e280:	ldrh	w1, [x21, #6]
  43e284:	ldrb	w0, [x21, #4]
  43e288:	ldp	x2, x3, [x21, #8]
  43e28c:	orr	w1, w1, #0x400
  43e290:	strb	w0, [x20, #4]
  43e294:	strh	w1, [x20, #6]
  43e298:	stp	x2, x3, [x20, #8]
  43e29c:	b	43ddc4 <nftw@plt+0x3b244>
  43e2a0:	adrp	x2, 47e000 <_obstack_memory_used@@Base+0x1cbb8>
  43e2a4:	adrp	x0, 47d000 <_obstack_memory_used@@Base+0x1bbb8>
  43e2a8:	add	x2, x2, #0x558
  43e2ac:	add	x0, x0, #0xd28
  43e2b0:	mov	w1, #0x352                 	// #850
  43e2b4:	bl	402bf0 <nftw@plt+0x70>
  43e2b8:	mov	x20, x21
  43e2bc:	cbz	w25, 43ddc4 <nftw@plt+0x3b244>
  43e2c0:	mov	x0, x19
  43e2c4:	mov	w1, #0x0                   	// #0
  43e2c8:	bl	434ce0 <nftw@plt+0x32160>
  43e2cc:	mov	x21, x0
  43e2d0:	ldrb	w0, [x0, #4]
  43e2d4:	cmp	w0, #0x53
  43e2d8:	b.eq	43ddc4 <nftw@plt+0x3b244>  // b.none
  43e2dc:	ldrh	w0, [x21, #6]
  43e2e0:	tbnz	w0, #0, 43ddc4 <nftw@plt+0x3b244>
  43e2e4:	mov	x0, x19
  43e2e8:	bl	430100 <nftw@plt+0x2d580>
  43e2ec:	mov	x2, x0
  43e2f0:	mov	w4, #0x53                  	// #83
  43e2f4:	mov	x0, x19
  43e2f8:	mov	w3, #0x1                   	// #1
  43e2fc:	mov	x1, #0x0                   	// #0
  43e300:	strb	w4, [x2, #4]
  43e304:	strh	wzr, [x2, #6]
  43e308:	str	x21, [x2, #8]
  43e30c:	bl	43a868 <nftw@plt+0x37ce8>
  43e310:	b	43ddc4 <nftw@plt+0x3b244>
  43e314:	mov	x25, #0x0                   	// #0
  43e318:	b	43e12c <nftw@plt+0x3b5ac>
  43e31c:	mov	x25, x2
  43e320:	b	43e1b4 <nftw@plt+0x3b634>
  43e324:	adrp	x2, 47e000 <_obstack_memory_used@@Base+0x1cbb8>
  43e328:	adrp	x0, 47d000 <_obstack_memory_used@@Base+0x1bbb8>
  43e32c:	add	x2, x2, #0x558
  43e330:	add	x0, x0, #0xd28
  43e334:	mov	w1, #0x380                 	// #896
  43e338:	bl	402bf0 <nftw@plt+0x70>
  43e33c:	adrp	x2, 47e000 <_obstack_memory_used@@Base+0x1cbb8>
  43e340:	adrp	x0, 47d000 <_obstack_memory_used@@Base+0x1bbb8>
  43e344:	add	x2, x2, #0x540
  43e348:	add	x0, x0, #0xd28
  43e34c:	mov	w1, #0xa2f                 	// #2607
  43e350:	bl	402bf0 <nftw@plt+0x70>
  43e354:	adrp	x2, 47d000 <_obstack_memory_used@@Base+0x1bbb8>
  43e358:	adrp	x0, 47d000 <_obstack_memory_used@@Base+0x1bbb8>
  43e35c:	add	x2, x2, #0xef8
  43e360:	add	x0, x0, #0xd28
  43e364:	mov	w1, #0x953                 	// #2387
  43e368:	bl	402bf0 <nftw@plt+0x70>
  43e36c:	nop
  43e370:	mov	x1, #0x0                   	// #0
  43e374:	b	43dd38 <nftw@plt+0x3b1b8>
  43e378:	stp	x29, x30, [sp, #-32]!
  43e37c:	mov	x29, sp
  43e380:	ldr	x1, [x0]
  43e384:	str	x19, [sp, #16]
  43e388:	mov	x19, x0
  43e38c:	ldrb	w0, [x1, #105]
  43e390:	orr	w0, w0, #0x4
  43e394:	strb	w0, [x1, #105]
  43e398:	ldrb	w1, [x19, #24]
  43e39c:	ldrb	w0, [x19, #27]
  43e3a0:	ldrb	w2, [x19, #1160]
  43e3a4:	add	w1, w1, #0x1
  43e3a8:	add	w0, w0, #0x1
  43e3ac:	strb	w1, [x19, #24]
  43e3b0:	strb	w0, [x19, #27]
  43e3b4:	cbz	w2, 43e3ec <nftw@plt+0x3b86c>
  43e3b8:	mov	x0, x19
  43e3bc:	bl	441248 <nftw@plt+0x3e6c8>
  43e3c0:	tst	w0, #0xff
  43e3c4:	b.ne	43e3b8 <nftw@plt+0x3b838>  // b.any
  43e3c8:	ldrb	w1, [x19, #24]
  43e3cc:	ldrb	w0, [x19, #27]
  43e3d0:	sub	w1, w1, #0x1
  43e3d4:	strb	w1, [x19, #24]
  43e3d8:	sub	w0, w0, #0x1
  43e3dc:	strb	w0, [x19, #27]
  43e3e0:	ldr	x19, [sp, #16]
  43e3e4:	ldp	x29, x30, [sp], #32
  43e3e8:	ret
  43e3ec:	mov	x0, x19
  43e3f0:	mov	x1, #0x0                   	// #0
  43e3f4:	bl	43dd38 <nftw@plt+0x3b1b8>
  43e3f8:	ldrb	w0, [x0, #4]
  43e3fc:	cmp	w0, #0x16
  43e400:	b.eq	43e3c8 <nftw@plt+0x3b848>  // b.none
  43e404:	mov	x0, x19
  43e408:	mov	x1, #0x0                   	// #0
  43e40c:	bl	43dd38 <nftw@plt+0x3b1b8>
  43e410:	ldrb	w0, [x0, #4]
  43e414:	cmp	w0, #0x16
  43e418:	b.ne	43e3ec <nftw@plt+0x3b86c>  // b.any
  43e41c:	b	43e3c8 <nftw@plt+0x3b848>
  43e420:	b	43dd38 <nftw@plt+0x3b1b8>
  43e424:	nop
  43e428:	stp	x29, x30, [sp, #-80]!
  43e42c:	mov	x29, sp
  43e430:	stp	x21, x22, [sp, #32]
  43e434:	ldr	x21, [x1, #24]
  43e438:	stp	x23, x24, [sp, #48]
  43e43c:	mov	x24, x0
  43e440:	ldr	w0, [x1, #8]
  43e444:	mov	x23, x1
  43e448:	ldrb	w4, [x21, #19]
  43e44c:	stp	x19, x20, [sp, #16]
  43e450:	add	w0, w0, w0, lsl #2
  43e454:	stp	x25, x26, [sp, #64]
  43e458:	lsl	w0, w0, #1
  43e45c:	add	w19, w0, #0x2
  43e460:	tbz	w4, #2, 43e494 <nftw@plt+0x3b914>
  43e464:	ldrh	w2, [x21, #16]
  43e468:	add	w19, w0, #0x6
  43e46c:	cbz	w2, 43e494 <nftw@plt+0x3b914>
  43e470:	ldr	x3, [x21]
  43e474:	mov	x1, #0x0                   	// #0
  43e478:	ldr	x0, [x3, x1, lsl #3]
  43e47c:	add	x1, x1, #0x1
  43e480:	cmp	w2, w1
  43e484:	ldr	w0, [x0, #8]
  43e488:	add	w0, w0, #0x1
  43e48c:	add	w19, w19, w0
  43e490:	b.hi	43e478 <nftw@plt+0x3b8f8>  // b.pmore
  43e494:	ldrb	w0, [x24, #1160]
  43e498:	cbnz	w0, 43e718 <nftw@plt+0x3bb98>
  43e49c:	ldr	w25, [x21, #12]
  43e4a0:	tbnz	w4, #6, 43e530 <nftw@plt+0x3b9b0>
  43e4a4:	cbz	w25, 43e540 <nftw@plt+0x3b9c0>
  43e4a8:	add	x22, x21, #0x18
  43e4ac:	mov	w20, #0x0                   	// #0
  43e4b0:	b	43e4f0 <nftw@plt+0x3b970>
  43e4b4:	ldr	x0, [x22, #16]
  43e4b8:	ldr	w0, [x0, #8]
  43e4bc:	add	w19, w19, w0
  43e4c0:	ldrh	w2, [x22, #6]
  43e4c4:	add	w20, w20, #0x1
  43e4c8:	add	x22, x22, #0x18
  43e4cc:	and	w0, w2, #0x1
  43e4d0:	ubfx	x1, x2, #2, #1
  43e4d4:	tst	x2, #0x8
  43e4d8:	add	w19, w19, w1
  43e4dc:	add	w1, w19, #0x3
  43e4e0:	csel	w19, w1, w19, ne  // ne = any
  43e4e4:	cmp	w25, w20
  43e4e8:	add	w19, w19, w0
  43e4ec:	b.ls	43e540 <nftw@plt+0x3b9c0>  // b.plast
  43e4f0:	ubfiz	x2, x20, #1, #32
  43e4f4:	mov	x0, x22
  43e4f8:	add	x2, x2, w20, uxtw
  43e4fc:	add	x2, x21, x2, lsl #3
  43e500:	ldrb	w1, [x2, #28]
  43e504:	cmp	w1, #0x50
  43e508:	b.eq	43e4b4 <nftw@plt+0x3b934>  // b.none
  43e50c:	bl	430378 <nftw@plt+0x2d7f8>
  43e510:	add	w19, w19, w0
  43e514:	b	43e4c0 <nftw@plt+0x3b940>
  43e518:	ubfiz	x0, x25, #1, #32
  43e51c:	add	x0, x0, w25, uxtw
  43e520:	add	x0, x21, x0, lsl #3
  43e524:	ldrb	w0, [x0, #28]
  43e528:	cmp	w0, #0x26
  43e52c:	b.ne	43e77c <nftw@plt+0x3bbfc>  // b.any
  43e530:	mov	w1, w25
  43e534:	sub	w25, w25, #0x1
  43e538:	cbnz	w1, 43e518 <nftw@plt+0x3b998>
  43e53c:	nop
  43e540:	ldr	w1, [x24, #512]
  43e544:	ldr	x0, [x24, #504]
  43e548:	cmp	w1, w19
  43e54c:	b.cc	43e734 <nftw@plt+0x3bbb4>  // b.lo, b.ul, b.last
  43e550:	mov	x1, x23
  43e554:	bl	4303c0 <nftw@plt+0x2d840>
  43e558:	mov	x4, x0
  43e55c:	ldrb	w0, [x21, #19]
  43e560:	tbz	w0, #2, 43e608 <nftw@plt+0x3ba88>
  43e564:	mov	x19, x4
  43e568:	mov	w0, #0x28                  	// #40
  43e56c:	strb	w0, [x19], #1
  43e570:	ldrh	w1, [x21, #16]
  43e574:	cbz	w1, 43e5fc <nftw@plt+0x3ba7c>
  43e578:	mov	x20, #0x0                   	// #0
  43e57c:	mov	w26, #0x2e2e                	// #11822
  43e580:	mov	w25, #0x2e                  	// #46
  43e584:	mov	w23, #0x2c                  	// #44
  43e588:	b	43e5a4 <nftw@plt+0x3ba24>
  43e58c:	strb	w23, [x0], #1
  43e590:	mov	x19, x0
  43e594:	ldrh	w1, [x21, #16]
  43e598:	add	x20, x20, #0x1
  43e59c:	cmp	w1, w20
  43e5a0:	b.ls	43e5fc <nftw@plt+0x3ba7c>  // b.plast
  43e5a4:	ldr	x3, [x21]
  43e5a8:	mov	x0, x19
  43e5ac:	ldr	x2, [x24, #1272]
  43e5b0:	ldr	x22, [x3, x20, lsl #3]
  43e5b4:	cmp	x2, x22
  43e5b8:	b.eq	43e5d4 <nftw@plt+0x3ba54>  // b.none
  43e5bc:	ldr	w2, [x22, #8]
  43e5c0:	ldr	x1, [x22]
  43e5c4:	bl	402490 <memcpy@plt>
  43e5c8:	ldr	w0, [x22, #8]
  43e5cc:	ldrh	w1, [x21, #16]
  43e5d0:	add	x19, x19, x0
  43e5d4:	add	w2, w20, #0x1
  43e5d8:	mov	x0, x19
  43e5dc:	cmp	w1, w2
  43e5e0:	b.hi	43e58c <nftw@plt+0x3ba0c>  // b.pmore
  43e5e4:	ldrb	w1, [x21, #19]
  43e5e8:	tbz	w1, #3, 43e5fc <nftw@plt+0x3ba7c>
  43e5ec:	strh	w26, [x0], #3
  43e5f0:	strb	w25, [x19, #2]
  43e5f4:	mov	x19, x0
  43e5f8:	b	43e594 <nftw@plt+0x3ba14>
  43e5fc:	mov	x4, x19
  43e600:	mov	w0, #0x29                  	// #41
  43e604:	strb	w0, [x4], #1
  43e608:	mov	w0, #0x20                  	// #32
  43e60c:	strb	w0, [x4], #1
  43e610:	ldrb	w0, [x24, #1160]
  43e614:	cbnz	w0, 43e6e8 <nftw@plt+0x3bb68>
  43e618:	ldr	w20, [x21, #12]
  43e61c:	cbz	w20, 43e6f8 <nftw@plt+0x3bb78>
  43e620:	ldrb	w0, [x21, #19]
  43e624:	tbnz	w0, #6, 43e748 <nftw@plt+0x3bbc8>
  43e628:	add	x19, x21, #0x18
  43e62c:	mov	w26, #0x0                   	// #0
  43e630:	mov	w25, #0x20                  	// #32
  43e634:	mov	w22, #0x23                  	// #35
  43e638:	mov	w23, #0x2320                	// #8992
  43e63c:	b	43e670 <nftw@plt+0x3baf0>
  43e640:	bl	4306e0 <nftw@plt+0x2db60>
  43e644:	mov	x4, x0
  43e648:	ldrh	w1, [x19, #6]
  43e64c:	mov	x0, x4
  43e650:	add	w26, w26, #0x1
  43e654:	add	x19, x19, #0x18
  43e658:	tbz	w1, #3, 43e668 <nftw@plt+0x3bae8>
  43e65c:	strh	w23, [x0], #3
  43e660:	strb	w22, [x4, #2]
  43e664:	mov	x4, x0
  43e668:	cmp	w20, w26
  43e66c:	b.ls	43e6f8 <nftw@plt+0x3bb78>  // b.plast
  43e670:	ldrh	w2, [x19, #6]
  43e674:	ubfiz	x5, x26, #1, #32
  43e678:	add	x5, x5, w26, uxtw
  43e67c:	mov	x6, x4
  43e680:	mov	x1, x19
  43e684:	mov	x0, x24
  43e688:	add	x5, x21, x5, lsl #3
  43e68c:	mov	w3, #0x1                   	// #1
  43e690:	tbz	w2, #0, 43e6a0 <nftw@plt+0x3bb20>
  43e694:	strb	w25, [x6], #1
  43e698:	ldrh	w2, [x19, #6]
  43e69c:	mov	x4, x6
  43e6a0:	mov	x6, x4
  43e6a4:	tbz	w2, #2, 43e6b0 <nftw@plt+0x3bb30>
  43e6a8:	strb	w22, [x6], #1
  43e6ac:	mov	x4, x6
  43e6b0:	ldrb	w5, [x5, #28]
  43e6b4:	mov	x2, x4
  43e6b8:	cmp	w5, #0x50
  43e6bc:	b.ne	43e640 <nftw@plt+0x3bac0>  // b.any
  43e6c0:	ldr	x1, [x19, #16]
  43e6c4:	mov	x0, x4
  43e6c8:	ldr	w2, [x1, #8]
  43e6cc:	ldr	x1, [x1]
  43e6d0:	bl	402490 <memcpy@plt>
  43e6d4:	mov	x4, x0
  43e6d8:	ldr	x0, [x19, #16]
  43e6dc:	ldr	w0, [x0, #8]
  43e6e0:	add	x4, x4, x0
  43e6e4:	b	43e648 <nftw@plt+0x3bac8>
  43e6e8:	mov	x1, x4
  43e6ec:	mov	x0, x21
  43e6f0:	bl	441320 <nftw@plt+0x3e7a0>
  43e6f4:	mov	x4, x0
  43e6f8:	strb	wzr, [x4]
  43e6fc:	ldp	x19, x20, [sp, #16]
  43e700:	ldp	x21, x22, [sp, #32]
  43e704:	ldp	x25, x26, [sp, #64]
  43e708:	ldr	x0, [x24, #504]
  43e70c:	ldp	x23, x24, [sp, #48]
  43e710:	ldp	x29, x30, [sp], #80
  43e714:	ret
  43e718:	mov	x0, x21
  43e71c:	bl	4412b0 <nftw@plt+0x3e730>
  43e720:	ldr	w1, [x24, #512]
  43e724:	add	w19, w19, w0
  43e728:	ldr	x0, [x24, #504]
  43e72c:	cmp	w1, w19
  43e730:	b.cs	43e550 <nftw@plt+0x3b9d0>  // b.hs, b.nlast
  43e734:	mov	w1, w19
  43e738:	bl	4615e8 <_obstack_memory_used@@Base+0x1a0>
  43e73c:	str	x0, [x24, #504]
  43e740:	str	w19, [x24, #512]
  43e744:	b	43e550 <nftw@plt+0x3b9d0>
  43e748:	sub	w0, w20, #0x1
  43e74c:	nop
  43e750:	ubfiz	x1, x0, #1, #32
  43e754:	add	w20, w0, #0x1
  43e758:	add	x1, x1, w0, uxtw
  43e75c:	sub	w0, w0, #0x1
  43e760:	add	x1, x21, x1, lsl #3
  43e764:	ldrb	w1, [x1, #28]
  43e768:	cmp	w1, #0x26
  43e76c:	b.ne	43e628 <nftw@plt+0x3baa8>  // b.any
  43e770:	cmn	w0, #0x1
  43e774:	b.ne	43e750 <nftw@plt+0x3bbd0>  // b.any
  43e778:	b	43e6f8 <nftw@plt+0x3bb78>
  43e77c:	mov	w25, w1
  43e780:	b	43e4a8 <nftw@plt+0x3b928>
  43e784:	nop
  43e788:	stp	x29, x30, [sp, #-48]!
  43e78c:	mov	x29, sp
  43e790:	stp	x21, x22, [sp, #32]
  43e794:	mov	x21, x0
  43e798:	ldr	x0, [x0, #32]
  43e79c:	stp	x19, x20, [sp, #16]
  43e7a0:	mov	x19, x1
  43e7a4:	cbz	x0, 43e824 <nftw@plt+0x3bca4>
  43e7a8:	ldr	w1, [x21, #48]
  43e7ac:	cbz	w1, 43e824 <nftw@plt+0x3bca4>
  43e7b0:	mov	w20, #0x0                   	// #0
  43e7b4:	b	43e7bc <nftw@plt+0x3bc3c>
  43e7b8:	ldr	x0, [x21, #32]
  43e7bc:	mov	w22, w20
  43e7c0:	ldr	x2, [x21, #40]
  43e7c4:	add	w20, w20, #0x1
  43e7c8:	ldr	x0, [x0, x22, lsl #3]
  43e7cc:	mov	x1, x19
  43e7d0:	ldr	x2, [x2, x22, lsl #3]
  43e7d4:	bl	45fb50 <nftw@plt+0x5cfd0>
  43e7d8:	cbnz	w0, 43e818 <nftw@plt+0x3bc98>
  43e7dc:	ldr	x0, [x21, #40]
  43e7e0:	ldr	x0, [x0, x22, lsl #3]
  43e7e4:	add	x1, x19, x0
  43e7e8:	ldrb	w2, [x19, x0]
  43e7ec:	cmp	w2, #0x2f
  43e7f0:	b.ne	43e818 <nftw@plt+0x3bc98>  // b.any
  43e7f4:	ldrb	w2, [x1, #1]
  43e7f8:	cmp	w2, #0x2e
  43e7fc:	b.ne	43e874 <nftw@plt+0x3bcf4>  // b.any
  43e800:	ldrb	w2, [x1, #2]
  43e804:	cmp	w2, #0x2e
  43e808:	b.ne	43e874 <nftw@plt+0x3bcf4>  // b.any
  43e80c:	ldrb	w1, [x1, #3]
  43e810:	cmp	w1, #0x2f
  43e814:	b.ne	43e874 <nftw@plt+0x3bcf4>  // b.any
  43e818:	ldr	w0, [x21, #48]
  43e81c:	cmp	w0, w20
  43e820:	b.hi	43e7b8 <nftw@plt+0x3bc38>  // b.pmore
  43e824:	mov	x0, x19
  43e828:	ldrb	w1, [x0]
  43e82c:	cmp	w1, #0x2e
  43e830:	b.ne	43e864 <nftw@plt+0x3bce4>  // b.any
  43e834:	ldrb	w1, [x0, #1]
  43e838:	cmp	w1, #0x2f
  43e83c:	b.ne	43e864 <nftw@plt+0x3bce4>  // b.any
  43e840:	ldrb	w1, [x0, #2]
  43e844:	add	x0, x0, #0x2
  43e848:	cmp	w1, #0x2f
  43e84c:	b.ne	43e82c <nftw@plt+0x3bcac>  // b.any
  43e850:	ldrb	w1, [x0, #1]!
  43e854:	cmp	w1, #0x2f
  43e858:	b.eq	43e850 <nftw@plt+0x3bcd0>  // b.none
  43e85c:	cmp	w1, #0x2e
  43e860:	b.eq	43e834 <nftw@plt+0x3bcb4>  // b.none
  43e864:	ldp	x19, x20, [sp, #16]
  43e868:	ldp	x21, x22, [sp, #32]
  43e86c:	ldp	x29, x30, [sp], #48
  43e870:	ret
  43e874:	add	x0, x0, #0x1
  43e878:	add	x0, x19, x0
  43e87c:	b	43e828 <nftw@plt+0x3bca8>
  43e880:	stp	x29, x30, [sp, #-32]!
  43e884:	mov	x29, sp
  43e888:	str	x19, [sp, #16]
  43e88c:	mov	x19, x0
  43e890:	ldrb	w1, [x0]
  43e894:	cbz	w1, 43ea24 <nftw@plt+0x3bea4>
  43e898:	sub	x7, x0, #0x1
  43e89c:	mov	w2, #0x0                   	// #0
  43e8a0:	mov	x6, x7
  43e8a4:	b	43e8bc <nftw@plt+0x3bd3c>
  43e8a8:	add	w4, w2, #0x3
  43e8ac:	mov	w2, w3
  43e8b0:	ldrb	w1, [x6, #2]
  43e8b4:	add	x6, x6, #0x1
  43e8b8:	cbz	w1, 43e930 <nftw@plt+0x3bdb0>
  43e8bc:	cmp	w1, #0x24
  43e8c0:	add	w0, w2, #0x1
  43e8c4:	add	w3, w2, #0x2
  43e8c8:	b.hi	43e9dc <nftw@plt+0x3be5c>  // b.pmore
  43e8cc:	cmp	w1, #0x22
  43e8d0:	b.hi	43e8a8 <nftw@plt+0x3bd28>  // b.pmore
  43e8d4:	cmp	w1, #0x9
  43e8d8:	b.eq	43e8e4 <nftw@plt+0x3bd64>  // b.none
  43e8dc:	cmp	w1, #0x20
  43e8e0:	b.ne	43e9dc <nftw@plt+0x3be5c>  // b.any
  43e8e4:	cmp	x19, x6
  43e8e8:	mov	x1, x6
  43e8ec:	b.hi	43e8a8 <nftw@plt+0x3bd28>  // b.pmore
  43e8f0:	ldrb	w5, [x1]
  43e8f4:	add	w4, w3, #0x1
  43e8f8:	mov	w2, w3
  43e8fc:	sub	x1, x1, #0x1
  43e900:	mov	w3, w4
  43e904:	cmp	w5, #0x5c
  43e908:	b.ne	43e8b0 <nftw@plt+0x3bd30>  // b.any
  43e90c:	cmp	x7, x1
  43e910:	b.ne	43e8f0 <nftw@plt+0x3bd70>  // b.any
  43e914:	ldrb	w1, [x6, #2]
  43e918:	add	w0, w2, #0x2
  43e91c:	add	x6, x6, #0x1
  43e920:	mov	w2, w4
  43e924:	mov	w4, w0
  43e928:	cbnz	w1, 43e8bc <nftw@plt+0x3bd3c>
  43e92c:	nop
  43e930:	sxtw	x0, w4
  43e934:	bl	461560 <_obstack_memory_used@@Base+0x118>
  43e938:	ldrb	w4, [x19]
  43e93c:	cbz	w4, 43ea34 <nftw@plt+0x3beb4>
  43e940:	sub	x9, x19, #0x1
  43e944:	mov	x1, x0
  43e948:	mov	x7, x9
  43e94c:	mov	w10, #0x5c                  	// #92
  43e950:	add	x6, x1, #0x1
  43e954:	cmp	w4, #0x23
  43e958:	mov	x3, x6
  43e95c:	b.eq	43ea04 <nftw@plt+0x3be84>  // b.none
  43e960:	b.hi	43e9e8 <nftw@plt+0x3be68>  // b.pmore
  43e964:	cmp	w4, #0x9
  43e968:	b.eq	43e974 <nftw@plt+0x3bdf4>  // b.none
  43e96c:	cmp	w4, #0x20
  43e970:	b.ne	43e9f8 <nftw@plt+0x3be78>  // b.any
  43e974:	cmp	x19, x7
  43e978:	mov	x2, x7
  43e97c:	b.ls	43e990 <nftw@plt+0x3be10>  // b.plast
  43e980:	b	43ea18 <nftw@plt+0x3be98>
  43e984:	sturb	w5, [x1, #-1]
  43e988:	cmp	x9, x2
  43e98c:	b.eq	43ea0c <nftw@plt+0x3be8c>  // b.none
  43e990:	ldrb	w5, [x2]
  43e994:	mov	x8, x1
  43e998:	mov	x1, x3
  43e99c:	add	x3, x3, #0x1
  43e9a0:	sub	x2, x2, #0x1
  43e9a4:	cmp	w5, #0x5c
  43e9a8:	mov	x6, x3
  43e9ac:	b.eq	43e984 <nftw@plt+0x3be04>  // b.none
  43e9b0:	mov	x6, x1
  43e9b4:	mov	x1, x3
  43e9b8:	strb	w10, [x8]
  43e9bc:	add	x7, x7, #0x1
  43e9c0:	strb	w4, [x6]
  43e9c4:	ldrb	w4, [x7, #1]
  43e9c8:	cbnz	w4, 43e950 <nftw@plt+0x3bdd0>
  43e9cc:	strb	wzr, [x1]
  43e9d0:	ldr	x19, [sp, #16]
  43e9d4:	ldp	x29, x30, [sp], #32
  43e9d8:	ret
  43e9dc:	mov	w4, w3
  43e9e0:	mov	w2, w0
  43e9e4:	b	43e8b0 <nftw@plt+0x3bd30>
  43e9e8:	cmp	w4, #0x24
  43e9ec:	b.ne	43e9f8 <nftw@plt+0x3be78>  // b.any
  43e9f0:	strb	w4, [x1], #2
  43e9f4:	b	43e9bc <nftw@plt+0x3be3c>
  43e9f8:	mov	x6, x1
  43e9fc:	mov	x1, x3
  43ea00:	b	43e9bc <nftw@plt+0x3be3c>
  43ea04:	strb	w10, [x1], #2
  43ea08:	b	43e9bc <nftw@plt+0x3be3c>
  43ea0c:	mov	x8, x1
  43ea10:	add	x1, x3, #0x1
  43ea14:	b	43e9b8 <nftw@plt+0x3be38>
  43ea18:	mov	x8, x1
  43ea1c:	add	x1, x1, #0x2
  43ea20:	b	43e9b8 <nftw@plt+0x3be38>
  43ea24:	mov	x0, #0x1                   	// #1
  43ea28:	bl	461560 <_obstack_memory_used@@Base+0x118>
  43ea2c:	ldrb	w4, [x19]
  43ea30:	cbnz	w4, 43e940 <nftw@plt+0x3bdc0>
  43ea34:	mov	x1, x0
  43ea38:	strb	wzr, [x1]
  43ea3c:	ldr	x19, [sp, #16]
  43ea40:	ldp	x29, x30, [sp], #32
  43ea44:	ret
  43ea48:	mov	x1, #0x38                  	// #56
  43ea4c:	mov	x0, #0x1                   	// #1
  43ea50:	b	461598 <_obstack_memory_used@@Base+0x150>
  43ea54:	nop
  43ea58:	stp	x29, x30, [sp, #-32]!
  43ea5c:	mov	x29, sp
  43ea60:	stp	x19, x20, [sp, #16]
  43ea64:	mov	x19, x0
  43ea68:	ldr	x0, [x0]
  43ea6c:	cbz	x0, 43eaa0 <nftw@plt+0x3bf20>
  43ea70:	ldr	w1, [x19, #8]
  43ea74:	cbz	w1, 43ea9c <nftw@plt+0x3bf1c>
  43ea78:	mov	w20, #0x0                   	// #0
  43ea7c:	nop
  43ea80:	ldr	x0, [x0, w20, uxtw #3]
  43ea84:	add	w20, w20, #0x1
  43ea88:	bl	402910 <free@plt>
  43ea8c:	ldr	w0, [x19, #8]
  43ea90:	cmp	w0, w20
  43ea94:	ldr	x0, [x19]
  43ea98:	b.hi	43ea80 <nftw@plt+0x3bf00>  // b.pmore
  43ea9c:	bl	402910 <free@plt>
  43eaa0:	ldr	x0, [x19, #16]
  43eaa4:	cbz	x0, 43ead8 <nftw@plt+0x3bf58>
  43eaa8:	ldr	w1, [x19, #24]
  43eaac:	cbz	w1, 43ead4 <nftw@plt+0x3bf54>
  43eab0:	mov	w20, #0x0                   	// #0
  43eab4:	nop
  43eab8:	ldr	x0, [x0, w20, uxtw #3]
  43eabc:	add	w20, w20, #0x1
  43eac0:	bl	402910 <free@plt>
  43eac4:	ldr	w0, [x19, #24]
  43eac8:	cmp	w0, w20
  43eacc:	ldr	x0, [x19, #16]
  43ead0:	b.hi	43eab8 <nftw@plt+0x3bf38>  // b.pmore
  43ead4:	bl	402910 <free@plt>
  43ead8:	ldr	x0, [x19, #32]
  43eadc:	cbz	x0, 43eb18 <nftw@plt+0x3bf98>
  43eae0:	ldr	w1, [x19, #48]
  43eae4:	cbz	w1, 43eb0c <nftw@plt+0x3bf8c>
  43eae8:	mov	w20, #0x0                   	// #0
  43eaec:	nop
  43eaf0:	ldr	x0, [x0, w20, uxtw #3]
  43eaf4:	add	w20, w20, #0x1
  43eaf8:	bl	402910 <free@plt>
  43eafc:	ldr	w0, [x19, #48]
  43eb00:	cmp	w0, w20
  43eb04:	ldr	x0, [x19, #32]
  43eb08:	b.hi	43eaf0 <nftw@plt+0x3bf70>  // b.pmore
  43eb0c:	bl	402910 <free@plt>
  43eb10:	ldr	x0, [x19, #40]
  43eb14:	bl	402910 <free@plt>
  43eb18:	mov	x0, x19
  43eb1c:	ldp	x19, x20, [sp, #16]
  43eb20:	ldp	x29, x30, [sp], #32
  43eb24:	b	402910 <free@plt>
  43eb28:	stp	x29, x30, [sp, #-48]!
  43eb2c:	mov	x29, sp
  43eb30:	stp	x19, x20, [sp, #16]
  43eb34:	mov	x19, x0
  43eb38:	ldr	w0, [x0, #8]
  43eb3c:	str	x21, [sp, #32]
  43eb40:	mov	x21, x1
  43eb44:	ldr	w1, [x19, #12]
  43eb48:	mov	w20, w2
  43eb4c:	cmp	w0, w1
  43eb50:	b.eq	43eb94 <nftw@plt+0x3c014>  // b.none
  43eb54:	mov	x1, x21
  43eb58:	mov	x0, x19
  43eb5c:	bl	43e788 <nftw@plt+0x3bc08>
  43eb60:	cbz	w20, 43eb8c <nftw@plt+0x3c00c>
  43eb64:	bl	43e880 <nftw@plt+0x3bd00>
  43eb68:	ldr	w1, [x19, #8]
  43eb6c:	ldr	x2, [x19]
  43eb70:	add	w3, w1, #0x1
  43eb74:	ldr	x21, [sp, #32]
  43eb78:	str	w3, [x19, #8]
  43eb7c:	str	x0, [x2, w1, uxtw #3]
  43eb80:	ldp	x19, x20, [sp, #16]
  43eb84:	ldp	x29, x30, [sp], #48
  43eb88:	ret
  43eb8c:	bl	4616a8 <_obstack_memory_used@@Base+0x260>
  43eb90:	b	43eb68 <nftw@plt+0x3bfe8>
  43eb94:	add	w2, w0, #0x2
  43eb98:	ldr	x0, [x19]
  43eb9c:	lsl	w1, w2, #1
  43eba0:	mov	x2, x1
  43eba4:	str	w2, [x19, #12]
  43eba8:	lsl	x1, x1, #3
  43ebac:	bl	4615e8 <_obstack_memory_used@@Base+0x1a0>
  43ebb0:	str	x0, [x19]
  43ebb4:	b	43eb54 <nftw@plt+0x3bfd4>
  43ebb8:	stp	x29, x30, [sp, #-48]!
  43ebbc:	mov	x29, sp
  43ebc0:	stp	x19, x20, [sp, #16]
  43ebc4:	mov	x19, x0
  43ebc8:	ldr	w0, [x0, #8]
  43ebcc:	str	x21, [sp, #32]
  43ebd0:	cbnz	w0, 43ec0c <nftw@plt+0x3c08c>
  43ebd4:	ldrb	w0, [x1]
  43ebd8:	cbnz	w0, 43ec20 <nftw@plt+0x3c0a0>
  43ebdc:	ldr	w0, [x19, #12]
  43ebe0:	cbz	w0, 43ecc0 <nftw@plt+0x3c140>
  43ebe4:	adrp	x1, 47d000 <_obstack_memory_used@@Base+0x1bbb8>
  43ebe8:	add	x1, x1, #0x28
  43ebec:	mov	x0, x19
  43ebf0:	bl	43e788 <nftw@plt+0x3bc08>
  43ebf4:	bl	43e880 <nftw@plt+0x3bd00>
  43ebf8:	ldr	w1, [x19, #8]
  43ebfc:	ldr	x2, [x19]
  43ec00:	add	w3, w1, #0x1
  43ec04:	str	w3, [x19, #8]
  43ec08:	str	x0, [x2, w1, uxtw #3]
  43ec0c:	mov	sp, x29
  43ec10:	ldp	x19, x20, [sp, #16]
  43ec14:	ldr	x21, [sp, #32]
  43ec18:	ldp	x29, x30, [sp], #48
  43ec1c:	ret
  43ec20:	mov	x0, x1
  43ec24:	bl	460fc0 <nftw@plt+0x5e440>
  43ec28:	mov	x20, x0
  43ec2c:	bl	4024f0 <strlen@plt>
  43ec30:	mov	x1, x20
  43ec34:	mov	x20, x0
  43ec38:	add	x0, x0, #0x12
  43ec3c:	add	x2, x20, #0x1
  43ec40:	and	x0, x0, #0xfffffffffffffff0
  43ec44:	sub	sp, sp, x0
  43ec48:	mov	x21, sp
  43ec4c:	mov	x0, x21
  43ec50:	bl	402490 <memcpy@plt>
  43ec54:	mov	w1, #0x2e                  	// #46
  43ec58:	mov	x0, x21
  43ec5c:	bl	4027b0 <strrchr@plt>
  43ec60:	add	x20, x21, x20
  43ec64:	cmp	x0, #0x0
  43ec68:	adrp	x1, 47e000 <_obstack_memory_used@@Base+0x1cbb8>
  43ec6c:	add	x1, x1, #0x658
  43ec70:	csel	x0, x20, x0, eq  // eq = none
  43ec74:	ldp	w2, w4, [x19, #8]
  43ec78:	ldrh	w3, [x1]
  43ec7c:	ldrb	w1, [x1, #2]
  43ec80:	cmp	w2, w4
  43ec84:	strh	w3, [x0]
  43ec88:	strb	w1, [x0, #2]
  43ec8c:	b.eq	43ec98 <nftw@plt+0x3c118>  // b.none
  43ec90:	mov	x1, x21
  43ec94:	b	43ebec <nftw@plt+0x3c06c>
  43ec98:	add	w2, w2, #0x2
  43ec9c:	ldr	x0, [x19]
  43eca0:	lsl	w1, w2, #1
  43eca4:	mov	x2, x1
  43eca8:	str	w2, [x19, #12]
  43ecac:	lsl	x1, x1, #3
  43ecb0:	bl	4615e8 <_obstack_memory_used@@Base+0x1a0>
  43ecb4:	str	x0, [x19]
  43ecb8:	mov	x1, x21
  43ecbc:	b	43ebec <nftw@plt+0x3c06c>
  43ecc0:	ldr	x0, [x19]
  43ecc4:	mov	w1, #0x4                   	// #4
  43ecc8:	str	w1, [x19, #12]
  43eccc:	mov	x1, #0x20                  	// #32
  43ecd0:	bl	4615e8 <_obstack_memory_used@@Base+0x1a0>
  43ecd4:	str	x0, [x19]
  43ecd8:	b	43ebe4 <nftw@plt+0x3c064>
  43ecdc:	nop
  43ece0:	stp	x29, x30, [sp, #-32]!
  43ece4:	mov	x29, sp
  43ece8:	stp	x19, x20, [sp, #16]
  43ecec:	mov	x19, x0
  43ecf0:	bl	43e788 <nftw@plt+0x3bc08>
  43ecf4:	bl	43e880 <nftw@plt+0x3bd00>
  43ecf8:	mov	x20, x0
  43ecfc:	ldp	w1, w0, [x19, #24]
  43ed00:	cmp	w1, w0
  43ed04:	b.eq	43ed24 <nftw@plt+0x3c1a4>  // b.none
  43ed08:	ldr	x0, [x19, #16]
  43ed0c:	add	w2, w1, #0x1
  43ed10:	str	w2, [x19, #24]
  43ed14:	str	x20, [x0, w1, uxtw #3]
  43ed18:	ldp	x19, x20, [sp, #16]
  43ed1c:	ldp	x29, x30, [sp], #32
  43ed20:	ret
  43ed24:	add	w1, w1, #0x4
  43ed28:	ldr	x0, [x19, #16]
  43ed2c:	lsl	w1, w1, #1
  43ed30:	mov	x2, x1
  43ed34:	str	w2, [x19, #28]
  43ed38:	lsl	x1, x1, #3
  43ed3c:	bl	4615e8 <_obstack_memory_used@@Base+0x1a0>
  43ed40:	str	x0, [x19, #16]
  43ed44:	ldr	w1, [x19, #24]
  43ed48:	add	w2, w1, #0x1
  43ed4c:	str	w2, [x19, #24]
  43ed50:	str	x20, [x0, w1, uxtw #3]
  43ed54:	ldp	x19, x20, [sp, #16]
  43ed58:	ldp	x29, x30, [sp], #32
  43ed5c:	ret
  43ed60:	stp	x29, x30, [sp, #-48]!
  43ed64:	mov	x29, sp
  43ed68:	stp	x19, x20, [sp, #16]
  43ed6c:	mov	x20, x0
  43ed70:	ldrb	w0, [x1]
  43ed74:	cbz	w0, 43ee70 <nftw@plt+0x3c2f0>
  43ed78:	stp	x21, x22, [sp, #32]
  43ed7c:	mov	x21, x1
  43ed80:	mov	x19, x21
  43ed84:	cmp	w0, #0x3a
  43ed88:	b.eq	43ee0c <nftw@plt+0x3c28c>  // b.none
  43ed8c:	nop
  43ed90:	ldrb	w2, [x19, #1]!
  43ed94:	cmp	w2, #0x3a
  43ed98:	ccmp	w2, #0x0, #0x4, ne  // ne = any
  43ed9c:	b.ne	43ed90 <nftw@plt+0x3c210>  // b.any
  43eda0:	sub	x22, x19, x21
  43eda4:	add	x0, x22, #0x1
  43eda8:	bl	461560 <_obstack_memory_used@@Base+0x118>
  43edac:	mov	x1, x21
  43edb0:	mov	x21, x0
  43edb4:	mov	x2, x22
  43edb8:	bl	402490 <memcpy@plt>
  43edbc:	ldrb	w0, [x19]
  43edc0:	ldp	w1, w2, [x20, #48]
  43edc4:	strb	wzr, [x21, x22]
  43edc8:	cmp	w0, #0x3a
  43edcc:	cinc	x19, x19, eq  // eq = none
  43edd0:	cmp	w1, w2
  43edd4:	ldr	x0, [x20, #32]
  43edd8:	b.eq	43ee18 <nftw@plt+0x3c298>  // b.none
  43eddc:	mov	w2, w1
  43ede0:	add	w1, w1, #0x1
  43ede4:	ldr	x3, [x20, #40]
  43ede8:	str	x21, [x0, x2, lsl #3]
  43edec:	str	x22, [x3, x2, lsl #3]
  43edf0:	str	w1, [x20, #48]
  43edf4:	ldrb	w0, [x19]
  43edf8:	cbz	w0, 43ee6c <nftw@plt+0x3c2ec>
  43edfc:	mov	x21, x19
  43ee00:	cmp	w0, #0x3a
  43ee04:	mov	x19, x21
  43ee08:	b.ne	43ed90 <nftw@plt+0x3c210>  // b.any
  43ee0c:	mov	x22, #0x0                   	// #0
  43ee10:	mov	x0, #0x1                   	// #1
  43ee14:	b	43eda8 <nftw@plt+0x3c228>
  43ee18:	add	w1, w1, #0x4
  43ee1c:	lsl	w1, w1, #1
  43ee20:	str	w1, [x20, #52]
  43ee24:	lsl	x1, x1, #3
  43ee28:	bl	4615e8 <_obstack_memory_used@@Base+0x1a0>
  43ee2c:	mov	x2, x0
  43ee30:	ldr	w1, [x20, #52]
  43ee34:	ldr	x0, [x20, #40]
  43ee38:	str	x2, [x20, #32]
  43ee3c:	lsl	x1, x1, #3
  43ee40:	bl	4615e8 <_obstack_memory_used@@Base+0x1a0>
  43ee44:	str	x0, [x20, #40]
  43ee48:	ldr	w1, [x20, #48]
  43ee4c:	ldr	x3, [x20, #32]
  43ee50:	mov	w2, w1
  43ee54:	add	w1, w1, #0x1
  43ee58:	str	x21, [x3, x2, lsl #3]
  43ee5c:	str	x22, [x0, x2, lsl #3]
  43ee60:	str	w1, [x20, #48]
  43ee64:	ldrb	w0, [x19]
  43ee68:	cbnz	w0, 43edfc <nftw@plt+0x3c27c>
  43ee6c:	ldp	x21, x22, [sp, #32]
  43ee70:	ldp	x19, x20, [sp, #16]
  43ee74:	ldp	x29, x30, [sp], #48
  43ee78:	ret
  43ee7c:	nop
  43ee80:	stp	x29, x30, [sp, #-96]!
  43ee84:	mov	x29, sp
  43ee88:	stp	x19, x20, [sp, #16]
  43ee8c:	mov	x20, x0
  43ee90:	sub	w0, w2, #0x1
  43ee94:	cmp	w0, #0x20
  43ee98:	stp	x21, x22, [sp, #32]
  43ee9c:	ldr	w0, [x20, #8]
  43eea0:	stp	x23, x24, [sp, #48]
  43eea4:	mov	x19, x1
  43eea8:	mov	w1, #0x22                  	// #34
  43eeac:	stp	x25, x26, [sp, #64]
  43eeb0:	csel	w24, w2, w1, hi  // hi = pmore
  43eeb4:	stp	x27, x28, [sp, #80]
  43eeb8:	cbz	w0, 43f0a4 <nftw@plt+0x3c524>
  43eebc:	ldr	x0, [x20]
  43eec0:	adrp	x26, 47e000 <_obstack_memory_used@@Base+0x1cbb8>
  43eec4:	add	x26, x26, #0x660
  43eec8:	mov	w21, #0x0                   	// #0
  43eecc:	mov	w27, #0x20                  	// #32
  43eed0:	ldr	x25, [x0]
  43eed4:	mov	x0, x25
  43eed8:	bl	4024f0 <strlen@plt>
  43eedc:	mov	w23, w0
  43eee0:	mov	x0, x25
  43eee4:	mov	x1, x19
  43eee8:	bl	402a50 <fputs_unlocked@plt>
  43eeec:	add	w28, w21, #0x1
  43eef0:	ldr	w0, [x20, #8]
  43eef4:	mov	x21, x28
  43eef8:	cmp	w0, w28
  43eefc:	b.ls	43ef6c <nftw@plt+0x3c3ec>  // b.plast
  43ef00:	ldr	x0, [x20]
  43ef04:	ldr	x25, [x0, x28, lsl #3]
  43ef08:	mov	x0, x25
  43ef0c:	bl	4024f0 <strlen@plt>
  43ef10:	cmp	w24, #0x0
  43ef14:	mov	x22, x0
  43ef18:	add	w23, w23, w0
  43ef1c:	cbz	w21, 43eee0 <nftw@plt+0x3c360>
  43ef20:	ccmp	w24, w23, #0x2, ne  // ne = any
  43ef24:	b.cc	43f060 <nftw@plt+0x3c4e0>  // b.lo, b.ul, b.last
  43ef28:	ldp	x0, x1, [x19, #40]
  43ef2c:	add	x2, x0, #0x1
  43ef30:	cmp	x0, x1
  43ef34:	b.cs	43f094 <nftw@plt+0x3c514>  // b.hs, b.nlast
  43ef38:	str	x2, [x19, #40]
  43ef3c:	strb	w27, [x0]
  43ef40:	ldr	x0, [x20]
  43ef44:	mov	x1, x19
  43ef48:	add	w23, w23, #0x1
  43ef4c:	ldr	x25, [x0, x28, lsl #3]
  43ef50:	add	w28, w21, #0x1
  43ef54:	mov	x21, x28
  43ef58:	mov	x0, x25
  43ef5c:	bl	402a50 <fputs_unlocked@plt>
  43ef60:	ldr	w0, [x20, #8]
  43ef64:	cmp	w0, w28
  43ef68:	b.hi	43ef00 <nftw@plt+0x3c380>  // b.pmore
  43ef6c:	ldp	x0, x1, [x19, #40]
  43ef70:	add	w23, w23, #0x1
  43ef74:	cmp	x0, x1
  43ef78:	b.cs	43f0b8 <nftw@plt+0x3c538>  // b.hs, b.nlast
  43ef7c:	add	x1, x0, #0x1
  43ef80:	str	x1, [x19, #40]
  43ef84:	mov	w1, #0x3a                  	// #58
  43ef88:	strb	w1, [x0]
  43ef8c:	ldr	w0, [x20, #24]
  43ef90:	cbz	w0, 43f00c <nftw@plt+0x3c48c>
  43ef94:	cmp	w24, #0x0
  43ef98:	adrp	x26, 47e000 <_obstack_memory_used@@Base+0x1cbb8>
  43ef9c:	cset	w22, ne  // ne = any
  43efa0:	add	x26, x26, #0x660
  43efa4:	mov	w21, #0x0                   	// #0
  43efa8:	mov	w25, #0x20                  	// #32
  43efac:	nop
  43efb0:	ldr	x0, [x20, #16]
  43efb4:	mov	w27, w21
  43efb8:	ldr	x0, [x0, x27, lsl #3]
  43efbc:	bl	4024f0 <strlen@plt>
  43efc0:	add	w23, w23, w0
  43efc4:	cmp	w22, #0x0
  43efc8:	ccmp	w24, w23, #0x2, ne  // ne = any
  43efcc:	b.cc	43f044 <nftw@plt+0x3c4c4>  // b.lo, b.ul, b.last
  43efd0:	ldp	x0, x1, [x19, #40]
  43efd4:	add	x2, x0, #0x1
  43efd8:	cmp	x0, x1
  43efdc:	b.cs	43f084 <nftw@plt+0x3c504>  // b.hs, b.nlast
  43efe0:	str	x2, [x19, #40]
  43efe4:	strb	w25, [x0]
  43efe8:	add	w23, w23, #0x1
  43efec:	ldr	x0, [x20, #16]
  43eff0:	mov	x1, x19
  43eff4:	add	w21, w21, #0x1
  43eff8:	ldr	x0, [x0, x27, lsl #3]
  43effc:	bl	402a50 <fputs_unlocked@plt>
  43f000:	ldr	w0, [x20, #24]
  43f004:	cmp	w0, w21
  43f008:	b.hi	43efb0 <nftw@plt+0x3c430>  // b.pmore
  43f00c:	ldp	x0, x1, [x19, #40]
  43f010:	cmp	x0, x1
  43f014:	b.cs	43f0c8 <nftw@plt+0x3c548>  // b.hs, b.nlast
  43f018:	add	x1, x0, #0x1
  43f01c:	str	x1, [x19, #40]
  43f020:	mov	w1, #0xa                   	// #10
  43f024:	strb	w1, [x0]
  43f028:	ldp	x19, x20, [sp, #16]
  43f02c:	ldp	x21, x22, [sp, #32]
  43f030:	ldp	x23, x24, [sp, #48]
  43f034:	ldp	x25, x26, [sp, #64]
  43f038:	ldp	x27, x28, [sp, #80]
  43f03c:	ldp	x29, x30, [sp], #96
  43f040:	ret
  43f044:	add	w23, w0, #0x1
  43f048:	mov	x3, x19
  43f04c:	mov	x0, x26
  43f050:	mov	x2, #0x4                   	// #4
  43f054:	mov	x1, #0x1                   	// #1
  43f058:	bl	4024d0 <fwrite_unlocked@plt>
  43f05c:	b	43efec <nftw@plt+0x3c46c>
  43f060:	mov	x3, x19
  43f064:	mov	x0, x26
  43f068:	mov	x2, #0x4                   	// #4
  43f06c:	mov	x1, #0x1                   	// #1
  43f070:	bl	4024d0 <fwrite_unlocked@plt>
  43f074:	add	w23, w22, #0x1
  43f078:	ldr	x0, [x20]
  43f07c:	ldr	x25, [x0, x28, lsl #3]
  43f080:	b	43eee0 <nftw@plt+0x3c360>
  43f084:	mov	x0, x19
  43f088:	mov	w1, #0x20                  	// #32
  43f08c:	bl	402800 <__overflow@plt>
  43f090:	b	43efe8 <nftw@plt+0x3c468>
  43f094:	mov	x0, x19
  43f098:	mov	w1, #0x20                  	// #32
  43f09c:	bl	402800 <__overflow@plt>
  43f0a0:	b	43ef40 <nftw@plt+0x3c3c0>
  43f0a4:	ldp	x0, x1, [x19, #40]
  43f0a8:	mov	w23, #0x1                   	// #1
  43f0ac:	cmp	x0, x1
  43f0b0:	b.cc	43ef7c <nftw@plt+0x3c3fc>  // b.lo, b.ul, b.last
  43f0b4:	nop
  43f0b8:	mov	x0, x19
  43f0bc:	mov	w1, #0x3a                  	// #58
  43f0c0:	bl	402800 <__overflow@plt>
  43f0c4:	b	43ef8c <nftw@plt+0x3c40c>
  43f0c8:	mov	x0, x19
  43f0cc:	mov	w1, #0xa                   	// #10
  43f0d0:	ldp	x19, x20, [sp, #16]
  43f0d4:	ldp	x21, x22, [sp, #32]
  43f0d8:	ldp	x23, x24, [sp, #48]
  43f0dc:	ldp	x25, x26, [sp, #64]
  43f0e0:	ldp	x27, x28, [sp, #80]
  43f0e4:	ldp	x29, x30, [sp], #96
  43f0e8:	b	402800 <__overflow@plt>
  43f0ec:	nop
  43f0f0:	stp	x29, x30, [sp, #-64]!
  43f0f4:	mov	x29, sp
  43f0f8:	stp	x21, x22, [sp, #32]
  43f0fc:	mov	x21, x0
  43f100:	ldr	w0, [x0, #24]
  43f104:	cmp	w0, #0x1
  43f108:	b.ls	43f208 <nftw@plt+0x3c688>  // b.plast
  43f10c:	mov	w22, #0xa                   	// #10
  43f110:	stp	x19, x20, [sp, #16]
  43f114:	mov	x19, x1
  43f118:	mov	w20, #0x1                   	// #1
  43f11c:	str	x23, [sp, #48]
  43f120:	mov	w23, #0x3a                  	// #58
  43f124:	b	43f180 <nftw@plt+0x3c600>
  43f128:	str	x2, [x19, #40]
  43f12c:	strb	w22, [x1]
  43f130:	mov	x1, x19
  43f134:	ldr	x0, [x21, #16]
  43f138:	ldr	x0, [x0, w20, uxtw #3]
  43f13c:	bl	402a50 <fputs_unlocked@plt>
  43f140:	ldp	x1, x0, [x19, #40]
  43f144:	add	x2, x1, #0x1
  43f148:	cmp	x1, x0
  43f14c:	b.cs	43f1c0 <nftw@plt+0x3c640>  // b.hs, b.nlast
  43f150:	str	x2, [x19, #40]
  43f154:	strb	w23, [x1]
  43f158:	ldp	x1, x0, [x19, #40]
  43f15c:	add	x2, x1, #0x1
  43f160:	cmp	x1, x0
  43f164:	b.cs	43f1e0 <nftw@plt+0x3c660>  // b.hs, b.nlast
  43f168:	str	x2, [x19, #40]
  43f16c:	add	w20, w20, #0x1
  43f170:	strb	w22, [x1]
  43f174:	ldr	w0, [x21, #24]
  43f178:	cmp	w0, w20
  43f17c:	b.ls	43f200 <nftw@plt+0x3c680>  // b.plast
  43f180:	ldp	x1, x0, [x19, #40]
  43f184:	add	x2, x1, #0x1
  43f188:	cmp	x1, x0
  43f18c:	b.cc	43f128 <nftw@plt+0x3c5a8>  // b.lo, b.ul, b.last
  43f190:	mov	w1, #0xa                   	// #10
  43f194:	mov	x0, x19
  43f198:	bl	402800 <__overflow@plt>
  43f19c:	ldr	x0, [x21, #16]
  43f1a0:	mov	x1, x19
  43f1a4:	ldr	x0, [x0, w20, uxtw #3]
  43f1a8:	bl	402a50 <fputs_unlocked@plt>
  43f1ac:	ldp	x1, x0, [x19, #40]
  43f1b0:	add	x2, x1, #0x1
  43f1b4:	cmp	x1, x0
  43f1b8:	b.cc	43f150 <nftw@plt+0x3c5d0>  // b.lo, b.ul, b.last
  43f1bc:	nop
  43f1c0:	mov	w1, #0x3a                  	// #58
  43f1c4:	mov	x0, x19
  43f1c8:	bl	402800 <__overflow@plt>
  43f1cc:	ldp	x1, x0, [x19, #40]
  43f1d0:	add	x2, x1, #0x1
  43f1d4:	cmp	x1, x0
  43f1d8:	b.cc	43f168 <nftw@plt+0x3c5e8>  // b.lo, b.ul, b.last
  43f1dc:	nop
  43f1e0:	mov	x0, x19
  43f1e4:	mov	w1, #0xa                   	// #10
  43f1e8:	bl	402800 <__overflow@plt>
  43f1ec:	add	w20, w20, #0x1
  43f1f0:	ldr	w0, [x21, #24]
  43f1f4:	cmp	w0, w20
  43f1f8:	b.hi	43f180 <nftw@plt+0x3c600>  // b.pmore
  43f1fc:	nop
  43f200:	ldp	x19, x20, [sp, #16]
  43f204:	ldr	x23, [sp, #48]
  43f208:	ldp	x21, x22, [sp, #32]
  43f20c:	ldp	x29, x30, [sp], #64
  43f210:	ret
  43f214:	nop
  43f218:	stp	x29, x30, [sp, #-64]!
  43f21c:	mov	x3, x1
  43f220:	mov	x2, #0x1                   	// #1
  43f224:	mov	x29, sp
  43f228:	stp	x19, x20, [sp, #16]
  43f22c:	mov	x20, x0
  43f230:	add	x0, x0, #0x18
  43f234:	stp	x21, x22, [sp, #32]
  43f238:	mov	x22, x1
  43f23c:	mov	x1, #0x4                   	// #4
  43f240:	bl	4024d0 <fwrite_unlocked@plt>
  43f244:	cmp	x0, #0x1
  43f248:	b.ne	43f2c0 <nftw@plt+0x3c740>  // b.any
  43f24c:	ldr	w0, [x20, #24]
  43f250:	mov	w19, #0x0                   	// #0
  43f254:	cbnz	w0, 43f280 <nftw@plt+0x3c700>
  43f258:	b	43f2d4 <nftw@plt+0x3c754>
  43f25c:	ldr	x0, [x20, #16]
  43f260:	ldr	x1, [sp, #56]
  43f264:	ldr	x0, [x0, x21, lsl #3]
  43f268:	bl	4024d0 <fwrite_unlocked@plt>
  43f26c:	cmp	x0, #0x1
  43f270:	b.ne	43f2c0 <nftw@plt+0x3c740>  // b.any
  43f274:	ldr	w0, [x20, #24]
  43f278:	cmp	w0, w19
  43f27c:	b.ls	43f2d4 <nftw@plt+0x3c754>  // b.plast
  43f280:	ldr	x0, [x20, #16]
  43f284:	mov	w21, w19
  43f288:	add	w19, w19, #0x1
  43f28c:	ldr	x0, [x0, x21, lsl #3]
  43f290:	bl	4024f0 <strlen@plt>
  43f294:	mov	x4, x0
  43f298:	mov	x3, x22
  43f29c:	mov	x2, #0x1                   	// #1
  43f2a0:	add	x0, sp, #0x38
  43f2a4:	mov	x1, #0x8                   	// #8
  43f2a8:	str	x4, [sp, #56]
  43f2ac:	bl	4024d0 <fwrite_unlocked@plt>
  43f2b0:	mov	x3, x22
  43f2b4:	mov	x2, x0
  43f2b8:	cmp	x0, #0x1
  43f2bc:	b.eq	43f25c <nftw@plt+0x3c6dc>  // b.none
  43f2c0:	mov	w0, #0xffffffff            	// #-1
  43f2c4:	ldp	x19, x20, [sp, #16]
  43f2c8:	ldp	x21, x22, [sp, #32]
  43f2cc:	ldp	x29, x30, [sp], #64
  43f2d0:	ret
  43f2d4:	mov	w0, #0x0                   	// #0
  43f2d8:	ldp	x19, x20, [sp, #16]
  43f2dc:	ldp	x21, x22, [sp, #32]
  43f2e0:	ldp	x29, x30, [sp], #64
  43f2e4:	ret
  43f2e8:	stp	x29, x30, [sp, #-96]!
  43f2ec:	mov	x3, x1
  43f2f0:	mov	x29, sp
  43f2f4:	stp	x21, x22, [sp, #32]
  43f2f8:	mov	x21, x1
  43f2fc:	mov	x22, x2
  43f300:	mov	x1, #0x1                   	// #1
  43f304:	mov	x2, #0x4                   	// #4
  43f308:	stp	x23, x24, [sp, #48]
  43f30c:	mov	x24, x0
  43f310:	add	x0, sp, #0x54
  43f314:	bl	402840 <fread_unlocked@plt>
  43f318:	cmp	x0, #0x4
  43f31c:	b.ne	43f4a4 <nftw@plt+0x3c924>  // b.any
  43f320:	mov	x0, #0x200                 	// #512
  43f324:	stp	x19, x20, [sp, #16]
  43f328:	bl	461560 <_obstack_memory_used@@Base+0x118>
  43f32c:	ldr	w1, [sp, #84]
  43f330:	mov	x19, x0
  43f334:	cbz	w1, 43f45c <nftw@plt+0x3c8dc>
  43f338:	mov	x23, #0x200                 	// #512
  43f33c:	mov	w20, #0x0                   	// #0
  43f340:	str	x25, [sp, #64]
  43f344:	b	43f38c <nftw@plt+0x3c80c>
  43f348:	mov	x1, #0x1                   	// #1
  43f34c:	mov	x3, x21
  43f350:	mov	x0, x19
  43f354:	bl	402840 <fread_unlocked@plt>
  43f358:	ldr	x1, [sp, #88]
  43f35c:	cmp	x0, x1
  43f360:	b.ne	43f3f0 <nftw@plt+0x3c870>  // b.any
  43f364:	strb	wzr, [x19, x0]
  43f368:	cbz	x22, 43f37c <nftw@plt+0x3c7fc>
  43f36c:	mov	x1, x22
  43f370:	mov	x0, x19
  43f374:	bl	45fb48 <nftw@plt+0x5cfc8>
  43f378:	cbnz	w0, 43f414 <nftw@plt+0x3c894>
  43f37c:	ldr	w0, [sp, #84]
  43f380:	add	w20, w20, #0x1
  43f384:	cmp	w0, w20
  43f388:	b.ls	43f458 <nftw@plt+0x3c8d8>  // b.plast
  43f38c:	mov	x3, x21
  43f390:	add	x0, sp, #0x58
  43f394:	mov	x2, #0x8                   	// #8
  43f398:	mov	x1, #0x1                   	// #1
  43f39c:	bl	402840 <fread_unlocked@plt>
  43f3a0:	cmp	x0, #0x8
  43f3a4:	b.ne	43f3f0 <nftw@plt+0x3c870>  // b.any
  43f3a8:	ldr	x2, [sp, #88]
  43f3ac:	add	x0, x2, #0x1
  43f3b0:	cmp	x0, x23
  43f3b4:	b.ls	43f348 <nftw@plt+0x3c7c8>  // b.plast
  43f3b8:	add	x23, x2, #0x80
  43f3bc:	mov	x0, x19
  43f3c0:	mov	x1, x23
  43f3c4:	bl	4615e8 <_obstack_memory_used@@Base+0x1a0>
  43f3c8:	ldr	x2, [sp, #88]
  43f3cc:	mov	x19, x0
  43f3d0:	mov	x1, #0x1                   	// #1
  43f3d4:	mov	x3, x21
  43f3d8:	mov	x0, x19
  43f3dc:	bl	402840 <fread_unlocked@plt>
  43f3e0:	ldr	x1, [sp, #88]
  43f3e4:	cmp	x0, x1
  43f3e8:	b.eq	43f364 <nftw@plt+0x3c7e4>  // b.none
  43f3ec:	nop
  43f3f0:	mov	x0, x19
  43f3f4:	bl	402910 <free@plt>
  43f3f8:	ldp	x19, x20, [sp, #16]
  43f3fc:	mov	w0, #0xffffffff            	// #-1
  43f400:	ldr	x25, [sp, #64]
  43f404:	ldp	x21, x22, [sp, #32]
  43f408:	ldp	x23, x24, [sp, #48]
  43f40c:	ldp	x29, x30, [sp], #96
  43f410:	ret
  43f414:	mov	x1, x19
  43f418:	mov	x0, x24
  43f41c:	bl	43e788 <nftw@plt+0x3bc08>
  43f420:	bl	43e880 <nftw@plt+0x3bd00>
  43f424:	mov	x25, x0
  43f428:	ldp	w1, w0, [x24, #24]
  43f42c:	cmp	w1, w0
  43f430:	b.eq	43f47c <nftw@plt+0x3c8fc>  // b.none
  43f434:	ldr	x0, [x24, #16]
  43f438:	add	w2, w1, #0x1
  43f43c:	str	w2, [x24, #24]
  43f440:	add	w20, w20, #0x1
  43f444:	str	x25, [x0, w1, uxtw #3]
  43f448:	ldr	w0, [sp, #84]
  43f44c:	cmp	w0, w20
  43f450:	b.hi	43f38c <nftw@plt+0x3c80c>  // b.pmore
  43f454:	nop
  43f458:	ldr	x25, [sp, #64]
  43f45c:	mov	x0, x19
  43f460:	bl	402910 <free@plt>
  43f464:	mov	w0, #0x0                   	// #0
  43f468:	ldp	x19, x20, [sp, #16]
  43f46c:	ldp	x21, x22, [sp, #32]
  43f470:	ldp	x23, x24, [sp, #48]
  43f474:	ldp	x29, x30, [sp], #96
  43f478:	ret
  43f47c:	add	w1, w1, #0x4
  43f480:	ldr	x0, [x24, #16]
  43f484:	lsl	w1, w1, #1
  43f488:	mov	x2, x1
  43f48c:	str	w2, [x24, #28]
  43f490:	lsl	x1, x1, #3
  43f494:	bl	4615e8 <_obstack_memory_used@@Base+0x1a0>
  43f498:	str	x0, [x24, #16]
  43f49c:	ldr	w1, [x24, #24]
  43f4a0:	b	43f438 <nftw@plt+0x3c8b8>
  43f4a4:	mov	w0, #0xffffffff            	// #-1
  43f4a8:	b	43f404 <nftw@plt+0x3c884>
  43f4ac:	nop
  43f4b0:	stp	x29, x30, [sp, #-48]!
  43f4b4:	mov	x1, #0x90                  	// #144
  43f4b8:	mov	x29, sp
  43f4bc:	stp	x19, x20, [sp, #16]
  43f4c0:	mov	w20, w0
  43f4c4:	mov	x0, #0x1                   	// #1
  43f4c8:	str	x21, [sp, #32]
  43f4cc:	bl	461598 <_obstack_memory_used@@Base+0x150>
  43f4d0:	adrp	x4, 402000 <memcpy@plt-0x490>
  43f4d4:	mov	x19, x0
  43f4d8:	add	x4, x4, #0x910
  43f4dc:	adrp	x3, 461000 <nftw@plt+0x5e480>
  43f4e0:	add	x3, x3, #0x560
  43f4e4:	mov	x2, #0x0                   	// #0
  43f4e8:	mov	w21, #0x1                   	// #1
  43f4ec:	mov	x1, #0x0                   	// #0
  43f4f0:	bl	461058 <_obstack_begin@@Base>
  43f4f4:	lsl	w20, w21, w20
  43f4f8:	mov	x1, #0x8                   	// #8
  43f4fc:	mov	w0, w20
  43f500:	str	xzr, [x19, #48]
  43f504:	bl	461598 <_obstack_memory_used@@Base+0x150>
  43f508:	mov	x1, x0
  43f50c:	mov	x0, x19
  43f510:	str	x1, [x19, #88]
  43f514:	str	w20, [x19, #112]
  43f518:	strb	w21, [x19, #136]
  43f51c:	ldp	x19, x20, [sp, #16]
  43f520:	ldr	x21, [sp, #32]
  43f524:	ldp	x29, x30, [sp], #48
  43f528:	ret
  43f52c:	nop
  43f530:	stp	x29, x30, [sp, #-32]!
  43f534:	mov	x1, #0x0                   	// #0
  43f538:	mov	x29, sp
  43f53c:	str	x19, [sp, #16]
  43f540:	mov	x19, x0
  43f544:	bl	461398 <_obstack_free@@Base>
  43f548:	ldrb	w0, [x19, #136]
  43f54c:	cbnz	w0, 43f560 <nftw@plt+0x3c9e0>
  43f550:	mov	x0, x19
  43f554:	ldr	x19, [sp, #16]
  43f558:	ldp	x29, x30, [sp], #32
  43f55c:	b	402910 <free@plt>
  43f560:	ldr	x0, [x19, #88]
  43f564:	bl	402910 <free@plt>
  43f568:	mov	x0, x19
  43f56c:	ldr	x19, [sp, #16]
  43f570:	ldp	x29, x30, [sp], #32
  43f574:	b	402910 <free@plt>
  43f578:	stp	x29, x30, [sp, #-128]!
  43f57c:	mov	x29, sp
  43f580:	ldr	w8, [x0, #112]
  43f584:	stp	x23, x24, [sp, #48]
  43f588:	mov	x23, x2
  43f58c:	sub	w24, w8, #0x1
  43f590:	stp	x27, x28, [sp, #80]
  43f594:	mov	w27, w3
  43f598:	ldr	x28, [x0, #88]
  43f59c:	stp	x25, x26, [sp, #64]
  43f5a0:	and	w25, w24, w3
  43f5a4:	stp	x21, x22, [sp, #32]
  43f5a8:	mov	x22, x0
  43f5ac:	ldr	w0, [x0, #128]
  43f5b0:	stp	x19, x20, [sp, #16]
  43f5b4:	and	w19, w24, w3
  43f5b8:	add	w0, w0, #0x1
  43f5bc:	ldr	x20, [x28, x25, lsl #3]
  43f5c0:	str	x1, [sp, #104]
  43f5c4:	str	w0, [x22, #128]
  43f5c8:	cbz	x20, 43f7e4 <nftw@plt+0x3cc64>
  43f5cc:	cmn	x20, #0x1
  43f5d0:	b.eq	43f780 <nftw@plt+0x3cc00>  // b.none
  43f5d4:	ldr	w0, [x20, #12]
  43f5d8:	mov	w3, w8
  43f5dc:	cmp	w0, w27
  43f5e0:	b.eq	43f8bc <nftw@plt+0x3cd3c>  // b.none
  43f5e4:	add	w26, w27, w27, lsl #4
  43f5e8:	ldr	w21, [x22, #132]
  43f5ec:	and	w26, w26, w24
  43f5f0:	orr	w26, w26, #0x1
  43f5f4:	add	w0, w21, #0x1
  43f5f8:	add	w5, w19, w26
  43f5fc:	str	w0, [x22, #132]
  43f600:	and	w0, w24, w5
  43f604:	and	w19, w24, w5
  43f608:	lsl	x25, x0, #3
  43f60c:	ldr	x20, [x28, x0, lsl #3]
  43f610:	cbz	x20, 43f678 <nftw@plt+0x3caf8>
  43f614:	add	w21, w21, #0x2
  43f618:	b	43f648 <nftw@plt+0x3cac8>
  43f61c:	ldr	w0, [x20, #12]
  43f620:	cmp	w0, w27
  43f624:	b.eq	43f788 <nftw@plt+0x3cc08>  // b.none
  43f628:	add	w5, w26, w19
  43f62c:	and	w6, w24, w5
  43f630:	and	w19, w24, w5
  43f634:	lsl	x25, x6, #3
  43f638:	ldr	x20, [x28, x6, lsl #3]
  43f63c:	str	w21, [x22, #132]
  43f640:	add	w21, w21, #0x1
  43f644:	cbz	x20, 43f678 <nftw@plt+0x3caf8>
  43f648:	cmn	x20, #0x1
  43f64c:	b.ne	43f61c <nftw@plt+0x3ca9c>  // b.any
  43f650:	add	w5, w26, w19
  43f654:	cmp	w8, w3
  43f658:	and	w6, w24, w5
  43f65c:	csel	w3, w3, w19, eq  // eq = none
  43f660:	and	w19, w24, w5
  43f664:	lsl	x25, x6, #3
  43f668:	ldr	x20, [x28, x6, lsl #3]
  43f66c:	str	w21, [x22, #132]
  43f670:	add	w21, w21, #0x1
  43f674:	cbnz	x20, 43f648 <nftw@plt+0x3cac8>
  43f678:	cbz	w4, 43f7ec <nftw@plt+0x3cc6c>
  43f67c:	cmp	w8, w3
  43f680:	ubfiz	x3, x3, #3, #32
  43f684:	csel	x25, x3, x25, ne  // ne = any
  43f688:	ldr	x1, [x22, #96]
  43f68c:	mov	x0, x22
  43f690:	blr	x1
  43f694:	mov	x20, x0
  43f698:	ldr	x1, [x22, #88]
  43f69c:	add	x0, x23, #0x1
  43f6a0:	ldr	x2, [x22, #104]
  43f6a4:	str	x20, [x1, x25]
  43f6a8:	stp	w23, w27, [x20, #8]
  43f6ac:	cbz	x2, 43f810 <nftw@plt+0x3cc90>
  43f6b0:	blr	x2
  43f6b4:	mov	x19, x0
  43f6b8:	ldr	x1, [sp, #104]
  43f6bc:	mov	x2, x23
  43f6c0:	bl	402490 <memcpy@plt>
  43f6c4:	strb	wzr, [x19, x23]
  43f6c8:	str	x19, [x20]
  43f6cc:	ldp	w0, w1, [x22, #112]
  43f6d0:	add	w1, w1, #0x1
  43f6d4:	str	w1, [x22, #116]
  43f6d8:	lsl	w21, w0, #1
  43f6dc:	add	w0, w21, w0
  43f6e0:	cmp	w0, w1, lsl #2
  43f6e4:	b.hi	43f760 <nftw@plt+0x3cbe0>  // b.pmore
  43f6e8:	mov	w0, w21
  43f6ec:	mov	x1, #0x8                   	// #8
  43f6f0:	bl	461598 <_obstack_memory_used@@Base+0x150>
  43f6f4:	mov	x19, x0
  43f6f8:	ldr	x9, [x22, #88]
  43f6fc:	sub	w3, w21, #0x1
  43f700:	ldr	w8, [x22, #112]
  43f704:	mov	x5, x9
  43f708:	add	x8, x9, x8, lsl #3
  43f70c:	nop
  43f710:	ldr	x7, [x5]
  43f714:	sub	x1, x7, #0x1
  43f718:	cmn	x1, #0x3
  43f71c:	b.hi	43f73c <nftw@plt+0x3cbbc>  // b.pmore
  43f720:	ldr	w2, [x7, #12]
  43f724:	and	w4, w3, w2
  43f728:	and	w1, w3, w2
  43f72c:	add	x6, x19, x4, lsl #3
  43f730:	ldr	x4, [x19, x4, lsl #3]
  43f734:	cbnz	x4, 43f7bc <nftw@plt+0x3cc3c>
  43f738:	str	x7, [x6]
  43f73c:	add	x5, x5, #0x8
  43f740:	cmp	x8, x5
  43f744:	b.hi	43f710 <nftw@plt+0x3cb90>  // b.pmore
  43f748:	ldrb	w0, [x22, #136]
  43f74c:	cbnz	w0, 43f88c <nftw@plt+0x3cd0c>
  43f750:	mov	w0, #0x1                   	// #1
  43f754:	str	x19, [x22, #88]
  43f758:	str	w21, [x22, #112]
  43f75c:	strb	w0, [x22, #136]
  43f760:	mov	x0, x20
  43f764:	ldp	x19, x20, [sp, #16]
  43f768:	ldp	x21, x22, [sp, #32]
  43f76c:	ldp	x23, x24, [sp, #48]
  43f770:	ldp	x25, x26, [sp, #64]
  43f774:	ldp	x27, x28, [sp, #80]
  43f778:	ldp	x29, x30, [sp], #128
  43f77c:	ret
  43f780:	mov	w3, w19
  43f784:	b	43f5e4 <nftw@plt+0x3ca64>
  43f788:	ldr	w0, [x20, #8]
  43f78c:	cmp	w0, w23
  43f790:	b.ne	43f628 <nftw@plt+0x3caa8>  // b.any
  43f794:	ldr	x0, [x20]
  43f798:	mov	x2, x23
  43f79c:	ldr	x1, [sp, #104]
  43f7a0:	stp	w8, w3, [sp, #116]
  43f7a4:	str	w4, [sp, #124]
  43f7a8:	bl	402850 <memcmp@plt>
  43f7ac:	ldp	w8, w3, [sp, #116]
  43f7b0:	ldr	w4, [sp, #124]
  43f7b4:	cbnz	w0, 43f628 <nftw@plt+0x3caa8>
  43f7b8:	b	43f760 <nftw@plt+0x3cbe0>
  43f7bc:	add	w2, w2, w2, lsl #4
  43f7c0:	and	w4, w2, w3
  43f7c4:	orr	w4, w4, #0x1
  43f7c8:	add	w1, w4, w1
  43f7cc:	and	w2, w3, w1
  43f7d0:	and	w1, w3, w1
  43f7d4:	add	x6, x19, x2, lsl #3
  43f7d8:	ldr	x2, [x19, x2, lsl #3]
  43f7dc:	cbnz	x2, 43f7c8 <nftw@plt+0x3cc48>
  43f7e0:	b	43f738 <nftw@plt+0x3cbb8>
  43f7e4:	lsl	x25, x25, #3
  43f7e8:	cbnz	w4, 43f688 <nftw@plt+0x3cb08>
  43f7ec:	mov	x20, #0x0                   	// #0
  43f7f0:	mov	x0, x20
  43f7f4:	ldp	x19, x20, [sp, #16]
  43f7f8:	ldp	x21, x22, [sp, #32]
  43f7fc:	ldp	x23, x24, [sp, #48]
  43f800:	ldp	x25, x26, [sp, #64]
  43f804:	ldp	x27, x28, [sp, #80]
  43f808:	ldp	x29, x30, [sp], #128
  43f80c:	ret
  43f810:	ldp	x2, x1, [x22, #24]
  43f814:	sub	x1, x1, x2
  43f818:	cmp	x1, x0
  43f81c:	b.cc	43f898 <nftw@plt+0x3cd18>  // b.lo, b.ul, b.last
  43f820:	ldr	x1, [sp, #104]
  43f824:	mov	x0, x2
  43f828:	mov	x2, x23
  43f82c:	bl	402490 <memcpy@plt>
  43f830:	ldr	x1, [x22, #24]
  43f834:	add	x0, x1, x23
  43f838:	add	x0, x0, #0x1
  43f83c:	str	x0, [x22, #24]
  43f840:	strb	wzr, [x1, x23]
  43f844:	ldp	x3, x2, [x22, #16]
  43f848:	cmp	x2, x3
  43f84c:	b.eq	43f8ac <nftw@plt+0x3cd2c>  // b.none
  43f850:	ldr	x0, [x22, #48]
  43f854:	ldr	x1, [x22, #8]
  43f858:	add	x2, x2, x0
  43f85c:	ldr	x4, [x22, #32]
  43f860:	bic	x0, x2, x0
  43f864:	str	x0, [x22, #24]
  43f868:	sub	x2, x0, x1
  43f86c:	sub	x1, x4, x1
  43f870:	cmp	x2, x1
  43f874:	b.ls	43f880 <nftw@plt+0x3cd00>  // b.plast
  43f878:	mov	x0, x4
  43f87c:	str	x4, [x22, #24]
  43f880:	str	x0, [x22, #16]
  43f884:	str	x3, [x20]
  43f888:	b	43f6cc <nftw@plt+0x3cb4c>
  43f88c:	mov	x0, x9
  43f890:	bl	402910 <free@plt>
  43f894:	b	43f750 <nftw@plt+0x3cbd0>
  43f898:	mov	x1, x0
  43f89c:	mov	x0, x22
  43f8a0:	bl	461200 <_obstack_newchunk@@Base>
  43f8a4:	ldr	x2, [x22, #24]
  43f8a8:	b	43f820 <nftw@plt+0x3cca0>
  43f8ac:	ldrb	w0, [x22, #80]
  43f8b0:	orr	w0, w0, #0x2
  43f8b4:	strb	w0, [x22, #80]
  43f8b8:	b	43f850 <nftw@plt+0x3ccd0>
  43f8bc:	ldr	w0, [x20, #8]
  43f8c0:	cmp	w0, w2
  43f8c4:	b.ne	43f5e4 <nftw@plt+0x3ca64>  // b.any
  43f8c8:	ldr	x0, [x20]
  43f8cc:	stp	w8, w4, [sp, #116]
  43f8d0:	bl	402850 <memcmp@plt>
  43f8d4:	cbz	w0, 43f760 <nftw@plt+0x3cbe0>
  43f8d8:	ldp	w8, w4, [sp, #116]
  43f8dc:	mov	w3, w8
  43f8e0:	b	43f5e4 <nftw@plt+0x3ca64>
  43f8e4:	nop
  43f8e8:	mov	w4, w3
  43f8ec:	cbz	x2, 43f920 <nftw@plt+0x3cda0>
  43f8f0:	add	x9, x1, x2
  43f8f4:	mov	x6, x1
  43f8f8:	mov	w5, #0x0                   	// #0
  43f8fc:	mov	w8, #0x43                  	// #67
  43f900:	mul	w5, w5, w8
  43f904:	ldrb	w7, [x6], #1
  43f908:	sub	w5, w5, #0x71
  43f90c:	cmp	x6, x9
  43f910:	add	w5, w7, w5
  43f914:	b.ne	43f900 <nftw@plt+0x3cd80>  // b.any
  43f918:	add	w3, w5, w2
  43f91c:	b	43f578 <nftw@plt+0x3c9f8>
  43f920:	mov	w5, #0x0                   	// #0
  43f924:	add	w3, w5, w2
  43f928:	b	43f578 <nftw@plt+0x3c9f8>
  43f92c:	nop
  43f930:	stp	x29, x30, [sp, #-64]!
  43f934:	mov	x29, sp
  43f938:	stp	x19, x20, [sp, #16]
  43f93c:	mov	x20, x2
  43f940:	ldr	x19, [x0, #88]
  43f944:	stp	x21, x22, [sp, #32]
  43f948:	ldr	w21, [x0, #112]
  43f94c:	mov	x22, x0
  43f950:	str	x23, [sp, #48]
  43f954:	mov	x23, x1
  43f958:	add	x21, x19, x21, lsl #3
  43f95c:	nop
  43f960:	ldr	x1, [x19]
  43f964:	mov	x2, x20
  43f968:	add	x19, x19, #0x8
  43f96c:	sub	x3, x1, #0x1
  43f970:	cmn	x3, #0x3
  43f974:	b.hi	43f984 <nftw@plt+0x3ce04>  // b.pmore
  43f978:	ldr	x0, [x22, #120]
  43f97c:	blr	x23
  43f980:	cbz	w0, 43f98c <nftw@plt+0x3ce0c>
  43f984:	cmp	x21, x19
  43f988:	b.hi	43f960 <nftw@plt+0x3cde0>  // b.pmore
  43f98c:	ldp	x19, x20, [sp, #16]
  43f990:	ldp	x21, x22, [sp, #32]
  43f994:	ldr	x23, [sp, #48]
  43f998:	ldp	x29, x30, [sp], #64
  43f99c:	ret
  43f9a0:	stp	x29, x30, [sp, #-64]!
  43f9a4:	mov	x29, sp
  43f9a8:	stp	x19, x20, [sp, #16]
  43f9ac:	ldr	w20, [x0, #112]
  43f9b0:	ldr	x19, [x0, #88]
  43f9b4:	stp	x21, x22, [sp, #32]
  43f9b8:	mov	x22, x0
  43f9bc:	mov	x21, x2
  43f9c0:	stp	x23, x24, [sp, #48]
  43f9c4:	add	x20, x19, x20, lsl #3
  43f9c8:	mov	x23, x1
  43f9cc:	mov	x24, #0xffffffffffffffff    	// #-1
  43f9d0:	ldr	x1, [x19]
  43f9d4:	mov	x2, x21
  43f9d8:	sub	x3, x1, #0x1
  43f9dc:	cmn	x3, #0x3
  43f9e0:	b.hi	43f9f4 <nftw@plt+0x3ce74>  // b.pmore
  43f9e4:	ldr	x0, [x22, #120]
  43f9e8:	blr	x23
  43f9ec:	cbz	w0, 43f9f4 <nftw@plt+0x3ce74>
  43f9f0:	str	x24, [x19]
  43f9f4:	add	x19, x19, #0x8
  43f9f8:	cmp	x20, x19
  43f9fc:	b.hi	43f9d0 <nftw@plt+0x3ce50>  // b.pmore
  43fa00:	ldp	x19, x20, [sp, #16]
  43fa04:	ldp	x21, x22, [sp, #32]
  43fa08:	ldp	x23, x24, [sp, #48]
  43fa0c:	ldp	x29, x30, [sp], #64
  43fa10:	ret
  43fa14:	nop
  43fa18:	stp	x29, x30, [sp, #-64]!
  43fa1c:	mov	x29, sp
  43fa20:	stp	x19, x20, [sp, #16]
  43fa24:	mov	x19, x0
  43fa28:	ldrb	w0, [x0, #136]
  43fa2c:	stp	x21, x22, [sp, #32]
  43fa30:	mov	w20, w3
  43fa34:	mov	x22, x1
  43fa38:	str	x23, [sp, #48]
  43fa3c:	mov	w21, w2
  43fa40:	and	w23, w4, #0xff
  43fa44:	cbnz	w0, 43fa68 <nftw@plt+0x3cee8>
  43fa48:	strb	w23, [x19, #136]
  43fa4c:	ldr	x23, [sp, #48]
  43fa50:	str	x22, [x19, #88]
  43fa54:	stp	w21, w20, [x19, #112]
  43fa58:	ldp	x19, x20, [sp, #16]
  43fa5c:	ldp	x21, x22, [sp, #32]
  43fa60:	ldp	x29, x30, [sp], #64
  43fa64:	ret
  43fa68:	ldr	x0, [x19, #88]
  43fa6c:	bl	402910 <free@plt>
  43fa70:	strb	w23, [x19, #136]
  43fa74:	ldr	x23, [sp, #48]
  43fa78:	str	x22, [x19, #88]
  43fa7c:	stp	w21, w20, [x19, #112]
  43fa80:	ldp	x19, x20, [sp, #16]
  43fa84:	ldp	x21, x22, [sp, #32]
  43fa88:	ldp	x29, x30, [sp], #64
  43fa8c:	ret
  43fa90:	stp	x29, x30, [sp, #-112]!
  43fa94:	mov	x29, sp
  43fa98:	stp	x23, x24, [sp, #48]
  43fa9c:	ldr	w24, [x0, #112]
  43faa0:	ldr	x1, [x0, #88]
  43faa4:	stp	x19, x20, [sp, #16]
  43faa8:	lsl	x24, x24, #3
  43faac:	mov	x20, #0x0                   	// #0
  43fab0:	mov	x19, #0x0                   	// #0
  43fab4:	stp	x21, x22, [sp, #32]
  43fab8:	mov	x22, x0
  43fabc:	mov	x21, #0x0                   	// #0
  43fac0:	add	x0, x1, x24
  43fac4:	stp	x25, x26, [sp, #64]
  43fac8:	mov	x25, #0x0                   	// #0
  43facc:	stp	d8, d9, [sp, #80]
  43fad0:	movi	d8, #0x0
  43fad4:	str	d10, [sp, #96]
  43fad8:	b	43fb0c <nftw@plt+0x3cf8c>
  43fadc:	cbz	x2, 43fb00 <nftw@plt+0x3cf80>
  43fae0:	ldr	w2, [x2, #8]
  43fae4:	add	x21, x21, #0x1
  43fae8:	mov	w3, w2
  43faec:	ucvtf	d0, w2
  43faf0:	cmp	x20, x3
  43faf4:	csel	x20, x20, x3, cs  // cs = hs, nlast
  43faf8:	add	x19, x19, x3
  43fafc:	fmadd	d8, d0, d0, d8
  43fb00:	add	x1, x1, #0x8
  43fb04:	cmp	x0, x1
  43fb08:	b.ls	43fb28 <nftw@plt+0x3cfa8>  // b.plast
  43fb0c:	ldr	x2, [x1]
  43fb10:	cmn	x2, #0x1
  43fb14:	b.ne	43fadc <nftw@plt+0x3cf5c>  // b.any
  43fb18:	add	x1, x1, #0x8
  43fb1c:	add	x25, x25, #0x1
  43fb20:	cmp	x0, x1
  43fb24:	b.hi	43fb0c <nftw@plt+0x3cf8c>  // b.pmore
  43fb28:	adrp	x23, 4a4000 <_obstack_memory_used@@Base+0x42bb8>
  43fb2c:	ldr	w26, [x22, #116]
  43fb30:	adrp	x2, 47e000 <_obstack_memory_used@@Base+0x1cbb8>
  43fb34:	adrp	x1, 47e000 <_obstack_memory_used@@Base+0x1cbb8>
  43fb38:	ldr	x0, [x23, #1392]
  43fb3c:	add	x2, x2, #0x668
  43fb40:	add	x1, x1, #0x678
  43fb44:	mov	w3, w26
  43fb48:	bl	402b30 <fprintf@plt>
  43fb4c:	ucvtf	d0, x21
  43fb50:	mov	x0, #0x4059000000000000    	// #4636737291354636288
  43fb54:	fmov	d1, x0
  43fb58:	ucvtf	d10, w26
  43fb5c:	ldr	x0, [x23, #1392]
  43fb60:	mov	x3, x21
  43fb64:	fmul	d0, d0, d1
  43fb68:	adrp	x2, 47e000 <_obstack_memory_used@@Base+0x1cbb8>
  43fb6c:	adrp	x1, 47e000 <_obstack_memory_used@@Base+0x1cbb8>
  43fb70:	add	x2, x2, #0x690
  43fb74:	add	x1, x1, #0x6a0
  43fb78:	adrp	x21, 47e000 <_obstack_memory_used@@Base+0x1cbb8>
  43fb7c:	add	x21, x21, #0x6c0
  43fb80:	fdiv	d0, d0, d10
  43fb84:	bl	402b30 <fprintf@plt>
  43fb88:	ldr	w3, [x22, #112]
  43fb8c:	mov	x1, x21
  43fb90:	ldr	x0, [x23, #1392]
  43fb94:	adrp	x2, 47e000 <_obstack_memory_used@@Base+0x1cbb8>
  43fb98:	add	x2, x2, #0x6b8
  43fb9c:	bl	402b30 <fprintf@plt>
  43fba0:	ldr	x0, [x23, #1392]
  43fba4:	mov	x3, x25
  43fba8:	mov	x1, x21
  43fbac:	adrp	x2, 47e000 <_obstack_memory_used@@Base+0x1cbb8>
  43fbb0:	add	x2, x2, #0x6d0
  43fbb4:	bl	402b30 <fprintf@plt>
  43fbb8:	ldr	x0, [x22, #104]
  43fbbc:	cbz	x0, 43fd2c <nftw@plt+0x3d1ac>
  43fbc0:	mov	x0, #0x27ff                	// #10239
  43fbc4:	cmp	x19, x0
  43fbc8:	ldr	x0, [x23, #1392]
  43fbcc:	b.hi	43fd14 <nftw@plt+0x3d194>  // b.pmore
  43fbd0:	mov	x3, x19
  43fbd4:	mov	w4, #0x20                  	// #32
  43fbd8:	adrp	x25, 47e000 <_obstack_memory_used@@Base+0x1cbb8>
  43fbdc:	add	x25, x25, #0x6f0
  43fbe0:	adrp	x2, 47e000 <_obstack_memory_used@@Base+0x1cbb8>
  43fbe4:	mov	x1, x25
  43fbe8:	add	x2, x2, #0x6e0
  43fbec:	bl	402b30 <fprintf@plt>
  43fbf0:	mov	x0, #0x27ff                	// #10239
  43fbf4:	mov	w4, #0x20                  	// #32
  43fbf8:	cmp	x24, x0
  43fbfc:	ldr	x0, [x23, #1392]
  43fc00:	b.ls	43fc18 <nftw@plt+0x3d098>  // b.plast
  43fc04:	mov	w1, #0x9fffff              	// #10485759
  43fc08:	cmp	x24, x1
  43fc0c:	b.hi	43fd94 <nftw@plt+0x3d214>  // b.pmore
  43fc10:	lsr	x24, x24, #10
  43fc14:	mov	w4, #0x6b                  	// #107
  43fc18:	mov	x3, x24
  43fc1c:	mov	x1, x25
  43fc20:	adrp	x2, 47e000 <_obstack_memory_used@@Base+0x1cbb8>
  43fc24:	add	x2, x2, #0x730
  43fc28:	bl	402b30 <fprintf@plt>
  43fc2c:	ldp	w1, w2, [x22, #128]
  43fc30:	ucvtf	d9, x19
  43fc34:	ldr	x0, [x23, #1392]
  43fc38:	ucvtf	d1, w2
  43fc3c:	ucvtf	d0, w1
  43fc40:	adrp	x19, 47e000 <_obstack_memory_used@@Base+0x1cbb8>
  43fc44:	fdiv	d9, d9, d10
  43fc48:	add	x19, x19, #0x750
  43fc4c:	mov	x1, x19
  43fc50:	adrp	x2, 47e000 <_obstack_memory_used@@Base+0x1cbb8>
  43fc54:	add	x2, x2, #0x740
  43fc58:	fdiv	d0, d1, d0
  43fc5c:	bl	402b30 <fprintf@plt>
  43fc60:	ldr	w2, [x22, #128]
  43fc64:	mov	x1, x19
  43fc68:	ldr	x0, [x23, #1392]
  43fc6c:	ucvtf	d0, w2
  43fc70:	adrp	x2, 47e000 <_obstack_memory_used@@Base+0x1cbb8>
  43fc74:	add	x2, x2, #0x760
  43fc78:	fdiv	d0, d10, d0
  43fc7c:	bl	402b30 <fprintf@plt>
  43fc80:	fdiv	d8, d8, d10
  43fc84:	ldr	x0, [x23, #1392]
  43fc88:	fmsub	d8, d9, d9, d8
  43fc8c:	fcmpe	d8, #0.0
  43fc90:	b.mi	43fddc <nftw@plt+0x3d25c>  // b.first
  43fc94:	fcmp	d8, #0.0
  43fc98:	movi	d1, #0x0
  43fc9c:	b.eq	43fcc8 <nftw@plt+0x3d148>  // b.none
  43fca0:	adrp	x1, 47e000 <_obstack_memory_used@@Base+0x1cbb8>
  43fca4:	fmov	d1, d8
  43fca8:	ldr	d3, [x1, #2008]
  43fcac:	nop
  43fcb0:	fnmsub	d0, d1, d1, d8
  43fcb4:	fadd	d2, d1, d1
  43fcb8:	fdiv	d0, d0, d2
  43fcbc:	fcmpe	d0, d3
  43fcc0:	fsub	d1, d1, d0
  43fcc4:	b.gt	43fcb0 <nftw@plt+0x3d130>
  43fcc8:	fmov	d0, d9
  43fccc:	adrp	x2, 47e000 <_obstack_memory_used@@Base+0x1cbb8>
  43fcd0:	adrp	x1, 47e000 <_obstack_memory_used@@Base+0x1cbb8>
  43fcd4:	add	x2, x2, #0x798
  43fcd8:	add	x1, x1, #0x7a8
  43fcdc:	bl	402b30 <fprintf@plt>
  43fce0:	ldr	x0, [x23, #1392]
  43fce4:	mov	x3, x20
  43fce8:	mov	x1, x21
  43fcec:	ldr	d10, [sp, #96]
  43fcf0:	ldp	x19, x20, [sp, #16]
  43fcf4:	adrp	x2, 47e000 <_obstack_memory_used@@Base+0x1cbb8>
  43fcf8:	ldp	x21, x22, [sp, #32]
  43fcfc:	add	x2, x2, #0x7c8
  43fd00:	ldp	x23, x24, [sp, #48]
  43fd04:	ldp	x25, x26, [sp, #64]
  43fd08:	ldp	d8, d9, [sp, #80]
  43fd0c:	ldp	x29, x30, [sp], #112
  43fd10:	b	402b30 <fprintf@plt>
  43fd14:	mov	w1, #0x9fffff              	// #10485759
  43fd18:	cmp	x19, x1
  43fd1c:	b.hi	43fda0 <nftw@plt+0x3d220>  // b.pmore
  43fd20:	lsr	x3, x19, #10
  43fd24:	mov	w4, #0x6b                  	// #107
  43fd28:	b	43fbd8 <nftw@plt+0x3d058>
  43fd2c:	mov	x0, x22
  43fd30:	bl	461448 <_obstack_memory_used@@Base>
  43fd34:	mov	x1, #0x27ff                	// #10239
  43fd38:	sub	x5, x0, x19
  43fd3c:	cmp	x19, x1
  43fd40:	ldr	x0, [x23, #1392]
  43fd44:	b.hi	43fdac <nftw@plt+0x3d22c>  // b.pmore
  43fd48:	mov	x3, x19
  43fd4c:	mov	w4, #0x20                  	// #32
  43fd50:	mov	x1, #0x27ff                	// #10239
  43fd54:	mov	w6, #0x20                  	// #32
  43fd58:	cmp	x5, x1
  43fd5c:	b.ls	43fd74 <nftw@plt+0x3d1f4>  // b.plast
  43fd60:	mov	w1, #0x9fffff              	// #10485759
  43fd64:	cmp	x5, x1
  43fd68:	b.hi	43fdc4 <nftw@plt+0x3d244>  // b.pmore
  43fd6c:	lsr	x5, x5, #10
  43fd70:	mov	w6, #0x6b                  	// #107
  43fd74:	adrp	x2, 47e000 <_obstack_memory_used@@Base+0x1cbb8>
  43fd78:	adrp	x1, 47e000 <_obstack_memory_used@@Base+0x1cbb8>
  43fd7c:	add	x2, x2, #0x700
  43fd80:	add	x1, x1, #0x710
  43fd84:	adrp	x25, 47e000 <_obstack_memory_used@@Base+0x1cbb8>
  43fd88:	bl	402b30 <fprintf@plt>
  43fd8c:	add	x25, x25, #0x6f0
  43fd90:	b	43fbf0 <nftw@plt+0x3d070>
  43fd94:	lsr	x24, x24, #20
  43fd98:	mov	w4, #0x4d                  	// #77
  43fd9c:	b	43fc18 <nftw@plt+0x3d098>
  43fda0:	lsr	x3, x19, #20
  43fda4:	mov	w4, #0x4d                  	// #77
  43fda8:	b	43fbd8 <nftw@plt+0x3d058>
  43fdac:	mov	w1, #0x9fffff              	// #10485759
  43fdb0:	cmp	x19, x1
  43fdb4:	b.hi	43fdd0 <nftw@plt+0x3d250>  // b.pmore
  43fdb8:	lsr	x3, x19, #10
  43fdbc:	mov	w4, #0x6b                  	// #107
  43fdc0:	b	43fd50 <nftw@plt+0x3d1d0>
  43fdc4:	lsr	x5, x5, #20
  43fdc8:	mov	w6, #0x4d                  	// #77
  43fdcc:	b	43fd74 <nftw@plt+0x3d1f4>
  43fdd0:	lsr	x3, x19, #20
  43fdd4:	mov	w4, #0x4d                  	// #77
  43fdd8:	b	43fd50 <nftw@plt+0x3d1d0>
  43fddc:	adrp	x2, 47e000 <_obstack_memory_used@@Base+0x1cbb8>
  43fde0:	adrp	x0, 47e000 <_obstack_memory_used@@Base+0x1cbb8>
  43fde4:	add	x2, x2, #0x770
  43fde8:	add	x0, x0, #0x780
  43fdec:	mov	w1, #0x165                 	// #357
  43fdf0:	bl	402bf0 <nftw@plt+0x70>
  43fdf4:	nop
  43fdf8:	stp	x29, x30, [sp, #-80]!
  43fdfc:	mov	x29, sp
  43fe00:	stp	x19, x20, [sp, #16]
  43fe04:	mov	x20, x1
  43fe08:	mov	x19, x0
  43fe0c:	ldr	x1, [x0, #136]
  43fe10:	stp	x21, x22, [sp, #32]
  43fe14:	mov	w22, w2
  43fe18:	ldr	x2, [x0, #40]
  43fe1c:	ldr	x21, [x0]
  43fe20:	ldr	x1, [x1, #8]
  43fe24:	ldr	w2, [x2, #60]
  43fe28:	str	x23, [sp, #48]
  43fe2c:	str	x20, [x21]
  43fe30:	cbz	x1, 43ff8c <nftw@plt+0x3d40c>
  43fe34:	ldrb	w0, [x20, #1]
  43fe38:	cmp	w0, #0x2f
  43fe3c:	cinc	x5, x20, eq  // eq = none
  43fe40:	add	x5, x5, #0x1
  43fe44:	mov	x3, x5
  43fe48:	ldrb	w4, [x3], #1
  43fe4c:	cmp	w4, #0x2f
  43fe50:	b.eq	43fe74 <nftw@plt+0x3d2f4>  // b.none
  43fe54:	nop
  43fe58:	cmp	w4, #0xa
  43fe5c:	b.eq	43febc <nftw@plt+0x3d33c>  // b.none
  43fe60:	mov	x5, x3
  43fe64:	mov	x3, x5
  43fe68:	ldrb	w4, [x3], #1
  43fe6c:	cmp	w4, #0x2f
  43fe70:	b.ne	43fe58 <nftw@plt+0x3d2d8>  // b.any
  43fe74:	ldurb	w0, [x3, #-2]
  43fe78:	cmp	w0, #0x2a
  43fe7c:	b.ne	43fe60 <nftw@plt+0x3d2e0>  // b.any
  43fe80:	str	x3, [x21]
  43fe84:	mov	w23, #0x0                   	// #0
  43fe88:	ldr	x0, [x19, #1328]
  43fe8c:	ldrb	w1, [x19, #16]
  43fe90:	cbnz	w1, 43fee8 <nftw@plt+0x3d368>
  43fe94:	ldrb	w1, [x19, #1123]
  43fe98:	cbz	w1, 43fef4 <nftw@plt+0x3d374>
  43fe9c:	sub	x0, x0, #0x1
  43fea0:	str	x0, [x19, #1328]
  43fea4:	ldr	x0, [x21]
  43fea8:	ldp	x19, x20, [sp, #16]
  43feac:	ldp	x21, x22, [sp, #32]
  43feb0:	ldr	x23, [sp, #48]
  43feb4:	ldp	x29, x30, [sp], #80
  43feb8:	ret
  43febc:	str	x5, [x21]
  43fec0:	adrp	x4, 47c000 <_obstack_memory_used@@Base+0x1abb8>
  43fec4:	mov	x0, x19
  43fec8:	add	x4, x4, #0xea0
  43fecc:	mov	w23, #0x1                   	// #1
  43fed0:	mov	w3, #0x0                   	// #0
  43fed4:	mov	w1, #0x3                   	// #3
  43fed8:	bl	4275f8 <nftw@plt+0x24a78>
  43fedc:	ldrb	w1, [x19, #16]
  43fee0:	ldr	x0, [x19, #1328]
  43fee4:	cbz	w1, 43fe94 <nftw@plt+0x3d314>
  43fee8:	cbz	w22, 43ff50 <nftw@plt+0x3d3d0>
  43feec:	ldrb	w1, [x19, #1124]
  43fef0:	cbnz	w1, 43fe9c <nftw@plt+0x3d31c>
  43fef4:	ldr	x2, [x21]
  43fef8:	mov	x1, x20
  43fefc:	sub	x20, x2, x20
  43ff00:	mov	x2, x20
  43ff04:	bl	402490 <memcpy@plt>
  43ff08:	ldr	x1, [x19, #1328]
  43ff0c:	add	x0, x1, x20
  43ff10:	cbz	w23, 43ff70 <nftw@plt+0x3d3f0>
  43ff14:	add	x0, x0, #0x1
  43ff18:	str	x0, [x19, #1328]
  43ff1c:	mov	w0, #0x2a                  	// #42
  43ff20:	strb	w0, [x1, x20]
  43ff24:	mov	w1, #0x2f                  	// #47
  43ff28:	ldr	x0, [x19, #1328]
  43ff2c:	add	x2, x0, #0x1
  43ff30:	str	x2, [x19, #1328]
  43ff34:	strb	w1, [x0]
  43ff38:	ldr	x0, [x21]
  43ff3c:	ldp	x19, x20, [sp, #16]
  43ff40:	ldp	x21, x22, [sp, #32]
  43ff44:	ldr	x23, [sp, #48]
  43ff48:	ldp	x29, x30, [sp], #80
  43ff4c:	ret
  43ff50:	mov	w1, #0x20                  	// #32
  43ff54:	sturb	w1, [x0, #-1]
  43ff58:	ldr	x0, [x21]
  43ff5c:	ldp	x19, x20, [sp, #16]
  43ff60:	ldp	x21, x22, [sp, #32]
  43ff64:	ldr	x23, [sp, #48]
  43ff68:	ldp	x29, x30, [sp], #80
  43ff6c:	ret
  43ff70:	str	x0, [x19, #1328]
  43ff74:	ldr	x0, [x21]
  43ff78:	ldp	x19, x20, [sp, #16]
  43ff7c:	ldp	x21, x22, [sp, #32]
  43ff80:	ldr	x23, [sp, #48]
  43ff84:	ldp	x29, x30, [sp], #80
  43ff88:	ret
  43ff8c:	str	w2, [sp, #76]
  43ff90:	bl	42fd08 <nftw@plt+0x2d188>
  43ff94:	ldr	w2, [sp, #76]
  43ff98:	ands	w23, w0, #0xff
  43ff9c:	b.eq	43fedc <nftw@plt+0x3d35c>  // b.none
  43ffa0:	b	43fec0 <nftw@plt+0x3d340>
  43ffa4:	nop
  43ffa8:	stp	x29, x30, [sp, #-64]!
  43ffac:	mov	x29, sp
  43ffb0:	stp	x21, x22, [sp, #32]
  43ffb4:	ldr	x21, [x0, #1328]
  43ffb8:	str	x23, [sp, #48]
  43ffbc:	mov	w23, w2
  43ffc0:	ldrh	w2, [x1, #16]
  43ffc4:	stp	x19, x20, [sp, #16]
  43ffc8:	mov	x20, x1
  43ffcc:	mov	x19, x0
  43ffd0:	ldr	x1, [x0, #1312]
  43ffd4:	sub	x21, x21, x1
  43ffd8:	cbz	w2, 440074 <nftw@plt+0x3d4f4>
  43ffdc:	ldr	x5, [x0, #56]
  43ffe0:	add	x22, x21, #0xd
  43ffe4:	ldr	w4, [x20, #12]
  43ffe8:	and	x22, x22, #0xfffffffffffffff8
  43ffec:	ldp	x3, x5, [x5, #16]
  43fff0:	add	x2, x4, x22
  43fff4:	sub	x5, x5, x3
  43fff8:	cmp	x2, x5
  43fffc:	b.hi	440058 <nftw@plt+0x3d4d8>  // b.pmore
  440000:	add	x5, x3, x4
  440004:	str	x3, [x20, #24]
  440008:	str	w21, [x3, x4]
  44000c:	add	x0, x5, #0x6
  440010:	mov	x2, x21
  440014:	strh	w23, [x5, #4]
  440018:	bl	402490 <memcpy@plt>
  44001c:	ldr	w0, [x20, #12]
  440020:	ldr	x1, [x19, #1312]
  440024:	str	x1, [x19, #1328]
  440028:	add	w22, w0, w22
  44002c:	str	w22, [x20, #12]
  440030:	cbnz	w23, 440044 <nftw@plt+0x3d4c4>
  440034:	ldr	x0, [x19, #56]
  440038:	ldr	x1, [x0, #16]
  44003c:	add	x22, x1, w22, uxtw
  440040:	str	x22, [x0, #16]
  440044:	ldp	x19, x20, [sp, #16]
  440048:	ldp	x21, x22, [sp, #32]
  44004c:	ldr	x23, [sp, #48]
  440050:	ldp	x29, x30, [sp], #64
  440054:	ret
  440058:	add	x1, x0, #0x38
  44005c:	bl	431618 <nftw@plt+0x2ea98>
  440060:	ldr	x0, [x19, #56]
  440064:	ldr	w4, [x20, #12]
  440068:	ldr	x1, [x19, #1312]
  44006c:	ldr	x3, [x0, #16]
  440070:	b	440000 <nftw@plt+0x3d480>
  440074:	add	x1, x21, #0x1
  440078:	bl	431720 <nftw@plt+0x2eba0>
  44007c:	ldr	x1, [x19, #1312]
  440080:	mov	x19, x0
  440084:	mov	x2, x21
  440088:	bl	402490 <memcpy@plt>
  44008c:	mov	w0, #0xa                   	// #10
  440090:	strb	w0, [x19, x21]
  440094:	str	w21, [x20, #12]
  440098:	str	x19, [x20, #24]
  44009c:	ldp	x19, x20, [sp, #16]
  4400a0:	ldp	x21, x22, [sp, #32]
  4400a4:	ldr	x23, [sp, #48]
  4400a8:	ldp	x29, x30, [sp], #64
  4400ac:	ret
  4400b0:	add	x2, x1, x2
  4400b4:	fmov	d0, x1
  4400b8:	ldr	x1, [x0]
  4400bc:	dup	v0.2d, v0.d[0]
  4400c0:	ldr	x3, [x1]
  4400c4:	ldr	x4, [x1, #32]
  4400c8:	str	x3, [x0, #1344]
  4400cc:	ldr	x3, [x1, #16]
  4400d0:	str	x1, [x0, #8]
  4400d4:	str	x4, [x0, #1352]
  4400d8:	str	x3, [x0, #1360]
  4400dc:	str	x2, [x1, #32]
  4400e0:	str	q0, [x1]
  4400e4:	strb	wzr, [x1, #104]
  4400e8:	ret
  4400ec:	nop
  4400f0:	ldr	x1, [x0, #8]
  4400f4:	mov	w2, #0x1                   	// #1
  4400f8:	ldr	x4, [x0, #1344]
  4400fc:	ldr	x3, [x0, #1352]
  440100:	str	x4, [x1]
  440104:	ldr	x4, [x0, #1360]
  440108:	str	x4, [x1, #8]
  44010c:	str	x3, [x1, #32]
  440110:	strb	w2, [x1, #104]
  440114:	str	xzr, [x0, #8]
  440118:	ret
  44011c:	nop
  440120:	stp	x29, x30, [sp, #-272]!
  440124:	mov	x29, sp
  440128:	stp	x27, x28, [sp, #80]
  44012c:	mov	x28, x0
  440130:	ldr	x0, [x0]
  440134:	stp	x25, x26, [sp, #64]
  440138:	ldr	x25, [x28, #136]
  44013c:	stp	x19, x20, [sp, #16]
  440140:	stp	x21, x22, [sp, #32]
  440144:	stp	x23, x24, [sp, #48]
  440148:	str	x1, [sp, #136]
  44014c:	ldrb	w1, [x28, #19]
  440150:	ldr	x3, [x0]
  440154:	str	x3, [sp, #112]
  440158:	ldr	x0, [x0, #32]
  44015c:	stp	x3, x0, [x25, #16]
  440160:	cmp	w1, #0x0
  440164:	cset	w22, ne  // ne = any
  440168:	ands	w23, w2, #0xff
  44016c:	b.eq	440600 <nftw@plt+0x3da80>  // b.none
  440170:	ldr	x26, [x28, #1328]
  440174:	mov	x2, x3
  440178:	adrp	x20, 481000 <_obstack_memory_used@@Base+0x1fbb8>
  44017c:	add	x1, x20, #0xaf0
  440180:	mov	w24, #0x0                   	// #0
  440184:	mov	w27, #0x0                   	// #0
  440188:	mov	w21, #0x0                   	// #0
  44018c:	str	x1, [sp, #104]
  440190:	mov	x1, x28
  440194:	mov	w20, w27
  440198:	mov	w28, w24
  44019c:	adrp	x19, 47e000 <_obstack_memory_used@@Base+0x1cbb8>
  4401a0:	mov	x27, x2
  4401a4:	add	x19, x19, #0x838
  4401a8:	mov	x24, x1
  4401ac:	str	w21, [sp, #96]
  4401b0:	mov	w21, w23
  4401b4:	mov	x23, x25
  4401b8:	mov	x25, x26
  4401bc:	str	wzr, [sp, #120]
  4401c0:	str	xzr, [sp, #128]
  4401c4:	str	xzr, [sp, #144]
  4401c8:	str	wzr, [sp, #156]
  4401cc:	stp	xzr, xzr, [sp, #160]
  4401d0:	str	wzr, [sp, #200]
  4401d4:	sub	x1, x0, x27
  4401d8:	ldr	x0, [x24, #1320]
  4401dc:	add	x1, x1, #0x3
  4401e0:	sub	x0, x0, x25
  4401e4:	cmp	x1, x0
  4401e8:	b.hi	4406a4 <nftw@plt+0x3db24>  // b.pmore
  4401ec:	adrp	x0, 47e000 <_obstack_memory_used@@Base+0x1cbb8>
  4401f0:	add	x0, x0, #0x7e0
  4401f4:	str	x0, [sp, #176]
  4401f8:	ldr	x0, [x23, #8]
  4401fc:	cmp	x0, #0x0
  440200:	ccmp	w21, #0x0, #0x0, eq  // eq = none
  440204:	b.eq	4402a4 <nftw@plt+0x3d724>  // b.none
  440208:	mov	x26, x25
  44020c:	ldrb	w1, [x27]
  440210:	add	x4, x27, #0x1
  440214:	cmp	w1, #0x7a
  440218:	mov	x9, x4
  44021c:	strb	w1, [x26], #1
  440220:	b.hi	440250 <nftw@plt+0x3d6d0>  // b.pmore
  440224:	ldrh	w0, [x19, w1, uxtw #1]
  440228:	adr	x2, 440234 <nftw@plt+0x3d6b4>
  44022c:	add	x0, x2, w0, sxth #2
  440230:	br	x0
  440234:	ldrb	w0, [x24, #18]
  440238:	cbnz	w0, 440250 <nftw@plt+0x3d6d0>
  44023c:	ldr	x0, [sp, #136]
  440240:	cmp	w20, #0x0
  440244:	ccmp	x0, #0x0, #0x0, ne  // ne = any
  440248:	b.ne	440704 <nftw@plt+0x3db84>  // b.any
  44024c:	nop
  440250:	ldrb	w0, [x24, #16]
  440254:	cbnz	w0, 4402f8 <nftw@plt+0x3d778>
  440258:	mov	x25, x26
  44025c:	mov	x27, x9
  440260:	strb	wzr, [x24, #440]
  440264:	cmp	w28, #0x1
  440268:	b.ls	44028c <nftw@plt+0x3d70c>  // b.plast
  44026c:	cmp	w28, #0x8
  440270:	sub	w0, w28, #0x5
  440274:	ccmp	w28, #0x3, #0x4, ne  // ne = any
  440278:	cset	w22, eq  // eq = none
  44027c:	cmp	w0, #0x1
  440280:	cset	w0, ls  // ls = plast
  440284:	orr	w22, w22, w0
  440288:	cbz	w22, 4401f8 <nftw@plt+0x3d678>
  44028c:	ldr	x0, [x23, #8]
  440290:	mov	w22, #0x0                   	// #0
  440294:	mov	w28, #0x0                   	// #0
  440298:	cmp	x0, #0x0
  44029c:	ccmp	w21, #0x0, #0x0, eq  // eq = none
  4402a0:	b.ne	440208 <nftw@plt+0x3d688>  // b.any
  4402a4:	ldr	x1, [x24]
  4402a8:	ldr	w0, [x1, #56]
  4402ac:	ldr	x2, [x1, #48]
  4402b0:	lsl	x0, x0, #4
  4402b4:	ldr	x0, [x2, x0]
  4402b8:	cmp	x0, x27
  4402bc:	b.hi	440208 <nftw@plt+0x3d688>  // b.pmore
  4402c0:	str	x27, [x1]
  4402c4:	mov	x0, x24
  4402c8:	mov	w1, #0x0                   	// #0
  4402cc:	bl	42fa78 <nftw@plt+0x2cef8>
  4402d0:	b	440208 <nftw@plt+0x3d688>
  4402d4:	mov	x25, x26
  4402d8:	mov	x27, x4
  4402dc:	b	4401f8 <nftw@plt+0x3d678>
  4402e0:	cmp	w20, w1
  4402e4:	b.eq	440568 <nftw@plt+0x3d9e8>  // b.none
  4402e8:	ldrb	w0, [x24, #16]
  4402ec:	cmp	w20, #0x0
  4402f0:	csel	w20, w20, w1, ne  // ne = any
  4402f4:	cbz	w0, 440258 <nftw@plt+0x3d6d8>
  4402f8:	mov	x25, x26
  4402fc:	mov	x27, x9
  440300:	b	440264 <nftw@plt+0x3d6e4>
  440304:	cbnz	w20, 440250 <nftw@plt+0x3d6d0>
  440308:	ldrb	w0, [x27, #1]
  44030c:	cmp	w0, #0x2a
  440310:	b.ne	440250 <nftw@plt+0x3d6d0>  // b.any
  440314:	ldr	x0, [sp, #136]
  440318:	str	x26, [x24, #1328]
  44031c:	mov	x1, x4
  440320:	cmp	x0, #0x0
  440324:	mov	x0, x24
  440328:	cset	w2, ne  // ne = any
  44032c:	bl	43fdf8 <nftw@plt+0x3d278>
  440330:	mov	x27, x0
  440334:	ldr	x25, [x24, #1328]
  440338:	b	4401f8 <nftw@plt+0x3d678>
  44033c:	cbnz	w20, 440250 <nftw@plt+0x3d6d0>
  440340:	ldr	w0, [sp, #96]
  440344:	subs	w0, w0, #0x1
  440348:	str	w0, [sp, #96]
  44034c:	ccmp	w28, #0x2, #0x0, eq  // eq = none
  440350:	b.eq	44061c <nftw@plt+0x3da9c>  // b.none
  440354:	sub	w0, w28, #0x7
  440358:	tst	w0, #0xfffffffd
  44035c:	ccmp	w28, #0x4, #0x4, ne  // ne = any
  440360:	b.ne	440250 <nftw@plt+0x3d6d0>  // b.any
  440364:	ldrb	w0, [x24, #16]
  440368:	mov	x25, x26
  44036c:	mov	x27, x4
  440370:	mov	w22, #0x0                   	// #0
  440374:	mov	w28, #0x0                   	// #0
  440378:	mov	w20, #0x0                   	// #0
  44037c:	cbnz	w0, 4401f8 <nftw@plt+0x3d678>
  440380:	strb	wzr, [x24, #440]
  440384:	b	4401f8 <nftw@plt+0x3d678>
  440388:	cbnz	w20, 440250 <nftw@plt+0x3d6d0>
  44038c:	ldr	w0, [sp, #96]
  440390:	cmp	w28, #0x1
  440394:	add	w0, w0, #0x1
  440398:	str	w0, [sp, #96]
  44039c:	b.eq	440840 <nftw@plt+0x3dcc0>  // b.none
  4403a0:	cmp	w28, #0x6
  4403a4:	b.eq	44069c <nftw@plt+0x3db1c>  // b.none
  4403a8:	cmp	w28, #0x3
  4403ac:	b.eq	4408e0 <nftw@plt+0x3dd60>  // b.none
  4403b0:	cmp	w28, #0x8
  4403b4:	b.ne	440250 <nftw@plt+0x3d6d0>  // b.any
  4403b8:	ldrb	w0, [x24, #16]
  4403bc:	mov	w28, #0x9                   	// #9
  4403c0:	cbnz	w0, 4403f4 <nftw@plt+0x3d874>
  4403c4:	nop
  4403c8:	mov	w20, #0x0                   	// #0
  4403cc:	b	440258 <nftw@plt+0x3d6d8>
  4403d0:	cmp	w20, #0x0
  4403d4:	ccmp	w28, #0x2, #0x0, eq  // eq = none
  4403d8:	b.ne	440250 <nftw@plt+0x3d6d0>  // b.any
  4403dc:	ldr	w0, [sp, #96]
  4403e0:	mov	w28, #0x2                   	// #2
  4403e4:	cmp	w0, #0x1
  4403e8:	b.eq	4406d8 <nftw@plt+0x3db58>  // b.none
  4403ec:	ldrb	w0, [x24, #16]
  4403f0:	cbz	w0, 4403c8 <nftw@plt+0x3d848>
  4403f4:	mov	x25, x26
  4403f8:	mov	x27, x4
  4403fc:	mov	w22, #0x0                   	// #0
  440400:	mov	w20, #0x0                   	// #0
  440404:	b	4401f8 <nftw@plt+0x3d678>
  440408:	ldr	x0, [x23, #8]
  44040c:	cbnz	x0, 440ef4 <nftw@plt+0x3e374>
  440410:	ldr	x2, [x24]
  440414:	str	x25, [x24, #1328]
  440418:	str	x4, [x2]
  44041c:	cbnz	w21, 44051c <nftw@plt+0x3d99c>
  440420:	ldr	x0, [x24, #40]
  440424:	mov	w1, #0x1                   	// #1
  440428:	strb	w1, [x2, #104]
  44042c:	mov	w4, #0x18                  	// #24
  440430:	mov	w2, #0x0                   	// #0
  440434:	ldr	w1, [x0, #12]
  440438:	ldr	x5, [x0]
  44043c:	sub	w1, w1, #0x1
  440440:	ldr	w3, [x0, #60]
  440444:	smull	x1, w1, w4
  440448:	add	x4, x5, x1
  44044c:	ldr	w1, [x5, x1]
  440450:	ldrb	w5, [x4, #6]
  440454:	ldr	w4, [x4, #16]
  440458:	sub	w1, w3, w1
  44045c:	add	w4, w4, #0x1
  440460:	lsr	w1, w1, w5
  440464:	add	w1, w1, w4
  440468:	bl	4359a8 <nftw@plt+0x32e28>
  44046c:	sub	w0, w28, #0x1
  440470:	cmp	w0, #0x1
  440474:	b.hi	44051c <nftw@plt+0x3d99c>  // b.pmore
  440478:	ldrb	w0, [x24, #16]
  44047c:	cbnz	w0, 44051c <nftw@plt+0x3d99c>
  440480:	mov	x0, x24
  440484:	bl	4302a0 <nftw@plt+0x2d720>
  440488:	tst	w0, #0xff
  44048c:	b.eq	44051c <nftw@plt+0x3d99c>  // b.none
  440490:	cmp	w28, #0x2
  440494:	b.ne	4404a0 <nftw@plt+0x3d920>  // b.any
  440498:	mov	w0, #0x20                  	// #32
  44049c:	strb	w0, [x25]
  4404a0:	ldr	x0, [x24]
  4404a4:	mov	x25, x26
  4404a8:	ldr	x27, [x0]
  4404ac:	b	4401f8 <nftw@plt+0x3d678>
  4404b0:	cmp	w20, #0x3e
  4404b4:	csel	w20, w20, wzr, ne  // ne = any
  4404b8:	b	440250 <nftw@plt+0x3d6d0>
  4404bc:	cmp	w22, #0x0
  4404c0:	mov	w0, #0x3e                  	// #62
  4404c4:	csel	w20, w20, w0, eq  // eq = none
  4404c8:	b	440250 <nftw@plt+0x3d6d0>
  4404cc:	ldrb	w0, [x27, #1]
  4404d0:	mov	w2, #0x22                  	// #34
  4404d4:	mov	w1, #0x27                  	// #39
  4404d8:	cmp	w0, #0x5c
  4404dc:	ccmp	w0, w2, #0x4, ne  // ne = any
  4404e0:	ccmp	w0, w1, #0x4, ne  // ne = any
  4404e4:	b.ne	440250 <nftw@plt+0x3d6d0>  // b.any
  4404e8:	add	x9, x27, #0x2
  4404ec:	add	x26, x25, #0x2
  4404f0:	strb	w0, [x25, #1]
  4404f4:	b	440250 <nftw@plt+0x3d6d0>
  4404f8:	ldr	x0, [sp, #112]
  4404fc:	cmp	x0, x27
  440500:	b.eq	440570 <nftw@plt+0x3d9f0>  // b.none
  440504:	ldrb	w0, [x24, #20]
  440508:	cbz	w0, 440250 <nftw@plt+0x3d6d0>
  44050c:	mov	x25, x26
  440510:	mov	x27, x9
  440514:	mov	w28, #0x5                   	// #5
  440518:	b	4401f8 <nftw@plt+0x3d678>
  44051c:	mov	x0, x24
  440520:	mov	w24, w28
  440524:	mov	x28, x0
  440528:	mov	w19, #0x1                   	// #1
  44052c:	ldr	x0, [sp, #144]
  440530:	cbz	x0, 440540 <nftw@plt+0x3d9c0>
  440534:	mov	x1, x0
  440538:	mov	x0, x28
  44053c:	bl	431488 <nftw@plt+0x2e908>
  440540:	cmp	w24, #0x2
  440544:	b.eq	4407c4 <nftw@plt+0x3dc44>  // b.none
  440548:	mov	w0, w19
  44054c:	ldp	x19, x20, [sp, #16]
  440550:	ldp	x21, x22, [sp, #32]
  440554:	ldp	x23, x24, [sp, #48]
  440558:	ldp	x25, x26, [sp, #64]
  44055c:	ldp	x27, x28, [sp, #80]
  440560:	ldp	x29, x30, [sp], #272
  440564:	ret
  440568:	mov	w20, #0x0                   	// #0
  44056c:	b	440250 <nftw@plt+0x3d6d0>
  440570:	ldr	x0, [x24, #136]
  440574:	ldr	x0, [x0, #8]
  440578:	cbnz	x0, 440504 <nftw@plt+0x3d984>
  44057c:	ldrb	w0, [x24, #16]
  440580:	cbnz	w0, 440504 <nftw@plt+0x3d984>
  440584:	str	x26, [x24, #1328]
  440588:	mov	x1, x9
  44058c:	mov	x0, x26
  440590:	ldr	x4, [sp, #104]
  440594:	ldrb	w3, [x1], #1
  440598:	strb	w3, [x0], #1
  44059c:	mov	x2, x3
  4405a0:	ldrh	w3, [x4, x3, lsl #1]
  4405a4:	tbnz	w3, #11, 4405f4 <nftw@plt+0x3da74>
  4405a8:	cmp	w2, #0x2f
  4405ac:	b.ne	440b80 <nftw@plt+0x3e000>  // b.any
  4405b0:	ldrb	w2, [x9, #1]
  4405b4:	cmp	w2, #0x2a
  4405b8:	b.ne	440b80 <nftw@plt+0x3e000>  // b.any
  4405bc:	str	x0, [x24, #1328]
  4405c0:	mov	w2, #0x0                   	// #0
  4405c4:	mov	x0, x24
  4405c8:	bl	43fdf8 <nftw@plt+0x3d278>
  4405cc:	mov	x9, x0
  4405d0:	mov	x1, x9
  4405d4:	ldr	x26, [x24, #1328]
  4405d8:	ldrb	w3, [x1], #1
  4405dc:	ldr	x4, [sp, #104]
  4405e0:	mov	x0, x26
  4405e4:	mov	x2, x3
  4405e8:	strb	w3, [x0], #1
  4405ec:	ldrh	w3, [x4, x3, lsl #1]
  4405f0:	tbz	w3, #11, 4405a8 <nftw@plt+0x3da28>
  4405f4:	mov	x26, x0
  4405f8:	mov	x9, x1
  4405fc:	b	440588 <nftw@plt+0x3da08>
  440600:	ldr	x1, [x28, #40]
  440604:	mov	x2, x3
  440608:	ldr	x26, [x28, #1312]
  44060c:	ldr	w1, [x1, #60]
  440610:	str	x26, [x28, #1328]
  440614:	str	w1, [x28, #1336]
  440618:	b	440178 <nftw@plt+0x3d5f8>
  44061c:	ldr	x0, [sp, #128]
  440620:	ldr	w1, [sp, #120]
  440624:	ldr	x2, [x24, #1312]
  440628:	add	w1, w1, #0x1
  44062c:	ldrb	w0, [x0, #18]
  440630:	str	w1, [sp, #120]
  440634:	sub	x3, x26, x2
  440638:	and	w0, w0, #0x3
  44063c:	cmp	w0, #0x3
  440640:	b.eq	4408e8 <nftw@plt+0x3dd68>  // b.none
  440644:	ldr	x0, [sp, #128]
  440648:	ldr	w5, [sp, #120]
  44064c:	ldr	x1, [x0, #24]
  440650:	ldr	w0, [sp, #156]
  440654:	cmp	w0, w5
  440658:	ldrb	w0, [x1, #19]
  44065c:	orr	w0, w0, #0x20
  440660:	strb	w0, [x1, #19]
  440664:	b.cs	440808 <nftw@plt+0x3dc88>  // b.hs, b.nlast
  440668:	ldr	w0, [sp, #120]
  44066c:	cmp	w0, #0x1
  440670:	b.eq	44081c <nftw@plt+0x3dc9c>  // b.none
  440674:	ldr	w3, [sp, #120]
  440678:	mov	x0, x24
  44067c:	ldr	x2, [sp, #128]
  440680:	str	x4, [sp, #96]
  440684:	bl	43a740 <nftw@plt+0x37bc0>
  440688:	tst	w0, #0xff
  44068c:	ldr	x4, [sp, #96]
  440690:	b.ne	440c90 <nftw@plt+0x3e110>  // b.any
  440694:	str	wzr, [sp, #96]
  440698:	b	440364 <nftw@plt+0x3d7e4>
  44069c:	mov	w28, #0x7                   	// #7
  4406a0:	b	4403ec <nftw@plt+0x3d86c>
  4406a4:	ldr	x0, [x24, #1312]
  4406a8:	sub	x25, x25, x0
  4406ac:	add	x1, x1, x25
  4406b0:	add	x1, x1, x1, lsl #1
  4406b4:	lsr	x26, x1, #1
  4406b8:	mov	x1, x26
  4406bc:	bl	4615e8 <_obstack_memory_used@@Base+0x1a0>
  4406c0:	add	x1, x0, x26
  4406c4:	add	x25, x0, x25
  4406c8:	str	x0, [x24, #1312]
  4406cc:	str	x1, [x24, #1320]
  4406d0:	str	x25, [x24, #1328]
  4406d4:	b	4401ec <nftw@plt+0x3d66c>
  4406d8:	ldr	w0, [sp, #120]
  4406dc:	add	w1, w0, #0x1
  4406e0:	ldr	w0, [sp, #156]
  4406e4:	str	w1, [sp, #120]
  4406e8:	cmp	w1, w0
  4406ec:	b.hi	4403ec <nftw@plt+0x3d86c>  // b.pmore
  4406f0:	ldr	x2, [sp, #160]
  4406f4:	ldr	x0, [x24, #1312]
  4406f8:	sub	x0, x26, x0
  4406fc:	str	x0, [x2, w1, uxtw #3]
  440700:	b	4403ec <nftw@plt+0x3d86c>
  440704:	mov	x26, x25
  440708:	mov	w1, #0x204                 	// #516
  44070c:	str	x25, [x24, #1328]
  440710:	ldr	x2, [sp, #104]
  440714:	b	44071c <nftw@plt+0x3db9c>
  440718:	add	x4, x4, #0x1
  44071c:	ldurb	w0, [x4, #-1]
  440720:	strb	w0, [x26], #1
  440724:	ldrb	w0, [x4]
  440728:	ldrh	w0, [x2, x0, lsl #1]
  44072c:	tst	w1, w0
  440730:	b.ne	440718 <nftw@plt+0x3db98>  // b.any
  440734:	ldr	x2, [x24, #136]
  440738:	mov	w3, #0x1                   	// #1
  44073c:	ldr	x0, [x24, #1088]
  440740:	ldr	x1, [x24, #1328]
  440744:	str	x4, [x2, #16]
  440748:	sub	x2, x26, x1
  44074c:	bl	43f8e8 <nftw@plt+0x3cd68>
  440750:	mov	x27, x0
  440754:	ldrb	w0, [x0, #18]
  440758:	ldr	x9, [x23, #16]
  44075c:	str	x26, [x24, #1328]
  440760:	tst	x0, #0x2
  440764:	ccmp	w28, #0x1, #0x2, ne  // ne = any
  440768:	b.ls	440b08 <nftw@plt+0x3df88>  // b.plast
  44076c:	ldr	x1, [sp, #136]
  440770:	cbz	x1, 440780 <nftw@plt+0x3dc00>
  440774:	and	w0, w0, #0x3
  440778:	cmp	w0, #0x1
  44077c:	b.eq	440c08 <nftw@plt+0x3e088>  // b.none
  440780:	cmp	w28, #0x5
  440784:	b.eq	440be4 <nftw@plt+0x3e064>  // b.none
  440788:	ldrb	w0, [x24, #20]
  44078c:	cbz	w0, 440250 <nftw@plt+0x3d6d0>
  440790:	ldr	x0, [x24, #1248]
  440794:	cmp	x0, x27
  440798:	b.eq	440f1c <nftw@plt+0x3e39c>  // b.none
  44079c:	ldr	x0, [x24, #1288]
  4407a0:	cmp	x0, x27
  4407a4:	b.eq	4407b4 <nftw@plt+0x3dc34>  // b.none
  4407a8:	ldr	x0, [x24, #1296]
  4407ac:	cmp	x0, x27
  4407b0:	b.ne	440250 <nftw@plt+0x3d6d0>  // b.any
  4407b4:	mov	x25, x26
  4407b8:	mov	x27, x9
  4407bc:	mov	w28, #0x8                   	// #8
  4407c0:	b	4401f8 <nftw@plt+0x3d678>
  4407c4:	ldr	x0, [sp, #128]
  4407c8:	mov	w3, #0x0                   	// #0
  4407cc:	ldr	w2, [sp, #200]
  4407d0:	mov	w1, #0x3                   	// #3
  4407d4:	adrp	x4, 47e000 <_obstack_memory_used@@Base+0x1cbb8>
  4407d8:	add	x4, x4, #0x3f8
  4407dc:	ldr	x5, [x0]
  4407e0:	mov	x0, x28
  4407e4:	bl	4275f8 <nftw@plt+0x24a78>
  4407e8:	mov	w0, w19
  4407ec:	ldp	x19, x20, [sp, #16]
  4407f0:	ldp	x21, x22, [sp, #32]
  4407f4:	ldp	x23, x24, [sp, #48]
  4407f8:	ldp	x25, x26, [sp, #64]
  4407fc:	ldp	x27, x28, [sp, #80]
  440800:	ldp	x29, x30, [sp], #272
  440804:	ret
  440808:	ldr	x0, [sp, #160]
  44080c:	str	x3, [x0, w5, uxtw #3]
  440810:	ldr	w0, [sp, #120]
  440814:	cmp	w0, #0x1
  440818:	b.ne	440674 <nftw@plt+0x3daf4>  // b.any
  44081c:	ldrh	w0, [x1, #16]
  440820:	cbnz	w0, 440674 <nftw@plt+0x3daf4>
  440824:	ldr	x0, [sp, #168]
  440828:	add	x0, x0, #0x1
  44082c:	add	x2, x2, x0
  440830:	cmp	x26, x2
  440834:	cset	w0, ne  // ne = any
  440838:	str	w0, [sp, #120]
  44083c:	b	440674 <nftw@plt+0x3daf4>
  440840:	ldr	x1, [sp, #128]
  440844:	ldrh	w0, [x1, #18]
  440848:	tbz	w0, #6, 440898 <nftw@plt+0x3dd18>
  44084c:	ldrb	w0, [x1, #18]
  440850:	and	w0, w0, #0x3
  440854:	cmp	w0, #0x3
  440858:	b.eq	440f08 <nftw@plt+0x3e388>  // b.none
  44085c:	ldr	x0, [x1, #24]
  440860:	ldrb	w0, [x0, #19]
  440864:	ubfx	x0, x0, #2, #1
  440868:	cbz	w0, 4408bc <nftw@plt+0x3dd3c>
  44086c:	mov	x1, #0x1                   	// #1
  440870:	ldr	x0, [x24, #136]
  440874:	b	440890 <nftw@plt+0x3dd10>
  440878:	ldr	x2, [x0, #40]
  44087c:	add	x1, x1, #0x1
  440880:	ldr	x3, [sp, #128]
  440884:	cmp	x2, x3
  440888:	ccmp	x1, #0x14, #0x0, eq  // eq = none
  44088c:	b.hi	4408bc <nftw@plt+0x3dd3c>  // b.pmore
  440890:	ldr	x0, [x0, #8]
  440894:	cbnz	x0, 440878 <nftw@plt+0x3dcf8>
  440898:	mov	w0, #0x1                   	// #1
  44089c:	str	w0, [sp, #96]
  4408a0:	ldr	x1, [sp, #160]
  4408a4:	mov	w28, #0x2                   	// #2
  4408a8:	ldr	x0, [sp, #168]
  4408ac:	ldr	x26, [x24, #1312]
  4408b0:	str	x0, [x1]
  4408b4:	add	x26, x26, x0
  4408b8:	b	4403ec <nftw@plt+0x3d86c>
  4408bc:	ldr	x0, [sp, #128]
  4408c0:	mov	w1, #0x3                   	// #3
  4408c4:	ldr	x2, [sp, #176]
  4408c8:	str	x4, [sp, #184]
  4408cc:	ldr	x3, [x0]
  4408d0:	mov	x0, x24
  4408d4:	bl	427178 <nftw@plt+0x245f8>
  4408d8:	ldr	x4, [sp, #184]
  4408dc:	b	440364 <nftw@plt+0x3d7e4>
  4408e0:	mov	w28, #0x4                   	// #4
  4408e4:	b	4403ec <nftw@plt+0x3d86c>
  4408e8:	ldr	w0, [sp, #120]
  4408ec:	ldr	w1, [sp, #156]
  4408f0:	cmp	w1, w0
  4408f4:	b.cc	440900 <nftw@plt+0x3dd80>  // b.lo, b.ul, b.last
  4408f8:	ldr	x1, [sp, #160]
  4408fc:	str	x3, [x1, w0, uxtw #3]
  440900:	ldr	w3, [sp, #120]
  440904:	add	x1, sp, #0xe0
  440908:	str	x4, [sp, #96]
  44090c:	mov	x0, x24
  440910:	ldrh	w4, [sp, #156]
  440914:	ldr	x2, [sp, #128]
  440918:	stp	xzr, xzr, [sp, #240]
  44091c:	stp	xzr, xzr, [sp, #224]
  440920:	strh	w4, [sp, #240]
  440924:	stp	xzr, xzr, [sp, #256]
  440928:	bl	43a740 <nftw@plt+0x37bc0>
  44092c:	tst	w0, #0xff
  440930:	ldr	x4, [sp, #96]
  440934:	b.eq	440694 <nftw@plt+0x3db14>  // b.none
  440938:	ldp	x27, x3, [sp, #160]
  44093c:	mov	x0, x24
  440940:	ldr	x1, [x24, #1312]
  440944:	str	x4, [sp, #216]
  440948:	add	x1, x1, x3
  44094c:	ldp	x2, x3, [x27]
  440950:	str	x1, [x24, #1328]
  440954:	str	x4, [x23, #16]
  440958:	sub	x26, x3, x2
  44095c:	add	x1, x26, #0x2
  440960:	bl	431720 <nftw@plt+0x2eba0>
  440964:	mov	w1, #0x28                  	// #40
  440968:	mov	x25, x0
  44096c:	strb	w1, [x0], #1
  440970:	mov	x2, x26
  440974:	ldr	x3, [x24, #1312]
  440978:	ldr	x1, [x27]
  44097c:	add	x1, x3, x1
  440980:	bl	402490 <memcpy@plt>
  440984:	add	x3, x26, #0x1
  440988:	mov	w0, #0xa                   	// #10
  44098c:	add	x6, x25, x3
  440990:	dup	v0.2d, x25
  440994:	mov	w2, #0x1                   	// #1
  440998:	mov	x1, #0x0                   	// #0
  44099c:	strb	w0, [x25, x3]
  4409a0:	mov	x0, x24
  4409a4:	ldp	x3, x4, [x24]
  4409a8:	str	x4, [sp, #208]
  4409ac:	ldr	x26, [x23, #24]
  4409b0:	ldrb	w4, [x3, #104]
  4409b4:	str	w4, [sp, #204]
  4409b8:	ldr	x4, [x3, #32]
  4409bc:	str	x6, [x3, #32]
  4409c0:	strb	wzr, [x3, #104]
  4409c4:	str	x4, [sp, #184]
  4409c8:	ldr	x4, [x3]
  4409cc:	str	x4, [sp, #176]
  4409d0:	ldr	x4, [x3, #8]
  4409d4:	str	q0, [x3]
  4409d8:	ldrb	w6, [x24, #16]
  4409dc:	strb	w2, [x24, #16]
  4409e0:	str	x3, [x24, #8]
  4409e4:	cmp	w6, #0x0
  4409e8:	ldr	x3, [x23, #8]
  4409ec:	str	xzr, [x23, #8]
  4409f0:	cset	w25, ne  // ne = any
  4409f4:	str	x3, [sp, #96]
  4409f8:	str	x4, [sp, #192]
  4409fc:	bl	440120 <nftw@plt+0x3d5a0>
  440a00:	strb	w25, [x24, #16]
  440a04:	ldr	x0, [x24, #1320]
  440a08:	ldr	x1, [x24, #1328]
  440a0c:	ldr	x4, [sp, #216]
  440a10:	sub	x0, x0, x1
  440a14:	cmp	x0, #0x3
  440a18:	b.ls	441118 <nftw@plt+0x3e598>  // b.plast
  440a1c:	mov	w27, #0xa                   	// #10
  440a20:	strb	w27, [x1]
  440a24:	str	x4, [sp, #216]
  440a28:	mov	w2, #0x0                   	// #0
  440a2c:	ldr	x1, [x24]
  440a30:	mov	w28, #0x0                   	// #0
  440a34:	ldr	x4, [sp, #168]
  440a38:	ldr	x0, [x24, #1312]
  440a3c:	ldr	x3, [x24, #1328]
  440a40:	add	x0, x0, x4
  440a44:	stp	x0, x0, [x1]
  440a48:	str	x3, [x1, #32]
  440a4c:	stp	x0, x3, [x23, #16]
  440a50:	mov	x0, x24
  440a54:	ldrb	w3, [x24, #24]
  440a58:	ldr	x1, [sp, #128]
  440a5c:	add	w3, w3, #0x1
  440a60:	strb	w3, [x24, #24]
  440a64:	bl	439f88 <nftw@plt+0x37408>
  440a68:	mov	x25, x0
  440a6c:	ldrb	w3, [x24, #24]
  440a70:	ldr	x1, [x24]
  440a74:	sub	w3, w3, #0x1
  440a78:	strb	w3, [x24, #24]
  440a7c:	ldr	x2, [sp, #96]
  440a80:	str	wzr, [sp, #96]
  440a84:	ldr	x3, [x24, #1312]
  440a88:	str	x2, [x23, #8]
  440a8c:	ldr	x2, [sp, #176]
  440a90:	str	x2, [x1]
  440a94:	ldr	x4, [sp, #168]
  440a98:	ldr	x2, [sp, #192]
  440a9c:	str	x2, [x1, #8]
  440aa0:	ldr	x2, [sp, #184]
  440aa4:	str	x2, [x1, #32]
  440aa8:	ldrb	w2, [sp, #204]
  440aac:	strb	w2, [x1, #104]
  440ab0:	add	x1, x3, x4
  440ab4:	ldp	x2, x4, [sp, #208]
  440ab8:	str	x2, [x24, #8]
  440abc:	str	x1, [x24, #1328]
  440ac0:	stp	x4, x26, [x23, #16]
  440ac4:	bl	4024f0 <strlen@plt>
  440ac8:	mov	x23, x0
  440acc:	add	x1, x23, #0x1
  440ad0:	mov	x0, x24
  440ad4:	bl	431720 <nftw@plt+0x2eba0>
  440ad8:	mov	x26, x0
  440adc:	mov	x2, x23
  440ae0:	mov	x1, x25
  440ae4:	bl	402490 <memcpy@plt>
  440ae8:	ldr	x1, [sp, #128]
  440aec:	strb	w27, [x26, x23]
  440af0:	mov	x3, x23
  440af4:	mov	x2, x26
  440af8:	mov	x0, x24
  440afc:	bl	43a918 <nftw@plt+0x37d98>
  440b00:	ldr	x23, [x24, #136]
  440b04:	b	440b74 <nftw@plt+0x3dff4>
  440b08:	ldrb	w1, [x24, #24]
  440b0c:	cbnz	w1, 440bf4 <nftw@plt+0x3e074>
  440b10:	strb	wzr, [x24, #440]
  440b14:	and	w0, w0, #0x3
  440b18:	cmp	w0, #0x3
  440b1c:	b.eq	440fb4 <nftw@plt+0x3e434>  // b.none
  440b20:	ldr	x1, [x27, #24]
  440b24:	ldrb	w2, [x1, #19]
  440b28:	tbnz	w2, #2, 441038 <nftw@plt+0x3e4b8>
  440b2c:	ldrh	w1, [x27, #18]
  440b30:	tbnz	w1, #6, 44104c <nftw@plt+0x3e4cc>
  440b34:	str	x25, [x24, #1328]
  440b38:	cmp	w0, #0x3
  440b3c:	b.eq	441200 <nftw@plt+0x3e680>  // b.none
  440b40:	ldr	x0, [x27, #24]
  440b44:	ldrb	w1, [x0, #19]
  440b48:	ldr	w23, [x0, #12]
  440b4c:	ldr	x26, [x0, #24]
  440b50:	orr	w1, w1, #0x20
  440b54:	strb	w1, [x0, #19]
  440b58:	mov	x3, x23
  440b5c:	mov	x2, x26
  440b60:	mov	x1, x27
  440b64:	mov	x0, x24
  440b68:	bl	43a918 <nftw@plt+0x37d98>
  440b6c:	mov	w28, #0x0                   	// #0
  440b70:	ldr	x23, [x24, #136]
  440b74:	ldp	x27, x0, [x23, #16]
  440b78:	ldr	x25, [x24, #1328]
  440b7c:	b	4401d4 <nftw@plt+0x3d654>
  440b80:	str	x26, [x24, #1328]
  440b84:	ldrb	w0, [x9]
  440b88:	cmp	w0, #0xa
  440b8c:	b.eq	44119c <nftw@plt+0x3e61c>  // b.none
  440b90:	ldr	x1, [sp, #104]
  440b94:	ldrh	w1, [x1, w0, sxtw #1]
  440b98:	tbz	w1, #2, 440ba8 <nftw@plt+0x3e028>
  440b9c:	ldr	w2, [x24, #1116]
  440ba0:	cmp	w2, #0x15
  440ba4:	b.ne	440bc0 <nftw@plt+0x3e040>  // b.any
  440ba8:	tbnz	w1, #9, 440c34 <nftw@plt+0x3e0b4>
  440bac:	cmp	w0, #0x24
  440bb0:	b.eq	440c2c <nftw@plt+0x3e0ac>  // b.none
  440bb4:	ldr	w0, [x24, #1116]
  440bb8:	cmp	w0, #0x15
  440bbc:	b.eq	440504 <nftw@plt+0x3d984>  // b.none
  440bc0:	mov	x0, x24
  440bc4:	mov	w1, #0x0                   	// #0
  440bc8:	mov	w24, w28
  440bcc:	mov	w19, #0x0                   	// #0
  440bd0:	mov	x28, x0
  440bd4:	ldr	x2, [x0]
  440bd8:	str	x9, [x2]
  440bdc:	bl	425128 <nftw@plt+0x225a8>
  440be0:	b	44052c <nftw@plt+0x3d9ac>
  440be4:	mov	x25, x26
  440be8:	mov	x27, x9
  440bec:	mov	w28, #0x6                   	// #6
  440bf0:	b	4401f8 <nftw@plt+0x3d678>
  440bf4:	ldr	x1, [sp, #136]
  440bf8:	cbz	x1, 440788 <nftw@plt+0x3dc08>
  440bfc:	and	w0, w0, #0x3
  440c00:	cmp	w0, #0x1
  440c04:	b.ne	440788 <nftw@plt+0x3dc08>  // b.any
  440c08:	ldrh	w2, [x27, #24]
  440c0c:	mov	x0, x24
  440c10:	ldr	x1, [sp, #136]
  440c14:	str	x25, [x24, #1328]
  440c18:	str	x9, [sp, #184]
  440c1c:	bl	43ffa8 <nftw@plt+0x3d428>
  440c20:	ldr	x9, [sp, #184]
  440c24:	ldr	x26, [x24, #1312]
  440c28:	b	440250 <nftw@plt+0x3d6d0>
  440c2c:	ldrb	w0, [x24, #1146]
  440c30:	cbz	w0, 440bb4 <nftw@plt+0x3e034>
  440c34:	mov	x25, x26
  440c38:	mov	x2, x9
  440c3c:	mov	w1, #0x204                 	// #516
  440c40:	ldrb	w0, [x2], #1
  440c44:	strb	w0, [x25], #1
  440c48:	ldr	x3, [sp, #104]
  440c4c:	ldrb	w0, [x2]
  440c50:	ldrh	w0, [x3, x0, lsl #1]
  440c54:	tst	w1, w0
  440c58:	b.ne	440c40 <nftw@plt+0x3e0c0>  // b.any
  440c5c:	ldr	x4, [x24, #136]
  440c60:	mov	w3, #0x1                   	// #1
  440c64:	ldr	x0, [x24, #1088]
  440c68:	str	x9, [sp, #184]
  440c6c:	ldr	x1, [x24, #1328]
  440c70:	str	x2, [x4, #16]
  440c74:	sub	x2, x25, x1
  440c78:	bl	43f8e8 <nftw@plt+0x3cd68>
  440c7c:	ldrb	w0, [x0, #16]
  440c80:	str	x25, [x24, #1328]
  440c84:	ldr	x9, [sp, #184]
  440c88:	tbz	w0, #0, 440bb4 <nftw@plt+0x3e034>
  440c8c:	b	440bc0 <nftw@plt+0x3e040>
  440c90:	ldr	x0, [sp, #128]
  440c94:	ldr	x2, [sp, #168]
  440c98:	ldr	x27, [x0, #24]
  440c9c:	ldr	x0, [x24, #1312]
  440ca0:	ldrh	w1, [x27, #16]
  440ca4:	add	x0, x0, x2
  440ca8:	str	x0, [x24, #1328]
  440cac:	str	x4, [x23, #16]
  440cb0:	cbz	w1, 4410cc <nftw@plt+0x3e54c>
  440cb4:	ldr	x4, [x27, #24]
  440cb8:	ldrh	w2, [x4, #4]
  440cbc:	ldr	w0, [x4]
  440cc0:	mov	x1, x0
  440cc4:	cbz	w2, 440d04 <nftw@plt+0x3e184>
  440cc8:	ldr	x5, [sp, #160]
  440ccc:	mov	w3, w2
  440cd0:	add	x0, x0, #0xd
  440cd4:	add	x2, x5, w2, uxth #3
  440cd8:	and	x0, x0, #0xfffffffffffffff8
  440cdc:	add	x4, x4, x0
  440ce0:	ldr	x3, [x5, x3, lsl #3]
  440ce4:	ldur	x6, [x2, #-8]
  440ce8:	sub	x3, x3, #0x1
  440cec:	ldr	w0, [x4]
  440cf0:	ldrh	w2, [x4, #4]
  440cf4:	sub	x3, x3, x6
  440cf8:	add	x3, x0, x3, lsl #1
  440cfc:	add	x1, x1, x3
  440d00:	cbnz	w2, 440ccc <nftw@plt+0x3e14c>
  440d04:	add	x1, x1, #0x1
  440d08:	mov	x0, x24
  440d0c:	bl	4314b0 <nftw@plt+0x2e930>
  440d10:	mov	x25, x0
  440d14:	ldr	x1, [x0, #16]
  440d18:	mov	w8, #0x0                   	// #0
  440d1c:	ldr	x12, [x27, #24]
  440d20:	mov	x3, #0x0                   	// #0
  440d24:	ldr	x7, [sp, #160]
  440d28:	mov	w13, #0x5c                  	// #92
  440d2c:	ldr	w4, [x12]
  440d30:	add	x3, x3, x4
  440d34:	cbz	x4, 440d60 <nftw@plt+0x3e1e0>
  440d38:	add	x5, x12, #0x6
  440d3c:	mov	x0, #0x0                   	// #0
  440d40:	ldrb	w2, [x5, x0]
  440d44:	strb	w2, [x1, x0]
  440d48:	add	x0, x0, #0x1
  440d4c:	cmp	w2, #0x22
  440d50:	b.eq	440ee4 <nftw@plt+0x3e364>  // b.none
  440d54:	cmp	x4, x0
  440d58:	b.ne	440d40 <nftw@plt+0x3e1c0>  // b.any
  440d5c:	add	x1, x1, x4
  440d60:	ldrh	w0, [x12, #4]
  440d64:	cbz	w0, 441084 <nftw@plt+0x3e504>
  440d68:	mov	w2, w0
  440d6c:	add	x0, x7, w0, uxth #3
  440d70:	ldr	x5, [x24, #1312]
  440d74:	ldr	x2, [x7, x2, lsl #3]
  440d78:	ldur	x0, [x0, #-8]
  440d7c:	sub	x2, x2, #0x1
  440d80:	subs	x6, x2, x0
  440d84:	add	x10, x5, x0
  440d88:	b.eq	440ed0 <nftw@plt+0x3e350>  // b.none
  440d8c:	cbnz	w8, 440f2c <nftw@plt+0x3e3ac>
  440d90:	add	x0, x0, #0x10
  440d94:	add	x2, x1, #0x10
  440d98:	add	x5, x5, x0
  440d9c:	sub	x0, x6, #0x1
  440da0:	cmp	x1, x5
  440da4:	ccmp	x10, x2, #0x2, cc  // cc = lo, ul, last
  440da8:	ccmp	x0, #0xe, #0x0, cs  // cs = hs, nlast
  440dac:	b.ls	4410b0 <nftw@plt+0x3e530>  // b.plast
  440db0:	and	x4, x6, #0xfffffffffffffff0
  440db4:	mov	x2, #0x0                   	// #0
  440db8:	ldr	q0, [x10, x2]
  440dbc:	str	q0, [x1, x2]
  440dc0:	add	x2, x2, #0x10
  440dc4:	cmp	x4, x2
  440dc8:	b.ne	440db8 <nftw@plt+0x3e238>  // b.any
  440dcc:	and	x2, x6, #0xfffffffffffffff0
  440dd0:	cmp	x6, x2
  440dd4:	add	x5, x10, x2
  440dd8:	add	x4, x1, x2
  440ddc:	b.eq	440ec8 <nftw@plt+0x3e348>  // b.none
  440de0:	ldrb	w9, [x10, x2]
  440de4:	subs	x0, x0, x2
  440de8:	strb	w9, [x1, x2]
  440dec:	b.eq	440ec8 <nftw@plt+0x3e348>  // b.none
  440df0:	ldrb	w2, [x5, #1]
  440df4:	cmp	x0, #0x1
  440df8:	strb	w2, [x4, #1]
  440dfc:	b.eq	440ec8 <nftw@plt+0x3e348>  // b.none
  440e00:	ldrb	w2, [x5, #2]
  440e04:	cmp	x0, #0x2
  440e08:	strb	w2, [x4, #2]
  440e0c:	b.eq	440ec8 <nftw@plt+0x3e348>  // b.none
  440e10:	ldrb	w2, [x5, #3]
  440e14:	cmp	x0, #0x3
  440e18:	strb	w2, [x4, #3]
  440e1c:	b.eq	440ec8 <nftw@plt+0x3e348>  // b.none
  440e20:	ldrb	w2, [x5, #4]
  440e24:	cmp	x0, #0x4
  440e28:	strb	w2, [x4, #4]
  440e2c:	b.eq	440ec8 <nftw@plt+0x3e348>  // b.none
  440e30:	ldrb	w2, [x5, #5]
  440e34:	cmp	x0, #0x5
  440e38:	strb	w2, [x4, #5]
  440e3c:	b.eq	440ec8 <nftw@plt+0x3e348>  // b.none
  440e40:	ldrb	w2, [x5, #6]
  440e44:	cmp	x0, #0x6
  440e48:	strb	w2, [x4, #6]
  440e4c:	b.eq	440ec8 <nftw@plt+0x3e348>  // b.none
  440e50:	ldrb	w2, [x5, #7]
  440e54:	cmp	x0, #0x7
  440e58:	strb	w2, [x4, #7]
  440e5c:	b.eq	440ec8 <nftw@plt+0x3e348>  // b.none
  440e60:	ldrb	w2, [x5, #8]
  440e64:	cmp	x0, #0x8
  440e68:	strb	w2, [x4, #8]
  440e6c:	b.eq	440ec8 <nftw@plt+0x3e348>  // b.none
  440e70:	ldrb	w2, [x5, #9]
  440e74:	cmp	x0, #0x9
  440e78:	strb	w2, [x4, #9]
  440e7c:	b.eq	440ec8 <nftw@plt+0x3e348>  // b.none
  440e80:	ldrb	w2, [x5, #10]
  440e84:	cmp	x0, #0xa
  440e88:	strb	w2, [x4, #10]
  440e8c:	b.eq	440ec8 <nftw@plt+0x3e348>  // b.none
  440e90:	ldrb	w2, [x5, #11]
  440e94:	cmp	x0, #0xb
  440e98:	strb	w2, [x4, #11]
  440e9c:	b.eq	440ec8 <nftw@plt+0x3e348>  // b.none
  440ea0:	ldrb	w2, [x5, #12]
  440ea4:	cmp	x0, #0xc
  440ea8:	strb	w2, [x4, #12]
  440eac:	b.eq	440ec8 <nftw@plt+0x3e348>  // b.none
  440eb0:	ldrb	w2, [x5, #13]
  440eb4:	cmp	x0, #0xd
  440eb8:	strb	w2, [x4, #13]
  440ebc:	b.eq	440ec8 <nftw@plt+0x3e348>  // b.none
  440ec0:	ldrb	w0, [x5, #14]
  440ec4:	strb	w0, [x4, #14]
  440ec8:	add	x1, x1, x6
  440ecc:	add	x3, x3, x6
  440ed0:	ldr	w0, [x12]
  440ed4:	add	x0, x0, #0xd
  440ed8:	and	x0, x0, #0xfffffffffffffff8
  440edc:	add	x12, x12, x0
  440ee0:	b	440d2c <nftw@plt+0x3e1ac>
  440ee4:	cmp	x4, x0
  440ee8:	eor	w8, w8, #0x1
  440eec:	b.ne	440d40 <nftw@plt+0x3e1c0>  // b.any
  440ef0:	b	440d5c <nftw@plt+0x3e1dc>
  440ef4:	str	x25, [x24, #1328]
  440ef8:	mov	x0, x24
  440efc:	bl	43a9a8 <nftw@plt+0x37e28>
  440f00:	ldr	x23, [x24, #136]
  440f04:	b	440b74 <nftw@plt+0x3dff4>
  440f08:	ldr	w0, [x1, #24]
  440f0c:	cmp	w0, #0xa
  440f10:	cset	w0, eq  // eq = none
  440f14:	cbz	w0, 4408bc <nftw@plt+0x3dd3c>
  440f18:	b	44086c <nftw@plt+0x3dcec>
  440f1c:	mov	x25, x26
  440f20:	mov	x27, x9
  440f24:	mov	w28, #0x3                   	// #3
  440f28:	b	4401f8 <nftw@plt+0x3d678>
  440f2c:	add	x5, x5, x2
  440f30:	mov	x0, x10
  440f34:	mov	w9, #0x0                   	// #0
  440f38:	b	440f68 <nftw@plt+0x3e3e8>
  440f3c:	cbz	w9, 440f48 <nftw@plt+0x3e3c8>
  440f40:	cmp	w2, #0x5c
  440f44:	b.eq	440fa4 <nftw@plt+0x3e424>  // b.none
  440f48:	mov	x11, x4
  440f4c:	mov	x3, x6
  440f50:	mov	x4, x1
  440f54:	mov	x1, x11
  440f58:	strb	w2, [x4]
  440f5c:	add	x0, x0, #0x1
  440f60:	cmp	x0, x5
  440f64:	b.eq	440ed0 <nftw@plt+0x3e350>  // b.none
  440f68:	ldrb	w2, [x0]
  440f6c:	add	x4, x1, #0x1
  440f70:	add	x6, x3, #0x1
  440f74:	cmp	w2, #0x22
  440f78:	b.ne	440f3c <nftw@plt+0x3e3bc>  // b.any
  440f7c:	cmp	x0, x10
  440f80:	b.ls	440f94 <nftw@plt+0x3e414>  // b.plast
  440f84:	ldurb	w6, [x0, #-1]
  440f88:	eor	w2, w9, #0x1
  440f8c:	cmp	w6, #0x5c
  440f90:	csel	w9, w2, w9, ne  // ne = any
  440f94:	strb	w13, [x1], #2
  440f98:	add	x3, x3, #0x2
  440f9c:	ldrb	w2, [x0]
  440fa0:	b	440f58 <nftw@plt+0x3e3d8>
  440fa4:	strb	w2, [x1], #2
  440fa8:	add	x3, x3, #0x2
  440fac:	ldrb	w2, [x0]
  440fb0:	b	440f58 <nftw@plt+0x3e3d8>
  440fb4:	ldr	w1, [x27, #24]
  440fb8:	cmp	w1, #0xa
  440fbc:	b.ne	440b2c <nftw@plt+0x3dfac>  // b.any
  440fc0:	mov	w0, #0x1                   	// #1
  440fc4:	mov	x28, #0x10                  	// #16
  440fc8:	str	w0, [sp, #156]
  440fcc:	ldr	x1, [sp, #144]
  440fd0:	cbz	x1, 440fe4 <nftw@plt+0x3e464>
  440fd4:	mov	x0, x24
  440fd8:	str	x9, [sp, #120]
  440fdc:	bl	431488 <nftw@plt+0x2e908>
  440fe0:	ldr	x9, [sp, #120]
  440fe4:	mov	x1, x28
  440fe8:	mov	x0, x24
  440fec:	str	x9, [sp, #120]
  440ff0:	bl	4314b0 <nftw@plt+0x2e930>
  440ff4:	mov	x2, x0
  440ff8:	ldr	x1, [x24, #40]
  440ffc:	mov	w28, #0x1                   	// #1
  441000:	ldr	x0, [x24, #1312]
  441004:	str	x27, [sp, #128]
  441008:	ldr	x9, [sp, #120]
  44100c:	sub	x0, x25, x0
  441010:	str	x0, [sp, #168]
  441014:	mov	x25, x26
  441018:	ldr	w0, [x1, #60]
  44101c:	mov	x27, x9
  441020:	str	w0, [sp, #200]
  441024:	ldr	x0, [x2, #16]
  441028:	str	wzr, [sp, #120]
  44102c:	str	x2, [sp, #144]
  441030:	str	x0, [sp, #160]
  441034:	b	4401f8 <nftw@plt+0x3d678>
  441038:	ldrh	w0, [x1, #16]
  44103c:	str	w0, [sp, #156]
  441040:	add	w28, w0, #0x1
  441044:	ubfiz	x28, x28, #3, #17
  441048:	b	440fcc <nftw@plt+0x3e44c>
  44104c:	ldr	x3, [x27]
  441050:	mov	x0, x24
  441054:	ldr	x2, [sp, #176]
  441058:	mov	w1, #0x3                   	// #3
  44105c:	str	x9, [sp, #184]
  441060:	bl	427178 <nftw@plt+0x245f8>
  441064:	ldrb	w0, [x24, #16]
  441068:	ldr	x9, [sp, #184]
  44106c:	cbz	w0, 440258 <nftw@plt+0x3d6d8>
  441070:	mov	x25, x26
  441074:	mov	x27, x9
  441078:	mov	w22, #0x0                   	// #0
  44107c:	mov	w28, #0x0                   	// #0
  441080:	b	4401f8 <nftw@plt+0x3d678>
  441084:	mov	w0, #0xa                   	// #10
  441088:	strb	w0, [x1]
  44108c:	ldr	x1, [sp, #128]
  441090:	mov	x0, x24
  441094:	ldr	x2, [x25, #16]
  441098:	str	wzr, [sp, #96]
  44109c:	mov	w28, #0x0                   	// #0
  4410a0:	bl	43a918 <nftw@plt+0x37d98>
  4410a4:	ldr	x23, [x24, #136]
  4410a8:	str	x25, [x23, #32]
  4410ac:	b	440b74 <nftw@plt+0x3dff4>
  4410b0:	mov	x0, #0x0                   	// #0
  4410b4:	ldrb	w2, [x10, x0]
  4410b8:	strb	w2, [x1, x0]
  4410bc:	add	x0, x0, #0x1
  4410c0:	cmp	x0, x6
  4410c4:	b.ne	4410b4 <nftw@plt+0x3e534>  // b.any
  4410c8:	b	440ec8 <nftw@plt+0x3e348>
  4410cc:	ldr	x0, [sp, #128]
  4410d0:	ldrb	w0, [x0, #18]
  4410d4:	and	w0, w0, #0x3
  4410d8:	cmp	w0, #0x3
  4410dc:	b.eq	441154 <nftw@plt+0x3e5d4>  // b.none
  4410e0:	ldrb	w0, [x27, #19]
  4410e4:	ldr	w23, [x27, #12]
  4410e8:	ldr	x26, [x27, #24]
  4410ec:	orr	w0, w0, #0x20
  4410f0:	strb	w0, [x27, #19]
  4410f4:	ldr	x1, [sp, #128]
  4410f8:	mov	x3, x23
  4410fc:	mov	x2, x26
  441100:	mov	x0, x24
  441104:	mov	w28, #0x0                   	// #0
  441108:	bl	43a918 <nftw@plt+0x37d98>
  44110c:	str	wzr, [sp, #96]
  441110:	ldr	x23, [x24, #136]
  441114:	b	440b74 <nftw@plt+0x3dff4>
  441118:	ldr	x0, [x24, #1312]
  44111c:	sub	x27, x1, x0
  441120:	add	x1, x27, #0x4
  441124:	add	x1, x1, x1, lsl #1
  441128:	lsr	x25, x1, #1
  44112c:	mov	x1, x25
  441130:	bl	4615e8 <_obstack_memory_used@@Base+0x1a0>
  441134:	mov	x1, x0
  441138:	add	x0, x0, x25
  44113c:	str	x1, [x24, #1312]
  441140:	add	x1, x1, x27
  441144:	str	x0, [x24, #1320]
  441148:	str	x1, [x24, #1328]
  44114c:	ldr	x4, [sp, #216]
  441150:	b	440a1c <nftw@plt+0x3de9c>
  441154:	ldr	x1, [sp, #128]
  441158:	mov	w2, #0x0                   	// #0
  44115c:	mov	x0, x24
  441160:	bl	439f88 <nftw@plt+0x37408>
  441164:	mov	x25, x0
  441168:	bl	4024f0 <strlen@plt>
  44116c:	mov	x1, x0
  441170:	mov	x23, x1
  441174:	mov	x0, x24
  441178:	add	x1, x1, #0x1
  44117c:	bl	431720 <nftw@plt+0x2eba0>
  441180:	mov	x26, x0
  441184:	mov	x1, x25
  441188:	mov	x2, x23
  44118c:	bl	402490 <memcpy@plt>
  441190:	mov	w0, #0xa                   	// #10
  441194:	strb	w0, [x26, x23]
  441198:	b	4410f4 <nftw@plt+0x3e574>
  44119c:	mov	x0, x24
  4411a0:	mov	w24, w28
  4411a4:	mov	x28, x0
  4411a8:	mov	w4, #0x18                  	// #24
  4411ac:	mov	w9, #0x1                   	// #1
  4411b0:	mov	w2, #0x0                   	// #0
  4411b4:	ldr	x8, [x0]
  4411b8:	mov	w19, #0x0                   	// #0
  4411bc:	ldr	x0, [x0, #40]
  4411c0:	ldr	w1, [x0, #12]
  4411c4:	ldr	x7, [x0]
  4411c8:	sub	w1, w1, #0x1
  4411cc:	ldr	w3, [x0, #60]
  4411d0:	strb	w9, [x8, #104]
  4411d4:	smull	x1, w1, w4
  4411d8:	add	x4, x7, x1
  4411dc:	ldr	w1, [x7, x1]
  4411e0:	ldrb	w7, [x4, #6]
  4411e4:	ldr	w4, [x4, #16]
  4411e8:	sub	w1, w3, w1
  4411ec:	add	w4, w4, #0x1
  4411f0:	lsr	w1, w1, w7
  4411f4:	add	w1, w1, w4
  4411f8:	bl	4359a8 <nftw@plt+0x32e28>
  4411fc:	b	44052c <nftw@plt+0x3d9ac>
  441200:	mov	x1, x27
  441204:	mov	w2, #0x0                   	// #0
  441208:	mov	x0, x24
  44120c:	bl	439f88 <nftw@plt+0x37408>
  441210:	mov	x26, x0
  441214:	bl	4024f0 <strlen@plt>
  441218:	mov	x1, x0
  44121c:	mov	x23, x1
  441220:	mov	x0, x24
  441224:	add	x1, x1, #0x1
  441228:	bl	431720 <nftw@plt+0x2eba0>
  44122c:	mov	x1, x26
  441230:	mov	x26, x0
  441234:	mov	x2, x23
  441238:	bl	402490 <memcpy@plt>
  44123c:	mov	w0, #0xa                   	// #10
  441240:	strb	w0, [x26, x23]
  441244:	b	440b58 <nftw@plt+0x3dfd8>
  441248:	stp	x29, x30, [sp, #-32]!
  44124c:	mov	x29, sp
  441250:	str	x19, [sp, #16]
  441254:	mov	x19, x0
  441258:	ldr	x1, [x19]
  44125c:	mov	x0, x19
  441260:	ldrb	w1, [x1, #104]
  441264:	cbz	w1, 441274 <nftw@plt+0x3e6f4>
  441268:	bl	4302a0 <nftw@plt+0x2d720>
  44126c:	ands	w0, w0, #0xff
  441270:	b.eq	4412a0 <nftw@plt+0x3e720>  // b.none
  441274:	mov	x0, x19
  441278:	mov	w2, #0x0                   	// #0
  44127c:	mov	x1, #0x0                   	// #0
  441280:	bl	440120 <nftw@plt+0x3d5a0>
  441284:	tst	w0, #0xff
  441288:	b.eq	441258 <nftw@plt+0x3e6d8>  // b.none
  44128c:	ldrb	w0, [x19, #18]
  441290:	cbnz	w0, 441258 <nftw@plt+0x3e6d8>
  441294:	ldr	x0, [x19]
  441298:	cmp	x0, #0x0
  44129c:	cset	w0, ne  // ne = any
  4412a0:	ldr	x19, [sp, #16]
  4412a4:	ldp	x29, x30, [sp], #32
  4412a8:	ret
  4412ac:	nop
  4412b0:	ldrb	w1, [x0, #19]
  4412b4:	tbz	w1, #2, 441310 <nftw@plt+0x3e790>
  4412b8:	ldrh	w1, [x0, #16]
  4412bc:	cbz	w1, 441310 <nftw@plt+0x3e790>
  4412c0:	ldr	x3, [x0, #24]
  4412c4:	ldrh	w2, [x3, #4]
  4412c8:	ldr	w1, [x3]
  4412cc:	cbz	w2, 441318 <nftw@plt+0x3e798>
  4412d0:	ldr	x6, [x0]
  4412d4:	mov	x0, x1
  4412d8:	mov	x5, #0xfffffffffffffff8    	// #-8
  4412dc:	nop
  4412e0:	add	x2, x5, w2, uxtw #3
  4412e4:	add	x1, x1, #0xd
  4412e8:	and	x1, x1, #0xfffffffffffffff8
  4412ec:	add	x3, x3, x1
  4412f0:	ldr	x4, [x6, x2]
  4412f4:	ldrh	w2, [x3, #4]
  4412f8:	ldr	w1, [x3]
  4412fc:	ldr	w4, [x4, #8]
  441300:	add	x4, x4, x1
  441304:	add	x0, x0, x4
  441308:	cbnz	w2, 4412e0 <nftw@plt+0x3e760>
  44130c:	ret
  441310:	ldr	w0, [x0, #12]
  441314:	ret
  441318:	mov	x0, x1
  44131c:	ret
  441320:	stp	x29, x30, [sp, #-64]!
  441324:	mov	x3, x1
  441328:	mov	x29, sp
  44132c:	stp	x21, x22, [sp, #32]
  441330:	mov	x22, x0
  441334:	ldrb	w0, [x0, #19]
  441338:	stp	x19, x20, [sp, #16]
  44133c:	ldr	x20, [x22, #24]
  441340:	tbz	w0, #2, 4413c4 <nftw@plt+0x3e844>
  441344:	ldrh	w0, [x22, #16]
  441348:	cbz	w0, 4413c4 <nftw@plt+0x3e844>
  44134c:	str	x23, [sp, #48]
  441350:	mov	x23, #0xfffffffffffffff8    	// #-8
  441354:	b	441384 <nftw@plt+0x3e804>
  441358:	ldr	x2, [x22]
  44135c:	ldr	x21, [x2, x1]
  441360:	ldr	w2, [x21, #8]
  441364:	ldr	x1, [x21]
  441368:	bl	402490 <memcpy@plt>
  44136c:	ldr	w2, [x20]
  441370:	ldr	w3, [x21, #8]
  441374:	add	x2, x2, #0xd
  441378:	and	x2, x2, #0xfffffffffffffff8
  44137c:	add	x3, x19, x3
  441380:	add	x20, x20, x2
  441384:	mov	x1, x20
  441388:	mov	x0, x3
  44138c:	ldr	w2, [x1], #6
  441390:	bl	402490 <memcpy@plt>
  441394:	ldr	w19, [x20]
  441398:	ldrh	w2, [x20, #4]
  44139c:	add	x19, x0, x19
  4413a0:	mov	x0, x19
  4413a4:	add	x1, x23, w2, uxtw #3
  4413a8:	cbnz	w2, 441358 <nftw@plt+0x3e7d8>
  4413ac:	mov	x0, x19
  4413b0:	ldp	x19, x20, [sp, #16]
  4413b4:	ldp	x21, x22, [sp, #32]
  4413b8:	ldr	x23, [sp, #48]
  4413bc:	ldp	x29, x30, [sp], #64
  4413c0:	ret
  4413c4:	ldr	w2, [x22, #12]
  4413c8:	mov	x1, x20
  4413cc:	mov	x0, x3
  4413d0:	bl	402490 <memcpy@plt>
  4413d4:	ldr	w19, [x22, #12]
  4413d8:	ldp	x21, x22, [sp, #32]
  4413dc:	add	x19, x0, x19
  4413e0:	mov	x0, x19
  4413e4:	ldp	x19, x20, [sp, #16]
  4413e8:	ldp	x29, x30, [sp], #64
  4413ec:	ret
  4413f0:	stp	x29, x30, [sp, #-96]!
  4413f4:	mov	x29, sp
  4413f8:	stp	x19, x20, [sp, #16]
  4413fc:	mov	x20, x0
  441400:	ldr	x0, [x0]
  441404:	stp	x23, x24, [sp, #48]
  441408:	ldr	x24, [x20, #136]
  44140c:	stp	x21, x22, [sp, #32]
  441410:	ldr	x2, [x0]
  441414:	stp	x25, x26, [sp, #64]
  441418:	ldr	x4, [x0, #32]
  44141c:	ldr	x0, [x20, #1312]
  441420:	sub	x1, x4, x2
  441424:	ldr	x3, [x20, #1320]
  441428:	str	x27, [sp, #80]
  44142c:	str	x0, [x20, #1328]
  441430:	add	x1, x1, #0x3
  441434:	stp	x2, x4, [x24, #16]
  441438:	sub	x3, x3, x0
  44143c:	cmp	x1, x3
  441440:	b.hi	44175c <nftw@plt+0x3ebdc>  // b.pmore
  441444:	ldrb	w0, [x2]
  441448:	cmp	w0, #0x28
  44144c:	b.eq	441590 <nftw@plt+0x3ea10>  // b.none
  441450:	adrp	x23, 481000 <_obstack_memory_used@@Base+0x1fbb8>
  441454:	add	x23, x23, #0xaf0
  441458:	mov	w22, #0x0                   	// #0
  44145c:	mov	w27, #0x0                   	// #0
  441460:	mov	w25, #0x0                   	// #0
  441464:	mov	x21, #0x0                   	// #0
  441468:	mov	x1, #0x30                  	// #48
  44146c:	mov	x0, x20
  441470:	bl	434e60 <nftw@plt+0x322e0>
  441474:	mov	x2, x0
  441478:	mov	w1, #0x2                   	// #2
  44147c:	mov	x0, x20
  441480:	bl	43ae28 <nftw@plt+0x382a8>
  441484:	ldrb	w1, [x0, #19]
  441488:	mov	x19, x0
  44148c:	str	x21, [x0]
  441490:	strh	w27, [x0, #16]
  441494:	bfi	w1, w22, #2, #1
  441498:	strb	w1, [x0, #19]
  44149c:	ldrb	w21, [x20, #1124]
  4414a0:	ldr	x22, [x20]
  4414a4:	ldr	x0, [x24, #16]
  4414a8:	ldr	x4, [x20, #1328]
  4414ac:	mov	x1, x0
  4414b0:	mov	x3, x4
  4414b4:	ldrb	w5, [x1], #1
  4414b8:	strb	w5, [x3], #1
  4414bc:	mov	x2, x5
  4414c0:	ldrh	w5, [x23, x5, lsl #1]
  4414c4:	tbnz	w5, #11, 441584 <nftw@plt+0x3ea04>
  4414c8:	cmp	w2, #0x2f
  4414cc:	b.ne	4414e0 <nftw@plt+0x3e960>  // b.any
  4414d0:	ldrb	w2, [x0, #1]
  4414d4:	cmp	w2, #0x2a
  4414d8:	ccmp	w21, #0x0, #0x4, eq  // eq = none
  4414dc:	b.ne	441784 <nftw@plt+0x3ec04>  // b.any
  4414e0:	str	x4, [x20, #1328]
  4414e4:	mov	x1, x19
  4414e8:	str	x0, [x22]
  4414ec:	mov	w2, #0x0                   	// #0
  4414f0:	mov	x0, x20
  4414f4:	ldrb	w3, [x20, #24]
  4414f8:	add	w3, w3, #0x1
  4414fc:	strb	w3, [x20, #24]
  441500:	bl	440120 <nftw@plt+0x3d5a0>
  441504:	ldrb	w2, [x20, #24]
  441508:	mov	w1, w25
  44150c:	mov	x0, x20
  441510:	sub	w2, w2, #0x1
  441514:	strb	w2, [x20, #24]
  441518:	bl	43ade0 <nftw@plt+0x38260>
  44151c:	cbz	x19, 441564 <nftw@plt+0x3e9e4>
  441520:	ldr	x0, [x20, #1312]
  441524:	ldr	x1, [x20, #1328]
  441528:	cmp	x0, x1
  44152c:	b.cc	441540 <nftw@plt+0x3e9c0>  // b.lo, b.ul, b.last
  441530:	b	441550 <nftw@plt+0x3e9d0>
  441534:	sub	x1, x1, #0x1
  441538:	cmp	x0, x1
  44153c:	b.eq	441550 <nftw@plt+0x3e9d0>  // b.none
  441540:	ldurb	w2, [x1, #-1]
  441544:	ldrh	w2, [x23, x2, lsl #1]
  441548:	tst	w2, #0xc00
  44154c:	b.ne	441534 <nftw@plt+0x3e9b4>  // b.any
  441550:	str	x1, [x20, #1328]
  441554:	mov	x0, x20
  441558:	mov	x1, x19
  44155c:	mov	w2, #0x0                   	// #0
  441560:	bl	43ffa8 <nftw@plt+0x3d428>
  441564:	mov	x0, x19
  441568:	ldp	x19, x20, [sp, #16]
  44156c:	ldp	x21, x22, [sp, #32]
  441570:	ldp	x23, x24, [sp, #48]
  441574:	ldp	x25, x26, [sp, #64]
  441578:	ldr	x27, [sp, #80]
  44157c:	ldp	x29, x30, [sp], #96
  441580:	ret
  441584:	mov	x4, x3
  441588:	mov	x0, x1
  44158c:	b	4414ac <nftw@plt+0x3e92c>
  441590:	ldr	x0, [x20, #136]
  441594:	adrp	x23, 481000 <_obstack_memory_used@@Base+0x1fbb8>
  441598:	ldr	x3, [x20, #1328]
  44159c:	add	x23, x23, #0xaf0
  4415a0:	ldr	x21, [x0, #16]
  4415a4:	add	x19, x3, #0x1
  4415a8:	mov	w25, #0x0                   	// #0
  4415ac:	mov	w26, #0x204                 	// #516
  4415b0:	add	x21, x21, #0x1
  4415b4:	nop
  4415b8:	mov	x1, x21
  4415bc:	ldrb	w2, [x1], #1
  4415c0:	sturb	w2, [x19, #-1]
  4415c4:	mov	x0, x2
  4415c8:	ldrh	w2, [x23, x2, lsl #1]
  4415cc:	tbnz	w2, #11, 441618 <nftw@plt+0x3ea98>
  4415d0:	cmp	w0, #0x2f
  4415d4:	b.ne	441628 <nftw@plt+0x3eaa8>  // b.any
  4415d8:	ldrb	w0, [x21, #1]
  4415dc:	cmp	w0, #0x2a
  4415e0:	b.ne	441628 <nftw@plt+0x3eaa8>  // b.any
  4415e4:	str	x19, [x20, #1328]
  4415e8:	mov	w2, #0x0                   	// #0
  4415ec:	mov	x0, x20
  4415f0:	bl	43fdf8 <nftw@plt+0x3d278>
  4415f4:	mov	x21, x0
  4415f8:	mov	x1, x21
  4415fc:	ldr	x3, [x20, #1328]
  441600:	ldrb	w2, [x1], #1
  441604:	add	x19, x3, #0x1
  441608:	mov	x0, x2
  44160c:	sturb	w2, [x19, #-1]
  441610:	ldrh	w2, [x23, x2, lsl #1]
  441614:	tbz	w2, #11, 4415d0 <nftw@plt+0x3ea50>
  441618:	mov	x3, x19
  44161c:	mov	x21, x1
  441620:	add	x19, x19, #0x1
  441624:	b	4415b8 <nftw@plt+0x3ea38>
  441628:	str	x3, [x20, #1328]
  44162c:	ldrb	w1, [x21]
  441630:	ldrh	w0, [x23, w1, sxtw #1]
  441634:	and	w27, w0, #0x200
  441638:	tbnz	w0, #9, 44164c <nftw@plt+0x3eacc>
  44163c:	cmp	w1, #0x24
  441640:	b.ne	4417d0 <nftw@plt+0x3ec50>  // b.any
  441644:	ldrb	w0, [x20, #1146]
  441648:	cbz	w0, 44179c <nftw@plt+0x3ec1c>
  44164c:	mov	x2, x21
  441650:	b	441658 <nftw@plt+0x3ead8>
  441654:	add	x19, x19, #0x1
  441658:	ldrb	w0, [x2], #1
  44165c:	sturb	w0, [x19, #-1]
  441660:	ldrb	w0, [x2]
  441664:	ldrh	w0, [x23, x0, lsl #1]
  441668:	tst	w26, w0
  44166c:	b.ne	441654 <nftw@plt+0x3ead4>  // b.any
  441670:	ldr	x4, [x20, #136]
  441674:	mov	w3, #0x1                   	// #1
  441678:	ldr	x0, [x20, #1088]
  44167c:	ldr	x1, [x20, #1328]
  441680:	str	x2, [x4, #16]
  441684:	sub	x2, x19, x1
  441688:	bl	43f8e8 <nftw@plt+0x3cd68>
  44168c:	str	x19, [x20, #1328]
  441690:	mov	x3, x0
  441694:	mov	x2, x0
  441698:	mov	w1, w25
  44169c:	mov	x0, x20
  4416a0:	bl	43acc8 <nftw@plt+0x38148>
  4416a4:	tst	w0, #0xff
  4416a8:	b.eq	44179c <nftw@plt+0x3ec1c>  // b.none
  4416ac:	ldr	x0, [x20, #136]
  4416b0:	add	w25, w25, #0x1
  4416b4:	ldr	x3, [x20, #1328]
  4416b8:	ldr	x22, [x0, #16]
  4416bc:	nop
  4416c0:	mov	x19, x3
  4416c4:	ldrb	w6, [x22]
  4416c8:	add	x4, x22, #0x1
  4416cc:	mov	x1, x4
  4416d0:	mov	x0, x20
  4416d4:	mov	x5, x6
  4416d8:	strb	w6, [x19], #1
  4416dc:	mov	x21, x4
  4416e0:	mov	w2, #0x0                   	// #0
  4416e4:	ldrh	w6, [x23, x6, lsl #1]
  4416e8:	tbnz	w6, #11, 441714 <nftw@plt+0x3eb94>
  4416ec:	cmp	w5, #0x2f
  4416f0:	b.ne	441720 <nftw@plt+0x3eba0>  // b.any
  4416f4:	ldrb	w5, [x22, #1]
  4416f8:	cmp	w5, #0x2a
  4416fc:	b.ne	441720 <nftw@plt+0x3eba0>  // b.any
  441700:	str	x19, [x20, #1328]
  441704:	bl	43fdf8 <nftw@plt+0x3d278>
  441708:	mov	x22, x0
  44170c:	ldr	x3, [x20, #1328]
  441710:	b	4416c0 <nftw@plt+0x3eb40>
  441714:	mov	x3, x19
  441718:	mov	x22, x4
  44171c:	b	4416c0 <nftw@plt+0x3eb40>
  441720:	str	x3, [x20, #1328]
  441724:	ldrb	w0, [x22]
  441728:	cmp	w0, #0x2c
  44172c:	b.eq	4415b8 <nftw@plt+0x3ea38>  // b.none
  441730:	cmp	w0, #0x29
  441734:	ubfiz	x1, x25, #3, #32
  441738:	and	w27, w25, #0xffff
  44173c:	b.ne	4417a0 <nftw@plt+0x3ec20>  // b.any
  441740:	ldr	x2, [x20, #136]
  441744:	mov	x0, x20
  441748:	mov	w22, #0x1                   	// #1
  44174c:	str	x4, [x2, #16]
  441750:	bl	434f48 <nftw@plt+0x323c8>
  441754:	mov	x21, x0
  441758:	b	441468 <nftw@plt+0x3e8e8>
  44175c:	add	x1, x1, x1, lsl #1
  441760:	lsr	x19, x1, #1
  441764:	mov	x1, x19
  441768:	bl	4615e8 <_obstack_memory_used@@Base+0x1a0>
  44176c:	add	x19, x0, x19
  441770:	ldr	x2, [x24, #16]
  441774:	str	x0, [x20, #1312]
  441778:	str	x19, [x20, #1320]
  44177c:	str	x0, [x20, #1328]
  441780:	b	441444 <nftw@plt+0x3e8c4>
  441784:	str	x3, [x20, #1328]
  441788:	mov	x0, x20
  44178c:	mov	w2, #0x0                   	// #0
  441790:	bl	43fdf8 <nftw@plt+0x3d278>
  441794:	ldr	x4, [x20, #1328]
  441798:	b	4414ac <nftw@plt+0x3e92c>
  44179c:	mov	x22, x21
  4417a0:	mov	w1, #0x3                   	// #3
  4417a4:	mov	x0, x20
  4417a8:	adrp	x2, 47e000 <_obstack_memory_used@@Base+0x1cbb8>
  4417ac:	add	x2, x2, #0x810
  4417b0:	bl	427178 <nftw@plt+0x245f8>
  4417b4:	mov	x19, #0x0                   	// #0
  4417b8:	ldr	x0, [x20, #136]
  4417bc:	ldrb	w1, [x22]
  4417c0:	cmp	w1, #0x29
  4417c4:	cinc	x22, x22, eq  // eq = none
  4417c8:	str	x22, [x0, #16]
  4417cc:	b	44149c <nftw@plt+0x3e91c>
  4417d0:	cmp	w1, #0x29
  4417d4:	ccmp	w25, #0x0, #0x0, eq  // eq = none
  4417d8:	b.ne	44179c <nftw@plt+0x3ec1c>  // b.any
  4417dc:	add	x4, x21, #0x1
  4417e0:	mov	x1, #0x0                   	// #0
  4417e4:	mov	w25, #0x0                   	// #0
  4417e8:	b	441740 <nftw@plt+0x3ebc0>
  4417ec:	nop
  4417f0:	stp	x29, x30, [sp, #-112]!
  4417f4:	mov	x29, sp
  4417f8:	stp	x19, x20, [sp, #16]
  4417fc:	mov	x20, x1
  441800:	ldr	w1, [x0, #12]
  441804:	mov	x19, x0
  441808:	stp	x25, x26, [sp, #64]
  44180c:	ldr	w0, [x20, #12]
  441810:	stp	x27, x28, [sp, #80]
  441814:	add	w0, w1, w0
  441818:	bl	461560 <_obstack_memory_used@@Base+0x118>
  44181c:	mov	x25, x0
  441820:	ldrh	w1, [x19, #16]
  441824:	ldr	w3, [x19, #12]
  441828:	add	x28, x0, x3
  44182c:	cbz	w1, 441a30 <nftw@plt+0x3eeb0>
  441830:	stp	x23, x24, [sp, #48]
  441834:	ldr	x23, [x20, #24]
  441838:	stp	x21, x22, [sp, #32]
  44183c:	mov	w20, #0x0                   	// #0
  441840:	ldr	x24, [x19, #24]
  441844:	mov	w21, #0x0                   	// #0
  441848:	ldrh	w0, [x23, #4]
  44184c:	ldrh	w9, [x24, #4]
  441850:	cmp	w0, w9
  441854:	b.ne	4419f0 <nftw@plt+0x3ee70>  // b.any
  441858:	adrp	x22, 481000 <_obstack_memory_used@@Base+0x1fbb8>
  44185c:	add	x22, x22, #0xaf0
  441860:	mov	w27, #0x20                  	// #32
  441864:	mov	w26, #0x27                  	// #39
  441868:	mov	x4, x24
  44186c:	mov	x3, x23
  441870:	ldr	w19, [x4], #6
  441874:	ldr	w8, [x3], #6
  441878:	cbz	x19, 441a1c <nftw@plt+0x3ee9c>
  44187c:	add	x7, x25, #0x1
  441880:	mov	x6, x19
  441884:	b	4418a8 <nftw@plt+0x3ed28>
  441888:	cmp	w20, w5
  44188c:	csel	w20, w20, wzr, ne  // ne = any
  441890:	sturb	w5, [x7, #-1]
  441894:	mov	x2, x7
  441898:	add	x4, x4, #0x1
  44189c:	sub	x6, x6, #0x1
  4418a0:	add	x7, x7, #0x1
  4418a4:	cbz	x6, 441908 <nftw@plt+0x3ed88>
  4418a8:	ldrb	w5, [x4]
  4418ac:	ldrh	w0, [x22, w5, sxtw #1]
  4418b0:	tst	w0, #0xc00
  4418b4:	ccmp	w20, #0x0, #0x0, ne  // ne = any
  4418b8:	b.eq	4418e4 <nftw@plt+0x3ed64>  // b.none
  4418bc:	cmp	w5, #0x22
  4418c0:	ccmp	w5, w26, #0x4, ne  // ne = any
  4418c4:	b.ne	441890 <nftw@plt+0x3ed10>  // b.any
  4418c8:	cbnz	w20, 441888 <nftw@plt+0x3ed08>
  4418cc:	mov	w20, w5
  4418d0:	b	441890 <nftw@plt+0x3ed10>
  4418d4:	ldrb	w0, [x4]
  4418d8:	ldrh	w0, [x22, x0, lsl #1]
  4418dc:	tst	w0, #0xc00
  4418e0:	b.eq	4418f0 <nftw@plt+0x3ed70>  // b.none
  4418e4:	add	x4, x4, #0x1
  4418e8:	subs	x6, x6, #0x1
  4418ec:	b.ne	4418d4 <nftw@plt+0x3ed54>  // b.any
  4418f0:	sturb	w27, [x7, #-1]
  4418f4:	mov	x2, x7
  4418f8:	mov	w20, #0x0                   	// #0
  4418fc:	add	x7, x7, #0x1
  441900:	cbnz	x6, 4418a8 <nftw@plt+0x3ed28>
  441904:	nop
  441908:	sub	x2, x2, x25
  44190c:	cbz	x8, 441a28 <nftw@plt+0x3eea8>
  441910:	add	x6, x28, #0x1
  441914:	mov	x5, x8
  441918:	b	44193c <nftw@plt+0x3edbc>
  44191c:	cmp	w4, w21
  441920:	csel	w21, w21, wzr, ne  // ne = any
  441924:	sturb	w4, [x6, #-1]
  441928:	mov	x7, x6
  44192c:	add	x3, x3, #0x1
  441930:	sub	x5, x5, #0x1
  441934:	add	x6, x6, #0x1
  441938:	cbz	x5, 441998 <nftw@plt+0x3ee18>
  44193c:	ldrb	w4, [x3]
  441940:	ldrh	w0, [x22, w4, sxtw #1]
  441944:	tst	w0, #0xc00
  441948:	ccmp	w21, #0x0, #0x0, ne  // ne = any
  44194c:	b.eq	441978 <nftw@plt+0x3edf8>  // b.none
  441950:	cmp	w4, #0x22
  441954:	ccmp	w4, w26, #0x4, ne  // ne = any
  441958:	b.ne	441924 <nftw@plt+0x3eda4>  // b.any
  44195c:	cbnz	w21, 44191c <nftw@plt+0x3ed9c>
  441960:	mov	w21, w4
  441964:	b	441924 <nftw@plt+0x3eda4>
  441968:	ldrb	w0, [x3]
  44196c:	ldrh	w0, [x22, x0, lsl #1]
  441970:	tst	w0, #0xc00
  441974:	b.eq	441984 <nftw@plt+0x3ee04>  // b.none
  441978:	add	x3, x3, #0x1
  44197c:	subs	x5, x5, #0x1
  441980:	b.ne	441968 <nftw@plt+0x3ede8>  // b.any
  441984:	sturb	w27, [x6, #-1]
  441988:	mov	x7, x6
  44198c:	mov	w21, #0x0                   	// #0
  441990:	add	x6, x6, #0x1
  441994:	cbnz	x5, 44193c <nftw@plt+0x3edbc>
  441998:	sub	x7, x7, x28
  44199c:	str	w9, [sp, #100]
  4419a0:	cmp	x2, x7
  4419a4:	str	x8, [sp, #104]
  4419a8:	b.ne	4419f0 <nftw@plt+0x3ee70>  // b.any
  4419ac:	mov	x1, x28
  4419b0:	mov	x0, x25
  4419b4:	bl	402850 <memcmp@plt>
  4419b8:	ldr	w9, [sp, #100]
  4419bc:	ldr	x8, [sp, #104]
  4419c0:	cbnz	w0, 4419f0 <nftw@plt+0x3ee70>
  4419c4:	cbz	w9, 441bb0 <nftw@plt+0x3f030>
  4419c8:	add	x19, x19, #0xd
  4419cc:	add	x2, x8, #0xd
  4419d0:	and	x19, x19, #0xfffffffffffffff8
  4419d4:	and	x2, x2, #0xfffffffffffffff8
  4419d8:	add	x24, x24, x19
  4419dc:	add	x23, x23, x2
  4419e0:	ldrh	w9, [x24, #4]
  4419e4:	ldrh	w0, [x23, #4]
  4419e8:	cmp	w0, w9
  4419ec:	b.eq	441868 <nftw@plt+0x3ece8>  // b.none
  4419f0:	ldp	x21, x22, [sp, #32]
  4419f4:	ldp	x23, x24, [sp, #48]
  4419f8:	mov	x0, x25
  4419fc:	mov	w19, #0x1                   	// #1
  441a00:	bl	402910 <free@plt>
  441a04:	mov	w0, w19
  441a08:	ldp	x19, x20, [sp, #16]
  441a0c:	ldp	x25, x26, [sp, #64]
  441a10:	ldp	x27, x28, [sp, #80]
  441a14:	ldp	x29, x30, [sp], #112
  441a18:	ret
  441a1c:	cbz	x8, 4419c4 <nftw@plt+0x3ee44>
  441a20:	mov	x2, #0x0                   	// #0
  441a24:	b	441910 <nftw@plt+0x3ed90>
  441a28:	mov	x7, #0x0                   	// #0
  441a2c:	b	44199c <nftw@plt+0x3ee1c>
  441a30:	ldr	w2, [x20, #12]
  441a34:	ldr	x4, [x19, #24]
  441a38:	ldr	x0, [x20, #24]
  441a3c:	cbz	x3, 441bdc <nftw@plt+0x3f05c>
  441a40:	adrp	x5, 481000 <_obstack_memory_used@@Base+0x1fbb8>
  441a44:	add	x6, x25, #0x1
  441a48:	add	x5, x5, #0xaf0
  441a4c:	mov	w7, #0x0                   	// #0
  441a50:	mov	w10, #0x20                  	// #32
  441a54:	mov	w9, #0x27                  	// #39
  441a58:	b	441a7c <nftw@plt+0x3eefc>
  441a5c:	cmp	w1, w7
  441a60:	csel	w7, w7, wzr, ne  // ne = any
  441a64:	sturb	w1, [x6, #-1]
  441a68:	mov	x8, x6
  441a6c:	add	x4, x4, #0x1
  441a70:	sub	x3, x3, #0x1
  441a74:	add	x6, x6, #0x1
  441a78:	cbz	x3, 441ad8 <nftw@plt+0x3ef58>
  441a7c:	ldrb	w1, [x4]
  441a80:	ldrh	w8, [x5, w1, sxtw #1]
  441a84:	tst	w8, #0xc00
  441a88:	ccmp	w7, #0x0, #0x0, ne  // ne = any
  441a8c:	b.eq	441ab8 <nftw@plt+0x3ef38>  // b.none
  441a90:	cmp	w1, #0x22
  441a94:	ccmp	w1, w9, #0x4, ne  // ne = any
  441a98:	b.ne	441a64 <nftw@plt+0x3eee4>  // b.any
  441a9c:	cbnz	w7, 441a5c <nftw@plt+0x3eedc>
  441aa0:	mov	w7, w1
  441aa4:	b	441a64 <nftw@plt+0x3eee4>
  441aa8:	ldrb	w1, [x4]
  441aac:	ldrh	w1, [x5, x1, lsl #1]
  441ab0:	tst	w1, #0xc00
  441ab4:	b.eq	441ac4 <nftw@plt+0x3ef44>  // b.none
  441ab8:	add	x4, x4, #0x1
  441abc:	subs	x3, x3, #0x1
  441ac0:	b.ne	441aa8 <nftw@plt+0x3ef28>  // b.any
  441ac4:	sturb	w10, [x6, #-1]
  441ac8:	mov	x8, x6
  441acc:	mov	w7, #0x0                   	// #0
  441ad0:	add	x6, x6, #0x1
  441ad4:	cbnz	x3, 441a7c <nftw@plt+0x3eefc>
  441ad8:	sub	x3, x8, x25
  441adc:	cbz	x2, 441b74 <nftw@plt+0x3eff4>
  441ae0:	add	x4, x28, #0x1
  441ae4:	mov	w6, #0x0                   	// #0
  441ae8:	mov	w9, #0x20                  	// #32
  441aec:	mov	w8, #0x27                  	// #39
  441af0:	b	441b14 <nftw@plt+0x3ef94>
  441af4:	cmp	w6, w1
  441af8:	csel	w6, w6, wzr, ne  // ne = any
  441afc:	sturb	w1, [x4, #-1]
  441b00:	mov	x7, x4
  441b04:	add	x0, x0, #0x1
  441b08:	sub	x2, x2, #0x1
  441b0c:	add	x4, x4, #0x1
  441b10:	cbz	x2, 441b70 <nftw@plt+0x3eff0>
  441b14:	ldrb	w1, [x0]
  441b18:	ldrh	w7, [x5, w1, sxtw #1]
  441b1c:	tst	w7, #0xc00
  441b20:	ccmp	w6, #0x0, #0x0, ne  // ne = any
  441b24:	b.eq	441b50 <nftw@plt+0x3efd0>  // b.none
  441b28:	cmp	w1, #0x22
  441b2c:	ccmp	w1, w8, #0x4, ne  // ne = any
  441b30:	b.ne	441afc <nftw@plt+0x3ef7c>  // b.any
  441b34:	cbnz	w6, 441af4 <nftw@plt+0x3ef74>
  441b38:	mov	w6, w1
  441b3c:	b	441afc <nftw@plt+0x3ef7c>
  441b40:	ldrb	w1, [x0]
  441b44:	ldrh	w1, [x5, x1, lsl #1]
  441b48:	tst	w1, #0xc00
  441b4c:	b.eq	441b5c <nftw@plt+0x3efdc>  // b.none
  441b50:	add	x0, x0, #0x1
  441b54:	subs	x2, x2, #0x1
  441b58:	b.ne	441b40 <nftw@plt+0x3efc0>  // b.any
  441b5c:	sturb	w9, [x4, #-1]
  441b60:	mov	x7, x4
  441b64:	mov	w6, #0x0                   	// #0
  441b68:	add	x4, x4, #0x1
  441b6c:	cbnz	x2, 441b14 <nftw@plt+0x3ef94>
  441b70:	sub	x2, x7, x28
  441b74:	cmp	x3, x2
  441b78:	b.ne	4419f8 <nftw@plt+0x3ee78>  // b.any
  441b7c:	mov	x1, x28
  441b80:	mov	x0, x25
  441b84:	bl	402850 <memcmp@plt>
  441b88:	cmp	w0, #0x0
  441b8c:	cset	w19, ne  // ne = any
  441b90:	mov	x0, x25
  441b94:	bl	402910 <free@plt>
  441b98:	mov	w0, w19
  441b9c:	ldp	x19, x20, [sp, #16]
  441ba0:	ldp	x25, x26, [sp, #64]
  441ba4:	ldp	x27, x28, [sp, #80]
  441ba8:	ldp	x29, x30, [sp], #112
  441bac:	ret
  441bb0:	mov	x0, x25
  441bb4:	mov	w19, #0x0                   	// #0
  441bb8:	ldp	x21, x22, [sp, #32]
  441bbc:	ldp	x23, x24, [sp, #48]
  441bc0:	bl	402910 <free@plt>
  441bc4:	mov	w0, w19
  441bc8:	ldp	x19, x20, [sp, #16]
  441bcc:	ldp	x25, x26, [sp, #64]
  441bd0:	ldp	x27, x28, [sp, #80]
  441bd4:	ldp	x29, x30, [sp], #112
  441bd8:	ret
  441bdc:	cbz	x2, 441b7c <nftw@plt+0x3effc>
  441be0:	adrp	x5, 481000 <_obstack_memory_used@@Base+0x1fbb8>
  441be4:	add	x5, x5, #0xaf0
  441be8:	b	441ae0 <nftw@plt+0x3ef60>
  441bec:	nop
  441bf0:	stp	x29, x30, [sp, #-48]!
  441bf4:	mov	x29, sp
  441bf8:	stp	x19, x20, [sp, #16]
  441bfc:	mov	x19, x0
  441c00:	str	x21, [sp, #32]
  441c04:	bl	433140 <nftw@plt+0x305c0>
  441c08:	ldrb	w0, [x0, #4]
  441c0c:	cmp	w0, #0x25
  441c10:	mov	x0, x19
  441c14:	b.eq	441c34 <nftw@plt+0x3f0b4>  // b.none
  441c18:	mov	w1, #0x1                   	// #1
  441c1c:	bl	43ab60 <nftw@plt+0x37fe0>
  441c20:	mov	sp, x29
  441c24:	ldp	x19, x20, [sp, #16]
  441c28:	ldr	x21, [sp, #32]
  441c2c:	ldp	x29, x30, [sp], #48
  441c30:	ret
  441c34:	bl	433140 <nftw@plt+0x305c0>
  441c38:	ldrb	w0, [x0, #4]
  441c3c:	cmp	w0, #0x37
  441c40:	mov	x0, x19
  441c44:	b.eq	441c64 <nftw@plt+0x3f0e4>  // b.none
  441c48:	mov	w1, #0x2                   	// #2
  441c4c:	bl	43ab60 <nftw@plt+0x37fe0>
  441c50:	mov	sp, x29
  441c54:	ldp	x19, x20, [sp, #16]
  441c58:	ldr	x21, [sp, #32]
  441c5c:	ldp	x29, x30, [sp], #48
  441c60:	ret
  441c64:	bl	433140 <nftw@plt+0x305c0>
  441c68:	mov	x20, x0
  441c6c:	ldrb	w0, [x0, #4]
  441c70:	cmp	w0, #0x3e
  441c74:	b.ne	441cf0 <nftw@plt+0x3f170>  // b.any
  441c78:	ldr	w2, [x20, #8]
  441c7c:	cmp	w2, #0x4
  441c80:	b.ls	441cf0 <nftw@plt+0x3f170>  // b.plast
  441c84:	ldr	x1, [x20, #16]
  441c88:	sub	w0, w2, #0x2
  441c8c:	ldrb	w0, [x1, w0, uxtw]
  441c90:	cmp	w0, #0x2f
  441c94:	b.ne	441cf0 <nftw@plt+0x3f170>  // b.any
  441c98:	sub	w3, w2, #0x3
  441c9c:	ldrb	w0, [x1, w3, uxtw]
  441ca0:	cmp	w0, #0x2f
  441ca4:	b.ne	441cf0 <nftw@plt+0x3f170>  // b.any
  441ca8:	ldr	x21, [x19, #920]
  441cac:	cbz	x21, 441c20 <nftw@plt+0x3f0a0>
  441cb0:	add	x0, x3, #0xf
  441cb4:	sub	w2, w2, #0x4
  441cb8:	and	x0, x0, #0x1fffffff0
  441cbc:	add	x1, x1, #0x1
  441cc0:	sub	sp, sp, x0
  441cc4:	mov	x3, sp
  441cc8:	mov	x0, x3
  441ccc:	bl	402490 <memcpy@plt>
  441cd0:	mov	x3, x0
  441cd4:	ldr	w2, [x20, #8]
  441cd8:	mov	x1, x0
  441cdc:	mov	x0, x19
  441ce0:	sub	w2, w2, #0x4
  441ce4:	strb	wzr, [x3, w2, uxtw]
  441ce8:	blr	x21
  441cec:	b	441c20 <nftw@plt+0x3f0a0>
  441cf0:	mov	x0, x19
  441cf4:	mov	w1, #0x3                   	// #3
  441cf8:	bl	43ab60 <nftw@plt+0x37fe0>
  441cfc:	mov	sp, x29
  441d00:	ldp	x19, x20, [sp, #16]
  441d04:	ldr	x21, [sp, #32]
  441d08:	ldp	x29, x30, [sp], #48
  441d0c:	ret
  441d10:	sbfiz	x3, x1, #4, #32
  441d14:	adrp	x4, 47e000 <_obstack_memory_used@@Base+0x1cbb8>
  441d18:	sub	x3, x3, w1, sxtw
  441d1c:	add	x4, x4, #0xc20
  441d20:	add	x2, x4, x3
  441d24:	str	w1, [x0, #1116]
  441d28:	add	x5, x0, #0x400
  441d2c:	ldrb	w6, [x4, x3]
  441d30:	ldrb	w1, [x2, #4]
  441d34:	ldrb	w4, [x2, #5]
  441d38:	ldrb	w3, [x2, #9]
  441d3c:	ldrb	w12, [x2, #1]
  441d40:	ldrb	w10, [x2, #2]
  441d44:	ldrb	w7, [x2, #3]
  441d48:	ldrb	w11, [x2, #6]
  441d4c:	ldrb	w9, [x2, #7]
  441d50:	ldrb	w8, [x2, #8]
  441d54:	strb	w12, [x0, #1120]
  441d58:	strb	w11, [x0, #1126]
  441d5c:	strb	w10, [x0, #1127]
  441d60:	strb	w9, [x0, #1128]
  441d64:	strb	w8, [x0, #1130]
  441d68:	strb	w7, [x0, #1147]
  441d6c:	strb	w6, [x0, #1152]
  441d70:	strb	w4, [x0, #1153]
  441d74:	strb	w3, [x0, #1161]
  441d78:	strb	w1, [x0, #1164]
  441d7c:	ldrb	w4, [x2, #12]
  441d80:	ldrh	w1, [x2, #10]
  441d84:	ldrb	w3, [x2, #13]
  441d88:	sturh	w1, [x5, #141]
  441d8c:	ldrb	w1, [x2, #14]
  441d90:	strb	w4, [x0, #1125]
  441d94:	strb	w3, [x0, #1129]
  441d98:	strb	w1, [x0, #1167]
  441d9c:	ret
  441da0:	stp	x29, x30, [sp, #-64]!
  441da4:	adrp	x3, 4a5000 <__environ@@GLIBC_2.17+0xa68>
  441da8:	mov	x29, sp
  441dac:	ldr	w4, [x3, #2464]
  441db0:	stp	x19, x20, [sp, #16]
  441db4:	mov	w20, w0
  441db8:	stp	x21, x22, [sp, #32]
  441dbc:	mov	x22, x2
  441dc0:	str	x23, [sp, #48]
  441dc4:	mov	x23, x1
  441dc8:	cbz	w4, 441ff8 <nftw@plt+0x3f478>
  441dcc:	mov	x1, #0x588                 	// #1416
  441dd0:	mov	x0, #0x1                   	// #1
  441dd4:	bl	461598 <_obstack_memory_used@@Base+0x150>
  441dd8:	mov	x19, x0
  441ddc:	sbfiz	x3, x20, #4, #32
  441de0:	adrp	x5, 47e000 <_obstack_memory_used@@Base+0x1cbb8>
  441de4:	sub	x0, x3, w20, sxtw
  441de8:	add	x5, x5, #0xc20
  441dec:	add	x3, x5, x0
  441df0:	add	x4, x19, #0x400
  441df4:	stp	xzr, xzr, [x19, #80]
  441df8:	mov	w1, #0x101                 	// #257
  441dfc:	ldrb	w13, [x5, x0]
  441e00:	ldrb	w15, [x3, #1]
  441e04:	mov	w8, #0x8                   	// #8
  441e08:	ldrb	w9, [x3, #6]
  441e0c:	mov	w7, #0xff                  	// #255
  441e10:	ldrb	w11, [x3, #2]
  441e14:	mov	w6, #0x102                 	// #258
  441e18:	strb	w15, [x19, #1120]
  441e1c:	mov	w0, #0x1                   	// #1
  441e20:	ldrb	w15, [x3, #7]
  441e24:	mov	w2, #0x100                 	// #256
  441e28:	strb	w9, [x19, #1126]
  441e2c:	mov	w5, #0x1                   	// #1
  441e30:	ldrb	w9, [x3, #8]
  441e34:	add	x21, x19, #0x50
  441e38:	stp	xzr, xzr, [x19, #96]
  441e3c:	ldrb	w14, [x3, #3]
  441e40:	stp	xzr, xzr, [x19, #112]
  441e44:	ldrb	w12, [x3, #5]
  441e48:	str	xzr, [x19, #128]
  441e4c:	strb	w11, [x19, #1127]
  441e50:	strb	w15, [x19, #1128]
  441e54:	strb	w9, [x19, #1130]
  441e58:	ldrb	w11, [x3, #9]
  441e5c:	ldrb	w10, [x3, #4]
  441e60:	ldrh	w9, [x3, #10]
  441e64:	str	w20, [x19, #1116]
  441e68:	add	x20, x19, #0x1c8
  441e6c:	strb	w14, [x19, #1147]
  441e70:	strb	w13, [x19, #1152]
  441e74:	strb	w12, [x19, #1153]
  441e78:	strb	w11, [x19, #1161]
  441e7c:	strb	w10, [x19, #1164]
  441e80:	ldrb	w10, [x3, #12]
  441e84:	sturh	w9, [x4, #141]
  441e88:	ldrb	w9, [x3, #13]
  441e8c:	ldrb	w3, [x3, #14]
  441e90:	strb	w10, [x19, #1125]
  441e94:	strb	w9, [x19, #1129]
  441e98:	strb	w3, [x19, #1167]
  441e9c:	adrp	x3, 47e000 <_obstack_memory_used@@Base+0x1cbb8>
  441ea0:	sturh	w1, [x4, #99]
  441ea4:	ldr	q1, [x3, #3072]
  441ea8:	adrp	x3, 47e000 <_obstack_memory_used@@Base+0x1cbb8>
  441eac:	str	w8, [x19, #1112]
  441eb0:	strb	w0, [x19, #1132]
  441eb4:	strh	w6, [x19, #1136]
  441eb8:	strh	w7, [x19, #1198]
  441ebc:	sturh	w2, [x4, #115]
  441ec0:	ldr	q0, [x3, #3088]
  441ec4:	strh	w1, [x19, #1142]
  441ec8:	strb	wzr, [x19, #1144]
  441ecc:	strb	w0, [x19, #1146]
  441ed0:	strb	w0, [x19, #1148]
  441ed4:	sturh	w6, [x4, #133]
  441ed8:	strb	wzr, [x19, #1134]
  441edc:	strh	w1, [x19, #1162]
  441ee0:	str	w5, [x19, #1192]
  441ee4:	strb	w5, [x19, #1245]
  441ee8:	stur	q1, [x4, #184]
  441eec:	stur	q0, [x4, #200]
  441ef0:	strh	w2, [x19, #1240]
  441ef4:	strb	w0, [x19, #1242]
  441ef8:	bl	4220e8 <nftw@plt+0x1f568>
  441efc:	str	x0, [x19, #1168]
  441f00:	str	xzr, [x19, #1176]
  441f04:	bl	4220e8 <nftw@plt+0x1f568>
  441f08:	mov	x3, x0
  441f0c:	ldrb	w0, [x19, #1123]
  441f10:	adrp	x2, 472000 <_obstack_memory_used@@Base+0x10bb8>
  441f14:	add	x2, x2, #0x5c0
  441f18:	mov	w5, #0x53                  	// #83
  441f1c:	cmp	w0, #0x0
  441f20:	mov	w4, #0x16                  	// #22
  441f24:	cset	w6, eq  // eq = none
  441f28:	strb	w6, [x19, #21]
  441f2c:	str	x22, [x19, #40]
  441f30:	mov	x0, x20
  441f34:	str	x2, [x19, #224]
  441f38:	mov	w1, #0xfa                  	// #250
  441f3c:	strb	w5, [x19, #668]
  441f40:	str	xzr, [x19, #672]
  441f44:	strb	w4, [x19, #692]
  441f48:	strh	wzr, [x19, #694]
  441f4c:	str	x3, [x19, #1184]
  441f50:	bl	430068 <nftw@plt+0x2d4e8>
  441f54:	stp	xzr, xzr, [x19, #80]
  441f58:	mov	x0, x19
  441f5c:	ldr	x2, [x19, #472]
  441f60:	str	xzr, [x19, #120]
  441f64:	str	x21, [x19, #136]
  441f68:	mov	x1, #0x0                   	// #0
  441f6c:	str	x2, [x19, #448]
  441f70:	str	x20, [x19, #488]
  441f74:	bl	4314b0 <nftw@plt+0x2e930>
  441f78:	mov	x2, x0
  441f7c:	str	x2, [x19, #56]
  441f80:	mov	x0, x19
  441f84:	mov	x1, #0x0                   	// #0
  441f88:	bl	4314b0 <nftw@plt+0x2e930>
  441f8c:	mov	x2, x0
  441f90:	mov	x1, #0xfffffffffffffffe    	// #-2
  441f94:	str	x2, [x19, #64]
  441f98:	str	x1, [x19, #656]
  441f9c:	mov	x0, x19
  441fa0:	str	xzr, [x19, #1400]
  441fa4:	str	wzr, [x19, #1408]
  441fa8:	bl	42bd98 <nftw@plt+0x29218>
  441fac:	adrp	x4, 402000 <memcpy@plt-0x490>
  441fb0:	adrp	x3, 461000 <nftw@plt+0x5e480>
  441fb4:	add	x4, x4, #0x910
  441fb8:	add	x3, x3, #0x560
  441fbc:	mov	x2, #0x0                   	// #0
  441fc0:	mov	x1, #0x0                   	// #0
  441fc4:	add	x0, x19, #0x328
  441fc8:	bl	461058 <_obstack_begin@@Base>
  441fcc:	mov	x0, x19
  441fd0:	bl	42dc70 <nftw@plt+0x2b0f0>
  441fd4:	mov	x1, x23
  441fd8:	mov	x0, x19
  441fdc:	bl	42e9b8 <nftw@plt+0x2be38>
  441fe0:	mov	x0, x19
  441fe4:	ldp	x19, x20, [sp, #16]
  441fe8:	ldp	x21, x22, [sp, #32]
  441fec:	ldr	x23, [sp, #48]
  441ff0:	ldp	x29, x30, [sp], #64
  441ff4:	ret
  441ff8:	add	x19, x3, #0x9a0
  441ffc:	mov	w0, #0x1                   	// #1
  442000:	str	w0, [x3, #2464]
  442004:	bl	42f458 <nftw@plt+0x2c8d8>
  442008:	mov	w9, #0x7c                  	// #124
  44200c:	mov	w8, #0x5e                  	// #94
  442010:	mov	w7, #0x5d5b                	// #23899
  442014:	mov	w5, #0x5c                  	// #92
  442018:	mov	w4, #0x237b                	// #9083
  44201c:	mov	w3, #0x7d                  	// #125
  442020:	mov	w6, #0x7e                  	// #126
  442024:	strb	w9, [x19, #49]
  442028:	strb	w8, [x19, #55]
  44202c:	adrp	x1, 474000 <_obstack_memory_used@@Base+0x12bb8>
  442030:	strh	w7, [x19, #56]
  442034:	add	x1, x1, #0x10
  442038:	strb	w6, [x19, #61]
  44203c:	adrp	x0, 47b000 <_obstack_memory_used@@Base+0x19bb8>
  442040:	strb	w5, [x19, #63]
  442044:	add	x0, x0, #0xd68
  442048:	strh	w4, [x19, #76]
  44204c:	strb	w3, [x19, #78]
  442050:	bl	4026b0 <bindtextdomain@plt>
  442054:	b	441dcc <nftw@plt+0x3f24c>
  442058:	str	x1, [x0, #40]
  44205c:	ret
  442060:	stp	x29, x30, [sp, #-48]!
  442064:	mov	x29, sp
  442068:	stp	x19, x20, [sp, #16]
  44206c:	mov	x19, x0
  442070:	ldr	x0, [x0, #1096]
  442074:	stp	x21, x22, [sp, #32]
  442078:	bl	402910 <free@plt>
  44207c:	ldr	x0, [x19]
  442080:	cbz	x0, 442098 <nftw@plt+0x3f518>
  442084:	nop
  442088:	mov	x0, x19
  44208c:	bl	425cc0 <nftw@plt+0x23140>
  442090:	ldr	x0, [x19]
  442094:	cbnz	x0, 442088 <nftw@plt+0x3f508>
  442098:	ldr	x0, [x19, #1312]
  44209c:	bl	402910 <free@plt>
  4420a0:	ldr	x0, [x19, #504]
  4420a4:	cbz	x0, 4420b4 <nftw@plt+0x3f534>
  4420a8:	bl	402910 <free@plt>
  4420ac:	str	xzr, [x19, #504]
  4420b0:	str	wzr, [x19, #512]
  4420b4:	ldr	x0, [x19, #712]
  4420b8:	cbz	x0, 4420c0 <nftw@plt+0x3f540>
  4420bc:	bl	43ea58 <nftw@plt+0x3bed8>
  4420c0:	mov	x1, #0x0                   	// #0
  4420c4:	add	x0, x19, #0x328
  4420c8:	bl	461398 <_obstack_free@@Base>
  4420cc:	add	x22, x19, #0x1c8
  4420d0:	mov	x0, x19
  4420d4:	bl	42eb28 <nftw@plt+0x2bfa8>
  4420d8:	mov	x0, x19
  4420dc:	bl	42dd58 <nftw@plt+0x2b1d8>
  4420e0:	mov	x0, x19
  4420e4:	bl	41e020 <nftw@plt+0x1b4a0>
  4420e8:	ldr	x0, [x19, #56]
  4420ec:	bl	4316e8 <nftw@plt+0x2eb68>
  4420f0:	ldr	x0, [x19, #64]
  4420f4:	bl	4316e8 <nftw@plt+0x2eb68>
  4420f8:	ldr	x0, [x19, #72]
  4420fc:	bl	4316e8 <nftw@plt+0x2eb68>
  442100:	ldr	x0, [x22, #16]
  442104:	ldr	x20, [x19, #456]
  442108:	bl	402910 <free@plt>
  44210c:	cbz	x20, 442134 <nftw@plt+0x3f5b4>
  442110:	mov	x21, x20
  442114:	ldr	x20, [x20]
  442118:	ldr	x0, [x21, #16]
  44211c:	bl	402910 <free@plt>
  442120:	cmp	x22, x21
  442124:	b.eq	442130 <nftw@plt+0x3f5b0>  // b.none
  442128:	mov	x0, x21
  44212c:	bl	402910 <free@plt>
  442130:	cbnz	x20, 442110 <nftw@plt+0x3f590>
  442134:	ldr	x20, [x19, #80]
  442138:	cbz	x20, 442150 <nftw@plt+0x3f5d0>
  44213c:	nop
  442140:	mov	x0, x20
  442144:	ldr	x20, [x20]
  442148:	bl	402910 <free@plt>
  44214c:	cbnz	x20, 442140 <nftw@plt+0x3f5c0>
  442150:	ldr	x0, [x19, #1384]
  442154:	cbz	x0, 44218c <nftw@plt+0x3f60c>
  442158:	ldr	w1, [x19, #1392]
  44215c:	cmp	w1, #0x0
  442160:	b.le	442188 <nftw@plt+0x3f608>
  442164:	mov	x20, #0x0                   	// #0
  442168:	lsl	x1, x20, #4
  44216c:	add	x20, x20, #0x1
  442170:	ldr	x0, [x0, x1]
  442174:	bl	402910 <free@plt>
  442178:	ldr	w0, [x19, #1392]
  44217c:	cmp	w0, w20
  442180:	ldr	x0, [x19, #1384]
  442184:	b.gt	442168 <nftw@plt+0x3f5e8>
  442188:	bl	402910 <free@plt>
  44218c:	ldr	x20, [x19, #1400]
  442190:	cbz	x20, 4421b4 <nftw@plt+0x3f634>
  442194:	nop
  442198:	ldp	x1, x0, [x20]
  44219c:	str	x1, [x19, #1400]
  4421a0:	bl	402910 <free@plt>
  4421a4:	mov	x0, x20
  4421a8:	bl	402910 <free@plt>
  4421ac:	ldr	x20, [x19, #1400]
  4421b0:	cbnz	x20, 442198 <nftw@plt+0x3f618>
  4421b4:	mov	x0, x19
  4421b8:	ldp	x19, x20, [sp, #16]
  4421bc:	ldp	x21, x22, [sp, #32]
  4421c0:	ldp	x29, x30, [sp], #48
  4421c4:	b	402910 <free@plt>
  4421c8:	cmp	w0, #0xf
  4421cc:	b.eq	442228 <nftw@plt+0x3f6a8>  // b.none
  4421d0:	cmp	w0, #0x20
  4421d4:	b.eq	44223c <nftw@plt+0x3f6bc>  // b.none
  4421d8:	cmp	w0, #0x9
  4421dc:	b.eq	442264 <nftw@plt+0x3f6e4>  // b.none
  4421e0:	cmp	w0, #0xa
  4421e4:	b.eq	442278 <nftw@plt+0x3f6f8>  // b.none
  4421e8:	cmp	w0, #0xe
  4421ec:	b.eq	44228c <nftw@plt+0x3f70c>  // b.none
  4421f0:	cmp	w0, #0x1
  4421f4:	b.eq	4422a0 <nftw@plt+0x3f720>  // b.none
  4421f8:	cmp	w0, #0x18
  4421fc:	b.eq	4422b4 <nftw@plt+0x3f734>  // b.none
  442200:	cmp	w0, #0x10
  442204:	b.eq	4422c8 <nftw@plt+0x3f748>  // b.none
  442208:	cmp	w0, #0x21
  44220c:	b.eq	4422dc <nftw@plt+0x3f75c>  // b.none
  442210:	cmp	w0, #0xb
  442214:	b.eq	4422f0 <nftw@plt+0x3f770>  // b.none
  442218:	cmp	w0, #0x22
  44221c:	mov	x0, #0x0                   	// #0
  442220:	b.eq	442250 <nftw@plt+0x3f6d0>  // b.none
  442224:	ret
  442228:	adrp	x0, 47e000 <_obstack_memory_used@@Base+0x1cbb8>
  44222c:	add	x0, x0, #0xc20
  442230:	add	x0, x0, #0x150
  442234:	ldr	x0, [x0]
  442238:	ret
  44223c:	adrp	x0, 47e000 <_obstack_memory_used@@Base+0x1cbb8>
  442240:	add	x0, x0, #0xc20
  442244:	add	x0, x0, #0x160
  442248:	ldr	x0, [x0]
  44224c:	b	442238 <nftw@plt+0x3f6b8>
  442250:	adrp	x0, 47e000 <_obstack_memory_used@@Base+0x1cbb8>
  442254:	add	x0, x0, #0xc20
  442258:	add	x0, x0, #0x1f0
  44225c:	ldr	x0, [x0]
  442260:	b	442238 <nftw@plt+0x3f6b8>
  442264:	adrp	x0, 47e000 <_obstack_memory_used@@Base+0x1cbb8>
  442268:	add	x0, x0, #0xc20
  44226c:	add	x0, x0, #0x170
  442270:	ldr	x0, [x0]
  442274:	b	442238 <nftw@plt+0x3f6b8>
  442278:	adrp	x0, 47e000 <_obstack_memory_used@@Base+0x1cbb8>
  44227c:	add	x0, x0, #0xc20
  442280:	add	x0, x0, #0x180
  442284:	ldr	x0, [x0]
  442288:	b	442238 <nftw@plt+0x3f6b8>
  44228c:	adrp	x0, 47e000 <_obstack_memory_used@@Base+0x1cbb8>
  442290:	add	x0, x0, #0xc20
  442294:	add	x0, x0, #0x190
  442298:	ldr	x0, [x0]
  44229c:	b	442238 <nftw@plt+0x3f6b8>
  4422a0:	adrp	x0, 47e000 <_obstack_memory_used@@Base+0x1cbb8>
  4422a4:	add	x0, x0, #0xc20
  4422a8:	add	x0, x0, #0x1a0
  4422ac:	ldr	x0, [x0]
  4422b0:	b	442238 <nftw@plt+0x3f6b8>
  4422b4:	adrp	x0, 47e000 <_obstack_memory_used@@Base+0x1cbb8>
  4422b8:	add	x0, x0, #0xc20
  4422bc:	add	x0, x0, #0x1b0
  4422c0:	ldr	x0, [x0]
  4422c4:	b	442238 <nftw@plt+0x3f6b8>
  4422c8:	adrp	x0, 47e000 <_obstack_memory_used@@Base+0x1cbb8>
  4422cc:	add	x0, x0, #0xc20
  4422d0:	add	x0, x0, #0x1c0
  4422d4:	ldr	x0, [x0]
  4422d8:	b	442238 <nftw@plt+0x3f6b8>
  4422dc:	adrp	x0, 47e000 <_obstack_memory_used@@Base+0x1cbb8>
  4422e0:	add	x0, x0, #0xc20
  4422e4:	add	x0, x0, #0x1d0
  4422e8:	ldr	x0, [x0]
  4422ec:	b	442238 <nftw@plt+0x3f6b8>
  4422f0:	adrp	x0, 47e000 <_obstack_memory_used@@Base+0x1cbb8>
  4422f4:	add	x0, x0, #0xc20
  4422f8:	add	x0, x0, #0x1e0
  4422fc:	ldr	x0, [x0]
  442300:	b	442238 <nftw@plt+0x3f6b8>
  442304:	nop
  442308:	stp	x29, x30, [sp, #-48]!
  44230c:	mov	x29, sp
  442310:	stp	x19, x20, [sp, #16]
  442314:	mov	x20, x0
  442318:	str	x21, [sp, #32]
  44231c:	mov	x21, #0xa0                  	// #160
  442320:	ldrb	w0, [x0, #1160]
  442324:	cbnz	w0, 442334 <nftw@plt+0x3f7b4>
  442328:	ldrb	w0, [x20, #1243]
  44232c:	mov	x21, #0xb0                  	// #176
  442330:	cbnz	w0, 4423bc <nftw@plt+0x3f83c>
  442334:	adrp	x19, 47e000 <_obstack_memory_used@@Base+0x1cbb8>
  442338:	add	x19, x19, #0xc20
  44233c:	add	x19, x19, #0x200
  442340:	add	x21, x19, x21
  442344:	nop
  442348:	ldrh	w1, [x19, #10]
  44234c:	mov	x0, x20
  442350:	cmp	w1, #0xa
  442354:	b.ne	44236c <nftw@plt+0x3f7ec>  // b.any
  442358:	ldr	w1, [x20, #1116]
  44235c:	cmp	w1, #0x15
  442360:	b.eq	4423a0 <nftw@plt+0x3f820>  // b.none
  442364:	ldr	x1, [x20, #1040]
  442368:	cbz	x1, 4423a0 <nftw@plt+0x3f820>
  44236c:	ldrh	w2, [x19, #8]
  442370:	ldr	x1, [x19]
  442374:	bl	42eb68 <nftw@plt+0x2bfe8>
  442378:	ldrb	w1, [x0, #18]
  44237c:	ldrb	w2, [x19, #12]
  442380:	orr	w1, w1, #0x3
  442384:	strb	w1, [x0, #18]
  442388:	cbz	w2, 442398 <nftw@plt+0x3f818>
  44238c:	ldrh	w1, [x0, #18]
  442390:	orr	w1, w1, #0x20
  442394:	strh	w1, [x0, #18]
  442398:	ldrh	w1, [x19, #10]
  44239c:	str	w1, [x0, #24]
  4423a0:	add	x19, x19, #0x10
  4423a4:	cmp	x19, x21
  4423a8:	b.cc	442348 <nftw@plt+0x3f7c8>  // b.lo, b.ul, b.last
  4423ac:	ldp	x19, x20, [sp, #16]
  4423b0:	ldr	x21, [sp, #32]
  4423b4:	ldp	x29, x30, [sp], #48
  4423b8:	ret
  4423bc:	ldrb	w1, [x20, #1153]
  4423c0:	mov	x0, #0xc0                  	// #192
  4423c4:	cmp	w1, #0x0
  4423c8:	csel	x21, x0, x21, eq  // eq = none
  4423cc:	b	442334 <nftw@plt+0x3f7b4>
  4423d0:	stp	x29, x30, [sp, #-32]!
  4423d4:	mov	x29, sp
  4423d8:	stp	x19, x20, [sp, #16]
  4423dc:	mov	x19, x0
  4423e0:	mov	w20, w1
  4423e4:	bl	442308 <nftw@plt+0x3f788>
  4423e8:	ldrb	w0, [x19, #1160]
  4423ec:	cbnz	w0, 442400 <nftw@plt+0x3f880>
  4423f0:	ldrb	w0, [x19, #1243]
  4423f4:	cbz	w0, 4424f8 <nftw@plt+0x3f978>
  4423f8:	ldrb	w0, [x19, #1153]
  4423fc:	cbnz	w0, 4424f8 <nftw@plt+0x3f978>
  442400:	ldrb	w2, [x19, #1120]
  442404:	ldr	w0, [x19, #1116]
  442408:	cbz	w2, 442480 <nftw@plt+0x3f900>
  44240c:	sub	w1, w0, #0x13
  442410:	cmp	w1, #0x1
  442414:	b.ls	442564 <nftw@plt+0x3f9e4>  // b.plast
  442418:	sub	w1, w0, #0x11
  44241c:	cmp	w1, #0x1
  442420:	b.ls	4425a0 <nftw@plt+0x3fa20>  // b.plast
  442424:	sub	w1, w0, #0xf
  442428:	cmp	w1, #0x1
  44242c:	b.ls	4425dc <nftw@plt+0x3fa5c>  // b.plast
  442430:	sub	w0, w0, #0xd
  442434:	cmp	w0, #0x1
  442438:	b.ls	44258c <nftw@plt+0x3fa0c>  // b.plast
  44243c:	mov	x0, x19
  442440:	adrp	x1, 47e000 <_obstack_memory_used@@Base+0x1cbb8>
  442444:	add	x1, x1, #0x9a0
  442448:	bl	426b68 <nftw@plt+0x23fe8>
  44244c:	ldrb	w0, [x19, #1128]
  442450:	cbnz	w0, 442528 <nftw@plt+0x3f9a8>
  442454:	nop
  442458:	cbz	w20, 4424c8 <nftw@plt+0x3f948>
  44245c:	mov	x0, x19
  442460:	adrp	x1, 47e000 <_obstack_memory_used@@Base+0x1cbb8>
  442464:	add	x1, x1, #0xa98
  442468:	bl	426b68 <nftw@plt+0x23fe8>
  44246c:	ldrb	w0, [x19, #1122]
  442470:	cbnz	w0, 4424e0 <nftw@plt+0x3f960>
  442474:	ldp	x19, x20, [sp, #16]
  442478:	ldp	x29, x30, [sp], #32
  44247c:	ret
  442480:	cmp	w0, #0x15
  442484:	b.eq	442578 <nftw@plt+0x3f9f8>  // b.none
  442488:	cmp	w0, #0x6
  44248c:	b.eq	4425b4 <nftw@plt+0x3fa34>  // b.none
  442490:	cmp	w0, #0xa
  442494:	ccmp	w0, #0x4, #0x4, ne  // ne = any
  442498:	b.eq	44250c <nftw@plt+0x3f98c>  // b.none
  44249c:	cmp	w0, #0x9
  4424a0:	ccmp	w0, #0x3, #0x4, ne  // ne = any
  4424a4:	b.eq	4425c8 <nftw@plt+0x3fa48>  // b.none
  4424a8:	cmp	w0, #0x8
  4424ac:	ccmp	w0, #0x2, #0x4, ne  // ne = any
  4424b0:	b.eq	4425f0 <nftw@plt+0x3fa70>  // b.none
  4424b4:	ldrb	w0, [x19, #1152]
  4424b8:	cbnz	w0, 442604 <nftw@plt+0x3fa84>
  4424bc:	ldrb	w0, [x19, #1128]
  4424c0:	cbnz	w0, 442540 <nftw@plt+0x3f9c0>
  4424c4:	cbnz	w20, 44245c <nftw@plt+0x3f8dc>
  4424c8:	mov	x0, x19
  4424cc:	adrp	x1, 47e000 <_obstack_memory_used@@Base+0x1cbb8>
  4424d0:	add	x1, x1, #0xab0
  4424d4:	bl	426b68 <nftw@plt+0x23fe8>
  4424d8:	ldrb	w0, [x19, #1122]
  4424dc:	cbz	w0, 442474 <nftw@plt+0x3f8f4>
  4424e0:	mov	x0, x19
  4424e4:	adrp	x1, 47e000 <_obstack_memory_used@@Base+0x1cbb8>
  4424e8:	ldp	x19, x20, [sp, #16]
  4424ec:	add	x1, x1, #0xac8
  4424f0:	ldp	x29, x30, [sp], #32
  4424f4:	b	426b68 <nftw@plt+0x23fe8>
  4424f8:	mov	x0, x19
  4424fc:	adrp	x1, 47e000 <_obstack_memory_used@@Base+0x1cbb8>
  442500:	add	x1, x1, #0x930
  442504:	bl	426b68 <nftw@plt+0x23fe8>
  442508:	b	442400 <nftw@plt+0x3f880>
  44250c:	adrp	x1, 47e000 <_obstack_memory_used@@Base+0x1cbb8>
  442510:	mov	x0, x19
  442514:	add	x1, x1, #0x9e8
  442518:	bl	426b68 <nftw@plt+0x23fe8>
  44251c:	nop
  442520:	ldrb	w0, [x19, #1128]
  442524:	cbz	w0, 442458 <nftw@plt+0x3f8d8>
  442528:	ldrb	w0, [x19, #1120]
  44252c:	cbz	w0, 442540 <nftw@plt+0x3f9c0>
  442530:	ldr	w0, [x19, #1116]
  442534:	sub	w0, w0, #0xb
  442538:	cmp	w0, #0x1
  44253c:	b.ls	442458 <nftw@plt+0x3f8d8>  // b.plast
  442540:	mov	x0, x19
  442544:	adrp	x1, 47e000 <_obstack_memory_used@@Base+0x1cbb8>
  442548:	add	x1, x1, #0xa68
  44254c:	bl	426b68 <nftw@plt+0x23fe8>
  442550:	mov	x0, x19
  442554:	adrp	x1, 47e000 <_obstack_memory_used@@Base+0x1cbb8>
  442558:	add	x1, x1, #0xa80
  44255c:	bl	426b68 <nftw@plt+0x23fe8>
  442560:	b	442458 <nftw@plt+0x3f8d8>
  442564:	mov	x0, x19
  442568:	adrp	x1, 47e000 <_obstack_memory_used@@Base+0x1cbb8>
  44256c:	add	x1, x1, #0x940
  442570:	bl	426b68 <nftw@plt+0x23fe8>
  442574:	b	442520 <nftw@plt+0x3f9a0>
  442578:	mov	x0, x19
  44257c:	adrp	x1, 47e000 <_obstack_memory_used@@Base+0x1cbb8>
  442580:	add	x1, x1, #0x9b8
  442584:	bl	426b68 <nftw@plt+0x23fe8>
  442588:	b	442520 <nftw@plt+0x3f9a0>
  44258c:	mov	x0, x19
  442590:	adrp	x1, 47e000 <_obstack_memory_used@@Base+0x1cbb8>
  442594:	add	x1, x1, #0x988
  442598:	bl	426b68 <nftw@plt+0x23fe8>
  44259c:	b	442520 <nftw@plt+0x3f9a0>
  4425a0:	mov	x0, x19
  4425a4:	adrp	x1, 47e000 <_obstack_memory_used@@Base+0x1cbb8>
  4425a8:	add	x1, x1, #0x958
  4425ac:	bl	426b68 <nftw@plt+0x23fe8>
  4425b0:	b	442520 <nftw@plt+0x3f9a0>
  4425b4:	mov	x0, x19
  4425b8:	adrp	x1, 47e000 <_obstack_memory_used@@Base+0x1cbb8>
  4425bc:	add	x1, x1, #0x9c8
  4425c0:	bl	426b68 <nftw@plt+0x23fe8>
  4425c4:	b	442520 <nftw@plt+0x3f9a0>
  4425c8:	mov	x0, x19
  4425cc:	adrp	x1, 47e000 <_obstack_memory_used@@Base+0x1cbb8>
  4425d0:	add	x1, x1, #0xa08
  4425d4:	bl	426b68 <nftw@plt+0x23fe8>
  4425d8:	b	442520 <nftw@plt+0x3f9a0>
  4425dc:	mov	x0, x19
  4425e0:	adrp	x1, 47e000 <_obstack_memory_used@@Base+0x1cbb8>
  4425e4:	add	x1, x1, #0x970
  4425e8:	bl	426b68 <nftw@plt+0x23fe8>
  4425ec:	b	442520 <nftw@plt+0x3f9a0>
  4425f0:	mov	x0, x19
  4425f4:	adrp	x1, 47e000 <_obstack_memory_used@@Base+0x1cbb8>
  4425f8:	add	x1, x1, #0xa28
  4425fc:	bl	426b68 <nftw@plt+0x23fe8>
  442600:	b	442520 <nftw@plt+0x3f9a0>
  442604:	mov	x0, x19
  442608:	adrp	x1, 47e000 <_obstack_memory_used@@Base+0x1cbb8>
  44260c:	add	x1, x1, #0xa48
  442610:	bl	426b68 <nftw@plt+0x23fe8>
  442614:	b	442520 <nftw@plt+0x3f9a0>
  442618:	stp	x29, x30, [sp, #-48]!
  44261c:	mov	x29, sp
  442620:	stp	x19, x20, [sp, #16]
  442624:	mov	x19, x0
  442628:	ldrb	w0, [x0, #1120]
  44262c:	cbz	w0, 442634 <nftw@plt+0x3fab4>
  442630:	strb	wzr, [x19, #1138]
  442634:	ldrb	w2, [x19, #1155]
  442638:	ldrb	w1, [x19, #1136]
  44263c:	cbz	w2, 442680 <nftw@plt+0x3fb00>
  442640:	ldrb	w2, [x19, #1244]
  442644:	cbnz	w2, 442650 <nftw@plt+0x3fad0>
  442648:	mov	w2, #0x1                   	// #1
  44264c:	strb	w2, [x19, #24]
  442650:	strb	wzr, [x19, #1160]
  442654:	cmp	w1, #0x2
  442658:	b.eq	44271c <nftw@plt+0x3fb9c>  // b.none
  44265c:	ldrb	w1, [x19, #1159]
  442660:	cbz	w0, 4426a0 <nftw@plt+0x3fb20>
  442664:	ldrb	w0, [x19, #1158]
  442668:	cbz	w0, 4426a0 <nftw@plt+0x3fb20>
  44266c:	cmp	w1, #0x0
  442670:	stp	x21, x22, [sp, #32]
  442674:	mov	w21, #0xffffff85            	// #-123
  442678:	csinc	w21, w21, wzr, ne  // ne = any
  44267c:	b	4426ac <nftw@plt+0x3fb2c>
  442680:	cmp	w1, #0x2
  442684:	ldrb	w1, [x19, #1160]
  442688:	b.eq	442730 <nftw@plt+0x3fbb0>  // b.none
  44268c:	cbz	w1, 44265c <nftw@plt+0x3fadc>
  442690:	strb	wzr, [x19, #1125]
  442694:	strb	wzr, [x19, #1136]
  442698:	ldrb	w1, [x19, #1159]
  44269c:	cbnz	w0, 442664 <nftw@plt+0x3fae4>
  4426a0:	cbz	w1, 442710 <nftw@plt+0x3fb90>
  4426a4:	stp	x21, x22, [sp, #32]
  4426a8:	mov	w21, #0xffffff84            	// #-124
  4426ac:	adrp	x20, 47e000 <_obstack_memory_used@@Base+0x1cbb8>
  4426b0:	add	x20, x20, #0xc20
  4426b4:	add	x22, x20, #0x150
  4426b8:	add	x20, x20, #0x200
  4426bc:	nop
  4426c0:	ldrh	w2, [x22, #8]
  4426c4:	mov	x0, x19
  4426c8:	ldr	x1, [x22]
  4426cc:	add	x22, x22, #0x10
  4426d0:	bl	42eb68 <nftw@plt+0x2bfe8>
  4426d4:	ldrh	w2, [x0, #18]
  4426d8:	ldrb	w1, [x0, #16]
  4426dc:	mov	w3, w2
  4426e0:	ubfx	x2, x2, #2, #8
  4426e4:	and	w1, w1, #0xfffffffe
  4426e8:	orr	w2, w21, w2
  4426ec:	strb	w1, [x0, #16]
  4426f0:	bfi	w3, w2, #2, #8
  4426f4:	strh	w3, [x0, #18]
  4426f8:	ldurh	w2, [x22, #-6]
  4426fc:	cmp	x22, x20
  442700:	bfi	w1, w2, #1, #7
  442704:	strb	w1, [x0, #16]
  442708:	b.ne	4426c0 <nftw@plt+0x3fb40>  // b.any
  44270c:	ldp	x21, x22, [sp, #32]
  442710:	ldp	x19, x20, [sp, #16]
  442714:	ldp	x29, x30, [sp], #48
  442718:	ret
  44271c:	ldrb	w1, [x19, #1125]
  442720:	cmp	w1, #0x0
  442724:	cset	w1, eq  // eq = none
  442728:	strb	w1, [x19, #1136]
  44272c:	b	44265c <nftw@plt+0x3fadc>
  442730:	ldrb	w2, [x19, #1125]
  442734:	cmp	w2, #0x0
  442738:	cset	w2, eq  // eq = none
  44273c:	strb	w2, [x19, #1136]
  442740:	cbnz	w1, 442690 <nftw@plt+0x3fb10>
  442744:	b	44265c <nftw@plt+0x3fadc>
  442748:	stp	x29, x30, [sp, #-48]!
  44274c:	mov	x29, sp
  442750:	stp	x19, x20, [sp, #16]
  442754:	mov	x19, x0
  442758:	ldr	w0, [x0, #1200]
  44275c:	mov	x20, x1
  442760:	cbz	w0, 442774 <nftw@plt+0x3fbf4>
  442764:	ldr	x0, [x19, #712]
  442768:	cbz	x0, 442820 <nftw@plt+0x3fca0>
  44276c:	mov	x1, x20
  442770:	bl	43ebb8 <nftw@plt+0x3c038>
  442774:	add	x2, x19, #0xd8
  442778:	mov	x1, x20
  44277c:	mov	w6, #0x0                   	// #0
  442780:	mov	w5, #0x0                   	// #0
  442784:	mov	w4, #0x0                   	// #0
  442788:	mov	w3, #0x0                   	// #0
  44278c:	mov	x0, x19
  442790:	bl	42ca68 <nftw@plt+0x29ee8>
  442794:	str	x0, [x19, #288]
  442798:	bl	42ca58 <nftw@plt+0x29ed8>
  44279c:	tst	w0, #0xff
  4427a0:	mov	x0, #0x0                   	// #0
  4427a4:	b.ne	4427c8 <nftw@plt+0x3fc48>  // b.any
  4427a8:	ldr	x1, [x19, #288]
  4427ac:	mov	x0, x19
  4427b0:	mov	w3, #0x0                   	// #0
  4427b4:	mov	w2, #0x0                   	// #0
  4427b8:	bl	42d428 <nftw@plt+0x2a8a8>
  4427bc:	ldrb	w1, [x19, #1155]
  4427c0:	mov	x0, x20
  4427c4:	cbnz	w1, 4427d4 <nftw@plt+0x3fc54>
  4427c8:	ldp	x19, x20, [sp, #16]
  4427cc:	ldp	x29, x30, [sp], #48
  4427d0:	ret
  4427d4:	mov	x0, x19
  4427d8:	bl	433140 <nftw@plt+0x305c0>
  4427dc:	mov	x20, x0
  4427e0:	ldrb	w0, [x0, #4]
  4427e4:	cmp	w0, #0x25
  4427e8:	b.eq	44282c <nftw@plt+0x3fcac>  // b.none
  4427ec:	mov	x0, x19
  4427f0:	mov	w1, #0x1                   	// #1
  4427f4:	bl	43ab60 <nftw@plt+0x37fe0>
  4427f8:	ldr	x1, [x19, #40]
  4427fc:	mov	w2, #0x18                  	// #24
  442800:	ldp	x19, x20, [sp, #16]
  442804:	ldr	w0, [x1, #12]
  442808:	ldr	x1, [x1]
  44280c:	sub	w0, w0, #0x1
  442810:	ldp	x29, x30, [sp], #48
  442814:	smaddl	x0, w0, w2, x1
  442818:	ldr	x0, [x0, #8]
  44281c:	ret
  442820:	bl	43ea48 <nftw@plt+0x3bec8>
  442824:	str	x0, [x19, #712]
  442828:	b	44276c <nftw@plt+0x3fbec>
  44282c:	str	x21, [sp, #32]
  442830:	mov	w0, #0x1                   	// #1
  442834:	strb	w0, [x19, #16]
  442838:	mov	x0, x19
  44283c:	bl	433140 <nftw@plt+0x305c0>
  442840:	mov	x21, x0
  442844:	mov	w1, #0x1                   	// #1
  442848:	mov	x0, x19
  44284c:	bl	43ab60 <nftw@plt+0x37fe0>
  442850:	strb	wzr, [x19, #16]
  442854:	ldrb	w0, [x21, #4]
  442858:	cmp	w0, #0x37
  44285c:	b.eq	442868 <nftw@plt+0x3fce8>  // b.none
  442860:	ldr	x21, [sp, #32]
  442864:	b	4427ec <nftw@plt+0x3fc6c>
  442868:	ldrh	w1, [x20, #6]
  44286c:	mov	x0, x19
  442870:	and	w1, w1, #0x1
  442874:	bl	425128 <nftw@plt+0x225a8>
  442878:	cbz	w0, 442860 <nftw@plt+0x3fce0>
  44287c:	mov	x0, x19
  442880:	bl	441bf0 <nftw@plt+0x3f070>
  442884:	ldr	x21, [sp, #32]
  442888:	b	4427f8 <nftw@plt+0x3fc78>
  44288c:	nop
  442890:	stp	x29, x30, [sp, #-32]!
  442894:	mov	x29, sp
  442898:	stp	x19, x20, [sp, #16]
  44289c:	mov	x20, x1
  4428a0:	mov	x19, x0
  4428a4:	ldrb	w1, [x0, #1151]
  4428a8:	cbz	w1, 4428b8 <nftw@plt+0x3fd38>
  4428ac:	b	4428e4 <nftw@plt+0x3fd64>
  4428b0:	mov	x0, x19
  4428b4:	bl	425cc0 <nftw@plt+0x23140>
  4428b8:	ldr	x0, [x19]
  4428bc:	cbnz	x0, 4428b0 <nftw@plt+0x3fd30>
  4428c0:	ldr	w0, [x19, #1200]
  4428c4:	cmp	w0, #0x0
  4428c8:	ccmp	x20, #0x0, #0x4, ne  // ne = any
  4428cc:	b.ne	442908 <nftw@plt+0x3fd88>  // b.any
  4428d0:	ldrb	w0, [x19, #1131]
  4428d4:	cbnz	w0, 4428f8 <nftw@plt+0x3fd78>
  4428d8:	ldp	x19, x20, [sp, #16]
  4428dc:	ldp	x29, x30, [sp], #32
  4428e0:	ret
  4428e4:	adrp	x1, 439000 <nftw@plt+0x36480>
  4428e8:	mov	x2, #0x0                   	// #0
  4428ec:	add	x1, x1, #0xef0
  4428f0:	bl	42ebb0 <nftw@plt+0x2c030>
  4428f4:	b	4428b8 <nftw@plt+0x3fd38>
  4428f8:	mov	x0, x19
  4428fc:	ldp	x19, x20, [sp, #16]
  442900:	ldp	x29, x30, [sp], #32
  442904:	b	42e090 <nftw@plt+0x2b510>
  442908:	ldr	x0, [x19, #712]
  44290c:	mov	x1, x20
  442910:	mov	w2, #0x48                  	// #72
  442914:	bl	43ee80 <nftw@plt+0x3c300>
  442918:	ldrb	w0, [x19, #1205]
  44291c:	cbz	w0, 4428d0 <nftw@plt+0x3fd50>
  442920:	ldr	x0, [x19, #712]
  442924:	mov	x1, x20
  442928:	bl	43f0f0 <nftw@plt+0x3c570>
  44292c:	b	4428d0 <nftw@plt+0x3fd50>
  442930:	stp	x29, x30, [sp, #-96]!
  442934:	mov	x7, x0
  442938:	mov	w6, w1
  44293c:	add	x4, sp, #0x18
  442940:	mov	x29, sp
  442944:	mov	x0, x4
  442948:	stp	xzr, xzr, [sp, #32]
  44294c:	mov	x1, #0x48                  	// #72
  442950:	str	x7, [sp, #24]
  442954:	str	w6, [sp, #32]
  442958:	stp	xzr, xzr, [sp, #48]
  44295c:	stp	xzr, xzr, [sp, #64]
  442960:	stp	xzr, xzr, [sp, #80]
  442964:	bl	442c10 <nftw@plt+0x40090>
  442968:	cbz	x0, 442994 <nftw@plt+0x3fe14>
  44296c:	ldp	x2, x3, [sp, #24]
  442970:	stp	x2, x3, [x0]
  442974:	ldp	x2, x3, [sp, #40]
  442978:	stp	x2, x3, [x0, #16]
  44297c:	ldp	x2, x3, [sp, #56]
  442980:	stp	x2, x3, [x0, #32]
  442984:	ldp	x2, x3, [sp, #72]
  442988:	stp	x2, x3, [x0, #48]
  44298c:	ldr	x1, [sp, #88]
  442990:	str	x1, [x0, #64]
  442994:	ldp	x29, x30, [sp], #96
  442998:	ret
  44299c:	nop
  4429a0:	stp	x29, x30, [sp, #-48]!
  4429a4:	mov	x29, sp
  4429a8:	str	x19, [sp, #16]
  4429ac:	mov	x19, x1
  4429b0:	add	x1, sp, #0x2c
  4429b4:	str	wzr, [sp, #44]
  4429b8:	bl	46fc38 <_obstack_memory_used@@Base+0xe7f0>
  4429bc:	mov	x1, x0
  4429c0:	ldr	w0, [x19]
  4429c4:	cmp	w0, #0x0
  4429c8:	b.gt	442a1c <nftw@plt+0x3fe9c>
  4429cc:	ldr	w2, [sp, #44]
  4429d0:	ldr	w0, [x19, #44]
  4429d4:	cmp	w2, #0x0
  4429d8:	cset	x2, eq  // eq = none
  4429dc:	sub	x1, x1, x2
  4429e0:	ldr	x5, [x19, #16]
  4429e4:	ldr	x4, [x19, #32]
  4429e8:	cbnz	w0, 442a34 <nftw@plt+0x3feb4>
  4429ec:	mov	x0, x4
  4429f0:	mov	w3, #0x0                   	// #0
  4429f4:	mov	x4, #0x0                   	// #0
  4429f8:	mov	x2, #0x0                   	// #0
  4429fc:	blr	x5
  442a00:	str	w0, [x19, #40]
  442a04:	cmp	w0, #0x0
  442a08:	mov	w0, #0x5                   	// #5
  442a0c:	csel	w0, wzr, w0, eq  // eq = none
  442a10:	ldr	x19, [sp, #16]
  442a14:	ldp	x29, x30, [sp], #48
  442a18:	ret
  442a1c:	sub	w1, w0, #0x1
  442a20:	str	w1, [x19]
  442a24:	mov	w0, #0x0                   	// #0
  442a28:	ldr	x19, [sp, #16]
  442a2c:	ldp	x29, x30, [sp], #48
  442a30:	ret
  442a34:	ldr	x0, [x19, #8]
  442a38:	mov	x2, x5
  442a3c:	ldr	x3, [x19, #24]
  442a40:	bl	442f78 <nftw@plt+0x403f8>
  442a44:	str	w0, [x19, #40]
  442a48:	b	442a04 <nftw@plt+0x3fe84>
  442a4c:	nop
  442a50:	stp	x29, x30, [sp, #-80]!
  442a54:	add	w5, w1, #0x1
  442a58:	mov	x7, x2
  442a5c:	mov	x6, x3
  442a60:	mov	x29, sp
  442a64:	mov	x3, #0x0                   	// #0
  442a68:	mov	x2, #0x0                   	// #0
  442a6c:	mov	x1, #0x1000                	// #4096
  442a70:	str	x19, [sp, #16]
  442a74:	mov	x19, x0
  442a78:	str	w5, [sp, #32]
  442a7c:	stp	x0, x7, [sp, #40]
  442a80:	stp	x6, x4, [sp, #56]
  442a84:	str	wzr, [sp, #72]
  442a88:	bl	442c10 <nftw@plt+0x40090>
  442a8c:	cbz	x0, 442ad0 <nftw@plt+0x3ff50>
  442a90:	mov	x1, x0
  442a94:	mov	x4, #0x0                   	// #0
  442a98:	mov	x0, x19
  442a9c:	mov	x3, #0x0                   	// #0
  442aa0:	mov	x2, #0x1000                	// #4096
  442aa4:	bl	442ad8 <nftw@plt+0x3ff58>
  442aa8:	mov	w0, #0x1                   	// #1
  442aac:	str	w0, [sp, #76]
  442ab0:	add	x1, sp, #0x20
  442ab4:	adrp	x0, 442000 <nftw@plt+0x3f480>
  442ab8:	add	x0, x0, #0x9a0
  442abc:	bl	470280 <_obstack_memory_used@@Base+0xee38>
  442ac0:	ldr	w0, [sp, #72]
  442ac4:	ldr	x19, [sp, #16]
  442ac8:	ldp	x29, x30, [sp], #80
  442acc:	ret
  442ad0:	str	wzr, [sp, #76]
  442ad4:	b	442ab0 <nftw@plt+0x3ff30>
  442ad8:	stp	x29, x30, [sp, #-48]!
  442adc:	mov	x29, sp
  442ae0:	stp	x19, x20, [sp, #16]
  442ae4:	mov	x19, x0
  442ae8:	mov	x20, x1
  442aec:	str	x21, [sp, #32]
  442af0:	mov	x0, #0xffff                	// #65535
  442af4:	mov	x21, x2
  442af8:	cmp	x2, x0
  442afc:	b.ls	442b18 <nftw@plt+0x3ff98>  // b.plast
  442b00:	bl	402760 <getpagesize@plt>
  442b04:	sxtw	x0, w0
  442b08:	orr	x1, x20, x21
  442b0c:	sub	x0, x0, #0x1
  442b10:	tst	x0, x1
  442b14:	b.eq	442bec <nftw@plt+0x4006c>  // b.none
  442b18:	ldr	w7, [x19, #8]
  442b1c:	cbnz	w7, 442bb0 <nftw@plt+0x40030>
  442b20:	cmp	x21, #0xf
  442b24:	b.ls	442ba0 <nftw@plt+0x40020>  // b.plast
  442b28:	ldr	x3, [x19, #64]
  442b2c:	add	x0, x19, #0x40
  442b30:	mov	x9, x3
  442b34:	cbz	x3, 442c00 <nftw@plt+0x40080>
  442b38:	mov	x4, x3
  442b3c:	mov	x6, #0x0                   	// #0
  442b40:	b	442b5c <nftw@plt+0x3ffdc>
  442b44:	ldr	x4, [x0]
  442b48:	ldr	x5, [x3, #8]
  442b4c:	ldr	x1, [x4, #8]
  442b50:	cmp	x5, x1
  442b54:	csel	x4, x4, x3, cs  // cs = hs, nlast
  442b58:	csel	x0, x0, x8, cs  // cs = hs, nlast
  442b5c:	mov	x8, x3
  442b60:	add	x6, x6, #0x1
  442b64:	ldr	x3, [x3]
  442b68:	cbnz	x3, 442b44 <nftw@plt+0x3ffc4>
  442b6c:	cmp	x6, #0xf
  442b70:	b.ls	442b8c <nftw@plt+0x4000c>  // b.plast
  442b74:	ldr	x1, [x4, #8]
  442b78:	cmp	x21, x1
  442b7c:	b.ls	442b94 <nftw@plt+0x40014>  // b.plast
  442b80:	ldr	x1, [x4]
  442b84:	str	x1, [x0]
  442b88:	ldr	x9, [x19, #64]
  442b8c:	stp	x9, x21, [x20]
  442b90:	str	x20, [x19, #64]
  442b94:	cbz	w7, 442ba0 <nftw@plt+0x40020>
  442b98:	add	x19, x19, #0x3c
  442b9c:	stlr	wzr, [x19]
  442ba0:	ldp	x19, x20, [sp, #16]
  442ba4:	ldr	x21, [sp, #32]
  442ba8:	ldp	x29, x30, [sp], #48
  442bac:	ret
  442bb0:	add	x0, x19, #0x3c
  442bb4:	mov	w3, #0x1                   	// #1
  442bb8:	ldxr	w1, [x0]
  442bbc:	stxr	w2, w3, [x0]
  442bc0:	cbnz	w2, 442bb8 <nftw@plt+0x40038>
  442bc4:	dmb	ish
  442bc8:	cbnz	w1, 442ba0 <nftw@plt+0x40020>
  442bcc:	ldr	w7, [x19, #8]
  442bd0:	cmp	x21, #0xf
  442bd4:	b.ls	442b94 <nftw@plt+0x40014>  // b.plast
  442bd8:	ldr	x9, [x19, #64]
  442bdc:	add	x0, x19, #0x40
  442be0:	mov	x3, x9
  442be4:	cbnz	x9, 442b38 <nftw@plt+0x3ffb8>
  442be8:	b	442b8c <nftw@plt+0x4000c>
  442bec:	mov	x1, x21
  442bf0:	mov	x0, x20
  442bf4:	bl	402970 <munmap@plt>
  442bf8:	cbnz	w0, 442b18 <nftw@plt+0x3ff98>
  442bfc:	b	442ba0 <nftw@plt+0x40020>
  442c00:	stp	xzr, x21, [x20]
  442c04:	str	x20, [x19, #64]
  442c08:	b	442ba0 <nftw@plt+0x40020>
  442c0c:	nop
  442c10:	stp	x29, x30, [sp, #-64]!
  442c14:	mov	x29, sp
  442c18:	ldr	w8, [x0, #8]
  442c1c:	stp	x19, x20, [sp, #16]
  442c20:	mov	x20, x1
  442c24:	stp	x21, x22, [sp, #32]
  442c28:	mov	x21, x0
  442c2c:	stp	x23, x24, [sp, #48]
  442c30:	mov	x24, x2
  442c34:	mov	x23, x3
  442c38:	cbnz	w8, 442d18 <nftw@plt+0x40198>
  442c3c:	ldr	x4, [x0, #64]
  442c40:	add	x7, x0, #0x40
  442c44:	cbz	x4, 442d58 <nftw@plt+0x401d8>
  442c48:	mov	x6, x7
  442c4c:	b	442c58 <nftw@plt+0x400d8>
  442c50:	mov	x6, x19
  442c54:	cbz	x4, 442d48 <nftw@plt+0x401c8>
  442c58:	ldr	x5, [x4, #8]
  442c5c:	mov	x19, x4
  442c60:	ldr	x4, [x4]
  442c64:	cmp	x5, x20
  442c68:	b.cc	442c50 <nftw@plt+0x400d0>  // b.lo, b.ul, b.last
  442c6c:	add	x20, x20, #0x7
  442c70:	str	x4, [x6]
  442c74:	and	x20, x20, #0xfffffffffffffff8
  442c78:	cmp	x5, x20
  442c7c:	b.ls	442cfc <nftw@plt+0x4017c>  // b.plast
  442c80:	sub	x5, x5, x20
  442c84:	cmp	x5, #0xf
  442c88:	b.ls	442cfc <nftw@plt+0x4017c>  // b.plast
  442c8c:	ldr	x9, [x21, #64]
  442c90:	mov	x4, #0x0                   	// #0
  442c94:	mov	x0, x9
  442c98:	mov	x1, x9
  442c9c:	cbnz	x9, 442cbc <nftw@plt+0x4013c>
  442ca0:	b	442cec <nftw@plt+0x4016c>
  442ca4:	ldr	x1, [x7]
  442ca8:	ldr	x3, [x0, #8]
  442cac:	ldr	x2, [x1, #8]
  442cb0:	cmp	x3, x2
  442cb4:	csel	x1, x1, x0, cs  // cs = hs, nlast
  442cb8:	csel	x7, x7, x6, cs  // cs = hs, nlast
  442cbc:	mov	x6, x0
  442cc0:	add	x4, x4, #0x1
  442cc4:	ldr	x0, [x0]
  442cc8:	cbnz	x0, 442ca4 <nftw@plt+0x40124>
  442ccc:	cmp	x4, #0xf
  442cd0:	b.ls	442cec <nftw@plt+0x4016c>  // b.plast
  442cd4:	ldr	x0, [x1, #8]
  442cd8:	cmp	x5, x0
  442cdc:	b.ls	442cfc <nftw@plt+0x4017c>  // b.plast
  442ce0:	ldr	x0, [x1]
  442ce4:	str	x0, [x7]
  442ce8:	ldr	x9, [x21, #64]
  442cec:	add	x0, x19, x20
  442cf0:	str	x9, [x19, x20]
  442cf4:	str	x5, [x0, #8]
  442cf8:	str	x0, [x21, #64]
  442cfc:	cbnz	w8, 442dec <nftw@plt+0x4026c>
  442d00:	mov	x0, x19
  442d04:	ldp	x19, x20, [sp, #16]
  442d08:	ldp	x21, x22, [sp, #32]
  442d0c:	ldp	x23, x24, [sp, #48]
  442d10:	ldp	x29, x30, [sp], #64
  442d14:	ret
  442d18:	add	x0, x0, #0x3c
  442d1c:	mov	w2, #0x1                   	// #1
  442d20:	ldxr	w1, [x0]
  442d24:	stxr	w3, w2, [x0]
  442d28:	cbnz	w3, 442d20 <nftw@plt+0x401a0>
  442d2c:	dmb	ish
  442d30:	cbnz	w1, 442d58 <nftw@plt+0x401d8>
  442d34:	ldr	x4, [x21, #64]
  442d38:	add	x7, x21, #0x40
  442d3c:	ldr	w8, [x21, #8]
  442d40:	cbnz	x4, 442c48 <nftw@plt+0x400c8>
  442d44:	nop
  442d48:	cbz	w8, 442d58 <nftw@plt+0x401d8>
  442d4c:	add	x0, x21, #0x3c
  442d50:	stlr	wzr, [x0]
  442d54:	nop
  442d58:	bl	402760 <getpagesize@plt>
  442d5c:	sub	x22, x20, #0x1
  442d60:	sxtw	x0, w0
  442d64:	mov	x5, #0x0                   	// #0
  442d68:	add	x22, x22, x0
  442d6c:	neg	x0, x0
  442d70:	and	x22, x22, x0
  442d74:	mov	w4, #0xffffffff            	// #-1
  442d78:	mov	x1, x22
  442d7c:	mov	w3, #0x22                  	// #34
  442d80:	mov	w2, #0x3                   	// #3
  442d84:	mov	x0, #0x0                   	// #0
  442d88:	bl	4028b0 <mmap@plt>
  442d8c:	mov	x19, x0
  442d90:	cmn	x0, #0x1
  442d94:	b.eq	442dc4 <nftw@plt+0x40244>  // b.none
  442d98:	add	x1, x20, #0x7
  442d9c:	and	x1, x1, #0xfffffffffffffff8
  442da0:	cmp	x22, x1
  442da4:	b.ls	442d00 <nftw@plt+0x40180>  // b.plast
  442da8:	sub	x2, x22, x1
  442dac:	mov	x4, x23
  442db0:	add	x1, x0, x1
  442db4:	mov	x3, x24
  442db8:	mov	x0, x21
  442dbc:	bl	442ad8 <nftw@plt+0x3ff58>
  442dc0:	b	442d00 <nftw@plt+0x40180>
  442dc4:	mov	x19, #0x0                   	// #0
  442dc8:	cbz	x24, 442d00 <nftw@plt+0x40180>
  442dcc:	bl	402aa0 <__errno_location@plt>
  442dd0:	mov	x2, x0
  442dd4:	adrp	x1, 47e000 <_obstack_memory_used@@Base+0x1cbb8>
  442dd8:	mov	x0, x23
  442ddc:	add	x1, x1, #0xee0
  442de0:	ldr	w2, [x2]
  442de4:	blr	x24
  442de8:	b	442d00 <nftw@plt+0x40180>
  442dec:	add	x21, x21, #0x3c
  442df0:	stlr	wzr, [x21]
  442df4:	b	442d00 <nftw@plt+0x40180>
  442df8:	stp	x29, x30, [sp, #-96]!
  442dfc:	mov	x29, sp
  442e00:	stp	x23, x24, [sp, #48]
  442e04:	ldp	x23, x5, [x4, #8]
  442e08:	stp	x19, x20, [sp, #16]
  442e0c:	mov	x19, x4
  442e10:	stp	x21, x22, [sp, #32]
  442e14:	mov	x21, x1
  442e18:	add	x20, x1, x23
  442e1c:	cmp	x5, x1
  442e20:	b.cc	442e4c <nftw@plt+0x402cc>  // b.lo, b.ul, b.last
  442e24:	ldr	x22, [x4]
  442e28:	add	x22, x22, x23
  442e2c:	sub	x5, x5, x21
  442e30:	stp	x20, x5, [x19, #8]
  442e34:	mov	x0, x22
  442e38:	ldp	x19, x20, [sp, #16]
  442e3c:	ldp	x21, x22, [sp, #32]
  442e40:	ldp	x23, x24, [sp, #48]
  442e44:	ldp	x29, x30, [sp], #96
  442e48:	ret
  442e4c:	stp	x25, x26, [sp, #64]
  442e50:	mov	x24, x0
  442e54:	mov	x25, x2
  442e58:	mov	x26, x3
  442e5c:	cbnz	x23, 442ed4 <nftw@plt+0x40354>
  442e60:	lsl	x20, x20, #4
  442e64:	mov	x3, x26
  442e68:	mov	x2, x25
  442e6c:	mov	x1, x20
  442e70:	mov	x0, x24
  442e74:	bl	442c10 <nftw@plt+0x40090>
  442e78:	mov	x22, x0
  442e7c:	cbz	x0, 442f08 <nftw@plt+0x40388>
  442e80:	ldr	x23, [x19, #8]
  442e84:	str	x27, [sp, #80]
  442e88:	ldr	x27, [x19]
  442e8c:	cbz	x27, 442ebc <nftw@plt+0x4033c>
  442e90:	mov	x2, x23
  442e94:	mov	x1, x27
  442e98:	bl	402490 <memcpy@plt>
  442e9c:	ldr	x2, [x19, #16]
  442ea0:	mov	x4, x26
  442ea4:	mov	x3, x25
  442ea8:	mov	x1, x27
  442eac:	add	x2, x23, x2
  442eb0:	mov	x0, x24
  442eb4:	bl	442ad8 <nftw@plt+0x3ff58>
  442eb8:	ldr	x23, [x19, #8]
  442ebc:	sub	x5, x20, x23
  442ec0:	add	x20, x21, x23
  442ec4:	ldp	x25, x26, [sp, #64]
  442ec8:	ldr	x27, [sp, #80]
  442ecc:	str	x22, [x19]
  442ed0:	b	442e28 <nftw@plt+0x402a8>
  442ed4:	bl	402760 <getpagesize@plt>
  442ed8:	cmp	x20, w0, sxtw
  442edc:	lsl	x6, x20, #1
  442ee0:	sxtw	x5, w0
  442ee4:	b.cs	442ef4 <nftw@plt+0x40374>  // b.hs, b.nlast
  442ee8:	cmp	x5, x6
  442eec:	csel	x20, x5, x6, ls  // ls = plast
  442ef0:	b	442e64 <nftw@plt+0x402e4>
  442ef4:	sub	x20, x6, #0x1
  442ef8:	neg	x0, x5
  442efc:	add	x20, x20, x5
  442f00:	and	x20, x20, x0
  442f04:	b	442e64 <nftw@plt+0x402e4>
  442f08:	ldp	x25, x26, [sp, #64]
  442f0c:	b	442e34 <nftw@plt+0x402b4>
  442f10:	ldp	x0, x2, [x1]
  442f14:	add	x2, x0, x2
  442f18:	stp	x2, xzr, [x1]
  442f1c:	ret
  442f20:	stp	x29, x30, [sp, #-32]!
  442f24:	mov	x4, x3
  442f28:	mov	x3, x2
  442f2c:	mov	x29, sp
  442f30:	ldp	x2, x6, [x1, #8]
  442f34:	str	x19, [sp, #16]
  442f38:	mov	x19, x1
  442f3c:	ldr	x5, [x19]
  442f40:	add	x1, x2, #0x7
  442f44:	and	x1, x1, #0xfffffffffffffff8
  442f48:	add	x2, x2, x6
  442f4c:	sub	x2, x2, x1
  442f50:	add	x1, x5, x1
  442f54:	bl	442ad8 <nftw@plt+0x3ff58>
  442f58:	str	xzr, [x19, #16]
  442f5c:	ldr	x0, [x19, #8]
  442f60:	cbnz	x0, 442f68 <nftw@plt+0x403e8>
  442f64:	str	xzr, [x19]
  442f68:	mov	w0, #0x1                   	// #1
  442f6c:	ldr	x19, [sp, #16]
  442f70:	ldp	x29, x30, [sp], #32
  442f74:	ret
  442f78:	stp	x29, x30, [sp, #-176]!
  442f7c:	mov	x29, sp
  442f80:	stp	x19, x20, [sp, #16]
  442f84:	mov	x19, x0
  442f88:	ldr	w0, [x0, #8]
  442f8c:	stp	x21, x22, [sp, #32]
  442f90:	mov	x22, x3
  442f94:	stp	x23, x24, [sp, #48]
  442f98:	mov	x23, x1
  442f9c:	mov	x24, x2
  442fa0:	stp	x27, x28, [sp, #80]
  442fa4:	mov	x28, x4
  442fa8:	cbnz	w0, 443030 <nftw@plt+0x404b0>
  442fac:	ldr	w0, [x19, #56]
  442fb0:	cbnz	w0, 443000 <nftw@plt+0x40480>
  442fb4:	ldr	x0, [x19, #24]
  442fb8:	str	x0, [sp, #104]
  442fbc:	cbz	x0, 443054 <nftw@plt+0x404d4>
  442fc0:	ldr	w1, [x19, #56]
  442fc4:	mov	w0, #0x0                   	// #0
  442fc8:	cbnz	w1, 442fe8 <nftw@plt+0x40468>
  442fcc:	ldr	x5, [x19, #24]
  442fd0:	mov	x4, x28
  442fd4:	mov	x3, x22
  442fd8:	mov	x2, x24
  442fdc:	mov	x1, x23
  442fe0:	mov	x0, x19
  442fe4:	blr	x5
  442fe8:	ldp	x19, x20, [sp, #16]
  442fec:	ldp	x21, x22, [sp, #32]
  442ff0:	ldp	x23, x24, [sp, #48]
  442ff4:	ldp	x27, x28, [sp, #80]
  442ff8:	ldp	x29, x30, [sp], #176
  442ffc:	ret
  443000:	mov	x0, x28
  443004:	mov	w2, #0xffffffff            	// #-1
  443008:	adrp	x1, 47e000 <_obstack_memory_used@@Base+0x1cbb8>
  44300c:	add	x1, x1, #0xf10
  443010:	blr	x22
  443014:	mov	w0, #0x0                   	// #0
  443018:	ldp	x19, x20, [sp, #16]
  44301c:	ldp	x21, x22, [sp, #32]
  443020:	ldp	x23, x24, [sp, #48]
  443024:	ldp	x27, x28, [sp, #80]
  443028:	ldp	x29, x30, [sp], #176
  44302c:	ret
  443030:	add	x0, x19, #0x38
  443034:	ldar	w0, [x0]
  443038:	cbnz	w0, 443000 <nftw@plt+0x40480>
  44303c:	ldr	w0, [x19, #8]
  443040:	cbz	w0, 442fb4 <nftw@plt+0x40434>
  443044:	add	x0, x19, #0x18
  443048:	ldar	x0, [x0]
  44304c:	str	x0, [sp, #104]
  443050:	cbnz	x0, 442fc0 <nftw@plt+0x40440>
  443054:	add	x27, sp, #0x64
  443058:	stp	x25, x26, [sp, #64]
  44305c:	adrp	x26, 47e000 <_obstack_memory_used@@Base+0x1cbb8>
  443060:	adrp	x25, 47e000 <_obstack_memory_used@@Base+0x1cbb8>
  443064:	add	x26, x26, #0xee8
  443068:	add	x25, x25, #0xf38
  44306c:	mov	w20, #0x0                   	// #0
  443070:	cmp	w20, #0x3
  443074:	b.eq	443158 <nftw@plt+0x405d8>  // b.none
  443078:	cmp	w20, #0x4
  44307c:	b.eq	443134 <nftw@plt+0x405b4>  // b.none
  443080:	cmp	w20, #0x1
  443084:	b.eq	4430f0 <nftw@plt+0x40570>  // b.none
  443088:	cmp	w20, #0x2
  44308c:	b.ne	4430e8 <nftw@plt+0x40568>  // b.any
  443090:	adrp	x21, 47e000 <_obstack_memory_used@@Base+0x1cbb8>
  443094:	add	x21, x21, #0xf00
  443098:	mov	x3, x27
  44309c:	mov	x2, x28
  4430a0:	mov	x1, x22
  4430a4:	mov	x0, x21
  4430a8:	bl	4433c8 <nftw@plt+0x40848>
  4430ac:	tbnz	w0, #31, 443128 <nftw@plt+0x405a8>
  4430b0:	mov	w2, w0
  4430b4:	mov	x1, x21
  4430b8:	add	x5, sp, #0x68
  4430bc:	mov	x4, x28
  4430c0:	mov	x3, x22
  4430c4:	mov	x0, x19
  4430c8:	bl	446e80 <nftw@plt+0x44300>
  4430cc:	cbz	w0, 443110 <nftw@plt+0x40590>
  4430d0:	ldr	w1, [x19, #8]
  4430d4:	ldr	x0, [sp, #104]
  4430d8:	cbnz	w1, 443160 <nftw@plt+0x405e0>
  4430dc:	ldp	x25, x26, [sp, #64]
  4430e0:	str	x0, [x19, #24]
  4430e4:	b	442fc0 <nftw@plt+0x40440>
  4430e8:	ldr	x21, [x19]
  4430ec:	cbnz	x21, 443098 <nftw@plt+0x40518>
  4430f0:	add	w20, w20, #0x1
  4430f4:	cmp	w20, #0x5
  4430f8:	b.ne	443070 <nftw@plt+0x404f0>  // b.any
  4430fc:	ldr	x1, [x19]
  443100:	mov	x0, x28
  443104:	cbz	x1, 443170 <nftw@plt+0x405f0>
  443108:	mov	w2, #0x2                   	// #2
  44310c:	blr	x22
  443110:	ldr	w0, [x19, #8]
  443114:	cbnz	w0, 443184 <nftw@plt+0x40604>
  443118:	mov	w1, #0x1                   	// #1
  44311c:	ldp	x25, x26, [sp, #64]
  443120:	str	w1, [x19, #56]
  443124:	b	442fe8 <nftw@plt+0x40468>
  443128:	ldr	w0, [sp, #100]
  44312c:	cbnz	w0, 4430f0 <nftw@plt+0x40570>
  443130:	b	443110 <nftw@plt+0x40590>
  443134:	bl	402630 <getpid@plt>
  443138:	sxtw	x3, w0
  44313c:	add	x1, sp, #0x70
  443140:	mov	x2, x25
  443144:	mov	x21, x1
  443148:	mov	x0, x1
  44314c:	mov	x1, #0x40                  	// #64
  443150:	bl	402600 <snprintf@plt>
  443154:	b	443098 <nftw@plt+0x40518>
  443158:	mov	x21, x26
  44315c:	b	443098 <nftw@plt+0x40518>
  443160:	add	x1, x19, #0x18
  443164:	stlr	x0, [x1]
  443168:	ldp	x25, x26, [sp, #64]
  44316c:	b	442fc0 <nftw@plt+0x40440>
  443170:	adrp	x1, 47e000 <_obstack_memory_used@@Base+0x1cbb8>
  443174:	mov	w2, #0x0                   	// #0
  443178:	add	x1, x1, #0xf50
  44317c:	blr	x22
  443180:	b	443110 <nftw@plt+0x40590>
  443184:	mov	w0, #0x1                   	// #1
  443188:	add	x19, x19, #0x38
  44318c:	stlr	w0, [x19]
  443190:	ldp	x25, x26, [sp, #64]
  443194:	mov	w0, #0x0                   	// #0
  443198:	b	442fe8 <nftw@plt+0x40468>
  44319c:	nop
  4431a0:	stp	x29, x30, [sp, #-176]!
  4431a4:	mov	x29, sp
  4431a8:	stp	x19, x20, [sp, #16]
  4431ac:	mov	x19, x0
  4431b0:	ldr	w0, [x0, #8]
  4431b4:	stp	x21, x22, [sp, #32]
  4431b8:	mov	x22, x3
  4431bc:	stp	x23, x24, [sp, #48]
  4431c0:	mov	x23, x1
  4431c4:	mov	x24, x2
  4431c8:	stp	x27, x28, [sp, #80]
  4431cc:	mov	x28, x4
  4431d0:	cbnz	w0, 44325c <nftw@plt+0x406dc>
  4431d4:	ldr	w0, [x19, #56]
  4431d8:	cbnz	w0, 44322c <nftw@plt+0x406ac>
  4431dc:	ldr	x0, [x19, #24]
  4431e0:	str	x0, [sp, #104]
  4431e4:	cbz	x0, 443280 <nftw@plt+0x40700>
  4431e8:	ldr	w1, [x19, #56]
  4431ec:	mov	w0, #0x0                   	// #0
  4431f0:	cbnz	w1, 443214 <nftw@plt+0x40694>
  4431f4:	ldr	x5, [x19, #40]
  4431f8:	mov	x0, x19
  4431fc:	mov	x4, x28
  443200:	mov	x3, x22
  443204:	mov	x2, x24
  443208:	mov	x1, x23
  44320c:	blr	x5
  443210:	mov	w0, #0x1                   	// #1
  443214:	ldp	x19, x20, [sp, #16]
  443218:	ldp	x21, x22, [sp, #32]
  44321c:	ldp	x23, x24, [sp, #48]
  443220:	ldp	x27, x28, [sp, #80]
  443224:	ldp	x29, x30, [sp], #176
  443228:	ret
  44322c:	mov	x0, x28
  443230:	mov	w2, #0xffffffff            	// #-1
  443234:	adrp	x1, 47e000 <_obstack_memory_used@@Base+0x1cbb8>
  443238:	add	x1, x1, #0xf10
  44323c:	blr	x22
  443240:	mov	w0, #0x0                   	// #0
  443244:	ldp	x19, x20, [sp, #16]
  443248:	ldp	x21, x22, [sp, #32]
  44324c:	ldp	x23, x24, [sp, #48]
  443250:	ldp	x27, x28, [sp, #80]
  443254:	ldp	x29, x30, [sp], #176
  443258:	ret
  44325c:	add	x0, x19, #0x38
  443260:	ldar	w0, [x0]
  443264:	cbnz	w0, 44322c <nftw@plt+0x406ac>
  443268:	ldr	w0, [x19, #8]
  44326c:	cbz	w0, 4431dc <nftw@plt+0x4065c>
  443270:	add	x0, x19, #0x18
  443274:	ldar	x0, [x0]
  443278:	str	x0, [sp, #104]
  44327c:	cbnz	x0, 4431e8 <nftw@plt+0x40668>
  443280:	add	x27, sp, #0x64
  443284:	stp	x25, x26, [sp, #64]
  443288:	adrp	x26, 47e000 <_obstack_memory_used@@Base+0x1cbb8>
  44328c:	adrp	x25, 47e000 <_obstack_memory_used@@Base+0x1cbb8>
  443290:	add	x26, x26, #0xee8
  443294:	add	x25, x25, #0xf38
  443298:	mov	w20, #0x0                   	// #0
  44329c:	cmp	w20, #0x3
  4432a0:	b.eq	443384 <nftw@plt+0x40804>  // b.none
  4432a4:	cmp	w20, #0x4
  4432a8:	b.eq	443360 <nftw@plt+0x407e0>  // b.none
  4432ac:	cmp	w20, #0x1
  4432b0:	b.eq	44331c <nftw@plt+0x4079c>  // b.none
  4432b4:	cmp	w20, #0x2
  4432b8:	b.ne	443314 <nftw@plt+0x40794>  // b.any
  4432bc:	adrp	x21, 47e000 <_obstack_memory_used@@Base+0x1cbb8>
  4432c0:	add	x21, x21, #0xf00
  4432c4:	mov	x3, x27
  4432c8:	mov	x2, x28
  4432cc:	mov	x1, x22
  4432d0:	mov	x0, x21
  4432d4:	bl	4433c8 <nftw@plt+0x40848>
  4432d8:	tbnz	w0, #31, 443354 <nftw@plt+0x407d4>
  4432dc:	mov	w2, w0
  4432e0:	mov	x1, x21
  4432e4:	add	x5, sp, #0x68
  4432e8:	mov	x4, x28
  4432ec:	mov	x3, x22
  4432f0:	mov	x0, x19
  4432f4:	bl	446e80 <nftw@plt+0x44300>
  4432f8:	cbz	w0, 44333c <nftw@plt+0x407bc>
  4432fc:	ldr	w1, [x19, #8]
  443300:	ldr	x0, [sp, #104]
  443304:	cbnz	w1, 44338c <nftw@plt+0x4080c>
  443308:	ldp	x25, x26, [sp, #64]
  44330c:	str	x0, [x19, #24]
  443310:	b	4431e8 <nftw@plt+0x40668>
  443314:	ldr	x21, [x19]
  443318:	cbnz	x21, 4432c4 <nftw@plt+0x40744>
  44331c:	add	w20, w20, #0x1
  443320:	cmp	w20, #0x5
  443324:	b.ne	44329c <nftw@plt+0x4071c>  // b.any
  443328:	ldr	x1, [x19]
  44332c:	mov	x0, x28
  443330:	cbz	x1, 44339c <nftw@plt+0x4081c>
  443334:	mov	w2, #0x2                   	// #2
  443338:	blr	x22
  44333c:	ldr	w0, [x19, #8]
  443340:	cbnz	w0, 4433b0 <nftw@plt+0x40830>
  443344:	mov	w1, #0x1                   	// #1
  443348:	ldp	x25, x26, [sp, #64]
  44334c:	str	w1, [x19, #56]
  443350:	b	443214 <nftw@plt+0x40694>
  443354:	ldr	w0, [sp, #100]
  443358:	cbnz	w0, 44331c <nftw@plt+0x4079c>
  44335c:	b	44333c <nftw@plt+0x407bc>
  443360:	bl	402630 <getpid@plt>
  443364:	sxtw	x3, w0
  443368:	add	x1, sp, #0x70
  44336c:	mov	x2, x25
  443370:	mov	x21, x1
  443374:	mov	x0, x1
  443378:	mov	x1, #0x40                  	// #64
  44337c:	bl	402600 <snprintf@plt>
  443380:	b	4432c4 <nftw@plt+0x40744>
  443384:	mov	x21, x26
  443388:	b	4432c4 <nftw@plt+0x40744>
  44338c:	add	x1, x19, #0x18
  443390:	stlr	x0, [x1]
  443394:	ldp	x25, x26, [sp, #64]
  443398:	b	4431e8 <nftw@plt+0x40668>
  44339c:	adrp	x1, 47e000 <_obstack_memory_used@@Base+0x1cbb8>
  4433a0:	mov	w2, #0x0                   	// #0
  4433a4:	add	x1, x1, #0xf50
  4433a8:	blr	x22
  4433ac:	b	44333c <nftw@plt+0x407bc>
  4433b0:	mov	w0, #0x1                   	// #1
  4433b4:	add	x19, x19, #0x38
  4433b8:	stlr	w0, [x19]
  4433bc:	ldp	x25, x26, [sp, #64]
  4433c0:	mov	w0, #0x0                   	// #0
  4433c4:	b	443214 <nftw@plt+0x40694>
  4433c8:	stp	x29, x30, [sp, #-64]!
  4433cc:	mov	x29, sp
  4433d0:	stp	x19, x20, [sp, #16]
  4433d4:	stp	x21, x22, [sp, #32]
  4433d8:	mov	x22, x2
  4433dc:	mov	x21, x0
  4433e0:	str	x23, [sp, #48]
  4433e4:	mov	x23, x1
  4433e8:	cbz	x3, 44342c <nftw@plt+0x408ac>
  4433ec:	str	wzr, [x3]
  4433f0:	mov	x20, x3
  4433f4:	mov	w1, #0x80000               	// #524288
  4433f8:	bl	402680 <open@plt>
  4433fc:	mov	w19, w0
  443400:	tbnz	w0, #31, 443458 <nftw@plt+0x408d8>
  443404:	mov	w0, w19
  443408:	mov	w2, #0x1                   	// #1
  44340c:	mov	w1, #0x2                   	// #2
  443410:	bl	402960 <fcntl@plt>
  443414:	mov	w0, w19
  443418:	ldp	x19, x20, [sp, #16]
  44341c:	ldp	x21, x22, [sp, #32]
  443420:	ldr	x23, [sp, #48]
  443424:	ldp	x29, x30, [sp], #64
  443428:	ret
  44342c:	mov	w1, #0x80000               	// #524288
  443430:	bl	402680 <open@plt>
  443434:	mov	w19, w0
  443438:	tbz	w0, #31, 443404 <nftw@plt+0x40884>
  44343c:	bl	402aa0 <__errno_location@plt>
  443440:	ldr	w2, [x0]
  443444:	mov	x1, x21
  443448:	mov	x0, x22
  44344c:	mov	w19, #0xffffffff            	// #-1
  443450:	blr	x23
  443454:	b	443414 <nftw@plt+0x40894>
  443458:	bl	402aa0 <__errno_location@plt>
  44345c:	ldr	w1, [x0]
  443460:	cmp	w1, #0x2
  443464:	b.ne	443440 <nftw@plt+0x408c0>  // b.any
  443468:	mov	w0, #0x1                   	// #1
  44346c:	mov	w19, #0xffffffff            	// #-1
  443470:	str	w0, [x20]
  443474:	b	443414 <nftw@plt+0x40894>
  443478:	stp	x29, x30, [sp, #-32]!
  44347c:	mov	x29, sp
  443480:	stp	x19, x20, [sp, #16]
  443484:	mov	x19, x1
  443488:	mov	x20, x2
  44348c:	bl	4027a0 <close@plt>
  443490:	tbnz	w0, #31, 4434a4 <nftw@plt+0x40924>
  443494:	mov	w0, #0x1                   	// #1
  443498:	ldp	x19, x20, [sp, #16]
  44349c:	ldp	x29, x30, [sp], #32
  4434a0:	ret
  4434a4:	bl	402aa0 <__errno_location@plt>
  4434a8:	mov	x2, x0
  4434ac:	adrp	x1, 47e000 <_obstack_memory_used@@Base+0x1cbb8>
  4434b0:	mov	x0, x20
  4434b4:	add	x1, x1, #0xf80
  4434b8:	ldr	w2, [x2]
  4434bc:	blr	x19
  4434c0:	mov	w0, #0x0                   	// #0
  4434c4:	ldp	x19, x20, [sp, #16]
  4434c8:	ldp	x29, x30, [sp], #32
  4434cc:	ret
  4434d0:	stp	x29, x30, [sp, #-16]!
  4434d4:	mov	x0, x4
  4434d8:	mov	w2, #0xffffffff            	// #-1
  4434dc:	mov	x29, sp
  4434e0:	adrp	x1, 47e000 <_obstack_memory_used@@Base+0x1cbb8>
  4434e4:	add	x1, x1, #0xf88
  4434e8:	blr	x3
  4434ec:	mov	w0, #0x0                   	// #0
  4434f0:	ldp	x29, x30, [sp], #16
  4434f4:	ret
  4434f8:	mov	x0, x4
  4434fc:	mov	x16, x3
  443500:	adrp	x1, 47e000 <_obstack_memory_used@@Base+0x1cbb8>
  443504:	mov	w2, #0xffffffff            	// #-1
  443508:	add	x1, x1, #0xfa8
  44350c:	br	x16
  443510:	ldr	x2, [x0, #8]
  443514:	mov	w3, #0xffffffff            	// #-1
  443518:	ldr	x1, [x1, #8]
  44351c:	cmp	x2, x1
  443520:	cset	w0, hi  // hi = pmore
  443524:	csel	w0, w0, w3, cs  // cs = hs, nlast
  443528:	ret
  44352c:	nop
  443530:	stp	x29, x30, [sp, #-48]!
  443534:	mov	x12, x2
  443538:	mov	x17, #0x15af                	// #5551
  44353c:	mov	x29, sp
  443540:	cmp	x2, x17
  443544:	ldrb	w18, [x0]
  443548:	ldrb	w2, [x0, #1]
  44354c:	mov	x11, x1
  443550:	ldrb	w1, [x0, #2]
  443554:	ldrb	w0, [x0, #3]
  443558:	orr	w18, w2, w18, lsl #8
  44355c:	orr	w18, w1, w18, lsl #8
  443560:	orr	w18, w0, w18, lsl #8
  443564:	b.ls	4437e0 <nftw@plt+0x40c60>  // b.plast
  443568:	mov	x16, #0x15b0                	// #5552
  44356c:	mov	w14, #0x8071                	// #32881
  443570:	add	x10, x11, x16
  443574:	mov	w9, #0x0                   	// #0
  443578:	mov	w5, #0x1                   	// #1
  44357c:	mov	x15, #0xffffffffffffea50    	// #-5552
  443580:	movk	w14, #0x8007, lsl #16
  443584:	mov	w13, #0xfff1                	// #65521
  443588:	stp	x19, x20, [sp, #16]
  44358c:	stp	x21, x22, [sp, #32]
  443590:	add	x2, x10, x15
  443594:	nop
  443598:	ldrb	w3, [x2]
  44359c:	add	x2, x2, #0x10
  4435a0:	ldurb	w4, [x2, #-15]
  4435a4:	mov	x11, x10
  4435a8:	ldurb	w0, [x2, #-14]
  4435ac:	add	w3, w3, w5
  4435b0:	ldurb	w1, [x2, #-13]
  4435b4:	add	w4, w4, w3
  4435b8:	add	w0, w0, w4
  4435bc:	ldurb	w8, [x2, #-12]
  4435c0:	ldurb	w22, [x2, #-11]
  4435c4:	add	w1, w1, w0
  4435c8:	ldurb	w7, [x2, #-10]
  4435cc:	add	w8, w8, w1
  4435d0:	ldurb	w21, [x2, #-9]
  4435d4:	add	w22, w22, w8
  4435d8:	ldurb	w6, [x2, #-8]
  4435dc:	add	w7, w7, w22
  4435e0:	ldurb	w19, [x2, #-7]
  4435e4:	add	w21, w21, w7
  4435e8:	ldurb	w5, [x2, #-6]
  4435ec:	add	w6, w6, w21
  4435f0:	ldurb	w30, [x2, #-5]
  4435f4:	add	w19, w19, w6
  4435f8:	ldurb	w20, [x2, #-3]
  4435fc:	add	w3, w3, w4
  443600:	add	w1, w0, w1
  443604:	ldurb	w4, [x2, #-4]
  443608:	add	w5, w5, w19
  44360c:	add	w1, w1, w3
  443610:	ldurb	w3, [x2, #-2]
  443614:	add	w30, w30, w5
  443618:	add	w8, w8, w22
  44361c:	add	w0, w7, w21
  443620:	add	w4, w4, w30
  443624:	add	w1, w1, w8
  443628:	add	w1, w1, w0
  44362c:	add	w7, w20, w4
  443630:	add	w0, w6, w19
  443634:	ldurb	w6, [x2, #-1]
  443638:	add	w5, w5, w30
  44363c:	add	w3, w3, w7
  443640:	add	w0, w1, w0
  443644:	add	w4, w4, w7
  443648:	add	w0, w0, w5
  44364c:	add	w5, w6, w3
  443650:	add	w0, w0, w4
  443654:	add	w3, w3, w5
  443658:	add	w0, w0, w3
  44365c:	cmp	x10, x2
  443660:	add	w9, w9, w0
  443664:	b.ne	443598 <nftw@plt+0x40a18>  // b.any
  443668:	umull	x1, w5, w14
  44366c:	add	x12, x12, x15
  443670:	umull	x0, w9, w14
  443674:	cmp	x12, x17
  443678:	add	x10, x10, x16
  44367c:	lsr	x1, x1, #47
  443680:	lsr	x0, x0, #47
  443684:	msub	w5, w1, w13, w5
  443688:	msub	w9, w0, w13, w9
  44368c:	b.hi	443590 <nftw@plt+0x40a10>  // b.pmore
  443690:	ldp	x19, x20, [sp, #16]
  443694:	ldp	x21, x22, [sp, #32]
  443698:	cmp	x12, #0xf
  44369c:	b.ls	443780 <nftw@plt+0x40c00>  // b.plast
  4436a0:	sub	x7, x12, #0x10
  4436a4:	and	x7, x7, #0xfffffffffffffff0
  4436a8:	add	x7, x7, #0x10
  4436ac:	add	x7, x11, x7
  4436b0:	ldrb	w1, [x11]
  4436b4:	add	x11, x11, #0x10
  4436b8:	ldurb	w8, [x11, #-15]
  4436bc:	ldurb	w0, [x11, #-14]
  4436c0:	add	w1, w1, w5
  4436c4:	ldurb	w2, [x11, #-13]
  4436c8:	add	w8, w8, w1
  4436cc:	ldurb	w6, [x11, #-12]
  4436d0:	add	w0, w0, w8
  4436d4:	ldurb	w15, [x11, #-11]
  4436d8:	add	w2, w2, w0
  4436dc:	ldurb	w5, [x11, #-10]
  4436e0:	add	w6, w6, w2
  4436e4:	ldurb	w14, [x11, #-9]
  4436e8:	add	w15, w15, w6
  4436ec:	ldurb	w3, [x11, #-8]
  4436f0:	add	w5, w5, w15
  4436f4:	ldurb	w13, [x11, #-7]
  4436f8:	add	w14, w14, w5
  4436fc:	ldurb	w4, [x11, #-6]
  443700:	add	w3, w3, w14
  443704:	ldurb	w10, [x11, #-5]
  443708:	add	w1, w1, w8
  44370c:	add	w13, w13, w3
  443710:	ldurb	w8, [x11, #-3]
  443714:	add	w0, w0, w2
  443718:	ldurb	w2, [x11, #-4]
  44371c:	add	w4, w4, w13
  443720:	add	w0, w0, w1
  443724:	ldurb	w1, [x11, #-2]
  443728:	add	w6, w6, w15
  44372c:	add	w10, w10, w4
  443730:	add	w0, w0, w6
  443734:	add	w5, w5, w14
  443738:	add	w2, w2, w10
  44373c:	add	w0, w0, w5
  443740:	add	w6, w8, w2
  443744:	ldurb	w5, [x11, #-1]
  443748:	add	w3, w3, w13
  44374c:	add	w1, w1, w6
  443750:	add	w0, w0, w3
  443754:	add	w4, w4, w10
  443758:	add	w2, w2, w6
  44375c:	add	w0, w0, w4
  443760:	add	w5, w5, w1
  443764:	add	w0, w0, w2
  443768:	add	w1, w1, w5
  44376c:	add	w0, w0, w1
  443770:	cmp	x11, x7
  443774:	add	w9, w9, w0
  443778:	b.ne	4436b0 <nftw@plt+0x40b30>  // b.any
  44377c:	and	x12, x12, #0xf
  443780:	cbz	x12, 4437a8 <nftw@plt+0x40c28>
  443784:	mov	w2, #0x1                   	// #1
  443788:	sub	w2, w2, w11
  44378c:	ldrb	w0, [x11]
  443790:	add	w1, w2, w11
  443794:	cmp	x1, x12
  443798:	add	x11, x11, #0x1
  44379c:	add	w5, w5, w0
  4437a0:	add	w9, w9, w5
  4437a4:	b.cc	44378c <nftw@plt+0x40c0c>  // b.lo, b.ul, b.last
  4437a8:	mov	w0, #0x8071                	// #32881
  4437ac:	mov	w2, #0xfff1                	// #65521
  4437b0:	movk	w0, #0x8007, lsl #16
  4437b4:	ldp	x29, x30, [sp], #48
  4437b8:	umull	x1, w9, w0
  4437bc:	umull	x3, w5, w0
  4437c0:	lsr	x0, x1, #47
  4437c4:	lsr	x3, x3, #47
  4437c8:	msub	w9, w0, w2, w9
  4437cc:	msub	w3, w3, w2, w5
  4437d0:	add	w3, w3, w9, lsl #16
  4437d4:	cmp	w3, w18
  4437d8:	cset	w0, eq  // eq = none
  4437dc:	ret
  4437e0:	mov	w9, #0x0                   	// #0
  4437e4:	mov	w5, #0x1                   	// #1
  4437e8:	b	443698 <nftw@plt+0x40b18>
  4437ec:	nop
  4437f0:	stp	x29, x30, [sp, #-176]!
  4437f4:	mov	x5, #0x0                   	// #0
  4437f8:	mov	w9, #0x1                   	// #1
  4437fc:	mov	x29, sp
  443800:	add	x8, sp, #0x90
  443804:	add	x10, sp, #0x70
  443808:	stp	x19, x20, [sp, #16]
  44380c:	add	x20, x2, #0x1, lsl #12
  443810:	add	x19, sp, #0x50
  443814:	stp	xzr, xzr, [sp, #80]
  443818:	stp	xzr, xzr, [sp, #96]
  44381c:	nop
  443820:	ldrb	w4, [x0, x5]
  443824:	and	w6, w5, #0xffff
  443828:	cmp	w4, #0xf
  44382c:	b.hi	443948 <nftw@plt+0x40dc8>  // b.pmore
  443830:	sbfiz	x4, x4, #1, #32
  443834:	ldrh	w7, [x19, x4]
  443838:	cbnz	w7, 443958 <nftw@plt+0x40dd8>
  44383c:	strh	w6, [x10, x4]
  443840:	add	x5, x5, #0x1
  443844:	strh	w6, [x8, x4]
  443848:	cmp	x5, x1
  44384c:	strh	w9, [x19, x4]
  443850:	b.ne	443820 <nftw@plt+0x40ca0>  // b.any
  443854:	mov	x0, x3
  443858:	mov	w1, #0x0                   	// #0
  44385c:	mov	x2, #0x800                 	// #2048
  443860:	bl	4026f0 <memset@plt>
  443864:	add	x12, sp, #0x70
  443868:	mov	x3, x0
  44386c:	mov	x5, #0x0                   	// #0
  443870:	mov	w1, #0x0                   	// #0
  443874:	mov	w10, #0x1                   	// #1
  443878:	lsl	x2, x5, #1
  44387c:	add	x0, x19, x2
  443880:	ldrh	w0, [x0, #2]
  443884:	cbnz	w0, 443988 <nftw@plt+0x40e08>
  443888:	add	x5, x5, #0x1
  44388c:	cmp	x5, #0x8
  443890:	b.ne	443878 <nftw@plt+0x40cf8>  // b.any
  443894:	mov	x8, x19
  443898:	add	x11, sp, #0x40
  44389c:	mov	x2, #0x9                   	// #9
  4438a0:	mov	w9, #0x1                   	// #1
  4438a4:	b	4438b8 <nftw@plt+0x40d38>
  4438a8:	add	x2, x2, #0x1
  4438ac:	add	x8, x8, #0x2
  4438b0:	cmp	x2, #0x10
  4438b4:	b.eq	443a48 <nftw@plt+0x40ec8>  // b.none
  4438b8:	ldrh	w7, [x8, #18]
  4438bc:	cbz	w7, 4438a8 <nftw@plt+0x40d28>
  4438c0:	add	x0, x11, x2, lsl #1
  4438c4:	sub	w10, w2, #0x1
  4438c8:	mov	w5, #0x0                   	// #0
  4438cc:	mov	x6, #0x0                   	// #0
  4438d0:	sturh	w1, [x0, #-18]
  4438d4:	b	4438e8 <nftw@plt+0x40d68>
  4438d8:	add	w6, w5, #0x1
  4438dc:	mov	x5, x6
  4438e0:	cmp	x2, w6, uxtw
  4438e4:	b.ls	443944 <nftw@plt+0x40dc4>  // b.plast
  4438e8:	lsr	w0, w7, w5
  4438ec:	tbz	w0, #0, 4438d8 <nftw@plt+0x40d58>
  4438f0:	sub	w0, w10, w5
  4438f4:	subs	x6, x2, x6
  4438f8:	lsl	w0, w9, w0
  4438fc:	b.eq	44392c <nftw@plt+0x40dac>  // b.none
  443900:	tst	w1, w0
  443904:	b.eq	4439ec <nftw@plt+0x40e6c>  // b.none
  443908:	mov	w4, #0x0                   	// #0
  44390c:	b	443918 <nftw@plt+0x40d98>
  443910:	tst	w1, w0
  443914:	b.eq	4439ec <nftw@plt+0x40e6c>  // b.none
  443918:	add	w4, w4, #0x1
  44391c:	bic	w1, w1, w0
  443920:	lsr	w0, w0, #1
  443924:	cmp	x6, w4, uxtw
  443928:	b.hi	443910 <nftw@plt+0x40d90>  // b.pmore
  44392c:	lsl	w0, w9, w5
  443930:	bic	w7, w7, w0
  443934:	add	w6, w5, #0x1
  443938:	mov	x5, x6
  44393c:	cmp	x2, w6, uxtw
  443940:	b.hi	4438e8 <nftw@plt+0x40d68>  // b.pmore
  443944:	cbz	w7, 4438a8 <nftw@plt+0x40d28>
  443948:	mov	w0, #0x0                   	// #0
  44394c:	ldp	x19, x20, [sp, #16]
  443950:	ldp	x29, x30, [sp], #176
  443954:	ret
  443958:	ldrh	w2, [x8, x4]
  44395c:	strh	w6, [x20, x2, lsl #1]
  443960:	ldrb	w4, [x0, x5]
  443964:	add	x5, x5, #0x1
  443968:	cmp	x1, x5
  44396c:	lsl	x4, x4, #1
  443970:	ldrh	w7, [x19, x4]
  443974:	strh	w6, [x8, x4]
  443978:	add	w6, w7, #0x1
  44397c:	strh	w6, [x19, x4]
  443980:	b.ne	443820 <nftw@plt+0x40ca0>  // b.any
  443984:	b	443854 <nftw@plt+0x40cd4>
  443988:	add	w4, w5, #0x1
  44398c:	lsl	w4, w10, w4
  443990:	cmp	w4, w0
  443994:	b.cc	443948 <nftw@plt+0x40dc8>  // b.lo, b.ul, b.last
  443998:	add	x2, x2, x12
  44399c:	and	x6, x0, #0xffff
  4439a0:	ldrh	w8, [x2, #2]
  4439a4:	tst	w8, #0xfe00
  4439a8:	b.ne	443948 <nftw@plt+0x40dc8>  // b.any
  4439ac:	sxtw	x4, w4
  4439b0:	ubfiz	w13, w5, #9, #7
  4439b4:	lsl	w9, w10, w5
  4439b8:	mov	x11, #0x0                   	// #0
  4439bc:	cmp	w1, #0xff
  4439c0:	orr	w7, w13, w8
  4439c4:	mov	w0, w1
  4439c8:	b.ls	4439e0 <nftw@plt+0x40e60>  // b.plast
  4439cc:	b	4439fc <nftw@plt+0x40e7c>
  4439d0:	strh	w7, [x3, x0, lsl #1]
  4439d4:	add	x0, x0, x4
  4439d8:	cmp	x0, #0xff
  4439dc:	b.hi	4439fc <nftw@plt+0x40e7c>  // b.pmore
  4439e0:	ldrh	w2, [x3, x0, lsl #1]
  4439e4:	cbz	w2, 4439d0 <nftw@plt+0x40e50>
  4439e8:	b	443948 <nftw@plt+0x40dc8>
  4439ec:	add	w1, w1, w0
  4439f0:	lsl	w0, w9, w5
  4439f4:	bic	w7, w7, w0
  4439f8:	b	443934 <nftw@plt+0x40db4>
  4439fc:	add	x11, x11, #0x1
  443a00:	cmp	x11, x6
  443a04:	b.cs	443a10 <nftw@plt+0x40e90>  // b.hs, b.nlast
  443a08:	ubfiz	x8, x8, #1, #16
  443a0c:	ldrh	w8, [x20, x8]
  443a10:	mov	w0, w9
  443a14:	tst	w9, w1
  443a18:	b.eq	443a7c <nftw@plt+0x40efc>  // b.none
  443a1c:	nop
  443a20:	lsr	w0, w0, #1
  443a24:	tst	w0, w1
  443a28:	b.ne	443a20 <nftw@plt+0x40ea0>  // b.any
  443a2c:	cbnz	w0, 443a7c <nftw@plt+0x40efc>
  443a30:	mov	w1, #0x0                   	// #0
  443a34:	cmp	x11, x6
  443a38:	b.eq	443888 <nftw@plt+0x40d08>  // b.none
  443a3c:	tst	w8, #0xfe00
  443a40:	b.eq	4439bc <nftw@plt+0x40e3c>  // b.none
  443a44:	b	443948 <nftw@plt+0x40dc8>
  443a48:	add	x30, sp, #0x70
  443a4c:	add	x18, sp, #0x40
  443a50:	mov	x6, #0x7                   	// #7
  443a54:	mov	x11, #0x0                   	// #0
  443a58:	mov	w9, #0x1                   	// #1
  443a5c:	lsl	x0, x6, #1
  443a60:	add	x1, x19, x0
  443a64:	ldrh	w8, [x1, #16]
  443a68:	cbnz	w8, 443a8c <nftw@plt+0x40f0c>
  443a6c:	subs	x6, x6, #0x1
  443a70:	b.ne	443a5c <nftw@plt+0x40edc>  // b.any
  443a74:	mov	w0, #0x1                   	// #1
  443a78:	b	44394c <nftw@plt+0x40dcc>
  443a7c:	sub	w2, w0, #0x1
  443a80:	and	w1, w2, w1
  443a84:	add	w1, w0, w1
  443a88:	b	443a34 <nftw@plt+0x40eb4>
  443a8c:	add	x1, x0, x30
  443a90:	add	x0, x0, x18
  443a94:	ubfiz	w13, w6, #9, #7
  443a98:	lsl	w5, w9, w6
  443a9c:	add	w12, w13, #0x1, lsl #12
  443aa0:	add	w10, w6, #0x7
  443aa4:	ldrh	w15, [x1, #16]
  443aa8:	and	x8, x8, #0xffff
  443aac:	ldurh	w7, [x0, #-2]
  443ab0:	and	w12, w12, #0xffff
  443ab4:	stp	x21, x22, [sp, #32]
  443ab8:	sxtw	x22, w5
  443abc:	mov	w21, w6
  443ac0:	mov	w5, w5
  443ac4:	lsl	w10, w9, w10
  443ac8:	mov	x17, #0x0                   	// #0
  443acc:	mov	x14, #0x0                   	// #0
  443ad0:	mov	x16, #0x0                   	// #0
  443ad4:	stp	x23, x24, [sp, #48]
  443ad8:	mov	x24, #0x100                 	// #256
  443adc:	mov	w2, w17
  443ae0:	cmp	x24, w7, uxtb
  443ae4:	and	x1, x7, #0xff
  443ae8:	b.eq	443b1c <nftw@plt+0x40f9c>  // b.none
  443aec:	lsl	x2, x1, #1
  443af0:	ldrh	w0, [x3, x2]
  443af4:	cbnz	w0, 443ba8 <nftw@plt+0x41028>
  443af8:	tst	x11, #0xfffffffffffffe00
  443afc:	b.ne	443b54 <nftw@plt+0x40fd4>  // b.any
  443b00:	add	w0, w12, w11
  443b04:	mov	x14, x11
  443b08:	mov	x24, x1
  443b0c:	add	x11, x11, x22
  443b10:	mov	x17, x6
  443b14:	strh	w0, [x3, x2]
  443b18:	mov	w2, w21
  443b1c:	lsr	w0, w7, #8
  443b20:	add	x1, x3, x14, lsl #1
  443b24:	lsl	w2, w9, w2
  443b28:	add	x1, x1, #0x200
  443b2c:	cmp	x2, x0
  443b30:	orr	w23, w13, w15
  443b34:	b.hi	443b4c <nftw@plt+0x40fcc>  // b.pmore
  443b38:	b	443b60 <nftw@plt+0x40fe0>
  443b3c:	strh	w23, [x1, x0, lsl #1]
  443b40:	add	x0, x0, x5
  443b44:	cmp	x2, x0
  443b48:	b.ls	443b60 <nftw@plt+0x40fe0>  // b.plast
  443b4c:	ldrh	w4, [x1, x0, lsl #1]
  443b50:	cbz	w4, 443b3c <nftw@plt+0x40fbc>
  443b54:	ldp	x21, x22, [sp, #32]
  443b58:	ldp	x23, x24, [sp, #48]
  443b5c:	b	443948 <nftw@plt+0x40dc8>
  443b60:	add	x16, x16, #0x1
  443b64:	cmp	x8, x16
  443b68:	b.ls	443b74 <nftw@plt+0x40ff4>  // b.plast
  443b6c:	ubfiz	x15, x15, #1, #16
  443b70:	ldrh	w15, [x20, x15]
  443b74:	mov	w0, w10
  443b78:	tst	w10, w7
  443b7c:	b.eq	443bc8 <nftw@plt+0x41048>  // b.none
  443b80:	lsr	w0, w0, #1
  443b84:	tst	w0, w7
  443b88:	b.ne	443b80 <nftw@plt+0x41000>  // b.any
  443b8c:	cbnz	w0, 443bc8 <nftw@plt+0x41048>
  443b90:	mov	w7, #0x0                   	// #0
  443b94:	cmp	x8, x16
  443b98:	b.ne	443adc <nftw@plt+0x40f5c>  // b.any
  443b9c:	ldp	x21, x22, [sp, #32]
  443ba0:	ldp	x23, x24, [sp, #48]
  443ba4:	b	443a6c <nftw@plt+0x40eec>
  443ba8:	tbz	w0, #12, 443b54 <nftw@plt+0x40fd4>
  443bac:	ubfx	x17, x0, #9, #3
  443bb0:	and	x14, x0, #0x1ff
  443bb4:	cmp	x17, x6
  443bb8:	mov	x2, x17
  443bbc:	b.cc	443b54 <nftw@plt+0x40fd4>  // b.lo, b.ul, b.last
  443bc0:	mov	x24, x1
  443bc4:	b	443b1c <nftw@plt+0x40f9c>
  443bc8:	sub	w1, w0, #0x1
  443bcc:	and	w7, w1, w7
  443bd0:	add	w7, w0, w7
  443bd4:	b	443b94 <nftw@plt+0x41014>
  443bd8:	mov	x10, x0
  443bdc:	mov	x11, x2
  443be0:	mov	x0, x4
  443be4:	ldr	w2, [x10, #8]
  443be8:	cbnz	w2, 443c70 <nftw@plt+0x410f0>
  443bec:	ldr	x2, [x10, #48]
  443bf0:	cbz	x2, 443c54 <nftw@plt+0x410d4>
  443bf4:	nop
  443bf8:	ldp	x9, x8, [x2, #8]
  443bfc:	mov	x7, #0x0                   	// #0
  443c00:	add	x3, x8, x7
  443c04:	cmp	x8, x7
  443c08:	and	x5, x3, #0xfffffffffffffffe
  443c0c:	b.ls	443c4c <nftw@plt+0x410cc>  // b.plast
  443c10:	lsr	x3, x3, #1
  443c14:	add	x5, x5, x3
  443c18:	add	x5, x9, x5, lsl #3
  443c1c:	ldr	x6, [x5, #8]
  443c20:	cmp	x6, x1
  443c24:	b.hi	443c68 <nftw@plt+0x410e8>  // b.pmore
  443c28:	ldr	x4, [x5, #16]
  443c2c:	add	x7, x3, #0x1
  443c30:	add	x3, x6, x4
  443c34:	cmp	x3, x1
  443c38:	b.ls	443c00 <nftw@plt+0x41080>  // b.plast
  443c3c:	ldr	x2, [x5]
  443c40:	mov	x3, x6
  443c44:	mov	x16, x11
  443c48:	br	x16
  443c4c:	ldr	x2, [x2]
  443c50:	cbnz	x2, 443bf8 <nftw@plt+0x41078>
  443c54:	mov	x16, x11
  443c58:	mov	x4, #0x0                   	// #0
  443c5c:	mov	x3, #0x0                   	// #0
  443c60:	mov	x2, #0x0                   	// #0
  443c64:	br	x16
  443c68:	mov	x8, x3
  443c6c:	b	443c00 <nftw@plt+0x41080>
  443c70:	add	x10, x10, #0x30
  443c74:	nop
  443c78:	ldar	x10, [x10]
  443c7c:	cbz	x10, 443c54 <nftw@plt+0x410d4>
  443c80:	ldp	x9, x8, [x10, #8]
  443c84:	mov	x7, #0x0                   	// #0
  443c88:	add	x3, x8, x7
  443c8c:	cmp	x8, x7
  443c90:	and	x5, x3, #0xfffffffffffffffe
  443c94:	b.ls	443c78 <nftw@plt+0x410f8>  // b.plast
  443c98:	lsr	x3, x3, #1
  443c9c:	add	x5, x5, x3
  443ca0:	add	x5, x9, x5, lsl #3
  443ca4:	ldr	x6, [x5, #8]
  443ca8:	cmp	x6, x1
  443cac:	b.hi	443cd4 <nftw@plt+0x41154>  // b.pmore
  443cb0:	ldr	x4, [x5, #16]
  443cb4:	add	x7, x3, #0x1
  443cb8:	add	x3, x6, x4
  443cbc:	cmp	x3, x1
  443cc0:	b.ls	443c88 <nftw@plt+0x41108>  // b.plast
  443cc4:	ldr	x2, [x5]
  443cc8:	mov	x3, x6
  443ccc:	mov	x16, x11
  443cd0:	br	x16
  443cd4:	mov	x8, x3
  443cd8:	b	443c88 <nftw@plt+0x41108>
  443cdc:	nop
  443ce0:	stp	x29, x30, [sp, #-144]!
  443ce4:	mov	x29, sp
  443ce8:	stp	x27, x28, [sp, #80]
  443cec:	add	x28, x2, x4
  443cf0:	mov	x27, x5
  443cf4:	stp	x19, x20, [sp, #16]
  443cf8:	mov	x20, x6
  443cfc:	stp	x21, x22, [sp, #32]
  443d00:	mov	x22, x2
  443d04:	mov	x21, x7
  443d08:	stp	x23, x24, [sp, #48]
  443d0c:	mov	x23, x0
  443d10:	mov	x0, x5
  443d14:	stp	x25, x26, [sp, #64]
  443d18:	mov	x25, x4
  443d1c:	stp	x3, x1, [sp, #112]
  443d20:	bl	4024f0 <strlen@plt>
  443d24:	mov	x24, x0
  443d28:	add	x0, x28, x0
  443d2c:	mov	x3, x21
  443d30:	add	x26, x0, #0x1
  443d34:	mov	x2, x20
  443d38:	mov	x1, x26
  443d3c:	str	x0, [sp, #104]
  443d40:	mov	x0, x23
  443d44:	bl	442c10 <nftw@plt+0x40090>
  443d48:	cbz	x0, 443dd8 <nftw@plt+0x41258>
  443d4c:	ldr	x8, [sp, #120]
  443d50:	mov	x19, x0
  443d54:	mov	x2, x22
  443d58:	mov	x1, x8
  443d5c:	bl	402490 <memcpy@plt>
  443d60:	ldr	x1, [sp, #112]
  443d64:	mov	x2, x25
  443d68:	add	x0, x19, x22
  443d6c:	bl	402490 <memcpy@plt>
  443d70:	mov	x2, x24
  443d74:	mov	x1, x27
  443d78:	add	x0, x19, x28
  443d7c:	bl	402490 <memcpy@plt>
  443d80:	ldr	x0, [sp, #104]
  443d84:	add	x3, sp, #0x8c
  443d88:	mov	x2, x21
  443d8c:	mov	x1, x20
  443d90:	strb	wzr, [x19, x0]
  443d94:	mov	x0, x19
  443d98:	bl	4433c8 <nftw@plt+0x40848>
  443d9c:	mov	w22, w0
  443da0:	mov	x4, x21
  443da4:	mov	x3, x20
  443da8:	mov	x2, x26
  443dac:	mov	x1, x19
  443db0:	mov	x0, x23
  443db4:	bl	442ad8 <nftw@plt+0x3ff58>
  443db8:	mov	w0, w22
  443dbc:	ldp	x19, x20, [sp, #16]
  443dc0:	ldp	x21, x22, [sp, #32]
  443dc4:	ldp	x23, x24, [sp, #48]
  443dc8:	ldp	x25, x26, [sp, #64]
  443dcc:	ldp	x27, x28, [sp, #80]
  443dd0:	ldp	x29, x30, [sp], #144
  443dd4:	ret
  443dd8:	mov	w22, #0xffffffff            	// #-1
  443ddc:	b	443db8 <nftw@plt+0x41238>
  443de0:	stp	x29, x30, [sp, #-256]!
  443de4:	mov	x29, sp
  443de8:	stp	x19, x20, [sp, #16]
  443dec:	mov	x20, x0
  443df0:	mov	x19, x1
  443df4:	stp	x21, x22, [sp, #32]
  443df8:	mov	x21, x3
  443dfc:	mov	x22, x4
  443e00:	stp	x27, x28, [sp, #80]
  443e04:	add	x27, sp, #0x80
  443e08:	stp	x23, x24, [sp, #48]
  443e0c:	mov	x24, #0x0                   	// #0
  443e10:	stp	x25, x26, [sp, #64]
  443e14:	mov	x25, #0x0                   	// #0
  443e18:	str	x2, [sp, #104]
  443e1c:	mov	x2, x27
  443e20:	mov	x1, x19
  443e24:	mov	w0, #0x0                   	// #0
  443e28:	bl	4029c0 <__lxstat@plt>
  443e2c:	tbnz	w0, #31, 443eb8 <nftw@plt+0x41338>
  443e30:	ldr	w0, [sp, #144]
  443e34:	and	w0, w0, #0xf000
  443e38:	cmp	w0, #0xa, lsl #12
  443e3c:	b.ne	443eb8 <nftw@plt+0x41338>  // b.any
  443e40:	mov	x28, #0x80                  	// #128
  443e44:	b	443e6c <nftw@plt+0x412ec>
  443e48:	cmp	x1, x0
  443e4c:	b.hi	443f2c <nftw@plt+0x413ac>  // b.pmore
  443e50:	mov	x2, x28
  443e54:	mov	x1, x26
  443e58:	mov	x4, x22
  443e5c:	mov	x3, x21
  443e60:	mov	x0, x20
  443e64:	lsl	x28, x28, #1
  443e68:	bl	442ad8 <nftw@plt+0x3ff58>
  443e6c:	mov	x2, x21
  443e70:	mov	x3, x22
  443e74:	mov	x1, x28
  443e78:	mov	x0, x20
  443e7c:	bl	442c10 <nftw@plt+0x40090>
  443e80:	mov	x26, x0
  443e84:	mov	x2, x28
  443e88:	mov	x0, x19
  443e8c:	cbz	x26, 443eb8 <nftw@plt+0x41338>
  443e90:	mov	x1, x26
  443e94:	bl	402590 <readlink@plt>
  443e98:	sub	x1, x28, #0x1
  443e9c:	tbz	x0, #63, 443e48 <nftw@plt+0x412c8>
  443ea0:	mov	x2, x28
  443ea4:	mov	x1, x26
  443ea8:	mov	x4, x22
  443eac:	mov	x3, x21
  443eb0:	mov	x0, x20
  443eb4:	bl	442ad8 <nftw@plt+0x3ff58>
  443eb8:	mov	x0, x19
  443ebc:	mov	w1, #0x2f                  	// #47
  443ec0:	bl	4027b0 <strrchr@plt>
  443ec4:	cbz	x0, 4440a8 <nftw@plt+0x41528>
  443ec8:	add	x0, x0, #0x1
  443ecc:	adrp	x3, 472000 <_obstack_memory_used@@Base+0x10bb8>
  443ed0:	sub	x23, x0, x19
  443ed4:	ldr	x5, [sp, #104]
  443ed8:	add	x3, x3, #0x5c0
  443edc:	mov	x7, x22
  443ee0:	mov	x6, x21
  443ee4:	mov	x2, x23
  443ee8:	mov	x1, x19
  443eec:	mov	x0, x20
  443ef0:	mov	x4, #0x0                   	// #0
  443ef4:	bl	443ce0 <nftw@plt+0x41160>
  443ef8:	mov	w27, w0
  443efc:	tbnz	w0, #31, 444004 <nftw@plt+0x41484>
  443f00:	cmp	x24, #0x0
  443f04:	ccmp	x25, #0x0, #0x4, ne  // ne = any
  443f08:	b.ne	444070 <nftw@plt+0x414f0>  // b.any
  443f0c:	mov	w0, w27
  443f10:	ldp	x19, x20, [sp, #16]
  443f14:	ldp	x21, x22, [sp, #32]
  443f18:	ldp	x23, x24, [sp, #48]
  443f1c:	ldp	x25, x26, [sp, #64]
  443f20:	ldp	x27, x28, [sp, #80]
  443f24:	ldp	x29, x30, [sp], #256
  443f28:	ret
  443f2c:	strb	wzr, [x26, x0]
  443f30:	ldrb	w0, [x26]
  443f34:	cmp	w0, #0x2f
  443f38:	b.eq	443fd8 <nftw@plt+0x41458>  // b.none
  443f3c:	mov	x0, x19
  443f40:	mov	w1, #0x2f                  	// #47
  443f44:	bl	4027b0 <strrchr@plt>
  443f48:	cbz	x0, 443fd8 <nftw@plt+0x41458>
  443f4c:	add	x23, x0, #0x1
  443f50:	mov	x0, x26
  443f54:	sub	x23, x23, x19
  443f58:	bl	4024f0 <strlen@plt>
  443f5c:	add	x1, x23, #0x1
  443f60:	mov	x3, x22
  443f64:	add	x0, x1, x0
  443f68:	mov	x2, x21
  443f6c:	mov	x1, x0
  443f70:	str	x0, [sp, #112]
  443f74:	mov	x0, x20
  443f78:	bl	442c10 <nftw@plt+0x40090>
  443f7c:	str	x0, [sp, #120]
  443f80:	cbz	x0, 4440b8 <nftw@plt+0x41538>
  443f84:	mov	x1, x19
  443f88:	mov	x2, x23
  443f8c:	bl	402490 <memcpy@plt>
  443f90:	ldr	x3, [sp, #120]
  443f94:	mov	x0, x26
  443f98:	add	x23, x3, x23
  443f9c:	bl	4024f0 <strlen@plt>
  443fa0:	mov	x19, x0
  443fa4:	mov	x1, x26
  443fa8:	mov	x2, x19
  443fac:	mov	x0, x23
  443fb0:	bl	402490 <memcpy@plt>
  443fb4:	mov	x2, x28
  443fb8:	strb	wzr, [x23, x19]
  443fbc:	ldp	x28, x3, [sp, #112]
  443fc0:	mov	x1, x26
  443fc4:	mov	x4, x22
  443fc8:	mov	x0, x20
  443fcc:	mov	x26, x3
  443fd0:	mov	x3, x21
  443fd4:	bl	442ad8 <nftw@plt+0x3ff58>
  443fd8:	cbz	x24, 443ff4 <nftw@plt+0x41474>
  443fdc:	mov	x2, x25
  443fe0:	mov	x1, x24
  443fe4:	mov	x4, x22
  443fe8:	mov	x3, x21
  443fec:	mov	x0, x20
  443ff0:	bl	442ad8 <nftw@plt+0x3ff58>
  443ff4:	mov	x24, x26
  443ff8:	mov	x25, x28
  443ffc:	mov	x19, x26
  444000:	b	443e1c <nftw@plt+0x4129c>
  444004:	ldr	x5, [sp, #104]
  444008:	mov	x7, x22
  44400c:	mov	x6, x21
  444010:	mov	x2, x23
  444014:	mov	x1, x19
  444018:	mov	x0, x20
  44401c:	adrp	x3, 47e000 <_obstack_memory_used@@Base+0x1cbb8>
  444020:	mov	x4, #0x7                   	// #7
  444024:	add	x3, x3, #0xfd0
  444028:	bl	443ce0 <nftw@plt+0x41160>
  44402c:	mov	w27, w0
  444030:	tbz	w0, #31, 443f00 <nftw@plt+0x41380>
  444034:	ldr	x5, [sp, #104]
  444038:	mov	x4, x23
  44403c:	mov	x3, x19
  444040:	mov	x7, x22
  444044:	mov	x6, x21
  444048:	mov	x0, x20
  44404c:	adrp	x1, 47e000 <_obstack_memory_used@@Base+0x1cbb8>
  444050:	mov	x2, #0xf                   	// #15
  444054:	add	x1, x1, #0xfd8
  444058:	bl	443ce0 <nftw@plt+0x41160>
  44405c:	cmp	w0, #0x0
  444060:	csinv	w27, w0, wzr, ge  // ge = tcont
  444064:	cmp	x24, #0x0
  444068:	ccmp	x25, #0x0, #0x4, ne  // ne = any
  44406c:	b.eq	443f0c <nftw@plt+0x4138c>  // b.none
  444070:	mov	x4, x22
  444074:	mov	x3, x21
  444078:	mov	x2, x25
  44407c:	mov	x1, x24
  444080:	mov	x0, x20
  444084:	bl	442ad8 <nftw@plt+0x3ff58>
  444088:	mov	w0, w27
  44408c:	ldp	x19, x20, [sp, #16]
  444090:	ldp	x21, x22, [sp, #32]
  444094:	ldp	x23, x24, [sp, #48]
  444098:	ldp	x25, x26, [sp, #64]
  44409c:	ldp	x27, x28, [sp, #80]
  4440a0:	ldp	x29, x30, [sp], #256
  4440a4:	ret
  4440a8:	adrp	x3, 472000 <_obstack_memory_used@@Base+0x10bb8>
  4440ac:	mov	x23, #0x0                   	// #0
  4440b0:	add	x19, x3, #0x5c0
  4440b4:	b	443ed4 <nftw@plt+0x41354>
  4440b8:	mov	w27, #0xffffffff            	// #-1
  4440bc:	b	443f00 <nftw@plt+0x41380>
  4440c0:	stp	x29, x30, [sp, #-320]!
  4440c4:	add	x18, x0, x1
  4440c8:	cmp	x1, #0x4
  4440cc:	mov	x29, sp
  4440d0:	stp	x19, x20, [sp, #16]
  4440d4:	mov	x19, x0
  4440d8:	add	x0, x3, x4
  4440dc:	stp	x27, x28, [sp, #80]
  4440e0:	mov	x28, x3
  4440e4:	str	x0, [sp, #96]
  4440e8:	b.le	444e64 <nftw@plt+0x422e4>
  4440ec:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x1dbb8>
  4440f0:	mov	x28, x18
  4440f4:	add	x0, x0, #0x230
  4440f8:	stp	x23, x24, [sp, #48]
  4440fc:	mov	x23, x2
  444100:	stp	x25, x26, [sp, #64]
  444104:	mov	x25, x3
  444108:	str	x3, [sp, #104]
  44410c:	str	x0, [sp, #120]
  444110:	add	x0, x0, #0x200
  444114:	str	x0, [sp, #128]
  444118:	ldrb	w0, [x19]
  44411c:	and	w1, w0, #0xf
  444120:	cmp	w1, #0x8
  444124:	b.ne	4445d8 <nftw@plt+0x41a58>  // b.any
  444128:	cmp	w0, #0x7f
  44412c:	b.hi	4445d8 <nftw@plt+0x41a58>  // b.pmore
  444130:	ldrb	w1, [x19, #1]
  444134:	ldrh	w0, [x19]
  444138:	rev16	w0, w0
  44413c:	tbnz	w1, #5, 4445d8 <nftw@plt+0x41a58>
  444140:	mov	x1, #0x4211                	// #16913
  444144:	and	x0, x0, #0xffff
  444148:	movk	x1, #0x2108, lsl #16
  44414c:	movk	x1, #0x1084, lsl #32
  444150:	movk	x1, #0x842, lsl #48
  444154:	umulh	x2, x0, x1
  444158:	sub	x1, x0, x2
  44415c:	add	x1, x2, x1, lsr #1
  444160:	lsr	x1, x1, #4
  444164:	lsl	x2, x1, #5
  444168:	sub	x1, x2, x1
  44416c:	cmp	x0, x1
  444170:	b.ne	4445d8 <nftw@plt+0x41a58>  // b.any
  444174:	stp	x21, x22, [sp, #32]
  444178:	add	x19, x19, #0x2
  44417c:	ands	x22, x19, #0x3
  444180:	b.eq	444b04 <nftw@plt+0x41f84>  // b.none
  444184:	mov	x22, #0x0                   	// #0
  444188:	mov	w0, #0x0                   	// #0
  44418c:	nop
  444190:	ldrb	w1, [x19], #1
  444194:	lsl	x1, x1, x0
  444198:	tst	x19, #0x3
  44419c:	orr	x22, x22, x1
  4441a0:	add	w0, w0, #0x8
  4441a4:	b.ne	444190 <nftw@plt+0x41610>  // b.any
  4441a8:	add	x1, sp, #0x100
  4441ac:	str	x1, [sp, #112]
  4441b0:	cmp	w0, #0xe
  4441b4:	b.hi	4441d8 <nftw@plt+0x41658>  // b.pmore
  4441b8:	sub	x1, x28, x19
  4441bc:	cmp	x1, #0x3
  4441c0:	b.le	4445d4 <nftw@plt+0x41a54>
  4441c4:	ldr	w1, [x19], #4
  4441c8:	lsl	x1, x1, x0
  4441cc:	add	w0, w0, #0x20
  4441d0:	prfm	pldl1strm, [x19]
  4441d4:	orr	x22, x22, x1
  4441d8:	ubfx	w1, w22, #1, #2
  4441dc:	sub	w20, w0, #0x3
  4441e0:	cmp	w1, #0x3
  4441e4:	b.eq	4445d4 <nftw@plt+0x41a54>  // b.none
  4441e8:	cbz	w1, 4446e4 <nftw@plt+0x41b64>
  4441ec:	cmp	w1, #0x1
  4441f0:	lsr	x21, x22, #3
  4441f4:	b.eq	4447fc <nftw@plt+0x41c7c>  // b.none
  4441f8:	cmp	w20, #0xe
  4441fc:	b.hi	444220 <nftw@plt+0x416a0>  // b.pmore
  444200:	sub	x1, x28, x19
  444204:	cmp	x1, #0x3
  444208:	b.le	4446c4 <nftw@plt+0x41b44>
  44420c:	ldr	w1, [x19], #4
  444210:	lsl	x1, x1, x20
  444214:	add	w20, w0, #0x1d
  444218:	prfm	pldl1strm, [x19]
  44421c:	orr	x21, x21, x1
  444220:	and	w26, w21, #0x1f
  444224:	ubfx	w27, w21, #5, #5
  444228:	add	w26, w26, #0x101
  44422c:	add	w27, w27, #0x1
  444230:	cmp	w26, #0x11e
  444234:	ubfx	w1, w21, #10, #4
  444238:	ccmp	w27, #0x1e, #0x2, ls  // ls = plast
  44423c:	add	w1, w1, #0x4
  444240:	lsr	x2, x21, #14
  444244:	sub	w5, w20, #0xe
  444248:	b.hi	4446c4 <nftw@plt+0x41b44>  // b.pmore
  44424c:	stp	xzr, xzr, [sp, #200]
  444250:	cmp	w5, #0xe
  444254:	add	x3, sp, #0xc8
  444258:	strh	wzr, [sp, #216]
  44425c:	strb	wzr, [sp, #218]
  444260:	b.hi	444284 <nftw@plt+0x41704>  // b.pmore
  444264:	sub	x0, x28, x19
  444268:	cmp	x0, #0x3
  44426c:	b.le	4446c4 <nftw@plt+0x41b44>
  444270:	ldr	w0, [x19], #4
  444274:	lsl	x0, x0, x5
  444278:	add	w5, w20, #0x12
  44427c:	prfm	pldl1strm, [x19]
  444280:	orr	x2, x2, x0
  444284:	and	w0, w2, #0x7
  444288:	ubfx	w7, w2, #3, #3
  44428c:	ubfx	w6, w2, #6, #3
  444290:	strb	w0, [sp, #216]
  444294:	ubfx	w0, w2, #9, #3
  444298:	strb	w0, [sp, #200]
  44429c:	strb	w7, [sp, #217]
  4442a0:	sub	w20, w5, #0xc
  4442a4:	strb	w6, [sp, #218]
  4442a8:	cmp	w1, #0x4
  4442ac:	lsr	x21, x2, #12
  4442b0:	b.eq	444460 <nftw@plt+0x418e0>  // b.none
  4442b4:	and	w21, w21, #0x7
  4442b8:	strb	w21, [sp, #208]
  4442bc:	cmp	w1, #0x5
  4442c0:	lsr	x21, x2, #15
  4442c4:	sub	w20, w5, #0xf
  4442c8:	b.eq	444460 <nftw@plt+0x418e0>  // b.none
  4442cc:	cmp	w20, #0xe
  4442d0:	b.hi	4442f4 <nftw@plt+0x41774>  // b.pmore
  4442d4:	sub	x2, x28, x19
  4442d8:	cmp	x2, #0x3
  4442dc:	b.le	4446c4 <nftw@plt+0x41b44>
  4442e0:	ldr	w2, [x19], #4
  4442e4:	lsl	x2, x2, x20
  4442e8:	add	w20, w5, #0x11
  4442ec:	prfm	pldl1strm, [x19]
  4442f0:	orr	x21, x21, x2
  4442f4:	and	w2, w21, #0x7
  4442f8:	strb	w2, [sp, #207]
  4442fc:	cmp	w1, #0x6
  444300:	lsr	x2, x21, #3
  444304:	b.eq	444b34 <nftw@plt+0x41fb4>  // b.none
  444308:	and	w2, w2, #0x7
  44430c:	strb	w2, [sp, #209]
  444310:	cmp	w1, #0x7
  444314:	lsr	x2, x21, #6
  444318:	b.eq	444b90 <nftw@plt+0x42010>  // b.none
  44431c:	and	w2, w2, #0x7
  444320:	strb	w2, [sp, #206]
  444324:	cmp	w1, #0x8
  444328:	lsr	x2, x21, #9
  44432c:	b.eq	444e48 <nftw@plt+0x422c8>  // b.none
  444330:	and	w2, w2, #0x7
  444334:	strb	w2, [sp, #210]
  444338:	cmp	w1, #0x9
  44433c:	lsr	x2, x21, #12
  444340:	b.eq	444b0c <nftw@plt+0x41f8c>  // b.none
  444344:	and	w2, w2, #0x7
  444348:	strb	w2, [sp, #205]
  44434c:	lsr	x21, x21, #15
  444350:	cmp	w1, #0xa
  444354:	sub	w2, w20, #0xf
  444358:	b.eq	444e74 <nftw@plt+0x422f4>  // b.none
  44435c:	cmp	w2, #0xe
  444360:	b.hi	444384 <nftw@plt+0x41804>  // b.pmore
  444364:	sub	x5, x28, x19
  444368:	cmp	x5, #0x3
  44436c:	b.le	4446c4 <nftw@plt+0x41b44>
  444370:	ldr	w5, [x19], #4
  444374:	lsl	x5, x5, x2
  444378:	add	w2, w20, #0x11
  44437c:	prfm	pldl1strm, [x19]
  444380:	orr	x21, x21, x5
  444384:	and	w5, w21, #0x7
  444388:	strb	w5, [sp, #211]
  44438c:	cmp	w1, #0xb
  444390:	lsr	x5, x21, #3
  444394:	b.eq	444e7c <nftw@plt+0x422fc>  // b.none
  444398:	and	w5, w5, #0x7
  44439c:	strb	w5, [sp, #204]
  4443a0:	cmp	w1, #0xc
  4443a4:	lsr	x5, x21, #6
  4443a8:	b.eq	444e9c <nftw@plt+0x4231c>  // b.none
  4443ac:	and	w5, w5, #0x7
  4443b0:	strb	w5, [sp, #212]
  4443b4:	cmp	w1, #0xd
  4443b8:	lsr	x5, x21, #9
  4443bc:	b.eq	444ea8 <nftw@plt+0x42328>  // b.none
  4443c0:	and	w5, w5, #0x7
  4443c4:	strb	w5, [sp, #203]
  4443c8:	cmp	w1, #0xe
  4443cc:	lsr	x5, x21, #12
  4443d0:	b.eq	444eb4 <nftw@plt+0x42334>  // b.none
  4443d4:	and	w5, w5, #0x7
  4443d8:	strb	w5, [sp, #213]
  4443dc:	lsr	x21, x21, #15
  4443e0:	cmp	w1, #0xf
  4443e4:	sub	w20, w2, #0xf
  4443e8:	b.eq	444460 <nftw@plt+0x418e0>  // b.none
  4443ec:	cmp	w20, #0xe
  4443f0:	b.hi	444414 <nftw@plt+0x41894>  // b.pmore
  4443f4:	sub	x5, x28, x19
  4443f8:	cmp	x5, #0x3
  4443fc:	b.le	4446c4 <nftw@plt+0x41b44>
  444400:	ldr	w5, [x19], #4
  444404:	lsl	x5, x5, x20
  444408:	add	w20, w2, #0x11
  44440c:	prfm	pldl1strm, [x19]
  444410:	orr	x21, x21, x5
  444414:	and	w2, w21, #0x7
  444418:	strb	w2, [sp, #202]
  44441c:	cmp	w1, #0x10
  444420:	lsr	x2, x21, #3
  444424:	b.eq	444b34 <nftw@plt+0x41fb4>  // b.none
  444428:	and	w2, w2, #0x7
  44442c:	strb	w2, [sp, #214]
  444430:	cmp	w1, #0x11
  444434:	lsr	x2, x21, #6
  444438:	b.eq	444b90 <nftw@plt+0x42010>  // b.none
  44443c:	and	w2, w2, #0x7
  444440:	strb	w2, [sp, #201]
  444444:	cmp	w1, #0x12
  444448:	lsr	x1, x21, #9
  44444c:	b.eq	444b18 <nftw@plt+0x41f98>  // b.none
  444450:	lsr	x21, x21, #12
  444454:	sub	w20, w20, #0xc
  444458:	and	w1, w1, #0x7
  44445c:	strb	w1, [sp, #215]
  444460:	add	x4, x23, #0x1, lsl #12
  444464:	add	x24, sp, #0xe0
  444468:	add	x6, sp, #0x120
  44446c:	mov	x1, #0x0                   	// #0
  444470:	stp	xzr, xzr, [sp, #224]
  444474:	stp	xzr, xzr, [sp, #240]
  444478:	ldr	x7, [sp, #112]
  44447c:	b	4444b4 <nftw@plt+0x41934>
  444480:	strh	w2, [x7, x0]
  444484:	add	x1, x1, #0x1
  444488:	strh	w2, [x6, x0]
  44448c:	cmp	x1, #0x13
  444490:	ldrb	w0, [x3]
  444494:	lsl	x0, x0, #1
  444498:	ldrh	w2, [x24, x0]
  44449c:	add	w2, w2, #0x1
  4444a0:	strh	w2, [x24, x0]
  4444a4:	b.eq	4444f0 <nftw@plt+0x41970>  // b.none
  4444a8:	ldrb	w0, [x3, #1]!
  4444ac:	cmp	w0, #0xf
  4444b0:	b.hi	4446c4 <nftw@plt+0x41b44>  // b.pmore
  4444b4:	sbfiz	x0, x0, #1, #32
  4444b8:	and	w2, w1, #0xffff
  4444bc:	ldrh	w5, [x24, x0]
  4444c0:	cbz	w5, 444480 <nftw@plt+0x41900>
  4444c4:	ldrh	w5, [x6, x0]
  4444c8:	add	x1, x1, #0x1
  4444cc:	ldrb	w0, [x3]
  4444d0:	cmp	x1, #0x13
  4444d4:	strh	w2, [x4, x5, lsl #1]
  4444d8:	strh	w2, [x6, x0, lsl #1]
  4444dc:	lsl	x0, x0, #1
  4444e0:	ldrh	w2, [x24, x0]
  4444e4:	add	w2, w2, #0x1
  4444e8:	strh	w2, [x24, x0]
  4444ec:	b.ne	4444a8 <nftw@plt+0x41928>  // b.any
  4444f0:	mov	w1, #0x0                   	// #0
  4444f4:	mov	x0, x23
  4444f8:	mov	x2, #0x800                 	// #2048
  4444fc:	str	x4, [sp, #136]
  444500:	bl	4026f0 <memset@plt>
  444504:	ldr	x4, [sp, #136]
  444508:	mov	x5, #0x0                   	// #0
  44450c:	mov	w1, #0x0                   	// #0
  444510:	mov	w9, #0x1                   	// #1
  444514:	lsl	x2, x5, #1
  444518:	add	x0, x24, x2
  44451c:	ldrh	w0, [x0, #2]
  444520:	cbnz	w0, 444794 <nftw@plt+0x41c14>
  444524:	add	x5, x5, #0x1
  444528:	cmp	x5, #0x8
  44452c:	b.ne	444514 <nftw@plt+0x41994>  // b.any
  444530:	mov	x8, x24
  444534:	add	x11, sp, #0xb8
  444538:	mov	x6, #0x9                   	// #9
  44453c:	mov	w9, #0x1                   	// #1
  444540:	b	444554 <nftw@plt+0x419d4>
  444544:	add	x6, x6, #0x1
  444548:	add	x8, x8, #0x2
  44454c:	cmp	x6, #0x10
  444550:	b.eq	444b9c <nftw@plt+0x4201c>  // b.none
  444554:	ldrh	w7, [x8, #18]
  444558:	cbz	w7, 444544 <nftw@plt+0x419c4>
  44455c:	add	x0, x11, x6, lsl #1
  444560:	sub	w10, w6, #0x1
  444564:	mov	x5, #0x0                   	// #0
  444568:	mov	w3, #0x0                   	// #0
  44456c:	sturh	w1, [x0, #-18]
  444570:	b	444584 <nftw@plt+0x41a04>
  444574:	add	w5, w3, #0x1
  444578:	mov	x3, x5
  44457c:	cmp	x6, w5, uxtw
  444580:	b.ls	444b2c <nftw@plt+0x41fac>  // b.plast
  444584:	lsr	w0, w7, w3
  444588:	tbz	w0, #0, 444574 <nftw@plt+0x419f4>
  44458c:	sub	w0, w10, w3
  444590:	subs	x5, x6, x5
  444594:	lsl	w0, w9, w0
  444598:	b.eq	4445c8 <nftw@plt+0x41a48>  // b.none
  44459c:	tst	w0, w1
  4445a0:	b.eq	444b24 <nftw@plt+0x41fa4>  // b.none
  4445a4:	mov	w2, #0x0                   	// #0
  4445a8:	b	4445b4 <nftw@plt+0x41a34>
  4445ac:	tst	w1, w0
  4445b0:	b.eq	444b24 <nftw@plt+0x41fa4>  // b.none
  4445b4:	add	w2, w2, #0x1
  4445b8:	bic	w1, w1, w0
  4445bc:	lsr	w0, w0, #1
  4445c0:	cmp	x5, w2, uxtw
  4445c4:	b.hi	4445ac <nftw@plt+0x41a2c>  // b.pmore
  4445c8:	lsl	w0, w9, w3
  4445cc:	bic	w7, w7, w0
  4445d0:	b	444574 <nftw@plt+0x419f4>
  4445d4:	ldp	x21, x22, [sp, #32]
  4445d8:	mov	w0, #0x0                   	// #0
  4445dc:	ldp	x23, x24, [sp, #48]
  4445e0:	ldp	x25, x26, [sp, #64]
  4445e4:	ldp	x19, x20, [sp, #16]
  4445e8:	ldp	x27, x28, [sp, #80]
  4445ec:	ldp	x29, x30, [sp], #320
  4445f0:	ret
  4445f4:	ldr	x1, [sp, #112]
  4445f8:	ubfiz	w14, w6, #9, #7
  4445fc:	ldr	x2, [sp, #136]
  444600:	add	x1, x0, x1
  444604:	lsl	w5, w18, w6
  444608:	add	w11, w14, #0x1, lsl #12
  44460c:	add	x0, x0, x2
  444610:	add	w10, w6, #0x7
  444614:	ldrh	w12, [x1, #16]
  444618:	and	x9, x9, #0xffff
  44461c:	and	w11, w11, #0xffff
  444620:	lsl	w10, w18, w10
  444624:	ldurh	w7, [x0, #-2]
  444628:	sxtw	x0, w5
  44462c:	mov	w5, w5
  444630:	mov	x17, #0x0                   	// #0
  444634:	mov	x15, #0x0                   	// #0
  444638:	mov	x16, #0x0                   	// #0
  44463c:	mov	x13, #0x100                 	// #256
  444640:	str	x0, [sp, #144]
  444644:	str	w6, [sp, #152]
  444648:	mov	w2, w17
  44464c:	cmp	x13, w7, uxtb
  444650:	and	x1, x7, #0xff
  444654:	b.eq	44468c <nftw@plt+0x41b0c>  // b.none
  444658:	lsl	x2, x1, #1
  44465c:	ldrh	w0, [x23, x2]
  444660:	cbnz	w0, 444f00 <nftw@plt+0x42380>
  444664:	tst	x30, #0xfffffffffffffe00
  444668:	b.ne	4446c4 <nftw@plt+0x41b44>  // b.any
  44466c:	mov	x13, x1
  444670:	add	w0, w11, w30
  444674:	ldr	x1, [sp, #144]
  444678:	strh	w0, [x23, x2]
  44467c:	ldr	w2, [sp, #152]
  444680:	mov	x15, x30
  444684:	mov	x17, x6
  444688:	add	x30, x30, x1
  44468c:	lsr	w0, w7, #8
  444690:	add	x1, x23, x15, lsl #1
  444694:	lsl	w2, w18, w2
  444698:	add	x1, x1, #0x200
  44469c:	cmp	x0, x2
  4446a0:	orr	w8, w14, w12
  4446a4:	b.cc	4446bc <nftw@plt+0x41b3c>  // b.lo, b.ul, b.last
  4446a8:	b	444ec0 <nftw@plt+0x42340>
  4446ac:	strh	w8, [x1, x0, lsl #1]
  4446b0:	add	x0, x0, x5
  4446b4:	cmp	x0, x2
  4446b8:	b.cs	444ec0 <nftw@plt+0x42340>  // b.hs, b.nlast
  4446bc:	ldrh	w3, [x1, x0, lsl #1]
  4446c0:	cbz	w3, 4446ac <nftw@plt+0x41b2c>
  4446c4:	mov	w0, #0x0                   	// #0
  4446c8:	ldp	x19, x20, [sp, #16]
  4446cc:	ldp	x21, x22, [sp, #32]
  4446d0:	ldp	x23, x24, [sp, #48]
  4446d4:	ldp	x25, x26, [sp, #64]
  4446d8:	ldp	x27, x28, [sp, #80]
  4446dc:	ldp	x29, x30, [sp], #320
  4446e0:	ret
  4446e4:	sub	w0, w0, #0xc
  4446e8:	lsr	w0, w0, #3
  4446ec:	mvn	x5, x0
  4446f0:	add	x3, x19, x5
  4446f4:	sub	x1, x28, x3
  4446f8:	cmp	x1, #0x3
  4446fc:	b.le	4445d4 <nftw@plt+0x41a54>
  444700:	ldrb	w6, [x3, #3]
  444704:	sub	x0, x19, x0
  444708:	ldrb	w2, [x3, #2]
  44470c:	add	x1, x0, #0x3
  444710:	ldrb	w3, [x3, #1]
  444714:	ldrb	w0, [x19, x5]
  444718:	bfi	w2, w6, #8, #24
  44471c:	mvn	w2, w2
  444720:	bfi	w0, w3, #8, #24
  444724:	cmp	w0, w2, uxth
  444728:	b.ne	4445d4 <nftw@plt+0x41a54>  // b.any
  44472c:	sub	x2, x28, x1
  444730:	cmp	w0, w2
  444734:	b.hi	4445d4 <nftw@plt+0x41a54>  // b.pmore
  444738:	ldr	x2, [sp, #96]
  44473c:	sub	x2, x2, x25
  444740:	cmp	w0, w2
  444744:	b.hi	4445d4 <nftw@plt+0x41a54>  // b.pmore
  444748:	and	x20, x0, #0xffff
  44474c:	mov	x0, x25
  444750:	add	x19, x1, x20
  444754:	mov	x2, x20
  444758:	bl	402490 <memcpy@plt>
  44475c:	add	x25, x25, x20
  444760:	ands	x21, x19, #0x3
  444764:	mov	w0, #0x0                   	// #0
  444768:	b.eq	444788 <nftw@plt+0x41c08>  // b.none
  44476c:	mov	x21, #0x0                   	// #0
  444770:	ldrb	w1, [x19], #1
  444774:	lsl	x1, x1, x0
  444778:	tst	x19, #0x3
  44477c:	orr	x21, x21, x1
  444780:	add	w0, w0, #0x8
  444784:	b.ne	444770 <nftw@plt+0x41bf0>  // b.any
  444788:	tbnz	w22, #0, 444e88 <nftw@plt+0x42308>
  44478c:	mov	x22, x21
  444790:	b	4441b0 <nftw@plt+0x41630>
  444794:	add	w3, w5, #0x1
  444798:	lsl	w3, w9, w3
  44479c:	cmp	w0, w3
  4447a0:	b.hi	4446c4 <nftw@plt+0x41b44>  // b.pmore
  4447a4:	ldr	x6, [sp, #112]
  4447a8:	add	x2, x2, x6
  4447ac:	and	x6, x0, #0xffff
  4447b0:	ldrh	w8, [x2, #2]
  4447b4:	tst	w8, #0xfe00
  4447b8:	b.ne	4446c4 <nftw@plt+0x41b44>  // b.any
  4447bc:	sxtw	x3, w3
  4447c0:	ubfiz	w12, w5, #9, #7
  4447c4:	lsl	w10, w9, w5
  4447c8:	mov	x11, #0x0                   	// #0
  4447cc:	cmp	w1, #0xff
  4447d0:	orr	w7, w12, w8
  4447d4:	mov	w0, w1
  4447d8:	b.ls	4447f0 <nftw@plt+0x41c70>  // b.plast
  4447dc:	b	444b40 <nftw@plt+0x41fc0>
  4447e0:	strh	w7, [x23, x0, lsl #1]
  4447e4:	add	x0, x0, x3
  4447e8:	cmp	x0, #0xff
  4447ec:	b.hi	444b40 <nftw@plt+0x41fc0>  // b.pmore
  4447f0:	ldrh	w2, [x23, x0, lsl #1]
  4447f4:	cbz	w2, 4447e0 <nftw@plt+0x41c60>
  4447f8:	b	4446c4 <nftw@plt+0x41b44>
  4447fc:	ldp	x0, x27, [sp, #120]
  444800:	str	x0, [sp, #144]
  444804:	stp	x22, x23, [sp, #160]
  444808:	mov	x23, x27
  44480c:	mov	x22, x28
  444810:	mov	x27, x19
  444814:	mov	w26, #0x1                   	// #1
  444818:	cmp	w20, #0xe
  44481c:	b.hi	444840 <nftw@plt+0x41cc0>  // b.pmore
  444820:	sub	x0, x22, x27
  444824:	cmp	x0, #0x3
  444828:	b.le	4445d4 <nftw@plt+0x41a54>
  44482c:	ldr	w0, [x27], #4
  444830:	lsl	x0, x0, x20
  444834:	add	w20, w20, #0x20
  444838:	prfm	pldl1strm, [x27]
  44483c:	orr	x21, x21, x0
  444840:	and	x0, x21, #0xff
  444844:	ldrh	w1, [x23, x0, lsl #1]
  444848:	and	w24, w1, #0x1ff
  44484c:	ubfx	x0, x1, #9, #3
  444850:	tbnz	w1, #12, 44488c <nftw@plt+0x41d0c>
  444854:	add	w1, w0, #0x1
  444858:	sub	w20, w20, #0x1
  44485c:	sub	w20, w20, w0
  444860:	cmp	w24, #0xff
  444864:	lsr	x21, x21, x1
  444868:	b.hi	4448c4 <nftw@plt+0x41d44>  // b.pmore
  44486c:	ldr	x0, [sp, #96]
  444870:	cmp	x25, x0
  444874:	b.eq	4445d4 <nftw@plt+0x41a54>  // b.none
  444878:	strb	w24, [x25], #1
  44487c:	cmp	w20, #0xe
  444880:	prfm	pstl1keep, [x25]
  444884:	b.ls	444820 <nftw@plt+0x41ca0>  // b.plast
  444888:	b	444840 <nftw@plt+0x41cc0>
  44488c:	add	w24, w24, #0x100
  444890:	lsl	w0, w26, w0
  444894:	sub	w0, w0, #0x1
  444898:	sub	w20, w20, #0x8
  44489c:	and	x0, x0, x21, lsr #8
  4448a0:	add	x24, x0, w24, sxtw
  4448a4:	ldrh	w0, [x23, x24, lsl #1]
  4448a8:	and	w24, w0, #0x1ff
  4448ac:	ubfx	x0, x0, #9, #3
  4448b0:	cmp	w24, #0xff
  4448b4:	add	w1, w0, #0x8
  4448b8:	sub	w20, w20, w0
  4448bc:	lsr	x21, x21, x1
  4448c0:	b.ls	44486c <nftw@plt+0x41cec>  // b.plast
  4448c4:	cmp	w24, #0x100
  4448c8:	b.eq	444f20 <nftw@plt+0x423a0>  // b.none
  4448cc:	cmp	w24, #0x108
  4448d0:	b.hi	444960 <nftw@plt+0x41de0>  // b.pmore
  4448d4:	sub	w24, w24, #0xfe
  4448d8:	cmp	w20, #0xe
  4448dc:	b.hi	444900 <nftw@plt+0x41d80>  // b.pmore
  4448e0:	sub	x0, x22, x27
  4448e4:	cmp	x0, #0x3
  4448e8:	b.le	4445d4 <nftw@plt+0x41a54>
  4448ec:	ldr	w0, [x27], #4
  4448f0:	lsl	x0, x0, x20
  4448f4:	add	w20, w20, #0x20
  4448f8:	prfm	pldl1strm, [x27]
  4448fc:	orr	x21, x21, x0
  444900:	ldr	x1, [sp, #144]
  444904:	and	x0, x21, #0xff
  444908:	ldrh	w2, [x1, x0, lsl #1]
  44490c:	and	w0, w2, #0x1ff
  444910:	ubfx	x1, x2, #9, #3
  444914:	tbnz	w2, #12, 4449d4 <nftw@plt+0x41e54>
  444918:	add	w2, w1, #0x1
  44491c:	sub	w20, w20, #0x1
  444920:	sub	w20, w20, w1
  444924:	lsr	x21, x21, x2
  444928:	cbnz	w0, 444a0c <nftw@plt+0x41e8c>
  44492c:	ldr	x0, [sp, #104]
  444930:	cmp	x25, x0
  444934:	b.eq	4445d4 <nftw@plt+0x41a54>  // b.none
  444938:	ldr	x0, [sp, #96]
  44493c:	sub	x0, x0, x25
  444940:	cmp	w24, w0
  444944:	b.hi	4445d4 <nftw@plt+0x41a54>  // b.pmore
  444948:	ldurb	w1, [x25, #-1]
  44494c:	mov	w2, w24
  444950:	mov	x0, x25
  444954:	add	x25, x25, x2
  444958:	bl	4026f0 <memset@plt>
  44495c:	b	444818 <nftw@plt+0x41c98>
  444960:	cmp	w24, #0x11d
  444964:	b.eq	444b88 <nftw@plt+0x42008>  // b.none
  444968:	b.hi	4445d4 <nftw@plt+0x41a54>  // b.pmore
  44496c:	cmp	w20, #0xe
  444970:	b.hi	444994 <nftw@plt+0x41e14>  // b.pmore
  444974:	sub	x0, x22, x27
  444978:	cmp	x0, #0x3
  44497c:	b.le	4445d4 <nftw@plt+0x41a54>
  444980:	ldr	w0, [x27], #4
  444984:	lsl	x0, x0, x20
  444988:	add	w20, w20, #0x20
  44498c:	prfm	pldl1strm, [x27]
  444990:	orr	x21, x21, x0
  444994:	sub	w24, w24, #0x109
  444998:	and	w1, w24, #0x3
  44499c:	lsr	w0, w24, #2
  4449a0:	add	w2, w0, #0x1
  4449a4:	lsl	w24, w26, w0
  4449a8:	mov	w0, #0xffffffff            	// #-1
  4449ac:	sub	w24, w24, #0x1
  4449b0:	lsl	w5, w0, w2
  4449b4:	bic	w5, w21, w5
  4449b8:	lsl	w0, w1, w2
  4449bc:	add	w24, w5, w24, lsl #3
  4449c0:	add	w0, w0, #0xb
  4449c4:	sub	w20, w20, w2
  4449c8:	add	w24, w24, w0
  4449cc:	lsr	x21, x21, x2
  4449d0:	b	4448d8 <nftw@plt+0x41d58>
  4449d4:	add	w0, w0, #0x100
  4449d8:	lsl	w1, w26, w1
  4449dc:	sub	w1, w1, #0x1
  4449e0:	sub	w20, w20, #0x8
  4449e4:	and	x1, x1, x21, lsr #8
  4449e8:	add	x0, x1, w0, sxtw
  4449ec:	ldr	x1, [sp, #144]
  4449f0:	ldrh	w1, [x1, x0, lsl #1]
  4449f4:	and	w0, w1, #0x1ff
  4449f8:	ubfx	x1, x1, #9, #3
  4449fc:	add	w2, w1, #0x8
  444a00:	sub	w20, w20, w1
  444a04:	lsr	x21, x21, x2
  444a08:	cbz	w0, 44492c <nftw@plt+0x41dac>
  444a0c:	cmp	w0, #0x1d
  444a10:	b.hi	4445d4 <nftw@plt+0x41a54>  // b.pmore
  444a14:	add	w19, w0, #0x1
  444a18:	cmp	w0, #0x3
  444a1c:	b.ls	444a84 <nftw@plt+0x41f04>  // b.plast
  444a20:	cmp	w20, #0xe
  444a24:	b.hi	444a48 <nftw@plt+0x41ec8>  // b.pmore
  444a28:	sub	x1, x22, x27
  444a2c:	cmp	x1, #0x3
  444a30:	b.le	4445d4 <nftw@plt+0x41a54>
  444a34:	ldr	w1, [x27], #4
  444a38:	lsl	x1, x1, x20
  444a3c:	add	w20, w20, #0x20
  444a40:	prfm	pldl1strm, [x27]
  444a44:	orr	x21, x21, x1
  444a48:	sub	w0, w0, #0x4
  444a4c:	and	w1, w0, #0x1
  444a50:	lsr	w0, w0, #1
  444a54:	add	w2, w0, #0x1
  444a58:	lsl	w19, w26, w0
  444a5c:	mov	w0, #0xffffffff            	// #-1
  444a60:	sub	w19, w19, #0x1
  444a64:	lsl	w5, w0, w2
  444a68:	bic	w5, w21, w5
  444a6c:	lsl	w0, w1, w2
  444a70:	add	w19, w5, w19, lsl #2
  444a74:	add	w0, w0, #0x5
  444a78:	sub	w20, w20, w2
  444a7c:	add	w19, w19, w0
  444a80:	lsr	x21, x21, x2
  444a84:	ldr	x0, [sp, #104]
  444a88:	sub	x0, x25, x0
  444a8c:	cmp	w19, w0
  444a90:	b.hi	4445d4 <nftw@plt+0x41a54>  // b.pmore
  444a94:	ldr	x0, [sp, #96]
  444a98:	sub	x0, x0, x25
  444a9c:	cmp	w24, w0
  444aa0:	b.hi	4445d4 <nftw@plt+0x41a54>  // b.pmore
  444aa4:	mov	w28, w19
  444aa8:	cmp	w19, w24
  444aac:	neg	x0, x28
  444ab0:	str	x0, [sp, #152]
  444ab4:	b.cc	444ad0 <nftw@plt+0x41f50>  // b.lo, b.ul, b.last
  444ab8:	mov	w2, w24
  444abc:	add	x1, x25, x0
  444ac0:	mov	x0, x25
  444ac4:	add	x25, x25, x2
  444ac8:	bl	402490 <memcpy@plt>
  444acc:	b	444818 <nftw@plt+0x41c98>
  444ad0:	cmp	w19, w24
  444ad4:	ldr	x0, [sp, #152]
  444ad8:	csel	w2, w19, w24, ls  // ls = plast
  444adc:	csel	w28, w19, w24, ls  // ls = plast
  444ae0:	str	x2, [sp, #136]
  444ae4:	add	x1, x25, x0
  444ae8:	mov	x0, x25
  444aec:	bl	402490 <memcpy@plt>
  444af0:	ldr	x2, [sp, #136]
  444af4:	subs	w24, w24, w28
  444af8:	add	x25, x25, x2
  444afc:	b.ne	444ad0 <nftw@plt+0x41f50>  // b.any
  444b00:	b	444818 <nftw@plt+0x41c98>
  444b04:	mov	w0, #0x0                   	// #0
  444b08:	b	4441a8 <nftw@plt+0x41628>
  444b0c:	sub	w20, w20, #0xc
  444b10:	mov	x21, x2
  444b14:	b	444460 <nftw@plt+0x418e0>
  444b18:	sub	w20, w20, #0x9
  444b1c:	mov	x21, x1
  444b20:	b	444460 <nftw@plt+0x418e0>
  444b24:	add	w1, w1, w0
  444b28:	b	4445c8 <nftw@plt+0x41a48>
  444b2c:	cbz	w7, 444544 <nftw@plt+0x419c4>
  444b30:	b	4446c4 <nftw@plt+0x41b44>
  444b34:	sub	w20, w20, #0x3
  444b38:	mov	x21, x2
  444b3c:	b	444460 <nftw@plt+0x418e0>
  444b40:	add	x11, x11, #0x1
  444b44:	cmp	x11, x6
  444b48:	b.cs	444b54 <nftw@plt+0x41fd4>  // b.hs, b.nlast
  444b4c:	ubfiz	x8, x8, #1, #16
  444b50:	ldrh	w8, [x4, x8]
  444b54:	mov	w0, w10
  444b58:	tst	w1, w10
  444b5c:	b.eq	444e38 <nftw@plt+0x422b8>  // b.none
  444b60:	lsr	w0, w0, #1
  444b64:	tst	w1, w0
  444b68:	b.ne	444b60 <nftw@plt+0x41fe0>  // b.any
  444b6c:	cbnz	w0, 444e38 <nftw@plt+0x422b8>
  444b70:	mov	w1, #0x0                   	// #0
  444b74:	cmp	x11, x6
  444b78:	b.eq	444524 <nftw@plt+0x419a4>  // b.none
  444b7c:	tst	w8, #0xfe00
  444b80:	b.eq	4447cc <nftw@plt+0x41c4c>  // b.none
  444b84:	b	4446c4 <nftw@plt+0x41b44>
  444b88:	mov	w24, #0x102                 	// #258
  444b8c:	b	4448d8 <nftw@plt+0x41d58>
  444b90:	sub	w20, w20, #0x6
  444b94:	mov	x21, x2
  444b98:	b	444460 <nftw@plt+0x418e0>
  444b9c:	add	x0, sp, #0xb8
  444ba0:	mov	x30, #0x0                   	// #0
  444ba4:	mov	x6, #0x7                   	// #7
  444ba8:	mov	w18, #0x1                   	// #1
  444bac:	str	x0, [sp, #136]
  444bb0:	lsl	x0, x6, #1
  444bb4:	add	x1, x24, x0
  444bb8:	ldrh	w9, [x1, #16]
  444bbc:	cbnz	w9, 4445f4 <nftw@plt+0x41a74>
  444bc0:	subs	x6, x6, #0x1
  444bc4:	b.ne	444bb0 <nftw@plt+0x42030>  // b.any
  444bc8:	mov	w5, w26
  444bcc:	mov	w6, w27
  444bd0:	add	x27, x5, x6
  444bd4:	mov	x0, #0x1278                	// #4728
  444bd8:	add	x26, x23, x0
  444bdc:	add	x27, x26, x27
  444be0:	mov	x24, x26
  444be4:	cmp	x26, x27
  444be8:	b.cs	444de4 <nftw@plt+0x42264>  // b.hs, b.nlast
  444bec:	stp	x22, x6, [sp, #136]
  444bf0:	mov	x22, x23
  444bf4:	mov	x23, x21
  444bf8:	mov	x21, x26
  444bfc:	mov	x26, x19
  444c00:	mov	x19, x28
  444c04:	mov	x28, x27
  444c08:	mov	x27, x5
  444c0c:	str	x4, [sp, #152]
  444c10:	b	444c24 <nftw@plt+0x420a4>
  444c14:	sub	w20, w20, #0x1
  444c18:	strb	w0, [x24], #1
  444c1c:	cmp	x28, x24
  444c20:	b.ls	444dc4 <nftw@plt+0x42244>  // b.plast
  444c24:	cmp	w20, #0xe
  444c28:	b.hi	444c4c <nftw@plt+0x420cc>  // b.pmore
  444c2c:	sub	x0, x19, x26
  444c30:	cmp	x0, #0x3
  444c34:	b.le	4446c4 <nftw@plt+0x41b44>
  444c38:	ldr	w0, [x26], #4
  444c3c:	lsl	x0, x0, x20
  444c40:	add	w20, w20, #0x20
  444c44:	prfm	pldl1strm, [x26]
  444c48:	orr	x23, x23, x0
  444c4c:	and	x0, x23, #0xff
  444c50:	ldrh	w0, [x22, x0, lsl #1]
  444c54:	tbnz	w0, #12, 4446c4 <nftw@plt+0x41b44>
  444c58:	ubfx	x1, x0, #9, #3
  444c5c:	tst	w0, #0x1f0
  444c60:	add	w2, w1, #0x1
  444c64:	sub	w20, w20, w1
  444c68:	and	w0, w0, #0x1ff
  444c6c:	lsr	x23, x23, x2
  444c70:	b.eq	444c14 <nftw@plt+0x42094>  // b.none
  444c74:	cmp	w0, #0x10
  444c78:	b.eq	444cbc <nftw@plt+0x4213c>  // b.none
  444c7c:	cmp	w0, #0x11
  444c80:	b.eq	444d10 <nftw@plt+0x42190>  // b.none
  444c84:	cmp	w0, #0x12
  444c88:	b.ne	4446c4 <nftw@plt+0x41b44>  // b.any
  444c8c:	and	w2, w23, #0x7f
  444c90:	sub	x0, x28, x24
  444c94:	add	w2, w2, #0xb
  444c98:	sub	w20, w20, #0x8
  444c9c:	lsr	x23, x23, #7
  444ca0:	cmp	w2, w0
  444ca4:	b.hi	4446c4 <nftw@plt+0x41b44>  // b.pmore
  444ca8:	mov	x0, x24
  444cac:	mov	w1, #0x0                   	// #0
  444cb0:	add	x24, x24, x2
  444cb4:	bl	4026f0 <memset@plt>
  444cb8:	b	444c1c <nftw@plt+0x4209c>
  444cbc:	cmp	x24, x21
  444cc0:	b.eq	4446c4 <nftw@plt+0x41b44>  // b.none
  444cc4:	and	w0, w23, #0x3
  444cc8:	sub	x1, x28, x24
  444ccc:	add	w0, w0, #0x3
  444cd0:	sub	w20, w20, #0x3
  444cd4:	lsr	x23, x23, #2
  444cd8:	cmp	w0, w1
  444cdc:	b.hi	4446c4 <nftw@plt+0x41b44>  // b.pmore
  444ce0:	ldurb	w1, [x24, #-1]
  444ce4:	cmp	w0, #0x5
  444ce8:	b.eq	444d80 <nftw@plt+0x42200>  // b.none
  444cec:	cmp	w0, #0x6
  444cf0:	b.eq	444d7c <nftw@plt+0x421fc>  // b.none
  444cf4:	cmp	w0, #0x4
  444cf8:	b.eq	444d84 <nftw@plt+0x42204>  // b.none
  444cfc:	add	x24, x24, #0x3
  444d00:	sturb	w1, [x24, #-3]
  444d04:	sturb	w1, [x24, #-2]
  444d08:	sturb	w1, [x24, #-1]
  444d0c:	b	444c1c <nftw@plt+0x4209c>
  444d10:	and	w0, w23, #0x7
  444d14:	sub	x1, x28, x24
  444d18:	add	w0, w0, #0x3
  444d1c:	sub	w20, w20, #0x4
  444d20:	lsr	x23, x23, #3
  444d24:	cmp	w0, w1
  444d28:	b.hi	4446c4 <nftw@plt+0x41b44>  // b.pmore
  444d2c:	cmp	w0, #0x7
  444d30:	b.eq	444da8 <nftw@plt+0x42228>  // b.none
  444d34:	b.hi	444d8c <nftw@plt+0x4220c>  // b.pmore
  444d38:	cmp	w0, #0x5
  444d3c:	b.eq	444d50 <nftw@plt+0x421d0>  // b.none
  444d40:	cmp	w0, #0x6
  444d44:	b.ne	444d6c <nftw@plt+0x421ec>  // b.any
  444d48:	strb	wzr, [x24], #1
  444d4c:	nop
  444d50:	strb	wzr, [x24], #1
  444d54:	mov	x0, x24
  444d58:	strb	wzr, [x0], #1
  444d5c:	mov	x24, x0
  444d60:	strh	wzr, [x24], #3
  444d64:	strb	wzr, [x0, #2]
  444d68:	b	444c1c <nftw@plt+0x4209c>
  444d6c:	cmp	w0, #0x4
  444d70:	b.eq	444d54 <nftw@plt+0x421d4>  // b.none
  444d74:	mov	x0, x24
  444d78:	b	444d5c <nftw@plt+0x421dc>
  444d7c:	strb	w1, [x24], #1
  444d80:	strb	w1, [x24], #1
  444d84:	strb	w1, [x24], #1
  444d88:	b	444cfc <nftw@plt+0x4217c>
  444d8c:	cmp	w0, #0x9
  444d90:	b.eq	444da0 <nftw@plt+0x42220>  // b.none
  444d94:	cmp	w0, #0xa
  444d98:	b.ne	444db4 <nftw@plt+0x42234>  // b.any
  444d9c:	strb	wzr, [x24], #1
  444da0:	strb	wzr, [x24], #1
  444da4:	strb	wzr, [x24], #1
  444da8:	strb	wzr, [x24], #1
  444dac:	strb	wzr, [x24], #1
  444db0:	b	444d50 <nftw@plt+0x421d0>
  444db4:	cmp	w0, #0x8
  444db8:	b.ne	444d74 <nftw@plt+0x421f4>  // b.any
  444dbc:	strb	wzr, [x24], #1
  444dc0:	b	444da8 <nftw@plt+0x42228>
  444dc4:	mov	x28, x19
  444dc8:	mov	x19, x26
  444dcc:	mov	x26, x21
  444dd0:	mov	x21, x23
  444dd4:	mov	x23, x22
  444dd8:	mov	x5, x27
  444ddc:	ldp	x22, x6, [sp, #136]
  444de0:	ldr	x4, [sp, #152]
  444de4:	str	x6, [sp, #152]
  444de8:	ldrb	w0, [x4, #888]
  444dec:	cbz	w0, 4446c4 <nftw@plt+0x41b44>
  444df0:	mov	x3, x23
  444df4:	mov	x2, x23
  444df8:	mov	x1, x5
  444dfc:	mov	x0, x26
  444e00:	str	x5, [sp, #136]
  444e04:	bl	4437f0 <nftw@plt+0x40c70>
  444e08:	cbz	w0, 4446c4 <nftw@plt+0x41b44>
  444e0c:	ldr	x5, [sp, #136]
  444e10:	add	x3, x23, #0x800
  444e14:	ldr	x6, [sp, #152]
  444e18:	mov	x2, x23
  444e1c:	add	x0, x26, x5
  444e20:	str	x3, [sp, #144]
  444e24:	mov	x1, x6
  444e28:	bl	4437f0 <nftw@plt+0x40c70>
  444e2c:	cbz	w0, 4446c4 <nftw@plt+0x41b44>
  444e30:	mov	x27, x23
  444e34:	b	444804 <nftw@plt+0x41c84>
  444e38:	sub	w2, w0, #0x1
  444e3c:	and	w1, w2, w1
  444e40:	add	w1, w0, w1
  444e44:	b	444b74 <nftw@plt+0x41ff4>
  444e48:	sub	w20, w20, #0x9
  444e4c:	mov	x21, x2
  444e50:	b	444460 <nftw@plt+0x418e0>
  444e54:	mov	x28, x25
  444e58:	ldp	x21, x22, [sp, #32]
  444e5c:	ldp	x23, x24, [sp, #48]
  444e60:	ldp	x25, x26, [sp, #64]
  444e64:	ldr	x0, [sp, #96]
  444e68:	cmp	x28, x0
  444e6c:	cset	w0, eq  // eq = none
  444e70:	b	4445e4 <nftw@plt+0x41a64>
  444e74:	mov	w20, w2
  444e78:	b	444460 <nftw@plt+0x418e0>
  444e7c:	sub	w20, w2, #0x3
  444e80:	mov	x21, x5
  444e84:	b	444460 <nftw@plt+0x418e0>
  444e88:	sub	x0, x28, x19
  444e8c:	cmp	x0, #0x4
  444e90:	b.le	444e54 <nftw@plt+0x422d4>
  444e94:	ldp	x21, x22, [sp, #32]
  444e98:	b	444118 <nftw@plt+0x41598>
  444e9c:	sub	w20, w2, #0x6
  444ea0:	mov	x21, x5
  444ea4:	b	444460 <nftw@plt+0x418e0>
  444ea8:	sub	w20, w2, #0x9
  444eac:	mov	x21, x5
  444eb0:	b	444460 <nftw@plt+0x418e0>
  444eb4:	sub	w20, w2, #0xc
  444eb8:	mov	x21, x5
  444ebc:	b	444460 <nftw@plt+0x418e0>
  444ec0:	add	x16, x16, #0x1
  444ec4:	cmp	x9, x16
  444ec8:	b.ls	444ed4 <nftw@plt+0x42354>  // b.plast
  444ecc:	ubfiz	x12, x12, #1, #16
  444ed0:	ldrh	w12, [x4, x12]
  444ed4:	mov	w0, w10
  444ed8:	tst	w10, w7
  444edc:	b.eq	444f34 <nftw@plt+0x423b4>  // b.none
  444ee0:	lsr	w0, w0, #1
  444ee4:	tst	w0, w7
  444ee8:	b.ne	444ee0 <nftw@plt+0x42360>  // b.any
  444eec:	cbnz	w0, 444f34 <nftw@plt+0x423b4>
  444ef0:	mov	w7, #0x0                   	// #0
  444ef4:	cmp	x9, x16
  444ef8:	b.ne	444648 <nftw@plt+0x41ac8>  // b.any
  444efc:	b	444bc0 <nftw@plt+0x42040>
  444f00:	tbz	w0, #12, 4446c4 <nftw@plt+0x41b44>
  444f04:	ubfx	x17, x0, #9, #3
  444f08:	and	x15, x0, #0x1ff
  444f0c:	cmp	x17, x6
  444f10:	mov	x2, x17
  444f14:	b.cc	4446c4 <nftw@plt+0x41b44>  // b.lo, b.ul, b.last
  444f18:	mov	x13, x1
  444f1c:	b	44468c <nftw@plt+0x41b0c>
  444f20:	mov	x28, x22
  444f24:	mov	x19, x27
  444f28:	mov	w0, w20
  444f2c:	ldp	x22, x23, [sp, #160]
  444f30:	b	444788 <nftw@plt+0x41c08>
  444f34:	sub	w1, w0, #0x1
  444f38:	and	w7, w1, w7
  444f3c:	add	w7, w0, w7
  444f40:	b	444ef4 <nftw@plt+0x42374>
  444f44:	nop
  444f48:	sub	sp, sp, #0x4c0
  444f4c:	stp	x29, x30, [sp, #80]
  444f50:	add	x29, sp, #0x50
  444f54:	stp	x21, x22, [sp, #112]
  444f58:	mov	x21, x0
  444f5c:	ldr	w0, [sp, #1240]
  444f60:	stp	x19, x20, [sp, #96]
  444f64:	mov	x19, x4
  444f68:	mov	x20, x5
  444f6c:	stp	x23, x24, [sp, #128]
  444f70:	stp	x25, x26, [sp, #144]
  444f74:	mov	w26, w2
  444f78:	stp	x27, x28, [sp, #160]
  444f7c:	mov	x28, x7
  444f80:	stp	x3, x6, [sp, #200]
  444f84:	str	x1, [sp, #216]
  444f88:	cbnz	w0, 444f98 <nftw@plt+0x42418>
  444f8c:	ldr	x0, [sp, #1216]
  444f90:	str	wzr, [x7]
  444f94:	str	wzr, [x0]
  444f98:	add	x22, sp, #0x1b8
  444f9c:	mov	x5, x20
  444fa0:	mov	x6, x22
  444fa4:	mov	x4, x19
  444fa8:	mov	w1, w26
  444fac:	mov	x0, x21
  444fb0:	mov	x3, #0x40                  	// #64
  444fb4:	mov	x2, #0x0                   	// #0
  444fb8:	bl	447000 <nftw@plt+0x44480>
  444fbc:	cbnz	w0, 445024 <nftw@plt+0x424a4>
  444fc0:	mov	w22, #0x0                   	// #0
  444fc4:	mov	x23, #0x0                   	// #0
  444fc8:	cbnz	w22, 4450d0 <nftw@plt+0x42550>
  444fcc:	cbz	x23, 444fe4 <nftw@plt+0x42464>
  444fd0:	add	x1, x23, #0x18
  444fd4:	mov	x0, x21
  444fd8:	mov	x3, x20
  444fdc:	mov	x2, x19
  444fe0:	bl	4470d0 <nftw@plt+0x44550>
  444fe4:	cmn	w26, #0x1
  444fe8:	mov	w23, #0x0                   	// #0
  444fec:	b.eq	445000 <nftw@plt+0x42480>  // b.none
  444ff0:	mov	x2, x20
  444ff4:	mov	x1, x19
  444ff8:	mov	w0, w26
  444ffc:	bl	443478 <nftw@plt+0x408f8>
  445000:	mov	w0, w23
  445004:	ldp	x29, x30, [sp, #80]
  445008:	ldp	x19, x20, [sp, #96]
  44500c:	ldp	x21, x22, [sp, #112]
  445010:	ldp	x23, x24, [sp, #128]
  445014:	ldp	x25, x26, [sp, #144]
  445018:	ldp	x27, x28, [sp, #160]
  44501c:	add	sp, sp, #0x4c0
  445020:	ret
  445024:	ldr	x4, [sp, #440]
  445028:	add	x5, sp, #0x200
  44502c:	mov	x1, x22
  445030:	mov	x0, x21
  445034:	mov	x3, x20
  445038:	mov	x2, x19
  44503c:	ldp	x6, x7, [x4]
  445040:	stp	x6, x7, [x5, #192]
  445044:	ldrb	w24, [x4, #4]
  445048:	ldp	x6, x7, [x4, #16]
  44504c:	stp	x6, x7, [x5, #208]
  445050:	ldrb	w5, [x4, #5]
  445054:	str	w5, [sp, #320]
  445058:	add	x5, sp, #0x200
  44505c:	ldp	x6, x7, [x4, #32]
  445060:	stp	x6, x7, [x5, #224]
  445064:	add	x5, sp, #0x2f0
  445068:	ldrb	w22, [x4, #6]
  44506c:	ldp	x6, x7, [x4, #48]
  445070:	stp	x6, x7, [x5]
  445074:	ldrh	w5, [x4, #18]
  445078:	ldrh	w27, [x4, #16]
  44507c:	ldrh	w23, [x4, #62]
  445080:	str	w5, [sp, #232]
  445084:	ldrh	w5, [x4, #60]
  445088:	ldr	x25, [x4, #40]
  44508c:	str	w5, [sp, #224]
  445090:	ldr	w4, [x4, #48]
  445094:	str	w4, [sp, #240]
  445098:	bl	4470d0 <nftw@plt+0x44550>
  44509c:	ldr	w1, [sp, #704]
  4450a0:	mov	w0, #0x457f                	// #17791
  4450a4:	movk	w0, #0x464c, lsl #16
  4450a8:	cmp	w1, w0
  4450ac:	b.eq	4450e8 <nftw@plt+0x42568>  // b.none
  4450b0:	mov	x0, x20
  4450b4:	adrp	x1, 47e000 <_obstack_memory_used@@Base+0x1cbb8>
  4450b8:	mov	w2, #0x0                   	// #0
  4450bc:	add	x1, x1, #0xfe8
  4450c0:	mov	w22, #0x0                   	// #0
  4450c4:	mov	x23, #0x0                   	// #0
  4450c8:	blr	x19
  4450cc:	b	444fc8 <nftw@plt+0x42448>
  4450d0:	mov	x3, x20
  4450d4:	mov	x2, x19
  4450d8:	add	x1, sp, #0x300
  4450dc:	mov	x0, x21
  4450e0:	bl	4470d0 <nftw@plt+0x44550>
  4450e4:	b	444fcc <nftw@plt+0x4244c>
  4450e8:	cmp	w22, #0x1
  4450ec:	b.ne	445118 <nftw@plt+0x42598>  // b.any
  4450f0:	cmp	w24, #0x2
  4450f4:	b.eq	445138 <nftw@plt+0x425b8>  // b.none
  4450f8:	mov	x0, x20
  4450fc:	adrp	x1, 47f000 <_obstack_memory_used@@Base+0x1dbb8>
  445100:	mov	w2, #0x0                   	// #0
  445104:	add	x1, x1, #0x38
  445108:	mov	w22, #0x0                   	// #0
  44510c:	mov	x23, #0x0                   	// #0
  445110:	blr	x19
  445114:	b	444fc8 <nftw@plt+0x42448>
  445118:	mov	x0, x20
  44511c:	adrp	x1, 47f000 <_obstack_memory_used@@Base+0x1dbb8>
  445120:	mov	w2, #0x0                   	// #0
  445124:	add	x1, x1, #0x8
  445128:	mov	w22, #0x0                   	// #0
  44512c:	mov	x23, #0x0                   	// #0
  445130:	blr	x19
  445134:	b	444fc8 <nftw@plt+0x42448>
  445138:	ldr	w0, [sp, #320]
  44513c:	sub	w0, w0, #0x1
  445140:	and	w0, w0, #0xff
  445144:	cmp	w0, #0x1
  445148:	b.hi	445234 <nftw@plt+0x426b4>  // b.pmore
  44514c:	ldr	w0, [sp, #1232]
  445150:	cmp	w27, #0x3
  445154:	and	w0, w0, #0x1
  445158:	csel	w0, w0, wzr, eq  // eq = none
  44515c:	cbnz	w0, 4467ec <nftw@plt+0x43c6c>
  445160:	ldr	w0, [sp, #224]
  445164:	mov	w24, #0xffff                	// #65535
  445168:	str	w0, [sp, #264]
  44516c:	cmp	w0, #0x0
  445170:	ccmp	w23, w24, #0x4, ne  // ne = any
  445174:	ccmp	x25, #0x0, #0x4, eq  // eq = none
  445178:	b.ne	445254 <nftw@plt+0x426d4>  // b.any
  44517c:	ldr	w22, [sp, #264]
  445180:	add	x0, sp, #0x1d0
  445184:	mov	x6, x0
  445188:	add	x2, x25, #0x40
  44518c:	sub	w3, w22, #0x1
  445190:	mov	x5, x20
  445194:	mov	x4, x19
  445198:	mov	w1, w26
  44519c:	lsl	x3, x3, #6
  4451a0:	str	x0, [sp, #248]
  4451a4:	mov	x0, x21
  4451a8:	bl	447000 <nftw@plt+0x44480>
  4451ac:	cbz	w0, 444fc0 <nftw@plt+0x42440>
  4451b0:	ldr	x25, [sp, #464]
  4451b4:	sub	w23, w23, #0x1
  4451b8:	add	x0, sp, #0x1e8
  4451bc:	mov	x5, x20
  4451c0:	mov	x6, x0
  4451c4:	mov	x4, x19
  4451c8:	add	x3, x25, x23, lsl #6
  4451cc:	mov	w1, w26
  4451d0:	str	x0, [sp, #256]
  4451d4:	mov	x0, x21
  4451d8:	str	x25, [sp, #392]
  4451dc:	ldp	x2, x3, [x3, #24]
  4451e0:	str	x3, [sp, #328]
  4451e4:	bl	447000 <nftw@plt+0x44480>
  4451e8:	cbnz	w0, 4452c4 <nftw@plt+0x42744>
  4451ec:	ldr	x1, [sp, #248]
  4451f0:	mov	x3, x20
  4451f4:	mov	x2, x19
  4451f8:	mov	x0, x21
  4451fc:	mov	w22, #0x0                   	// #0
  445200:	mov	x23, #0x0                   	// #0
  445204:	bl	4470d0 <nftw@plt+0x44550>
  445208:	str	wzr, [sp, #224]
  44520c:	nop
  445210:	ldr	w0, [sp, #224]
  445214:	cbz	w0, 444fc8 <nftw@plt+0x42448>
  445218:	mov	x3, x20
  44521c:	mov	x2, x19
  445220:	add	x1, sp, #0x230
  445224:	mov	x0, x21
  445228:	bl	4470d0 <nftw@plt+0x44550>
  44522c:	cbz	w22, 444fcc <nftw@plt+0x4244c>
  445230:	b	4450d0 <nftw@plt+0x42550>
  445234:	mov	x0, x20
  445238:	adrp	x1, 47f000 <_obstack_memory_used@@Base+0x1dbb8>
  44523c:	mov	w2, #0x0                   	// #0
  445240:	add	x1, x1, #0x60
  445244:	mov	w22, #0x0                   	// #0
  445248:	mov	x23, #0x0                   	// #0
  44524c:	blr	x19
  445250:	b	444fc8 <nftw@plt+0x42448>
  445254:	add	x0, sp, #0x380
  445258:	mov	x5, x20
  44525c:	mov	x6, x0
  445260:	mov	x4, x19
  445264:	mov	x2, x25
  445268:	mov	w1, w26
  44526c:	mov	x3, #0x8                   	// #8
  445270:	str	x0, [sp, #304]
  445274:	mov	x0, x21
  445278:	bl	447000 <nftw@plt+0x44480>
  44527c:	mov	w22, w0
  445280:	cbz	w0, 444fc4 <nftw@plt+0x42444>
  445284:	ldr	w1, [sp, #264]
  445288:	ldr	x0, [sp, #896]
  44528c:	cbz	w1, 445874 <nftw@plt+0x42cf4>
  445290:	ldr	w23, [x0, #40]
  445294:	mov	w1, #0xffff                	// #65535
  445298:	ldr	w0, [sp, #264]
  44529c:	cmp	w0, w23
  4452a0:	sub	w0, w23, #0x100
  4452a4:	ccmp	w23, w1, #0x0, ls  // ls = plast
  4452a8:	csel	w23, w0, w23, hi  // hi = pmore
  4452ac:	ldr	x1, [sp, #304]
  4452b0:	mov	x3, x20
  4452b4:	mov	x2, x19
  4452b8:	mov	x0, x21
  4452bc:	bl	4470d0 <nftw@plt+0x44550>
  4452c0:	b	44517c <nftw@plt+0x425fc>
  4452c4:	ldr	x4, [sp, #488]
  4452c8:	add	x0, sp, #0x380
  4452cc:	mov	x2, #0x140                 	// #320
  4452d0:	mov	w1, #0x0                   	// #0
  4452d4:	str	x4, [sp, #288]
  4452d8:	str	x0, [sp, #304]
  4452dc:	bl	4026f0 <memset@plt>
  4452e0:	ldr	w0, [sp, #1240]
  4452e4:	cmp	w22, #0x1
  4452e8:	eor	w0, w0, #0x1
  4452ec:	and	w0, w0, #0x1
  4452f0:	str	w0, [sp, #404]
  4452f4:	b.ls	4467a8 <nftw@plt+0x43c28>  // b.plast
  4452f8:	ldr	x1, [sp, #1248]
  4452fc:	mov	x23, #0x0                   	// #0
  445300:	ldr	w2, [sp, #240]
  445304:	mov	w27, #0x0                   	// #0
  445308:	cmp	x1, #0x0
  44530c:	add	x1, sp, #0x290
  445310:	and	w2, w2, #0x2
  445314:	str	w2, [sp, #324]
  445318:	csinc	w2, w0, wzr, eq  // eq = none
  44531c:	add	x0, sp, #0x2a8
  445320:	str	x0, [sp, #416]
  445324:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x1dbb8>
  445328:	add	x22, x0, #0xa8
  44532c:	add	x0, sp, #0x388
  445330:	str	x20, [sp, #296]
  445334:	mov	w24, #0x0                   	// #0
  445338:	ldr	x20, [sp, #328]
  44533c:	str	w26, [sp, #280]
  445340:	str	x0, [sp, #312]
  445344:	mov	w0, #0x1                   	// #1
  445348:	stp	xzr, x23, [sp, #368]
  44534c:	mov	w23, w0
  445350:	str	x1, [sp, #408]
  445354:	mov	w1, #0x0                   	// #0
  445358:	str	x28, [sp, #424]
  44535c:	mov	w28, w1
  445360:	ldr	x26, [sp, #288]
  445364:	str	x19, [sp, #288]
  445368:	mov	w19, w2
  44536c:	str	wzr, [sp, #224]
  445370:	str	wzr, [sp, #240]
  445374:	str	x21, [sp, #272]
  445378:	str	xzr, [sp, #336]
  44537c:	str	xzr, [sp, #352]
  445380:	str	wzr, [sp, #360]
  445384:	str	wzr, [sp, #364]
  445388:	str	xzr, [sp, #384]
  44538c:	str	wzr, [sp, #400]
  445390:	ldr	w0, [x25, #4]
  445394:	cmp	w0, #0x2
  445398:	b.eq	44569c <nftw@plt+0x42b1c>  // b.none
  44539c:	cmp	w0, #0xb
  4453a0:	csel	w24, w24, w23, ne  // ne = any
  4453a4:	ldr	w21, [x25]
  4453a8:	cmp	x21, x20
  4453ac:	b.cs	445888 <nftw@plt+0x42d08>  // b.hs, b.nlast
  4453b0:	add	x21, x26, x21
  4453b4:	mov	x1, x22
  4453b8:	mov	x0, x21
  4453bc:	bl	402890 <strcmp@plt>
  4453c0:	cbz	w0, 445650 <nftw@plt+0x42ad0>
  4453c4:	adrp	x1, 47f000 <_obstack_memory_used@@Base+0x1dbb8>
  4453c8:	mov	x0, x21
  4453cc:	add	x1, x1, #0xb8
  4453d0:	bl	402890 <strcmp@plt>
  4453d4:	cbz	w0, 4457e0 <nftw@plt+0x42c60>
  4453d8:	adrp	x1, 47f000 <_obstack_memory_used@@Base+0x1dbb8>
  4453dc:	mov	x0, x21
  4453e0:	add	x1, x1, #0xc8
  4453e4:	bl	402890 <strcmp@plt>
  4453e8:	cbz	w0, 4457e8 <nftw@plt+0x42c68>
  4453ec:	adrp	x1, 47f000 <_obstack_memory_used@@Base+0x1dbb8>
  4453f0:	mov	x0, x21
  4453f4:	add	x1, x1, #0xd8
  4453f8:	bl	402890 <strcmp@plt>
  4453fc:	cbz	w0, 4457f0 <nftw@plt+0x42c70>
  445400:	adrp	x1, 47f000 <_obstack_memory_used@@Base+0x1dbb8>
  445404:	mov	x0, x21
  445408:	add	x1, x1, #0xe8
  44540c:	bl	402890 <strcmp@plt>
  445410:	cbz	w0, 4457f8 <nftw@plt+0x42c78>
  445414:	adrp	x1, 47f000 <_obstack_memory_used@@Base+0x1dbb8>
  445418:	mov	x0, x21
  44541c:	add	x1, x1, #0xf8
  445420:	bl	402890 <strcmp@plt>
  445424:	cbz	w0, 445800 <nftw@plt+0x42c80>
  445428:	adrp	x1, 47f000 <_obstack_memory_used@@Base+0x1dbb8>
  44542c:	mov	x0, x21
  445430:	add	x1, x1, #0x108
  445434:	bl	402890 <strcmp@plt>
  445438:	cbz	w0, 445808 <nftw@plt+0x42c88>
  44543c:	adrp	x1, 47f000 <_obstack_memory_used@@Base+0x1dbb8>
  445440:	mov	x0, x21
  445444:	add	x1, x1, #0x118
  445448:	bl	402890 <strcmp@plt>
  44544c:	cbz	w0, 445810 <nftw@plt+0x42c90>
  445450:	adrp	x1, 47f000 <_obstack_memory_used@@Base+0x1dbb8>
  445454:	mov	x0, x21
  445458:	add	x1, x1, #0x128
  44545c:	bl	402890 <strcmp@plt>
  445460:	cbz	w0, 445818 <nftw@plt+0x42c98>
  445464:	adrp	x1, 47f000 <_obstack_memory_used@@Base+0x1dbb8>
  445468:	mov	x0, x21
  44546c:	add	x1, x1, #0x138
  445470:	bl	402890 <strcmp@plt>
  445474:	cbz	w0, 44564c <nftw@plt+0x42acc>
  445478:	cbz	w19, 4454c0 <nftw@plt+0x42940>
  44547c:	ldr	w0, [sp, #224]
  445480:	cbnz	w0, 44549c <nftw@plt+0x4291c>
  445484:	mov	x0, x21
  445488:	adrp	x1, 47f000 <_obstack_memory_used@@Base+0x1dbb8>
  44548c:	add	x1, x1, #0x148
  445490:	bl	402890 <strcmp@plt>
  445494:	mov	w7, w0
  445498:	cbz	w0, 44576c <nftw@plt+0x42bec>
  44549c:	ldr	w0, [sp, #1240]
  4454a0:	orr	w0, w0, w28
  4454a4:	cbnz	w0, 4454c0 <nftw@plt+0x42940>
  4454a8:	mov	x0, x21
  4454ac:	adrp	x1, 47f000 <_obstack_memory_used@@Base+0x1dbb8>
  4454b0:	mov	w28, #0x0                   	// #0
  4454b4:	add	x1, x1, #0x168
  4454b8:	bl	402890 <strcmp@plt>
  4454bc:	cbz	w0, 4455e4 <nftw@plt+0x42a64>
  4454c0:	cbnz	w27, 4454d8 <nftw@plt+0x42958>
  4454c4:	adrp	x1, 47f000 <_obstack_memory_used@@Base+0x1dbb8>
  4454c8:	mov	x0, x21
  4454cc:	add	x1, x1, #0x178
  4454d0:	bl	402890 <strcmp@plt>
  4454d4:	cbz	w0, 445710 <nftw@plt+0x42b90>
  4454d8:	ldr	w0, [sp, #232]
  4454dc:	cmp	w0, #0x15
  4454e0:	b.eq	4456a4 <nftw@plt+0x42b24>  // b.none
  4454e4:	ldr	w0, [sp, #264]
  4454e8:	add	w23, w23, #0x1
  4454ec:	add	x25, x25, #0x40
  4454f0:	cmp	w0, w23
  4454f4:	b.ne	445390 <nftw@plt+0x42810>  // b.any
  4454f8:	ldr	w0, [sp, #240]
  4454fc:	ldr	w1, [sp, #404]
  445500:	cmp	w0, #0x0
  445504:	str	w28, [sp, #232]
  445508:	csel	w0, w0, w24, ne  // ne = any
  44550c:	ldr	w26, [sp, #280]
  445510:	cmp	w0, #0x0
  445514:	ccmp	w1, #0x0, #0x4, ne  // ne = any
  445518:	ldr	x21, [sp, #272]
  44551c:	ldp	x19, x20, [sp, #288]
  445520:	ldr	x23, [sp, #376]
  445524:	ldr	x28, [sp, #424]
  445528:	b.eq	445e70 <nftw@plt+0x432f0>  // b.none
  44552c:	sub	w25, w0, #0x1
  445530:	ldr	x0, [sp, #392]
  445534:	add	x25, x0, x25, lsl #6
  445538:	ldr	w0, [sp, #264]
  44553c:	ldr	w7, [x25, #40]
  445540:	cmp	w0, w7
  445544:	b.hi	4458dc <nftw@plt+0x42d5c>  // b.pmore
  445548:	mov	x0, x20
  44554c:	adrp	x1, 47f000 <_obstack_memory_used@@Base+0x1dbb8>
  445550:	mov	w2, #0x0                   	// #0
  445554:	add	x1, x1, #0x198
  445558:	mov	w22, #0x0                   	// #0
  44555c:	blr	x19
  445560:	str	wzr, [sp, #240]
  445564:	ldr	x1, [sp, #248]
  445568:	mov	x3, x20
  44556c:	mov	x2, x19
  445570:	mov	x0, x21
  445574:	bl	4470d0 <nftw@plt+0x44550>
  445578:	ldr	x1, [sp, #256]
  44557c:	mov	x0, x21
  445580:	mov	x3, x20
  445584:	mov	x2, x19
  445588:	bl	4470d0 <nftw@plt+0x44550>
  44558c:	ldr	w0, [sp, #240]
  445590:	cbz	w0, 4455a8 <nftw@plt+0x42a28>
  445594:	mov	x3, x20
  445598:	mov	x2, x19
  44559c:	add	x1, sp, #0x200
  4455a0:	mov	x0, x21
  4455a4:	bl	4470d0 <nftw@plt+0x44550>
  4455a8:	cbnz	w22, 445680 <nftw@plt+0x42b00>
  4455ac:	ldr	w0, [sp, #232]
  4455b0:	cbz	w0, 4455c8 <nftw@plt+0x42a48>
  4455b4:	mov	x3, x20
  4455b8:	mov	x2, x19
  4455bc:	add	x1, sp, #0x248
  4455c0:	mov	x0, x21
  4455c4:	bl	4470d0 <nftw@plt+0x44550>
  4455c8:	cbz	w27, 445210 <nftw@plt+0x42690>
  4455cc:	mov	x3, x20
  4455d0:	mov	x2, x19
  4455d4:	add	x1, sp, #0x260
  4455d8:	mov	x0, x21
  4455dc:	bl	4470d0 <nftw@plt+0x44550>
  4455e0:	b	445210 <nftw@plt+0x42690>
  4455e4:	ldp	x2, x3, [x25, #24]
  4455e8:	add	x6, sp, #0x248
  4455ec:	ldp	x4, x5, [sp, #288]
  4455f0:	ldr	w1, [sp, #280]
  4455f4:	ldr	x0, [sp, #272]
  4455f8:	bl	447000 <nftw@plt+0x44480>
  4455fc:	mov	w7, w0
  445600:	cbz	w0, 4458bc <nftw@plt+0x42d3c>
  445604:	ldr	x1, [x25, #32]
  445608:	str	x1, [sp, #328]
  44560c:	ldr	x2, [sp, #584]
  445610:	str	x2, [sp, #344]
  445614:	mov	w28, #0x1                   	// #1
  445618:	mov	x0, x2
  44561c:	bl	402540 <strnlen@plt>
  445620:	add	x0, x0, #0x3
  445624:	ldr	x1, [sp, #328]
  445628:	and	x0, x0, #0xfffffffffffffffc
  44562c:	add	x3, x0, #0x4
  445630:	cmp	x1, x3
  445634:	b.cc	4454c0 <nftw@plt+0x42940>  // b.lo, b.ul, b.last
  445638:	ldr	x2, [sp, #344]
  44563c:	str	x2, [sp, #368]
  445640:	ldr	w0, [x2, x0]
  445644:	str	w0, [sp, #360]
  445648:	b	4454c0 <nftw@plt+0x42940>
  44564c:	mov	w0, #0x9                   	// #9
  445650:	ldr	x3, [sp, #304]
  445654:	sbfiz	x0, x0, #5, #32
  445658:	ldr	x1, [x25, #24]
  44565c:	add	x2, sp, #0x398
  445660:	str	x1, [x3, x0]
  445664:	ldr	x3, [sp, #312]
  445668:	ldr	x1, [x25, #32]
  44566c:	str	x1, [x3, x0]
  445670:	ldr	x1, [x25, #8]
  445674:	ubfx	w1, w1, #11, #1
  445678:	str	w1, [x2, x0]
  44567c:	b	445478 <nftw@plt+0x428f8>
  445680:	mov	w22, #0x0                   	// #0
  445684:	mov	x3, x20
  445688:	mov	x2, x19
  44568c:	add	x1, sp, #0x218
  445690:	mov	x0, x21
  445694:	bl	4470d0 <nftw@plt+0x44550>
  445698:	b	4455ac <nftw@plt+0x42a2c>
  44569c:	str	w23, [sp, #240]
  4456a0:	b	4453a4 <nftw@plt+0x42824>
  4456a4:	ldr	w0, [sp, #324]
  4456a8:	cbnz	w0, 4454e4 <nftw@plt+0x42964>
  4456ac:	ldr	w0, [x25, #4]
  4456b0:	cmp	w0, #0x1
  4456b4:	b.ne	4454e4 <nftw@plt+0x42964>  // b.any
  4456b8:	adrp	x1, 47f000 <_obstack_memory_used@@Base+0x1dbb8>
  4456bc:	mov	x0, x21
  4456c0:	add	x1, x1, #0x190
  4456c4:	bl	402890 <strcmp@plt>
  4456c8:	cbnz	w0, 4454e4 <nftw@plt+0x42964>
  4456cc:	ldp	x2, x3, [x25, #24]
  4456d0:	ldp	x4, x5, [sp, #288]
  4456d4:	ldr	w1, [sp, #280]
  4456d8:	ldr	x0, [sp, #272]
  4456dc:	ldr	x6, [sp, #416]
  4456e0:	bl	447000 <nftw@plt+0x44480>
  4456e4:	mov	w7, w0
  4456e8:	cbz	w0, 4458bc <nftw@plt+0x42d3c>
  4456ec:	ldr	x0, [x25, #16]
  4456f0:	str	x0, [sp, #656]
  4456f4:	ldr	x0, [sp, #408]
  4456f8:	str	x0, [sp, #376]
  4456fc:	ldr	x0, [x25, #32]
  445700:	str	x0, [sp, #672]
  445704:	ldr	x0, [sp, #680]
  445708:	str	x0, [sp, #664]
  44570c:	b	4454e4 <nftw@plt+0x42964>
  445710:	ldp	x2, x3, [x25, #24]
  445714:	add	x6, sp, #0x260
  445718:	ldp	x4, x5, [sp, #288]
  44571c:	ldr	w1, [sp, #280]
  445720:	ldr	x0, [sp, #272]
  445724:	bl	447000 <nftw@plt+0x44480>
  445728:	mov	w7, w0
  44572c:	cbz	w0, 4458bc <nftw@plt+0x42d3c>
  445730:	ldr	x1, [x25, #32]
  445734:	mov	w27, #0x1                   	// #1
  445738:	ldr	x0, [sp, #608]
  44573c:	stp	x1, x0, [sp, #328]
  445740:	bl	402540 <strnlen@plt>
  445744:	ldr	x1, [sp, #328]
  445748:	cmp	x1, x0
  44574c:	b.ls	4454d8 <nftw@plt+0x42958>  // b.plast
  445750:	add	x0, x0, #0x1
  445754:	sub	w2, w1, w0
  445758:	str	w2, [sp, #364]
  44575c:	ldr	x1, [sp, #336]
  445760:	add	x0, x1, x0
  445764:	str	x0, [sp, #352]
  445768:	b	4454d8 <nftw@plt+0x42958>
  44576c:	ldp	x2, x3, [x25, #24]
  445770:	add	x6, sp, #0x230
  445774:	ldp	x4, x5, [sp, #288]
  445778:	str	w7, [sp, #328]
  44577c:	ldr	w1, [sp, #280]
  445780:	ldr	x0, [sp, #272]
  445784:	bl	447000 <nftw@plt+0x44480>
  445788:	cbz	w0, 44673c <nftw@plt+0x43bbc>
  44578c:	ldr	x2, [sp, #560]
  445790:	ldr	w7, [sp, #328]
  445794:	ldr	w0, [x2, #8]
  445798:	cmp	w0, #0x3
  44579c:	b.eq	445820 <nftw@plt+0x42ca0>  // b.none
  4457a0:	ldr	w0, [sp, #1256]
  4457a4:	cbz	w0, 4457d4 <nftw@plt+0x42c54>
  4457a8:	ldr	w0, [sp, #400]
  4457ac:	ldr	w1, [sp, #1256]
  4457b0:	cmp	w0, w1
  4457b4:	b.ne	446760 <nftw@plt+0x43be0>  // b.any
  4457b8:	mov	w2, w0
  4457bc:	str	w7, [sp, #224]
  4457c0:	ldr	x0, [sp, #384]
  4457c4:	ldr	x1, [sp, #1248]
  4457c8:	bl	402850 <memcmp@plt>
  4457cc:	ldr	w7, [sp, #224]
  4457d0:	cbnz	w0, 446760 <nftw@plt+0x43be0>
  4457d4:	mov	w0, #0x1                   	// #1
  4457d8:	str	w0, [sp, #224]
  4457dc:	b	44549c <nftw@plt+0x4291c>
  4457e0:	mov	w0, #0x1                   	// #1
  4457e4:	b	445650 <nftw@plt+0x42ad0>
  4457e8:	mov	w0, #0x2                   	// #2
  4457ec:	b	445650 <nftw@plt+0x42ad0>
  4457f0:	mov	w0, #0x3                   	// #3
  4457f4:	b	445650 <nftw@plt+0x42ad0>
  4457f8:	mov	w0, #0x4                   	// #4
  4457fc:	b	445650 <nftw@plt+0x42ad0>
  445800:	mov	w0, #0x5                   	// #5
  445804:	b	445650 <nftw@plt+0x42ad0>
  445808:	mov	w0, #0x6                   	// #6
  44580c:	b	445650 <nftw@plt+0x42ad0>
  445810:	mov	w0, #0x7                   	// #7
  445814:	b	445650 <nftw@plt+0x42ad0>
  445818:	mov	w0, #0x8                   	// #8
  44581c:	b	445650 <nftw@plt+0x42ad0>
  445820:	ldr	w0, [x2]
  445824:	cmp	w0, #0x4
  445828:	b.ne	4457a0 <nftw@plt+0x42c20>  // b.any
  44582c:	add	x0, x2, #0xc
  445830:	adrp	x1, 47f000 <_obstack_memory_used@@Base+0x1dbb8>
  445834:	add	x1, x1, #0x160
  445838:	str	x2, [sp, #224]
  44583c:	str	w7, [sp, #328]
  445840:	bl	402890 <strcmp@plt>
  445844:	ldr	w7, [sp, #328]
  445848:	cbnz	w0, 4457a0 <nftw@plt+0x42c20>
  44584c:	ldr	x2, [sp, #224]
  445850:	ldr	x3, [x25, #32]
  445854:	ldr	w0, [x2, #4]
  445858:	add	w1, w0, #0x10
  44585c:	cmp	x3, x1
  445860:	b.hi	4457a0 <nftw@plt+0x42c20>  // b.pmore
  445864:	add	x1, x2, #0x10
  445868:	str	x1, [sp, #384]
  44586c:	str	w0, [sp, #400]
  445870:	b	4457a0 <nftw@plt+0x42c20>
  445874:	ldr	w1, [x0, #32]
  445878:	cmp	w23, w24
  44587c:	str	w1, [sp, #264]
  445880:	b.ne	4452ac <nftw@plt+0x4272c>  // b.any
  445884:	b	445290 <nftw@plt+0x42710>
  445888:	ldp	x19, x20, [sp, #288]
  44588c:	str	w28, [sp, #232]
  445890:	ldr	w26, [sp, #280]
  445894:	adrp	x1, 47f000 <_obstack_memory_used@@Base+0x1dbb8>
  445898:	mov	w2, #0x0                   	// #0
  44589c:	add	x1, x1, #0x88
  4458a0:	mov	w22, #0x0                   	// #0
  4458a4:	ldr	x21, [sp, #272]
  4458a8:	mov	x0, x20
  4458ac:	ldr	x23, [sp, #376]
  4458b0:	blr	x19
  4458b4:	str	wzr, [sp, #240]
  4458b8:	b	445564 <nftw@plt+0x429e4>
  4458bc:	ldr	w26, [sp, #280]
  4458c0:	mov	w22, #0x0                   	// #0
  4458c4:	str	w28, [sp, #232]
  4458c8:	str	w7, [sp, #240]
  4458cc:	ldr	x21, [sp, #272]
  4458d0:	ldp	x19, x20, [sp, #288]
  4458d4:	ldr	x23, [sp, #376]
  4458d8:	b	445564 <nftw@plt+0x429e4>
  4458dc:	ldp	x2, x3, [x25, #24]
  4458e0:	add	x24, sp, #0x200
  4458e4:	mov	x6, x24
  4458e8:	mov	x5, x20
  4458ec:	mov	x4, x19
  4458f0:	mov	w1, w26
  4458f4:	mov	x0, x21
  4458f8:	str	w7, [sp, #264]
  4458fc:	mov	w22, #0x0                   	// #0
  445900:	bl	447000 <nftw@plt+0x44480>
  445904:	str	w0, [sp, #240]
  445908:	cbz	w0, 445564 <nftw@plt+0x429e4>
  44590c:	ldr	w7, [sp, #264]
  445910:	add	x6, sp, #0x218
  445914:	ldr	x0, [sp, #392]
  445918:	sub	w7, w7, #0x1
  44591c:	mov	x5, x20
  445920:	mov	x4, x19
  445924:	mov	w1, w26
  445928:	add	x7, x0, x7, lsl #6
  44592c:	mov	x0, x21
  445930:	str	x7, [sp, #240]
  445934:	ldp	x2, x3, [x7, #24]
  445938:	bl	447000 <nftw@plt+0x44480>
  44593c:	mov	w22, w0
  445940:	cbz	w0, 446730 <nftw@plt+0x43bb0>
  445944:	mov	x3, x20
  445948:	mov	x2, x19
  44594c:	mov	x0, x21
  445950:	mov	x1, #0x18                  	// #24
  445954:	bl	442c10 <nftw@plt+0x40090>
  445958:	mov	x22, x0
  44595c:	cbz	x0, 446b40 <nftw@plt+0x43fc0>
  445960:	ldr	x0, [x25, #32]
  445964:	mov	x1, #0x18                  	// #24
  445968:	ldr	x7, [sp, #240]
  44596c:	cmp	x0, #0x17
  445970:	udiv	x12, x0, x1
  445974:	ldr	x11, [sp, #512]
  445978:	ldr	x6, [x7, #32]
  44597c:	ldr	x4, [sp, #536]
  445980:	b.ls	446b1c <nftw@plt+0x43f9c>  // b.plast
  445984:	cmp	x0, #0x17f
  445988:	b.ls	446b8c <nftw@plt+0x4400c>  // b.plast
  44598c:	lsr	x1, x12, #4
  445990:	mov	x2, #0x180                 	// #384
  445994:	movi	v4.4s, #0x0
  445998:	mov	x0, x11
  44599c:	movi	v17.16b, #0xf
  4459a0:	str	d8, [sp, #176]
  4459a4:	mvni	v6.4s, #0x0
  4459a8:	madd	x1, x1, x2, x11
  4459ac:	movi	v5.4s, #0x1
  4459b0:	adrp	x2, 47f000 <_obstack_memory_used@@Base+0x1dbb8>
  4459b4:	ldr	q16, [x2, #544]
  4459b8:	ldr	b3, [x0, #28]
  4459bc:	ldr	b0, [x0, #4]
  4459c0:	ldr	b2, [x0, #52]
  4459c4:	ldr	b1, [x0, #76]
  4459c8:	mov	v0.b[1], v3.b[0]
  4459cc:	ldr	b7, [x0, #100]
  4459d0:	ldr	b23, [x0, #124]
  4459d4:	ldr	b24, [x0, #148]
  4459d8:	ldr	b21, [x0, #172]
  4459dc:	mov	v0.b[2], v2.b[0]
  4459e0:	ldr	b31, [x0, #196]
  4459e4:	ldr	b28, [x0, #220]
  4459e8:	ldr	b25, [x0, #244]
  4459ec:	ldr	b22, [x0, #268]
  4459f0:	mov	v0.b[3], v1.b[0]
  4459f4:	ldr	b20, [x0, #292]
  4459f8:	ldr	h3, [x0, #30]
  4459fc:	ldr	h2, [x0, #6]
  445a00:	ldr	b18, [x0, #316]
  445a04:	mov	v0.b[4], v7.b[0]
  445a08:	ldr	h1, [x0, #54]
  445a0c:	mov	v2.h[1], v3.h[0]
  445a10:	ldr	b7, [x0, #340]
  445a14:	ldr	h8, [x0, #78]
  445a18:	ldr	b3, [x0, #364]
  445a1c:	mov	v0.b[5], v23.b[0]
  445a20:	ldr	h23, [x0, #222]
  445a24:	mov	v2.h[2], v1.h[0]
  445a28:	ldr	h1, [x0, #198]
  445a2c:	ldr	h19, [x0, #102]
  445a30:	ldr	h29, [x0, #270]
  445a34:	mov	v0.b[6], v24.b[0]
  445a38:	ldr	h30, [x0, #126]
  445a3c:	mov	v1.h[1], v23.h[0]
  445a40:	ldr	h26, [x0, #294]
  445a44:	mov	v2.h[3], v8.h[0]
  445a48:	ldr	h8, [x0, #246]
  445a4c:	ldr	h27, [x0, #150]
  445a50:	add	x0, x0, #0x180
  445a54:	mov	v0.b[7], v21.b[0]
  445a58:	ldur	h23, [x0, #-66]
  445a5c:	mov	v1.h[2], v8.h[0]
  445a60:	ldur	h24, [x0, #-210]
  445a64:	mov	v2.h[4], v19.h[0]
  445a68:	ldur	h21, [x0, #-42]
  445a6c:	ldur	h19, [x0, #-18]
  445a70:	cmp	x1, x0
  445a74:	mov	v0.b[8], v31.b[0]
  445a78:	mov	v1.h[3], v29.h[0]
  445a7c:	mov	v2.h[5], v30.h[0]
  445a80:	mov	v0.b[9], v28.b[0]
  445a84:	mov	v1.h[4], v26.h[0]
  445a88:	mov	v2.h[6], v27.h[0]
  445a8c:	mov	v0.b[10], v25.b[0]
  445a90:	mov	v1.h[5], v23.h[0]
  445a94:	mov	v2.h[7], v24.h[0]
  445a98:	mov	v0.b[11], v22.b[0]
  445a9c:	mov	v1.h[6], v21.h[0]
  445aa0:	cmeq	v2.8h, v2.8h, #0
  445aa4:	mov	v0.b[12], v20.b[0]
  445aa8:	mov	v1.h[7], v19.h[0]
  445aac:	mov	v0.b[13], v18.b[0]
  445ab0:	cmeq	v1.8h, v1.8h, #0
  445ab4:	mov	v0.b[14], v7.b[0]
  445ab8:	mov	v0.b[15], v3.b[0]
  445abc:	and	v0.16b, v0.16b, v17.16b
  445ac0:	uxtl	v3.8h, v0.8b
  445ac4:	uxtl2	v0.8h, v0.16b
  445ac8:	uaddw	v18.4s, v6.4s, v3.4h
  445acc:	uaddw2	v3.4s, v6.4s, v3.8h
  445ad0:	uaddw	v7.4s, v6.4s, v0.4h
  445ad4:	uaddw2	v0.4s, v6.4s, v0.8h
  445ad8:	cmhs	v18.4s, v5.4s, v18.4s
  445adc:	cmhs	v3.4s, v5.4s, v3.4s
  445ae0:	cmhs	v7.4s, v5.4s, v7.4s
  445ae4:	cmhs	v0.4s, v5.4s, v0.4s
  445ae8:	xtn	v19.4h, v18.4s
  445aec:	xtn2	v19.8h, v3.4s
  445af0:	xtn	v3.4h, v7.4s
  445af4:	xtn2	v3.8h, v0.4s
  445af8:	bic	v2.16b, v19.16b, v2.16b
  445afc:	bic	v0.16b, v3.16b, v1.16b
  445b00:	sxtl	v7.4s, v2.4h
  445b04:	sxtl2	v1.4s, v2.8h
  445b08:	sxtl	v3.4s, v0.4h
  445b0c:	sxtl2	v0.4s, v0.8h
  445b10:	sxtl	v2.2d, v7.2s
  445b14:	and	v2.16b, v16.16b, v2.16b
  445b18:	ssubw2	v2.2d, v2.2d, v7.4s
  445b1c:	ssubw	v2.2d, v2.2d, v1.2s
  445b20:	ssubw2	v1.2d, v2.2d, v1.4s
  445b24:	ssubw	v1.2d, v1.2d, v3.2s
  445b28:	ssubw2	v1.2d, v1.2d, v3.4s
  445b2c:	ssubw	v1.2d, v1.2d, v0.2s
  445b30:	ssubw2	v0.2d, v1.2d, v0.4s
  445b34:	add	v4.2d, v4.2d, v0.2d
  445b38:	b.ne	4459b8 <nftw@plt+0x42e38>  // b.any
  445b3c:	addp	d4, v4.2d
  445b40:	and	x1, x12, #0xfffffffffffffff0
  445b44:	mov	x0, #0x18                  	// #24
  445b48:	cmp	x12, x1
  445b4c:	ldr	d8, [sp, #176]
  445b50:	madd	x0, x1, x0, x11
  445b54:	mov	x25, v4.d[0]
  445b58:	b.eq	445d34 <nftw@plt+0x431b4>  // b.none
  445b5c:	ldrb	w2, [x0, #4]
  445b60:	and	w2, w2, #0xf
  445b64:	sub	w2, w2, #0x1
  445b68:	cmp	w2, #0x1
  445b6c:	b.ls	446990 <nftw@plt+0x43e10>  // b.plast
  445b70:	add	x2, x1, #0x1
  445b74:	cmp	x12, x2
  445b78:	b.ls	445d34 <nftw@plt+0x431b4>  // b.plast
  445b7c:	ldrb	w2, [x0, #28]
  445b80:	and	w2, w2, #0xf
  445b84:	sub	w2, w2, #0x1
  445b88:	cmp	w2, #0x1
  445b8c:	b.ls	446980 <nftw@plt+0x43e00>  // b.plast
  445b90:	add	x2, x1, #0x2
  445b94:	cmp	x12, x2
  445b98:	b.ls	445d34 <nftw@plt+0x431b4>  // b.plast
  445b9c:	ldrb	w2, [x0, #52]
  445ba0:	and	w2, w2, #0xf
  445ba4:	sub	w2, w2, #0x1
  445ba8:	cmp	w2, #0x1
  445bac:	b.ls	446970 <nftw@plt+0x43df0>  // b.plast
  445bb0:	add	x2, x1, #0x3
  445bb4:	cmp	x12, x2
  445bb8:	b.ls	445d34 <nftw@plt+0x431b4>  // b.plast
  445bbc:	ldrb	w2, [x0, #76]
  445bc0:	and	w2, w2, #0xf
  445bc4:	sub	w2, w2, #0x1
  445bc8:	cmp	w2, #0x1
  445bcc:	b.ls	446960 <nftw@plt+0x43de0>  // b.plast
  445bd0:	add	x2, x1, #0x4
  445bd4:	cmp	x12, x2
  445bd8:	b.ls	445d34 <nftw@plt+0x431b4>  // b.plast
  445bdc:	ldrb	w2, [x0, #100]
  445be0:	and	w2, w2, #0xf
  445be4:	sub	w2, w2, #0x1
  445be8:	cmp	w2, #0x1
  445bec:	b.ls	446b7c <nftw@plt+0x43ffc>  // b.plast
  445bf0:	add	x2, x1, #0x5
  445bf4:	cmp	x12, x2
  445bf8:	b.ls	445d34 <nftw@plt+0x431b4>  // b.plast
  445bfc:	ldrb	w2, [x0, #124]
  445c00:	and	w2, w2, #0xf
  445c04:	sub	w2, w2, #0x1
  445c08:	cmp	w2, #0x1
  445c0c:	b.ls	446b6c <nftw@plt+0x43fec>  // b.plast
  445c10:	add	x2, x1, #0x6
  445c14:	cmp	x12, x2
  445c18:	b.ls	445d34 <nftw@plt+0x431b4>  // b.plast
  445c1c:	ldrb	w2, [x0, #148]
  445c20:	and	w2, w2, #0xf
  445c24:	sub	w2, w2, #0x1
  445c28:	cmp	w2, #0x1
  445c2c:	b.ls	446b5c <nftw@plt+0x43fdc>  // b.plast
  445c30:	add	x2, x1, #0x7
  445c34:	cmp	x12, x2
  445c38:	b.ls	445d34 <nftw@plt+0x431b4>  // b.plast
  445c3c:	ldrb	w2, [x0, #172]
  445c40:	and	w2, w2, #0xf
  445c44:	sub	w2, w2, #0x1
  445c48:	cmp	w2, #0x1
  445c4c:	b.ls	446b4c <nftw@plt+0x43fcc>  // b.plast
  445c50:	add	x2, x1, #0x8
  445c54:	cmp	x12, x2
  445c58:	b.ls	445d34 <nftw@plt+0x431b4>  // b.plast
  445c5c:	ldrb	w2, [x0, #196]
  445c60:	and	w2, w2, #0xf
  445c64:	sub	w2, w2, #0x1
  445c68:	cmp	w2, #0x1
  445c6c:	b.ls	446bfc <nftw@plt+0x4407c>  // b.plast
  445c70:	add	x2, x1, #0x9
  445c74:	cmp	x12, x2
  445c78:	b.ls	445d34 <nftw@plt+0x431b4>  // b.plast
  445c7c:	ldrb	w2, [x0, #220]
  445c80:	and	w2, w2, #0xf
  445c84:	sub	w2, w2, #0x1
  445c88:	cmp	w2, #0x1
  445c8c:	b.ls	446bec <nftw@plt+0x4406c>  // b.plast
  445c90:	add	x2, x1, #0xa
  445c94:	cmp	x12, x2
  445c98:	b.ls	445d34 <nftw@plt+0x431b4>  // b.plast
  445c9c:	ldrb	w2, [x0, #244]
  445ca0:	and	w2, w2, #0xf
  445ca4:	sub	w2, w2, #0x1
  445ca8:	cmp	w2, #0x1
  445cac:	b.ls	446bdc <nftw@plt+0x4405c>  // b.plast
  445cb0:	add	x2, x1, #0xb
  445cb4:	cmp	x12, x2
  445cb8:	b.ls	445d34 <nftw@plt+0x431b4>  // b.plast
  445cbc:	ldrb	w2, [x0, #268]
  445cc0:	and	w2, w2, #0xf
  445cc4:	sub	w2, w2, #0x1
  445cc8:	cmp	w2, #0x1
  445ccc:	b.ls	446bcc <nftw@plt+0x4404c>  // b.plast
  445cd0:	add	x2, x1, #0xc
  445cd4:	cmp	x12, x2
  445cd8:	b.ls	445d34 <nftw@plt+0x431b4>  // b.plast
  445cdc:	ldrb	w2, [x0, #292]
  445ce0:	and	w2, w2, #0xf
  445ce4:	sub	w2, w2, #0x1
  445ce8:	cmp	w2, #0x1
  445cec:	b.ls	446bbc <nftw@plt+0x4403c>  // b.plast
  445cf0:	add	x2, x1, #0xd
  445cf4:	cmp	x12, x2
  445cf8:	b.ls	445d34 <nftw@plt+0x431b4>  // b.plast
  445cfc:	ldrb	w2, [x0, #316]
  445d00:	and	w2, w2, #0xf
  445d04:	sub	w2, w2, #0x1
  445d08:	cmp	w2, #0x1
  445d0c:	b.ls	446bac <nftw@plt+0x4402c>  // b.plast
  445d10:	add	x1, x1, #0xe
  445d14:	cmp	x12, x1
  445d18:	b.ls	445d34 <nftw@plt+0x431b4>  // b.plast
  445d1c:	ldrb	w1, [x0, #340]
  445d20:	add	x0, x0, #0x150
  445d24:	and	w1, w1, #0xf
  445d28:	sub	w1, w1, #0x1
  445d2c:	cmp	w1, #0x1
  445d30:	b.ls	446b9c <nftw@plt+0x4401c>  // b.plast
  445d34:	mov	x7, #0x18                  	// #24
  445d38:	mov	x3, x20
  445d3c:	mov	x2, x19
  445d40:	mov	x0, x21
  445d44:	mul	x8, x25, x7
  445d48:	stp	x4, x6, [sp, #264]
  445d4c:	mov	x1, x8
  445d50:	str	x8, [sp, #240]
  445d54:	stp	x11, x12, [sp, #280]
  445d58:	bl	442c10 <nftw@plt+0x40090>
  445d5c:	mov	x7, #0x18                  	// #24
  445d60:	mov	x5, x0
  445d64:	ldr	x8, [sp, #240]
  445d68:	ldp	x4, x6, [sp, #264]
  445d6c:	ldp	x11, x12, [sp, #280]
  445d70:	cbz	x0, 44686c <nftw@plt+0x43cec>
  445d74:	cbz	x23, 446890 <nftw@plt+0x43d10>
  445d78:	mov	x1, #0x0                   	// #0
  445d7c:	mov	w3, #0x0                   	// #0
  445d80:	ldrb	w0, [x11, #4]
  445d84:	add	x1, x1, #0x1
  445d88:	and	w0, w0, #0xf
  445d8c:	sub	w0, w0, #0x1
  445d90:	cmp	w0, #0x1
  445d94:	b.hi	445e00 <nftw@plt+0x43280>  // b.pmore
  445d98:	ldrh	w2, [x11, #6]
  445d9c:	umull	x0, w3, w7
  445da0:	add	x9, x5, x0
  445da4:	cbz	w2, 445e00 <nftw@plt+0x43280>
  445da8:	ldr	w2, [x11]
  445dac:	add	w3, w3, #0x1
  445db0:	add	x10, x4, x2
  445db4:	cmp	x6, x2
  445db8:	b.ls	446838 <nftw@plt+0x43cb8>  // b.plast
  445dbc:	str	x10, [x5, x0]
  445dc0:	ldr	x2, [x23]
  445dc4:	ldr	x0, [x11, #8]
  445dc8:	cmp	x2, x0
  445dcc:	b.hi	445dec <nftw@plt+0x4326c>  // b.pmore
  445dd0:	ldr	x13, [x23, #16]
  445dd4:	sub	x10, x0, x2
  445dd8:	add	x2, x2, x13
  445ddc:	cmp	x2, x0
  445de0:	b.ls	445dec <nftw@plt+0x4326c>  // b.plast
  445de4:	ldr	x0, [x23, #8]
  445de8:	ldr	x0, [x0, x10]
  445dec:	ldr	x2, [sp, #200]
  445df0:	add	x0, x2, x0
  445df4:	str	x0, [x9, #8]
  445df8:	ldr	x0, [x11, #16]
  445dfc:	str	x0, [x9, #16]
  445e00:	add	x11, x11, #0x18
  445e04:	cmp	x12, x1
  445e08:	b.hi	445d80 <nftw@plt+0x43200>  // b.pmore
  445e0c:	mov	x0, x5
  445e10:	mov	x1, x25
  445e14:	mov	x2, #0x18                  	// #24
  445e18:	adrp	x3, 443000 <nftw@plt+0x40480>
  445e1c:	add	x3, x3, #0x510
  445e20:	str	x5, [sp, #240]
  445e24:	bl	44bad0 <nftw@plt+0x48f50>
  445e28:	str	x25, [x22, #16]
  445e2c:	ldr	x5, [sp, #240]
  445e30:	stp	xzr, x5, [x22]
  445e34:	mov	x1, x24
  445e38:	mov	x0, x21
  445e3c:	mov	x3, x20
  445e40:	mov	x2, x19
  445e44:	bl	4470d0 <nftw@plt+0x44550>
  445e48:	mov	w0, #0x1                   	// #1
  445e4c:	str	w0, [x28]
  445e50:	add	x1, x21, #0x30
  445e54:	ldr	w0, [x21, #8]
  445e58:	cbnz	w0, 446800 <nftw@plt+0x43c80>
  445e5c:	ldr	x0, [x21, #48]
  445e60:	cbz	x0, 4467f4 <nftw@plt+0x43c74>
  445e64:	mov	x1, x0
  445e68:	ldr	x0, [x0]
  445e6c:	b	445e60 <nftw@plt+0x432e0>
  445e70:	mov	w25, #0x0                   	// #0
  445e74:	ldr	x1, [sp, #248]
  445e78:	mov	x3, x20
  445e7c:	mov	x2, x19
  445e80:	mov	x0, x21
  445e84:	bl	4470d0 <nftw@plt+0x44550>
  445e88:	ldr	x1, [sp, #256]
  445e8c:	mov	x0, x21
  445e90:	mov	x3, x20
  445e94:	mov	x2, x19
  445e98:	bl	4470d0 <nftw@plt+0x44550>
  445e9c:	ldr	x0, [sp, #384]
  445ea0:	cbz	x0, 445fac <nftw@plt+0x4342c>
  445ea4:	ldr	w22, [sp, #400]
  445ea8:	mov	x0, #0x21                  	// #33
  445eac:	mov	x3, x20
  445eb0:	mov	x2, x19
  445eb4:	add	x8, x0, w22, uxtw #1
  445eb8:	mov	x0, x21
  445ebc:	mov	x1, x8
  445ec0:	str	x8, [sp, #240]
  445ec4:	bl	442c10 <nftw@plt+0x40090>
  445ec8:	mov	x24, x0
  445ecc:	mov	w6, w22
  445ed0:	cbz	x0, 445fac <nftw@plt+0x4342c>
  445ed4:	adrp	x2, 47f000 <_obstack_memory_used@@Base+0x1dbb8>
  445ed8:	add	x2, x2, #0x1f0
  445edc:	add	x4, x0, #0x19
  445ee0:	ldr	x8, [sp, #240]
  445ee4:	ldp	x0, x1, [x2]
  445ee8:	stp	x0, x1, [x24]
  445eec:	ldrb	w0, [x2, #24]
  445ef0:	ldr	x1, [x2, #16]
  445ef4:	str	x1, [x24, #16]
  445ef8:	strb	w0, [x24, #24]
  445efc:	cbz	x6, 445f54 <nftw@plt+0x433d4>
  445f00:	mov	x2, #0x0                   	// #0
  445f04:	mov	w7, #0x2f                  	// #47
  445f08:	ldr	x0, [sp, #384]
  445f0c:	ldrb	w0, [x0, x2]
  445f10:	and	w1, w0, #0xf
  445f14:	lsr	w0, w0, #4
  445f18:	add	w3, w1, #0x30
  445f1c:	cmp	w0, #0x9
  445f20:	add	w5, w0, #0x30
  445f24:	add	w0, w0, #0x57
  445f28:	csel	w0, w0, w5, hi  // hi = pmore
  445f2c:	cmp	w1, #0x9
  445f30:	add	w1, w1, #0x57
  445f34:	strb	w0, [x4]
  445f38:	csel	w0, w1, w3, hi  // hi = pmore
  445f3c:	strb	w0, [x4, #1]
  445f40:	cbz	x2, 446088 <nftw@plt+0x43508>
  445f44:	add	x2, x2, #0x1
  445f48:	add	x4, x4, #0x2
  445f4c:	cmp	x6, x2
  445f50:	b.ne	445f08 <nftw@plt+0x43388>  // b.any
  445f54:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x1dbb8>
  445f58:	add	x0, x0, #0x210
  445f5c:	strb	wzr, [x4, #6]
  445f60:	add	x3, sp, #0x300
  445f64:	mov	x2, x20
  445f68:	str	x8, [sp, #240]
  445f6c:	ldr	w1, [x0]
  445f70:	ldrh	w0, [x0, #4]
  445f74:	str	w1, [x4]
  445f78:	mov	x1, x19
  445f7c:	strh	w0, [x4, #4]
  445f80:	mov	x0, x24
  445f84:	bl	4433c8 <nftw@plt+0x40848>
  445f88:	mov	w22, w0
  445f8c:	ldr	x8, [sp, #240]
  445f90:	mov	x1, x24
  445f94:	mov	x4, x20
  445f98:	mov	x3, x19
  445f9c:	mov	x0, x21
  445fa0:	mov	x2, x8
  445fa4:	bl	442ad8 <nftw@plt+0x3ff58>
  445fa8:	tbz	w22, #31, 446788 <nftw@plt+0x43c08>
  445fac:	ldr	w0, [sp, #224]
  445fb0:	cbnz	w0, 446070 <nftw@plt+0x434f0>
  445fb4:	cbz	x23, 445fcc <nftw@plt+0x4344c>
  445fb8:	add	x1, x23, #0x18
  445fbc:	mov	x3, x20
  445fc0:	mov	x2, x19
  445fc4:	mov	x0, x21
  445fc8:	bl	4470d0 <nftw@plt+0x44550>
  445fcc:	ldr	x0, [sp, #368]
  445fd0:	cbz	x0, 446150 <nftw@plt+0x435d0>
  445fd4:	ldr	x1, [sp, #216]
  445fd8:	mov	x2, x0
  445fdc:	mov	x4, x20
  445fe0:	mov	x3, x19
  445fe4:	mov	x0, x21
  445fe8:	bl	443de0 <nftw@plt+0x41260>
  445fec:	mov	w22, w0
  445ff0:	tbnz	w0, #31, 446150 <nftw@plt+0x435d0>
  445ff4:	ldr	w0, [sp, #360]
  445ff8:	cbnz	w0, 4460a4 <nftw@plt+0x43524>
  445ffc:	mov	x3, x20
  446000:	mov	x2, x19
  446004:	add	x1, sp, #0x248
  446008:	mov	x0, x21
  44600c:	bl	4470d0 <nftw@plt+0x44550>
  446010:	cbnz	w27, 446934 <nftw@plt+0x43db4>
  446014:	ldp	x3, x6, [sp, #200]
  446018:	mov	w0, #0x1                   	// #1
  44601c:	ldr	x1, [sp, #1216]
  446020:	stp	x1, xzr, [sp]
  446024:	mov	w2, w22
  446028:	str	wzr, [sp, #16]
  44602c:	mov	x7, x28
  446030:	str	w0, [sp, #24]
  446034:	mov	x5, x20
  446038:	str	xzr, [sp, #32]
  44603c:	mov	x4, x19
  446040:	str	wzr, [sp, #40]
  446044:	mov	x0, x21
  446048:	adrp	x1, 472000 <_obstack_memory_used@@Base+0x10bb8>
  44604c:	add	x1, x1, #0x5c0
  446050:	bl	444f48 <nftw@plt+0x423c8>
  446054:	mov	w23, w0
  446058:	mov	x2, x20
  44605c:	mov	x1, x19
  446060:	tbz	w0, #31, 444ff8 <nftw@plt+0x42478>
  446064:	mov	w0, w22
  446068:	bl	443478 <nftw@plt+0x408f8>
  44606c:	b	445000 <nftw@plt+0x42480>
  446070:	mov	x3, x20
  446074:	mov	x2, x19
  446078:	add	x1, sp, #0x230
  44607c:	mov	x0, x21
  446080:	bl	4470d0 <nftw@plt+0x44550>
  446084:	b	445fb4 <nftw@plt+0x43434>
  446088:	strb	w7, [x4, #2]
  44608c:	add	x0, x4, #0x3
  446090:	cmp	x6, #0x1
  446094:	mov	x4, x0
  446098:	b.eq	445f54 <nftw@plt+0x433d4>  // b.none
  44609c:	mov	x2, #0x1                   	// #1
  4460a0:	b	445f08 <nftw@plt+0x43388>
  4460a4:	add	x2, sp, #0x300
  4460a8:	mov	w1, w22
  4460ac:	mov	w0, #0x0                   	// #0
  4460b0:	bl	402a10 <__fxstat@plt>
  4460b4:	tbnz	w0, #31, 446914 <nftw@plt+0x43d94>
  4460b8:	ldr	x3, [sp, #816]
  4460bc:	add	x24, sp, #0x278
  4460c0:	mov	x6, x24
  4460c4:	mov	x5, x20
  4460c8:	mov	x4, x19
  4460cc:	mov	w1, w22
  4460d0:	mov	x0, x21
  4460d4:	mov	x2, #0x0                   	// #0
  4460d8:	bl	447000 <nftw@plt+0x44480>
  4460dc:	cbz	w0, 446140 <nftw@plt+0x435c0>
  4460e0:	ldr	x2, [sp, #632]
  4460e4:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x1dbb8>
  4460e8:	ldr	x3, [sp, #816]
  4460ec:	add	x0, x0, #0x230
  4460f0:	add	x0, x0, #0x4e0
  4460f4:	mov	w23, #0xffffffff            	// #-1
  4460f8:	add	x3, x2, x3
  4460fc:	b	446114 <nftw@plt+0x43594>
  446100:	ldrb	w1, [x2], #1
  446104:	eor	w1, w1, w23
  446108:	and	x1, x1, #0xff
  44610c:	ldr	w1, [x0, x1, lsl #2]
  446110:	eor	w23, w1, w23, lsr #8
  446114:	cmp	x3, x2
  446118:	b.hi	446100 <nftw@plt+0x43580>  // b.pmore
  44611c:	mov	x0, x21
  446120:	mov	x1, x24
  446124:	mov	x3, x20
  446128:	mov	x2, x19
  44612c:	bl	4470d0 <nftw@plt+0x44550>
  446130:	mvn	w23, w23
  446134:	ldr	w0, [sp, #360]
  446138:	cmp	w23, w0
  44613c:	b.eq	445ffc <nftw@plt+0x4347c>  // b.none
  446140:	mov	w0, w22
  446144:	mov	x2, x20
  446148:	mov	x1, x19
  44614c:	bl	443478 <nftw@plt+0x408f8>
  446150:	ldr	w0, [sp, #232]
  446154:	cbnz	w0, 446718 <nftw@plt+0x43b98>
  446158:	ldr	x0, [sp, #336]
  44615c:	str	xzr, [sp, #632]
  446160:	cbz	x0, 4466ac <nftw@plt+0x43b2c>
  446164:	ldr	x23, [sp, #216]
  446168:	mov	x2, x0
  44616c:	mov	x4, x20
  446170:	mov	x3, x19
  446174:	mov	x0, x21
  446178:	mov	x1, x23
  44617c:	bl	443de0 <nftw@plt+0x41260>
  446180:	mov	w22, w0
  446184:	tbnz	w0, #31, 4466ac <nftw@plt+0x43b2c>
  446188:	mov	w8, #0x1                   	// #1
  44618c:	str	w8, [sp, #24]
  446190:	ldp	x3, x6, [sp, #200]
  446194:	add	x0, sp, #0x278
  446198:	ldr	x8, [sp, #352]
  44619c:	str	x8, [sp, #32]
  4461a0:	ldr	w8, [sp, #364]
  4461a4:	mov	x7, x28
  4461a8:	ldr	x1, [sp, #1216]
  4461ac:	mov	x5, x20
  4461b0:	mov	x4, x19
  4461b4:	stp	x1, x0, [sp]
  4461b8:	mov	w2, w22
  4461bc:	str	wzr, [sp, #16]
  4461c0:	mov	x1, x23
  4461c4:	str	w8, [sp, #40]
  4461c8:	mov	x0, x21
  4461cc:	bl	444f48 <nftw@plt+0x423c8>
  4461d0:	mov	w23, w0
  4461d4:	mov	x3, x20
  4461d8:	mov	x2, x19
  4461dc:	add	x1, sp, #0x260
  4461e0:	mov	x0, x21
  4461e4:	bl	4470d0 <nftw@plt+0x44550>
  4461e8:	tbnz	w23, #31, 446908 <nftw@plt+0x43d88>
  4461ec:	ldr	x23, [sp, #904]
  4461f0:	cbz	x23, 446370 <nftw@plt+0x437f0>
  4461f4:	ldr	x24, [sp, #896]
  4461f8:	ldr	x27, [sp, #936]
  4461fc:	adds	x3, x24, x23
  446200:	csel	x3, x3, xzr, pl  // pl = nfrst
  446204:	cbz	x27, 446224 <nftw@plt+0x436a4>
  446208:	ldr	x0, [sp, #928]
  44620c:	cbz	x24, 446380 <nftw@plt+0x43800>
  446210:	cmp	x24, x0
  446214:	b.gt	446380 <nftw@plt+0x43800>
  446218:	add	x0, x0, x27
  44621c:	cmp	x3, x0
  446220:	csel	x3, x3, x0, ge  // ge = tcont
  446224:	ldr	x28, [sp, #968]
  446228:	cbz	x28, 446248 <nftw@plt+0x436c8>
  44622c:	ldr	x0, [sp, #960]
  446230:	cbz	x24, 4463a0 <nftw@plt+0x43820>
  446234:	cmp	x24, x0
  446238:	b.gt	4463a0 <nftw@plt+0x43820>
  44623c:	add	x0, x0, x28
  446240:	cmp	x3, x0
  446244:	csel	x3, x3, x0, ge  // ge = tcont
  446248:	ldr	x13, [sp, #1000]
  44624c:	cbz	x13, 446268 <nftw@plt+0x436e8>
  446250:	ldr	x0, [sp, #992]
  446254:	cbnz	x24, 44670c <nftw@plt+0x43b8c>
  446258:	mov	x24, x0
  44625c:	add	x0, x0, x13
  446260:	cmp	x3, x0
  446264:	csel	x3, x3, x0, ge  // ge = tcont
  446268:	ldr	x12, [sp, #1032]
  44626c:	cbz	x12, 446288 <nftw@plt+0x43708>
  446270:	ldr	x0, [sp, #1024]
  446274:	cbnz	x24, 4466c8 <nftw@plt+0x43b48>
  446278:	mov	x24, x0
  44627c:	add	x0, x0, x12
  446280:	cmp	x3, x0
  446284:	csel	x3, x3, x0, ge  // ge = tcont
  446288:	ldr	x11, [sp, #1064]
  44628c:	cbz	x11, 4462a8 <nftw@plt+0x43728>
  446290:	ldr	x0, [sp, #1056]
  446294:	cbnz	x24, 4466d4 <nftw@plt+0x43b54>
  446298:	mov	x24, x0
  44629c:	add	x0, x0, x11
  4462a0:	cmp	x3, x0
  4462a4:	csel	x3, x3, x0, ge  // ge = tcont
  4462a8:	ldr	x10, [sp, #1096]
  4462ac:	cbz	x10, 4462c8 <nftw@plt+0x43748>
  4462b0:	ldr	x0, [sp, #1088]
  4462b4:	cbnz	x24, 4466e0 <nftw@plt+0x43b60>
  4462b8:	mov	x24, x0
  4462bc:	add	x0, x0, x10
  4462c0:	cmp	x3, x0
  4462c4:	csel	x3, x3, x0, ge  // ge = tcont
  4462c8:	ldr	x9, [sp, #1128]
  4462cc:	cbz	x9, 4462e8 <nftw@plt+0x43768>
  4462d0:	ldr	x0, [sp, #1120]
  4462d4:	cbnz	x24, 4466ec <nftw@plt+0x43b6c>
  4462d8:	mov	x24, x0
  4462dc:	add	x0, x0, x9
  4462e0:	cmp	x3, x0
  4462e4:	csel	x3, x3, x0, ge  // ge = tcont
  4462e8:	ldr	x8, [sp, #1160]
  4462ec:	cbz	x8, 446308 <nftw@plt+0x43788>
  4462f0:	ldr	x0, [sp, #1152]
  4462f4:	cbnz	x24, 4466f8 <nftw@plt+0x43b78>
  4462f8:	mov	x24, x0
  4462fc:	add	x0, x0, x8
  446300:	cmp	x3, x0
  446304:	csel	x3, x3, x0, ge  // ge = tcont
  446308:	ldr	x7, [sp, #1192]
  44630c:	cbz	x7, 44632c <nftw@plt+0x437ac>
  446310:	ldr	x0, [sp, #1184]
  446314:	cbz	x24, 446704 <nftw@plt+0x43b84>
  446318:	cmp	x0, x24
  44631c:	csel	x24, x24, x0, ge  // ge = tcont
  446320:	add	x0, x0, x7
  446324:	cmp	x3, x0
  446328:	csel	x3, x3, x0, ge  // ge = tcont
  44632c:	cmp	x24, #0x0
  446330:	ccmp	x3, #0x0, #0x4, ne  // ne = any
  446334:	b.ne	4463a8 <nftw@plt+0x43828>  // b.any
  446338:	mov	x2, x20
  44633c:	mov	x1, x19
  446340:	mov	w0, w26
  446344:	bl	443478 <nftw@plt+0x408f8>
  446348:	mov	w22, w0
  44634c:	cbnz	w0, 446368 <nftw@plt+0x437e8>
  446350:	cbz	w25, 444fc4 <nftw@plt+0x42444>
  446354:	mov	x23, #0x0                   	// #0
  446358:	mov	w27, #0x0                   	// #0
  44635c:	str	wzr, [sp, #224]
  446360:	str	wzr, [sp, #232]
  446364:	b	445684 <nftw@plt+0x42b04>
  446368:	mov	w23, #0x1                   	// #1
  44636c:	b	445000 <nftw@plt+0x42480>
  446370:	ldr	x27, [sp, #936]
  446374:	cbz	x27, 446388 <nftw@plt+0x43808>
  446378:	ldr	x0, [sp, #928]
  44637c:	mov	x3, #0x0                   	// #0
  446380:	mov	x24, x0
  446384:	b	446218 <nftw@plt+0x43698>
  446388:	ldr	x27, [sp, #968]
  44638c:	cbz	x27, 446b0c <nftw@plt+0x43f8c>
  446390:	ldr	x0, [sp, #960]
  446394:	mov	x28, x27
  446398:	mov	x3, #0x0                   	// #0
  44639c:	mov	x27, #0x0                   	// #0
  4463a0:	mov	x24, x0
  4463a4:	b	44623c <nftw@plt+0x436bc>
  4463a8:	add	x0, sp, #0x300
  4463ac:	sub	x3, x3, x24
  4463b0:	mov	x6, x0
  4463b4:	mov	x5, x20
  4463b8:	mov	x4, x19
  4463bc:	mov	x2, x24
  4463c0:	mov	w1, w26
  4463c4:	stp	x7, x13, [sp, #216]
  4463c8:	stp	x0, x12, [sp, #232]
  4463cc:	mov	x0, x21
  4463d0:	stp	x11, x10, [sp, #248]
  4463d4:	stp	x9, x8, [sp, #264]
  4463d8:	bl	447000 <nftw@plt+0x44480>
  4463dc:	mov	w22, w0
  4463e0:	cbz	w0, 446350 <nftw@plt+0x437d0>
  4463e4:	mov	x2, x20
  4463e8:	mov	x1, x19
  4463ec:	mov	w0, w26
  4463f0:	bl	443478 <nftw@plt+0x408f8>
  4463f4:	cbz	w0, 446958 <nftw@plt+0x43dd8>
  4463f8:	ldp	x7, x13, [sp, #216]
  4463fc:	ldp	x12, x11, [sp, #240]
  446400:	ldp	x10, x9, [sp, #256]
  446404:	ldr	x8, [sp, #272]
  446408:	ldr	x0, [sp, #768]
  44640c:	cbz	x23, 44694c <nftw@plt+0x43dcc>
  446410:	ldr	x1, [sp, #896]
  446414:	mov	w23, #0x1                   	// #1
  446418:	sub	x1, x1, x24
  44641c:	add	x1, x0, x1
  446420:	str	x1, [sp, #912]
  446424:	cbz	x27, 446900 <nftw@plt+0x43d80>
  446428:	ldr	x1, [sp, #928]
  44642c:	add	w23, w23, #0x1
  446430:	sub	x1, x1, x24
  446434:	add	x1, x0, x1
  446438:	str	x1, [sp, #944]
  44643c:	cbz	x28, 446b04 <nftw@plt+0x43f84>
  446440:	ldr	x1, [sp, #960]
  446444:	add	w23, w23, #0x1
  446448:	sub	x1, x1, x24
  44644c:	add	x1, x0, x1
  446450:	str	x1, [sp, #976]
  446454:	cbz	x13, 446aac <nftw@plt+0x43f2c>
  446458:	ldr	x1, [sp, #992]
  44645c:	add	w23, w23, #0x1
  446460:	sub	x1, x1, x24
  446464:	add	x1, x0, x1
  446468:	str	x1, [sp, #1008]
  44646c:	cbz	x12, 446ab4 <nftw@plt+0x43f34>
  446470:	ldr	x1, [sp, #1024]
  446474:	add	w23, w23, #0x1
  446478:	sub	x1, x1, x24
  44647c:	add	x1, x0, x1
  446480:	str	x1, [sp, #1040]
  446484:	cbnz	x11, 446a98 <nftw@plt+0x43f18>
  446488:	str	xzr, [sp, #1072]
  44648c:	cbnz	x10, 446a84 <nftw@plt+0x43f04>
  446490:	str	xzr, [sp, #1104]
  446494:	cbnz	x9, 4469a0 <nftw@plt+0x43e20>
  446498:	str	xzr, [sp, #1136]
  44649c:	cbnz	x8, 446af0 <nftw@plt+0x43f70>
  4464a0:	str	xzr, [sp, #1168]
  4464a4:	cbnz	x7, 446abc <nftw@plt+0x43f3c>
  4464a8:	str	xzr, [sp, #1200]
  4464ac:	ldr	x24, [sp, #304]
  4464b0:	mov	x26, #0x0                   	// #0
  4464b4:	str	w23, [sp, #224]
  4464b8:	mov	x23, x26
  4464bc:	mov	x27, x24
  4464c0:	add	x0, x24, #0xa0
  4464c4:	str	x0, [sp, #216]
  4464c8:	ldr	x0, [x27, #8]
  4464cc:	cbnz	x0, 446588 <nftw@plt+0x43a08>
  4464d0:	ldr	x28, [x27, #168]
  4464d4:	cbz	x28, 446588 <nftw@plt+0x43a08>
  4464d8:	cbz	x23, 446ad0 <nftw@plt+0x43f50>
  4464dc:	cmp	x28, #0xb
  4464e0:	b.ls	4469e0 <nftw@plt+0x43e60>  // b.plast
  4464e4:	ldr	x5, [x27, #176]
  4464e8:	mov	w1, #0x4c5a                	// #19546
  4464ec:	movk	w1, #0x4249, lsl #16
  4464f0:	ldr	w0, [x5]
  4464f4:	cmp	w0, w1
  4464f8:	b.ne	4469e0 <nftw@plt+0x43e60>  // b.any
  4464fc:	add	x1, x5, #0x4
  446500:	mov	x0, #0x0                   	// #0
  446504:	mov	x26, #0x0                   	// #0
  446508:	ldrb	w2, [x1, x0]
  44650c:	add	x0, x0, #0x1
  446510:	cmp	x0, #0x8
  446514:	orr	x26, x2, x26, lsl #8
  446518:	b.ne	446508 <nftw@plt+0x43988>  // b.any
  44651c:	mov	x3, x20
  446520:	mov	x2, x19
  446524:	mov	x1, x26
  446528:	mov	x0, x21
  44652c:	str	x5, [sp, #240]
  446530:	bl	442c10 <nftw@plt+0x40090>
  446534:	mov	x22, x0
  446538:	cbz	x0, 4469d4 <nftw@plt+0x43e54>
  44653c:	ldr	x5, [sp, #240]
  446540:	mov	x3, x0
  446544:	mov	x4, x26
  446548:	mov	x2, x23
  44654c:	add	x5, x5, #0xc
  446550:	sub	x1, x28, #0xc
  446554:	mov	x0, x5
  446558:	str	x5, [sp, #240]
  44655c:	bl	4440c0 <nftw@plt+0x41540>
  446560:	cbz	w0, 4469e0 <nftw@plt+0x43e60>
  446564:	ldr	x5, [sp, #240]
  446568:	sub	x0, x28, #0x10
  44656c:	mov	x2, x26
  446570:	mov	x1, x22
  446574:	add	x0, x5, x0
  446578:	bl	443530 <nftw@plt+0x409b0>
  44657c:	cbz	w0, 4469e0 <nftw@plt+0x43e60>
  446580:	stp	x26, x22, [x27, #8]
  446584:	str	wzr, [x27, #24]
  446588:	ldr	x0, [sp, #216]
  44658c:	add	x27, x27, #0x20
  446590:	cmp	x0, x27
  446594:	b.ne	4464c8 <nftw@plt+0x43948>  // b.any
  446598:	mov	x26, x23
  44659c:	mov	w0, #0x5                   	// #5
  4465a0:	ldr	w23, [sp, #224]
  4465a4:	str	w25, [sp, #216]
  4465a8:	str	w0, [sp, #224]
  4465ac:	ldr	x27, [x24, #8]
  4465b0:	cbz	x27, 4465ec <nftw@plt+0x43a6c>
  4465b4:	ldr	w0, [x24, #24]
  4465b8:	cbz	w0, 4465ec <nftw@plt+0x43a6c>
  4465bc:	cbz	x26, 4469b4 <nftw@plt+0x43e34>
  4465c0:	cmp	x27, #0x17
  4465c4:	b.ls	4465d8 <nftw@plt+0x43a58>  // b.plast
  4465c8:	ldr	x25, [x24, #16]
  4465cc:	ldr	w28, [x25]
  4465d0:	cmp	w28, #0x1
  4465d4:	b.eq	4469ec <nftw@plt+0x43e6c>  // b.none
  4465d8:	mov	x0, #0x0                   	// #0
  4465dc:	mov	x22, #0x0                   	// #0
  4465e0:	sub	w23, w23, #0x1
  4465e4:	stp	x0, x22, [x24, #8]
  4465e8:	str	wzr, [x24, #24]
  4465ec:	ldr	w0, [sp, #224]
  4465f0:	add	x24, x24, #0x20
  4465f4:	subs	w0, w0, #0x1
  4465f8:	str	w0, [sp, #224]
  4465fc:	b.ne	4465ac <nftw@plt+0x43a2c>  // b.any
  446600:	ldr	w25, [sp, #216]
  446604:	cbz	x26, 446620 <nftw@plt+0x43aa0>
  446608:	mov	x1, x26
  44660c:	mov	x4, x20
  446610:	mov	x3, x19
  446614:	mov	x0, x21
  446618:	mov	x2, #0x13b4                	// #5044
  44661c:	bl	442ad8 <nftw@plt+0x3ff58>
  446620:	cbz	w23, 446a58 <nftw@plt+0x43ed8>
  446624:	mov	w22, #0x1                   	// #1
  446628:	ldr	w0, [sp, #320]
  44662c:	add	x6, sp, #0x388
  446630:	ldr	x1, [sp, #200]
  446634:	cmp	w0, #0x2
  446638:	cset	w0, eq  // eq = none
  44663c:	ldp	x3, x2, [x6]
  446640:	ldp	x5, x4, [x6, #32]
  446644:	str	w0, [sp, #32]
  446648:	ldr	x0, [sp, #208]
  44664c:	str	x0, [sp, #64]
  446650:	ldr	x0, [sp, #632]
  446654:	str	x0, [sp, #40]
  446658:	ldr	x0, [sp, #1000]
  44665c:	str	x0, [sp, #8]
  446660:	ldr	x0, [sp, #1008]
  446664:	str	x0, [sp]
  446668:	ldr	x7, [sp, #968]
  44666c:	stp	x19, x20, [sp, #48]
  446670:	ldr	x6, [sp, #976]
  446674:	ldr	x0, [sp, #1032]
  446678:	str	x0, [sp, #24]
  44667c:	ldr	x0, [sp, #1040]
  446680:	str	x0, [sp, #16]
  446684:	ldr	x0, [sp, #1224]
  446688:	str	x0, [sp, #72]
  44668c:	mov	x0, x21
  446690:	bl	44ab70 <nftw@plt+0x47ff0>
  446694:	cbz	w0, 446a50 <nftw@plt+0x43ed0>
  446698:	ldr	x1, [sp, #1216]
  44669c:	mov	w0, #0x1                   	// #1
  4466a0:	mov	w23, w0
  4466a4:	str	w0, [x1]
  4466a8:	b	445000 <nftw@plt+0x42480>
  4466ac:	cbz	w27, 4461ec <nftw@plt+0x4366c>
  4466b0:	mov	x3, x20
  4466b4:	mov	x2, x19
  4466b8:	add	x1, sp, #0x260
  4466bc:	mov	x0, x21
  4466c0:	bl	4470d0 <nftw@plt+0x44550>
  4466c4:	b	4461ec <nftw@plt+0x4366c>
  4466c8:	cmp	x24, x0
  4466cc:	csel	x24, x24, x0, le
  4466d0:	b	44627c <nftw@plt+0x436fc>
  4466d4:	cmp	x24, x0
  4466d8:	csel	x24, x24, x0, le
  4466dc:	b	44629c <nftw@plt+0x4371c>
  4466e0:	cmp	x24, x0
  4466e4:	csel	x24, x24, x0, le
  4466e8:	b	4462bc <nftw@plt+0x4373c>
  4466ec:	cmp	x24, x0
  4466f0:	csel	x24, x24, x0, le
  4466f4:	b	4462dc <nftw@plt+0x4375c>
  4466f8:	cmp	x24, x0
  4466fc:	csel	x24, x24, x0, le
  446700:	b	4462fc <nftw@plt+0x4377c>
  446704:	mov	x24, x0
  446708:	b	446320 <nftw@plt+0x437a0>
  44670c:	cmp	x24, x0
  446710:	csel	x24, x24, x0, le
  446714:	b	44625c <nftw@plt+0x436dc>
  446718:	mov	x3, x20
  44671c:	mov	x2, x19
  446720:	add	x1, sp, #0x248
  446724:	mov	x0, x21
  446728:	bl	4470d0 <nftw@plt+0x44550>
  44672c:	b	446158 <nftw@plt+0x435d8>
  446730:	mov	w0, #0x1                   	// #1
  446734:	str	w0, [sp, #240]
  446738:	b	445564 <nftw@plt+0x429e4>
  44673c:	mov	w22, w0
  446740:	ldr	w0, [sp, #224]
  446744:	ldr	w26, [sp, #280]
  446748:	str	w28, [sp, #232]
  44674c:	str	w0, [sp, #240]
  446750:	ldr	x21, [sp, #272]
  446754:	ldp	x19, x20, [sp, #288]
  446758:	ldr	x23, [sp, #376]
  44675c:	b	445564 <nftw@plt+0x429e4>
  446760:	mov	w0, #0x1                   	// #1
  446764:	ldr	w26, [sp, #280]
  446768:	mov	w22, #0x0                   	// #0
  44676c:	str	w0, [sp, #224]
  446770:	str	w28, [sp, #232]
  446774:	str	w7, [sp, #240]
  446778:	ldr	x21, [sp, #272]
  44677c:	ldp	x19, x20, [sp, #288]
  446780:	ldr	x23, [sp, #376]
  446784:	b	445564 <nftw@plt+0x429e4>
  446788:	mov	x0, x21
  44678c:	mov	x3, x20
  446790:	mov	x2, x19
  446794:	add	x1, sp, #0x230
  446798:	bl	4470d0 <nftw@plt+0x44550>
  44679c:	ldr	w0, [sp, #232]
  4467a0:	cbz	w0, 446010 <nftw@plt+0x43490>
  4467a4:	b	445ffc <nftw@plt+0x4347c>
  4467a8:	ldr	x1, [sp, #248]
  4467ac:	mov	x3, x20
  4467b0:	mov	x2, x19
  4467b4:	mov	x0, x21
  4467b8:	str	xzr, [sp, #352]
  4467bc:	mov	w27, #0x0                   	// #0
  4467c0:	bl	4470d0 <nftw@plt+0x44550>
  4467c4:	mov	w25, #0x0                   	// #0
  4467c8:	ldr	x1, [sp, #256]
  4467cc:	mov	x3, x20
  4467d0:	mov	x2, x19
  4467d4:	mov	x0, x21
  4467d8:	str	xzr, [sp, #336]
  4467dc:	bl	4470d0 <nftw@plt+0x44550>
  4467e0:	str	wzr, [sp, #232]
  4467e4:	str	wzr, [sp, #364]
  4467e8:	b	446150 <nftw@plt+0x435d0>
  4467ec:	mov	w23, #0xffffffff            	// #-1
  4467f0:	b	445000 <nftw@plt+0x42480>
  4467f4:	mov	w25, #0x1                   	// #1
  4467f8:	str	x22, [x1]
  4467fc:	b	445e74 <nftw@plt+0x432f4>
  446800:	mov	x0, x1
  446804:	b	44680c <nftw@plt+0x43c8c>
  446808:	mov	x0, x2
  44680c:	ldar	x2, [x0]
  446810:	cbnz	x2, 446808 <nftw@plt+0x43c88>
  446814:	ldxr	x2, [x0]
  446818:	cbnz	x2, 446824 <nftw@plt+0x43ca4>
  44681c:	stlxr	w3, x22, [x0]
  446820:	cbnz	w3, 446814 <nftw@plt+0x43c94>
  446824:	dmb	ish
  446828:	cmp	x2, #0x0
  44682c:	b.ne	446800 <nftw@plt+0x43c80>  // b.any
  446830:	mov	w25, #0x1                   	// #1
  446834:	b	445e74 <nftw@plt+0x432f4>
  446838:	stp	x5, x8, [sp, #200]
  44683c:	mov	x0, x20
  446840:	mov	w2, #0x0                   	// #0
  446844:	adrp	x1, 47f000 <_obstack_memory_used@@Base+0x1dbb8>
  446848:	add	x1, x1, #0x1c8
  44684c:	blr	x19
  446850:	ldp	x5, x8, [sp, #200]
  446854:	mov	x4, x20
  446858:	mov	x3, x19
  44685c:	mov	x0, x21
  446860:	mov	x2, x8
  446864:	mov	x1, x5
  446868:	bl	442ad8 <nftw@plt+0x3ff58>
  44686c:	mov	x1, x22
  446870:	mov	x4, x20
  446874:	mov	x3, x19
  446878:	mov	x0, x21
  44687c:	mov	x2, #0x18                  	// #24
  446880:	mov	w22, #0x1                   	// #1
  446884:	bl	442ad8 <nftw@plt+0x3ff58>
  446888:	str	w22, [sp, #240]
  44688c:	b	445564 <nftw@plt+0x429e4>
  446890:	mov	x2, #0x0                   	// #0
  446894:	mov	w1, #0x0                   	// #0
  446898:	ldrb	w0, [x11, #4]
  44689c:	add	x2, x2, #0x1
  4468a0:	and	w0, w0, #0xf
  4468a4:	sub	w0, w0, #0x1
  4468a8:	cmp	w0, #0x1
  4468ac:	b.hi	4468f0 <nftw@plt+0x43d70>  // b.pmore
  4468b0:	ldrh	w0, [x11, #6]
  4468b4:	umull	x9, w1, w7
  4468b8:	add	x3, x5, x9
  4468bc:	cbz	w0, 4468f0 <nftw@plt+0x43d70>
  4468c0:	ldr	w0, [x11]
  4468c4:	add	w1, w1, #0x1
  4468c8:	add	x10, x4, x0
  4468cc:	cmp	x6, x0
  4468d0:	b.ls	446838 <nftw@plt+0x43cb8>  // b.plast
  4468d4:	ldr	x0, [x11, #8]
  4468d8:	str	x10, [x5, x9]
  4468dc:	ldr	x9, [sp, #200]
  4468e0:	add	x0, x0, x9
  4468e4:	str	x0, [x3, #8]
  4468e8:	ldr	x0, [x11, #16]
  4468ec:	str	x0, [x3, #16]
  4468f0:	add	x11, x11, #0x18
  4468f4:	cmp	x2, x12
  4468f8:	b.cc	446898 <nftw@plt+0x43d18>  // b.lo, b.ul, b.last
  4468fc:	b	445e0c <nftw@plt+0x4328c>
  446900:	str	xzr, [sp, #944]
  446904:	b	44643c <nftw@plt+0x438bc>
  446908:	mov	x2, x20
  44690c:	mov	x1, x19
  446910:	b	446064 <nftw@plt+0x434e4>
  446914:	bl	402aa0 <__errno_location@plt>
  446918:	mov	x2, x0
  44691c:	adrp	x1, 47f000 <_obstack_memory_used@@Base+0x1dbb8>
  446920:	mov	x0, x20
  446924:	add	x1, x1, #0x218
  446928:	ldr	w2, [x2]
  44692c:	blr	x19
  446930:	b	446140 <nftw@plt+0x435c0>
  446934:	mov	x3, x20
  446938:	mov	x2, x19
  44693c:	add	x1, sp, #0x260
  446940:	mov	x0, x21
  446944:	bl	4470d0 <nftw@plt+0x44550>
  446948:	b	446014 <nftw@plt+0x43494>
  44694c:	mov	w23, #0x0                   	// #0
  446950:	str	xzr, [sp, #912]
  446954:	b	446424 <nftw@plt+0x438a4>
  446958:	mov	w22, #0x1                   	// #1
  44695c:	b	446350 <nftw@plt+0x437d0>
  446960:	ldrh	w2, [x0, #78]
  446964:	cbz	w2, 445bd0 <nftw@plt+0x43050>
  446968:	add	x25, x25, #0x1
  44696c:	b	445bd0 <nftw@plt+0x43050>
  446970:	ldrh	w2, [x0, #54]
  446974:	cbz	w2, 445bb0 <nftw@plt+0x43030>
  446978:	add	x25, x25, #0x1
  44697c:	b	445bb0 <nftw@plt+0x43030>
  446980:	ldrh	w2, [x0, #30]
  446984:	cbz	w2, 445b90 <nftw@plt+0x43010>
  446988:	add	x25, x25, #0x1
  44698c:	b	445b90 <nftw@plt+0x43010>
  446990:	ldrh	w2, [x0, #6]
  446994:	cbz	w2, 445b70 <nftw@plt+0x42ff0>
  446998:	add	x25, x25, #0x1
  44699c:	b	445b70 <nftw@plt+0x42ff0>
  4469a0:	ldr	x1, [sp, #1120]
  4469a4:	sub	x1, x1, x24
  4469a8:	add	x1, x0, x1
  4469ac:	str	x1, [sp, #1136]
  4469b0:	b	44649c <nftw@plt+0x4391c>
  4469b4:	mov	x3, x20
  4469b8:	mov	x2, x19
  4469bc:	mov	x0, x21
  4469c0:	mov	x1, #0x13b4                	// #5044
  4469c4:	bl	442c10 <nftw@plt+0x40090>
  4469c8:	mov	x26, x0
  4469cc:	cbnz	x0, 4465c0 <nftw@plt+0x43a40>
  4469d0:	ldr	w25, [sp, #216]
  4469d4:	mov	w22, #0x1                   	// #1
  4469d8:	mov	w26, #0xffffffff            	// #-1
  4469dc:	b	446350 <nftw@plt+0x437d0>
  4469e0:	mov	x26, #0x0                   	// #0
  4469e4:	mov	x22, #0x0                   	// #0
  4469e8:	b	446580 <nftw@plt+0x43a00>
  4469ec:	ldr	x1, [x25, #8]
  4469f0:	mov	x3, x20
  4469f4:	mov	x2, x19
  4469f8:	mov	x0, x21
  4469fc:	bl	442c10 <nftw@plt+0x40090>
  446a00:	mov	x22, x0
  446a04:	cbz	x0, 446a74 <nftw@plt+0x43ef4>
  446a08:	ldr	x4, [x25, #8]
  446a0c:	add	x28, x25, #0x18
  446a10:	mov	x0, x28
  446a14:	mov	x3, x22
  446a18:	mov	x2, x26
  446a1c:	sub	x1, x27, #0x18
  446a20:	str	x4, [sp, #240]
  446a24:	bl	4440c0 <nftw@plt+0x41540>
  446a28:	cbz	w0, 4465d8 <nftw@plt+0x43a58>
  446a2c:	ldr	x4, [sp, #240]
  446a30:	sub	x0, x27, #0x1c
  446a34:	add	x0, x28, x0
  446a38:	mov	x1, x22
  446a3c:	mov	x2, x4
  446a40:	bl	443530 <nftw@plt+0x409b0>
  446a44:	cbz	w0, 4465d8 <nftw@plt+0x43a58>
  446a48:	ldr	x0, [x25, #8]
  446a4c:	b	4465e0 <nftw@plt+0x43a60>
  446a50:	mov	w26, #0xffffffff            	// #-1
  446a54:	b	446350 <nftw@plt+0x437d0>
  446a58:	ldr	x1, [sp, #232]
  446a5c:	mov	x3, x20
  446a60:	mov	x2, x19
  446a64:	mov	x0, x21
  446a68:	mov	w22, #0x0                   	// #0
  446a6c:	bl	4470d0 <nftw@plt+0x44550>
  446a70:	b	446628 <nftw@plt+0x43aa8>
  446a74:	ldr	w25, [sp, #216]
  446a78:	mov	w22, w28
  446a7c:	mov	w26, #0xffffffff            	// #-1
  446a80:	b	446350 <nftw@plt+0x437d0>
  446a84:	ldr	x1, [sp, #1088]
  446a88:	sub	x1, x1, x24
  446a8c:	add	x1, x0, x1
  446a90:	str	x1, [sp, #1104]
  446a94:	b	446494 <nftw@plt+0x43914>
  446a98:	ldr	x1, [sp, #1056]
  446a9c:	sub	x1, x1, x24
  446aa0:	add	x1, x0, x1
  446aa4:	str	x1, [sp, #1072]
  446aa8:	b	44648c <nftw@plt+0x4390c>
  446aac:	str	xzr, [sp, #1008]
  446ab0:	b	44646c <nftw@plt+0x438ec>
  446ab4:	str	xzr, [sp, #1040]
  446ab8:	b	446484 <nftw@plt+0x43904>
  446abc:	ldr	x1, [sp, #1184]
  446ac0:	sub	x24, x1, x24
  446ac4:	add	x0, x0, x24
  446ac8:	str	x0, [sp, #1200]
  446acc:	b	4464ac <nftw@plt+0x4392c>
  446ad0:	mov	x3, x20
  446ad4:	mov	x2, x19
  446ad8:	mov	x0, x21
  446adc:	mov	x1, #0x13b4                	// #5044
  446ae0:	bl	442c10 <nftw@plt+0x40090>
  446ae4:	mov	x23, x0
  446ae8:	cbnz	x0, 4464dc <nftw@plt+0x4395c>
  446aec:	b	4469d4 <nftw@plt+0x43e54>
  446af0:	ldr	x1, [sp, #1152]
  446af4:	sub	x1, x1, x24
  446af8:	add	x1, x0, x1
  446afc:	str	x1, [sp, #1168]
  446b00:	b	4464a4 <nftw@plt+0x43924>
  446b04:	str	xzr, [sp, #976]
  446b08:	b	446454 <nftw@plt+0x438d4>
  446b0c:	mov	x28, #0x0                   	// #0
  446b10:	mov	x3, #0x0                   	// #0
  446b14:	mov	x24, #0x0                   	// #0
  446b18:	b	446248 <nftw@plt+0x436c8>
  446b1c:	mov	x3, x20
  446b20:	mov	x2, x19
  446b24:	mov	x0, x21
  446b28:	mov	x1, #0x0                   	// #0
  446b2c:	bl	442c10 <nftw@plt+0x40090>
  446b30:	mov	x5, x0
  446b34:	cbz	x0, 44686c <nftw@plt+0x43cec>
  446b38:	mov	x25, #0x0                   	// #0
  446b3c:	b	445e0c <nftw@plt+0x4328c>
  446b40:	mov	w22, #0x1                   	// #1
  446b44:	str	w22, [sp, #240]
  446b48:	b	445564 <nftw@plt+0x429e4>
  446b4c:	ldrh	w2, [x0, #174]
  446b50:	cbz	w2, 445c50 <nftw@plt+0x430d0>
  446b54:	add	x25, x25, #0x1
  446b58:	b	445c50 <nftw@plt+0x430d0>
  446b5c:	ldrh	w2, [x0, #150]
  446b60:	cbz	w2, 445c30 <nftw@plt+0x430b0>
  446b64:	add	x25, x25, #0x1
  446b68:	b	445c30 <nftw@plt+0x430b0>
  446b6c:	ldrh	w2, [x0, #126]
  446b70:	cbz	w2, 445c10 <nftw@plt+0x43090>
  446b74:	add	x25, x25, #0x1
  446b78:	b	445c10 <nftw@plt+0x43090>
  446b7c:	ldrh	w2, [x0, #102]
  446b80:	cbz	w2, 445bf0 <nftw@plt+0x43070>
  446b84:	add	x25, x25, #0x1
  446b88:	b	445bf0 <nftw@plt+0x43070>
  446b8c:	mov	x0, x11
  446b90:	mov	x1, #0x0                   	// #0
  446b94:	mov	x25, #0x0                   	// #0
  446b98:	b	445b5c <nftw@plt+0x42fdc>
  446b9c:	ldrh	w0, [x0, #6]
  446ba0:	cbz	w0, 445d34 <nftw@plt+0x431b4>
  446ba4:	add	x25, x25, #0x1
  446ba8:	b	445d34 <nftw@plt+0x431b4>
  446bac:	ldrh	w2, [x0, #318]
  446bb0:	cbz	w2, 445d10 <nftw@plt+0x43190>
  446bb4:	add	x25, x25, #0x1
  446bb8:	b	445d10 <nftw@plt+0x43190>
  446bbc:	ldrh	w2, [x0, #294]
  446bc0:	cbz	w2, 445cf0 <nftw@plt+0x43170>
  446bc4:	add	x25, x25, #0x1
  446bc8:	b	445cf0 <nftw@plt+0x43170>
  446bcc:	ldrh	w2, [x0, #270]
  446bd0:	cbz	w2, 445cd0 <nftw@plt+0x43150>
  446bd4:	add	x25, x25, #0x1
  446bd8:	b	445cd0 <nftw@plt+0x43150>
  446bdc:	ldrh	w2, [x0, #246]
  446be0:	cbz	w2, 445cb0 <nftw@plt+0x43130>
  446be4:	add	x25, x25, #0x1
  446be8:	b	445cb0 <nftw@plt+0x43130>
  446bec:	ldrh	w2, [x0, #222]
  446bf0:	cbz	w2, 445c90 <nftw@plt+0x43110>
  446bf4:	add	x25, x25, #0x1
  446bf8:	b	445c90 <nftw@plt+0x43110>
  446bfc:	ldrh	w2, [x0, #198]
  446c00:	cbz	w2, 445c70 <nftw@plt+0x430f0>
  446c04:	add	x25, x25, #0x1
  446c08:	b	445c70 <nftw@plt+0x430f0>
  446c0c:	nop
  446c10:	sub	sp, sp, #0x70
  446c14:	stp	x29, x30, [sp, #48]
  446c18:	add	x29, sp, #0x30
  446c1c:	ldr	w6, [x2, #56]
  446c20:	str	x21, [sp, #80]
  446c24:	ldr	x21, [x0, #8]
  446c28:	stp	x19, x20, [sp, #64]
  446c2c:	cmn	w6, #0x1
  446c30:	mov	x20, x0
  446c34:	mov	x19, x2
  446c38:	cbz	x21, 446c44 <nftw@plt+0x440c4>
  446c3c:	ldrb	w0, [x21]
  446c40:	cbnz	w0, 446cd0 <nftw@plt+0x44150>
  446c44:	b.eq	446cb8 <nftw@plt+0x44138>  // b.none
  446c48:	ldr	x21, [x19, #48]
  446c4c:	mov	w0, #0xffffffff            	// #-1
  446c50:	str	w0, [x19, #56]
  446c54:	add	x1, sp, #0x64
  446c58:	mov	w2, w6
  446c5c:	ldr	x0, [x19]
  446c60:	add	x6, sp, #0x68
  446c64:	ldr	x3, [x20]
  446c68:	str	x1, [sp]
  446c6c:	mov	x1, x21
  446c70:	ldr	x4, [x19, #8]
  446c74:	str	xzr, [sp, #8]
  446c78:	ldr	x5, [x19, #16]
  446c7c:	str	wzr, [sp, #16]
  446c80:	ldr	x7, [x19, #32]
  446c84:	str	wzr, [sp, #24]
  446c88:	str	xzr, [sp, #32]
  446c8c:	str	wzr, [sp, #40]
  446c90:	bl	444f48 <nftw@plt+0x423c8>
  446c94:	cbz	w0, 446cb8 <nftw@plt+0x44138>
  446c98:	ldr	w0, [sp, #100]
  446c9c:	cbz	w0, 446cb8 <nftw@plt+0x44138>
  446ca0:	ldr	x1, [x19, #40]
  446ca4:	mov	w2, #0x1                   	// #1
  446ca8:	ldr	x0, [x19, #24]
  446cac:	str	w2, [x1]
  446cb0:	ldr	x1, [sp, #104]
  446cb4:	str	x1, [x0]
  446cb8:	mov	w0, #0x0                   	// #0
  446cbc:	ldp	x29, x30, [sp, #48]
  446cc0:	ldp	x19, x20, [sp, #64]
  446cc4:	ldr	x21, [sp, #80]
  446cc8:	add	sp, sp, #0x70
  446ccc:	ret
  446cd0:	ldp	x1, x2, [x2, #8]
  446cd4:	b.ne	446cf0 <nftw@plt+0x44170>  // b.any
  446cd8:	add	x3, sp, #0x60
  446cdc:	mov	x0, x21
  446ce0:	bl	4433c8 <nftw@plt+0x40848>
  446ce4:	mov	w6, w0
  446ce8:	tbz	w0, #31, 446c54 <nftw@plt+0x440d4>
  446cec:	b	446cb8 <nftw@plt+0x44138>
  446cf0:	mov	w0, w6
  446cf4:	bl	443478 <nftw@plt+0x408f8>
  446cf8:	ldp	x1, x2, [x19, #8]
  446cfc:	mov	w0, #0xffffffff            	// #-1
  446d00:	ldr	x21, [x20, #8]
  446d04:	str	w0, [x19, #56]
  446d08:	add	x3, sp, #0x60
  446d0c:	mov	x0, x21
  446d10:	bl	4433c8 <nftw@plt+0x40848>
  446d14:	mov	w6, w0
  446d18:	tbz	w0, #31, 446c54 <nftw@plt+0x440d4>
  446d1c:	b	446cb8 <nftw@plt+0x44138>
  446d20:	stp	x29, x30, [sp, #-96]!
  446d24:	mov	x29, sp
  446d28:	stp	x25, x26, [sp, #64]
  446d2c:	mov	x26, x3
  446d30:	mov	x3, x4
  446d34:	stp	x19, x20, [sp, #16]
  446d38:	mov	x19, x1
  446d3c:	mov	x1, #0x13b4                	// #5044
  446d40:	stp	x21, x22, [sp, #32]
  446d44:	mov	x21, x2
  446d48:	mov	x22, x0
  446d4c:	mov	x2, x26
  446d50:	stp	x23, x24, [sp, #48]
  446d54:	mov	x24, x5
  446d58:	mov	x23, x6
  446d5c:	stp	x27, x28, [sp, #80]
  446d60:	mov	x27, x4
  446d64:	bl	442c10 <nftw@plt+0x40090>
  446d68:	cbz	x0, 446e70 <nftw@plt+0x442f0>
  446d6c:	str	xzr, [x24]
  446d70:	mov	x25, x0
  446d74:	str	xzr, [x23]
  446d78:	cmp	x21, #0xb
  446d7c:	b.ls	446e34 <nftw@plt+0x442b4>  // b.plast
  446d80:	ldr	w1, [x19]
  446d84:	mov	w0, #0x4c5a                	// #19546
  446d88:	movk	w0, #0x4249, lsl #16
  446d8c:	cmp	w1, w0
  446d90:	b.ne	446e34 <nftw@plt+0x442b4>  // b.any
  446d94:	ldrb	w4, [x19, #5]
  446d98:	mov	x3, x27
  446d9c:	ldrb	w20, [x19, #4]
  446da0:	mov	x2, x26
  446da4:	ldrb	w1, [x19, #6]
  446da8:	mov	x0, x22
  446dac:	ldrb	w7, [x19, #7]
  446db0:	orr	x20, x4, x20, lsl #8
  446db4:	ldrb	w6, [x19, #8]
  446db8:	ldrb	w5, [x19, #9]
  446dbc:	orr	x20, x1, x20, lsl #8
  446dc0:	ldrb	w1, [x19, #10]
  446dc4:	ldrb	w4, [x19, #11]
  446dc8:	orr	x20, x7, x20, lsl #8
  446dcc:	orr	x20, x6, x20, lsl #8
  446dd0:	orr	x20, x5, x20, lsl #8
  446dd4:	orr	x20, x1, x20, lsl #8
  446dd8:	orr	x20, x4, x20, lsl #8
  446ddc:	mov	x1, x20
  446de0:	bl	442c10 <nftw@plt+0x40090>
  446de4:	mov	x28, x0
  446de8:	cbz	x0, 446e78 <nftw@plt+0x442f8>
  446dec:	add	x19, x19, #0xc
  446df0:	mov	x4, x20
  446df4:	mov	x0, x19
  446df8:	mov	x3, x28
  446dfc:	mov	x2, x25
  446e00:	sub	x1, x21, #0xc
  446e04:	bl	4440c0 <nftw@plt+0x41540>
  446e08:	cbz	w0, 446e34 <nftw@plt+0x442b4>
  446e0c:	sub	x21, x21, #0x10
  446e10:	mov	x2, x20
  446e14:	add	x0, x19, x21
  446e18:	mov	x1, x28
  446e1c:	bl	443530 <nftw@plt+0x409b0>
  446e20:	cbz	w0, 446e34 <nftw@plt+0x442b4>
  446e24:	str	x28, [x24]
  446e28:	mov	w19, #0x1                   	// #1
  446e2c:	str	x20, [x23]
  446e30:	b	446e38 <nftw@plt+0x442b8>
  446e34:	mov	w19, #0x1                   	// #1
  446e38:	mov	x4, x27
  446e3c:	mov	x3, x26
  446e40:	mov	x1, x25
  446e44:	mov	x0, x22
  446e48:	mov	x2, #0x13b4                	// #5044
  446e4c:	bl	442ad8 <nftw@plt+0x3ff58>
  446e50:	mov	w0, w19
  446e54:	ldp	x19, x20, [sp, #16]
  446e58:	ldp	x21, x22, [sp, #32]
  446e5c:	ldp	x23, x24, [sp, #48]
  446e60:	ldp	x25, x26, [sp, #64]
  446e64:	ldp	x27, x28, [sp, #80]
  446e68:	ldp	x29, x30, [sp], #96
  446e6c:	ret
  446e70:	mov	w19, #0x0                   	// #0
  446e74:	b	446e50 <nftw@plt+0x442d0>
  446e78:	mov	w19, #0x0                   	// #0
  446e7c:	b	446e38 <nftw@plt+0x442b8>
  446e80:	sub	sp, sp, #0xe0
  446e84:	mov	w6, #0x1                   	// #1
  446e88:	stp	x29, x30, [sp, #48]
  446e8c:	add	x29, sp, #0x30
  446e90:	stp	x23, x24, [sp, #96]
  446e94:	adrp	x24, 443000 <nftw@plt+0x40480>
  446e98:	add	x8, x24, #0x4d0
  446e9c:	str	w6, [sp, #16]
  446ea0:	mov	x23, x5
  446ea4:	str	wzr, [sp, #24]
  446ea8:	mov	x5, x4
  446eac:	str	xzr, [sp, #32]
  446eb0:	str	wzr, [sp, #40]
  446eb4:	stp	x27, x28, [sp, #128]
  446eb8:	add	x28, sp, #0x94
  446ebc:	add	x27, sp, #0x98
  446ec0:	stp	x28, xzr, [sp]
  446ec4:	mov	x6, x27
  446ec8:	stp	x25, x26, [sp, #112]
  446ecc:	add	x26, sp, #0x90
  446ed0:	mov	x25, x1
  446ed4:	mov	x7, x26
  446ed8:	stp	x19, x20, [sp, #64]
  446edc:	mov	x19, x0
  446ee0:	mov	w20, w2
  446ee4:	stp	x21, x22, [sp, #80]
  446ee8:	mov	x22, x3
  446eec:	mov	x21, x4
  446ef0:	mov	x4, x3
  446ef4:	mov	x3, #0x0                   	// #0
  446ef8:	str	x8, [sp, #152]
  446efc:	bl	444f48 <nftw@plt+0x423c8>
  446f00:	cbz	w0, 446f6c <nftw@plt+0x443ec>
  446f04:	cmp	w0, #0x0
  446f08:	add	x1, sp, #0xa0
  446f0c:	csinv	w20, w20, wzr, lt  // lt = tstop
  446f10:	adrp	x0, 446000 <nftw@plt+0x43480>
  446f14:	add	x0, x0, #0xc10
  446f18:	stp	x19, x22, [sp, #160]
  446f1c:	stp	x21, x27, [sp, #176]
  446f20:	stp	x26, x28, [sp, #192]
  446f24:	str	x25, [sp, #208]
  446f28:	str	w20, [sp, #216]
  446f2c:	bl	4028e0 <dl_iterate_phdr@plt>
  446f30:	ldr	w0, [x19, #8]
  446f34:	cbnz	w0, 446f8c <nftw@plt+0x4440c>
  446f38:	ldr	w0, [sp, #144]
  446f3c:	cbnz	w0, 446fbc <nftw@plt+0x4443c>
  446f40:	ldr	x0, [x19, #40]
  446f44:	cbz	x0, 446fec <nftw@plt+0x4446c>
  446f48:	ldr	x0, [x19, #24]
  446f4c:	str	x0, [x23]
  446f50:	cmp	x0, #0x0
  446f54:	add	x24, x24, #0x4d0
  446f58:	ccmp	x0, x24, #0x4, ne  // ne = any
  446f5c:	mov	w0, #0x1                   	// #1
  446f60:	b.ne	446f6c <nftw@plt+0x443ec>  // b.any
  446f64:	ldr	x1, [sp, #152]
  446f68:	str	x1, [x23]
  446f6c:	ldp	x29, x30, [sp, #48]
  446f70:	ldp	x19, x20, [sp, #64]
  446f74:	ldp	x21, x22, [sp, #80]
  446f78:	ldp	x23, x24, [sp, #96]
  446f7c:	ldp	x25, x26, [sp, #112]
  446f80:	ldp	x27, x28, [sp, #128]
  446f84:	add	sp, sp, #0xe0
  446f88:	ret
  446f8c:	ldr	w1, [sp, #144]
  446f90:	add	x0, x19, #0x28
  446f94:	cbz	w1, 446fcc <nftw@plt+0x4444c>
  446f98:	adrp	x1, 443000 <nftw@plt+0x40480>
  446f9c:	add	x1, x1, #0xbd8
  446fa0:	stlr	x1, [x0]
  446fa4:	ldr	w0, [x19, #8]
  446fa8:	cbz	w0, 446f48 <nftw@plt+0x443c8>
  446fac:	add	x19, x19, #0x18
  446fb0:	ldar	x0, [x19]
  446fb4:	str	x0, [x23]
  446fb8:	b	446f50 <nftw@plt+0x443d0>
  446fbc:	adrp	x0, 443000 <nftw@plt+0x40480>
  446fc0:	add	x0, x0, #0xbd8
  446fc4:	str	x0, [x19, #40]
  446fc8:	b	446f48 <nftw@plt+0x443c8>
  446fcc:	adrp	x1, 443000 <nftw@plt+0x40480>
  446fd0:	add	x1, x1, #0x4f8
  446fd4:	ldxr	x2, [x0]
  446fd8:	cbnz	x2, 446fe4 <nftw@plt+0x44464>
  446fdc:	stlxr	w3, x1, [x0]
  446fe0:	cbnz	w3, 446fd4 <nftw@plt+0x44454>
  446fe4:	dmb	ish
  446fe8:	b	446fa4 <nftw@plt+0x44424>
  446fec:	adrp	x0, 443000 <nftw@plt+0x40480>
  446ff0:	add	x0, x0, #0x4f8
  446ff4:	str	x0, [x19, #40]
  446ff8:	b	446f48 <nftw@plt+0x443c8>
  446ffc:	nop
  447000:	stp	x29, x30, [sp, #-64]!
  447004:	mov	x29, sp
  447008:	stp	x19, x20, [sp, #16]
  44700c:	mov	x19, x3
  447010:	mov	x20, x4
  447014:	stp	x21, x22, [sp, #32]
  447018:	mov	x22, x2
  44701c:	mov	x21, x5
  447020:	stp	x23, x24, [sp, #48]
  447024:	mov	w24, w1
  447028:	mov	x23, x6
  44702c:	bl	402760 <getpagesize@plt>
  447030:	sxtw	x7, w0
  447034:	sub	x8, x19, #0x1
  447038:	neg	x1, x7
  44703c:	mov	w4, w24
  447040:	mov	w3, #0x2                   	// #2
  447044:	udiv	x19, x22, x7
  447048:	mov	w2, #0x1                   	// #1
  44704c:	mov	x0, #0x0                   	// #0
  447050:	msub	w19, w19, w7, w22
  447054:	add	x7, x7, x19
  447058:	sub	x5, x22, x19
  44705c:	add	x7, x8, x7
  447060:	and	x22, x1, x7
  447064:	mov	x1, x22
  447068:	bl	4028b0 <mmap@plt>
  44706c:	cmn	x0, #0x1
  447070:	b.eq	44709c <nftw@plt+0x4451c>  // b.none
  447074:	mov	x2, x0
  447078:	add	x19, x0, x19
  44707c:	stp	x19, x2, [x23]
  447080:	mov	w0, #0x1                   	// #1
  447084:	str	x22, [x23, #16]
  447088:	ldp	x19, x20, [sp, #16]
  44708c:	ldp	x21, x22, [sp, #32]
  447090:	ldp	x23, x24, [sp, #48]
  447094:	ldp	x29, x30, [sp], #64
  447098:	ret
  44709c:	bl	402aa0 <__errno_location@plt>
  4470a0:	mov	x2, x0
  4470a4:	adrp	x1, 47e000 <_obstack_memory_used@@Base+0x1cbb8>
  4470a8:	mov	x0, x21
  4470ac:	add	x1, x1, #0xee0
  4470b0:	ldr	w2, [x2]
  4470b4:	blr	x20
  4470b8:	mov	w0, #0x0                   	// #0
  4470bc:	ldp	x19, x20, [sp, #16]
  4470c0:	ldp	x21, x22, [sp, #32]
  4470c4:	ldp	x23, x24, [sp, #48]
  4470c8:	ldp	x29, x30, [sp], #64
  4470cc:	ret
  4470d0:	stp	x29, x30, [sp, #-32]!
  4470d4:	mov	x29, sp
  4470d8:	ldp	x0, x1, [x1, #8]
  4470dc:	stp	x19, x20, [sp, #16]
  4470e0:	mov	x19, x2
  4470e4:	mov	x20, x3
  4470e8:	bl	402970 <munmap@plt>
  4470ec:	tbnz	w0, #31, 4470fc <nftw@plt+0x4457c>
  4470f0:	ldp	x19, x20, [sp, #16]
  4470f4:	ldp	x29, x30, [sp], #32
  4470f8:	ret
  4470fc:	bl	402aa0 <__errno_location@plt>
  447100:	mov	x2, x0
  447104:	mov	x16, x19
  447108:	mov	x0, x20
  44710c:	ldp	x19, x20, [sp, #16]
  447110:	adrp	x1, 47f000 <_obstack_memory_used@@Base+0x1dbb8>
  447114:	ldp	x29, x30, [sp], #32
  447118:	add	x1, x1, #0xb10
  44711c:	ldr	w2, [x2]
  447120:	br	x16
  447124:	nop
  447128:	ldr	x2, [x0]
  44712c:	mov	w3, #0xffffffff            	// #-1
  447130:	ldr	x1, [x1]
  447134:	cmp	x2, x1
  447138:	cset	w0, hi  // hi = pmore
  44713c:	csel	w0, w0, w3, cs  // cs = hs, nlast
  447140:	ret
  447144:	nop
  447148:	mov	x2, x0
  44714c:	ldr	x0, [x1]
  447150:	ldr	x3, [x2]
  447154:	cmp	x3, x0
  447158:	b.cc	44719c <nftw@plt+0x4461c>  // b.lo, b.ul, b.last
  44715c:	mov	w0, #0x1                   	// #1
  447160:	b.hi	447198 <nftw@plt+0x44618>  // b.pmore
  447164:	ldr	x3, [x1, #8]
  447168:	ldr	x4, [x2, #8]
  44716c:	cmp	x4, x3
  447170:	b.cc	447198 <nftw@plt+0x44618>  // b.lo, b.ul, b.last
  447174:	mov	w0, #0xffffffff            	// #-1
  447178:	b.hi	447198 <nftw@plt+0x44618>  // b.pmore
  44717c:	ldr	x1, [x1, #16]
  447180:	ldr	x2, [x2, #16]
  447184:	ldr	x1, [x1, #56]
  447188:	ldr	x2, [x2, #56]
  44718c:	cmp	x2, x1
  447190:	cset	w3, gt
  447194:	csel	w0, w3, w0, ge  // ge = tcont
  447198:	ret
  44719c:	mov	w0, #0xffffffff            	// #-1
  4471a0:	ret
  4471a4:	nop
  4471a8:	mov	x2, x0
  4471ac:	ldr	x0, [x1]
  4471b0:	ldr	x3, [x2]
  4471b4:	cmp	x3, x0
  4471b8:	b.cc	4471e0 <nftw@plt+0x44660>  // b.lo, b.ul, b.last
  4471bc:	mov	w0, #0x1                   	// #1
  4471c0:	b.hi	4471dc <nftw@plt+0x4465c>  // b.pmore
  4471c4:	ldr	w1, [x1, #20]
  4471c8:	mov	w3, #0xffffffff            	// #-1
  4471cc:	ldr	w2, [x2, #20]
  4471d0:	cmp	w2, w1
  4471d4:	cset	w0, gt
  4471d8:	csel	w0, w0, w3, ge  // ge = tcont
  4471dc:	ret
  4471e0:	mov	w0, #0xffffffff            	// #-1
  4471e4:	ret
  4471e8:	cbz	x2, 447340 <nftw@plt+0x447c0>
  4471ec:	stp	x29, x30, [sp, #-64]!
  4471f0:	mov	x10, x2
  4471f4:	mov	x29, sp
  4471f8:	stp	x19, x20, [sp, #16]
  4471fc:	mov	x20, x6
  447200:	mov	x19, x0
  447204:	stp	x21, x22, [sp, #32]
  447208:	mov	x21, x3
  44720c:	mov	x22, x4
  447210:	stp	x23, x24, [sp, #48]
  447214:	mov	x23, x5
  447218:	mov	x0, #0x0                   	// #0
  44721c:	add	x7, x10, x0
  447220:	cmp	x10, x0
  447224:	and	x8, x7, #0xfffffffffffffffe
  447228:	b.ls	447328 <nftw@plt+0x447a8>  // b.plast
  44722c:	lsr	x7, x7, #1
  447230:	add	x8, x8, x7
  447234:	lsl	x9, x8, #3
  447238:	ldr	x3, [x1, x8, lsl #3]
  44723c:	add	x8, x1, x9
  447240:	cmp	x3, x19
  447244:	b.hi	447314 <nftw@plt+0x44794>  // b.pmore
  447248:	ldr	x3, [x8, #8]
  44724c:	add	x0, x7, #0x1
  447250:	cmp	x19, x3
  447254:	b.cs	44721c <nftw@plt+0x4469c>  // b.hs, b.nlast
  447258:	asr	x9, x9, #3
  44725c:	mov	x0, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  447260:	movk	x0, #0xaaab
  447264:	mov	x3, x0
  447268:	mul	x9, x9, x0
  44726c:	add	x9, x9, #0x1
  447270:	cmp	x2, x9
  447274:	b.hi	4472a4 <nftw@plt+0x44724>  // b.pmore
  447278:	b	4472b0 <nftw@plt+0x44730>
  44727c:	ldr	x0, [x8, #32]
  447280:	cmp	x19, x0
  447284:	b.cs	4472b0 <nftw@plt+0x44730>  // b.hs, b.nlast
  447288:	add	x8, x8, #0x18
  44728c:	sub	x7, x8, x1
  447290:	asr	x7, x7, #3
  447294:	mul	x7, x7, x3
  447298:	add	x7, x7, #0x1
  44729c:	cmp	x7, x2
  4472a0:	b.cs	4472b0 <nftw@plt+0x44730>  // b.hs, b.nlast
  4472a4:	ldr	x0, [x8, #24]
  4472a8:	cmp	x19, x0
  4472ac:	b.cs	44727c <nftw@plt+0x446fc>  // b.hs, b.nlast
  4472b0:	ldr	x24, [x8, #16]
  4472b4:	mov	x6, x20
  4472b8:	mov	x5, x23
  4472bc:	mov	x4, x22
  4472c0:	mov	x3, x21
  4472c4:	mov	x0, x19
  4472c8:	ldp	x1, x2, [x24, #24]
  4472cc:	bl	4471e8 <nftw@plt+0x44668>
  4472d0:	cbnz	w0, 447300 <nftw@plt+0x44780>
  4472d4:	ldr	w3, [x20]
  4472d8:	mov	x1, x19
  4472dc:	ldr	x2, [x23]
  4472e0:	mov	x0, x22
  4472e4:	ldr	x4, [x24]
  4472e8:	blr	x21
  4472ec:	cbnz	w0, 447300 <nftw@plt+0x44780>
  4472f0:	ldr	x1, [x24, #8]
  4472f4:	str	x1, [x23]
  4472f8:	ldr	w1, [x24, #16]
  4472fc:	str	w1, [x20]
  447300:	ldp	x19, x20, [sp, #16]
  447304:	ldp	x21, x22, [sp, #32]
  447308:	ldp	x23, x24, [sp, #48]
  44730c:	ldp	x29, x30, [sp], #64
  447310:	ret
  447314:	mov	x10, x7
  447318:	add	x7, x10, x0
  44731c:	cmp	x10, x0
  447320:	and	x8, x7, #0xfffffffffffffffe
  447324:	b.hi	44722c <nftw@plt+0x446ac>  // b.pmore
  447328:	mov	w0, #0x0                   	// #0
  44732c:	ldp	x19, x20, [sp, #16]
  447330:	ldp	x21, x22, [sp, #32]
  447334:	ldp	x23, x24, [sp, #48]
  447338:	ldp	x29, x30, [sp], #64
  44733c:	ret
  447340:	mov	w0, #0x0                   	// #0
  447344:	ret
  447348:	ldr	x3, [x0]
  44734c:	ldr	x2, [x1]
  447350:	cmp	x3, x2
  447354:	b.cc	44738c <nftw@plt+0x4480c>  // b.lo, b.ul, b.last
  447358:	b.hi	447384 <nftw@plt+0x44804>  // b.pmore
  44735c:	ldr	x3, [x0, #8]
  447360:	ldr	x2, [x1, #8]
  447364:	cmp	x3, x2
  447368:	b.cc	447384 <nftw@plt+0x44804>  // b.lo, b.ul, b.last
  44736c:	b.hi	44738c <nftw@plt+0x4480c>  // b.pmore
  447370:	ldr	x0, [x0, #16]
  447374:	ldr	x1, [x1, #16]
  447378:	ldr	x0, [x0]
  44737c:	ldr	x1, [x1]
  447380:	b	402890 <strcmp@plt>
  447384:	mov	w0, #0x1                   	// #1
  447388:	ret
  44738c:	mov	w0, #0xffffffff            	// #-1
  447390:	ret
  447394:	nop
  447398:	stp	x29, x30, [sp, #-288]!
  44739c:	mov	w1, #0x0                   	// #0
  4473a0:	mov	x29, sp
  4473a4:	stp	x19, x20, [sp, #16]
  4473a8:	mov	x19, x0
  4473ac:	stp	x23, x24, [sp, #48]
  4473b0:	adrp	x24, 47f000 <_obstack_memory_used@@Base+0x1dbb8>
  4473b4:	adrp	x23, 47f000 <_obstack_memory_used@@Base+0x1dbb8>
  4473b8:	add	x24, x24, #0xb38
  4473bc:	add	x23, x23, #0xb28
  4473c0:	str	x25, [sp, #64]
  4473c4:	add	x25, sp, #0x58
  4473c8:	stp	x21, x22, [sp, #32]
  4473cc:	mov	w21, #0x0                   	// #0
  4473d0:	mov	x22, #0x0                   	// #0
  4473d4:	nop
  4473d8:	ldp	x6, x20, [x19, #16]
  4473dc:	cbnz	x20, 447404 <nftw@plt+0x44884>
  4473e0:	ldr	w0, [x19, #56]
  4473e4:	cbz	w0, 447488 <nftw@plt+0x44908>
  4473e8:	mov	x0, x20
  4473ec:	ldp	x19, x20, [sp, #16]
  4473f0:	ldp	x21, x22, [sp, #32]
  4473f4:	ldp	x23, x24, [sp, #48]
  4473f8:	ldr	x25, [sp, #64]
  4473fc:	ldp	x29, x30, [sp], #288
  447400:	ret
  447404:	sub	x20, x20, #0x1
  447408:	add	x5, x6, #0x1
  44740c:	stp	x5, x20, [x19, #16]
  447410:	cmp	w21, #0x3f
  447414:	ldrb	w20, [x6]
  447418:	b.hi	447450 <nftw@plt+0x448d0>  // b.pmore
  44741c:	and	x0, x20, #0x7f
  447420:	lsl	x0, x0, x21
  447424:	orr	x22, x22, x0
  447428:	add	w21, w21, #0x7
  44742c:	tbnz	w20, #7, 4473d8 <nftw@plt+0x44858>
  447430:	mov	x20, x22
  447434:	mov	x0, x20
  447438:	ldp	x19, x20, [sp, #16]
  44743c:	ldp	x21, x22, [sp, #32]
  447440:	ldp	x23, x24, [sp, #48]
  447444:	ldr	x25, [sp, #64]
  447448:	ldp	x29, x30, [sp], #288
  44744c:	ret
  447450:	cbnz	w1, 447428 <nftw@plt+0x448a8>
  447454:	ldp	x4, x6, [x19]
  447458:	mov	x3, x24
  44745c:	mov	x2, x23
  447460:	mov	x1, #0xc8                  	// #200
  447464:	mov	x0, x25
  447468:	sub	w5, w5, w6
  44746c:	bl	402600 <snprintf@plt>
  447470:	ldp	x3, x0, [x19, #40]
  447474:	mov	x1, x25
  447478:	mov	w2, #0x0                   	// #0
  44747c:	blr	x3
  447480:	mov	w1, #0x1                   	// #1
  447484:	b	447428 <nftw@plt+0x448a8>
  447488:	ldp	x4, x5, [x19]
  44748c:	add	x21, sp, #0x58
  447490:	mov	x0, x21
  447494:	mov	x1, #0xc8                  	// #200
  447498:	adrp	x3, 47f000 <_obstack_memory_used@@Base+0x1dbb8>
  44749c:	adrp	x2, 47f000 <_obstack_memory_used@@Base+0x1dbb8>
  4474a0:	add	x3, x3, #0xb18
  4474a4:	add	x2, x2, #0xb28
  4474a8:	sub	w5, w6, w5
  4474ac:	bl	402600 <snprintf@plt>
  4474b0:	ldp	x3, x0, [x19, #40]
  4474b4:	mov	x1, x21
  4474b8:	mov	w2, #0x0                   	// #0
  4474bc:	blr	x3
  4474c0:	mov	w0, #0x1                   	// #1
  4474c4:	str	w0, [x19, #56]
  4474c8:	mov	x0, x20
  4474cc:	ldp	x19, x20, [sp, #16]
  4474d0:	ldp	x21, x22, [sp, #32]
  4474d4:	ldp	x23, x24, [sp, #48]
  4474d8:	ldr	x25, [sp, #64]
  4474dc:	ldp	x29, x30, [sp], #288
  4474e0:	ret
  4474e4:	nop
  4474e8:	stp	x29, x30, [sp, #-288]!
  4474ec:	mov	w1, #0x0                   	// #0
  4474f0:	mov	x29, sp
  4474f4:	stp	x19, x20, [sp, #16]
  4474f8:	mov	x19, x0
  4474fc:	mov	w20, #0x0                   	// #0
  447500:	stp	x23, x24, [sp, #48]
  447504:	adrp	x24, 47f000 <_obstack_memory_used@@Base+0x1dbb8>
  447508:	adrp	x23, 47f000 <_obstack_memory_used@@Base+0x1dbb8>
  44750c:	add	x24, x24, #0xb58
  447510:	add	x23, x23, #0xb28
  447514:	str	x25, [sp, #64]
  447518:	add	x25, sp, #0x58
  44751c:	stp	x21, x22, [sp, #32]
  447520:	mov	x22, #0x0                   	// #0
  447524:	nop
  447528:	ldp	x6, x0, [x19, #16]
  44752c:	cbnz	x0, 447558 <nftw@plt+0x449d8>
  447530:	ldr	w0, [x19, #56]
  447534:	mov	x22, #0x0                   	// #0
  447538:	cbz	w0, 4475f4 <nftw@plt+0x44a74>
  44753c:	mov	x0, x22
  447540:	ldp	x19, x20, [sp, #16]
  447544:	ldp	x21, x22, [sp, #32]
  447548:	ldp	x23, x24, [sp, #48]
  44754c:	ldr	x25, [sp, #64]
  447550:	ldp	x29, x30, [sp], #288
  447554:	ret
  447558:	sub	x0, x0, #0x1
  44755c:	add	x5, x6, #0x1
  447560:	stp	x5, x0, [x19, #16]
  447564:	cmp	w20, #0x3f
  447568:	ldrb	w21, [x6]
  44756c:	b.hi	4475bc <nftw@plt+0x44a3c>  // b.pmore
  447570:	and	x0, x21, #0x7f
  447574:	lsl	x0, x0, x20
  447578:	orr	x22, x22, x0
  44757c:	add	w20, w20, #0x7
  447580:	tbnz	w21, #7, 447528 <nftw@plt+0x449a8>
  447584:	and	w21, w21, #0x40
  447588:	cmp	w20, #0x3f
  44758c:	mov	x0, #0xffffffffffffffff    	// #-1
  447590:	ccmp	w21, #0x0, #0x4, ls  // ls = plast
  447594:	lsl	x20, x0, x20
  447598:	orr	x20, x22, x20
  44759c:	csel	x22, x20, x22, ne  // ne = any
  4475a0:	mov	x0, x22
  4475a4:	ldp	x19, x20, [sp, #16]
  4475a8:	ldp	x21, x22, [sp, #32]
  4475ac:	ldp	x23, x24, [sp, #48]
  4475b0:	ldr	x25, [sp, #64]
  4475b4:	ldp	x29, x30, [sp], #288
  4475b8:	ret
  4475bc:	cbnz	w1, 44757c <nftw@plt+0x449fc>
  4475c0:	ldp	x4, x6, [x19]
  4475c4:	mov	x3, x24
  4475c8:	mov	x2, x23
  4475cc:	mov	x1, #0xc8                  	// #200
  4475d0:	mov	x0, x25
  4475d4:	sub	w5, w5, w6
  4475d8:	bl	402600 <snprintf@plt>
  4475dc:	ldp	x3, x0, [x19, #40]
  4475e0:	mov	x1, x25
  4475e4:	mov	w2, #0x0                   	// #0
  4475e8:	blr	x3
  4475ec:	mov	w1, #0x1                   	// #1
  4475f0:	b	44757c <nftw@plt+0x449fc>
  4475f4:	ldp	x4, x5, [x19]
  4475f8:	add	x20, sp, #0x58
  4475fc:	mov	x0, x20
  447600:	mov	x1, #0xc8                  	// #200
  447604:	adrp	x3, 47f000 <_obstack_memory_used@@Base+0x1dbb8>
  447608:	adrp	x2, 47f000 <_obstack_memory_used@@Base+0x1dbb8>
  44760c:	add	x3, x3, #0xb18
  447610:	add	x2, x2, #0xb28
  447614:	sub	w5, w6, w5
  447618:	bl	402600 <snprintf@plt>
  44761c:	ldp	x3, x0, [x19, #40]
  447620:	mov	x1, x20
  447624:	mov	w2, #0x0                   	// #0
  447628:	blr	x3
  44762c:	mov	w0, #0x1                   	// #1
  447630:	str	w0, [x19, #56]
  447634:	mov	x0, x22
  447638:	ldp	x19, x20, [sp, #16]
  44763c:	ldp	x21, x22, [sp, #32]
  447640:	ldp	x23, x24, [sp, #48]
  447644:	ldr	x25, [sp, #64]
  447648:	ldp	x29, x30, [sp], #288
  44764c:	ret
  447650:	stp	x29, x30, [sp, #-256]!
  447654:	mov	x29, sp
  447658:	stp	x19, x20, [sp, #16]
  44765c:	mov	x19, x0
  447660:	ldr	x0, [x0, #24]
  447664:	ldr	x5, [x19, #16]
  447668:	cmp	x0, #0x1
  44766c:	b.hi	44768c <nftw@plt+0x44b0c>  // b.pmore
  447670:	ldr	w0, [x19, #56]
  447674:	mov	w20, #0x0                   	// #0
  447678:	cbz	w0, 4476d8 <nftw@plt+0x44b58>
  44767c:	mov	w0, w20
  447680:	ldp	x19, x20, [sp, #16]
  447684:	ldp	x29, x30, [sp], #256
  447688:	ret
  44768c:	ldr	w1, [x19, #32]
  447690:	sub	x0, x0, #0x2
  447694:	add	x2, x5, #0x2
  447698:	stp	x2, x0, [x19, #16]
  44769c:	cbz	w1, 4476bc <nftw@plt+0x44b3c>
  4476a0:	ldrb	w0, [x5]
  4476a4:	ldrb	w20, [x5, #1]
  4476a8:	bfi	w20, w0, #8, #24
  4476ac:	mov	w0, w20
  4476b0:	ldp	x19, x20, [sp, #16]
  4476b4:	ldp	x29, x30, [sp], #256
  4476b8:	ret
  4476bc:	ldrb	w0, [x5, #1]
  4476c0:	ldrb	w20, [x5]
  4476c4:	bfi	w20, w0, #8, #24
  4476c8:	mov	w0, w20
  4476cc:	ldp	x19, x20, [sp, #16]
  4476d0:	ldp	x29, x30, [sp], #256
  4476d4:	ret
  4476d8:	ldp	x4, x1, [x19]
  4476dc:	str	x21, [sp, #32]
  4476e0:	add	x21, sp, #0x38
  4476e4:	adrp	x3, 47f000 <_obstack_memory_used@@Base+0x1dbb8>
  4476e8:	mov	x0, x21
  4476ec:	add	x3, x3, #0xb18
  4476f0:	adrp	x2, 47f000 <_obstack_memory_used@@Base+0x1dbb8>
  4476f4:	add	x2, x2, #0xb28
  4476f8:	sub	w5, w5, w1
  4476fc:	mov	x1, #0xc8                  	// #200
  447700:	bl	402600 <snprintf@plt>
  447704:	ldp	x3, x0, [x19, #40]
  447708:	mov	x1, x21
  44770c:	mov	w2, #0x0                   	// #0
  447710:	blr	x3
  447714:	mov	w0, #0x1                   	// #1
  447718:	ldr	x21, [sp, #32]
  44771c:	str	w0, [x19, #56]
  447720:	mov	w0, w20
  447724:	ldp	x19, x20, [sp, #16]
  447728:	ldp	x29, x30, [sp], #256
  44772c:	ret
  447730:	stp	x29, x30, [sp, #-256]!
  447734:	mov	x29, sp
  447738:	stp	x19, x20, [sp, #16]
  44773c:	mov	x19, x0
  447740:	ldr	x0, [x0, #24]
  447744:	ldr	x5, [x19, #16]
  447748:	cmp	x0, #0x3
  44774c:	b.hi	44776c <nftw@plt+0x44bec>  // b.pmore
  447750:	ldr	w0, [x19, #56]
  447754:	mov	w20, #0x0                   	// #0
  447758:	cbz	w0, 4477ac <nftw@plt+0x44c2c>
  44775c:	mov	w0, w20
  447760:	ldp	x19, x20, [sp, #16]
  447764:	ldp	x29, x30, [sp], #256
  447768:	ret
  44776c:	ldr	w1, [x19, #32]
  447770:	sub	x0, x0, #0x4
  447774:	add	x2, x5, #0x4
  447778:	stp	x2, x0, [x19, #16]
  44777c:	cbz	w1, 447798 <nftw@plt+0x44c18>
  447780:	ldr	w20, [x5]
  447784:	rev	w20, w20
  447788:	mov	w0, w20
  44778c:	ldp	x19, x20, [sp, #16]
  447790:	ldp	x29, x30, [sp], #256
  447794:	ret
  447798:	ldr	w20, [x5]
  44779c:	mov	w0, w20
  4477a0:	ldp	x19, x20, [sp, #16]
  4477a4:	ldp	x29, x30, [sp], #256
  4477a8:	ret
  4477ac:	ldp	x4, x1, [x19]
  4477b0:	str	x21, [sp, #32]
  4477b4:	add	x21, sp, #0x38
  4477b8:	adrp	x3, 47f000 <_obstack_memory_used@@Base+0x1dbb8>
  4477bc:	mov	x0, x21
  4477c0:	add	x3, x3, #0xb18
  4477c4:	adrp	x2, 47f000 <_obstack_memory_used@@Base+0x1dbb8>
  4477c8:	add	x2, x2, #0xb28
  4477cc:	sub	w5, w5, w1
  4477d0:	mov	x1, #0xc8                  	// #200
  4477d4:	bl	402600 <snprintf@plt>
  4477d8:	ldp	x3, x0, [x19, #40]
  4477dc:	mov	x1, x21
  4477e0:	mov	w2, #0x0                   	// #0
  4477e4:	blr	x3
  4477e8:	mov	w0, #0x1                   	// #1
  4477ec:	ldr	x21, [sp, #32]
  4477f0:	str	w0, [x19, #56]
  4477f4:	mov	w0, w20
  4477f8:	ldp	x19, x20, [sp, #16]
  4477fc:	ldp	x29, x30, [sp], #256
  447800:	ret
  447804:	nop
  447808:	stp	x29, x30, [sp, #-256]!
  44780c:	mov	x29, sp
  447810:	stp	x19, x20, [sp, #16]
  447814:	mov	x19, x0
  447818:	ldr	x0, [x0, #24]
  44781c:	ldr	x5, [x19, #16]
  447820:	cmp	x0, #0x7
  447824:	b.hi	447844 <nftw@plt+0x44cc4>  // b.pmore
  447828:	ldr	w0, [x19, #56]
  44782c:	mov	x20, #0x0                   	// #0
  447830:	cbz	w0, 447884 <nftw@plt+0x44d04>
  447834:	mov	x0, x20
  447838:	ldp	x19, x20, [sp, #16]
  44783c:	ldp	x29, x30, [sp], #256
  447840:	ret
  447844:	ldr	w1, [x19, #32]
  447848:	sub	x0, x0, #0x8
  44784c:	add	x2, x5, #0x8
  447850:	stp	x2, x0, [x19, #16]
  447854:	cbz	w1, 447870 <nftw@plt+0x44cf0>
  447858:	ldr	x20, [x5]
  44785c:	rev	x20, x20
  447860:	mov	x0, x20
  447864:	ldp	x19, x20, [sp, #16]
  447868:	ldp	x29, x30, [sp], #256
  44786c:	ret
  447870:	ldr	x20, [x5]
  447874:	mov	x0, x20
  447878:	ldp	x19, x20, [sp, #16]
  44787c:	ldp	x29, x30, [sp], #256
  447880:	ret
  447884:	ldp	x4, x1, [x19]
  447888:	str	x21, [sp, #32]
  44788c:	add	x21, sp, #0x38
  447890:	adrp	x3, 47f000 <_obstack_memory_used@@Base+0x1dbb8>
  447894:	mov	x0, x21
  447898:	add	x3, x3, #0xb18
  44789c:	adrp	x2, 47f000 <_obstack_memory_used@@Base+0x1dbb8>
  4478a0:	add	x2, x2, #0xb28
  4478a4:	sub	w5, w5, w1
  4478a8:	mov	x1, #0xc8                  	// #200
  4478ac:	bl	402600 <snprintf@plt>
  4478b0:	ldp	x3, x0, [x19, #40]
  4478b4:	mov	x1, x21
  4478b8:	mov	w2, #0x0                   	// #0
  4478bc:	blr	x3
  4478c0:	mov	w0, #0x1                   	// #1
  4478c4:	ldr	x21, [sp, #32]
  4478c8:	str	w0, [x19, #56]
  4478cc:	mov	x0, x20
  4478d0:	ldp	x19, x20, [sp, #16]
  4478d4:	ldp	x29, x30, [sp], #256
  4478d8:	ret
  4478dc:	nop
  4478e0:	stp	x29, x30, [sp, #-256]!
  4478e4:	cmp	w1, #0x4
  4478e8:	mov	x29, sp
  4478ec:	stp	x21, x22, [sp, #32]
  4478f0:	b.eq	4479e4 <nftw@plt+0x44e64>  // b.none
  4478f4:	stp	x19, x20, [sp, #16]
  4478f8:	mov	w19, w1
  4478fc:	mov	x20, x0
  447900:	b.gt	447940 <nftw@plt+0x44dc0>
  447904:	cmp	w1, #0x1
  447908:	b.eq	4479fc <nftw@plt+0x44e7c>  // b.none
  44790c:	cmp	w1, #0x2
  447910:	b.ne	447990 <nftw@plt+0x44e10>  // b.any
  447914:	ldp	x5, x0, [x0, #16]
  447918:	cmp	x0, #0x1
  44791c:	b.hi	447964 <nftw@plt+0x44de4>  // b.pmore
  447920:	ldr	w0, [x20, #56]
  447924:	mov	x21, #0x0                   	// #0
  447928:	cbz	w0, 447a8c <nftw@plt+0x44f0c>
  44792c:	ldp	x19, x20, [sp, #16]
  447930:	mov	x0, x21
  447934:	ldp	x21, x22, [sp, #32]
  447938:	ldp	x29, x30, [sp], #256
  44793c:	ret
  447940:	cmp	w1, #0x8
  447944:	b.ne	447990 <nftw@plt+0x44e10>  // b.any
  447948:	bl	447808 <nftw@plt+0x44c88>
  44794c:	mov	x21, x0
  447950:	mov	x0, x21
  447954:	ldp	x19, x20, [sp, #16]
  447958:	ldp	x21, x22, [sp, #32]
  44795c:	ldp	x29, x30, [sp], #256
  447960:	ret
  447964:	ldr	w1, [x20, #32]
  447968:	sub	x0, x0, #0x2
  44796c:	add	x2, x5, #0x2
  447970:	stp	x2, x0, [x20, #16]
  447974:	cbz	w1, 447a74 <nftw@plt+0x44ef4>
  447978:	ldrb	w21, [x5]
  44797c:	ldrb	w0, [x5, #1]
  447980:	ldp	x19, x20, [sp, #16]
  447984:	orr	w21, w0, w21, lsl #8
  447988:	and	x21, x21, #0xffff
  44798c:	b	447930 <nftw@plt+0x44db0>
  447990:	ldp	x4, x1, [x20]
  447994:	add	x19, sp, #0x38
  447998:	ldr	x5, [x20, #16]
  44799c:	mov	x0, x19
  4479a0:	adrp	x3, 47f000 <_obstack_memory_used@@Base+0x1dbb8>
  4479a4:	adrp	x2, 47f000 <_obstack_memory_used@@Base+0x1dbb8>
  4479a8:	add	x3, x3, #0xb80
  4479ac:	add	x2, x2, #0xb28
  4479b0:	sub	w5, w5, w1
  4479b4:	mov	x1, #0xc8                  	// #200
  4479b8:	bl	402600 <snprintf@plt>
  4479bc:	mov	x21, #0x0                   	// #0
  4479c0:	ldp	x3, x0, [x20, #40]
  4479c4:	mov	x1, x19
  4479c8:	mov	w2, #0x0                   	// #0
  4479cc:	blr	x3
  4479d0:	mov	x0, x21
  4479d4:	ldp	x19, x20, [sp, #16]
  4479d8:	ldp	x21, x22, [sp, #32]
  4479dc:	ldp	x29, x30, [sp], #256
  4479e0:	ret
  4479e4:	bl	447730 <nftw@plt+0x44bb0>
  4479e8:	mov	w21, w0
  4479ec:	mov	x0, x21
  4479f0:	ldp	x21, x22, [sp, #32]
  4479f4:	ldp	x29, x30, [sp], #256
  4479f8:	ret
  4479fc:	ldp	x5, x21, [x0, #16]
  447a00:	cbnz	x21, 447a50 <nftw@plt+0x44ed0>
  447a04:	ldr	w0, [x0, #56]
  447a08:	cbnz	w0, 44792c <nftw@plt+0x44dac>
  447a0c:	ldp	x4, x1, [x20]
  447a10:	add	x22, sp, #0x38
  447a14:	mov	x0, x22
  447a18:	adrp	x3, 47f000 <_obstack_memory_used@@Base+0x1dbb8>
  447a1c:	adrp	x2, 47f000 <_obstack_memory_used@@Base+0x1dbb8>
  447a20:	add	x3, x3, #0xb18
  447a24:	add	x2, x2, #0xb28
  447a28:	sub	w5, w5, w1
  447a2c:	mov	x1, #0xc8                  	// #200
  447a30:	bl	402600 <snprintf@plt>
  447a34:	ldp	x3, x0, [x20, #40]
  447a38:	mov	x1, x22
  447a3c:	mov	w2, #0x0                   	// #0
  447a40:	blr	x3
  447a44:	str	w19, [x20, #56]
  447a48:	ldp	x19, x20, [sp, #16]
  447a4c:	b	447930 <nftw@plt+0x44db0>
  447a50:	add	x0, x5, #0x1
  447a54:	sub	x21, x21, #0x1
  447a58:	stp	x0, x21, [x20, #16]
  447a5c:	ldrb	w21, [x5]
  447a60:	ldp	x19, x20, [sp, #16]
  447a64:	mov	x0, x21
  447a68:	ldp	x21, x22, [sp, #32]
  447a6c:	ldp	x29, x30, [sp], #256
  447a70:	ret
  447a74:	ldrb	w21, [x5, #1]
  447a78:	ldrb	w0, [x5]
  447a7c:	ldp	x19, x20, [sp, #16]
  447a80:	orr	w21, w0, w21, lsl #8
  447a84:	and	x21, x21, #0xffff
  447a88:	b	447930 <nftw@plt+0x44db0>
  447a8c:	ldp	x4, x1, [x20]
  447a90:	add	x19, sp, #0x38
  447a94:	mov	x0, x19
  447a98:	adrp	x3, 47f000 <_obstack_memory_used@@Base+0x1dbb8>
  447a9c:	adrp	x2, 47f000 <_obstack_memory_used@@Base+0x1dbb8>
  447aa0:	add	x3, x3, #0xb18
  447aa4:	add	x2, x2, #0xb28
  447aa8:	sub	w5, w5, w1
  447aac:	mov	x1, #0xc8                  	// #200
  447ab0:	bl	402600 <snprintf@plt>
  447ab4:	ldp	x3, x0, [x20, #40]
  447ab8:	mov	x1, x19
  447abc:	mov	w2, #0x0                   	// #0
  447ac0:	blr	x3
  447ac4:	mov	w0, #0x1                   	// #1
  447ac8:	str	w0, [x20, #56]
  447acc:	ldp	x19, x20, [sp, #16]
  447ad0:	b	447930 <nftw@plt+0x44db0>
  447ad4:	nop
  447ad8:	stp	x29, x30, [sp, #-320]!
  447adc:	mov	x29, sp
  447ae0:	stp	x21, x22, [sp, #32]
  447ae4:	ldr	x21, [sp, #320]
  447ae8:	stp	x19, x20, [sp, #16]
  447aec:	adrp	x20, 47f000 <_obstack_memory_used@@Base+0x1dbb8>
  447af0:	mov	x19, x1
  447af4:	add	x20, x20, #0xe14
  447af8:	stp	xzr, xzr, [x21]
  447afc:	cmp	w0, #0x20
  447b00:	b.hi	447b24 <nftw@plt+0x44fa4>  // b.pmore
  447b04:	cbz	w0, 447dac <nftw@plt+0x4522c>
  447b08:	sub	w0, w0, #0x1
  447b0c:	cmp	w0, #0x1f
  447b10:	b.hi	447dac <nftw@plt+0x4522c>  // b.pmore
  447b14:	ldrh	w0, [x20, w0, uxtw #1]
  447b18:	adr	x1, 447b24 <nftw@plt+0x44fa4>
  447b1c:	add	x0, x1, w0, sxth #2
  447b20:	br	x0
  447b24:	mov	w1, #0x1f20                	// #7968
  447b28:	cmp	w0, w1
  447b2c:	b.eq	447f88 <nftw@plt+0x45408>  // b.none
  447b30:	b.ls	447b80 <nftw@plt+0x45000>  // b.plast
  447b34:	mov	w1, #0x1f21                	// #7969
  447b38:	cmp	w0, w1
  447b3c:	b.ne	447dac <nftw@plt+0x4522c>  // b.any
  447b40:	str	x7, [sp, #64]
  447b44:	mov	x0, x19
  447b48:	cbz	w2, 447f78 <nftw@plt+0x453f8>
  447b4c:	bl	447808 <nftw@plt+0x44c88>
  447b50:	ldr	x7, [sp, #64]
  447b54:	cbz	x7, 448038 <nftw@plt+0x454b8>
  447b58:	ldr	x1, [x7, #112]
  447b5c:	cmp	x1, x0
  447b60:	b.ls	448140 <nftw@plt+0x455c0>  // b.plast
  447b64:	ldr	x1, [x7, #104]
  447b68:	mov	w2, #0x4                   	// #4
  447b6c:	mov	w20, #0x1                   	// #1
  447b70:	str	w2, [x21]
  447b74:	add	x0, x1, x0
  447b78:	str	x0, [x21, #8]
  447b7c:	b	447ba8 <nftw@plt+0x45028>
  447b80:	mov	w1, #0xffffe0ff            	// #-7937
  447b84:	add	w0, w0, w1
  447b88:	cmp	w0, #0x1
  447b8c:	b.hi	447dac <nftw@plt+0x4522c>  // b.pmore
  447b90:	mov	w0, #0x8                   	// #8
  447b94:	str	w0, [x21]
  447b98:	mov	w20, #0x1                   	// #1
  447b9c:	mov	x0, x19
  447ba0:	bl	447398 <nftw@plt+0x44818>
  447ba4:	str	x0, [x21, #8]
  447ba8:	mov	w0, w20
  447bac:	ldp	x19, x20, [sp, #16]
  447bb0:	ldp	x21, x22, [sp, #32]
  447bb4:	ldp	x29, x30, [sp], #320
  447bb8:	ret
  447bbc:	ldp	x5, x22, [x19, #16]
  447bc0:	mov	w0, #0x2                   	// #2
  447bc4:	str	w0, [x21]
  447bc8:	cbnz	x22, 447c00 <nftw@plt+0x45080>
  447bcc:	ldr	w0, [x19, #56]
  447bd0:	cbz	w0, 447f30 <nftw@plt+0x453b0>
  447bd4:	mov	w20, #0x1                   	// #1
  447bd8:	str	x22, [x21, #8]
  447bdc:	mov	w0, w20
  447be0:	ldp	x19, x20, [sp, #16]
  447be4:	ldp	x21, x22, [sp, #32]
  447be8:	ldp	x29, x30, [sp], #320
  447bec:	ret
  447bf0:	ldp	x5, x22, [x19, #16]
  447bf4:	mov	w0, #0x5                   	// #5
  447bf8:	str	w0, [x21]
  447bfc:	cbz	x22, 447bcc <nftw@plt+0x4504c>
  447c00:	sub	x22, x22, #0x1
  447c04:	add	x0, x5, #0x1
  447c08:	stp	x0, x22, [x19, #16]
  447c0c:	mov	w20, #0x1                   	// #1
  447c10:	ldrb	w22, [x5]
  447c14:	b	447bd8 <nftw@plt+0x45058>
  447c18:	mov	w0, #0x3                   	// #3
  447c1c:	str	w0, [x21]
  447c20:	mov	w20, #0x1                   	// #1
  447c24:	mov	x0, x19
  447c28:	bl	4474e8 <nftw@plt+0x44968>
  447c2c:	str	x0, [x21, #8]
  447c30:	b	447ba8 <nftw@plt+0x45028>
  447c34:	mov	w0, #0x9                   	// #9
  447c38:	str	w0, [x21]
  447c3c:	mov	x0, x19
  447c40:	mov	w20, #0x1                   	// #1
  447c44:	bl	447808 <nftw@plt+0x44c88>
  447c48:	str	x0, [x21, #8]
  447c4c:	mov	w0, w20
  447c50:	ldp	x19, x20, [sp, #16]
  447c54:	ldp	x21, x22, [sp, #32]
  447c58:	ldp	x29, x30, [sp], #320
  447c5c:	ret
  447c60:	ldp	x6, x0, [x19, #16]
  447c64:	mov	w1, #0xa                   	// #10
  447c68:	str	w1, [x21]
  447c6c:	cbnz	x0, 447fc0 <nftw@plt+0x45440>
  447c70:	ldr	w1, [x19, #56]
  447c74:	cbz	w1, 4480b0 <nftw@plt+0x45530>
  447c78:	mov	w20, #0x1                   	// #1
  447c7c:	stp	x6, x0, [x19, #16]
  447c80:	b	447ba8 <nftw@plt+0x45028>
  447c84:	mov	w0, #0xa                   	// #10
  447c88:	str	w0, [x21]
  447c8c:	mov	x0, x19
  447c90:	bl	447398 <nftw@plt+0x44818>
  447c94:	ldr	x1, [x19, #24]
  447c98:	cmp	x0, x1
  447c9c:	b.ls	448000 <nftw@plt+0x45480>  // b.plast
  447ca0:	ldr	w20, [x19, #56]
  447ca4:	cbz	w20, 447ee8 <nftw@plt+0x45368>
  447ca8:	mov	w20, #0x0                   	// #0
  447cac:	b	447ba8 <nftw@plt+0x45028>
  447cb0:	ldp	x22, x20, [x19, #16]
  447cb4:	mov	w0, #0x4                   	// #4
  447cb8:	str	w0, [x21]
  447cbc:	mov	x1, x20
  447cc0:	mov	x0, x22
  447cc4:	bl	402540 <strnlen@plt>
  447cc8:	add	x0, x0, #0x1
  447ccc:	cmp	x20, x0
  447cd0:	b.cs	448044 <nftw@plt+0x454c4>  // b.hs, b.nlast
  447cd4:	ldr	w20, [x19, #56]
  447cd8:	cbz	w20, 44805c <nftw@plt+0x454dc>
  447cdc:	mov	x22, #0x0                   	// #0
  447ce0:	mov	w20, #0x0                   	// #0
  447ce4:	str	x22, [x21, #8]
  447ce8:	b	447bdc <nftw@plt+0x4505c>
  447cec:	mov	w0, #0x2                   	// #2
  447cf0:	str	w0, [x21]
  447cf4:	mov	w20, #0x1                   	// #1
  447cf8:	mov	x0, x19
  447cfc:	bl	447730 <nftw@plt+0x44bb0>
  447d00:	mov	w0, w0
  447d04:	str	x0, [x21, #8]
  447d08:	b	447ba8 <nftw@plt+0x45028>
  447d0c:	mov	w0, #0x2                   	// #2
  447d10:	str	w0, [x21]
  447d14:	mov	w20, #0x1                   	// #1
  447d18:	mov	x0, x19
  447d1c:	bl	447650 <nftw@plt+0x44ad0>
  447d20:	and	x0, x0, #0xffff
  447d24:	str	x0, [x21, #8]
  447d28:	b	447ba8 <nftw@plt+0x45028>
  447d2c:	mov	w0, #0x2                   	// #2
  447d30:	b	447c38 <nftw@plt+0x450b8>
  447d34:	mov	w0, #0xa                   	// #10
  447d38:	str	w0, [x21]
  447d3c:	mov	x0, x19
  447d40:	bl	447730 <nftw@plt+0x44bb0>
  447d44:	mov	w2, w0
  447d48:	ldr	x1, [x19, #24]
  447d4c:	cmp	x1, w0, uxtw
  447d50:	b.cc	447ca0 <nftw@plt+0x45120>  // b.lo, b.ul, b.last
  447d54:	ldr	x0, [x19, #16]
  447d58:	sub	x1, x1, x2
  447d5c:	mov	w20, #0x1                   	// #1
  447d60:	add	x2, x0, x2
  447d64:	stp	x2, x1, [x19, #16]
  447d68:	b	447ba8 <nftw@plt+0x45028>
  447d6c:	mov	w0, #0xa                   	// #10
  447d70:	str	w0, [x21]
  447d74:	mov	x0, x19
  447d78:	bl	447650 <nftw@plt+0x44ad0>
  447d7c:	and	x2, x0, #0xffff
  447d80:	ldr	x1, [x19, #24]
  447d84:	cmp	x1, w0, uxth
  447d88:	b.cc	447ca0 <nftw@plt+0x45120>  // b.lo, b.ul, b.last
  447d8c:	b	447d54 <nftw@plt+0x451d4>
  447d90:	mov	w20, #0x1                   	// #1
  447d94:	str	w20, [x21]
  447d98:	mov	w1, w4
  447d9c:	mov	x0, x19
  447da0:	bl	4478e0 <nftw@plt+0x44d60>
  447da4:	str	x0, [x21, #8]
  447da8:	b	447ba8 <nftw@plt+0x45028>
  447dac:	ldp	x4, x1, [x19]
  447db0:	add	x21, sp, #0x78
  447db4:	ldr	x5, [x19, #16]
  447db8:	mov	x0, x21
  447dbc:	adrp	x3, 47f000 <_obstack_memory_used@@Base+0x1dbb8>
  447dc0:	adrp	x2, 47f000 <_obstack_memory_used@@Base+0x1dbb8>
  447dc4:	add	x3, x3, #0xbe8
  447dc8:	add	x2, x2, #0xb28
  447dcc:	sub	w5, w5, w1
  447dd0:	mov	x1, #0xc8                  	// #200
  447dd4:	bl	402600 <snprintf@plt>
  447dd8:	mov	w20, #0x0                   	// #0
  447ddc:	ldp	x3, x0, [x19, #40]
  447de0:	mov	x1, x21
  447de4:	mov	w2, #0x0                   	// #0
  447de8:	blr	x3
  447dec:	b	447ba8 <nftw@plt+0x45028>
  447df0:	mov	x0, #0x1                   	// #1
  447df4:	mov	w1, #0x2                   	// #2
  447df8:	mov	w20, w0
  447dfc:	str	w1, [x21]
  447e00:	str	x0, [x21, #8]
  447e04:	b	447ba8 <nftw@plt+0x45028>
  447e08:	mov	w0, #0xb                   	// #11
  447e0c:	b	447c88 <nftw@plt+0x45108>
  447e10:	mov	w0, #0x8                   	// #8
  447e14:	str	w0, [x21]
  447e18:	mov	x0, x19
  447e1c:	cbz	w2, 447fb4 <nftw@plt+0x45434>
  447e20:	bl	447808 <nftw@plt+0x44c88>
  447e24:	mov	w20, #0x1                   	// #1
  447e28:	str	x0, [x21, #8]
  447e2c:	b	447ba8 <nftw@plt+0x45028>
  447e30:	mov	x0, x19
  447e34:	str	w2, [sp, #64]
  447e38:	str	w3, [sp, #72]
  447e3c:	str	w4, [sp, #84]
  447e40:	stp	x5, x6, [sp, #88]
  447e44:	str	x7, [sp, #104]
  447e48:	bl	447398 <nftw@plt+0x44818>
  447e4c:	ldr	w2, [sp, #64]
  447e50:	ldr	w3, [sp, #72]
  447e54:	ldr	w4, [sp, #84]
  447e58:	ldp	x5, x6, [sp, #88]
  447e5c:	ldr	x7, [sp, #104]
  447e60:	b	447af8 <nftw@plt+0x44f78>
  447e64:	mov	w0, #0x5                   	// #5
  447e68:	b	447b94 <nftw@plt+0x45014>
  447e6c:	mov	w0, #0x6                   	// #6
  447e70:	str	w0, [x21]
  447e74:	cmp	w3, #0x2
  447e78:	b.ne	447e18 <nftw@plt+0x45298>  // b.any
  447e7c:	mov	w1, w4
  447e80:	mov	x0, x19
  447e84:	mov	w20, #0x1                   	// #1
  447e88:	bl	4478e0 <nftw@plt+0x44d60>
  447e8c:	str	x0, [x21, #8]
  447e90:	b	447ba8 <nftw@plt+0x45028>
  447e94:	mov	w0, #0x2                   	// #2
  447e98:	b	447b94 <nftw@plt+0x45014>
  447e9c:	mov	w0, #0x5                   	// #5
  447ea0:	b	447c38 <nftw@plt+0x450b8>
  447ea4:	mov	w0, #0x5                   	// #5
  447ea8:	b	447cf0 <nftw@plt+0x45170>
  447eac:	mov	w0, #0x5                   	// #5
  447eb0:	b	447d10 <nftw@plt+0x45190>
  447eb4:	stp	x5, x6, [sp, #64]
  447eb8:	mov	x0, x19
  447ebc:	cbz	w2, 448018 <nftw@plt+0x45498>
  447ec0:	bl	447808 <nftw@plt+0x44c88>
  447ec4:	ldp	x5, x6, [sp, #64]
  447ec8:	cmp	x0, x6
  447ecc:	b.cs	4480fc <nftw@plt+0x4557c>  // b.hs, b.nlast
  447ed0:	add	x5, x5, x0
  447ed4:	mov	w20, #0x1                   	// #1
  447ed8:	mov	w0, #0x4                   	// #4
  447edc:	str	w0, [x21]
  447ee0:	str	x5, [x21, #8]
  447ee4:	b	447ba8 <nftw@plt+0x45028>
  447ee8:	ldp	x4, x1, [x19]
  447eec:	add	x21, sp, #0x78
  447ef0:	ldr	x5, [x19, #16]
  447ef4:	adrp	x3, 47f000 <_obstack_memory_used@@Base+0x1dbb8>
  447ef8:	mov	x0, x21
  447efc:	add	x3, x3, #0xb18
  447f00:	adrp	x2, 47f000 <_obstack_memory_used@@Base+0x1dbb8>
  447f04:	sub	w5, w5, w1
  447f08:	add	x2, x2, #0xb28
  447f0c:	mov	x1, #0xc8                  	// #200
  447f10:	bl	402600 <snprintf@plt>
  447f14:	ldp	x3, x0, [x19, #40]
  447f18:	mov	x1, x21
  447f1c:	mov	w2, #0x0                   	// #0
  447f20:	blr	x3
  447f24:	mov	w0, #0x1                   	// #1
  447f28:	str	w0, [x19, #56]
  447f2c:	b	447ba8 <nftw@plt+0x45028>
  447f30:	ldp	x4, x1, [x19]
  447f34:	add	x20, sp, #0x78
  447f38:	mov	x0, x20
  447f3c:	adrp	x3, 47f000 <_obstack_memory_used@@Base+0x1dbb8>
  447f40:	adrp	x2, 47f000 <_obstack_memory_used@@Base+0x1dbb8>
  447f44:	add	x3, x3, #0xb18
  447f48:	add	x2, x2, #0xb28
  447f4c:	sub	w5, w5, w1
  447f50:	mov	x1, #0xc8                  	// #200
  447f54:	bl	402600 <snprintf@plt>
  447f58:	ldp	x3, x0, [x19, #40]
  447f5c:	mov	x1, x20
  447f60:	mov	w2, #0x0                   	// #0
  447f64:	mov	w20, #0x1                   	// #1
  447f68:	blr	x3
  447f6c:	mov	w0, #0x1                   	// #1
  447f70:	str	w0, [x19, #56]
  447f74:	b	447bd8 <nftw@plt+0x45058>
  447f78:	bl	447730 <nftw@plt+0x44bb0>
  447f7c:	mov	w0, w0
  447f80:	ldr	x7, [sp, #64]
  447f84:	b	447b54 <nftw@plt+0x44fd4>
  447f88:	str	x7, [sp, #64]
  447f8c:	mov	x0, x19
  447f90:	cbz	w2, 448028 <nftw@plt+0x454a8>
  447f94:	bl	447808 <nftw@plt+0x44c88>
  447f98:	ldr	x7, [sp, #64]
  447f9c:	str	x0, [x21, #8]
  447fa0:	cbz	x7, 448038 <nftw@plt+0x454b8>
  447fa4:	mov	w0, #0x7                   	// #7
  447fa8:	mov	w20, #0x1                   	// #1
  447fac:	str	w0, [x21]
  447fb0:	b	447ba8 <nftw@plt+0x45028>
  447fb4:	bl	447730 <nftw@plt+0x44bb0>
  447fb8:	mov	w0, w0
  447fbc:	b	447e24 <nftw@plt+0x452a4>
  447fc0:	sub	x0, x0, #0x1
  447fc4:	add	x5, x6, #0x1
  447fc8:	stp	x5, x0, [x19, #16]
  447fcc:	ldrb	w6, [x6]
  447fd0:	cmp	x6, x0
  447fd4:	b.ls	448160 <nftw@plt+0x455e0>  // b.plast
  447fd8:	ldr	w20, [x19, #56]
  447fdc:	cbnz	w20, 447ca8 <nftw@plt+0x45128>
  447fe0:	ldp	x4, x1, [x19]
  447fe4:	add	x21, sp, #0x78
  447fe8:	adrp	x3, 47f000 <_obstack_memory_used@@Base+0x1dbb8>
  447fec:	mov	x0, x21
  447ff0:	add	x3, x3, #0xb18
  447ff4:	adrp	x2, 47f000 <_obstack_memory_used@@Base+0x1dbb8>
  447ff8:	sub	w5, w5, w1
  447ffc:	b	447f08 <nftw@plt+0x45388>
  448000:	ldr	x2, [x19, #16]
  448004:	sub	x1, x1, x0
  448008:	mov	w20, #0x1                   	// #1
  44800c:	add	x0, x2, x0
  448010:	stp	x0, x1, [x19, #16]
  448014:	b	447ba8 <nftw@plt+0x45028>
  448018:	bl	447730 <nftw@plt+0x44bb0>
  44801c:	mov	w0, w0
  448020:	ldp	x5, x6, [sp, #64]
  448024:	b	447ec8 <nftw@plt+0x45348>
  448028:	bl	447730 <nftw@plt+0x44bb0>
  44802c:	mov	w0, w0
  448030:	ldr	x7, [sp, #64]
  448034:	b	447f9c <nftw@plt+0x4541c>
  448038:	mov	w20, #0x1                   	// #1
  44803c:	str	wzr, [x21]
  448040:	b	447ba8 <nftw@plt+0x45028>
  448044:	sub	x1, x20, x0
  448048:	add	x0, x22, x0
  44804c:	stp	x0, x1, [x19, #16]
  448050:	mov	w20, #0x1                   	// #1
  448054:	str	x22, [x21, #8]
  448058:	b	447bdc <nftw@plt+0x4505c>
  44805c:	ldp	x4, x5, [x19]
  448060:	str	x23, [sp, #48]
  448064:	add	x23, sp, #0x78
  448068:	mov	x1, #0xc8                  	// #200
  44806c:	mov	x0, x23
  448070:	adrp	x3, 47f000 <_obstack_memory_used@@Base+0x1dbb8>
  448074:	adrp	x2, 47f000 <_obstack_memory_used@@Base+0x1dbb8>
  448078:	add	x3, x3, #0xb18
  44807c:	add	x2, x2, #0xb28
  448080:	sub	w5, w22, w5
  448084:	bl	402600 <snprintf@plt>
  448088:	ldp	x3, x0, [x19, #40]
  44808c:	mov	x1, x23
  448090:	mov	w2, #0x0                   	// #0
  448094:	mov	x22, #0x0                   	// #0
  448098:	blr	x3
  44809c:	mov	w0, #0x1                   	// #1
  4480a0:	ldr	x23, [sp, #48]
  4480a4:	str	w0, [x19, #56]
  4480a8:	str	x22, [x21, #8]
  4480ac:	b	447bdc <nftw@plt+0x4505c>
  4480b0:	ldp	x4, x5, [x19]
  4480b4:	add	x20, sp, #0x78
  4480b8:	mov	x1, #0xc8                  	// #200
  4480bc:	mov	x0, x20
  4480c0:	adrp	x3, 47f000 <_obstack_memory_used@@Base+0x1dbb8>
  4480c4:	adrp	x2, 47f000 <_obstack_memory_used@@Base+0x1dbb8>
  4480c8:	add	x3, x3, #0xb18
  4480cc:	add	x2, x2, #0xb28
  4480d0:	sub	w5, w6, w5
  4480d4:	bl	402600 <snprintf@plt>
  4480d8:	ldp	x3, x0, [x19, #40]
  4480dc:	mov	x1, x20
  4480e0:	mov	w2, #0x0                   	// #0
  4480e4:	blr	x3
  4480e8:	mov	w0, #0x1                   	// #1
  4480ec:	str	w0, [x19, #56]
  4480f0:	ldr	x6, [x19, #16]
  4480f4:	ldr	x0, [x19, #24]
  4480f8:	b	447c78 <nftw@plt+0x450f8>
  4480fc:	ldp	x4, x1, [x19]
  448100:	add	x20, sp, #0x78
  448104:	ldr	x5, [x19, #16]
  448108:	adrp	x3, 47f000 <_obstack_memory_used@@Base+0x1dbb8>
  44810c:	mov	x0, x20
  448110:	add	x3, x3, #0xba0
  448114:	adrp	x2, 47f000 <_obstack_memory_used@@Base+0x1dbb8>
  448118:	sub	w5, w5, w1
  44811c:	add	x2, x2, #0xb28
  448120:	mov	x1, #0xc8                  	// #200
  448124:	bl	402600 <snprintf@plt>
  448128:	ldp	x3, x0, [x19, #40]
  44812c:	mov	x1, x20
  448130:	mov	w2, #0x0                   	// #0
  448134:	mov	w20, #0x0                   	// #0
  448138:	blr	x3
  44813c:	b	447ba8 <nftw@plt+0x45028>
  448140:	add	x20, sp, #0x78
  448144:	adrp	x3, 47f000 <_obstack_memory_used@@Base+0x1dbb8>
  448148:	mov	x0, x20
  44814c:	add	x3, x3, #0xbc0
  448150:	adrp	x2, 47f000 <_obstack_memory_used@@Base+0x1dbb8>
  448154:	ldp	x4, x1, [x19]
  448158:	ldr	x5, [x19, #16]
  44815c:	b	448118 <nftw@plt+0x45598>
  448160:	sub	x0, x0, x6
  448164:	add	x6, x5, x6
  448168:	b	447c78 <nftw@plt+0x450f8>
  44816c:	nop
  448170:	sub	sp, sp, #0x190
  448174:	stp	x29, x30, [sp, #16]
  448178:	add	x29, sp, #0x10
  44817c:	stp	x27, x28, [sp, #96]
  448180:	mov	x27, x0
  448184:	ldr	x0, [x1, #16]
  448188:	stp	x21, x22, [sp, #48]
  44818c:	stp	x23, x24, [sp, #64]
  448190:	cmp	x0, x2
  448194:	mov	x24, x4
  448198:	str	x3, [sp, #112]
  44819c:	b.hi	4483a0 <nftw@plt+0x45820>  // b.pmore
  4481a0:	stp	x19, x20, [sp, #32]
  4481a4:	mov	x19, x1
  4481a8:	sub	x4, x2, x0
  4481ac:	ldr	x1, [x1, #8]
  4481b0:	cmp	x4, x1
  4481b4:	b.cs	44839c <nftw@plt+0x4581c>  // b.hs, b.nlast
  4481b8:	ldr	x3, [x19]
  4481bc:	add	x0, x0, x1
  4481c0:	sub	x1, x0, x2
  4481c4:	ldr	w5, [x27, #120]
  4481c8:	add	x2, x3, x4
  4481cc:	stp	x2, x1, [sp, #152]
  4481d0:	adrp	x3, 47f000 <_obstack_memory_used@@Base+0x1dbb8>
  4481d4:	ldr	x6, [x27, #56]
  4481d8:	add	x3, x3, #0xa8
  4481dc:	ldr	x1, [sp, #112]
  4481e0:	add	x21, sp, #0x88
  4481e4:	mov	x0, x21
  4481e8:	stp	x3, x6, [sp, #136]
  4481ec:	str	w5, [sp, #168]
  4481f0:	str	x1, [sp, #176]
  4481f4:	str	x24, [sp, #184]
  4481f8:	str	wzr, [sp, #192]
  4481fc:	bl	447398 <nftw@plt+0x44818>
  448200:	cbz	x0, 448414 <nftw@plt+0x45894>
  448204:	ldp	x4, x5, [x19, #88]
  448208:	stp	x25, x26, [sp, #80]
  44820c:	sub	x1, x0, #0x1
  448210:	cmp	x4, x1
  448214:	b.ls	448230 <nftw@plt+0x456b0>  // b.plast
  448218:	lsl	x1, x0, #5
  44821c:	sub	x1, x1, #0x20
  448220:	add	x26, x5, x1
  448224:	ldr	x1, [x5, x1]
  448228:	cmp	x0, x1
  44822c:	b.eq	44825c <nftw@plt+0x456dc>  // b.none
  448230:	mov	x3, #0x0                   	// #0
  448234:	add	x1, x4, x3
  448238:	cmp	x4, x3
  44823c:	b.ls	448324 <nftw@plt+0x457a4>  // b.plast
  448240:	lsr	x1, x1, #1
  448244:	lsl	x2, x1, #5
  448248:	add	x26, x5, x2
  44824c:	ldr	x2, [x5, x2]
  448250:	cmp	x0, x2
  448254:	b.cc	448364 <nftw@plt+0x457e4>  // b.lo, b.ul, b.last
  448258:	b.hi	448314 <nftw@plt+0x45794>  // b.pmore
  44825c:	ldr	x0, [x26, #16]
  448260:	cbz	x0, 4483ec <nftw@plt+0x4586c>
  448264:	add	x20, sp, #0xc8
  448268:	mov	x28, #0x0                   	// #0
  44826c:	add	x0, x20, #0x8
  448270:	mov	x22, #0x0                   	// #0
  448274:	mov	w25, #0x2007                	// #8199
  448278:	str	x0, [sp, #120]
  44827c:	b	4482a0 <nftw@plt+0x45720>
  448280:	cmp	w2, #0x3
  448284:	b.ne	448290 <nftw@plt+0x45710>  // b.any
  448288:	cbz	x22, 4483d8 <nftw@plt+0x45858>
  44828c:	nop
  448290:	ldr	x0, [x26, #16]
  448294:	add	x28, x28, #0x1
  448298:	cmp	x0, x28
  44829c:	b.ls	448340 <nftw@plt+0x457c0>  // b.plast
  4482a0:	ldr	x8, [x26, #24]
  4482a4:	lsl	x23, x28, #3
  4482a8:	ldp	x5, x6, [x27, #104]
  4482ac:	add	x8, x8, x23
  4482b0:	ldp	w3, w2, [x19, #40]
  4482b4:	mov	x1, x21
  4482b8:	ldr	w4, [x19, #48]
  4482bc:	ldr	w0, [x8, #4]
  4482c0:	ldr	x7, [x27, #8]
  4482c4:	str	x20, [sp]
  4482c8:	bl	447ad8 <nftw@plt+0x44f58>
  4482cc:	cbz	w0, 4483ec <nftw@plt+0x4586c>
  4482d0:	ldr	x0, [x26, #24]
  4482d4:	add	x1, x0, x23
  4482d8:	ldr	w2, [x0, x23]
  4482dc:	cmp	w2, #0x47
  4482e0:	b.eq	44836c <nftw@plt+0x457ec>  // b.none
  4482e4:	b.ls	448280 <nftw@plt+0x45700>  // b.plast
  4482e8:	cmp	w2, #0x6e
  4482ec:	b.eq	4482f8 <nftw@plt+0x45778>  // b.none
  4482f0:	cmp	w2, w25
  4482f4:	b.ne	448290 <nftw@plt+0x45710>  // b.any
  4482f8:	ldr	w0, [sp, #200]
  4482fc:	cmp	w0, #0x4
  448300:	b.ne	448290 <nftw@plt+0x45710>  // b.any
  448304:	ldp	x19, x20, [sp, #32]
  448308:	ldp	x25, x26, [sp, #80]
  44830c:	ldr	x22, [sp, #208]
  448310:	b	4483bc <nftw@plt+0x4583c>
  448314:	add	x3, x1, #0x1
  448318:	add	x1, x4, x3
  44831c:	cmp	x4, x3
  448320:	b.hi	448240 <nftw@plt+0x456c0>  // b.pmore
  448324:	ldr	x3, [sp, #112]
  448328:	adrp	x1, 47f000 <_obstack_memory_used@@Base+0x1dbb8>
  44832c:	mov	x0, x24
  448330:	add	x1, x1, #0xc60
  448334:	mov	x22, #0x0                   	// #0
  448338:	mov	w2, #0x0                   	// #0
  44833c:	blr	x3
  448340:	mov	x0, x22
  448344:	ldp	x29, x30, [sp, #16]
  448348:	ldp	x19, x20, [sp, #32]
  44834c:	ldp	x21, x22, [sp, #48]
  448350:	ldp	x23, x24, [sp, #64]
  448354:	ldp	x25, x26, [sp, #80]
  448358:	ldp	x27, x28, [sp, #96]
  44835c:	add	sp, sp, #0x190
  448360:	ret
  448364:	mov	x4, x1
  448368:	b	448234 <nftw@plt+0x456b4>
  44836c:	ldr	w0, [x1, #4]
  448370:	cmp	w0, #0x20
  448374:	b.eq	448290 <nftw@plt+0x45710>  // b.none
  448378:	ldp	x4, x3, [sp, #112]
  44837c:	mov	x5, x24
  448380:	mov	x2, x20
  448384:	mov	x1, x19
  448388:	mov	x0, x27
  44838c:	bl	448478 <nftw@plt+0x458f8>
  448390:	cmp	x0, #0x0
  448394:	csel	x22, x22, x0, eq  // eq = none
  448398:	b	448290 <nftw@plt+0x45710>
  44839c:	ldp	x19, x20, [sp, #32]
  4483a0:	adrp	x1, 47f000 <_obstack_memory_used@@Base+0x1dbb8>
  4483a4:	ldr	x3, [sp, #112]
  4483a8:	mov	x0, x24
  4483ac:	add	x1, x1, #0xc00
  4483b0:	mov	w2, #0x0                   	// #0
  4483b4:	mov	x22, #0x0                   	// #0
  4483b8:	blr	x3
  4483bc:	mov	x0, x22
  4483c0:	ldp	x29, x30, [sp, #16]
  4483c4:	ldp	x21, x22, [sp, #48]
  4483c8:	ldp	x23, x24, [sp, #64]
  4483cc:	ldp	x27, x28, [sp, #96]
  4483d0:	add	sp, sp, #0x190
  4483d4:	ret
  4483d8:	ldr	w0, [sp, #200]
  4483dc:	ldr	x22, [sp, #208]
  4483e0:	cmp	w0, #0x4
  4483e4:	csel	x22, x22, xzr, eq  // eq = none
  4483e8:	b	448290 <nftw@plt+0x45710>
  4483ec:	mov	x22, #0x0                   	// #0
  4483f0:	mov	x0, x22
  4483f4:	ldp	x29, x30, [sp, #16]
  4483f8:	ldp	x19, x20, [sp, #32]
  4483fc:	ldp	x21, x22, [sp, #48]
  448400:	ldp	x23, x24, [sp, #64]
  448404:	ldp	x25, x26, [sp, #80]
  448408:	ldp	x27, x28, [sp, #96]
  44840c:	add	sp, sp, #0x190
  448410:	ret
  448414:	ldp	x4, x1, [sp, #136]
  448418:	add	x19, sp, #0xc8
  44841c:	ldr	x5, [sp, #152]
  448420:	mov	x0, x19
  448424:	adrp	x3, 47f000 <_obstack_memory_used@@Base+0x1dbb8>
  448428:	adrp	x2, 47f000 <_obstack_memory_used@@Base+0x1dbb8>
  44842c:	add	x3, x3, #0xc30
  448430:	add	x2, x2, #0xb28
  448434:	sub	w5, w5, w1
  448438:	mov	x1, #0xc8                  	// #200
  44843c:	bl	402600 <snprintf@plt>
  448440:	mov	x22, #0x0                   	// #0
  448444:	ldp	x3, x0, [sp, #176]
  448448:	mov	x1, x19
  44844c:	mov	w2, #0x0                   	// #0
  448450:	blr	x3
  448454:	mov	x0, x22
  448458:	ldp	x29, x30, [sp, #16]
  44845c:	ldp	x19, x20, [sp, #32]
  448460:	ldp	x21, x22, [sp, #48]
  448464:	ldp	x23, x24, [sp, #64]
  448468:	ldp	x27, x28, [sp, #96]
  44846c:	add	sp, sp, #0x190
  448470:	ret
  448474:	nop
  448478:	ldr	w2, [x2]
  44847c:	mov	x6, x3
  448480:	mov	x7, x0
  448484:	mov	x3, x4
  448488:	cmp	w2, #0x6
  44848c:	mov	x4, x5
  448490:	b.eq	4484f8 <nftw@plt+0x45978>  // b.none
  448494:	cmp	w2, #0x2
  448498:	ccmp	w2, #0x5, #0x4, ne  // ne = any
  44849c:	b.eq	448550 <nftw@plt+0x459d0>  // b.none
  4484a0:	cmp	w2, #0x7
  4484a4:	b.ne	4484f0 <nftw@plt+0x45970>  // b.any
  4484a8:	ldr	x0, [x0, #8]
  4484ac:	mov	x5, #0x0                   	// #0
  4484b0:	ldr	x2, [x6]
  4484b4:	ldp	x9, x7, [x0, #40]
  4484b8:	add	x6, x7, x5
  4484bc:	cmp	x7, x5
  4484c0:	b.ls	4484f0 <nftw@plt+0x45970>  // b.plast
  4484c4:	lsr	x6, x6, #1
  4484c8:	ldr	x1, [x9, x6, lsl #3]
  4484cc:	ldr	x8, [x1, #24]
  4484d0:	cmp	x2, x8
  4484d4:	b.cc	448548 <nftw@plt+0x459c8>  // b.lo, b.ul, b.last
  4484d8:	ldr	x10, [x1, #32]
  4484dc:	add	x5, x6, #0x1
  4484e0:	cmp	x2, x10
  4484e4:	b.cs	4484b8 <nftw@plt+0x45938>  // b.hs, b.nlast
  4484e8:	sub	x2, x2, x8
  4484ec:	b	448170 <nftw@plt+0x455f0>
  4484f0:	mov	x0, #0x0                   	// #0
  4484f4:	ret
  4484f8:	ldp	x9, x5, [x7, #40]
  4484fc:	mov	x0, #0x0                   	// #0
  448500:	ldr	x2, [x6]
  448504:	add	x6, x5, x0
  448508:	cmp	x5, x0
  44850c:	b.ls	4484f0 <nftw@plt+0x45970>  // b.plast
  448510:	lsr	x6, x6, #1
  448514:	ldr	x1, [x9, x6, lsl #3]
  448518:	ldr	x8, [x1, #24]
  44851c:	cmp	x2, x8
  448520:	b.cc	448540 <nftw@plt+0x459c0>  // b.lo, b.ul, b.last
  448524:	ldr	x10, [x1, #32]
  448528:	add	x0, x6, #0x1
  44852c:	cmp	x2, x10
  448530:	b.cs	448504 <nftw@plt+0x45984>  // b.hs, b.nlast
  448534:	sub	x2, x2, x8
  448538:	mov	x0, x7
  44853c:	b	448170 <nftw@plt+0x455f0>
  448540:	mov	x5, x6
  448544:	b	448504 <nftw@plt+0x45984>
  448548:	mov	x7, x6
  44854c:	b	4484b8 <nftw@plt+0x45938>
  448550:	ldr	x2, [x6]
  448554:	b	448170 <nftw@plt+0x455f0>
  448558:	sub	sp, sp, #0x120
  44855c:	stp	x29, x30, [sp, #48]
  448560:	add	x29, sp, #0x30
  448564:	stp	x27, x28, [sp, #128]
  448568:	ldr	x27, [sp, #312]
  44856c:	stp	x23, x24, [sp, #96]
  448570:	ldr	x23, [sp, #288]
  448574:	mov	x28, x27
  448578:	stp	x19, x20, [sp, #64]
  44857c:	mov	x19, x2
  448580:	add	x20, sp, #0xe0
  448584:	stp	x21, x22, [sp, #80]
  448588:	mov	x22, x3
  44858c:	mov	x21, x4
  448590:	stp	x25, x26, [sp, #112]
  448594:	stp	x1, x6, [sp, #184]
  448598:	stp	x0, x5, [sp, #200]
  44859c:	str	w7, [sp, #220]
  4485a0:	ldr	x0, [x19, #24]
  4485a4:	cbz	x0, 448950 <nftw@plt+0x45dd0>
  4485a8:	mov	x0, x19
  4485ac:	bl	447398 <nftw@plt+0x44818>
  4485b0:	cbz	x0, 448950 <nftw@plt+0x45dd0>
  4485b4:	ldp	x4, x5, [x28, #88]
  4485b8:	sub	x1, x0, #0x1
  4485bc:	cmp	x4, x1
  4485c0:	b.ls	4485dc <nftw@plt+0x45a5c>  // b.plast
  4485c4:	lsl	x1, x0, #5
  4485c8:	sub	x1, x1, #0x20
  4485cc:	add	x25, x5, x1
  4485d0:	ldr	x1, [x5, x1]
  4485d4:	cmp	x0, x1
  4485d8:	b.eq	448608 <nftw@plt+0x45a88>  // b.none
  4485dc:	mov	x3, #0x0                   	// #0
  4485e0:	add	x1, x4, x3
  4485e4:	cmp	x4, x3
  4485e8:	b.ls	44887c <nftw@plt+0x45cfc>  // b.plast
  4485ec:	lsr	x1, x1, #1
  4485f0:	lsl	x2, x1, #5
  4485f4:	add	x25, x5, x2
  4485f8:	ldr	x2, [x5, x2]
  4485fc:	cmp	x0, x2
  448600:	b.cc	448898 <nftw@plt+0x45d18>  // b.lo, b.ul, b.last
  448604:	b.hi	44886c <nftw@plt+0x45cec>  // b.pmore
  448608:	ldr	x0, [sp, #328]
  44860c:	cbz	x0, 44861c <nftw@plt+0x45a9c>
  448610:	mov	x1, x0
  448614:	ldr	w0, [x25, #8]
  448618:	str	w0, [x1]
  44861c:	ldr	x0, [x25, #16]
  448620:	cbz	x0, 4487d0 <nftw@plt+0x45c50>
  448624:	ldr	x1, [x25, #24]
  448628:	mov	x27, #0x0                   	// #0
  44862c:	mov	x24, #0x0                   	// #0
  448630:	str	wzr, [sp, #144]
  448634:	mov	x2, x1
  448638:	str	wzr, [sp, #152]
  44863c:	stp	xzr, xzr, [sp, #160]
  448640:	str	wzr, [sp, #180]
  448644:	str	wzr, [sp, #216]
  448648:	b	448680 <nftw@plt+0x45b00>
  44864c:	cmp	w0, #0x10
  448650:	b.eq	4488cc <nftw@plt+0x45d4c>  // b.none
  448654:	cmp	w0, #0x11
  448658:	b.ne	448840 <nftw@plt+0x45cc0>  // b.any
  44865c:	ldr	w0, [sp, #224]
  448660:	cmp	w0, #0x1
  448664:	b.ne	448670 <nftw@plt+0x45af0>  // b.any
  448668:	ldr	x24, [sp, #232]
  44866c:	str	w0, [sp, #180]
  448670:	ldr	x0, [x25, #16]
  448674:	add	x27, x27, #0x1
  448678:	cmp	x0, x27
  44867c:	b.ls	448708 <nftw@plt+0x45b88>  // b.plast
  448680:	lsl	x26, x27, #3
  448684:	ldr	w4, [x28, #48]
  448688:	add	x0, x2, x26
  44868c:	mov	x7, x23
  448690:	ldp	w3, w2, [x28, #40]
  448694:	mov	x6, x21
  448698:	ldr	w0, [x0, #4]
  44869c:	mov	x5, x22
  4486a0:	str	x20, [sp]
  4486a4:	mov	x1, x19
  4486a8:	bl	447ad8 <nftw@plt+0x44f58>
  4486ac:	cbz	w0, 448820 <nftw@plt+0x45ca0>
  4486b0:	ldr	x2, [x25, #24]
  4486b4:	ldr	w0, [x2, x26]
  4486b8:	cmp	w0, #0x12
  4486bc:	b.eq	4488a0 <nftw@plt+0x45d20>  // b.none
  4486c0:	b.ls	44864c <nftw@plt+0x45acc>  // b.plast
  4486c4:	cmp	w0, #0x1b
  4486c8:	b.eq	4488f4 <nftw@plt+0x45d74>  // b.none
  4486cc:	cmp	w0, #0x55
  4486d0:	b.ne	448670 <nftw@plt+0x45af0>  // b.any
  4486d4:	ldr	w0, [sp, #224]
  4486d8:	cmp	w0, #0x2
  4486dc:	ccmp	w0, #0x8, #0x4, ne  // ne = any
  4486e0:	b.ne	448670 <nftw@plt+0x45af0>  // b.any
  4486e4:	mov	w0, #0x1                   	// #1
  4486e8:	str	w0, [sp, #144]
  4486ec:	ldr	x0, [sp, #232]
  4486f0:	str	x0, [sp, #168]
  4486f4:	ldr	x0, [x25, #16]
  4486f8:	add	x27, x27, #0x1
  4486fc:	cmp	x0, x27
  448700:	b.hi	448680 <nftw@plt+0x45b00>  // b.pmore
  448704:	nop
  448708:	ldr	w1, [x25, #8]
  44870c:	cmp	w1, #0x2e
  448710:	ccmp	w1, #0x11, #0x4, ne  // ne = any
  448714:	b.ne	4487d0 <nftw@plt+0x45c50>  // b.any
  448718:	ldr	w0, [sp, #144]
  44871c:	cbnz	w0, 448958 <nftw@plt+0x45dd8>
  448720:	ldr	w2, [sp, #152]
  448724:	ldr	w0, [sp, #180]
  448728:	tst	w0, w2
  44872c:	b.eq	4487d0 <nftw@plt+0x45c50>  // b.none
  448730:	ldr	x0, [sp, #320]
  448734:	ldr	x3, [sp, #160]
  448738:	ldr	w2, [sp, #216]
  44873c:	ldr	x0, [x0, #24]
  448740:	cmp	w2, #0x0
  448744:	ldr	x4, [sp, #184]
  448748:	add	x2, x3, x24
  44874c:	csel	x2, x2, x3, ne  // ne = any
  448750:	add	x24, x24, x4
  448754:	add	x26, x2, x4
  448758:	cbz	x0, 44878c <nftw@plt+0x45c0c>
  44875c:	ldr	x2, [sp, #320]
  448760:	add	x0, x0, x0, lsl #1
  448764:	lsl	x0, x0, #3
  448768:	ldr	x2, [x2]
  44876c:	sub	x0, x0, #0x18
  448770:	add	x0, x2, x0
  448774:	ldr	x2, [x0, #8]
  448778:	cmp	x24, x2
  44877c:	b.eq	448918 <nftw@plt+0x45d98>  // b.none
  448780:	add	x3, x2, #0x1
  448784:	cmp	x24, x3
  448788:	b.eq	448918 <nftw@plt+0x45d98>  // b.none
  44878c:	ldp	x2, x3, [sp, #296]
  448790:	mov	x1, #0x18                  	// #24
  448794:	ldr	x0, [sp, #200]
  448798:	ldr	x4, [sp, #320]
  44879c:	bl	442df8 <nftw@plt+0x40278>
  4487a0:	cbz	x0, 44881c <nftw@plt+0x45c9c>
  4487a4:	ldr	x1, [sp, #320]
  4487a8:	ldr	x2, [x1, #24]
  4487ac:	ldr	w1, [x25, #8]
  4487b0:	stp	x24, x26, [x0]
  4487b4:	add	x2, x2, #0x1
  4487b8:	str	x28, [x0, #16]
  4487bc:	ldr	x0, [sp, #320]
  4487c0:	str	x2, [x0, #24]
  4487c4:	cmp	w1, #0x11
  4487c8:	b.eq	448950 <nftw@plt+0x45dd0>  // b.none
  4487cc:	nop
  4487d0:	ldr	w0, [x25, #12]
  4487d4:	cbz	w0, 4485a0 <nftw@plt+0x45a20>
  4487d8:	ldr	x0, [sp, #296]
  4487dc:	stp	x23, x0, [sp]
  4487e0:	ldr	w7, [sp, #220]
  4487e4:	ldp	x1, x6, [sp, #184]
  4487e8:	str	x28, [sp, #24]
  4487ec:	ldr	x0, [sp, #304]
  4487f0:	str	x0, [sp, #16]
  4487f4:	ldr	x0, [sp, #320]
  4487f8:	str	x0, [sp, #32]
  4487fc:	ldr	x0, [sp, #200]
  448800:	str	xzr, [sp, #40]
  448804:	ldr	x5, [sp, #208]
  448808:	mov	x4, x21
  44880c:	mov	x3, x22
  448810:	mov	x2, x19
  448814:	bl	448558 <nftw@plt+0x459d8>
  448818:	cbnz	w0, 4485a0 <nftw@plt+0x45a20>
  44881c:	mov	w0, #0x0                   	// #0
  448820:	ldp	x29, x30, [sp, #48]
  448824:	ldp	x19, x20, [sp, #64]
  448828:	ldp	x21, x22, [sp, #80]
  44882c:	ldp	x23, x24, [sp, #96]
  448830:	ldp	x25, x26, [sp, #112]
  448834:	ldp	x27, x28, [sp, #128]
  448838:	add	sp, sp, #0x120
  44883c:	ret
  448840:	cmp	w0, #0x3
  448844:	b.ne	448670 <nftw@plt+0x45af0>  // b.any
  448848:	ldr	w0, [x25, #8]
  44884c:	cmp	w0, #0x11
  448850:	b.ne	448670 <nftw@plt+0x45af0>  // b.any
  448854:	ldr	w0, [sp, #224]
  448858:	cmp	w0, #0x4
  44885c:	b.ne	448670 <nftw@plt+0x45af0>  // b.any
  448860:	ldr	x0, [sp, #232]
  448864:	str	x0, [x28, #64]
  448868:	b	448670 <nftw@plt+0x45af0>
  44886c:	add	x3, x1, #0x1
  448870:	add	x1, x4, x3
  448874:	cmp	x4, x3
  448878:	b.hi	4485ec <nftw@plt+0x45a6c>  // b.pmore
  44887c:	ldp	x3, x0, [sp, #296]
  448880:	adrp	x1, 47f000 <_obstack_memory_used@@Base+0x1dbb8>
  448884:	mov	w2, #0x0                   	// #0
  448888:	add	x1, x1, #0xc60
  44888c:	blr	x3
  448890:	mov	w0, #0x0                   	// #0
  448894:	b	448820 <nftw@plt+0x45ca0>
  448898:	mov	x4, x1
  44889c:	b	4485e0 <nftw@plt+0x45a60>
  4488a0:	ldr	w0, [sp, #224]
  4488a4:	cmp	w0, #0x1
  4488a8:	b.eq	4488bc <nftw@plt+0x45d3c>  // b.none
  4488ac:	cmp	w0, #0x2
  4488b0:	b.ne	448670 <nftw@plt+0x45af0>  // b.any
  4488b4:	mov	w0, #0x1                   	// #1
  4488b8:	str	w0, [sp, #216]
  4488bc:	str	w0, [sp, #152]
  4488c0:	ldr	x0, [sp, #232]
  4488c4:	str	x0, [sp, #160]
  4488c8:	b	448670 <nftw@plt+0x45af0>
  4488cc:	ldr	w0, [x25, #8]
  4488d0:	cmp	w0, #0x11
  4488d4:	b.ne	448670 <nftw@plt+0x45af0>  // b.any
  4488d8:	ldr	w0, [sp, #224]
  4488dc:	cmp	w0, #0x2
  4488e0:	ccmp	w0, #0x8, #0x4, ne  // ne = any
  4488e4:	b.ne	448670 <nftw@plt+0x45af0>  // b.any
  4488e8:	ldr	x0, [sp, #232]
  4488ec:	str	x0, [x28, #56]
  4488f0:	b	448670 <nftw@plt+0x45af0>
  4488f4:	ldr	w0, [x25, #8]
  4488f8:	cmp	w0, #0x11
  4488fc:	b.ne	448670 <nftw@plt+0x45af0>  // b.any
  448900:	ldr	w0, [sp, #224]
  448904:	cmp	w0, #0x4
  448908:	b.ne	448670 <nftw@plt+0x45af0>  // b.any
  44890c:	ldr	x0, [sp, #232]
  448910:	str	x0, [x28, #72]
  448914:	b	448670 <nftw@plt+0x45af0>
  448918:	ldr	x3, [x0, #16]
  44891c:	cmp	x28, x3
  448920:	b.ne	44878c <nftw@plt+0x45c0c>  // b.any
  448924:	cmp	x26, x2
  448928:	b.ls	4487c4 <nftw@plt+0x45c44>  // b.plast
  44892c:	str	x26, [x0, #8]
  448930:	b	4487c4 <nftw@plt+0x45c44>
  448934:	ldr	w0, [sp, #280]
  448938:	ldp	x19, x22, [sp, #144]
  44893c:	ldr	x21, [sp, #160]
  448940:	cbnz	w0, 44881c <nftw@plt+0x45c9c>
  448944:	ldr	w0, [x25, #8]
  448948:	cmp	w0, #0x11
  44894c:	b.ne	4487d0 <nftw@plt+0x45c50>  // b.any
  448950:	mov	w0, #0x1                   	// #1
  448954:	b	448820 <nftw@plt+0x45ca0>
  448958:	ldr	x0, [sp, #168]
  44895c:	ldr	x1, [sp, #192]
  448960:	cmp	x0, x1
  448964:	b.cs	448ae4 <nftw@plt+0x45f64>  // b.hs, b.nlast
  448968:	ldp	x27, x2, [sp, #200]
  44896c:	mov	x3, x0
  448970:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x1dbb8>
  448974:	add	x0, x0, #0xd8
  448978:	sub	x26, x1, x3
  44897c:	stp	x0, x2, [sp, #224]
  448980:	ldr	w0, [sp, #220]
  448984:	stp	x19, x22, [sp, #144]
  448988:	add	x1, x2, x3
  44898c:	stp	x1, x26, [sp, #240]
  448990:	str	w0, [sp, #256]
  448994:	ldr	x26, [sp, #184]
  448998:	str	x21, [sp, #160]
  44899c:	ldr	x0, [sp, #296]
  4489a0:	str	x0, [sp, #264]
  4489a4:	ldr	x19, [sp, #320]
  4489a8:	str	wzr, [sp, #280]
  4489ac:	ldr	x0, [sp, #304]
  4489b0:	str	x0, [sp, #272]
  4489b4:	nop
  4489b8:	ldr	w1, [x28, #48]
  4489bc:	mov	x0, x20
  4489c0:	bl	4478e0 <nftw@plt+0x44d60>
  4489c4:	mov	x21, x0
  4489c8:	ldr	w1, [x28, #48]
  4489cc:	mov	x0, x20
  4489d0:	bl	4478e0 <nftw@plt+0x44d60>
  4489d4:	orr	x1, x21, x0
  4489d8:	cbz	x1, 448934 <nftw@plt+0x45db4>
  4489dc:	ldr	w1, [x28, #48]
  4489e0:	cmp	w1, #0x4
  4489e4:	b.eq	448ac8 <nftw@plt+0x45f48>  // b.none
  4489e8:	b.gt	448a20 <nftw@plt+0x45ea0>
  4489ec:	cmp	w1, #0x1
  4489f0:	b.eq	448ad8 <nftw@plt+0x45f58>  // b.none
  4489f4:	cmp	w1, #0x2
  4489f8:	b.ne	448a38 <nftw@plt+0x45eb8>  // b.any
  4489fc:	mov	x1, #0xffff                	// #65535
  448a00:	cmp	x21, x1
  448a04:	cset	w1, eq  // eq = none
  448a08:	cbz	w1, 448a38 <nftw@plt+0x45eb8>
  448a0c:	mov	x24, x0
  448a10:	ldr	w0, [sp, #280]
  448a14:	cbz	w0, 4489b8 <nftw@plt+0x45e38>
  448a18:	mov	w0, #0x0                   	// #0
  448a1c:	b	448820 <nftw@plt+0x45ca0>
  448a20:	cmp	w1, #0x8
  448a24:	b.ne	448a38 <nftw@plt+0x45eb8>  // b.any
  448a28:	cmn	x21, #0x1
  448a2c:	cset	w1, eq  // eq = none
  448a30:	cbnz	w1, 448a0c <nftw@plt+0x45e8c>
  448a34:	nop
  448a38:	ldr	x1, [x19, #24]
  448a3c:	add	x2, x21, x24
  448a40:	add	x0, x0, x24
  448a44:	add	x22, x2, x26
  448a48:	add	x21, x0, x26
  448a4c:	cbz	x1, 448a7c <nftw@plt+0x45efc>
  448a50:	add	x0, x1, x1, lsl #1
  448a54:	ldr	x1, [x19]
  448a58:	lsl	x0, x0, #3
  448a5c:	sub	x0, x0, #0x18
  448a60:	add	x0, x1, x0
  448a64:	ldr	x1, [x0, #8]
  448a68:	cmp	x22, x1
  448a6c:	b.eq	448aac <nftw@plt+0x45f2c>  // b.none
  448a70:	add	x2, x1, #0x1
  448a74:	cmp	x22, x2
  448a78:	b.eq	448aac <nftw@plt+0x45f2c>  // b.none
  448a7c:	ldp	x2, x3, [sp, #296]
  448a80:	mov	x4, x19
  448a84:	mov	x0, x27
  448a88:	mov	x1, #0x18                  	// #24
  448a8c:	bl	442df8 <nftw@plt+0x40278>
  448a90:	cbz	x0, 44881c <nftw@plt+0x45c9c>
  448a94:	ldr	x1, [x19, #24]
  448a98:	stp	x22, x21, [x0]
  448a9c:	str	x28, [x0, #16]
  448aa0:	add	x0, x1, #0x1
  448aa4:	str	x0, [x19, #24]
  448aa8:	b	448a10 <nftw@plt+0x45e90>
  448aac:	ldr	x2, [x0, #16]
  448ab0:	cmp	x28, x2
  448ab4:	b.ne	448a7c <nftw@plt+0x45efc>  // b.any
  448ab8:	cmp	x21, x1
  448abc:	b.ls	448a10 <nftw@plt+0x45e90>  // b.plast
  448ac0:	str	x21, [x0, #8]
  448ac4:	b	448a10 <nftw@plt+0x45e90>
  448ac8:	mov	x1, #0xffffffff            	// #4294967295
  448acc:	cmp	x21, x1
  448ad0:	cset	w1, eq  // eq = none
  448ad4:	b	448a08 <nftw@plt+0x45e88>
  448ad8:	cmp	x21, #0xff
  448adc:	cset	w1, eq  // eq = none
  448ae0:	b	448a08 <nftw@plt+0x45e88>
  448ae4:	ldp	x3, x0, [sp, #296]
  448ae8:	adrp	x1, 47f000 <_obstack_memory_used@@Base+0x1dbb8>
  448aec:	mov	w2, #0x0                   	// #0
  448af0:	add	x1, x1, #0xc80
  448af4:	blr	x3
  448af8:	mov	w0, #0x0                   	// #0
  448afc:	b	448820 <nftw@plt+0x45ca0>
  448b00:	sub	sp, sp, #0x1d0
  448b04:	stp	x29, x30, [sp, #16]
  448b08:	add	x29, sp, #0x10
  448b0c:	stp	x23, x24, [sp, #64]
  448b10:	mov	x24, x4
  448b14:	ldr	x4, [x4, #24]
  448b18:	stp	x6, x7, [sp, #136]
  448b1c:	stp	x0, x3, [sp, #176]
  448b20:	str	x5, [sp, #216]
  448b24:	cbz	x4, 448e18 <nftw@plt+0x46298>
  448b28:	stp	x27, x28, [sp, #96]
  448b2c:	mov	x27, x1
  448b30:	mov	x28, x2
  448b34:	stp	x25, x26, [sp, #80]
  448b38:	add	x26, sp, #0xf8
  448b3c:	mov	x25, x27
  448b40:	add	x1, x26, #0x8
  448b44:	adrp	x0, 472000 <_obstack_memory_used@@Base+0x10bb8>
  448b48:	add	x0, x0, #0x5c0
  448b4c:	stp	x19, x20, [sp, #32]
  448b50:	stp	x21, x22, [sp, #48]
  448b54:	stp	x1, x0, [sp, #224]
  448b58:	mov	x0, x24
  448b5c:	bl	447398 <nftw@plt+0x44818>
  448b60:	cbz	x0, 448e08 <nftw@plt+0x46288>
  448b64:	ldp	x4, x5, [x28, #88]
  448b68:	sub	x1, x0, #0x1
  448b6c:	cmp	x4, x1
  448b70:	b.ls	448b8c <nftw@plt+0x4600c>  // b.plast
  448b74:	lsl	x1, x0, #5
  448b78:	sub	x1, x1, #0x20
  448b7c:	add	x23, x5, x1
  448b80:	ldr	x1, [x5, x1]
  448b84:	cmp	x0, x1
  448b88:	b.eq	448bb8 <nftw@plt+0x46038>  // b.none
  448b8c:	mov	x3, #0x0                   	// #0
  448b90:	add	x1, x4, x3
  448b94:	cmp	x4, x3
  448b98:	b.ls	448edc <nftw@plt+0x4635c>  // b.plast
  448b9c:	lsr	x1, x1, #1
  448ba0:	lsl	x2, x1, #5
  448ba4:	add	x23, x5, x2
  448ba8:	ldr	x2, [x5, x2]
  448bac:	cmp	x0, x2
  448bb0:	b.cc	448f9c <nftw@plt+0x4641c>  // b.lo, b.ul, b.last
  448bb4:	b.hi	448ecc <nftw@plt+0x4634c>  // b.pmore
  448bb8:	ldr	w0, [x23, #8]
  448bbc:	cmp	w0, #0x2e
  448bc0:	ccmp	w0, #0x3, #0x4, ne  // ne = any
  448bc4:	b.ne	449004 <nftw@plt+0x46484>  // b.any
  448bc8:	cmp	w0, #0x1d
  448bcc:	ldp	x0, x1, [sp, #464]
  448bd0:	csel	x0, x0, x1, ne  // ne = any
  448bd4:	str	x0, [sp, #208]
  448bd8:	ldp	x2, x3, [sp, #136]
  448bdc:	mov	x1, #0x28                  	// #40
  448be0:	ldr	x0, [sp, #176]
  448be4:	bl	442c10 <nftw@plt+0x40090>
  448be8:	mov	x21, x0
  448bec:	cbz	x0, 448ea8 <nftw@plt+0x46328>
  448bf0:	mov	w19, #0x1                   	// #1
  448bf4:	stp	xzr, xzr, [x0]
  448bf8:	stp	xzr, xzr, [x0, #16]
  448bfc:	str	xzr, [x0, #32]
  448c00:	ldr	x0, [x23, #16]
  448c04:	str	x0, [sp, #120]
  448c08:	cbz	x0, 449240 <nftw@plt+0x466c0>
  448c0c:	mov	x22, x28
  448c10:	mov	x28, x25
  448c14:	mov	x27, #0x0                   	// #0
  448c18:	mov	w20, #0x2007                	// #8199
  448c1c:	str	xzr, [sp, #120]
  448c20:	str	wzr, [sp, #128]
  448c24:	str	wzr, [sp, #152]
  448c28:	str	wzr, [sp, #160]
  448c2c:	str	xzr, [sp, #168]
  448c30:	str	xzr, [sp, #192]
  448c34:	stp	wzr, wzr, [sp, #200]
  448c38:	ldr	x0, [x23, #24]
  448c3c:	lsl	x25, x27, #3
  448c40:	ldp	x5, x6, [x28, #104]
  448c44:	add	x0, x0, x25
  448c48:	ldp	w3, w2, [x22, #40]
  448c4c:	mov	x1, x24
  448c50:	ldr	w4, [x22, #48]
  448c54:	ldr	w0, [x0, #4]
  448c58:	ldr	x7, [x28, #8]
  448c5c:	str	x26, [sp]
  448c60:	bl	447ad8 <nftw@plt+0x44f58>
  448c64:	cbz	w0, 448ea8 <nftw@plt+0x46328>
  448c68:	ldr	w0, [x23, #8]
  448c6c:	cmp	w0, #0x11
  448c70:	b.eq	448e20 <nftw@plt+0x462a0>  // b.none
  448c74:	cbz	w19, 448cb8 <nftw@plt+0x46138>
  448c78:	ldr	x0, [x23, #24]
  448c7c:	add	x1, x0, x25
  448c80:	ldr	w0, [x0, x25]
  448c84:	cmp	w0, #0x55
  448c88:	b.eq	448fe4 <nftw@plt+0x46464>  // b.none
  448c8c:	b.hi	448f20 <nftw@plt+0x463a0>  // b.pmore
  448c90:	cmp	w0, #0x12
  448c94:	b.eq	448fa4 <nftw@plt+0x46424>  // b.none
  448c98:	b.ls	448ef8 <nftw@plt+0x46378>  // b.plast
  448c9c:	cmp	w0, #0x31
  448ca0:	b.eq	448cac <nftw@plt+0x4612c>  // b.none
  448ca4:	cmp	w0, #0x47
  448ca8:	b.ne	448cb8 <nftw@plt+0x46138>  // b.any
  448cac:	ldr	w0, [sp, #128]
  448cb0:	cbz	w0, 449020 <nftw@plt+0x464a0>
  448cb4:	nop
  448cb8:	ldr	x0, [x23, #16]
  448cbc:	add	x27, x27, #0x1
  448cc0:	cmp	x0, x27
  448cc4:	b.hi	448c38 <nftw@plt+0x460b8>  // b.pmore
  448cc8:	mov	x25, x28
  448ccc:	mov	x28, x22
  448cd0:	cbz	w19, 448e6c <nftw@plt+0x462ec>
  448cd4:	ldr	x0, [x21]
  448cd8:	cbz	x0, 448e58 <nftw@plt+0x462d8>
  448cdc:	ldr	w0, [sp, #152]
  448ce0:	cbnz	w0, 44908c <nftw@plt+0x4650c>
  448ce4:	ldr	w1, [sp, #160]
  448ce8:	ldr	w0, [sp, #200]
  448cec:	tst	w0, w1
  448cf0:	b.eq	448e58 <nftw@plt+0x462d8>  // b.none
  448cf4:	ldr	x4, [sp, #208]
  448cf8:	ldr	x2, [sp, #120]
  448cfc:	ldr	x3, [sp, #192]
  448d00:	ldr	w1, [sp, #204]
  448d04:	ldr	x0, [x4, #24]
  448d08:	cmp	w1, #0x0
  448d0c:	ldr	x19, [x25, #16]
  448d10:	add	x1, x2, x3
  448d14:	csel	x1, x1, x2, ne  // ne = any
  448d18:	add	x22, x1, x19
  448d1c:	add	x19, x3, x19
  448d20:	cbz	x0, 448d50 <nftw@plt+0x461d0>
  448d24:	add	x0, x0, x0, lsl #1
  448d28:	ldr	x1, [x4]
  448d2c:	lsl	x0, x0, #3
  448d30:	sub	x0, x0, #0x18
  448d34:	add	x0, x1, x0
  448d38:	ldr	x1, [x0, #8]
  448d3c:	cmp	x19, x1
  448d40:	b.eq	449224 <nftw@plt+0x466a4>  // b.none
  448d44:	add	x2, x1, #0x1
  448d48:	cmp	x19, x2
  448d4c:	b.eq	449224 <nftw@plt+0x466a4>  // b.none
  448d50:	ldp	x2, x3, [sp, #136]
  448d54:	mov	x1, #0x18                  	// #24
  448d58:	ldr	x0, [sp, #176]
  448d5c:	ldr	x20, [sp, #208]
  448d60:	mov	x4, x20
  448d64:	bl	442df8 <nftw@plt+0x40278>
  448d68:	cbz	x0, 448ea8 <nftw@plt+0x46328>
  448d6c:	ldr	x1, [x20, #24]
  448d70:	stp	x19, x22, [x0]
  448d74:	str	x21, [x0, #16]
  448d78:	add	x0, x1, #0x1
  448d7c:	str	x0, [x20, #24]
  448d80:	ldr	w0, [x23, #12]
  448d84:	cbz	w0, 448e00 <nftw@plt+0x46280>
  448d88:	add	x19, sp, #0x108
  448d8c:	ldp	x6, x7, [sp, #136]
  448d90:	mov	x4, x24
  448d94:	ldr	x0, [sp, #464]
  448d98:	stp	x0, x19, [sp]
  448d9c:	mov	x2, x28
  448da0:	ldr	x0, [sp, #176]
  448da4:	stp	xzr, xzr, [x19]
  448da8:	mov	x1, x25
  448dac:	ldr	x3, [sp, #184]
  448db0:	stp	xzr, xzr, [x19, #16]
  448db4:	ldr	x5, [sp, #216]
  448db8:	bl	448b00 <nftw@plt+0x45f80>
  448dbc:	cbz	w0, 448ea8 <nftw@plt+0x46328>
  448dc0:	ldr	x0, [sp, #288]
  448dc4:	cbz	x0, 448e00 <nftw@plt+0x46280>
  448dc8:	ldp	x2, x3, [sp, #136]
  448dcc:	mov	x1, x19
  448dd0:	ldr	x0, [sp, #176]
  448dd4:	bl	442f20 <nftw@plt+0x403a0>
  448dd8:	cbz	w0, 448ea8 <nftw@plt+0x46328>
  448ddc:	ldr	x1, [sp, #288]
  448de0:	adrp	x3, 447000 <nftw@plt+0x44480>
  448de4:	ldr	x19, [sp, #264]
  448de8:	add	x3, x3, #0x348
  448dec:	mov	x2, #0x18                  	// #24
  448df0:	mov	x0, x19
  448df4:	bl	44bad0 <nftw@plt+0x48f50>
  448df8:	ldr	x0, [sp, #288]
  448dfc:	stp	x19, x0, [x21, #24]
  448e00:	ldr	x0, [x24, #24]
  448e04:	cbnz	x0, 448b58 <nftw@plt+0x45fd8>
  448e08:	ldp	x19, x20, [sp, #32]
  448e0c:	ldp	x21, x22, [sp, #48]
  448e10:	ldp	x25, x26, [sp, #80]
  448e14:	ldp	x27, x28, [sp, #96]
  448e18:	mov	w0, #0x1                   	// #1
  448e1c:	b	448ebc <nftw@plt+0x4633c>
  448e20:	ldr	x0, [x23, #24]
  448e24:	ldr	w0, [x0, x25]
  448e28:	cmp	w0, #0x11
  448e2c:	b.ne	448c74 <nftw@plt+0x460f4>  // b.any
  448e30:	ldr	w0, [sp, #248]
  448e34:	cmp	w0, #0x1
  448e38:	b.ne	448cb8 <nftw@plt+0x46138>  // b.any
  448e3c:	ldr	x0, [sp, #256]
  448e40:	str	x0, [sp, #184]
  448e44:	cbz	w19, 448cb8 <nftw@plt+0x46138>
  448e48:	str	x0, [sp, #192]
  448e4c:	mov	w0, #0x1                   	// #1
  448e50:	str	w0, [sp, #200]
  448e54:	b	448cb8 <nftw@plt+0x46138>
  448e58:	ldp	x3, x4, [sp, #136]
  448e5c:	mov	x1, x21
  448e60:	ldr	x0, [sp, #176]
  448e64:	mov	x2, #0x28                  	// #40
  448e68:	bl	442ad8 <nftw@plt+0x3ff58>
  448e6c:	ldr	w0, [x23, #12]
  448e70:	cbz	w0, 448e00 <nftw@plt+0x46280>
  448e74:	ldp	x6, x7, [sp, #136]
  448e78:	mov	x4, x24
  448e7c:	ldr	x0, [sp, #464]
  448e80:	str	x0, [sp]
  448e84:	ldr	x0, [sp, #472]
  448e88:	str	x0, [sp, #8]
  448e8c:	ldr	x0, [sp, #176]
  448e90:	mov	x2, x28
  448e94:	ldr	x3, [sp, #184]
  448e98:	mov	x1, x25
  448e9c:	ldr	x5, [sp, #216]
  448ea0:	bl	448b00 <nftw@plt+0x45f80>
  448ea4:	cbnz	w0, 448e00 <nftw@plt+0x46280>
  448ea8:	ldp	x19, x20, [sp, #32]
  448eac:	mov	w0, #0x0                   	// #0
  448eb0:	ldp	x21, x22, [sp, #48]
  448eb4:	ldp	x25, x26, [sp, #80]
  448eb8:	ldp	x27, x28, [sp, #96]
  448ebc:	ldp	x29, x30, [sp, #16]
  448ec0:	ldp	x23, x24, [sp, #64]
  448ec4:	add	sp, sp, #0x1d0
  448ec8:	ret
  448ecc:	add	x3, x1, #0x1
  448ed0:	add	x1, x4, x3
  448ed4:	cmp	x4, x3
  448ed8:	b.hi	448b9c <nftw@plt+0x4601c>  // b.pmore
  448edc:	ldr	x0, [sp, #144]
  448ee0:	adrp	x1, 47f000 <_obstack_memory_used@@Base+0x1dbb8>
  448ee4:	add	x1, x1, #0xc60
  448ee8:	mov	w2, #0x0                   	// #0
  448eec:	ldr	x3, [sp, #136]
  448ef0:	blr	x3
  448ef4:	b	448ea8 <nftw@plt+0x46328>
  448ef8:	cmp	w0, #0x3
  448efc:	b.ne	448f80 <nftw@plt+0x46400>  // b.any
  448f00:	ldr	x0, [x21]
  448f04:	cbnz	x0, 448cb8 <nftw@plt+0x46138>
  448f08:	ldr	w0, [sp, #248]
  448f0c:	cmp	w0, #0x4
  448f10:	b.ne	448cb8 <nftw@plt+0x46138>  // b.any
  448f14:	ldr	x0, [sp, #256]
  448f18:	str	x0, [x21]
  448f1c:	b	448cb8 <nftw@plt+0x46138>
  448f20:	cmp	w0, #0x59
  448f24:	b.eq	448fcc <nftw@plt+0x4644c>  // b.none
  448f28:	b.ls	448f58 <nftw@plt+0x463d8>  // b.plast
  448f2c:	cmp	w0, #0x6e
  448f30:	b.eq	448f3c <nftw@plt+0x463bc>  // b.none
  448f34:	cmp	w0, w20
  448f38:	b.ne	448cb8 <nftw@plt+0x46138>  // b.any
  448f3c:	ldr	w0, [sp, #248]
  448f40:	cmp	w0, #0x4
  448f44:	b.ne	448cb8 <nftw@plt+0x46138>  // b.any
  448f48:	ldr	x0, [sp, #256]
  448f4c:	str	x0, [x21]
  448f50:	str	w19, [sp, #128]
  448f54:	b	448cb8 <nftw@plt+0x46138>
  448f58:	cmp	w0, #0x58
  448f5c:	b.ne	448cb8 <nftw@plt+0x46138>  // b.any
  448f60:	ldr	w0, [sp, #248]
  448f64:	cmp	w0, #0x2
  448f68:	b.ne	448cb8 <nftw@plt+0x46138>  // b.any
  448f6c:	ldr	x0, [sp, #256]
  448f70:	cbnz	x0, 449060 <nftw@plt+0x464e0>
  448f74:	ldr	x0, [sp, #232]
  448f78:	str	x0, [x21, #8]
  448f7c:	b	448cb8 <nftw@plt+0x46138>
  448f80:	cmp	w0, #0x11
  448f84:	b.ne	448cb8 <nftw@plt+0x46138>  // b.any
  448f88:	ldr	w0, [sp, #248]
  448f8c:	cmp	w0, #0x1
  448f90:	b.ne	448cb8 <nftw@plt+0x46138>  // b.any
  448f94:	ldr	x0, [sp, #256]
  448f98:	b	448e48 <nftw@plt+0x462c8>
  448f9c:	mov	x4, x1
  448fa0:	b	448b90 <nftw@plt+0x46010>
  448fa4:	ldr	w0, [sp, #248]
  448fa8:	cmp	w0, #0x1
  448fac:	b.eq	448fbc <nftw@plt+0x4643c>  // b.none
  448fb0:	cmp	w0, #0x2
  448fb4:	b.ne	448cb8 <nftw@plt+0x46138>  // b.any
  448fb8:	str	w19, [sp, #204]
  448fbc:	ldr	x0, [sp, #256]
  448fc0:	str	x0, [sp, #120]
  448fc4:	str	w19, [sp, #160]
  448fc8:	b	448cb8 <nftw@plt+0x46138>
  448fcc:	ldr	w0, [sp, #248]
  448fd0:	cmp	w0, #0x2
  448fd4:	b.ne	448cb8 <nftw@plt+0x46138>  // b.any
  448fd8:	ldr	x0, [sp, #256]
  448fdc:	str	w0, [x21, #16]
  448fe0:	b	448cb8 <nftw@plt+0x46138>
  448fe4:	ldr	w0, [sp, #248]
  448fe8:	cmp	w0, #0x2
  448fec:	ccmp	w0, #0x8, #0x4, ne  // ne = any
  448ff0:	b.ne	448cb8 <nftw@plt+0x46138>  // b.any
  448ff4:	ldr	x0, [sp, #256]
  448ff8:	str	w19, [sp, #152]
  448ffc:	str	x0, [sp, #168]
  449000:	b	448cb8 <nftw@plt+0x46138>
  449004:	cmp	w0, #0x1d
  449008:	b.eq	449054 <nftw@plt+0x464d4>  // b.none
  44900c:	ldr	x0, [sp, #464]
  449010:	mov	w19, #0x0                   	// #0
  449014:	mov	x21, #0x0                   	// #0
  449018:	str	x0, [sp, #208]
  44901c:	b	448c00 <nftw@plt+0x46080>
  449020:	ldr	w0, [x1, #4]
  449024:	cmp	w0, #0x20
  449028:	b.eq	449270 <nftw@plt+0x466f0>  // b.none
  44902c:	ldp	x4, x5, [sp, #136]
  449030:	mov	x2, x26
  449034:	ldr	x3, [sp, #224]
  449038:	mov	x1, x22
  44903c:	mov	x0, x28
  449040:	bl	448478 <nftw@plt+0x458f8>
  449044:	str	wzr, [sp, #128]
  449048:	cbz	x0, 448cb8 <nftw@plt+0x46138>
  44904c:	str	x0, [x21]
  449050:	b	448cb8 <nftw@plt+0x46138>
  449054:	ldr	x0, [sp, #472]
  449058:	str	x0, [sp, #208]
  44905c:	b	448bd8 <nftw@plt+0x46058>
  449060:	ldr	x1, [sp, #216]
  449064:	sub	x2, x0, #0x1
  449068:	ldr	x1, [x1, #48]
  44906c:	cmp	x2, x1
  449070:	b.cs	449294 <nftw@plt+0x46714>  // b.hs, b.nlast
  449074:	ldr	x1, [sp, #216]
  449078:	ldr	x1, [x1, #56]
  44907c:	add	x0, x1, x0, lsl #3
  449080:	ldur	x0, [x0, #-8]
  449084:	str	x0, [x21, #8]
  449088:	b	448cb8 <nftw@plt+0x46138>
  44908c:	ldr	x0, [x25, #96]
  449090:	ldr	x1, [sp, #168]
  449094:	cmp	x0, x1
  449098:	b.ls	44925c <nftw@plt+0x466dc>  // b.plast
  44909c:	ldr	x3, [x25, #88]
  4490a0:	mov	x5, x1
  4490a4:	sub	x1, x0, x1
  4490a8:	stp	x24, x26, [sp, #152]
  4490ac:	add	x0, x3, x5
  4490b0:	stp	x0, x1, [sp, #280]
  4490b4:	add	x19, sp, #0x108
  4490b8:	ldr	w4, [x25, #120]
  4490bc:	ldr	x0, [sp, #136]
  4490c0:	stp	x21, x23, [sp, #120]
  4490c4:	adrp	x2, 47f000 <_obstack_memory_used@@Base+0x1dbb8>
  4490c8:	ldp	x22, x20, [sp, #176]
  4490cc:	mov	x23, x0
  4490d0:	ldr	x24, [sp, #208]
  4490d4:	add	x2, x2, #0xd8
  4490d8:	ldr	x27, [sp, #144]
  4490dc:	stp	x2, x3, [sp, #264]
  4490e0:	str	w4, [sp, #296]
  4490e4:	str	x0, [sp, #304]
  4490e8:	str	x27, [sp, #312]
  4490ec:	str	wzr, [sp, #320]
  4490f0:	ldr	w1, [x28, #48]
  4490f4:	mov	x0, x19
  4490f8:	bl	4478e0 <nftw@plt+0x44d60>
  4490fc:	mov	x21, x0
  449100:	ldr	w1, [x28, #48]
  449104:	mov	x0, x19
  449108:	bl	4478e0 <nftw@plt+0x44d60>
  44910c:	orr	x1, x21, x0
  449110:	cbz	x1, 449278 <nftw@plt+0x466f8>
  449114:	ldr	w1, [x28, #48]
  449118:	cmp	w1, #0x4
  44911c:	b.eq	449214 <nftw@plt+0x46694>  // b.none
  449120:	b.gt	449154 <nftw@plt+0x465d4>
  449124:	cmp	w1, #0x1
  449128:	b.eq	449208 <nftw@plt+0x46688>  // b.none
  44912c:	cmp	w1, #0x2
  449130:	b.ne	449168 <nftw@plt+0x465e8>  // b.any
  449134:	mov	x1, #0xffff                	// #65535
  449138:	cmp	x21, x1
  44913c:	cset	w1, eq  // eq = none
  449140:	cbz	w1, 449168 <nftw@plt+0x465e8>
  449144:	mov	x20, x0
  449148:	ldr	w0, [sp, #320]
  44914c:	cbz	w0, 4490f0 <nftw@plt+0x46570>
  449150:	b	448ea8 <nftw@plt+0x46328>
  449154:	cmp	w1, #0x8
  449158:	b.ne	449168 <nftw@plt+0x465e8>  // b.any
  44915c:	cmn	x21, #0x1
  449160:	cset	w1, eq  // eq = none
  449164:	cbnz	w1, 449144 <nftw@plt+0x465c4>
  449168:	ldr	x1, [x24, #24]
  44916c:	add	x2, x21, x20
  449170:	ldr	x6, [x25, #16]
  449174:	add	x0, x0, x20
  449178:	add	x21, x2, x6
  44917c:	add	x26, x0, x6
  449180:	cbz	x1, 4491b0 <nftw@plt+0x46630>
  449184:	add	x0, x1, x1, lsl #1
  449188:	ldr	x1, [x24]
  44918c:	lsl	x0, x0, #3
  449190:	sub	x0, x0, #0x18
  449194:	add	x0, x1, x0
  449198:	ldr	x1, [x0, #8]
  44919c:	cmp	x21, x1
  4491a0:	b.eq	4491e8 <nftw@plt+0x46668>  // b.none
  4491a4:	add	x2, x1, #0x1
  4491a8:	cmp	x21, x2
  4491ac:	b.eq	4491e8 <nftw@plt+0x46668>  // b.none
  4491b0:	mov	x4, x24
  4491b4:	mov	x3, x27
  4491b8:	mov	x2, x23
  4491bc:	mov	x0, x22
  4491c0:	mov	x1, #0x18                  	// #24
  4491c4:	bl	442df8 <nftw@plt+0x40278>
  4491c8:	cbz	x0, 448ea8 <nftw@plt+0x46328>
  4491cc:	ldr	x1, [x24, #24]
  4491d0:	stp	x21, x26, [x0]
  4491d4:	ldr	x2, [sp, #120]
  4491d8:	str	x2, [x0, #16]
  4491dc:	add	x0, x1, #0x1
  4491e0:	str	x0, [x24, #24]
  4491e4:	b	449148 <nftw@plt+0x465c8>
  4491e8:	ldr	x2, [x0, #16]
  4491ec:	ldr	x3, [sp, #120]
  4491f0:	cmp	x3, x2
  4491f4:	b.ne	4491b0 <nftw@plt+0x46630>  // b.any
  4491f8:	cmp	x26, x1
  4491fc:	b.ls	449148 <nftw@plt+0x465c8>  // b.plast
  449200:	str	x26, [x0, #8]
  449204:	b	449148 <nftw@plt+0x465c8>
  449208:	cmp	x21, #0xff
  44920c:	cset	w1, eq  // eq = none
  449210:	b	449140 <nftw@plt+0x465c0>
  449214:	mov	x1, #0xffffffff            	// #4294967295
  449218:	cmp	x21, x1
  44921c:	cset	w1, eq  // eq = none
  449220:	b	449140 <nftw@plt+0x465c0>
  449224:	ldr	x2, [x0, #16]
  449228:	cmp	x21, x2
  44922c:	b.ne	448d50 <nftw@plt+0x461d0>  // b.any
  449230:	cmp	x22, x1
  449234:	b.ls	448d80 <nftw@plt+0x46200>  // b.plast
  449238:	str	x22, [x0, #8]
  44923c:	b	448d80 <nftw@plt+0x46200>
  449240:	str	wzr, [sp, #152]
  449244:	str	wzr, [sp, #160]
  449248:	str	xzr, [sp, #168]
  44924c:	str	xzr, [sp, #192]
  449250:	stp	wzr, wzr, [sp, #200]
  449254:	cbz	w19, 448e6c <nftw@plt+0x462ec>
  449258:	b	448cd4 <nftw@plt+0x46154>
  44925c:	adrp	x1, 47f000 <_obstack_memory_used@@Base+0x1dbb8>
  449260:	mov	w2, #0x0                   	// #0
  449264:	add	x1, x1, #0xcd8
  449268:	ldr	x0, [sp, #144]
  44926c:	b	448eec <nftw@plt+0x4636c>
  449270:	str	wzr, [sp, #128]
  449274:	b	448cb8 <nftw@plt+0x46138>
  449278:	ldr	w0, [sp, #320]
  44927c:	ldp	x21, x23, [sp, #120]
  449280:	ldp	x24, x26, [sp, #152]
  449284:	cbnz	w0, 448ea8 <nftw@plt+0x46328>
  449288:	ldr	w0, [x23, #12]
  44928c:	cbnz	w0, 448d8c <nftw@plt+0x4620c>
  449290:	b	448e00 <nftw@plt+0x46280>
  449294:	ldp	x4, x1, [x24]
  449298:	add	x19, sp, #0x108
  44929c:	ldr	x5, [x24, #16]
  4492a0:	mov	x0, x19
  4492a4:	adrp	x3, 47f000 <_obstack_memory_used@@Base+0x1dbb8>
  4492a8:	adrp	x2, 47f000 <_obstack_memory_used@@Base+0x1dbb8>
  4492ac:	add	x3, x3, #0xca0
  4492b0:	add	x2, x2, #0xb28
  4492b4:	sub	w5, w5, w1
  4492b8:	mov	x1, #0xc8                  	// #200
  4492bc:	bl	402600 <snprintf@plt>
  4492c0:	ldp	x3, x0, [x24, #40]
  4492c4:	mov	x1, x19
  4492c8:	mov	w2, #0x0                   	// #0
  4492cc:	blr	x3
  4492d0:	b	448ea8 <nftw@plt+0x46328>
  4492d4:	nop
  4492d8:	sub	sp, sp, #0x290
  4492dc:	mov	x7, x6
  4492e0:	stp	x29, x30, [sp, #16]
  4492e4:	add	x29, sp, #0x10
  4492e8:	stp	x21, x22, [sp, #48]
  4492ec:	mov	x22, x1
  4492f0:	mov	w1, #0x1                   	// #1
  4492f4:	str	x6, [sp, #128]
  4492f8:	ldr	x6, [x22, #32]
  4492fc:	str	w1, [x7]
  449300:	stp	x4, x3, [sp, #112]
  449304:	cbz	x6, 4495a4 <nftw@plt+0x46a24>
  449308:	ldr	x4, [x22, #24]
  44930c:	mov	x21, x2
  449310:	stp	x19, x20, [sp, #32]
  449314:	mov	x20, x5
  449318:	mov	x19, x0
  44931c:	mov	x5, x6
  449320:	mov	x3, #0x0                   	// #0
  449324:	stp	x23, x24, [sp, #64]
  449328:	stp	x25, x26, [sp, #80]
  44932c:	add	x0, x5, x3
  449330:	cmp	x5, x3
  449334:	and	x1, x0, #0xfffffffffffffffe
  449338:	b.ls	449598 <nftw@plt+0x46a18>  // b.plast
  44933c:	lsr	x0, x0, #1
  449340:	add	x1, x1, x0
  449344:	lsl	x2, x1, #3
  449348:	ldr	x1, [x4, x1, lsl #3]
  44934c:	add	x23, x4, x2
  449350:	cmp	x1, x21
  449354:	b.hi	449584 <nftw@plt+0x46a04>  // b.pmore
  449358:	ldr	x1, [x23, #8]
  44935c:	add	x3, x0, #0x1
  449360:	cmp	x1, x21
  449364:	b.ls	44932c <nftw@plt+0x467ac>  // b.plast
  449368:	asr	x2, x2, #3
  44936c:	mov	x0, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  449370:	movk	x0, #0xaaab
  449374:	mov	x1, x0
  449378:	mul	x2, x2, x0
  44937c:	add	x2, x2, #0x1
  449380:	cmp	x6, x2
  449384:	b.hi	4493b4 <nftw@plt+0x46834>  // b.pmore
  449388:	b	4493c0 <nftw@plt+0x46840>
  44938c:	ldr	x0, [x23, #32]
  449390:	cmp	x0, x21
  449394:	b.ls	4493c0 <nftw@plt+0x46840>  // b.plast
  449398:	add	x23, x23, #0x18
  44939c:	sub	x0, x23, x4
  4493a0:	asr	x0, x0, #3
  4493a4:	mul	x0, x0, x1
  4493a8:	add	x0, x0, #0x1
  4493ac:	cmp	x6, x0
  4493b0:	b.ls	4493c0 <nftw@plt+0x46840>  // b.plast
  4493b4:	ldr	x0, [x23, #24]
  4493b8:	cmp	x0, x21
  4493bc:	b.ls	44938c <nftw@plt+0x4680c>  // b.plast
  4493c0:	ldr	x26, [x23, #16]
  4493c4:	cmp	x4, x23
  4493c8:	ldr	w1, [x19, #8]
  4493cc:	ldr	x24, [x26, #104]
  4493d0:	b.cc	4493f8 <nftw@plt+0x46878>  // b.lo, b.ul, b.last
  4493d4:	b	449428 <nftw@plt+0x468a8>
  4493d8:	cmn	x24, #0x1
  4493dc:	b.ne	449428 <nftw@plt+0x468a8>  // b.any
  4493e0:	ldur	x26, [x23, #-8]
  4493e4:	sub	x23, x23, #0x18
  4493e8:	ldr	x0, [x22, #24]
  4493ec:	ldr	x24, [x26, #104]
  4493f0:	cmp	x0, x23
  4493f4:	b.cs	449428 <nftw@plt+0x468a8>  // b.hs, b.nlast
  4493f8:	ldur	x0, [x23, #-24]
  4493fc:	cmp	x0, x21
  449400:	b.hi	449428 <nftw@plt+0x468a8>  // b.pmore
  449404:	ldur	x0, [x23, #-16]
  449408:	cmp	x0, x21
  44940c:	b.ls	449428 <nftw@plt+0x468a8>  // b.plast
  449410:	cbz	w1, 4493d8 <nftw@plt+0x46858>
  449414:	add	x0, x26, #0x68
  449418:	ldar	x24, [x0]
  44941c:	ldr	w1, [x19, #8]
  449420:	cmn	x24, #0x1
  449424:	b.eq	4493e0 <nftw@plt+0x46860>  // b.none
  449428:	cbnz	w1, 449620 <nftw@plt+0x46aa0>
  44942c:	cbz	x24, 44962c <nftw@plt+0x46aac>
  449430:	cmn	x24, #0x1
  449434:	b.eq	449708 <nftw@plt+0x46b88>  // b.none
  449438:	ldr	x7, [x23, #16]
  44943c:	mov	x2, #0x0                   	// #0
  449440:	ldr	x3, [x7, #112]
  449444:	add	x0, x2, x3
  449448:	cmp	x2, x3
  44944c:	and	x1, x0, #0xfffffffffffffffe
  449450:	b.cs	4495d4 <nftw@plt+0x46a54>  // b.hs, b.nlast
  449454:	lsr	x0, x0, #1
  449458:	add	x1, x1, x0
  44945c:	add	x4, x24, x1, lsl #3
  449460:	ldr	x1, [x24, x1, lsl #3]
  449464:	cmp	x1, x21
  449468:	b.hi	4495c0 <nftw@plt+0x46a40>  // b.pmore
  44946c:	ldr	x1, [x4, #24]
  449470:	add	x2, x0, #0x1
  449474:	cmp	x1, x21
  449478:	b.ls	449444 <nftw@plt+0x468c4>  // b.plast
  44947c:	ldr	x6, [x7, #128]
  449480:	ldr	w10, [x4, #16]
  449484:	ldr	x8, [x4, #8]
  449488:	cbz	x6, 449608 <nftw@plt+0x46a88>
  44948c:	ldr	x4, [x7, #120]
  449490:	mov	x5, x6
  449494:	mov	x3, #0x0                   	// #0
  449498:	add	x0, x5, x3
  44949c:	cmp	x5, x3
  4494a0:	and	x1, x0, #0xfffffffffffffffe
  4494a4:	b.ls	449608 <nftw@plt+0x46a88>  // b.plast
  4494a8:	lsr	x0, x0, #1
  4494ac:	add	x1, x1, x0
  4494b0:	lsl	x2, x1, #3
  4494b4:	ldr	x7, [x4, x1, lsl #3]
  4494b8:	add	x1, x4, x2
  4494bc:	cmp	x7, x21
  4494c0:	b.hi	4495f4 <nftw@plt+0x46a74>  // b.pmore
  4494c4:	ldr	x7, [x1, #8]
  4494c8:	add	x3, x0, #0x1
  4494cc:	cmp	x7, x21
  4494d0:	b.ls	449498 <nftw@plt+0x46918>  // b.plast
  4494d4:	asr	x0, x2, #3
  4494d8:	mov	x2, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  4494dc:	movk	x2, #0xaaab
  4494e0:	mov	x3, x2
  4494e4:	mul	x0, x0, x2
  4494e8:	add	x0, x0, #0x1
  4494ec:	cmp	x6, x0
  4494f0:	b.hi	449520 <nftw@plt+0x469a0>  // b.pmore
  4494f4:	b	44952c <nftw@plt+0x469ac>
  4494f8:	ldr	x0, [x1, #32]
  4494fc:	cmp	x0, x21
  449500:	b.ls	44952c <nftw@plt+0x469ac>  // b.plast
  449504:	add	x1, x1, #0x18
  449508:	sub	x0, x1, x4
  44950c:	asr	x0, x0, #3
  449510:	mul	x0, x0, x3
  449514:	add	x0, x0, #0x1
  449518:	cmp	x6, x0
  44951c:	b.ls	44952c <nftw@plt+0x469ac>  // b.plast
  449520:	ldr	x0, [x1, #24]
  449524:	cmp	x0, x21
  449528:	b.ls	4494f8 <nftw@plt+0x46978>  // b.plast
  44952c:	ldr	x19, [x1, #16]
  449530:	add	x6, sp, #0x188
  449534:	ldr	x22, [sp, #120]
  449538:	add	x5, sp, #0x1c8
  44953c:	ldp	x1, x2, [x19, #24]
  449540:	mov	x4, x20
  449544:	mov	x0, x21
  449548:	mov	x3, x22
  44954c:	str	w10, [sp, #392]
  449550:	str	x8, [sp, #456]
  449554:	bl	4471e8 <nftw@plt+0x44668>
  449558:	cbnz	w0, 449884 <nftw@plt+0x46d04>
  44955c:	ldr	w3, [sp, #392]
  449560:	mov	x0, x20
  449564:	ldr	x4, [x19]
  449568:	mov	x1, x21
  44956c:	ldr	x2, [sp, #456]
  449570:	blr	x22
  449574:	ldp	x19, x20, [sp, #32]
  449578:	ldp	x23, x24, [sp, #64]
  44957c:	ldp	x25, x26, [sp, #80]
  449580:	b	4495b0 <nftw@plt+0x46a30>
  449584:	mov	x5, x0
  449588:	add	x0, x5, x3
  44958c:	cmp	x5, x3
  449590:	and	x1, x0, #0xfffffffffffffffe
  449594:	b.hi	44933c <nftw@plt+0x467bc>  // b.pmore
  449598:	ldp	x19, x20, [sp, #32]
  44959c:	ldp	x23, x24, [sp, #64]
  4495a0:	ldp	x25, x26, [sp, #80]
  4495a4:	mov	w0, #0x0                   	// #0
  4495a8:	ldr	x1, [sp, #128]
  4495ac:	str	wzr, [x1]
  4495b0:	ldp	x29, x30, [sp, #16]
  4495b4:	ldp	x21, x22, [sp, #48]
  4495b8:	add	sp, sp, #0x290
  4495bc:	ret
  4495c0:	mov	x3, x0
  4495c4:	add	x0, x2, x3
  4495c8:	cmp	x2, x3
  4495cc:	and	x1, x0, #0xfffffffffffffffe
  4495d0:	b.cc	449454 <nftw@plt+0x468d4>  // b.lo, b.ul, b.last
  4495d4:	ldr	x24, [x7, #80]
  4495d8:	cbz	x24, 449740 <nftw@plt+0x46bc0>
  4495dc:	mov	x2, x24
  4495e0:	mov	x1, x21
  4495e4:	mov	x0, x20
  4495e8:	mov	x4, #0x0                   	// #0
  4495ec:	mov	w3, #0x0                   	// #0
  4495f0:	b	44971c <nftw@plt+0x46b9c>
  4495f4:	mov	x5, x0
  4495f8:	add	x0, x5, x3
  4495fc:	cmp	x5, x3
  449600:	and	x1, x0, #0xfffffffffffffffe
  449604:	b.hi	4494a8 <nftw@plt+0x46928>  // b.pmore
  449608:	mov	w3, w10
  44960c:	mov	x2, x8
  449610:	mov	x1, x21
  449614:	mov	x0, x20
  449618:	mov	x4, #0x0                   	// #0
  44961c:	b	44971c <nftw@plt+0x46b9c>
  449620:	add	x0, x26, #0x68
  449624:	ldar	x24, [x0]
  449628:	cbnz	x24, 449430 <nftw@plt+0x468b0>
  44962c:	add	x1, sp, #0x200
  449630:	stp	x27, x28, [sp, #96]
  449634:	ldr	x0, [x23, #16]
  449638:	stp	xzr, xzr, [x1, #-248]
  44963c:	stp	xzr, xzr, [x1, #-232]
  449640:	stp	xzr, xzr, [x1, #-216]
  449644:	stp	xzr, xzr, [x1, #-200]
  449648:	str	x0, [sp, #184]
  44964c:	ldr	x0, [x0, #56]
  449650:	stp	xzr, xzr, [sp, #232]
  449654:	ldr	x1, [x22, #80]
  449658:	stp	xzr, xzr, [sp, #248]
  44965c:	cmp	x0, x1
  449660:	b.cc	4497cc <nftw@plt+0x46c4c>  // b.lo, b.ul, b.last
  449664:	add	x3, sp, #0xe8
  449668:	str	x3, [sp, #144]
  44966c:	ldr	x3, [sp, #112]
  449670:	adrp	x1, 47f000 <_obstack_memory_used@@Base+0x1dbb8>
  449674:	mov	x0, x20
  449678:	add	x1, x1, #0xd00
  44967c:	mov	w2, #0x0                   	// #0
  449680:	blr	x3
  449684:	nop
  449688:	ldp	x5, x4, [sp, #240]
  44968c:	mov	x3, x20
  449690:	ldr	x2, [sp, #112]
  449694:	mov	x0, x19
  449698:	ldr	x1, [sp, #144]
  44969c:	add	x4, x4, x5
  4496a0:	stp	xzr, x4, [sp, #240]
  4496a4:	bl	442f20 <nftw@plt+0x403a0>
  4496a8:	ldr	x2, [sp, #296]
  4496ac:	cbnz	x2, 4498bc <nftw@plt+0x46d3c>
  4496b0:	ldp	x2, x1, [sp, #312]
  4496b4:	mov	x4, x20
  4496b8:	ldr	x3, [sp, #112]
  4496bc:	mov	x0, x19
  4496c0:	str	xzr, [sp, #136]
  4496c4:	mov	x25, #0x0                   	// #0
  4496c8:	mov	x28, #0x0                   	// #0
  4496cc:	mov	x24, #0xffffffffffffffff    	// #-1
  4496d0:	lsl	x2, x2, #3
  4496d4:	bl	442ad8 <nftw@plt+0x3ff58>
  4496d8:	mov	w1, #0x0                   	// #0
  4496dc:	ldr	w0, [x19, #8]
  4496e0:	cbnz	w0, 449894 <nftw@plt+0x46d14>
  4496e4:	ldr	x0, [sp, #136]
  4496e8:	stp	x24, x0, [x26, #104]
  4496ec:	stp	x25, x28, [x26, #120]
  4496f0:	cmn	x24, #0x1
  4496f4:	b.eq	4498d8 <nftw@plt+0x46d58>  // b.none
  4496f8:	ldp	x27, x28, [sp, #96]
  4496fc:	b	449438 <nftw@plt+0x468b8>
  449700:	ldp	x27, x28, [sp, #96]
  449704:	nop
  449708:	mov	x1, x21
  44970c:	mov	x0, x20
  449710:	mov	x4, #0x0                   	// #0
  449714:	mov	w3, #0x0                   	// #0
  449718:	mov	x2, #0x0                   	// #0
  44971c:	ldr	x5, [sp, #120]
  449720:	blr	x5
  449724:	ldp	x29, x30, [sp, #16]
  449728:	ldp	x19, x20, [sp, #32]
  44972c:	ldp	x21, x22, [sp, #48]
  449730:	ldp	x23, x24, [sp, #64]
  449734:	ldp	x25, x26, [sp, #80]
  449738:	add	sp, sp, #0x290
  44973c:	ret
  449740:	ldr	x24, [x7, #64]
  449744:	cbz	x24, 4497c4 <nftw@plt+0x46c44>
  449748:	ldrb	w0, [x24]
  44974c:	cmp	w0, #0x2f
  449750:	b.eq	4497c4 <nftw@plt+0x46c44>  // b.none
  449754:	ldr	x26, [x7, #72]
  449758:	cbz	x26, 4497c4 <nftw@plt+0x46c44>
  44975c:	mov	x0, x24
  449760:	bl	4024f0 <strlen@plt>
  449764:	mov	x25, x0
  449768:	mov	x0, x26
  44976c:	bl	4024f0 <strlen@plt>
  449770:	mov	x22, x0
  449774:	ldr	x2, [sp, #112]
  449778:	add	x1, x25, x22
  44977c:	mov	x0, x19
  449780:	mov	x3, x20
  449784:	add	x1, x1, #0x2
  449788:	bl	442c10 <nftw@plt+0x40090>
  44978c:	mov	x19, x0
  449790:	cbz	x0, 449598 <nftw@plt+0x46a18>
  449794:	mov	x1, x26
  449798:	mov	x2, x22
  44979c:	bl	402490 <memcpy@plt>
  4497a0:	mov	w3, #0x2f                  	// #47
  4497a4:	strb	w3, [x19, x22]
  4497a8:	add	x0, x22, #0x1
  4497ac:	mov	x1, x24
  4497b0:	add	x2, x25, #0x1
  4497b4:	add	x0, x19, x0
  4497b8:	bl	402490 <memcpy@plt>
  4497bc:	mov	x24, x19
  4497c0:	ldr	x7, [x23, #16]
  4497c4:	str	x24, [x7, #80]
  4497c8:	b	4495dc <nftw@plt+0x46a5c>
  4497cc:	ldr	x4, [x22, #72]
  4497d0:	sub	x2, x1, x0
  4497d4:	ldr	w5, [x22, #120]
  4497d8:	adrp	x3, 47f000 <_obstack_memory_used@@Base+0x1dbb8>
  4497dc:	add	x1, x4, x0
  4497e0:	stp	x1, x2, [sp, #344]
  4497e4:	add	x3, x3, #0xb8
  4497e8:	ldr	x1, [sp, #112]
  4497ec:	add	x28, sp, #0x148
  4497f0:	mov	x0, x28
  4497f4:	stp	x3, x4, [sp, #328]
  4497f8:	str	w5, [sp, #360]
  4497fc:	str	x1, [sp, #368]
  449800:	str	x20, [sp, #376]
  449804:	str	wzr, [sp, #384]
  449808:	bl	447730 <nftw@plt+0x44bb0>
  44980c:	mov	x1, #0xffffffff            	// #4294967295
  449810:	mov	w2, w0
  449814:	cmp	x1, w0, uxtw
  449818:	mov	x0, x28
  44981c:	b.eq	449ca0 <nftw@plt+0x47120>  // b.none
  449820:	str	x2, [sp, #352]
  449824:	bl	447650 <nftw@plt+0x44ad0>
  449828:	and	w0, w0, #0xffff
  44982c:	str	w0, [sp, #264]
  449830:	sub	w0, w0, #0x2
  449834:	cmp	w0, #0x2
  449838:	b.ls	44990c <nftw@plt+0x46d8c>  // b.plast
  44983c:	ldp	x4, x1, [sp, #328]
  449840:	add	x24, sp, #0x1c8
  449844:	ldr	x5, [sp, #344]
  449848:	adrp	x3, 47f000 <_obstack_memory_used@@Base+0x1dbb8>
  44984c:	mov	x0, x24
  449850:	add	x3, x3, #0xd20
  449854:	adrp	x2, 47f000 <_obstack_memory_used@@Base+0x1dbb8>
  449858:	sub	w5, w5, w1
  44985c:	add	x2, x2, #0xb28
  449860:	mov	x1, #0xc8                  	// #200
  449864:	bl	402600 <snprintf@plt>
  449868:	ldp	x3, x0, [sp, #368]
  44986c:	add	x4, sp, #0xe8
  449870:	str	x4, [sp, #144]
  449874:	mov	x1, x24
  449878:	mov	w2, #0x0                   	// #0
  44987c:	blr	x3
  449880:	b	449688 <nftw@plt+0x46b08>
  449884:	ldp	x19, x20, [sp, #32]
  449888:	ldp	x23, x24, [sp, #64]
  44988c:	ldp	x25, x26, [sp, #80]
  449890:	b	4495b0 <nftw@plt+0x46a30>
  449894:	add	x0, x26, #0x70
  449898:	ldr	x2, [sp, #136]
  44989c:	stlr	x2, [x0]
  4498a0:	add	x0, x26, #0x78
  4498a4:	stlr	x25, [x0]
  4498a8:	add	x0, x26, #0x80
  4498ac:	stlr	x28, [x0]
  4498b0:	add	x11, x26, #0x68
  4498b4:	stlr	x24, [x11]
  4498b8:	b	4496f0 <nftw@plt+0x46b70>
  4498bc:	ldr	x3, [sp, #112]
  4498c0:	lsl	x2, x2, #3
  4498c4:	ldr	x1, [sp, #304]
  4498c8:	mov	x4, x20
  4498cc:	mov	x0, x19
  4498d0:	bl	442ad8 <nftw@plt+0x3ff58>
  4498d4:	b	4496b0 <nftw@plt+0x46b30>
  4498d8:	cbz	w1, 449700 <nftw@plt+0x46b80>
  4498dc:	ldp	x4, x3, [sp, #112]
  4498e0:	mov	x5, x20
  4498e4:	ldr	x6, [sp, #128]
  4498e8:	mov	x0, x19
  4498ec:	mov	x2, x21
  4498f0:	mov	x1, x22
  4498f4:	bl	4492d8 <nftw@plt+0x46758>
  4498f8:	ldp	x19, x20, [sp, #32]
  4498fc:	ldp	x23, x24, [sp, #64]
  449900:	ldp	x25, x26, [sp, #80]
  449904:	ldp	x27, x28, [sp, #96]
  449908:	b	4495b0 <nftw@plt+0x46a30>
  44990c:	mov	x0, x28
  449910:	bl	447730 <nftw@plt+0x44bb0>
  449914:	mov	w0, w0
  449918:	add	x1, sp, #0x200
  44991c:	add	x4, sp, #0x270
  449920:	ldp	x2, x3, [x1, #-168]
  449924:	add	x1, sp, #0x270
  449928:	stp	x2, x3, [x1, #-216]
  44992c:	add	x1, sp, #0x200
  449930:	str	x0, [sp, #416]
  449934:	ldp	x2, x3, [x1, #-184]
  449938:	add	x1, sp, #0x270
  44993c:	stp	x2, x3, [x1, #-232]
  449940:	add	x2, sp, #0x200
  449944:	ldr	x1, [sp, #352]
  449948:	ldp	x2, x3, [x2, #-152]
  44994c:	stp	x2, x3, [x4, #-200]
  449950:	cmp	x0, x1
  449954:	ldp	x2, x3, [x4, #-248]
  449958:	stp	x2, x3, [x4, #-184]
  44995c:	b.ls	449974 <nftw@plt+0x46df4>  // b.plast
  449960:	ldr	w0, [sp, #384]
  449964:	cbz	w0, 449cd4 <nftw@plt+0x47154>
  449968:	add	x0, sp, #0xe8
  44996c:	str	x0, [sp, #144]
  449970:	b	449688 <nftw@plt+0x46b08>
  449974:	ldr	x5, [sp, #344]
  449978:	sub	x1, x1, x0
  44997c:	str	x1, [sp, #352]
  449980:	add	x1, x5, x0
  449984:	str	x1, [sp, #344]
  449988:	cbnz	x0, 449c0c <nftw@plt+0x4708c>
  44998c:	ldr	w0, [sp, #448]
  449990:	cbz	w0, 44a7fc <nftw@plt+0x47c7c>
  449994:	ldr	w2, [sp, #264]
  449998:	str	wzr, [sp, #268]
  44999c:	cmp	w2, #0x3
  4499a0:	ldr	x1, [sp, #408]
  4499a4:	b.gt	44a7ec <nftw@plt+0x47c6c>
  4499a8:	mov	w2, #0x1                   	// #1
  4499ac:	str	w2, [sp, #272]
  4499b0:	cbz	w0, 449a14 <nftw@plt+0x46e94>
  4499b4:	str	wzr, [sp, #276]
  4499b8:	cbz	w0, 44a848 <nftw@plt+0x47cc8>
  4499bc:	str	wzr, [sp, #280]
  4499c0:	cbz	w0, 44a894 <nftw@plt+0x47d14>
  4499c4:	str	wzr, [sp, #284]
  4499c8:	str	x1, [sp, #288]
  4499cc:	add	x2, sp, #0xe8
  4499d0:	str	x2, [sp, #144]
  4499d4:	cbnz	w0, 449688 <nftw@plt+0x46b08>
  4499d8:	ldp	x4, x5, [sp, #392]
  4499dc:	add	x24, sp, #0x1c8
  4499e0:	adrp	x3, 47f000 <_obstack_memory_used@@Base+0x1dbb8>
  4499e4:	adrp	x2, 47f000 <_obstack_memory_used@@Base+0x1dbb8>
  4499e8:	mov	x0, x24
  4499ec:	add	x3, x3, #0xb18
  4499f0:	add	x2, x2, #0xb28
  4499f4:	sub	w5, w1, w5
  4499f8:	mov	x1, #0xc8                  	// #200
  4499fc:	bl	402600 <snprintf@plt>
  449a00:	ldp	x3, x0, [sp, #432]
  449a04:	mov	x1, x24
  449a08:	mov	w2, #0x0                   	// #0
  449a0c:	blr	x3
  449a10:	b	449688 <nftw@plt+0x46b08>
  449a14:	ldp	x4, x5, [sp, #392]
  449a18:	add	x24, sp, #0x1c8
  449a1c:	mov	x0, x24
  449a20:	adrp	x3, 47f000 <_obstack_memory_used@@Base+0x1dbb8>
  449a24:	adrp	x2, 47f000 <_obstack_memory_used@@Base+0x1dbb8>
  449a28:	add	x3, x3, #0xb18
  449a2c:	add	x2, x2, #0xb28
  449a30:	sub	w5, w1, w5
  449a34:	mov	x1, #0xc8                  	// #200
  449a38:	bl	402600 <snprintf@plt>
  449a3c:	ldp	x3, x0, [sp, #432]
  449a40:	mov	w2, #0x0                   	// #0
  449a44:	mov	x1, x24
  449a48:	blr	x3
  449a4c:	ldp	x5, x0, [sp, #408]
  449a50:	mov	w2, #0x1                   	// #1
  449a54:	str	w2, [sp, #448]
  449a58:	cbz	x0, 44a950 <nftw@plt+0x47dd0>
  449a5c:	sub	x0, x0, #0x1
  449a60:	add	x1, x5, #0x1
  449a64:	stp	x1, x0, [sp, #408]
  449a68:	ldrb	w24, [x5]
  449a6c:	eor	w24, w24, #0xffffff80
  449a70:	sub	w24, w24, #0x80
  449a74:	sxtb	w24, w24
  449a78:	str	w24, [sp, #276]
  449a7c:	cbz	x0, 449d94 <nftw@plt+0x47214>
  449a80:	add	x2, x1, #0x1
  449a84:	sub	x0, x0, #0x1
  449a88:	stp	x2, x0, [sp, #408]
  449a8c:	ldrb	w1, [x1]
  449a90:	str	w1, [sp, #280]
  449a94:	cbz	x0, 449d9c <nftw@plt+0x4721c>
  449a98:	sub	x24, x0, #0x1
  449a9c:	add	x1, x2, #0x1
  449aa0:	stp	x1, x24, [sp, #408]
  449aa4:	ldrb	w2, [x2]
  449aa8:	sub	w0, w2, #0x1
  449aac:	str	w2, [sp, #284]
  449ab0:	cmp	x0, x24
  449ab4:	str	x1, [sp, #288]
  449ab8:	b.hi	449d8c <nftw@plt+0x4720c>  // b.pmore
  449abc:	add	x6, x1, x0
  449ac0:	sub	x0, x24, x0
  449ac4:	str	xzr, [sp, #296]
  449ac8:	add	x24, x1, x24
  449acc:	stp	x6, x0, [sp, #408]
  449ad0:	cmp	x6, x24
  449ad4:	mov	x25, x6
  449ad8:	mov	x27, #0x0                   	// #0
  449adc:	b.cc	449b08 <nftw@plt+0x46f88>  // b.lo, b.ul, b.last
  449ae0:	b	44a9ac <nftw@plt+0x47e2c>
  449ae4:	add	x27, x27, #0x1
  449ae8:	str	x6, [sp, #136]
  449aec:	bl	402540 <strnlen@plt>
  449af0:	add	x0, x0, #0x1
  449af4:	str	x27, [sp, #296]
  449af8:	add	x25, x25, x0
  449afc:	cmp	x24, x25
  449b00:	ldr	x6, [sp, #136]
  449b04:	b.ls	449b18 <nftw@plt+0x46f98>  // b.plast
  449b08:	ldrb	w2, [x25]
  449b0c:	sub	x1, x24, x25
  449b10:	mov	x0, x25
  449b14:	cbnz	w2, 449ae4 <nftw@plt+0x46f64>
  449b18:	str	xzr, [sp, #304]
  449b1c:	cbnz	x27, 449d24 <nftw@plt+0x471a4>
  449b20:	mov	x12, #0x0                   	// #0
  449b24:	ldrb	w0, [x6]
  449b28:	cbz	w0, 449d48 <nftw@plt+0x471c8>
  449b2c:	ldr	w0, [sp, #448]
  449b30:	adrp	x27, 47f000 <_obstack_memory_used@@Base+0x1dbb8>
  449b34:	str	w0, [sp, #160]
  449b38:	add	x25, sp, #0x1c8
  449b3c:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x1dbb8>
  449b40:	add	x0, x0, #0xb18
  449b44:	str	x0, [sp, #168]
  449b48:	add	x0, x27, #0xb28
  449b4c:	mov	x27, #0x0                   	// #0
  449b50:	str	x0, [sp, #176]
  449b54:	b	449bb0 <nftw@plt+0x47030>
  449b58:	ldp	x4, x5, [sp, #392]
  449b5c:	sub	w5, w6, w5
  449b60:	bl	402600 <snprintf@plt>
  449b64:	ldp	x3, x0, [sp, #432]
  449b68:	mov	x6, #0x0                   	// #0
  449b6c:	mov	x1, x25
  449b70:	mov	w2, #0x0                   	// #0
  449b74:	str	x6, [sp, #136]
  449b78:	blr	x3
  449b7c:	ldr	x12, [sp, #304]
  449b80:	mov	w0, #0x1                   	// #1
  449b84:	ldr	x6, [sp, #136]
  449b88:	str	w0, [sp, #160]
  449b8c:	str	w0, [sp, #448]
  449b90:	add	x0, x12, x27
  449b94:	str	x6, [x24]
  449b98:	add	x27, x27, #0x8
  449b9c:	ldr	x0, [x0]
  449ba0:	cbz	x0, 449968 <nftw@plt+0x46de8>
  449ba4:	ldr	x6, [sp, #408]
  449ba8:	ldrb	w0, [x6]
  449bac:	cbz	w0, 449d48 <nftw@plt+0x471c8>
  449bb0:	ldr	w1, [sp, #160]
  449bb4:	mov	x0, x6
  449bb8:	cbnz	w1, 449968 <nftw@plt+0x46de8>
  449bbc:	ldr	x5, [sp, #416]
  449bc0:	add	x24, x12, x27
  449bc4:	stp	x5, x12, [sp, #136]
  449bc8:	mov	x1, x5
  449bcc:	str	x6, [sp, #152]
  449bd0:	bl	402540 <strnlen@plt>
  449bd4:	ldp	x5, x12, [sp, #136]
  449bd8:	mov	x4, x0
  449bdc:	add	x4, x4, #0x1
  449be0:	mov	x0, x25
  449be4:	mov	x1, #0xc8                  	// #200
  449be8:	ldr	x6, [sp, #152]
  449bec:	cmp	x5, x4
  449bf0:	ldp	x3, x2, [sp, #168]
  449bf4:	b.cc	449b58 <nftw@plt+0x46fd8>  // b.lo, b.ul, b.last
  449bf8:	sub	x5, x5, x4
  449bfc:	mov	x0, x24
  449c00:	add	x4, x6, x4
  449c04:	stp	x4, x5, [sp, #408]
  449c08:	b	449b94 <nftw@plt+0x47014>
  449c0c:	sub	x0, x0, #0x1
  449c10:	add	x1, x5, #0x1
  449c14:	stp	x1, x0, [sp, #408]
  449c18:	ldrb	w2, [x5]
  449c1c:	str	w2, [sp, #268]
  449c20:	ldr	w2, [sp, #264]
  449c24:	cmp	w2, #0x3
  449c28:	b.gt	44a8e4 <nftw@plt+0x47d64>
  449c2c:	mov	w2, #0x1                   	// #1
  449c30:	str	w2, [sp, #272]
  449c34:	cbz	x0, 44a944 <nftw@plt+0x47dc4>
  449c38:	add	x5, x1, #0x1
  449c3c:	sub	x0, x0, #0x1
  449c40:	stp	x5, x0, [sp, #408]
  449c44:	cbnz	x0, 449a5c <nftw@plt+0x46edc>
  449c48:	ldr	w24, [sp, #448]
  449c4c:	mov	w0, w24
  449c50:	cbnz	w24, 44aa24 <nftw@plt+0x47ea4>
  449c54:	ldp	x4, x1, [sp, #392]
  449c58:	add	x25, sp, #0x1c8
  449c5c:	mov	x0, x25
  449c60:	adrp	x3, 47f000 <_obstack_memory_used@@Base+0x1dbb8>
  449c64:	adrp	x2, 47f000 <_obstack_memory_used@@Base+0x1dbb8>
  449c68:	add	x3, x3, #0xb18
  449c6c:	add	x2, x2, #0xb28
  449c70:	sub	w5, w5, w1
  449c74:	mov	x1, #0xc8                  	// #200
  449c78:	bl	402600 <snprintf@plt>
  449c7c:	ldp	x3, x0, [sp, #432]
  449c80:	mov	x1, x25
  449c84:	mov	w2, #0x0                   	// #0
  449c88:	blr	x3
  449c8c:	mov	w0, #0x1                   	// #1
  449c90:	str	w0, [sp, #448]
  449c94:	ldr	x1, [sp, #408]
  449c98:	ldr	x0, [sp, #416]
  449c9c:	b	449a78 <nftw@plt+0x46ef8>
  449ca0:	bl	447808 <nftw@plt+0x44c88>
  449ca4:	mov	x1, x0
  449ca8:	mov	x0, x28
  449cac:	str	x1, [sp, #352]
  449cb0:	bl	447650 <nftw@plt+0x44ad0>
  449cb4:	and	w0, w0, #0xffff
  449cb8:	str	w0, [sp, #264]
  449cbc:	sub	w0, w0, #0x2
  449cc0:	cmp	w0, #0x2
  449cc4:	b.hi	44983c <nftw@plt+0x46cbc>  // b.pmore
  449cc8:	mov	x0, x28
  449ccc:	bl	447808 <nftw@plt+0x44c88>
  449cd0:	b	449918 <nftw@plt+0x46d98>
  449cd4:	ldp	x4, x1, [sp, #328]
  449cd8:	add	x24, sp, #0x1c8
  449cdc:	ldr	x5, [sp, #344]
  449ce0:	mov	x0, x24
  449ce4:	adrp	x3, 47f000 <_obstack_memory_used@@Base+0x1dbb8>
  449ce8:	adrp	x2, 47f000 <_obstack_memory_used@@Base+0x1dbb8>
  449cec:	add	x3, x3, #0xb18
  449cf0:	add	x2, x2, #0xb28
  449cf4:	sub	w5, w5, w1
  449cf8:	mov	x1, #0xc8                  	// #200
  449cfc:	bl	402600 <snprintf@plt>
  449d00:	ldp	x3, x0, [sp, #368]
  449d04:	add	x4, sp, #0xe8
  449d08:	str	x4, [sp, #144]
  449d0c:	mov	x1, x24
  449d10:	mov	w2, #0x0                   	// #0
  449d14:	blr	x3
  449d18:	mov	w0, #0x1                   	// #1
  449d1c:	str	w0, [sp, #384]
  449d20:	b	449688 <nftw@plt+0x46b08>
  449d24:	ldp	x2, x3, [sp, #368]
  449d28:	lsl	x1, x27, #3
  449d2c:	mov	x0, x19
  449d30:	bl	442c10 <nftw@plt+0x40090>
  449d34:	str	x0, [sp, #304]
  449d38:	mov	x12, x0
  449d3c:	cbz	x0, 449968 <nftw@plt+0x46de8>
  449d40:	ldr	x6, [sp, #408]
  449d44:	b	449b24 <nftw@plt+0x46fa4>
  449d48:	ldr	x27, [sp, #416]
  449d4c:	cbnz	x27, 449da8 <nftw@plt+0x47228>
  449d50:	ldr	w0, [sp, #448]
  449d54:	add	x1, sp, #0xe8
  449d58:	str	x1, [sp, #144]
  449d5c:	cbnz	w0, 449688 <nftw@plt+0x46b08>
  449d60:	ldp	x4, x5, [sp, #392]
  449d64:	add	x24, sp, #0x1c8
  449d68:	mov	x0, x24
  449d6c:	adrp	x3, 47f000 <_obstack_memory_used@@Base+0x1dbb8>
  449d70:	adrp	x2, 47f000 <_obstack_memory_used@@Base+0x1dbb8>
  449d74:	add	x3, x3, #0xb18
  449d78:	add	x2, x2, #0xb28
  449d7c:	mov	x1, #0xc8                  	// #200
  449d80:	sub	w5, w6, w5
  449d84:	bl	402600 <snprintf@plt>
  449d88:	b	449a00 <nftw@plt+0x46e80>
  449d8c:	ldr	w0, [sp, #448]
  449d90:	b	4499cc <nftw@plt+0x46e4c>
  449d94:	ldr	w0, [sp, #448]
  449d98:	b	4499b8 <nftw@plt+0x46e38>
  449d9c:	ldr	w0, [sp, #448]
  449da0:	mov	x1, x2
  449da4:	b	4499c0 <nftw@plt+0x46e40>
  449da8:	add	x24, x6, #0x1
  449dac:	sub	x0, x27, #0x1
  449db0:	str	xzr, [sp, #312]
  449db4:	add	x27, x6, x27
  449db8:	stp	x24, x0, [sp, #408]
  449dbc:	cmp	x24, x27
  449dc0:	mov	x25, #0x0                   	// #0
  449dc4:	b.cs	449e58 <nftw@plt+0x472d8>  // b.hs, b.nlast
  449dc8:	ldrb	w0, [x24]
  449dcc:	cbz	w0, 449e58 <nftw@plt+0x472d8>
  449dd0:	sub	x1, x27, x24
  449dd4:	mov	x0, x24
  449dd8:	bl	402540 <strnlen@plt>
  449ddc:	add	x1, x0, #0x1
  449de0:	add	x2, x24, x1
  449de4:	ldrsb	w1, [x24, x1]
  449de8:	tbz	w1, #31, 44a91c <nftw@plt+0x47d9c>
  449dec:	add	x24, x24, x0
  449df0:	mov	x0, #0x1                   	// #1
  449df4:	nop
  449df8:	add	x0, x0, #0x1
  449dfc:	ldrsb	w1, [x24, x0]
  449e00:	tbnz	w1, #31, 449df8 <nftw@plt+0x47278>
  449e04:	ldrsb	w1, [x2, x0]
  449e08:	add	x0, x2, x0
  449e0c:	tbz	w1, #31, 44a914 <nftw@plt+0x47d94>
  449e10:	sub	x2, x0, #0x1
  449e14:	mov	x24, #0x1                   	// #1
  449e18:	add	x24, x24, #0x1
  449e1c:	ldrsb	w1, [x2, x24]
  449e20:	tbnz	w1, #31, 449e18 <nftw@plt+0x47298>
  449e24:	ldrsb	w1, [x0, x24]
  449e28:	add	x0, x0, x24
  449e2c:	tbz	w1, #31, 44a904 <nftw@plt+0x47d84>
  449e30:	sub	x2, x0, #0x1
  449e34:	mov	x24, #0x1                   	// #1
  449e38:	add	x24, x24, #0x1
  449e3c:	ldrsb	w1, [x2, x24]
  449e40:	tbnz	w1, #31, 449e38 <nftw@plt+0x472b8>
  449e44:	add	x25, x25, #0x1
  449e48:	str	x25, [sp, #312]
  449e4c:	add	x24, x0, x24
  449e50:	cmp	x27, x24
  449e54:	b.hi	449dc8 <nftw@plt+0x47248>  // b.pmore
  449e58:	ldp	x2, x3, [sp, #368]
  449e5c:	lsl	x1, x25, #3
  449e60:	mov	x0, x19
  449e64:	bl	442c10 <nftw@plt+0x40090>
  449e68:	str	x0, [sp, #320]
  449e6c:	cbz	x0, 449968 <nftw@plt+0x46de8>
  449e70:	ldr	x27, [sp, #408]
  449e74:	str	xzr, [sp, #136]
  449e78:	add	x25, sp, #0x188
  449e7c:	ldrb	w0, [x27]
  449e80:	cbz	w0, 449fc4 <nftw@plt+0x47444>
  449e84:	nop
  449e88:	ldr	w0, [sp, #448]
  449e8c:	cbnz	w0, 449968 <nftw@plt+0x46de8>
  449e90:	ldr	x24, [sp, #416]
  449e94:	mov	x0, x27
  449e98:	mov	x1, x24
  449e9c:	bl	402540 <strnlen@plt>
  449ea0:	add	x0, x0, #0x1
  449ea4:	cmp	x24, x0
  449ea8:	b.cs	449ee0 <nftw@plt+0x47360>  // b.hs, b.nlast
  449eac:	ldp	x4, x1, [sp, #392]
  449eb0:	add	x24, sp, #0x1c8
  449eb4:	mov	x0, x24
  449eb8:	adrp	x3, 47f000 <_obstack_memory_used@@Base+0x1dbb8>
  449ebc:	adrp	x2, 47f000 <_obstack_memory_used@@Base+0x1dbb8>
  449ec0:	add	x3, x3, #0xb18
  449ec4:	add	x2, x2, #0xb28
  449ec8:	sub	w5, w27, w1
  449ecc:	mov	x1, #0xc8                  	// #200
  449ed0:	bl	402600 <snprintf@plt>
  449ed4:	add	x0, sp, #0xe8
  449ed8:	str	x0, [sp, #144]
  449edc:	b	449a00 <nftw@plt+0x46e80>
  449ee0:	add	x1, x27, x0
  449ee4:	sub	x24, x24, x0
  449ee8:	mov	x0, x25
  449eec:	stp	x1, x24, [sp, #408]
  449ef0:	bl	447398 <nftw@plt+0x44818>
  449ef4:	ldrb	w1, [x27]
  449ef8:	cmp	w1, #0x2f
  449efc:	b.eq	44a6cc <nftw@plt+0x47b4c>  // b.none
  449f00:	cbz	x0, 44a6c0 <nftw@plt+0x47b40>
  449f04:	ldr	x1, [sp, #296]
  449f08:	sub	x2, x0, #0x1
  449f0c:	cmp	x2, x1
  449f10:	b.cs	44aa04 <nftw@plt+0x47e84>  // b.hs, b.nlast
  449f14:	ldr	x1, [sp, #304]
  449f18:	add	x0, x1, x0, lsl #3
  449f1c:	ldur	x4, [x0, #-8]
  449f20:	mov	x0, x4
  449f24:	str	x4, [sp, #152]
  449f28:	bl	4024f0 <strlen@plt>
  449f2c:	mov	x24, x0
  449f30:	mov	x0, x27
  449f34:	bl	4024f0 <strlen@plt>
  449f38:	mov	x1, x0
  449f3c:	ldp	x2, x3, [sp, #368]
  449f40:	str	x1, [sp, #144]
  449f44:	add	x1, x24, x1
  449f48:	mov	x0, x19
  449f4c:	add	x1, x1, #0x2
  449f50:	bl	442c10 <nftw@plt+0x40090>
  449f54:	ldr	x4, [sp, #152]
  449f58:	cbz	x0, 449968 <nftw@plt+0x46de8>
  449f5c:	mov	x1, x4
  449f60:	mov	x2, x24
  449f64:	str	x0, [sp, #152]
  449f68:	bl	402490 <memcpy@plt>
  449f6c:	ldp	x1, x3, [sp, #144]
  449f70:	mov	w4, #0x2f                  	// #47
  449f74:	add	x0, x24, #0x1
  449f78:	str	x3, [sp, #144]
  449f7c:	strb	w4, [x3, x24]
  449f80:	add	x0, x3, x0
  449f84:	add	x2, x1, #0x1
  449f88:	mov	x1, x27
  449f8c:	bl	402490 <memcpy@plt>
  449f90:	ldr	x0, [sp, #320]
  449f94:	ldp	x1, x3, [sp, #136]
  449f98:	str	x3, [x0, x1]
  449f9c:	mov	x0, x25
  449fa0:	bl	447398 <nftw@plt+0x44818>
  449fa4:	mov	x0, x25
  449fa8:	bl	447398 <nftw@plt+0x44818>
  449fac:	ldr	x0, [sp, #136]
  449fb0:	ldr	x27, [sp, #408]
  449fb4:	add	x0, x0, #0x8
  449fb8:	str	x0, [sp, #136]
  449fbc:	ldrb	w0, [x27]
  449fc0:	cbnz	w0, 449e88 <nftw@plt+0x47308>
  449fc4:	ldr	w0, [sp, #448]
  449fc8:	cbnz	w0, 449968 <nftw@plt+0x46de8>
  449fcc:	ldr	x0, [sp, #312]
  449fd0:	cbz	x0, 44a7d8 <nftw@plt+0x47c58>
  449fd4:	ldr	x0, [sp, #320]
  449fd8:	ldr	x0, [x0]
  449fdc:	str	x0, [sp, #160]
  449fe0:	ldr	x1, [sp, #352]
  449fe4:	cbz	x1, 44a9b8 <nftw@plt+0x47e38>
  449fe8:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x1dbb8>
  449fec:	add	x0, x0, #0xb28
  449ff0:	adrp	x2, 47f000 <_obstack_memory_used@@Base+0x1dbb8>
  449ff4:	add	x2, x2, #0xb18
  449ff8:	stp	x2, x0, [sp, #192]
  449ffc:	mov	w27, #0x1                   	// #1
  44a000:	mov	x25, #0x0                   	// #0
  44a004:	ldr	x0, [sp, #160]
  44a008:	str	x0, [sp, #152]
  44a00c:	add	x0, sp, #0xe8
  44a010:	mov	w24, #0x0                   	// #0
  44a014:	str	x0, [sp, #144]
  44a018:	add	x0, sp, #0x1c8
  44a01c:	str	x0, [sp, #168]
  44a020:	ldr	x2, [sp, #344]
  44a024:	sub	x4, x1, #0x1
  44a028:	ldr	w3, [sp, #284]
  44a02c:	add	x5, x2, #0x1
  44a030:	stp	x5, x4, [sp, #344]
  44a034:	ldrb	w0, [x2]
  44a038:	cmp	w0, w3
  44a03c:	b.cs	44a248 <nftw@plt+0x476c8>  // b.hs, b.nlast
  44a040:	cbz	w0, 44a2ec <nftw@plt+0x4776c>
  44a044:	cmp	w0, #0x5
  44a048:	b.eq	44a1f0 <nftw@plt+0x47670>  // b.none
  44a04c:	b.hi	44a1d0 <nftw@plt+0x47650>  // b.pmore
  44a050:	cmp	w0, #0x3
  44a054:	b.eq	44a3d0 <nftw@plt+0x47850>  // b.none
  44a058:	cmp	w0, #0x4
  44a05c:	b.ne	44a190 <nftw@plt+0x47610>  // b.any
  44a060:	mov	x0, x28
  44a064:	bl	447398 <nftw@plt+0x44818>
  44a068:	cbnz	x0, 44a73c <nftw@plt+0x47bbc>
  44a06c:	ldr	x1, [sp, #352]
  44a070:	adrp	x0, 472000 <_obstack_memory_used@@Base+0x10bb8>
  44a074:	add	x0, x0, #0x5c0
  44a078:	str	x0, [sp, #152]
  44a07c:	nop
  44a080:	cbnz	x1, 44a020 <nftw@plt+0x474a0>
  44a084:	ldr	w0, [sp, #384]
  44a088:	cbnz	w0, 449688 <nftw@plt+0x46b08>
  44a08c:	ldr	x0, [sp, #256]
  44a090:	cbz	x0, 449688 <nftw@plt+0x46b08>
  44a094:	ldr	x24, [sp, #112]
  44a098:	mov	x3, x20
  44a09c:	ldr	x25, [sp, #144]
  44a0a0:	mov	x0, x19
  44a0a4:	mov	x2, x24
  44a0a8:	mov	x1, #0x18                  	// #24
  44a0ac:	mov	x4, x25
  44a0b0:	bl	442df8 <nftw@plt+0x40278>
  44a0b4:	cbz	x0, 449688 <nftw@plt+0x46b08>
  44a0b8:	mov	x1, #0xffffffffffffffff    	// #-1
  44a0bc:	stp	x1, xzr, [x0]
  44a0c0:	mov	x3, x20
  44a0c4:	str	xzr, [x0, #16]
  44a0c8:	mov	x2, x24
  44a0cc:	mov	x1, x25
  44a0d0:	mov	x0, x19
  44a0d4:	bl	442f20 <nftw@plt+0x403a0>
  44a0d8:	cbz	w0, 449688 <nftw@plt+0x46b08>
  44a0dc:	ldr	x0, [sp, #232]
  44a0e0:	adrp	x3, 447000 <nftw@plt+0x44480>
  44a0e4:	ldr	x1, [sp, #256]
  44a0e8:	add	x3, x3, #0x1a8
  44a0ec:	mov	x2, #0x18                  	// #24
  44a0f0:	str	x0, [sp, #144]
  44a0f4:	bl	44bad0 <nftw@plt+0x48f50>
  44a0f8:	ldr	w0, [x19, #8]
  44a0fc:	ldr	x1, [sp, #256]
  44a100:	str	x1, [sp, #136]
  44a104:	cbz	w0, 44a72c <nftw@plt+0x47bac>
  44a108:	add	x0, sp, #0x270
  44a10c:	add	x24, sp, #0x188
  44a110:	str	xzr, [sp, #152]
  44a114:	ldr	x27, [x23, #16]
  44a118:	stp	xzr, xzr, [x0, #-232]
  44a11c:	stp	xzr, xzr, [x0, #-216]
  44a120:	adrp	x1, 47f000 <_obstack_memory_used@@Base+0x1dbb8>
  44a124:	add	x1, x1, #0xa8
  44a128:	ldr	w3, [x22, #120]
  44a12c:	ldr	x5, [x22, #56]
  44a130:	add	x28, sp, #0x108
  44a134:	add	x25, sp, #0x1c8
  44a138:	ldp	x4, x0, [x27]
  44a13c:	stp	x1, x5, [sp, #456]
  44a140:	ldr	x1, [sp, #112]
  44a144:	stp	x4, x0, [sp, #472]
  44a148:	str	w3, [sp, #488]
  44a14c:	str	x1, [sp, #496]
  44a150:	str	x20, [sp, #504]
  44a154:	str	wzr, [sp, #512]
  44a158:	cbz	x0, 44a6dc <nftw@plt+0x47b5c>
  44a15c:	ldr	x6, [sp, #112]
  44a160:	stp	x24, x24, [sp]
  44a164:	mov	x7, x20
  44a168:	mov	x5, x28
  44a16c:	mov	x4, x25
  44a170:	mov	x2, x27
  44a174:	mov	x1, x22
  44a178:	mov	x0, x19
  44a17c:	mov	x3, #0x0                   	// #0
  44a180:	bl	448b00 <nftw@plt+0x45f80>
  44a184:	cbz	w0, 44a660 <nftw@plt+0x47ae0>
  44a188:	ldr	x0, [sp, #480]
  44a18c:	b	44a158 <nftw@plt+0x475d8>
  44a190:	cmp	w0, #0x1
  44a194:	b.eq	44a528 <nftw@plt+0x479a8>  // b.none
  44a198:	cmp	w0, #0x2
  44a19c:	b.ne	44a4f8 <nftw@plt+0x47978>  // b.any
  44a1a0:	mov	x0, x28
  44a1a4:	bl	447398 <nftw@plt+0x44818>
  44a1a8:	ldr	w2, [sp, #268]
  44a1ac:	add	x24, x0, w24, uxtw
  44a1b0:	ldr	w3, [sp, #272]
  44a1b4:	ldr	x1, [sp, #352]
  44a1b8:	mul	x0, x2, x24
  44a1bc:	udiv	x2, x24, x3
  44a1c0:	udiv	x0, x0, x3
  44a1c4:	msub	w24, w2, w3, w24
  44a1c8:	add	x25, x25, x0
  44a1cc:	b	44a080 <nftw@plt+0x47500>
  44a1d0:	cmp	w0, #0x9
  44a1d4:	b.eq	44a49c <nftw@plt+0x4791c>  // b.none
  44a1d8:	b.ls	44a200 <nftw@plt+0x47680>  // b.plast
  44a1dc:	cmp	w0, #0xb
  44a1e0:	mov	x1, x4
  44a1e4:	b.ls	44a080 <nftw@plt+0x47500>  // b.plast
  44a1e8:	cmp	w0, #0xc
  44a1ec:	b.ne	44a4f8 <nftw@plt+0x47978>  // b.any
  44a1f0:	mov	x0, x28
  44a1f4:	bl	447398 <nftw@plt+0x44818>
  44a1f8:	ldr	x1, [sp, #352]
  44a1fc:	b	44a080 <nftw@plt+0x47500>
  44a200:	cmp	w0, #0x7
  44a204:	mov	x1, x4
  44a208:	b.ls	44a080 <nftw@plt+0x47500>  // b.plast
  44a20c:	cmp	w0, #0x8
  44a210:	b.ne	44a4f8 <nftw@plt+0x47978>  // b.any
  44a214:	ldr	w4, [sp, #280]
  44a218:	mov	w0, #0xff                  	// #255
  44a21c:	sub	w0, w0, w3
  44a220:	ldr	w2, [sp, #268]
  44a224:	ldr	w3, [sp, #272]
  44a228:	udiv	w0, w0, w4
  44a22c:	add	w24, w0, w24
  44a230:	mul	w0, w24, w2
  44a234:	udiv	w2, w24, w3
  44a238:	udiv	w0, w0, w3
  44a23c:	msub	w24, w2, w3, w24
  44a240:	add	x25, x25, x0
  44a244:	b	44a080 <nftw@plt+0x47500>
  44a248:	add	x1, sp, #0x114
  44a24c:	sub	w0, w0, w3
  44a250:	ldp	w6, w5, [x1]
  44a254:	ldp	w2, w3, [x1, #-8]
  44a258:	udiv	w1, w0, w5
  44a25c:	add	w24, w1, w24
  44a260:	msub	w0, w1, w5, w0
  44a264:	add	w0, w0, w6
  44a268:	mul	w1, w24, w2
  44a26c:	add	w27, w27, w0
  44a270:	udiv	w2, w24, w3
  44a274:	ldr	x0, [sp, #256]
  44a278:	udiv	w1, w1, w3
  44a27c:	msub	w24, w2, w3, w24
  44a280:	ldp	x2, x3, [sp, #368]
  44a284:	add	x25, x25, x1
  44a288:	cbz	x0, 44a2ac <nftw@plt+0x4772c>
  44a28c:	add	x0, x0, x0, lsl #1
  44a290:	ldr	x1, [sp, #232]
  44a294:	lsl	x0, x0, #3
  44a298:	sub	x0, x0, #0x18
  44a29c:	add	x5, x1, x0
  44a2a0:	ldr	x0, [x1, x0]
  44a2a4:	cmp	x25, x0
  44a2a8:	b.eq	44a3e4 <nftw@plt+0x47864>  // b.none
  44a2ac:	ldr	x4, [sp, #144]
  44a2b0:	mov	x0, x19
  44a2b4:	mov	x1, #0x18                  	// #24
  44a2b8:	bl	442df8 <nftw@plt+0x40278>
  44a2bc:	cbz	x0, 44a3dc <nftw@plt+0x4785c>
  44a2c0:	ldr	x1, [x22, #16]
  44a2c4:	ldr	x2, [sp, #152]
  44a2c8:	str	x2, [x0, #8]
  44a2cc:	ldr	x2, [sp, #256]
  44a2d0:	add	x1, x1, x25
  44a2d4:	str	x1, [x0]
  44a2d8:	add	x1, x2, #0x1
  44a2dc:	stp	w27, w2, [x0, #16]
  44a2e0:	str	x1, [sp, #256]
  44a2e4:	ldr	x1, [sp, #352]
  44a2e8:	b	44a080 <nftw@plt+0x47500>
  44a2ec:	mov	x0, x28
  44a2f0:	bl	447398 <nftw@plt+0x44818>
  44a2f4:	ldp	x7, x1, [sp, #344]
  44a2f8:	mov	x6, x0
  44a2fc:	cbnz	x1, 44a364 <nftw@plt+0x477e4>
  44a300:	ldr	w0, [sp, #384]
  44a304:	cbz	w0, 44a408 <nftw@plt+0x47888>
  44a308:	sub	x0, x6, #0x1
  44a30c:	cmp	x0, x1
  44a310:	b.ls	44a7a4 <nftw@plt+0x47c24>  // b.plast
  44a314:	ldr	w0, [sp, #384]
  44a318:	cbnz	w0, 449688 <nftw@plt+0x46b08>
  44a31c:	ldp	x4, x1, [sp, #328]
  44a320:	add	x24, sp, #0x1c8
  44a324:	ldr	x5, [sp, #344]
  44a328:	adrp	x3, 47f000 <_obstack_memory_used@@Base+0x1dbb8>
  44a32c:	mov	x0, x24
  44a330:	add	x3, x3, #0xb18
  44a334:	adrp	x2, 47f000 <_obstack_memory_used@@Base+0x1dbb8>
  44a338:	sub	w5, w5, w1
  44a33c:	add	x2, x2, #0xb28
  44a340:	mov	x1, #0xc8                  	// #200
  44a344:	bl	402600 <snprintf@plt>
  44a348:	ldp	x3, x0, [sp, #368]
  44a34c:	mov	x1, x24
  44a350:	mov	w2, #0x0                   	// #0
  44a354:	blr	x3
  44a358:	mov	w0, #0x1                   	// #1
  44a35c:	str	w0, [sp, #384]
  44a360:	b	449688 <nftw@plt+0x46b08>
  44a364:	sub	x1, x1, #0x1
  44a368:	add	x5, x7, #0x1
  44a36c:	stp	x5, x1, [sp, #344]
  44a370:	ldrb	w2, [x7]
  44a374:	cmp	w2, #0x3
  44a378:	b.eq	44a448 <nftw@plt+0x478c8>  // b.none
  44a37c:	b.hi	44a3a0 <nftw@plt+0x47820>  // b.pmore
  44a380:	cmp	w2, #0x1
  44a384:	b.ne	44a3ac <nftw@plt+0x4782c>  // b.any
  44a388:	ldr	x0, [sp, #160]
  44a38c:	mov	w27, w2
  44a390:	mov	w24, #0x0                   	// #0
  44a394:	mov	x25, #0x0                   	// #0
  44a398:	str	x0, [sp, #152]
  44a39c:	b	44a080 <nftw@plt+0x47500>
  44a3a0:	cmp	w2, #0x4
  44a3a4:	b.eq	44a1f0 <nftw@plt+0x47670>  // b.none
  44a3a8:	b	44a308 <nftw@plt+0x47788>
  44a3ac:	cmp	w2, #0x2
  44a3b0:	b.ne	44a308 <nftw@plt+0x47788>  // b.any
  44a3b4:	ldr	x0, [sp, #184]
  44a3b8:	ldr	w1, [x0, #48]
  44a3bc:	mov	x0, x28
  44a3c0:	bl	4478e0 <nftw@plt+0x44d60>
  44a3c4:	mov	x25, x0
  44a3c8:	ldr	x1, [sp, #352]
  44a3cc:	b	44a080 <nftw@plt+0x47500>
  44a3d0:	mov	x0, x28
  44a3d4:	bl	4474e8 <nftw@plt+0x44968>
  44a3d8:	add	w27, w27, w0
  44a3dc:	ldr	x1, [sp, #352]
  44a3e0:	b	44a080 <nftw@plt+0x47500>
  44a3e4:	ldr	x0, [x5, #8]
  44a3e8:	ldr	x1, [sp, #152]
  44a3ec:	cmp	x1, x0
  44a3f0:	b.ne	44a2ac <nftw@plt+0x4772c>  // b.any
  44a3f4:	ldr	w0, [x5, #16]
  44a3f8:	mov	x1, x4
  44a3fc:	cmp	w27, w0
  44a400:	b.ne	44a2ac <nftw@plt+0x4772c>  // b.any
  44a404:	b	44a080 <nftw@plt+0x47500>
  44a408:	ldp	x3, x2, [sp, #192]
  44a40c:	mov	x1, #0xc8                  	// #200
  44a410:	ldp	x4, x5, [sp, #328]
  44a414:	str	x6, [sp, #136]
  44a418:	ldr	x0, [sp, #168]
  44a41c:	sub	w5, w7, w5
  44a420:	bl	402600 <snprintf@plt>
  44a424:	ldp	x3, x0, [sp, #368]
  44a428:	mov	w2, #0x0                   	// #0
  44a42c:	ldr	x1, [sp, #168]
  44a430:	blr	x3
  44a434:	mov	w0, #0x1                   	// #1
  44a438:	str	w0, [sp, #384]
  44a43c:	ldr	x6, [sp, #136]
  44a440:	ldr	x1, [sp, #352]
  44a444:	b	44a308 <nftw@plt+0x47788>
  44a448:	mov	x0, x5
  44a44c:	str	x5, [sp, #136]
  44a450:	str	x1, [sp, #152]
  44a454:	str	x7, [sp, #176]
  44a458:	bl	402540 <strnlen@plt>
  44a45c:	ldr	x1, [sp, #152]
  44a460:	add	x0, x0, #0x1
  44a464:	ldr	x5, [sp, #136]
  44a468:	cmp	x1, x0
  44a46c:	ldr	x7, [sp, #176]
  44a470:	b.cs	44a578 <nftw@plt+0x479f8>  // b.hs, b.nlast
  44a474:	ldr	w0, [sp, #384]
  44a478:	cbnz	w0, 449688 <nftw@plt+0x46b08>
  44a47c:	ldp	x4, x1, [sp, #328]
  44a480:	add	x24, sp, #0x1c8
  44a484:	adrp	x3, 47f000 <_obstack_memory_used@@Base+0x1dbb8>
  44a488:	mov	x0, x24
  44a48c:	add	x3, x3, #0xb18
  44a490:	adrp	x2, 47f000 <_obstack_memory_used@@Base+0x1dbb8>
  44a494:	sub	w5, w5, w1
  44a498:	b	44a33c <nftw@plt+0x477bc>
  44a49c:	cmp	x4, #0x1
  44a4a0:	b.hi	44a694 <nftw@plt+0x47b14>  // b.pmore
  44a4a4:	ldr	w0, [sp, #384]
  44a4a8:	mov	x1, x4
  44a4ac:	cbz	w0, 44a4b8 <nftw@plt+0x47938>
  44a4b0:	mov	w24, #0x0                   	// #0
  44a4b4:	b	44a080 <nftw@plt+0x47500>
  44a4b8:	ldp	x3, x2, [sp, #192]
  44a4bc:	mov	x1, #0xc8                  	// #200
  44a4c0:	ldp	x4, x6, [sp, #328]
  44a4c4:	ldr	x24, [sp, #168]
  44a4c8:	mov	x0, x24
  44a4cc:	sub	w5, w5, w6
  44a4d0:	bl	402600 <snprintf@plt>
  44a4d4:	ldp	x3, x0, [sp, #368]
  44a4d8:	mov	x1, x24
  44a4dc:	mov	w2, #0x0                   	// #0
  44a4e0:	mov	w24, #0x0                   	// #0
  44a4e4:	blr	x3
  44a4e8:	mov	w0, #0x1                   	// #1
  44a4ec:	str	w0, [sp, #384]
  44a4f0:	ldr	x1, [sp, #352]
  44a4f4:	b	44a080 <nftw@plt+0x47500>
  44a4f8:	ldr	x1, [sp, #288]
  44a4fc:	sub	w0, w0, #0x1
  44a500:	ldrb	w1, [x1, w0, uxtw]
  44a504:	cbz	w1, 44a90c <nftw@plt+0x47d8c>
  44a508:	mov	x0, x28
  44a50c:	str	w1, [sp, #136]
  44a510:	bl	447398 <nftw@plt+0x44818>
  44a514:	ldr	w1, [sp, #136]
  44a518:	subs	w1, w1, #0x1
  44a51c:	b.ne	44a508 <nftw@plt+0x47988>  // b.any
  44a520:	ldr	x1, [sp, #352]
  44a524:	b	44a080 <nftw@plt+0x47500>
  44a528:	ldr	x0, [sp, #256]
  44a52c:	ldp	x2, x3, [sp, #368]
  44a530:	cbz	x0, 44a2ac <nftw@plt+0x4772c>
  44a534:	add	x0, x0, x0, lsl #1
  44a538:	ldr	x1, [sp, #232]
  44a53c:	lsl	x0, x0, #3
  44a540:	sub	x0, x0, #0x18
  44a544:	add	x5, x1, x0
  44a548:	ldr	x0, [x1, x0]
  44a54c:	cmp	x0, x25
  44a550:	b.ne	44a2ac <nftw@plt+0x4772c>  // b.any
  44a554:	ldr	x0, [x5, #8]
  44a558:	ldr	x1, [sp, #152]
  44a55c:	cmp	x1, x0
  44a560:	b.ne	44a2ac <nftw@plt+0x4772c>  // b.any
  44a564:	ldr	w0, [x5, #16]
  44a568:	mov	x1, x4
  44a56c:	cmp	w0, w27
  44a570:	b.ne	44a2ac <nftw@plt+0x4772c>  // b.any
  44a574:	b	44a080 <nftw@plt+0x47500>
  44a578:	sub	x1, x1, x0
  44a57c:	add	x0, x5, x0
  44a580:	str	x7, [sp, #152]
  44a584:	stp	x0, x1, [sp, #344]
  44a588:	mov	x0, x28
  44a58c:	bl	447398 <nftw@plt+0x44818>
  44a590:	mov	x1, x0
  44a594:	mov	x0, x28
  44a598:	str	x1, [sp, #176]
  44a59c:	bl	447398 <nftw@plt+0x44818>
  44a5a0:	mov	x0, x28
  44a5a4:	bl	447398 <nftw@plt+0x44818>
  44a5a8:	ldr	x7, [sp, #152]
  44a5ac:	ldr	x5, [sp, #136]
  44a5b0:	ldrb	w0, [x7, #1]
  44a5b4:	cmp	w0, #0x2f
  44a5b8:	b.eq	44a798 <nftw@plt+0x47c18>  // b.none
  44a5bc:	ldr	w0, [sp, #176]
  44a5c0:	cbnz	w0, 44a7b8 <nftw@plt+0x47c38>
  44a5c4:	ldr	x0, [sp, #184]
  44a5c8:	ldr	x4, [x0, #72]
  44a5cc:	mov	x0, x4
  44a5d0:	str	x5, [sp, #136]
  44a5d4:	str	x4, [sp, #216]
  44a5d8:	bl	4024f0 <strlen@plt>
  44a5dc:	ldr	x5, [sp, #136]
  44a5e0:	mov	x1, x0
  44a5e4:	str	x1, [sp, #136]
  44a5e8:	mov	x0, x5
  44a5ec:	str	x5, [sp, #208]
  44a5f0:	bl	4024f0 <strlen@plt>
  44a5f4:	mov	x1, x0
  44a5f8:	ldp	x2, x3, [sp, #368]
  44a5fc:	str	x1, [sp, #176]
  44a600:	ldr	x4, [sp, #136]
  44a604:	mov	x0, x19
  44a608:	add	x1, x4, x1
  44a60c:	add	x1, x1, #0x2
  44a610:	bl	442c10 <nftw@plt+0x40090>
  44a614:	str	x0, [sp, #152]
  44a618:	cbz	x0, 449688 <nftw@plt+0x46b08>
  44a61c:	ldr	x2, [sp, #136]
  44a620:	ldr	x4, [sp, #216]
  44a624:	mov	x1, x4
  44a628:	bl	402490 <memcpy@plt>
  44a62c:	ldr	x4, [sp, #136]
  44a630:	mov	w0, #0x2f                  	// #47
  44a634:	ldr	x3, [sp, #152]
  44a638:	ldr	x5, [sp, #208]
  44a63c:	ldr	x1, [sp, #176]
  44a640:	strb	w0, [x3, x4]
  44a644:	add	x0, x4, #0x1
  44a648:	add	x2, x1, #0x1
  44a64c:	add	x0, x3, x0
  44a650:	mov	x1, x5
  44a654:	bl	402490 <memcpy@plt>
  44a658:	ldr	x1, [sp, #352]
  44a65c:	b	44a080 <nftw@plt+0x47500>
  44a660:	mov	x25, #0x0                   	// #0
  44a664:	mov	x28, #0x0                   	// #0
  44a668:	ldr	x2, [sp, #296]
  44a66c:	cbnz	x2, 44a77c <nftw@plt+0x47bfc>
  44a670:	ldp	x2, x1, [sp, #312]
  44a674:	mov	x4, x20
  44a678:	ldr	x3, [sp, #112]
  44a67c:	mov	x0, x19
  44a680:	lsl	x2, x2, #3
  44a684:	bl	442ad8 <nftw@plt+0x3ff58>
  44a688:	mov	w1, #0x1                   	// #1
  44a68c:	ldr	x24, [sp, #144]
  44a690:	b	4496dc <nftw@plt+0x46b5c>
  44a694:	ldr	w0, [sp, #360]
  44a698:	sub	x1, x1, #0x3
  44a69c:	add	x3, x2, #0x3
  44a6a0:	stp	x3, x1, [sp, #344]
  44a6a4:	cbz	w0, 44a764 <nftw@plt+0x47be4>
  44a6a8:	ldrb	w0, [x2, #1]
  44a6ac:	mov	w24, #0x0                   	// #0
  44a6b0:	ldrb	w2, [x2, #2]
  44a6b4:	orr	w0, w2, w0, lsl #8
  44a6b8:	add	x25, x25, w0, uxth
  44a6bc:	b	44a080 <nftw@plt+0x47500>
  44a6c0:	ldr	x0, [sp, #184]
  44a6c4:	ldr	x4, [x0, #72]
  44a6c8:	cbnz	x4, 449f20 <nftw@plt+0x473a0>
  44a6cc:	ldr	x1, [sp, #136]
  44a6d0:	ldr	x0, [sp, #320]
  44a6d4:	str	x27, [x0, x1]
  44a6d8:	b	449f9c <nftw@plt+0x4741c>
  44a6dc:	ldr	x28, [x24, #24]
  44a6e0:	cbz	x28, 44a660 <nftw@plt+0x47ae0>
  44a6e4:	ldr	x0, [sp, #152]
  44a6e8:	cbz	x0, 44a924 <nftw@plt+0x47da4>
  44a6ec:	ldr	x2, [sp, #112]
  44a6f0:	mov	x1, x0
  44a6f4:	mov	x24, x0
  44a6f8:	mov	x3, x20
  44a6fc:	mov	x0, x19
  44a700:	bl	442f10 <nftw@plt+0x40390>
  44a704:	mov	x25, x0
  44a708:	cbz	x0, 44a660 <nftw@plt+0x47ae0>
  44a70c:	str	xzr, [x24, #24]
  44a710:	mov	x1, x28
  44a714:	mov	x0, x25
  44a718:	adrp	x3, 447000 <nftw@plt+0x44480>
  44a71c:	mov	x2, #0x18                  	// #24
  44a720:	add	x3, x3, #0x348
  44a724:	bl	44bad0 <nftw@plt+0x48f50>
  44a728:	b	44a668 <nftw@plt+0x47ae8>
  44a72c:	add	x24, x22, #0x80
  44a730:	str	x24, [sp, #152]
  44a734:	ldr	x27, [x23, #16]
  44a738:	b	44a120 <nftw@plt+0x475a0>
  44a73c:	ldr	x1, [sp, #312]
  44a740:	sub	x2, x0, #0x1
  44a744:	cmp	x2, x1
  44a748:	b.cs	44a9c4 <nftw@plt+0x47e44>  // b.hs, b.nlast
  44a74c:	ldr	x2, [sp, #320]
  44a750:	ldr	x1, [sp, #352]
  44a754:	add	x0, x2, x0, lsl #3
  44a758:	ldur	x0, [x0, #-8]
  44a75c:	str	x0, [sp, #152]
  44a760:	b	44a080 <nftw@plt+0x47500>
  44a764:	ldrb	w0, [x2, #2]
  44a768:	mov	w24, #0x0                   	// #0
  44a76c:	ldrb	w2, [x2, #1]
  44a770:	orr	w0, w2, w0, lsl #8
  44a774:	add	x25, x25, w0, uxth
  44a778:	b	44a080 <nftw@plt+0x47500>
  44a77c:	ldr	x3, [sp, #112]
  44a780:	lsl	x2, x2, #3
  44a784:	ldr	x1, [sp, #304]
  44a788:	mov	x4, x20
  44a78c:	mov	x0, x19
  44a790:	bl	442ad8 <nftw@plt+0x3ff58>
  44a794:	b	44a670 <nftw@plt+0x47af0>
  44a798:	str	x5, [sp, #152]
  44a79c:	ldr	x1, [sp, #352]
  44a7a0:	b	44a080 <nftw@plt+0x47500>
  44a7a4:	ldr	x2, [sp, #344]
  44a7a8:	sub	x1, x1, x0
  44a7ac:	add	x0, x2, x0
  44a7b0:	stp	x0, x1, [sp, #344]
  44a7b4:	b	44a080 <nftw@plt+0x47500>
  44a7b8:	ldr	w0, [sp, #176]
  44a7bc:	ldr	x1, [sp, #296]
  44a7c0:	sub	w0, w0, #0x1
  44a7c4:	cmp	x0, x1
  44a7c8:	b.cs	44aa30 <nftw@plt+0x47eb0>  // b.hs, b.nlast
  44a7cc:	ldr	x1, [sp, #304]
  44a7d0:	ldr	x4, [x1, x0, lsl #3]
  44a7d4:	b	44a5cc <nftw@plt+0x47a4c>
  44a7d8:	adrp	x0, 472000 <_obstack_memory_used@@Base+0x10bb8>
  44a7dc:	add	x0, x0, #0x5c0
  44a7e0:	str	x0, [sp, #160]
  44a7e4:	b	449fe0 <nftw@plt+0x47460>
  44a7e8:	ldr	w0, [sp, #448]
  44a7ec:	cbz	w0, 44a960 <nftw@plt+0x47de0>
  44a7f0:	str	wzr, [sp, #272]
  44a7f4:	cbnz	w0, 4499b4 <nftw@plt+0x46e34>
  44a7f8:	b	449a14 <nftw@plt+0x46e94>
  44a7fc:	ldp	x4, x1, [sp, #392]
  44a800:	add	x24, sp, #0x1c8
  44a804:	mov	x0, x24
  44a808:	adrp	x3, 47f000 <_obstack_memory_used@@Base+0x1dbb8>
  44a80c:	adrp	x2, 47f000 <_obstack_memory_used@@Base+0x1dbb8>
  44a810:	add	x3, x3, #0xb18
  44a814:	add	x2, x2, #0xb28
  44a818:	sub	w5, w5, w1
  44a81c:	mov	x1, #0xc8                  	// #200
  44a820:	bl	402600 <snprintf@plt>
  44a824:	ldp	x3, x0, [sp, #432]
  44a828:	mov	x1, x24
  44a82c:	mov	w2, #0x0                   	// #0
  44a830:	blr	x3
  44a834:	mov	w3, #0x1                   	// #1
  44a838:	mov	w2, #0x0                   	// #0
  44a83c:	str	w3, [sp, #448]
  44a840:	ldp	x1, x0, [sp, #408]
  44a844:	b	449c1c <nftw@plt+0x4709c>
  44a848:	ldp	x4, x5, [sp, #392]
  44a84c:	add	x24, sp, #0x1c8
  44a850:	mov	x0, x24
  44a854:	adrp	x3, 47f000 <_obstack_memory_used@@Base+0x1dbb8>
  44a858:	adrp	x2, 47f000 <_obstack_memory_used@@Base+0x1dbb8>
  44a85c:	add	x3, x3, #0xb18
  44a860:	add	x2, x2, #0xb28
  44a864:	sub	w5, w1, w5
  44a868:	mov	x1, #0xc8                  	// #200
  44a86c:	bl	402600 <snprintf@plt>
  44a870:	ldp	x3, x0, [sp, #432]
  44a874:	mov	x1, x24
  44a878:	mov	w2, #0x0                   	// #0
  44a87c:	blr	x3
  44a880:	mov	w3, #0x1                   	// #1
  44a884:	mov	w1, #0x0                   	// #0
  44a888:	str	w3, [sp, #448]
  44a88c:	ldp	x2, x0, [sp, #408]
  44a890:	b	449a90 <nftw@plt+0x46f10>
  44a894:	ldp	x4, x5, [sp, #392]
  44a898:	add	x24, sp, #0x1c8
  44a89c:	mov	x0, x24
  44a8a0:	adrp	x3, 47f000 <_obstack_memory_used@@Base+0x1dbb8>
  44a8a4:	adrp	x2, 47f000 <_obstack_memory_used@@Base+0x1dbb8>
  44a8a8:	add	x3, x3, #0xb18
  44a8ac:	add	x2, x2, #0xb28
  44a8b0:	sub	w5, w1, w5
  44a8b4:	mov	x1, #0xc8                  	// #200
  44a8b8:	bl	402600 <snprintf@plt>
  44a8bc:	ldp	x3, x0, [sp, #432]
  44a8c0:	mov	x1, x24
  44a8c4:	mov	w2, #0x0                   	// #0
  44a8c8:	blr	x3
  44a8cc:	mov	w3, #0x1                   	// #1
  44a8d0:	mov	x0, #0xffffffff            	// #4294967295
  44a8d4:	mov	w2, #0x0                   	// #0
  44a8d8:	str	w3, [sp, #448]
  44a8dc:	ldp	x1, x24, [sp, #408]
  44a8e0:	b	449aac <nftw@plt+0x46f2c>
  44a8e4:	cbz	x0, 44a7e8 <nftw@plt+0x47c68>
  44a8e8:	sub	x0, x0, #0x1
  44a8ec:	add	x2, x1, #0x1
  44a8f0:	stp	x2, x0, [sp, #408]
  44a8f4:	ldrb	w3, [x1]
  44a8f8:	mov	x1, x2
  44a8fc:	str	w3, [sp, #272]
  44a900:	b	449c34 <nftw@plt+0x470b4>
  44a904:	mov	x24, #0x1                   	// #1
  44a908:	b	449e44 <nftw@plt+0x472c4>
  44a90c:	mov	x1, x4
  44a910:	b	44a080 <nftw@plt+0x47500>
  44a914:	mov	x24, #0x1                   	// #1
  44a918:	b	449e24 <nftw@plt+0x472a4>
  44a91c:	mov	x0, #0x1                   	// #1
  44a920:	b	449e04 <nftw@plt+0x47284>
  44a924:	ldr	x2, [sp, #112]
  44a928:	mov	x3, x20
  44a92c:	add	x1, sp, #0x188
  44a930:	mov	x0, x19
  44a934:	bl	442f20 <nftw@plt+0x403a0>
  44a938:	cbz	w0, 44a660 <nftw@plt+0x47ae0>
  44a93c:	ldr	x25, [x24]
  44a940:	b	44a710 <nftw@plt+0x47b90>
  44a944:	ldr	w0, [sp, #448]
  44a948:	cbnz	w0, 4499b4 <nftw@plt+0x46e34>
  44a94c:	b	449a14 <nftw@plt+0x46e94>
  44a950:	mov	x1, x5
  44a954:	mov	w0, w2
  44a958:	str	wzr, [sp, #276]
  44a95c:	b	4499b8 <nftw@plt+0x46e38>
  44a960:	ldp	x4, x5, [sp, #392]
  44a964:	add	x24, sp, #0x1c8
  44a968:	mov	x0, x24
  44a96c:	adrp	x3, 47f000 <_obstack_memory_used@@Base+0x1dbb8>
  44a970:	adrp	x2, 47f000 <_obstack_memory_used@@Base+0x1dbb8>
  44a974:	add	x3, x3, #0xb18
  44a978:	add	x2, x2, #0xb28
  44a97c:	sub	w5, w1, w5
  44a980:	mov	x1, #0xc8                  	// #200
  44a984:	bl	402600 <snprintf@plt>
  44a988:	ldp	x3, x0, [sp, #432]
  44a98c:	mov	x1, x24
  44a990:	mov	w2, #0x0                   	// #0
  44a994:	blr	x3
  44a998:	mov	w1, #0x1                   	// #1
  44a99c:	mov	w3, #0x0                   	// #0
  44a9a0:	str	w1, [sp, #448]
  44a9a4:	ldp	x2, x0, [sp, #408]
  44a9a8:	b	44a8f8 <nftw@plt+0x47d78>
  44a9ac:	mov	x12, #0x0                   	// #0
  44a9b0:	str	xzr, [sp, #304]
  44a9b4:	b	449b24 <nftw@plt+0x46fa4>
  44a9b8:	add	x0, sp, #0xe8
  44a9bc:	str	x0, [sp, #144]
  44a9c0:	b	44a084 <nftw@plt+0x47504>
  44a9c4:	ldp	x4, x1, [sp, #328]
  44a9c8:	add	x24, sp, #0x1c8
  44a9cc:	ldr	x5, [sp, #344]
  44a9d0:	adrp	x3, 47f000 <_obstack_memory_used@@Base+0x1dbb8>
  44a9d4:	mov	x0, x24
  44a9d8:	add	x3, x3, #0xda8
  44a9dc:	adrp	x2, 47f000 <_obstack_memory_used@@Base+0x1dbb8>
  44a9e0:	sub	w5, w5, w1
  44a9e4:	add	x2, x2, #0xb28
  44a9e8:	mov	x1, #0xc8                  	// #200
  44a9ec:	bl	402600 <snprintf@plt>
  44a9f0:	ldp	x3, x0, [sp, #368]
  44a9f4:	mov	x1, x24
  44a9f8:	mov	w2, #0x0                   	// #0
  44a9fc:	blr	x3
  44aa00:	b	449688 <nftw@plt+0x46b08>
  44aa04:	add	x24, sp, #0x1c8
  44aa08:	adrp	x3, 47f000 <_obstack_memory_used@@Base+0x1dbb8>
  44aa0c:	mov	x0, x24
  44aa10:	add	x3, x3, #0xd40
  44aa14:	adrp	x2, 47f000 <_obstack_memory_used@@Base+0x1dbb8>
  44aa18:	ldp	x4, x1, [sp, #328]
  44aa1c:	ldr	x5, [sp, #344]
  44aa20:	b	449858 <nftw@plt+0x46cd8>
  44aa24:	mov	x1, x5
  44aa28:	str	wzr, [sp, #276]
  44aa2c:	b	4499b8 <nftw@plt+0x46e38>
  44aa30:	add	x24, sp, #0x1c8
  44aa34:	adrp	x3, 47f000 <_obstack_memory_used@@Base+0x1dbb8>
  44aa38:	mov	x0, x24
  44aa3c:	add	x3, x3, #0xd78
  44aa40:	adrp	x2, 47f000 <_obstack_memory_used@@Base+0x1dbb8>
  44aa44:	ldp	x4, x1, [sp, #328]
  44aa48:	ldr	x5, [sp, #344]
  44aa4c:	b	44a9e0 <nftw@plt+0x47e60>
  44aa50:	stp	x29, x30, [sp, #-96]!
  44aa54:	mov	x29, sp
  44aa58:	stp	x23, x24, [sp, #48]
  44aa5c:	mov	x24, x0
  44aa60:	ldr	w0, [x0, #8]
  44aa64:	stp	x19, x20, [sp, #16]
  44aa68:	mov	x23, x3
  44aa6c:	mov	x20, x2
  44aa70:	stp	x21, x22, [sp, #32]
  44aa74:	mov	x22, x1
  44aa78:	mov	x21, x4
  44aa7c:	cbnz	w0, 44aae0 <nftw@plt+0x47f60>
  44aa80:	ldr	x19, [x24, #32]
  44aa84:	cbz	x19, 44ab28 <nftw@plt+0x47fa8>
  44aa88:	str	x25, [sp, #64]
  44aa8c:	add	x25, sp, #0x5c
  44aa90:	b	44aaa4 <nftw@plt+0x47f24>
  44aa94:	ldr	w0, [sp, #92]
  44aa98:	cbnz	w0, 44ab54 <nftw@plt+0x47fd4>
  44aa9c:	ldr	x19, [x19]
  44aaa0:	cbz	x19, 44ab24 <nftw@plt+0x47fa4>
  44aaa4:	mov	x6, x25
  44aaa8:	mov	x5, x21
  44aaac:	mov	x4, x23
  44aab0:	mov	x3, x20
  44aab4:	mov	x2, x22
  44aab8:	mov	x1, x19
  44aabc:	mov	x0, x24
  44aac0:	bl	4492d8 <nftw@plt+0x46758>
  44aac4:	cbz	w0, 44aa94 <nftw@plt+0x47f14>
  44aac8:	ldp	x19, x20, [sp, #16]
  44aacc:	ldp	x21, x22, [sp, #32]
  44aad0:	ldp	x23, x24, [sp, #48]
  44aad4:	ldr	x25, [sp, #64]
  44aad8:	ldp	x29, x30, [sp], #96
  44aadc:	ret
  44aae0:	add	x19, x24, #0x20
  44aae4:	str	x25, [sp, #64]
  44aae8:	add	x25, sp, #0x5c
  44aaec:	b	44ab00 <nftw@plt+0x47f80>
  44aaf0:	bl	4492d8 <nftw@plt+0x46758>
  44aaf4:	cbnz	w0, 44aac8 <nftw@plt+0x47f48>
  44aaf8:	ldr	w0, [sp, #92]
  44aafc:	cbnz	w0, 44ab54 <nftw@plt+0x47fd4>
  44ab00:	ldar	x19, [x19]
  44ab04:	mov	x6, x25
  44ab08:	mov	x5, x21
  44ab0c:	mov	x4, x23
  44ab10:	mov	x3, x20
  44ab14:	mov	x2, x22
  44ab18:	mov	x1, x19
  44ab1c:	mov	x0, x24
  44ab20:	cbnz	x19, 44aaf0 <nftw@plt+0x47f70>
  44ab24:	ldr	x25, [sp, #64]
  44ab28:	mov	x1, x22
  44ab2c:	mov	x0, x21
  44ab30:	mov	x4, #0x0                   	// #0
  44ab34:	mov	w3, #0x0                   	// #0
  44ab38:	mov	x2, #0x0                   	// #0
  44ab3c:	blr	x20
  44ab40:	ldp	x19, x20, [sp, #16]
  44ab44:	ldp	x21, x22, [sp, #32]
  44ab48:	ldp	x23, x24, [sp, #48]
  44ab4c:	ldp	x29, x30, [sp], #96
  44ab50:	ret
  44ab54:	mov	w0, #0x0                   	// #0
  44ab58:	ldp	x19, x20, [sp, #16]
  44ab5c:	ldp	x21, x22, [sp, #32]
  44ab60:	ldp	x23, x24, [sp, #48]
  44ab64:	ldr	x25, [sp, #64]
  44ab68:	ldp	x29, x30, [sp], #96
  44ab6c:	ret
  44ab70:	sub	sp, sp, #0x370
  44ab74:	mov	x8, x2
  44ab78:	add	x9, sp, #0x200
  44ab7c:	stp	x29, x30, [sp, #48]
  44ab80:	add	x29, sp, #0x30
  44ab84:	stp	x19, x20, [sp, #64]
  44ab88:	stp	x21, x22, [sp, #80]
  44ab8c:	stp	x23, x24, [sp, #96]
  44ab90:	stp	x25, x26, [sp, #112]
  44ab94:	mov	x26, x0
  44ab98:	stp	xzr, xzr, [x9, #-152]
  44ab9c:	stp	xzr, xzr, [x9, #-120]
  44aba0:	str	x7, [sp, #200]
  44aba4:	str	x1, [sp, #240]
  44aba8:	str	x6, [sp, #264]
  44abac:	stp	x2, x3, [sp, #288]
  44abb0:	stp	x4, x5, [sp, #304]
  44abb4:	stp	xzr, xzr, [sp, #336]
  44abb8:	str	xzr, [sp, #352]
  44abbc:	stp	xzr, xzr, [sp, #376]
  44abc0:	stp	xzr, xzr, [sp, #408]
  44abc4:	stp	x2, x2, [sp, #432]
  44abc8:	adrp	x2, 47f000 <_obstack_memory_used@@Base+0x1dbb8>
  44abcc:	add	x2, x2, #0xa8
  44abd0:	str	x2, [sp, #424]
  44abd4:	str	x3, [sp, #448]
  44abd8:	ldr	x24, [sp, #928]
  44abdc:	ldr	x23, [sp, #936]
  44abe0:	ldr	w0, [sp, #912]
  44abe4:	str	w0, [sp, #456]
  44abe8:	stp	x24, x23, [sp, #464]
  44abec:	str	wzr, [sp, #480]
  44abf0:	cbz	x3, 44b9d0 <nftw@plt+0x48e50>
  44abf4:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x1dbb8>
  44abf8:	add	x25, sp, #0x1a8
  44abfc:	add	x0, x0, #0xb38
  44ac00:	stp	x27, x28, [sp, #128]
  44ac04:	str	xzr, [sp, #192]
  44ac08:	stp	xzr, x8, [sp, #208]
  44ac0c:	str	x0, [sp, #248]
  44ac10:	add	x0, sp, #0x1e8
  44ac14:	str	x0, [sp, #160]
  44ac18:	mov	x0, x25
  44ac1c:	bl	447730 <nftw@plt+0x44bb0>
  44ac20:	mov	w2, w0
  44ac24:	str	x2, [sp, #152]
  44ac28:	str	wzr, [sp, #180]
  44ac2c:	mov	x1, #0xffffffff            	// #4294967295
  44ac30:	cmp	x1, w0, uxtw
  44ac34:	b.eq	44b108 <nftw@plt+0x48588>  // b.none
  44ac38:	ldp	x5, x4, [sp, #152]
  44ac3c:	ldp	x2, x3, [x25]
  44ac40:	ldp	x0, x1, [x25, #16]
  44ac44:	stp	x2, x3, [x4]
  44ac48:	ldp	x2, x3, [x25, #32]
  44ac4c:	stp	x0, x1, [x4, #16]
  44ac50:	stp	x2, x3, [x4, #32]
  44ac54:	ldp	x2, x3, [x25, #48]
  44ac58:	stp	x2, x3, [x4, #48]
  44ac5c:	ldr	x1, [sp, #448]
  44ac60:	str	x5, [sp, #512]
  44ac64:	cmp	x1, x5
  44ac68:	b.cs	44ad50 <nftw@plt+0x481d0>  // b.hs, b.nlast
  44ac6c:	ldr	w0, [sp, #480]
  44ac70:	cbz	w0, 44b078 <nftw@plt+0x484f8>
  44ac74:	nop
  44ac78:	ldr	x0, [sp, #192]
  44ac7c:	cbz	x0, 44ad24 <nftw@plt+0x481a4>
  44ac80:	ldr	x20, [sp, #336]
  44ac84:	add	x21, x20, x0, lsl #3
  44ac88:	ldr	x19, [x20]
  44ac8c:	ldr	x2, [x19, #88]
  44ac90:	cbz	x2, 44accc <nftw@plt+0x4814c>
  44ac94:	mov	x22, #0x0                   	// #0
  44ac98:	ldr	x1, [x19, #96]
  44ac9c:	mov	x4, x23
  44aca0:	mov	x3, x24
  44aca4:	mov	x0, x26
  44aca8:	add	x1, x1, x22, lsl #5
  44acac:	add	x22, x22, #0x1
  44acb0:	ldp	x2, x1, [x1, #16]
  44acb4:	lsl	x2, x2, #3
  44acb8:	bl	442ad8 <nftw@plt+0x3ff58>
  44acbc:	ldr	x2, [x19, #88]
  44acc0:	cmp	x22, x2
  44acc4:	b.cc	44ac98 <nftw@plt+0x48118>  // b.lo, b.ul, b.last
  44acc8:	lsl	x2, x2, #5
  44accc:	ldr	x1, [x19, #96]
  44acd0:	mov	x4, x23
  44acd4:	mov	x3, x24
  44acd8:	mov	x0, x26
  44acdc:	bl	442ad8 <nftw@plt+0x3ff58>
  44ace0:	ldr	x1, [x20], #8
  44ace4:	stp	xzr, xzr, [x19, #88]
  44ace8:	mov	x4, x23
  44acec:	mov	x3, x24
  44acf0:	mov	x0, x26
  44acf4:	mov	x2, #0x88                  	// #136
  44acf8:	bl	442ad8 <nftw@plt+0x3ff58>
  44acfc:	cmp	x20, x21
  44ad00:	b.ne	44ac88 <nftw@plt+0x48108>  // b.any
  44ad04:	ldp	x5, x4, [sp, #344]
  44ad08:	mov	x3, x23
  44ad0c:	mov	x2, x24
  44ad10:	add	x1, sp, #0x150
  44ad14:	mov	x0, x26
  44ad18:	add	x4, x4, x5
  44ad1c:	stp	xzr, x4, [sp, #344]
  44ad20:	bl	442f20 <nftw@plt+0x403a0>
  44ad24:	ldr	x0, [sp, #384]
  44ad28:	cbnz	x0, 44b120 <nftw@plt+0x485a0>
  44ad2c:	ldp	x27, x28, [sp, #128]
  44ad30:	mov	w0, #0x0                   	// #0
  44ad34:	ldp	x29, x30, [sp, #48]
  44ad38:	ldp	x19, x20, [sp, #64]
  44ad3c:	ldp	x21, x22, [sp, #80]
  44ad40:	ldp	x23, x24, [sp, #96]
  44ad44:	ldp	x25, x26, [sp, #112]
  44ad48:	add	sp, sp, #0x370
  44ad4c:	ret
  44ad50:	ldr	x0, [sp, #440]
  44ad54:	sub	x1, x1, x5
  44ad58:	str	x1, [sp, #448]
  44ad5c:	cmp	x5, #0x1
  44ad60:	add	x1, x0, x5
  44ad64:	str	x1, [sp, #440]
  44ad68:	b.hi	44adb8 <nftw@plt+0x48238>  // b.pmore
  44ad6c:	ldr	w1, [sp, #544]
  44ad70:	ldp	x4, x5, [sp, #488]
  44ad74:	cbz	w1, 44b0c0 <nftw@plt+0x48540>
  44ad78:	add	x19, sp, #0x2a8
  44ad7c:	adrp	x20, 47f000 <_obstack_memory_used@@Base+0x1dbb8>
  44ad80:	ldr	x0, [sp, #504]
  44ad84:	add	x2, x20, #0xb28
  44ad88:	mov	x1, #0xc8                  	// #200
  44ad8c:	adrp	x3, 47f000 <_obstack_memory_used@@Base+0x1dbb8>
  44ad90:	sub	w5, w0, w5
  44ad94:	add	x3, x3, #0xdd8
  44ad98:	mov	x0, x19
  44ad9c:	bl	402600 <snprintf@plt>
  44ada0:	ldr	x3, [sp, #528]
  44ada4:	mov	x1, x19
  44ada8:	ldr	x0, [sp, #536]
  44adac:	mov	w2, #0x0                   	// #0
  44adb0:	blr	x3
  44adb4:	b	44ac78 <nftw@plt+0x480f8>
  44adb8:	add	x2, x0, #0x2
  44adbc:	str	x2, [sp, #504]
  44adc0:	ldr	x2, [sp, #152]
  44adc4:	ldr	w1, [sp, #520]
  44adc8:	sub	x2, x2, #0x2
  44adcc:	str	x2, [sp, #512]
  44add0:	cbz	w1, 44b064 <nftw@plt+0x484e4>
  44add4:	ldrb	w1, [x0]
  44add8:	ldrb	w0, [x0, #1]
  44addc:	bfi	w0, w1, #8, #24
  44ade0:	str	w0, [sp, #176]
  44ade4:	ldr	w0, [sp, #176]
  44ade8:	sub	w0, w0, #0x2
  44adec:	cmp	w0, #0x2
  44adf0:	b.hi	44bac0 <nftw@plt+0x48f40>  // b.pmore
  44adf4:	add	x4, sp, #0x150
  44adf8:	mov	x3, x23
  44adfc:	mov	x2, x24
  44ae00:	mov	x0, x26
  44ae04:	mov	x1, #0x8                   	// #8
  44ae08:	bl	442df8 <nftw@plt+0x40278>
  44ae0c:	mov	x19, x0
  44ae10:	cbz	x0, 44ac78 <nftw@plt+0x480f8>
  44ae14:	mov	x3, x23
  44ae18:	mov	x2, x24
  44ae1c:	mov	x0, x26
  44ae20:	mov	x1, #0x88                  	// #136
  44ae24:	bl	442c10 <nftw@plt+0x40090>
  44ae28:	mov	x22, x0
  44ae2c:	cbz	x0, 44ac78 <nftw@plt+0x480f8>
  44ae30:	ldr	x0, [sp, #192]
  44ae34:	str	x22, [x19]
  44ae38:	stp	xzr, xzr, [x22, #88]
  44ae3c:	add	x0, x0, #0x1
  44ae40:	str	x0, [sp, #192]
  44ae44:	ldr	w0, [sp, #180]
  44ae48:	cbz	w0, 44b030 <nftw@plt+0x484b0>
  44ae4c:	ldr	x0, [sp, #160]
  44ae50:	bl	447808 <nftw@plt+0x44c88>
  44ae54:	stp	xzr, xzr, [x22, #88]
  44ae58:	ldr	x1, [sp, #200]
  44ae5c:	cmp	x1, x0
  44ae60:	b.ls	44b04c <nftw@plt+0x484cc>  // b.plast
  44ae64:	ldr	x3, [sp, #264]
  44ae68:	mov	x4, x1
  44ae6c:	adrp	x1, 47f000 <_obstack_memory_used@@Base+0x1dbb8>
  44ae70:	add	x1, x1, #0xc8
  44ae74:	add	x2, x3, x0
  44ae78:	sub	x0, x4, x0
  44ae7c:	add	x4, sp, #0x228
  44ae80:	str	x24, [sp, #592]
  44ae84:	str	x23, [sp, #600]
  44ae88:	add	x20, sp, #0x2a8
  44ae8c:	str	wzr, [sp, #608]
  44ae90:	add	x27, sp, #0x268
  44ae94:	stp	x2, x0, [x4, #16]
  44ae98:	add	x2, sp, #0x2c0
  44ae9c:	ldr	w0, [sp, #912]
  44aea0:	str	w0, [sp, #584]
  44aea4:	add	x0, sp, #0x2c0
  44aea8:	stp	x1, x3, [x4]
  44aeac:	add	x19, sp, #0x228
  44aeb0:	ldp	x0, x1, [x0, #-152]
  44aeb4:	stp	x0, x1, [x2, #-88]
  44aeb8:	ldp	x0, x1, [x2, #-136]
  44aebc:	stp	x0, x1, [x2, #-72]
  44aec0:	ldp	x0, x1, [x2, #-120]
  44aec4:	stp	x0, x1, [x2, #-56]
  44aec8:	ldr	x21, [sp, #248]
  44aecc:	str	xzr, [sp, #168]
  44aed0:	ldp	x0, x1, [x2, #-104]
  44aed4:	stp	x0, x1, [x2, #-40]
  44aed8:	str	x22, [sp, #184]
  44aedc:	stp	x25, x19, [sp, #224]
  44aee0:	str	x27, [sp, #272]
  44aee4:	nop
  44aee8:	adrp	x6, 47f000 <_obstack_memory_used@@Base+0x1dbb8>
  44aeec:	add	x22, x6, #0xb28
  44aef0:	mov	w2, #0x0                   	// #0
  44aef4:	mov	w28, #0x0                   	// #0
  44aef8:	mov	x19, #0x0                   	// #0
  44aefc:	nop
  44af00:	ldr	x0, [sp, #640]
  44af04:	ldr	x1, [sp, #632]
  44af08:	cbnz	x0, 44af58 <nftw@plt+0x483d8>
  44af0c:	ldr	w0, [sp, #672]
  44af10:	cbnz	w0, 44ac78 <nftw@plt+0x480f8>
  44af14:	ldr	x4, [sp, #616]
  44af18:	add	x19, sp, #0x2a8
  44af1c:	ldr	x5, [sp, #624]
  44af20:	mov	x0, x19
  44af24:	adrp	x3, 47f000 <_obstack_memory_used@@Base+0x1dbb8>
  44af28:	adrp	x2, 47f000 <_obstack_memory_used@@Base+0x1dbb8>
  44af2c:	sub	w5, w1, w5
  44af30:	add	x3, x3, #0xb18
  44af34:	add	x2, x2, #0xb28
  44af38:	mov	x1, #0xc8                  	// #200
  44af3c:	bl	402600 <snprintf@plt>
  44af40:	ldr	x3, [sp, #656]
  44af44:	mov	x1, x19
  44af48:	ldr	x0, [sp, #664]
  44af4c:	mov	w2, #0x0                   	// #0
  44af50:	blr	x3
  44af54:	b	44ac78 <nftw@plt+0x480f8>
  44af58:	sub	x0, x0, #0x1
  44af5c:	add	x5, x1, #0x1
  44af60:	str	x5, [sp, #632]
  44af64:	cmp	w28, #0x3f
  44af68:	str	x0, [sp, #640]
  44af6c:	ldrb	w25, [x1]
  44af70:	b.hi	44aff0 <nftw@plt+0x48470>  // b.pmore
  44af74:	and	x0, x25, #0x7f
  44af78:	lsl	x0, x0, x28
  44af7c:	orr	x19, x19, x0
  44af80:	add	w28, w28, #0x7
  44af84:	tbnz	w25, #7, 44af00 <nftw@plt+0x48380>
  44af88:	ldr	w0, [sp, #672]
  44af8c:	cbz	x19, 44b2c4 <nftw@plt+0x48744>
  44af90:	cbnz	w0, 44ac78 <nftw@plt+0x480f8>
  44af94:	mov	x0, x27
  44af98:	bl	447398 <nftw@plt+0x44818>
  44af9c:	ldr	x1, [sp, #168]
  44afa0:	ldr	x0, [sp, #640]
  44afa4:	add	x1, x1, #0x1
  44afa8:	str	x1, [sp, #168]
  44afac:	ldr	x6, [sp, #632]
  44afb0:	cbnz	x0, 44b21c <nftw@plt+0x4869c>
  44afb4:	nop
  44afb8:	ldr	w1, [sp, #672]
  44afbc:	cbz	w1, 44b148 <nftw@plt+0x485c8>
  44afc0:	adrp	x22, 47f000 <_obstack_memory_used@@Base+0x1dbb8>
  44afc4:	add	x22, x22, #0xb28
  44afc8:	mov	w1, #0x0                   	// #0
  44afcc:	mov	w19, #0x0                   	// #0
  44afd0:	mov	x25, #0x0                   	// #0
  44afd4:	nop
  44afd8:	cbnz	x0, 44b1e0 <nftw@plt+0x48660>
  44afdc:	ldr	w0, [sp, #672]
  44afe0:	cbz	w0, 44b198 <nftw@plt+0x48618>
  44afe4:	mov	x0, x27
  44afe8:	bl	447398 <nftw@plt+0x44818>
  44afec:	b	44aee8 <nftw@plt+0x48368>
  44aff0:	cbnz	w2, 44af80 <nftw@plt+0x48400>
  44aff4:	ldr	x4, [sp, #616]
  44aff8:	mov	x3, x21
  44affc:	ldr	x6, [sp, #624]
  44b000:	mov	x2, x22
  44b004:	mov	x1, #0xc8                  	// #200
  44b008:	mov	x0, x20
  44b00c:	sub	w5, w5, w6
  44b010:	bl	402600 <snprintf@plt>
  44b014:	ldr	x4, [sp, #656]
  44b018:	mov	w2, #0x0                   	// #0
  44b01c:	ldr	x0, [sp, #664]
  44b020:	mov	x1, x20
  44b024:	blr	x4
  44b028:	mov	w2, #0x1                   	// #1
  44b02c:	b	44af80 <nftw@plt+0x48400>
  44b030:	ldr	x0, [sp, #160]
  44b034:	bl	447730 <nftw@plt+0x44bb0>
  44b038:	stp	xzr, xzr, [x22, #88]
  44b03c:	mov	w0, w0
  44b040:	ldr	x1, [sp, #200]
  44b044:	cmp	x1, x0
  44b048:	b.hi	44ae64 <nftw@plt+0x482e4>  // b.pmore
  44b04c:	mov	x0, x23
  44b050:	adrp	x1, 47f000 <_obstack_memory_used@@Base+0x1dbb8>
  44b054:	mov	w2, #0x0                   	// #0
  44b058:	add	x1, x1, #0xdf8
  44b05c:	blr	x24
  44b060:	b	44ac78 <nftw@plt+0x480f8>
  44b064:	ldrb	w1, [x0, #1]
  44b068:	ldrb	w0, [x0]
  44b06c:	bfi	w0, w1, #8, #24
  44b070:	str	w0, [sp, #176]
  44b074:	b	44ade4 <nftw@plt+0x48264>
  44b078:	ldp	x4, x1, [sp, #424]
  44b07c:	add	x19, sp, #0x2a8
  44b080:	ldr	x5, [sp, #440]
  44b084:	mov	x0, x19
  44b088:	adrp	x3, 47f000 <_obstack_memory_used@@Base+0x1dbb8>
  44b08c:	adrp	x2, 47f000 <_obstack_memory_used@@Base+0x1dbb8>
  44b090:	add	x3, x3, #0xb18
  44b094:	add	x2, x2, #0xb28
  44b098:	sub	w5, w5, w1
  44b09c:	mov	x1, #0xc8                  	// #200
  44b0a0:	bl	402600 <snprintf@plt>
  44b0a4:	ldp	x3, x0, [sp, #464]
  44b0a8:	mov	x1, x19
  44b0ac:	mov	w2, #0x0                   	// #0
  44b0b0:	blr	x3
  44b0b4:	mov	w0, #0x1                   	// #1
  44b0b8:	str	w0, [sp, #480]
  44b0bc:	b	44ac78 <nftw@plt+0x480f8>
  44b0c0:	add	x19, sp, #0x2a8
  44b0c4:	sub	w5, w0, w5
  44b0c8:	mov	x1, #0xc8                  	// #200
  44b0cc:	mov	x0, x19
  44b0d0:	adrp	x3, 47f000 <_obstack_memory_used@@Base+0x1dbb8>
  44b0d4:	adrp	x20, 47f000 <_obstack_memory_used@@Base+0x1dbb8>
  44b0d8:	add	x3, x3, #0xb18
  44b0dc:	add	x2, x20, #0xb28
  44b0e0:	bl	402600 <snprintf@plt>
  44b0e4:	ldr	x3, [sp, #528]
  44b0e8:	mov	x1, x19
  44b0ec:	ldr	x0, [sp, #536]
  44b0f0:	mov	w2, #0x0                   	// #0
  44b0f4:	blr	x3
  44b0f8:	mov	w0, #0x1                   	// #1
  44b0fc:	str	w0, [sp, #544]
  44b100:	ldp	x4, x5, [sp, #488]
  44b104:	b	44ad80 <nftw@plt+0x48200>
  44b108:	mov	x0, x25
  44b10c:	bl	447808 <nftw@plt+0x44c88>
  44b110:	mov	w1, #0x1                   	// #1
  44b114:	str	x0, [sp, #152]
  44b118:	str	w1, [sp, #180]
  44b11c:	b	44ac38 <nftw@plt+0x480b8>
  44b120:	ldp	x5, x4, [sp, #368]
  44b124:	mov	x3, x23
  44b128:	mov	x2, x24
  44b12c:	mov	x0, x26
  44b130:	add	x1, sp, #0x168
  44b134:	add	x4, x4, x5
  44b138:	stp	xzr, x4, [sp, #368]
  44b13c:	bl	442f20 <nftw@plt+0x403a0>
  44b140:	ldp	x27, x28, [sp, #128]
  44b144:	b	44ad30 <nftw@plt+0x481b0>
  44b148:	ldr	x4, [sp, #616]
  44b14c:	mov	x1, #0xc8                  	// #200
  44b150:	ldr	x5, [sp, #624]
  44b154:	mov	x0, x20
  44b158:	adrp	x3, 47f000 <_obstack_memory_used@@Base+0x1dbb8>
  44b15c:	adrp	x2, 47f000 <_obstack_memory_used@@Base+0x1dbb8>
  44b160:	sub	w5, w6, w5
  44b164:	add	x3, x3, #0xb18
  44b168:	add	x2, x2, #0xb28
  44b16c:	bl	402600 <snprintf@plt>
  44b170:	ldr	x3, [sp, #656]
  44b174:	mov	x1, x20
  44b178:	ldr	x0, [sp, #664]
  44b17c:	mov	w2, #0x0                   	// #0
  44b180:	blr	x3
  44b184:	mov	w0, #0x1                   	// #1
  44b188:	str	w0, [sp, #672]
  44b18c:	ldr	x6, [sp, #632]
  44b190:	ldr	x0, [sp, #640]
  44b194:	b	44afc0 <nftw@plt+0x48440>
  44b198:	ldr	x4, [sp, #616]
  44b19c:	mov	x1, #0xc8                  	// #200
  44b1a0:	ldr	x5, [sp, #624]
  44b1a4:	mov	x0, x20
  44b1a8:	adrp	x3, 47f000 <_obstack_memory_used@@Base+0x1dbb8>
  44b1ac:	adrp	x2, 47f000 <_obstack_memory_used@@Base+0x1dbb8>
  44b1b0:	add	x3, x3, #0xb18
  44b1b4:	add	x2, x2, #0xb28
  44b1b8:	sub	w5, w6, w5
  44b1bc:	bl	402600 <snprintf@plt>
  44b1c0:	ldr	x3, [sp, #656]
  44b1c4:	mov	x1, x20
  44b1c8:	ldr	x0, [sp, #664]
  44b1cc:	mov	w2, #0x0                   	// #0
  44b1d0:	blr	x3
  44b1d4:	mov	w0, #0x1                   	// #1
  44b1d8:	str	w0, [sp, #672]
  44b1dc:	b	44afe4 <nftw@plt+0x48464>
  44b1e0:	sub	x0, x0, #0x1
  44b1e4:	add	x5, x6, #0x1
  44b1e8:	str	x5, [sp, #632]
  44b1ec:	cmp	w19, #0x3f
  44b1f0:	str	x0, [sp, #640]
  44b1f4:	ldrb	w28, [x6]
  44b1f8:	b.hi	44b230 <nftw@plt+0x486b0>  // b.pmore
  44b1fc:	and	x0, x28, #0x7f
  44b200:	lsl	x0, x0, x19
  44b204:	orr	x25, x25, x0
  44b208:	add	w19, w19, #0x7
  44b20c:	tbz	w28, #7, 44b274 <nftw@plt+0x486f4>
  44b210:	ldr	x6, [sp, #632]
  44b214:	ldr	x0, [sp, #640]
  44b218:	b	44afd8 <nftw@plt+0x48458>
  44b21c:	add	x6, x6, #0x1
  44b220:	sub	x0, x0, #0x1
  44b224:	str	x6, [sp, #632]
  44b228:	str	x0, [sp, #640]
  44b22c:	b	44afc0 <nftw@plt+0x48440>
  44b230:	cbnz	w1, 44b208 <nftw@plt+0x48688>
  44b234:	ldr	x4, [sp, #616]
  44b238:	mov	x3, x21
  44b23c:	ldr	x6, [sp, #624]
  44b240:	mov	x2, x22
  44b244:	mov	x1, #0xc8                  	// #200
  44b248:	mov	x0, x20
  44b24c:	sub	w5, w5, w6
  44b250:	add	w19, w19, #0x7
  44b254:	bl	402600 <snprintf@plt>
  44b258:	ldr	x4, [sp, #656]
  44b25c:	mov	x1, x20
  44b260:	ldr	x0, [sp, #664]
  44b264:	mov	w2, #0x0                   	// #0
  44b268:	blr	x4
  44b26c:	mov	w1, #0x1                   	// #1
  44b270:	tbnz	w28, #7, 44b210 <nftw@plt+0x48690>
  44b274:	cbz	x25, 44afe4 <nftw@plt+0x48464>
  44b278:	ldr	x6, [sp, #632]
  44b27c:	adrp	x22, 47f000 <_obstack_memory_used@@Base+0x1dbb8>
  44b280:	ldr	x0, [sp, #640]
  44b284:	add	x22, x22, #0xb28
  44b288:	mov	w1, #0x0                   	// #0
  44b28c:	mov	w19, #0x0                   	// #0
  44b290:	cbz	x0, 44afb8 <nftw@plt+0x48438>
  44b294:	sub	x0, x0, #0x1
  44b298:	add	x5, x6, #0x1
  44b29c:	str	x5, [sp, #632]
  44b2a0:	cmp	w19, #0x3f
  44b2a4:	str	x0, [sp, #640]
  44b2a8:	ccmp	w1, #0x0, #0x0, hi  // hi = pmore
  44b2ac:	ldrb	w25, [x6]
  44b2b0:	b.eq	44b9f4 <nftw@plt+0x48e74>  // b.none
  44b2b4:	mov	x6, x5
  44b2b8:	add	w19, w19, #0x7
  44b2bc:	tbnz	w25, #7, 44b290 <nftw@plt+0x48710>
  44b2c0:	b	44afc0 <nftw@plt+0x48440>
  44b2c4:	str	x19, [sp, #320]
  44b2c8:	ldr	x22, [sp, #184]
  44b2cc:	str	w0, [sp, #184]
  44b2d0:	ldr	x25, [sp, #224]
  44b2d4:	ldr	x19, [sp, #232]
  44b2d8:	cbnz	w0, 44ac78 <nftw@plt+0x480f8>
  44b2dc:	ldr	x21, [sp, #168]
  44b2e0:	cbz	x21, 44b5dc <nftw@plt+0x48a5c>
  44b2e4:	lsl	x20, x21, #5
  44b2e8:	mov	x3, x23
  44b2ec:	mov	x1, x20
  44b2f0:	mov	x2, x24
  44b2f4:	mov	x0, x26
  44b2f8:	bl	442c10 <nftw@plt+0x40090>
  44b2fc:	str	x0, [x22, #96]
  44b300:	str	x0, [sp, #168]
  44b304:	cbz	x0, 44ac78 <nftw@plt+0x480f8>
  44b308:	str	x21, [x22, #88]
  44b30c:	mov	x2, x20
  44b310:	mov	w1, #0x0                   	// #0
  44b314:	bl	4026f0 <memset@plt>
  44b318:	ldr	w0, [sp, #608]
  44b31c:	ldr	x3, [sp, #168]
  44b320:	cbnz	w0, 44b450 <nftw@plt+0x488d0>
  44b324:	str	x22, [sp, #256]
  44b328:	add	x21, sp, #0x2a8
  44b32c:	ldr	x28, [sp, #248]
  44b330:	mov	x27, #0x0                   	// #0
  44b334:	ldr	x22, [sp, #272]
  44b338:	str	x26, [sp, #280]
  44b33c:	str	x25, [sp, #328]
  44b340:	str	x24, [sp, #928]
  44b344:	str	x23, [sp, #936]
  44b348:	mov	x0, x19
  44b34c:	bl	447398 <nftw@plt+0x44818>
  44b350:	mov	x25, x0
  44b354:	cbz	x0, 44b5b4 <nftw@plt+0x48a34>
  44b358:	mov	x0, x19
  44b35c:	bl	447398 <nftw@plt+0x44818>
  44b360:	ldr	x1, [sp, #576]
  44b364:	mov	x26, x0
  44b368:	ldr	x0, [sp, #568]
  44b36c:	cbnz	x1, 44b59c <nftw@plt+0x48a1c>
  44b370:	ldr	w24, [sp, #608]
  44b374:	cbz	w24, 44b7ac <nftw@plt+0x48c2c>
  44b378:	mov	w24, #0x0                   	// #0
  44b37c:	ldp	x0, x1, [x19, #16]
  44b380:	stp	x0, x1, [x22, #16]
  44b384:	mov	x20, #0x0                   	// #0
  44b388:	ldp	x2, x3, [x19]
  44b38c:	stp	x2, x3, [x22]
  44b390:	ldp	x2, x3, [x19, #32]
  44b394:	stp	x2, x3, [x22, #32]
  44b398:	ldp	x2, x3, [x19, #48]
  44b39c:	stp	x2, x3, [x22, #48]
  44b3a0:	ldr	x1, [sp, #640]
  44b3a4:	str	x19, [sp, #168]
  44b3a8:	mov	x19, x20
  44b3ac:	str	x22, [sp, #224]
  44b3b0:	mov	x22, x28
  44b3b4:	nop
  44b3b8:	adrp	x20, 47f000 <_obstack_memory_used@@Base+0x1dbb8>
  44b3bc:	add	x20, x20, #0xb28
  44b3c0:	mov	x7, x27
  44b3c4:	mov	x27, x19
  44b3c8:	mov	x19, x20
  44b3cc:	mov	w2, #0x0                   	// #0
  44b3d0:	mov	x28, #0x0                   	// #0
  44b3d4:	mov	w23, #0x0                   	// #0
  44b3d8:	cbnz	x1, 44b560 <nftw@plt+0x489e0>
  44b3dc:	ldr	w1, [sp, #672]
  44b3e0:	mov	x20, x27
  44b3e4:	mov	x28, x22
  44b3e8:	mov	x27, x7
  44b3ec:	ldr	x19, [sp, #168]
  44b3f0:	ldr	x22, [sp, #224]
  44b3f4:	cbz	w1, 44b4b0 <nftw@plt+0x48930>
  44b3f8:	cbnz	x20, 44b4f8 <nftw@plt+0x48978>
  44b3fc:	nop
  44b400:	mov	x23, #0x0                   	// #0
  44b404:	mov	x0, x19
  44b408:	bl	447398 <nftw@plt+0x44818>
  44b40c:	mov	x0, x19
  44b410:	bl	447398 <nftw@plt+0x44818>
  44b414:	ldr	x0, [sp, #256]
  44b418:	ldr	w2, [sp, #608]
  44b41c:	ldr	x3, [x0, #96]
  44b420:	add	x0, x3, x27
  44b424:	str	x25, [x3, x27]
  44b428:	add	x27, x27, #0x20
  44b42c:	stp	w26, w24, [x0, #8]
  44b430:	stp	x20, x23, [x0, #16]
  44b434:	cbz	w2, 44b348 <nftw@plt+0x487c8>
  44b438:	ldr	x22, [sp, #256]
  44b43c:	ldr	x26, [sp, #280]
  44b440:	ldr	x2, [x22, #88]
  44b444:	ldr	x24, [sp, #928]
  44b448:	ldr	x23, [sp, #936]
  44b44c:	cbz	x2, 44b494 <nftw@plt+0x48914>
  44b450:	mov	x1, x3
  44b454:	ldr	x19, [sp, #320]
  44b458:	b	44b460 <nftw@plt+0x488e0>
  44b45c:	ldr	x1, [x22, #96]
  44b460:	add	x1, x1, x19, lsl #5
  44b464:	mov	x4, x23
  44b468:	mov	x3, x24
  44b46c:	mov	x0, x26
  44b470:	add	x19, x19, #0x1
  44b474:	ldp	x2, x1, [x1, #16]
  44b478:	lsl	x2, x2, #3
  44b47c:	bl	442ad8 <nftw@plt+0x3ff58>
  44b480:	ldr	x2, [x22, #88]
  44b484:	cmp	x19, x2
  44b488:	b.cc	44b45c <nftw@plt+0x488dc>  // b.lo, b.ul, b.last
  44b48c:	ldr	x3, [x22, #96]
  44b490:	lsl	x2, x2, #5
  44b494:	mov	x1, x3
  44b498:	mov	x4, x23
  44b49c:	mov	x3, x24
  44b4a0:	mov	x0, x26
  44b4a4:	bl	442ad8 <nftw@plt+0x3ff58>
  44b4a8:	stp	xzr, xzr, [x22, #88]
  44b4ac:	b	44ac78 <nftw@plt+0x480f8>
  44b4b0:	ldr	x4, [sp, #616]
  44b4b4:	mov	x1, #0xc8                  	// #200
  44b4b8:	ldr	x5, [sp, #624]
  44b4bc:	adrp	x3, 47f000 <_obstack_memory_used@@Base+0x1dbb8>
  44b4c0:	adrp	x2, 47f000 <_obstack_memory_used@@Base+0x1dbb8>
  44b4c4:	add	x3, x3, #0xb18
  44b4c8:	sub	w5, w0, w5
  44b4cc:	add	x2, x2, #0xb28
  44b4d0:	mov	x0, x21
  44b4d4:	bl	402600 <snprintf@plt>
  44b4d8:	ldr	x3, [sp, #656]
  44b4dc:	mov	x1, x21
  44b4e0:	ldr	x0, [sp, #664]
  44b4e4:	mov	w2, #0x0                   	// #0
  44b4e8:	blr	x3
  44b4ec:	mov	w0, #0x1                   	// #1
  44b4f0:	str	w0, [sp, #672]
  44b4f4:	cbz	x20, 44b400 <nftw@plt+0x48880>
  44b4f8:	ldr	x0, [sp, #280]
  44b4fc:	lsl	x1, x20, #3
  44b500:	ldr	x2, [sp, #928]
  44b504:	ldr	x3, [sp, #936]
  44b508:	bl	442c10 <nftw@plt+0x40090>
  44b50c:	cbz	x0, 44b9dc <nftw@plt+0x48e5c>
  44b510:	mov	x23, x19
  44b514:	mov	x20, #0x0                   	// #0
  44b518:	str	x21, [sp, #168]
  44b51c:	mov	x21, x0
  44b520:	b	44b538 <nftw@plt+0x489b8>
  44b524:	fmov	d0, x19
  44b528:	mov	v0.d[1], x0
  44b52c:	xtn	v0.2s, v0.2d
  44b530:	str	d0, [x21, x20, lsl #3]
  44b534:	add	x20, x20, #0x1
  44b538:	mov	x0, x23
  44b53c:	bl	447398 <nftw@plt+0x44818>
  44b540:	mov	x19, x0
  44b544:	mov	x0, x23
  44b548:	bl	447398 <nftw@plt+0x44818>
  44b54c:	cbnz	x19, 44b524 <nftw@plt+0x489a4>
  44b550:	mov	x19, x23
  44b554:	mov	x23, x21
  44b558:	ldr	x21, [sp, #168]
  44b55c:	b	44b414 <nftw@plt+0x48894>
  44b560:	sub	x1, x1, #0x1
  44b564:	add	x5, x0, #0x1
  44b568:	str	x5, [sp, #632]
  44b56c:	cmp	w23, #0x3f
  44b570:	str	x1, [sp, #640]
  44b574:	ldrb	w20, [x0]
  44b578:	b.hi	44b6b8 <nftw@plt+0x48b38>  // b.pmore
  44b57c:	and	x0, x20, #0x7f
  44b580:	lsl	x0, x0, x23
  44b584:	orr	x28, x28, x0
  44b588:	add	w23, w23, #0x7
  44b58c:	tbz	w20, #7, 44b704 <nftw@plt+0x48b84>
  44b590:	ldr	x0, [sp, #632]
  44b594:	ldr	x1, [sp, #640]
  44b598:	b	44b3d8 <nftw@plt+0x48858>
  44b59c:	sub	x1, x1, #0x1
  44b5a0:	str	x1, [sp, #576]
  44b5a4:	add	x1, x0, #0x1
  44b5a8:	str	x1, [sp, #568]
  44b5ac:	ldrb	w24, [x0]
  44b5b0:	b	44b37c <nftw@plt+0x487fc>
  44b5b4:	ldr	x22, [sp, #256]
  44b5b8:	adrp	x3, 447000 <nftw@plt+0x44480>
  44b5bc:	mov	x2, #0x20                  	// #32
  44b5c0:	add	x3, x3, #0x128
  44b5c4:	ldr	x26, [sp, #280]
  44b5c8:	ldp	x1, x0, [x22, #88]
  44b5cc:	ldr	x25, [sp, #328]
  44b5d0:	ldr	x24, [sp, #928]
  44b5d4:	ldr	x23, [sp, #936]
  44b5d8:	bl	44bad0 <nftw@plt+0x48f50>
  44b5dc:	ldp	x5, x1, [sp, #504]
  44b5e0:	cbnz	x1, 44b78c <nftw@plt+0x48c0c>
  44b5e4:	ldr	w0, [sp, #544]
  44b5e8:	add	x19, sp, #0x2a8
  44b5ec:	cbz	w0, 44b7f4 <nftw@plt+0x48c74>
  44b5f0:	ldr	w8, [sp, #180]
  44b5f4:	mov	x3, #0x4                   	// #4
  44b5f8:	ldr	x0, [sp, #920]
  44b5fc:	cmp	w8, #0x0
  44b600:	stp	x0, x24, [sp]
  44b604:	mov	x0, #0xc                   	// #12
  44b608:	csel	x0, x0, x3, ne  // ne = any
  44b60c:	stp	x23, x22, [sp, #16]
  44b610:	ldr	w7, [sp, #912]
  44b614:	str	x19, [sp, #40]
  44b618:	add	x19, sp, #0x168
  44b61c:	str	x19, [sp, #32]
  44b620:	ldr	x3, [sp, #152]
  44b624:	stp	x5, x1, [x22]
  44b628:	ldr	x1, [sp, #208]
  44b62c:	add	x0, x0, x3
  44b630:	ldr	x2, [sp, #216]
  44b634:	add	x0, x1, x0
  44b638:	stp	x1, x0, [x22, #24]
  44b63c:	sub	x2, x5, x2
  44b640:	str	x0, [sp, #208]
  44b644:	ldr	w0, [sp, #176]
  44b648:	str	x2, [x22, #16]
  44b64c:	str	w0, [x22, #40]
  44b650:	ldr	w0, [sp, #184]
  44b654:	ldr	x2, [sp, #160]
  44b658:	str	w8, [x22, #44]
  44b65c:	ldr	x1, [sp, #240]
  44b660:	str	w0, [x22, #48]
  44b664:	ldr	x5, [sp, #880]
  44b668:	str	xzr, [x22, #56]
  44b66c:	ldr	x6, [sp, #888]
  44b670:	stp	xzr, xzr, [x22, #64]
  44b674:	mov	x0, x26
  44b678:	ldr	x3, [sp, #896]
  44b67c:	str	xzr, [x22, #80]
  44b680:	ldr	x4, [sp, #904]
  44b684:	stp	xzr, xzr, [x22, #104]
  44b688:	stp	xzr, xzr, [x22, #120]
  44b68c:	bl	448558 <nftw@plt+0x459d8>
  44b690:	cbz	w0, 44ac78 <nftw@plt+0x480f8>
  44b694:	ldr	w0, [sp, #544]
  44b698:	cbnz	w0, 44ac78 <nftw@plt+0x480f8>
  44b69c:	ldr	x1, [sp, #448]
  44b6a0:	ldr	w0, [sp, #480]
  44b6a4:	cbz	x1, 44b840 <nftw@plt+0x48cc0>
  44b6a8:	cbnz	w0, 44ac78 <nftw@plt+0x480f8>
  44b6ac:	ldr	x0, [sp, #440]
  44b6b0:	str	x0, [sp, #216]
  44b6b4:	b	44ac18 <nftw@plt+0x48098>
  44b6b8:	cbnz	w2, 44b588 <nftw@plt+0x48a08>
  44b6bc:	ldr	x4, [sp, #616]
  44b6c0:	mov	x3, x22
  44b6c4:	ldr	x6, [sp, #624]
  44b6c8:	mov	x2, x19
  44b6cc:	mov	x1, #0xc8                  	// #200
  44b6d0:	mov	x0, x21
  44b6d4:	sub	w5, w5, w6
  44b6d8:	str	x7, [sp, #232]
  44b6dc:	bl	402600 <snprintf@plt>
  44b6e0:	add	w23, w23, #0x7
  44b6e4:	ldr	x4, [sp, #656]
  44b6e8:	mov	w2, #0x0                   	// #0
  44b6ec:	ldr	x0, [sp, #664]
  44b6f0:	mov	x1, x21
  44b6f4:	blr	x4
  44b6f8:	mov	w2, #0x1                   	// #1
  44b6fc:	ldr	x7, [sp, #232]
  44b700:	tbnz	w20, #7, 44b590 <nftw@plt+0x48a10>
  44b704:	mov	x19, x27
  44b708:	mov	x27, x7
  44b70c:	cbz	x28, 44baac <nftw@plt+0x48f2c>
  44b710:	ldr	x0, [sp, #632]
  44b714:	adrp	x2, 47f000 <_obstack_memory_used@@Base+0x1dbb8>
  44b718:	ldr	x1, [sp, #640]
  44b71c:	add	x19, x19, #0x1
  44b720:	add	x20, x2, #0xb28
  44b724:	mov	w23, #0x0                   	// #0
  44b728:	mov	w2, #0x0                   	// #0
  44b72c:	nop
  44b730:	cbnz	x1, 44ba38 <nftw@plt+0x48eb8>
  44b734:	ldr	w2, [sp, #672]
  44b738:	cbnz	w2, 44b3b8 <nftw@plt+0x48838>
  44b73c:	ldr	x4, [sp, #616]
  44b740:	mov	x1, #0xc8                  	// #200
  44b744:	ldr	x5, [sp, #624]
  44b748:	adrp	x3, 47f000 <_obstack_memory_used@@Base+0x1dbb8>
  44b74c:	adrp	x2, 47f000 <_obstack_memory_used@@Base+0x1dbb8>
  44b750:	add	x3, x3, #0xb18
  44b754:	sub	w5, w0, w5
  44b758:	add	x2, x2, #0xb28
  44b75c:	mov	x0, x21
  44b760:	bl	402600 <snprintf@plt>
  44b764:	ldr	x3, [sp, #656]
  44b768:	mov	x1, x21
  44b76c:	ldr	x0, [sp, #664]
  44b770:	mov	w2, #0x0                   	// #0
  44b774:	blr	x3
  44b778:	mov	w0, #0x1                   	// #1
  44b77c:	str	w0, [sp, #672]
  44b780:	ldr	x0, [sp, #632]
  44b784:	ldr	x1, [sp, #640]
  44b788:	b	44b3b8 <nftw@plt+0x48838>
  44b78c:	add	x0, x5, #0x1
  44b790:	sub	x1, x1, #0x1
  44b794:	stp	x0, x1, [sp, #504]
  44b798:	add	x19, sp, #0x2a8
  44b79c:	ldrb	w2, [x5]
  44b7a0:	mov	x5, x0
  44b7a4:	str	w2, [sp, #184]
  44b7a8:	b	44b5f0 <nftw@plt+0x48a70>
  44b7ac:	ldr	x4, [sp, #552]
  44b7b0:	mov	x1, #0xc8                  	// #200
  44b7b4:	ldr	x5, [sp, #560]
  44b7b8:	adrp	x3, 47f000 <_obstack_memory_used@@Base+0x1dbb8>
  44b7bc:	adrp	x2, 47f000 <_obstack_memory_used@@Base+0x1dbb8>
  44b7c0:	add	x3, x3, #0xb18
  44b7c4:	sub	w5, w0, w5
  44b7c8:	add	x2, x2, #0xb28
  44b7cc:	mov	x0, x21
  44b7d0:	bl	402600 <snprintf@plt>
  44b7d4:	ldr	x3, [sp, #592]
  44b7d8:	mov	x1, x21
  44b7dc:	ldr	x0, [sp, #600]
  44b7e0:	mov	w2, #0x0                   	// #0
  44b7e4:	blr	x3
  44b7e8:	mov	w0, #0x1                   	// #1
  44b7ec:	str	w0, [sp, #608]
  44b7f0:	b	44b37c <nftw@plt+0x487fc>
  44b7f4:	ldp	x4, x0, [sp, #488]
  44b7f8:	mov	x1, #0xc8                  	// #200
  44b7fc:	adrp	x3, 47f000 <_obstack_memory_used@@Base+0x1dbb8>
  44b800:	adrp	x2, 47f000 <_obstack_memory_used@@Base+0x1dbb8>
  44b804:	add	x3, x3, #0xb18
  44b808:	add	x2, x2, #0xb28
  44b80c:	sub	w5, w5, w0
  44b810:	mov	x0, x19
  44b814:	bl	402600 <snprintf@plt>
  44b818:	str	wzr, [sp, #184]
  44b81c:	ldr	x3, [sp, #528]
  44b820:	mov	x1, x19
  44b824:	ldr	x0, [sp, #536]
  44b828:	mov	w2, #0x0                   	// #0
  44b82c:	blr	x3
  44b830:	mov	w0, #0x1                   	// #1
  44b834:	str	w0, [sp, #544]
  44b838:	ldp	x5, x1, [sp, #504]
  44b83c:	b	44b5f0 <nftw@plt+0x48a70>
  44b840:	cbnz	w0, 44ac78 <nftw@plt+0x480f8>
  44b844:	ldp	x27, x28, [sp, #128]
  44b848:	add	x4, sp, #0x200
  44b84c:	ldp	x2, x3, [sp, #336]
  44b850:	mov	x1, x19
  44b854:	stp	x2, x3, [x4, #-120]
  44b858:	add	x19, sp, #0x188
  44b85c:	mov	x3, x23
  44b860:	ldr	x4, [sp, #192]
  44b864:	mov	x2, x24
  44b868:	ldr	x0, [sp, #352]
  44b86c:	stp	x0, x4, [sp, #408]
  44b870:	mov	x0, x26
  44b874:	bl	442f20 <nftw@plt+0x403a0>
  44b878:	cbz	w0, 44ad30 <nftw@plt+0x481b0>
  44b87c:	mov	x1, x19
  44b880:	mov	x3, x23
  44b884:	mov	x2, x24
  44b888:	mov	x0, x26
  44b88c:	bl	442f20 <nftw@plt+0x403a0>
  44b890:	cbz	w0, 44ad30 <nftw@plt+0x481b0>
  44b894:	ldp	x19, x22, [sp, #384]
  44b898:	mov	x2, #0x18                  	// #24
  44b89c:	ldr	x20, [sp, #360]
  44b8a0:	adrp	x3, 447000 <nftw@plt+0x44480>
  44b8a4:	add	x3, x3, #0x148
  44b8a8:	mov	x0, x20
  44b8ac:	mov	x1, x19
  44b8b0:	ldr	x21, [sp, #416]
  44b8b4:	bl	44bad0 <nftw@plt+0x48f50>
  44b8b8:	mov	x3, x23
  44b8bc:	mov	x2, x24
  44b8c0:	mov	x0, x26
  44b8c4:	mov	x1, #0xa0                  	// #160
  44b8c8:	bl	442c10 <nftw@plt+0x40090>
  44b8cc:	cbz	x0, 44ad30 <nftw@plt+0x481b0>
  44b8d0:	ldr	x1, [sp, #920]
  44b8d4:	stp	xzr, x1, [x0]
  44b8d8:	ldr	x1, [sp, #240]
  44b8dc:	str	x1, [x0, #16]
  44b8e0:	ldr	x1, [sp, #288]
  44b8e4:	str	x1, [x0, #56]
  44b8e8:	ldr	x1, [sp, #296]
  44b8ec:	str	x1, [x0, #64]
  44b8f0:	ldr	x1, [sp, #304]
  44b8f4:	str	x1, [x0, #72]
  44b8f8:	ldr	x1, [sp, #312]
  44b8fc:	str	x1, [x0, #80]
  44b900:	ldr	x1, [sp, #880]
  44b904:	str	x1, [x0, #88]
  44b908:	ldr	x1, [sp, #888]
  44b90c:	str	x1, [x0, #96]
  44b910:	ldr	x1, [sp, #896]
  44b914:	str	x1, [x0, #104]
  44b918:	ldr	x1, [sp, #904]
  44b91c:	str	x1, [x0, #112]
  44b920:	ldr	w1, [sp, #912]
  44b924:	str	w1, [x0, #120]
  44b928:	ldr	x1, [sp, #952]
  44b92c:	stp	x20, x19, [x0, #24]
  44b930:	stp	x22, x21, [x0, #40]
  44b934:	stp	xzr, xzr, [x0, #128]
  44b938:	stp	xzr, xzr, [x0, #144]
  44b93c:	cbz	x1, 44b944 <nftw@plt+0x48dc4>
  44b940:	str	x0, [x1]
  44b944:	ldr	w1, [x26, #8]
  44b948:	add	x3, x26, #0x20
  44b94c:	cbnz	w1, 44b9b8 <nftw@plt+0x48e38>
  44b950:	ldr	x1, [x26, #32]
  44b954:	cbz	x1, 44b968 <nftw@plt+0x48de8>
  44b958:	mov	x2, x1
  44b95c:	ldr	x1, [x1]
  44b960:	cbnz	x1, 44b958 <nftw@plt+0x48dd8>
  44b964:	mov	x3, x2
  44b968:	str	x0, [x3]
  44b96c:	ldr	x2, [sp, #944]
  44b970:	adrp	x1, 44a000 <nftw@plt+0x47480>
  44b974:	add	x1, x1, #0xa50
  44b978:	mov	w0, #0x1                   	// #1
  44b97c:	ldp	x29, x30, [sp, #48]
  44b980:	str	x1, [x2]
  44b984:	ldp	x19, x20, [sp, #64]
  44b988:	ldp	x21, x22, [sp, #80]
  44b98c:	ldp	x23, x24, [sp, #96]
  44b990:	ldp	x25, x26, [sp, #112]
  44b994:	add	sp, sp, #0x370
  44b998:	ret
  44b99c:	ldxr	x1, [x2]
  44b9a0:	cbnz	x1, 44b9ac <nftw@plt+0x48e2c>
  44b9a4:	stlxr	w4, x0, [x2]
  44b9a8:	cbnz	w4, 44b99c <nftw@plt+0x48e1c>
  44b9ac:	dmb	ish
  44b9b0:	cmp	x1, #0x0
  44b9b4:	b.eq	44b96c <nftw@plt+0x48dec>  // b.none
  44b9b8:	mov	x2, x3
  44b9bc:	b	44b9c4 <nftw@plt+0x48e44>
  44b9c0:	mov	x2, x1
  44b9c4:	ldar	x1, [x2]
  44b9c8:	cbnz	x1, 44b9c0 <nftw@plt+0x48e40>
  44b9cc:	b	44b99c <nftw@plt+0x48e1c>
  44b9d0:	add	x19, sp, #0x168
  44b9d4:	str	xzr, [sp, #192]
  44b9d8:	b	44b848 <nftw@plt+0x48cc8>
  44b9dc:	ldr	x22, [sp, #256]
  44b9e0:	ldr	x26, [sp, #280]
  44b9e4:	ldp	x2, x3, [x22, #88]
  44b9e8:	ldr	x24, [sp, #928]
  44b9ec:	ldr	x23, [sp, #936]
  44b9f0:	b	44b44c <nftw@plt+0x488cc>
  44b9f4:	ldr	x4, [sp, #616]
  44b9f8:	mov	x3, x21
  44b9fc:	ldr	x6, [sp, #624]
  44ba00:	mov	x2, x22
  44ba04:	mov	x1, #0xc8                  	// #200
  44ba08:	mov	x0, x20
  44ba0c:	sub	w5, w5, w6
  44ba10:	bl	402600 <snprintf@plt>
  44ba14:	ldr	x4, [sp, #656]
  44ba18:	mov	x1, x20
  44ba1c:	ldr	x0, [sp, #664]
  44ba20:	mov	w2, #0x0                   	// #0
  44ba24:	blr	x4
  44ba28:	mov	w1, #0x1                   	// #1
  44ba2c:	ldr	x6, [sp, #632]
  44ba30:	ldr	x0, [sp, #640]
  44ba34:	b	44b2b8 <nftw@plt+0x48738>
  44ba38:	sub	x1, x1, #0x1
  44ba3c:	add	x5, x0, #0x1
  44ba40:	str	x5, [sp, #632]
  44ba44:	cmp	w23, #0x3f
  44ba48:	str	x1, [sp, #640]
  44ba4c:	ccmp	w2, #0x0, #0x0, hi  // hi = pmore
  44ba50:	ldrb	w28, [x0]
  44ba54:	b.eq	44ba68 <nftw@plt+0x48ee8>  // b.none
  44ba58:	mov	x0, x5
  44ba5c:	add	w23, w23, #0x7
  44ba60:	tbnz	w28, #7, 44b730 <nftw@plt+0x48bb0>
  44ba64:	b	44b3b8 <nftw@plt+0x48838>
  44ba68:	ldr	x4, [sp, #616]
  44ba6c:	mov	x3, x22
  44ba70:	ldr	x6, [sp, #624]
  44ba74:	mov	x2, x20
  44ba78:	mov	x1, #0xc8                  	// #200
  44ba7c:	mov	x0, x21
  44ba80:	sub	w5, w5, w6
  44ba84:	bl	402600 <snprintf@plt>
  44ba88:	ldr	x4, [sp, #656]
  44ba8c:	mov	x1, x21
  44ba90:	ldr	x0, [sp, #664]
  44ba94:	mov	w2, #0x0                   	// #0
  44ba98:	blr	x4
  44ba9c:	mov	w2, #0x1                   	// #1
  44baa0:	ldr	x0, [sp, #632]
  44baa4:	ldr	x1, [sp, #640]
  44baa8:	b	44ba5c <nftw@plt+0x48edc>
  44baac:	mov	x20, x19
  44bab0:	mov	x28, x22
  44bab4:	ldr	x19, [sp, #168]
  44bab8:	ldr	x22, [sp, #224]
  44babc:	b	44b3f8 <nftw@plt+0x48878>
  44bac0:	add	x19, sp, #0x2a8
  44bac4:	adrp	x20, 47f000 <_obstack_memory_used@@Base+0x1dbb8>
  44bac8:	ldp	x4, x5, [sp, #488]
  44bacc:	b	44ad80 <nftw@plt+0x48200>
  44bad0:	cmp	x1, #0x1
  44bad4:	b.ls	44c304 <nftw@plt+0x49784>  // b.plast
  44bad8:	stp	x29, x30, [sp, #-224]!
  44badc:	mov	x29, sp
  44bae0:	stp	x27, x28, [sp, #80]
  44bae4:	and	x27, x2, #0xfffffffffffffff0
  44bae8:	stp	x25, x26, [sp, #64]
  44baec:	mov	x26, x0
  44baf0:	add	x0, x27, #0x1
  44baf4:	str	x0, [sp, #112]
  44baf8:	add	x0, x27, #0x2
  44bafc:	str	x0, [sp, #120]
  44bb00:	add	x0, x27, #0x3
  44bb04:	str	x0, [sp, #128]
  44bb08:	add	x0, x27, #0x4
  44bb0c:	str	x0, [sp, #136]
  44bb10:	add	x0, x27, #0x5
  44bb14:	str	x0, [sp, #144]
  44bb18:	add	x0, x27, #0x6
  44bb1c:	str	x0, [sp, #152]
  44bb20:	add	x0, x27, #0x7
  44bb24:	str	x0, [sp, #160]
  44bb28:	add	x0, x27, #0x8
  44bb2c:	str	x0, [sp, #168]
  44bb30:	add	x0, x27, #0x9
  44bb34:	str	x0, [sp, #176]
  44bb38:	add	x0, x27, #0xa
  44bb3c:	str	x0, [sp, #184]
  44bb40:	add	x0, x27, #0xb
  44bb44:	str	x0, [sp, #192]
  44bb48:	add	x0, x27, #0xc
  44bb4c:	str	x0, [sp, #200]
  44bb50:	add	x0, x27, #0xd
  44bb54:	mov	x28, x26
  44bb58:	mov	x26, x2
  44bb5c:	stp	x19, x20, [sp, #16]
  44bb60:	mov	x19, x1
  44bb64:	mov	x20, x27
  44bb68:	stp	x21, x22, [sp, #32]
  44bb6c:	mov	x21, x3
  44bb70:	str	x0, [sp, #208]
  44bb74:	add	x0, x27, #0xe
  44bb78:	stp	x23, x24, [sp, #48]
  44bb7c:	str	x0, [sp, #216]
  44bb80:	sub	x0, x2, #0x1
  44bb84:	str	x0, [sp, #104]
  44bb88:	lsr	x0, x19, #1
  44bb8c:	mul	x0, x0, x26
  44bb90:	add	x1, x28, x0
  44bb94:	cbz	x26, 44bd80 <nftw@plt+0x49200>
  44bb98:	add	x0, x0, #0x10
  44bb9c:	add	x3, x28, #0x10
  44bba0:	cmp	x0, #0x0
  44bba4:	ldr	x0, [sp, #104]
  44bba8:	ccmp	x1, x3, #0x2, gt
  44bbac:	ccmp	x0, #0xe, #0x0, cs  // cs = hs, nlast
  44bbb0:	mov	x0, #0x0                   	// #0
  44bbb4:	b.ls	44c00c <nftw@plt+0x4948c>  // b.plast
  44bbb8:	ldr	q1, [x1, x0]
  44bbbc:	ldr	q0, [x28, x0]
  44bbc0:	str	q1, [x28, x0]
  44bbc4:	str	q0, [x1, x0]
  44bbc8:	add	x0, x0, #0x10
  44bbcc:	cmp	x0, x20
  44bbd0:	b.ne	44bbb8 <nftw@plt+0x49038>  // b.any
  44bbd4:	cmp	x26, x27
  44bbd8:	add	x3, x28, x27
  44bbdc:	add	x0, x1, x27
  44bbe0:	b.eq	44bd80 <nftw@plt+0x49200>  // b.none
  44bbe4:	ldrb	w6, [x1, x27]
  44bbe8:	ldrb	w5, [x28, x27]
  44bbec:	strb	w6, [x28, x27]
  44bbf0:	ldr	x2, [sp, #112]
  44bbf4:	strb	w5, [x1, x27]
  44bbf8:	cmp	x26, x2
  44bbfc:	b.ls	44bd80 <nftw@plt+0x49200>  // b.plast
  44bc00:	ldr	x1, [sp, #120]
  44bc04:	ldrb	w5, [x0, #1]
  44bc08:	cmp	x26, x1
  44bc0c:	ldrb	w1, [x3, #1]
  44bc10:	strb	w5, [x3, #1]
  44bc14:	strb	w1, [x0, #1]
  44bc18:	b.ls	44bd80 <nftw@plt+0x49200>  // b.plast
  44bc1c:	ldr	x1, [sp, #128]
  44bc20:	ldrb	w5, [x0, #2]
  44bc24:	cmp	x26, x1
  44bc28:	ldrb	w1, [x3, #2]
  44bc2c:	strb	w5, [x3, #2]
  44bc30:	strb	w1, [x0, #2]
  44bc34:	b.ls	44bd80 <nftw@plt+0x49200>  // b.plast
  44bc38:	ldr	x1, [sp, #136]
  44bc3c:	ldrb	w5, [x0, #3]
  44bc40:	cmp	x26, x1
  44bc44:	ldrb	w1, [x3, #3]
  44bc48:	strb	w5, [x3, #3]
  44bc4c:	strb	w1, [x0, #3]
  44bc50:	b.ls	44bd80 <nftw@plt+0x49200>  // b.plast
  44bc54:	ldr	x1, [sp, #144]
  44bc58:	ldrb	w5, [x0, #4]
  44bc5c:	cmp	x26, x1
  44bc60:	ldrb	w1, [x3, #4]
  44bc64:	strb	w5, [x3, #4]
  44bc68:	strb	w1, [x0, #4]
  44bc6c:	b.ls	44bd80 <nftw@plt+0x49200>  // b.plast
  44bc70:	ldr	x1, [sp, #152]
  44bc74:	ldrb	w5, [x0, #5]
  44bc78:	cmp	x26, x1
  44bc7c:	ldrb	w1, [x3, #5]
  44bc80:	strb	w5, [x3, #5]
  44bc84:	strb	w1, [x0, #5]
  44bc88:	b.ls	44bd80 <nftw@plt+0x49200>  // b.plast
  44bc8c:	ldr	x1, [sp, #160]
  44bc90:	ldrb	w5, [x0, #6]
  44bc94:	cmp	x26, x1
  44bc98:	ldrb	w1, [x3, #6]
  44bc9c:	strb	w5, [x3, #6]
  44bca0:	strb	w1, [x0, #6]
  44bca4:	b.ls	44bd80 <nftw@plt+0x49200>  // b.plast
  44bca8:	ldr	x1, [sp, #168]
  44bcac:	ldrb	w5, [x0, #7]
  44bcb0:	cmp	x26, x1
  44bcb4:	ldrb	w1, [x3, #7]
  44bcb8:	strb	w5, [x3, #7]
  44bcbc:	strb	w1, [x0, #7]
  44bcc0:	b.ls	44bd80 <nftw@plt+0x49200>  // b.plast
  44bcc4:	ldr	x1, [sp, #176]
  44bcc8:	ldrb	w5, [x0, #8]
  44bccc:	cmp	x26, x1
  44bcd0:	ldrb	w1, [x3, #8]
  44bcd4:	strb	w5, [x3, #8]
  44bcd8:	strb	w1, [x0, #8]
  44bcdc:	b.ls	44bd80 <nftw@plt+0x49200>  // b.plast
  44bce0:	ldr	x1, [sp, #184]
  44bce4:	ldrb	w5, [x0, #9]
  44bce8:	cmp	x26, x1
  44bcec:	ldrb	w1, [x3, #9]
  44bcf0:	strb	w5, [x3, #9]
  44bcf4:	strb	w1, [x0, #9]
  44bcf8:	b.ls	44bd80 <nftw@plt+0x49200>  // b.plast
  44bcfc:	ldr	x1, [sp, #192]
  44bd00:	ldrb	w5, [x0, #10]
  44bd04:	cmp	x26, x1
  44bd08:	ldrb	w1, [x3, #10]
  44bd0c:	strb	w5, [x3, #10]
  44bd10:	strb	w1, [x0, #10]
  44bd14:	b.ls	44bd80 <nftw@plt+0x49200>  // b.plast
  44bd18:	ldr	x1, [sp, #200]
  44bd1c:	ldrb	w5, [x0, #11]
  44bd20:	cmp	x26, x1
  44bd24:	ldrb	w1, [x3, #11]
  44bd28:	strb	w5, [x3, #11]
  44bd2c:	strb	w1, [x0, #11]
  44bd30:	b.ls	44bd80 <nftw@plt+0x49200>  // b.plast
  44bd34:	ldr	x1, [sp, #208]
  44bd38:	ldrb	w5, [x0, #12]
  44bd3c:	cmp	x26, x1
  44bd40:	ldrb	w1, [x3, #12]
  44bd44:	strb	w5, [x3, #12]
  44bd48:	strb	w1, [x0, #12]
  44bd4c:	b.ls	44bd80 <nftw@plt+0x49200>  // b.plast
  44bd50:	ldr	x1, [sp, #216]
  44bd54:	ldrb	w5, [x0, #13]
  44bd58:	cmp	x26, x1
  44bd5c:	ldrb	w1, [x3, #13]
  44bd60:	strb	w5, [x3, #13]
  44bd64:	strb	w1, [x0, #13]
  44bd68:	b.ls	44bd80 <nftw@plt+0x49200>  // b.plast
  44bd6c:	ldrb	w5, [x0, #14]
  44bd70:	ldrb	w1, [x3, #14]
  44bd74:	strb	w5, [x3, #14]
  44bd78:	strb	w1, [x0, #14]
  44bd7c:	nop
  44bd80:	mov	x23, x26
  44bd84:	mov	x24, #0x0                   	// #0
  44bd88:	mov	x25, #0x1                   	// #1
  44bd8c:	b	44bda0 <nftw@plt+0x49220>
  44bd90:	add	x25, x25, #0x1
  44bd94:	add	x23, x23, x26
  44bd98:	cmp	x25, x19
  44bd9c:	b.cs	44bfdc <nftw@plt+0x4945c>  // b.hs, b.nlast
  44bda0:	add	x22, x28, x23
  44bda4:	mov	x0, x28
  44bda8:	mov	x1, x22
  44bdac:	blr	x21
  44bdb0:	add	x7, x24, #0x1
  44bdb4:	cmp	w0, #0x0
  44bdb8:	mov	x3, x7
  44bdbc:	b.le	44bd90 <nftw@plt+0x49210>
  44bdc0:	add	x7, x24, #0x2
  44bdc4:	cmp	x3, x25
  44bdc8:	mov	x24, x25
  44bdcc:	b.eq	44bd90 <nftw@plt+0x49210>  // b.none
  44bdd0:	mul	x0, x26, x3
  44bdd4:	add	x1, x28, x0
  44bdd8:	cbz	x26, 44bfc8 <nftw@plt+0x49448>
  44bddc:	add	x2, x23, #0x10
  44bde0:	add	x4, x0, #0x10
  44bde4:	cmp	x0, x2
  44bde8:	ldr	x0, [sp, #104]
  44bdec:	ccmp	x4, x23, #0x4, lt  // lt = tstop
  44bdf0:	ccmp	x0, #0xe, #0x0, le
  44bdf4:	mov	x0, #0x0                   	// #0
  44bdf8:	b.ls	44c048 <nftw@plt+0x494c8>  // b.plast
  44bdfc:	nop
  44be00:	ldr	q1, [x22, x0]
  44be04:	ldr	q0, [x1, x0]
  44be08:	str	q1, [x1, x0]
  44be0c:	str	q0, [x22, x0]
  44be10:	add	x0, x0, #0x10
  44be14:	cmp	x0, x20
  44be18:	b.ne	44be00 <nftw@plt+0x49280>  // b.any
  44be1c:	cmp	x26, x27
  44be20:	add	x2, x1, x27
  44be24:	add	x0, x22, x27
  44be28:	b.eq	44bfc8 <nftw@plt+0x49448>  // b.none
  44be2c:	ldr	x4, [sp, #112]
  44be30:	ldrb	w5, [x22, x27]
  44be34:	cmp	x26, x4
  44be38:	ldrb	w4, [x1, x27]
  44be3c:	strb	w5, [x1, x27]
  44be40:	strb	w4, [x22, x27]
  44be44:	b.ls	44bfc8 <nftw@plt+0x49448>  // b.plast
  44be48:	ldr	x1, [sp, #120]
  44be4c:	ldrb	w4, [x0, #1]
  44be50:	cmp	x26, x1
  44be54:	ldrb	w1, [x2, #1]
  44be58:	strb	w4, [x2, #1]
  44be5c:	strb	w1, [x0, #1]
  44be60:	b.ls	44bfc8 <nftw@plt+0x49448>  // b.plast
  44be64:	ldr	x1, [sp, #128]
  44be68:	ldrb	w4, [x0, #2]
  44be6c:	cmp	x26, x1
  44be70:	ldrb	w1, [x2, #2]
  44be74:	strb	w4, [x2, #2]
  44be78:	strb	w1, [x0, #2]
  44be7c:	b.ls	44bfc8 <nftw@plt+0x49448>  // b.plast
  44be80:	ldr	x1, [sp, #136]
  44be84:	ldrb	w4, [x0, #3]
  44be88:	cmp	x26, x1
  44be8c:	ldrb	w1, [x2, #3]
  44be90:	strb	w4, [x2, #3]
  44be94:	strb	w1, [x0, #3]
  44be98:	b.ls	44bfc8 <nftw@plt+0x49448>  // b.plast
  44be9c:	ldr	x1, [sp, #144]
  44bea0:	ldrb	w4, [x0, #4]
  44bea4:	cmp	x26, x1
  44bea8:	ldrb	w1, [x2, #4]
  44beac:	strb	w4, [x2, #4]
  44beb0:	strb	w1, [x0, #4]
  44beb4:	b.ls	44bfc8 <nftw@plt+0x49448>  // b.plast
  44beb8:	ldr	x1, [sp, #152]
  44bebc:	ldrb	w4, [x0, #5]
  44bec0:	cmp	x26, x1
  44bec4:	ldrb	w1, [x2, #5]
  44bec8:	strb	w4, [x2, #5]
  44becc:	strb	w1, [x0, #5]
  44bed0:	b.ls	44bfc8 <nftw@plt+0x49448>  // b.plast
  44bed4:	ldr	x1, [sp, #160]
  44bed8:	ldrb	w4, [x0, #6]
  44bedc:	cmp	x26, x1
  44bee0:	ldrb	w1, [x2, #6]
  44bee4:	strb	w4, [x2, #6]
  44bee8:	strb	w1, [x0, #6]
  44beec:	b.ls	44bfc8 <nftw@plt+0x49448>  // b.plast
  44bef0:	ldr	x1, [sp, #168]
  44bef4:	ldrb	w4, [x0, #7]
  44bef8:	cmp	x26, x1
  44befc:	ldrb	w1, [x2, #7]
  44bf00:	strb	w4, [x2, #7]
  44bf04:	strb	w1, [x0, #7]
  44bf08:	b.ls	44bfc8 <nftw@plt+0x49448>  // b.plast
  44bf0c:	ldr	x1, [sp, #176]
  44bf10:	ldrb	w4, [x0, #8]
  44bf14:	cmp	x26, x1
  44bf18:	ldrb	w1, [x2, #8]
  44bf1c:	strb	w4, [x2, #8]
  44bf20:	strb	w1, [x0, #8]
  44bf24:	b.ls	44bfc8 <nftw@plt+0x49448>  // b.plast
  44bf28:	ldr	x1, [sp, #184]
  44bf2c:	ldrb	w4, [x0, #9]
  44bf30:	cmp	x26, x1
  44bf34:	ldrb	w1, [x2, #9]
  44bf38:	strb	w4, [x2, #9]
  44bf3c:	strb	w1, [x0, #9]
  44bf40:	b.ls	44bfc8 <nftw@plt+0x49448>  // b.plast
  44bf44:	ldr	x1, [sp, #192]
  44bf48:	ldrb	w4, [x0, #10]
  44bf4c:	cmp	x26, x1
  44bf50:	ldrb	w1, [x2, #10]
  44bf54:	strb	w4, [x2, #10]
  44bf58:	strb	w1, [x0, #10]
  44bf5c:	b.ls	44bfc8 <nftw@plt+0x49448>  // b.plast
  44bf60:	ldr	x1, [sp, #200]
  44bf64:	ldrb	w4, [x0, #11]
  44bf68:	cmp	x26, x1
  44bf6c:	ldrb	w1, [x2, #11]
  44bf70:	strb	w4, [x2, #11]
  44bf74:	strb	w1, [x0, #11]
  44bf78:	b.ls	44bfc8 <nftw@plt+0x49448>  // b.plast
  44bf7c:	ldr	x1, [sp, #208]
  44bf80:	ldrb	w4, [x0, #12]
  44bf84:	cmp	x26, x1
  44bf88:	ldrb	w1, [x2, #12]
  44bf8c:	strb	w4, [x2, #12]
  44bf90:	strb	w1, [x0, #12]
  44bf94:	b.ls	44bfc8 <nftw@plt+0x49448>  // b.plast
  44bf98:	ldr	x1, [sp, #216]
  44bf9c:	ldrb	w4, [x0, #13]
  44bfa0:	cmp	x26, x1
  44bfa4:	ldrb	w1, [x2, #13]
  44bfa8:	strb	w4, [x2, #13]
  44bfac:	strb	w1, [x0, #13]
  44bfb0:	b.ls	44bfc8 <nftw@plt+0x49448>  // b.plast
  44bfb4:	ldrb	w4, [x0, #14]
  44bfb8:	ldrb	w1, [x2, #14]
  44bfbc:	strb	w4, [x2, #14]
  44bfc0:	strb	w1, [x0, #14]
  44bfc4:	nop
  44bfc8:	add	x25, x25, #0x1
  44bfcc:	mov	x24, x3
  44bfd0:	add	x23, x23, x26
  44bfd4:	cmp	x25, x19
  44bfd8:	b.cc	44bda0 <nftw@plt+0x49220>  // b.lo, b.ul, b.last
  44bfdc:	cbnz	x24, 44c084 <nftw@plt+0x49504>
  44bfe0:	madd	x25, x7, x26, x28
  44bfe4:	sub	x19, x19, #0x1
  44bfe8:	mov	x1, x24
  44bfec:	mov	x0, x28
  44bff0:	mov	x3, x21
  44bff4:	mov	x2, x26
  44bff8:	bl	44bad0 <nftw@plt+0x48f50>
  44bffc:	cmp	x19, #0x1
  44c000:	b.ls	44c2e8 <nftw@plt+0x49768>  // b.plast
  44c004:	mov	x28, x25
  44c008:	b	44bb88 <nftw@plt+0x49008>
  44c00c:	ldrb	w3, [x1, x0]
  44c010:	ldrb	w2, [x28, x0]
  44c014:	strb	w3, [x28, x0]
  44c018:	strb	w2, [x1, x0]
  44c01c:	add	x0, x0, #0x1
  44c020:	cmp	x26, x0
  44c024:	b.eq	44bd80 <nftw@plt+0x49200>  // b.none
  44c028:	ldrb	w3, [x1, x0]
  44c02c:	ldrb	w2, [x28, x0]
  44c030:	strb	w3, [x28, x0]
  44c034:	strb	w2, [x1, x0]
  44c038:	add	x0, x0, #0x1
  44c03c:	cmp	x26, x0
  44c040:	b.ne	44c00c <nftw@plt+0x4948c>  // b.any
  44c044:	b	44bd80 <nftw@plt+0x49200>
  44c048:	ldrb	w4, [x22, x0]
  44c04c:	ldrb	w2, [x1, x0]
  44c050:	strb	w4, [x1, x0]
  44c054:	strb	w2, [x22, x0]
  44c058:	add	x0, x0, #0x1
  44c05c:	cmp	x26, x0
  44c060:	b.eq	44bfc8 <nftw@plt+0x49448>  // b.none
  44c064:	ldrb	w4, [x22, x0]
  44c068:	ldrb	w2, [x1, x0]
  44c06c:	strb	w4, [x1, x0]
  44c070:	strb	w2, [x22, x0]
  44c074:	add	x0, x0, #0x1
  44c078:	cmp	x26, x0
  44c07c:	b.ne	44c048 <nftw@plt+0x494c8>  // b.any
  44c080:	b	44bfc8 <nftw@plt+0x49448>
  44c084:	mul	x0, x24, x26
  44c088:	add	x1, x28, x0
  44c08c:	cbz	x26, 44c278 <nftw@plt+0x496f8>
  44c090:	add	x0, x0, #0x10
  44c094:	add	x3, x28, #0x10
  44c098:	cmp	x0, #0x0
  44c09c:	ldr	x0, [sp, #104]
  44c0a0:	ccmp	x1, x3, #0x2, gt
  44c0a4:	ccmp	x0, #0xe, #0x0, cs  // cs = hs, nlast
  44c0a8:	mov	x0, #0x0                   	// #0
  44c0ac:	b.ls	44c2ac <nftw@plt+0x4972c>  // b.plast
  44c0b0:	ldr	q1, [x1, x0]
  44c0b4:	ldr	q0, [x28, x0]
  44c0b8:	str	q1, [x28, x0]
  44c0bc:	str	q0, [x1, x0]
  44c0c0:	add	x0, x0, #0x10
  44c0c4:	cmp	x0, x20
  44c0c8:	b.ne	44c0b0 <nftw@plt+0x49530>  // b.any
  44c0cc:	cmp	x26, x27
  44c0d0:	add	x3, x28, x27
  44c0d4:	add	x0, x1, x27
  44c0d8:	b.eq	44c278 <nftw@plt+0x496f8>  // b.none
  44c0dc:	ldrb	w8, [x1, x27]
  44c0e0:	ldrb	w6, [x28, x27]
  44c0e4:	strb	w8, [x28, x27]
  44c0e8:	ldr	x2, [sp, #112]
  44c0ec:	strb	w6, [x1, x27]
  44c0f0:	cmp	x26, x2
  44c0f4:	b.ls	44c278 <nftw@plt+0x496f8>  // b.plast
  44c0f8:	ldr	x1, [sp, #120]
  44c0fc:	ldrb	w6, [x0, #1]
  44c100:	cmp	x26, x1
  44c104:	ldrb	w1, [x3, #1]
  44c108:	strb	w6, [x3, #1]
  44c10c:	strb	w1, [x0, #1]
  44c110:	b.ls	44c278 <nftw@plt+0x496f8>  // b.plast
  44c114:	ldr	x1, [sp, #128]
  44c118:	ldrb	w6, [x0, #2]
  44c11c:	cmp	x26, x1
  44c120:	ldrb	w1, [x3, #2]
  44c124:	strb	w6, [x3, #2]
  44c128:	strb	w1, [x0, #2]
  44c12c:	b.ls	44c278 <nftw@plt+0x496f8>  // b.plast
  44c130:	ldr	x1, [sp, #136]
  44c134:	ldrb	w6, [x0, #3]
  44c138:	cmp	x26, x1
  44c13c:	ldrb	w1, [x3, #3]
  44c140:	strb	w6, [x3, #3]
  44c144:	strb	w1, [x0, #3]
  44c148:	b.ls	44c278 <nftw@plt+0x496f8>  // b.plast
  44c14c:	ldr	x1, [sp, #144]
  44c150:	ldrb	w6, [x0, #4]
  44c154:	cmp	x26, x1
  44c158:	ldrb	w1, [x3, #4]
  44c15c:	strb	w6, [x3, #4]
  44c160:	strb	w1, [x0, #4]
  44c164:	b.ls	44c278 <nftw@plt+0x496f8>  // b.plast
  44c168:	ldr	x1, [sp, #152]
  44c16c:	ldrb	w6, [x0, #5]
  44c170:	cmp	x26, x1
  44c174:	ldrb	w1, [x3, #5]
  44c178:	strb	w6, [x3, #5]
  44c17c:	strb	w1, [x0, #5]
  44c180:	b.ls	44c278 <nftw@plt+0x496f8>  // b.plast
  44c184:	ldr	x1, [sp, #160]
  44c188:	ldrb	w6, [x0, #6]
  44c18c:	cmp	x26, x1
  44c190:	ldrb	w1, [x3, #6]
  44c194:	strb	w6, [x3, #6]
  44c198:	strb	w1, [x0, #6]
  44c19c:	b.ls	44c278 <nftw@plt+0x496f8>  // b.plast
  44c1a0:	ldr	x1, [sp, #168]
  44c1a4:	ldrb	w6, [x0, #7]
  44c1a8:	cmp	x26, x1
  44c1ac:	ldrb	w1, [x3, #7]
  44c1b0:	strb	w6, [x3, #7]
  44c1b4:	strb	w1, [x0, #7]
  44c1b8:	b.ls	44c278 <nftw@plt+0x496f8>  // b.plast
  44c1bc:	ldr	x1, [sp, #176]
  44c1c0:	ldrb	w6, [x0, #8]
  44c1c4:	cmp	x26, x1
  44c1c8:	ldrb	w1, [x3, #8]
  44c1cc:	strb	w6, [x3, #8]
  44c1d0:	strb	w1, [x0, #8]
  44c1d4:	b.ls	44c278 <nftw@plt+0x496f8>  // b.plast
  44c1d8:	ldr	x1, [sp, #184]
  44c1dc:	ldrb	w6, [x0, #9]
  44c1e0:	cmp	x26, x1
  44c1e4:	ldrb	w1, [x3, #9]
  44c1e8:	strb	w6, [x3, #9]
  44c1ec:	strb	w1, [x0, #9]
  44c1f0:	b.ls	44c278 <nftw@plt+0x496f8>  // b.plast
  44c1f4:	ldr	x1, [sp, #192]
  44c1f8:	ldrb	w6, [x0, #10]
  44c1fc:	cmp	x26, x1
  44c200:	ldrb	w1, [x3, #10]
  44c204:	strb	w6, [x3, #10]
  44c208:	strb	w1, [x0, #10]
  44c20c:	b.ls	44c278 <nftw@plt+0x496f8>  // b.plast
  44c210:	ldr	x1, [sp, #200]
  44c214:	ldrb	w6, [x0, #11]
  44c218:	cmp	x26, x1
  44c21c:	ldrb	w1, [x3, #11]
  44c220:	strb	w6, [x3, #11]
  44c224:	strb	w1, [x0, #11]
  44c228:	b.ls	44c278 <nftw@plt+0x496f8>  // b.plast
  44c22c:	ldr	x1, [sp, #208]
  44c230:	ldrb	w6, [x0, #12]
  44c234:	cmp	x26, x1
  44c238:	ldrb	w1, [x3, #12]
  44c23c:	strb	w6, [x3, #12]
  44c240:	strb	w1, [x0, #12]
  44c244:	b.ls	44c278 <nftw@plt+0x496f8>  // b.plast
  44c248:	ldr	x1, [sp, #216]
  44c24c:	ldrb	w6, [x0, #13]
  44c250:	cmp	x26, x1
  44c254:	ldrb	w1, [x3, #13]
  44c258:	strb	w6, [x3, #13]
  44c25c:	strb	w1, [x0, #13]
  44c260:	b.ls	44c278 <nftw@plt+0x496f8>  // b.plast
  44c264:	ldrb	w6, [x0, #14]
  44c268:	ldrb	w1, [x3, #14]
  44c26c:	strb	w6, [x3, #14]
  44c270:	strb	w1, [x0, #14]
  44c274:	nop
  44c278:	sub	x1, x19, #0x1
  44c27c:	madd	x25, x7, x26, x28
  44c280:	cmp	x19, x24, lsl #1
  44c284:	sub	x1, x1, x24
  44c288:	b.hi	44c308 <nftw@plt+0x49788>  // b.pmore
  44c28c:	mov	x0, x25
  44c290:	mov	x3, x21
  44c294:	mov	x2, x26
  44c298:	bl	44bad0 <nftw@plt+0x48f50>
  44c29c:	cmp	x24, #0x1
  44c2a0:	b.ls	44c2e8 <nftw@plt+0x49768>  // b.plast
  44c2a4:	mov	x19, x24
  44c2a8:	b	44bb88 <nftw@plt+0x49008>
  44c2ac:	ldrb	w3, [x1, x0]
  44c2b0:	ldrb	w2, [x28, x0]
  44c2b4:	strb	w3, [x28, x0]
  44c2b8:	strb	w2, [x1, x0]
  44c2bc:	add	x0, x0, #0x1
  44c2c0:	cmp	x0, x26
  44c2c4:	b.eq	44c278 <nftw@plt+0x496f8>  // b.none
  44c2c8:	ldrb	w3, [x1, x0]
  44c2cc:	ldrb	w2, [x28, x0]
  44c2d0:	strb	w3, [x28, x0]
  44c2d4:	strb	w2, [x1, x0]
  44c2d8:	add	x0, x0, #0x1
  44c2dc:	cmp	x0, x26
  44c2e0:	b.ne	44c2ac <nftw@plt+0x4972c>  // b.any
  44c2e4:	b	44c278 <nftw@plt+0x496f8>
  44c2e8:	ldp	x19, x20, [sp, #16]
  44c2ec:	ldp	x21, x22, [sp, #32]
  44c2f0:	ldp	x23, x24, [sp, #48]
  44c2f4:	ldp	x25, x26, [sp, #64]
  44c2f8:	ldp	x27, x28, [sp, #80]
  44c2fc:	ldp	x29, x30, [sp], #224
  44c300:	ret
  44c304:	ret
  44c308:	mov	x19, x1
  44c30c:	b	44bfe8 <nftw@plt+0x49468>
  44c310:	sub	w5, w1, #0x1
  44c314:	mov	x4, x0
  44c318:	cmp	w5, #0x4f
  44c31c:	b.ls	44c328 <nftw@plt+0x497a8>  // b.plast
  44c320:	mov	x0, #0x0                   	// #0
  44c324:	ret
  44c328:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x1dbb8>
  44c32c:	add	x0, x0, #0xe58
  44c330:	ldrb	w0, [x0, w5, uxtw]
  44c334:	adr	x5, 44c340 <nftw@plt+0x497c0>
  44c338:	add	x0, x5, w0, sxtb #2
  44c33c:	br	x0
  44c340:	cbz	x3, 44c320 <nftw@plt+0x497a0>
  44c344:	ldp	w0, w5, [x4, #40]
  44c348:	cmp	w0, w5
  44c34c:	b.ge	44c320 <nftw@plt+0x497a0>  // b.tcont
  44c350:	mov	w5, #0x18                  	// #24
  44c354:	add	w7, w0, #0x1
  44c358:	ldr	x6, [x4, #32]
  44c35c:	smull	x5, w0, w5
  44c360:	add	x0, x6, x5
  44c364:	str	wzr, [x0, #4]
  44c368:	str	w7, [x4, #40]
  44c36c:	str	w1, [x6, x5]
  44c370:	stp	x2, x3, [x0, #8]
  44c374:	ret
  44c378:	cbnz	x2, 44c344 <nftw@plt+0x497c4>
  44c37c:	mov	x0, #0x0                   	// #0
  44c380:	b	44c324 <nftw@plt+0x497a4>
  44c384:	cmp	x2, #0x0
  44c388:	ccmp	x3, #0x0, #0x4, ne  // ne = any
  44c38c:	b.ne	44c344 <nftw@plt+0x497c4>  // b.any
  44c390:	mov	x0, #0x0                   	// #0
  44c394:	b	44c324 <nftw@plt+0x497a4>
  44c398:	cbz	x1, 44c478 <nftw@plt+0x498f8>
  44c39c:	stp	x29, x30, [sp, #-32]!
  44c3a0:	mov	x29, sp
  44c3a4:	stp	x19, x20, [sp, #16]
  44c3a8:	mov	x20, x0
  44c3ac:	mov	x19, x1
  44c3b0:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x1dbb8>
  44c3b4:	add	x0, x0, #0xea8
  44c3b8:	ldr	w1, [x19]
  44c3bc:	sub	w1, w1, #0x1
  44c3c0:	cmp	w1, #0x4f
  44c3c4:	b.ls	44c3d4 <nftw@plt+0x49854>  // b.plast
  44c3c8:	ldp	x19, x20, [sp, #16]
  44c3cc:	ldp	x29, x30, [sp], #32
  44c3d0:	ret
  44c3d4:	ldrb	w1, [x0, w1, uxtw]
  44c3d8:	adr	x2, 44c3e4 <nftw@plt+0x49864>
  44c3dc:	add	x1, x2, w1, sxtb #2
  44c3e0:	br	x1
  44c3e4:	ldr	x0, [x19, #8]
  44c3e8:	ldr	w0, [x0]
  44c3ec:	cmp	w0, #0x5
  44c3f0:	b.ne	44c400 <nftw@plt+0x49880>  // b.any
  44c3f4:	ldr	w0, [x20, #348]
  44c3f8:	add	w0, w0, #0x1
  44c3fc:	str	w0, [x20, #348]
  44c400:	ldr	w0, [x20, #308]
  44c404:	cmp	w0, #0x800
  44c408:	b.gt	44c3c8 <nftw@plt+0x49848>
  44c40c:	ldr	x1, [x19, #8]
  44c410:	add	w0, w0, #0x1
  44c414:	str	w0, [x20, #308]
  44c418:	mov	x0, x20
  44c41c:	bl	44c398 <nftw@plt+0x49818>
  44c420:	ldr	x1, [x19, #16]
  44c424:	mov	x0, x20
  44c428:	bl	44c398 <nftw@plt+0x49818>
  44c42c:	ldr	w0, [x20, #308]
  44c430:	sub	w0, w0, #0x1
  44c434:	str	w0, [x20, #308]
  44c438:	ldp	x19, x20, [sp, #16]
  44c43c:	ldp	x29, x30, [sp], #32
  44c440:	ret
  44c444:	ldr	x19, [x19, #8]
  44c448:	cbnz	x19, 44c3b8 <nftw@plt+0x49838>
  44c44c:	b	44c3c8 <nftw@plt+0x49848>
  44c450:	ldr	x19, [x19, #16]
  44c454:	cbnz	x19, 44c3b8 <nftw@plt+0x49838>
  44c458:	b	44c3c8 <nftw@plt+0x49848>
  44c45c:	ldr	w0, [x20, #364]
  44c460:	add	w0, w0, #0x1
  44c464:	str	w0, [x20, #364]
  44c468:	ldr	w0, [x20, #308]
  44c46c:	cmp	w0, #0x800
  44c470:	b.gt	44c3c8 <nftw@plt+0x49848>
  44c474:	b	44c40c <nftw@plt+0x4988c>
  44c478:	ret
  44c47c:	nop
  44c480:	cbz	x2, 44c548 <nftw@plt+0x499c8>
  44c484:	stp	x29, x30, [sp, #-64]!
  44c488:	mov	x29, sp
  44c48c:	stp	x19, x20, [sp, #16]
  44c490:	mov	x20, x1
  44c494:	mov	x19, x0
  44c498:	stp	x21, x22, [sp, #32]
  44c49c:	add	x22, x1, x2
  44c4a0:	ldr	x1, [x0, #256]
  44c4a4:	str	x23, [sp, #48]
  44c4a8:	mov	x23, #0x1                   	// #1
  44c4ac:	b	44c504 <nftw@plt+0x49984>
  44c4b0:	ldp	x3, x2, [x19, #272]
  44c4b4:	strb	wzr, [x19, #255]
  44c4b8:	add	x20, x20, #0x1
  44c4bc:	blr	x3
  44c4c0:	strb	w21, [x19]
  44c4c4:	ldr	x0, [x19, #320]
  44c4c8:	str	x23, [x19, #256]
  44c4cc:	strb	w21, [x19, #264]
  44c4d0:	cmp	x22, x20
  44c4d4:	add	x0, x0, #0x1
  44c4d8:	str	x0, [x19, #320]
  44c4dc:	mov	x0, #0x1                   	// #1
  44c4e0:	b.eq	44c534 <nftw@plt+0x499b4>  // b.none
  44c4e4:	ldrb	w21, [x20]
  44c4e8:	add	x1, x0, #0x1
  44c4ec:	str	x1, [x19, #256]
  44c4f0:	add	x20, x20, #0x1
  44c4f4:	strb	w21, [x19, x0]
  44c4f8:	cmp	x20, x22
  44c4fc:	strb	w21, [x19, #264]
  44c500:	b.eq	44c534 <nftw@plt+0x499b4>  // b.none
  44c504:	ldrb	w21, [x20]
  44c508:	mov	x0, x19
  44c50c:	cmp	x1, #0xff
  44c510:	b.eq	44c4b0 <nftw@plt+0x49930>  // b.none
  44c514:	mov	x0, x1
  44c518:	add	x20, x20, #0x1
  44c51c:	add	x1, x0, #0x1
  44c520:	str	x1, [x19, #256]
  44c524:	cmp	x20, x22
  44c528:	strb	w21, [x19, x0]
  44c52c:	strb	w21, [x19, #264]
  44c530:	b.ne	44c504 <nftw@plt+0x49984>  // b.any
  44c534:	ldp	x19, x20, [sp, #16]
  44c538:	ldp	x21, x22, [sp, #32]
  44c53c:	ldr	x23, [sp, #48]
  44c540:	ldp	x29, x30, [sp], #64
  44c544:	ret
  44c548:	ret
  44c54c:	nop
  44c550:	cbnz	x0, 44c56c <nftw@plt+0x499ec>
  44c554:	b	44c578 <nftw@plt+0x499f8>
  44c558:	cmp	w1, #0x0
  44c55c:	b.le	44c580 <nftw@plt+0x49a00>
  44c560:	ldr	x0, [x0, #16]
  44c564:	sub	w1, w1, #0x1
  44c568:	cbz	x0, 44c57c <nftw@plt+0x499fc>
  44c56c:	ldr	w2, [x0]
  44c570:	cmp	w2, #0x2f
  44c574:	b.eq	44c558 <nftw@plt+0x499d8>  // b.none
  44c578:	mov	x0, #0x0                   	// #0
  44c57c:	ret
  44c580:	b.ne	44c578 <nftw@plt+0x499f8>  // b.any
  44c584:	ldr	x0, [x0, #8]
  44c588:	ret
  44c58c:	nop
  44c590:	stp	x29, x30, [sp, #-48]!
  44c594:	mov	x29, sp
  44c598:	stp	x19, x20, [sp, #16]
  44c59c:	mov	x19, x2
  44c5a0:	add	x2, x1, #0x1
  44c5a4:	stp	x21, x22, [sp, #32]
  44c5a8:	mov	x21, x1
  44c5ac:	mov	x22, x0
  44c5b0:	ldp	x1, x20, [x19, #8]
  44c5b4:	add	x1, x2, x1
  44c5b8:	ldr	w2, [x19, #24]
  44c5bc:	cmp	x1, x20
  44c5c0:	b.hi	44c604 <nftw@plt+0x49a84>  // b.pmore
  44c5c4:	cbnz	w2, 44c5f4 <nftw@plt+0x49a74>
  44c5c8:	ldp	x3, x0, [x19]
  44c5cc:	mov	x1, x22
  44c5d0:	mov	x2, x21
  44c5d4:	add	x0, x3, x0
  44c5d8:	bl	402490 <memcpy@plt>
  44c5dc:	ldp	x0, x1, [x19]
  44c5e0:	add	x0, x0, x21
  44c5e4:	strb	wzr, [x0, x1]
  44c5e8:	ldr	x1, [x19, #8]
  44c5ec:	add	x1, x1, x21
  44c5f0:	str	x1, [x19, #8]
  44c5f4:	ldp	x19, x20, [sp, #16]
  44c5f8:	ldp	x21, x22, [sp, #32]
  44c5fc:	ldp	x29, x30, [sp], #48
  44c600:	ret
  44c604:	cbnz	w2, 44c5f4 <nftw@plt+0x49a74>
  44c608:	cbz	x20, 44c640 <nftw@plt+0x49ac0>
  44c60c:	nop
  44c610:	lsl	x20, x20, #1
  44c614:	cmp	x1, x20
  44c618:	b.hi	44c610 <nftw@plt+0x49a90>  // b.pmore
  44c61c:	ldr	x0, [x19]
  44c620:	mov	x1, x20
  44c624:	bl	402750 <realloc@plt>
  44c628:	cbz	x0, 44c650 <nftw@plt+0x49ad0>
  44c62c:	ldr	w2, [x19, #24]
  44c630:	str	x0, [x19]
  44c634:	str	x20, [x19, #16]
  44c638:	cbz	w2, 44c5c8 <nftw@plt+0x49a48>
  44c63c:	b	44c5f4 <nftw@plt+0x49a74>
  44c640:	cmp	x1, #0x2
  44c644:	mov	x20, #0x2                   	// #2
  44c648:	b.hi	44c610 <nftw@plt+0x49a90>  // b.pmore
  44c64c:	b	44c61c <nftw@plt+0x49a9c>
  44c650:	ldr	x0, [x19]
  44c654:	bl	402910 <free@plt>
  44c658:	str	xzr, [x19]
  44c65c:	mov	w0, #0x1                   	// #1
  44c660:	stp	xzr, xzr, [x19, #8]
  44c664:	str	w0, [x19, #24]
  44c668:	b	44c5f4 <nftw@plt+0x49a74>
  44c66c:	nop
  44c670:	cbz	x1, 44c78c <nftw@plt+0x49c0c>
  44c674:	stp	x29, x30, [sp, #-48]!
  44c678:	mov	x29, sp
  44c67c:	stp	x21, x22, [sp, #32]
  44c680:	mov	x21, #0x8001                	// #32769
  44c684:	movk	x21, #0x410, lsl #16
  44c688:	movk	x21, #0xc600, lsl #32
  44c68c:	stp	x19, x20, [sp, #16]
  44c690:	mov	x20, x0
  44c694:	mov	x19, x1
  44c698:	mov	x22, #0x1                   	// #1
  44c69c:	movk	x21, #0x19, lsl #48
  44c6a0:	ldr	w2, [x19]
  44c6a4:	cmp	w2, #0x8
  44c6a8:	b.eq	44c6c0 <nftw@plt+0x49b40>  // b.none
  44c6ac:	b.hi	44c72c <nftw@plt+0x49bac>  // b.pmore
  44c6b0:	cmp	w2, #0x6
  44c6b4:	b.eq	44c6c8 <nftw@plt+0x49b48>  // b.none
  44c6b8:	cmp	w2, #0x7
  44c6bc:	b.ne	44c6dc <nftw@plt+0x49b5c>  // b.any
  44c6c0:	ldr	x19, [x19, #16]
  44c6c4:	cbnz	x19, 44c6a0 <nftw@plt+0x49b20>
  44c6c8:	mov	x0, #0x0                   	// #0
  44c6cc:	ldp	x19, x20, [sp, #16]
  44c6d0:	ldp	x21, x22, [sp, #32]
  44c6d4:	ldp	x29, x30, [sp], #48
  44c6d8:	ret
  44c6dc:	cbz	w2, 44c6c8 <nftw@plt+0x49b48>
  44c6e0:	cmp	w2, #0x5
  44c6e4:	b.ne	44c748 <nftw@plt+0x49bc8>  // b.any
  44c6e8:	ldr	x0, [x20, #288]
  44c6ec:	cbz	x0, 44c780 <nftw@plt+0x49c00>
  44c6f0:	ldr	x0, [x0, #8]
  44c6f4:	ldr	x2, [x19, #8]
  44c6f8:	ldr	x0, [x0, #16]
  44c6fc:	mov	w1, w2
  44c700:	tbnz	w2, #31, 44c760 <nftw@plt+0x49be0>
  44c704:	cbnz	x0, 44c71c <nftw@plt+0x49b9c>
  44c708:	b	44c6c8 <nftw@plt+0x49b48>
  44c70c:	cbz	w1, 44c75c <nftw@plt+0x49bdc>
  44c710:	ldr	x0, [x0, #16]
  44c714:	sub	w1, w1, #0x1
  44c718:	cbz	x0, 44c6c8 <nftw@plt+0x49b48>
  44c71c:	ldr	w2, [x0]
  44c720:	cmp	w2, #0x2f
  44c724:	b.eq	44c70c <nftw@plt+0x49b8c>  // b.none
  44c728:	b	44c6c8 <nftw@plt+0x49b48>
  44c72c:	sub	w2, w2, #0x18
  44c730:	cmp	w2, #0x34
  44c734:	b.hi	44c748 <nftw@plt+0x49bc8>  // b.pmore
  44c738:	lsl	x2, x22, x2
  44c73c:	tst	x2, x21
  44c740:	b.ne	44c6c8 <nftw@plt+0x49b48>  // b.any
  44c744:	tbnz	w2, #27, 44c6c0 <nftw@plt+0x49b40>
  44c748:	ldr	x1, [x19, #8]
  44c74c:	mov	x0, x20
  44c750:	bl	44c670 <nftw@plt+0x49af0>
  44c754:	cbz	x0, 44c6c0 <nftw@plt+0x49b40>
  44c758:	b	44c6cc <nftw@plt+0x49b4c>
  44c75c:	ldr	x0, [x0, #8]
  44c760:	cbz	x0, 44c6c8 <nftw@plt+0x49b48>
  44c764:	ldr	w1, [x0]
  44c768:	cmp	w1, #0x2f
  44c76c:	b.ne	44c6c8 <nftw@plt+0x49b48>  // b.any
  44c770:	ldp	x19, x20, [sp, #16]
  44c774:	ldp	x21, x22, [sp, #32]
  44c778:	ldp	x29, x30, [sp], #48
  44c77c:	ret
  44c780:	mov	w1, #0x1                   	// #1
  44c784:	str	w1, [x20, #304]
  44c788:	b	44c6cc <nftw@plt+0x49b4c>
  44c78c:	mov	x0, #0x0                   	// #0
  44c790:	ret
  44c794:	nop
  44c798:	ldr	x2, [x0, #24]
  44c79c:	mov	x6, x0
  44c7a0:	mov	w9, #0x0                   	// #0
  44c7a4:	ldrb	w1, [x2]
  44c7a8:	cmp	w1, #0x6e
  44c7ac:	b.ne	44c7c4 <nftw@plt+0x49c44>  // b.any
  44c7b0:	add	x0, x2, #0x1
  44c7b4:	str	x0, [x6, #24]
  44c7b8:	mov	w9, #0x1                   	// #1
  44c7bc:	ldrb	w1, [x2, #1]
  44c7c0:	mov	x2, x0
  44c7c4:	sub	w3, w1, #0x30
  44c7c8:	mov	w7, #0xcccd                	// #52429
  44c7cc:	and	w3, w3, #0xff
  44c7d0:	add	x5, x2, #0x1
  44c7d4:	cmp	w3, #0x9
  44c7d8:	mov	w2, w1
  44c7dc:	mov	w8, #0x7fffffff            	// #2147483647
  44c7e0:	mov	w1, #0x0                   	// #0
  44c7e4:	movk	w7, #0xcccc, lsl #16
  44c7e8:	b.ls	44c804 <nftw@plt+0x49c84>  // b.plast
  44c7ec:	b	44c8f8 <nftw@plt+0x49d78>
  44c7f0:	umull	x3, w3, w7
  44c7f4:	add	x5, x5, #0x1
  44c7f8:	lsr	x3, x3, #35
  44c7fc:	cmp	w3, w1
  44c800:	b.lt	44c8f8 <nftw@plt+0x49d78>  // b.tstop
  44c804:	str	x5, [x6, #24]
  44c808:	add	w1, w1, w1, lsl #2
  44c80c:	ldrb	w0, [x5]
  44c810:	add	w1, w2, w1, lsl #1
  44c814:	sub	w1, w1, #0x30
  44c818:	sub	w4, w0, #0x30
  44c81c:	mov	w2, w0
  44c820:	sub	w3, w8, w4
  44c824:	and	w4, w4, #0xff
  44c828:	cmp	w4, #0x9
  44c82c:	b.ls	44c7f0 <nftw@plt+0x49c70>  // b.plast
  44c830:	cmp	w1, #0x0
  44c834:	ccmp	w9, #0x0, #0x0, gt
  44c838:	b.ne	44c8f8 <nftw@plt+0x49d78>  // b.any
  44c83c:	ldr	x0, [x6, #8]
  44c840:	sxtw	x2, w1
  44c844:	sub	x0, x0, x5
  44c848:	cmp	x0, w1, sxtw
  44c84c:	b.lt	44c900 <nftw@plt+0x49d80>  // b.tstop
  44c850:	ldr	w3, [x6, #16]
  44c854:	add	x0, x5, x2
  44c858:	str	x0, [x6, #24]
  44c85c:	tbz	w3, #2, 44c878 <nftw@plt+0x49cf8>
  44c860:	ldrb	w2, [x5, x2]
  44c864:	cmp	w2, #0x24
  44c868:	b.ne	44c878 <nftw@plt+0x49cf8>  // b.any
  44c86c:	add	x0, x0, #0x1
  44c870:	str	x0, [x6, #24]
  44c874:	nop
  44c878:	ldp	w2, w0, [x6, #40]
  44c87c:	cmp	w1, #0x9
  44c880:	b.le	44c8c8 <nftw@plt+0x49d48>
  44c884:	mov	x3, #0x475f                	// #18271
  44c888:	ldr	x4, [x5]
  44c88c:	movk	x3, #0x4f4c, lsl #16
  44c890:	movk	x3, #0x4142, lsl #32
  44c894:	movk	x3, #0x5f4c, lsl #48
  44c898:	cmp	x4, x3
  44c89c:	b.ne	44c8c8 <nftw@plt+0x49d48>  // b.any
  44c8a0:	ldrb	w3, [x5, #8]
  44c8a4:	mov	w7, #0x5f                  	// #95
  44c8a8:	mov	w4, #0x24                  	// #36
  44c8ac:	cmp	w3, #0x2e
  44c8b0:	ccmp	w3, w7, #0x4, ne  // ne = any
  44c8b4:	ccmp	w3, w4, #0x4, ne  // ne = any
  44c8b8:	b.ne	44c8c8 <nftw@plt+0x49d48>  // b.any
  44c8bc:	ldrb	w3, [x5, #9]
  44c8c0:	cmp	w3, #0x4e
  44c8c4:	b.eq	44c90c <nftw@plt+0x49d8c>  // b.none
  44c8c8:	cmp	w0, w2
  44c8cc:	b.le	44c900 <nftw@plt+0x49d80>
  44c8d0:	ldr	x0, [x6, #32]
  44c8d4:	mov	w4, #0x18                  	// #24
  44c8d8:	add	w3, w2, #0x1
  44c8dc:	smaddl	x0, w2, w4, x0
  44c8e0:	str	wzr, [x0, #4]
  44c8e4:	str	w3, [x6, #40]
  44c8e8:	stp	xzr, x5, [x0]
  44c8ec:	str	w1, [x0, #16]
  44c8f0:	str	x0, [x6, #64]
  44c8f4:	ret
  44c8f8:	mov	x0, #0x0                   	// #0
  44c8fc:	ret
  44c900:	mov	x0, #0x0                   	// #0
  44c904:	str	x0, [x6, #64]
  44c908:	b	44c8f4 <nftw@plt+0x49d74>
  44c90c:	ldr	w3, [x6, #72]
  44c910:	cmp	w0, w2
  44c914:	add	w0, w3, #0x16
  44c918:	sub	w1, w0, w1
  44c91c:	str	w1, [x6, #72]
  44c920:	b.le	44c900 <nftw@plt+0x49d80>
  44c924:	mov	w0, #0x18                  	// #24
  44c928:	add	w1, w2, #0x1
  44c92c:	ldr	x3, [x6, #32]
  44c930:	smull	x2, w2, w0
  44c934:	str	w1, [x6, #40]
  44c938:	mov	w4, #0x15                  	// #21
  44c93c:	add	x0, x3, x2
  44c940:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x1ebb8>
  44c944:	add	x1, x1, #0xcf8
  44c948:	str	xzr, [x3, x2]
  44c94c:	str	x1, [x0, #8]
  44c950:	str	w4, [x0, #16]
  44c954:	str	x0, [x6, #64]
  44c958:	b	44c8f4 <nftw@plt+0x49d74>
  44c95c:	nop
  44c960:	mov	x10, x0
  44c964:	ldr	x0, [x0, #24]
  44c968:	ldrb	w2, [x0]
  44c96c:	cmp	w2, #0x53
  44c970:	b.ne	44c9f8 <nftw@plt+0x49e78>  // b.any
  44c974:	add	x3, x0, #0x1
  44c978:	str	x3, [x10, #24]
  44c97c:	ldrb	w2, [x0, #1]
  44c980:	cbnz	w2, 44ca04 <nftw@plt+0x49e84>
  44c984:	ldr	w0, [x10, #16]
  44c988:	and	w1, w1, #0x1
  44c98c:	ands	w4, w0, #0x8
  44c990:	ubfx	x4, x0, #3, #1
  44c994:	csel	w1, w1, wzr, eq  // eq = none
  44c998:	cbz	w1, 44c9b0 <nftw@plt+0x49e30>
  44c99c:	ldrb	w0, [x3]
  44c9a0:	sub	w0, w0, #0x43
  44c9a4:	and	w0, w0, #0xff
  44c9a8:	cmp	w0, #0x1
  44c9ac:	csinc	w4, w4, wzr, hi  // hi = pmore
  44c9b0:	cmp	w2, #0x74
  44c9b4:	b.eq	44cc14 <nftw@plt+0x4a094>  // b.none
  44c9b8:	cmp	w2, #0x61
  44c9bc:	b.eq	44cc24 <nftw@plt+0x4a0a4>  // b.none
  44c9c0:	cmp	w2, #0x62
  44c9c4:	b.eq	44cc34 <nftw@plt+0x4a0b4>  // b.none
  44c9c8:	cmp	w2, #0x73
  44c9cc:	b.eq	44cc4c <nftw@plt+0x4a0cc>  // b.none
  44c9d0:	cmp	w2, #0x69
  44c9d4:	b.eq	44cc5c <nftw@plt+0x4a0dc>  // b.none
  44c9d8:	cmp	w2, #0x6f
  44c9dc:	b.eq	44cadc <nftw@plt+0x49f5c>  // b.none
  44c9e0:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x1ebb8>
  44c9e4:	add	x1, x1, #0xd0
  44c9e8:	add	x1, x1, #0x150
  44c9ec:	cmp	w2, #0x64
  44c9f0:	b.eq	44cae8 <nftw@plt+0x49f68>  // b.none
  44c9f4:	nop
  44c9f8:	mov	x11, #0x0                   	// #0
  44c9fc:	mov	x0, x11
  44ca00:	ret
  44ca04:	add	x3, x0, #0x2
  44ca08:	str	x3, [x10, #24]
  44ca0c:	ldrb	w2, [x0, #1]
  44ca10:	sub	w5, w2, #0x30
  44ca14:	cmp	w2, #0x5f
  44ca18:	and	w0, w5, #0xff
  44ca1c:	ccmp	w0, #0x9, #0x0, ne  // ne = any
  44ca20:	b.hi	44ca4c <nftw@plt+0x49ecc>  // b.pmore
  44ca24:	cmp	w2, #0x5f
  44ca28:	mov	w1, #0x0                   	// #0
  44ca2c:	b.ne	44ca60 <nftw@plt+0x49ee0>  // b.any
  44ca30:	ldr	w0, [x10, #56]
  44ca34:	cmp	w0, w1
  44ca38:	b.ls	44c9f8 <nftw@plt+0x49e78>  // b.plast
  44ca3c:	ldr	x0, [x10, #48]
  44ca40:	ldr	x11, [x0, w1, uxtw #3]
  44ca44:	mov	x0, x11
  44ca48:	ret
  44ca4c:	sub	w0, w2, #0x41
  44ca50:	and	w0, w0, #0xff
  44ca54:	cmp	w0, #0x19
  44ca58:	b.hi	44c984 <nftw@plt+0x49e04>  // b.pmore
  44ca5c:	nop
  44ca60:	mov	w3, #0x0                   	// #0
  44ca64:	nop
  44ca68:	add	w1, w3, w3, lsl #3
  44ca6c:	sub	w6, w2, #0x41
  44ca70:	mov	w4, w1
  44ca74:	and	w5, w5, #0xff
  44ca78:	add	w1, w2, w1, lsl #2
  44ca7c:	and	w6, w6, #0xff
  44ca80:	sub	w1, w1, #0x37
  44ca84:	add	w2, w2, w4, lsl #2
  44ca88:	cmp	w5, #0x9
  44ca8c:	b.hi	44cad0 <nftw@plt+0x49f50>  // b.pmore
  44ca90:	sub	w1, w2, #0x30
  44ca94:	cmp	w3, w1
  44ca98:	b.hi	44c9f8 <nftw@plt+0x49e78>  // b.pmore
  44ca9c:	ldr	x4, [x10, #24]
  44caa0:	mov	w3, w1
  44caa4:	add	x0, x4, #0x1
  44caa8:	ldrb	w2, [x4]
  44caac:	cbz	w2, 44cac0 <nftw@plt+0x49f40>
  44cab0:	str	x0, [x10, #24]
  44cab4:	ldrb	w2, [x4]
  44cab8:	cmp	w2, #0x5f
  44cabc:	b.eq	44cac8 <nftw@plt+0x49f48>  // b.none
  44cac0:	sub	w5, w2, #0x30
  44cac4:	b	44ca68 <nftw@plt+0x49ee8>
  44cac8:	add	w1, w1, #0x1
  44cacc:	b	44ca30 <nftw@plt+0x49eb0>
  44cad0:	cmp	w6, #0x19
  44cad4:	b.ls	44ca94 <nftw@plt+0x49f14>  // b.plast
  44cad8:	b	44c9f8 <nftw@plt+0x49e78>
  44cadc:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x1ebb8>
  44cae0:	add	x1, x1, #0xd0
  44cae4:	add	x1, x1, #0x118
  44cae8:	ldr	x6, [x1, #40]
  44caec:	ldp	w0, w5, [x10, #40]
  44caf0:	cbz	x6, 44cb2c <nftw@plt+0x49fac>
  44caf4:	ldr	w11, [x1, #48]
  44caf8:	cmp	w5, w0
  44cafc:	b.le	44cc6c <nftw@plt+0x4a0ec>
  44cb00:	mov	w9, #0x18                  	// #24
  44cb04:	ldr	x8, [x10, #32]
  44cb08:	smull	x7, w0, w9
  44cb0c:	add	w0, w0, #0x1
  44cb10:	add	x2, x8, x7
  44cb14:	str	wzr, [x2, #4]
  44cb18:	str	w0, [x10, #40]
  44cb1c:	str	w9, [x8, x7]
  44cb20:	str	x6, [x2, #8]
  44cb24:	str	w11, [x2, #16]
  44cb28:	str	x2, [x10, #64]
  44cb2c:	cbz	w4, 44cc08 <nftw@plt+0x4a088>
  44cb30:	ldr	w2, [x1, #32]
  44cb34:	ldr	x6, [x1, #24]
  44cb38:	cmp	w5, w0
  44cb3c:	ldr	w1, [x10, #72]
  44cb40:	add	w1, w1, w2
  44cb44:	str	w1, [x10, #72]
  44cb48:	b.le	44cc44 <nftw@plt+0x4a0c4>
  44cb4c:	mov	w4, #0x18                  	// #24
  44cb50:	add	w5, w0, #0x1
  44cb54:	ldr	x1, [x10, #32]
  44cb58:	smull	x0, w0, w4
  44cb5c:	add	x11, x1, x0
  44cb60:	str	wzr, [x11, #4]
  44cb64:	str	w5, [x10, #40]
  44cb68:	str	w4, [x1, x0]
  44cb6c:	str	x6, [x11, #8]
  44cb70:	str	w2, [x11, #16]
  44cb74:	ldrb	w0, [x3]
  44cb78:	cmp	w0, #0x42
  44cb7c:	b.ne	44c9fc <nftw@plt+0x49e7c>  // b.any
  44cb80:	stp	x29, x30, [sp, #-16]!
  44cb84:	mov	x29, sp
  44cb88:	ldr	x12, [x10, #64]
  44cb8c:	nop
  44cb90:	add	x3, x3, #0x1
  44cb94:	str	x3, [x10, #24]
  44cb98:	mov	x0, x10
  44cb9c:	bl	44c798 <nftw@plt+0x49c18>
  44cba0:	mov	x3, x0
  44cba4:	mov	x2, x11
  44cba8:	mov	x0, x10
  44cbac:	mov	w1, #0x4c                  	// #76
  44cbb0:	bl	44c310 <nftw@plt+0x49790>
  44cbb4:	ldr	x3, [x10, #24]
  44cbb8:	mov	x11, x0
  44cbbc:	ldrb	w0, [x3]
  44cbc0:	cmp	w0, #0x42
  44cbc4:	b.eq	44cb90 <nftw@plt+0x4a010>  // b.none
  44cbc8:	str	x12, [x10, #64]
  44cbcc:	cbz	x11, 44cbf8 <nftw@plt+0x4a078>
  44cbd0:	ldp	w0, w1, [x10, #56]
  44cbd4:	cmp	w0, w1
  44cbd8:	b.ge	44cbf8 <nftw@plt+0x4a078>  // b.tcont
  44cbdc:	ldr	x2, [x10, #48]
  44cbe0:	add	w1, w0, #0x1
  44cbe4:	str	x11, [x2, w0, sxtw #3]
  44cbe8:	mov	x0, x11
  44cbec:	str	w1, [x10, #56]
  44cbf0:	ldp	x29, x30, [sp], #16
  44cbf4:	ret
  44cbf8:	mov	x11, #0x0                   	// #0
  44cbfc:	mov	x0, x11
  44cc00:	ldp	x29, x30, [sp], #16
  44cc04:	ret
  44cc08:	ldr	w2, [x1, #16]
  44cc0c:	ldr	x6, [x1, #8]
  44cc10:	b	44cb38 <nftw@plt+0x49fb8>
  44cc14:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x1ebb8>
  44cc18:	add	x1, x1, #0xd0
  44cc1c:	ldp	w0, w5, [x10, #40]
  44cc20:	b	44cb2c <nftw@plt+0x49fac>
  44cc24:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x1ebb8>
  44cc28:	add	x1, x1, #0xd0
  44cc2c:	add	x1, x1, #0x38
  44cc30:	b	44cae8 <nftw@plt+0x49f68>
  44cc34:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x1ebb8>
  44cc38:	add	x1, x1, #0xd0
  44cc3c:	add	x1, x1, #0x70
  44cc40:	b	44cae8 <nftw@plt+0x49f68>
  44cc44:	mov	x11, #0x0                   	// #0
  44cc48:	b	44cb74 <nftw@plt+0x49ff4>
  44cc4c:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x1ebb8>
  44cc50:	add	x1, x1, #0xd0
  44cc54:	add	x1, x1, #0xa8
  44cc58:	b	44cae8 <nftw@plt+0x49f68>
  44cc5c:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x1ebb8>
  44cc60:	add	x1, x1, #0xd0
  44cc64:	add	x1, x1, #0xe0
  44cc68:	b	44cae8 <nftw@plt+0x49f68>
  44cc6c:	mov	x2, #0x0                   	// #0
  44cc70:	str	x2, [x10, #64]
  44cc74:	b	44cb2c <nftw@plt+0x49fac>
  44cc78:	ldr	x1, [x0, #24]
  44cc7c:	mov	x5, x0
  44cc80:	ldrb	w2, [x1]
  44cc84:	cmp	w2, #0x5f
  44cc88:	b.eq	44cd14 <nftw@plt+0x4a194>  // b.none
  44cc8c:	cmp	w2, #0x6e
  44cc90:	b.eq	44cd1c <nftw@plt+0x4a19c>  // b.none
  44cc94:	sub	w0, w2, #0x30
  44cc98:	and	w0, w0, #0xff
  44cc9c:	cmp	w0, #0x9
  44cca0:	b.hi	44cd1c <nftw@plt+0x4a19c>  // b.pmore
  44cca4:	mov	w8, #0xcccd                	// #52429
  44cca8:	mov	w3, w2
  44ccac:	mov	w9, #0x7fffffff            	// #2147483647
  44ccb0:	mov	w2, #0x0                   	// #0
  44ccb4:	movk	w8, #0xcccc, lsl #16
  44ccb8:	b	44cccc <nftw@plt+0x4a14c>
  44ccbc:	umull	x4, w4, w8
  44ccc0:	lsr	x4, x4, #35
  44ccc4:	cmp	w4, w2
  44ccc8:	b.lt	44cd1c <nftw@plt+0x4a19c>  // b.tstop
  44cccc:	add	x1, x1, #0x1
  44ccd0:	str	x1, [x5, #24]
  44ccd4:	add	w2, w2, w2, lsl #2
  44ccd8:	ldrb	w7, [x1]
  44ccdc:	add	w0, w3, w2, lsl #1
  44cce0:	sub	w2, w0, #0x30
  44cce4:	sub	w6, w7, #0x30
  44cce8:	mov	w3, w7
  44ccec:	sub	w4, w9, w6
  44ccf0:	and	w6, w6, #0xff
  44ccf4:	cmp	w6, #0x9
  44ccf8:	b.ls	44ccbc <nftw@plt+0x4a13c>  // b.plast
  44ccfc:	sub	w0, w0, #0x2f
  44cd00:	cmp	w7, #0x5f
  44cd04:	b.ne	44cd1c <nftw@plt+0x4a19c>  // b.any
  44cd08:	add	x1, x1, #0x1
  44cd0c:	str	x1, [x5, #24]
  44cd10:	ret
  44cd14:	mov	w0, #0x0                   	// #0
  44cd18:	b	44cd08 <nftw@plt+0x4a188>
  44cd1c:	mov	w0, #0xffffffff            	// #-1
  44cd20:	ret
  44cd24:	nop
  44cd28:	mov	x4, x0
  44cd2c:	ldr	x0, [x0, #24]
  44cd30:	ldrb	w1, [x0]
  44cd34:	cmp	w1, #0x5f
  44cd38:	b.ne	44cdd8 <nftw@plt+0x4a258>  // b.any
  44cd3c:	add	x1, x0, #0x1
  44cd40:	str	x1, [x4, #24]
  44cd44:	mov	w12, #0x0                   	// #0
  44cd48:	ldrb	w2, [x0, #1]
  44cd4c:	cmp	w2, #0x5f
  44cd50:	b.eq	44ce10 <nftw@plt+0x4a290>  // b.none
  44cd54:	cmp	w2, #0x6e
  44cd58:	b.eq	44cde8 <nftw@plt+0x4a268>  // b.none
  44cd5c:	sub	w0, w2, #0x30
  44cd60:	and	w0, w0, #0xff
  44cd64:	cmp	w0, #0x9
  44cd68:	b.hi	44cdd8 <nftw@plt+0x4a258>  // b.pmore
  44cd6c:	mov	w0, #0x0                   	// #0
  44cd70:	mov	w9, #0xcccd                	// #52429
  44cd74:	mov	w5, w2
  44cd78:	mov	w10, #0x7fffffff            	// #2147483647
  44cd7c:	mov	w2, #0x0                   	// #0
  44cd80:	movk	w9, #0xcccc, lsl #16
  44cd84:	b	44cd98 <nftw@plt+0x4a218>
  44cd88:	umull	x3, w3, w9
  44cd8c:	lsr	x3, x3, #35
  44cd90:	cmp	w3, w2
  44cd94:	b.lt	44cde0 <nftw@plt+0x4a260>  // b.tstop
  44cd98:	mov	x11, x1
  44cd9c:	add	x1, x1, #0x1
  44cda0:	str	x1, [x4, #24]
  44cda4:	add	w2, w2, w2, lsl #2
  44cda8:	ldrb	w7, [x1]
  44cdac:	add	w8, w5, w2, lsl #1
  44cdb0:	sub	w2, w8, #0x30
  44cdb4:	sub	w6, w7, #0x30
  44cdb8:	mov	w5, w7
  44cdbc:	sub	w3, w10, w6
  44cdc0:	and	w6, w6, #0xff
  44cdc4:	cmp	w6, #0x9
  44cdc8:	b.ls	44cd88 <nftw@plt+0x4a208>  // b.plast
  44cdcc:	cbz	w0, 44ce2c <nftw@plt+0x4a2ac>
  44cdd0:	cmp	w8, #0x30
  44cdd4:	b.ne	44cde0 <nftw@plt+0x4a260>  // b.any
  44cdd8:	mov	w0, #0x1                   	// #1
  44cddc:	ret
  44cde0:	mov	w0, #0x0                   	// #0
  44cde4:	ret
  44cde8:	add	x3, x1, #0x1
  44cdec:	str	x3, [x4, #24]
  44cdf0:	ldrb	w2, [x1, #1]
  44cdf4:	sub	w0, w2, #0x30
  44cdf8:	and	w0, w0, #0xff
  44cdfc:	cmp	w0, #0x9
  44ce00:	b.hi	44cdd8 <nftw@plt+0x4a258>  // b.pmore
  44ce04:	mov	x1, x3
  44ce08:	mov	w0, #0x1                   	// #1
  44ce0c:	b	44cd70 <nftw@plt+0x4a1f0>
  44ce10:	add	x1, x0, #0x2
  44ce14:	str	x1, [x4, #24]
  44ce18:	mov	w12, #0x1                   	// #1
  44ce1c:	ldrb	w2, [x0, #2]
  44ce20:	cmp	w2, #0x6e
  44ce24:	b.ne	44cd5c <nftw@plt+0x4a1dc>  // b.any
  44ce28:	b	44cde8 <nftw@plt+0x4a268>
  44ce2c:	cmp	w12, #0x0
  44ce30:	ccmp	w2, #0x9, #0x4, ne  // ne = any
  44ce34:	b.le	44cdd8 <nftw@plt+0x4a258>
  44ce38:	cmp	w7, #0x5f
  44ce3c:	b.ne	44cddc <nftw@plt+0x4a25c>  // b.any
  44ce40:	add	x11, x11, #0x2
  44ce44:	mov	w0, #0x1                   	// #1
  44ce48:	str	x11, [x4, #24]
  44ce4c:	ret
  44ce50:	mov	x1, x0
  44ce54:	ldr	x0, [x0, #24]
  44ce58:	ldrb	w2, [x0]
  44ce5c:	cmp	w2, #0x54
  44ce60:	b.ne	44cf30 <nftw@plt+0x4a3b0>  // b.any
  44ce64:	add	x2, x0, #0x1
  44ce68:	str	x2, [x1, #24]
  44ce6c:	ldrb	w5, [x0, #1]
  44ce70:	cmp	w5, #0x5f
  44ce74:	b.eq	44cf38 <nftw@plt+0x4a3b8>  // b.none
  44ce78:	sub	w0, w5, #0x30
  44ce7c:	and	w0, w0, #0xff
  44ce80:	cmp	w0, #0x9
  44ce84:	b.hi	44cf30 <nftw@plt+0x4a3b0>  // b.pmore
  44ce88:	mov	w9, #0xcccd                	// #52429
  44ce8c:	mov	w0, #0x0                   	// #0
  44ce90:	mov	w10, #0x7fffffff            	// #2147483647
  44ce94:	movk	w9, #0xcccc, lsl #16
  44ce98:	b	44ceac <nftw@plt+0x4a32c>
  44ce9c:	umull	x3, w3, w9
  44cea0:	lsr	x3, x3, #35
  44cea4:	cmp	w3, w0
  44cea8:	b.lt	44cf30 <nftw@plt+0x4a3b0>  // b.tstop
  44ceac:	mov	x8, x2
  44ceb0:	add	x2, x2, #0x1
  44ceb4:	str	x2, [x1, #24]
  44ceb8:	add	w0, w0, w0, lsl #2
  44cebc:	ldrb	w7, [x2]
  44cec0:	add	w6, w5, w0, lsl #1
  44cec4:	sub	w0, w6, #0x30
  44cec8:	sub	w4, w7, #0x30
  44cecc:	mov	w5, w7
  44ced0:	sub	w3, w10, w4
  44ced4:	and	w4, w4, #0xff
  44ced8:	cmp	w4, #0x9
  44cedc:	b.ls	44ce9c <nftw@plt+0x4a31c>  // b.plast
  44cee0:	sub	w0, w6, #0x2f
  44cee4:	cmp	w7, #0x5f
  44cee8:	b.ne	44cf30 <nftw@plt+0x4a3b0>  // b.any
  44ceec:	add	x8, x8, #0x2
  44cef0:	str	x8, [x1, #24]
  44cef4:	ldp	w2, w3, [x1, #40]
  44cef8:	cmp	w2, w3
  44cefc:	b.ge	44cf30 <nftw@plt+0x4a3b0>  // b.tcont
  44cf00:	mov	w4, #0x18                  	// #24
  44cf04:	add	w5, w2, #0x1
  44cf08:	ldr	x3, [x1, #32]
  44cf0c:	smull	x2, w2, w4
  44cf10:	sxtw	x6, w0
  44cf14:	mov	w4, #0x5                   	// #5
  44cf18:	add	x0, x3, x2
  44cf1c:	str	wzr, [x0, #4]
  44cf20:	str	w5, [x1, #40]
  44cf24:	str	w4, [x3, x2]
  44cf28:	str	x6, [x0, #8]
  44cf2c:	ret
  44cf30:	mov	x0, #0x0                   	// #0
  44cf34:	ret
  44cf38:	add	x2, x0, #0x2
  44cf3c:	mov	w0, #0x0                   	// #0
  44cf40:	str	x2, [x1, #24]
  44cf44:	b	44cef4 <nftw@plt+0x4a374>
  44cf48:	mov	x2, x0
  44cf4c:	cbnz	w1, 44cf68 <nftw@plt+0x4a3e8>
  44cf50:	ldr	x0, [x0, #24]
  44cf54:	ldrb	w1, [x0]
  44cf58:	cbz	w1, 44d090 <nftw@plt+0x4a510>
  44cf5c:	add	x1, x0, #0x1
  44cf60:	str	x1, [x2, #24]
  44cf64:	ldrb	w1, [x0]
  44cf68:	cmp	w1, #0x68
  44cf6c:	b.eq	44d0ac <nftw@plt+0x4a52c>  // b.none
  44cf70:	cmp	w1, #0x76
  44cf74:	b.ne	44d090 <nftw@plt+0x4a510>  // b.any
  44cf78:	ldr	x6, [x2, #24]
  44cf7c:	ldrb	w5, [x6]
  44cf80:	cmp	w5, #0x6e
  44cf84:	b.eq	44d098 <nftw@plt+0x4a518>  // b.none
  44cf88:	sub	w0, w5, #0x30
  44cf8c:	and	w0, w0, #0xff
  44cf90:	cmp	w0, #0x9
  44cf94:	b.hi	44cff0 <nftw@plt+0x4a470>  // b.pmore
  44cf98:	mov	w7, #0xcccd                	// #52429
  44cf9c:	add	x3, x6, #0x1
  44cfa0:	mov	w1, #0x0                   	// #0
  44cfa4:	mov	w8, #0x7fffffff            	// #2147483647
  44cfa8:	movk	w7, #0xcccc, lsl #16
  44cfac:	b	44cfc0 <nftw@plt+0x4a440>
  44cfb0:	umull	x0, w0, w7
  44cfb4:	lsr	x0, x0, #35
  44cfb8:	cmp	w0, w1
  44cfbc:	b.lt	44d090 <nftw@plt+0x4a510>  // b.tstop
  44cfc0:	add	w1, w1, w1, lsl #2
  44cfc4:	str	x3, [x2, #24]
  44cfc8:	mov	x6, x3
  44cfcc:	add	x3, x3, #0x1
  44cfd0:	add	w1, w5, w1, lsl #1
  44cfd4:	ldurb	w5, [x3, #-1]
  44cfd8:	sub	w1, w1, #0x30
  44cfdc:	sub	w4, w5, #0x30
  44cfe0:	sub	w0, w8, w4
  44cfe4:	and	w4, w4, #0xff
  44cfe8:	cmp	w4, #0x9
  44cfec:	b.ls	44cfb0 <nftw@plt+0x4a430>  // b.plast
  44cff0:	cmp	w5, #0x5f
  44cff4:	b.ne	44d090 <nftw@plt+0x4a510>  // b.any
  44cff8:	add	x4, x6, #0x1
  44cffc:	str	x4, [x2, #24]
  44d000:	ldrb	w0, [x6, #1]
  44d004:	cmp	w0, #0x6e
  44d008:	b.ne	44d018 <nftw@plt+0x4a498>  // b.any
  44d00c:	add	x4, x6, #0x2
  44d010:	str	x4, [x2, #24]
  44d014:	ldrb	w0, [x6, #2]
  44d018:	sub	w1, w0, #0x30
  44d01c:	and	w1, w1, #0xff
  44d020:	cmp	w1, #0x9
  44d024:	b.hi	44d078 <nftw@plt+0x4a4f8>  // b.pmore
  44d028:	mov	w7, #0xcccd                	// #52429
  44d02c:	mov	w1, #0x0                   	// #0
  44d030:	mov	w6, #0x7fffffff            	// #2147483647
  44d034:	movk	w7, #0xcccc, lsl #16
  44d038:	b	44d04c <nftw@plt+0x4a4cc>
  44d03c:	umull	x3, w3, w7
  44d040:	lsr	x3, x3, #35
  44d044:	cmp	w3, w1
  44d048:	b.lt	44d090 <nftw@plt+0x4a510>  // b.tstop
  44d04c:	add	x4, x4, #0x1
  44d050:	add	w1, w1, w1, lsl #2
  44d054:	str	x4, [x2, #24]
  44d058:	add	w1, w0, w1, lsl #1
  44d05c:	ldrb	w0, [x4]
  44d060:	sub	w1, w1, #0x30
  44d064:	sub	w5, w0, #0x30
  44d068:	sub	w3, w6, w5
  44d06c:	and	w5, w5, #0xff
  44d070:	cmp	w5, #0x9
  44d074:	b.ls	44d03c <nftw@plt+0x4a4bc>  // b.plast
  44d078:	cmp	w0, #0x5f
  44d07c:	b.ne	44d090 <nftw@plt+0x4a510>  // b.any
  44d080:	add	x4, x4, #0x1
  44d084:	mov	w0, #0x1                   	// #1
  44d088:	str	x4, [x2, #24]
  44d08c:	ret
  44d090:	mov	w0, #0x0                   	// #0
  44d094:	ret
  44d098:	add	x0, x6, #0x1
  44d09c:	str	x0, [x2, #24]
  44d0a0:	ldrb	w5, [x6, #1]
  44d0a4:	mov	x6, x0
  44d0a8:	b	44cf88 <nftw@plt+0x4a408>
  44d0ac:	ldr	x4, [x2, #24]
  44d0b0:	ldrb	w0, [x4]
  44d0b4:	cmp	w0, #0x6e
  44d0b8:	b.ne	44d0cc <nftw@plt+0x4a54c>  // b.any
  44d0bc:	add	x1, x4, #0x1
  44d0c0:	str	x1, [x2, #24]
  44d0c4:	ldrb	w0, [x4, #1]
  44d0c8:	mov	x4, x1
  44d0cc:	sub	w1, w0, #0x30
  44d0d0:	and	w1, w1, #0xff
  44d0d4:	cmp	w1, #0x9
  44d0d8:	b.hi	44d078 <nftw@plt+0x4a4f8>  // b.pmore
  44d0dc:	mov	w7, #0xcccd                	// #52429
  44d0e0:	add	x5, x4, #0x1
  44d0e4:	mov	w1, #0x0                   	// #0
  44d0e8:	mov	w8, #0x7fffffff            	// #2147483647
  44d0ec:	movk	w7, #0xcccc, lsl #16
  44d0f0:	b	44d104 <nftw@plt+0x4a584>
  44d0f4:	umull	x3, w3, w7
  44d0f8:	lsr	x3, x3, #35
  44d0fc:	cmp	w3, w1
  44d100:	b.lt	44d090 <nftw@plt+0x4a510>  // b.tstop
  44d104:	add	w1, w1, w1, lsl #2
  44d108:	str	x5, [x2, #24]
  44d10c:	mov	x4, x5
  44d110:	add	x5, x5, #0x1
  44d114:	add	w1, w0, w1, lsl #1
  44d118:	ldurb	w0, [x5, #-1]
  44d11c:	sub	w1, w1, #0x30
  44d120:	sub	w6, w0, #0x30
  44d124:	sub	w3, w8, w6
  44d128:	and	w6, w6, #0xff
  44d12c:	cmp	w6, #0x9
  44d130:	b.ls	44d0f4 <nftw@plt+0x4a574>  // b.plast
  44d134:	b	44d078 <nftw@plt+0x4a4f8>
  44d138:	stp	x29, x30, [sp, #-256]!
  44d13c:	mov	x29, sp
  44d140:	stp	x19, x20, [sp, #16]
  44d144:	mov	x19, x0
  44d148:	cbz	x2, 44d1d4 <nftw@plt+0x4a654>
  44d14c:	stp	x21, x22, [sp, #32]
  44d150:	ldr	w21, [x0, #304]
  44d154:	cbnz	w21, 44d19c <nftw@plt+0x4a61c>
  44d158:	ldr	w20, [x2]
  44d15c:	stp	x23, x24, [sp, #48]
  44d160:	mov	x24, x2
  44d164:	cmp	w20, #0x50
  44d168:	b.ls	44d180 <nftw@plt+0x4a600>  // b.plast
  44d16c:	mov	w0, #0x1                   	// #1
  44d170:	ldp	x21, x22, [sp, #32]
  44d174:	ldp	x23, x24, [sp, #48]
  44d178:	str	w0, [x19, #304]
  44d17c:	b	44d1a0 <nftw@plt+0x4a620>
  44d180:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x1dbb8>
  44d184:	mov	w22, w1
  44d188:	add	x0, x0, #0xef8
  44d18c:	ldrh	w0, [x0, w20, uxtw #1]
  44d190:	adr	x1, 44d19c <nftw@plt+0x4a61c>
  44d194:	add	x0, x1, w0, sxth #2
  44d198:	br	x0
  44d19c:	ldp	x21, x22, [sp, #32]
  44d1a0:	ldp	x19, x20, [sp, #16]
  44d1a4:	ldp	x29, x30, [sp], #256
  44d1a8:	ret
  44d1ac:	ldr	x0, [x2, #16]
  44d1b0:	ldr	w1, [x0]
  44d1b4:	cmp	w1, #0x3b
  44d1b8:	b.ne	44d1cc <nftw@plt+0x4a64c>  // b.any
  44d1bc:	ldr	x0, [x0, #16]
  44d1c0:	ldr	w0, [x0]
  44d1c4:	cmp	w0, #0x3c
  44d1c8:	b.eq	455104 <nftw@plt+0x52584>  // b.none
  44d1cc:	ldp	x21, x22, [sp, #32]
  44d1d0:	ldp	x23, x24, [sp, #48]
  44d1d4:	mov	w0, #0x1                   	// #1
  44d1d8:	str	w0, [x19, #304]
  44d1dc:	ldp	x19, x20, [sp, #16]
  44d1e0:	ldp	x29, x30, [sp], #256
  44d1e4:	ret
  44d1e8:	stp	x25, x26, [sp, #64]
  44d1ec:	add	x0, sp, #0x80
  44d1f0:	ldp	x1, x2, [x19, #288]
  44d1f4:	stp	x2, x24, [sp, #128]
  44d1f8:	str	wzr, [sp, #144]
  44d1fc:	str	x1, [sp, #152]
  44d200:	ldr	x3, [x24, #8]
  44d204:	str	x0, [x19, #296]
  44d208:	mov	x25, x3
  44d20c:	cbnz	x25, 4507ec <nftw@plt+0x4dc6c>
  44d210:	mov	w0, #0x1                   	// #1
  44d214:	str	w0, [x19, #304]
  44d218:	mov	x2, x24
  44d21c:	mov	w1, w22
  44d220:	mov	x0, x19
  44d224:	bl	456850 <nftw@plt+0x53cd0>
  44d228:	ldr	x0, [sp, #128]
  44d22c:	str	x0, [x19, #296]
  44d230:	cbz	w21, 450860 <nftw@plt+0x4dce0>
  44d234:	ldp	x21, x22, [sp, #32]
  44d238:	ldp	x25, x26, [sp, #64]
  44d23c:	str	x23, [x19, #288]
  44d240:	ldp	x23, x24, [sp, #48]
  44d244:	b	44d1a0 <nftw@plt+0x4a620>
  44d248:	ldr	x2, [x19, #296]
  44d24c:	stp	x25, x26, [sp, #64]
  44d250:	mov	x0, x2
  44d254:	ldr	x25, [x24, #8]
  44d258:	cbz	x2, 44d28c <nftw@plt+0x4a70c>
  44d25c:	nop
  44d260:	ldr	w1, [x0, #16]
  44d264:	cbnz	w1, 44d284 <nftw@plt+0x4a704>
  44d268:	ldr	x1, [x0, #8]
  44d26c:	ldr	w1, [x1]
  44d270:	sub	w3, w1, #0x19
  44d274:	cmp	w3, #0x2
  44d278:	b.hi	45475c <nftw@plt+0x51bdc>  // b.pmore
  44d27c:	cmp	w20, w1
  44d280:	b.eq	454768 <nftw@plt+0x51be8>  // b.none
  44d284:	ldr	x0, [x0]
  44d288:	cbnz	x0, 44d260 <nftw@plt+0x4a6e0>
  44d28c:	ldr	x4, [x19, #288]
  44d290:	b	44d560 <nftw@plt+0x4a9e0>
  44d294:	ldr	x20, [x2, #8]
  44d298:	cbz	x20, 44d304 <nftw@plt+0x4a784>
  44d29c:	ldr	w0, [x20, #4]
  44d2a0:	cmp	w0, #0x1
  44d2a4:	b.gt	453a78 <nftw@plt+0x50ef8>
  44d2a8:	ldr	w1, [x19, #308]
  44d2ac:	cmp	w1, #0x400
  44d2b0:	b.gt	453a78 <nftw@plt+0x50ef8>
  44d2b4:	ldr	x3, [x19, #328]
  44d2b8:	add	w0, w0, #0x1
  44d2bc:	str	w0, [x20, #4]
  44d2c0:	add	w1, w1, #0x1
  44d2c4:	add	x0, sp, #0x80
  44d2c8:	str	w1, [x19, #308]
  44d2cc:	str	x0, [x19, #328]
  44d2d0:	mov	w1, w22
  44d2d4:	mov	x0, x19
  44d2d8:	mov	x2, x20
  44d2dc:	stp	x20, x3, [sp, #128]
  44d2e0:	bl	44d138 <nftw@plt+0x4a5b8>
  44d2e4:	ldr	w1, [x20, #4]
  44d2e8:	ldr	x0, [sp, #136]
  44d2ec:	str	x0, [x19, #328]
  44d2f0:	ldr	w0, [x19, #308]
  44d2f4:	sub	w1, w1, #0x1
  44d2f8:	str	w1, [x20, #4]
  44d2fc:	sub	w0, w0, #0x1
  44d300:	str	w0, [x19, #308]
  44d304:	ldr	x0, [x24, #16]
  44d308:	cbz	x0, 4546e0 <nftw@plt+0x51b60>
  44d30c:	ldr	x1, [x19, #256]
  44d310:	cmp	x1, #0xfd
  44d314:	b.ls	453b48 <nftw@plt+0x50fc8>  // b.plast
  44d318:	strb	wzr, [x19, x1]
  44d31c:	mov	x0, x19
  44d320:	ldp	x3, x2, [x19, #272]
  44d324:	blr	x3
  44d328:	ldr	x0, [x19, #320]
  44d32c:	mov	w1, #0x2c                  	// #44
  44d330:	mov	x2, #0x1                   	// #1
  44d334:	strb	w1, [x19]
  44d338:	add	x0, x0, x2
  44d33c:	str	x0, [x19, #320]
  44d340:	add	x21, x2, #0x1
  44d344:	str	x21, [x19, #256]
  44d348:	mov	w0, #0x20                  	// #32
  44d34c:	strb	w0, [x19, x2]
  44d350:	strb	w0, [x19, #264]
  44d354:	ldr	x20, [x24, #16]
  44d358:	cbz	x20, 451aa8 <nftw@plt+0x4ef28>
  44d35c:	ldr	w0, [x20, #4]
  44d360:	cmp	w0, #0x1
  44d364:	b.gt	451aa8 <nftw@plt+0x4ef28>
  44d368:	ldr	w1, [x19, #308]
  44d36c:	cmp	w1, #0x400
  44d370:	b.gt	451aa8 <nftw@plt+0x4ef28>
  44d374:	ldp	x23, x3, [x19, #320]
  44d378:	add	w0, w0, #0x1
  44d37c:	str	w0, [x20, #4]
  44d380:	add	w1, w1, #0x1
  44d384:	add	x0, sp, #0x80
  44d388:	str	w1, [x19, #308]
  44d38c:	str	x0, [x19, #328]
  44d390:	mov	w1, w22
  44d394:	mov	x0, x19
  44d398:	mov	x2, x20
  44d39c:	stp	x20, x3, [sp, #128]
  44d3a0:	bl	44d138 <nftw@plt+0x4a5b8>
  44d3a4:	ldr	w1, [x20, #4]
  44d3a8:	ldr	x0, [sp, #136]
  44d3ac:	sub	w1, w1, #0x1
  44d3b0:	str	x0, [x19, #328]
  44d3b4:	ldr	w0, [x19, #308]
  44d3b8:	str	w1, [x20, #4]
  44d3bc:	ldr	x1, [x19, #320]
  44d3c0:	sub	w0, w0, #0x1
  44d3c4:	str	w0, [x19, #308]
  44d3c8:	cmp	x1, x23
  44d3cc:	b.eq	455368 <nftw@plt+0x527e8>  // b.none
  44d3d0:	ldp	x21, x22, [sp, #32]
  44d3d4:	ldp	x23, x24, [sp, #48]
  44d3d8:	b	44d1a0 <nftw@plt+0x4a620>
  44d3dc:	ldr	x20, [x2, #8]
  44d3e0:	cbz	x20, 451488 <nftw@plt+0x4e908>
  44d3e4:	ldr	w0, [x20, #4]
  44d3e8:	cmp	w0, #0x1
  44d3ec:	b.gt	451488 <nftw@plt+0x4e908>
  44d3f0:	ldr	w1, [x19, #308]
  44d3f4:	cmp	w1, #0x400
  44d3f8:	b.gt	451488 <nftw@plt+0x4e908>
  44d3fc:	ldr	x3, [x19, #328]
  44d400:	add	w0, w0, #0x1
  44d404:	str	w0, [x20, #4]
  44d408:	add	w1, w1, #0x1
  44d40c:	add	x0, sp, #0x80
  44d410:	str	w1, [x19, #308]
  44d414:	str	x0, [x19, #328]
  44d418:	mov	w1, w22
  44d41c:	mov	x0, x19
  44d420:	mov	x2, x20
  44d424:	stp	x20, x3, [sp, #128]
  44d428:	bl	44d138 <nftw@plt+0x4a5b8>
  44d42c:	ldr	w1, [x20, #4]
  44d430:	ldr	x0, [sp, #136]
  44d434:	str	x0, [x19, #328]
  44d438:	ldr	w0, [x19, #308]
  44d43c:	sub	w1, w1, #0x1
  44d440:	str	w1, [x20, #4]
  44d444:	sub	w0, w0, #0x1
  44d448:	str	w0, [x19, #308]
  44d44c:	ldr	x1, [x19, #256]
  44d450:	tbz	w22, #2, 454344 <nftw@plt+0x517c4>
  44d454:	add	x0, x1, #0x1
  44d458:	cmp	x1, #0xff
  44d45c:	b.ne	44d484 <nftw@plt+0x4a904>  // b.any
  44d460:	ldp	x3, x2, [x19, #272]
  44d464:	strb	wzr, [x19, #255]
  44d468:	mov	x0, x19
  44d46c:	blr	x3
  44d470:	ldr	x2, [x19, #320]
  44d474:	mov	x0, #0x1                   	// #1
  44d478:	mov	x1, #0x0                   	// #0
  44d47c:	add	x2, x2, x0
  44d480:	str	x2, [x19, #320]
  44d484:	str	x0, [x19, #256]
  44d488:	mov	w2, #0x2e                  	// #46
  44d48c:	strb	w2, [x19, x1]
  44d490:	strb	w2, [x19, #264]
  44d494:	ldr	x23, [x24, #16]
  44d498:	ldr	w1, [x23]
  44d49c:	cmp	w1, #0x47
  44d4a0:	b.eq	454b98 <nftw@plt+0x52018>  // b.none
  44d4a4:	ldr	w0, [x23, #4]
  44d4a8:	cmp	w0, #0x1
  44d4ac:	b.gt	451474 <nftw@plt+0x4e8f4>
  44d4b0:	ldr	w1, [x19, #308]
  44d4b4:	cmp	w1, #0x400
  44d4b8:	b.gt	451474 <nftw@plt+0x4e8f4>
  44d4bc:	ldr	x3, [x19, #328]
  44d4c0:	add	w0, w0, #0x1
  44d4c4:	str	w0, [x23, #4]
  44d4c8:	add	w1, w1, #0x1
  44d4cc:	add	x0, sp, #0x80
  44d4d0:	str	w1, [x19, #308]
  44d4d4:	str	x0, [x19, #328]
  44d4d8:	mov	w1, w22
  44d4dc:	mov	x2, x23
  44d4e0:	mov	x0, x19
  44d4e4:	stp	x23, x3, [sp, #128]
  44d4e8:	bl	44d138 <nftw@plt+0x4a5b8>
  44d4ec:	ldr	w1, [x23, #4]
  44d4f0:	ldr	x0, [sp, #136]
  44d4f4:	sub	w1, w1, #0x1
  44d4f8:	ldp	x21, x22, [sp, #32]
  44d4fc:	str	x0, [x19, #328]
  44d500:	ldr	w0, [x19, #308]
  44d504:	str	w1, [x23, #4]
  44d508:	sub	w0, w0, #0x1
  44d50c:	ldp	x23, x24, [sp, #48]
  44d510:	str	w0, [x19, #308]
  44d514:	b	44d1a0 <nftw@plt+0x4a620>
  44d518:	ldr	w0, [x19, #312]
  44d51c:	ldr	x3, [x2, #8]
  44d520:	stp	x25, x26, [sp, #64]
  44d524:	mov	x25, x3
  44d528:	ldr	w1, [x3]
  44d52c:	cbnz	w0, 451bbc <nftw@plt+0x4f03c>
  44d530:	cmp	w1, #0x5
  44d534:	b.eq	454f7c <nftw@plt+0x523fc>  // b.none
  44d538:	ldr	x4, [x19, #288]
  44d53c:	mov	x0, x3
  44d540:	mov	w21, #0x0                   	// #0
  44d544:	cmp	w1, #0x23
  44d548:	ldr	x2, [x19, #296]
  44d54c:	b.eq	451ac4 <nftw@plt+0x4ef44>  // b.none
  44d550:	cmp	w20, w1
  44d554:	b.eq	451ac4 <nftw@plt+0x4ef44>  // b.none
  44d558:	cmp	w1, #0x24
  44d55c:	b.eq	4507d0 <nftw@plt+0x4dc50>  // b.none
  44d560:	add	x0, sp, #0x80
  44d564:	stp	x2, x24, [sp, #128]
  44d568:	str	wzr, [sp, #144]
  44d56c:	str	x4, [sp, #152]
  44d570:	str	x0, [x19, #296]
  44d574:	b	44d20c <nftw@plt+0x4a68c>
  44d578:	ldr	x20, [x24, #16]
  44d57c:	add	x0, sp, #0x80
  44d580:	ldp	x1, x2, [x19, #288]
  44d584:	stp	x2, x24, [sp, #128]
  44d588:	str	wzr, [sp, #144]
  44d58c:	str	x1, [sp, #152]
  44d590:	str	x0, [x19, #296]
  44d594:	cbz	x20, 451540 <nftw@plt+0x4e9c0>
  44d598:	ldr	w0, [x20, #4]
  44d59c:	cmp	w0, #0x1
  44d5a0:	b.gt	451540 <nftw@plt+0x4e9c0>
  44d5a4:	ldr	w1, [x19, #308]
  44d5a8:	cmp	w1, #0x400
  44d5ac:	b.gt	451540 <nftw@plt+0x4e9c0>
  44d5b0:	ldr	x3, [x19, #328]
  44d5b4:	add	w0, w0, #0x1
  44d5b8:	str	w0, [x20, #4]
  44d5bc:	add	w1, w1, #0x1
  44d5c0:	add	x0, sp, #0x70
  44d5c4:	str	w1, [x19, #308]
  44d5c8:	str	x0, [x19, #328]
  44d5cc:	mov	x2, x20
  44d5d0:	mov	w1, w22
  44d5d4:	mov	x0, x19
  44d5d8:	stp	x20, x3, [sp, #112]
  44d5dc:	bl	44d138 <nftw@plt+0x4a5b8>
  44d5e0:	ldr	w1, [x20, #4]
  44d5e4:	ldr	x0, [sp, #120]
  44d5e8:	str	x0, [x19, #328]
  44d5ec:	ldr	w2, [sp, #144]
  44d5f0:	sub	w1, w1, #0x1
  44d5f4:	ldr	w0, [x19, #308]
  44d5f8:	str	w1, [x20, #4]
  44d5fc:	sub	w0, w0, #0x1
  44d600:	str	w0, [x19, #308]
  44d604:	cbz	w2, 451548 <nftw@plt+0x4e9c8>
  44d608:	ldr	x0, [sp, #128]
  44d60c:	ldp	x21, x22, [sp, #32]
  44d610:	ldp	x23, x24, [sp, #48]
  44d614:	str	x0, [x19, #296]
  44d618:	b	44d1a0 <nftw@plt+0x4a620>
  44d61c:	ldr	x23, [x2, #8]
  44d620:	mov	w21, #0x0                   	// #0
  44d624:	ldr	w0, [x23]
  44d628:	cmp	w0, #0x27
  44d62c:	b.eq	453f8c <nftw@plt+0x5140c>  // b.none
  44d630:	ldr	x0, [x19, #256]
  44d634:	cmp	x0, #0xff
  44d638:	b.eq	454470 <nftw@plt+0x518f0>  // b.none
  44d63c:	add	x1, x0, #0x1
  44d640:	str	x1, [x19, #256]
  44d644:	mov	w2, #0x28                  	// #40
  44d648:	strb	w2, [x19, x0]
  44d64c:	strb	w2, [x19, #264]
  44d650:	ldr	w0, [x23, #4]
  44d654:	cmp	w0, #0x1
  44d658:	b.gt	451adc <nftw@plt+0x4ef5c>
  44d65c:	ldr	w2, [x19, #308]
  44d660:	cmp	w2, #0x400
  44d664:	b.gt	451adc <nftw@plt+0x4ef5c>
  44d668:	ldr	x3, [x19, #328]
  44d66c:	add	w0, w0, #0x1
  44d670:	str	w0, [x23, #4]
  44d674:	add	w2, w2, #0x1
  44d678:	add	x0, sp, #0x80
  44d67c:	str	w2, [x19, #308]
  44d680:	str	x0, [x19, #328]
  44d684:	mov	w1, w22
  44d688:	mov	x2, x23
  44d68c:	mov	x0, x19
  44d690:	stp	x23, x3, [sp, #128]
  44d694:	bl	44d138 <nftw@plt+0x4a5b8>
  44d698:	ldr	w2, [x23, #4]
  44d69c:	ldr	x0, [sp, #136]
  44d6a0:	str	x0, [x19, #328]
  44d6a4:	ldr	w0, [x19, #308]
  44d6a8:	sub	w2, w2, #0x1
  44d6ac:	ldr	x1, [x19, #256]
  44d6b0:	str	w2, [x23, #4]
  44d6b4:	sub	w0, w0, #0x1
  44d6b8:	str	w0, [x19, #308]
  44d6bc:	cmp	x1, #0xff
  44d6c0:	b.ne	453a84 <nftw@plt+0x50f04>  // b.any
  44d6c4:	ldp	x3, x2, [x19, #272]
  44d6c8:	strb	wzr, [x19, #255]
  44d6cc:	mov	x0, x19
  44d6d0:	blr	x3
  44d6d4:	ldr	x1, [x19, #320]
  44d6d8:	mov	w0, #0x29                  	// #41
  44d6dc:	strb	w0, [x19]
  44d6e0:	strb	w0, [x19, #264]
  44d6e4:	mov	x0, #0x1                   	// #1
  44d6e8:	add	x1, x1, x0
  44d6ec:	str	x0, [x19, #256]
  44d6f0:	str	x1, [x19, #320]
  44d6f4:	ldr	w1, [x24]
  44d6f8:	cmp	w1, #0x3e
  44d6fc:	b.eq	4543d0 <nftw@plt+0x51850>  // b.none
  44d700:	cmp	w21, #0x8
  44d704:	b.eq	453ad8 <nftw@plt+0x50f58>  // b.none
  44d708:	ldr	x20, [x24, #16]
  44d70c:	cbz	x20, 4516c0 <nftw@plt+0x4eb40>
  44d710:	ldr	w0, [x20, #4]
  44d714:	cmp	w0, #0x1
  44d718:	b.gt	4516c0 <nftw@plt+0x4eb40>
  44d71c:	ldr	w1, [x19, #308]
  44d720:	cmp	w1, #0x400
  44d724:	b.gt	4516c0 <nftw@plt+0x4eb40>
  44d728:	ldr	x3, [x19, #328]
  44d72c:	add	w0, w0, #0x1
  44d730:	str	w0, [x20, #4]
  44d734:	add	w1, w1, #0x1
  44d738:	add	x0, sp, #0x80
  44d73c:	str	w1, [x19, #308]
  44d740:	str	x0, [x19, #328]
  44d744:	mov	w1, w22
  44d748:	mov	x0, x19
  44d74c:	mov	x2, x20
  44d750:	stp	x20, x3, [sp, #128]
  44d754:	bl	44d138 <nftw@plt+0x4a5b8>
  44d758:	ldr	w1, [x20, #4]
  44d75c:	ldr	x0, [sp, #136]
  44d760:	str	x0, [x19, #328]
  44d764:	ldr	w0, [x19, #308]
  44d768:	sub	w1, w1, #0x1
  44d76c:	str	w1, [x20, #4]
  44d770:	sub	w0, w0, #0x1
  44d774:	str	w0, [x19, #308]
  44d778:	cmp	w21, #0x8
  44d77c:	b.eq	454664 <nftw@plt+0x51ae4>  // b.none
  44d780:	ldp	x21, x22, [sp, #32]
  44d784:	ldp	x23, x24, [sp, #48]
  44d788:	b	44d1a0 <nftw@plt+0x4a620>
  44d78c:	ldr	x0, [x19, #256]
  44d790:	cmp	x0, #0xff
  44d794:	b.eq	4532b8 <nftw@plt+0x50738>  // b.none
  44d798:	add	x1, x0, #0x1
  44d79c:	str	x1, [x19, #256]
  44d7a0:	mov	w2, #0x6f                  	// #111
  44d7a4:	strb	w2, [x19, x0]
  44d7a8:	strb	w2, [x19, #264]
  44d7ac:	cmp	x1, #0xff
  44d7b0:	b.ne	452c04 <nftw@plt+0x50084>  // b.any
  44d7b4:	ldp	x3, x2, [x19, #272]
  44d7b8:	strb	wzr, [x19, #255]
  44d7bc:	mov	x0, x19
  44d7c0:	blr	x3
  44d7c4:	ldr	x0, [x19, #320]
  44d7c8:	mov	w2, #0x6570                	// #25968
  44d7cc:	mov	w1, #0x72                  	// #114
  44d7d0:	mov	x3, #0x3                   	// #3
  44d7d4:	add	x0, x0, #0x1
  44d7d8:	strh	w2, [x19]
  44d7dc:	strb	w1, [x19, #2]
  44d7e0:	str	x0, [x19, #320]
  44d7e4:	add	x1, x3, #0x1
  44d7e8:	str	x1, [x19, #256]
  44d7ec:	mov	w0, #0x61                  	// #97
  44d7f0:	strb	w0, [x19, x3]
  44d7f4:	strb	w0, [x19, #264]
  44d7f8:	cmp	x1, #0xff
  44d7fc:	b.ne	452c54 <nftw@plt+0x500d4>  // b.any
  44d800:	ldp	x3, x2, [x19, #272]
  44d804:	strb	wzr, [x19, #255]
  44d808:	mov	x0, x19
  44d80c:	blr	x3
  44d810:	ldr	x0, [x19, #320]
  44d814:	mov	w2, #0x6f74                	// #28532
  44d818:	mov	x1, #0x2                   	// #2
  44d81c:	strh	w2, [x19]
  44d820:	add	x0, x0, #0x1
  44d824:	str	x0, [x19, #320]
  44d828:	add	x0, x1, #0x1
  44d82c:	mov	w2, #0x72                  	// #114
  44d830:	strb	w2, [x19, x1]
  44d834:	add	x3, x0, #0x1
  44d838:	str	x3, [x19, #256]
  44d83c:	mov	w1, #0x20                  	// #32
  44d840:	strb	w1, [x19, x0]
  44d844:	strb	w1, [x19, #264]
  44d848:	ldr	x0, [x19, #368]
  44d84c:	cbz	x0, 44d860 <nftw@plt+0x4ace0>
  44d850:	ldr	x2, [x19, #288]
  44d854:	add	x1, sp, #0x70
  44d858:	stp	x2, x0, [sp, #112]
  44d85c:	str	x1, [x19, #288]
  44d860:	ldr	x20, [x24, #8]
  44d864:	ldr	w1, [x20]
  44d868:	cmp	w1, #0x4
  44d86c:	b.eq	4540d0 <nftw@plt+0x51550>  // b.none
  44d870:	ldr	w1, [x20, #4]
  44d874:	cmp	w1, #0x1
  44d878:	b.gt	451ad0 <nftw@plt+0x4ef50>
  44d87c:	ldr	w2, [x19, #308]
  44d880:	cmp	w2, #0x400
  44d884:	b.gt	451ad0 <nftw@plt+0x4ef50>
  44d888:	ldr	x3, [x19, #328]
  44d88c:	add	w1, w1, #0x1
  44d890:	str	w1, [x20, #4]
  44d894:	add	w2, w2, #0x1
  44d898:	add	x0, sp, #0x80
  44d89c:	str	w2, [x19, #308]
  44d8a0:	str	x0, [x19, #328]
  44d8a4:	mov	w1, w22
  44d8a8:	mov	x2, x20
  44d8ac:	mov	x0, x19
  44d8b0:	stp	x20, x3, [sp, #128]
  44d8b4:	bl	44d138 <nftw@plt+0x4a5b8>
  44d8b8:	ldr	w2, [x20, #4]
  44d8bc:	ldr	x0, [sp, #136]
  44d8c0:	str	x0, [x19, #328]
  44d8c4:	ldr	w1, [x19, #308]
  44d8c8:	sub	w2, w2, #0x1
  44d8cc:	ldr	x0, [x19, #368]
  44d8d0:	str	w2, [x20, #4]
  44d8d4:	sub	w1, w1, #0x1
  44d8d8:	str	w1, [x19, #308]
  44d8dc:	cbz	x0, 454d48 <nftw@plt+0x521c8>
  44d8e0:	ldr	x0, [sp, #112]
  44d8e4:	ldp	x21, x22, [sp, #32]
  44d8e8:	ldp	x23, x24, [sp, #48]
  44d8ec:	str	x0, [x19, #288]
  44d8f0:	b	44d1a0 <nftw@plt+0x4a620>
  44d8f4:	ldr	x20, [x2, #8]
  44d8f8:	ldr	x0, [x19, #256]
  44d8fc:	cmp	x0, #0xff
  44d900:	cbnz	x20, 451d40 <nftw@plt+0x4f1c0>
  44d904:	b.eq	4551a8 <nftw@plt+0x52628>  // b.none
  44d908:	add	x1, x0, #0x1
  44d90c:	str	x1, [x19, #256]
  44d910:	mov	w2, #0x74                  	// #116
  44d914:	strb	w2, [x19, x0]
  44d918:	strb	w2, [x19, #264]
  44d91c:	cmp	x1, #0xff
  44d920:	b.ne	454788 <nftw@plt+0x51c08>  // b.any
  44d924:	ldp	x3, x2, [x19, #272]
  44d928:	strb	wzr, [x19, #255]
  44d92c:	mov	x0, x19
  44d930:	blr	x3
  44d934:	ldr	x0, [x19, #320]
  44d938:	mov	w2, #0x68                  	// #104
  44d93c:	mov	x1, #0x1                   	// #1
  44d940:	strb	w2, [x19]
  44d944:	add	x0, x0, x1
  44d948:	str	x0, [x19, #320]
  44d94c:	add	x0, x1, #0x1
  44d950:	mov	w2, #0x69                  	// #105
  44d954:	strb	w2, [x19, x1]
  44d958:	add	x1, x0, #0x1
  44d95c:	str	x1, [x19, #256]
  44d960:	mov	w1, #0x73                  	// #115
  44d964:	strb	w1, [x19, x0]
  44d968:	strb	w1, [x19, #264]
  44d96c:	ldp	x21, x22, [sp, #32]
  44d970:	ldp	x23, x24, [sp, #48]
  44d974:	b	44d1a0 <nftw@plt+0x4a620>
  44d978:	ldr	x20, [x2, #16]
  44d97c:	cbz	x20, 451494 <nftw@plt+0x4e914>
  44d980:	ldr	w0, [x20, #4]
  44d984:	cmp	w0, #0x1
  44d988:	b.gt	451494 <nftw@plt+0x4e914>
  44d98c:	ldr	w1, [x19, #308]
  44d990:	cmp	w1, #0x400
  44d994:	b.gt	451494 <nftw@plt+0x4e914>
  44d998:	ldr	x3, [x19, #328]
  44d99c:	add	w0, w0, #0x1
  44d9a0:	str	w0, [x20, #4]
  44d9a4:	add	w1, w1, #0x1
  44d9a8:	add	x0, sp, #0x80
  44d9ac:	str	w1, [x19, #308]
  44d9b0:	str	x0, [x19, #328]
  44d9b4:	mov	w1, w22
  44d9b8:	mov	x0, x19
  44d9bc:	mov	x2, x20
  44d9c0:	stp	x20, x3, [sp, #128]
  44d9c4:	bl	44d138 <nftw@plt+0x4a5b8>
  44d9c8:	ldr	w1, [x20, #4]
  44d9cc:	ldr	x0, [sp, #136]
  44d9d0:	sub	w1, w1, #0x1
  44d9d4:	ldp	x21, x22, [sp, #32]
  44d9d8:	ldp	x23, x24, [sp, #48]
  44d9dc:	str	x0, [x19, #328]
  44d9e0:	ldr	w0, [x19, #308]
  44d9e4:	str	w1, [x20, #4]
  44d9e8:	sub	w0, w0, #0x1
  44d9ec:	str	w0, [x19, #308]
  44d9f0:	b	44d1a0 <nftw@plt+0x4a620>
  44d9f4:	ldrsw	x21, [x2, #16]
  44d9f8:	ldr	x20, [x2, #8]
  44d9fc:	tbnz	w22, #2, 451c50 <nftw@plt+0x4f0d0>
  44da00:	cbz	x21, 455b84 <nftw@plt+0x53004>
  44da04:	add	x22, x20, x21
  44da08:	mov	x23, #0x1                   	// #1
  44da0c:	ldr	x1, [x19, #256]
  44da10:	b	44da6c <nftw@plt+0x4aeec>
  44da14:	ldp	x3, x2, [x19, #272]
  44da18:	strb	wzr, [x19, #255]
  44da1c:	mov	x0, x19
  44da20:	add	x20, x20, #0x1
  44da24:	blr	x3
  44da28:	strb	w21, [x19]
  44da2c:	ldr	x0, [x19, #320]
  44da30:	str	x23, [x19, #256]
  44da34:	strb	w21, [x19, #264]
  44da38:	cmp	x20, x22
  44da3c:	add	x0, x0, #0x1
  44da40:	str	x0, [x19, #320]
  44da44:	b.eq	4553e4 <nftw@plt+0x52864>  // b.none
  44da48:	ldrb	w21, [x20]
  44da4c:	mov	x0, #0x1                   	// #1
  44da50:	add	x1, x0, #0x1
  44da54:	str	x1, [x19, #256]
  44da58:	strb	w21, [x19, x0]
  44da5c:	add	x20, x20, #0x1
  44da60:	strb	w21, [x19, #264]
  44da64:	cmp	x22, x20
  44da68:	b.eq	454710 <nftw@plt+0x51b90>  // b.none
  44da6c:	ldrb	w21, [x20]
  44da70:	cmp	x1, #0xff
  44da74:	b.eq	44da14 <nftw@plt+0x4ae94>  // b.none
  44da78:	mov	x0, x1
  44da7c:	b	44da50 <nftw@plt+0x4aed0>
  44da80:	stp	x25, x26, [sp, #64]
  44da84:	ldr	x25, [x2, #8]
  44da88:	ldr	x23, [x19, #296]
  44da8c:	str	xzr, [x19, #296]
  44da90:	cbz	x25, 454ed8 <nftw@plt+0x52358>
  44da94:	ldr	w4, [x25]
  44da98:	ldr	x3, [x19, #288]
  44da9c:	stp	xzr, x25, [sp, #128]
  44daa0:	sub	w1, w4, #0x1c
  44daa4:	str	wzr, [sp, #144]
  44daa8:	cmp	w1, #0x34
  44daac:	str	x3, [sp, #152]
  44dab0:	b.hi	44dacc <nftw@plt+0x4af4c>  // b.pmore
  44dab4:	mov	x0, #0x1                   	// #1
  44dab8:	mov	x2, #0x1f                  	// #31
  44dabc:	movk	x2, #0x1a, lsl #48
  44dac0:	lsl	x1, x0, x1
  44dac4:	tst	x1, x2
  44dac8:	b.ne	451e88 <nftw@plt+0x4f308>  // b.any
  44dacc:	add	x21, sp, #0x80
  44dad0:	mov	w20, #0x1                   	// #1
  44dad4:	mov	x1, x21
  44dad8:	str	x1, [x19, #296]
  44dadc:	cmp	w4, #0x2
  44dae0:	b.eq	454d68 <nftw@plt+0x521e8>  // b.none
  44dae4:	cmp	w4, #0x4
  44dae8:	b.ne	44daf8 <nftw@plt+0x4af78>  // b.any
  44daec:	add	x0, sp, #0x60
  44daf0:	stp	x3, x25, [sp, #96]
  44daf4:	str	x0, [x19, #288]
  44daf8:	ldr	x24, [x24, #16]
  44dafc:	cbz	x24, 453af0 <nftw@plt+0x50f70>
  44db00:	ldr	w0, [x24, #4]
  44db04:	cmp	w0, #0x1
  44db08:	b.gt	453af0 <nftw@plt+0x50f70>
  44db0c:	ldr	w1, [x19, #308]
  44db10:	cmp	w1, #0x400
  44db14:	b.gt	453af0 <nftw@plt+0x50f70>
  44db18:	ldr	x3, [x19, #328]
  44db1c:	add	w0, w0, #0x1
  44db20:	str	w0, [x24, #4]
  44db24:	add	w1, w1, #0x1
  44db28:	add	x0, sp, #0x70
  44db2c:	str	w1, [x19, #308]
  44db30:	str	x0, [x19, #328]
  44db34:	mov	w1, w22
  44db38:	mov	x0, x19
  44db3c:	mov	x2, x24
  44db40:	stp	x24, x3, [sp, #112]
  44db44:	bl	44d138 <nftw@plt+0x4a5b8>
  44db48:	ldr	w1, [x24, #4]
  44db4c:	ldr	x0, [sp, #120]
  44db50:	str	x0, [x19, #328]
  44db54:	ldr	w0, [x19, #308]
  44db58:	sub	w1, w1, #0x1
  44db5c:	str	w1, [x24, #4]
  44db60:	sub	w0, w0, #0x1
  44db64:	str	w0, [x19, #308]
  44db68:	ldr	w0, [x25]
  44db6c:	cmp	w0, #0x4
  44db70:	b.ne	44db7c <nftw@plt+0x4affc>  // b.any
  44db74:	ldr	x0, [sp, #96]
  44db78:	str	x0, [x19, #288]
  44db7c:	sub	w20, w20, #0x1
  44db80:	mov	w24, #0x20                  	// #32
  44db84:	add	x20, x21, x20, lsl #5
  44db88:	ldr	w0, [x20, #16]
  44db8c:	cbnz	w0, 44dbe4 <nftw@plt+0x4b064>
  44db90:	ldr	x0, [x19, #256]
  44db94:	add	x1, x0, #0x1
  44db98:	cmp	x0, #0xff
  44db9c:	b.ne	44dbc8 <nftw@plt+0x4b048>  // b.any
  44dba0:	ldp	x3, x2, [x19, #272]
  44dba4:	strb	wzr, [x19, #255]
  44dba8:	mov	x1, x0
  44dbac:	mov	x0, x19
  44dbb0:	blr	x3
  44dbb4:	ldr	x2, [x19, #320]
  44dbb8:	mov	x1, #0x1                   	// #1
  44dbbc:	mov	x0, #0x0                   	// #0
  44dbc0:	add	x2, x2, x1
  44dbc4:	str	x2, [x19, #320]
  44dbc8:	str	x1, [x19, #256]
  44dbcc:	mov	w1, w22
  44dbd0:	ldr	x2, [x20, #8]
  44dbd4:	strb	w24, [x19, x0]
  44dbd8:	strb	w24, [x19, #264]
  44dbdc:	mov	x0, x19
  44dbe0:	bl	456850 <nftw@plt+0x53cd0>
  44dbe4:	cmp	x21, x20
  44dbe8:	sub	x20, x20, #0x20
  44dbec:	b.ne	44db88 <nftw@plt+0x4b008>  // b.any
  44dbf0:	ldp	x21, x22, [sp, #32]
  44dbf4:	ldp	x25, x26, [sp, #64]
  44dbf8:	str	x23, [x19, #296]
  44dbfc:	ldp	x23, x24, [sp, #48]
  44dc00:	b	44d1a0 <nftw@plt+0x4a620>
  44dc04:	and	w20, w22, #0xffffff9f
  44dc08:	ldr	x3, [x19, #296]
  44dc0c:	tbnz	w22, #5, 45452c <nftw@plt+0x519ac>
  44dc10:	ldr	x2, [x2, #8]
  44dc14:	cbz	x2, 44dc1c <nftw@plt+0x4b09c>
  44dc18:	tbz	w22, #6, 454efc <nftw@plt+0x5237c>
  44dc1c:	add	x2, x24, #0x10
  44dc20:	mov	w1, w20
  44dc24:	mov	x0, x19
  44dc28:	bl	459040 <nftw@plt+0x564c0>
  44dc2c:	ldp	x21, x22, [sp, #32]
  44dc30:	ldp	x23, x24, [sp, #48]
  44dc34:	b	44d1a0 <nftw@plt+0x4a620>
  44dc38:	ldp	x1, x23, [x19, #288]
  44dc3c:	add	x21, sp, #0x80
  44dc40:	stp	x23, x2, [sp, #128]
  44dc44:	mov	w20, #0x1                   	// #1
  44dc48:	mov	x5, x21
  44dc4c:	str	wzr, [sp, #144]
  44dc50:	mov	w6, w20
  44dc54:	str	x1, [sp, #152]
  44dc58:	str	x21, [x19, #296]
  44dc5c:	mov	x0, x23
  44dc60:	cbnz	x23, 44dcac <nftw@plt+0x4b12c>
  44dc64:	b	44dcc0 <nftw@plt+0x4b140>
  44dc68:	ldr	w1, [x0, #16]
  44dc6c:	cbnz	w1, 44dca4 <nftw@plt+0x4b124>
  44dc70:	cmp	w20, #0x3
  44dc74:	b.hi	454d54 <nftw@plt+0x521d4>  // b.pmore
  44dc78:	ubfiz	x1, x20, #5, #32
  44dc7c:	add	w20, w20, #0x1
  44dc80:	add	x4, x21, x1
  44dc84:	ldp	x2, x3, [x0]
  44dc88:	stp	x2, x3, [x4]
  44dc8c:	ldp	x2, x3, [x0, #16]
  44dc90:	stp	x2, x3, [x4, #16]
  44dc94:	str	x5, [x21, x1]
  44dc98:	mov	x5, x4
  44dc9c:	str	x4, [x19, #296]
  44dca0:	str	w6, [x0, #16]
  44dca4:	ldr	x0, [x0]
  44dca8:	cbz	x0, 44dcc0 <nftw@plt+0x4b140>
  44dcac:	ldr	x1, [x0, #8]
  44dcb0:	ldr	w1, [x1]
  44dcb4:	sub	w1, w1, #0x19
  44dcb8:	cmp	w1, #0x2
  44dcbc:	b.ls	44dc68 <nftw@plt+0x4b0e8>  // b.plast
  44dcc0:	stp	x25, x26, [sp, #64]
  44dcc4:	ldr	x25, [x24, #16]
  44dcc8:	cbz	x25, 451a68 <nftw@plt+0x4eee8>
  44dccc:	ldr	w0, [x25, #4]
  44dcd0:	cmp	w0, #0x1
  44dcd4:	b.gt	451a68 <nftw@plt+0x4eee8>
  44dcd8:	ldr	w1, [x19, #308]
  44dcdc:	cmp	w1, #0x400
  44dce0:	b.gt	451a68 <nftw@plt+0x4eee8>
  44dce4:	ldr	x3, [x19, #328]
  44dce8:	add	w0, w0, #0x1
  44dcec:	str	w0, [x25, #4]
  44dcf0:	add	w1, w1, #0x1
  44dcf4:	add	x0, sp, #0x70
  44dcf8:	str	w1, [x19, #308]
  44dcfc:	str	x0, [x19, #328]
  44dd00:	mov	w1, w22
  44dd04:	mov	x0, x19
  44dd08:	mov	x2, x25
  44dd0c:	stp	x25, x3, [sp, #112]
  44dd10:	bl	44d138 <nftw@plt+0x4a5b8>
  44dd14:	ldr	w1, [x25, #4]
  44dd18:	ldr	x0, [sp, #120]
  44dd1c:	str	x0, [x19, #328]
  44dd20:	ldr	w0, [x19, #308]
  44dd24:	sub	w1, w1, #0x1
  44dd28:	str	w1, [x25, #4]
  44dd2c:	sub	w0, w0, #0x1
  44dd30:	str	w0, [x19, #308]
  44dd34:	ldr	w0, [sp, #144]
  44dd38:	str	x23, [x19, #296]
  44dd3c:	cbnz	w0, 45471c <nftw@plt+0x51b9c>
  44dd40:	ubfiz	x0, x20, #5, #32
  44dd44:	cmp	w20, #0x1
  44dd48:	add	x21, x21, x0
  44dd4c:	b.eq	44dd70 <nftw@plt+0x4b1f0>  // b.none
  44dd50:	ldur	x2, [x21, #-24]
  44dd54:	sub	w20, w20, #0x1
  44dd58:	mov	w1, w22
  44dd5c:	mov	x0, x19
  44dd60:	sub	x21, x21, #0x20
  44dd64:	bl	456850 <nftw@plt+0x53cd0>
  44dd68:	cmp	w20, #0x1
  44dd6c:	b.ne	44dd50 <nftw@plt+0x4b1d0>  // b.any
  44dd70:	ldr	x3, [x19, #296]
  44dd74:	add	x2, x24, #0x8
  44dd78:	mov	w1, w22
  44dd7c:	mov	x0, x19
  44dd80:	bl	458d10 <nftw@plt+0x56190>
  44dd84:	ldp	x21, x22, [sp, #32]
  44dd88:	ldp	x23, x24, [sp, #48]
  44dd8c:	ldp	x25, x26, [sp, #64]
  44dd90:	b	44d1a0 <nftw@plt+0x4a620>
  44dd94:	ldr	x1, [x2, #8]
  44dd98:	mov	x0, x19
  44dd9c:	stp	x25, x26, [sp, #64]
  44dda0:	mov	w26, #0x0                   	// #0
  44dda4:	bl	44c670 <nftw@plt+0x49af0>
  44dda8:	cbz	x0, 455630 <nftw@plt+0x52ab0>
  44ddac:	nop
  44ddb0:	ldr	w1, [x0]
  44ddb4:	cmp	w1, #0x2f
  44ddb8:	b.ne	451a98 <nftw@plt+0x4ef18>  // b.any
  44ddbc:	ldr	x1, [x0, #8]
  44ddc0:	cbz	x1, 451a98 <nftw@plt+0x4ef18>
  44ddc4:	ldr	x0, [x0, #16]
  44ddc8:	add	w26, w26, #0x1
  44ddcc:	cbnz	x0, 44ddb0 <nftw@plt+0x4b230>
  44ddd0:	ldr	x20, [x24, #8]
  44ddd4:	str	x27, [sp, #80]
  44ddd8:	sub	w27, w26, #0x1
  44dddc:	cmp	w27, #0x0
  44dde0:	b.le	451298 <nftw@plt+0x4e718>
  44dde4:	add	x25, sp, #0x80
  44dde8:	mov	w23, #0x1                   	// #1
  44ddec:	mov	w24, #0x2c                  	// #44
  44ddf0:	b	44de90 <nftw@plt+0x4b310>
  44ddf4:	ldr	w1, [x19, #308]
  44ddf8:	cmp	w1, #0x400
  44ddfc:	b.gt	44dea4 <nftw@plt+0x4b324>
  44de00:	ldr	x3, [x19, #328]
  44de04:	add	w0, w0, #0x1
  44de08:	str	w0, [x20, #4]
  44de0c:	add	w1, w1, #0x1
  44de10:	str	w1, [x19, #308]
  44de14:	mov	x0, x19
  44de18:	str	x25, [x19, #328]
  44de1c:	mov	w1, w22
  44de20:	mov	x2, x20
  44de24:	stp	x20, x3, [sp, #128]
  44de28:	bl	44d138 <nftw@plt+0x4a5b8>
  44de2c:	ldr	w1, [x20, #4]
  44de30:	ldr	x0, [sp, #136]
  44de34:	str	x0, [x19, #328]
  44de38:	ldr	w0, [x19, #308]
  44de3c:	sub	w1, w1, #0x1
  44de40:	str	w1, [x20, #4]
  44de44:	sub	w0, w0, #0x1
  44de48:	str	w0, [x19, #308]
  44de4c:	ldr	x0, [x19, #256]
  44de50:	cmp	x0, #0xff
  44de54:	b.eq	450898 <nftw@plt+0x4dd18>  // b.none
  44de58:	add	x1, x0, #0x1
  44de5c:	str	x1, [x19, #256]
  44de60:	strb	w24, [x19, x0]
  44de64:	cmp	x1, #0xff
  44de68:	strb	w24, [x19, #264]
  44de6c:	b.eq	450870 <nftw@plt+0x4dcf0>  // b.none
  44de70:	add	x0, x0, #0x2
  44de74:	str	x0, [x19, #256]
  44de78:	mov	w0, #0x20                  	// #32
  44de7c:	strb	w0, [x19, x1]
  44de80:	add	w21, w21, #0x1
  44de84:	strb	w0, [x19, #264]
  44de88:	cmp	w21, w27
  44de8c:	b.ge	451338 <nftw@plt+0x4e7b8>  // b.tcont
  44de90:	str	w21, [x19, #316]
  44de94:	cbz	x20, 44dea4 <nftw@plt+0x4b324>
  44de98:	ldr	w0, [x20, #4]
  44de9c:	cmp	w0, #0x1
  44dea0:	b.le	44ddf4 <nftw@plt+0x4b274>
  44dea4:	str	w23, [x19, #304]
  44dea8:	b	44de4c <nftw@plt+0x4b2cc>
  44deac:	ldr	x20, [x2, #8]
  44deb0:	cbz	x20, 451574 <nftw@plt+0x4e9f4>
  44deb4:	ldr	w0, [x20, #4]
  44deb8:	cmp	w0, #0x1
  44debc:	b.gt	451574 <nftw@plt+0x4e9f4>
  44dec0:	ldr	w1, [x19, #308]
  44dec4:	cmp	w1, #0x400
  44dec8:	b.gt	451574 <nftw@plt+0x4e9f4>
  44decc:	ldr	x3, [x19, #328]
  44ded0:	add	w0, w0, #0x1
  44ded4:	str	w0, [x20, #4]
  44ded8:	add	w1, w1, #0x1
  44dedc:	add	x0, sp, #0x80
  44dee0:	str	w1, [x19, #308]
  44dee4:	str	x0, [x19, #328]
  44dee8:	mov	w1, w22
  44deec:	mov	x0, x19
  44def0:	mov	x2, x20
  44def4:	stp	x20, x3, [sp, #128]
  44def8:	bl	44d138 <nftw@plt+0x4a5b8>
  44defc:	ldr	w1, [x20, #4]
  44df00:	ldr	x0, [sp, #136]
  44df04:	str	x0, [x19, #328]
  44df08:	ldr	w0, [x19, #308]
  44df0c:	sub	w1, w1, #0x1
  44df10:	str	w1, [x20, #4]
  44df14:	sub	w0, w0, #0x1
  44df18:	str	w0, [x19, #308]
  44df1c:	ldr	x0, [x19, #256]
  44df20:	cmp	x0, #0xff
  44df24:	b.eq	453ee8 <nftw@plt+0x51368>  // b.none
  44df28:	add	x1, x0, #0x1
  44df2c:	str	x1, [x19, #256]
  44df30:	mov	w2, #0x5b                  	// #91
  44df34:	strb	w2, [x19, x0]
  44df38:	strb	w2, [x19, #264]
  44df3c:	cmp	x1, #0xff
  44df40:	b.ne	4525ac <nftw@plt+0x4fa2c>  // b.any
  44df44:	ldp	x3, x2, [x19, #272]
  44df48:	strb	wzr, [x19, #255]
  44df4c:	mov	x0, x19
  44df50:	blr	x3
  44df54:	ldr	x0, [x19, #320]
  44df58:	mov	w1, #0x6261                	// #25185
  44df5c:	mov	x2, #0x2                   	// #2
  44df60:	strh	w1, [x19]
  44df64:	add	x0, x0, #0x1
  44df68:	str	x0, [x19, #320]
  44df6c:	add	x1, x2, #0x1
  44df70:	mov	w0, #0x69                  	// #105
  44df74:	strb	w0, [x19, x2]
  44df78:	add	x0, x1, #0x1
  44df7c:	str	x0, [x19, #256]
  44df80:	mov	w2, #0x3a                  	// #58
  44df84:	strb	w2, [x19, x1]
  44df88:	strb	w2, [x19, #264]
  44df8c:	ldr	x20, [x24, #16]
  44df90:	cbz	x20, 45136c <nftw@plt+0x4e7ec>
  44df94:	ldr	w1, [x20, #4]
  44df98:	cmp	w1, #0x1
  44df9c:	b.gt	45136c <nftw@plt+0x4e7ec>
  44dfa0:	ldr	w2, [x19, #308]
  44dfa4:	cmp	w2, #0x400
  44dfa8:	b.gt	45136c <nftw@plt+0x4e7ec>
  44dfac:	ldr	x3, [x19, #328]
  44dfb0:	add	w1, w1, #0x1
  44dfb4:	str	w1, [x20, #4]
  44dfb8:	add	w2, w2, #0x1
  44dfbc:	add	x0, sp, #0x80
  44dfc0:	str	w2, [x19, #308]
  44dfc4:	str	x0, [x19, #328]
  44dfc8:	mov	w1, w22
  44dfcc:	mov	x2, x20
  44dfd0:	mov	x0, x19
  44dfd4:	stp	x20, x3, [sp, #128]
  44dfd8:	bl	44d138 <nftw@plt+0x4a5b8>
  44dfdc:	ldr	w2, [x20, #4]
  44dfe0:	ldr	x0, [sp, #136]
  44dfe4:	str	x0, [x19, #328]
  44dfe8:	ldr	w1, [x19, #308]
  44dfec:	sub	w2, w2, #0x1
  44dff0:	ldr	x0, [x19, #256]
  44dff4:	str	w2, [x20, #4]
  44dff8:	sub	w1, w1, #0x1
  44dffc:	str	w1, [x19, #308]
  44e000:	add	x1, x0, #0x1
  44e004:	cmp	x0, #0xff
  44e008:	b.ne	44e034 <nftw@plt+0x4b4b4>  // b.any
  44e00c:	ldp	x3, x2, [x19, #272]
  44e010:	strb	wzr, [x19, #255]
  44e014:	mov	x1, x0
  44e018:	mov	x0, x19
  44e01c:	blr	x3
  44e020:	ldr	x2, [x19, #320]
  44e024:	mov	x1, #0x1                   	// #1
  44e028:	mov	x0, #0x0                   	// #0
  44e02c:	add	x2, x2, x1
  44e030:	str	x2, [x19, #320]
  44e034:	str	x1, [x19, #256]
  44e038:	mov	w1, #0x5d                  	// #93
  44e03c:	strb	w1, [x19, x0]
  44e040:	strb	w1, [x19, #264]
  44e044:	ldp	x21, x22, [sp, #32]
  44e048:	ldp	x23, x24, [sp, #48]
  44e04c:	b	44d1a0 <nftw@plt+0x4a620>
  44e050:	adrp	x20, 480000 <_obstack_memory_used@@Base+0x1ebb8>
  44e054:	add	x20, x20, #0xee0
  44e058:	mov	x23, #0x1                   	// #1
  44e05c:	stp	x25, x26, [sp, #64]
  44e060:	add	x25, x20, #0x1c
  44e064:	ldr	x1, [x19, #256]
  44e068:	b	44e0c4 <nftw@plt+0x4b544>
  44e06c:	ldp	x3, x2, [x19, #272]
  44e070:	strb	wzr, [x19, #255]
  44e074:	mov	x0, x19
  44e078:	add	x20, x20, #0x1
  44e07c:	blr	x3
  44e080:	strb	w21, [x19]
  44e084:	ldr	x0, [x19, #320]
  44e088:	str	x23, [x19, #256]
  44e08c:	strb	w21, [x19, #264]
  44e090:	cmp	x20, x25
  44e094:	add	x0, x0, #0x1
  44e098:	str	x0, [x19, #320]
  44e09c:	b.eq	450eb0 <nftw@plt+0x4e330>  // b.none
  44e0a0:	ldrb	w21, [x20]
  44e0a4:	mov	x0, #0x1                   	// #1
  44e0a8:	add	x1, x0, #0x1
  44e0ac:	str	x1, [x19, #256]
  44e0b0:	strb	w21, [x19, x0]
  44e0b4:	add	x20, x20, #0x1
  44e0b8:	strb	w21, [x19, #264]
  44e0bc:	cmp	x25, x20
  44e0c0:	b.eq	450eb0 <nftw@plt+0x4e330>  // b.none
  44e0c4:	ldrb	w21, [x20]
  44e0c8:	cmp	x1, #0xff
  44e0cc:	b.eq	44e06c <nftw@plt+0x4b4ec>  // b.none
  44e0d0:	mov	x0, x1
  44e0d4:	b	44e0a8 <nftw@plt+0x4b528>
  44e0d8:	ldr	x0, [x19, #256]
  44e0dc:	cmp	x0, #0xff
  44e0e0:	b.eq	4536b8 <nftw@plt+0x50b38>  // b.none
  44e0e4:	add	x1, x0, #0x1
  44e0e8:	str	x1, [x19, #256]
  44e0ec:	mov	w2, #0x7b                  	// #123
  44e0f0:	strb	w2, [x19, x0]
  44e0f4:	strb	w2, [x19, #264]
  44e0f8:	cmp	x1, #0xff
  44e0fc:	b.ne	451f14 <nftw@plt+0x4f394>  // b.any
  44e100:	ldp	x3, x2, [x19, #272]
  44e104:	strb	wzr, [x19, #255]
  44e108:	mov	x0, x19
  44e10c:	blr	x3
  44e110:	ldr	x0, [x19, #320]
  44e114:	mov	w3, #0x616c                	// #24940
  44e118:	mov	w2, #0x6d                  	// #109
  44e11c:	mov	x1, #0x3                   	// #3
  44e120:	add	x0, x0, #0x1
  44e124:	strh	w3, [x19]
  44e128:	strb	w2, [x19, #2]
  44e12c:	str	x0, [x19, #320]
  44e130:	add	x0, x1, #0x1
  44e134:	str	x0, [x19, #256]
  44e138:	mov	w2, #0x62                  	// #98
  44e13c:	strb	w2, [x19, x1]
  44e140:	strb	w2, [x19, #264]
  44e144:	cmp	x0, #0xff
  44e148:	b.ne	451f64 <nftw@plt+0x4f3e4>  // b.any
  44e14c:	ldp	x3, x2, [x19, #272]
  44e150:	strb	wzr, [x19, #255]
  44e154:	mov	x1, x0
  44e158:	mov	x0, x19
  44e15c:	blr	x3
  44e160:	ldr	x0, [x19, #320]
  44e164:	mov	w1, #0x64                  	// #100
  44e168:	mov	x2, #0x1                   	// #1
  44e16c:	strb	w1, [x19]
  44e170:	add	x0, x0, x2
  44e174:	str	x0, [x19, #320]
  44e178:	add	x1, x2, #0x1
  44e17c:	mov	w0, #0x61                  	// #97
  44e180:	strb	w0, [x19, x2]
  44e184:	add	x0, x1, #0x1
  44e188:	str	x0, [x19, #256]
  44e18c:	mov	w2, #0x28                  	// #40
  44e190:	strb	w2, [x19, x1]
  44e194:	strb	w2, [x19, #264]
  44e198:	ldr	w1, [x19, #312]
  44e19c:	ldr	x20, [x24, #8]
  44e1a0:	add	w2, w1, #0x1
  44e1a4:	str	w2, [x19, #312]
  44e1a8:	cbz	x20, 451378 <nftw@plt+0x4e7f8>
  44e1ac:	ldr	w2, [x20, #4]
  44e1b0:	cmp	w2, #0x1
  44e1b4:	b.gt	451378 <nftw@plt+0x4e7f8>
  44e1b8:	ldr	w3, [x19, #308]
  44e1bc:	cmp	w3, #0x400
  44e1c0:	b.gt	451378 <nftw@plt+0x4e7f8>
  44e1c4:	add	w2, w2, #0x1
  44e1c8:	add	w3, w3, #0x1
  44e1cc:	str	w2, [x20, #4]
  44e1d0:	add	x21, sp, #0x80
  44e1d4:	str	w3, [x19, #308]
  44e1d8:	mov	w1, w22
  44e1dc:	ldr	x3, [x19, #328]
  44e1e0:	str	x21, [x19, #328]
  44e1e4:	mov	x0, x19
  44e1e8:	mov	x2, x20
  44e1ec:	stp	x20, x3, [sp, #128]
  44e1f0:	bl	44d138 <nftw@plt+0x4a5b8>
  44e1f4:	ldr	w3, [x20, #4]
  44e1f8:	ldr	w1, [x19, #312]
  44e1fc:	ldr	x0, [sp, #136]
  44e200:	str	x0, [x19, #328]
  44e204:	ldr	w2, [x19, #308]
  44e208:	sub	w3, w3, #0x1
  44e20c:	sub	w1, w1, #0x1
  44e210:	ldr	x0, [x19, #256]
  44e214:	str	w3, [x20, #4]
  44e218:	sub	w2, w2, #0x1
  44e21c:	str	w2, [x19, #308]
  44e220:	str	w1, [x19, #312]
  44e224:	cmp	x0, #0xff
  44e228:	b.eq	451764 <nftw@plt+0x4ebe4>  // b.none
  44e22c:	add	x1, x0, #0x1
  44e230:	str	x1, [x19, #256]
  44e234:	mov	w2, #0x29                  	// #41
  44e238:	strb	w2, [x19, x0]
  44e23c:	strb	w2, [x19, #264]
  44e240:	cmp	x1, #0xff
  44e244:	b.ne	451790 <nftw@plt+0x4ec10>  // b.any
  44e248:	ldp	x3, x2, [x19, #272]
  44e24c:	strb	wzr, [x19, #255]
  44e250:	mov	x0, x19
  44e254:	blr	x3
  44e258:	ldr	x2, [x19, #320]
  44e25c:	mov	x0, #0x1                   	// #1
  44e260:	mov	x1, #0x0                   	// #0
  44e264:	add	x2, x2, x0
  44e268:	str	x2, [x19, #320]
  44e26c:	str	x0, [x19, #256]
  44e270:	mov	w0, #0x23                  	// #35
  44e274:	strb	w0, [x19, x1]
  44e278:	adrp	x1, 473000 <_obstack_memory_used@@Base+0x11bb8>
  44e27c:	strb	w0, [x19, #264]
  44e280:	add	x1, x1, #0x1f8
  44e284:	mov	x0, x21
  44e288:	ldr	w2, [x24, #16]
  44e28c:	add	w2, w2, #0x1
  44e290:	bl	4025b0 <sprintf@plt>
  44e294:	mov	x0, x21
  44e298:	bl	4024f0 <strlen@plt>
  44e29c:	cbz	x0, 4516cc <nftw@plt+0x4eb4c>
  44e2a0:	add	x22, x21, x0
  44e2a4:	mov	x23, #0x1                   	// #1
  44e2a8:	ldr	x1, [x19, #256]
  44e2ac:	b	44e308 <nftw@plt+0x4b788>
  44e2b0:	ldp	x3, x2, [x19, #272]
  44e2b4:	strb	wzr, [x19, #255]
  44e2b8:	mov	x0, x19
  44e2bc:	add	x21, x21, #0x1
  44e2c0:	blr	x3
  44e2c4:	strb	w20, [x19]
  44e2c8:	ldr	x0, [x19, #320]
  44e2cc:	str	x23, [x19, #256]
  44e2d0:	strb	w20, [x19, #264]
  44e2d4:	cmp	x21, x22
  44e2d8:	add	x0, x0, #0x1
  44e2dc:	str	x0, [x19, #320]
  44e2e0:	b.eq	451798 <nftw@plt+0x4ec18>  // b.none
  44e2e4:	ldrb	w20, [x21]
  44e2e8:	mov	x0, #0x1                   	// #1
  44e2ec:	add	x1, x0, #0x1
  44e2f0:	str	x1, [x19, #256]
  44e2f4:	strb	w20, [x19, x0]
  44e2f8:	add	x21, x21, #0x1
  44e2fc:	strb	w20, [x19, #264]
  44e300:	cmp	x22, x21
  44e304:	b.eq	4516d0 <nftw@plt+0x4eb50>  // b.none
  44e308:	ldrb	w20, [x21]
  44e30c:	cmp	x1, #0xff
  44e310:	b.eq	44e2b0 <nftw@plt+0x4b730>  // b.none
  44e314:	mov	x0, x1
  44e318:	b	44e2ec <nftw@plt+0x4b76c>
  44e31c:	ldr	x0, [x19, #256]
  44e320:	cmp	x0, #0xff
  44e324:	b.eq	45277c <nftw@plt+0x4fbfc>  // b.none
  44e328:	add	x1, x0, #0x1
  44e32c:	str	x1, [x19, #256]
  44e330:	mov	w2, #0x7b                  	// #123
  44e334:	strb	w2, [x19, x0]
  44e338:	strb	w2, [x19, #264]
  44e33c:	cmp	x1, #0xff
  44e340:	b.ne	4517b0 <nftw@plt+0x4ec30>  // b.any
  44e344:	ldp	x3, x2, [x19, #272]
  44e348:	strb	wzr, [x19, #255]
  44e34c:	mov	x0, x19
  44e350:	blr	x3
  44e354:	ldr	x0, [x19, #320]
  44e358:	mov	w3, #0x6e75                	// #28277
  44e35c:	mov	w2, #0x6e                  	// #110
  44e360:	mov	x1, #0x3                   	// #3
  44e364:	add	x0, x0, #0x1
  44e368:	strh	w3, [x19]
  44e36c:	strb	w2, [x19, #2]
  44e370:	str	x0, [x19, #320]
  44e374:	add	x0, x1, #0x1
  44e378:	str	x0, [x19, #256]
  44e37c:	mov	w2, #0x61                  	// #97
  44e380:	strb	w2, [x19, x1]
  44e384:	strb	w2, [x19, #264]
  44e388:	cmp	x0, #0xff
  44e38c:	b.ne	451800 <nftw@plt+0x4ec80>  // b.any
  44e390:	ldp	x3, x2, [x19, #272]
  44e394:	strb	wzr, [x19, #255]
  44e398:	mov	x1, x0
  44e39c:	mov	x0, x19
  44e3a0:	blr	x3
  44e3a4:	ldr	x0, [x19, #320]
  44e3a8:	mov	w3, #0x656d                	// #25965
  44e3ac:	mov	w2, #0x64                  	// #100
  44e3b0:	mov	x1, #0x3                   	// #3
  44e3b4:	add	x0, x0, #0x1
  44e3b8:	strh	w3, [x19]
  44e3bc:	strb	w2, [x19, #2]
  44e3c0:	str	x0, [x19, #320]
  44e3c4:	add	x0, x1, #0x1
  44e3c8:	str	x0, [x19, #256]
  44e3cc:	mov	w2, #0x20                  	// #32
  44e3d0:	strb	w2, [x19, x1]
  44e3d4:	strb	w2, [x19, #264]
  44e3d8:	cmp	x0, #0xff
  44e3dc:	b.ne	45184c <nftw@plt+0x4eccc>  // b.any
  44e3e0:	ldp	x3, x2, [x19, #272]
  44e3e4:	strb	wzr, [x19, #255]
  44e3e8:	mov	x1, x0
  44e3ec:	mov	x0, x19
  44e3f0:	blr	x3
  44e3f4:	ldr	x0, [x19, #320]
  44e3f8:	mov	w3, #0x7974                	// #31092
  44e3fc:	mov	w2, #0x70                  	// #112
  44e400:	mov	x1, #0x3                   	// #3
  44e404:	add	x0, x0, #0x1
  44e408:	strh	w3, [x19]
  44e40c:	strb	w2, [x19, #2]
  44e410:	str	x0, [x19, #320]
  44e414:	add	x0, x1, #0x1
  44e418:	str	x0, [x19, #256]
  44e41c:	mov	w2, #0x65                  	// #101
  44e420:	strb	w2, [x19, x1]
  44e424:	strb	w2, [x19, #264]
  44e428:	cmp	x0, #0xff
  44e42c:	b.ne	45189c <nftw@plt+0x4ed1c>  // b.any
  44e430:	ldp	x3, x2, [x19, #272]
  44e434:	strb	wzr, [x19, #255]
  44e438:	mov	x1, x0
  44e43c:	mov	x0, x19
  44e440:	blr	x3
  44e444:	ldr	x2, [x19, #320]
  44e448:	mov	x1, #0x1                   	// #1
  44e44c:	mov	x0, #0x0                   	// #0
  44e450:	add	x2, x2, x1
  44e454:	str	x2, [x19, #320]
  44e458:	str	x1, [x19, #256]
  44e45c:	mov	w2, #0x23                  	// #35
  44e460:	strb	w2, [x19, x0]
  44e464:	adrp	x1, 473000 <_obstack_memory_used@@Base+0x11bb8>
  44e468:	strb	w2, [x19, #264]
  44e46c:	add	x1, x1, #0x1f8
  44e470:	add	x0, sp, #0x80
  44e474:	ldr	x2, [x24, #8]
  44e478:	add	w2, w2, #0x1
  44e47c:	bl	4025b0 <sprintf@plt>
  44e480:	add	x0, sp, #0x80
  44e484:	bl	4024f0 <strlen@plt>
  44e488:	cbz	x0, 451718 <nftw@plt+0x4eb98>
  44e48c:	add	x20, sp, #0x80
  44e490:	mov	x23, #0x1                   	// #1
  44e494:	add	x22, x20, x0
  44e498:	ldr	x1, [x19, #256]
  44e49c:	b	44e4f8 <nftw@plt+0x4b978>
  44e4a0:	ldp	x3, x2, [x19, #272]
  44e4a4:	strb	wzr, [x19, #255]
  44e4a8:	mov	x0, x19
  44e4ac:	add	x20, x20, #0x1
  44e4b0:	blr	x3
  44e4b4:	strb	w21, [x19]
  44e4b8:	ldr	x0, [x19, #320]
  44e4bc:	str	x23, [x19, #256]
  44e4c0:	strb	w21, [x19, #264]
  44e4c4:	cmp	x20, x22
  44e4c8:	add	x0, x0, #0x1
  44e4cc:	str	x0, [x19, #320]
  44e4d0:	b.eq	4517a4 <nftw@plt+0x4ec24>  // b.none
  44e4d4:	ldrb	w21, [x20]
  44e4d8:	mov	x0, #0x1                   	// #1
  44e4dc:	add	x1, x0, #0x1
  44e4e0:	str	x1, [x19, #256]
  44e4e4:	strb	w21, [x19, x0]
  44e4e8:	add	x20, x20, #0x1
  44e4ec:	strb	w21, [x19, #264]
  44e4f0:	cmp	x22, x20
  44e4f4:	b.eq	45171c <nftw@plt+0x4eb9c>  // b.none
  44e4f8:	ldrb	w21, [x20]
  44e4fc:	cmp	x1, #0xff
  44e500:	b.eq	44e4a0 <nftw@plt+0x4b920>  // b.none
  44e504:	mov	x0, x1
  44e508:	b	44e4dc <nftw@plt+0x4b95c>
  44e50c:	adrp	x20, 480000 <_obstack_memory_used@@Base+0x1ebb8>
  44e510:	add	x20, x20, #0xe58
  44e514:	mov	x23, #0x1                   	// #1
  44e518:	stp	x25, x26, [sp, #64]
  44e51c:	add	x25, x20, #0x16
  44e520:	ldr	x1, [x19, #256]
  44e524:	b	44e580 <nftw@plt+0x4ba00>
  44e528:	ldp	x3, x2, [x19, #272]
  44e52c:	strb	wzr, [x19, #255]
  44e530:	mov	x0, x19
  44e534:	add	x20, x20, #0x1
  44e538:	blr	x3
  44e53c:	strb	w21, [x19]
  44e540:	ldr	x0, [x19, #320]
  44e544:	str	x23, [x19, #256]
  44e548:	strb	w21, [x19, #264]
  44e54c:	cmp	x20, x25
  44e550:	add	x0, x0, #0x1
  44e554:	str	x0, [x19, #320]
  44e558:	b.eq	451198 <nftw@plt+0x4e618>  // b.none
  44e55c:	ldrb	w21, [x20]
  44e560:	mov	x0, #0x1                   	// #1
  44e564:	add	x1, x0, #0x1
  44e568:	str	x1, [x19, #256]
  44e56c:	strb	w21, [x19, x0]
  44e570:	add	x20, x20, #0x1
  44e574:	strb	w21, [x19, #264]
  44e578:	cmp	x20, x25
  44e57c:	b.eq	451198 <nftw@plt+0x4e618>  // b.none
  44e580:	ldrb	w21, [x20]
  44e584:	cmp	x1, #0xff
  44e588:	b.eq	44e528 <nftw@plt+0x4b9a8>  // b.none
  44e58c:	mov	x0, x1
  44e590:	b	44e564 <nftw@plt+0x4b9e4>
  44e594:	ldr	x0, [x19, #256]
  44e598:	cmp	x0, #0xff
  44e59c:	b.eq	45297c <nftw@plt+0x4fdfc>  // b.none
  44e5a0:	add	x1, x0, #0x1
  44e5a4:	str	x1, [x19, #256]
  44e5a8:	mov	w2, #0x6a                  	// #106
  44e5ac:	strb	w2, [x19, x0]
  44e5b0:	strb	w2, [x19, #264]
  44e5b4:	cmp	x1, #0xff
  44e5b8:	b.ne	45204c <nftw@plt+0x4f4cc>  // b.any
  44e5bc:	ldp	x3, x2, [x19, #272]
  44e5c0:	strb	wzr, [x19, #255]
  44e5c4:	mov	x0, x19
  44e5c8:	blr	x3
  44e5cc:	ldr	x0, [x19, #320]
  44e5d0:	mov	w2, #0x7661                	// #30305
  44e5d4:	mov	w1, #0x61                  	// #97
  44e5d8:	mov	x3, #0x3                   	// #3
  44e5dc:	add	x0, x0, #0x1
  44e5e0:	strh	w2, [x19]
  44e5e4:	strb	w1, [x19, #2]
  44e5e8:	str	x0, [x19, #320]
  44e5ec:	add	x1, x3, #0x1
  44e5f0:	str	x1, [x19, #256]
  44e5f4:	mov	w0, #0x20                  	// #32
  44e5f8:	strb	w0, [x19, x3]
  44e5fc:	strb	w0, [x19, #264]
  44e600:	cmp	x1, #0xff
  44e604:	b.ne	45209c <nftw@plt+0x4f51c>  // b.any
  44e608:	ldp	x3, x2, [x19, #272]
  44e60c:	strb	wzr, [x19, #255]
  44e610:	mov	x0, x19
  44e614:	blr	x3
  44e618:	ldr	x1, [x19, #320]
  44e61c:	mov	w3, #0x6c43                	// #27715
  44e620:	mov	w2, #0x61                  	// #97
  44e624:	mov	x0, #0x3                   	// #3
  44e628:	add	x1, x1, #0x1
  44e62c:	strh	w3, [x19]
  44e630:	strb	w2, [x19, #2]
  44e634:	str	x1, [x19, #320]
  44e638:	add	x1, x0, #0x1
  44e63c:	str	x1, [x19, #256]
  44e640:	mov	w2, #0x73                  	// #115
  44e644:	strb	w2, [x19, x0]
  44e648:	strb	w2, [x19, #264]
  44e64c:	cmp	x1, #0xff
  44e650:	b.ne	4520ec <nftw@plt+0x4f56c>  // b.any
  44e654:	ldp	x3, x2, [x19, #272]
  44e658:	strb	wzr, [x19, #255]
  44e65c:	mov	x0, x19
  44e660:	blr	x3
  44e664:	ldr	x1, [x19, #320]
  44e668:	mov	w3, #0x2073                	// #8307
  44e66c:	mov	w2, #0x66                  	// #102
  44e670:	mov	x0, #0x3                   	// #3
  44e674:	add	x1, x1, #0x1
  44e678:	strh	w3, [x19]
  44e67c:	strb	w2, [x19, #2]
  44e680:	str	x1, [x19, #320]
  44e684:	add	x1, x0, #0x1
  44e688:	str	x1, [x19, #256]
  44e68c:	mov	w2, #0x6f                  	// #111
  44e690:	strb	w2, [x19, x0]
  44e694:	strb	w2, [x19, #264]
  44e698:	cmp	x1, #0xff
  44e69c:	b.ne	45213c <nftw@plt+0x4f5bc>  // b.any
  44e6a0:	ldp	x3, x2, [x19, #272]
  44e6a4:	strb	wzr, [x19, #255]
  44e6a8:	mov	x0, x19
  44e6ac:	blr	x3
  44e6b0:	ldr	x1, [x19, #320]
  44e6b4:	mov	w2, #0x72                  	// #114
  44e6b8:	mov	x0, #0x1                   	// #1
  44e6bc:	strb	w2, [x19]
  44e6c0:	add	x1, x1, x0
  44e6c4:	str	x1, [x19, #320]
  44e6c8:	add	x1, x0, #0x1
  44e6cc:	str	x1, [x19, #256]
  44e6d0:	mov	w1, #0x20                  	// #32
  44e6d4:	strb	w1, [x19, x0]
  44e6d8:	strb	w1, [x19, #264]
  44e6dc:	ldr	x20, [x24, #8]
  44e6e0:	cbz	x20, 4513e0 <nftw@plt+0x4e860>
  44e6e4:	ldr	w0, [x20, #4]
  44e6e8:	cmp	w0, #0x1
  44e6ec:	b.gt	4513e0 <nftw@plt+0x4e860>
  44e6f0:	ldr	w1, [x19, #308]
  44e6f4:	cmp	w1, #0x400
  44e6f8:	b.gt	4513e0 <nftw@plt+0x4e860>
  44e6fc:	ldr	x3, [x19, #328]
  44e700:	add	w0, w0, #0x1
  44e704:	str	w0, [x20, #4]
  44e708:	add	w1, w1, #0x1
  44e70c:	add	x0, sp, #0x80
  44e710:	str	w1, [x19, #308]
  44e714:	str	x0, [x19, #328]
  44e718:	mov	w1, w22
  44e71c:	mov	x0, x19
  44e720:	mov	x2, x20
  44e724:	stp	x20, x3, [sp, #128]
  44e728:	bl	44d138 <nftw@plt+0x4a5b8>
  44e72c:	ldr	w1, [x20, #4]
  44e730:	ldr	x0, [sp, #136]
  44e734:	sub	w1, w1, #0x1
  44e738:	ldp	x21, x22, [sp, #32]
  44e73c:	ldp	x23, x24, [sp, #48]
  44e740:	str	x0, [x19, #328]
  44e744:	ldr	w0, [x19, #308]
  44e748:	str	w1, [x20, #4]
  44e74c:	sub	w0, w0, #0x1
  44e750:	str	w0, [x19, #308]
  44e754:	b	44d1a0 <nftw@plt+0x4a620>
  44e758:	adrp	x20, 480000 <_obstack_memory_used@@Base+0x1ebb8>
  44e75c:	add	x20, x20, #0xdd8
  44e760:	mov	x23, #0x1                   	// #1
  44e764:	stp	x25, x26, [sp, #64]
  44e768:	add	x25, x20, #0x13
  44e76c:	ldr	x1, [x19, #256]
  44e770:	b	44e7cc <nftw@plt+0x4bc4c>
  44e774:	ldp	x3, x2, [x19, #272]
  44e778:	strb	wzr, [x19, #255]
  44e77c:	mov	x0, x19
  44e780:	add	x20, x20, #0x1
  44e784:	blr	x3
  44e788:	strb	w21, [x19]
  44e78c:	ldr	x0, [x19, #320]
  44e790:	str	x23, [x19, #256]
  44e794:	strb	w21, [x19, #264]
  44e798:	cmp	x20, x25
  44e79c:	add	x0, x0, #0x1
  44e7a0:	str	x0, [x19, #320]
  44e7a4:	b.eq	450c30 <nftw@plt+0x4e0b0>  // b.none
  44e7a8:	ldrb	w21, [x20]
  44e7ac:	mov	x0, #0x1                   	// #1
  44e7b0:	add	x1, x0, #0x1
  44e7b4:	str	x1, [x19, #256]
  44e7b8:	strb	w21, [x19, x0]
  44e7bc:	add	x20, x20, #0x1
  44e7c0:	strb	w21, [x19, #264]
  44e7c4:	cmp	x25, x20
  44e7c8:	b.eq	450c30 <nftw@plt+0x4e0b0>  // b.none
  44e7cc:	ldrb	w21, [x20]
  44e7d0:	cmp	x1, #0xff
  44e7d4:	b.eq	44e774 <nftw@plt+0x4bbf4>  // b.none
  44e7d8:	mov	x0, x1
  44e7dc:	b	44e7b0 <nftw@plt+0x4bc30>
  44e7e0:	adrp	x20, 480000 <_obstack_memory_used@@Base+0x1ebb8>
  44e7e4:	add	x20, x20, #0xdf0
  44e7e8:	mov	x23, #0x1                   	// #1
  44e7ec:	stp	x25, x26, [sp, #64]
  44e7f0:	add	x25, x20, #0x16
  44e7f4:	ldr	x1, [x19, #256]
  44e7f8:	b	44e854 <nftw@plt+0x4bcd4>
  44e7fc:	ldp	x3, x2, [x19, #272]
  44e800:	strb	wzr, [x19, #255]
  44e804:	mov	x0, x19
  44e808:	add	x20, x20, #0x1
  44e80c:	blr	x3
  44e810:	strb	w21, [x19]
  44e814:	ldr	x0, [x19, #320]
  44e818:	str	x23, [x19, #256]
  44e81c:	strb	w21, [x19, #264]
  44e820:	cmp	x25, x20
  44e824:	add	x0, x0, #0x1
  44e828:	str	x0, [x19, #320]
  44e82c:	b.eq	450b30 <nftw@plt+0x4dfb0>  // b.none
  44e830:	ldrb	w21, [x20]
  44e834:	mov	x0, #0x1                   	// #1
  44e838:	add	x1, x0, #0x1
  44e83c:	str	x1, [x19, #256]
  44e840:	strb	w21, [x19, x0]
  44e844:	add	x20, x20, #0x1
  44e848:	strb	w21, [x19, #264]
  44e84c:	cmp	x25, x20
  44e850:	b.eq	450b30 <nftw@plt+0x4dfb0>  // b.none
  44e854:	ldrb	w21, [x20]
  44e858:	cmp	x1, #0xff
  44e85c:	b.eq	44e7fc <nftw@plt+0x4bc7c>  // b.none
  44e860:	mov	x0, x1
  44e864:	b	44e838 <nftw@plt+0x4bcb8>
  44e868:	adrp	x20, 480000 <_obstack_memory_used@@Base+0x1ebb8>
  44e86c:	add	x20, x20, #0xe08
  44e870:	mov	x23, #0x1                   	// #1
  44e874:	stp	x25, x26, [sp, #64]
  44e878:	add	x25, x20, #0x19
  44e87c:	ldr	x1, [x19, #256]
  44e880:	b	44e8dc <nftw@plt+0x4bd5c>
  44e884:	ldp	x3, x2, [x19, #272]
  44e888:	strb	wzr, [x19, #255]
  44e88c:	mov	x0, x19
  44e890:	add	x20, x20, #0x1
  44e894:	blr	x3
  44e898:	strb	w21, [x19]
  44e89c:	ldr	x0, [x19, #320]
  44e8a0:	str	x23, [x19, #256]
  44e8a4:	strb	w21, [x19, #264]
  44e8a8:	cmp	x25, x20
  44e8ac:	add	x0, x0, #0x1
  44e8b0:	str	x0, [x19, #320]
  44e8b4:	b.eq	450db0 <nftw@plt+0x4e230>  // b.none
  44e8b8:	ldrb	w21, [x20]
  44e8bc:	mov	x0, #0x1                   	// #1
  44e8c0:	add	x1, x0, #0x1
  44e8c4:	str	x1, [x19, #256]
  44e8c8:	strb	w21, [x19, x0]
  44e8cc:	add	x20, x20, #0x1
  44e8d0:	strb	w21, [x19, #264]
  44e8d4:	cmp	x20, x25
  44e8d8:	b.eq	450db0 <nftw@plt+0x4e230>  // b.none
  44e8dc:	ldrb	w21, [x20]
  44e8e0:	cmp	x1, #0xff
  44e8e4:	b.eq	44e884 <nftw@plt+0x4bd04>  // b.none
  44e8e8:	mov	x0, x1
  44e8ec:	b	44e8c0 <nftw@plt+0x4bd40>
  44e8f0:	adrp	x20, 480000 <_obstack_memory_used@@Base+0x1ebb8>
  44e8f4:	add	x20, x20, #0xe28
  44e8f8:	mov	x23, #0x1                   	// #1
  44e8fc:	stp	x25, x26, [sp, #64]
  44e900:	add	x25, x20, #0x15
  44e904:	ldr	x1, [x19, #256]
  44e908:	b	44e964 <nftw@plt+0x4bde4>
  44e90c:	ldp	x3, x2, [x19, #272]
  44e910:	strb	wzr, [x19, #255]
  44e914:	mov	x0, x19
  44e918:	add	x20, x20, #0x1
  44e91c:	blr	x3
  44e920:	strb	w21, [x19]
  44e924:	ldr	x0, [x19, #320]
  44e928:	str	x23, [x19, #256]
  44e92c:	strb	w21, [x19, #264]
  44e930:	cmp	x25, x20
  44e934:	add	x0, x0, #0x1
  44e938:	str	x0, [x19, #320]
  44e93c:	b.eq	450fb0 <nftw@plt+0x4e430>  // b.none
  44e940:	ldrb	w21, [x20]
  44e944:	mov	x0, #0x1                   	// #1
  44e948:	add	x1, x0, #0x1
  44e94c:	str	x1, [x19, #256]
  44e950:	strb	w21, [x19, x0]
  44e954:	add	x20, x20, #0x1
  44e958:	strb	w21, [x19, #264]
  44e95c:	cmp	x25, x20
  44e960:	b.eq	450fb4 <nftw@plt+0x4e434>  // b.none
  44e964:	ldrb	w21, [x20]
  44e968:	cmp	x1, #0xff
  44e96c:	b.eq	44e90c <nftw@plt+0x4bd8c>  // b.none
  44e970:	mov	x0, x1
  44e974:	b	44e948 <nftw@plt+0x4bdc8>
  44e978:	adrp	x20, 480000 <_obstack_memory_used@@Base+0x1ebb8>
  44e97c:	add	x20, x20, #0xe40
  44e980:	mov	x23, #0x1                   	// #1
  44e984:	stp	x25, x26, [sp, #64]
  44e988:	add	x25, x20, #0x11
  44e98c:	ldr	x1, [x19, #256]
  44e990:	b	44e9ec <nftw@plt+0x4be6c>
  44e994:	ldp	x3, x2, [x19, #272]
  44e998:	strb	wzr, [x19, #255]
  44e99c:	mov	x0, x19
  44e9a0:	add	x20, x20, #0x1
  44e9a4:	blr	x3
  44e9a8:	strb	w21, [x19]
  44e9ac:	ldr	x0, [x19, #320]
  44e9b0:	str	x23, [x19, #256]
  44e9b4:	strb	w21, [x19, #264]
  44e9b8:	cmp	x25, x20
  44e9bc:	add	x0, x0, #0x1
  44e9c0:	str	x0, [x19, #320]
  44e9c4:	b.eq	451218 <nftw@plt+0x4e698>  // b.none
  44e9c8:	ldrb	w21, [x20]
  44e9cc:	mov	x0, #0x1                   	// #1
  44e9d0:	add	x1, x0, #0x1
  44e9d4:	str	x1, [x19, #256]
  44e9d8:	strb	w21, [x19, x0]
  44e9dc:	add	x20, x20, #0x1
  44e9e0:	strb	w21, [x19, #264]
  44e9e4:	cmp	x25, x20
  44e9e8:	b.eq	451218 <nftw@plt+0x4e698>  // b.none
  44e9ec:	ldrb	w21, [x20]
  44e9f0:	cmp	x1, #0xff
  44e9f4:	b.eq	44e994 <nftw@plt+0x4be14>  // b.none
  44e9f8:	mov	x0, x1
  44e9fc:	b	44e9d0 <nftw@plt+0x4be50>
  44ea00:	ldr	x0, [x2, #8]
  44ea04:	tbnz	w22, #2, 451bc8 <nftw@plt+0x4f048>
  44ea08:	ldrsw	x22, [x0, #8]
  44ea0c:	ldr	x20, [x0]
  44ea10:	cbz	x22, 455b60 <nftw@plt+0x52fe0>
  44ea14:	add	x22, x20, x22
  44ea18:	mov	x23, #0x1                   	// #1
  44ea1c:	ldr	x1, [x19, #256]
  44ea20:	b	44ea7c <nftw@plt+0x4befc>
  44ea24:	ldp	x3, x2, [x19, #272]
  44ea28:	strb	wzr, [x19, #255]
  44ea2c:	mov	x0, x19
  44ea30:	add	x20, x20, #0x1
  44ea34:	blr	x3
  44ea38:	strb	w21, [x19]
  44ea3c:	ldr	x0, [x19, #320]
  44ea40:	str	x23, [x19, #256]
  44ea44:	strb	w21, [x19, #264]
  44ea48:	cmp	x20, x22
  44ea4c:	add	x0, x0, #0x1
  44ea50:	str	x0, [x19, #320]
  44ea54:	b.eq	4553cc <nftw@plt+0x5284c>  // b.none
  44ea58:	ldrb	w21, [x20]
  44ea5c:	mov	x0, #0x1                   	// #1
  44ea60:	add	x1, x0, #0x1
  44ea64:	str	x1, [x19, #256]
  44ea68:	strb	w21, [x19, x0]
  44ea6c:	add	x20, x20, #0x1
  44ea70:	strb	w21, [x19, #264]
  44ea74:	cmp	x22, x20
  44ea78:	b.eq	4546ec <nftw@plt+0x51b6c>  // b.none
  44ea7c:	ldrb	w21, [x20]
  44ea80:	cmp	x1, #0xff
  44ea84:	b.eq	44ea24 <nftw@plt+0x4bea4>  // b.none
  44ea88:	mov	x0, x1
  44ea8c:	b	44ea60 <nftw@plt+0x4bee0>
  44ea90:	ldr	x20, [x2, #8]
  44ea94:	cbz	x20, 451388 <nftw@plt+0x4e808>
  44ea98:	ldr	w0, [x20, #4]
  44ea9c:	cmp	w0, #0x1
  44eaa0:	b.gt	451388 <nftw@plt+0x4e808>
  44eaa4:	ldr	w1, [x19, #308]
  44eaa8:	cmp	w1, #0x400
  44eaac:	b.gt	451388 <nftw@plt+0x4e808>
  44eab0:	ldr	x3, [x19, #328]
  44eab4:	add	w0, w0, #0x1
  44eab8:	str	w0, [x20, #4]
  44eabc:	add	w1, w1, #0x1
  44eac0:	add	x0, sp, #0x80
  44eac4:	str	w1, [x19, #308]
  44eac8:	str	x0, [x19, #328]
  44eacc:	mov	w1, w22
  44ead0:	mov	x0, x19
  44ead4:	mov	x2, x20
  44ead8:	stp	x20, x3, [sp, #128]
  44eadc:	bl	44d138 <nftw@plt+0x4a5b8>
  44eae0:	ldr	w1, [x20, #4]
  44eae4:	ldr	x0, [sp, #136]
  44eae8:	sub	w1, w1, #0x1
  44eaec:	ldp	x21, x22, [sp, #32]
  44eaf0:	ldp	x23, x24, [sp, #48]
  44eaf4:	str	x0, [x19, #328]
  44eaf8:	ldr	w0, [x19, #308]
  44eafc:	str	w1, [x20, #4]
  44eb00:	sub	w0, w0, #0x1
  44eb04:	str	w0, [x19, #308]
  44eb08:	b	44d1a0 <nftw@plt+0x4a620>
  44eb0c:	ldr	x0, [x19, #256]
  44eb10:	cmp	x0, #0xff
  44eb14:	b.eq	452e74 <nftw@plt+0x502f4>  // b.none
  44eb18:	add	x1, x0, #0x1
  44eb1c:	str	x1, [x19, #256]
  44eb20:	mov	w2, #0x56                  	// #86
  44eb24:	strb	w2, [x19, x0]
  44eb28:	strb	w2, [x19, #264]
  44eb2c:	cmp	x1, #0xff
  44eb30:	b.ne	4525f8 <nftw@plt+0x4fa78>  // b.any
  44eb34:	ldp	x3, x2, [x19, #272]
  44eb38:	strb	wzr, [x19, #255]
  44eb3c:	mov	x0, x19
  44eb40:	blr	x3
  44eb44:	ldr	x0, [x19, #320]
  44eb48:	mov	w3, #0x5454                	// #21588
  44eb4c:	mov	w2, #0x20                  	// #32
  44eb50:	mov	x1, #0x3                   	// #3
  44eb54:	add	x0, x0, #0x1
  44eb58:	strh	w3, [x19]
  44eb5c:	strb	w2, [x19, #2]
  44eb60:	str	x0, [x19, #320]
  44eb64:	add	x0, x1, #0x1
  44eb68:	str	x0, [x19, #256]
  44eb6c:	mov	w2, #0x66                  	// #102
  44eb70:	strb	w2, [x19, x1]
  44eb74:	strb	w2, [x19, #264]
  44eb78:	cmp	x0, #0xff
  44eb7c:	b.ne	452648 <nftw@plt+0x4fac8>  // b.any
  44eb80:	ldp	x3, x2, [x19, #272]
  44eb84:	strb	wzr, [x19, #255]
  44eb88:	mov	x1, x0
  44eb8c:	mov	x0, x19
  44eb90:	blr	x3
  44eb94:	ldr	x0, [x19, #320]
  44eb98:	mov	w2, #0x6f                  	// #111
  44eb9c:	mov	x1, #0x1                   	// #1
  44eba0:	strb	w2, [x19]
  44eba4:	add	x0, x0, x1
  44eba8:	str	x0, [x19, #320]
  44ebac:	add	x0, x1, #0x1
  44ebb0:	mov	w2, #0x72                  	// #114
  44ebb4:	strb	w2, [x19, x1]
  44ebb8:	add	x1, x0, #0x1
  44ebbc:	str	x1, [x19, #256]
  44ebc0:	mov	w1, #0x20                  	// #32
  44ebc4:	strb	w1, [x19, x0]
  44ebc8:	strb	w1, [x19, #264]
  44ebcc:	ldr	x20, [x24, #8]
  44ebd0:	cbz	x20, 4514a8 <nftw@plt+0x4e928>
  44ebd4:	ldr	w0, [x20, #4]
  44ebd8:	cmp	w0, #0x1
  44ebdc:	b.gt	4514a8 <nftw@plt+0x4e928>
  44ebe0:	ldr	w1, [x19, #308]
  44ebe4:	cmp	w1, #0x400
  44ebe8:	b.gt	4514a8 <nftw@plt+0x4e928>
  44ebec:	ldr	x3, [x19, #328]
  44ebf0:	add	w0, w0, #0x1
  44ebf4:	str	w0, [x20, #4]
  44ebf8:	add	w1, w1, #0x1
  44ebfc:	add	x0, sp, #0x80
  44ec00:	str	w1, [x19, #308]
  44ec04:	str	x0, [x19, #328]
  44ec08:	mov	w1, w22
  44ec0c:	mov	x0, x19
  44ec10:	mov	x2, x20
  44ec14:	stp	x20, x3, [sp, #128]
  44ec18:	bl	44d138 <nftw@plt+0x4a5b8>
  44ec1c:	ldr	w1, [x20, #4]
  44ec20:	ldr	x0, [sp, #136]
  44ec24:	sub	w1, w1, #0x1
  44ec28:	ldp	x21, x22, [sp, #32]
  44ec2c:	ldp	x23, x24, [sp, #48]
  44ec30:	str	x0, [x19, #328]
  44ec34:	ldr	w0, [x19, #308]
  44ec38:	str	w1, [x20, #4]
  44ec3c:	sub	w0, w0, #0x1
  44ec40:	str	w0, [x19, #308]
  44ec44:	b	44d1a0 <nftw@plt+0x4a620>
  44ec48:	ldr	x1, [x19, #256]
  44ec4c:	ldrb	w20, [x2, #8]
  44ec50:	add	x0, x1, #0x1
  44ec54:	cmp	x1, #0xff
  44ec58:	b.ne	44ec80 <nftw@plt+0x4c100>  // b.any
  44ec5c:	ldp	x3, x2, [x19, #272]
  44ec60:	strb	wzr, [x19, #255]
  44ec64:	mov	x0, x19
  44ec68:	blr	x3
  44ec6c:	ldr	x2, [x19, #320]
  44ec70:	mov	x0, #0x1                   	// #1
  44ec74:	mov	x1, #0x0                   	// #0
  44ec78:	add	x2, x2, x0
  44ec7c:	str	x2, [x19, #320]
  44ec80:	str	x0, [x19, #256]
  44ec84:	strb	w20, [x19, x1]
  44ec88:	strb	w20, [x19, #264]
  44ec8c:	ldp	x21, x22, [sp, #32]
  44ec90:	ldp	x23, x24, [sp, #48]
  44ec94:	b	44d1a0 <nftw@plt+0x4a620>
  44ec98:	ldr	x0, [x19, #256]
  44ec9c:	cmp	x0, #0xff
  44eca0:	b.eq	453470 <nftw@plt+0x508f0>  // b.none
  44eca4:	add	x1, x0, #0x1
  44eca8:	str	x1, [x19, #256]
  44ecac:	mov	w2, #0x6a                  	// #106
  44ecb0:	strb	w2, [x19, x0]
  44ecb4:	strb	w2, [x19, #264]
  44ecb8:	cmp	x1, #0xff
  44ecbc:	b.ne	4518a4 <nftw@plt+0x4ed24>  // b.any
  44ecc0:	ldp	x3, x2, [x19, #272]
  44ecc4:	strb	wzr, [x19, #255]
  44ecc8:	mov	x0, x19
  44eccc:	blr	x3
  44ecd0:	ldr	x0, [x19, #320]
  44ecd4:	mov	w3, #0x7661                	// #30305
  44ecd8:	mov	w2, #0x61                  	// #97
  44ecdc:	mov	x1, #0x3                   	// #3
  44ece0:	add	x0, x0, #0x1
  44ece4:	strh	w3, [x19]
  44ece8:	strb	w2, [x19, #2]
  44ecec:	str	x0, [x19, #320]
  44ecf0:	add	x0, x1, #0x1
  44ecf4:	str	x0, [x19, #256]
  44ecf8:	mov	w2, #0x20                  	// #32
  44ecfc:	strb	w2, [x19, x1]
  44ed00:	strb	w2, [x19, #264]
  44ed04:	cmp	x0, #0xff
  44ed08:	b.ne	4518f4 <nftw@plt+0x4ed74>  // b.any
  44ed0c:	ldp	x3, x2, [x19, #272]
  44ed10:	strb	wzr, [x19, #255]
  44ed14:	mov	x1, x0
  44ed18:	mov	x0, x19
  44ed1c:	blr	x3
  44ed20:	ldr	x0, [x19, #320]
  44ed24:	mov	w3, #0x6572                	// #25970
  44ed28:	mov	w2, #0x73                  	// #115
  44ed2c:	mov	x1, #0x3                   	// #3
  44ed30:	add	x0, x0, #0x1
  44ed34:	strh	w3, [x19]
  44ed38:	strb	w2, [x19, #2]
  44ed3c:	str	x0, [x19, #320]
  44ed40:	add	x0, x1, #0x1
  44ed44:	str	x0, [x19, #256]
  44ed48:	mov	w2, #0x6f                  	// #111
  44ed4c:	strb	w2, [x19, x1]
  44ed50:	strb	w2, [x19, #264]
  44ed54:	cmp	x0, #0xff
  44ed58:	b.ne	451940 <nftw@plt+0x4edc0>  // b.any
  44ed5c:	ldp	x3, x2, [x19, #272]
  44ed60:	strb	wzr, [x19, #255]
  44ed64:	mov	x1, x0
  44ed68:	mov	x0, x19
  44ed6c:	blr	x3
  44ed70:	ldr	x0, [x19, #320]
  44ed74:	mov	w3, #0x7275                	// #29301
  44ed78:	mov	w2, #0x63                  	// #99
  44ed7c:	mov	x1, #0x3                   	// #3
  44ed80:	add	x0, x0, #0x1
  44ed84:	strh	w3, [x19]
  44ed88:	strb	w2, [x19, #2]
  44ed8c:	str	x0, [x19, #320]
  44ed90:	add	x0, x1, #0x1
  44ed94:	str	x0, [x19, #256]
  44ed98:	mov	w2, #0x65                  	// #101
  44ed9c:	strb	w2, [x19, x1]
  44eda0:	strb	w2, [x19, #264]
  44eda4:	cmp	x0, #0xff
  44eda8:	b.ne	451990 <nftw@plt+0x4ee10>  // b.any
  44edac:	ldp	x3, x2, [x19, #272]
  44edb0:	strb	wzr, [x19, #255]
  44edb4:	mov	x1, x0
  44edb8:	mov	x0, x19
  44edbc:	blr	x3
  44edc0:	ldr	x2, [x19, #320]
  44edc4:	mov	x1, #0x1                   	// #1
  44edc8:	mov	x0, #0x0                   	// #0
  44edcc:	add	x2, x2, x1
  44edd0:	str	x2, [x19, #320]
  44edd4:	str	x1, [x19, #256]
  44edd8:	mov	w1, #0x20                  	// #32
  44eddc:	strb	w1, [x19, x0]
  44ede0:	strb	w1, [x19, #264]
  44ede4:	ldr	x20, [x24, #8]
  44ede8:	cbz	x20, 4514bc <nftw@plt+0x4e93c>
  44edec:	ldr	w0, [x20, #4]
  44edf0:	cmp	w0, #0x1
  44edf4:	b.gt	4514bc <nftw@plt+0x4e93c>
  44edf8:	ldr	w1, [x19, #308]
  44edfc:	cmp	w1, #0x400
  44ee00:	b.gt	4514bc <nftw@plt+0x4e93c>
  44ee04:	ldr	x3, [x19, #328]
  44ee08:	add	w0, w0, #0x1
  44ee0c:	str	w0, [x20, #4]
  44ee10:	add	w1, w1, #0x1
  44ee14:	add	x0, sp, #0x80
  44ee18:	str	w1, [x19, #308]
  44ee1c:	str	x0, [x19, #328]
  44ee20:	mov	w1, w22
  44ee24:	mov	x0, x19
  44ee28:	mov	x2, x20
  44ee2c:	stp	x20, x3, [sp, #128]
  44ee30:	bl	44d138 <nftw@plt+0x4a5b8>
  44ee34:	ldr	w1, [x20, #4]
  44ee38:	ldr	x0, [sp, #136]
  44ee3c:	sub	w1, w1, #0x1
  44ee40:	ldp	x21, x22, [sp, #32]
  44ee44:	ldp	x23, x24, [sp, #48]
  44ee48:	str	x0, [x19, #328]
  44ee4c:	ldr	w0, [x19, #308]
  44ee50:	str	w1, [x20, #4]
  44ee54:	sub	w0, w0, #0x1
  44ee58:	str	w0, [x19, #308]
  44ee5c:	b	44d1a0 <nftw@plt+0x4a620>
  44ee60:	ldr	x20, [x2, #8]
  44ee64:	cbz	x20, 451608 <nftw@plt+0x4ea88>
  44ee68:	ldr	w0, [x20, #4]
  44ee6c:	cmp	w0, #0x1
  44ee70:	b.gt	451608 <nftw@plt+0x4ea88>
  44ee74:	ldr	w1, [x19, #308]
  44ee78:	cmp	w1, #0x400
  44ee7c:	b.gt	451608 <nftw@plt+0x4ea88>
  44ee80:	ldr	x3, [x19, #328]
  44ee84:	add	w0, w0, #0x1
  44ee88:	str	w0, [x20, #4]
  44ee8c:	add	w1, w1, #0x1
  44ee90:	add	x0, sp, #0x80
  44ee94:	str	w1, [x19, #308]
  44ee98:	str	x0, [x19, #328]
  44ee9c:	mov	w1, w22
  44eea0:	mov	x0, x19
  44eea4:	mov	x2, x20
  44eea8:	stp	x20, x3, [sp, #128]
  44eeac:	bl	44d138 <nftw@plt+0x4a5b8>
  44eeb0:	ldr	w1, [x20, #4]
  44eeb4:	ldr	x0, [sp, #136]
  44eeb8:	str	x0, [x19, #328]
  44eebc:	ldr	w0, [x19, #308]
  44eec0:	sub	w1, w1, #0x1
  44eec4:	str	w1, [x20, #4]
  44eec8:	sub	w0, w0, #0x1
  44eecc:	str	w0, [x19, #308]
  44eed0:	ldr	x20, [x24, #16]
  44eed4:	cbz	x20, 4515f4 <nftw@plt+0x4ea74>
  44eed8:	ldr	w0, [x20, #4]
  44eedc:	cmp	w0, #0x1
  44eee0:	b.gt	4515f4 <nftw@plt+0x4ea74>
  44eee4:	ldr	w1, [x19, #308]
  44eee8:	cmp	w1, #0x400
  44eeec:	b.gt	4515f4 <nftw@plt+0x4ea74>
  44eef0:	ldr	x3, [x19, #328]
  44eef4:	add	w0, w0, #0x1
  44eef8:	str	w0, [x20, #4]
  44eefc:	add	w1, w1, #0x1
  44ef00:	add	x0, sp, #0x80
  44ef04:	str	w1, [x19, #308]
  44ef08:	str	x0, [x19, #328]
  44ef0c:	mov	w1, w22
  44ef10:	mov	x0, x19
  44ef14:	mov	x2, x20
  44ef18:	stp	x20, x3, [sp, #128]
  44ef1c:	bl	44d138 <nftw@plt+0x4a5b8>
  44ef20:	ldr	w1, [x20, #4]
  44ef24:	ldr	x0, [sp, #136]
  44ef28:	sub	w1, w1, #0x1
  44ef2c:	ldp	x21, x22, [sp, #32]
  44ef30:	ldp	x23, x24, [sp, #48]
  44ef34:	str	x0, [x19, #328]
  44ef38:	ldr	w0, [x19, #308]
  44ef3c:	str	w1, [x20, #4]
  44ef40:	sub	w0, w0, #0x1
  44ef44:	str	w0, [x19, #308]
  44ef48:	b	44d1a0 <nftw@plt+0x4a620>
  44ef4c:	ldrsh	w0, [x2, #18]
  44ef50:	cbnz	w0, 4543f8 <nftw@plt+0x51878>
  44ef54:	ldr	x20, [x24, #8]
  44ef58:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x1ebb8>
  44ef5c:	add	x0, x0, #0xd0
  44ef60:	add	x0, x0, #0x288
  44ef64:	ldr	x1, [x20, #8]
  44ef68:	cmp	x1, x0
  44ef6c:	b.ne	453918 <nftw@plt+0x50d98>  // b.any
  44ef70:	ldr	x0, [x19, #256]
  44ef74:	cmp	x0, #0xff
  44ef78:	ldrsh	w1, [x24, #16]
  44ef7c:	cbz	w1, 4539bc <nftw@plt+0x50e3c>
  44ef80:	b.eq	454ae8 <nftw@plt+0x51f68>  // b.none
  44ef84:	add	x1, x0, #0x1
  44ef88:	str	x1, [x19, #256]
  44ef8c:	mov	w2, #0x5f                  	// #95
  44ef90:	strb	w2, [x19, x0]
  44ef94:	strb	w2, [x19, #264]
  44ef98:	cmp	x1, #0xff
  44ef9c:	b.ne	4545a0 <nftw@plt+0x51a20>  // b.any
  44efa0:	ldp	x3, x2, [x19, #272]
  44efa4:	strb	wzr, [x19, #255]
  44efa8:	mov	x0, x19
  44efac:	blr	x3
  44efb0:	ldr	x0, [x19, #320]
  44efb4:	mov	w3, #0x6341                	// #25409
  44efb8:	mov	w2, #0x63                  	// #99
  44efbc:	mov	x1, #0x3                   	// #3
  44efc0:	add	x0, x0, #0x1
  44efc4:	strh	w3, [x19]
  44efc8:	strb	w2, [x19, #2]
  44efcc:	str	x0, [x19, #320]
  44efd0:	add	x0, x1, #0x1
  44efd4:	str	x0, [x19, #256]
  44efd8:	mov	w2, #0x75                  	// #117
  44efdc:	strb	w2, [x19, x1]
  44efe0:	strb	w2, [x19, #264]
  44efe4:	cmp	x0, #0xff
  44efe8:	b.ne	4545f4 <nftw@plt+0x51a74>  // b.any
  44efec:	ldp	x3, x2, [x19, #272]
  44eff0:	strb	wzr, [x19, #255]
  44eff4:	mov	x1, x0
  44eff8:	mov	x0, x19
  44effc:	blr	x3
  44f000:	ldr	x2, [x19, #320]
  44f004:	mov	x1, #0x1                   	// #1
  44f008:	mov	x0, #0x0                   	// #0
  44f00c:	add	x2, x2, x1
  44f010:	str	x2, [x19, #320]
  44f014:	str	x1, [x19, #256]
  44f018:	mov	w1, #0x6d                  	// #109
  44f01c:	strb	w1, [x19, x0]
  44f020:	strb	w1, [x19, #264]
  44f024:	ldp	x21, x22, [sp, #32]
  44f028:	ldp	x23, x24, [sp, #48]
  44f02c:	b	44d1a0 <nftw@plt+0x4a620>
  44f030:	adrp	x20, 480000 <_obstack_memory_used@@Base+0x1ebb8>
  44f034:	add	x20, x20, #0xd18
  44f038:	mov	x23, #0x1                   	// #1
  44f03c:	stp	x25, x26, [sp, #64]
  44f040:	add	x25, x20, #0x1e
  44f044:	ldr	x1, [x19, #256]
  44f048:	b	44f0a4 <nftw@plt+0x4c524>
  44f04c:	ldp	x3, x2, [x19, #272]
  44f050:	strb	wzr, [x19, #255]
  44f054:	mov	x0, x19
  44f058:	add	x20, x20, #0x1
  44f05c:	blr	x3
  44f060:	strb	w21, [x19]
  44f064:	ldr	x0, [x19, #320]
  44f068:	str	x23, [x19, #256]
  44f06c:	strb	w21, [x19, #264]
  44f070:	cmp	x20, x25
  44f074:	add	x0, x0, #0x1
  44f078:	str	x0, [x19, #320]
  44f07c:	b.eq	450e30 <nftw@plt+0x4e2b0>  // b.none
  44f080:	ldrb	w21, [x20]
  44f084:	mov	x0, #0x1                   	// #1
  44f088:	add	x1, x0, #0x1
  44f08c:	str	x1, [x19, #256]
  44f090:	strb	w21, [x19, x0]
  44f094:	add	x20, x20, #0x1
  44f098:	strb	w21, [x19, #264]
  44f09c:	cmp	x25, x20
  44f0a0:	b.eq	450e30 <nftw@plt+0x4e2b0>  // b.none
  44f0a4:	ldrb	w21, [x20]
  44f0a8:	cmp	x1, #0xff
  44f0ac:	b.eq	44f04c <nftw@plt+0x4c4cc>  // b.none
  44f0b0:	mov	x0, x1
  44f0b4:	b	44f088 <nftw@plt+0x4c508>
  44f0b8:	adrp	x20, 480000 <_obstack_memory_used@@Base+0x1ebb8>
  44f0bc:	add	x20, x20, #0xda0
  44f0c0:	mov	x23, #0x1                   	// #1
  44f0c4:	stp	x25, x26, [sp, #64]
  44f0c8:	add	x25, x20, #0x11
  44f0cc:	ldr	x1, [x19, #256]
  44f0d0:	b	44f12c <nftw@plt+0x4c5ac>
  44f0d4:	ldp	x3, x2, [x19, #272]
  44f0d8:	strb	wzr, [x19, #255]
  44f0dc:	mov	x0, x19
  44f0e0:	add	x20, x20, #0x1
  44f0e4:	blr	x3
  44f0e8:	strb	w21, [x19]
  44f0ec:	ldr	x0, [x19, #320]
  44f0f0:	str	x23, [x19, #256]
  44f0f4:	strb	w21, [x19, #264]
  44f0f8:	cmp	x20, x25
  44f0fc:	add	x0, x0, #0x1
  44f100:	str	x0, [x19, #320]
  44f104:	b.eq	450f30 <nftw@plt+0x4e3b0>  // b.none
  44f108:	ldrb	w21, [x20]
  44f10c:	mov	x0, #0x1                   	// #1
  44f110:	add	x1, x0, #0x1
  44f114:	str	x1, [x19, #256]
  44f118:	strb	w21, [x19, x0]
  44f11c:	add	x20, x20, #0x1
  44f120:	strb	w21, [x19, #264]
  44f124:	cmp	x25, x20
  44f128:	b.eq	450f30 <nftw@plt+0x4e3b0>  // b.none
  44f12c:	ldrb	w21, [x20]
  44f130:	cmp	x1, #0xff
  44f134:	b.eq	44f0d4 <nftw@plt+0x4c554>  // b.none
  44f138:	mov	x0, x1
  44f13c:	b	44f110 <nftw@plt+0x4c590>
  44f140:	adrp	x20, 480000 <_obstack_memory_used@@Base+0x1ebb8>
  44f144:	add	x20, x20, #0xdb8
  44f148:	mov	x23, #0x1                   	// #1
  44f14c:	stp	x25, x26, [sp, #64]
  44f150:	add	x25, x20, #0x1a
  44f154:	ldr	x1, [x19, #256]
  44f158:	b	44f1b4 <nftw@plt+0x4c634>
  44f15c:	ldp	x3, x2, [x19, #272]
  44f160:	strb	wzr, [x19, #255]
  44f164:	mov	x0, x19
  44f168:	add	x20, x20, #0x1
  44f16c:	blr	x3
  44f170:	strb	w21, [x19]
  44f174:	ldr	x0, [x19, #320]
  44f178:	str	x23, [x19, #256]
  44f17c:	strb	w21, [x19, #264]
  44f180:	cmp	x20, x25
  44f184:	add	x0, x0, #0x1
  44f188:	str	x0, [x19, #320]
  44f18c:	b.eq	451118 <nftw@plt+0x4e598>  // b.none
  44f190:	ldrb	w21, [x20]
  44f194:	mov	x0, #0x1                   	// #1
  44f198:	add	x1, x0, #0x1
  44f19c:	str	x1, [x19, #256]
  44f1a0:	strb	w21, [x19, x0]
  44f1a4:	add	x20, x20, #0x1
  44f1a8:	strb	w21, [x19, #264]
  44f1ac:	cmp	x25, x20
  44f1b0:	b.eq	451118 <nftw@plt+0x4e598>  // b.none
  44f1b4:	ldrb	w21, [x20]
  44f1b8:	cmp	x1, #0xff
  44f1bc:	b.eq	44f15c <nftw@plt+0x4c5dc>  // b.none
  44f1c0:	mov	x0, x1
  44f1c4:	b	44f198 <nftw@plt+0x4c618>
  44f1c8:	adrp	x20, 480000 <_obstack_memory_used@@Base+0x1ebb8>
  44f1cc:	add	x20, x20, #0xe70
  44f1d0:	mov	x23, #0x1                   	// #1
  44f1d4:	stp	x25, x26, [sp, #64]
  44f1d8:	add	x25, x20, #0x1a
  44f1dc:	ldr	x1, [x19, #256]
  44f1e0:	b	44f23c <nftw@plt+0x4c6bc>
  44f1e4:	ldp	x3, x2, [x19, #272]
  44f1e8:	strb	wzr, [x19, #255]
  44f1ec:	mov	x0, x19
  44f1f0:	add	x20, x20, #0x1
  44f1f4:	blr	x3
  44f1f8:	strb	w21, [x19]
  44f1fc:	ldr	x0, [x19, #320]
  44f200:	str	x23, [x19, #256]
  44f204:	strb	w21, [x19, #264]
  44f208:	cmp	x20, x25
  44f20c:	add	x0, x0, #0x1
  44f210:	str	x0, [x19, #320]
  44f214:	b.eq	450ab0 <nftw@plt+0x4df30>  // b.none
  44f218:	ldrb	w21, [x20]
  44f21c:	mov	x0, #0x1                   	// #1
  44f220:	add	x1, x0, #0x1
  44f224:	str	x1, [x19, #256]
  44f228:	strb	w21, [x19, x0]
  44f22c:	add	x20, x20, #0x1
  44f230:	strb	w21, [x19, #264]
  44f234:	cmp	x20, x25
  44f238:	b.eq	450ab0 <nftw@plt+0x4df30>  // b.none
  44f23c:	ldrb	w21, [x20]
  44f240:	cmp	x1, #0xff
  44f244:	b.eq	44f1e4 <nftw@plt+0x4c664>  // b.none
  44f248:	mov	x0, x1
  44f24c:	b	44f220 <nftw@plt+0x4c6a0>
  44f250:	ldp	x21, x20, [x2, #8]
  44f254:	cbz	x21, 44f2c0 <nftw@plt+0x4c740>
  44f258:	ldr	w0, [x21, #4]
  44f25c:	cmp	w0, #0x1
  44f260:	b.gt	4539b0 <nftw@plt+0x50e30>
  44f264:	ldr	w1, [x19, #308]
  44f268:	cmp	w1, #0x400
  44f26c:	b.gt	4539b0 <nftw@plt+0x50e30>
  44f270:	ldr	x3, [x19, #328]
  44f274:	add	w0, w0, #0x1
  44f278:	str	w0, [x21, #4]
  44f27c:	add	w1, w1, #0x1
  44f280:	add	x0, sp, #0x80
  44f284:	str	w1, [x19, #308]
  44f288:	str	x0, [x19, #328]
  44f28c:	mov	w1, w22
  44f290:	mov	x0, x19
  44f294:	mov	x2, x21
  44f298:	stp	x21, x3, [sp, #128]
  44f29c:	bl	44d138 <nftw@plt+0x4a5b8>
  44f2a0:	ldr	w1, [x21, #4]
  44f2a4:	ldr	x0, [sp, #136]
  44f2a8:	str	x0, [x19, #328]
  44f2ac:	ldr	w0, [x19, #308]
  44f2b0:	sub	w1, w1, #0x1
  44f2b4:	str	w1, [x21, #4]
  44f2b8:	sub	w0, w0, #0x1
  44f2bc:	str	w0, [x19, #308]
  44f2c0:	ldr	x1, [x19, #256]
  44f2c4:	add	x0, x1, #0x1
  44f2c8:	cmp	x1, #0xff
  44f2cc:	b.ne	44f2f4 <nftw@plt+0x4c774>  // b.any
  44f2d0:	ldp	x3, x2, [x19, #272]
  44f2d4:	strb	wzr, [x19, #255]
  44f2d8:	mov	x0, x19
  44f2dc:	blr	x3
  44f2e0:	ldr	x2, [x19, #320]
  44f2e4:	mov	x0, #0x1                   	// #1
  44f2e8:	mov	x1, #0x0                   	// #0
  44f2ec:	add	x2, x2, x0
  44f2f0:	str	x2, [x19, #320]
  44f2f4:	str	x0, [x19, #256]
  44f2f8:	mov	w2, #0x7b                  	// #123
  44f2fc:	strb	w2, [x19, x1]
  44f300:	strb	w2, [x19, #264]
  44f304:	cbz	x20, 4515a4 <nftw@plt+0x4ea24>
  44f308:	ldr	w1, [x20, #4]
  44f30c:	cmp	w1, #0x1
  44f310:	b.gt	4515a4 <nftw@plt+0x4ea24>
  44f314:	ldr	w2, [x19, #308]
  44f318:	cmp	w2, #0x400
  44f31c:	b.gt	4515a4 <nftw@plt+0x4ea24>
  44f320:	ldr	x3, [x19, #328]
  44f324:	add	w1, w1, #0x1
  44f328:	str	w1, [x20, #4]
  44f32c:	add	w2, w2, #0x1
  44f330:	add	x0, sp, #0x80
  44f334:	str	w2, [x19, #308]
  44f338:	str	x0, [x19, #328]
  44f33c:	mov	w1, w22
  44f340:	mov	x2, x20
  44f344:	mov	x0, x19
  44f348:	stp	x20, x3, [sp, #128]
  44f34c:	bl	44d138 <nftw@plt+0x4a5b8>
  44f350:	ldr	w2, [x20, #4]
  44f354:	ldr	x0, [sp, #136]
  44f358:	str	x0, [x19, #328]
  44f35c:	ldr	w1, [x19, #308]
  44f360:	sub	w2, w2, #0x1
  44f364:	ldr	x0, [x19, #256]
  44f368:	str	w2, [x20, #4]
  44f36c:	sub	w1, w1, #0x1
  44f370:	str	w1, [x19, #308]
  44f374:	add	x1, x0, #0x1
  44f378:	cmp	x0, #0xff
  44f37c:	b.ne	44f3a8 <nftw@plt+0x4c828>  // b.any
  44f380:	ldp	x3, x2, [x19, #272]
  44f384:	strb	wzr, [x19, #255]
  44f388:	mov	x1, x0
  44f38c:	mov	x0, x19
  44f390:	blr	x3
  44f394:	ldr	x2, [x19, #320]
  44f398:	mov	x1, #0x1                   	// #1
  44f39c:	mov	x0, #0x0                   	// #0
  44f3a0:	add	x2, x2, x1
  44f3a4:	str	x2, [x19, #320]
  44f3a8:	str	x1, [x19, #256]
  44f3ac:	mov	w1, #0x7d                  	// #125
  44f3b0:	strb	w1, [x19, x0]
  44f3b4:	strb	w1, [x19, #264]
  44f3b8:	ldp	x21, x22, [sp, #32]
  44f3bc:	ldp	x23, x24, [sp, #48]
  44f3c0:	b	44d1a0 <nftw@plt+0x4a620>
  44f3c4:	ldr	x22, [x2, #8]
  44f3c8:	ldr	x0, [x19, #256]
  44f3cc:	ldr	w21, [x22, #16]
  44f3d0:	cmp	x0, #0xff
  44f3d4:	b.eq	4531a4 <nftw@plt+0x50624>  // b.none
  44f3d8:	add	x1, x0, #0x1
  44f3dc:	str	x1, [x19, #256]
  44f3e0:	mov	w2, #0x6f                  	// #111
  44f3e4:	strb	w2, [x19, x0]
  44f3e8:	strb	w2, [x19, #264]
  44f3ec:	cmp	x1, #0xff
  44f3f0:	b.ne	4524ec <nftw@plt+0x4f96c>  // b.any
  44f3f4:	ldp	x3, x2, [x19, #272]
  44f3f8:	strb	wzr, [x19, #255]
  44f3fc:	mov	x0, x19
  44f400:	blr	x3
  44f404:	ldr	x0, [x19, #320]
  44f408:	mov	w3, #0x6570                	// #25968
  44f40c:	mov	w2, #0x72                  	// #114
  44f410:	mov	x1, #0x3                   	// #3
  44f414:	add	x0, x0, #0x1
  44f418:	strh	w3, [x19]
  44f41c:	strb	w2, [x19, #2]
  44f420:	str	x0, [x19, #320]
  44f424:	add	x0, x1, #0x1
  44f428:	str	x0, [x19, #256]
  44f42c:	mov	w2, #0x61                  	// #97
  44f430:	strb	w2, [x19, x1]
  44f434:	strb	w2, [x19, #264]
  44f438:	cmp	x0, #0xff
  44f43c:	b.ne	45253c <nftw@plt+0x4f9bc>  // b.any
  44f440:	ldp	x3, x2, [x19, #272]
  44f444:	strb	wzr, [x19, #255]
  44f448:	mov	x1, x0
  44f44c:	mov	x0, x19
  44f450:	blr	x3
  44f454:	ldr	x0, [x19, #320]
  44f458:	mov	w2, #0x74                  	// #116
  44f45c:	mov	x1, #0x1                   	// #1
  44f460:	strb	w2, [x19]
  44f464:	add	x0, x0, x1
  44f468:	str	x0, [x19, #320]
  44f46c:	add	x0, x1, #0x1
  44f470:	mov	w2, #0x6f                  	// #111
  44f474:	strb	w2, [x19, x1]
  44f478:	add	x1, x0, #0x1
  44f47c:	str	x1, [x19, #256]
  44f480:	mov	w2, #0x72                  	// #114
  44f484:	strb	w2, [x19, x0]
  44f488:	strb	w2, [x19, #264]
  44f48c:	ldr	x20, [x22, #8]
  44f490:	ldrb	w0, [x20]
  44f494:	sub	w0, w0, #0x61
  44f498:	and	w0, w0, #0xff
  44f49c:	cmp	w0, #0x19
  44f4a0:	b.hi	44f4e4 <nftw@plt+0x4c964>  // b.pmore
  44f4a4:	cmp	x1, #0xff
  44f4a8:	b.ne	455f68 <nftw@plt+0x533e8>  // b.any
  44f4ac:	ldp	x3, x2, [x19, #272]
  44f4b0:	strb	wzr, [x19, #255]
  44f4b4:	mov	x0, x19
  44f4b8:	blr	x3
  44f4bc:	ldr	x2, [x19, #320]
  44f4c0:	mov	x1, #0x1                   	// #1
  44f4c4:	mov	x0, #0x0                   	// #0
  44f4c8:	add	x2, x2, x1
  44f4cc:	ldr	x20, [x22, #8]
  44f4d0:	str	x2, [x19, #320]
  44f4d4:	str	x1, [x19, #256]
  44f4d8:	mov	w2, #0x20                  	// #32
  44f4dc:	strb	w2, [x19, x0]
  44f4e0:	strb	w2, [x19, #264]
  44f4e4:	sxtw	x22, w21
  44f4e8:	sub	w0, w21, #0x1
  44f4ec:	add	x2, x20, x22
  44f4f0:	sxtw	x0, w0
  44f4f4:	ldurb	w2, [x2, #-1]
  44f4f8:	cmp	w2, #0x20
  44f4fc:	csel	x22, x22, x0, ne  // ne = any
  44f500:	cbz	x22, 4555d4 <nftw@plt+0x52a54>
  44f504:	add	x22, x20, x22
  44f508:	mov	x23, #0x1                   	// #1
  44f50c:	b	44f568 <nftw@plt+0x4c9e8>
  44f510:	ldp	x3, x2, [x19, #272]
  44f514:	strb	wzr, [x19, #255]
  44f518:	mov	x0, x19
  44f51c:	add	x20, x20, #0x1
  44f520:	blr	x3
  44f524:	strb	w21, [x19]
  44f528:	ldr	x0, [x19, #320]
  44f52c:	str	x23, [x19, #256]
  44f530:	strb	w21, [x19, #264]
  44f534:	cmp	x20, x22
  44f538:	add	x0, x0, #0x1
  44f53c:	str	x0, [x19, #320]
  44f540:	b.eq	4546c8 <nftw@plt+0x51b48>  // b.none
  44f544:	ldrb	w21, [x20]
  44f548:	mov	x0, #0x1                   	// #1
  44f54c:	add	x1, x0, #0x1
  44f550:	str	x1, [x19, #256]
  44f554:	strb	w21, [x19, x0]
  44f558:	add	x20, x20, #0x1
  44f55c:	strb	w21, [x19, #264]
  44f560:	cmp	x22, x20
  44f564:	b.eq	451a74 <nftw@plt+0x4eef4>  // b.none
  44f568:	ldrb	w21, [x20]
  44f56c:	cmp	x1, #0xff
  44f570:	b.eq	44f510 <nftw@plt+0x4c990>  // b.none
  44f574:	mov	x0, x1
  44f578:	b	44f54c <nftw@plt+0x4c9cc>
  44f57c:	ldr	x0, [x19, #256]
  44f580:	cmp	x0, #0xff
  44f584:	b.eq	45384c <nftw@plt+0x50ccc>  // b.none
  44f588:	add	x1, x0, #0x1
  44f58c:	str	x1, [x19, #256]
  44f590:	mov	w2, #0x6f                  	// #111
  44f594:	strb	w2, [x19, x0]
  44f598:	strb	w2, [x19, #264]
  44f59c:	cmp	x1, #0xff
  44f5a0:	b.ne	451fb0 <nftw@plt+0x4f430>  // b.any
  44f5a4:	ldp	x3, x2, [x19, #272]
  44f5a8:	strb	wzr, [x19, #255]
  44f5ac:	mov	x0, x19
  44f5b0:	blr	x3
  44f5b4:	ldr	x0, [x19, #320]
  44f5b8:	mov	w2, #0x6570                	// #25968
  44f5bc:	mov	w1, #0x72                  	// #114
  44f5c0:	mov	x3, #0x3                   	// #3
  44f5c4:	add	x0, x0, #0x1
  44f5c8:	strh	w2, [x19]
  44f5cc:	strb	w1, [x19, #2]
  44f5d0:	str	x0, [x19, #320]
  44f5d4:	add	x1, x3, #0x1
  44f5d8:	str	x1, [x19, #256]
  44f5dc:	mov	w0, #0x61                  	// #97
  44f5e0:	strb	w0, [x19, x3]
  44f5e4:	strb	w0, [x19, #264]
  44f5e8:	cmp	x1, #0xff
  44f5ec:	b.ne	452000 <nftw@plt+0x4f480>  // b.any
  44f5f0:	ldp	x3, x2, [x19, #272]
  44f5f4:	strb	wzr, [x19, #255]
  44f5f8:	mov	x0, x19
  44f5fc:	blr	x3
  44f600:	ldr	x0, [x19, #320]
  44f604:	mov	w2, #0x6f74                	// #28532
  44f608:	mov	x1, #0x2                   	// #2
  44f60c:	strh	w2, [x19]
  44f610:	add	x0, x0, #0x1
  44f614:	str	x0, [x19, #320]
  44f618:	add	x0, x1, #0x1
  44f61c:	mov	w2, #0x72                  	// #114
  44f620:	strb	w2, [x19, x1]
  44f624:	add	x1, x0, #0x1
  44f628:	str	x1, [x19, #256]
  44f62c:	mov	w1, #0x20                  	// #32
  44f630:	strb	w1, [x19, x0]
  44f634:	strb	w1, [x19, #264]
  44f638:	ldr	x20, [x24, #16]
  44f63c:	cbz	x20, 4515e0 <nftw@plt+0x4ea60>
  44f640:	ldr	w0, [x20, #4]
  44f644:	cmp	w0, #0x1
  44f648:	b.gt	4515e0 <nftw@plt+0x4ea60>
  44f64c:	ldr	w1, [x19, #308]
  44f650:	cmp	w1, #0x400
  44f654:	b.gt	4515e0 <nftw@plt+0x4ea60>
  44f658:	ldr	x3, [x19, #328]
  44f65c:	add	w0, w0, #0x1
  44f660:	str	w0, [x20, #4]
  44f664:	add	w1, w1, #0x1
  44f668:	add	x0, sp, #0x80
  44f66c:	str	w1, [x19, #308]
  44f670:	str	x0, [x19, #328]
  44f674:	mov	w1, w22
  44f678:	mov	x0, x19
  44f67c:	mov	x2, x20
  44f680:	stp	x20, x3, [sp, #128]
  44f684:	bl	44d138 <nftw@plt+0x4a5b8>
  44f688:	ldr	w1, [x20, #4]
  44f68c:	ldr	x0, [sp, #136]
  44f690:	sub	w1, w1, #0x1
  44f694:	ldp	x21, x22, [sp, #32]
  44f698:	ldp	x23, x24, [sp, #48]
  44f69c:	str	x0, [x19, #328]
  44f6a0:	ldr	w0, [x19, #308]
  44f6a4:	str	w1, [x20, #4]
  44f6a8:	sub	w0, w0, #0x1
  44f6ac:	str	w0, [x19, #308]
  44f6b0:	b	44d1a0 <nftw@plt+0x4a620>
  44f6b4:	ldr	x20, [x2, #8]
  44f6b8:	cbz	x20, 4513d4 <nftw@plt+0x4e854>
  44f6bc:	ldr	w0, [x20, #4]
  44f6c0:	cmp	w0, #0x1
  44f6c4:	b.gt	4513d4 <nftw@plt+0x4e854>
  44f6c8:	ldr	w1, [x19, #308]
  44f6cc:	cmp	w1, #0x400
  44f6d0:	b.gt	4513d4 <nftw@plt+0x4e854>
  44f6d4:	ldr	x3, [x19, #328]
  44f6d8:	add	w0, w0, #0x1
  44f6dc:	str	w0, [x20, #4]
  44f6e0:	add	w1, w1, #0x1
  44f6e4:	add	x0, sp, #0x80
  44f6e8:	str	w1, [x19, #308]
  44f6ec:	str	x0, [x19, #328]
  44f6f0:	mov	w1, w22
  44f6f4:	mov	x0, x19
  44f6f8:	mov	x2, x20
  44f6fc:	stp	x20, x3, [sp, #128]
  44f700:	bl	44d138 <nftw@plt+0x4a5b8>
  44f704:	ldr	w1, [x20, #4]
  44f708:	ldr	x0, [sp, #136]
  44f70c:	str	x0, [x19, #328]
  44f710:	ldr	w0, [x19, #308]
  44f714:	sub	w1, w1, #0x1
  44f718:	str	w1, [x20, #4]
  44f71c:	sub	w0, w0, #0x1
  44f720:	str	w0, [x19, #308]
  44f724:	ldr	x0, [x19, #256]
  44f728:	cmp	x0, #0xff
  44f72c:	b.eq	452f84 <nftw@plt+0x50404>  // b.none
  44f730:	add	x1, x0, #0x1
  44f734:	str	x1, [x19, #256]
  44f738:	mov	w2, #0x20                  	// #32
  44f73c:	strb	w2, [x19, x0]
  44f740:	strb	w2, [x19, #264]
  44f744:	cmp	x1, #0xff
  44f748:	b.ne	452894 <nftw@plt+0x4fd14>  // b.any
  44f74c:	ldp	x3, x2, [x19, #272]
  44f750:	strb	wzr, [x19, #255]
  44f754:	mov	x0, x19
  44f758:	blr	x3
  44f75c:	ldr	x0, [x19, #320]
  44f760:	mov	w3, #0x635b                	// #25435
  44f764:	mov	w2, #0x6c                  	// #108
  44f768:	mov	x1, #0x3                   	// #3
  44f76c:	add	x0, x0, #0x1
  44f770:	strh	w3, [x19]
  44f774:	strb	w2, [x19, #2]
  44f778:	str	x0, [x19, #320]
  44f77c:	add	x0, x1, #0x1
  44f780:	str	x0, [x19, #256]
  44f784:	mov	w2, #0x6f                  	// #111
  44f788:	strb	w2, [x19, x1]
  44f78c:	strb	w2, [x19, #264]
  44f790:	cmp	x0, #0xff
  44f794:	b.ne	4528e4 <nftw@plt+0x4fd64>  // b.any
  44f798:	ldp	x3, x2, [x19, #272]
  44f79c:	strb	wzr, [x19, #255]
  44f7a0:	mov	x1, x0
  44f7a4:	mov	x0, x19
  44f7a8:	blr	x3
  44f7ac:	ldr	x0, [x19, #320]
  44f7b0:	mov	w1, #0x6e                  	// #110
  44f7b4:	mov	x2, #0x1                   	// #1
  44f7b8:	strb	w1, [x19]
  44f7bc:	add	x0, x0, x2
  44f7c0:	str	x0, [x19, #320]
  44f7c4:	add	x1, x2, #0x1
  44f7c8:	mov	w0, #0x65                  	// #101
  44f7cc:	strb	w0, [x19, x2]
  44f7d0:	add	x0, x1, #0x1
  44f7d4:	str	x0, [x19, #256]
  44f7d8:	mov	w2, #0x20                  	// #32
  44f7dc:	strb	w2, [x19, x1]
  44f7e0:	strb	w2, [x19, #264]
  44f7e4:	ldr	x20, [x24, #16]
  44f7e8:	cbz	x20, 451580 <nftw@plt+0x4ea00>
  44f7ec:	ldr	w1, [x20, #4]
  44f7f0:	cmp	w1, #0x1
  44f7f4:	b.gt	451580 <nftw@plt+0x4ea00>
  44f7f8:	ldr	w2, [x19, #308]
  44f7fc:	cmp	w2, #0x400
  44f800:	b.gt	451580 <nftw@plt+0x4ea00>
  44f804:	ldr	x3, [x19, #328]
  44f808:	add	w1, w1, #0x1
  44f80c:	str	w1, [x20, #4]
  44f810:	add	w2, w2, #0x1
  44f814:	add	x0, sp, #0x80
  44f818:	str	w2, [x19, #308]
  44f81c:	str	x0, [x19, #328]
  44f820:	mov	w1, w22
  44f824:	mov	x2, x20
  44f828:	mov	x0, x19
  44f82c:	stp	x20, x3, [sp, #128]
  44f830:	bl	44d138 <nftw@plt+0x4a5b8>
  44f834:	ldr	w2, [x20, #4]
  44f838:	ldr	x0, [sp, #136]
  44f83c:	str	x0, [x19, #328]
  44f840:	ldr	w1, [x19, #308]
  44f844:	sub	w2, w2, #0x1
  44f848:	ldr	x0, [x19, #256]
  44f84c:	str	w2, [x20, #4]
  44f850:	sub	w1, w1, #0x1
  44f854:	str	w1, [x19, #308]
  44f858:	add	x1, x0, #0x1
  44f85c:	cmp	x0, #0xff
  44f860:	b.ne	44f88c <nftw@plt+0x4cd0c>  // b.any
  44f864:	ldp	x3, x2, [x19, #272]
  44f868:	strb	wzr, [x19, #255]
  44f86c:	mov	x1, x0
  44f870:	mov	x0, x19
  44f874:	blr	x3
  44f878:	ldr	x2, [x19, #320]
  44f87c:	mov	x1, #0x1                   	// #1
  44f880:	mov	x0, #0x0                   	// #0
  44f884:	add	x2, x2, x1
  44f888:	str	x2, [x19, #320]
  44f88c:	str	x1, [x19, #256]
  44f890:	mov	w1, #0x5d                  	// #93
  44f894:	strb	w1, [x19, x0]
  44f898:	strb	w1, [x19, #264]
  44f89c:	ldp	x21, x22, [sp, #32]
  44f8a0:	ldp	x23, x24, [sp, #48]
  44f8a4:	b	44d1a0 <nftw@plt+0x4a620>
  44f8a8:	ldr	x2, [x2, #8]
  44f8ac:	mov	w1, w22
  44f8b0:	mov	x0, x19
  44f8b4:	bl	456050 <nftw@plt+0x534d0>
  44f8b8:	ldp	x21, x22, [sp, #32]
  44f8bc:	ldp	x23, x24, [sp, #48]
  44f8c0:	b	44d1a0 <nftw@plt+0x4a620>
  44f8c4:	ldp	x21, x20, [x2, #8]
  44f8c8:	ldr	w0, [x21]
  44f8cc:	cmp	w0, #0x32
  44f8d0:	b.eq	453bcc <nftw@plt+0x5104c>  // b.none
  44f8d4:	cmp	w0, #0x34
  44f8d8:	b.ne	455f80 <nftw@plt+0x53400>  // b.any
  44f8dc:	ldr	x1, [x19, #256]
  44f8e0:	add	x0, x1, #0x1
  44f8e4:	cmp	x1, #0xff
  44f8e8:	b.ne	44f910 <nftw@plt+0x4cd90>  // b.any
  44f8ec:	ldp	x3, x2, [x19, #272]
  44f8f0:	strb	wzr, [x19, #255]
  44f8f4:	mov	x0, x19
  44f8f8:	blr	x3
  44f8fc:	ldr	x2, [x19, #320]
  44f900:	mov	x0, #0x1                   	// #1
  44f904:	mov	x1, #0x0                   	// #0
  44f908:	add	x2, x2, x0
  44f90c:	str	x2, [x19, #320]
  44f910:	str	x0, [x19, #256]
  44f914:	mov	w2, #0x28                  	// #40
  44f918:	strb	w2, [x19, x1]
  44f91c:	strb	w2, [x19, #264]
  44f920:	ldr	x21, [x21, #8]
  44f924:	cbz	x21, 4546b0 <nftw@plt+0x51b30>
  44f928:	ldr	w1, [x21, #4]
  44f92c:	cmp	w1, #0x1
  44f930:	b.gt	4546b0 <nftw@plt+0x51b30>
  44f934:	ldr	w2, [x19, #308]
  44f938:	cmp	w2, #0x400
  44f93c:	b.gt	4546b0 <nftw@plt+0x51b30>
  44f940:	ldr	x3, [x19, #328]
  44f944:	add	w1, w1, #0x1
  44f948:	str	w1, [x21, #4]
  44f94c:	add	w2, w2, #0x1
  44f950:	add	x0, sp, #0x80
  44f954:	str	w2, [x19, #308]
  44f958:	str	x0, [x19, #328]
  44f95c:	mov	w1, w22
  44f960:	mov	x2, x21
  44f964:	mov	x0, x19
  44f968:	stp	x21, x3, [sp, #128]
  44f96c:	bl	44d138 <nftw@plt+0x4a5b8>
  44f970:	ldr	w2, [x21, #4]
  44f974:	ldr	x0, [sp, #136]
  44f978:	str	x0, [x19, #328]
  44f97c:	ldr	w1, [x19, #308]
  44f980:	sub	w2, w2, #0x1
  44f984:	ldr	x0, [x19, #256]
  44f988:	str	w2, [x21, #4]
  44f98c:	sub	w1, w1, #0x1
  44f990:	str	w1, [x19, #308]
  44f994:	add	x1, x0, #0x1
  44f998:	cmp	x0, #0xff
  44f99c:	b.ne	44f9c8 <nftw@plt+0x4ce48>  // b.any
  44f9a0:	ldp	x3, x2, [x19, #272]
  44f9a4:	strb	wzr, [x19, #255]
  44f9a8:	mov	x1, x0
  44f9ac:	mov	x0, x19
  44f9b0:	blr	x3
  44f9b4:	ldr	x2, [x19, #320]
  44f9b8:	mov	x1, #0x1                   	// #1
  44f9bc:	mov	x0, #0x0                   	// #0
  44f9c0:	add	x2, x2, x1
  44f9c4:	str	x2, [x19, #320]
  44f9c8:	str	x1, [x19, #256]
  44f9cc:	mov	w1, #0x29                  	// #41
  44f9d0:	strb	w1, [x19, x0]
  44f9d4:	strb	w1, [x19, #264]
  44f9d8:	mov	w1, w22
  44f9dc:	mov	x2, x20
  44f9e0:	mov	x0, x19
  44f9e4:	bl	4561b8 <nftw@plt+0x53638>
  44f9e8:	ldp	x21, x22, [sp, #32]
  44f9ec:	ldp	x23, x24, [sp, #48]
  44f9f0:	b	44d1a0 <nftw@plt+0x4a620>
  44f9f4:	ldr	x0, [x2, #16]
  44f9f8:	ldr	w0, [x0]
  44f9fc:	cmp	w0, #0x39
  44fa00:	b.ne	44d1cc <nftw@plt+0x4a64c>  // b.any
  44fa04:	ldr	x2, [x2, #8]
  44fa08:	ldr	x0, [x2, #8]
  44fa0c:	ldr	x0, [x0]
  44fa10:	ldrb	w1, [x0, #1]
  44fa14:	cmp	w1, #0x63
  44fa18:	b.eq	4551d8 <nftw@plt+0x52658>  // b.none
  44fa1c:	add	x3, x24, #0x10
  44fa20:	mov	w1, w22
  44fa24:	mov	x0, x19
  44fa28:	bl	456308 <nftw@plt+0x53788>
  44fa2c:	cbnz	w0, 455428 <nftw@plt+0x528a8>
  44fa30:	ldr	x0, [x24, #8]
  44fa34:	ldr	w1, [x0]
  44fa38:	cmp	w1, #0x32
  44fa3c:	b.eq	4559d8 <nftw@plt+0x52e58>  // b.none
  44fa40:	ldr	x0, [x0, #8]
  44fa44:	ldr	x1, [x0]
  44fa48:	ldrb	w0, [x1]
  44fa4c:	subs	w0, w0, #0x63
  44fa50:	b.ne	44fa64 <nftw@plt+0x4cee4>  // b.any
  44fa54:	ldrb	w0, [x1, #1]
  44fa58:	subs	w0, w0, #0x6c
  44fa5c:	b.ne	44fa64 <nftw@plt+0x4cee4>  // b.any
  44fa60:	ldrb	w0, [x1, #2]
  44fa64:	ldr	x1, [x24, #16]
  44fa68:	ldr	x2, [x1, #8]
  44fa6c:	cbnz	w0, 44fa7c <nftw@plt+0x4cefc>
  44fa70:	ldr	w0, [x2]
  44fa74:	cmp	w0, #0x3
  44fa78:	b.eq	455af8 <nftw@plt+0x52f78>  // b.none
  44fa7c:	mov	w1, w22
  44fa80:	mov	x0, x19
  44fa84:	bl	4561b8 <nftw@plt+0x53638>
  44fa88:	ldr	x2, [x24, #8]
  44fa8c:	ldr	x0, [x2, #8]
  44fa90:	ldr	x0, [x0]
  44fa94:	ldrb	w1, [x0]
  44fa98:	cmp	w1, #0x69
  44fa9c:	b.ne	4554f0 <nftw@plt+0x52970>  // b.any
  44faa0:	ldrb	w3, [x0, #1]
  44faa4:	cmp	w3, #0x78
  44faa8:	b.ne	4554f0 <nftw@plt+0x52970>  // b.any
  44faac:	ldrb	w3, [x0, #2]
  44fab0:	cbnz	w3, 4554f0 <nftw@plt+0x52970>
  44fab4:	ldr	x1, [x19, #256]
  44fab8:	cmp	x1, #0xff
  44fabc:	b.ne	44fae4 <nftw@plt+0x4cf64>  // b.any
  44fac0:	ldp	x3, x2, [x19, #272]
  44fac4:	strb	wzr, [x19, #255]
  44fac8:	mov	x0, x19
  44facc:	blr	x3
  44fad0:	str	xzr, [x19, #256]
  44fad4:	ldr	x0, [x19, #320]
  44fad8:	mov	x1, #0x0                   	// #0
  44fadc:	add	x0, x0, #0x1
  44fae0:	str	x0, [x19, #320]
  44fae4:	add	x0, x1, #0x1
  44fae8:	str	x0, [x19, #256]
  44faec:	mov	w0, #0x5b                  	// #91
  44faf0:	strb	w0, [x19, x1]
  44faf4:	strb	w0, [x19, #264]
  44faf8:	mov	w1, w22
  44fafc:	mov	x0, x19
  44fb00:	ldr	x2, [x24, #16]
  44fb04:	ldr	x2, [x2, #16]
  44fb08:	bl	455fb8 <nftw@plt+0x53438>
  44fb0c:	ldr	x1, [x19, #256]
  44fb10:	cmp	x1, #0xff
  44fb14:	b.ne	44fb3c <nftw@plt+0x4cfbc>  // b.any
  44fb18:	ldp	x3, x2, [x19, #272]
  44fb1c:	strb	wzr, [x19, #255]
  44fb20:	mov	x0, x19
  44fb24:	blr	x3
  44fb28:	str	xzr, [x19, #256]
  44fb2c:	ldr	x0, [x19, #320]
  44fb30:	mov	x1, #0x0                   	// #0
  44fb34:	add	x0, x0, #0x1
  44fb38:	str	x0, [x19, #320]
  44fb3c:	add	x0, x1, #0x1
  44fb40:	str	x0, [x19, #256]
  44fb44:	mov	w0, #0x5d                  	// #93
  44fb48:	strb	w0, [x19, x1]
  44fb4c:	strb	w0, [x19, #264]
  44fb50:	ldr	x0, [x24, #8]
  44fb54:	ldr	w1, [x0]
  44fb58:	cmp	w1, #0x32
  44fb5c:	b.eq	455a44 <nftw@plt+0x52ec4>  // b.none
  44fb60:	ldp	x21, x22, [sp, #32]
  44fb64:	ldp	x23, x24, [sp, #48]
  44fb68:	b	44d1a0 <nftw@plt+0x4a620>
  44fb6c:	adrp	x20, 480000 <_obstack_memory_used@@Base+0x1ebb8>
  44fb70:	add	x20, x20, #0xd70
  44fb74:	mov	x23, #0x1                   	// #1
  44fb78:	stp	x25, x26, [sp, #64]
  44fb7c:	add	x25, x20, #0x10
  44fb80:	ldr	x1, [x19, #256]
  44fb84:	b	44fbe0 <nftw@plt+0x4d060>
  44fb88:	ldp	x3, x2, [x19, #272]
  44fb8c:	strb	wzr, [x19, #255]
  44fb90:	mov	x0, x19
  44fb94:	add	x20, x20, #0x1
  44fb98:	blr	x3
  44fb9c:	strb	w21, [x19]
  44fba0:	ldr	x0, [x19, #320]
  44fba4:	str	x23, [x19, #256]
  44fba8:	strb	w21, [x19, #264]
  44fbac:	cmp	x25, x20
  44fbb0:	add	x0, x0, #0x1
  44fbb4:	str	x0, [x19, #320]
  44fbb8:	b.eq	450bb0 <nftw@plt+0x4e030>  // b.none
  44fbbc:	ldrb	w21, [x20]
  44fbc0:	mov	x0, #0x1                   	// #1
  44fbc4:	add	x1, x0, #0x1
  44fbc8:	str	x1, [x19, #256]
  44fbcc:	strb	w21, [x19, x0]
  44fbd0:	add	x20, x20, #0x1
  44fbd4:	strb	w21, [x19, #264]
  44fbd8:	cmp	x25, x20
  44fbdc:	b.eq	450bb0 <nftw@plt+0x4e030>  // b.none
  44fbe0:	ldrb	w21, [x20]
  44fbe4:	cmp	x1, #0xff
  44fbe8:	b.eq	44fb88 <nftw@plt+0x4d008>  // b.none
  44fbec:	mov	x0, x1
  44fbf0:	b	44fbc4 <nftw@plt+0x4d044>
  44fbf4:	ldrsw	x22, [x2, #16]
  44fbf8:	ldr	x20, [x2, #8]
  44fbfc:	cbz	x22, 4555ec <nftw@plt+0x52a6c>
  44fc00:	add	x22, x20, x22
  44fc04:	mov	x23, #0x1                   	// #1
  44fc08:	ldr	x1, [x19, #256]
  44fc0c:	b	44fc68 <nftw@plt+0x4d0e8>
  44fc10:	ldp	x3, x2, [x19, #272]
  44fc14:	strb	wzr, [x19, #255]
  44fc18:	mov	x0, x19
  44fc1c:	add	x20, x20, #0x1
  44fc20:	blr	x3
  44fc24:	strb	w21, [x19]
  44fc28:	ldr	x0, [x19, #320]
  44fc2c:	str	x23, [x19, #256]
  44fc30:	strb	w21, [x19, #264]
  44fc34:	cmp	x20, x22
  44fc38:	add	x0, x0, #0x1
  44fc3c:	str	x0, [x19, #320]
  44fc40:	b.eq	4546d4 <nftw@plt+0x51b54>  // b.none
  44fc44:	ldrb	w21, [x20]
  44fc48:	mov	x0, #0x1                   	// #1
  44fc4c:	add	x1, x0, #0x1
  44fc50:	str	x1, [x19, #256]
  44fc54:	strb	w21, [x19, x0]
  44fc58:	add	x20, x20, #0x1
  44fc5c:	strb	w21, [x19, #264]
  44fc60:	cmp	x22, x20
  44fc64:	b.eq	451a80 <nftw@plt+0x4ef00>  // b.none
  44fc68:	ldrb	w21, [x20]
  44fc6c:	cmp	x1, #0xff
  44fc70:	b.eq	44fc10 <nftw@plt+0x4d090>  // b.none
  44fc74:	mov	x0, x1
  44fc78:	b	44fc4c <nftw@plt+0x4d0cc>
  44fc7c:	ldr	w2, [x2, #8]
  44fc80:	adrp	x1, 473000 <_obstack_memory_used@@Base+0x11bb8>
  44fc84:	add	x1, x1, #0x1f8
  44fc88:	add	x0, sp, #0x80
  44fc8c:	bl	4025b0 <sprintf@plt>
  44fc90:	add	x0, sp, #0x80
  44fc94:	bl	4024f0 <strlen@plt>
  44fc98:	cbz	x0, 4555e0 <nftw@plt+0x52a60>
  44fc9c:	add	x20, sp, #0x80
  44fca0:	mov	x23, #0x1                   	// #1
  44fca4:	add	x22, x20, x0
  44fca8:	ldr	x1, [x19, #256]
  44fcac:	b	44fd08 <nftw@plt+0x4d188>
  44fcb0:	ldp	x3, x2, [x19, #272]
  44fcb4:	strb	wzr, [x19, #255]
  44fcb8:	mov	x0, x19
  44fcbc:	add	x20, x20, #0x1
  44fcc0:	blr	x3
  44fcc4:	strb	w21, [x19]
  44fcc8:	ldr	x0, [x19, #320]
  44fccc:	str	x23, [x19, #256]
  44fcd0:	strb	w21, [x19, #264]
  44fcd4:	cmp	x20, x22
  44fcd8:	add	x0, x0, #0x1
  44fcdc:	str	x0, [x19, #320]
  44fce0:	b.eq	4546bc <nftw@plt+0x51b3c>  // b.none
  44fce4:	ldrb	w21, [x20]
  44fce8:	mov	x0, #0x1                   	// #1
  44fcec:	add	x1, x0, #0x1
  44fcf0:	str	x1, [x19, #256]
  44fcf4:	strb	w21, [x19, x0]
  44fcf8:	add	x20, x20, #0x1
  44fcfc:	strb	w21, [x19, #264]
  44fd00:	cmp	x22, x20
  44fd04:	b.eq	451a8c <nftw@plt+0x4ef0c>  // b.none
  44fd08:	ldrb	w21, [x20]
  44fd0c:	cmp	x1, #0xff
  44fd10:	b.eq	44fcb0 <nftw@plt+0x4d130>  // b.none
  44fd14:	mov	x0, x1
  44fd18:	b	44fcec <nftw@plt+0x4d16c>
  44fd1c:	ldr	x0, [x19, #256]
  44fd20:	cmp	x0, #0xff
  44fd24:	b.eq	451998 <nftw@plt+0x4ee18>  // b.none
  44fd28:	add	x1, x0, #0x1
  44fd2c:	str	x1, [x19, #256]
  44fd30:	mov	w2, #0x64                  	// #100
  44fd34:	strb	w2, [x19, x0]
  44fd38:	strb	w2, [x19, #264]
  44fd3c:	cmp	x1, #0xff
  44fd40:	b.ne	452d38 <nftw@plt+0x501b8>  // b.any
  44fd44:	ldp	x3, x2, [x19, #272]
  44fd48:	strb	wzr, [x19, #255]
  44fd4c:	mov	x0, x19
  44fd50:	blr	x3
  44fd54:	ldr	x0, [x19, #320]
  44fd58:	mov	w3, #0x6365                	// #25445
  44fd5c:	mov	w2, #0x6c                  	// #108
  44fd60:	mov	x1, #0x3                   	// #3
  44fd64:	add	x0, x0, #0x1
  44fd68:	strh	w3, [x19]
  44fd6c:	strb	w2, [x19, #2]
  44fd70:	str	x0, [x19, #320]
  44fd74:	add	x0, x1, #0x1
  44fd78:	str	x0, [x19, #256]
  44fd7c:	mov	w2, #0x74                  	// #116
  44fd80:	strb	w2, [x19, x1]
  44fd84:	strb	w2, [x19, #264]
  44fd88:	cmp	x0, #0xff
  44fd8c:	b.ne	452d88 <nftw@plt+0x50208>  // b.any
  44fd90:	ldp	x3, x2, [x19, #272]
  44fd94:	strb	wzr, [x19, #255]
  44fd98:	mov	x1, x0
  44fd9c:	mov	x0, x19
  44fda0:	blr	x3
  44fda4:	ldr	x0, [x19, #320]
  44fda8:	mov	w2, #0x7079                	// #28793
  44fdac:	mov	w1, #0x65                  	// #101
  44fdb0:	mov	x3, #0x3                   	// #3
  44fdb4:	add	x0, x0, #0x1
  44fdb8:	strh	w2, [x19]
  44fdbc:	strb	w1, [x19, #2]
  44fdc0:	str	x0, [x19, #320]
  44fdc4:	add	x1, x3, #0x1
  44fdc8:	str	x1, [x19, #256]
  44fdcc:	mov	w0, #0x20                  	// #32
  44fdd0:	strb	w0, [x19, x3]
  44fdd4:	strb	w0, [x19, #264]
  44fdd8:	cmp	x1, #0xff
  44fddc:	b.ne	451a60 <nftw@plt+0x4eee0>  // b.any
  44fde0:	ldp	x3, x2, [x19, #272]
  44fde4:	strb	wzr, [x19, #255]
  44fde8:	mov	x0, x19
  44fdec:	blr	x3
  44fdf0:	ldr	x2, [x19, #320]
  44fdf4:	mov	x0, #0x1                   	// #1
  44fdf8:	mov	x1, #0x0                   	// #0
  44fdfc:	add	x2, x2, x0
  44fe00:	str	x2, [x19, #320]
  44fe04:	str	x0, [x19, #256]
  44fe08:	mov	w2, #0x28                  	// #40
  44fe0c:	strb	w2, [x19, x1]
  44fe10:	strb	w2, [x19, #264]
  44fe14:	ldr	x20, [x24, #8]
  44fe18:	cbz	x20, 4513b0 <nftw@plt+0x4e830>
  44fe1c:	ldr	w1, [x20, #4]
  44fe20:	cmp	w1, #0x1
  44fe24:	b.gt	4513b0 <nftw@plt+0x4e830>
  44fe28:	ldr	w2, [x19, #308]
  44fe2c:	cmp	w2, #0x400
  44fe30:	b.gt	4513b0 <nftw@plt+0x4e830>
  44fe34:	ldr	x3, [x19, #328]
  44fe38:	add	w1, w1, #0x1
  44fe3c:	str	w1, [x20, #4]
  44fe40:	add	w2, w2, #0x1
  44fe44:	add	x0, sp, #0x80
  44fe48:	str	w2, [x19, #308]
  44fe4c:	str	x0, [x19, #328]
  44fe50:	mov	w1, w22
  44fe54:	mov	x2, x20
  44fe58:	mov	x0, x19
  44fe5c:	stp	x20, x3, [sp, #128]
  44fe60:	bl	44d138 <nftw@plt+0x4a5b8>
  44fe64:	ldr	w2, [x20, #4]
  44fe68:	ldr	x0, [sp, #136]
  44fe6c:	str	x0, [x19, #328]
  44fe70:	ldr	w1, [x19, #308]
  44fe74:	sub	w2, w2, #0x1
  44fe78:	ldr	x0, [x19, #256]
  44fe7c:	str	w2, [x20, #4]
  44fe80:	sub	w1, w1, #0x1
  44fe84:	str	w1, [x19, #308]
  44fe88:	add	x1, x0, #0x1
  44fe8c:	cmp	x0, #0xff
  44fe90:	b.ne	44febc <nftw@plt+0x4d33c>  // b.any
  44fe94:	ldp	x3, x2, [x19, #272]
  44fe98:	strb	wzr, [x19, #255]
  44fe9c:	mov	x1, x0
  44fea0:	mov	x0, x19
  44fea4:	blr	x3
  44fea8:	ldr	x2, [x19, #320]
  44feac:	mov	x1, #0x1                   	// #1
  44feb0:	mov	x0, #0x0                   	// #0
  44feb4:	add	x2, x2, x1
  44feb8:	str	x2, [x19, #320]
  44febc:	str	x1, [x19, #256]
  44fec0:	mov	w1, #0x29                  	// #41
  44fec4:	strb	w1, [x19, x0]
  44fec8:	strb	w1, [x19, #264]
  44fecc:	ldp	x21, x22, [sp, #32]
  44fed0:	ldp	x23, x24, [sp, #48]
  44fed4:	b	44d1a0 <nftw@plt+0x4a620>
  44fed8:	adrp	x20, 480000 <_obstack_memory_used@@Base+0x1ebb8>
  44fedc:	add	x20, x20, #0xec0
  44fee0:	mov	x23, #0x1                   	// #1
  44fee4:	stp	x25, x26, [sp, #64]
  44fee8:	add	x25, x20, #0x1d
  44feec:	ldr	x1, [x19, #256]
  44fef0:	b	44ff4c <nftw@plt+0x4d3cc>
  44fef4:	ldp	x3, x2, [x19, #272]
  44fef8:	strb	wzr, [x19, #255]
  44fefc:	mov	x0, x19
  44ff00:	add	x20, x20, #0x1
  44ff04:	blr	x3
  44ff08:	strb	w21, [x19]
  44ff0c:	ldr	x0, [x19, #320]
  44ff10:	str	x23, [x19, #256]
  44ff14:	strb	w21, [x19, #264]
  44ff18:	cmp	x20, x25
  44ff1c:	add	x0, x0, #0x1
  44ff20:	str	x0, [x19, #320]
  44ff24:	b.eq	450cb0 <nftw@plt+0x4e130>  // b.none
  44ff28:	ldrb	w21, [x20]
  44ff2c:	mov	x0, #0x1                   	// #1
  44ff30:	add	x1, x0, #0x1
  44ff34:	str	x1, [x19, #256]
  44ff38:	strb	w21, [x19, x0]
  44ff3c:	add	x20, x20, #0x1
  44ff40:	strb	w21, [x19, #264]
  44ff44:	cmp	x25, x20
  44ff48:	b.eq	450cb0 <nftw@plt+0x4e130>  // b.none
  44ff4c:	ldrb	w21, [x20]
  44ff50:	cmp	x1, #0xff
  44ff54:	b.eq	44fef4 <nftw@plt+0x4d374>  // b.none
  44ff58:	mov	x0, x1
  44ff5c:	b	44ff30 <nftw@plt+0x4d3b0>
  44ff60:	ldr	x1, [x19, #256]
  44ff64:	add	x0, x1, #0x1
  44ff68:	cmp	x1, #0xff
  44ff6c:	b.ne	44ff94 <nftw@plt+0x4d414>  // b.any
  44ff70:	ldp	x3, x2, [x19, #272]
  44ff74:	strb	wzr, [x19, #255]
  44ff78:	mov	x0, x19
  44ff7c:	blr	x3
  44ff80:	ldr	x2, [x19, #320]
  44ff84:	mov	x0, #0x1                   	// #1
  44ff88:	mov	x1, #0x0                   	// #0
  44ff8c:	add	x2, x2, x0
  44ff90:	str	x2, [x19, #320]
  44ff94:	str	x0, [x19, #256]
  44ff98:	mov	w0, #0x7e                  	// #126
  44ff9c:	strb	w0, [x19, x1]
  44ffa0:	strb	w0, [x19, #264]
  44ffa4:	ldr	x20, [x24, #16]
  44ffa8:	cbz	x20, 45139c <nftw@plt+0x4e81c>
  44ffac:	ldr	w0, [x20, #4]
  44ffb0:	cmp	w0, #0x1
  44ffb4:	b.gt	45139c <nftw@plt+0x4e81c>
  44ffb8:	ldr	w1, [x19, #308]
  44ffbc:	cmp	w1, #0x400
  44ffc0:	b.gt	45139c <nftw@plt+0x4e81c>
  44ffc4:	ldr	x3, [x19, #328]
  44ffc8:	add	w0, w0, #0x1
  44ffcc:	str	w0, [x20, #4]
  44ffd0:	add	w1, w1, #0x1
  44ffd4:	add	x0, sp, #0x80
  44ffd8:	str	w1, [x19, #308]
  44ffdc:	str	x0, [x19, #328]
  44ffe0:	mov	w1, w22
  44ffe4:	mov	x0, x19
  44ffe8:	mov	x2, x20
  44ffec:	stp	x20, x3, [sp, #128]
  44fff0:	bl	44d138 <nftw@plt+0x4a5b8>
  44fff4:	ldr	w1, [x20, #4]
  44fff8:	ldr	x0, [sp, #136]
  44fffc:	sub	w1, w1, #0x1
  450000:	ldp	x21, x22, [sp, #32]
  450004:	ldp	x23, x24, [sp, #48]
  450008:	str	x0, [x19, #328]
  45000c:	ldr	w0, [x19, #308]
  450010:	str	w1, [x20, #4]
  450014:	sub	w0, w0, #0x1
  450018:	str	w0, [x19, #308]
  45001c:	b	44d1a0 <nftw@plt+0x4a620>
  450020:	ldr	x0, [x19, #256]
  450024:	cmp	x0, #0xff
  450028:	b.eq	452b34 <nftw@plt+0x4ffb4>  // b.none
  45002c:	add	x1, x0, #0x1
  450030:	str	x1, [x19, #256]
  450034:	mov	w2, #0x76                  	// #118
  450038:	strb	w2, [x19, x0]
  45003c:	strb	w2, [x19, #264]
  450040:	cmp	x1, #0xff
  450044:	b.ne	452274 <nftw@plt+0x4f6f4>  // b.any
  450048:	ldp	x3, x2, [x19, #272]
  45004c:	strb	wzr, [x19, #255]
  450050:	mov	x0, x19
  450054:	blr	x3
  450058:	ldr	x0, [x19, #320]
  45005c:	mov	w2, #0x6174                	// #24948
  450060:	mov	w1, #0x62                  	// #98
  450064:	mov	x3, #0x3                   	// #3
  450068:	add	x0, x0, #0x1
  45006c:	strh	w2, [x19]
  450070:	strb	w1, [x19, #2]
  450074:	str	x0, [x19, #320]
  450078:	add	x1, x3, #0x1
  45007c:	str	x1, [x19, #256]
  450080:	mov	w0, #0x6c                  	// #108
  450084:	strb	w0, [x19, x3]
  450088:	strb	w0, [x19, #264]
  45008c:	cmp	x1, #0xff
  450090:	b.ne	4522c4 <nftw@plt+0x4f744>  // b.any
  450094:	ldp	x3, x2, [x19, #272]
  450098:	strb	wzr, [x19, #255]
  45009c:	mov	x0, x19
  4500a0:	blr	x3
  4500a4:	ldr	x1, [x19, #320]
  4500a8:	mov	w3, #0x2065                	// #8293
  4500ac:	mov	w2, #0x66                  	// #102
  4500b0:	mov	x0, #0x3                   	// #3
  4500b4:	add	x1, x1, #0x1
  4500b8:	strh	w3, [x19]
  4500bc:	strb	w2, [x19, #2]
  4500c0:	str	x1, [x19, #320]
  4500c4:	add	x1, x0, #0x1
  4500c8:	str	x1, [x19, #256]
  4500cc:	mov	w2, #0x6f                  	// #111
  4500d0:	strb	w2, [x19, x0]
  4500d4:	strb	w2, [x19, #264]
  4500d8:	cmp	x1, #0xff
  4500dc:	b.ne	452314 <nftw@plt+0x4f794>  // b.any
  4500e0:	ldp	x3, x2, [x19, #272]
  4500e4:	strb	wzr, [x19, #255]
  4500e8:	mov	x0, x19
  4500ec:	blr	x3
  4500f0:	ldr	x1, [x19, #320]
  4500f4:	mov	w2, #0x72                  	// #114
  4500f8:	mov	x0, #0x1                   	// #1
  4500fc:	strb	w2, [x19]
  450100:	add	x1, x1, x0
  450104:	str	x1, [x19, #320]
  450108:	add	x1, x0, #0x1
  45010c:	str	x1, [x19, #256]
  450110:	mov	w1, #0x20                  	// #32
  450114:	strb	w1, [x19, x0]
  450118:	strb	w1, [x19, #264]
  45011c:	ldr	x20, [x24, #8]
  450120:	cbz	x20, 4514d0 <nftw@plt+0x4e950>
  450124:	ldr	w0, [x20, #4]
  450128:	cmp	w0, #0x1
  45012c:	b.gt	4514d0 <nftw@plt+0x4e950>
  450130:	ldr	w1, [x19, #308]
  450134:	cmp	w1, #0x400
  450138:	b.gt	4514d0 <nftw@plt+0x4e950>
  45013c:	ldr	x3, [x19, #328]
  450140:	add	w0, w0, #0x1
  450144:	str	w0, [x20, #4]
  450148:	add	w1, w1, #0x1
  45014c:	add	x0, sp, #0x80
  450150:	str	w1, [x19, #308]
  450154:	str	x0, [x19, #328]
  450158:	mov	w1, w22
  45015c:	mov	x0, x19
  450160:	mov	x2, x20
  450164:	stp	x20, x3, [sp, #128]
  450168:	bl	44d138 <nftw@plt+0x4a5b8>
  45016c:	ldr	w1, [x20, #4]
  450170:	ldr	x0, [sp, #136]
  450174:	sub	w1, w1, #0x1
  450178:	ldp	x21, x22, [sp, #32]
  45017c:	ldp	x23, x24, [sp, #48]
  450180:	str	x0, [x19, #328]
  450184:	ldr	w0, [x19, #308]
  450188:	str	w1, [x20, #4]
  45018c:	sub	w0, w0, #0x1
  450190:	str	w0, [x19, #308]
  450194:	b	44d1a0 <nftw@plt+0x4a620>
  450198:	ldr	x0, [x19, #256]
  45019c:	cmp	x0, #0xff
  4501a0:	b.eq	453734 <nftw@plt+0x50bb4>  // b.none
  4501a4:	add	x1, x0, #0x1
  4501a8:	str	x1, [x19, #256]
  4501ac:	mov	w2, #0x74                  	// #116
  4501b0:	strb	w2, [x19, x0]
  4501b4:	strb	w2, [x19, #264]
  4501b8:	cmp	x1, #0xff
  4501bc:	b.ne	452400 <nftw@plt+0x4f880>  // b.any
  4501c0:	ldp	x3, x2, [x19, #272]
  4501c4:	strb	wzr, [x19, #255]
  4501c8:	mov	x0, x19
  4501cc:	blr	x3
  4501d0:	ldr	x0, [x19, #320]
  4501d4:	mov	w2, #0x7079                	// #28793
  4501d8:	mov	w1, #0x65                  	// #101
  4501dc:	mov	x3, #0x3                   	// #3
  4501e0:	add	x0, x0, #0x1
  4501e4:	strh	w2, [x19]
  4501e8:	strb	w1, [x19, #2]
  4501ec:	str	x0, [x19, #320]
  4501f0:	add	x1, x3, #0x1
  4501f4:	str	x1, [x19, #256]
  4501f8:	mov	w0, #0x69                  	// #105
  4501fc:	strb	w0, [x19, x3]
  450200:	strb	w0, [x19, #264]
  450204:	cmp	x1, #0xff
  450208:	b.ne	452450 <nftw@plt+0x4f8d0>  // b.any
  45020c:	ldp	x3, x2, [x19, #272]
  450210:	strb	wzr, [x19, #255]
  450214:	mov	x0, x19
  450218:	blr	x3
  45021c:	ldr	x1, [x19, #320]
  450220:	mov	w3, #0x666e                	// #26222
  450224:	mov	w2, #0x6f                  	// #111
  450228:	mov	x0, #0x3                   	// #3
  45022c:	add	x1, x1, #0x1
  450230:	strh	w3, [x19]
  450234:	strb	w2, [x19, #2]
  450238:	str	x1, [x19, #320]
  45023c:	add	x1, x0, #0x1
  450240:	str	x1, [x19, #256]
  450244:	mov	w2, #0x20                  	// #32
  450248:	strb	w2, [x19, x0]
  45024c:	strb	w2, [x19, #264]
  450250:	cmp	x1, #0xff
  450254:	b.ne	4524a0 <nftw@plt+0x4f920>  // b.any
  450258:	ldp	x3, x2, [x19, #272]
  45025c:	strb	wzr, [x19, #255]
  450260:	mov	x0, x19
  450264:	blr	x3
  450268:	ldr	x0, [x19, #320]
  45026c:	mov	w2, #0x6f66                	// #28518
  450270:	mov	x1, #0x2                   	// #2
  450274:	strh	w2, [x19]
  450278:	add	x0, x0, #0x1
  45027c:	str	x0, [x19, #320]
  450280:	add	x0, x1, #0x1
  450284:	mov	w2, #0x72                  	// #114
  450288:	strb	w2, [x19, x1]
  45028c:	add	x1, x0, #0x1
  450290:	str	x1, [x19, #256]
  450294:	mov	w1, #0x20                  	// #32
  450298:	strb	w1, [x19, x0]
  45029c:	strb	w1, [x19, #264]
  4502a0:	ldr	x20, [x24, #8]
  4502a4:	cbz	x20, 451514 <nftw@plt+0x4e994>
  4502a8:	ldr	w0, [x20, #4]
  4502ac:	cmp	w0, #0x1
  4502b0:	b.gt	451514 <nftw@plt+0x4e994>
  4502b4:	ldr	w1, [x19, #308]
  4502b8:	cmp	w1, #0x400
  4502bc:	b.gt	451514 <nftw@plt+0x4e994>
  4502c0:	ldr	x3, [x19, #328]
  4502c4:	add	w0, w0, #0x1
  4502c8:	str	w0, [x20, #4]
  4502cc:	add	w1, w1, #0x1
  4502d0:	add	x0, sp, #0x80
  4502d4:	str	w1, [x19, #308]
  4502d8:	str	x0, [x19, #328]
  4502dc:	mov	w1, w22
  4502e0:	mov	x0, x19
  4502e4:	mov	x2, x20
  4502e8:	stp	x20, x3, [sp, #128]
  4502ec:	bl	44d138 <nftw@plt+0x4a5b8>
  4502f0:	ldr	w1, [x20, #4]
  4502f4:	ldr	x0, [sp, #136]
  4502f8:	sub	w1, w1, #0x1
  4502fc:	ldp	x21, x22, [sp, #32]
  450300:	ldp	x23, x24, [sp, #48]
  450304:	str	x0, [x19, #328]
  450308:	ldr	w0, [x19, #308]
  45030c:	str	w1, [x20, #4]
  450310:	sub	w0, w0, #0x1
  450314:	str	w0, [x19, #308]
  450318:	b	44d1a0 <nftw@plt+0x4a620>
  45031c:	ldr	x20, [x2, #8]
  450320:	ldr	x23, [x19, #296]
  450324:	str	xzr, [x19, #296]
  450328:	ldr	x21, [x19, #368]
  45032c:	str	x2, [x19, #368]
  450330:	tbz	w22, #2, 4516a4 <nftw@plt+0x4eb24>
  450334:	ldr	w0, [x20]
  450338:	cbnz	w0, 450348 <nftw@plt+0x4d7c8>
  45033c:	ldr	w0, [x20, #16]
  450340:	cmp	w0, #0x6
  450344:	b.eq	45551c <nftw@plt+0x5299c>  // b.none
  450348:	ldr	w0, [x20, #4]
  45034c:	cmp	w0, #0x1
  450350:	b.gt	4516a8 <nftw@plt+0x4eb28>
  450354:	ldr	w1, [x19, #308]
  450358:	cmp	w1, #0x400
  45035c:	b.gt	4516a8 <nftw@plt+0x4eb28>
  450360:	ldr	x3, [x19, #328]
  450364:	add	w0, w0, #0x1
  450368:	str	w0, [x20, #4]
  45036c:	add	w1, w1, #0x1
  450370:	add	x0, sp, #0x80
  450374:	str	w1, [x19, #308]
  450378:	str	x0, [x19, #328]
  45037c:	mov	w1, w22
  450380:	mov	x0, x19
  450384:	mov	x2, x20
  450388:	stp	x20, x3, [sp, #128]
  45038c:	bl	44d138 <nftw@plt+0x4a5b8>
  450390:	ldr	w1, [x20, #4]
  450394:	ldr	x0, [sp, #136]
  450398:	str	x0, [x19, #328]
  45039c:	ldr	w0, [x19, #308]
  4503a0:	sub	w1, w1, #0x1
  4503a4:	str	w1, [x20, #4]
  4503a8:	sub	w0, w0, #0x1
  4503ac:	str	w0, [x19, #308]
  4503b0:	ldrb	w0, [x19, #264]
  4503b4:	ldr	x1, [x19, #256]
  4503b8:	cmp	w0, #0x3c
  4503bc:	b.eq	454300 <nftw@plt+0x51780>  // b.none
  4503c0:	add	x0, x1, #0x1
  4503c4:	cmp	x1, #0xff
  4503c8:	b.ne	4503f0 <nftw@plt+0x4d870>  // b.any
  4503cc:	ldp	x3, x2, [x19, #272]
  4503d0:	strb	wzr, [x19, #255]
  4503d4:	mov	x0, x19
  4503d8:	blr	x3
  4503dc:	ldr	x2, [x19, #320]
  4503e0:	mov	x0, #0x1                   	// #1
  4503e4:	mov	x1, #0x0                   	// #0
  4503e8:	add	x2, x2, x0
  4503ec:	str	x2, [x19, #320]
  4503f0:	str	x0, [x19, #256]
  4503f4:	mov	w2, #0x3c                  	// #60
  4503f8:	strb	w2, [x19, x1]
  4503fc:	strb	w2, [x19, #264]
  450400:	ldr	x20, [x24, #16]
  450404:	cbz	x20, 4516b4 <nftw@plt+0x4eb34>
  450408:	ldr	w1, [x20, #4]
  45040c:	cmp	w1, #0x1
  450410:	b.gt	4516b4 <nftw@plt+0x4eb34>
  450414:	ldr	w2, [x19, #308]
  450418:	cmp	w2, #0x400
  45041c:	b.gt	4516b4 <nftw@plt+0x4eb34>
  450420:	ldr	x3, [x19, #328]
  450424:	add	w1, w1, #0x1
  450428:	str	w1, [x20, #4]
  45042c:	add	w2, w2, #0x1
  450430:	add	x0, sp, #0x80
  450434:	str	w2, [x19, #308]
  450438:	str	x0, [x19, #328]
  45043c:	mov	w1, w22
  450440:	mov	x2, x20
  450444:	mov	x0, x19
  450448:	stp	x20, x3, [sp, #128]
  45044c:	bl	44d138 <nftw@plt+0x4a5b8>
  450450:	ldr	w1, [x20, #4]
  450454:	ldr	x0, [sp, #136]
  450458:	str	x0, [x19, #328]
  45045c:	sub	w1, w1, #0x1
  450460:	ldr	w0, [x19, #308]
  450464:	str	w1, [x20, #4]
  450468:	ldr	x1, [x19, #256]
  45046c:	sub	w0, w0, #0x1
  450470:	ldrb	w2, [x19, #264]
  450474:	str	w0, [x19, #308]
  450478:	mov	x0, x1
  45047c:	cmp	w2, #0x3e
  450480:	b.ne	4504c0 <nftw@plt+0x4d940>  // b.any
  450484:	cmp	x1, #0xff
  450488:	b.ne	4504ac <nftw@plt+0x4d92c>  // b.any
  45048c:	ldp	x3, x2, [x19, #272]
  450490:	strb	wzr, [x19, #255]
  450494:	mov	x0, x19
  450498:	blr	x3
  45049c:	ldr	x0, [x19, #320]
  4504a0:	mov	x1, #0x0                   	// #0
  4504a4:	add	x0, x0, #0x1
  4504a8:	str	x0, [x19, #320]
  4504ac:	add	x0, x1, #0x1
  4504b0:	str	x0, [x19, #256]
  4504b4:	mov	w2, #0x20                  	// #32
  4504b8:	strb	w2, [x19, x1]
  4504bc:	strb	w2, [x19, #264]
  4504c0:	add	x1, x0, #0x1
  4504c4:	cmp	x0, #0xff
  4504c8:	b.ne	4504f4 <nftw@plt+0x4d974>  // b.any
  4504cc:	ldp	x3, x2, [x19, #272]
  4504d0:	strb	wzr, [x19, #255]
  4504d4:	mov	x1, x0
  4504d8:	mov	x0, x19
  4504dc:	blr	x3
  4504e0:	ldr	x2, [x19, #320]
  4504e4:	mov	x1, #0x1                   	// #1
  4504e8:	mov	x0, #0x0                   	// #0
  4504ec:	add	x2, x2, x1
  4504f0:	str	x2, [x19, #320]
  4504f4:	str	x1, [x19, #256]
  4504f8:	mov	w1, #0x3e                  	// #62
  4504fc:	strb	w1, [x19, x0]
  450500:	strb	w1, [x19, #264]
  450504:	str	x23, [x19, #296]
  450508:	str	x21, [x19, #368]
  45050c:	ldp	x21, x22, [sp, #32]
  450510:	ldp	x23, x24, [sp, #48]
  450514:	b	44d1a0 <nftw@plt+0x4a620>
  450518:	adrp	x20, 480000 <_obstack_memory_used@@Base+0x1ebb8>
  45051c:	add	x20, x20, #0xd88
  450520:	mov	x23, #0x1                   	// #1
  450524:	stp	x25, x26, [sp, #64]
  450528:	add	x25, x20, #0x15
  45052c:	ldr	x1, [x19, #256]
  450530:	b	45058c <nftw@plt+0x4da0c>
  450534:	ldp	x3, x2, [x19, #272]
  450538:	strb	wzr, [x19, #255]
  45053c:	mov	x0, x19
  450540:	add	x20, x20, #0x1
  450544:	blr	x3
  450548:	strb	w21, [x19]
  45054c:	ldr	x0, [x19, #320]
  450550:	str	x23, [x19, #256]
  450554:	strb	w21, [x19, #264]
  450558:	cmp	x20, x25
  45055c:	add	x0, x0, #0x1
  450560:	str	x0, [x19, #320]
  450564:	b.eq	450a30 <nftw@plt+0x4deb0>  // b.none
  450568:	ldrb	w21, [x20]
  45056c:	mov	x0, #0x1                   	// #1
  450570:	add	x1, x0, #0x1
  450574:	str	x1, [x19, #256]
  450578:	strb	w21, [x19, x0]
  45057c:	add	x20, x20, #0x1
  450580:	strb	w21, [x19, #264]
  450584:	cmp	x20, x25
  450588:	b.eq	450a30 <nftw@plt+0x4deb0>  // b.none
  45058c:	ldrb	w21, [x20]
  450590:	cmp	x1, #0xff
  450594:	b.eq	450534 <nftw@plt+0x4d9b4>  // b.none
  450598:	mov	x0, x1
  45059c:	b	450570 <nftw@plt+0x4d9f0>
  4505a0:	ldr	w0, [x19, #312]
  4505a4:	cbz	w0, 451ae8 <nftw@plt+0x4ef68>
  4505a8:	ldr	x0, [x19, #256]
  4505ac:	cmp	x0, #0xff
  4505b0:	b.eq	455044 <nftw@plt+0x524c4>  // b.none
  4505b4:	add	x3, x0, #0x1
  4505b8:	str	x3, [x19, #256]
  4505bc:	mov	w1, #0x61                  	// #97
  4505c0:	strb	w1, [x19, x0]
  4505c4:	strb	w1, [x19, #264]
  4505c8:	cmp	x3, #0xff
  4505cc:	b.ne	4547d4 <nftw@plt+0x51c54>  // b.any
  4505d0:	ldp	x4, x2, [x19, #272]
  4505d4:	strb	wzr, [x19, #255]
  4505d8:	mov	x1, x3
  4505dc:	mov	x0, x19
  4505e0:	blr	x4
  4505e4:	ldr	x1, [x19, #320]
  4505e8:	mov	w2, #0x7475                	// #29813
  4505ec:	mov	x0, #0x2                   	// #2
  4505f0:	strh	w2, [x19]
  4505f4:	add	x1, x1, #0x1
  4505f8:	str	x1, [x19, #320]
  4505fc:	add	x1, x0, #0x1
  450600:	mov	w2, #0x6f                  	// #111
  450604:	strb	w2, [x19, x0]
  450608:	add	x0, x1, #0x1
  45060c:	str	x0, [x19, #256]
  450610:	mov	w0, #0x3a                  	// #58
  450614:	strb	w0, [x19, x1]
  450618:	adrp	x1, 473000 <_obstack_memory_used@@Base+0x11bb8>
  45061c:	strb	w0, [x19, #264]
  450620:	add	x1, x1, #0x1f8
  450624:	add	x0, sp, #0x80
  450628:	ldr	x2, [x24, #8]
  45062c:	add	w2, w2, #0x1
  450630:	bl	4025b0 <sprintf@plt>
  450634:	add	x0, sp, #0x80
  450638:	bl	4024f0 <strlen@plt>
  45063c:	cbz	x0, 455b48 <nftw@plt+0x52fc8>
  450640:	add	x20, sp, #0x80
  450644:	mov	x23, #0x1                   	// #1
  450648:	add	x22, x20, x0
  45064c:	ldr	x1, [x19, #256]
  450650:	b	4506ac <nftw@plt+0x4db2c>
  450654:	ldp	x3, x2, [x19, #272]
  450658:	strb	wzr, [x19, #255]
  45065c:	mov	x0, x19
  450660:	add	x20, x20, #0x1
  450664:	blr	x3
  450668:	strb	w21, [x19]
  45066c:	ldr	x0, [x19, #320]
  450670:	str	x23, [x19, #256]
  450674:	strb	w21, [x19, #264]
  450678:	cmp	x20, x22
  45067c:	add	x0, x0, #0x1
  450680:	str	x0, [x19, #320]
  450684:	b.eq	4553d8 <nftw@plt+0x52858>  // b.none
  450688:	ldrb	w21, [x20]
  45068c:	mov	x0, #0x1                   	// #1
  450690:	add	x1, x0, #0x1
  450694:	str	x1, [x19, #256]
  450698:	strb	w21, [x19, x0]
  45069c:	add	x20, x20, #0x1
  4506a0:	strb	w21, [x19, #264]
  4506a4:	cmp	x22, x20
  4506a8:	b.eq	454704 <nftw@plt+0x51b84>  // b.none
  4506ac:	ldrb	w21, [x20]
  4506b0:	cmp	x1, #0xff
  4506b4:	b.eq	450654 <nftw@plt+0x4dad4>  // b.none
  4506b8:	mov	x0, x1
  4506bc:	b	450690 <nftw@plt+0x4db10>
  4506c0:	adrp	x20, 480000 <_obstack_memory_used@@Base+0x1ebb8>
  4506c4:	add	x20, x20, #0xd38
  4506c8:	mov	x23, #0x1                   	// #1
  4506cc:	stp	x25, x26, [sp, #64]
  4506d0:	add	x25, x20, #0x18
  4506d4:	ldr	x1, [x19, #256]
  4506d8:	b	450734 <nftw@plt+0x4dbb4>
  4506dc:	ldp	x3, x2, [x19, #272]
  4506e0:	strb	wzr, [x19, #255]
  4506e4:	mov	x0, x19
  4506e8:	add	x20, x20, #0x1
  4506ec:	blr	x3
  4506f0:	strb	w21, [x19]
  4506f4:	ldr	x0, [x19, #320]
  4506f8:	str	x23, [x19, #256]
  4506fc:	strb	w21, [x19, #264]
  450700:	cmp	x20, x25
  450704:	add	x0, x0, #0x1
  450708:	str	x0, [x19, #320]
  45070c:	b.eq	4508c8 <nftw@plt+0x4dd48>  // b.none
  450710:	ldrb	w21, [x20]
  450714:	mov	x0, #0x1                   	// #1
  450718:	add	x1, x0, #0x1
  45071c:	str	x1, [x19, #256]
  450720:	strb	w21, [x19, x0]
  450724:	add	x20, x20, #0x1
  450728:	strb	w21, [x19, #264]
  45072c:	cmp	x25, x20
  450730:	b.eq	4508cc <nftw@plt+0x4dd4c>  // b.none
  450734:	ldrb	w21, [x20]
  450738:	cmp	x1, #0xff
  45073c:	b.eq	4506dc <nftw@plt+0x4db5c>  // b.none
  450740:	mov	x0, x1
  450744:	b	450718 <nftw@plt+0x4db98>
  450748:	adrp	x20, 480000 <_obstack_memory_used@@Base+0x1ebb8>
  45074c:	add	x20, x20, #0xd58
  450750:	mov	x23, #0x1                   	// #1
  450754:	stp	x25, x26, [sp, #64]
  450758:	add	x25, x20, #0x12
  45075c:	ldr	x1, [x19, #256]
  450760:	b	4507bc <nftw@plt+0x4dc3c>
  450764:	ldp	x3, x2, [x19, #272]
  450768:	strb	wzr, [x19, #255]
  45076c:	mov	x0, x19
  450770:	add	x20, x20, #0x1
  450774:	blr	x3
  450778:	strb	w21, [x19]
  45077c:	ldr	x0, [x19, #320]
  450780:	str	x23, [x19, #256]
  450784:	strb	w21, [x19, #264]
  450788:	cmp	x20, x25
  45078c:	add	x0, x0, #0x1
  450790:	str	x0, [x19, #320]
  450794:	b.eq	450d30 <nftw@plt+0x4e1b0>  // b.none
  450798:	ldrb	w21, [x20]
  45079c:	mov	x0, #0x1                   	// #1
  4507a0:	add	x1, x0, #0x1
  4507a4:	str	x1, [x19, #256]
  4507a8:	strb	w21, [x19, x0]
  4507ac:	add	x20, x20, #0x1
  4507b0:	strb	w21, [x19, #264]
  4507b4:	cmp	x25, x20
  4507b8:	b.eq	450d30 <nftw@plt+0x4e1b0>  // b.none
  4507bc:	ldrb	w21, [x20]
  4507c0:	cmp	x1, #0xff
  4507c4:	b.eq	450764 <nftw@plt+0x4dbe4>  // b.none
  4507c8:	mov	x0, x1
  4507cc:	b	4507a0 <nftw@plt+0x4dc20>
  4507d0:	ldr	x25, [x0, #8]
  4507d4:	add	x0, sp, #0x80
  4507d8:	stp	x2, x24, [sp, #128]
  4507dc:	str	wzr, [sp, #144]
  4507e0:	str	x4, [sp, #152]
  4507e4:	str	x0, [x19, #296]
  4507e8:	cbz	x25, 44d208 <nftw@plt+0x4a688>
  4507ec:	ldr	w0, [x25, #4]
  4507f0:	cmp	w0, #0x1
  4507f4:	b.gt	44d210 <nftw@plt+0x4a690>
  4507f8:	ldr	w1, [x19, #308]
  4507fc:	cmp	w1, #0x400
  450800:	b.gt	44d210 <nftw@plt+0x4a690>
  450804:	ldr	x3, [x19, #328]
  450808:	add	w0, w0, #0x1
  45080c:	str	w0, [x25, #4]
  450810:	add	w1, w1, #0x1
  450814:	add	x0, sp, #0x70
  450818:	str	w1, [x19, #308]
  45081c:	str	x0, [x19, #328]
  450820:	mov	x2, x25
  450824:	mov	w1, w22
  450828:	mov	x0, x19
  45082c:	stp	x25, x3, [sp, #112]
  450830:	bl	44d138 <nftw@plt+0x4a5b8>
  450834:	ldr	w1, [x25, #4]
  450838:	ldr	x0, [sp, #120]
  45083c:	str	x0, [x19, #328]
  450840:	ldr	w2, [sp, #144]
  450844:	sub	w1, w1, #0x1
  450848:	ldr	w0, [x19, #308]
  45084c:	str	w1, [x25, #4]
  450850:	sub	w0, w0, #0x1
  450854:	str	w0, [x19, #308]
  450858:	cbnz	w2, 44d228 <nftw@plt+0x4a6a8>
  45085c:	b	44d218 <nftw@plt+0x4a698>
  450860:	ldp	x21, x22, [sp, #32]
  450864:	ldp	x23, x24, [sp, #48]
  450868:	ldp	x25, x26, [sp, #64]
  45086c:	b	44d1a0 <nftw@plt+0x4a620>
  450870:	ldp	x3, x2, [x19, #272]
  450874:	strb	wzr, [x19, #255]
  450878:	mov	x0, x19
  45087c:	blr	x3
  450880:	ldr	x2, [x19, #320]
  450884:	mov	x0, #0x1                   	// #1
  450888:	mov	x1, #0x0                   	// #0
  45088c:	add	x2, x2, x0
  450890:	str	x2, [x19, #320]
  450894:	b	44de74 <nftw@plt+0x4b2f4>
  450898:	ldp	x3, x2, [x19, #272]
  45089c:	strb	wzr, [x19, #255]
  4508a0:	mov	x1, x0
  4508a4:	mov	x0, x19
  4508a8:	blr	x3
  4508ac:	strb	w24, [x19]
  4508b0:	ldr	x2, [x19, #320]
  4508b4:	mov	x1, #0x1                   	// #1
  4508b8:	mov	x0, #0x2                   	// #2
  4508bc:	add	x2, x2, x1
  4508c0:	str	x2, [x19, #320]
  4508c4:	b	44de74 <nftw@plt+0x4b2f4>
  4508c8:	mov	x1, #0x1                   	// #1
  4508cc:	ldr	x20, [x24, #8]
  4508d0:	cbz	x20, 451360 <nftw@plt+0x4e7e0>
  4508d4:	ldr	w0, [x20, #4]
  4508d8:	cmp	w0, #0x1
  4508dc:	b.gt	451360 <nftw@plt+0x4e7e0>
  4508e0:	ldr	w2, [x19, #308]
  4508e4:	cmp	w2, #0x400
  4508e8:	b.gt	451360 <nftw@plt+0x4e7e0>
  4508ec:	ldr	x3, [x19, #328]
  4508f0:	add	w0, w0, #0x1
  4508f4:	str	w0, [x20, #4]
  4508f8:	add	w2, w2, #0x1
  4508fc:	add	x0, sp, #0x80
  450900:	str	w2, [x19, #308]
  450904:	str	x0, [x19, #328]
  450908:	mov	w1, w22
  45090c:	mov	x2, x20
  450910:	mov	x0, x19
  450914:	stp	x20, x3, [sp, #128]
  450918:	bl	44d138 <nftw@plt+0x4a5b8>
  45091c:	ldr	w2, [x20, #4]
  450920:	ldr	x0, [sp, #136]
  450924:	str	x0, [x19, #328]
  450928:	ldr	w0, [x19, #308]
  45092c:	sub	w2, w2, #0x1
  450930:	ldr	x1, [x19, #256]
  450934:	str	w2, [x20, #4]
  450938:	sub	w0, w0, #0x1
  45093c:	str	w0, [x19, #308]
  450940:	cmp	x1, #0xff
  450944:	b.eq	453f60 <nftw@plt+0x513e0>  // b.none
  450948:	add	x0, x1, #0x1
  45094c:	str	x0, [x19, #256]
  450950:	mov	w2, #0x2d                  	// #45
  450954:	strb	w2, [x19, x1]
  450958:	strb	w2, [x19, #264]
  45095c:	cmp	x0, #0xff
  450960:	b.ne	452930 <nftw@plt+0x4fdb0>  // b.any
  450964:	ldp	x3, x2, [x19, #272]
  450968:	strb	wzr, [x19, #255]
  45096c:	mov	x1, x0
  450970:	mov	x0, x19
  450974:	blr	x3
  450978:	ldr	x0, [x19, #320]
  45097c:	mov	w1, #0x69                  	// #105
  450980:	mov	x2, #0x1                   	// #1
  450984:	strb	w1, [x19]
  450988:	add	x0, x0, x2
  45098c:	str	x0, [x19, #320]
  450990:	add	x1, x2, #0x1
  450994:	mov	w0, #0x6e                  	// #110
  450998:	strb	w0, [x19, x2]
  45099c:	add	x0, x1, #0x1
  4509a0:	str	x0, [x19, #256]
  4509a4:	mov	w0, #0x2d                  	// #45
  4509a8:	strb	w0, [x19, x1]
  4509ac:	strb	w0, [x19, #264]
  4509b0:	ldr	x20, [x24, #16]
  4509b4:	cbz	x20, 4513bc <nftw@plt+0x4e83c>
  4509b8:	ldr	w0, [x20, #4]
  4509bc:	cmp	w0, #0x1
  4509c0:	b.gt	4513bc <nftw@plt+0x4e83c>
  4509c4:	ldr	w1, [x19, #308]
  4509c8:	cmp	w1, #0x400
  4509cc:	b.gt	4513bc <nftw@plt+0x4e83c>
  4509d0:	ldr	x3, [x19, #328]
  4509d4:	add	w0, w0, #0x1
  4509d8:	str	w0, [x20, #4]
  4509dc:	add	w1, w1, #0x1
  4509e0:	add	x0, sp, #0x80
  4509e4:	str	w1, [x19, #308]
  4509e8:	str	x0, [x19, #328]
  4509ec:	mov	w1, w22
  4509f0:	mov	x0, x19
  4509f4:	mov	x2, x20
  4509f8:	stp	x20, x3, [sp, #128]
  4509fc:	bl	44d138 <nftw@plt+0x4a5b8>
  450a00:	ldr	w1, [x20, #4]
  450a04:	ldr	x0, [sp, #136]
  450a08:	sub	w1, w1, #0x1
  450a0c:	ldp	x21, x22, [sp, #32]
  450a10:	ldp	x23, x24, [sp, #48]
  450a14:	ldp	x25, x26, [sp, #64]
  450a18:	str	x0, [x19, #328]
  450a1c:	ldr	w0, [x19, #308]
  450a20:	str	w1, [x20, #4]
  450a24:	sub	w0, w0, #0x1
  450a28:	str	w0, [x19, #308]
  450a2c:	b	44d1a0 <nftw@plt+0x4a620>
  450a30:	ldr	x20, [x24, #8]
  450a34:	cbz	x20, 4513f4 <nftw@plt+0x4e874>
  450a38:	ldr	w0, [x20, #4]
  450a3c:	cmp	w0, #0x1
  450a40:	b.gt	4513f4 <nftw@plt+0x4e874>
  450a44:	ldr	w1, [x19, #308]
  450a48:	cmp	w1, #0x400
  450a4c:	b.gt	4513f4 <nftw@plt+0x4e874>
  450a50:	ldr	x3, [x19, #328]
  450a54:	add	w0, w0, #0x1
  450a58:	str	w0, [x20, #4]
  450a5c:	add	w1, w1, #0x1
  450a60:	add	x0, sp, #0x80
  450a64:	str	w1, [x19, #308]
  450a68:	str	x0, [x19, #328]
  450a6c:	mov	w1, w22
  450a70:	mov	x0, x19
  450a74:	mov	x2, x20
  450a78:	stp	x20, x3, [sp, #128]
  450a7c:	bl	44d138 <nftw@plt+0x4a5b8>
  450a80:	ldr	w1, [x20, #4]
  450a84:	ldr	x0, [sp, #136]
  450a88:	sub	w1, w1, #0x1
  450a8c:	ldp	x21, x22, [sp, #32]
  450a90:	ldp	x23, x24, [sp, #48]
  450a94:	ldp	x25, x26, [sp, #64]
  450a98:	str	x0, [x19, #328]
  450a9c:	ldr	w0, [x19, #308]
  450aa0:	str	w1, [x20, #4]
  450aa4:	sub	w0, w0, #0x1
  450aa8:	str	w0, [x19, #308]
  450aac:	b	44d1a0 <nftw@plt+0x4a620>
  450ab0:	ldr	x20, [x24, #8]
  450ab4:	cbz	x20, 4514e4 <nftw@plt+0x4e964>
  450ab8:	ldr	w0, [x20, #4]
  450abc:	cmp	w0, #0x1
  450ac0:	b.gt	4514e4 <nftw@plt+0x4e964>
  450ac4:	ldr	w1, [x19, #308]
  450ac8:	cmp	w1, #0x400
  450acc:	b.gt	4514e4 <nftw@plt+0x4e964>
  450ad0:	ldr	x3, [x19, #328]
  450ad4:	add	w0, w0, #0x1
  450ad8:	str	w0, [x20, #4]
  450adc:	add	w1, w1, #0x1
  450ae0:	add	x0, sp, #0x80
  450ae4:	str	w1, [x19, #308]
  450ae8:	str	x0, [x19, #328]
  450aec:	mov	w1, w22
  450af0:	mov	x0, x19
  450af4:	mov	x2, x20
  450af8:	stp	x20, x3, [sp, #128]
  450afc:	bl	44d138 <nftw@plt+0x4a5b8>
  450b00:	ldr	w1, [x20, #4]
  450b04:	ldr	x0, [sp, #136]
  450b08:	sub	w1, w1, #0x1
  450b0c:	ldp	x21, x22, [sp, #32]
  450b10:	ldp	x23, x24, [sp, #48]
  450b14:	ldp	x25, x26, [sp, #64]
  450b18:	str	x0, [x19, #328]
  450b1c:	ldr	w0, [x19, #308]
  450b20:	str	w1, [x20, #4]
  450b24:	sub	w0, w0, #0x1
  450b28:	str	w0, [x19, #308]
  450b2c:	b	44d1a0 <nftw@plt+0x4a620>
  450b30:	ldr	x20, [x24, #8]
  450b34:	cbz	x20, 451528 <nftw@plt+0x4e9a8>
  450b38:	ldr	w0, [x20, #4]
  450b3c:	cmp	w0, #0x1
  450b40:	b.gt	451528 <nftw@plt+0x4e9a8>
  450b44:	ldr	w1, [x19, #308]
  450b48:	cmp	w1, #0x400
  450b4c:	b.gt	451528 <nftw@plt+0x4e9a8>
  450b50:	ldr	x3, [x19, #328]
  450b54:	add	w0, w0, #0x1
  450b58:	str	w0, [x20, #4]
  450b5c:	add	w1, w1, #0x1
  450b60:	add	x0, sp, #0x80
  450b64:	str	w1, [x19, #308]
  450b68:	str	x0, [x19, #328]
  450b6c:	mov	w1, w22
  450b70:	mov	x0, x19
  450b74:	mov	x2, x20
  450b78:	stp	x20, x3, [sp, #128]
  450b7c:	bl	44d138 <nftw@plt+0x4a5b8>
  450b80:	ldr	w1, [x20, #4]
  450b84:	ldr	x0, [sp, #136]
  450b88:	sub	w1, w1, #0x1
  450b8c:	ldp	x21, x22, [sp, #32]
  450b90:	ldp	x23, x24, [sp, #48]
  450b94:	ldp	x25, x26, [sp, #64]
  450b98:	str	x0, [x19, #328]
  450b9c:	ldr	w0, [x19, #308]
  450ba0:	str	w1, [x20, #4]
  450ba4:	sub	w0, w0, #0x1
  450ba8:	str	w0, [x19, #308]
  450bac:	b	44d1a0 <nftw@plt+0x4a620>
  450bb0:	ldr	x20, [x24, #8]
  450bb4:	cbz	x20, 4514fc <nftw@plt+0x4e97c>
  450bb8:	ldr	w0, [x20, #4]
  450bbc:	cmp	w0, #0x1
  450bc0:	b.gt	4514fc <nftw@plt+0x4e97c>
  450bc4:	ldr	w1, [x19, #308]
  450bc8:	cmp	w1, #0x400
  450bcc:	b.gt	4514fc <nftw@plt+0x4e97c>
  450bd0:	ldr	x3, [x19, #328]
  450bd4:	add	w0, w0, #0x1
  450bd8:	str	w0, [x20, #4]
  450bdc:	add	w1, w1, #0x1
  450be0:	add	x0, sp, #0x80
  450be4:	str	w1, [x19, #308]
  450be8:	str	x0, [x19, #328]
  450bec:	mov	w1, w22
  450bf0:	mov	x0, x19
  450bf4:	mov	x2, x20
  450bf8:	stp	x20, x3, [sp, #128]
  450bfc:	bl	44d138 <nftw@plt+0x4a5b8>
  450c00:	ldr	w1, [x20, #4]
  450c04:	ldr	x0, [sp, #136]
  450c08:	sub	w1, w1, #0x1
  450c0c:	ldp	x21, x22, [sp, #32]
  450c10:	ldp	x23, x24, [sp, #48]
  450c14:	ldp	x25, x26, [sp, #64]
  450c18:	str	x0, [x19, #328]
  450c1c:	ldr	w0, [x19, #308]
  450c20:	str	w1, [x20, #4]
  450c24:	sub	w0, w0, #0x1
  450c28:	str	w0, [x19, #308]
  450c2c:	b	44d1a0 <nftw@plt+0x4a620>
  450c30:	ldr	x20, [x24, #8]
  450c34:	cbz	x20, 451614 <nftw@plt+0x4ea94>
  450c38:	ldr	w0, [x20, #4]
  450c3c:	cmp	w0, #0x1
  450c40:	b.gt	451614 <nftw@plt+0x4ea94>
  450c44:	ldr	w1, [x19, #308]
  450c48:	cmp	w1, #0x400
  450c4c:	b.gt	451614 <nftw@plt+0x4ea94>
  450c50:	ldr	x3, [x19, #328]
  450c54:	add	w0, w0, #0x1
  450c58:	str	w0, [x20, #4]
  450c5c:	add	w1, w1, #0x1
  450c60:	add	x0, sp, #0x80
  450c64:	str	w1, [x19, #308]
  450c68:	str	x0, [x19, #328]
  450c6c:	mov	w1, w22
  450c70:	mov	x0, x19
  450c74:	mov	x2, x20
  450c78:	stp	x20, x3, [sp, #128]
  450c7c:	bl	44d138 <nftw@plt+0x4a5b8>
  450c80:	ldr	w1, [x20, #4]
  450c84:	ldr	x0, [sp, #136]
  450c88:	sub	w1, w1, #0x1
  450c8c:	ldp	x21, x22, [sp, #32]
  450c90:	ldp	x23, x24, [sp, #48]
  450c94:	ldp	x25, x26, [sp, #64]
  450c98:	str	x0, [x19, #328]
  450c9c:	ldr	w0, [x19, #308]
  450ca0:	str	w1, [x20, #4]
  450ca4:	sub	w0, w0, #0x1
  450ca8:	str	w0, [x19, #308]
  450cac:	b	44d1a0 <nftw@plt+0x4a620>
  450cb0:	ldr	x20, [x24, #8]
  450cb4:	cbz	x20, 45158c <nftw@plt+0x4ea0c>
  450cb8:	ldr	w0, [x20, #4]
  450cbc:	cmp	w0, #0x1
  450cc0:	b.gt	45158c <nftw@plt+0x4ea0c>
  450cc4:	ldr	w1, [x19, #308]
  450cc8:	cmp	w1, #0x400
  450ccc:	b.gt	45158c <nftw@plt+0x4ea0c>
  450cd0:	ldr	x3, [x19, #328]
  450cd4:	add	w0, w0, #0x1
  450cd8:	str	w0, [x20, #4]
  450cdc:	add	w1, w1, #0x1
  450ce0:	add	x0, sp, #0x80
  450ce4:	str	w1, [x19, #308]
  450ce8:	str	x0, [x19, #328]
  450cec:	mov	w1, w22
  450cf0:	mov	x0, x19
  450cf4:	mov	x2, x20
  450cf8:	stp	x20, x3, [sp, #128]
  450cfc:	bl	44d138 <nftw@plt+0x4a5b8>
  450d00:	ldr	w1, [x20, #4]
  450d04:	ldr	x0, [sp, #136]
  450d08:	sub	w1, w1, #0x1
  450d0c:	ldp	x21, x22, [sp, #32]
  450d10:	ldp	x23, x24, [sp, #48]
  450d14:	ldp	x25, x26, [sp, #64]
  450d18:	str	x0, [x19, #328]
  450d1c:	ldr	w0, [x19, #308]
  450d20:	str	w1, [x20, #4]
  450d24:	sub	w0, w0, #0x1
  450d28:	str	w0, [x19, #308]
  450d2c:	b	44d1a0 <nftw@plt+0x4a620>
  450d30:	ldr	x20, [x24, #8]
  450d34:	cbz	x20, 451674 <nftw@plt+0x4eaf4>
  450d38:	ldr	w0, [x20, #4]
  450d3c:	cmp	w0, #0x1
  450d40:	b.gt	451674 <nftw@plt+0x4eaf4>
  450d44:	ldr	w1, [x19, #308]
  450d48:	cmp	w1, #0x400
  450d4c:	b.gt	451674 <nftw@plt+0x4eaf4>
  450d50:	ldr	x3, [x19, #328]
  450d54:	add	w0, w0, #0x1
  450d58:	str	w0, [x20, #4]
  450d5c:	add	w1, w1, #0x1
  450d60:	add	x0, sp, #0x80
  450d64:	str	w1, [x19, #308]
  450d68:	str	x0, [x19, #328]
  450d6c:	mov	w1, w22
  450d70:	mov	x0, x19
  450d74:	mov	x2, x20
  450d78:	stp	x20, x3, [sp, #128]
  450d7c:	bl	44d138 <nftw@plt+0x4a5b8>
  450d80:	ldr	w1, [x20, #4]
  450d84:	ldr	x0, [sp, #136]
  450d88:	sub	w1, w1, #0x1
  450d8c:	ldp	x21, x22, [sp, #32]
  450d90:	ldp	x23, x24, [sp, #48]
  450d94:	ldp	x25, x26, [sp, #64]
  450d98:	str	x0, [x19, #328]
  450d9c:	ldr	w0, [x19, #308]
  450da0:	str	w1, [x20, #4]
  450da4:	sub	w0, w0, #0x1
  450da8:	str	w0, [x19, #308]
  450dac:	b	44d1a0 <nftw@plt+0x4a620>
  450db0:	ldr	x20, [x24, #8]
  450db4:	cbz	x20, 45155c <nftw@plt+0x4e9dc>
  450db8:	ldr	w0, [x20, #4]
  450dbc:	cmp	w0, #0x1
  450dc0:	b.gt	45155c <nftw@plt+0x4e9dc>
  450dc4:	ldr	w1, [x19, #308]
  450dc8:	cmp	w1, #0x400
  450dcc:	b.gt	45155c <nftw@plt+0x4e9dc>
  450dd0:	ldr	x3, [x19, #328]
  450dd4:	add	w0, w0, #0x1
  450dd8:	str	w0, [x20, #4]
  450ddc:	add	w1, w1, #0x1
  450de0:	add	x0, sp, #0x80
  450de4:	str	w1, [x19, #308]
  450de8:	str	x0, [x19, #328]
  450dec:	mov	w1, w22
  450df0:	mov	x0, x19
  450df4:	mov	x2, x20
  450df8:	stp	x20, x3, [sp, #128]
  450dfc:	bl	44d138 <nftw@plt+0x4a5b8>
  450e00:	ldr	w1, [x20, #4]
  450e04:	ldr	x0, [sp, #136]
  450e08:	sub	w1, w1, #0x1
  450e0c:	ldp	x21, x22, [sp, #32]
  450e10:	ldp	x23, x24, [sp, #48]
  450e14:	ldp	x25, x26, [sp, #64]
  450e18:	str	x0, [x19, #328]
  450e1c:	ldr	w0, [x19, #308]
  450e20:	str	w1, [x20, #4]
  450e24:	sub	w0, w0, #0x1
  450e28:	str	w0, [x19, #308]
  450e2c:	b	44d1a0 <nftw@plt+0x4a620>
  450e30:	ldr	x20, [x24, #8]
  450e34:	cbz	x20, 45162c <nftw@plt+0x4eaac>
  450e38:	ldr	w0, [x20, #4]
  450e3c:	cmp	w0, #0x1
  450e40:	b.gt	45162c <nftw@plt+0x4eaac>
  450e44:	ldr	w1, [x19, #308]
  450e48:	cmp	w1, #0x400
  450e4c:	b.gt	45162c <nftw@plt+0x4eaac>
  450e50:	ldr	x3, [x19, #328]
  450e54:	add	w0, w0, #0x1
  450e58:	str	w0, [x20, #4]
  450e5c:	add	w1, w1, #0x1
  450e60:	add	x0, sp, #0x80
  450e64:	str	w1, [x19, #308]
  450e68:	str	x0, [x19, #328]
  450e6c:	mov	w1, w22
  450e70:	mov	x0, x19
  450e74:	mov	x2, x20
  450e78:	stp	x20, x3, [sp, #128]
  450e7c:	bl	44d138 <nftw@plt+0x4a5b8>
  450e80:	ldr	w1, [x20, #4]
  450e84:	ldr	x0, [sp, #136]
  450e88:	sub	w1, w1, #0x1
  450e8c:	ldp	x21, x22, [sp, #32]
  450e90:	ldp	x23, x24, [sp, #48]
  450e94:	ldp	x25, x26, [sp, #64]
  450e98:	str	x0, [x19, #328]
  450e9c:	ldr	w0, [x19, #308]
  450ea0:	str	w1, [x20, #4]
  450ea4:	sub	w0, w0, #0x1
  450ea8:	str	w0, [x19, #308]
  450eac:	b	44d1a0 <nftw@plt+0x4a620>
  450eb0:	ldr	x20, [x24, #8]
  450eb4:	cbz	x20, 4515b0 <nftw@plt+0x4ea30>
  450eb8:	ldr	w0, [x20, #4]
  450ebc:	cmp	w0, #0x1
  450ec0:	b.gt	4515b0 <nftw@plt+0x4ea30>
  450ec4:	ldr	w1, [x19, #308]
  450ec8:	cmp	w1, #0x400
  450ecc:	b.gt	4515b0 <nftw@plt+0x4ea30>
  450ed0:	ldr	x3, [x19, #328]
  450ed4:	add	w0, w0, #0x1
  450ed8:	str	w0, [x20, #4]
  450edc:	add	w1, w1, #0x1
  450ee0:	add	x0, sp, #0x80
  450ee4:	str	w1, [x19, #308]
  450ee8:	str	x0, [x19, #328]
  450eec:	mov	w1, w22
  450ef0:	mov	x0, x19
  450ef4:	mov	x2, x20
  450ef8:	stp	x20, x3, [sp, #128]
  450efc:	bl	44d138 <nftw@plt+0x4a5b8>
  450f00:	ldr	w1, [x20, #4]
  450f04:	ldr	x0, [sp, #136]
  450f08:	sub	w1, w1, #0x1
  450f0c:	ldp	x21, x22, [sp, #32]
  450f10:	ldp	x23, x24, [sp, #48]
  450f14:	ldp	x25, x26, [sp, #64]
  450f18:	str	x0, [x19, #328]
  450f1c:	ldr	w0, [x19, #308]
  450f20:	str	w1, [x20, #4]
  450f24:	sub	w0, w0, #0x1
  450f28:	str	w0, [x19, #308]
  450f2c:	b	44d1a0 <nftw@plt+0x4a620>
  450f30:	ldr	x20, [x24, #8]
  450f34:	cbz	x20, 45165c <nftw@plt+0x4eadc>
  450f38:	ldr	w0, [x20, #4]
  450f3c:	cmp	w0, #0x1
  450f40:	b.gt	45165c <nftw@plt+0x4eadc>
  450f44:	ldr	w1, [x19, #308]
  450f48:	cmp	w1, #0x400
  450f4c:	b.gt	45165c <nftw@plt+0x4eadc>
  450f50:	ldr	x3, [x19, #328]
  450f54:	add	w0, w0, #0x1
  450f58:	str	w0, [x20, #4]
  450f5c:	add	w1, w1, #0x1
  450f60:	add	x0, sp, #0x80
  450f64:	str	w1, [x19, #308]
  450f68:	str	x0, [x19, #328]
  450f6c:	mov	w1, w22
  450f70:	mov	x0, x19
  450f74:	mov	x2, x20
  450f78:	stp	x20, x3, [sp, #128]
  450f7c:	bl	44d138 <nftw@plt+0x4a5b8>
  450f80:	ldr	w1, [x20, #4]
  450f84:	ldr	x0, [sp, #136]
  450f88:	sub	w1, w1, #0x1
  450f8c:	ldp	x21, x22, [sp, #32]
  450f90:	ldp	x23, x24, [sp, #48]
  450f94:	ldp	x25, x26, [sp, #64]
  450f98:	str	x0, [x19, #328]
  450f9c:	ldr	w0, [x19, #308]
  450fa0:	str	w1, [x20, #4]
  450fa4:	sub	w0, w0, #0x1
  450fa8:	str	w0, [x19, #308]
  450fac:	b	44d1a0 <nftw@plt+0x4a620>
  450fb0:	mov	x1, #0x1                   	// #1
  450fb4:	ldr	x20, [x24, #16]
  450fb8:	cbz	x20, 451354 <nftw@plt+0x4e7d4>
  450fbc:	ldr	w0, [x20, #4]
  450fc0:	cmp	w0, #0x1
  450fc4:	b.gt	451354 <nftw@plt+0x4e7d4>
  450fc8:	ldr	w2, [x19, #308]
  450fcc:	cmp	w2, #0x400
  450fd0:	b.gt	451354 <nftw@plt+0x4e7d4>
  450fd4:	ldr	x3, [x19, #328]
  450fd8:	add	w0, w0, #0x1
  450fdc:	str	w0, [x20, #4]
  450fe0:	add	w2, w2, #0x1
  450fe4:	add	x0, sp, #0x80
  450fe8:	str	w2, [x19, #308]
  450fec:	str	x0, [x19, #328]
  450ff0:	mov	w1, w22
  450ff4:	mov	x2, x20
  450ff8:	mov	x0, x19
  450ffc:	stp	x20, x3, [sp, #128]
  451000:	bl	44d138 <nftw@plt+0x4a5b8>
  451004:	ldr	w2, [x20, #4]
  451008:	ldr	x0, [sp, #136]
  45100c:	str	x0, [x19, #328]
  451010:	ldr	w0, [x19, #308]
  451014:	sub	w2, w2, #0x1
  451018:	ldr	x1, [x19, #256]
  45101c:	str	w2, [x20, #4]
  451020:	sub	w0, w0, #0x1
  451024:	str	w0, [x19, #308]
  451028:	cmp	x1, #0xff
  45102c:	b.eq	453b58 <nftw@plt+0x50fd8>  // b.none
  451030:	add	x0, x1, #0x1
  451034:	str	x0, [x19, #256]
  451038:	mov	w2, #0x20                  	// #32
  45103c:	strb	w2, [x19, x1]
  451040:	strb	w2, [x19, #264]
  451044:	cmp	x0, #0xff
  451048:	b.ne	451ec8 <nftw@plt+0x4f348>  // b.any
  45104c:	ldp	x3, x2, [x19, #272]
  451050:	strb	wzr, [x19, #255]
  451054:	mov	x1, x0
  451058:	mov	x0, x19
  45105c:	blr	x3
  451060:	ldr	x0, [x19, #320]
  451064:	mov	w1, #0x6f66                	// #28518
  451068:	mov	x2, #0x2                   	// #2
  45106c:	strh	w1, [x19]
  451070:	add	x0, x0, #0x1
  451074:	str	x0, [x19, #320]
  451078:	add	x1, x2, #0x1
  45107c:	mov	w0, #0x72                  	// #114
  451080:	strb	w0, [x19, x2]
  451084:	add	x0, x1, #0x1
  451088:	str	x0, [x19, #256]
  45108c:	mov	w0, #0x20                  	// #32
  451090:	strb	w0, [x19, x1]
  451094:	strb	w0, [x19, #264]
  451098:	ldr	x20, [x24, #8]
  45109c:	cbz	x20, 4515c8 <nftw@plt+0x4ea48>
  4510a0:	ldr	w0, [x20, #4]
  4510a4:	cmp	w0, #0x1
  4510a8:	b.gt	4515c8 <nftw@plt+0x4ea48>
  4510ac:	ldr	w1, [x19, #308]
  4510b0:	cmp	w1, #0x400
  4510b4:	b.gt	4515c8 <nftw@plt+0x4ea48>
  4510b8:	ldr	x3, [x19, #328]
  4510bc:	add	w0, w0, #0x1
  4510c0:	str	w0, [x20, #4]
  4510c4:	add	w1, w1, #0x1
  4510c8:	add	x0, sp, #0x80
  4510cc:	str	w1, [x19, #308]
  4510d0:	str	x0, [x19, #328]
  4510d4:	mov	w1, w22
  4510d8:	mov	x0, x19
  4510dc:	mov	x2, x20
  4510e0:	stp	x20, x3, [sp, #128]
  4510e4:	bl	44d138 <nftw@plt+0x4a5b8>
  4510e8:	ldr	w1, [x20, #4]
  4510ec:	ldr	x0, [sp, #136]
  4510f0:	sub	w1, w1, #0x1
  4510f4:	ldp	x21, x22, [sp, #32]
  4510f8:	ldp	x23, x24, [sp, #48]
  4510fc:	ldp	x25, x26, [sp, #64]
  451100:	str	x0, [x19, #328]
  451104:	ldr	w0, [x19, #308]
  451108:	str	w1, [x20, #4]
  45110c:	sub	w0, w0, #0x1
  451110:	str	w0, [x19, #308]
  451114:	b	44d1a0 <nftw@plt+0x4a620>
  451118:	ldr	x20, [x24, #8]
  45111c:	cbz	x20, 451644 <nftw@plt+0x4eac4>
  451120:	ldr	w0, [x20, #4]
  451124:	cmp	w0, #0x1
  451128:	b.gt	451644 <nftw@plt+0x4eac4>
  45112c:	ldr	w1, [x19, #308]
  451130:	cmp	w1, #0x400
  451134:	b.gt	451644 <nftw@plt+0x4eac4>
  451138:	ldr	x3, [x19, #328]
  45113c:	add	w0, w0, #0x1
  451140:	str	w0, [x20, #4]
  451144:	add	w1, w1, #0x1
  451148:	add	x0, sp, #0x80
  45114c:	str	w1, [x19, #308]
  451150:	str	x0, [x19, #328]
  451154:	mov	w1, w22
  451158:	mov	x0, x19
  45115c:	mov	x2, x20
  451160:	stp	x20, x3, [sp, #128]
  451164:	bl	44d138 <nftw@plt+0x4a5b8>
  451168:	ldr	w1, [x20, #4]
  45116c:	ldr	x0, [sp, #136]
  451170:	sub	w1, w1, #0x1
  451174:	ldp	x21, x22, [sp, #32]
  451178:	ldp	x23, x24, [sp, #48]
  45117c:	ldp	x25, x26, [sp, #64]
  451180:	str	x0, [x19, #328]
  451184:	ldr	w0, [x19, #308]
  451188:	str	w1, [x20, #4]
  45118c:	sub	w0, w0, #0x1
  451190:	str	w0, [x19, #308]
  451194:	b	44d1a0 <nftw@plt+0x4a620>
  451198:	ldr	x20, [x24, #8]
  45119c:	cbz	x20, 45168c <nftw@plt+0x4eb0c>
  4511a0:	ldr	w0, [x20, #4]
  4511a4:	cmp	w0, #0x1
  4511a8:	b.gt	45168c <nftw@plt+0x4eb0c>
  4511ac:	ldr	w1, [x19, #308]
  4511b0:	cmp	w1, #0x400
  4511b4:	b.gt	45168c <nftw@plt+0x4eb0c>
  4511b8:	ldr	x3, [x19, #328]
  4511bc:	add	w0, w0, #0x1
  4511c0:	str	w0, [x20, #4]
  4511c4:	add	w1, w1, #0x1
  4511c8:	add	x0, sp, #0x80
  4511cc:	str	w1, [x19, #308]
  4511d0:	str	x0, [x19, #328]
  4511d4:	mov	w1, w22
  4511d8:	mov	x0, x19
  4511dc:	mov	x2, x20
  4511e0:	stp	x20, x3, [sp, #128]
  4511e4:	bl	44d138 <nftw@plt+0x4a5b8>
  4511e8:	ldr	w1, [x20, #4]
  4511ec:	ldr	x0, [sp, #136]
  4511f0:	sub	w1, w1, #0x1
  4511f4:	ldp	x21, x22, [sp, #32]
  4511f8:	ldp	x23, x24, [sp, #48]
  4511fc:	ldp	x25, x26, [sp, #64]
  451200:	str	x0, [x19, #328]
  451204:	ldr	w0, [x19, #308]
  451208:	str	w1, [x20, #4]
  45120c:	sub	w0, w0, #0x1
  451210:	str	w0, [x19, #308]
  451214:	b	44d1a0 <nftw@plt+0x4a620>
  451218:	ldr	x20, [x24, #8]
  45121c:	cbz	x20, 45140c <nftw@plt+0x4e88c>
  451220:	ldr	w0, [x20, #4]
  451224:	cmp	w0, #0x1
  451228:	b.gt	45140c <nftw@plt+0x4e88c>
  45122c:	ldr	w1, [x19, #308]
  451230:	cmp	w1, #0x400
  451234:	b.gt	45140c <nftw@plt+0x4e88c>
  451238:	ldr	x3, [x19, #328]
  45123c:	add	w0, w0, #0x1
  451240:	str	w0, [x20, #4]
  451244:	add	w1, w1, #0x1
  451248:	add	x0, sp, #0x80
  45124c:	str	w1, [x19, #308]
  451250:	str	x0, [x19, #328]
  451254:	mov	w1, w22
  451258:	mov	x0, x19
  45125c:	mov	x2, x20
  451260:	stp	x20, x3, [sp, #128]
  451264:	bl	44d138 <nftw@plt+0x4a5b8>
  451268:	ldr	w1, [x20, #4]
  45126c:	ldr	x0, [sp, #136]
  451270:	sub	w1, w1, #0x1
  451274:	ldp	x21, x22, [sp, #32]
  451278:	ldp	x23, x24, [sp, #48]
  45127c:	ldp	x25, x26, [sp, #64]
  451280:	str	x0, [x19, #328]
  451284:	ldr	w0, [x19, #308]
  451288:	str	w1, [x20, #4]
  45128c:	sub	w0, w0, #0x1
  451290:	str	w0, [x19, #308]
  451294:	b	44d1a0 <nftw@plt+0x4a620>
  451298:	add	x23, sp, #0x80
  45129c:	mov	w24, #0x1                   	// #1
  4512a0:	b	451308 <nftw@plt+0x4e788>
  4512a4:	ldr	w1, [x19, #308]
  4512a8:	cmp	w1, #0x400
  4512ac:	b.gt	45131c <nftw@plt+0x4e79c>
  4512b0:	ldr	x3, [x19, #328]
  4512b4:	add	w0, w0, #0x1
  4512b8:	str	w0, [x20, #4]
  4512bc:	add	w1, w1, #0x1
  4512c0:	str	w1, [x19, #308]
  4512c4:	mov	x0, x19
  4512c8:	str	x23, [x19, #328]
  4512cc:	mov	w1, w22
  4512d0:	mov	x2, x20
  4512d4:	stp	x20, x3, [sp, #128]
  4512d8:	bl	44d138 <nftw@plt+0x4a5b8>
  4512dc:	ldr	w1, [x20, #4]
  4512e0:	ldr	x0, [sp, #136]
  4512e4:	str	x0, [x19, #328]
  4512e8:	ldr	w0, [x19, #308]
  4512ec:	sub	w1, w1, #0x1
  4512f0:	str	w1, [x20, #4]
  4512f4:	sub	w0, w0, #0x1
  4512f8:	str	w0, [x19, #308]
  4512fc:	add	w21, w21, #0x1
  451300:	cmp	w21, w26
  451304:	b.ge	451324 <nftw@plt+0x4e7a4>  // b.tcont
  451308:	str	w21, [x19, #316]
  45130c:	cbz	x20, 45131c <nftw@plt+0x4e79c>
  451310:	ldr	w0, [x20, #4]
  451314:	cmp	w0, #0x1
  451318:	b.le	4512a4 <nftw@plt+0x4e724>
  45131c:	str	w24, [x19, #304]
  451320:	b	4512fc <nftw@plt+0x4e77c>
  451324:	ldp	x21, x22, [sp, #32]
  451328:	ldp	x23, x24, [sp, #48]
  45132c:	ldp	x25, x26, [sp, #64]
  451330:	ldr	x27, [sp, #80]
  451334:	b	44d1a0 <nftw@plt+0x4a620>
  451338:	cmp	w21, w26
  45133c:	b.lt	451298 <nftw@plt+0x4e718>  // b.tstop
  451340:	ldp	x21, x22, [sp, #32]
  451344:	ldp	x23, x24, [sp, #48]
  451348:	ldp	x25, x26, [sp, #64]
  45134c:	ldr	x27, [sp, #80]
  451350:	b	44d1a0 <nftw@plt+0x4a620>
  451354:	mov	w0, #0x1                   	// #1
  451358:	str	w0, [x19, #304]
  45135c:	b	451028 <nftw@plt+0x4e4a8>
  451360:	mov	w0, #0x1                   	// #1
  451364:	str	w0, [x19, #304]
  451368:	b	450940 <nftw@plt+0x4ddc0>
  45136c:	mov	w1, #0x1                   	// #1
  451370:	str	w1, [x19, #304]
  451374:	b	44e000 <nftw@plt+0x4b480>
  451378:	mov	w2, #0x1                   	// #1
  45137c:	add	x21, sp, #0x80
  451380:	str	w2, [x19, #304]
  451384:	b	44e220 <nftw@plt+0x4b6a0>
  451388:	mov	w0, #0x1                   	// #1
  45138c:	ldp	x21, x22, [sp, #32]
  451390:	ldp	x23, x24, [sp, #48]
  451394:	str	w0, [x19, #304]
  451398:	b	44d1a0 <nftw@plt+0x4a620>
  45139c:	mov	w0, #0x1                   	// #1
  4513a0:	ldp	x21, x22, [sp, #32]
  4513a4:	ldp	x23, x24, [sp, #48]
  4513a8:	str	w0, [x19, #304]
  4513ac:	b	44d1a0 <nftw@plt+0x4a620>
  4513b0:	mov	w1, #0x1                   	// #1
  4513b4:	str	w1, [x19, #304]
  4513b8:	b	44fe88 <nftw@plt+0x4d308>
  4513bc:	mov	w0, #0x1                   	// #1
  4513c0:	ldp	x21, x22, [sp, #32]
  4513c4:	ldp	x23, x24, [sp, #48]
  4513c8:	ldp	x25, x26, [sp, #64]
  4513cc:	str	w0, [x19, #304]
  4513d0:	b	44d1a0 <nftw@plt+0x4a620>
  4513d4:	mov	w0, #0x1                   	// #1
  4513d8:	str	w0, [x19, #304]
  4513dc:	b	44f724 <nftw@plt+0x4cba4>
  4513e0:	mov	w0, #0x1                   	// #1
  4513e4:	ldp	x21, x22, [sp, #32]
  4513e8:	ldp	x23, x24, [sp, #48]
  4513ec:	str	w0, [x19, #304]
  4513f0:	b	44d1a0 <nftw@plt+0x4a620>
  4513f4:	mov	w0, #0x1                   	// #1
  4513f8:	ldp	x21, x22, [sp, #32]
  4513fc:	ldp	x23, x24, [sp, #48]
  451400:	ldp	x25, x26, [sp, #64]
  451404:	str	w0, [x19, #304]
  451408:	b	44d1a0 <nftw@plt+0x4a620>
  45140c:	mov	w0, #0x1                   	// #1
  451410:	ldp	x21, x22, [sp, #32]
  451414:	ldp	x23, x24, [sp, #48]
  451418:	ldp	x25, x26, [sp, #64]
  45141c:	str	w0, [x19, #304]
  451420:	b	44d1a0 <nftw@plt+0x4a620>
  451424:	ldp	x25, x26, [sp, #64]
  451428:	cmp	x1, #0xff
  45142c:	b.ne	45578c <nftw@plt+0x52c0c>  // b.any
  451430:	ldp	x3, x2, [x19, #272]
  451434:	strb	wzr, [x19, #255]
  451438:	mov	x0, x19
  45143c:	blr	x3
  451440:	ldr	x1, [x19, #320]
  451444:	mov	w2, #0x3a7d                	// #14973
  451448:	mov	x0, #0x2                   	// #2
  45144c:	strh	w2, [x19]
  451450:	add	x1, x1, #0x1
  451454:	str	x1, [x19, #320]
  451458:	add	x2, x0, #0x1
  45145c:	str	x2, [x19, #256]
  451460:	mov	w1, #0x3a                  	// #58
  451464:	strb	w1, [x19, x0]
  451468:	strb	w1, [x19, #264]
  45146c:	ldr	x23, [x23, #8]
  451470:	cbnz	x23, 44d4a4 <nftw@plt+0x4a924>
  451474:	mov	w0, #0x1                   	// #1
  451478:	ldp	x21, x22, [sp, #32]
  45147c:	ldp	x23, x24, [sp, #48]
  451480:	str	w0, [x19, #304]
  451484:	b	44d1a0 <nftw@plt+0x4a620>
  451488:	mov	w0, #0x1                   	// #1
  45148c:	str	w0, [x19, #304]
  451490:	b	44d44c <nftw@plt+0x4a8cc>
  451494:	mov	w0, #0x1                   	// #1
  451498:	ldp	x21, x22, [sp, #32]
  45149c:	ldp	x23, x24, [sp, #48]
  4514a0:	str	w0, [x19, #304]
  4514a4:	b	44d1a0 <nftw@plt+0x4a620>
  4514a8:	mov	w0, #0x1                   	// #1
  4514ac:	ldp	x21, x22, [sp, #32]
  4514b0:	ldp	x23, x24, [sp, #48]
  4514b4:	str	w0, [x19, #304]
  4514b8:	b	44d1a0 <nftw@plt+0x4a620>
  4514bc:	mov	w0, #0x1                   	// #1
  4514c0:	ldp	x21, x22, [sp, #32]
  4514c4:	ldp	x23, x24, [sp, #48]
  4514c8:	str	w0, [x19, #304]
  4514cc:	b	44d1a0 <nftw@plt+0x4a620>
  4514d0:	mov	w0, #0x1                   	// #1
  4514d4:	ldp	x21, x22, [sp, #32]
  4514d8:	ldp	x23, x24, [sp, #48]
  4514dc:	str	w0, [x19, #304]
  4514e0:	b	44d1a0 <nftw@plt+0x4a620>
  4514e4:	mov	w0, #0x1                   	// #1
  4514e8:	ldp	x21, x22, [sp, #32]
  4514ec:	ldp	x23, x24, [sp, #48]
  4514f0:	ldp	x25, x26, [sp, #64]
  4514f4:	str	w0, [x19, #304]
  4514f8:	b	44d1a0 <nftw@plt+0x4a620>
  4514fc:	mov	w0, #0x1                   	// #1
  451500:	ldp	x21, x22, [sp, #32]
  451504:	ldp	x23, x24, [sp, #48]
  451508:	ldp	x25, x26, [sp, #64]
  45150c:	str	w0, [x19, #304]
  451510:	b	44d1a0 <nftw@plt+0x4a620>
  451514:	mov	w0, #0x1                   	// #1
  451518:	ldp	x21, x22, [sp, #32]
  45151c:	ldp	x23, x24, [sp, #48]
  451520:	str	w0, [x19, #304]
  451524:	b	44d1a0 <nftw@plt+0x4a620>
  451528:	mov	w0, #0x1                   	// #1
  45152c:	ldp	x21, x22, [sp, #32]
  451530:	ldp	x23, x24, [sp, #48]
  451534:	ldp	x25, x26, [sp, #64]
  451538:	str	w0, [x19, #304]
  45153c:	b	44d1a0 <nftw@plt+0x4a620>
  451540:	mov	w0, #0x1                   	// #1
  451544:	str	w0, [x19, #304]
  451548:	mov	x2, x24
  45154c:	mov	w1, w22
  451550:	mov	x0, x19
  451554:	bl	456850 <nftw@plt+0x53cd0>
  451558:	b	44d608 <nftw@plt+0x4aa88>
  45155c:	mov	w0, #0x1                   	// #1
  451560:	ldp	x21, x22, [sp, #32]
  451564:	ldp	x23, x24, [sp, #48]
  451568:	ldp	x25, x26, [sp, #64]
  45156c:	str	w0, [x19, #304]
  451570:	b	44d1a0 <nftw@plt+0x4a620>
  451574:	mov	w0, #0x1                   	// #1
  451578:	str	w0, [x19, #304]
  45157c:	b	44df1c <nftw@plt+0x4b39c>
  451580:	mov	w1, #0x1                   	// #1
  451584:	str	w1, [x19, #304]
  451588:	b	44f858 <nftw@plt+0x4ccd8>
  45158c:	mov	w0, #0x1                   	// #1
  451590:	ldp	x21, x22, [sp, #32]
  451594:	ldp	x23, x24, [sp, #48]
  451598:	ldp	x25, x26, [sp, #64]
  45159c:	str	w0, [x19, #304]
  4515a0:	b	44d1a0 <nftw@plt+0x4a620>
  4515a4:	mov	w1, #0x1                   	// #1
  4515a8:	str	w1, [x19, #304]
  4515ac:	b	44f374 <nftw@plt+0x4c7f4>
  4515b0:	mov	w0, #0x1                   	// #1
  4515b4:	ldp	x21, x22, [sp, #32]
  4515b8:	ldp	x23, x24, [sp, #48]
  4515bc:	ldp	x25, x26, [sp, #64]
  4515c0:	str	w0, [x19, #304]
  4515c4:	b	44d1a0 <nftw@plt+0x4a620>
  4515c8:	mov	w0, #0x1                   	// #1
  4515cc:	ldp	x21, x22, [sp, #32]
  4515d0:	ldp	x23, x24, [sp, #48]
  4515d4:	ldp	x25, x26, [sp, #64]
  4515d8:	str	w0, [x19, #304]
  4515dc:	b	44d1a0 <nftw@plt+0x4a620>
  4515e0:	mov	w0, #0x1                   	// #1
  4515e4:	ldp	x21, x22, [sp, #32]
  4515e8:	ldp	x23, x24, [sp, #48]
  4515ec:	str	w0, [x19, #304]
  4515f0:	b	44d1a0 <nftw@plt+0x4a620>
  4515f4:	mov	w0, #0x1                   	// #1
  4515f8:	ldp	x21, x22, [sp, #32]
  4515fc:	ldp	x23, x24, [sp, #48]
  451600:	str	w0, [x19, #304]
  451604:	b	44d1a0 <nftw@plt+0x4a620>
  451608:	mov	w0, #0x1                   	// #1
  45160c:	str	w0, [x19, #304]
  451610:	b	44eed0 <nftw@plt+0x4c350>
  451614:	mov	w0, #0x1                   	// #1
  451618:	ldp	x21, x22, [sp, #32]
  45161c:	ldp	x23, x24, [sp, #48]
  451620:	ldp	x25, x26, [sp, #64]
  451624:	str	w0, [x19, #304]
  451628:	b	44d1a0 <nftw@plt+0x4a620>
  45162c:	mov	w0, #0x1                   	// #1
  451630:	ldp	x21, x22, [sp, #32]
  451634:	ldp	x23, x24, [sp, #48]
  451638:	ldp	x25, x26, [sp, #64]
  45163c:	str	w0, [x19, #304]
  451640:	b	44d1a0 <nftw@plt+0x4a620>
  451644:	mov	w0, #0x1                   	// #1
  451648:	ldp	x21, x22, [sp, #32]
  45164c:	ldp	x23, x24, [sp, #48]
  451650:	ldp	x25, x26, [sp, #64]
  451654:	str	w0, [x19, #304]
  451658:	b	44d1a0 <nftw@plt+0x4a620>
  45165c:	mov	w0, #0x1                   	// #1
  451660:	ldp	x21, x22, [sp, #32]
  451664:	ldp	x23, x24, [sp, #48]
  451668:	ldp	x25, x26, [sp, #64]
  45166c:	str	w0, [x19, #304]
  451670:	b	44d1a0 <nftw@plt+0x4a620>
  451674:	mov	w0, #0x1                   	// #1
  451678:	ldp	x21, x22, [sp, #32]
  45167c:	ldp	x23, x24, [sp, #48]
  451680:	ldp	x25, x26, [sp, #64]
  451684:	str	w0, [x19, #304]
  451688:	b	44d1a0 <nftw@plt+0x4a620>
  45168c:	mov	w0, #0x1                   	// #1
  451690:	ldp	x21, x22, [sp, #32]
  451694:	ldp	x23, x24, [sp, #48]
  451698:	ldp	x25, x26, [sp, #64]
  45169c:	str	w0, [x19, #304]
  4516a0:	b	44d1a0 <nftw@plt+0x4a620>
  4516a4:	cbnz	x20, 450348 <nftw@plt+0x4d7c8>
  4516a8:	mov	w0, #0x1                   	// #1
  4516ac:	str	w0, [x19, #304]
  4516b0:	b	4503b0 <nftw@plt+0x4d830>
  4516b4:	mov	w1, #0x1                   	// #1
  4516b8:	str	w1, [x19, #304]
  4516bc:	b	4504c0 <nftw@plt+0x4d940>
  4516c0:	mov	w0, #0x1                   	// #1
  4516c4:	str	w0, [x19, #304]
  4516c8:	b	44d778 <nftw@plt+0x4abf8>
  4516cc:	ldr	x1, [x19, #256]
  4516d0:	cmp	x1, #0xff
  4516d4:	b.ne	45179c <nftw@plt+0x4ec1c>  // b.any
  4516d8:	ldp	x3, x2, [x19, #272]
  4516dc:	strb	wzr, [x19, #255]
  4516e0:	mov	x0, x19
  4516e4:	blr	x3
  4516e8:	ldr	x2, [x19, #320]
  4516ec:	mov	x0, #0x1                   	// #1
  4516f0:	mov	x1, #0x0                   	// #0
  4516f4:	add	x2, x2, x0
  4516f8:	str	x2, [x19, #320]
  4516fc:	str	x0, [x19, #256]
  451700:	mov	w0, #0x7d                  	// #125
  451704:	strb	w0, [x19, x1]
  451708:	strb	w0, [x19, #264]
  45170c:	ldp	x21, x22, [sp, #32]
  451710:	ldp	x23, x24, [sp, #48]
  451714:	b	44d1a0 <nftw@plt+0x4a620>
  451718:	ldr	x1, [x19, #256]
  45171c:	cmp	x1, #0xff
  451720:	b.ne	4517a8 <nftw@plt+0x4ec28>  // b.any
  451724:	ldp	x3, x2, [x19, #272]
  451728:	strb	wzr, [x19, #255]
  45172c:	mov	x0, x19
  451730:	blr	x3
  451734:	ldr	x2, [x19, #320]
  451738:	mov	x0, #0x1                   	// #1
  45173c:	mov	x1, #0x0                   	// #0
  451740:	add	x2, x2, x0
  451744:	str	x2, [x19, #320]
  451748:	str	x0, [x19, #256]
  45174c:	mov	w0, #0x7d                  	// #125
  451750:	strb	w0, [x19, x1]
  451754:	strb	w0, [x19, #264]
  451758:	ldp	x21, x22, [sp, #32]
  45175c:	ldp	x23, x24, [sp, #48]
  451760:	b	44d1a0 <nftw@plt+0x4a620>
  451764:	ldp	x3, x2, [x19, #272]
  451768:	strb	wzr, [x19, #255]
  45176c:	mov	x1, x0
  451770:	mov	x0, x19
  451774:	blr	x3
  451778:	ldr	x0, [x19, #320]
  45177c:	mov	w2, #0x29                  	// #41
  451780:	mov	x1, #0x1                   	// #1
  451784:	strb	w2, [x19]
  451788:	add	x0, x0, x1
  45178c:	str	x0, [x19, #320]
  451790:	add	x0, x1, #0x1
  451794:	b	44e26c <nftw@plt+0x4b6ec>
  451798:	mov	x1, #0x1                   	// #1
  45179c:	add	x0, x1, #0x1
  4517a0:	b	4516fc <nftw@plt+0x4eb7c>
  4517a4:	mov	x1, #0x1                   	// #1
  4517a8:	add	x0, x1, #0x1
  4517ac:	b	451748 <nftw@plt+0x4ebc8>
  4517b0:	add	x3, x0, #0x2
  4517b4:	str	x3, [x19, #256]
  4517b8:	mov	w2, #0x75                  	// #117
  4517bc:	strb	w2, [x19, x1]
  4517c0:	strb	w2, [x19, #264]
  4517c4:	cmp	x3, #0xff
  4517c8:	b.ne	452690 <nftw@plt+0x4fb10>  // b.any
  4517cc:	ldp	x4, x2, [x19, #272]
  4517d0:	strb	wzr, [x19, #255]
  4517d4:	mov	x1, x3
  4517d8:	mov	x0, x19
  4517dc:	blr	x4
  4517e0:	ldr	x1, [x19, #320]
  4517e4:	mov	w3, #0x6e6e                	// #28270
  4517e8:	mov	w2, #0x61                  	// #97
  4517ec:	mov	x0, #0x3                   	// #3
  4517f0:	add	x1, x1, #0x1
  4517f4:	strh	w3, [x19]
  4517f8:	strb	w2, [x19, #2]
  4517fc:	str	x1, [x19, #320]
  451800:	add	x1, x0, #0x1
  451804:	str	x1, [x19, #256]
  451808:	mov	w2, #0x6d                  	// #109
  45180c:	strb	w2, [x19, x0]
  451810:	strb	w2, [x19, #264]
  451814:	cmp	x1, #0xff
  451818:	b.ne	4526e0 <nftw@plt+0x4fb60>  // b.any
  45181c:	ldp	x3, x2, [x19, #272]
  451820:	strb	wzr, [x19, #255]
  451824:	mov	x0, x19
  451828:	blr	x3
  45182c:	ldr	x1, [x19, #320]
  451830:	mov	w3, #0x6465                	// #25701
  451834:	mov	w2, #0x20                  	// #32
  451838:	mov	x0, #0x3                   	// #3
  45183c:	add	x1, x1, #0x1
  451840:	strh	w3, [x19]
  451844:	strb	w2, [x19, #2]
  451848:	str	x1, [x19, #320]
  45184c:	add	x1, x0, #0x1
  451850:	str	x1, [x19, #256]
  451854:	mov	w2, #0x74                  	// #116
  451858:	strb	w2, [x19, x0]
  45185c:	strb	w2, [x19, #264]
  451860:	cmp	x1, #0xff
  451864:	b.ne	452730 <nftw@plt+0x4fbb0>  // b.any
  451868:	ldp	x3, x2, [x19, #272]
  45186c:	strb	wzr, [x19, #255]
  451870:	mov	x0, x19
  451874:	blr	x3
  451878:	ldr	x0, [x19, #320]
  45187c:	mov	w2, #0x7079                	// #28793
  451880:	mov	x1, #0x2                   	// #2
  451884:	strh	w2, [x19]
  451888:	add	x0, x0, #0x1
  45188c:	str	x0, [x19, #320]
  451890:	add	x0, x1, #0x1
  451894:	mov	w2, #0x65                  	// #101
  451898:	strb	w2, [x19, x1]
  45189c:	add	x1, x0, #0x1
  4518a0:	b	44e458 <nftw@plt+0x4b8d8>
  4518a4:	add	x3, x0, #0x2
  4518a8:	str	x3, [x19, #256]
  4518ac:	mov	w2, #0x61                  	// #97
  4518b0:	strb	w2, [x19, x1]
  4518b4:	strb	w2, [x19, #264]
  4518b8:	cmp	x3, #0xff
  4518bc:	b.ne	453384 <nftw@plt+0x50804>  // b.any
  4518c0:	ldp	x4, x2, [x19, #272]
  4518c4:	strb	wzr, [x19, #255]
  4518c8:	mov	x1, x3
  4518cc:	mov	x0, x19
  4518d0:	blr	x4
  4518d4:	ldr	x1, [x19, #320]
  4518d8:	mov	w3, #0x6176                	// #24950
  4518dc:	mov	w2, #0x20                  	// #32
  4518e0:	mov	x0, #0x3                   	// #3
  4518e4:	add	x1, x1, #0x1
  4518e8:	strh	w3, [x19]
  4518ec:	strb	w2, [x19, #2]
  4518f0:	str	x1, [x19, #320]
  4518f4:	add	x1, x0, #0x1
  4518f8:	str	x1, [x19, #256]
  4518fc:	mov	w2, #0x72                  	// #114
  451900:	strb	w2, [x19, x0]
  451904:	strb	w2, [x19, #264]
  451908:	cmp	x1, #0xff
  45190c:	b.ne	4533d4 <nftw@plt+0x50854>  // b.any
  451910:	ldp	x3, x2, [x19, #272]
  451914:	strb	wzr, [x19, #255]
  451918:	mov	x0, x19
  45191c:	blr	x3
  451920:	ldr	x1, [x19, #320]
  451924:	mov	w3, #0x7365                	// #29541
  451928:	mov	w2, #0x6f                  	// #111
  45192c:	mov	x0, #0x3                   	// #3
  451930:	add	x1, x1, #0x1
  451934:	strh	w3, [x19]
  451938:	strb	w2, [x19, #2]
  45193c:	str	x1, [x19, #320]
  451940:	add	x1, x0, #0x1
  451944:	str	x1, [x19, #256]
  451948:	mov	w2, #0x75                  	// #117
  45194c:	strb	w2, [x19, x0]
  451950:	strb	w2, [x19, #264]
  451954:	cmp	x1, #0xff
  451958:	b.ne	453424 <nftw@plt+0x508a4>  // b.any
  45195c:	ldp	x3, x2, [x19, #272]
  451960:	strb	wzr, [x19, #255]
  451964:	mov	x0, x19
  451968:	blr	x3
  45196c:	ldr	x0, [x19, #320]
  451970:	mov	w2, #0x6372                	// #25458
  451974:	mov	x1, #0x2                   	// #2
  451978:	strh	w2, [x19]
  45197c:	add	x0, x0, #0x1
  451980:	str	x0, [x19, #320]
  451984:	add	x0, x1, #0x1
  451988:	mov	w2, #0x65                  	// #101
  45198c:	strb	w2, [x19, x1]
  451990:	add	x1, x0, #0x1
  451994:	b	44edd4 <nftw@plt+0x4c254>
  451998:	ldp	x3, x2, [x19, #272]
  45199c:	strb	wzr, [x19, #255]
  4519a0:	mov	x1, x0
  4519a4:	mov	x0, x19
  4519a8:	blr	x3
  4519ac:	ldr	x1, [x19, #320]
  4519b0:	mov	w3, #0x6564                	// #25956
  4519b4:	mov	w2, #0x63                  	// #99
  4519b8:	mov	x0, #0x3                   	// #3
  4519bc:	add	x1, x1, #0x1
  4519c0:	strh	w3, [x19]
  4519c4:	strb	w2, [x19, #2]
  4519c8:	str	x1, [x19, #320]
  4519cc:	add	x1, x0, #0x1
  4519d0:	str	x1, [x19, #256]
  4519d4:	mov	w2, #0x6c                  	// #108
  4519d8:	strb	w2, [x19, x0]
  4519dc:	strb	w2, [x19, #264]
  4519e0:	cmp	x1, #0xff
  4519e4:	b.ne	44fd74 <nftw@plt+0x4d1f4>  // b.any
  4519e8:	ldp	x3, x2, [x19, #272]
  4519ec:	strb	wzr, [x19, #255]
  4519f0:	mov	x0, x19
  4519f4:	blr	x3
  4519f8:	ldr	x1, [x19, #320]
  4519fc:	mov	w3, #0x7974                	// #31092
  451a00:	mov	w2, #0x70                  	// #112
  451a04:	mov	x0, #0x3                   	// #3
  451a08:	add	x1, x1, #0x1
  451a0c:	strh	w3, [x19]
  451a10:	strb	w2, [x19, #2]
  451a14:	str	x1, [x19, #320]
  451a18:	add	x3, x0, #0x1
  451a1c:	str	x3, [x19, #256]
  451a20:	mov	w1, #0x65                  	// #101
  451a24:	strb	w1, [x19, x0]
  451a28:	strb	w1, [x19, #264]
  451a2c:	cmp	x3, #0xff
  451a30:	b.ne	44fdc4 <nftw@plt+0x4d244>  // b.any
  451a34:	ldp	x4, x2, [x19, #272]
  451a38:	strb	wzr, [x19, #255]
  451a3c:	mov	x1, x3
  451a40:	mov	x0, x19
  451a44:	blr	x4
  451a48:	ldr	x0, [x19, #320]
  451a4c:	mov	w2, #0x20                  	// #32
  451a50:	mov	x1, #0x1                   	// #1
  451a54:	strb	w2, [x19]
  451a58:	add	x0, x0, x1
  451a5c:	str	x0, [x19, #320]
  451a60:	add	x0, x1, #0x1
  451a64:	b	44fe04 <nftw@plt+0x4d284>
  451a68:	mov	w0, #0x1                   	// #1
  451a6c:	str	w0, [x19, #304]
  451a70:	b	44dd34 <nftw@plt+0x4b1b4>
  451a74:	ldp	x21, x22, [sp, #32]
  451a78:	ldp	x23, x24, [sp, #48]
  451a7c:	b	44d1a0 <nftw@plt+0x4a620>
  451a80:	ldp	x21, x22, [sp, #32]
  451a84:	ldp	x23, x24, [sp, #48]
  451a88:	b	44d1a0 <nftw@plt+0x4a620>
  451a8c:	ldp	x21, x22, [sp, #32]
  451a90:	ldp	x23, x24, [sp, #48]
  451a94:	b	44d1a0 <nftw@plt+0x4a620>
  451a98:	ldr	x20, [x24, #8]
  451a9c:	cbz	w26, 455664 <nftw@plt+0x52ae4>
  451aa0:	str	x27, [sp, #80]
  451aa4:	b	44ddd8 <nftw@plt+0x4b258>
  451aa8:	mov	w0, #0x1                   	// #1
  451aac:	str	w0, [x19, #304]
  451ab0:	sub	x21, x21, #0x2
  451ab4:	ldp	x23, x24, [sp, #48]
  451ab8:	str	x21, [x19, #256]
  451abc:	ldp	x21, x22, [sp, #32]
  451ac0:	b	44d1a0 <nftw@plt+0x4a620>
  451ac4:	mov	x24, x0
  451ac8:	ldr	x25, [x0, #8]
  451acc:	b	44d560 <nftw@plt+0x4a9e0>
  451ad0:	mov	w1, #0x1                   	// #1
  451ad4:	str	w1, [x19, #304]
  451ad8:	b	44d8dc <nftw@plt+0x4ad5c>
  451adc:	mov	w0, #0x1                   	// #1
  451ae0:	str	w0, [x19, #304]
  451ae4:	b	44d6bc <nftw@plt+0x4ab3c>
  451ae8:	ldr	x21, [x19, #288]
  451aec:	cbz	x21, 44d1cc <nftw@plt+0x4a64c>
  451af0:	ldr	x2, [x21, #8]
  451af4:	ldr	x1, [x24, #8]
  451af8:	ldr	x20, [x2, #16]
  451afc:	mov	w0, w1
  451b00:	tbnz	w1, #31, 451b2c <nftw@plt+0x4efac>
  451b04:	nop
  451b08:	cbz	x20, 44d1cc <nftw@plt+0x4a64c>
  451b0c:	ldr	w1, [x20]
  451b10:	cmp	w1, #0x2f
  451b14:	b.ne	44d1cc <nftw@plt+0x4a64c>  // b.any
  451b18:	cbz	w0, 451b28 <nftw@plt+0x4efa8>
  451b1c:	sub	w0, w0, #0x1
  451b20:	ldr	x20, [x20, #16]
  451b24:	b	451b08 <nftw@plt+0x4ef88>
  451b28:	ldr	x20, [x20, #8]
  451b2c:	cbz	x20, 44d1cc <nftw@plt+0x4a64c>
  451b30:	ldr	w0, [x20]
  451b34:	cmp	w0, #0x2f
  451b38:	b.eq	455434 <nftw@plt+0x528b4>  // b.none
  451b3c:	ldr	x0, [x21]
  451b40:	str	x0, [x19, #288]
  451b44:	ldr	w0, [x20, #4]
  451b48:	cmp	w0, #0x1
  451b4c:	b.gt	45472c <nftw@plt+0x51bac>
  451b50:	ldr	w1, [x19, #308]
  451b54:	cmp	w1, #0x400
  451b58:	b.gt	45472c <nftw@plt+0x51bac>
  451b5c:	ldr	x3, [x19, #328]
  451b60:	add	w0, w0, #0x1
  451b64:	str	w0, [x20, #4]
  451b68:	add	w1, w1, #0x1
  451b6c:	add	x0, sp, #0x80
  451b70:	str	w1, [x19, #308]
  451b74:	str	x0, [x19, #328]
  451b78:	mov	w1, w22
  451b7c:	mov	x0, x19
  451b80:	mov	x2, x20
  451b84:	stp	x20, x3, [sp, #128]
  451b88:	bl	44d138 <nftw@plt+0x4a5b8>
  451b8c:	ldr	w1, [x20, #4]
  451b90:	ldr	x0, [sp, #136]
  451b94:	str	x0, [x19, #328]
  451b98:	ldr	w0, [x19, #308]
  451b9c:	sub	w1, w1, #0x1
  451ba0:	str	w1, [x20, #4]
  451ba4:	sub	w0, w0, #0x1
  451ba8:	str	w0, [x19, #308]
  451bac:	ldp	x23, x24, [sp, #48]
  451bb0:	str	x21, [x19, #288]
  451bb4:	ldp	x21, x22, [sp, #32]
  451bb8:	b	44d1a0 <nftw@plt+0x4a620>
  451bbc:	mov	x0, x3
  451bc0:	ldr	x4, [x19, #288]
  451bc4:	b	44d544 <nftw@plt+0x4a9c4>
  451bc8:	ldrsw	x22, [x0, #24]
  451bcc:	ldr	x20, [x0, #16]
  451bd0:	cbz	x22, 455b54 <nftw@plt+0x52fd4>
  451bd4:	add	x22, x20, x22
  451bd8:	mov	x23, #0x1                   	// #1
  451bdc:	ldr	x1, [x19, #256]
  451be0:	b	451c3c <nftw@plt+0x4f0bc>
  451be4:	ldp	x3, x2, [x19, #272]
  451be8:	strb	wzr, [x19, #255]
  451bec:	mov	x0, x19
  451bf0:	add	x20, x20, #0x1
  451bf4:	blr	x3
  451bf8:	strb	w21, [x19]
  451bfc:	ldr	x0, [x19, #320]
  451c00:	str	x23, [x19, #256]
  451c04:	strb	w21, [x19, #264]
  451c08:	cmp	x20, x22
  451c0c:	add	x0, x0, #0x1
  451c10:	str	x0, [x19, #320]
  451c14:	b.eq	455404 <nftw@plt+0x52884>  // b.none
  451c18:	ldrb	w21, [x20]
  451c1c:	mov	x0, #0x1                   	// #1
  451c20:	add	x1, x0, #0x1
  451c24:	str	x1, [x19, #256]
  451c28:	strb	w21, [x19, x0]
  451c2c:	add	x20, x20, #0x1
  451c30:	strb	w21, [x19, #264]
  451c34:	cmp	x22, x20
  451c38:	b.eq	4546f8 <nftw@plt+0x51b78>  // b.none
  451c3c:	ldrb	w21, [x20]
  451c40:	cmp	x1, #0xff
  451c44:	b.eq	451be4 <nftw@plt+0x4f064>  // b.none
  451c48:	mov	x0, x1
  451c4c:	b	451c20 <nftw@plt+0x4f0a0>
  451c50:	add	x21, x20, x21
  451c54:	cmp	x21, x20
  451c58:	b.ls	455c40 <nftw@plt+0x530c0>  // b.plast
  451c5c:	mov	w23, #0x5f                  	// #95
  451c60:	ldr	x1, [x19, #256]
  451c64:	b	451c88 <nftw@plt+0x4f108>
  451c68:	mov	x0, x1
  451c6c:	add	x1, x1, #0x1
  451c70:	str	x1, [x19, #256]
  451c74:	strb	w22, [x19, x0]
  451c78:	strb	w22, [x19, #264]
  451c7c:	add	x20, x20, #0x1
  451c80:	cmp	x21, x20
  451c84:	b.ls	4539a4 <nftw@plt+0x50e24>  // b.plast
  451c88:	sub	x0, x21, x20
  451c8c:	ldrb	w22, [x20]
  451c90:	cmp	x0, #0x3
  451c94:	b.le	451ca0 <nftw@plt+0x4f120>
  451c98:	cmp	w22, #0x5f
  451c9c:	b.eq	451cd0 <nftw@plt+0x4f150>  // b.none
  451ca0:	cmp	x1, #0xff
  451ca4:	b.ne	451c68 <nftw@plt+0x4f0e8>  // b.any
  451ca8:	ldp	x3, x2, [x19, #272]
  451cac:	strb	wzr, [x19, #255]
  451cb0:	mov	x0, x19
  451cb4:	blr	x3
  451cb8:	ldr	x2, [x19, #320]
  451cbc:	mov	x1, #0x1                   	// #1
  451cc0:	mov	x0, #0x0                   	// #0
  451cc4:	add	x2, x2, x1
  451cc8:	str	x2, [x19, #320]
  451ccc:	b	451c70 <nftw@plt+0x4f0f0>
  451cd0:	ldrb	w0, [x20, #1]
  451cd4:	cmp	w0, #0x5f
  451cd8:	b.ne	451ca0 <nftw@plt+0x4f120>  // b.any
  451cdc:	ldrb	w0, [x20, #2]
  451ce0:	cmp	w0, #0x55
  451ce4:	b.ne	451ca0 <nftw@plt+0x4f120>  // b.any
  451ce8:	add	x24, x20, #0x3
  451cec:	cmp	x21, x24
  451cf0:	b.ls	451ca0 <nftw@plt+0x4f120>  // b.plast
  451cf4:	mov	x2, #0x0                   	// #0
  451cf8:	b	451d14 <nftw@plt+0x4f194>
  451cfc:	mov	w0, w3
  451d00:	sxtw	x0, w0
  451d04:	add	x24, x24, #0x1
  451d08:	add	x2, x0, x2, lsl #4
  451d0c:	cmp	x21, x24
  451d10:	b.eq	451ca0 <nftw@plt+0x4f120>  // b.none
  451d14:	ldrb	w0, [x24]
  451d18:	sub	w3, w0, #0x30
  451d1c:	and	w4, w3, #0xff
  451d20:	cmp	w4, #0x9
  451d24:	b.ls	451cfc <nftw@plt+0x4f17c>  // b.plast
  451d28:	sub	w3, w0, #0x41
  451d2c:	and	w3, w3, #0xff
  451d30:	cmp	w3, #0x5
  451d34:	b.hi	455410 <nftw@plt+0x52890>  // b.pmore
  451d38:	sub	w0, w0, #0x37
  451d3c:	b	451d00 <nftw@plt+0x4f180>
  451d40:	b.eq	4549d4 <nftw@plt+0x51e54>  // b.none
  451d44:	add	x3, x0, #0x1
  451d48:	str	x3, [x19, #256]
  451d4c:	mov	w1, #0x7b                  	// #123
  451d50:	strb	w1, [x19, x0]
  451d54:	strb	w1, [x19, #264]
  451d58:	cmp	x3, #0xff
  451d5c:	b.ne	4544d4 <nftw@plt+0x51954>  // b.any
  451d60:	ldp	x4, x2, [x19, #272]
  451d64:	strb	wzr, [x19, #255]
  451d68:	mov	x1, x3
  451d6c:	mov	x0, x19
  451d70:	blr	x4
  451d74:	ldr	x0, [x19, #320]
  451d78:	mov	w3, #0x6170                	// #24944
  451d7c:	mov	w2, #0x72                  	// #114
  451d80:	mov	x1, #0x3                   	// #3
  451d84:	add	x0, x0, #0x1
  451d88:	strh	w3, [x19]
  451d8c:	strb	w2, [x19, #2]
  451d90:	str	x0, [x19, #320]
  451d94:	add	x0, x1, #0x1
  451d98:	str	x0, [x19, #256]
  451d9c:	mov	w2, #0x6d                  	// #109
  451da0:	strb	w2, [x19, x1]
  451da4:	strb	w2, [x19, #264]
  451da8:	cmp	x0, #0xff
  451dac:	b.ne	454524 <nftw@plt+0x519a4>  // b.any
  451db0:	ldp	x3, x2, [x19, #272]
  451db4:	strb	wzr, [x19, #255]
  451db8:	mov	x1, x0
  451dbc:	mov	x0, x19
  451dc0:	blr	x3
  451dc4:	ldr	x2, [x19, #320]
  451dc8:	mov	x1, #0x1                   	// #1
  451dcc:	mov	x0, #0x0                   	// #0
  451dd0:	add	x2, x2, x1
  451dd4:	str	x2, [x19, #320]
  451dd8:	str	x1, [x19, #256]
  451ddc:	mov	w3, #0x23                  	// #35
  451de0:	strb	w3, [x19, x0]
  451de4:	mov	w2, w20
  451de8:	adrp	x1, 473000 <_obstack_memory_used@@Base+0x11bb8>
  451dec:	add	x1, x1, #0x1f8
  451df0:	strb	w3, [x19, #264]
  451df4:	add	x0, sp, #0x80
  451df8:	bl	4025b0 <sprintf@plt>
  451dfc:	add	x0, sp, #0x80
  451e00:	bl	4024f0 <strlen@plt>
  451e04:	cbz	x0, 453afc <nftw@plt+0x50f7c>
  451e08:	add	x20, sp, #0x80
  451e0c:	mov	x23, #0x1                   	// #1
  451e10:	add	x22, x20, x0
  451e14:	ldr	x1, [x19, #256]
  451e18:	b	451e74 <nftw@plt+0x4f2f4>
  451e1c:	ldp	x3, x2, [x19, #272]
  451e20:	strb	wzr, [x19, #255]
  451e24:	mov	x0, x19
  451e28:	add	x20, x20, #0x1
  451e2c:	blr	x3
  451e30:	strb	w21, [x19]
  451e34:	ldr	x0, [x19, #320]
  451e38:	str	x23, [x19, #256]
  451e3c:	strb	w21, [x19, #264]
  451e40:	cmp	x20, x22
  451e44:	add	x0, x0, #0x1
  451e48:	str	x0, [x19, #320]
  451e4c:	b.eq	4543ec <nftw@plt+0x5186c>  // b.none
  451e50:	ldrb	w21, [x20]
  451e54:	mov	x0, #0x1                   	// #1
  451e58:	add	x1, x0, #0x1
  451e5c:	str	x1, [x19, #256]
  451e60:	strb	w21, [x19, x0]
  451e64:	add	x20, x20, #0x1
  451e68:	strb	w21, [x19, #264]
  451e6c:	cmp	x22, x20
  451e70:	b.eq	453b00 <nftw@plt+0x50f80>  // b.none
  451e74:	ldrb	w21, [x20]
  451e78:	cmp	x1, #0xff
  451e7c:	b.eq	451e1c <nftw@plt+0x4f29c>  // b.none
  451e80:	mov	x0, x1
  451e84:	b	451e58 <nftw@plt+0x4f2d8>
  451e88:	ldr	x25, [x25, #8]
  451e8c:	cbz	x25, 455df0 <nftw@plt+0x53270>
  451e90:	ldr	w4, [x25]
  451e94:	add	x21, sp, #0x80
  451e98:	stp	x21, x25, [sp, #160]
  451e9c:	sub	w1, w4, #0x1c
  451ea0:	str	wzr, [sp, #176]
  451ea4:	cmp	w1, #0x34
  451ea8:	str	x3, [sp, #184]
  451eac:	b.hi	451ebc <nftw@plt+0x4f33c>  // b.pmore
  451eb0:	lsl	x1, x0, x1
  451eb4:	tst	x1, x2
  451eb8:	b.ne	45481c <nftw@plt+0x51c9c>  // b.any
  451ebc:	add	x1, x21, #0x20
  451ec0:	mov	w20, #0x2                   	// #2
  451ec4:	b	44dad8 <nftw@plt+0x4af58>
  451ec8:	add	x3, x1, #0x2
  451ecc:	str	x3, [x19, #256]
  451ed0:	mov	w2, #0x66                  	// #102
  451ed4:	strb	w2, [x19, x0]
  451ed8:	strb	w2, [x19, #264]
  451edc:	cmp	x3, #0xff
  451ee0:	b.ne	452a9c <nftw@plt+0x4ff1c>  // b.any
  451ee4:	ldp	x4, x2, [x19, #272]
  451ee8:	strb	wzr, [x19, #255]
  451eec:	mov	x1, x3
  451ef0:	mov	x0, x19
  451ef4:	blr	x4
  451ef8:	ldr	x0, [x19, #320]
  451efc:	mov	w1, #0x6f                  	// #111
  451f00:	mov	x2, #0x1                   	// #1
  451f04:	strb	w1, [x19]
  451f08:	add	x0, x0, x2
  451f0c:	str	x0, [x19, #320]
  451f10:	b	451078 <nftw@plt+0x4e4f8>
  451f14:	add	x3, x0, #0x2
  451f18:	str	x3, [x19, #256]
  451f1c:	mov	w2, #0x6c                  	// #108
  451f20:	strb	w2, [x19, x1]
  451f24:	strb	w2, [x19, #264]
  451f28:	cmp	x3, #0xff
  451f2c:	b.ne	453624 <nftw@plt+0x50aa4>  // b.any
  451f30:	ldp	x4, x2, [x19, #272]
  451f34:	strb	wzr, [x19, #255]
  451f38:	mov	x1, x3
  451f3c:	mov	x0, x19
  451f40:	blr	x4
  451f44:	ldr	x1, [x19, #320]
  451f48:	mov	w3, #0x6d61                	// #28001
  451f4c:	mov	w2, #0x62                  	// #98
  451f50:	mov	x0, #0x3                   	// #3
  451f54:	add	x1, x1, #0x1
  451f58:	strh	w3, [x19]
  451f5c:	strb	w2, [x19, #2]
  451f60:	str	x1, [x19, #320]
  451f64:	add	x3, x0, #0x1
  451f68:	str	x3, [x19, #256]
  451f6c:	mov	w1, #0x64                  	// #100
  451f70:	strb	w1, [x19, x0]
  451f74:	strb	w1, [x19, #264]
  451f78:	cmp	x3, #0xff
  451f7c:	b.ne	453674 <nftw@plt+0x50af4>  // b.any
  451f80:	ldp	x4, x2, [x19, #272]
  451f84:	strb	wzr, [x19, #255]
  451f88:	mov	x1, x3
  451f8c:	mov	x0, x19
  451f90:	blr	x4
  451f94:	ldr	x0, [x19, #320]
  451f98:	mov	w2, #0x61                  	// #97
  451f9c:	mov	x1, #0x1                   	// #1
  451fa0:	strb	w2, [x19]
  451fa4:	add	x0, x0, x1
  451fa8:	str	x0, [x19, #320]
  451fac:	b	44e184 <nftw@plt+0x4b604>
  451fb0:	add	x3, x0, #0x2
  451fb4:	str	x3, [x19, #256]
  451fb8:	mov	w2, #0x70                  	// #112
  451fbc:	strb	w2, [x19, x1]
  451fc0:	strb	w2, [x19, #264]
  451fc4:	cmp	x3, #0xff
  451fc8:	b.ne	452ca0 <nftw@plt+0x50120>  // b.any
  451fcc:	ldp	x4, x2, [x19, #272]
  451fd0:	strb	wzr, [x19, #255]
  451fd4:	mov	x1, x3
  451fd8:	mov	x0, x19
  451fdc:	blr	x4
  451fe0:	ldr	x0, [x19, #320]
  451fe4:	mov	w3, #0x7265                	// #29285
  451fe8:	mov	w2, #0x61                  	// #97
  451fec:	mov	x1, #0x3                   	// #3
  451ff0:	add	x0, x0, #0x1
  451ff4:	strh	w3, [x19]
  451ff8:	strb	w2, [x19, #2]
  451ffc:	str	x0, [x19, #320]
  452000:	add	x0, x1, #0x1
  452004:	str	x0, [x19, #256]
  452008:	mov	w2, #0x74                  	// #116
  45200c:	strb	w2, [x19, x1]
  452010:	strb	w2, [x19, #264]
  452014:	cmp	x0, #0xff
  452018:	b.ne	452cf0 <nftw@plt+0x50170>  // b.any
  45201c:	ldp	x3, x2, [x19, #272]
  452020:	strb	wzr, [x19, #255]
  452024:	mov	x1, x0
  452028:	mov	x0, x19
  45202c:	blr	x3
  452030:	ldr	x0, [x19, #320]
  452034:	mov	w2, #0x6f                  	// #111
  452038:	mov	x1, #0x1                   	// #1
  45203c:	strb	w2, [x19]
  452040:	add	x0, x0, x1
  452044:	str	x0, [x19, #320]
  452048:	b	44f618 <nftw@plt+0x4ca98>
  45204c:	add	x3, x0, #0x2
  452050:	str	x3, [x19, #256]
  452054:	mov	w2, #0x61                  	// #97
  452058:	strb	w2, [x19, x1]
  45205c:	strb	w2, [x19, #264]
  452060:	cmp	x3, #0xff
  452064:	b.ne	452184 <nftw@plt+0x4f604>  // b.any
  452068:	ldp	x4, x2, [x19, #272]
  45206c:	strb	wzr, [x19, #255]
  452070:	mov	x1, x3
  452074:	mov	x0, x19
  452078:	blr	x4
  45207c:	ldr	x0, [x19, #320]
  452080:	mov	w3, #0x6176                	// #24950
  452084:	mov	w2, #0x20                  	// #32
  452088:	mov	x1, #0x3                   	// #3
  45208c:	add	x0, x0, #0x1
  452090:	strh	w3, [x19]
  452094:	strb	w2, [x19, #2]
  452098:	str	x0, [x19, #320]
  45209c:	add	x0, x1, #0x1
  4520a0:	str	x0, [x19, #256]
  4520a4:	mov	w2, #0x43                  	// #67
  4520a8:	strb	w2, [x19, x1]
  4520ac:	strb	w2, [x19, #264]
  4520b0:	cmp	x0, #0xff
  4520b4:	b.ne	4521d4 <nftw@plt+0x4f654>  // b.any
  4520b8:	ldp	x3, x2, [x19, #272]
  4520bc:	strb	wzr, [x19, #255]
  4520c0:	mov	x1, x0
  4520c4:	mov	x0, x19
  4520c8:	blr	x3
  4520cc:	ldr	x0, [x19, #320]
  4520d0:	mov	w3, #0x616c                	// #24940
  4520d4:	mov	w2, #0x73                  	// #115
  4520d8:	mov	x1, #0x3                   	// #3
  4520dc:	add	x0, x0, #0x1
  4520e0:	strh	w3, [x19]
  4520e4:	strb	w2, [x19, #2]
  4520e8:	str	x0, [x19, #320]
  4520ec:	add	x0, x1, #0x1
  4520f0:	str	x0, [x19, #256]
  4520f4:	mov	w2, #0x73                  	// #115
  4520f8:	strb	w2, [x19, x1]
  4520fc:	strb	w2, [x19, #264]
  452100:	cmp	x0, #0xff
  452104:	b.ne	452220 <nftw@plt+0x4f6a0>  // b.any
  452108:	ldp	x3, x2, [x19, #272]
  45210c:	strb	wzr, [x19, #255]
  452110:	mov	x1, x0
  452114:	mov	x0, x19
  452118:	blr	x3
  45211c:	ldr	x0, [x19, #320]
  452120:	mov	w3, #0x6620                	// #26144
  452124:	mov	w2, #0x6f                  	// #111
  452128:	mov	x1, #0x3                   	// #3
  45212c:	add	x0, x0, #0x1
  452130:	strh	w3, [x19]
  452134:	strb	w2, [x19, #2]
  452138:	str	x0, [x19, #320]
  45213c:	add	x0, x1, #0x1
  452140:	str	x0, [x19, #256]
  452144:	mov	w2, #0x72                  	// #114
  452148:	strb	w2, [x19, x1]
  45214c:	strb	w2, [x19, #264]
  452150:	cmp	x0, #0xff
  452154:	b.ne	44e6c8 <nftw@plt+0x4bb48>  // b.any
  452158:	ldp	x3, x2, [x19, #272]
  45215c:	strb	wzr, [x19, #255]
  452160:	mov	x1, x0
  452164:	mov	x0, x19
  452168:	blr	x3
  45216c:	ldr	x2, [x19, #320]
  452170:	mov	x1, #0x1                   	// #1
  452174:	mov	x0, #0x0                   	// #0
  452178:	add	x2, x2, x1
  45217c:	str	x2, [x19, #320]
  452180:	b	44e6cc <nftw@plt+0x4bb4c>
  452184:	add	x0, x0, #0x3
  452188:	str	x0, [x19, #256]
  45218c:	mov	w1, #0x76                  	// #118
  452190:	strb	w1, [x19, x3]
  452194:	strb	w1, [x19, #264]
  452198:	cmp	x0, #0xff
  45219c:	b.ne	4529b0 <nftw@plt+0x4fe30>  // b.any
  4521a0:	ldp	x3, x2, [x19, #272]
  4521a4:	strb	wzr, [x19, #255]
  4521a8:	mov	x1, x0
  4521ac:	mov	x0, x19
  4521b0:	blr	x3
  4521b4:	ldr	x1, [x19, #320]
  4521b8:	mov	w3, #0x2061                	// #8289
  4521bc:	mov	w2, #0x43                  	// #67
  4521c0:	mov	x0, #0x3                   	// #3
  4521c4:	add	x1, x1, #0x1
  4521c8:	strh	w3, [x19]
  4521cc:	strb	w2, [x19, #2]
  4521d0:	str	x1, [x19, #320]
  4521d4:	add	x1, x0, #0x1
  4521d8:	str	x1, [x19, #256]
  4521dc:	mov	w2, #0x6c                  	// #108
  4521e0:	strb	w2, [x19, x0]
  4521e4:	strb	w2, [x19, #264]
  4521e8:	cmp	x1, #0xff
  4521ec:	b.ne	452a00 <nftw@plt+0x4fe80>  // b.any
  4521f0:	ldp	x3, x2, [x19, #272]
  4521f4:	strb	wzr, [x19, #255]
  4521f8:	mov	x0, x19
  4521fc:	blr	x3
  452200:	ldr	x1, [x19, #320]
  452204:	mov	w3, #0x7361                	// #29537
  452208:	mov	w2, #0x73                  	// #115
  45220c:	mov	x0, #0x3                   	// #3
  452210:	add	x1, x1, #0x1
  452214:	strh	w3, [x19]
  452218:	strb	w2, [x19, #2]
  45221c:	str	x1, [x19, #320]
  452220:	add	x1, x0, #0x1
  452224:	str	x1, [x19, #256]
  452228:	mov	w2, #0x20                  	// #32
  45222c:	strb	w2, [x19, x0]
  452230:	strb	w2, [x19, #264]
  452234:	cmp	x1, #0xff
  452238:	b.ne	452a50 <nftw@plt+0x4fed0>  // b.any
  45223c:	ldp	x3, x2, [x19, #272]
  452240:	strb	wzr, [x19, #255]
  452244:	mov	x0, x19
  452248:	blr	x3
  45224c:	ldr	x0, [x19, #320]
  452250:	mov	w2, #0x6f66                	// #28518
  452254:	mov	x1, #0x2                   	// #2
  452258:	strh	w2, [x19]
  45225c:	add	x0, x0, #0x1
  452260:	str	x0, [x19, #320]
  452264:	mov	w2, #0x72                  	// #114
  452268:	add	x0, x1, #0x1
  45226c:	strb	w2, [x19, x1]
  452270:	b	44e6c8 <nftw@plt+0x4bb48>
  452274:	add	x3, x0, #0x2
  452278:	str	x3, [x19, #256]
  45227c:	mov	w2, #0x74                  	// #116
  452280:	strb	w2, [x19, x1]
  452284:	strb	w2, [x19, #264]
  452288:	cmp	x3, #0xff
  45228c:	b.ne	45235c <nftw@plt+0x4f7dc>  // b.any
  452290:	ldp	x4, x2, [x19, #272]
  452294:	strb	wzr, [x19, #255]
  452298:	mov	x1, x3
  45229c:	mov	x0, x19
  4522a0:	blr	x4
  4522a4:	ldr	x0, [x19, #320]
  4522a8:	mov	w3, #0x6261                	// #25185
  4522ac:	mov	w2, #0x6c                  	// #108
  4522b0:	mov	x1, #0x3                   	// #3
  4522b4:	add	x0, x0, #0x1
  4522b8:	strh	w3, [x19]
  4522bc:	strb	w2, [x19, #2]
  4522c0:	str	x0, [x19, #320]
  4522c4:	add	x0, x1, #0x1
  4522c8:	str	x0, [x19, #256]
  4522cc:	mov	w2, #0x65                  	// #101
  4522d0:	strb	w2, [x19, x1]
  4522d4:	strb	w2, [x19, #264]
  4522d8:	cmp	x0, #0xff
  4522dc:	b.ne	4523ac <nftw@plt+0x4f82c>  // b.any
  4522e0:	ldp	x3, x2, [x19, #272]
  4522e4:	strb	wzr, [x19, #255]
  4522e8:	mov	x1, x0
  4522ec:	mov	x0, x19
  4522f0:	blr	x3
  4522f4:	ldr	x0, [x19, #320]
  4522f8:	mov	w3, #0x6620                	// #26144
  4522fc:	mov	w2, #0x6f                  	// #111
  452300:	mov	x1, #0x3                   	// #3
  452304:	add	x0, x0, #0x1
  452308:	strh	w3, [x19]
  45230c:	strb	w2, [x19, #2]
  452310:	str	x0, [x19, #320]
  452314:	add	x0, x1, #0x1
  452318:	str	x0, [x19, #256]
  45231c:	mov	w2, #0x72                  	// #114
  452320:	strb	w2, [x19, x1]
  452324:	strb	w2, [x19, #264]
  452328:	cmp	x0, #0xff
  45232c:	b.ne	450108 <nftw@plt+0x4d588>  // b.any
  452330:	ldp	x3, x2, [x19, #272]
  452334:	strb	wzr, [x19, #255]
  452338:	mov	x1, x0
  45233c:	mov	x0, x19
  452340:	blr	x3
  452344:	ldr	x2, [x19, #320]
  452348:	mov	x1, #0x1                   	// #1
  45234c:	mov	x0, #0x0                   	// #0
  452350:	add	x2, x2, x1
  452354:	str	x2, [x19, #320]
  452358:	b	45010c <nftw@plt+0x4d58c>
  45235c:	add	x0, x0, #0x3
  452360:	str	x0, [x19, #256]
  452364:	mov	w1, #0x61                  	// #97
  452368:	strb	w1, [x19, x3]
  45236c:	strb	w1, [x19, #264]
  452370:	cmp	x0, #0xff
  452374:	b.ne	452b68 <nftw@plt+0x4ffe8>  // b.any
  452378:	ldp	x3, x2, [x19, #272]
  45237c:	strb	wzr, [x19, #255]
  452380:	mov	x1, x0
  452384:	mov	x0, x19
  452388:	blr	x3
  45238c:	ldr	x1, [x19, #320]
  452390:	mov	w3, #0x6c62                	// #27746
  452394:	mov	w2, #0x65                  	// #101
  452398:	mov	x0, #0x3                   	// #3
  45239c:	add	x1, x1, #0x1
  4523a0:	strh	w3, [x19]
  4523a4:	strb	w2, [x19, #2]
  4523a8:	str	x1, [x19, #320]
  4523ac:	add	x1, x0, #0x1
  4523b0:	str	x1, [x19, #256]
  4523b4:	mov	w2, #0x20                  	// #32
  4523b8:	strb	w2, [x19, x0]
  4523bc:	strb	w2, [x19, #264]
  4523c0:	cmp	x1, #0xff
  4523c4:	b.ne	452bb8 <nftw@plt+0x50038>  // b.any
  4523c8:	ldp	x3, x2, [x19, #272]
  4523cc:	strb	wzr, [x19, #255]
  4523d0:	mov	x0, x19
  4523d4:	blr	x3
  4523d8:	ldr	x0, [x19, #320]
  4523dc:	mov	w2, #0x6f66                	// #28518
  4523e0:	mov	x1, #0x2                   	// #2
  4523e4:	strh	w2, [x19]
  4523e8:	add	x0, x0, #0x1
  4523ec:	str	x0, [x19, #320]
  4523f0:	mov	w2, #0x72                  	// #114
  4523f4:	add	x0, x1, #0x1
  4523f8:	strb	w2, [x19, x1]
  4523fc:	b	450108 <nftw@plt+0x4d588>
  452400:	add	x3, x0, #0x2
  452404:	str	x3, [x19, #256]
  452408:	mov	w2, #0x79                  	// #121
  45240c:	strb	w2, [x19, x1]
  452410:	strb	w2, [x19, #264]
  452414:	cmp	x3, #0xff
  452418:	b.ne	453000 <nftw@plt+0x50480>  // b.any
  45241c:	ldp	x4, x2, [x19, #272]
  452420:	strb	wzr, [x19, #255]
  452424:	mov	x1, x3
  452428:	mov	x0, x19
  45242c:	blr	x4
  452430:	ldr	x0, [x19, #320]
  452434:	mov	w3, #0x6570                	// #25968
  452438:	mov	w2, #0x69                  	// #105
  45243c:	mov	x1, #0x3                   	// #3
  452440:	add	x0, x0, #0x1
  452444:	strh	w3, [x19]
  452448:	strb	w2, [x19, #2]
  45244c:	str	x0, [x19, #320]
  452450:	add	x0, x1, #0x1
  452454:	str	x0, [x19, #256]
  452458:	mov	w2, #0x6e                  	// #110
  45245c:	strb	w2, [x19, x1]
  452460:	strb	w2, [x19, #264]
  452464:	cmp	x0, #0xff
  452468:	b.ne	453050 <nftw@plt+0x504d0>  // b.any
  45246c:	ldp	x3, x2, [x19, #272]
  452470:	strb	wzr, [x19, #255]
  452474:	mov	x1, x0
  452478:	mov	x0, x19
  45247c:	blr	x3
  452480:	ldr	x0, [x19, #320]
  452484:	mov	w3, #0x6f66                	// #28518
  452488:	mov	w2, #0x20                  	// #32
  45248c:	mov	x1, #0x3                   	// #3
  452490:	add	x0, x0, #0x1
  452494:	strh	w3, [x19]
  452498:	strb	w2, [x19, #2]
  45249c:	str	x0, [x19, #320]
  4524a0:	add	x0, x1, #0x1
  4524a4:	str	x0, [x19, #256]
  4524a8:	mov	w2, #0x66                  	// #102
  4524ac:	strb	w2, [x19, x1]
  4524b0:	strb	w2, [x19, #264]
  4524b4:	cmp	x0, #0xff
  4524b8:	b.ne	453098 <nftw@plt+0x50518>  // b.any
  4524bc:	ldp	x3, x2, [x19, #272]
  4524c0:	strb	wzr, [x19, #255]
  4524c4:	mov	x1, x0
  4524c8:	mov	x0, x19
  4524cc:	blr	x3
  4524d0:	ldr	x0, [x19, #320]
  4524d4:	mov	w2, #0x6f                  	// #111
  4524d8:	mov	x1, #0x1                   	// #1
  4524dc:	strb	w2, [x19]
  4524e0:	add	x0, x0, x1
  4524e4:	str	x0, [x19, #320]
  4524e8:	b	450280 <nftw@plt+0x4d700>
  4524ec:	add	x3, x0, #0x2
  4524f0:	str	x3, [x19, #256]
  4524f4:	mov	w2, #0x70                  	// #112
  4524f8:	strb	w2, [x19, x1]
  4524fc:	strb	w2, [x19, #264]
  452500:	cmp	x3, #0xff
  452504:	b.ne	4530e0 <nftw@plt+0x50560>  // b.any
  452508:	ldp	x4, x2, [x19, #272]
  45250c:	strb	wzr, [x19, #255]
  452510:	mov	x1, x3
  452514:	mov	x0, x19
  452518:	blr	x4
  45251c:	ldr	x1, [x19, #320]
  452520:	mov	w3, #0x7265                	// #29285
  452524:	mov	w2, #0x61                  	// #97
  452528:	mov	x0, #0x3                   	// #3
  45252c:	add	x1, x1, #0x1
  452530:	strh	w3, [x19]
  452534:	strb	w2, [x19, #2]
  452538:	str	x1, [x19, #320]
  45253c:	add	x1, x0, #0x1
  452540:	str	x1, [x19, #256]
  452544:	mov	w2, #0x74                  	// #116
  452548:	strb	w2, [x19, x0]
  45254c:	strb	w2, [x19, #264]
  452550:	cmp	x1, #0xff
  452554:	b.ne	453130 <nftw@plt+0x505b0>  // b.any
  452558:	ldp	x3, x2, [x19, #272]
  45255c:	strb	wzr, [x19, #255]
  452560:	mov	x0, x19
  452564:	blr	x3
  452568:	mov	w1, #0x726f                	// #29295
  45256c:	mov	w0, #0x72                  	// #114
  452570:	strh	w1, [x19]
  452574:	strb	w0, [x19, #264]
  452578:	mov	x0, #0x2                   	// #2
  45257c:	ldr	x1, [x19, #320]
  452580:	ldr	x20, [x22, #8]
  452584:	add	x1, x1, #0x1
  452588:	str	x0, [x19, #256]
  45258c:	str	x1, [x19, #320]
  452590:	ldrb	w1, [x20]
  452594:	sub	w1, w1, #0x61
  452598:	and	w1, w1, #0xff
  45259c:	cmp	w1, #0x19
  4525a0:	b.ls	45319c <nftw@plt+0x5061c>  // b.plast
  4525a4:	mov	x1, x0
  4525a8:	b	44f4e4 <nftw@plt+0x4c964>
  4525ac:	add	x3, x0, #0x2
  4525b0:	str	x3, [x19, #256]
  4525b4:	mov	w2, #0x61                  	// #97
  4525b8:	strb	w2, [x19, x1]
  4525bc:	strb	w2, [x19, #264]
  4525c0:	cmp	x3, #0xff
  4525c4:	b.ne	452ae8 <nftw@plt+0x4ff68>  // b.any
  4525c8:	ldp	x4, x2, [x19, #272]
  4525cc:	strb	wzr, [x19, #255]
  4525d0:	mov	x1, x3
  4525d4:	mov	x0, x19
  4525d8:	blr	x4
  4525dc:	ldr	x0, [x19, #320]
  4525e0:	mov	w1, #0x62                  	// #98
  4525e4:	mov	x2, #0x1                   	// #1
  4525e8:	strb	w1, [x19]
  4525ec:	add	x0, x0, x2
  4525f0:	str	x0, [x19, #320]
  4525f4:	b	44df6c <nftw@plt+0x4b3ec>
  4525f8:	add	x3, x0, #0x2
  4525fc:	str	x3, [x19, #256]
  452600:	mov	w2, #0x54                  	// #84
  452604:	strb	w2, [x19, x1]
  452608:	strb	w2, [x19, #264]
  45260c:	cmp	x3, #0xff
  452610:	b.ne	452de0 <nftw@plt+0x50260>  // b.any
  452614:	ldp	x4, x2, [x19, #272]
  452618:	strb	wzr, [x19, #255]
  45261c:	mov	x1, x3
  452620:	mov	x0, x19
  452624:	blr	x4
  452628:	ldr	x1, [x19, #320]
  45262c:	mov	w3, #0x2054                	// #8276
  452630:	mov	w2, #0x66                  	// #102
  452634:	mov	x0, #0x3                   	// #3
  452638:	add	x1, x1, #0x1
  45263c:	strh	w3, [x19]
  452640:	strb	w2, [x19, #2]
  452644:	str	x1, [x19, #320]
  452648:	add	x1, x0, #0x1
  45264c:	str	x1, [x19, #256]
  452650:	mov	w2, #0x6f                  	// #111
  452654:	strb	w2, [x19, x0]
  452658:	strb	w2, [x19, #264]
  45265c:	cmp	x1, #0xff
  452660:	b.ne	452e2c <nftw@plt+0x502ac>  // b.any
  452664:	ldp	x3, x2, [x19, #272]
  452668:	strb	wzr, [x19, #255]
  45266c:	mov	x0, x19
  452670:	blr	x3
  452674:	ldr	x1, [x19, #320]
  452678:	mov	w2, #0x72                  	// #114
  45267c:	mov	x0, #0x1                   	// #1
  452680:	strb	w2, [x19]
  452684:	add	x1, x1, x0
  452688:	str	x1, [x19, #320]
  45268c:	b	44ebb8 <nftw@plt+0x4c038>
  452690:	add	x0, x0, #0x3
  452694:	str	x0, [x19, #256]
  452698:	mov	w1, #0x6e                  	// #110
  45269c:	strb	w1, [x19, x3]
  4526a0:	strb	w1, [x19, #264]
  4526a4:	cmp	x0, #0xff
  4526a8:	b.ne	4527b0 <nftw@plt+0x4fc30>  // b.any
  4526ac:	ldp	x3, x2, [x19, #272]
  4526b0:	strb	wzr, [x19, #255]
  4526b4:	mov	x1, x0
  4526b8:	mov	x0, x19
  4526bc:	blr	x3
  4526c0:	ldr	x0, [x19, #320]
  4526c4:	mov	w3, #0x616e                	// #24942
  4526c8:	mov	w2, #0x6d                  	// #109
  4526cc:	mov	x1, #0x3                   	// #3
  4526d0:	add	x0, x0, #0x1
  4526d4:	strh	w3, [x19]
  4526d8:	strb	w2, [x19, #2]
  4526dc:	str	x0, [x19, #320]
  4526e0:	add	x0, x1, #0x1
  4526e4:	str	x0, [x19, #256]
  4526e8:	mov	w2, #0x65                  	// #101
  4526ec:	strb	w2, [x19, x1]
  4526f0:	strb	w2, [x19, #264]
  4526f4:	cmp	x0, #0xff
  4526f8:	b.ne	4527fc <nftw@plt+0x4fc7c>  // b.any
  4526fc:	ldp	x3, x2, [x19, #272]
  452700:	strb	wzr, [x19, #255]
  452704:	mov	x1, x0
  452708:	mov	x0, x19
  45270c:	blr	x3
  452710:	ldr	x0, [x19, #320]
  452714:	mov	w3, #0x2064                	// #8292
  452718:	mov	w2, #0x74                  	// #116
  45271c:	mov	x1, #0x3                   	// #3
  452720:	add	x0, x0, #0x1
  452724:	strh	w3, [x19]
  452728:	strb	w2, [x19, #2]
  45272c:	str	x0, [x19, #320]
  452730:	add	x0, x1, #0x1
  452734:	str	x0, [x19, #256]
  452738:	mov	w2, #0x79                  	// #121
  45273c:	strb	w2, [x19, x1]
  452740:	strb	w2, [x19, #264]
  452744:	cmp	x0, #0xff
  452748:	b.ne	452848 <nftw@plt+0x4fcc8>  // b.any
  45274c:	ldp	x3, x2, [x19, #272]
  452750:	strb	wzr, [x19, #255]
  452754:	mov	x1, x0
  452758:	mov	x0, x19
  45275c:	blr	x3
  452760:	ldr	x0, [x19, #320]
  452764:	mov	w2, #0x70                  	// #112
  452768:	mov	x1, #0x1                   	// #1
  45276c:	strb	w2, [x19]
  452770:	add	x0, x0, x1
  452774:	str	x0, [x19, #320]
  452778:	b	451890 <nftw@plt+0x4ed10>
  45277c:	ldp	x3, x2, [x19, #272]
  452780:	strb	wzr, [x19, #255]
  452784:	mov	x1, x0
  452788:	mov	x0, x19
  45278c:	blr	x3
  452790:	ldr	x1, [x19, #320]
  452794:	mov	w3, #0x757b                	// #30075
  452798:	mov	w2, #0x6e                  	// #110
  45279c:	mov	x0, #0x3                   	// #3
  4527a0:	add	x1, x1, #0x1
  4527a4:	strh	w3, [x19]
  4527a8:	strb	w2, [x19, #2]
  4527ac:	str	x1, [x19, #320]
  4527b0:	add	x1, x0, #0x1
  4527b4:	str	x1, [x19, #256]
  4527b8:	mov	w2, #0x6e                  	// #110
  4527bc:	strb	w2, [x19, x0]
  4527c0:	strb	w2, [x19, #264]
  4527c4:	cmp	x1, #0xff
  4527c8:	b.ne	44e374 <nftw@plt+0x4b7f4>  // b.any
  4527cc:	ldp	x3, x2, [x19, #272]
  4527d0:	strb	wzr, [x19, #255]
  4527d4:	mov	x0, x19
  4527d8:	blr	x3
  4527dc:	ldr	x1, [x19, #320]
  4527e0:	mov	w3, #0x6d61                	// #28001
  4527e4:	mov	w2, #0x65                  	// #101
  4527e8:	mov	x0, #0x3                   	// #3
  4527ec:	add	x1, x1, #0x1
  4527f0:	strh	w3, [x19]
  4527f4:	strb	w2, [x19, #2]
  4527f8:	str	x1, [x19, #320]
  4527fc:	add	x1, x0, #0x1
  452800:	str	x1, [x19, #256]
  452804:	mov	w2, #0x64                  	// #100
  452808:	strb	w2, [x19, x0]
  45280c:	strb	w2, [x19, #264]
  452810:	cmp	x1, #0xff
  452814:	b.ne	44e3c4 <nftw@plt+0x4b844>  // b.any
  452818:	ldp	x3, x2, [x19, #272]
  45281c:	strb	wzr, [x19, #255]
  452820:	mov	x0, x19
  452824:	blr	x3
  452828:	ldr	x1, [x19, #320]
  45282c:	mov	w3, #0x7420                	// #29728
  452830:	mov	w2, #0x79                  	// #121
  452834:	mov	x0, #0x3                   	// #3
  452838:	add	x1, x1, #0x1
  45283c:	strh	w3, [x19]
  452840:	strb	w2, [x19, #2]
  452844:	str	x1, [x19, #320]
  452848:	add	x1, x0, #0x1
  45284c:	str	x1, [x19, #256]
  452850:	mov	w2, #0x70                  	// #112
  452854:	strb	w2, [x19, x0]
  452858:	strb	w2, [x19, #264]
  45285c:	cmp	x1, #0xff
  452860:	b.ne	44e414 <nftw@plt+0x4b894>  // b.any
  452864:	ldp	x3, x2, [x19, #272]
  452868:	strb	wzr, [x19, #255]
  45286c:	mov	x0, x19
  452870:	blr	x3
  452874:	ldr	x1, [x19, #320]
  452878:	mov	x0, #0x1                   	// #1
  45287c:	mov	w2, #0x65                  	// #101
  452880:	strb	w2, [x19]
  452884:	add	x1, x1, x0
  452888:	str	x1, [x19, #320]
  45288c:	add	x1, x0, #0x1
  452890:	b	44e458 <nftw@plt+0x4b8d8>
  452894:	add	x3, x0, #0x2
  452898:	str	x3, [x19, #256]
  45289c:	mov	w2, #0x5b                  	// #91
  4528a0:	strb	w2, [x19, x1]
  4528a4:	strb	w2, [x19, #264]
  4528a8:	cmp	x3, #0xff
  4528ac:	b.ne	452ef0 <nftw@plt+0x50370>  // b.any
  4528b0:	ldp	x4, x2, [x19, #272]
  4528b4:	strb	wzr, [x19, #255]
  4528b8:	mov	x1, x3
  4528bc:	mov	x0, x19
  4528c0:	blr	x4
  4528c4:	ldr	x1, [x19, #320]
  4528c8:	mov	w3, #0x6c63                	// #27747
  4528cc:	mov	w2, #0x6f                  	// #111
  4528d0:	mov	x0, #0x3                   	// #3
  4528d4:	add	x1, x1, #0x1
  4528d8:	strh	w3, [x19]
  4528dc:	strb	w2, [x19, #2]
  4528e0:	str	x1, [x19, #320]
  4528e4:	add	x3, x0, #0x1
  4528e8:	str	x3, [x19, #256]
  4528ec:	mov	w1, #0x6e                  	// #110
  4528f0:	strb	w1, [x19, x0]
  4528f4:	strb	w1, [x19, #264]
  4528f8:	cmp	x3, #0xff
  4528fc:	b.ne	452f40 <nftw@plt+0x503c0>  // b.any
  452900:	ldp	x4, x2, [x19, #272]
  452904:	strb	wzr, [x19, #255]
  452908:	mov	x1, x3
  45290c:	mov	x0, x19
  452910:	blr	x4
  452914:	ldr	x0, [x19, #320]
  452918:	mov	w2, #0x65                  	// #101
  45291c:	mov	x1, #0x1                   	// #1
  452920:	strb	w2, [x19]
  452924:	add	x0, x0, x1
  452928:	str	x0, [x19, #320]
  45292c:	b	44f7d0 <nftw@plt+0x4cc50>
  452930:	add	x3, x1, #0x2
  452934:	str	x3, [x19, #256]
  452938:	mov	w2, #0x69                  	// #105
  45293c:	strb	w2, [x19, x0]
  452940:	strb	w2, [x19, #264]
  452944:	cmp	x3, #0xff
  452948:	b.ne	45408c <nftw@plt+0x5150c>  // b.any
  45294c:	ldp	x4, x2, [x19, #272]
  452950:	strb	wzr, [x19, #255]
  452954:	mov	x1, x3
  452958:	mov	x0, x19
  45295c:	blr	x4
  452960:	ldr	x0, [x19, #320]
  452964:	mov	w2, #0x6e                  	// #110
  452968:	mov	x1, #0x1                   	// #1
  45296c:	strb	w2, [x19]
  452970:	add	x0, x0, x1
  452974:	str	x0, [x19, #320]
  452978:	b	45099c <nftw@plt+0x4de1c>
  45297c:	ldp	x3, x2, [x19, #272]
  452980:	strb	wzr, [x19, #255]
  452984:	mov	x1, x0
  452988:	mov	x0, x19
  45298c:	blr	x3
  452990:	ldr	x1, [x19, #320]
  452994:	mov	w3, #0x616a                	// #24938
  452998:	mov	w2, #0x76                  	// #118
  45299c:	mov	x0, #0x3                   	// #3
  4529a0:	add	x1, x1, #0x1
  4529a4:	strh	w3, [x19]
  4529a8:	strb	w2, [x19, #2]
  4529ac:	str	x1, [x19, #320]
  4529b0:	add	x3, x0, #0x1
  4529b4:	str	x3, [x19, #256]
  4529b8:	mov	w1, #0x61                  	// #97
  4529bc:	strb	w1, [x19, x0]
  4529c0:	strb	w1, [x19, #264]
  4529c4:	cmp	x3, #0xff
  4529c8:	b.ne	44e5ec <nftw@plt+0x4ba6c>  // b.any
  4529cc:	ldp	x4, x2, [x19, #272]
  4529d0:	strb	wzr, [x19, #255]
  4529d4:	mov	x1, x3
  4529d8:	mov	x0, x19
  4529dc:	blr	x4
  4529e0:	ldr	x0, [x19, #320]
  4529e4:	mov	w3, #0x4320                	// #17184
  4529e8:	mov	w2, #0x6c                  	// #108
  4529ec:	mov	x1, #0x3                   	// #3
  4529f0:	add	x0, x0, #0x1
  4529f4:	strh	w3, [x19]
  4529f8:	strb	w2, [x19, #2]
  4529fc:	str	x0, [x19, #320]
  452a00:	add	x0, x1, #0x1
  452a04:	str	x0, [x19, #256]
  452a08:	mov	w2, #0x61                  	// #97
  452a0c:	strb	w2, [x19, x1]
  452a10:	strb	w2, [x19, #264]
  452a14:	cmp	x0, #0xff
  452a18:	b.ne	44e638 <nftw@plt+0x4bab8>  // b.any
  452a1c:	ldp	x3, x2, [x19, #272]
  452a20:	strb	wzr, [x19, #255]
  452a24:	mov	x1, x0
  452a28:	mov	x0, x19
  452a2c:	blr	x3
  452a30:	ldr	x0, [x19, #320]
  452a34:	mov	w3, #0x7373                	// #29555
  452a38:	mov	w2, #0x20                  	// #32
  452a3c:	mov	x1, #0x3                   	// #3
  452a40:	add	x0, x0, #0x1
  452a44:	strh	w3, [x19]
  452a48:	strb	w2, [x19, #2]
  452a4c:	str	x0, [x19, #320]
  452a50:	add	x0, x1, #0x1
  452a54:	str	x0, [x19, #256]
  452a58:	mov	w2, #0x66                  	// #102
  452a5c:	strb	w2, [x19, x1]
  452a60:	strb	w2, [x19, #264]
  452a64:	cmp	x0, #0xff
  452a68:	b.ne	44e684 <nftw@plt+0x4bb04>  // b.any
  452a6c:	ldp	x3, x2, [x19, #272]
  452a70:	strb	wzr, [x19, #255]
  452a74:	mov	x1, x0
  452a78:	mov	x0, x19
  452a7c:	blr	x3
  452a80:	ldr	x0, [x19, #320]
  452a84:	mov	w2, #0x6f                  	// #111
  452a88:	mov	x1, #0x1                   	// #1
  452a8c:	strb	w2, [x19]
  452a90:	add	x0, x0, x1
  452a94:	str	x0, [x19, #320]
  452a98:	b	452264 <nftw@plt+0x4f6e4>
  452a9c:	add	x0, x1, #0x3
  452aa0:	str	x0, [x19, #256]
  452aa4:	mov	w1, #0x6f                  	// #111
  452aa8:	strb	w1, [x19, x3]
  452aac:	strb	w1, [x19, #264]
  452ab0:	cmp	x0, #0xff
  452ab4:	b.ne	453b88 <nftw@plt+0x51008>  // b.any
  452ab8:	ldp	x3, x2, [x19, #272]
  452abc:	strb	wzr, [x19, #255]
  452ac0:	mov	x1, x0
  452ac4:	mov	x0, x19
  452ac8:	blr	x3
  452acc:	ldr	x0, [x19, #320]
  452ad0:	mov	w2, #0x72                  	// #114
  452ad4:	mov	x1, #0x1                   	// #1
  452ad8:	strb	w2, [x19]
  452adc:	add	x0, x0, x1
  452ae0:	str	x0, [x19, #320]
  452ae4:	b	451084 <nftw@plt+0x4e504>
  452ae8:	add	x0, x0, #0x3
  452aec:	str	x0, [x19, #256]
  452af0:	mov	w1, #0x62                  	// #98
  452af4:	strb	w1, [x19, x3]
  452af8:	strb	w1, [x19, #264]
  452afc:	cmp	x0, #0xff
  452b00:	b.ne	453f1c <nftw@plt+0x5139c>  // b.any
  452b04:	ldp	x3, x2, [x19, #272]
  452b08:	strb	wzr, [x19, #255]
  452b0c:	mov	x1, x0
  452b10:	mov	x0, x19
  452b14:	blr	x3
  452b18:	ldr	x0, [x19, #320]
  452b1c:	mov	w2, #0x69                  	// #105
  452b20:	mov	x1, #0x1                   	// #1
  452b24:	strb	w2, [x19]
  452b28:	add	x0, x0, x1
  452b2c:	str	x0, [x19, #320]
  452b30:	b	44df78 <nftw@plt+0x4b3f8>
  452b34:	ldp	x3, x2, [x19, #272]
  452b38:	strb	wzr, [x19, #255]
  452b3c:	mov	x1, x0
  452b40:	mov	x0, x19
  452b44:	blr	x3
  452b48:	ldr	x1, [x19, #320]
  452b4c:	mov	w3, #0x7476                	// #29814
  452b50:	mov	w2, #0x61                  	// #97
  452b54:	mov	x0, #0x3                   	// #3
  452b58:	add	x1, x1, #0x1
  452b5c:	strh	w3, [x19]
  452b60:	strb	w2, [x19, #2]
  452b64:	str	x1, [x19, #320]
  452b68:	add	x3, x0, #0x1
  452b6c:	str	x3, [x19, #256]
  452b70:	mov	w1, #0x62                  	// #98
  452b74:	strb	w1, [x19, x0]
  452b78:	strb	w1, [x19, #264]
  452b7c:	cmp	x3, #0xff
  452b80:	b.ne	450078 <nftw@plt+0x4d4f8>  // b.any
  452b84:	ldp	x4, x2, [x19, #272]
  452b88:	strb	wzr, [x19, #255]
  452b8c:	mov	x1, x3
  452b90:	mov	x0, x19
  452b94:	blr	x4
  452b98:	ldr	x0, [x19, #320]
  452b9c:	mov	w3, #0x656c                	// #25964
  452ba0:	mov	w2, #0x20                  	// #32
  452ba4:	mov	x1, #0x3                   	// #3
  452ba8:	add	x0, x0, #0x1
  452bac:	strh	w3, [x19]
  452bb0:	strb	w2, [x19, #2]
  452bb4:	str	x0, [x19, #320]
  452bb8:	add	x0, x1, #0x1
  452bbc:	str	x0, [x19, #256]
  452bc0:	mov	w2, #0x66                  	// #102
  452bc4:	strb	w2, [x19, x1]
  452bc8:	strb	w2, [x19, #264]
  452bcc:	cmp	x0, #0xff
  452bd0:	b.ne	4500c4 <nftw@plt+0x4d544>  // b.any
  452bd4:	ldp	x3, x2, [x19, #272]
  452bd8:	strb	wzr, [x19, #255]
  452bdc:	mov	x1, x0
  452be0:	mov	x0, x19
  452be4:	blr	x3
  452be8:	ldr	x0, [x19, #320]
  452bec:	mov	w2, #0x6f                  	// #111
  452bf0:	mov	x1, #0x1                   	// #1
  452bf4:	strb	w2, [x19]
  452bf8:	add	x0, x0, x1
  452bfc:	str	x0, [x19, #320]
  452c00:	b	4523f0 <nftw@plt+0x4f870>
  452c04:	add	x3, x0, #0x2
  452c08:	str	x3, [x19, #256]
  452c0c:	mov	w2, #0x70                  	// #112
  452c10:	strb	w2, [x19, x1]
  452c14:	strb	w2, [x19, #264]
  452c18:	cmp	x3, #0xff
  452c1c:	b.ne	453220 <nftw@plt+0x506a0>  // b.any
  452c20:	ldp	x4, x2, [x19, #272]
  452c24:	strb	wzr, [x19, #255]
  452c28:	mov	x1, x3
  452c2c:	mov	x0, x19
  452c30:	blr	x4
  452c34:	ldr	x0, [x19, #320]
  452c38:	mov	w3, #0x7265                	// #29285
  452c3c:	mov	w2, #0x61                  	// #97
  452c40:	mov	x1, #0x3                   	// #3
  452c44:	add	x0, x0, #0x1
  452c48:	strh	w3, [x19]
  452c4c:	strb	w2, [x19, #2]
  452c50:	str	x0, [x19, #320]
  452c54:	add	x0, x1, #0x1
  452c58:	str	x0, [x19, #256]
  452c5c:	mov	w2, #0x74                  	// #116
  452c60:	strb	w2, [x19, x1]
  452c64:	strb	w2, [x19, #264]
  452c68:	cmp	x0, #0xff
  452c6c:	b.ne	453270 <nftw@plt+0x506f0>  // b.any
  452c70:	ldp	x3, x2, [x19, #272]
  452c74:	strb	wzr, [x19, #255]
  452c78:	mov	x1, x0
  452c7c:	mov	x0, x19
  452c80:	blr	x3
  452c84:	ldr	x0, [x19, #320]
  452c88:	mov	w2, #0x6f                  	// #111
  452c8c:	mov	x1, #0x1                   	// #1
  452c90:	strb	w2, [x19]
  452c94:	add	x0, x0, x1
  452c98:	str	x0, [x19, #320]
  452c9c:	b	44d828 <nftw@plt+0x4aca8>
  452ca0:	add	x0, x0, #0x3
  452ca4:	str	x0, [x19, #256]
  452ca8:	mov	w1, #0x65                  	// #101
  452cac:	strb	w1, [x19, x3]
  452cb0:	strb	w1, [x19, #264]
  452cb4:	cmp	x0, #0xff
  452cb8:	b.ne	453880 <nftw@plt+0x50d00>  // b.any
  452cbc:	ldp	x3, x2, [x19, #272]
  452cc0:	strb	wzr, [x19, #255]
  452cc4:	mov	x1, x0
  452cc8:	mov	x0, x19
  452ccc:	blr	x3
  452cd0:	ldr	x1, [x19, #320]
  452cd4:	mov	w3, #0x6172                	// #24946
  452cd8:	mov	w2, #0x74                  	// #116
  452cdc:	mov	x0, #0x3                   	// #3
  452ce0:	add	x1, x1, #0x1
  452ce4:	strh	w3, [x19]
  452ce8:	strb	w2, [x19, #2]
  452cec:	str	x1, [x19, #320]
  452cf0:	add	x1, x0, #0x1
  452cf4:	str	x1, [x19, #256]
  452cf8:	mov	w2, #0x6f                  	// #111
  452cfc:	strb	w2, [x19, x0]
  452d00:	strb	w2, [x19, #264]
  452d04:	cmp	x1, #0xff
  452d08:	b.ne	4538d0 <nftw@plt+0x50d50>  // b.any
  452d0c:	ldp	x3, x2, [x19, #272]
  452d10:	strb	wzr, [x19, #255]
  452d14:	mov	x0, x19
  452d18:	blr	x3
  452d1c:	ldr	x1, [x19, #320]
  452d20:	mov	w2, #0x72                  	// #114
  452d24:	mov	x0, #0x1                   	// #1
  452d28:	strb	w2, [x19]
  452d2c:	add	x1, x1, x0
  452d30:	str	x1, [x19, #320]
  452d34:	b	44f624 <nftw@plt+0x4caa4>
  452d38:	add	x3, x0, #0x2
  452d3c:	str	x3, [x19, #256]
  452d40:	mov	w2, #0x65                  	// #101
  452d44:	strb	w2, [x19, x1]
  452d48:	strb	w2, [x19, #264]
  452d4c:	cmp	x3, #0xff
  452d50:	b.ne	453588 <nftw@plt+0x50a08>  // b.any
  452d54:	ldp	x4, x2, [x19, #272]
  452d58:	strb	wzr, [x19, #255]
  452d5c:	mov	x1, x3
  452d60:	mov	x0, x19
  452d64:	blr	x4
  452d68:	ldr	x1, [x19, #320]
  452d6c:	mov	w3, #0x6c63                	// #27747
  452d70:	mov	w2, #0x74                  	// #116
  452d74:	mov	x0, #0x3                   	// #3
  452d78:	add	x1, x1, #0x1
  452d7c:	strh	w3, [x19]
  452d80:	strb	w2, [x19, #2]
  452d84:	str	x1, [x19, #320]
  452d88:	add	x1, x0, #0x1
  452d8c:	str	x1, [x19, #256]
  452d90:	mov	w2, #0x79                  	// #121
  452d94:	strb	w2, [x19, x0]
  452d98:	strb	w2, [x19, #264]
  452d9c:	cmp	x1, #0xff
  452da0:	b.ne	4535d8 <nftw@plt+0x50a58>  // b.any
  452da4:	ldp	x3, x2, [x19, #272]
  452da8:	strb	wzr, [x19, #255]
  452dac:	mov	x0, x19
  452db0:	blr	x3
  452db4:	ldr	x0, [x19, #320]
  452db8:	mov	w1, #0x6570                	// #25968
  452dbc:	mov	x2, #0x2                   	// #2
  452dc0:	strh	w1, [x19]
  452dc4:	add	x0, x0, #0x1
  452dc8:	str	x0, [x19, #320]
  452dcc:	mov	w0, #0x20                  	// #32
  452dd0:	add	x1, x2, #0x1
  452dd4:	strb	w0, [x19, x2]
  452dd8:	add	x0, x1, #0x1
  452ddc:	b	44fe04 <nftw@plt+0x4d284>
  452de0:	add	x0, x0, #0x3
  452de4:	str	x0, [x19, #256]
  452de8:	strb	w2, [x19, x3]
  452dec:	cmp	x0, #0xff
  452df0:	strb	w2, [x19, #264]
  452df4:	b.ne	452ea8 <nftw@plt+0x50328>  // b.any
  452df8:	ldp	x3, x2, [x19, #272]
  452dfc:	strb	wzr, [x19, #255]
  452e00:	mov	x1, x0
  452e04:	mov	x0, x19
  452e08:	blr	x3
  452e0c:	ldr	x0, [x19, #320]
  452e10:	mov	w3, #0x6620                	// #26144
  452e14:	mov	w2, #0x6f                  	// #111
  452e18:	mov	x1, #0x3                   	// #3
  452e1c:	add	x0, x0, #0x1
  452e20:	strh	w3, [x19]
  452e24:	strb	w2, [x19, #2]
  452e28:	str	x0, [x19, #320]
  452e2c:	add	x0, x1, #0x1
  452e30:	str	x0, [x19, #256]
  452e34:	mov	w2, #0x72                  	// #114
  452e38:	strb	w2, [x19, x1]
  452e3c:	strb	w2, [x19, #264]
  452e40:	cmp	x0, #0xff
  452e44:	b.ne	44ebb8 <nftw@plt+0x4c038>  // b.any
  452e48:	ldp	x3, x2, [x19, #272]
  452e4c:	strb	wzr, [x19, #255]
  452e50:	mov	x1, x0
  452e54:	mov	x0, x19
  452e58:	blr	x3
  452e5c:	ldr	x2, [x19, #320]
  452e60:	mov	x1, #0x1                   	// #1
  452e64:	mov	x0, #0x0                   	// #0
  452e68:	add	x2, x2, x1
  452e6c:	str	x2, [x19, #320]
  452e70:	b	44ebbc <nftw@plt+0x4c03c>
  452e74:	ldp	x3, x2, [x19, #272]
  452e78:	strb	wzr, [x19, #255]
  452e7c:	mov	x1, x0
  452e80:	mov	x0, x19
  452e84:	blr	x3
  452e88:	ldr	x1, [x19, #320]
  452e8c:	mov	w3, #0x5456                	// #21590
  452e90:	mov	w2, #0x54                  	// #84
  452e94:	mov	x0, #0x3                   	// #3
  452e98:	add	x1, x1, #0x1
  452e9c:	strh	w3, [x19]
  452ea0:	strb	w2, [x19, #2]
  452ea4:	str	x1, [x19, #320]
  452ea8:	add	x1, x0, #0x1
  452eac:	str	x1, [x19, #256]
  452eb0:	mov	w2, #0x20                  	// #32
  452eb4:	strb	w2, [x19, x0]
  452eb8:	strb	w2, [x19, #264]
  452ebc:	cmp	x1, #0xff
  452ec0:	b.ne	44eb64 <nftw@plt+0x4bfe4>  // b.any
  452ec4:	ldp	x3, x2, [x19, #272]
  452ec8:	strb	wzr, [x19, #255]
  452ecc:	mov	x0, x19
  452ed0:	blr	x3
  452ed4:	ldr	x0, [x19, #320]
  452ed8:	mov	w2, #0x6f66                	// #28518
  452edc:	mov	x1, #0x2                   	// #2
  452ee0:	strh	w2, [x19]
  452ee4:	add	x0, x0, #0x1
  452ee8:	str	x0, [x19, #320]
  452eec:	b	44ebac <nftw@plt+0x4c02c>
  452ef0:	add	x0, x0, #0x3
  452ef4:	str	x0, [x19, #256]
  452ef8:	mov	w1, #0x63                  	// #99
  452efc:	strb	w1, [x19, x3]
  452f00:	strb	w1, [x19, #264]
  452f04:	cmp	x0, #0xff
  452f08:	b.ne	452fb8 <nftw@plt+0x50438>  // b.any
  452f0c:	ldp	x3, x2, [x19, #272]
  452f10:	strb	wzr, [x19, #255]
  452f14:	mov	x1, x0
  452f18:	mov	x0, x19
  452f1c:	blr	x3
  452f20:	ldr	x0, [x19, #320]
  452f24:	mov	w2, #0x6f6c                	// #28524
  452f28:	mov	w1, #0x6e                  	// #110
  452f2c:	mov	x3, #0x3                   	// #3
  452f30:	add	x0, x0, #0x1
  452f34:	strh	w2, [x19]
  452f38:	strb	w1, [x19, #2]
  452f3c:	str	x0, [x19, #320]
  452f40:	add	x1, x3, #0x1
  452f44:	str	x1, [x19, #256]
  452f48:	mov	w0, #0x65                  	// #101
  452f4c:	strb	w0, [x19, x3]
  452f50:	strb	w0, [x19, #264]
  452f54:	cmp	x1, #0xff
  452f58:	b.ne	44f7d0 <nftw@plt+0x4cc50>  // b.any
  452f5c:	ldp	x3, x2, [x19, #272]
  452f60:	strb	wzr, [x19, #255]
  452f64:	mov	x0, x19
  452f68:	blr	x3
  452f6c:	ldr	x2, [x19, #320]
  452f70:	mov	x0, #0x1                   	// #1
  452f74:	mov	x1, #0x0                   	// #0
  452f78:	add	x2, x2, x0
  452f7c:	str	x2, [x19, #320]
  452f80:	b	44f7d4 <nftw@plt+0x4cc54>
  452f84:	ldp	x3, x2, [x19, #272]
  452f88:	strb	wzr, [x19, #255]
  452f8c:	mov	x1, x0
  452f90:	mov	x0, x19
  452f94:	blr	x3
  452f98:	ldr	x1, [x19, #320]
  452f9c:	mov	w3, #0x5b20                	// #23328
  452fa0:	mov	w2, #0x63                  	// #99
  452fa4:	mov	x0, #0x3                   	// #3
  452fa8:	add	x1, x1, #0x1
  452fac:	strh	w3, [x19]
  452fb0:	strb	w2, [x19, #2]
  452fb4:	str	x1, [x19, #320]
  452fb8:	add	x1, x0, #0x1
  452fbc:	str	x1, [x19, #256]
  452fc0:	mov	w2, #0x6c                  	// #108
  452fc4:	strb	w2, [x19, x0]
  452fc8:	strb	w2, [x19, #264]
  452fcc:	cmp	x1, #0xff
  452fd0:	b.ne	44f77c <nftw@plt+0x4cbfc>  // b.any
  452fd4:	ldp	x3, x2, [x19, #272]
  452fd8:	strb	wzr, [x19, #255]
  452fdc:	mov	x0, x19
  452fe0:	blr	x3
  452fe4:	ldr	x0, [x19, #320]
  452fe8:	mov	w1, #0x6e6f                	// #28271
  452fec:	mov	x2, #0x2                   	// #2
  452ff0:	strh	w1, [x19]
  452ff4:	add	x0, x0, #0x1
  452ff8:	str	x0, [x19, #320]
  452ffc:	b	44f7c4 <nftw@plt+0x4cc44>
  453000:	add	x0, x0, #0x3
  453004:	str	x0, [x19, #256]
  453008:	mov	w1, #0x70                  	// #112
  45300c:	strb	w1, [x19, x3]
  453010:	strb	w1, [x19, #264]
  453014:	cmp	x0, #0xff
  453018:	b.ne	453768 <nftw@plt+0x50be8>  // b.any
  45301c:	ldp	x3, x2, [x19, #272]
  453020:	strb	wzr, [x19, #255]
  453024:	mov	x1, x0
  453028:	mov	x0, x19
  45302c:	blr	x3
  453030:	ldr	x1, [x19, #320]
  453034:	mov	w3, #0x6965                	// #26981
  453038:	mov	w2, #0x6e                  	// #110
  45303c:	mov	x0, #0x3                   	// #3
  453040:	add	x1, x1, #0x1
  453044:	strh	w3, [x19]
  453048:	strb	w2, [x19, #2]
  45304c:	str	x1, [x19, #320]
  453050:	add	x1, x0, #0x1
  453054:	str	x1, [x19, #256]
  453058:	mov	w20, #0x66                  	// #102
  45305c:	strb	w20, [x19, x0]
  453060:	strb	w20, [x19, #264]
  453064:	cmp	x1, #0xff
  453068:	b.ne	4537b8 <nftw@plt+0x50c38>  // b.any
  45306c:	ldp	x3, x2, [x19, #272]
  453070:	strb	wzr, [x19, #255]
  453074:	mov	x0, x19
  453078:	blr	x3
  45307c:	strb	w20, [x19, #2]
  453080:	ldr	x1, [x19, #320]
  453084:	mov	w2, #0x206f                	// #8303
  453088:	mov	x0, #0x3                   	// #3
  45308c:	strh	w2, [x19]
  453090:	add	x1, x1, #0x1
  453094:	str	x1, [x19, #320]
  453098:	add	x1, x0, #0x1
  45309c:	str	x1, [x19, #256]
  4530a0:	mov	w2, #0x6f                  	// #111
  4530a4:	strb	w2, [x19, x0]
  4530a8:	strb	w2, [x19, #264]
  4530ac:	cmp	x1, #0xff
  4530b0:	b.ne	453804 <nftw@plt+0x50c84>  // b.any
  4530b4:	ldp	x3, x2, [x19, #272]
  4530b8:	strb	wzr, [x19, #255]
  4530bc:	mov	x0, x19
  4530c0:	blr	x3
  4530c4:	ldr	x1, [x19, #320]
  4530c8:	mov	w2, #0x72                  	// #114
  4530cc:	mov	x0, #0x1                   	// #1
  4530d0:	strb	w2, [x19]
  4530d4:	add	x1, x1, x0
  4530d8:	str	x1, [x19, #320]
  4530dc:	b	45028c <nftw@plt+0x4d70c>
  4530e0:	add	x0, x0, #0x3
  4530e4:	str	x0, [x19, #256]
  4530e8:	mov	w1, #0x65                  	// #101
  4530ec:	strb	w1, [x19, x3]
  4530f0:	strb	w1, [x19, #264]
  4530f4:	cmp	x0, #0xff
  4530f8:	b.ne	4531d8 <nftw@plt+0x50658>  // b.any
  4530fc:	ldp	x3, x2, [x19, #272]
  453100:	strb	wzr, [x19, #255]
  453104:	mov	x1, x0
  453108:	mov	x0, x19
  45310c:	blr	x3
  453110:	ldr	x0, [x19, #320]
  453114:	mov	w3, #0x6172                	// #24946
  453118:	mov	w2, #0x74                  	// #116
  45311c:	mov	x1, #0x3                   	// #3
  453120:	add	x0, x0, #0x1
  453124:	strh	w3, [x19]
  453128:	strb	w2, [x19, #2]
  45312c:	str	x0, [x19, #320]
  453130:	add	x0, x1, #0x1
  453134:	str	x0, [x19, #256]
  453138:	mov	w2, #0x6f                  	// #111
  45313c:	strb	w2, [x19, x1]
  453140:	strb	w2, [x19, #264]
  453144:	cmp	x0, #0xff
  453148:	b.ne	44f478 <nftw@plt+0x4c8f8>  // b.any
  45314c:	ldp	x3, x2, [x19, #272]
  453150:	strb	wzr, [x19, #255]
  453154:	mov	x1, x0
  453158:	mov	x0, x19
  45315c:	blr	x3
  453160:	mov	w0, #0x72                  	// #114
  453164:	strb	w0, [x19]
  453168:	strb	w0, [x19, #264]
  45316c:	mov	x1, #0x1                   	// #1
  453170:	ldr	x2, [x19, #320]
  453174:	mov	x0, x1
  453178:	ldr	x20, [x22, #8]
  45317c:	add	x2, x2, x1
  453180:	str	x1, [x19, #256]
  453184:	str	x2, [x19, #320]
  453188:	ldrb	w2, [x20]
  45318c:	sub	w2, w2, #0x61
  453190:	and	w2, w2, #0xff
  453194:	cmp	w2, #0x19
  453198:	b.hi	44f4e4 <nftw@plt+0x4c964>  // b.pmore
  45319c:	add	x1, x0, #0x1
  4531a0:	b	44f4d4 <nftw@plt+0x4c954>
  4531a4:	ldp	x3, x2, [x19, #272]
  4531a8:	strb	wzr, [x19, #255]
  4531ac:	mov	x1, x0
  4531b0:	mov	x0, x19
  4531b4:	blr	x3
  4531b8:	ldr	x1, [x19, #320]
  4531bc:	mov	w3, #0x706f                	// #28783
  4531c0:	mov	w2, #0x65                  	// #101
  4531c4:	mov	x0, #0x3                   	// #3
  4531c8:	add	x1, x1, #0x1
  4531cc:	strh	w3, [x19]
  4531d0:	strb	w2, [x19, #2]
  4531d4:	str	x1, [x19, #320]
  4531d8:	add	x1, x0, #0x1
  4531dc:	str	x1, [x19, #256]
  4531e0:	mov	w2, #0x72                  	// #114
  4531e4:	strb	w2, [x19, x0]
  4531e8:	strb	w2, [x19, #264]
  4531ec:	cmp	x1, #0xff
  4531f0:	b.ne	44f424 <nftw@plt+0x4c8a4>  // b.any
  4531f4:	ldp	x3, x2, [x19, #272]
  4531f8:	strb	wzr, [x19, #255]
  4531fc:	mov	x0, x19
  453200:	blr	x3
  453204:	ldr	x0, [x19, #320]
  453208:	mov	w2, #0x7461                	// #29793
  45320c:	mov	x1, #0x2                   	// #2
  453210:	strh	w2, [x19]
  453214:	add	x0, x0, #0x1
  453218:	str	x0, [x19, #320]
  45321c:	b	44f46c <nftw@plt+0x4c8ec>
  453220:	add	x0, x0, #0x3
  453224:	str	x0, [x19, #256]
  453228:	mov	w1, #0x65                  	// #101
  45322c:	strb	w1, [x19, x3]
  453230:	strb	w1, [x19, #264]
  453234:	cmp	x0, #0xff
  453238:	b.ne	4532ec <nftw@plt+0x5076c>  // b.any
  45323c:	ldp	x3, x2, [x19, #272]
  453240:	strb	wzr, [x19, #255]
  453244:	mov	x1, x0
  453248:	mov	x0, x19
  45324c:	blr	x3
  453250:	ldr	x1, [x19, #320]
  453254:	mov	w3, #0x6172                	// #24946
  453258:	mov	w2, #0x74                  	// #116
  45325c:	mov	x0, #0x3                   	// #3
  453260:	add	x1, x1, #0x1
  453264:	strh	w3, [x19]
  453268:	strb	w2, [x19, #2]
  45326c:	str	x1, [x19, #320]
  453270:	add	x1, x0, #0x1
  453274:	str	x1, [x19, #256]
  453278:	mov	w2, #0x6f                  	// #111
  45327c:	strb	w2, [x19, x0]
  453280:	strb	w2, [x19, #264]
  453284:	cmp	x1, #0xff
  453288:	b.ne	45333c <nftw@plt+0x507bc>  // b.any
  45328c:	ldp	x3, x2, [x19, #272]
  453290:	strb	wzr, [x19, #255]
  453294:	mov	x0, x19
  453298:	blr	x3
  45329c:	ldr	x1, [x19, #320]
  4532a0:	mov	w2, #0x72                  	// #114
  4532a4:	mov	x0, #0x1                   	// #1
  4532a8:	strb	w2, [x19]
  4532ac:	add	x1, x1, x0
  4532b0:	str	x1, [x19, #320]
  4532b4:	b	44d834 <nftw@plt+0x4acb4>
  4532b8:	ldp	x3, x2, [x19, #272]
  4532bc:	strb	wzr, [x19, #255]
  4532c0:	mov	x1, x0
  4532c4:	mov	x0, x19
  4532c8:	blr	x3
  4532cc:	ldr	x1, [x19, #320]
  4532d0:	mov	w3, #0x706f                	// #28783
  4532d4:	mov	w2, #0x65                  	// #101
  4532d8:	mov	x0, #0x3                   	// #3
  4532dc:	add	x1, x1, #0x1
  4532e0:	strh	w3, [x19]
  4532e4:	strb	w2, [x19, #2]
  4532e8:	str	x1, [x19, #320]
  4532ec:	add	x3, x0, #0x1
  4532f0:	str	x3, [x19, #256]
  4532f4:	mov	w1, #0x72                  	// #114
  4532f8:	strb	w1, [x19, x0]
  4532fc:	strb	w1, [x19, #264]
  453300:	cmp	x3, #0xff
  453304:	b.ne	44d7e4 <nftw@plt+0x4ac64>  // b.any
  453308:	ldp	x4, x2, [x19, #272]
  45330c:	strb	wzr, [x19, #255]
  453310:	mov	x1, x3
  453314:	mov	x0, x19
  453318:	blr	x4
  45331c:	ldr	x0, [x19, #320]
  453320:	mov	w3, #0x7461                	// #29793
  453324:	mov	w2, #0x6f                  	// #111
  453328:	mov	x1, #0x3                   	// #3
  45332c:	add	x0, x0, #0x1
  453330:	strh	w3, [x19]
  453334:	strb	w2, [x19, #2]
  453338:	str	x0, [x19, #320]
  45333c:	add	x0, x1, #0x1
  453340:	str	x0, [x19, #256]
  453344:	mov	w2, #0x72                  	// #114
  453348:	strb	w2, [x19, x1]
  45334c:	strb	w2, [x19, #264]
  453350:	cmp	x0, #0xff
  453354:	b.ne	44d834 <nftw@plt+0x4acb4>  // b.any
  453358:	ldp	x3, x2, [x19, #272]
  45335c:	strb	wzr, [x19, #255]
  453360:	mov	x1, x0
  453364:	mov	x0, x19
  453368:	blr	x3
  45336c:	ldr	x1, [x19, #320]
  453370:	mov	x3, #0x1                   	// #1
  453374:	mov	x0, #0x0                   	// #0
  453378:	add	x1, x1, x3
  45337c:	str	x1, [x19, #320]
  453380:	b	44d838 <nftw@plt+0x4acb8>
  453384:	add	x0, x0, #0x3
  453388:	str	x0, [x19, #256]
  45338c:	mov	w1, #0x76                  	// #118
  453390:	strb	w1, [x19, x3]
  453394:	strb	w1, [x19, #264]
  453398:	cmp	x0, #0xff
  45339c:	b.ne	4534a4 <nftw@plt+0x50924>  // b.any
  4533a0:	ldp	x3, x2, [x19, #272]
  4533a4:	strb	wzr, [x19, #255]
  4533a8:	mov	x1, x0
  4533ac:	mov	x0, x19
  4533b0:	blr	x3
  4533b4:	ldr	x0, [x19, #320]
  4533b8:	mov	w3, #0x2061                	// #8289
  4533bc:	mov	w2, #0x72                  	// #114
  4533c0:	mov	x1, #0x3                   	// #3
  4533c4:	add	x0, x0, #0x1
  4533c8:	strh	w3, [x19]
  4533cc:	strb	w2, [x19, #2]
  4533d0:	str	x0, [x19, #320]
  4533d4:	add	x0, x1, #0x1
  4533d8:	str	x0, [x19, #256]
  4533dc:	mov	w2, #0x65                  	// #101
  4533e0:	strb	w2, [x19, x1]
  4533e4:	strb	w2, [x19, #264]
  4533e8:	cmp	x0, #0xff
  4533ec:	b.ne	4534f0 <nftw@plt+0x50970>  // b.any
  4533f0:	ldp	x3, x2, [x19, #272]
  4533f4:	strb	wzr, [x19, #255]
  4533f8:	mov	x1, x0
  4533fc:	mov	x0, x19
  453400:	blr	x3
  453404:	ldr	x0, [x19, #320]
  453408:	mov	w3, #0x6f73                	// #28531
  45340c:	mov	w2, #0x75                  	// #117
  453410:	mov	x1, #0x3                   	// #3
  453414:	add	x0, x0, #0x1
  453418:	strh	w3, [x19]
  45341c:	strb	w2, [x19, #2]
  453420:	str	x0, [x19, #320]
  453424:	add	x0, x1, #0x1
  453428:	str	x0, [x19, #256]
  45342c:	mov	w2, #0x72                  	// #114
  453430:	strb	w2, [x19, x1]
  453434:	strb	w2, [x19, #264]
  453438:	cmp	x0, #0xff
  45343c:	b.ne	45353c <nftw@plt+0x509bc>  // b.any
  453440:	ldp	x3, x2, [x19, #272]
  453444:	strb	wzr, [x19, #255]
  453448:	mov	x1, x0
  45344c:	mov	x0, x19
  453450:	blr	x3
  453454:	ldr	x0, [x19, #320]
  453458:	mov	w2, #0x63                  	// #99
  45345c:	mov	x1, #0x1                   	// #1
  453460:	strb	w2, [x19]
  453464:	add	x0, x0, x1
  453468:	str	x0, [x19, #320]
  45346c:	b	451984 <nftw@plt+0x4ee04>
  453470:	ldp	x3, x2, [x19, #272]
  453474:	strb	wzr, [x19, #255]
  453478:	mov	x1, x0
  45347c:	mov	x0, x19
  453480:	blr	x3
  453484:	ldr	x1, [x19, #320]
  453488:	mov	w3, #0x616a                	// #24938
  45348c:	mov	w2, #0x76                  	// #118
  453490:	mov	x0, #0x3                   	// #3
  453494:	add	x1, x1, #0x1
  453498:	strh	w3, [x19]
  45349c:	strb	w2, [x19, #2]
  4534a0:	str	x1, [x19, #320]
  4534a4:	add	x1, x0, #0x1
  4534a8:	str	x1, [x19, #256]
  4534ac:	mov	w2, #0x61                  	// #97
  4534b0:	strb	w2, [x19, x0]
  4534b4:	strb	w2, [x19, #264]
  4534b8:	cmp	x1, #0xff
  4534bc:	b.ne	44ecf0 <nftw@plt+0x4c170>  // b.any
  4534c0:	ldp	x3, x2, [x19, #272]
  4534c4:	strb	wzr, [x19, #255]
  4534c8:	mov	x0, x19
  4534cc:	blr	x3
  4534d0:	ldr	x1, [x19, #320]
  4534d4:	mov	w3, #0x7220                	// #29216
  4534d8:	mov	w2, #0x65                  	// #101
  4534dc:	mov	x0, #0x3                   	// #3
  4534e0:	add	x1, x1, #0x1
  4534e4:	strh	w3, [x19]
  4534e8:	strb	w2, [x19, #2]
  4534ec:	str	x1, [x19, #320]
  4534f0:	add	x1, x0, #0x1
  4534f4:	str	x1, [x19, #256]
  4534f8:	mov	w2, #0x73                  	// #115
  4534fc:	strb	w2, [x19, x0]
  453500:	strb	w2, [x19, #264]
  453504:	cmp	x1, #0xff
  453508:	b.ne	44ed40 <nftw@plt+0x4c1c0>  // b.any
  45350c:	ldp	x3, x2, [x19, #272]
  453510:	strb	wzr, [x19, #255]
  453514:	mov	x0, x19
  453518:	blr	x3
  45351c:	ldr	x1, [x19, #320]
  453520:	mov	w3, #0x756f                	// #30063
  453524:	mov	w2, #0x72                  	// #114
  453528:	mov	x0, #0x3                   	// #3
  45352c:	add	x1, x1, #0x1
  453530:	strh	w3, [x19]
  453534:	strb	w2, [x19, #2]
  453538:	str	x1, [x19, #320]
  45353c:	add	x1, x0, #0x1
  453540:	str	x1, [x19, #256]
  453544:	mov	w2, #0x63                  	// #99
  453548:	strb	w2, [x19, x0]
  45354c:	strb	w2, [x19, #264]
  453550:	cmp	x1, #0xff
  453554:	b.ne	44ed90 <nftw@plt+0x4c210>  // b.any
  453558:	ldp	x3, x2, [x19, #272]
  45355c:	strb	wzr, [x19, #255]
  453560:	mov	x0, x19
  453564:	blr	x3
  453568:	ldr	x1, [x19, #320]
  45356c:	mov	x0, #0x1                   	// #1
  453570:	mov	w2, #0x65                  	// #101
  453574:	strb	w2, [x19]
  453578:	add	x1, x1, x0
  45357c:	str	x1, [x19, #320]
  453580:	add	x1, x0, #0x1
  453584:	b	44edd4 <nftw@plt+0x4c254>
  453588:	add	x0, x0, #0x3
  45358c:	str	x0, [x19, #256]
  453590:	mov	w1, #0x63                  	// #99
  453594:	strb	w1, [x19, x3]
  453598:	strb	w1, [x19, #264]
  45359c:	cmp	x0, #0xff
  4535a0:	b.ne	4519cc <nftw@plt+0x4ee4c>  // b.any
  4535a4:	ldp	x3, x2, [x19, #272]
  4535a8:	strb	wzr, [x19, #255]
  4535ac:	mov	x1, x0
  4535b0:	mov	x0, x19
  4535b4:	blr	x3
  4535b8:	ldr	x0, [x19, #320]
  4535bc:	mov	w3, #0x746c                	// #29804
  4535c0:	mov	w2, #0x79                  	// #121
  4535c4:	mov	x1, #0x3                   	// #3
  4535c8:	add	x0, x0, #0x1
  4535cc:	strh	w3, [x19]
  4535d0:	strb	w2, [x19, #2]
  4535d4:	str	x0, [x19, #320]
  4535d8:	add	x0, x1, #0x1
  4535dc:	str	x0, [x19, #256]
  4535e0:	mov	w2, #0x70                  	// #112
  4535e4:	strb	w2, [x19, x1]
  4535e8:	strb	w2, [x19, #264]
  4535ec:	cmp	x0, #0xff
  4535f0:	b.ne	451a18 <nftw@plt+0x4ee98>  // b.any
  4535f4:	ldp	x3, x2, [x19, #272]
  4535f8:	strb	wzr, [x19, #255]
  4535fc:	mov	x1, x0
  453600:	mov	x0, x19
  453604:	blr	x3
  453608:	ldr	x0, [x19, #320]
  45360c:	mov	w1, #0x65                  	// #101
  453610:	mov	x2, #0x1                   	// #1
  453614:	strb	w1, [x19]
  453618:	add	x0, x0, x2
  45361c:	str	x0, [x19, #320]
  453620:	b	452dcc <nftw@plt+0x5024c>
  453624:	add	x0, x0, #0x3
  453628:	str	x0, [x19, #256]
  45362c:	mov	w1, #0x61                  	// #97
  453630:	strb	w1, [x19, x3]
  453634:	strb	w1, [x19, #264]
  453638:	cmp	x0, #0xff
  45363c:	b.ne	4536ec <nftw@plt+0x50b6c>  // b.any
  453640:	ldp	x3, x2, [x19, #272]
  453644:	strb	wzr, [x19, #255]
  453648:	mov	x1, x0
  45364c:	mov	x0, x19
  453650:	blr	x3
  453654:	ldr	x0, [x19, #320]
  453658:	mov	w2, #0x626d                	// #25197
  45365c:	mov	w1, #0x64                  	// #100
  453660:	mov	x3, #0x3                   	// #3
  453664:	add	x0, x0, #0x1
  453668:	strh	w2, [x19]
  45366c:	strb	w1, [x19, #2]
  453670:	str	x0, [x19, #320]
  453674:	add	x1, x3, #0x1
  453678:	str	x1, [x19, #256]
  45367c:	mov	w0, #0x61                  	// #97
  453680:	strb	w0, [x19, x3]
  453684:	strb	w0, [x19, #264]
  453688:	cmp	x1, #0xff
  45368c:	b.ne	44e184 <nftw@plt+0x4b604>  // b.any
  453690:	ldp	x3, x2, [x19, #272]
  453694:	strb	wzr, [x19, #255]
  453698:	mov	x0, x19
  45369c:	blr	x3
  4536a0:	ldr	x2, [x19, #320]
  4536a4:	mov	x0, #0x1                   	// #1
  4536a8:	mov	x1, #0x0                   	// #0
  4536ac:	add	x2, x2, x0
  4536b0:	str	x2, [x19, #320]
  4536b4:	b	44e188 <nftw@plt+0x4b608>
  4536b8:	ldp	x3, x2, [x19, #272]
  4536bc:	strb	wzr, [x19, #255]
  4536c0:	mov	x1, x0
  4536c4:	mov	x0, x19
  4536c8:	blr	x3
  4536cc:	ldr	x1, [x19, #320]
  4536d0:	mov	w3, #0x6c7b                	// #27771
  4536d4:	mov	w2, #0x61                  	// #97
  4536d8:	mov	x0, #0x3                   	// #3
  4536dc:	add	x1, x1, #0x1
  4536e0:	strh	w3, [x19]
  4536e4:	strb	w2, [x19, #2]
  4536e8:	str	x1, [x19, #320]
  4536ec:	add	x1, x0, #0x1
  4536f0:	str	x1, [x19, #256]
  4536f4:	mov	w2, #0x6d                  	// #109
  4536f8:	strb	w2, [x19, x0]
  4536fc:	strb	w2, [x19, #264]
  453700:	cmp	x1, #0xff
  453704:	b.ne	44e130 <nftw@plt+0x4b5b0>  // b.any
  453708:	ldp	x3, x2, [x19, #272]
  45370c:	strb	wzr, [x19, #255]
  453710:	mov	x0, x19
  453714:	blr	x3
  453718:	ldr	x0, [x19, #320]
  45371c:	mov	w1, #0x6462                	// #25698
  453720:	mov	x2, #0x2                   	// #2
  453724:	strh	w1, [x19]
  453728:	add	x0, x0, #0x1
  45372c:	str	x0, [x19, #320]
  453730:	b	44e178 <nftw@plt+0x4b5f8>
  453734:	ldp	x3, x2, [x19, #272]
  453738:	strb	wzr, [x19, #255]
  45373c:	mov	x1, x0
  453740:	mov	x0, x19
  453744:	blr	x3
  453748:	ldr	x1, [x19, #320]
  45374c:	mov	w3, #0x7974                	// #31092
  453750:	mov	w2, #0x70                  	// #112
  453754:	mov	x0, #0x3                   	// #3
  453758:	add	x1, x1, #0x1
  45375c:	strh	w3, [x19]
  453760:	strb	w2, [x19, #2]
  453764:	str	x1, [x19, #320]
  453768:	add	x3, x0, #0x1
  45376c:	str	x3, [x19, #256]
  453770:	mov	w1, #0x65                  	// #101
  453774:	strb	w1, [x19, x0]
  453778:	strb	w1, [x19, #264]
  45377c:	cmp	x3, #0xff
  453780:	b.ne	4501f0 <nftw@plt+0x4d670>  // b.any
  453784:	ldp	x4, x2, [x19, #272]
  453788:	strb	wzr, [x19, #255]
  45378c:	mov	x1, x3
  453790:	mov	x0, x19
  453794:	blr	x4
  453798:	ldr	x0, [x19, #320]
  45379c:	mov	w3, #0x6e69                	// #28265
  4537a0:	mov	w2, #0x66                  	// #102
  4537a4:	mov	x1, #0x3                   	// #3
  4537a8:	add	x0, x0, #0x1
  4537ac:	strh	w3, [x19]
  4537b0:	strb	w2, [x19, #2]
  4537b4:	str	x0, [x19, #320]
  4537b8:	add	x0, x1, #0x1
  4537bc:	str	x0, [x19, #256]
  4537c0:	mov	w20, #0x6f                  	// #111
  4537c4:	strb	w20, [x19, x1]
  4537c8:	strb	w20, [x19, #264]
  4537cc:	cmp	x0, #0xff
  4537d0:	b.ne	45023c <nftw@plt+0x4d6bc>  // b.any
  4537d4:	ldp	x3, x2, [x19, #272]
  4537d8:	strb	wzr, [x19, #255]
  4537dc:	mov	x1, x0
  4537e0:	mov	x0, x19
  4537e4:	blr	x3
  4537e8:	strb	w20, [x19, #2]
  4537ec:	ldr	x0, [x19, #320]
  4537f0:	mov	w2, #0x6620                	// #26144
  4537f4:	mov	x1, #0x3                   	// #3
  4537f8:	strh	w2, [x19]
  4537fc:	add	x0, x0, #0x1
  453800:	str	x0, [x19, #320]
  453804:	add	x0, x1, #0x1
  453808:	str	x0, [x19, #256]
  45380c:	mov	w2, #0x72                  	// #114
  453810:	strb	w2, [x19, x1]
  453814:	strb	w2, [x19, #264]
  453818:	cmp	x0, #0xff
  45381c:	b.ne	45028c <nftw@plt+0x4d70c>  // b.any
  453820:	ldp	x3, x2, [x19, #272]
  453824:	strb	wzr, [x19, #255]
  453828:	mov	x1, x0
  45382c:	mov	x0, x19
  453830:	blr	x3
  453834:	ldr	x2, [x19, #320]
  453838:	mov	x1, #0x1                   	// #1
  45383c:	mov	x0, #0x0                   	// #0
  453840:	add	x2, x2, x1
  453844:	str	x2, [x19, #320]
  453848:	b	450290 <nftw@plt+0x4d710>
  45384c:	ldp	x3, x2, [x19, #272]
  453850:	strb	wzr, [x19, #255]
  453854:	mov	x1, x0
  453858:	mov	x0, x19
  45385c:	blr	x3
  453860:	ldr	x1, [x19, #320]
  453864:	mov	w3, #0x706f                	// #28783
  453868:	mov	w2, #0x65                  	// #101
  45386c:	mov	x0, #0x3                   	// #3
  453870:	add	x1, x1, #0x1
  453874:	strh	w3, [x19]
  453878:	strb	w2, [x19, #2]
  45387c:	str	x1, [x19, #320]
  453880:	add	x3, x0, #0x1
  453884:	str	x3, [x19, #256]
  453888:	mov	w1, #0x72                  	// #114
  45388c:	strb	w1, [x19, x0]
  453890:	strb	w1, [x19, #264]
  453894:	cmp	x3, #0xff
  453898:	b.ne	44f5d4 <nftw@plt+0x4ca54>  // b.any
  45389c:	ldp	x4, x2, [x19, #272]
  4538a0:	strb	wzr, [x19, #255]
  4538a4:	mov	x1, x3
  4538a8:	mov	x0, x19
  4538ac:	blr	x4
  4538b0:	ldr	x0, [x19, #320]
  4538b4:	mov	w3, #0x7461                	// #29793
  4538b8:	mov	w2, #0x6f                  	// #111
  4538bc:	mov	x1, #0x3                   	// #3
  4538c0:	add	x0, x0, #0x1
  4538c4:	strh	w3, [x19]
  4538c8:	strb	w2, [x19, #2]
  4538cc:	str	x0, [x19, #320]
  4538d0:	add	x0, x1, #0x1
  4538d4:	str	x0, [x19, #256]
  4538d8:	mov	w2, #0x72                  	// #114
  4538dc:	strb	w2, [x19, x1]
  4538e0:	strb	w2, [x19, #264]
  4538e4:	cmp	x0, #0xff
  4538e8:	b.ne	44f624 <nftw@plt+0x4caa4>  // b.any
  4538ec:	ldp	x3, x2, [x19, #272]
  4538f0:	strb	wzr, [x19, #255]
  4538f4:	mov	x1, x0
  4538f8:	mov	x0, x19
  4538fc:	blr	x3
  453900:	ldr	x2, [x19, #320]
  453904:	mov	x1, #0x1                   	// #1
  453908:	mov	x0, #0x0                   	// #0
  45390c:	add	x2, x2, x1
  453910:	str	x2, [x19, #320]
  453914:	b	44f628 <nftw@plt+0x4caa8>
  453918:	ldr	w0, [x20, #4]
  45391c:	cmp	w0, #0x1
  453920:	b.gt	453a6c <nftw@plt+0x50eec>
  453924:	ldr	w1, [x19, #308]
  453928:	cmp	w1, #0x400
  45392c:	b.gt	453a6c <nftw@plt+0x50eec>
  453930:	ldr	x3, [x19, #328]
  453934:	add	w0, w0, #0x1
  453938:	str	w0, [x20, #4]
  45393c:	add	w1, w1, #0x1
  453940:	add	x0, sp, #0x80
  453944:	str	w1, [x19, #308]
  453948:	str	x0, [x19, #328]
  45394c:	mov	w1, w22
  453950:	mov	x0, x19
  453954:	mov	x2, x20
  453958:	stp	x20, x3, [sp, #128]
  45395c:	bl	44d138 <nftw@plt+0x4a5b8>
  453960:	ldr	w1, [x20, #4]
  453964:	ldr	x0, [sp, #136]
  453968:	str	x0, [x19, #328]
  45396c:	ldr	w0, [x19, #308]
  453970:	sub	w1, w1, #0x1
  453974:	str	w1, [x20, #4]
  453978:	sub	w0, w0, #0x1
  45397c:	str	w0, [x19, #308]
  453980:	ldr	x1, [x19, #256]
  453984:	cmp	x1, #0xff
  453988:	b.eq	45455c <nftw@plt+0x519dc>  // b.none
  45398c:	add	x0, x1, #0x1
  453990:	str	x0, [x19, #256]
  453994:	mov	w2, #0x20                  	// #32
  453998:	strb	w2, [x19, x1]
  45399c:	strb	w2, [x19, #264]
  4539a0:	b	44ef74 <nftw@plt+0x4c3f4>
  4539a4:	ldp	x21, x22, [sp, #32]
  4539a8:	ldp	x23, x24, [sp, #48]
  4539ac:	b	44d1a0 <nftw@plt+0x4a620>
  4539b0:	mov	w0, #0x1                   	// #1
  4539b4:	str	w0, [x19, #304]
  4539b8:	b	44f2c0 <nftw@plt+0x4c740>
  4539bc:	b.eq	454954 <nftw@plt+0x51dd4>  // b.none
  4539c0:	add	x1, x0, #0x1
  4539c4:	str	x1, [x19, #256]
  4539c8:	mov	w2, #0x5f                  	// #95
  4539cc:	strb	w2, [x19, x0]
  4539d0:	strb	w2, [x19, #264]
  4539d4:	cmp	x1, #0xff
  4539d8:	b.ne	454608 <nftw@plt+0x51a88>  // b.any
  4539dc:	ldp	x3, x2, [x19, #272]
  4539e0:	strb	wzr, [x19, #255]
  4539e4:	mov	x0, x19
  4539e8:	blr	x3
  4539ec:	ldr	x0, [x19, #320]
  4539f0:	mov	w3, #0x7246                	// #29254
  4539f4:	mov	w2, #0x61                  	// #97
  4539f8:	mov	x1, #0x3                   	// #3
  4539fc:	add	x0, x0, #0x1
  453a00:	strh	w3, [x19]
  453a04:	strb	w2, [x19, #2]
  453a08:	str	x0, [x19, #320]
  453a0c:	add	x0, x1, #0x1
  453a10:	str	x0, [x19, #256]
  453a14:	mov	w2, #0x63                  	// #99
  453a18:	strb	w2, [x19, x1]
  453a1c:	strb	w2, [x19, #264]
  453a20:	cmp	x0, #0xff
  453a24:	b.ne	45465c <nftw@plt+0x51adc>  // b.any
  453a28:	ldp	x3, x2, [x19, #272]
  453a2c:	strb	wzr, [x19, #255]
  453a30:	mov	x1, x0
  453a34:	mov	x0, x19
  453a38:	blr	x3
  453a3c:	ldr	x2, [x19, #320]
  453a40:	mov	x1, #0x1                   	// #1
  453a44:	mov	x0, #0x0                   	// #0
  453a48:	add	x2, x2, x1
  453a4c:	str	x2, [x19, #320]
  453a50:	str	x1, [x19, #256]
  453a54:	mov	w1, #0x74                  	// #116
  453a58:	strb	w1, [x19, x0]
  453a5c:	strb	w1, [x19, #264]
  453a60:	ldp	x21, x22, [sp, #32]
  453a64:	ldp	x23, x24, [sp, #48]
  453a68:	b	44d1a0 <nftw@plt+0x4a620>
  453a6c:	mov	w0, #0x1                   	// #1
  453a70:	str	w0, [x19, #304]
  453a74:	b	453980 <nftw@plt+0x50e00>
  453a78:	mov	w0, #0x1                   	// #1
  453a7c:	str	w0, [x19, #304]
  453a80:	b	44d304 <nftw@plt+0x4a784>
  453a84:	add	x0, x1, #0x1
  453a88:	str	x0, [x19, #256]
  453a8c:	mov	w2, #0x29                  	// #41
  453a90:	strb	w2, [x19, x1]
  453a94:	strb	w2, [x19, #264]
  453a98:	ldr	w1, [x24]
  453a9c:	cmp	w1, #0x3e
  453aa0:	b.eq	4543a4 <nftw@plt+0x51824>  // b.none
  453aa4:	cmp	w21, #0x8
  453aa8:	b.ne	44d708 <nftw@plt+0x4ab88>  // b.any
  453aac:	cmp	x0, #0xff
  453ab0:	b.ne	453ad8 <nftw@plt+0x50f58>  // b.any
  453ab4:	ldp	x3, x2, [x19, #272]
  453ab8:	strb	wzr, [x19, #255]
  453abc:	mov	x1, x0
  453ac0:	mov	x0, x19
  453ac4:	blr	x3
  453ac8:	ldr	x1, [x19, #320]
  453acc:	mov	x0, #0x0                   	// #0
  453ad0:	add	x1, x1, #0x1
  453ad4:	str	x1, [x19, #320]
  453ad8:	add	x1, x0, #0x1
  453adc:	str	x1, [x19, #256]
  453ae0:	mov	w1, #0x5b                  	// #91
  453ae4:	strb	w1, [x19, x0]
  453ae8:	strb	w1, [x19, #264]
  453aec:	b	44d708 <nftw@plt+0x4ab88>
  453af0:	mov	w0, #0x1                   	// #1
  453af4:	str	w0, [x19, #304]
  453af8:	b	44db68 <nftw@plt+0x4afe8>
  453afc:	ldr	x1, [x19, #256]
  453b00:	cmp	x1, #0xff
  453b04:	b.ne	4543f0 <nftw@plt+0x51870>  // b.any
  453b08:	ldp	x3, x2, [x19, #272]
  453b0c:	strb	wzr, [x19, #255]
  453b10:	mov	x0, x19
  453b14:	blr	x3
  453b18:	ldr	x2, [x19, #320]
  453b1c:	mov	x0, #0x1                   	// #1
  453b20:	mov	x1, #0x0                   	// #0
  453b24:	add	x2, x2, x0
  453b28:	str	x2, [x19, #320]
  453b2c:	str	x0, [x19, #256]
  453b30:	mov	w0, #0x7d                  	// #125
  453b34:	strb	w0, [x19, x1]
  453b38:	strb	w0, [x19, #264]
  453b3c:	ldp	x21, x22, [sp, #32]
  453b40:	ldp	x23, x24, [sp, #48]
  453b44:	b	44d1a0 <nftw@plt+0x4a620>
  453b48:	mov	w0, #0x2c                  	// #44
  453b4c:	add	x2, x1, #0x1
  453b50:	strb	w0, [x19, x1]
  453b54:	b	44d340 <nftw@plt+0x4a7c0>
  453b58:	ldp	x3, x2, [x19, #272]
  453b5c:	strb	wzr, [x19, #255]
  453b60:	mov	x0, x19
  453b64:	blr	x3
  453b68:	ldr	x1, [x19, #320]
  453b6c:	mov	w3, #0x6620                	// #26144
  453b70:	mov	w2, #0x6f                  	// #111
  453b74:	mov	x0, #0x3                   	// #3
  453b78:	add	x1, x1, #0x1
  453b7c:	strh	w3, [x19]
  453b80:	strb	w2, [x19, #2]
  453b84:	str	x1, [x19, #320]
  453b88:	add	x1, x0, #0x1
  453b8c:	str	x1, [x19, #256]
  453b90:	mov	w2, #0x72                  	// #114
  453b94:	strb	w2, [x19, x0]
  453b98:	strb	w2, [x19, #264]
  453b9c:	cmp	x1, #0xff
  453ba0:	b.ne	451084 <nftw@plt+0x4e504>  // b.any
  453ba4:	ldp	x3, x2, [x19, #272]
  453ba8:	strb	wzr, [x19, #255]
  453bac:	mov	x0, x19
  453bb0:	blr	x3
  453bb4:	ldr	x2, [x19, #320]
  453bb8:	mov	x0, #0x1                   	// #1
  453bbc:	mov	x1, #0x0                   	// #0
  453bc0:	add	x2, x2, x0
  453bc4:	str	x2, [x19, #320]
  453bc8:	b	451088 <nftw@plt+0x4e508>
  453bcc:	ldr	x0, [x21, #8]
  453bd0:	ldr	x23, [x0]
  453bd4:	ldrb	w0, [x23]
  453bd8:	subs	w1, w0, #0x61
  453bdc:	b.ne	453bf0 <nftw@plt+0x51070>  // b.any
  453be0:	ldrb	w1, [x23, #1]
  453be4:	subs	w1, w1, #0x64
  453be8:	b.ne	453bf0 <nftw@plt+0x51070>  // b.any
  453bec:	ldrb	w1, [x23, #2]
  453bf0:	ldr	w2, [x20]
  453bf4:	cbnz	w1, 453c00 <nftw@plt+0x51080>
  453bf8:	cmp	w2, #0x3
  453bfc:	b.eq	455b24 <nftw@plt+0x52fa4>  // b.none
  453c00:	cmp	w2, #0x39
  453c04:	b.eq	455c54 <nftw@plt+0x530d4>  // b.none
  453c08:	cmp	w0, #0x73
  453c0c:	b.ne	453cf8 <nftw@plt+0x51178>  // b.any
  453c10:	ldrb	w1, [x23, #1]
  453c14:	cmp	w1, #0x5a
  453c18:	b.ne	453d44 <nftw@plt+0x511c4>  // b.any
  453c1c:	ldrb	w3, [x23, #2]
  453c20:	cbnz	w3, 453d44 <nftw@plt+0x511c4>
  453c24:	mov	x1, x20
  453c28:	mov	x0, x19
  453c2c:	bl	44c670 <nftw@plt+0x49af0>
  453c30:	cbnz	x0, 453c4c <nftw@plt+0x510cc>
  453c34:	b	453c58 <nftw@plt+0x510d8>
  453c38:	ldr	x1, [x0, #8]
  453c3c:	cbz	x1, 453c58 <nftw@plt+0x510d8>
  453c40:	ldr	x0, [x0, #16]
  453c44:	add	w3, w3, #0x1
  453c48:	cbz	x0, 453c58 <nftw@plt+0x510d8>
  453c4c:	ldr	w1, [x0]
  453c50:	cmp	w1, #0x2f
  453c54:	b.eq	453c38 <nftw@plt+0x510b8>  // b.none
  453c58:	mov	w2, w3
  453c5c:	adrp	x1, 473000 <_obstack_memory_used@@Base+0x11bb8>
  453c60:	add	x1, x1, #0x1f8
  453c64:	add	x0, sp, #0x80
  453c68:	bl	4025b0 <sprintf@plt>
  453c6c:	add	x0, sp, #0x80
  453c70:	bl	4024f0 <strlen@plt>
  453c74:	cbz	x0, 455dfc <nftw@plt+0x5327c>
  453c78:	add	x20, sp, #0x80
  453c7c:	mov	x23, #0x1                   	// #1
  453c80:	add	x22, x20, x0
  453c84:	ldr	x1, [x19, #256]
  453c88:	b	453ce4 <nftw@plt+0x51164>
  453c8c:	ldp	x3, x2, [x19, #272]
  453c90:	strb	wzr, [x19, #255]
  453c94:	mov	x0, x19
  453c98:	add	x20, x20, #0x1
  453c9c:	blr	x3
  453ca0:	strb	w21, [x19]
  453ca4:	ldr	x0, [x19, #320]
  453ca8:	str	x23, [x19, #256]
  453cac:	strb	w21, [x19, #264]
  453cb0:	cmp	x20, x22
  453cb4:	add	x0, x0, #0x1
  453cb8:	str	x0, [x19, #320]
  453cbc:	b.eq	455d48 <nftw@plt+0x531c8>  // b.none
  453cc0:	ldrb	w21, [x20]
  453cc4:	mov	x0, #0x1                   	// #1
  453cc8:	add	x1, x0, #0x1
  453ccc:	str	x1, [x19, #256]
  453cd0:	strb	w21, [x19, x0]
  453cd4:	add	x20, x20, #0x1
  453cd8:	strb	w21, [x19, #264]
  453cdc:	cmp	x22, x20
  453ce0:	b.eq	455c8c <nftw@plt+0x5310c>  // b.none
  453ce4:	ldrb	w21, [x20]
  453ce8:	cmp	x1, #0xff
  453cec:	b.eq	453c8c <nftw@plt+0x5110c>  // b.none
  453cf0:	mov	x0, x1
  453cf4:	b	453cc8 <nftw@plt+0x51148>
  453cf8:	mov	x0, x19
  453cfc:	mov	x2, x21
  453d00:	mov	w1, w22
  453d04:	bl	456050 <nftw@plt+0x534d0>
  453d08:	ldrb	w0, [x23]
  453d0c:	cmp	w0, #0x67
  453d10:	b.ne	453dd4 <nftw@plt+0x51254>  // b.any
  453d14:	ldrb	w1, [x23, #1]
  453d18:	cmp	w1, #0x73
  453d1c:	b.ne	453dd4 <nftw@plt+0x51254>  // b.any
  453d20:	ldrb	w1, [x23, #2]
  453d24:	cbnz	w1, 453dd4 <nftw@plt+0x51254>
  453d28:	mov	w1, w22
  453d2c:	mov	x2, x20
  453d30:	mov	x0, x19
  453d34:	bl	455fb8 <nftw@plt+0x53438>
  453d38:	ldp	x21, x22, [sp, #32]
  453d3c:	ldp	x23, x24, [sp, #48]
  453d40:	b	44d1a0 <nftw@plt+0x4a620>
  453d44:	cmp	w0, #0x73
  453d48:	b.ne	453cf8 <nftw@plt+0x51178>  // b.any
  453d4c:	ldrb	w0, [x23, #1]
  453d50:	cmp	w0, #0x50
  453d54:	b.ne	453cf8 <nftw@plt+0x51178>  // b.any
  453d58:	ldrb	w0, [x23, #2]
  453d5c:	mov	w3, #0x0                   	// #0
  453d60:	cbz	w0, 453d74 <nftw@plt+0x511f4>
  453d64:	b	453cf8 <nftw@plt+0x51178>
  453d68:	add	w3, w3, #0x1
  453d6c:	ldr	x20, [x20, #16]
  453d70:	cbz	x20, 455450 <nftw@plt+0x528d0>
  453d74:	ldr	w0, [x20]
  453d78:	cmp	w0, #0x2f
  453d7c:	b.ne	455450 <nftw@plt+0x528d0>  // b.any
  453d80:	ldr	x0, [x20, #8]
  453d84:	cbz	x0, 455450 <nftw@plt+0x528d0>
  453d88:	ldr	w1, [x0]
  453d8c:	cmp	w1, #0x4b
  453d90:	b.ne	453d68 <nftw@plt+0x511e8>  // b.any
  453d94:	ldr	x1, [x0, #8]
  453d98:	mov	x0, x19
  453d9c:	bl	44c670 <nftw@plt+0x49af0>
  453da0:	mov	w1, #0x0                   	// #0
  453da4:	cbnz	x0, 453dc0 <nftw@plt+0x51240>
  453da8:	b	453dcc <nftw@plt+0x5124c>
  453dac:	ldr	x2, [x0, #8]
  453db0:	cbz	x2, 453dcc <nftw@plt+0x5124c>
  453db4:	ldr	x0, [x0, #16]
  453db8:	add	w1, w1, #0x1
  453dbc:	cbz	x0, 453dcc <nftw@plt+0x5124c>
  453dc0:	ldr	w2, [x0]
  453dc4:	cmp	w2, #0x2f
  453dc8:	b.eq	453dac <nftw@plt+0x5122c>  // b.none
  453dcc:	add	w3, w3, w1
  453dd0:	b	453d6c <nftw@plt+0x511ec>
  453dd4:	cmp	w0, #0x73
  453dd8:	b.ne	44f9d8 <nftw@plt+0x4ce58>  // b.any
  453ddc:	ldrb	w0, [x23, #1]
  453de0:	cmp	w0, #0x74
  453de4:	b.ne	44f9d8 <nftw@plt+0x4ce58>  // b.any
  453de8:	ldrb	w0, [x23, #2]
  453dec:	cbnz	w0, 44f9d8 <nftw@plt+0x4ce58>
  453df0:	ldr	x1, [x19, #256]
  453df4:	cmp	x1, #0xff
  453df8:	b.ne	453e1c <nftw@plt+0x5129c>  // b.any
  453dfc:	ldp	x3, x2, [x19, #272]
  453e00:	strb	wzr, [x19, #255]
  453e04:	mov	x0, x19
  453e08:	blr	x3
  453e0c:	ldr	x0, [x19, #320]
  453e10:	mov	x1, #0x0                   	// #0
  453e14:	add	x0, x0, #0x1
  453e18:	str	x0, [x19, #320]
  453e1c:	add	x0, x1, #0x1
  453e20:	str	x0, [x19, #256]
  453e24:	mov	w2, #0x28                  	// #40
  453e28:	strb	w2, [x19, x1]
  453e2c:	strb	w2, [x19, #264]
  453e30:	ldr	w1, [x20, #4]
  453e34:	cmp	w1, #0x1
  453e38:	b.gt	454ef0 <nftw@plt+0x52370>
  453e3c:	ldr	w2, [x19, #308]
  453e40:	cmp	w2, #0x400
  453e44:	b.gt	454ef0 <nftw@plt+0x52370>
  453e48:	ldr	x3, [x19, #328]
  453e4c:	add	w1, w1, #0x1
  453e50:	str	w1, [x20, #4]
  453e54:	add	w2, w2, #0x1
  453e58:	add	x0, sp, #0x80
  453e5c:	str	w2, [x19, #308]
  453e60:	str	x0, [x19, #328]
  453e64:	mov	w1, w22
  453e68:	mov	x2, x20
  453e6c:	mov	x0, x19
  453e70:	stp	x20, x3, [sp, #128]
  453e74:	bl	44d138 <nftw@plt+0x4a5b8>
  453e78:	ldr	w2, [x20, #4]
  453e7c:	ldr	x0, [sp, #136]
  453e80:	str	x0, [x19, #328]
  453e84:	ldr	w1, [x19, #308]
  453e88:	sub	w2, w2, #0x1
  453e8c:	ldr	x0, [x19, #256]
  453e90:	str	w2, [x20, #4]
  453e94:	sub	w1, w1, #0x1
  453e98:	str	w1, [x19, #308]
  453e9c:	cmp	x0, #0xff
  453ea0:	b.ne	453ec8 <nftw@plt+0x51348>  // b.any
  453ea4:	ldp	x3, x2, [x19, #272]
  453ea8:	strb	wzr, [x19, #255]
  453eac:	mov	x1, x0
  453eb0:	mov	x0, x19
  453eb4:	blr	x3
  453eb8:	ldr	x1, [x19, #320]
  453ebc:	mov	x0, #0x0                   	// #0
  453ec0:	add	x1, x1, #0x1
  453ec4:	str	x1, [x19, #320]
  453ec8:	add	x1, x0, #0x1
  453ecc:	str	x1, [x19, #256]
  453ed0:	mov	w1, #0x29                  	// #41
  453ed4:	strb	w1, [x19, x0]
  453ed8:	strb	w1, [x19, #264]
  453edc:	ldp	x21, x22, [sp, #32]
  453ee0:	ldp	x23, x24, [sp, #48]
  453ee4:	b	44d1a0 <nftw@plt+0x4a620>
  453ee8:	ldp	x3, x2, [x19, #272]
  453eec:	strb	wzr, [x19, #255]
  453ef0:	mov	x1, x0
  453ef4:	mov	x0, x19
  453ef8:	blr	x3
  453efc:	ldr	x1, [x19, #320]
  453f00:	mov	w3, #0x615b                	// #24923
  453f04:	mov	w2, #0x62                  	// #98
  453f08:	mov	x0, #0x3                   	// #3
  453f0c:	add	x1, x1, #0x1
  453f10:	strh	w3, [x19]
  453f14:	strb	w2, [x19, #2]
  453f18:	str	x1, [x19, #320]
  453f1c:	add	x1, x0, #0x1
  453f20:	str	x1, [x19, #256]
  453f24:	mov	w2, #0x69                  	// #105
  453f28:	strb	w2, [x19, x0]
  453f2c:	strb	w2, [x19, #264]
  453f30:	cmp	x1, #0xff
  453f34:	b.ne	44df78 <nftw@plt+0x4b3f8>  // b.any
  453f38:	ldp	x3, x2, [x19, #272]
  453f3c:	strb	wzr, [x19, #255]
  453f40:	mov	x0, x19
  453f44:	blr	x3
  453f48:	ldr	x2, [x19, #320]
  453f4c:	mov	x0, #0x1                   	// #1
  453f50:	mov	x1, #0x0                   	// #0
  453f54:	add	x2, x2, x0
  453f58:	str	x2, [x19, #320]
  453f5c:	b	44df7c <nftw@plt+0x4b3fc>
  453f60:	ldp	x3, x2, [x19, #272]
  453f64:	strb	wzr, [x19, #255]
  453f68:	mov	x0, x19
  453f6c:	blr	x3
  453f70:	ldr	x0, [x19, #320]
  453f74:	mov	w1, #0x692d                	// #26925
  453f78:	mov	x2, #0x2                   	// #2
  453f7c:	strh	w1, [x19]
  453f80:	add	x0, x0, #0x1
  453f84:	str	x0, [x19, #320]
  453f88:	b	450990 <nftw@plt+0x4de10>
  453f8c:	ldr	x0, [x23, #8]
  453f90:	ldr	w21, [x0, #28]
  453f94:	cmp	w21, #0x6
  453f98:	b.hi	454030 <nftw@plt+0x514b0>  // b.pmore
  453f9c:	cbz	w21, 44d630 <nftw@plt+0x4aab0>
  453fa0:	ldr	x0, [x2, #16]
  453fa4:	ldr	w0, [x0]
  453fa8:	cbnz	w0, 44d630 <nftw@plt+0x4aab0>
  453fac:	cmp	w20, #0x3e
  453fb0:	b.eq	455f04 <nftw@plt+0x53384>  // b.none
  453fb4:	ldr	x2, [x24, #16]
  453fb8:	mov	w1, w22
  453fbc:	mov	x0, x19
  453fc0:	bl	455fb8 <nftw@plt+0x53438>
  453fc4:	cmp	w21, #0x4
  453fc8:	b.eq	455ee4 <nftw@plt+0x53364>  // b.none
  453fcc:	b.hi	455c98 <nftw@plt+0x53118>  // b.pmore
  453fd0:	cmp	w21, #0x2
  453fd4:	b.eq	455e94 <nftw@plt+0x53314>  // b.none
  453fd8:	cmp	w21, #0x3
  453fdc:	b.ne	455f74 <nftw@plt+0x533f4>  // b.any
  453fe0:	ldr	x1, [x19, #256]
  453fe4:	cmp	x1, #0xff
  453fe8:	b.ne	454010 <nftw@plt+0x51490>  // b.any
  453fec:	ldp	x3, x2, [x19, #272]
  453ff0:	strb	wzr, [x19, #255]
  453ff4:	mov	x0, x19
  453ff8:	blr	x3
  453ffc:	str	xzr, [x19, #256]
  454000:	ldr	x0, [x19, #320]
  454004:	mov	x1, #0x0                   	// #0
  454008:	add	x0, x0, #0x1
  45400c:	str	x0, [x19, #320]
  454010:	add	x0, x1, #0x1
  454014:	str	x0, [x19, #256]
  454018:	mov	w0, #0x6c                  	// #108
  45401c:	strb	w0, [x19, x1]
  454020:	strb	w0, [x19, #264]
  454024:	ldp	x21, x22, [sp, #32]
  454028:	ldp	x23, x24, [sp, #48]
  45402c:	b	44d1a0 <nftw@plt+0x4a620>
  454030:	cmp	w21, #0x7
  454034:	b.ne	44d630 <nftw@plt+0x4aab0>  // b.any
  454038:	ldr	x0, [x2, #16]
  45403c:	ldr	w1, [x0]
  454040:	cbnz	w1, 44d630 <nftw@plt+0x4aab0>
  454044:	ldr	w1, [x0, #16]
  454048:	cmp	w20, #0x3d
  45404c:	ccmp	w1, #0x1, #0x0, eq  // eq = none
  454050:	b.ne	44d630 <nftw@plt+0x4aab0>  // b.any
  454054:	ldr	x0, [x0, #8]
  454058:	ldrb	w0, [x0]
  45405c:	cmp	w0, #0x30
  454060:	b.eq	455f94 <nftw@plt+0x53414>  // b.none
  454064:	cmp	w0, #0x31
  454068:	b.ne	44d630 <nftw@plt+0x4aab0>  // b.any
  45406c:	mov	x0, x19
  454070:	adrp	x1, 47c000 <_obstack_memory_used@@Base+0x1abb8>
  454074:	mov	x2, #0x4                   	// #4
  454078:	add	x1, x1, #0x938
  45407c:	bl	44c480 <nftw@plt+0x49900>
  454080:	ldp	x21, x22, [sp, #32]
  454084:	ldp	x23, x24, [sp, #48]
  454088:	b	44d1a0 <nftw@plt+0x4a620>
  45408c:	add	x1, x1, #0x3
  454090:	str	x1, [x19, #256]
  454094:	mov	w0, #0x6e                  	// #110
  454098:	strb	w0, [x19, x3]
  45409c:	strb	w0, [x19, #264]
  4540a0:	cmp	x1, #0xff
  4540a4:	b.ne	45099c <nftw@plt+0x4de1c>  // b.any
  4540a8:	ldp	x3, x2, [x19, #272]
  4540ac:	strb	wzr, [x19, #255]
  4540b0:	mov	x0, x19
  4540b4:	blr	x3
  4540b8:	ldr	x2, [x19, #320]
  4540bc:	mov	x0, #0x1                   	// #1
  4540c0:	mov	x1, #0x0                   	// #0
  4540c4:	add	x2, x2, x0
  4540c8:	str	x2, [x19, #320]
  4540cc:	b	4509a0 <nftw@plt+0x4de20>
  4540d0:	ldr	x20, [x20, #8]
  4540d4:	cbz	x20, 454744 <nftw@plt+0x51bc4>
  4540d8:	ldr	w1, [x20, #4]
  4540dc:	cmp	w1, #0x1
  4540e0:	b.gt	454744 <nftw@plt+0x51bc4>
  4540e4:	ldr	w2, [x19, #308]
  4540e8:	cmp	w2, #0x400
  4540ec:	b.gt	454744 <nftw@plt+0x51bc4>
  4540f0:	ldr	x3, [x19, #328]
  4540f4:	add	w1, w1, #0x1
  4540f8:	str	w1, [x20, #4]
  4540fc:	add	w2, w2, #0x1
  454100:	add	x0, sp, #0x80
  454104:	str	w2, [x19, #308]
  454108:	str	x0, [x19, #328]
  45410c:	mov	w1, w22
  454110:	mov	x2, x20
  454114:	mov	x0, x19
  454118:	stp	x20, x3, [sp, #128]
  45411c:	bl	44d138 <nftw@plt+0x4a5b8>
  454120:	ldr	w1, [x20, #4]
  454124:	ldr	x0, [sp, #136]
  454128:	str	x0, [x19, #328]
  45412c:	ldr	w0, [x19, #308]
  454130:	sub	w1, w1, #0x1
  454134:	ldr	x2, [x19, #368]
  454138:	sub	w0, w0, #0x1
  45413c:	ldr	x3, [x19, #256]
  454140:	str	w1, [x20, #4]
  454144:	str	w0, [x19, #308]
  454148:	mov	x1, x3
  45414c:	ldrb	w0, [x19, #264]
  454150:	cbz	x2, 45415c <nftw@plt+0x515dc>
  454154:	ldr	x2, [sp, #112]
  454158:	str	x2, [x19, #288]
  45415c:	cmp	w0, #0x3c
  454160:	b.ne	4541a4 <nftw@plt+0x51624>  // b.any
  454164:	cmp	x1, #0xff
  454168:	b.ne	454190 <nftw@plt+0x51610>  // b.any
  45416c:	ldp	x3, x2, [x19, #272]
  454170:	strb	wzr, [x19, #255]
  454174:	mov	x0, x19
  454178:	blr	x3
  45417c:	str	xzr, [x19, #256]
  454180:	ldr	x0, [x19, #320]
  454184:	mov	x1, #0x0                   	// #0
  454188:	add	x0, x0, #0x1
  45418c:	str	x0, [x19, #320]
  454190:	add	x3, x1, #0x1
  454194:	str	x3, [x19, #256]
  454198:	mov	w0, #0x20                  	// #32
  45419c:	strb	w0, [x19, x1]
  4541a0:	strb	w0, [x19, #264]
  4541a4:	add	x0, x3, #0x1
  4541a8:	cmp	x3, #0xff
  4541ac:	b.ne	4541d8 <nftw@plt+0x51658>  // b.any
  4541b0:	ldp	x4, x2, [x19, #272]
  4541b4:	strb	wzr, [x19, #255]
  4541b8:	mov	x1, x3
  4541bc:	mov	x0, x19
  4541c0:	blr	x4
  4541c4:	ldr	x1, [x19, #320]
  4541c8:	mov	x0, #0x1                   	// #1
  4541cc:	mov	x3, #0x0                   	// #0
  4541d0:	add	x1, x1, x0
  4541d4:	str	x1, [x19, #320]
  4541d8:	str	x0, [x19, #256]
  4541dc:	mov	w1, #0x3c                  	// #60
  4541e0:	strb	w1, [x19, x3]
  4541e4:	strb	w1, [x19, #264]
  4541e8:	ldr	x1, [x24, #8]
  4541ec:	ldr	x20, [x1, #16]
  4541f0:	cbz	x20, 454738 <nftw@plt+0x51bb8>
  4541f4:	ldr	w1, [x20, #4]
  4541f8:	cmp	w1, #0x1
  4541fc:	b.gt	454738 <nftw@plt+0x51bb8>
  454200:	ldr	w2, [x19, #308]
  454204:	cmp	w2, #0x400
  454208:	b.gt	454738 <nftw@plt+0x51bb8>
  45420c:	ldr	x3, [x19, #328]
  454210:	add	w1, w1, #0x1
  454214:	str	w1, [x20, #4]
  454218:	add	w2, w2, #0x1
  45421c:	add	x0, sp, #0x80
  454220:	str	w2, [x19, #308]
  454224:	str	x0, [x19, #328]
  454228:	mov	w1, w22
  45422c:	mov	x2, x20
  454230:	mov	x0, x19
  454234:	stp	x20, x3, [sp, #128]
  454238:	bl	44d138 <nftw@plt+0x4a5b8>
  45423c:	ldr	w1, [x19, #308]
  454240:	ldr	x0, [sp, #136]
  454244:	str	x0, [x19, #328]
  454248:	ldr	w0, [x20, #4]
  45424c:	sub	w1, w1, #0x1
  454250:	sub	w0, w0, #0x1
  454254:	str	w0, [x20, #4]
  454258:	ldr	x0, [x19, #256]
  45425c:	str	w1, [x19, #308]
  454260:	ldrb	w2, [x19, #264]
  454264:	mov	x1, x0
  454268:	cmp	w2, #0x3e
  45426c:	b.ne	4542b0 <nftw@plt+0x51730>  // b.any
  454270:	cmp	x0, #0xff
  454274:	b.ne	45429c <nftw@plt+0x5171c>  // b.any
  454278:	ldp	x3, x2, [x19, #272]
  45427c:	strb	wzr, [x19, #255]
  454280:	mov	x0, x19
  454284:	blr	x3
  454288:	str	xzr, [x19, #256]
  45428c:	ldr	x0, [x19, #320]
  454290:	mov	x1, #0x0                   	// #0
  454294:	add	x0, x0, #0x1
  454298:	str	x0, [x19, #320]
  45429c:	add	x0, x1, #0x1
  4542a0:	str	x0, [x19, #256]
  4542a4:	mov	w2, #0x20                  	// #32
  4542a8:	strb	w2, [x19, x1]
  4542ac:	strb	w2, [x19, #264]
  4542b0:	add	x1, x0, #0x1
  4542b4:	cmp	x0, #0xff
  4542b8:	b.ne	4542e4 <nftw@plt+0x51764>  // b.any
  4542bc:	ldp	x3, x2, [x19, #272]
  4542c0:	strb	wzr, [x19, #255]
  4542c4:	mov	x1, x0
  4542c8:	mov	x0, x19
  4542cc:	blr	x3
  4542d0:	ldr	x2, [x19, #320]
  4542d4:	mov	x1, #0x1                   	// #1
  4542d8:	mov	x0, #0x0                   	// #0
  4542dc:	add	x2, x2, x1
  4542e0:	str	x2, [x19, #320]
  4542e4:	str	x1, [x19, #256]
  4542e8:	mov	w1, #0x3e                  	// #62
  4542ec:	strb	w1, [x19, x0]
  4542f0:	strb	w1, [x19, #264]
  4542f4:	ldp	x21, x22, [sp, #32]
  4542f8:	ldp	x23, x24, [sp, #48]
  4542fc:	b	44d1a0 <nftw@plt+0x4a620>
  454300:	cmp	x1, #0xff
  454304:	b.ne	454328 <nftw@plt+0x517a8>  // b.any
  454308:	ldp	x3, x2, [x19, #272]
  45430c:	strb	wzr, [x19, #255]
  454310:	mov	x0, x19
  454314:	blr	x3
  454318:	ldr	x0, [x19, #320]
  45431c:	mov	x1, #0x0                   	// #0
  454320:	add	x0, x0, #0x1
  454324:	str	x0, [x19, #320]
  454328:	add	x2, x1, #0x1
  45432c:	str	x2, [x19, #256]
  454330:	mov	w0, #0x20                  	// #32
  454334:	strb	w0, [x19, x1]
  454338:	mov	x1, x2
  45433c:	strb	w0, [x19, #264]
  454340:	b	4503c0 <nftw@plt+0x4d840>
  454344:	cmp	x1, #0xff
  454348:	b.eq	454b68 <nftw@plt+0x51fe8>  // b.none
  45434c:	add	x3, x1, #0x1
  454350:	str	x3, [x19, #256]
  454354:	mov	w0, #0x3a                  	// #58
  454358:	strb	w0, [x19, x1]
  45435c:	strb	w0, [x19, #264]
  454360:	cmp	x3, #0xff
  454364:	b.ne	454b90 <nftw@plt+0x52010>  // b.any
  454368:	ldp	x4, x2, [x19, #272]
  45436c:	strb	wzr, [x19, #255]
  454370:	mov	x1, x3
  454374:	mov	x0, x19
  454378:	blr	x4
  45437c:	ldr	x1, [x19, #320]
  454380:	mov	x0, #0x1                   	// #1
  454384:	mov	x3, #0x0                   	// #0
  454388:	add	x1, x1, x0
  45438c:	str	x1, [x19, #320]
  454390:	str	x0, [x19, #256]
  454394:	mov	w1, #0x3a                  	// #58
  454398:	strb	w1, [x19, x3]
  45439c:	strb	w1, [x19, #264]
  4543a0:	b	44d494 <nftw@plt+0x4a914>
  4543a4:	cmp	x0, #0xff
  4543a8:	b.ne	4543d0 <nftw@plt+0x51850>  // b.any
  4543ac:	ldp	x3, x2, [x19, #272]
  4543b0:	strb	wzr, [x19, #255]
  4543b4:	mov	x1, x0
  4543b8:	mov	x0, x19
  4543bc:	blr	x3
  4543c0:	str	xzr, [x19, #256]
  4543c4:	ldr	x0, [x19, #320]
  4543c8:	add	x0, x0, #0x1
  4543cc:	str	x0, [x19, #320]
  4543d0:	ldr	x2, [x19, #256]
  4543d4:	mov	w1, #0x2d                  	// #45
  4543d8:	add	x0, x2, #0x1
  4543dc:	str	x0, [x19, #256]
  4543e0:	strb	w1, [x19, x2]
  4543e4:	strb	w1, [x19, #264]
  4543e8:	b	453aa4 <nftw@plt+0x50f24>
  4543ec:	mov	x1, #0x1                   	// #1
  4543f0:	add	x0, x1, #0x1
  4543f4:	b	453b2c <nftw@plt+0x50fac>
  4543f8:	ldr	x0, [x19, #256]
  4543fc:	cmp	x0, #0xff
  454400:	b.eq	45555c <nftw@plt+0x529dc>  // b.none
  454404:	add	x3, x0, #0x1
  454408:	str	x3, [x19, #256]
  45440c:	mov	w1, #0x5f                  	// #95
  454410:	strb	w1, [x19, x0]
  454414:	strb	w1, [x19, #264]
  454418:	cmp	x3, #0xff
  45441c:	b.ne	455320 <nftw@plt+0x527a0>  // b.any
  454420:	ldp	x4, x2, [x19, #272]
  454424:	strb	wzr, [x19, #255]
  454428:	mov	x1, x3
  45442c:	mov	x0, x19
  454430:	blr	x4
  454434:	ldr	x1, [x19, #320]
  454438:	mov	w2, #0x6153                	// #24915
  45443c:	mov	x0, #0x2                   	// #2
  454440:	strh	w2, [x19]
  454444:	add	x1, x1, #0x1
  454448:	str	x1, [x19, #320]
  45444c:	add	x1, x0, #0x1
  454450:	mov	w2, #0x74                  	// #116
  454454:	strb	w2, [x19, x0]
  454458:	add	x0, x1, #0x1
  45445c:	str	x0, [x19, #256]
  454460:	mov	w0, #0x20                  	// #32
  454464:	strb	w0, [x19, x1]
  454468:	strb	w0, [x19, #264]
  45446c:	b	44ef54 <nftw@plt+0x4c3d4>
  454470:	ldp	x3, x2, [x19, #272]
  454474:	strb	wzr, [x19, #255]
  454478:	mov	x1, x0
  45447c:	mov	x0, x19
  454480:	blr	x3
  454484:	ldr	x0, [x19, #320]
  454488:	mov	x2, #0x1                   	// #1
  45448c:	ldr	x23, [x24, #8]
  454490:	mov	w1, #0x28                  	// #40
  454494:	add	x0, x0, x2
  454498:	strb	w1, [x19]
  45449c:	str	x2, [x19, #256]
  4544a0:	strb	w1, [x19, #264]
  4544a4:	str	x0, [x19, #320]
  4544a8:	cbnz	x23, 4553f0 <nftw@plt+0x52870>
  4544ac:	mov	w0, #0x29                  	// #41
  4544b0:	strb	w0, [x19, #1]
  4544b4:	strb	w0, [x19, #264]
  4544b8:	mov	x0, #0x2                   	// #2
  4544bc:	str	w2, [x19, #304]
  4544c0:	ldr	w1, [x24]
  4544c4:	str	x0, [x19, #256]
  4544c8:	cmp	w1, #0x3e
  4544cc:	b.ne	453aa4 <nftw@plt+0x50f24>  // b.any
  4544d0:	b	4543d0 <nftw@plt+0x51850>
  4544d4:	add	x1, x0, #0x2
  4544d8:	str	x1, [x19, #256]
  4544dc:	mov	w2, #0x70                  	// #112
  4544e0:	strb	w2, [x19, x3]
  4544e4:	strb	w2, [x19, #264]
  4544e8:	cmp	x1, #0xff
  4544ec:	b.ne	454908 <nftw@plt+0x51d88>  // b.any
  4544f0:	ldp	x3, x2, [x19, #272]
  4544f4:	strb	wzr, [x19, #255]
  4544f8:	mov	x0, x19
  4544fc:	blr	x3
  454500:	ldr	x0, [x19, #320]
  454504:	mov	w2, #0x7261                	// #29281
  454508:	mov	x1, #0x2                   	// #2
  45450c:	strh	w2, [x19]
  454510:	add	x0, x0, #0x1
  454514:	str	x0, [x19, #320]
  454518:	add	x0, x1, #0x1
  45451c:	mov	w2, #0x6d                  	// #109
  454520:	strb	w2, [x19, x1]
  454524:	add	x1, x0, #0x1
  454528:	b	451dd8 <nftw@plt+0x4f258>
  45452c:	add	x2, x2, #0x10
  454530:	mov	w1, w20
  454534:	mov	x0, x19
  454538:	bl	459040 <nftw@plt+0x564c0>
  45453c:	ldr	x2, [x24, #8]
  454540:	cbz	x2, 4555f8 <nftw@plt+0x52a78>
  454544:	mov	w1, w20
  454548:	mov	x0, x19
  45454c:	bl	455fb8 <nftw@plt+0x53438>
  454550:	ldp	x21, x22, [sp, #32]
  454554:	ldp	x23, x24, [sp, #48]
  454558:	b	44d1a0 <nftw@plt+0x4a620>
  45455c:	ldp	x3, x2, [x19, #272]
  454560:	strb	wzr, [x19, #255]
  454564:	mov	x0, x19
  454568:	blr	x3
  45456c:	mov	w0, #0x20                  	// #32
  454570:	strb	w0, [x19]
  454574:	strb	w0, [x19, #264]
  454578:	mov	x1, #0x1                   	// #1
  45457c:	ldr	x0, [x19, #320]
  454580:	str	x1, [x19, #256]
  454584:	ldrsh	w1, [x24, #16]
  454588:	add	x0, x0, #0x1
  45458c:	str	x0, [x19, #320]
  454590:	cbz	w1, 4545fc <nftw@plt+0x51a7c>
  454594:	mov	w0, #0x5f                  	// #95
  454598:	mov	x1, #0x2                   	// #2
  45459c:	strb	w0, [x19, #1]
  4545a0:	add	x3, x1, #0x1
  4545a4:	str	x3, [x19, #256]
  4545a8:	mov	w0, #0x41                  	// #65
  4545ac:	strb	w0, [x19, x1]
  4545b0:	strb	w0, [x19, #264]
  4545b4:	cmp	x3, #0xff
  4545b8:	b.ne	454aa0 <nftw@plt+0x51f20>  // b.any
  4545bc:	ldp	x4, x2, [x19, #272]
  4545c0:	strb	wzr, [x19, #255]
  4545c4:	mov	x1, x3
  4545c8:	mov	x0, x19
  4545cc:	blr	x4
  4545d0:	ldr	x0, [x19, #320]
  4545d4:	mov	w2, #0x6363                	// #25443
  4545d8:	mov	x1, #0x2                   	// #2
  4545dc:	strh	w2, [x19]
  4545e0:	add	x0, x0, #0x1
  4545e4:	str	x0, [x19, #320]
  4545e8:	add	x0, x1, #0x1
  4545ec:	mov	w2, #0x75                  	// #117
  4545f0:	strb	w2, [x19, x1]
  4545f4:	add	x1, x0, #0x1
  4545f8:	b	44f014 <nftw@plt+0x4c494>
  4545fc:	mov	w0, #0x5f                  	// #95
  454600:	mov	x1, #0x2                   	// #2
  454604:	strb	w0, [x19, #1]
  454608:	add	x3, x1, #0x1
  45460c:	str	x3, [x19, #256]
  454610:	mov	w0, #0x46                  	// #70
  454614:	strb	w0, [x19, x1]
  454618:	strb	w0, [x19, #264]
  45461c:	cmp	x3, #0xff
  454620:	b.ne	4548bc <nftw@plt+0x51d3c>  // b.any
  454624:	ldp	x4, x2, [x19, #272]
  454628:	strb	wzr, [x19, #255]
  45462c:	mov	x1, x3
  454630:	mov	x0, x19
  454634:	blr	x4
  454638:	ldr	x0, [x19, #320]
  45463c:	mov	w2, #0x6172                	// #24946
  454640:	mov	x1, #0x2                   	// #2
  454644:	strh	w2, [x19]
  454648:	add	x0, x0, #0x1
  45464c:	str	x0, [x19, #320]
  454650:	add	x0, x1, #0x1
  454654:	mov	w2, #0x63                  	// #99
  454658:	strb	w2, [x19, x1]
  45465c:	add	x1, x0, #0x1
  454660:	b	453a50 <nftw@plt+0x50ed0>
  454664:	ldr	x1, [x19, #256]
  454668:	cmp	x1, #0xff
  45466c:	b.ne	454690 <nftw@plt+0x51b10>  // b.any
  454670:	ldp	x3, x2, [x19, #272]
  454674:	strb	wzr, [x19, #255]
  454678:	mov	x0, x19
  45467c:	blr	x3
  454680:	ldr	x0, [x19, #320]
  454684:	mov	x1, #0x0                   	// #0
  454688:	add	x0, x0, #0x1
  45468c:	str	x0, [x19, #320]
  454690:	add	x0, x1, #0x1
  454694:	str	x0, [x19, #256]
  454698:	mov	w0, #0x5d                  	// #93
  45469c:	strb	w0, [x19, x1]
  4546a0:	strb	w0, [x19, #264]
  4546a4:	ldp	x21, x22, [sp, #32]
  4546a8:	ldp	x23, x24, [sp, #48]
  4546ac:	b	44d1a0 <nftw@plt+0x4a620>
  4546b0:	mov	w1, #0x1                   	// #1
  4546b4:	str	w1, [x19, #304]
  4546b8:	b	44f994 <nftw@plt+0x4ce14>
  4546bc:	ldp	x21, x22, [sp, #32]
  4546c0:	ldp	x23, x24, [sp, #48]
  4546c4:	b	44d1a0 <nftw@plt+0x4a620>
  4546c8:	ldp	x21, x22, [sp, #32]
  4546cc:	ldp	x23, x24, [sp, #48]
  4546d0:	b	44d1a0 <nftw@plt+0x4a620>
  4546d4:	ldp	x21, x22, [sp, #32]
  4546d8:	ldp	x23, x24, [sp, #48]
  4546dc:	b	44d1a0 <nftw@plt+0x4a620>
  4546e0:	ldp	x21, x22, [sp, #32]
  4546e4:	ldp	x23, x24, [sp, #48]
  4546e8:	b	44d1a0 <nftw@plt+0x4a620>
  4546ec:	ldp	x21, x22, [sp, #32]
  4546f0:	ldp	x23, x24, [sp, #48]
  4546f4:	b	44d1a0 <nftw@plt+0x4a620>
  4546f8:	ldp	x21, x22, [sp, #32]
  4546fc:	ldp	x23, x24, [sp, #48]
  454700:	b	44d1a0 <nftw@plt+0x4a620>
  454704:	ldp	x21, x22, [sp, #32]
  454708:	ldp	x23, x24, [sp, #48]
  45470c:	b	44d1a0 <nftw@plt+0x4a620>
  454710:	ldp	x21, x22, [sp, #32]
  454714:	ldp	x23, x24, [sp, #48]
  454718:	b	44d1a0 <nftw@plt+0x4a620>
  45471c:	ldp	x21, x22, [sp, #32]
  454720:	ldp	x23, x24, [sp, #48]
  454724:	ldp	x25, x26, [sp, #64]
  454728:	b	44d1a0 <nftw@plt+0x4a620>
  45472c:	mov	w0, #0x1                   	// #1
  454730:	str	w0, [x19, #304]
  454734:	b	451bac <nftw@plt+0x4f02c>
  454738:	mov	w1, #0x1                   	// #1
  45473c:	str	w1, [x19, #304]
  454740:	b	4542b0 <nftw@plt+0x51730>
  454744:	mov	w1, #0x1                   	// #1
  454748:	str	w1, [x19, #304]
  45474c:	cbz	x0, 4541a4 <nftw@plt+0x51624>
  454750:	ldr	x0, [sp, #112]
  454754:	str	x0, [x19, #288]
  454758:	b	4541a4 <nftw@plt+0x51624>
  45475c:	mov	w21, #0x0                   	// #0
  454760:	ldr	x4, [x19, #288]
  454764:	b	44d560 <nftw@plt+0x4a9e0>
  454768:	mov	x2, x25
  45476c:	mov	w1, w22
  454770:	mov	x0, x19
  454774:	bl	455fb8 <nftw@plt+0x53438>
  454778:	ldp	x21, x22, [sp, #32]
  45477c:	ldp	x23, x24, [sp, #48]
  454780:	ldp	x25, x26, [sp, #64]
  454784:	b	44d1a0 <nftw@plt+0x4a620>
  454788:	add	x3, x0, #0x2
  45478c:	str	x3, [x19, #256]
  454790:	mov	w2, #0x68                  	// #104
  454794:	strb	w2, [x19, x1]
  454798:	strb	w2, [x19, #264]
  45479c:	cmp	x3, #0xff
  4547a0:	b.ne	4550bc <nftw@plt+0x5253c>  // b.any
  4547a4:	ldp	x4, x2, [x19, #272]
  4547a8:	strb	wzr, [x19, #255]
  4547ac:	mov	x1, x3
  4547b0:	mov	x0, x19
  4547b4:	blr	x4
  4547b8:	ldr	x1, [x19, #320]
  4547bc:	mov	w2, #0x69                  	// #105
  4547c0:	mov	x0, #0x1                   	// #1
  4547c4:	strb	w2, [x19]
  4547c8:	add	x1, x1, x0
  4547cc:	str	x1, [x19, #320]
  4547d0:	b	44d958 <nftw@plt+0x4add8>
  4547d4:	add	x1, x0, #0x2
  4547d8:	str	x1, [x19, #256]
  4547dc:	mov	w2, #0x75                  	// #117
  4547e0:	strb	w2, [x19, x3]
  4547e4:	strb	w2, [x19, #264]
  4547e8:	cmp	x1, #0xff
  4547ec:	b.ne	454a54 <nftw@plt+0x51ed4>  // b.any
  4547f0:	ldp	x3, x2, [x19, #272]
  4547f4:	strb	wzr, [x19, #255]
  4547f8:	mov	x0, x19
  4547fc:	blr	x3
  454800:	ldr	x1, [x19, #320]
  454804:	mov	w2, #0x74                  	// #116
  454808:	mov	x0, #0x1                   	// #1
  45480c:	strb	w2, [x19]
  454810:	add	x1, x1, x0
  454814:	str	x1, [x19, #320]
  454818:	b	4505fc <nftw@plt+0x4da7c>
  45481c:	ldr	x25, [x25, #8]
  454820:	cbz	x25, 455e30 <nftw@plt+0x532b0>
  454824:	ldr	w4, [x25]
  454828:	add	x1, x21, #0x20
  45482c:	stp	x1, x25, [sp, #192]
  454830:	sub	w1, w4, #0x1c
  454834:	str	wzr, [sp, #208]
  454838:	cmp	w1, #0x34
  45483c:	str	x3, [sp, #216]
  454840:	b.hi	455c4c <nftw@plt+0x530cc>  // b.pmore
  454844:	lsl	x0, x0, x1
  454848:	add	x1, x21, #0x40
  45484c:	tst	x0, x2
  454850:	b.eq	44dad8 <nftw@plt+0x4af58>  // b.none
  454854:	ldr	x25, [x25, #8]
  454858:	cbz	x25, 454ed0 <nftw@plt+0x52350>
  45485c:	ldr	w4, [x25]
  454860:	stp	x1, x25, [sp, #224]
  454864:	sub	w0, w4, #0x1c
  454868:	str	wzr, [sp, #240]
  45486c:	cmp	w0, #0x34
  454870:	str	x3, [sp, #248]
  454874:	b.hi	455d70 <nftw@plt+0x531f0>  // b.pmore
  454878:	mov	x1, #0x1f                  	// #31
  45487c:	mov	x2, #0x1                   	// #1
  454880:	movk	x1, #0x1a, lsl #48
  454884:	lsl	x0, x2, x0
  454888:	mov	w20, #0x4                   	// #4
  45488c:	tst	x0, x1
  454890:	add	x1, x21, #0x60
  454894:	b.eq	44dad8 <nftw@plt+0x4af58>  // b.none
  454898:	ldr	x0, [x25, #8]
  45489c:	mov	x21, x1
  4548a0:	cbz	x0, 454ed4 <nftw@plt+0x52354>
  4548a4:	ldp	x21, x22, [sp, #32]
  4548a8:	ldp	x23, x24, [sp, #48]
  4548ac:	ldp	x25, x26, [sp, #64]
  4548b0:	str	x1, [x19, #296]
  4548b4:	str	w2, [x19, #304]
  4548b8:	b	44d1a0 <nftw@plt+0x4a620>
  4548bc:	add	x0, x1, #0x2
  4548c0:	str	x0, [x19, #256]
  4548c4:	mov	w1, #0x72                  	// #114
  4548c8:	strb	w1, [x19, x3]
  4548cc:	strb	w1, [x19, #264]
  4548d0:	cmp	x0, #0xff
  4548d4:	b.ne	454988 <nftw@plt+0x51e08>  // b.any
  4548d8:	ldp	x3, x2, [x19, #272]
  4548dc:	strb	wzr, [x19, #255]
  4548e0:	mov	x1, x0
  4548e4:	mov	x0, x19
  4548e8:	blr	x3
  4548ec:	ldr	x0, [x19, #320]
  4548f0:	mov	w2, #0x61                  	// #97
  4548f4:	mov	x1, #0x1                   	// #1
  4548f8:	strb	w2, [x19]
  4548fc:	add	x0, x0, x1
  454900:	str	x0, [x19, #320]
  454904:	b	454650 <nftw@plt+0x51ad0>
  454908:	add	x0, x0, #0x3
  45490c:	str	x0, [x19, #256]
  454910:	mov	w2, #0x61                  	// #97
  454914:	strb	w2, [x19, x1]
  454918:	strb	w2, [x19, #264]
  45491c:	cmp	x0, #0xff
  454920:	b.ne	454a08 <nftw@plt+0x51e88>  // b.any
  454924:	ldp	x3, x2, [x19, #272]
  454928:	strb	wzr, [x19, #255]
  45492c:	mov	x1, x0
  454930:	mov	x0, x19
  454934:	blr	x3
  454938:	ldr	x0, [x19, #320]
  45493c:	mov	w2, #0x72                  	// #114
  454940:	mov	x1, #0x1                   	// #1
  454944:	strb	w2, [x19]
  454948:	add	x0, x0, x1
  45494c:	str	x0, [x19, #320]
  454950:	b	454518 <nftw@plt+0x51998>
  454954:	ldp	x3, x2, [x19, #272]
  454958:	strb	wzr, [x19, #255]
  45495c:	mov	x1, x0
  454960:	mov	x0, x19
  454964:	blr	x3
  454968:	ldr	x1, [x19, #320]
  45496c:	mov	w3, #0x465f                	// #18015
  454970:	mov	w2, #0x72                  	// #114
  454974:	mov	x0, #0x3                   	// #3
  454978:	add	x1, x1, #0x1
  45497c:	strh	w3, [x19]
  454980:	strb	w2, [x19, #2]
  454984:	str	x1, [x19, #320]
  454988:	add	x1, x0, #0x1
  45498c:	str	x1, [x19, #256]
  454990:	mov	w2, #0x61                  	// #97
  454994:	strb	w2, [x19, x0]
  454998:	strb	w2, [x19, #264]
  45499c:	cmp	x1, #0xff
  4549a0:	b.ne	453a0c <nftw@plt+0x50e8c>  // b.any
  4549a4:	ldp	x3, x2, [x19, #272]
  4549a8:	strb	wzr, [x19, #255]
  4549ac:	mov	x0, x19
  4549b0:	blr	x3
  4549b4:	ldr	x1, [x19, #320]
  4549b8:	mov	x0, #0x1                   	// #1
  4549bc:	mov	w2, #0x63                  	// #99
  4549c0:	strb	w2, [x19]
  4549c4:	add	x1, x1, x0
  4549c8:	str	x1, [x19, #320]
  4549cc:	add	x1, x0, #0x1
  4549d0:	b	453a50 <nftw@plt+0x50ed0>
  4549d4:	ldp	x3, x2, [x19, #272]
  4549d8:	strb	wzr, [x19, #255]
  4549dc:	mov	x1, x0
  4549e0:	mov	x0, x19
  4549e4:	blr	x3
  4549e8:	ldr	x1, [x19, #320]
  4549ec:	mov	w3, #0x707b                	// #28795
  4549f0:	mov	w2, #0x61                  	// #97
  4549f4:	mov	x0, #0x3                   	// #3
  4549f8:	add	x1, x1, #0x1
  4549fc:	strh	w3, [x19]
  454a00:	strb	w2, [x19, #2]
  454a04:	str	x1, [x19, #320]
  454a08:	add	x1, x0, #0x1
  454a0c:	str	x1, [x19, #256]
  454a10:	mov	w2, #0x72                  	// #114
  454a14:	strb	w2, [x19, x0]
  454a18:	strb	w2, [x19, #264]
  454a1c:	cmp	x1, #0xff
  454a20:	b.ne	451d94 <nftw@plt+0x4f214>  // b.any
  454a24:	ldp	x3, x2, [x19, #272]
  454a28:	strb	wzr, [x19, #255]
  454a2c:	mov	x0, x19
  454a30:	blr	x3
  454a34:	ldr	x1, [x19, #320]
  454a38:	mov	x0, #0x1                   	// #1
  454a3c:	mov	w2, #0x6d                  	// #109
  454a40:	strb	w2, [x19]
  454a44:	add	x1, x1, x0
  454a48:	str	x1, [x19, #320]
  454a4c:	add	x1, x0, #0x1
  454a50:	b	451dd8 <nftw@plt+0x4f258>
  454a54:	add	x0, x0, #0x3
  454a58:	str	x0, [x19, #256]
  454a5c:	mov	w2, #0x74                  	// #116
  454a60:	strb	w2, [x19, x1]
  454a64:	strb	w2, [x19, #264]
  454a68:	cmp	x0, #0xff
  454a6c:	b.ne	455078 <nftw@plt+0x524f8>  // b.any
  454a70:	ldp	x3, x2, [x19, #272]
  454a74:	strb	wzr, [x19, #255]
  454a78:	mov	x1, x0
  454a7c:	mov	x0, x19
  454a80:	blr	x3
  454a84:	ldr	x0, [x19, #320]
  454a88:	mov	w2, #0x6f                  	// #111
  454a8c:	mov	x1, #0x1                   	// #1
  454a90:	strb	w2, [x19]
  454a94:	add	x0, x0, x1
  454a98:	str	x0, [x19, #320]
  454a9c:	b	450608 <nftw@plt+0x4da88>
  454aa0:	add	x0, x1, #0x2
  454aa4:	str	x0, [x19, #256]
  454aa8:	mov	w20, #0x63                  	// #99
  454aac:	strb	w20, [x19, x3]
  454ab0:	strb	w20, [x19, #264]
  454ab4:	cmp	x0, #0xff
  454ab8:	b.ne	454b1c <nftw@plt+0x51f9c>  // b.any
  454abc:	ldp	x3, x2, [x19, #272]
  454ac0:	strb	wzr, [x19, #255]
  454ac4:	mov	x1, x0
  454ac8:	mov	x0, x19
  454acc:	blr	x3
  454ad0:	strb	w20, [x19]
  454ad4:	ldr	x0, [x19, #320]
  454ad8:	mov	x1, #0x1                   	// #1
  454adc:	add	x0, x0, x1
  454ae0:	str	x0, [x19, #320]
  454ae4:	b	4545e8 <nftw@plt+0x51a68>
  454ae8:	ldp	x3, x2, [x19, #272]
  454aec:	strb	wzr, [x19, #255]
  454af0:	mov	x1, x0
  454af4:	mov	x0, x19
  454af8:	blr	x3
  454afc:	ldr	x1, [x19, #320]
  454b00:	mov	w3, #0x415f                	// #16735
  454b04:	mov	w2, #0x63                  	// #99
  454b08:	mov	x0, #0x3                   	// #3
  454b0c:	add	x1, x1, #0x1
  454b10:	strh	w3, [x19]
  454b14:	strb	w2, [x19, #2]
  454b18:	str	x1, [x19, #320]
  454b1c:	add	x1, x0, #0x1
  454b20:	str	x1, [x19, #256]
  454b24:	mov	w2, #0x63                  	// #99
  454b28:	strb	w2, [x19, x0]
  454b2c:	strb	w2, [x19, #264]
  454b30:	cmp	x1, #0xff
  454b34:	b.ne	44efd0 <nftw@plt+0x4c450>  // b.any
  454b38:	ldp	x3, x2, [x19, #272]
  454b3c:	strb	wzr, [x19, #255]
  454b40:	mov	x0, x19
  454b44:	blr	x3
  454b48:	ldr	x1, [x19, #320]
  454b4c:	mov	x0, #0x1                   	// #1
  454b50:	mov	w2, #0x75                  	// #117
  454b54:	strb	w2, [x19]
  454b58:	add	x1, x1, x0
  454b5c:	str	x1, [x19, #320]
  454b60:	add	x1, x0, #0x1
  454b64:	b	44f014 <nftw@plt+0x4c494>
  454b68:	ldp	x3, x2, [x19, #272]
  454b6c:	strb	wzr, [x19, #255]
  454b70:	mov	x0, x19
  454b74:	blr	x3
  454b78:	ldr	x0, [x19, #320]
  454b7c:	mov	w1, #0x3a                  	// #58
  454b80:	mov	x3, #0x1                   	// #1
  454b84:	strb	w1, [x19]
  454b88:	add	x0, x0, x3
  454b8c:	str	x0, [x19, #320]
  454b90:	add	x0, x3, #0x1
  454b94:	b	454390 <nftw@plt+0x51810>
  454b98:	cmp	x0, #0xff
  454b9c:	b.eq	4558bc <nftw@plt+0x52d3c>  // b.none
  454ba0:	add	x3, x0, #0x1
  454ba4:	str	x3, [x19, #256]
  454ba8:	mov	w1, #0x7b                  	// #123
  454bac:	strb	w1, [x19, x0]
  454bb0:	strb	w1, [x19, #264]
  454bb4:	cmp	x3, #0xff
  454bb8:	b.ne	455674 <nftw@plt+0x52af4>  // b.any
  454bbc:	ldp	x4, x2, [x19, #272]
  454bc0:	strb	wzr, [x19, #255]
  454bc4:	mov	x1, x3
  454bc8:	mov	x0, x19
  454bcc:	blr	x4
  454bd0:	ldr	x0, [x19, #320]
  454bd4:	mov	w2, #0x6564                	// #25956
  454bd8:	mov	w1, #0x66                  	// #102
  454bdc:	mov	x3, #0x3                   	// #3
  454be0:	add	x0, x0, #0x1
  454be4:	strh	w2, [x19]
  454be8:	strb	w1, [x19, #2]
  454bec:	str	x0, [x19, #320]
  454bf0:	add	x1, x3, #0x1
  454bf4:	str	x1, [x19, #256]
  454bf8:	mov	w0, #0x61                  	// #97
  454bfc:	strb	w0, [x19, x3]
  454c00:	strb	w0, [x19, #264]
  454c04:	cmp	x1, #0xff
  454c08:	b.ne	4556c0 <nftw@plt+0x52b40>  // b.any
  454c0c:	ldp	x3, x2, [x19, #272]
  454c10:	strb	wzr, [x19, #255]
  454c14:	mov	x0, x19
  454c18:	blr	x3
  454c1c:	ldr	x1, [x19, #320]
  454c20:	mov	w3, #0x6c75                	// #27765
  454c24:	mov	w2, #0x74                  	// #116
  454c28:	mov	x0, #0x3                   	// #3
  454c2c:	add	x1, x1, #0x1
  454c30:	strh	w3, [x19]
  454c34:	strb	w2, [x19, #2]
  454c38:	str	x1, [x19, #320]
  454c3c:	add	x1, x0, #0x1
  454c40:	str	x1, [x19, #256]
  454c44:	mov	w2, #0x20                  	// #32
  454c48:	strb	w2, [x19, x0]
  454c4c:	strb	w2, [x19, #264]
  454c50:	cmp	x1, #0xff
  454c54:	b.ne	455710 <nftw@plt+0x52b90>  // b.any
  454c58:	ldp	x3, x2, [x19, #272]
  454c5c:	strb	wzr, [x19, #255]
  454c60:	mov	x0, x19
  454c64:	blr	x3
  454c68:	ldr	x0, [x19, #320]
  454c6c:	mov	w2, #0x7261                	// #29281
  454c70:	mov	x1, #0x2                   	// #2
  454c74:	strh	w2, [x19]
  454c78:	add	x0, x0, #0x1
  454c7c:	str	x0, [x19, #320]
  454c80:	add	x0, x1, #0x1
  454c84:	mov	w2, #0x67                  	// #103
  454c88:	strb	w2, [x19, x1]
  454c8c:	add	x2, x0, #0x1
  454c90:	str	x2, [x19, #256]
  454c94:	mov	w2, #0x23                  	// #35
  454c98:	strb	w2, [x19, x0]
  454c9c:	adrp	x1, 473000 <_obstack_memory_used@@Base+0x11bb8>
  454ca0:	strb	w2, [x19, #264]
  454ca4:	add	x1, x1, #0x1f8
  454ca8:	add	x0, sp, #0x80
  454cac:	ldr	w2, [x23, #16]
  454cb0:	add	w2, w2, #0x1
  454cb4:	bl	4025b0 <sprintf@plt>
  454cb8:	add	x0, sp, #0x80
  454cbc:	bl	4024f0 <strlen@plt>
  454cc0:	cbz	x0, 455dd8 <nftw@plt+0x53258>
  454cc4:	add	x20, sp, #0x80
  454cc8:	stp	x25, x26, [sp, #64]
  454ccc:	add	x24, x20, x0
  454cd0:	mov	x25, #0x1                   	// #1
  454cd4:	ldr	x1, [x19, #256]
  454cd8:	b	454d34 <nftw@plt+0x521b4>
  454cdc:	ldp	x3, x2, [x19, #272]
  454ce0:	strb	wzr, [x19, #255]
  454ce4:	mov	x0, x19
  454ce8:	add	x20, x20, #0x1
  454cec:	blr	x3
  454cf0:	strb	w21, [x19]
  454cf4:	ldr	x0, [x19, #320]
  454cf8:	str	x25, [x19, #256]
  454cfc:	strb	w21, [x19, #264]
  454d00:	cmp	x20, x24
  454d04:	add	x0, x0, #0x1
  454d08:	str	x0, [x19, #320]
  454d0c:	b.eq	455a94 <nftw@plt+0x52f14>  // b.none
  454d10:	ldrb	w21, [x20]
  454d14:	mov	x0, #0x1                   	// #1
  454d18:	add	x1, x0, #0x1
  454d1c:	str	x1, [x19, #256]
  454d20:	strb	w21, [x19, x0]
  454d24:	add	x20, x20, #0x1
  454d28:	strb	w21, [x19, #264]
  454d2c:	cmp	x20, x24
  454d30:	b.eq	451424 <nftw@plt+0x4e8a4>  // b.none
  454d34:	ldrb	w21, [x20]
  454d38:	cmp	x1, #0xff
  454d3c:	b.eq	454cdc <nftw@plt+0x5215c>  // b.none
  454d40:	mov	x0, x1
  454d44:	b	454d18 <nftw@plt+0x52198>
  454d48:	ldp	x21, x22, [sp, #32]
  454d4c:	ldp	x23, x24, [sp, #48]
  454d50:	b	44d1a0 <nftw@plt+0x4a620>
  454d54:	mov	w0, #0x1                   	// #1
  454d58:	ldp	x21, x22, [sp, #32]
  454d5c:	ldp	x23, x24, [sp, #48]
  454d60:	str	w0, [x19, #304]
  454d64:	b	44d1a0 <nftw@plt+0x4a620>
  454d68:	ldr	x25, [x25, #16]
  454d6c:	ldr	w4, [x25]
  454d70:	cmp	w4, #0x47
  454d74:	b.eq	455a6c <nftw@plt+0x52eec>  // b.none
  454d78:	sub	w2, w4, #0x1c
  454d7c:	cmp	w2, #0x34
  454d80:	b.hi	44dae4 <nftw@plt+0x4af64>  // b.pmore
  454d84:	mov	x0, #0x1                   	// #1
  454d88:	mov	x1, #0x1f                  	// #31
  454d8c:	movk	x1, #0x1a, lsl #48
  454d90:	lsl	x2, x0, x2
  454d94:	tst	x2, x1
  454d98:	b.eq	44dae4 <nftw@plt+0x4af64>  // b.none
  454d9c:	cmp	w20, #0x4
  454da0:	b.eq	454ed8 <nftw@plt+0x52358>  // b.none
  454da4:	sub	w2, w20, #0x1
  454da8:	ubfiz	x8, x20, #5, #32
  454dac:	add	x7, x21, x8
  454db0:	add	x9, sp, #0x88
  454db4:	add	x12, x21, x2, lsl #5
  454db8:	lsl	x2, x2, #5
  454dbc:	add	x11, sp, #0x90
  454dc0:	add	x10, sp, #0x98
  454dc4:	add	w6, w20, #0x1
  454dc8:	ldp	x4, x5, [x12]
  454dcc:	stp	x4, x5, [x7]
  454dd0:	ldp	x4, x5, [x12, #16]
  454dd4:	stp	x4, x5, [x7, #16]
  454dd8:	str	x12, [x21, x8]
  454ddc:	str	x25, [x9, x2]
  454de0:	ldr	x25, [x25, #8]
  454de4:	str	wzr, [x11, x2]
  454de8:	str	x3, [x10, x2]
  454dec:	ldr	w4, [x25]
  454df0:	str	x7, [x19, #296]
  454df4:	sub	w2, w4, #0x1c
  454df8:	cmp	w2, #0x34
  454dfc:	b.hi	454e0c <nftw@plt+0x5228c>  // b.pmore
  454e00:	lsl	x2, x0, x2
  454e04:	tst	x2, x1
  454e08:	b.ne	454e14 <nftw@plt+0x52294>  // b.any
  454e0c:	mov	w20, w6
  454e10:	b	44dae4 <nftw@plt+0x4af64>
  454e14:	cmp	w6, #0x4
  454e18:	b.eq	454ed8 <nftw@plt+0x52358>  // b.none
  454e1c:	ubfiz	x6, x6, #5, #32
  454e20:	add	w20, w20, #0x2
  454e24:	add	x2, x21, x6
  454e28:	ldp	x4, x5, [x7]
  454e2c:	stp	x4, x5, [x2]
  454e30:	ldp	x4, x5, [x7, #16]
  454e34:	stp	x4, x5, [x2, #16]
  454e38:	str	x7, [x21, x6]
  454e3c:	str	x25, [x9, x8]
  454e40:	ldr	x25, [x25, #8]
  454e44:	str	wzr, [x11, x8]
  454e48:	str	x3, [x10, x8]
  454e4c:	ldr	w4, [x25]
  454e50:	str	x2, [x19, #296]
  454e54:	sub	w2, w4, #0x1c
  454e58:	cmp	w2, #0x34
  454e5c:	b.hi	44dae4 <nftw@plt+0x4af64>  // b.pmore
  454e60:	lsl	x0, x0, x2
  454e64:	tst	x0, x1
  454e68:	b.eq	44dae4 <nftw@plt+0x4af64>  // b.none
  454e6c:	cmp	w20, #0x4
  454e70:	b.eq	454ed8 <nftw@plt+0x52358>  // b.none
  454e74:	ldp	x0, x1, [sp, #192]
  454e78:	str	x25, [sp, #200]
  454e7c:	ldr	x25, [x25, #8]
  454e80:	stp	x0, x1, [sp, #224]
  454e84:	add	x1, x21, #0x40
  454e88:	ldp	x6, x7, [sp, #208]
  454e8c:	add	x0, x21, #0x60
  454e90:	ldr	w4, [x25]
  454e94:	str	wzr, [sp, #208]
  454e98:	stp	x3, x1, [sp, #216]
  454e9c:	sub	w2, w4, #0x1c
  454ea0:	cmp	w2, #0x34
  454ea4:	stp	x6, x7, [sp, #240]
  454ea8:	str	x0, [x19, #296]
  454eac:	b.hi	454ec8 <nftw@plt+0x52348>  // b.pmore
  454eb0:	mov	x0, #0x1                   	// #1
  454eb4:	mov	x1, #0x1f                  	// #31
  454eb8:	movk	x1, #0x1a, lsl #48
  454ebc:	lsl	x0, x0, x2
  454ec0:	tst	x0, x1
  454ec4:	b.ne	454ed8 <nftw@plt+0x52358>  // b.any
  454ec8:	mov	w20, #0x4                   	// #4
  454ecc:	b	44dae4 <nftw@plt+0x4af64>
  454ed0:	add	x21, x21, #0x40
  454ed4:	str	x21, [x19, #296]
  454ed8:	mov	w0, #0x1                   	// #1
  454edc:	ldp	x21, x22, [sp, #32]
  454ee0:	ldp	x23, x24, [sp, #48]
  454ee4:	ldp	x25, x26, [sp, #64]
  454ee8:	str	w0, [x19, #304]
  454eec:	b	44d1a0 <nftw@plt+0x4a620>
  454ef0:	mov	w1, #0x1                   	// #1
  454ef4:	str	w1, [x19, #304]
  454ef8:	b	453e9c <nftw@plt+0x5131c>
  454efc:	ldr	x4, [x19, #288]
  454f00:	add	x0, sp, #0x80
  454f04:	str	x0, [x19, #296]
  454f08:	mov	w1, w20
  454f0c:	mov	x0, x19
  454f10:	stp	x3, x24, [sp, #128]
  454f14:	str	wzr, [sp, #144]
  454f18:	str	x4, [sp, #152]
  454f1c:	bl	455fb8 <nftw@plt+0x53438>
  454f20:	ldr	w0, [sp, #144]
  454f24:	ldr	x1, [sp, #128]
  454f28:	str	x1, [x19, #296]
  454f2c:	cbnz	w0, 455aec <nftw@plt+0x52f6c>
  454f30:	ldr	x1, [x19, #256]
  454f34:	cmp	x1, #0xff
  454f38:	b.ne	454f60 <nftw@plt+0x523e0>  // b.any
  454f3c:	ldp	x3, x2, [x19, #272]
  454f40:	strb	wzr, [x19, #255]
  454f44:	mov	x0, x19
  454f48:	blr	x3
  454f4c:	str	xzr, [x19, #256]
  454f50:	ldr	x0, [x19, #320]
  454f54:	mov	x1, #0x0                   	// #0
  454f58:	add	x0, x0, #0x1
  454f5c:	str	x0, [x19, #320]
  454f60:	add	x0, x1, #0x1
  454f64:	str	x0, [x19, #256]
  454f68:	mov	w0, #0x20                  	// #32
  454f6c:	strb	w0, [x19, x1]
  454f70:	strb	w0, [x19, #264]
  454f74:	ldr	x3, [x19, #296]
  454f78:	b	44dc1c <nftw@plt+0x4b09c>
  454f7c:	ldr	w4, [x19, #344]
  454f80:	ldr	x5, [x19, #336]
  454f84:	cmp	w4, #0x0
  454f88:	b.le	455cc0 <nftw@plt+0x53140>
  454f8c:	sub	w2, w4, #0x1
  454f90:	add	x0, x5, #0x10
  454f94:	mov	x1, x5
  454f98:	add	x2, x0, w2, uxtw #4
  454f9c:	b	454fac <nftw@plt+0x5242c>
  454fa0:	add	x1, x1, #0x10
  454fa4:	cmp	x2, x1
  454fa8:	b.eq	455cc0 <nftw@plt+0x53140>  // b.none
  454fac:	ldr	x0, [x1]
  454fb0:	cmp	x3, x0
  454fb4:	b.ne	454fa0 <nftw@plt+0x52420>  // b.any
  454fb8:	ldr	x4, [x19, #328]
  454fbc:	mov	x0, x4
  454fc0:	cbnz	x4, 454fdc <nftw@plt+0x5245c>
  454fc4:	b	455a7c <nftw@plt+0x52efc>
  454fc8:	cmp	x2, x24
  454fcc:	ccmp	x4, x0, #0x4, eq  // eq = none
  454fd0:	b.ne	454fe8 <nftw@plt+0x52468>  // b.any
  454fd4:	ldr	x0, [x0, #8]
  454fd8:	cbz	x0, 455a7c <nftw@plt+0x52efc>
  454fdc:	ldr	x2, [x0]
  454fe0:	cmp	x2, x3
  454fe4:	b.ne	454fc8 <nftw@plt+0x52448>  // b.any
  454fe8:	ldr	x4, [x19, #288]
  454fec:	cbz	x4, 455f58 <nftw@plt+0x533d8>
  454ff0:	mov	w21, #0x0                   	// #0
  454ff4:	ldr	x2, [x3, #8]
  454ff8:	ldr	x0, [x4, #8]
  454ffc:	mov	w1, w2
  455000:	ldr	x0, [x0, #16]
  455004:	tbnz	w2, #31, 455608 <nftw@plt+0x52a88>
  455008:	cbnz	x0, 455020 <nftw@plt+0x524a0>
  45500c:	b	45502c <nftw@plt+0x524ac>
  455010:	cbz	w1, 455604 <nftw@plt+0x52a84>
  455014:	ldr	x0, [x0, #16]
  455018:	sub	w1, w1, #0x1
  45501c:	cbz	x0, 45502c <nftw@plt+0x524ac>
  455020:	ldr	w2, [x0]
  455024:	cmp	w2, #0x2f
  455028:	b.eq	455010 <nftw@plt+0x52490>  // b.none
  45502c:	cbz	w21, 455f58 <nftw@plt+0x533d8>
  455030:	ldp	x21, x22, [sp, #32]
  455034:	ldp	x25, x26, [sp, #64]
  455038:	str	x23, [x19, #288]
  45503c:	ldp	x23, x24, [sp, #48]
  455040:	b	44d1d4 <nftw@plt+0x4a654>
  455044:	ldp	x3, x2, [x19, #272]
  455048:	strb	wzr, [x19, #255]
  45504c:	mov	x1, x0
  455050:	mov	x0, x19
  455054:	blr	x3
  455058:	ldr	x1, [x19, #320]
  45505c:	mov	w3, #0x7561                	// #30049
  455060:	mov	w2, #0x74                  	// #116
  455064:	mov	x0, #0x3                   	// #3
  455068:	add	x1, x1, #0x1
  45506c:	strh	w3, [x19]
  455070:	strb	w2, [x19, #2]
  455074:	str	x1, [x19, #320]
  455078:	add	x1, x0, #0x1
  45507c:	str	x1, [x19, #256]
  455080:	mov	w2, #0x6f                  	// #111
  455084:	strb	w2, [x19, x0]
  455088:	strb	w2, [x19, #264]
  45508c:	cmp	x1, #0xff
  455090:	b.ne	450608 <nftw@plt+0x4da88>  // b.any
  455094:	ldp	x3, x2, [x19, #272]
  455098:	strb	wzr, [x19, #255]
  45509c:	mov	x0, x19
  4550a0:	blr	x3
  4550a4:	ldr	x2, [x19, #320]
  4550a8:	mov	x0, #0x1                   	// #1
  4550ac:	mov	x1, #0x0                   	// #0
  4550b0:	add	x2, x2, x0
  4550b4:	str	x2, [x19, #320]
  4550b8:	b	45060c <nftw@plt+0x4da8c>
  4550bc:	add	x0, x0, #0x3
  4550c0:	str	x0, [x19, #256]
  4550c4:	mov	w1, #0x69                  	// #105
  4550c8:	strb	w1, [x19, x3]
  4550cc:	strb	w1, [x19, #264]
  4550d0:	cmp	x0, #0xff
  4550d4:	b.ne	44d958 <nftw@plt+0x4add8>  // b.any
  4550d8:	ldp	x3, x2, [x19, #272]
  4550dc:	strb	wzr, [x19, #255]
  4550e0:	mov	x1, x0
  4550e4:	mov	x0, x19
  4550e8:	blr	x3
  4550ec:	ldr	x2, [x19, #320]
  4550f0:	mov	x1, #0x1                   	// #1
  4550f4:	mov	x0, #0x0                   	// #0
  4550f8:	add	x2, x2, x1
  4550fc:	str	x2, [x19, #320]
  455100:	b	44d95c <nftw@plt+0x4addc>
  455104:	add	x3, x2, #0x10
  455108:	mov	w1, w22
  45510c:	ldr	x2, [x2, #8]
  455110:	mov	x0, x19
  455114:	bl	456308 <nftw@plt+0x53788>
  455118:	cbnz	w0, 455c34 <nftw@plt+0x530b4>
  45511c:	stp	x25, x26, [sp, #64]
  455120:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x1ebb8>
  455124:	add	x1, x1, #0xe90
  455128:	ldp	x25, x3, [x24, #8]
  45512c:	ldr	x0, [x25, #8]
  455130:	ldp	x21, x2, [x3, #8]
  455134:	ldr	x0, [x0]
  455138:	ldp	x23, x20, [x2, #8]
  45513c:	bl	402890 <strcmp@plt>
  455140:	cbnz	w0, 455b90 <nftw@plt+0x53010>
  455144:	mov	x2, x21
  455148:	mov	w1, w22
  45514c:	mov	x0, x19
  455150:	bl	4561b8 <nftw@plt+0x53638>
  455154:	mov	x2, x25
  455158:	mov	w1, w22
  45515c:	mov	x0, x19
  455160:	bl	456050 <nftw@plt+0x534d0>
  455164:	mov	x2, x23
  455168:	mov	w1, w22
  45516c:	mov	x0, x19
  455170:	bl	4561b8 <nftw@plt+0x53638>
  455174:	mov	x0, x19
  455178:	mov	x2, #0x3                   	// #3
  45517c:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x1ebb8>
  455180:	add	x1, x1, #0xe98
  455184:	bl	44c480 <nftw@plt+0x49900>
  455188:	mov	w1, w22
  45518c:	mov	x2, x20
  455190:	mov	x0, x19
  455194:	bl	4561b8 <nftw@plt+0x53638>
  455198:	ldp	x21, x22, [sp, #32]
  45519c:	ldp	x23, x24, [sp, #48]
  4551a0:	ldp	x25, x26, [sp, #64]
  4551a4:	b	44d1a0 <nftw@plt+0x4a620>
  4551a8:	ldp	x3, x2, [x19, #272]
  4551ac:	strb	wzr, [x19, #255]
  4551b0:	mov	x1, x0
  4551b4:	mov	x0, x19
  4551b8:	blr	x3
  4551bc:	ldr	x0, [x19, #320]
  4551c0:	mov	w2, #0x6874                	// #26740
  4551c4:	mov	x1, #0x2                   	// #2
  4551c8:	strh	w2, [x19]
  4551cc:	add	x0, x0, #0x1
  4551d0:	str	x0, [x19, #320]
  4551d4:	b	44d94c <nftw@plt+0x4adcc>
  4551d8:	ldrb	w0, [x0]
  4551dc:	sub	w1, w0, #0x63
  4551e0:	sub	w0, w0, #0x72
  4551e4:	and	w1, w1, #0xff
  4551e8:	and	w0, w0, #0xff
  4551ec:	cmp	w1, #0x1
  4551f0:	ccmp	w0, #0x1, #0x0, hi  // hi = pmore
  4551f4:	b.hi	44fa1c <nftw@plt+0x4ce9c>  // b.pmore
  4551f8:	mov	w1, w22
  4551fc:	mov	x0, x19
  455200:	bl	456050 <nftw@plt+0x534d0>
  455204:	ldr	x1, [x19, #256]
  455208:	cmp	x1, #0xff
  45520c:	b.ne	455234 <nftw@plt+0x526b4>  // b.any
  455210:	ldp	x3, x2, [x19, #272]
  455214:	strb	wzr, [x19, #255]
  455218:	mov	x0, x19
  45521c:	blr	x3
  455220:	str	xzr, [x19, #256]
  455224:	ldr	x0, [x19, #320]
  455228:	mov	x1, #0x0                   	// #0
  45522c:	add	x0, x0, #0x1
  455230:	str	x0, [x19, #320]
  455234:	add	x0, x1, #0x1
  455238:	str	x0, [x19, #256]
  45523c:	mov	w0, #0x3c                  	// #60
  455240:	strb	w0, [x19, x1]
  455244:	strb	w0, [x19, #264]
  455248:	mov	w1, w22
  45524c:	mov	x0, x19
  455250:	ldr	x2, [x24, #16]
  455254:	ldr	x2, [x2, #8]
  455258:	bl	455fb8 <nftw@plt+0x53438>
  45525c:	ldr	x1, [x19, #256]
  455260:	cmp	x1, #0xff
  455264:	b.eq	45575c <nftw@plt+0x52bdc>  // b.none
  455268:	add	x0, x1, #0x1
  45526c:	str	x0, [x19, #256]
  455270:	mov	w2, #0x3e                  	// #62
  455274:	strb	w2, [x19, x1]
  455278:	strb	w2, [x19, #264]
  45527c:	cmp	x0, #0xff
  455280:	b.ne	455784 <nftw@plt+0x52c04>  // b.any
  455284:	ldp	x3, x2, [x19, #272]
  455288:	strb	wzr, [x19, #255]
  45528c:	mov	x1, x0
  455290:	mov	x0, x19
  455294:	blr	x3
  455298:	ldr	x1, [x19, #320]
  45529c:	mov	x2, #0x1                   	// #1
  4552a0:	mov	x0, #0x0                   	// #0
  4552a4:	add	x1, x1, x2
  4552a8:	str	x1, [x19, #320]
  4552ac:	str	x2, [x19, #256]
  4552b0:	mov	w2, #0x28                  	// #40
  4552b4:	strb	w2, [x19, x0]
  4552b8:	mov	w1, w22
  4552bc:	strb	w2, [x19, #264]
  4552c0:	mov	x0, x19
  4552c4:	ldr	x2, [x24, #16]
  4552c8:	ldr	x2, [x2, #16]
  4552cc:	bl	455fb8 <nftw@plt+0x53438>
  4552d0:	ldr	x1, [x19, #256]
  4552d4:	cmp	x1, #0xff
  4552d8:	b.ne	455300 <nftw@plt+0x52780>  // b.any
  4552dc:	ldp	x3, x2, [x19, #272]
  4552e0:	strb	wzr, [x19, #255]
  4552e4:	mov	x0, x19
  4552e8:	blr	x3
  4552ec:	str	xzr, [x19, #256]
  4552f0:	ldr	x0, [x19, #320]
  4552f4:	mov	x1, #0x0                   	// #0
  4552f8:	add	x0, x0, #0x1
  4552fc:	str	x0, [x19, #320]
  455300:	add	x0, x1, #0x1
  455304:	str	x0, [x19, #256]
  455308:	mov	w0, #0x29                  	// #41
  45530c:	strb	w0, [x19, x1]
  455310:	strb	w0, [x19, #264]
  455314:	ldp	x21, x22, [sp, #32]
  455318:	ldp	x23, x24, [sp, #48]
  45531c:	b	44d1a0 <nftw@plt+0x4a620>
  455320:	add	x1, x0, #0x2
  455324:	str	x1, [x19, #256]
  455328:	mov	w2, #0x53                  	// #83
  45532c:	strb	w2, [x19, x3]
  455330:	strb	w2, [x19, #264]
  455334:	cmp	x1, #0xff
  455338:	b.ne	455380 <nftw@plt+0x52800>  // b.any
  45533c:	ldp	x3, x2, [x19, #272]
  455340:	strb	wzr, [x19, #255]
  455344:	mov	x0, x19
  455348:	blr	x3
  45534c:	ldr	x1, [x19, #320]
  455350:	mov	w2, #0x61                  	// #97
  455354:	mov	x0, #0x1                   	// #1
  455358:	strb	w2, [x19]
  45535c:	add	x1, x1, x0
  455360:	str	x1, [x19, #320]
  455364:	b	45444c <nftw@plt+0x518cc>
  455368:	ldr	x0, [x19, #256]
  45536c:	cmp	x0, x21
  455370:	b.eq	451ab0 <nftw@plt+0x4ef30>  // b.none
  455374:	ldp	x21, x22, [sp, #32]
  455378:	ldp	x23, x24, [sp, #48]
  45537c:	b	44d1a0 <nftw@plt+0x4a620>
  455380:	add	x0, x0, #0x3
  455384:	str	x0, [x19, #256]
  455388:	mov	w2, #0x61                  	// #97
  45538c:	strb	w2, [x19, x1]
  455390:	strb	w2, [x19, #264]
  455394:	cmp	x0, #0xff
  455398:	b.ne	455590 <nftw@plt+0x52a10>  // b.any
  45539c:	ldp	x3, x2, [x19, #272]
  4553a0:	strb	wzr, [x19, #255]
  4553a4:	mov	x1, x0
  4553a8:	mov	x0, x19
  4553ac:	blr	x3
  4553b0:	ldr	x0, [x19, #320]
  4553b4:	mov	w2, #0x74                  	// #116
  4553b8:	mov	x1, #0x1                   	// #1
  4553bc:	strb	w2, [x19]
  4553c0:	add	x0, x0, x1
  4553c4:	str	x0, [x19, #320]
  4553c8:	b	454458 <nftw@plt+0x518d8>
  4553cc:	ldp	x21, x22, [sp, #32]
  4553d0:	ldp	x23, x24, [sp, #48]
  4553d4:	b	44d1a0 <nftw@plt+0x4a620>
  4553d8:	ldp	x21, x22, [sp, #32]
  4553dc:	ldp	x23, x24, [sp, #48]
  4553e0:	b	44d1a0 <nftw@plt+0x4a620>
  4553e4:	ldp	x21, x22, [sp, #32]
  4553e8:	ldp	x23, x24, [sp, #48]
  4553ec:	b	44d1a0 <nftw@plt+0x4a620>
  4553f0:	ldr	w0, [x23, #4]
  4553f4:	mov	x1, x2
  4553f8:	cmp	w0, #0x1
  4553fc:	b.le	44d65c <nftw@plt+0x4aadc>
  455400:	b	4544ac <nftw@plt+0x5192c>
  455404:	ldp	x21, x22, [sp, #32]
  455408:	ldp	x23, x24, [sp, #48]
  45540c:	b	44d1a0 <nftw@plt+0x4a620>
  455410:	sub	w3, w0, #0x61
  455414:	and	w3, w3, #0xff
  455418:	cmp	w3, #0x5
  45541c:	b.hi	455d7c <nftw@plt+0x531fc>  // b.pmore
  455420:	sub	w0, w0, #0x57
  455424:	b	451d00 <nftw@plt+0x4f180>
  455428:	ldp	x21, x22, [sp, #32]
  45542c:	ldp	x23, x24, [sp, #48]
  455430:	b	44d1a0 <nftw@plt+0x4a620>
  455434:	ldr	w1, [x19, #316]
  455438:	tbnz	w1, #31, 451b3c <nftw@plt+0x4efbc>
  45543c:	mov	x0, x20
  455440:	bl	44c550 <nftw@plt+0x499d0>
  455444:	mov	x20, x0
  455448:	cbnz	x0, 451b3c <nftw@plt+0x4efbc>
  45544c:	b	44d1cc <nftw@plt+0x4a64c>
  455450:	mov	w2, w3
  455454:	adrp	x1, 473000 <_obstack_memory_used@@Base+0x11bb8>
  455458:	add	x1, x1, #0x1f8
  45545c:	add	x0, sp, #0x80
  455460:	bl	4025b0 <sprintf@plt>
  455464:	add	x0, sp, #0x80
  455468:	bl	4024f0 <strlen@plt>
  45546c:	cbz	x0, 455f4c <nftw@plt+0x533cc>
  455470:	add	x20, sp, #0x80
  455474:	mov	x23, #0x1                   	// #1
  455478:	add	x22, x20, x0
  45547c:	ldr	x1, [x19, #256]
  455480:	b	4554dc <nftw@plt+0x5295c>
  455484:	ldp	x3, x2, [x19, #272]
  455488:	strb	wzr, [x19, #255]
  45548c:	mov	x0, x19
  455490:	add	x20, x20, #0x1
  455494:	blr	x3
  455498:	strb	w21, [x19]
  45549c:	ldr	x0, [x19, #320]
  4554a0:	str	x23, [x19, #256]
  4554a4:	strb	w21, [x19, #264]
  4554a8:	cmp	x20, x22
  4554ac:	add	x0, x0, #0x1
  4554b0:	str	x0, [x19, #320]
  4554b4:	b.eq	455c80 <nftw@plt+0x53100>  // b.none
  4554b8:	ldrb	w21, [x20]
  4554bc:	mov	x0, #0x1                   	// #1
  4554c0:	add	x1, x0, #0x1
  4554c4:	str	x1, [x19, #256]
  4554c8:	strb	w21, [x19, x0]
  4554cc:	add	x20, x20, #0x1
  4554d0:	strb	w21, [x19, #264]
  4554d4:	cmp	x22, x20
  4554d8:	b.eq	455a60 <nftw@plt+0x52ee0>  // b.none
  4554dc:	ldrb	w21, [x20]
  4554e0:	cmp	x1, #0xff
  4554e4:	b.eq	455484 <nftw@plt+0x52904>  // b.none
  4554e8:	mov	x0, x1
  4554ec:	b	4554c0 <nftw@plt+0x52940>
  4554f0:	cmp	w1, #0x63
  4554f4:	b.eq	455b6c <nftw@plt+0x52fec>  // b.none
  4554f8:	mov	w1, w22
  4554fc:	mov	x0, x19
  455500:	bl	456050 <nftw@plt+0x534d0>
  455504:	ldr	x2, [x24, #16]
  455508:	mov	w1, w22
  45550c:	mov	x0, x19
  455510:	ldr	x2, [x2, #16]
  455514:	bl	4561b8 <nftw@plt+0x53638>
  455518:	b	44fb50 <nftw@plt+0x4cfd0>
  45551c:	ldr	x0, [x20, #8]
  455520:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x1ebb8>
  455524:	mov	x2, #0x6                   	// #6
  455528:	add	x1, x1, #0xd10
  45552c:	bl	4026a0 <strncmp@plt>
  455530:	cbnz	w0, 450348 <nftw@plt+0x4d7c8>
  455534:	ldr	x2, [x24, #16]
  455538:	mov	w1, w22
  45553c:	mov	x0, x19
  455540:	bl	455fb8 <nftw@plt+0x53438>
  455544:	mov	x0, x19
  455548:	adrp	x1, 473000 <_obstack_memory_used@@Base+0x11bb8>
  45554c:	mov	x2, #0x2                   	// #2
  455550:	add	x1, x1, #0xe70
  455554:	bl	44c480 <nftw@plt+0x49900>
  455558:	b	450504 <nftw@plt+0x4d984>
  45555c:	ldp	x3, x2, [x19, #272]
  455560:	strb	wzr, [x19, #255]
  455564:	mov	x1, x0
  455568:	mov	x0, x19
  45556c:	blr	x3
  455570:	ldr	x1, [x19, #320]
  455574:	mov	w3, #0x535f                	// #21343
  455578:	mov	w2, #0x61                  	// #97
  45557c:	mov	x0, #0x3                   	// #3
  455580:	add	x1, x1, #0x1
  455584:	strh	w3, [x19]
  455588:	strb	w2, [x19, #2]
  45558c:	str	x1, [x19, #320]
  455590:	add	x1, x0, #0x1
  455594:	str	x1, [x19, #256]
  455598:	mov	w2, #0x74                  	// #116
  45559c:	strb	w2, [x19, x0]
  4555a0:	strb	w2, [x19, #264]
  4555a4:	cmp	x1, #0xff
  4555a8:	b.ne	454458 <nftw@plt+0x518d8>  // b.any
  4555ac:	ldp	x3, x2, [x19, #272]
  4555b0:	strb	wzr, [x19, #255]
  4555b4:	mov	x0, x19
  4555b8:	blr	x3
  4555bc:	ldr	x2, [x19, #320]
  4555c0:	mov	x0, #0x1                   	// #1
  4555c4:	mov	x1, #0x0                   	// #0
  4555c8:	add	x2, x2, x0
  4555cc:	str	x2, [x19, #320]
  4555d0:	b	45445c <nftw@plt+0x518dc>
  4555d4:	ldp	x21, x22, [sp, #32]
  4555d8:	ldp	x23, x24, [sp, #48]
  4555dc:	b	44d1a0 <nftw@plt+0x4a620>
  4555e0:	ldp	x21, x22, [sp, #32]
  4555e4:	ldp	x23, x24, [sp, #48]
  4555e8:	b	44d1a0 <nftw@plt+0x4a620>
  4555ec:	ldp	x21, x22, [sp, #32]
  4555f0:	ldp	x23, x24, [sp, #48]
  4555f4:	b	44d1a0 <nftw@plt+0x4a620>
  4555f8:	ldp	x21, x22, [sp, #32]
  4555fc:	ldp	x23, x24, [sp, #48]
  455600:	b	44d1a0 <nftw@plt+0x4a620>
  455604:	ldr	x0, [x0, #8]
  455608:	cbz	x0, 45502c <nftw@plt+0x524ac>
  45560c:	ldr	w1, [x0]
  455610:	cmp	w1, #0x2f
  455614:	b.ne	44d544 <nftw@plt+0x4a9c4>  // b.any
  455618:	ldr	w1, [x19, #316]
  45561c:	tbnz	w1, #31, 455e08 <nftw@plt+0x53288>
  455620:	bl	44c550 <nftw@plt+0x499d0>
  455624:	cbz	x0, 45502c <nftw@plt+0x524ac>
  455628:	ldr	w1, [x0]
  45562c:	b	44d544 <nftw@plt+0x4a9c4>
  455630:	ldr	x2, [x24, #8]
  455634:	mov	w1, w22
  455638:	mov	x0, x19
  45563c:	bl	4561b8 <nftw@plt+0x53638>
  455640:	mov	x0, x19
  455644:	adrp	x1, 47d000 <_obstack_memory_used@@Base+0x1bbb8>
  455648:	mov	x2, #0x3                   	// #3
  45564c:	add	x1, x1, #0x140
  455650:	bl	44c480 <nftw@plt+0x49900>
  455654:	ldp	x21, x22, [sp, #32]
  455658:	ldp	x23, x24, [sp, #48]
  45565c:	ldp	x25, x26, [sp, #64]
  455660:	b	44d1a0 <nftw@plt+0x4a620>
  455664:	ldp	x21, x22, [sp, #32]
  455668:	ldp	x23, x24, [sp, #48]
  45566c:	ldp	x25, x26, [sp, #64]
  455670:	b	44d1a0 <nftw@plt+0x4a620>
  455674:	add	x1, x0, #0x2
  455678:	str	x1, [x19, #256]
  45567c:	mov	w2, #0x64                  	// #100
  455680:	strb	w2, [x19, x3]
  455684:	strb	w2, [x19, #264]
  455688:	cmp	x1, #0xff
  45568c:	b.ne	4557d8 <nftw@plt+0x52c58>  // b.any
  455690:	ldp	x3, x2, [x19, #272]
  455694:	strb	wzr, [x19, #255]
  455698:	mov	x0, x19
  45569c:	blr	x3
  4556a0:	ldr	x0, [x19, #320]
  4556a4:	mov	w3, #0x6665                	// #26213
  4556a8:	mov	w2, #0x61                  	// #97
  4556ac:	mov	x1, #0x3                   	// #3
  4556b0:	add	x0, x0, #0x1
  4556b4:	strh	w3, [x19]
  4556b8:	strb	w2, [x19, #2]
  4556bc:	str	x0, [x19, #320]
  4556c0:	add	x0, x1, #0x1
  4556c4:	str	x0, [x19, #256]
  4556c8:	mov	w2, #0x75                  	// #117
  4556cc:	strb	w2, [x19, x1]
  4556d0:	strb	w2, [x19, #264]
  4556d4:	cmp	x0, #0xff
  4556d8:	b.ne	455828 <nftw@plt+0x52ca8>  // b.any
  4556dc:	ldp	x3, x2, [x19, #272]
  4556e0:	strb	wzr, [x19, #255]
  4556e4:	mov	x1, x0
  4556e8:	mov	x0, x19
  4556ec:	blr	x3
  4556f0:	ldr	x0, [x19, #320]
  4556f4:	mov	w3, #0x746c                	// #29804
  4556f8:	mov	w2, #0x20                  	// #32
  4556fc:	mov	x1, #0x3                   	// #3
  455700:	add	x0, x0, #0x1
  455704:	strh	w3, [x19]
  455708:	strb	w2, [x19, #2]
  45570c:	str	x0, [x19, #320]
  455710:	add	x0, x1, #0x1
  455714:	str	x0, [x19, #256]
  455718:	mov	w2, #0x61                  	// #97
  45571c:	strb	w2, [x19, x1]
  455720:	strb	w2, [x19, #264]
  455724:	cmp	x0, #0xff
  455728:	b.ne	455874 <nftw@plt+0x52cf4>  // b.any
  45572c:	ldp	x3, x2, [x19, #272]
  455730:	strb	wzr, [x19, #255]
  455734:	mov	x1, x0
  455738:	mov	x0, x19
  45573c:	blr	x3
  455740:	ldr	x0, [x19, #320]
  455744:	mov	w2, #0x72                  	// #114
  455748:	mov	x1, #0x1                   	// #1
  45574c:	strb	w2, [x19]
  455750:	add	x0, x0, x1
  455754:	str	x0, [x19, #320]
  455758:	b	454c80 <nftw@plt+0x52100>
  45575c:	ldp	x3, x2, [x19, #272]
  455760:	strb	wzr, [x19, #255]
  455764:	mov	x0, x19
  455768:	blr	x3
  45576c:	ldr	x1, [x19, #320]
  455770:	mov	w2, #0x3e                  	// #62
  455774:	mov	x0, #0x1                   	// #1
  455778:	strb	w2, [x19]
  45577c:	add	x1, x1, x0
  455780:	str	x1, [x19, #320]
  455784:	add	x2, x0, #0x1
  455788:	b	4552ac <nftw@plt+0x5272c>
  45578c:	add	x3, x1, #0x1
  455790:	str	x3, [x19, #256]
  455794:	mov	w0, #0x7d                  	// #125
  455798:	strb	w0, [x19, x1]
  45579c:	strb	w0, [x19, #264]
  4557a0:	cmp	x3, #0xff
  4557a4:	b.ne	455aa4 <nftw@plt+0x52f24>  // b.any
  4557a8:	ldp	x4, x2, [x19, #272]
  4557ac:	strb	wzr, [x19, #255]
  4557b0:	mov	x1, x3
  4557b4:	mov	x0, x19
  4557b8:	blr	x4
  4557bc:	ldr	x1, [x19, #320]
  4557c0:	mov	w2, #0x3a                  	// #58
  4557c4:	mov	x0, #0x1                   	// #1
  4557c8:	strb	w2, [x19]
  4557cc:	add	x1, x1, x0
  4557d0:	str	x1, [x19, #320]
  4557d4:	b	451458 <nftw@plt+0x4e8d8>
  4557d8:	add	x0, x0, #0x3
  4557dc:	str	x0, [x19, #256]
  4557e0:	mov	w2, #0x65                  	// #101
  4557e4:	strb	w2, [x19, x1]
  4557e8:	strb	w2, [x19, #264]
  4557ec:	cmp	x0, #0xff
  4557f0:	b.ne	4558f0 <nftw@plt+0x52d70>  // b.any
  4557f4:	ldp	x3, x2, [x19, #272]
  4557f8:	strb	wzr, [x19, #255]
  4557fc:	mov	x1, x0
  455800:	mov	x0, x19
  455804:	blr	x3
  455808:	ldr	x1, [x19, #320]
  45580c:	mov	w3, #0x6166                	// #24934
  455810:	mov	w2, #0x75                  	// #117
  455814:	mov	x0, #0x3                   	// #3
  455818:	add	x1, x1, #0x1
  45581c:	strh	w3, [x19]
  455820:	strb	w2, [x19, #2]
  455824:	str	x1, [x19, #320]
  455828:	add	x1, x0, #0x1
  45582c:	str	x1, [x19, #256]
  455830:	mov	w2, #0x6c                  	// #108
  455834:	strb	w2, [x19, x0]
  455838:	strb	w2, [x19, #264]
  45583c:	cmp	x1, #0xff
  455840:	b.ne	455940 <nftw@plt+0x52dc0>  // b.any
  455844:	ldp	x3, x2, [x19, #272]
  455848:	strb	wzr, [x19, #255]
  45584c:	mov	x0, x19
  455850:	blr	x3
  455854:	ldr	x1, [x19, #320]
  455858:	mov	w3, #0x2074                	// #8308
  45585c:	mov	w2, #0x61                  	// #97
  455860:	mov	x0, #0x3                   	// #3
  455864:	add	x1, x1, #0x1
  455868:	strh	w3, [x19]
  45586c:	strb	w2, [x19, #2]
  455870:	str	x1, [x19, #320]
  455874:	add	x1, x0, #0x1
  455878:	str	x1, [x19, #256]
  45587c:	mov	w2, #0x72                  	// #114
  455880:	strb	w2, [x19, x0]
  455884:	strb	w2, [x19, #264]
  455888:	cmp	x1, #0xff
  45588c:	b.ne	455990 <nftw@plt+0x52e10>  // b.any
  455890:	ldp	x3, x2, [x19, #272]
  455894:	strb	wzr, [x19, #255]
  455898:	mov	x0, x19
  45589c:	blr	x3
  4558a0:	ldr	x1, [x19, #320]
  4558a4:	mov	w2, #0x67                  	// #103
  4558a8:	mov	x0, #0x1                   	// #1
  4558ac:	strb	w2, [x19]
  4558b0:	add	x1, x1, x0
  4558b4:	str	x1, [x19, #320]
  4558b8:	b	454c8c <nftw@plt+0x5210c>
  4558bc:	ldp	x3, x2, [x19, #272]
  4558c0:	strb	wzr, [x19, #255]
  4558c4:	mov	x1, x0
  4558c8:	mov	x0, x19
  4558cc:	blr	x3
  4558d0:	ldr	x1, [x19, #320]
  4558d4:	mov	w3, #0x647b                	// #25723
  4558d8:	mov	w2, #0x65                  	// #101
  4558dc:	mov	x0, #0x3                   	// #3
  4558e0:	add	x1, x1, #0x1
  4558e4:	strh	w3, [x19]
  4558e8:	strb	w2, [x19, #2]
  4558ec:	str	x1, [x19, #320]
  4558f0:	add	x3, x0, #0x1
  4558f4:	str	x3, [x19, #256]
  4558f8:	mov	w1, #0x66                  	// #102
  4558fc:	strb	w1, [x19, x0]
  455900:	strb	w1, [x19, #264]
  455904:	cmp	x3, #0xff
  455908:	b.ne	454bf0 <nftw@plt+0x52070>  // b.any
  45590c:	ldp	x4, x2, [x19, #272]
  455910:	strb	wzr, [x19, #255]
  455914:	mov	x1, x3
  455918:	mov	x0, x19
  45591c:	blr	x4
  455920:	ldr	x0, [x19, #320]
  455924:	mov	w3, #0x7561                	// #30049
  455928:	mov	w2, #0x6c                  	// #108
  45592c:	mov	x1, #0x3                   	// #3
  455930:	add	x0, x0, #0x1
  455934:	strh	w3, [x19]
  455938:	strb	w2, [x19, #2]
  45593c:	str	x0, [x19, #320]
  455940:	add	x0, x1, #0x1
  455944:	str	x0, [x19, #256]
  455948:	mov	w2, #0x74                  	// #116
  45594c:	strb	w2, [x19, x1]
  455950:	strb	w2, [x19, #264]
  455954:	cmp	x0, #0xff
  455958:	b.ne	454c3c <nftw@plt+0x520bc>  // b.any
  45595c:	ldp	x3, x2, [x19, #272]
  455960:	strb	wzr, [x19, #255]
  455964:	mov	x1, x0
  455968:	mov	x0, x19
  45596c:	blr	x3
  455970:	ldr	x0, [x19, #320]
  455974:	mov	w3, #0x6120                	// #24864
  455978:	mov	w2, #0x72                  	// #114
  45597c:	mov	x1, #0x3                   	// #3
  455980:	add	x0, x0, #0x1
  455984:	strh	w3, [x19]
  455988:	strb	w2, [x19, #2]
  45598c:	str	x0, [x19, #320]
  455990:	add	x0, x1, #0x1
  455994:	str	x0, [x19, #256]
  455998:	mov	w2, #0x67                  	// #103
  45599c:	strb	w2, [x19, x1]
  4559a0:	strb	w2, [x19, #264]
  4559a4:	cmp	x0, #0xff
  4559a8:	b.ne	454c8c <nftw@plt+0x5210c>  // b.any
  4559ac:	ldp	x3, x2, [x19, #272]
  4559b0:	strb	wzr, [x19, #255]
  4559b4:	mov	x1, x0
  4559b8:	mov	x0, x19
  4559bc:	blr	x3
  4559c0:	ldr	x1, [x19, #320]
  4559c4:	mov	x2, #0x1                   	// #1
  4559c8:	mov	x0, #0x0                   	// #0
  4559cc:	add	x1, x1, x2
  4559d0:	str	x1, [x19, #320]
  4559d4:	b	454c90 <nftw@plt+0x52110>
  4559d8:	ldr	x1, [x0, #8]
  4559dc:	ldr	w2, [x1, #16]
  4559e0:	cmp	w2, #0x1
  4559e4:	b.ne	44fa40 <nftw@plt+0x4cec0>  // b.any
  4559e8:	ldr	x1, [x1, #8]
  4559ec:	ldrb	w1, [x1]
  4559f0:	cmp	w1, #0x3e
  4559f4:	b.ne	44fa40 <nftw@plt+0x4cec0>  // b.any
  4559f8:	ldr	x1, [x19, #256]
  4559fc:	cmp	x1, #0xff
  455a00:	b.ne	455a28 <nftw@plt+0x52ea8>  // b.any
  455a04:	ldp	x3, x2, [x19, #272]
  455a08:	strb	wzr, [x19, #255]
  455a0c:	mov	x0, x19
  455a10:	blr	x3
  455a14:	str	xzr, [x19, #256]
  455a18:	ldr	x0, [x19, #320]
  455a1c:	mov	x1, #0x0                   	// #0
  455a20:	add	x0, x0, #0x1
  455a24:	str	x0, [x19, #320]
  455a28:	add	x0, x1, #0x1
  455a2c:	str	x0, [x19, #256]
  455a30:	mov	w0, #0x28                  	// #40
  455a34:	strb	w0, [x19, x1]
  455a38:	strb	w0, [x19, #264]
  455a3c:	ldr	x0, [x24, #8]
  455a40:	b	44fa40 <nftw@plt+0x4cec0>
  455a44:	ldr	x0, [x0, #8]
  455a48:	ldr	w1, [x0, #16]
  455a4c:	cmp	w1, #0x1
  455a50:	b.eq	455d54 <nftw@plt+0x531d4>  // b.none
  455a54:	ldp	x21, x22, [sp, #32]
  455a58:	ldp	x23, x24, [sp, #48]
  455a5c:	b	44d1a0 <nftw@plt+0x4a620>
  455a60:	ldp	x21, x22, [sp, #32]
  455a64:	ldp	x23, x24, [sp, #48]
  455a68:	b	44d1a0 <nftw@plt+0x4a620>
  455a6c:	ldr	x25, [x25, #8]
  455a70:	cbz	x25, 454ed8 <nftw@plt+0x52358>
  455a74:	ldr	w4, [x25]
  455a78:	b	454d78 <nftw@plt+0x521f8>
  455a7c:	ldr	x4, [x1, #8]
  455a80:	ldr	x23, [x19, #288]
  455a84:	str	x4, [x19, #288]
  455a88:	cbz	x4, 455030 <nftw@plt+0x524b0>
  455a8c:	mov	w21, #0x1                   	// #1
  455a90:	b	454ff4 <nftw@plt+0x52474>
  455a94:	mov	w0, #0x7d                  	// #125
  455a98:	strb	w0, [x19, #1]
  455a9c:	mov	x3, #0x2                   	// #2
  455aa0:	ldp	x25, x26, [sp, #64]
  455aa4:	add	x0, x3, #0x1
  455aa8:	str	x0, [x19, #256]
  455aac:	mov	w1, #0x3a                  	// #58
  455ab0:	strb	w1, [x19, x3]
  455ab4:	cmp	x0, #0xff
  455ab8:	strb	w1, [x19, #264]
  455abc:	b.ne	451458 <nftw@plt+0x4e8d8>  // b.any
  455ac0:	ldp	x3, x2, [x19, #272]
  455ac4:	strb	wzr, [x19, #255]
  455ac8:	mov	x1, x0
  455acc:	mov	x0, x19
  455ad0:	blr	x3
  455ad4:	ldr	x1, [x19, #320]
  455ad8:	mov	x2, #0x1                   	// #1
  455adc:	mov	x0, #0x0                   	// #0
  455ae0:	add	x1, x1, x2
  455ae4:	str	x1, [x19, #320]
  455ae8:	b	45145c <nftw@plt+0x4e8dc>
  455aec:	ldp	x21, x22, [sp, #32]
  455af0:	ldp	x23, x24, [sp, #48]
  455af4:	b	44d1a0 <nftw@plt+0x4a620>
  455af8:	ldr	x0, [x2, #16]
  455afc:	ldr	w0, [x0]
  455b00:	cmp	w0, #0x29
  455b04:	b.eq	455b10 <nftw@plt+0x52f90>  // b.none
  455b08:	mov	w0, #0x1                   	// #1
  455b0c:	str	w0, [x19, #304]
  455b10:	ldr	x2, [x2, #8]
  455b14:	mov	w1, w22
  455b18:	mov	x0, x19
  455b1c:	bl	4561b8 <nftw@plt+0x53638>
  455b20:	b	44fa88 <nftw@plt+0x4cf08>
  455b24:	ldr	x1, [x20, #8]
  455b28:	ldr	w2, [x1]
  455b2c:	cmp	w2, #0x1
  455b30:	b.ne	453c08 <nftw@plt+0x51088>  // b.any
  455b34:	ldr	x2, [x20, #16]
  455b38:	ldr	w2, [x2]
  455b3c:	cmp	w2, #0x29
  455b40:	csel	x20, x20, x1, ne  // ne = any
  455b44:	b	453c08 <nftw@plt+0x51088>
  455b48:	ldp	x21, x22, [sp, #32]
  455b4c:	ldp	x23, x24, [sp, #48]
  455b50:	b	44d1a0 <nftw@plt+0x4a620>
  455b54:	ldp	x21, x22, [sp, #32]
  455b58:	ldp	x23, x24, [sp, #48]
  455b5c:	b	44d1a0 <nftw@plt+0x4a620>
  455b60:	ldp	x21, x22, [sp, #32]
  455b64:	ldp	x23, x24, [sp, #48]
  455b68:	b	44d1a0 <nftw@plt+0x4a620>
  455b6c:	ldrb	w1, [x0, #1]
  455b70:	cmp	w1, #0x6c
  455b74:	b.ne	4554f8 <nftw@plt+0x52978>  // b.any
  455b78:	ldrb	w0, [x0, #2]
  455b7c:	cbz	w0, 455504 <nftw@plt+0x52984>
  455b80:	b	4554f8 <nftw@plt+0x52978>
  455b84:	ldp	x21, x22, [sp, #32]
  455b88:	ldp	x23, x24, [sp, #48]
  455b8c:	b	44d1a0 <nftw@plt+0x4a620>
  455b90:	mov	x0, x19
  455b94:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x1ebb8>
  455b98:	mov	x2, #0x4                   	// #4
  455b9c:	add	x1, x1, #0xea0
  455ba0:	bl	44c480 <nftw@plt+0x49900>
  455ba4:	ldr	x0, [x21, #8]
  455ba8:	cbz	x0, 455c00 <nftw@plt+0x53080>
  455bac:	mov	w1, w22
  455bb0:	mov	x2, x21
  455bb4:	mov	x0, x19
  455bb8:	bl	4561b8 <nftw@plt+0x53638>
  455bbc:	ldr	x1, [x19, #256]
  455bc0:	cmp	x1, #0xff
  455bc4:	b.ne	455bec <nftw@plt+0x5306c>  // b.any
  455bc8:	ldp	x3, x2, [x19, #272]
  455bcc:	strb	wzr, [x19, #255]
  455bd0:	mov	x0, x19
  455bd4:	blr	x3
  455bd8:	str	xzr, [x19, #256]
  455bdc:	ldr	x0, [x19, #320]
  455be0:	mov	x1, #0x0                   	// #0
  455be4:	add	x0, x0, #0x1
  455be8:	str	x0, [x19, #320]
  455bec:	add	x0, x1, #0x1
  455bf0:	str	x0, [x19, #256]
  455bf4:	mov	w0, #0x20                  	// #32
  455bf8:	strb	w0, [x19, x1]
  455bfc:	strb	w0, [x19, #264]
  455c00:	mov	x2, x23
  455c04:	mov	w1, w22
  455c08:	mov	x0, x19
  455c0c:	bl	455fb8 <nftw@plt+0x53438>
  455c10:	cbz	x20, 455de0 <nftw@plt+0x53260>
  455c14:	mov	w1, w22
  455c18:	mov	x2, x20
  455c1c:	mov	x0, x19
  455c20:	bl	4561b8 <nftw@plt+0x53638>
  455c24:	ldp	x21, x22, [sp, #32]
  455c28:	ldp	x23, x24, [sp, #48]
  455c2c:	ldp	x25, x26, [sp, #64]
  455c30:	b	44d1a0 <nftw@plt+0x4a620>
  455c34:	ldp	x21, x22, [sp, #32]
  455c38:	ldp	x23, x24, [sp, #48]
  455c3c:	b	44d1a0 <nftw@plt+0x4a620>
  455c40:	ldp	x21, x22, [sp, #32]
  455c44:	ldp	x23, x24, [sp, #48]
  455c48:	b	44d1a0 <nftw@plt+0x4a620>
  455c4c:	add	x1, x21, #0x40
  455c50:	b	44dad8 <nftw@plt+0x4af58>
  455c54:	ldr	x2, [x20, #8]
  455c58:	mov	w1, w22
  455c5c:	mov	x0, x19
  455c60:	bl	4561b8 <nftw@plt+0x53638>
  455c64:	mov	x2, x21
  455c68:	mov	w1, w22
  455c6c:	mov	x0, x19
  455c70:	bl	456050 <nftw@plt+0x534d0>
  455c74:	ldp	x21, x22, [sp, #32]
  455c78:	ldp	x23, x24, [sp, #48]
  455c7c:	b	44d1a0 <nftw@plt+0x4a620>
  455c80:	ldp	x21, x22, [sp, #32]
  455c84:	ldp	x23, x24, [sp, #48]
  455c88:	b	44d1a0 <nftw@plt+0x4a620>
  455c8c:	ldp	x21, x22, [sp, #32]
  455c90:	ldp	x23, x24, [sp, #48]
  455c94:	b	44d1a0 <nftw@plt+0x4a620>
  455c98:	cmp	w21, #0x5
  455c9c:	b.eq	455e10 <nftw@plt+0x53290>  // b.none
  455ca0:	mov	x0, x19
  455ca4:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x1ebb8>
  455ca8:	mov	x2, #0x3                   	// #3
  455cac:	add	x1, x1, #0xeb8
  455cb0:	bl	44c480 <nftw@plt+0x49900>
  455cb4:	ldp	x21, x22, [sp, #32]
  455cb8:	ldp	x23, x24, [sp, #48]
  455cbc:	b	44d1a0 <nftw@plt+0x4a620>
  455cc0:	ldr	w0, [x19, #348]
  455cc4:	cmp	w4, w0
  455cc8:	b.ge	455d30 <nftw@plt+0x531b0>  // b.tcont
  455ccc:	sbfiz	x0, x4, #4, #32
  455cd0:	add	w1, w4, #0x1
  455cd4:	ldr	x2, [x19, #288]
  455cd8:	str	w1, [x19, #344]
  455cdc:	str	x3, [x5, x0]
  455ce0:	add	x0, x5, w4, sxtw #4
  455ce4:	add	x0, x0, #0x8
  455ce8:	cbz	x2, 455e8c <nftw@plt+0x5330c>
  455cec:	ldr	w1, [x19, #360]
  455cf0:	ldr	w6, [x19, #364]
  455cf4:	sbfiz	x5, x1, #4, #32
  455cf8:	b	455d28 <nftw@plt+0x531a8>
  455cfc:	ldr	x4, [x19, #352]
  455d00:	add	w1, w1, #0x1
  455d04:	ldr	x7, [x2, #8]
  455d08:	add	x4, x4, x5
  455d0c:	str	w1, [x19, #360]
  455d10:	add	x5, x5, #0x10
  455d14:	str	x7, [x4, #8]
  455d18:	str	x4, [x0]
  455d1c:	mov	x0, x4
  455d20:	ldr	x2, [x2]
  455d24:	cbz	x2, 455e8c <nftw@plt+0x5330c>
  455d28:	cmp	w6, w1
  455d2c:	b.gt	455cfc <nftw@plt+0x5317c>
  455d30:	mov	w0, #0x1                   	// #1
  455d34:	ldp	x21, x22, [sp, #32]
  455d38:	ldp	x23, x24, [sp, #48]
  455d3c:	ldp	x25, x26, [sp, #64]
  455d40:	str	w0, [x19, #304]
  455d44:	b	44d1a0 <nftw@plt+0x4a620>
  455d48:	ldp	x21, x22, [sp, #32]
  455d4c:	ldp	x23, x24, [sp, #48]
  455d50:	b	44d1a0 <nftw@plt+0x4a620>
  455d54:	ldr	x0, [x0, #8]
  455d58:	ldrb	w0, [x0]
  455d5c:	cmp	w0, #0x3e
  455d60:	b.eq	455e3c <nftw@plt+0x532bc>  // b.none
  455d64:	ldp	x21, x22, [sp, #32]
  455d68:	ldp	x23, x24, [sp, #48]
  455d6c:	b	44d1a0 <nftw@plt+0x4a620>
  455d70:	add	x1, x21, #0x60
  455d74:	mov	w20, #0x4                   	// #4
  455d78:	b	44dad8 <nftw@plt+0x4af58>
  455d7c:	cmp	x21, x24
  455d80:	b.ls	451ca0 <nftw@plt+0x4f120>  // b.plast
  455d84:	cmp	x2, #0xff
  455d88:	ccmp	w0, w23, #0x0, ls  // ls = plast
  455d8c:	b.ne	451ca0 <nftw@plt+0x4f120>  // b.any
  455d90:	and	w22, w2, #0xff
  455d94:	cmp	x1, #0xff
  455d98:	b.ne	455dbc <nftw@plt+0x5323c>  // b.any
  455d9c:	ldp	x3, x2, [x19, #272]
  455da0:	strb	wzr, [x19, #255]
  455da4:	mov	x0, x19
  455da8:	blr	x3
  455dac:	str	xzr, [x19, #256]
  455db0:	ldr	x0, [x19, #320]
  455db4:	add	x0, x0, #0x1
  455db8:	str	x0, [x19, #320]
  455dbc:	ldr	x0, [x19, #256]
  455dc0:	mov	x20, x24
  455dc4:	add	x1, x0, #0x1
  455dc8:	str	x1, [x19, #256]
  455dcc:	strb	w22, [x19, x0]
  455dd0:	strb	w22, [x19, #264]
  455dd4:	b	451c7c <nftw@plt+0x4f0fc>
  455dd8:	ldr	x1, [x19, #256]
  455ddc:	b	451428 <nftw@plt+0x4e8a8>
  455de0:	ldp	x21, x22, [sp, #32]
  455de4:	ldp	x23, x24, [sp, #48]
  455de8:	ldp	x25, x26, [sp, #64]
  455dec:	b	44d1a0 <nftw@plt+0x4a620>
  455df0:	add	x21, sp, #0x80
  455df4:	str	x21, [x19, #296]
  455df8:	b	454ed8 <nftw@plt+0x52358>
  455dfc:	ldp	x21, x22, [sp, #32]
  455e00:	ldp	x23, x24, [sp, #48]
  455e04:	b	44d1a0 <nftw@plt+0x4a620>
  455e08:	ldr	x2, [x19, #296]
  455e0c:	b	44d560 <nftw@plt+0x4a9e0>
  455e10:	mov	x0, x19
  455e14:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x1ebb8>
  455e18:	mov	x2, #0x2                   	// #2
  455e1c:	add	x1, x1, #0xeb0
  455e20:	bl	44c480 <nftw@plt+0x49900>
  455e24:	ldp	x21, x22, [sp, #32]
  455e28:	ldp	x23, x24, [sp, #48]
  455e2c:	b	44d1a0 <nftw@plt+0x4a620>
  455e30:	add	x21, x21, #0x20
  455e34:	str	x21, [x19, #296]
  455e38:	b	454ed8 <nftw@plt+0x52358>
  455e3c:	ldr	x1, [x19, #256]
  455e40:	cmp	x1, #0xff
  455e44:	b.ne	455e6c <nftw@plt+0x532ec>  // b.any
  455e48:	ldp	x3, x2, [x19, #272]
  455e4c:	strb	wzr, [x19, #255]
  455e50:	mov	x0, x19
  455e54:	blr	x3
  455e58:	str	xzr, [x19, #256]
  455e5c:	ldr	x0, [x19, #320]
  455e60:	mov	x1, #0x0                   	// #0
  455e64:	add	x0, x0, #0x1
  455e68:	str	x0, [x19, #320]
  455e6c:	add	x0, x1, #0x1
  455e70:	str	x0, [x19, #256]
  455e74:	mov	w0, #0x29                  	// #41
  455e78:	strb	w0, [x19, x1]
  455e7c:	strb	w0, [x19, #264]
  455e80:	ldp	x21, x22, [sp, #32]
  455e84:	ldp	x23, x24, [sp, #48]
  455e88:	b	44d1a0 <nftw@plt+0x4a620>
  455e8c:	str	xzr, [x0]
  455e90:	b	454fe8 <nftw@plt+0x52468>
  455e94:	ldr	x1, [x19, #256]
  455e98:	cmp	x1, #0xff
  455e9c:	b.ne	455ec4 <nftw@plt+0x53344>  // b.any
  455ea0:	ldp	x3, x2, [x19, #272]
  455ea4:	strb	wzr, [x19, #255]
  455ea8:	mov	x0, x19
  455eac:	blr	x3
  455eb0:	str	xzr, [x19, #256]
  455eb4:	ldr	x0, [x19, #320]
  455eb8:	mov	x1, #0x0                   	// #0
  455ebc:	add	x0, x0, #0x1
  455ec0:	str	x0, [x19, #320]
  455ec4:	add	x0, x1, #0x1
  455ec8:	str	x0, [x19, #256]
  455ecc:	mov	w0, #0x75                  	// #117
  455ed0:	strb	w0, [x19, x1]
  455ed4:	strb	w0, [x19, #264]
  455ed8:	ldp	x21, x22, [sp, #32]
  455edc:	ldp	x23, x24, [sp, #48]
  455ee0:	b	44d1a0 <nftw@plt+0x4a620>
  455ee4:	mov	x0, x19
  455ee8:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x1ebb8>
  455eec:	mov	x2, #0x2                   	// #2
  455ef0:	add	x1, x1, #0xea8
  455ef4:	bl	44c480 <nftw@plt+0x49900>
  455ef8:	ldp	x21, x22, [sp, #32]
  455efc:	ldp	x23, x24, [sp, #48]
  455f00:	b	44d1a0 <nftw@plt+0x4a620>
  455f04:	ldr	x1, [x19, #256]
  455f08:	cmp	x1, #0xff
  455f0c:	b.ne	455f34 <nftw@plt+0x533b4>  // b.any
  455f10:	ldp	x3, x2, [x19, #272]
  455f14:	strb	wzr, [x19, #255]
  455f18:	mov	x0, x19
  455f1c:	blr	x3
  455f20:	str	xzr, [x19, #256]
  455f24:	ldr	x0, [x19, #320]
  455f28:	mov	x1, #0x0                   	// #0
  455f2c:	add	x0, x0, #0x1
  455f30:	str	x0, [x19, #320]
  455f34:	add	x0, x1, #0x1
  455f38:	str	x0, [x19, #256]
  455f3c:	mov	w0, #0x2d                  	// #45
  455f40:	strb	w0, [x19, x1]
  455f44:	strb	w0, [x19, #264]
  455f48:	b	453fb4 <nftw@plt+0x51434>
  455f4c:	ldp	x21, x22, [sp, #32]
  455f50:	ldp	x23, x24, [sp, #48]
  455f54:	b	44d1a0 <nftw@plt+0x4a620>
  455f58:	ldp	x21, x22, [sp, #32]
  455f5c:	ldp	x23, x24, [sp, #48]
  455f60:	ldp	x25, x26, [sp, #64]
  455f64:	b	44d1d4 <nftw@plt+0x4a654>
  455f68:	mov	x0, x1
  455f6c:	add	x1, x0, #0x1
  455f70:	b	44f4d4 <nftw@plt+0x4c954>
  455f74:	ldp	x21, x22, [sp, #32]
  455f78:	ldp	x23, x24, [sp, #48]
  455f7c:	b	44d1a0 <nftw@plt+0x4a620>
  455f80:	mov	x2, x21
  455f84:	mov	w1, w22
  455f88:	mov	x0, x19
  455f8c:	bl	456050 <nftw@plt+0x534d0>
  455f90:	b	44f9d8 <nftw@plt+0x4ce58>
  455f94:	mov	x0, x19
  455f98:	adrp	x1, 47c000 <_obstack_memory_used@@Base+0x1abb8>
  455f9c:	mov	x2, #0x5                   	// #5
  455fa0:	add	x1, x1, #0x940
  455fa4:	bl	44c480 <nftw@plt+0x49900>
  455fa8:	ldp	x21, x22, [sp, #32]
  455fac:	ldp	x23, x24, [sp, #48]
  455fb0:	b	44d1a0 <nftw@plt+0x4a620>
  455fb4:	nop
  455fb8:	stp	x29, x30, [sp, #-48]!
  455fbc:	mov	x29, sp
  455fc0:	stp	x19, x20, [sp, #16]
  455fc4:	mov	x20, x0
  455fc8:	cbz	x2, 456038 <nftw@plt+0x534b8>
  455fcc:	ldr	w3, [x2, #4]
  455fd0:	mov	x19, x2
  455fd4:	cmp	w3, #0x1
  455fd8:	b.gt	456038 <nftw@plt+0x534b8>
  455fdc:	ldr	w4, [x0, #308]
  455fe0:	cmp	w4, #0x400
  455fe4:	b.gt	456038 <nftw@plt+0x534b8>
  455fe8:	add	w3, w3, #0x1
  455fec:	str	w3, [x2, #4]
  455ff0:	ldr	x3, [x0, #328]
  455ff4:	add	x5, sp, #0x20
  455ff8:	add	w4, w4, #0x1
  455ffc:	str	w4, [x0, #308]
  456000:	str	x5, [x0, #328]
  456004:	stp	x2, x3, [sp, #32]
  456008:	bl	44d138 <nftw@plt+0x4a5b8>
  45600c:	ldr	w1, [x19, #4]
  456010:	ldr	x0, [sp, #40]
  456014:	str	x0, [x20, #328]
  456018:	ldr	w0, [x20, #308]
  45601c:	sub	w1, w1, #0x1
  456020:	str	w1, [x19, #4]
  456024:	sub	w0, w0, #0x1
  456028:	str	w0, [x20, #308]
  45602c:	ldp	x19, x20, [sp, #16]
  456030:	ldp	x29, x30, [sp], #48
  456034:	ret
  456038:	mov	w0, #0x1                   	// #1
  45603c:	str	w0, [x20, #304]
  456040:	ldp	x19, x20, [sp, #16]
  456044:	ldp	x29, x30, [sp], #48
  456048:	ret
  45604c:	nop
  456050:	stp	x29, x30, [sp, #-80]!
  456054:	mov	x29, sp
  456058:	ldr	w3, [x2]
  45605c:	stp	x19, x20, [sp, #16]
  456060:	mov	x20, x2
  456064:	mov	x19, x0
  456068:	cmp	w3, #0x32
  45606c:	b.eq	45609c <nftw@plt+0x5351c>  // b.none
  456070:	ldr	w3, [x2, #4]
  456074:	cmp	w3, #0x1
  456078:	b.gt	456088 <nftw@plt+0x53508>
  45607c:	ldr	w4, [x0, #308]
  456080:	cmp	w4, #0x400
  456084:	b.le	45615c <nftw@plt+0x535dc>
  456088:	mov	w0, #0x1                   	// #1
  45608c:	str	w0, [x19, #304]
  456090:	ldp	x19, x20, [sp, #16]
  456094:	ldp	x29, x30, [sp], #80
  456098:	ret
  45609c:	ldr	x0, [x2, #8]
  4560a0:	stp	x21, x22, [sp, #32]
  4560a4:	ldrsw	x22, [x0, #16]
  4560a8:	ldr	x20, [x0, #8]
  4560ac:	cbz	x22, 4561ac <nftw@plt+0x5362c>
  4560b0:	add	x22, x20, x22
  4560b4:	ldr	x1, [x19, #256]
  4560b8:	str	x23, [sp, #48]
  4560bc:	mov	x23, #0x1                   	// #1
  4560c0:	b	456118 <nftw@plt+0x53598>
  4560c4:	ldp	x3, x2, [x19, #272]
  4560c8:	strb	wzr, [x19, #255]
  4560cc:	add	x20, x20, #0x1
  4560d0:	blr	x3
  4560d4:	strb	w21, [x19]
  4560d8:	ldr	x0, [x19, #320]
  4560dc:	str	x23, [x19, #256]
  4560e0:	strb	w21, [x19, #264]
  4560e4:	cmp	x22, x20
  4560e8:	add	x0, x0, #0x1
  4560ec:	str	x0, [x19, #320]
  4560f0:	mov	x0, #0x1                   	// #1
  4560f4:	b.eq	456148 <nftw@plt+0x535c8>  // b.none
  4560f8:	ldrb	w21, [x20]
  4560fc:	add	x1, x0, #0x1
  456100:	str	x1, [x19, #256]
  456104:	add	x20, x20, #0x1
  456108:	strb	w21, [x19, x0]
  45610c:	cmp	x20, x22
  456110:	strb	w21, [x19, #264]
  456114:	b.eq	456148 <nftw@plt+0x535c8>  // b.none
  456118:	ldrb	w21, [x20]
  45611c:	mov	x0, x19
  456120:	cmp	x1, #0xff
  456124:	b.eq	4560c4 <nftw@plt+0x53544>  // b.none
  456128:	mov	x0, x1
  45612c:	add	x20, x20, #0x1
  456130:	add	x1, x0, #0x1
  456134:	str	x1, [x19, #256]
  456138:	cmp	x20, x22
  45613c:	strb	w21, [x19, x0]
  456140:	strb	w21, [x19, #264]
  456144:	b.ne	456118 <nftw@plt+0x53598>  // b.any
  456148:	ldp	x19, x20, [sp, #16]
  45614c:	ldp	x21, x22, [sp, #32]
  456150:	ldr	x23, [sp, #48]
  456154:	ldp	x29, x30, [sp], #80
  456158:	ret
  45615c:	add	w3, w3, #0x1
  456160:	str	w3, [x2, #4]
  456164:	ldr	x3, [x0, #328]
  456168:	add	x5, sp, #0x40
  45616c:	add	w4, w4, #0x1
  456170:	str	w4, [x0, #308]
  456174:	str	x5, [x0, #328]
  456178:	stp	x2, x3, [sp, #64]
  45617c:	bl	44d138 <nftw@plt+0x4a5b8>
  456180:	ldr	w1, [x20, #4]
  456184:	ldr	x0, [sp, #72]
  456188:	str	x0, [x19, #328]
  45618c:	ldr	w0, [x19, #308]
  456190:	sub	w1, w1, #0x1
  456194:	str	w1, [x20, #4]
  456198:	sub	w0, w0, #0x1
  45619c:	str	w0, [x19, #308]
  4561a0:	ldp	x19, x20, [sp, #16]
  4561a4:	ldp	x29, x30, [sp], #80
  4561a8:	ret
  4561ac:	ldp	x21, x22, [sp, #32]
  4561b0:	b	456090 <nftw@plt+0x53510>
  4561b4:	nop
  4561b8:	stp	x29, x30, [sp, #-64]!
  4561bc:	mov	x29, sp
  4561c0:	stp	x19, x20, [sp, #16]
  4561c4:	mov	x20, x2
  4561c8:	ldr	w2, [x2]
  4561cc:	stp	x21, x22, [sp, #32]
  4561d0:	mov	w22, #0x1                   	// #1
  4561d4:	cmp	w2, #0x31
  4561d8:	ccmp	w2, w22, #0x0, ne  // ne = any
  4561dc:	mov	w21, w1
  4561e0:	mov	x19, x0
  4561e4:	ccmp	w2, #0x6, #0x4, hi  // hi = pmore
  4561e8:	b.ne	456294 <nftw@plt+0x53714>  // b.any
  4561ec:	ldr	w0, [x20, #4]
  4561f0:	cmp	w0, #0x1
  4561f4:	b.gt	456288 <nftw@plt+0x53708>
  4561f8:	ldr	w1, [x19, #308]
  4561fc:	cmp	w1, #0x400
  456200:	b.gt	456288 <nftw@plt+0x53708>
  456204:	ldr	x3, [x19, #328]
  456208:	add	w0, w0, #0x1
  45620c:	str	w0, [x20, #4]
  456210:	add	w1, w1, #0x1
  456214:	add	x0, sp, #0x30
  456218:	str	w1, [x19, #308]
  45621c:	str	x0, [x19, #328]
  456220:	mov	w1, w21
  456224:	mov	x0, x19
  456228:	mov	x2, x20
  45622c:	stp	x20, x3, [sp, #48]
  456230:	bl	44d138 <nftw@plt+0x4a5b8>
  456234:	ldr	w1, [x20, #4]
  456238:	ldr	x0, [sp, #56]
  45623c:	str	x0, [x19, #328]
  456240:	ldr	w0, [x19, #308]
  456244:	sub	w1, w1, #0x1
  456248:	str	w1, [x20, #4]
  45624c:	sub	w0, w0, #0x1
  456250:	str	w0, [x19, #308]
  456254:	cbnz	w22, 456278 <nftw@plt+0x536f8>
  456258:	ldr	x1, [x19, #256]
  45625c:	add	x0, x1, #0x1
  456260:	cmp	x1, #0xff
  456264:	b.eq	4562bc <nftw@plt+0x5373c>  // b.none
  456268:	str	x0, [x19, #256]
  45626c:	mov	w0, #0x29                  	// #41
  456270:	strb	w0, [x19, x1]
  456274:	strb	w0, [x19, #264]
  456278:	ldp	x19, x20, [sp, #16]
  45627c:	ldp	x21, x22, [sp, #32]
  456280:	ldp	x29, x30, [sp], #64
  456284:	ret
  456288:	mov	w0, #0x1                   	// #1
  45628c:	str	w0, [x19, #304]
  456290:	b	456254 <nftw@plt+0x536d4>
  456294:	ldr	x1, [x0, #256]
  456298:	cmp	x1, #0xff
  45629c:	b.eq	4562e4 <nftw@plt+0x53764>  // b.none
  4562a0:	add	x0, x1, #0x1
  4562a4:	str	x0, [x19, #256]
  4562a8:	mov	w0, #0x28                  	// #40
  4562ac:	strb	w0, [x19, x1]
  4562b0:	mov	w22, #0x0                   	// #0
  4562b4:	strb	w0, [x19, #264]
  4562b8:	b	4561ec <nftw@plt+0x5366c>
  4562bc:	ldp	x3, x2, [x19, #272]
  4562c0:	strb	wzr, [x19, #255]
  4562c4:	mov	x0, x19
  4562c8:	blr	x3
  4562cc:	ldr	x2, [x19, #320]
  4562d0:	mov	x0, #0x1                   	// #1
  4562d4:	mov	x1, #0x0                   	// #0
  4562d8:	add	x2, x2, x0
  4562dc:	str	x2, [x19, #320]
  4562e0:	b	456268 <nftw@plt+0x536e8>
  4562e4:	ldp	x3, x2, [x0, #272]
  4562e8:	strb	wzr, [x0, #255]
  4562ec:	blr	x3
  4562f0:	ldr	x2, [x19, #320]
  4562f4:	mov	x0, #0x1                   	// #1
  4562f8:	mov	x1, #0x0                   	// #0
  4562fc:	add	x2, x2, x0
  456300:	str	x2, [x19, #320]
  456304:	b	4562a4 <nftw@plt+0x53724>
  456308:	stp	x29, x30, [sp, #-64]!
  45630c:	mov	x29, sp
  456310:	stp	x19, x20, [sp, #16]
  456314:	mov	x19, x0
  456318:	mov	w20, w1
  45631c:	ldr	x0, [x2, #8]
  456320:	ldr	x0, [x0]
  456324:	ldrb	w1, [x0]
  456328:	cmp	w1, #0x66
  45632c:	b.ne	4564a0 <nftw@plt+0x53920>  // b.any
  456330:	ldr	x1, [x3]
  456334:	stp	x21, x22, [sp, #32]
  456338:	stp	x23, x24, [sp, #48]
  45633c:	mov	x24, #0x0                   	// #0
  456340:	ldp	x23, x21, [x1, #8]
  456344:	ldr	w1, [x21]
  456348:	cmp	w1, #0x3c
  45634c:	b.eq	456578 <nftw@plt+0x539f8>  // b.none
  456350:	ldr	w22, [x19, #316]
  456354:	mov	w1, #0xffffffff            	// #-1
  456358:	str	w1, [x19, #316]
  45635c:	ldrb	w0, [x0, #1]
  456360:	cmp	w0, #0x6c
  456364:	b.eq	456598 <nftw@plt+0x53a18>  // b.none
  456368:	b.hi	4564b0 <nftw@plt+0x53930>  // b.pmore
  45636c:	cmp	w0, #0x4c
  456370:	b.eq	45637c <nftw@plt+0x537fc>  // b.none
  456374:	cmp	w0, #0x52
  456378:	b.ne	456484 <nftw@plt+0x53904>  // b.any
  45637c:	ldr	x1, [x19, #256]
  456380:	add	x0, x1, #0x1
  456384:	cmp	x1, #0xff
  456388:	b.eq	4566ac <nftw@plt+0x53b2c>  // b.none
  45638c:	str	x0, [x19, #256]
  456390:	mov	w0, #0x28                  	// #40
  456394:	strb	w0, [x19, x1]
  456398:	mov	x2, x21
  45639c:	strb	w0, [x19, #264]
  4563a0:	mov	w1, w20
  4563a4:	mov	x0, x19
  4563a8:	bl	4561b8 <nftw@plt+0x53638>
  4563ac:	mov	w1, w20
  4563b0:	mov	x2, x23
  4563b4:	mov	x0, x19
  4563b8:	bl	456050 <nftw@plt+0x534d0>
  4563bc:	ldr	x1, [x19, #256]
  4563c0:	cmp	x1, #0xff
  4563c4:	b.eq	4567e0 <nftw@plt+0x53c60>  // b.none
  4563c8:	add	x0, x1, #0x1
  4563cc:	str	x0, [x19, #256]
  4563d0:	mov	w21, #0x2e                  	// #46
  4563d4:	strb	w21, [x19, x1]
  4563d8:	strb	w21, [x19, #264]
  4563dc:	cmp	x0, #0xff
  4563e0:	b.ne	4567a0 <nftw@plt+0x53c20>  // b.any
  4563e4:	ldp	x3, x2, [x19, #272]
  4563e8:	strb	wzr, [x19, #255]
  4563ec:	mov	x1, x0
  4563f0:	mov	x0, x19
  4563f4:	blr	x3
  4563f8:	strb	w21, [x19]
  4563fc:	ldr	x0, [x19, #320]
  456400:	mov	x1, #0x1                   	// #1
  456404:	add	x0, x0, x1
  456408:	str	x0, [x19, #320]
  45640c:	add	x0, x1, #0x1
  456410:	str	x0, [x19, #256]
  456414:	mov	w0, #0x2e                  	// #46
  456418:	strb	w0, [x19, x1]
  45641c:	mov	x2, x23
  456420:	strb	w0, [x19, #264]
  456424:	mov	w1, w20
  456428:	mov	x0, x19
  45642c:	bl	456050 <nftw@plt+0x534d0>
  456430:	mov	x2, x24
  456434:	mov	w1, w20
  456438:	mov	x0, x19
  45643c:	bl	4561b8 <nftw@plt+0x53638>
  456440:	ldr	x1, [x19, #256]
  456444:	add	x0, x1, #0x1
  456448:	cmp	x1, #0xff
  45644c:	b.ne	456474 <nftw@plt+0x538f4>  // b.any
  456450:	ldp	x3, x2, [x19, #272]
  456454:	strb	wzr, [x19, #255]
  456458:	mov	x0, x19
  45645c:	blr	x3
  456460:	ldr	x2, [x19, #320]
  456464:	mov	x0, #0x1                   	// #1
  456468:	mov	x1, #0x0                   	// #0
  45646c:	add	x2, x2, x0
  456470:	str	x2, [x19, #320]
  456474:	str	x0, [x19, #256]
  456478:	mov	w0, #0x29                  	// #41
  45647c:	strb	w0, [x19, x1]
  456480:	strb	w0, [x19, #264]
  456484:	ldp	x23, x24, [sp, #48]
  456488:	str	w22, [x19, #316]
  45648c:	ldp	x21, x22, [sp, #32]
  456490:	mov	w0, #0x1                   	// #1
  456494:	ldp	x19, x20, [sp, #16]
  456498:	ldp	x29, x30, [sp], #64
  45649c:	ret
  4564a0:	mov	w0, #0x0                   	// #0
  4564a4:	ldp	x19, x20, [sp, #16]
  4564a8:	ldp	x29, x30, [sp], #64
  4564ac:	ret
  4564b0:	cmp	w0, #0x72
  4564b4:	b.ne	456484 <nftw@plt+0x53904>  // b.any
  4564b8:	ldr	x1, [x19, #256]
  4564bc:	add	x0, x1, #0x1
  4564c0:	cmp	x1, #0xff
  4564c4:	b.eq	4566d4 <nftw@plt+0x53b54>  // b.none
  4564c8:	str	x0, [x19, #256]
  4564cc:	mov	w0, #0x28                  	// #40
  4564d0:	strb	w0, [x19, x1]
  4564d4:	mov	x2, x21
  4564d8:	strb	w0, [x19, #264]
  4564dc:	mov	w1, w20
  4564e0:	mov	x0, x19
  4564e4:	bl	4561b8 <nftw@plt+0x53638>
  4564e8:	mov	x0, x19
  4564ec:	mov	x2, x23
  4564f0:	mov	w1, w20
  4564f4:	bl	456050 <nftw@plt+0x534d0>
  4564f8:	ldr	x0, [x19, #256]
  4564fc:	cmp	x0, #0xff
  456500:	b.eq	456770 <nftw@plt+0x53bf0>  // b.none
  456504:	add	x1, x0, #0x1
  456508:	str	x1, [x19, #256]
  45650c:	mov	w20, #0x2e                  	// #46
  456510:	strb	w20, [x19, x0]
  456514:	strb	w20, [x19, #264]
  456518:	cmp	x1, #0xff
  45651c:	b.ne	456620 <nftw@plt+0x53aa0>  // b.any
  456520:	ldp	x3, x2, [x19, #272]
  456524:	strb	wzr, [x19, #255]
  456528:	mov	x0, x19
  45652c:	blr	x3
  456530:	strb	w20, [x19]
  456534:	ldr	x0, [x19, #320]
  456538:	mov	x1, #0x1                   	// #1
  45653c:	add	x0, x0, x1
  456540:	str	x0, [x19, #320]
  456544:	add	x0, x1, #0x1
  456548:	mov	w2, #0x2e                  	// #46
  45654c:	strb	w2, [x19, x1]
  456550:	add	x1, x0, #0x1
  456554:	str	x1, [x19, #256]
  456558:	mov	w1, #0x29                  	// #41
  45655c:	strb	w1, [x19, x0]
  456560:	mov	w0, #0x1                   	// #1
  456564:	strb	w1, [x19, #264]
  456568:	ldp	x23, x24, [sp, #48]
  45656c:	str	w22, [x19, #316]
  456570:	ldp	x21, x22, [sp, #32]
  456574:	b	456494 <nftw@plt+0x53914>
  456578:	ldr	w22, [x19, #316]
  45657c:	mov	w1, #0xffffffff            	// #-1
  456580:	ldr	x24, [x21, #16]
  456584:	ldr	x21, [x21, #8]
  456588:	str	w1, [x19, #316]
  45658c:	ldrb	w0, [x0, #1]
  456590:	cmp	w0, #0x6c
  456594:	b.ne	456368 <nftw@plt+0x537e8>  // b.any
  456598:	ldr	x0, [x19, #256]
  45659c:	cmp	x0, #0xff
  4565a0:	b.eq	4566fc <nftw@plt+0x53b7c>  // b.none
  4565a4:	add	x1, x0, #0x1
  4565a8:	str	x1, [x19, #256]
  4565ac:	mov	w2, #0x28                  	// #40
  4565b0:	strb	w2, [x19, x0]
  4565b4:	strb	w2, [x19, #264]
  4565b8:	cmp	x1, #0xff
  4565bc:	b.ne	456664 <nftw@plt+0x53ae4>  // b.any
  4565c0:	ldp	x3, x2, [x19, #272]
  4565c4:	strb	wzr, [x19, #255]
  4565c8:	mov	x0, x19
  4565cc:	blr	x3
  4565d0:	ldr	x0, [x19, #320]
  4565d4:	mov	w2, #0x2e                  	// #46
  4565d8:	mov	x1, #0x1                   	// #1
  4565dc:	strb	w2, [x19]
  4565e0:	add	x0, x0, x1
  4565e4:	str	x0, [x19, #320]
  4565e8:	add	x0, x1, #0x1
  4565ec:	mov	w2, #0x2e                  	// #46
  4565f0:	strb	w2, [x19, x1]
  4565f4:	add	x1, x0, #0x1
  4565f8:	str	x1, [x19, #256]
  4565fc:	mov	w1, #0x2e                  	// #46
  456600:	strb	w1, [x19, x0]
  456604:	mov	x2, x23
  456608:	strb	w1, [x19, #264]
  45660c:	mov	x0, x19
  456610:	mov	w1, w20
  456614:	bl	456050 <nftw@plt+0x534d0>
  456618:	mov	x2, x21
  45661c:	b	456434 <nftw@plt+0x538b4>
  456620:	add	x3, x0, #0x2
  456624:	str	x3, [x19, #256]
  456628:	strb	w20, [x19, x1]
  45662c:	cmp	x3, #0xff
  456630:	strb	w20, [x19, #264]
  456634:	b.ne	45672c <nftw@plt+0x53bac>  // b.any
  456638:	ldp	x4, x2, [x19, #272]
  45663c:	strb	wzr, [x19, #255]
  456640:	mov	x1, x3
  456644:	mov	x0, x19
  456648:	blr	x4
  45664c:	strb	w20, [x19]
  456650:	ldr	x1, [x19, #320]
  456654:	mov	x0, #0x1                   	// #1
  456658:	add	x1, x1, x0
  45665c:	str	x1, [x19, #320]
  456660:	b	456550 <nftw@plt+0x539d0>
  456664:	add	x3, x0, #0x2
  456668:	str	x3, [x19, #256]
  45666c:	mov	w24, #0x2e                  	// #46
  456670:	strb	w24, [x19, x1]
  456674:	strb	w24, [x19, #264]
  456678:	cmp	x3, #0xff
  45667c:	b.ne	45680c <nftw@plt+0x53c8c>  // b.any
  456680:	ldp	x4, x2, [x19, #272]
  456684:	strb	wzr, [x19, #255]
  456688:	mov	x1, x3
  45668c:	mov	x0, x19
  456690:	blr	x4
  456694:	strb	w24, [x19]
  456698:	ldr	x1, [x19, #320]
  45669c:	mov	x0, #0x1                   	// #1
  4566a0:	add	x1, x1, x0
  4566a4:	str	x1, [x19, #320]
  4566a8:	b	4565f4 <nftw@plt+0x53a74>
  4566ac:	ldp	x3, x2, [x19, #272]
  4566b0:	strb	wzr, [x19, #255]
  4566b4:	mov	x0, x19
  4566b8:	blr	x3
  4566bc:	ldr	x2, [x19, #320]
  4566c0:	mov	x0, #0x1                   	// #1
  4566c4:	mov	x1, #0x0                   	// #0
  4566c8:	add	x2, x2, x0
  4566cc:	str	x2, [x19, #320]
  4566d0:	b	45638c <nftw@plt+0x5380c>
  4566d4:	ldp	x3, x2, [x19, #272]
  4566d8:	strb	wzr, [x19, #255]
  4566dc:	mov	x0, x19
  4566e0:	blr	x3
  4566e4:	ldr	x2, [x19, #320]
  4566e8:	mov	x0, #0x1                   	// #1
  4566ec:	mov	x1, #0x0                   	// #0
  4566f0:	add	x2, x2, x0
  4566f4:	str	x2, [x19, #320]
  4566f8:	b	4564c8 <nftw@plt+0x53948>
  4566fc:	ldp	x3, x2, [x19, #272]
  456700:	strb	wzr, [x19, #255]
  456704:	mov	x1, x0
  456708:	mov	x0, x19
  45670c:	blr	x3
  456710:	ldr	x0, [x19, #320]
  456714:	mov	w2, #0x2e28                	// #11816
  456718:	mov	x1, #0x2                   	// #2
  45671c:	strh	w2, [x19]
  456720:	add	x0, x0, #0x1
  456724:	str	x0, [x19, #320]
  456728:	b	4565e8 <nftw@plt+0x53a68>
  45672c:	add	x0, x0, #0x3
  456730:	str	x0, [x19, #256]
  456734:	strb	w20, [x19, x3]
  456738:	cmp	x0, #0xff
  45673c:	strb	w20, [x19, #264]
  456740:	b.ne	456550 <nftw@plt+0x539d0>  // b.any
  456744:	ldp	x3, x2, [x19, #272]
  456748:	strb	wzr, [x19, #255]
  45674c:	mov	x1, x0
  456750:	mov	x0, x19
  456754:	blr	x3
  456758:	ldr	x2, [x19, #320]
  45675c:	mov	x1, #0x1                   	// #1
  456760:	mov	x0, #0x0                   	// #0
  456764:	add	x2, x2, x1
  456768:	str	x2, [x19, #320]
  45676c:	b	456554 <nftw@plt+0x539d4>
  456770:	ldp	x3, x2, [x19, #272]
  456774:	strb	wzr, [x19, #255]
  456778:	mov	x1, x0
  45677c:	mov	x0, x19
  456780:	blr	x3
  456784:	ldr	x0, [x19, #320]
  456788:	mov	w2, #0x2e2e                	// #11822
  45678c:	mov	x1, #0x2                   	// #2
  456790:	strh	w2, [x19]
  456794:	add	x0, x0, #0x1
  456798:	str	x0, [x19, #320]
  45679c:	b	456544 <nftw@plt+0x539c4>
  4567a0:	add	x1, x1, #0x2
  4567a4:	str	x1, [x19, #256]
  4567a8:	strb	w21, [x19, x0]
  4567ac:	cmp	x1, #0xff
  4567b0:	strb	w21, [x19, #264]
  4567b4:	b.ne	45640c <nftw@plt+0x5388c>  // b.any
  4567b8:	ldp	x3, x2, [x19, #272]
  4567bc:	strb	wzr, [x19, #255]
  4567c0:	mov	x0, x19
  4567c4:	blr	x3
  4567c8:	ldr	x2, [x19, #320]
  4567cc:	mov	x0, #0x1                   	// #1
  4567d0:	mov	x1, #0x0                   	// #0
  4567d4:	add	x2, x2, x0
  4567d8:	str	x2, [x19, #320]
  4567dc:	b	456410 <nftw@plt+0x53890>
  4567e0:	ldp	x3, x2, [x19, #272]
  4567e4:	strb	wzr, [x19, #255]
  4567e8:	mov	x0, x19
  4567ec:	blr	x3
  4567f0:	ldr	x0, [x19, #320]
  4567f4:	mov	w2, #0x2e2e                	// #11822
  4567f8:	mov	x1, #0x2                   	// #2
  4567fc:	strh	w2, [x19]
  456800:	add	x0, x0, #0x1
  456804:	str	x0, [x19, #320]
  456808:	b	45640c <nftw@plt+0x5388c>
  45680c:	add	x0, x0, #0x3
  456810:	str	x0, [x19, #256]
  456814:	strb	w24, [x19, x3]
  456818:	cmp	x0, #0xff
  45681c:	strb	w24, [x19, #264]
  456820:	b.ne	4565f4 <nftw@plt+0x53a74>  // b.any
  456824:	ldp	x3, x2, [x19, #272]
  456828:	strb	wzr, [x19, #255]
  45682c:	mov	x1, x0
  456830:	mov	x0, x19
  456834:	blr	x3
  456838:	ldr	x2, [x19, #320]
  45683c:	mov	x1, #0x1                   	// #1
  456840:	mov	x0, #0x0                   	// #0
  456844:	add	x2, x2, x1
  456848:	str	x2, [x19, #320]
  45684c:	b	4565f8 <nftw@plt+0x53a78>
  456850:	stp	x29, x30, [sp, #-80]!
  456854:	mov	x29, sp
  456858:	stp	x19, x20, [sp, #16]
  45685c:	mov	x19, x0
  456860:	ldr	w0, [x2]
  456864:	stp	x21, x22, [sp, #32]
  456868:	mov	x20, x2
  45686c:	sub	w0, w0, #0x3
  456870:	mov	w21, w1
  456874:	cmp	w0, #0x4d
  456878:	b.ls	4568ac <nftw@plt+0x53d2c>  // b.plast
  45687c:	ldr	w0, [x20, #4]
  456880:	cmp	w0, #0x1
  456884:	b.gt	456894 <nftw@plt+0x53d14>
  456888:	ldr	w1, [x19, #308]
  45688c:	cmp	w1, #0x400
  456890:	b.le	45745c <nftw@plt+0x548dc>
  456894:	mov	w0, #0x1                   	// #1
  456898:	str	w0, [x19, #304]
  45689c:	ldp	x19, x20, [sp, #16]
  4568a0:	ldp	x21, x22, [sp, #32]
  4568a4:	ldp	x29, x30, [sp], #80
  4568a8:	ret
  4568ac:	adrp	x1, 47f000 <_obstack_memory_used@@Base+0x1dbb8>
  4568b0:	add	x1, x1, #0xf9c
  4568b4:	ldrh	w0, [x1, w0, uxtw #1]
  4568b8:	adr	x1, 4568c4 <nftw@plt+0x53d44>
  4568bc:	add	x0, x1, w0, sxth #2
  4568c0:	br	x0
  4568c4:	ldr	x0, [x19, #256]
  4568c8:	cmp	x0, #0xff
  4568cc:	b.eq	457934 <nftw@plt+0x54db4>  // b.none
  4568d0:	add	x1, x0, #0x1
  4568d4:	str	x1, [x19, #256]
  4568d8:	mov	w2, #0x20                  	// #32
  4568dc:	strb	w2, [x19, x0]
  4568e0:	strb	w2, [x19, #264]
  4568e4:	cmp	x1, #0xff
  4568e8:	b.ne	457ca8 <nftw@plt+0x55128>  // b.any
  4568ec:	ldp	x3, x2, [x19, #272]
  4568f0:	strb	wzr, [x19, #255]
  4568f4:	mov	x0, x19
  4568f8:	blr	x3
  4568fc:	ldr	x0, [x19, #320]
  456900:	mov	w3, #0x6f63                	// #28515
  456904:	mov	w2, #0x6e                  	// #110
  456908:	mov	x1, #0x3                   	// #3
  45690c:	add	x0, x0, #0x1
  456910:	strh	w3, [x19]
  456914:	strb	w2, [x19, #2]
  456918:	str	x0, [x19, #320]
  45691c:	add	x0, x1, #0x1
  456920:	str	x0, [x19, #256]
  456924:	mov	w2, #0x73                  	// #115
  456928:	strb	w2, [x19, x1]
  45692c:	strb	w2, [x19, #264]
  456930:	cmp	x0, #0xff
  456934:	b.ne	456a28 <nftw@plt+0x53ea8>  // b.any
  456938:	ldp	x3, x2, [x19, #272]
  45693c:	strb	wzr, [x19, #255]
  456940:	mov	x1, x0
  456944:	mov	x0, x19
  456948:	blr	x3
  45694c:	ldr	x2, [x19, #320]
  456950:	mov	x1, #0x1                   	// #1
  456954:	mov	x0, #0x0                   	// #0
  456958:	add	x2, x2, x1
  45695c:	str	x2, [x19, #320]
  456960:	str	x1, [x19, #256]
  456964:	mov	w1, #0x74                  	// #116
  456968:	strb	w1, [x19, x0]
  45696c:	strb	w1, [x19, #264]
  456970:	ldp	x19, x20, [sp, #16]
  456974:	ldp	x21, x22, [sp, #32]
  456978:	ldp	x29, x30, [sp], #80
  45697c:	ret
  456980:	ldr	x0, [x19, #256]
  456984:	cmp	x0, #0xff
  456988:	b.eq	457570 <nftw@plt+0x549f0>  // b.none
  45698c:	add	x1, x0, #0x1
  456990:	str	x1, [x19, #256]
  456994:	mov	w2, #0x20                  	// #32
  456998:	strb	w2, [x19, x0]
  45699c:	strb	w2, [x19, #264]
  4569a0:	cmp	x1, #0xff
  4569a4:	b.ne	457de8 <nftw@plt+0x55268>  // b.any
  4569a8:	ldp	x3, x2, [x19, #272]
  4569ac:	strb	wzr, [x19, #255]
  4569b0:	mov	x0, x19
  4569b4:	blr	x3
  4569b8:	ldr	x0, [x19, #320]
  4569bc:	mov	w2, #0x6572                	// #25970
  4569c0:	mov	w1, #0x73                  	// #115
  4569c4:	mov	x3, #0x3                   	// #3
  4569c8:	add	x0, x0, #0x1
  4569cc:	strh	w2, [x19]
  4569d0:	strb	w1, [x19, #2]
  4569d4:	str	x0, [x19, #320]
  4569d8:	add	x1, x3, #0x1
  4569dc:	str	x1, [x19, #256]
  4569e0:	mov	w0, #0x74                  	// #116
  4569e4:	strb	w0, [x19, x3]
  4569e8:	strb	w0, [x19, #264]
  4569ec:	cmp	x1, #0xff
  4569f0:	b.ne	457e38 <nftw@plt+0x552b8>  // b.any
  4569f4:	ldp	x3, x2, [x19, #272]
  4569f8:	strb	wzr, [x19, #255]
  4569fc:	mov	x0, x19
  456a00:	blr	x3
  456a04:	ldr	x0, [x19, #320]
  456a08:	mov	w2, #0x6972                	// #26994
  456a0c:	mov	x1, #0x2                   	// #2
  456a10:	strh	w2, [x19]
  456a14:	add	x0, x0, #0x1
  456a18:	str	x0, [x19, #320]
  456a1c:	add	x0, x1, #0x1
  456a20:	mov	w2, #0x63                  	// #99
  456a24:	strb	w2, [x19, x1]
  456a28:	add	x1, x0, #0x1
  456a2c:	b	456960 <nftw@plt+0x53de0>
  456a30:	ldr	x0, [x19, #256]
  456a34:	cmp	x0, #0xff
  456a38:	b.eq	457618 <nftw@plt+0x54a98>  // b.none
  456a3c:	add	x1, x0, #0x1
  456a40:	str	x1, [x19, #256]
  456a44:	mov	w2, #0x20                  	// #32
  456a48:	strb	w2, [x19, x0]
  456a4c:	strb	w2, [x19, #264]
  456a50:	cmp	x1, #0xff
  456a54:	b.ne	458048 <nftw@plt+0x554c8>  // b.any
  456a58:	ldp	x3, x2, [x19, #272]
  456a5c:	strb	wzr, [x19, #255]
  456a60:	mov	x0, x19
  456a64:	blr	x3
  456a68:	ldr	x0, [x19, #320]
  456a6c:	mov	w2, #0x6f76                	// #28534
  456a70:	mov	w1, #0x6c                  	// #108
  456a74:	mov	x3, #0x3                   	// #3
  456a78:	add	x0, x0, #0x1
  456a7c:	strh	w2, [x19]
  456a80:	strb	w1, [x19, #2]
  456a84:	str	x0, [x19, #320]
  456a88:	add	x1, x3, #0x1
  456a8c:	str	x1, [x19, #256]
  456a90:	mov	w0, #0x61                  	// #97
  456a94:	strb	w0, [x19, x3]
  456a98:	strb	w0, [x19, #264]
  456a9c:	cmp	x1, #0xff
  456aa0:	b.ne	458098 <nftw@plt+0x55518>  // b.any
  456aa4:	ldp	x3, x2, [x19, #272]
  456aa8:	strb	wzr, [x19, #255]
  456aac:	mov	x0, x19
  456ab0:	blr	x3
  456ab4:	ldr	x0, [x19, #320]
  456ab8:	mov	w2, #0x6974                	// #26996
  456abc:	mov	x1, #0x2                   	// #2
  456ac0:	strh	w2, [x19]
  456ac4:	add	x0, x0, #0x1
  456ac8:	str	x0, [x19, #320]
  456acc:	add	x0, x1, #0x1
  456ad0:	mov	w2, #0x6c                  	// #108
  456ad4:	strb	w2, [x19, x1]
  456ad8:	add	x1, x0, #0x1
  456adc:	b	4576e0 <nftw@plt+0x54b60>
  456ae0:	ldr	x0, [x19, #256]
  456ae4:	cmp	x0, #0xff
  456ae8:	b.eq	4573f8 <nftw@plt+0x54878>  // b.none
  456aec:	add	x1, x0, #0x1
  456af0:	str	x1, [x19, #256]
  456af4:	mov	w2, #0x20                  	// #32
  456af8:	strb	w2, [x19, x0]
  456afc:	strb	w2, [x19, #264]
  456b00:	b	456d04 <nftw@plt+0x54184>
  456b04:	ldr	x1, [x19, #256]
  456b08:	add	x0, x1, #0x1
  456b0c:	cmp	x1, #0xff
  456b10:	b.eq	4576f4 <nftw@plt+0x54b74>  // b.none
  456b14:	str	x0, [x19, #256]
  456b18:	mov	w0, #0x20                  	// #32
  456b1c:	strb	w0, [x19, x1]
  456b20:	strb	w0, [x19, #264]
  456b24:	ldr	x20, [x20, #16]
  456b28:	cbnz	x20, 45687c <nftw@plt+0x53cfc>
  456b2c:	b	456894 <nftw@plt+0x53d14>
  456b30:	tbnz	w21, #2, 45689c <nftw@plt+0x53d1c>
  456b34:	ldr	x1, [x19, #256]
  456b38:	add	x0, x1, #0x1
  456b3c:	cmp	x1, #0xff
  456b40:	b.ne	456b68 <nftw@plt+0x53fe8>  // b.any
  456b44:	ldp	x3, x2, [x19, #272]
  456b48:	strb	wzr, [x19, #255]
  456b4c:	mov	x0, x19
  456b50:	blr	x3
  456b54:	ldr	x2, [x19, #320]
  456b58:	mov	x0, #0x1                   	// #1
  456b5c:	mov	x1, #0x0                   	// #0
  456b60:	add	x2, x2, x0
  456b64:	str	x2, [x19, #320]
  456b68:	str	x0, [x19, #256]
  456b6c:	mov	w0, #0x2a                  	// #42
  456b70:	strb	w0, [x19, x1]
  456b74:	strb	w0, [x19, #264]
  456b78:	b	45689c <nftw@plt+0x53d1c>
  456b7c:	ldr	x20, [x2, #8]
  456b80:	cbnz	x20, 45687c <nftw@plt+0x53cfc>
  456b84:	b	456894 <nftw@plt+0x53d14>
  456b88:	ldrb	w0, [x19, #264]
  456b8c:	cmp	w0, #0x28
  456b90:	b.eq	456bd8 <nftw@plt+0x54058>  // b.none
  456b94:	ldr	x1, [x19, #256]
  456b98:	add	x0, x1, #0x1
  456b9c:	cmp	x1, #0xff
  456ba0:	b.ne	456bc8 <nftw@plt+0x54048>  // b.any
  456ba4:	ldp	x3, x2, [x19, #272]
  456ba8:	strb	wzr, [x19, #255]
  456bac:	mov	x0, x19
  456bb0:	blr	x3
  456bb4:	ldr	x2, [x19, #320]
  456bb8:	mov	x0, #0x1                   	// #1
  456bbc:	mov	x1, #0x0                   	// #0
  456bc0:	add	x2, x2, x0
  456bc4:	str	x2, [x19, #320]
  456bc8:	str	x0, [x19, #256]
  456bcc:	mov	w0, #0x20                  	// #32
  456bd0:	strb	w0, [x19, x1]
  456bd4:	strb	w0, [x19, #264]
  456bd8:	ldr	x20, [x20, #8]
  456bdc:	cbz	x20, 457a6c <nftw@plt+0x54eec>
  456be0:	ldr	w0, [x20, #4]
  456be4:	cmp	w0, #0x1
  456be8:	b.gt	457a6c <nftw@plt+0x54eec>
  456bec:	ldr	w1, [x19, #308]
  456bf0:	cmp	w1, #0x400
  456bf4:	b.gt	457a6c <nftw@plt+0x54eec>
  456bf8:	ldr	x3, [x19, #328]
  456bfc:	add	w0, w0, #0x1
  456c00:	str	w0, [x20, #4]
  456c04:	add	w1, w1, #0x1
  456c08:	add	x0, sp, #0x40
  456c0c:	str	w1, [x19, #308]
  456c10:	str	x0, [x19, #328]
  456c14:	mov	w1, w21
  456c18:	mov	x0, x19
  456c1c:	mov	x2, x20
  456c20:	stp	x20, x3, [sp, #64]
  456c24:	bl	44d138 <nftw@plt+0x4a5b8>
  456c28:	ldr	w1, [x20, #4]
  456c2c:	ldr	x0, [sp, #72]
  456c30:	str	x0, [x19, #328]
  456c34:	ldr	w0, [x19, #308]
  456c38:	sub	w1, w1, #0x1
  456c3c:	str	w1, [x20, #4]
  456c40:	sub	w0, w0, #0x1
  456c44:	str	w0, [x19, #308]
  456c48:	ldr	x0, [x19, #256]
  456c4c:	cmp	x0, #0xff
  456c50:	b.eq	45835c <nftw@plt+0x557dc>  // b.none
  456c54:	add	x1, x0, #0x1
  456c58:	str	x1, [x19, #256]
  456c5c:	mov	w20, #0x3a                  	// #58
  456c60:	strb	w20, [x19, x0]
  456c64:	strb	w20, [x19, #264]
  456c68:	cmp	x1, #0xff
  456c6c:	b.ne	458318 <nftw@plt+0x55798>  // b.any
  456c70:	ldp	x3, x2, [x19, #272]
  456c74:	strb	wzr, [x19, #255]
  456c78:	mov	x0, x19
  456c7c:	blr	x3
  456c80:	strb	w20, [x19]
  456c84:	ldr	x1, [x19, #320]
  456c88:	mov	x0, #0x1                   	// #1
  456c8c:	add	x1, x1, x0
  456c90:	str	x1, [x19, #320]
  456c94:	add	x1, x0, #0x1
  456c98:	str	x1, [x19, #256]
  456c9c:	mov	w1, #0x2a                  	// #42
  456ca0:	strb	w1, [x19, x0]
  456ca4:	strb	w1, [x19, #264]
  456ca8:	b	45689c <nftw@plt+0x53d1c>
  456cac:	ldr	x0, [x19, #256]
  456cb0:	cmp	x0, #0xff
  456cb4:	b.eq	457540 <nftw@plt+0x549c0>  // b.none
  456cb8:	add	x1, x0, #0x1
  456cbc:	str	x1, [x19, #256]
  456cc0:	mov	w2, #0x20                  	// #32
  456cc4:	strb	w2, [x19, x0]
  456cc8:	strb	w2, [x19, #264]
  456ccc:	b	456cd4 <nftw@plt+0x54154>
  456cd0:	ldr	x1, [x19, #256]
  456cd4:	cmp	x1, #0xff
  456cd8:	b.eq	457434 <nftw@plt+0x548b4>  // b.none
  456cdc:	add	x0, x1, #0x1
  456ce0:	str	x0, [x19, #256]
  456ce4:	mov	w0, #0x26                  	// #38
  456ce8:	strb	w0, [x19, x1]
  456cec:	strb	w0, [x19, #264]
  456cf0:	ldp	x19, x20, [sp, #16]
  456cf4:	ldp	x21, x22, [sp, #32]
  456cf8:	ldp	x29, x30, [sp], #80
  456cfc:	ret
  456d00:	ldr	x1, [x19, #256]
  456d04:	cmp	x1, #0xff
  456d08:	b.eq	457a90 <nftw@plt+0x54f10>  // b.none
  456d0c:	add	x0, x1, #0x1
  456d10:	str	x0, [x19, #256]
  456d14:	mov	w2, #0x26                  	// #38
  456d18:	strb	w2, [x19, x1]
  456d1c:	strb	w2, [x19, #264]
  456d20:	cmp	x0, #0xff
  456d24:	b.ne	457424 <nftw@plt+0x548a4>  // b.any
  456d28:	ldp	x3, x2, [x19, #272]
  456d2c:	strb	wzr, [x19, #255]
  456d30:	mov	x1, x0
  456d34:	mov	x0, x19
  456d38:	blr	x3
  456d3c:	ldr	x2, [x19, #320]
  456d40:	mov	x1, #0x1                   	// #1
  456d44:	mov	x0, #0x0                   	// #0
  456d48:	add	x2, x2, x1
  456d4c:	str	x2, [x19, #320]
  456d50:	str	x1, [x19, #256]
  456d54:	mov	w1, #0x26                  	// #38
  456d58:	strb	w1, [x19, x0]
  456d5c:	strb	w1, [x19, #264]
  456d60:	ldp	x19, x20, [sp, #16]
  456d64:	ldp	x21, x22, [sp, #32]
  456d68:	ldp	x29, x30, [sp], #80
  456d6c:	ret
  456d70:	ldr	x0, [x19, #256]
  456d74:	cmp	x0, #0xff
  456d78:	b.eq	457864 <nftw@plt+0x54ce4>  // b.none
  456d7c:	add	x1, x0, #0x1
  456d80:	str	x1, [x19, #256]
  456d84:	mov	w2, #0x20                  	// #32
  456d88:	strb	w2, [x19, x0]
  456d8c:	strb	w2, [x19, #264]
  456d90:	cmp	x1, #0xff
  456d94:	b.ne	457c00 <nftw@plt+0x55080>  // b.any
  456d98:	ldp	x3, x2, [x19, #272]
  456d9c:	strb	wzr, [x19, #255]
  456da0:	mov	x0, x19
  456da4:	blr	x3
  456da8:	ldr	x0, [x19, #320]
  456dac:	mov	w3, #0x5f5f                	// #24415
  456db0:	mov	w2, #0x76                  	// #118
  456db4:	mov	x1, #0x3                   	// #3
  456db8:	add	x0, x0, #0x1
  456dbc:	strh	w3, [x19]
  456dc0:	strb	w2, [x19, #2]
  456dc4:	str	x0, [x19, #320]
  456dc8:	add	x0, x1, #0x1
  456dcc:	str	x0, [x19, #256]
  456dd0:	mov	w2, #0x65                  	// #101
  456dd4:	strb	w2, [x19, x1]
  456dd8:	strb	w2, [x19, #264]
  456ddc:	cmp	x0, #0xff
  456de0:	b.ne	457c50 <nftw@plt+0x550d0>  // b.any
  456de4:	ldp	x3, x2, [x19, #272]
  456de8:	strb	wzr, [x19, #255]
  456dec:	mov	x1, x0
  456df0:	mov	x0, x19
  456df4:	blr	x3
  456df8:	ldr	x0, [x19, #320]
  456dfc:	mov	w2, #0x7463                	// #29795
  456e00:	mov	w1, #0x6f                  	// #111
  456e04:	mov	x3, #0x3                   	// #3
  456e08:	add	x0, x0, #0x1
  456e0c:	strh	w2, [x19]
  456e10:	strb	w1, [x19, #2]
  456e14:	str	x0, [x19, #320]
  456e18:	add	x1, x3, #0x1
  456e1c:	str	x1, [x19, #256]
  456e20:	mov	w0, #0x72                  	// #114
  456e24:	strb	w0, [x19, x3]
  456e28:	strb	w0, [x19, #264]
  456e2c:	cmp	x1, #0xff
  456e30:	b.ne	45792c <nftw@plt+0x54dac>  // b.any
  456e34:	ldp	x3, x2, [x19, #272]
  456e38:	strb	wzr, [x19, #255]
  456e3c:	mov	x0, x19
  456e40:	blr	x3
  456e44:	ldr	x2, [x19, #320]
  456e48:	mov	x0, #0x1                   	// #1
  456e4c:	mov	x1, #0x0                   	// #0
  456e50:	add	x2, x2, x0
  456e54:	str	x2, [x19, #320]
  456e58:	str	x0, [x19, #256]
  456e5c:	mov	w2, #0x28                  	// #40
  456e60:	strb	w2, [x19, x1]
  456e64:	strb	w2, [x19, #264]
  456e68:	ldr	x20, [x20, #8]
  456e6c:	cbz	x20, 457a78 <nftw@plt+0x54ef8>
  456e70:	ldr	w1, [x20, #4]
  456e74:	cmp	w1, #0x1
  456e78:	b.gt	457a78 <nftw@plt+0x54ef8>
  456e7c:	ldr	w2, [x19, #308]
  456e80:	cmp	w2, #0x400
  456e84:	b.gt	457a78 <nftw@plt+0x54ef8>
  456e88:	ldr	x3, [x19, #328]
  456e8c:	add	w1, w1, #0x1
  456e90:	str	w1, [x20, #4]
  456e94:	add	w2, w2, #0x1
  456e98:	add	x0, sp, #0x40
  456e9c:	str	w2, [x19, #308]
  456ea0:	str	x0, [x19, #328]
  456ea4:	mov	w1, w21
  456ea8:	mov	x2, x20
  456eac:	mov	x0, x19
  456eb0:	stp	x20, x3, [sp, #64]
  456eb4:	bl	44d138 <nftw@plt+0x4a5b8>
  456eb8:	ldr	w2, [x20, #4]
  456ebc:	ldr	x0, [sp, #72]
  456ec0:	str	x0, [x19, #328]
  456ec4:	ldr	w1, [x19, #308]
  456ec8:	sub	w2, w2, #0x1
  456ecc:	ldr	x0, [x19, #256]
  456ed0:	str	w2, [x20, #4]
  456ed4:	sub	w1, w1, #0x1
  456ed8:	str	w1, [x19, #308]
  456edc:	add	x1, x0, #0x1
  456ee0:	cmp	x0, #0xff
  456ee4:	b.ne	456f10 <nftw@plt+0x54390>  // b.any
  456ee8:	ldp	x3, x2, [x19, #272]
  456eec:	strb	wzr, [x19, #255]
  456ef0:	mov	x1, x0
  456ef4:	mov	x0, x19
  456ef8:	blr	x3
  456efc:	ldr	x2, [x19, #320]
  456f00:	mov	x1, #0x1                   	// #1
  456f04:	mov	x0, #0x0                   	// #0
  456f08:	add	x2, x2, x1
  456f0c:	str	x2, [x19, #320]
  456f10:	str	x1, [x19, #256]
  456f14:	mov	w1, #0x29                  	// #41
  456f18:	strb	w1, [x19, x0]
  456f1c:	strb	w1, [x19, #264]
  456f20:	b	45689c <nftw@plt+0x53d1c>
  456f24:	ldr	x0, [x19, #256]
  456f28:	cmp	x0, #0xff
  456f2c:	b.eq	4574b0 <nftw@plt+0x54930>  // b.none
  456f30:	add	x1, x0, #0x1
  456f34:	str	x1, [x19, #256]
  456f38:	mov	w2, #0x20                  	// #32
  456f3c:	strb	w2, [x19, x0]
  456f40:	strb	w2, [x19, #264]
  456f44:	cmp	x1, #0xff
  456f48:	b.ne	457f88 <nftw@plt+0x55408>  // b.any
  456f4c:	ldp	x3, x2, [x19, #272]
  456f50:	strb	wzr, [x19, #255]
  456f54:	mov	x0, x19
  456f58:	blr	x3
  456f5c:	ldr	x0, [x19, #320]
  456f60:	mov	w3, #0x6874                	// #26740
  456f64:	mov	w2, #0x72                  	// #114
  456f68:	mov	x1, #0x3                   	// #3
  456f6c:	add	x0, x0, #0x1
  456f70:	strh	w3, [x19]
  456f74:	strb	w2, [x19, #2]
  456f78:	str	x0, [x19, #320]
  456f7c:	add	x3, x1, #0x1
  456f80:	str	x3, [x19, #256]
  456f84:	mov	w0, #0x6f                  	// #111
  456f88:	strb	w0, [x19, x1]
  456f8c:	strb	w0, [x19, #264]
  456f90:	cmp	x3, #0xff
  456f94:	b.ne	457fdc <nftw@plt+0x5545c>  // b.any
  456f98:	ldp	x4, x2, [x19, #272]
  456f9c:	strb	wzr, [x19, #255]
  456fa0:	mov	x0, x19
  456fa4:	mov	x1, x3
  456fa8:	blr	x4
  456fac:	mov	w0, #0x77                  	// #119
  456fb0:	strb	w0, [x19]
  456fb4:	mov	x2, #0x1                   	// #1
  456fb8:	strb	w0, [x19, #264]
  456fbc:	mov	x0, x2
  456fc0:	ldr	x1, [x19, #320]
  456fc4:	ldr	x22, [x20, #16]
  456fc8:	add	x1, x1, x2
  456fcc:	str	x2, [x19, #256]
  456fd0:	str	x1, [x19, #320]
  456fd4:	cbz	x22, 45689c <nftw@plt+0x53d1c>
  456fd8:	add	x1, x0, #0x1
  456fdc:	str	x1, [x19, #256]
  456fe0:	mov	w2, #0x28                  	// #40
  456fe4:	strb	w2, [x19, x0]
  456fe8:	strb	w2, [x19, #264]
  456fec:	ldr	w0, [x22, #4]
  456ff0:	cmp	w0, #0x1
  456ff4:	b.gt	457a84 <nftw@plt+0x54f04>
  456ff8:	ldr	w2, [x19, #308]
  456ffc:	cmp	w2, #0x400
  457000:	b.gt	457a84 <nftw@plt+0x54f04>
  457004:	ldr	x3, [x19, #328]
  457008:	add	w0, w0, #0x1
  45700c:	str	w0, [x22, #4]
  457010:	add	w2, w2, #0x1
  457014:	add	x0, sp, #0x40
  457018:	str	w2, [x19, #308]
  45701c:	str	x0, [x19, #328]
  457020:	mov	w1, w21
  457024:	mov	x2, x22
  457028:	mov	x0, x19
  45702c:	stp	x22, x3, [sp, #64]
  457030:	bl	44d138 <nftw@plt+0x4a5b8>
  457034:	ldr	w2, [x22, #4]
  457038:	ldr	x0, [sp, #72]
  45703c:	str	x0, [x19, #328]
  457040:	ldr	w0, [x19, #308]
  457044:	sub	w2, w2, #0x1
  457048:	ldr	x1, [x19, #256]
  45704c:	str	w2, [x22, #4]
  457050:	sub	w0, w0, #0x1
  457054:	str	w0, [x19, #308]
  457058:	cmp	x1, #0xff
  45705c:	b.ne	4573f0 <nftw@plt+0x54870>  // b.any
  457060:	ldp	x3, x2, [x19, #272]
  457064:	strb	wzr, [x19, #255]
  457068:	mov	x0, x19
  45706c:	blr	x3
  457070:	ldr	x2, [x19, #320]
  457074:	mov	x0, #0x1                   	// #1
  457078:	mov	x1, #0x0                   	// #0
  45707c:	add	x2, x2, x0
  457080:	str	x2, [x19, #320]
  457084:	str	x0, [x19, #256]
  457088:	mov	w0, #0x29                  	// #41
  45708c:	strb	w0, [x19, x1]
  457090:	strb	w0, [x19, #264]
  457094:	b	45689c <nftw@plt+0x53d1c>
  457098:	ldr	x0, [x19, #256]
  45709c:	cmp	x0, #0xff
  4570a0:	b.eq	45771c <nftw@plt+0x54b9c>  // b.none
  4570a4:	add	x1, x0, #0x1
  4570a8:	str	x1, [x19, #256]
  4570ac:	mov	w2, #0x63                  	// #99
  4570b0:	strb	w2, [x19, x0]
  4570b4:	strb	w2, [x19, #264]
  4570b8:	cmp	x1, #0xff
  4570bc:	b.ne	457f04 <nftw@plt+0x55384>  // b.any
  4570c0:	ldp	x3, x2, [x19, #272]
  4570c4:	strb	wzr, [x19, #255]
  4570c8:	mov	x0, x19
  4570cc:	blr	x3
  4570d0:	ldr	x0, [x19, #320]
  4570d4:	mov	w3, #0x6d6f                	// #28015
  4570d8:	mov	w2, #0x70                  	// #112
  4570dc:	mov	x1, #0x3                   	// #3
  4570e0:	add	x0, x0, #0x1
  4570e4:	strh	w3, [x19]
  4570e8:	strb	w2, [x19, #2]
  4570ec:	str	x0, [x19, #320]
  4570f0:	add	x0, x1, #0x1
  4570f4:	str	x0, [x19, #256]
  4570f8:	mov	w2, #0x6c                  	// #108
  4570fc:	strb	w2, [x19, x1]
  457100:	strb	w2, [x19, #264]
  457104:	cmp	x0, #0xff
  457108:	b.ne	457f54 <nftw@plt+0x553d4>  // b.any
  45710c:	ldp	x3, x2, [x19, #272]
  457110:	strb	wzr, [x19, #255]
  457114:	mov	x1, x0
  457118:	mov	x0, x19
  45711c:	blr	x3
  457120:	ldr	x0, [x19, #320]
  457124:	mov	w2, #0x65                  	// #101
  457128:	mov	x1, #0x1                   	// #1
  45712c:	strb	w2, [x19]
  457130:	add	x0, x0, x1
  457134:	str	x0, [x19, #320]
  457138:	add	x0, x1, #0x1
  45713c:	mov	w2, #0x78                  	// #120
  457140:	strb	w2, [x19, x1]
  457144:	add	x1, x0, #0x1
  457148:	b	457238 <nftw@plt+0x546b8>
  45714c:	ldr	x0, [x19, #256]
  457150:	cmp	x0, #0xff
  457154:	b.eq	457798 <nftw@plt+0x54c18>  // b.none
  457158:	add	x1, x0, #0x1
  45715c:	str	x1, [x19, #256]
  457160:	mov	w20, #0x69                  	// #105
  457164:	strb	w20, [x19, x0]
  457168:	strb	w20, [x19, #264]
  45716c:	cmp	x1, #0xff
  457170:	b.ne	457ac0 <nftw@plt+0x54f40>  // b.any
  457174:	ldp	x3, x2, [x19, #272]
  457178:	strb	wzr, [x19, #255]
  45717c:	mov	x0, x19
  457180:	blr	x3
  457184:	ldr	x0, [x19, #320]
  457188:	mov	w3, #0x616d                	// #24941
  45718c:	mov	w2, #0x67                  	// #103
  457190:	mov	x1, #0x3                   	// #3
  457194:	add	x0, x0, #0x1
  457198:	strh	w3, [x19]
  45719c:	strb	w2, [x19, #2]
  4571a0:	str	x0, [x19, #320]
  4571a4:	add	x0, x1, #0x1
  4571a8:	str	x0, [x19, #256]
  4571ac:	mov	w2, #0x69                  	// #105
  4571b0:	strb	w2, [x19, x1]
  4571b4:	strb	w2, [x19, #264]
  4571b8:	cmp	x0, #0xff
  4571bc:	b.ne	457b0c <nftw@plt+0x54f8c>  // b.any
  4571c0:	ldp	x3, x2, [x19, #272]
  4571c4:	strb	wzr, [x19, #255]
  4571c8:	mov	x1, x0
  4571cc:	mov	x0, x19
  4571d0:	blr	x3
  4571d4:	ldr	x0, [x19, #320]
  4571d8:	mov	w3, #0x616e                	// #24942
  4571dc:	mov	w2, #0x72                  	// #114
  4571e0:	mov	x1, #0x3                   	// #3
  4571e4:	add	x0, x0, #0x1
  4571e8:	strh	w3, [x19]
  4571ec:	strb	w2, [x19, #2]
  4571f0:	str	x0, [x19, #320]
  4571f4:	add	x0, x1, #0x1
  4571f8:	str	x0, [x19, #256]
  4571fc:	mov	w2, #0x79                  	// #121
  457200:	strb	w2, [x19, x1]
  457204:	strb	w2, [x19, #264]
  457208:	cmp	x0, #0xff
  45720c:	b.ne	457144 <nftw@plt+0x545c4>  // b.any
  457210:	ldp	x3, x2, [x19, #272]
  457214:	strb	wzr, [x19, #255]
  457218:	mov	x1, x0
  45721c:	mov	x0, x19
  457220:	blr	x3
  457224:	ldr	x2, [x19, #320]
  457228:	mov	x1, #0x1                   	// #1
  45722c:	mov	x0, #0x0                   	// #0
  457230:	add	x2, x2, x1
  457234:	str	x2, [x19, #320]
  457238:	str	x1, [x19, #256]
  45723c:	mov	w1, #0x20                  	// #32
  457240:	strb	w1, [x19, x0]
  457244:	strb	w1, [x19, #264]
  457248:	ldp	x19, x20, [sp, #16]
  45724c:	ldp	x21, x22, [sp, #32]
  457250:	ldp	x29, x30, [sp], #80
  457254:	ret
  457258:	adrp	x20, 480000 <_obstack_memory_used@@Base+0x1ebb8>
  45725c:	add	x20, x20, #0xf00
  457260:	add	x22, x20, #0x11
  457264:	ldr	x1, [x19, #256]
  457268:	str	x23, [sp, #48]
  45726c:	mov	x23, #0x1                   	// #1
  457270:	b	4572cc <nftw@plt+0x5474c>
  457274:	ldp	x3, x2, [x19, #272]
  457278:	strb	wzr, [x19, #255]
  45727c:	mov	x0, x19
  457280:	add	x20, x20, #0x1
  457284:	blr	x3
  457288:	strb	w21, [x19]
  45728c:	ldr	x0, [x19, #320]
  457290:	str	x23, [x19, #256]
  457294:	strb	w21, [x19, #264]
  457298:	cmp	x20, x22
  45729c:	add	x0, x0, #0x1
  4572a0:	str	x0, [x19, #320]
  4572a4:	b.eq	45742c <nftw@plt+0x548ac>  // b.none
  4572a8:	ldrb	w21, [x20]
  4572ac:	mov	x0, #0x1                   	// #1
  4572b0:	add	x1, x0, #0x1
  4572b4:	str	x1, [x19, #256]
  4572b8:	strb	w21, [x19, x0]
  4572bc:	add	x20, x20, #0x1
  4572c0:	strb	w21, [x19, #264]
  4572c4:	cmp	x20, x22
  4572c8:	b.eq	45742c <nftw@plt+0x548ac>  // b.none
  4572cc:	ldrb	w21, [x20]
  4572d0:	cmp	x1, #0xff
  4572d4:	b.eq	457274 <nftw@plt+0x546f4>  // b.none
  4572d8:	mov	x0, x1
  4572dc:	b	4572b0 <nftw@plt+0x54730>
  4572e0:	ldr	x0, [x19, #256]
  4572e4:	cmp	x0, #0xff
  4572e8:	b.eq	4579b4 <nftw@plt+0x54e34>  // b.none
  4572ec:	add	x1, x0, #0x1
  4572f0:	str	x1, [x19, #256]
  4572f4:	mov	w2, #0x20                  	// #32
  4572f8:	strb	w2, [x19, x0]
  4572fc:	strb	w2, [x19, #264]
  457300:	cmp	x1, #0xff
  457304:	b.ne	4580e4 <nftw@plt+0x55564>  // b.any
  457308:	ldp	x3, x2, [x19, #272]
  45730c:	strb	wzr, [x19, #255]
  457310:	mov	x0, x19
  457314:	blr	x3
  457318:	ldr	x0, [x19, #320]
  45731c:	mov	w2, #0x6f6e                	// #28526
  457320:	mov	w1, #0x65                  	// #101
  457324:	mov	x3, #0x3                   	// #3
  457328:	add	x0, x0, #0x1
  45732c:	strh	w2, [x19]
  457330:	strb	w1, [x19, #2]
  457334:	str	x0, [x19, #320]
  457338:	add	x1, x3, #0x1
  45733c:	str	x1, [x19, #256]
  457340:	mov	w0, #0x78                  	// #120
  457344:	strb	w0, [x19, x3]
  457348:	strb	w0, [x19, #264]
  45734c:	cmp	x1, #0xff
  457350:	b.ne	458134 <nftw@plt+0x555b4>  // b.any
  457354:	ldp	x3, x2, [x19, #272]
  457358:	strb	wzr, [x19, #255]
  45735c:	mov	x0, x19
  457360:	blr	x3
  457364:	ldr	x0, [x19, #320]
  457368:	mov	w2, #0x6563                	// #25955
  45736c:	mov	x1, #0x2                   	// #2
  457370:	strh	w2, [x19]
  457374:	add	x0, x0, #0x1
  457378:	str	x0, [x19, #320]
  45737c:	add	x3, x1, #0x1
  457380:	mov	w0, #0x70                  	// #112
  457384:	strb	w0, [x19, x1]
  457388:	add	x0, x3, #0x1
  45738c:	str	x0, [x19, #256]
  457390:	mov	w1, #0x74                  	// #116
  457394:	strb	w1, [x19, x3]
  457398:	strb	w1, [x19, #264]
  45739c:	ldr	x22, [x20, #16]
  4573a0:	cbz	x22, 45689c <nftw@plt+0x53d1c>
  4573a4:	cmp	x0, #0xff
  4573a8:	b.ne	456fd8 <nftw@plt+0x54458>  // b.any
  4573ac:	ldp	x3, x2, [x19, #272]
  4573b0:	strb	wzr, [x19, #255]
  4573b4:	mov	x1, x0
  4573b8:	mov	x0, x19
  4573bc:	blr	x3
  4573c0:	ldr	x0, [x19, #320]
  4573c4:	mov	x2, #0x1                   	// #1
  4573c8:	ldr	x22, [x20, #16]
  4573cc:	mov	w1, #0x28                  	// #40
  4573d0:	add	x0, x0, x2
  4573d4:	strb	w1, [x19]
  4573d8:	str	x2, [x19, #256]
  4573dc:	strb	w1, [x19, #264]
  4573e0:	str	x0, [x19, #320]
  4573e4:	cbnz	x22, 45838c <nftw@plt+0x5580c>
  4573e8:	mov	x1, x2
  4573ec:	str	w2, [x19, #304]
  4573f0:	add	x0, x1, #0x1
  4573f4:	b	457084 <nftw@plt+0x54504>
  4573f8:	ldp	x3, x2, [x19, #272]
  4573fc:	strb	wzr, [x19, #255]
  457400:	mov	x1, x0
  457404:	mov	x0, x19
  457408:	blr	x3
  45740c:	ldr	x1, [x19, #320]
  457410:	mov	w2, #0x2620                	// #9760
  457414:	mov	x0, #0x2                   	// #2
  457418:	strh	w2, [x19]
  45741c:	add	x1, x1, #0x1
  457420:	str	x1, [x19, #320]
  457424:	add	x1, x0, #0x1
  457428:	b	456d50 <nftw@plt+0x541d0>
  45742c:	ldr	x23, [sp, #48]
  457430:	b	45689c <nftw@plt+0x53d1c>
  457434:	ldp	x3, x2, [x19, #272]
  457438:	strb	wzr, [x19, #255]
  45743c:	mov	x0, x19
  457440:	blr	x3
  457444:	ldr	x2, [x19, #320]
  457448:	mov	x0, #0x1                   	// #1
  45744c:	mov	x1, #0x0                   	// #0
  457450:	add	x2, x2, x0
  457454:	str	x2, [x19, #320]
  457458:	b	456ce0 <nftw@plt+0x54160>
  45745c:	ldr	x3, [x19, #328]
  457460:	add	w0, w0, #0x1
  457464:	str	w0, [x20, #4]
  457468:	add	w1, w1, #0x1
  45746c:	add	x0, sp, #0x40
  457470:	str	w1, [x19, #308]
  457474:	str	x0, [x19, #328]
  457478:	mov	w1, w21
  45747c:	mov	x0, x19
  457480:	mov	x2, x20
  457484:	stp	x20, x3, [sp, #64]
  457488:	bl	44d138 <nftw@plt+0x4a5b8>
  45748c:	ldr	w1, [x20, #4]
  457490:	ldr	x0, [sp, #72]
  457494:	str	x0, [x19, #328]
  457498:	ldr	w0, [x19, #308]
  45749c:	sub	w1, w1, #0x1
  4574a0:	str	w1, [x20, #4]
  4574a4:	sub	w0, w0, #0x1
  4574a8:	str	w0, [x19, #308]
  4574ac:	b	45689c <nftw@plt+0x53d1c>
  4574b0:	ldp	x3, x2, [x19, #272]
  4574b4:	strb	wzr, [x19, #255]
  4574b8:	mov	x1, x0
  4574bc:	mov	x0, x19
  4574c0:	blr	x3
  4574c4:	ldr	x1, [x19, #320]
  4574c8:	mov	w3, #0x7420                	// #29728
  4574cc:	mov	w2, #0x68                  	// #104
  4574d0:	mov	x0, #0x3                   	// #3
  4574d4:	add	x1, x1, #0x1
  4574d8:	strh	w3, [x19]
  4574dc:	strb	w2, [x19, #2]
  4574e0:	str	x1, [x19, #320]
  4574e4:	add	x1, x0, #0x1
  4574e8:	str	x1, [x19, #256]
  4574ec:	mov	w2, #0x72                  	// #114
  4574f0:	strb	w2, [x19, x0]
  4574f4:	strb	w2, [x19, #264]
  4574f8:	cmp	x1, #0xff
  4574fc:	b.ne	456f7c <nftw@plt+0x543fc>  // b.any
  457500:	ldp	x3, x2, [x19, #272]
  457504:	strb	wzr, [x19, #255]
  457508:	mov	x0, x19
  45750c:	blr	x3
  457510:	mov	w1, #0x776f                	// #30575
  457514:	mov	w0, #0x77                  	// #119
  457518:	strh	w1, [x19]
  45751c:	strb	w0, [x19, #264]
  457520:	mov	x0, #0x2                   	// #2
  457524:	ldr	x1, [x19, #320]
  457528:	ldr	x22, [x20, #16]
  45752c:	add	x1, x1, #0x1
  457530:	str	x0, [x19, #256]
  457534:	str	x1, [x19, #320]
  457538:	cbnz	x22, 456fd8 <nftw@plt+0x54458>
  45753c:	b	45689c <nftw@plt+0x53d1c>
  457540:	ldp	x3, x2, [x19, #272]
  457544:	strb	wzr, [x19, #255]
  457548:	mov	x1, x0
  45754c:	mov	x0, x19
  457550:	blr	x3
  457554:	ldr	x0, [x19, #320]
  457558:	mov	w2, #0x20                  	// #32
  45755c:	mov	x1, #0x1                   	// #1
  457560:	strb	w2, [x19]
  457564:	add	x0, x0, x1
  457568:	str	x0, [x19, #320]
  45756c:	b	456cdc <nftw@plt+0x5415c>
  457570:	ldp	x3, x2, [x19, #272]
  457574:	strb	wzr, [x19, #255]
  457578:	mov	x1, x0
  45757c:	mov	x0, x19
  457580:	blr	x3
  457584:	ldr	x1, [x19, #320]
  457588:	mov	w3, #0x7220                	// #29216
  45758c:	mov	w2, #0x65                  	// #101
  457590:	mov	x0, #0x3                   	// #3
  457594:	add	x1, x1, #0x1
  457598:	strh	w3, [x19]
  45759c:	strb	w2, [x19, #2]
  4575a0:	str	x1, [x19, #320]
  4575a4:	add	x3, x0, #0x1
  4575a8:	str	x3, [x19, #256]
  4575ac:	mov	w1, #0x73                  	// #115
  4575b0:	strb	w1, [x19, x0]
  4575b4:	strb	w1, [x19, #264]
  4575b8:	cmp	x3, #0xff
  4575bc:	b.ne	4569d8 <nftw@plt+0x53e58>  // b.any
  4575c0:	ldp	x4, x2, [x19, #272]
  4575c4:	strb	wzr, [x19, #255]
  4575c8:	mov	x1, x3
  4575cc:	mov	x0, x19
  4575d0:	blr	x4
  4575d4:	ldr	x0, [x19, #320]
  4575d8:	mov	w3, #0x7274                	// #29300
  4575dc:	mov	w2, #0x69                  	// #105
  4575e0:	mov	x1, #0x3                   	// #3
  4575e4:	add	x0, x0, #0x1
  4575e8:	strh	w3, [x19]
  4575ec:	strb	w2, [x19, #2]
  4575f0:	str	x0, [x19, #320]
  4575f4:	add	x0, x1, #0x1
  4575f8:	str	x0, [x19, #256]
  4575fc:	mov	w2, #0x63                  	// #99
  457600:	strb	w2, [x19, x1]
  457604:	strb	w2, [x19, #264]
  457608:	cmp	x0, #0xff
  45760c:	b.eq	456938 <nftw@plt+0x53db8>  // b.none
  457610:	add	x1, x0, #0x1
  457614:	b	456960 <nftw@plt+0x53de0>
  457618:	ldp	x3, x2, [x19, #272]
  45761c:	strb	wzr, [x19, #255]
  457620:	mov	x1, x0
  457624:	mov	x0, x19
  457628:	blr	x3
  45762c:	ldr	x1, [x19, #320]
  457630:	mov	w3, #0x7620                	// #30240
  457634:	mov	w2, #0x6f                  	// #111
  457638:	mov	x0, #0x3                   	// #3
  45763c:	add	x1, x1, #0x1
  457640:	strh	w3, [x19]
  457644:	strb	w2, [x19, #2]
  457648:	str	x1, [x19, #320]
  45764c:	add	x3, x0, #0x1
  457650:	str	x3, [x19, #256]
  457654:	mov	w1, #0x6c                  	// #108
  457658:	strb	w1, [x19, x0]
  45765c:	strb	w1, [x19, #264]
  457660:	cmp	x3, #0xff
  457664:	b.ne	456a88 <nftw@plt+0x53f08>  // b.any
  457668:	ldp	x4, x2, [x19, #272]
  45766c:	strb	wzr, [x19, #255]
  457670:	mov	x1, x3
  457674:	mov	x0, x19
  457678:	blr	x4
  45767c:	ldr	x0, [x19, #320]
  457680:	mov	w3, #0x7461                	// #29793
  457684:	mov	w2, #0x69                  	// #105
  457688:	mov	x1, #0x3                   	// #3
  45768c:	add	x0, x0, #0x1
  457690:	strh	w3, [x19]
  457694:	strb	w2, [x19, #2]
  457698:	str	x0, [x19, #320]
  45769c:	add	x0, x1, #0x1
  4576a0:	str	x0, [x19, #256]
  4576a4:	mov	w2, #0x6c                  	// #108
  4576a8:	strb	w2, [x19, x1]
  4576ac:	strb	w2, [x19, #264]
  4576b0:	cmp	x0, #0xff
  4576b4:	b.ne	456ad8 <nftw@plt+0x53f58>  // b.any
  4576b8:	ldp	x3, x2, [x19, #272]
  4576bc:	strb	wzr, [x19, #255]
  4576c0:	mov	x1, x0
  4576c4:	mov	x0, x19
  4576c8:	blr	x3
  4576cc:	ldr	x2, [x19, #320]
  4576d0:	mov	x1, #0x1                   	// #1
  4576d4:	mov	x0, #0x0                   	// #0
  4576d8:	add	x2, x2, x1
  4576dc:	str	x2, [x19, #320]
  4576e0:	str	x1, [x19, #256]
  4576e4:	mov	w1, #0x65                  	// #101
  4576e8:	strb	w1, [x19, x0]
  4576ec:	strb	w1, [x19, #264]
  4576f0:	b	45689c <nftw@plt+0x53d1c>
  4576f4:	ldp	x3, x2, [x19, #272]
  4576f8:	strb	wzr, [x19, #255]
  4576fc:	mov	x0, x19
  457700:	blr	x3
  457704:	ldr	x2, [x19, #320]
  457708:	mov	x0, #0x1                   	// #1
  45770c:	mov	x1, #0x0                   	// #0
  457710:	add	x2, x2, x0
  457714:	str	x2, [x19, #320]
  457718:	b	456b14 <nftw@plt+0x53f94>
  45771c:	ldp	x3, x2, [x19, #272]
  457720:	strb	wzr, [x19, #255]
  457724:	mov	x1, x0
  457728:	mov	x0, x19
  45772c:	blr	x3
  457730:	ldr	x1, [x19, #320]
  457734:	mov	w3, #0x6f63                	// #28515
  457738:	mov	w2, #0x6d                  	// #109
  45773c:	mov	x0, #0x3                   	// #3
  457740:	add	x1, x1, #0x1
  457744:	strh	w3, [x19]
  457748:	strb	w2, [x19, #2]
  45774c:	str	x1, [x19, #320]
  457750:	add	x1, x0, #0x1
  457754:	str	x1, [x19, #256]
  457758:	mov	w2, #0x70                  	// #112
  45775c:	strb	w2, [x19, x0]
  457760:	strb	w2, [x19, #264]
  457764:	cmp	x1, #0xff
  457768:	b.ne	4570f0 <nftw@plt+0x54570>  // b.any
  45776c:	ldp	x3, x2, [x19, #272]
  457770:	strb	wzr, [x19, #255]
  457774:	mov	x0, x19
  457778:	blr	x3
  45777c:	ldr	x0, [x19, #320]
  457780:	mov	w2, #0x656c                	// #25964
  457784:	mov	x1, #0x2                   	// #2
  457788:	strh	w2, [x19]
  45778c:	add	x0, x0, #0x1
  457790:	str	x0, [x19, #320]
  457794:	b	457138 <nftw@plt+0x545b8>
  457798:	ldp	x3, x2, [x19, #272]
  45779c:	strb	wzr, [x19, #255]
  4577a0:	mov	x1, x0
  4577a4:	mov	x0, x19
  4577a8:	blr	x3
  4577ac:	ldr	x1, [x19, #320]
  4577b0:	mov	w3, #0x6d69                	// #28009
  4577b4:	mov	w2, #0x61                  	// #97
  4577b8:	mov	x0, #0x3                   	// #3
  4577bc:	add	x1, x1, #0x1
  4577c0:	strh	w3, [x19]
  4577c4:	strb	w2, [x19, #2]
  4577c8:	str	x1, [x19, #320]
  4577cc:	add	x1, x0, #0x1
  4577d0:	str	x1, [x19, #256]
  4577d4:	mov	w2, #0x67                  	// #103
  4577d8:	strb	w2, [x19, x0]
  4577dc:	strb	w2, [x19, #264]
  4577e0:	cmp	x1, #0xff
  4577e4:	b.ne	4571a4 <nftw@plt+0x54624>  // b.any
  4577e8:	ldp	x3, x2, [x19, #272]
  4577ec:	strb	wzr, [x19, #255]
  4577f0:	mov	x0, x19
  4577f4:	blr	x3
  4577f8:	ldr	x1, [x19, #320]
  4577fc:	mov	w3, #0x6e69                	// #28265
  457800:	mov	w2, #0x61                  	// #97
  457804:	mov	x0, #0x3                   	// #3
  457808:	add	x1, x1, #0x1
  45780c:	strh	w3, [x19]
  457810:	strb	w2, [x19, #2]
  457814:	str	x1, [x19, #320]
  457818:	add	x1, x0, #0x1
  45781c:	str	x1, [x19, #256]
  457820:	mov	w2, #0x72                  	// #114
  457824:	strb	w2, [x19, x0]
  457828:	strb	w2, [x19, #264]
  45782c:	cmp	x1, #0xff
  457830:	b.ne	4571f4 <nftw@plt+0x54674>  // b.any
  457834:	ldp	x3, x2, [x19, #272]
  457838:	strb	wzr, [x19, #255]
  45783c:	mov	x0, x19
  457840:	blr	x3
  457844:	mov	w2, #0x79                  	// #121
  457848:	ldr	x1, [x19, #320]
  45784c:	mov	x0, #0x1                   	// #1
  457850:	strb	w2, [x19]
  457854:	add	x1, x1, x0
  457858:	str	x1, [x19, #320]
  45785c:	add	x1, x0, #0x1
  457860:	b	457238 <nftw@plt+0x546b8>
  457864:	ldp	x3, x2, [x19, #272]
  457868:	strb	wzr, [x19, #255]
  45786c:	mov	x1, x0
  457870:	mov	x0, x19
  457874:	blr	x3
  457878:	ldr	x1, [x19, #320]
  45787c:	mov	w3, #0x5f20                	// #24352
  457880:	mov	w2, #0x5f                  	// #95
  457884:	mov	x0, #0x3                   	// #3
  457888:	add	x1, x1, #0x1
  45788c:	strh	w3, [x19]
  457890:	strb	w2, [x19, #2]
  457894:	str	x1, [x19, #320]
  457898:	add	x1, x0, #0x1
  45789c:	str	x1, [x19, #256]
  4578a0:	mov	w2, #0x76                  	// #118
  4578a4:	strb	w2, [x19, x0]
  4578a8:	strb	w2, [x19, #264]
  4578ac:	cmp	x1, #0xff
  4578b0:	b.ne	456dc8 <nftw@plt+0x54248>  // b.any
  4578b4:	ldp	x3, x2, [x19, #272]
  4578b8:	strb	wzr, [x19, #255]
  4578bc:	mov	x0, x19
  4578c0:	blr	x3
  4578c4:	ldr	x1, [x19, #320]
  4578c8:	mov	w3, #0x6365                	// #25445
  4578cc:	mov	w2, #0x74                  	// #116
  4578d0:	mov	x0, #0x3                   	// #3
  4578d4:	add	x1, x1, #0x1
  4578d8:	strh	w3, [x19]
  4578dc:	strb	w2, [x19, #2]
  4578e0:	str	x1, [x19, #320]
  4578e4:	add	x3, x0, #0x1
  4578e8:	str	x3, [x19, #256]
  4578ec:	mov	w1, #0x6f                  	// #111
  4578f0:	strb	w1, [x19, x0]
  4578f4:	strb	w1, [x19, #264]
  4578f8:	cmp	x3, #0xff
  4578fc:	b.ne	456e18 <nftw@plt+0x54298>  // b.any
  457900:	ldp	x4, x2, [x19, #272]
  457904:	strb	wzr, [x19, #255]
  457908:	mov	x1, x3
  45790c:	mov	x0, x19
  457910:	blr	x4
  457914:	ldr	x0, [x19, #320]
  457918:	mov	w2, #0x72                  	// #114
  45791c:	mov	x1, #0x1                   	// #1
  457920:	strb	w2, [x19]
  457924:	add	x0, x0, x1
  457928:	str	x0, [x19, #320]
  45792c:	add	x0, x1, #0x1
  457930:	b	456e58 <nftw@plt+0x542d8>
  457934:	ldp	x3, x2, [x19, #272]
  457938:	strb	wzr, [x19, #255]
  45793c:	mov	x1, x0
  457940:	mov	x0, x19
  457944:	blr	x3
  457948:	ldr	x1, [x19, #320]
  45794c:	mov	w3, #0x6320                	// #25376
  457950:	mov	w2, #0x6f                  	// #111
  457954:	mov	x0, #0x3                   	// #3
  457958:	add	x1, x1, #0x1
  45795c:	strh	w3, [x19]
  457960:	strb	w2, [x19, #2]
  457964:	str	x1, [x19, #320]
  457968:	add	x1, x0, #0x1
  45796c:	str	x1, [x19, #256]
  457970:	mov	w2, #0x6e                  	// #110
  457974:	strb	w2, [x19, x0]
  457978:	strb	w2, [x19, #264]
  45797c:	cmp	x1, #0xff
  457980:	b.ne	45691c <nftw@plt+0x53d9c>  // b.any
  457984:	ldp	x3, x2, [x19, #272]
  457988:	strb	wzr, [x19, #255]
  45798c:	mov	x0, x19
  457990:	blr	x3
  457994:	mov	w2, #0x73                  	// #115
  457998:	ldr	x1, [x19, #320]
  45799c:	mov	x0, #0x1                   	// #1
  4579a0:	strb	w2, [x19]
  4579a4:	add	x1, x1, x0
  4579a8:	str	x1, [x19, #320]
  4579ac:	add	x1, x0, #0x1
  4579b0:	b	456960 <nftw@plt+0x53de0>
  4579b4:	ldp	x3, x2, [x19, #272]
  4579b8:	strb	wzr, [x19, #255]
  4579bc:	mov	x1, x0
  4579c0:	mov	x0, x19
  4579c4:	blr	x3
  4579c8:	ldr	x1, [x19, #320]
  4579cc:	mov	w3, #0x6e20                	// #28192
  4579d0:	mov	w2, #0x6f                  	// #111
  4579d4:	mov	x0, #0x3                   	// #3
  4579d8:	add	x1, x1, #0x1
  4579dc:	strh	w3, [x19]
  4579e0:	strb	w2, [x19, #2]
  4579e4:	str	x1, [x19, #320]
  4579e8:	add	x3, x0, #0x1
  4579ec:	str	x3, [x19, #256]
  4579f0:	mov	w22, #0x65                  	// #101
  4579f4:	strb	w22, [x19, x0]
  4579f8:	strb	w22, [x19, #264]
  4579fc:	cmp	x3, #0xff
  457a00:	b.ne	457338 <nftw@plt+0x547b8>  // b.any
  457a04:	ldp	x4, x2, [x19, #272]
  457a08:	strb	wzr, [x19, #255]
  457a0c:	mov	x1, x3
  457a10:	mov	x0, x19
  457a14:	blr	x4
  457a18:	strb	w22, [x19, #2]
  457a1c:	ldr	x0, [x19, #320]
  457a20:	mov	w2, #0x6378                	// #25464
  457a24:	mov	x1, #0x3                   	// #3
  457a28:	strh	w2, [x19]
  457a2c:	add	x0, x0, #0x1
  457a30:	str	x0, [x19, #320]
  457a34:	add	x3, x1, #0x1
  457a38:	str	x3, [x19, #256]
  457a3c:	mov	w0, #0x70                  	// #112
  457a40:	strb	w0, [x19, x1]
  457a44:	strb	w0, [x19, #264]
  457a48:	cmp	x3, #0xff
  457a4c:	b.ne	457388 <nftw@plt+0x54808>  // b.any
  457a50:	ldp	x4, x2, [x19, #272]
  457a54:	strb	wzr, [x19, #255]
  457a58:	mov	x0, x19
  457a5c:	mov	x1, x3
  457a60:	blr	x4
  457a64:	mov	w0, #0x74                  	// #116
  457a68:	b	456fb0 <nftw@plt+0x54430>
  457a6c:	mov	w0, #0x1                   	// #1
  457a70:	str	w0, [x19, #304]
  457a74:	b	456c48 <nftw@plt+0x540c8>
  457a78:	mov	w1, #0x1                   	// #1
  457a7c:	str	w1, [x19, #304]
  457a80:	b	456edc <nftw@plt+0x5435c>
  457a84:	mov	w0, #0x1                   	// #1
  457a88:	str	w0, [x19, #304]
  457a8c:	b	457058 <nftw@plt+0x544d8>
  457a90:	ldp	x3, x2, [x19, #272]
  457a94:	strb	wzr, [x19, #255]
  457a98:	mov	x0, x19
  457a9c:	blr	x3
  457aa0:	ldr	x1, [x19, #320]
  457aa4:	mov	x0, #0x1                   	// #1
  457aa8:	mov	w2, #0x26                  	// #38
  457aac:	strb	w2, [x19]
  457ab0:	add	x1, x1, x0
  457ab4:	str	x1, [x19, #320]
  457ab8:	add	x1, x0, #0x1
  457abc:	b	456d50 <nftw@plt+0x541d0>
  457ac0:	add	x3, x0, #0x2
  457ac4:	str	x3, [x19, #256]
  457ac8:	mov	w2, #0x6d                  	// #109
  457acc:	strb	w2, [x19, x1]
  457ad0:	strb	w2, [x19, #264]
  457ad4:	cmp	x3, #0xff
  457ad8:	b.ne	457b64 <nftw@plt+0x54fe4>  // b.any
  457adc:	ldp	x4, x2, [x19, #272]
  457ae0:	strb	wzr, [x19, #255]
  457ae4:	mov	x1, x3
  457ae8:	mov	x0, x19
  457aec:	blr	x4
  457af0:	strb	w20, [x19, #2]
  457af4:	ldr	x1, [x19, #320]
  457af8:	mov	w2, #0x6761                	// #26465
  457afc:	mov	x0, #0x3                   	// #3
  457b00:	strh	w2, [x19]
  457b04:	add	x1, x1, #0x1
  457b08:	str	x1, [x19, #320]
  457b0c:	add	x1, x0, #0x1
  457b10:	str	x1, [x19, #256]
  457b14:	mov	w2, #0x6e                  	// #110
  457b18:	strb	w2, [x19, x0]
  457b1c:	strb	w2, [x19, #264]
  457b20:	cmp	x1, #0xff
  457b24:	b.ne	457bb4 <nftw@plt+0x55034>  // b.any
  457b28:	ldp	x3, x2, [x19, #272]
  457b2c:	strb	wzr, [x19, #255]
  457b30:	mov	x0, x19
  457b34:	blr	x3
  457b38:	ldr	x0, [x19, #320]
  457b3c:	mov	w2, #0x7261                	// #29281
  457b40:	mov	x1, #0x2                   	// #2
  457b44:	strh	w2, [x19]
  457b48:	add	x0, x0, #0x1
  457b4c:	str	x0, [x19, #320]
  457b50:	add	x0, x1, #0x1
  457b54:	mov	w2, #0x79                  	// #121
  457b58:	strb	w2, [x19, x1]
  457b5c:	add	x1, x0, #0x1
  457b60:	b	457238 <nftw@plt+0x546b8>
  457b64:	add	x0, x0, #0x3
  457b68:	str	x0, [x19, #256]
  457b6c:	mov	w1, #0x61                  	// #97
  457b70:	strb	w1, [x19, x3]
  457b74:	strb	w1, [x19, #264]
  457b78:	cmp	x0, #0xff
  457b7c:	b.ne	4577cc <nftw@plt+0x54c4c>  // b.any
  457b80:	ldp	x3, x2, [x19, #272]
  457b84:	strb	wzr, [x19, #255]
  457b88:	mov	x1, x0
  457b8c:	mov	x0, x19
  457b90:	blr	x3
  457b94:	ldr	x0, [x19, #320]
  457b98:	mov	w3, #0x6967                	// #26983
  457b9c:	mov	w2, #0x6e                  	// #110
  457ba0:	mov	x1, #0x3                   	// #3
  457ba4:	add	x0, x0, #0x1
  457ba8:	strh	w3, [x19]
  457bac:	strb	w2, [x19, #2]
  457bb0:	str	x0, [x19, #320]
  457bb4:	add	x0, x1, #0x1
  457bb8:	str	x0, [x19, #256]
  457bbc:	mov	w2, #0x61                  	// #97
  457bc0:	strb	w2, [x19, x1]
  457bc4:	strb	w2, [x19, #264]
  457bc8:	cmp	x0, #0xff
  457bcc:	b.ne	457818 <nftw@plt+0x54c98>  // b.any
  457bd0:	ldp	x3, x2, [x19, #272]
  457bd4:	strb	wzr, [x19, #255]
  457bd8:	mov	x1, x0
  457bdc:	mov	x0, x19
  457be0:	blr	x3
  457be4:	ldr	x0, [x19, #320]
  457be8:	mov	w2, #0x72                  	// #114
  457bec:	mov	x1, #0x1                   	// #1
  457bf0:	strb	w2, [x19]
  457bf4:	add	x0, x0, x1
  457bf8:	str	x0, [x19, #320]
  457bfc:	b	457b50 <nftw@plt+0x54fd0>
  457c00:	add	x3, x0, #0x2
  457c04:	str	x3, [x19, #256]
  457c08:	mov	w2, #0x5f                  	// #95
  457c0c:	strb	w2, [x19, x1]
  457c10:	strb	w2, [x19, #264]
  457c14:	cmp	x3, #0xff
  457c18:	b.ne	457d04 <nftw@plt+0x55184>  // b.any
  457c1c:	ldp	x4, x2, [x19, #272]
  457c20:	strb	wzr, [x19, #255]
  457c24:	mov	x1, x3
  457c28:	mov	x0, x19
  457c2c:	blr	x4
  457c30:	ldr	x1, [x19, #320]
  457c34:	mov	w3, #0x765f                	// #30303
  457c38:	mov	w2, #0x65                  	// #101
  457c3c:	mov	x0, #0x3                   	// #3
  457c40:	add	x1, x1, #0x1
  457c44:	strh	w3, [x19]
  457c48:	strb	w2, [x19, #2]
  457c4c:	str	x1, [x19, #320]
  457c50:	add	x1, x0, #0x1
  457c54:	str	x1, [x19, #256]
  457c58:	mov	w2, #0x63                  	// #99
  457c5c:	strb	w2, [x19, x0]
  457c60:	strb	w2, [x19, #264]
  457c64:	cmp	x1, #0xff
  457c68:	b.ne	457d50 <nftw@plt+0x551d0>  // b.any
  457c6c:	ldp	x3, x2, [x19, #272]
  457c70:	strb	wzr, [x19, #255]
  457c74:	mov	x0, x19
  457c78:	blr	x3
  457c7c:	ldr	x0, [x19, #320]
  457c80:	mov	w1, #0x6f74                	// #28532
  457c84:	mov	x2, #0x2                   	// #2
  457c88:	strh	w1, [x19]
  457c8c:	add	x0, x0, #0x1
  457c90:	str	x0, [x19, #320]
  457c94:	mov	w0, #0x72                  	// #114
  457c98:	add	x1, x2, #0x1
  457c9c:	strb	w0, [x19, x2]
  457ca0:	add	x0, x1, #0x1
  457ca4:	b	456e58 <nftw@plt+0x542d8>
  457ca8:	add	x3, x0, #0x2
  457cac:	str	x3, [x19, #256]
  457cb0:	mov	w2, #0x63                  	// #99
  457cb4:	strb	w2, [x19, x1]
  457cb8:	strb	w2, [x19, #264]
  457cbc:	cmp	x3, #0xff
  457cc0:	b.ne	457d9c <nftw@plt+0x5521c>  // b.any
  457cc4:	ldp	x4, x2, [x19, #272]
  457cc8:	strb	wzr, [x19, #255]
  457ccc:	mov	x1, x3
  457cd0:	mov	x0, x19
  457cd4:	blr	x4
  457cd8:	ldr	x0, [x19, #320]
  457cdc:	mov	w2, #0x6e6f                	// #28271
  457ce0:	mov	x1, #0x2                   	// #2
  457ce4:	strh	w2, [x19]
  457ce8:	add	x0, x0, #0x1
  457cec:	str	x0, [x19, #320]
  457cf0:	add	x0, x1, #0x1
  457cf4:	mov	w2, #0x73                  	// #115
  457cf8:	strb	w2, [x19, x1]
  457cfc:	add	x1, x0, #0x1
  457d00:	b	456960 <nftw@plt+0x53de0>
  457d04:	add	x0, x0, #0x3
  457d08:	str	x0, [x19, #256]
  457d0c:	strb	w2, [x19, x3]
  457d10:	cmp	x0, #0xff
  457d14:	strb	w2, [x19, #264]
  457d18:	b.ne	457898 <nftw@plt+0x54d18>  // b.any
  457d1c:	ldp	x3, x2, [x19, #272]
  457d20:	strb	wzr, [x19, #255]
  457d24:	mov	x1, x0
  457d28:	mov	x0, x19
  457d2c:	blr	x3
  457d30:	ldr	x0, [x19, #320]
  457d34:	mov	w3, #0x6576                	// #25974
  457d38:	mov	w2, #0x63                  	// #99
  457d3c:	mov	x1, #0x3                   	// #3
  457d40:	add	x0, x0, #0x1
  457d44:	strh	w3, [x19]
  457d48:	strb	w2, [x19, #2]
  457d4c:	str	x0, [x19, #320]
  457d50:	add	x0, x1, #0x1
  457d54:	str	x0, [x19, #256]
  457d58:	mov	w2, #0x74                  	// #116
  457d5c:	strb	w2, [x19, x1]
  457d60:	strb	w2, [x19, #264]
  457d64:	cmp	x0, #0xff
  457d68:	b.ne	4578e4 <nftw@plt+0x54d64>  // b.any
  457d6c:	ldp	x3, x2, [x19, #272]
  457d70:	strb	wzr, [x19, #255]
  457d74:	mov	x1, x0
  457d78:	mov	x0, x19
  457d7c:	blr	x3
  457d80:	ldr	x0, [x19, #320]
  457d84:	mov	w1, #0x6f                  	// #111
  457d88:	mov	x2, #0x1                   	// #1
  457d8c:	strb	w1, [x19]
  457d90:	add	x0, x0, x2
  457d94:	str	x0, [x19, #320]
  457d98:	b	457c94 <nftw@plt+0x55114>
  457d9c:	add	x0, x0, #0x3
  457da0:	str	x0, [x19, #256]
  457da4:	mov	w1, #0x6f                  	// #111
  457da8:	strb	w1, [x19, x3]
  457dac:	strb	w1, [x19, #264]
  457db0:	cmp	x0, #0xff
  457db4:	b.ne	457968 <nftw@plt+0x54de8>  // b.any
  457db8:	ldp	x3, x2, [x19, #272]
  457dbc:	strb	wzr, [x19, #255]
  457dc0:	mov	x1, x0
  457dc4:	mov	x0, x19
  457dc8:	blr	x3
  457dcc:	ldr	x0, [x19, #320]
  457dd0:	mov	w2, #0x6e                  	// #110
  457dd4:	mov	x1, #0x1                   	// #1
  457dd8:	strb	w2, [x19]
  457ddc:	add	x0, x0, x1
  457de0:	str	x0, [x19, #320]
  457de4:	b	457cf0 <nftw@plt+0x55170>
  457de8:	add	x3, x0, #0x2
  457dec:	str	x3, [x19, #256]
  457df0:	mov	w20, #0x72                  	// #114
  457df4:	strb	w20, [x19, x1]
  457df8:	strb	w20, [x19, #264]
  457dfc:	cmp	x3, #0xff
  457e00:	b.ne	457e84 <nftw@plt+0x55304>  // b.any
  457e04:	ldp	x4, x2, [x19, #272]
  457e08:	strb	wzr, [x19, #255]
  457e0c:	mov	x1, x3
  457e10:	mov	x0, x19
  457e14:	blr	x4
  457e18:	ldr	x0, [x19, #320]
  457e1c:	mov	w3, #0x7365                	// #29541
  457e20:	mov	w2, #0x74                  	// #116
  457e24:	mov	x1, #0x3                   	// #3
  457e28:	add	x0, x0, #0x1
  457e2c:	strh	w3, [x19]
  457e30:	strb	w2, [x19, #2]
  457e34:	str	x0, [x19, #320]
  457e38:	add	x0, x1, #0x1
  457e3c:	str	x0, [x19, #256]
  457e40:	mov	w2, #0x72                  	// #114
  457e44:	strb	w2, [x19, x1]
  457e48:	strb	w2, [x19, #264]
  457e4c:	cmp	x0, #0xff
  457e50:	b.ne	457ed0 <nftw@plt+0x55350>  // b.any
  457e54:	ldp	x3, x2, [x19, #272]
  457e58:	strb	wzr, [x19, #255]
  457e5c:	mov	x1, x0
  457e60:	mov	x0, x19
  457e64:	blr	x3
  457e68:	ldr	x0, [x19, #320]
  457e6c:	mov	w2, #0x69                  	// #105
  457e70:	mov	x1, #0x1                   	// #1
  457e74:	strb	w2, [x19]
  457e78:	add	x0, x0, x1
  457e7c:	str	x0, [x19, #320]
  457e80:	b	456a1c <nftw@plt+0x53e9c>
  457e84:	add	x0, x0, #0x3
  457e88:	str	x0, [x19, #256]
  457e8c:	mov	w1, #0x65                  	// #101
  457e90:	strb	w1, [x19, x3]
  457e94:	strb	w1, [x19, #264]
  457e98:	cmp	x0, #0xff
  457e9c:	b.ne	4575a4 <nftw@plt+0x54a24>  // b.any
  457ea0:	ldp	x3, x2, [x19, #272]
  457ea4:	strb	wzr, [x19, #255]
  457ea8:	mov	x1, x0
  457eac:	mov	x0, x19
  457eb0:	blr	x3
  457eb4:	strb	w20, [x19, #2]
  457eb8:	ldr	x1, [x19, #320]
  457ebc:	mov	w2, #0x7473                	// #29811
  457ec0:	mov	x0, #0x3                   	// #3
  457ec4:	strh	w2, [x19]
  457ec8:	add	x1, x1, #0x1
  457ecc:	str	x1, [x19, #320]
  457ed0:	add	x1, x0, #0x1
  457ed4:	str	x1, [x19, #256]
  457ed8:	mov	w2, #0x69                  	// #105
  457edc:	strb	w2, [x19, x0]
  457ee0:	strb	w2, [x19, #264]
  457ee4:	cmp	x1, #0xff
  457ee8:	b.ne	4575f4 <nftw@plt+0x54a74>  // b.any
  457eec:	ldp	x3, x2, [x19, #272]
  457ef0:	strb	wzr, [x19, #255]
  457ef4:	mov	x0, x19
  457ef8:	blr	x3
  457efc:	mov	w2, #0x63                  	// #99
  457f00:	b	457998 <nftw@plt+0x54e18>
  457f04:	add	x3, x0, #0x2
  457f08:	str	x3, [x19, #256]
  457f0c:	mov	w2, #0x6f                  	// #111
  457f10:	strb	w2, [x19, x1]
  457f14:	strb	w2, [x19, #264]
  457f18:	cmp	x3, #0xff
  457f1c:	b.ne	458180 <nftw@plt+0x55600>  // b.any
  457f20:	ldp	x4, x2, [x19, #272]
  457f24:	strb	wzr, [x19, #255]
  457f28:	mov	x1, x3
  457f2c:	mov	x0, x19
  457f30:	blr	x4
  457f34:	ldr	x1, [x19, #320]
  457f38:	mov	w3, #0x706d                	// #28781
  457f3c:	mov	w2, #0x6c                  	// #108
  457f40:	mov	x0, #0x3                   	// #3
  457f44:	add	x1, x1, #0x1
  457f48:	strh	w3, [x19]
  457f4c:	strb	w2, [x19, #2]
  457f50:	str	x1, [x19, #320]
  457f54:	add	x1, x0, #0x1
  457f58:	str	x1, [x19, #256]
  457f5c:	mov	w2, #0x65                  	// #101
  457f60:	strb	w2, [x19, x0]
  457f64:	strb	w2, [x19, #264]
  457f68:	cmp	x1, #0xff
  457f6c:	b.ne	4581d0 <nftw@plt+0x55650>  // b.any
  457f70:	ldp	x3, x2, [x19, #272]
  457f74:	strb	wzr, [x19, #255]
  457f78:	mov	x0, x19
  457f7c:	blr	x3
  457f80:	mov	w2, #0x78                  	// #120
  457f84:	b	457848 <nftw@plt+0x54cc8>
  457f88:	add	x3, x0, #0x2
  457f8c:	str	x3, [x19, #256]
  457f90:	mov	w2, #0x74                  	// #116
  457f94:	strb	w2, [x19, x1]
  457f98:	strb	w2, [x19, #264]
  457f9c:	cmp	x3, #0xff
  457fa0:	b.ne	457ffc <nftw@plt+0x5547c>  // b.any
  457fa4:	ldp	x4, x2, [x19, #272]
  457fa8:	strb	wzr, [x19, #255]
  457fac:	mov	x1, x3
  457fb0:	mov	x0, x19
  457fb4:	blr	x4
  457fb8:	ldr	x0, [x19, #320]
  457fbc:	mov	w2, #0x7268                	// #29288
  457fc0:	mov	x1, #0x2                   	// #2
  457fc4:	strh	w2, [x19]
  457fc8:	add	x0, x0, #0x1
  457fcc:	str	x0, [x19, #320]
  457fd0:	add	x3, x1, #0x1
  457fd4:	mov	w0, #0x6f                  	// #111
  457fd8:	strb	w0, [x19, x1]
  457fdc:	add	x0, x3, #0x1
  457fe0:	str	x0, [x19, #256]
  457fe4:	mov	w1, #0x77                  	// #119
  457fe8:	strb	w1, [x19, x3]
  457fec:	strb	w1, [x19, #264]
  457ff0:	ldr	x22, [x20, #16]
  457ff4:	cbnz	x22, 4573a4 <nftw@plt+0x54824>
  457ff8:	b	45689c <nftw@plt+0x53d1c>
  457ffc:	add	x0, x0, #0x3
  458000:	str	x0, [x19, #256]
  458004:	mov	w1, #0x68                  	// #104
  458008:	strb	w1, [x19, x3]
  45800c:	strb	w1, [x19, #264]
  458010:	cmp	x0, #0xff
  458014:	b.ne	4574e4 <nftw@plt+0x54964>  // b.any
  458018:	ldp	x3, x2, [x19, #272]
  45801c:	strb	wzr, [x19, #255]
  458020:	mov	x1, x0
  458024:	mov	x0, x19
  458028:	blr	x3
  45802c:	ldr	x0, [x19, #320]
  458030:	mov	w2, #0x72                  	// #114
  458034:	mov	x1, #0x1                   	// #1
  458038:	strb	w2, [x19]
  45803c:	add	x0, x0, x1
  458040:	str	x0, [x19, #320]
  458044:	b	457fd0 <nftw@plt+0x55450>
  458048:	add	x3, x0, #0x2
  45804c:	str	x3, [x19, #256]
  458050:	mov	w2, #0x76                  	// #118
  458054:	strb	w2, [x19, x1]
  458058:	strb	w2, [x19, #264]
  45805c:	cmp	x3, #0xff
  458060:	b.ne	45827c <nftw@plt+0x556fc>  // b.any
  458064:	ldp	x4, x2, [x19, #272]
  458068:	strb	wzr, [x19, #255]
  45806c:	mov	x1, x3
  458070:	mov	x0, x19
  458074:	blr	x4
  458078:	ldr	x0, [x19, #320]
  45807c:	mov	w3, #0x6c6f                	// #27759
  458080:	mov	w2, #0x61                  	// #97
  458084:	mov	x1, #0x3                   	// #3
  458088:	add	x0, x0, #0x1
  45808c:	strh	w3, [x19]
  458090:	strb	w2, [x19, #2]
  458094:	str	x0, [x19, #320]
  458098:	add	x0, x1, #0x1
  45809c:	str	x0, [x19, #256]
  4580a0:	mov	w2, #0x74                  	// #116
  4580a4:	strb	w2, [x19, x1]
  4580a8:	strb	w2, [x19, #264]
  4580ac:	cmp	x0, #0xff
  4580b0:	b.ne	4582cc <nftw@plt+0x5574c>  // b.any
  4580b4:	ldp	x3, x2, [x19, #272]
  4580b8:	strb	wzr, [x19, #255]
  4580bc:	mov	x1, x0
  4580c0:	mov	x0, x19
  4580c4:	blr	x3
  4580c8:	ldr	x0, [x19, #320]
  4580cc:	mov	w2, #0x69                  	// #105
  4580d0:	mov	x1, #0x1                   	// #1
  4580d4:	strb	w2, [x19]
  4580d8:	add	x0, x0, x1
  4580dc:	str	x0, [x19, #320]
  4580e0:	b	456acc <nftw@plt+0x53f4c>
  4580e4:	add	x3, x0, #0x2
  4580e8:	str	x3, [x19, #256]
  4580ec:	mov	w2, #0x6e                  	// #110
  4580f0:	strb	w2, [x19, x1]
  4580f4:	strb	w2, [x19, #264]
  4580f8:	cmp	x3, #0xff
  4580fc:	b.ne	4581f4 <nftw@plt+0x55674>  // b.any
  458100:	ldp	x4, x2, [x19, #272]
  458104:	strb	wzr, [x19, #255]
  458108:	mov	x1, x3
  45810c:	mov	x0, x19
  458110:	blr	x4
  458114:	ldr	x0, [x19, #320]
  458118:	mov	w3, #0x656f                	// #25967
  45811c:	mov	w2, #0x78                  	// #120
  458120:	mov	x1, #0x3                   	// #3
  458124:	add	x0, x0, #0x1
  458128:	strh	w3, [x19]
  45812c:	strb	w2, [x19, #2]
  458130:	str	x0, [x19, #320]
  458134:	add	x0, x1, #0x1
  458138:	str	x0, [x19, #256]
  45813c:	mov	w2, #0x63                  	// #99
  458140:	strb	w2, [x19, x1]
  458144:	strb	w2, [x19, #264]
  458148:	cmp	x0, #0xff
  45814c:	b.ne	458244 <nftw@plt+0x556c4>  // b.any
  458150:	ldp	x3, x2, [x19, #272]
  458154:	strb	wzr, [x19, #255]
  458158:	mov	x1, x0
  45815c:	mov	x0, x19
  458160:	blr	x3
  458164:	ldr	x0, [x19, #320]
  458168:	mov	w2, #0x65                  	// #101
  45816c:	mov	x1, #0x1                   	// #1
  458170:	strb	w2, [x19]
  458174:	add	x0, x0, x1
  458178:	str	x0, [x19, #320]
  45817c:	b	45737c <nftw@plt+0x547fc>
  458180:	add	x0, x0, #0x3
  458184:	str	x0, [x19, #256]
  458188:	mov	w1, #0x6d                  	// #109
  45818c:	strb	w1, [x19, x3]
  458190:	strb	w1, [x19, #264]
  458194:	cmp	x0, #0xff
  458198:	b.ne	457750 <nftw@plt+0x54bd0>  // b.any
  45819c:	ldp	x3, x2, [x19, #272]
  4581a0:	strb	wzr, [x19, #255]
  4581a4:	mov	x1, x0
  4581a8:	mov	x0, x19
  4581ac:	blr	x3
  4581b0:	ldr	x0, [x19, #320]
  4581b4:	mov	w3, #0x6c70                	// #27760
  4581b8:	mov	w2, #0x65                  	// #101
  4581bc:	mov	x1, #0x3                   	// #3
  4581c0:	add	x0, x0, #0x1
  4581c4:	strh	w3, [x19]
  4581c8:	strb	w2, [x19, #2]
  4581cc:	str	x0, [x19, #320]
  4581d0:	add	x0, x1, #0x1
  4581d4:	str	x0, [x19, #256]
  4581d8:	mov	w2, #0x78                  	// #120
  4581dc:	strb	w2, [x19, x1]
  4581e0:	strb	w2, [x19, #264]
  4581e4:	cmp	x0, #0xff
  4581e8:	b.eq	457210 <nftw@plt+0x54690>  // b.none
  4581ec:	add	x1, x0, #0x1
  4581f0:	b	457238 <nftw@plt+0x546b8>
  4581f4:	add	x0, x0, #0x3
  4581f8:	str	x0, [x19, #256]
  4581fc:	mov	w1, #0x6f                  	// #111
  458200:	strb	w1, [x19, x3]
  458204:	strb	w1, [x19, #264]
  458208:	cmp	x0, #0xff
  45820c:	b.ne	4579e8 <nftw@plt+0x54e68>  // b.any
  458210:	ldp	x3, x2, [x19, #272]
  458214:	strb	wzr, [x19, #255]
  458218:	mov	x1, x0
  45821c:	mov	x0, x19
  458220:	blr	x3
  458224:	ldr	x1, [x19, #320]
  458228:	mov	w3, #0x7865                	// #30821
  45822c:	mov	w2, #0x63                  	// #99
  458230:	mov	x0, #0x3                   	// #3
  458234:	add	x1, x1, #0x1
  458238:	strh	w3, [x19]
  45823c:	strb	w2, [x19, #2]
  458240:	str	x1, [x19, #320]
  458244:	add	x1, x0, #0x1
  458248:	str	x1, [x19, #256]
  45824c:	mov	w2, #0x65                  	// #101
  458250:	strb	w2, [x19, x0]
  458254:	strb	w2, [x19, #264]
  458258:	cmp	x1, #0xff
  45825c:	b.ne	457a34 <nftw@plt+0x54eb4>  // b.any
  458260:	ldp	x3, x2, [x19, #272]
  458264:	strb	wzr, [x19, #255]
  458268:	mov	x0, x19
  45826c:	blr	x3
  458270:	mov	w1, #0x7470                	// #29808
  458274:	mov	w0, #0x74                  	// #116
  458278:	b	457518 <nftw@plt+0x54998>
  45827c:	add	x0, x0, #0x3
  458280:	str	x0, [x19, #256]
  458284:	mov	w1, #0x6f                  	// #111
  458288:	strb	w1, [x19, x3]
  45828c:	strb	w1, [x19, #264]
  458290:	cmp	x0, #0xff
  458294:	b.ne	45764c <nftw@plt+0x54acc>  // b.any
  458298:	ldp	x3, x2, [x19, #272]
  45829c:	strb	wzr, [x19, #255]
  4582a0:	mov	x1, x0
  4582a4:	mov	x0, x19
  4582a8:	blr	x3
  4582ac:	ldr	x1, [x19, #320]
  4582b0:	mov	w3, #0x616c                	// #24940
  4582b4:	mov	w2, #0x74                  	// #116
  4582b8:	mov	x0, #0x3                   	// #3
  4582bc:	add	x1, x1, #0x1
  4582c0:	strh	w3, [x19]
  4582c4:	strb	w2, [x19, #2]
  4582c8:	str	x1, [x19, #320]
  4582cc:	add	x1, x0, #0x1
  4582d0:	str	x1, [x19, #256]
  4582d4:	mov	w2, #0x69                  	// #105
  4582d8:	strb	w2, [x19, x0]
  4582dc:	strb	w2, [x19, #264]
  4582e0:	cmp	x1, #0xff
  4582e4:	b.ne	45769c <nftw@plt+0x54b1c>  // b.any
  4582e8:	ldp	x3, x2, [x19, #272]
  4582ec:	strb	wzr, [x19, #255]
  4582f0:	mov	x0, x19
  4582f4:	blr	x3
  4582f8:	ldr	x1, [x19, #320]
  4582fc:	mov	x0, #0x1                   	// #1
  458300:	mov	w2, #0x6c                  	// #108
  458304:	strb	w2, [x19]
  458308:	add	x1, x1, x0
  45830c:	str	x1, [x19, #320]
  458310:	add	x1, x0, #0x1
  458314:	b	4576e0 <nftw@plt+0x54b60>
  458318:	add	x0, x0, #0x2
  45831c:	str	x0, [x19, #256]
  458320:	strb	w20, [x19, x1]
  458324:	cmp	x0, #0xff
  458328:	strb	w20, [x19, #264]
  45832c:	b.ne	456c94 <nftw@plt+0x54114>  // b.any
  458330:	ldp	x3, x2, [x19, #272]
  458334:	strb	wzr, [x19, #255]
  458338:	mov	x1, x0
  45833c:	mov	x0, x19
  458340:	blr	x3
  458344:	ldr	x2, [x19, #320]
  458348:	mov	x1, #0x1                   	// #1
  45834c:	mov	x0, #0x0                   	// #0
  458350:	add	x2, x2, x1
  458354:	str	x2, [x19, #320]
  458358:	b	456c98 <nftw@plt+0x54118>
  45835c:	ldp	x3, x2, [x19, #272]
  458360:	strb	wzr, [x19, #255]
  458364:	mov	x1, x0
  458368:	mov	x0, x19
  45836c:	blr	x3
  458370:	ldr	x1, [x19, #320]
  458374:	mov	w2, #0x3a3a                	// #14906
  458378:	mov	x0, #0x2                   	// #2
  45837c:	strh	w2, [x19]
  458380:	add	x1, x1, #0x1
  458384:	str	x1, [x19, #320]
  458388:	b	456c94 <nftw@plt+0x54114>
  45838c:	ldr	w0, [x22, #4]
  458390:	mov	x1, x2
  458394:	cmp	w0, #0x1
  458398:	b.le	456ff8 <nftw@plt+0x54478>
  45839c:	add	x0, x1, #0x1
  4583a0:	str	w2, [x19, #304]
  4583a4:	b	457084 <nftw@plt+0x54504>
  4583a8:	cbz	x2, 45892c <nftw@plt+0x55dac>
  4583ac:	stp	x29, x30, [sp, #-112]!
  4583b0:	mov	x29, sp
  4583b4:	stp	x19, x20, [sp, #16]
  4583b8:	mov	x20, x0
  4583bc:	mov	x19, x2
  4583c0:	stp	x21, x22, [sp, #32]
  4583c4:	mov	w21, w1
  4583c8:	mov	w22, #0x1                   	// #1
  4583cc:	stp	x25, x26, [sp, #64]
  4583d0:	cbnz	w3, 4584c4 <nftw@plt+0x55944>
  4583d4:	mov	x22, #0x1f                  	// #31
  4583d8:	stp	x23, x24, [sp, #48]
  4583dc:	movk	x22, #0x1a, lsl #48
  4583e0:	mov	w24, #0x1                   	// #1
  4583e4:	mov	x23, #0x1                   	// #1
  4583e8:	b	458450 <nftw@plt+0x558d0>
  4583ec:	ldr	w2, [x19, #16]
  4583f0:	cbnz	w2, 458448 <nftw@plt+0x558c8>
  4583f4:	ldr	x4, [x19, #8]
  4583f8:	mov	x2, x4
  4583fc:	ldr	w5, [x4]
  458400:	sub	w3, w5, #0x1c
  458404:	cmp	w3, #0x34
  458408:	b.hi	458418 <nftw@plt+0x55898>  // b.pmore
  45840c:	lsl	x3, x23, x3
  458410:	tst	x3, x22
  458414:	b.ne	458448 <nftw@plt+0x558c8>  // b.any
  458418:	ldr	x3, [x19, #24]
  45841c:	cmp	w5, #0x29
  458420:	ldr	x25, [x20, #288]
  458424:	str	w24, [x19, #16]
  458428:	str	x3, [x20, #288]
  45842c:	b.eq	4584e8 <nftw@plt+0x55968>  // b.none
  458430:	cmp	w5, #0x2a
  458434:	b.eq	458518 <nftw@plt+0x55998>  // b.none
  458438:	cmp	w5, #0x2
  45843c:	b.eq	45854c <nftw@plt+0x559cc>  // b.none
  458440:	bl	456850 <nftw@plt+0x53cd0>
  458444:	str	x25, [x20, #288]
  458448:	ldr	x19, [x19]
  45844c:	cbz	x19, 458460 <nftw@plt+0x558e0>
  458450:	ldr	w2, [x20, #304]
  458454:	mov	w1, w21
  458458:	mov	x0, x20
  45845c:	cbz	w2, 4583ec <nftw@plt+0x5586c>
  458460:	ldp	x23, x24, [sp, #48]
  458464:	ldp	x19, x20, [sp, #16]
  458468:	ldp	x21, x22, [sp, #32]
  45846c:	ldp	x25, x26, [sp, #64]
  458470:	ldp	x29, x30, [sp], #112
  458474:	ret
  458478:	ldr	w2, [x19, #16]
  45847c:	cbnz	w2, 4584bc <nftw@plt+0x5593c>
  458480:	ldr	x4, [x19, #8]
  458484:	ldr	x5, [x19, #24]
  458488:	mov	x2, x4
  45848c:	ldr	w3, [x4]
  458490:	ldr	x25, [x20, #288]
  458494:	str	w22, [x19, #16]
  458498:	str	x5, [x20, #288]
  45849c:	cmp	w3, #0x29
  4584a0:	b.eq	4584ec <nftw@plt+0x5596c>  // b.none
  4584a4:	cmp	w3, #0x2a
  4584a8:	b.eq	45851c <nftw@plt+0x5599c>  // b.none
  4584ac:	cmp	w3, #0x2
  4584b0:	b.eq	458548 <nftw@plt+0x559c8>  // b.none
  4584b4:	bl	456850 <nftw@plt+0x53cd0>
  4584b8:	str	x25, [x20, #288]
  4584bc:	ldr	x19, [x19]
  4584c0:	cbz	x19, 458464 <nftw@plt+0x558e4>
  4584c4:	ldr	w2, [x20, #304]
  4584c8:	mov	w1, w21
  4584cc:	mov	x0, x20
  4584d0:	cbz	w2, 458478 <nftw@plt+0x558f8>
  4584d4:	ldp	x19, x20, [sp, #16]
  4584d8:	ldp	x21, x22, [sp, #32]
  4584dc:	ldp	x25, x26, [sp, #64]
  4584e0:	ldp	x29, x30, [sp], #112
  4584e4:	ret
  4584e8:	ldp	x23, x24, [sp, #48]
  4584ec:	mov	w1, w21
  4584f0:	ldr	x3, [x19]
  4584f4:	mov	x0, x20
  4584f8:	add	x2, x4, #0x10
  4584fc:	bl	459040 <nftw@plt+0x564c0>
  458500:	str	x25, [x20, #288]
  458504:	ldp	x19, x20, [sp, #16]
  458508:	ldp	x21, x22, [sp, #32]
  45850c:	ldp	x25, x26, [sp, #64]
  458510:	ldp	x29, x30, [sp], #112
  458514:	ret
  458518:	ldp	x23, x24, [sp, #48]
  45851c:	mov	w1, w21
  458520:	ldr	x3, [x19]
  458524:	mov	x0, x20
  458528:	add	x2, x4, #0x8
  45852c:	bl	458d10 <nftw@plt+0x56190>
  458530:	str	x25, [x20, #288]
  458534:	ldp	x19, x20, [sp, #16]
  458538:	ldp	x21, x22, [sp, #32]
  45853c:	ldp	x25, x26, [sp, #64]
  458540:	ldp	x29, x30, [sp], #112
  458544:	ret
  458548:	stp	x23, x24, [sp, #48]
  45854c:	ldr	x22, [x4, #8]
  458550:	ldr	x23, [x20, #296]
  458554:	str	xzr, [x20, #296]
  458558:	cbz	x22, 458574 <nftw@plt+0x559f4>
  45855c:	ldr	w0, [x22, #4]
  458560:	cmp	w0, #0x1
  458564:	b.gt	458574 <nftw@plt+0x559f4>
  458568:	ldr	w1, [x20, #308]
  45856c:	cmp	w1, #0x400
  458570:	b.le	4586a0 <nftw@plt+0x55b20>
  458574:	mov	w0, #0x1                   	// #1
  458578:	str	w0, [x20, #304]
  45857c:	str	x23, [x20, #296]
  458580:	ldr	x0, [x20, #256]
  458584:	tbz	w21, #2, 4586f4 <nftw@plt+0x55b74>
  458588:	add	x3, x0, #0x1
  45858c:	cmp	x0, #0xff
  458590:	b.ne	4585bc <nftw@plt+0x55a3c>  // b.any
  458594:	ldp	x3, x2, [x20, #272]
  458598:	strb	wzr, [x20, #255]
  45859c:	mov	x1, x0
  4585a0:	mov	x0, x20
  4585a4:	blr	x3
  4585a8:	ldr	x1, [x20, #320]
  4585ac:	mov	x3, #0x1                   	// #1
  4585b0:	mov	x0, #0x0                   	// #0
  4585b4:	add	x1, x1, x3
  4585b8:	str	x1, [x20, #320]
  4585bc:	str	x3, [x20, #256]
  4585c0:	mov	w1, #0x2e                  	// #46
  4585c4:	strb	w1, [x20, x0]
  4585c8:	strb	w1, [x20, #264]
  4585cc:	ldr	x0, [x19, #8]
  4585d0:	ldr	x22, [x0, #16]
  4585d4:	ldr	w0, [x22]
  4585d8:	cmp	w0, #0x47
  4585dc:	b.eq	458784 <nftw@plt+0x55c04>  // b.none
  4585e0:	mov	x1, #0x1f                  	// #31
  4585e4:	mov	x2, #0x1                   	// #1
  4585e8:	movk	x1, #0x1a, lsl #48
  4585ec:	sub	w0, w0, #0x1c
  4585f0:	cmp	w0, #0x34
  4585f4:	b.hi	458604 <nftw@plt+0x55a84>  // b.pmore
  4585f8:	lsl	x0, x2, x0
  4585fc:	tst	x0, x1
  458600:	b.ne	458640 <nftw@plt+0x55ac0>  // b.any
  458604:	ldr	w0, [x22, #4]
  458608:	cmp	w0, #0x1
  45860c:	b.gt	45861c <nftw@plt+0x55a9c>
  458610:	ldr	w1, [x20, #308]
  458614:	cmp	w1, #0x400
  458618:	b.le	45864c <nftw@plt+0x55acc>
  45861c:	mov	w0, #0x1                   	// #1
  458620:	str	w0, [x20, #304]
  458624:	ldp	x23, x24, [sp, #48]
  458628:	str	x25, [x20, #288]
  45862c:	ldp	x19, x20, [sp, #16]
  458630:	ldp	x21, x22, [sp, #32]
  458634:	ldp	x25, x26, [sp, #64]
  458638:	ldp	x29, x30, [sp], #112
  45863c:	ret
  458640:	ldr	x22, [x22, #8]
  458644:	ldr	w0, [x22]
  458648:	b	4585ec <nftw@plt+0x55a6c>
  45864c:	ldr	x3, [x20, #328]
  458650:	add	w0, w0, #0x1
  458654:	str	w0, [x22, #4]
  458658:	add	w1, w1, #0x1
  45865c:	add	x0, sp, #0x50
  458660:	str	w1, [x20, #308]
  458664:	str	x0, [x20, #328]
  458668:	mov	w1, w21
  45866c:	mov	x0, x20
  458670:	mov	x2, x22
  458674:	stp	x22, x3, [sp, #80]
  458678:	bl	44d138 <nftw@plt+0x4a5b8>
  45867c:	ldr	w1, [x22, #4]
  458680:	ldr	x0, [sp, #88]
  458684:	str	x0, [x20, #328]
  458688:	ldr	w0, [x20, #308]
  45868c:	sub	w1, w1, #0x1
  458690:	str	w1, [x22, #4]
  458694:	sub	w0, w0, #0x1
  458698:	str	w0, [x20, #308]
  45869c:	b	458624 <nftw@plt+0x55aa4>
  4586a0:	ldr	x3, [x20, #328]
  4586a4:	add	w0, w0, #0x1
  4586a8:	str	w0, [x22, #4]
  4586ac:	add	w1, w1, #0x1
  4586b0:	add	x0, sp, #0x50
  4586b4:	str	w1, [x20, #308]
  4586b8:	str	x0, [x20, #328]
  4586bc:	mov	w1, w21
  4586c0:	mov	x0, x20
  4586c4:	mov	x2, x22
  4586c8:	stp	x22, x3, [sp, #80]
  4586cc:	bl	44d138 <nftw@plt+0x4a5b8>
  4586d0:	ldr	w1, [x22, #4]
  4586d4:	ldr	x0, [sp, #88]
  4586d8:	str	x0, [x20, #328]
  4586dc:	ldr	w0, [x20, #308]
  4586e0:	sub	w1, w1, #0x1
  4586e4:	str	w1, [x22, #4]
  4586e8:	sub	w0, w0, #0x1
  4586ec:	str	w0, [x20, #308]
  4586f0:	b	45857c <nftw@plt+0x559fc>
  4586f4:	cmp	x0, #0xff
  4586f8:	b.eq	458750 <nftw@plt+0x55bd0>  // b.none
  4586fc:	add	x1, x0, #0x1
  458700:	str	x1, [x20, #256]
  458704:	mov	w2, #0x3a                  	// #58
  458708:	strb	w2, [x20, x0]
  45870c:	strb	w2, [x20, #264]
  458710:	cmp	x1, #0xff
  458714:	b.ne	45877c <nftw@plt+0x55bfc>  // b.any
  458718:	ldp	x3, x2, [x20, #272]
  45871c:	strb	wzr, [x20, #255]
  458720:	mov	x0, x20
  458724:	blr	x3
  458728:	ldr	x0, [x20, #320]
  45872c:	mov	x3, #0x1                   	// #1
  458730:	mov	x1, #0x0                   	// #0
  458734:	add	x0, x0, x3
  458738:	str	x0, [x20, #320]
  45873c:	str	x3, [x20, #256]
  458740:	mov	w0, #0x3a                  	// #58
  458744:	strb	w0, [x20, x1]
  458748:	strb	w0, [x20, #264]
  45874c:	b	4585cc <nftw@plt+0x55a4c>
  458750:	ldp	x3, x2, [x20, #272]
  458754:	strb	wzr, [x20, #255]
  458758:	mov	x1, x0
  45875c:	mov	x0, x20
  458760:	blr	x3
  458764:	ldr	x0, [x20, #320]
  458768:	mov	w2, #0x3a                  	// #58
  45876c:	mov	x1, #0x1                   	// #1
  458770:	strb	w2, [x20]
  458774:	add	x0, x0, x1
  458778:	str	x0, [x20, #320]
  45877c:	add	x3, x1, #0x1
  458780:	b	45873c <nftw@plt+0x55bbc>
  458784:	cmp	x3, #0xff
  458788:	b.eq	458b54 <nftw@plt+0x55fd4>  // b.none
  45878c:	add	x1, x3, #0x1
  458790:	str	x1, [x20, #256]
  458794:	mov	w0, #0x7b                  	// #123
  458798:	strb	w0, [x20, x3]
  45879c:	strb	w0, [x20, #264]
  4587a0:	cmp	x1, #0xff
  4587a4:	b.ne	458984 <nftw@plt+0x55e04>  // b.any
  4587a8:	ldp	x3, x2, [x20, #272]
  4587ac:	strb	wzr, [x20, #255]
  4587b0:	mov	x0, x20
  4587b4:	blr	x3
  4587b8:	ldr	x1, [x20, #320]
  4587bc:	mov	w3, #0x6564                	// #25956
  4587c0:	mov	w2, #0x66                  	// #102
  4587c4:	mov	x0, #0x3                   	// #3
  4587c8:	add	x1, x1, #0x1
  4587cc:	strh	w3, [x20]
  4587d0:	strb	w2, [x20, #2]
  4587d4:	str	x1, [x20, #320]
  4587d8:	add	x1, x0, #0x1
  4587dc:	str	x1, [x20, #256]
  4587e0:	mov	w2, #0x61                  	// #97
  4587e4:	strb	w2, [x20, x0]
  4587e8:	strb	w2, [x20, #264]
  4587ec:	cmp	x1, #0xff
  4587f0:	b.ne	4589d4 <nftw@plt+0x55e54>  // b.any
  4587f4:	ldp	x3, x2, [x20, #272]
  4587f8:	strb	wzr, [x20, #255]
  4587fc:	mov	x0, x20
  458800:	blr	x3
  458804:	ldr	x1, [x20, #320]
  458808:	mov	w3, #0x6c75                	// #27765
  45880c:	mov	w2, #0x74                  	// #116
  458810:	mov	x0, #0x3                   	// #3
  458814:	add	x1, x1, #0x1
  458818:	strh	w3, [x20]
  45881c:	strb	w2, [x20, #2]
  458820:	str	x1, [x20, #320]
  458824:	add	x1, x0, #0x1
  458828:	str	x1, [x20, #256]
  45882c:	mov	w2, #0x20                  	// #32
  458830:	strb	w2, [x20, x0]
  458834:	strb	w2, [x20, #264]
  458838:	cmp	x1, #0xff
  45883c:	b.ne	458a24 <nftw@plt+0x55ea4>  // b.any
  458840:	ldp	x3, x2, [x20, #272]
  458844:	strb	wzr, [x20, #255]
  458848:	mov	x0, x20
  45884c:	blr	x3
  458850:	ldr	x0, [x20, #320]
  458854:	mov	w2, #0x7261                	// #29281
  458858:	mov	x1, #0x2                   	// #2
  45885c:	strh	w2, [x20]
  458860:	add	x0, x0, #0x1
  458864:	str	x0, [x20, #320]
  458868:	add	x0, x1, #0x1
  45886c:	mov	w2, #0x67                  	// #103
  458870:	strb	w2, [x20, x1]
  458874:	add	x2, x0, #0x1
  458878:	str	x2, [x20, #256]
  45887c:	mov	w2, #0x23                  	// #35
  458880:	strb	w2, [x20, x0]
  458884:	adrp	x1, 473000 <_obstack_memory_used@@Base+0x11bb8>
  458888:	strb	w2, [x20, #264]
  45888c:	add	x1, x1, #0x1f8
  458890:	add	x0, sp, #0x50
  458894:	ldr	w2, [x22, #16]
  458898:	add	w2, w2, #0x1
  45889c:	bl	4025b0 <sprintf@plt>
  4588a0:	add	x0, sp, #0x50
  4588a4:	bl	4024f0 <strlen@plt>
  4588a8:	cbz	x0, 458930 <nftw@plt+0x55db0>
  4588ac:	add	x19, sp, #0x50
  4588b0:	mov	x26, #0x1                   	// #1
  4588b4:	add	x24, x19, x0
  4588b8:	ldr	x1, [x20, #256]
  4588bc:	b	458914 <nftw@plt+0x55d94>
  4588c0:	ldp	x3, x2, [x20, #272]
  4588c4:	strb	wzr, [x20, #255]
  4588c8:	add	x19, x19, #0x1
  4588cc:	blr	x3
  4588d0:	strb	w23, [x20]
  4588d4:	ldr	x0, [x20, #320]
  4588d8:	str	x26, [x20, #256]
  4588dc:	strb	w23, [x20, #264]
  4588e0:	cmp	x24, x19
  4588e4:	add	x0, x0, #0x1
  4588e8:	str	x0, [x20, #320]
  4588ec:	mov	x0, #0x1                   	// #1
  4588f0:	b.eq	458cbc <nftw@plt+0x5613c>  // b.none
  4588f4:	ldrb	w23, [x19]
  4588f8:	add	x1, x0, #0x1
  4588fc:	str	x1, [x20, #256]
  458900:	strb	w23, [x20, x0]
  458904:	add	x19, x19, #0x1
  458908:	strb	w23, [x20, #264]
  45890c:	cmp	x24, x19
  458910:	b.eq	458934 <nftw@plt+0x55db4>  // b.none
  458914:	ldrb	w23, [x19]
  458918:	mov	x0, x20
  45891c:	cmp	x1, #0xff
  458920:	b.eq	4588c0 <nftw@plt+0x55d40>  // b.none
  458924:	mov	x0, x1
  458928:	b	4588f8 <nftw@plt+0x55d78>
  45892c:	ret
  458930:	ldr	x1, [x20, #256]
  458934:	cmp	x1, #0xff
  458938:	b.ne	458c70 <nftw@plt+0x560f0>  // b.any
  45893c:	ldp	x3, x2, [x20, #272]
  458940:	strb	wzr, [x20, #255]
  458944:	mov	x0, x20
  458948:	blr	x3
  45894c:	ldr	x1, [x20, #320]
  458950:	mov	w2, #0x3a7d                	// #14973
  458954:	mov	x0, #0x2                   	// #2
  458958:	strh	w2, [x20]
  45895c:	add	x1, x1, #0x1
  458960:	str	x1, [x20, #320]
  458964:	add	x2, x0, #0x1
  458968:	str	x2, [x20, #256]
  45896c:	mov	w1, #0x3a                  	// #58
  458970:	strb	w1, [x20, x0]
  458974:	strb	w1, [x20, #264]
  458978:	ldr	x22, [x22, #8]
  45897c:	ldr	w0, [x22]
  458980:	b	4585e0 <nftw@plt+0x55a60>
  458984:	add	x0, x3, #0x2
  458988:	str	x0, [x20, #256]
  45898c:	mov	w2, #0x64                  	// #100
  458990:	strb	w2, [x20, x1]
  458994:	strb	w2, [x20, #264]
  458998:	cmp	x0, #0xff
  45899c:	b.ne	458a70 <nftw@plt+0x55ef0>  // b.any
  4589a0:	ldp	x3, x2, [x20, #272]
  4589a4:	strb	wzr, [x20, #255]
  4589a8:	mov	x1, x0
  4589ac:	mov	x0, x20
  4589b0:	blr	x3
  4589b4:	ldr	x0, [x20, #320]
  4589b8:	mov	w3, #0x6665                	// #26213
  4589bc:	mov	w2, #0x61                  	// #97
  4589c0:	mov	x1, #0x3                   	// #3
  4589c4:	add	x0, x0, #0x1
  4589c8:	strh	w3, [x20]
  4589cc:	strb	w2, [x20, #2]
  4589d0:	str	x0, [x20, #320]
  4589d4:	add	x0, x1, #0x1
  4589d8:	str	x0, [x20, #256]
  4589dc:	mov	w2, #0x75                  	// #117
  4589e0:	strb	w2, [x20, x1]
  4589e4:	strb	w2, [x20, #264]
  4589e8:	cmp	x0, #0xff
  4589ec:	b.ne	458ac0 <nftw@plt+0x55f40>  // b.any
  4589f0:	ldp	x3, x2, [x20, #272]
  4589f4:	strb	wzr, [x20, #255]
  4589f8:	mov	x1, x0
  4589fc:	mov	x0, x20
  458a00:	blr	x3
  458a04:	ldr	x0, [x20, #320]
  458a08:	mov	w3, #0x746c                	// #29804
  458a0c:	mov	w2, #0x20                  	// #32
  458a10:	mov	x1, #0x3                   	// #3
  458a14:	add	x0, x0, #0x1
  458a18:	strh	w3, [x20]
  458a1c:	strb	w2, [x20, #2]
  458a20:	str	x0, [x20, #320]
  458a24:	add	x0, x1, #0x1
  458a28:	str	x0, [x20, #256]
  458a2c:	mov	w2, #0x61                  	// #97
  458a30:	strb	w2, [x20, x1]
  458a34:	strb	w2, [x20, #264]
  458a38:	cmp	x0, #0xff
  458a3c:	b.ne	458b0c <nftw@plt+0x55f8c>  // b.any
  458a40:	ldp	x3, x2, [x20, #272]
  458a44:	strb	wzr, [x20, #255]
  458a48:	mov	x1, x0
  458a4c:	mov	x0, x20
  458a50:	blr	x3
  458a54:	ldr	x0, [x20, #320]
  458a58:	mov	w2, #0x72                  	// #114
  458a5c:	mov	x1, #0x1                   	// #1
  458a60:	strb	w2, [x20]
  458a64:	add	x0, x0, x1
  458a68:	str	x0, [x20, #320]
  458a6c:	b	458868 <nftw@plt+0x55ce8>
  458a70:	add	x3, x3, #0x3
  458a74:	str	x3, [x20, #256]
  458a78:	mov	w1, #0x65                  	// #101
  458a7c:	strb	w1, [x20, x0]
  458a80:	strb	w1, [x20, #264]
  458a84:	cmp	x3, #0xff
  458a88:	b.ne	458b88 <nftw@plt+0x56008>  // b.any
  458a8c:	ldp	x4, x2, [x20, #272]
  458a90:	strb	wzr, [x20, #255]
  458a94:	mov	x1, x3
  458a98:	mov	x0, x20
  458a9c:	blr	x4
  458aa0:	ldr	x1, [x20, #320]
  458aa4:	mov	w3, #0x6166                	// #24934
  458aa8:	mov	w2, #0x75                  	// #117
  458aac:	mov	x0, #0x3                   	// #3
  458ab0:	add	x1, x1, #0x1
  458ab4:	strh	w3, [x20]
  458ab8:	strb	w2, [x20, #2]
  458abc:	str	x1, [x20, #320]
  458ac0:	add	x1, x0, #0x1
  458ac4:	str	x1, [x20, #256]
  458ac8:	mov	w2, #0x6c                  	// #108
  458acc:	strb	w2, [x20, x0]
  458ad0:	strb	w2, [x20, #264]
  458ad4:	cmp	x1, #0xff
  458ad8:	b.ne	458bd8 <nftw@plt+0x56058>  // b.any
  458adc:	ldp	x3, x2, [x20, #272]
  458ae0:	strb	wzr, [x20, #255]
  458ae4:	mov	x0, x20
  458ae8:	blr	x3
  458aec:	ldr	x1, [x20, #320]
  458af0:	mov	w3, #0x2074                	// #8308
  458af4:	mov	w2, #0x61                  	// #97
  458af8:	mov	x0, #0x3                   	// #3
  458afc:	add	x1, x1, #0x1
  458b00:	strh	w3, [x20]
  458b04:	strb	w2, [x20, #2]
  458b08:	str	x1, [x20, #320]
  458b0c:	add	x1, x0, #0x1
  458b10:	str	x1, [x20, #256]
  458b14:	mov	w2, #0x72                  	// #114
  458b18:	strb	w2, [x20, x0]
  458b1c:	strb	w2, [x20, #264]
  458b20:	cmp	x1, #0xff
  458b24:	b.ne	458c28 <nftw@plt+0x560a8>  // b.any
  458b28:	ldp	x3, x2, [x20, #272]
  458b2c:	strb	wzr, [x20, #255]
  458b30:	mov	x0, x20
  458b34:	blr	x3
  458b38:	ldr	x1, [x20, #320]
  458b3c:	mov	w2, #0x67                  	// #103
  458b40:	mov	x0, #0x1                   	// #1
  458b44:	strb	w2, [x20]
  458b48:	add	x1, x1, x0
  458b4c:	str	x1, [x20, #320]
  458b50:	b	458874 <nftw@plt+0x55cf4>
  458b54:	ldp	x4, x2, [x20, #272]
  458b58:	strb	wzr, [x20, #255]
  458b5c:	mov	x1, x3
  458b60:	mov	x0, x20
  458b64:	blr	x4
  458b68:	ldr	x0, [x20, #320]
  458b6c:	mov	w2, #0x647b                	// #25723
  458b70:	mov	w1, #0x65                  	// #101
  458b74:	mov	x3, #0x3                   	// #3
  458b78:	add	x0, x0, #0x1
  458b7c:	strh	w2, [x20]
  458b80:	strb	w1, [x20, #2]
  458b84:	str	x0, [x20, #320]
  458b88:	add	x0, x3, #0x1
  458b8c:	str	x0, [x20, #256]
  458b90:	mov	w1, #0x66                  	// #102
  458b94:	strb	w1, [x20, x3]
  458b98:	strb	w1, [x20, #264]
  458b9c:	cmp	x0, #0xff
  458ba0:	b.ne	4587d8 <nftw@plt+0x55c58>  // b.any
  458ba4:	ldp	x3, x2, [x20, #272]
  458ba8:	strb	wzr, [x20, #255]
  458bac:	mov	x1, x0
  458bb0:	mov	x0, x20
  458bb4:	blr	x3
  458bb8:	ldr	x0, [x20, #320]
  458bbc:	mov	w3, #0x7561                	// #30049
  458bc0:	mov	w2, #0x6c                  	// #108
  458bc4:	mov	x1, #0x3                   	// #3
  458bc8:	add	x0, x0, #0x1
  458bcc:	strh	w3, [x20]
  458bd0:	strb	w2, [x20, #2]
  458bd4:	str	x0, [x20, #320]
  458bd8:	add	x0, x1, #0x1
  458bdc:	str	x0, [x20, #256]
  458be0:	mov	w2, #0x74                  	// #116
  458be4:	strb	w2, [x20, x1]
  458be8:	strb	w2, [x20, #264]
  458bec:	cmp	x0, #0xff
  458bf0:	b.ne	458824 <nftw@plt+0x55ca4>  // b.any
  458bf4:	ldp	x3, x2, [x20, #272]
  458bf8:	strb	wzr, [x20, #255]
  458bfc:	mov	x1, x0
  458c00:	mov	x0, x20
  458c04:	blr	x3
  458c08:	ldr	x0, [x20, #320]
  458c0c:	mov	w3, #0x6120                	// #24864
  458c10:	mov	w2, #0x72                  	// #114
  458c14:	mov	x1, #0x3                   	// #3
  458c18:	add	x0, x0, #0x1
  458c1c:	strh	w3, [x20]
  458c20:	strb	w2, [x20, #2]
  458c24:	str	x0, [x20, #320]
  458c28:	add	x0, x1, #0x1
  458c2c:	str	x0, [x20, #256]
  458c30:	mov	w2, #0x67                  	// #103
  458c34:	strb	w2, [x20, x1]
  458c38:	strb	w2, [x20, #264]
  458c3c:	cmp	x0, #0xff
  458c40:	b.ne	458874 <nftw@plt+0x55cf4>  // b.any
  458c44:	ldp	x3, x2, [x20, #272]
  458c48:	strb	wzr, [x20, #255]
  458c4c:	mov	x1, x0
  458c50:	mov	x0, x20
  458c54:	blr	x3
  458c58:	ldr	x1, [x20, #320]
  458c5c:	mov	x2, #0x1                   	// #1
  458c60:	mov	x0, #0x0                   	// #0
  458c64:	add	x1, x1, x2
  458c68:	str	x1, [x20, #320]
  458c6c:	b	458878 <nftw@plt+0x55cf8>
  458c70:	add	x3, x1, #0x1
  458c74:	str	x3, [x20, #256]
  458c78:	mov	w0, #0x7d                  	// #125
  458c7c:	strb	w0, [x20, x1]
  458c80:	strb	w0, [x20, #264]
  458c84:	cmp	x3, #0xff
  458c88:	b.ne	458cc8 <nftw@plt+0x56148>  // b.any
  458c8c:	ldp	x4, x2, [x20, #272]
  458c90:	strb	wzr, [x20, #255]
  458c94:	mov	x1, x3
  458c98:	mov	x0, x20
  458c9c:	blr	x4
  458ca0:	ldr	x1, [x20, #320]
  458ca4:	mov	w2, #0x3a                  	// #58
  458ca8:	mov	x0, #0x1                   	// #1
  458cac:	strb	w2, [x20]
  458cb0:	add	x1, x1, x0
  458cb4:	str	x1, [x20, #320]
  458cb8:	b	458964 <nftw@plt+0x55de4>
  458cbc:	mov	w0, #0x7d                  	// #125
  458cc0:	mov	x3, #0x2                   	// #2
  458cc4:	strb	w0, [x20, #1]
  458cc8:	add	x0, x3, #0x1
  458ccc:	str	x0, [x20, #256]
  458cd0:	mov	w1, #0x3a                  	// #58
  458cd4:	strb	w1, [x20, x3]
  458cd8:	strb	w1, [x20, #264]
  458cdc:	cmp	x0, #0xff
  458ce0:	b.ne	458964 <nftw@plt+0x55de4>  // b.any
  458ce4:	ldp	x3, x2, [x20, #272]
  458ce8:	strb	wzr, [x20, #255]
  458cec:	mov	x1, x0
  458cf0:	mov	x0, x20
  458cf4:	blr	x3
  458cf8:	ldr	x1, [x20, #320]
  458cfc:	mov	x2, #0x1                   	// #1
  458d00:	mov	x0, #0x0                   	// #0
  458d04:	add	x1, x1, x2
  458d08:	str	x1, [x20, #320]
  458d0c:	b	458968 <nftw@plt+0x55de8>
  458d10:	stp	x29, x30, [sp, #-80]!
  458d14:	mov	x4, x3
  458d18:	mov	x29, sp
  458d1c:	stp	x19, x20, [sp, #16]
  458d20:	mov	x19, x0
  458d24:	stp	x21, x22, [sp, #32]
  458d28:	mov	w22, w1
  458d2c:	mov	x21, x2
  458d30:	cbz	x3, 458d5c <nftw@plt+0x561dc>
  458d34:	nop
  458d38:	ldr	w0, [x4, #16]
  458d3c:	cbz	w0, 458e70 <nftw@plt+0x562f0>
  458d40:	ldr	x4, [x4]
  458d44:	cbnz	x4, 458d38 <nftw@plt+0x561b8>
  458d48:	mov	x2, x3
  458d4c:	mov	w1, w22
  458d50:	mov	x0, x19
  458d54:	mov	w3, #0x0                   	// #0
  458d58:	bl	4583a8 <nftw@plt+0x55828>
  458d5c:	ldr	x0, [x19, #256]
  458d60:	cmp	x0, #0xff
  458d64:	b.eq	458e9c <nftw@plt+0x5631c>  // b.none
  458d68:	add	x1, x0, #0x1
  458d6c:	str	x1, [x19, #256]
  458d70:	mov	w2, #0x20                  	// #32
  458d74:	strb	w2, [x19, x0]
  458d78:	strb	w2, [x19, #264]
  458d7c:	cmp	x1, #0xff
  458d80:	b.eq	458e34 <nftw@plt+0x562b4>  // b.none
  458d84:	add	x0, x1, #0x1
  458d88:	str	x0, [x19, #256]
  458d8c:	mov	w2, #0x5b                  	// #91
  458d90:	strb	w2, [x19, x1]
  458d94:	strb	w2, [x19, #264]
  458d98:	ldr	x20, [x21]
  458d9c:	cbz	x20, 458dc0 <nftw@plt+0x56240>
  458da0:	ldr	w1, [x20, #4]
  458da4:	cmp	w1, #0x1
  458da8:	b.gt	458db8 <nftw@plt+0x56238>
  458dac:	ldr	w2, [x19, #308]
  458db0:	cmp	w2, #0x400
  458db4:	b.le	458f7c <nftw@plt+0x563fc>
  458db8:	mov	w1, #0x1                   	// #1
  458dbc:	str	w1, [x19, #304]
  458dc0:	cmp	x0, #0xff
  458dc4:	b.eq	458dec <nftw@plt+0x5626c>  // b.none
  458dc8:	add	x1, x0, #0x1
  458dcc:	str	x1, [x19, #256]
  458dd0:	mov	w1, #0x5d                  	// #93
  458dd4:	strb	w1, [x19, x0]
  458dd8:	strb	w1, [x19, #264]
  458ddc:	ldp	x19, x20, [sp, #16]
  458de0:	ldp	x21, x22, [sp, #32]
  458de4:	ldp	x29, x30, [sp], #80
  458de8:	ret
  458dec:	ldp	x3, x2, [x19, #272]
  458df0:	strb	wzr, [x19, #255]
  458df4:	mov	x1, x0
  458df8:	mov	x0, x19
  458dfc:	blr	x3
  458e00:	ldr	x2, [x19, #320]
  458e04:	mov	x0, #0x0                   	// #0
  458e08:	mov	x1, #0x1                   	// #1
  458e0c:	str	x1, [x19, #256]
  458e10:	add	x2, x2, x1
  458e14:	str	x2, [x19, #320]
  458e18:	mov	w1, #0x5d                  	// #93
  458e1c:	strb	w1, [x19, x0]
  458e20:	strb	w1, [x19, #264]
  458e24:	ldp	x19, x20, [sp, #16]
  458e28:	ldp	x21, x22, [sp, #32]
  458e2c:	ldp	x29, x30, [sp], #80
  458e30:	ret
  458e34:	ldp	x3, x2, [x19, #272]
  458e38:	strb	wzr, [x19, #255]
  458e3c:	mov	x0, x19
  458e40:	blr	x3
  458e44:	mov	w1, #0x5b                  	// #91
  458e48:	strb	w1, [x19]
  458e4c:	strb	w1, [x19, #264]
  458e50:	mov	x0, #0x1                   	// #1
  458e54:	ldr	x1, [x19, #320]
  458e58:	ldr	x20, [x21]
  458e5c:	add	x1, x1, x0
  458e60:	str	x0, [x19, #256]
  458e64:	str	x1, [x19, #320]
  458e68:	cbnz	x20, 458da0 <nftw@plt+0x56220>
  458e6c:	b	458dc8 <nftw@plt+0x56248>
  458e70:	ldr	x0, [x4, #8]
  458e74:	ldr	w0, [x0]
  458e78:	cmp	w0, #0x2a
  458e7c:	b.ne	458ee0 <nftw@plt+0x56360>  // b.any
  458e80:	mov	x2, x3
  458e84:	mov	w1, w22
  458e88:	mov	x0, x19
  458e8c:	mov	w3, #0x0                   	// #0
  458e90:	bl	4583a8 <nftw@plt+0x55828>
  458e94:	ldr	x1, [x19, #256]
  458e98:	b	458d7c <nftw@plt+0x561fc>
  458e9c:	ldp	x3, x2, [x19, #272]
  458ea0:	strb	wzr, [x19, #255]
  458ea4:	mov	x1, x0
  458ea8:	mov	x0, x19
  458eac:	blr	x3
  458eb0:	mov	w1, #0x5b20                	// #23328
  458eb4:	mov	w0, #0x5b                  	// #91
  458eb8:	strh	w1, [x19]
  458ebc:	strb	w0, [x19, #264]
  458ec0:	mov	x0, #0x2                   	// #2
  458ec4:	ldr	x1, [x19, #320]
  458ec8:	ldr	x20, [x21]
  458ecc:	add	x1, x1, #0x1
  458ed0:	str	x0, [x19, #256]
  458ed4:	str	x1, [x19, #320]
  458ed8:	cbnz	x20, 458da0 <nftw@plt+0x56220>
  458edc:	b	458dc8 <nftw@plt+0x56248>
  458ee0:	ldr	x0, [x19, #256]
  458ee4:	cmp	x0, #0xff
  458ee8:	b.eq	459000 <nftw@plt+0x56480>  // b.none
  458eec:	add	x1, x0, #0x1
  458ef0:	str	x1, [x19, #256]
  458ef4:	mov	w2, #0x20                  	// #32
  458ef8:	strb	w2, [x19, x0]
  458efc:	strb	w2, [x19, #264]
  458f00:	cmp	x1, #0xff
  458f04:	b.ne	459034 <nftw@plt+0x564b4>  // b.any
  458f08:	ldp	x4, x2, [x19, #272]
  458f0c:	strb	wzr, [x19, #255]
  458f10:	mov	x0, x19
  458f14:	str	x3, [sp, #56]
  458f18:	blr	x4
  458f1c:	ldr	x2, [x19, #320]
  458f20:	mov	x0, #0x1                   	// #1
  458f24:	ldr	x3, [sp, #56]
  458f28:	add	x2, x2, x0
  458f2c:	mov	x1, #0x0                   	// #0
  458f30:	str	x2, [x19, #320]
  458f34:	str	x0, [x19, #256]
  458f38:	mov	w0, #0x28                  	// #40
  458f3c:	strb	w0, [x19, x1]
  458f40:	mov	x2, x3
  458f44:	strb	w0, [x19, #264]
  458f48:	mov	w1, w22
  458f4c:	mov	x0, x19
  458f50:	mov	w3, #0x0                   	// #0
  458f54:	bl	4583a8 <nftw@plt+0x55828>
  458f58:	ldr	x1, [x19, #256]
  458f5c:	cmp	x1, #0xff
  458f60:	b.eq	458fd4 <nftw@plt+0x56454>  // b.none
  458f64:	add	x0, x1, #0x1
  458f68:	str	x0, [x19, #256]
  458f6c:	mov	w2, #0x29                  	// #41
  458f70:	strb	w2, [x19, x1]
  458f74:	strb	w2, [x19, #264]
  458f78:	b	458d60 <nftw@plt+0x561e0>
  458f7c:	ldr	x3, [x19, #328]
  458f80:	add	w1, w1, #0x1
  458f84:	str	w1, [x20, #4]
  458f88:	add	w2, w2, #0x1
  458f8c:	add	x0, sp, #0x40
  458f90:	str	w2, [x19, #308]
  458f94:	str	x0, [x19, #328]
  458f98:	mov	w1, w22
  458f9c:	mov	x2, x20
  458fa0:	mov	x0, x19
  458fa4:	stp	x20, x3, [sp, #64]
  458fa8:	bl	44d138 <nftw@plt+0x4a5b8>
  458fac:	ldr	w2, [x20, #4]
  458fb0:	ldr	x0, [sp, #72]
  458fb4:	str	x0, [x19, #328]
  458fb8:	ldr	w1, [x19, #308]
  458fbc:	sub	w2, w2, #0x1
  458fc0:	ldr	x0, [x19, #256]
  458fc4:	str	w2, [x20, #4]
  458fc8:	sub	w1, w1, #0x1
  458fcc:	str	w1, [x19, #308]
  458fd0:	b	458dc0 <nftw@plt+0x56240>
  458fd4:	ldp	x3, x2, [x19, #272]
  458fd8:	strb	wzr, [x19, #255]
  458fdc:	mov	x0, x19
  458fe0:	blr	x3
  458fe4:	ldr	x1, [x19, #320]
  458fe8:	mov	w2, #0x29                  	// #41
  458fec:	mov	x0, #0x1                   	// #1
  458ff0:	strb	w2, [x19]
  458ff4:	add	x1, x1, x0
  458ff8:	str	x1, [x19, #320]
  458ffc:	b	458d68 <nftw@plt+0x561e8>
  459000:	ldp	x4, x2, [x19, #272]
  459004:	strb	wzr, [x19, #255]
  459008:	mov	x1, x0
  45900c:	mov	x0, x19
  459010:	str	x3, [sp, #56]
  459014:	blr	x4
  459018:	ldr	x0, [x19, #320]
  45901c:	mov	w2, #0x20                  	// #32
  459020:	ldr	x3, [sp, #56]
  459024:	mov	x1, #0x1                   	// #1
  459028:	add	x0, x0, x1
  45902c:	strb	w2, [x19]
  459030:	str	x0, [x19, #320]
  459034:	add	x0, x1, #0x1
  459038:	b	458f34 <nftw@plt+0x563b4>
  45903c:	nop
  459040:	stp	x29, x30, [sp, #-80]!
  459044:	mov	x29, sp
  459048:	stp	x19, x20, [sp, #16]
  45904c:	mov	x19, x0
  459050:	mov	x20, x3
  459054:	stp	x21, x22, [sp, #32]
  459058:	mov	w22, w1
  45905c:	mov	x21, x2
  459060:	stp	x23, x24, [sp, #48]
  459064:	cbz	x3, 4590a8 <nftw@plt+0x56528>
  459068:	mov	x2, #0xe000000             	// #234881024
  45906c:	mov	x4, #0x1                   	// #1
  459070:	movk	x2, #0x862, lsl #32
  459074:	ldr	w0, [x3, #16]
  459078:	cbnz	w0, 4590a8 <nftw@plt+0x56528>
  45907c:	ldr	x0, [x3, #8]
  459080:	ldr	w0, [x0]
  459084:	cmp	w0, #0x2b
  459088:	b.hi	4590a0 <nftw@plt+0x56520>  // b.pmore
  45908c:	lsl	x0, x4, x0
  459090:	tst	x0, x2
  459094:	b.ne	459180 <nftw@plt+0x56600>  // b.any
  459098:	tst	x0, #0x1c00000000
  45909c:	b.ne	45924c <nftw@plt+0x566cc>  // b.any
  4590a0:	ldr	x3, [x3]
  4590a4:	cbnz	x3, 459074 <nftw@plt+0x564f4>
  4590a8:	ldr	x23, [x19, #296]
  4590ac:	str	xzr, [x19, #296]
  4590b0:	mov	w1, w22
  4590b4:	mov	x2, x20
  4590b8:	mov	x0, x19
  4590bc:	mov	w3, #0x0                   	// #0
  4590c0:	bl	4583a8 <nftw@plt+0x55828>
  4590c4:	ldr	x1, [x19, #256]
  4590c8:	cmp	x1, #0xff
  4590cc:	b.eq	459210 <nftw@plt+0x56690>  // b.none
  4590d0:	add	x0, x1, #0x1
  4590d4:	str	x0, [x19, #256]
  4590d8:	mov	w2, #0x28                  	// #40
  4590dc:	strb	w2, [x19, x1]
  4590e0:	strb	w2, [x19, #264]
  4590e4:	ldr	x21, [x21]
  4590e8:	cbz	x21, 45910c <nftw@plt+0x5658c>
  4590ec:	ldr	w1, [x21, #4]
  4590f0:	cmp	w1, #0x1
  4590f4:	b.gt	459104 <nftw@plt+0x56584>
  4590f8:	ldr	w2, [x19, #308]
  4590fc:	cmp	w2, #0x400
  459100:	b.le	459290 <nftw@plt+0x56710>
  459104:	mov	w1, #0x1                   	// #1
  459108:	str	w1, [x19, #304]
  45910c:	cmp	x0, #0xff
  459110:	b.eq	459154 <nftw@plt+0x565d4>  // b.none
  459114:	add	x1, x0, #0x1
  459118:	str	x1, [x19, #256]
  45911c:	mov	w3, #0x29                  	// #41
  459120:	strb	w3, [x19, x0]
  459124:	mov	x2, x20
  459128:	strb	w3, [x19, #264]
  45912c:	mov	w1, w22
  459130:	mov	x0, x19
  459134:	mov	w3, #0x1                   	// #1
  459138:	bl	4583a8 <nftw@plt+0x55828>
  45913c:	ldp	x21, x22, [sp, #32]
  459140:	str	x23, [x19, #296]
  459144:	ldp	x19, x20, [sp, #16]
  459148:	ldp	x23, x24, [sp, #48]
  45914c:	ldp	x29, x30, [sp], #80
  459150:	ret
  459154:	ldp	x3, x2, [x19, #272]
  459158:	strb	wzr, [x19, #255]
  45915c:	mov	x1, x0
  459160:	mov	x0, x19
  459164:	blr	x3
  459168:	ldr	x2, [x19, #320]
  45916c:	mov	x1, #0x1                   	// #1
  459170:	mov	x0, #0x0                   	// #0
  459174:	add	x2, x2, x1
  459178:	str	x2, [x19, #320]
  45917c:	b	459118 <nftw@plt+0x56598>
  459180:	ldrb	w0, [x19, #264]
  459184:	ldr	x1, [x19, #256]
  459188:	cmp	w0, #0x20
  45918c:	b.eq	4591b0 <nftw@plt+0x56630>  // b.none
  459190:	cmp	x1, #0xff
  459194:	b.eq	4592e8 <nftw@plt+0x56768>  // b.none
  459198:	add	x2, x1, #0x1
  45919c:	str	x2, [x19, #256]
  4591a0:	mov	w0, #0x20                  	// #32
  4591a4:	strb	w0, [x19, x1]
  4591a8:	mov	x1, x2
  4591ac:	strb	w0, [x19, #264]
  4591b0:	cmp	x1, #0xff
  4591b4:	b.eq	459268 <nftw@plt+0x566e8>  // b.none
  4591b8:	add	x0, x1, #0x1
  4591bc:	str	x0, [x19, #256]
  4591c0:	mov	w24, #0x28                  	// #40
  4591c4:	strb	w24, [x19, x1]
  4591c8:	mov	x0, x19
  4591cc:	strb	w24, [x19, #264]
  4591d0:	mov	x2, x20
  4591d4:	ldr	x23, [x19, #296]
  4591d8:	str	xzr, [x19, #296]
  4591dc:	mov	w1, w22
  4591e0:	mov	w3, #0x0                   	// #0
  4591e4:	bl	4583a8 <nftw@plt+0x55828>
  4591e8:	ldr	x0, [x19, #256]
  4591ec:	cmp	x0, #0xff
  4591f0:	b.eq	459314 <nftw@plt+0x56794>  // b.none
  4591f4:	add	x1, x0, #0x1
  4591f8:	str	x1, [x19, #256]
  4591fc:	mov	w2, #0x29                  	// #41
  459200:	strb	w2, [x19, x0]
  459204:	strb	w2, [x19, #264]
  459208:	cmp	x1, #0xff
  45920c:	b.ne	4590d0 <nftw@plt+0x56550>  // b.any
  459210:	ldp	x3, x2, [x19, #272]
  459214:	strb	wzr, [x19, #255]
  459218:	mov	x0, x19
  45921c:	blr	x3
  459220:	mov	w1, #0x28                  	// #40
  459224:	strb	w1, [x19]
  459228:	strb	w1, [x19, #264]
  45922c:	mov	x0, #0x1                   	// #1
  459230:	ldr	x1, [x19, #320]
  459234:	ldr	x21, [x21]
  459238:	add	x1, x1, x0
  45923c:	str	x0, [x19, #256]
  459240:	str	x1, [x19, #320]
  459244:	cbnz	x21, 4590ec <nftw@plt+0x5656c>
  459248:	b	459114 <nftw@plt+0x56594>
  45924c:	ldrb	w0, [x19, #264]
  459250:	ldr	x1, [x19, #256]
  459254:	and	w2, w0, #0xfffffffd
  459258:	cmp	w2, #0x28
  45925c:	b.ne	459188 <nftw@plt+0x56608>  // b.any
  459260:	cmp	x1, #0xff
  459264:	b.ne	4591b8 <nftw@plt+0x56638>  // b.any
  459268:	ldp	x3, x2, [x19, #272]
  45926c:	strb	wzr, [x19, #255]
  459270:	mov	x0, x19
  459274:	blr	x3
  459278:	ldr	x2, [x19, #320]
  45927c:	mov	x0, #0x1                   	// #1
  459280:	mov	x1, #0x0                   	// #0
  459284:	add	x2, x2, x0
  459288:	str	x2, [x19, #320]
  45928c:	b	4591bc <nftw@plt+0x5663c>
  459290:	ldr	x3, [x19, #328]
  459294:	add	w1, w1, #0x1
  459298:	str	w1, [x21, #4]
  45929c:	add	w2, w2, #0x1
  4592a0:	add	x0, sp, #0x40
  4592a4:	str	w2, [x19, #308]
  4592a8:	str	x0, [x19, #328]
  4592ac:	mov	w1, w22
  4592b0:	mov	x2, x21
  4592b4:	mov	x0, x19
  4592b8:	stp	x21, x3, [sp, #64]
  4592bc:	bl	44d138 <nftw@plt+0x4a5b8>
  4592c0:	ldr	w2, [x21, #4]
  4592c4:	ldr	x0, [sp, #72]
  4592c8:	str	x0, [x19, #328]
  4592cc:	ldr	w1, [x19, #308]
  4592d0:	sub	w2, w2, #0x1
  4592d4:	ldr	x0, [x19, #256]
  4592d8:	str	w2, [x21, #4]
  4592dc:	sub	w1, w1, #0x1
  4592e0:	str	w1, [x19, #308]
  4592e4:	b	45910c <nftw@plt+0x5658c>
  4592e8:	ldp	x3, x2, [x19, #272]
  4592ec:	strb	wzr, [x19, #255]
  4592f0:	mov	x0, x19
  4592f4:	blr	x3
  4592f8:	ldr	x0, [x19, #320]
  4592fc:	mov	w2, #0x20                  	// #32
  459300:	mov	x1, #0x1                   	// #1
  459304:	strb	w2, [x19]
  459308:	add	x0, x0, x1
  45930c:	str	x0, [x19, #320]
  459310:	b	4591b8 <nftw@plt+0x56638>
  459314:	ldp	x3, x2, [x19, #272]
  459318:	strb	wzr, [x19, #255]
  45931c:	mov	x1, x0
  459320:	mov	x0, x19
  459324:	blr	x3
  459328:	strb	w24, [x19, #264]
  45932c:	mov	w0, #0x2829                	// #10281
  459330:	strh	w0, [x19]
  459334:	ldr	x1, [x19, #320]
  459338:	mov	x2, #0x2                   	// #2
  45933c:	ldr	x21, [x21]
  459340:	add	x1, x1, #0x1
  459344:	str	x2, [x19, #256]
  459348:	mov	x0, x2
  45934c:	str	x1, [x19, #320]
  459350:	cbnz	x21, 4590ec <nftw@plt+0x5656c>
  459354:	b	459114 <nftw@plt+0x56594>
  459358:	cmp	x1, #0x0
  45935c:	mov	x3, x0
  459360:	ccmp	w2, #0x0, #0x4, ne  // ne = any
  459364:	ccmp	x0, #0x0, #0x4, gt
  459368:	mov	w0, #0x0                   	// #0
  45936c:	b.ne	459374 <nftw@plt+0x567f4>  // b.any
  459370:	ret
  459374:	mov	w0, #0x1                   	// #1
  459378:	stp	xzr, x1, [x3]
  45937c:	str	w2, [x3, #16]
  459380:	ret
  459384:	nop
  459388:	cmp	w1, #0x0
  45938c:	mov	x3, x0
  459390:	ccmp	x2, #0x0, #0x4, ge  // ge = tcont
  459394:	ccmp	x0, #0x0, #0x4, ne  // ne = any
  459398:	mov	w0, #0x0                   	// #0
  45939c:	b.eq	4593b4 <nftw@plt+0x56834>  // b.none
  4593a0:	mov	x4, #0x33                  	// #51
  4593a4:	mov	w0, #0x1                   	// #1
  4593a8:	str	x4, [x3]
  4593ac:	str	w1, [x3, #8]
  4593b0:	str	x2, [x3, #16]
  4593b4:	ret
  4593b8:	cmp	x0, #0x0
  4593bc:	mov	x3, x0
  4593c0:	ccmp	x2, #0x0, #0x4, ne  // ne = any
  4593c4:	mov	w0, #0x0                   	// #0
  4593c8:	b.eq	4593f0 <nftw@plt+0x56870>  // b.none
  4593cc:	sub	w4, w1, #0x1
  4593d0:	mov	w0, #0x0                   	// #0
  4593d4:	cmp	w4, #0x4
  4593d8:	b.hi	4593f0 <nftw@plt+0x56870>  // b.pmore
  4593dc:	mov	x4, #0x7                   	// #7
  4593e0:	mov	w0, #0x1                   	// #1
  4593e4:	str	x4, [x3]
  4593e8:	str	w1, [x3, #8]
  4593ec:	str	x2, [x3, #16]
  4593f0:	ret
  4593f4:	nop
  4593f8:	cmp	x0, #0x0
  4593fc:	mov	x3, x0
  459400:	ccmp	x2, #0x0, #0x4, ne  // ne = any
  459404:	mov	w0, #0x0                   	// #0
  459408:	b.eq	459430 <nftw@plt+0x568b0>  // b.none
  45940c:	sub	w4, w1, #0x1
  459410:	mov	w0, #0x0                   	// #0
  459414:	cmp	w4, #0x4
  459418:	b.hi	459430 <nftw@plt+0x568b0>  // b.pmore
  45941c:	mov	x4, #0x8                   	// #8
  459420:	mov	w0, #0x1                   	// #1
  459424:	str	x4, [x3]
  459428:	str	w1, [x3, #8]
  45942c:	str	x2, [x3, #16]
  459430:	ret
  459434:	nop
  459438:	stp	x29, x30, [sp, #-80]!
  45943c:	mov	w2, #0x56                  	// #86
  459440:	mov	w1, #0x4b                  	// #75
  459444:	mov	x29, sp
  459448:	ldr	x3, [x0, #24]
  45944c:	stp	x19, x20, [sp, #16]
  459450:	mov	x19, x0
  459454:	ldrb	w0, [x3]
  459458:	cmp	w0, #0x72
  45945c:	ccmp	w0, w2, #0x4, ne  // ne = any
  459460:	ccmp	w0, w1, #0x4, ne  // ne = any
  459464:	b.eq	4594ac <nftw@plt+0x5692c>  // b.none
  459468:	cmp	w0, #0x44
  45946c:	b.eq	459530 <nftw@plt+0x569b0>  // b.none
  459470:	sub	w2, w0, #0x30
  459474:	cmp	w2, #0x4a
  459478:	b.hi	459498 <nftw@plt+0x56918>  // b.pmore
  45947c:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x1ebb8>
  459480:	add	x1, x1, #0x38
  459484:	ldrh	w1, [x1, w2, uxtw #1]
  459488:	adr	x2, 459494 <nftw@plt+0x56914>
  45948c:	add	x1, x2, w1, sxth #2
  459490:	br	x1
  459494:	ldp	x21, x22, [sp, #32]
  459498:	mov	x20, #0x0                   	// #0
  45949c:	mov	x0, x20
  4594a0:	ldp	x19, x20, [sp, #16]
  4594a4:	ldp	x29, x30, [sp], #80
  4594a8:	ret
  4594ac:	add	x1, sp, #0x48
  4594b0:	mov	x0, x19
  4594b4:	mov	w2, #0x0                   	// #0
  4594b8:	stp	x21, x22, [sp, #32]
  4594bc:	bl	45bb10 <nftw@plt+0x58f90>
  4594c0:	mov	x21, x0
  4594c4:	cbz	x0, 459494 <nftw@plt+0x56914>
  4594c8:	ldr	x0, [x19, #24]
  4594cc:	ldrb	w0, [x0]
  4594d0:	cmp	w0, #0x46
  4594d4:	mov	x0, x19
  4594d8:	b.eq	4595fc <nftw@plt+0x56a7c>  // b.none
  4594dc:	bl	459438 <nftw@plt+0x568b8>
  4594e0:	str	x0, [x21]
  4594e4:	cbz	x0, 459494 <nftw@plt+0x56914>
  4594e8:	ldr	w1, [x0]
  4594ec:	ldr	x20, [sp, #72]
  4594f0:	sub	w1, w1, #0x1f
  4594f4:	cmp	w1, #0x1
  4594f8:	b.ls	4595e0 <nftw@plt+0x56a60>  // b.plast
  4594fc:	cbz	x20, 459494 <nftw@plt+0x56914>
  459500:	ldp	w0, w1, [x19, #56]
  459504:	cmp	w0, w1
  459508:	b.ge	459494 <nftw@plt+0x56914>  // b.tcont
  45950c:	ldr	x2, [x19, #48]
  459510:	add	w1, w0, #0x1
  459514:	ldp	x21, x22, [sp, #32]
  459518:	str	x20, [x2, w0, sxtw #3]
  45951c:	mov	x0, x20
  459520:	str	w1, [x19, #56]
  459524:	ldp	x19, x20, [sp, #16]
  459528:	ldp	x29, x30, [sp], #80
  45952c:	ret
  459530:	ldrb	w0, [x3, #1]
  459534:	and	w1, w0, #0xffffffdf
  459538:	sub	w0, w0, #0x77
  45953c:	cmp	w1, #0x4f
  459540:	and	w0, w0, #0xff
  459544:	ccmp	w0, #0x1, #0x0, ne  // ne = any
  459548:	b.ls	4594ac <nftw@plt+0x5692c>  // b.plast
  45954c:	add	x0, x3, #0x1
  459550:	str	x0, [x19, #24]
  459554:	ldrb	w0, [x3, #1]
  459558:	cbz	w0, 459498 <nftw@plt+0x56918>
  45955c:	add	x0, x3, #0x2
  459560:	str	x0, [x19, #24]
  459564:	ldrb	w0, [x3, #1]
  459568:	cmp	w0, #0x68
  45956c:	b.eq	45a06c <nftw@plt+0x574ec>  // b.none
  459570:	b.hi	459a84 <nftw@plt+0x56f04>  // b.pmore
  459574:	cmp	w0, #0x63
  459578:	b.eq	45a02c <nftw@plt+0x574ac>  // b.none
  45957c:	b.ls	459a34 <nftw@plt+0x56eb4>  // b.plast
  459580:	cmp	w0, #0x65
  459584:	b.eq	459fdc <nftw@plt+0x5745c>  // b.none
  459588:	cmp	w0, #0x66
  45958c:	b.ne	4599f4 <nftw@plt+0x56e74>  // b.any
  459590:	ldp	w0, w1, [x19, #40]
  459594:	cmp	w0, w1
  459598:	b.ge	45a21c <nftw@plt+0x5769c>  // b.tcont
  45959c:	mov	w1, #0x18                  	// #24
  4595a0:	add	w5, w0, #0x1
  4595a4:	ldr	x3, [x19, #32]
  4595a8:	smull	x0, w0, w1
  4595ac:	ldr	w2, [x19, #72]
  4595b0:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x1ebb8>
  4595b4:	add	x1, x1, #0xd0
  4595b8:	add	x20, x3, x0
  4595bc:	add	x1, x1, #0x4c8
  4595c0:	mov	w4, #0x27                  	// #39
  4595c4:	str	wzr, [x20, #4]
  4595c8:	add	w2, w2, #0x9
  4595cc:	str	w5, [x19, #40]
  4595d0:	str	w4, [x3, x0]
  4595d4:	str	x1, [x20, #8]
  4595d8:	str	w2, [x19, #72]
  4595dc:	b	45949c <nftw@plt+0x5691c>
  4595e0:	ldr	x1, [x0, #8]
  4595e4:	str	x20, [x0, #8]
  4595e8:	ldr	x0, [x21]
  4595ec:	str	x0, [sp, #72]
  4595f0:	str	x1, [x21]
  4595f4:	ldr	x20, [sp, #72]
  4595f8:	b	4594fc <nftw@plt+0x5697c>
  4595fc:	bl	45aa40 <nftw@plt+0x57ec0>
  459600:	str	x0, [x21]
  459604:	b	4594e4 <nftw@plt+0x56964>
  459608:	ldp	w2, w4, [x19, #40]
  45960c:	sub	w0, w0, #0x61
  459610:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x1ebb8>
  459614:	add	x1, x1, #0xd0
  459618:	sbfiz	x0, x0, #5, #32
  45961c:	add	x1, x1, #0x188
  459620:	add	x0, x1, x0
  459624:	cmp	w2, w4
  459628:	b.ge	45a21c <nftw@plt+0x5769c>  // b.tcont
  45962c:	mov	w1, #0x18                  	// #24
  459630:	add	w6, w2, #0x1
  459634:	ldr	x4, [x19, #32]
  459638:	smull	x2, w2, w1
  45963c:	ldr	w7, [x0, #8]
  459640:	mov	w5, #0x27                  	// #39
  459644:	add	x20, x4, x2
  459648:	ldr	w1, [x19, #72]
  45964c:	add	x3, x3, #0x1
  459650:	add	w1, w1, w7
  459654:	str	wzr, [x20, #4]
  459658:	str	w6, [x19, #40]
  45965c:	str	w5, [x4, x2]
  459660:	str	x0, [x20, #8]
  459664:	str	x3, [x19, #24]
  459668:	str	w1, [x19, #72]
  45966c:	b	45949c <nftw@plt+0x5691c>
  459670:	add	x3, x3, #0x1
  459674:	str	x3, [x19, #24]
  459678:	mov	x0, x19
  45967c:	bl	44c798 <nftw@plt+0x49c18>
  459680:	str	x0, [sp, #72]
  459684:	ldr	x1, [x19, #24]
  459688:	mov	x20, x0
  45968c:	ldrb	w0, [x1]
  459690:	cmp	w0, #0x49
  459694:	b.eq	459e5c <nftw@plt+0x572dc>  // b.none
  459698:	mov	x0, x19
  45969c:	bl	459438 <nftw@plt+0x568b8>
  4596a0:	ldr	x3, [sp, #72]
  4596a4:	mov	x2, x0
  4596a8:	mov	w1, #0x21                  	// #33
  4596ac:	mov	x0, x19
  4596b0:	bl	44c310 <nftw@plt+0x49790>
  4596b4:	mov	x20, x0
  4596b8:	str	x0, [sp, #72]
  4596bc:	nop
  4596c0:	cbz	x20, 459498 <nftw@plt+0x56918>
  4596c4:	ldp	w0, w1, [x19, #56]
  4596c8:	cmp	w0, w1
  4596cc:	b.ge	459498 <nftw@plt+0x56918>  // b.tcont
  4596d0:	ldr	x2, [x19, #48]
  4596d4:	add	w1, w0, #0x1
  4596d8:	str	x20, [x2, w0, sxtw #3]
  4596dc:	str	w1, [x19, #56]
  4596e0:	ldr	x20, [sp, #72]
  4596e4:	mov	x0, x20
  4596e8:	ldp	x19, x20, [sp, #16]
  4596ec:	ldp	x29, x30, [sp], #80
  4596f0:	ret
  4596f4:	mov	x0, x19
  4596f8:	stp	x21, x22, [sp, #32]
  4596fc:	bl	44ce50 <nftw@plt+0x4a2d0>
  459700:	ldr	x21, [x19, #24]
  459704:	str	x0, [sp, #72]
  459708:	mov	x20, x0
  45970c:	ldrb	w0, [x21]
  459710:	cmp	w0, #0x49
  459714:	b.eq	459dbc <nftw@plt+0x5723c>  // b.none
  459718:	ldp	x21, x22, [sp, #32]
  45971c:	b	4596c0 <nftw@plt+0x56b40>
  459720:	ldrb	w0, [x3, #1]
  459724:	sub	w1, w0, #0x30
  459728:	cmp	w0, #0x5f
  45972c:	and	w1, w1, #0xff
  459730:	ccmp	w1, #0x9, #0x0, ne  // ne = any
  459734:	b.ls	459748 <nftw@plt+0x56bc8>  // b.plast
  459738:	sub	w0, w0, #0x41
  45973c:	and	w0, w0, #0xff
  459740:	cmp	w0, #0x19
  459744:	b.hi	459e38 <nftw@plt+0x572b8>  // b.pmore
  459748:	mov	w1, #0x0                   	// #0
  45974c:	mov	x0, x19
  459750:	bl	44c960 <nftw@plt+0x49de0>
  459754:	str	x0, [sp, #72]
  459758:	ldr	x1, [x19, #24]
  45975c:	mov	x20, x0
  459760:	ldrb	w0, [x1]
  459764:	cmp	w0, #0x49
  459768:	b.ne	45949c <nftw@plt+0x5691c>  // b.any
  45976c:	add	x1, x1, #0x1
  459770:	str	x1, [x19, #24]
  459774:	mov	x0, x19
  459778:	bl	45be08 <nftw@plt+0x59288>
  45977c:	mov	x3, x0
  459780:	mov	x2, x20
  459784:	mov	x0, x19
  459788:	mov	w1, #0x4                   	// #4
  45978c:	bl	44c310 <nftw@plt+0x49790>
  459790:	mov	x20, x0
  459794:	str	x0, [sp, #72]
  459798:	b	4596c0 <nftw@plt+0x56b40>
  45979c:	add	x3, x3, #0x1
  4597a0:	str	x3, [x19, #24]
  4597a4:	mov	x0, x19
  4597a8:	bl	459438 <nftw@plt+0x568b8>
  4597ac:	mov	x2, x0
  4597b0:	mov	x3, #0x0                   	// #0
  4597b4:	mov	x0, x19
  4597b8:	mov	w1, #0x23                  	// #35
  4597bc:	bl	44c310 <nftw@plt+0x49790>
  4597c0:	mov	x20, x0
  4597c4:	str	x0, [sp, #72]
  4597c8:	b	4596c0 <nftw@plt+0x56b40>
  4597cc:	add	x3, x3, #0x1
  4597d0:	str	x3, [x19, #24]
  4597d4:	mov	x0, x19
  4597d8:	bl	459438 <nftw@plt+0x568b8>
  4597dc:	mov	x2, x0
  4597e0:	mov	x3, #0x0                   	// #0
  4597e4:	mov	x0, x19
  4597e8:	mov	w1, #0x22                  	// #34
  4597ec:	bl	44c310 <nftw@plt+0x49790>
  4597f0:	mov	x20, x0
  4597f4:	str	x0, [sp, #72]
  4597f8:	b	4596c0 <nftw@plt+0x56b40>
  4597fc:	add	x3, x3, #0x1
  459800:	str	x3, [x19, #24]
  459804:	mov	x0, x19
  459808:	bl	459438 <nftw@plt+0x568b8>
  45980c:	mov	x2, x0
  459810:	mov	x3, #0x0                   	// #0
  459814:	mov	x0, x19
  459818:	mov	w1, #0x24                  	// #36
  45981c:	bl	44c310 <nftw@plt+0x49790>
  459820:	mov	x20, x0
  459824:	str	x0, [sp, #72]
  459828:	b	4596c0 <nftw@plt+0x56b40>
  45982c:	add	x3, x3, #0x1
  459830:	str	x3, [x19, #24]
  459834:	mov	x0, x19
  459838:	bl	459438 <nftw@plt+0x568b8>
  45983c:	mov	x2, x0
  459840:	mov	x3, #0x0                   	// #0
  459844:	mov	x0, x19
  459848:	mov	w1, #0x26                  	// #38
  45984c:	bl	44c310 <nftw@plt+0x49790>
  459850:	mov	x20, x0
  459854:	str	x0, [sp, #72]
  459858:	b	4596c0 <nftw@plt+0x56b40>
  45985c:	mov	x0, x19
  459860:	bl	45aa40 <nftw@plt+0x57ec0>
  459864:	mov	x20, x0
  459868:	str	x0, [sp, #72]
  45986c:	b	4596c0 <nftw@plt+0x56b40>
  459870:	add	x3, x3, #0x1
  459874:	str	x3, [x19, #24]
  459878:	mov	x0, x19
  45987c:	bl	44c798 <nftw@plt+0x49c18>
  459880:	mov	x2, x0
  459884:	mov	x3, #0x0                   	// #0
  459888:	mov	x0, x19
  45988c:	mov	w1, #0x28                  	// #40
  459890:	bl	44c310 <nftw@plt+0x49790>
  459894:	mov	x20, x0
  459898:	str	x0, [sp, #72]
  45989c:	b	4596c0 <nftw@plt+0x56b40>
  4598a0:	add	x3, x3, #0x1
  4598a4:	str	x3, [x19, #24]
  4598a8:	mov	x0, x19
  4598ac:	bl	459438 <nftw@plt+0x568b8>
  4598b0:	mov	x2, x0
  4598b4:	mov	x3, #0x0                   	// #0
  4598b8:	mov	x0, x19
  4598bc:	mov	w1, #0x25                  	// #37
  4598c0:	bl	44c310 <nftw@plt+0x49790>
  4598c4:	mov	x20, x0
  4598c8:	str	x0, [sp, #72]
  4598cc:	b	4596c0 <nftw@plt+0x56b40>
  4598d0:	mov	x0, x19
  4598d4:	bl	45ca28 <nftw@plt+0x59ea8>
  4598d8:	mov	x20, x0
  4598dc:	str	x0, [sp, #72]
  4598e0:	b	4596c0 <nftw@plt+0x56b40>
  4598e4:	add	x4, x3, #0x1
  4598e8:	str	x4, [x19, #24]
  4598ec:	ldrb	w0, [x3, #1]
  4598f0:	cmp	w0, #0x5f
  4598f4:	b.eq	459e30 <nftw@plt+0x572b0>  // b.none
  4598f8:	sub	w0, w0, #0x30
  4598fc:	and	w0, w0, #0xff
  459900:	cmp	w0, #0x9
  459904:	b.hi	459e88 <nftw@plt+0x57308>  // b.pmore
  459908:	mov	x1, x4
  45990c:	nop
  459910:	mov	x3, x1
  459914:	add	x1, x1, #0x1
  459918:	str	x1, [x19, #24]
  45991c:	ldrb	w0, [x1]
  459920:	sub	w0, w0, #0x30
  459924:	and	w0, w0, #0xff
  459928:	cmp	w0, #0x9
  45992c:	b.ls	459910 <nftw@plt+0x56d90>  // b.plast
  459930:	ldp	w0, w5, [x19, #40]
  459934:	sub	x2, x1, x4
  459938:	cmp	w0, w5
  45993c:	b.ge	459498 <nftw@plt+0x56918>  // b.tcont
  459940:	mov	w7, #0x18                  	// #24
  459944:	add	w6, w0, #0x1
  459948:	ldr	x5, [x19, #32]
  45994c:	smull	x0, w0, w7
  459950:	cmp	w2, #0x0
  459954:	add	x20, x5, x0
  459958:	str	wzr, [x20, #4]
  45995c:	str	w6, [x19, #40]
  459960:	b.le	459498 <nftw@plt+0x56918>
  459964:	str	xzr, [x5, x0]
  459968:	str	x4, [x20, #8]
  45996c:	str	w2, [x20, #16]
  459970:	ldrb	w0, [x3, #1]
  459974:	mov	x4, x1
  459978:	cmp	w0, #0x5f
  45997c:	b.ne	459498 <nftw@plt+0x56918>  // b.any
  459980:	add	x4, x4, #0x1
  459984:	str	x4, [x19, #24]
  459988:	mov	x0, x19
  45998c:	bl	459438 <nftw@plt+0x568b8>
  459990:	mov	x3, x0
  459994:	mov	x2, x20
  459998:	mov	x0, x19
  45999c:	mov	w1, #0x2a                  	// #42
  4599a0:	bl	44c310 <nftw@plt+0x49790>
  4599a4:	mov	x20, x0
  4599a8:	str	x0, [sp, #72]
  4599ac:	b	4596c0 <nftw@plt+0x56b40>
  4599b0:	add	x3, x3, #0x1
  4599b4:	str	x3, [x19, #24]
  4599b8:	mov	x0, x19
  4599bc:	bl	459438 <nftw@plt+0x568b8>
  4599c0:	mov	x20, x0
  4599c4:	cbz	x0, 459498 <nftw@plt+0x56918>
  4599c8:	mov	x0, x19
  4599cc:	bl	459438 <nftw@plt+0x568b8>
  4599d0:	mov	x3, x0
  4599d4:	cbz	x0, 459498 <nftw@plt+0x56918>
  4599d8:	mov	x2, x20
  4599dc:	mov	x0, x19
  4599e0:	mov	w1, #0x2b                  	// #43
  4599e4:	bl	44c310 <nftw@plt+0x49790>
  4599e8:	mov	x20, x0
  4599ec:	str	x0, [sp, #72]
  4599f0:	b	4596c0 <nftw@plt+0x56b40>
  4599f4:	cmp	w0, #0x64
  4599f8:	b.ne	459498 <nftw@plt+0x56918>  // b.any
  4599fc:	ldp	w0, w1, [x19, #40]
  459a00:	cmp	w0, w1
  459a04:	b.ge	45a21c <nftw@plt+0x5769c>  // b.tcont
  459a08:	mov	w1, #0x18                  	// #24
  459a0c:	add	w5, w0, #0x1
  459a10:	ldr	x3, [x19, #32]
  459a14:	smull	x0, w0, w1
  459a18:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x1ebb8>
  459a1c:	add	x1, x1, #0xd0
  459a20:	ldr	w2, [x19, #72]
  459a24:	add	x1, x1, #0x4e8
  459a28:	add	x20, x3, x0
  459a2c:	mov	w4, #0x27                  	// #39
  459a30:	b	4595c4 <nftw@plt+0x56a44>
  459a34:	cmp	w0, #0x54
  459a38:	b.eq	459bb0 <nftw@plt+0x57030>  // b.none
  459a3c:	cmp	w0, #0x61
  459a40:	b.ne	459c44 <nftw@plt+0x570c4>  // b.any
  459a44:	ldp	w0, w1, [x19, #40]
  459a48:	cmp	w0, w1
  459a4c:	b.ge	459498 <nftw@plt+0x56918>  // b.tcont
  459a50:	mov	w3, #0x18                  	// #24
  459a54:	add	w1, w0, #0x1
  459a58:	ldr	x2, [x19, #32]
  459a5c:	smull	x0, w0, w3
  459a60:	str	w1, [x19, #40]
  459a64:	mov	w3, #0x4                   	// #4
  459a68:	add	x20, x2, x0
  459a6c:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x1ebb8>
  459a70:	add	x1, x1, #0xf18
  459a74:	str	xzr, [x2, x0]
  459a78:	str	x1, [x20, #8]
  459a7c:	str	w3, [x20, #16]
  459a80:	b	45949c <nftw@plt+0x5691c>
  459a84:	cmp	w0, #0x73
  459a88:	b.eq	459f04 <nftw@plt+0x57384>  // b.none
  459a8c:	b.ls	459c0c <nftw@plt+0x5708c>  // b.plast
  459a90:	cmp	w0, #0x75
  459a94:	b.eq	459f8c <nftw@plt+0x5740c>  // b.none
  459a98:	cmp	w0, #0x76
  459a9c:	b.ne	459ba8 <nftw@plt+0x57028>  // b.any
  459aa0:	ldrb	w0, [x3, #2]
  459aa4:	cmp	w0, #0x5f
  459aa8:	b.eq	45a1a0 <nftw@plt+0x57620>  // b.none
  459aac:	ldp	w0, w1, [x19, #40]
  459ab0:	cmp	w0, w1
  459ab4:	b.ge	459498 <nftw@plt+0x56918>  // b.tcont
  459ab8:	mov	w2, #0x18                  	// #24
  459abc:	add	w4, w0, #0x1
  459ac0:	ldr	x1, [x19, #32]
  459ac4:	smull	x0, w0, w2
  459ac8:	mov	w2, #0x42                  	// #66
  459acc:	add	x20, x1, x0
  459ad0:	str	wzr, [x20, #4]
  459ad4:	str	w4, [x19, #40]
  459ad8:	str	w2, [x1, x0]
  459adc:	ldrb	w0, [x3, #2]
  459ae0:	cmp	w0, #0x6e
  459ae4:	b.eq	45a1d4 <nftw@plt+0x57654>  // b.none
  459ae8:	sub	w1, w0, #0x30
  459aec:	and	w1, w1, #0xff
  459af0:	cmp	w1, #0x9
  459af4:	b.hi	45a1f8 <nftw@plt+0x57678>  // b.pmore
  459af8:	mov	w2, #0x0                   	// #0
  459afc:	mov	w6, #0xcccd                	// #52429
  459b00:	mov	w5, w0
  459b04:	mov	w7, #0x7fffffff            	// #2147483647
  459b08:	mov	w0, #0x0                   	// #0
  459b0c:	movk	w6, #0xcccc, lsl #16
  459b10:	ldr	x3, [x19, #24]
  459b14:	b	459b30 <nftw@plt+0x56fb0>
  459b18:	sub	w1, w7, w1
  459b1c:	mov	w5, w4
  459b20:	umull	x1, w1, w6
  459b24:	lsr	x1, x1, #35
  459b28:	cmp	w1, w0
  459b2c:	b.lt	45a1cc <nftw@plt+0x5764c>  // b.tstop
  459b30:	add	x3, x3, #0x1
  459b34:	str	x3, [x19, #24]
  459b38:	add	w0, w0, w0, lsl #2
  459b3c:	ldrb	w4, [x3]
  459b40:	add	w0, w5, w0, lsl #1
  459b44:	sub	w0, w0, #0x30
  459b48:	sub	w1, w4, #0x30
  459b4c:	and	w5, w1, #0xff
  459b50:	cmp	w5, #0x9
  459b54:	b.ls	459b18 <nftw@plt+0x56f98>  // b.plast
  459b58:	cbz	w2, 459b60 <nftw@plt+0x56fe0>
  459b5c:	neg	w0, w0
  459b60:	sxtw	x0, w0
  459b64:	str	x0, [x20, #8]
  459b68:	ldr	x0, [x19, #24]
  459b6c:	ldrb	w1, [x0]
  459b70:	cmp	w1, #0x5f
  459b74:	b.ne	459498 <nftw@plt+0x56918>  // b.any
  459b78:	add	x0, x0, #0x1
  459b7c:	str	x0, [x19, #24]
  459b80:	mov	x0, x19
  459b84:	bl	459438 <nftw@plt+0x568b8>
  459b88:	mov	x3, x0
  459b8c:	mov	x2, x20
  459b90:	mov	x0, x19
  459b94:	mov	w1, #0x2d                  	// #45
  459b98:	bl	44c310 <nftw@plt+0x49790>
  459b9c:	mov	x20, x0
  459ba0:	str	x0, [sp, #72]
  459ba4:	b	4596c0 <nftw@plt+0x56b40>
  459ba8:	cmp	w0, #0x74
  459bac:	b.ne	459498 <nftw@plt+0x56918>  // b.any
  459bb0:	ldr	w20, [x19, #76]
  459bb4:	mov	w0, #0x1                   	// #1
  459bb8:	str	w0, [x19, #76]
  459bbc:	mov	x0, x19
  459bc0:	bl	45b3e0 <nftw@plt+0x58860>
  459bc4:	str	w20, [x19, #76]
  459bc8:	mov	x2, x0
  459bcc:	mov	x3, #0x0                   	// #0
  459bd0:	mov	x0, x19
  459bd4:	mov	w1, #0x43                  	// #67
  459bd8:	bl	44c310 <nftw@plt+0x49790>
  459bdc:	str	x0, [sp, #72]
  459be0:	mov	x20, x0
  459be4:	cbz	x0, 459498 <nftw@plt+0x56918>
  459be8:	ldr	x0, [x19, #24]
  459bec:	ldrb	w1, [x0]
  459bf0:	cbz	w1, 459498 <nftw@plt+0x56918>
  459bf4:	add	x1, x0, #0x1
  459bf8:	str	x1, [x19, #24]
  459bfc:	ldrb	w0, [x0]
  459c00:	cmp	w0, #0x45
  459c04:	b.ne	459498 <nftw@plt+0x56918>  // b.any
  459c08:	b	4596c4 <nftw@plt+0x56b44>
  459c0c:	cmp	w0, #0x6e
  459c10:	b.eq	459f3c <nftw@plt+0x573bc>  // b.none
  459c14:	cmp	w0, #0x70
  459c18:	b.ne	459d64 <nftw@plt+0x571e4>  // b.any
  459c1c:	mov	x0, x19
  459c20:	bl	459438 <nftw@plt+0x568b8>
  459c24:	mov	x3, #0x0                   	// #0
  459c28:	mov	x2, x0
  459c2c:	mov	w1, #0x4b                  	// #75
  459c30:	mov	x0, x19
  459c34:	bl	44c310 <nftw@plt+0x49790>
  459c38:	mov	x20, x0
  459c3c:	str	x0, [sp, #72]
  459c40:	b	4596c0 <nftw@plt+0x56b40>
  459c44:	cmp	w0, #0x46
  459c48:	b.ne	459498 <nftw@plt+0x56918>  // b.any
  459c4c:	ldp	w0, w1, [x19, #40]
  459c50:	cmp	w0, w1
  459c54:	b.ge	45a208 <nftw@plt+0x57688>  // b.tcont
  459c58:	mov	w2, #0x18                  	// #24
  459c5c:	add	w4, w0, #0x1
  459c60:	ldr	x1, [x19, #32]
  459c64:	smull	x0, w0, w2
  459c68:	mov	w2, #0x2c                  	// #44
  459c6c:	add	x20, x1, x0
  459c70:	str	wzr, [x20, #4]
  459c74:	str	w4, [x19, #40]
  459c78:	str	x20, [sp, #72]
  459c7c:	str	w2, [x1, x0]
  459c80:	ldrb	w0, [x3, #2]
  459c84:	sub	w0, w0, #0x30
  459c88:	and	w0, w0, #0xff
  459c8c:	cmp	w0, #0x9
  459c90:	cset	w1, ls  // ls = plast
  459c94:	strh	w1, [x20, #16]
  459c98:	b.ls	45a104 <nftw@plt+0x57584>  // b.plast
  459c9c:	mov	x0, x19
  459ca0:	bl	459438 <nftw@plt+0x568b8>
  459ca4:	str	x0, [x20, #8]
  459ca8:	ldr	x20, [sp, #72]
  459cac:	ldr	x0, [x20, #8]
  459cb0:	cbz	x0, 459498 <nftw@plt+0x56918>
  459cb4:	ldr	x2, [x19, #24]
  459cb8:	ldrb	w1, [x2]
  459cbc:	cmp	w1, #0x6e
  459cc0:	b.ne	459cd4 <nftw@plt+0x57154>  // b.any
  459cc4:	add	x0, x2, #0x1
  459cc8:	str	x0, [x19, #24]
  459ccc:	ldrb	w1, [x2, #1]
  459cd0:	mov	x2, x0
  459cd4:	sub	w0, w1, #0x30
  459cd8:	mov	w5, #0xcccd                	// #52429
  459cdc:	and	w0, w0, #0xff
  459ce0:	mov	w4, w1
  459ce4:	cmp	w0, #0x9
  459ce8:	mov	w1, #0x0                   	// #0
  459cec:	mov	w6, #0x7fffffff            	// #2147483647
  459cf0:	movk	w5, #0xcccc, lsl #16
  459cf4:	b.ls	459d14 <nftw@plt+0x57194>  // b.plast
  459cf8:	b	459d3c <nftw@plt+0x571bc>
  459cfc:	sub	w0, w6, w0
  459d00:	mov	w4, w3
  459d04:	umull	x0, w0, w5
  459d08:	lsr	x0, x0, #35
  459d0c:	cmp	w0, w1
  459d10:	b.lt	459d3c <nftw@plt+0x571bc>  // b.tstop
  459d14:	add	x2, x2, #0x1
  459d18:	str	x2, [x19, #24]
  459d1c:	add	w1, w1, w1, lsl #2
  459d20:	ldrb	w3, [x2]
  459d24:	add	w1, w4, w1, lsl #1
  459d28:	sub	w1, w1, #0x30
  459d2c:	sub	w0, w3, #0x30
  459d30:	and	w4, w0, #0xff
  459d34:	cmp	w4, #0x9
  459d38:	b.ls	459cfc <nftw@plt+0x5717c>  // b.plast
  459d3c:	ldr	x1, [x19, #24]
  459d40:	ldrb	w0, [x1]
  459d44:	cbz	w0, 459d54 <nftw@plt+0x571d4>
  459d48:	add	x0, x1, #0x1
  459d4c:	str	x0, [x19, #24]
  459d50:	ldrb	w0, [x1]
  459d54:	cmp	w0, #0x73
  459d58:	cset	w0, eq  // eq = none
  459d5c:	strh	w0, [x20, #18]
  459d60:	b	45949c <nftw@plt+0x5691c>
  459d64:	cmp	w0, #0x69
  459d68:	b.ne	459498 <nftw@plt+0x56918>  // b.any
  459d6c:	ldp	w0, w1, [x19, #40]
  459d70:	cmp	w0, w1
  459d74:	b.ge	45a21c <nftw@plt+0x5769c>  // b.tcont
  459d78:	mov	w1, #0x18                  	// #24
  459d7c:	add	w5, w0, #0x1
  459d80:	ldr	x3, [x19, #32]
  459d84:	smull	x0, w0, w1
  459d88:	ldr	w2, [x19, #72]
  459d8c:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x1ebb8>
  459d90:	add	x1, x1, #0xd0
  459d94:	add	x20, x3, x0
  459d98:	add	x1, x1, #0x588
  459d9c:	mov	w4, #0x27                  	// #39
  459da0:	str	wzr, [x20, #4]
  459da4:	add	w2, w2, #0x8
  459da8:	str	w5, [x19, #40]
  459dac:	str	w4, [x3, x0]
  459db0:	str	x1, [x20, #8]
  459db4:	str	w2, [x19, #72]
  459db8:	b	45949c <nftw@plt+0x5691c>
  459dbc:	ldr	w0, [x19, #80]
  459dc0:	cbnz	w0, 459eb4 <nftw@plt+0x57334>
  459dc4:	cbz	x20, 459494 <nftw@plt+0x56914>
  459dc8:	ldp	w0, w1, [x19, #56]
  459dcc:	cmp	w0, w1
  459dd0:	b.ge	459494 <nftw@plt+0x56914>  // b.tcont
  459dd4:	ldr	x2, [x19, #48]
  459dd8:	add	w1, w0, #0x1
  459ddc:	mov	x3, #0x0                   	// #0
  459de0:	str	x20, [x2, w0, sxtw #3]
  459de4:	str	w1, [x19, #56]
  459de8:	ldrb	w0, [x21]
  459dec:	sub	w0, w0, #0x49
  459df0:	and	w0, w0, #0xff
  459df4:	cmp	w0, #0x1
  459df8:	b.hi	459e10 <nftw@plt+0x57290>  // b.pmore
  459dfc:	add	x21, x21, #0x1
  459e00:	str	x21, [x19, #24]
  459e04:	mov	x0, x19
  459e08:	bl	45be08 <nftw@plt+0x59288>
  459e0c:	mov	x3, x0
  459e10:	mov	x2, x20
  459e14:	mov	x0, x19
  459e18:	mov	w1, #0x4                   	// #4
  459e1c:	bl	44c310 <nftw@plt+0x49790>
  459e20:	mov	x20, x0
  459e24:	str	x0, [sp, #72]
  459e28:	ldp	x21, x22, [sp, #32]
  459e2c:	b	4596c0 <nftw@plt+0x56b40>
  459e30:	mov	x20, #0x0                   	// #0
  459e34:	b	459980 <nftw@plt+0x56e00>
  459e38:	mov	x0, x19
  459e3c:	bl	45ca28 <nftw@plt+0x59ea8>
  459e40:	str	x0, [sp, #72]
  459e44:	mov	x20, x0
  459e48:	cbz	x0, 459498 <nftw@plt+0x56918>
  459e4c:	ldr	w0, [x0]
  459e50:	cmp	w0, #0x18
  459e54:	b.ne	4596c4 <nftw@plt+0x56b44>  // b.any
  459e58:	b	45949c <nftw@plt+0x5691c>
  459e5c:	add	x1, x1, #0x1
  459e60:	str	x1, [x19, #24]
  459e64:	mov	x0, x19
  459e68:	bl	45be08 <nftw@plt+0x59288>
  459e6c:	mov	x3, x0
  459e70:	mov	x2, x20
  459e74:	mov	x0, x19
  459e78:	mov	w1, #0x4                   	// #4
  459e7c:	bl	44c310 <nftw@plt+0x49790>
  459e80:	str	x0, [sp, #72]
  459e84:	b	459698 <nftw@plt+0x56b18>
  459e88:	ldr	w20, [x19, #76]
  459e8c:	mov	w0, #0x1                   	// #1
  459e90:	str	w0, [x19, #76]
  459e94:	mov	x0, x19
  459e98:	bl	45b3e0 <nftw@plt+0x58860>
  459e9c:	str	w20, [x19, #76]
  459ea0:	mov	x20, x0
  459ea4:	cbz	x0, 459498 <nftw@plt+0x56918>
  459ea8:	ldr	x1, [x19, #24]
  459eac:	ldrb	w0, [x1]
  459eb0:	b	459974 <nftw@plt+0x56df4>
  459eb4:	ldr	w22, [x19, #56]
  459eb8:	add	x0, x21, #0x1
  459ebc:	ldr	w20, [x19, #72]
  459ec0:	str	x23, [sp, #48]
  459ec4:	str	x0, [x19, #24]
  459ec8:	mov	x0, x19
  459ecc:	ldr	w23, [x19, #40]
  459ed0:	bl	45be08 <nftw@plt+0x59288>
  459ed4:	ldr	x1, [x19, #24]
  459ed8:	ldrb	w1, [x1]
  459edc:	cmp	w1, #0x49
  459ee0:	b.eq	45a0bc <nftw@plt+0x5753c>  // b.none
  459ee4:	str	x21, [x19, #24]
  459ee8:	str	w23, [x19, #40]
  459eec:	str	w22, [x19, #56]
  459ef0:	str	w20, [x19, #72]
  459ef4:	ldp	x21, x22, [sp, #32]
  459ef8:	ldr	x23, [sp, #48]
  459efc:	ldr	x20, [sp, #72]
  459f00:	b	4596c0 <nftw@plt+0x56b40>
  459f04:	ldp	w0, w1, [x19, #40]
  459f08:	cmp	w0, w1
  459f0c:	b.ge	45a21c <nftw@plt+0x5769c>  // b.tcont
  459f10:	mov	w1, #0x18                  	// #24
  459f14:	add	w5, w0, #0x1
  459f18:	ldr	x3, [x19, #32]
  459f1c:	smull	x0, w0, w1
  459f20:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x1ebb8>
  459f24:	add	x1, x1, #0xd0
  459f28:	ldr	w2, [x19, #72]
  459f2c:	add	x1, x1, #0x568
  459f30:	add	x20, x3, x0
  459f34:	mov	w4, #0x27                  	// #39
  459f38:	b	459da0 <nftw@plt+0x57220>
  459f3c:	ldp	w0, w1, [x19, #40]
  459f40:	cmp	w0, w1
  459f44:	b.ge	45a21c <nftw@plt+0x5769c>  // b.tcont
  459f48:	mov	w1, #0x18                  	// #24
  459f4c:	add	w5, w0, #0x1
  459f50:	ldr	x3, [x19, #32]
  459f54:	smull	x0, w0, w1
  459f58:	ldr	w2, [x19, #72]
  459f5c:	mov	w4, #0x27                  	// #39
  459f60:	add	x20, x3, x0
  459f64:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x1ebb8>
  459f68:	add	x1, x1, #0xd0
  459f6c:	add	w2, w2, #0x11
  459f70:	add	x1, x1, #0x5a8
  459f74:	str	wzr, [x20, #4]
  459f78:	str	w5, [x19, #40]
  459f7c:	str	w4, [x3, x0]
  459f80:	str	x1, [x20, #8]
  459f84:	str	w2, [x19, #72]
  459f88:	b	45949c <nftw@plt+0x5691c>
  459f8c:	ldp	w0, w1, [x19, #40]
  459f90:	cmp	w0, w1
  459f94:	b.ge	45a21c <nftw@plt+0x5769c>  // b.tcont
  459f98:	mov	w1, #0x18                  	// #24
  459f9c:	add	w5, w0, #0x1
  459fa0:	ldr	x3, [x19, #32]
  459fa4:	smull	x0, w0, w1
  459fa8:	ldr	w2, [x19, #72]
  459fac:	mov	w4, #0x27                  	// #39
  459fb0:	add	x20, x3, x0
  459fb4:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x1ebb8>
  459fb8:	add	x1, x1, #0xd0
  459fbc:	add	w2, w2, #0x7
  459fc0:	add	x1, x1, #0x548
  459fc4:	str	wzr, [x20, #4]
  459fc8:	str	w5, [x19, #40]
  459fcc:	str	w4, [x3, x0]
  459fd0:	str	x1, [x20, #8]
  459fd4:	str	w2, [x19, #72]
  459fd8:	b	45949c <nftw@plt+0x5691c>
  459fdc:	ldp	w0, w1, [x19, #40]
  459fe0:	cmp	w0, w1
  459fe4:	b.ge	45a21c <nftw@plt+0x5769c>  // b.tcont
  459fe8:	mov	w1, #0x18                  	// #24
  459fec:	add	w5, w0, #0x1
  459ff0:	ldr	x3, [x19, #32]
  459ff4:	smull	x0, w0, w1
  459ff8:	ldr	w2, [x19, #72]
  459ffc:	mov	w4, #0x27                  	// #39
  45a000:	add	x20, x3, x0
  45a004:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x1ebb8>
  45a008:	add	x1, x1, #0xd0
  45a00c:	add	w2, w2, #0xa
  45a010:	add	x1, x1, #0x508
  45a014:	str	wzr, [x20, #4]
  45a018:	str	w5, [x19, #40]
  45a01c:	str	w4, [x3, x0]
  45a020:	str	x1, [x20, #8]
  45a024:	str	w2, [x19, #72]
  45a028:	b	45949c <nftw@plt+0x5691c>
  45a02c:	ldp	w0, w1, [x19, #40]
  45a030:	cmp	w0, w1
  45a034:	b.ge	459498 <nftw@plt+0x56918>  // b.tcont
  45a038:	mov	w3, #0x18                  	// #24
  45a03c:	add	w1, w0, #0x1
  45a040:	ldr	x2, [x19, #32]
  45a044:	smull	x0, w0, w3
  45a048:	str	w1, [x19, #40]
  45a04c:	mov	w3, #0xe                   	// #14
  45a050:	add	x20, x2, x0
  45a054:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x1ebb8>
  45a058:	add	x1, x1, #0xf20
  45a05c:	str	xzr, [x2, x0]
  45a060:	str	x1, [x20, #8]
  45a064:	str	w3, [x20, #16]
  45a068:	b	45949c <nftw@plt+0x5691c>
  45a06c:	ldp	w0, w1, [x19, #40]
  45a070:	cmp	w0, w1
  45a074:	b.ge	45a21c <nftw@plt+0x5769c>  // b.tcont
  45a078:	mov	w1, #0x18                  	// #24
  45a07c:	add	w5, w0, #0x1
  45a080:	ldr	x3, [x19, #32]
  45a084:	smull	x0, w0, w1
  45a088:	ldr	w2, [x19, #72]
  45a08c:	mov	w4, #0x27                  	// #39
  45a090:	add	x20, x3, x0
  45a094:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x1ebb8>
  45a098:	add	x1, x1, #0xd0
  45a09c:	add	w2, w2, #0x4
  45a0a0:	add	x1, x1, #0x528
  45a0a4:	str	wzr, [x20, #4]
  45a0a8:	str	w5, [x19, #40]
  45a0ac:	str	w4, [x3, x0]
  45a0b0:	str	x1, [x20, #8]
  45a0b4:	str	w2, [x19, #72]
  45a0b8:	b	45949c <nftw@plt+0x5691c>
  45a0bc:	ldr	x2, [sp, #72]
  45a0c0:	cbz	x2, 45a194 <nftw@plt+0x57614>
  45a0c4:	ldp	w4, w1, [x19, #56]
  45a0c8:	cmp	w4, w1
  45a0cc:	b.ge	45a194 <nftw@plt+0x57614>  // b.tcont
  45a0d0:	ldr	x6, [x19, #48]
  45a0d4:	add	w5, w4, #0x1
  45a0d8:	mov	x3, x0
  45a0dc:	mov	w1, #0x4                   	// #4
  45a0e0:	mov	x0, x19
  45a0e4:	str	x2, [x6, w4, sxtw #3]
  45a0e8:	str	w5, [x19, #56]
  45a0ec:	bl	44c310 <nftw@plt+0x49790>
  45a0f0:	mov	x20, x0
  45a0f4:	str	x0, [sp, #72]
  45a0f8:	ldp	x21, x22, [sp, #32]
  45a0fc:	ldr	x23, [sp, #48]
  45a100:	b	4596c0 <nftw@plt+0x56b40>
  45a104:	ldr	x0, [x19, #24]
  45a108:	ldrb	w1, [x0]
  45a10c:	cmp	w1, #0x6e
  45a110:	b.ne	45a120 <nftw@plt+0x575a0>  // b.any
  45a114:	add	x1, x0, #0x1
  45a118:	str	x1, [x19, #24]
  45a11c:	ldrb	w1, [x0, #1]
  45a120:	sub	w0, w1, #0x30
  45a124:	and	w0, w0, #0xff
  45a128:	cmp	w0, #0x9
  45a12c:	b.hi	459c9c <nftw@plt+0x5711c>  // b.pmore
  45a130:	ldr	x2, [x19, #24]
  45a134:	mov	w5, #0xcccd                	// #52429
  45a138:	mov	w3, w1
  45a13c:	mov	w6, #0x7fffffff            	// #2147483647
  45a140:	add	x2, x2, #0x1
  45a144:	mov	w1, #0x0                   	// #0
  45a148:	movk	w5, #0xcccc, lsl #16
  45a14c:	b	45a16c <nftw@plt+0x575ec>
  45a150:	sub	w0, w6, w0
  45a154:	mov	w3, w4
  45a158:	add	x2, x2, #0x1
  45a15c:	umull	x0, w0, w5
  45a160:	lsr	x0, x0, #35
  45a164:	cmp	w0, w1
  45a168:	b.lt	459c9c <nftw@plt+0x5711c>  // b.tstop
  45a16c:	str	x2, [x19, #24]
  45a170:	add	w1, w1, w1, lsl #2
  45a174:	ldrb	w4, [x2]
  45a178:	add	w1, w3, w1, lsl #1
  45a17c:	sub	w1, w1, #0x30
  45a180:	sub	w0, w4, #0x30
  45a184:	and	w3, w0, #0xff
  45a188:	cmp	w3, #0x9
  45a18c:	b.ls	45a150 <nftw@plt+0x575d0>  // b.plast
  45a190:	b	459c9c <nftw@plt+0x5711c>
  45a194:	ldp	x21, x22, [sp, #32]
  45a198:	ldr	x23, [sp, #48]
  45a19c:	b	459498 <nftw@plt+0x56918>
  45a1a0:	add	x3, x3, #0x3
  45a1a4:	ldr	w20, [x19, #76]
  45a1a8:	mov	w1, #0x1                   	// #1
  45a1ac:	str	x3, [x19, #24]
  45a1b0:	str	w1, [x19, #76]
  45a1b4:	mov	x0, x19
  45a1b8:	bl	45b3e0 <nftw@plt+0x58860>
  45a1bc:	str	w20, [x19, #76]
  45a1c0:	mov	x20, x0
  45a1c4:	cbnz	x0, 459b68 <nftw@plt+0x56fe8>
  45a1c8:	b	459498 <nftw@plt+0x56918>
  45a1cc:	mov	w0, #0xffffffff            	// #-1
  45a1d0:	b	459b60 <nftw@plt+0x56fe0>
  45a1d4:	add	x0, x3, #0x3
  45a1d8:	str	x0, [x19, #24]
  45a1dc:	ldrb	w0, [x3, #3]
  45a1e0:	sub	w1, w0, #0x30
  45a1e4:	and	w1, w1, #0xff
  45a1e8:	cmp	w1, #0x9
  45a1ec:	b.hi	45a200 <nftw@plt+0x57680>  // b.pmore
  45a1f0:	mov	w2, #0x1                   	// #1
  45a1f4:	b	459afc <nftw@plt+0x56f7c>
  45a1f8:	mov	w0, #0x0                   	// #0
  45a1fc:	b	459b60 <nftw@plt+0x56fe0>
  45a200:	mov	w0, #0x0                   	// #0
  45a204:	b	459b5c <nftw@plt+0x56fdc>
  45a208:	mov	x0, #0x0                   	// #0
  45a20c:	stp	x21, x22, [sp, #32]
  45a210:	str	x23, [sp, #48]
  45a214:	str	wzr, [x0]
  45a218:	brk	#0x3e8
  45a21c:	mov	x0, #0x0                   	// #0
  45a220:	str	xzr, [sp, #72]
  45a224:	stp	x21, x22, [sp, #32]
  45a228:	str	x23, [sp, #48]
  45a22c:	ldr	x0, [x0, #8]
  45a230:	brk	#0x3e8
  45a234:	nop
  45a238:	stp	x29, x30, [sp, #-80]!
  45a23c:	mov	x29, sp
  45a240:	stp	x19, x20, [sp, #16]
  45a244:	mov	x19, x0
  45a248:	mov	w0, #0x2e                  	// #46
  45a24c:	str	xzr, [sp, #72]
  45a250:	ldr	x4, [x19, #24]
  45a254:	ldrb	w1, [x4]
  45a258:	cmp	w1, #0x45
  45a25c:	ccmp	w1, #0x0, #0x4, ne  // ne = any
  45a260:	ccmp	w1, w0, #0x4, ne  // ne = any
  45a264:	b.eq	45a338 <nftw@plt+0x577b8>  // b.none
  45a268:	mov	w20, #0x4f                  	// #79
  45a26c:	stp	x21, x22, [sp, #32]
  45a270:	add	x22, sp, #0x48
  45a274:	mov	w21, #0x18                  	// #24
  45a278:	str	x23, [sp, #48]
  45a27c:	mov	w23, w0
  45a280:	b	45a2bc <nftw@plt+0x5773c>
  45a284:	ldp	x4, x3, [x19, #24]
  45a288:	smull	x1, w1, w21
  45a28c:	add	x2, x3, x1
  45a290:	str	wzr, [x2, #4]
  45a294:	str	w5, [x19, #40]
  45a298:	str	w23, [x3, x1]
  45a29c:	stp	x0, xzr, [x2, #8]
  45a2a0:	str	x2, [x22]
  45a2a4:	add	x22, x2, #0x10
  45a2a8:	ldrb	w1, [x4]
  45a2ac:	cmp	w1, #0x45
  45a2b0:	ccmp	w1, #0x0, #0x4, ne  // ne = any
  45a2b4:	ccmp	w1, w23, #0x4, ne  // ne = any
  45a2b8:	b.eq	45a30c <nftw@plt+0x5778c>  // b.none
  45a2bc:	cmp	w1, #0x52
  45a2c0:	mov	x0, x19
  45a2c4:	ccmp	w1, w20, #0x4, ne  // ne = any
  45a2c8:	b.ne	45a2d8 <nftw@plt+0x57758>  // b.any
  45a2cc:	ldrb	w1, [x4, #1]
  45a2d0:	cmp	w1, #0x45
  45a2d4:	b.eq	45a30c <nftw@plt+0x5778c>  // b.none
  45a2d8:	bl	459438 <nftw@plt+0x568b8>
  45a2dc:	cbz	x0, 45a330 <nftw@plt+0x577b0>
  45a2e0:	ldp	w1, w2, [x19, #40]
  45a2e4:	add	w5, w1, #0x1
  45a2e8:	cmp	w1, w2
  45a2ec:	b.lt	45a284 <nftw@plt+0x57704>  // b.tstop
  45a2f0:	ldr	x23, [sp, #48]
  45a2f4:	str	xzr, [x22]
  45a2f8:	ldp	x21, x22, [sp, #32]
  45a2fc:	mov	x0, #0x0                   	// #0
  45a300:	ldp	x19, x20, [sp, #16]
  45a304:	ldp	x29, x30, [sp], #80
  45a308:	ret
  45a30c:	ldr	x0, [sp, #72]
  45a310:	cbz	x0, 45a330 <nftw@plt+0x577b0>
  45a314:	ldr	x1, [x0, #16]
  45a318:	cbz	x1, 45a348 <nftw@plt+0x577c8>
  45a31c:	ldp	x19, x20, [sp, #16]
  45a320:	ldp	x21, x22, [sp, #32]
  45a324:	ldr	x23, [sp, #48]
  45a328:	ldp	x29, x30, [sp], #80
  45a32c:	ret
  45a330:	ldp	x21, x22, [sp, #32]
  45a334:	ldr	x23, [sp, #48]
  45a338:	mov	x0, #0x0                   	// #0
  45a33c:	ldp	x19, x20, [sp, #16]
  45a340:	ldp	x29, x30, [sp], #80
  45a344:	ret
  45a348:	ldr	x1, [x0, #8]
  45a34c:	ldr	w2, [x1]
  45a350:	cmp	w2, #0x27
  45a354:	b.ne	45a31c <nftw@plt+0x5779c>  // b.any
  45a358:	ldr	x1, [x1, #8]
  45a35c:	ldr	w2, [x1, #28]
  45a360:	cmp	w2, #0x9
  45a364:	b.ne	45a31c <nftw@plt+0x5779c>  // b.any
  45a368:	ldr	w2, [x1, #8]
  45a36c:	ldr	w1, [x19, #72]
  45a370:	ldp	x21, x22, [sp, #32]
  45a374:	sub	w1, w1, w2
  45a378:	ldr	x23, [sp, #48]
  45a37c:	str	w1, [x19, #72]
  45a380:	str	xzr, [x0, #8]
  45a384:	b	45a300 <nftw@plt+0x57780>
  45a388:	stp	x29, x30, [sp, #-32]!
  45a38c:	mov	x29, sp
  45a390:	ldr	x1, [x0, #24]
  45a394:	stp	x19, x20, [sp, #16]
  45a398:	mov	x19, x0
  45a39c:	ldrb	w10, [x1]
  45a3a0:	cbz	w10, 45a464 <nftw@plt+0x578e4>
  45a3a4:	add	x2, x1, #0x1
  45a3a8:	str	x2, [x0, #24]
  45a3ac:	ldrb	w10, [x1, #1]
  45a3b0:	ldrb	w8, [x1]
  45a3b4:	cbnz	w10, 45a46c <nftw@plt+0x578ec>
  45a3b8:	adrp	x5, 480000 <_obstack_memory_used@@Base+0x1ebb8>
  45a3bc:	add	x5, x5, #0xd0
  45a3c0:	add	x5, x5, #0x5c8
  45a3c4:	mov	w4, #0x43                  	// #67
  45a3c8:	mov	w2, #0x0                   	// #0
  45a3cc:	mov	w7, #0x18                  	// #24
  45a3d0:	sub	w1, w4, w2
  45a3d4:	add	w1, w1, w1, lsr #31
  45a3d8:	add	w1, w2, w1, asr #1
  45a3dc:	smull	x3, w1, w7
  45a3e0:	add	x9, x5, x3
  45a3e4:	ldr	x3, [x5, x3]
  45a3e8:	ldrb	w6, [x3]
  45a3ec:	cmp	w6, w8
  45a3f0:	b.eq	45a414 <nftw@plt+0x57894>  // b.none
  45a3f4:	b.ls	45a45c <nftw@plt+0x578dc>  // b.plast
  45a3f8:	mov	w4, w1
  45a3fc:	cmp	w2, w4
  45a400:	b.ne	45a3d0 <nftw@plt+0x57850>  // b.any
  45a404:	mov	x0, #0x0                   	// #0
  45a408:	ldp	x19, x20, [sp, #16]
  45a40c:	ldp	x29, x30, [sp], #32
  45a410:	ret
  45a414:	ldrb	w3, [x3, #1]
  45a418:	cmp	w3, w10
  45a41c:	b.ne	45a3f4 <nftw@plt+0x57874>  // b.any
  45a420:	ldp	w0, w1, [x19, #40]
  45a424:	cmp	w0, w1
  45a428:	b.ge	45a404 <nftw@plt+0x57884>  // b.tcont
  45a42c:	ldr	x2, [x19, #32]
  45a430:	smull	x7, w0, w7
  45a434:	add	w1, w0, #0x1
  45a438:	mov	w3, #0x32                  	// #50
  45a43c:	add	x0, x2, x7
  45a440:	str	wzr, [x0, #4]
  45a444:	str	w1, [x19, #40]
  45a448:	str	w3, [x2, x7]
  45a44c:	str	x9, [x0, #8]
  45a450:	ldp	x19, x20, [sp, #16]
  45a454:	ldp	x29, x30, [sp], #32
  45a458:	ret
  45a45c:	add	w2, w1, #0x1
  45a460:	b	45a3fc <nftw@plt+0x5787c>
  45a464:	mov	w8, #0x0                   	// #0
  45a468:	b	45a3b8 <nftw@plt+0x57838>
  45a46c:	add	x2, x1, #0x2
  45a470:	str	x2, [x0, #24]
  45a474:	cmp	w8, #0x76
  45a478:	ldrb	w10, [x1, #1]
  45a47c:	b.ne	45a4d8 <nftw@plt+0x57958>  // b.any
  45a480:	sub	w11, w10, #0x30
  45a484:	and	w1, w11, #0xff
  45a488:	cmp	w1, #0x9
  45a48c:	b.hi	45a3b8 <nftw@plt+0x57838>  // b.pmore
  45a490:	bl	44c798 <nftw@plt+0x49c18>
  45a494:	mov	x2, x0
  45a498:	ldp	w1, w0, [x19, #40]
  45a49c:	cmp	w1, w0
  45a4a0:	b.ge	45a404 <nftw@plt+0x57884>  // b.tcont
  45a4a4:	mov	w0, #0x18                  	// #24
  45a4a8:	add	w4, w1, #0x1
  45a4ac:	ldr	x3, [x19, #32]
  45a4b0:	smull	x1, w1, w0
  45a4b4:	add	x0, x3, x1
  45a4b8:	str	wzr, [x0, #4]
  45a4bc:	str	w4, [x19, #40]
  45a4c0:	cbz	x2, 45a404 <nftw@plt+0x57884>
  45a4c4:	mov	x4, #0x33                  	// #51
  45a4c8:	str	x4, [x3, x1]
  45a4cc:	str	w11, [x0, #8]
  45a4d0:	str	x2, [x0, #16]
  45a4d4:	b	45a408 <nftw@plt+0x57888>
  45a4d8:	cmp	w8, #0x63
  45a4dc:	mov	w1, #0x76                  	// #118
  45a4e0:	ccmp	w10, w1, #0x0, eq  // eq = none
  45a4e4:	b.ne	45a3b8 <nftw@plt+0x57838>  // b.any
  45a4e8:	ldp	w1, w20, [x0, #76]
  45a4ec:	cmp	w1, #0x0
  45a4f0:	cset	w1, eq  // eq = none
  45a4f4:	str	w1, [x0, #80]
  45a4f8:	bl	459438 <nftw@plt+0x568b8>
  45a4fc:	mov	x2, x0
  45a500:	ldr	w1, [x19, #80]
  45a504:	mov	x3, #0x0                   	// #0
  45a508:	cbz	w1, 45a528 <nftw@plt+0x579a8>
  45a50c:	mov	x0, x19
  45a510:	mov	w1, #0x35                  	// #53
  45a514:	bl	44c310 <nftw@plt+0x49790>
  45a518:	str	w20, [x19, #80]
  45a51c:	ldp	x19, x20, [sp, #16]
  45a520:	ldp	x29, x30, [sp], #32
  45a524:	ret
  45a528:	mov	x0, x19
  45a52c:	mov	w1, #0x34                  	// #52
  45a530:	bl	44c310 <nftw@plt+0x49790>
  45a534:	str	w20, [x19, #80]
  45a538:	b	45a51c <nftw@plt+0x5799c>
  45a53c:	nop
  45a540:	stp	x29, x30, [sp, #-32]!
  45a544:	mov	x29, sp
  45a548:	ldr	x1, [x0, #24]
  45a54c:	stp	x19, x20, [sp, #16]
  45a550:	mov	x19, x0
  45a554:	ldrb	w3, [x1]
  45a558:	sub	w2, w3, #0x30
  45a55c:	and	w2, w2, #0xff
  45a560:	cmp	w2, #0x9
  45a564:	b.ls	45a670 <nftw@plt+0x57af0>  // b.plast
  45a568:	sub	w2, w3, #0x61
  45a56c:	and	w2, w2, #0xff
  45a570:	cmp	w2, #0x19
  45a574:	b.hi	45a5bc <nftw@plt+0x57a3c>  // b.pmore
  45a578:	cmp	w3, #0x6f
  45a57c:	b.eq	45a7b8 <nftw@plt+0x57c38>  // b.none
  45a580:	mov	x0, x19
  45a584:	bl	45a388 <nftw@plt+0x57808>
  45a588:	mov	x13, x0
  45a58c:	cbz	x0, 45a59c <nftw@plt+0x57a1c>
  45a590:	ldr	w0, [x0]
  45a594:	cmp	w0, #0x32
  45a598:	b.eq	45a71c <nftw@plt+0x57b9c>  // b.none
  45a59c:	ldr	x1, [x19, #24]
  45a5a0:	ldrb	w2, [x1]
  45a5a4:	cmp	w2, #0x42
  45a5a8:	b.eq	45a688 <nftw@plt+0x57b08>  // b.none
  45a5ac:	mov	x0, x13
  45a5b0:	ldp	x19, x20, [sp, #16]
  45a5b4:	ldp	x29, x30, [sp], #32
  45a5b8:	ret
  45a5bc:	sub	w2, w3, #0x43
  45a5c0:	and	w2, w2, #0xff
  45a5c4:	cmp	w2, #0x1
  45a5c8:	b.ls	45a7d0 <nftw@plt+0x57c50>  // b.plast
  45a5cc:	cmp	w3, #0x4c
  45a5d0:	b.eq	45a784 <nftw@plt+0x57c04>  // b.none
  45a5d4:	cmp	w3, #0x55
  45a5d8:	b.ne	45a7a4 <nftw@plt+0x57c24>  // b.any
  45a5dc:	ldrb	w2, [x1, #1]
  45a5e0:	cmp	w2, #0x6c
  45a5e4:	b.eq	45a900 <nftw@plt+0x57d80>  // b.none
  45a5e8:	cmp	w2, #0x74
  45a5ec:	b.ne	45a7a4 <nftw@plt+0x57c24>  // b.any
  45a5f0:	add	x3, x1, #0x1
  45a5f4:	str	x3, [x0, #24]
  45a5f8:	ldrb	w2, [x1, #1]
  45a5fc:	cmp	w2, #0x74
  45a600:	b.ne	45a8f4 <nftw@plt+0x57d74>  // b.any
  45a604:	add	x1, x1, #0x2
  45a608:	str	x1, [x0, #24]
  45a60c:	bl	44cc78 <nftw@plt+0x4a0f8>
  45a610:	tbnz	w0, #31, 45a9dc <nftw@plt+0x57e5c>
  45a614:	ldp	w1, w2, [x19, #40]
  45a618:	cmp	w1, w2
  45a61c:	b.ge	45a9dc <nftw@plt+0x57e5c>  // b.tcont
  45a620:	mov	w2, #0x18                  	// #24
  45a624:	add	w7, w1, #0x1
  45a628:	ldp	w3, w6, [x19, #56]
  45a62c:	smull	x2, w1, w2
  45a630:	ldp	x1, x4, [x19, #24]
  45a634:	mov	w5, #0x48                  	// #72
  45a638:	sxtw	x0, w0
  45a63c:	cmp	w3, w6
  45a640:	add	x13, x4, x2
  45a644:	str	wzr, [x13, #4]
  45a648:	str	w7, [x19, #40]
  45a64c:	str	w5, [x4, x2]
  45a650:	str	x0, [x13, #8]
  45a654:	b.ge	45a998 <nftw@plt+0x57e18>  // b.tcont
  45a658:	ldr	x2, [x19, #48]
  45a65c:	add	w0, w3, #0x1
  45a660:	str	x13, [x2, w3, sxtw #3]
  45a664:	str	w0, [x19, #56]
  45a668:	ldrb	w2, [x1]
  45a66c:	b	45a5a4 <nftw@plt+0x57a24>
  45a670:	bl	44c798 <nftw@plt+0x49c18>
  45a674:	mov	x13, x0
  45a678:	ldr	x1, [x19, #24]
  45a67c:	ldrb	w2, [x1]
  45a680:	cmp	w2, #0x42
  45a684:	b.ne	45a5ac <nftw@plt+0x57a2c>  // b.any
  45a688:	mov	w11, #0x18                  	// #24
  45a68c:	mov	w10, #0x4c                  	// #76
  45a690:	ldr	x12, [x19, #64]
  45a694:	b	45a6d8 <nftw@plt+0x57b58>
  45a698:	ldp	w1, w3, [x19, #40]
  45a69c:	add	w2, w1, #0x1
  45a6a0:	cmp	w1, w3
  45a6a4:	b.ge	45a6f4 <nftw@plt+0x57b74>  // b.tcont
  45a6a8:	ldr	x4, [x19, #32]
  45a6ac:	smull	x1, w1, w11
  45a6b0:	add	x3, x4, x1
  45a6b4:	str	wzr, [x3, #4]
  45a6b8:	str	w2, [x19, #40]
  45a6bc:	str	w10, [x4, x1]
  45a6c0:	ldr	x1, [x19, #24]
  45a6c4:	stp	x13, x0, [x3, #8]
  45a6c8:	mov	x13, x3
  45a6cc:	ldrb	w3, [x1]
  45a6d0:	cmp	w3, #0x42
  45a6d4:	b.ne	45a708 <nftw@plt+0x57b88>  // b.any
  45a6d8:	add	x1, x1, #0x1
  45a6dc:	str	x1, [x19, #24]
  45a6e0:	mov	x0, x19
  45a6e4:	bl	44c798 <nftw@plt+0x49c18>
  45a6e8:	cmp	x13, #0x0
  45a6ec:	ccmp	x0, #0x0, #0x4, ne  // ne = any
  45a6f0:	b.ne	45a698 <nftw@plt+0x57b18>  // b.any
  45a6f4:	ldr	x1, [x19, #24]
  45a6f8:	mov	x13, #0x0                   	// #0
  45a6fc:	ldrb	w3, [x1]
  45a700:	cmp	w3, #0x42
  45a704:	b.eq	45a6d8 <nftw@plt+0x57b58>  // b.none
  45a708:	str	x12, [x19, #64]
  45a70c:	mov	x0, x13
  45a710:	ldp	x19, x20, [sp, #16]
  45a714:	ldp	x29, x30, [sp], #32
  45a718:	ret
  45a71c:	ldr	x1, [x13, #8]
  45a720:	ldr	w0, [x19, #72]
  45a724:	ldr	x2, [x1]
  45a728:	add	w0, w0, #0x7
  45a72c:	ldr	w1, [x1, #16]
  45a730:	add	w0, w0, w1
  45a734:	str	w0, [x19, #72]
  45a738:	ldrb	w0, [x2]
  45a73c:	cmp	w0, #0x6c
  45a740:	b.ne	45a59c <nftw@plt+0x57a1c>  // b.any
  45a744:	ldrb	w0, [x2, #1]
  45a748:	cmp	w0, #0x69
  45a74c:	b.ne	45a59c <nftw@plt+0x57a1c>  // b.any
  45a750:	ldrb	w0, [x2, #2]
  45a754:	cbnz	w0, 45a59c <nftw@plt+0x57a1c>
  45a758:	mov	x0, x19
  45a75c:	bl	44c798 <nftw@plt+0x49c18>
  45a760:	mov	w1, #0x37                  	// #55
  45a764:	mov	x2, x13
  45a768:	mov	x3, x0
  45a76c:	mov	x0, x19
  45a770:	bl	44c310 <nftw@plt+0x49790>
  45a774:	mov	x13, x0
  45a778:	ldr	x1, [x19, #24]
  45a77c:	ldrb	w2, [x1]
  45a780:	b	45a5a4 <nftw@plt+0x57a24>
  45a784:	add	x1, x1, #0x1
  45a788:	str	x1, [x0, #24]
  45a78c:	bl	44c798 <nftw@plt+0x49c18>
  45a790:	mov	x13, x0
  45a794:	cbz	x0, 45a7a4 <nftw@plt+0x57c24>
  45a798:	mov	x0, x19
  45a79c:	bl	44cd28 <nftw@plt+0x4a1a8>
  45a7a0:	cbnz	w0, 45a59c <nftw@plt+0x57a1c>
  45a7a4:	mov	x13, #0x0                   	// #0
  45a7a8:	mov	x0, x13
  45a7ac:	ldp	x19, x20, [sp, #16]
  45a7b0:	ldp	x29, x30, [sp], #32
  45a7b4:	ret
  45a7b8:	ldrb	w0, [x1, #1]
  45a7bc:	cmp	w0, #0x6e
  45a7c0:	b.ne	45a580 <nftw@plt+0x57a00>  // b.any
  45a7c4:	add	x1, x1, #0x2
  45a7c8:	str	x1, [x19, #24]
  45a7cc:	b	45a580 <nftw@plt+0x57a00>
  45a7d0:	ldr	x0, [x0, #64]
  45a7d4:	cbz	x0, 45a880 <nftw@plt+0x57d00>
  45a7d8:	ldr	w2, [x0]
  45a7dc:	cbnz	w2, 45a878 <nftw@plt+0x57cf8>
  45a7e0:	ldr	w3, [x0, #16]
  45a7e4:	ldr	w2, [x19, #72]
  45a7e8:	add	w2, w2, w3
  45a7ec:	str	w2, [x19, #72]
  45a7f0:	ldrb	w2, [x1]
  45a7f4:	cmp	w2, #0x43
  45a7f8:	b.eq	45a888 <nftw@plt+0x57d08>  // b.none
  45a7fc:	cmp	w2, #0x44
  45a800:	b.ne	45a8f8 <nftw@plt+0x57d78>  // b.any
  45a804:	ldrb	w2, [x1, #1]
  45a808:	cmp	w2, #0x32
  45a80c:	b.eq	45aa24 <nftw@plt+0x57ea4>  // b.none
  45a810:	b.hi	45a9a4 <nftw@plt+0x57e24>  // b.pmore
  45a814:	cmp	w2, #0x30
  45a818:	b.eq	45a9cc <nftw@plt+0x57e4c>  // b.none
  45a81c:	cmp	w2, #0x31
  45a820:	mov	w3, #0x2                   	// #2
  45a824:	b.ne	45a7a4 <nftw@plt+0x57c24>  // b.any
  45a828:	ldp	w2, w5, [x19, #40]
  45a82c:	add	x4, x1, #0x2
  45a830:	str	x4, [x19, #24]
  45a834:	cmp	w2, w5
  45a838:	b.ge	45a9bc <nftw@plt+0x57e3c>  // b.tcont
  45a83c:	mov	w7, #0x18                  	// #24
  45a840:	add	w6, w2, #0x1
  45a844:	ldr	x5, [x19, #32]
  45a848:	smull	x2, w2, w7
  45a84c:	add	x13, x5, x2
  45a850:	str	wzr, [x13, #4]
  45a854:	str	w6, [x19, #40]
  45a858:	cbz	x0, 45a9bc <nftw@plt+0x57e3c>
  45a85c:	mov	x6, #0x8                   	// #8
  45a860:	str	x6, [x5, x2]
  45a864:	str	w3, [x13, #8]
  45a868:	str	x0, [x13, #16]
  45a86c:	ldrb	w2, [x1, #2]
  45a870:	mov	x1, x4
  45a874:	b	45a5a4 <nftw@plt+0x57a24>
  45a878:	cmp	w2, #0x18
  45a87c:	b.eq	45a7e0 <nftw@plt+0x57c60>  // b.none
  45a880:	cmp	w3, #0x43
  45a884:	b.ne	45a804 <nftw@plt+0x57c84>  // b.any
  45a888:	ldrb	w2, [x1, #1]
  45a88c:	cmp	w2, #0x49
  45a890:	b.eq	45a9ec <nftw@plt+0x57e6c>  // b.none
  45a894:	sub	w3, w2, #0x31
  45a898:	and	w3, w3, #0xff
  45a89c:	cmp	w3, #0x4
  45a8a0:	b.hi	45a7a4 <nftw@plt+0x57c24>  // b.pmore
  45a8a4:	sub	w20, w2, #0x30
  45a8a8:	add	x1, x1, #0x2
  45a8ac:	str	x1, [x19, #24]
  45a8b0:	ldp	w1, w2, [x19, #40]
  45a8b4:	cmp	w1, w2
  45a8b8:	b.ge	45a9dc <nftw@plt+0x57e5c>  // b.tcont
  45a8bc:	mov	w2, #0x18                  	// #24
  45a8c0:	add	w4, w1, #0x1
  45a8c4:	smull	x2, w1, w2
  45a8c8:	ldp	x1, x3, [x19, #24]
  45a8cc:	add	x13, x3, x2
  45a8d0:	str	wzr, [x13, #4]
  45a8d4:	str	w4, [x19, #40]
  45a8d8:	cbz	x0, 45a998 <nftw@plt+0x57e18>
  45a8dc:	mov	x4, #0x7                   	// #7
  45a8e0:	str	x4, [x3, x2]
  45a8e4:	str	w20, [x13, #8]
  45a8e8:	str	x0, [x13, #16]
  45a8ec:	ldrb	w2, [x1]
  45a8f0:	b	45a5a4 <nftw@plt+0x57a24>
  45a8f4:	mov	x1, x3
  45a8f8:	mov	x13, #0x0                   	// #0
  45a8fc:	b	45a5a4 <nftw@plt+0x57a24>
  45a900:	add	x3, x1, #0x1
  45a904:	str	x3, [x0, #24]
  45a908:	ldrb	w2, [x1, #1]
  45a90c:	cmp	w2, #0x6c
  45a910:	b.ne	45a8f4 <nftw@plt+0x57d74>  // b.any
  45a914:	add	x1, x1, #0x2
  45a918:	str	x1, [x0, #24]
  45a91c:	bl	45a238 <nftw@plt+0x576b8>
  45a920:	mov	x10, x0
  45a924:	ldr	x1, [x19, #24]
  45a928:	mov	x13, #0x0                   	// #0
  45a92c:	ldrb	w2, [x1]
  45a930:	cbz	x0, 45a5a4 <nftw@plt+0x57a24>
  45a934:	cmp	w2, #0x45
  45a938:	b.ne	45a5a4 <nftw@plt+0x57a24>  // b.any
  45a93c:	add	x1, x1, #0x1
  45a940:	str	x1, [x19, #24]
  45a944:	mov	x0, x19
  45a948:	bl	44cc78 <nftw@plt+0x4a0f8>
  45a94c:	tbnz	w0, #31, 45a9dc <nftw@plt+0x57e5c>
  45a950:	ldp	w2, w3, [x19, #40]
  45a954:	ldr	x1, [x19, #24]
  45a958:	cmp	w2, w3
  45a95c:	b.ge	45a998 <nftw@plt+0x57e18>  // b.tcont
  45a960:	mov	w3, #0x18                  	// #24
  45a964:	add	w6, w2, #0x1
  45a968:	ldr	x4, [x19, #32]
  45a96c:	smull	x2, w2, w3
  45a970:	ldp	w3, w7, [x19, #56]
  45a974:	add	x13, x4, x2
  45a978:	mov	w5, #0x46                  	// #70
  45a97c:	cmp	w3, w7
  45a980:	str	wzr, [x13, #4]
  45a984:	str	w6, [x19, #40]
  45a988:	str	w5, [x4, x2]
  45a98c:	str	x10, [x13, #8]
  45a990:	str	w0, [x13, #16]
  45a994:	b.lt	45a658 <nftw@plt+0x57ad8>  // b.tstop
  45a998:	ldrb	w2, [x1]
  45a99c:	mov	x13, #0x0                   	// #0
  45a9a0:	b	45a5a4 <nftw@plt+0x57a24>
  45a9a4:	cmp	w2, #0x34
  45a9a8:	b.eq	45a9d4 <nftw@plt+0x57e54>  // b.none
  45a9ac:	cmp	w2, #0x35
  45a9b0:	b.ne	45a7a4 <nftw@plt+0x57c24>  // b.any
  45a9b4:	mov	w3, #0x5                   	// #5
  45a9b8:	b	45a828 <nftw@plt+0x57ca8>
  45a9bc:	ldrb	w2, [x1, #2]
  45a9c0:	mov	x13, #0x0                   	// #0
  45a9c4:	mov	x1, x4
  45a9c8:	b	45a5a4 <nftw@plt+0x57a24>
  45a9cc:	mov	w3, #0x1                   	// #1
  45a9d0:	b	45a828 <nftw@plt+0x57ca8>
  45a9d4:	mov	w3, #0x4                   	// #4
  45a9d8:	b	45a828 <nftw@plt+0x57ca8>
  45a9dc:	ldr	x1, [x19, #24]
  45a9e0:	mov	x13, #0x0                   	// #0
  45a9e4:	ldrb	w2, [x1]
  45a9e8:	b	45a5a4 <nftw@plt+0x57a24>
  45a9ec:	add	x3, x1, #0x1
  45a9f0:	str	x3, [x19, #24]
  45a9f4:	ldrb	w2, [x1, #2]
  45a9f8:	sub	w0, w2, #0x31
  45a9fc:	and	w0, w0, #0xff
  45aa00:	cmp	w0, #0x4
  45aa04:	b.hi	45aa2c <nftw@plt+0x57eac>  // b.pmore
  45aa08:	add	x1, x1, #0x3
  45aa0c:	str	x1, [x19, #24]
  45aa10:	sub	w20, w2, #0x30
  45aa14:	mov	x0, x19
  45aa18:	bl	459438 <nftw@plt+0x568b8>
  45aa1c:	ldr	x0, [x19, #64]
  45aa20:	b	45a8b0 <nftw@plt+0x57d30>
  45aa24:	mov	w3, #0x3                   	// #3
  45aa28:	b	45a828 <nftw@plt+0x57ca8>
  45aa2c:	ldrb	w2, [x1, #1]
  45aa30:	mov	x13, #0x0                   	// #0
  45aa34:	mov	x1, x3
  45aa38:	b	45a5a4 <nftw@plt+0x57a24>
  45aa3c:	nop
  45aa40:	stp	x29, x30, [sp, #-32]!
  45aa44:	mov	x29, sp
  45aa48:	stp	x19, x20, [sp, #16]
  45aa4c:	mov	x19, x0
  45aa50:	ldr	w0, [x0, #16]
  45aa54:	tbnz	w0, #18, 45aa90 <nftw@plt+0x57f10>
  45aa58:	ldr	w2, [x19, #84]
  45aa5c:	cmp	w2, #0x800
  45aa60:	b.hi	45aaa0 <nftw@plt+0x57f20>  // b.pmore
  45aa64:	ldr	x1, [x19, #24]
  45aa68:	add	w0, w2, #0x1
  45aa6c:	str	w0, [x19, #84]
  45aa70:	mov	x0, #0x0                   	// #0
  45aa74:	ldrb	w3, [x1]
  45aa78:	cmp	w3, #0x46
  45aa7c:	b.eq	45aab0 <nftw@plt+0x57f30>  // b.none
  45aa80:	str	w2, [x19, #84]
  45aa84:	ldp	x19, x20, [sp, #16]
  45aa88:	ldp	x29, x30, [sp], #32
  45aa8c:	ret
  45aa90:	ldr	x1, [x19, #24]
  45aa94:	ldrb	w0, [x1]
  45aa98:	cmp	w0, #0x46
  45aa9c:	b.eq	45aab0 <nftw@plt+0x57f30>  // b.none
  45aaa0:	mov	x0, #0x0                   	// #0
  45aaa4:	ldp	x19, x20, [sp, #16]
  45aaa8:	ldp	x29, x30, [sp], #32
  45aaac:	ret
  45aab0:	add	x0, x1, #0x1
  45aab4:	str	x0, [x19, #24]
  45aab8:	ldrb	w2, [x1, #1]
  45aabc:	cmp	w2, #0x59
  45aac0:	b.ne	45aad0 <nftw@plt+0x57f50>  // b.any
  45aac4:	add	x0, x1, #0x2
  45aac8:	str	x0, [x19, #24]
  45aacc:	ldrb	w2, [x1, #2]
  45aad0:	cmp	w2, #0x4a
  45aad4:	b.ne	45aae0 <nftw@plt+0x57f60>  // b.any
  45aad8:	add	x0, x0, #0x1
  45aadc:	str	x0, [x19, #24]
  45aae0:	mov	x0, x19
  45aae4:	bl	459438 <nftw@plt+0x568b8>
  45aae8:	mov	x20, x0
  45aaec:	cbz	x0, 45ab98 <nftw@plt+0x58018>
  45aaf0:	mov	x0, x19
  45aaf4:	bl	45a238 <nftw@plt+0x576b8>
  45aaf8:	mov	x3, x0
  45aafc:	cbz	x0, 45ab98 <nftw@plt+0x58018>
  45ab00:	mov	x2, x20
  45ab04:	mov	x0, x19
  45ab08:	mov	w1, #0x29                  	// #41
  45ab0c:	bl	44c310 <nftw@plt+0x49790>
  45ab10:	ldr	x2, [x19, #24]
  45ab14:	mov	w3, #0x4f                  	// #79
  45ab18:	ldrb	w1, [x2]
  45ab1c:	cmp	w1, #0x52
  45ab20:	ccmp	w1, w3, #0x4, ne  // ne = any
  45ab24:	b.ne	45ab68 <nftw@plt+0x57fe8>  // b.any
  45ab28:	ldr	w4, [x19, #72]
  45ab2c:	cmp	w1, #0x52
  45ab30:	mov	w1, #0x20                  	// #32
  45ab34:	add	w3, w4, #0x3
  45ab38:	b.ne	45ab44 <nftw@plt+0x57fc4>  // b.any
  45ab3c:	add	w3, w4, #0x2
  45ab40:	mov	w1, #0x1f                  	// #31
  45ab44:	add	x2, x2, #0x1
  45ab48:	str	x2, [x19, #24]
  45ab4c:	str	w3, [x19, #72]
  45ab50:	mov	x2, x0
  45ab54:	mov	x3, #0x0                   	// #0
  45ab58:	mov	x0, x19
  45ab5c:	bl	44c310 <nftw@plt+0x49790>
  45ab60:	ldr	x2, [x19, #24]
  45ab64:	ldrb	w1, [x2]
  45ab68:	cmp	w1, #0x45
  45ab6c:	b.eq	45ab8c <nftw@plt+0x5800c>  // b.none
  45ab70:	mov	x0, #0x0                   	// #0
  45ab74:	ldr	w1, [x19, #16]
  45ab78:	tbnz	w1, #18, 45aaa4 <nftw@plt+0x57f24>
  45ab7c:	ldr	w2, [x19, #84]
  45ab80:	sub	w2, w2, #0x1
  45ab84:	str	w2, [x19, #84]
  45ab88:	b	45aa84 <nftw@plt+0x57f04>
  45ab8c:	add	x2, x2, #0x1
  45ab90:	str	x2, [x19, #24]
  45ab94:	b	45ab74 <nftw@plt+0x57ff4>
  45ab98:	mov	x0, #0x0                   	// #0
  45ab9c:	b	45ab10 <nftw@plt+0x57f90>
  45aba0:	stp	x29, x30, [sp, #-112]!
  45aba4:	mov	x29, sp
  45aba8:	ldr	x2, [x0, #24]
  45abac:	stp	x19, x20, [sp, #16]
  45abb0:	mov	x19, x0
  45abb4:	str	xzr, [sp, #104]
  45abb8:	ldrb	w3, [x2]
  45abbc:	cmp	w3, w1, uxtb
  45abc0:	b.eq	45b2e4 <nftw@plt+0x58764>  // b.none
  45abc4:	stp	x21, x22, [sp, #32]
  45abc8:	add	x21, sp, #0x68
  45abcc:	mov	w22, #0x1                   	// #1
  45abd0:	stp	x23, x24, [sp, #48]
  45abd4:	and	w23, w1, #0xff
  45abd8:	mov	w24, #0x6d                  	// #109
  45abdc:	stp	x25, x26, [sp, #64]
  45abe0:	ldr	w25, [x19, #76]
  45abe4:	str	w22, [x19, #76]
  45abe8:	ldrb	w0, [x2]
  45abec:	cmp	w0, #0x4c
  45abf0:	b.eq	45adac <nftw@plt+0x5822c>  // b.none
  45abf4:	cmp	w0, #0x54
  45abf8:	b.eq	45ae48 <nftw@plt+0x582c8>  // b.none
  45abfc:	cmp	w0, #0x73
  45ac00:	b.eq	45ad48 <nftw@plt+0x581c8>  // b.none
  45ac04:	cmp	w0, #0x66
  45ac08:	b.ne	45aca4 <nftw@plt+0x58124>  // b.any
  45ac0c:	ldrb	w0, [x2, #1]
  45ac10:	cmp	w0, #0x70
  45ac14:	b.eq	45ae58 <nftw@plt+0x582d8>  // b.none
  45ac18:	mov	x0, x19
  45ac1c:	bl	45a388 <nftw@plt+0x57808>
  45ac20:	mov	x20, x0
  45ac24:	cbz	x0, 45ac84 <nftw@plt+0x58104>
  45ac28:	ldr	w0, [x0]
  45ac2c:	cmp	w0, #0x32
  45ac30:	b.eq	45aec0 <nftw@plt+0x58340>  // b.none
  45ac34:	cmp	w0, #0x34
  45ac38:	b.eq	45b304 <nftw@plt+0x58784>  // b.none
  45ac3c:	b.hi	45ac80 <nftw@plt+0x58100>  // b.pmore
  45ac40:	cmp	w0, #0x33
  45ac44:	b.ne	45ac80 <nftw@plt+0x58100>  // b.any
  45ac48:	ldr	w0, [x20, #8]
  45ac4c:	cmp	w0, #0x2
  45ac50:	b.eq	45ac80 <nftw@plt+0x58100>  // b.none
  45ac54:	b.gt	45ac80 <nftw@plt+0x58100>
  45ac58:	cbnz	w0, 45b0a8 <nftw@plt+0x58528>
  45ac5c:	mov	x2, x20
  45ac60:	mov	x0, x19
  45ac64:	mov	x3, #0x0                   	// #0
  45ac68:	mov	w1, #0x36                  	// #54
  45ac6c:	bl	44c310 <nftw@plt+0x49790>
  45ac70:	mov	x20, x0
  45ac74:	b	45adb8 <nftw@plt+0x58238>
  45ac78:	ldr	x27, [sp, #80]
  45ac7c:	nop
  45ac80:	mov	x20, #0x0                   	// #0
  45ac84:	str	w25, [x19, #76]
  45ac88:	mov	x0, x20
  45ac8c:	ldp	x19, x20, [sp, #16]
  45ac90:	ldp	x21, x22, [sp, #32]
  45ac94:	ldp	x23, x24, [sp, #48]
  45ac98:	ldp	x25, x26, [sp, #64]
  45ac9c:	ldp	x29, x30, [sp], #112
  45aca0:	ret
  45aca4:	sub	w1, w0, #0x30
  45aca8:	and	w1, w1, #0xff
  45acac:	cmp	w1, #0x9
  45acb0:	b.hi	45adc8 <nftw@plt+0x58248>  // b.pmore
  45acb4:	mov	x0, x19
  45acb8:	bl	45a540 <nftw@plt+0x579c0>
  45acbc:	mov	x20, x0
  45acc0:	cbz	x0, 45ac84 <nftw@plt+0x58104>
  45acc4:	ldr	x0, [x19, #24]
  45acc8:	ldrb	w1, [x0]
  45accc:	cmp	w1, #0x49
  45acd0:	b.eq	45afd4 <nftw@plt+0x58454>  // b.none
  45acd4:	ldp	w1, w0, [x19, #40]
  45acd8:	str	w25, [x19, #76]
  45acdc:	cmp	w0, w1
  45ace0:	b.le	45ad88 <nftw@plt+0x58208>
  45ace4:	ldp	x2, x3, [x19, #24]
  45ace8:	mov	w0, #0x18                  	// #24
  45acec:	add	w5, w1, #0x1
  45acf0:	mov	w4, #0x2e                  	// #46
  45acf4:	smull	x1, w1, w0
  45acf8:	add	x0, x3, x1
  45acfc:	str	wzr, [x0, #4]
  45ad00:	str	w5, [x19, #40]
  45ad04:	str	w4, [x3, x1]
  45ad08:	stp	x20, xzr, [x0, #8]
  45ad0c:	str	x0, [x21]
  45ad10:	add	x21, x0, #0x10
  45ad14:	ldrb	w0, [x2]
  45ad18:	cmp	w0, w23
  45ad1c:	b.ne	45abe0 <nftw@plt+0x58060>  // b.any
  45ad20:	ldr	x20, [sp, #104]
  45ad24:	add	x2, x2, #0x1
  45ad28:	str	x2, [x19, #24]
  45ad2c:	mov	x0, x20
  45ad30:	ldp	x19, x20, [sp, #16]
  45ad34:	ldp	x21, x22, [sp, #32]
  45ad38:	ldp	x23, x24, [sp, #48]
  45ad3c:	ldp	x25, x26, [sp, #64]
  45ad40:	ldp	x29, x30, [sp], #112
  45ad44:	ret
  45ad48:	ldrb	w0, [x2, #1]
  45ad4c:	cmp	w0, #0x72
  45ad50:	b.eq	45b034 <nftw@plt+0x584b4>  // b.none
  45ad54:	cmp	w0, #0x70
  45ad58:	b.ne	45ac18 <nftw@plt+0x58098>  // b.any
  45ad5c:	add	x2, x2, #0x2
  45ad60:	str	x2, [x19, #24]
  45ad64:	mov	x0, x19
  45ad68:	bl	45b3e0 <nftw@plt+0x58860>
  45ad6c:	mov	x2, x0
  45ad70:	mov	x3, #0x0                   	// #0
  45ad74:	mov	x0, x19
  45ad78:	mov	w1, #0x4b                  	// #75
  45ad7c:	bl	44c310 <nftw@plt+0x49790>
  45ad80:	mov	x20, x0
  45ad84:	b	45adb8 <nftw@plt+0x58238>
  45ad88:	str	xzr, [x21]
  45ad8c:	mov	x20, #0x0                   	// #0
  45ad90:	mov	x0, x20
  45ad94:	ldp	x19, x20, [sp, #16]
  45ad98:	ldp	x21, x22, [sp, #32]
  45ad9c:	ldp	x23, x24, [sp, #48]
  45ada0:	ldp	x25, x26, [sp, #64]
  45ada4:	ldp	x29, x30, [sp], #112
  45ada8:	ret
  45adac:	mov	x0, x19
  45adb0:	bl	45d428 <nftw@plt+0x5a8a8>
  45adb4:	mov	x20, x0
  45adb8:	str	w25, [x19, #76]
  45adbc:	cbz	x20, 45ac88 <nftw@plt+0x58108>
  45adc0:	ldp	w1, w0, [x19, #40]
  45adc4:	b	45acdc <nftw@plt+0x5815c>
  45adc8:	cmp	w0, #0x6f
  45adcc:	b.ne	45ade8 <nftw@plt+0x58268>  // b.any
  45add0:	ldrb	w0, [x2, #1]
  45add4:	cmp	w0, #0x6e
  45add8:	b.ne	45ac18 <nftw@plt+0x58098>  // b.any
  45addc:	add	x2, x2, #0x2
  45ade0:	str	x2, [x19, #24]
  45ade4:	b	45acb4 <nftw@plt+0x58134>
  45ade8:	cmp	w0, #0x69
  45adec:	mov	w1, #0x74                  	// #116
  45adf0:	ccmp	w0, w1, #0x4, ne  // ne = any
  45adf4:	b.ne	45ac18 <nftw@plt+0x58098>  // b.any
  45adf8:	ldrb	w1, [x2, #1]
  45adfc:	cmp	w1, #0x6c
  45ae00:	b.ne	45ac18 <nftw@plt+0x58098>  // b.any
  45ae04:	add	x1, x2, #0x2
  45ae08:	str	x1, [x19, #24]
  45ae0c:	cmp	w0, #0x74
  45ae10:	mov	x20, #0x0                   	// #0
  45ae14:	b.eq	45b184 <nftw@plt+0x58604>  // b.none
  45ae18:	ldrb	w0, [x1, #1]
  45ae1c:	cbz	w0, 45ac80 <nftw@plt+0x58100>
  45ae20:	mov	w1, #0x45                  	// #69
  45ae24:	mov	x0, x19
  45ae28:	bl	45aba0 <nftw@plt+0x58020>
  45ae2c:	mov	x3, x0
  45ae30:	mov	x2, x20
  45ae34:	mov	x0, x19
  45ae38:	mov	w1, #0x31                  	// #49
  45ae3c:	bl	44c310 <nftw@plt+0x49790>
  45ae40:	mov	x20, x0
  45ae44:	b	45adb8 <nftw@plt+0x58238>
  45ae48:	mov	x0, x19
  45ae4c:	bl	44ce50 <nftw@plt+0x4a2d0>
  45ae50:	mov	x20, x0
  45ae54:	b	45adb8 <nftw@plt+0x58238>
  45ae58:	add	x0, x2, #0x2
  45ae5c:	str	x0, [x19, #24]
  45ae60:	ldrb	w0, [x2, #2]
  45ae64:	cmp	w0, #0x54
  45ae68:	b.eq	45b024 <nftw@plt+0x584a4>  // b.none
  45ae6c:	mov	x0, x19
  45ae70:	bl	44cc78 <nftw@plt+0x4a0f8>
  45ae74:	mvn	x1, x0
  45ae78:	tst	x1, #0x7fffffff
  45ae7c:	b.eq	45ac80 <nftw@plt+0x58100>  // b.none
  45ae80:	add	w3, w0, #0x1
  45ae84:	ldp	w2, w0, [x19, #40]
  45ae88:	cmp	w2, w0
  45ae8c:	b.ge	45ac80 <nftw@plt+0x58100>  // b.tcont
  45ae90:	mov	w5, #0x18                  	// #24
  45ae94:	add	w1, w2, #0x1
  45ae98:	ldr	x4, [x19, #32]
  45ae9c:	smull	x2, w2, w5
  45aea0:	mov	w5, #0x6                   	// #6
  45aea4:	sxtw	x3, w3
  45aea8:	add	x20, x4, x2
  45aeac:	str	wzr, [x20, #4]
  45aeb0:	str	w1, [x19, #40]
  45aeb4:	str	w5, [x4, x2]
  45aeb8:	str	x3, [x20, #8]
  45aebc:	b	45acd8 <nftw@plt+0x58158>
  45aec0:	ldr	x2, [x20, #8]
  45aec4:	ldr	w0, [x19, #72]
  45aec8:	ldr	w1, [x2, #16]
  45aecc:	ldr	x26, [x2]
  45aed0:	sub	w1, w1, #0x2
  45aed4:	add	w0, w0, w1
  45aed8:	str	w0, [x19, #72]
  45aedc:	ldrb	w1, [x26]
  45aee0:	cmp	w1, #0x73
  45aee4:	b.eq	45b000 <nftw@plt+0x58480>  // b.none
  45aee8:	str	x27, [sp, #80]
  45aeec:	ldr	w27, [x2, #20]
  45aef0:	cmp	w27, #0x1
  45aef4:	b.eq	45b0cc <nftw@plt+0x5854c>  // b.none
  45aef8:	b.le	45b0c0 <nftw@plt+0x58540>
  45aefc:	cmp	w27, #0x2
  45af00:	b.eq	45b1ec <nftw@plt+0x5866c>  // b.none
  45af04:	cmp	w27, #0x3
  45af08:	b.ne	45ac78 <nftw@plt+0x580f8>  // b.any
  45af0c:	cmp	w1, #0x71
  45af10:	b.eq	45b1a0 <nftw@plt+0x58620>  // b.none
  45af14:	ldrb	w0, [x26]
  45af18:	cmp	w0, #0x66
  45af1c:	b.eq	45b370 <nftw@plt+0x587f0>  // b.none
  45af20:	cmp	w0, #0x6e
  45af24:	b.ne	45b1dc <nftw@plt+0x5865c>  // b.any
  45af28:	ldrb	w0, [x26, #1]
  45af2c:	mov	w1, #0x61                  	// #97
  45af30:	cmp	w0, #0x77
  45af34:	ccmp	w0, w1, #0x4, ne  // ne = any
  45af38:	b.ne	45b1dc <nftw@plt+0x5865c>  // b.any
  45af3c:	mov	w1, #0x5f                  	// #95
  45af40:	mov	x0, x19
  45af44:	bl	45aba0 <nftw@plt+0x58020>
  45af48:	mov	x26, x0
  45af4c:	mov	x0, x19
  45af50:	bl	459438 <nftw@plt+0x568b8>
  45af54:	ldr	x1, [x19, #24]
  45af58:	mov	x27, x0
  45af5c:	ldrb	w0, [x1]
  45af60:	cmp	w0, #0x45
  45af64:	b.eq	45b3d0 <nftw@plt+0x58850>  // b.none
  45af68:	cmp	w0, #0x70
  45af6c:	b.eq	45b3a8 <nftw@plt+0x58828>  // b.none
  45af70:	cmp	w0, #0x69
  45af74:	b.ne	45b1dc <nftw@plt+0x5865c>  // b.any
  45af78:	ldrb	w0, [x1, #1]
  45af7c:	cmp	w0, #0x6c
  45af80:	b.ne	45b1dc <nftw@plt+0x5865c>  // b.any
  45af84:	mov	x0, x19
  45af88:	bl	45b3e0 <nftw@plt+0x58860>
  45af8c:	mov	x3, x0
  45af90:	mov	x2, x27
  45af94:	mov	w1, #0x3c                  	// #60
  45af98:	mov	x0, x19
  45af9c:	bl	44c310 <nftw@plt+0x49790>
  45afa0:	mov	x2, x26
  45afa4:	mov	x3, x0
  45afa8:	mov	w1, #0x3b                  	// #59
  45afac:	mov	x0, x19
  45afb0:	bl	44c310 <nftw@plt+0x49790>
  45afb4:	mov	x3, x0
  45afb8:	mov	x2, x20
  45afbc:	mov	x0, x19
  45afc0:	mov	w1, #0x3a                  	// #58
  45afc4:	bl	44c310 <nftw@plt+0x49790>
  45afc8:	mov	x20, x0
  45afcc:	ldr	x27, [sp, #80]
  45afd0:	b	45adb8 <nftw@plt+0x58238>
  45afd4:	add	x0, x0, #0x1
  45afd8:	str	x0, [x19, #24]
  45afdc:	mov	x0, x19
  45afe0:	bl	45be08 <nftw@plt+0x59288>
  45afe4:	mov	x3, x0
  45afe8:	mov	x2, x20
  45afec:	mov	x0, x19
  45aff0:	mov	w1, #0x4                   	// #4
  45aff4:	bl	44c310 <nftw@plt+0x49790>
  45aff8:	mov	x20, x0
  45affc:	b	45adb8 <nftw@plt+0x58238>
  45b000:	ldrb	w0, [x26, #1]
  45b004:	cmp	w0, #0x74
  45b008:	b.ne	45aee8 <nftw@plt+0x58368>  // b.any
  45b00c:	ldrb	w0, [x26, #2]
  45b010:	cbnz	w0, 45aee8 <nftw@plt+0x58368>
  45b014:	mov	x0, x19
  45b018:	bl	459438 <nftw@plt+0x568b8>
  45b01c:	mov	x3, x0
  45b020:	b	45b110 <nftw@plt+0x58590>
  45b024:	add	x2, x2, #0x3
  45b028:	mov	w3, #0x0                   	// #0
  45b02c:	str	x2, [x19, #24]
  45b030:	b	45ae84 <nftw@plt+0x58304>
  45b034:	add	x2, x2, #0x2
  45b038:	str	x2, [x19, #24]
  45b03c:	mov	x0, x19
  45b040:	bl	459438 <nftw@plt+0x568b8>
  45b044:	mov	x20, x0
  45b048:	mov	x0, x19
  45b04c:	bl	45a540 <nftw@plt+0x579c0>
  45b050:	ldr	x1, [x19, #24]
  45b054:	mov	x26, x0
  45b058:	mov	x3, x26
  45b05c:	ldrb	w0, [x1]
  45b060:	cmp	w0, #0x49
  45b064:	b.ne	45b090 <nftw@plt+0x58510>  // b.any
  45b068:	add	x1, x1, #0x1
  45b06c:	str	x1, [x19, #24]
  45b070:	mov	x0, x19
  45b074:	bl	45be08 <nftw@plt+0x59288>
  45b078:	mov	x3, x0
  45b07c:	mov	x2, x26
  45b080:	mov	x0, x19
  45b084:	mov	w1, #0x4                   	// #4
  45b088:	bl	44c310 <nftw@plt+0x49790>
  45b08c:	mov	x3, x0
  45b090:	mov	x2, x20
  45b094:	mov	x0, x19
  45b098:	mov	w1, #0x1                   	// #1
  45b09c:	bl	44c310 <nftw@plt+0x49790>
  45b0a0:	mov	x20, x0
  45b0a4:	b	45adb8 <nftw@plt+0x58238>
  45b0a8:	cmp	w0, #0x1
  45b0ac:	b.ne	45ac80 <nftw@plt+0x58100>  // b.any
  45b0b0:	mov	x0, x19
  45b0b4:	bl	45b3e0 <nftw@plt+0x58860>
  45b0b8:	mov	x3, x0
  45b0bc:	b	45b110 <nftw@plt+0x58590>
  45b0c0:	cbnz	w27, 45ac78 <nftw@plt+0x580f8>
  45b0c4:	ldr	x27, [sp, #80]
  45b0c8:	b	45ac5c <nftw@plt+0x580dc>
  45b0cc:	ldrb	w0, [x26]
  45b0d0:	cmp	w0, #0x70
  45b0d4:	ccmp	w0, w24, #0x4, ne  // ne = any
  45b0d8:	b.eq	45b154 <nftw@plt+0x585d4>  // b.none
  45b0dc:	mov	w27, #0x0                   	// #0
  45b0e0:	cmp	w1, #0x73
  45b0e4:	b.ne	45b128 <nftw@plt+0x585a8>  // b.any
  45b0e8:	ldrb	w0, [x26, #1]
  45b0ec:	cmp	w0, #0x50
  45b0f0:	b.ne	45b128 <nftw@plt+0x585a8>  // b.any
  45b0f4:	ldrb	w0, [x26, #2]
  45b0f8:	cbnz	w0, 45b128 <nftw@plt+0x585a8>
  45b0fc:	mov	x0, x19
  45b100:	bl	45be08 <nftw@plt+0x59288>
  45b104:	mov	x3, x0
  45b108:	cbnz	w27, 45b138 <nftw@plt+0x585b8>
  45b10c:	ldr	x27, [sp, #80]
  45b110:	mov	x2, x20
  45b114:	mov	x0, x19
  45b118:	mov	w1, #0x37                  	// #55
  45b11c:	bl	44c310 <nftw@plt+0x49790>
  45b120:	mov	x20, x0
  45b124:	b	45adb8 <nftw@plt+0x58238>
  45b128:	mov	x0, x19
  45b12c:	bl	45b3e0 <nftw@plt+0x58860>
  45b130:	mov	x3, x0
  45b134:	cbz	w27, 45b10c <nftw@plt+0x5858c>
  45b138:	mov	x2, x3
  45b13c:	mov	x0, x19
  45b140:	mov	w1, #0x39                  	// #57
  45b144:	bl	44c310 <nftw@plt+0x49790>
  45b148:	mov	x3, x0
  45b14c:	ldr	x27, [sp, #80]
  45b150:	b	45b110 <nftw@plt+0x58590>
  45b154:	ldrb	w2, [x26, #1]
  45b158:	cmp	w2, w0
  45b15c:	b.ne	45b0dc <nftw@plt+0x5855c>  // b.any
  45b160:	ldr	x0, [x19, #24]
  45b164:	ldrb	w2, [x0]
  45b168:	cmp	w2, #0x5f
  45b16c:	b.ne	45b0e0 <nftw@plt+0x58560>  // b.any
  45b170:	add	x0, x0, #0x1
  45b174:	str	x0, [x19, #24]
  45b178:	mov	w27, #0x0                   	// #0
  45b17c:	ldrb	w1, [x26]
  45b180:	b	45b0e0 <nftw@plt+0x58560>
  45b184:	mov	x0, x19
  45b188:	bl	459438 <nftw@plt+0x568b8>
  45b18c:	ldr	x1, [x19, #24]
  45b190:	mov	x20, x0
  45b194:	ldrb	w0, [x1, #1]
  45b198:	cbnz	w0, 45ae20 <nftw@plt+0x582a0>
  45b19c:	b	45ac80 <nftw@plt+0x58100>
  45b1a0:	ldrb	w0, [x26, #1]
  45b1a4:	cmp	w0, #0x75
  45b1a8:	b.ne	45af14 <nftw@plt+0x58394>  // b.any
  45b1ac:	ldrb	w0, [x26, #2]
  45b1b0:	cbnz	w0, 45af14 <nftw@plt+0x58394>
  45b1b4:	mov	x0, x19
  45b1b8:	bl	45b3e0 <nftw@plt+0x58860>
  45b1bc:	mov	x26, x0
  45b1c0:	mov	x0, x19
  45b1c4:	bl	45b3e0 <nftw@plt+0x58860>
  45b1c8:	mov	x27, x0
  45b1cc:	mov	x0, x19
  45b1d0:	bl	45b3e0 <nftw@plt+0x58860>
  45b1d4:	mov	x3, x0
  45b1d8:	cbnz	x0, 45af90 <nftw@plt+0x58410>
  45b1dc:	mov	x20, #0x0                   	// #0
  45b1e0:	ldr	x27, [sp, #80]
  45b1e4:	str	w25, [x19, #76]
  45b1e8:	b	45ac88 <nftw@plt+0x58108>
  45b1ec:	ldr	x0, [x20, #8]
  45b1f0:	ldr	x0, [x0]
  45b1f4:	ldrb	w1, [x0, #1]
  45b1f8:	cmp	w1, #0x63
  45b1fc:	b.eq	45b330 <nftw@plt+0x587b0>  // b.none
  45b200:	ldrb	w0, [x26]
  45b204:	cmp	w0, #0x66
  45b208:	b.eq	45b360 <nftw@plt+0x587e0>  // b.none
  45b20c:	mov	x0, x19
  45b210:	bl	45b3e0 <nftw@plt+0x58860>
  45b214:	mov	x27, x0
  45b218:	ldrb	w1, [x26]
  45b21c:	cmp	w1, #0x63
  45b220:	b.ne	45b24c <nftw@plt+0x586cc>  // b.any
  45b224:	ldrb	w0, [x26, #1]
  45b228:	cmp	w0, #0x6c
  45b22c:	b.ne	45b24c <nftw@plt+0x586cc>  // b.any
  45b230:	ldrb	w0, [x26, #2]
  45b234:	cbnz	w0, 45b24c <nftw@plt+0x586cc>
  45b238:	mov	x0, x19
  45b23c:	mov	w1, #0x45                  	// #69
  45b240:	bl	45aba0 <nftw@plt+0x58020>
  45b244:	mov	x26, x0
  45b248:	b	45b284 <nftw@plt+0x58704>
  45b24c:	cmp	w1, #0x64
  45b250:	b.ne	45b2b8 <nftw@plt+0x58738>  // b.any
  45b254:	ldrb	w0, [x26, #1]
  45b258:	cmp	w0, #0x74
  45b25c:	b.ne	45b2b8 <nftw@plt+0x58738>  // b.any
  45b260:	ldrb	w0, [x26, #2]
  45b264:	cbnz	w0, 45b2b8 <nftw@plt+0x58738>
  45b268:	mov	x0, x19
  45b26c:	bl	45a540 <nftw@plt+0x579c0>
  45b270:	ldr	x1, [x19, #24]
  45b274:	mov	x26, x0
  45b278:	ldrb	w0, [x1]
  45b27c:	cmp	w0, #0x49
  45b280:	b.eq	45b37c <nftw@plt+0x587fc>  // b.none
  45b284:	mov	x2, x27
  45b288:	mov	x3, x26
  45b28c:	mov	w1, #0x39                  	// #57
  45b290:	mov	x0, x19
  45b294:	bl	44c310 <nftw@plt+0x49790>
  45b298:	mov	x3, x0
  45b29c:	mov	x2, x20
  45b2a0:	mov	x0, x19
  45b2a4:	mov	w1, #0x38                  	// #56
  45b2a8:	bl	44c310 <nftw@plt+0x49790>
  45b2ac:	mov	x20, x0
  45b2b0:	ldr	x27, [sp, #80]
  45b2b4:	b	45adb8 <nftw@plt+0x58238>
  45b2b8:	cmp	w1, #0x70
  45b2bc:	b.ne	45b2d4 <nftw@plt+0x58754>  // b.any
  45b2c0:	ldrb	w0, [x26, #1]
  45b2c4:	cmp	w0, #0x74
  45b2c8:	b.ne	45b2d4 <nftw@plt+0x58754>  // b.any
  45b2cc:	ldrb	w0, [x26, #2]
  45b2d0:	cbz	w0, 45b268 <nftw@plt+0x586e8>
  45b2d4:	mov	x0, x19
  45b2d8:	bl	45b3e0 <nftw@plt+0x58860>
  45b2dc:	mov	x26, x0
  45b2e0:	b	45b284 <nftw@plt+0x58704>
  45b2e4:	add	x2, x2, #0x1
  45b2e8:	str	x2, [x0, #24]
  45b2ec:	ldp	x19, x20, [sp, #16]
  45b2f0:	mov	x3, #0x0                   	// #0
  45b2f4:	ldp	x29, x30, [sp], #112
  45b2f8:	mov	w1, #0x2e                  	// #46
  45b2fc:	mov	x2, #0x0                   	// #0
  45b300:	b	44c310 <nftw@plt+0x49790>
  45b304:	ldr	x0, [x19, #24]
  45b308:	ldrb	w1, [x0]
  45b30c:	cmp	w1, #0x5f
  45b310:	b.ne	45b0b0 <nftw@plt+0x58530>  // b.any
  45b314:	add	x0, x0, #0x1
  45b318:	str	x0, [x19, #24]
  45b31c:	mov	w1, #0x45                  	// #69
  45b320:	mov	x0, x19
  45b324:	bl	45aba0 <nftw@plt+0x58020>
  45b328:	mov	x3, x0
  45b32c:	b	45b110 <nftw@plt+0x58590>
  45b330:	ldrb	w0, [x0]
  45b334:	sub	w1, w0, #0x63
  45b338:	sub	w0, w0, #0x72
  45b33c:	and	w1, w1, #0xff
  45b340:	and	w0, w0, #0xff
  45b344:	cmp	w1, #0x1
  45b348:	ccmp	w0, #0x1, #0x0, hi  // hi = pmore
  45b34c:	b.hi	45b200 <nftw@plt+0x58680>  // b.pmore
  45b350:	mov	x0, x19
  45b354:	bl	459438 <nftw@plt+0x568b8>
  45b358:	mov	x27, x0
  45b35c:	b	45b218 <nftw@plt+0x58698>
  45b360:	mov	x0, x19
  45b364:	bl	45a388 <nftw@plt+0x57808>
  45b368:	mov	x27, x0
  45b36c:	b	45b218 <nftw@plt+0x58698>
  45b370:	mov	x0, x19
  45b374:	bl	45a388 <nftw@plt+0x57808>
  45b378:	b	45b1bc <nftw@plt+0x5863c>
  45b37c:	add	x1, x1, #0x1
  45b380:	str	x1, [x19, #24]
  45b384:	mov	x0, x19
  45b388:	bl	45be08 <nftw@plt+0x59288>
  45b38c:	mov	x3, x0
  45b390:	mov	x2, x26
  45b394:	mov	x0, x19
  45b398:	mov	w1, #0x4                   	// #4
  45b39c:	bl	44c310 <nftw@plt+0x49790>
  45b3a0:	mov	x26, x0
  45b3a4:	b	45b284 <nftw@plt+0x58704>
  45b3a8:	ldrb	w0, [x1, #1]
  45b3ac:	cmp	w0, #0x69
  45b3b0:	b.ne	45b1dc <nftw@plt+0x5865c>  // b.any
  45b3b4:	add	x1, x1, #0x2
  45b3b8:	str	x1, [x19, #24]
  45b3bc:	mov	x0, x19
  45b3c0:	mov	w1, #0x45                  	// #69
  45b3c4:	bl	45aba0 <nftw@plt+0x58020>
  45b3c8:	mov	x3, x0
  45b3cc:	b	45af90 <nftw@plt+0x58410>
  45b3d0:	add	x1, x1, #0x1
  45b3d4:	mov	x3, #0x0                   	// #0
  45b3d8:	str	x1, [x19, #24]
  45b3dc:	b	45af90 <nftw@plt+0x58410>
  45b3e0:	ldr	x2, [x0, #24]
  45b3e4:	ldrb	w1, [x2]
  45b3e8:	cmp	w1, #0x4c
  45b3ec:	b.eq	45b57c <nftw@plt+0x589fc>  // b.none
  45b3f0:	cmp	w1, #0x54
  45b3f4:	b.eq	45b600 <nftw@plt+0x58a80>  // b.none
  45b3f8:	stp	x29, x30, [sp, #-48]!
  45b3fc:	cmp	w1, #0x73
  45b400:	mov	x29, sp
  45b404:	stp	x19, x20, [sp, #16]
  45b408:	mov	x19, x0
  45b40c:	b.eq	45b4c4 <nftw@plt+0x58944>  // b.none
  45b410:	cmp	w1, #0x66
  45b414:	b.eq	45b458 <nftw@plt+0x588d8>  // b.none
  45b418:	sub	w3, w1, #0x30
  45b41c:	and	w3, w3, #0xff
  45b420:	cmp	w3, #0x9
  45b424:	b.hi	45b580 <nftw@plt+0x58a00>  // b.pmore
  45b428:	mov	x0, x19
  45b42c:	bl	45a540 <nftw@plt+0x579c0>
  45b430:	mov	x20, x0
  45b434:	cbz	x0, 45b568 <nftw@plt+0x589e8>
  45b438:	ldr	x0, [x19, #24]
  45b43c:	ldrb	w1, [x0]
  45b440:	cmp	w1, #0x49
  45b444:	b.eq	45b6d8 <nftw@plt+0x58b58>  // b.none
  45b448:	mov	x0, x20
  45b44c:	ldp	x19, x20, [sp, #16]
  45b450:	ldp	x29, x30, [sp], #48
  45b454:	ret
  45b458:	ldrb	w1, [x2, #1]
  45b45c:	cmp	w1, #0x70
  45b460:	b.eq	45b500 <nftw@plt+0x58980>  // b.none
  45b464:	mov	x0, x19
  45b468:	bl	45a388 <nftw@plt+0x57808>
  45b46c:	mov	x20, x0
  45b470:	cbz	x0, 45b568 <nftw@plt+0x589e8>
  45b474:	ldr	w0, [x0]
  45b478:	cmp	w0, #0x32
  45b47c:	b.eq	45b604 <nftw@plt+0x58a84>  // b.none
  45b480:	cmp	w0, #0x34
  45b484:	b.eq	45ba30 <nftw@plt+0x58eb0>  // b.none
  45b488:	b.hi	45b568 <nftw@plt+0x589e8>  // b.pmore
  45b48c:	cmp	w0, #0x33
  45b490:	b.ne	45b568 <nftw@plt+0x589e8>  // b.any
  45b494:	ldr	w0, [x20, #8]
  45b498:	cmp	w0, #0x2
  45b49c:	b.eq	45b568 <nftw@plt+0x589e8>  // b.none
  45b4a0:	b.gt	45b568 <nftw@plt+0x589e8>
  45b4a4:	cbnz	w0, 45b7cc <nftw@plt+0x58c4c>
  45b4a8:	mov	x2, x20
  45b4ac:	mov	x0, x19
  45b4b0:	ldp	x19, x20, [sp, #16]
  45b4b4:	mov	x3, #0x0                   	// #0
  45b4b8:	ldp	x29, x30, [sp], #48
  45b4bc:	mov	w1, #0x36                  	// #54
  45b4c0:	b	44c310 <nftw@plt+0x49790>
  45b4c4:	ldrb	w1, [x2, #1]
  45b4c8:	cmp	w1, #0x72
  45b4cc:	b.eq	45b704 <nftw@plt+0x58b84>  // b.none
  45b4d0:	cmp	w1, #0x70
  45b4d4:	b.ne	45b464 <nftw@plt+0x588e4>  // b.any
  45b4d8:	add	x2, x2, #0x2
  45b4dc:	str	x2, [x0, #24]
  45b4e0:	bl	45b3e0 <nftw@plt+0x58860>
  45b4e4:	mov	x2, x0
  45b4e8:	mov	x0, x19
  45b4ec:	mov	x3, #0x0                   	// #0
  45b4f0:	ldp	x19, x20, [sp, #16]
  45b4f4:	mov	w1, #0x4b                  	// #75
  45b4f8:	ldp	x29, x30, [sp], #48
  45b4fc:	b	44c310 <nftw@plt+0x49790>
  45b500:	add	x1, x2, #0x2
  45b504:	str	x1, [x0, #24]
  45b508:	ldrb	w1, [x2, #2]
  45b50c:	cmp	w1, #0x54
  45b510:	b.eq	45b890 <nftw@plt+0x58d10>  // b.none
  45b514:	bl	44cc78 <nftw@plt+0x4a0f8>
  45b518:	mvn	x1, x0
  45b51c:	add	w0, w0, #0x1
  45b520:	tst	x1, #0x7fffffff
  45b524:	b.eq	45b568 <nftw@plt+0x589e8>  // b.none
  45b528:	ldp	w1, w2, [x19, #40]
  45b52c:	cmp	w1, w2
  45b530:	b.ge	45b568 <nftw@plt+0x589e8>  // b.tcont
  45b534:	mov	w3, #0x18                  	// #24
  45b538:	add	w4, w1, #0x1
  45b53c:	ldr	x2, [x19, #32]
  45b540:	smull	x1, w1, w3
  45b544:	mov	w3, #0x6                   	// #6
  45b548:	sxtw	x0, w0
  45b54c:	add	x20, x2, x1
  45b550:	str	wzr, [x20, #4]
  45b554:	str	w4, [x19, #40]
  45b558:	str	w3, [x2, x1]
  45b55c:	str	x0, [x20, #8]
  45b560:	b	45b448 <nftw@plt+0x588c8>
  45b564:	ldp	x21, x22, [sp, #32]
  45b568:	mov	x20, #0x0                   	// #0
  45b56c:	mov	x0, x20
  45b570:	ldp	x19, x20, [sp, #16]
  45b574:	ldp	x29, x30, [sp], #48
  45b578:	ret
  45b57c:	b	45d428 <nftw@plt+0x5a8a8>
  45b580:	cmp	w1, #0x6f
  45b584:	b.ne	45b5a0 <nftw@plt+0x58a20>  // b.any
  45b588:	ldrb	w0, [x2, #1]
  45b58c:	cmp	w0, #0x6e
  45b590:	b.ne	45b464 <nftw@plt+0x588e4>  // b.any
  45b594:	add	x2, x2, #0x2
  45b598:	str	x2, [x19, #24]
  45b59c:	b	45b428 <nftw@plt+0x588a8>
  45b5a0:	cmp	w1, #0x69
  45b5a4:	mov	w3, #0x74                  	// #116
  45b5a8:	ccmp	w1, w3, #0x4, ne  // ne = any
  45b5ac:	b.ne	45b464 <nftw@plt+0x588e4>  // b.any
  45b5b0:	ldrb	w3, [x2, #1]
  45b5b4:	cmp	w3, #0x6c
  45b5b8:	b.ne	45b464 <nftw@plt+0x588e4>  // b.any
  45b5bc:	add	x3, x2, #0x2
  45b5c0:	str	x3, [x0, #24]
  45b5c4:	cmp	w1, #0x74
  45b5c8:	mov	x20, #0x0                   	// #0
  45b5cc:	b.eq	45b7bc <nftw@plt+0x58c3c>  // b.none
  45b5d0:	ldrb	w0, [x3, #1]
  45b5d4:	cbz	w0, 45b568 <nftw@plt+0x589e8>
  45b5d8:	mov	x0, x19
  45b5dc:	mov	w1, #0x45                  	// #69
  45b5e0:	bl	45aba0 <nftw@plt+0x58020>
  45b5e4:	mov	x3, x0
  45b5e8:	mov	x2, x20
  45b5ec:	mov	x0, x19
  45b5f0:	ldp	x19, x20, [sp, #16]
  45b5f4:	mov	w1, #0x31                  	// #49
  45b5f8:	ldp	x29, x30, [sp], #48
  45b5fc:	b	44c310 <nftw@plt+0x49790>
  45b600:	b	44ce50 <nftw@plt+0x4a2d0>
  45b604:	ldr	x2, [x20, #8]
  45b608:	stp	x21, x22, [sp, #32]
  45b60c:	ldr	w0, [x19, #72]
  45b610:	ldr	w1, [x2, #16]
  45b614:	ldr	x21, [x2]
  45b618:	sub	w1, w1, #0x2
  45b61c:	add	w0, w0, w1
  45b620:	str	w0, [x19, #72]
  45b624:	ldrb	w1, [x21]
  45b628:	cmp	w1, #0x73
  45b62c:	b.eq	45b754 <nftw@plt+0x58bd4>  // b.none
  45b630:	ldr	w22, [x2, #20]
  45b634:	cmp	w22, #0x1
  45b638:	b.eq	45b804 <nftw@plt+0x58c84>  // b.none
  45b63c:	b.le	45b7f8 <nftw@plt+0x58c78>
  45b640:	cmp	w22, #0x2
  45b644:	b.eq	45b8bc <nftw@plt+0x58d3c>  // b.none
  45b648:	cmp	w22, #0x3
  45b64c:	b.ne	45b564 <nftw@plt+0x589e4>  // b.any
  45b650:	cmp	w1, #0x71
  45b654:	b.ne	45b94c <nftw@plt+0x58dcc>  // b.any
  45b658:	ldrb	w0, [x21, #1]
  45b65c:	cmp	w0, #0x75
  45b660:	b.ne	45b94c <nftw@plt+0x58dcc>  // b.any
  45b664:	ldrb	w0, [x21, #2]
  45b668:	cbnz	w0, 45b94c <nftw@plt+0x58dcc>
  45b66c:	mov	x0, x19
  45b670:	bl	45b3e0 <nftw@plt+0x58860>
  45b674:	mov	x21, x0
  45b678:	mov	x0, x19
  45b67c:	bl	45b3e0 <nftw@plt+0x58860>
  45b680:	mov	x22, x0
  45b684:	mov	x0, x19
  45b688:	bl	45b3e0 <nftw@plt+0x58860>
  45b68c:	mov	x3, x0
  45b690:	cbz	x0, 45b564 <nftw@plt+0x589e4>
  45b694:	mov	x2, x22
  45b698:	mov	x0, x19
  45b69c:	mov	w1, #0x3c                  	// #60
  45b6a0:	bl	44c310 <nftw@plt+0x49790>
  45b6a4:	mov	x2, x21
  45b6a8:	mov	x3, x0
  45b6ac:	mov	w1, #0x3b                  	// #59
  45b6b0:	mov	x0, x19
  45b6b4:	bl	44c310 <nftw@plt+0x49790>
  45b6b8:	mov	x3, x0
  45b6bc:	mov	x2, x20
  45b6c0:	mov	x0, x19
  45b6c4:	ldp	x19, x20, [sp, #16]
  45b6c8:	mov	w1, #0x3a                  	// #58
  45b6cc:	ldp	x21, x22, [sp, #32]
  45b6d0:	ldp	x29, x30, [sp], #48
  45b6d4:	b	44c310 <nftw@plt+0x49790>
  45b6d8:	add	x0, x0, #0x1
  45b6dc:	str	x0, [x19, #24]
  45b6e0:	mov	x0, x19
  45b6e4:	bl	45be08 <nftw@plt+0x59288>
  45b6e8:	mov	x3, x0
  45b6ec:	mov	x2, x20
  45b6f0:	mov	x0, x19
  45b6f4:	ldp	x19, x20, [sp, #16]
  45b6f8:	mov	w1, #0x4                   	// #4
  45b6fc:	ldp	x29, x30, [sp], #48
  45b700:	b	44c310 <nftw@plt+0x49790>
  45b704:	add	x2, x2, #0x2
  45b708:	stp	x21, x22, [sp, #32]
  45b70c:	str	x2, [x0, #24]
  45b710:	bl	459438 <nftw@plt+0x568b8>
  45b714:	mov	x20, x0
  45b718:	mov	x0, x19
  45b71c:	bl	45a540 <nftw@plt+0x579c0>
  45b720:	ldr	x1, [x19, #24]
  45b724:	mov	x21, x0
  45b728:	mov	x3, x21
  45b72c:	ldrb	w0, [x1]
  45b730:	cmp	w0, #0x49
  45b734:	b.eq	45b790 <nftw@plt+0x58c10>  // b.none
  45b738:	mov	x2, x20
  45b73c:	mov	x0, x19
  45b740:	ldp	x19, x20, [sp, #16]
  45b744:	mov	w1, #0x1                   	// #1
  45b748:	ldp	x21, x22, [sp, #32]
  45b74c:	ldp	x29, x30, [sp], #48
  45b750:	b	44c310 <nftw@plt+0x49790>
  45b754:	ldrb	w0, [x21, #1]
  45b758:	cmp	w0, #0x74
  45b75c:	b.ne	45b630 <nftw@plt+0x58ab0>  // b.any
  45b760:	ldrb	w0, [x21, #2]
  45b764:	cbnz	w0, 45b630 <nftw@plt+0x58ab0>
  45b768:	mov	x0, x19
  45b76c:	bl	459438 <nftw@plt+0x568b8>
  45b770:	mov	x2, x20
  45b774:	mov	x3, x0
  45b778:	mov	x0, x19
  45b77c:	mov	w1, #0x37                  	// #55
  45b780:	ldp	x19, x20, [sp, #16]
  45b784:	ldp	x21, x22, [sp, #32]
  45b788:	ldp	x29, x30, [sp], #48
  45b78c:	b	44c310 <nftw@plt+0x49790>
  45b790:	add	x1, x1, #0x1
  45b794:	str	x1, [x19, #24]
  45b798:	mov	x0, x19
  45b79c:	bl	45be08 <nftw@plt+0x59288>
  45b7a0:	mov	x3, x0
  45b7a4:	mov	x2, x21
  45b7a8:	mov	x0, x19
  45b7ac:	mov	w1, #0x4                   	// #4
  45b7b0:	bl	44c310 <nftw@plt+0x49790>
  45b7b4:	mov	x3, x0
  45b7b8:	b	45b738 <nftw@plt+0x58bb8>
  45b7bc:	bl	459438 <nftw@plt+0x568b8>
  45b7c0:	mov	x20, x0
  45b7c4:	ldr	x3, [x19, #24]
  45b7c8:	b	45b5d0 <nftw@plt+0x58a50>
  45b7cc:	cmp	w0, #0x1
  45b7d0:	b.ne	45b568 <nftw@plt+0x589e8>  // b.any
  45b7d4:	mov	x0, x19
  45b7d8:	bl	45b3e0 <nftw@plt+0x58860>
  45b7dc:	mov	x3, x0
  45b7e0:	mov	x2, x20
  45b7e4:	mov	x0, x19
  45b7e8:	ldp	x19, x20, [sp, #16]
  45b7ec:	mov	w1, #0x37                  	// #55
  45b7f0:	ldp	x29, x30, [sp], #48
  45b7f4:	b	44c310 <nftw@plt+0x49790>
  45b7f8:	cbnz	w22, 45b564 <nftw@plt+0x589e4>
  45b7fc:	ldp	x21, x22, [sp, #32]
  45b800:	b	45b4a8 <nftw@plt+0x58928>
  45b804:	ldrb	w0, [x21]
  45b808:	mov	w2, #0x6d                  	// #109
  45b80c:	cmp	w0, #0x70
  45b810:	ccmp	w0, w2, #0x4, ne  // ne = any
  45b814:	b.ne	45b824 <nftw@plt+0x58ca4>  // b.any
  45b818:	ldrb	w2, [x21, #1]
  45b81c:	cmp	w2, w0
  45b820:	b.eq	45b85c <nftw@plt+0x58cdc>  // b.none
  45b824:	mov	w22, #0x0                   	// #0
  45b828:	cmp	w1, #0x73
  45b82c:	b.ne	45b880 <nftw@plt+0x58d00>  // b.any
  45b830:	ldrb	w0, [x21, #1]
  45b834:	cmp	w0, #0x50
  45b838:	b.ne	45b880 <nftw@plt+0x58d00>  // b.any
  45b83c:	ldrb	w0, [x21, #2]
  45b840:	cbnz	w0, 45b880 <nftw@plt+0x58d00>
  45b844:	mov	x0, x19
  45b848:	bl	45be08 <nftw@plt+0x59288>
  45b84c:	mov	x3, x0
  45b850:	cbnz	w22, 45b8a0 <nftw@plt+0x58d20>
  45b854:	ldp	x21, x22, [sp, #32]
  45b858:	b	45b7e0 <nftw@plt+0x58c60>
  45b85c:	ldr	x0, [x19, #24]
  45b860:	ldrb	w2, [x0]
  45b864:	cmp	w2, #0x5f
  45b868:	b.ne	45b828 <nftw@plt+0x58ca8>  // b.any
  45b86c:	add	x0, x0, #0x1
  45b870:	str	x0, [x19, #24]
  45b874:	mov	w22, #0x0                   	// #0
  45b878:	ldrb	w1, [x21]
  45b87c:	b	45b828 <nftw@plt+0x58ca8>
  45b880:	mov	x0, x19
  45b884:	bl	45b3e0 <nftw@plt+0x58860>
  45b888:	mov	x3, x0
  45b88c:	b	45b850 <nftw@plt+0x58cd0>
  45b890:	add	x2, x2, #0x3
  45b894:	mov	w0, #0x0                   	// #0
  45b898:	str	x2, [x19, #24]
  45b89c:	b	45b528 <nftw@plt+0x589a8>
  45b8a0:	mov	x2, x3
  45b8a4:	mov	x0, x19
  45b8a8:	mov	w1, #0x39                  	// #57
  45b8ac:	bl	44c310 <nftw@plt+0x49790>
  45b8b0:	mov	x3, x0
  45b8b4:	ldp	x21, x22, [sp, #32]
  45b8b8:	b	45b7e0 <nftw@plt+0x58c60>
  45b8bc:	ldr	x0, [x20, #8]
  45b8c0:	ldr	x0, [x0]
  45b8c4:	ldrb	w1, [x0, #1]
  45b8c8:	cmp	w1, #0x63
  45b8cc:	b.eq	45ba74 <nftw@plt+0x58ef4>  // b.none
  45b8d0:	ldrb	w0, [x21]
  45b8d4:	cmp	w0, #0x66
  45b8d8:	b.eq	45baa4 <nftw@plt+0x58f24>  // b.none
  45b8dc:	mov	x0, x19
  45b8e0:	bl	45b3e0 <nftw@plt+0x58860>
  45b8e4:	mov	x22, x0
  45b8e8:	ldrb	w1, [x21]
  45b8ec:	cmp	w1, #0x63
  45b8f0:	b.ne	45b9cc <nftw@plt+0x58e4c>  // b.any
  45b8f4:	ldrb	w0, [x21, #1]
  45b8f8:	cmp	w0, #0x6c
  45b8fc:	b.ne	45b9cc <nftw@plt+0x58e4c>  // b.any
  45b900:	ldrb	w0, [x21, #2]
  45b904:	cbnz	w0, 45b9cc <nftw@plt+0x58e4c>
  45b908:	mov	x0, x19
  45b90c:	mov	w1, #0x45                  	// #69
  45b910:	bl	45aba0 <nftw@plt+0x58020>
  45b914:	mov	x21, x0
  45b918:	mov	x3, x21
  45b91c:	mov	x2, x22
  45b920:	mov	x0, x19
  45b924:	mov	w1, #0x39                  	// #57
  45b928:	bl	44c310 <nftw@plt+0x49790>
  45b92c:	mov	x3, x0
  45b930:	mov	x2, x20
  45b934:	mov	x0, x19
  45b938:	ldp	x19, x20, [sp, #16]
  45b93c:	mov	w1, #0x38                  	// #56
  45b940:	ldp	x21, x22, [sp, #32]
  45b944:	ldp	x29, x30, [sp], #48
  45b948:	b	44c310 <nftw@plt+0x49790>
  45b94c:	ldrb	w0, [x21]
  45b950:	cmp	w0, #0x66
  45b954:	b.eq	45bacc <nftw@plt+0x58f4c>  // b.none
  45b958:	cmp	w0, #0x6e
  45b95c:	b.ne	45b564 <nftw@plt+0x589e4>  // b.any
  45b960:	ldrb	w0, [x21, #1]
  45b964:	mov	w1, #0x61                  	// #97
  45b968:	cmp	w0, #0x77
  45b96c:	ccmp	w0, w1, #0x4, ne  // ne = any
  45b970:	b.ne	45b564 <nftw@plt+0x589e4>  // b.any
  45b974:	mov	w1, #0x5f                  	// #95
  45b978:	mov	x0, x19
  45b97c:	bl	45aba0 <nftw@plt+0x58020>
  45b980:	mov	x21, x0
  45b984:	mov	x0, x19
  45b988:	bl	459438 <nftw@plt+0x568b8>
  45b98c:	ldr	x1, [x19, #24]
  45b990:	mov	x22, x0
  45b994:	ldrb	w0, [x1]
  45b998:	cmp	w0, #0x45
  45b99c:	b.eq	45bb00 <nftw@plt+0x58f80>  // b.none
  45b9a0:	cmp	w0, #0x70
  45b9a4:	b.eq	45bad8 <nftw@plt+0x58f58>  // b.none
  45b9a8:	cmp	w0, #0x69
  45b9ac:	b.ne	45b564 <nftw@plt+0x589e4>  // b.any
  45b9b0:	ldrb	w0, [x1, #1]
  45b9b4:	cmp	w0, #0x6c
  45b9b8:	b.ne	45b564 <nftw@plt+0x589e4>  // b.any
  45b9bc:	mov	x0, x19
  45b9c0:	bl	45b3e0 <nftw@plt+0x58860>
  45b9c4:	mov	x3, x0
  45b9c8:	b	45b694 <nftw@plt+0x58b14>
  45b9cc:	cmp	w1, #0x64
  45b9d0:	b.ne	45ba5c <nftw@plt+0x58edc>  // b.any
  45b9d4:	ldrb	w0, [x21, #1]
  45b9d8:	cmp	w0, #0x74
  45b9dc:	b.ne	45ba5c <nftw@plt+0x58edc>  // b.any
  45b9e0:	ldrb	w0, [x21, #2]
  45b9e4:	cbnz	w0, 45ba5c <nftw@plt+0x58edc>
  45b9e8:	mov	x0, x19
  45b9ec:	bl	45a540 <nftw@plt+0x579c0>
  45b9f0:	ldr	x1, [x19, #24]
  45b9f4:	mov	x21, x0
  45b9f8:	ldrb	w0, [x1]
  45b9fc:	cmp	w0, #0x49
  45ba00:	b.ne	45b918 <nftw@plt+0x58d98>  // b.any
  45ba04:	add	x1, x1, #0x1
  45ba08:	str	x1, [x19, #24]
  45ba0c:	mov	x0, x19
  45ba10:	bl	45be08 <nftw@plt+0x59288>
  45ba14:	mov	x3, x0
  45ba18:	mov	x2, x21
  45ba1c:	mov	x0, x19
  45ba20:	mov	w1, #0x4                   	// #4
  45ba24:	bl	44c310 <nftw@plt+0x49790>
  45ba28:	mov	x21, x0
  45ba2c:	b	45b918 <nftw@plt+0x58d98>
  45ba30:	ldr	x0, [x19, #24]
  45ba34:	ldrb	w1, [x0]
  45ba38:	cmp	w1, #0x5f
  45ba3c:	b.ne	45b7d4 <nftw@plt+0x58c54>  // b.any
  45ba40:	add	x0, x0, #0x1
  45ba44:	str	x0, [x19, #24]
  45ba48:	mov	w1, #0x45                  	// #69
  45ba4c:	mov	x0, x19
  45ba50:	bl	45aba0 <nftw@plt+0x58020>
  45ba54:	mov	x3, x0
  45ba58:	b	45b7e0 <nftw@plt+0x58c60>
  45ba5c:	cmp	w1, #0x70
  45ba60:	b.eq	45bab4 <nftw@plt+0x58f34>  // b.none
  45ba64:	mov	x0, x19
  45ba68:	bl	45b3e0 <nftw@plt+0x58860>
  45ba6c:	mov	x21, x0
  45ba70:	b	45b918 <nftw@plt+0x58d98>
  45ba74:	ldrb	w0, [x0]
  45ba78:	sub	w1, w0, #0x63
  45ba7c:	sub	w0, w0, #0x72
  45ba80:	and	w1, w1, #0xff
  45ba84:	and	w0, w0, #0xff
  45ba88:	cmp	w1, #0x1
  45ba8c:	ccmp	w0, #0x1, #0x0, hi  // hi = pmore
  45ba90:	b.hi	45b8d0 <nftw@plt+0x58d50>  // b.pmore
  45ba94:	mov	x0, x19
  45ba98:	bl	459438 <nftw@plt+0x568b8>
  45ba9c:	mov	x22, x0
  45baa0:	b	45b8e8 <nftw@plt+0x58d68>
  45baa4:	mov	x0, x19
  45baa8:	bl	45a388 <nftw@plt+0x57808>
  45baac:	mov	x22, x0
  45bab0:	b	45b8e8 <nftw@plt+0x58d68>
  45bab4:	ldrb	w0, [x21, #1]
  45bab8:	cmp	w0, #0x74
  45babc:	b.ne	45ba64 <nftw@plt+0x58ee4>  // b.any
  45bac0:	ldrb	w0, [x21, #2]
  45bac4:	cbz	w0, 45b9e8 <nftw@plt+0x58e68>
  45bac8:	b	45ba64 <nftw@plt+0x58ee4>
  45bacc:	mov	x0, x19
  45bad0:	bl	45a388 <nftw@plt+0x57808>
  45bad4:	b	45b674 <nftw@plt+0x58af4>
  45bad8:	ldrb	w0, [x1, #1]
  45badc:	cmp	w0, #0x69
  45bae0:	b.ne	45b564 <nftw@plt+0x589e4>  // b.any
  45bae4:	add	x1, x1, #0x2
  45bae8:	str	x1, [x19, #24]
  45baec:	mov	x0, x19
  45baf0:	mov	w1, #0x45                  	// #69
  45baf4:	bl	45aba0 <nftw@plt+0x58020>
  45baf8:	mov	x3, x0
  45bafc:	b	45b694 <nftw@plt+0x58b14>
  45bb00:	add	x1, x1, #0x1
  45bb04:	mov	x3, #0x0                   	// #0
  45bb08:	str	x1, [x19, #24]
  45bb0c:	b	45b694 <nftw@plt+0x58b14>
  45bb10:	stp	x29, x30, [sp, #-80]!
  45bb14:	mov	x29, sp
  45bb18:	ldr	x3, [x0, #24]
  45bb1c:	stp	x19, x20, [sp, #16]
  45bb20:	mov	x19, x0
  45bb24:	stp	x21, x22, [sp, #32]
  45bb28:	mov	x20, x1
  45bb2c:	mov	w22, #0x56                  	// #86
  45bb30:	stp	x23, x24, [sp, #48]
  45bb34:	mov	x23, x1
  45bb38:	mov	w24, w2
  45bb3c:	stp	x25, x26, [sp, #64]
  45bb40:	mov	w21, #0x4b                  	// #75
  45bb44:	ldrb	w4, [x3]
  45bb48:	mov	w0, w4
  45bb4c:	nop
  45bb50:	cmp	w0, #0x72
  45bb54:	ccmp	w0, w22, #0x4, ne  // ne = any
  45bb58:	ccmp	w0, w21, #0x4, ne  // ne = any
  45bb5c:	b.eq	45bc08 <nftw@plt+0x59088>  // b.none
  45bb60:	cmp	w0, #0x44
  45bb64:	b.eq	45bbec <nftw@plt+0x5906c>  // b.none
  45bb68:	cmp	w4, #0x46
  45bb6c:	eor	w24, w24, #0x1
  45bb70:	cset	w0, eq  // eq = none
  45bb74:	tst	w24, w0
  45bb78:	b.eq	45bbd0 <nftw@plt+0x59050>  // b.none
  45bb7c:	cmp	x20, x23
  45bb80:	b.eq	45bbd0 <nftw@plt+0x59050>  // b.none
  45bb84:	mov	w3, #0x1d                  	// #29
  45bb88:	mov	w2, #0x1e                  	// #30
  45bb8c:	mov	w1, #0x1c                  	// #28
  45bb90:	b	45bba8 <nftw@plt+0x59028>
  45bb94:	cmp	w0, #0x19
  45bb98:	b.eq	45bdfc <nftw@plt+0x5927c>  // b.none
  45bb9c:	add	x23, x23, #0x8
  45bba0:	cmp	x20, x23
  45bba4:	b.eq	45bbd0 <nftw@plt+0x59050>  // b.none
  45bba8:	ldr	x23, [x23]
  45bbac:	ldr	w0, [x23]
  45bbb0:	cmp	w0, #0x1a
  45bbb4:	b.eq	45bdf4 <nftw@plt+0x59274>  // b.none
  45bbb8:	cmp	w0, #0x1b
  45bbbc:	b.ne	45bb94 <nftw@plt+0x59014>  // b.any
  45bbc0:	str	w2, [x23]
  45bbc4:	add	x23, x23, #0x8
  45bbc8:	cmp	x20, x23
  45bbcc:	b.ne	45bba8 <nftw@plt+0x59028>  // b.any
  45bbd0:	mov	x0, x20
  45bbd4:	ldp	x19, x20, [sp, #16]
  45bbd8:	ldp	x21, x22, [sp, #32]
  45bbdc:	ldp	x23, x24, [sp, #48]
  45bbe0:	ldp	x25, x26, [sp, #64]
  45bbe4:	ldp	x29, x30, [sp], #80
  45bbe8:	ret
  45bbec:	ldrb	w0, [x3, #1]
  45bbf0:	and	w1, w0, #0xffffffdf
  45bbf4:	sub	w0, w0, #0x77
  45bbf8:	cmp	w1, #0x4f
  45bbfc:	and	w0, w0, #0xff
  45bc00:	ccmp	w0, #0x1, #0x0, ne  // ne = any
  45bc04:	b.hi	45bb68 <nftw@plt+0x58fe8>  // b.pmore
  45bc08:	add	x5, x3, #0x1
  45bc0c:	str	x5, [x19, #24]
  45bc10:	cmp	w4, #0x72
  45bc14:	b.eq	45bcd4 <nftw@plt+0x59154>  // b.none
  45bc18:	cmp	w4, #0x56
  45bc1c:	b.eq	45bd38 <nftw@plt+0x591b8>  // b.none
  45bc20:	cmp	w4, #0x4b
  45bc24:	b.eq	45bd60 <nftw@plt+0x591e0>  // b.none
  45bc28:	ldrb	w0, [x3, #1]
  45bc2c:	cbz	w0, 45bcb4 <nftw@plt+0x59134>
  45bc30:	add	x5, x3, #0x2
  45bc34:	str	x5, [x19, #24]
  45bc38:	ldrb	w25, [x3, #1]
  45bc3c:	cmp	w25, #0x78
  45bc40:	b.eq	45bd94 <nftw@plt+0x59214>  // b.none
  45bc44:	and	w0, w25, #0xffffffdf
  45bc48:	cmp	w0, #0x4f
  45bc4c:	and	w7, w0, #0xff
  45bc50:	b.ne	45bdac <nftw@plt+0x5922c>  // b.any
  45bc54:	ldr	w0, [x19, #72]
  45bc58:	cmp	w25, #0x4f
  45bc5c:	add	w0, w0, #0x9
  45bc60:	str	w0, [x19, #72]
  45bc64:	b.ne	45bdec <nftw@plt+0x5926c>  // b.any
  45bc68:	ldr	w26, [x19, #76]
  45bc6c:	mov	w0, #0x1                   	// #1
  45bc70:	str	w0, [x19, #76]
  45bc74:	mov	x0, x19
  45bc78:	bl	45b3e0 <nftw@plt+0x58860>
  45bc7c:	str	w26, [x19, #76]
  45bc80:	cbz	x0, 45bcb4 <nftw@plt+0x59134>
  45bc84:	ldr	x5, [x19, #24]
  45bc88:	ldrb	w1, [x5]
  45bc8c:	cmp	w1, #0x45
  45bc90:	b.ne	45bcb4 <nftw@plt+0x59134>  // b.any
  45bc94:	ldp	w3, w1, [x19, #40]
  45bc98:	add	x5, x5, #0x1
  45bc9c:	str	x5, [x19, #24]
  45bca0:	mov	w7, w25
  45bca4:	cmp	w3, w1
  45bca8:	b.lt	45bcfc <nftw@plt+0x5917c>  // b.tstop
  45bcac:	nop
  45bcb0:	str	xzr, [x20]
  45bcb4:	mov	x20, #0x0                   	// #0
  45bcb8:	mov	x0, x20
  45bcbc:	ldp	x19, x20, [sp, #16]
  45bcc0:	ldp	x21, x22, [sp, #32]
  45bcc4:	ldp	x23, x24, [sp, #48]
  45bcc8:	ldp	x25, x26, [sp, #64]
  45bccc:	ldp	x29, x30, [sp], #80
  45bcd0:	ret
  45bcd4:	ldr	w0, [x19, #72]
  45bcd8:	add	w3, w0, #0x9
  45bcdc:	mov	x0, #0x0                   	// #0
  45bce0:	cbnz	w24, 45bd54 <nftw@plt+0x591d4>
  45bce4:	mov	w7, #0x19                  	// #25
  45bce8:	str	w3, [x19, #72]
  45bcec:	nop
  45bcf0:	ldp	w3, w1, [x19, #40]
  45bcf4:	cmp	w3, w1
  45bcf8:	b.ge	45bcb0 <nftw@plt+0x59130>  // b.tcont
  45bcfc:	mov	w4, #0x18                  	// #24
  45bd00:	add	w8, w3, #0x1
  45bd04:	ldr	x6, [x19, #32]
  45bd08:	smull	x3, w3, w4
  45bd0c:	add	x4, x6, x3
  45bd10:	str	wzr, [x4, #4]
  45bd14:	str	w8, [x19, #40]
  45bd18:	str	w7, [x6, x3]
  45bd1c:	stp	xzr, x0, [x4, #8]
  45bd20:	ldr	x3, [x19, #24]
  45bd24:	str	x4, [x20]
  45bd28:	add	x20, x4, #0x8
  45bd2c:	ldrb	w4, [x5]
  45bd30:	ldrb	w0, [x3]
  45bd34:	b	45bb50 <nftw@plt+0x58fd0>
  45bd38:	ldr	w1, [x19, #72]
  45bd3c:	mov	x0, #0x0                   	// #0
  45bd40:	add	w1, w1, #0x9
  45bd44:	cbnz	w24, 45bd7c <nftw@plt+0x591fc>
  45bd48:	mov	w7, #0x1a                  	// #26
  45bd4c:	str	w1, [x19, #72]
  45bd50:	b	45bcf0 <nftw@plt+0x59170>
  45bd54:	mov	w7, #0x1c                  	// #28
  45bd58:	str	w3, [x19, #72]
  45bd5c:	b	45bcf0 <nftw@plt+0x59170>
  45bd60:	ldr	w0, [x19, #72]
  45bd64:	add	w1, w0, #0x6
  45bd68:	mov	x0, #0x0                   	// #0
  45bd6c:	cbnz	w24, 45bd88 <nftw@plt+0x59208>
  45bd70:	mov	w7, #0x1b                  	// #27
  45bd74:	str	w1, [x19, #72]
  45bd78:	b	45bcf0 <nftw@plt+0x59170>
  45bd7c:	mov	w7, #0x1d                  	// #29
  45bd80:	str	w1, [x19, #72]
  45bd84:	b	45bcf0 <nftw@plt+0x59170>
  45bd88:	mov	w7, #0x1e                  	// #30
  45bd8c:	str	w1, [x19, #72]
  45bd90:	b	45bcf0 <nftw@plt+0x59170>
  45bd94:	ldr	w1, [x19, #72]
  45bd98:	mov	x0, #0x0                   	// #0
  45bd9c:	mov	w7, #0x4d                  	// #77
  45bda0:	add	w1, w1, #0x11
  45bda4:	str	w1, [x19, #72]
  45bda8:	b	45bcf0 <nftw@plt+0x59170>
  45bdac:	cmp	w25, #0x77
  45bdb0:	b.ne	45bcb4 <nftw@plt+0x59134>  // b.any
  45bdb4:	ldr	w1, [x19, #72]
  45bdb8:	mov	x0, x19
  45bdbc:	add	w1, w1, #0x6
  45bdc0:	str	w1, [x19, #72]
  45bdc4:	bl	45a238 <nftw@plt+0x576b8>
  45bdc8:	cbz	x0, 45bcb4 <nftw@plt+0x59134>
  45bdcc:	ldr	x5, [x19, #24]
  45bdd0:	ldrb	w1, [x5]
  45bdd4:	cmp	w1, #0x45
  45bdd8:	b.ne	45bcb4 <nftw@plt+0x59134>  // b.any
  45bddc:	add	x5, x5, #0x1
  45bde0:	mov	w7, #0x50                  	// #80
  45bde4:	str	x5, [x19, #24]
  45bde8:	b	45bcf0 <nftw@plt+0x59170>
  45bdec:	mov	x0, #0x0                   	// #0
  45bdf0:	b	45bcf0 <nftw@plt+0x59170>
  45bdf4:	str	w3, [x23]
  45bdf8:	b	45bb9c <nftw@plt+0x5901c>
  45bdfc:	str	w1, [x23]
  45be00:	b	45bb9c <nftw@plt+0x5901c>
  45be04:	nop
  45be08:	stp	x29, x30, [sp, #-96]!
  45be0c:	mov	x29, sp
  45be10:	ldr	x3, [x0, #24]
  45be14:	stp	x19, x20, [sp, #16]
  45be18:	mov	x19, x0
  45be1c:	stp	x23, x24, [sp, #48]
  45be20:	ldrb	w1, [x3]
  45be24:	ldr	x23, [x0, #64]
  45be28:	cmp	w1, #0x45
  45be2c:	b.eq	45bf7c <nftw@plt+0x593fc>  // b.none
  45be30:	add	x24, sp, #0x58
  45be34:	mov	w20, #0x2f                  	// #47
  45be38:	stp	x21, x22, [sp, #32]
  45be3c:	mov	w22, #0x1                   	// #1
  45be40:	mov	w21, #0x18                  	// #24
  45be44:	str	x25, [sp, #64]
  45be48:	str	xzr, [sp, #88]
  45be4c:	nop
  45be50:	cmp	w1, #0x4c
  45be54:	b.eq	45bf34 <nftw@plt+0x593b4>  // b.none
  45be58:	b.hi	45bee8 <nftw@plt+0x59368>  // b.pmore
  45be5c:	sub	w1, w1, #0x49
  45be60:	and	w1, w1, #0xff
  45be64:	cmp	w1, #0x1
  45be68:	b.hi	45bf28 <nftw@plt+0x593a8>  // b.pmore
  45be6c:	add	x3, x3, #0x1
  45be70:	str	x3, [x19, #24]
  45be74:	mov	x0, x19
  45be78:	bl	45be08 <nftw@plt+0x59288>
  45be7c:	cbz	x0, 45bf60 <nftw@plt+0x593e0>
  45be80:	ldp	w1, w2, [x19, #40]
  45be84:	cmp	w1, w2
  45be88:	b.ge	45bf40 <nftw@plt+0x593c0>  // b.tcont
  45be8c:	ldp	x3, x5, [x19, #24]
  45be90:	smull	x4, w1, w21
  45be94:	add	w1, w1, #0x1
  45be98:	add	x2, x5, x4
  45be9c:	str	wzr, [x2, #4]
  45bea0:	str	w1, [x19, #40]
  45bea4:	str	w20, [x5, x4]
  45bea8:	stp	x0, xzr, [x2, #8]
  45beac:	str	x2, [x24]
  45beb0:	add	x24, x2, #0x10
  45beb4:	ldrb	w1, [x3]
  45beb8:	cmp	w1, #0x45
  45bebc:	b.ne	45be50 <nftw@plt+0x592d0>  // b.any
  45bec0:	add	x3, x3, #0x1
  45bec4:	str	x3, [x19, #24]
  45bec8:	str	x23, [x19, #64]
  45becc:	ldp	x19, x20, [sp, #16]
  45bed0:	ldp	x21, x22, [sp, #32]
  45bed4:	ldp	x23, x24, [sp, #48]
  45bed8:	ldr	x25, [sp, #64]
  45bedc:	ldr	x0, [sp, #88]
  45bee0:	ldp	x29, x30, [sp], #96
  45bee4:	ret
  45bee8:	cmp	w1, #0x58
  45beec:	b.ne	45bf28 <nftw@plt+0x593a8>  // b.any
  45bef0:	add	x3, x3, #0x1
  45bef4:	ldr	w25, [x19, #76]
  45bef8:	str	x3, [x19, #24]
  45befc:	mov	x0, x19
  45bf00:	str	w22, [x19, #76]
  45bf04:	bl	45b3e0 <nftw@plt+0x58860>
  45bf08:	str	w25, [x19, #76]
  45bf0c:	ldr	x1, [x19, #24]
  45bf10:	ldrb	w2, [x1]
  45bf14:	cmp	w2, #0x45
  45bf18:	b.ne	45bf60 <nftw@plt+0x593e0>  // b.any
  45bf1c:	add	x1, x1, #0x1
  45bf20:	str	x1, [x19, #24]
  45bf24:	b	45be7c <nftw@plt+0x592fc>
  45bf28:	mov	x0, x19
  45bf2c:	bl	459438 <nftw@plt+0x568b8>
  45bf30:	b	45be7c <nftw@plt+0x592fc>
  45bf34:	mov	x0, x19
  45bf38:	bl	45d428 <nftw@plt+0x5a8a8>
  45bf3c:	b	45be7c <nftw@plt+0x592fc>
  45bf40:	str	xzr, [x24]
  45bf44:	mov	x0, #0x0                   	// #0
  45bf48:	ldp	x19, x20, [sp, #16]
  45bf4c:	ldp	x21, x22, [sp, #32]
  45bf50:	ldp	x23, x24, [sp, #48]
  45bf54:	ldr	x25, [sp, #64]
  45bf58:	ldp	x29, x30, [sp], #96
  45bf5c:	ret
  45bf60:	mov	x0, #0x0                   	// #0
  45bf64:	ldp	x19, x20, [sp, #16]
  45bf68:	ldp	x21, x22, [sp, #32]
  45bf6c:	ldp	x23, x24, [sp, #48]
  45bf70:	ldr	x25, [sp, #64]
  45bf74:	ldp	x29, x30, [sp], #96
  45bf78:	ret
  45bf7c:	add	x3, x3, #0x1
  45bf80:	mov	x2, #0x0                   	// #0
  45bf84:	ldp	x23, x24, [sp, #48]
  45bf88:	str	x3, [x0, #24]
  45bf8c:	ldp	x19, x20, [sp, #16]
  45bf90:	mov	w1, #0x2f                  	// #47
  45bf94:	ldp	x29, x30, [sp], #96
  45bf98:	mov	x3, #0x0                   	// #0
  45bf9c:	b	44c310 <nftw@plt+0x49790>
  45bfa0:	stp	x29, x30, [sp, #-32]!
  45bfa4:	mov	x29, sp
  45bfa8:	ldr	w3, [x0, #72]
  45bfac:	ldr	x2, [x0, #24]
  45bfb0:	stp	x19, x20, [sp, #16]
  45bfb4:	add	w1, w3, #0x14
  45bfb8:	str	w1, [x0, #72]
  45bfbc:	mov	x19, x0
  45bfc0:	ldrb	w1, [x2]
  45bfc4:	cmp	w1, #0x54
  45bfc8:	b.eq	45c268 <nftw@plt+0x596e8>  // b.none
  45bfcc:	cmp	w1, #0x47
  45bfd0:	b.ne	45c170 <nftw@plt+0x595f0>  // b.any
  45bfd4:	add	x1, x2, #0x1
  45bfd8:	str	x1, [x0, #24]
  45bfdc:	ldrb	w1, [x2, #1]
  45bfe0:	cbz	w1, 45c170 <nftw@plt+0x595f0>
  45bfe4:	add	x1, x2, #0x2
  45bfe8:	str	x1, [x0, #24]
  45bfec:	ldrb	w3, [x2, #1]
  45bff0:	cmp	w3, #0x54
  45bff4:	b.eq	45c41c <nftw@plt+0x5989c>  // b.none
  45bff8:	b.ls	45c180 <nftw@plt+0x59600>  // b.plast
  45bffc:	cmp	w3, #0x56
  45c000:	b.eq	45c3fc <nftw@plt+0x5987c>  // b.none
  45c004:	cmp	w3, #0x72
  45c008:	b.ne	45c170 <nftw@plt+0x595f0>  // b.any
  45c00c:	ldrb	w5, [x2, #2]
  45c010:	mov	w9, #0x0                   	// #0
  45c014:	cmp	w5, #0x6e
  45c018:	b.eq	45c5c4 <nftw@plt+0x59a44>  // b.none
  45c01c:	sub	w0, w5, #0x30
  45c020:	and	w0, w0, #0xff
  45c024:	cmp	w0, #0x9
  45c028:	b.hi	45c170 <nftw@plt+0x595f0>  // b.pmore
  45c02c:	mov	w8, #0xcccd                	// #52429
  45c030:	add	x1, x1, #0x1
  45c034:	mov	w0, #0x0                   	// #0
  45c038:	mov	w7, #0x7fffffff            	// #2147483647
  45c03c:	movk	w8, #0xcccc, lsl #16
  45c040:	b	45c058 <nftw@plt+0x594d8>
  45c044:	umull	x2, w2, w8
  45c048:	add	x1, x1, #0x1
  45c04c:	lsr	x2, x2, #35
  45c050:	cmp	w2, w0
  45c054:	b.lt	45c170 <nftw@plt+0x595f0>  // b.tstop
  45c058:	str	x1, [x19, #24]
  45c05c:	add	w0, w0, w0, lsl #2
  45c060:	ldrb	w4, [x1]
  45c064:	add	w6, w5, w0, lsl #1
  45c068:	sub	w0, w6, #0x30
  45c06c:	sub	w3, w4, #0x30
  45c070:	mov	w5, w4
  45c074:	sub	w2, w7, w3
  45c078:	and	w3, w3, #0xff
  45c07c:	cmp	w3, #0x9
  45c080:	b.ls	45c044 <nftw@plt+0x594c4>  // b.plast
  45c084:	cmp	w9, #0x0
  45c088:	ccmp	w0, #0x1, #0x4, eq  // eq = none
  45c08c:	b.le	45c170 <nftw@plt+0x595f0>
  45c090:	cbz	w4, 45c170 <nftw@plt+0x595f0>
  45c094:	add	x9, x1, #0x1
  45c098:	str	x9, [x19, #24]
  45c09c:	ldrb	w0, [x1]
  45c0a0:	cmp	w0, #0x5f
  45c0a4:	b.ne	45c170 <nftw@plt+0x595f0>  // b.any
  45c0a8:	sub	w8, w6, #0x31
  45c0ac:	mov	x2, #0x0                   	// #0
  45c0b0:	mov	w11, #0x18                  	// #24
  45c0b4:	mov	w10, #0x41                  	// #65
  45c0b8:	ldrb	w0, [x9]
  45c0bc:	cbz	w0, 45c170 <nftw@plt+0x595f0>
  45c0c0:	cmp	w0, #0x24
  45c0c4:	b.ne	45c63c <nftw@plt+0x59abc>  // b.any
  45c0c8:	ldrb	w0, [x9, #1]
  45c0cc:	cmp	w0, #0x53
  45c0d0:	b.eq	45c6bc <nftw@plt+0x59b3c>  // b.none
  45c0d4:	cmp	w0, #0x5f
  45c0d8:	b.eq	45c6ac <nftw@plt+0x59b2c>  // b.none
  45c0dc:	cmp	w0, #0x24
  45c0e0:	b.ne	45c170 <nftw@plt+0x595f0>  // b.any
  45c0e4:	ldp	w1, w3, [x19, #40]
  45c0e8:	ldr	x9, [x19, #24]
  45c0ec:	cmp	w1, w3
  45c0f0:	add	x9, x9, #0x2
  45c0f4:	b.ge	45c790 <nftw@plt+0x59c10>  // b.tcont
  45c0f8:	ldr	x5, [x19, #32]
  45c0fc:	smull	x4, w1, w11
  45c100:	add	w1, w1, #0x1
  45c104:	sub	w8, w8, #0x2
  45c108:	add	x3, x5, x4
  45c10c:	str	wzr, [x3, #4]
  45c110:	str	w1, [x19, #40]
  45c114:	str	w10, [x5, x4]
  45c118:	str	w0, [x3, #8]
  45c11c:	str	x9, [x19, #24]
  45c120:	cbz	x2, 45c6a4 <nftw@plt+0x59b24>
  45c124:	mov	x0, x19
  45c128:	mov	w1, #0x40                  	// #64
  45c12c:	bl	44c310 <nftw@plt+0x49790>
  45c130:	mov	x2, x0
  45c134:	cbz	x0, 45c170 <nftw@plt+0x595f0>
  45c138:	cmp	w8, #0x0
  45c13c:	b.gt	45c0b8 <nftw@plt+0x59538>
  45c140:	mov	x0, x19
  45c144:	mov	x3, #0x0                   	// #0
  45c148:	ldp	x19, x20, [sp, #16]
  45c14c:	mov	w1, #0x3f                  	// #63
  45c150:	ldp	x29, x30, [sp], #32
  45c154:	b	44c310 <nftw@plt+0x49790>
  45c158:	ldp	w3, w0, [x19, #40]
  45c15c:	cmp	w0, w3
  45c160:	b.gt	45c674 <nftw@plt+0x59af4>
  45c164:	ldr	x0, [x19, #24]
  45c168:	add	x1, x0, x1
  45c16c:	str	x1, [x19, #24]
  45c170:	mov	x0, #0x0                   	// #0
  45c174:	ldp	x19, x20, [sp, #16]
  45c178:	ldp	x29, x30, [sp], #32
  45c17c:	ret
  45c180:	cmp	w3, #0x41
  45c184:	b.eq	45c460 <nftw@plt+0x598e0>  // b.none
  45c188:	cmp	w3, #0x52
  45c18c:	b.ne	45c170 <nftw@plt+0x595f0>  // b.any
  45c190:	bl	45ca28 <nftw@plt+0x59ea8>
  45c194:	mov	x2, x0
  45c198:	ldp	w1, w0, [x19, #40]
  45c19c:	cmp	w1, w0
  45c1a0:	b.ge	45c600 <nftw@plt+0x59a80>  // b.tcont
  45c1a4:	ldp	x6, x0, [x19, #24]
  45c1a8:	mov	w3, #0x18                  	// #24
  45c1ac:	add	w5, w1, #0x1
  45c1b0:	mov	w4, #0x42                  	// #66
  45c1b4:	smull	x1, w1, w3
  45c1b8:	add	x3, x0, x1
  45c1bc:	str	wzr, [x3, #4]
  45c1c0:	str	w5, [x19, #40]
  45c1c4:	str	w4, [x0, x1]
  45c1c8:	ldrb	w1, [x6]
  45c1cc:	cmp	w1, #0x6e
  45c1d0:	b.eq	45c5d8 <nftw@plt+0x59a58>  // b.none
  45c1d4:	sub	w0, w1, #0x30
  45c1d8:	and	w0, w0, #0xff
  45c1dc:	cmp	w0, #0x9
  45c1e0:	b.hi	45c7d0 <nftw@plt+0x59c50>  // b.pmore
  45c1e4:	mov	w0, #0x0                   	// #0
  45c1e8:	mov	w9, #0xcccd                	// #52429
  45c1ec:	mov	w7, w1
  45c1f0:	add	x6, x6, #0x1
  45c1f4:	mov	w1, #0x0                   	// #0
  45c1f8:	mov	w8, #0x7fffffff            	// #2147483647
  45c1fc:	movk	w9, #0xcccc, lsl #16
  45c200:	b	45c214 <nftw@plt+0x59694>
  45c204:	umull	x4, w4, w9
  45c208:	lsr	x4, x4, #35
  45c20c:	cmp	w4, w1
  45c210:	b.lt	45c6b4 <nftw@plt+0x59b34>  // b.tstop
  45c214:	str	x6, [x19, #24]
  45c218:	add	w1, w1, w1, lsl #2
  45c21c:	add	x6, x6, #0x1
  45c220:	ldurb	w4, [x6, #-1]
  45c224:	add	w1, w7, w1, lsl #1
  45c228:	sub	w1, w1, #0x30
  45c22c:	sub	w5, w4, #0x30
  45c230:	mov	w7, w4
  45c234:	sub	w4, w8, w5
  45c238:	and	w5, w5, #0xff
  45c23c:	cmp	w5, #0x9
  45c240:	b.ls	45c204 <nftw@plt+0x59684>  // b.plast
  45c244:	cbz	w0, 45c24c <nftw@plt+0x596cc>
  45c248:	neg	w1, w1
  45c24c:	sxtw	x1, w1
  45c250:	str	x1, [x3, #8]
  45c254:	mov	x0, x19
  45c258:	mov	w1, #0x16                  	// #22
  45c25c:	ldp	x19, x20, [sp, #16]
  45c260:	ldp	x29, x30, [sp], #32
  45c264:	b	44c310 <nftw@plt+0x49790>
  45c268:	add	x1, x2, #0x1
  45c26c:	str	x1, [x0, #24]
  45c270:	ldrb	w1, [x2, #1]
  45c274:	cbz	w1, 45c170 <nftw@plt+0x595f0>
  45c278:	add	x1, x2, #0x2
  45c27c:	str	x1, [x0, #24]
  45c280:	ldrb	w1, [x2, #1]
  45c284:	cmp	w1, #0x53
  45c288:	b.eq	45c750 <nftw@plt+0x59bd0>  // b.none
  45c28c:	b.ls	45c2dc <nftw@plt+0x5975c>  // b.plast
  45c290:	cmp	w1, #0x63
  45c294:	b.eq	45c70c <nftw@plt+0x59b8c>  // b.none
  45c298:	b.ls	45c348 <nftw@plt+0x597c8>  // b.plast
  45c29c:	cmp	w1, #0x68
  45c2a0:	b.eq	45c4a4 <nftw@plt+0x59924>  // b.none
  45c2a4:	cmp	w1, #0x76
  45c2a8:	b.ne	45c170 <nftw@plt+0x595f0>  // b.any
  45c2ac:	bl	44cf48 <nftw@plt+0x4a3c8>
  45c2b0:	cbz	w0, 45c170 <nftw@plt+0x595f0>
  45c2b4:	mov	x0, x19
  45c2b8:	mov	w1, #0x0                   	// #0
  45c2bc:	bl	45c7f0 <nftw@plt+0x59c70>
  45c2c0:	mov	x2, x0
  45c2c4:	mov	x0, x19
  45c2c8:	mov	x3, #0x0                   	// #0
  45c2cc:	ldp	x19, x20, [sp, #16]
  45c2d0:	mov	w1, #0x10                  	// #16
  45c2d4:	ldp	x29, x30, [sp], #32
  45c2d8:	b	44c310 <nftw@plt+0x49790>
  45c2dc:	cmp	w1, #0x48
  45c2e0:	b.eq	45c770 <nftw@plt+0x59bf0>  // b.none
  45c2e4:	b.ls	45c318 <nftw@plt+0x59798>  // b.plast
  45c2e8:	cmp	w1, #0x49
  45c2ec:	b.eq	45c484 <nftw@plt+0x59904>  // b.none
  45c2f0:	cmp	w1, #0x4a
  45c2f4:	b.ne	45c170 <nftw@plt+0x595f0>  // b.any
  45c2f8:	bl	459438 <nftw@plt+0x568b8>
  45c2fc:	mov	x2, x0
  45c300:	mov	x0, x19
  45c304:	mov	x3, #0x0                   	// #0
  45c308:	ldp	x19, x20, [sp, #16]
  45c30c:	mov	w1, #0x12                  	// #18
  45c310:	ldp	x29, x30, [sp], #32
  45c314:	b	44c310 <nftw@plt+0x49790>
  45c318:	cmp	w1, #0x43
  45c31c:	b.eq	45c4fc <nftw@plt+0x5997c>  // b.none
  45c320:	cmp	w1, #0x46
  45c324:	b.ne	45c378 <nftw@plt+0x597f8>  // b.any
  45c328:	bl	459438 <nftw@plt+0x568b8>
  45c32c:	mov	x2, x0
  45c330:	mov	x0, x19
  45c334:	mov	x3, #0x0                   	// #0
  45c338:	ldp	x19, x20, [sp, #16]
  45c33c:	mov	w1, #0xe                   	// #14
  45c340:	ldp	x29, x30, [sp], #32
  45c344:	b	44c310 <nftw@plt+0x49790>
  45c348:	cmp	w1, #0x56
  45c34c:	b.eq	45c4d4 <nftw@plt+0x59954>  // b.none
  45c350:	cmp	w1, #0x57
  45c354:	b.ne	45c3cc <nftw@plt+0x5984c>  // b.any
  45c358:	bl	45ca28 <nftw@plt+0x59ea8>
  45c35c:	mov	x2, x0
  45c360:	mov	x0, x19
  45c364:	mov	x3, #0x0                   	// #0
  45c368:	ldp	x19, x20, [sp, #16]
  45c36c:	mov	w1, #0x15                  	// #21
  45c370:	ldp	x29, x30, [sp], #32
  45c374:	b	44c310 <nftw@plt+0x49790>
  45c378:	cmp	w1, #0x41
  45c37c:	b.ne	45c170 <nftw@plt+0x595f0>  // b.any
  45c380:	ldrb	w0, [x2, #2]
  45c384:	cmp	w0, #0x4c
  45c388:	b.eq	45c62c <nftw@plt+0x59aac>  // b.none
  45c38c:	b.hi	45c6c4 <nftw@plt+0x59b44>  // b.pmore
  45c390:	sub	w0, w0, #0x49
  45c394:	and	w0, w0, #0xff
  45c398:	cmp	w0, #0x1
  45c39c:	b.hi	45c7c0 <nftw@plt+0x59c40>  // b.pmore
  45c3a0:	add	x2, x2, #0x3
  45c3a4:	str	x2, [x19, #24]
  45c3a8:	mov	x0, x19
  45c3ac:	bl	45be08 <nftw@plt+0x59288>
  45c3b0:	mov	x2, x0
  45c3b4:	mov	x0, x19
  45c3b8:	mov	x3, #0x0                   	// #0
  45c3bc:	ldp	x19, x20, [sp, #16]
  45c3c0:	mov	w1, #0x30                  	// #48
  45c3c4:	ldp	x29, x30, [sp], #32
  45c3c8:	b	44c310 <nftw@plt+0x49790>
  45c3cc:	cmp	w1, #0x54
  45c3d0:	b.ne	45c170 <nftw@plt+0x595f0>  // b.any
  45c3d4:	add	w3, w3, #0xa
  45c3d8:	str	w3, [x0, #72]
  45c3dc:	bl	459438 <nftw@plt+0x568b8>
  45c3e0:	mov	x2, x0
  45c3e4:	mov	x0, x19
  45c3e8:	mov	x3, #0x0                   	// #0
  45c3ec:	ldp	x19, x20, [sp, #16]
  45c3f0:	mov	w1, #0xa                   	// #10
  45c3f4:	ldp	x29, x30, [sp], #32
  45c3f8:	b	44c310 <nftw@plt+0x49790>
  45c3fc:	bl	45ca28 <nftw@plt+0x59ea8>
  45c400:	mov	x2, x0
  45c404:	mov	x0, x19
  45c408:	mov	x3, #0x0                   	// #0
  45c40c:	ldp	x19, x20, [sp, #16]
  45c410:	mov	w1, #0x13                  	// #19
  45c414:	ldp	x29, x30, [sp], #32
  45c418:	b	44c310 <nftw@plt+0x49790>
  45c41c:	ldrb	w1, [x2, #2]
  45c420:	cbz	w1, 45c438 <nftw@plt+0x598b8>
  45c424:	add	x1, x2, #0x3
  45c428:	str	x1, [x0, #24]
  45c42c:	ldrb	w1, [x2, #2]
  45c430:	cmp	w1, #0x6e
  45c434:	b.eq	45c608 <nftw@plt+0x59a88>  // b.none
  45c438:	mov	x0, x19
  45c43c:	mov	w1, #0x0                   	// #0
  45c440:	bl	45c7f0 <nftw@plt+0x59c70>
  45c444:	mov	x2, x0
  45c448:	mov	x0, x19
  45c44c:	mov	x3, #0x0                   	// #0
  45c450:	ldp	x19, x20, [sp, #16]
  45c454:	mov	w1, #0x49                  	// #73
  45c458:	ldp	x29, x30, [sp], #32
  45c45c:	b	44c310 <nftw@plt+0x49790>
  45c460:	mov	w1, #0x0                   	// #0
  45c464:	bl	45c7f0 <nftw@plt+0x59c70>
  45c468:	mov	x2, x0
  45c46c:	mov	x0, x19
  45c470:	ldp	x19, x20, [sp, #16]
  45c474:	mov	x3, #0x0                   	// #0
  45c478:	ldp	x29, x30, [sp], #32
  45c47c:	mov	w1, #0x17                  	// #23
  45c480:	b	44c310 <nftw@plt+0x49790>
  45c484:	bl	459438 <nftw@plt+0x568b8>
  45c488:	mov	x2, x0
  45c48c:	mov	x0, x19
  45c490:	mov	x3, #0x0                   	// #0
  45c494:	ldp	x19, x20, [sp, #16]
  45c498:	mov	w1, #0xc                   	// #12
  45c49c:	ldp	x29, x30, [sp], #32
  45c4a0:	b	44c310 <nftw@plt+0x49790>
  45c4a4:	bl	44cf48 <nftw@plt+0x4a3c8>
  45c4a8:	cbz	w0, 45c170 <nftw@plt+0x595f0>
  45c4ac:	mov	x0, x19
  45c4b0:	mov	w1, #0x0                   	// #0
  45c4b4:	bl	45c7f0 <nftw@plt+0x59c70>
  45c4b8:	mov	x2, x0
  45c4bc:	mov	x0, x19
  45c4c0:	mov	x3, #0x0                   	// #0
  45c4c4:	ldp	x19, x20, [sp, #16]
  45c4c8:	mov	w1, #0xf                   	// #15
  45c4cc:	ldp	x29, x30, [sp], #32
  45c4d0:	b	44c310 <nftw@plt+0x49790>
  45c4d4:	add	w3, w3, #0xf
  45c4d8:	str	w3, [x0, #72]
  45c4dc:	bl	459438 <nftw@plt+0x568b8>
  45c4e0:	mov	x2, x0
  45c4e4:	mov	x0, x19
  45c4e8:	mov	x3, #0x0                   	// #0
  45c4ec:	ldp	x19, x20, [sp, #16]
  45c4f0:	mov	w1, #0x9                   	// #9
  45c4f4:	ldp	x29, x30, [sp], #32
  45c4f8:	b	44c310 <nftw@plt+0x49790>
  45c4fc:	bl	459438 <nftw@plt+0x568b8>
  45c500:	mov	x20, x0
  45c504:	ldr	x5, [x19, #24]
  45c508:	ldrb	w6, [x5]
  45c50c:	cmp	w6, #0x6e
  45c510:	b.eq	45c798 <nftw@plt+0x59c18>  // b.none
  45c514:	sub	w0, w6, #0x30
  45c518:	and	w0, w0, #0xff
  45c51c:	cmp	w0, #0x9
  45c520:	b.hi	45c584 <nftw@plt+0x59a04>  // b.pmore
  45c524:	mov	w0, #0x0                   	// #0
  45c528:	mov	w9, #0xcccd                	// #52429
  45c52c:	mov	w1, #0x0                   	// #0
  45c530:	mov	w8, #0x7fffffff            	// #2147483647
  45c534:	movk	w9, #0xcccc, lsl #16
  45c538:	b	45c54c <nftw@plt+0x599cc>
  45c53c:	umull	x2, w2, w9
  45c540:	lsr	x2, x2, #35
  45c544:	cmp	w2, w1
  45c548:	b.lt	45c170 <nftw@plt+0x595f0>  // b.tstop
  45c54c:	add	x5, x5, #0x1
  45c550:	add	w1, w1, w1, lsl #2
  45c554:	str	x5, [x19, #24]
  45c558:	add	w7, w6, w1, lsl #1
  45c55c:	ldrb	w6, [x5]
  45c560:	sub	w1, w7, #0x30
  45c564:	sub	w4, w6, #0x30
  45c568:	sub	w2, w8, w4
  45c56c:	and	w4, w4, #0xff
  45c570:	cmp	w4, #0x9
  45c574:	b.ls	45c53c <nftw@plt+0x599bc>  // b.plast
  45c578:	cbz	w0, 45c584 <nftw@plt+0x59a04>
  45c57c:	cmp	w7, #0x30
  45c580:	b.ne	45c170 <nftw@plt+0x595f0>  // b.any
  45c584:	cmp	w6, #0x5f
  45c588:	b.ne	45c170 <nftw@plt+0x595f0>  // b.any
  45c58c:	add	x5, x5, #0x1
  45c590:	str	x5, [x19, #24]
  45c594:	mov	x0, x19
  45c598:	bl	459438 <nftw@plt+0x568b8>
  45c59c:	mov	x2, x0
  45c5a0:	ldr	w1, [x19, #72]
  45c5a4:	mov	x3, x20
  45c5a8:	mov	x0, x19
  45c5ac:	add	w1, w1, #0x5
  45c5b0:	str	w1, [x19, #72]
  45c5b4:	ldp	x19, x20, [sp, #16]
  45c5b8:	mov	w1, #0xb                   	// #11
  45c5bc:	ldp	x29, x30, [sp], #32
  45c5c0:	b	44c310 <nftw@plt+0x49790>
  45c5c4:	add	x1, x2, #0x3
  45c5c8:	str	x1, [x0, #24]
  45c5cc:	mov	w9, #0x1                   	// #1
  45c5d0:	ldrb	w5, [x2, #3]
  45c5d4:	b	45c01c <nftw@plt+0x5949c>
  45c5d8:	add	x4, x6, #0x1
  45c5dc:	str	x4, [x19, #24]
  45c5e0:	ldrb	w1, [x6, #1]
  45c5e4:	sub	w0, w1, #0x30
  45c5e8:	and	w0, w0, #0xff
  45c5ec:	cmp	w0, #0x9
  45c5f0:	b.hi	45c7e0 <nftw@plt+0x59c60>  // b.pmore
  45c5f4:	mov	x6, x4
  45c5f8:	mov	w0, #0x1                   	// #1
  45c5fc:	b	45c1e8 <nftw@plt+0x59668>
  45c600:	mov	x3, #0x0                   	// #0
  45c604:	b	45c254 <nftw@plt+0x596d4>
  45c608:	mov	w1, #0x0                   	// #0
  45c60c:	bl	45c7f0 <nftw@plt+0x59c70>
  45c610:	mov	x2, x0
  45c614:	mov	x0, x19
  45c618:	ldp	x19, x20, [sp, #16]
  45c61c:	mov	x3, #0x0                   	// #0
  45c620:	ldp	x29, x30, [sp], #32
  45c624:	mov	w1, #0x4a                  	// #74
  45c628:	b	44c310 <nftw@plt+0x49790>
  45c62c:	mov	x0, x19
  45c630:	bl	45d428 <nftw@plt+0x5a8a8>
  45c634:	mov	x2, x0
  45c638:	b	45c3b4 <nftw@plt+0x59834>
  45c63c:	mov	x1, #0x1                   	// #1
  45c640:	b	45c648 <nftw@plt+0x59ac8>
  45c644:	mov	x1, x4
  45c648:	cmp	w8, w1
  45c64c:	mov	w5, w1
  45c650:	b.le	45c158 <nftw@plt+0x595d8>
  45c654:	ldrb	w3, [x9, x1]
  45c658:	add	x4, x1, #0x1
  45c65c:	cmp	w3, #0x24
  45c660:	ccmp	w3, #0x0, #0x4, ne  // ne = any
  45c664:	b.ne	45c644 <nftw@plt+0x59ac4>  // b.any
  45c668:	ldp	w3, w0, [x19, #40]
  45c66c:	cmp	w3, w0
  45c670:	b.ge	45c164 <nftw@plt+0x595e4>  // b.tcont
  45c674:	ldr	x4, [x19, #32]
  45c678:	add	w0, w3, #0x1
  45c67c:	sub	w8, w8, w5
  45c680:	smaddl	x3, w3, w11, x4
  45c684:	str	wzr, [x3, #4]
  45c688:	str	w0, [x19, #40]
  45c68c:	stp	xzr, x9, [x3]
  45c690:	ldr	x9, [x19, #24]
  45c694:	str	w5, [x3, #16]
  45c698:	add	x9, x9, x1
  45c69c:	str	x9, [x19, #24]
  45c6a0:	b	45c120 <nftw@plt+0x595a0>
  45c6a4:	mov	x2, x3
  45c6a8:	b	45c138 <nftw@plt+0x595b8>
  45c6ac:	mov	w0, #0x2e                  	// #46
  45c6b0:	b	45c0e4 <nftw@plt+0x59564>
  45c6b4:	mov	x1, #0xffffffffffffffff    	// #-1
  45c6b8:	b	45c250 <nftw@plt+0x596d0>
  45c6bc:	mov	w0, #0x2f                  	// #47
  45c6c0:	b	45c0e4 <nftw@plt+0x59564>
  45c6c4:	cmp	w0, #0x58
  45c6c8:	b.ne	45c7c0 <nftw@plt+0x59c40>  // b.any
  45c6cc:	add	x2, x2, #0x3
  45c6d0:	ldr	w20, [x19, #76]
  45c6d4:	mov	w1, #0x1                   	// #1
  45c6d8:	str	x2, [x19, #24]
  45c6dc:	str	w1, [x19, #76]
  45c6e0:	mov	x0, x19
  45c6e4:	bl	45b3e0 <nftw@plt+0x58860>
  45c6e8:	str	w20, [x19, #76]
  45c6ec:	ldr	x1, [x19, #24]
  45c6f0:	mov	x2, x0
  45c6f4:	ldrb	w0, [x1]
  45c6f8:	cmp	w0, #0x45
  45c6fc:	b.ne	45c7d8 <nftw@plt+0x59c58>  // b.any
  45c700:	add	x1, x1, #0x1
  45c704:	str	x1, [x19, #24]
  45c708:	b	45c3b4 <nftw@plt+0x59834>
  45c70c:	mov	w1, #0x0                   	// #0
  45c710:	bl	44cf48 <nftw@plt+0x4a3c8>
  45c714:	cbz	w0, 45c170 <nftw@plt+0x595f0>
  45c718:	mov	x0, x19
  45c71c:	mov	w1, #0x0                   	// #0
  45c720:	bl	44cf48 <nftw@plt+0x4a3c8>
  45c724:	cbz	w0, 45c170 <nftw@plt+0x595f0>
  45c728:	mov	x0, x19
  45c72c:	mov	w1, #0x0                   	// #0
  45c730:	bl	45c7f0 <nftw@plt+0x59c70>
  45c734:	mov	x2, x0
  45c738:	mov	x0, x19
  45c73c:	mov	x3, #0x0                   	// #0
  45c740:	ldp	x19, x20, [sp, #16]
  45c744:	mov	w1, #0x11                  	// #17
  45c748:	ldp	x29, x30, [sp], #32
  45c74c:	b	44c310 <nftw@plt+0x49790>
  45c750:	bl	459438 <nftw@plt+0x568b8>
  45c754:	mov	x2, x0
  45c758:	mov	x0, x19
  45c75c:	mov	x3, #0x0                   	// #0
  45c760:	ldp	x19, x20, [sp, #16]
  45c764:	mov	w1, #0xd                   	// #13
  45c768:	ldp	x29, x30, [sp], #32
  45c76c:	b	44c310 <nftw@plt+0x49790>
  45c770:	bl	45ca28 <nftw@plt+0x59ea8>
  45c774:	mov	x2, x0
  45c778:	mov	x0, x19
  45c77c:	mov	x3, #0x0                   	// #0
  45c780:	ldp	x19, x20, [sp, #16]
  45c784:	mov	w1, #0x14                  	// #20
  45c788:	ldp	x29, x30, [sp], #32
  45c78c:	b	44c310 <nftw@plt+0x49790>
  45c790:	str	x9, [x19, #24]
  45c794:	b	45c170 <nftw@plt+0x595f0>
  45c798:	add	x1, x5, #0x1
  45c79c:	str	x1, [x19, #24]
  45c7a0:	ldrb	w6, [x5, #1]
  45c7a4:	mov	x5, x1
  45c7a8:	sub	w0, w6, #0x30
  45c7ac:	and	w0, w0, #0xff
  45c7b0:	cmp	w0, #0x9
  45c7b4:	b.hi	45c584 <nftw@plt+0x59a04>  // b.pmore
  45c7b8:	mov	w0, #0x1                   	// #1
  45c7bc:	b	45c528 <nftw@plt+0x599a8>
  45c7c0:	mov	x0, x19
  45c7c4:	bl	459438 <nftw@plt+0x568b8>
  45c7c8:	mov	x2, x0
  45c7cc:	b	45c3b4 <nftw@plt+0x59834>
  45c7d0:	mov	x1, #0x0                   	// #0
  45c7d4:	b	45c250 <nftw@plt+0x596d0>
  45c7d8:	mov	x2, #0x0                   	// #0
  45c7dc:	b	45c3b4 <nftw@plt+0x59834>
  45c7e0:	mov	w1, #0x0                   	// #0
  45c7e4:	neg	w1, w1
  45c7e8:	b	45c24c <nftw@plt+0x596cc>
  45c7ec:	nop
  45c7f0:	ldr	x2, [x0, #24]
  45c7f4:	mov	w3, #0x54                  	// #84
  45c7f8:	ldrb	w2, [x2]
  45c7fc:	cmp	w2, #0x47
  45c800:	ccmp	w2, w3, #0x4, ne  // ne = any
  45c804:	b.ne	45c80c <nftw@plt+0x59c8c>  // b.any
  45c808:	b	45bfa0 <nftw@plt+0x59420>
  45c80c:	stp	x29, x30, [sp, #-48]!
  45c810:	mov	x29, sp
  45c814:	stp	x19, x20, [sp, #16]
  45c818:	mov	x19, x0
  45c81c:	mov	w20, w1
  45c820:	stp	x21, x22, [sp, #32]
  45c824:	bl	45ca28 <nftw@plt+0x59ea8>
  45c828:	mov	x21, x0
  45c82c:	cbz	x0, 45c8e8 <nftw@plt+0x59d68>
  45c830:	cbz	w20, 45c880 <nftw@plt+0x59d00>
  45c834:	ldr	w0, [x19, #16]
  45c838:	tbnz	w0, #0, 45c880 <nftw@plt+0x59d00>
  45c83c:	mov	x0, #0x1f                  	// #31
  45c840:	mov	x2, #0x1                   	// #1
  45c844:	movk	x0, #0x1a, lsl #48
  45c848:	ldr	w3, [x21]
  45c84c:	sub	w1, w3, #0x1c
  45c850:	cmp	w1, #0x34
  45c854:	b.hi	45c864 <nftw@plt+0x59ce4>  // b.pmore
  45c858:	lsl	x1, x2, x1
  45c85c:	tst	x1, x0
  45c860:	b.ne	45c998 <nftw@plt+0x59e18>  // b.any
  45c864:	cmp	w3, #0x2
  45c868:	b.eq	45c9a0 <nftw@plt+0x59e20>  // b.none
  45c86c:	mov	x0, x21
  45c870:	ldp	x19, x20, [sp, #16]
  45c874:	ldp	x21, x22, [sp, #32]
  45c878:	ldp	x29, x30, [sp], #48
  45c87c:	ret
  45c880:	ldr	x5, [x19, #24]
  45c884:	ldrb	w1, [x5]
  45c888:	cmp	w1, #0x45
  45c88c:	ccmp	w1, #0x0, #0x4, ne  // ne = any
  45c890:	b.eq	45c86c <nftw@plt+0x59cec>  // b.none
  45c894:	mov	x0, #0x1f                  	// #31
  45c898:	mov	x22, x21
  45c89c:	mov	x2, #0x1                   	// #1
  45c8a0:	movk	x0, #0x1a, lsl #48
  45c8a4:	ldr	w4, [x22]
  45c8a8:	cmp	w4, #0x4
  45c8ac:	b.eq	45c9e8 <nftw@plt+0x59e68>  // b.none
  45c8b0:	sub	w3, w4, #0x1c
  45c8b4:	b.hi	45c978 <nftw@plt+0x59df8>  // b.pmore
  45c8b8:	cmp	w4, #0x2
  45c8bc:	b.ne	45c908 <nftw@plt+0x59d88>  // b.any
  45c8c0:	ldr	x22, [x22, #16]
  45c8c4:	cbnz	x22, 45c8a4 <nftw@plt+0x59d24>
  45c8c8:	cmp	w1, #0x4a
  45c8cc:	b.ne	45c914 <nftw@plt+0x59d94>  // b.any
  45c8d0:	add	x5, x5, #0x1
  45c8d4:	str	x5, [x19, #24]
  45c8d8:	mov	x0, x19
  45c8dc:	bl	459438 <nftw@plt+0x568b8>
  45c8e0:	mov	x22, x0
  45c8e4:	cbnz	x0, 45c914 <nftw@plt+0x59d94>
  45c8e8:	mov	x21, #0x0                   	// #0
  45c8ec:	mov	x0, x21
  45c8f0:	ldp	x19, x20, [sp, #16]
  45c8f4:	ldp	x21, x22, [sp, #32]
  45c8f8:	ldp	x29, x30, [sp], #48
  45c8fc:	ret
  45c900:	cmp	w0, #0x35
  45c904:	b.ne	45ca18 <nftw@plt+0x59e98>  // b.any
  45c908:	cmp	w1, #0x4a
  45c90c:	mov	x22, #0x0                   	// #0
  45c910:	b.eq	45c8d0 <nftw@plt+0x59d50>  // b.none
  45c914:	mov	x0, x19
  45c918:	bl	45a238 <nftw@plt+0x576b8>
  45c91c:	mov	x3, x0
  45c920:	cbz	x0, 45c8e8 <nftw@plt+0x59d68>
  45c924:	mov	x2, x22
  45c928:	mov	x0, x19
  45c92c:	mov	w1, #0x29                  	// #41
  45c930:	bl	44c310 <nftw@plt+0x49790>
  45c934:	mov	x3, x0
  45c938:	cbz	x0, 45c8e8 <nftw@plt+0x59d68>
  45c93c:	cbnz	w20, 45c95c <nftw@plt+0x59ddc>
  45c940:	ldr	w0, [x21]
  45c944:	cmp	w0, #0x2
  45c948:	b.ne	45c95c <nftw@plt+0x59ddc>  // b.any
  45c94c:	ldr	w0, [x3]
  45c950:	cmp	w0, #0x29
  45c954:	b.ne	45c95c <nftw@plt+0x59ddc>  // b.any
  45c958:	str	xzr, [x3, #8]
  45c95c:	mov	x2, x21
  45c960:	mov	x0, x19
  45c964:	ldp	x19, x20, [sp, #16]
  45c968:	mov	w1, #0x3                   	// #3
  45c96c:	ldp	x21, x22, [sp, #32]
  45c970:	ldp	x29, x30, [sp], #48
  45c974:	b	44c310 <nftw@plt+0x49790>
  45c978:	cmp	w3, #0x34
  45c97c:	b.hi	45c908 <nftw@plt+0x59d88>  // b.pmore
  45c980:	lsl	x3, x2, x3
  45c984:	tst	x3, x0
  45c988:	b.eq	45c908 <nftw@plt+0x59d88>  // b.none
  45c98c:	ldr	x22, [x22, #8]
  45c990:	cbnz	x22, 45c8a4 <nftw@plt+0x59d24>
  45c994:	b	45c8c8 <nftw@plt+0x59d48>
  45c998:	ldr	x21, [x21, #8]
  45c99c:	b	45c848 <nftw@plt+0x59cc8>
  45c9a0:	ldr	x3, [x21, #16]
  45c9a4:	mov	x0, #0x1f                  	// #31
  45c9a8:	mov	x2, #0x1                   	// #1
  45c9ac:	movk	x0, #0x1a, lsl #48
  45c9b0:	ldr	w1, [x3]
  45c9b4:	sub	w1, w1, #0x1c
  45c9b8:	cmp	w1, #0x34
  45c9bc:	b.hi	45c86c <nftw@plt+0x59cec>  // b.pmore
  45c9c0:	lsl	x1, x2, x1
  45c9c4:	tst	x1, x0
  45c9c8:	b.eq	45c86c <nftw@plt+0x59cec>  // b.none
  45c9cc:	ldr	x3, [x3, #8]
  45c9d0:	str	x3, [x21, #16]
  45c9d4:	ldr	w1, [x3]
  45c9d8:	sub	w1, w1, #0x1c
  45c9dc:	cmp	w1, #0x34
  45c9e0:	b.ls	45c9c0 <nftw@plt+0x59e40>  // b.plast
  45c9e4:	b	45c86c <nftw@plt+0x59cec>
  45c9e8:	ldr	x2, [x22, #8]
  45c9ec:	cbz	x2, 45ca18 <nftw@plt+0x59e98>
  45c9f0:	ldr	w0, [x2]
  45c9f4:	sub	w3, w0, #0x1
  45c9f8:	cmp	w0, #0x8
  45c9fc:	b.hi	45c900 <nftw@plt+0x59d80>  // b.pmore
  45ca00:	cmp	w0, #0x6
  45ca04:	b.hi	45c908 <nftw@plt+0x59d88>  // b.pmore
  45ca08:	cmp	w3, #0x1
  45ca0c:	b.hi	45ca18 <nftw@plt+0x59e98>  // b.pmore
  45ca10:	ldr	x2, [x2, #16]
  45ca14:	cbnz	x2, 45c9f0 <nftw@plt+0x59e70>
  45ca18:	cmp	w1, #0x4a
  45ca1c:	b.ne	45c8d8 <nftw@plt+0x59d58>  // b.any
  45ca20:	b	45c8d0 <nftw@plt+0x59d50>
  45ca24:	nop
  45ca28:	stp	x29, x30, [sp, #-112]!
  45ca2c:	mov	x29, sp
  45ca30:	ldr	x2, [x0, #24]
  45ca34:	stp	x19, x20, [sp, #16]
  45ca38:	ldrb	w1, [x2]
  45ca3c:	cmp	w1, #0x55
  45ca40:	b.eq	45cc40 <nftw@plt+0x5a0c0>  // b.none
  45ca44:	mov	x19, x0
  45ca48:	b.hi	45caf8 <nftw@plt+0x59f78>  // b.pmore
  45ca4c:	cmp	w1, #0x4e
  45ca50:	b.eq	45cc58 <nftw@plt+0x5a0d8>  // b.none
  45ca54:	cmp	w1, #0x53
  45ca58:	b.ne	45cbe8 <nftw@plt+0x5a068>  // b.any
  45ca5c:	ldrb	w1, [x2, #1]
  45ca60:	cmp	w1, #0x74
  45ca64:	b.ne	45cb88 <nftw@plt+0x5a008>  // b.any
  45ca68:	ldp	w0, w1, [x0, #40]
  45ca6c:	add	x2, x2, #0x2
  45ca70:	str	x2, [x19, #24]
  45ca74:	cmp	w0, w1
  45ca78:	b.ge	45cf78 <nftw@plt+0x5a3f8>  // b.tcont
  45ca7c:	mov	w3, #0x18                  	// #24
  45ca80:	add	w1, w0, #0x1
  45ca84:	ldr	x2, [x19, #32]
  45ca88:	smull	x0, w0, w3
  45ca8c:	str	w1, [x19, #40]
  45ca90:	mov	w3, #0x3                   	// #3
  45ca94:	add	x20, x2, x0
  45ca98:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x1ebb8>
  45ca9c:	add	x1, x1, #0xf40
  45caa0:	str	xzr, [x2, x0]
  45caa4:	str	x1, [x20, #8]
  45caa8:	str	w3, [x20, #16]
  45caac:	mov	x0, x19
  45cab0:	bl	45a540 <nftw@plt+0x579c0>
  45cab4:	mov	x2, x20
  45cab8:	mov	x3, x0
  45cabc:	mov	w1, #0x1                   	// #1
  45cac0:	mov	x0, x19
  45cac4:	bl	44c310 <nftw@plt+0x49790>
  45cac8:	mov	x20, x0
  45cacc:	ldr	w3, [x19, #72]
  45cad0:	ldr	x1, [x19, #24]
  45cad4:	add	w3, w3, #0x3
  45cad8:	str	w3, [x19, #72]
  45cadc:	ldrb	w0, [x1]
  45cae0:	cmp	w0, #0x49
  45cae4:	b.eq	45cf24 <nftw@plt+0x5a3a4>  // b.none
  45cae8:	mov	x0, x20
  45caec:	ldp	x19, x20, [sp, #16]
  45caf0:	ldp	x29, x30, [sp], #112
  45caf4:	ret
  45caf8:	cmp	w1, #0x5a
  45cafc:	b.ne	45cbe8 <nftw@plt+0x5a068>  // b.any
  45cb00:	add	x2, x2, #0x1
  45cb04:	str	x2, [x0, #24]
  45cb08:	mov	w1, #0x0                   	// #0
  45cb0c:	bl	45c7f0 <nftw@plt+0x59c70>
  45cb10:	mov	x20, x0
  45cb14:	cbz	x0, 45cbe0 <nftw@plt+0x5a060>
  45cb18:	ldr	x0, [x19, #24]
  45cb1c:	ldrb	w1, [x0]
  45cb20:	cmp	w1, #0x45
  45cb24:	b.ne	45cbe0 <nftw@plt+0x5a060>  // b.any
  45cb28:	add	x1, x0, #0x1
  45cb2c:	str	x1, [x19, #24]
  45cb30:	ldrb	w1, [x0, #1]
  45cb34:	cmp	w1, #0x73
  45cb38:	b.eq	45cfa0 <nftw@plt+0x5a420>  // b.none
  45cb3c:	cmp	w1, #0x64
  45cb40:	b.eq	45ce34 <nftw@plt+0x5a2b4>  // b.none
  45cb44:	mov	x0, x19
  45cb48:	bl	45ca28 <nftw@plt+0x59ea8>
  45cb4c:	mov	x3, x0
  45cb50:	cbz	x0, 45cb64 <nftw@plt+0x59fe4>
  45cb54:	ldr	w0, [x0]
  45cb58:	sub	w0, w0, #0x46
  45cb5c:	tst	w0, #0xfffffffd
  45cb60:	b.ne	45cff4 <nftw@plt+0x5a474>  // b.any
  45cb64:	ldr	w0, [x20]
  45cb68:	cmp	w0, #0x3
  45cb6c:	b.eq	45cf60 <nftw@plt+0x5a3e0>  // b.none
  45cb70:	mov	x2, x20
  45cb74:	mov	x0, x19
  45cb78:	mov	w1, #0x2                   	// #2
  45cb7c:	bl	44c310 <nftw@plt+0x49790>
  45cb80:	mov	x20, x0
  45cb84:	b	45cae8 <nftw@plt+0x59f68>
  45cb88:	mov	w1, #0x0                   	// #0
  45cb8c:	bl	44c960 <nftw@plt+0x49de0>
  45cb90:	ldr	x1, [x19, #24]
  45cb94:	mov	x20, x0
  45cb98:	ldrb	w0, [x1]
  45cb9c:	cmp	w0, #0x49
  45cba0:	b.ne	45cae8 <nftw@plt+0x59f68>  // b.any
  45cba4:	add	x1, x1, #0x1
  45cba8:	str	x1, [x19, #24]
  45cbac:	mov	x0, x19
  45cbb0:	bl	45be08 <nftw@plt+0x59288>
  45cbb4:	mov	x3, x0
  45cbb8:	mov	x2, x20
  45cbbc:	mov	x0, x19
  45cbc0:	mov	w1, #0x4                   	// #4
  45cbc4:	bl	44c310 <nftw@plt+0x49790>
  45cbc8:	mov	x20, x0
  45cbcc:	b	45cae8 <nftw@plt+0x59f68>
  45cbd0:	mov	x0, x19
  45cbd4:	bl	44cd28 <nftw@plt+0x4a1a8>
  45cbd8:	cbnz	w0, 45ce70 <nftw@plt+0x5a2f0>
  45cbdc:	ldp	x21, x22, [sp, #32]
  45cbe0:	mov	x20, #0x0                   	// #0
  45cbe4:	b	45cae8 <nftw@plt+0x59f68>
  45cbe8:	mov	x0, x19
  45cbec:	bl	45a540 <nftw@plt+0x579c0>
  45cbf0:	ldr	x1, [x19, #24]
  45cbf4:	mov	x20, x0
  45cbf8:	ldrb	w0, [x1]
  45cbfc:	cmp	w0, #0x49
  45cc00:	b.ne	45cae8 <nftw@plt+0x59f68>  // b.any
  45cc04:	cbz	x20, 45cbe0 <nftw@plt+0x5a060>
  45cc08:	ldp	w2, w0, [x19, #56]
  45cc0c:	cmp	w2, w0
  45cc10:	b.ge	45cbe0 <nftw@plt+0x5a060>  // b.tcont
  45cc14:	ldr	x4, [x19, #48]
  45cc18:	add	w0, w2, #0x1
  45cc1c:	mov	x3, #0x0                   	// #0
  45cc20:	str	x20, [x4, w2, sxtw #3]
  45cc24:	str	w0, [x19, #56]
  45cc28:	ldrb	w2, [x1]
  45cc2c:	sub	w2, w2, #0x49
  45cc30:	and	w2, w2, #0xff
  45cc34:	cmp	w2, #0x1
  45cc38:	b.ls	45cba4 <nftw@plt+0x5a024>  // b.plast
  45cc3c:	b	45cbb8 <nftw@plt+0x5a038>
  45cc40:	bl	45a540 <nftw@plt+0x579c0>
  45cc44:	mov	x20, x0
  45cc48:	mov	x0, x20
  45cc4c:	ldp	x19, x20, [sp, #16]
  45cc50:	ldp	x29, x30, [sp], #112
  45cc54:	ret
  45cc58:	stp	x21, x22, [sp, #32]
  45cc5c:	add	x2, x2, #0x1
  45cc60:	add	x1, sp, #0x68
  45cc64:	str	x2, [x0, #24]
  45cc68:	mov	w2, #0x1                   	// #1
  45cc6c:	bl	45bb10 <nftw@plt+0x58f90>
  45cc70:	mov	x22, x0
  45cc74:	cbz	x0, 45cf18 <nftw@plt+0x5a398>
  45cc78:	ldr	x3, [x19, #24]
  45cc7c:	stp	x23, x24, [sp, #48]
  45cc80:	mov	w0, #0x4f                  	// #79
  45cc84:	mov	x23, #0x0                   	// #0
  45cc88:	ldrb	w20, [x3]
  45cc8c:	cmp	w20, #0x52
  45cc90:	ccmp	w20, w0, #0x4, ne  // ne = any
  45cc94:	b.eq	45cdec <nftw@plt+0x5a26c>  // b.none
  45cc98:	cbz	w20, 45cd54 <nftw@plt+0x5a1d4>
  45cc9c:	mov	x21, #0x0                   	// #0
  45cca0:	mov	w24, #0x4c                  	// #76
  45cca4:	stp	x25, x26, [sp, #64]
  45cca8:	mov	w25, #0x55                  	// #85
  45ccac:	cmp	w20, #0x44
  45ccb0:	b.eq	45cd68 <nftw@plt+0x5a1e8>  // b.none
  45ccb4:	sub	w1, w20, #0x30
  45ccb8:	sub	w0, w20, #0x61
  45ccbc:	and	w1, w1, #0xff
  45ccc0:	and	w0, w0, #0xff
  45ccc4:	cmp	w1, #0x9
  45ccc8:	mov	x26, x21
  45cccc:	ccmp	w0, #0x19, #0x0, hi  // hi = pmore
  45ccd0:	b.ls	45cce4 <nftw@plt+0x5a164>  // b.plast
  45ccd4:	cmp	w20, #0x43
  45ccd8:	ccmp	w20, w25, #0x4, ne  // ne = any
  45ccdc:	ccmp	w20, w24, #0x4, ne  // ne = any
  45cce0:	b.ne	45cdb4 <nftw@plt+0x5a234>  // b.any
  45cce4:	mov	x0, x19
  45cce8:	bl	45a540 <nftw@plt+0x579c0>
  45ccec:	mov	x21, x0
  45ccf0:	cbz	x26, 45cd0c <nftw@plt+0x5a18c>
  45ccf4:	mov	w1, #0x1                   	// #1
  45ccf8:	mov	x3, x21
  45ccfc:	mov	x2, x26
  45cd00:	mov	x0, x19
  45cd04:	bl	44c310 <nftw@plt+0x49790>
  45cd08:	mov	x21, x0
  45cd0c:	cmp	w20, #0x53
  45cd10:	ldr	x3, [x19, #24]
  45cd14:	b.eq	45cd44 <nftw@plt+0x5a1c4>  // b.none
  45cd18:	ldrb	w20, [x3]
  45cd1c:	cmp	w20, #0x45
  45cd20:	b.eq	45cd9c <nftw@plt+0x5a21c>  // b.none
  45cd24:	cbz	x21, 45cd50 <nftw@plt+0x5a1d0>
  45cd28:	ldp	w0, w1, [x19, #56]
  45cd2c:	cmp	w0, w1
  45cd30:	b.ge	45cd50 <nftw@plt+0x5a1d0>  // b.tcont
  45cd34:	ldr	x2, [x19, #48]
  45cd38:	add	w1, w0, #0x1
  45cd3c:	str	x21, [x2, w0, sxtw #3]
  45cd40:	str	w1, [x19, #56]
  45cd44:	ldrb	w20, [x3]
  45cd48:	cbnz	w20, 45ccac <nftw@plt+0x5a12c>
  45cd4c:	nop
  45cd50:	ldp	x25, x26, [sp, #64]
  45cd54:	mov	x20, #0x0                   	// #0
  45cd58:	ldp	x23, x24, [sp, #48]
  45cd5c:	str	xzr, [x22]
  45cd60:	ldp	x21, x22, [sp, #32]
  45cd64:	b	45cae8 <nftw@plt+0x59f68>
  45cd68:	ldrb	w0, [x3, #1]
  45cd6c:	and	w0, w0, #0xffffffdf
  45cd70:	and	w0, w0, #0xff
  45cd74:	cmp	w0, #0x54
  45cd78:	mov	x0, x19
  45cd7c:	b.ne	45cda4 <nftw@plt+0x5a224>  // b.any
  45cd80:	mov	x26, x21
  45cd84:	bl	459438 <nftw@plt+0x568b8>
  45cd88:	mov	x21, x0
  45cd8c:	mov	w1, #0x1                   	// #1
  45cd90:	cbnz	x26, 45ccf8 <nftw@plt+0x5a178>
  45cd94:	ldr	x3, [x19, #24]
  45cd98:	b	45cd18 <nftw@plt+0x5a198>
  45cd9c:	mov	x26, x21
  45cda0:	b	45ccd4 <nftw@plt+0x5a154>
  45cda4:	mov	x26, x21
  45cda8:	bl	45a540 <nftw@plt+0x579c0>
  45cdac:	mov	x21, x0
  45cdb0:	b	45cd8c <nftw@plt+0x5a20c>
  45cdb4:	cmp	w20, #0x53
  45cdb8:	b.eq	45ceb0 <nftw@plt+0x5a330>  // b.none
  45cdbc:	cmp	w20, #0x49
  45cdc0:	b.eq	45cf80 <nftw@plt+0x5a400>  // b.none
  45cdc4:	cmp	w20, #0x54
  45cdc8:	b.eq	45d01c <nftw@plt+0x5a49c>  // b.none
  45cdcc:	cmp	w20, #0x45
  45cdd0:	b.eq	45cecc <nftw@plt+0x5a34c>  // b.none
  45cdd4:	cmp	w20, #0x4d
  45cdd8:	ccmp	x21, #0x0, #0x4, eq  // eq = none
  45cddc:	b.eq	45cd50 <nftw@plt+0x5a1d0>  // b.none
  45cde0:	add	x3, x3, #0x1
  45cde4:	str	x3, [x19, #24]
  45cde8:	b	45cd44 <nftw@plt+0x5a1c4>
  45cdec:	ldr	w2, [x19, #72]
  45cdf0:	cmp	w20, #0x52
  45cdf4:	mov	w1, #0x20                  	// #32
  45cdf8:	add	w0, w2, #0x3
  45cdfc:	b.ne	45ce08 <nftw@plt+0x5a288>  // b.any
  45ce00:	add	w0, w2, #0x2
  45ce04:	mov	w1, #0x1f                  	// #31
  45ce08:	add	x3, x3, #0x1
  45ce0c:	str	x3, [x19, #24]
  45ce10:	str	w0, [x19, #72]
  45ce14:	mov	x3, #0x0                   	// #0
  45ce18:	mov	x0, x19
  45ce1c:	mov	x2, #0x0                   	// #0
  45ce20:	bl	44c310 <nftw@plt+0x49790>
  45ce24:	mov	x23, x0
  45ce28:	ldr	x3, [x19, #24]
  45ce2c:	ldrb	w20, [x3]
  45ce30:	b	45cc98 <nftw@plt+0x5a118>
  45ce34:	stp	x21, x22, [sp, #32]
  45ce38:	add	x0, x0, #0x2
  45ce3c:	str	x0, [x19, #24]
  45ce40:	mov	x0, x19
  45ce44:	bl	44cc78 <nftw@plt+0x4a0f8>
  45ce48:	mov	w21, w0
  45ce4c:	tbnz	w0, #31, 45cbdc <nftw@plt+0x5a05c>
  45ce50:	mov	x0, x19
  45ce54:	bl	45ca28 <nftw@plt+0x59ea8>
  45ce58:	mov	x13, x0
  45ce5c:	cbz	x0, 45ce70 <nftw@plt+0x5a2f0>
  45ce60:	ldr	w0, [x0]
  45ce64:	sub	w0, w0, #0x46
  45ce68:	tst	w0, #0xfffffffd
  45ce6c:	b.ne	45cbd0 <nftw@plt+0x5a050>  // b.any
  45ce70:	ldp	w1, w0, [x19, #40]
  45ce74:	cmp	w1, w0
  45ce78:	b.ge	45d010 <nftw@plt+0x5a490>  // b.tcont
  45ce7c:	mov	w2, #0x18                  	// #24
  45ce80:	add	w4, w1, #0x1
  45ce84:	ldr	x0, [x19, #32]
  45ce88:	smull	x1, w1, w2
  45ce8c:	mov	w2, #0x47                  	// #71
  45ce90:	add	x3, x0, x1
  45ce94:	str	wzr, [x3, #4]
  45ce98:	str	w4, [x19, #40]
  45ce9c:	str	w2, [x0, x1]
  45cea0:	str	x13, [x3, #8]
  45cea4:	str	w21, [x3, #16]
  45cea8:	ldp	x21, x22, [sp, #32]
  45ceac:	b	45cb64 <nftw@plt+0x59fe4>
  45ceb0:	mov	x0, x19
  45ceb4:	mov	w1, #0x1                   	// #1
  45ceb8:	bl	44c960 <nftw@plt+0x49de0>
  45cebc:	mov	x21, x0
  45cec0:	cbnz	x26, 45ccf4 <nftw@plt+0x5a174>
  45cec4:	ldr	x3, [x19, #24]
  45cec8:	b	45cd44 <nftw@plt+0x5a1c4>
  45cecc:	str	x21, [x22]
  45ced0:	cbz	x21, 45cf10 <nftw@plt+0x5a390>
  45ced4:	cbz	x23, 45cee4 <nftw@plt+0x5a364>
  45ced8:	ldr	x0, [sp, #104]
  45cedc:	str	x0, [x23, #8]
  45cee0:	str	x23, [sp, #104]
  45cee4:	ldr	x0, [x19, #24]
  45cee8:	ldrb	w1, [x0]
  45ceec:	cmp	w1, #0x45
  45cef0:	b.ne	45cf10 <nftw@plt+0x5a390>  // b.any
  45cef4:	add	x0, x0, #0x1
  45cef8:	ldp	x21, x22, [sp, #32]
  45cefc:	ldp	x23, x24, [sp, #48]
  45cf00:	ldp	x25, x26, [sp, #64]
  45cf04:	str	x0, [x19, #24]
  45cf08:	ldr	x20, [sp, #104]
  45cf0c:	b	45cae8 <nftw@plt+0x59f68>
  45cf10:	ldp	x23, x24, [sp, #48]
  45cf14:	ldp	x25, x26, [sp, #64]
  45cf18:	mov	x20, #0x0                   	// #0
  45cf1c:	ldp	x21, x22, [sp, #32]
  45cf20:	b	45cae8 <nftw@plt+0x59f68>
  45cf24:	cbz	x20, 45cbe0 <nftw@plt+0x5a060>
  45cf28:	ldp	w0, w2, [x19, #56]
  45cf2c:	cmp	w0, w2
  45cf30:	b.ge	45cbe0 <nftw@plt+0x5a060>  // b.tcont
  45cf34:	ldr	x4, [x19, #48]
  45cf38:	add	w2, w0, #0x1
  45cf3c:	mov	x3, #0x0                   	// #0
  45cf40:	str	x20, [x4, w0, sxtw #3]
  45cf44:	str	w2, [x19, #56]
  45cf48:	ldrb	w0, [x1]
  45cf4c:	sub	w0, w0, #0x49
  45cf50:	and	w0, w0, #0xff
  45cf54:	cmp	w0, #0x1
  45cf58:	b.hi	45cbb8 <nftw@plt+0x5a038>  // b.pmore
  45cf5c:	b	45cba4 <nftw@plt+0x5a024>
  45cf60:	ldr	x0, [x20, #16]
  45cf64:	ldr	w1, [x0]
  45cf68:	cmp	w1, #0x29
  45cf6c:	b.ne	45cb70 <nftw@plt+0x59ff0>  // b.any
  45cf70:	str	xzr, [x0, #8]
  45cf74:	b	45cb70 <nftw@plt+0x59ff0>
  45cf78:	mov	x20, #0x0                   	// #0
  45cf7c:	b	45caac <nftw@plt+0x59f2c>
  45cf80:	cbz	x21, 45cd50 <nftw@plt+0x5a1d0>
  45cf84:	add	x3, x3, #0x1
  45cf88:	str	x3, [x19, #24]
  45cf8c:	mov	x0, x19
  45cf90:	bl	45be08 <nftw@plt+0x59288>
  45cf94:	mov	x21, x0
  45cf98:	mov	w1, #0x4                   	// #4
  45cf9c:	b	45ccf8 <nftw@plt+0x5a178>
  45cfa0:	add	x0, x0, #0x2
  45cfa4:	str	x0, [x19, #24]
  45cfa8:	mov	x0, x19
  45cfac:	bl	44cd28 <nftw@plt+0x4a1a8>
  45cfb0:	cbz	w0, 45cbe0 <nftw@plt+0x5a060>
  45cfb4:	ldp	w0, w1, [x19, #40]
  45cfb8:	cmp	w0, w1
  45cfbc:	b.ge	45d014 <nftw@plt+0x5a494>  // b.tcont
  45cfc0:	mov	w3, #0x18                  	// #24
  45cfc4:	add	w1, w0, #0x1
  45cfc8:	ldr	x2, [x19, #32]
  45cfcc:	smull	x0, w0, w3
  45cfd0:	str	w1, [x19, #40]
  45cfd4:	mov	w4, #0xe                   	// #14
  45cfd8:	add	x3, x2, x0
  45cfdc:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x1ebb8>
  45cfe0:	add	x1, x1, #0xf30
  45cfe4:	str	xzr, [x2, x0]
  45cfe8:	str	x1, [x3, #8]
  45cfec:	str	w4, [x3, #16]
  45cff0:	b	45cb64 <nftw@plt+0x59fe4>
  45cff4:	mov	x0, x19
  45cff8:	str	x3, [sp, #88]
  45cffc:	bl	44cd28 <nftw@plt+0x4a1a8>
  45d000:	ldr	x3, [sp, #88]
  45d004:	cbnz	w0, 45cb64 <nftw@plt+0x59fe4>
  45d008:	mov	x20, #0x0                   	// #0
  45d00c:	b	45cae8 <nftw@plt+0x59f68>
  45d010:	ldp	x21, x22, [sp, #32]
  45d014:	mov	x3, #0x0                   	// #0
  45d018:	b	45cb64 <nftw@plt+0x59fe4>
  45d01c:	mov	x0, x19
  45d020:	bl	44ce50 <nftw@plt+0x4a2d0>
  45d024:	mov	x21, x0
  45d028:	b	45cd8c <nftw@plt+0x5a20c>
  45d02c:	nop
  45d030:	stp	x29, x30, [sp, #-48]!
  45d034:	mov	x29, sp
  45d038:	stp	x19, x20, [sp, #16]
  45d03c:	mov	x20, x0
  45d040:	stp	x21, x22, [sp, #32]
  45d044:	mov	w22, w1
  45d048:	bl	45ca28 <nftw@plt+0x59ea8>
  45d04c:	cbz	x0, 45d164 <nftw@plt+0x5a5e4>
  45d050:	mov	x19, x0
  45d054:	cbz	w22, 45d0e8 <nftw@plt+0x5a568>
  45d058:	ldr	w0, [x20, #16]
  45d05c:	tbnz	w0, #0, 45d0e8 <nftw@plt+0x5a568>
  45d060:	mov	x1, #0x1f                  	// #31
  45d064:	mov	x2, #0x1                   	// #1
  45d068:	movk	x1, #0x1a, lsl #48
  45d06c:	ldr	w3, [x19]
  45d070:	sub	w0, w3, #0x1c
  45d074:	cmp	w0, #0x34
  45d078:	b.hi	45d088 <nftw@plt+0x5a508>  // b.pmore
  45d07c:	lsl	x0, x2, x0
  45d080:	tst	x0, x1
  45d084:	b.ne	45d1fc <nftw@plt+0x5a67c>  // b.any
  45d088:	cmp	w3, #0x2
  45d08c:	b.ne	45d0d4 <nftw@plt+0x5a554>  // b.any
  45d090:	ldr	x3, [x19, #16]
  45d094:	mov	x1, #0x1f                  	// #31
  45d098:	mov	x2, #0x1                   	// #1
  45d09c:	movk	x1, #0x1a, lsl #48
  45d0a0:	ldr	w0, [x3]
  45d0a4:	sub	w0, w0, #0x1c
  45d0a8:	cmp	w0, #0x34
  45d0ac:	b.hi	45d0d4 <nftw@plt+0x5a554>  // b.pmore
  45d0b0:	lsl	x0, x2, x0
  45d0b4:	tst	x0, x1
  45d0b8:	b.eq	45d0d4 <nftw@plt+0x5a554>  // b.none
  45d0bc:	ldr	x3, [x3, #8]
  45d0c0:	str	x3, [x19, #16]
  45d0c4:	ldr	w0, [x3]
  45d0c8:	sub	w0, w0, #0x1c
  45d0cc:	cmp	w0, #0x34
  45d0d0:	b.ls	45d0b0 <nftw@plt+0x5a530>  // b.plast
  45d0d4:	mov	x0, x19
  45d0d8:	ldp	x19, x20, [sp, #16]
  45d0dc:	ldp	x21, x22, [sp, #32]
  45d0e0:	ldp	x29, x30, [sp], #48
  45d0e4:	ret
  45d0e8:	ldr	x1, [x20, #24]
  45d0ec:	ldrb	w4, [x1]
  45d0f0:	cmp	w4, #0x45
  45d0f4:	ccmp	w4, #0x0, #0x4, ne  // ne = any
  45d0f8:	b.eq	45d0d4 <nftw@plt+0x5a554>  // b.none
  45d0fc:	mov	x2, #0x1f                  	// #31
  45d100:	mov	x21, x19
  45d104:	mov	x5, #0x1                   	// #1
  45d108:	movk	x2, #0x1a, lsl #48
  45d10c:	ldr	w0, [x21]
  45d110:	cmp	w0, #0x4
  45d114:	b.eq	45d204 <nftw@plt+0x5a684>  // b.none
  45d118:	sub	w3, w0, #0x1c
  45d11c:	b.hi	45d1dc <nftw@plt+0x5a65c>  // b.pmore
  45d120:	cmp	w0, #0x2
  45d124:	b.ne	45d17c <nftw@plt+0x5a5fc>  // b.any
  45d128:	ldr	x21, [x21, #16]
  45d12c:	cbnz	x21, 45d10c <nftw@plt+0x5a58c>
  45d130:	cmp	w4, #0x4a
  45d134:	b.ne	45d188 <nftw@plt+0x5a608>  // b.any
  45d138:	add	x1, x1, #0x1
  45d13c:	str	x1, [x20, #24]
  45d140:	b	45d154 <nftw@plt+0x5a5d4>
  45d144:	cmp	w0, #0x35
  45d148:	b.eq	45d17c <nftw@plt+0x5a5fc>  // b.none
  45d14c:	cmp	w4, #0x4a
  45d150:	b.eq	45d138 <nftw@plt+0x5a5b8>  // b.none
  45d154:	mov	x0, x20
  45d158:	bl	459438 <nftw@plt+0x568b8>
  45d15c:	mov	x21, x0
  45d160:	cbnz	x0, 45d188 <nftw@plt+0x5a608>
  45d164:	mov	x19, #0x0                   	// #0
  45d168:	mov	x0, x19
  45d16c:	ldp	x19, x20, [sp, #16]
  45d170:	ldp	x21, x22, [sp, #32]
  45d174:	ldp	x29, x30, [sp], #48
  45d178:	ret
  45d17c:	cmp	w4, #0x4a
  45d180:	mov	x21, #0x0                   	// #0
  45d184:	b.eq	45d138 <nftw@plt+0x5a5b8>  // b.none
  45d188:	mov	x0, x20
  45d18c:	bl	45a238 <nftw@plt+0x576b8>
  45d190:	mov	x3, x0
  45d194:	cbz	x0, 45d164 <nftw@plt+0x5a5e4>
  45d198:	mov	x2, x21
  45d19c:	mov	x0, x20
  45d1a0:	mov	w1, #0x29                  	// #41
  45d1a4:	bl	44c310 <nftw@plt+0x49790>
  45d1a8:	mov	x3, x0
  45d1ac:	cbz	x0, 45d164 <nftw@plt+0x5a5e4>
  45d1b0:	cbnz	w22, 45d1c0 <nftw@plt+0x5a640>
  45d1b4:	ldr	w0, [x19]
  45d1b8:	cmp	w0, #0x2
  45d1bc:	b.eq	45d238 <nftw@plt+0x5a6b8>  // b.none
  45d1c0:	mov	x2, x19
  45d1c4:	mov	x0, x20
  45d1c8:	ldp	x19, x20, [sp, #16]
  45d1cc:	mov	w1, #0x3                   	// #3
  45d1d0:	ldp	x21, x22, [sp, #32]
  45d1d4:	ldp	x29, x30, [sp], #48
  45d1d8:	b	44c310 <nftw@plt+0x49790>
  45d1dc:	cmp	w3, #0x34
  45d1e0:	b.hi	45d17c <nftw@plt+0x5a5fc>  // b.pmore
  45d1e4:	lsl	x3, x5, x3
  45d1e8:	tst	x3, x2
  45d1ec:	b.eq	45d17c <nftw@plt+0x5a5fc>  // b.none
  45d1f0:	ldr	x21, [x21, #8]
  45d1f4:	cbnz	x21, 45d10c <nftw@plt+0x5a58c>
  45d1f8:	b	45d130 <nftw@plt+0x5a5b0>
  45d1fc:	ldr	x19, [x19, #8]
  45d200:	b	45d06c <nftw@plt+0x5a4ec>
  45d204:	ldr	x2, [x21, #8]
  45d208:	cbz	x2, 45d14c <nftw@plt+0x5a5cc>
  45d20c:	ldr	w0, [x2]
  45d210:	sub	w3, w0, #0x1
  45d214:	cmp	w0, #0x8
  45d218:	b.hi	45d144 <nftw@plt+0x5a5c4>  // b.pmore
  45d21c:	cmp	w0, #0x6
  45d220:	b.hi	45d17c <nftw@plt+0x5a5fc>  // b.pmore
  45d224:	cmp	w3, #0x1
  45d228:	b.hi	45d14c <nftw@plt+0x5a5cc>  // b.pmore
  45d22c:	ldr	x2, [x2, #16]
  45d230:	cbnz	x2, 45d20c <nftw@plt+0x5a68c>
  45d234:	b	45d14c <nftw@plt+0x5a5cc>
  45d238:	ldr	w0, [x3]
  45d23c:	cmp	w0, #0x29
  45d240:	b.ne	45d1c0 <nftw@plt+0x5a640>  // b.any
  45d244:	str	xzr, [x3, #8]
  45d248:	b	45d1c0 <nftw@plt+0x5a640>
  45d24c:	nop
  45d250:	stp	x29, x30, [sp, #-32]!
  45d254:	mov	x29, sp
  45d258:	stp	x19, x20, [sp, #16]
  45d25c:	mov	x19, x0
  45d260:	mov	w20, w1
  45d264:	ldr	x0, [x0, #24]
  45d268:	ldrb	w1, [x0]
  45d26c:	cmp	w1, #0x5f
  45d270:	b.eq	45d3fc <nftw@plt+0x5a87c>  // b.none
  45d274:	cbnz	w20, 45d3ec <nftw@plt+0x5a86c>
  45d278:	cmp	w1, #0x5a
  45d27c:	b.ne	45d3ec <nftw@plt+0x5a86c>  // b.any
  45d280:	add	x1, x0, #0x1
  45d284:	str	x1, [x19, #24]
  45d288:	mov	w1, #0x54                  	// #84
  45d28c:	ldrb	w0, [x0, #1]
  45d290:	cmp	w0, #0x47
  45d294:	ccmp	w0, w1, #0x4, ne  // ne = any
  45d298:	b.ne	45d410 <nftw@plt+0x5a890>  // b.any
  45d29c:	mov	x0, x19
  45d2a0:	bl	45bfa0 <nftw@plt+0x59420>
  45d2a4:	cbz	w20, 45d3f0 <nftw@plt+0x5a870>
  45d2a8:	ldr	w1, [x19, #16]
  45d2ac:	tbz	w1, #0, 45d3f0 <nftw@plt+0x5a870>
  45d2b0:	ldr	x4, [x19, #24]
  45d2b4:	mov	w8, #0x18                  	// #24
  45d2b8:	ldrb	w1, [x4]
  45d2bc:	cmp	w1, #0x2e
  45d2c0:	b.ne	45d3f0 <nftw@plt+0x5a870>  // b.any
  45d2c4:	ldrb	w1, [x4, #1]
  45d2c8:	sub	w2, w1, #0x61
  45d2cc:	cmp	w1, #0x5f
  45d2d0:	and	w2, w2, #0xff
  45d2d4:	ccmp	w2, #0x19, #0x0, ne  // ne = any
  45d2d8:	b.ls	45d3bc <nftw@plt+0x5a83c>  // b.plast
  45d2dc:	nop
  45d2e0:	sub	w1, w1, #0x30
  45d2e4:	and	w1, w1, #0xff
  45d2e8:	cmp	w1, #0x9
  45d2ec:	b.hi	45d3f0 <nftw@plt+0x5a870>  // b.pmore
  45d2f0:	mov	x1, x4
  45d2f4:	nop
  45d2f8:	ldrb	w3, [x1, #1]
  45d2fc:	sub	w3, w3, #0x30
  45d300:	and	w3, w3, #0xff
  45d304:	cmp	w3, #0x9
  45d308:	b.hi	45d344 <nftw@plt+0x5a7c4>  // b.pmore
  45d30c:	ldrb	w2, [x1, #2]
  45d310:	add	x1, x1, #0x2
  45d314:	sub	w3, w2, #0x30
  45d318:	and	w3, w3, #0xff
  45d31c:	cmp	w3, #0x9
  45d320:	b.hi	45d33c <nftw@plt+0x5a7bc>  // b.pmore
  45d324:	nop
  45d328:	ldrb	w2, [x1, #1]!
  45d32c:	sub	w3, w2, #0x30
  45d330:	and	w3, w3, #0xff
  45d334:	cmp	w3, #0x9
  45d338:	b.ls	45d328 <nftw@plt+0x5a7a8>  // b.plast
  45d33c:	cmp	w2, #0x2e
  45d340:	b.eq	45d2f8 <nftw@plt+0x5a778>  // b.none
  45d344:	ldp	w2, w3, [x19, #40]
  45d348:	str	x1, [x19, #24]
  45d34c:	sub	x1, x1, x4
  45d350:	cmp	w2, w3
  45d354:	b.ge	45d420 <nftw@plt+0x5a8a0>  // b.tcont
  45d358:	ldr	x6, [x19, #32]
  45d35c:	smull	x5, w2, w8
  45d360:	add	w2, w2, #0x1
  45d364:	cmp	w1, #0x0
  45d368:	add	x3, x6, x5
  45d36c:	str	wzr, [x3, #4]
  45d370:	str	w2, [x19, #40]
  45d374:	b.le	45d420 <nftw@plt+0x5a8a0>
  45d378:	str	xzr, [x6, x5]
  45d37c:	str	x4, [x3, #8]
  45d380:	str	w1, [x3, #16]
  45d384:	mov	x2, x0
  45d388:	mov	w1, #0x4e                  	// #78
  45d38c:	mov	x0, x19
  45d390:	bl	44c310 <nftw@plt+0x49790>
  45d394:	ldr	x4, [x19, #24]
  45d398:	ldrb	w1, [x4]
  45d39c:	cmp	w1, #0x2e
  45d3a0:	b.ne	45d3f0 <nftw@plt+0x5a870>  // b.any
  45d3a4:	ldrb	w1, [x4, #1]
  45d3a8:	sub	w2, w1, #0x61
  45d3ac:	cmp	w1, #0x5f
  45d3b0:	and	w2, w2, #0xff
  45d3b4:	ccmp	w2, #0x19, #0x0, ne  // ne = any
  45d3b8:	b.hi	45d2e0 <nftw@plt+0x5a760>  // b.pmore
  45d3bc:	ldrb	w3, [x4, #2]
  45d3c0:	add	x1, x4, #0x2
  45d3c4:	b	45d3cc <nftw@plt+0x5a84c>
  45d3c8:	ldrb	w3, [x1, #1]!
  45d3cc:	sub	w2, w3, #0x61
  45d3d0:	cmp	w3, #0x5f
  45d3d4:	and	w2, w2, #0xff
  45d3d8:	ccmp	w2, #0x19, #0x0, ne  // ne = any
  45d3dc:	b.ls	45d3c8 <nftw@plt+0x5a848>  // b.plast
  45d3e0:	cmp	w3, #0x2e
  45d3e4:	b.eq	45d2f8 <nftw@plt+0x5a778>  // b.none
  45d3e8:	b	45d344 <nftw@plt+0x5a7c4>
  45d3ec:	mov	x0, #0x0                   	// #0
  45d3f0:	ldp	x19, x20, [sp, #16]
  45d3f4:	ldp	x29, x30, [sp], #32
  45d3f8:	ret
  45d3fc:	add	x2, x0, #0x1
  45d400:	str	x2, [x19, #24]
  45d404:	ldrb	w1, [x0, #1]
  45d408:	mov	x0, x2
  45d40c:	b	45d278 <nftw@plt+0x5a6f8>
  45d410:	mov	w1, w20
  45d414:	mov	x0, x19
  45d418:	bl	45d030 <nftw@plt+0x5a4b0>
  45d41c:	b	45d2a4 <nftw@plt+0x5a724>
  45d420:	mov	x3, #0x0                   	// #0
  45d424:	b	45d384 <nftw@plt+0x5a804>
  45d428:	ldr	x2, [x0, #24]
  45d42c:	ldrb	w1, [x2]
  45d430:	cmp	w1, #0x4c
  45d434:	b.ne	45d548 <nftw@plt+0x5a9c8>  // b.any
  45d438:	stp	x29, x30, [sp, #-32]!
  45d43c:	add	x1, x2, #0x1
  45d440:	mov	w4, #0x5a                  	// #90
  45d444:	mov	x29, sp
  45d448:	str	x19, [sp, #16]
  45d44c:	mov	x19, x0
  45d450:	str	x1, [x0, #24]
  45d454:	ldrb	w3, [x2, #1]
  45d458:	cmp	w3, #0x5f
  45d45c:	ccmp	w3, w4, #0x4, ne  // ne = any
  45d460:	b.eq	45d4dc <nftw@plt+0x5a95c>  // b.none
  45d464:	bl	459438 <nftw@plt+0x568b8>
  45d468:	mov	x2, x0
  45d46c:	cbz	x0, 45d4cc <nftw@plt+0x5a94c>
  45d470:	ldr	w0, [x0]
  45d474:	cmp	w0, #0x27
  45d478:	b.eq	45d5c0 <nftw@plt+0x5aa40>  // b.none
  45d47c:	ldr	x0, [x19, #24]
  45d480:	mov	w1, #0x3d                  	// #61
  45d484:	ldrb	w4, [x0]
  45d488:	cmp	w4, #0x6e
  45d48c:	b.ne	45d4a4 <nftw@plt+0x5a924>  // b.any
  45d490:	add	x3, x0, #0x1
  45d494:	str	x3, [x19, #24]
  45d498:	mov	w1, #0x3e                  	// #62
  45d49c:	ldrb	w4, [x0, #1]
  45d4a0:	mov	x0, x3
  45d4a4:	cmp	w4, #0x45
  45d4a8:	b.eq	45d5e8 <nftw@plt+0x5aa68>  // b.none
  45d4ac:	add	x3, x0, #0x1
  45d4b0:	b	45d4c4 <nftw@plt+0x5a944>
  45d4b4:	str	x3, [x19, #24]
  45d4b8:	ldrb	w4, [x3], #1
  45d4bc:	cmp	w4, #0x45
  45d4c0:	b.eq	45d56c <nftw@plt+0x5a9ec>  // b.none
  45d4c4:	mov	x5, x3
  45d4c8:	cbnz	w4, 45d4b4 <nftw@plt+0x5a934>
  45d4cc:	mov	x0, #0x0                   	// #0
  45d4d0:	ldr	x19, [sp, #16]
  45d4d4:	ldp	x29, x30, [sp], #32
  45d4d8:	ret
  45d4dc:	cmp	w3, #0x5f
  45d4e0:	b.eq	45d550 <nftw@plt+0x5a9d0>  // b.none
  45d4e4:	add	x0, x1, #0x1
  45d4e8:	str	x0, [x19, #24]
  45d4ec:	mov	w2, #0x54                  	// #84
  45d4f0:	ldrb	w0, [x1, #1]
  45d4f4:	cmp	w0, #0x47
  45d4f8:	ccmp	w0, w2, #0x4, ne  // ne = any
  45d4fc:	b.eq	45d534 <nftw@plt+0x5a9b4>  // b.none
  45d500:	mov	w1, #0x0                   	// #0
  45d504:	mov	x0, x19
  45d508:	bl	45d030 <nftw@plt+0x5a4b0>
  45d50c:	ldr	x1, [x19, #24]
  45d510:	ldrb	w2, [x1]
  45d514:	nop
  45d518:	cmp	w2, #0x45
  45d51c:	b.ne	45d4cc <nftw@plt+0x5a94c>  // b.any
  45d520:	add	x1, x1, #0x1
  45d524:	str	x1, [x19, #24]
  45d528:	ldr	x19, [sp, #16]
  45d52c:	ldp	x29, x30, [sp], #32
  45d530:	ret
  45d534:	mov	x0, x19
  45d538:	bl	45bfa0 <nftw@plt+0x59420>
  45d53c:	ldr	x1, [x19, #24]
  45d540:	ldrb	w2, [x1]
  45d544:	b	45d518 <nftw@plt+0x5a998>
  45d548:	mov	x0, #0x0                   	// #0
  45d54c:	ret
  45d550:	add	x1, x2, #0x2
  45d554:	str	x1, [x19, #24]
  45d558:	mov	x0, #0x0                   	// #0
  45d55c:	ldrb	w2, [x2, #2]
  45d560:	cmp	w2, w4
  45d564:	b.ne	45d518 <nftw@plt+0x5a998>  // b.any
  45d568:	b	45d4e4 <nftw@plt+0x5a964>
  45d56c:	sub	w5, w5, w0
  45d570:	ldp	w3, w4, [x19, #40]
  45d574:	cmp	w3, w4
  45d578:	b.ge	45d5e0 <nftw@plt+0x5aa60>  // b.tcont
  45d57c:	mov	w4, #0x18                  	// #24
  45d580:	add	w7, w3, #0x1
  45d584:	ldr	x6, [x19, #32]
  45d588:	smull	x4, w3, w4
  45d58c:	cmp	w5, #0x0
  45d590:	add	x3, x6, x4
  45d594:	str	wzr, [x3, #4]
  45d598:	str	w7, [x19, #40]
  45d59c:	b.le	45d5e0 <nftw@plt+0x5aa60>
  45d5a0:	str	xzr, [x6, x4]
  45d5a4:	str	x0, [x3, #8]
  45d5a8:	str	w5, [x3, #16]
  45d5ac:	mov	x0, x19
  45d5b0:	bl	44c310 <nftw@plt+0x49790>
  45d5b4:	ldr	x1, [x19, #24]
  45d5b8:	ldrb	w2, [x1]
  45d5bc:	b	45d518 <nftw@plt+0x5a998>
  45d5c0:	ldr	x0, [x2, #8]
  45d5c4:	ldr	w1, [x0, #28]
  45d5c8:	cbz	w1, 45d47c <nftw@plt+0x5a8fc>
  45d5cc:	ldr	w1, [x0, #8]
  45d5d0:	ldr	w0, [x19, #72]
  45d5d4:	sub	w0, w0, w1
  45d5d8:	str	w0, [x19, #72]
  45d5dc:	b	45d47c <nftw@plt+0x5a8fc>
  45d5e0:	mov	x3, #0x0                   	// #0
  45d5e4:	b	45d5ac <nftw@plt+0x5aa2c>
  45d5e8:	mov	w5, #0x0                   	// #0
  45d5ec:	b	45d570 <nftw@plt+0x5a9f0>
  45d5f0:	stp	x29, x30, [sp, #-448]!
  45d5f4:	mov	w4, w0
  45d5f8:	mov	x29, sp
  45d5fc:	stp	x19, x20, [sp, #16]
  45d600:	add	x20, x29, #0x40
  45d604:	mov	x19, x1
  45d608:	str	x21, [sp, #32]
  45d60c:	mov	x0, x20
  45d610:	stp	x2, x3, [x29, #336]
  45d614:	add	x2, x29, #0x200
  45d618:	str	xzr, [x29, #320]
  45d61c:	stp	xzr, xzr, [x2, #-120]
  45d620:	strb	wzr, [x29, #328]
  45d624:	stp	xzr, xzr, [x29, #352]
  45d628:	stp	xzr, xzr, [x29, #368]
  45d62c:	str	xzr, [x29, #384]
  45d630:	stp	xzr, xzr, [x29, #408]
  45d634:	str	xzr, [x29, #424]
  45d638:	bl	44c398 <nftw@plt+0x49818>
  45d63c:	ldr	w1, [x29, #372]
  45d640:	cmp	w1, #0x7ff
  45d644:	b.gt	45d650 <nftw@plt+0x5aad0>
  45d648:	mov	w1, #0x0                   	// #0
  45d64c:	str	wzr, [x29, #372]
  45d650:	ldr	w3, [x29, #412]
  45d654:	mov	w0, #0x1                   	// #1
  45d658:	ldr	w5, [x29, #428]
  45d65c:	mov	x21, sp
  45d660:	cmp	w3, #0x0
  45d664:	str	xzr, [x29, #432]
  45d668:	csel	w2, w3, w0, gt
  45d66c:	mul	w3, w3, w5
  45d670:	sub	sp, sp, w2, sxtw #4
  45d674:	str	w3, [x29, #428]
  45d678:	mov	x2, sp
  45d67c:	cmp	w3, #0x0
  45d680:	str	x2, [x29, #400]
  45d684:	csel	w3, w3, w0, gt
  45d688:	sub	sp, sp, w3, sxtw #4
  45d68c:	mov	x0, sp
  45d690:	str	x0, [x29, #416]
  45d694:	cbz	x19, 45d700 <nftw@plt+0x5ab80>
  45d698:	ldr	w0, [x19, #4]
  45d69c:	cmp	w0, #0x1
  45d6a0:	b.gt	45d700 <nftw@plt+0x5ab80>
  45d6a4:	cmp	w1, #0x400
  45d6a8:	b.gt	45d700 <nftw@plt+0x5ab80>
  45d6ac:	ldr	x5, [x29, #392]
  45d6b0:	add	w3, w1, #0x1
  45d6b4:	mov	w1, w4
  45d6b8:	add	x4, x29, #0x30
  45d6bc:	add	w0, w0, #0x1
  45d6c0:	str	w0, [x19, #4]
  45d6c4:	mov	x2, x19
  45d6c8:	mov	x0, x20
  45d6cc:	stp	x19, x5, [x29, #48]
  45d6d0:	str	w3, [x29, #372]
  45d6d4:	str	x4, [x29, #392]
  45d6d8:	bl	44d138 <nftw@plt+0x4a5b8>
  45d6dc:	ldr	w0, [x19, #4]
  45d6e0:	ldr	w1, [x29, #372]
  45d6e4:	ldr	x2, [x29, #56]
  45d6e8:	sub	w0, w0, #0x1
  45d6ec:	sub	w1, w1, #0x1
  45d6f0:	str	w0, [x19, #4]
  45d6f4:	str	w1, [x29, #372]
  45d6f8:	str	x2, [x29, #392]
  45d6fc:	b	45d708 <nftw@plt+0x5ab88>
  45d700:	mov	w0, #0x1                   	// #1
  45d704:	str	w0, [x29, #368]
  45d708:	ldr	x1, [x29, #320]
  45d70c:	mov	sp, x21
  45d710:	ldp	x3, x2, [x29, #336]
  45d714:	mov	x0, x20
  45d718:	strb	wzr, [x20, x1]
  45d71c:	blr	x3
  45d720:	ldr	w0, [x29, #368]
  45d724:	mov	sp, x29
  45d728:	cmp	w0, #0x0
  45d72c:	cset	w0, eq  // eq = none
  45d730:	ldp	x19, x20, [sp, #16]
  45d734:	ldr	x21, [sp, #32]
  45d738:	ldp	x29, x30, [sp], #448
  45d73c:	ret
  45d740:	stp	x29, x30, [sp, #-96]!
  45d744:	mov	x29, sp
  45d748:	stp	x19, x20, [sp, #16]
  45d74c:	mov	w19, w0
  45d750:	str	x21, [sp, #32]
  45d754:	mov	x21, x3
  45d758:	str	xzr, [sp, #64]
  45d75c:	stp	xzr, xzr, [sp, #72]
  45d760:	str	wzr, [sp, #88]
  45d764:	cbnz	w2, 45d7a8 <nftw@plt+0x5ac28>
  45d768:	adrp	x2, 44c000 <nftw@plt+0x49480>
  45d76c:	mov	w0, w19
  45d770:	add	x3, sp, #0x40
  45d774:	add	x2, x2, #0x590
  45d778:	bl	45d5f0 <nftw@plt+0x5aa70>
  45d77c:	cbz	w0, 45d7e4 <nftw@plt+0x5ac64>
  45d780:	ldr	w2, [sp, #88]
  45d784:	ldr	x1, [sp, #80]
  45d788:	cmp	w2, #0x0
  45d78c:	ldr	x0, [sp, #64]
  45d790:	csinc	x1, x1, xzr, eq  // eq = none
  45d794:	str	x1, [x21]
  45d798:	ldp	x19, x20, [sp, #16]
  45d79c:	ldr	x21, [sp, #32]
  45d7a0:	ldp	x29, x30, [sp], #96
  45d7a4:	ret
  45d7a8:	sxtw	x0, w2
  45d7ac:	mov	x20, #0x2                   	// #2
  45d7b0:	cmp	x0, #0x2
  45d7b4:	b.ls	45d7c4 <nftw@plt+0x5ac44>  // b.plast
  45d7b8:	lsl	x20, x20, #1
  45d7bc:	cmp	x0, x20
  45d7c0:	b.hi	45d7b8 <nftw@plt+0x5ac38>  // b.pmore
  45d7c4:	mov	x0, x20
  45d7c8:	str	x1, [sp, #56]
  45d7cc:	bl	402670 <malloc@plt>
  45d7d0:	ldr	x1, [sp, #56]
  45d7d4:	cbz	x0, 45d7f8 <nftw@plt+0x5ac78>
  45d7d8:	str	x0, [sp, #64]
  45d7dc:	str	x20, [sp, #80]
  45d7e0:	b	45d768 <nftw@plt+0x5abe8>
  45d7e4:	ldr	x0, [sp, #64]
  45d7e8:	bl	402910 <free@plt>
  45d7ec:	str	xzr, [x21]
  45d7f0:	mov	x0, #0x0                   	// #0
  45d7f4:	b	45d798 <nftw@plt+0x5ac18>
  45d7f8:	mov	w0, #0x1                   	// #1
  45d7fc:	str	w0, [sp, #88]
  45d800:	b	45d768 <nftw@plt+0x5abe8>
  45d804:	nop
  45d808:	lsl	w4, w2, #1
  45d80c:	add	x5, x0, x2
  45d810:	stp	x0, x5, [x3]
  45d814:	str	w1, [x3, #16]
  45d818:	str	x0, [x3, #24]
  45d81c:	stp	wzr, w4, [x3, #40]
  45d820:	stp	wzr, w2, [x3, #56]
  45d824:	stp	xzr, xzr, [x3, #64]
  45d828:	str	xzr, [x3, #80]
  45d82c:	ret
  45d830:	stp	x29, x30, [sp, #-208]!
  45d834:	mov	x29, sp
  45d838:	stp	x19, x20, [sp, #16]
  45d83c:	mov	x19, x0
  45d840:	mov	w20, w1
  45d844:	stp	x21, x22, [sp, #32]
  45d848:	stp	x23, x24, [sp, #48]
  45d84c:	str	x25, [sp, #64]
  45d850:	str	xzr, [x29, #80]
  45d854:	ldrb	w0, [x0]
  45d858:	stp	xzr, xzr, [x29, #88]
  45d85c:	cmp	w0, #0x5f
  45d860:	str	wzr, [x29, #104]
  45d864:	b.eq	45da18 <nftw@plt+0x5ae98>  // b.none
  45d868:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x1ebb8>
  45d86c:	mov	x0, x19
  45d870:	add	x1, x1, #0xf48
  45d874:	mov	x2, #0x8                   	// #8
  45d878:	bl	4026a0 <strncmp@plt>
  45d87c:	cbz	w0, 45d9a4 <nftw@plt+0x5ae24>
  45d880:	mov	w21, #0x0                   	// #0
  45d884:	tbz	w20, #4, 45d9f0 <nftw@plt+0x5ae70>
  45d888:	mov	x0, x19
  45d88c:	bl	4024f0 <strlen@plt>
  45d890:	add	x1, x19, x0
  45d894:	lsl	w4, w0, #1
  45d898:	stp	x19, x1, [x29, #120]
  45d89c:	cmp	w4, #0x800
  45d8a0:	and	w1, w20, #0x40000
  45d8a4:	str	w20, [x29, #136]
  45d8a8:	ccmp	w1, #0x0, #0x0, hi  // hi = pmore
  45d8ac:	str	x19, [x29, #144]
  45d8b0:	stp	wzr, w4, [x29, #160]
  45d8b4:	stp	wzr, w0, [x29, #176]
  45d8b8:	stp	xzr, xzr, [x29, #184]
  45d8bc:	str	xzr, [x29, #200]
  45d8c0:	b.eq	45d9f0 <nftw@plt+0x5ae70>  // b.none
  45d8c4:	mov	x24, sp
  45d8c8:	mov	w1, #0x18                  	// #24
  45d8cc:	sbfiz	x3, x0, #3, #32
  45d8d0:	cmp	w21, #0x1
  45d8d4:	add	x3, x3, #0xf
  45d8d8:	smsubl	x0, w4, w1, x24
  45d8dc:	and	x3, x3, #0xfffffffffffffff0
  45d8e0:	mov	sp, x0
  45d8e4:	mov	x22, sp
  45d8e8:	sub	sp, sp, x3
  45d8ec:	mov	x0, sp
  45d8f0:	str	x22, [x29, #152]
  45d8f4:	str	x0, [x29, #168]
  45d8f8:	b.eq	45da58 <nftw@plt+0x5aed8>  // b.none
  45d8fc:	sub	w0, w21, #0x2
  45d900:	cmp	w0, #0x1
  45d904:	b.hi	45dab0 <nftw@plt+0x5af30>  // b.pmore
  45d908:	cmp	w21, #0x2
  45d90c:	ldrb	w0, [x19, #11]
  45d910:	add	x23, x19, #0xb
  45d914:	str	x23, [x29, #144]
  45d918:	cset	w1, ne  // ne = any
  45d91c:	cmp	w0, #0x5f
  45d920:	add	w21, w1, #0x44
  45d924:	b.eq	45da2c <nftw@plt+0x5aeac>  // b.none
  45d928:	cmp	w4, #0x0
  45d92c:	b.le	45dac0 <nftw@plt+0x5af40>
  45d930:	mov	x0, x23
  45d934:	bl	4024f0 <strlen@plt>
  45d938:	mov	w1, #0x1                   	// #1
  45d93c:	str	wzr, [x22, #4]
  45d940:	str	w1, [x29, #160]
  45d944:	cmp	w0, #0x0
  45d948:	b.le	45dac0 <nftw@plt+0x5af40>
  45d94c:	add	x25, x29, #0x78
  45d950:	str	wzr, [x22]
  45d954:	str	x23, [x22, #8]
  45d958:	str	w0, [x22, #16]
  45d95c:	mov	w1, w21
  45d960:	mov	x2, x22
  45d964:	mov	x3, #0x0                   	// #0
  45d968:	mov	x0, x25
  45d96c:	bl	44c310 <nftw@plt+0x49790>
  45d970:	mov	x19, x0
  45d974:	ldr	x21, [x29, #144]
  45d978:	mov	x0, x21
  45d97c:	bl	4024f0 <strlen@plt>
  45d980:	add	x21, x21, x0
  45d984:	str	x21, [x29, #144]
  45d988:	tbz	w20, #0, 45da6c <nftw@plt+0x5aeec>
  45d98c:	ldr	x0, [x29, #144]
  45d990:	ldrb	w0, [x0]
  45d994:	cbz	w0, 45da6c <nftw@plt+0x5aeec>
  45d998:	mov	sp, x24
  45d99c:	ldr	x0, [x29, #80]
  45d9a0:	b	45d9f4 <nftw@plt+0x5ae74>
  45d9a4:	ldrb	w0, [x19, #8]
  45d9a8:	mov	w2, #0x5f                  	// #95
  45d9ac:	mov	w1, #0x24                  	// #36
  45d9b0:	cmp	w0, #0x2e
  45d9b4:	ccmp	w0, w2, #0x4, ne  // ne = any
  45d9b8:	ccmp	w0, w1, #0x4, ne  // ne = any
  45d9bc:	b.ne	45d880 <nftw@plt+0x5ad00>  // b.any
  45d9c0:	ldrb	w0, [x19, #9]
  45d9c4:	mov	w1, #0x49                  	// #73
  45d9c8:	cmp	w0, #0x44
  45d9cc:	ccmp	w0, w1, #0x4, ne  // ne = any
  45d9d0:	b.ne	45d880 <nftw@plt+0x5ad00>  // b.any
  45d9d4:	ldrb	w1, [x19, #10]
  45d9d8:	cmp	w1, w2
  45d9dc:	b.ne	45d880 <nftw@plt+0x5ad00>  // b.any
  45d9e0:	cmp	w0, #0x49
  45d9e4:	cset	w21, ne  // ne = any
  45d9e8:	add	w21, w21, #0x2
  45d9ec:	b	45d888 <nftw@plt+0x5ad08>
  45d9f0:	mov	x0, #0x0                   	// #0
  45d9f4:	bl	402910 <free@plt>
  45d9f8:	mov	sp, x29
  45d9fc:	mov	x0, #0x0                   	// #0
  45da00:	ldp	x19, x20, [sp, #16]
  45da04:	ldp	x21, x22, [sp, #32]
  45da08:	ldp	x23, x24, [sp, #48]
  45da0c:	ldr	x25, [sp, #64]
  45da10:	ldp	x29, x30, [sp], #208
  45da14:	ret
  45da18:	ldrb	w0, [x19, #1]
  45da1c:	cmp	w0, #0x5a
  45da20:	b.ne	45d868 <nftw@plt+0x5ace8>  // b.any
  45da24:	mov	w21, #0x1                   	// #1
  45da28:	b	45d888 <nftw@plt+0x5ad08>
  45da2c:	ldrb	w0, [x19, #12]
  45da30:	cmp	w0, #0x5a
  45da34:	b.ne	45d928 <nftw@plt+0x5ada8>  // b.any
  45da38:	add	x25, x29, #0x78
  45da3c:	add	x19, x19, #0xd
  45da40:	mov	x0, x25
  45da44:	mov	w1, #0x0                   	// #0
  45da48:	str	x19, [x29, #144]
  45da4c:	bl	45c7f0 <nftw@plt+0x59c70>
  45da50:	mov	x22, x0
  45da54:	b	45d95c <nftw@plt+0x5addc>
  45da58:	mov	w1, w21
  45da5c:	add	x0, x29, #0x78
  45da60:	bl	45d250 <nftw@plt+0x5a6d0>
  45da64:	mov	x19, x0
  45da68:	tbnz	w20, #0, 45d98c <nftw@plt+0x5ae0c>
  45da6c:	cbz	x19, 45d998 <nftw@plt+0x5ae18>
  45da70:	mov	x1, x19
  45da74:	mov	w0, w20
  45da78:	add	x3, x29, #0x50
  45da7c:	adrp	x2, 44c000 <nftw@plt+0x49480>
  45da80:	add	x2, x2, #0x590
  45da84:	bl	45d5f0 <nftw@plt+0x5aa70>
  45da88:	mov	sp, x24
  45da8c:	cbz	w0, 45dacc <nftw@plt+0x5af4c>
  45da90:	ldr	x0, [x29, #80]
  45da94:	mov	sp, x29
  45da98:	ldp	x19, x20, [sp, #16]
  45da9c:	ldp	x21, x22, [sp, #32]
  45daa0:	ldp	x23, x24, [sp, #48]
  45daa4:	ldr	x25, [sp, #64]
  45daa8:	ldp	x29, x30, [sp], #208
  45daac:	ret
  45dab0:	add	x0, x29, #0x78
  45dab4:	bl	459438 <nftw@plt+0x568b8>
  45dab8:	mov	x19, x0
  45dabc:	b	45d988 <nftw@plt+0x5ae08>
  45dac0:	add	x25, x29, #0x78
  45dac4:	mov	x22, #0x0                   	// #0
  45dac8:	b	45d95c <nftw@plt+0x5addc>
  45dacc:	ldr	x0, [x29, #80]
  45dad0:	b	45d9f4 <nftw@plt+0x5ae74>
  45dad4:	nop
  45dad8:	stp	x29, x30, [sp, #-192]!
  45dadc:	mov	x29, sp
  45dae0:	stp	x19, x20, [sp, #16]
  45dae4:	mov	x19, x0
  45dae8:	mov	w20, w1
  45daec:	stp	x21, x22, [sp, #32]
  45daf0:	mov	x21, x2
  45daf4:	mov	x22, x3
  45daf8:	stp	x23, x24, [sp, #48]
  45dafc:	stp	x25, x26, [sp, #64]
  45db00:	str	x27, [sp, #80]
  45db04:	ldrb	w0, [x0]
  45db08:	cmp	w0, #0x5f
  45db0c:	b.eq	45dcf4 <nftw@plt+0x5b174>  // b.none
  45db10:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x1ebb8>
  45db14:	mov	x0, x19
  45db18:	add	x1, x1, #0xf48
  45db1c:	mov	x2, #0x8                   	// #8
  45db20:	bl	4026a0 <strncmp@plt>
  45db24:	cbz	w0, 45dc84 <nftw@plt+0x5b104>
  45db28:	mov	w23, #0x0                   	// #0
  45db2c:	tbz	w20, #4, 45dcd0 <nftw@plt+0x5b150>
  45db30:	mov	x0, x19
  45db34:	bl	4024f0 <strlen@plt>
  45db38:	add	x1, x19, x0
  45db3c:	lsl	w3, w0, #1
  45db40:	stp	x19, x1, [x29, #104]
  45db44:	cmp	w3, #0x800
  45db48:	and	w1, w20, #0x40000
  45db4c:	str	w20, [x29, #120]
  45db50:	ccmp	w1, #0x0, #0x0, hi  // hi = pmore
  45db54:	str	x19, [x29, #128]
  45db58:	stp	wzr, w3, [x29, #144]
  45db5c:	stp	wzr, w0, [x29, #160]
  45db60:	stp	xzr, xzr, [x29, #168]
  45db64:	str	xzr, [x29, #184]
  45db68:	b.eq	45dcd0 <nftw@plt+0x5b150>  // b.none
  45db6c:	mov	x26, sp
  45db70:	mov	w1, #0x18                  	// #24
  45db74:	sbfiz	x4, x0, #3, #32
  45db78:	cmp	w23, #0x1
  45db7c:	add	x4, x4, #0xf
  45db80:	smsubl	x0, w3, w1, x26
  45db84:	and	x4, x4, #0xfffffffffffffff0
  45db88:	mov	sp, x0
  45db8c:	mov	x24, sp
  45db90:	sub	sp, sp, x4
  45db94:	mov	x0, sp
  45db98:	str	x24, [x29, #136]
  45db9c:	str	x0, [x29, #152]
  45dba0:	b.eq	45dd34 <nftw@plt+0x5b1b4>  // b.none
  45dba4:	sub	w0, w23, #0x2
  45dba8:	cmp	w0, #0x1
  45dbac:	b.hi	45dd48 <nftw@plt+0x5b1c8>  // b.pmore
  45dbb0:	cmp	w23, #0x2
  45dbb4:	ldrb	w0, [x19, #11]
  45dbb8:	add	x25, x19, #0xb
  45dbbc:	str	x25, [x29, #128]
  45dbc0:	cset	w1, ne  // ne = any
  45dbc4:	cmp	w0, #0x5f
  45dbc8:	add	w23, w1, #0x44
  45dbcc:	b.eq	45dd08 <nftw@plt+0x5b188>  // b.none
  45dbd0:	cmp	w3, #0x0
  45dbd4:	b.le	45dd58 <nftw@plt+0x5b1d8>
  45dbd8:	mov	x0, x25
  45dbdc:	bl	4024f0 <strlen@plt>
  45dbe0:	mov	w1, #0x1                   	// #1
  45dbe4:	str	wzr, [x24, #4]
  45dbe8:	str	w1, [x29, #144]
  45dbec:	cmp	w0, #0x0
  45dbf0:	b.le	45dd58 <nftw@plt+0x5b1d8>
  45dbf4:	add	x27, x29, #0x68
  45dbf8:	str	wzr, [x24]
  45dbfc:	str	x25, [x24, #8]
  45dc00:	str	w0, [x24, #16]
  45dc04:	mov	w1, w23
  45dc08:	mov	x2, x24
  45dc0c:	mov	x3, #0x0                   	// #0
  45dc10:	mov	x0, x27
  45dc14:	bl	44c310 <nftw@plt+0x49790>
  45dc18:	mov	x19, x0
  45dc1c:	ldr	x23, [x29, #128]
  45dc20:	mov	x0, x23
  45dc24:	bl	4024f0 <strlen@plt>
  45dc28:	add	x23, x23, x0
  45dc2c:	str	x23, [x29, #128]
  45dc30:	tbz	w20, #0, 45dc44 <nftw@plt+0x5b0c4>
  45dc34:	ldr	x1, [x29, #128]
  45dc38:	mov	w0, #0x0                   	// #0
  45dc3c:	ldrb	w1, [x1]
  45dc40:	cbnz	w1, 45dc60 <nftw@plt+0x5b0e0>
  45dc44:	mov	w0, #0x0                   	// #0
  45dc48:	cbz	x19, 45dc60 <nftw@plt+0x5b0e0>
  45dc4c:	mov	x3, x22
  45dc50:	mov	x2, x21
  45dc54:	mov	x1, x19
  45dc58:	mov	w0, w20
  45dc5c:	bl	45d5f0 <nftw@plt+0x5aa70>
  45dc60:	mov	sp, x26
  45dc64:	mov	sp, x29
  45dc68:	ldp	x19, x20, [sp, #16]
  45dc6c:	ldp	x21, x22, [sp, #32]
  45dc70:	ldp	x23, x24, [sp, #48]
  45dc74:	ldp	x25, x26, [sp, #64]
  45dc78:	ldr	x27, [sp, #80]
  45dc7c:	ldp	x29, x30, [sp], #192
  45dc80:	ret
  45dc84:	ldrb	w0, [x19, #8]
  45dc88:	mov	w2, #0x5f                  	// #95
  45dc8c:	mov	w1, #0x24                  	// #36
  45dc90:	cmp	w0, #0x2e
  45dc94:	ccmp	w0, w2, #0x4, ne  // ne = any
  45dc98:	ccmp	w0, w1, #0x4, ne  // ne = any
  45dc9c:	b.ne	45db28 <nftw@plt+0x5afa8>  // b.any
  45dca0:	ldrb	w0, [x19, #9]
  45dca4:	mov	w1, #0x49                  	// #73
  45dca8:	cmp	w0, #0x44
  45dcac:	ccmp	w0, w1, #0x4, ne  // ne = any
  45dcb0:	b.ne	45db28 <nftw@plt+0x5afa8>  // b.any
  45dcb4:	ldrb	w1, [x19, #10]
  45dcb8:	cmp	w1, w2
  45dcbc:	b.ne	45db28 <nftw@plt+0x5afa8>  // b.any
  45dcc0:	cmp	w0, #0x49
  45dcc4:	cset	w23, ne  // ne = any
  45dcc8:	add	w23, w23, #0x2
  45dccc:	b	45db30 <nftw@plt+0x5afb0>
  45dcd0:	mov	sp, x29
  45dcd4:	mov	w0, #0x0                   	// #0
  45dcd8:	ldp	x19, x20, [sp, #16]
  45dcdc:	ldp	x21, x22, [sp, #32]
  45dce0:	ldp	x23, x24, [sp, #48]
  45dce4:	ldp	x25, x26, [sp, #64]
  45dce8:	ldr	x27, [sp, #80]
  45dcec:	ldp	x29, x30, [sp], #192
  45dcf0:	ret
  45dcf4:	ldrb	w0, [x19, #1]
  45dcf8:	cmp	w0, #0x5a
  45dcfc:	b.ne	45db10 <nftw@plt+0x5af90>  // b.any
  45dd00:	mov	w23, #0x1                   	// #1
  45dd04:	b	45db30 <nftw@plt+0x5afb0>
  45dd08:	ldrb	w0, [x19, #12]
  45dd0c:	cmp	w0, #0x5a
  45dd10:	b.ne	45dbd0 <nftw@plt+0x5b050>  // b.any
  45dd14:	add	x27, x29, #0x68
  45dd18:	add	x19, x19, #0xd
  45dd1c:	mov	x0, x27
  45dd20:	mov	w1, #0x0                   	// #0
  45dd24:	str	x19, [x29, #128]
  45dd28:	bl	45c7f0 <nftw@plt+0x59c70>
  45dd2c:	mov	x24, x0
  45dd30:	b	45dc04 <nftw@plt+0x5b084>
  45dd34:	mov	w1, w23
  45dd38:	add	x0, x29, #0x68
  45dd3c:	bl	45d250 <nftw@plt+0x5a6d0>
  45dd40:	mov	x19, x0
  45dd44:	b	45dc30 <nftw@plt+0x5b0b0>
  45dd48:	add	x0, x29, #0x68
  45dd4c:	bl	459438 <nftw@plt+0x568b8>
  45dd50:	mov	x19, x0
  45dd54:	b	45dc30 <nftw@plt+0x5b0b0>
  45dd58:	add	x27, x29, #0x68
  45dd5c:	mov	x24, #0x0                   	// #0
  45dd60:	b	45dc04 <nftw@plt+0x5b084>
  45dd64:	nop
  45dd68:	stp	x29, x30, [sp, #-192]!
  45dd6c:	mov	x29, sp
  45dd70:	stp	x19, x20, [sp, #16]
  45dd74:	mov	x19, x0
  45dd78:	stp	x21, x22, [sp, #32]
  45dd7c:	stp	x23, x24, [sp, #48]
  45dd80:	ldrb	w0, [x0]
  45dd84:	str	xzr, [x29, #64]
  45dd88:	stp	xzr, xzr, [x29, #72]
  45dd8c:	cmp	w0, #0x5f
  45dd90:	str	wzr, [x29, #88]
  45dd94:	b.eq	45dedc <nftw@plt+0x5b35c>  // b.none
  45dd98:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x1ebb8>
  45dd9c:	mov	x0, x19
  45dda0:	add	x1, x1, #0xf48
  45dda4:	mov	x2, #0x8                   	// #8
  45dda8:	bl	4026a0 <strncmp@plt>
  45ddac:	cbnz	w0, 45decc <nftw@plt+0x5b34c>
  45ddb0:	ldrb	w0, [x19, #8]
  45ddb4:	mov	w2, #0x5f                  	// #95
  45ddb8:	mov	w1, #0x24                  	// #36
  45ddbc:	cmp	w0, #0x2e
  45ddc0:	ccmp	w0, w2, #0x4, ne  // ne = any
  45ddc4:	ccmp	w0, w1, #0x4, ne  // ne = any
  45ddc8:	b.ne	45decc <nftw@plt+0x5b34c>  // b.any
  45ddcc:	ldrb	w0, [x19, #9]
  45ddd0:	mov	w1, #0x49                  	// #73
  45ddd4:	cmp	w0, #0x44
  45ddd8:	ccmp	w0, w1, #0x4, ne  // ne = any
  45dddc:	b.ne	45decc <nftw@plt+0x5b34c>  // b.any
  45dde0:	ldrb	w1, [x19, #10]
  45dde4:	cmp	w1, w2
  45dde8:	b.ne	45decc <nftw@plt+0x5b34c>  // b.any
  45ddec:	cmp	w0, #0x49
  45ddf0:	mov	w21, #0x2                   	// #2
  45ddf4:	mov	w0, #0x3                   	// #3
  45ddf8:	cset	w20, ne  // ne = any
  45ddfc:	csel	w21, w21, w0, eq  // eq = none
  45de00:	mov	x0, x19
  45de04:	bl	4024f0 <strlen@plt>
  45de08:	mov	w1, #0x25                  	// #37
  45de0c:	lsl	w3, w0, #1
  45de10:	add	x2, x19, x0
  45de14:	stp	x19, x2, [x29, #104]
  45de18:	cmp	w3, #0x800
  45de1c:	str	w1, [x29, #120]
  45de20:	str	x19, [x29, #128]
  45de24:	stp	wzr, w3, [x29, #144]
  45de28:	stp	wzr, w0, [x29, #160]
  45de2c:	stp	xzr, xzr, [x29, #168]
  45de30:	str	xzr, [x29, #184]
  45de34:	b.hi	45decc <nftw@plt+0x5b34c>  // b.pmore
  45de38:	mov	x22, sp
  45de3c:	mov	w2, #0x18                  	// #24
  45de40:	sbfiz	x1, x0, #3, #32
  45de44:	cmp	w20, #0x1
  45de48:	add	x1, x1, #0xf
  45de4c:	smsubl	x0, w3, w2, x22
  45de50:	and	x1, x1, #0xfffffffffffffff0
  45de54:	mov	sp, x0
  45de58:	mov	x20, sp
  45de5c:	sub	sp, sp, x1
  45de60:	mov	x0, sp
  45de64:	str	x20, [x29, #136]
  45de68:	str	x0, [x29, #152]
  45de6c:	b.ls	45df00 <nftw@plt+0x5b380>  // b.plast
  45de70:	add	x0, x29, #0x68
  45de74:	mov	w1, #0x1                   	// #1
  45de78:	bl	45d250 <nftw@plt+0x5a6d0>
  45de7c:	mov	x19, x0
  45de80:	ldr	x0, [x29, #128]
  45de84:	ldrb	w0, [x0]
  45de88:	cbnz	w0, 45def4 <nftw@plt+0x5b374>
  45de8c:	cbz	x19, 45def4 <nftw@plt+0x5b374>
  45de90:	mov	x1, x19
  45de94:	add	x3, x29, #0x40
  45de98:	adrp	x2, 44c000 <nftw@plt+0x49480>
  45de9c:	mov	w0, #0x25                  	// #37
  45dea0:	add	x2, x2, #0x590
  45dea4:	bl	45d5f0 <nftw@plt+0x5aa70>
  45dea8:	mov	sp, x22
  45deac:	cbz	w0, 45dfbc <nftw@plt+0x5b43c>
  45deb0:	ldr	x0, [x29, #64]
  45deb4:	mov	sp, x29
  45deb8:	ldp	x19, x20, [sp, #16]
  45debc:	ldp	x21, x22, [sp, #32]
  45dec0:	ldp	x23, x24, [sp, #48]
  45dec4:	ldp	x29, x30, [sp], #192
  45dec8:	ret
  45decc:	mov	x0, #0x0                   	// #0
  45ded0:	bl	402910 <free@plt>
  45ded4:	mov	x0, #0x0                   	// #0
  45ded8:	b	45deb4 <nftw@plt+0x5b334>
  45dedc:	ldrb	w0, [x19, #1]
  45dee0:	cmp	w0, #0x5a
  45dee4:	b.ne	45dd98 <nftw@plt+0x5b218>  // b.any
  45dee8:	mov	w20, #0xffffffff            	// #-1
  45deec:	mov	w21, #0x1                   	// #1
  45def0:	b	45de00 <nftw@plt+0x5b280>
  45def4:	mov	sp, x22
  45def8:	ldr	x0, [x29, #64]
  45defc:	b	45ded0 <nftw@plt+0x5b350>
  45df00:	cmp	w21, #0x2
  45df04:	ldrb	w0, [x19, #11]
  45df08:	add	x23, x19, #0xb
  45df0c:	str	x23, [x29, #128]
  45df10:	cset	w21, ne  // ne = any
  45df14:	cmp	w0, #0x5f
  45df18:	add	w21, w21, #0x44
  45df1c:	b.ne	45df2c <nftw@plt+0x5b3ac>  // b.any
  45df20:	ldrb	w0, [x19, #12]
  45df24:	cmp	w0, #0x5a
  45df28:	b.eq	45df9c <nftw@plt+0x5b41c>  // b.none
  45df2c:	cmp	w3, #0x0
  45df30:	b.le	45df90 <nftw@plt+0x5b410>
  45df34:	mov	x0, x23
  45df38:	bl	4024f0 <strlen@plt>
  45df3c:	mov	w1, #0x1                   	// #1
  45df40:	str	wzr, [x20, #4]
  45df44:	str	w1, [x29, #144]
  45df48:	cmp	w0, #0x0
  45df4c:	b.le	45df90 <nftw@plt+0x5b410>
  45df50:	add	x24, x29, #0x68
  45df54:	str	wzr, [x20]
  45df58:	str	x23, [x20, #8]
  45df5c:	str	w0, [x20, #16]
  45df60:	mov	x2, x20
  45df64:	mov	w1, w21
  45df68:	mov	x3, #0x0                   	// #0
  45df6c:	mov	x0, x24
  45df70:	bl	44c310 <nftw@plt+0x49790>
  45df74:	mov	x19, x0
  45df78:	ldr	x20, [x29, #128]
  45df7c:	mov	x0, x20
  45df80:	bl	4024f0 <strlen@plt>
  45df84:	add	x0, x20, x0
  45df88:	str	x0, [x29, #128]
  45df8c:	b	45de84 <nftw@plt+0x5b304>
  45df90:	add	x24, x29, #0x68
  45df94:	mov	x20, #0x0                   	// #0
  45df98:	b	45df60 <nftw@plt+0x5b3e0>
  45df9c:	add	x24, x29, #0x68
  45dfa0:	add	x19, x19, #0xd
  45dfa4:	mov	x0, x24
  45dfa8:	mov	w1, #0x0                   	// #0
  45dfac:	str	x19, [x29, #128]
  45dfb0:	bl	45c7f0 <nftw@plt+0x59c70>
  45dfb4:	mov	x20, x0
  45dfb8:	b	45df60 <nftw@plt+0x5b3e0>
  45dfbc:	ldr	x0, [x29, #64]
  45dfc0:	b	45ded0 <nftw@plt+0x5b350>
  45dfc4:	nop
  45dfc8:	stp	x29, x30, [sp, #-176]!
  45dfcc:	mov	x29, sp
  45dfd0:	stp	x19, x20, [sp, #16]
  45dfd4:	mov	x19, x0
  45dfd8:	mov	x20, x1
  45dfdc:	stp	x21, x22, [sp, #32]
  45dfe0:	mov	x21, x2
  45dfe4:	stp	x23, x24, [sp, #48]
  45dfe8:	stp	x25, x26, [sp, #64]
  45dfec:	ldrb	w0, [x0]
  45dff0:	cmp	w0, #0x5f
  45dff4:	b.eq	45e138 <nftw@plt+0x5b5b8>  // b.none
  45dff8:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x1ebb8>
  45dffc:	mov	x0, x19
  45e000:	add	x1, x1, #0xf48
  45e004:	mov	x2, #0x8                   	// #8
  45e008:	bl	4026a0 <strncmp@plt>
  45e00c:	cbnz	w0, 45e118 <nftw@plt+0x5b598>
  45e010:	ldrb	w0, [x19, #8]
  45e014:	mov	w2, #0x5f                  	// #95
  45e018:	mov	w1, #0x24                  	// #36
  45e01c:	cmp	w0, #0x2e
  45e020:	ccmp	w0, w2, #0x4, ne  // ne = any
  45e024:	ccmp	w0, w1, #0x4, ne  // ne = any
  45e028:	b.ne	45e118 <nftw@plt+0x5b598>  // b.any
  45e02c:	ldrb	w0, [x19, #9]
  45e030:	mov	w1, #0x49                  	// #73
  45e034:	cmp	w0, #0x44
  45e038:	ccmp	w0, w1, #0x4, ne  // ne = any
  45e03c:	b.ne	45e118 <nftw@plt+0x5b598>  // b.any
  45e040:	ldrb	w1, [x19, #10]
  45e044:	cmp	w1, w2
  45e048:	b.ne	45e118 <nftw@plt+0x5b598>  // b.any
  45e04c:	cmp	w0, #0x49
  45e050:	mov	w23, #0x2                   	// #2
  45e054:	mov	w0, #0x3                   	// #3
  45e058:	cset	w22, ne  // ne = any
  45e05c:	csel	w23, w23, w0, eq  // eq = none
  45e060:	mov	x0, x19
  45e064:	bl	4024f0 <strlen@plt>
  45e068:	mov	w1, #0x25                  	// #37
  45e06c:	lsl	w4, w0, #1
  45e070:	add	x2, x19, x0
  45e074:	stp	x19, x2, [x29, #88]
  45e078:	cmp	w4, #0x800
  45e07c:	str	w1, [x29, #104]
  45e080:	str	x19, [x29, #112]
  45e084:	stp	wzr, w4, [x29, #128]
  45e088:	stp	wzr, w0, [x29, #144]
  45e08c:	stp	xzr, xzr, [x29, #152]
  45e090:	str	xzr, [x29, #168]
  45e094:	b.hi	45e118 <nftw@plt+0x5b598>  // b.pmore
  45e098:	mov	x24, sp
  45e09c:	mov	w1, #0x18                  	// #24
  45e0a0:	sbfiz	x3, x0, #3, #32
  45e0a4:	cmp	w22, #0x1
  45e0a8:	add	x3, x3, #0xf
  45e0ac:	smsubl	x0, w4, w1, x24
  45e0b0:	and	x3, x3, #0xfffffffffffffff0
  45e0b4:	mov	sp, x0
  45e0b8:	mov	x22, sp
  45e0bc:	sub	sp, sp, x3
  45e0c0:	mov	x0, sp
  45e0c4:	str	x22, [x29, #120]
  45e0c8:	str	x0, [x29, #136]
  45e0cc:	b.ls	45e16c <nftw@plt+0x5b5ec>  // b.plast
  45e0d0:	add	x0, x29, #0x58
  45e0d4:	mov	w1, #0x1                   	// #1
  45e0d8:	bl	45d250 <nftw@plt+0x5a6d0>
  45e0dc:	mov	x19, x0
  45e0e0:	ldr	x0, [x29, #112]
  45e0e4:	ldrb	w1, [x0]
  45e0e8:	mov	w0, #0x0                   	// #0
  45e0ec:	cmp	w1, #0x0
  45e0f0:	ccmp	x19, #0x0, #0x4, eq  // eq = none
  45e0f4:	b.ne	45e150 <nftw@plt+0x5b5d0>  // b.any
  45e0f8:	mov	sp, x24
  45e0fc:	mov	sp, x29
  45e100:	ldp	x19, x20, [sp, #16]
  45e104:	ldp	x21, x22, [sp, #32]
  45e108:	ldp	x23, x24, [sp, #48]
  45e10c:	ldp	x25, x26, [sp, #64]
  45e110:	ldp	x29, x30, [sp], #176
  45e114:	ret
  45e118:	mov	sp, x29
  45e11c:	mov	w0, #0x0                   	// #0
  45e120:	ldp	x19, x20, [sp, #16]
  45e124:	ldp	x21, x22, [sp, #32]
  45e128:	ldp	x23, x24, [sp, #48]
  45e12c:	ldp	x25, x26, [sp, #64]
  45e130:	ldp	x29, x30, [sp], #176
  45e134:	ret
  45e138:	ldrb	w0, [x19, #1]
  45e13c:	cmp	w0, #0x5a
  45e140:	b.ne	45dff8 <nftw@plt+0x5b478>  // b.any
  45e144:	mov	w22, #0xffffffff            	// #-1
  45e148:	mov	w23, #0x1                   	// #1
  45e14c:	b	45e060 <nftw@plt+0x5b4e0>
  45e150:	mov	x3, x21
  45e154:	mov	x2, x20
  45e158:	mov	x1, x19
  45e15c:	mov	w0, #0x25                  	// #37
  45e160:	bl	45d5f0 <nftw@plt+0x5aa70>
  45e164:	mov	sp, x24
  45e168:	b	45e0fc <nftw@plt+0x5b57c>
  45e16c:	cmp	w23, #0x2
  45e170:	ldrb	w0, [x19, #11]
  45e174:	add	x25, x19, #0xb
  45e178:	str	x25, [x29, #112]
  45e17c:	cset	w23, ne  // ne = any
  45e180:	cmp	w0, #0x5f
  45e184:	add	w23, w23, #0x44
  45e188:	b.ne	45e198 <nftw@plt+0x5b618>  // b.any
  45e18c:	ldrb	w0, [x19, #12]
  45e190:	cmp	w0, #0x5a
  45e194:	b.eq	45e208 <nftw@plt+0x5b688>  // b.none
  45e198:	cmp	w4, #0x0
  45e19c:	b.le	45e1fc <nftw@plt+0x5b67c>
  45e1a0:	mov	x0, x25
  45e1a4:	bl	4024f0 <strlen@plt>
  45e1a8:	mov	w1, #0x1                   	// #1
  45e1ac:	str	wzr, [x22, #4]
  45e1b0:	str	w1, [x29, #128]
  45e1b4:	cmp	w0, #0x0
  45e1b8:	b.le	45e1fc <nftw@plt+0x5b67c>
  45e1bc:	add	x26, x29, #0x58
  45e1c0:	str	wzr, [x22]
  45e1c4:	str	x25, [x22, #8]
  45e1c8:	str	w0, [x22, #16]
  45e1cc:	mov	x2, x22
  45e1d0:	mov	w1, w23
  45e1d4:	mov	x3, #0x0                   	// #0
  45e1d8:	mov	x0, x26
  45e1dc:	bl	44c310 <nftw@plt+0x49790>
  45e1e0:	mov	x19, x0
  45e1e4:	ldr	x22, [x29, #112]
  45e1e8:	mov	x0, x22
  45e1ec:	bl	4024f0 <strlen@plt>
  45e1f0:	add	x0, x22, x0
  45e1f4:	str	x0, [x29, #112]
  45e1f8:	b	45e0e4 <nftw@plt+0x5b564>
  45e1fc:	add	x26, x29, #0x58
  45e200:	mov	x22, #0x0                   	// #0
  45e204:	b	45e1cc <nftw@plt+0x5b64c>
  45e208:	add	x26, x29, #0x58
  45e20c:	add	x19, x19, #0xd
  45e210:	mov	x0, x26
  45e214:	mov	w1, #0x0                   	// #0
  45e218:	str	x19, [x29, #112]
  45e21c:	bl	45c7f0 <nftw@plt+0x59c70>
  45e220:	mov	x22, x0
  45e224:	b	45e1cc <nftw@plt+0x5b64c>
  45e228:	stp	x29, x30, [sp, #-128]!
  45e22c:	mov	x29, sp
  45e230:	stp	x19, x20, [sp, #16]
  45e234:	mov	x19, x0
  45e238:	mov	x20, sp
  45e23c:	bl	4024f0 <strlen@plt>
  45e240:	lsl	w4, w0, #1
  45e244:	mov	w7, #0x18                  	// #24
  45e248:	sbfiz	x3, x0, #3, #32
  45e24c:	add	x3, x3, #0xf
  45e250:	mov	w5, #0x4000                	// #16384
  45e254:	smsubl	x7, w4, w7, x20
  45e258:	and	x3, x3, #0xfffffffffffffff0
  45e25c:	str	w5, [x29, #56]
  45e260:	mov	x2, x0
  45e264:	mov	sp, x7
  45e268:	add	x6, x19, x0
  45e26c:	mov	x5, sp
  45e270:	sub	sp, sp, x3
  45e274:	mov	x3, sp
  45e278:	add	x0, x29, #0x28
  45e27c:	mov	w1, #0x1                   	// #1
  45e280:	stp	x19, x6, [x29, #40]
  45e284:	str	x19, [x29, #64]
  45e288:	str	x5, [x29, #72]
  45e28c:	stp	wzr, w4, [x29, #80]
  45e290:	str	x3, [x29, #88]
  45e294:	stp	wzr, w2, [x29, #96]
  45e298:	stp	xzr, xzr, [x29, #104]
  45e29c:	str	xzr, [x29, #120]
  45e2a0:	bl	45d250 <nftw@plt+0x5a6d0>
  45e2a4:	cbz	x0, 45e310 <nftw@plt+0x5b790>
  45e2a8:	ldr	w1, [x0]
  45e2ac:	cmp	w1, #0x7
  45e2b0:	b.eq	45e2f0 <nftw@plt+0x5b770>  // b.none
  45e2b4:	b.hi	45e2c8 <nftw@plt+0x5b748>  // b.pmore
  45e2b8:	sub	w2, w1, #0x3
  45e2bc:	cmp	w1, #0x2
  45e2c0:	b.hi	45e2e0 <nftw@plt+0x5b760>  // b.pmore
  45e2c4:	cbnz	w1, 45e308 <nftw@plt+0x5b788>
  45e2c8:	mov	sp, x20
  45e2cc:	mov	w0, #0x0                   	// #0
  45e2d0:	mov	sp, x29
  45e2d4:	ldp	x19, x20, [sp, #16]
  45e2d8:	ldp	x29, x30, [sp], #128
  45e2dc:	ret
  45e2e0:	cmp	w2, #0x1
  45e2e4:	b.hi	45e2c8 <nftw@plt+0x5b748>  // b.pmore
  45e2e8:	ldr	x0, [x0, #8]
  45e2ec:	b	45e2a4 <nftw@plt+0x5b724>
  45e2f0:	ldr	w0, [x0, #8]
  45e2f4:	mov	sp, x20
  45e2f8:	mov	sp, x29
  45e2fc:	ldp	x19, x20, [sp, #16]
  45e300:	ldp	x29, x30, [sp], #128
  45e304:	ret
  45e308:	ldr	x0, [x0, #16]
  45e30c:	b	45e2a4 <nftw@plt+0x5b724>
  45e310:	mov	w0, #0x0                   	// #0
  45e314:	mov	sp, x20
  45e318:	b	45e2d0 <nftw@plt+0x5b750>
  45e31c:	nop
  45e320:	stp	x29, x30, [sp, #-128]!
  45e324:	mov	x29, sp
  45e328:	stp	x19, x20, [sp, #16]
  45e32c:	mov	x19, x0
  45e330:	mov	x20, sp
  45e334:	bl	4024f0 <strlen@plt>
  45e338:	lsl	w4, w0, #1
  45e33c:	mov	w7, #0x18                  	// #24
  45e340:	sbfiz	x3, x0, #3, #32
  45e344:	add	x3, x3, #0xf
  45e348:	mov	w5, #0x4000                	// #16384
  45e34c:	smsubl	x7, w4, w7, x20
  45e350:	and	x3, x3, #0xfffffffffffffff0
  45e354:	str	w5, [x29, #56]
  45e358:	mov	x2, x0
  45e35c:	mov	sp, x7
  45e360:	add	x6, x19, x0
  45e364:	mov	x5, sp
  45e368:	sub	sp, sp, x3
  45e36c:	mov	x3, sp
  45e370:	add	x0, x29, #0x28
  45e374:	mov	w1, #0x1                   	// #1
  45e378:	stp	x19, x6, [x29, #40]
  45e37c:	str	x19, [x29, #64]
  45e380:	str	x5, [x29, #72]
  45e384:	stp	wzr, w4, [x29, #80]
  45e388:	str	x3, [x29, #88]
  45e38c:	stp	wzr, w2, [x29, #96]
  45e390:	stp	xzr, xzr, [x29, #104]
  45e394:	str	xzr, [x29, #120]
  45e398:	bl	45d250 <nftw@plt+0x5a6d0>
  45e39c:	cbz	x0, 45e410 <nftw@plt+0x5b890>
  45e3a0:	ldr	w1, [x0]
  45e3a4:	cmp	w1, #0x7
  45e3a8:	b.eq	45e3c0 <nftw@plt+0x5b840>  // b.none
  45e3ac:	b.hi	45e3e8 <nftw@plt+0x5b868>  // b.pmore
  45e3b0:	sub	w2, w1, #0x3
  45e3b4:	cmp	w1, #0x2
  45e3b8:	b.hi	45e3d8 <nftw@plt+0x5b858>  // b.pmore
  45e3bc:	cbnz	w1, 45e408 <nftw@plt+0x5b888>
  45e3c0:	mov	sp, x20
  45e3c4:	mov	w0, #0x0                   	// #0
  45e3c8:	mov	sp, x29
  45e3cc:	ldp	x19, x20, [sp, #16]
  45e3d0:	ldp	x29, x30, [sp], #128
  45e3d4:	ret
  45e3d8:	cmp	w2, #0x1
  45e3dc:	b.hi	45e3c0 <nftw@plt+0x5b840>  // b.pmore
  45e3e0:	ldr	x0, [x0, #8]
  45e3e4:	b	45e39c <nftw@plt+0x5b81c>
  45e3e8:	cmp	w1, #0x8
  45e3ec:	b.ne	45e3c0 <nftw@plt+0x5b840>  // b.any
  45e3f0:	ldr	w0, [x0, #8]
  45e3f4:	mov	sp, x20
  45e3f8:	mov	sp, x29
  45e3fc:	ldp	x19, x20, [sp, #16]
  45e400:	ldp	x29, x30, [sp], #128
  45e404:	ret
  45e408:	ldr	x0, [x0, #16]
  45e40c:	b	45e39c <nftw@plt+0x5b81c>
  45e410:	mov	w0, #0x0                   	// #0
  45e414:	mov	sp, x20
  45e418:	b	45e3c8 <nftw@plt+0x5b848>
  45e41c:	nop
  45e420:	adrp	x1, 481000 <_obstack_memory_used@@Base+0x1fbb8>
  45e424:	str	xzr, [x0, #16]
  45e428:	str	wzr, [x0, #24]
  45e42c:	ldr	q0, [x1, #1296]
  45e430:	str	q0, [x0]
  45e434:	ret
  45e438:	mov	x2, x0
  45e43c:	mov	x0, x1
  45e440:	ldr	q0, [x2]
  45e444:	str	q0, [x1]
  45e448:	ret
  45e44c:	nop
  45e450:	stp	x29, x30, [sp, #-96]!
  45e454:	lsr	x5, x1, #32
  45e458:	mov	x29, sp
  45e45c:	ldp	w4, w3, [x2, #16]
  45e460:	stp	x25, x26, [sp, #64]
  45e464:	and	x26, x1, #0xfffffffffffffffc
  45e468:	add	w4, w4, w1
  45e46c:	add	w3, w3, w5
  45e470:	add	x26, x0, x26
  45e474:	ldr	w10, [x2, #4]
  45e478:	cmp	x1, w4, uxtw
  45e47c:	ldr	s2, [x2]
  45e480:	cinc	w1, w3, hi  // hi = pmore
  45e484:	stp	w4, w1, [x2, #16]
  45e488:	ldp	s0, s1, [x2, #8]
  45e48c:	cmp	x0, x26
  45e490:	b.cs	45ee90 <nftw@plt+0x5c310>  // b.hs, b.nlast
  45e494:	stp	x27, x28, [sp, #80]
  45e498:	mov	w28, #0xa478                	// #42104
  45e49c:	mov	w27, #0xb756                	// #46934
  45e4a0:	movk	w28, #0xd76a, lsl #16
  45e4a4:	movk	w27, #0xe8c7, lsl #16
  45e4a8:	stp	x19, x20, [sp, #16]
  45e4ac:	stp	x21, x22, [sp, #32]
  45e4b0:	stp	x23, x24, [sp, #48]
  45e4b4:	nop
  45e4b8:	eor	v3.8b, v0.8b, v1.8b
  45e4bc:	fmov	w3, s1
  45e4c0:	fmov	w1, s2
  45e4c4:	ldp	w19, w15, [x0]
  45e4c8:	fmov	w7, s0
  45e4cc:	fmov	w4, s3
  45e4d0:	mov	w6, #0x70db                	// #28891
  45e4d4:	add	w1, w1, w28
  45e4d8:	movk	w6, #0x2420, lsl #16
  45e4dc:	ldp	w8, w16, [x0, #8]
  45e4e0:	add	w6, w7, w6
  45e4e4:	and	w4, w4, w10
  45e4e8:	ldr	w14, [x0, #32]
  45e4ec:	eor	w4, w4, w3
  45e4f0:	fmov	w3, s0
  45e4f4:	add	w4, w4, w19
  45e4f8:	add	w4, w4, w1
  45e4fc:	fmov	w1, s1
  45e500:	ldp	w11, w17, [x0, #16]
  45e504:	ror	w4, w4, #25
  45e508:	add	w4, w4, w10
  45e50c:	eor	w3, w10, w3
  45e510:	and	w3, w3, w4
  45e514:	add	w5, w1, w27
  45e518:	eor	w3, w3, w7
  45e51c:	eor	w1, w4, w10
  45e520:	add	w3, w3, w15
  45e524:	mov	w7, #0xceee                	// #52974
  45e528:	add	w3, w3, w5
  45e52c:	mov	w5, #0xfaf                 	// #4015
  45e530:	movk	w5, #0xf57c, lsl #16
  45e534:	add	w25, w11, w5
  45e538:	mov	w5, #0xc62a                	// #50730
  45e53c:	ror	w3, w3, #20
  45e540:	add	w3, w4, w3
  45e544:	movk	w5, #0x4787, lsl #16
  45e548:	and	w1, w1, w3
  45e54c:	add	w23, w17, w5
  45e550:	eor	w1, w1, w10
  45e554:	eor	w5, w4, w3
  45e558:	add	w1, w1, w8
  45e55c:	movk	w7, #0xc1bd, lsl #16
  45e560:	add	w1, w1, w6
  45e564:	add	w9, w10, w7
  45e568:	ldp	w13, w18, [x0, #24]
  45e56c:	ror	w1, w1, #15
  45e570:	add	w1, w3, w1
  45e574:	mov	w7, #0x4613                	// #17939
  45e578:	and	w5, w5, w1
  45e57c:	eor	w21, w3, w1
  45e580:	eor	w5, w5, w4
  45e584:	movk	w7, #0xa830, lsl #16
  45e588:	add	w5, w5, w16
  45e58c:	add	w20, w13, w7
  45e590:	add	w5, w5, w9
  45e594:	mov	w6, #0x9501                	// #38145
  45e598:	movk	w6, #0xfd46, lsl #16
  45e59c:	add	w22, w18, w6
  45e5a0:	mov	w6, #0x98d8                	// #39128
  45e5a4:	ror	w5, w5, #10
  45e5a8:	add	w5, w1, w5
  45e5ac:	movk	w6, #0x6980, lsl #16
  45e5b0:	and	w21, w21, w5
  45e5b4:	eor	w30, w1, w5
  45e5b8:	eor	w21, w21, w3
  45e5bc:	add	w12, w14, w6
  45e5c0:	add	w4, w21, w4
  45e5c4:	ldr	w7, [x0, #36]
  45e5c8:	add	w4, w25, w4
  45e5cc:	mov	w6, #0xf7af                	// #63407
  45e5d0:	movk	w6, #0x8b44, lsl #16
  45e5d4:	add	w24, w7, w6
  45e5d8:	ldr	w6, [x0, #40]
  45e5dc:	ror	w4, w4, #25
  45e5e0:	add	w4, w5, w4
  45e5e4:	mov	w21, #0xffff5bb1            	// #-42063
  45e5e8:	and	w25, w30, w4
  45e5ec:	add	w21, w6, w21
  45e5f0:	eor	w25, w25, w1
  45e5f4:	add	w3, w25, w3
  45e5f8:	eor	w25, w5, w4
  45e5fc:	add	w3, w23, w3
  45e600:	mov	w23, #0xd7be                	// #55230
  45e604:	movk	w23, #0x895c, lsl #16
  45e608:	ror	w3, w3, #20
  45e60c:	add	w3, w4, w3
  45e610:	and	w25, w25, w3
  45e614:	eor	w25, w25, w5
  45e618:	add	w1, w25, w1
  45e61c:	eor	w25, w4, w3
  45e620:	add	w1, w20, w1
  45e624:	ldp	w9, w20, [x0, #44]
  45e628:	ror	w1, w1, #15
  45e62c:	add	w1, w3, w1
  45e630:	and	w25, w25, w1
  45e634:	add	w23, w9, w23
  45e638:	eor	w25, w25, w4
  45e63c:	add	w5, w25, w5
  45e640:	eor	w25, w3, w1
  45e644:	add	w5, w22, w5
  45e648:	mov	w22, #0x1122                	// #4386
  45e64c:	movk	w22, #0x6b90, lsl #16
  45e650:	add	w22, w20, w22
  45e654:	ror	w5, w5, #10
  45e658:	add	w5, w1, w5
  45e65c:	and	w25, w25, w5
  45e660:	eor	w25, w25, w3
  45e664:	add	w4, w25, w4
  45e668:	eor	w25, w1, w5
  45e66c:	add	w4, w12, w4
  45e670:	ldr	w12, [x0, #52]
  45e674:	ror	w4, w4, #25
  45e678:	add	w4, w5, w4
  45e67c:	and	w25, w25, w4
  45e680:	eor	w30, w5, w4
  45e684:	eor	w25, w25, w1
  45e688:	add	w3, w25, w3
  45e68c:	add	w24, w24, w3
  45e690:	mov	w3, #0x7193                	// #29075
  45e694:	movk	w3, #0xfd98, lsl #16
  45e698:	add	w25, w12, w3
  45e69c:	mov	w3, #0x438e                	// #17294
  45e6a0:	ror	w24, w24, #20
  45e6a4:	add	w24, w4, w24
  45e6a8:	movk	w3, #0xa679, lsl #16
  45e6ac:	and	w30, w30, w24
  45e6b0:	eor	w30, w30, w5
  45e6b4:	add	w30, w30, w1
  45e6b8:	eor	w1, w4, w24
  45e6bc:	add	w30, w21, w30
  45e6c0:	ror	w30, w30, #15
  45e6c4:	add	w30, w24, w30
  45e6c8:	and	w1, w1, w30
  45e6cc:	eor	w1, w1, w4
  45e6d0:	add	w5, w1, w5
  45e6d4:	eor	w1, w24, w30
  45e6d8:	add	w23, w23, w5
  45e6dc:	ror	w23, w23, #10
  45e6e0:	add	w23, w30, w23
  45e6e4:	and	w1, w1, w23
  45e6e8:	eor	w1, w1, w24
  45e6ec:	add	w1, w1, w4
  45e6f0:	eor	w4, w30, w23
  45e6f4:	add	w22, w22, w1
  45e6f8:	ldp	w21, w1, [x0, #56]
  45e6fc:	ror	w22, w22, #25
  45e700:	add	w22, w23, w22
  45e704:	add	x0, x0, #0x40
  45e708:	and	w4, w4, w22
  45e70c:	eor	w5, w23, w22
  45e710:	eor	w4, w4, w30
  45e714:	add	w3, w21, w3
  45e718:	add	w24, w4, w24
  45e71c:	mov	w4, #0x821                 	// #2081
  45e720:	add	w25, w25, w24
  45e724:	movk	w4, #0x49b4, lsl #16
  45e728:	add	w4, w1, w4
  45e72c:	cmp	x26, x0
  45e730:	ror	w25, w25, #20
  45e734:	add	w25, w22, w25
  45e738:	and	w5, w5, w25
  45e73c:	eor	w5, w5, w23
  45e740:	add	w30, w5, w30
  45e744:	eor	w5, w22, w25
  45e748:	add	w30, w3, w30
  45e74c:	mov	w3, #0x2562                	// #9570
  45e750:	movk	w3, #0xf61e, lsl #16
  45e754:	add	w24, w15, w3
  45e758:	ror	w30, w30, #15
  45e75c:	add	w30, w25, w30
  45e760:	and	w3, w5, w30
  45e764:	eor	w3, w3, w22
  45e768:	add	w23, w3, w23
  45e76c:	mov	w3, #0xb340                	// #45888
  45e770:	add	w23, w4, w23
  45e774:	movk	w3, #0xc040, lsl #16
  45e778:	add	w5, w13, w3
  45e77c:	mov	w3, #0x5a51                	// #23121
  45e780:	movk	w3, #0x265e, lsl #16
  45e784:	ror	w23, w23, #10
  45e788:	add	w23, w30, w23
  45e78c:	add	w4, w9, w3
  45e790:	eor	w3, w30, w23
  45e794:	and	w3, w3, w25
  45e798:	eor	w3, w3, w30
  45e79c:	add	w22, w3, w22
  45e7a0:	mov	w3, #0xc7aa                	// #51114
  45e7a4:	add	w24, w24, w22
  45e7a8:	movk	w3, #0xe9b6, lsl #16
  45e7ac:	add	w22, w19, w3
  45e7b0:	ror	w24, w24, #27
  45e7b4:	add	w24, w23, w24
  45e7b8:	eor	w3, w23, w24
  45e7bc:	and	w3, w3, w30
  45e7c0:	eor	w3, w3, w23
  45e7c4:	add	w25, w3, w25
  45e7c8:	mov	w3, #0x105d                	// #4189
  45e7cc:	add	w5, w5, w25
  45e7d0:	movk	w3, #0xd62f, lsl #16
  45e7d4:	add	w3, w17, w3
  45e7d8:	ror	w5, w5, #23
  45e7dc:	add	w5, w24, w5
  45e7e0:	eor	w25, w24, w5
  45e7e4:	and	w25, w25, w23
  45e7e8:	eor	w25, w25, w24
  45e7ec:	add	w30, w25, w30
  45e7f0:	add	w30, w4, w30
  45e7f4:	mov	w4, #0x1453                	// #5203
  45e7f8:	movk	w4, #0x244, lsl #16
  45e7fc:	add	w25, w6, w4
  45e800:	ror	w30, w30, #18
  45e804:	add	w30, w5, w30
  45e808:	eor	w4, w5, w30
  45e80c:	and	w4, w4, w24
  45e810:	eor	w4, w4, w5
  45e814:	add	w23, w4, w23
  45e818:	mov	w4, #0xe681                	// #59009
  45e81c:	add	w22, w22, w23
  45e820:	movk	w4, #0xd8a1, lsl #16
  45e824:	add	w4, w1, w4
  45e828:	ror	w22, w22, #12
  45e82c:	add	w22, w30, w22
  45e830:	eor	w23, w30, w22
  45e834:	and	w23, w23, w5
  45e838:	eor	w23, w23, w30
  45e83c:	add	w24, w23, w24
  45e840:	add	w24, w3, w24
  45e844:	mov	w3, #0xfbc8                	// #64456
  45e848:	movk	w3, #0xe7d3, lsl #16
  45e84c:	add	w23, w11, w3
  45e850:	ror	w24, w24, #27
  45e854:	add	w24, w22, w24
  45e858:	eor	w3, w22, w24
  45e85c:	and	w3, w3, w30
  45e860:	eor	w3, w3, w22
  45e864:	add	w5, w3, w5
  45e868:	mov	w3, #0xcde6                	// #52710
  45e86c:	add	w25, w25, w5
  45e870:	movk	w3, #0x21e1, lsl #16
  45e874:	add	w3, w7, w3
  45e878:	ror	w25, w25, #23
  45e87c:	add	w25, w24, w25
  45e880:	eor	w5, w24, w25
  45e884:	and	w5, w5, w22
  45e888:	eor	w5, w5, w24
  45e88c:	add	w30, w5, w30
  45e890:	add	w30, w4, w30
  45e894:	mov	w4, #0x7d6                 	// #2006
  45e898:	movk	w4, #0xc337, lsl #16
  45e89c:	add	w5, w21, w4
  45e8a0:	ror	w30, w30, #18
  45e8a4:	add	w30, w25, w30
  45e8a8:	eor	w4, w25, w30
  45e8ac:	and	w4, w4, w24
  45e8b0:	eor	w4, w4, w25
  45e8b4:	add	w22, w4, w22
  45e8b8:	mov	w4, #0xd87                 	// #3463
  45e8bc:	add	w23, w23, w22
  45e8c0:	movk	w4, #0xf4d5, lsl #16
  45e8c4:	add	w4, w16, w4
  45e8c8:	ror	w23, w23, #12
  45e8cc:	add	w23, w30, w23
  45e8d0:	eor	w22, w30, w23
  45e8d4:	and	w22, w22, w25
  45e8d8:	eor	w22, w22, w30
  45e8dc:	add	w24, w22, w24
  45e8e0:	mov	w22, #0x14ed                	// #5357
  45e8e4:	add	w24, w3, w24
  45e8e8:	movk	w22, #0x455a, lsl #16
  45e8ec:	add	w22, w14, w22
  45e8f0:	ror	w24, w24, #27
  45e8f4:	add	w24, w23, w24
  45e8f8:	eor	w3, w23, w24
  45e8fc:	and	w3, w3, w30
  45e900:	eor	w3, w3, w23
  45e904:	add	w25, w3, w25
  45e908:	mov	w3, #0xe905                	// #59653
  45e90c:	add	w5, w5, w25
  45e910:	movk	w3, #0xa9e3, lsl #16
  45e914:	add	w3, w12, w3
  45e918:	ror	w5, w5, #23
  45e91c:	add	w5, w24, w5
  45e920:	eor	w25, w24, w5
  45e924:	and	w25, w25, w23
  45e928:	eor	w25, w25, w24
  45e92c:	add	w30, w25, w30
  45e930:	mov	w25, #0xa3f8                	// #41976
  45e934:	add	w4, w4, w30
  45e938:	movk	w25, #0xfcef, lsl #16
  45e93c:	add	w25, w8, w25
  45e940:	ror	w4, w4, #18
  45e944:	add	w4, w5, w4
  45e948:	eor	w30, w5, w4
  45e94c:	and	w30, w30, w24
  45e950:	eor	w30, w30, w5
  45e954:	add	w23, w30, w23
  45e958:	mov	w30, #0x2d9                 	// #729
  45e95c:	add	w23, w22, w23
  45e960:	movk	w30, #0x676f, lsl #16
  45e964:	add	w30, w18, w30
  45e968:	ror	w23, w23, #12
  45e96c:	add	w23, w4, w23
  45e970:	eor	w22, w4, w23
  45e974:	and	w22, w22, w5
  45e978:	eor	w22, w22, w4
  45e97c:	add	w24, w22, w24
  45e980:	mov	w22, #0x4c8a                	// #19594
  45e984:	add	w3, w3, w24
  45e988:	movk	w22, #0x8d2a, lsl #16
  45e98c:	add	w22, w20, w22
  45e990:	ror	w3, w3, #27
  45e994:	add	w3, w23, w3
  45e998:	eor	w24, w23, w3
  45e99c:	and	w24, w24, w4
  45e9a0:	eor	w24, w24, w23
  45e9a4:	add	w5, w24, w5
  45e9a8:	add	w25, w25, w5
  45e9ac:	sub	w5, w17, #0x5c, lsl #12
  45e9b0:	sub	w5, w5, #0x6be
  45e9b4:	ror	w25, w25, #23
  45e9b8:	add	w25, w3, w25
  45e9bc:	eor	w24, w3, w25
  45e9c0:	and	w24, w24, w23
  45e9c4:	eor	w24, w24, w3
  45e9c8:	add	w4, w24, w4
  45e9cc:	add	w4, w30, w4
  45e9d0:	ror	w24, w4, #18
  45e9d4:	add	w24, w25, w24
  45e9d8:	eor	w4, w25, w24
  45e9dc:	and	w30, w4, w3
  45e9e0:	eor	w30, w30, w25
  45e9e4:	add	w23, w30, w23
  45e9e8:	mov	w30, #0xf681                	// #63105
  45e9ec:	add	w22, w22, w23
  45e9f0:	movk	w30, #0x8771, lsl #16
  45e9f4:	add	w30, w14, w30
  45e9f8:	ror	w22, w22, #12
  45e9fc:	add	w22, w24, w22
  45ea00:	eor	w4, w4, w22
  45ea04:	add	w3, w4, w3
  45ea08:	eor	w4, w24, w22
  45ea0c:	add	w23, w5, w3
  45ea10:	mov	w3, #0x6122                	// #24866
  45ea14:	movk	w3, #0x6d9d, lsl #16
  45ea18:	add	w3, w9, w3
  45ea1c:	mov	w5, #0x380c                	// #14348
  45ea20:	ror	w23, w23, #28
  45ea24:	add	w23, w22, w23
  45ea28:	movk	w5, #0xfde5, lsl #16
  45ea2c:	eor	w4, w4, w23
  45ea30:	add	w5, w21, w5
  45ea34:	add	w25, w4, w25
  45ea38:	eor	w4, w22, w23
  45ea3c:	add	w30, w30, w25
  45ea40:	mov	w25, #0xea44                	// #59972
  45ea44:	movk	w25, #0xa4be, lsl #16
  45ea48:	add	w25, w15, w25
  45ea4c:	ror	w30, w30, #21
  45ea50:	add	w30, w23, w30
  45ea54:	eor	w4, w4, w30
  45ea58:	add	w4, w4, w24
  45ea5c:	eor	w24, w23, w30
  45ea60:	add	w4, w3, w4
  45ea64:	ror	w4, w4, #16
  45ea68:	add	w4, w30, w4
  45ea6c:	eor	w3, w24, w4
  45ea70:	mov	w24, #0x4b60                	// #19296
  45ea74:	add	w3, w3, w22
  45ea78:	eor	w22, w30, w4
  45ea7c:	add	w5, w5, w3
  45ea80:	mov	w3, #0xcfa9                	// #53161
  45ea84:	movk	w3, #0x4bde, lsl #16
  45ea88:	add	w3, w11, w3
  45ea8c:	movk	w24, #0xf6bb, lsl #16
  45ea90:	ror	w5, w5, #9
  45ea94:	add	w5, w4, w5
  45ea98:	add	w24, w18, w24
  45ea9c:	eor	w22, w22, w5
  45eaa0:	add	w23, w22, w23
  45eaa4:	eor	w22, w4, w5
  45eaa8:	add	w25, w25, w23
  45eaac:	mov	w23, #0xbc70                	// #48240
  45eab0:	movk	w23, #0xbebf, lsl #16
  45eab4:	add	w23, w6, w23
  45eab8:	sub	w6, w6, #0x100, lsl #12
  45eabc:	ror	w25, w25, #28
  45eac0:	add	w25, w5, w25
  45eac4:	sub	w6, w6, #0xb83
  45eac8:	eor	w22, w22, w25
  45eacc:	add	w30, w22, w30
  45ead0:	eor	w22, w5, w25
  45ead4:	add	w3, w3, w30
  45ead8:	mov	w30, #0x27fa                	// #10234
  45eadc:	movk	w30, #0xeaa1, lsl #16
  45eae0:	add	w30, w19, w30
  45eae4:	ror	w3, w3, #21
  45eae8:	add	w3, w25, w3
  45eaec:	eor	w22, w22, w3
  45eaf0:	add	w22, w22, w4
  45eaf4:	eor	w4, w25, w3
  45eaf8:	add	w24, w24, w22
  45eafc:	mov	w22, #0x7ec6                	// #32454
  45eb00:	movk	w22, #0x289b, lsl #16
  45eb04:	add	w22, w12, w22
  45eb08:	ror	w24, w24, #16
  45eb0c:	add	w24, w3, w24
  45eb10:	eor	w4, w4, w24
  45eb14:	add	w5, w4, w5
  45eb18:	eor	w4, w3, w24
  45eb1c:	add	w23, w23, w5
  45eb20:	ror	w23, w23, #9
  45eb24:	add	w23, w24, w23
  45eb28:	eor	w4, w4, w23
  45eb2c:	eor	w5, w24, w23
  45eb30:	add	w25, w4, w25
  45eb34:	mov	w4, #0x3085                	// #12421
  45eb38:	add	w22, w22, w25
  45eb3c:	movk	w4, #0xd4ef, lsl #16
  45eb40:	add	w4, w16, w4
  45eb44:	mov	w25, #0xd039                	// #53305
  45eb48:	movk	w25, #0xd9d4, lsl #16
  45eb4c:	ror	w22, w22, #28
  45eb50:	add	w22, w23, w22
  45eb54:	add	w25, w7, w25
  45eb58:	eor	w5, w5, w22
  45eb5c:	add	w5, w5, w3
  45eb60:	eor	w3, w23, w22
  45eb64:	add	w5, w30, w5
  45eb68:	mov	w30, #0x1d05                	// #7429
  45eb6c:	movk	w30, #0x488, lsl #16
  45eb70:	add	w30, w13, w30
  45eb74:	ror	w5, w5, #21
  45eb78:	add	w5, w22, w5
  45eb7c:	eor	w3, w3, w5
  45eb80:	add	w24, w3, w24
  45eb84:	eor	w3, w22, w5
  45eb88:	add	w4, w4, w24
  45eb8c:	mov	w24, #0x99e5                	// #39397
  45eb90:	movk	w24, #0xe6db, lsl #16
  45eb94:	add	w24, w20, w24
  45eb98:	ror	w4, w4, #16
  45eb9c:	add	w4, w5, w4
  45eba0:	eor	w3, w3, w4
  45eba4:	add	w23, w3, w23
  45eba8:	eor	w3, w5, w4
  45ebac:	add	w23, w30, w23
  45ebb0:	mov	w30, #0xff97                	// #65431
  45ebb4:	movk	w30, #0x432a, lsl #16
  45ebb8:	add	w18, w18, w30
  45ebbc:	ror	w23, w23, #9
  45ebc0:	add	w23, w4, w23
  45ebc4:	eor	w3, w3, w23
  45ebc8:	add	w22, w3, w22
  45ebcc:	eor	w3, w4, w23
  45ebd0:	add	w22, w25, w22
  45ebd4:	mov	w25, #0x7cf8                	// #31992
  45ebd8:	movk	w25, #0x1fa2, lsl #16
  45ebdc:	add	w25, w1, w25
  45ebe0:	ror	w22, w22, #28
  45ebe4:	add	w22, w23, w22
  45ebe8:	eor	w3, w3, w22
  45ebec:	add	w5, w3, w5
  45ebf0:	eor	w3, w23, w22
  45ebf4:	add	w5, w24, w5
  45ebf8:	mov	w24, #0x5665                	// #22117
  45ebfc:	movk	w24, #0xc4ac, lsl #16
  45ec00:	add	w24, w8, w24
  45ec04:	ror	w5, w5, #21
  45ec08:	add	w5, w22, w5
  45ec0c:	eor	w3, w3, w5
  45ec10:	add	w3, w3, w4
  45ec14:	eor	w4, w22, w5
  45ec18:	add	w3, w25, w3
  45ec1c:	mov	w25, #0x2244                	// #8772
  45ec20:	movk	w25, #0xf429, lsl #16
  45ec24:	add	w19, w19, w25
  45ec28:	mov	w25, #0x23a7                	// #9127
  45ec2c:	ror	w3, w3, #16
  45ec30:	add	w3, w5, w3
  45ec34:	movk	w25, #0xab94, lsl #16
  45ec38:	eor	w4, w4, w3
  45ec3c:	add	w21, w21, w25
  45ec40:	add	w23, w4, w23
  45ec44:	mov	w4, #0xa039                	// #41017
  45ec48:	add	w24, w24, w23
  45ec4c:	movk	w4, #0xfc93, lsl #16
  45ec50:	add	w17, w17, w4
  45ec54:	mov	w4, #0x59c3                	// #22979
  45ec58:	movk	w4, #0x655b, lsl #16
  45ec5c:	ror	w24, w24, #9
  45ec60:	add	w24, w3, w24
  45ec64:	add	w20, w20, w4
  45ec68:	orn	w4, w24, w5
  45ec6c:	mov	w23, #0xcc92                	// #52370
  45ec70:	eor	w4, w4, w3
  45ec74:	movk	w23, #0x8f0c, lsl #16
  45ec78:	add	w22, w4, w22
  45ec7c:	mov	w4, #0x5dd1                	// #24017
  45ec80:	add	w19, w19, w22
  45ec84:	movk	w4, #0x8584, lsl #16
  45ec88:	add	w15, w15, w4
  45ec8c:	mov	w4, #0x7e4f                	// #32335
  45ec90:	movk	w4, #0x6fa8, lsl #16
  45ec94:	ror	w19, w19, #26
  45ec98:	add	w19, w24, w19
  45ec9c:	add	w14, w14, w4
  45eca0:	orn	w22, w19, w3
  45eca4:	mov	w4, #0xe6e0                	// #59104
  45eca8:	movk	w4, #0xfe2c, lsl #16
  45ecac:	add	w4, w1, w4
  45ecb0:	eor	w1, w22, w24
  45ecb4:	add	w16, w16, w23
  45ecb8:	add	w5, w1, w5
  45ecbc:	mov	w22, #0x4314                	// #17172
  45ecc0:	add	w18, w18, w5
  45ecc4:	movk	w22, #0xa301, lsl #16
  45ecc8:	add	w13, w13, w22
  45eccc:	mov	w1, #0x11a1                	// #4513
  45ecd0:	movk	w1, #0x4e08, lsl #16
  45ecd4:	ror	w18, w18, #22
  45ecd8:	add	w18, w19, w18
  45ecdc:	add	w12, w12, w1
  45ece0:	orn	w5, w18, w24
  45ece4:	mov	w1, #0x7e82                	// #32386
  45ece8:	eor	w5, w5, w19
  45ecec:	movk	w1, #0xf753, lsl #16
  45ecf0:	add	w3, w5, w3
  45ecf4:	add	w1, w11, w1
  45ecf8:	add	w21, w21, w3
  45ecfc:	mov	w3, #0xd391                	// #54161
  45ed00:	movk	w3, #0xeb86, lsl #16
  45ed04:	add	w7, w7, w3
  45ed08:	mov	w11, #0xf235                	// #62005
  45ed0c:	ror	w21, w21, #17
  45ed10:	add	w21, w18, w21
  45ed14:	movk	w11, #0xbd3a, lsl #16
  45ed18:	orn	w3, w21, w19
  45ed1c:	add	w9, w9, w11
  45ed20:	eor	w3, w3, w18
  45ed24:	mov	w5, #0xd2bb                	// #53947
  45ed28:	add	w24, w3, w24
  45ed2c:	movk	w5, #0x2ad7, lsl #16
  45ed30:	add	w17, w17, w24
  45ed34:	add	w8, w8, w5
  45ed38:	ror	w17, w17, #11
  45ed3c:	add	w17, w21, w17
  45ed40:	orn	w3, w17, w18
  45ed44:	eor	w3, w3, w21
  45ed48:	add	w19, w3, w19
  45ed4c:	add	w20, w20, w19
  45ed50:	ror	w20, w20, #26
  45ed54:	add	w20, w17, w20
  45ed58:	orn	w3, w20, w21
  45ed5c:	eor	w3, w3, w17
  45ed60:	add	w18, w3, w18
  45ed64:	add	w16, w16, w18
  45ed68:	ror	w16, w16, #22
  45ed6c:	add	w16, w20, w16
  45ed70:	orn	w3, w16, w17
  45ed74:	eor	w3, w3, w20
  45ed78:	add	w21, w3, w21
  45ed7c:	add	w6, w6, w21
  45ed80:	ror	w6, w6, #17
  45ed84:	add	w6, w16, w6
  45ed88:	orn	w3, w6, w20
  45ed8c:	eor	w3, w3, w16
  45ed90:	add	w17, w3, w17
  45ed94:	add	w15, w15, w17
  45ed98:	ror	w15, w15, #11
  45ed9c:	add	w15, w6, w15
  45eda0:	orn	w3, w15, w16
  45eda4:	eor	w3, w3, w6
  45eda8:	add	w20, w3, w20
  45edac:	add	w14, w14, w20
  45edb0:	ror	w14, w14, #26
  45edb4:	add	w14, w15, w14
  45edb8:	orn	w3, w14, w6
  45edbc:	eor	w3, w3, w15
  45edc0:	add	w16, w3, w16
  45edc4:	add	w4, w4, w16
  45edc8:	ror	w4, w4, #22
  45edcc:	add	w4, w14, w4
  45edd0:	orn	w3, w4, w15
  45edd4:	eor	w3, w3, w14
  45edd8:	add	w6, w3, w6
  45eddc:	add	w13, w13, w6
  45ede0:	ror	w13, w13, #17
  45ede4:	add	w13, w4, w13
  45ede8:	orn	w3, w13, w14
  45edec:	eor	w3, w3, w4
  45edf0:	add	w15, w3, w15
  45edf4:	add	w12, w12, w15
  45edf8:	ror	w12, w12, #11
  45edfc:	add	w12, w13, w12
  45ee00:	orn	w3, w12, w4
  45ee04:	eor	w3, w3, w13
  45ee08:	add	w14, w3, w14
  45ee0c:	add	w1, w1, w14
  45ee10:	ror	w1, w1, #26
  45ee14:	add	w1, w12, w1
  45ee18:	fmov	s3, w1
  45ee1c:	orn	w3, w1, w13
  45ee20:	eor	w3, w3, w12
  45ee24:	add	v2.2s, v2.2s, v3.2s
  45ee28:	add	w4, w3, w4
  45ee2c:	add	w9, w9, w4
  45ee30:	ror	w9, w9, #22
  45ee34:	add	w9, w1, w9
  45ee38:	fmov	s3, w9
  45ee3c:	orn	w3, w9, w12
  45ee40:	eor	w3, w3, w1
  45ee44:	add	v1.2s, v1.2s, v3.2s
  45ee48:	add	w13, w3, w13
  45ee4c:	add	w8, w8, w13
  45ee50:	ror	w8, w8, #17
  45ee54:	add	w8, w9, w8
  45ee58:	fmov	s3, w8
  45ee5c:	orn	w1, w8, w1
  45ee60:	eor	w1, w1, w9
  45ee64:	add	v0.2s, v0.2s, v3.2s
  45ee68:	add	w1, w1, w12
  45ee6c:	add	w7, w7, w1
  45ee70:	ror	w7, w7, #11
  45ee74:	add	w8, w8, w7
  45ee78:	add	w10, w10, w8
  45ee7c:	b.hi	45e4b8 <nftw@plt+0x5b938>  // b.pmore
  45ee80:	ldp	x19, x20, [sp, #16]
  45ee84:	ldp	x21, x22, [sp, #32]
  45ee88:	ldp	x23, x24, [sp, #48]
  45ee8c:	ldp	x27, x28, [sp, #80]
  45ee90:	mov	v2.s[1], w10
  45ee94:	ldp	x25, x26, [sp, #64]
  45ee98:	ldp	x29, x30, [sp], #96
  45ee9c:	mov	v2.s[2], v0.s[0]
  45eea0:	mov	v2.s[3], v1.s[0]
  45eea4:	str	q2, [x2]
  45eea8:	ret
  45eeac:	nop
  45eeb0:	stp	x29, x30, [sp, #-48]!
  45eeb4:	mov	x29, sp
  45eeb8:	stp	x19, x20, [sp, #16]
  45eebc:	mov	x19, x0
  45eec0:	ldr	w0, [x0, #16]
  45eec4:	stp	x21, x22, [sp, #32]
  45eec8:	mov	x22, x1
  45eecc:	ldr	w20, [x19, #24]
  45eed0:	adds	w0, w0, w20
  45eed4:	str	w0, [x19, #16]
  45eed8:	b.cc	45eee8 <nftw@plt+0x5c368>  // b.lo, b.ul, b.last
  45eedc:	ldr	w0, [x19, #20]
  45eee0:	add	w0, w0, #0x1
  45eee4:	str	w0, [x19, #20]
  45eee8:	cmp	w20, #0x38
  45eeec:	mov	w21, w20
  45eef0:	mov	w1, #0x78                  	// #120
  45eef4:	mov	w2, #0x38                  	// #56
  45eef8:	sub	w1, w1, w20
  45eefc:	sub	w2, w2, w20
  45ef00:	csel	x20, x2, x1, cc  // cc = lo, ul, last
  45ef04:	add	x0, x21, #0x1c
  45ef08:	mov	x2, x20
  45ef0c:	add	x0, x19, x0
  45ef10:	add	x20, x20, x21
  45ef14:	adrp	x1, 481000 <_obstack_memory_used@@Base+0x1fbb8>
  45ef18:	add	x1, x1, #0x520
  45ef1c:	bl	402490 <memcpy@plt>
  45ef20:	ldr	w5, [x19, #16]
  45ef24:	add	x4, x19, x20
  45ef28:	add	x1, x20, #0x8
  45ef2c:	mov	x2, x19
  45ef30:	add	x0, x19, #0x1c
  45ef34:	lsl	w3, w5, #3
  45ef38:	str	w3, [x4, #28]
  45ef3c:	ldr	w3, [x19, #20]
  45ef40:	extr	w3, w3, w5, #29
  45ef44:	str	w3, [x4, #32]
  45ef48:	bl	45e450 <nftw@plt+0x5b8d0>
  45ef4c:	ldr	q0, [x19]
  45ef50:	mov	x0, x22
  45ef54:	str	q0, [x22]
  45ef58:	ldp	x19, x20, [sp, #16]
  45ef5c:	ldp	x21, x22, [sp, #32]
  45ef60:	ldp	x29, x30, [sp], #48
  45ef64:	ret
  45ef68:	stp	x29, x30, [sp, #-80]!
  45ef6c:	mov	x29, sp
  45ef70:	stp	x21, x22, [sp, #32]
  45ef74:	mov	x21, x1
  45ef78:	ldr	w22, [x2, #24]
  45ef7c:	stp	x19, x20, [sp, #16]
  45ef80:	mov	x19, x0
  45ef84:	stp	x23, x24, [sp, #48]
  45ef88:	mov	x24, x2
  45ef8c:	cbnz	w22, 45f054 <nftw@plt+0x5c4d4>
  45ef90:	cmp	x21, #0x40
  45ef94:	b.ls	45f03c <nftw@plt+0x5c4bc>  // b.plast
  45ef98:	tst	x19, #0x3
  45ef9c:	b.eq	45f024 <nftw@plt+0x5c4a4>  // b.none
  45efa0:	sub	x23, x21, #0x41
  45efa4:	add	x20, x24, #0x1c
  45efa8:	lsr	x23, x23, #6
  45efac:	add	x22, x23, #0x1
  45efb0:	add	x22, x19, x22, lsl #6
  45efb4:	nop
  45efb8:	ldp	x0, x1, [x19]
  45efbc:	stp	x0, x1, [x20]
  45efc0:	mov	x2, x24
  45efc4:	ldp	x0, x1, [x19, #16]
  45efc8:	stp	x0, x1, [x20, #16]
  45efcc:	ldp	x4, x5, [x19, #32]
  45efd0:	stp	x4, x5, [x20, #32]
  45efd4:	mov	x1, #0x40                  	// #64
  45efd8:	ldp	x4, x5, [x19, #48]
  45efdc:	stp	x4, x5, [x20, #48]
  45efe0:	add	x19, x19, x1
  45efe4:	mov	x0, x20
  45efe8:	bl	45e450 <nftw@plt+0x5b8d0>
  45efec:	cmp	x19, x22
  45eff0:	b.ne	45efb8 <nftw@plt+0x5c438>  // b.any
  45eff4:	sub	x21, x21, #0x40
  45eff8:	sub	x21, x21, x23, lsl #6
  45effc:	mov	x1, x22
  45f000:	mov	x2, x21
  45f004:	mov	x0, x20
  45f008:	bl	402490 <memcpy@plt>
  45f00c:	str	w21, [x24, #24]
  45f010:	ldp	x19, x20, [sp, #16]
  45f014:	ldp	x21, x22, [sp, #32]
  45f018:	ldp	x23, x24, [sp, #48]
  45f01c:	ldp	x29, x30, [sp], #80
  45f020:	ret
  45f024:	and	x1, x21, #0xffffffffffffffc0
  45f028:	mov	x0, x19
  45f02c:	and	x21, x21, #0x3f
  45f030:	add	x19, x19, x1
  45f034:	mov	x2, x24
  45f038:	bl	45e450 <nftw@plt+0x5b8d0>
  45f03c:	cbnz	x21, 45f0e4 <nftw@plt+0x5c564>
  45f040:	ldp	x19, x20, [sp, #16]
  45f044:	ldp	x21, x22, [sp, #32]
  45f048:	ldp	x23, x24, [sp, #48]
  45f04c:	ldp	x29, x30, [sp], #80
  45f050:	ret
  45f054:	mov	w3, w22
  45f058:	mov	x20, #0x80                  	// #128
  45f05c:	sub	x20, x20, x3
  45f060:	add	x0, x3, #0x1c
  45f064:	cmp	x20, x1
  45f068:	add	x0, x2, x0
  45f06c:	csel	x20, x20, x1, ls  // ls = plast
  45f070:	mov	x1, x19
  45f074:	add	x23, x3, x20
  45f078:	mov	x2, x20
  45f07c:	bl	402490 <memcpy@plt>
  45f080:	ldr	w0, [x24, #24]
  45f084:	cmp	x23, #0x40
  45f088:	add	w0, w0, w20
  45f08c:	str	w0, [x24, #24]
  45f090:	b.hi	45f0a0 <nftw@plt+0x5c520>  // b.pmore
  45f094:	add	x19, x19, x20
  45f098:	sub	x21, x21, x20
  45f09c:	b	45ef90 <nftw@plt+0x5c410>
  45f0a0:	stp	x25, x26, [sp, #64]
  45f0a4:	add	x26, x24, #0x1c
  45f0a8:	and	x25, x23, #0xffffffffffffffc0
  45f0ac:	mov	x0, x26
  45f0b0:	mov	x1, x25
  45f0b4:	mov	x2, x24
  45f0b8:	bl	45e450 <nftw@plt+0x5b8d0>
  45f0bc:	add	x1, x25, #0x1c
  45f0c0:	add	w22, w22, w20
  45f0c4:	mov	x0, x26
  45f0c8:	add	x1, x24, x1
  45f0cc:	and	x2, x23, #0x3f
  45f0d0:	and	w22, w22, #0x3f
  45f0d4:	bl	402490 <memcpy@plt>
  45f0d8:	ldp	x25, x26, [sp, #64]
  45f0dc:	str	w22, [x24, #24]
  45f0e0:	b	45f094 <nftw@plt+0x5c514>
  45f0e4:	mov	x22, x19
  45f0e8:	add	x20, x24, #0x1c
  45f0ec:	b	45effc <nftw@plt+0x5c47c>
  45f0f0:	mov	x12, #0x1120                	// #4384
  45f0f4:	sub	sp, sp, x12
  45f0f8:	adrp	x2, 481000 <_obstack_memory_used@@Base+0x1fbb8>
  45f0fc:	stp	x29, x30, [sp]
  45f100:	mov	x29, sp
  45f104:	ldr	q0, [x2, #1296]
  45f108:	stp	x19, x20, [sp, #16]
  45f10c:	mov	x20, x0
  45f110:	stp	x21, x22, [sp, #32]
  45f114:	mov	x22, x1
  45f118:	mov	x21, #0x1000                	// #4096
  45f11c:	str	xzr, [sp, #64]
  45f120:	str	wzr, [sp, #72]
  45f124:	str	q0, [sp, #48]
  45f128:	mov	x19, #0x0                   	// #0
  45f12c:	nop
  45f130:	add	x0, sp, #0xd8
  45f134:	sub	x2, x21, x19
  45f138:	add	x0, x0, x19
  45f13c:	mov	x3, x20
  45f140:	mov	x1, #0x1                   	// #1
  45f144:	bl	4028d0 <fread@plt>
  45f148:	add	x19, x19, x0
  45f14c:	cmp	x19, #0xfff
  45f150:	ccmp	x0, #0x0, #0x4, ls  // ls = plast
  45f154:	b.ne	45f130 <nftw@plt+0x5c5b0>  // b.any
  45f158:	cbz	x0, 45f170 <nftw@plt+0x5c5f0>
  45f15c:	add	x2, sp, #0x30
  45f160:	add	x0, sp, #0xd8
  45f164:	mov	x1, #0x1000                	// #4096
  45f168:	bl	45e450 <nftw@plt+0x5b8d0>
  45f16c:	b	45f128 <nftw@plt+0x5c5a8>
  45f170:	mov	x0, x20
  45f174:	bl	402b70 <ferror@plt>
  45f178:	mov	w20, w0
  45f17c:	cbnz	w0, 45f1b0 <nftw@plt+0x5c630>
  45f180:	add	x21, sp, #0x30
  45f184:	cbnz	x19, 45f1d0 <nftw@plt+0x5c650>
  45f188:	mov	x1, x22
  45f18c:	mov	x0, x21
  45f190:	bl	45eeb0 <nftw@plt+0x5c330>
  45f194:	mov	w0, w20
  45f198:	mov	x12, #0x1120                	// #4384
  45f19c:	ldp	x29, x30, [sp]
  45f1a0:	ldp	x19, x20, [sp, #16]
  45f1a4:	ldp	x21, x22, [sp, #32]
  45f1a8:	add	sp, sp, x12
  45f1ac:	ret
  45f1b0:	mov	w20, #0x1                   	// #1
  45f1b4:	mov	x12, #0x1120                	// #4384
  45f1b8:	mov	w0, w20
  45f1bc:	ldp	x29, x30, [sp]
  45f1c0:	ldp	x19, x20, [sp, #16]
  45f1c4:	ldp	x21, x22, [sp, #32]
  45f1c8:	add	sp, sp, x12
  45f1cc:	ret
  45f1d0:	mov	x1, x19
  45f1d4:	add	x0, sp, #0xd8
  45f1d8:	mov	x2, x21
  45f1dc:	bl	45ef68 <nftw@plt+0x5c3e8>
  45f1e0:	b	45f188 <nftw@plt+0x5c608>
  45f1e4:	nop
  45f1e8:	stp	x29, x30, [sp, #-240]!
  45f1ec:	adrp	x3, 481000 <_obstack_memory_used@@Base+0x1fbb8>
  45f1f0:	cmp	x1, #0x40
  45f1f4:	mov	x29, sp
  45f1f8:	ldr	q0, [x3, #1296]
  45f1fc:	stp	x19, x20, [sp, #16]
  45f200:	mov	x20, x1
  45f204:	stp	x21, x22, [sp, #32]
  45f208:	mov	x19, x0
  45f20c:	mov	x22, x2
  45f210:	stp	x23, x24, [sp, #48]
  45f214:	str	xzr, [sp, #96]
  45f218:	str	wzr, [sp, #104]
  45f21c:	str	q0, [sp, #80]
  45f220:	b.ls	45f2d8 <nftw@plt+0x5c758>  // b.plast
  45f224:	tst	x0, #0x3
  45f228:	b.eq	45f358 <nftw@plt+0x5c7d8>  // b.none
  45f22c:	str	x25, [sp, #64]
  45f230:	sub	x25, x1, #0x41
  45f234:	add	x23, sp, #0x50
  45f238:	lsr	x25, x25, #6
  45f23c:	add	x21, x23, #0x1c
  45f240:	add	x24, x25, #0x1
  45f244:	add	x24, x0, x24, lsl #6
  45f248:	ldp	x10, x11, [x19]
  45f24c:	stp	x10, x11, [x21]
  45f250:	mov	x1, #0x40                  	// #64
  45f254:	ldp	x8, x9, [x19, #16]
  45f258:	stp	x8, x9, [x21, #16]
  45f25c:	mov	x2, x23
  45f260:	ldp	x6, x7, [x19, #32]
  45f264:	stp	x6, x7, [x21, #32]
  45f268:	mov	x0, x21
  45f26c:	ldp	x4, x5, [x19, #48]
  45f270:	stp	x4, x5, [x21, #48]
  45f274:	add	x19, x19, x1
  45f278:	bl	45e450 <nftw@plt+0x5b8d0>
  45f27c:	cmp	x24, x19
  45f280:	b.ne	45f248 <nftw@plt+0x5c6c8>  // b.any
  45f284:	sub	x3, x20, #0x40
  45f288:	sub	x20, x3, x25, lsl #6
  45f28c:	ldr	x25, [sp, #64]
  45f290:	mov	x1, x24
  45f294:	mov	x2, x20
  45f298:	add	x0, x23, #0x1c
  45f29c:	bl	402490 <memcpy@plt>
  45f2a0:	str	w20, [sp, #104]
  45f2a4:	mov	w0, w20
  45f2a8:	ldr	w1, [sp, #96]
  45f2ac:	adds	w1, w1, w0
  45f2b0:	str	w1, [sp, #96]
  45f2b4:	b.cc	45f2c4 <nftw@plt+0x5c744>  // b.lo, b.ul, b.last
  45f2b8:	ldr	w1, [sp, #100]
  45f2bc:	add	w1, w1, #0x1
  45f2c0:	str	w1, [sp, #100]
  45f2c4:	cmp	w0, #0x37
  45f2c8:	b.ls	45f2e4 <nftw@plt+0x5c764>  // b.plast
  45f2cc:	mov	w3, #0x78                  	// #120
  45f2d0:	sub	w19, w3, w0
  45f2d4:	b	45f2ec <nftw@plt+0x5c76c>
  45f2d8:	cbnz	x1, 45f384 <nftw@plt+0x5c804>
  45f2dc:	add	x23, sp, #0x50
  45f2e0:	mov	w0, #0x0                   	// #0
  45f2e4:	mov	w3, #0x38                  	// #56
  45f2e8:	sub	w19, w3, w0
  45f2ec:	add	x0, x20, #0x1c
  45f2f0:	mov	x2, x19
  45f2f4:	add	x0, x23, x0
  45f2f8:	adrp	x1, 481000 <_obstack_memory_used@@Base+0x1fbb8>
  45f2fc:	add	x1, x1, #0x520
  45f300:	bl	402490 <memcpy@plt>
  45f304:	ldr	w5, [sp, #96]
  45f308:	add	x3, x19, x20
  45f30c:	add	x4, sp, #0x6c
  45f310:	add	x6, sp, #0x70
  45f314:	add	x1, x3, #0x8
  45f318:	mov	x2, x23
  45f31c:	lsl	w7, w5, #3
  45f320:	add	x0, x23, #0x1c
  45f324:	str	w7, [x4, x3]
  45f328:	ldr	w4, [sp, #100]
  45f32c:	extr	w4, w4, w5, #29
  45f330:	str	w4, [x6, x3]
  45f334:	bl	45e450 <nftw@plt+0x5b8d0>
  45f338:	ldp	x0, x1, [sp, #80]
  45f33c:	stp	x0, x1, [x22]
  45f340:	mov	x0, x22
  45f344:	ldp	x19, x20, [sp, #16]
  45f348:	ldp	x21, x22, [sp, #32]
  45f34c:	ldp	x23, x24, [sp, #48]
  45f350:	ldp	x29, x30, [sp], #240
  45f354:	ret
  45f358:	and	x24, x1, #0xffffffffffffffc0
  45f35c:	add	x23, sp, #0x50
  45f360:	mov	x1, x24
  45f364:	mov	x2, x23
  45f368:	bl	45e450 <nftw@plt+0x5b8d0>
  45f36c:	add	x24, x19, x24
  45f370:	ands	x20, x20, #0x3f
  45f374:	b.ne	45f290 <nftw@plt+0x5c710>  // b.any
  45f378:	ldr	w0, [sp, #104]
  45f37c:	mov	w20, w0
  45f380:	b	45f2a8 <nftw@plt+0x5c728>
  45f384:	mov	x24, x19
  45f388:	add	x23, sp, #0x50
  45f38c:	b	45f290 <nftw@plt+0x5c710>
  45f390:	stp	x29, x30, [sp, #-48]!
  45f394:	mov	x29, sp
  45f398:	str	x21, [sp, #32]
  45f39c:	cbz	x0, 45f438 <nftw@plt+0x5c8b8>
  45f3a0:	stp	x19, x20, [sp, #16]
  45f3a4:	mov	x20, x0
  45f3a8:	ldr	x0, [x0]
  45f3ac:	cbz	x0, 45f418 <nftw@plt+0x5c898>
  45f3b0:	sub	x3, x20, #0x8
  45f3b4:	mov	x1, #0x1                   	// #1
  45f3b8:	mov	w0, w1
  45f3bc:	add	x1, x1, #0x1
  45f3c0:	ldr	x2, [x3, x1, lsl #3]
  45f3c4:	cbnz	x2, 45f3b8 <nftw@plt+0x5c838>
  45f3c8:	add	w0, w0, #0x1
  45f3cc:	sbfiz	x0, x0, #3, #32
  45f3d0:	bl	461560 <_obstack_memory_used@@Base+0x118>
  45f3d4:	mov	x21, x0
  45f3d8:	ldr	x0, [x20]
  45f3dc:	cbz	x0, 45f430 <nftw@plt+0x5c8b0>
  45f3e0:	mov	x19, #0x0                   	// #0
  45f3e4:	nop
  45f3e8:	bl	4616a8 <_obstack_memory_used@@Base+0x260>
  45f3ec:	str	x0, [x21, x19]
  45f3f0:	add	x19, x19, #0x8
  45f3f4:	ldr	x0, [x20, x19]
  45f3f8:	cbnz	x0, 45f3e8 <nftw@plt+0x5c868>
  45f3fc:	add	x19, x21, x19
  45f400:	str	xzr, [x19]
  45f404:	ldp	x19, x20, [sp, #16]
  45f408:	mov	x0, x21
  45f40c:	ldr	x21, [sp, #32]
  45f410:	ldp	x29, x30, [sp], #48
  45f414:	ret
  45f418:	mov	x0, #0x8                   	// #8
  45f41c:	bl	461560 <_obstack_memory_used@@Base+0x118>
  45f420:	mov	x21, x0
  45f424:	ldr	x0, [x20]
  45f428:	cbnz	x0, 45f3e0 <nftw@plt+0x5c860>
  45f42c:	nop
  45f430:	mov	x19, x21
  45f434:	b	45f400 <nftw@plt+0x5c880>
  45f438:	mov	x21, #0x0                   	// #0
  45f43c:	b	45f408 <nftw@plt+0x5c888>
  45f440:	cbz	x0, 45f47c <nftw@plt+0x5c8fc>
  45f444:	stp	x29, x30, [sp, #-32]!
  45f448:	mov	x29, sp
  45f44c:	stp	x19, x20, [sp, #16]
  45f450:	mov	x20, x0
  45f454:	ldr	x0, [x0]
  45f458:	cbz	x0, 45f46c <nftw@plt+0x5c8ec>
  45f45c:	mov	x19, x20
  45f460:	bl	402910 <free@plt>
  45f464:	ldr	x0, [x19, #8]!
  45f468:	cbnz	x0, 45f460 <nftw@plt+0x5c8e0>
  45f46c:	mov	x0, x20
  45f470:	ldp	x19, x20, [sp, #16]
  45f474:	ldp	x29, x30, [sp], #32
  45f478:	b	402910 <free@plt>
  45f47c:	ret
  45f480:	stp	x29, x30, [sp, #-96]!
  45f484:	mov	x29, sp
  45f488:	stp	x25, x26, [sp, #64]
  45f48c:	mov	x26, #0x0                   	// #0
  45f490:	cbz	x0, 45f598 <nftw@plt+0x5ca18>
  45f494:	stp	x19, x20, [sp, #16]
  45f498:	mov	x19, x0
  45f49c:	adrp	x20, 481000 <_obstack_memory_used@@Base+0x1fbb8>
  45f4a0:	stp	x21, x22, [sp, #32]
  45f4a4:	add	x20, x20, #0xaf0
  45f4a8:	mov	x26, #0x0                   	// #0
  45f4ac:	stp	x23, x24, [sp, #48]
  45f4b0:	mov	w22, #0x0                   	// #0
  45f4b4:	mov	w24, #0x0                   	// #0
  45f4b8:	stp	x27, x28, [sp, #80]
  45f4bc:	bl	4024f0 <strlen@plt>
  45f4c0:	add	x0, x0, #0x1
  45f4c4:	bl	461560 <_obstack_memory_used@@Base+0x118>
  45f4c8:	mov	x21, x0
  45f4cc:	ldrb	w1, [x19]
  45f4d0:	mov	x27, #0x0                   	// #0
  45f4d4:	mov	w28, #0x0                   	// #0
  45f4d8:	mov	w23, #0x0                   	// #0
  45f4dc:	ldrh	w2, [x20, w1, sxtw #1]
  45f4e0:	and	w3, w2, #0x40
  45f4e4:	nop
  45f4e8:	cbz	w3, 45f4fc <nftw@plt+0x5c97c>
  45f4ec:	nop
  45f4f0:	ldrb	w1, [x19, #1]!
  45f4f4:	ldrh	w2, [x20, w1, sxtw #1]
  45f4f8:	tbnz	w2, #6, 45f4f0 <nftw@plt+0x5c970>
  45f4fc:	lsl	x25, x27, #3
  45f500:	cbz	w28, 45f620 <nftw@plt+0x5caa0>
  45f504:	sub	w0, w28, #0x1
  45f508:	cmp	w0, w27
  45f50c:	b.le	45f620 <nftw@plt+0x5caa0>
  45f510:	add	x25, x26, x25
  45f514:	mov	x2, x21
  45f518:	cbz	w1, 45f548 <nftw@plt+0x5c9c8>
  45f51c:	nop
  45f520:	ldrh	w3, [x20, w1, sxtw #1]
  45f524:	tbz	w3, #6, 45f534 <nftw@plt+0x5c9b4>
  45f528:	orr	w3, w24, w23
  45f52c:	orr	w3, w3, w22
  45f530:	cbz	w3, 45f5a8 <nftw@plt+0x5ca28>
  45f534:	cbz	w22, 45f5b8 <nftw@plt+0x5ca38>
  45f538:	mov	w22, #0x0                   	// #0
  45f53c:	strb	w1, [x2], #1
  45f540:	ldrb	w1, [x19, #1]!
  45f544:	cbnz	w1, 45f520 <nftw@plt+0x5c9a0>
  45f548:	strb	wzr, [x2]
  45f54c:	mov	x0, x21
  45f550:	bl	4616a8 <_obstack_memory_used@@Base+0x260>
  45f554:	stp	x0, xzr, [x25]
  45f558:	ldrb	w1, [x19]
  45f55c:	ldrh	w2, [x20, w1, sxtw #1]
  45f560:	and	w3, w2, #0x40
  45f564:	tbz	w2, #6, 45f578 <nftw@plt+0x5c9f8>
  45f568:	ldrb	w1, [x19, #1]!
  45f56c:	ldrh	w2, [x20, w1, sxtw #1]
  45f570:	and	w3, w2, #0x40
  45f574:	tbnz	w2, #6, 45f568 <nftw@plt+0x5c9e8>
  45f578:	add	x27, x27, #0x1
  45f57c:	cbnz	w1, 45f4e8 <nftw@plt+0x5c968>
  45f580:	mov	x0, x21
  45f584:	bl	402910 <free@plt>
  45f588:	ldp	x19, x20, [sp, #16]
  45f58c:	ldp	x21, x22, [sp, #32]
  45f590:	ldp	x23, x24, [sp, #48]
  45f594:	ldp	x27, x28, [sp, #80]
  45f598:	mov	x0, x26
  45f59c:	ldp	x25, x26, [sp, #64]
  45f5a0:	ldp	x29, x30, [sp], #96
  45f5a4:	ret
  45f5a8:	mov	w24, #0x0                   	// #0
  45f5ac:	mov	w23, #0x0                   	// #0
  45f5b0:	mov	w22, #0x0                   	// #0
  45f5b4:	b	45f548 <nftw@plt+0x5c9c8>
  45f5b8:	cmp	w1, #0x5c
  45f5bc:	b.eq	45f5dc <nftw@plt+0x5ca5c>  // b.none
  45f5c0:	cbz	w23, 45f5e4 <nftw@plt+0x5ca64>
  45f5c4:	cmp	w1, #0x27
  45f5c8:	b.eq	45f5d4 <nftw@plt+0x5ca54>  // b.none
  45f5cc:	strb	w1, [x2], #1
  45f5d0:	b	45f540 <nftw@plt+0x5c9c0>
  45f5d4:	mov	w23, #0x0                   	// #0
  45f5d8:	b	45f540 <nftw@plt+0x5c9c0>
  45f5dc:	mov	w22, #0x1                   	// #1
  45f5e0:	b	45f540 <nftw@plt+0x5c9c0>
  45f5e4:	cbz	w24, 45f5fc <nftw@plt+0x5ca7c>
  45f5e8:	mov	w22, w23
  45f5ec:	cmp	w1, #0x22
  45f5f0:	b.ne	45f5cc <nftw@plt+0x5ca4c>  // b.any
  45f5f4:	mov	w24, #0x0                   	// #0
  45f5f8:	b	45f540 <nftw@plt+0x5c9c0>
  45f5fc:	mov	w22, w24
  45f600:	cmp	w1, #0x27
  45f604:	mov	w23, #0x1                   	// #1
  45f608:	b.eq	45f540 <nftw@plt+0x5c9c0>  // b.none
  45f60c:	cmp	w1, #0x22
  45f610:	b.eq	45f65c <nftw@plt+0x5cadc>  // b.none
  45f614:	mov	w23, w24
  45f618:	strb	w1, [x2], #1
  45f61c:	b	45f540 <nftw@plt+0x5c9c0>
  45f620:	cbz	x26, 45f648 <nftw@plt+0x5cac8>
  45f624:	lsl	w28, w28, #1
  45f628:	mov	x0, x26
  45f62c:	sbfiz	x1, x28, #3, #32
  45f630:	bl	4615e8 <_obstack_memory_used@@Base+0x1a0>
  45f634:	mov	x26, x0
  45f638:	str	xzr, [x26, x25]
  45f63c:	add	x25, x26, x25
  45f640:	ldrb	w1, [x19]
  45f644:	b	45f514 <nftw@plt+0x5c994>
  45f648:	mov	x0, #0x40                  	// #64
  45f64c:	mov	w28, #0x8                   	// #8
  45f650:	bl	461560 <_obstack_memory_used@@Base+0x118>
  45f654:	mov	x26, x0
  45f658:	b	45f638 <nftw@plt+0x5cab8>
  45f65c:	mov	w23, w24
  45f660:	mov	w24, #0x1                   	// #1
  45f664:	b	45f540 <nftw@plt+0x5c9c0>
  45f668:	cbz	x1, 45f740 <nftw@plt+0x5cbc0>
  45f66c:	stp	x29, x30, [sp, #-80]!
  45f670:	mov	x29, sp
  45f674:	stp	x21, x22, [sp, #32]
  45f678:	ldr	x21, [x0]
  45f67c:	stp	x23, x24, [sp, #48]
  45f680:	mov	x24, x0
  45f684:	cbz	x21, 45f738 <nftw@plt+0x5cbb8>
  45f688:	adrp	x22, 481000 <_obstack_memory_used@@Base+0x1fbb8>
  45f68c:	add	x22, x22, #0xaf0
  45f690:	stp	x19, x20, [sp, #16]
  45f694:	mov	x20, x1
  45f698:	mov	w23, #0x22                  	// #34
  45f69c:	str	x25, [sp, #64]
  45f6a0:	mov	w25, #0x27                  	// #39
  45f6a4:	ldrb	w19, [x21]
  45f6a8:	cbnz	w19, 45f6b8 <nftw@plt+0x5cb38>
  45f6ac:	b	45f714 <nftw@plt+0x5cb94>
  45f6b0:	ldrb	w19, [x21, #1]!
  45f6b4:	cbz	w19, 45f714 <nftw@plt+0x5cb94>
  45f6b8:	ldrh	w2, [x22, w19, sxtw #1]
  45f6bc:	mov	x1, x20
  45f6c0:	mov	w0, #0x5c                  	// #92
  45f6c4:	tbnz	w2, #6, 45f6d8 <nftw@plt+0x5cb58>
  45f6c8:	cmp	w19, w0
  45f6cc:	ccmp	w19, w25, #0x4, ne  // ne = any
  45f6d0:	ccmp	w19, w23, #0x4, ne  // ne = any
  45f6d4:	b.ne	45f6e4 <nftw@plt+0x5cb64>  // b.any
  45f6d8:	bl	4025e0 <fputc@plt>
  45f6dc:	cmn	w0, #0x1
  45f6e0:	b.eq	45f6f8 <nftw@plt+0x5cb78>  // b.none
  45f6e4:	mov	w0, w19
  45f6e8:	mov	x1, x20
  45f6ec:	bl	4025e0 <fputc@plt>
  45f6f0:	cmn	w0, #0x1
  45f6f4:	b.ne	45f6b0 <nftw@plt+0x5cb30>  // b.any
  45f6f8:	ldp	x19, x20, [sp, #16]
  45f6fc:	mov	w0, #0x1                   	// #1
  45f700:	ldr	x25, [sp, #64]
  45f704:	ldp	x21, x22, [sp, #32]
  45f708:	ldp	x23, x24, [sp, #48]
  45f70c:	ldp	x29, x30, [sp], #80
  45f710:	ret
  45f714:	mov	x1, x20
  45f718:	mov	w0, #0xa                   	// #10
  45f71c:	bl	4025e0 <fputc@plt>
  45f720:	cmn	w0, #0x1
  45f724:	b.eq	45f6f8 <nftw@plt+0x5cb78>  // b.none
  45f728:	ldr	x21, [x24, #8]!
  45f72c:	cbnz	x21, 45f6a4 <nftw@plt+0x5cb24>
  45f730:	ldp	x19, x20, [sp, #16]
  45f734:	ldr	x25, [sp, #64]
  45f738:	mov	w0, #0x0                   	// #0
  45f73c:	b	45f704 <nftw@plt+0x5cb84>
  45f740:	mov	w0, #0x1                   	// #1
  45f744:	ret
  45f748:	stp	x29, x30, [sp, #-288]!
  45f74c:	mov	x29, sp
  45f750:	ldr	w3, [x0]
  45f754:	stp	x23, x24, [sp, #48]
  45f758:	mov	x24, x0
  45f75c:	cmp	w3, #0x1
  45f760:	ldr	x0, [x1]
  45f764:	str	x0, [sp, #152]
  45f768:	b.le	45f8b8 <nftw@plt+0x5cd38>
  45f76c:	mov	w23, #0x0                   	// #0
  45f770:	stp	x19, x20, [sp, #16]
  45f774:	mov	w20, #0x7d0                 	// #2000
  45f778:	stp	x21, x22, [sp, #32]
  45f77c:	mov	x21, x1
  45f780:	stp	x25, x26, [sp, #64]
  45f784:	adrp	x25, 47b000 <_obstack_memory_used@@Base+0x19bb8>
  45f788:	adrp	x26, 481000 <_obstack_memory_used@@Base+0x1fbb8>
  45f78c:	add	x25, x25, #0xf40
  45f790:	add	x1, x26, #0xaf0
  45f794:	stp	x27, x28, [sp, #80]
  45f798:	mov	w28, #0x1                   	// #1
  45f79c:	str	x1, [sp, #96]
  45f7a0:	b	45f880 <nftw@plt+0x5cd00>
  45f7a4:	subs	w20, w20, #0x1
  45f7a8:	b.eq	45fac8 <nftw@plt+0x5cf48>  // b.none
  45f7ac:	add	x27, x1, #0x1
  45f7b0:	add	x2, sp, #0xa0
  45f7b4:	mov	x1, x27
  45f7b8:	mov	w0, #0x0                   	// #0
  45f7bc:	bl	402ac0 <__xstat@plt>
  45f7c0:	tbnz	w0, #31, 45f8c4 <nftw@plt+0x5cd44>
  45f7c4:	ldr	w0, [sp, #176]
  45f7c8:	and	w0, w0, #0xf000
  45f7cc:	cmp	w0, #0x4, lsl #12
  45f7d0:	b.eq	45fae8 <nftw@plt+0x5cf68>  // b.none
  45f7d4:	mov	x0, x27
  45f7d8:	mov	x1, x25
  45f7dc:	bl	402650 <fopen@plt>
  45f7e0:	mov	x27, x0
  45f7e4:	cbz	x0, 45f8c4 <nftw@plt+0x5cd44>
  45f7e8:	mov	w2, #0x2                   	// #2
  45f7ec:	mov	x1, #0x0                   	// #0
  45f7f0:	bl	4027e0 <fseek@plt>
  45f7f4:	cmn	w0, #0x1
  45f7f8:	b.eq	45f860 <nftw@plt+0x5cce0>  // b.none
  45f7fc:	mov	x0, x27
  45f800:	bl	4025a0 <ftell@plt>
  45f804:	mov	x26, x0
  45f808:	cmn	x0, #0x1
  45f80c:	b.eq	45f860 <nftw@plt+0x5cce0>  // b.none
  45f810:	mov	x0, x27
  45f814:	mov	w2, #0x0                   	// #0
  45f818:	mov	x1, #0x0                   	// #0
  45f81c:	bl	4027e0 <fseek@plt>
  45f820:	cmn	w0, #0x1
  45f824:	b.eq	45f860 <nftw@plt+0x5cce0>  // b.none
  45f828:	add	x0, x26, #0x1
  45f82c:	bl	461560 <_obstack_memory_used@@Base+0x118>
  45f830:	mov	x1, #0x1                   	// #1
  45f834:	mov	x3, x27
  45f838:	mov	x2, x26
  45f83c:	str	x0, [sp, #104]
  45f840:	bl	4028d0 <fread@plt>
  45f844:	mov	x1, x0
  45f848:	cmp	x26, x0
  45f84c:	b.eq	45f8d4 <nftw@plt+0x5cd54>  // b.none
  45f850:	mov	x0, x27
  45f854:	str	x1, [sp, #112]
  45f858:	bl	402b70 <ferror@plt>
  45f85c:	cbz	w0, 45f8d0 <nftw@plt+0x5cd50>
  45f860:	mov	x0, x27
  45f864:	bl	402620 <fclose@plt>
  45f868:	ldr	w3, [x24]
  45f86c:	mov	w23, w28
  45f870:	add	w28, w28, #0x1
  45f874:	cmp	w28, w3
  45f878:	b.ge	45f8a8 <nftw@plt+0x5cd28>  // b.tcont
  45f87c:	ldr	x0, [x21]
  45f880:	sxtw	x19, w28
  45f884:	sbfiz	x22, x28, #3, #32
  45f888:	ldr	x1, [x0, x19, lsl #3]
  45f88c:	ldrb	w2, [x1]
  45f890:	cmp	w2, #0x40
  45f894:	b.eq	45f7a4 <nftw@plt+0x5cc24>  // b.none
  45f898:	mov	w23, w28
  45f89c:	add	w28, w28, #0x1
  45f8a0:	cmp	w28, w3
  45f8a4:	b.lt	45f87c <nftw@plt+0x5ccfc>  // b.tstop
  45f8a8:	ldp	x19, x20, [sp, #16]
  45f8ac:	ldp	x21, x22, [sp, #32]
  45f8b0:	ldp	x25, x26, [sp, #64]
  45f8b4:	ldp	x27, x28, [sp, #80]
  45f8b8:	ldp	x23, x24, [sp, #48]
  45f8bc:	ldp	x29, x30, [sp], #288
  45f8c0:	ret
  45f8c4:	ldr	w3, [x24]
  45f8c8:	mov	w23, w28
  45f8cc:	b	45f89c <nftw@plt+0x5cd1c>
  45f8d0:	ldr	x1, [sp, #112]
  45f8d4:	ldr	x0, [sp, #104]
  45f8d8:	strb	wzr, [x0, x1]
  45f8dc:	mov	x1, x0
  45f8e0:	ldrb	w0, [x0]
  45f8e4:	cbnz	w0, 45f8f4 <nftw@plt+0x5cd74>
  45f8e8:	b	45f9f4 <nftw@plt+0x5ce74>
  45f8ec:	ldrb	w0, [x1, #1]!
  45f8f0:	cbz	w0, 45f9f4 <nftw@plt+0x5ce74>
  45f8f4:	ldr	x2, [sp, #96]
  45f8f8:	ldrh	w0, [x2, w0, sxtw #1]
  45f8fc:	tbnz	w0, #6, 45f8ec <nftw@plt+0x5cd6c>
  45f900:	ldr	x0, [sp, #104]
  45f904:	bl	45f480 <nftw@plt+0x5c900>
  45f908:	mov	x5, x0
  45f90c:	ldr	x9, [x21]
  45f910:	ldr	x0, [sp, #152]
  45f914:	cmp	x9, x0
  45f918:	ldr	x0, [x5]
  45f91c:	mov	x26, x0
  45f920:	b.eq	45fa18 <nftw@plt+0x5ce98>  // b.none
  45f924:	cbz	x26, 45faa0 <nftw@plt+0x5cf20>
  45f928:	mov	x1, #0x0                   	// #0
  45f92c:	nop
  45f930:	add	x1, x1, #0x1
  45f934:	lsl	x6, x1, #3
  45f938:	ldr	x2, [x5, x1, lsl #3]
  45f93c:	cbnz	x2, 45f930 <nftw@plt+0x5cdb0>
  45f940:	add	x7, x19, x1
  45f944:	mov	w8, w1
  45f948:	lsl	x7, x7, #3
  45f94c:	ldr	x0, [x9, x19, lsl #3]
  45f950:	stp	x6, x1, [sp, #112]
  45f954:	stp	x5, x7, [sp, #128]
  45f958:	str	w8, [sp, #148]
  45f95c:	bl	402910 <free@plt>
  45f960:	ldrsw	x2, [x24]
  45f964:	ldr	x1, [sp, #120]
  45f968:	add	x2, x2, #0x1
  45f96c:	ldr	x0, [x21]
  45f970:	add	x1, x2, x1
  45f974:	lsl	x1, x1, #3
  45f978:	bl	4615e8 <_obstack_memory_used@@Base+0x1a0>
  45f97c:	mov	x1, x0
  45f980:	ldr	w2, [x24]
  45f984:	add	x4, x22, #0x8
  45f988:	ldr	x7, [sp, #136]
  45f98c:	sub	w2, w2, w28
  45f990:	str	x1, [x21]
  45f994:	add	x1, x1, x4
  45f998:	add	x0, x0, x7
  45f99c:	sbfiz	x2, x2, #3, #32
  45f9a0:	bl	4024a0 <memmove@plt>
  45f9a4:	mov	w28, w23
  45f9a8:	ldr	x6, [sp, #112]
  45f9ac:	ldr	x5, [sp, #128]
  45f9b0:	mov	x2, x6
  45f9b4:	ldr	x0, [x21]
  45f9b8:	mov	x1, x5
  45f9bc:	str	x5, [sp, #112]
  45f9c0:	add	x0, x0, x22
  45f9c4:	bl	402490 <memcpy@plt>
  45f9c8:	ldr	w1, [x24]
  45f9cc:	ldr	w8, [sp, #148]
  45f9d0:	sub	w1, w1, #0x1
  45f9d4:	ldr	x5, [sp, #112]
  45f9d8:	add	w1, w1, w8
  45f9dc:	str	w1, [x24]
  45f9e0:	mov	x0, x5
  45f9e4:	bl	402910 <free@plt>
  45f9e8:	ldr	x0, [sp, #104]
  45f9ec:	bl	402910 <free@plt>
  45f9f0:	b	45f860 <nftw@plt+0x5cce0>
  45f9f4:	mov	x0, #0x8                   	// #8
  45f9f8:	bl	461560 <_obstack_memory_used@@Base+0x118>
  45f9fc:	mov	x5, x0
  45fa00:	mov	x26, #0x0                   	// #0
  45fa04:	ldr	x9, [x21]
  45fa08:	ldr	x0, [sp, #152]
  45fa0c:	str	xzr, [x5]
  45fa10:	cmp	x0, x9
  45fa14:	b.ne	45faa0 <nftw@plt+0x5cf20>  // b.any
  45fa18:	cbz	x9, 45fa98 <nftw@plt+0x5cf18>
  45fa1c:	ldr	x0, [x9]
  45fa20:	cbz	x0, 45fab4 <nftw@plt+0x5cf34>
  45fa24:	sub	x6, x9, #0x8
  45fa28:	mov	x0, #0x1                   	// #1
  45fa2c:	nop
  45fa30:	mov	w2, w0
  45fa34:	add	x0, x0, #0x1
  45fa38:	ldr	x1, [x6, x0, lsl #3]
  45fa3c:	cbnz	x1, 45fa30 <nftw@plt+0x5ceb0>
  45fa40:	add	w0, w2, #0x1
  45fa44:	sbfiz	x0, x0, #3, #32
  45fa48:	stp	x5, x9, [sp, #112]
  45fa4c:	bl	461560 <_obstack_memory_used@@Base+0x118>
  45fa50:	mov	x1, x0
  45fa54:	ldp	x5, x9, [sp, #112]
  45fa58:	str	x1, [sp, #136]
  45fa5c:	ldr	x0, [x9]
  45fa60:	cbz	x0, 45fabc <nftw@plt+0x5cf3c>
  45fa64:	mov	x1, #0x0                   	// #0
  45fa68:	stp	x5, x1, [sp, #112]
  45fa6c:	str	x9, [sp, #128]
  45fa70:	bl	4616a8 <_obstack_memory_used@@Base+0x260>
  45fa74:	ldp	x5, x1, [sp, #112]
  45fa78:	ldp	x9, x2, [sp, #128]
  45fa7c:	str	x0, [x2, x1]
  45fa80:	add	x1, x1, #0x8
  45fa84:	ldr	x0, [x9, x1]
  45fa88:	cbnz	x0, 45fa68 <nftw@plt+0x5cee8>
  45fa8c:	add	x1, x2, x1
  45fa90:	mov	x9, x2
  45fa94:	str	xzr, [x1]
  45fa98:	str	x9, [x21]
  45fa9c:	b	45f924 <nftw@plt+0x5cda4>
  45faa0:	mov	x7, x22
  45faa4:	mov	w8, #0x0                   	// #0
  45faa8:	mov	x1, #0x0                   	// #0
  45faac:	mov	x6, #0x0                   	// #0
  45fab0:	b	45f94c <nftw@plt+0x5cdcc>
  45fab4:	mov	x0, #0x8                   	// #8
  45fab8:	b	45fa48 <nftw@plt+0x5cec8>
  45fabc:	mov	x9, x1
  45fac0:	str	xzr, [x1]
  45fac4:	b	45fa98 <nftw@plt+0x5cf18>
  45fac8:	adrp	x3, 4a4000 <_obstack_memory_used@@Base+0x42bb8>
  45facc:	adrp	x1, 481000 <_obstack_memory_used@@Base+0x1fbb8>
  45fad0:	ldr	x2, [x0]
  45fad4:	add	x1, x1, #0x560
  45fad8:	ldr	x0, [x3, #1392]
  45fadc:	bl	402b30 <fprintf@plt>
  45fae0:	mov	w0, #0x1                   	// #1
  45fae4:	bl	461470 <_obstack_memory_used@@Base+0x28>
  45fae8:	ldr	x2, [x21]
  45faec:	adrp	x0, 4a4000 <_obstack_memory_used@@Base+0x42bb8>
  45faf0:	adrp	x1, 481000 <_obstack_memory_used@@Base+0x1fbb8>
  45faf4:	add	x1, x1, #0x590
  45faf8:	ldr	x0, [x0, #1392]
  45fafc:	ldr	x2, [x2]
  45fb00:	bl	402b30 <fprintf@plt>
  45fb04:	mov	w0, #0x1                   	// #1
  45fb08:	bl	461470 <_obstack_memory_used@@Base+0x28>
  45fb0c:	nop
  45fb10:	mov	x1, x0
  45fb14:	cbz	x0, 45fb40 <nftw@plt+0x5cfc0>
  45fb18:	ldr	x2, [x1]
  45fb1c:	mov	w0, #0x0                   	// #0
  45fb20:	cbz	x2, 45fb3c <nftw@plt+0x5cfbc>
  45fb24:	sub	x1, x1, #0x8
  45fb28:	mov	x2, #0x1                   	// #1
  45fb2c:	mov	w0, w2
  45fb30:	add	x2, x2, #0x1
  45fb34:	ldr	x3, [x1, x2, lsl #3]
  45fb38:	cbnz	x3, 45fb2c <nftw@plt+0x5cfac>
  45fb3c:	ret
  45fb40:	mov	w0, #0x0                   	// #0
  45fb44:	ret
  45fb48:	b	402890 <strcmp@plt>
  45fb4c:	nop
  45fb50:	b	4026a0 <strncmp@plt>
  45fb54:	nop
  45fb58:	mov	x3, x0
  45fb5c:	ldrb	w2, [x3], #1
  45fb60:	cbz	w2, 45fbb8 <nftw@plt+0x5d038>
  45fb64:	adrp	x5, 481000 <_obstack_memory_used@@Base+0x1fbb8>
  45fb68:	add	x5, x5, #0x9f0
  45fb6c:	mov	w0, #0x0                   	// #0
  45fb70:	mov	w4, #0x43                  	// #67
  45fb74:	nop
  45fb78:	mul	w1, w0, w4
  45fb7c:	cmp	w2, #0x5c
  45fb80:	b.eq	45fb9c <nftw@plt+0x5d01c>  // b.none
  45fb84:	ldrb	w0, [x5, w2, sxtw]
  45fb88:	sub	w1, w1, #0x71
  45fb8c:	ldrb	w2, [x3], #1
  45fb90:	add	w0, w0, w1
  45fb94:	cbnz	w2, 45fb78 <nftw@plt+0x5cff8>
  45fb98:	ret
  45fb9c:	ldrb	w2, [x3], #1
  45fba0:	mul	w1, w0, w4
  45fba4:	ldrb	w0, [x5, #47]
  45fba8:	sub	w1, w1, #0x71
  45fbac:	add	w0, w0, w1
  45fbb0:	cbnz	w2, 45fb78 <nftw@plt+0x5cff8>
  45fbb4:	ret
  45fbb8:	mov	w0, #0x0                   	// #0
  45fbbc:	ret
  45fbc0:	stp	x29, x30, [sp, #-16]!
  45fbc4:	mov	x29, sp
  45fbc8:	bl	402890 <strcmp@plt>
  45fbcc:	cmp	w0, #0x0
  45fbd0:	cset	w0, eq  // eq = none
  45fbd4:	ldp	x29, x30, [sp], #16
  45fbd8:	ret
  45fbdc:	nop
  45fbe0:	stp	x29, x30, [sp, #-32]!
  45fbe4:	mov	x29, sp
  45fbe8:	stp	x19, x20, [sp, #16]
  45fbec:	mov	x19, x1
  45fbf0:	bl	460fe8 <nftw@plt+0x5e468>
  45fbf4:	mov	x20, x0
  45fbf8:	mov	x0, x19
  45fbfc:	bl	460fe8 <nftw@plt+0x5e468>
  45fc00:	mov	x19, x0
  45fc04:	mov	x1, x19
  45fc08:	mov	x0, x20
  45fc0c:	bl	402890 <strcmp@plt>
  45fc10:	mov	w1, w0
  45fc14:	mov	x0, x20
  45fc18:	mov	w20, w1
  45fc1c:	bl	402910 <free@plt>
  45fc20:	mov	x0, x19
  45fc24:	bl	402910 <free@plt>
  45fc28:	cmp	w20, #0x0
  45fc2c:	cset	w0, eq  // eq = none
  45fc30:	ldp	x19, x20, [sp, #16]
  45fc34:	ldp	x29, x30, [sp], #32
  45fc38:	ret
  45fc3c:	nop
  45fc40:	cbz	x0, 45fc4c <nftw@plt+0x5d0cc>
  45fc44:	mov	w1, #0x2                   	// #2
  45fc48:	b	402a60 <__fsetlocking@plt>
  45fc4c:	ret
  45fc50:	stp	x29, x30, [sp, #-16]!
  45fc54:	adrp	x0, 4a4000 <_obstack_memory_used@@Base+0x42bb8>
  45fc58:	mov	x29, sp
  45fc5c:	ldr	x0, [x0, #1424]
  45fc60:	cbz	x0, 45fc6c <nftw@plt+0x5d0ec>
  45fc64:	mov	w1, #0x2                   	// #2
  45fc68:	bl	402a60 <__fsetlocking@plt>
  45fc6c:	adrp	x0, 4a4000 <_obstack_memory_used@@Base+0x42bb8>
  45fc70:	ldr	x0, [x0, #1416]
  45fc74:	cbz	x0, 45fc80 <nftw@plt+0x5d100>
  45fc78:	mov	w1, #0x2                   	// #2
  45fc7c:	bl	402a60 <__fsetlocking@plt>
  45fc80:	adrp	x0, 4a4000 <_obstack_memory_used@@Base+0x42bb8>
  45fc84:	ldr	x0, [x0, #1392]
  45fc88:	cbz	x0, 45fc98 <nftw@plt+0x5d118>
  45fc8c:	ldp	x29, x30, [sp], #16
  45fc90:	mov	w1, #0x2                   	// #2
  45fc94:	b	402a60 <__fsetlocking@plt>
  45fc98:	ldp	x29, x30, [sp], #16
  45fc9c:	ret
  45fca0:	stp	x29, x30, [sp, #-32]!
  45fca4:	mov	x29, sp
  45fca8:	str	x19, [sp, #16]
  45fcac:	bl	402650 <fopen@plt>
  45fcb0:	mov	x19, x0
  45fcb4:	cbz	x0, 45fcc0 <nftw@plt+0x5d140>
  45fcb8:	mov	w1, #0x2                   	// #2
  45fcbc:	bl	402a60 <__fsetlocking@plt>
  45fcc0:	mov	x0, x19
  45fcc4:	ldr	x19, [sp, #16]
  45fcc8:	ldp	x29, x30, [sp], #32
  45fccc:	ret
  45fcd0:	stp	x29, x30, [sp, #-32]!
  45fcd4:	mov	x29, sp
  45fcd8:	str	x19, [sp, #16]
  45fcdc:	bl	402700 <fdopen@plt>
  45fce0:	mov	x19, x0
  45fce4:	cbz	x0, 45fcf0 <nftw@plt+0x5d170>
  45fce8:	mov	w1, #0x2                   	// #2
  45fcec:	bl	402a60 <__fsetlocking@plt>
  45fcf0:	mov	x0, x19
  45fcf4:	ldr	x19, [sp, #16]
  45fcf8:	ldp	x29, x30, [sp], #32
  45fcfc:	ret
  45fd00:	stp	x29, x30, [sp, #-32]!
  45fd04:	mov	x29, sp
  45fd08:	str	x19, [sp, #16]
  45fd0c:	bl	402930 <freopen@plt>
  45fd10:	mov	x19, x0
  45fd14:	cbz	x0, 45fd20 <nftw@plt+0x5d1a0>
  45fd18:	mov	w1, #0x2                   	// #2
  45fd1c:	bl	402a60 <__fsetlocking@plt>
  45fd20:	mov	x0, x19
  45fd24:	ldr	x19, [sp, #16]
  45fd28:	ldp	x29, x30, [sp], #32
  45fd2c:	ret
  45fd30:	cmp	x1, x0
  45fd34:	cset	w0, eq  // eq = none
  45fd38:	ret
  45fd3c:	nop
  45fd40:	asr	x1, x0, #32
  45fd44:	mov	w3, #0x2785                	// #10117
  45fd48:	mov	w5, #0xadcc                	// #44492
  45fd4c:	movk	w3, #0x5c24, lsl #16
  45fd50:	add	w3, w3, w0
  45fd54:	sub	w0, w1, w0
  45fd58:	movk	w5, #0xbdec, lsl #16
  45fd5c:	mov	w4, #0x109a                	// #4250
  45fd60:	add	w0, w0, w5
  45fd64:	movk	w4, #0x2, lsl #16
  45fd68:	mov	w2, #0x5234                	// #21044
  45fd6c:	eor	w0, w0, w4
  45fd70:	sub	w3, w3, w0
  45fd74:	movk	w2, #0x4213, lsl #16
  45fd78:	sub	w1, w2, w0
  45fd7c:	eor	w2, w3, w0, lsl #8
  45fd80:	sub	w1, w1, w2
  45fd84:	sub	w0, w0, w2
  45fd88:	eor	w1, w1, w2, lsr #13
  45fd8c:	sub	w0, w0, w1
  45fd90:	sub	w2, w2, w1
  45fd94:	eor	w0, w0, w1, lsr #12
  45fd98:	sub	w2, w2, w0
  45fd9c:	sub	w1, w1, w0
  45fda0:	eor	w2, w2, w0, lsl #16
  45fda4:	sub	w1, w1, w2
  45fda8:	sub	w0, w0, w2
  45fdac:	eor	w1, w1, w2, lsr #5
  45fdb0:	sub	w0, w0, w1
  45fdb4:	sub	w2, w2, w1
  45fdb8:	eor	w0, w0, w1, lsr #3
  45fdbc:	sub	w2, w2, w0
  45fdc0:	sub	w1, w1, w0
  45fdc4:	eor	w0, w2, w0, lsl #10
  45fdc8:	sub	w1, w1, w0
  45fdcc:	eor	w0, w1, w0, lsr #15
  45fdd0:	ret
  45fdd4:	nop
  45fdd8:	stp	x29, x30, [sp, #-80]!
  45fddc:	mov	x29, sp
  45fde0:	stp	x21, x22, [sp, #32]
  45fde4:	mov	x21, x0
  45fde8:	stp	x23, x24, [sp, #48]
  45fdec:	ldr	w23, [x0, #104]
  45fdf0:	ldr	x0, [x0, #40]
  45fdf4:	stp	x19, x20, [sp, #16]
  45fdf8:	ldr	x1, [x21, #48]
  45fdfc:	ldr	x20, [x21, #24]
  45fe00:	str	x25, [sp, #64]
  45fe04:	ldr	x25, [x21, #32]
  45fe08:	sub	x0, x0, x1
  45fe0c:	lsl	x2, x0, #1
  45fe10:	cmp	x25, x0, lsl #1
  45fe14:	add	x19, x20, x25, lsl #3
  45fe18:	b.cc	45ff70 <nftw@plt+0x5d3f0>  // b.lo, b.ul, b.last
  45fe1c:	lsl	x0, x0, #3
  45fe20:	mov	x1, #0x20                  	// #32
  45fe24:	cmp	x0, x1
  45fe28:	csel	x0, x0, x1, cs  // cs = hs, nlast
  45fe2c:	cmp	x25, x0
  45fe30:	b.hi	45ff70 <nftw@plt+0x5d3f0>  // b.pmore
  45fe34:	ldr	x3, [x21, #88]
  45fe38:	cbz	x3, 45ffd8 <nftw@plt+0x5d458>
  45fe3c:	ldr	x0, [x21, #80]
  45fe40:	mov	x1, x25
  45fe44:	mov	x2, #0x8                   	// #8
  45fe48:	blr	x3
  45fe4c:	cbz	x0, 45ffec <nftw@plt+0x5d46c>
  45fe50:	ldp	x1, x2, [x21, #40]
  45fe54:	adrp	x24, 481000 <_obstack_memory_used@@Base+0x1fbb8>
  45fe58:	mov	x22, x20
  45fe5c:	add	x24, x24, #0x5e8
  45fe60:	stp	x0, x25, [x21, #24]
  45fe64:	str	xzr, [x21, #48]
  45fe68:	sub	x0, x1, x2
  45fe6c:	str	x0, [x21, #40]
  45fe70:	str	w23, [x21, #104]
  45fe74:	nop
  45fe78:	ldr	x23, [x22]
  45fe7c:	cmp	x23, #0x1
  45fe80:	b.ls	45ff34 <nftw@plt+0x5d3b4>  // b.plast
  45fe84:	ldr	x1, [x21]
  45fe88:	mov	x0, x23
  45fe8c:	blr	x1
  45fe90:	ldr	w1, [x21, #104]
  45fe94:	ldr	x4, [x21, #24]
  45fe98:	lsl	x1, x1, #4
  45fe9c:	add	x6, x24, x1
  45fea0:	ldr	w5, [x24, x1]
  45fea4:	ldr	w1, [x6, #4]
  45fea8:	ldr	w7, [x6, #12]
  45feac:	umull	x1, w0, w1
  45feb0:	lsr	x3, x1, #32
  45feb4:	sub	w1, w0, w3
  45feb8:	add	w1, w3, w1, lsr #1
  45febc:	lsr	w1, w1, w7
  45fec0:	msub	w1, w1, w5, w0
  45fec4:	add	x3, x4, w1, uxtw #3
  45fec8:	ldr	x2, [x4, w1, uxtw #3]
  45fecc:	cbz	x2, 45ff30 <nftw@plt+0x5d3b0>
  45fed0:	cmp	x2, #0x1
  45fed4:	b.eq	460040 <nftw@plt+0x5d4c0>  // b.none
  45fed8:	ldr	w3, [x6, #8]
  45fedc:	add	w8, w0, #0x1
  45fee0:	sub	w6, w5, #0x2
  45fee4:	ldr	x5, [x21, #32]
  45fee8:	umull	x3, w0, w3
  45feec:	lsr	x3, x3, #32
  45fef0:	sub	w2, w0, w3
  45fef4:	add	w2, w3, w2, lsr #1
  45fef8:	lsr	w2, w2, w7
  45fefc:	msub	w2, w2, w6, w8
  45ff00:	b	45ff0c <nftw@plt+0x5d38c>
  45ff04:	cmp	x0, #0x1
  45ff08:	b.eq	460040 <nftw@plt+0x5d4c0>  // b.none
  45ff0c:	add	w3, w1, w2
  45ff10:	mov	x1, x3
  45ff14:	cmp	x5, w3, uxtw
  45ff18:	b.hi	45ff24 <nftw@plt+0x5d3a4>  // b.pmore
  45ff1c:	sub	w3, w3, w5
  45ff20:	mov	x1, x3
  45ff24:	ldr	x0, [x4, x3, lsl #3]
  45ff28:	add	x3, x4, x3, lsl #3
  45ff2c:	cbnz	x0, 45ff04 <nftw@plt+0x5d384>
  45ff30:	str	x23, [x3]
  45ff34:	add	x22, x22, #0x8
  45ff38:	cmp	x19, x22
  45ff3c:	b.hi	45fe78 <nftw@plt+0x5d2f8>  // b.pmore
  45ff40:	ldr	x1, [x21, #72]
  45ff44:	cbz	x1, 46000c <nftw@plt+0x5d48c>
  45ff48:	mov	x0, x20
  45ff4c:	mov	w19, #0x1                   	// #1
  45ff50:	blr	x1
  45ff54:	mov	w0, w19
  45ff58:	ldp	x19, x20, [sp, #16]
  45ff5c:	ldp	x21, x22, [sp, #32]
  45ff60:	ldp	x23, x24, [sp, #48]
  45ff64:	ldr	x25, [sp, #64]
  45ff68:	ldp	x29, x30, [sp], #80
  45ff6c:	ret
  45ff70:	adrp	x4, 481000 <_obstack_memory_used@@Base+0x1fbb8>
  45ff74:	mov	w0, #0x1e                  	// #30
  45ff78:	add	x4, x4, #0x5e8
  45ff7c:	mov	w23, #0x0                   	// #0
  45ff80:	b	45ffa0 <nftw@plt+0x5d420>
  45ff84:	sub	w1, w0, w23
  45ff88:	add	w1, w23, w1, lsr #1
  45ff8c:	ubfiz	x3, x1, #4, #32
  45ff90:	ldr	w3, [x4, x3]
  45ff94:	cmp	x2, x3
  45ff98:	b.hi	45ffd0 <nftw@plt+0x5d450>  // b.pmore
  45ff9c:	mov	w0, w1
  45ffa0:	cmp	w0, w23
  45ffa4:	b.ne	45ff84 <nftw@plt+0x5d404>  // b.any
  45ffa8:	ubfiz	x0, x0, #4, #32
  45ffac:	ldr	w25, [x4, x0]
  45ffb0:	cmp	x2, x25
  45ffb4:	b.ls	45fe34 <nftw@plt+0x5d2b4>  // b.plast
  45ffb8:	adrp	x0, 4a4000 <_obstack_memory_used@@Base+0x42bb8>
  45ffbc:	adrp	x1, 481000 <_obstack_memory_used@@Base+0x1fbb8>
  45ffc0:	add	x1, x1, #0x5c0
  45ffc4:	ldr	x0, [x0, #1392]
  45ffc8:	bl	402b30 <fprintf@plt>
  45ffcc:	bl	4027f0 <abort@plt>
  45ffd0:	add	w23, w1, #0x1
  45ffd4:	b	45ffa0 <nftw@plt+0x5d420>
  45ffd8:	ldr	x2, [x21, #64]
  45ffdc:	mov	x0, x25
  45ffe0:	mov	x1, #0x8                   	// #8
  45ffe4:	blr	x2
  45ffe8:	cbnz	x0, 45fe50 <nftw@plt+0x5d2d0>
  45ffec:	mov	w19, #0x0                   	// #0
  45fff0:	mov	w0, w19
  45fff4:	ldp	x19, x20, [sp, #16]
  45fff8:	ldp	x21, x22, [sp, #32]
  45fffc:	ldp	x23, x24, [sp, #48]
  460000:	ldr	x25, [sp, #64]
  460004:	ldp	x29, x30, [sp], #80
  460008:	ret
  46000c:	ldr	x2, [x21, #96]
  460010:	mov	w19, #0x1                   	// #1
  460014:	cbz	x2, 45ff54 <nftw@plt+0x5d3d4>
  460018:	ldr	x0, [x21, #80]
  46001c:	mov	x1, x20
  460020:	blr	x2
  460024:	mov	w0, w19
  460028:	ldp	x19, x20, [sp, #16]
  46002c:	ldp	x21, x22, [sp, #32]
  460030:	ldp	x23, x24, [sp, #48]
  460034:	ldr	x25, [sp, #64]
  460038:	ldp	x29, x30, [sp], #80
  46003c:	ret
  460040:	bl	4027f0 <abort@plt>
  460044:	nop
  460048:	ldr	x0, [x0, #32]
  46004c:	ret
  460050:	ldp	x1, x0, [x0, #40]
  460054:	sub	x0, x1, x0
  460058:	ret
  46005c:	nop
  460060:	stp	x29, x30, [sp, #-96]!
  460064:	mov	x29, sp
  460068:	stp	x19, x20, [sp, #16]
  46006c:	mov	w20, #0x1e                  	// #30
  460070:	stp	x21, x22, [sp, #32]
  460074:	mov	x21, x5
  460078:	mov	x22, x6
  46007c:	stp	x23, x24, [sp, #48]
  460080:	mov	x24, x2
  460084:	mov	x23, x3
  460088:	mov	w2, #0x0                   	// #0
  46008c:	stp	x25, x26, [sp, #64]
  460090:	mov	x25, x1
  460094:	mov	x26, x4
  460098:	adrp	x1, 481000 <_obstack_memory_used@@Base+0x1fbb8>
  46009c:	add	x1, x1, #0x5e8
  4600a0:	str	x27, [sp, #80]
  4600a4:	b	4600c4 <nftw@plt+0x5d544>
  4600a8:	sub	w7, w20, w2
  4600ac:	add	w7, w2, w7, lsr #1
  4600b0:	ubfiz	x3, x7, #4, #32
  4600b4:	ldr	w3, [x1, x3]
  4600b8:	cmp	x0, x3
  4600bc:	b.hi	460144 <nftw@plt+0x5d5c4>  // b.pmore
  4600c0:	mov	w20, w7
  4600c4:	cmp	w20, w2
  4600c8:	b.ne	4600a8 <nftw@plt+0x5d528>  // b.any
  4600cc:	ubfiz	x2, x20, #4, #32
  4600d0:	ldr	w27, [x1, x2]
  4600d4:	cmp	x0, x27
  4600d8:	b.hi	460188 <nftw@plt+0x5d608>  // b.pmore
  4600dc:	mov	x0, x26
  4600e0:	mov	x2, #0x70                  	// #112
  4600e4:	mov	x1, #0x1                   	// #1
  4600e8:	blr	x21
  4600ec:	mov	x19, x0
  4600f0:	cbz	x0, 46014c <nftw@plt+0x5d5cc>
  4600f4:	mov	x1, x27
  4600f8:	mov	x0, x26
  4600fc:	mov	x2, #0x8                   	// #8
  460100:	blr	x21
  460104:	str	x0, [x19, #24]
  460108:	cbz	x0, 460170 <nftw@plt+0x5d5f0>
  46010c:	stp	x25, x24, [x19]
  460110:	str	x23, [x19, #16]
  460114:	str	x27, [x19, #32]
  460118:	stp	x26, x21, [x19, #80]
  46011c:	str	x22, [x19, #96]
  460120:	str	w20, [x19, #104]
  460124:	mov	x0, x19
  460128:	ldp	x19, x20, [sp, #16]
  46012c:	ldp	x21, x22, [sp, #32]
  460130:	ldp	x23, x24, [sp, #48]
  460134:	ldp	x25, x26, [sp, #64]
  460138:	ldr	x27, [sp, #80]
  46013c:	ldp	x29, x30, [sp], #96
  460140:	ret
  460144:	add	w2, w7, #0x1
  460148:	b	4600c4 <nftw@plt+0x5d544>
  46014c:	mov	x19, #0x0                   	// #0
  460150:	mov	x0, x19
  460154:	ldp	x19, x20, [sp, #16]
  460158:	ldp	x21, x22, [sp, #32]
  46015c:	ldp	x23, x24, [sp, #48]
  460160:	ldp	x25, x26, [sp, #64]
  460164:	ldr	x27, [sp, #80]
  460168:	ldp	x29, x30, [sp], #96
  46016c:	ret
  460170:	cbz	x22, 46014c <nftw@plt+0x5d5cc>
  460174:	mov	x1, x19
  460178:	mov	x0, x26
  46017c:	mov	x19, #0x0                   	// #0
  460180:	blr	x22
  460184:	b	460124 <nftw@plt+0x5d5a4>
  460188:	adrp	x3, 4a4000 <_obstack_memory_used@@Base+0x42bb8>
  46018c:	mov	x2, x0
  460190:	adrp	x1, 481000 <_obstack_memory_used@@Base+0x1fbb8>
  460194:	add	x1, x1, #0x5c0
  460198:	ldr	x0, [x3, #1392]
  46019c:	bl	402b30 <fprintf@plt>
  4601a0:	bl	4027f0 <abort@plt>
  4601a4:	nop
  4601a8:	stp	x29, x30, [sp, #-80]!
  4601ac:	mov	x29, sp
  4601b0:	stp	x19, x20, [sp, #16]
  4601b4:	mov	w20, #0x1e                  	// #30
  4601b8:	stp	x21, x22, [sp, #32]
  4601bc:	mov	x21, x5
  4601c0:	mov	x22, x6
  4601c4:	stp	x23, x24, [sp, #48]
  4601c8:	mov	x24, x2
  4601cc:	mov	x23, x3
  4601d0:	mov	w2, #0x0                   	// #0
  4601d4:	stp	x25, x26, [sp, #64]
  4601d8:	mov	x25, x1
  4601dc:	adrp	x1, 481000 <_obstack_memory_used@@Base+0x1fbb8>
  4601e0:	add	x1, x1, #0x5e8
  4601e4:	b	460204 <nftw@plt+0x5d684>
  4601e8:	sub	w7, w20, w2
  4601ec:	add	w7, w2, w7, lsr #1
  4601f0:	ubfiz	x3, x7, #4, #32
  4601f4:	ldr	w3, [x1, x3]
  4601f8:	cmp	x0, x3
  4601fc:	b.hi	460274 <nftw@plt+0x5d6f4>  // b.pmore
  460200:	mov	w20, w7
  460204:	cmp	w20, w2
  460208:	b.ne	4601e8 <nftw@plt+0x5d668>  // b.any
  46020c:	ubfiz	x2, x20, #4, #32
  460210:	ldr	w26, [x1, x2]
  460214:	cmp	x0, x26
  460218:	b.hi	4602b0 <nftw@plt+0x5d730>  // b.pmore
  46021c:	mov	x1, #0x70                  	// #112
  460220:	mov	x0, #0x1                   	// #1
  460224:	blr	x4
  460228:	mov	x19, x0
  46022c:	cbz	x0, 46027c <nftw@plt+0x5d6fc>
  460230:	mov	x0, x26
  460234:	mov	x1, #0x8                   	// #8
  460238:	blr	x21
  46023c:	str	x0, [x19, #24]
  460240:	cbz	x0, 46029c <nftw@plt+0x5d71c>
  460244:	stp	x25, x24, [x19]
  460248:	str	x23, [x19, #16]
  46024c:	str	x26, [x19, #32]
  460250:	stp	x21, x22, [x19, #64]
  460254:	str	w20, [x19, #104]
  460258:	mov	x0, x19
  46025c:	ldp	x19, x20, [sp, #16]
  460260:	ldp	x21, x22, [sp, #32]
  460264:	ldp	x23, x24, [sp, #48]
  460268:	ldp	x25, x26, [sp, #64]
  46026c:	ldp	x29, x30, [sp], #80
  460270:	ret
  460274:	add	w2, w7, #0x1
  460278:	b	460204 <nftw@plt+0x5d684>
  46027c:	mov	x19, #0x0                   	// #0
  460280:	mov	x0, x19
  460284:	ldp	x19, x20, [sp, #16]
  460288:	ldp	x21, x22, [sp, #32]
  46028c:	ldp	x23, x24, [sp, #48]
  460290:	ldp	x25, x26, [sp, #64]
  460294:	ldp	x29, x30, [sp], #80
  460298:	ret
  46029c:	cbz	x22, 46027c <nftw@plt+0x5d6fc>
  4602a0:	mov	x0, x19
  4602a4:	mov	x19, #0x0                   	// #0
  4602a8:	blr	x22
  4602ac:	b	460258 <nftw@plt+0x5d6d8>
  4602b0:	adrp	x3, 4a4000 <_obstack_memory_used@@Base+0x42bb8>
  4602b4:	mov	x2, x0
  4602b8:	adrp	x1, 481000 <_obstack_memory_used@@Base+0x1fbb8>
  4602bc:	add	x1, x1, #0x5c0
  4602c0:	ldr	x0, [x3, #1392]
  4602c4:	bl	402b30 <fprintf@plt>
  4602c8:	bl	4027f0 <abort@plt>
  4602cc:	nop
  4602d0:	mov	x6, x5
  4602d4:	mov	x5, x4
  4602d8:	b	4601a8 <nftw@plt+0x5d628>
  4602dc:	nop
  4602e0:	stp	x1, x2, [x0]
  4602e4:	str	x3, [x0, #16]
  4602e8:	stp	x4, x5, [x0, #80]
  4602ec:	str	x6, [x0, #96]
  4602f0:	ret
  4602f4:	nop
  4602f8:	adrp	x5, 461000 <nftw@plt+0x5e480>
  4602fc:	add	x5, x5, #0x598
  460300:	mov	x4, x5
  460304:	adrp	x6, 402000 <memcpy@plt-0x490>
  460308:	add	x6, x6, #0x910
  46030c:	b	4601a8 <nftw@plt+0x5d628>
  460310:	adrp	x5, 402000 <memcpy@plt-0x490>
  460314:	add	x5, x5, #0x710
  460318:	mov	x4, x5
  46031c:	adrp	x6, 402000 <memcpy@plt-0x490>
  460320:	add	x6, x6, #0x910
  460324:	b	4601a8 <nftw@plt+0x5d628>
  460328:	stp	x29, x30, [sp, #-48]!
  46032c:	mov	x29, sp
  460330:	stp	x19, x20, [sp, #16]
  460334:	mov	x20, x0
  460338:	ldr	x0, [x0, #16]
  46033c:	str	x21, [sp, #32]
  460340:	ldr	x21, [x20, #24]
  460344:	cbz	x0, 460374 <nftw@plt+0x5d7f4>
  460348:	ldr	x19, [x20, #32]
  46034c:	subs	w19, w19, #0x1
  460350:	b.mi	460374 <nftw@plt+0x5d7f4>  // b.first
  460354:	sxtw	x19, w19
  460358:	ldr	x0, [x21, x19, lsl #3]
  46035c:	sub	x19, x19, #0x1
  460360:	cmp	x0, #0x1
  460364:	b.ls	460370 <nftw@plt+0x5d7f0>  // b.plast
  460368:	ldr	x1, [x20, #16]
  46036c:	blr	x1
  460370:	tbz	w19, #31, 460358 <nftw@plt+0x5d7d8>
  460374:	ldr	x1, [x20, #72]
  460378:	cbz	x1, 4603a0 <nftw@plt+0x5d820>
  46037c:	mov	x0, x21
  460380:	blr	x1
  460384:	mov	x0, x20
  460388:	ldr	x21, [sp, #32]
  46038c:	ldr	x1, [x20, #72]
  460390:	ldp	x19, x20, [sp, #16]
  460394:	mov	x16, x1
  460398:	ldp	x29, x30, [sp], #48
  46039c:	br	x16
  4603a0:	ldr	x2, [x20, #96]
  4603a4:	cbz	x2, 4603d4 <nftw@plt+0x5d854>
  4603a8:	ldr	x0, [x20, #80]
  4603ac:	mov	x1, x21
  4603b0:	blr	x2
  4603b4:	mov	x1, x20
  4603b8:	ldr	x21, [sp, #32]
  4603bc:	ldr	x0, [x20, #80]
  4603c0:	ldr	x2, [x20, #96]
  4603c4:	ldp	x19, x20, [sp, #16]
  4603c8:	mov	x16, x2
  4603cc:	ldp	x29, x30, [sp], #48
  4603d0:	br	x16
  4603d4:	ldp	x19, x20, [sp, #16]
  4603d8:	ldr	x21, [sp, #32]
  4603dc:	ldp	x29, x30, [sp], #48
  4603e0:	ret
  4603e4:	nop
  4603e8:	stp	x29, x30, [sp, #-48]!
  4603ec:	mov	x29, sp
  4603f0:	stp	x19, x20, [sp, #16]
  4603f4:	mov	x20, x0
  4603f8:	ldr	x0, [x0, #16]
  4603fc:	stp	x21, x22, [sp, #32]
  460400:	ldp	x21, x22, [x20, #24]
  460404:	cbz	x0, 460434 <nftw@plt+0x5d8b4>
  460408:	subs	w19, w22, #0x1
  46040c:	b.mi	460434 <nftw@plt+0x5d8b4>  // b.first
  460410:	sxtw	x19, w19
  460414:	nop
  460418:	ldr	x0, [x21, x19, lsl #3]
  46041c:	cmp	x0, #0x1
  460420:	b.ls	46042c <nftw@plt+0x5d8ac>  // b.plast
  460424:	ldr	x1, [x20, #16]
  460428:	blr	x1
  46042c:	sub	x19, x19, #0x1
  460430:	tbz	w19, #31, 460418 <nftw@plt+0x5d898>
  460434:	cmp	x22, #0x20, lsl #12
  460438:	b.ls	4604d8 <nftw@plt+0x5d958>  // b.plast
  46043c:	adrp	x3, 481000 <_obstack_memory_used@@Base+0x1fbb8>
  460440:	mov	w2, #0x1e                  	// #30
  460444:	add	x3, x3, #0x5e8
  460448:	mov	w19, #0x0                   	// #0
  46044c:	b	46046c <nftw@plt+0x5d8ec>
  460450:	sub	w1, w2, w19
  460454:	add	w1, w19, w1, lsr #1
  460458:	ubfiz	x0, x1, #4, #32
  46045c:	ldr	w0, [x3, x0]
  460460:	cmp	w0, #0x7f
  460464:	b.ls	4604fc <nftw@plt+0x5d97c>  // b.plast
  460468:	mov	w2, w1
  46046c:	cmp	w2, w19
  460470:	b.ne	460450 <nftw@plt+0x5d8d0>  // b.any
  460474:	ubfiz	x2, x2, #4, #32
  460478:	ldr	w0, [x3, x2]
  46047c:	cmp	w0, #0x7f
  460480:	b.ls	46053c <nftw@plt+0x5d9bc>  // b.plast
  460484:	ldr	x1, [x20, #72]
  460488:	sbfiz	x0, x19, #4, #32
  46048c:	ldr	w21, [x3, x0]
  460490:	cbz	x1, 460504 <nftw@plt+0x5d984>
  460494:	ldr	x0, [x20, #24]
  460498:	blr	x1
  46049c:	ldr	x3, [x20, #88]
  4604a0:	sxtw	x21, w21
  4604a4:	cbz	x3, 460524 <nftw@plt+0x5d9a4>
  4604a8:	ldr	x0, [x20, #80]
  4604ac:	mov	x1, x21
  4604b0:	mov	x2, #0x8                   	// #8
  4604b4:	blr	x3
  4604b8:	str	x0, [x20, #24]
  4604bc:	str	x21, [x20, #32]
  4604c0:	stp	xzr, xzr, [x20, #40]
  4604c4:	str	w19, [x20, #104]
  4604c8:	ldp	x19, x20, [sp, #16]
  4604cc:	ldp	x21, x22, [sp, #32]
  4604d0:	ldp	x29, x30, [sp], #48
  4604d4:	ret
  4604d8:	lsl	x2, x22, #3
  4604dc:	mov	x0, x21
  4604e0:	mov	w1, #0x0                   	// #0
  4604e4:	bl	4026f0 <memset@plt>
  4604e8:	stp	xzr, xzr, [x20, #40]
  4604ec:	ldp	x19, x20, [sp, #16]
  4604f0:	ldp	x21, x22, [sp, #32]
  4604f4:	ldp	x29, x30, [sp], #48
  4604f8:	ret
  4604fc:	add	w19, w1, #0x1
  460500:	b	46046c <nftw@plt+0x5d8ec>
  460504:	ldr	x2, [x20, #96]
  460508:	cbz	x2, 46049c <nftw@plt+0x5d91c>
  46050c:	ldr	x1, [x20, #24]
  460510:	sxtw	x21, w21
  460514:	ldr	x0, [x20, #80]
  460518:	blr	x2
  46051c:	ldr	x3, [x20, #88]
  460520:	cbnz	x3, 4604a8 <nftw@plt+0x5d928>
  460524:	ldr	x2, [x20, #64]
  460528:	mov	x0, x21
  46052c:	mov	x1, #0x8                   	// #8
  460530:	blr	x2
  460534:	str	x0, [x20, #24]
  460538:	b	4604bc <nftw@plt+0x5d93c>
  46053c:	adrp	x0, 4a4000 <_obstack_memory_used@@Base+0x42bb8>
  460540:	adrp	x1, 481000 <_obstack_memory_used@@Base+0x1fbb8>
  460544:	add	x1, x1, #0x5c0
  460548:	mov	x2, #0x80                  	// #128
  46054c:	ldr	x0, [x0, #1392]
  460550:	bl	402b30 <fprintf@plt>
  460554:	bl	4027f0 <abort@plt>
  460558:	stp	x29, x30, [sp, #-80]!
  46055c:	mov	x29, sp
  460560:	stp	x21, x22, [sp, #32]
  460564:	mov	x21, x0
  460568:	ldr	w0, [x0, #104]
  46056c:	mov	w22, w2
  460570:	stp	x19, x20, [sp, #16]
  460574:	ldr	w2, [x21, #56]
  460578:	lsl	x3, x0, #4
  46057c:	ldr	x4, [x21, #24]
  460580:	str	x25, [sp, #64]
  460584:	adrp	x25, 481000 <_obstack_memory_used@@Base+0x1fbb8>
  460588:	add	x25, x25, #0x5e8
  46058c:	add	x5, x25, x3
  460590:	add	w2, w2, #0x1
  460594:	str	w2, [x21, #56]
  460598:	ldr	w2, [x25, x3]
  46059c:	ldr	w3, [x5, #4]
  4605a0:	ldr	w5, [x5, #12]
  4605a4:	umull	x3, w22, w3
  4605a8:	lsr	x3, x3, #32
  4605ac:	sub	w19, w22, w3
  4605b0:	add	w19, w3, w19, lsr #1
  4605b4:	lsr	w19, w19, w5
  4605b8:	msub	w19, w19, w2, w22
  4605bc:	ldr	x20, [x4, w19, uxtw #3]
  4605c0:	cbz	x20, 4606a8 <nftw@plt+0x5db28>
  4605c4:	stp	x23, x24, [sp, #48]
  4605c8:	cmp	x20, #0x1
  4605cc:	mov	x24, x1
  4605d0:	ldr	x23, [x21, #32]
  4605d4:	b.eq	460600 <nftw@plt+0x5da80>  // b.none
  4605d8:	ldr	x2, [x21, #8]
  4605dc:	mov	x0, x20
  4605e0:	blr	x2
  4605e4:	cbnz	w0, 4606c4 <nftw@plt+0x5db44>
  4605e8:	ldr	w0, [x21, #104]
  4605ec:	ldr	x4, [x21, #24]
  4605f0:	lsl	x1, x0, #4
  4605f4:	add	x3, x25, x1
  4605f8:	ldr	w2, [x25, x1]
  4605fc:	ldr	w5, [x3, #12]
  460600:	add	x25, x25, x0, lsl #4
  460604:	sub	w0, w2, #0x2
  460608:	add	w6, w22, #0x1
  46060c:	ldr	w3, [x21, #60]
  460610:	ldr	w1, [x25, #8]
  460614:	umull	x2, w22, w1
  460618:	lsr	x1, x2, #32
  46061c:	sub	w2, w22, w1
  460620:	add	w2, w1, w2, lsr #1
  460624:	lsr	w2, w2, w5
  460628:	msub	w22, w2, w0, w6
  46062c:	add	w2, w19, w22
  460630:	add	w3, w3, #0x1
  460634:	str	w3, [x21, #60]
  460638:	mov	x19, x2
  46063c:	cmp	x23, w2, uxtw
  460640:	mov	x1, x24
  460644:	b.hi	460650 <nftw@plt+0x5dad0>  // b.pmore
  460648:	sub	w2, w2, w23
  46064c:	mov	x19, x2
  460650:	ldr	x20, [x4, x2, lsl #3]
  460654:	cmp	x20, #0x1
  460658:	mov	x0, x20
  46065c:	cbz	x20, 4606a4 <nftw@plt+0x5db24>
  460660:	b.eq	46062c <nftw@plt+0x5daac>  // b.none
  460664:	ldr	x2, [x21, #8]
  460668:	blr	x2
  46066c:	cbnz	w0, 4606c4 <nftw@plt+0x5db44>
  460670:	ldr	w3, [x21, #60]
  460674:	add	w2, w19, w22
  460678:	mov	x19, x2
  46067c:	mov	x1, x24
  460680:	add	w3, w3, #0x1
  460684:	str	w3, [x21, #60]
  460688:	cmp	x23, w2, uxtw
  46068c:	ldr	x4, [x21, #24]
  460690:	b.ls	460648 <nftw@plt+0x5dac8>  // b.plast
  460694:	ldr	x20, [x4, x2, lsl #3]
  460698:	cmp	x20, #0x1
  46069c:	mov	x0, x20
  4606a0:	cbnz	x20, 460660 <nftw@plt+0x5dae0>
  4606a4:	ldp	x23, x24, [sp, #48]
  4606a8:	mov	x20, #0x0                   	// #0
  4606ac:	mov	x0, x20
  4606b0:	ldp	x19, x20, [sp, #16]
  4606b4:	ldp	x21, x22, [sp, #32]
  4606b8:	ldr	x25, [sp, #64]
  4606bc:	ldp	x29, x30, [sp], #80
  4606c0:	ret
  4606c4:	mov	x0, x20
  4606c8:	ldp	x19, x20, [sp, #16]
  4606cc:	ldp	x21, x22, [sp, #32]
  4606d0:	ldp	x23, x24, [sp, #48]
  4606d4:	ldr	x25, [sp, #64]
  4606d8:	ldp	x29, x30, [sp], #80
  4606dc:	ret
  4606e0:	stp	x29, x30, [sp, #-32]!
  4606e4:	mov	x29, sp
  4606e8:	stp	x19, x20, [sp, #16]
  4606ec:	mov	x19, x0
  4606f0:	mov	x20, x1
  4606f4:	mov	x0, x1
  4606f8:	ldr	x1, [x19]
  4606fc:	blr	x1
  460700:	mov	w2, w0
  460704:	mov	x1, x20
  460708:	mov	x0, x19
  46070c:	ldp	x19, x20, [sp, #16]
  460710:	ldp	x29, x30, [sp], #32
  460714:	b	460558 <nftw@plt+0x5d9d8>
  460718:	stp	x29, x30, [sp, #-96]!
  46071c:	cmp	w3, #0x1
  460720:	mov	x29, sp
  460724:	stp	x21, x22, [sp, #32]
  460728:	mov	w22, w3
  46072c:	mov	w21, w2
  460730:	stp	x23, x24, [sp, #48]
  460734:	mov	x24, x0
  460738:	stp	x25, x26, [sp, #64]
  46073c:	mov	x26, x1
  460740:	ldr	x25, [x0, #32]
  460744:	b.eq	4608cc <nftw@plt+0x5dd4c>  // b.none
  460748:	stp	x19, x20, [sp, #16]
  46074c:	str	x27, [sp, #80]
  460750:	ldr	w1, [x24, #104]
  460754:	adrp	x20, 481000 <_obstack_memory_used@@Base+0x1fbb8>
  460758:	add	x20, x20, #0x5e8
  46075c:	ldr	w0, [x24, #56]
  460760:	ldr	x3, [x24, #24]
  460764:	lsl	x2, x1, #4
  460768:	add	x5, x20, x2
  46076c:	add	w0, w0, #0x1
  460770:	str	w0, [x24, #56]
  460774:	ldr	w4, [x20, x2]
  460778:	ldr	w2, [x5, #4]
  46077c:	ldr	w5, [x5, #12]
  460780:	umull	x2, w21, w2
  460784:	lsr	x2, x2, #32
  460788:	sub	w19, w21, w2
  46078c:	add	w19, w2, w19, lsr #1
  460790:	lsr	w19, w19, w5
  460794:	msub	w19, w19, w4, w21
  460798:	ubfiz	x27, x19, #3, #32
  46079c:	ldr	x0, [x3, w19, uxtw #3]
  4607a0:	add	x23, x3, x27
  4607a4:	cbz	x0, 460944 <nftw@plt+0x5ddc4>
  4607a8:	cmp	x0, #0x1
  4607ac:	b.eq	4607dc <nftw@plt+0x5dc5c>  // b.none
  4607b0:	ldr	x2, [x24, #8]
  4607b4:	mov	x1, x26
  4607b8:	blr	x2
  4607bc:	cbnz	w0, 46091c <nftw@plt+0x5dd9c>
  4607c0:	ldr	w1, [x24, #104]
  4607c4:	mov	x23, #0x0                   	// #0
  4607c8:	ldr	x3, [x24, #24]
  4607cc:	lsl	x0, x1, #4
  4607d0:	add	x2, x20, x0
  4607d4:	ldr	w4, [x20, x0]
  4607d8:	ldr	w5, [x2, #12]
  4607dc:	add	x1, x20, x1, lsl #4
  4607e0:	sub	w2, w4, #0x2
  4607e4:	add	w6, w21, #0x1
  4607e8:	ldr	w4, [x24, #60]
  4607ec:	ldr	w0, [x1, #8]
  4607f0:	umull	x0, w21, w0
  4607f4:	lsr	x0, x0, #32
  4607f8:	sub	w20, w21, w0
  4607fc:	add	w20, w0, w20, lsr #1
  460800:	lsr	w20, w20, w5
  460804:	msub	w20, w20, w2, w6
  460808:	add	w2, w19, w20
  46080c:	add	w4, w4, #0x1
  460810:	str	w4, [x24, #60]
  460814:	mov	x19, x2
  460818:	cmp	x25, w2, uxtw
  46081c:	mov	x1, x26
  460820:	b.hi	46082c <nftw@plt+0x5dcac>  // b.pmore
  460824:	sub	w2, w2, w25
  460828:	mov	x19, x2
  46082c:	ldr	x0, [x3, x2, lsl #3]
  460830:	lsl	x21, x2, #3
  460834:	add	x2, x3, x21
  460838:	cmp	x0, #0x1
  46083c:	cbz	x0, 460888 <nftw@plt+0x5dd08>
  460840:	b.eq	4608c0 <nftw@plt+0x5dd40>  // b.none
  460844:	ldr	x2, [x24, #8]
  460848:	blr	x2
  46084c:	cbnz	w0, 4608f4 <nftw@plt+0x5dd74>
  460850:	ldr	w4, [x24, #60]
  460854:	add	w2, w19, w20
  460858:	mov	x19, x2
  46085c:	mov	x1, x26
  460860:	add	w4, w4, #0x1
  460864:	str	w4, [x24, #60]
  460868:	cmp	x25, w2, uxtw
  46086c:	ldr	x3, [x24, #24]
  460870:	b.ls	460824 <nftw@plt+0x5dca4>  // b.plast
  460874:	ldr	x0, [x3, x2, lsl #3]
  460878:	lsl	x21, x2, #3
  46087c:	add	x2, x3, x21
  460880:	cmp	x0, #0x1
  460884:	cbnz	x0, 460840 <nftw@plt+0x5dcc0>
  460888:	cbz	w22, 460974 <nftw@plt+0x5ddf4>
  46088c:	cbz	x23, 460998 <nftw@plt+0x5de18>
  460890:	ldr	x0, [x24, #48]
  460894:	ldp	x19, x20, [sp, #16]
  460898:	sub	x0, x0, #0x1
  46089c:	ldr	x27, [sp, #80]
  4608a0:	str	x0, [x24, #48]
  4608a4:	str	xzr, [x23]
  4608a8:	mov	x0, x23
  4608ac:	ldp	x21, x22, [sp, #32]
  4608b0:	ldp	x23, x24, [sp, #48]
  4608b4:	ldp	x25, x26, [sp, #64]
  4608b8:	ldp	x29, x30, [sp], #96
  4608bc:	ret
  4608c0:	cmp	x23, #0x0
  4608c4:	csel	x23, x23, x2, ne  // ne = any
  4608c8:	b	460808 <nftw@plt+0x5dc88>
  4608cc:	ldr	x2, [x0, #40]
  4608d0:	add	x1, x25, x25, lsl #1
  4608d4:	cmp	x1, x2, lsl #2
  4608d8:	b.hi	460748 <nftw@plt+0x5dbc8>  // b.pmore
  4608dc:	bl	45fdd8 <nftw@plt+0x5d258>
  4608e0:	cbz	w0, 46097c <nftw@plt+0x5ddfc>
  4608e4:	stp	x19, x20, [sp, #16]
  4608e8:	ldr	x25, [x24, #32]
  4608ec:	str	x27, [sp, #80]
  4608f0:	b	460750 <nftw@plt+0x5dbd0>
  4608f4:	ldr	x23, [x24, #24]
  4608f8:	ldp	x19, x20, [sp, #16]
  4608fc:	add	x23, x23, x21
  460900:	mov	x0, x23
  460904:	ldp	x21, x22, [sp, #32]
  460908:	ldp	x23, x24, [sp, #48]
  46090c:	ldp	x25, x26, [sp, #64]
  460910:	ldr	x27, [sp, #80]
  460914:	ldp	x29, x30, [sp], #96
  460918:	ret
  46091c:	ldr	x23, [x24, #24]
  460920:	ldp	x19, x20, [sp, #16]
  460924:	add	x23, x23, x27
  460928:	mov	x0, x23
  46092c:	ldp	x21, x22, [sp, #32]
  460930:	ldp	x23, x24, [sp, #48]
  460934:	ldp	x25, x26, [sp, #64]
  460938:	ldr	x27, [sp, #80]
  46093c:	ldp	x29, x30, [sp], #96
  460940:	ret
  460944:	cbz	w22, 460974 <nftw@plt+0x5ddf4>
  460948:	ldr	x0, [x24, #40]
  46094c:	ldp	x19, x20, [sp, #16]
  460950:	add	x0, x0, #0x1
  460954:	ldr	x27, [sp, #80]
  460958:	str	x0, [x24, #40]
  46095c:	mov	x0, x23
  460960:	ldp	x21, x22, [sp, #32]
  460964:	ldp	x23, x24, [sp, #48]
  460968:	ldp	x25, x26, [sp, #64]
  46096c:	ldp	x29, x30, [sp], #96
  460970:	ret
  460974:	ldp	x19, x20, [sp, #16]
  460978:	ldr	x27, [sp, #80]
  46097c:	mov	x23, #0x0                   	// #0
  460980:	mov	x0, x23
  460984:	ldp	x21, x22, [sp, #32]
  460988:	ldp	x23, x24, [sp, #48]
  46098c:	ldp	x25, x26, [sp, #64]
  460990:	ldp	x29, x30, [sp], #96
  460994:	ret
  460998:	mov	x23, x2
  46099c:	b	460948 <nftw@plt+0x5ddc8>
  4609a0:	stp	x29, x30, [sp, #-48]!
  4609a4:	mov	x29, sp
  4609a8:	stp	x19, x20, [sp, #16]
  4609ac:	mov	x19, x0
  4609b0:	mov	x20, x1
  4609b4:	mov	x0, x1
  4609b8:	ldr	x1, [x19]
  4609bc:	str	x21, [sp, #32]
  4609c0:	mov	w21, w2
  4609c4:	blr	x1
  4609c8:	mov	w2, w0
  4609cc:	mov	w3, w21
  4609d0:	mov	x1, x20
  4609d4:	mov	x0, x19
  4609d8:	ldp	x19, x20, [sp, #16]
  4609dc:	ldr	x21, [sp, #32]
  4609e0:	ldp	x29, x30, [sp], #48
  4609e4:	b	460718 <nftw@plt+0x5db98>
  4609e8:	stp	x29, x30, [sp, #-32]!
  4609ec:	mov	x29, sp
  4609f0:	stp	x19, x20, [sp, #16]
  4609f4:	mov	x19, x0
  4609f8:	mov	x20, x1
  4609fc:	mov	x0, x1
  460a00:	ldr	x1, [x19]
  460a04:	blr	x1
  460a08:	mov	w2, w0
  460a0c:	mov	x1, x20
  460a10:	mov	x0, x19
  460a14:	mov	w3, #0x0                   	// #0
  460a18:	bl	460718 <nftw@plt+0x5db98>
  460a1c:	cbz	x0, 460a48 <nftw@plt+0x5dec8>
  460a20:	ldr	x1, [x19, #16]
  460a24:	mov	x20, x0
  460a28:	cbz	x1, 460a34 <nftw@plt+0x5deb4>
  460a2c:	ldr	x0, [x0]
  460a30:	blr	x1
  460a34:	ldr	x0, [x19, #48]
  460a38:	mov	x1, #0x1                   	// #1
  460a3c:	str	x1, [x20]
  460a40:	add	x0, x0, x1
  460a44:	str	x0, [x19, #48]
  460a48:	ldp	x19, x20, [sp, #16]
  460a4c:	ldp	x29, x30, [sp], #32
  460a50:	ret
  460a54:	nop
  460a58:	stp	x29, x30, [sp, #-32]!
  460a5c:	mov	w3, #0x0                   	// #0
  460a60:	mov	x29, sp
  460a64:	stp	x19, x20, [sp, #16]
  460a68:	mov	x19, x0
  460a6c:	bl	460718 <nftw@plt+0x5db98>
  460a70:	cbz	x0, 460a9c <nftw@plt+0x5df1c>
  460a74:	ldr	x1, [x19, #16]
  460a78:	mov	x20, x0
  460a7c:	cbz	x1, 460a88 <nftw@plt+0x5df08>
  460a80:	ldr	x0, [x0]
  460a84:	blr	x1
  460a88:	ldr	x0, [x19, #48]
  460a8c:	mov	x1, #0x1                   	// #1
  460a90:	str	x1, [x20]
  460a94:	add	x0, x0, x1
  460a98:	str	x0, [x19, #48]
  460a9c:	ldp	x19, x20, [sp, #16]
  460aa0:	ldp	x29, x30, [sp], #32
  460aa4:	ret
  460aa8:	stp	x29, x30, [sp, #-32]!
  460aac:	mov	x29, sp
  460ab0:	stp	x19, x20, [sp, #16]
  460ab4:	mov	x20, x1
  460ab8:	ldr	x1, [x0, #24]
  460abc:	cmp	x1, x20
  460ac0:	b.hi	460b10 <nftw@plt+0x5df90>  // b.pmore
  460ac4:	mov	x19, x0
  460ac8:	ldr	x0, [x0, #32]
  460acc:	add	x0, x1, x0, lsl #3
  460ad0:	cmp	x20, x0
  460ad4:	b.cs	460b10 <nftw@plt+0x5df90>  // b.hs, b.nlast
  460ad8:	ldr	x0, [x20]
  460adc:	cmp	x0, #0x1
  460ae0:	b.ls	460b10 <nftw@plt+0x5df90>  // b.plast
  460ae4:	ldr	x1, [x19, #16]
  460ae8:	cbz	x1, 460af0 <nftw@plt+0x5df70>
  460aec:	blr	x1
  460af0:	ldr	x0, [x19, #48]
  460af4:	mov	x1, #0x1                   	// #1
  460af8:	str	x1, [x20]
  460afc:	add	x0, x0, x1
  460b00:	str	x0, [x19, #48]
  460b04:	ldp	x19, x20, [sp, #16]
  460b08:	ldp	x29, x30, [sp], #32
  460b0c:	ret
  460b10:	bl	4027f0 <abort@plt>
  460b14:	nop
  460b18:	stp	x29, x30, [sp, #-48]!
  460b1c:	mov	x29, sp
  460b20:	stp	x19, x20, [sp, #16]
  460b24:	mov	x20, x2
  460b28:	stp	x21, x22, [sp, #32]
  460b2c:	mov	x22, x1
  460b30:	ldp	x19, x21, [x0, #24]
  460b34:	add	x21, x19, x21, lsl #3
  460b38:	ldr	x3, [x19]
  460b3c:	mov	x0, x19
  460b40:	mov	x1, x20
  460b44:	add	x19, x19, #0x8
  460b48:	cmp	x3, #0x1
  460b4c:	b.ls	460b58 <nftw@plt+0x5dfd8>  // b.plast
  460b50:	blr	x22
  460b54:	cbz	w0, 460b60 <nftw@plt+0x5dfe0>
  460b58:	cmp	x21, x19
  460b5c:	b.hi	460b38 <nftw@plt+0x5dfb8>  // b.pmore
  460b60:	ldp	x19, x20, [sp, #16]
  460b64:	ldp	x21, x22, [sp, #32]
  460b68:	ldp	x29, x30, [sp], #48
  460b6c:	ret
  460b70:	stp	x29, x30, [sp, #-48]!
  460b74:	mov	x3, #0x20                  	// #32
  460b78:	mov	x29, sp
  460b7c:	stp	x19, x20, [sp, #16]
  460b80:	mov	x19, x0
  460b84:	stp	x21, x22, [sp, #32]
  460b88:	mov	x22, x1
  460b8c:	mov	x21, x2
  460b90:	ldp	x20, x1, [x0, #32]
  460b94:	ldr	x2, [x0, #48]
  460b98:	sub	x1, x1, x2
  460b9c:	lsl	x1, x1, #3
  460ba0:	cmp	x1, x3
  460ba4:	csel	x1, x1, x3, cs  // cs = hs, nlast
  460ba8:	cmp	x20, x1
  460bac:	b.hi	460bf0 <nftw@plt+0x5e070>  // b.pmore
  460bb0:	ldr	x19, [x19, #24]
  460bb4:	add	x20, x19, x20, lsl #3
  460bb8:	ldr	x3, [x19]
  460bbc:	mov	x0, x19
  460bc0:	mov	x1, x21
  460bc4:	add	x19, x19, #0x8
  460bc8:	cmp	x3, #0x1
  460bcc:	b.ls	460bd8 <nftw@plt+0x5e058>  // b.plast
  460bd0:	blr	x22
  460bd4:	cbz	w0, 460be0 <nftw@plt+0x5e060>
  460bd8:	cmp	x20, x19
  460bdc:	b.hi	460bb8 <nftw@plt+0x5e038>  // b.pmore
  460be0:	ldp	x19, x20, [sp, #16]
  460be4:	ldp	x21, x22, [sp, #32]
  460be8:	ldp	x29, x30, [sp], #48
  460bec:	ret
  460bf0:	bl	45fdd8 <nftw@plt+0x5d258>
  460bf4:	ldr	x20, [x19, #32]
  460bf8:	b	460bb0 <nftw@plt+0x5e030>
  460bfc:	nop
  460c00:	ldr	w1, [x0, #56]
  460c04:	movi	d0, #0x0
  460c08:	cbz	w1, 460c1c <nftw@plt+0x5e09c>
  460c0c:	ldr	w0, [x0, #60]
  460c10:	ucvtf	d1, w1
  460c14:	ucvtf	d0, w0
  460c18:	fdiv	d0, d0, d1
  460c1c:	ret
  460c20:	mov	x2, x0
  460c24:	mov	w0, #0x0                   	// #0
  460c28:	ldrb	w1, [x2], #1
  460c2c:	cbz	w1, 460c48 <nftw@plt+0x5e0c8>
  460c30:	mov	w3, #0x43                  	// #67
  460c34:	nop
  460c38:	madd	w0, w0, w3, w1
  460c3c:	ldrb	w1, [x2], #1
  460c40:	sub	w0, w0, #0x71
  460c44:	cbnz	w1, 460c38 <nftw@plt+0x5e0b8>
  460c48:	ret
  460c4c:	nop
  460c50:	mov	w8, #0x79b9                	// #31161
  460c54:	mov	w5, w1
  460c58:	movk	w8, #0x9e37, lsl #16
  460c5c:	tst	x0, #0x3
  460c60:	mov	w7, w8
  460c64:	b.eq	460e90 <nftw@plt+0x5e310>  // b.none
  460c68:	cmp	w1, #0xb
  460c6c:	b.ls	460d54 <nftw@plt+0x5e1d4>  // b.plast
  460c70:	ldrb	w3, [x0, #10]
  460c74:	sub	w5, w5, #0xc
  460c78:	ldrb	w10, [x0, #6]
  460c7c:	cmp	w5, #0xb
  460c80:	ldrb	w4, [x0, #5]
  460c84:	ldrb	w9, [x0, #7]
  460c88:	lsl	w6, w3, #16
  460c8c:	ldrb	w13, [x0, #4]
  460c90:	lsl	w10, w10, #16
  460c94:	ldrb	w3, [x0, #9]
  460c98:	add	w4, w10, w4, lsl #8
  460c9c:	ldrb	w11, [x0, #11]
  460ca0:	ldrb	w12, [x0, #8]
  460ca4:	add	w9, w13, w9, lsl #24
  460ca8:	ldrb	w10, [x0, #2]
  460cac:	add	w3, w6, w3, lsl #8
  460cb0:	add	w4, w4, w9
  460cb4:	ldrb	w6, [x0, #1]
  460cb8:	ldrb	w9, [x0, #3]
  460cbc:	add	w11, w12, w11, lsl #24
  460cc0:	ldrb	w12, [x0], #12
  460cc4:	add	w3, w3, w11
  460cc8:	lsl	w10, w10, #16
  460ccc:	add	w2, w3, w2
  460cd0:	add	w4, w4, w8
  460cd4:	add	w6, w10, w6, lsl #8
  460cd8:	add	w3, w12, w9, lsl #24
  460cdc:	add	w8, w4, w2
  460ce0:	add	w6, w6, w3
  460ce4:	sub	w3, w4, w2
  460ce8:	sub	w4, w6, w8
  460cec:	add	w4, w4, w7
  460cf0:	eor	w4, w4, w2, lsr #13
  460cf4:	sub	w3, w3, w4
  460cf8:	sub	w2, w2, w4
  460cfc:	eor	w3, w3, w4, lsl #8
  460d00:	sub	w2, w2, w3
  460d04:	sub	w4, w4, w3
  460d08:	eor	w2, w2, w3, lsr #13
  460d0c:	sub	w4, w4, w2
  460d10:	sub	w3, w3, w2
  460d14:	eor	w4, w4, w2, lsr #12
  460d18:	sub	w3, w3, w4
  460d1c:	sub	w2, w2, w4
  460d20:	eor	w3, w3, w4, lsl #16
  460d24:	sub	w2, w2, w3
  460d28:	sub	w4, w4, w3
  460d2c:	eor	w2, w2, w3, lsr #5
  460d30:	sub	w4, w4, w2
  460d34:	sub	w3, w3, w2
  460d38:	eor	w7, w4, w2, lsr #3
  460d3c:	sub	w3, w3, w7
  460d40:	sub	w2, w2, w7
  460d44:	eor	w8, w3, w7, lsl #10
  460d48:	sub	w2, w2, w8
  460d4c:	eor	w2, w2, w8, lsr #15
  460d50:	b.hi	460c70 <nftw@plt+0x5e0f0>  // b.pmore
  460d54:	add	w2, w2, w1
  460d58:	cmp	w5, #0x6
  460d5c:	b.eq	460da0 <nftw@plt+0x5e220>  // b.none
  460d60:	b.ls	460dac <nftw@plt+0x5e22c>  // b.plast
  460d64:	cmp	w5, #0x9
  460d68:	b.eq	460d88 <nftw@plt+0x5e208>  // b.none
  460d6c:	b.ls	460e74 <nftw@plt+0x5e2f4>  // b.plast
  460d70:	cmp	w5, #0xa
  460d74:	b.eq	460d80 <nftw@plt+0x5e200>  // b.none
  460d78:	ldrb	w1, [x0, #10]
  460d7c:	add	w2, w2, w1, lsl #24
  460d80:	ldrb	w1, [x0, #9]
  460d84:	add	w2, w2, w1, lsl #16
  460d88:	ldrb	w1, [x0, #8]
  460d8c:	add	w2, w2, w1, lsl #8
  460d90:	ldrb	w1, [x0, #7]
  460d94:	add	w8, w8, w1, lsl #24
  460d98:	ldrb	w1, [x0, #6]
  460d9c:	add	w8, w8, w1, lsl #16
  460da0:	ldrb	w1, [x0, #5]
  460da4:	add	w8, w8, w1, lsl #8
  460da8:	b	460dc8 <nftw@plt+0x5e248>
  460dac:	cmp	w5, #0x3
  460db0:	b.eq	460dd8 <nftw@plt+0x5e258>  // b.none
  460db4:	b.ls	460e60 <nftw@plt+0x5e2e0>  // b.plast
  460db8:	cmp	w5, #0x4
  460dbc:	b.eq	460dd0 <nftw@plt+0x5e250>  // b.none
  460dc0:	cmp	w5, #0x5
  460dc4:	b.ne	460df0 <nftw@plt+0x5e270>  // b.any
  460dc8:	ldrb	w1, [x0, #4]
  460dcc:	add	w8, w8, w1
  460dd0:	ldrb	w1, [x0, #3]
  460dd4:	add	w7, w7, w1, lsl #24
  460dd8:	ldrb	w1, [x0, #2]
  460ddc:	add	w7, w7, w1, lsl #16
  460de0:	ldrb	w1, [x0, #1]
  460de4:	add	w7, w7, w1, lsl #8
  460de8:	ldrb	w0, [x0]
  460dec:	add	w7, w7, w0
  460df0:	add	w4, w8, w2
  460df4:	sub	w3, w8, w2
  460df8:	sub	w4, w7, w4
  460dfc:	eor	w7, w4, w2, lsr #13
  460e00:	sub	w3, w3, w7
  460e04:	sub	w2, w2, w7
  460e08:	eor	w3, w3, w7, lsl #8
  460e0c:	sub	w2, w2, w3
  460e10:	sub	w0, w7, w3
  460e14:	eor	w2, w2, w3, lsr #13
  460e18:	sub	w0, w0, w2
  460e1c:	sub	w1, w3, w2
  460e20:	eor	w0, w0, w2, lsr #12
  460e24:	sub	w1, w1, w0
  460e28:	sub	w2, w2, w0
  460e2c:	eor	w1, w1, w0, lsl #16
  460e30:	sub	w2, w2, w1
  460e34:	sub	w0, w0, w1
  460e38:	eor	w2, w2, w1, lsr #5
  460e3c:	sub	w0, w0, w2
  460e40:	sub	w1, w1, w2
  460e44:	eor	w0, w0, w2, lsr #3
  460e48:	sub	w1, w1, w0
  460e4c:	sub	w2, w2, w0
  460e50:	eor	w0, w1, w0, lsl #10
  460e54:	sub	w2, w2, w0
  460e58:	eor	w0, w2, w0, lsr #15
  460e5c:	ret
  460e60:	cmp	w5, #0x1
  460e64:	b.eq	460de8 <nftw@plt+0x5e268>  // b.none
  460e68:	cmp	w5, #0x2
  460e6c:	b.eq	460de0 <nftw@plt+0x5e260>  // b.none
  460e70:	b	460df0 <nftw@plt+0x5e270>
  460e74:	cmp	w5, #0x7
  460e78:	b.eq	460d98 <nftw@plt+0x5e218>  // b.none
  460e7c:	cmp	w5, #0x8
  460e80:	b.ne	460df0 <nftw@plt+0x5e270>  // b.any
  460e84:	ldrb	w1, [x0, #7]
  460e88:	add	w8, w8, w1, lsl #24
  460e8c:	b	460d98 <nftw@plt+0x5e218>
  460e90:	cmp	w1, #0xb
  460e94:	b.ls	460d54 <nftw@plt+0x5e1d4>  // b.plast
  460e98:	ldp	w4, w3, [x0]
  460e9c:	sub	w5, w5, #0xc
  460ea0:	ldr	w6, [x0, #8]
  460ea4:	cmp	w5, #0xb
  460ea8:	add	w3, w8, w3
  460eac:	add	w4, w7, w4
  460eb0:	add	w2, w2, w6
  460eb4:	add	x0, x0, #0xc
  460eb8:	add	w6, w3, w2
  460ebc:	sub	w3, w3, w2
  460ec0:	sub	w4, w4, w6
  460ec4:	eor	w4, w4, w2, lsr #13
  460ec8:	sub	w3, w3, w4
  460ecc:	sub	w2, w2, w4
  460ed0:	eor	w3, w3, w4, lsl #8
  460ed4:	sub	w2, w2, w3
  460ed8:	sub	w4, w4, w3
  460edc:	eor	w2, w2, w3, lsr #13
  460ee0:	sub	w4, w4, w2
  460ee4:	sub	w3, w3, w2
  460ee8:	eor	w4, w4, w2, lsr #12
  460eec:	sub	w3, w3, w4
  460ef0:	sub	w2, w2, w4
  460ef4:	eor	w3, w3, w4, lsl #16
  460ef8:	sub	w2, w2, w3
  460efc:	sub	w4, w4, w3
  460f00:	eor	w2, w2, w3, lsr #5
  460f04:	sub	w4, w4, w2
  460f08:	sub	w3, w3, w2
  460f0c:	eor	w7, w4, w2, lsr #3
  460f10:	sub	w3, w3, w7
  460f14:	sub	w2, w2, w7
  460f18:	eor	w8, w3, w7, lsl #10
  460f1c:	sub	w2, w2, w8
  460f20:	eor	w2, w2, w8, lsr #15
  460f24:	b.hi	460e98 <nftw@plt+0x5e318>  // b.pmore
  460f28:	b	460d54 <nftw@plt+0x5e1d4>
  460f2c:	nop
  460f30:	ret
  460f34:	nop
  460f38:	ldrb	w2, [x0]
  460f3c:	mov	x1, x0
  460f40:	cbz	w2, 460f5c <nftw@plt+0x5e3dc>
  460f44:	nop
  460f48:	add	x1, x1, #0x1
  460f4c:	cmp	w2, #0x2f
  460f50:	csel	x0, x0, x1, ne  // ne = any
  460f54:	ldrb	w2, [x1]
  460f58:	cbnz	w2, 460f48 <nftw@plt+0x5e3c8>
  460f5c:	ret
  460f60:	mov	x1, x0
  460f64:	adrp	x2, 481000 <_obstack_memory_used@@Base+0x1fbb8>
  460f68:	add	x0, x2, #0xaf0
  460f6c:	mov	w3, #0x88                  	// #136
  460f70:	ldrb	w2, [x1]
  460f74:	ldrh	w0, [x0, w2, sxtw #1]
  460f78:	tst	w3, w0
  460f7c:	b.eq	460f8c <nftw@plt+0x5e40c>  // b.none
  460f80:	ldrb	w0, [x1, #1]
  460f84:	cmp	w0, #0x3a
  460f88:	b.eq	460fb4 <nftw@plt+0x5e434>  // b.none
  460f8c:	mov	x0, x1
  460f90:	cbz	w2, 460fb0 <nftw@plt+0x5e430>
  460f94:	mov	w3, #0x5c                  	// #92
  460f98:	add	x1, x1, #0x1
  460f9c:	cmp	w2, #0x2f
  460fa0:	ccmp	w2, w3, #0x4, ne  // ne = any
  460fa4:	csel	x0, x0, x1, ne  // ne = any
  460fa8:	ldrb	w2, [x1]
  460fac:	cbnz	w2, 460f98 <nftw@plt+0x5e418>
  460fb0:	ret
  460fb4:	ldrb	w2, [x1, #2]
  460fb8:	add	x1, x1, #0x2
  460fbc:	b	460f8c <nftw@plt+0x5e40c>
  460fc0:	ldrb	w2, [x0]
  460fc4:	mov	x1, x0
  460fc8:	cbz	w2, 460fe4 <nftw@plt+0x5e464>
  460fcc:	nop
  460fd0:	add	x1, x1, #0x1
  460fd4:	cmp	w2, #0x2f
  460fd8:	csel	x0, x0, x1, ne  // ne = any
  460fdc:	ldrb	w2, [x1]
  460fe0:	cbnz	w2, 460fd0 <nftw@plt+0x5e450>
  460fe4:	ret
  460fe8:	mov	x12, #0x1020                	// #4128
  460fec:	sub	sp, sp, x12
  460ff0:	add	x1, sp, #0x20
  460ff4:	stp	x29, x30, [sp]
  460ff8:	mov	x29, sp
  460ffc:	str	x19, [sp, #16]
  461000:	mov	x19, x0
  461004:	bl	402a30 <realpath@plt>
  461008:	cmp	x0, #0x0
  46100c:	csel	x0, x0, x19, ne  // ne = any
  461010:	bl	402770 <strdup@plt>
  461014:	mov	x12, #0x1020                	// #4128
  461018:	ldp	x29, x30, [sp]
  46101c:	ldr	x19, [sp, #16]
  461020:	add	sp, sp, x12
  461024:	ret
  461028:	stp	x29, x30, [sp, #-16]!
  46102c:	adrp	x0, 4a4000 <_obstack_memory_used@@Base+0x42bb8>
  461030:	adrp	x2, 481000 <_obstack_memory_used@@Base+0x1fbb8>
  461034:	mov	x29, sp
  461038:	ldr	x0, [x0, #1392]
  46103c:	add	x2, x2, #0x8d0
  461040:	adrp	x1, 474000 <_obstack_memory_used@@Base+0x12bb8>
  461044:	add	x1, x1, #0x650
  461048:	bl	402b30 <fprintf@plt>
  46104c:	mov	w0, #0x1                   	// #1
  461050:	bl	402520 <exit@plt>
  461054:	nop

0000000000461058 <_obstack_begin@@Base>:
  461058:	stp	x29, x30, [sp, #-48]!
  46105c:	mov	x29, sp
  461060:	stp	x19, x20, [sp, #16]
  461064:	mov	x19, x0
  461068:	ldrb	w0, [x0, #80]
  46106c:	stp	x21, x22, [sp, #32]
  461070:	and	w0, w0, #0xfffffffe
  461074:	stp	x3, x4, [x19, #56]
  461078:	strb	w0, [x19, #80]
  46107c:	cbz	x2, 46111c <_obstack_begin@@Base+0xc4>
  461080:	sub	x22, x2, #0x1
  461084:	neg	x21, x2
  461088:	ldrb	w0, [x19, #80]
  46108c:	cmp	x1, #0x0
  461090:	mov	x2, #0xfe0                 	// #4064
  461094:	csel	x1, x1, x2, ne  // ne = any
  461098:	str	x1, [x19]
  46109c:	str	x22, [x19, #48]
  4610a0:	tbz	w0, #0, 4610fc <_obstack_begin@@Base+0xa4>
  4610a4:	ldr	x0, [x19, #72]
  4610a8:	blr	x3
  4610ac:	mov	x20, x0
  4610b0:	cbz	x20, 46110c <_obstack_begin@@Base+0xb4>
  4610b4:	add	x2, x20, #0x10
  4610b8:	mov	w0, #0x1                   	// #1
  4610bc:	ldr	x1, [x19]
  4610c0:	add	x2, x2, x22
  4610c4:	and	x2, x2, x21
  4610c8:	ldp	x21, x22, [sp, #32]
  4610cc:	stp	x20, x2, [x19, #8]
  4610d0:	add	x1, x20, x1
  4610d4:	str	x2, [x19, #24]
  4610d8:	str	x1, [x20]
  4610dc:	str	x1, [x19, #32]
  4610e0:	ldrb	w1, [x19, #80]
  4610e4:	str	xzr, [x20, #8]
  4610e8:	and	w1, w1, #0xfffffff9
  4610ec:	strb	w1, [x19, #80]
  4610f0:	ldp	x19, x20, [sp, #16]
  4610f4:	ldp	x29, x30, [sp], #48
  4610f8:	ret
  4610fc:	mov	x0, x1
  461100:	blr	x3
  461104:	mov	x20, x0
  461108:	cbnz	x20, 4610b4 <_obstack_begin@@Base+0x5c>
  46110c:	adrp	x0, 4a4000 <_obstack_memory_used@@Base+0x42bb8>
  461110:	ldr	x0, [x0, #1336]
  461114:	blr	x0
  461118:	b	4610b4 <_obstack_begin@@Base+0x5c>
  46111c:	mov	x21, #0xfffffffffffffff0    	// #-16
  461120:	mov	x22, #0xf                   	// #15
  461124:	b	461088 <_obstack_begin@@Base+0x30>

0000000000461128 <_obstack_begin_1@@Base>:
  461128:	stp	x29, x30, [sp, #-48]!
  46112c:	mov	x29, sp
  461130:	stp	x19, x20, [sp, #16]
  461134:	mov	x19, x0
  461138:	mov	x0, x5
  46113c:	stp	x21, x22, [sp, #32]
  461140:	ldrb	w5, [x19, #80]
  461144:	stp	x3, x4, [x19, #56]
  461148:	orr	w5, w5, #0x1
  46114c:	str	x0, [x19, #72]
  461150:	strb	w5, [x19, #80]
  461154:	cbz	x2, 4611f0 <_obstack_begin_1@@Base+0xc8>
  461158:	sub	x22, x2, #0x1
  46115c:	neg	x21, x2
  461160:	ldrb	w2, [x19, #80]
  461164:	cmp	x1, #0x0
  461168:	mov	x4, #0xfe0                 	// #4064
  46116c:	csel	x1, x1, x4, ne  // ne = any
  461170:	str	x1, [x19]
  461174:	str	x22, [x19, #48]
  461178:	tbz	w2, #0, 4611d0 <_obstack_begin_1@@Base+0xa8>
  46117c:	blr	x3
  461180:	mov	x20, x0
  461184:	cbz	x20, 4611e0 <_obstack_begin_1@@Base+0xb8>
  461188:	add	x2, x20, #0x10
  46118c:	mov	w0, #0x1                   	// #1
  461190:	ldr	x1, [x19]
  461194:	add	x2, x2, x22
  461198:	and	x2, x2, x21
  46119c:	ldp	x21, x22, [sp, #32]
  4611a0:	stp	x20, x2, [x19, #8]
  4611a4:	add	x1, x20, x1
  4611a8:	str	x2, [x19, #24]
  4611ac:	str	x1, [x20]
  4611b0:	str	x1, [x19, #32]
  4611b4:	ldrb	w1, [x19, #80]
  4611b8:	str	xzr, [x20, #8]
  4611bc:	and	w1, w1, #0xfffffff9
  4611c0:	strb	w1, [x19, #80]
  4611c4:	ldp	x19, x20, [sp, #16]
  4611c8:	ldp	x29, x30, [sp], #48
  4611cc:	ret
  4611d0:	mov	x0, x1
  4611d4:	blr	x3
  4611d8:	mov	x20, x0
  4611dc:	cbnz	x20, 461188 <_obstack_begin_1@@Base+0x60>
  4611e0:	adrp	x0, 4a4000 <_obstack_memory_used@@Base+0x42bb8>
  4611e4:	ldr	x0, [x0, #1336]
  4611e8:	blr	x0
  4611ec:	b	461188 <_obstack_begin_1@@Base+0x60>
  4611f0:	mov	x21, #0xfffffffffffffff0    	// #-16
  4611f4:	mov	x22, #0xf                   	// #15
  4611f8:	b	461160 <_obstack_begin_1@@Base+0x38>
  4611fc:	nop

0000000000461200 <_obstack_newchunk@@Base>:
  461200:	stp	x29, x30, [sp, #-64]!
  461204:	mov	x29, sp
  461208:	stp	x19, x20, [sp, #16]
  46120c:	mov	x19, x0
  461210:	ldp	x2, x20, [x0, #16]
  461214:	stp	x21, x22, [sp, #32]
  461218:	ldr	x0, [x0, #48]
  46121c:	str	x23, [sp, #48]
  461220:	ldr	x23, [x19, #8]
  461224:	sub	x20, x20, x2
  461228:	adds	x1, x20, x1
  46122c:	cset	x2, cs  // cs = hs, nlast
  461230:	adds	x1, x0, x1
  461234:	cset	x0, cs  // cs = hs, nlast
  461238:	cmp	x2, #0x0
  46123c:	ccmp	x0, #0x0, #0x0, eq  // eq = none
  461240:	b.eq	461260 <_obstack_newchunk@@Base+0x60>  // b.none
  461244:	adrp	x0, 4a4000 <_obstack_memory_used@@Base+0x42bb8>
  461248:	ldr	x0, [x0, #1336]
  46124c:	blr	x0
  461250:	str	xzr, [x19, #8]
  461254:	mov	x0, #0x0                   	// #0
  461258:	str	x23, [x0, #8]
  46125c:	brk	#0x3e8
  461260:	ldr	x0, [x19]
  461264:	lsr	x21, x20, #3
  461268:	add	x21, x21, #0x64
  46126c:	ldrb	w3, [x19, #80]
  461270:	cmp	x0, x1
  461274:	add	x21, x21, x1
  461278:	csel	x1, x0, x1, cs  // cs = hs, nlast
  46127c:	cmp	x1, x21
  461280:	csel	x21, x1, x21, cs  // cs = hs, nlast
  461284:	ldr	x2, [x19, #56]
  461288:	tbz	w3, #0, 461320 <_obstack_newchunk@@Base+0x120>
  46128c:	ldr	x0, [x19, #72]
  461290:	mov	x1, x21
  461294:	blr	x2
  461298:	mov	x22, x0
  46129c:	cbz	x22, 461244 <_obstack_newchunk@@Base+0x44>
  4612a0:	mov	x0, x22
  4612a4:	str	x22, [x19, #8]
  4612a8:	add	x1, x22, x21
  4612ac:	mov	x2, x20
  4612b0:	ldr	x21, [x19, #48]
  4612b4:	str	x23, [x22, #8]
  4612b8:	str	x1, [x19, #32]
  4612bc:	str	x1, [x0], #16
  4612c0:	ldr	x1, [x19, #16]
  4612c4:	add	x0, x0, x21
  4612c8:	bic	x21, x0, x21
  4612cc:	mov	x0, x21
  4612d0:	bl	402490 <memcpy@plt>
  4612d4:	ldrb	w3, [x19, #80]
  4612d8:	tbnz	w3, #1, 4612f8 <_obstack_newchunk@@Base+0xf8>
  4612dc:	ldr	x2, [x19, #48]
  4612e0:	add	x1, x23, #0x10
  4612e4:	ldr	x0, [x19, #16]
  4612e8:	add	x1, x1, x2
  4612ec:	bic	x1, x1, x2
  4612f0:	cmp	x0, x1
  4612f4:	b.eq	461330 <_obstack_newchunk@@Base+0x130>  // b.none
  4612f8:	ldrb	w0, [x19, #80]
  4612fc:	add	x20, x21, x20
  461300:	ldr	x23, [sp, #48]
  461304:	and	w0, w0, #0xfffffffd
  461308:	stp	x21, x20, [x19, #16]
  46130c:	strb	w0, [x19, #80]
  461310:	ldp	x19, x20, [sp, #16]
  461314:	ldp	x21, x22, [sp, #32]
  461318:	ldp	x29, x30, [sp], #64
  46131c:	ret
  461320:	mov	x0, x21
  461324:	blr	x2
  461328:	mov	x22, x0
  46132c:	b	46129c <_obstack_newchunk@@Base+0x9c>
  461330:	ldr	x0, [x23, #8]
  461334:	ldr	x2, [x19, #64]
  461338:	str	x0, [x22, #8]
  46133c:	tbz	w3, #0, 461350 <_obstack_newchunk@@Base+0x150>
  461340:	ldr	x0, [x19, #72]
  461344:	mov	x1, x23
  461348:	blr	x2
  46134c:	b	4612f8 <_obstack_newchunk@@Base+0xf8>
  461350:	mov	x0, x23
  461354:	blr	x2
  461358:	b	4612f8 <_obstack_newchunk@@Base+0xf8>
  46135c:	nop

0000000000461360 <_obstack_allocated_p@@Base>:
  461360:	ldr	x0, [x0, #8]
  461364:	cbz	x0, 461388 <_obstack_allocated_p@@Base+0x28>
  461368:	cmp	x1, x0
  46136c:	b.ls	46137c <_obstack_allocated_p@@Base+0x1c>  // b.plast
  461370:	ldr	x2, [x0]
  461374:	cmp	x2, x1
  461378:	b.cs	46138c <_obstack_allocated_p@@Base+0x2c>  // b.hs, b.nlast
  46137c:	ldr	x0, [x0, #8]
  461380:	cbnz	x0, 461368 <_obstack_allocated_p@@Base+0x8>
  461384:	mov	w0, #0x0                   	// #0
  461388:	ret
  46138c:	mov	w0, #0x1                   	// #1
  461390:	ret
  461394:	nop

0000000000461398 <_obstack_free@@Base>:
  461398:	stp	x29, x30, [sp, #-48]!
  46139c:	mov	x29, sp
  4613a0:	str	x21, [sp, #32]
  4613a4:	mov	x21, x1
  4613a8:	ldr	x1, [x0, #8]
  4613ac:	cbz	x1, 461418 <_obstack_free@@Base+0x80>
  4613b0:	stp	x19, x20, [sp, #16]
  4613b4:	mov	x19, x0
  4613b8:	cmp	x1, x21
  4613bc:	b.cs	4613cc <_obstack_free@@Base+0x34>  // b.hs, b.nlast
  4613c0:	ldr	x0, [x1]
  4613c4:	cmp	x0, x21
  4613c8:	b.cs	461428 <_obstack_free@@Base+0x90>  // b.hs, b.nlast
  4613cc:	ldrb	w0, [x19, #80]
  4613d0:	ldr	x20, [x1, #8]
  4613d4:	ldr	x2, [x19, #64]
  4613d8:	tbz	w0, #0, 4613fc <_obstack_free@@Base+0x64>
  4613dc:	ldr	x0, [x19, #72]
  4613e0:	blr	x2
  4613e4:	ldrb	w0, [x19, #80]
  4613e8:	orr	w0, w0, #0x2
  4613ec:	strb	w0, [x19, #80]
  4613f0:	cbz	x20, 461414 <_obstack_free@@Base+0x7c>
  4613f4:	mov	x1, x20
  4613f8:	b	4613b8 <_obstack_free@@Base+0x20>
  4613fc:	mov	x0, x1
  461400:	blr	x2
  461404:	ldrb	w0, [x19, #80]
  461408:	orr	w0, w0, #0x2
  46140c:	strb	w0, [x19, #80]
  461410:	cbnz	x20, 4613f4 <_obstack_free@@Base+0x5c>
  461414:	ldp	x19, x20, [sp, #16]
  461418:	cbnz	x21, 461440 <_obstack_free@@Base+0xa8>
  46141c:	ldr	x21, [sp, #32]
  461420:	ldp	x29, x30, [sp], #48
  461424:	ret
  461428:	stp	x1, x21, [x19, #8]
  46142c:	stp	x21, x0, [x19, #24]
  461430:	ldp	x19, x20, [sp, #16]
  461434:	ldr	x21, [sp, #32]
  461438:	ldp	x29, x30, [sp], #48
  46143c:	ret
  461440:	stp	x19, x20, [sp, #16]
  461444:	bl	4027f0 <abort@plt>

0000000000461448 <_obstack_memory_used@@Base>:
  461448:	ldr	x1, [x0, #8]
  46144c:	mov	x0, #0x0                   	// #0
  461450:	cbz	x1, 46146c <_obstack_memory_used@@Base+0x24>
  461454:	nop
  461458:	ldr	x2, [x1]
  46145c:	sub	x2, x2, x1
  461460:	ldr	x1, [x1, #8]
  461464:	add	x0, x0, x2
  461468:	cbnz	x1, 461458 <_obstack_memory_used@@Base+0x10>
  46146c:	ret
  461470:	stp	x29, x30, [sp, #-32]!
  461474:	adrp	x1, 4a5000 <__environ@@GLIBC_2.17+0xa68>
  461478:	mov	x29, sp
  46147c:	str	x19, [sp, #16]
  461480:	mov	w19, w0
  461484:	ldr	x0, [x1, #3472]
  461488:	cbz	x0, 461490 <_obstack_memory_used@@Base+0x48>
  46148c:	blr	x0
  461490:	mov	w0, w19
  461494:	bl	402520 <exit@plt>
  461498:	stp	x29, x30, [sp, #-32]!
  46149c:	adrp	x2, 4a4000 <_obstack_memory_used@@Base+0x42bb8>
  4614a0:	mov	x29, sp
  4614a4:	str	x19, [sp, #16]
  4614a8:	adrp	x19, 4a5000 <__environ@@GLIBC_2.17+0xa68>
  4614ac:	str	x0, [x2, #1344]
  4614b0:	ldr	x1, [x19, #2736]
  4614b4:	cbz	x1, 4614c4 <_obstack_memory_used@@Base+0x7c>
  4614b8:	ldr	x19, [sp, #16]
  4614bc:	ldp	x29, x30, [sp], #32
  4614c0:	ret
  4614c4:	mov	x0, #0x0                   	// #0
  4614c8:	bl	402530 <sbrk@plt>
  4614cc:	str	x0, [x19, #2736]
  4614d0:	ldr	x19, [sp, #16]
  4614d4:	ldp	x29, x30, [sp], #32
  4614d8:	ret
  4614dc:	nop
  4614e0:	stp	x29, x30, [sp, #-32]!
  4614e4:	adrp	x1, 4a5000 <__environ@@GLIBC_2.17+0xa68>
  4614e8:	mov	x29, sp
  4614ec:	stp	x19, x20, [sp, #16]
  4614f0:	mov	x19, x0
  4614f4:	mov	x0, #0x0                   	// #0
  4614f8:	ldr	x20, [x1, #2736]
  4614fc:	cbz	x20, 46154c <_obstack_memory_used@@Base+0x104>
  461500:	bl	402530 <sbrk@plt>
  461504:	sub	x5, x0, x20
  461508:	adrp	x1, 4a4000 <_obstack_memory_used@@Base+0x42bb8>
  46150c:	adrp	x0, 4a4000 <_obstack_memory_used@@Base+0x42bb8>
  461510:	adrp	x6, 472000 <_obstack_memory_used@@Base+0x10bb8>
  461514:	adrp	x3, 473000 <_obstack_memory_used@@Base+0x11bb8>
  461518:	ldr	x2, [x1, #1344]
  46151c:	add	x6, x6, #0x5c0
  461520:	ldr	x0, [x0, #1392]
  461524:	add	x3, x3, #0x420
  461528:	ldrb	w1, [x2]
  46152c:	mov	x4, x19
  461530:	cmp	w1, #0x0
  461534:	adrp	x1, 481000 <_obstack_memory_used@@Base+0x1fbb8>
  461538:	csel	x3, x3, x6, ne  // ne = any
  46153c:	add	x1, x1, #0xcf0
  461540:	bl	402b30 <fprintf@plt>
  461544:	mov	w0, #0x1                   	// #1
  461548:	bl	461470 <_obstack_memory_used@@Base+0x28>
  46154c:	bl	402530 <sbrk@plt>
  461550:	adrp	x5, 4a4000 <_obstack_memory_used@@Base+0x42bb8>
  461554:	add	x5, x5, #0x598
  461558:	sub	x5, x0, x5
  46155c:	b	461508 <_obstack_memory_used@@Base+0xc0>
  461560:	stp	x29, x30, [sp, #-32]!
  461564:	cmp	x0, #0x0
  461568:	mov	x29, sp
  46156c:	str	x19, [sp, #16]
  461570:	csinc	x19, x0, xzr, ne  // ne = any
  461574:	mov	x0, x19
  461578:	bl	402670 <malloc@plt>
  46157c:	cbz	x0, 46158c <_obstack_memory_used@@Base+0x144>
  461580:	ldr	x19, [sp, #16]
  461584:	ldp	x29, x30, [sp], #32
  461588:	ret
  46158c:	mov	x0, x19
  461590:	bl	4614e0 <_obstack_memory_used@@Base+0x98>
  461594:	nop
  461598:	stp	x29, x30, [sp, #-32]!
  46159c:	cmp	x0, #0x0
  4615a0:	ccmp	x1, #0x0, #0x4, ne  // ne = any
  4615a4:	mov	x29, sp
  4615a8:	stp	x19, x20, [sp, #16]
  4615ac:	b.ne	4615d4 <_obstack_memory_used@@Base+0x18c>  // b.any
  4615b0:	mov	x19, #0x1                   	// #1
  4615b4:	mov	x20, x19
  4615b8:	mov	x1, x19
  4615bc:	mov	x0, x20
  4615c0:	bl	402710 <calloc@plt>
  4615c4:	cbz	x0, 4615e0 <_obstack_memory_used@@Base+0x198>
  4615c8:	ldp	x19, x20, [sp, #16]
  4615cc:	ldp	x29, x30, [sp], #32
  4615d0:	ret
  4615d4:	mov	x20, x0
  4615d8:	mov	x19, x1
  4615dc:	b	4615b8 <_obstack_memory_used@@Base+0x170>
  4615e0:	mul	x0, x20, x19
  4615e4:	bl	4614e0 <_obstack_memory_used@@Base+0x98>
  4615e8:	stp	x29, x30, [sp, #-32]!
  4615ec:	cmp	x1, #0x0
  4615f0:	mov	x29, sp
  4615f4:	str	x19, [sp, #16]
  4615f8:	csinc	x19, x1, xzr, ne  // ne = any
  4615fc:	cbz	x0, 461618 <_obstack_memory_used@@Base+0x1d0>
  461600:	mov	x1, x19
  461604:	bl	402750 <realloc@plt>
  461608:	cbz	x0, 461624 <_obstack_memory_used@@Base+0x1dc>
  46160c:	ldr	x19, [sp, #16]
  461610:	ldp	x29, x30, [sp], #32
  461614:	ret
  461618:	mov	x0, x19
  46161c:	bl	402670 <malloc@plt>
  461620:	b	461608 <_obstack_memory_used@@Base+0x1c0>
  461624:	mov	x0, x19
  461628:	bl	4614e0 <_obstack_memory_used@@Base+0x98>
  46162c:	nop
  461630:	stp	x29, x30, [sp, #-48]!
  461634:	mov	x29, sp
  461638:	stp	x19, x20, [sp, #16]
  46163c:	mov	x20, x2
  461640:	mov	x19, x1
  461644:	stp	x21, x22, [sp, #32]
  461648:	mov	x22, x0
  46164c:	mov	x0, x2
  461650:	bl	461560 <_obstack_memory_used@@Base+0x118>
  461654:	mov	x21, x0
  461658:	cmp	x20, x19
  46165c:	b.hi	46167c <_obstack_memory_used@@Base+0x234>  // b.pmore
  461660:	mov	x2, x19
  461664:	mov	x1, x22
  461668:	mov	x0, x21
  46166c:	ldp	x19, x20, [sp, #16]
  461670:	ldp	x21, x22, [sp, #32]
  461674:	ldp	x29, x30, [sp], #48
  461678:	b	402490 <memcpy@plt>
  46167c:	sub	x2, x20, x19
  461680:	add	x0, x0, x19
  461684:	mov	w1, #0x0                   	// #0
  461688:	bl	4026f0 <memset@plt>
  46168c:	mov	x2, x19
  461690:	mov	x1, x22
  461694:	mov	x0, x21
  461698:	ldp	x19, x20, [sp, #16]
  46169c:	ldp	x21, x22, [sp, #32]
  4616a0:	ldp	x29, x30, [sp], #48
  4616a4:	b	402490 <memcpy@plt>
  4616a8:	stp	x29, x30, [sp, #-32]!
  4616ac:	mov	x29, sp
  4616b0:	stp	x19, x20, [sp, #16]
  4616b4:	mov	x20, x0
  4616b8:	bl	4024f0 <strlen@plt>
  4616bc:	add	x19, x0, #0x1
  4616c0:	mov	x0, x19
  4616c4:	bl	461560 <_obstack_memory_used@@Base+0x118>
  4616c8:	mov	x2, x19
  4616cc:	mov	x1, x20
  4616d0:	ldp	x19, x20, [sp, #16]
  4616d4:	ldp	x29, x30, [sp], #32
  4616d8:	b	402490 <memcpy@plt>
  4616dc:	nop
  4616e0:	stp	x29, x30, [sp, #-32]!
  4616e4:	mov	x29, sp
  4616e8:	stp	x19, x20, [sp, #16]
  4616ec:	mov	w20, w0
  4616f0:	bl	402790 <strerror@plt>
  4616f4:	cbz	x0, 461704 <_obstack_memory_used@@Base+0x2bc>
  4616f8:	ldp	x19, x20, [sp, #16]
  4616fc:	ldp	x29, x30, [sp], #32
  461700:	ret
  461704:	adrp	x19, 4a5000 <__environ@@GLIBC_2.17+0xa68>
  461708:	add	x19, x19, #0xac0
  46170c:	mov	w2, w20
  461710:	mov	x0, x19
  461714:	adrp	x1, 481000 <_obstack_memory_used@@Base+0x1fbb8>
  461718:	add	x1, x1, #0xd38
  46171c:	bl	4025b0 <sprintf@plt>
  461720:	mov	x0, x19
  461724:	ldp	x19, x20, [sp, #16]
  461728:	ldp	x29, x30, [sp], #32
  46172c:	ret
  461730:	stp	x29, x30, [sp, #-32]!
  461734:	mov	x29, sp
  461738:	stp	x19, x20, [sp, #16]
  46173c:	mov	x20, x0
  461740:	bl	402540 <strnlen@plt>
  461744:	mov	x19, x0
  461748:	add	x0, x0, #0x1
  46174c:	bl	461560 <_obstack_memory_used@@Base+0x118>
  461750:	mov	x1, x20
  461754:	mov	x2, x19
  461758:	strb	wzr, [x0, x19]
  46175c:	ldp	x19, x20, [sp, #16]
  461760:	ldp	x29, x30, [sp], #32
  461764:	b	402490 <memcpy@plt>
  461768:	stp	x29, x30, [sp, #-64]!
  46176c:	mov	x29, sp
  461770:	stp	x19, x20, [sp, #16]
  461774:	mov	x19, x1
  461778:	add	x1, sp, #0x20
  46177c:	mov	x20, x0
  461780:	ldp	x2, x3, [x19]
  461784:	stp	x2, x3, [sp, #32]
  461788:	ldp	x2, x3, [x19, #16]
  46178c:	stp	x2, x3, [sp, #48]
  461790:	bl	4617d0 <_obstack_memory_used@@Base+0x388>
  461794:	sxtw	x0, w0
  461798:	bl	461560 <_obstack_memory_used@@Base+0x118>
  46179c:	ldp	x6, x7, [x19]
  4617a0:	mov	x1, x20
  4617a4:	ldp	x4, x5, [x19, #16]
  4617a8:	add	x2, sp, #0x20
  4617ac:	mov	x19, x0
  4617b0:	stp	x6, x7, [sp, #32]
  4617b4:	stp	x4, x5, [sp, #48]
  4617b8:	bl	4029b0 <vsprintf@plt>
  4617bc:	mov	x0, x19
  4617c0:	ldp	x19, x20, [sp, #16]
  4617c4:	ldp	x29, x30, [sp], #64
  4617c8:	ret
  4617cc:	nop
  4617d0:	stp	x29, x30, [sp, #-112]!
  4617d4:	mov	x29, sp
  4617d8:	stp	x19, x20, [sp, #16]
  4617dc:	mov	x20, x1
  4617e0:	mov	x19, x0
  4617e4:	stp	x21, x22, [sp, #32]
  4617e8:	adrp	x22, 481000 <_obstack_memory_used@@Base+0x1fbb8>
  4617ec:	adrp	x21, 481000 <_obstack_memory_used@@Base+0x1fbb8>
  4617f0:	stp	x23, x24, [sp, #48]
  4617f4:	add	x22, x22, #0xd50
  4617f8:	add	x21, x21, #0xd58
  4617fc:	str	x0, [sp, #72]
  461800:	bl	4024f0 <strlen@plt>
  461804:	add	w23, w0, #0x1
  461808:	ldp	x2, x3, [x20]
  46180c:	stp	x2, x3, [sp, #80]
  461810:	ldp	x0, x1, [x20, #16]
  461814:	stp	x0, x1, [sp, #96]
  461818:	b	461830 <_obstack_memory_used@@Base+0x3e8>
  46181c:	add	x19, x19, #0x1
  461820:	str	x19, [sp, #72]
  461824:	ldurb	w0, [x19, #-1]
  461828:	cmp	w0, #0x25
  46182c:	b.eq	461854 <_obstack_memory_used@@Base+0x40c>  // b.none
  461830:	ldrb	w0, [x19]
  461834:	cbnz	w0, 46181c <_obstack_memory_used@@Base+0x3d4>
  461838:	mov	w0, w23
  46183c:	ldp	x19, x20, [sp, #16]
  461840:	ldp	x21, x22, [sp, #32]
  461844:	ldp	x23, x24, [sp, #48]
  461848:	ldp	x29, x30, [sp], #112
  46184c:	ret
  461850:	str	x19, [sp, #72]
  461854:	mov	x24, x19
  461858:	ldrb	w20, [x19], #1
  46185c:	mov	x0, x22
  461860:	mov	w1, w20
  461864:	bl	402940 <strchr@plt>
  461868:	cbnz	x0, 461850 <_obstack_memory_used@@Base+0x408>
  46186c:	cmp	w20, #0x2a
  461870:	b.ne	461914 <_obstack_memory_used@@Base+0x4cc>  // b.any
  461874:	ldr	w1, [sp, #104]
  461878:	str	x19, [sp, #72]
  46187c:	ldr	x0, [sp, #80]
  461880:	tbnz	w1, #31, 461a20 <_obstack_memory_used@@Base+0x5d8>
  461884:	add	x1, x0, #0xb
  461888:	and	x1, x1, #0xfffffffffffffff8
  46188c:	str	x1, [sp, #80]
  461890:	ldr	w24, [x0]
  461894:	ldrb	w20, [x19]
  461898:	cmp	w24, #0x0
  46189c:	cneg	w24, w24, lt  // lt = tstop
  4618a0:	cmp	w20, #0x2e
  4618a4:	add	w24, w24, w23
  4618a8:	b.ne	4618b8 <_obstack_memory_used@@Base+0x470>  // b.any
  4618ac:	b	461938 <_obstack_memory_used@@Base+0x4f0>
  4618b0:	str	x19, [sp, #72]
  4618b4:	ldrb	w20, [x19]
  4618b8:	add	x19, x19, #0x1
  4618bc:	mov	w1, w20
  4618c0:	mov	x0, x21
  4618c4:	bl	402940 <strchr@plt>
  4618c8:	cbnz	x0, 4618b0 <_obstack_memory_used@@Base+0x468>
  4618cc:	cmp	w20, #0x67
  4618d0:	add	w23, w24, #0x1e
  4618d4:	b.ls	461988 <_obstack_memory_used@@Base+0x540>  // b.plast
  4618d8:	sub	w20, w20, #0x69
  4618dc:	and	w20, w20, #0xff
  4618e0:	cmp	w20, #0xf
  4618e4:	b.hi	46190c <_obstack_memory_used@@Base+0x4c4>  // b.pmore
  4618e8:	mov	x1, #0x1                   	// #1
  4618ec:	mov	x0, #0x9041                	// #36929
  4618f0:	lsl	x1, x1, x20
  4618f4:	tst	x1, x0
  4618f8:	b.ne	4619b8 <_obstack_memory_used@@Base+0x570>  // b.any
  4618fc:	mov	x0, #0xa0                  	// #160
  461900:	tst	x1, x0
  461904:	b.ne	461a3c <_obstack_memory_used@@Base+0x5f4>  // b.any
  461908:	tbnz	w1, #10, 4619d8 <_obstack_memory_used@@Base+0x590>
  46190c:	str	x19, [sp, #72]
  461910:	b	461830 <_obstack_memory_used@@Base+0x3e8>
  461914:	mov	x0, x24
  461918:	add	x1, sp, #0x48
  46191c:	mov	w2, #0xa                   	// #10
  461920:	bl	4024e0 <strtoul@plt>
  461924:	ldr	x19, [sp, #72]
  461928:	add	w24, w23, w0
  46192c:	ldrb	w20, [x19]
  461930:	cmp	w20, #0x2e
  461934:	b.ne	4618b8 <_obstack_memory_used@@Base+0x470>  // b.any
  461938:	add	x0, x19, #0x1
  46193c:	str	x0, [sp, #72]
  461940:	ldrb	w1, [x19, #1]
  461944:	cmp	w1, #0x2a
  461948:	b.ne	461a04 <_obstack_memory_used@@Base+0x5bc>  // b.any
  46194c:	ldr	w2, [sp, #104]
  461950:	add	x1, x19, #0x2
  461954:	str	x1, [sp, #72]
  461958:	ldr	x0, [sp, #80]
  46195c:	tbnz	w2, #31, 461ae4 <_obstack_memory_used@@Base+0x69c>
  461960:	add	x2, x0, #0xb
  461964:	and	x2, x2, #0xfffffffffffffff8
  461968:	str	x2, [sp, #80]
  46196c:	ldr	w0, [x0]
  461970:	ldrb	w20, [x19, #2]
  461974:	mov	x19, x1
  461978:	cmp	w0, #0x0
  46197c:	cneg	w0, w0, lt  // lt = tstop
  461980:	add	w24, w24, w0
  461984:	b	4618b8 <_obstack_memory_used@@Base+0x470>
  461988:	cmp	w20, #0x44
  46198c:	b.ls	46190c <_obstack_memory_used@@Base+0x4c4>  // b.plast
  461990:	sub	w20, w20, #0x45
  461994:	mov	x1, #0x1                   	// #1
  461998:	mov	x0, #0x5                   	// #5
  46199c:	movk	x0, #0x7, lsl #32
  4619a0:	lsl	x20, x1, x20
  4619a4:	tst	x20, x0
  4619a8:	b.ne	461a5c <_obstack_memory_used@@Base+0x614>  // b.any
  4619ac:	mov	x0, #0xc0080000            	// #3221749760
  4619b0:	tst	x20, x0
  4619b4:	b.eq	46190c <_obstack_memory_used@@Base+0x4c4>  // b.none
  4619b8:	ldr	w1, [sp, #104]
  4619bc:	ldr	x0, [sp, #80]
  4619c0:	tbnz	w1, #31, 461a98 <_obstack_memory_used@@Base+0x650>
  4619c4:	add	x0, x0, #0xb
  4619c8:	str	x19, [sp, #72]
  4619cc:	and	x0, x0, #0xfffffffffffffff8
  4619d0:	str	x0, [sp, #80]
  4619d4:	b	461830 <_obstack_memory_used@@Base+0x3e8>
  4619d8:	ldr	w1, [sp, #104]
  4619dc:	ldr	x0, [sp, #80]
  4619e0:	tbnz	w1, #31, 461ab0 <_obstack_memory_used@@Base+0x668>
  4619e4:	add	x1, x0, #0xf
  4619e8:	and	x1, x1, #0xfffffffffffffff8
  4619ec:	str	x1, [sp, #80]
  4619f0:	ldr	x0, [x0]
  4619f4:	bl	4024f0 <strlen@plt>
  4619f8:	add	w23, w23, w0
  4619fc:	str	x19, [sp, #72]
  461a00:	b	461830 <_obstack_memory_used@@Base+0x3e8>
  461a04:	add	x1, sp, #0x48
  461a08:	mov	w2, #0xa                   	// #10
  461a0c:	bl	4024e0 <strtoul@plt>
  461a10:	add	w24, w24, w0
  461a14:	ldr	x19, [sp, #72]
  461a18:	ldrb	w20, [x19]
  461a1c:	b	4618b8 <_obstack_memory_used@@Base+0x470>
  461a20:	add	w2, w1, #0x8
  461a24:	str	w2, [sp, #104]
  461a28:	cmp	w2, #0x0
  461a2c:	b.gt	461884 <_obstack_memory_used@@Base+0x43c>
  461a30:	ldr	x0, [sp, #88]
  461a34:	add	x0, x0, w1, sxtw
  461a38:	b	461890 <_obstack_memory_used@@Base+0x448>
  461a3c:	ldr	w1, [sp, #104]
  461a40:	ldr	x0, [sp, #80]
  461a44:	tbnz	w1, #31, 461acc <_obstack_memory_used@@Base+0x684>
  461a48:	add	x0, x0, #0xf
  461a4c:	str	x19, [sp, #72]
  461a50:	and	x0, x0, #0xfffffffffffffff8
  461a54:	str	x0, [sp, #80]
  461a58:	b	461830 <_obstack_memory_used@@Base+0x3e8>
  461a5c:	ldr	w1, [sp, #108]
  461a60:	ldr	x0, [sp, #80]
  461a64:	tbnz	w1, #31, 461a80 <_obstack_memory_used@@Base+0x638>
  461a68:	add	x0, x0, #0xf
  461a6c:	add	w23, w24, #0x151
  461a70:	and	x0, x0, #0xfffffffffffffff8
  461a74:	str	x0, [sp, #80]
  461a78:	str	x19, [sp, #72]
  461a7c:	b	461830 <_obstack_memory_used@@Base+0x3e8>
  461a80:	add	w1, w1, #0x10
  461a84:	str	w1, [sp, #108]
  461a88:	cmp	w1, #0x0
  461a8c:	b.gt	461a68 <_obstack_memory_used@@Base+0x620>
  461a90:	add	w23, w24, #0x151
  461a94:	b	461a78 <_obstack_memory_used@@Base+0x630>
  461a98:	add	w1, w1, #0x8
  461a9c:	str	w1, [sp, #104]
  461aa0:	cmp	w1, #0x0
  461aa4:	b.gt	4619c4 <_obstack_memory_used@@Base+0x57c>
  461aa8:	str	x19, [sp, #72]
  461aac:	b	461830 <_obstack_memory_used@@Base+0x3e8>
  461ab0:	add	w2, w1, #0x8
  461ab4:	str	w2, [sp, #104]
  461ab8:	cmp	w2, #0x0
  461abc:	b.gt	4619e4 <_obstack_memory_used@@Base+0x59c>
  461ac0:	ldr	x0, [sp, #88]
  461ac4:	add	x0, x0, w1, sxtw
  461ac8:	b	4619f0 <_obstack_memory_used@@Base+0x5a8>
  461acc:	add	w1, w1, #0x8
  461ad0:	str	w1, [sp, #104]
  461ad4:	cmp	w1, #0x0
  461ad8:	b.gt	461a48 <_obstack_memory_used@@Base+0x600>
  461adc:	str	x19, [sp, #72]
  461ae0:	b	461830 <_obstack_memory_used@@Base+0x3e8>
  461ae4:	add	w3, w2, #0x8
  461ae8:	str	w3, [sp, #104]
  461aec:	cmp	w3, #0x0
  461af0:	b.gt	461960 <_obstack_memory_used@@Base+0x518>
  461af4:	ldr	x0, [sp, #88]
  461af8:	add	x0, x0, w2, sxtw
  461afc:	b	46196c <_obstack_memory_used@@Base+0x524>
  461b00:	b	4623b8 <_obstack_memory_used@@Base+0xf70>
  461b04:	nop
  461b08:	b	4623c0 <_obstack_memory_used@@Base+0xf78>
  461b0c:	nop
  461b10:	stp	x29, x30, [sp, #-64]!
  461b14:	mov	x29, sp
  461b18:	str	x23, [sp, #48]
  461b1c:	mov	x23, x0
  461b20:	ldarb	w0, [x0]
  461b24:	tst	w0, #0xff
  461b28:	b.ne	461b84 <_obstack_memory_used@@Base+0x73c>  // b.any
  461b2c:	adrp	x0, 4a3000 <_obstack_memory_used@@Base+0x41bb8>
  461b30:	ldr	x0, [x0, #3880]
  461b34:	cbz	x0, 461b94 <_obstack_memory_used@@Base+0x74c>
  461b38:	stp	x19, x20, [sp, #16]
  461b3c:	mov	w19, #0x100                 	// #256
  461b40:	mov	w20, #0x1                   	// #1
  461b44:	stp	x21, x22, [sp, #32]
  461b48:	mov	w21, w19
  461b4c:	ldaxr	w0, [x23]
  461b50:	cbnz	w0, 461b5c <_obstack_memory_used@@Base+0x714>
  461b54:	stlxr	w1, w19, [x23]
  461b58:	cbnz	w1, 461b4c <_obstack_memory_used@@Base+0x704>
  461b5c:	cmp	w0, #0x0
  461b60:	b.ne	461bbc <_obstack_memory_used@@Base+0x774>  // b.any
  461b64:	mov	w0, #0x1                   	// #1
  461b68:	ldp	x19, x20, [sp, #16]
  461b6c:	ldp	x21, x22, [sp, #32]
  461b70:	ldr	x23, [sp, #48]
  461b74:	ldp	x29, x30, [sp], #64
  461b78:	ret
  461b7c:	ldp	x19, x20, [sp, #16]
  461b80:	ldp	x21, x22, [sp, #32]
  461b84:	mov	w0, #0x0                   	// #0
  461b88:	ldr	x23, [sp, #48]
  461b8c:	ldp	x29, x30, [sp], #64
  461b90:	ret
  461b94:	ldrb	w0, [x23]
  461b98:	cbnz	w0, 461b84 <_obstack_memory_used@@Base+0x73c>
  461b9c:	ldrb	w0, [x23, #1]
  461ba0:	cbnz	w0, 461c34 <_obstack_memory_used@@Base+0x7ec>
  461ba4:	mov	w2, #0x1                   	// #1
  461ba8:	strb	w2, [x23, #1]
  461bac:	mov	w0, #0x1                   	// #1
  461bb0:	ldr	x23, [sp, #48]
  461bb4:	ldp	x29, x30, [sp], #64
  461bb8:	ret
  461bbc:	orr	w22, w19, #0x10000
  461bc0:	mov	w3, w0
  461bc4:	cmp	w20, w3
  461bc8:	b.eq	461b7c <_obstack_memory_used@@Base+0x734>  // b.none
  461bcc:	cmp	w19, w3
  461bd0:	b.ne	461bf0 <_obstack_memory_used@@Base+0x7a8>  // b.any
  461bd4:	mov	w3, w22
  461bd8:	ldaxr	w2, [x23]
  461bdc:	cmp	w2, w0
  461be0:	b.ne	461bec <_obstack_memory_used@@Base+0x7a4>  // b.any
  461be4:	stlxr	w1, w22, [x23]
  461be8:	cbnz	w1, 461bd8 <_obstack_memory_used@@Base+0x790>
  461bec:	b.ne	461c24 <_obstack_memory_used@@Base+0x7dc>  // b.any
  461bf0:	mov	x1, x23
  461bf4:	mov	w4, #0x0                   	// #0
  461bf8:	mov	w2, #0x0                   	// #0
  461bfc:	mov	x0, #0x62                  	// #98
  461c00:	bl	402af0 <syscall@plt>
  461c04:	ldaxr	w0, [x23]
  461c08:	cbnz	w0, 461c14 <_obstack_memory_used@@Base+0x7cc>
  461c0c:	stlxr	w1, w21, [x23]
  461c10:	cbnz	w1, 461c04 <_obstack_memory_used@@Base+0x7bc>
  461c14:	cmp	w0, #0x0
  461c18:	mov	w3, w0
  461c1c:	b.eq	461b64 <_obstack_memory_used@@Base+0x71c>  // b.none
  461c20:	b	461bc4 <_obstack_memory_used@@Base+0x77c>
  461c24:	cmp	w20, w2
  461c28:	b.eq	461b7c <_obstack_memory_used@@Base+0x734>  // b.none
  461c2c:	cbnz	w2, 461bf0 <_obstack_memory_used@@Base+0x7a8>
  461c30:	b	461c04 <_obstack_memory_used@@Base+0x7bc>
  461c34:	mov	x0, #0x8                   	// #8
  461c38:	stp	x19, x20, [sp, #16]
  461c3c:	stp	x21, x22, [sp, #32]
  461c40:	bl	462730 <_obstack_memory_used@@Base+0x12e8>
  461c44:	mov	x19, x0
  461c48:	bl	461d28 <_obstack_memory_used@@Base+0x8e0>
  461c4c:	adrp	x2, 4a3000 <_obstack_memory_used@@Base+0x41bb8>
  461c50:	adrp	x1, 4a3000 <_obstack_memory_used@@Base+0x41bb8>
  461c54:	mov	x0, x19
  461c58:	ldr	x2, [x2, #4016]
  461c5c:	ldr	x1, [x1, #3896]
  461c60:	bl	463548 <_obstack_memory_used@@Base+0x2100>
  461c64:	nop
  461c68:	adrp	x1, 4a3000 <_obstack_memory_used@@Base+0x41bb8>
  461c6c:	ldr	x1, [x1, #3880]
  461c70:	cbnz	x1, 461c7c <_obstack_memory_used@@Base+0x834>
  461c74:	strb	wzr, [x0, #1]
  461c78:	ret
  461c7c:	ldaxr	w1, [x0]
  461c80:	stlxr	w2, wzr, [x0]
  461c84:	cbnz	w2, 461c7c <_obstack_memory_used@@Base+0x834>
  461c88:	tbz	w1, #16, 461c78 <_obstack_memory_used@@Base+0x830>
  461c8c:	mov	x1, x0
  461c90:	mov	w3, #0x7fffffff            	// #2147483647
  461c94:	mov	w2, #0x1                   	// #1
  461c98:	mov	x0, #0x62                  	// #98
  461c9c:	b	402af0 <syscall@plt>
  461ca0:	adrp	x1, 4a3000 <_obstack_memory_used@@Base+0x41bb8>
  461ca4:	ldr	x1, [x1, #3880]
  461ca8:	cbz	x1, 461cc4 <_obstack_memory_used@@Base+0x87c>
  461cac:	mov	w2, #0x1                   	// #1
  461cb0:	ldaxr	w1, [x0]
  461cb4:	stlxr	w3, w2, [x0]
  461cb8:	cbnz	w3, 461cb0 <_obstack_memory_used@@Base+0x868>
  461cbc:	tbnz	w1, #16, 461cd4 <_obstack_memory_used@@Base+0x88c>
  461cc0:	ret
  461cc4:	strb	wzr, [x0, #1]
  461cc8:	mov	w1, #0x1                   	// #1
  461ccc:	stlrb	w1, [x0]
  461cd0:	ret
  461cd4:	mov	x1, x0
  461cd8:	mov	w3, #0x7fffffff            	// #2147483647
  461cdc:	mov	x0, #0x62                  	// #98
  461ce0:	b	402af0 <syscall@plt>
  461ce4:	nop
  461ce8:	adrp	x1, 4a3000 <_obstack_memory_used@@Base+0x41bb8>
  461cec:	ldr	x1, [x1, #4056]
  461cf0:	add	x1, x1, #0x10
  461cf4:	str	x1, [x0]
  461cf8:	b	462868 <_obstack_memory_used@@Base+0x1420>
  461cfc:	nop
  461d00:	stp	x29, x30, [sp, #-32]!
  461d04:	mov	x29, sp
  461d08:	str	x19, [sp, #16]
  461d0c:	mov	x19, x0
  461d10:	bl	461ce8 <_obstack_memory_used@@Base+0x8a0>
  461d14:	mov	x0, x19
  461d18:	mov	x1, #0x8                   	// #8
  461d1c:	ldr	x19, [sp, #16]
  461d20:	ldp	x29, x30, [sp], #32
  461d24:	b	461b00 <_obstack_memory_used@@Base+0x6b8>
  461d28:	adrp	x1, 4a3000 <_obstack_memory_used@@Base+0x41bb8>
  461d2c:	ldr	x1, [x1, #4056]
  461d30:	add	x1, x1, #0x10
  461d34:	str	x1, [x0]
  461d38:	ret
  461d3c:	nop
  461d40:	stp	x29, x30, [sp, #-32]!
  461d44:	cmp	x0, #0x0
  461d48:	mov	x29, sp
  461d4c:	str	x19, [sp, #16]
  461d50:	csinc	x19, x0, xzr, ne  // ne = any
  461d54:	mov	x0, x19
  461d58:	bl	402670 <malloc@plt>
  461d5c:	cbz	x0, 461d6c <_obstack_memory_used@@Base+0x924>
  461d60:	ldr	x19, [sp, #16]
  461d64:	ldp	x29, x30, [sp], #32
  461d68:	ret
  461d6c:	bl	463638 <_obstack_memory_used@@Base+0x21f0>
  461d70:	cbz	x0, 461d7c <_obstack_memory_used@@Base+0x934>
  461d74:	blr	x0
  461d78:	b	461d54 <_obstack_memory_used@@Base+0x90c>
  461d7c:	mov	x0, #0x8                   	// #8
  461d80:	bl	462730 <_obstack_memory_used@@Base+0x12e8>
  461d84:	adrp	x3, 4a3000 <_obstack_memory_used@@Base+0x41bb8>
  461d88:	adrp	x2, 4a3000 <_obstack_memory_used@@Base+0x41bb8>
  461d8c:	adrp	x1, 4a3000 <_obstack_memory_used@@Base+0x41bb8>
  461d90:	ldr	x3, [x3, #3992]
  461d94:	ldr	x2, [x2, #3920]
  461d98:	add	x3, x3, #0x10
  461d9c:	ldr	x1, [x1, #3904]
  461da0:	str	x3, [x0]
  461da4:	bl	463548 <_obstack_memory_used@@Base+0x2100>
  461da8:	b	461d40 <_obstack_memory_used@@Base+0x8f8>
  461dac:	nop
  461db0:	adrp	x1, 4a3000 <_obstack_memory_used@@Base+0x41bb8>
  461db4:	ldr	x1, [x1, #4008]
  461db8:	add	x1, x1, #0x10
  461dbc:	str	x1, [x0]
  461dc0:	b	462178 <_obstack_memory_used@@Base+0xd30>
  461dc4:	nop
  461dc8:	stp	x29, x30, [sp, #-32]!
  461dcc:	mov	x29, sp
  461dd0:	str	x19, [sp, #16]
  461dd4:	mov	x19, x0
  461dd8:	bl	461db0 <_obstack_memory_used@@Base+0x968>
  461ddc:	mov	x0, x19
  461de0:	mov	x1, #0x18                  	// #24
  461de4:	ldr	x19, [sp, #16]
  461de8:	ldp	x29, x30, [sp], #32
  461dec:	b	461b00 <_obstack_memory_used@@Base+0x6b8>
  461df0:	stp	x29, x30, [sp, #-64]!
  461df4:	cmp	x4, x2
  461df8:	mov	x29, sp
  461dfc:	stp	x19, x20, [sp, #16]
  461e00:	mov	x19, x0
  461e04:	mov	x20, x1
  461e08:	b.eq	461e2c <_obstack_memory_used@@Base+0x9e4>  // b.none
  461e0c:	ldr	x0, [x19, #16]
  461e10:	mov	x1, x20
  461e14:	ldp	x19, x20, [sp, #16]
  461e18:	ldr	x5, [x0]
  461e1c:	ldr	x5, [x5, #64]
  461e20:	ldp	x29, x30, [sp], #64
  461e24:	mov	x16, x5
  461e28:	br	x16
  461e2c:	ldr	x1, [x3, #8]
  461e30:	ldr	x0, [x0, #8]
  461e34:	cmp	x0, x1
  461e38:	b.eq	461e60 <_obstack_memory_used@@Base+0xa18>  // b.none
  461e3c:	ldrb	w5, [x0]
  461e40:	cmp	w5, #0x2a
  461e44:	b.eq	461e0c <_obstack_memory_used@@Base+0x9c4>  // b.none
  461e48:	stp	x2, x3, [sp, #40]
  461e4c:	str	x4, [sp, #56]
  461e50:	bl	402890 <strcmp@plt>
  461e54:	ldp	x2, x3, [sp, #40]
  461e58:	ldr	x4, [sp, #56]
  461e5c:	cbnz	w0, 461e0c <_obstack_memory_used@@Base+0x9c4>
  461e60:	mov	w0, #0x6                   	// #6
  461e64:	ldp	x19, x20, [sp, #16]
  461e68:	ldp	x29, x30, [sp], #64
  461e6c:	ret
  461e70:	stp	x29, x30, [sp, #-96]!
  461e74:	mov	x29, sp
  461e78:	stp	x21, x22, [sp, #32]
  461e7c:	mov	x22, x3
  461e80:	mov	x21, x1
  461e84:	stp	x25, x26, [sp, #64]
  461e88:	mov	w26, w2
  461e8c:	ldr	x25, [x0, #8]
  461e90:	stp	x19, x20, [sp, #16]
  461e94:	mov	x19, x4
  461e98:	ldr	x3, [x3, #8]
  461e9c:	stp	x23, x24, [sp, #48]
  461ea0:	mov	x20, x7
  461ea4:	mov	x23, x6
  461ea8:	cmp	x25, x3
  461eac:	b.eq	461edc <_obstack_memory_used@@Base+0xa94>  // b.none
  461eb0:	stp	x27, x28, [sp, #80]
  461eb4:	mov	x24, x5
  461eb8:	mov	x27, x0
  461ebc:	ldrb	w28, [x25]
  461ec0:	cmp	w28, #0x2a
  461ec4:	b.eq	461f18 <_obstack_memory_used@@Base+0xad0>  // b.none
  461ec8:	mov	x1, x3
  461ecc:	mov	x0, x25
  461ed0:	bl	402890 <strcmp@plt>
  461ed4:	cbnz	w0, 461f18 <_obstack_memory_used@@Base+0xad0>
  461ed8:	ldp	x27, x28, [sp, #80]
  461edc:	str	x19, [x20]
  461ee0:	str	w26, [x20, #8]
  461ee4:	tbnz	x21, #63, 461f68 <_obstack_memory_used@@Base+0xb20>
  461ee8:	add	x1, x19, x21
  461eec:	mov	w2, #0x6                   	// #6
  461ef0:	cmp	x23, x1
  461ef4:	mov	w0, #0x0                   	// #0
  461ef8:	csinc	w2, w2, wzr, eq  // eq = none
  461efc:	str	w2, [x20, #16]
  461f00:	ldp	x19, x20, [sp, #16]
  461f04:	ldp	x21, x22, [sp, #32]
  461f08:	ldp	x23, x24, [sp, #48]
  461f0c:	ldp	x25, x26, [sp, #64]
  461f10:	ldp	x29, x30, [sp], #96
  461f14:	ret
  461f18:	cmp	x19, x23
  461f1c:	b.eq	461f80 <_obstack_memory_used@@Base+0xb38>  // b.none
  461f20:	ldr	x0, [x27, #16]
  461f24:	mov	x7, x20
  461f28:	mov	x6, x23
  461f2c:	mov	x5, x24
  461f30:	mov	x4, x19
  461f34:	mov	x3, x22
  461f38:	ldr	x8, [x0]
  461f3c:	mov	w2, w26
  461f40:	mov	x1, x21
  461f44:	ldp	x19, x20, [sp, #16]
  461f48:	ldp	x21, x22, [sp, #32]
  461f4c:	ldp	x23, x24, [sp, #48]
  461f50:	ldp	x25, x26, [sp, #64]
  461f54:	ldp	x27, x28, [sp, #80]
  461f58:	ldp	x29, x30, [sp], #96
  461f5c:	ldr	x8, [x8, #56]
  461f60:	mov	x16, x8
  461f64:	br	x16
  461f68:	cmn	x21, #0x2
  461f6c:	mov	w0, #0x0                   	// #0
  461f70:	b.ne	461f00 <_obstack_memory_used@@Base+0xab8>  // b.any
  461f74:	mov	w1, #0x1                   	// #1
  461f78:	str	w1, [x20, #16]
  461f7c:	b	461f00 <_obstack_memory_used@@Base+0xab8>
  461f80:	ldr	x1, [x24, #8]
  461f84:	cmp	x25, x1
  461f88:	b.eq	461fa0 <_obstack_memory_used@@Base+0xb58>  // b.none
  461f8c:	cmp	w28, #0x2a
  461f90:	b.eq	461f20 <_obstack_memory_used@@Base+0xad8>  // b.none
  461f94:	mov	x0, x25
  461f98:	bl	402890 <strcmp@plt>
  461f9c:	cbnz	w0, 461f20 <_obstack_memory_used@@Base+0xad8>
  461fa0:	mov	w0, #0x0                   	// #0
  461fa4:	ldp	x27, x28, [sp, #80]
  461fa8:	str	w26, [x20, #12]
  461fac:	b	461f00 <_obstack_memory_used@@Base+0xab8>
  461fb0:	stp	x29, x30, [sp, #-48]!
  461fb4:	mov	x29, sp
  461fb8:	stp	x19, x20, [sp, #16]
  461fbc:	mov	x19, x1
  461fc0:	mov	x20, x2
  461fc4:	stp	x21, x22, [sp, #32]
  461fc8:	mov	x22, x0
  461fcc:	mov	x21, x3
  461fd0:	bl	462298 <_obstack_memory_used@@Base+0xe50>
  461fd4:	tst	w0, #0xff
  461fd8:	b.ne	462008 <_obstack_memory_used@@Base+0xbc0>  // b.any
  461fdc:	ldr	x0, [x22, #16]
  461fe0:	mov	x3, x21
  461fe4:	mov	x2, x20
  461fe8:	mov	x1, x19
  461fec:	ldp	x19, x20, [sp, #16]
  461ff0:	ldr	x4, [x0]
  461ff4:	ldp	x21, x22, [sp, #32]
  461ff8:	ldp	x29, x30, [sp], #48
  461ffc:	ldr	x4, [x4, #48]
  462000:	mov	x16, x4
  462004:	br	x16
  462008:	ldp	x19, x20, [sp, #16]
  46200c:	ldp	x21, x22, [sp, #32]
  462010:	ldp	x29, x30, [sp], #48
  462014:	ret
  462018:	ret
  46201c:	nop
  462020:	mov	w0, #0x0                   	// #0
  462024:	ret
  462028:	mov	w0, #0x0                   	// #0
  46202c:	ret
  462030:	stp	x29, x30, [sp, #-32]!
  462034:	mov	x29, sp
  462038:	str	x19, [sp, #16]
  46203c:	mov	x19, x0
  462040:	bl	462018 <_obstack_memory_used@@Base+0xbd0>
  462044:	mov	x0, x19
  462048:	mov	x1, #0x10                  	// #16
  46204c:	ldr	x19, [sp, #16]
  462050:	ldp	x29, x30, [sp], #32
  462054:	b	461b00 <_obstack_memory_used@@Base+0x6b8>
  462058:	ldr	x2, [x0, #8]
  46205c:	ldr	x1, [x1, #8]
  462060:	cmp	x2, x1
  462064:	b.eq	46209c <_obstack_memory_used@@Base+0xc54>  // b.none
  462068:	ldrb	w3, [x2]
  46206c:	mov	w0, #0x0                   	// #0
  462070:	cmp	w3, #0x2a
  462074:	b.eq	462098 <_obstack_memory_used@@Base+0xc50>  // b.none
  462078:	stp	x29, x30, [sp, #-16]!
  46207c:	mov	x0, x2
  462080:	mov	x29, sp
  462084:	bl	402890 <strcmp@plt>
  462088:	cmp	w0, #0x0
  46208c:	cset	w0, eq  // eq = none
  462090:	ldp	x29, x30, [sp], #16
  462094:	ret
  462098:	ret
  46209c:	mov	w0, #0x1                   	// #1
  4620a0:	ret
  4620a4:	nop
  4620a8:	adrp	x0, 481000 <_obstack_memory_used@@Base+0x1fbb8>
  4620ac:	add	x0, x0, #0xdc0
  4620b0:	ret
  4620b4:	nop
  4620b8:	adrp	x1, 4a3000 <_obstack_memory_used@@Base+0x41bb8>
  4620bc:	ldr	x1, [x1, #3992]
  4620c0:	add	x1, x1, #0x10
  4620c4:	str	x1, [x0]
  4620c8:	b	462868 <_obstack_memory_used@@Base+0x1420>
  4620cc:	nop
  4620d0:	stp	x29, x30, [sp, #-32]!
  4620d4:	mov	x29, sp
  4620d8:	str	x19, [sp, #16]
  4620dc:	mov	x19, x0
  4620e0:	bl	4620b8 <_obstack_memory_used@@Base+0xc70>
  4620e4:	mov	x0, x19
  4620e8:	mov	x1, #0x8                   	// #8
  4620ec:	ldr	x19, [sp, #16]
  4620f0:	ldp	x29, x30, [sp], #32
  4620f4:	b	461b00 <_obstack_memory_used@@Base+0x6b8>
  4620f8:	stp	x29, x30, [sp, #-64]!
  4620fc:	mov	x29, sp
  462100:	ldr	x4, [x0]
  462104:	str	xzr, [sp, #40]
  462108:	str	xzr, [sp, #56]
  46210c:	add	x3, sp, #0x28
  462110:	ldr	x4, [x4, #48]
  462114:	str	x19, [sp, #16]
  462118:	mov	x19, x2
  46211c:	mov	x2, #0x1000000000          	// #68719476736
  462120:	str	x2, [sp, #48]
  462124:	ldr	x2, [x19]
  462128:	blr	x4
  46212c:	ldr	w0, [sp, #48]
  462130:	and	w0, w0, #0x6
  462134:	cmp	w0, #0x6
  462138:	b.ne	462154 <_obstack_memory_used@@Base+0xd0c>  // b.any
  46213c:	ldr	x1, [sp, #40]
  462140:	str	x1, [x19]
  462144:	mov	w0, #0x1                   	// #1
  462148:	ldr	x19, [sp, #16]
  46214c:	ldp	x29, x30, [sp], #64
  462150:	ret
  462154:	mov	w0, #0x0                   	// #0
  462158:	ldr	x19, [sp, #16]
  46215c:	ldp	x29, x30, [sp], #64
  462160:	ret
  462164:	nop
  462168:	cmp	x4, x2
  46216c:	mov	w0, #0x6                   	// #6
  462170:	csinc	w0, w0, wzr, eq  // eq = none
  462174:	ret
  462178:	adrp	x1, 4a3000 <_obstack_memory_used@@Base+0x41bb8>
  46217c:	ldr	x1, [x1, #4048]
  462180:	add	x1, x1, #0x10
  462184:	str	x1, [x0]
  462188:	b	462018 <_obstack_memory_used@@Base+0xbd0>
  46218c:	nop
  462190:	stp	x29, x30, [sp, #-32]!
  462194:	mov	x29, sp
  462198:	str	x19, [sp, #16]
  46219c:	mov	x19, x0
  4621a0:	bl	462178 <_obstack_memory_used@@Base+0xd30>
  4621a4:	mov	x0, x19
  4621a8:	mov	x1, #0x10                  	// #16
  4621ac:	ldr	x19, [sp, #16]
  4621b0:	ldp	x29, x30, [sp], #32
  4621b4:	b	461b00 <_obstack_memory_used@@Base+0x6b8>
  4621b8:	stp	x29, x30, [sp, #-64]!
  4621bc:	cmp	x4, x6
  4621c0:	mov	x29, sp
  4621c4:	stp	x19, x20, [sp, #16]
  4621c8:	mov	x20, x4
  4621cc:	mov	x19, x7
  4621d0:	stp	x21, x22, [sp, #32]
  4621d4:	mov	w21, w2
  4621d8:	ldr	x22, [x0, #8]
  4621dc:	str	x23, [sp, #48]
  4621e0:	mov	x23, x3
  4621e4:	b.eq	462234 <_obstack_memory_used@@Base+0xdec>  // b.none
  4621e8:	ldr	x1, [x3, #8]
  4621ec:	cmp	x1, x22
  4621f0:	b.eq	46220c <_obstack_memory_used@@Base+0xdc4>  // b.none
  4621f4:	ldrb	w0, [x22]
  4621f8:	cmp	w0, #0x2a
  4621fc:	b.eq	46221c <_obstack_memory_used@@Base+0xdd4>  // b.none
  462200:	mov	x0, x22
  462204:	bl	402890 <strcmp@plt>
  462208:	cbnz	w0, 46221c <_obstack_memory_used@@Base+0xdd4>
  46220c:	mov	w0, #0x1                   	// #1
  462210:	str	x20, [x19]
  462214:	str	w21, [x19, #8]
  462218:	str	w0, [x19, #16]
  46221c:	mov	w0, #0x0                   	// #0
  462220:	ldp	x19, x20, [sp, #16]
  462224:	ldp	x21, x22, [sp, #32]
  462228:	ldr	x23, [sp, #48]
  46222c:	ldp	x29, x30, [sp], #64
  462230:	ret
  462234:	ldr	x1, [x5, #8]
  462238:	cmp	x1, x22
  46223c:	b.eq	462278 <_obstack_memory_used@@Base+0xe30>  // b.none
  462240:	ldrb	w0, [x22]
  462244:	cmp	w0, #0x2a
  462248:	b.eq	462268 <_obstack_memory_used@@Base+0xe20>  // b.none
  46224c:	mov	x0, x22
  462250:	bl	402890 <strcmp@plt>
  462254:	cbz	w0, 462278 <_obstack_memory_used@@Base+0xe30>
  462258:	ldr	x1, [x23, #8]
  46225c:	cmp	x22, x1
  462260:	b.ne	462200 <_obstack_memory_used@@Base+0xdb8>  // b.any
  462264:	b	46220c <_obstack_memory_used@@Base+0xdc4>
  462268:	ldr	x0, [x3, #8]
  46226c:	cmp	x0, x22
  462270:	b.ne	46221c <_obstack_memory_used@@Base+0xdd4>  // b.any
  462274:	b	46220c <_obstack_memory_used@@Base+0xdc4>
  462278:	str	w21, [x19, #12]
  46227c:	mov	w0, #0x0                   	// #0
  462280:	ldp	x19, x20, [sp, #16]
  462284:	ldp	x21, x22, [sp, #32]
  462288:	ldr	x23, [sp, #48]
  46228c:	ldp	x29, x30, [sp], #64
  462290:	ret
  462294:	nop
  462298:	stp	x29, x30, [sp, #-48]!
  46229c:	mov	x29, sp
  4622a0:	ldr	x0, [x0, #8]
  4622a4:	stp	x19, x20, [sp, #16]
  4622a8:	mov	x20, x2
  4622ac:	ldr	x1, [x1, #8]
  4622b0:	str	x21, [sp, #32]
  4622b4:	mov	x19, x3
  4622b8:	cmp	x0, x1
  4622bc:	b.eq	4622d8 <_obstack_memory_used@@Base+0xe90>  // b.none
  4622c0:	ldrb	w2, [x0]
  4622c4:	mov	w21, #0x0                   	// #0
  4622c8:	cmp	w2, #0x2a
  4622cc:	b.eq	4622f0 <_obstack_memory_used@@Base+0xea8>  // b.none
  4622d0:	bl	402890 <strcmp@plt>
  4622d4:	cbnz	w0, 4622f0 <_obstack_memory_used@@Base+0xea8>
  4622d8:	mov	x0, #0x10                  	// #16
  4622dc:	mov	w1, #0x6                   	// #6
  4622e0:	mov	w21, #0x1                   	// #1
  4622e4:	str	x20, [x19]
  4622e8:	str	w1, [x19, #8]
  4622ec:	str	x0, [x19, #16]
  4622f0:	mov	w0, w21
  4622f4:	ldp	x19, x20, [sp, #16]
  4622f8:	ldr	x21, [sp, #32]
  4622fc:	ldp	x29, x30, [sp], #48
  462300:	ret
  462304:	nop
  462308:	stp	x29, x30, [sp, #-48]!
  46230c:	mov	x29, sp
  462310:	stp	x19, x20, [sp, #16]
  462314:	mov	x20, x0
  462318:	mov	x19, x1
  46231c:	ldr	x0, [x0, #8]
  462320:	ldr	x1, [x1, #8]
  462324:	cmp	x0, x1
  462328:	b.eq	462390 <_obstack_memory_used@@Base+0xf48>  // b.none
  46232c:	stp	x21, x22, [sp, #32]
  462330:	mov	x22, x2
  462334:	mov	w21, w3
  462338:	ldrb	w2, [x0]
  46233c:	cmp	w2, #0x2a
  462340:	b.eq	462360 <_obstack_memory_used@@Base+0xf18>  // b.none
  462344:	bl	402890 <strcmp@plt>
  462348:	cbnz	w0, 462360 <_obstack_memory_used@@Base+0xf18>
  46234c:	mov	w0, #0x1                   	// #1
  462350:	ldp	x19, x20, [sp, #16]
  462354:	ldp	x21, x22, [sp, #32]
  462358:	ldp	x29, x30, [sp], #48
  46235c:	ret
  462360:	cmp	w21, #0x3
  462364:	b.hi	4623a0 <_obstack_memory_used@@Base+0xf58>  // b.pmore
  462368:	ldr	x3, [x19]
  46236c:	mov	x2, x22
  462370:	mov	x1, x20
  462374:	mov	x0, x19
  462378:	ldp	x19, x20, [sp, #16]
  46237c:	ldp	x21, x22, [sp, #32]
  462380:	ldp	x29, x30, [sp], #48
  462384:	ldr	x3, [x3, #40]
  462388:	mov	x16, x3
  46238c:	br	x16
  462390:	mov	w0, #0x1                   	// #1
  462394:	ldp	x19, x20, [sp, #16]
  462398:	ldp	x29, x30, [sp], #48
  46239c:	ret
  4623a0:	mov	w0, #0x0                   	// #0
  4623a4:	ldp	x19, x20, [sp, #16]
  4623a8:	ldp	x21, x22, [sp, #32]
  4623ac:	ldp	x29, x30, [sp], #48
  4623b0:	ret
  4623b4:	nop
  4623b8:	b	402910 <free@plt>
  4623bc:	nop
  4623c0:	b	4623b8 <_obstack_memory_used@@Base+0xf70>
  4623c4:	nop
  4623c8:	adrp	x0, 481000 <_obstack_memory_used@@Base+0x1fbb8>
  4623cc:	add	x0, x0, #0xe08
  4623d0:	ret
  4623d4:	nop
  4623d8:	adrp	x0, 481000 <_obstack_memory_used@@Base+0x1fbb8>
  4623dc:	add	x0, x0, #0xe30
  4623e0:	ret
  4623e4:	nop
  4623e8:	adrp	x1, 4a3000 <_obstack_memory_used@@Base+0x41bb8>
  4623ec:	ldr	x1, [x1, #4000]
  4623f0:	add	x1, x1, #0x10
  4623f4:	str	x1, [x0]
  4623f8:	b	462868 <_obstack_memory_used@@Base+0x1420>
  4623fc:	nop
  462400:	adrp	x1, 4a3000 <_obstack_memory_used@@Base+0x41bb8>
  462404:	ldr	x1, [x1, #3984]
  462408:	add	x1, x1, #0x10
  46240c:	str	x1, [x0]
  462410:	b	462868 <_obstack_memory_used@@Base+0x1420>
  462414:	nop
  462418:	stp	x29, x30, [sp, #-32]!
  46241c:	adrp	x1, 4a3000 <_obstack_memory_used@@Base+0x41bb8>
  462420:	mov	x29, sp
  462424:	ldr	x1, [x1, #4000]
  462428:	str	x19, [sp, #16]
  46242c:	mov	x19, x0
  462430:	add	x1, x1, #0x10
  462434:	str	x1, [x0]
  462438:	bl	462868 <_obstack_memory_used@@Base+0x1420>
  46243c:	mov	x0, x19
  462440:	mov	x1, #0x8                   	// #8
  462444:	ldr	x19, [sp, #16]
  462448:	ldp	x29, x30, [sp], #32
  46244c:	b	461b00 <_obstack_memory_used@@Base+0x6b8>
  462450:	stp	x29, x30, [sp, #-32]!
  462454:	adrp	x1, 4a3000 <_obstack_memory_used@@Base+0x41bb8>
  462458:	mov	x29, sp
  46245c:	ldr	x1, [x1, #3984]
  462460:	str	x19, [sp, #16]
  462464:	mov	x19, x0
  462468:	add	x1, x1, #0x10
  46246c:	str	x1, [x0]
  462470:	bl	462868 <_obstack_memory_used@@Base+0x1420>
  462474:	mov	x0, x19
  462478:	mov	x1, #0x8                   	// #8
  46247c:	ldr	x19, [sp, #16]
  462480:	ldp	x29, x30, [sp], #32
  462484:	b	461b00 <_obstack_memory_used@@Base+0x6b8>
  462488:	stp	x29, x30, [sp, #-48]!
  46248c:	mov	x29, sp
  462490:	stp	x19, x20, [sp, #16]
  462494:	adrp	x20, 4a3000 <_obstack_memory_used@@Base+0x41bb8>
  462498:	mov	x19, x0
  46249c:	ldr	x0, [x20, #3880]
  4624a0:	str	x21, [sp, #32]
  4624a4:	adrp	x21, 4a5000 <__environ@@GLIBC_2.17+0xa68>
  4624a8:	cbz	x0, 4624b8 <_obstack_memory_used@@Base+0x1070>
  4624ac:	add	x0, x21, #0xaf0
  4624b0:	bl	402ad0 <pthread_mutex_lock@plt>
  4624b4:	cbnz	w0, 4625b0 <_obstack_memory_used@@Base+0x1168>
  4624b8:	add	x0, x21, #0xaf0
  4624bc:	sub	x5, x19, #0x10
  4624c0:	ldr	x1, [x0, #48]
  4624c4:	cbz	x1, 462540 <_obstack_memory_used@@Base+0x10f8>
  4624c8:	ldur	x6, [x19, #-16]
  4624cc:	add	x4, x5, x6
  4624d0:	cmp	x1, x4
  4624d4:	b.hi	462540 <_obstack_memory_used@@Base+0x10f8>  // b.pmore
  4624d8:	ldr	x2, [x1, #8]
  4624dc:	b.eq	462594 <_obstack_memory_used@@Base+0x114c>  // b.none
  4624e0:	add	x0, x0, #0x30
  4624e4:	cbnz	x2, 462500 <_obstack_memory_used@@Base+0x10b8>
  4624e8:	b	46251c <_obstack_memory_used@@Base+0x10d4>
  4624ec:	ldr	x3, [x2, #8]
  4624f0:	add	x0, x1, #0x8
  4624f4:	cbz	x3, 46257c <_obstack_memory_used@@Base+0x1134>
  4624f8:	mov	x1, x2
  4624fc:	mov	x2, x3
  462500:	cmp	x4, x2
  462504:	b.cc	4624ec <_obstack_memory_used@@Base+0x10a4>  // b.lo, b.ul, b.last
  462508:	b.ne	4625a8 <_obstack_memory_used@@Base+0x1160>  // b.any
  46250c:	ldp	x2, x3, [x4]
  462510:	str	x3, [x1, #8]
  462514:	ldr	x1, [x0]
  462518:	add	x6, x6, x2
  46251c:	ldr	x2, [x1]
  462520:	add	x3, x1, x2
  462524:	cmp	x5, x3
  462528:	b.eq	462570 <_obstack_memory_used@@Base+0x1128>  // b.none
  46252c:	ldr	x1, [x1, #8]
  462530:	stp	x6, x1, [x19, #-16]
  462534:	ldr	x0, [x0]
  462538:	str	x5, [x0, #8]
  46253c:	b	46254c <_obstack_memory_used@@Base+0x1104>
  462540:	add	x0, x21, #0xaf0
  462544:	stur	x1, [x19, #-8]
  462548:	str	x5, [x0, #48]
  46254c:	ldr	x20, [x20, #3880]
  462550:	cbz	x20, 462560 <_obstack_memory_used@@Base+0x1118>
  462554:	add	x0, x21, #0xaf0
  462558:	bl	402b00 <pthread_mutex_unlock@plt>
  46255c:	cbnz	w0, 4625b4 <_obstack_memory_used@@Base+0x116c>
  462560:	ldp	x19, x20, [sp, #16]
  462564:	ldr	x21, [sp, #32]
  462568:	ldp	x29, x30, [sp], #48
  46256c:	ret
  462570:	add	x6, x2, x6
  462574:	str	x6, [x1]
  462578:	b	46254c <_obstack_memory_used@@Base+0x1104>
  46257c:	ldr	x1, [x1, #8]
  462580:	ldr	x2, [x1]
  462584:	add	x3, x1, x2
  462588:	cmp	x5, x3
  46258c:	b.ne	46252c <_obstack_memory_used@@Base+0x10e4>  // b.any
  462590:	b	462570 <_obstack_memory_used@@Base+0x1128>
  462594:	ldr	x1, [x1]
  462598:	add	x6, x1, x6
  46259c:	stp	x6, x2, [x19, #-16]
  4625a0:	str	x5, [x0, #48]
  4625a4:	b	46254c <_obstack_memory_used@@Base+0x1104>
  4625a8:	ldr	x1, [x0]
  4625ac:	b	46251c <_obstack_memory_used@@Base+0x10d4>
  4625b0:	bl	402c5c <nftw@plt+0xdc>
  4625b4:	mov	x0, #0x8                   	// #8
  4625b8:	bl	462730 <_obstack_memory_used@@Base+0x12e8>
  4625bc:	adrp	x3, 4a3000 <_obstack_memory_used@@Base+0x41bb8>
  4625c0:	adrp	x2, 4a3000 <_obstack_memory_used@@Base+0x41bb8>
  4625c4:	adrp	x1, 4a3000 <_obstack_memory_used@@Base+0x41bb8>
  4625c8:	ldr	x3, [x3, #3984]
  4625cc:	ldr	x2, [x2, #4064]
  4625d0:	add	x3, x3, #0x10
  4625d4:	ldr	x1, [x1, #4040]
  4625d8:	str	x3, [x0]
  4625dc:	bl	463548 <_obstack_memory_used@@Base+0x2100>
  4625e0:	cmn	x1, #0x1
  4625e4:	b.ne	4625ec <_obstack_memory_used@@Base+0x11a4>  // b.any
  4625e8:	bl	4632e8 <_obstack_memory_used@@Base+0x1ea0>
  4625ec:	bl	470048 <_obstack_memory_used@@Base+0xec00>
  4625f0:	stp	x29, x30, [sp, #-48]!
  4625f4:	mov	x29, sp
  4625f8:	stp	x19, x20, [sp, #16]
  4625fc:	adrp	x20, 4a3000 <_obstack_memory_used@@Base+0x41bb8>
  462600:	mov	x19, x0
  462604:	ldr	x0, [x20, #3880]
  462608:	str	x21, [sp, #32]
  46260c:	adrp	x21, 4a5000 <__environ@@GLIBC_2.17+0xa68>
  462610:	cbz	x0, 462620 <_obstack_memory_used@@Base+0x11d8>
  462614:	add	x0, x21, #0xaf0
  462618:	bl	402ad0 <pthread_mutex_lock@plt>
  46261c:	cbnz	w0, 4626bc <_obstack_memory_used@@Base+0x1274>
  462620:	add	x3, x21, #0xaf0
  462624:	adds	x0, x19, #0x10
  462628:	mov	x19, #0x10                  	// #16
  46262c:	csel	x0, x0, x19, cc  // cc = lo, ul, last
  462630:	add	x0, x0, #0xf
  462634:	ldr	x19, [x3, #48]
  462638:	and	x0, x0, #0xfffffffffffffff0
  46263c:	cbz	x19, 462688 <_obstack_memory_used@@Base+0x1240>
  462640:	add	x3, x3, #0x30
  462644:	b	462650 <_obstack_memory_used@@Base+0x1208>
  462648:	add	x3, x2, #0x8
  46264c:	cbz	x19, 462688 <_obstack_memory_used@@Base+0x1240>
  462650:	mov	x2, x19
  462654:	ldp	x1, x19, [x19]
  462658:	cmp	x0, x1
  46265c:	b.hi	462648 <_obstack_memory_used@@Base+0x1200>  // b.pmore
  462660:	sub	x1, x1, x0
  462664:	cmp	x1, #0xf
  462668:	b.ls	4626b0 <_obstack_memory_used@@Base+0x1268>  // b.plast
  46266c:	add	x4, x2, x0
  462670:	str	x19, [x4, #8]
  462674:	str	x1, [x2, x0]
  462678:	ldr	x2, [x3]
  46267c:	add	x19, x2, #0x10
  462680:	str	x0, [x2]
  462684:	str	x4, [x3]
  462688:	ldr	x20, [x20, #3880]
  46268c:	cbz	x20, 46269c <_obstack_memory_used@@Base+0x1254>
  462690:	add	x0, x21, #0xaf0
  462694:	bl	402b00 <pthread_mutex_unlock@plt>
  462698:	cbnz	w0, 4626c0 <_obstack_memory_used@@Base+0x1278>
  46269c:	mov	x0, x19
  4626a0:	ldp	x19, x20, [sp, #16]
  4626a4:	ldr	x21, [sp, #32]
  4626a8:	ldp	x29, x30, [sp], #48
  4626ac:	ret
  4626b0:	str	x19, [x3]
  4626b4:	add	x19, x2, #0x10
  4626b8:	b	462688 <_obstack_memory_used@@Base+0x1240>
  4626bc:	bl	402c5c <nftw@plt+0xdc>
  4626c0:	mov	x0, #0x8                   	// #8
  4626c4:	bl	462730 <_obstack_memory_used@@Base+0x12e8>
  4626c8:	adrp	x3, 4a3000 <_obstack_memory_used@@Base+0x41bb8>
  4626cc:	adrp	x2, 4a3000 <_obstack_memory_used@@Base+0x41bb8>
  4626d0:	adrp	x1, 4a3000 <_obstack_memory_used@@Base+0x41bb8>
  4626d4:	ldr	x3, [x3, #3984]
  4626d8:	ldr	x2, [x2, #4064]
  4626dc:	add	x3, x3, #0x10
  4626e0:	ldr	x1, [x1, #4040]
  4626e4:	str	x3, [x0]
  4626e8:	bl	463548 <_obstack_memory_used@@Base+0x2100>
  4626ec:	cmn	x1, #0x1
  4626f0:	b.ne	4626f8 <_obstack_memory_used@@Base+0x12b0>  // b.any
  4626f4:	bl	4632e8 <_obstack_memory_used@@Base+0x1ea0>
  4626f8:	bl	470048 <_obstack_memory_used@@Base+0xec00>
  4626fc:	nop
  462700:	stp	x29, x30, [sp, #-32]!
  462704:	mov	x29, sp
  462708:	str	x19, [sp, #16]
  46270c:	adrp	x19, 4a5000 <__environ@@GLIBC_2.17+0xa68>
  462710:	add	x19, x19, #0xaf0
  462714:	ldr	x0, [x19, #56]
  462718:	cbz	x0, 462724 <_obstack_memory_used@@Base+0x12dc>
  46271c:	bl	402910 <free@plt>
  462720:	str	xzr, [x19, #56]
  462724:	ldr	x19, [sp, #16]
  462728:	ldp	x29, x30, [sp], #32
  46272c:	ret
  462730:	stp	x29, x30, [sp, #-32]!
  462734:	mov	x29, sp
  462738:	str	x19, [sp, #16]
  46273c:	add	x19, x0, #0x80
  462740:	mov	x0, x19
  462744:	bl	402670 <malloc@plt>
  462748:	mov	x1, x0
  46274c:	cbz	x0, 462780 <_obstack_memory_used@@Base+0x1338>
  462750:	stp	xzr, xzr, [x1]
  462754:	add	x0, x1, #0x80
  462758:	stp	xzr, xzr, [x1, #16]
  46275c:	stp	xzr, xzr, [x1, #32]
  462760:	stp	xzr, xzr, [x1, #48]
  462764:	stp	xzr, xzr, [x1, #64]
  462768:	stp	xzr, xzr, [x1, #80]
  46276c:	stp	xzr, xzr, [x1, #96]
  462770:	stp	xzr, xzr, [x1, #112]
  462774:	ldr	x19, [sp, #16]
  462778:	ldp	x29, x30, [sp], #32
  46277c:	ret
  462780:	mov	x0, x19
  462784:	bl	4625f0 <_obstack_memory_used@@Base+0x11a8>
  462788:	mov	x1, x0
  46278c:	cbnz	x0, 462750 <_obstack_memory_used@@Base+0x1308>
  462790:	bl	463420 <_obstack_memory_used@@Base+0x1fd8>
  462794:	nop
  462798:	adrp	x1, 4a5000 <__environ@@GLIBC_2.17+0xa68>
  46279c:	add	x1, x1, #0xaf0
  4627a0:	sub	x0, x0, #0x80
  4627a4:	ldr	x2, [x1, #56]
  4627a8:	cmp	x0, x2
  4627ac:	b.ls	4627d4 <_obstack_memory_used@@Base+0x138c>  // b.plast
  4627b0:	ldr	x1, [x1, #64]
  4627b4:	add	x2, x2, x1
  4627b8:	cmp	x0, x2
  4627bc:	b.cs	4627d4 <_obstack_memory_used@@Base+0x138c>  // b.hs, b.nlast
  4627c0:	stp	x29, x30, [sp, #-16]!
  4627c4:	mov	x29, sp
  4627c8:	bl	462488 <_obstack_memory_used@@Base+0x1040>
  4627cc:	ldp	x29, x30, [sp], #16
  4627d0:	ret
  4627d4:	b	402910 <free@plt>
  4627d8:	stp	x29, x30, [sp, #-16]!
  4627dc:	mov	x0, #0x70                  	// #112
  4627e0:	mov	x29, sp
  4627e4:	bl	402670 <malloc@plt>
  4627e8:	cbz	x0, 462810 <_obstack_memory_used@@Base+0x13c8>
  4627ec:	stp	xzr, xzr, [x0]
  4627f0:	stp	xzr, xzr, [x0, #16]
  4627f4:	stp	xzr, xzr, [x0, #32]
  4627f8:	stp	xzr, xzr, [x0, #48]
  4627fc:	stp	xzr, xzr, [x0, #64]
  462800:	stp	xzr, xzr, [x0, #80]
  462804:	stp	xzr, xzr, [x0, #96]
  462808:	ldp	x29, x30, [sp], #16
  46280c:	ret
  462810:	mov	x0, #0x70                  	// #112
  462814:	bl	4625f0 <_obstack_memory_used@@Base+0x11a8>
  462818:	cbnz	x0, 4627ec <_obstack_memory_used@@Base+0x13a4>
  46281c:	bl	463420 <_obstack_memory_used@@Base+0x1fd8>
  462820:	adrp	x2, 4a5000 <__environ@@GLIBC_2.17+0xa68>
  462824:	add	x2, x2, #0xaf0
  462828:	mov	x1, x0
  46282c:	ldr	x3, [x2, #56]
  462830:	cmp	x0, x3
  462834:	b.ls	46285c <_obstack_memory_used@@Base+0x1414>  // b.plast
  462838:	ldr	x2, [x2, #64]
  46283c:	add	x3, x3, x2
  462840:	cmp	x0, x3
  462844:	b.cs	46285c <_obstack_memory_used@@Base+0x1414>  // b.hs, b.nlast
  462848:	stp	x29, x30, [sp, #-16]!
  46284c:	mov	x29, sp
  462850:	bl	462488 <_obstack_memory_used@@Base+0x1040>
  462854:	ldp	x29, x30, [sp], #16
  462858:	ret
  46285c:	mov	x0, x1
  462860:	b	402910 <free@plt>
  462864:	nop
  462868:	ret
  46286c:	nop
  462870:	adrp	x1, 4a3000 <_obstack_memory_used@@Base+0x41bb8>
  462874:	ldr	x1, [x1, #3944]
  462878:	add	x1, x1, #0x10
  46287c:	str	x1, [x0]
  462880:	b	462868 <_obstack_memory_used@@Base+0x1420>
  462884:	nop
  462888:	adrp	x0, 481000 <_obstack_memory_used@@Base+0x1fbb8>
  46288c:	add	x0, x0, #0xeb0
  462890:	ret
  462894:	nop
  462898:	adrp	x0, 481000 <_obstack_memory_used@@Base+0x1fbb8>
  46289c:	add	x0, x0, #0xec0
  4628a0:	ret
  4628a4:	nop
  4628a8:	stp	x29, x30, [sp, #-32]!
  4628ac:	mov	x29, sp
  4628b0:	str	x19, [sp, #16]
  4628b4:	mov	x19, x0
  4628b8:	bl	462868 <_obstack_memory_used@@Base+0x1420>
  4628bc:	mov	x0, x19
  4628c0:	mov	x1, #0x8                   	// #8
  4628c4:	ldr	x19, [sp, #16]
  4628c8:	ldp	x29, x30, [sp], #32
  4628cc:	b	461b00 <_obstack_memory_used@@Base+0x6b8>
  4628d0:	stp	x29, x30, [sp, #-32]!
  4628d4:	mov	x29, sp
  4628d8:	str	x19, [sp, #16]
  4628dc:	mov	x19, x0
  4628e0:	bl	462870 <_obstack_memory_used@@Base+0x1428>
  4628e4:	mov	x0, x19
  4628e8:	mov	x1, #0x8                   	// #8
  4628ec:	ldr	x19, [sp, #16]
  4628f0:	ldp	x29, x30, [sp], #32
  4628f4:	b	461b00 <_obstack_memory_used@@Base+0x6b8>
  4628f8:	ret
  4628fc:	nop
  462900:	stp	x29, x30, [sp, #-32]!
  462904:	mov	x29, sp
  462908:	str	x19, [sp, #16]
  46290c:	mov	x19, x0
  462910:	bl	4628f8 <_obstack_memory_used@@Base+0x14b0>
  462914:	mov	x0, x19
  462918:	mov	x1, #0x8                   	// #8
  46291c:	ldr	x19, [sp, #16]
  462920:	ldp	x29, x30, [sp], #32
  462924:	b	461b00 <_obstack_memory_used@@Base+0x6b8>
  462928:	ret
  46292c:	nop
  462930:	stp	x29, x30, [sp, #-32]!
  462934:	mov	x29, sp
  462938:	str	x19, [sp, #16]
  46293c:	mov	x19, x0
  462940:	bl	462928 <_obstack_memory_used@@Base+0x14e0>
  462944:	mov	x0, x19
  462948:	mov	x1, #0x8                   	// #8
  46294c:	ldr	x19, [sp, #16]
  462950:	ldp	x29, x30, [sp], #32
  462954:	b	461b00 <_obstack_memory_used@@Base+0x6b8>
  462958:	ret
  46295c:	nop
  462960:	b	462888 <_obstack_memory_used@@Base+0x1440>
  462964:	nop
  462968:	ret
  46296c:	nop
  462970:	b	462898 <_obstack_memory_used@@Base+0x1450>
  462974:	nop
  462978:	stp	x29, x30, [sp, #-64]!
  46297c:	mov	x29, sp
  462980:	stp	x19, x20, [sp, #16]
  462984:	mov	x19, x1
  462988:	mov	x20, x0
  46298c:	mov	x0, x1
  462990:	ldr	x1, [x1]
  462994:	ldr	x1, [x1, #16]
  462998:	str	x21, [sp, #32]
  46299c:	mov	x21, x2
  4629a0:	ldr	x2, [x2]
  4629a4:	str	x2, [sp, #56]
  4629a8:	blr	x1
  4629ac:	tst	w0, #0xff
  4629b0:	b.eq	4629c0 <_obstack_memory_used@@Base+0x1578>  // b.none
  4629b4:	ldr	x0, [sp, #56]
  4629b8:	ldr	x0, [x0]
  4629bc:	str	x0, [sp, #56]
  4629c0:	ldr	x4, [x20]
  4629c4:	mov	x1, x19
  4629c8:	mov	x0, x20
  4629cc:	add	x2, sp, #0x38
  4629d0:	mov	w3, #0x1                   	// #1
  4629d4:	ldr	x4, [x4, #32]
  4629d8:	blr	x4
  4629dc:	tst	w0, #0xff
  4629e0:	b.eq	4629ec <_obstack_memory_used@@Base+0x15a4>  // b.none
  4629e4:	ldr	x1, [sp, #56]
  4629e8:	str	x1, [x21]
  4629ec:	ldp	x19, x20, [sp, #16]
  4629f0:	ldr	x21, [sp, #32]
  4629f4:	ldp	x29, x30, [sp], #64
  4629f8:	ret
  4629fc:	nop
  462a00:	and	w5, w0, #0xff
  462a04:	cmp	w5, #0x50
  462a08:	b.eq	462b20 <_obstack_memory_used@@Base+0x16d8>  // b.none
  462a0c:	and	w4, w5, #0xf
  462a10:	cmp	w4, #0x4
  462a14:	b.eq	462a30 <_obstack_memory_used@@Base+0x15e8>  // b.none
  462a18:	b.ls	462a44 <_obstack_memory_used@@Base+0x15fc>  // b.plast
  462a1c:	cmp	w4, #0xb
  462a20:	b.eq	462b44 <_obstack_memory_used@@Base+0x16fc>  // b.none
  462a24:	b.ls	462aa0 <_obstack_memory_used@@Base+0x1658>  // b.plast
  462a28:	cmp	w4, #0xc
  462a2c:	b.ne	462b54 <_obstack_memory_used@@Base+0x170c>  // b.any
  462a30:	mov	x0, x2
  462a34:	ldr	x4, [x0], #8
  462a38:	cbnz	x4, 462b00 <_obstack_memory_used@@Base+0x16b8>
  462a3c:	str	x4, [x3]
  462a40:	ret
  462a44:	cmp	w4, #0x2
  462a48:	b.eq	462b34 <_obstack_memory_used@@Base+0x16ec>  // b.none
  462a4c:	b.ls	462a68 <_obstack_memory_used@@Base+0x1620>  // b.plast
  462a50:	cmp	w4, #0x3
  462a54:	b.ne	462b54 <_obstack_memory_used@@Base+0x170c>  // b.any
  462a58:	mov	x0, x2
  462a5c:	ldr	w4, [x0], #4
  462a60:	cbz	x4, 462a3c <_obstack_memory_used@@Base+0x15f4>
  462a64:	b	462b00 <_obstack_memory_used@@Base+0x16b8>
  462a68:	cbz	w4, 462a30 <_obstack_memory_used@@Base+0x15e8>
  462a6c:	cmp	w4, #0x1
  462a70:	b.ne	462b54 <_obstack_memory_used@@Base+0x170c>  // b.any
  462a74:	mov	x0, x2
  462a78:	mov	x4, #0x0                   	// #0
  462a7c:	mov	w7, #0x0                   	// #0
  462a80:	ldrb	w8, [x0], #1
  462a84:	and	x6, x8, #0x7f
  462a88:	lsl	x6, x6, x7
  462a8c:	add	w7, w7, #0x7
  462a90:	orr	x4, x4, x6
  462a94:	tbnz	w8, #7, 462a80 <_obstack_memory_used@@Base+0x1638>
  462a98:	cbz	x4, 462a3c <_obstack_memory_used@@Base+0x15f4>
  462a9c:	b	462b00 <_obstack_memory_used@@Base+0x16b8>
  462aa0:	cmp	w4, #0x9
  462aa4:	b.eq	462ac0 <_obstack_memory_used@@Base+0x1678>  // b.none
  462aa8:	cmp	w4, #0xa
  462aac:	b.ne	462b54 <_obstack_memory_used@@Base+0x170c>  // b.any
  462ab0:	mov	x0, x2
  462ab4:	ldrsh	x4, [x0], #2
  462ab8:	cbz	x4, 462a3c <_obstack_memory_used@@Base+0x15f4>
  462abc:	b	462b00 <_obstack_memory_used@@Base+0x16b8>
  462ac0:	mov	x0, x2
  462ac4:	mov	x4, #0x0                   	// #0
  462ac8:	mov	w7, #0x0                   	// #0
  462acc:	ldrb	w8, [x0], #1
  462ad0:	and	x6, x8, #0x7f
  462ad4:	lsl	x6, x6, x7
  462ad8:	add	w7, w7, #0x7
  462adc:	orr	x4, x4, x6
  462ae0:	tbnz	w8, #7, 462acc <_obstack_memory_used@@Base+0x1684>
  462ae4:	cmp	w7, #0x3f
  462ae8:	b.hi	462a38 <_obstack_memory_used@@Base+0x15f0>  // b.pmore
  462aec:	tbz	w8, #6, 462a38 <_obstack_memory_used@@Base+0x15f0>
  462af0:	mov	x6, #0xffffffffffffffff    	// #-1
  462af4:	lsl	x7, x6, x7
  462af8:	orr	x4, x4, x7
  462afc:	nop
  462b00:	and	w6, w5, #0x70
  462b04:	cmp	w6, #0x10
  462b08:	csel	x1, x2, x1, eq  // eq = none
  462b0c:	add	x4, x4, x1
  462b10:	tbz	w5, #7, 462a3c <_obstack_memory_used@@Base+0x15f4>
  462b14:	ldr	x4, [x4]
  462b18:	str	x4, [x3]
  462b1c:	ret
  462b20:	add	x0, x2, #0x7
  462b24:	and	x0, x0, #0xfffffffffffffff8
  462b28:	ldr	x4, [x0], #8
  462b2c:	str	x4, [x3]
  462b30:	ret
  462b34:	mov	x0, x2
  462b38:	ldrh	w4, [x0], #2
  462b3c:	cbz	x4, 462a3c <_obstack_memory_used@@Base+0x15f4>
  462b40:	b	462b00 <_obstack_memory_used@@Base+0x16b8>
  462b44:	mov	x0, x2
  462b48:	ldrsw	x4, [x0], #4
  462b4c:	cbz	x4, 462a3c <_obstack_memory_used@@Base+0x15f4>
  462b50:	b	462b00 <_obstack_memory_used@@Base+0x16b8>
  462b54:	stp	x29, x30, [sp, #-16]!
  462b58:	mov	x29, sp
  462b5c:	bl	4027f0 <abort@plt>
  462b60:	stp	x29, x30, [sp, #-32]!
  462b64:	mov	x3, x0
  462b68:	mov	x29, sp
  462b6c:	ldrb	w0, [x0, #40]
  462b70:	cmp	w0, #0xff
  462b74:	b.eq	462c00 <_obstack_memory_used@@Base+0x17b8>  // b.none
  462b78:	and	w4, w0, #0x7
  462b7c:	cmp	w4, #0x2
  462b80:	b.eq	462be0 <_obstack_memory_used@@Base+0x1798>  // b.none
  462b84:	b.ls	462bb0 <_obstack_memory_used@@Base+0x1768>  // b.plast
  462b88:	cmp	w4, #0x3
  462b8c:	neg	x2, x1, lsl #2
  462b90:	b.ne	462bd4 <_obstack_memory_used@@Base+0x178c>  // b.any
  462b94:	ldp	x1, x4, [x3, #16]
  462b98:	add	x3, sp, #0x18
  462b9c:	add	x2, x4, x2
  462ba0:	bl	462a00 <_obstack_memory_used@@Base+0x15b8>
  462ba4:	ldr	x0, [sp, #24]
  462ba8:	ldp	x29, x30, [sp], #32
  462bac:	ret
  462bb0:	cbnz	w4, 462bdc <_obstack_memory_used@@Base+0x1794>
  462bb4:	neg	x2, x1, lsl #3
  462bb8:	ldp	x1, x4, [x3, #16]
  462bbc:	add	x3, sp, #0x18
  462bc0:	add	x2, x4, x2
  462bc4:	bl	462a00 <_obstack_memory_used@@Base+0x15b8>
  462bc8:	ldr	x0, [sp, #24]
  462bcc:	ldp	x29, x30, [sp], #32
  462bd0:	ret
  462bd4:	cmp	w4, #0x4
  462bd8:	b.eq	462bb4 <_obstack_memory_used@@Base+0x176c>  // b.none
  462bdc:	bl	4027f0 <abort@plt>
  462be0:	neg	x2, x1, lsl #1
  462be4:	ldp	x1, x4, [x3, #16]
  462be8:	add	x3, sp, #0x18
  462bec:	add	x2, x4, x2
  462bf0:	bl	462a00 <_obstack_memory_used@@Base+0x15b8>
  462bf4:	ldr	x0, [sp, #24]
  462bf8:	ldp	x29, x30, [sp], #32
  462bfc:	ret
  462c00:	ldp	x1, x4, [x3, #16]
  462c04:	mov	x2, #0x0                   	// #0
  462c08:	add	x3, sp, #0x18
  462c0c:	add	x2, x4, x2
  462c10:	bl	462a00 <_obstack_memory_used@@Base+0x15b8>
  462c14:	ldr	x0, [sp, #24]
  462c18:	ldp	x29, x30, [sp], #32
  462c1c:	ret
  462c20:	stp	x29, x30, [sp, #-64]!
  462c24:	mov	x29, sp
  462c28:	stp	x21, x22, [sp, #32]
  462c2c:	mov	x22, x0
  462c30:	mvn	x0, x3
  462c34:	stp	x19, x20, [sp, #16]
  462c38:	add	x21, sp, #0x38
  462c3c:	mov	x20, x1
  462c40:	ldr	x19, [x22, #24]
  462c44:	str	x2, [sp, #56]
  462c48:	add	x19, x19, x0
  462c4c:	nop
  462c50:	mov	x1, #0x0                   	// #0
  462c54:	mov	w3, #0x0                   	// #0
  462c58:	ldrb	w4, [x19], #1
  462c5c:	and	x2, x4, #0x7f
  462c60:	lsl	x2, x2, x3
  462c64:	add	w3, w3, #0x7
  462c68:	orr	x1, x1, x2
  462c6c:	tbnz	w4, #7, 462c58 <_obstack_memory_used@@Base+0x1810>
  462c70:	cbz	x1, 462ca0 <_obstack_memory_used@@Base+0x1858>
  462c74:	mov	x0, x22
  462c78:	bl	462b60 <_obstack_memory_used@@Base+0x1718>
  462c7c:	mov	x2, x21
  462c80:	mov	x1, x20
  462c84:	bl	462978 <_obstack_memory_used@@Base+0x1530>
  462c88:	ands	w0, w0, #0xff
  462c8c:	b.eq	462c50 <_obstack_memory_used@@Base+0x1808>  // b.none
  462c90:	ldp	x19, x20, [sp, #16]
  462c94:	ldp	x21, x22, [sp, #32]
  462c98:	ldp	x29, x30, [sp], #64
  462c9c:	ret
  462ca0:	mov	w0, #0x0                   	// #0
  462ca4:	ldp	x19, x20, [sp, #16]
  462ca8:	ldp	x21, x22, [sp, #32]
  462cac:	ldp	x29, x30, [sp], #64
  462cb0:	ret
  462cb4:	nop
  462cb8:	and	w3, w0, #0xff
  462cbc:	cmp	w3, #0xff
  462cc0:	b.eq	462d10 <_obstack_memory_used@@Base+0x18c8>  // b.none
  462cc4:	and	w2, w3, #0x70
  462cc8:	mov	x0, x1
  462ccc:	cmp	w2, #0x30
  462cd0:	b.eq	462d18 <_obstack_memory_used@@Base+0x18d0>  // b.none
  462cd4:	b.hi	462ce4 <_obstack_memory_used@@Base+0x189c>  // b.pmore
  462cd8:	cmp	w2, #0x20
  462cdc:	b.ne	462cf0 <_obstack_memory_used@@Base+0x18a8>  // b.any
  462ce0:	b	46fc98 <_obstack_memory_used@@Base+0xe850>
  462ce4:	cmp	w2, #0x40
  462ce8:	b.ne	462d08 <_obstack_memory_used@@Base+0x18c0>  // b.any
  462cec:	b	46fc60 <_obstack_memory_used@@Base+0xe818>
  462cf0:	b.hi	462cfc <_obstack_memory_used@@Base+0x18b4>  // b.pmore
  462cf4:	tst	w3, #0x60
  462cf8:	b.eq	462d10 <_obstack_memory_used@@Base+0x18c8>  // b.none
  462cfc:	stp	x29, x30, [sp, #-16]!
  462d00:	mov	x29, sp
  462d04:	bl	4027f0 <abort@plt>
  462d08:	cmp	w2, #0x50
  462d0c:	b.ne	462cfc <_obstack_memory_used@@Base+0x18b4>  // b.any
  462d10:	mov	x0, #0x0                   	// #0
  462d14:	ret
  462d18:	b	46fc90 <_obstack_memory_used@@Base+0xe848>
  462d1c:	nop
  462d20:	stp	x29, x30, [sp, #-48]!
  462d24:	mov	x29, sp
  462d28:	stp	x19, x20, [sp, #16]
  462d2c:	mov	x19, x1
  462d30:	mov	x20, x2
  462d34:	stp	x21, x22, [sp, #32]
  462d38:	mov	x1, #0x0                   	// #0
  462d3c:	mov	x21, x0
  462d40:	cbz	x0, 462d4c <_obstack_memory_used@@Base+0x1904>
  462d44:	bl	46fc60 <_obstack_memory_used@@Base+0xe818>
  462d48:	mov	x1, x0
  462d4c:	str	x1, [x20]
  462d50:	ldrb	w22, [x19], #1
  462d54:	cmp	w22, #0xff
  462d58:	b.ne	462de0 <_obstack_memory_used@@Base+0x1998>  // b.any
  462d5c:	mov	x0, x19
  462d60:	str	x1, [x20, #8]
  462d64:	ldrb	w1, [x0], #1
  462d68:	strb	w1, [x20, #40]
  462d6c:	cmp	w1, #0xff
  462d70:	b.eq	462e18 <_obstack_memory_used@@Base+0x19d0>  // b.none
  462d74:	mov	x5, #0x0                   	// #0
  462d78:	mov	w3, #0x0                   	// #0
  462d7c:	nop
  462d80:	ldrb	w4, [x0], #1
  462d84:	and	x1, x4, #0x7f
  462d88:	lsl	x1, x1, x3
  462d8c:	add	w3, w3, #0x7
  462d90:	orr	x5, x5, x1
  462d94:	tbnz	w4, #7, 462d80 <_obstack_memory_used@@Base+0x1938>
  462d98:	add	x5, x0, x5
  462d9c:	str	x5, [x20, #24]
  462da0:	ldrb	w1, [x0], #1
  462da4:	mov	x5, #0x0                   	// #0
  462da8:	mov	w3, #0x0                   	// #0
  462dac:	strb	w1, [x20, #41]
  462db0:	ldrb	w4, [x0], #1
  462db4:	and	x1, x4, #0x7f
  462db8:	lsl	x1, x1, x3
  462dbc:	add	w3, w3, #0x7
  462dc0:	orr	x5, x5, x1
  462dc4:	tbnz	w4, #7, 462db0 <_obstack_memory_used@@Base+0x1968>
  462dc8:	add	x5, x0, x5
  462dcc:	ldp	x21, x22, [sp, #32]
  462dd0:	str	x5, [x20, #32]
  462dd4:	ldp	x19, x20, [sp, #16]
  462dd8:	ldp	x29, x30, [sp], #48
  462ddc:	ret
  462de0:	mov	x1, x21
  462de4:	mov	w0, w22
  462de8:	bl	462cb8 <_obstack_memory_used@@Base+0x1870>
  462dec:	mov	x1, x0
  462df0:	mov	x2, x19
  462df4:	mov	w0, w22
  462df8:	add	x3, x20, #0x8
  462dfc:	bl	462a00 <_obstack_memory_used@@Base+0x15b8>
  462e00:	mov	x19, x0
  462e04:	mov	x0, x19
  462e08:	ldrb	w1, [x0], #1
  462e0c:	strb	w1, [x20, #40]
  462e10:	cmp	w1, #0xff
  462e14:	b.ne	462d74 <_obstack_memory_used@@Base+0x192c>  // b.any
  462e18:	str	xzr, [x20, #24]
  462e1c:	b	462da0 <_obstack_memory_used@@Base+0x1958>
  462e20:	stp	x29, x30, [sp, #-240]!
  462e24:	cmp	w0, #0x1
  462e28:	mov	x29, sp
  462e2c:	str	wzr, [sp, #156]
  462e30:	str	xzr, [sp, #160]
  462e34:	b.ne	462e98 <_obstack_memory_used@@Base+0x1a50>  // b.any
  462e38:	stp	x19, x20, [sp, #16]
  462e3c:	mov	x20, #0xd500                	// #54528
  462e40:	movk	x20, #0xbcd4, lsl #16
  462e44:	movk	x20, #0xaabc, lsl #32
  462e48:	stp	x21, x22, [sp, #32]
  462e4c:	movk	x20, #0xb8b1, lsl #48
  462e50:	add	x0, x2, x20
  462e54:	stp	x23, x24, [sp, #48]
  462e58:	cmp	x0, #0x1
  462e5c:	stp	x25, x26, [sp, #64]
  462e60:	mov	w22, w1
  462e64:	mov	x21, x3
  462e68:	stp	x27, x28, [sp, #80]
  462e6c:	mov	x19, x4
  462e70:	str	x0, [sp, #104]
  462e74:	cset	w0, ls  // ls = plast
  462e78:	str	w0, [sp, #128]
  462e7c:	cmp	w1, #0x6
  462e80:	csel	w27, w0, wzr, eq  // eq = none
  462e84:	cbz	w27, 462ea4 <_obstack_memory_used@@Base+0x1a5c>
  462e88:	ldur	x26, [x3, #-16]
  462e8c:	cbnz	x26, 463018 <_obstack_memory_used@@Base+0x1bd0>
  462e90:	mov	x0, x21
  462e94:	bl	463688 <_obstack_memory_used@@Base+0x2240>
  462e98:	mov	w0, #0x3                   	// #3
  462e9c:	ldp	x29, x30, [sp], #240
  462ea0:	ret
  462ea4:	mov	x0, x4
  462ea8:	bl	46fc58 <_obstack_memory_used@@Base+0xe810>
  462eac:	str	x0, [sp, #112]
  462eb0:	cbz	x0, 46307c <_obstack_memory_used@@Base+0x1c34>
  462eb4:	ldr	x1, [sp, #112]
  462eb8:	add	x0, sp, #0xc0
  462ebc:	mov	x2, x0
  462ec0:	str	x0, [sp, #120]
  462ec4:	mov	x0, x19
  462ec8:	bl	462d20 <_obstack_memory_used@@Base+0x18d8>
  462ecc:	mov	x20, x0
  462ed0:	ldrb	w0, [sp, #232]
  462ed4:	mov	x1, x19
  462ed8:	bl	462cb8 <_obstack_memory_used@@Base+0x1870>
  462edc:	mov	x3, x0
  462ee0:	add	x1, sp, #0x9c
  462ee4:	mov	x0, x19
  462ee8:	str	x3, [sp, #208]
  462eec:	bl	46fc38 <_obstack_memory_used@@Base+0xe7f0>
  462ef0:	ldr	w3, [sp, #156]
  462ef4:	ldr	x1, [sp, #224]
  462ef8:	cmp	w3, #0x0
  462efc:	cset	x3, eq  // eq = none
  462f00:	sub	x23, x0, x3
  462f04:	cmp	x20, x1
  462f08:	b.cs	462fe0 <_obstack_memory_used@@Base+0x1b98>  // b.hs, b.nlast
  462f0c:	add	x26, sp, #0xa8
  462f10:	add	x25, sp, #0xb0
  462f14:	add	x24, sp, #0xb8
  462f18:	ldrb	w28, [sp, #233]
  462f1c:	mov	x1, #0x0                   	// #0
  462f20:	mov	w0, w28
  462f24:	bl	462cb8 <_obstack_memory_used@@Base+0x1870>
  462f28:	mov	x2, x20
  462f2c:	mov	x3, x26
  462f30:	mov	x1, x0
  462f34:	mov	w0, w28
  462f38:	bl	462a00 <_obstack_memory_used@@Base+0x15b8>
  462f3c:	ldrb	w20, [sp, #233]
  462f40:	mov	x28, x0
  462f44:	mov	x1, #0x0                   	// #0
  462f48:	mov	w0, w20
  462f4c:	bl	462cb8 <_obstack_memory_used@@Base+0x1870>
  462f50:	mov	x2, x28
  462f54:	mov	x3, x25
  462f58:	mov	x1, x0
  462f5c:	mov	w0, w20
  462f60:	bl	462a00 <_obstack_memory_used@@Base+0x15b8>
  462f64:	ldrb	w20, [sp, #233]
  462f68:	mov	x28, x0
  462f6c:	mov	x1, #0x0                   	// #0
  462f70:	mov	w0, w20
  462f74:	bl	462cb8 <_obstack_memory_used@@Base+0x1870>
  462f78:	mov	x3, x24
  462f7c:	mov	x1, x0
  462f80:	mov	x2, x28
  462f84:	mov	w0, w20
  462f88:	bl	462a00 <_obstack_memory_used@@Base+0x15b8>
  462f8c:	mov	x20, x0
  462f90:	mov	w3, #0x0                   	// #0
  462f94:	mov	x0, #0x0                   	// #0
  462f98:	ldrb	w4, [x20], #1
  462f9c:	and	x1, x4, #0x7f
  462fa0:	lsl	x1, x1, x3
  462fa4:	add	w3, w3, #0x7
  462fa8:	orr	x0, x0, x1
  462fac:	tbnz	w4, #7, 462f98 <_obstack_memory_used@@Base+0x1b50>
  462fb0:	ldr	x3, [sp, #168]
  462fb4:	ldr	x1, [sp, #192]
  462fb8:	add	x1, x1, x3
  462fbc:	cmp	x1, x23
  462fc0:	b.hi	462fe0 <_obstack_memory_used@@Base+0x1b98>  // b.pmore
  462fc4:	ldr	x3, [sp, #176]
  462fc8:	add	x1, x1, x3
  462fcc:	cmp	x1, x23
  462fd0:	b.hi	46305c <_obstack_memory_used@@Base+0x1c14>  // b.pmore
  462fd4:	ldr	x0, [sp, #224]
  462fd8:	cmp	x0, x20
  462fdc:	b.hi	462f18 <_obstack_memory_used@@Base+0x1ad0>  // b.pmore
  462fe0:	tbz	w22, #0, 46309c <_obstack_memory_used@@Base+0x1c54>
  462fe4:	mov	w24, #0x0                   	// #0
  462fe8:	mov	x26, #0x0                   	// #0
  462fec:	mov	x23, #0x0                   	// #0
  462ff0:	ldr	x0, [sp, #104]
  462ff4:	cmp	x0, #0x1
  462ff8:	mov	w0, #0x6                   	// #6
  462ffc:	b.hi	463080 <_obstack_memory_used@@Base+0x1c38>  // b.pmore
  463000:	ldr	x2, [sp, #112]
  463004:	stur	w24, [x21, #-36]
  463008:	ldr	x1, [sp, #160]
  46300c:	stp	x23, x2, [x21, #-32]
  463010:	stp	x26, x1, [x21, #-16]
  463014:	b	463080 <_obstack_memory_used@@Base+0x1c38>
  463018:	ldur	w24, [x3, #-36]
  46301c:	ldur	x0, [x3, #-24]
  463020:	str	x0, [sp, #112]
  463024:	tbnz	w24, #31, 4630b0 <_obstack_memory_used@@Base+0x1c68>
  463028:	mov	x2, x21
  46302c:	mov	x0, x19
  463030:	mov	w1, #0x0                   	// #0
  463034:	bl	46fbd8 <_obstack_memory_used@@Base+0xe790>
  463038:	sxtw	x2, w24
  46303c:	mov	x0, x19
  463040:	mov	w1, #0x1                   	// #1
  463044:	bl	46fbd8 <_obstack_memory_used@@Base+0xe790>
  463048:	mov	x0, x19
  46304c:	mov	x1, x26
  463050:	bl	46fc50 <_obstack_memory_used@@Base+0xe808>
  463054:	mov	w0, #0x7                   	// #7
  463058:	b	463080 <_obstack_memory_used@@Base+0x1c38>
  46305c:	ldr	x26, [sp, #184]
  463060:	cbz	x26, 46307c <_obstack_memory_used@@Base+0x1c34>
  463064:	ldr	x1, [sp, #200]
  463068:	add	x26, x26, x1
  46306c:	cbnz	x0, 4630e8 <_obstack_memory_used@@Base+0x1ca0>
  463070:	cbz	x26, 46307c <_obstack_memory_used@@Base+0x1c34>
  463074:	and	w24, w22, #0x1
  463078:	tbz	w22, #0, 463028 <_obstack_memory_used@@Base+0x1be0>
  46307c:	mov	w0, #0x8                   	// #8
  463080:	ldp	x19, x20, [sp, #16]
  463084:	ldp	x21, x22, [sp, #32]
  463088:	ldp	x23, x24, [sp, #48]
  46308c:	ldp	x25, x26, [sp, #64]
  463090:	ldp	x27, x28, [sp, #80]
  463094:	ldp	x29, x30, [sp], #240
  463098:	ret
  46309c:	tbnz	w22, #3, 4630ac <_obstack_memory_used@@Base+0x1c64>
  4630a0:	ldr	x0, [sp, #104]
  4630a4:	cmp	x0, #0x1
  4630a8:	b.ls	462e90 <_obstack_memory_used@@Base+0x1a48>  // b.plast
  4630ac:	bl	463420 <_obstack_memory_used@@Base+0x1fd8>
  4630b0:	ldr	x1, [sp, #112]
  4630b4:	add	x2, sp, #0xc0
  4630b8:	mov	x0, x19
  4630bc:	bl	462d20 <_obstack_memory_used@@Base+0x18d8>
  4630c0:	ldrb	w0, [sp, #232]
  4630c4:	mov	x1, x19
  4630c8:	bl	462cb8 <_obstack_memory_used@@Base+0x1870>
  4630cc:	mov	x2, x0
  4630d0:	ldrb	w0, [sp, #232]
  4630d4:	mov	x1, x19
  4630d8:	str	x2, [sp, #208]
  4630dc:	bl	462cb8 <_obstack_memory_used@@Base+0x1870>
  4630e0:	stur	x0, [x21, #-16]
  4630e4:	b	463028 <_obstack_memory_used@@Base+0x1be0>
  4630e8:	ldr	x4, [sp, #224]
  4630ec:	sub	x0, x0, #0x1
  4630f0:	add	x23, x4, x0
  4630f4:	cbz	x26, 46307c <_obstack_memory_used@@Base+0x1c34>
  4630f8:	cbz	x23, 463074 <_obstack_memory_used@@Base+0x1c2c>
  4630fc:	and	w0, w22, #0x8
  463100:	str	w0, [sp, #132]
  463104:	tbnz	w22, #3, 4632b4 <_obstack_memory_used@@Base+0x1e6c>
  463108:	ldr	x0, [sp, #104]
  46310c:	adrp	x6, 4a3000 <_obstack_memory_used@@Base+0x41bb8>
  463110:	cmp	x0, #0x1
  463114:	ldr	x6, [x6, #3976]
  463118:	b.ls	4632c0 <_obstack_memory_used@@Base+0x1e78>  // b.plast
  46311c:	add	x28, sp, #0xa0
  463120:	mov	x5, #0x1                   	// #1
  463124:	nop
  463128:	mov	x25, x23
  46312c:	mov	x24, #0x0                   	// #0
  463130:	mov	w1, #0x0                   	// #0
  463134:	nop
  463138:	ldrb	w2, [x25], #1
  46313c:	and	x0, x2, #0x7f
  463140:	lsl	x0, x0, x1
  463144:	add	w1, w1, #0x7
  463148:	orr	x24, x24, x0
  46314c:	tbnz	w2, #7, 463138 <_obstack_memory_used@@Base+0x1cf0>
  463150:	cmp	w1, #0x3f
  463154:	b.hi	46316c <_obstack_memory_used@@Base+0x1d24>  // b.pmore
  463158:	lsl	x0, x5, x1
  46315c:	neg	x0, x0
  463160:	orr	x0, x24, x0
  463164:	tst	x2, #0x40
  463168:	csel	x24, x0, x24, ne  // ne = any
  46316c:	mov	x8, x25
  463170:	mov	x20, #0x0                   	// #0
  463174:	mov	w1, #0x0                   	// #0
  463178:	ldrb	w2, [x8], #1
  46317c:	and	x0, x2, #0x7f
  463180:	lsl	x0, x0, x1
  463184:	add	w1, w1, #0x7
  463188:	orr	x20, x20, x0
  46318c:	tbnz	w2, #7, 463178 <_obstack_memory_used@@Base+0x1d30>
  463190:	cmp	w1, #0x3f
  463194:	b.hi	4631ac <_obstack_memory_used@@Base+0x1d64>  // b.pmore
  463198:	lsl	x0, x5, x1
  46319c:	neg	x0, x0
  4631a0:	orr	x0, x20, x0
  4631a4:	tst	x2, #0x40
  4631a8:	csel	x20, x0, x20, ne  // ne = any
  4631ac:	cmp	x24, #0x0
  4631b0:	cbz	x24, 463274 <_obstack_memory_used@@Base+0x1e2c>
  4631b4:	b.gt	463218 <_obstack_memory_used@@Base+0x1dd0>
  4631b8:	ldr	w0, [sp, #132]
  4631bc:	cmp	w0, #0x0
  4631c0:	ldr	w0, [sp, #128]
  4631c4:	ccmp	w0, #0x0, #0x4, eq  // eq = none
  4631c8:	ccmp	x6, #0x0, #0x4, ne  // ne = any
  4631cc:	b.ne	46327c <_obstack_memory_used@@Base+0x1e34>  // b.any
  4631d0:	ldr	x0, [sp, #216]
  4631d4:	mvn	x8, x24
  4631d8:	mov	x9, #0x0                   	// #0
  4631dc:	mov	w1, #0x0                   	// #0
  4631e0:	add	x8, x0, x8
  4631e4:	nop
  4631e8:	ldrb	w2, [x8], #1
  4631ec:	and	x0, x2, #0x7f
  4631f0:	lsl	x0, x0, x1
  4631f4:	add	w1, w1, #0x7
  4631f8:	orr	x9, x9, x0
  4631fc:	tbnz	w2, #7, 4631e8 <_obstack_memory_used@@Base+0x1da0>
  463200:	cmp	x9, #0x0
  463204:	cset	w0, eq  // eq = none
  463208:	cbnz	w0, 463254 <_obstack_memory_used@@Base+0x1e0c>
  46320c:	cbz	x20, 4632ac <_obstack_memory_used@@Base+0x1e64>
  463210:	add	x23, x25, x20
  463214:	b	463128 <_obstack_memory_used@@Base+0x1ce0>
  463218:	ldr	x0, [sp, #120]
  46321c:	mov	x1, x24
  463220:	str	x6, [sp, #136]
  463224:	bl	462b60 <_obstack_memory_used@@Base+0x1718>
  463228:	cbz	x0, 463254 <_obstack_memory_used@@Base+0x1e0c>
  46322c:	ldr	x6, [sp, #136]
  463230:	mov	x5, #0x1                   	// #1
  463234:	cbz	x6, 46320c <_obstack_memory_used@@Base+0x1dc4>
  463238:	mov	x1, x6
  46323c:	mov	x2, x28
  463240:	bl	462978 <_obstack_memory_used@@Base+0x1530>
  463244:	tst	w0, #0xff
  463248:	mov	x5, #0x1                   	// #1
  46324c:	ldr	x6, [sp, #136]
  463250:	b.eq	46320c <_obstack_memory_used@@Base+0x1dc4>  // b.none
  463254:	tbnz	w22, #0, 462ff0 <_obstack_memory_used@@Base+0x1ba8>
  463258:	ldr	w0, [sp, #132]
  46325c:	cbnz	w0, 46326c <_obstack_memory_used@@Base+0x1e24>
  463260:	ldr	x0, [sp, #104]
  463264:	cmp	x0, #0x1
  463268:	b.ls	463024 <_obstack_memory_used@@Base+0x1bdc>  // b.plast
  46326c:	tbz	w24, #31, 463028 <_obstack_memory_used@@Base+0x1be0>
  463270:	bl	463470 <_obstack_memory_used@@Base+0x2028>
  463274:	mov	w27, #0x1                   	// #1
  463278:	b	46320c <_obstack_memory_used@@Base+0x1dc4>
  46327c:	ldr	x0, [sp, #120]
  463280:	mov	x1, x6
  463284:	ldr	x2, [sp, #160]
  463288:	mov	x3, x24
  46328c:	str	x6, [sp, #136]
  463290:	bl	462c20 <_obstack_memory_used@@Base+0x17d8>
  463294:	and	w0, w0, #0xff
  463298:	eor	w0, w0, #0x1
  46329c:	mov	x5, #0x1                   	// #1
  4632a0:	ldr	x6, [sp, #136]
  4632a4:	cbz	w0, 46320c <_obstack_memory_used@@Base+0x1dc4>
  4632a8:	b	463254 <_obstack_memory_used@@Base+0x1e0c>
  4632ac:	cbnz	w27, 463074 <_obstack_memory_used@@Base+0x1c2c>
  4632b0:	b	46307c <_obstack_memory_used@@Base+0x1c34>
  4632b4:	adrp	x6, 4a3000 <_obstack_memory_used@@Base+0x41bb8>
  4632b8:	ldr	x6, [x6, #3952]
  4632bc:	b	46311c <_obstack_memory_used@@Base+0x1cd4>
  4632c0:	mov	x0, x21
  4632c4:	ldr	x1, [x0], #32
  4632c8:	tbz	w1, #0, 4632d0 <_obstack_memory_used@@Base+0x1e88>
  4632cc:	ldur	x0, [x21, #-80]
  4632d0:	ldur	x6, [x0, #-112]
  4632d4:	str	x0, [sp, #160]
  4632d8:	b	46311c <_obstack_memory_used@@Base+0x1cd4>
  4632dc:	bl	4636d8 <_obstack_memory_used@@Base+0x2290>
  4632e0:	bl	463420 <_obstack_memory_used@@Base+0x1fd8>
  4632e4:	nop
  4632e8:	stp	x29, x30, [sp, #-112]!
  4632ec:	mov	x29, sp
  4632f0:	stp	x19, x20, [sp, #16]
  4632f4:	mov	x19, x0
  4632f8:	stp	x21, x22, [sp, #32]
  4632fc:	str	x23, [sp, #48]
  463300:	bl	4636d8 <_obstack_memory_used@@Base+0x2290>
  463304:	ldp	x0, x21, [x19, #-64]
  463308:	ldur	x1, [x19, #-16]
  46330c:	str	x1, [sp, #80]
  463310:	ldur	w20, [x19, #-36]
  463314:	ldur	x19, [x19, #-24]
  463318:	bl	463430 <_obstack_memory_used@@Base+0x1fe8>
  46331c:	bl	4636d8 <_obstack_memory_used@@Base+0x2290>
  463320:	bl	463848 <_obstack_memory_used@@Base+0x2400>
  463324:	ldr	x22, [x0]
  463328:	ldr	x0, [x22, #80]
  46332c:	tbz	w0, #0, 4633b0 <_obstack_memory_used@@Base+0x1f68>
  463330:	ldr	x22, [x22]
  463334:	add	x23, sp, #0x40
  463338:	mov	x1, x19
  46333c:	mov	x2, x23
  463340:	mov	x0, #0x0                   	// #0
  463344:	bl	462d20 <_obstack_memory_used@@Base+0x18d8>
  463348:	ldur	x1, [x22, #-112]
  46334c:	sxtw	x20, w20
  463350:	mov	x3, x20
  463354:	mov	x2, x22
  463358:	mov	x0, x23
  46335c:	bl	462c20 <_obstack_memory_used@@Base+0x17d8>
  463360:	tst	w0, #0xff
  463364:	b.ne	4633cc <_obstack_memory_used@@Base+0x1f84>  // b.any
  463368:	adrp	x19, 4a3000 <_obstack_memory_used@@Base+0x41bb8>
  46336c:	mov	x3, x20
  463370:	mov	x0, x23
  463374:	mov	x2, #0x0                   	// #0
  463378:	ldr	x1, [x19, #4024]
  46337c:	bl	462c20 <_obstack_memory_used@@Base+0x17d8>
  463380:	tst	w0, #0xff
  463384:	b.eq	4633d0 <_obstack_memory_used@@Base+0x1f88>  // b.none
  463388:	mov	x0, #0x8                   	// #8
  46338c:	bl	462730 <_obstack_memory_used@@Base+0x12e8>
  463390:	adrp	x3, 4a3000 <_obstack_memory_used@@Base+0x41bb8>
  463394:	adrp	x2, 4a3000 <_obstack_memory_used@@Base+0x41bb8>
  463398:	ldr	x1, [x19, #4024]
  46339c:	ldr	x3, [x3, #3944]
  4633a0:	ldr	x2, [x2, #3936]
  4633a4:	add	x3, x3, #0x10
  4633a8:	str	x3, [x0]
  4633ac:	bl	463548 <_obstack_memory_used@@Base+0x2100>
  4633b0:	add	x22, x22, #0x70
  4633b4:	b	463334 <_obstack_memory_used@@Base+0x1eec>
  4633b8:	mov	x19, x0
  4633bc:	bl	463778 <_obstack_memory_used@@Base+0x2330>
  4633c0:	bl	463778 <_obstack_memory_used@@Base+0x2330>
  4633c4:	mov	x0, x19
  4633c8:	bl	470048 <_obstack_memory_used@@Base+0xec00>
  4633cc:	bl	4635a8 <_obstack_memory_used@@Base+0x2160>
  4633d0:	mov	x0, x21
  4633d4:	bl	4633d8 <_obstack_memory_used@@Base+0x1f90>
  4633d8:	stp	x29, x30, [sp, #-16]!
  4633dc:	mov	x29, sp
  4633e0:	blr	x0
  4633e4:	bl	4027f0 <abort@plt>
  4633e8:	bl	4636d8 <_obstack_memory_used@@Base+0x2290>
  4633ec:	bl	4027f0 <abort@plt>
  4633f0:	adrp	x1, 4a3000 <_obstack_memory_used@@Base+0x41bb8>
  4633f4:	mov	x2, x0
  4633f8:	ldr	x1, [x1, #3888]
  4633fc:	ldaxr	x0, [x1]
  463400:	stlxr	w3, x2, [x1]
  463404:	cbnz	w3, 4633fc <_obstack_memory_used@@Base+0x1fb4>
  463408:	ret
  46340c:	nop
  463410:	adrp	x0, 4a3000 <_obstack_memory_used@@Base+0x41bb8>
  463414:	ldr	x0, [x0, #3888]
  463418:	ldar	x0, [x0]
  46341c:	ret
  463420:	stp	x29, x30, [sp, #-16]!
  463424:	mov	x29, sp
  463428:	bl	463410 <_obstack_memory_used@@Base+0x1fc8>
  46342c:	bl	4633d8 <_obstack_memory_used@@Base+0x1f90>
  463430:	stp	x29, x30, [sp, #-16]!
  463434:	mov	x29, sp
  463438:	blr	x0
  46343c:	bl	463420 <_obstack_memory_used@@Base+0x1fd8>
  463440:	adrp	x1, 4a3000 <_obstack_memory_used@@Base+0x41bb8>
  463444:	mov	x2, x0
  463448:	ldr	x1, [x1, #3968]
  46344c:	ldaxr	x0, [x1]
  463450:	stlxr	w3, x2, [x1]
  463454:	cbnz	w3, 46344c <_obstack_memory_used@@Base+0x2004>
  463458:	ret
  46345c:	nop
  463460:	adrp	x0, 4a3000 <_obstack_memory_used@@Base+0x41bb8>
  463464:	ldr	x0, [x0, #3968]
  463468:	ldar	x0, [x0]
  46346c:	ret
  463470:	stp	x29, x30, [sp, #-16]!
  463474:	mov	x29, sp
  463478:	bl	463460 <_obstack_memory_used@@Base+0x2018>
  46347c:	bl	463430 <_obstack_memory_used@@Base+0x1fe8>
  463480:	stp	x29, x30, [sp, #-32]!
  463484:	cmp	w0, #0x1
  463488:	mov	x29, sp
  46348c:	b.hi	4634d8 <_obstack_memory_used@@Base+0x2090>  // b.pmore
  463490:	sub	x0, x1, #0x60
  463494:	ldaxr	w2, [x0]
  463498:	sub	w2, w2, #0x1
  46349c:	stlxr	w3, w2, [x0]
  4634a0:	cbnz	w3, 463494 <_obstack_memory_used@@Base+0x204c>
  4634a4:	cbnz	w2, 4634d0 <_obstack_memory_used@@Base+0x2088>
  4634a8:	ldur	x2, [x1, #-72]
  4634ac:	str	x19, [sp, #16]
  4634b0:	add	x19, x1, #0x20
  4634b4:	cbz	x2, 4634c0 <_obstack_memory_used@@Base+0x2078>
  4634b8:	mov	x0, x19
  4634bc:	blr	x2
  4634c0:	mov	x0, x19
  4634c4:	ldr	x19, [sp, #16]
  4634c8:	ldp	x29, x30, [sp], #32
  4634cc:	b	462798 <_obstack_memory_used@@Base+0x1350>
  4634d0:	ldp	x29, x30, [sp], #32
  4634d4:	ret
  4634d8:	ldur	x0, [x1, #-56]
  4634dc:	str	x19, [sp, #16]
  4634e0:	bl	4633d8 <_obstack_memory_used@@Base+0x1f90>
  4634e4:	nop
  4634e8:	stp	x29, x30, [sp, #-32]!
  4634ec:	mov	x29, sp
  4634f0:	stp	x19, x20, [sp, #16]
  4634f4:	mov	x19, x0
  4634f8:	sub	x20, x0, #0x80
  4634fc:	stur	wzr, [x0, #-128]
  463500:	stp	x1, x2, [x0, #-112]
  463504:	bl	463460 <_obstack_memory_used@@Base+0x2018>
  463508:	stur	x0, [x19, #-96]
  46350c:	bl	463410 <_obstack_memory_used@@Base+0x1fc8>
  463510:	mov	x3, x0
  463514:	mov	x2, #0x2b00                	// #11008
  463518:	adrp	x1, 463000 <_obstack_memory_used@@Base+0x1bb8>
  46351c:	movk	x2, #0x432b, lsl #16
  463520:	add	x1, x1, #0x480
  463524:	movk	x2, #0x5543, lsl #32
  463528:	stur	x3, [x19, #-88]
  46352c:	movk	x2, #0x474e, lsl #48
  463530:	stp	x2, x1, [x19, #-32]
  463534:	mov	x0, x20
  463538:	ldp	x19, x20, [sp, #16]
  46353c:	ldp	x29, x30, [sp], #32
  463540:	ret
  463544:	nop
  463548:	stp	x29, x30, [sp, #-48]!
  46354c:	mov	x29, sp
  463550:	stp	x19, x20, [sp, #16]
  463554:	mov	x19, x0
  463558:	mov	x20, x1
  46355c:	str	x21, [sp, #32]
  463560:	mov	x21, x2
  463564:	bl	463870 <_obstack_memory_used@@Base+0x2428>
  463568:	mov	x3, x0
  46356c:	mov	x2, x21
  463570:	mov	x1, x20
  463574:	mov	x0, x19
  463578:	ldr	w4, [x3, #8]
  46357c:	add	w4, w4, #0x1
  463580:	str	w4, [x3, #8]
  463584:	bl	4634e8 <_obstack_memory_used@@Base+0x20a0>
  463588:	mov	x19, x0
  46358c:	mov	w0, #0x1                   	// #1
  463590:	str	w0, [x19], #96
  463594:	mov	x0, x19
  463598:	bl	46fdb8 <_obstack_memory_used@@Base+0xe970>
  46359c:	mov	x0, x19
  4635a0:	bl	4636d8 <_obstack_memory_used@@Base+0x2290>
  4635a4:	bl	463420 <_obstack_memory_used@@Base+0x1fd8>
  4635a8:	stp	x29, x30, [sp, #-32]!
  4635ac:	mov	x29, sp
  4635b0:	str	x19, [sp, #16]
  4635b4:	bl	463870 <_obstack_memory_used@@Base+0x2428>
  4635b8:	ldr	w2, [x0, #8]
  4635bc:	ldr	x1, [x0]
  4635c0:	add	w2, w2, #0x1
  4635c4:	str	w2, [x0, #8]
  4635c8:	cbz	x1, 463604 <_obstack_memory_used@@Base+0x21bc>
  4635cc:	mov	x3, #0xd500                	// #54528
  4635d0:	ldr	x2, [x1, #80]
  4635d4:	movk	x3, #0xbcd4, lsl #16
  4635d8:	movk	x3, #0xaabc, lsl #32
  4635dc:	movk	x3, #0xb8b1, lsl #48
  4635e0:	add	x2, x2, x3
  4635e4:	cmp	x2, #0x1
  4635e8:	b.ls	463608 <_obstack_memory_used@@Base+0x21c0>  // b.plast
  4635ec:	str	xzr, [x0]
  4635f0:	add	x19, x1, #0x50
  4635f4:	mov	x0, x19
  4635f8:	bl	470158 <_obstack_memory_used@@Base+0xed10>
  4635fc:	mov	x0, x19
  463600:	bl	4636d8 <_obstack_memory_used@@Base+0x2290>
  463604:	bl	463420 <_obstack_memory_used@@Base+0x1fd8>
  463608:	ldr	w0, [x1, #40]
  46360c:	neg	w0, w0
  463610:	str	w0, [x1, #40]
  463614:	b	4635f0 <_obstack_memory_used@@Base+0x21a8>
  463618:	adrp	x1, 4a5000 <__environ@@GLIBC_2.17+0xa68>
  46361c:	mov	x2, x0
  463620:	add	x1, x1, #0xb38
  463624:	ldaxr	x0, [x1]
  463628:	stlxr	w3, x2, [x1]
  46362c:	cbnz	w3, 463624 <_obstack_memory_used@@Base+0x21dc>
  463630:	ret
  463634:	nop
  463638:	adrp	x0, 4a5000 <__environ@@GLIBC_2.17+0xa68>
  46363c:	add	x0, x0, #0xb38
  463640:	ldar	x0, [x0]
  463644:	ret
  463648:	stp	x29, x30, [sp, #-16]!
  46364c:	adrp	x1, 481000 <_obstack_memory_used@@Base+0x1fbb8>
  463650:	add	x1, x1, #0xf50
  463654:	mov	x2, #0x1b                  	// #27
  463658:	mov	x29, sp
  46365c:	mov	w0, #0x2                   	// #2
  463660:	bl	4027d0 <write@plt>
  463664:	bl	463420 <_obstack_memory_used@@Base+0x1fd8>
  463668:	stp	x29, x30, [sp, #-16]!
  46366c:	adrp	x1, 481000 <_obstack_memory_used@@Base+0x1fbb8>
  463670:	add	x1, x1, #0xf70
  463674:	mov	x2, #0x1e                  	// #30
  463678:	mov	x29, sp
  46367c:	mov	w0, #0x2                   	// #2
  463680:	bl	4027d0 <write@plt>
  463684:	bl	463420 <_obstack_memory_used@@Base+0x1fd8>
  463688:	stp	x29, x30, [sp, #-32]!
  46368c:	mov	x29, sp
  463690:	str	x19, [sp, #16]
  463694:	cbz	x0, 4636c0 <_obstack_memory_used@@Base+0x2278>
  463698:	mov	x19, x0
  46369c:	bl	4636d8 <_obstack_memory_used@@Base+0x2290>
  4636a0:	mov	x1, #0xd500                	// #54528
  4636a4:	movk	x1, #0xbcd4, lsl #16
  4636a8:	ldr	x0, [x19]
  4636ac:	movk	x1, #0xaabc, lsl #32
  4636b0:	movk	x1, #0xb8b1, lsl #48
  4636b4:	add	x0, x0, x1
  4636b8:	cmp	x0, #0x1
  4636bc:	b.ls	4636c4 <_obstack_memory_used@@Base+0x227c>  // b.plast
  4636c0:	bl	463420 <_obstack_memory_used@@Base+0x1fd8>
  4636c4:	ldur	x0, [x19, #-56]
  4636c8:	bl	4633d8 <_obstack_memory_used@@Base+0x1f90>
  4636cc:	nop
  4636d0:	ldur	x0, [x0, #-8]
  4636d4:	ret
  4636d8:	stp	x29, x30, [sp, #-32]!
  4636dc:	mov	x29, sp
  4636e0:	str	x19, [sp, #16]
  4636e4:	mov	x19, x0
  4636e8:	bl	463870 <_obstack_memory_used@@Base+0x2428>
  4636ec:	mov	x1, x0
  4636f0:	mov	x2, x19
  4636f4:	mov	x4, #0xd500                	// #54528
  4636f8:	movk	x4, #0xbcd4, lsl #16
  4636fc:	movk	x4, #0xaabc, lsl #32
  463700:	ldr	x3, [x2], #-80
  463704:	movk	x4, #0xb8b1, lsl #48
  463708:	ldr	x0, [x0]
  46370c:	add	x3, x3, x4
  463710:	cmp	x3, #0x1
  463714:	b.ls	46372c <_obstack_memory_used@@Base+0x22e4>  // b.plast
  463718:	cbnz	x0, 463770 <_obstack_memory_used@@Base+0x2328>
  46371c:	str	x2, [x1]
  463720:	ldr	x19, [sp, #16]
  463724:	ldp	x29, x30, [sp], #32
  463728:	ret
  46372c:	ldur	w3, [x19, #-40]
  463730:	mov	w5, #0x1                   	// #1
  463734:	ldr	w4, [x1, #8]
  463738:	cmp	w3, #0x0
  46373c:	sub	w5, w5, w3
  463740:	csinc	w3, w5, w3, lt  // lt = tstop
  463744:	stur	w3, [x19, #-40]
  463748:	sub	w3, w4, #0x1
  46374c:	str	w3, [x1, #8]
  463750:	cmp	x0, x2
  463754:	b.eq	463760 <_obstack_memory_used@@Base+0x2318>  // b.none
  463758:	stur	x0, [x19, #-48]
  46375c:	str	x2, [x1]
  463760:	ldur	x0, [x19, #-8]
  463764:	ldr	x19, [sp, #16]
  463768:	ldp	x29, x30, [sp], #32
  46376c:	ret
  463770:	bl	463420 <_obstack_memory_used@@Base+0x1fd8>
  463774:	nop
  463778:	stp	x29, x30, [sp, #-16]!
  46377c:	mov	x29, sp
  463780:	bl	463848 <_obstack_memory_used@@Base+0x2400>
  463784:	ldr	x1, [x0]
  463788:	cbz	x1, 4637c8 <_obstack_memory_used@@Base+0x2380>
  46378c:	mov	x3, #0xd500                	// #54528
  463790:	ldr	x2, [x1, #80]
  463794:	movk	x3, #0xbcd4, lsl #16
  463798:	movk	x3, #0xaabc, lsl #32
  46379c:	movk	x3, #0xb8b1, lsl #48
  4637a0:	add	x2, x2, x3
  4637a4:	cmp	x2, #0x1
  4637a8:	b.hi	4637e8 <_obstack_memory_used@@Base+0x23a0>  // b.pmore
  4637ac:	ldr	w2, [x1, #40]
  4637b0:	tbnz	w2, #31, 4637d0 <_obstack_memory_used@@Base+0x2388>
  4637b4:	subs	w2, w2, #0x1
  4637b8:	b.eq	4637f8 <_obstack_memory_used@@Base+0x23b0>  // b.none
  4637bc:	cmn	w2, #0x1
  4637c0:	b.eq	46380c <_obstack_memory_used@@Base+0x23c4>  // b.none
  4637c4:	str	w2, [x1, #40]
  4637c8:	ldp	x29, x30, [sp], #16
  4637cc:	ret
  4637d0:	adds	w2, w2, #0x1
  4637d4:	b.ne	4637c4 <_obstack_memory_used@@Base+0x237c>  // b.any
  4637d8:	ldr	x3, [x1, #32]
  4637dc:	str	x3, [x0]
  4637e0:	str	w2, [x1, #40]
  4637e4:	b	4637c8 <_obstack_memory_used@@Base+0x2380>
  4637e8:	str	xzr, [x0]
  4637ec:	add	x0, x1, #0x50
  4637f0:	ldp	x29, x30, [sp], #16
  4637f4:	b	470260 <_obstack_memory_used@@Base+0xee18>
  4637f8:	ldr	x2, [x1, #32]
  4637fc:	str	x2, [x0]
  463800:	add	x0, x1, #0x50
  463804:	ldp	x29, x30, [sp], #16
  463808:	b	470260 <_obstack_memory_used@@Base+0xee18>
  46380c:	bl	463420 <_obstack_memory_used@@Base+0x1fd8>
  463810:	stp	x29, x30, [sp, #-16]!
  463814:	mov	x29, sp
  463818:	bl	463870 <_obstack_memory_used@@Base+0x2428>
  46381c:	ldr	w0, [x0, #8]
  463820:	ldp	x29, x30, [sp], #16
  463824:	cmp	w0, #0x0
  463828:	cset	w0, ne  // ne = any
  46382c:	ret
  463830:	stp	x29, x30, [sp, #-16]!
  463834:	mov	x29, sp
  463838:	bl	463870 <_obstack_memory_used@@Base+0x2428>
  46383c:	ldr	w0, [x0, #8]
  463840:	ldp	x29, x30, [sp], #16
  463844:	ret
  463848:	stp	x29, x30, [sp, #-16]!
  46384c:	mrs	x1, tpidr_el0
  463850:	movz	x0, #0x0, lsl #16
  463854:	movk	x0, #0x10
  463858:	nop
  46385c:	nop
  463860:	mov	x29, sp
  463864:	add	x0, x1, x0
  463868:	ldp	x29, x30, [sp], #16
  46386c:	ret
  463870:	stp	x29, x30, [sp, #-16]!
  463874:	mrs	x1, tpidr_el0
  463878:	movz	x0, #0x0, lsl #16
  46387c:	movk	x0, #0x10
  463880:	nop
  463884:	nop
  463888:	mov	x29, sp
  46388c:	add	x0, x1, x0
  463890:	ldp	x29, x30, [sp], #16
  463894:	ret
  463898:	stp	x29, x30, [sp, #-64]!
  46389c:	adrp	x0, 4a5000 <__environ@@GLIBC_2.17+0xa68>
  4638a0:	mov	x29, sp
  4638a4:	ldrb	w1, [x0, #2880]
  4638a8:	cbnz	w1, 463990 <_obstack_memory_used@@Base+0x2548>
  4638ac:	mov	w1, #0x1                   	// #1
  4638b0:	strb	w1, [x0, #2880]
  4638b4:	bl	46d9d0 <_obstack_memory_used@@Base+0xc588>
  4638b8:	cbz	x0, 463964 <_obstack_memory_used@@Base+0x251c>
  4638bc:	stp	x19, x20, [sp, #16]
  4638c0:	mov	w4, #0xffffffff            	// #-1
  4638c4:	add	x3, sp, #0x3c
  4638c8:	ldr	x19, [x0, #8]
  4638cc:	stp	x21, x22, [sp, #32]
  4638d0:	adrp	x21, 4a3000 <_obstack_memory_used@@Base+0x41bb8>
  4638d4:	mov	x2, #0x0                   	// #0
  4638d8:	mov	x1, #0x0                   	// #0
  4638dc:	ldrb	w0, [x19]
  4638e0:	str	w4, [sp, #60]
  4638e4:	cmp	w0, #0x2a
  4638e8:	cinc	x19, x19, eq  // eq = none
  4638ec:	mov	x0, x19
  4638f0:	bl	46d808 <_obstack_memory_used@@Base+0xc3c0>
  4638f4:	mov	x20, x0
  4638f8:	ldr	x22, [x21, #3912]
  4638fc:	mov	x1, #0x1                   	// #1
  463900:	adrp	x0, 481000 <_obstack_memory_used@@Base+0x1fbb8>
  463904:	mov	x2, #0x30                  	// #48
  463908:	add	x0, x0, #0xfb0
  46390c:	ldr	x3, [x22]
  463910:	bl	402950 <fwrite@plt>
  463914:	ldr	w0, [sp, #60]
  463918:	ldr	x1, [x22]
  46391c:	cbz	w0, 463958 <_obstack_memory_used@@Base+0x2510>
  463920:	mov	x0, x19
  463924:	bl	402500 <fputs@plt>
  463928:	ldr	x3, [x21, #3912]
  46392c:	adrp	x0, 481000 <_obstack_memory_used@@Base+0x1fbb8>
  463930:	mov	x2, #0x2                   	// #2
  463934:	add	x0, x0, #0xfe8
  463938:	mov	x1, #0x1                   	// #1
  46393c:	ldr	x3, [x3]
  463940:	bl	402950 <fwrite@plt>
  463944:	ldr	w0, [sp, #60]
  463948:	cbnz	w0, 463954 <_obstack_memory_used@@Base+0x250c>
  46394c:	mov	x0, x20
  463950:	bl	402910 <free@plt>
  463954:	bl	4635a8 <_obstack_memory_used@@Base+0x2160>
  463958:	mov	x0, x20
  46395c:	bl	402500 <fputs@plt>
  463960:	b	463928 <_obstack_memory_used@@Base+0x24e0>
  463964:	adrp	x3, 4a3000 <_obstack_memory_used@@Base+0x41bb8>
  463968:	mov	x2, #0x2d                  	// #45
  46396c:	mov	x1, #0x1                   	// #1
  463970:	adrp	x0, 481000 <_obstack_memory_used@@Base+0x1fbb8>
  463974:	ldr	x3, [x3, #3912]
  463978:	add	x0, x0, #0xff0
  46397c:	ldr	x3, [x3]
  463980:	bl	402950 <fwrite@plt>
  463984:	stp	x19, x20, [sp, #16]
  463988:	stp	x21, x22, [sp, #32]
  46398c:	bl	4027f0 <abort@plt>
  463990:	adrp	x3, 4a3000 <_obstack_memory_used@@Base+0x41bb8>
  463994:	mov	x2, #0x1d                  	// #29
  463998:	mov	x1, #0x1                   	// #1
  46399c:	adrp	x0, 481000 <_obstack_memory_used@@Base+0x1fbb8>
  4639a0:	ldr	x3, [x3, #3912]
  4639a4:	add	x0, x0, #0xf90
  4639a8:	stp	x19, x20, [sp, #16]
  4639ac:	ldr	x3, [x3]
  4639b0:	stp	x21, x22, [sp, #32]
  4639b4:	bl	402950 <fwrite@plt>
  4639b8:	bl	4027f0 <abort@plt>
  4639bc:	mov	x19, x1
  4639c0:	cmp	x1, #0x1
  4639c4:	b.ne	463a20 <_obstack_memory_used@@Base+0x25d8>  // b.any
  4639c8:	bl	4636d8 <_obstack_memory_used@@Base+0x2290>
  4639cc:	ldr	x1, [x0]
  4639d0:	ldr	x1, [x1, #16]
  4639d4:	blr	x1
  4639d8:	mov	x20, x0
  4639dc:	ldr	x3, [x21, #3912]
  4639e0:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x20bb8>
  4639e4:	mov	x1, x19
  4639e8:	add	x0, x0, #0x20
  4639ec:	mov	x2, #0xb                   	// #11
  4639f0:	ldr	x3, [x3]
  4639f4:	bl	402950 <fwrite@plt>
  4639f8:	ldr	x1, [x21, #3912]
  4639fc:	mov	x0, x20
  463a00:	ldr	x1, [x1]
  463a04:	bl	402500 <fputs@plt>
  463a08:	ldr	x21, [x21, #3912]
  463a0c:	mov	w0, #0xa                   	// #10
  463a10:	ldr	x1, [x21]
  463a14:	bl	4025e0 <fputc@plt>
  463a18:	bl	463778 <_obstack_memory_used@@Base+0x2330>
  463a1c:	bl	4027f0 <abort@plt>
  463a20:	bl	4636d8 <_obstack_memory_used@@Base+0x2290>
  463a24:	bl	463778 <_obstack_memory_used@@Base+0x2330>
  463a28:	bl	4027f0 <abort@plt>
  463a2c:	mov	x19, x0
  463a30:	bl	463778 <_obstack_memory_used@@Base+0x2330>
  463a34:	mov	x0, x19
  463a38:	bl	470048 <_obstack_memory_used@@Base+0xec00>
  463a3c:	nop
  463a40:	sub	w5, w1, #0x1
  463a44:	mov	x4, x0
  463a48:	cmp	w5, #0x4f
  463a4c:	b.ls	463a58 <_obstack_memory_used@@Base+0x2610>  // b.plast
  463a50:	mov	x0, #0x0                   	// #0
  463a54:	ret
  463a58:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x20bb8>
  463a5c:	add	x0, x0, #0x2c
  463a60:	ldrb	w0, [x0, w5, uxtw]
  463a64:	adr	x5, 463a70 <_obstack_memory_used@@Base+0x2628>
  463a68:	add	x0, x5, w0, sxtb #2
  463a6c:	br	x0
  463a70:	cbz	x3, 463a50 <_obstack_memory_used@@Base+0x2608>
  463a74:	ldp	w0, w5, [x4, #40]
  463a78:	cmp	w0, w5
  463a7c:	b.ge	463a50 <_obstack_memory_used@@Base+0x2608>  // b.tcont
  463a80:	mov	w5, #0x18                  	// #24
  463a84:	add	w7, w0, #0x1
  463a88:	ldr	x6, [x4, #32]
  463a8c:	smull	x5, w0, w5
  463a90:	add	x0, x6, x5
  463a94:	str	wzr, [x0, #4]
  463a98:	str	w7, [x4, #40]
  463a9c:	str	w1, [x6, x5]
  463aa0:	stp	x2, x3, [x0, #8]
  463aa4:	ret
  463aa8:	cbnz	x2, 463a74 <_obstack_memory_used@@Base+0x262c>
  463aac:	mov	x0, #0x0                   	// #0
  463ab0:	b	463a54 <_obstack_memory_used@@Base+0x260c>
  463ab4:	cmp	x2, #0x0
  463ab8:	ccmp	x3, #0x0, #0x4, ne  // ne = any
  463abc:	b.ne	463a74 <_obstack_memory_used@@Base+0x262c>  // b.any
  463ac0:	mov	x0, #0x0                   	// #0
  463ac4:	b	463a54 <_obstack_memory_used@@Base+0x260c>
  463ac8:	ldr	x3, [x0, #24]
  463acc:	mov	x2, x1
  463ad0:	mov	w4, #0x4f                  	// #79
  463ad4:	ldrb	w1, [x3]
  463ad8:	cmp	w1, #0x52
  463adc:	ccmp	w1, w4, #0x4, ne  // ne = any
  463ae0:	b.ne	463b0c <_obstack_memory_used@@Base+0x26c4>  // b.any
  463ae4:	ldr	w5, [x0, #72]
  463ae8:	cmp	w1, #0x52
  463aec:	mov	w1, #0x20                  	// #32
  463af0:	add	w4, w5, #0x3
  463af4:	b.eq	463b14 <_obstack_memory_used@@Base+0x26cc>  // b.none
  463af8:	add	x3, x3, #0x1
  463afc:	str	x3, [x0, #24]
  463b00:	str	w4, [x0, #72]
  463b04:	mov	x3, #0x0                   	// #0
  463b08:	b	463a40 <_obstack_memory_used@@Base+0x25f8>
  463b0c:	mov	x0, x2
  463b10:	ret
  463b14:	add	w4, w5, #0x2
  463b18:	add	x3, x3, #0x1
  463b1c:	str	x3, [x0, #24]
  463b20:	mov	w1, #0x1f                  	// #31
  463b24:	str	w4, [x0, #72]
  463b28:	mov	x3, #0x0                   	// #0
  463b2c:	b	463a40 <_obstack_memory_used@@Base+0x25f8>
  463b30:	cbz	x1, 463c10 <_obstack_memory_used@@Base+0x27c8>
  463b34:	stp	x29, x30, [sp, #-32]!
  463b38:	mov	x29, sp
  463b3c:	stp	x19, x20, [sp, #16]
  463b40:	mov	x20, x0
  463b44:	mov	x19, x1
  463b48:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x20bb8>
  463b4c:	add	x0, x0, #0x7c
  463b50:	ldr	w1, [x19]
  463b54:	sub	w1, w1, #0x1
  463b58:	cmp	w1, #0x4f
  463b5c:	b.ls	463b6c <_obstack_memory_used@@Base+0x2724>  // b.plast
  463b60:	ldp	x19, x20, [sp, #16]
  463b64:	ldp	x29, x30, [sp], #32
  463b68:	ret
  463b6c:	ldrb	w1, [x0, w1, uxtw]
  463b70:	adr	x2, 463b7c <_obstack_memory_used@@Base+0x2734>
  463b74:	add	x1, x2, w1, sxtb #2
  463b78:	br	x1
  463b7c:	ldr	x0, [x19, #8]
  463b80:	ldr	w0, [x0]
  463b84:	cmp	w0, #0x5
  463b88:	b.ne	463b98 <_obstack_memory_used@@Base+0x2750>  // b.any
  463b8c:	ldr	w0, [x20, #348]
  463b90:	add	w0, w0, #0x1
  463b94:	str	w0, [x20, #348]
  463b98:	ldr	w0, [x20, #308]
  463b9c:	cmp	w0, #0x800
  463ba0:	b.gt	463b60 <_obstack_memory_used@@Base+0x2718>
  463ba4:	ldr	x1, [x19, #8]
  463ba8:	add	w0, w0, #0x1
  463bac:	str	w0, [x20, #308]
  463bb0:	mov	x0, x20
  463bb4:	bl	463b30 <_obstack_memory_used@@Base+0x26e8>
  463bb8:	ldr	x1, [x19, #16]
  463bbc:	mov	x0, x20
  463bc0:	bl	463b30 <_obstack_memory_used@@Base+0x26e8>
  463bc4:	ldr	w0, [x20, #308]
  463bc8:	sub	w0, w0, #0x1
  463bcc:	str	w0, [x20, #308]
  463bd0:	ldp	x19, x20, [sp, #16]
  463bd4:	ldp	x29, x30, [sp], #32
  463bd8:	ret
  463bdc:	ldr	x19, [x19, #8]
  463be0:	cbnz	x19, 463b50 <_obstack_memory_used@@Base+0x2708>
  463be4:	b	463b60 <_obstack_memory_used@@Base+0x2718>
  463be8:	ldr	x19, [x19, #16]
  463bec:	cbnz	x19, 463b50 <_obstack_memory_used@@Base+0x2708>
  463bf0:	b	463b60 <_obstack_memory_used@@Base+0x2718>
  463bf4:	ldr	w0, [x20, #364]
  463bf8:	add	w0, w0, #0x1
  463bfc:	str	w0, [x20, #364]
  463c00:	ldr	w0, [x20, #308]
  463c04:	cmp	w0, #0x800
  463c08:	b.gt	463b60 <_obstack_memory_used@@Base+0x2718>
  463c0c:	b	463ba4 <_obstack_memory_used@@Base+0x275c>
  463c10:	ret
  463c14:	nop
  463c18:	cbz	x2, 463cb8 <_obstack_memory_used@@Base+0x2870>
  463c1c:	stp	x29, x30, [sp, #-48]!
  463c20:	mov	x29, sp
  463c24:	stp	x19, x20, [sp, #16]
  463c28:	mov	x20, x1
  463c2c:	mov	x19, x0
  463c30:	stp	x21, x22, [sp, #32]
  463c34:	add	x22, x1, x2
  463c38:	ldr	x1, [x0, #256]
  463c3c:	b	463c60 <_obstack_memory_used@@Base+0x2818>
  463c40:	mov	x0, x1
  463c44:	add	x1, x1, #0x1
  463c48:	str	x1, [x19, #256]
  463c4c:	add	x20, x20, #0x1
  463c50:	cmp	x20, x22
  463c54:	strb	w21, [x19, x0]
  463c58:	strb	w21, [x19, #264]
  463c5c:	b.eq	463ca8 <_obstack_memory_used@@Base+0x2860>  // b.none
  463c60:	ldrb	w21, [x20]
  463c64:	cmp	x1, #0xff
  463c68:	b.ne	463c40 <_obstack_memory_used@@Base+0x27f8>  // b.any
  463c6c:	ldp	x3, x2, [x19, #272]
  463c70:	strb	wzr, [x19, #255]
  463c74:	mov	x0, x19
  463c78:	add	x20, x20, #0x1
  463c7c:	blr	x3
  463c80:	ldr	x2, [x19, #320]
  463c84:	mov	x0, #0x0                   	// #0
  463c88:	mov	x1, #0x1                   	// #1
  463c8c:	str	x1, [x19, #256]
  463c90:	add	x2, x2, x1
  463c94:	str	x2, [x19, #320]
  463c98:	strb	w21, [x19, x0]
  463c9c:	cmp	x20, x22
  463ca0:	strb	w21, [x19, #264]
  463ca4:	b.ne	463c60 <_obstack_memory_used@@Base+0x2818>  // b.any
  463ca8:	ldp	x19, x20, [sp, #16]
  463cac:	ldp	x21, x22, [sp, #32]
  463cb0:	ldp	x29, x30, [sp], #48
  463cb4:	ret
  463cb8:	ret
  463cbc:	nop
  463cc0:	ldr	x3, [x0]
  463cc4:	mov	x6, x0
  463cc8:	ldrb	w4, [x3]
  463ccc:	cmp	w4, #0x6e
  463cd0:	b.eq	463d5c <_obstack_memory_used@@Base+0x2914>  // b.none
  463cd4:	sub	w0, w4, #0x30
  463cd8:	and	w0, w0, #0xff
  463cdc:	cmp	w0, #0x9
  463ce0:	b.hi	463d84 <_obstack_memory_used@@Base+0x293c>  // b.pmore
  463ce4:	mov	w9, #0x0                   	// #0
  463ce8:	mov	w8, #0xcccd                	// #52429
  463cec:	add	x3, x3, #0x1
  463cf0:	mov	w0, #0x0                   	// #0
  463cf4:	mov	w7, #0x7fffffff            	// #2147483647
  463cf8:	movk	w8, #0xcccc, lsl #16
  463cfc:	b	463d10 <_obstack_memory_used@@Base+0x28c8>
  463d00:	umull	x1, w1, w8
  463d04:	lsr	x1, x1, #35
  463d08:	cmp	w1, w0
  463d0c:	b.lt	463d54 <_obstack_memory_used@@Base+0x290c>  // b.tstop
  463d10:	str	x3, [x6]
  463d14:	add	w0, w0, w0, lsl #2
  463d18:	add	x3, x3, #0x1
  463d1c:	ldurb	w1, [x3, #-1]
  463d20:	add	w5, w4, w0, lsl #1
  463d24:	sub	w0, w5, #0x30
  463d28:	sub	w2, w1, #0x30
  463d2c:	mov	w4, w1
  463d30:	sub	w1, w7, w2
  463d34:	and	w2, w2, #0xff
  463d38:	cmp	w2, #0x9
  463d3c:	b.ls	463d00 <_obstack_memory_used@@Base+0x28b8>  // b.plast
  463d40:	cmp	w9, #0x0
  463d44:	mov	w1, #0x30                  	// #48
  463d48:	sub	w5, w1, w5
  463d4c:	csel	w0, w5, w0, ne  // ne = any
  463d50:	ret
  463d54:	mov	w0, #0xffffffff            	// #-1
  463d58:	ret
  463d5c:	add	x1, x3, #0x1
  463d60:	str	x1, [x0]
  463d64:	ldrb	w4, [x3, #1]
  463d68:	sub	w0, w4, #0x30
  463d6c:	and	w0, w0, #0xff
  463d70:	cmp	w0, #0x9
  463d74:	b.hi	463d84 <_obstack_memory_used@@Base+0x293c>  // b.pmore
  463d78:	mov	x3, x1
  463d7c:	mov	w9, #0x1                   	// #1
  463d80:	b	463ce8 <_obstack_memory_used@@Base+0x28a0>
  463d84:	mov	w0, #0x0                   	// #0
  463d88:	ret
  463d8c:	nop
  463d90:	mov	x1, x0
  463d94:	ldr	w0, [x0, #40]
  463d98:	ldr	w2, [x1, #44]
  463d9c:	cmp	w0, w2
  463da0:	b.ge	463dec <_obstack_memory_used@@Base+0x29a4>  // b.tcont
  463da4:	stp	x29, x30, [sp, #-16]!
  463da8:	mov	w2, #0x18                  	// #24
  463dac:	add	w5, w0, #0x1
  463db0:	mov	x29, sp
  463db4:	ldr	x3, [x1, #32]
  463db8:	smull	x2, w0, w2
  463dbc:	mov	w4, #0x42                  	// #66
  463dc0:	add	x0, x1, #0x18
  463dc4:	add	x10, x3, x2
  463dc8:	str	wzr, [x10, #4]
  463dcc:	str	w5, [x1, #40]
  463dd0:	str	w4, [x3, x2]
  463dd4:	bl	463cc0 <_obstack_memory_used@@Base+0x2878>
  463dd8:	sxtw	x0, w0
  463ddc:	str	x0, [x10, #8]
  463de0:	mov	x0, x10
  463de4:	ldp	x29, x30, [sp], #16
  463de8:	ret
  463dec:	mov	x10, #0x0                   	// #0
  463df0:	mov	x0, x10
  463df4:	ret
  463df8:	ldr	x1, [x0, #24]
  463dfc:	mov	x10, x0
  463e00:	ldrb	w0, [x1]
  463e04:	cmp	w0, #0x5f
  463e08:	b.eq	463e4c <_obstack_memory_used@@Base+0x2a04>  // b.none
  463e0c:	cmp	w0, #0x6e
  463e10:	b.eq	463e64 <_obstack_memory_used@@Base+0x2a1c>  // b.none
  463e14:	stp	x29, x30, [sp, #-16]!
  463e18:	add	x0, x10, #0x18
  463e1c:	mov	x29, sp
  463e20:	bl	463cc0 <_obstack_memory_used@@Base+0x2878>
  463e24:	adds	w0, w0, #0x1
  463e28:	b.mi	463e5c <_obstack_memory_used@@Base+0x2a14>  // b.first
  463e2c:	ldr	x1, [x10, #24]
  463e30:	ldrb	w2, [x1]
  463e34:	cmp	w2, #0x5f
  463e38:	b.ne	463e5c <_obstack_memory_used@@Base+0x2a14>  // b.any
  463e3c:	add	x1, x1, #0x1
  463e40:	str	x1, [x10, #24]
  463e44:	ldp	x29, x30, [sp], #16
  463e48:	ret
  463e4c:	add	x1, x1, #0x1
  463e50:	mov	w0, #0x0                   	// #0
  463e54:	str	x1, [x10, #24]
  463e58:	ret
  463e5c:	mov	w0, #0xffffffff            	// #-1
  463e60:	b	463e44 <_obstack_memory_used@@Base+0x29fc>
  463e64:	mov	w0, #0xffffffff            	// #-1
  463e68:	ret
  463e6c:	nop
  463e70:	ldr	x1, [x0, #24]
  463e74:	ldrb	w2, [x1]
  463e78:	cmp	w2, #0x54
  463e7c:	b.ne	463ee8 <_obstack_memory_used@@Base+0x2aa0>  // b.any
  463e80:	stp	x29, x30, [sp, #-16]!
  463e84:	add	x1, x1, #0x1
  463e88:	mov	x11, x0
  463e8c:	mov	x29, sp
  463e90:	str	x1, [x0, #24]
  463e94:	bl	463df8 <_obstack_memory_used@@Base+0x29b0>
  463e98:	tbnz	w0, #31, 463edc <_obstack_memory_used@@Base+0x2a94>
  463e9c:	ldp	w1, w2, [x11, #40]
  463ea0:	cmp	w1, w2
  463ea4:	b.ge	463edc <_obstack_memory_used@@Base+0x2a94>  // b.tcont
  463ea8:	mov	w2, #0x18                  	// #24
  463eac:	add	w5, w1, #0x1
  463eb0:	ldr	x3, [x11, #32]
  463eb4:	smull	x2, w1, w2
  463eb8:	sxtw	x1, w0
  463ebc:	mov	w4, #0x5                   	// #5
  463ec0:	add	x0, x3, x2
  463ec4:	str	wzr, [x0, #4]
  463ec8:	str	w5, [x11, #40]
  463ecc:	str	w4, [x3, x2]
  463ed0:	str	x1, [x0, #8]
  463ed4:	ldp	x29, x30, [sp], #16
  463ed8:	ret
  463edc:	mov	x0, #0x0                   	// #0
  463ee0:	ldp	x29, x30, [sp], #16
  463ee4:	ret
  463ee8:	mov	x0, #0x0                   	// #0
  463eec:	ret
  463ef0:	mov	x10, x0
  463ef4:	stp	x29, x30, [sp, #-16]!
  463ef8:	add	x0, x0, #0x18
  463efc:	mov	x29, sp
  463f00:	bl	463cc0 <_obstack_memory_used@@Base+0x2878>
  463f04:	cmp	w0, #0x0
  463f08:	b.le	464000 <_obstack_memory_used@@Base+0x2bb8>
  463f0c:	mov	w1, w0
  463f10:	sxtw	x3, w0
  463f14:	ldr	x0, [x10, #8]
  463f18:	ldr	x2, [x10, #24]
  463f1c:	sub	x0, x0, x2
  463f20:	cmp	x0, w1, sxtw
  463f24:	b.lt	463ff8 <_obstack_memory_used@@Base+0x2bb0>  // b.tstop
  463f28:	ldr	w0, [x10, #16]
  463f2c:	add	x3, x2, x3
  463f30:	str	x3, [x10, #24]
  463f34:	tbz	w0, #2, 463f44 <_obstack_memory_used@@Base+0x2afc>
  463f38:	ldrb	w0, [x2, w1, sxtw]
  463f3c:	cmp	w0, #0x24
  463f40:	b.eq	46400c <_obstack_memory_used@@Base+0x2bc4>  // b.none
  463f44:	ldp	w0, w3, [x10, #40]
  463f48:	cmp	w1, #0x9
  463f4c:	b.gt	463f88 <_obstack_memory_used@@Base+0x2b40>
  463f50:	cmp	w3, w0
  463f54:	b.le	463ff8 <_obstack_memory_used@@Base+0x2bb0>
  463f58:	ldr	x4, [x10, #32]
  463f5c:	mov	w5, #0x18                  	// #24
  463f60:	add	w3, w0, #0x1
  463f64:	smaddl	x0, w0, w5, x4
  463f68:	str	wzr, [x0, #4]
  463f6c:	str	w3, [x10, #40]
  463f70:	cbz	x2, 463ff8 <_obstack_memory_used@@Base+0x2bb0>
  463f74:	stp	xzr, x2, [x0]
  463f78:	str	w1, [x0, #16]
  463f7c:	str	x0, [x10, #64]
  463f80:	ldp	x29, x30, [sp], #16
  463f84:	ret
  463f88:	mov	x4, #0x475f                	// #18271
  463f8c:	ldr	x5, [x2]
  463f90:	movk	x4, #0x4f4c, lsl #16
  463f94:	movk	x4, #0x4142, lsl #32
  463f98:	movk	x4, #0x5f4c, lsl #48
  463f9c:	cmp	x5, x4
  463fa0:	b.ne	463fcc <_obstack_memory_used@@Base+0x2b84>  // b.any
  463fa4:	ldrb	w4, [x2, #8]
  463fa8:	mov	w6, #0x5f                  	// #95
  463fac:	mov	w5, #0x24                  	// #36
  463fb0:	cmp	w4, #0x2e
  463fb4:	ccmp	w4, w6, #0x4, ne  // ne = any
  463fb8:	ccmp	w4, w5, #0x4, ne  // ne = any
  463fbc:	b.ne	463fcc <_obstack_memory_used@@Base+0x2b84>  // b.any
  463fc0:	ldrb	w4, [x2, #9]
  463fc4:	cmp	w4, #0x4e
  463fc8:	b.eq	464024 <_obstack_memory_used@@Base+0x2bdc>  // b.none
  463fcc:	cmp	w3, w0
  463fd0:	b.le	463ff8 <_obstack_memory_used@@Base+0x2bb0>
  463fd4:	ldr	x4, [x10, #32]
  463fd8:	mov	w5, #0x18                  	// #24
  463fdc:	add	w3, w0, #0x1
  463fe0:	smaddl	x0, w0, w5, x4
  463fe4:	str	wzr, [x0, #4]
  463fe8:	str	w3, [x10, #40]
  463fec:	stp	xzr, x2, [x0]
  463ff0:	str	w1, [x0, #16]
  463ff4:	b	463f7c <_obstack_memory_used@@Base+0x2b34>
  463ff8:	mov	x0, #0x0                   	// #0
  463ffc:	b	463f7c <_obstack_memory_used@@Base+0x2b34>
  464000:	mov	x0, #0x0                   	// #0
  464004:	ldp	x29, x30, [sp], #16
  464008:	ret
  46400c:	add	x3, x3, #0x1
  464010:	str	x3, [x10, #24]
  464014:	cmp	w1, #0x9
  464018:	ldp	w0, w3, [x10, #40]
  46401c:	b.le	463f50 <_obstack_memory_used@@Base+0x2b08>
  464020:	b	463f88 <_obstack_memory_used@@Base+0x2b40>
  464024:	ldr	w2, [x10, #72]
  464028:	cmp	w3, w0
  46402c:	add	w2, w2, #0x16
  464030:	sub	w1, w2, w1
  464034:	str	w1, [x10, #72]
  464038:	b.le	463ff8 <_obstack_memory_used@@Base+0x2bb0>
  46403c:	mov	w1, #0x18                  	// #24
  464040:	add	w2, w0, #0x1
  464044:	ldr	x3, [x10, #32]
  464048:	smull	x1, w0, w1
  46404c:	str	w2, [x10, #40]
  464050:	mov	w4, #0x15                  	// #21
  464054:	add	x0, x3, x1
  464058:	adrp	x2, 480000 <_obstack_memory_used@@Base+0x1ebb8>
  46405c:	add	x2, x2, #0xcf8
  464060:	str	xzr, [x3, x1]
  464064:	str	x2, [x0, #8]
  464068:	str	w4, [x0, #16]
  46406c:	b	463f7c <_obstack_memory_used@@Base+0x2b34>
  464070:	ldr	x3, [x0, #24]
  464074:	mov	x11, x0
  464078:	ldr	x13, [x0, #64]
  46407c:	mov	x12, x1
  464080:	ldrb	w0, [x3]
  464084:	cmp	w0, #0x42
  464088:	b.ne	4640e0 <_obstack_memory_used@@Base+0x2c98>  // b.any
  46408c:	stp	x29, x30, [sp, #-16]!
  464090:	mov	x29, sp
  464094:	nop
  464098:	add	x3, x3, #0x1
  46409c:	str	x3, [x11, #24]
  4640a0:	mov	x0, x11
  4640a4:	bl	463ef0 <_obstack_memory_used@@Base+0x2aa8>
  4640a8:	mov	x3, x0
  4640ac:	mov	x2, x12
  4640b0:	mov	x0, x11
  4640b4:	mov	w1, #0x4c                  	// #76
  4640b8:	bl	463a40 <_obstack_memory_used@@Base+0x25f8>
  4640bc:	ldr	x3, [x11, #24]
  4640c0:	mov	x12, x0
  4640c4:	ldrb	w0, [x3]
  4640c8:	cmp	w0, #0x42
  4640cc:	b.eq	464098 <_obstack_memory_used@@Base+0x2c50>  // b.none
  4640d0:	str	x13, [x11, #64]
  4640d4:	mov	x0, x12
  4640d8:	ldp	x29, x30, [sp], #16
  4640dc:	ret
  4640e0:	mov	x0, x1
  4640e4:	str	x13, [x11, #64]
  4640e8:	ret
  4640ec:	nop
  4640f0:	mov	x14, x0
  4640f4:	ldr	x0, [x0, #24]
  4640f8:	ldrb	w2, [x0]
  4640fc:	cmp	w2, #0x53
  464100:	b.ne	464170 <_obstack_memory_used@@Base+0x2d28>  // b.any
  464104:	add	x2, x0, #0x1
  464108:	str	x2, [x14, #24]
  46410c:	ldrb	w2, [x0, #1]
  464110:	cbnz	w2, 464178 <_obstack_memory_used@@Base+0x2d30>
  464114:	ldr	w0, [x14, #16]
  464118:	and	w1, w1, #0x1
  46411c:	ands	w3, w0, #0x8
  464120:	ubfx	x4, x0, #3, #1
  464124:	csel	w1, w1, wzr, eq  // eq = none
  464128:	cbz	w1, 464144 <_obstack_memory_used@@Base+0x2cfc>
  46412c:	ldr	x0, [x14, #24]
  464130:	ldrb	w0, [x0]
  464134:	sub	w0, w0, #0x43
  464138:	and	w0, w0, #0xff
  46413c:	cmp	w0, #0x1
  464140:	csinc	w4, w4, wzr, hi  // hi = pmore
  464144:	adrp	x0, 4a2000 <_obstack_memory_used@@Base+0x40bb8>
  464148:	add	x0, x0, #0xdf0
  46414c:	add	x3, x0, #0x188
  464150:	mov	w1, #0x74                  	// #116
  464154:	b	46415c <_obstack_memory_used@@Base+0x2d14>
  464158:	ldrb	w1, [x0]
  46415c:	cmp	w1, w2
  464160:	b.eq	46424c <_obstack_memory_used@@Base+0x2e04>  // b.none
  464164:	add	x0, x0, #0x38
  464168:	cmp	x0, x3
  46416c:	b.ne	464158 <_obstack_memory_used@@Base+0x2d10>  // b.any
  464170:	mov	x0, #0x0                   	// #0
  464174:	ret
  464178:	add	x2, x0, #0x2
  46417c:	str	x2, [x14, #24]
  464180:	ldrb	w2, [x0, #1]
  464184:	sub	w5, w2, #0x30
  464188:	cmp	w2, #0x5f
  46418c:	and	w0, w5, #0xff
  464190:	ccmp	w0, #0x9, #0x0, ne  // ne = any
  464194:	b.hi	4641bc <_obstack_memory_used@@Base+0x2d74>  // b.pmore
  464198:	cmp	w2, #0x5f
  46419c:	mov	w1, #0x0                   	// #0
  4641a0:	b.ne	4641d0 <_obstack_memory_used@@Base+0x2d88>  // b.any
  4641a4:	ldr	w0, [x14, #56]
  4641a8:	cmp	w0, w1
  4641ac:	b.ls	464170 <_obstack_memory_used@@Base+0x2d28>  // b.plast
  4641b0:	ldr	x0, [x14, #48]
  4641b4:	ldr	x0, [x0, w1, uxtw #3]
  4641b8:	ret
  4641bc:	sub	w0, w2, #0x41
  4641c0:	and	w0, w0, #0xff
  4641c4:	cmp	w0, #0x19
  4641c8:	b.hi	464114 <_obstack_memory_used@@Base+0x2ccc>  // b.pmore
  4641cc:	nop
  4641d0:	mov	w3, #0x0                   	// #0
  4641d4:	nop
  4641d8:	add	w1, w3, w3, lsl #3
  4641dc:	sub	w6, w2, #0x41
  4641e0:	mov	w4, w1
  4641e4:	and	w5, w5, #0xff
  4641e8:	add	w1, w2, w1, lsl #2
  4641ec:	and	w6, w6, #0xff
  4641f0:	sub	w1, w1, #0x37
  4641f4:	add	w2, w2, w4, lsl #2
  4641f8:	cmp	w5, #0x9
  4641fc:	b.hi	464240 <_obstack_memory_used@@Base+0x2df8>  // b.pmore
  464200:	sub	w1, w2, #0x30
  464204:	cmp	w3, w1
  464208:	b.hi	464170 <_obstack_memory_used@@Base+0x2d28>  // b.pmore
  46420c:	ldr	x4, [x14, #24]
  464210:	mov	w3, w1
  464214:	add	x0, x4, #0x1
  464218:	ldrb	w2, [x4]
  46421c:	cbz	w2, 464230 <_obstack_memory_used@@Base+0x2de8>
  464220:	str	x0, [x14, #24]
  464224:	ldrb	w2, [x4]
  464228:	cmp	w2, #0x5f
  46422c:	b.eq	464238 <_obstack_memory_used@@Base+0x2df0>  // b.none
  464230:	sub	w5, w2, #0x30
  464234:	b	4641d8 <_obstack_memory_used@@Base+0x2d90>
  464238:	add	w1, w1, #0x1
  46423c:	b	4641a4 <_obstack_memory_used@@Base+0x2d5c>
  464240:	cmp	w6, #0x19
  464244:	b.ls	464204 <_obstack_memory_used@@Base+0x2dbc>  // b.plast
  464248:	b	464170 <_obstack_memory_used@@Base+0x2d28>
  46424c:	ldr	x5, [x0, #40]
  464250:	ldp	w1, w3, [x14, #40]
  464254:	cbz	x5, 464290 <_obstack_memory_used@@Base+0x2e48>
  464258:	ldr	w9, [x0, #48]
  46425c:	cmp	w3, w1
  464260:	b.le	464348 <_obstack_memory_used@@Base+0x2f00>
  464264:	mov	w8, #0x18                  	// #24
  464268:	ldr	x7, [x14, #32]
  46426c:	smull	x6, w1, w8
  464270:	add	w1, w1, #0x1
  464274:	add	x2, x7, x6
  464278:	str	wzr, [x2, #4]
  46427c:	str	w1, [x14, #40]
  464280:	str	w8, [x7, x6]
  464284:	str	x5, [x2, #8]
  464288:	str	w9, [x2, #16]
  46428c:	str	x2, [x14, #64]
  464290:	cbz	w4, 4642ec <_obstack_memory_used@@Base+0x2ea4>
  464294:	ldr	w2, [x0, #32]
  464298:	ldr	x5, [x0, #24]
  46429c:	cmp	w1, w3
  4642a0:	ldr	w0, [x14, #72]
  4642a4:	add	w0, w0, w2
  4642a8:	str	w0, [x14, #72]
  4642ac:	b.ge	464340 <_obstack_memory_used@@Base+0x2ef8>  // b.tcont
  4642b0:	mov	w4, #0x18                  	// #24
  4642b4:	add	w6, w1, #0x1
  4642b8:	ldr	x3, [x14, #32]
  4642bc:	smull	x1, w1, w4
  4642c0:	add	x0, x3, x1
  4642c4:	str	wzr, [x0, #4]
  4642c8:	str	w6, [x14, #40]
  4642cc:	str	w4, [x3, x1]
  4642d0:	str	x5, [x0, #8]
  4642d4:	str	w2, [x0, #16]
  4642d8:	ldr	x1, [x14, #24]
  4642dc:	ldrb	w1, [x1]
  4642e0:	cmp	w1, #0x42
  4642e4:	b.eq	4642f8 <_obstack_memory_used@@Base+0x2eb0>  // b.none
  4642e8:	ret
  4642ec:	ldr	w2, [x0, #16]
  4642f0:	ldr	x5, [x0, #8]
  4642f4:	b	46429c <_obstack_memory_used@@Base+0x2e54>
  4642f8:	stp	x29, x30, [sp, #-16]!
  4642fc:	mov	x1, x0
  464300:	mov	x0, x14
  464304:	mov	x29, sp
  464308:	bl	464070 <_obstack_memory_used@@Base+0x2c28>
  46430c:	cbz	x0, 464334 <_obstack_memory_used@@Base+0x2eec>
  464310:	ldp	w1, w2, [x14, #56]
  464314:	cmp	w1, w2
  464318:	b.ge	464334 <_obstack_memory_used@@Base+0x2eec>  // b.tcont
  46431c:	ldr	x3, [x14, #48]
  464320:	add	w2, w1, #0x1
  464324:	str	x0, [x3, w1, sxtw #3]
  464328:	str	w2, [x14, #56]
  46432c:	ldp	x29, x30, [sp], #16
  464330:	ret
  464334:	mov	x0, #0x0                   	// #0
  464338:	ldp	x29, x30, [sp], #16
  46433c:	ret
  464340:	mov	x0, #0x0                   	// #0
  464344:	b	4642d8 <_obstack_memory_used@@Base+0x2e90>
  464348:	mov	x2, #0x0                   	// #0
  46434c:	str	x2, [x14, #64]
  464350:	b	464290 <_obstack_memory_used@@Base+0x2e48>
  464354:	nop
  464358:	mov	x10, x0
  46435c:	cbnz	w1, 464378 <_obstack_memory_used@@Base+0x2f30>
  464360:	ldr	x0, [x0, #24]
  464364:	ldrb	w1, [x0]
  464368:	cbz	w1, 4643b8 <_obstack_memory_used@@Base+0x2f70>
  46436c:	add	x1, x0, #0x1
  464370:	str	x1, [x10, #24]
  464374:	ldrb	w1, [x0]
  464378:	stp	x29, x30, [sp, #-16]!
  46437c:	cmp	w1, #0x68
  464380:	mov	x29, sp
  464384:	b.eq	4643f4 <_obstack_memory_used@@Base+0x2fac>  // b.none
  464388:	cmp	w1, #0x76
  46438c:	b.ne	4643ac <_obstack_memory_used@@Base+0x2f64>  // b.any
  464390:	add	x11, x10, #0x18
  464394:	mov	x0, x11
  464398:	bl	463cc0 <_obstack_memory_used@@Base+0x2878>
  46439c:	ldr	x0, [x10, #24]
  4643a0:	ldrb	w1, [x0]
  4643a4:	cmp	w1, #0x5f
  4643a8:	b.eq	4643c0 <_obstack_memory_used@@Base+0x2f78>  // b.none
  4643ac:	mov	w0, #0x0                   	// #0
  4643b0:	ldp	x29, x30, [sp], #16
  4643b4:	ret
  4643b8:	mov	w0, #0x0                   	// #0
  4643bc:	ret
  4643c0:	add	x0, x0, #0x1
  4643c4:	str	x0, [x10, #24]
  4643c8:	mov	x0, x11
  4643cc:	bl	463cc0 <_obstack_memory_used@@Base+0x2878>
  4643d0:	ldr	x0, [x10, #24]
  4643d4:	ldrb	w1, [x0]
  4643d8:	cmp	w1, #0x5f
  4643dc:	b.ne	4643ac <_obstack_memory_used@@Base+0x2f64>  // b.any
  4643e0:	add	x1, x0, #0x1
  4643e4:	str	x1, [x10, #24]
  4643e8:	mov	w0, #0x1                   	// #1
  4643ec:	ldp	x29, x30, [sp], #16
  4643f0:	ret
  4643f4:	add	x0, x10, #0x18
  4643f8:	bl	463cc0 <_obstack_memory_used@@Base+0x2878>
  4643fc:	b	4643d0 <_obstack_memory_used@@Base+0x2f88>
  464400:	mov	x2, x0
  464404:	mov	w3, #0x56                  	// #86
  464408:	mov	w0, #0x4b                  	// #75
  46440c:	ldrb	w1, [x2]
  464410:	cmp	w1, #0x72
  464414:	ccmp	w1, w3, #0x4, ne  // ne = any
  464418:	ccmp	w1, w0, #0x4, ne  // ne = any
  46441c:	mov	w0, #0x1                   	// #1
  464420:	b.eq	464430 <_obstack_memory_used@@Base+0x2fe8>  // b.none
  464424:	cmp	w1, #0x44
  464428:	mov	w0, #0x0                   	// #0
  46442c:	b.eq	464434 <_obstack_memory_used@@Base+0x2fec>  // b.none
  464430:	ret
  464434:	ldrb	w0, [x2, #1]
  464438:	and	w1, w0, #0xffffffdf
  46443c:	sub	w0, w0, #0x77
  464440:	cmp	w1, #0x4f
  464444:	and	w0, w0, #0xff
  464448:	ccmp	w0, #0x1, #0x0, ne  // ne = any
  46444c:	cset	w0, ls  // ls = plast
  464450:	ret
  464454:	nop
  464458:	ldr	x1, [x0, #24]
  46445c:	mov	x10, x0
  464460:	ldrb	w0, [x1]
  464464:	cmp	w0, #0x5f
  464468:	b.eq	464474 <_obstack_memory_used@@Base+0x302c>  // b.none
  46446c:	mov	w0, #0x1                   	// #1
  464470:	ret
  464474:	stp	x29, x30, [sp, #-16]!
  464478:	add	x0, x1, #0x1
  46447c:	mov	x29, sp
  464480:	str	x0, [x10, #24]
  464484:	ldrb	w0, [x1, #1]
  464488:	cmp	w0, #0x5f
  46448c:	b.eq	4644b0 <_obstack_memory_used@@Base+0x3068>  // b.none
  464490:	add	x0, x10, #0x18
  464494:	bl	463cc0 <_obstack_memory_used@@Base+0x2878>
  464498:	mov	w1, w0
  46449c:	mov	w0, #0x0                   	// #0
  4644a0:	tbnz	w1, #31, 4644a8 <_obstack_memory_used@@Base+0x3060>
  4644a4:	mov	w0, #0x1                   	// #1
  4644a8:	ldp	x29, x30, [sp], #16
  4644ac:	ret
  4644b0:	mov	x0, x10
  4644b4:	add	x1, x1, #0x2
  4644b8:	str	x1, [x0, #24]!
  4644bc:	bl	463cc0 <_obstack_memory_used@@Base+0x2878>
  4644c0:	tbnz	w0, #31, 4644f0 <_obstack_memory_used@@Base+0x30a8>
  4644c4:	cmp	w0, #0x9
  4644c8:	b.le	4644a4 <_obstack_memory_used@@Base+0x305c>
  4644cc:	ldr	x1, [x10, #24]
  4644d0:	mov	w0, #0x0                   	// #0
  4644d4:	ldrb	w2, [x1]
  4644d8:	cmp	w2, #0x5f
  4644dc:	b.ne	4644a8 <_obstack_memory_used@@Base+0x3060>  // b.any
  4644e0:	add	x1, x1, #0x1
  4644e4:	mov	w0, #0x1                   	// #1
  4644e8:	str	x1, [x10, #24]
  4644ec:	b	4644a8 <_obstack_memory_used@@Base+0x3060>
  4644f0:	mov	w0, #0x0                   	// #0
  4644f4:	b	4644a8 <_obstack_memory_used@@Base+0x3060>
  4644f8:	cbnz	x0, 464514 <_obstack_memory_used@@Base+0x30cc>
  4644fc:	b	464520 <_obstack_memory_used@@Base+0x30d8>
  464500:	cmp	w1, #0x0
  464504:	b.le	464528 <_obstack_memory_used@@Base+0x30e0>
  464508:	ldr	x0, [x0, #16]
  46450c:	sub	w1, w1, #0x1
  464510:	cbz	x0, 464524 <_obstack_memory_used@@Base+0x30dc>
  464514:	ldr	w2, [x0]
  464518:	cmp	w2, #0x2f
  46451c:	b.eq	464500 <_obstack_memory_used@@Base+0x30b8>  // b.none
  464520:	mov	x0, #0x0                   	// #0
  464524:	ret
  464528:	b.ne	464520 <_obstack_memory_used@@Base+0x30d8>  // b.any
  46452c:	ldr	x0, [x0, #8]
  464530:	ret
  464534:	nop
  464538:	mov	x2, x0
  46453c:	ldr	x0, [x0, #288]
  464540:	cbz	x0, 464558 <_obstack_memory_used@@Base+0x3110>
  464544:	ldr	x1, [x1]
  464548:	ldr	x0, [x0, #8]
  46454c:	ldr	x0, [x0, #16]
  464550:	tbnz	w1, #31, 464560 <_obstack_memory_used@@Base+0x3118>
  464554:	b	4644f8 <_obstack_memory_used@@Base+0x30b0>
  464558:	mov	w1, #0x1                   	// #1
  46455c:	str	w1, [x2, #304]
  464560:	ret
  464564:	nop
  464568:	cbz	x1, 46463c <_obstack_memory_used@@Base+0x31f4>
  46456c:	stp	x29, x30, [sp, #-48]!
  464570:	mov	x29, sp
  464574:	stp	x21, x22, [sp, #32]
  464578:	mov	x21, #0x8001                	// #32769
  46457c:	movk	x21, #0x410, lsl #16
  464580:	movk	x21, #0xc600, lsl #32
  464584:	stp	x19, x20, [sp, #16]
  464588:	mov	x20, x0
  46458c:	mov	x19, x1
  464590:	mov	x22, #0x1                   	// #1
  464594:	movk	x21, #0x19, lsl #48
  464598:	ldr	w2, [x19]
  46459c:	cmp	w2, #0x8
  4645a0:	b.eq	4645b8 <_obstack_memory_used@@Base+0x3170>  // b.none
  4645a4:	b.hi	46460c <_obstack_memory_used@@Base+0x31c4>  // b.pmore
  4645a8:	cmp	w2, #0x6
  4645ac:	b.eq	4645c0 <_obstack_memory_used@@Base+0x3178>  // b.none
  4645b0:	cmp	w2, #0x7
  4645b4:	b.ne	4645d4 <_obstack_memory_used@@Base+0x318c>  // b.any
  4645b8:	ldr	x19, [x19, #16]
  4645bc:	cbnz	x19, 464598 <_obstack_memory_used@@Base+0x3150>
  4645c0:	mov	x0, #0x0                   	// #0
  4645c4:	ldp	x19, x20, [sp, #16]
  4645c8:	ldp	x21, x22, [sp, #32]
  4645cc:	ldp	x29, x30, [sp], #48
  4645d0:	ret
  4645d4:	cbz	w2, 4645c0 <_obstack_memory_used@@Base+0x3178>
  4645d8:	cmp	w2, #0x5
  4645dc:	b.ne	464628 <_obstack_memory_used@@Base+0x31e0>  // b.any
  4645e0:	add	x1, x19, #0x8
  4645e4:	mov	x0, x20
  4645e8:	bl	464538 <_obstack_memory_used@@Base+0x30f0>
  4645ec:	cbz	x0, 4645c0 <_obstack_memory_used@@Base+0x3178>
  4645f0:	ldr	w1, [x0]
  4645f4:	cmp	w1, #0x2f
  4645f8:	b.ne	4645c0 <_obstack_memory_used@@Base+0x3178>  // b.any
  4645fc:	ldp	x19, x20, [sp, #16]
  464600:	ldp	x21, x22, [sp, #32]
  464604:	ldp	x29, x30, [sp], #48
  464608:	ret
  46460c:	sub	w2, w2, #0x18
  464610:	cmp	w2, #0x34
  464614:	b.hi	464628 <_obstack_memory_used@@Base+0x31e0>  // b.pmore
  464618:	lsl	x2, x22, x2
  46461c:	tst	x2, x21
  464620:	b.ne	4645c0 <_obstack_memory_used@@Base+0x3178>  // b.any
  464624:	tbnz	w2, #27, 4645b8 <_obstack_memory_used@@Base+0x3170>
  464628:	ldr	x1, [x19, #8]
  46462c:	mov	x0, x20
  464630:	bl	464568 <_obstack_memory_used@@Base+0x3120>
  464634:	cbz	x0, 4645b8 <_obstack_memory_used@@Base+0x3170>
  464638:	b	4645c4 <_obstack_memory_used@@Base+0x317c>
  46463c:	mov	x0, #0x0                   	// #0
  464640:	ret
  464644:	nop
  464648:	stp	x29, x30, [sp, #-48]!
  46464c:	mov	x29, sp
  464650:	stp	x19, x20, [sp, #16]
  464654:	mov	x19, x2
  464658:	add	x2, x1, #0x1
  46465c:	stp	x21, x22, [sp, #32]
  464660:	mov	x21, x1
  464664:	mov	x22, x0
  464668:	ldp	x1, x20, [x19, #8]
  46466c:	add	x1, x2, x1
  464670:	ldr	w2, [x19, #24]
  464674:	cmp	x1, x20
  464678:	b.hi	4646bc <_obstack_memory_used@@Base+0x3274>  // b.pmore
  46467c:	cbnz	w2, 4646ac <_obstack_memory_used@@Base+0x3264>
  464680:	ldp	x3, x0, [x19]
  464684:	mov	x1, x22
  464688:	mov	x2, x21
  46468c:	add	x0, x3, x0
  464690:	bl	402490 <memcpy@plt>
  464694:	ldp	x0, x1, [x19]
  464698:	add	x0, x0, x21
  46469c:	strb	wzr, [x0, x1]
  4646a0:	ldr	x1, [x19, #8]
  4646a4:	add	x1, x1, x21
  4646a8:	str	x1, [x19, #8]
  4646ac:	ldp	x19, x20, [sp, #16]
  4646b0:	ldp	x21, x22, [sp, #32]
  4646b4:	ldp	x29, x30, [sp], #48
  4646b8:	ret
  4646bc:	cbnz	w2, 4646ac <_obstack_memory_used@@Base+0x3264>
  4646c0:	cbz	x20, 4646f8 <_obstack_memory_used@@Base+0x32b0>
  4646c4:	nop
  4646c8:	lsl	x20, x20, #1
  4646cc:	cmp	x1, x20
  4646d0:	b.hi	4646c8 <_obstack_memory_used@@Base+0x3280>  // b.pmore
  4646d4:	ldr	x0, [x19]
  4646d8:	mov	x1, x20
  4646dc:	bl	402750 <realloc@plt>
  4646e0:	cbz	x0, 464708 <_obstack_memory_used@@Base+0x32c0>
  4646e4:	ldr	w2, [x19, #24]
  4646e8:	str	x0, [x19]
  4646ec:	str	x20, [x19, #16]
  4646f0:	cbz	w2, 464680 <_obstack_memory_used@@Base+0x3238>
  4646f4:	b	4646ac <_obstack_memory_used@@Base+0x3264>
  4646f8:	cmp	x1, #0x2
  4646fc:	mov	x20, #0x2                   	// #2
  464700:	b.hi	4646c8 <_obstack_memory_used@@Base+0x3280>  // b.pmore
  464704:	b	4646d4 <_obstack_memory_used@@Base+0x328c>
  464708:	ldr	x0, [x19]
  46470c:	bl	402910 <free@plt>
  464710:	stp	xzr, xzr, [x19]
  464714:	mov	w0, #0x1                   	// #1
  464718:	str	xzr, [x19, #16]
  46471c:	str	w0, [x19, #24]
  464720:	b	4646ac <_obstack_memory_used@@Base+0x3264>
  464724:	nop
  464728:	stp	x29, x30, [sp, #-112]!
  46472c:	mov	x29, sp
  464730:	ldr	x2, [x0, #24]
  464734:	stp	x19, x20, [sp, #16]
  464738:	mov	x19, x0
  46473c:	str	xzr, [sp, #104]
  464740:	ldrb	w3, [x2]
  464744:	cmp	w3, w1, uxtb
  464748:	b.eq	464e48 <_obstack_memory_used@@Base+0x3a00>  // b.none
  46474c:	stp	x21, x22, [sp, #32]
  464750:	add	x21, sp, #0x68
  464754:	mov	w22, #0x1                   	// #1
  464758:	stp	x23, x24, [sp, #48]
  46475c:	and	w23, w1, #0xff
  464760:	mov	w24, #0x6d                  	// #109
  464764:	stp	x25, x26, [sp, #64]
  464768:	ldr	w25, [x19, #76]
  46476c:	str	w22, [x19, #76]
  464770:	ldrb	w0, [x2]
  464774:	cmp	w0, #0x4c
  464778:	b.eq	464948 <_obstack_memory_used@@Base+0x3500>  // b.none
  46477c:	cmp	w0, #0x54
  464780:	b.eq	4649d8 <_obstack_memory_used@@Base+0x3590>  // b.none
  464784:	cmp	w0, #0x73
  464788:	b.eq	464908 <_obstack_memory_used@@Base+0x34c0>  // b.none
  46478c:	cmp	w0, #0x66
  464790:	b.ne	46482c <_obstack_memory_used@@Base+0x33e4>  // b.any
  464794:	ldrb	w0, [x2, #1]
  464798:	cmp	w0, #0x70
  46479c:	b.eq	4649e8 <_obstack_memory_used@@Base+0x35a0>  // b.none
  4647a0:	mov	x0, x19
  4647a4:	bl	467148 <_obstack_memory_used@@Base+0x5d00>
  4647a8:	mov	x20, x0
  4647ac:	cbz	x0, 46480c <_obstack_memory_used@@Base+0x33c4>
  4647b0:	ldr	w0, [x0]
  4647b4:	cmp	w0, #0x32
  4647b8:	b.eq	464a50 <_obstack_memory_used@@Base+0x3608>  // b.none
  4647bc:	cmp	w0, #0x34
  4647c0:	b.eq	464e68 <_obstack_memory_used@@Base+0x3a20>  // b.none
  4647c4:	b.hi	464808 <_obstack_memory_used@@Base+0x33c0>  // b.pmore
  4647c8:	cmp	w0, #0x33
  4647cc:	b.ne	464808 <_obstack_memory_used@@Base+0x33c0>  // b.any
  4647d0:	ldr	w0, [x20, #8]
  4647d4:	cmp	w0, #0x2
  4647d8:	b.eq	464808 <_obstack_memory_used@@Base+0x33c0>  // b.none
  4647dc:	b.gt	464808 <_obstack_memory_used@@Base+0x33c0>
  4647e0:	cbnz	w0, 464c18 <_obstack_memory_used@@Base+0x37d0>
  4647e4:	mov	x2, x20
  4647e8:	mov	x0, x19
  4647ec:	mov	x3, #0x0                   	// #0
  4647f0:	mov	w1, #0x36                  	// #54
  4647f4:	bl	463a40 <_obstack_memory_used@@Base+0x25f8>
  4647f8:	mov	x20, x0
  4647fc:	b	4648e0 <_obstack_memory_used@@Base+0x3498>
  464800:	ldr	x27, [sp, #80]
  464804:	nop
  464808:	mov	x20, #0x0                   	// #0
  46480c:	str	w25, [x19, #76]
  464810:	mov	x0, x20
  464814:	ldp	x19, x20, [sp, #16]
  464818:	ldp	x21, x22, [sp, #32]
  46481c:	ldp	x23, x24, [sp, #48]
  464820:	ldp	x25, x26, [sp, #64]
  464824:	ldp	x29, x30, [sp], #112
  464828:	ret
  46482c:	sub	w1, w0, #0x30
  464830:	and	w1, w1, #0xff
  464834:	cmp	w1, #0x9
  464838:	b.hi	464958 <_obstack_memory_used@@Base+0x3510>  // b.pmore
  46483c:	mov	x0, x19
  464840:	bl	467810 <_obstack_memory_used@@Base+0x63c8>
  464844:	mov	x20, x0
  464848:	cbz	x0, 46480c <_obstack_memory_used@@Base+0x33c4>
  46484c:	ldr	x0, [x19, #24]
  464850:	ldrb	w1, [x0]
  464854:	cmp	w1, #0x49
  464858:	b.eq	4648b8 <_obstack_memory_used@@Base+0x3470>  // b.none
  46485c:	str	w25, [x19, #76]
  464860:	mov	x2, x20
  464864:	mov	x0, x19
  464868:	mov	x3, #0x0                   	// #0
  46486c:	mov	w1, #0x2e                  	// #46
  464870:	bl	463a40 <_obstack_memory_used@@Base+0x25f8>
  464874:	str	x0, [x21]
  464878:	cbz	x0, 4648e8 <_obstack_memory_used@@Base+0x34a0>
  46487c:	ldr	x2, [x19, #24]
  464880:	add	x21, x0, #0x10
  464884:	ldrb	w0, [x2]
  464888:	cmp	w0, w23
  46488c:	b.ne	464768 <_obstack_memory_used@@Base+0x3320>  // b.any
  464890:	ldr	x20, [sp, #104]
  464894:	add	x2, x2, #0x1
  464898:	str	x2, [x19, #24]
  46489c:	mov	x0, x20
  4648a0:	ldp	x19, x20, [sp, #16]
  4648a4:	ldp	x21, x22, [sp, #32]
  4648a8:	ldp	x23, x24, [sp, #48]
  4648ac:	ldp	x25, x26, [sp, #64]
  4648b0:	ldp	x29, x30, [sp], #112
  4648b4:	ret
  4648b8:	add	x0, x0, #0x1
  4648bc:	str	x0, [x19, #24]
  4648c0:	mov	x0, x19
  4648c4:	bl	465720 <_obstack_memory_used@@Base+0x42d8>
  4648c8:	mov	x3, x0
  4648cc:	mov	x2, x20
  4648d0:	mov	x0, x19
  4648d4:	mov	w1, #0x4                   	// #4
  4648d8:	bl	463a40 <_obstack_memory_used@@Base+0x25f8>
  4648dc:	mov	x20, x0
  4648e0:	str	w25, [x19, #76]
  4648e4:	cbnz	x20, 464860 <_obstack_memory_used@@Base+0x3418>
  4648e8:	mov	x20, #0x0                   	// #0
  4648ec:	mov	x0, x20
  4648f0:	ldp	x19, x20, [sp, #16]
  4648f4:	ldp	x21, x22, [sp, #32]
  4648f8:	ldp	x23, x24, [sp, #48]
  4648fc:	ldp	x25, x26, [sp, #64]
  464900:	ldp	x29, x30, [sp], #112
  464904:	ret
  464908:	ldrb	w0, [x2, #1]
  46490c:	cmp	w0, #0x72
  464910:	b.eq	464b98 <_obstack_memory_used@@Base+0x3750>  // b.none
  464914:	cmp	w0, #0x70
  464918:	b.ne	4647a0 <_obstack_memory_used@@Base+0x3358>  // b.any
  46491c:	add	x2, x2, #0x2
  464920:	str	x2, [x19, #24]
  464924:	mov	x0, x19
  464928:	bl	464f48 <_obstack_memory_used@@Base+0x3b00>
  46492c:	mov	x2, x0
  464930:	mov	x3, #0x0                   	// #0
  464934:	mov	x0, x19
  464938:	mov	w1, #0x4b                  	// #75
  46493c:	bl	463a40 <_obstack_memory_used@@Base+0x25f8>
  464940:	mov	x20, x0
  464944:	b	4648e0 <_obstack_memory_used@@Base+0x3498>
  464948:	mov	x0, x19
  46494c:	bl	467cf0 <_obstack_memory_used@@Base+0x68a8>
  464950:	mov	x20, x0
  464954:	b	4648e0 <_obstack_memory_used@@Base+0x3498>
  464958:	cmp	w0, #0x6f
  46495c:	b.ne	464978 <_obstack_memory_used@@Base+0x3530>  // b.any
  464960:	ldrb	w0, [x2, #1]
  464964:	cmp	w0, #0x6e
  464968:	b.ne	4647a0 <_obstack_memory_used@@Base+0x3358>  // b.any
  46496c:	add	x2, x2, #0x2
  464970:	str	x2, [x19, #24]
  464974:	b	46483c <_obstack_memory_used@@Base+0x33f4>
  464978:	cmp	w0, #0x69
  46497c:	mov	w1, #0x74                  	// #116
  464980:	ccmp	w0, w1, #0x4, ne  // ne = any
  464984:	b.ne	4647a0 <_obstack_memory_used@@Base+0x3358>  // b.any
  464988:	ldrb	w1, [x2, #1]
  46498c:	cmp	w1, #0x6c
  464990:	b.ne	4647a0 <_obstack_memory_used@@Base+0x3358>  // b.any
  464994:	add	x1, x2, #0x2
  464998:	str	x1, [x19, #24]
  46499c:	cmp	w0, #0x74
  4649a0:	mov	x20, #0x0                   	// #0
  4649a4:	b.eq	464ce8 <_obstack_memory_used@@Base+0x38a0>  // b.none
  4649a8:	ldrb	w0, [x1, #1]
  4649ac:	cbz	w0, 464808 <_obstack_memory_used@@Base+0x33c0>
  4649b0:	mov	w1, #0x45                  	// #69
  4649b4:	mov	x0, x19
  4649b8:	bl	464728 <_obstack_memory_used@@Base+0x32e0>
  4649bc:	mov	x3, x0
  4649c0:	mov	x2, x20
  4649c4:	mov	x0, x19
  4649c8:	mov	w1, #0x31                  	// #49
  4649cc:	bl	463a40 <_obstack_memory_used@@Base+0x25f8>
  4649d0:	mov	x20, x0
  4649d4:	b	4648e0 <_obstack_memory_used@@Base+0x3498>
  4649d8:	mov	x0, x19
  4649dc:	bl	463e70 <_obstack_memory_used@@Base+0x2a28>
  4649e0:	mov	x20, x0
  4649e4:	b	4648e0 <_obstack_memory_used@@Base+0x3498>
  4649e8:	add	x0, x2, #0x2
  4649ec:	str	x0, [x19, #24]
  4649f0:	ldrb	w0, [x2, #2]
  4649f4:	cmp	w0, #0x54
  4649f8:	b.eq	464b88 <_obstack_memory_used@@Base+0x3740>  // b.none
  4649fc:	mov	x0, x19
  464a00:	bl	463df8 <_obstack_memory_used@@Base+0x29b0>
  464a04:	mvn	x1, x0
  464a08:	tst	x1, #0x7fffffff
  464a0c:	b.eq	464808 <_obstack_memory_used@@Base+0x33c0>  // b.none
  464a10:	add	w0, w0, #0x1
  464a14:	ldp	w1, w2, [x19, #40]
  464a18:	cmp	w1, w2
  464a1c:	b.ge	464808 <_obstack_memory_used@@Base+0x33c0>  // b.tcont
  464a20:	mov	w3, #0x18                  	// #24
  464a24:	add	w4, w1, #0x1
  464a28:	ldr	x2, [x19, #32]
  464a2c:	smull	x1, w1, w3
  464a30:	mov	w3, #0x6                   	// #6
  464a34:	sxtw	x0, w0
  464a38:	add	x20, x2, x1
  464a3c:	str	wzr, [x20, #4]
  464a40:	str	w4, [x19, #40]
  464a44:	str	w3, [x2, x1]
  464a48:	str	x0, [x20, #8]
  464a4c:	b	46485c <_obstack_memory_used@@Base+0x3414>
  464a50:	ldr	x2, [x20, #8]
  464a54:	ldr	w0, [x19, #72]
  464a58:	ldr	w1, [x2, #16]
  464a5c:	ldr	x26, [x2]
  464a60:	sub	w1, w1, #0x2
  464a64:	add	w0, w0, w1
  464a68:	str	w0, [x19, #72]
  464a6c:	ldrb	w1, [x26]
  464a70:	cmp	w1, #0x73
  464a74:	b.eq	464b64 <_obstack_memory_used@@Base+0x371c>  // b.none
  464a78:	str	x27, [sp, #80]
  464a7c:	ldr	w27, [x2, #20]
  464a80:	cmp	w27, #0x1
  464a84:	b.eq	464c30 <_obstack_memory_used@@Base+0x37e8>  // b.none
  464a88:	b.le	464c0c <_obstack_memory_used@@Base+0x37c4>
  464a8c:	cmp	w27, #0x2
  464a90:	b.eq	464d50 <_obstack_memory_used@@Base+0x3908>  // b.none
  464a94:	cmp	w27, #0x3
  464a98:	b.ne	464800 <_obstack_memory_used@@Base+0x33b8>  // b.any
  464a9c:	cmp	w1, #0x71
  464aa0:	b.eq	464d04 <_obstack_memory_used@@Base+0x38bc>  // b.none
  464aa4:	ldrb	w0, [x26]
  464aa8:	cmp	w0, #0x66
  464aac:	b.eq	464ed4 <_obstack_memory_used@@Base+0x3a8c>  // b.none
  464ab0:	cmp	w0, #0x6e
  464ab4:	b.ne	464d40 <_obstack_memory_used@@Base+0x38f8>  // b.any
  464ab8:	ldrb	w0, [x26, #1]
  464abc:	mov	w1, #0x61                  	// #97
  464ac0:	cmp	w0, #0x77
  464ac4:	ccmp	w0, w1, #0x4, ne  // ne = any
  464ac8:	b.ne	464d40 <_obstack_memory_used@@Base+0x38f8>  // b.any
  464acc:	mov	w1, #0x5f                  	// #95
  464ad0:	mov	x0, x19
  464ad4:	bl	464728 <_obstack_memory_used@@Base+0x32e0>
  464ad8:	mov	x26, x0
  464adc:	mov	x0, x19
  464ae0:	bl	466560 <_obstack_memory_used@@Base+0x5118>
  464ae4:	ldr	x1, [x19, #24]
  464ae8:	mov	x27, x0
  464aec:	ldrb	w0, [x1]
  464af0:	cmp	w0, #0x45
  464af4:	b.eq	464f34 <_obstack_memory_used@@Base+0x3aec>  // b.none
  464af8:	cmp	w0, #0x70
  464afc:	b.eq	464f0c <_obstack_memory_used@@Base+0x3ac4>  // b.none
  464b00:	cmp	w0, #0x69
  464b04:	b.ne	464d40 <_obstack_memory_used@@Base+0x38f8>  // b.any
  464b08:	ldrb	w0, [x1, #1]
  464b0c:	cmp	w0, #0x6c
  464b10:	b.ne	464d40 <_obstack_memory_used@@Base+0x38f8>  // b.any
  464b14:	mov	x0, x19
  464b18:	bl	464f48 <_obstack_memory_used@@Base+0x3b00>
  464b1c:	mov	x3, x0
  464b20:	mov	x2, x27
  464b24:	mov	w1, #0x3c                  	// #60
  464b28:	mov	x0, x19
  464b2c:	bl	463a40 <_obstack_memory_used@@Base+0x25f8>
  464b30:	mov	x2, x26
  464b34:	mov	x3, x0
  464b38:	mov	w1, #0x3b                  	// #59
  464b3c:	mov	x0, x19
  464b40:	bl	463a40 <_obstack_memory_used@@Base+0x25f8>
  464b44:	mov	x3, x0
  464b48:	mov	x2, x20
  464b4c:	mov	x0, x19
  464b50:	mov	w1, #0x3a                  	// #58
  464b54:	bl	463a40 <_obstack_memory_used@@Base+0x25f8>
  464b58:	mov	x20, x0
  464b5c:	ldr	x27, [sp, #80]
  464b60:	b	4648e0 <_obstack_memory_used@@Base+0x3498>
  464b64:	ldrb	w0, [x26, #1]
  464b68:	cmp	w0, #0x74
  464b6c:	b.ne	464a78 <_obstack_memory_used@@Base+0x3630>  // b.any
  464b70:	ldrb	w0, [x26, #2]
  464b74:	cbnz	w0, 464a78 <_obstack_memory_used@@Base+0x3630>
  464b78:	mov	x0, x19
  464b7c:	bl	466560 <_obstack_memory_used@@Base+0x5118>
  464b80:	mov	x3, x0
  464b84:	b	464c74 <_obstack_memory_used@@Base+0x382c>
  464b88:	add	x2, x2, #0x3
  464b8c:	mov	w0, #0x0                   	// #0
  464b90:	str	x2, [x19, #24]
  464b94:	b	464a14 <_obstack_memory_used@@Base+0x35cc>
  464b98:	add	x2, x2, #0x2
  464b9c:	str	x2, [x19, #24]
  464ba0:	mov	x0, x19
  464ba4:	bl	466560 <_obstack_memory_used@@Base+0x5118>
  464ba8:	mov	x20, x0
  464bac:	mov	x0, x19
  464bb0:	bl	467810 <_obstack_memory_used@@Base+0x63c8>
  464bb4:	ldr	x1, [x19, #24]
  464bb8:	mov	x26, x0
  464bbc:	mov	x3, x26
  464bc0:	ldrb	w0, [x1]
  464bc4:	cmp	w0, #0x49
  464bc8:	b.ne	464bf4 <_obstack_memory_used@@Base+0x37ac>  // b.any
  464bcc:	add	x1, x1, #0x1
  464bd0:	str	x1, [x19, #24]
  464bd4:	mov	x0, x19
  464bd8:	bl	465720 <_obstack_memory_used@@Base+0x42d8>
  464bdc:	mov	x3, x0
  464be0:	mov	x2, x26
  464be4:	mov	x0, x19
  464be8:	mov	w1, #0x4                   	// #4
  464bec:	bl	463a40 <_obstack_memory_used@@Base+0x25f8>
  464bf0:	mov	x3, x0
  464bf4:	mov	x2, x20
  464bf8:	mov	x0, x19
  464bfc:	mov	w1, #0x1                   	// #1
  464c00:	bl	463a40 <_obstack_memory_used@@Base+0x25f8>
  464c04:	mov	x20, x0
  464c08:	b	4648e0 <_obstack_memory_used@@Base+0x3498>
  464c0c:	cbnz	w27, 464800 <_obstack_memory_used@@Base+0x33b8>
  464c10:	ldr	x27, [sp, #80]
  464c14:	b	4647e4 <_obstack_memory_used@@Base+0x339c>
  464c18:	cmp	w0, #0x1
  464c1c:	b.ne	464808 <_obstack_memory_used@@Base+0x33c0>  // b.any
  464c20:	mov	x0, x19
  464c24:	bl	464f48 <_obstack_memory_used@@Base+0x3b00>
  464c28:	mov	x3, x0
  464c2c:	b	464c74 <_obstack_memory_used@@Base+0x382c>
  464c30:	ldrb	w0, [x26]
  464c34:	cmp	w0, #0x70
  464c38:	ccmp	w0, w24, #0x4, ne  // ne = any
  464c3c:	b.eq	464cb8 <_obstack_memory_used@@Base+0x3870>  // b.none
  464c40:	mov	w27, #0x0                   	// #0
  464c44:	cmp	w1, #0x73
  464c48:	b.ne	464c8c <_obstack_memory_used@@Base+0x3844>  // b.any
  464c4c:	ldrb	w0, [x26, #1]
  464c50:	cmp	w0, #0x50
  464c54:	b.ne	464c8c <_obstack_memory_used@@Base+0x3844>  // b.any
  464c58:	ldrb	w0, [x26, #2]
  464c5c:	cbnz	w0, 464c8c <_obstack_memory_used@@Base+0x3844>
  464c60:	mov	x0, x19
  464c64:	bl	465720 <_obstack_memory_used@@Base+0x42d8>
  464c68:	mov	x3, x0
  464c6c:	cbnz	w27, 464c9c <_obstack_memory_used@@Base+0x3854>
  464c70:	ldr	x27, [sp, #80]
  464c74:	mov	x2, x20
  464c78:	mov	x0, x19
  464c7c:	mov	w1, #0x37                  	// #55
  464c80:	bl	463a40 <_obstack_memory_used@@Base+0x25f8>
  464c84:	mov	x20, x0
  464c88:	b	4648e0 <_obstack_memory_used@@Base+0x3498>
  464c8c:	mov	x0, x19
  464c90:	bl	464f48 <_obstack_memory_used@@Base+0x3b00>
  464c94:	mov	x3, x0
  464c98:	cbz	w27, 464c70 <_obstack_memory_used@@Base+0x3828>
  464c9c:	mov	x2, x3
  464ca0:	mov	x0, x19
  464ca4:	mov	w1, #0x39                  	// #57
  464ca8:	bl	463a40 <_obstack_memory_used@@Base+0x25f8>
  464cac:	mov	x3, x0
  464cb0:	ldr	x27, [sp, #80]
  464cb4:	b	464c74 <_obstack_memory_used@@Base+0x382c>
  464cb8:	ldrb	w2, [x26, #1]
  464cbc:	cmp	w2, w0
  464cc0:	b.ne	464c40 <_obstack_memory_used@@Base+0x37f8>  // b.any
  464cc4:	ldr	x0, [x19, #24]
  464cc8:	ldrb	w2, [x0]
  464ccc:	cmp	w2, #0x5f
  464cd0:	b.ne	464c44 <_obstack_memory_used@@Base+0x37fc>  // b.any
  464cd4:	add	x0, x0, #0x1
  464cd8:	str	x0, [x19, #24]
  464cdc:	mov	w27, #0x0                   	// #0
  464ce0:	ldrb	w1, [x26]
  464ce4:	b	464c44 <_obstack_memory_used@@Base+0x37fc>
  464ce8:	mov	x0, x19
  464cec:	bl	466560 <_obstack_memory_used@@Base+0x5118>
  464cf0:	ldr	x1, [x19, #24]
  464cf4:	mov	x20, x0
  464cf8:	ldrb	w0, [x1, #1]
  464cfc:	cbnz	w0, 4649b0 <_obstack_memory_used@@Base+0x3568>
  464d00:	b	464808 <_obstack_memory_used@@Base+0x33c0>
  464d04:	ldrb	w0, [x26, #1]
  464d08:	cmp	w0, #0x75
  464d0c:	b.ne	464aa4 <_obstack_memory_used@@Base+0x365c>  // b.any
  464d10:	ldrb	w0, [x26, #2]
  464d14:	cbnz	w0, 464aa4 <_obstack_memory_used@@Base+0x365c>
  464d18:	mov	x0, x19
  464d1c:	bl	464f48 <_obstack_memory_used@@Base+0x3b00>
  464d20:	mov	x26, x0
  464d24:	mov	x0, x19
  464d28:	bl	464f48 <_obstack_memory_used@@Base+0x3b00>
  464d2c:	mov	x27, x0
  464d30:	mov	x0, x19
  464d34:	bl	464f48 <_obstack_memory_used@@Base+0x3b00>
  464d38:	mov	x3, x0
  464d3c:	cbnz	x0, 464b20 <_obstack_memory_used@@Base+0x36d8>
  464d40:	mov	x20, #0x0                   	// #0
  464d44:	ldr	x27, [sp, #80]
  464d48:	str	w25, [x19, #76]
  464d4c:	b	464810 <_obstack_memory_used@@Base+0x33c8>
  464d50:	ldr	x0, [x20, #8]
  464d54:	ldr	x0, [x0]
  464d58:	ldrb	w1, [x0, #1]
  464d5c:	cmp	w1, #0x63
  464d60:	b.eq	464e94 <_obstack_memory_used@@Base+0x3a4c>  // b.none
  464d64:	ldrb	w0, [x26]
  464d68:	cmp	w0, #0x66
  464d6c:	b.eq	464ec4 <_obstack_memory_used@@Base+0x3a7c>  // b.none
  464d70:	mov	x0, x19
  464d74:	bl	464f48 <_obstack_memory_used@@Base+0x3b00>
  464d78:	mov	x27, x0
  464d7c:	ldrb	w1, [x26]
  464d80:	cmp	w1, #0x63
  464d84:	b.ne	464db0 <_obstack_memory_used@@Base+0x3968>  // b.any
  464d88:	ldrb	w0, [x26, #1]
  464d8c:	cmp	w0, #0x6c
  464d90:	b.ne	464db0 <_obstack_memory_used@@Base+0x3968>  // b.any
  464d94:	ldrb	w0, [x26, #2]
  464d98:	cbnz	w0, 464db0 <_obstack_memory_used@@Base+0x3968>
  464d9c:	mov	x0, x19
  464da0:	mov	w1, #0x45                  	// #69
  464da4:	bl	464728 <_obstack_memory_used@@Base+0x32e0>
  464da8:	mov	x26, x0
  464dac:	b	464de8 <_obstack_memory_used@@Base+0x39a0>
  464db0:	cmp	w1, #0x64
  464db4:	b.ne	464e1c <_obstack_memory_used@@Base+0x39d4>  // b.any
  464db8:	ldrb	w0, [x26, #1]
  464dbc:	cmp	w0, #0x74
  464dc0:	b.ne	464e1c <_obstack_memory_used@@Base+0x39d4>  // b.any
  464dc4:	ldrb	w0, [x26, #2]
  464dc8:	cbnz	w0, 464e1c <_obstack_memory_used@@Base+0x39d4>
  464dcc:	mov	x0, x19
  464dd0:	bl	467810 <_obstack_memory_used@@Base+0x63c8>
  464dd4:	ldr	x1, [x19, #24]
  464dd8:	mov	x26, x0
  464ddc:	ldrb	w0, [x1]
  464de0:	cmp	w0, #0x49
  464de4:	b.eq	464ee0 <_obstack_memory_used@@Base+0x3a98>  // b.none
  464de8:	mov	x2, x27
  464dec:	mov	x3, x26
  464df0:	mov	w1, #0x39                  	// #57
  464df4:	mov	x0, x19
  464df8:	bl	463a40 <_obstack_memory_used@@Base+0x25f8>
  464dfc:	mov	x3, x0
  464e00:	mov	x2, x20
  464e04:	mov	x0, x19
  464e08:	mov	w1, #0x38                  	// #56
  464e0c:	bl	463a40 <_obstack_memory_used@@Base+0x25f8>
  464e10:	mov	x20, x0
  464e14:	ldr	x27, [sp, #80]
  464e18:	b	4648e0 <_obstack_memory_used@@Base+0x3498>
  464e1c:	cmp	w1, #0x70
  464e20:	b.ne	464e38 <_obstack_memory_used@@Base+0x39f0>  // b.any
  464e24:	ldrb	w0, [x26, #1]
  464e28:	cmp	w0, #0x74
  464e2c:	b.ne	464e38 <_obstack_memory_used@@Base+0x39f0>  // b.any
  464e30:	ldrb	w0, [x26, #2]
  464e34:	cbz	w0, 464dcc <_obstack_memory_used@@Base+0x3984>
  464e38:	mov	x0, x19
  464e3c:	bl	464f48 <_obstack_memory_used@@Base+0x3b00>
  464e40:	mov	x26, x0
  464e44:	b	464de8 <_obstack_memory_used@@Base+0x39a0>
  464e48:	add	x2, x2, #0x1
  464e4c:	str	x2, [x0, #24]
  464e50:	ldp	x19, x20, [sp, #16]
  464e54:	mov	x3, #0x0                   	// #0
  464e58:	ldp	x29, x30, [sp], #112
  464e5c:	mov	w1, #0x2e                  	// #46
  464e60:	mov	x2, #0x0                   	// #0
  464e64:	b	463a40 <_obstack_memory_used@@Base+0x25f8>
  464e68:	ldr	x0, [x19, #24]
  464e6c:	ldrb	w1, [x0]
  464e70:	cmp	w1, #0x5f
  464e74:	b.ne	464c20 <_obstack_memory_used@@Base+0x37d8>  // b.any
  464e78:	add	x0, x0, #0x1
  464e7c:	str	x0, [x19, #24]
  464e80:	mov	w1, #0x45                  	// #69
  464e84:	mov	x0, x19
  464e88:	bl	464728 <_obstack_memory_used@@Base+0x32e0>
  464e8c:	mov	x3, x0
  464e90:	b	464c74 <_obstack_memory_used@@Base+0x382c>
  464e94:	ldrb	w0, [x0]
  464e98:	sub	w1, w0, #0x72
  464e9c:	sub	w0, w0, #0x63
  464ea0:	and	w1, w1, #0xff
  464ea4:	and	w0, w0, #0xff
  464ea8:	cmp	w1, #0x1
  464eac:	ccmp	w0, #0x1, #0x0, hi  // hi = pmore
  464eb0:	b.hi	464d64 <_obstack_memory_used@@Base+0x391c>  // b.pmore
  464eb4:	mov	x0, x19
  464eb8:	bl	466560 <_obstack_memory_used@@Base+0x5118>
  464ebc:	mov	x27, x0
  464ec0:	b	464d7c <_obstack_memory_used@@Base+0x3934>
  464ec4:	mov	x0, x19
  464ec8:	bl	467148 <_obstack_memory_used@@Base+0x5d00>
  464ecc:	mov	x27, x0
  464ed0:	b	464d7c <_obstack_memory_used@@Base+0x3934>
  464ed4:	mov	x0, x19
  464ed8:	bl	467148 <_obstack_memory_used@@Base+0x5d00>
  464edc:	b	464d20 <_obstack_memory_used@@Base+0x38d8>
  464ee0:	add	x1, x1, #0x1
  464ee4:	str	x1, [x19, #24]
  464ee8:	mov	x0, x19
  464eec:	bl	465720 <_obstack_memory_used@@Base+0x42d8>
  464ef0:	mov	x3, x0
  464ef4:	mov	x2, x26
  464ef8:	mov	x0, x19
  464efc:	mov	w1, #0x4                   	// #4
  464f00:	bl	463a40 <_obstack_memory_used@@Base+0x25f8>
  464f04:	mov	x26, x0
  464f08:	b	464de8 <_obstack_memory_used@@Base+0x39a0>
  464f0c:	ldrb	w0, [x1, #1]
  464f10:	cmp	w0, #0x69
  464f14:	b.ne	464d40 <_obstack_memory_used@@Base+0x38f8>  // b.any
  464f18:	add	x1, x1, #0x2
  464f1c:	str	x1, [x19, #24]
  464f20:	mov	x0, x19
  464f24:	mov	w1, #0x45                  	// #69
  464f28:	bl	464728 <_obstack_memory_used@@Base+0x32e0>
  464f2c:	mov	x3, x0
  464f30:	b	464b20 <_obstack_memory_used@@Base+0x36d8>
  464f34:	add	x1, x1, #0x1
  464f38:	mov	x3, #0x0                   	// #0
  464f3c:	str	x1, [x19, #24]
  464f40:	b	464b20 <_obstack_memory_used@@Base+0x36d8>
  464f44:	nop
  464f48:	ldr	x2, [x0, #24]
  464f4c:	ldrb	w1, [x2]
  464f50:	cmp	w1, #0x4c
  464f54:	b.eq	4650e4 <_obstack_memory_used@@Base+0x3c9c>  // b.none
  464f58:	cmp	w1, #0x54
  464f5c:	b.eq	465168 <_obstack_memory_used@@Base+0x3d20>  // b.none
  464f60:	stp	x29, x30, [sp, #-48]!
  464f64:	cmp	w1, #0x73
  464f68:	mov	x29, sp
  464f6c:	stp	x19, x20, [sp, #16]
  464f70:	mov	x19, x0
  464f74:	b.eq	46502c <_obstack_memory_used@@Base+0x3be4>  // b.none
  464f78:	cmp	w1, #0x66
  464f7c:	b.eq	464fc0 <_obstack_memory_used@@Base+0x3b78>  // b.none
  464f80:	sub	w3, w1, #0x30
  464f84:	and	w3, w3, #0xff
  464f88:	cmp	w3, #0x9
  464f8c:	b.hi	4650e8 <_obstack_memory_used@@Base+0x3ca0>  // b.pmore
  464f90:	mov	x0, x19
  464f94:	bl	467810 <_obstack_memory_used@@Base+0x63c8>
  464f98:	mov	x20, x0
  464f9c:	cbz	x0, 4650d0 <_obstack_memory_used@@Base+0x3c88>
  464fa0:	ldr	x0, [x19, #24]
  464fa4:	ldrb	w1, [x0]
  464fa8:	cmp	w1, #0x49
  464fac:	b.eq	465240 <_obstack_memory_used@@Base+0x3df8>  // b.none
  464fb0:	mov	x0, x20
  464fb4:	ldp	x19, x20, [sp, #16]
  464fb8:	ldp	x29, x30, [sp], #48
  464fbc:	ret
  464fc0:	ldrb	w1, [x2, #1]
  464fc4:	cmp	w1, #0x70
  464fc8:	b.eq	465068 <_obstack_memory_used@@Base+0x3c20>  // b.none
  464fcc:	mov	x0, x19
  464fd0:	bl	467148 <_obstack_memory_used@@Base+0x5d00>
  464fd4:	mov	x20, x0
  464fd8:	cbz	x0, 4650d0 <_obstack_memory_used@@Base+0x3c88>
  464fdc:	ldr	w0, [x0]
  464fe0:	cmp	w0, #0x32
  464fe4:	b.eq	46516c <_obstack_memory_used@@Base+0x3d24>  // b.none
  464fe8:	cmp	w0, #0x34
  464fec:	b.eq	465598 <_obstack_memory_used@@Base+0x4150>  // b.none
  464ff0:	b.hi	4650d0 <_obstack_memory_used@@Base+0x3c88>  // b.pmore
  464ff4:	cmp	w0, #0x33
  464ff8:	b.ne	4650d0 <_obstack_memory_used@@Base+0x3c88>  // b.any
  464ffc:	ldr	w0, [x20, #8]
  465000:	cmp	w0, #0x2
  465004:	b.eq	4650d0 <_obstack_memory_used@@Base+0x3c88>  // b.none
  465008:	b.gt	4650d0 <_obstack_memory_used@@Base+0x3c88>
  46500c:	cbnz	w0, 465334 <_obstack_memory_used@@Base+0x3eec>
  465010:	mov	x2, x20
  465014:	mov	x0, x19
  465018:	ldp	x19, x20, [sp, #16]
  46501c:	mov	x3, #0x0                   	// #0
  465020:	ldp	x29, x30, [sp], #48
  465024:	mov	w1, #0x36                  	// #54
  465028:	b	463a40 <_obstack_memory_used@@Base+0x25f8>
  46502c:	ldrb	w1, [x2, #1]
  465030:	cmp	w1, #0x72
  465034:	b.eq	46526c <_obstack_memory_used@@Base+0x3e24>  // b.none
  465038:	cmp	w1, #0x70
  46503c:	b.ne	464fcc <_obstack_memory_used@@Base+0x3b84>  // b.any
  465040:	add	x2, x2, #0x2
  465044:	str	x2, [x0, #24]
  465048:	bl	464f48 <_obstack_memory_used@@Base+0x3b00>
  46504c:	mov	x2, x0
  465050:	mov	x0, x19
  465054:	mov	x3, #0x0                   	// #0
  465058:	ldp	x19, x20, [sp, #16]
  46505c:	mov	w1, #0x4b                  	// #75
  465060:	ldp	x29, x30, [sp], #48
  465064:	b	463a40 <_obstack_memory_used@@Base+0x25f8>
  465068:	add	x1, x2, #0x2
  46506c:	str	x1, [x0, #24]
  465070:	ldrb	w1, [x2, #2]
  465074:	cmp	w1, #0x54
  465078:	b.eq	4653f8 <_obstack_memory_used@@Base+0x3fb0>  // b.none
  46507c:	bl	463df8 <_obstack_memory_used@@Base+0x29b0>
  465080:	mvn	x1, x0
  465084:	add	w0, w0, #0x1
  465088:	tst	x1, #0x7fffffff
  46508c:	b.eq	4650d0 <_obstack_memory_used@@Base+0x3c88>  // b.none
  465090:	ldp	w1, w2, [x19, #40]
  465094:	cmp	w1, w2
  465098:	b.ge	4650d0 <_obstack_memory_used@@Base+0x3c88>  // b.tcont
  46509c:	mov	w3, #0x18                  	// #24
  4650a0:	add	w4, w1, #0x1
  4650a4:	ldr	x2, [x19, #32]
  4650a8:	smull	x1, w1, w3
  4650ac:	mov	w3, #0x6                   	// #6
  4650b0:	sxtw	x0, w0
  4650b4:	add	x20, x2, x1
  4650b8:	str	wzr, [x20, #4]
  4650bc:	str	w4, [x19, #40]
  4650c0:	str	w3, [x2, x1]
  4650c4:	str	x0, [x20, #8]
  4650c8:	b	464fb0 <_obstack_memory_used@@Base+0x3b68>
  4650cc:	ldp	x21, x22, [sp, #32]
  4650d0:	mov	x20, #0x0                   	// #0
  4650d4:	mov	x0, x20
  4650d8:	ldp	x19, x20, [sp, #16]
  4650dc:	ldp	x29, x30, [sp], #48
  4650e0:	ret
  4650e4:	b	467cf0 <_obstack_memory_used@@Base+0x68a8>
  4650e8:	cmp	w1, #0x6f
  4650ec:	b.ne	465108 <_obstack_memory_used@@Base+0x3cc0>  // b.any
  4650f0:	ldrb	w0, [x2, #1]
  4650f4:	cmp	w0, #0x6e
  4650f8:	b.ne	464fcc <_obstack_memory_used@@Base+0x3b84>  // b.any
  4650fc:	add	x2, x2, #0x2
  465100:	str	x2, [x19, #24]
  465104:	b	464f90 <_obstack_memory_used@@Base+0x3b48>
  465108:	cmp	w1, #0x69
  46510c:	mov	w3, #0x74                  	// #116
  465110:	ccmp	w1, w3, #0x4, ne  // ne = any
  465114:	b.ne	464fcc <_obstack_memory_used@@Base+0x3b84>  // b.any
  465118:	ldrb	w3, [x2, #1]
  46511c:	cmp	w3, #0x6c
  465120:	b.ne	464fcc <_obstack_memory_used@@Base+0x3b84>  // b.any
  465124:	add	x3, x2, #0x2
  465128:	str	x3, [x0, #24]
  46512c:	cmp	w1, #0x74
  465130:	mov	x20, #0x0                   	// #0
  465134:	b.eq	465324 <_obstack_memory_used@@Base+0x3edc>  // b.none
  465138:	ldrb	w0, [x3, #1]
  46513c:	cbz	w0, 4650d0 <_obstack_memory_used@@Base+0x3c88>
  465140:	mov	x0, x19
  465144:	mov	w1, #0x45                  	// #69
  465148:	bl	464728 <_obstack_memory_used@@Base+0x32e0>
  46514c:	mov	x3, x0
  465150:	mov	x2, x20
  465154:	mov	x0, x19
  465158:	ldp	x19, x20, [sp, #16]
  46515c:	mov	w1, #0x31                  	// #49
  465160:	ldp	x29, x30, [sp], #48
  465164:	b	463a40 <_obstack_memory_used@@Base+0x25f8>
  465168:	b	463e70 <_obstack_memory_used@@Base+0x2a28>
  46516c:	ldr	x2, [x20, #8]
  465170:	stp	x21, x22, [sp, #32]
  465174:	ldr	w0, [x19, #72]
  465178:	ldr	w1, [x2, #16]
  46517c:	ldr	x21, [x2]
  465180:	sub	w1, w1, #0x2
  465184:	add	w0, w0, w1
  465188:	str	w0, [x19, #72]
  46518c:	ldrb	w1, [x21]
  465190:	cmp	w1, #0x73
  465194:	b.eq	4652bc <_obstack_memory_used@@Base+0x3e74>  // b.none
  465198:	ldr	w22, [x2, #20]
  46519c:	cmp	w22, #0x1
  4651a0:	b.eq	46536c <_obstack_memory_used@@Base+0x3f24>  // b.none
  4651a4:	b.le	465360 <_obstack_memory_used@@Base+0x3f18>
  4651a8:	cmp	w22, #0x2
  4651ac:	b.eq	465424 <_obstack_memory_used@@Base+0x3fdc>  // b.none
  4651b0:	cmp	w22, #0x3
  4651b4:	b.ne	4650cc <_obstack_memory_used@@Base+0x3c84>  // b.any
  4651b8:	cmp	w1, #0x71
  4651bc:	b.ne	4654b4 <_obstack_memory_used@@Base+0x406c>  // b.any
  4651c0:	ldrb	w0, [x21, #1]
  4651c4:	cmp	w0, #0x75
  4651c8:	b.ne	4654b4 <_obstack_memory_used@@Base+0x406c>  // b.any
  4651cc:	ldrb	w0, [x21, #2]
  4651d0:	cbnz	w0, 4654b4 <_obstack_memory_used@@Base+0x406c>
  4651d4:	mov	x0, x19
  4651d8:	bl	464f48 <_obstack_memory_used@@Base+0x3b00>
  4651dc:	mov	x21, x0
  4651e0:	mov	x0, x19
  4651e4:	bl	464f48 <_obstack_memory_used@@Base+0x3b00>
  4651e8:	mov	x22, x0
  4651ec:	mov	x0, x19
  4651f0:	bl	464f48 <_obstack_memory_used@@Base+0x3b00>
  4651f4:	mov	x3, x0
  4651f8:	cbz	x0, 4650cc <_obstack_memory_used@@Base+0x3c84>
  4651fc:	mov	x2, x22
  465200:	mov	x0, x19
  465204:	mov	w1, #0x3c                  	// #60
  465208:	bl	463a40 <_obstack_memory_used@@Base+0x25f8>
  46520c:	mov	x2, x21
  465210:	mov	x3, x0
  465214:	mov	w1, #0x3b                  	// #59
  465218:	mov	x0, x19
  46521c:	bl	463a40 <_obstack_memory_used@@Base+0x25f8>
  465220:	mov	x3, x0
  465224:	mov	x2, x20
  465228:	mov	x0, x19
  46522c:	ldp	x19, x20, [sp, #16]
  465230:	mov	w1, #0x3a                  	// #58
  465234:	ldp	x21, x22, [sp, #32]
  465238:	ldp	x29, x30, [sp], #48
  46523c:	b	463a40 <_obstack_memory_used@@Base+0x25f8>
  465240:	add	x0, x0, #0x1
  465244:	str	x0, [x19, #24]
  465248:	mov	x0, x19
  46524c:	bl	465720 <_obstack_memory_used@@Base+0x42d8>
  465250:	mov	x3, x0
  465254:	mov	x2, x20
  465258:	mov	x0, x19
  46525c:	ldp	x19, x20, [sp, #16]
  465260:	mov	w1, #0x4                   	// #4
  465264:	ldp	x29, x30, [sp], #48
  465268:	b	463a40 <_obstack_memory_used@@Base+0x25f8>
  46526c:	add	x2, x2, #0x2
  465270:	stp	x21, x22, [sp, #32]
  465274:	str	x2, [x0, #24]
  465278:	bl	466560 <_obstack_memory_used@@Base+0x5118>
  46527c:	mov	x20, x0
  465280:	mov	x0, x19
  465284:	bl	467810 <_obstack_memory_used@@Base+0x63c8>
  465288:	ldr	x1, [x19, #24]
  46528c:	mov	x21, x0
  465290:	mov	x3, x21
  465294:	ldrb	w0, [x1]
  465298:	cmp	w0, #0x49
  46529c:	b.eq	4652f8 <_obstack_memory_used@@Base+0x3eb0>  // b.none
  4652a0:	mov	x2, x20
  4652a4:	mov	x0, x19
  4652a8:	ldp	x19, x20, [sp, #16]
  4652ac:	mov	w1, #0x1                   	// #1
  4652b0:	ldp	x21, x22, [sp, #32]
  4652b4:	ldp	x29, x30, [sp], #48
  4652b8:	b	463a40 <_obstack_memory_used@@Base+0x25f8>
  4652bc:	ldrb	w0, [x21, #1]
  4652c0:	cmp	w0, #0x74
  4652c4:	b.ne	465198 <_obstack_memory_used@@Base+0x3d50>  // b.any
  4652c8:	ldrb	w0, [x21, #2]
  4652cc:	cbnz	w0, 465198 <_obstack_memory_used@@Base+0x3d50>
  4652d0:	mov	x0, x19
  4652d4:	bl	466560 <_obstack_memory_used@@Base+0x5118>
  4652d8:	mov	x2, x20
  4652dc:	mov	x3, x0
  4652e0:	mov	x0, x19
  4652e4:	mov	w1, #0x37                  	// #55
  4652e8:	ldp	x19, x20, [sp, #16]
  4652ec:	ldp	x21, x22, [sp, #32]
  4652f0:	ldp	x29, x30, [sp], #48
  4652f4:	b	463a40 <_obstack_memory_used@@Base+0x25f8>
  4652f8:	add	x1, x1, #0x1
  4652fc:	str	x1, [x19, #24]
  465300:	mov	x0, x19
  465304:	bl	465720 <_obstack_memory_used@@Base+0x42d8>
  465308:	mov	x3, x0
  46530c:	mov	x2, x21
  465310:	mov	x0, x19
  465314:	mov	w1, #0x4                   	// #4
  465318:	bl	463a40 <_obstack_memory_used@@Base+0x25f8>
  46531c:	mov	x3, x0
  465320:	b	4652a0 <_obstack_memory_used@@Base+0x3e58>
  465324:	bl	466560 <_obstack_memory_used@@Base+0x5118>
  465328:	mov	x20, x0
  46532c:	ldr	x3, [x19, #24]
  465330:	b	465138 <_obstack_memory_used@@Base+0x3cf0>
  465334:	cmp	w0, #0x1
  465338:	b.ne	4650d0 <_obstack_memory_used@@Base+0x3c88>  // b.any
  46533c:	mov	x0, x19
  465340:	bl	464f48 <_obstack_memory_used@@Base+0x3b00>
  465344:	mov	x3, x0
  465348:	mov	x2, x20
  46534c:	mov	x0, x19
  465350:	ldp	x19, x20, [sp, #16]
  465354:	mov	w1, #0x37                  	// #55
  465358:	ldp	x29, x30, [sp], #48
  46535c:	b	463a40 <_obstack_memory_used@@Base+0x25f8>
  465360:	cbnz	w22, 4650cc <_obstack_memory_used@@Base+0x3c84>
  465364:	ldp	x21, x22, [sp, #32]
  465368:	b	465010 <_obstack_memory_used@@Base+0x3bc8>
  46536c:	ldrb	w0, [x21]
  465370:	mov	w2, #0x6d                  	// #109
  465374:	cmp	w0, #0x70
  465378:	ccmp	w0, w2, #0x4, ne  // ne = any
  46537c:	b.ne	46538c <_obstack_memory_used@@Base+0x3f44>  // b.any
  465380:	ldrb	w2, [x21, #1]
  465384:	cmp	w2, w0
  465388:	b.eq	4653c4 <_obstack_memory_used@@Base+0x3f7c>  // b.none
  46538c:	mov	w22, #0x0                   	// #0
  465390:	cmp	w1, #0x73
  465394:	b.ne	4653e8 <_obstack_memory_used@@Base+0x3fa0>  // b.any
  465398:	ldrb	w0, [x21, #1]
  46539c:	cmp	w0, #0x50
  4653a0:	b.ne	4653e8 <_obstack_memory_used@@Base+0x3fa0>  // b.any
  4653a4:	ldrb	w0, [x21, #2]
  4653a8:	cbnz	w0, 4653e8 <_obstack_memory_used@@Base+0x3fa0>
  4653ac:	mov	x0, x19
  4653b0:	bl	465720 <_obstack_memory_used@@Base+0x42d8>
  4653b4:	mov	x3, x0
  4653b8:	cbnz	w22, 465408 <_obstack_memory_used@@Base+0x3fc0>
  4653bc:	ldp	x21, x22, [sp, #32]
  4653c0:	b	465348 <_obstack_memory_used@@Base+0x3f00>
  4653c4:	ldr	x0, [x19, #24]
  4653c8:	ldrb	w2, [x0]
  4653cc:	cmp	w2, #0x5f
  4653d0:	b.ne	465390 <_obstack_memory_used@@Base+0x3f48>  // b.any
  4653d4:	add	x0, x0, #0x1
  4653d8:	str	x0, [x19, #24]
  4653dc:	mov	w22, #0x0                   	// #0
  4653e0:	ldrb	w1, [x21]
  4653e4:	b	465390 <_obstack_memory_used@@Base+0x3f48>
  4653e8:	mov	x0, x19
  4653ec:	bl	464f48 <_obstack_memory_used@@Base+0x3b00>
  4653f0:	mov	x3, x0
  4653f4:	b	4653b8 <_obstack_memory_used@@Base+0x3f70>
  4653f8:	add	x2, x2, #0x3
  4653fc:	mov	w0, #0x0                   	// #0
  465400:	str	x2, [x19, #24]
  465404:	b	465090 <_obstack_memory_used@@Base+0x3c48>
  465408:	mov	x2, x3
  46540c:	mov	x0, x19
  465410:	mov	w1, #0x39                  	// #57
  465414:	bl	463a40 <_obstack_memory_used@@Base+0x25f8>
  465418:	mov	x3, x0
  46541c:	ldp	x21, x22, [sp, #32]
  465420:	b	465348 <_obstack_memory_used@@Base+0x3f00>
  465424:	ldr	x0, [x20, #8]
  465428:	ldr	x0, [x0]
  46542c:	ldrb	w1, [x0, #1]
  465430:	cmp	w1, #0x63
  465434:	b.eq	4655dc <_obstack_memory_used@@Base+0x4194>  // b.none
  465438:	ldrb	w0, [x21]
  46543c:	cmp	w0, #0x66
  465440:	b.eq	46560c <_obstack_memory_used@@Base+0x41c4>  // b.none
  465444:	mov	x0, x19
  465448:	bl	464f48 <_obstack_memory_used@@Base+0x3b00>
  46544c:	mov	x22, x0
  465450:	ldrb	w1, [x21]
  465454:	cmp	w1, #0x63
  465458:	b.ne	465534 <_obstack_memory_used@@Base+0x40ec>  // b.any
  46545c:	ldrb	w0, [x21, #1]
  465460:	cmp	w0, #0x6c
  465464:	b.ne	465534 <_obstack_memory_used@@Base+0x40ec>  // b.any
  465468:	ldrb	w0, [x21, #2]
  46546c:	cbnz	w0, 465534 <_obstack_memory_used@@Base+0x40ec>
  465470:	mov	x0, x19
  465474:	mov	w1, #0x45                  	// #69
  465478:	bl	464728 <_obstack_memory_used@@Base+0x32e0>
  46547c:	mov	x21, x0
  465480:	mov	x3, x21
  465484:	mov	x2, x22
  465488:	mov	x0, x19
  46548c:	mov	w1, #0x39                  	// #57
  465490:	bl	463a40 <_obstack_memory_used@@Base+0x25f8>
  465494:	mov	x3, x0
  465498:	mov	x2, x20
  46549c:	mov	x0, x19
  4654a0:	ldp	x19, x20, [sp, #16]
  4654a4:	mov	w1, #0x38                  	// #56
  4654a8:	ldp	x21, x22, [sp, #32]
  4654ac:	ldp	x29, x30, [sp], #48
  4654b0:	b	463a40 <_obstack_memory_used@@Base+0x25f8>
  4654b4:	ldrb	w0, [x21]
  4654b8:	cmp	w0, #0x66
  4654bc:	b.eq	465634 <_obstack_memory_used@@Base+0x41ec>  // b.none
  4654c0:	cmp	w0, #0x6e
  4654c4:	b.ne	4650cc <_obstack_memory_used@@Base+0x3c84>  // b.any
  4654c8:	ldrb	w0, [x21, #1]
  4654cc:	mov	w1, #0x61                  	// #97
  4654d0:	cmp	w0, #0x77
  4654d4:	ccmp	w0, w1, #0x4, ne  // ne = any
  4654d8:	b.ne	4650cc <_obstack_memory_used@@Base+0x3c84>  // b.any
  4654dc:	mov	w1, #0x5f                  	// #95
  4654e0:	mov	x0, x19
  4654e4:	bl	464728 <_obstack_memory_used@@Base+0x32e0>
  4654e8:	mov	x21, x0
  4654ec:	mov	x0, x19
  4654f0:	bl	466560 <_obstack_memory_used@@Base+0x5118>
  4654f4:	ldr	x1, [x19, #24]
  4654f8:	mov	x22, x0
  4654fc:	ldrb	w0, [x1]
  465500:	cmp	w0, #0x45
  465504:	b.eq	465668 <_obstack_memory_used@@Base+0x4220>  // b.none
  465508:	cmp	w0, #0x70
  46550c:	b.eq	465640 <_obstack_memory_used@@Base+0x41f8>  // b.none
  465510:	cmp	w0, #0x69
  465514:	b.ne	4650cc <_obstack_memory_used@@Base+0x3c84>  // b.any
  465518:	ldrb	w0, [x1, #1]
  46551c:	cmp	w0, #0x6c
  465520:	b.ne	4650cc <_obstack_memory_used@@Base+0x3c84>  // b.any
  465524:	mov	x0, x19
  465528:	bl	464f48 <_obstack_memory_used@@Base+0x3b00>
  46552c:	mov	x3, x0
  465530:	b	4651fc <_obstack_memory_used@@Base+0x3db4>
  465534:	cmp	w1, #0x64
  465538:	b.ne	4655c4 <_obstack_memory_used@@Base+0x417c>  // b.any
  46553c:	ldrb	w0, [x21, #1]
  465540:	cmp	w0, #0x74
  465544:	b.ne	4655c4 <_obstack_memory_used@@Base+0x417c>  // b.any
  465548:	ldrb	w0, [x21, #2]
  46554c:	cbnz	w0, 4655c4 <_obstack_memory_used@@Base+0x417c>
  465550:	mov	x0, x19
  465554:	bl	467810 <_obstack_memory_used@@Base+0x63c8>
  465558:	ldr	x1, [x19, #24]
  46555c:	mov	x21, x0
  465560:	ldrb	w0, [x1]
  465564:	cmp	w0, #0x49
  465568:	b.ne	465480 <_obstack_memory_used@@Base+0x4038>  // b.any
  46556c:	add	x1, x1, #0x1
  465570:	str	x1, [x19, #24]
  465574:	mov	x0, x19
  465578:	bl	465720 <_obstack_memory_used@@Base+0x42d8>
  46557c:	mov	x3, x0
  465580:	mov	x2, x21
  465584:	mov	x0, x19
  465588:	mov	w1, #0x4                   	// #4
  46558c:	bl	463a40 <_obstack_memory_used@@Base+0x25f8>
  465590:	mov	x21, x0
  465594:	b	465480 <_obstack_memory_used@@Base+0x4038>
  465598:	ldr	x0, [x19, #24]
  46559c:	ldrb	w1, [x0]
  4655a0:	cmp	w1, #0x5f
  4655a4:	b.ne	46533c <_obstack_memory_used@@Base+0x3ef4>  // b.any
  4655a8:	add	x0, x0, #0x1
  4655ac:	str	x0, [x19, #24]
  4655b0:	mov	w1, #0x45                  	// #69
  4655b4:	mov	x0, x19
  4655b8:	bl	464728 <_obstack_memory_used@@Base+0x32e0>
  4655bc:	mov	x3, x0
  4655c0:	b	465348 <_obstack_memory_used@@Base+0x3f00>
  4655c4:	cmp	w1, #0x70
  4655c8:	b.eq	46561c <_obstack_memory_used@@Base+0x41d4>  // b.none
  4655cc:	mov	x0, x19
  4655d0:	bl	464f48 <_obstack_memory_used@@Base+0x3b00>
  4655d4:	mov	x21, x0
  4655d8:	b	465480 <_obstack_memory_used@@Base+0x4038>
  4655dc:	ldrb	w0, [x0]
  4655e0:	sub	w1, w0, #0x63
  4655e4:	sub	w0, w0, #0x72
  4655e8:	and	w1, w1, #0xff
  4655ec:	and	w0, w0, #0xff
  4655f0:	cmp	w1, #0x1
  4655f4:	ccmp	w0, #0x1, #0x0, hi  // hi = pmore
  4655f8:	b.hi	465438 <_obstack_memory_used@@Base+0x3ff0>  // b.pmore
  4655fc:	mov	x0, x19
  465600:	bl	466560 <_obstack_memory_used@@Base+0x5118>
  465604:	mov	x22, x0
  465608:	b	465450 <_obstack_memory_used@@Base+0x4008>
  46560c:	mov	x0, x19
  465610:	bl	467148 <_obstack_memory_used@@Base+0x5d00>
  465614:	mov	x22, x0
  465618:	b	465450 <_obstack_memory_used@@Base+0x4008>
  46561c:	ldrb	w0, [x21, #1]
  465620:	cmp	w0, #0x74
  465624:	b.ne	4655cc <_obstack_memory_used@@Base+0x4184>  // b.any
  465628:	ldrb	w0, [x21, #2]
  46562c:	cbz	w0, 465550 <_obstack_memory_used@@Base+0x4108>
  465630:	b	4655cc <_obstack_memory_used@@Base+0x4184>
  465634:	mov	x0, x19
  465638:	bl	467148 <_obstack_memory_used@@Base+0x5d00>
  46563c:	b	4651dc <_obstack_memory_used@@Base+0x3d94>
  465640:	ldrb	w0, [x1, #1]
  465644:	cmp	w0, #0x69
  465648:	b.ne	4650cc <_obstack_memory_used@@Base+0x3c84>  // b.any
  46564c:	add	x1, x1, #0x2
  465650:	str	x1, [x19, #24]
  465654:	mov	x0, x19
  465658:	mov	w1, #0x45                  	// #69
  46565c:	bl	464728 <_obstack_memory_used@@Base+0x32e0>
  465660:	mov	x3, x0
  465664:	b	4651fc <_obstack_memory_used@@Base+0x3db4>
  465668:	add	x1, x1, #0x1
  46566c:	mov	x3, #0x0                   	// #0
  465670:	str	x1, [x19, #24]
  465674:	b	4651fc <_obstack_memory_used@@Base+0x3db4>
  465678:	ldr	x2, [x0, #24]
  46567c:	ldrb	w1, [x2]
  465680:	cmp	w1, #0x4c
  465684:	b.eq	465710 <_obstack_memory_used@@Base+0x42c8>  // b.none
  465688:	stp	x29, x30, [sp, #-32]!
  46568c:	mov	x29, sp
  465690:	stp	x19, x20, [sp, #16]
  465694:	mov	x19, x0
  465698:	b.hi	4656b8 <_obstack_memory_used@@Base+0x4270>  // b.pmore
  46569c:	sub	w1, w1, #0x49
  4656a0:	and	w1, w1, #0xff
  4656a4:	cmp	w1, #0x1
  4656a8:	b.hi	465700 <_obstack_memory_used@@Base+0x42b8>  // b.pmore
  4656ac:	ldp	x19, x20, [sp, #16]
  4656b0:	ldp	x29, x30, [sp], #32
  4656b4:	b	4657e8 <_obstack_memory_used@@Base+0x43a0>
  4656b8:	cmp	w1, #0x58
  4656bc:	b.ne	465700 <_obstack_memory_used@@Base+0x42b8>  // b.any
  4656c0:	add	x2, x2, #0x1
  4656c4:	ldr	w20, [x0, #76]
  4656c8:	mov	w1, #0x1                   	// #1
  4656cc:	str	x2, [x0, #24]
  4656d0:	str	w1, [x0, #76]
  4656d4:	bl	464f48 <_obstack_memory_used@@Base+0x3b00>
  4656d8:	str	w20, [x19, #76]
  4656dc:	ldr	x1, [x19, #24]
  4656e0:	ldrb	w2, [x1]
  4656e4:	cmp	w2, #0x45
  4656e8:	b.ne	465714 <_obstack_memory_used@@Base+0x42cc>  // b.any
  4656ec:	add	x1, x1, #0x1
  4656f0:	str	x1, [x19, #24]
  4656f4:	ldp	x19, x20, [sp, #16]
  4656f8:	ldp	x29, x30, [sp], #32
  4656fc:	ret
  465700:	mov	x0, x19
  465704:	ldp	x19, x20, [sp, #16]
  465708:	ldp	x29, x30, [sp], #32
  46570c:	b	466560 <_obstack_memory_used@@Base+0x5118>
  465710:	b	467cf0 <_obstack_memory_used@@Base+0x68a8>
  465714:	mov	x0, #0x0                   	// #0
  465718:	b	4656f4 <_obstack_memory_used@@Base+0x42ac>
  46571c:	nop
  465720:	stp	x29, x30, [sp, #-64]!
  465724:	mov	x29, sp
  465728:	ldr	x1, [x0, #24]
  46572c:	stp	x19, x20, [sp, #16]
  465730:	mov	x19, x0
  465734:	str	x21, [sp, #32]
  465738:	ldr	x21, [x0, #64]
  46573c:	ldrb	w2, [x1]
  465740:	cmp	w2, #0x45
  465744:	b.eq	4657c4 <_obstack_memory_used@@Base+0x437c>  // b.none
  465748:	add	x20, sp, #0x38
  46574c:	str	xzr, [sp, #56]
  465750:	b	465774 <_obstack_memory_used@@Base+0x432c>
  465754:	bl	463a40 <_obstack_memory_used@@Base+0x25f8>
  465758:	str	x0, [x20]
  46575c:	add	x20, x0, #0x10
  465760:	cbz	x0, 465790 <_obstack_memory_used@@Base+0x4348>
  465764:	ldr	x1, [x19, #24]
  465768:	ldrb	w0, [x1]
  46576c:	cmp	w0, #0x45
  465770:	b.eq	4657a4 <_obstack_memory_used@@Base+0x435c>  // b.none
  465774:	mov	x0, x19
  465778:	bl	465678 <_obstack_memory_used@@Base+0x4230>
  46577c:	mov	x3, #0x0                   	// #0
  465780:	mov	x2, x0
  465784:	mov	w1, #0x2f                  	// #47
  465788:	mov	x0, x19
  46578c:	cbnz	x2, 465754 <_obstack_memory_used@@Base+0x430c>
  465790:	mov	x0, #0x0                   	// #0
  465794:	ldp	x19, x20, [sp, #16]
  465798:	ldr	x21, [sp, #32]
  46579c:	ldp	x29, x30, [sp], #64
  4657a0:	ret
  4657a4:	add	x1, x1, #0x1
  4657a8:	str	x1, [x19, #24]
  4657ac:	str	x21, [x19, #64]
  4657b0:	ldp	x19, x20, [sp, #16]
  4657b4:	ldr	x21, [sp, #32]
  4657b8:	ldr	x0, [sp, #56]
  4657bc:	ldp	x29, x30, [sp], #64
  4657c0:	ret
  4657c4:	add	x1, x1, #0x1
  4657c8:	mov	x3, #0x0                   	// #0
  4657cc:	ldr	x21, [sp, #32]
  4657d0:	str	x1, [x0, #24]
  4657d4:	ldp	x19, x20, [sp, #16]
  4657d8:	mov	x2, #0x0                   	// #0
  4657dc:	ldp	x29, x30, [sp], #64
  4657e0:	mov	w1, #0x2f                  	// #47
  4657e4:	b	463a40 <_obstack_memory_used@@Base+0x25f8>
  4657e8:	ldr	x3, [x0, #24]
  4657ec:	ldrb	w1, [x3]
  4657f0:	sub	w1, w1, #0x49
  4657f4:	and	w1, w1, #0xff
  4657f8:	cmp	w1, #0x1
  4657fc:	b.hi	46580c <_obstack_memory_used@@Base+0x43c4>  // b.pmore
  465800:	add	x3, x3, #0x1
  465804:	str	x3, [x0, #24]
  465808:	b	465720 <_obstack_memory_used@@Base+0x42d8>
  46580c:	mov	x0, #0x0                   	// #0
  465810:	ret
  465814:	nop
  465818:	stp	x29, x30, [sp, #-48]!
  46581c:	mov	w3, #0x54                  	// #84
  465820:	mov	x29, sp
  465824:	ldr	x2, [x0, #24]
  465828:	stp	x19, x20, [sp, #16]
  46582c:	mov	x19, x0
  465830:	str	x21, [sp, #32]
  465834:	mov	w21, w1
  465838:	ldrb	w1, [x2]
  46583c:	cmp	w1, #0x47
  465840:	ccmp	w1, w3, #0x4, ne  // ne = any
  465844:	b.ne	4658d0 <_obstack_memory_used@@Base+0x4488>  // b.any
  465848:	ldr	w3, [x0, #72]
  46584c:	add	w1, w3, #0x14
  465850:	str	w1, [x0, #72]
  465854:	ldrb	w1, [x2]
  465858:	cmp	w1, #0x54
  46585c:	b.eq	4659f4 <_obstack_memory_used@@Base+0x45ac>  // b.none
  465860:	cmp	w1, #0x47
  465864:	b.ne	4659dc <_obstack_memory_used@@Base+0x4594>  // b.any
  465868:	add	x1, x2, #0x1
  46586c:	str	x1, [x0, #24]
  465870:	ldrb	w1, [x2, #1]
  465874:	cbz	w1, 4659dc <_obstack_memory_used@@Base+0x4594>
  465878:	add	x1, x2, #0x2
  46587c:	str	x1, [x0, #24]
  465880:	ldrb	w1, [x2, #1]
  465884:	cmp	w1, #0x54
  465888:	b.eq	465d90 <_obstack_memory_used@@Base+0x4948>  // b.none
  46588c:	b.hi	465a5c <_obstack_memory_used@@Base+0x4614>  // b.pmore
  465890:	cmp	w1, #0x41
  465894:	b.eq	465dd8 <_obstack_memory_used@@Base+0x4990>  // b.none
  465898:	cmp	w1, #0x52
  46589c:	b.ne	4659dc <_obstack_memory_used@@Base+0x4594>  // b.any
  4658a0:	bl	465fd8 <_obstack_memory_used@@Base+0x4b90>
  4658a4:	mov	x11, x0
  4658a8:	mov	x0, x19
  4658ac:	bl	463d90 <_obstack_memory_used@@Base+0x2948>
  4658b0:	mov	x3, x0
  4658b4:	mov	x0, x19
  4658b8:	mov	x2, x11
  4658bc:	ldp	x19, x20, [sp, #16]
  4658c0:	mov	w1, #0x16                  	// #22
  4658c4:	ldr	x21, [sp, #32]
  4658c8:	ldp	x29, x30, [sp], #48
  4658cc:	b	463a40 <_obstack_memory_used@@Base+0x25f8>
  4658d0:	bl	465fd8 <_obstack_memory_used@@Base+0x4b90>
  4658d4:	mov	x20, x0
  4658d8:	cbz	x0, 4659dc <_obstack_memory_used@@Base+0x4594>
  4658dc:	cbz	w21, 46592c <_obstack_memory_used@@Base+0x44e4>
  4658e0:	ldr	w0, [x19, #16]
  4658e4:	tbnz	w0, #0, 46592c <_obstack_memory_used@@Base+0x44e4>
  4658e8:	mov	x1, #0x1f                  	// #31
  4658ec:	mov	x2, #0x1                   	// #1
  4658f0:	movk	x1, #0x1a, lsl #48
  4658f4:	ldr	w3, [x20]
  4658f8:	sub	w0, w3, #0x1c
  4658fc:	cmp	w0, #0x34
  465900:	b.hi	465910 <_obstack_memory_used@@Base+0x44c8>  // b.pmore
  465904:	lsl	x0, x2, x0
  465908:	tst	x0, x1
  46590c:	b.ne	465c44 <_obstack_memory_used@@Base+0x47fc>  // b.any
  465910:	cmp	w3, #0x2
  465914:	b.eq	465c4c <_obstack_memory_used@@Base+0x4804>  // b.none
  465918:	mov	x0, x20
  46591c:	ldp	x19, x20, [sp, #16]
  465920:	ldr	x21, [sp, #32]
  465924:	ldp	x29, x30, [sp], #48
  465928:	ret
  46592c:	ldr	x0, [x19, #24]
  465930:	ldrb	w0, [x0]
  465934:	cmp	w0, #0x45
  465938:	ccmp	w0, #0x0, #0x4, ne  // ne = any
  46593c:	b.eq	465918 <_obstack_memory_used@@Base+0x44d0>  // b.none
  465940:	mov	x1, #0x1f                  	// #31
  465944:	mov	x4, x20
  465948:	mov	x2, #0x1                   	// #1
  46594c:	movk	x1, #0x1a, lsl #48
  465950:	ldr	w3, [x4]
  465954:	cmp	w3, #0x4
  465958:	b.eq	465cc0 <_obstack_memory_used@@Base+0x4878>  // b.none
  46595c:	sub	w0, w3, #0x1c
  465960:	b.hi	465b50 <_obstack_memory_used@@Base+0x4708>  // b.pmore
  465964:	cmp	w3, #0x2
  465968:	b.ne	465974 <_obstack_memory_used@@Base+0x452c>  // b.any
  46596c:	ldr	x4, [x4, #16]
  465970:	cbnz	x4, 465950 <_obstack_memory_used@@Base+0x4508>
  465974:	mov	w1, #0x0                   	// #0
  465978:	mov	x0, x19
  46597c:	bl	4676a0 <_obstack_memory_used@@Base+0x6258>
  465980:	mov	x3, x0
  465984:	cbz	x0, 4659dc <_obstack_memory_used@@Base+0x4594>
  465988:	cbnz	w21, 4659a8 <_obstack_memory_used@@Base+0x4560>
  46598c:	ldr	w0, [x20]
  465990:	cmp	w0, #0x2
  465994:	b.ne	4659a8 <_obstack_memory_used@@Base+0x4560>  // b.any
  465998:	ldr	w0, [x3]
  46599c:	cmp	w0, #0x29
  4659a0:	b.ne	4659a8 <_obstack_memory_used@@Base+0x4560>  // b.any
  4659a4:	str	xzr, [x3, #8]
  4659a8:	mov	x2, x20
  4659ac:	mov	x0, x19
  4659b0:	ldp	x19, x20, [sp, #16]
  4659b4:	mov	w1, #0x3                   	// #3
  4659b8:	ldr	x21, [sp, #32]
  4659bc:	ldp	x29, x30, [sp], #48
  4659c0:	b	463a40 <_obstack_memory_used@@Base+0x25f8>
  4659c4:	cmp	w1, #0x68
  4659c8:	b.eq	465f6c <_obstack_memory_used@@Base+0x4b24>  // b.none
  4659cc:	cmp	w1, #0x76
  4659d0:	b.ne	4659dc <_obstack_memory_used@@Base+0x4594>  // b.any
  4659d4:	bl	464358 <_obstack_memory_used@@Base+0x2f10>
  4659d8:	cbnz	w0, 465c94 <_obstack_memory_used@@Base+0x484c>
  4659dc:	mov	x20, #0x0                   	// #0
  4659e0:	mov	x0, x20
  4659e4:	ldp	x19, x20, [sp, #16]
  4659e8:	ldr	x21, [sp, #32]
  4659ec:	ldp	x29, x30, [sp], #48
  4659f0:	ret
  4659f4:	add	x1, x2, #0x1
  4659f8:	str	x1, [x0, #24]
  4659fc:	ldrb	w1, [x2, #1]
  465a00:	cbz	w1, 4659dc <_obstack_memory_used@@Base+0x4594>
  465a04:	add	x1, x2, #0x2
  465a08:	str	x1, [x0, #24]
  465a0c:	ldrb	w1, [x2, #1]
  465a10:	cmp	w1, #0x53
  465a14:	b.eq	465edc <_obstack_memory_used@@Base+0x4a94>  // b.none
  465a18:	b.hi	465bd0 <_obstack_memory_used@@Base+0x4788>  // b.pmore
  465a1c:	cmp	w1, #0x48
  465a20:	b.eq	465eb8 <_obstack_memory_used@@Base+0x4a70>  // b.none
  465a24:	b.hi	465b9c <_obstack_memory_used@@Base+0x4754>  // b.pmore
  465a28:	cmp	w1, #0x43
  465a2c:	b.eq	465e58 <_obstack_memory_used@@Base+0x4a10>  // b.none
  465a30:	cmp	w1, #0x46
  465a34:	b.ne	465b70 <_obstack_memory_used@@Base+0x4728>  // b.any
  465a38:	bl	466560 <_obstack_memory_used@@Base+0x5118>
  465a3c:	mov	x2, x0
  465a40:	mov	x0, x19
  465a44:	mov	x3, #0x0                   	// #0
  465a48:	ldp	x19, x20, [sp, #16]
  465a4c:	mov	w1, #0xe                   	// #14
  465a50:	ldr	x21, [sp, #32]
  465a54:	ldp	x29, x30, [sp], #48
  465a58:	b	463a40 <_obstack_memory_used@@Base+0x25f8>
  465a5c:	cmp	w1, #0x56
  465a60:	b.eq	465d6c <_obstack_memory_used@@Base+0x4924>  // b.none
  465a64:	cmp	w1, #0x72
  465a68:	b.ne	4659dc <_obstack_memory_used@@Base+0x4594>  // b.any
  465a6c:	add	x0, x0, #0x18
  465a70:	bl	463cc0 <_obstack_memory_used@@Base+0x2878>
  465a74:	cmp	w0, #0x1
  465a78:	b.le	4659dc <_obstack_memory_used@@Base+0x4594>
  465a7c:	ldr	x1, [x19, #24]
  465a80:	ldrb	w2, [x1]
  465a84:	cbz	w2, 4659dc <_obstack_memory_used@@Base+0x4594>
  465a88:	add	x8, x1, #0x1
  465a8c:	str	x8, [x19, #24]
  465a90:	ldrb	w1, [x1]
  465a94:	cmp	w1, #0x5f
  465a98:	b.ne	4659dc <_obstack_memory_used@@Base+0x4594>  // b.any
  465a9c:	sub	w9, w0, #0x1
  465aa0:	mov	x2, #0x0                   	// #0
  465aa4:	mov	w11, #0x18                  	// #24
  465aa8:	mov	w10, #0x41                  	// #65
  465aac:	ldrb	w0, [x8]
  465ab0:	cbz	w0, 4659dc <_obstack_memory_used@@Base+0x4594>
  465ab4:	cmp	w0, #0x24
  465ab8:	b.ne	465d04 <_obstack_memory_used@@Base+0x48bc>  // b.any
  465abc:	ldrb	w0, [x8, #1]
  465ac0:	cmp	w0, #0x53
  465ac4:	b.eq	465e10 <_obstack_memory_used@@Base+0x49c8>  // b.none
  465ac8:	cmp	w0, #0x5f
  465acc:	b.eq	465e08 <_obstack_memory_used@@Base+0x49c0>  // b.none
  465ad0:	cmp	w0, #0x24
  465ad4:	b.ne	4659dc <_obstack_memory_used@@Base+0x4594>  // b.any
  465ad8:	ldp	w1, w3, [x19, #40]
  465adc:	ldr	x8, [x19, #24]
  465ae0:	cmp	w1, w3
  465ae4:	add	x8, x8, #0x2
  465ae8:	b.ge	465fa0 <_obstack_memory_used@@Base+0x4b58>  // b.tcont
  465aec:	ldr	x5, [x19, #32]
  465af0:	smull	x4, w1, w11
  465af4:	add	w1, w1, #0x1
  465af8:	sub	w9, w9, #0x2
  465afc:	add	x3, x5, x4
  465b00:	str	wzr, [x3, #4]
  465b04:	str	w1, [x19, #40]
  465b08:	str	w10, [x5, x4]
  465b0c:	str	w0, [x3, #8]
  465b10:	str	x8, [x19, #24]
  465b14:	cbz	x2, 465e00 <_obstack_memory_used@@Base+0x49b8>
  465b18:	mov	x0, x19
  465b1c:	mov	w1, #0x40                  	// #64
  465b20:	bl	463a40 <_obstack_memory_used@@Base+0x25f8>
  465b24:	mov	x2, x0
  465b28:	cbz	x0, 4659dc <_obstack_memory_used@@Base+0x4594>
  465b2c:	cmp	w9, #0x0
  465b30:	b.gt	465aac <_obstack_memory_used@@Base+0x4664>
  465b34:	mov	x0, x19
  465b38:	mov	x3, #0x0                   	// #0
  465b3c:	ldp	x19, x20, [sp, #16]
  465b40:	mov	w1, #0x3f                  	// #63
  465b44:	ldr	x21, [sp, #32]
  465b48:	ldp	x29, x30, [sp], #48
  465b4c:	b	463a40 <_obstack_memory_used@@Base+0x25f8>
  465b50:	cmp	w0, #0x34
  465b54:	b.hi	465974 <_obstack_memory_used@@Base+0x452c>  // b.pmore
  465b58:	lsl	x0, x2, x0
  465b5c:	tst	x0, x1
  465b60:	b.eq	465974 <_obstack_memory_used@@Base+0x452c>  // b.none
  465b64:	ldr	x4, [x4, #8]
  465b68:	cbnz	x4, 465950 <_obstack_memory_used@@Base+0x4508>
  465b6c:	b	465974 <_obstack_memory_used@@Base+0x452c>
  465b70:	cmp	w1, #0x41
  465b74:	b.ne	4659dc <_obstack_memory_used@@Base+0x4594>  // b.any
  465b78:	bl	465678 <_obstack_memory_used@@Base+0x4230>
  465b7c:	mov	x2, x0
  465b80:	mov	x0, x19
  465b84:	mov	x3, #0x0                   	// #0
  465b88:	ldp	x19, x20, [sp, #16]
  465b8c:	mov	w1, #0x30                  	// #48
  465b90:	ldr	x21, [sp, #32]
  465b94:	ldp	x29, x30, [sp], #48
  465b98:	b	463a40 <_obstack_memory_used@@Base+0x25f8>
  465b9c:	cmp	w1, #0x49
  465ba0:	b.eq	465f48 <_obstack_memory_used@@Base+0x4b00>  // b.none
  465ba4:	cmp	w1, #0x4a
  465ba8:	b.ne	4659dc <_obstack_memory_used@@Base+0x4594>  // b.any
  465bac:	bl	466560 <_obstack_memory_used@@Base+0x5118>
  465bb0:	mov	x2, x0
  465bb4:	mov	x0, x19
  465bb8:	mov	x3, #0x0                   	// #0
  465bbc:	ldp	x19, x20, [sp, #16]
  465bc0:	mov	w1, #0x12                  	// #18
  465bc4:	ldr	x21, [sp, #32]
  465bc8:	ldp	x29, x30, [sp], #48
  465bcc:	b	463a40 <_obstack_memory_used@@Base+0x25f8>
  465bd0:	cmp	w1, #0x63
  465bd4:	b.eq	465f00 <_obstack_memory_used@@Base+0x4ab8>  // b.none
  465bd8:	b.hi	4659c4 <_obstack_memory_used@@Base+0x457c>  // b.pmore
  465bdc:	cmp	w1, #0x56
  465be0:	b.eq	465e2c <_obstack_memory_used@@Base+0x49e4>  // b.none
  465be4:	cmp	w1, #0x57
  465be8:	b.ne	465c10 <_obstack_memory_used@@Base+0x47c8>  // b.any
  465bec:	bl	465fd8 <_obstack_memory_used@@Base+0x4b90>
  465bf0:	mov	x2, x0
  465bf4:	mov	x0, x19
  465bf8:	mov	x3, #0x0                   	// #0
  465bfc:	ldp	x19, x20, [sp, #16]
  465c00:	mov	w1, #0x15                  	// #21
  465c04:	ldr	x21, [sp, #32]
  465c08:	ldp	x29, x30, [sp], #48
  465c0c:	b	463a40 <_obstack_memory_used@@Base+0x25f8>
  465c10:	cmp	w1, #0x54
  465c14:	b.ne	4659dc <_obstack_memory_used@@Base+0x4594>  // b.any
  465c18:	add	w3, w3, #0xa
  465c1c:	str	w3, [x0, #72]
  465c20:	bl	466560 <_obstack_memory_used@@Base+0x5118>
  465c24:	mov	x2, x0
  465c28:	mov	x0, x19
  465c2c:	mov	x3, #0x0                   	// #0
  465c30:	ldp	x19, x20, [sp, #16]
  465c34:	mov	w1, #0xa                   	// #10
  465c38:	ldr	x21, [sp, #32]
  465c3c:	ldp	x29, x30, [sp], #48
  465c40:	b	463a40 <_obstack_memory_used@@Base+0x25f8>
  465c44:	ldr	x20, [x20, #8]
  465c48:	b	4658f4 <_obstack_memory_used@@Base+0x44ac>
  465c4c:	ldr	x3, [x20, #16]
  465c50:	mov	x1, #0x1f                  	// #31
  465c54:	mov	x2, #0x1                   	// #1
  465c58:	movk	x1, #0x1a, lsl #48
  465c5c:	ldr	w0, [x3]
  465c60:	sub	w0, w0, #0x1c
  465c64:	cmp	w0, #0x34
  465c68:	b.hi	465918 <_obstack_memory_used@@Base+0x44d0>  // b.pmore
  465c6c:	lsl	x0, x2, x0
  465c70:	tst	x0, x1
  465c74:	b.eq	465918 <_obstack_memory_used@@Base+0x44d0>  // b.none
  465c78:	ldr	x3, [x3, #8]
  465c7c:	str	x3, [x20, #16]
  465c80:	ldr	w0, [x3]
  465c84:	sub	w0, w0, #0x1c
  465c88:	cmp	w0, #0x34
  465c8c:	b.ls	465c6c <_obstack_memory_used@@Base+0x4824>  // b.plast
  465c90:	b	465918 <_obstack_memory_used@@Base+0x44d0>
  465c94:	mov	x0, x19
  465c98:	mov	w1, #0x0                   	// #0
  465c9c:	bl	465818 <_obstack_memory_used@@Base+0x43d0>
  465ca0:	mov	x2, x0
  465ca4:	mov	x0, x19
  465ca8:	mov	x3, #0x0                   	// #0
  465cac:	ldp	x19, x20, [sp, #16]
  465cb0:	mov	w1, #0x10                  	// #16
  465cb4:	ldr	x21, [sp, #32]
  465cb8:	ldp	x29, x30, [sp], #48
  465cbc:	b	463a40 <_obstack_memory_used@@Base+0x25f8>
  465cc0:	ldr	x1, [x4, #8]
  465cc4:	cbz	x1, 465cf0 <_obstack_memory_used@@Base+0x48a8>
  465cc8:	ldr	w0, [x1]
  465ccc:	sub	w2, w0, #0x1
  465cd0:	cmp	w0, #0x8
  465cd4:	b.hi	465cf8 <_obstack_memory_used@@Base+0x48b0>  // b.pmore
  465cd8:	cmp	w0, #0x6
  465cdc:	b.hi	465974 <_obstack_memory_used@@Base+0x452c>  // b.pmore
  465ce0:	cmp	w2, #0x1
  465ce4:	b.hi	465cf0 <_obstack_memory_used@@Base+0x48a8>  // b.pmore
  465ce8:	ldr	x1, [x1, #16]
  465cec:	cbnz	x1, 465cc8 <_obstack_memory_used@@Base+0x4880>
  465cf0:	mov	w1, #0x1                   	// #1
  465cf4:	b	465978 <_obstack_memory_used@@Base+0x4530>
  465cf8:	cmp	w0, #0x35
  465cfc:	cset	w1, ne  // ne = any
  465d00:	b	465978 <_obstack_memory_used@@Base+0x4530>
  465d04:	mov	x1, #0x1                   	// #1
  465d08:	b	465d10 <_obstack_memory_used@@Base+0x48c8>
  465d0c:	mov	x1, x4
  465d10:	cmp	w9, w1
  465d14:	mov	w5, w1
  465d18:	b.le	465d30 <_obstack_memory_used@@Base+0x48e8>
  465d1c:	ldrb	w3, [x8, x1]
  465d20:	add	x4, x1, #0x1
  465d24:	cmp	w3, #0x24
  465d28:	ccmp	w3, #0x0, #0x4, ne  // ne = any
  465d2c:	b.ne	465d0c <_obstack_memory_used@@Base+0x48c4>  // b.any
  465d30:	ldp	w3, w0, [x19, #40]
  465d34:	cmp	w3, w0
  465d38:	b.ge	465e18 <_obstack_memory_used@@Base+0x49d0>  // b.tcont
  465d3c:	ldr	x4, [x19, #32]
  465d40:	add	w0, w3, #0x1
  465d44:	sub	w9, w9, w5
  465d48:	smaddl	x3, w3, w11, x4
  465d4c:	str	wzr, [x3, #4]
  465d50:	str	w0, [x19, #40]
  465d54:	stp	xzr, x8, [x3]
  465d58:	ldr	x8, [x19, #24]
  465d5c:	str	w5, [x3, #16]
  465d60:	add	x8, x8, x1
  465d64:	str	x8, [x19, #24]
  465d68:	b	465b14 <_obstack_memory_used@@Base+0x46cc>
  465d6c:	bl	465fd8 <_obstack_memory_used@@Base+0x4b90>
  465d70:	mov	x2, x0
  465d74:	mov	x0, x19
  465d78:	mov	x3, #0x0                   	// #0
  465d7c:	ldp	x19, x20, [sp, #16]
  465d80:	mov	w1, #0x13                  	// #19
  465d84:	ldr	x21, [sp, #32]
  465d88:	ldp	x29, x30, [sp], #48
  465d8c:	b	463a40 <_obstack_memory_used@@Base+0x25f8>
  465d90:	ldrb	w1, [x2, #2]
  465d94:	cbz	w1, 465dac <_obstack_memory_used@@Base+0x4964>
  465d98:	add	x1, x2, #0x3
  465d9c:	str	x1, [x0, #24]
  465da0:	ldrb	w1, [x2, #2]
  465da4:	cmp	w1, #0x6e
  465da8:	b.eq	465fac <_obstack_memory_used@@Base+0x4b64>  // b.none
  465dac:	mov	x0, x19
  465db0:	mov	w1, #0x0                   	// #0
  465db4:	bl	465818 <_obstack_memory_used@@Base+0x43d0>
  465db8:	mov	x2, x0
  465dbc:	mov	x0, x19
  465dc0:	mov	x3, #0x0                   	// #0
  465dc4:	ldp	x19, x20, [sp, #16]
  465dc8:	mov	w1, #0x49                  	// #73
  465dcc:	ldr	x21, [sp, #32]
  465dd0:	ldp	x29, x30, [sp], #48
  465dd4:	b	463a40 <_obstack_memory_used@@Base+0x25f8>
  465dd8:	mov	w1, #0x0                   	// #0
  465ddc:	bl	465818 <_obstack_memory_used@@Base+0x43d0>
  465de0:	mov	x2, x0
  465de4:	mov	x0, x19
  465de8:	ldp	x19, x20, [sp, #16]
  465dec:	mov	x3, #0x0                   	// #0
  465df0:	ldr	x21, [sp, #32]
  465df4:	mov	w1, #0x17                  	// #23
  465df8:	ldp	x29, x30, [sp], #48
  465dfc:	b	463a40 <_obstack_memory_used@@Base+0x25f8>
  465e00:	mov	x2, x3
  465e04:	b	465b2c <_obstack_memory_used@@Base+0x46e4>
  465e08:	mov	w0, #0x2e                  	// #46
  465e0c:	b	465ad8 <_obstack_memory_used@@Base+0x4690>
  465e10:	mov	w0, #0x2f                  	// #47
  465e14:	b	465ad8 <_obstack_memory_used@@Base+0x4690>
  465e18:	ldr	x0, [x19, #24]
  465e1c:	mov	x20, #0x0                   	// #0
  465e20:	add	x1, x0, x1
  465e24:	str	x1, [x19, #24]
  465e28:	b	465918 <_obstack_memory_used@@Base+0x44d0>
  465e2c:	add	w3, w3, #0xf
  465e30:	str	w3, [x0, #72]
  465e34:	bl	466560 <_obstack_memory_used@@Base+0x5118>
  465e38:	mov	x2, x0
  465e3c:	mov	x0, x19
  465e40:	mov	x3, #0x0                   	// #0
  465e44:	ldp	x19, x20, [sp, #16]
  465e48:	mov	w1, #0x9                   	// #9
  465e4c:	ldr	x21, [sp, #32]
  465e50:	ldp	x29, x30, [sp], #48
  465e54:	b	463a40 <_obstack_memory_used@@Base+0x25f8>
  465e58:	bl	466560 <_obstack_memory_used@@Base+0x5118>
  465e5c:	mov	x20, x0
  465e60:	add	x0, x19, #0x18
  465e64:	bl	463cc0 <_obstack_memory_used@@Base+0x2878>
  465e68:	tbnz	w0, #31, 4659dc <_obstack_memory_used@@Base+0x4594>
  465e6c:	ldr	x0, [x19, #24]
  465e70:	ldrb	w1, [x0]
  465e74:	cmp	w1, #0x5f
  465e78:	b.ne	4659dc <_obstack_memory_used@@Base+0x4594>  // b.any
  465e7c:	add	x0, x0, #0x1
  465e80:	str	x0, [x19, #24]
  465e84:	mov	x0, x19
  465e88:	bl	466560 <_obstack_memory_used@@Base+0x5118>
  465e8c:	mov	x2, x0
  465e90:	ldr	w1, [x19, #72]
  465e94:	mov	x3, x20
  465e98:	ldr	x21, [sp, #32]
  465e9c:	add	w1, w1, #0x5
  465ea0:	str	w1, [x19, #72]
  465ea4:	mov	x0, x19
  465ea8:	ldp	x19, x20, [sp, #16]
  465eac:	mov	w1, #0xb                   	// #11
  465eb0:	ldp	x29, x30, [sp], #48
  465eb4:	b	463a40 <_obstack_memory_used@@Base+0x25f8>
  465eb8:	bl	465fd8 <_obstack_memory_used@@Base+0x4b90>
  465ebc:	mov	x2, x0
  465ec0:	mov	x0, x19
  465ec4:	mov	x3, #0x0                   	// #0
  465ec8:	ldp	x19, x20, [sp, #16]
  465ecc:	mov	w1, #0x14                  	// #20
  465ed0:	ldr	x21, [sp, #32]
  465ed4:	ldp	x29, x30, [sp], #48
  465ed8:	b	463a40 <_obstack_memory_used@@Base+0x25f8>
  465edc:	bl	466560 <_obstack_memory_used@@Base+0x5118>
  465ee0:	mov	x2, x0
  465ee4:	mov	x0, x19
  465ee8:	mov	x3, #0x0                   	// #0
  465eec:	ldp	x19, x20, [sp, #16]
  465ef0:	mov	w1, #0xd                   	// #13
  465ef4:	ldr	x21, [sp, #32]
  465ef8:	ldp	x29, x30, [sp], #48
  465efc:	b	463a40 <_obstack_memory_used@@Base+0x25f8>
  465f00:	mov	w1, #0x0                   	// #0
  465f04:	bl	464358 <_obstack_memory_used@@Base+0x2f10>
  465f08:	cbz	w0, 4659dc <_obstack_memory_used@@Base+0x4594>
  465f0c:	mov	x0, x19
  465f10:	mov	w1, #0x0                   	// #0
  465f14:	bl	464358 <_obstack_memory_used@@Base+0x2f10>
  465f18:	cbz	w0, 4659dc <_obstack_memory_used@@Base+0x4594>
  465f1c:	mov	x0, x19
  465f20:	mov	w1, #0x0                   	// #0
  465f24:	bl	465818 <_obstack_memory_used@@Base+0x43d0>
  465f28:	mov	x2, x0
  465f2c:	mov	x0, x19
  465f30:	mov	x3, #0x0                   	// #0
  465f34:	ldp	x19, x20, [sp, #16]
  465f38:	mov	w1, #0x11                  	// #17
  465f3c:	ldr	x21, [sp, #32]
  465f40:	ldp	x29, x30, [sp], #48
  465f44:	b	463a40 <_obstack_memory_used@@Base+0x25f8>
  465f48:	bl	466560 <_obstack_memory_used@@Base+0x5118>
  465f4c:	mov	x2, x0
  465f50:	mov	x0, x19
  465f54:	mov	x3, #0x0                   	// #0
  465f58:	ldp	x19, x20, [sp, #16]
  465f5c:	mov	w1, #0xc                   	// #12
  465f60:	ldr	x21, [sp, #32]
  465f64:	ldp	x29, x30, [sp], #48
  465f68:	b	463a40 <_obstack_memory_used@@Base+0x25f8>
  465f6c:	bl	464358 <_obstack_memory_used@@Base+0x2f10>
  465f70:	cbz	w0, 4659dc <_obstack_memory_used@@Base+0x4594>
  465f74:	mov	x0, x19
  465f78:	mov	w1, #0x0                   	// #0
  465f7c:	bl	465818 <_obstack_memory_used@@Base+0x43d0>
  465f80:	mov	x2, x0
  465f84:	mov	x0, x19
  465f88:	mov	x3, #0x0                   	// #0
  465f8c:	ldp	x19, x20, [sp, #16]
  465f90:	mov	w1, #0xf                   	// #15
  465f94:	ldr	x21, [sp, #32]
  465f98:	ldp	x29, x30, [sp], #48
  465f9c:	b	463a40 <_obstack_memory_used@@Base+0x25f8>
  465fa0:	mov	x20, #0x0                   	// #0
  465fa4:	str	x8, [x19, #24]
  465fa8:	b	465918 <_obstack_memory_used@@Base+0x44d0>
  465fac:	mov	w1, #0x0                   	// #0
  465fb0:	bl	465818 <_obstack_memory_used@@Base+0x43d0>
  465fb4:	mov	x2, x0
  465fb8:	mov	x0, x19
  465fbc:	ldp	x19, x20, [sp, #16]
  465fc0:	mov	x3, #0x0                   	// #0
  465fc4:	ldr	x21, [sp, #32]
  465fc8:	mov	w1, #0x4a                  	// #74
  465fcc:	ldp	x29, x30, [sp], #48
  465fd0:	b	463a40 <_obstack_memory_used@@Base+0x25f8>
  465fd4:	nop
  465fd8:	stp	x29, x30, [sp, #-112]!
  465fdc:	mov	x29, sp
  465fe0:	ldr	x2, [x0, #24]
  465fe4:	stp	x19, x20, [sp, #16]
  465fe8:	ldrb	w1, [x2]
  465fec:	cmp	w1, #0x55
  465ff0:	b.eq	4661d8 <_obstack_memory_used@@Base+0x4d90>  // b.none
  465ff4:	mov	x19, x0
  465ff8:	b.hi	4660a8 <_obstack_memory_used@@Base+0x4c60>  // b.pmore
  465ffc:	cmp	w1, #0x4e
  466000:	b.eq	4661f0 <_obstack_memory_used@@Base+0x4da8>  // b.none
  466004:	cmp	w1, #0x53
  466008:	b.ne	466178 <_obstack_memory_used@@Base+0x4d30>  // b.any
  46600c:	ldrb	w1, [x2, #1]
  466010:	cmp	w1, #0x74
  466014:	b.ne	466138 <_obstack_memory_used@@Base+0x4cf0>  // b.any
  466018:	ldp	w0, w1, [x0, #40]
  46601c:	add	x2, x2, #0x2
  466020:	str	x2, [x19, #24]
  466024:	cmp	w0, w1
  466028:	b.ge	4664ac <_obstack_memory_used@@Base+0x5064>  // b.tcont
  46602c:	mov	w3, #0x18                  	// #24
  466030:	add	w1, w0, #0x1
  466034:	ldr	x2, [x19, #32]
  466038:	smull	x0, w0, w3
  46603c:	str	w1, [x19, #40]
  466040:	mov	w3, #0x3                   	// #3
  466044:	add	x20, x2, x0
  466048:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x1ebb8>
  46604c:	add	x1, x1, #0xf40
  466050:	str	xzr, [x2, x0]
  466054:	str	x1, [x20, #8]
  466058:	str	w3, [x20, #16]
  46605c:	mov	x0, x19
  466060:	bl	467810 <_obstack_memory_used@@Base+0x63c8>
  466064:	mov	x2, x20
  466068:	mov	x3, x0
  46606c:	mov	w1, #0x1                   	// #1
  466070:	mov	x0, x19
  466074:	bl	463a40 <_obstack_memory_used@@Base+0x25f8>
  466078:	mov	x20, x0
  46607c:	ldr	w1, [x19, #72]
  466080:	ldr	x2, [x19, #24]
  466084:	add	w1, w1, #0x3
  466088:	str	w1, [x19, #72]
  46608c:	ldrb	w0, [x2]
  466090:	cmp	w0, #0x49
  466094:	b.eq	466458 <_obstack_memory_used@@Base+0x5010>  // b.none
  466098:	mov	x0, x20
  46609c:	ldp	x19, x20, [sp, #16]
  4660a0:	ldp	x29, x30, [sp], #112
  4660a4:	ret
  4660a8:	cmp	w1, #0x5a
  4660ac:	b.ne	466178 <_obstack_memory_used@@Base+0x4d30>  // b.any
  4660b0:	add	x2, x2, #0x1
  4660b4:	str	x2, [x0, #24]
  4660b8:	mov	w1, #0x0                   	// #0
  4660bc:	bl	465818 <_obstack_memory_used@@Base+0x43d0>
  4660c0:	mov	x20, x0
  4660c4:	cbz	x0, 466170 <_obstack_memory_used@@Base+0x4d28>
  4660c8:	ldr	x0, [x19, #24]
  4660cc:	ldrb	w1, [x0]
  4660d0:	cmp	w1, #0x45
  4660d4:	b.ne	466170 <_obstack_memory_used@@Base+0x4d28>  // b.any
  4660d8:	add	x1, x0, #0x1
  4660dc:	str	x1, [x19, #24]
  4660e0:	ldrb	w1, [x0, #1]
  4660e4:	cmp	w1, #0x73
  4660e8:	b.eq	4664d4 <_obstack_memory_used@@Base+0x508c>  // b.none
  4660ec:	cmp	w1, #0x64
  4660f0:	b.eq	46637c <_obstack_memory_used@@Base+0x4f34>  // b.none
  4660f4:	mov	x0, x19
  4660f8:	bl	465fd8 <_obstack_memory_used@@Base+0x4b90>
  4660fc:	mov	x3, x0
  466100:	cbz	x0, 466114 <_obstack_memory_used@@Base+0x4ccc>
  466104:	ldr	w0, [x0]
  466108:	sub	w0, w0, #0x46
  46610c:	tst	w0, #0xfffffffd
  466110:	b.ne	466528 <_obstack_memory_used@@Base+0x50e0>  // b.any
  466114:	ldr	w0, [x20]
  466118:	cmp	w0, #0x3
  46611c:	b.eq	466494 <_obstack_memory_used@@Base+0x504c>  // b.none
  466120:	mov	x2, x20
  466124:	mov	x0, x19
  466128:	mov	w1, #0x2                   	// #2
  46612c:	bl	463a40 <_obstack_memory_used@@Base+0x25f8>
  466130:	mov	x20, x0
  466134:	b	466098 <_obstack_memory_used@@Base+0x4c50>
  466138:	mov	w1, #0x0                   	// #0
  46613c:	bl	4640f0 <_obstack_memory_used@@Base+0x2ca8>
  466140:	ldr	x1, [x19, #24]
  466144:	mov	x20, x0
  466148:	ldrb	w0, [x1]
  46614c:	cmp	w0, #0x49
  466150:	b.ne	466098 <_obstack_memory_used@@Base+0x4c50>  // b.any
  466154:	mov	x0, x19
  466158:	b	4661b8 <_obstack_memory_used@@Base+0x4d70>
  46615c:	mov	x0, x19
  466160:	bl	464458 <_obstack_memory_used@@Base+0x3010>
  466164:	cbnz	w0, 4663b8 <_obstack_memory_used@@Base+0x4f70>
  466168:	ldp	x21, x22, [sp, #32]
  46616c:	nop
  466170:	mov	x20, #0x0                   	// #0
  466174:	b	466098 <_obstack_memory_used@@Base+0x4c50>
  466178:	mov	x0, x19
  46617c:	bl	467810 <_obstack_memory_used@@Base+0x63c8>
  466180:	ldr	x1, [x19, #24]
  466184:	mov	x20, x0
  466188:	ldrb	w0, [x1]
  46618c:	cmp	w0, #0x49
  466190:	b.ne	466098 <_obstack_memory_used@@Base+0x4c50>  // b.any
  466194:	cbz	x20, 466170 <_obstack_memory_used@@Base+0x4d28>
  466198:	ldp	w1, w0, [x19, #56]
  46619c:	cmp	w1, w0
  4661a0:	b.ge	466170 <_obstack_memory_used@@Base+0x4d28>  // b.tcont
  4661a4:	ldr	x3, [x19, #48]
  4661a8:	mov	x0, x19
  4661ac:	add	w2, w1, #0x1
  4661b0:	str	x20, [x3, w1, sxtw #3]
  4661b4:	str	w2, [x19, #56]
  4661b8:	bl	4657e8 <_obstack_memory_used@@Base+0x43a0>
  4661bc:	mov	x3, x0
  4661c0:	mov	x2, x20
  4661c4:	mov	x0, x19
  4661c8:	mov	w1, #0x4                   	// #4
  4661cc:	bl	463a40 <_obstack_memory_used@@Base+0x25f8>
  4661d0:	mov	x20, x0
  4661d4:	b	466098 <_obstack_memory_used@@Base+0x4c50>
  4661d8:	bl	467810 <_obstack_memory_used@@Base+0x63c8>
  4661dc:	mov	x20, x0
  4661e0:	mov	x0, x20
  4661e4:	ldp	x19, x20, [sp, #16]
  4661e8:	ldp	x29, x30, [sp], #112
  4661ec:	ret
  4661f0:	stp	x21, x22, [sp, #32]
  4661f4:	add	x2, x2, #0x1
  4661f8:	add	x1, sp, #0x68
  4661fc:	str	x2, [x0, #24]
  466200:	mov	w2, #0x1                   	// #1
  466204:	bl	467410 <_obstack_memory_used@@Base+0x5fc8>
  466208:	mov	x22, x0
  46620c:	cbz	x0, 466488 <_obstack_memory_used@@Base+0x5040>
  466210:	mov	x1, #0x0                   	// #0
  466214:	mov	x0, x19
  466218:	stp	x23, x24, [sp, #48]
  46621c:	bl	463ac8 <_obstack_memory_used@@Base+0x2680>
  466220:	mov	x23, x0
  466224:	ldr	x1, [x19, #24]
  466228:	ldrb	w20, [x1]
  46622c:	cbz	w20, 4662e4 <_obstack_memory_used@@Base+0x4e9c>
  466230:	mov	x21, #0x0                   	// #0
  466234:	mov	w24, #0x4c                  	// #76
  466238:	stp	x25, x26, [sp, #64]
  46623c:	mov	w25, #0x55                  	// #85
  466240:	cmp	w20, #0x44
  466244:	b.eq	4662f8 <_obstack_memory_used@@Base+0x4eb0>  // b.none
  466248:	sub	w2, w20, #0x30
  46624c:	sub	w0, w20, #0x61
  466250:	and	w2, w2, #0xff
  466254:	and	w0, w0, #0xff
  466258:	cmp	w2, #0x9
  46625c:	mov	x26, x21
  466260:	ccmp	w0, #0x19, #0x0, hi  // hi = pmore
  466264:	b.ls	466278 <_obstack_memory_used@@Base+0x4e30>  // b.plast
  466268:	cmp	w20, #0x43
  46626c:	ccmp	w20, w25, #0x4, ne  // ne = any
  466270:	ccmp	w20, w24, #0x4, ne  // ne = any
  466274:	b.ne	466344 <_obstack_memory_used@@Base+0x4efc>  // b.any
  466278:	mov	x0, x19
  46627c:	bl	467810 <_obstack_memory_used@@Base+0x63c8>
  466280:	mov	x21, x0
  466284:	cbz	x26, 4662a0 <_obstack_memory_used@@Base+0x4e58>
  466288:	mov	w1, #0x1                   	// #1
  46628c:	mov	x3, x21
  466290:	mov	x2, x26
  466294:	mov	x0, x19
  466298:	bl	463a40 <_obstack_memory_used@@Base+0x25f8>
  46629c:	mov	x21, x0
  4662a0:	cmp	w20, #0x53
  4662a4:	ldr	x1, [x19, #24]
  4662a8:	b.eq	4662d8 <_obstack_memory_used@@Base+0x4e90>  // b.none
  4662ac:	ldrb	w20, [x1]
  4662b0:	cmp	w20, #0x45
  4662b4:	b.eq	46632c <_obstack_memory_used@@Base+0x4ee4>  // b.none
  4662b8:	cbz	x21, 4662e0 <_obstack_memory_used@@Base+0x4e98>
  4662bc:	ldp	w0, w2, [x19, #56]
  4662c0:	cmp	w0, w2
  4662c4:	b.ge	4662e0 <_obstack_memory_used@@Base+0x4e98>  // b.tcont
  4662c8:	ldr	x3, [x19, #48]
  4662cc:	add	w2, w0, #0x1
  4662d0:	str	x21, [x3, w0, sxtw #3]
  4662d4:	str	w2, [x19, #56]
  4662d8:	ldrb	w20, [x1]
  4662dc:	cbnz	w20, 466240 <_obstack_memory_used@@Base+0x4df8>
  4662e0:	ldp	x25, x26, [sp, #64]
  4662e4:	mov	x20, #0x0                   	// #0
  4662e8:	ldp	x23, x24, [sp, #48]
  4662ec:	str	xzr, [x22]
  4662f0:	ldp	x21, x22, [sp, #32]
  4662f4:	b	466098 <_obstack_memory_used@@Base+0x4c50>
  4662f8:	ldrb	w0, [x1, #1]
  4662fc:	and	w0, w0, #0xffffffdf
  466300:	and	w0, w0, #0xff
  466304:	cmp	w0, #0x54
  466308:	mov	x0, x19
  46630c:	b.ne	466334 <_obstack_memory_used@@Base+0x4eec>  // b.any
  466310:	mov	x26, x21
  466314:	bl	466560 <_obstack_memory_used@@Base+0x5118>
  466318:	mov	x21, x0
  46631c:	mov	w1, #0x1                   	// #1
  466320:	cbnz	x26, 46628c <_obstack_memory_used@@Base+0x4e44>
  466324:	ldr	x1, [x19, #24]
  466328:	b	4662ac <_obstack_memory_used@@Base+0x4e64>
  46632c:	mov	x26, x21
  466330:	b	466268 <_obstack_memory_used@@Base+0x4e20>
  466334:	mov	x26, x21
  466338:	bl	467810 <_obstack_memory_used@@Base+0x63c8>
  46633c:	mov	x21, x0
  466340:	b	46631c <_obstack_memory_used@@Base+0x4ed4>
  466344:	cmp	w20, #0x53
  466348:	b.eq	4663f8 <_obstack_memory_used@@Base+0x4fb0>  // b.none
  46634c:	cmp	w20, #0x49
  466350:	b.eq	4664b4 <_obstack_memory_used@@Base+0x506c>  // b.none
  466354:	cmp	w20, #0x54
  466358:	b.eq	466550 <_obstack_memory_used@@Base+0x5108>  // b.none
  46635c:	cmp	w20, #0x45
  466360:	b.eq	466414 <_obstack_memory_used@@Base+0x4fcc>  // b.none
  466364:	cmp	w20, #0x4d
  466368:	ccmp	x21, #0x0, #0x4, eq  // eq = none
  46636c:	b.eq	4662e0 <_obstack_memory_used@@Base+0x4e98>  // b.none
  466370:	add	x1, x1, #0x1
  466374:	str	x1, [x19, #24]
  466378:	b	4662d8 <_obstack_memory_used@@Base+0x4e90>
  46637c:	stp	x21, x22, [sp, #32]
  466380:	add	x0, x0, #0x2
  466384:	str	x0, [x19, #24]
  466388:	mov	x0, x19
  46638c:	bl	463df8 <_obstack_memory_used@@Base+0x29b0>
  466390:	mov	w21, w0
  466394:	tbnz	w0, #31, 466168 <_obstack_memory_used@@Base+0x4d20>
  466398:	mov	x0, x19
  46639c:	bl	465fd8 <_obstack_memory_used@@Base+0x4b90>
  4663a0:	mov	x11, x0
  4663a4:	cbz	x0, 4663b8 <_obstack_memory_used@@Base+0x4f70>
  4663a8:	ldr	w0, [x0]
  4663ac:	sub	w0, w0, #0x46
  4663b0:	tst	w0, #0xfffffffd
  4663b4:	b.ne	46615c <_obstack_memory_used@@Base+0x4d14>  // b.any
  4663b8:	ldp	w1, w0, [x19, #40]
  4663bc:	cmp	w1, w0
  4663c0:	b.ge	466544 <_obstack_memory_used@@Base+0x50fc>  // b.tcont
  4663c4:	mov	w2, #0x18                  	// #24
  4663c8:	add	w4, w1, #0x1
  4663cc:	ldr	x0, [x19, #32]
  4663d0:	smull	x1, w1, w2
  4663d4:	mov	w2, #0x47                  	// #71
  4663d8:	add	x3, x0, x1
  4663dc:	str	wzr, [x3, #4]
  4663e0:	str	w4, [x19, #40]
  4663e4:	str	w2, [x0, x1]
  4663e8:	str	x11, [x3, #8]
  4663ec:	str	w21, [x3, #16]
  4663f0:	ldp	x21, x22, [sp, #32]
  4663f4:	b	466114 <_obstack_memory_used@@Base+0x4ccc>
  4663f8:	mov	x0, x19
  4663fc:	mov	w1, #0x1                   	// #1
  466400:	bl	4640f0 <_obstack_memory_used@@Base+0x2ca8>
  466404:	mov	x21, x0
  466408:	cbnz	x26, 466288 <_obstack_memory_used@@Base+0x4e40>
  46640c:	ldr	x1, [x19, #24]
  466410:	b	4662d8 <_obstack_memory_used@@Base+0x4e90>
  466414:	str	x21, [x22]
  466418:	cbz	x21, 466480 <_obstack_memory_used@@Base+0x5038>
  46641c:	cbz	x23, 46642c <_obstack_memory_used@@Base+0x4fe4>
  466420:	ldr	x0, [sp, #104]
  466424:	str	x0, [x23, #8]
  466428:	str	x23, [sp, #104]
  46642c:	ldr	x0, [x19, #24]
  466430:	ldrb	w1, [x0]
  466434:	cmp	w1, #0x45
  466438:	b.ne	466480 <_obstack_memory_used@@Base+0x5038>  // b.any
  46643c:	add	x0, x0, #0x1
  466440:	ldp	x21, x22, [sp, #32]
  466444:	ldp	x23, x24, [sp, #48]
  466448:	ldp	x25, x26, [sp, #64]
  46644c:	str	x0, [x19, #24]
  466450:	ldr	x20, [sp, #104]
  466454:	b	466098 <_obstack_memory_used@@Base+0x4c50>
  466458:	cbz	x20, 466170 <_obstack_memory_used@@Base+0x4d28>
  46645c:	ldp	w0, w1, [x19, #56]
  466460:	cmp	w0, w1
  466464:	b.ge	466170 <_obstack_memory_used@@Base+0x4d28>  // b.tcont
  466468:	ldr	x2, [x19, #48]
  46646c:	add	w1, w0, #0x1
  466470:	str	x20, [x2, w0, sxtw #3]
  466474:	mov	x0, x19
  466478:	str	w1, [x19, #56]
  46647c:	b	4661b8 <_obstack_memory_used@@Base+0x4d70>
  466480:	ldp	x23, x24, [sp, #48]
  466484:	ldp	x25, x26, [sp, #64]
  466488:	mov	x20, #0x0                   	// #0
  46648c:	ldp	x21, x22, [sp, #32]
  466490:	b	466098 <_obstack_memory_used@@Base+0x4c50>
  466494:	ldr	x0, [x20, #16]
  466498:	ldr	w1, [x0]
  46649c:	cmp	w1, #0x29
  4664a0:	b.ne	466120 <_obstack_memory_used@@Base+0x4cd8>  // b.any
  4664a4:	str	xzr, [x0, #8]
  4664a8:	b	466120 <_obstack_memory_used@@Base+0x4cd8>
  4664ac:	mov	x20, #0x0                   	// #0
  4664b0:	b	46605c <_obstack_memory_used@@Base+0x4c14>
  4664b4:	cbz	x21, 4662e0 <_obstack_memory_used@@Base+0x4e98>
  4664b8:	add	x1, x1, #0x1
  4664bc:	str	x1, [x19, #24]
  4664c0:	mov	x0, x19
  4664c4:	bl	465720 <_obstack_memory_used@@Base+0x42d8>
  4664c8:	mov	x21, x0
  4664cc:	mov	w1, #0x4                   	// #4
  4664d0:	b	46628c <_obstack_memory_used@@Base+0x4e44>
  4664d4:	add	x0, x0, #0x2
  4664d8:	str	x0, [x19, #24]
  4664dc:	mov	x0, x19
  4664e0:	bl	464458 <_obstack_memory_used@@Base+0x3010>
  4664e4:	cbz	w0, 466170 <_obstack_memory_used@@Base+0x4d28>
  4664e8:	ldp	w0, w1, [x19, #40]
  4664ec:	cmp	w0, w1
  4664f0:	b.ge	466548 <_obstack_memory_used@@Base+0x5100>  // b.tcont
  4664f4:	mov	w3, #0x18                  	// #24
  4664f8:	add	w1, w0, #0x1
  4664fc:	ldr	x2, [x19, #32]
  466500:	smull	x0, w0, w3
  466504:	str	w1, [x19, #40]
  466508:	mov	w4, #0xe                   	// #14
  46650c:	add	x3, x2, x0
  466510:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x1ebb8>
  466514:	add	x1, x1, #0xf30
  466518:	str	xzr, [x2, x0]
  46651c:	str	x1, [x3, #8]
  466520:	str	w4, [x3, #16]
  466524:	b	466114 <_obstack_memory_used@@Base+0x4ccc>
  466528:	mov	x0, x19
  46652c:	str	x3, [sp, #88]
  466530:	bl	464458 <_obstack_memory_used@@Base+0x3010>
  466534:	ldr	x3, [sp, #88]
  466538:	cbnz	w0, 466114 <_obstack_memory_used@@Base+0x4ccc>
  46653c:	mov	x20, #0x0                   	// #0
  466540:	b	466098 <_obstack_memory_used@@Base+0x4c50>
  466544:	ldp	x21, x22, [sp, #32]
  466548:	mov	x3, #0x0                   	// #0
  46654c:	b	466114 <_obstack_memory_used@@Base+0x4ccc>
  466550:	mov	x0, x19
  466554:	bl	463e70 <_obstack_memory_used@@Base+0x2a28>
  466558:	mov	x21, x0
  46655c:	b	46631c <_obstack_memory_used@@Base+0x4ed4>
  466560:	stp	x29, x30, [sp, #-80]!
  466564:	mov	x29, sp
  466568:	ldr	x4, [x0, #24]
  46656c:	stp	x19, x20, [sp, #16]
  466570:	mov	x19, x0
  466574:	mov	x0, x4
  466578:	bl	464400 <_obstack_memory_used@@Base+0x2fb8>
  46657c:	cbnz	w0, 4665bc <_obstack_memory_used@@Base+0x5174>
  466580:	ldrb	w1, [x4]
  466584:	sub	w0, w1, #0x30
  466588:	cmp	w0, #0x4a
  46658c:	b.ls	4665a4 <_obstack_memory_used@@Base+0x515c>  // b.plast
  466590:	mov	x20, #0x0                   	// #0
  466594:	mov	x0, x20
  466598:	ldp	x19, x20, [sp, #16]
  46659c:	ldp	x29, x30, [sp], #80
  4665a0:	ret
  4665a4:	adrp	x2, 482000 <_obstack_memory_used@@Base+0x20bb8>
  4665a8:	add	x2, x2, #0xcc
  4665ac:	ldrh	w0, [x2, w0, uxtw #1]
  4665b0:	adr	x2, 4665bc <_obstack_memory_used@@Base+0x5174>
  4665b4:	add	x0, x2, w0, sxth #2
  4665b8:	br	x0
  4665bc:	add	x1, sp, #0x48
  4665c0:	mov	x0, x19
  4665c4:	mov	w2, #0x0                   	// #0
  4665c8:	stp	x21, x22, [sp, #32]
  4665cc:	bl	467410 <_obstack_memory_used@@Base+0x5fc8>
  4665d0:	mov	x21, x0
  4665d4:	cbz	x0, 466668 <_obstack_memory_used@@Base+0x5220>
  4665d8:	ldr	x0, [x19, #24]
  4665dc:	ldrb	w0, [x0]
  4665e0:	cmp	w0, #0x46
  4665e4:	mov	x0, x19
  4665e8:	b.eq	46665c <_obstack_memory_used@@Base+0x5214>  // b.none
  4665ec:	bl	466560 <_obstack_memory_used@@Base+0x5118>
  4665f0:	str	x0, [x21]
  4665f4:	cbz	x0, 466668 <_obstack_memory_used@@Base+0x5220>
  4665f8:	ldr	w1, [x0]
  4665fc:	ldr	x20, [sp, #72]
  466600:	sub	w1, w1, #0x1f
  466604:	cmp	w1, #0x1
  466608:	b.ls	466640 <_obstack_memory_used@@Base+0x51f8>  // b.plast
  46660c:	cbz	x20, 466668 <_obstack_memory_used@@Base+0x5220>
  466610:	ldp	w0, w1, [x19, #56]
  466614:	cmp	w0, w1
  466618:	b.ge	466668 <_obstack_memory_used@@Base+0x5220>  // b.tcont
  46661c:	ldr	x2, [x19, #48]
  466620:	add	w1, w0, #0x1
  466624:	ldp	x21, x22, [sp, #32]
  466628:	str	x20, [x2, w0, sxtw #3]
  46662c:	mov	x0, x20
  466630:	str	w1, [x19, #56]
  466634:	ldp	x19, x20, [sp, #16]
  466638:	ldp	x29, x30, [sp], #80
  46663c:	ret
  466640:	ldr	x1, [x0, #8]
  466644:	str	x20, [x0, #8]
  466648:	ldr	x0, [x21]
  46664c:	str	x0, [sp, #72]
  466650:	str	x1, [x21]
  466654:	ldr	x20, [sp, #72]
  466658:	b	46660c <_obstack_memory_used@@Base+0x51c4>
  46665c:	bl	467730 <_obstack_memory_used@@Base+0x62e8>
  466660:	str	x0, [x21]
  466664:	b	4665f4 <_obstack_memory_used@@Base+0x51ac>
  466668:	ldp	x21, x22, [sp, #32]
  46666c:	b	466590 <_obstack_memory_used@@Base+0x5148>
  466670:	ldp	w2, w3, [x19, #40]
  466674:	sub	w1, w1, #0x61
  466678:	adrp	x0, 4a2000 <_obstack_memory_used@@Base+0x40bb8>
  46667c:	add	x0, x0, #0xdf0
  466680:	sbfiz	x1, x1, #5, #32
  466684:	add	x0, x0, #0x188
  466688:	add	x1, x0, x1
  46668c:	cmp	w2, w3
  466690:	b.ge	467130 <_obstack_memory_used@@Base+0x5ce8>  // b.tcont
  466694:	mov	w0, #0x18                  	// #24
  466698:	add	w6, w2, #0x1
  46669c:	ldr	x3, [x19, #32]
  4666a0:	smull	x2, w2, w0
  4666a4:	ldr	w7, [x1, #8]
  4666a8:	mov	w5, #0x27                  	// #39
  4666ac:	add	x20, x3, x2
  4666b0:	ldr	w0, [x19, #72]
  4666b4:	add	x4, x4, #0x1
  4666b8:	add	w0, w0, w7
  4666bc:	str	wzr, [x20, #4]
  4666c0:	str	w6, [x19, #40]
  4666c4:	str	w5, [x3, x2]
  4666c8:	str	x1, [x20, #8]
  4666cc:	str	x4, [x19, #24]
  4666d0:	str	w0, [x19, #72]
  4666d4:	b	466594 <_obstack_memory_used@@Base+0x514c>
  4666d8:	mov	x0, x19
  4666dc:	bl	465fd8 <_obstack_memory_used@@Base+0x4b90>
  4666e0:	mov	x20, x0
  4666e4:	str	x0, [sp, #72]
  4666e8:	cbz	x20, 466590 <_obstack_memory_used@@Base+0x5148>
  4666ec:	ldp	w0, w1, [x19, #56]
  4666f0:	cmp	w0, w1
  4666f4:	b.ge	466590 <_obstack_memory_used@@Base+0x5148>  // b.tcont
  4666f8:	ldr	x2, [x19, #48]
  4666fc:	add	w1, w0, #0x1
  466700:	str	x20, [x2, w0, sxtw #3]
  466704:	str	w1, [x19, #56]
  466708:	ldr	x20, [sp, #72]
  46670c:	mov	x0, x20
  466710:	ldp	x19, x20, [sp, #16]
  466714:	ldp	x29, x30, [sp], #80
  466718:	ret
  46671c:	mov	x0, x19
  466720:	bl	467730 <_obstack_memory_used@@Base+0x62e8>
  466724:	mov	x20, x0
  466728:	str	x0, [sp, #72]
  46672c:	b	4666e8 <_obstack_memory_used@@Base+0x52a0>
  466730:	add	x4, x4, #0x1
  466734:	str	x4, [x19, #24]
  466738:	mov	x0, x19
  46673c:	bl	466560 <_obstack_memory_used@@Base+0x5118>
  466740:	mov	x2, x0
  466744:	mov	x3, #0x0                   	// #0
  466748:	mov	x0, x19
  46674c:	mov	w1, #0x26                  	// #38
  466750:	bl	463a40 <_obstack_memory_used@@Base+0x25f8>
  466754:	mov	x20, x0
  466758:	str	x0, [sp, #72]
  46675c:	b	4666e8 <_obstack_memory_used@@Base+0x52a0>
  466760:	add	x4, x4, #0x1
  466764:	str	x4, [x19, #24]
  466768:	mov	x0, x19
  46676c:	bl	466560 <_obstack_memory_used@@Base+0x5118>
  466770:	mov	x2, x0
  466774:	mov	x3, #0x0                   	// #0
  466778:	mov	x0, x19
  46677c:	mov	w1, #0x24                  	// #36
  466780:	bl	463a40 <_obstack_memory_used@@Base+0x25f8>
  466784:	mov	x20, x0
  466788:	str	x0, [sp, #72]
  46678c:	b	4666e8 <_obstack_memory_used@@Base+0x52a0>
  466790:	add	x4, x4, #0x1
  466794:	str	x4, [x19, #24]
  466798:	mov	x0, x19
  46679c:	bl	466560 <_obstack_memory_used@@Base+0x5118>
  4667a0:	mov	x2, x0
  4667a4:	mov	x3, #0x0                   	// #0
  4667a8:	mov	x0, x19
  4667ac:	mov	w1, #0x25                  	// #37
  4667b0:	bl	463a40 <_obstack_memory_used@@Base+0x25f8>
  4667b4:	mov	x20, x0
  4667b8:	str	x0, [sp, #72]
  4667bc:	b	4666e8 <_obstack_memory_used@@Base+0x52a0>
  4667c0:	add	x0, x4, #0x1
  4667c4:	str	x0, [x19, #24]
  4667c8:	ldrb	w0, [x4, #1]
  4667cc:	cbz	w0, 466590 <_obstack_memory_used@@Base+0x5148>
  4667d0:	add	x0, x4, #0x2
  4667d4:	str	x0, [x19, #24]
  4667d8:	ldrb	w0, [x4, #1]
  4667dc:	cmp	w0, #0x68
  4667e0:	b.eq	466f58 <_obstack_memory_used@@Base+0x5b10>  // b.none
  4667e4:	b.hi	466b3c <_obstack_memory_used@@Base+0x56f4>  // b.pmore
  4667e8:	cmp	w0, #0x63
  4667ec:	b.eq	466f18 <_obstack_memory_used@@Base+0x5ad0>  // b.none
  4667f0:	b.ls	466aec <_obstack_memory_used@@Base+0x56a4>  // b.plast
  4667f4:	cmp	w0, #0x65
  4667f8:	b.eq	466ff8 <_obstack_memory_used@@Base+0x5bb0>  // b.none
  4667fc:	cmp	w0, #0x66
  466800:	b.ne	466d58 <_obstack_memory_used@@Base+0x5910>  // b.any
  466804:	ldp	w0, w1, [x19, #40]
  466808:	cmp	w0, w1
  46680c:	b.ge	467130 <_obstack_memory_used@@Base+0x5ce8>  // b.tcont
  466810:	mov	w1, #0x18                  	// #24
  466814:	add	w5, w0, #0x1
  466818:	ldr	x3, [x19, #32]
  46681c:	smull	x0, w0, w1
  466820:	ldr	w2, [x19, #72]
  466824:	adrp	x1, 4a2000 <_obstack_memory_used@@Base+0x40bb8>
  466828:	add	x1, x1, #0xdf0
  46682c:	add	x20, x3, x0
  466830:	add	x1, x1, #0x4c8
  466834:	mov	w4, #0x27                  	// #39
  466838:	str	wzr, [x20, #4]
  46683c:	add	w2, w2, #0x9
  466840:	str	w5, [x19, #40]
  466844:	str	w4, [x3, x0]
  466848:	str	x1, [x20, #8]
  46684c:	str	w2, [x19, #72]
  466850:	b	466594 <_obstack_memory_used@@Base+0x514c>
  466854:	add	x4, x4, #0x1
  466858:	str	x4, [x19, #24]
  46685c:	mov	x0, x19
  466860:	bl	463ef0 <_obstack_memory_used@@Base+0x2aa8>
  466864:	str	x0, [sp, #72]
  466868:	ldr	x1, [x19, #24]
  46686c:	mov	x20, x0
  466870:	ldrb	w0, [x1]
  466874:	cmp	w0, #0x49
  466878:	b.eq	466e38 <_obstack_memory_used@@Base+0x59f0>  // b.none
  46687c:	mov	x0, x19
  466880:	bl	466560 <_obstack_memory_used@@Base+0x5118>
  466884:	ldr	x3, [sp, #72]
  466888:	mov	x2, x0
  46688c:	mov	w1, #0x21                  	// #33
  466890:	mov	x0, x19
  466894:	bl	463a40 <_obstack_memory_used@@Base+0x25f8>
  466898:	mov	x20, x0
  46689c:	str	x0, [sp, #72]
  4668a0:	b	4666e8 <_obstack_memory_used@@Base+0x52a0>
  4668a4:	add	x4, x4, #0x1
  4668a8:	str	x4, [x19, #24]
  4668ac:	mov	x0, x19
  4668b0:	bl	466560 <_obstack_memory_used@@Base+0x5118>
  4668b4:	mov	x2, x0
  4668b8:	mov	x3, #0x0                   	// #0
  4668bc:	mov	x0, x19
  4668c0:	mov	w1, #0x22                  	// #34
  4668c4:	bl	463a40 <_obstack_memory_used@@Base+0x25f8>
  4668c8:	mov	x20, x0
  4668cc:	str	x0, [sp, #72]
  4668d0:	b	4666e8 <_obstack_memory_used@@Base+0x52a0>
  4668d4:	ldrb	w0, [x4, #1]
  4668d8:	sub	w1, w0, #0x30
  4668dc:	cmp	w0, #0x5f
  4668e0:	and	w1, w1, #0xff
  4668e4:	ccmp	w1, #0x9, #0x0, ne  // ne = any
  4668e8:	b.ls	4668fc <_obstack_memory_used@@Base+0x54b4>  // b.plast
  4668ec:	sub	w0, w0, #0x41
  4668f0:	and	w0, w0, #0xff
  4668f4:	cmp	w0, #0x19
  4668f8:	b.hi	466e14 <_obstack_memory_used@@Base+0x59cc>  // b.pmore
  4668fc:	mov	w1, #0x0                   	// #0
  466900:	mov	x0, x19
  466904:	bl	4640f0 <_obstack_memory_used@@Base+0x2ca8>
  466908:	str	x0, [sp, #72]
  46690c:	ldr	x1, [x19, #24]
  466910:	mov	x20, x0
  466914:	ldrb	w0, [x1]
  466918:	cmp	w0, #0x49
  46691c:	b.ne	466594 <_obstack_memory_used@@Base+0x514c>  // b.any
  466920:	add	x1, x1, #0x1
  466924:	str	x1, [x19, #24]
  466928:	mov	x0, x19
  46692c:	bl	465720 <_obstack_memory_used@@Base+0x42d8>
  466930:	mov	x3, x0
  466934:	mov	x2, x20
  466938:	mov	x0, x19
  46693c:	mov	w1, #0x4                   	// #4
  466940:	bl	463a40 <_obstack_memory_used@@Base+0x25f8>
  466944:	mov	x20, x0
  466948:	str	x0, [sp, #72]
  46694c:	b	4666e8 <_obstack_memory_used@@Base+0x52a0>
  466950:	mov	x0, x19
  466954:	stp	x21, x22, [sp, #32]
  466958:	bl	463e70 <_obstack_memory_used@@Base+0x2a28>
  46695c:	ldr	x21, [x19, #24]
  466960:	str	x0, [sp, #72]
  466964:	mov	x20, x0
  466968:	ldrb	w0, [x21]
  46696c:	cmp	w0, #0x49
  466970:	b.eq	466d98 <_obstack_memory_used@@Base+0x5950>  // b.none
  466974:	ldp	x21, x22, [sp, #32]
  466978:	b	4666e8 <_obstack_memory_used@@Base+0x52a0>
  46697c:	add	x4, x4, #0x1
  466980:	str	x4, [x19, #24]
  466984:	mov	x0, x19
  466988:	bl	463ef0 <_obstack_memory_used@@Base+0x2aa8>
  46698c:	mov	x2, x0
  466990:	mov	x3, #0x0                   	// #0
  466994:	mov	x0, x19
  466998:	mov	w1, #0x28                  	// #40
  46699c:	bl	463a40 <_obstack_memory_used@@Base+0x25f8>
  4669a0:	mov	x20, x0
  4669a4:	str	x0, [sp, #72]
  4669a8:	b	4666e8 <_obstack_memory_used@@Base+0x52a0>
  4669ac:	add	x4, x4, #0x1
  4669b0:	str	x4, [x19, #24]
  4669b4:	mov	x0, x19
  4669b8:	bl	466560 <_obstack_memory_used@@Base+0x5118>
  4669bc:	mov	x2, x0
  4669c0:	mov	x3, #0x0                   	// #0
  4669c4:	mov	x0, x19
  4669c8:	mov	w1, #0x23                  	// #35
  4669cc:	bl	463a40 <_obstack_memory_used@@Base+0x25f8>
  4669d0:	mov	x20, x0
  4669d4:	str	x0, [sp, #72]
  4669d8:	b	4666e8 <_obstack_memory_used@@Base+0x52a0>
  4669dc:	add	x3, x4, #0x1
  4669e0:	str	x3, [x19, #24]
  4669e4:	ldrb	w0, [x4, #1]
  4669e8:	cmp	w0, #0x5f
  4669ec:	b.eq	466e0c <_obstack_memory_used@@Base+0x59c4>  // b.none
  4669f0:	sub	w0, w0, #0x30
  4669f4:	and	w0, w0, #0xff
  4669f8:	cmp	w0, #0x9
  4669fc:	b.hi	466e64 <_obstack_memory_used@@Base+0x5a1c>  // b.pmore
  466a00:	mov	x1, x3
  466a04:	nop
  466a08:	mov	x4, x1
  466a0c:	add	x1, x1, #0x1
  466a10:	str	x1, [x19, #24]
  466a14:	ldrb	w0, [x1]
  466a18:	sub	w0, w0, #0x30
  466a1c:	and	w0, w0, #0xff
  466a20:	cmp	w0, #0x9
  466a24:	b.ls	466a08 <_obstack_memory_used@@Base+0x55c0>  // b.plast
  466a28:	ldp	w0, w5, [x19, #40]
  466a2c:	sub	x2, x1, x3
  466a30:	cmp	w0, w5
  466a34:	b.ge	466590 <_obstack_memory_used@@Base+0x5148>  // b.tcont
  466a38:	mov	w7, #0x18                  	// #24
  466a3c:	add	w6, w0, #0x1
  466a40:	ldr	x5, [x19, #32]
  466a44:	smull	x0, w0, w7
  466a48:	cmp	w2, #0x0
  466a4c:	add	x20, x5, x0
  466a50:	str	wzr, [x20, #4]
  466a54:	str	w6, [x19, #40]
  466a58:	b.le	466590 <_obstack_memory_used@@Base+0x5148>
  466a5c:	str	xzr, [x5, x0]
  466a60:	str	x3, [x20, #8]
  466a64:	str	w2, [x20, #16]
  466a68:	ldrb	w0, [x4, #1]
  466a6c:	mov	x3, x1
  466a70:	cmp	w0, #0x5f
  466a74:	b.ne	466590 <_obstack_memory_used@@Base+0x5148>  // b.any
  466a78:	add	x3, x3, #0x1
  466a7c:	str	x3, [x19, #24]
  466a80:	mov	x0, x19
  466a84:	bl	466560 <_obstack_memory_used@@Base+0x5118>
  466a88:	mov	x3, x0
  466a8c:	mov	x2, x20
  466a90:	mov	x0, x19
  466a94:	mov	w1, #0x2a                  	// #42
  466a98:	bl	463a40 <_obstack_memory_used@@Base+0x25f8>
  466a9c:	mov	x20, x0
  466aa0:	str	x0, [sp, #72]
  466aa4:	b	4666e8 <_obstack_memory_used@@Base+0x52a0>
  466aa8:	add	x4, x4, #0x1
  466aac:	str	x4, [x19, #24]
  466ab0:	mov	x0, x19
  466ab4:	bl	466560 <_obstack_memory_used@@Base+0x5118>
  466ab8:	mov	x20, x0
  466abc:	cbz	x0, 466590 <_obstack_memory_used@@Base+0x5148>
  466ac0:	mov	x0, x19
  466ac4:	bl	466560 <_obstack_memory_used@@Base+0x5118>
  466ac8:	mov	x3, x0
  466acc:	cbz	x0, 466590 <_obstack_memory_used@@Base+0x5148>
  466ad0:	mov	x2, x20
  466ad4:	mov	x0, x19
  466ad8:	mov	w1, #0x2b                  	// #43
  466adc:	bl	463a40 <_obstack_memory_used@@Base+0x25f8>
  466ae0:	mov	x20, x0
  466ae4:	str	x0, [sp, #72]
  466ae8:	b	4666e8 <_obstack_memory_used@@Base+0x52a0>
  466aec:	cmp	w0, #0x54
  466af0:	b.eq	466bbc <_obstack_memory_used@@Base+0x5774>  // b.none
  466af4:	cmp	w0, #0x61
  466af8:	b.ne	466c50 <_obstack_memory_used@@Base+0x5808>  // b.any
  466afc:	ldp	w0, w1, [x19, #40]
  466b00:	cmp	w0, w1
  466b04:	b.ge	466590 <_obstack_memory_used@@Base+0x5148>  // b.tcont
  466b08:	mov	w3, #0x18                  	// #24
  466b0c:	add	w1, w0, #0x1
  466b10:	ldr	x2, [x19, #32]
  466b14:	smull	x0, w0, w3
  466b18:	str	w1, [x19, #40]
  466b1c:	mov	w3, #0x4                   	// #4
  466b20:	add	x20, x2, x0
  466b24:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x1ebb8>
  466b28:	add	x1, x1, #0xf18
  466b2c:	str	xzr, [x2, x0]
  466b30:	str	x1, [x20, #8]
  466b34:	str	w3, [x20, #16]
  466b38:	b	466594 <_obstack_memory_used@@Base+0x514c>
  466b3c:	cmp	w0, #0x73
  466b40:	b.eq	466ee0 <_obstack_memory_used@@Base+0x5a98>  // b.none
  466b44:	b.ls	466c18 <_obstack_memory_used@@Base+0x57d0>  // b.plast
  466b48:	cmp	w0, #0x75
  466b4c:	b.eq	467048 <_obstack_memory_used@@Base+0x5c00>  // b.none
  466b50:	cmp	w0, #0x76
  466b54:	b.ne	466bb4 <_obstack_memory_used@@Base+0x576c>  // b.any
  466b58:	ldrb	w0, [x4, #2]
  466b5c:	cmp	w0, #0x5f
  466b60:	b.eq	4670e0 <_obstack_memory_used@@Base+0x5c98>  // b.none
  466b64:	mov	x0, x19
  466b68:	bl	463d90 <_obstack_memory_used@@Base+0x2948>
  466b6c:	mov	x20, x0
  466b70:	cbz	x20, 466590 <_obstack_memory_used@@Base+0x5148>
  466b74:	ldr	x0, [x19, #24]
  466b78:	ldrb	w1, [x0]
  466b7c:	cmp	w1, #0x5f
  466b80:	b.ne	466590 <_obstack_memory_used@@Base+0x5148>  // b.any
  466b84:	add	x0, x0, #0x1
  466b88:	str	x0, [x19, #24]
  466b8c:	mov	x0, x19
  466b90:	bl	466560 <_obstack_memory_used@@Base+0x5118>
  466b94:	mov	x3, x0
  466b98:	mov	x2, x20
  466b9c:	mov	x0, x19
  466ba0:	mov	w1, #0x2d                  	// #45
  466ba4:	bl	463a40 <_obstack_memory_used@@Base+0x25f8>
  466ba8:	mov	x20, x0
  466bac:	str	x0, [sp, #72]
  466bb0:	b	4666e8 <_obstack_memory_used@@Base+0x52a0>
  466bb4:	cmp	w0, #0x74
  466bb8:	b.ne	466590 <_obstack_memory_used@@Base+0x5148>  // b.any
  466bbc:	ldr	w20, [x19, #76]
  466bc0:	mov	w0, #0x1                   	// #1
  466bc4:	str	w0, [x19, #76]
  466bc8:	mov	x0, x19
  466bcc:	bl	464f48 <_obstack_memory_used@@Base+0x3b00>
  466bd0:	str	w20, [x19, #76]
  466bd4:	mov	x2, x0
  466bd8:	mov	x3, #0x0                   	// #0
  466bdc:	mov	x0, x19
  466be0:	mov	w1, #0x43                  	// #67
  466be4:	bl	463a40 <_obstack_memory_used@@Base+0x25f8>
  466be8:	str	x0, [sp, #72]
  466bec:	mov	x20, x0
  466bf0:	cbz	x0, 466590 <_obstack_memory_used@@Base+0x5148>
  466bf4:	ldr	x0, [x19, #24]
  466bf8:	ldrb	w1, [x0]
  466bfc:	cbz	w1, 466590 <_obstack_memory_used@@Base+0x5148>
  466c00:	add	x1, x0, #0x1
  466c04:	str	x1, [x19, #24]
  466c08:	ldrb	w0, [x0]
  466c0c:	cmp	w0, #0x45
  466c10:	b.ne	466590 <_obstack_memory_used@@Base+0x5148>  // b.any
  466c14:	b	4666ec <_obstack_memory_used@@Base+0x52a4>
  466c18:	cmp	w0, #0x6e
  466c1c:	b.eq	466fa8 <_obstack_memory_used@@Base+0x5b60>  // b.none
  466c20:	cmp	w0, #0x70
  466c24:	b.ne	466d00 <_obstack_memory_used@@Base+0x58b8>  // b.any
  466c28:	mov	x0, x19
  466c2c:	bl	466560 <_obstack_memory_used@@Base+0x5118>
  466c30:	mov	x3, #0x0                   	// #0
  466c34:	mov	x2, x0
  466c38:	mov	w1, #0x4b                  	// #75
  466c3c:	mov	x0, x19
  466c40:	bl	463a40 <_obstack_memory_used@@Base+0x25f8>
  466c44:	mov	x20, x0
  466c48:	str	x0, [sp, #72]
  466c4c:	b	4666e8 <_obstack_memory_used@@Base+0x52a0>
  466c50:	cmp	w0, #0x46
  466c54:	b.ne	466590 <_obstack_memory_used@@Base+0x5148>  // b.any
  466c58:	ldp	w0, w1, [x19, #40]
  466c5c:	cmp	w0, w1
  466c60:	b.ge	46711c <_obstack_memory_used@@Base+0x5cd4>  // b.tcont
  466c64:	mov	w2, #0x18                  	// #24
  466c68:	add	w3, w0, #0x1
  466c6c:	ldr	x1, [x19, #32]
  466c70:	smull	x0, w0, w2
  466c74:	mov	w2, #0x2c                  	// #44
  466c78:	add	x20, x1, x0
  466c7c:	str	wzr, [x20, #4]
  466c80:	str	w3, [x19, #40]
  466c84:	str	x20, [sp, #72]
  466c88:	str	w2, [x1, x0]
  466c8c:	ldrb	w0, [x4, #2]
  466c90:	sub	w0, w0, #0x30
  466c94:	and	w0, w0, #0xff
  466c98:	cmp	w0, #0x9
  466c9c:	cset	w1, ls  // ls = plast
  466ca0:	strh	w1, [x20, #16]
  466ca4:	b.hi	466cb4 <_obstack_memory_used@@Base+0x586c>  // b.pmore
  466ca8:	add	x0, x19, #0x18
  466cac:	bl	463cc0 <_obstack_memory_used@@Base+0x2878>
  466cb0:	ldr	x20, [sp, #72]
  466cb4:	mov	x0, x19
  466cb8:	bl	466560 <_obstack_memory_used@@Base+0x5118>
  466cbc:	str	x0, [x20, #8]
  466cc0:	ldr	x1, [sp, #72]
  466cc4:	ldr	x0, [x1, #8]
  466cc8:	cbz	x0, 466590 <_obstack_memory_used@@Base+0x5148>
  466ccc:	add	x0, x19, #0x18
  466cd0:	bl	463cc0 <_obstack_memory_used@@Base+0x2878>
  466cd4:	ldr	x1, [x19, #24]
  466cd8:	ldrb	w0, [x1]
  466cdc:	cbz	w0, 466cec <_obstack_memory_used@@Base+0x58a4>
  466ce0:	add	x0, x1, #0x1
  466ce4:	str	x0, [x19, #24]
  466ce8:	ldrb	w0, [x1]
  466cec:	ldr	x20, [sp, #72]
  466cf0:	cmp	w0, #0x73
  466cf4:	cset	w0, eq  // eq = none
  466cf8:	strh	w0, [x20, #18]
  466cfc:	b	466594 <_obstack_memory_used@@Base+0x514c>
  466d00:	cmp	w0, #0x69
  466d04:	b.ne	466590 <_obstack_memory_used@@Base+0x5148>  // b.any
  466d08:	ldp	w0, w1, [x19, #40]
  466d0c:	cmp	w0, w1
  466d10:	b.ge	467130 <_obstack_memory_used@@Base+0x5ce8>  // b.tcont
  466d14:	mov	w1, #0x18                  	// #24
  466d18:	add	w5, w0, #0x1
  466d1c:	ldr	x3, [x19, #32]
  466d20:	smull	x0, w0, w1
  466d24:	ldr	w2, [x19, #72]
  466d28:	adrp	x1, 4a2000 <_obstack_memory_used@@Base+0x40bb8>
  466d2c:	add	x1, x1, #0xdf0
  466d30:	add	x20, x3, x0
  466d34:	add	x1, x1, #0x588
  466d38:	mov	w4, #0x27                  	// #39
  466d3c:	str	wzr, [x20, #4]
  466d40:	add	w2, w2, #0x8
  466d44:	str	w5, [x19, #40]
  466d48:	str	w4, [x3, x0]
  466d4c:	str	x1, [x20, #8]
  466d50:	str	w2, [x19, #72]
  466d54:	b	466594 <_obstack_memory_used@@Base+0x514c>
  466d58:	cmp	w0, #0x64
  466d5c:	b.ne	466590 <_obstack_memory_used@@Base+0x5148>  // b.any
  466d60:	ldp	w0, w1, [x19, #40]
  466d64:	cmp	w0, w1
  466d68:	b.ge	467130 <_obstack_memory_used@@Base+0x5ce8>  // b.tcont
  466d6c:	mov	w1, #0x18                  	// #24
  466d70:	add	w5, w0, #0x1
  466d74:	ldr	x3, [x19, #32]
  466d78:	smull	x0, w0, w1
  466d7c:	adrp	x1, 4a2000 <_obstack_memory_used@@Base+0x40bb8>
  466d80:	add	x1, x1, #0xdf0
  466d84:	ldr	w2, [x19, #72]
  466d88:	add	x1, x1, #0x4e8
  466d8c:	add	x20, x3, x0
  466d90:	mov	w4, #0x27                  	// #39
  466d94:	b	466838 <_obstack_memory_used@@Base+0x53f0>
  466d98:	ldr	w0, [x19, #80]
  466d9c:	cbnz	w0, 466e90 <_obstack_memory_used@@Base+0x5a48>
  466da0:	cbz	x20, 466668 <_obstack_memory_used@@Base+0x5220>
  466da4:	ldp	w0, w1, [x19, #56]
  466da8:	cmp	w0, w1
  466dac:	b.ge	466668 <_obstack_memory_used@@Base+0x5220>  // b.tcont
  466db0:	ldr	x2, [x19, #48]
  466db4:	add	w1, w0, #0x1
  466db8:	mov	x3, #0x0                   	// #0
  466dbc:	str	x20, [x2, w0, sxtw #3]
  466dc0:	str	w1, [x19, #56]
  466dc4:	ldrb	w0, [x21]
  466dc8:	sub	w0, w0, #0x49
  466dcc:	and	w0, w0, #0xff
  466dd0:	cmp	w0, #0x1
  466dd4:	b.hi	466dec <_obstack_memory_used@@Base+0x59a4>  // b.pmore
  466dd8:	add	x21, x21, #0x1
  466ddc:	str	x21, [x19, #24]
  466de0:	mov	x0, x19
  466de4:	bl	465720 <_obstack_memory_used@@Base+0x42d8>
  466de8:	mov	x3, x0
  466dec:	mov	x2, x20
  466df0:	mov	x0, x19
  466df4:	mov	w1, #0x4                   	// #4
  466df8:	bl	463a40 <_obstack_memory_used@@Base+0x25f8>
  466dfc:	mov	x20, x0
  466e00:	str	x0, [sp, #72]
  466e04:	ldp	x21, x22, [sp, #32]
  466e08:	b	4666e8 <_obstack_memory_used@@Base+0x52a0>
  466e0c:	mov	x20, #0x0                   	// #0
  466e10:	b	466a78 <_obstack_memory_used@@Base+0x5630>
  466e14:	mov	x0, x19
  466e18:	bl	465fd8 <_obstack_memory_used@@Base+0x4b90>
  466e1c:	str	x0, [sp, #72]
  466e20:	mov	x20, x0
  466e24:	cbz	x0, 466590 <_obstack_memory_used@@Base+0x5148>
  466e28:	ldr	w0, [x0]
  466e2c:	cmp	w0, #0x18
  466e30:	b.ne	4666ec <_obstack_memory_used@@Base+0x52a4>  // b.any
  466e34:	b	466594 <_obstack_memory_used@@Base+0x514c>
  466e38:	add	x1, x1, #0x1
  466e3c:	str	x1, [x19, #24]
  466e40:	mov	x0, x19
  466e44:	bl	465720 <_obstack_memory_used@@Base+0x42d8>
  466e48:	mov	x3, x0
  466e4c:	mov	x2, x20
  466e50:	mov	x0, x19
  466e54:	mov	w1, #0x4                   	// #4
  466e58:	bl	463a40 <_obstack_memory_used@@Base+0x25f8>
  466e5c:	str	x0, [sp, #72]
  466e60:	b	46687c <_obstack_memory_used@@Base+0x5434>
  466e64:	ldr	w20, [x19, #76]
  466e68:	mov	w0, #0x1                   	// #1
  466e6c:	str	w0, [x19, #76]
  466e70:	mov	x0, x19
  466e74:	bl	464f48 <_obstack_memory_used@@Base+0x3b00>
  466e78:	str	w20, [x19, #76]
  466e7c:	mov	x20, x0
  466e80:	cbz	x0, 466590 <_obstack_memory_used@@Base+0x5148>
  466e84:	ldr	x1, [x19, #24]
  466e88:	ldrb	w0, [x1]
  466e8c:	b	466a6c <_obstack_memory_used@@Base+0x5624>
  466e90:	ldr	w22, [x19, #56]
  466e94:	add	x0, x21, #0x1
  466e98:	ldr	w20, [x19, #72]
  466e9c:	str	x23, [sp, #48]
  466ea0:	str	x0, [x19, #24]
  466ea4:	mov	x0, x19
  466ea8:	ldr	w23, [x19, #40]
  466eac:	bl	465720 <_obstack_memory_used@@Base+0x42d8>
  466eb0:	ldr	x1, [x19, #24]
  466eb4:	ldrb	w1, [x1]
  466eb8:	cmp	w1, #0x49
  466ebc:	b.eq	467098 <_obstack_memory_used@@Base+0x5c50>  // b.none
  466ec0:	str	x21, [x19, #24]
  466ec4:	str	w23, [x19, #40]
  466ec8:	str	w22, [x19, #56]
  466ecc:	str	w20, [x19, #72]
  466ed0:	ldp	x21, x22, [sp, #32]
  466ed4:	ldr	x23, [sp, #48]
  466ed8:	ldr	x20, [sp, #72]
  466edc:	b	4666e8 <_obstack_memory_used@@Base+0x52a0>
  466ee0:	ldp	w0, w1, [x19, #40]
  466ee4:	cmp	w0, w1
  466ee8:	b.ge	467130 <_obstack_memory_used@@Base+0x5ce8>  // b.tcont
  466eec:	mov	w1, #0x18                  	// #24
  466ef0:	add	w5, w0, #0x1
  466ef4:	ldr	x3, [x19, #32]
  466ef8:	smull	x0, w0, w1
  466efc:	adrp	x1, 4a2000 <_obstack_memory_used@@Base+0x40bb8>
  466f00:	add	x1, x1, #0xdf0
  466f04:	ldr	w2, [x19, #72]
  466f08:	add	x1, x1, #0x568
  466f0c:	add	x20, x3, x0
  466f10:	mov	w4, #0x27                  	// #39
  466f14:	b	466d3c <_obstack_memory_used@@Base+0x58f4>
  466f18:	ldp	w0, w1, [x19, #40]
  466f1c:	cmp	w0, w1
  466f20:	b.ge	466590 <_obstack_memory_used@@Base+0x5148>  // b.tcont
  466f24:	mov	w3, #0x18                  	// #24
  466f28:	add	w1, w0, #0x1
  466f2c:	ldr	x2, [x19, #32]
  466f30:	smull	x0, w0, w3
  466f34:	str	w1, [x19, #40]
  466f38:	mov	w3, #0xe                   	// #14
  466f3c:	add	x20, x2, x0
  466f40:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x1ebb8>
  466f44:	add	x1, x1, #0xf20
  466f48:	str	xzr, [x2, x0]
  466f4c:	str	x1, [x20, #8]
  466f50:	str	w3, [x20, #16]
  466f54:	b	466594 <_obstack_memory_used@@Base+0x514c>
  466f58:	ldp	w0, w1, [x19, #40]
  466f5c:	cmp	w0, w1
  466f60:	b.ge	467130 <_obstack_memory_used@@Base+0x5ce8>  // b.tcont
  466f64:	mov	w1, #0x18                  	// #24
  466f68:	add	w5, w0, #0x1
  466f6c:	ldr	x3, [x19, #32]
  466f70:	smull	x0, w0, w1
  466f74:	ldr	w2, [x19, #72]
  466f78:	mov	w4, #0x27                  	// #39
  466f7c:	add	x20, x3, x0
  466f80:	adrp	x1, 4a2000 <_obstack_memory_used@@Base+0x40bb8>
  466f84:	add	x1, x1, #0xdf0
  466f88:	add	w2, w2, #0x4
  466f8c:	add	x1, x1, #0x528
  466f90:	str	wzr, [x20, #4]
  466f94:	str	w5, [x19, #40]
  466f98:	str	w4, [x3, x0]
  466f9c:	str	x1, [x20, #8]
  466fa0:	str	w2, [x19, #72]
  466fa4:	b	466594 <_obstack_memory_used@@Base+0x514c>
  466fa8:	ldp	w0, w1, [x19, #40]
  466fac:	cmp	w0, w1
  466fb0:	b.ge	467130 <_obstack_memory_used@@Base+0x5ce8>  // b.tcont
  466fb4:	mov	w1, #0x18                  	// #24
  466fb8:	add	w5, w0, #0x1
  466fbc:	ldr	x3, [x19, #32]
  466fc0:	smull	x0, w0, w1
  466fc4:	ldr	w2, [x19, #72]
  466fc8:	mov	w4, #0x27                  	// #39
  466fcc:	add	x20, x3, x0
  466fd0:	adrp	x1, 4a2000 <_obstack_memory_used@@Base+0x40bb8>
  466fd4:	add	x1, x1, #0xdf0
  466fd8:	add	w2, w2, #0x11
  466fdc:	add	x1, x1, #0x5a8
  466fe0:	str	wzr, [x20, #4]
  466fe4:	str	w5, [x19, #40]
  466fe8:	str	w4, [x3, x0]
  466fec:	str	x1, [x20, #8]
  466ff0:	str	w2, [x19, #72]
  466ff4:	b	466594 <_obstack_memory_used@@Base+0x514c>
  466ff8:	ldp	w0, w1, [x19, #40]
  466ffc:	cmp	w0, w1
  467000:	b.ge	467130 <_obstack_memory_used@@Base+0x5ce8>  // b.tcont
  467004:	mov	w1, #0x18                  	// #24
  467008:	add	w5, w0, #0x1
  46700c:	ldr	x3, [x19, #32]
  467010:	smull	x0, w0, w1
  467014:	ldr	w2, [x19, #72]
  467018:	mov	w4, #0x27                  	// #39
  46701c:	add	x20, x3, x0
  467020:	adrp	x1, 4a2000 <_obstack_memory_used@@Base+0x40bb8>
  467024:	add	x1, x1, #0xdf0
  467028:	add	w2, w2, #0xa
  46702c:	add	x1, x1, #0x508
  467030:	str	wzr, [x20, #4]
  467034:	str	w5, [x19, #40]
  467038:	str	w4, [x3, x0]
  46703c:	str	x1, [x20, #8]
  467040:	str	w2, [x19, #72]
  467044:	b	466594 <_obstack_memory_used@@Base+0x514c>
  467048:	ldp	w0, w1, [x19, #40]
  46704c:	cmp	w0, w1
  467050:	b.ge	467130 <_obstack_memory_used@@Base+0x5ce8>  // b.tcont
  467054:	mov	w1, #0x18                  	// #24
  467058:	add	w5, w0, #0x1
  46705c:	ldr	x3, [x19, #32]
  467060:	smull	x0, w0, w1
  467064:	ldr	w2, [x19, #72]
  467068:	mov	w4, #0x27                  	// #39
  46706c:	add	x20, x3, x0
  467070:	adrp	x1, 4a2000 <_obstack_memory_used@@Base+0x40bb8>
  467074:	add	x1, x1, #0xdf0
  467078:	add	w2, w2, #0x7
  46707c:	add	x1, x1, #0x548
  467080:	str	wzr, [x20, #4]
  467084:	str	w5, [x19, #40]
  467088:	str	w4, [x3, x0]
  46708c:	str	x1, [x20, #8]
  467090:	str	w2, [x19, #72]
  467094:	b	466594 <_obstack_memory_used@@Base+0x514c>
  467098:	ldr	x2, [sp, #72]
  46709c:	cbz	x2, 467110 <_obstack_memory_used@@Base+0x5cc8>
  4670a0:	ldp	w4, w1, [x19, #56]
  4670a4:	cmp	w4, w1
  4670a8:	b.ge	467110 <_obstack_memory_used@@Base+0x5cc8>  // b.tcont
  4670ac:	ldr	x6, [x19, #48]
  4670b0:	add	w5, w4, #0x1
  4670b4:	mov	x3, x0
  4670b8:	mov	w1, #0x4                   	// #4
  4670bc:	mov	x0, x19
  4670c0:	str	x2, [x6, w4, sxtw #3]
  4670c4:	str	w5, [x19, #56]
  4670c8:	bl	463a40 <_obstack_memory_used@@Base+0x25f8>
  4670cc:	mov	x20, x0
  4670d0:	str	x0, [sp, #72]
  4670d4:	ldp	x21, x22, [sp, #32]
  4670d8:	ldr	x23, [sp, #48]
  4670dc:	b	4666e8 <_obstack_memory_used@@Base+0x52a0>
  4670e0:	add	x4, x4, #0x3
  4670e4:	stp	x21, x22, [sp, #32]
  4670e8:	mov	w1, #0x1                   	// #1
  4670ec:	ldr	w21, [x19, #76]
  4670f0:	mov	x0, x19
  4670f4:	str	x4, [x19, #24]
  4670f8:	str	w1, [x19, #76]
  4670fc:	bl	464f48 <_obstack_memory_used@@Base+0x3b00>
  467100:	mov	x20, x0
  467104:	str	w21, [x19, #76]
  467108:	ldp	x21, x22, [sp, #32]
  46710c:	b	466b70 <_obstack_memory_used@@Base+0x5728>
  467110:	ldp	x21, x22, [sp, #32]
  467114:	ldr	x23, [sp, #48]
  467118:	b	466590 <_obstack_memory_used@@Base+0x5148>
  46711c:	mov	x0, #0x0                   	// #0
  467120:	stp	x21, x22, [sp, #32]
  467124:	str	x23, [sp, #48]
  467128:	str	wzr, [x0]
  46712c:	brk	#0x3e8
  467130:	mov	x0, #0x0                   	// #0
  467134:	str	xzr, [sp, #72]
  467138:	stp	x21, x22, [sp, #32]
  46713c:	str	x23, [sp, #48]
  467140:	ldr	x0, [x0, #8]
  467144:	brk	#0x3e8
  467148:	stp	x29, x30, [sp, #-32]!
  46714c:	mov	x29, sp
  467150:	ldr	x1, [x0, #24]
  467154:	stp	x19, x20, [sp, #16]
  467158:	mov	x19, x0
  46715c:	ldrb	w10, [x1]
  467160:	cbz	w10, 467224 <_obstack_memory_used@@Base+0x5ddc>
  467164:	add	x2, x1, #0x1
  467168:	str	x2, [x0, #24]
  46716c:	ldrb	w10, [x1, #1]
  467170:	ldrb	w8, [x1]
  467174:	cbnz	w10, 46722c <_obstack_memory_used@@Base+0x5de4>
  467178:	adrp	x5, 4a2000 <_obstack_memory_used@@Base+0x40bb8>
  46717c:	add	x5, x5, #0xdf0
  467180:	add	x5, x5, #0x5c8
  467184:	mov	w4, #0x43                  	// #67
  467188:	mov	w2, #0x0                   	// #0
  46718c:	mov	w7, #0x18                  	// #24
  467190:	sub	w1, w4, w2
  467194:	add	w1, w1, w1, lsr #31
  467198:	add	w1, w2, w1, asr #1
  46719c:	smull	x3, w1, w7
  4671a0:	add	x9, x5, x3
  4671a4:	ldr	x3, [x5, x3]
  4671a8:	ldrb	w6, [x3]
  4671ac:	cmp	w6, w8
  4671b0:	b.eq	4671d4 <_obstack_memory_used@@Base+0x5d8c>  // b.none
  4671b4:	b.ls	46721c <_obstack_memory_used@@Base+0x5dd4>  // b.plast
  4671b8:	mov	w4, w1
  4671bc:	cmp	w2, w4
  4671c0:	b.ne	467190 <_obstack_memory_used@@Base+0x5d48>  // b.any
  4671c4:	mov	x0, #0x0                   	// #0
  4671c8:	ldp	x19, x20, [sp, #16]
  4671cc:	ldp	x29, x30, [sp], #32
  4671d0:	ret
  4671d4:	ldrb	w3, [x3, #1]
  4671d8:	cmp	w3, w10
  4671dc:	b.ne	4671b4 <_obstack_memory_used@@Base+0x5d6c>  // b.any
  4671e0:	ldp	w0, w1, [x19, #40]
  4671e4:	cmp	w0, w1
  4671e8:	b.ge	4671c4 <_obstack_memory_used@@Base+0x5d7c>  // b.tcont
  4671ec:	ldr	x2, [x19, #32]
  4671f0:	smull	x7, w0, w7
  4671f4:	add	w1, w0, #0x1
  4671f8:	mov	w3, #0x32                  	// #50
  4671fc:	add	x0, x2, x7
  467200:	str	wzr, [x0, #4]
  467204:	str	w1, [x19, #40]
  467208:	str	w3, [x2, x7]
  46720c:	str	x9, [x0, #8]
  467210:	ldp	x19, x20, [sp, #16]
  467214:	ldp	x29, x30, [sp], #32
  467218:	ret
  46721c:	add	w2, w1, #0x1
  467220:	b	4671bc <_obstack_memory_used@@Base+0x5d74>
  467224:	mov	w8, #0x0                   	// #0
  467228:	b	467178 <_obstack_memory_used@@Base+0x5d30>
  46722c:	add	x2, x1, #0x2
  467230:	str	x2, [x0, #24]
  467234:	cmp	w8, #0x76
  467238:	ldrb	w10, [x1, #1]
  46723c:	b.ne	467298 <_obstack_memory_used@@Base+0x5e50>  // b.any
  467240:	sub	w11, w10, #0x30
  467244:	and	w1, w11, #0xff
  467248:	cmp	w1, #0x9
  46724c:	b.hi	467178 <_obstack_memory_used@@Base+0x5d30>  // b.pmore
  467250:	bl	463ef0 <_obstack_memory_used@@Base+0x2aa8>
  467254:	mov	x2, x0
  467258:	ldp	w1, w0, [x19, #40]
  46725c:	cmp	w1, w0
  467260:	b.ge	4671c4 <_obstack_memory_used@@Base+0x5d7c>  // b.tcont
  467264:	mov	w0, #0x18                  	// #24
  467268:	add	w4, w1, #0x1
  46726c:	ldr	x3, [x19, #32]
  467270:	smull	x1, w1, w0
  467274:	add	x0, x3, x1
  467278:	str	wzr, [x0, #4]
  46727c:	str	w4, [x19, #40]
  467280:	cbz	x2, 4671c4 <_obstack_memory_used@@Base+0x5d7c>
  467284:	mov	x4, #0x33                  	// #51
  467288:	str	x4, [x3, x1]
  46728c:	str	w11, [x0, #8]
  467290:	str	x2, [x0, #16]
  467294:	b	4671c8 <_obstack_memory_used@@Base+0x5d80>
  467298:	cmp	w10, #0x76
  46729c:	mov	w1, #0x63                  	// #99
  4672a0:	ccmp	w8, w1, #0x0, eq  // eq = none
  4672a4:	b.ne	467178 <_obstack_memory_used@@Base+0x5d30>  // b.any
  4672a8:	ldp	w1, w20, [x0, #76]
  4672ac:	cmp	w1, #0x0
  4672b0:	cset	w1, eq  // eq = none
  4672b4:	str	w1, [x0, #80]
  4672b8:	bl	466560 <_obstack_memory_used@@Base+0x5118>
  4672bc:	mov	x2, x0
  4672c0:	ldr	w1, [x19, #80]
  4672c4:	mov	x3, #0x0                   	// #0
  4672c8:	cbz	w1, 4672e8 <_obstack_memory_used@@Base+0x5ea0>
  4672cc:	mov	x0, x19
  4672d0:	mov	w1, #0x35                  	// #53
  4672d4:	bl	463a40 <_obstack_memory_used@@Base+0x25f8>
  4672d8:	str	w20, [x19, #80]
  4672dc:	ldp	x19, x20, [sp, #16]
  4672e0:	ldp	x29, x30, [sp], #32
  4672e4:	ret
  4672e8:	mov	x0, x19
  4672ec:	mov	w1, #0x34                  	// #52
  4672f0:	bl	463a40 <_obstack_memory_used@@Base+0x25f8>
  4672f4:	str	w20, [x19, #80]
  4672f8:	b	4672dc <_obstack_memory_used@@Base+0x5e94>
  4672fc:	nop
  467300:	stp	x29, x30, [sp, #-64]!
  467304:	mov	x29, sp
  467308:	stp	x19, x20, [sp, #16]
  46730c:	mov	x19, x0
  467310:	mov	w0, #0x2e                  	// #46
  467314:	str	xzr, [sp, #56]
  467318:	ldr	x2, [x19, #24]
  46731c:	ldrb	w1, [x2]
  467320:	cmp	w1, #0x45
  467324:	ccmp	w1, #0x0, #0x4, ne  // ne = any
  467328:	ccmp	w1, w0, #0x4, ne  // ne = any
  46732c:	b.eq	4673c0 <_obstack_memory_used@@Base+0x5f78>  // b.none
  467330:	add	x20, sp, #0x38
  467334:	stp	x21, x22, [sp, #32]
  467338:	mov	w22, w0
  46733c:	mov	w21, #0x4f                  	// #79
  467340:	cmp	w1, #0x52
  467344:	mov	x0, x19
  467348:	ccmp	w1, w21, #0x4, ne  // ne = any
  46734c:	b.ne	46735c <_obstack_memory_used@@Base+0x5f14>  // b.any
  467350:	ldrb	w1, [x2, #1]
  467354:	cmp	w1, #0x45
  467358:	b.eq	46739c <_obstack_memory_used@@Base+0x5f54>  // b.none
  46735c:	bl	466560 <_obstack_memory_used@@Base+0x5118>
  467360:	mov	x2, x0
  467364:	mov	x3, #0x0                   	// #0
  467368:	mov	x0, x19
  46736c:	mov	w1, #0x2e                  	// #46
  467370:	cbz	x2, 4673bc <_obstack_memory_used@@Base+0x5f74>
  467374:	bl	463a40 <_obstack_memory_used@@Base+0x25f8>
  467378:	str	x0, [x20]
  46737c:	add	x20, x0, #0x10
  467380:	cbz	x0, 4673bc <_obstack_memory_used@@Base+0x5f74>
  467384:	ldr	x2, [x19, #24]
  467388:	ldrb	w1, [x2]
  46738c:	cmp	w1, #0x45
  467390:	ccmp	w1, #0x0, #0x4, ne  // ne = any
  467394:	ccmp	w1, w22, #0x4, ne  // ne = any
  467398:	b.ne	467340 <_obstack_memory_used@@Base+0x5ef8>  // b.any
  46739c:	ldr	x0, [sp, #56]
  4673a0:	cbz	x0, 4673bc <_obstack_memory_used@@Base+0x5f74>
  4673a4:	ldr	x1, [x0, #16]
  4673a8:	cbz	x1, 4673d0 <_obstack_memory_used@@Base+0x5f88>
  4673ac:	ldp	x21, x22, [sp, #32]
  4673b0:	ldp	x19, x20, [sp, #16]
  4673b4:	ldp	x29, x30, [sp], #64
  4673b8:	ret
  4673bc:	ldp	x21, x22, [sp, #32]
  4673c0:	mov	x0, #0x0                   	// #0
  4673c4:	ldp	x19, x20, [sp, #16]
  4673c8:	ldp	x29, x30, [sp], #64
  4673cc:	ret
  4673d0:	ldr	x1, [x0, #8]
  4673d4:	ldr	w2, [x1]
  4673d8:	cmp	w2, #0x27
  4673dc:	b.ne	4673ac <_obstack_memory_used@@Base+0x5f64>  // b.any
  4673e0:	ldr	x1, [x1, #8]
  4673e4:	ldr	w2, [x1, #28]
  4673e8:	cmp	w2, #0x9
  4673ec:	b.ne	4673ac <_obstack_memory_used@@Base+0x5f64>  // b.any
  4673f0:	ldr	w2, [x1, #8]
  4673f4:	ldr	w1, [x19, #72]
  4673f8:	ldp	x21, x22, [sp, #32]
  4673fc:	sub	w1, w1, w2
  467400:	str	w1, [x19, #72]
  467404:	str	xzr, [x0, #8]
  467408:	b	4673b0 <_obstack_memory_used@@Base+0x5f68>
  46740c:	nop
  467410:	stp	x29, x30, [sp, #-96]!
  467414:	cmp	w2, #0x0
  467418:	mov	x29, sp
  46741c:	stp	x19, x20, [sp, #16]
  467420:	mov	x19, x0
  467424:	mov	w0, #0x1b                  	// #27
  467428:	stp	x21, x22, [sp, #32]
  46742c:	mov	x20, x1
  467430:	mov	w22, #0x1c                  	// #28
  467434:	ldr	x4, [x19, #24]
  467438:	stp	x23, x24, [sp, #48]
  46743c:	mov	w23, #0x1d                  	// #29
  467440:	stp	x25, x26, [sp, #64]
  467444:	mov	w25, #0x1e                  	// #30
  467448:	csel	w25, w25, w0, ne  // ne = any
  46744c:	ldrb	w5, [x4]
  467450:	mov	w0, #0x1a                  	// #26
  467454:	csel	w23, w23, w0, ne  // ne = any
  467458:	mov	w0, #0x19                  	// #25
  46745c:	mov	w24, w2
  467460:	csel	w22, w22, w0, ne  // ne = any
  467464:	mov	x21, x1
  467468:	mov	x0, x4
  46746c:	mov	w26, #0x1                   	// #1
  467470:	bl	464400 <_obstack_memory_used@@Base+0x2fb8>
  467474:	cbz	w0, 467590 <_obstack_memory_used@@Base+0x6148>
  467478:	add	x0, x4, #0x1
  46747c:	str	x0, [x19, #24]
  467480:	cmp	w5, #0x72
  467484:	b.eq	467550 <_obstack_memory_used@@Base+0x6108>  // b.none
  467488:	cmp	w5, #0x56
  46748c:	b.eq	4675f0 <_obstack_memory_used@@Base+0x61a8>  // b.none
  467490:	cmp	w5, #0x4b
  467494:	b.eq	467608 <_obstack_memory_used@@Base+0x61c0>  // b.none
  467498:	ldrb	w0, [x4, #1]
  46749c:	cbz	w0, 467530 <_obstack_memory_used@@Base+0x60e8>
  4674a0:	add	x0, x4, #0x2
  4674a4:	str	x0, [x19, #24]
  4674a8:	ldrb	w0, [x4, #1]
  4674ac:	cmp	w0, #0x78
  4674b0:	b.eq	467620 <_obstack_memory_used@@Base+0x61d8>  // b.none
  4674b4:	and	w1, w0, #0xffffffdf
  4674b8:	cmp	w1, #0x4f
  4674bc:	and	w1, w1, #0xff
  4674c0:	b.ne	467638 <_obstack_memory_used@@Base+0x61f0>  // b.any
  4674c4:	ldr	w2, [x19, #72]
  4674c8:	cmp	w0, #0x4f
  4674cc:	add	w0, w2, #0x9
  4674d0:	str	w0, [x19, #72]
  4674d4:	b.ne	46767c <_obstack_memory_used@@Base+0x6234>  // b.any
  4674d8:	str	x27, [sp, #80]
  4674dc:	mov	x0, x19
  4674e0:	ldr	w27, [x19, #76]
  4674e4:	str	w26, [x19, #76]
  4674e8:	bl	464f48 <_obstack_memory_used@@Base+0x3b00>
  4674ec:	str	w27, [x19, #76]
  4674f0:	mov	x3, x0
  4674f4:	cbz	x0, 467694 <_obstack_memory_used@@Base+0x624c>
  4674f8:	ldr	x0, [x19, #24]
  4674fc:	ldrb	w1, [x0]
  467500:	cmp	w1, #0x45
  467504:	b.ne	467694 <_obstack_memory_used@@Base+0x624c>  // b.any
  467508:	add	x0, x0, #0x1
  46750c:	mov	w1, #0x4f                  	// #79
  467510:	ldr	x27, [sp, #80]
  467514:	str	x0, [x19, #24]
  467518:	mov	x2, #0x0                   	// #0
  46751c:	mov	x0, x19
  467520:	bl	463a40 <_obstack_memory_used@@Base+0x25f8>
  467524:	str	x0, [x20]
  467528:	cbnz	x0, 467578 <_obstack_memory_used@@Base+0x6130>
  46752c:	nop
  467530:	mov	x20, #0x0                   	// #0
  467534:	mov	x0, x20
  467538:	ldp	x19, x20, [sp, #16]
  46753c:	ldp	x21, x22, [sp, #32]
  467540:	ldp	x23, x24, [sp, #48]
  467544:	ldp	x25, x26, [sp, #64]
  467548:	ldp	x29, x30, [sp], #96
  46754c:	ret
  467550:	ldr	w0, [x19, #72]
  467554:	mov	w1, w22
  467558:	mov	x3, #0x0                   	// #0
  46755c:	add	w0, w0, #0x9
  467560:	str	w0, [x19, #72]
  467564:	mov	x0, x19
  467568:	mov	x2, #0x0                   	// #0
  46756c:	bl	463a40 <_obstack_memory_used@@Base+0x25f8>
  467570:	str	x0, [x20]
  467574:	cbz	x0, 467530 <_obstack_memory_used@@Base+0x60e8>
  467578:	ldr	x4, [x19, #24]
  46757c:	add	x20, x0, #0x8
  467580:	mov	x0, x4
  467584:	ldrb	w5, [x4]
  467588:	bl	464400 <_obstack_memory_used@@Base+0x2fb8>
  46758c:	cbnz	w0, 467478 <_obstack_memory_used@@Base+0x6030>
  467590:	cmp	w5, #0x46
  467594:	eor	w24, w24, #0x1
  467598:	cset	w0, eq  // eq = none
  46759c:	tst	w24, w0
  4675a0:	b.eq	467534 <_obstack_memory_used@@Base+0x60ec>  // b.none
  4675a4:	cmp	x20, x21
  4675a8:	b.eq	467534 <_obstack_memory_used@@Base+0x60ec>  // b.none
  4675ac:	mov	w3, #0x1d                  	// #29
  4675b0:	mov	w2, #0x1e                  	// #30
  4675b4:	mov	w1, #0x1c                  	// #28
  4675b8:	b	4675d0 <_obstack_memory_used@@Base+0x6188>
  4675bc:	cmp	w0, #0x19
  4675c0:	b.eq	46768c <_obstack_memory_used@@Base+0x6244>  // b.none
  4675c4:	add	x21, x21, #0x8
  4675c8:	cmp	x20, x21
  4675cc:	b.eq	467534 <_obstack_memory_used@@Base+0x60ec>  // b.none
  4675d0:	ldr	x21, [x21]
  4675d4:	ldr	w0, [x21]
  4675d8:	cmp	w0, #0x1a
  4675dc:	b.eq	467684 <_obstack_memory_used@@Base+0x623c>  // b.none
  4675e0:	cmp	w0, #0x1b
  4675e4:	b.ne	4675bc <_obstack_memory_used@@Base+0x6174>  // b.any
  4675e8:	str	w2, [x21]
  4675ec:	b	4675c4 <_obstack_memory_used@@Base+0x617c>
  4675f0:	ldr	w0, [x19, #72]
  4675f4:	mov	w1, w23
  4675f8:	mov	x3, #0x0                   	// #0
  4675fc:	add	w0, w0, #0x9
  467600:	str	w0, [x19, #72]
  467604:	b	467564 <_obstack_memory_used@@Base+0x611c>
  467608:	ldr	w0, [x19, #72]
  46760c:	mov	w1, w25
  467610:	mov	x3, #0x0                   	// #0
  467614:	add	w0, w0, #0x6
  467618:	str	w0, [x19, #72]
  46761c:	b	467564 <_obstack_memory_used@@Base+0x611c>
  467620:	ldr	w0, [x19, #72]
  467624:	mov	x3, #0x0                   	// #0
  467628:	mov	w1, #0x4d                  	// #77
  46762c:	add	w0, w0, #0x11
  467630:	str	w0, [x19, #72]
  467634:	b	467564 <_obstack_memory_used@@Base+0x611c>
  467638:	cmp	w0, #0x77
  46763c:	b.ne	467530 <_obstack_memory_used@@Base+0x60e8>  // b.any
  467640:	ldr	w1, [x19, #72]
  467644:	mov	x0, x19
  467648:	add	w1, w1, #0x6
  46764c:	str	w1, [x19, #72]
  467650:	bl	467300 <_obstack_memory_used@@Base+0x5eb8>
  467654:	mov	x3, x0
  467658:	cbz	x0, 467530 <_obstack_memory_used@@Base+0x60e8>
  46765c:	ldr	x0, [x19, #24]
  467660:	ldrb	w1, [x0]
  467664:	cmp	w1, #0x45
  467668:	b.ne	467530 <_obstack_memory_used@@Base+0x60e8>  // b.any
  46766c:	add	x0, x0, #0x1
  467670:	mov	w1, #0x50                  	// #80
  467674:	str	x0, [x19, #24]
  467678:	b	467564 <_obstack_memory_used@@Base+0x611c>
  46767c:	mov	x3, #0x0                   	// #0
  467680:	b	467564 <_obstack_memory_used@@Base+0x611c>
  467684:	str	w3, [x21]
  467688:	b	4675c4 <_obstack_memory_used@@Base+0x617c>
  46768c:	str	w1, [x21]
  467690:	b	4675c4 <_obstack_memory_used@@Base+0x617c>
  467694:	ldr	x27, [sp, #80]
  467698:	b	467530 <_obstack_memory_used@@Base+0x60e8>
  46769c:	nop
  4676a0:	stp	x29, x30, [sp, #-32]!
  4676a4:	mov	x29, sp
  4676a8:	stp	x19, x20, [sp, #16]
  4676ac:	mov	x19, x0
  4676b0:	ldr	x0, [x0, #24]
  4676b4:	ldrb	w2, [x0]
  4676b8:	cmp	w2, #0x4a
  4676bc:	b.eq	467720 <_obstack_memory_used@@Base+0x62d8>  // b.none
  4676c0:	cbz	w1, 4676fc <_obstack_memory_used@@Base+0x62b4>
  4676c4:	mov	x0, x19
  4676c8:	bl	466560 <_obstack_memory_used@@Base+0x5118>
  4676cc:	mov	x20, x0
  4676d0:	cbz	x0, 467710 <_obstack_memory_used@@Base+0x62c8>
  4676d4:	mov	x0, x19
  4676d8:	bl	467300 <_obstack_memory_used@@Base+0x5eb8>
  4676dc:	mov	x3, x0
  4676e0:	cbz	x0, 467710 <_obstack_memory_used@@Base+0x62c8>
  4676e4:	mov	x2, x20
  4676e8:	mov	x0, x19
  4676ec:	ldp	x19, x20, [sp, #16]
  4676f0:	mov	w1, #0x29                  	// #41
  4676f4:	ldp	x29, x30, [sp], #32
  4676f8:	b	463a40 <_obstack_memory_used@@Base+0x25f8>
  4676fc:	mov	x0, x19
  467700:	mov	x20, #0x0                   	// #0
  467704:	bl	467300 <_obstack_memory_used@@Base+0x5eb8>
  467708:	mov	x3, x0
  46770c:	cbnz	x0, 4676e4 <_obstack_memory_used@@Base+0x629c>
  467710:	mov	x0, #0x0                   	// #0
  467714:	ldp	x19, x20, [sp, #16]
  467718:	ldp	x29, x30, [sp], #32
  46771c:	ret
  467720:	add	x0, x0, #0x1
  467724:	str	x0, [x19, #24]
  467728:	b	4676c4 <_obstack_memory_used@@Base+0x627c>
  46772c:	nop
  467730:	stp	x29, x30, [sp, #-32]!
  467734:	mov	x29, sp
  467738:	str	x19, [sp, #16]
  46773c:	mov	x19, x0
  467740:	ldr	w0, [x0, #16]
  467744:	tbnz	w0, #18, 467780 <_obstack_memory_used@@Base+0x6338>
  467748:	ldr	w1, [x19, #84]
  46774c:	cmp	w1, #0x800
  467750:	b.hi	467790 <_obstack_memory_used@@Base+0x6348>  // b.pmore
  467754:	ldr	x2, [x19, #24]
  467758:	add	w0, w1, #0x1
  46775c:	str	w0, [x19, #84]
  467760:	mov	x0, #0x0                   	// #0
  467764:	ldrb	w3, [x2]
  467768:	cmp	w3, #0x46
  46776c:	b.eq	4677a0 <_obstack_memory_used@@Base+0x6358>  // b.none
  467770:	str	w1, [x19, #84]
  467774:	ldr	x19, [sp, #16]
  467778:	ldp	x29, x30, [sp], #32
  46777c:	ret
  467780:	ldr	x2, [x19, #24]
  467784:	ldrb	w0, [x2]
  467788:	cmp	w0, #0x46
  46778c:	b.eq	4677a0 <_obstack_memory_used@@Base+0x6358>  // b.none
  467790:	mov	x0, #0x0                   	// #0
  467794:	ldr	x19, [sp, #16]
  467798:	ldp	x29, x30, [sp], #32
  46779c:	ret
  4677a0:	add	x4, x2, #0x1
  4677a4:	str	x4, [x19, #24]
  4677a8:	add	x3, x2, #0x2
  4677ac:	mov	w1, #0x1                   	// #1
  4677b0:	ldrb	w2, [x2, #1]
  4677b4:	mov	x0, x19
  4677b8:	cmp	w2, #0x59
  4677bc:	csel	x2, x3, x4, eq  // eq = none
  4677c0:	str	x2, [x19, #24]
  4677c4:	bl	4676a0 <_obstack_memory_used@@Base+0x6258>
  4677c8:	mov	x1, x0
  4677cc:	mov	x0, x19
  4677d0:	bl	463ac8 <_obstack_memory_used@@Base+0x2680>
  4677d4:	ldr	x1, [x19, #24]
  4677d8:	ldrb	w2, [x1]
  4677dc:	cmp	w2, #0x45
  4677e0:	b.eq	467800 <_obstack_memory_used@@Base+0x63b8>  // b.none
  4677e4:	mov	x0, #0x0                   	// #0
  4677e8:	ldr	w1, [x19, #16]
  4677ec:	tbnz	w1, #18, 467794 <_obstack_memory_used@@Base+0x634c>
  4677f0:	ldr	w1, [x19, #84]
  4677f4:	sub	w1, w1, #0x1
  4677f8:	str	w1, [x19, #84]
  4677fc:	b	467774 <_obstack_memory_used@@Base+0x632c>
  467800:	add	x1, x1, #0x1
  467804:	str	x1, [x19, #24]
  467808:	b	4677e8 <_obstack_memory_used@@Base+0x63a0>
  46780c:	nop
  467810:	stp	x29, x30, [sp, #-48]!
  467814:	mov	x29, sp
  467818:	ldr	x3, [x0, #24]
  46781c:	stp	x19, x20, [sp, #16]
  467820:	mov	x19, x0
  467824:	ldrb	w2, [x3]
  467828:	sub	w1, w2, #0x30
  46782c:	and	w1, w1, #0xff
  467830:	cmp	w1, #0x9
  467834:	b.ls	467944 <_obstack_memory_used@@Base+0x64fc>  // b.plast
  467838:	sub	w1, w2, #0x61
  46783c:	and	w1, w1, #0xff
  467840:	cmp	w1, #0x19
  467844:	b.hi	46788c <_obstack_memory_used@@Base+0x6444>  // b.pmore
  467848:	cmp	w2, #0x6f
  46784c:	b.eq	467a0c <_obstack_memory_used@@Base+0x65c4>  // b.none
  467850:	mov	x0, x19
  467854:	bl	467148 <_obstack_memory_used@@Base+0x5d00>
  467858:	mov	x20, x0
  46785c:	cbz	x0, 46786c <_obstack_memory_used@@Base+0x6424>
  467860:	ldr	w0, [x0]
  467864:	cmp	w0, #0x32
  467868:	b.eq	467970 <_obstack_memory_used@@Base+0x6528>  // b.none
  46786c:	ldr	x0, [x19, #24]
  467870:	ldrb	w1, [x0]
  467874:	cmp	w1, #0x42
  467878:	b.eq	46795c <_obstack_memory_used@@Base+0x6514>  // b.none
  46787c:	mov	x0, x20
  467880:	ldp	x19, x20, [sp, #16]
  467884:	ldp	x29, x30, [sp], #48
  467888:	ret
  46788c:	sub	w1, w2, #0x43
  467890:	and	w1, w1, #0xff
  467894:	cmp	w1, #0x1
  467898:	b.ls	467a24 <_obstack_memory_used@@Base+0x65dc>  // b.plast
  46789c:	cmp	w2, #0x4c
  4678a0:	b.eq	4679d8 <_obstack_memory_used@@Base+0x6590>  // b.none
  4678a4:	cmp	w2, #0x55
  4678a8:	b.ne	4679f8 <_obstack_memory_used@@Base+0x65b0>  // b.any
  4678ac:	ldrb	w1, [x3, #1]
  4678b0:	cmp	w1, #0x6c
  4678b4:	b.eq	467ae8 <_obstack_memory_used@@Base+0x66a0>  // b.none
  4678b8:	cmp	w1, #0x74
  4678bc:	b.ne	4679f8 <_obstack_memory_used@@Base+0x65b0>  // b.any
  4678c0:	add	x1, x3, #0x1
  4678c4:	str	x1, [x0, #24]
  4678c8:	mov	x20, #0x0                   	// #0
  4678cc:	ldrb	w1, [x3, #1]
  4678d0:	cmp	w1, #0x74
  4678d4:	b.ne	467874 <_obstack_memory_used@@Base+0x642c>  // b.any
  4678d8:	add	x3, x3, #0x2
  4678dc:	str	x3, [x0, #24]
  4678e0:	bl	463df8 <_obstack_memory_used@@Base+0x29b0>
  4678e4:	tbnz	w0, #31, 46786c <_obstack_memory_used@@Base+0x6424>
  4678e8:	ldp	w1, w2, [x19, #40]
  4678ec:	cmp	w1, w2
  4678f0:	b.ge	467cb0 <_obstack_memory_used@@Base+0x6868>  // b.tcont
  4678f4:	ldp	x7, x3, [x19, #24]
  4678f8:	mov	w2, #0x18                  	// #24
  4678fc:	add	w6, w1, #0x1
  467900:	mov	w4, #0x48                  	// #72
  467904:	smull	x1, w1, w2
  467908:	sxtw	x0, w0
  46790c:	ldp	w2, w5, [x19, #56]
  467910:	add	x20, x3, x1
  467914:	cmp	w2, w5
  467918:	str	wzr, [x20, #4]
  46791c:	str	w6, [x19, #40]
  467920:	str	w4, [x3, x1]
  467924:	str	x0, [x20, #8]
  467928:	b.ge	467ca4 <_obstack_memory_used@@Base+0x685c>  // b.tcont
  46792c:	ldr	x1, [x19, #48]
  467930:	add	w0, w2, #0x1
  467934:	str	x20, [x1, w2, sxtw #3]
  467938:	str	w0, [x19, #56]
  46793c:	ldrb	w1, [x7]
  467940:	b	467874 <_obstack_memory_used@@Base+0x642c>
  467944:	bl	463ef0 <_obstack_memory_used@@Base+0x2aa8>
  467948:	mov	x20, x0
  46794c:	ldr	x3, [x19, #24]
  467950:	ldrb	w1, [x3]
  467954:	cmp	w1, #0x42
  467958:	b.ne	46787c <_obstack_memory_used@@Base+0x6434>  // b.any
  46795c:	mov	x1, x20
  467960:	mov	x0, x19
  467964:	ldp	x19, x20, [sp, #16]
  467968:	ldp	x29, x30, [sp], #48
  46796c:	b	464070 <_obstack_memory_used@@Base+0x2c28>
  467970:	ldr	x1, [x20, #8]
  467974:	ldr	w0, [x19, #72]
  467978:	ldr	x2, [x1]
  46797c:	add	w0, w0, #0x7
  467980:	ldr	w1, [x1, #16]
  467984:	add	w0, w0, w1
  467988:	str	w0, [x19, #72]
  46798c:	ldrb	w0, [x2]
  467990:	cmp	w0, #0x6c
  467994:	b.ne	46786c <_obstack_memory_used@@Base+0x6424>  // b.any
  467998:	ldrb	w0, [x2, #1]
  46799c:	cmp	w0, #0x69
  4679a0:	b.ne	46786c <_obstack_memory_used@@Base+0x6424>  // b.any
  4679a4:	ldrb	w0, [x2, #2]
  4679a8:	cbnz	w0, 46786c <_obstack_memory_used@@Base+0x6424>
  4679ac:	mov	x0, x19
  4679b0:	bl	463ef0 <_obstack_memory_used@@Base+0x2aa8>
  4679b4:	mov	x2, x20
  4679b8:	mov	x3, x0
  4679bc:	mov	w1, #0x37                  	// #55
  4679c0:	mov	x0, x19
  4679c4:	bl	463a40 <_obstack_memory_used@@Base+0x25f8>
  4679c8:	mov	x20, x0
  4679cc:	ldr	x3, [x19, #24]
  4679d0:	ldrb	w1, [x3]
  4679d4:	b	467874 <_obstack_memory_used@@Base+0x642c>
  4679d8:	add	x3, x3, #0x1
  4679dc:	str	x3, [x0, #24]
  4679e0:	bl	463ef0 <_obstack_memory_used@@Base+0x2aa8>
  4679e4:	mov	x20, x0
  4679e8:	cbz	x0, 4679f8 <_obstack_memory_used@@Base+0x65b0>
  4679ec:	mov	x0, x19
  4679f0:	bl	464458 <_obstack_memory_used@@Base+0x3010>
  4679f4:	cbnz	w0, 46786c <_obstack_memory_used@@Base+0x6424>
  4679f8:	mov	x20, #0x0                   	// #0
  4679fc:	mov	x0, x20
  467a00:	ldp	x19, x20, [sp, #16]
  467a04:	ldp	x29, x30, [sp], #48
  467a08:	ret
  467a0c:	ldrb	w0, [x3, #1]
  467a10:	cmp	w0, #0x6e
  467a14:	b.ne	467850 <_obstack_memory_used@@Base+0x6408>  // b.any
  467a18:	add	x3, x3, #0x2
  467a1c:	str	x3, [x19, #24]
  467a20:	b	467850 <_obstack_memory_used@@Base+0x6408>
  467a24:	ldr	x0, [x0, #64]
  467a28:	cbz	x0, 467a3c <_obstack_memory_used@@Base+0x65f4>
  467a2c:	ldr	w1, [x0]
  467a30:	cbz	w1, 467ab8 <_obstack_memory_used@@Base+0x6670>
  467a34:	cmp	w1, #0x18
  467a38:	b.eq	467ab8 <_obstack_memory_used@@Base+0x6670>  // b.none
  467a3c:	cmp	w2, #0x43
  467a40:	b.eq	467b98 <_obstack_memory_used@@Base+0x6750>  // b.none
  467a44:	ldrb	w1, [x3, #1]
  467a48:	cmp	w1, #0x32
  467a4c:	b.eq	467c9c <_obstack_memory_used@@Base+0x6854>  // b.none
  467a50:	b.hi	467c0c <_obstack_memory_used@@Base+0x67c4>  // b.pmore
  467a54:	cmp	w1, #0x30
  467a58:	b.eq	467c38 <_obstack_memory_used@@Base+0x67f0>  // b.none
  467a5c:	cmp	w1, #0x31
  467a60:	mov	w4, #0x2                   	// #2
  467a64:	b.ne	467c20 <_obstack_memory_used@@Base+0x67d8>  // b.any
  467a68:	add	x1, x3, #0x2
  467a6c:	ldr	w2, [x19, #44]
  467a70:	str	x1, [x19, #24]
  467a74:	ldr	w1, [x19, #40]
  467a78:	cmp	w1, w2
  467a7c:	b.ge	467c2c <_obstack_memory_used@@Base+0x67e4>  // b.tcont
  467a80:	mov	w6, #0x18                  	// #24
  467a84:	add	w5, w1, #0x1
  467a88:	ldr	x2, [x19, #32]
  467a8c:	smull	x1, w1, w6
  467a90:	add	x20, x2, x1
  467a94:	str	wzr, [x20, #4]
  467a98:	str	w5, [x19, #40]
  467a9c:	cbz	x0, 467c2c <_obstack_memory_used@@Base+0x67e4>
  467aa0:	mov	x5, #0x8                   	// #8
  467aa4:	str	x5, [x2, x1]
  467aa8:	str	w4, [x20, #8]
  467aac:	str	x0, [x20, #16]
  467ab0:	ldrb	w1, [x3, #2]
  467ab4:	b	467874 <_obstack_memory_used@@Base+0x642c>
  467ab8:	ldr	w2, [x0, #16]
  467abc:	ldr	w1, [x19, #72]
  467ac0:	add	w1, w1, w2
  467ac4:	str	w1, [x19, #72]
  467ac8:	ldrb	w1, [x3]
  467acc:	cmp	w1, #0x43
  467ad0:	mov	w2, w1
  467ad4:	b.eq	467b98 <_obstack_memory_used@@Base+0x6750>  // b.none
  467ad8:	cmp	w1, #0x44
  467adc:	b.eq	467a44 <_obstack_memory_used@@Base+0x65fc>  // b.none
  467ae0:	mov	x20, #0x0                   	// #0
  467ae4:	b	467874 <_obstack_memory_used@@Base+0x642c>
  467ae8:	add	x1, x3, #0x1
  467aec:	str	x1, [x0, #24]
  467af0:	mov	x20, #0x0                   	// #0
  467af4:	ldrb	w1, [x3, #1]
  467af8:	cmp	w1, #0x6c
  467afc:	b.ne	467874 <_obstack_memory_used@@Base+0x642c>  // b.any
  467b00:	add	x3, x3, #0x2
  467b04:	str	x3, [x0, #24]
  467b08:	bl	467300 <_obstack_memory_used@@Base+0x5eb8>
  467b0c:	mov	x11, x0
  467b10:	ldr	x0, [x19, #24]
  467b14:	ldrb	w1, [x0]
  467b18:	cbz	x11, 467874 <_obstack_memory_used@@Base+0x642c>
  467b1c:	cmp	w1, #0x45
  467b20:	b.ne	467874 <_obstack_memory_used@@Base+0x642c>  // b.any
  467b24:	add	x0, x0, #0x1
  467b28:	str	x0, [x19, #24]
  467b2c:	mov	x0, x19
  467b30:	bl	463df8 <_obstack_memory_used@@Base+0x29b0>
  467b34:	tbnz	w0, #31, 467cb0 <_obstack_memory_used@@Base+0x6868>
  467b38:	ldp	w1, w2, [x19, #40]
  467b3c:	ldr	x4, [x19, #24]
  467b40:	cmp	w1, w2
  467b44:	b.ge	467cc0 <_obstack_memory_used@@Base+0x6878>  // b.tcont
  467b48:	mov	w2, #0x18                  	// #24
  467b4c:	add	w6, w1, #0x1
  467b50:	ldr	x3, [x19, #32]
  467b54:	smull	x1, w1, w2
  467b58:	ldp	w2, w7, [x19, #56]
  467b5c:	add	x20, x3, x1
  467b60:	mov	w5, #0x46                  	// #70
  467b64:	cmp	w2, w7
  467b68:	str	wzr, [x20, #4]
  467b6c:	str	w6, [x19, #40]
  467b70:	str	w5, [x3, x1]
  467b74:	str	x11, [x20, #8]
  467b78:	str	w0, [x20, #16]
  467b7c:	b.ge	467cc0 <_obstack_memory_used@@Base+0x6878>  // b.tcont
  467b80:	ldr	x1, [x19, #48]
  467b84:	add	w0, w2, #0x1
  467b88:	str	x20, [x1, w2, sxtw #3]
  467b8c:	str	w0, [x19, #56]
  467b90:	ldrb	w1, [x4]
  467b94:	b	467874 <_obstack_memory_used@@Base+0x642c>
  467b98:	str	x21, [sp, #32]
  467b9c:	ldrb	w1, [x3, #1]
  467ba0:	cmp	w1, #0x49
  467ba4:	b.eq	467c48 <_obstack_memory_used@@Base+0x6800>  // b.none
  467ba8:	sub	w2, w1, #0x31
  467bac:	and	w2, w2, #0xff
  467bb0:	cmp	w2, #0x4
  467bb4:	b.hi	467c90 <_obstack_memory_used@@Base+0x6848>  // b.pmore
  467bb8:	sub	w21, w1, #0x30
  467bbc:	add	x3, x3, #0x2
  467bc0:	str	x3, [x19, #24]
  467bc4:	ldp	w1, w2, [x19, #40]
  467bc8:	cmp	w1, w2
  467bcc:	b.ge	467ccc <_obstack_memory_used@@Base+0x6884>  // b.tcont
  467bd0:	mov	w4, #0x18                  	// #24
  467bd4:	add	w3, w1, #0x1
  467bd8:	smull	x1, w1, w4
  467bdc:	ldp	x4, x2, [x19, #24]
  467be0:	add	x20, x2, x1
  467be4:	str	wzr, [x20, #4]
  467be8:	str	w3, [x19, #40]
  467bec:	cbz	x0, 467c80 <_obstack_memory_used@@Base+0x6838>
  467bf0:	mov	x3, #0x7                   	// #7
  467bf4:	str	x3, [x2, x1]
  467bf8:	str	w21, [x20, #8]
  467bfc:	str	x0, [x20, #16]
  467c00:	ldr	x21, [sp, #32]
  467c04:	ldrb	w1, [x4]
  467c08:	b	467874 <_obstack_memory_used@@Base+0x642c>
  467c0c:	cmp	w1, #0x34
  467c10:	b.eq	467c40 <_obstack_memory_used@@Base+0x67f8>  // b.none
  467c14:	cmp	w1, #0x35
  467c18:	mov	w4, #0x5                   	// #5
  467c1c:	b.eq	467a68 <_obstack_memory_used@@Base+0x6620>  // b.none
  467c20:	mov	w1, w2
  467c24:	mov	x20, #0x0                   	// #0
  467c28:	b	467874 <_obstack_memory_used@@Base+0x642c>
  467c2c:	ldrb	w1, [x3, #2]
  467c30:	mov	x20, #0x0                   	// #0
  467c34:	b	467874 <_obstack_memory_used@@Base+0x642c>
  467c38:	mov	w4, #0x1                   	// #1
  467c3c:	b	467a68 <_obstack_memory_used@@Base+0x6620>
  467c40:	mov	w4, #0x4                   	// #4
  467c44:	b	467a68 <_obstack_memory_used@@Base+0x6620>
  467c48:	add	x0, x3, #0x1
  467c4c:	str	x0, [x19, #24]
  467c50:	ldrb	w1, [x3, #2]
  467c54:	sub	w0, w1, #0x31
  467c58:	and	w0, w0, #0xff
  467c5c:	cmp	w0, #0x4
  467c60:	b.hi	467ce0 <_obstack_memory_used@@Base+0x6898>  // b.pmore
  467c64:	add	x3, x3, #0x3
  467c68:	str	x3, [x19, #24]
  467c6c:	sub	w21, w1, #0x30
  467c70:	mov	x0, x19
  467c74:	bl	466560 <_obstack_memory_used@@Base+0x5118>
  467c78:	ldr	x0, [x19, #64]
  467c7c:	b	467bc4 <_obstack_memory_used@@Base+0x677c>
  467c80:	ldrb	w1, [x4]
  467c84:	mov	x20, #0x0                   	// #0
  467c88:	ldr	x21, [sp, #32]
  467c8c:	b	467874 <_obstack_memory_used@@Base+0x642c>
  467c90:	mov	x20, #0x0                   	// #0
  467c94:	ldr	x21, [sp, #32]
  467c98:	b	4679fc <_obstack_memory_used@@Base+0x65b4>
  467c9c:	mov	w4, #0x3                   	// #3
  467ca0:	b	467a68 <_obstack_memory_used@@Base+0x6620>
  467ca4:	ldrb	w1, [x7]
  467ca8:	mov	x20, #0x0                   	// #0
  467cac:	b	467874 <_obstack_memory_used@@Base+0x642c>
  467cb0:	ldr	x0, [x19, #24]
  467cb4:	mov	x20, #0x0                   	// #0
  467cb8:	ldrb	w1, [x0]
  467cbc:	b	467874 <_obstack_memory_used@@Base+0x642c>
  467cc0:	ldrb	w1, [x4]
  467cc4:	mov	x20, #0x0                   	// #0
  467cc8:	b	467874 <_obstack_memory_used@@Base+0x642c>
  467ccc:	ldr	x0, [x19, #24]
  467cd0:	mov	x20, #0x0                   	// #0
  467cd4:	ldr	x21, [sp, #32]
  467cd8:	ldrb	w1, [x0]
  467cdc:	b	467874 <_obstack_memory_used@@Base+0x642c>
  467ce0:	ldrb	w1, [x3, #1]
  467ce4:	mov	x20, #0x0                   	// #0
  467ce8:	ldr	x21, [sp, #32]
  467cec:	b	467874 <_obstack_memory_used@@Base+0x642c>
  467cf0:	ldr	x2, [x0, #24]
  467cf4:	ldrb	w1, [x2]
  467cf8:	cmp	w1, #0x4c
  467cfc:	b.ne	467de4 <_obstack_memory_used@@Base+0x699c>  // b.any
  467d00:	stp	x29, x30, [sp, #-32]!
  467d04:	add	x1, x2, #0x1
  467d08:	mov	w4, #0x5a                  	// #90
  467d0c:	mov	x29, sp
  467d10:	str	x19, [sp, #16]
  467d14:	mov	x19, x0
  467d18:	str	x1, [x0, #24]
  467d1c:	ldrb	w3, [x2, #1]
  467d20:	cmp	w3, #0x5f
  467d24:	ccmp	w3, w4, #0x4, ne  // ne = any
  467d28:	b.eq	467da4 <_obstack_memory_used@@Base+0x695c>  // b.none
  467d2c:	bl	466560 <_obstack_memory_used@@Base+0x5118>
  467d30:	mov	x2, x0
  467d34:	cbz	x0, 467d94 <_obstack_memory_used@@Base+0x694c>
  467d38:	ldr	w0, [x0]
  467d3c:	cmp	w0, #0x27
  467d40:	b.eq	467e5c <_obstack_memory_used@@Base+0x6a14>  // b.none
  467d44:	ldr	x0, [x19, #24]
  467d48:	mov	w1, #0x3d                  	// #61
  467d4c:	ldrb	w4, [x0]
  467d50:	cmp	w4, #0x6e
  467d54:	b.ne	467d6c <_obstack_memory_used@@Base+0x6924>  // b.any
  467d58:	add	x3, x0, #0x1
  467d5c:	str	x3, [x19, #24]
  467d60:	mov	w1, #0x3e                  	// #62
  467d64:	ldrb	w4, [x0, #1]
  467d68:	mov	x0, x3
  467d6c:	cmp	w4, #0x45
  467d70:	b.eq	467e84 <_obstack_memory_used@@Base+0x6a3c>  // b.none
  467d74:	add	x3, x0, #0x1
  467d78:	b	467d8c <_obstack_memory_used@@Base+0x6944>
  467d7c:	str	x3, [x19, #24]
  467d80:	ldrb	w4, [x3], #1
  467d84:	cmp	w4, #0x45
  467d88:	b.eq	467e08 <_obstack_memory_used@@Base+0x69c0>  // b.none
  467d8c:	mov	x5, x3
  467d90:	cbnz	w4, 467d7c <_obstack_memory_used@@Base+0x6934>
  467d94:	mov	x0, #0x0                   	// #0
  467d98:	ldr	x19, [sp, #16]
  467d9c:	ldp	x29, x30, [sp], #32
  467da0:	ret
  467da4:	cmp	w3, #0x5f
  467da8:	b.eq	467dec <_obstack_memory_used@@Base+0x69a4>  // b.none
  467dac:	add	x1, x1, #0x1
  467db0:	str	x1, [x19, #24]
  467db4:	mov	x0, x19
  467db8:	mov	w1, #0x0                   	// #0
  467dbc:	bl	465818 <_obstack_memory_used@@Base+0x43d0>
  467dc0:	ldr	x1, [x19, #24]
  467dc4:	ldrb	w2, [x1]
  467dc8:	cmp	w2, #0x45
  467dcc:	b.ne	467d94 <_obstack_memory_used@@Base+0x694c>  // b.any
  467dd0:	add	x1, x1, #0x1
  467dd4:	str	x1, [x19, #24]
  467dd8:	ldr	x19, [sp, #16]
  467ddc:	ldp	x29, x30, [sp], #32
  467de0:	ret
  467de4:	mov	x0, #0x0                   	// #0
  467de8:	ret
  467dec:	add	x1, x2, #0x2
  467df0:	str	x1, [x19, #24]
  467df4:	mov	x0, #0x0                   	// #0
  467df8:	ldrb	w2, [x2, #2]
  467dfc:	cmp	w2, w4
  467e00:	b.ne	467dc8 <_obstack_memory_used@@Base+0x6980>  // b.any
  467e04:	b	467dac <_obstack_memory_used@@Base+0x6964>
  467e08:	sub	w5, w5, w0
  467e0c:	ldp	w3, w4, [x19, #40]
  467e10:	cmp	w3, w4
  467e14:	b.ge	467e7c <_obstack_memory_used@@Base+0x6a34>  // b.tcont
  467e18:	mov	w4, #0x18                  	// #24
  467e1c:	add	w7, w3, #0x1
  467e20:	ldr	x6, [x19, #32]
  467e24:	smull	x4, w3, w4
  467e28:	cmp	w5, #0x0
  467e2c:	add	x3, x6, x4
  467e30:	str	wzr, [x3, #4]
  467e34:	str	w7, [x19, #40]
  467e38:	b.le	467e7c <_obstack_memory_used@@Base+0x6a34>
  467e3c:	str	xzr, [x6, x4]
  467e40:	str	x0, [x3, #8]
  467e44:	str	w5, [x3, #16]
  467e48:	mov	x0, x19
  467e4c:	bl	463a40 <_obstack_memory_used@@Base+0x25f8>
  467e50:	ldr	x1, [x19, #24]
  467e54:	ldrb	w2, [x1]
  467e58:	b	467dc8 <_obstack_memory_used@@Base+0x6980>
  467e5c:	ldr	x0, [x2, #8]
  467e60:	ldr	w1, [x0, #28]
  467e64:	cbz	w1, 467d44 <_obstack_memory_used@@Base+0x68fc>
  467e68:	ldr	w1, [x0, #8]
  467e6c:	ldr	w0, [x19, #72]
  467e70:	sub	w0, w0, w1
  467e74:	str	w0, [x19, #72]
  467e78:	b	467d44 <_obstack_memory_used@@Base+0x68fc>
  467e7c:	mov	x3, #0x0                   	// #0
  467e80:	b	467e48 <_obstack_memory_used@@Base+0x6a00>
  467e84:	mov	w5, #0x0                   	// #0
  467e88:	b	467e0c <_obstack_memory_used@@Base+0x69c4>
  467e8c:	nop
  467e90:	stp	x29, x30, [sp, #-224]!
  467e94:	mov	x29, sp
  467e98:	stp	x19, x20, [sp, #16]
  467e9c:	mov	x19, x0
  467ea0:	cbz	x2, 467f28 <_obstack_memory_used@@Base+0x6ae0>
  467ea4:	stp	x21, x22, [sp, #32]
  467ea8:	ldr	w22, [x0, #304]
  467eac:	cbnz	w22, 467ef0 <_obstack_memory_used@@Base+0x6aa8>
  467eb0:	ldr	w0, [x2]
  467eb4:	mov	x20, x2
  467eb8:	cmp	w0, #0x50
  467ebc:	b.ls	467ed0 <_obstack_memory_used@@Base+0x6a88>  // b.plast
  467ec0:	mov	w0, #0x1                   	// #1
  467ec4:	ldp	x21, x22, [sp, #32]
  467ec8:	str	w0, [x19, #304]
  467ecc:	b	467ef4 <_obstack_memory_used@@Base+0x6aac>
  467ed0:	mov	w21, w1
  467ed4:	adrp	x1, 482000 <_obstack_memory_used@@Base+0x20bb8>
  467ed8:	add	x1, x1, #0x164
  467edc:	stp	x23, x24, [sp, #48]
  467ee0:	ldrh	w1, [x1, w0, uxtw #1]
  467ee4:	adr	x2, 467ef0 <_obstack_memory_used@@Base+0x6aa8>
  467ee8:	add	x1, x2, w1, sxth #2
  467eec:	br	x1
  467ef0:	ldp	x21, x22, [sp, #32]
  467ef4:	ldp	x19, x20, [sp, #16]
  467ef8:	ldp	x29, x30, [sp], #224
  467efc:	ret
  467f00:	ldr	x0, [x20, #16]
  467f04:	ldr	w1, [x0]
  467f08:	cmp	w1, #0x3b
  467f0c:	b.ne	467f20 <_obstack_memory_used@@Base+0x6ad8>  // b.any
  467f10:	ldr	x0, [x0, #16]
  467f14:	ldr	w0, [x0]
  467f18:	cmp	w0, #0x3c
  467f1c:	b.eq	46b408 <_obstack_memory_used@@Base+0x9fc0>  // b.none
  467f20:	ldp	x21, x22, [sp, #32]
  467f24:	ldp	x23, x24, [sp, #48]
  467f28:	mov	w0, #0x1                   	// #1
  467f2c:	str	w0, [x19, #304]
  467f30:	ldp	x19, x20, [sp, #16]
  467f34:	ldp	x29, x30, [sp], #224
  467f38:	ret
  467f3c:	ldp	x1, x2, [x19, #288]
  467f40:	add	x0, sp, #0x60
  467f44:	stp	x2, x20, [sp, #96]
  467f48:	str	wzr, [sp, #112]
  467f4c:	str	x1, [sp, #120]
  467f50:	str	x0, [x19, #296]
  467f54:	ldr	x2, [x20, #8]
  467f58:	mov	x0, x19
  467f5c:	mov	w1, w21
  467f60:	bl	46bca0 <_obstack_memory_used@@Base+0xa858>
  467f64:	ldr	w0, [sp, #112]
  467f68:	cbz	w0, 46a314 <_obstack_memory_used@@Base+0x8ecc>
  467f6c:	ldr	x0, [sp, #96]
  467f70:	str	x0, [x19, #296]
  467f74:	cbz	w22, 469b48 <_obstack_memory_used@@Base+0x8700>
  467f78:	ldp	x21, x22, [sp, #32]
  467f7c:	str	x23, [x19, #288]
  467f80:	ldp	x23, x24, [sp, #48]
  467f84:	b	467ef4 <_obstack_memory_used@@Base+0x6aac>
  467f88:	ldr	x4, [x19, #296]
  467f8c:	cbz	x4, 4680c8 <_obstack_memory_used@@Base+0x6c80>
  467f90:	mov	x1, x4
  467f94:	nop
  467f98:	ldr	w2, [x1, #16]
  467f9c:	cbnz	w2, 467fbc <_obstack_memory_used@@Base+0x6b74>
  467fa0:	ldr	x2, [x1, #8]
  467fa4:	ldr	w2, [x2]
  467fa8:	sub	w3, w2, #0x19
  467fac:	cmp	w3, #0x2
  467fb0:	b.hi	46af68 <_obstack_memory_used@@Base+0x9b20>  // b.pmore
  467fb4:	cmp	w0, w2
  467fb8:	b.eq	46af88 <_obstack_memory_used@@Base+0x9b40>  // b.none
  467fbc:	ldr	x1, [x1]
  467fc0:	cbnz	x1, 467f98 <_obstack_memory_used@@Base+0x6b50>
  467fc4:	b	4680c8 <_obstack_memory_used@@Base+0x6c80>
  467fc8:	ldp	x23, x24, [sp, #48]
  467fcc:	b	467ec0 <_obstack_memory_used@@Base+0x6a78>
  467fd0:	ldr	x2, [x20, #8]
  467fd4:	mov	w22, #0x0                   	// #0
  467fd8:	ldr	w1, [x2]
  467fdc:	cmp	w1, #0x27
  467fe0:	b.eq	46a7f0 <_obstack_memory_used@@Base+0x93a8>  // b.none
  467fe4:	ldr	x1, [x19, #256]
  467fe8:	add	x0, x1, #0x1
  467fec:	cmp	x1, #0xff
  467ff0:	b.ne	46801c <_obstack_memory_used@@Base+0x6bd4>  // b.any
  467ff4:	ldp	x3, x2, [x19, #272]
  467ff8:	strb	wzr, [x19, #255]
  467ffc:	mov	x0, x19
  468000:	blr	x3
  468004:	ldr	x3, [x19, #320]
  468008:	mov	x0, #0x1                   	// #1
  46800c:	mov	x1, #0x0                   	// #0
  468010:	add	x3, x3, x0
  468014:	ldr	x2, [x20, #8]
  468018:	str	x3, [x19, #320]
  46801c:	str	x0, [x19, #256]
  468020:	mov	w0, #0x28                  	// #40
  468024:	strb	w0, [x19, x1]
  468028:	mov	w1, w21
  46802c:	strb	w0, [x19, #264]
  468030:	mov	x0, x19
  468034:	bl	46bca0 <_obstack_memory_used@@Base+0xa858>
  468038:	ldr	x1, [x19, #256]
  46803c:	cmp	x1, #0xff
  468040:	b.eq	46aee0 <_obstack_memory_used@@Base+0x9a98>  // b.none
  468044:	add	x3, x1, #0x1
  468048:	str	x3, [x19, #256]
  46804c:	mov	w0, #0x29                  	// #41
  468050:	strb	w0, [x19, x1]
  468054:	strb	w0, [x19, #264]
  468058:	ldr	w0, [x20]
  46805c:	cmp	w0, #0x3e
  468060:	b.eq	46afa4 <_obstack_memory_used@@Base+0x9b5c>  // b.none
  468064:	cmp	w22, #0x8
  468068:	b.eq	46ad84 <_obstack_memory_used@@Base+0x993c>  // b.none
  46806c:	ldr	x2, [x20, #16]
  468070:	mov	w1, w21
  468074:	mov	x0, x19
  468078:	bl	46bca0 <_obstack_memory_used@@Base+0xa858>
  46807c:	ldp	x21, x22, [sp, #32]
  468080:	ldp	x23, x24, [sp, #48]
  468084:	b	467ef4 <_obstack_memory_used@@Base+0x6aac>
  468088:	ldr	w2, [x19, #312]
  46808c:	ldr	x0, [x20, #8]
  468090:	ldr	w1, [x0]
  468094:	cbnz	w2, 4680a4 <_obstack_memory_used@@Base+0x6c5c>
  468098:	cmp	w1, #0x5
  46809c:	mov	w22, #0x0                   	// #0
  4680a0:	b.eq	46b364 <_obstack_memory_used@@Base+0x9f1c>  // b.none
  4680a4:	cmp	w1, #0x23
  4680a8:	ldr	x4, [x19, #296]
  4680ac:	b.eq	46a3bc <_obstack_memory_used@@Base+0x8f74>  // b.none
  4680b0:	ldr	w2, [x20]
  4680b4:	cmp	w2, w1
  4680b8:	b.eq	46a3bc <_obstack_memory_used@@Base+0x8f74>  // b.none
  4680bc:	cmp	w1, #0x24
  4680c0:	b.eq	469b24 <_obstack_memory_used@@Base+0x86dc>  // b.none
  4680c4:	nop
  4680c8:	ldr	x1, [x19, #288]
  4680cc:	add	x0, sp, #0x60
  4680d0:	stp	x4, x20, [sp, #96]
  4680d4:	str	wzr, [sp, #112]
  4680d8:	str	x1, [sp, #120]
  4680dc:	str	x0, [x19, #296]
  4680e0:	b	467f54 <_obstack_memory_used@@Base+0x6b0c>
  4680e4:	ldr	x2, [x20, #8]
  4680e8:	mov	w1, w21
  4680ec:	mov	x0, x19
  4680f0:	bl	46bca0 <_obstack_memory_used@@Base+0xa858>
  4680f4:	tbz	w21, #2, 46ad28 <_obstack_memory_used@@Base+0x98e0>
  4680f8:	ldr	x1, [x19, #256]
  4680fc:	add	x0, x1, #0x1
  468100:	cmp	x1, #0xff
  468104:	b.ne	46812c <_obstack_memory_used@@Base+0x6ce4>  // b.any
  468108:	ldp	x3, x2, [x19, #272]
  46810c:	strb	wzr, [x19, #255]
  468110:	mov	x0, x19
  468114:	blr	x3
  468118:	ldr	x2, [x19, #320]
  46811c:	mov	x0, #0x1                   	// #1
  468120:	mov	x1, #0x0                   	// #0
  468124:	add	x2, x2, x0
  468128:	str	x2, [x19, #320]
  46812c:	str	x0, [x19, #256]
  468130:	mov	w0, #0x2e                  	// #46
  468134:	strb	w0, [x19, x1]
  468138:	strb	w0, [x19, #264]
  46813c:	ldr	x23, [x20, #16]
  468140:	ldr	w0, [x23]
  468144:	cmp	w0, #0x47
  468148:	b.eq	46afe0 <_obstack_memory_used@@Base+0x9b98>  // b.none
  46814c:	mov	x2, x23
  468150:	mov	w1, w21
  468154:	mov	x0, x19
  468158:	bl	46bca0 <_obstack_memory_used@@Base+0xa858>
  46815c:	ldp	x21, x22, [sp, #32]
  468160:	ldp	x23, x24, [sp, #48]
  468164:	b	467ef4 <_obstack_memory_used@@Base+0x6aac>
  468168:	ldp	x3, x4, [x19, #288]
  46816c:	add	x0, sp, #0x60
  468170:	ldr	x2, [x20, #16]
  468174:	str	x0, [x19, #296]
  468178:	mov	w1, w21
  46817c:	mov	x0, x19
  468180:	stp	x4, x20, [sp, #96]
  468184:	str	wzr, [sp, #112]
  468188:	str	x3, [sp, #120]
  46818c:	bl	46bca0 <_obstack_memory_used@@Base+0xa858>
  468190:	ldr	w0, [sp, #112]
  468194:	cbz	w0, 46aca4 <_obstack_memory_used@@Base+0x985c>
  468198:	ldr	x0, [sp, #96]
  46819c:	ldp	x21, x22, [sp, #32]
  4681a0:	ldp	x23, x24, [sp, #48]
  4681a4:	str	x0, [x19, #296]
  4681a8:	b	467ef4 <_obstack_memory_used@@Base+0x6aac>
  4681ac:	ldr	x2, [x20, #8]
  4681b0:	cbz	x2, 4681c0 <_obstack_memory_used@@Base+0x6d78>
  4681b4:	mov	w1, w21
  4681b8:	mov	x0, x19
  4681bc:	bl	46bca0 <_obstack_memory_used@@Base+0xa858>
  4681c0:	ldr	x0, [x20, #16]
  4681c4:	cbz	x0, 46af50 <_obstack_memory_used@@Base+0x9b08>
  4681c8:	ldr	x22, [x19, #256]
  4681cc:	cmp	x22, #0xfd
  4681d0:	b.ls	4681fc <_obstack_memory_used@@Base+0x6db4>  // b.plast
  4681d4:	strb	wzr, [x19, x22]
  4681d8:	mov	x1, x22
  4681dc:	mov	x0, x19
  4681e0:	mov	x22, #0x0                   	// #0
  4681e4:	ldp	x3, x2, [x19, #272]
  4681e8:	blr	x3
  4681ec:	str	xzr, [x19, #256]
  4681f0:	ldr	x0, [x19, #320]
  4681f4:	add	x0, x0, #0x1
  4681f8:	str	x0, [x19, #320]
  4681fc:	mov	w23, #0x2c                  	// #44
  468200:	mov	x24, #0x0                   	// #0
  468204:	b	468228 <_obstack_memory_used@@Base+0x6de0>
  468208:	mov	x0, x22
  46820c:	add	x22, x22, #0x1
  468210:	str	x22, [x19, #256]
  468214:	strb	w23, [x19, x0]
  468218:	strb	w23, [x19, #264]
  46821c:	mov	w23, #0x20                  	// #32
  468220:	cbnz	x24, 46a35c <_obstack_memory_used@@Base+0x8f14>
  468224:	mov	x24, #0x1                   	// #1
  468228:	cmp	x22, #0xff
  46822c:	b.ne	468208 <_obstack_memory_used@@Base+0x6dc0>  // b.any
  468230:	ldp	x3, x2, [x19, #272]
  468234:	strb	wzr, [x19, #255]
  468238:	mov	x1, x22
  46823c:	mov	x0, x19
  468240:	mov	x22, #0x1                   	// #1
  468244:	blr	x3
  468248:	ldr	x1, [x19, #320]
  46824c:	mov	x0, #0x0                   	// #0
  468250:	add	x1, x1, x22
  468254:	str	x1, [x19, #320]
  468258:	b	468210 <_obstack_memory_used@@Base+0x6dc8>
  46825c:	ldr	x2, [x20, #16]
  468260:	mov	w1, w21
  468264:	mov	x0, x19
  468268:	bl	46bca0 <_obstack_memory_used@@Base+0xa858>
  46826c:	ldp	x21, x22, [sp, #32]
  468270:	ldp	x23, x24, [sp, #48]
  468274:	b	467ef4 <_obstack_memory_used@@Base+0x6aac>
  468278:	adrp	x24, 480000 <_obstack_memory_used@@Base+0x1ebb8>
  46827c:	add	x24, x24, #0xee0
  468280:	adrp	x22, 480000 <_obstack_memory_used@@Base+0x1ebb8>
  468284:	add	x24, x24, #0x1c
  468288:	add	x22, x22, #0xee1
  46828c:	mov	w23, #0x67                  	// #103
  468290:	ldr	x1, [x19, #256]
  468294:	b	4682b8 <_obstack_memory_used@@Base+0x6e70>
  468298:	mov	x0, x1
  46829c:	add	x1, x1, #0x1
  4682a0:	str	x1, [x19, #256]
  4682a4:	cmp	x22, x24
  4682a8:	strb	w23, [x19, x0]
  4682ac:	strb	w23, [x19, #264]
  4682b0:	b.eq	469f5c <_obstack_memory_used@@Base+0x8b14>  // b.none
  4682b4:	ldrb	w23, [x22], #1
  4682b8:	cmp	x1, #0xff
  4682bc:	b.ne	468298 <_obstack_memory_used@@Base+0x6e50>  // b.any
  4682c0:	ldp	x3, x2, [x19, #272]
  4682c4:	strb	wzr, [x19, #255]
  4682c8:	mov	x0, x19
  4682cc:	blr	x3
  4682d0:	ldr	x2, [x19, #320]
  4682d4:	mov	x1, #0x1                   	// #1
  4682d8:	mov	x0, #0x0                   	// #0
  4682dc:	add	x2, x2, x1
  4682e0:	str	x2, [x19, #320]
  4682e4:	b	4682a0 <_obstack_memory_used@@Base+0x6e58>
  4682e8:	adrp	x22, 482000 <_obstack_memory_used@@Base+0x20bb8>
  4682ec:	add	x22, x22, #0x380
  4682f0:	add	x24, x22, #0x8
  4682f4:	mov	w23, #0x7b                  	// #123
  4682f8:	ldr	x1, [x19, #256]
  4682fc:	b	468324 <_obstack_memory_used@@Base+0x6edc>
  468300:	mov	x0, x1
  468304:	add	x1, x1, #0x1
  468308:	str	x1, [x19, #256]
  46830c:	add	x22, x22, #0x1
  468310:	strb	w23, [x19, x0]
  468314:	cmp	x24, x22
  468318:	strb	w23, [x19, #264]
  46831c:	b.eq	469f78 <_obstack_memory_used@@Base+0x8b30>  // b.none
  468320:	ldrb	w23, [x22]
  468324:	cmp	x1, #0xff
  468328:	b.ne	468300 <_obstack_memory_used@@Base+0x6eb8>  // b.any
  46832c:	ldp	x3, x2, [x19, #272]
  468330:	strb	wzr, [x19, #255]
  468334:	mov	x0, x19
  468338:	blr	x3
  46833c:	ldr	x2, [x19, #320]
  468340:	mov	x1, #0x1                   	// #1
  468344:	mov	x0, #0x0                   	// #0
  468348:	add	x2, x2, x1
  46834c:	str	x2, [x19, #320]
  468350:	b	468308 <_obstack_memory_used@@Base+0x6ec0>
  468354:	adrp	x23, 482000 <_obstack_memory_used@@Base+0x20bb8>
  468358:	add	x23, x23, #0x390
  46835c:	adrp	x21, 482000 <_obstack_memory_used@@Base+0x20bb8>
  468360:	add	x23, x23, #0xe
  468364:	add	x21, x21, #0x391
  468368:	mov	w22, #0x7b                  	// #123
  46836c:	ldr	x1, [x19, #256]
  468370:	b	468394 <_obstack_memory_used@@Base+0x6f4c>
  468374:	mov	x0, x1
  468378:	add	x1, x1, #0x1
  46837c:	str	x1, [x19, #256]
  468380:	cmp	x23, x21
  468384:	strb	w22, [x19, x0]
  468388:	strb	w22, [x19, #264]
  46838c:	b.eq	469e6c <_obstack_memory_used@@Base+0x8a24>  // b.none
  468390:	ldrb	w22, [x21], #1
  468394:	cmp	x1, #0xff
  468398:	b.ne	468374 <_obstack_memory_used@@Base+0x6f2c>  // b.any
  46839c:	ldp	x3, x2, [x19, #272]
  4683a0:	strb	wzr, [x19, #255]
  4683a4:	mov	x0, x19
  4683a8:	blr	x3
  4683ac:	ldr	x2, [x19, #320]
  4683b0:	mov	x1, #0x1                   	// #1
  4683b4:	mov	x0, #0x0                   	// #0
  4683b8:	add	x2, x2, x1
  4683bc:	str	x2, [x19, #320]
  4683c0:	b	46837c <_obstack_memory_used@@Base+0x6f34>
  4683c4:	adrp	x24, 480000 <_obstack_memory_used@@Base+0x1ebb8>
  4683c8:	add	x24, x24, #0xe58
  4683cc:	adrp	x22, 480000 <_obstack_memory_used@@Base+0x1ebb8>
  4683d0:	add	x24, x24, #0x16
  4683d4:	add	x22, x22, #0xe59
  4683d8:	mov	w23, #0x74                  	// #116
  4683dc:	ldr	x1, [x19, #256]
  4683e0:	b	468404 <_obstack_memory_used@@Base+0x6fbc>
  4683e4:	mov	x0, x1
  4683e8:	add	x1, x1, #0x1
  4683ec:	str	x1, [x19, #256]
  4683f0:	cmp	x24, x22
  4683f4:	strb	w23, [x19, x0]
  4683f8:	strb	w23, [x19, #264]
  4683fc:	b.eq	469f40 <_obstack_memory_used@@Base+0x8af8>  // b.none
  468400:	ldrb	w23, [x22], #1
  468404:	cmp	x1, #0xff
  468408:	b.ne	4683e4 <_obstack_memory_used@@Base+0x6f9c>  // b.any
  46840c:	ldp	x3, x2, [x19, #272]
  468410:	strb	wzr, [x19, #255]
  468414:	mov	x0, x19
  468418:	blr	x3
  46841c:	ldr	x2, [x19, #320]
  468420:	mov	x1, #0x1                   	// #1
  468424:	mov	x0, #0x0                   	// #0
  468428:	add	x2, x2, x1
  46842c:	str	x2, [x19, #320]
  468430:	b	4683ec <_obstack_memory_used@@Base+0x6fa4>
  468434:	adrp	x24, 480000 <_obstack_memory_used@@Base+0x1ebb8>
  468438:	add	x24, x24, #0xd18
  46843c:	adrp	x22, 480000 <_obstack_memory_used@@Base+0x1ebb8>
  468440:	add	x24, x24, #0x1e
  468444:	add	x22, x22, #0xd19
  468448:	mov	w23, #0x74                  	// #116
  46844c:	ldr	x1, [x19, #256]
  468450:	b	468474 <_obstack_memory_used@@Base+0x702c>
  468454:	mov	x0, x1
  468458:	add	x1, x1, #0x1
  46845c:	str	x1, [x19, #256]
  468460:	cmp	x24, x22
  468464:	strb	w23, [x19, x0]
  468468:	strb	w23, [x19, #264]
  46846c:	b.eq	469e50 <_obstack_memory_used@@Base+0x8a08>  // b.none
  468470:	ldrb	w23, [x22], #1
  468474:	cmp	x1, #0xff
  468478:	b.ne	468454 <_obstack_memory_used@@Base+0x700c>  // b.any
  46847c:	ldp	x3, x2, [x19, #272]
  468480:	strb	wzr, [x19, #255]
  468484:	mov	x0, x19
  468488:	blr	x3
  46848c:	ldr	x2, [x19, #320]
  468490:	mov	x1, #0x1                   	// #1
  468494:	mov	x0, #0x0                   	// #0
  468498:	add	x2, x2, x1
  46849c:	str	x2, [x19, #320]
  4684a0:	b	46845c <_obstack_memory_used@@Base+0x7014>
  4684a4:	ldp	x2, x20, [x20, #8]
  4684a8:	cbz	x2, 4684b8 <_obstack_memory_used@@Base+0x7070>
  4684ac:	mov	w1, w21
  4684b0:	mov	x0, x19
  4684b4:	bl	46bca0 <_obstack_memory_used@@Base+0xa858>
  4684b8:	ldr	x1, [x19, #256]
  4684bc:	add	x0, x1, #0x1
  4684c0:	cmp	x1, #0xff
  4684c4:	b.ne	4684ec <_obstack_memory_used@@Base+0x70a4>  // b.any
  4684c8:	ldp	x3, x2, [x19, #272]
  4684cc:	strb	wzr, [x19, #255]
  4684d0:	mov	x0, x19
  4684d4:	blr	x3
  4684d8:	ldr	x2, [x19, #320]
  4684dc:	mov	x0, #0x1                   	// #1
  4684e0:	mov	x1, #0x0                   	// #0
  4684e4:	add	x2, x2, x0
  4684e8:	str	x2, [x19, #320]
  4684ec:	str	x0, [x19, #256]
  4684f0:	mov	w0, #0x7b                  	// #123
  4684f4:	strb	w0, [x19, x1]
  4684f8:	mov	x2, x20
  4684fc:	strb	w0, [x19, #264]
  468500:	mov	w1, w21
  468504:	mov	x0, x19
  468508:	bl	46bca0 <_obstack_memory_used@@Base+0xa858>
  46850c:	ldr	x1, [x19, #256]
  468510:	add	x0, x1, #0x1
  468514:	cmp	x1, #0xff
  468518:	b.ne	468540 <_obstack_memory_used@@Base+0x70f8>  // b.any
  46851c:	ldp	x3, x2, [x19, #272]
  468520:	strb	wzr, [x19, #255]
  468524:	mov	x0, x19
  468528:	blr	x3
  46852c:	ldr	x2, [x19, #320]
  468530:	mov	x0, #0x1                   	// #1
  468534:	mov	x1, #0x0                   	// #0
  468538:	add	x2, x2, x0
  46853c:	str	x2, [x19, #320]
  468540:	str	x0, [x19, #256]
  468544:	mov	w0, #0x7d                  	// #125
  468548:	strb	w0, [x19, x1]
  46854c:	strb	w0, [x19, #264]
  468550:	ldp	x21, x22, [sp, #32]
  468554:	ldp	x23, x24, [sp, #48]
  468558:	b	467ef4 <_obstack_memory_used@@Base+0x6aac>
  46855c:	ldr	x22, [x20, #8]
  468560:	adrp	x20, 482000 <_obstack_memory_used@@Base+0x20bb8>
  468564:	add	x20, x20, #0x330
  468568:	mov	w21, #0x6f                  	// #111
  46856c:	add	x24, x20, #0x8
  468570:	ldr	w23, [x22, #16]
  468574:	ldr	x1, [x19, #256]
  468578:	b	4685a0 <_obstack_memory_used@@Base+0x7158>
  46857c:	mov	x0, x1
  468580:	add	x1, x1, #0x1
  468584:	str	x1, [x19, #256]
  468588:	add	x20, x20, #0x1
  46858c:	strb	w21, [x19, x0]
  468590:	cmp	x24, x20
  468594:	strb	w21, [x19, #264]
  468598:	b.eq	469d74 <_obstack_memory_used@@Base+0x892c>  // b.none
  46859c:	ldrb	w21, [x20]
  4685a0:	cmp	x1, #0xff
  4685a4:	b.ne	46857c <_obstack_memory_used@@Base+0x7134>  // b.any
  4685a8:	ldp	x3, x2, [x19, #272]
  4685ac:	strb	wzr, [x19, #255]
  4685b0:	mov	x0, x19
  4685b4:	blr	x3
  4685b8:	ldr	x2, [x19, #320]
  4685bc:	mov	x1, #0x1                   	// #1
  4685c0:	mov	x0, #0x0                   	// #0
  4685c4:	add	x2, x2, x1
  4685c8:	str	x2, [x19, #320]
  4685cc:	b	468584 <_obstack_memory_used@@Base+0x713c>
  4685d0:	adrp	x22, 482000 <_obstack_memory_used@@Base+0x20bb8>
  4685d4:	add	x22, x22, #0x340
  4685d8:	add	x24, x22, #0x9
  4685dc:	mov	w23, #0x6f                  	// #111
  4685e0:	ldr	x1, [x19, #256]
  4685e4:	b	46860c <_obstack_memory_used@@Base+0x71c4>
  4685e8:	mov	x0, x1
  4685ec:	add	x1, x1, #0x1
  4685f0:	str	x1, [x19, #256]
  4685f4:	add	x22, x22, #0x1
  4685f8:	strb	w23, [x19, x0]
  4685fc:	cmp	x22, x24
  468600:	strb	w23, [x19, #264]
  468604:	b.eq	469bb4 <_obstack_memory_used@@Base+0x876c>  // b.none
  468608:	ldrb	w23, [x22]
  46860c:	cmp	x1, #0xff
  468610:	b.ne	4685e8 <_obstack_memory_used@@Base+0x71a0>  // b.any
  468614:	ldp	x3, x2, [x19, #272]
  468618:	strb	wzr, [x19, #255]
  46861c:	mov	x0, x19
  468620:	blr	x3
  468624:	ldr	x2, [x19, #320]
  468628:	mov	x1, #0x1                   	// #1
  46862c:	mov	x0, #0x0                   	// #0
  468630:	add	x2, x2, x1
  468634:	str	x2, [x19, #320]
  468638:	b	4685f0 <_obstack_memory_used@@Base+0x71a8>
  46863c:	ldr	x2, [x20, #8]
  468640:	mov	w1, w21
  468644:	mov	x0, x19
  468648:	adrp	x22, 482000 <_obstack_memory_used@@Base+0x20bb8>
  46864c:	add	x22, x22, #0x3a0
  468650:	mov	w23, #0x20                  	// #32
  468654:	bl	46bca0 <_obstack_memory_used@@Base+0xa858>
  468658:	add	x24, x22, #0x8
  46865c:	ldr	x1, [x19, #256]
  468660:	b	468688 <_obstack_memory_used@@Base+0x7240>
  468664:	mov	x0, x1
  468668:	add	x1, x1, #0x1
  46866c:	str	x1, [x19, #256]
  468670:	add	x22, x22, #0x1
  468674:	strb	w23, [x19, x0]
  468678:	cmp	x24, x22
  46867c:	strb	w23, [x19, #264]
  468680:	b.eq	469b54 <_obstack_memory_used@@Base+0x870c>  // b.none
  468684:	ldrb	w23, [x22]
  468688:	cmp	x1, #0xff
  46868c:	b.ne	468664 <_obstack_memory_used@@Base+0x721c>  // b.any
  468690:	ldp	x3, x2, [x19, #272]
  468694:	strb	wzr, [x19, #255]
  468698:	mov	x0, x19
  46869c:	blr	x3
  4686a0:	ldr	x2, [x19, #320]
  4686a4:	mov	x1, #0x1                   	// #1
  4686a8:	mov	x0, #0x0                   	// #0
  4686ac:	add	x2, x2, x1
  4686b0:	str	x2, [x19, #320]
  4686b4:	b	46866c <_obstack_memory_used@@Base+0x7224>
  4686b8:	ldr	x2, [x20, #8]
  4686bc:	mov	w1, w21
  4686c0:	mov	x0, x19
  4686c4:	bl	46bca0 <_obstack_memory_used@@Base+0xa858>
  4686c8:	ldp	x21, x22, [sp, #32]
  4686cc:	ldp	x23, x24, [sp, #48]
  4686d0:	b	467ef4 <_obstack_memory_used@@Base+0x6aac>
  4686d4:	and	w22, w21, #0xffffff9f
  4686d8:	ldr	x3, [x19, #296]
  4686dc:	tbnz	w21, #5, 46aeb0 <_obstack_memory_used@@Base+0x9a68>
  4686e0:	ldr	x2, [x20, #8]
  4686e4:	cbz	x2, 4686ec <_obstack_memory_used@@Base+0x72a4>
  4686e8:	tbz	w21, #6, 46b1e4 <_obstack_memory_used@@Base+0x9d9c>
  4686ec:	mov	w1, w22
  4686f0:	add	x2, x20, #0x10
  4686f4:	mov	x0, x19
  4686f8:	bl	46c538 <_obstack_memory_used@@Base+0xb0f0>
  4686fc:	ldp	x21, x22, [sp, #32]
  468700:	ldp	x23, x24, [sp, #48]
  468704:	b	467ef4 <_obstack_memory_used@@Base+0x6aac>
  468708:	ldr	x23, [x20, #8]
  46870c:	ldr	x1, [x19, #256]
  468710:	cbz	x23, 46a57c <_obstack_memory_used@@Base+0x9134>
  468714:	adrp	x20, 482000 <_obstack_memory_used@@Base+0x20bb8>
  468718:	add	x20, x20, #0x370
  46871c:	add	x22, x20, #0x6
  468720:	mov	w21, #0x7b                  	// #123
  468724:	b	46874c <_obstack_memory_used@@Base+0x7304>
  468728:	mov	x0, x1
  46872c:	add	x1, x1, #0x1
  468730:	str	x1, [x19, #256]
  468734:	add	x20, x20, #0x1
  468738:	strb	w21, [x19, x0]
  46873c:	cmp	x22, x20
  468740:	strb	w21, [x19, #264]
  468744:	b.eq	46a5f0 <_obstack_memory_used@@Base+0x91a8>  // b.none
  468748:	ldrb	w21, [x20]
  46874c:	cmp	x1, #0xff
  468750:	b.ne	468728 <_obstack_memory_used@@Base+0x72e0>  // b.any
  468754:	ldp	x3, x2, [x19, #272]
  468758:	strb	wzr, [x19, #255]
  46875c:	mov	x0, x19
  468760:	blr	x3
  468764:	ldr	x2, [x19, #320]
  468768:	mov	x1, #0x1                   	// #1
  46876c:	mov	x0, #0x0                   	// #0
  468770:	add	x2, x2, x1
  468774:	str	x2, [x19, #320]
  468778:	b	468730 <_obstack_memory_used@@Base+0x72e8>
  46877c:	adrp	x24, 480000 <_obstack_memory_used@@Base+0x1ebb8>
  468780:	add	x24, x24, #0xe40
  468784:	adrp	x22, 480000 <_obstack_memory_used@@Base+0x1ebb8>
  468788:	add	x24, x24, #0x11
  46878c:	add	x22, x22, #0xe41
  468790:	mov	w23, #0x68                  	// #104
  468794:	ldr	x1, [x19, #256]
  468798:	b	4687bc <_obstack_memory_used@@Base+0x7374>
  46879c:	mov	x0, x1
  4687a0:	add	x1, x1, #0x1
  4687a4:	str	x1, [x19, #256]
  4687a8:	cmp	x22, x24
  4687ac:	strb	w23, [x19, x0]
  4687b0:	strb	w23, [x19, #264]
  4687b4:	b.eq	46a21c <_obstack_memory_used@@Base+0x8dd4>  // b.none
  4687b8:	ldrb	w23, [x22], #1
  4687bc:	cmp	x1, #0xff
  4687c0:	b.ne	46879c <_obstack_memory_used@@Base+0x7354>  // b.any
  4687c4:	ldp	x3, x2, [x19, #272]
  4687c8:	strb	wzr, [x19, #255]
  4687cc:	mov	x0, x19
  4687d0:	blr	x3
  4687d4:	ldr	x2, [x19, #320]
  4687d8:	mov	x1, #0x1                   	// #1
  4687dc:	mov	x0, #0x0                   	// #0
  4687e0:	add	x2, x2, x1
  4687e4:	str	x2, [x19, #320]
  4687e8:	b	4687a4 <_obstack_memory_used@@Base+0x735c>
  4687ec:	ldrsw	x22, [x20, #16]
  4687f0:	ldr	x20, [x20, #8]
  4687f4:	cbz	x22, 46b6e4 <_obstack_memory_used@@Base+0xa29c>
  4687f8:	add	x22, x20, x22
  4687fc:	ldr	x1, [x19, #256]
  468800:	b	468824 <_obstack_memory_used@@Base+0x73dc>
  468804:	mov	x0, x1
  468808:	add	x1, x1, #0x1
  46880c:	str	x1, [x19, #256]
  468810:	add	x20, x20, #0x1
  468814:	strb	w21, [x19, x0]
  468818:	cmp	x22, x20
  46881c:	strb	w21, [x19, #264]
  468820:	b.eq	46a328 <_obstack_memory_used@@Base+0x8ee0>  // b.none
  468824:	ldrb	w21, [x20]
  468828:	cmp	x1, #0xff
  46882c:	b.ne	468804 <_obstack_memory_used@@Base+0x73bc>  // b.any
  468830:	ldp	x3, x2, [x19, #272]
  468834:	strb	wzr, [x19, #255]
  468838:	mov	x0, x19
  46883c:	blr	x3
  468840:	ldr	x2, [x19, #320]
  468844:	mov	x1, #0x1                   	// #1
  468848:	mov	x0, #0x0                   	// #0
  46884c:	add	x2, x2, x1
  468850:	str	x2, [x19, #320]
  468854:	b	46880c <_obstack_memory_used@@Base+0x73c4>
  468858:	ldp	x1, x5, [x19, #288]
  46885c:	add	x23, sp, #0x60
  468860:	stp	x5, x20, [sp, #96]
  468864:	mov	w22, #0x1                   	// #1
  468868:	mov	w6, w22
  46886c:	str	wzr, [sp, #112]
  468870:	str	x1, [sp, #120]
  468874:	str	x23, [x19, #296]
  468878:	mov	x24, x5
  46887c:	mov	x0, x5
  468880:	mov	x5, x23
  468884:	cbnz	x24, 4688d0 <_obstack_memory_used@@Base+0x7488>
  468888:	b	46ba14 <_obstack_memory_used@@Base+0xa5cc>
  46888c:	ldr	w1, [x0, #16]
  468890:	cbnz	w1, 4688c8 <_obstack_memory_used@@Base+0x7480>
  468894:	cmp	w22, #0x3
  468898:	b.hi	46b1d0 <_obstack_memory_used@@Base+0x9d88>  // b.pmore
  46889c:	ubfiz	x1, x22, #5, #32
  4688a0:	add	w22, w22, #0x1
  4688a4:	add	x4, x23, x1
  4688a8:	ldp	x2, x3, [x0]
  4688ac:	stp	x2, x3, [x4]
  4688b0:	ldp	x2, x3, [x0, #16]
  4688b4:	stp	x2, x3, [x4, #16]
  4688b8:	str	x5, [x23, x1]
  4688bc:	mov	x5, x4
  4688c0:	str	x4, [x19, #296]
  4688c4:	str	w6, [x0, #16]
  4688c8:	ldr	x0, [x0]
  4688cc:	cbz	x0, 4688e4 <_obstack_memory_used@@Base+0x749c>
  4688d0:	ldr	x1, [x0, #8]
  4688d4:	ldr	w1, [x1]
  4688d8:	sub	w1, w1, #0x19
  4688dc:	cmp	w1, #0x2
  4688e0:	b.ls	46888c <_obstack_memory_used@@Base+0x7444>  // b.plast
  4688e4:	ldr	x2, [x20, #16]
  4688e8:	mov	x0, x19
  4688ec:	mov	w1, w21
  4688f0:	bl	46bca0 <_obstack_memory_used@@Base+0xa858>
  4688f4:	str	x24, [x19, #296]
  4688f8:	ldr	w0, [sp, #112]
  4688fc:	cbnz	w0, 46af5c <_obstack_memory_used@@Base+0x9b14>
  468900:	ubfiz	x0, x22, #5, #32
  468904:	cmp	w22, #0x1
  468908:	add	x23, x23, x0
  46890c:	b.eq	468930 <_obstack_memory_used@@Base+0x74e8>  // b.none
  468910:	ldur	x2, [x23, #-24]
  468914:	sub	w22, w22, #0x1
  468918:	mov	w1, w21
  46891c:	mov	x0, x19
  468920:	sub	x23, x23, #0x20
  468924:	bl	46bd38 <_obstack_memory_used@@Base+0xa8f0>
  468928:	cmp	w22, #0x1
  46892c:	b.ne	468910 <_obstack_memory_used@@Base+0x74c8>  // b.any
  468930:	ldr	x3, [x19, #296]
  468934:	mov	w1, w21
  468938:	add	x2, x20, #0x8
  46893c:	mov	x0, x19
  468940:	bl	46cbb8 <_obstack_memory_used@@Base+0xb770>
  468944:	ldp	x21, x22, [sp, #32]
  468948:	ldp	x23, x24, [sp, #48]
  46894c:	b	467ef4 <_obstack_memory_used@@Base+0x6aac>
  468950:	ldrsh	w0, [x20, #18]
  468954:	cbnz	w0, 46acb8 <_obstack_memory_used@@Base+0x9870>
  468958:	ldr	x2, [x20, #8]
  46895c:	adrp	x0, 4a2000 <_obstack_memory_used@@Base+0x40bb8>
  468960:	add	x0, x0, #0xdf0
  468964:	add	x0, x0, #0x288
  468968:	ldr	x1, [x2, #8]
  46896c:	cmp	x1, x0
  468970:	b.eq	46a7ac <_obstack_memory_used@@Base+0x9364>  // b.none
  468974:	mov	w1, w21
  468978:	mov	x0, x19
  46897c:	bl	46bca0 <_obstack_memory_used@@Base+0xa858>
  468980:	ldr	x0, [x19, #256]
  468984:	add	x1, x0, #0x1
  468988:	cmp	x0, #0xff
  46898c:	b.ne	4689b8 <_obstack_memory_used@@Base+0x7570>  // b.any
  468990:	ldp	x3, x2, [x19, #272]
  468994:	strb	wzr, [x19, #255]
  468998:	mov	x1, x0
  46899c:	mov	x0, x19
  4689a0:	blr	x3
  4689a4:	ldr	x2, [x19, #320]
  4689a8:	mov	x1, #0x1                   	// #1
  4689ac:	mov	x0, #0x0                   	// #0
  4689b0:	add	x2, x2, x1
  4689b4:	str	x2, [x19, #320]
  4689b8:	str	x1, [x19, #256]
  4689bc:	mov	w2, #0x20                  	// #32
  4689c0:	strb	w2, [x19, x0]
  4689c4:	strb	w2, [x19, #264]
  4689c8:	ldrsh	w0, [x20, #16]
  4689cc:	cbnz	w0, 46a6c0 <_obstack_memory_used@@Base+0x9278>
  4689d0:	adrp	x20, 482000 <_obstack_memory_used@@Base+0x20bb8>
  4689d4:	add	x20, x20, #0x320
  4689d8:	add	x22, x20, #0x6
  4689dc:	mov	w21, #0x5f                  	// #95
  4689e0:	b	468a08 <_obstack_memory_used@@Base+0x75c0>
  4689e4:	mov	x0, x1
  4689e8:	add	x1, x1, #0x1
  4689ec:	str	x1, [x19, #256]
  4689f0:	add	x20, x20, #0x1
  4689f4:	strb	w21, [x19, x0]
  4689f8:	cmp	x20, x22
  4689fc:	strb	w21, [x19, #264]
  468a00:	b.eq	46a734 <_obstack_memory_used@@Base+0x92ec>  // b.none
  468a04:	ldrb	w21, [x20]
  468a08:	cmp	x1, #0xff
  468a0c:	b.ne	4689e4 <_obstack_memory_used@@Base+0x759c>  // b.any
  468a10:	ldp	x3, x2, [x19, #272]
  468a14:	strb	wzr, [x19, #255]
  468a18:	mov	x0, x19
  468a1c:	blr	x3
  468a20:	ldr	x2, [x19, #320]
  468a24:	mov	x1, #0x1                   	// #1
  468a28:	mov	x0, #0x0                   	// #0
  468a2c:	add	x2, x2, x1
  468a30:	str	x2, [x19, #320]
  468a34:	b	4689ec <_obstack_memory_used@@Base+0x75a4>
  468a38:	adrp	x24, 480000 <_obstack_memory_used@@Base+0x1ebb8>
  468a3c:	add	x24, x24, #0xd88
  468a40:	adrp	x22, 480000 <_obstack_memory_used@@Base+0x1ebb8>
  468a44:	add	x24, x24, #0x15
  468a48:	add	x22, x22, #0xd89
  468a4c:	mov	w23, #0x6e                  	// #110
  468a50:	ldr	x1, [x19, #256]
  468a54:	b	468a78 <_obstack_memory_used@@Base+0x7630>
  468a58:	mov	x0, x1
  468a5c:	add	x1, x1, #0x1
  468a60:	str	x1, [x19, #256]
  468a64:	cmp	x24, x22
  468a68:	strb	w23, [x19, x0]
  468a6c:	strb	w23, [x19, #264]
  468a70:	b.eq	46a238 <_obstack_memory_used@@Base+0x8df0>  // b.none
  468a74:	ldrb	w23, [x22], #1
  468a78:	cmp	x1, #0xff
  468a7c:	b.ne	468a58 <_obstack_memory_used@@Base+0x7610>  // b.any
  468a80:	ldp	x3, x2, [x19, #272]
  468a84:	strb	wzr, [x19, #255]
  468a88:	mov	x0, x19
  468a8c:	blr	x3
  468a90:	ldr	x2, [x19, #320]
  468a94:	mov	x1, #0x1                   	// #1
  468a98:	mov	x0, #0x0                   	// #0
  468a9c:	add	x2, x2, x1
  468aa0:	str	x2, [x19, #320]
  468aa4:	b	468a60 <_obstack_memory_used@@Base+0x7618>
  468aa8:	adrp	x24, 480000 <_obstack_memory_used@@Base+0x1ebb8>
  468aac:	add	x24, x24, #0xda0
  468ab0:	adrp	x22, 480000 <_obstack_memory_used@@Base+0x1ebb8>
  468ab4:	add	x24, x24, #0x11
  468ab8:	add	x22, x22, #0xda1
  468abc:	mov	w23, #0x76                  	// #118
  468ac0:	ldr	x1, [x19, #256]
  468ac4:	b	468ae8 <_obstack_memory_used@@Base+0x76a0>
  468ac8:	mov	x0, x1
  468acc:	add	x1, x1, #0x1
  468ad0:	str	x1, [x19, #256]
  468ad4:	cmp	x24, x22
  468ad8:	strb	w23, [x19, x0]
  468adc:	strb	w23, [x19, #264]
  468ae0:	b.eq	46a254 <_obstack_memory_used@@Base+0x8e0c>  // b.none
  468ae4:	ldrb	w23, [x22], #1
  468ae8:	cmp	x1, #0xff
  468aec:	b.ne	468ac8 <_obstack_memory_used@@Base+0x7680>  // b.any
  468af0:	ldp	x3, x2, [x19, #272]
  468af4:	strb	wzr, [x19, #255]
  468af8:	mov	x0, x19
  468afc:	blr	x3
  468b00:	ldr	x2, [x19, #320]
  468b04:	mov	x1, #0x1                   	// #1
  468b08:	mov	x0, #0x0                   	// #0
  468b0c:	add	x2, x2, x1
  468b10:	str	x2, [x19, #320]
  468b14:	b	468ad0 <_obstack_memory_used@@Base+0x7688>
  468b18:	adrp	x24, 480000 <_obstack_memory_used@@Base+0x1ebb8>
  468b1c:	add	x24, x24, #0xdb8
  468b20:	adrp	x22, 480000 <_obstack_memory_used@@Base+0x1ebb8>
  468b24:	add	x24, x24, #0x1a
  468b28:	add	x22, x22, #0xdb9
  468b2c:	mov	w23, #0x63                  	// #99
  468b30:	ldr	x1, [x19, #256]
  468b34:	b	468b58 <_obstack_memory_used@@Base+0x7710>
  468b38:	mov	x0, x1
  468b3c:	add	x1, x1, #0x1
  468b40:	str	x1, [x19, #256]
  468b44:	cmp	x24, x22
  468b48:	strb	w23, [x19, x0]
  468b4c:	strb	w23, [x19, #264]
  468b50:	b.eq	46a270 <_obstack_memory_used@@Base+0x8e28>  // b.none
  468b54:	ldrb	w23, [x22], #1
  468b58:	cmp	x1, #0xff
  468b5c:	b.ne	468b38 <_obstack_memory_used@@Base+0x76f0>  // b.any
  468b60:	ldp	x3, x2, [x19, #272]
  468b64:	strb	wzr, [x19, #255]
  468b68:	mov	x0, x19
  468b6c:	blr	x3
  468b70:	ldr	x2, [x19, #320]
  468b74:	mov	x1, #0x1                   	// #1
  468b78:	mov	x0, #0x0                   	// #0
  468b7c:	add	x2, x2, x1
  468b80:	str	x2, [x19, #320]
  468b84:	b	468b40 <_obstack_memory_used@@Base+0x76f8>
  468b88:	adrp	x24, 482000 <_obstack_memory_used@@Base+0x20bb8>
  468b8c:	add	x24, x24, #0x308
  468b90:	adrp	x22, 482000 <_obstack_memory_used@@Base+0x20bb8>
  468b94:	add	x24, x24, #0xf
  468b98:	add	x22, x22, #0x309
  468b9c:	mov	w23, #0x6a                  	// #106
  468ba0:	ldr	x1, [x19, #256]
  468ba4:	b	468bc8 <_obstack_memory_used@@Base+0x7780>
  468ba8:	mov	x0, x1
  468bac:	add	x1, x1, #0x1
  468bb0:	str	x1, [x19, #256]
  468bb4:	cmp	x22, x24
  468bb8:	strb	w23, [x19, x0]
  468bbc:	strb	w23, [x19, #264]
  468bc0:	b.eq	469bd0 <_obstack_memory_used@@Base+0x8788>  // b.none
  468bc4:	ldrb	w23, [x22], #1
  468bc8:	cmp	x1, #0xff
  468bcc:	b.ne	468ba8 <_obstack_memory_used@@Base+0x7760>  // b.any
  468bd0:	ldp	x3, x2, [x19, #272]
  468bd4:	strb	wzr, [x19, #255]
  468bd8:	mov	x0, x19
  468bdc:	blr	x3
  468be0:	ldr	x2, [x19, #320]
  468be4:	mov	x1, #0x1                   	// #1
  468be8:	mov	x0, #0x0                   	// #0
  468bec:	add	x2, x2, x1
  468bf0:	str	x2, [x19, #320]
  468bf4:	b	468bb0 <_obstack_memory_used@@Base+0x7768>
  468bf8:	adrp	x24, 480000 <_obstack_memory_used@@Base+0x1ebb8>
  468bfc:	add	x24, x24, #0xe28
  468c00:	adrp	x22, 480000 <_obstack_memory_used@@Base+0x1ebb8>
  468c04:	add	x24, x24, #0x15
  468c08:	add	x22, x22, #0xe29
  468c0c:	mov	w23, #0x72                  	// #114
  468c10:	ldr	x1, [x19, #256]
  468c14:	b	468c38 <_obstack_memory_used@@Base+0x77f0>
  468c18:	mov	x0, x1
  468c1c:	add	x1, x1, #0x1
  468c20:	str	x1, [x19, #256]
  468c24:	cmp	x24, x22
  468c28:	strb	w23, [x19, x0]
  468c2c:	strb	w23, [x19, #264]
  468c30:	b.eq	469c08 <_obstack_memory_used@@Base+0x87c0>  // b.none
  468c34:	ldrb	w23, [x22], #1
  468c38:	cmp	x1, #0xff
  468c3c:	b.ne	468c18 <_obstack_memory_used@@Base+0x77d0>  // b.any
  468c40:	ldp	x3, x2, [x19, #272]
  468c44:	strb	wzr, [x19, #255]
  468c48:	mov	x0, x19
  468c4c:	blr	x3
  468c50:	ldr	x2, [x19, #320]
  468c54:	mov	x1, #0x1                   	// #1
  468c58:	mov	x0, #0x0                   	// #0
  468c5c:	add	x2, x2, x1
  468c60:	str	x2, [x19, #320]
  468c64:	b	468c20 <_obstack_memory_used@@Base+0x77d8>
  468c68:	adrp	x24, 480000 <_obstack_memory_used@@Base+0x1ebb8>
  468c6c:	add	x24, x24, #0xdf0
  468c70:	adrp	x22, 480000 <_obstack_memory_used@@Base+0x1ebb8>
  468c74:	add	x24, x24, #0x16
  468c78:	add	x22, x22, #0xdf1
  468c7c:	mov	w23, #0x54                  	// #84
  468c80:	ldr	x1, [x19, #256]
  468c84:	b	468ca8 <_obstack_memory_used@@Base+0x7860>
  468c88:	mov	x0, x1
  468c8c:	add	x1, x1, #0x1
  468c90:	str	x1, [x19, #256]
  468c94:	cmp	x22, x24
  468c98:	strb	w23, [x19, x0]
  468c9c:	strb	w23, [x19, #264]
  468ca0:	b.eq	46a1c8 <_obstack_memory_used@@Base+0x8d80>  // b.none
  468ca4:	ldrb	w23, [x22], #1
  468ca8:	cmp	x1, #0xff
  468cac:	b.ne	468c88 <_obstack_memory_used@@Base+0x7840>  // b.any
  468cb0:	ldp	x3, x2, [x19, #272]
  468cb4:	strb	wzr, [x19, #255]
  468cb8:	mov	x0, x19
  468cbc:	blr	x3
  468cc0:	ldr	x2, [x19, #320]
  468cc4:	mov	x1, #0x1                   	// #1
  468cc8:	mov	x0, #0x0                   	// #0
  468ccc:	add	x2, x2, x1
  468cd0:	str	x2, [x19, #320]
  468cd4:	b	468c90 <_obstack_memory_used@@Base+0x7848>
  468cd8:	ldr	x1, [x20, #8]
  468cdc:	mov	x0, x19
  468ce0:	mov	w24, #0x0                   	// #0
  468ce4:	bl	464568 <_obstack_memory_used@@Base+0x3120>
  468ce8:	cbz	x0, 46b6fc <_obstack_memory_used@@Base+0xa2b4>
  468cec:	stp	x25, x26, [sp, #64]
  468cf0:	ldr	w1, [x0]
  468cf4:	cmp	w1, #0x2f
  468cf8:	b.ne	46a3a4 <_obstack_memory_used@@Base+0x8f5c>  // b.any
  468cfc:	ldr	x1, [x0, #8]
  468d00:	cbz	x1, 46a3a4 <_obstack_memory_used@@Base+0x8f5c>
  468d04:	ldr	x0, [x0, #16]
  468d08:	add	w24, w24, #0x1
  468d0c:	cbnz	x0, 468cf0 <_obstack_memory_used@@Base+0x78a8>
  468d10:	ldr	x25, [x20, #8]
  468d14:	sub	w26, w24, #0x1
  468d18:	b	468d28 <_obstack_memory_used@@Base+0x78e0>
  468d1c:	add	w22, w22, #0x1
  468d20:	cmp	w22, w24
  468d24:	b.ge	46a34c <_obstack_memory_used@@Base+0x8f04>  // b.tcont
  468d28:	str	w22, [x19, #316]
  468d2c:	mov	x2, x25
  468d30:	mov	w1, w21
  468d34:	mov	x0, x19
  468d38:	bl	46bca0 <_obstack_memory_used@@Base+0xa858>
  468d3c:	cmp	w26, w22
  468d40:	b.le	468d1c <_obstack_memory_used@@Base+0x78d4>
  468d44:	mov	w20, #0x2c                  	// #44
  468d48:	mov	x23, #0x0                   	// #0
  468d4c:	ldr	x1, [x19, #256]
  468d50:	b	468d74 <_obstack_memory_used@@Base+0x792c>
  468d54:	mov	x0, x1
  468d58:	add	x1, x1, #0x1
  468d5c:	str	x1, [x19, #256]
  468d60:	strb	w20, [x19, x0]
  468d64:	strb	w20, [x19, #264]
  468d68:	mov	w20, #0x20                  	// #32
  468d6c:	cbnz	x23, 468d1c <_obstack_memory_used@@Base+0x78d4>
  468d70:	mov	x23, #0x1                   	// #1
  468d74:	cmp	x1, #0xff
  468d78:	b.ne	468d54 <_obstack_memory_used@@Base+0x790c>  // b.any
  468d7c:	ldp	x3, x2, [x19, #272]
  468d80:	strb	wzr, [x19, #255]
  468d84:	mov	x0, x19
  468d88:	blr	x3
  468d8c:	ldr	x2, [x19, #320]
  468d90:	mov	x1, #0x1                   	// #1
  468d94:	mov	x0, #0x0                   	// #0
  468d98:	add	x2, x2, x1
  468d9c:	str	x2, [x19, #320]
  468da0:	b	468d5c <_obstack_memory_used@@Base+0x7914>
  468da4:	ldr	x2, [x20, #8]
  468da8:	mov	w1, w21
  468dac:	mov	x0, x19
  468db0:	adrp	x24, 482000 <_obstack_memory_used@@Base+0x20bb8>
  468db4:	add	x24, x24, #0x2a8
  468db8:	adrp	x22, 482000 <_obstack_memory_used@@Base+0x20bb8>
  468dbc:	bl	46bca0 <_obstack_memory_used@@Base+0xa858>
  468dc0:	add	x24, x24, #0x5
  468dc4:	add	x22, x22, #0x2a9
  468dc8:	mov	w23, #0x5b                  	// #91
  468dcc:	ldr	x1, [x19, #256]
  468dd0:	b	468df4 <_obstack_memory_used@@Base+0x79ac>
  468dd4:	mov	x0, x1
  468dd8:	add	x1, x1, #0x1
  468ddc:	str	x1, [x19, #256]
  468de0:	cmp	x24, x22
  468de4:	strb	w23, [x19, x0]
  468de8:	strb	w23, [x19, #264]
  468dec:	b.eq	469d14 <_obstack_memory_used@@Base+0x88cc>  // b.none
  468df0:	ldrb	w23, [x22], #1
  468df4:	cmp	x1, #0xff
  468df8:	b.ne	468dd4 <_obstack_memory_used@@Base+0x798c>  // b.any
  468dfc:	ldp	x3, x2, [x19, #272]
  468e00:	strb	wzr, [x19, #255]
  468e04:	mov	x0, x19
  468e08:	blr	x3
  468e0c:	ldr	x2, [x19, #320]
  468e10:	mov	x1, #0x1                   	// #1
  468e14:	mov	x0, #0x0                   	// #0
  468e18:	add	x2, x2, x1
  468e1c:	str	x2, [x19, #320]
  468e20:	b	468ddc <_obstack_memory_used@@Base+0x7994>
  468e24:	adrp	x24, 480000 <_obstack_memory_used@@Base+0x1ebb8>
  468e28:	add	x24, x24, #0xe70
  468e2c:	adrp	x22, 480000 <_obstack_memory_used@@Base+0x1ebb8>
  468e30:	add	x24, x24, #0x1a
  468e34:	add	x22, x22, #0xe71
  468e38:	mov	w23, #0x6e                  	// #110
  468e3c:	ldr	x1, [x19, #256]
  468e40:	b	468e64 <_obstack_memory_used@@Base+0x7a1c>
  468e44:	mov	x0, x1
  468e48:	add	x1, x1, #0x1
  468e4c:	str	x1, [x19, #256]
  468e50:	cmp	x24, x22
  468e54:	strb	w23, [x19, x0]
  468e58:	strb	w23, [x19, #264]
  468e5c:	b.eq	469cdc <_obstack_memory_used@@Base+0x8894>  // b.none
  468e60:	ldrb	w23, [x22], #1
  468e64:	cmp	x1, #0xff
  468e68:	b.ne	468e44 <_obstack_memory_used@@Base+0x79fc>  // b.any
  468e6c:	ldp	x3, x2, [x19, #272]
  468e70:	strb	wzr, [x19, #255]
  468e74:	mov	x0, x19
  468e78:	blr	x3
  468e7c:	ldr	x2, [x19, #320]
  468e80:	mov	x1, #0x1                   	// #1
  468e84:	mov	x0, #0x0                   	// #0
  468e88:	add	x2, x2, x1
  468e8c:	str	x2, [x19, #320]
  468e90:	b	468e4c <_obstack_memory_used@@Base+0x7a04>
  468e94:	adrp	x24, 480000 <_obstack_memory_used@@Base+0x1ebb8>
  468e98:	add	x24, x24, #0xdd8
  468e9c:	adrp	x22, 480000 <_obstack_memory_used@@Base+0x1ebb8>
  468ea0:	add	x24, x24, #0x13
  468ea4:	add	x22, x22, #0xdd9
  468ea8:	mov	w23, #0x67                  	// #103
  468eac:	ldr	x1, [x19, #256]
  468eb0:	b	468ed4 <_obstack_memory_used@@Base+0x7a8c>
  468eb4:	mov	x0, x1
  468eb8:	add	x1, x1, #0x1
  468ebc:	str	x1, [x19, #256]
  468ec0:	cmp	x24, x22
  468ec4:	strb	w23, [x19, x0]
  468ec8:	strb	w23, [x19, #264]
  468ecc:	b.eq	469bec <_obstack_memory_used@@Base+0x87a4>  // b.none
  468ed0:	ldrb	w23, [x22], #1
  468ed4:	cmp	x1, #0xff
  468ed8:	b.ne	468eb4 <_obstack_memory_used@@Base+0x7a6c>  // b.any
  468edc:	ldp	x3, x2, [x19, #272]
  468ee0:	strb	wzr, [x19, #255]
  468ee4:	mov	x0, x19
  468ee8:	blr	x3
  468eec:	ldr	x2, [x19, #320]
  468ef0:	mov	x1, #0x1                   	// #1
  468ef4:	mov	x0, #0x0                   	// #0
  468ef8:	add	x2, x2, x1
  468efc:	str	x2, [x19, #320]
  468f00:	b	468ebc <_obstack_memory_used@@Base+0x7a74>
  468f04:	adrp	x24, 480000 <_obstack_memory_used@@Base+0x1ebb8>
  468f08:	add	x24, x24, #0xe08
  468f0c:	adrp	x22, 480000 <_obstack_memory_used@@Base+0x1ebb8>
  468f10:	add	x24, x24, #0x19
  468f14:	add	x22, x22, #0xe09
  468f18:	mov	w23, #0x54                  	// #84
  468f1c:	ldr	x1, [x19, #256]
  468f20:	b	468f44 <_obstack_memory_used@@Base+0x7afc>
  468f24:	mov	x0, x1
  468f28:	add	x1, x1, #0x1
  468f2c:	str	x1, [x19, #256]
  468f30:	cmp	x24, x22
  468f34:	strb	w23, [x19, x0]
  468f38:	strb	w23, [x19, #264]
  468f3c:	b.eq	46a1e4 <_obstack_memory_used@@Base+0x8d9c>  // b.none
  468f40:	ldrb	w23, [x22], #1
  468f44:	cmp	x1, #0xff
  468f48:	b.ne	468f24 <_obstack_memory_used@@Base+0x7adc>  // b.any
  468f4c:	ldp	x3, x2, [x19, #272]
  468f50:	strb	wzr, [x19, #255]
  468f54:	mov	x0, x19
  468f58:	blr	x3
  468f5c:	ldr	x2, [x19, #320]
  468f60:	mov	x1, #0x1                   	// #1
  468f64:	mov	x0, #0x0                   	// #0
  468f68:	add	x2, x2, x1
  468f6c:	str	x2, [x19, #320]
  468f70:	b	468f2c <_obstack_memory_used@@Base+0x7ae4>
  468f74:	adrp	x22, 482000 <_obstack_memory_used@@Base+0x20bb8>
  468f78:	add	x22, x22, #0x2e0
  468f7c:	add	x24, x22, #0x8
  468f80:	mov	w23, #0x56                  	// #86
  468f84:	ldr	x1, [x19, #256]
  468f88:	b	468fb0 <_obstack_memory_used@@Base+0x7b68>
  468f8c:	mov	x0, x1
  468f90:	add	x1, x1, #0x1
  468f94:	str	x1, [x19, #256]
  468f98:	add	x22, x22, #0x1
  468f9c:	strb	w23, [x19, x0]
  468fa0:	cmp	x24, x22
  468fa4:	strb	w23, [x19, #264]
  468fa8:	b.eq	46a130 <_obstack_memory_used@@Base+0x8ce8>  // b.none
  468fac:	ldrb	w23, [x22]
  468fb0:	cmp	x1, #0xff
  468fb4:	b.ne	468f8c <_obstack_memory_used@@Base+0x7b44>  // b.any
  468fb8:	ldp	x3, x2, [x19, #272]
  468fbc:	strb	wzr, [x19, #255]
  468fc0:	mov	x0, x19
  468fc4:	blr	x3
  468fc8:	ldr	x2, [x19, #320]
  468fcc:	mov	x1, #0x1                   	// #1
  468fd0:	mov	x0, #0x0                   	// #0
  468fd4:	add	x2, x2, x1
  468fd8:	str	x2, [x19, #320]
  468fdc:	b	468f94 <_obstack_memory_used@@Base+0x7b4c>
  468fe0:	adrp	x24, 480000 <_obstack_memory_used@@Base+0x1ebb8>
  468fe4:	add	x24, x24, #0xd38
  468fe8:	adrp	x22, 480000 <_obstack_memory_used@@Base+0x1ebb8>
  468fec:	add	x24, x24, #0x18
  468ff0:	add	x22, x22, #0xd39
  468ff4:	mov	w23, #0x63                  	// #99
  468ff8:	ldr	x1, [x19, #256]
  468ffc:	b	469020 <_obstack_memory_used@@Base+0x7bd8>
  469000:	mov	x0, x1
  469004:	add	x1, x1, #0x1
  469008:	str	x1, [x19, #256]
  46900c:	cmp	x24, x22
  469010:	strb	w23, [x19, x0]
  469014:	strb	w23, [x19, #264]
  469018:	b.eq	46a14c <_obstack_memory_used@@Base+0x8d04>  // b.none
  46901c:	ldrb	w23, [x22], #1
  469020:	cmp	x1, #0xff
  469024:	b.ne	469000 <_obstack_memory_used@@Base+0x7bb8>  // b.any
  469028:	ldp	x3, x2, [x19, #272]
  46902c:	strb	wzr, [x19, #255]
  469030:	mov	x0, x19
  469034:	blr	x3
  469038:	ldr	x2, [x19, #320]
  46903c:	mov	x1, #0x1                   	// #1
  469040:	mov	x0, #0x0                   	// #0
  469044:	add	x2, x2, x1
  469048:	str	x2, [x19, #320]
  46904c:	b	469008 <_obstack_memory_used@@Base+0x7bc0>
  469050:	adrp	x24, 482000 <_obstack_memory_used@@Base+0x20bb8>
  469054:	add	x24, x24, #0x2f8
  469058:	adrp	x22, 482000 <_obstack_memory_used@@Base+0x20bb8>
  46905c:	add	x24, x24, #0xd
  469060:	add	x22, x22, #0x2f9
  469064:	mov	w23, #0x74                  	// #116
  469068:	ldr	x1, [x19, #256]
  46906c:	b	469090 <_obstack_memory_used@@Base+0x7c48>
  469070:	mov	x0, x1
  469074:	add	x1, x1, #0x1
  469078:	str	x1, [x19, #256]
  46907c:	cmp	x24, x22
  469080:	strb	w23, [x19, x0]
  469084:	strb	w23, [x19, #264]
  469088:	b.eq	469ca4 <_obstack_memory_used@@Base+0x885c>  // b.none
  46908c:	ldrb	w23, [x22], #1
  469090:	cmp	x1, #0xff
  469094:	b.ne	469070 <_obstack_memory_used@@Base+0x7c28>  // b.any
  469098:	ldp	x3, x2, [x19, #272]
  46909c:	strb	wzr, [x19, #255]
  4690a0:	mov	x0, x19
  4690a4:	blr	x3
  4690a8:	ldr	x2, [x19, #320]
  4690ac:	mov	x1, #0x1                   	// #1
  4690b0:	mov	x0, #0x0                   	// #0
  4690b4:	add	x2, x2, x1
  4690b8:	str	x2, [x19, #320]
  4690bc:	b	469078 <_obstack_memory_used@@Base+0x7c30>
  4690c0:	adrp	x24, 480000 <_obstack_memory_used@@Base+0x1ebb8>
  4690c4:	add	x24, x24, #0xd58
  4690c8:	adrp	x22, 480000 <_obstack_memory_used@@Base+0x1ebb8>
  4690cc:	add	x24, x24, #0x12
  4690d0:	add	x22, x22, #0xd59
  4690d4:	mov	w23, #0x74                  	// #116
  4690d8:	ldr	x1, [x19, #256]
  4690dc:	b	469100 <_obstack_memory_used@@Base+0x7cb8>
  4690e0:	mov	x0, x1
  4690e4:	add	x1, x1, #0x1
  4690e8:	str	x1, [x19, #256]
  4690ec:	cmp	x24, x22
  4690f0:	strb	w23, [x19, x0]
  4690f4:	strb	w23, [x19, #264]
  4690f8:	b.eq	469cc0 <_obstack_memory_used@@Base+0x8878>  // b.none
  4690fc:	ldrb	w23, [x22], #1
  469100:	cmp	x1, #0xff
  469104:	b.ne	4690e0 <_obstack_memory_used@@Base+0x7c98>  // b.any
  469108:	ldp	x3, x2, [x19, #272]
  46910c:	strb	wzr, [x19, #255]
  469110:	mov	x0, x19
  469114:	blr	x3
  469118:	ldr	x2, [x19, #320]
  46911c:	mov	x1, #0x1                   	// #1
  469120:	mov	x0, #0x0                   	// #0
  469124:	add	x2, x2, x1
  469128:	str	x2, [x19, #320]
  46912c:	b	4690e8 <_obstack_memory_used@@Base+0x7ca0>
  469130:	adrp	x24, 480000 <_obstack_memory_used@@Base+0x1ebb8>
  469134:	add	x24, x24, #0xd70
  469138:	adrp	x22, 480000 <_obstack_memory_used@@Base+0x1ebb8>
  46913c:	add	x24, x24, #0x10
  469140:	add	x22, x22, #0xd71
  469144:	mov	w23, #0x74                  	// #116
  469148:	ldr	x1, [x19, #256]
  46914c:	b	469170 <_obstack_memory_used@@Base+0x7d28>
  469150:	mov	x0, x1
  469154:	add	x1, x1, #0x1
  469158:	str	x1, [x19, #256]
  46915c:	cmp	x24, x22
  469160:	strb	w23, [x19, x0]
  469164:	strb	w23, [x19, #264]
  469168:	b.eq	46a114 <_obstack_memory_used@@Base+0x8ccc>  // b.none
  46916c:	ldrb	w23, [x22], #1
  469170:	cmp	x1, #0xff
  469174:	b.ne	469150 <_obstack_memory_used@@Base+0x7d08>  // b.any
  469178:	ldp	x3, x2, [x19, #272]
  46917c:	strb	wzr, [x19, #255]
  469180:	mov	x0, x19
  469184:	blr	x3
  469188:	ldr	x2, [x19, #320]
  46918c:	mov	x1, #0x1                   	// #1
  469190:	mov	x0, #0x0                   	// #0
  469194:	add	x2, x2, x1
  469198:	str	x2, [x19, #320]
  46919c:	b	469158 <_obstack_memory_used@@Base+0x7d10>
  4691a0:	stp	x25, x26, [sp, #64]
  4691a4:	ldr	x25, [x20, #8]
  4691a8:	ldr	x22, [x19, #296]
  4691ac:	str	xzr, [x19, #296]
  4691b0:	cbz	x25, 46b268 <_obstack_memory_used@@Base+0x9e20>
  4691b4:	add	x23, sp, #0x60
  4691b8:	mov	x2, #0x1f                  	// #31
  4691bc:	ldr	x6, [x19, #288]
  4691c0:	mov	x3, x23
  4691c4:	mov	x0, #0x0                   	// #0
  4691c8:	mov	w24, #0x0                   	// #0
  4691cc:	mov	x1, #0x1                   	// #1
  4691d0:	movk	x2, #0x1a, lsl #48
  4691d4:	str	wzr, [x3, #16]
  4691d8:	add	w24, w24, #0x1
  4691dc:	str	x0, [x3]
  4691e0:	mov	x4, x3
  4691e4:	ldr	w5, [x25]
  4691e8:	str	x25, [x3, #8]
  4691ec:	str	x6, [x3, #24]
  4691f0:	sub	w0, w5, #0x1c
  4691f4:	cmp	w0, #0x34
  4691f8:	b.hi	469208 <_obstack_memory_used@@Base+0x7dc0>  // b.pmore
  4691fc:	lsl	x0, x1, x0
  469200:	tst	x0, x2
  469204:	b.ne	46a388 <_obstack_memory_used@@Base+0x8f40>  // b.any
  469208:	str	x3, [x19, #296]
  46920c:	cmp	w5, #0x2
  469210:	b.eq	46b148 <_obstack_memory_used@@Base+0x9d00>  // b.none
  469214:	cmp	w5, #0x4
  469218:	b.ne	469228 <_obstack_memory_used@@Base+0x7de0>  // b.any
  46921c:	add	x0, sp, #0x50
  469220:	stp	x6, x25, [sp, #80]
  469224:	str	x0, [x19, #288]
  469228:	ldr	x2, [x20, #16]
  46922c:	mov	x0, x19
  469230:	mov	w1, w21
  469234:	bl	46bca0 <_obstack_memory_used@@Base+0xa858>
  469238:	ldr	w0, [x25]
  46923c:	cmp	w0, #0x4
  469240:	b.ne	46924c <_obstack_memory_used@@Base+0x7e04>  // b.any
  469244:	ldr	x0, [sp, #80]
  469248:	str	x0, [x19, #288]
  46924c:	sub	w20, w24, #0x1
  469250:	mov	w24, #0x20                  	// #32
  469254:	ubfiz	x0, x20, #5, #32
  469258:	add	x23, x23, x0
  46925c:	b	469264 <_obstack_memory_used@@Base+0x7e1c>
  469260:	sub	w20, w20, #0x1
  469264:	ldr	w0, [x23, #16]
  469268:	cbnz	w0, 4692c0 <_obstack_memory_used@@Base+0x7e78>
  46926c:	ldr	x0, [x19, #256]
  469270:	add	x1, x0, #0x1
  469274:	cmp	x0, #0xff
  469278:	b.ne	4692a4 <_obstack_memory_used@@Base+0x7e5c>  // b.any
  46927c:	ldp	x3, x2, [x19, #272]
  469280:	strb	wzr, [x19, #255]
  469284:	mov	x1, x0
  469288:	mov	x0, x19
  46928c:	blr	x3
  469290:	ldr	x2, [x19, #320]
  469294:	mov	x1, #0x1                   	// #1
  469298:	mov	x0, #0x0                   	// #0
  46929c:	add	x2, x2, x1
  4692a0:	str	x2, [x19, #320]
  4692a4:	str	x1, [x19, #256]
  4692a8:	mov	w1, w21
  4692ac:	ldr	x2, [x23, #8]
  4692b0:	strb	w24, [x19, x0]
  4692b4:	strb	w24, [x19, #264]
  4692b8:	mov	x0, x19
  4692bc:	bl	46bd38 <_obstack_memory_used@@Base+0xa8f0>
  4692c0:	sub	x23, x23, #0x20
  4692c4:	cbnz	w20, 469260 <_obstack_memory_used@@Base+0x7e18>
  4692c8:	ldp	x23, x24, [sp, #48]
  4692cc:	ldp	x25, x26, [sp, #64]
  4692d0:	str	x22, [x19, #296]
  4692d4:	ldp	x21, x22, [sp, #32]
  4692d8:	b	467ef4 <_obstack_memory_used@@Base+0x6aac>
  4692dc:	ldr	x22, [x20, #8]
  4692e0:	ldr	x24, [x19, #296]
  4692e4:	str	xzr, [x19, #296]
  4692e8:	ldr	x23, [x19, #368]
  4692ec:	str	x20, [x19, #368]
  4692f0:	tbz	w21, #2, 469308 <_obstack_memory_used@@Base+0x7ec0>
  4692f4:	ldr	w0, [x22]
  4692f8:	cbnz	w0, 469308 <_obstack_memory_used@@Base+0x7ec0>
  4692fc:	ldr	w0, [x22, #16]
  469300:	cmp	w0, #0x6
  469304:	b.eq	46b600 <_obstack_memory_used@@Base+0xa1b8>  // b.none
  469308:	mov	x0, x19
  46930c:	mov	x2, x22
  469310:	mov	w1, w21
  469314:	bl	46bca0 <_obstack_memory_used@@Base+0xa858>
  469318:	ldrb	w0, [x19, #264]
  46931c:	cmp	w0, #0x3c
  469320:	b.eq	46ae68 <_obstack_memory_used@@Base+0x9a20>  // b.none
  469324:	ldr	x1, [x19, #256]
  469328:	add	x0, x1, #0x1
  46932c:	cmp	x1, #0xff
  469330:	b.ne	469358 <_obstack_memory_used@@Base+0x7f10>  // b.any
  469334:	ldp	x3, x2, [x19, #272]
  469338:	strb	wzr, [x19, #255]
  46933c:	mov	x0, x19
  469340:	blr	x3
  469344:	ldr	x2, [x19, #320]
  469348:	mov	x0, #0x1                   	// #1
  46934c:	mov	x1, #0x0                   	// #0
  469350:	add	x2, x2, x0
  469354:	str	x2, [x19, #320]
  469358:	str	x0, [x19, #256]
  46935c:	mov	w0, #0x3c                  	// #60
  469360:	strb	w0, [x19, x1]
  469364:	mov	w1, w21
  469368:	strb	w0, [x19, #264]
  46936c:	mov	x0, x19
  469370:	ldr	x2, [x20, #16]
  469374:	bl	46bca0 <_obstack_memory_used@@Base+0xa858>
  469378:	ldrb	w0, [x19, #264]
  46937c:	cmp	w0, #0x3e
  469380:	b.eq	46ae20 <_obstack_memory_used@@Base+0x99d8>  // b.none
  469384:	ldr	x1, [x19, #256]
  469388:	add	x0, x1, #0x1
  46938c:	cmp	x1, #0xff
  469390:	b.ne	4693b8 <_obstack_memory_used@@Base+0x7f70>  // b.any
  469394:	ldp	x3, x2, [x19, #272]
  469398:	strb	wzr, [x19, #255]
  46939c:	mov	x0, x19
  4693a0:	blr	x3
  4693a4:	ldr	x2, [x19, #320]
  4693a8:	mov	x0, #0x1                   	// #1
  4693ac:	mov	x1, #0x0                   	// #0
  4693b0:	add	x2, x2, x0
  4693b4:	str	x2, [x19, #320]
  4693b8:	str	x0, [x19, #256]
  4693bc:	mov	w0, #0x3e                  	// #62
  4693c0:	strb	w0, [x19, x1]
  4693c4:	strb	w0, [x19, #264]
  4693c8:	ldp	x21, x22, [sp, #32]
  4693cc:	str	x24, [x19, #296]
  4693d0:	str	x23, [x19, #368]
  4693d4:	ldp	x23, x24, [sp, #48]
  4693d8:	b	467ef4 <_obstack_memory_used@@Base+0x6aac>
  4693dc:	ldr	w0, [x19, #312]
  4693e0:	cbz	w0, 46a4ac <_obstack_memory_used@@Base+0x9064>
  4693e4:	adrp	x23, 482000 <_obstack_memory_used@@Base+0x20bb8>
  4693e8:	add	x23, x23, #0x2c8
  4693ec:	adrp	x21, 482000 <_obstack_memory_used@@Base+0x20bb8>
  4693f0:	add	x23, x23, #0x5
  4693f4:	add	x21, x21, #0x2c9
  4693f8:	mov	w22, #0x61                  	// #97
  4693fc:	ldr	x1, [x19, #256]
  469400:	b	469424 <_obstack_memory_used@@Base+0x7fdc>
  469404:	mov	x0, x1
  469408:	add	x1, x1, #0x1
  46940c:	str	x1, [x19, #256]
  469410:	cmp	x23, x21
  469414:	strb	w22, [x19, x0]
  469418:	strb	w22, [x19, #264]
  46941c:	b.eq	46a4f4 <_obstack_memory_used@@Base+0x90ac>  // b.none
  469420:	ldrb	w22, [x21], #1
  469424:	cmp	x1, #0xff
  469428:	b.ne	469404 <_obstack_memory_used@@Base+0x7fbc>  // b.any
  46942c:	ldp	x3, x2, [x19, #272]
  469430:	strb	wzr, [x19, #255]
  469434:	mov	x0, x19
  469438:	blr	x3
  46943c:	ldr	x2, [x19, #320]
  469440:	mov	x1, #0x1                   	// #1
  469444:	mov	x0, #0x0                   	// #0
  469448:	add	x2, x2, x1
  46944c:	str	x2, [x19, #320]
  469450:	b	46940c <_obstack_memory_used@@Base+0x7fc4>
  469454:	ldr	x1, [x19, #256]
  469458:	add	x0, x1, #0x1
  46945c:	cmp	x1, #0xff
  469460:	b.ne	469488 <_obstack_memory_used@@Base+0x8040>  // b.any
  469464:	ldp	x3, x2, [x19, #272]
  469468:	strb	wzr, [x19, #255]
  46946c:	mov	x0, x19
  469470:	blr	x3
  469474:	ldr	x2, [x19, #320]
  469478:	mov	x0, #0x1                   	// #1
  46947c:	mov	x1, #0x0                   	// #0
  469480:	add	x2, x2, x0
  469484:	str	x2, [x19, #320]
  469488:	str	x0, [x19, #256]
  46948c:	mov	w0, #0x7e                  	// #126
  469490:	strb	w0, [x19, x1]
  469494:	mov	w1, w21
  469498:	strb	w0, [x19, #264]
  46949c:	mov	x0, x19
  4694a0:	ldr	x2, [x20, #16]
  4694a4:	bl	46bca0 <_obstack_memory_used@@Base+0xa858>
  4694a8:	ldp	x21, x22, [sp, #32]
  4694ac:	ldp	x23, x24, [sp, #48]
  4694b0:	b	467ef4 <_obstack_memory_used@@Base+0x6aac>
  4694b4:	adrp	x24, 482000 <_obstack_memory_used@@Base+0x20bb8>
  4694b8:	add	x24, x24, #0x2d0
  4694bc:	adrp	x22, 482000 <_obstack_memory_used@@Base+0x20bb8>
  4694c0:	add	x24, x24, #0xb
  4694c4:	add	x22, x22, #0x2d1
  4694c8:	mov	w23, #0x76                  	// #118
  4694cc:	ldr	x1, [x19, #256]
  4694d0:	b	4694f4 <_obstack_memory_used@@Base+0x80ac>
  4694d4:	mov	x0, x1
  4694d8:	add	x1, x1, #0x1
  4694dc:	str	x1, [x19, #256]
  4694e0:	cmp	x24, x22
  4694e4:	strb	w23, [x19, x0]
  4694e8:	strb	w23, [x19, #264]
  4694ec:	b.eq	469c88 <_obstack_memory_used@@Base+0x8840>  // b.none
  4694f0:	ldrb	w23, [x22], #1
  4694f4:	cmp	x1, #0xff
  4694f8:	b.ne	4694d4 <_obstack_memory_used@@Base+0x808c>  // b.any
  4694fc:	ldp	x3, x2, [x19, #272]
  469500:	strb	wzr, [x19, #255]
  469504:	mov	x0, x19
  469508:	blr	x3
  46950c:	ldr	x2, [x19, #320]
  469510:	mov	x1, #0x1                   	// #1
  469514:	mov	x0, #0x0                   	// #0
  469518:	add	x2, x2, x1
  46951c:	str	x2, [x19, #320]
  469520:	b	4694dc <_obstack_memory_used@@Base+0x8094>
  469524:	ldr	x0, [x20, #16]
  469528:	ldr	w0, [x0]
  46952c:	cmp	w0, #0x39
  469530:	b.ne	467f20 <_obstack_memory_used@@Base+0x6ad8>  // b.any
  469534:	ldr	x2, [x20, #8]
  469538:	ldr	x0, [x2, #8]
  46953c:	ldr	x0, [x0]
  469540:	ldrb	w1, [x0, #1]
  469544:	cmp	w1, #0x63
  469548:	b.eq	46b280 <_obstack_memory_used@@Base+0x9e38>  // b.none
  46954c:	add	x3, x20, #0x10
  469550:	mov	w1, w21
  469554:	mov	x0, x19
  469558:	bl	46cff0 <_obstack_memory_used@@Base+0xbba8>
  46955c:	cbnz	w0, 46b5e8 <_obstack_memory_used@@Base+0xa1a0>
  469560:	ldr	x0, [x20, #8]
  469564:	ldr	w1, [x0]
  469568:	cmp	w1, #0x32
  46956c:	b.eq	46b75c <_obstack_memory_used@@Base+0xa314>  // b.none
  469570:	ldr	x0, [x0, #8]
  469574:	ldr	x1, [x0]
  469578:	ldrb	w0, [x1]
  46957c:	subs	w0, w0, #0x63
  469580:	b.ne	469594 <_obstack_memory_used@@Base+0x814c>  // b.any
  469584:	ldrb	w0, [x1, #1]
  469588:	subs	w0, w0, #0x6c
  46958c:	b.ne	469594 <_obstack_memory_used@@Base+0x814c>  // b.any
  469590:	ldrb	w0, [x1, #2]
  469594:	ldr	x1, [x20, #16]
  469598:	ldr	x2, [x1, #8]
  46959c:	cbnz	w0, 4695ac <_obstack_memory_used@@Base+0x8164>
  4695a0:	ldr	w0, [x2]
  4695a4:	cmp	w0, #0x3
  4695a8:	b.eq	46b820 <_obstack_memory_used@@Base+0xa3d8>  // b.none
  4695ac:	mov	w1, w21
  4695b0:	mov	x0, x19
  4695b4:	bl	46cef8 <_obstack_memory_used@@Base+0xbab0>
  4695b8:	ldr	x2, [x20, #8]
  4695bc:	ldr	x0, [x2, #8]
  4695c0:	ldr	x0, [x0]
  4695c4:	ldrb	w1, [x0]
  4695c8:	cmp	w1, #0x69
  4695cc:	b.ne	46b538 <_obstack_memory_used@@Base+0xa0f0>  // b.any
  4695d0:	ldrb	w3, [x0, #1]
  4695d4:	cmp	w3, #0x78
  4695d8:	b.ne	46b538 <_obstack_memory_used@@Base+0xa0f0>  // b.any
  4695dc:	ldrb	w3, [x0, #2]
  4695e0:	cbnz	w3, 46b538 <_obstack_memory_used@@Base+0xa0f0>
  4695e4:	ldr	x1, [x19, #256]
  4695e8:	cmp	x1, #0xff
  4695ec:	b.ne	469614 <_obstack_memory_used@@Base+0x81cc>  // b.any
  4695f0:	ldp	x3, x2, [x19, #272]
  4695f4:	strb	wzr, [x19, #255]
  4695f8:	mov	x0, x19
  4695fc:	blr	x3
  469600:	str	xzr, [x19, #256]
  469604:	ldr	x0, [x19, #320]
  469608:	mov	x1, #0x0                   	// #0
  46960c:	add	x0, x0, #0x1
  469610:	str	x0, [x19, #320]
  469614:	add	x0, x1, #0x1
  469618:	str	x0, [x19, #256]
  46961c:	mov	w0, #0x5b                  	// #91
  469620:	strb	w0, [x19, x1]
  469624:	strb	w0, [x19, #264]
  469628:	mov	w1, w21
  46962c:	mov	x0, x19
  469630:	ldr	x2, [x20, #16]
  469634:	ldr	x2, [x2, #16]
  469638:	bl	46bca0 <_obstack_memory_used@@Base+0xa858>
  46963c:	ldr	x1, [x19, #256]
  469640:	cmp	x1, #0xff
  469644:	b.ne	46966c <_obstack_memory_used@@Base+0x8224>  // b.any
  469648:	ldp	x3, x2, [x19, #272]
  46964c:	strb	wzr, [x19, #255]
  469650:	mov	x0, x19
  469654:	blr	x3
  469658:	str	xzr, [x19, #256]
  46965c:	ldr	x0, [x19, #320]
  469660:	mov	x1, #0x0                   	// #0
  469664:	add	x0, x0, #0x1
  469668:	str	x0, [x19, #320]
  46966c:	add	x0, x1, #0x1
  469670:	str	x0, [x19, #256]
  469674:	mov	w0, #0x5d                  	// #93
  469678:	strb	w0, [x19, x1]
  46967c:	strb	w0, [x19, #264]
  469680:	ldr	x0, [x20, #8]
  469684:	ldr	w1, [x0]
  469688:	cmp	w1, #0x32
  46968c:	b.eq	46b740 <_obstack_memory_used@@Base+0xa2f8>  // b.none
  469690:	ldp	x21, x22, [sp, #32]
  469694:	ldp	x23, x24, [sp, #48]
  469698:	b	467ef4 <_obstack_memory_used@@Base+0x6aac>
  46969c:	adrp	x24, 482000 <_obstack_memory_used@@Base+0x20bb8>
  4696a0:	add	x24, x24, #0x350
  4696a4:	adrp	x22, 482000 <_obstack_memory_used@@Base+0x20bb8>
  4696a8:	add	x24, x24, #0xe
  4696ac:	add	x22, x22, #0x351
  4696b0:	mov	w23, #0x6a                  	// #106
  4696b4:	ldr	x1, [x19, #256]
  4696b8:	b	4696dc <_obstack_memory_used@@Base+0x8294>
  4696bc:	mov	x0, x1
  4696c0:	add	x1, x1, #0x1
  4696c4:	str	x1, [x19, #256]
  4696c8:	cmp	x24, x22
  4696cc:	strb	w23, [x19, x0]
  4696d0:	strb	w23, [x19, #264]
  4696d4:	b.eq	46a28c <_obstack_memory_used@@Base+0x8e44>  // b.none
  4696d8:	ldrb	w23, [x22], #1
  4696dc:	cmp	x1, #0xff
  4696e0:	b.ne	4696bc <_obstack_memory_used@@Base+0x8274>  // b.any
  4696e4:	ldp	x3, x2, [x19, #272]
  4696e8:	strb	wzr, [x19, #255]
  4696ec:	mov	x0, x19
  4696f0:	blr	x3
  4696f4:	ldr	x2, [x19, #320]
  4696f8:	mov	x1, #0x1                   	// #1
  4696fc:	mov	x0, #0x0                   	// #0
  469700:	add	x2, x2, x1
  469704:	str	x2, [x19, #320]
  469708:	b	4696c4 <_obstack_memory_used@@Base+0x827c>
  46970c:	ldr	x2, [x20, #8]
  469710:	mov	w1, w21
  469714:	mov	x0, x19
  469718:	bl	46bca0 <_obstack_memory_used@@Base+0xa858>
  46971c:	ldr	x2, [x20, #16]
  469720:	mov	w1, w21
  469724:	mov	x0, x19
  469728:	bl	46bca0 <_obstack_memory_used@@Base+0xa858>
  46972c:	ldp	x21, x22, [sp, #32]
  469730:	ldp	x23, x24, [sp, #48]
  469734:	b	467ef4 <_obstack_memory_used@@Base+0x6aac>
  469738:	ldr	x1, [x19, #256]
  46973c:	ldrb	w20, [x20, #8]
  469740:	add	x0, x1, #0x1
  469744:	cmp	x1, #0xff
  469748:	b.ne	469770 <_obstack_memory_used@@Base+0x8328>  // b.any
  46974c:	ldp	x3, x2, [x19, #272]
  469750:	strb	wzr, [x19, #255]
  469754:	mov	x0, x19
  469758:	blr	x3
  46975c:	ldr	x2, [x19, #320]
  469760:	mov	x0, #0x1                   	// #1
  469764:	mov	x1, #0x0                   	// #0
  469768:	add	x2, x2, x0
  46976c:	str	x2, [x19, #320]
  469770:	str	x0, [x19, #256]
  469774:	strb	w20, [x19, x1]
  469778:	strb	w20, [x19, #264]
  46977c:	ldp	x21, x22, [sp, #32]
  469780:	ldp	x23, x24, [sp, #48]
  469784:	b	467ef4 <_obstack_memory_used@@Base+0x6aac>
  469788:	ldr	w2, [x20, #8]
  46978c:	adrp	x1, 473000 <_obstack_memory_used@@Base+0x11bb8>
  469790:	add	x1, x1, #0x1f8
  469794:	add	x20, sp, #0x60
  469798:	mov	x0, x20
  46979c:	bl	4025b0 <sprintf@plt>
  4697a0:	mov	x0, x20
  4697a4:	bl	4024f0 <strlen@plt>
  4697a8:	cbz	x0, 46b6d8 <_obstack_memory_used@@Base+0xa290>
  4697ac:	add	x22, x20, x0
  4697b0:	ldr	x1, [x19, #256]
  4697b4:	b	4697d8 <_obstack_memory_used@@Base+0x8390>
  4697b8:	mov	x0, x1
  4697bc:	add	x1, x1, #0x1
  4697c0:	str	x1, [x19, #256]
  4697c4:	add	x20, x20, #0x1
  4697c8:	strb	w21, [x19, x0]
  4697cc:	cmp	x20, x22
  4697d0:	strb	w21, [x19, #264]
  4697d4:	b.eq	46a340 <_obstack_memory_used@@Base+0x8ef8>  // b.none
  4697d8:	ldrb	w21, [x20]
  4697dc:	cmp	x1, #0xff
  4697e0:	b.ne	4697b8 <_obstack_memory_used@@Base+0x8370>  // b.any
  4697e4:	ldp	x3, x2, [x19, #272]
  4697e8:	strb	wzr, [x19, #255]
  4697ec:	mov	x0, x19
  4697f0:	blr	x3
  4697f4:	ldr	x2, [x19, #320]
  4697f8:	mov	x1, #0x1                   	// #1
  4697fc:	mov	x0, #0x0                   	// #0
  469800:	add	x2, x2, x1
  469804:	str	x2, [x19, #320]
  469808:	b	4697c0 <_obstack_memory_used@@Base+0x8378>
  46980c:	adrp	x24, 482000 <_obstack_memory_used@@Base+0x20bb8>
  469810:	add	x24, x24, #0x360
  469814:	adrp	x22, 482000 <_obstack_memory_used@@Base+0x20bb8>
  469818:	add	x24, x24, #0xa
  46981c:	add	x22, x22, #0x361
  469820:	mov	w23, #0x64                  	// #100
  469824:	ldr	x1, [x19, #256]
  469828:	b	46984c <_obstack_memory_used@@Base+0x8404>
  46982c:	mov	x0, x1
  469830:	add	x1, x1, #0x1
  469834:	str	x1, [x19, #256]
  469838:	cmp	x22, x24
  46983c:	strb	w23, [x19, x0]
  469840:	strb	w23, [x19, #264]
  469844:	b.eq	46a0b4 <_obstack_memory_used@@Base+0x8c6c>  // b.none
  469848:	ldrb	w23, [x22], #1
  46984c:	cmp	x1, #0xff
  469850:	b.ne	46982c <_obstack_memory_used@@Base+0x83e4>  // b.any
  469854:	ldp	x3, x2, [x19, #272]
  469858:	strb	wzr, [x19, #255]
  46985c:	mov	x0, x19
  469860:	blr	x3
  469864:	ldr	x2, [x19, #320]
  469868:	mov	x1, #0x1                   	// #1
  46986c:	mov	x0, #0x0                   	// #0
  469870:	add	x2, x2, x1
  469874:	str	x2, [x19, #320]
  469878:	b	469834 <_obstack_memory_used@@Base+0x83ec>
  46987c:	adrp	x24, 480000 <_obstack_memory_used@@Base+0x1ebb8>
  469880:	add	x24, x24, #0xec0
  469884:	adrp	x22, 480000 <_obstack_memory_used@@Base+0x1ebb8>
  469888:	add	x24, x24, #0x1d
  46988c:	add	x22, x22, #0xec1
  469890:	mov	w23, #0x67                  	// #103
  469894:	ldr	x1, [x19, #256]
  469898:	b	4698bc <_obstack_memory_used@@Base+0x8474>
  46989c:	mov	x0, x1
  4698a0:	add	x1, x1, #0x1
  4698a4:	str	x1, [x19, #256]
  4698a8:	cmp	x22, x24
  4698ac:	strb	w23, [x19, x0]
  4698b0:	strb	w23, [x19, #264]
  4698b4:	b.eq	46a2f8 <_obstack_memory_used@@Base+0x8eb0>  // b.none
  4698b8:	ldrb	w23, [x22], #1
  4698bc:	cmp	x1, #0xff
  4698c0:	b.ne	46989c <_obstack_memory_used@@Base+0x8454>  // b.any
  4698c4:	ldp	x3, x2, [x19, #272]
  4698c8:	strb	wzr, [x19, #255]
  4698cc:	mov	x0, x19
  4698d0:	blr	x3
  4698d4:	ldr	x2, [x19, #320]
  4698d8:	mov	x1, #0x1                   	// #1
  4698dc:	mov	x0, #0x0                   	// #0
  4698e0:	add	x2, x2, x1
  4698e4:	str	x2, [x19, #320]
  4698e8:	b	4698a4 <_obstack_memory_used@@Base+0x845c>
  4698ec:	ldrsw	x22, [x20, #16]
  4698f0:	ldr	x20, [x20, #8]
  4698f4:	tbnz	w21, #2, 46a3c4 <_obstack_memory_used@@Base+0x8f7c>
  4698f8:	cbz	x22, 46b808 <_obstack_memory_used@@Base+0xa3c0>
  4698fc:	add	x22, x20, x22
  469900:	ldr	x1, [x19, #256]
  469904:	b	469928 <_obstack_memory_used@@Base+0x84e0>
  469908:	mov	x0, x1
  46990c:	add	x1, x1, #0x1
  469910:	str	x1, [x19, #256]
  469914:	add	x20, x20, #0x1
  469918:	strb	w21, [x19, x0]
  46991c:	cmp	x22, x20
  469920:	strb	w21, [x19, #264]
  469924:	b.eq	46a7cc <_obstack_memory_used@@Base+0x9384>  // b.none
  469928:	ldrb	w21, [x20]
  46992c:	cmp	x1, #0xff
  469930:	b.ne	469908 <_obstack_memory_used@@Base+0x84c0>  // b.any
  469934:	ldp	x3, x2, [x19, #272]
  469938:	strb	wzr, [x19, #255]
  46993c:	mov	x0, x19
  469940:	blr	x3
  469944:	ldr	x2, [x19, #320]
  469948:	mov	x1, #0x1                   	// #1
  46994c:	mov	x0, #0x0                   	// #0
  469950:	add	x2, x2, x1
  469954:	str	x2, [x19, #320]
  469958:	b	469910 <_obstack_memory_used@@Base+0x84c8>
  46995c:	adrp	x22, 482000 <_obstack_memory_used@@Base+0x20bb8>
  469960:	add	x22, x22, #0x340
  469964:	add	x24, x22, #0x9
  469968:	mov	w23, #0x6f                  	// #111
  46996c:	ldr	x1, [x19, #256]
  469970:	b	469998 <_obstack_memory_used@@Base+0x8550>
  469974:	mov	x0, x1
  469978:	add	x1, x1, #0x1
  46997c:	str	x1, [x19, #256]
  469980:	add	x22, x22, #0x1
  469984:	strb	w23, [x19, x0]
  469988:	cmp	x22, x24
  46998c:	strb	w23, [x19, #264]
  469990:	b.eq	46a2a8 <_obstack_memory_used@@Base+0x8e60>  // b.none
  469994:	ldrb	w23, [x22]
  469998:	cmp	x1, #0xff
  46999c:	b.ne	469974 <_obstack_memory_used@@Base+0x852c>  // b.any
  4699a0:	ldp	x3, x2, [x19, #272]
  4699a4:	strb	wzr, [x19, #255]
  4699a8:	mov	x0, x19
  4699ac:	blr	x3
  4699b0:	ldr	x2, [x19, #320]
  4699b4:	mov	x1, #0x1                   	// #1
  4699b8:	mov	x0, #0x0                   	// #0
  4699bc:	add	x2, x2, x1
  4699c0:	str	x2, [x19, #320]
  4699c4:	b	46997c <_obstack_memory_used@@Base+0x8534>
  4699c8:	ldr	x2, [x20, #8]
  4699cc:	mov	w1, w21
  4699d0:	mov	x0, x19
  4699d4:	bl	46ce40 <_obstack_memory_used@@Base+0xb9f8>
  4699d8:	ldp	x21, x22, [sp, #32]
  4699dc:	ldp	x23, x24, [sp, #48]
  4699e0:	b	467ef4 <_obstack_memory_used@@Base+0x6aac>
  4699e4:	ldp	x22, x20, [x20, #8]
  4699e8:	ldr	w0, [x22]
  4699ec:	cmp	w0, #0x32
  4699f0:	b.eq	46a914 <_obstack_memory_used@@Base+0x94cc>  // b.none
  4699f4:	cmp	w0, #0x34
  4699f8:	b.ne	46bc5c <_obstack_memory_used@@Base+0xa814>  // b.any
  4699fc:	ldr	x1, [x19, #256]
  469a00:	add	x0, x1, #0x1
  469a04:	cmp	x1, #0xff
  469a08:	b.ne	469a30 <_obstack_memory_used@@Base+0x85e8>  // b.any
  469a0c:	ldp	x3, x2, [x19, #272]
  469a10:	strb	wzr, [x19, #255]
  469a14:	mov	x0, x19
  469a18:	blr	x3
  469a1c:	ldr	x2, [x19, #320]
  469a20:	mov	x0, #0x1                   	// #1
  469a24:	mov	x1, #0x0                   	// #0
  469a28:	add	x2, x2, x0
  469a2c:	str	x2, [x19, #320]
  469a30:	str	x0, [x19, #256]
  469a34:	mov	w0, #0x28                  	// #40
  469a38:	strb	w0, [x19, x1]
  469a3c:	mov	w1, w21
  469a40:	strb	w0, [x19, #264]
  469a44:	mov	x0, x19
  469a48:	ldr	x2, [x22, #8]
  469a4c:	bl	46bca0 <_obstack_memory_used@@Base+0xa858>
  469a50:	ldr	x1, [x19, #256]
  469a54:	add	x0, x1, #0x1
  469a58:	cmp	x1, #0xff
  469a5c:	b.ne	469a84 <_obstack_memory_used@@Base+0x863c>  // b.any
  469a60:	ldp	x3, x2, [x19, #272]
  469a64:	strb	wzr, [x19, #255]
  469a68:	mov	x0, x19
  469a6c:	blr	x3
  469a70:	ldr	x2, [x19, #320]
  469a74:	mov	x0, #0x1                   	// #1
  469a78:	mov	x1, #0x0                   	// #0
  469a7c:	add	x2, x2, x0
  469a80:	str	x2, [x19, #320]
  469a84:	str	x0, [x19, #256]
  469a88:	mov	w0, #0x29                  	// #41
  469a8c:	strb	w0, [x19, x1]
  469a90:	strb	w0, [x19, #264]
  469a94:	mov	w1, w21
  469a98:	mov	x2, x20
  469a9c:	mov	x0, x19
  469aa0:	bl	46cef8 <_obstack_memory_used@@Base+0xbab0>
  469aa4:	ldp	x21, x22, [sp, #32]
  469aa8:	ldp	x23, x24, [sp, #48]
  469aac:	b	467ef4 <_obstack_memory_used@@Base+0x6aac>
  469ab0:	ldr	x0, [x20, #8]
  469ab4:	tbnz	w21, #2, 46a740 <_obstack_memory_used@@Base+0x92f8>
  469ab8:	ldrsw	x22, [x0, #8]
  469abc:	ldr	x20, [x0]
  469ac0:	cbz	x22, 46b928 <_obstack_memory_used@@Base+0xa4e0>
  469ac4:	add	x22, x20, x22
  469ac8:	ldr	x1, [x19, #256]
  469acc:	b	469af0 <_obstack_memory_used@@Base+0x86a8>
  469ad0:	mov	x0, x1
  469ad4:	add	x1, x1, #0x1
  469ad8:	str	x1, [x19, #256]
  469adc:	add	x20, x20, #0x1
  469ae0:	strb	w21, [x19, x0]
  469ae4:	cmp	x22, x20
  469ae8:	strb	w21, [x19, #264]
  469aec:	b.eq	46a7b4 <_obstack_memory_used@@Base+0x936c>  // b.none
  469af0:	ldrb	w21, [x20]
  469af4:	cmp	x1, #0xff
  469af8:	b.ne	469ad0 <_obstack_memory_used@@Base+0x8688>  // b.any
  469afc:	ldp	x3, x2, [x19, #272]
  469b00:	strb	wzr, [x19, #255]
  469b04:	mov	x0, x19
  469b08:	blr	x3
  469b0c:	ldr	x2, [x19, #320]
  469b10:	mov	x1, #0x1                   	// #1
  469b14:	mov	x0, #0x0                   	// #0
  469b18:	add	x2, x2, x1
  469b1c:	str	x2, [x19, #320]
  469b20:	b	469ad8 <_obstack_memory_used@@Base+0x8690>
  469b24:	ldr	x2, [x0, #8]
  469b28:	add	x0, sp, #0x60
  469b2c:	ldr	x1, [x19, #288]
  469b30:	stp	x4, x20, [sp, #96]
  469b34:	str	wzr, [sp, #112]
  469b38:	str	x1, [sp, #120]
  469b3c:	str	x0, [x19, #296]
  469b40:	cbnz	x2, 467f58 <_obstack_memory_used@@Base+0x6b10>
  469b44:	b	467f54 <_obstack_memory_used@@Base+0x6b0c>
  469b48:	ldp	x21, x22, [sp, #32]
  469b4c:	ldp	x23, x24, [sp, #48]
  469b50:	b	467ef4 <_obstack_memory_used@@Base+0x6aac>
  469b54:	ldr	x2, [x20, #16]
  469b58:	mov	w1, w21
  469b5c:	mov	x0, x19
  469b60:	bl	46bca0 <_obstack_memory_used@@Base+0xa858>
  469b64:	ldr	x1, [x19, #256]
  469b68:	add	x0, x1, #0x1
  469b6c:	cmp	x1, #0xff
  469b70:	b.ne	469b98 <_obstack_memory_used@@Base+0x8750>  // b.any
  469b74:	ldp	x3, x2, [x19, #272]
  469b78:	strb	wzr, [x19, #255]
  469b7c:	mov	x0, x19
  469b80:	blr	x3
  469b84:	ldr	x2, [x19, #320]
  469b88:	mov	x0, #0x1                   	// #1
  469b8c:	mov	x1, #0x0                   	// #0
  469b90:	add	x2, x2, x0
  469b94:	str	x2, [x19, #320]
  469b98:	str	x0, [x19, #256]
  469b9c:	mov	w0, #0x5d                  	// #93
  469ba0:	strb	w0, [x19, x1]
  469ba4:	strb	w0, [x19, #264]
  469ba8:	ldp	x21, x22, [sp, #32]
  469bac:	ldp	x23, x24, [sp, #48]
  469bb0:	b	467ef4 <_obstack_memory_used@@Base+0x6aac>
  469bb4:	ldr	x2, [x20, #16]
  469bb8:	mov	w1, w21
  469bbc:	mov	x0, x19
  469bc0:	bl	46bca0 <_obstack_memory_used@@Base+0xa858>
  469bc4:	ldp	x21, x22, [sp, #32]
  469bc8:	ldp	x23, x24, [sp, #48]
  469bcc:	b	467ef4 <_obstack_memory_used@@Base+0x6aac>
  469bd0:	ldr	x2, [x20, #8]
  469bd4:	mov	w1, w21
  469bd8:	mov	x0, x19
  469bdc:	bl	46bca0 <_obstack_memory_used@@Base+0xa858>
  469be0:	ldp	x21, x22, [sp, #32]
  469be4:	ldp	x23, x24, [sp, #48]
  469be8:	b	467ef4 <_obstack_memory_used@@Base+0x6aac>
  469bec:	ldr	x2, [x20, #8]
  469bf0:	mov	w1, w21
  469bf4:	mov	x0, x19
  469bf8:	bl	46bca0 <_obstack_memory_used@@Base+0xa858>
  469bfc:	ldp	x21, x22, [sp, #32]
  469c00:	ldp	x23, x24, [sp, #48]
  469c04:	b	467ef4 <_obstack_memory_used@@Base+0x6aac>
  469c08:	ldr	x2, [x20, #16]
  469c0c:	mov	w1, w21
  469c10:	mov	x0, x19
  469c14:	adrp	x24, 482000 <_obstack_memory_used@@Base+0x20bb8>
  469c18:	add	x24, x24, #0x300
  469c1c:	adrp	x22, 482000 <_obstack_memory_used@@Base+0x20bb8>
  469c20:	bl	46bca0 <_obstack_memory_used@@Base+0xa858>
  469c24:	add	x24, x24, #0x5
  469c28:	add	x22, x22, #0x301
  469c2c:	mov	w23, #0x20                  	// #32
  469c30:	ldr	x1, [x19, #256]
  469c34:	b	469c58 <_obstack_memory_used@@Base+0x8810>
  469c38:	mov	x0, x1
  469c3c:	add	x1, x1, #0x1
  469c40:	str	x1, [x19, #256]
  469c44:	cmp	x22, x24
  469c48:	strb	w23, [x19, x0]
  469c4c:	strb	w23, [x19, #264]
  469c50:	b.eq	469cf8 <_obstack_memory_used@@Base+0x88b0>  // b.none
  469c54:	ldrb	w23, [x22], #1
  469c58:	cmp	x1, #0xff
  469c5c:	b.ne	469c38 <_obstack_memory_used@@Base+0x87f0>  // b.any
  469c60:	ldp	x3, x2, [x19, #272]
  469c64:	strb	wzr, [x19, #255]
  469c68:	mov	x0, x19
  469c6c:	blr	x3
  469c70:	ldr	x2, [x19, #320]
  469c74:	mov	x1, #0x1                   	// #1
  469c78:	mov	x0, #0x0                   	// #0
  469c7c:	add	x2, x2, x1
  469c80:	str	x2, [x19, #320]
  469c84:	b	469c40 <_obstack_memory_used@@Base+0x87f8>
  469c88:	ldr	x2, [x20, #8]
  469c8c:	mov	w1, w21
  469c90:	mov	x0, x19
  469c94:	bl	46bca0 <_obstack_memory_used@@Base+0xa858>
  469c98:	ldp	x21, x22, [sp, #32]
  469c9c:	ldp	x23, x24, [sp, #48]
  469ca0:	b	467ef4 <_obstack_memory_used@@Base+0x6aac>
  469ca4:	ldr	x2, [x20, #8]
  469ca8:	mov	w1, w21
  469cac:	mov	x0, x19
  469cb0:	bl	46bca0 <_obstack_memory_used@@Base+0xa858>
  469cb4:	ldp	x21, x22, [sp, #32]
  469cb8:	ldp	x23, x24, [sp, #48]
  469cbc:	b	467ef4 <_obstack_memory_used@@Base+0x6aac>
  469cc0:	ldr	x2, [x20, #8]
  469cc4:	mov	w1, w21
  469cc8:	mov	x0, x19
  469ccc:	bl	46bca0 <_obstack_memory_used@@Base+0xa858>
  469cd0:	ldp	x21, x22, [sp, #32]
  469cd4:	ldp	x23, x24, [sp, #48]
  469cd8:	b	467ef4 <_obstack_memory_used@@Base+0x6aac>
  469cdc:	ldr	x2, [x20, #8]
  469ce0:	mov	w1, w21
  469ce4:	mov	x0, x19
  469ce8:	bl	46bca0 <_obstack_memory_used@@Base+0xa858>
  469cec:	ldp	x21, x22, [sp, #32]
  469cf0:	ldp	x23, x24, [sp, #48]
  469cf4:	b	467ef4 <_obstack_memory_used@@Base+0x6aac>
  469cf8:	ldr	x2, [x20, #8]
  469cfc:	mov	w1, w21
  469d00:	mov	x0, x19
  469d04:	bl	46bca0 <_obstack_memory_used@@Base+0xa858>
  469d08:	ldp	x21, x22, [sp, #32]
  469d0c:	ldp	x23, x24, [sp, #48]
  469d10:	b	467ef4 <_obstack_memory_used@@Base+0x6aac>
  469d14:	ldr	x2, [x20, #16]
  469d18:	mov	w1, w21
  469d1c:	mov	x0, x19
  469d20:	bl	46bca0 <_obstack_memory_used@@Base+0xa858>
  469d24:	ldr	x1, [x19, #256]
  469d28:	add	x0, x1, #0x1
  469d2c:	cmp	x1, #0xff
  469d30:	b.ne	469d58 <_obstack_memory_used@@Base+0x8910>  // b.any
  469d34:	ldp	x3, x2, [x19, #272]
  469d38:	strb	wzr, [x19, #255]
  469d3c:	mov	x0, x19
  469d40:	blr	x3
  469d44:	ldr	x2, [x19, #320]
  469d48:	mov	x0, #0x1                   	// #1
  469d4c:	mov	x1, #0x0                   	// #0
  469d50:	add	x2, x2, x0
  469d54:	str	x2, [x19, #320]
  469d58:	str	x0, [x19, #256]
  469d5c:	mov	w0, #0x5d                  	// #93
  469d60:	strb	w0, [x19, x1]
  469d64:	strb	w0, [x19, #264]
  469d68:	ldp	x21, x22, [sp, #32]
  469d6c:	ldp	x23, x24, [sp, #48]
  469d70:	b	467ef4 <_obstack_memory_used@@Base+0x6aac>
  469d74:	ldr	x20, [x22, #8]
  469d78:	ldrb	w0, [x20]
  469d7c:	sub	w0, w0, #0x61
  469d80:	and	w0, w0, #0xff
  469d84:	cmp	w0, #0x19
  469d88:	b.hi	469dd0 <_obstack_memory_used@@Base+0x8988>  // b.pmore
  469d8c:	add	x0, x1, #0x1
  469d90:	cmp	x1, #0xff
  469d94:	b.ne	469dc0 <_obstack_memory_used@@Base+0x8978>  // b.any
  469d98:	ldp	x3, x2, [x19, #272]
  469d9c:	strb	wzr, [x19, #255]
  469da0:	mov	x0, x19
  469da4:	blr	x3
  469da8:	ldr	x2, [x19, #320]
  469dac:	mov	x0, #0x1                   	// #1
  469db0:	mov	x1, #0x0                   	// #0
  469db4:	add	x2, x2, x0
  469db8:	ldr	x20, [x22, #8]
  469dbc:	str	x2, [x19, #320]
  469dc0:	str	x0, [x19, #256]
  469dc4:	mov	w0, #0x20                  	// #32
  469dc8:	strb	w0, [x19, x1]
  469dcc:	strb	w0, [x19, #264]
  469dd0:	sxtw	x22, w23
  469dd4:	sub	w0, w23, #0x1
  469dd8:	add	x1, x20, x22
  469ddc:	sxtw	x0, w0
  469de0:	ldurb	w1, [x1, #-1]
  469de4:	cmp	w1, #0x20
  469de8:	csel	x22, x22, x0, ne  // ne = any
  469dec:	cbz	x22, 46b6cc <_obstack_memory_used@@Base+0xa284>
  469df0:	add	x22, x20, x22
  469df4:	ldr	x1, [x19, #256]
  469df8:	b	469e1c <_obstack_memory_used@@Base+0x89d4>
  469dfc:	mov	x0, x1
  469e00:	add	x1, x1, #0x1
  469e04:	str	x1, [x19, #256]
  469e08:	add	x20, x20, #0x1
  469e0c:	strb	w21, [x19, x0]
  469e10:	cmp	x22, x20
  469e14:	strb	w21, [x19, #264]
  469e18:	b.eq	46a334 <_obstack_memory_used@@Base+0x8eec>  // b.none
  469e1c:	ldrb	w21, [x20]
  469e20:	cmp	x1, #0xff
  469e24:	b.ne	469dfc <_obstack_memory_used@@Base+0x89b4>  // b.any
  469e28:	ldp	x3, x2, [x19, #272]
  469e2c:	strb	wzr, [x19, #255]
  469e30:	mov	x0, x19
  469e34:	blr	x3
  469e38:	ldr	x2, [x19, #320]
  469e3c:	mov	x1, #0x1                   	// #1
  469e40:	mov	x0, #0x0                   	// #0
  469e44:	add	x2, x2, x1
  469e48:	str	x2, [x19, #320]
  469e4c:	b	469e04 <_obstack_memory_used@@Base+0x89bc>
  469e50:	ldr	x2, [x20, #8]
  469e54:	mov	w1, w21
  469e58:	mov	x0, x19
  469e5c:	bl	46bca0 <_obstack_memory_used@@Base+0xa858>
  469e60:	ldp	x21, x22, [sp, #32]
  469e64:	ldp	x23, x24, [sp, #48]
  469e68:	b	467ef4 <_obstack_memory_used@@Base+0x6aac>
  469e6c:	ldr	x2, [x20, #8]
  469e70:	adrp	x1, 473000 <_obstack_memory_used@@Base+0x11bb8>
  469e74:	add	x1, x1, #0x1f8
  469e78:	add	x20, sp, #0x60
  469e7c:	add	w2, w2, #0x1
  469e80:	mov	x0, x20
  469e84:	bl	4025b0 <sprintf@plt>
  469e88:	mov	x0, x20
  469e8c:	bl	4024f0 <strlen@plt>
  469e90:	ldr	x1, [x19, #256]
  469e94:	cbz	x0, 469ef4 <_obstack_memory_used@@Base+0x8aac>
  469e98:	add	x22, x20, x0
  469e9c:	b	469ec0 <_obstack_memory_used@@Base+0x8a78>
  469ea0:	mov	x0, x1
  469ea4:	add	x1, x1, #0x1
  469ea8:	str	x1, [x19, #256]
  469eac:	add	x20, x20, #0x1
  469eb0:	strb	w21, [x19, x0]
  469eb4:	cmp	x22, x20
  469eb8:	strb	w21, [x19, #264]
  469ebc:	b.eq	469ef4 <_obstack_memory_used@@Base+0x8aac>  // b.none
  469ec0:	ldrb	w21, [x20]
  469ec4:	cmp	x1, #0xff
  469ec8:	b.ne	469ea0 <_obstack_memory_used@@Base+0x8a58>  // b.any
  469ecc:	ldp	x3, x2, [x19, #272]
  469ed0:	strb	wzr, [x19, #255]
  469ed4:	mov	x0, x19
  469ed8:	blr	x3
  469edc:	ldr	x2, [x19, #320]
  469ee0:	mov	x1, #0x1                   	// #1
  469ee4:	mov	x0, #0x0                   	// #0
  469ee8:	add	x2, x2, x1
  469eec:	str	x2, [x19, #320]
  469ef0:	b	469ea8 <_obstack_memory_used@@Base+0x8a60>
  469ef4:	add	x0, x1, #0x1
  469ef8:	cmp	x1, #0xff
  469efc:	b.ne	469f24 <_obstack_memory_used@@Base+0x8adc>  // b.any
  469f00:	ldp	x3, x2, [x19, #272]
  469f04:	strb	wzr, [x19, #255]
  469f08:	mov	x0, x19
  469f0c:	blr	x3
  469f10:	ldr	x2, [x19, #320]
  469f14:	mov	x0, #0x1                   	// #1
  469f18:	mov	x1, #0x0                   	// #0
  469f1c:	add	x2, x2, x0
  469f20:	str	x2, [x19, #320]
  469f24:	str	x0, [x19, #256]
  469f28:	mov	w0, #0x7d                  	// #125
  469f2c:	strb	w0, [x19, x1]
  469f30:	strb	w0, [x19, #264]
  469f34:	ldp	x21, x22, [sp, #32]
  469f38:	ldp	x23, x24, [sp, #48]
  469f3c:	b	467ef4 <_obstack_memory_used@@Base+0x6aac>
  469f40:	ldr	x2, [x20, #8]
  469f44:	mov	w1, w21
  469f48:	mov	x0, x19
  469f4c:	bl	46bca0 <_obstack_memory_used@@Base+0xa858>
  469f50:	ldp	x21, x22, [sp, #32]
  469f54:	ldp	x23, x24, [sp, #48]
  469f58:	b	467ef4 <_obstack_memory_used@@Base+0x6aac>
  469f5c:	ldr	x2, [x20, #8]
  469f60:	mov	w1, w21
  469f64:	mov	x0, x19
  469f68:	bl	46bca0 <_obstack_memory_used@@Base+0xa858>
  469f6c:	ldp	x21, x22, [sp, #32]
  469f70:	ldp	x23, x24, [sp, #48]
  469f74:	b	467ef4 <_obstack_memory_used@@Base+0x6aac>
  469f78:	ldr	w3, [x19, #312]
  469f7c:	mov	w1, w21
  469f80:	ldr	x2, [x20, #8]
  469f84:	add	w3, w3, #0x1
  469f88:	str	w3, [x19, #312]
  469f8c:	mov	x0, x19
  469f90:	mov	w21, #0x29                  	// #41
  469f94:	mov	x22, #0x0                   	// #0
  469f98:	bl	46bca0 <_obstack_memory_used@@Base+0xa858>
  469f9c:	ldr	w0, [x19, #312]
  469fa0:	ldr	x1, [x19, #256]
  469fa4:	sub	w0, w0, #0x1
  469fa8:	str	w0, [x19, #312]
  469fac:	b	469fd4 <_obstack_memory_used@@Base+0x8b8c>
  469fb0:	mov	x0, x1
  469fb4:	add	x1, x1, #0x1
  469fb8:	str	x1, [x19, #256]
  469fbc:	cmp	x22, #0x1
  469fc0:	strb	w21, [x19, x0]
  469fc4:	strb	w21, [x19, #264]
  469fc8:	mov	w21, #0x23                  	// #35
  469fcc:	b.eq	46a004 <_obstack_memory_used@@Base+0x8bbc>  // b.none
  469fd0:	mov	x22, #0x1                   	// #1
  469fd4:	cmp	x1, #0xff
  469fd8:	b.ne	469fb0 <_obstack_memory_used@@Base+0x8b68>  // b.any
  469fdc:	ldp	x3, x2, [x19, #272]
  469fe0:	strb	wzr, [x19, #255]
  469fe4:	mov	x0, x19
  469fe8:	blr	x3
  469fec:	ldr	x2, [x19, #320]
  469ff0:	mov	x1, #0x1                   	// #1
  469ff4:	mov	x0, #0x0                   	// #0
  469ff8:	add	x2, x2, x1
  469ffc:	str	x2, [x19, #320]
  46a000:	b	469fb8 <_obstack_memory_used@@Base+0x8b70>
  46a004:	ldr	w2, [x20, #16]
  46a008:	adrp	x1, 473000 <_obstack_memory_used@@Base+0x11bb8>
  46a00c:	add	x1, x1, #0x1f8
  46a010:	add	x20, sp, #0x60
  46a014:	add	w2, w2, #0x1
  46a018:	mov	x0, x20
  46a01c:	bl	4025b0 <sprintf@plt>
  46a020:	mov	x0, x20
  46a024:	bl	4024f0 <strlen@plt>
  46a028:	ldr	x1, [x19, #256]
  46a02c:	cbz	x0, 46a08c <_obstack_memory_used@@Base+0x8c44>
  46a030:	add	x23, x20, x0
  46a034:	b	46a058 <_obstack_memory_used@@Base+0x8c10>
  46a038:	mov	x0, x1
  46a03c:	add	x1, x1, #0x1
  46a040:	str	x1, [x19, #256]
  46a044:	add	x20, x20, #0x1
  46a048:	strb	w21, [x19, x0]
  46a04c:	cmp	x23, x20
  46a050:	strb	w21, [x19, #264]
  46a054:	b.eq	46a08c <_obstack_memory_used@@Base+0x8c44>  // b.none
  46a058:	ldrb	w21, [x20]
  46a05c:	cmp	x1, #0xff
  46a060:	b.ne	46a038 <_obstack_memory_used@@Base+0x8bf0>  // b.any
  46a064:	ldp	x3, x2, [x19, #272]
  46a068:	strb	wzr, [x19, #255]
  46a06c:	mov	x0, x19
  46a070:	blr	x3
  46a074:	ldr	x2, [x19, #320]
  46a078:	mov	x1, #0x1                   	// #1
  46a07c:	mov	x0, #0x0                   	// #0
  46a080:	add	x2, x2, x1
  46a084:	str	x2, [x19, #320]
  46a088:	b	46a040 <_obstack_memory_used@@Base+0x8bf8>
  46a08c:	cmp	x1, #0xff
  46a090:	b.eq	46a8f0 <_obstack_memory_used@@Base+0x94a8>  // b.none
  46a094:	add	x22, x1, #0x1
  46a098:	str	x22, [x19, #256]
  46a09c:	mov	w0, #0x7d                  	// #125
  46a0a0:	strb	w0, [x19, x1]
  46a0a4:	strb	w0, [x19, #264]
  46a0a8:	ldp	x21, x22, [sp, #32]
  46a0ac:	ldp	x23, x24, [sp, #48]
  46a0b0:	b	467ef4 <_obstack_memory_used@@Base+0x6aac>
  46a0b4:	ldr	x2, [x20, #8]
  46a0b8:	mov	w1, w21
  46a0bc:	mov	x0, x19
  46a0c0:	bl	46bca0 <_obstack_memory_used@@Base+0xa858>
  46a0c4:	ldr	x1, [x19, #256]
  46a0c8:	add	x0, x1, #0x1
  46a0cc:	cmp	x1, #0xff
  46a0d0:	b.ne	46a0f8 <_obstack_memory_used@@Base+0x8cb0>  // b.any
  46a0d4:	ldp	x3, x2, [x19, #272]
  46a0d8:	strb	wzr, [x19, #255]
  46a0dc:	mov	x0, x19
  46a0e0:	blr	x3
  46a0e4:	ldr	x2, [x19, #320]
  46a0e8:	mov	x0, #0x1                   	// #1
  46a0ec:	mov	x1, #0x0                   	// #0
  46a0f0:	add	x2, x2, x0
  46a0f4:	str	x2, [x19, #320]
  46a0f8:	str	x0, [x19, #256]
  46a0fc:	mov	w0, #0x29                  	// #41
  46a100:	strb	w0, [x19, x1]
  46a104:	strb	w0, [x19, #264]
  46a108:	ldp	x21, x22, [sp, #32]
  46a10c:	ldp	x23, x24, [sp, #48]
  46a110:	b	467ef4 <_obstack_memory_used@@Base+0x6aac>
  46a114:	ldr	x2, [x20, #8]
  46a118:	mov	w1, w21
  46a11c:	mov	x0, x19
  46a120:	bl	46bca0 <_obstack_memory_used@@Base+0xa858>
  46a124:	ldp	x21, x22, [sp, #32]
  46a128:	ldp	x23, x24, [sp, #48]
  46a12c:	b	467ef4 <_obstack_memory_used@@Base+0x6aac>
  46a130:	ldr	x2, [x20, #8]
  46a134:	mov	w1, w21
  46a138:	mov	x0, x19
  46a13c:	bl	46bca0 <_obstack_memory_used@@Base+0xa858>
  46a140:	ldp	x21, x22, [sp, #32]
  46a144:	ldp	x23, x24, [sp, #48]
  46a148:	b	467ef4 <_obstack_memory_used@@Base+0x6aac>
  46a14c:	ldr	x2, [x20, #8]
  46a150:	mov	w1, w21
  46a154:	mov	x0, x19
  46a158:	adrp	x22, 482000 <_obstack_memory_used@@Base+0x20bb8>
  46a15c:	add	x22, x22, #0x2f0
  46a160:	mov	w23, #0x2d                  	// #45
  46a164:	bl	46bca0 <_obstack_memory_used@@Base+0xa858>
  46a168:	add	x24, x22, #0x4
  46a16c:	ldr	x1, [x19, #256]
  46a170:	b	46a198 <_obstack_memory_used@@Base+0x8d50>
  46a174:	mov	x0, x1
  46a178:	add	x1, x1, #0x1
  46a17c:	str	x1, [x19, #256]
  46a180:	add	x22, x22, #0x1
  46a184:	strb	w23, [x19, x0]
  46a188:	cmp	x24, x22
  46a18c:	strb	w23, [x19, #264]
  46a190:	b.eq	46a200 <_obstack_memory_used@@Base+0x8db8>  // b.none
  46a194:	ldrb	w23, [x22]
  46a198:	cmp	x1, #0xff
  46a19c:	b.ne	46a174 <_obstack_memory_used@@Base+0x8d2c>  // b.any
  46a1a0:	ldp	x3, x2, [x19, #272]
  46a1a4:	strb	wzr, [x19, #255]
  46a1a8:	mov	x0, x19
  46a1ac:	blr	x3
  46a1b0:	ldr	x2, [x19, #320]
  46a1b4:	mov	x1, #0x1                   	// #1
  46a1b8:	mov	x0, #0x0                   	// #0
  46a1bc:	add	x2, x2, x1
  46a1c0:	str	x2, [x19, #320]
  46a1c4:	b	46a17c <_obstack_memory_used@@Base+0x8d34>
  46a1c8:	ldr	x2, [x20, #8]
  46a1cc:	mov	w1, w21
  46a1d0:	mov	x0, x19
  46a1d4:	bl	46bca0 <_obstack_memory_used@@Base+0xa858>
  46a1d8:	ldp	x21, x22, [sp, #32]
  46a1dc:	ldp	x23, x24, [sp, #48]
  46a1e0:	b	467ef4 <_obstack_memory_used@@Base+0x6aac>
  46a1e4:	ldr	x2, [x20, #8]
  46a1e8:	mov	w1, w21
  46a1ec:	mov	x0, x19
  46a1f0:	bl	46bca0 <_obstack_memory_used@@Base+0xa858>
  46a1f4:	ldp	x21, x22, [sp, #32]
  46a1f8:	ldp	x23, x24, [sp, #48]
  46a1fc:	b	467ef4 <_obstack_memory_used@@Base+0x6aac>
  46a200:	ldr	x2, [x20, #16]
  46a204:	mov	w1, w21
  46a208:	mov	x0, x19
  46a20c:	bl	46bca0 <_obstack_memory_used@@Base+0xa858>
  46a210:	ldp	x21, x22, [sp, #32]
  46a214:	ldp	x23, x24, [sp, #48]
  46a218:	b	467ef4 <_obstack_memory_used@@Base+0x6aac>
  46a21c:	ldr	x2, [x20, #8]
  46a220:	mov	w1, w21
  46a224:	mov	x0, x19
  46a228:	bl	46bca0 <_obstack_memory_used@@Base+0xa858>
  46a22c:	ldp	x21, x22, [sp, #32]
  46a230:	ldp	x23, x24, [sp, #48]
  46a234:	b	467ef4 <_obstack_memory_used@@Base+0x6aac>
  46a238:	ldr	x2, [x20, #8]
  46a23c:	mov	w1, w21
  46a240:	mov	x0, x19
  46a244:	bl	46bca0 <_obstack_memory_used@@Base+0xa858>
  46a248:	ldp	x21, x22, [sp, #32]
  46a24c:	ldp	x23, x24, [sp, #48]
  46a250:	b	467ef4 <_obstack_memory_used@@Base+0x6aac>
  46a254:	ldr	x2, [x20, #8]
  46a258:	mov	w1, w21
  46a25c:	mov	x0, x19
  46a260:	bl	46bca0 <_obstack_memory_used@@Base+0xa858>
  46a264:	ldp	x21, x22, [sp, #32]
  46a268:	ldp	x23, x24, [sp, #48]
  46a26c:	b	467ef4 <_obstack_memory_used@@Base+0x6aac>
  46a270:	ldr	x2, [x20, #8]
  46a274:	mov	w1, w21
  46a278:	mov	x0, x19
  46a27c:	bl	46bca0 <_obstack_memory_used@@Base+0xa858>
  46a280:	ldp	x21, x22, [sp, #32]
  46a284:	ldp	x23, x24, [sp, #48]
  46a288:	b	467ef4 <_obstack_memory_used@@Base+0x6aac>
  46a28c:	ldr	x2, [x20, #8]
  46a290:	mov	w1, w21
  46a294:	mov	x0, x19
  46a298:	bl	46bca0 <_obstack_memory_used@@Base+0xa858>
  46a29c:	ldp	x21, x22, [sp, #32]
  46a2a0:	ldp	x23, x24, [sp, #48]
  46a2a4:	b	467ef4 <_obstack_memory_used@@Base+0x6aac>
  46a2a8:	ldr	x1, [x19, #368]
  46a2ac:	cbz	x1, 46a2c0 <_obstack_memory_used@@Base+0x8e78>
  46a2b0:	ldr	x2, [x19, #288]
  46a2b4:	add	x0, sp, #0x60
  46a2b8:	stp	x2, x1, [sp, #96]
  46a2bc:	str	x0, [x19, #288]
  46a2c0:	ldr	x2, [x20, #8]
  46a2c4:	ldr	w0, [x2]
  46a2c8:	cmp	w0, #0x4
  46a2cc:	b.eq	46abb8 <_obstack_memory_used@@Base+0x9770>  // b.none
  46a2d0:	mov	x0, x19
  46a2d4:	mov	w1, w21
  46a2d8:	bl	46bca0 <_obstack_memory_used@@Base+0xa858>
  46a2dc:	ldr	x0, [x19, #368]
  46a2e0:	cbz	x0, 46afd4 <_obstack_memory_used@@Base+0x9b8c>
  46a2e4:	ldr	x0, [sp, #96]
  46a2e8:	ldp	x21, x22, [sp, #32]
  46a2ec:	ldp	x23, x24, [sp, #48]
  46a2f0:	str	x0, [x19, #288]
  46a2f4:	b	467ef4 <_obstack_memory_used@@Base+0x6aac>
  46a2f8:	ldr	x2, [x20, #8]
  46a2fc:	mov	w1, w21
  46a300:	mov	x0, x19
  46a304:	bl	46bca0 <_obstack_memory_used@@Base+0xa858>
  46a308:	ldp	x21, x22, [sp, #32]
  46a30c:	ldp	x23, x24, [sp, #48]
  46a310:	b	467ef4 <_obstack_memory_used@@Base+0x6aac>
  46a314:	mov	x2, x20
  46a318:	mov	w1, w21
  46a31c:	mov	x0, x19
  46a320:	bl	46bd38 <_obstack_memory_used@@Base+0xa8f0>
  46a324:	b	467f6c <_obstack_memory_used@@Base+0x6b24>
  46a328:	ldp	x21, x22, [sp, #32]
  46a32c:	ldp	x23, x24, [sp, #48]
  46a330:	b	467ef4 <_obstack_memory_used@@Base+0x6aac>
  46a334:	ldp	x21, x22, [sp, #32]
  46a338:	ldp	x23, x24, [sp, #48]
  46a33c:	b	467ef4 <_obstack_memory_used@@Base+0x6aac>
  46a340:	ldp	x21, x22, [sp, #32]
  46a344:	ldp	x23, x24, [sp, #48]
  46a348:	b	467ef4 <_obstack_memory_used@@Base+0x6aac>
  46a34c:	ldp	x21, x22, [sp, #32]
  46a350:	ldp	x23, x24, [sp, #48]
  46a354:	ldp	x25, x26, [sp, #64]
  46a358:	b	467ef4 <_obstack_memory_used@@Base+0x6aac>
  46a35c:	ldr	x2, [x20, #16]
  46a360:	mov	x0, x19
  46a364:	mov	w1, w21
  46a368:	ldr	x20, [x19, #320]
  46a36c:	bl	46bca0 <_obstack_memory_used@@Base+0xa858>
  46a370:	ldr	x0, [x19, #320]
  46a374:	cmp	x0, x20
  46a378:	b.eq	46af70 <_obstack_memory_used@@Base+0x9b28>  // b.none
  46a37c:	ldp	x21, x22, [sp, #32]
  46a380:	ldp	x23, x24, [sp, #48]
  46a384:	b	467ef4 <_obstack_memory_used@@Base+0x6aac>
  46a388:	ldr	x25, [x25, #8]
  46a38c:	cbz	x25, 46b264 <_obstack_memory_used@@Base+0x9e1c>
  46a390:	add	x3, x3, #0x20
  46a394:	cmp	w24, #0x4
  46a398:	b.eq	46af38 <_obstack_memory_used@@Base+0x9af0>  // b.none
  46a39c:	mov	x0, x4
  46a3a0:	b	4691d4 <_obstack_memory_used@@Base+0x7d8c>
  46a3a4:	ldr	x25, [x20, #8]
  46a3a8:	cbnz	w24, 468d14 <_obstack_memory_used@@Base+0x78cc>
  46a3ac:	ldp	x21, x22, [sp, #32]
  46a3b0:	ldp	x23, x24, [sp, #48]
  46a3b4:	ldp	x25, x26, [sp, #64]
  46a3b8:	b	467ef4 <_obstack_memory_used@@Base+0x6aac>
  46a3bc:	mov	x20, x0
  46a3c0:	b	4680c8 <_obstack_memory_used@@Base+0x6c80>
  46a3c4:	add	x21, x20, x22
  46a3c8:	cmp	x21, x20
  46a3cc:	b.ls	46b814 <_obstack_memory_used@@Base+0xa3cc>  // b.plast
  46a3d0:	mov	w23, #0x5f                  	// #95
  46a3d4:	b	46a424 <_obstack_memory_used@@Base+0x8fdc>
  46a3d8:	ldr	x1, [x19, #256]
  46a3dc:	add	x0, x1, #0x1
  46a3e0:	cmp	x1, #0xff
  46a3e4:	b.ne	46a40c <_obstack_memory_used@@Base+0x8fc4>  // b.any
  46a3e8:	ldp	x3, x2, [x19, #272]
  46a3ec:	strb	wzr, [x19, #255]
  46a3f0:	mov	x0, x19
  46a3f4:	blr	x3
  46a3f8:	ldr	x2, [x19, #320]
  46a3fc:	mov	x0, #0x1                   	// #1
  46a400:	mov	x1, #0x0                   	// #0
  46a404:	add	x2, x2, x0
  46a408:	str	x2, [x19, #320]
  46a40c:	str	x0, [x19, #256]
  46a410:	strb	w22, [x19, x1]
  46a414:	strb	w22, [x19, #264]
  46a418:	add	x20, x20, #0x1
  46a41c:	cmp	x21, x20
  46a420:	b.ls	46a7d8 <_obstack_memory_used@@Base+0x9390>  // b.plast
  46a424:	sub	x0, x21, x20
  46a428:	ldrb	w22, [x20]
  46a42c:	cmp	x0, #0x3
  46a430:	b.le	46a3d8 <_obstack_memory_used@@Base+0x8f90>
  46a434:	cmp	w22, #0x5f
  46a438:	b.ne	46a3d8 <_obstack_memory_used@@Base+0x8f90>  // b.any
  46a43c:	ldrb	w0, [x20, #1]
  46a440:	cmp	w0, #0x5f
  46a444:	b.ne	46a3d8 <_obstack_memory_used@@Base+0x8f90>  // b.any
  46a448:	ldrb	w0, [x20, #2]
  46a44c:	cmp	w0, #0x55
  46a450:	b.ne	46a3d8 <_obstack_memory_used@@Base+0x8f90>  // b.any
  46a454:	add	x24, x20, #0x3
  46a458:	cmp	x21, x24
  46a45c:	b.ls	46a3d8 <_obstack_memory_used@@Base+0x8f90>  // b.plast
  46a460:	mov	x2, #0x0                   	// #0
  46a464:	b	46a480 <_obstack_memory_used@@Base+0x9038>
  46a468:	mov	w0, w1
  46a46c:	sxtw	x0, w0
  46a470:	add	x24, x24, #0x1
  46a474:	add	x2, x0, x2, lsl #4
  46a478:	cmp	x21, x24
  46a47c:	b.eq	46a3d8 <_obstack_memory_used@@Base+0x8f90>  // b.none
  46a480:	ldrb	w0, [x24]
  46a484:	sub	w1, w0, #0x30
  46a488:	and	w3, w1, #0xff
  46a48c:	cmp	w3, #0x9
  46a490:	b.ls	46a468 <_obstack_memory_used@@Base+0x9020>  // b.plast
  46a494:	sub	w1, w0, #0x41
  46a498:	and	w1, w1, #0xff
  46a49c:	cmp	w1, #0x5
  46a4a0:	b.hi	46b4a4 <_obstack_memory_used@@Base+0xa05c>  // b.pmore
  46a4a4:	sub	w0, w0, #0x37
  46a4a8:	b	46a46c <_obstack_memory_used@@Base+0x9024>
  46a4ac:	add	x1, x20, #0x8
  46a4b0:	mov	x0, x19
  46a4b4:	bl	464538 <_obstack_memory_used@@Base+0x30f0>
  46a4b8:	mov	x2, x0
  46a4bc:	cbz	x0, 467f20 <_obstack_memory_used@@Base+0x6ad8>
  46a4c0:	ldr	w1, [x0]
  46a4c4:	cmp	w1, #0x2f
  46a4c8:	b.eq	46b520 <_obstack_memory_used@@Base+0xa0d8>  // b.none
  46a4cc:	ldr	x20, [x19, #288]
  46a4d0:	mov	w1, w21
  46a4d4:	mov	x0, x19
  46a4d8:	ldr	x3, [x20]
  46a4dc:	str	x3, [x19, #288]
  46a4e0:	bl	46bca0 <_obstack_memory_used@@Base+0xa858>
  46a4e4:	ldp	x21, x22, [sp, #32]
  46a4e8:	ldp	x23, x24, [sp, #48]
  46a4ec:	str	x20, [x19, #288]
  46a4f0:	b	467ef4 <_obstack_memory_used@@Base+0x6aac>
  46a4f4:	ldr	x2, [x20, #8]
  46a4f8:	adrp	x1, 473000 <_obstack_memory_used@@Base+0x11bb8>
  46a4fc:	add	x1, x1, #0x1f8
  46a500:	add	x20, sp, #0x60
  46a504:	add	w2, w2, #0x1
  46a508:	mov	x0, x20
  46a50c:	bl	4025b0 <sprintf@plt>
  46a510:	mov	x0, x20
  46a514:	bl	4024f0 <strlen@plt>
  46a518:	cbz	x0, 46b91c <_obstack_memory_used@@Base+0xa4d4>
  46a51c:	add	x22, x20, x0
  46a520:	ldr	x1, [x19, #256]
  46a524:	b	46a548 <_obstack_memory_used@@Base+0x9100>
  46a528:	mov	x0, x1
  46a52c:	add	x1, x1, #0x1
  46a530:	str	x1, [x19, #256]
  46a534:	add	x20, x20, #0x1
  46a538:	strb	w21, [x19, x0]
  46a53c:	cmp	x22, x20
  46a540:	strb	w21, [x19, #264]
  46a544:	b.eq	46a7e4 <_obstack_memory_used@@Base+0x939c>  // b.none
  46a548:	ldrb	w21, [x20]
  46a54c:	cmp	x1, #0xff
  46a550:	b.ne	46a528 <_obstack_memory_used@@Base+0x90e0>  // b.any
  46a554:	ldp	x3, x2, [x19, #272]
  46a558:	strb	wzr, [x19, #255]
  46a55c:	mov	x0, x19
  46a560:	blr	x3
  46a564:	ldr	x2, [x19, #320]
  46a568:	mov	x1, #0x1                   	// #1
  46a56c:	mov	x0, #0x0                   	// #0
  46a570:	add	x2, x2, x1
  46a574:	str	x2, [x19, #320]
  46a578:	b	46a530 <_obstack_memory_used@@Base+0x90e8>
  46a57c:	adrp	x20, 482000 <_obstack_memory_used@@Base+0x20bb8>
  46a580:	add	x20, x20, #0x378
  46a584:	add	x22, x20, #0x4
  46a588:	mov	w21, #0x74                  	// #116
  46a58c:	b	46a5b4 <_obstack_memory_used@@Base+0x916c>
  46a590:	mov	x0, x1
  46a594:	add	x1, x1, #0x1
  46a598:	str	x1, [x19, #256]
  46a59c:	add	x20, x20, #0x1
  46a5a0:	strb	w21, [x19, x0]
  46a5a4:	cmp	x20, x22
  46a5a8:	strb	w21, [x19, #264]
  46a5ac:	b.eq	46a5e4 <_obstack_memory_used@@Base+0x919c>  // b.none
  46a5b0:	ldrb	w21, [x20]
  46a5b4:	cmp	x1, #0xff
  46a5b8:	b.ne	46a590 <_obstack_memory_used@@Base+0x9148>  // b.any
  46a5bc:	ldp	x3, x2, [x19, #272]
  46a5c0:	strb	wzr, [x19, #255]
  46a5c4:	mov	x0, x19
  46a5c8:	blr	x3
  46a5cc:	ldr	x2, [x19, #320]
  46a5d0:	mov	x1, #0x1                   	// #1
  46a5d4:	mov	x0, #0x0                   	// #0
  46a5d8:	add	x2, x2, x1
  46a5dc:	str	x2, [x19, #320]
  46a5e0:	b	46a598 <_obstack_memory_used@@Base+0x9150>
  46a5e4:	ldp	x21, x22, [sp, #32]
  46a5e8:	ldp	x23, x24, [sp, #48]
  46a5ec:	b	467ef4 <_obstack_memory_used@@Base+0x6aac>
  46a5f0:	mov	w2, w23
  46a5f4:	adrp	x1, 473000 <_obstack_memory_used@@Base+0x11bb8>
  46a5f8:	add	x1, x1, #0x1f8
  46a5fc:	add	x20, sp, #0x60
  46a600:	mov	x0, x20
  46a604:	bl	4025b0 <sprintf@plt>
  46a608:	mov	x0, x20
  46a60c:	bl	4024f0 <strlen@plt>
  46a610:	ldr	x1, [x19, #256]
  46a614:	cbz	x0, 46a674 <_obstack_memory_used@@Base+0x922c>
  46a618:	add	x22, x20, x0
  46a61c:	b	46a640 <_obstack_memory_used@@Base+0x91f8>
  46a620:	mov	x0, x1
  46a624:	add	x1, x1, #0x1
  46a628:	str	x1, [x19, #256]
  46a62c:	add	x20, x20, #0x1
  46a630:	strb	w21, [x19, x0]
  46a634:	cmp	x20, x22
  46a638:	strb	w21, [x19, #264]
  46a63c:	b.eq	46a674 <_obstack_memory_used@@Base+0x922c>  // b.none
  46a640:	ldrb	w21, [x20]
  46a644:	cmp	x1, #0xff
  46a648:	b.ne	46a620 <_obstack_memory_used@@Base+0x91d8>  // b.any
  46a64c:	ldp	x3, x2, [x19, #272]
  46a650:	strb	wzr, [x19, #255]
  46a654:	mov	x0, x19
  46a658:	blr	x3
  46a65c:	ldr	x2, [x19, #320]
  46a660:	mov	x1, #0x1                   	// #1
  46a664:	mov	x0, #0x0                   	// #0
  46a668:	add	x2, x2, x1
  46a66c:	str	x2, [x19, #320]
  46a670:	b	46a628 <_obstack_memory_used@@Base+0x91e0>
  46a674:	add	x0, x1, #0x1
  46a678:	cmp	x1, #0xff
  46a67c:	b.ne	46a6a4 <_obstack_memory_used@@Base+0x925c>  // b.any
  46a680:	ldp	x3, x2, [x19, #272]
  46a684:	strb	wzr, [x19, #255]
  46a688:	mov	x0, x19
  46a68c:	blr	x3
  46a690:	ldr	x2, [x19, #320]
  46a694:	mov	x0, #0x1                   	// #1
  46a698:	mov	x1, #0x0                   	// #0
  46a69c:	add	x2, x2, x0
  46a6a0:	str	x2, [x19, #320]
  46a6a4:	str	x0, [x19, #256]
  46a6a8:	mov	w0, #0x7d                  	// #125
  46a6ac:	strb	w0, [x19, x1]
  46a6b0:	strb	w0, [x19, #264]
  46a6b4:	ldp	x21, x22, [sp, #32]
  46a6b8:	ldp	x23, x24, [sp, #48]
  46a6bc:	b	467ef4 <_obstack_memory_used@@Base+0x6aac>
  46a6c0:	adrp	x20, 482000 <_obstack_memory_used@@Base+0x20bb8>
  46a6c4:	add	x20, x20, #0x328
  46a6c8:	add	x22, x20, #0x6
  46a6cc:	mov	w21, #0x5f                  	// #95
  46a6d0:	b	46a6f8 <_obstack_memory_used@@Base+0x92b0>
  46a6d4:	mov	x0, x1
  46a6d8:	add	x1, x1, #0x1
  46a6dc:	str	x1, [x19, #256]
  46a6e0:	add	x20, x20, #0x1
  46a6e4:	strb	w21, [x19, x0]
  46a6e8:	cmp	x20, x22
  46a6ec:	strb	w21, [x19, #264]
  46a6f0:	b.eq	46a728 <_obstack_memory_used@@Base+0x92e0>  // b.none
  46a6f4:	ldrb	w21, [x20]
  46a6f8:	cmp	x1, #0xff
  46a6fc:	b.ne	46a6d4 <_obstack_memory_used@@Base+0x928c>  // b.any
  46a700:	ldp	x3, x2, [x19, #272]
  46a704:	strb	wzr, [x19, #255]
  46a708:	mov	x0, x19
  46a70c:	blr	x3
  46a710:	ldr	x2, [x19, #320]
  46a714:	mov	x1, #0x1                   	// #1
  46a718:	mov	x0, #0x0                   	// #0
  46a71c:	add	x2, x2, x1
  46a720:	str	x2, [x19, #320]
  46a724:	b	46a6dc <_obstack_memory_used@@Base+0x9294>
  46a728:	ldp	x21, x22, [sp, #32]
  46a72c:	ldp	x23, x24, [sp, #48]
  46a730:	b	467ef4 <_obstack_memory_used@@Base+0x6aac>
  46a734:	ldp	x21, x22, [sp, #32]
  46a738:	ldp	x23, x24, [sp, #48]
  46a73c:	b	467ef4 <_obstack_memory_used@@Base+0x6aac>
  46a740:	ldrsw	x22, [x0, #24]
  46a744:	ldr	x20, [x0, #16]
  46a748:	cbz	x22, 46b7fc <_obstack_memory_used@@Base+0xa3b4>
  46a74c:	add	x22, x20, x22
  46a750:	ldr	x1, [x19, #256]
  46a754:	b	46a778 <_obstack_memory_used@@Base+0x9330>
  46a758:	mov	x0, x1
  46a75c:	add	x1, x1, #0x1
  46a760:	str	x1, [x19, #256]
  46a764:	add	x20, x20, #0x1
  46a768:	strb	w21, [x19, x0]
  46a76c:	cmp	x20, x22
  46a770:	strb	w21, [x19, #264]
  46a774:	b.eq	46a7c0 <_obstack_memory_used@@Base+0x9378>  // b.none
  46a778:	ldrb	w21, [x20]
  46a77c:	cmp	x1, #0xff
  46a780:	b.ne	46a758 <_obstack_memory_used@@Base+0x9310>  // b.any
  46a784:	ldp	x3, x2, [x19, #272]
  46a788:	strb	wzr, [x19, #255]
  46a78c:	mov	x0, x19
  46a790:	blr	x3
  46a794:	ldr	x2, [x19, #320]
  46a798:	mov	x1, #0x1                   	// #1
  46a79c:	mov	x0, #0x0                   	// #0
  46a7a0:	add	x2, x2, x1
  46a7a4:	str	x2, [x19, #320]
  46a7a8:	b	46a760 <_obstack_memory_used@@Base+0x9318>
  46a7ac:	ldr	x1, [x19, #256]
  46a7b0:	b	4689c8 <_obstack_memory_used@@Base+0x7580>
  46a7b4:	ldp	x21, x22, [sp, #32]
  46a7b8:	ldp	x23, x24, [sp, #48]
  46a7bc:	b	467ef4 <_obstack_memory_used@@Base+0x6aac>
  46a7c0:	ldp	x21, x22, [sp, #32]
  46a7c4:	ldp	x23, x24, [sp, #48]
  46a7c8:	b	467ef4 <_obstack_memory_used@@Base+0x6aac>
  46a7cc:	ldp	x21, x22, [sp, #32]
  46a7d0:	ldp	x23, x24, [sp, #48]
  46a7d4:	b	467ef4 <_obstack_memory_used@@Base+0x6aac>
  46a7d8:	ldp	x21, x22, [sp, #32]
  46a7dc:	ldp	x23, x24, [sp, #48]
  46a7e0:	b	467ef4 <_obstack_memory_used@@Base+0x6aac>
  46a7e4:	ldp	x21, x22, [sp, #32]
  46a7e8:	ldp	x23, x24, [sp, #48]
  46a7ec:	b	467ef4 <_obstack_memory_used@@Base+0x6aac>
  46a7f0:	ldr	x1, [x2, #8]
  46a7f4:	ldr	w22, [x1, #28]
  46a7f8:	cmp	w22, #0x6
  46a7fc:	b.hi	46a894 <_obstack_memory_used@@Base+0x944c>  // b.pmore
  46a800:	cbz	w22, 467fe4 <_obstack_memory_used@@Base+0x6b9c>
  46a804:	ldr	x1, [x20, #16]
  46a808:	ldr	w1, [x1]
  46a80c:	cbnz	w1, 467fe4 <_obstack_memory_used@@Base+0x6b9c>
  46a810:	cmp	w0, #0x3e
  46a814:	b.eq	46bb98 <_obstack_memory_used@@Base+0xa750>  // b.none
  46a818:	ldr	x2, [x20, #16]
  46a81c:	mov	w1, w21
  46a820:	mov	x0, x19
  46a824:	bl	46bca0 <_obstack_memory_used@@Base+0xa858>
  46a828:	cmp	w22, #0x4
  46a82c:	b.eq	46bb78 <_obstack_memory_used@@Base+0xa730>  // b.none
  46a830:	b.hi	46ba3c <_obstack_memory_used@@Base+0xa5f4>  // b.pmore
  46a834:	cmp	w22, #0x2
  46a838:	b.eq	46bb28 <_obstack_memory_used@@Base+0xa6e0>  // b.none
  46a83c:	cmp	w22, #0x3
  46a840:	b.ne	46bc70 <_obstack_memory_used@@Base+0xa828>  // b.any
  46a844:	ldr	x1, [x19, #256]
  46a848:	cmp	x1, #0xff
  46a84c:	b.ne	46a874 <_obstack_memory_used@@Base+0x942c>  // b.any
  46a850:	ldp	x3, x2, [x19, #272]
  46a854:	strb	wzr, [x19, #255]
  46a858:	mov	x0, x19
  46a85c:	blr	x3
  46a860:	str	xzr, [x19, #256]
  46a864:	ldr	x0, [x19, #320]
  46a868:	mov	x1, #0x0                   	// #0
  46a86c:	add	x0, x0, #0x1
  46a870:	str	x0, [x19, #320]
  46a874:	add	x0, x1, #0x1
  46a878:	str	x0, [x19, #256]
  46a87c:	mov	w0, #0x6c                  	// #108
  46a880:	strb	w0, [x19, x1]
  46a884:	strb	w0, [x19, #264]
  46a888:	ldp	x21, x22, [sp, #32]
  46a88c:	ldp	x23, x24, [sp, #48]
  46a890:	b	467ef4 <_obstack_memory_used@@Base+0x6aac>
  46a894:	cmp	w22, #0x7
  46a898:	b.ne	467fe4 <_obstack_memory_used@@Base+0x6b9c>  // b.any
  46a89c:	ldr	x1, [x20, #16]
  46a8a0:	ldr	w3, [x1]
  46a8a4:	cbnz	w3, 467fe4 <_obstack_memory_used@@Base+0x6b9c>
  46a8a8:	ldr	w3, [x1, #16]
  46a8ac:	cmp	w0, #0x3d
  46a8b0:	ccmp	w3, #0x1, #0x0, eq  // eq = none
  46a8b4:	b.ne	467fe4 <_obstack_memory_used@@Base+0x6b9c>  // b.any
  46a8b8:	ldr	x0, [x1, #8]
  46a8bc:	ldrb	w0, [x0]
  46a8c0:	cmp	w0, #0x30
  46a8c4:	b.eq	46bc7c <_obstack_memory_used@@Base+0xa834>  // b.none
  46a8c8:	cmp	w0, #0x31
  46a8cc:	b.ne	467fe4 <_obstack_memory_used@@Base+0x6b9c>  // b.any
  46a8d0:	mov	x0, x19
  46a8d4:	adrp	x1, 47c000 <_obstack_memory_used@@Base+0x1abb8>
  46a8d8:	mov	x2, #0x4                   	// #4
  46a8dc:	add	x1, x1, #0x938
  46a8e0:	bl	463c18 <_obstack_memory_used@@Base+0x27d0>
  46a8e4:	ldp	x21, x22, [sp, #32]
  46a8e8:	ldp	x23, x24, [sp, #48]
  46a8ec:	b	467ef4 <_obstack_memory_used@@Base+0x6aac>
  46a8f0:	ldp	x3, x2, [x19, #272]
  46a8f4:	strb	wzr, [x19, #255]
  46a8f8:	mov	x0, x19
  46a8fc:	blr	x3
  46a900:	ldr	x0, [x19, #320]
  46a904:	mov	x1, #0x0                   	// #0
  46a908:	add	x0, x0, #0x1
  46a90c:	str	x0, [x19, #320]
  46a910:	b	46a098 <_obstack_memory_used@@Base+0x8c50>
  46a914:	ldr	x0, [x22, #8]
  46a918:	ldr	x23, [x0]
  46a91c:	ldrb	w0, [x23]
  46a920:	subs	w1, w0, #0x61
  46a924:	b.ne	46a938 <_obstack_memory_used@@Base+0x94f0>  // b.any
  46a928:	ldrb	w1, [x23, #1]
  46a92c:	subs	w1, w1, #0x64
  46a930:	b.ne	46a938 <_obstack_memory_used@@Base+0x94f0>  // b.any
  46a934:	ldrb	w1, [x23, #2]
  46a938:	ldr	w2, [x20]
  46a93c:	cbnz	w1, 46a948 <_obstack_memory_used@@Base+0x9500>
  46a940:	cmp	w2, #0x3
  46a944:	b.eq	46b940 <_obstack_memory_used@@Base+0xa4f8>  // b.none
  46a948:	cmp	w2, #0x39
  46a94c:	b.eq	46b9e8 <_obstack_memory_used@@Base+0xa5a0>  // b.none
  46a950:	cmp	w0, #0x73
  46a954:	b.ne	46aa24 <_obstack_memory_used@@Base+0x95dc>  // b.any
  46a958:	ldrb	w1, [x23, #1]
  46a95c:	cmp	w1, #0x5a
  46a960:	b.ne	46aa70 <_obstack_memory_used@@Base+0x9628>  // b.any
  46a964:	ldrb	w3, [x23, #2]
  46a968:	cbnz	w3, 46aa70 <_obstack_memory_used@@Base+0x9628>
  46a96c:	mov	x1, x20
  46a970:	mov	x0, x19
  46a974:	bl	464568 <_obstack_memory_used@@Base+0x3120>
  46a978:	cbnz	x0, 46a994 <_obstack_memory_used@@Base+0x954c>
  46a97c:	b	46a9a0 <_obstack_memory_used@@Base+0x9558>
  46a980:	ldr	x1, [x0, #8]
  46a984:	cbz	x1, 46a9a0 <_obstack_memory_used@@Base+0x9558>
  46a988:	ldr	x0, [x0, #16]
  46a98c:	add	w3, w3, #0x1
  46a990:	cbz	x0, 46a9a0 <_obstack_memory_used@@Base+0x9558>
  46a994:	ldr	w1, [x0]
  46a998:	cmp	w1, #0x2f
  46a99c:	b.eq	46a980 <_obstack_memory_used@@Base+0x9538>  // b.none
  46a9a0:	mov	w2, w3
  46a9a4:	adrp	x1, 473000 <_obstack_memory_used@@Base+0x11bb8>
  46a9a8:	add	x1, x1, #0x1f8
  46a9ac:	add	x20, sp, #0x60
  46a9b0:	mov	x0, x20
  46a9b4:	bl	4025b0 <sprintf@plt>
  46a9b8:	mov	x0, x20
  46a9bc:	bl	4024f0 <strlen@plt>
  46a9c0:	cbz	x0, 46baf4 <_obstack_memory_used@@Base+0xa6ac>
  46a9c4:	add	x22, x20, x0
  46a9c8:	ldr	x1, [x19, #256]
  46a9cc:	b	46a9f0 <_obstack_memory_used@@Base+0x95a8>
  46a9d0:	mov	x0, x1
  46a9d4:	add	x1, x1, #0x1
  46a9d8:	str	x1, [x19, #256]
  46a9dc:	add	x20, x20, #0x1
  46a9e0:	strb	w21, [x19, x0]
  46a9e4:	cmp	x20, x22
  46a9e8:	strb	w21, [x19, #264]
  46a9ec:	b.eq	46b8f8 <_obstack_memory_used@@Base+0xa4b0>  // b.none
  46a9f0:	ldrb	w21, [x20]
  46a9f4:	cmp	x1, #0xff
  46a9f8:	b.ne	46a9d0 <_obstack_memory_used@@Base+0x9588>  // b.any
  46a9fc:	ldp	x3, x2, [x19, #272]
  46aa00:	strb	wzr, [x19, #255]
  46aa04:	mov	x0, x19
  46aa08:	blr	x3
  46aa0c:	ldr	x2, [x19, #320]
  46aa10:	mov	x1, #0x1                   	// #1
  46aa14:	mov	x0, #0x0                   	// #0
  46aa18:	add	x2, x2, x1
  46aa1c:	str	x2, [x19, #320]
  46aa20:	b	46a9d8 <_obstack_memory_used@@Base+0x9590>
  46aa24:	mov	x0, x19
  46aa28:	mov	x2, x22
  46aa2c:	mov	w1, w21
  46aa30:	bl	46ce40 <_obstack_memory_used@@Base+0xb9f8>
  46aa34:	ldrb	w0, [x23]
  46aa38:	cmp	w0, #0x67
  46aa3c:	b.ne	46ab00 <_obstack_memory_used@@Base+0x96b8>  // b.any
  46aa40:	ldrb	w1, [x23, #1]
  46aa44:	cmp	w1, #0x73
  46aa48:	b.ne	46ab00 <_obstack_memory_used@@Base+0x96b8>  // b.any
  46aa4c:	ldrb	w1, [x23, #2]
  46aa50:	cbnz	w1, 46ab00 <_obstack_memory_used@@Base+0x96b8>
  46aa54:	mov	w1, w21
  46aa58:	mov	x2, x20
  46aa5c:	mov	x0, x19
  46aa60:	bl	46bca0 <_obstack_memory_used@@Base+0xa858>
  46aa64:	ldp	x21, x22, [sp, #32]
  46aa68:	ldp	x23, x24, [sp, #48]
  46aa6c:	b	467ef4 <_obstack_memory_used@@Base+0x6aac>
  46aa70:	cmp	w0, #0x73
  46aa74:	b.ne	46aa24 <_obstack_memory_used@@Base+0x95dc>  // b.any
  46aa78:	ldrb	w0, [x23, #1]
  46aa7c:	cmp	w0, #0x50
  46aa80:	b.ne	46aa24 <_obstack_memory_used@@Base+0x95dc>  // b.any
  46aa84:	ldrb	w0, [x23, #2]
  46aa88:	mov	w3, #0x0                   	// #0
  46aa8c:	cbz	w0, 46aaa0 <_obstack_memory_used@@Base+0x9658>
  46aa90:	b	46aa24 <_obstack_memory_used@@Base+0x95dc>
  46aa94:	add	w3, w3, #0x1
  46aa98:	ldr	x20, [x20, #16]
  46aa9c:	cbz	x20, 46b564 <_obstack_memory_used@@Base+0xa11c>
  46aaa0:	ldr	w0, [x20]
  46aaa4:	cmp	w0, #0x2f
  46aaa8:	b.ne	46b564 <_obstack_memory_used@@Base+0xa11c>  // b.any
  46aaac:	ldr	x0, [x20, #8]
  46aab0:	cbz	x0, 46b564 <_obstack_memory_used@@Base+0xa11c>
  46aab4:	ldr	w1, [x0]
  46aab8:	cmp	w1, #0x4b
  46aabc:	b.ne	46aa94 <_obstack_memory_used@@Base+0x964c>  // b.any
  46aac0:	ldr	x1, [x0, #8]
  46aac4:	mov	x0, x19
  46aac8:	bl	464568 <_obstack_memory_used@@Base+0x3120>
  46aacc:	mov	w1, #0x0                   	// #0
  46aad0:	cbnz	x0, 46aaec <_obstack_memory_used@@Base+0x96a4>
  46aad4:	b	46aaf8 <_obstack_memory_used@@Base+0x96b0>
  46aad8:	ldr	x2, [x0, #8]
  46aadc:	cbz	x2, 46aaf8 <_obstack_memory_used@@Base+0x96b0>
  46aae0:	ldr	x0, [x0, #16]
  46aae4:	add	w1, w1, #0x1
  46aae8:	cbz	x0, 46aaf8 <_obstack_memory_used@@Base+0x96b0>
  46aaec:	ldr	w2, [x0]
  46aaf0:	cmp	w2, #0x2f
  46aaf4:	b.eq	46aad8 <_obstack_memory_used@@Base+0x9690>  // b.none
  46aaf8:	add	w3, w3, w1
  46aafc:	b	46aa98 <_obstack_memory_used@@Base+0x9650>
  46ab00:	cmp	w0, #0x73
  46ab04:	b.ne	469a94 <_obstack_memory_used@@Base+0x864c>  // b.any
  46ab08:	ldrb	w0, [x23, #1]
  46ab0c:	cmp	w0, #0x74
  46ab10:	b.ne	469a94 <_obstack_memory_used@@Base+0x864c>  // b.any
  46ab14:	ldrb	w0, [x23, #2]
  46ab18:	cbnz	w0, 469a94 <_obstack_memory_used@@Base+0x864c>
  46ab1c:	ldr	x1, [x19, #256]
  46ab20:	cmp	x1, #0xff
  46ab24:	b.ne	46ab48 <_obstack_memory_used@@Base+0x9700>  // b.any
  46ab28:	ldp	x3, x2, [x19, #272]
  46ab2c:	strb	wzr, [x19, #255]
  46ab30:	mov	x0, x19
  46ab34:	blr	x3
  46ab38:	ldr	x0, [x19, #320]
  46ab3c:	mov	x1, #0x0                   	// #0
  46ab40:	add	x0, x0, #0x1
  46ab44:	str	x0, [x19, #320]
  46ab48:	add	x0, x1, #0x1
  46ab4c:	str	x0, [x19, #256]
  46ab50:	mov	w0, #0x28                  	// #40
  46ab54:	strb	w0, [x19, x1]
  46ab58:	strb	w0, [x19, #264]
  46ab5c:	mov	w1, w21
  46ab60:	mov	x2, x20
  46ab64:	mov	x0, x19
  46ab68:	bl	46bca0 <_obstack_memory_used@@Base+0xa858>
  46ab6c:	ldr	x1, [x19, #256]
  46ab70:	cmp	x1, #0xff
  46ab74:	b.ne	46ab98 <_obstack_memory_used@@Base+0x9750>  // b.any
  46ab78:	ldp	x3, x2, [x19, #272]
  46ab7c:	strb	wzr, [x19, #255]
  46ab80:	mov	x0, x19
  46ab84:	blr	x3
  46ab88:	ldr	x0, [x19, #320]
  46ab8c:	mov	x1, #0x0                   	// #0
  46ab90:	add	x0, x0, #0x1
  46ab94:	str	x0, [x19, #320]
  46ab98:	add	x0, x1, #0x1
  46ab9c:	str	x0, [x19, #256]
  46aba0:	mov	w0, #0x29                  	// #41
  46aba4:	strb	w0, [x19, x1]
  46aba8:	strb	w0, [x19, #264]
  46abac:	ldp	x21, x22, [sp, #32]
  46abb0:	ldp	x23, x24, [sp, #48]
  46abb4:	b	467ef4 <_obstack_memory_used@@Base+0x6aac>
  46abb8:	ldr	x2, [x2, #8]
  46abbc:	mov	x0, x19
  46abc0:	mov	w1, w21
  46abc4:	bl	46bca0 <_obstack_memory_used@@Base+0xa858>
  46abc8:	ldr	x0, [x19, #368]
  46abcc:	cbz	x0, 46abd8 <_obstack_memory_used@@Base+0x9790>
  46abd0:	ldr	x0, [sp, #96]
  46abd4:	str	x0, [x19, #288]
  46abd8:	ldr	x1, [x19, #256]
  46abdc:	ldrb	w2, [x19, #264]
  46abe0:	mov	x0, x1
  46abe4:	cmp	w2, #0x3c
  46abe8:	b.eq	46b640 <_obstack_memory_used@@Base+0xa1f8>  // b.none
  46abec:	add	x1, x0, #0x1
  46abf0:	cmp	x0, #0xff
  46abf4:	b.ne	46ac20 <_obstack_memory_used@@Base+0x97d8>  // b.any
  46abf8:	ldp	x3, x2, [x19, #272]
  46abfc:	strb	wzr, [x19, #255]
  46ac00:	mov	x1, x0
  46ac04:	mov	x0, x19
  46ac08:	blr	x3
  46ac0c:	ldr	x2, [x19, #320]
  46ac10:	mov	x1, #0x1                   	// #1
  46ac14:	mov	x0, #0x0                   	// #0
  46ac18:	add	x2, x2, x1
  46ac1c:	str	x2, [x19, #320]
  46ac20:	str	x1, [x19, #256]
  46ac24:	mov	w2, #0x3c                  	// #60
  46ac28:	strb	w2, [x19, x0]
  46ac2c:	mov	w1, w21
  46ac30:	strb	w2, [x19, #264]
  46ac34:	mov	x0, x19
  46ac38:	ldr	x2, [x20, #8]
  46ac3c:	ldr	x2, [x2, #16]
  46ac40:	bl	46bca0 <_obstack_memory_used@@Base+0xa858>
  46ac44:	ldrb	w0, [x19, #264]
  46ac48:	cmp	w0, #0x3e
  46ac4c:	b.eq	46b684 <_obstack_memory_used@@Base+0xa23c>  // b.none
  46ac50:	ldr	x0, [x19, #256]
  46ac54:	add	x1, x0, #0x1
  46ac58:	cmp	x0, #0xff
  46ac5c:	b.ne	46ac88 <_obstack_memory_used@@Base+0x9840>  // b.any
  46ac60:	ldp	x3, x2, [x19, #272]
  46ac64:	strb	wzr, [x19, #255]
  46ac68:	mov	x1, x0
  46ac6c:	mov	x0, x19
  46ac70:	blr	x3
  46ac74:	ldr	x2, [x19, #320]
  46ac78:	mov	x1, #0x1                   	// #1
  46ac7c:	mov	x0, #0x0                   	// #0
  46ac80:	add	x2, x2, x1
  46ac84:	str	x2, [x19, #320]
  46ac88:	str	x1, [x19, #256]
  46ac8c:	mov	w1, #0x3e                  	// #62
  46ac90:	strb	w1, [x19, x0]
  46ac94:	strb	w1, [x19, #264]
  46ac98:	ldp	x21, x22, [sp, #32]
  46ac9c:	ldp	x23, x24, [sp, #48]
  46aca0:	b	467ef4 <_obstack_memory_used@@Base+0x6aac>
  46aca4:	mov	x2, x20
  46aca8:	mov	w1, w21
  46acac:	mov	x0, x19
  46acb0:	bl	46bd38 <_obstack_memory_used@@Base+0xa8f0>
  46acb4:	b	468198 <_obstack_memory_used@@Base+0x6d50>
  46acb8:	adrp	x24, 482000 <_obstack_memory_used@@Base+0x20bb8>
  46acbc:	add	x24, x24, #0x318
  46acc0:	adrp	x22, 482000 <_obstack_memory_used@@Base+0x20bb8>
  46acc4:	add	x24, x24, #0x5
  46acc8:	add	x22, x22, #0x319
  46accc:	mov	w23, #0x5f                  	// #95
  46acd0:	ldr	x1, [x19, #256]
  46acd4:	b	46acf8 <_obstack_memory_used@@Base+0x98b0>
  46acd8:	mov	x0, x1
  46acdc:	add	x1, x1, #0x1
  46ace0:	str	x1, [x19, #256]
  46ace4:	cmp	x24, x22
  46ace8:	strb	w23, [x19, x0]
  46acec:	strb	w23, [x19, #264]
  46acf0:	b.eq	468958 <_obstack_memory_used@@Base+0x7510>  // b.none
  46acf4:	ldrb	w23, [x22], #1
  46acf8:	cmp	x1, #0xff
  46acfc:	b.ne	46acd8 <_obstack_memory_used@@Base+0x9890>  // b.any
  46ad00:	ldp	x3, x2, [x19, #272]
  46ad04:	strb	wzr, [x19, #255]
  46ad08:	mov	x0, x19
  46ad0c:	blr	x3
  46ad10:	ldr	x2, [x19, #320]
  46ad14:	mov	x1, #0x1                   	// #1
  46ad18:	mov	x0, #0x0                   	// #0
  46ad1c:	add	x2, x2, x1
  46ad20:	str	x2, [x19, #320]
  46ad24:	b	46ace0 <_obstack_memory_used@@Base+0x9898>
  46ad28:	mov	x23, #0x0                   	// #0
  46ad2c:	mov	w22, #0x3a                  	// #58
  46ad30:	ldr	x1, [x19, #256]
  46ad34:	b	46ad54 <_obstack_memory_used@@Base+0x990c>
  46ad38:	mov	x0, x1
  46ad3c:	add	x1, x1, #0x1
  46ad40:	str	x1, [x19, #256]
  46ad44:	strb	w22, [x19, x0]
  46ad48:	strb	w22, [x19, #264]
  46ad4c:	cbnz	x23, 46813c <_obstack_memory_used@@Base+0x6cf4>
  46ad50:	mov	x23, #0x1                   	// #1
  46ad54:	cmp	x1, #0xff
  46ad58:	b.ne	46ad38 <_obstack_memory_used@@Base+0x98f0>  // b.any
  46ad5c:	ldp	x3, x2, [x19, #272]
  46ad60:	strb	wzr, [x19, #255]
  46ad64:	mov	x0, x19
  46ad68:	blr	x3
  46ad6c:	ldr	x2, [x19, #320]
  46ad70:	mov	x1, #0x1                   	// #1
  46ad74:	mov	x0, #0x0                   	// #0
  46ad78:	add	x2, x2, x1
  46ad7c:	str	x2, [x19, #320]
  46ad80:	b	46ad40 <_obstack_memory_used@@Base+0x98f8>
  46ad84:	ldr	x1, [x19, #256]
  46ad88:	cmp	x1, #0xff
  46ad8c:	b.ne	46adb0 <_obstack_memory_used@@Base+0x9968>  // b.any
  46ad90:	ldp	x3, x2, [x19, #272]
  46ad94:	strb	wzr, [x19, #255]
  46ad98:	mov	x0, x19
  46ad9c:	blr	x3
  46ada0:	ldr	x0, [x19, #320]
  46ada4:	mov	x1, #0x0                   	// #0
  46ada8:	add	x0, x0, #0x1
  46adac:	str	x0, [x19, #320]
  46adb0:	add	x0, x1, #0x1
  46adb4:	str	x0, [x19, #256]
  46adb8:	mov	w0, #0x5b                  	// #91
  46adbc:	strb	w0, [x19, x1]
  46adc0:	strb	w0, [x19, #264]
  46adc4:	mov	w1, w21
  46adc8:	mov	x0, x19
  46adcc:	ldr	x2, [x20, #16]
  46add0:	bl	46bca0 <_obstack_memory_used@@Base+0xa858>
  46add4:	ldr	x1, [x19, #256]
  46add8:	cmp	x1, #0xff
  46addc:	b.ne	46ae00 <_obstack_memory_used@@Base+0x99b8>  // b.any
  46ade0:	ldp	x3, x2, [x19, #272]
  46ade4:	strb	wzr, [x19, #255]
  46ade8:	mov	x0, x19
  46adec:	blr	x3
  46adf0:	ldr	x0, [x19, #320]
  46adf4:	mov	x1, #0x0                   	// #0
  46adf8:	add	x0, x0, #0x1
  46adfc:	str	x0, [x19, #320]
  46ae00:	add	x0, x1, #0x1
  46ae04:	str	x0, [x19, #256]
  46ae08:	mov	w0, #0x5d                  	// #93
  46ae0c:	strb	w0, [x19, x1]
  46ae10:	strb	w0, [x19, #264]
  46ae14:	ldp	x21, x22, [sp, #32]
  46ae18:	ldp	x23, x24, [sp, #48]
  46ae1c:	b	467ef4 <_obstack_memory_used@@Base+0x6aac>
  46ae20:	ldr	x0, [x19, #256]
  46ae24:	cmp	x0, #0xff
  46ae28:	b.ne	46ae50 <_obstack_memory_used@@Base+0x9a08>  // b.any
  46ae2c:	ldp	x3, x2, [x19, #272]
  46ae30:	strb	wzr, [x19, #255]
  46ae34:	mov	x1, x0
  46ae38:	mov	x0, x19
  46ae3c:	blr	x3
  46ae40:	ldr	x1, [x19, #320]
  46ae44:	mov	x0, #0x0                   	// #0
  46ae48:	add	x1, x1, #0x1
  46ae4c:	str	x1, [x19, #320]
  46ae50:	add	x1, x0, #0x1
  46ae54:	str	x1, [x19, #256]
  46ae58:	mov	w2, #0x20                  	// #32
  46ae5c:	strb	w2, [x19, x0]
  46ae60:	strb	w2, [x19, #264]
  46ae64:	b	469388 <_obstack_memory_used@@Base+0x7f40>
  46ae68:	ldr	x0, [x19, #256]
  46ae6c:	cmp	x0, #0xff
  46ae70:	b.ne	46ae98 <_obstack_memory_used@@Base+0x9a50>  // b.any
  46ae74:	ldp	x3, x2, [x19, #272]
  46ae78:	strb	wzr, [x19, #255]
  46ae7c:	mov	x1, x0
  46ae80:	mov	x0, x19
  46ae84:	blr	x3
  46ae88:	ldr	x1, [x19, #320]
  46ae8c:	mov	x0, #0x0                   	// #0
  46ae90:	add	x1, x1, #0x1
  46ae94:	str	x1, [x19, #320]
  46ae98:	add	x1, x0, #0x1
  46ae9c:	str	x1, [x19, #256]
  46aea0:	mov	w2, #0x20                  	// #32
  46aea4:	strb	w2, [x19, x0]
  46aea8:	strb	w2, [x19, #264]
  46aeac:	b	469328 <_obstack_memory_used@@Base+0x7ee0>
  46aeb0:	add	x2, x20, #0x10
  46aeb4:	mov	w1, w22
  46aeb8:	mov	x0, x19
  46aebc:	bl	46c538 <_obstack_memory_used@@Base+0xb0f0>
  46aec0:	ldr	x2, [x20, #8]
  46aec4:	cbz	x2, 46b6f0 <_obstack_memory_used@@Base+0xa2a8>
  46aec8:	mov	w1, w22
  46aecc:	mov	x0, x19
  46aed0:	bl	46bca0 <_obstack_memory_used@@Base+0xa858>
  46aed4:	ldp	x21, x22, [sp, #32]
  46aed8:	ldp	x23, x24, [sp, #48]
  46aedc:	b	467ef4 <_obstack_memory_used@@Base+0x6aac>
  46aee0:	ldp	x3, x2, [x19, #272]
  46aee4:	strb	wzr, [x19, #255]
  46aee8:	mov	x0, x19
  46aeec:	blr	x3
  46aef0:	ldr	x0, [x19, #320]
  46aef4:	mov	w1, #0x29                  	// #41
  46aef8:	strb	w1, [x19]
  46aefc:	strb	w1, [x19, #264]
  46af00:	mov	x1, #0x1                   	// #1
  46af04:	add	x0, x0, x1
  46af08:	str	x1, [x19, #256]
  46af0c:	str	x0, [x19, #320]
  46af10:	ldr	w0, [x20]
  46af14:	cmp	w0, #0x3e
  46af18:	b.ne	468064 <_obstack_memory_used@@Base+0x6c1c>  // b.any
  46af1c:	ldr	x1, [x19, #256]
  46af20:	mov	w0, #0x2d                  	// #45
  46af24:	add	x2, x1, #0x1
  46af28:	str	x2, [x19, #256]
  46af2c:	strb	w0, [x19, x1]
  46af30:	strb	w0, [x19, #264]
  46af34:	b	468064 <_obstack_memory_used@@Base+0x6c1c>
  46af38:	ldp	x21, x22, [sp, #32]
  46af3c:	ldp	x23, x24, [sp, #48]
  46af40:	ldp	x25, x26, [sp, #64]
  46af44:	str	x4, [x19, #296]
  46af48:	str	w1, [x19, #304]
  46af4c:	b	467ef4 <_obstack_memory_used@@Base+0x6aac>
  46af50:	ldp	x21, x22, [sp, #32]
  46af54:	ldp	x23, x24, [sp, #48]
  46af58:	b	467ef4 <_obstack_memory_used@@Base+0x6aac>
  46af5c:	ldp	x21, x22, [sp, #32]
  46af60:	ldp	x23, x24, [sp, #48]
  46af64:	b	467ef4 <_obstack_memory_used@@Base+0x6aac>
  46af68:	mov	w22, #0x0                   	// #0
  46af6c:	b	4680c8 <_obstack_memory_used@@Base+0x6c80>
  46af70:	ldr	x0, [x19, #256]
  46af74:	cmp	x0, x22
  46af78:	b.eq	46b72c <_obstack_memory_used@@Base+0xa2e4>  // b.none
  46af7c:	ldp	x21, x22, [sp, #32]
  46af80:	ldp	x23, x24, [sp, #48]
  46af84:	b	467ef4 <_obstack_memory_used@@Base+0x6aac>
  46af88:	ldr	x2, [x20, #8]
  46af8c:	mov	w1, w21
  46af90:	mov	x0, x19
  46af94:	bl	46bca0 <_obstack_memory_used@@Base+0xa858>
  46af98:	ldp	x21, x22, [sp, #32]
  46af9c:	ldp	x23, x24, [sp, #48]
  46afa0:	b	467ef4 <_obstack_memory_used@@Base+0x6aac>
  46afa4:	cmp	x3, #0xff
  46afa8:	b.ne	46af1c <_obstack_memory_used@@Base+0x9ad4>  // b.any
  46afac:	ldp	x4, x2, [x19, #272]
  46afb0:	strb	wzr, [x19, #255]
  46afb4:	mov	x0, x19
  46afb8:	mov	x1, x3
  46afbc:	blr	x4
  46afc0:	str	xzr, [x19, #256]
  46afc4:	ldr	x0, [x19, #320]
  46afc8:	add	x0, x0, #0x1
  46afcc:	str	x0, [x19, #320]
  46afd0:	b	46af1c <_obstack_memory_used@@Base+0x9ad4>
  46afd4:	ldp	x21, x22, [sp, #32]
  46afd8:	ldp	x23, x24, [sp, #48]
  46afdc:	b	467ef4 <_obstack_memory_used@@Base+0x6aac>
  46afe0:	adrp	x24, 482000 <_obstack_memory_used@@Base+0x20bb8>
  46afe4:	add	x24, x24, #0x2b0
  46afe8:	adrp	x22, 482000 <_obstack_memory_used@@Base+0x20bb8>
  46afec:	add	x24, x24, #0xd
  46aff0:	add	x22, x22, #0x2b1
  46aff4:	mov	w20, #0x7b                  	// #123
  46aff8:	ldr	x1, [x19, #256]
  46affc:	b	46b020 <_obstack_memory_used@@Base+0x9bd8>
  46b000:	mov	x0, x1
  46b004:	add	x1, x1, #0x1
  46b008:	str	x1, [x19, #256]
  46b00c:	cmp	x24, x22
  46b010:	strb	w20, [x19, x0]
  46b014:	strb	w20, [x19, #264]
  46b018:	b.eq	46b050 <_obstack_memory_used@@Base+0x9c08>  // b.none
  46b01c:	ldrb	w20, [x22], #1
  46b020:	cmp	x1, #0xff
  46b024:	b.ne	46b000 <_obstack_memory_used@@Base+0x9bb8>  // b.any
  46b028:	ldp	x3, x2, [x19, #272]
  46b02c:	strb	wzr, [x19, #255]
  46b030:	mov	x0, x19
  46b034:	blr	x3
  46b038:	ldr	x2, [x19, #320]
  46b03c:	mov	x1, #0x1                   	// #1
  46b040:	mov	x0, #0x0                   	// #0
  46b044:	add	x2, x2, x1
  46b048:	str	x2, [x19, #320]
  46b04c:	b	46b008 <_obstack_memory_used@@Base+0x9bc0>
  46b050:	ldr	w2, [x23, #16]
  46b054:	adrp	x1, 473000 <_obstack_memory_used@@Base+0x11bb8>
  46b058:	add	x1, x1, #0x1f8
  46b05c:	add	x20, sp, #0x60
  46b060:	add	w2, w2, #0x1
  46b064:	mov	x0, x20
  46b068:	bl	4025b0 <sprintf@plt>
  46b06c:	mov	x0, x20
  46b070:	bl	4024f0 <strlen@plt>
  46b074:	ldr	x1, [x19, #256]
  46b078:	cbz	x0, 46b0d8 <_obstack_memory_used@@Base+0x9c90>
  46b07c:	add	x24, x20, x0
  46b080:	b	46b0a4 <_obstack_memory_used@@Base+0x9c5c>
  46b084:	mov	x0, x1
  46b088:	add	x1, x1, #0x1
  46b08c:	str	x1, [x19, #256]
  46b090:	add	x20, x20, #0x1
  46b094:	strb	w22, [x19, x0]
  46b098:	cmp	x24, x20
  46b09c:	strb	w22, [x19, #264]
  46b0a0:	b.eq	46b0d8 <_obstack_memory_used@@Base+0x9c90>  // b.none
  46b0a4:	ldrb	w22, [x20]
  46b0a8:	cmp	x1, #0xff
  46b0ac:	b.ne	46b084 <_obstack_memory_used@@Base+0x9c3c>  // b.any
  46b0b0:	ldp	x3, x2, [x19, #272]
  46b0b4:	strb	wzr, [x19, #255]
  46b0b8:	mov	x0, x19
  46b0bc:	blr	x3
  46b0c0:	ldr	x2, [x19, #320]
  46b0c4:	mov	x1, #0x1                   	// #1
  46b0c8:	mov	x0, #0x0                   	// #0
  46b0cc:	add	x2, x2, x1
  46b0d0:	str	x2, [x19, #320]
  46b0d4:	b	46b08c <_obstack_memory_used@@Base+0x9c44>
  46b0d8:	adrp	x20, 482000 <_obstack_memory_used@@Base+0x20bb8>
  46b0dc:	add	x20, x20, #0x2c0
  46b0e0:	add	x24, x20, #0x3
  46b0e4:	mov	w22, #0x7d                  	// #125
  46b0e8:	b	46b110 <_obstack_memory_used@@Base+0x9cc8>
  46b0ec:	mov	x0, x1
  46b0f0:	add	x1, x1, #0x1
  46b0f4:	str	x1, [x19, #256]
  46b0f8:	add	x20, x20, #0x1
  46b0fc:	strb	w22, [x19, x0]
  46b100:	cmp	x24, x20
  46b104:	strb	w22, [x19, #264]
  46b108:	b.eq	46b140 <_obstack_memory_used@@Base+0x9cf8>  // b.none
  46b10c:	ldrb	w22, [x20]
  46b110:	cmp	x1, #0xff
  46b114:	b.ne	46b0ec <_obstack_memory_used@@Base+0x9ca4>  // b.any
  46b118:	ldp	x3, x2, [x19, #272]
  46b11c:	strb	wzr, [x19, #255]
  46b120:	mov	x0, x19
  46b124:	blr	x3
  46b128:	ldr	x2, [x19, #320]
  46b12c:	mov	x1, #0x1                   	// #1
  46b130:	mov	x0, #0x0                   	// #0
  46b134:	add	x2, x2, x1
  46b138:	str	x2, [x19, #320]
  46b13c:	b	46b0f4 <_obstack_memory_used@@Base+0x9cac>
  46b140:	ldr	x23, [x23, #8]
  46b144:	b	46814c <_obstack_memory_used@@Base+0x6d04>
  46b148:	ldr	x25, [x25, #16]
  46b14c:	ldr	w5, [x25]
  46b150:	cmp	w5, #0x47
  46b154:	b.eq	46b7ec <_obstack_memory_used@@Base+0xa3a4>  // b.none
  46b158:	ubfiz	x3, x24, #5, #32
  46b15c:	sub	w0, w5, #0x1c
  46b160:	mov	x1, #0x1f                  	// #31
  46b164:	add	x3, x23, x3
  46b168:	cmp	w0, #0x34
  46b16c:	mov	x2, #0x1                   	// #1
  46b170:	movk	x1, #0x1a, lsl #48
  46b174:	b.hi	469214 <_obstack_memory_used@@Base+0x7dcc>  // b.pmore
  46b178:	lsl	x0, x2, x0
  46b17c:	tst	x0, x1
  46b180:	b.eq	469214 <_obstack_memory_used@@Base+0x7dcc>  // b.none
  46b184:	cmp	w24, #0x4
  46b188:	b.eq	46b268 <_obstack_memory_used@@Base+0x9e20>  // b.none
  46b18c:	ldp	x8, x9, [x3, #-32]
  46b190:	stur	x25, [x3, #-24]
  46b194:	ldp	x4, x5, [x3, #-16]
  46b198:	stur	wzr, [x3, #-16]
  46b19c:	stp	x8, x9, [x3]
  46b1a0:	sub	x0, x3, #0x20
  46b1a4:	add	w24, w24, #0x1
  46b1a8:	ldr	x25, [x25, #8]
  46b1ac:	stp	x4, x5, [x3, #16]
  46b1b0:	ldr	w5, [x25]
  46b1b4:	stp	x6, x0, [x3, #-8]
  46b1b8:	sub	w0, w5, #0x1c
  46b1bc:	str	x3, [x19, #296]
  46b1c0:	cmp	w0, #0x34
  46b1c4:	add	x3, x3, #0x20
  46b1c8:	b.ls	46b178 <_obstack_memory_used@@Base+0x9d30>  // b.plast
  46b1cc:	b	469214 <_obstack_memory_used@@Base+0x7dcc>
  46b1d0:	mov	w0, #0x1                   	// #1
  46b1d4:	ldp	x21, x22, [sp, #32]
  46b1d8:	ldp	x23, x24, [sp, #48]
  46b1dc:	str	w0, [x19, #304]
  46b1e0:	b	467ef4 <_obstack_memory_used@@Base+0x6aac>
  46b1e4:	ldr	x4, [x19, #288]
  46b1e8:	add	x0, sp, #0x60
  46b1ec:	str	x0, [x19, #296]
  46b1f0:	mov	w1, w22
  46b1f4:	mov	x0, x19
  46b1f8:	stp	x3, x20, [sp, #96]
  46b1fc:	str	wzr, [sp, #112]
  46b200:	str	x4, [sp, #120]
  46b204:	bl	46bca0 <_obstack_memory_used@@Base+0xa858>
  46b208:	ldr	w0, [sp, #112]
  46b20c:	ldr	x1, [sp, #96]
  46b210:	str	x1, [x19, #296]
  46b214:	cbnz	w0, 46b934 <_obstack_memory_used@@Base+0xa4ec>
  46b218:	ldr	x1, [x19, #256]
  46b21c:	cmp	x1, #0xff
  46b220:	b.ne	46b248 <_obstack_memory_used@@Base+0x9e00>  // b.any
  46b224:	ldp	x3, x2, [x19, #272]
  46b228:	strb	wzr, [x19, #255]
  46b22c:	mov	x0, x19
  46b230:	blr	x3
  46b234:	str	xzr, [x19, #256]
  46b238:	ldr	x0, [x19, #320]
  46b23c:	mov	x1, #0x0                   	// #0
  46b240:	add	x0, x0, #0x1
  46b244:	str	x0, [x19, #320]
  46b248:	add	x0, x1, #0x1
  46b24c:	str	x0, [x19, #256]
  46b250:	mov	w0, #0x20                  	// #32
  46b254:	strb	w0, [x19, x1]
  46b258:	strb	w0, [x19, #264]
  46b25c:	ldr	x3, [x19, #296]
  46b260:	b	4686ec <_obstack_memory_used@@Base+0x72a4>
  46b264:	str	x3, [x19, #296]
  46b268:	mov	w0, #0x1                   	// #1
  46b26c:	ldp	x21, x22, [sp, #32]
  46b270:	ldp	x23, x24, [sp, #48]
  46b274:	ldp	x25, x26, [sp, #64]
  46b278:	str	w0, [x19, #304]
  46b27c:	b	467ef4 <_obstack_memory_used@@Base+0x6aac>
  46b280:	ldrb	w0, [x0]
  46b284:	sub	w1, w0, #0x63
  46b288:	sub	w0, w0, #0x72
  46b28c:	and	w1, w1, #0xff
  46b290:	and	w0, w0, #0xff
  46b294:	cmp	w1, #0x1
  46b298:	ccmp	w0, #0x1, #0x0, hi  // hi = pmore
  46b29c:	b.hi	46954c <_obstack_memory_used@@Base+0x8104>  // b.pmore
  46b2a0:	mov	w1, w21
  46b2a4:	mov	x0, x19
  46b2a8:	bl	46ce40 <_obstack_memory_used@@Base+0xb9f8>
  46b2ac:	ldr	x1, [x19, #256]
  46b2b0:	cmp	x1, #0xff
  46b2b4:	b.ne	46b2dc <_obstack_memory_used@@Base+0x9e94>  // b.any
  46b2b8:	ldp	x3, x2, [x19, #272]
  46b2bc:	strb	wzr, [x19, #255]
  46b2c0:	mov	x0, x19
  46b2c4:	blr	x3
  46b2c8:	str	xzr, [x19, #256]
  46b2cc:	ldr	x0, [x19, #320]
  46b2d0:	mov	x1, #0x0                   	// #0
  46b2d4:	add	x0, x0, #0x1
  46b2d8:	str	x0, [x19, #320]
  46b2dc:	add	x0, x1, #0x1
  46b2e0:	str	x0, [x19, #256]
  46b2e4:	mov	w0, #0x3c                  	// #60
  46b2e8:	strb	w0, [x19, x1]
  46b2ec:	strb	w0, [x19, #264]
  46b2f0:	mov	w1, w21
  46b2f4:	mov	x0, x19
  46b2f8:	mov	w22, #0x3e                  	// #62
  46b2fc:	ldr	x2, [x20, #16]
  46b300:	mov	x23, #0x0                   	// #0
  46b304:	ldr	x2, [x2, #8]
  46b308:	bl	46bca0 <_obstack_memory_used@@Base+0xa858>
  46b30c:	ldr	x1, [x19, #256]
  46b310:	b	46b334 <_obstack_memory_used@@Base+0x9eec>
  46b314:	mov	x0, x1
  46b318:	add	x1, x1, #0x1
  46b31c:	str	x1, [x19, #256]
  46b320:	strb	w22, [x19, x0]
  46b324:	strb	w22, [x19, #264]
  46b328:	mov	w22, #0x28                  	// #40
  46b32c:	cbnz	x23, 46b4bc <_obstack_memory_used@@Base+0xa074>
  46b330:	mov	x23, #0x1                   	// #1
  46b334:	cmp	x1, #0xff
  46b338:	b.ne	46b314 <_obstack_memory_used@@Base+0x9ecc>  // b.any
  46b33c:	ldp	x3, x2, [x19, #272]
  46b340:	strb	wzr, [x19, #255]
  46b344:	mov	x0, x19
  46b348:	blr	x3
  46b34c:	ldr	x2, [x19, #320]
  46b350:	mov	x1, #0x1                   	// #1
  46b354:	mov	x0, #0x0                   	// #0
  46b358:	add	x2, x2, x1
  46b35c:	str	x2, [x19, #320]
  46b360:	b	46b31c <_obstack_memory_used@@Base+0x9ed4>
  46b364:	ldr	w4, [x19, #344]
  46b368:	ldr	x5, [x19, #336]
  46b36c:	cmp	w4, #0x0
  46b370:	b.le	46b964 <_obstack_memory_used@@Base+0xa51c>
  46b374:	sub	w3, w4, #0x1
  46b378:	add	x1, x5, #0x10
  46b37c:	mov	x2, x5
  46b380:	add	x3, x1, w3, uxtw #4
  46b384:	b	46b394 <_obstack_memory_used@@Base+0x9f4c>
  46b388:	add	x2, x2, #0x10
  46b38c:	cmp	x3, x2
  46b390:	b.eq	46b964 <_obstack_memory_used@@Base+0xa51c>  // b.none
  46b394:	ldr	x1, [x2]
  46b398:	cmp	x0, x1
  46b39c:	b.ne	46b388 <_obstack_memory_used@@Base+0x9f40>  // b.any
  46b3a0:	ldr	x4, [x19, #328]
  46b3a4:	mov	x1, x4
  46b3a8:	cbnz	x4, 46b3c4 <_obstack_memory_used@@Base+0x9f7c>
  46b3ac:	b	46b7c8 <_obstack_memory_used@@Base+0xa380>
  46b3b0:	cmp	x3, x20
  46b3b4:	ccmp	x4, x1, #0x4, eq  // eq = none
  46b3b8:	b.ne	46b3d0 <_obstack_memory_used@@Base+0x9f88>  // b.any
  46b3bc:	ldr	x1, [x1, #8]
  46b3c0:	cbz	x1, 46b7c8 <_obstack_memory_used@@Base+0xa380>
  46b3c4:	ldr	x3, [x1]
  46b3c8:	cmp	x3, x0
  46b3cc:	b.ne	46b3b0 <_obstack_memory_used@@Base+0x9f68>  // b.any
  46b3d0:	add	x1, x0, #0x8
  46b3d4:	mov	x0, x19
  46b3d8:	bl	464538 <_obstack_memory_used@@Base+0x30f0>
  46b3dc:	cbz	x0, 467f20 <_obstack_memory_used@@Base+0x6ad8>
  46b3e0:	mov	w22, #0x0                   	// #0
  46b3e4:	ldr	w1, [x0]
  46b3e8:	cmp	w1, #0x2f
  46b3ec:	b.ne	4680a4 <_obstack_memory_used@@Base+0x6c5c>  // b.any
  46b3f0:	ldr	w1, [x19, #316]
  46b3f4:	tbnz	w1, #31, 46bb00 <_obstack_memory_used@@Base+0xa6b8>
  46b3f8:	bl	4644f8 <_obstack_memory_used@@Base+0x30b0>
  46b3fc:	cbz	x0, 46bb14 <_obstack_memory_used@@Base+0xa6cc>
  46b400:	ldr	w1, [x0]
  46b404:	b	4680a4 <_obstack_memory_used@@Base+0x6c5c>
  46b408:	ldr	x2, [x20, #8]
  46b40c:	add	x3, x20, #0x10
  46b410:	mov	w1, w21
  46b414:	mov	x0, x19
  46b418:	bl	46cff0 <_obstack_memory_used@@Base+0xbba8>
  46b41c:	cbnz	w0, 46b8ec <_obstack_memory_used@@Base+0xa4a4>
  46b420:	ldp	x24, x3, [x20, #8]
  46b424:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x1ebb8>
  46b428:	add	x1, x1, #0xe90
  46b42c:	ldr	x0, [x24, #8]
  46b430:	ldp	x22, x2, [x3, #8]
  46b434:	ldr	x0, [x0]
  46b438:	ldp	x23, x20, [x2, #8]
  46b43c:	bl	402890 <strcmp@plt>
  46b440:	cbnz	w0, 46b84c <_obstack_memory_used@@Base+0xa404>
  46b444:	mov	x2, x22
  46b448:	mov	w1, w21
  46b44c:	mov	x0, x19
  46b450:	bl	46cef8 <_obstack_memory_used@@Base+0xbab0>
  46b454:	mov	x2, x24
  46b458:	mov	w1, w21
  46b45c:	mov	x0, x19
  46b460:	bl	46ce40 <_obstack_memory_used@@Base+0xb9f8>
  46b464:	mov	x2, x23
  46b468:	mov	w1, w21
  46b46c:	mov	x0, x19
  46b470:	bl	46cef8 <_obstack_memory_used@@Base+0xbab0>
  46b474:	mov	x0, x19
  46b478:	mov	x2, #0x3                   	// #3
  46b47c:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x1ebb8>
  46b480:	add	x1, x1, #0xe98
  46b484:	bl	463c18 <_obstack_memory_used@@Base+0x27d0>
  46b488:	mov	w1, w21
  46b48c:	mov	x2, x20
  46b490:	mov	x0, x19
  46b494:	bl	46cef8 <_obstack_memory_used@@Base+0xbab0>
  46b498:	ldp	x21, x22, [sp, #32]
  46b49c:	ldp	x23, x24, [sp, #48]
  46b4a0:	b	467ef4 <_obstack_memory_used@@Base+0x6aac>
  46b4a4:	sub	w1, w0, #0x61
  46b4a8:	and	w1, w1, #0xff
  46b4ac:	cmp	w1, #0x5
  46b4b0:	b.hi	46ba70 <_obstack_memory_used@@Base+0xa628>  // b.pmore
  46b4b4:	sub	w0, w0, #0x57
  46b4b8:	b	46a46c <_obstack_memory_used@@Base+0x9024>
  46b4bc:	ldr	x2, [x20, #16]
  46b4c0:	mov	w1, w21
  46b4c4:	mov	x0, x19
  46b4c8:	ldr	x2, [x2, #16]
  46b4cc:	bl	46bca0 <_obstack_memory_used@@Base+0xa858>
  46b4d0:	ldr	x1, [x19, #256]
  46b4d4:	cmp	x1, #0xff
  46b4d8:	b.ne	46b500 <_obstack_memory_used@@Base+0xa0b8>  // b.any
  46b4dc:	ldp	x3, x2, [x19, #272]
  46b4e0:	strb	wzr, [x19, #255]
  46b4e4:	mov	x0, x19
  46b4e8:	blr	x3
  46b4ec:	str	xzr, [x19, #256]
  46b4f0:	ldr	x0, [x19, #320]
  46b4f4:	mov	x1, #0x0                   	// #0
  46b4f8:	add	x0, x0, #0x1
  46b4fc:	str	x0, [x19, #320]
  46b500:	add	x0, x1, #0x1
  46b504:	str	x0, [x19, #256]
  46b508:	mov	w0, #0x29                  	// #41
  46b50c:	strb	w0, [x19, x1]
  46b510:	strb	w0, [x19, #264]
  46b514:	ldp	x21, x22, [sp, #32]
  46b518:	ldp	x23, x24, [sp, #48]
  46b51c:	b	467ef4 <_obstack_memory_used@@Base+0x6aac>
  46b520:	ldr	w1, [x19, #316]
  46b524:	tbnz	w1, #31, 46a4cc <_obstack_memory_used@@Base+0x9084>
  46b528:	bl	4644f8 <_obstack_memory_used@@Base+0x30b0>
  46b52c:	mov	x2, x0
  46b530:	cbnz	x0, 46a4cc <_obstack_memory_used@@Base+0x9084>
  46b534:	b	467f20 <_obstack_memory_used@@Base+0x6ad8>
  46b538:	cmp	w1, #0x63
  46b53c:	b.eq	46b904 <_obstack_memory_used@@Base+0xa4bc>  // b.none
  46b540:	mov	w1, w21
  46b544:	mov	x0, x19
  46b548:	bl	46ce40 <_obstack_memory_used@@Base+0xb9f8>
  46b54c:	ldr	x2, [x20, #16]
  46b550:	mov	w1, w21
  46b554:	mov	x0, x19
  46b558:	ldr	x2, [x2, #16]
  46b55c:	bl	46cef8 <_obstack_memory_used@@Base+0xbab0>
  46b560:	b	469680 <_obstack_memory_used@@Base+0x8238>
  46b564:	mov	w2, w3
  46b568:	adrp	x1, 473000 <_obstack_memory_used@@Base+0x11bb8>
  46b56c:	add	x1, x1, #0x1f8
  46b570:	add	x20, sp, #0x60
  46b574:	mov	x0, x20
  46b578:	bl	4025b0 <sprintf@plt>
  46b57c:	mov	x0, x20
  46b580:	bl	4024f0 <strlen@plt>
  46b584:	cbz	x0, 46bbe0 <_obstack_memory_used@@Base+0xa798>
  46b588:	add	x22, x20, x0
  46b58c:	ldr	x1, [x19, #256]
  46b590:	b	46b5b4 <_obstack_memory_used@@Base+0xa16c>
  46b594:	mov	x0, x1
  46b598:	add	x1, x1, #0x1
  46b59c:	str	x1, [x19, #256]
  46b5a0:	add	x20, x20, #0x1
  46b5a4:	strb	w21, [x19, x0]
  46b5a8:	cmp	x22, x20
  46b5ac:	strb	w21, [x19, #264]
  46b5b0:	b.eq	46b5f4 <_obstack_memory_used@@Base+0xa1ac>  // b.none
  46b5b4:	ldrb	w21, [x20]
  46b5b8:	cmp	x1, #0xff
  46b5bc:	b.ne	46b594 <_obstack_memory_used@@Base+0xa14c>  // b.any
  46b5c0:	ldp	x3, x2, [x19, #272]
  46b5c4:	strb	wzr, [x19, #255]
  46b5c8:	mov	x0, x19
  46b5cc:	blr	x3
  46b5d0:	ldr	x2, [x19, #320]
  46b5d4:	mov	x1, #0x1                   	// #1
  46b5d8:	mov	x0, #0x0                   	// #0
  46b5dc:	add	x2, x2, x1
  46b5e0:	str	x2, [x19, #320]
  46b5e4:	b	46b59c <_obstack_memory_used@@Base+0xa154>
  46b5e8:	ldp	x21, x22, [sp, #32]
  46b5ec:	ldp	x23, x24, [sp, #48]
  46b5f0:	b	467ef4 <_obstack_memory_used@@Base+0x6aac>
  46b5f4:	ldp	x21, x22, [sp, #32]
  46b5f8:	ldp	x23, x24, [sp, #48]
  46b5fc:	b	467ef4 <_obstack_memory_used@@Base+0x6aac>
  46b600:	ldr	x0, [x22, #8]
  46b604:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x1ebb8>
  46b608:	mov	x2, #0x6                   	// #6
  46b60c:	add	x1, x1, #0xd10
  46b610:	bl	4026a0 <strncmp@plt>
  46b614:	cbnz	w0, 469308 <_obstack_memory_used@@Base+0x7ec0>
  46b618:	ldr	x2, [x20, #16]
  46b61c:	mov	w1, w21
  46b620:	mov	x0, x19
  46b624:	bl	46bca0 <_obstack_memory_used@@Base+0xa858>
  46b628:	mov	x0, x19
  46b62c:	adrp	x1, 473000 <_obstack_memory_used@@Base+0x11bb8>
  46b630:	mov	x2, #0x2                   	// #2
  46b634:	add	x1, x1, #0xe70
  46b638:	bl	463c18 <_obstack_memory_used@@Base+0x27d0>
  46b63c:	b	4693c8 <_obstack_memory_used@@Base+0x7f80>
  46b640:	cmp	x1, #0xff
  46b644:	b.ne	46b66c <_obstack_memory_used@@Base+0xa224>  // b.any
  46b648:	ldp	x3, x2, [x19, #272]
  46b64c:	strb	wzr, [x19, #255]
  46b650:	mov	x0, x19
  46b654:	blr	x3
  46b658:	str	xzr, [x19, #256]
  46b65c:	ldr	x0, [x19, #320]
  46b660:	mov	x1, #0x0                   	// #0
  46b664:	add	x0, x0, #0x1
  46b668:	str	x0, [x19, #320]
  46b66c:	add	x0, x1, #0x1
  46b670:	str	x0, [x19, #256]
  46b674:	mov	w2, #0x20                  	// #32
  46b678:	strb	w2, [x19, x1]
  46b67c:	strb	w2, [x19, #264]
  46b680:	b	46abec <_obstack_memory_used@@Base+0x97a4>
  46b684:	ldr	x1, [x19, #256]
  46b688:	cmp	x1, #0xff
  46b68c:	b.ne	46b6b4 <_obstack_memory_used@@Base+0xa26c>  // b.any
  46b690:	ldp	x3, x2, [x19, #272]
  46b694:	strb	wzr, [x19, #255]
  46b698:	mov	x0, x19
  46b69c:	blr	x3
  46b6a0:	str	xzr, [x19, #256]
  46b6a4:	ldr	x0, [x19, #320]
  46b6a8:	mov	x1, #0x0                   	// #0
  46b6ac:	add	x0, x0, #0x1
  46b6b0:	str	x0, [x19, #320]
  46b6b4:	add	x0, x1, #0x1
  46b6b8:	str	x0, [x19, #256]
  46b6bc:	mov	w2, #0x20                  	// #32
  46b6c0:	strb	w2, [x19, x1]
  46b6c4:	strb	w2, [x19, #264]
  46b6c8:	b	46ac54 <_obstack_memory_used@@Base+0x980c>
  46b6cc:	ldp	x21, x22, [sp, #32]
  46b6d0:	ldp	x23, x24, [sp, #48]
  46b6d4:	b	467ef4 <_obstack_memory_used@@Base+0x6aac>
  46b6d8:	ldp	x21, x22, [sp, #32]
  46b6dc:	ldp	x23, x24, [sp, #48]
  46b6e0:	b	467ef4 <_obstack_memory_used@@Base+0x6aac>
  46b6e4:	ldp	x21, x22, [sp, #32]
  46b6e8:	ldp	x23, x24, [sp, #48]
  46b6ec:	b	467ef4 <_obstack_memory_used@@Base+0x6aac>
  46b6f0:	ldp	x21, x22, [sp, #32]
  46b6f4:	ldp	x23, x24, [sp, #48]
  46b6f8:	b	467ef4 <_obstack_memory_used@@Base+0x6aac>
  46b6fc:	ldr	x2, [x20, #8]
  46b700:	mov	w1, w21
  46b704:	mov	x0, x19
  46b708:	bl	46cef8 <_obstack_memory_used@@Base+0xbab0>
  46b70c:	mov	x0, x19
  46b710:	adrp	x1, 47d000 <_obstack_memory_used@@Base+0x1bbb8>
  46b714:	mov	x2, #0x3                   	// #3
  46b718:	add	x1, x1, #0x140
  46b71c:	bl	463c18 <_obstack_memory_used@@Base+0x27d0>
  46b720:	ldp	x21, x22, [sp, #32]
  46b724:	ldp	x23, x24, [sp, #48]
  46b728:	b	467ef4 <_obstack_memory_used@@Base+0x6aac>
  46b72c:	sub	x22, x22, #0x2
  46b730:	ldp	x23, x24, [sp, #48]
  46b734:	str	x22, [x19, #256]
  46b738:	ldp	x21, x22, [sp, #32]
  46b73c:	b	467ef4 <_obstack_memory_used@@Base+0x6aac>
  46b740:	ldr	x0, [x0, #8]
  46b744:	ldr	w1, [x0, #16]
  46b748:	cmp	w1, #0x1
  46b74c:	b.eq	46bad0 <_obstack_memory_used@@Base+0xa688>  // b.none
  46b750:	ldp	x21, x22, [sp, #32]
  46b754:	ldp	x23, x24, [sp, #48]
  46b758:	b	467ef4 <_obstack_memory_used@@Base+0x6aac>
  46b75c:	ldr	x1, [x0, #8]
  46b760:	ldr	w2, [x1, #16]
  46b764:	cmp	w2, #0x1
  46b768:	b.ne	469570 <_obstack_memory_used@@Base+0x8128>  // b.any
  46b76c:	ldr	x1, [x1, #8]
  46b770:	ldrb	w1, [x1]
  46b774:	cmp	w1, #0x3e
  46b778:	b.ne	469570 <_obstack_memory_used@@Base+0x8128>  // b.any
  46b77c:	ldr	x1, [x19, #256]
  46b780:	cmp	x1, #0xff
  46b784:	b.ne	46b7ac <_obstack_memory_used@@Base+0xa364>  // b.any
  46b788:	ldp	x3, x2, [x19, #272]
  46b78c:	strb	wzr, [x19, #255]
  46b790:	mov	x0, x19
  46b794:	blr	x3
  46b798:	str	xzr, [x19, #256]
  46b79c:	ldr	x0, [x19, #320]
  46b7a0:	mov	x1, #0x0                   	// #0
  46b7a4:	add	x0, x0, #0x1
  46b7a8:	str	x0, [x19, #320]
  46b7ac:	add	x0, x1, #0x1
  46b7b0:	str	x0, [x19, #256]
  46b7b4:	mov	w0, #0x28                  	// #40
  46b7b8:	strb	w0, [x19, x1]
  46b7bc:	strb	w0, [x19, #264]
  46b7c0:	ldr	x0, [x20, #8]
  46b7c4:	b	469570 <_obstack_memory_used@@Base+0x8128>
  46b7c8:	ldr	x2, [x2, #8]
  46b7cc:	add	x1, x0, #0x8
  46b7d0:	ldr	x23, [x19, #288]
  46b7d4:	str	x2, [x19, #288]
  46b7d8:	mov	x0, x19
  46b7dc:	bl	464538 <_obstack_memory_used@@Base+0x30f0>
  46b7e0:	cbz	x0, 46bb18 <_obstack_memory_used@@Base+0xa6d0>
  46b7e4:	mov	w22, #0x1                   	// #1
  46b7e8:	b	46b3e4 <_obstack_memory_used@@Base+0x9f9c>
  46b7ec:	ldr	x25, [x25, #8]
  46b7f0:	cbz	x25, 46b268 <_obstack_memory_used@@Base+0x9e20>
  46b7f4:	ldr	w5, [x25]
  46b7f8:	b	46b158 <_obstack_memory_used@@Base+0x9d10>
  46b7fc:	ldp	x21, x22, [sp, #32]
  46b800:	ldp	x23, x24, [sp, #48]
  46b804:	b	467ef4 <_obstack_memory_used@@Base+0x6aac>
  46b808:	ldp	x21, x22, [sp, #32]
  46b80c:	ldp	x23, x24, [sp, #48]
  46b810:	b	467ef4 <_obstack_memory_used@@Base+0x6aac>
  46b814:	ldp	x21, x22, [sp, #32]
  46b818:	ldp	x23, x24, [sp, #48]
  46b81c:	b	467ef4 <_obstack_memory_used@@Base+0x6aac>
  46b820:	ldr	x0, [x2, #16]
  46b824:	ldr	w0, [x0]
  46b828:	cmp	w0, #0x29
  46b82c:	b.eq	46b838 <_obstack_memory_used@@Base+0xa3f0>  // b.none
  46b830:	mov	w0, #0x1                   	// #1
  46b834:	str	w0, [x19, #304]
  46b838:	ldr	x2, [x2, #8]
  46b83c:	mov	w1, w21
  46b840:	mov	x0, x19
  46b844:	bl	46cef8 <_obstack_memory_used@@Base+0xbab0>
  46b848:	b	4695b8 <_obstack_memory_used@@Base+0x8170>
  46b84c:	mov	x0, x19
  46b850:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x1ebb8>
  46b854:	mov	x2, #0x4                   	// #4
  46b858:	add	x1, x1, #0xea0
  46b85c:	bl	463c18 <_obstack_memory_used@@Base+0x27d0>
  46b860:	ldr	x0, [x22, #8]
  46b864:	cbz	x0, 46b8bc <_obstack_memory_used@@Base+0xa474>
  46b868:	mov	w1, w21
  46b86c:	mov	x2, x22
  46b870:	mov	x0, x19
  46b874:	bl	46cef8 <_obstack_memory_used@@Base+0xbab0>
  46b878:	ldr	x1, [x19, #256]
  46b87c:	cmp	x1, #0xff
  46b880:	b.ne	46b8a8 <_obstack_memory_used@@Base+0xa460>  // b.any
  46b884:	ldp	x3, x2, [x19, #272]
  46b888:	strb	wzr, [x19, #255]
  46b88c:	mov	x0, x19
  46b890:	blr	x3
  46b894:	str	xzr, [x19, #256]
  46b898:	ldr	x0, [x19, #320]
  46b89c:	mov	x1, #0x0                   	// #0
  46b8a0:	add	x0, x0, #0x1
  46b8a4:	str	x0, [x19, #320]
  46b8a8:	add	x0, x1, #0x1
  46b8ac:	str	x0, [x19, #256]
  46b8b0:	mov	w0, #0x20                  	// #32
  46b8b4:	strb	w0, [x19, x1]
  46b8b8:	strb	w0, [x19, #264]
  46b8bc:	mov	x2, x23
  46b8c0:	mov	w1, w21
  46b8c4:	mov	x0, x19
  46b8c8:	bl	46bca0 <_obstack_memory_used@@Base+0xa858>
  46b8cc:	cbz	x20, 46ba64 <_obstack_memory_used@@Base+0xa61c>
  46b8d0:	mov	w1, w21
  46b8d4:	mov	x2, x20
  46b8d8:	mov	x0, x19
  46b8dc:	bl	46cef8 <_obstack_memory_used@@Base+0xbab0>
  46b8e0:	ldp	x21, x22, [sp, #32]
  46b8e4:	ldp	x23, x24, [sp, #48]
  46b8e8:	b	467ef4 <_obstack_memory_used@@Base+0x6aac>
  46b8ec:	ldp	x21, x22, [sp, #32]
  46b8f0:	ldp	x23, x24, [sp, #48]
  46b8f4:	b	467ef4 <_obstack_memory_used@@Base+0x6aac>
  46b8f8:	ldp	x21, x22, [sp, #32]
  46b8fc:	ldp	x23, x24, [sp, #48]
  46b900:	b	467ef4 <_obstack_memory_used@@Base+0x6aac>
  46b904:	ldrb	w1, [x0, #1]
  46b908:	cmp	w1, #0x6c
  46b90c:	b.ne	46b540 <_obstack_memory_used@@Base+0xa0f8>  // b.any
  46b910:	ldrb	w0, [x0, #2]
  46b914:	cbz	w0, 46b54c <_obstack_memory_used@@Base+0xa104>
  46b918:	b	46b540 <_obstack_memory_used@@Base+0xa0f8>
  46b91c:	ldp	x21, x22, [sp, #32]
  46b920:	ldp	x23, x24, [sp, #48]
  46b924:	b	467ef4 <_obstack_memory_used@@Base+0x6aac>
  46b928:	ldp	x21, x22, [sp, #32]
  46b92c:	ldp	x23, x24, [sp, #48]
  46b930:	b	467ef4 <_obstack_memory_used@@Base+0x6aac>
  46b934:	ldp	x21, x22, [sp, #32]
  46b938:	ldp	x23, x24, [sp, #48]
  46b93c:	b	467ef4 <_obstack_memory_used@@Base+0x6aac>
  46b940:	ldr	x1, [x20, #8]
  46b944:	ldr	w2, [x1]
  46b948:	cmp	w2, #0x1
  46b94c:	b.ne	46a950 <_obstack_memory_used@@Base+0x9508>  // b.any
  46b950:	ldr	x2, [x20, #16]
  46b954:	ldr	w2, [x2]
  46b958:	cmp	w2, #0x29
  46b95c:	csel	x20, x20, x1, ne  // ne = any
  46b960:	b	46a950 <_obstack_memory_used@@Base+0x9508>
  46b964:	ldr	w1, [x19, #348]
  46b968:	cmp	w4, w1
  46b96c:	b.ge	46b9d4 <_obstack_memory_used@@Base+0xa58c>  // b.tcont
  46b970:	sbfiz	x1, x4, #4, #32
  46b974:	add	w2, w4, #0x1
  46b978:	ldr	x3, [x19, #288]
  46b97c:	str	w2, [x19, #344]
  46b980:	str	x0, [x5, x1]
  46b984:	add	x1, x5, w4, sxtw #4
  46b988:	add	x1, x1, #0x8
  46b98c:	cbz	x3, 46baec <_obstack_memory_used@@Base+0xa6a4>
  46b990:	ldr	w2, [x19, #360]
  46b994:	ldr	w6, [x19, #364]
  46b998:	sbfiz	x5, x2, #4, #32
  46b99c:	b	46b9cc <_obstack_memory_used@@Base+0xa584>
  46b9a0:	ldr	x4, [x19, #352]
  46b9a4:	add	w2, w2, #0x1
  46b9a8:	ldr	x7, [x3, #8]
  46b9ac:	add	x4, x4, x5
  46b9b0:	str	w2, [x19, #360]
  46b9b4:	add	x5, x5, #0x10
  46b9b8:	str	x7, [x4, #8]
  46b9bc:	str	x4, [x1]
  46b9c0:	mov	x1, x4
  46b9c4:	ldr	x3, [x3]
  46b9c8:	cbz	x3, 46baec <_obstack_memory_used@@Base+0xa6a4>
  46b9cc:	cmp	w6, w2
  46b9d0:	b.gt	46b9a0 <_obstack_memory_used@@Base+0xa558>
  46b9d4:	mov	w0, #0x1                   	// #1
  46b9d8:	ldp	x21, x22, [sp, #32]
  46b9dc:	ldp	x23, x24, [sp, #48]
  46b9e0:	str	w0, [x19, #304]
  46b9e4:	b	467ef4 <_obstack_memory_used@@Base+0x6aac>
  46b9e8:	ldr	x2, [x20, #8]
  46b9ec:	mov	w1, w21
  46b9f0:	mov	x0, x19
  46b9f4:	bl	46cef8 <_obstack_memory_used@@Base+0xbab0>
  46b9f8:	mov	x2, x22
  46b9fc:	mov	w1, w21
  46ba00:	mov	x0, x19
  46ba04:	bl	46ce40 <_obstack_memory_used@@Base+0xb9f8>
  46ba08:	ldp	x21, x22, [sp, #32]
  46ba0c:	ldp	x23, x24, [sp, #48]
  46ba10:	b	467ef4 <_obstack_memory_used@@Base+0x6aac>
  46ba14:	ldr	x2, [x20, #16]
  46ba18:	mov	x0, x19
  46ba1c:	mov	w1, w21
  46ba20:	bl	46bca0 <_obstack_memory_used@@Base+0xa858>
  46ba24:	str	xzr, [x19, #296]
  46ba28:	ldr	w0, [sp, #112]
  46ba2c:	cbz	w0, 468930 <_obstack_memory_used@@Base+0x74e8>
  46ba30:	ldp	x21, x22, [sp, #32]
  46ba34:	ldp	x23, x24, [sp, #48]
  46ba38:	b	467ef4 <_obstack_memory_used@@Base+0x6aac>
  46ba3c:	cmp	w22, #0x5
  46ba40:	b.eq	46bbec <_obstack_memory_used@@Base+0xa7a4>  // b.none
  46ba44:	mov	x0, x19
  46ba48:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x1ebb8>
  46ba4c:	mov	x2, #0x3                   	// #3
  46ba50:	add	x1, x1, #0xeb8
  46ba54:	bl	463c18 <_obstack_memory_used@@Base+0x27d0>
  46ba58:	ldp	x21, x22, [sp, #32]
  46ba5c:	ldp	x23, x24, [sp, #48]
  46ba60:	b	467ef4 <_obstack_memory_used@@Base+0x6aac>
  46ba64:	ldp	x21, x22, [sp, #32]
  46ba68:	ldp	x23, x24, [sp, #48]
  46ba6c:	b	467ef4 <_obstack_memory_used@@Base+0x6aac>
  46ba70:	cmp	x21, x24
  46ba74:	b.ls	46a3d8 <_obstack_memory_used@@Base+0x8f90>  // b.plast
  46ba78:	cmp	x2, #0xff
  46ba7c:	ccmp	w0, w23, #0x0, ls  // ls = plast
  46ba80:	b.ne	46a3d8 <_obstack_memory_used@@Base+0x8f90>  // b.any
  46ba84:	ldr	x1, [x19, #256]
  46ba88:	and	w22, w2, #0xff
  46ba8c:	cmp	x1, #0xff
  46ba90:	b.ne	46bab8 <_obstack_memory_used@@Base+0xa670>  // b.any
  46ba94:	ldp	x3, x2, [x19, #272]
  46ba98:	strb	wzr, [x19, #255]
  46ba9c:	mov	x0, x19
  46baa0:	blr	x3
  46baa4:	str	xzr, [x19, #256]
  46baa8:	ldr	x0, [x19, #320]
  46baac:	mov	x1, #0x0                   	// #0
  46bab0:	add	x0, x0, #0x1
  46bab4:	str	x0, [x19, #320]
  46bab8:	add	x0, x1, #0x1
  46babc:	str	x0, [x19, #256]
  46bac0:	strb	w22, [x19, x1]
  46bac4:	mov	x20, x24
  46bac8:	strb	w22, [x19, #264]
  46bacc:	b	46a418 <_obstack_memory_used@@Base+0x8fd0>
  46bad0:	ldr	x0, [x0, #8]
  46bad4:	ldrb	w0, [x0]
  46bad8:	cmp	w0, #0x3e
  46badc:	b.eq	46bc0c <_obstack_memory_used@@Base+0xa7c4>  // b.none
  46bae0:	ldp	x21, x22, [sp, #32]
  46bae4:	ldp	x23, x24, [sp, #48]
  46bae8:	b	467ef4 <_obstack_memory_used@@Base+0x6aac>
  46baec:	str	xzr, [x1]
  46baf0:	b	46b3d0 <_obstack_memory_used@@Base+0x9f88>
  46baf4:	ldp	x21, x22, [sp, #32]
  46baf8:	ldp	x23, x24, [sp, #48]
  46bafc:	b	467ef4 <_obstack_memory_used@@Base+0x6aac>
  46bb00:	ldr	w1, [x20]
  46bb04:	ldr	x4, [x19, #296]
  46bb08:	cmp	w1, #0x2f
  46bb0c:	csel	x20, x20, x0, ne  // ne = any
  46bb10:	b	4680c8 <_obstack_memory_used@@Base+0x6c80>
  46bb14:	cbz	w22, 467f20 <_obstack_memory_used@@Base+0x6ad8>
  46bb18:	ldp	x21, x22, [sp, #32]
  46bb1c:	str	x23, [x19, #288]
  46bb20:	ldp	x23, x24, [sp, #48]
  46bb24:	b	467f28 <_obstack_memory_used@@Base+0x6ae0>
  46bb28:	ldr	x1, [x19, #256]
  46bb2c:	cmp	x1, #0xff
  46bb30:	b.ne	46bb58 <_obstack_memory_used@@Base+0xa710>  // b.any
  46bb34:	ldp	x3, x2, [x19, #272]
  46bb38:	strb	wzr, [x19, #255]
  46bb3c:	mov	x0, x19
  46bb40:	blr	x3
  46bb44:	str	xzr, [x19, #256]
  46bb48:	ldr	x0, [x19, #320]
  46bb4c:	mov	x1, #0x0                   	// #0
  46bb50:	add	x0, x0, #0x1
  46bb54:	str	x0, [x19, #320]
  46bb58:	add	x0, x1, #0x1
  46bb5c:	str	x0, [x19, #256]
  46bb60:	mov	w0, #0x75                  	// #117
  46bb64:	strb	w0, [x19, x1]
  46bb68:	strb	w0, [x19, #264]
  46bb6c:	ldp	x21, x22, [sp, #32]
  46bb70:	ldp	x23, x24, [sp, #48]
  46bb74:	b	467ef4 <_obstack_memory_used@@Base+0x6aac>
  46bb78:	mov	x0, x19
  46bb7c:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x1ebb8>
  46bb80:	mov	x2, #0x2                   	// #2
  46bb84:	add	x1, x1, #0xea8
  46bb88:	bl	463c18 <_obstack_memory_used@@Base+0x27d0>
  46bb8c:	ldp	x21, x22, [sp, #32]
  46bb90:	ldp	x23, x24, [sp, #48]
  46bb94:	b	467ef4 <_obstack_memory_used@@Base+0x6aac>
  46bb98:	ldr	x1, [x19, #256]
  46bb9c:	cmp	x1, #0xff
  46bba0:	b.ne	46bbc8 <_obstack_memory_used@@Base+0xa780>  // b.any
  46bba4:	ldp	x3, x2, [x19, #272]
  46bba8:	strb	wzr, [x19, #255]
  46bbac:	mov	x0, x19
  46bbb0:	blr	x3
  46bbb4:	str	xzr, [x19, #256]
  46bbb8:	ldr	x0, [x19, #320]
  46bbbc:	mov	x1, #0x0                   	// #0
  46bbc0:	add	x0, x0, #0x1
  46bbc4:	str	x0, [x19, #320]
  46bbc8:	add	x0, x1, #0x1
  46bbcc:	str	x0, [x19, #256]
  46bbd0:	mov	w0, #0x2d                  	// #45
  46bbd4:	strb	w0, [x19, x1]
  46bbd8:	strb	w0, [x19, #264]
  46bbdc:	b	46a818 <_obstack_memory_used@@Base+0x93d0>
  46bbe0:	ldp	x21, x22, [sp, #32]
  46bbe4:	ldp	x23, x24, [sp, #48]
  46bbe8:	b	467ef4 <_obstack_memory_used@@Base+0x6aac>
  46bbec:	mov	x0, x19
  46bbf0:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x1ebb8>
  46bbf4:	mov	x2, #0x2                   	// #2
  46bbf8:	add	x1, x1, #0xeb0
  46bbfc:	bl	463c18 <_obstack_memory_used@@Base+0x27d0>
  46bc00:	ldp	x21, x22, [sp, #32]
  46bc04:	ldp	x23, x24, [sp, #48]
  46bc08:	b	467ef4 <_obstack_memory_used@@Base+0x6aac>
  46bc0c:	ldr	x1, [x19, #256]
  46bc10:	cmp	x1, #0xff
  46bc14:	b.ne	46bc3c <_obstack_memory_used@@Base+0xa7f4>  // b.any
  46bc18:	ldp	x3, x2, [x19, #272]
  46bc1c:	strb	wzr, [x19, #255]
  46bc20:	mov	x0, x19
  46bc24:	blr	x3
  46bc28:	str	xzr, [x19, #256]
  46bc2c:	ldr	x0, [x19, #320]
  46bc30:	mov	x1, #0x0                   	// #0
  46bc34:	add	x0, x0, #0x1
  46bc38:	str	x0, [x19, #320]
  46bc3c:	add	x0, x1, #0x1
  46bc40:	str	x0, [x19, #256]
  46bc44:	mov	w0, #0x29                  	// #41
  46bc48:	strb	w0, [x19, x1]
  46bc4c:	strb	w0, [x19, #264]
  46bc50:	ldp	x21, x22, [sp, #32]
  46bc54:	ldp	x23, x24, [sp, #48]
  46bc58:	b	467ef4 <_obstack_memory_used@@Base+0x6aac>
  46bc5c:	mov	x2, x22
  46bc60:	mov	w1, w21
  46bc64:	mov	x0, x19
  46bc68:	bl	46ce40 <_obstack_memory_used@@Base+0xb9f8>
  46bc6c:	b	469a94 <_obstack_memory_used@@Base+0x864c>
  46bc70:	ldp	x21, x22, [sp, #32]
  46bc74:	ldp	x23, x24, [sp, #48]
  46bc78:	b	467ef4 <_obstack_memory_used@@Base+0x6aac>
  46bc7c:	mov	x0, x19
  46bc80:	adrp	x1, 47c000 <_obstack_memory_used@@Base+0x1abb8>
  46bc84:	mov	x2, #0x5                   	// #5
  46bc88:	add	x1, x1, #0x940
  46bc8c:	bl	463c18 <_obstack_memory_used@@Base+0x27d0>
  46bc90:	ldp	x21, x22, [sp, #32]
  46bc94:	ldp	x23, x24, [sp, #48]
  46bc98:	b	467ef4 <_obstack_memory_used@@Base+0x6aac>
  46bc9c:	nop
  46bca0:	stp	x29, x30, [sp, #-48]!
  46bca4:	mov	x29, sp
  46bca8:	stp	x19, x20, [sp, #16]
  46bcac:	mov	x20, x0
  46bcb0:	cbz	x2, 46bd20 <_obstack_memory_used@@Base+0xa8d8>
  46bcb4:	ldr	w3, [x2, #4]
  46bcb8:	mov	x19, x2
  46bcbc:	cmp	w3, #0x1
  46bcc0:	b.gt	46bd20 <_obstack_memory_used@@Base+0xa8d8>
  46bcc4:	ldr	w4, [x0, #308]
  46bcc8:	cmp	w4, #0x400
  46bccc:	b.gt	46bd20 <_obstack_memory_used@@Base+0xa8d8>
  46bcd0:	add	w3, w3, #0x1
  46bcd4:	add	w4, w4, #0x1
  46bcd8:	str	w3, [x2, #4]
  46bcdc:	add	x3, sp, #0x20
  46bce0:	str	w4, [x0, #308]
  46bce4:	ldr	x4, [x0, #328]
  46bce8:	str	x3, [x0, #328]
  46bcec:	stp	x2, x4, [sp, #32]
  46bcf0:	bl	467e90 <_obstack_memory_used@@Base+0x6a48>
  46bcf4:	ldr	w1, [x19, #4]
  46bcf8:	ldr	x0, [sp, #40]
  46bcfc:	str	x0, [x20, #328]
  46bd00:	ldr	w0, [x20, #308]
  46bd04:	sub	w1, w1, #0x1
  46bd08:	str	w1, [x19, #4]
  46bd0c:	sub	w0, w0, #0x1
  46bd10:	str	w0, [x20, #308]
  46bd14:	ldp	x19, x20, [sp, #16]
  46bd18:	ldp	x29, x30, [sp], #48
  46bd1c:	ret
  46bd20:	mov	w0, #0x1                   	// #1
  46bd24:	str	w0, [x20, #304]
  46bd28:	ldp	x19, x20, [sp, #16]
  46bd2c:	ldp	x29, x30, [sp], #48
  46bd30:	ret
  46bd34:	nop
  46bd38:	stp	x29, x30, [sp, #-64]!
  46bd3c:	mov	x29, sp
  46bd40:	stp	x19, x20, [sp, #16]
  46bd44:	mov	x19, x0
  46bd48:	ldr	w0, [x2]
  46bd4c:	stp	x21, x22, [sp, #32]
  46bd50:	mov	x20, x2
  46bd54:	sub	w0, w0, #0x3
  46bd58:	mov	w21, w1
  46bd5c:	cmp	w0, #0x4d
  46bd60:	b.ls	46bd80 <_obstack_memory_used@@Base+0xa938>  // b.plast
  46bd64:	mov	x2, x20
  46bd68:	mov	w1, w21
  46bd6c:	mov	x0, x19
  46bd70:	ldp	x19, x20, [sp, #16]
  46bd74:	ldp	x21, x22, [sp, #32]
  46bd78:	ldp	x29, x30, [sp], #64
  46bd7c:	b	46bca0 <_obstack_memory_used@@Base+0xa858>
  46bd80:	adrp	x1, 482000 <_obstack_memory_used@@Base+0x20bb8>
  46bd84:	add	x1, x1, #0x208
  46bd88:	ldrh	w0, [x1, w0, uxtw #1]
  46bd8c:	adr	x1, 46bd98 <_obstack_memory_used@@Base+0xa950>
  46bd90:	add	x0, x1, w0, sxth #2
  46bd94:	br	x0
  46bd98:	adrp	x20, 482000 <_obstack_memory_used@@Base+0x20bb8>
  46bd9c:	add	x20, x20, #0x3b0
  46bda0:	add	x22, x20, #0x9
  46bda4:	mov	w21, #0x20                  	// #32
  46bda8:	ldr	x1, [x19, #256]
  46bdac:	b	46bdd4 <_obstack_memory_used@@Base+0xa98c>
  46bdb0:	mov	x0, x1
  46bdb4:	add	x1, x1, #0x1
  46bdb8:	str	x1, [x19, #256]
  46bdbc:	add	x20, x20, #0x1
  46bdc0:	strb	w21, [x19, x0]
  46bdc4:	cmp	x22, x20
  46bdc8:	strb	w21, [x19, #264]
  46bdcc:	b.eq	46bf8c <_obstack_memory_used@@Base+0xab44>  // b.none
  46bdd0:	ldrb	w21, [x20]
  46bdd4:	cmp	x1, #0xff
  46bdd8:	b.ne	46bdb0 <_obstack_memory_used@@Base+0xa968>  // b.any
  46bddc:	ldp	x3, x2, [x19, #272]
  46bde0:	strb	wzr, [x19, #255]
  46bde4:	mov	x0, x19
  46bde8:	blr	x3
  46bdec:	ldr	x2, [x19, #320]
  46bdf0:	mov	x1, #0x1                   	// #1
  46bdf4:	mov	x0, #0x0                   	// #0
  46bdf8:	add	x2, x2, x1
  46bdfc:	str	x2, [x19, #320]
  46be00:	b	46bdb8 <_obstack_memory_used@@Base+0xa970>
  46be04:	adrp	x20, 482000 <_obstack_memory_used@@Base+0x20bb8>
  46be08:	add	x20, x20, #0x3c0
  46be0c:	add	x22, x20, #0x9
  46be10:	mov	w21, #0x20                  	// #32
  46be14:	ldr	x1, [x19, #256]
  46be18:	b	46be40 <_obstack_memory_used@@Base+0xa9f8>
  46be1c:	mov	x0, x1
  46be20:	add	x1, x1, #0x1
  46be24:	str	x1, [x19, #256]
  46be28:	add	x20, x20, #0x1
  46be2c:	strb	w21, [x19, x0]
  46be30:	cmp	x20, x22
  46be34:	strb	w21, [x19, #264]
  46be38:	b.eq	46bf8c <_obstack_memory_used@@Base+0xab44>  // b.none
  46be3c:	ldrb	w21, [x20]
  46be40:	cmp	x1, #0xff
  46be44:	b.ne	46be1c <_obstack_memory_used@@Base+0xa9d4>  // b.any
  46be48:	ldp	x3, x2, [x19, #272]
  46be4c:	strb	wzr, [x19, #255]
  46be50:	mov	x0, x19
  46be54:	blr	x3
  46be58:	ldr	x2, [x19, #320]
  46be5c:	mov	x1, #0x1                   	// #1
  46be60:	mov	x0, #0x0                   	// #0
  46be64:	add	x2, x2, x1
  46be68:	str	x2, [x19, #320]
  46be6c:	b	46be24 <_obstack_memory_used@@Base+0xa9dc>
  46be70:	adrp	x20, 482000 <_obstack_memory_used@@Base+0x20bb8>
  46be74:	add	x20, x20, #0x3d0
  46be78:	add	x22, x20, #0x6
  46be7c:	mov	w21, #0x20                  	// #32
  46be80:	ldr	x1, [x19, #256]
  46be84:	b	46beac <_obstack_memory_used@@Base+0xaa64>
  46be88:	mov	x0, x1
  46be8c:	add	x1, x1, #0x1
  46be90:	str	x1, [x19, #256]
  46be94:	add	x20, x20, #0x1
  46be98:	strb	w21, [x19, x0]
  46be9c:	cmp	x22, x20
  46bea0:	strb	w21, [x19, #264]
  46bea4:	b.eq	46bf8c <_obstack_memory_used@@Base+0xab44>  // b.none
  46bea8:	ldrb	w21, [x20]
  46beac:	cmp	x1, #0xff
  46beb0:	b.ne	46be88 <_obstack_memory_used@@Base+0xaa40>  // b.any
  46beb4:	ldp	x3, x2, [x19, #272]
  46beb8:	strb	wzr, [x19, #255]
  46bebc:	mov	x0, x19
  46bec0:	blr	x3
  46bec4:	ldr	x2, [x19, #320]
  46bec8:	mov	x1, #0x1                   	// #1
  46becc:	mov	x0, #0x0                   	// #0
  46bed0:	add	x2, x2, x1
  46bed4:	str	x2, [x19, #320]
  46bed8:	b	46be90 <_obstack_memory_used@@Base+0xaa48>
  46bedc:	ldr	x2, [x2, #8]
  46bee0:	b	46bd68 <_obstack_memory_used@@Base+0xa920>
  46bee4:	ldr	x0, [x19, #256]
  46bee8:	cmp	x0, #0xff
  46beec:	b.eq	46c4a8 <_obstack_memory_used@@Base+0xb060>  // b.none
  46bef0:	add	x1, x0, #0x1
  46bef4:	str	x1, [x19, #256]
  46bef8:	mov	w2, #0x20                  	// #32
  46befc:	strb	w2, [x19, x0]
  46bf00:	strb	w2, [x19, #264]
  46bf04:	b	46c0f4 <_obstack_memory_used@@Base+0xacac>
  46bf08:	ldr	x0, [x19, #256]
  46bf0c:	add	x1, x0, #0x1
  46bf10:	cmp	x0, #0xff
  46bf14:	b.eq	46c500 <_obstack_memory_used@@Base+0xb0b8>  // b.none
  46bf18:	str	x1, [x19, #256]
  46bf1c:	mov	w2, #0x20                  	// #32
  46bf20:	strb	w2, [x19, x0]
  46bf24:	strb	w2, [x19, #264]
  46bf28:	mov	x21, #0x0                   	// #0
  46bf2c:	mov	w20, #0x26                  	// #38
  46bf30:	b	46bf50 <_obstack_memory_used@@Base+0xab08>
  46bf34:	mov	x0, x1
  46bf38:	add	x1, x1, #0x1
  46bf3c:	str	x1, [x19, #256]
  46bf40:	strb	w20, [x19, x0]
  46bf44:	strb	w20, [x19, #264]
  46bf48:	cbnz	x21, 46bf8c <_obstack_memory_used@@Base+0xab44>
  46bf4c:	mov	x21, #0x1                   	// #1
  46bf50:	cmp	x1, #0xff
  46bf54:	b.ne	46bf34 <_obstack_memory_used@@Base+0xaaec>  // b.any
  46bf58:	ldp	x3, x2, [x19, #272]
  46bf5c:	strb	wzr, [x19, #255]
  46bf60:	mov	x0, x19
  46bf64:	blr	x3
  46bf68:	ldr	x2, [x19, #320]
  46bf6c:	mov	x0, #0x0                   	// #0
  46bf70:	mov	x1, #0x1                   	// #1
  46bf74:	str	x1, [x19, #256]
  46bf78:	add	x2, x2, x1
  46bf7c:	str	x2, [x19, #320]
  46bf80:	strb	w20, [x19, x0]
  46bf84:	strb	w20, [x19, #264]
  46bf88:	cbz	x21, 46bf4c <_obstack_memory_used@@Base+0xab04>
  46bf8c:	ldp	x19, x20, [sp, #16]
  46bf90:	ldp	x21, x22, [sp, #32]
  46bf94:	ldp	x29, x30, [sp], #64
  46bf98:	ret
  46bf9c:	ldr	x1, [x19, #256]
  46bfa0:	add	x0, x1, #0x1
  46bfa4:	cmp	x1, #0xff
  46bfa8:	b.eq	46c4d8 <_obstack_memory_used@@Base+0xb090>  // b.none
  46bfac:	str	x0, [x19, #256]
  46bfb0:	mov	w0, #0x20                  	// #32
  46bfb4:	strb	w0, [x19, x1]
  46bfb8:	mov	w1, w21
  46bfbc:	strb	w0, [x19, #264]
  46bfc0:	mov	x0, x19
  46bfc4:	ldr	x2, [x20, #16]
  46bfc8:	ldp	x19, x20, [sp, #16]
  46bfcc:	ldp	x21, x22, [sp, #32]
  46bfd0:	ldp	x29, x30, [sp], #64
  46bfd4:	b	46bca0 <_obstack_memory_used@@Base+0xa858>
  46bfd8:	tbnz	w21, #2, 46bf8c <_obstack_memory_used@@Base+0xab44>
  46bfdc:	ldr	x1, [x19, #256]
  46bfe0:	add	x0, x1, #0x1
  46bfe4:	cmp	x1, #0xff
  46bfe8:	b.ne	46c010 <_obstack_memory_used@@Base+0xabc8>  // b.any
  46bfec:	ldp	x3, x2, [x19, #272]
  46bff0:	strb	wzr, [x19, #255]
  46bff4:	mov	x0, x19
  46bff8:	blr	x3
  46bffc:	ldr	x2, [x19, #320]
  46c000:	mov	x0, #0x1                   	// #1
  46c004:	mov	x1, #0x0                   	// #0
  46c008:	add	x2, x2, x0
  46c00c:	str	x2, [x19, #320]
  46c010:	str	x0, [x19, #256]
  46c014:	mov	w0, #0x2a                  	// #42
  46c018:	strb	w0, [x19, x1]
  46c01c:	strb	w0, [x19, #264]
  46c020:	b	46bf8c <_obstack_memory_used@@Base+0xab44>
  46c024:	ldrb	w0, [x19, #264]
  46c028:	cmp	w0, #0x28
  46c02c:	b.eq	46c074 <_obstack_memory_used@@Base+0xac2c>  // b.none
  46c030:	ldr	x1, [x19, #256]
  46c034:	add	x0, x1, #0x1
  46c038:	cmp	x1, #0xff
  46c03c:	b.ne	46c064 <_obstack_memory_used@@Base+0xac1c>  // b.any
  46c040:	ldp	x3, x2, [x19, #272]
  46c044:	strb	wzr, [x19, #255]
  46c048:	mov	x0, x19
  46c04c:	blr	x3
  46c050:	ldr	x2, [x19, #320]
  46c054:	mov	x0, #0x1                   	// #1
  46c058:	mov	x1, #0x0                   	// #0
  46c05c:	add	x2, x2, x0
  46c060:	str	x2, [x19, #320]
  46c064:	str	x0, [x19, #256]
  46c068:	mov	w0, #0x20                  	// #32
  46c06c:	strb	w0, [x19, x1]
  46c070:	strb	w0, [x19, #264]
  46c074:	ldr	x2, [x20, #8]
  46c078:	mov	w1, w21
  46c07c:	mov	x0, x19
  46c080:	adrp	x20, 482000 <_obstack_memory_used@@Base+0x20bb8>
  46c084:	add	x20, x20, #0x410
  46c088:	mov	w21, #0x3a                  	// #58
  46c08c:	bl	46bca0 <_obstack_memory_used@@Base+0xa858>
  46c090:	add	x22, x20, #0x3
  46c094:	ldr	x1, [x19, #256]
  46c098:	b	46c0c0 <_obstack_memory_used@@Base+0xac78>
  46c09c:	mov	x0, x1
  46c0a0:	add	x1, x1, #0x1
  46c0a4:	str	x1, [x19, #256]
  46c0a8:	add	x20, x20, #0x1
  46c0ac:	strb	w21, [x19, x0]
  46c0b0:	cmp	x22, x20
  46c0b4:	strb	w21, [x19, #264]
  46c0b8:	b.eq	46bf8c <_obstack_memory_used@@Base+0xab44>  // b.none
  46c0bc:	ldrb	w21, [x20]
  46c0c0:	cmp	x1, #0xff
  46c0c4:	b.ne	46c09c <_obstack_memory_used@@Base+0xac54>  // b.any
  46c0c8:	ldp	x3, x2, [x19, #272]
  46c0cc:	strb	wzr, [x19, #255]
  46c0d0:	mov	x0, x19
  46c0d4:	blr	x3
  46c0d8:	ldr	x2, [x19, #320]
  46c0dc:	mov	x1, #0x1                   	// #1
  46c0e0:	mov	x0, #0x0                   	// #0
  46c0e4:	add	x2, x2, x1
  46c0e8:	str	x2, [x19, #320]
  46c0ec:	b	46c0a4 <_obstack_memory_used@@Base+0xac5c>
  46c0f0:	ldr	x1, [x19, #256]
  46c0f4:	cmp	x1, #0xff
  46c0f8:	b.eq	46c480 <_obstack_memory_used@@Base+0xb038>  // b.none
  46c0fc:	add	x0, x1, #0x1
  46c100:	str	x0, [x19, #256]
  46c104:	mov	w0, #0x26                  	// #38
  46c108:	strb	w0, [x19, x1]
  46c10c:	strb	w0, [x19, #264]
  46c110:	ldp	x19, x20, [sp, #16]
  46c114:	ldp	x21, x22, [sp, #32]
  46c118:	ldp	x29, x30, [sp], #64
  46c11c:	ret
  46c120:	adrp	x22, 482000 <_obstack_memory_used@@Base+0x20bb8>
  46c124:	add	x22, x22, #0x3e8
  46c128:	stp	x23, x24, [sp, #48]
  46c12c:	add	x24, x22, #0x6
  46c130:	mov	w23, #0x20                  	// #32
  46c134:	ldr	x1, [x19, #256]
  46c138:	b	46c160 <_obstack_memory_used@@Base+0xad18>
  46c13c:	mov	x0, x1
  46c140:	add	x1, x1, #0x1
  46c144:	str	x1, [x19, #256]
  46c148:	add	x22, x22, #0x1
  46c14c:	strb	w23, [x19, x0]
  46c150:	cmp	x24, x22
  46c154:	strb	w23, [x19, #264]
  46c158:	b.eq	46c3c8 <_obstack_memory_used@@Base+0xaf80>  // b.none
  46c15c:	ldrb	w23, [x22]
  46c160:	cmp	x1, #0xff
  46c164:	b.ne	46c13c <_obstack_memory_used@@Base+0xacf4>  // b.any
  46c168:	ldp	x3, x2, [x19, #272]
  46c16c:	strb	wzr, [x19, #255]
  46c170:	mov	x0, x19
  46c174:	blr	x3
  46c178:	ldr	x2, [x19, #320]
  46c17c:	mov	x1, #0x1                   	// #1
  46c180:	mov	x0, #0x0                   	// #0
  46c184:	add	x2, x2, x1
  46c188:	str	x2, [x19, #320]
  46c18c:	b	46c144 <_obstack_memory_used@@Base+0xacfc>
  46c190:	adrp	x22, 482000 <_obstack_memory_used@@Base+0x20bb8>
  46c194:	add	x22, x22, #0x3d8
  46c198:	stp	x23, x24, [sp, #48]
  46c19c:	add	x24, x22, #0x9
  46c1a0:	mov	w23, #0x20                  	// #32
  46c1a4:	ldr	x1, [x19, #256]
  46c1a8:	b	46c1d0 <_obstack_memory_used@@Base+0xad88>
  46c1ac:	mov	x0, x1
  46c1b0:	add	x1, x1, #0x1
  46c1b4:	str	x1, [x19, #256]
  46c1b8:	add	x22, x22, #0x1
  46c1bc:	strb	w23, [x19, x0]
  46c1c0:	cmp	x22, x24
  46c1c4:	strb	w23, [x19, #264]
  46c1c8:	b.eq	46c3c8 <_obstack_memory_used@@Base+0xaf80>  // b.none
  46c1cc:	ldrb	w23, [x22]
  46c1d0:	cmp	x1, #0xff
  46c1d4:	b.ne	46c1ac <_obstack_memory_used@@Base+0xad64>  // b.any
  46c1d8:	ldp	x3, x2, [x19, #272]
  46c1dc:	strb	wzr, [x19, #255]
  46c1e0:	mov	x0, x19
  46c1e4:	blr	x3
  46c1e8:	ldr	x2, [x19, #320]
  46c1ec:	mov	x1, #0x1                   	// #1
  46c1f0:	mov	x0, #0x0                   	// #0
  46c1f4:	add	x2, x2, x1
  46c1f8:	str	x2, [x19, #320]
  46c1fc:	b	46c1b4 <_obstack_memory_used@@Base+0xad6c>
  46c200:	stp	x23, x24, [sp, #48]
  46c204:	adrp	x24, 482000 <_obstack_memory_used@@Base+0x20bb8>
  46c208:	add	x24, x24, #0x418
  46c20c:	adrp	x22, 482000 <_obstack_memory_used@@Base+0x20bb8>
  46c210:	add	x24, x24, #0xa
  46c214:	add	x22, x22, #0x419
  46c218:	mov	w23, #0x20                  	// #32
  46c21c:	ldr	x1, [x19, #256]
  46c220:	b	46c244 <_obstack_memory_used@@Base+0xadfc>
  46c224:	mov	x0, x1
  46c228:	add	x1, x1, #0x1
  46c22c:	str	x1, [x19, #256]
  46c230:	cmp	x22, x24
  46c234:	strb	w23, [x19, x0]
  46c238:	strb	w23, [x19, #264]
  46c23c:	b.eq	46c478 <_obstack_memory_used@@Base+0xb030>  // b.none
  46c240:	ldrb	w23, [x22], #1
  46c244:	cmp	x1, #0xff
  46c248:	b.ne	46c224 <_obstack_memory_used@@Base+0xaddc>  // b.any
  46c24c:	ldp	x3, x2, [x19, #272]
  46c250:	strb	wzr, [x19, #255]
  46c254:	mov	x0, x19
  46c258:	blr	x3
  46c25c:	ldr	x2, [x19, #320]
  46c260:	mov	x1, #0x1                   	// #1
  46c264:	mov	x0, #0x0                   	// #0
  46c268:	add	x2, x2, x1
  46c26c:	str	x2, [x19, #320]
  46c270:	b	46c22c <_obstack_memory_used@@Base+0xade4>
  46c274:	ldr	x1, [x19, #256]
  46c278:	b	46bf28 <_obstack_memory_used@@Base+0xaae0>
  46c27c:	adrp	x20, 482000 <_obstack_memory_used@@Base+0x20bb8>
  46c280:	add	x20, x20, #0x3f0
  46c284:	add	x22, x20, #0x8
  46c288:	mov	w21, #0x63                  	// #99
  46c28c:	ldr	x1, [x19, #256]
  46c290:	b	46c2b8 <_obstack_memory_used@@Base+0xae70>
  46c294:	mov	x0, x1
  46c298:	add	x1, x1, #0x1
  46c29c:	str	x1, [x19, #256]
  46c2a0:	add	x20, x20, #0x1
  46c2a4:	strb	w21, [x19, x0]
  46c2a8:	cmp	x22, x20
  46c2ac:	strb	w21, [x19, #264]
  46c2b0:	b.eq	46bf8c <_obstack_memory_used@@Base+0xab44>  // b.none
  46c2b4:	ldrb	w21, [x20]
  46c2b8:	cmp	x1, #0xff
  46c2bc:	b.ne	46c294 <_obstack_memory_used@@Base+0xae4c>  // b.any
  46c2c0:	ldp	x3, x2, [x19, #272]
  46c2c4:	strb	wzr, [x19, #255]
  46c2c8:	mov	x0, x19
  46c2cc:	blr	x3
  46c2d0:	ldr	x2, [x19, #320]
  46c2d4:	mov	x1, #0x1                   	// #1
  46c2d8:	mov	x0, #0x0                   	// #0
  46c2dc:	add	x2, x2, x1
  46c2e0:	str	x2, [x19, #320]
  46c2e4:	b	46c29c <_obstack_memory_used@@Base+0xae54>
  46c2e8:	adrp	x22, 482000 <_obstack_memory_used@@Base+0x20bb8>
  46c2ec:	add	x22, x22, #0x400
  46c2f0:	adrp	x20, 482000 <_obstack_memory_used@@Base+0x20bb8>
  46c2f4:	add	x22, x22, #0xa
  46c2f8:	add	x20, x20, #0x401
  46c2fc:	mov	w21, #0x69                  	// #105
  46c300:	ldr	x1, [x19, #256]
  46c304:	b	46c328 <_obstack_memory_used@@Base+0xaee0>
  46c308:	mov	x0, x1
  46c30c:	add	x1, x1, #0x1
  46c310:	str	x1, [x19, #256]
  46c314:	cmp	x20, x22
  46c318:	strb	w21, [x19, x0]
  46c31c:	strb	w21, [x19, #264]
  46c320:	b.eq	46bf8c <_obstack_memory_used@@Base+0xab44>  // b.none
  46c324:	ldrb	w21, [x20], #1
  46c328:	cmp	x1, #0xff
  46c32c:	b.ne	46c308 <_obstack_memory_used@@Base+0xaec0>  // b.any
  46c330:	ldp	x3, x2, [x19, #272]
  46c334:	strb	wzr, [x19, #255]
  46c338:	mov	x0, x19
  46c33c:	blr	x3
  46c340:	ldr	x2, [x19, #320]
  46c344:	mov	x1, #0x1                   	// #1
  46c348:	mov	x0, #0x0                   	// #0
  46c34c:	add	x2, x2, x1
  46c350:	str	x2, [x19, #320]
  46c354:	b	46c310 <_obstack_memory_used@@Base+0xaec8>
  46c358:	adrp	x22, 480000 <_obstack_memory_used@@Base+0x1ebb8>
  46c35c:	add	x22, x22, #0xf00
  46c360:	adrp	x20, 480000 <_obstack_memory_used@@Base+0x1ebb8>
  46c364:	add	x22, x22, #0x11
  46c368:	add	x20, x20, #0xf01
  46c36c:	mov	w21, #0x20                  	// #32
  46c370:	ldr	x1, [x19, #256]
  46c374:	b	46c398 <_obstack_memory_used@@Base+0xaf50>
  46c378:	mov	x0, x1
  46c37c:	add	x1, x1, #0x1
  46c380:	str	x1, [x19, #256]
  46c384:	cmp	x22, x20
  46c388:	strb	w21, [x19, x0]
  46c38c:	strb	w21, [x19, #264]
  46c390:	b.eq	46bf8c <_obstack_memory_used@@Base+0xab44>  // b.none
  46c394:	ldrb	w21, [x20], #1
  46c398:	cmp	x1, #0xff
  46c39c:	b.ne	46c378 <_obstack_memory_used@@Base+0xaf30>  // b.any
  46c3a0:	ldp	x3, x2, [x19, #272]
  46c3a4:	strb	wzr, [x19, #255]
  46c3a8:	mov	x0, x19
  46c3ac:	blr	x3
  46c3b0:	ldr	x2, [x19, #320]
  46c3b4:	mov	x1, #0x1                   	// #1
  46c3b8:	mov	x0, #0x0                   	// #0
  46c3bc:	add	x2, x2, x1
  46c3c0:	str	x2, [x19, #320]
  46c3c4:	b	46c380 <_obstack_memory_used@@Base+0xaf38>
  46c3c8:	ldr	x2, [x20, #16]
  46c3cc:	cbz	x2, 46c52c <_obstack_memory_used@@Base+0xb0e4>
  46c3d0:	add	x0, x1, #0x1
  46c3d4:	cmp	x1, #0xff
  46c3d8:	b.ne	46c404 <_obstack_memory_used@@Base+0xafbc>  // b.any
  46c3dc:	ldp	x3, x2, [x19, #272]
  46c3e0:	strb	wzr, [x19, #255]
  46c3e4:	mov	x0, x19
  46c3e8:	blr	x3
  46c3ec:	ldr	x3, [x19, #320]
  46c3f0:	mov	x0, #0x1                   	// #1
  46c3f4:	mov	x1, #0x0                   	// #0
  46c3f8:	add	x3, x3, x0
  46c3fc:	ldr	x2, [x20, #16]
  46c400:	str	x3, [x19, #320]
  46c404:	str	x0, [x19, #256]
  46c408:	mov	w0, #0x28                  	// #40
  46c40c:	strb	w0, [x19, x1]
  46c410:	strb	w0, [x19, #264]
  46c414:	mov	w1, w21
  46c418:	mov	x0, x19
  46c41c:	bl	46bca0 <_obstack_memory_used@@Base+0xa858>
  46c420:	ldr	x1, [x19, #256]
  46c424:	add	x0, x1, #0x1
  46c428:	cmp	x1, #0xff
  46c42c:	b.ne	46c454 <_obstack_memory_used@@Base+0xb00c>  // b.any
  46c430:	ldp	x3, x2, [x19, #272]
  46c434:	strb	wzr, [x19, #255]
  46c438:	mov	x0, x19
  46c43c:	blr	x3
  46c440:	ldr	x2, [x19, #320]
  46c444:	mov	x0, #0x1                   	// #1
  46c448:	mov	x1, #0x0                   	// #0
  46c44c:	add	x2, x2, x0
  46c450:	str	x2, [x19, #320]
  46c454:	str	x0, [x19, #256]
  46c458:	mov	w0, #0x29                  	// #41
  46c45c:	strb	w0, [x19, x1]
  46c460:	strb	w0, [x19, #264]
  46c464:	ldp	x19, x20, [sp, #16]
  46c468:	ldp	x21, x22, [sp, #32]
  46c46c:	ldp	x23, x24, [sp, #48]
  46c470:	ldp	x29, x30, [sp], #64
  46c474:	ret
  46c478:	ldr	x2, [x20, #8]
  46c47c:	b	46c414 <_obstack_memory_used@@Base+0xafcc>
  46c480:	ldp	x3, x2, [x19, #272]
  46c484:	strb	wzr, [x19, #255]
  46c488:	mov	x0, x19
  46c48c:	blr	x3
  46c490:	ldr	x2, [x19, #320]
  46c494:	mov	x0, #0x1                   	// #1
  46c498:	mov	x1, #0x0                   	// #0
  46c49c:	add	x2, x2, x0
  46c4a0:	str	x2, [x19, #320]
  46c4a4:	b	46c100 <_obstack_memory_used@@Base+0xacb8>
  46c4a8:	ldp	x3, x2, [x19, #272]
  46c4ac:	strb	wzr, [x19, #255]
  46c4b0:	mov	x1, x0
  46c4b4:	mov	x0, x19
  46c4b8:	blr	x3
  46c4bc:	ldr	x0, [x19, #320]
  46c4c0:	mov	w2, #0x20                  	// #32
  46c4c4:	mov	x1, #0x1                   	// #1
  46c4c8:	strb	w2, [x19]
  46c4cc:	add	x0, x0, x1
  46c4d0:	str	x0, [x19, #320]
  46c4d4:	b	46c0fc <_obstack_memory_used@@Base+0xacb4>
  46c4d8:	ldp	x3, x2, [x19, #272]
  46c4dc:	strb	wzr, [x19, #255]
  46c4e0:	mov	x0, x19
  46c4e4:	blr	x3
  46c4e8:	ldr	x2, [x19, #320]
  46c4ec:	mov	x0, #0x1                   	// #1
  46c4f0:	mov	x1, #0x0                   	// #0
  46c4f4:	add	x2, x2, x0
  46c4f8:	str	x2, [x19, #320]
  46c4fc:	b	46bfac <_obstack_memory_used@@Base+0xab64>
  46c500:	ldp	x3, x2, [x19, #272]
  46c504:	strb	wzr, [x19, #255]
  46c508:	mov	x1, x0
  46c50c:	mov	x0, x19
  46c510:	blr	x3
  46c514:	ldr	x2, [x19, #320]
  46c518:	mov	x1, #0x1                   	// #1
  46c51c:	mov	x0, #0x0                   	// #0
  46c520:	add	x2, x2, x1
  46c524:	str	x2, [x19, #320]
  46c528:	b	46bf18 <_obstack_memory_used@@Base+0xaad0>
  46c52c:	ldp	x23, x24, [sp, #48]
  46c530:	b	46bf8c <_obstack_memory_used@@Base+0xab44>
  46c534:	nop
  46c538:	stp	x29, x30, [sp, #-64]!
  46c53c:	mov	x29, sp
  46c540:	stp	x19, x20, [sp, #16]
  46c544:	mov	x19, x0
  46c548:	mov	x20, x3
  46c54c:	stp	x21, x22, [sp, #32]
  46c550:	mov	x21, x2
  46c554:	stp	x23, x24, [sp, #48]
  46c558:	mov	w23, w1
  46c55c:	cbz	x3, 46c5a0 <_obstack_memory_used@@Base+0xb158>
  46c560:	mov	x2, #0xe000000             	// #234881024
  46c564:	mov	x4, #0x1                   	// #1
  46c568:	movk	x2, #0x862, lsl #32
  46c56c:	ldr	w0, [x3, #16]
  46c570:	cbnz	w0, 46c5a0 <_obstack_memory_used@@Base+0xb158>
  46c574:	ldr	x0, [x3, #8]
  46c578:	ldr	w0, [x0]
  46c57c:	cmp	w0, #0x2b
  46c580:	b.hi	46c598 <_obstack_memory_used@@Base+0xb150>  // b.pmore
  46c584:	lsl	x0, x4, x0
  46c588:	tst	x0, x2
  46c58c:	b.ne	46c668 <_obstack_memory_used@@Base+0xb220>  // b.any
  46c590:	tst	x0, #0x1c00000000
  46c594:	b.ne	46c734 <_obstack_memory_used@@Base+0xb2ec>  // b.any
  46c598:	ldr	x3, [x3]
  46c59c:	cbnz	x3, 46c56c <_obstack_memory_used@@Base+0xb124>
  46c5a0:	ldr	x22, [x19, #296]
  46c5a4:	str	xzr, [x19, #296]
  46c5a8:	mov	w1, w23
  46c5ac:	mov	x2, x20
  46c5b0:	mov	x0, x19
  46c5b4:	mov	w3, #0x0                   	// #0
  46c5b8:	bl	46c7e8 <_obstack_memory_used@@Base+0xb3a0>
  46c5bc:	ldr	x1, [x19, #256]
  46c5c0:	cmp	x1, #0xff
  46c5c4:	b.eq	46c6f8 <_obstack_memory_used@@Base+0xb2b0>  // b.none
  46c5c8:	add	x0, x1, #0x1
  46c5cc:	str	x0, [x19, #256]
  46c5d0:	mov	w2, #0x28                  	// #40
  46c5d4:	strb	w2, [x19, x1]
  46c5d8:	strb	w2, [x19, #264]
  46c5dc:	ldr	x2, [x21]
  46c5e0:	cbz	x2, 46c5f4 <_obstack_memory_used@@Base+0xb1ac>
  46c5e4:	mov	x0, x19
  46c5e8:	mov	w1, w23
  46c5ec:	bl	46bca0 <_obstack_memory_used@@Base+0xa858>
  46c5f0:	ldr	x0, [x19, #256]
  46c5f4:	cmp	x0, #0xff
  46c5f8:	b.eq	46c63c <_obstack_memory_used@@Base+0xb1f4>  // b.none
  46c5fc:	add	x1, x0, #0x1
  46c600:	str	x1, [x19, #256]
  46c604:	mov	w3, #0x29                  	// #41
  46c608:	strb	w3, [x19, x0]
  46c60c:	mov	x2, x20
  46c610:	strb	w3, [x19, #264]
  46c614:	mov	w1, w23
  46c618:	mov	x0, x19
  46c61c:	mov	w3, #0x1                   	// #1
  46c620:	bl	46c7e8 <_obstack_memory_used@@Base+0xb3a0>
  46c624:	ldp	x23, x24, [sp, #48]
  46c628:	str	x22, [x19, #296]
  46c62c:	ldp	x19, x20, [sp, #16]
  46c630:	ldp	x21, x22, [sp, #32]
  46c634:	ldp	x29, x30, [sp], #64
  46c638:	ret
  46c63c:	ldp	x3, x2, [x19, #272]
  46c640:	strb	wzr, [x19, #255]
  46c644:	mov	x1, x0
  46c648:	mov	x0, x19
  46c64c:	blr	x3
  46c650:	ldr	x2, [x19, #320]
  46c654:	mov	x1, #0x1                   	// #1
  46c658:	mov	x0, #0x0                   	// #0
  46c65c:	add	x2, x2, x1
  46c660:	str	x2, [x19, #320]
  46c664:	b	46c600 <_obstack_memory_used@@Base+0xb1b8>
  46c668:	ldrb	w0, [x19, #264]
  46c66c:	ldr	x1, [x19, #256]
  46c670:	cmp	w0, #0x20
  46c674:	b.eq	46c698 <_obstack_memory_used@@Base+0xb250>  // b.none
  46c678:	cmp	x1, #0xff
  46c67c:	b.eq	46c778 <_obstack_memory_used@@Base+0xb330>  // b.none
  46c680:	add	x2, x1, #0x1
  46c684:	str	x2, [x19, #256]
  46c688:	mov	w0, #0x20                  	// #32
  46c68c:	strb	w0, [x19, x1]
  46c690:	mov	x1, x2
  46c694:	strb	w0, [x19, #264]
  46c698:	cmp	x1, #0xff
  46c69c:	b.eq	46c750 <_obstack_memory_used@@Base+0xb308>  // b.none
  46c6a0:	add	x0, x1, #0x1
  46c6a4:	str	x0, [x19, #256]
  46c6a8:	mov	w24, #0x28                  	// #40
  46c6ac:	strb	w24, [x19, x1]
  46c6b0:	mov	x0, x19
  46c6b4:	strb	w24, [x19, #264]
  46c6b8:	mov	x2, x20
  46c6bc:	ldr	x22, [x19, #296]
  46c6c0:	str	xzr, [x19, #296]
  46c6c4:	mov	w1, w23
  46c6c8:	mov	w3, #0x0                   	// #0
  46c6cc:	bl	46c7e8 <_obstack_memory_used@@Base+0xb3a0>
  46c6d0:	ldr	x0, [x19, #256]
  46c6d4:	cmp	x0, #0xff
  46c6d8:	b.eq	46c7a4 <_obstack_memory_used@@Base+0xb35c>  // b.none
  46c6dc:	add	x1, x0, #0x1
  46c6e0:	str	x1, [x19, #256]
  46c6e4:	mov	w2, #0x29                  	// #41
  46c6e8:	strb	w2, [x19, x0]
  46c6ec:	strb	w2, [x19, #264]
  46c6f0:	cmp	x1, #0xff
  46c6f4:	b.ne	46c5c8 <_obstack_memory_used@@Base+0xb180>  // b.any
  46c6f8:	ldp	x3, x2, [x19, #272]
  46c6fc:	strb	wzr, [x19, #255]
  46c700:	mov	x0, x19
  46c704:	blr	x3
  46c708:	mov	w1, #0x28                  	// #40
  46c70c:	strb	w1, [x19]
  46c710:	strb	w1, [x19, #264]
  46c714:	mov	x0, #0x1                   	// #1
  46c718:	ldr	x1, [x19, #320]
  46c71c:	ldr	x2, [x21]
  46c720:	add	x1, x1, x0
  46c724:	str	x0, [x19, #256]
  46c728:	str	x1, [x19, #320]
  46c72c:	cbnz	x2, 46c5e4 <_obstack_memory_used@@Base+0xb19c>
  46c730:	b	46c5fc <_obstack_memory_used@@Base+0xb1b4>
  46c734:	ldrb	w0, [x19, #264]
  46c738:	ldr	x1, [x19, #256]
  46c73c:	and	w2, w0, #0xfffffffd
  46c740:	cmp	w2, #0x28
  46c744:	b.ne	46c670 <_obstack_memory_used@@Base+0xb228>  // b.any
  46c748:	cmp	x1, #0xff
  46c74c:	b.ne	46c6a0 <_obstack_memory_used@@Base+0xb258>  // b.any
  46c750:	ldp	x3, x2, [x19, #272]
  46c754:	strb	wzr, [x19, #255]
  46c758:	mov	x0, x19
  46c75c:	blr	x3
  46c760:	ldr	x2, [x19, #320]
  46c764:	mov	x0, #0x1                   	// #1
  46c768:	mov	x1, #0x0                   	// #0
  46c76c:	add	x2, x2, x0
  46c770:	str	x2, [x19, #320]
  46c774:	b	46c6a4 <_obstack_memory_used@@Base+0xb25c>
  46c778:	ldp	x3, x2, [x19, #272]
  46c77c:	strb	wzr, [x19, #255]
  46c780:	mov	x0, x19
  46c784:	blr	x3
  46c788:	ldr	x0, [x19, #320]
  46c78c:	mov	w2, #0x20                  	// #32
  46c790:	mov	x1, #0x1                   	// #1
  46c794:	strb	w2, [x19]
  46c798:	add	x0, x0, x1
  46c79c:	str	x0, [x19, #320]
  46c7a0:	b	46c6a0 <_obstack_memory_used@@Base+0xb258>
  46c7a4:	ldp	x3, x2, [x19, #272]
  46c7a8:	strb	wzr, [x19, #255]
  46c7ac:	mov	x1, x0
  46c7b0:	mov	x0, x19
  46c7b4:	blr	x3
  46c7b8:	strb	w24, [x19, #264]
  46c7bc:	mov	w0, #0x2829                	// #10281
  46c7c0:	strh	w0, [x19]
  46c7c4:	ldr	x1, [x19, #320]
  46c7c8:	mov	x0, #0x2                   	// #2
  46c7cc:	ldr	x2, [x21]
  46c7d0:	add	x1, x1, #0x1
  46c7d4:	str	x0, [x19, #256]
  46c7d8:	str	x1, [x19, #320]
  46c7dc:	cbnz	x2, 46c5e4 <_obstack_memory_used@@Base+0xb19c>
  46c7e0:	b	46c5fc <_obstack_memory_used@@Base+0xb1b4>
  46c7e4:	nop
  46c7e8:	cbz	x2, 46ca44 <_obstack_memory_used@@Base+0xb5fc>
  46c7ec:	stp	x29, x30, [sp, #-112]!
  46c7f0:	mov	x29, sp
  46c7f4:	stp	x23, x24, [sp, #48]
  46c7f8:	mov	x24, #0x1f                  	// #31
  46c7fc:	movk	x24, #0x1a, lsl #48
  46c800:	stp	x19, x20, [sp, #16]
  46c804:	mov	w20, w1
  46c808:	mov	x19, x2
  46c80c:	stp	x21, x22, [sp, #32]
  46c810:	mov	w21, w3
  46c814:	mov	w22, #0x1                   	// #1
  46c818:	stp	x25, x26, [sp, #64]
  46c81c:	mov	x26, x0
  46c820:	mov	x25, #0x1                   	// #1
  46c824:	b	46c868 <_obstack_memory_used@@Base+0xb420>
  46c828:	ldr	x1, [x19, #24]
  46c82c:	cmp	w5, #0x29
  46c830:	ldr	x23, [x26, #288]
  46c834:	str	w22, [x19, #16]
  46c838:	str	x1, [x26, #288]
  46c83c:	b.eq	46c8b4 <_obstack_memory_used@@Base+0xb46c>  // b.none
  46c840:	cmp	w5, #0x2a
  46c844:	b.eq	46c8e4 <_obstack_memory_used@@Base+0xb49c>  // b.none
  46c848:	cmp	w5, #0x2
  46c84c:	b.eq	46c914 <_obstack_memory_used@@Base+0xb4cc>  // b.none
  46c850:	mov	w1, w20
  46c854:	mov	x0, x26
  46c858:	bl	46bd38 <_obstack_memory_used@@Base+0xa8f0>
  46c85c:	str	x23, [x26, #288]
  46c860:	ldr	x19, [x19]
  46c864:	cbz	x19, 46c8cc <_obstack_memory_used@@Base+0xb484>
  46c868:	ldr	w2, [x26, #304]
  46c86c:	cbnz	w2, 46c8cc <_obstack_memory_used@@Base+0xb484>
  46c870:	ldr	w2, [x19, #16]
  46c874:	cbnz	w2, 46c860 <_obstack_memory_used@@Base+0xb418>
  46c878:	ldr	x2, [x19, #8]
  46c87c:	ldr	w5, [x2]
  46c880:	cbnz	w21, 46c828 <_obstack_memory_used@@Base+0xb3e0>
  46c884:	sub	w4, w5, #0x1c
  46c888:	cmp	w4, #0x34
  46c88c:	b.hi	46c828 <_obstack_memory_used@@Base+0xb3e0>  // b.pmore
  46c890:	lsl	x4, x25, x4
  46c894:	tst	x4, x24
  46c898:	b.ne	46c860 <_obstack_memory_used@@Base+0xb418>  // b.any
  46c89c:	ldr	x1, [x19, #24]
  46c8a0:	cmp	w5, #0x29
  46c8a4:	ldr	x23, [x26, #288]
  46c8a8:	str	w22, [x19, #16]
  46c8ac:	str	x1, [x26, #288]
  46c8b0:	b.ne	46c840 <_obstack_memory_used@@Base+0xb3f8>  // b.any
  46c8b4:	ldr	x3, [x19]
  46c8b8:	add	x2, x2, #0x10
  46c8bc:	mov	w1, w20
  46c8c0:	mov	x0, x26
  46c8c4:	bl	46c538 <_obstack_memory_used@@Base+0xb0f0>
  46c8c8:	str	x23, [x26, #288]
  46c8cc:	ldp	x19, x20, [sp, #16]
  46c8d0:	ldp	x21, x22, [sp, #32]
  46c8d4:	ldp	x23, x24, [sp, #48]
  46c8d8:	ldp	x25, x26, [sp, #64]
  46c8dc:	ldp	x29, x30, [sp], #112
  46c8e0:	ret
  46c8e4:	ldr	x3, [x19]
  46c8e8:	mov	w1, w20
  46c8ec:	mov	x0, x26
  46c8f0:	add	x2, x2, #0x8
  46c8f4:	bl	46cbb8 <_obstack_memory_used@@Base+0xb770>
  46c8f8:	str	x23, [x26, #288]
  46c8fc:	ldp	x19, x20, [sp, #16]
  46c900:	ldp	x21, x22, [sp, #32]
  46c904:	ldp	x23, x24, [sp, #48]
  46c908:	ldp	x25, x26, [sp, #64]
  46c90c:	ldp	x29, x30, [sp], #112
  46c910:	ret
  46c914:	ldr	x2, [x2, #8]
  46c918:	mov	w1, w20
  46c91c:	ldr	x21, [x26, #296]
  46c920:	str	xzr, [x26, #296]
  46c924:	mov	x0, x26
  46c928:	bl	46bca0 <_obstack_memory_used@@Base+0xa858>
  46c92c:	str	x21, [x26, #296]
  46c930:	tbz	w20, #2, 46c9e8 <_obstack_memory_used@@Base+0xb5a0>
  46c934:	ldr	x1, [x26, #256]
  46c938:	add	x0, x1, #0x1
  46c93c:	cmp	x1, #0xff
  46c940:	b.ne	46c968 <_obstack_memory_used@@Base+0xb520>  // b.any
  46c944:	ldp	x3, x2, [x26, #272]
  46c948:	strb	wzr, [x26, #255]
  46c94c:	mov	x0, x26
  46c950:	blr	x3
  46c954:	ldr	x2, [x26, #320]
  46c958:	mov	x0, #0x1                   	// #1
  46c95c:	mov	x1, #0x0                   	// #0
  46c960:	add	x2, x2, x0
  46c964:	str	x2, [x26, #320]
  46c968:	str	x0, [x26, #256]
  46c96c:	mov	w0, #0x2e                  	// #46
  46c970:	strb	w0, [x26, x1]
  46c974:	strb	w0, [x26, #264]
  46c978:	ldr	x0, [x19, #8]
  46c97c:	ldr	x21, [x0, #16]
  46c980:	ldr	w2, [x21]
  46c984:	cmp	w2, #0x47
  46c988:	b.eq	46ca48 <_obstack_memory_used@@Base+0xb600>  // b.none
  46c98c:	mov	x1, #0x1f                  	// #31
  46c990:	mov	x3, #0x1                   	// #1
  46c994:	movk	x1, #0x1a, lsl #48
  46c998:	sub	w2, w2, #0x1c
  46c99c:	cmp	w2, #0x34
  46c9a0:	b.hi	46c9b0 <_obstack_memory_used@@Base+0xb568>  // b.pmore
  46c9a4:	lsl	x2, x3, x2
  46c9a8:	tst	x2, x1
  46c9ac:	b.ne	46c9dc <_obstack_memory_used@@Base+0xb594>  // b.any
  46c9b0:	mov	x2, x21
  46c9b4:	mov	w1, w20
  46c9b8:	mov	x0, x26
  46c9bc:	bl	46bca0 <_obstack_memory_used@@Base+0xa858>
  46c9c0:	str	x23, [x26, #288]
  46c9c4:	ldp	x19, x20, [sp, #16]
  46c9c8:	ldp	x21, x22, [sp, #32]
  46c9cc:	ldp	x23, x24, [sp, #48]
  46c9d0:	ldp	x25, x26, [sp, #64]
  46c9d4:	ldp	x29, x30, [sp], #112
  46c9d8:	ret
  46c9dc:	ldr	x21, [x21, #8]
  46c9e0:	ldr	w2, [x21]
  46c9e4:	b	46c998 <_obstack_memory_used@@Base+0xb550>
  46c9e8:	mov	x22, #0x0                   	// #0
  46c9ec:	mov	w21, #0x3a                  	// #58
  46c9f0:	ldr	x1, [x26, #256]
  46c9f4:	b	46ca14 <_obstack_memory_used@@Base+0xb5cc>
  46c9f8:	mov	x0, x1
  46c9fc:	add	x1, x1, #0x1
  46ca00:	str	x1, [x26, #256]
  46ca04:	strb	w21, [x26, x0]
  46ca08:	strb	w21, [x26, #264]
  46ca0c:	cbnz	x22, 46c978 <_obstack_memory_used@@Base+0xb530>
  46ca10:	mov	x22, #0x1                   	// #1
  46ca14:	cmp	x1, #0xff
  46ca18:	b.ne	46c9f8 <_obstack_memory_used@@Base+0xb5b0>  // b.any
  46ca1c:	ldp	x3, x2, [x26, #272]
  46ca20:	strb	wzr, [x26, #255]
  46ca24:	mov	x0, x26
  46ca28:	blr	x3
  46ca2c:	ldr	x2, [x26, #320]
  46ca30:	mov	x1, #0x1                   	// #1
  46ca34:	mov	x0, #0x0                   	// #0
  46ca38:	add	x2, x2, x1
  46ca3c:	str	x2, [x26, #320]
  46ca40:	b	46ca00 <_obstack_memory_used@@Base+0xb5b8>
  46ca44:	ret
  46ca48:	adrp	x24, 482000 <_obstack_memory_used@@Base+0x20bb8>
  46ca4c:	add	x24, x24, #0x2b0
  46ca50:	adrp	x22, 482000 <_obstack_memory_used@@Base+0x20bb8>
  46ca54:	add	x24, x24, #0xd
  46ca58:	add	x22, x22, #0x2b1
  46ca5c:	mov	w19, #0x7b                  	// #123
  46ca60:	ldr	x1, [x26, #256]
  46ca64:	b	46ca88 <_obstack_memory_used@@Base+0xb640>
  46ca68:	mov	x0, x1
  46ca6c:	add	x1, x1, #0x1
  46ca70:	str	x1, [x26, #256]
  46ca74:	cmp	x22, x24
  46ca78:	strb	w19, [x26, x0]
  46ca7c:	strb	w19, [x26, #264]
  46ca80:	b.eq	46cab8 <_obstack_memory_used@@Base+0xb670>  // b.none
  46ca84:	ldrb	w19, [x22], #1
  46ca88:	cmp	x1, #0xff
  46ca8c:	b.ne	46ca68 <_obstack_memory_used@@Base+0xb620>  // b.any
  46ca90:	ldp	x3, x2, [x26, #272]
  46ca94:	strb	wzr, [x26, #255]
  46ca98:	mov	x0, x26
  46ca9c:	blr	x3
  46caa0:	ldr	x2, [x26, #320]
  46caa4:	mov	x1, #0x1                   	// #1
  46caa8:	mov	x0, #0x0                   	// #0
  46caac:	add	x2, x2, x1
  46cab0:	str	x2, [x26, #320]
  46cab4:	b	46ca70 <_obstack_memory_used@@Base+0xb628>
  46cab8:	ldr	w2, [x21, #16]
  46cabc:	adrp	x1, 473000 <_obstack_memory_used@@Base+0x11bb8>
  46cac0:	add	x1, x1, #0x1f8
  46cac4:	add	x19, sp, #0x50
  46cac8:	add	w2, w2, #0x1
  46cacc:	mov	x0, x19
  46cad0:	bl	4025b0 <sprintf@plt>
  46cad4:	mov	x0, x19
  46cad8:	bl	4024f0 <strlen@plt>
  46cadc:	ldr	x1, [x26, #256]
  46cae0:	cbz	x0, 46cb40 <_obstack_memory_used@@Base+0xb6f8>
  46cae4:	add	x24, x19, x0
  46cae8:	b	46cb0c <_obstack_memory_used@@Base+0xb6c4>
  46caec:	mov	x0, x1
  46caf0:	add	x1, x1, #0x1
  46caf4:	str	x1, [x26, #256]
  46caf8:	add	x19, x19, #0x1
  46cafc:	strb	w22, [x26, x0]
  46cb00:	cmp	x24, x19
  46cb04:	strb	w22, [x26, #264]
  46cb08:	b.eq	46cb40 <_obstack_memory_used@@Base+0xb6f8>  // b.none
  46cb0c:	ldrb	w22, [x19]
  46cb10:	cmp	x1, #0xff
  46cb14:	b.ne	46caec <_obstack_memory_used@@Base+0xb6a4>  // b.any
  46cb18:	ldp	x3, x2, [x26, #272]
  46cb1c:	strb	wzr, [x26, #255]
  46cb20:	mov	x0, x26
  46cb24:	blr	x3
  46cb28:	ldr	x2, [x26, #320]
  46cb2c:	mov	x1, #0x1                   	// #1
  46cb30:	mov	x0, #0x0                   	// #0
  46cb34:	add	x2, x2, x1
  46cb38:	str	x2, [x26, #320]
  46cb3c:	b	46caf4 <_obstack_memory_used@@Base+0xb6ac>
  46cb40:	adrp	x19, 482000 <_obstack_memory_used@@Base+0x20bb8>
  46cb44:	add	x19, x19, #0x2c0
  46cb48:	add	x24, x19, #0x3
  46cb4c:	mov	w22, #0x7d                  	// #125
  46cb50:	b	46cb78 <_obstack_memory_used@@Base+0xb730>
  46cb54:	mov	x0, x1
  46cb58:	add	x1, x1, #0x1
  46cb5c:	str	x1, [x26, #256]
  46cb60:	add	x19, x19, #0x1
  46cb64:	strb	w22, [x26, x0]
  46cb68:	cmp	x24, x19
  46cb6c:	strb	w22, [x26, #264]
  46cb70:	b.eq	46cba8 <_obstack_memory_used@@Base+0xb760>  // b.none
  46cb74:	ldrb	w22, [x19]
  46cb78:	cmp	x1, #0xff
  46cb7c:	b.ne	46cb54 <_obstack_memory_used@@Base+0xb70c>  // b.any
  46cb80:	ldp	x3, x2, [x26, #272]
  46cb84:	strb	wzr, [x26, #255]
  46cb88:	mov	x0, x26
  46cb8c:	blr	x3
  46cb90:	ldr	x2, [x26, #320]
  46cb94:	mov	x1, #0x1                   	// #1
  46cb98:	mov	x0, #0x0                   	// #0
  46cb9c:	add	x2, x2, x1
  46cba0:	str	x2, [x26, #320]
  46cba4:	b	46cb5c <_obstack_memory_used@@Base+0xb714>
  46cba8:	ldr	x21, [x21, #8]
  46cbac:	ldr	w2, [x21]
  46cbb0:	b	46c98c <_obstack_memory_used@@Base+0xb544>
  46cbb4:	nop
  46cbb8:	stp	x29, x30, [sp, #-64]!
  46cbbc:	mov	x29, sp
  46cbc0:	stp	x19, x20, [sp, #16]
  46cbc4:	mov	x19, x0
  46cbc8:	mov	x20, x3
  46cbcc:	stp	x21, x22, [sp, #32]
  46cbd0:	mov	x0, x3
  46cbd4:	mov	w21, w1
  46cbd8:	stp	x23, x24, [sp, #48]
  46cbdc:	mov	x22, x2
  46cbe0:	cbz	x3, 46cc0c <_obstack_memory_used@@Base+0xb7c4>
  46cbe4:	nop
  46cbe8:	ldr	w4, [x0, #16]
  46cbec:	cbz	w4, 46ccf8 <_obstack_memory_used@@Base+0xb8b0>
  46cbf0:	ldr	x0, [x0]
  46cbf4:	cbnz	x0, 46cbe8 <_obstack_memory_used@@Base+0xb7a0>
  46cbf8:	mov	x2, x20
  46cbfc:	mov	w1, w21
  46cc00:	mov	x0, x19
  46cc04:	mov	w3, #0x0                   	// #0
  46cc08:	bl	46c7e8 <_obstack_memory_used@@Base+0xb3a0>
  46cc0c:	ldr	x23, [x19, #256]
  46cc10:	cmp	x23, #0xff
  46cc14:	b.eq	46cd24 <_obstack_memory_used@@Base+0xb8dc>  // b.none
  46cc18:	add	x1, x23, #0x1
  46cc1c:	str	x1, [x19, #256]
  46cc20:	mov	w0, #0x20                  	// #32
  46cc24:	strb	w0, [x19, x23]
  46cc28:	strb	w0, [x19, #264]
  46cc2c:	cmp	x1, #0xff
  46cc30:	b.eq	46ccbc <_obstack_memory_used@@Base+0xb874>  // b.none
  46cc34:	add	x0, x1, #0x1
  46cc38:	str	x0, [x19, #256]
  46cc3c:	mov	w2, #0x5b                  	// #91
  46cc40:	strb	w2, [x19, x1]
  46cc44:	strb	w2, [x19, #264]
  46cc48:	ldr	x2, [x22]
  46cc4c:	cbz	x2, 46cc60 <_obstack_memory_used@@Base+0xb818>
  46cc50:	mov	x0, x19
  46cc54:	mov	w1, w21
  46cc58:	bl	46bca0 <_obstack_memory_used@@Base+0xa858>
  46cc5c:	ldr	x0, [x19, #256]
  46cc60:	cmp	x0, #0xff
  46cc64:	b.eq	46cc90 <_obstack_memory_used@@Base+0xb848>  // b.none
  46cc68:	add	x1, x0, #0x1
  46cc6c:	str	x1, [x19, #256]
  46cc70:	mov	w1, #0x5d                  	// #93
  46cc74:	strb	w1, [x19, x0]
  46cc78:	strb	w1, [x19, #264]
  46cc7c:	ldp	x19, x20, [sp, #16]
  46cc80:	ldp	x21, x22, [sp, #32]
  46cc84:	ldp	x23, x24, [sp, #48]
  46cc88:	ldp	x29, x30, [sp], #64
  46cc8c:	ret
  46cc90:	ldp	x3, x2, [x19, #272]
  46cc94:	strb	wzr, [x19, #255]
  46cc98:	mov	x1, x0
  46cc9c:	mov	x0, x19
  46cca0:	blr	x3
  46cca4:	ldr	x2, [x19, #320]
  46cca8:	mov	x1, #0x1                   	// #1
  46ccac:	mov	x0, #0x0                   	// #0
  46ccb0:	add	x2, x2, x1
  46ccb4:	str	x2, [x19, #320]
  46ccb8:	b	46cc6c <_obstack_memory_used@@Base+0xb824>
  46ccbc:	ldp	x3, x2, [x19, #272]
  46ccc0:	strb	wzr, [x19, #255]
  46ccc4:	mov	x0, x19
  46ccc8:	blr	x3
  46cccc:	mov	w1, #0x5b                  	// #91
  46ccd0:	strb	w1, [x19]
  46ccd4:	strb	w1, [x19, #264]
  46ccd8:	mov	x0, #0x1                   	// #1
  46ccdc:	ldr	x1, [x19, #320]
  46cce0:	ldr	x2, [x22]
  46cce4:	add	x1, x1, x0
  46cce8:	str	x0, [x19, #256]
  46ccec:	str	x1, [x19, #320]
  46ccf0:	cbnz	x2, 46cc50 <_obstack_memory_used@@Base+0xb808>
  46ccf4:	b	46cc68 <_obstack_memory_used@@Base+0xb820>
  46ccf8:	ldr	x0, [x0, #8]
  46ccfc:	ldr	w0, [x0]
  46cd00:	cmp	w0, #0x2a
  46cd04:	b.ne	46cd68 <_obstack_memory_used@@Base+0xb920>  // b.any
  46cd08:	mov	w1, w21
  46cd0c:	mov	x2, x20
  46cd10:	mov	x0, x19
  46cd14:	mov	w3, #0x0                   	// #0
  46cd18:	bl	46c7e8 <_obstack_memory_used@@Base+0xb3a0>
  46cd1c:	ldr	x1, [x19, #256]
  46cd20:	b	46cc2c <_obstack_memory_used@@Base+0xb7e4>
  46cd24:	ldp	x3, x2, [x19, #272]
  46cd28:	strb	wzr, [x19, #255]
  46cd2c:	mov	x1, x23
  46cd30:	mov	x0, x19
  46cd34:	blr	x3
  46cd38:	mov	w1, #0x5b20                	// #23328
  46cd3c:	mov	w0, #0x5b                  	// #91
  46cd40:	strh	w1, [x19]
  46cd44:	strb	w0, [x19, #264]
  46cd48:	mov	x0, #0x2                   	// #2
  46cd4c:	ldr	x1, [x19, #320]
  46cd50:	ldr	x2, [x22]
  46cd54:	add	x1, x1, #0x1
  46cd58:	str	x0, [x19, #256]
  46cd5c:	str	x1, [x19, #320]
  46cd60:	cbnz	x2, 46cc50 <_obstack_memory_used@@Base+0xb808>
  46cd64:	b	46cc68 <_obstack_memory_used@@Base+0xb820>
  46cd68:	mov	w24, #0x20                  	// #32
  46cd6c:	mov	x23, #0x0                   	// #0
  46cd70:	ldr	x1, [x19, #256]
  46cd74:	b	46cd9c <_obstack_memory_used@@Base+0xb954>
  46cd78:	mov	x0, x1
  46cd7c:	add	x1, x1, #0x1
  46cd80:	str	x1, [x19, #256]
  46cd84:	cmp	x23, #0x1
  46cd88:	strb	w24, [x19, x0]
  46cd8c:	strb	w24, [x19, #264]
  46cd90:	mov	w24, #0x28                  	// #40
  46cd94:	b.eq	46cde0 <_obstack_memory_used@@Base+0xb998>  // b.none
  46cd98:	mov	x23, #0x1                   	// #1
  46cd9c:	cmp	x1, #0xff
  46cda0:	b.ne	46cd78 <_obstack_memory_used@@Base+0xb930>  // b.any
  46cda4:	ldp	x3, x2, [x19, #272]
  46cda8:	strb	wzr, [x19, #255]
  46cdac:	mov	x0, x19
  46cdb0:	blr	x3
  46cdb4:	ldr	x2, [x19, #320]
  46cdb8:	mov	x0, #0x0                   	// #0
  46cdbc:	mov	x1, #0x1                   	// #1
  46cdc0:	str	x1, [x19, #256]
  46cdc4:	add	x2, x2, x1
  46cdc8:	str	x2, [x19, #320]
  46cdcc:	strb	w24, [x19, x0]
  46cdd0:	cmp	x23, #0x1
  46cdd4:	strb	w24, [x19, #264]
  46cdd8:	mov	w24, #0x28                  	// #40
  46cddc:	b.ne	46cd98 <_obstack_memory_used@@Base+0xb950>  // b.any
  46cde0:	mov	w1, w21
  46cde4:	mov	x2, x20
  46cde8:	mov	x0, x19
  46cdec:	mov	w3, #0x0                   	// #0
  46cdf0:	bl	46c7e8 <_obstack_memory_used@@Base+0xb3a0>
  46cdf4:	ldr	x1, [x19, #256]
  46cdf8:	cmp	x1, #0xff
  46cdfc:	b.eq	46ce18 <_obstack_memory_used@@Base+0xb9d0>  // b.none
  46ce00:	add	x23, x1, #0x1
  46ce04:	str	x23, [x19, #256]
  46ce08:	mov	w0, #0x29                  	// #41
  46ce0c:	strb	w0, [x19, x1]
  46ce10:	strb	w0, [x19, #264]
  46ce14:	b	46cc10 <_obstack_memory_used@@Base+0xb7c8>
  46ce18:	ldp	x3, x2, [x19, #272]
  46ce1c:	strb	wzr, [x19, #255]
  46ce20:	mov	x0, x19
  46ce24:	blr	x3
  46ce28:	ldr	x0, [x19, #320]
  46ce2c:	mov	w1, #0x29                  	// #41
  46ce30:	strb	w1, [x19]
  46ce34:	add	x0, x0, #0x1
  46ce38:	str	x0, [x19, #320]
  46ce3c:	b	46cc18 <_obstack_memory_used@@Base+0xb7d0>
  46ce40:	ldr	w4, [x2]
  46ce44:	cmp	w4, #0x32
  46ce48:	b.eq	46ce50 <_obstack_memory_used@@Base+0xba08>  // b.none
  46ce4c:	b	46bca0 <_obstack_memory_used@@Base+0xa858>
  46ce50:	stp	x29, x30, [sp, #-48]!
  46ce54:	mov	x29, sp
  46ce58:	stp	x19, x20, [sp, #16]
  46ce5c:	mov	x19, x0
  46ce60:	ldr	x0, [x2, #8]
  46ce64:	stp	x21, x22, [sp, #32]
  46ce68:	ldrsw	x22, [x0, #16]
  46ce6c:	ldr	x20, [x0, #8]
  46ce70:	cbz	x22, 46cee8 <_obstack_memory_used@@Base+0xbaa0>
  46ce74:	add	x22, x20, x22
  46ce78:	ldr	x1, [x19, #256]
  46ce7c:	b	46cea0 <_obstack_memory_used@@Base+0xba58>
  46ce80:	mov	x2, x1
  46ce84:	add	x1, x1, #0x1
  46ce88:	str	x1, [x19, #256]
  46ce8c:	add	x20, x20, #0x1
  46ce90:	cmp	x20, x22
  46ce94:	strb	w21, [x19, x2]
  46ce98:	strb	w21, [x19, #264]
  46ce9c:	b.eq	46cee8 <_obstack_memory_used@@Base+0xbaa0>  // b.none
  46cea0:	ldrb	w21, [x20]
  46cea4:	cmp	x1, #0xff
  46cea8:	b.ne	46ce80 <_obstack_memory_used@@Base+0xba38>  // b.any
  46ceac:	ldp	x3, x2, [x19, #272]
  46ceb0:	strb	wzr, [x19, #255]
  46ceb4:	mov	x0, x19
  46ceb8:	add	x20, x20, #0x1
  46cebc:	blr	x3
  46cec0:	ldr	x0, [x19, #320]
  46cec4:	mov	x2, #0x0                   	// #0
  46cec8:	mov	x1, #0x1                   	// #1
  46cecc:	str	x1, [x19, #256]
  46ced0:	add	x0, x0, x1
  46ced4:	str	x0, [x19, #320]
  46ced8:	strb	w21, [x19, x2]
  46cedc:	cmp	x20, x22
  46cee0:	strb	w21, [x19, #264]
  46cee4:	b.ne	46cea0 <_obstack_memory_used@@Base+0xba58>  // b.any
  46cee8:	ldp	x19, x20, [sp, #16]
  46ceec:	ldp	x21, x22, [sp, #32]
  46cef0:	ldp	x29, x30, [sp], #48
  46cef4:	ret
  46cef8:	stp	x29, x30, [sp, #-48]!
  46cefc:	mov	x29, sp
  46cf00:	str	x21, [sp, #32]
  46cf04:	mov	w21, w1
  46cf08:	ldr	w1, [x2]
  46cf0c:	stp	x19, x20, [sp, #16]
  46cf10:	mov	x20, x2
  46cf14:	cmp	w1, #0x31
  46cf18:	mov	x19, x0
  46cf1c:	ccmp	w1, #0x1, #0x0, ne  // ne = any
  46cf20:	b.ls	46cfb0 <_obstack_memory_used@@Base+0xbb68>  // b.plast
  46cf24:	cmp	w1, #0x6
  46cf28:	b.eq	46cfb0 <_obstack_memory_used@@Base+0xbb68>  // b.none
  46cf2c:	ldr	x1, [x0, #256]
  46cf30:	cmp	x1, #0xff
  46cf34:	b.eq	46cfcc <_obstack_memory_used@@Base+0xbb84>  // b.none
  46cf38:	add	x0, x1, #0x1
  46cf3c:	str	x0, [x19, #256]
  46cf40:	mov	w0, #0x28                  	// #40
  46cf44:	strb	w0, [x19, x1]
  46cf48:	mov	x2, x20
  46cf4c:	strb	w0, [x19, #264]
  46cf50:	mov	w1, w21
  46cf54:	mov	x0, x19
  46cf58:	bl	46bca0 <_obstack_memory_used@@Base+0xa858>
  46cf5c:	ldr	x1, [x19, #256]
  46cf60:	add	x0, x1, #0x1
  46cf64:	cmp	x1, #0xff
  46cf68:	b.ne	46cf90 <_obstack_memory_used@@Base+0xbb48>  // b.any
  46cf6c:	ldp	x3, x2, [x19, #272]
  46cf70:	strb	wzr, [x19, #255]
  46cf74:	mov	x0, x19
  46cf78:	blr	x3
  46cf7c:	ldr	x2, [x19, #320]
  46cf80:	mov	x0, #0x1                   	// #1
  46cf84:	mov	x1, #0x0                   	// #0
  46cf88:	add	x2, x2, x0
  46cf8c:	str	x2, [x19, #320]
  46cf90:	str	x0, [x19, #256]
  46cf94:	mov	w0, #0x29                  	// #41
  46cf98:	strb	w0, [x19, x1]
  46cf9c:	strb	w0, [x19, #264]
  46cfa0:	ldp	x19, x20, [sp, #16]
  46cfa4:	ldr	x21, [sp, #32]
  46cfa8:	ldp	x29, x30, [sp], #48
  46cfac:	ret
  46cfb0:	mov	x2, x20
  46cfb4:	mov	w1, w21
  46cfb8:	mov	x0, x19
  46cfbc:	ldp	x19, x20, [sp, #16]
  46cfc0:	ldr	x21, [sp, #32]
  46cfc4:	ldp	x29, x30, [sp], #48
  46cfc8:	b	46bca0 <_obstack_memory_used@@Base+0xa858>
  46cfcc:	ldp	x3, x2, [x0, #272]
  46cfd0:	strb	wzr, [x0, #255]
  46cfd4:	blr	x3
  46cfd8:	ldr	x2, [x19, #320]
  46cfdc:	mov	x0, #0x1                   	// #1
  46cfe0:	mov	x1, #0x0                   	// #0
  46cfe4:	add	x2, x2, x0
  46cfe8:	str	x2, [x19, #320]
  46cfec:	b	46cf3c <_obstack_memory_used@@Base+0xbaf4>
  46cff0:	stp	x29, x30, [sp, #-80]!
  46cff4:	mov	x29, sp
  46cff8:	stp	x19, x20, [sp, #16]
  46cffc:	mov	x19, x0
  46d000:	ldr	x0, [x2, #8]
  46d004:	stp	x21, x22, [sp, #32]
  46d008:	mov	w22, w1
  46d00c:	ldr	x0, [x0]
  46d010:	ldrb	w1, [x0]
  46d014:	cmp	w1, #0x66
  46d018:	b.ne	46d1ac <_obstack_memory_used@@Base+0xbd64>  // b.any
  46d01c:	ldr	x1, [x3]
  46d020:	stp	x23, x24, [sp, #48]
  46d024:	stp	x25, x26, [sp, #64]
  46d028:	mov	x25, #0x0                   	// #0
  46d02c:	ldp	x23, x26, [x1, #8]
  46d030:	ldr	w1, [x26]
  46d034:	cmp	w1, #0x3c
  46d038:	b.eq	46d274 <_obstack_memory_used@@Base+0xbe2c>  // b.none
  46d03c:	ldr	w21, [x19, #316]
  46d040:	mov	w1, #0xffffffff            	// #-1
  46d044:	str	w1, [x19, #316]
  46d048:	ldrb	w0, [x0, #1]
  46d04c:	cmp	w0, #0x6c
  46d050:	b.eq	46d294 <_obstack_memory_used@@Base+0xbe4c>  // b.none
  46d054:	b.hi	46d1c0 <_obstack_memory_used@@Base+0xbd78>  // b.pmore
  46d058:	cmp	w0, #0x4c
  46d05c:	b.eq	46d068 <_obstack_memory_used@@Base+0xbc20>  // b.none
  46d060:	cmp	w0, #0x52
  46d064:	b.ne	46d18c <_obstack_memory_used@@Base+0xbd44>  // b.any
  46d068:	ldr	x1, [x19, #256]
  46d06c:	add	x0, x1, #0x1
  46d070:	cmp	x1, #0xff
  46d074:	b.eq	46d354 <_obstack_memory_used@@Base+0xbf0c>  // b.none
  46d078:	str	x0, [x19, #256]
  46d07c:	mov	w0, #0x28                  	// #40
  46d080:	strb	w0, [x19, x1]
  46d084:	mov	x2, x26
  46d088:	strb	w0, [x19, #264]
  46d08c:	mov	w1, w22
  46d090:	mov	x0, x19
  46d094:	adrp	x20, 47d000 <_obstack_memory_used@@Base+0x1bbb8>
  46d098:	bl	46cef8 <_obstack_memory_used@@Base+0xbab0>
  46d09c:	add	x20, x20, #0x140
  46d0a0:	mov	w1, w22
  46d0a4:	mov	x2, x23
  46d0a8:	mov	x0, x19
  46d0ac:	bl	46ce40 <_obstack_memory_used@@Base+0xb9f8>
  46d0b0:	add	x26, x20, #0x3
  46d0b4:	mov	w24, #0x2e                  	// #46
  46d0b8:	ldr	x1, [x19, #256]
  46d0bc:	b	46d0e4 <_obstack_memory_used@@Base+0xbc9c>
  46d0c0:	mov	x0, x1
  46d0c4:	add	x1, x1, #0x1
  46d0c8:	str	x1, [x19, #256]
  46d0cc:	add	x20, x20, #0x1
  46d0d0:	cmp	x26, x20
  46d0d4:	strb	w24, [x19, x0]
  46d0d8:	strb	w24, [x19, #264]
  46d0dc:	b.eq	46d128 <_obstack_memory_used@@Base+0xbce0>  // b.none
  46d0e0:	ldrb	w24, [x20]
  46d0e4:	cmp	x1, #0xff
  46d0e8:	b.ne	46d0c0 <_obstack_memory_used@@Base+0xbc78>  // b.any
  46d0ec:	ldp	x3, x2, [x19, #272]
  46d0f0:	strb	wzr, [x19, #255]
  46d0f4:	mov	x0, x19
  46d0f8:	add	x20, x20, #0x1
  46d0fc:	blr	x3
  46d100:	ldr	x2, [x19, #320]
  46d104:	mov	x0, #0x0                   	// #0
  46d108:	mov	x1, #0x1                   	// #1
  46d10c:	str	x1, [x19, #256]
  46d110:	add	x2, x2, x1
  46d114:	str	x2, [x19, #320]
  46d118:	strb	w24, [x19, x0]
  46d11c:	cmp	x26, x20
  46d120:	strb	w24, [x19, #264]
  46d124:	b.ne	46d0e0 <_obstack_memory_used@@Base+0xbc98>  // b.any
  46d128:	mov	x2, x23
  46d12c:	mov	w1, w22
  46d130:	mov	x0, x19
  46d134:	bl	46ce40 <_obstack_memory_used@@Base+0xb9f8>
  46d138:	mov	x2, x25
  46d13c:	mov	w1, w22
  46d140:	mov	x0, x19
  46d144:	bl	46cef8 <_obstack_memory_used@@Base+0xbab0>
  46d148:	ldr	x1, [x19, #256]
  46d14c:	add	x0, x1, #0x1
  46d150:	cmp	x1, #0xff
  46d154:	b.ne	46d17c <_obstack_memory_used@@Base+0xbd34>  // b.any
  46d158:	ldp	x3, x2, [x19, #272]
  46d15c:	strb	wzr, [x19, #255]
  46d160:	mov	x0, x19
  46d164:	blr	x3
  46d168:	ldr	x2, [x19, #320]
  46d16c:	mov	x0, #0x1                   	// #1
  46d170:	mov	x1, #0x0                   	// #0
  46d174:	add	x2, x2, x0
  46d178:	str	x2, [x19, #320]
  46d17c:	str	x0, [x19, #256]
  46d180:	mov	w0, #0x29                  	// #41
  46d184:	strb	w0, [x19, x1]
  46d188:	strb	w0, [x19, #264]
  46d18c:	ldp	x23, x24, [sp, #48]
  46d190:	mov	w0, #0x1                   	// #1
  46d194:	ldp	x25, x26, [sp, #64]
  46d198:	str	w21, [x19, #316]
  46d19c:	ldp	x19, x20, [sp, #16]
  46d1a0:	ldp	x21, x22, [sp, #32]
  46d1a4:	ldp	x29, x30, [sp], #80
  46d1a8:	ret
  46d1ac:	mov	w0, #0x0                   	// #0
  46d1b0:	ldp	x19, x20, [sp, #16]
  46d1b4:	ldp	x21, x22, [sp, #32]
  46d1b8:	ldp	x29, x30, [sp], #80
  46d1bc:	ret
  46d1c0:	cmp	w0, #0x72
  46d1c4:	b.ne	46d18c <_obstack_memory_used@@Base+0xbd44>  // b.any
  46d1c8:	ldr	x1, [x19, #256]
  46d1cc:	add	x0, x1, #0x1
  46d1d0:	cmp	x1, #0xff
  46d1d4:	b.eq	46d32c <_obstack_memory_used@@Base+0xbee4>  // b.none
  46d1d8:	str	x0, [x19, #256]
  46d1dc:	mov	w0, #0x28                  	// #40
  46d1e0:	strb	w0, [x19, x1]
  46d1e4:	mov	x2, x26
  46d1e8:	strb	w0, [x19, #264]
  46d1ec:	mov	w1, w22
  46d1f0:	mov	x0, x19
  46d1f4:	adrp	x20, 482000 <_obstack_memory_used@@Base+0x20bb8>
  46d1f8:	bl	46cef8 <_obstack_memory_used@@Base+0xbab0>
  46d1fc:	add	x20, x20, #0x430
  46d200:	mov	w1, w22
  46d204:	mov	x2, x23
  46d208:	mov	x0, x19
  46d20c:	bl	46ce40 <_obstack_memory_used@@Base+0xb9f8>
  46d210:	add	x22, x20, #0x4
  46d214:	mov	w24, #0x2e                  	// #46
  46d218:	ldr	x1, [x19, #256]
  46d21c:	b	46d244 <_obstack_memory_used@@Base+0xbdfc>
  46d220:	mov	x0, x1
  46d224:	add	x1, x1, #0x1
  46d228:	str	x1, [x19, #256]
  46d22c:	add	x20, x20, #0x1
  46d230:	strb	w24, [x19, x0]
  46d234:	cmp	x20, x22
  46d238:	strb	w24, [x19, #264]
  46d23c:	b.eq	46d18c <_obstack_memory_used@@Base+0xbd44>  // b.none
  46d240:	ldrb	w24, [x20]
  46d244:	cmp	x1, #0xff
  46d248:	b.ne	46d220 <_obstack_memory_used@@Base+0xbdd8>  // b.any
  46d24c:	ldp	x3, x2, [x19, #272]
  46d250:	strb	wzr, [x19, #255]
  46d254:	mov	x0, x19
  46d258:	blr	x3
  46d25c:	ldr	x2, [x19, #320]
  46d260:	mov	x1, #0x1                   	// #1
  46d264:	mov	x0, #0x0                   	// #0
  46d268:	add	x2, x2, x1
  46d26c:	str	x2, [x19, #320]
  46d270:	b	46d228 <_obstack_memory_used@@Base+0xbde0>
  46d274:	ldr	w21, [x19, #316]
  46d278:	mov	w1, #0xffffffff            	// #-1
  46d27c:	ldr	x25, [x26, #16]
  46d280:	ldr	x26, [x26, #8]
  46d284:	str	w1, [x19, #316]
  46d288:	ldrb	w0, [x0, #1]
  46d28c:	cmp	w0, #0x6c
  46d290:	b.ne	46d054 <_obstack_memory_used@@Base+0xbc0c>  // b.any
  46d294:	adrp	x20, 482000 <_obstack_memory_used@@Base+0x20bb8>
  46d298:	add	x20, x20, #0x428
  46d29c:	add	x25, x20, #0x4
  46d2a0:	mov	w24, #0x28                  	// #40
  46d2a4:	ldr	x1, [x19, #256]
  46d2a8:	b	46d2d0 <_obstack_memory_used@@Base+0xbe88>
  46d2ac:	mov	x0, x1
  46d2b0:	add	x1, x1, #0x1
  46d2b4:	str	x1, [x19, #256]
  46d2b8:	add	x20, x20, #0x1
  46d2bc:	cmp	x25, x20
  46d2c0:	strb	w24, [x19, x0]
  46d2c4:	strb	w24, [x19, #264]
  46d2c8:	b.eq	46d314 <_obstack_memory_used@@Base+0xbecc>  // b.none
  46d2cc:	ldrb	w24, [x20]
  46d2d0:	cmp	x1, #0xff
  46d2d4:	b.ne	46d2ac <_obstack_memory_used@@Base+0xbe64>  // b.any
  46d2d8:	ldp	x3, x2, [x19, #272]
  46d2dc:	strb	wzr, [x19, #255]
  46d2e0:	mov	x0, x19
  46d2e4:	add	x20, x20, #0x1
  46d2e8:	blr	x3
  46d2ec:	ldr	x2, [x19, #320]
  46d2f0:	mov	x0, #0x0                   	// #0
  46d2f4:	mov	x1, #0x1                   	// #1
  46d2f8:	str	x1, [x19, #256]
  46d2fc:	add	x2, x2, x1
  46d300:	str	x2, [x19, #320]
  46d304:	strb	w24, [x19, x0]
  46d308:	cmp	x25, x20
  46d30c:	strb	w24, [x19, #264]
  46d310:	b.ne	46d2cc <_obstack_memory_used@@Base+0xbe84>  // b.any
  46d314:	mov	x2, x23
  46d318:	mov	w1, w22
  46d31c:	mov	x0, x19
  46d320:	bl	46ce40 <_obstack_memory_used@@Base+0xb9f8>
  46d324:	mov	x2, x26
  46d328:	b	46d13c <_obstack_memory_used@@Base+0xbcf4>
  46d32c:	ldp	x3, x2, [x19, #272]
  46d330:	strb	wzr, [x19, #255]
  46d334:	mov	x0, x19
  46d338:	blr	x3
  46d33c:	ldr	x2, [x19, #320]
  46d340:	mov	x0, #0x1                   	// #1
  46d344:	mov	x1, #0x0                   	// #0
  46d348:	add	x2, x2, x0
  46d34c:	str	x2, [x19, #320]
  46d350:	b	46d1d8 <_obstack_memory_used@@Base+0xbd90>
  46d354:	ldp	x3, x2, [x19, #272]
  46d358:	strb	wzr, [x19, #255]
  46d35c:	mov	x0, x19
  46d360:	blr	x3
  46d364:	ldr	x2, [x19, #320]
  46d368:	mov	x0, #0x1                   	// #1
  46d36c:	mov	x1, #0x0                   	// #0
  46d370:	add	x2, x2, x0
  46d374:	str	x2, [x19, #320]
  46d378:	b	46d078 <_obstack_memory_used@@Base+0xbc30>
  46d37c:	nop
  46d380:	sub	sp, sp, #0x230
  46d384:	stp	x29, x30, [sp]
  46d388:	mov	x29, sp
  46d38c:	stp	x19, x20, [sp, #16]
  46d390:	mov	x19, x0
  46d394:	mov	x20, x1
  46d398:	stp	x21, x22, [sp, #32]
  46d39c:	mov	x21, x2
  46d3a0:	stp	x23, x24, [sp, #48]
  46d3a4:	stp	x25, x26, [sp, #64]
  46d3a8:	str	x27, [sp, #80]
  46d3ac:	ldrb	w24, [x0]
  46d3b0:	cmp	w24, #0x5f
  46d3b4:	b.eq	46d560 <_obstack_memory_used@@Base+0xc118>  // b.none
  46d3b8:	adrp	x1, 480000 <_obstack_memory_used@@Base+0x1ebb8>
  46d3bc:	mov	x0, x19
  46d3c0:	add	x1, x1, #0xf48
  46d3c4:	mov	x2, #0x8                   	// #8
  46d3c8:	mov	w23, #0x0                   	// #0
  46d3cc:	bl	4026a0 <strncmp@plt>
  46d3d0:	cbnz	w0, 46d420 <_obstack_memory_used@@Base+0xbfd8>
  46d3d4:	ldrb	w0, [x19, #8]
  46d3d8:	mov	w2, #0x5f                  	// #95
  46d3dc:	mov	w1, #0x24                  	// #36
  46d3e0:	cmp	w0, #0x2e
  46d3e4:	ccmp	w0, w2, #0x4, ne  // ne = any
  46d3e8:	ccmp	w0, w1, #0x4, ne  // ne = any
  46d3ec:	b.ne	46d420 <_obstack_memory_used@@Base+0xbfd8>  // b.any
  46d3f0:	ldrb	w0, [x19, #9]
  46d3f4:	mov	w1, #0x49                  	// #73
  46d3f8:	cmp	w0, #0x44
  46d3fc:	ccmp	w0, w1, #0x4, ne  // ne = any
  46d400:	b.ne	46d420 <_obstack_memory_used@@Base+0xbfd8>  // b.any
  46d404:	ldrb	w1, [x19, #10]
  46d408:	cmp	w1, w2
  46d40c:	b.ne	46d420 <_obstack_memory_used@@Base+0xbfd8>  // b.any
  46d410:	cmp	w0, #0x49
  46d414:	cset	w23, ne  // ne = any
  46d418:	add	w23, w23, #0x2
  46d41c:	nop
  46d420:	mov	x0, x19
  46d424:	bl	4024f0 <strlen@plt>
  46d428:	mov	x3, x0
  46d42c:	mov	w1, #0x11                  	// #17
  46d430:	add	x0, x19, x0
  46d434:	stp	x19, x0, [x29, #96]
  46d438:	lsl	w4, w3, #1
  46d43c:	str	w1, [x29, #112]
  46d440:	cmp	w4, #0x800
  46d444:	str	x19, [x29, #120]
  46d448:	mov	w0, #0x0                   	// #0
  46d44c:	stp	wzr, w4, [x29, #136]
  46d450:	stp	wzr, w3, [x29, #152]
  46d454:	stp	xzr, xzr, [x29, #160]
  46d458:	str	xzr, [x29, #176]
  46d45c:	b.hi	46d53c <_obstack_memory_used@@Base+0xc0f4>  // b.pmore
  46d460:	mov	x22, sp
  46d464:	mov	w27, #0x18                  	// #24
  46d468:	sbfiz	x3, x3, #3, #32
  46d46c:	cmp	w23, #0x1
  46d470:	add	x3, x3, #0xf
  46d474:	smsubl	x0, w4, w27, x22
  46d478:	and	x3, x3, #0xfffffffffffffff0
  46d47c:	mov	sp, x0
  46d480:	mov	x25, sp
  46d484:	sub	sp, sp, x3
  46d488:	mov	x0, sp
  46d48c:	str	x25, [x29, #128]
  46d490:	str	x0, [x29, #144]
  46d494:	b.eq	46d5a0 <_obstack_memory_used@@Base+0xc158>  // b.none
  46d498:	sub	w0, w23, #0x2
  46d49c:	cmp	w0, #0x1
  46d4a0:	b.hi	46d5e4 <_obstack_memory_used@@Base+0xc19c>  // b.pmore
  46d4a4:	cmp	w23, #0x2
  46d4a8:	ldrb	w0, [x19, #11]
  46d4ac:	add	x24, x19, #0xb
  46d4b0:	str	x24, [x29, #120]
  46d4b4:	cset	w1, ne  // ne = any
  46d4b8:	cmp	w0, #0x5f
  46d4bc:	add	w23, w1, #0x44
  46d4c0:	b.eq	46d574 <_obstack_memory_used@@Base+0xc12c>  // b.none
  46d4c4:	cmp	w4, #0x0
  46d4c8:	b.le	46d6c8 <_obstack_memory_used@@Base+0xc280>
  46d4cc:	mov	x0, x24
  46d4d0:	bl	4024f0 <strlen@plt>
  46d4d4:	mov	w1, #0x1                   	// #1
  46d4d8:	str	wzr, [x25, #4]
  46d4dc:	str	w1, [x29, #136]
  46d4e0:	cmp	w0, #0x0
  46d4e4:	b.le	46d6c8 <_obstack_memory_used@@Base+0xc280>
  46d4e8:	add	x26, x29, #0x60
  46d4ec:	str	wzr, [x25]
  46d4f0:	str	x24, [x25, #8]
  46d4f4:	str	w0, [x25, #16]
  46d4f8:	mov	w1, w23
  46d4fc:	mov	x2, x25
  46d500:	mov	x3, #0x0                   	// #0
  46d504:	mov	x0, x26
  46d508:	bl	463a40 <_obstack_memory_used@@Base+0x25f8>
  46d50c:	mov	x19, x0
  46d510:	ldr	x23, [x29, #120]
  46d514:	mov	x0, x23
  46d518:	bl	4024f0 <strlen@plt>
  46d51c:	add	x1, x23, x0
  46d520:	str	x1, [x29, #120]
  46d524:	ldrb	w0, [x23, x0]
  46d528:	cmp	w0, #0x0
  46d52c:	ccmp	x19, #0x0, #0x4, eq  // eq = none
  46d530:	b.ne	46d604 <_obstack_memory_used@@Base+0xc1bc>  // b.any
  46d534:	mov	sp, x22
  46d538:	mov	w0, #0x0                   	// #0
  46d53c:	mov	sp, x29
  46d540:	ldp	x29, x30, [sp]
  46d544:	ldp	x19, x20, [sp, #16]
  46d548:	ldp	x21, x22, [sp, #32]
  46d54c:	ldp	x23, x24, [sp, #48]
  46d550:	ldp	x25, x26, [sp, #64]
  46d554:	ldr	x27, [sp, #80]
  46d558:	add	sp, sp, #0x230
  46d55c:	ret
  46d560:	ldrb	w0, [x0, #1]
  46d564:	mov	w23, #0x1                   	// #1
  46d568:	cmp	w0, #0x5a
  46d56c:	b.ne	46d3b8 <_obstack_memory_used@@Base+0xbf70>  // b.any
  46d570:	b	46d420 <_obstack_memory_used@@Base+0xbfd8>
  46d574:	ldrb	w0, [x19, #12]
  46d578:	cmp	w0, #0x5a
  46d57c:	b.ne	46d4c4 <_obstack_memory_used@@Base+0xc07c>  // b.any
  46d580:	add	x26, x29, #0x60
  46d584:	add	x19, x19, #0xd
  46d588:	mov	x0, x26
  46d58c:	mov	w1, #0x0                   	// #0
  46d590:	str	x19, [x29, #120]
  46d594:	bl	465818 <_obstack_memory_used@@Base+0x43d0>
  46d598:	mov	x25, x0
  46d59c:	b	46d4f8 <_obstack_memory_used@@Base+0xc0b0>
  46d5a0:	cmp	w24, #0x5f
  46d5a4:	b.ne	46d534 <_obstack_memory_used@@Base+0xc0ec>  // b.any
  46d5a8:	ldrb	w0, [x19, #1]
  46d5ac:	cmp	w0, #0x5a
  46d5b0:	b.ne	46d534 <_obstack_memory_used@@Base+0xc0ec>  // b.any
  46d5b4:	add	x26, x29, #0x60
  46d5b8:	add	x19, x19, #0x2
  46d5bc:	mov	w1, w23
  46d5c0:	mov	x0, x26
  46d5c4:	str	x19, [x29, #120]
  46d5c8:	bl	465818 <_obstack_memory_used@@Base+0x43d0>
  46d5cc:	ldr	w3, [x29, #112]
  46d5d0:	mov	x19, x0
  46d5d4:	tbnz	w3, #0, 46d6d4 <_obstack_memory_used@@Base+0xc28c>
  46d5d8:	ldr	x0, [x29, #120]
  46d5dc:	ldrb	w0, [x0]
  46d5e0:	b	46d528 <_obstack_memory_used@@Base+0xc0e0>
  46d5e4:	add	x0, x29, #0x60
  46d5e8:	bl	466560 <_obstack_memory_used@@Base+0x5118>
  46d5ec:	ldr	x3, [x29, #120]
  46d5f0:	mov	x19, x0
  46d5f4:	ldrb	w0, [x3]
  46d5f8:	cmp	w0, #0x0
  46d5fc:	ccmp	x19, #0x0, #0x4, eq  // eq = none
  46d600:	b.eq	46d534 <_obstack_memory_used@@Base+0xc0ec>  // b.none
  46d604:	add	x2, x29, #0x208
  46d608:	add	x23, x29, #0xb8
  46d60c:	mov	x0, x23
  46d610:	mov	x1, x19
  46d614:	str	xzr, [x29, #440]
  46d618:	stp	xzr, xzr, [x2]
  46d61c:	stp	xzr, xzr, [x2, #16]
  46d620:	strb	wzr, [x29, #448]
  46d624:	stp	x20, x21, [x29, #456]
  46d628:	stp	xzr, xzr, [x29, #472]
  46d62c:	stp	xzr, xzr, [x29, #488]
  46d630:	stp	xzr, xzr, [x29, #504]
  46d634:	bl	463b30 <_obstack_memory_used@@Base+0x26e8>
  46d638:	ldr	w0, [x29, #492]
  46d63c:	cmp	w0, #0x7ff
  46d640:	b.gt	46d648 <_obstack_memory_used@@Base+0xc200>
  46d644:	str	wzr, [x29, #492]
  46d648:	ldr	w3, [x29, #532]
  46d64c:	mov	w4, #0x1                   	// #1
  46d650:	ldr	w6, [x29, #548]
  46d654:	mov	x20, sp
  46d658:	cmp	w3, #0x0
  46d65c:	mov	x2, x19
  46d660:	csel	w5, w3, w4, gt
  46d664:	mov	x0, x23
  46d668:	mov	w1, #0x11                  	// #17
  46d66c:	str	xzr, [x29, #552]
  46d670:	mul	w3, w3, w6
  46d674:	sub	sp, sp, w5, sxtw #4
  46d678:	str	w3, [x29, #548]
  46d67c:	mov	x5, sp
  46d680:	cmp	w3, #0x0
  46d684:	str	x5, [x29, #520]
  46d688:	csel	w3, w3, w4, gt
  46d68c:	sub	sp, sp, w3, sxtw #4
  46d690:	mov	x3, sp
  46d694:	str	x3, [x29, #536]
  46d698:	bl	46bca0 <_obstack_memory_used@@Base+0xa858>
  46d69c:	mov	sp, x20
  46d6a0:	ldr	x1, [x29, #440]
  46d6a4:	mov	x0, x23
  46d6a8:	ldp	x3, x2, [x29, #456]
  46d6ac:	strb	wzr, [x23, x1]
  46d6b0:	blr	x3
  46d6b4:	ldr	w0, [x29, #488]
  46d6b8:	mov	sp, x22
  46d6bc:	cmp	w0, #0x0
  46d6c0:	cset	w0, eq  // eq = none
  46d6c4:	b	46d53c <_obstack_memory_used@@Base+0xc0f4>
  46d6c8:	add	x26, x29, #0x60
  46d6cc:	mov	x25, #0x0                   	// #0
  46d6d0:	b	46d4f8 <_obstack_memory_used@@Base+0xc0b0>
  46d6d4:	ldr	x6, [x29, #120]
  46d6d8:	ldrb	w0, [x6]
  46d6dc:	cmp	w0, #0x2e
  46d6e0:	b.ne	46d528 <_obstack_memory_used@@Base+0xc0e0>  // b.any
  46d6e4:	nop
  46d6e8:	ldrb	w0, [x6, #1]
  46d6ec:	sub	w1, w0, #0x61
  46d6f0:	cmp	w0, #0x5f
  46d6f4:	and	w1, w1, #0xff
  46d6f8:	ccmp	w1, #0x19, #0x0, ne  // ne = any
  46d6fc:	b.ls	46d7dc <_obstack_memory_used@@Base+0xc394>  // b.plast
  46d700:	sub	w0, w0, #0x30
  46d704:	and	w0, w0, #0xff
  46d708:	cmp	w0, #0x9
  46d70c:	ldrb	w0, [x6]
  46d710:	b.hi	46d528 <_obstack_memory_used@@Base+0xc0e0>  // b.pmore
  46d714:	mov	x3, x6
  46d718:	cmp	w0, #0x2e
  46d71c:	b.ne	46d76c <_obstack_memory_used@@Base+0xc324>  // b.any
  46d720:	ldrb	w4, [x3, #1]
  46d724:	sub	w4, w4, #0x30
  46d728:	and	w4, w4, #0xff
  46d72c:	cmp	w4, #0x9
  46d730:	b.hi	46d76c <_obstack_memory_used@@Base+0xc324>  // b.pmore
  46d734:	ldrb	w4, [x3, #2]
  46d738:	add	x3, x3, #0x2
  46d73c:	sub	w5, w4, #0x30
  46d740:	and	w5, w5, #0xff
  46d744:	cmp	w5, #0x9
  46d748:	b.hi	46d764 <_obstack_memory_used@@Base+0xc31c>  // b.pmore
  46d74c:	nop
  46d750:	ldrb	w4, [x3, #1]!
  46d754:	sub	w5, w4, #0x30
  46d758:	and	w5, w5, #0xff
  46d75c:	cmp	w5, #0x9
  46d760:	b.ls	46d750 <_obstack_memory_used@@Base+0xc308>  // b.plast
  46d764:	cmp	w4, #0x2e
  46d768:	b.eq	46d720 <_obstack_memory_used@@Base+0xc2d8>  // b.none
  46d76c:	ldp	w0, w1, [x29, #136]
  46d770:	str	x3, [x29, #120]
  46d774:	sub	x4, x3, x6
  46d778:	cmp	w0, w1
  46d77c:	b.ge	46d7d4 <_obstack_memory_used@@Base+0xc38c>  // b.tcont
  46d780:	ldr	x2, [x29, #128]
  46d784:	smull	x1, w0, w27
  46d788:	add	w0, w0, #0x1
  46d78c:	cmp	w4, #0x0
  46d790:	add	x3, x2, x1
  46d794:	str	wzr, [x3, #4]
  46d798:	str	w0, [x29, #136]
  46d79c:	b.le	46d7d4 <_obstack_memory_used@@Base+0xc38c>
  46d7a0:	str	xzr, [x2, x1]
  46d7a4:	str	x6, [x3, #8]
  46d7a8:	str	w4, [x3, #16]
  46d7ac:	mov	x2, x19
  46d7b0:	mov	x0, x26
  46d7b4:	mov	w1, #0x4e                  	// #78
  46d7b8:	bl	463a40 <_obstack_memory_used@@Base+0x25f8>
  46d7bc:	ldr	x6, [x29, #120]
  46d7c0:	mov	x19, x0
  46d7c4:	ldrb	w0, [x6]
  46d7c8:	cmp	w0, #0x2e
  46d7cc:	b.eq	46d6e8 <_obstack_memory_used@@Base+0xc2a0>  // b.none
  46d7d0:	b	46d528 <_obstack_memory_used@@Base+0xc0e0>
  46d7d4:	mov	x3, #0x0                   	// #0
  46d7d8:	b	46d7ac <_obstack_memory_used@@Base+0xc364>
  46d7dc:	ldrb	w0, [x6, #2]
  46d7e0:	add	x3, x6, #0x2
  46d7e4:	b	46d7ec <_obstack_memory_used@@Base+0xc3a4>
  46d7e8:	ldrb	w0, [x3, #1]!
  46d7ec:	sub	w1, w0, #0x61
  46d7f0:	cmp	w0, #0x5f
  46d7f4:	and	w1, w1, #0xff
  46d7f8:	ccmp	w1, #0x19, #0x0, ne  // ne = any
  46d7fc:	b.ls	46d7e8 <_obstack_memory_used@@Base+0xc3a0>  // b.plast
  46d800:	b	46d718 <_obstack_memory_used@@Base+0xc2d0>
  46d804:	nop
  46d808:	stp	x29, x30, [sp, #-96]!
  46d80c:	mov	x29, sp
  46d810:	stp	x21, x22, [sp, #32]
  46d814:	mov	x21, x3
  46d818:	cbz	x0, 46d8e8 <_obstack_memory_used@@Base+0xc4a0>
  46d81c:	stp	x19, x20, [sp, #16]
  46d820:	cmp	x1, #0x0
  46d824:	mov	x19, x1
  46d828:	mov	x20, x2
  46d82c:	ccmp	x2, #0x0, #0x0, ne  // ne = any
  46d830:	b.eq	46d8e4 <_obstack_memory_used@@Base+0xc49c>  // b.none
  46d834:	adrp	x1, 464000 <_obstack_memory_used@@Base+0x2bb8>
  46d838:	add	x2, sp, #0x40
  46d83c:	add	x1, x1, #0x648
  46d840:	stp	xzr, xzr, [sp, #64]
  46d844:	str	xzr, [sp, #80]
  46d848:	str	wzr, [sp, #88]
  46d84c:	bl	46d380 <_obstack_memory_used@@Base+0xbf38>
  46d850:	cbz	w0, 46d93c <_obstack_memory_used@@Base+0xc4f4>
  46d854:	ldr	w0, [sp, #88]
  46d858:	str	x23, [sp, #48]
  46d85c:	ldr	x22, [sp, #64]
  46d860:	cbnz	w0, 46d8c0 <_obstack_memory_used@@Base+0xc478>
  46d864:	ldr	x23, [sp, #80]
  46d868:	cbz	x22, 46d960 <_obstack_memory_used@@Base+0xc518>
  46d86c:	cbz	x19, 46d930 <_obstack_memory_used@@Base+0xc4e8>
  46d870:	mov	x0, x22
  46d874:	bl	4024f0 <strlen@plt>
  46d878:	ldr	x1, [x20]
  46d87c:	cmp	x0, x1
  46d880:	b.cs	46d908 <_obstack_memory_used@@Base+0xc4c0>  // b.hs, b.nlast
  46d884:	add	x2, x0, #0x1
  46d888:	mov	x1, x22
  46d88c:	mov	x0, x19
  46d890:	bl	402490 <memcpy@plt>
  46d894:	mov	x0, x22
  46d898:	mov	x22, x19
  46d89c:	bl	402910 <free@plt>
  46d8a0:	cbz	x21, 46d918 <_obstack_memory_used@@Base+0xc4d0>
  46d8a4:	ldp	x19, x20, [sp, #16]
  46d8a8:	ldr	x23, [sp, #48]
  46d8ac:	str	wzr, [x21]
  46d8b0:	mov	x0, x22
  46d8b4:	ldp	x21, x22, [sp, #32]
  46d8b8:	ldp	x29, x30, [sp], #96
  46d8bc:	ret
  46d8c0:	mov	x23, #0x1                   	// #1
  46d8c4:	cbnz	x22, 46d86c <_obstack_memory_used@@Base+0xc424>
  46d8c8:	cbz	x21, 46d984 <_obstack_memory_used@@Base+0xc53c>
  46d8cc:	mov	w0, #0xffffffff            	// #-1
  46d8d0:	mov	x22, #0x0                   	// #0
  46d8d4:	ldp	x19, x20, [sp, #16]
  46d8d8:	ldr	x23, [sp, #48]
  46d8dc:	str	w0, [x21]
  46d8e0:	b	46d8b0 <_obstack_memory_used@@Base+0xc468>
  46d8e4:	ldp	x19, x20, [sp, #16]
  46d8e8:	cbz	x21, 46d94c <_obstack_memory_used@@Base+0xc504>
  46d8ec:	mov	w0, #0xfffffffd            	// #-3
  46d8f0:	str	w0, [x21]
  46d8f4:	mov	x22, #0x0                   	// #0
  46d8f8:	mov	x0, x22
  46d8fc:	ldp	x21, x22, [sp, #32]
  46d900:	ldp	x29, x30, [sp], #96
  46d904:	ret
  46d908:	mov	x0, x19
  46d90c:	bl	402910 <free@plt>
  46d910:	str	x23, [x20]
  46d914:	cbnz	x21, 46d8a4 <_obstack_memory_used@@Base+0xc45c>
  46d918:	mov	x0, x22
  46d91c:	ldp	x19, x20, [sp, #16]
  46d920:	ldp	x21, x22, [sp, #32]
  46d924:	ldr	x23, [sp, #48]
  46d928:	ldp	x29, x30, [sp], #96
  46d92c:	ret
  46d930:	cbz	x20, 46d8a0 <_obstack_memory_used@@Base+0xc458>
  46d934:	str	x23, [x20]
  46d938:	b	46d914 <_obstack_memory_used@@Base+0xc4cc>
  46d93c:	ldr	x0, [sp, #64]
  46d940:	bl	402910 <free@plt>
  46d944:	cbnz	x21, 46d970 <_obstack_memory_used@@Base+0xc528>
  46d948:	ldp	x19, x20, [sp, #16]
  46d94c:	mov	x22, #0x0                   	// #0
  46d950:	mov	x0, x22
  46d954:	ldp	x21, x22, [sp, #32]
  46d958:	ldp	x29, x30, [sp], #96
  46d95c:	ret
  46d960:	cbz	x21, 46d984 <_obstack_memory_used@@Base+0xc53c>
  46d964:	cmp	x23, #0x1
  46d968:	b.eq	46d8cc <_obstack_memory_used@@Base+0xc484>  // b.none
  46d96c:	ldr	x23, [sp, #48]
  46d970:	mov	w0, #0xfffffffe            	// #-2
  46d974:	mov	x22, #0x0                   	// #0
  46d978:	ldp	x19, x20, [sp, #16]
  46d97c:	str	w0, [x21]
  46d980:	b	46d8b0 <_obstack_memory_used@@Base+0xc468>
  46d984:	mov	x22, #0x0                   	// #0
  46d988:	ldp	x19, x20, [sp, #16]
  46d98c:	ldr	x23, [sp, #48]
  46d990:	b	46d950 <_obstack_memory_used@@Base+0xc508>
  46d994:	nop
  46d998:	cmp	x0, #0x0
  46d99c:	ccmp	x1, #0x0, #0x4, ne  // ne = any
  46d9a0:	b.eq	46d9c4 <_obstack_memory_used@@Base+0xc57c>  // b.none
  46d9a4:	stp	x29, x30, [sp, #-16]!
  46d9a8:	mov	x29, sp
  46d9ac:	bl	46d380 <_obstack_memory_used@@Base+0xbf38>
  46d9b0:	cmp	w0, #0x0
  46d9b4:	ldp	x29, x30, [sp], #16
  46d9b8:	mov	w0, #0xfffffffe            	// #-2
  46d9bc:	csel	w0, wzr, w0, ne  // ne = any
  46d9c0:	ret
  46d9c4:	mov	w0, #0xfffffffd            	// #-3
  46d9c8:	ret
  46d9cc:	nop
  46d9d0:	stp	x29, x30, [sp, #-16]!
  46d9d4:	mov	x29, sp
  46d9d8:	bl	463870 <_obstack_memory_used@@Base+0x2428>
  46d9dc:	ldr	x0, [x0]
  46d9e0:	cbz	x0, 46d9f4 <_obstack_memory_used@@Base+0xc5ac>
  46d9e4:	ldr	x1, [x0, #80]
  46d9e8:	ldr	x0, [x0]
  46d9ec:	tbz	w1, #0, 46d9f4 <_obstack_memory_used@@Base+0xc5ac>
  46d9f0:	ldur	x0, [x0, #-112]
  46d9f4:	ldp	x29, x30, [sp], #16
  46d9f8:	ret
  46d9fc:	nop
  46da00:	and	w5, w0, #0xff
  46da04:	cmp	w5, #0x50
  46da08:	b.eq	46db20 <_obstack_memory_used@@Base+0xc6d8>  // b.none
  46da0c:	and	w4, w5, #0xf
  46da10:	cmp	w4, #0x4
  46da14:	b.eq	46da30 <_obstack_memory_used@@Base+0xc5e8>  // b.none
  46da18:	b.ls	46da44 <_obstack_memory_used@@Base+0xc5fc>  // b.plast
  46da1c:	cmp	w4, #0xb
  46da20:	b.eq	46db44 <_obstack_memory_used@@Base+0xc6fc>  // b.none
  46da24:	b.ls	46daa0 <_obstack_memory_used@@Base+0xc658>  // b.plast
  46da28:	cmp	w4, #0xc
  46da2c:	b.ne	46db54 <_obstack_memory_used@@Base+0xc70c>  // b.any
  46da30:	mov	x0, x2
  46da34:	ldr	x4, [x0], #8
  46da38:	cbnz	x4, 46db00 <_obstack_memory_used@@Base+0xc6b8>
  46da3c:	str	x4, [x3]
  46da40:	ret
  46da44:	cmp	w4, #0x2
  46da48:	b.eq	46db34 <_obstack_memory_used@@Base+0xc6ec>  // b.none
  46da4c:	b.ls	46da68 <_obstack_memory_used@@Base+0xc620>  // b.plast
  46da50:	cmp	w4, #0x3
  46da54:	b.ne	46db54 <_obstack_memory_used@@Base+0xc70c>  // b.any
  46da58:	mov	x0, x2
  46da5c:	ldr	w4, [x0], #4
  46da60:	cbz	x4, 46da3c <_obstack_memory_used@@Base+0xc5f4>
  46da64:	b	46db00 <_obstack_memory_used@@Base+0xc6b8>
  46da68:	cbz	w4, 46da30 <_obstack_memory_used@@Base+0xc5e8>
  46da6c:	cmp	w4, #0x1
  46da70:	b.ne	46db54 <_obstack_memory_used@@Base+0xc70c>  // b.any
  46da74:	mov	x0, x2
  46da78:	mov	x4, #0x0                   	// #0
  46da7c:	mov	w7, #0x0                   	// #0
  46da80:	ldrb	w8, [x0], #1
  46da84:	and	x6, x8, #0x7f
  46da88:	lsl	x6, x6, x7
  46da8c:	add	w7, w7, #0x7
  46da90:	orr	x4, x4, x6
  46da94:	tbnz	w8, #7, 46da80 <_obstack_memory_used@@Base+0xc638>
  46da98:	cbz	x4, 46da3c <_obstack_memory_used@@Base+0xc5f4>
  46da9c:	b	46db00 <_obstack_memory_used@@Base+0xc6b8>
  46daa0:	cmp	w4, #0x9
  46daa4:	b.eq	46dac0 <_obstack_memory_used@@Base+0xc678>  // b.none
  46daa8:	cmp	w4, #0xa
  46daac:	b.ne	46db54 <_obstack_memory_used@@Base+0xc70c>  // b.any
  46dab0:	mov	x0, x2
  46dab4:	ldrsh	x4, [x0], #2
  46dab8:	cbz	x4, 46da3c <_obstack_memory_used@@Base+0xc5f4>
  46dabc:	b	46db00 <_obstack_memory_used@@Base+0xc6b8>
  46dac0:	mov	x0, x2
  46dac4:	mov	x4, #0x0                   	// #0
  46dac8:	mov	w7, #0x0                   	// #0
  46dacc:	ldrb	w8, [x0], #1
  46dad0:	and	x6, x8, #0x7f
  46dad4:	lsl	x6, x6, x7
  46dad8:	add	w7, w7, #0x7
  46dadc:	orr	x4, x4, x6
  46dae0:	tbnz	w8, #7, 46dacc <_obstack_memory_used@@Base+0xc684>
  46dae4:	cmp	w7, #0x3f
  46dae8:	b.hi	46da38 <_obstack_memory_used@@Base+0xc5f0>  // b.pmore
  46daec:	tbz	w8, #6, 46da38 <_obstack_memory_used@@Base+0xc5f0>
  46daf0:	mov	x6, #0xffffffffffffffff    	// #-1
  46daf4:	lsl	x7, x6, x7
  46daf8:	orr	x4, x4, x7
  46dafc:	nop
  46db00:	and	w6, w5, #0x70
  46db04:	cmp	w6, #0x10
  46db08:	csel	x1, x2, x1, eq  // eq = none
  46db0c:	add	x4, x4, x1
  46db10:	tbz	w5, #7, 46da3c <_obstack_memory_used@@Base+0xc5f4>
  46db14:	ldr	x4, [x4]
  46db18:	str	x4, [x3]
  46db1c:	ret
  46db20:	add	x0, x2, #0x7
  46db24:	and	x0, x0, #0xfffffffffffffff8
  46db28:	ldr	x4, [x0], #8
  46db2c:	str	x4, [x3]
  46db30:	ret
  46db34:	mov	x0, x2
  46db38:	ldrh	w4, [x0], #2
  46db3c:	cbz	x4, 46da3c <_obstack_memory_used@@Base+0xc5f4>
  46db40:	b	46db00 <_obstack_memory_used@@Base+0xc6b8>
  46db44:	mov	x0, x2
  46db48:	ldrsw	x4, [x0], #4
  46db4c:	cbz	x4, 46da3c <_obstack_memory_used@@Base+0xc5f4>
  46db50:	b	46db00 <_obstack_memory_used@@Base+0xc6b8>
  46db54:	stp	x29, x30, [sp, #-16]!
  46db58:	mov	x29, sp
  46db5c:	bl	4027f0 <abort@plt>
  46db60:	and	w0, w0, #0xff
  46db64:	cmp	w0, #0xff
  46db68:	b.eq	46dbb4 <_obstack_memory_used@@Base+0xc76c>  // b.none
  46db6c:	and	w2, w0, #0x70
  46db70:	cmp	w2, #0x30
  46db74:	b.eq	46dbcc <_obstack_memory_used@@Base+0xc784>  // b.none
  46db78:	b.hi	46db8c <_obstack_memory_used@@Base+0xc744>  // b.pmore
  46db7c:	cmp	w2, #0x20
  46db80:	b.ne	46db9c <_obstack_memory_used@@Base+0xc754>  // b.any
  46db84:	ldr	x0, [x1, #808]
  46db88:	ret
  46db8c:	cmp	w2, #0x40
  46db90:	b.ne	46dbbc <_obstack_memory_used@@Base+0xc774>  // b.any
  46db94:	ldr	x0, [x1, #824]
  46db98:	ret
  46db9c:	b.hi	46dba8 <_obstack_memory_used@@Base+0xc760>  // b.pmore
  46dba0:	tst	w0, #0x60
  46dba4:	b.eq	46dbb4 <_obstack_memory_used@@Base+0xc76c>  // b.none
  46dba8:	stp	x29, x30, [sp, #-16]!
  46dbac:	mov	x29, sp
  46dbb0:	bl	4027f0 <abort@plt>
  46dbb4:	mov	x0, #0x0                   	// #0
  46dbb8:	ret
  46dbbc:	cmp	w2, #0x50
  46dbc0:	mov	x0, #0x0                   	// #0
  46dbc4:	b.ne	46dba8 <_obstack_memory_used@@Base+0xc760>  // b.any
  46dbc8:	ret
  46dbcc:	ldr	x0, [x1, #816]
  46dbd0:	ret
  46dbd4:	nop
  46dbd8:	str	xzr, [x3, #1568]
  46dbdc:	cmp	x0, x1
  46dbe0:	b.cs	46e370 <_obstack_memory_used@@Base+0xcf28>  // b.hs, b.nlast
  46dbe4:	stp	x29, x30, [sp, #-112]!
  46dbe8:	mov	x29, sp
  46dbec:	stp	x21, x22, [sp, #32]
  46dbf0:	mov	x21, x2
  46dbf4:	mov	x22, x1
  46dbf8:	stp	x19, x20, [sp, #16]
  46dbfc:	mov	x20, x3
  46dc00:	ldr	x2, [x21, #792]
  46dc04:	stp	x23, x24, [sp, #48]
  46dc08:	adrp	x23, 482000 <_obstack_memory_used@@Base+0x20bb8>
  46dc0c:	ldr	x5, [x21, #832]
  46dc10:	stp	x25, x26, [sp, #64]
  46dc14:	add	x23, x23, #0x438
  46dc18:	ldr	x1, [x20, #1608]
  46dc1c:	stp	x27, x28, [sp, #80]
  46dc20:	add	x5, x2, x5, lsr #63
  46dc24:	add	x27, x29, #0x68
  46dc28:	cmp	x1, x5
  46dc2c:	mov	x25, #0x0                   	// #0
  46dc30:	mov	w24, #0x1                   	// #1
  46dc34:	mov	w26, #0x5                   	// #5
  46dc38:	b.cs	46dd08 <_obstack_memory_used@@Base+0xc8c0>  // b.hs, b.nlast
  46dc3c:	nop
  46dc40:	mov	x19, x0
  46dc44:	ldrb	w4, [x19], #1
  46dc48:	and	w5, w4, #0xc0
  46dc4c:	cmp	w5, #0x40
  46dc50:	b.eq	46e204 <_obstack_memory_used@@Base+0xcdbc>  // b.none
  46dc54:	cmp	w5, #0x80
  46dc58:	b.eq	46e228 <_obstack_memory_used@@Base+0xcde0>  // b.none
  46dc5c:	cmp	w5, #0xc0
  46dc60:	b.eq	46e218 <_obstack_memory_used@@Base+0xcdd0>  // b.none
  46dc64:	cmp	w4, #0x2f
  46dc68:	b.hi	46e380 <_obstack_memory_used@@Base+0xcf38>  // b.pmore
  46dc6c:	ldrh	w2, [x23, w4, uxtw #1]
  46dc70:	adr	x3, 46dc7c <_obstack_memory_used@@Base+0xc834>
  46dc74:	add	x2, x3, w2, sxth #2
  46dc78:	br	x2
  46dc7c:	mov	x1, #0x0                   	// #0
  46dc80:	mov	w0, #0x0                   	// #0
  46dc84:	ldrb	w3, [x19], #1
  46dc88:	and	x2, x3, #0x7f
  46dc8c:	lsl	x2, x2, x0
  46dc90:	add	w0, w0, #0x7
  46dc94:	orr	x1, x1, x2
  46dc98:	tbnz	w3, #7, 46dc84 <_obstack_memory_used@@Base+0xc83c>
  46dc9c:	mov	x4, #0x0                   	// #0
  46dca0:	mov	w2, #0x0                   	// #0
  46dca4:	nop
  46dca8:	ldrb	w3, [x19], #1
  46dcac:	and	x0, x3, #0x7f
  46dcb0:	lsl	x0, x0, x2
  46dcb4:	add	w2, w2, #0x7
  46dcb8:	orr	x4, x4, x0
  46dcbc:	tbnz	w3, #7, 46dca8 <_obstack_memory_used@@Base+0xc860>
  46dcc0:	ldr	x0, [x20, #1624]
  46dcc4:	cmp	x1, #0x61
  46dcc8:	mul	x4, x4, x0
  46dccc:	b.hi	46dce4 <_obstack_memory_used@@Base+0xc89c>  // b.pmore
  46dcd0:	lsl	x1, x1, #4
  46dcd4:	neg	x4, x4
  46dcd8:	add	x0, x20, x1
  46dcdc:	str	w24, [x0, #8]
  46dce0:	str	x4, [x20, x1]
  46dce4:	cmp	x22, x19
  46dce8:	b.ls	46dd08 <_obstack_memory_used@@Base+0xc8c0>  // b.plast
  46dcec:	ldr	x2, [x21, #792]
  46dcf0:	mov	x0, x19
  46dcf4:	ldr	x5, [x21, #832]
  46dcf8:	ldr	x1, [x20, #1608]
  46dcfc:	add	x5, x2, x5, lsr #63
  46dd00:	cmp	x1, x5
  46dd04:	b.cc	46dc40 <_obstack_memory_used@@Base+0xc7f8>  // b.lo, b.ul, b.last
  46dd08:	mov	sp, x29
  46dd0c:	ldp	x19, x20, [sp, #16]
  46dd10:	ldp	x21, x22, [sp, #32]
  46dd14:	ldp	x23, x24, [sp, #48]
  46dd18:	ldp	x25, x26, [sp, #64]
  46dd1c:	ldp	x27, x28, [sp, #80]
  46dd20:	ldp	x29, x30, [sp], #112
  46dd24:	ret
  46dd28:	mov	x1, #0x0                   	// #0
  46dd2c:	mov	w0, #0x0                   	// #0
  46dd30:	ldrb	w3, [x19], #1
  46dd34:	and	x2, x3, #0x7f
  46dd38:	lsl	x2, x2, x0
  46dd3c:	add	w0, w0, #0x7
  46dd40:	orr	x1, x1, x2
  46dd44:	tbnz	w3, #7, 46dd30 <_obstack_memory_used@@Base+0xc8e8>
  46dd48:	str	x1, [x21, #848]
  46dd4c:	b	46dce4 <_obstack_memory_used@@Base+0xc89c>
  46dd50:	mov	x1, #0x0                   	// #0
  46dd54:	mov	w0, #0x0                   	// #0
  46dd58:	ldrb	w3, [x19], #1
  46dd5c:	and	x2, x3, #0x7f
  46dd60:	lsl	x2, x2, x0
  46dd64:	add	w0, w0, #0x7
  46dd68:	orr	x1, x1, x2
  46dd6c:	tbnz	w3, #7, 46dd58 <_obstack_memory_used@@Base+0xc910>
  46dd70:	cmp	x1, #0x61
  46dd74:	b.hi	46dd88 <_obstack_memory_used@@Base+0xc940>  // b.pmore
  46dd78:	lsl	x1, x1, #4
  46dd7c:	add	x0, x20, x1
  46dd80:	str	w26, [x0, #8]
  46dd84:	str	x19, [x20, x1]
  46dd88:	mov	x3, #0x0                   	// #0
  46dd8c:	mov	w1, #0x0                   	// #0
  46dd90:	ldrb	w2, [x19], #1
  46dd94:	and	x0, x2, #0x7f
  46dd98:	lsl	x0, x0, x1
  46dd9c:	add	w1, w1, #0x7
  46dda0:	orr	x3, x3, x0
  46dda4:	tbnz	w2, #7, 46dd90 <_obstack_memory_used@@Base+0xc948>
  46dda8:	add	x19, x19, x3
  46ddac:	b	46dce4 <_obstack_memory_used@@Base+0xc89c>
  46ddb0:	mov	x1, #0x0                   	// #0
  46ddb4:	mov	w0, #0x0                   	// #0
  46ddb8:	ldrb	w3, [x19], #1
  46ddbc:	and	x2, x3, #0x7f
  46ddc0:	lsl	x2, x2, x0
  46ddc4:	add	w0, w0, #0x7
  46ddc8:	orr	x1, x1, x2
  46ddcc:	tbnz	w3, #7, 46ddb8 <_obstack_memory_used@@Base+0xc970>
  46ddd0:	mov	x4, #0x0                   	// #0
  46ddd4:	mov	w2, #0x0                   	// #0
  46ddd8:	ldrb	w3, [x19], #1
  46dddc:	and	x0, x3, #0x7f
  46dde0:	lsl	x0, x0, x2
  46dde4:	add	w2, w2, #0x7
  46dde8:	orr	x4, x4, x0
  46ddec:	tbnz	w3, #7, 46ddd8 <_obstack_memory_used@@Base+0xc990>
  46ddf0:	cmp	w2, #0x3f
  46ddf4:	b.hi	46de0c <_obstack_memory_used@@Base+0xc9c4>  // b.pmore
  46ddf8:	mov	x0, #0xffffffffffffffff    	// #-1
  46ddfc:	tst	x3, #0x40
  46de00:	lsl	x0, x0, x2
  46de04:	orr	x0, x4, x0
  46de08:	csel	x4, x0, x4, ne  // ne = any
  46de0c:	ldr	x0, [x20, #1624]
  46de10:	cmp	x1, #0x61
  46de14:	mul	x4, x4, x0
  46de18:	b.hi	46dce4 <_obstack_memory_used@@Base+0xc89c>  // b.pmore
  46de1c:	lsl	x1, x1, #4
  46de20:	mov	w2, #0x4                   	// #4
  46de24:	add	x0, x20, x1
  46de28:	str	w2, [x0, #8]
  46de2c:	str	x4, [x20, x1]
  46de30:	b	46dce4 <_obstack_memory_used@@Base+0xc89c>
  46de34:	mov	x1, #0x0                   	// #0
  46de38:	mov	w0, #0x0                   	// #0
  46de3c:	ldrb	w3, [x19], #1
  46de40:	and	x2, x3, #0x7f
  46de44:	lsl	x2, x2, x0
  46de48:	add	w0, w0, #0x7
  46de4c:	orr	x1, x1, x2
  46de50:	tbnz	w3, #7, 46de3c <_obstack_memory_used@@Base+0xc9f4>
  46de54:	mov	x4, #0x0                   	// #0
  46de58:	mov	w2, #0x0                   	// #0
  46de5c:	nop
  46de60:	ldrb	w3, [x19], #1
  46de64:	and	x0, x3, #0x7f
  46de68:	lsl	x0, x0, x2
  46de6c:	add	w2, w2, #0x7
  46de70:	orr	x4, x4, x0
  46de74:	tbnz	w3, #7, 46de60 <_obstack_memory_used@@Base+0xca18>
  46de78:	b	46de0c <_obstack_memory_used@@Base+0xc9c4>
  46de7c:	mov	x1, #0x0                   	// #0
  46de80:	mov	w0, #0x0                   	// #0
  46de84:	ldrb	w3, [x19], #1
  46de88:	and	x2, x3, #0x7f
  46de8c:	lsl	x2, x2, x0
  46de90:	add	w0, w0, #0x7
  46de94:	orr	x1, x1, x2
  46de98:	tbnz	w3, #7, 46de84 <_obstack_memory_used@@Base+0xca3c>
  46de9c:	cmp	w0, #0x3f
  46dea0:	b.hi	46deb8 <_obstack_memory_used@@Base+0xca70>  // b.pmore
  46dea4:	mov	x2, #0xffffffffffffffff    	// #-1
  46dea8:	tst	x3, #0x40
  46deac:	lsl	x0, x2, x0
  46deb0:	orr	x0, x1, x0
  46deb4:	csel	x1, x0, x1, ne  // ne = any
  46deb8:	ldr	x0, [x20, #1624]
  46debc:	mul	x1, x0, x1
  46dec0:	str	x1, [x20, #1576]
  46dec4:	b	46dce4 <_obstack_memory_used@@Base+0xc89c>
  46dec8:	mov	x1, #0x0                   	// #0
  46decc:	mov	w0, #0x0                   	// #0
  46ded0:	ldrb	w3, [x19], #1
  46ded4:	and	x2, x3, #0x7f
  46ded8:	lsl	x2, x2, x0
  46dedc:	add	w0, w0, #0x7
  46dee0:	orr	x1, x1, x2
  46dee4:	tbnz	w3, #7, 46ded0 <_obstack_memory_used@@Base+0xca88>
  46dee8:	mov	x3, #0x0                   	// #0
  46deec:	mov	w2, #0x0                   	// #0
  46def0:	str	x1, [x20, #1584]
  46def4:	nop
  46def8:	ldrb	w1, [x19], #1
  46defc:	and	x0, x1, #0x7f
  46df00:	lsl	x0, x0, x2
  46df04:	add	w2, w2, #0x7
  46df08:	orr	x3, x3, x0
  46df0c:	tbnz	w1, #7, 46def8 <_obstack_memory_used@@Base+0xcab0>
  46df10:	cmp	w2, #0x3f
  46df14:	b.hi	46df2c <_obstack_memory_used@@Base+0xcae4>  // b.pmore
  46df18:	mov	x0, #0xffffffffffffffff    	// #-1
  46df1c:	tst	x1, #0x40
  46df20:	lsl	x0, x0, x2
  46df24:	orr	x0, x3, x0
  46df28:	csel	x3, x0, x3, ne  // ne = any
  46df2c:	ldr	x0, [x20, #1624]
  46df30:	str	w24, [x20, #1600]
  46df34:	mul	x3, x0, x3
  46df38:	str	x3, [x20, #1576]
  46df3c:	b	46dce4 <_obstack_memory_used@@Base+0xc89c>
  46df40:	mov	x1, #0x0                   	// #0
  46df44:	mov	w0, #0x0                   	// #0
  46df48:	ldrb	w3, [x19], #1
  46df4c:	and	x2, x3, #0x7f
  46df50:	lsl	x2, x2, x0
  46df54:	add	w0, w0, #0x7
  46df58:	orr	x1, x1, x2
  46df5c:	tbnz	w3, #7, 46df48 <_obstack_memory_used@@Base+0xcb00>
  46df60:	mov	x4, #0x0                   	// #0
  46df64:	mov	w2, #0x0                   	// #0
  46df68:	ldrb	w3, [x19], #1
  46df6c:	and	x0, x3, #0x7f
  46df70:	lsl	x0, x0, x2
  46df74:	add	w2, w2, #0x7
  46df78:	orr	x4, x4, x0
  46df7c:	tbnz	w3, #7, 46df68 <_obstack_memory_used@@Base+0xcb20>
  46df80:	cmp	w2, #0x3f
  46df84:	b.hi	46df9c <_obstack_memory_used@@Base+0xcb54>  // b.pmore
  46df88:	mov	x0, #0xffffffffffffffff    	// #-1
  46df8c:	tst	x3, #0x40
  46df90:	lsl	x0, x0, x2
  46df94:	orr	x0, x4, x0
  46df98:	csel	x4, x0, x4, ne  // ne = any
  46df9c:	ldr	x0, [x20, #1624]
  46dfa0:	cmp	x1, #0x61
  46dfa4:	mul	x4, x4, x0
  46dfa8:	b.hi	46dce4 <_obstack_memory_used@@Base+0xc89c>  // b.pmore
  46dfac:	lsl	x1, x1, #4
  46dfb0:	add	x0, x20, x1
  46dfb4:	str	w24, [x0, #8]
  46dfb8:	str	x4, [x20, x1]
  46dfbc:	b	46dce4 <_obstack_memory_used@@Base+0xc89c>
  46dfc0:	mov	x1, #0x0                   	// #0
  46dfc4:	mov	w0, #0x0                   	// #0
  46dfc8:	ldrb	w3, [x19], #1
  46dfcc:	and	x2, x3, #0x7f
  46dfd0:	lsl	x2, x2, x0
  46dfd4:	add	w0, w0, #0x7
  46dfd8:	orr	x1, x1, x2
  46dfdc:	tbnz	w3, #7, 46dfc8 <_obstack_memory_used@@Base+0xcb80>
  46dfe0:	cmp	x1, #0x61
  46dfe4:	b.hi	46dffc <_obstack_memory_used@@Base+0xcbb4>  // b.pmore
  46dfe8:	lsl	x1, x1, #4
  46dfec:	mov	w2, #0x3                   	// #3
  46dff0:	add	x0, x20, x1
  46dff4:	str	w2, [x0, #8]
  46dff8:	str	x19, [x20, x1]
  46dffc:	mov	x3, #0x0                   	// #0
  46e000:	mov	w1, #0x0                   	// #0
  46e004:	nop
  46e008:	ldrb	w2, [x19], #1
  46e00c:	and	x0, x2, #0x7f
  46e010:	lsl	x0, x0, x1
  46e014:	add	w1, w1, #0x7
  46e018:	orr	x3, x3, x0
  46e01c:	tbnz	w2, #7, 46e008 <_obstack_memory_used@@Base+0xcbc0>
  46e020:	add	x19, x19, x3
  46e024:	b	46dce4 <_obstack_memory_used@@Base+0xc89c>
  46e028:	mov	x1, #0x0                   	// #0
  46e02c:	mov	w0, #0x0                   	// #0
  46e030:	ldrb	w3, [x19], #1
  46e034:	and	x2, x3, #0x7f
  46e038:	lsl	x2, x2, x0
  46e03c:	add	w0, w0, #0x7
  46e040:	orr	x1, x1, x2
  46e044:	tbnz	w3, #7, 46e030 <_obstack_memory_used@@Base+0xcbe8>
  46e048:	str	x1, [x20, #1576]
  46e04c:	b	46dce4 <_obstack_memory_used@@Base+0xc89c>
  46e050:	mov	x1, #0x0                   	// #0
  46e054:	mov	w0, #0x0                   	// #0
  46e058:	ldrb	w3, [x19], #1
  46e05c:	and	x2, x3, #0x7f
  46e060:	lsl	x2, x2, x0
  46e064:	add	w0, w0, #0x7
  46e068:	orr	x1, x1, x2
  46e06c:	tbnz	w3, #7, 46e058 <_obstack_memory_used@@Base+0xcc10>
  46e070:	str	x1, [x20, #1584]
  46e074:	str	w24, [x20, #1600]
  46e078:	b	46dce4 <_obstack_memory_used@@Base+0xc89c>
  46e07c:	mov	x1, #0x0                   	// #0
  46e080:	mov	w0, #0x0                   	// #0
  46e084:	ldrb	w3, [x19], #1
  46e088:	and	x2, x3, #0x7f
  46e08c:	lsl	x2, x2, x0
  46e090:	add	w0, w0, #0x7
  46e094:	orr	x1, x1, x2
  46e098:	tbnz	w3, #7, 46e084 <_obstack_memory_used@@Base+0xcc3c>
  46e09c:	mov	x3, #0x0                   	// #0
  46e0a0:	mov	w2, #0x0                   	// #0
  46e0a4:	str	x1, [x20, #1584]
  46e0a8:	ldrb	w1, [x19], #1
  46e0ac:	and	x0, x1, #0x7f
  46e0b0:	lsl	x0, x0, x2
  46e0b4:	add	w2, w2, #0x7
  46e0b8:	orr	x3, x3, x0
  46e0bc:	tbnz	w1, #7, 46e0a8 <_obstack_memory_used@@Base+0xcc60>
  46e0c0:	str	x3, [x20, #1576]
  46e0c4:	str	w24, [x20, #1600]
  46e0c8:	b	46dce4 <_obstack_memory_used@@Base+0xc89c>
  46e0cc:	mov	x1, #0x0                   	// #0
  46e0d0:	mov	w0, #0x0                   	// #0
  46e0d4:	ldrb	w3, [x19], #1
  46e0d8:	and	x2, x3, #0x7f
  46e0dc:	lsl	x2, x2, x0
  46e0e0:	add	w0, w0, #0x7
  46e0e4:	orr	x1, x1, x2
  46e0e8:	tbnz	w3, #7, 46e0d4 <_obstack_memory_used@@Base+0xcc8c>
  46e0ec:	mov	x4, #0x0                   	// #0
  46e0f0:	mov	w2, #0x0                   	// #0
  46e0f4:	nop
  46e0f8:	ldrb	w3, [x19], #1
  46e0fc:	and	x0, x3, #0x7f
  46e100:	lsl	x0, x0, x2
  46e104:	add	w2, w2, #0x7
  46e108:	orr	x4, x4, x0
  46e10c:	tbnz	w3, #7, 46e0f8 <_obstack_memory_used@@Base+0xccb0>
  46e110:	cmp	x1, #0x61
  46e114:	b.hi	46dce4 <_obstack_memory_used@@Base+0xc89c>  // b.pmore
  46e118:	lsl	x1, x1, #4
  46e11c:	mov	w2, #0x2                   	// #2
  46e120:	add	x0, x20, x1
  46e124:	str	w2, [x0, #8]
  46e128:	str	x4, [x20, x1]
  46e12c:	b	46dce4 <_obstack_memory_used@@Base+0xc89c>
  46e130:	mov	x1, #0x0                   	// #0
  46e134:	mov	w0, #0x0                   	// #0
  46e138:	ldrb	w3, [x19], #1
  46e13c:	and	x2, x3, #0x7f
  46e140:	lsl	x2, x2, x0
  46e144:	add	w0, w0, #0x7
  46e148:	orr	x1, x1, x2
  46e14c:	tbnz	w3, #7, 46e138 <_obstack_memory_used@@Base+0xccf0>
  46e150:	cmp	x1, #0x61
  46e154:	b.hi	46dce4 <_obstack_memory_used@@Base+0xc89c>  // b.pmore
  46e158:	add	x1, x20, x1, lsl #4
  46e15c:	str	wzr, [x1, #8]
  46e160:	b	46dce4 <_obstack_memory_used@@Base+0xc89c>
  46e164:	mov	x1, #0x0                   	// #0
  46e168:	mov	w0, #0x0                   	// #0
  46e16c:	ldrb	w3, [x19], #1
  46e170:	and	x2, x3, #0x7f
  46e174:	lsl	x2, x2, x0
  46e178:	add	w0, w0, #0x7
  46e17c:	orr	x1, x1, x2
  46e180:	tbnz	w3, #7, 46e16c <_obstack_memory_used@@Base+0xcd24>
  46e184:	cmp	x1, #0x61
  46e188:	b.hi	46dce4 <_obstack_memory_used@@Base+0xc89c>  // b.pmore
  46e18c:	add	x1, x20, x1, lsl #4
  46e190:	mov	w0, #0x6                   	// #6
  46e194:	str	w0, [x1, #8]
  46e198:	b	46dce4 <_obstack_memory_used@@Base+0xc89c>
  46e19c:	mov	x1, #0x0                   	// #0
  46e1a0:	mov	w0, #0x0                   	// #0
  46e1a4:	ldrb	w3, [x19], #1
  46e1a8:	and	x2, x3, #0x7f
  46e1ac:	lsl	x2, x2, x0
  46e1b0:	add	w0, w0, #0x7
  46e1b4:	orr	x1, x1, x2
  46e1b8:	tbnz	w3, #7, 46e1a4 <_obstack_memory_used@@Base+0xcd5c>
  46e1bc:	b	46e150 <_obstack_memory_used@@Base+0xcd08>
  46e1c0:	mov	x1, #0x0                   	// #0
  46e1c4:	mov	w0, #0x0                   	// #0
  46e1c8:	ldrb	w3, [x19], #1
  46e1cc:	and	x2, x3, #0x7f
  46e1d0:	lsl	x2, x2, x0
  46e1d4:	add	w0, w0, #0x7
  46e1d8:	orr	x1, x1, x2
  46e1dc:	tbnz	w3, #7, 46e1c8 <_obstack_memory_used@@Base+0xcd80>
  46e1e0:	mov	x4, #0x0                   	// #0
  46e1e4:	mov	w2, #0x0                   	// #0
  46e1e8:	ldrb	w3, [x19], #1
  46e1ec:	and	x0, x3, #0x7f
  46e1f0:	lsl	x0, x0, x2
  46e1f4:	add	w2, w2, #0x7
  46e1f8:	orr	x4, x4, x0
  46e1fc:	tbnz	w3, #7, 46e1e8 <_obstack_memory_used@@Base+0xcda0>
  46e200:	b	46df9c <_obstack_memory_used@@Base+0xcb54>
  46e204:	ldr	x0, [x20, #1632]
  46e208:	and	x4, x4, #0x3f
  46e20c:	madd	x4, x4, x0, x1
  46e210:	str	x4, [x20, #1608]
  46e214:	b	46dce4 <_obstack_memory_used@@Base+0xc89c>
  46e218:	ubfiz	x4, x4, #4, #6
  46e21c:	add	x4, x20, x4
  46e220:	str	wzr, [x4, #8]
  46e224:	b	46dce4 <_obstack_memory_used@@Base+0xc89c>
  46e228:	and	w4, w4, #0x3f
  46e22c:	mov	x1, #0x0                   	// #0
  46e230:	mov	w5, #0x0                   	// #0
  46e234:	nop
  46e238:	ldrb	w6, [x19], #1
  46e23c:	and	x0, x6, #0x7f
  46e240:	lsl	x0, x0, x5
  46e244:	add	w5, w5, #0x7
  46e248:	orr	x1, x1, x0
  46e24c:	tbnz	w6, #7, 46e238 <_obstack_memory_used@@Base+0xcdf0>
  46e250:	ubfiz	x4, x4, #4, #6
  46e254:	ldr	x2, [x20, #1624]
  46e258:	add	x0, x20, x4
  46e25c:	mul	x1, x1, x2
  46e260:	str	w24, [x0, #8]
  46e264:	str	x1, [x20, x4]
  46e268:	b	46dce4 <_obstack_memory_used@@Base+0xc89c>
  46e26c:	ldr	x0, [x20, #544]
  46e270:	eor	x0, x0, #0x1
  46e274:	str	x0, [x20, #544]
  46e278:	b	46dce4 <_obstack_memory_used@@Base+0xc89c>
  46e27c:	ldrb	w28, [x20, #1648]
  46e280:	mov	x1, x21
  46e284:	mov	w0, w28
  46e288:	bl	46db60 <_obstack_memory_used@@Base+0xc718>
  46e28c:	mov	x2, x19
  46e290:	mov	x1, x0
  46e294:	mov	x3, x27
  46e298:	mov	w0, w28
  46e29c:	bl	46da00 <_obstack_memory_used@@Base+0xc5b8>
  46e2a0:	mov	x19, x0
  46e2a4:	ldr	x1, [x29, #104]
  46e2a8:	str	x1, [x20, #1608]
  46e2ac:	b	46dce4 <_obstack_memory_used@@Base+0xc89c>
  46e2b0:	ldrb	w2, [x0, #1]
  46e2b4:	add	x19, x0, #0x2
  46e2b8:	ldr	x0, [x20, #1632]
  46e2bc:	madd	x1, x2, x0, x1
  46e2c0:	str	x1, [x20, #1608]
  46e2c4:	b	46dce4 <_obstack_memory_used@@Base+0xc89c>
  46e2c8:	ldurh	w2, [x0, #1]
  46e2cc:	add	x19, x0, #0x3
  46e2d0:	ldr	x0, [x20, #1632]
  46e2d4:	madd	x1, x2, x0, x1
  46e2d8:	str	x1, [x20, #1608]
  46e2dc:	b	46dce4 <_obstack_memory_used@@Base+0xc89c>
  46e2e0:	ldur	w2, [x0, #1]
  46e2e4:	add	x19, x0, #0x5
  46e2e8:	ldr	x0, [x20, #1632]
  46e2ec:	madd	x1, x2, x0, x1
  46e2f0:	str	x1, [x20, #1608]
  46e2f4:	b	46dce4 <_obstack_memory_used@@Base+0xc89c>
  46e2f8:	cbz	x25, 46e374 <_obstack_memory_used@@Base+0xcf2c>
  46e2fc:	mov	x3, x25
  46e300:	ldr	x25, [x25, #1568]
  46e304:	mov	x1, x20
  46e308:	mov	x0, x3
  46e30c:	mov	x2, #0x648                 	// #1608
  46e310:	bl	402490 <memcpy@plt>
  46e314:	str	x0, [x20, #1568]
  46e318:	b	46dce4 <_obstack_memory_used@@Base+0xc89c>
  46e31c:	ldr	x28, [x20, #1568]
  46e320:	mov	x0, x20
  46e324:	mov	x2, #0x648                 	// #1608
  46e328:	mov	x1, x28
  46e32c:	bl	402490 <memcpy@plt>
  46e330:	str	x25, [x28, #1568]
  46e334:	mov	x25, x28
  46e338:	b	46dce4 <_obstack_memory_used@@Base+0xc89c>
  46e33c:	mov	w0, #0x2                   	// #2
  46e340:	mov	x3, #0x0                   	// #0
  46e344:	mov	w1, #0x0                   	// #0
  46e348:	str	x19, [x20, #1592]
  46e34c:	str	w0, [x20, #1600]
  46e350:	ldrb	w2, [x19], #1
  46e354:	and	x0, x2, #0x7f
  46e358:	lsl	x0, x0, x1
  46e35c:	add	w1, w1, #0x7
  46e360:	orr	x3, x3, x0
  46e364:	tbnz	w2, #7, 46e350 <_obstack_memory_used@@Base+0xcf08>
  46e368:	add	x19, x19, x3
  46e36c:	b	46dce4 <_obstack_memory_used@@Base+0xc89c>
  46e370:	ret
  46e374:	sub	sp, sp, #0x650
  46e378:	mov	x3, sp
  46e37c:	b	46e304 <_obstack_memory_used@@Base+0xcebc>
  46e380:	bl	4027f0 <abort@plt>
  46e384:	nop
  46e388:	adrp	x2, 4a5000 <__environ@@GLIBC_2.17+0xa68>
  46e38c:	add	x1, x2, #0xb48
  46e390:	mov	w0, #0x8                   	// #8
  46e394:	strb	w0, [x2, #2888]
  46e398:	strb	w0, [x1, #1]
  46e39c:	strb	w0, [x1, #2]
  46e3a0:	strb	w0, [x1, #3]
  46e3a4:	strb	w0, [x1, #4]
  46e3a8:	strb	w0, [x1, #5]
  46e3ac:	strb	w0, [x1, #6]
  46e3b0:	strb	w0, [x1, #7]
  46e3b4:	strb	w0, [x1, #8]
  46e3b8:	strb	w0, [x1, #9]
  46e3bc:	strb	w0, [x1, #10]
  46e3c0:	strb	w0, [x1, #11]
  46e3c4:	strb	w0, [x1, #12]
  46e3c8:	strb	w0, [x1, #13]
  46e3cc:	strb	w0, [x1, #14]
  46e3d0:	strb	w0, [x1, #15]
  46e3d4:	strb	w0, [x1, #16]
  46e3d8:	strb	w0, [x1, #17]
  46e3dc:	strb	w0, [x1, #18]
  46e3e0:	strb	w0, [x1, #19]
  46e3e4:	strb	w0, [x1, #20]
  46e3e8:	strb	w0, [x1, #21]
  46e3ec:	strb	w0, [x1, #22]
  46e3f0:	strb	w0, [x1, #23]
  46e3f4:	strb	w0, [x1, #24]
  46e3f8:	strb	w0, [x1, #25]
  46e3fc:	strb	w0, [x1, #26]
  46e400:	strb	w0, [x1, #27]
  46e404:	strb	w0, [x1, #28]
  46e408:	strb	w0, [x1, #29]
  46e40c:	strb	w0, [x1, #30]
  46e410:	strb	w0, [x1, #31]
  46e414:	strb	w0, [x1, #64]
  46e418:	strb	w0, [x1, #46]
  46e41c:	strb	w0, [x1, #65]
  46e420:	strb	w0, [x1, #66]
  46e424:	strb	w0, [x1, #67]
  46e428:	strb	w0, [x1, #68]
  46e42c:	strb	w0, [x1, #69]
  46e430:	strb	w0, [x1, #70]
  46e434:	strb	w0, [x1, #71]
  46e438:	strb	w0, [x1, #72]
  46e43c:	strb	w0, [x1, #73]
  46e440:	strb	w0, [x1, #74]
  46e444:	strb	w0, [x1, #75]
  46e448:	strb	w0, [x1, #76]
  46e44c:	strb	w0, [x1, #77]
  46e450:	strb	w0, [x1, #78]
  46e454:	strb	w0, [x1, #79]
  46e458:	strb	w0, [x1, #80]
  46e45c:	strb	w0, [x1, #81]
  46e460:	strb	w0, [x1, #82]
  46e464:	strb	w0, [x1, #83]
  46e468:	strb	w0, [x1, #84]
  46e46c:	strb	w0, [x1, #85]
  46e470:	strb	w0, [x1, #86]
  46e474:	strb	w0, [x1, #87]
  46e478:	strb	w0, [x1, #88]
  46e47c:	strb	w0, [x1, #89]
  46e480:	strb	w0, [x1, #90]
  46e484:	strb	w0, [x1, #91]
  46e488:	strb	w0, [x1, #92]
  46e48c:	strb	w0, [x1, #93]
  46e490:	strb	w0, [x1, #94]
  46e494:	strb	w0, [x1, #95]
  46e498:	strb	w0, [x1, #48]
  46e49c:	strb	w0, [x1, #49]
  46e4a0:	strb	w0, [x1, #50]
  46e4a4:	strb	w0, [x1, #51]
  46e4a8:	strb	w0, [x1, #52]
  46e4ac:	strb	w0, [x1, #53]
  46e4b0:	strb	w0, [x1, #54]
  46e4b4:	strb	w0, [x1, #55]
  46e4b8:	strb	w0, [x1, #56]
  46e4bc:	strb	w0, [x1, #57]
  46e4c0:	strb	w0, [x1, #58]
  46e4c4:	strb	w0, [x1, #59]
  46e4c8:	strb	w0, [x1, #60]
  46e4cc:	strb	w0, [x1, #61]
  46e4d0:	strb	w0, [x1, #62]
  46e4d4:	strb	w0, [x1, #63]
  46e4d8:	strb	w0, [x1, #96]
  46e4dc:	ret
  46e4e0:	stp	x29, x30, [sp, #-112]!
  46e4e4:	mov	x2, #0x680                 	// #1664
  46e4e8:	mov	x29, sp
  46e4ec:	stp	x19, x20, [sp, #16]
  46e4f0:	mov	x20, x0
  46e4f4:	mov	x19, x1
  46e4f8:	mov	x0, x1
  46e4fc:	mov	w1, #0x0                   	// #0
  46e500:	bl	4026f0 <memset@plt>
  46e504:	str	xzr, [x20, #800]
  46e508:	ldr	x2, [x20, #792]
  46e50c:	str	xzr, [x20, #848]
  46e510:	cbz	x2, 46e884 <_obstack_memory_used@@Base+0xd43c>
  46e514:	ldr	d0, [x20, #832]
  46e518:	add	x1, x20, #0x328
  46e51c:	stp	x21, x22, [sp, #32]
  46e520:	cmge	d0, d0, #0
  46e524:	fmov	x0, d0
  46e528:	add	x0, x2, x0
  46e52c:	bl	471c20 <_obstack_memory_used@@Base+0x107d8>
  46e530:	mov	x22, x0
  46e534:	cbz	x0, 46e8e8 <_obstack_memory_used@@Base+0xd4a0>
  46e538:	ldrsw	x1, [x0, #4]
  46e53c:	stp	x23, x24, [sp, #48]
  46e540:	add	x23, x0, #0x4
  46e544:	sub	x23, x23, x1
  46e548:	ldr	x0, [x20, #824]
  46e54c:	str	x0, [x19, #1608]
  46e550:	add	x21, x23, #0x9
  46e554:	mov	x0, x21
  46e558:	bl	4024f0 <strlen@plt>
  46e55c:	ldrb	w1, [x23, #9]
  46e560:	add	x2, x0, #0x1
  46e564:	add	x2, x21, x2
  46e568:	cmp	w1, #0x65
  46e56c:	b.eq	46e758 <_obstack_memory_used@@Base+0xd310>  // b.none
  46e570:	ldrb	w6, [x23, #8]
  46e574:	ldrb	w3, [x2]
  46e578:	cmp	w6, #0x3
  46e57c:	b.hi	46e9c8 <_obstack_memory_used@@Base+0xd580>  // b.pmore
  46e580:	stp	x25, x26, [sp, #64]
  46e584:	stp	x27, x28, [sp, #80]
  46e588:	mov	x5, #0x0                   	// #0
  46e58c:	mov	w4, #0x0                   	// #0
  46e590:	b	46e598 <_obstack_memory_used@@Base+0xd150>
  46e594:	ldrb	w3, [x2]
  46e598:	and	x1, x3, #0x7f
  46e59c:	add	x2, x2, #0x1
  46e5a0:	lsl	x1, x1, x4
  46e5a4:	add	w4, w4, #0x7
  46e5a8:	orr	x5, x5, x1
  46e5ac:	tbnz	w3, #7, 46e594 <_obstack_memory_used@@Base+0xd14c>
  46e5b0:	mov	x0, #0x0                   	// #0
  46e5b4:	mov	w3, #0x0                   	// #0
  46e5b8:	str	x5, [x19, #1632]
  46e5bc:	nop
  46e5c0:	mov	x5, x2
  46e5c4:	ldrb	w4, [x2], #1
  46e5c8:	and	x1, x4, #0x7f
  46e5cc:	lsl	x1, x1, x3
  46e5d0:	add	w3, w3, #0x7
  46e5d4:	orr	x0, x0, x1
  46e5d8:	tbnz	w4, #7, 46e5c0 <_obstack_memory_used@@Base+0xd178>
  46e5dc:	cmp	w3, #0x3f
  46e5e0:	b.hi	46e5f8 <_obstack_memory_used@@Base+0xd1b0>  // b.pmore
  46e5e4:	mov	x1, #0xffffffffffffffff    	// #-1
  46e5e8:	tst	x4, #0x40
  46e5ec:	lsl	x3, x1, x3
  46e5f0:	orr	x3, x0, x3
  46e5f4:	csel	x0, x3, x0, ne  // ne = any
  46e5f8:	str	x0, [x19, #1624]
  46e5fc:	cmp	w6, #0x1
  46e600:	mov	x4, #0x0                   	// #0
  46e604:	mov	w3, #0x0                   	// #0
  46e608:	b.eq	46e774 <_obstack_memory_used@@Base+0xd32c>  // b.none
  46e60c:	nop
  46e610:	ldrb	w0, [x2], #1
  46e614:	and	x1, x0, #0x7f
  46e618:	lsl	x1, x1, x3
  46e61c:	add	w3, w3, #0x7
  46e620:	orr	x4, x4, x1
  46e624:	tbnz	w0, #7, 46e610 <_obstack_memory_used@@Base+0xd1c8>
  46e628:	mov	w0, #0xffffffff            	// #-1
  46e62c:	str	x4, [x19, #1640]
  46e630:	strb	w0, [x19, #1649]
  46e634:	ldrb	w3, [x21]
  46e638:	cmp	w3, #0x7a
  46e63c:	b.eq	46e794 <_obstack_memory_used@@Base+0xd34c>  // b.none
  46e640:	mov	x24, #0x0                   	// #0
  46e644:	cbz	w3, 46ea2c <_obstack_memory_used@@Base+0xd5e4>
  46e648:	add	x21, x21, #0x1
  46e64c:	add	x25, sp, #0x68
  46e650:	mov	w26, #0x1                   	// #1
  46e654:	b	46e67c <_obstack_memory_used@@Base+0xd234>
  46e658:	cmp	w3, #0x52
  46e65c:	b.eq	46e7d8 <_obstack_memory_used@@Base+0xd390>  // b.none
  46e660:	cmp	w3, #0x50
  46e664:	b.eq	46e7e4 <_obstack_memory_used@@Base+0xd39c>  // b.none
  46e668:	cmp	w3, #0x53
  46e66c:	b.ne	46e898 <_obstack_memory_used@@Base+0xd450>  // b.any
  46e670:	strb	w26, [x19, #1651]
  46e674:	ldrb	w3, [x21], #1
  46e678:	cbz	w3, 46e694 <_obstack_memory_used@@Base+0xd24c>
  46e67c:	cmp	w3, #0x4c
  46e680:	b.ne	46e658 <_obstack_memory_used@@Base+0xd210>  // b.any
  46e684:	ldrb	w0, [x2], #1
  46e688:	strb	w0, [x19, #1649]
  46e68c:	ldrb	w3, [x21], #1
  46e690:	cbnz	w3, 46e67c <_obstack_memory_used@@Base+0xd234>
  46e694:	cbz	x24, 46e894 <_obstack_memory_used@@Base+0xd44c>
  46e698:	ldr	w1, [x23]
  46e69c:	mov	x0, x24
  46e6a0:	mov	x3, x19
  46e6a4:	mov	x2, x20
  46e6a8:	add	x1, x1, #0x4
  46e6ac:	add	x1, x23, x1
  46e6b0:	bl	46dbd8 <_obstack_memory_used@@Base+0xc790>
  46e6b4:	ldrb	w0, [x19, #1648]
  46e6b8:	cmp	w0, #0xff
  46e6bc:	b.eq	46e9c0 <_obstack_memory_used@@Base+0xd578>  // b.none
  46e6c0:	and	w0, w0, #0x7
  46e6c4:	cmp	w0, #0x2
  46e6c8:	b.eq	46e9b8 <_obstack_memory_used@@Base+0xd570>  // b.none
  46e6cc:	b.ls	46e82c <_obstack_memory_used@@Base+0xd3e4>  // b.plast
  46e6d0:	cmp	w0, #0x3
  46e6d4:	mov	x21, #0x10                  	// #16
  46e6d8:	b.ne	46e81c <_obstack_memory_used@@Base+0xd3d4>  // b.any
  46e6dc:	ldrb	w0, [x19, #1650]
  46e6e0:	add	x21, x22, x21
  46e6e4:	ldrb	w24, [x19, #1649]
  46e6e8:	cbz	w0, 46e844 <_obstack_memory_used@@Base+0xd3fc>
  46e6ec:	mov	x0, #0x0                   	// #0
  46e6f0:	mov	w2, #0x0                   	// #0
  46e6f4:	nop
  46e6f8:	ldrb	w3, [x21], #1
  46e6fc:	and	x1, x3, #0x7f
  46e700:	lsl	x1, x1, x2
  46e704:	add	w2, w2, #0x7
  46e708:	orr	x0, x0, x1
  46e70c:	tbnz	w3, #7, 46e6f8 <_obstack_memory_used@@Base+0xd2b0>
  46e710:	add	x23, x21, x0
  46e714:	cmp	w24, #0xff
  46e718:	b.ne	46e8bc <_obstack_memory_used@@Base+0xd474>  // b.any
  46e71c:	ldr	w1, [x22]
  46e720:	mov	x0, x23
  46e724:	mov	x3, x19
  46e728:	mov	x2, x20
  46e72c:	add	x1, x1, #0x4
  46e730:	add	x1, x22, x1
  46e734:	bl	46dbd8 <_obstack_memory_used@@Base+0xc790>
  46e738:	ldp	x21, x22, [sp, #32]
  46e73c:	mov	w0, #0x0                   	// #0
  46e740:	ldp	x23, x24, [sp, #48]
  46e744:	ldp	x25, x26, [sp, #64]
  46e748:	ldp	x27, x28, [sp, #80]
  46e74c:	ldp	x19, x20, [sp, #16]
  46e750:	ldp	x29, x30, [sp], #112
  46e754:	ret
  46e758:	ldrb	w0, [x23, #10]
  46e75c:	cmp	w0, #0x68
  46e760:	b.ne	46e570 <_obstack_memory_used@@Base+0xd128>  // b.any
  46e764:	ldr	x0, [x2], #8
  46e768:	add	x21, x23, #0xb
  46e76c:	str	x0, [x19, #1656]
  46e770:	b	46e570 <_obstack_memory_used@@Base+0xd128>
  46e774:	ldrb	w0, [x2]
  46e778:	add	x2, x5, #0x2
  46e77c:	str	x0, [x19, #1640]
  46e780:	mov	w0, #0xffffffff            	// #-1
  46e784:	strb	w0, [x19, #1649]
  46e788:	ldrb	w3, [x21]
  46e78c:	cmp	w3, #0x7a
  46e790:	b.ne	46e640 <_obstack_memory_used@@Base+0xd1f8>  // b.any
  46e794:	mov	x0, #0x0                   	// #0
  46e798:	mov	w3, #0x0                   	// #0
  46e79c:	nop
  46e7a0:	ldrb	w4, [x2], #1
  46e7a4:	and	x1, x4, #0x7f
  46e7a8:	lsl	x1, x1, x3
  46e7ac:	add	w3, w3, #0x7
  46e7b0:	orr	x0, x0, x1
  46e7b4:	tbnz	w4, #7, 46e7a0 <_obstack_memory_used@@Base+0xd358>
  46e7b8:	mov	w1, #0x1                   	// #1
  46e7bc:	strb	w1, [x19, #1650]
  46e7c0:	add	x24, x2, x0
  46e7c4:	add	x0, x21, #0x1
  46e7c8:	ldrb	w3, [x21, #1]
  46e7cc:	cbz	w3, 46e698 <_obstack_memory_used@@Base+0xd250>
  46e7d0:	mov	x21, x0
  46e7d4:	b	46e648 <_obstack_memory_used@@Base+0xd200>
  46e7d8:	ldrb	w0, [x2], #1
  46e7dc:	strb	w0, [x19, #1648]
  46e7e0:	b	46e674 <_obstack_memory_used@@Base+0xd22c>
  46e7e4:	mov	x27, x2
  46e7e8:	mov	x1, x20
  46e7ec:	ldrb	w28, [x27], #1
  46e7f0:	mov	w0, w28
  46e7f4:	bl	46db60 <_obstack_memory_used@@Base+0xc718>
  46e7f8:	mov	x2, x27
  46e7fc:	mov	x1, x0
  46e800:	mov	x3, x25
  46e804:	mov	w0, w28
  46e808:	bl	46da00 <_obstack_memory_used@@Base+0xc5b8>
  46e80c:	mov	x2, x0
  46e810:	ldr	x1, [sp, #104]
  46e814:	str	x1, [x19, #1616]
  46e818:	b	46e674 <_obstack_memory_used@@Base+0xd22c>
  46e81c:	cmp	w0, #0x4
  46e820:	mov	x21, #0x18                  	// #24
  46e824:	b.eq	46e6dc <_obstack_memory_used@@Base+0xd294>  // b.none
  46e828:	bl	4027f0 <abort@plt>
  46e82c:	mov	x21, #0x18                  	// #24
  46e830:	cbnz	w0, 46e828 <_obstack_memory_used@@Base+0xd3e0>
  46e834:	ldrb	w0, [x19, #1650]
  46e838:	add	x21, x22, x21
  46e83c:	ldrb	w24, [x19, #1649]
  46e840:	cbnz	w0, 46e6ec <_obstack_memory_used@@Base+0xd2a4>
  46e844:	mov	x23, x21
  46e848:	cmp	w24, #0xff
  46e84c:	b.eq	46e71c <_obstack_memory_used@@Base+0xd2d4>  // b.none
  46e850:	mov	x1, x20
  46e854:	mov	w0, w24
  46e858:	bl	46db60 <_obstack_memory_used@@Base+0xc718>
  46e85c:	mov	x1, x0
  46e860:	mov	x2, x21
  46e864:	mov	w0, w24
  46e868:	add	x3, sp, #0x68
  46e86c:	bl	46da00 <_obstack_memory_used@@Base+0xc5b8>
  46e870:	ldr	x1, [sp, #104]
  46e874:	mov	x23, x0
  46e878:	str	x1, [x20, #800]
  46e87c:	b	46e71c <_obstack_memory_used@@Base+0xd2d4>
  46e880:	ldp	x21, x22, [sp, #32]
  46e884:	mov	w0, #0x5                   	// #5
  46e888:	ldp	x19, x20, [sp, #16]
  46e88c:	ldp	x29, x30, [sp], #112
  46e890:	ret
  46e894:	mov	x24, x2
  46e898:	cbnz	x24, 46e698 <_obstack_memory_used@@Base+0xd250>
  46e89c:	ldp	x25, x26, [sp, #64]
  46e8a0:	ldp	x27, x28, [sp, #80]
  46e8a4:	mov	w0, #0x3                   	// #3
  46e8a8:	ldp	x19, x20, [sp, #16]
  46e8ac:	ldp	x21, x22, [sp, #32]
  46e8b0:	ldp	x23, x24, [sp, #48]
  46e8b4:	ldp	x29, x30, [sp], #112
  46e8b8:	ret
  46e8bc:	mov	x1, x20
  46e8c0:	mov	w0, w24
  46e8c4:	bl	46db60 <_obstack_memory_used@@Base+0xc718>
  46e8c8:	mov	x1, x0
  46e8cc:	mov	x2, x21
  46e8d0:	mov	w0, w24
  46e8d4:	add	x3, sp, #0x68
  46e8d8:	bl	46da00 <_obstack_memory_used@@Base+0xc5b8>
  46e8dc:	ldr	x0, [sp, #104]
  46e8e0:	str	x0, [x20, #800]
  46e8e4:	b	46e71c <_obstack_memory_used@@Base+0xd2d4>
  46e8e8:	ldr	x0, [x20, #792]
  46e8ec:	mov	w1, #0x1168                	// #4456
  46e8f0:	movk	w1, #0xd280, lsl #16
  46e8f4:	ldr	w2, [x0]
  46e8f8:	cmp	w2, w1
  46e8fc:	b.ne	46e880 <_obstack_memory_used@@Base+0xd438>  // b.any
  46e900:	ldr	w1, [x0, #4]
  46e904:	mov	w0, #0x1                   	// #1
  46e908:	movk	w0, #0xd400, lsl #16
  46e90c:	cmp	w1, w0
  46e910:	b.ne	46e880 <_obstack_memory_used@@Base+0xd438>  // b.any
  46e914:	ldr	x6, [x20, #784]
  46e918:	mov	w3, #0x1                   	// #1
  46e91c:	mov	x1, x19
  46e920:	mov	w2, w3
  46e924:	add	x8, x6, #0x130
  46e928:	mov	x4, #0x1f                  	// #31
  46e92c:	mov	x5, #0x130                 	// #304
  46e930:	mov	x0, #0x8                   	// #8
  46e934:	str	x5, [x19, #1576]
  46e938:	str	x4, [x19, #1584]
  46e93c:	str	w3, [x19, #1600]
  46e940:	str	w2, [x1, #8]
  46e944:	str	x0, [x1], #16
  46e948:	add	x0, x0, #0x8
  46e94c:	cmp	x0, #0x100
  46e950:	b.ne	46e940 <_obstack_memory_used@@Base+0xd4f8>  // b.any
  46e954:	ldr	w0, [x6, #592]
  46e958:	add	x5, x6, #0x250
  46e95c:	cbz	w0, 46e9ec <_obstack_memory_used@@Base+0xd5a4>
  46e960:	mov	w7, #0x8001                	// #32769
  46e964:	add	x4, x19, #0x600
  46e968:	add	x9, x6, x19
  46e96c:	movk	w7, #0x4650, lsl #16
  46e970:	mov	w3, #0x1                   	// #1
  46e974:	b	46e988 <_obstack_memory_used@@Base+0xd540>
  46e978:	ldr	w0, [x5, #4]
  46e97c:	add	x5, x5, x0
  46e980:	ldr	w0, [x5]
  46e984:	cbz	w0, 46e9ec <_obstack_memory_used@@Base+0xd5a4>
  46e988:	cmp	w0, w7
  46e98c:	b.ne	46e978 <_obstack_memory_used@@Base+0xd530>  // b.any
  46e990:	sub	x2, x5, #0x520
  46e994:	add	x0, x19, #0x400
  46e998:	sub	x2, x2, x9
  46e99c:	nop
  46e9a0:	str	w3, [x0, #8]
  46e9a4:	add	x1, x2, x0
  46e9a8:	str	x1, [x0], #16
  46e9ac:	cmp	x4, x0
  46e9b0:	b.ne	46e9a0 <_obstack_memory_used@@Base+0xd558>  // b.any
  46e9b4:	b	46e978 <_obstack_memory_used@@Base+0xd530>
  46e9b8:	mov	x21, #0xc                   	// #12
  46e9bc:	b	46e6dc <_obstack_memory_used@@Base+0xd294>
  46e9c0:	mov	x21, #0x8                   	// #8
  46e9c4:	b	46e6dc <_obstack_memory_used@@Base+0xd294>
  46e9c8:	cmp	w3, #0x8
  46e9cc:	b.ne	46e8a4 <_obstack_memory_used@@Base+0xd45c>  // b.any
  46e9d0:	ldrb	w0, [x2, #1]
  46e9d4:	cbnz	w0, 46e8a4 <_obstack_memory_used@@Base+0xd45c>
  46e9d8:	stp	x25, x26, [sp, #64]
  46e9dc:	add	x2, x2, #0x2
  46e9e0:	stp	x27, x28, [sp, #80]
  46e9e4:	ldrb	w3, [x2]
  46e9e8:	b	46e588 <_obstack_memory_used@@Base+0xd140>
  46e9ec:	mov	w3, #0x1                   	// #1
  46e9f0:	strb	w3, [x19, #1651]
  46e9f4:	add	x1, x6, #0x230
  46e9f8:	mov	w5, #0x4                   	// #4
  46e9fc:	ldr	x2, [x8, #264]
  46ea00:	sub	x1, x1, x8
  46ea04:	mov	x4, #0x60                  	// #96
  46ea08:	mov	w0, #0x0                   	// #0
  46ea0c:	sub	x8, x2, x8
  46ea10:	ldp	x21, x22, [sp, #32]
  46ea14:	str	x1, [x19, #496]
  46ea18:	str	w3, [x19, #504]
  46ea1c:	str	x8, [x19, #1536]
  46ea20:	str	w5, [x19, #1544]
  46ea24:	str	x4, [x19, #1640]
  46ea28:	b	46e74c <_obstack_memory_used@@Base+0xd304>
  46ea2c:	mov	x24, x2
  46ea30:	b	46e698 <_obstack_memory_used@@Base+0xd250>
  46ea34:	nop
  46ea38:	stp	x29, x30, [sp, #-80]!
  46ea3c:	mov	x29, sp
  46ea40:	stp	x21, x22, [sp, #32]
  46ea44:	mov	x21, x0
  46ea48:	ldr	x0, [x1, #832]
  46ea4c:	stp	x19, x20, [sp, #16]
  46ea50:	mov	x20, x1
  46ea54:	stp	x23, x24, [sp, #48]
  46ea58:	tbz	x0, #62, 46ea64 <_obstack_memory_used@@Base+0xd61c>
  46ea5c:	ldrb	w1, [x1, #887]
  46ea60:	cbnz	w1, 46ea6c <_obstack_memory_used@@Base+0xd624>
  46ea64:	ldr	x1, [x20, #248]
  46ea68:	cbz	x1, 46eb28 <_obstack_memory_used@@Base+0xd6e0>
  46ea6c:	adrp	x24, 4a5000 <__environ@@GLIBC_2.17+0xa68>
  46ea70:	add	x23, x21, #0x358
  46ea74:	add	x24, x24, #0xb48
  46ea78:	add	x22, x20, #0x358
  46ea7c:	mov	x19, #0x0                   	// #0
  46ea80:	b	46eaa4 <_obstack_memory_used@@Base+0xd65c>
  46ea84:	cbz	x0, 46ea98 <_obstack_memory_used@@Base+0xd650>
  46ea88:	ldrb	w2, [x19, x24]
  46ea8c:	cmp	w2, #0x8
  46ea90:	b.ne	46eb94 <_obstack_memory_used@@Base+0xd74c>  // b.any
  46ea94:	str	x1, [x0]
  46ea98:	add	x19, x19, #0x1
  46ea9c:	cmp	x19, #0x61
  46eaa0:	b.eq	46eae0 <_obstack_memory_used@@Base+0xd698>  // b.none
  46eaa4:	ldrb	w2, [x23, x19]
  46eaa8:	ldr	x0, [x21, x19, lsl #3]
  46eaac:	ldr	x1, [x20, x19, lsl #3]
  46eab0:	cbnz	w2, 46eb94 <_obstack_memory_used@@Base+0xd74c>
  46eab4:	ldrb	w2, [x22, x19]
  46eab8:	cbnz	w2, 46ea84 <_obstack_memory_used@@Base+0xd63c>
  46eabc:	cmp	x1, #0x0
  46eac0:	ccmp	x0, #0x0, #0x4, ne  // ne = any
  46eac4:	ccmp	x0, x1, #0x4, ne  // ne = any
  46eac8:	b.eq	46ea98 <_obstack_memory_used@@Base+0xd650>  // b.none
  46eacc:	ldrb	w2, [x24, x19]
  46ead0:	add	x19, x19, #0x1
  46ead4:	bl	402490 <memcpy@plt>
  46ead8:	cmp	x19, #0x61
  46eadc:	b.ne	46eaa4 <_obstack_memory_used@@Base+0xd65c>  // b.any
  46eae0:	ldr	x0, [x21, #832]
  46eae4:	tbz	x0, #62, 46eaf0 <_obstack_memory_used@@Base+0xd6a8>
  46eae8:	ldrb	w0, [x21, #887]
  46eaec:	cbnz	w0, 46eb10 <_obstack_memory_used@@Base+0xd6c8>
  46eaf0:	ldr	x1, [x21, #248]
  46eaf4:	mov	x0, #0x0                   	// #0
  46eaf8:	cbz	x1, 46eb54 <_obstack_memory_used@@Base+0xd70c>
  46eafc:	ldp	x19, x20, [sp, #16]
  46eb00:	ldp	x21, x22, [sp, #32]
  46eb04:	ldp	x23, x24, [sp, #48]
  46eb08:	ldp	x29, x30, [sp], #80
  46eb0c:	ret
  46eb10:	mov	x0, #0x0                   	// #0
  46eb14:	ldp	x19, x20, [sp, #16]
  46eb18:	ldp	x21, x22, [sp, #32]
  46eb1c:	ldp	x23, x24, [sp, #48]
  46eb20:	ldp	x29, x30, [sp], #80
  46eb24:	ret
  46eb28:	adrp	x1, 4a5000 <__environ@@GLIBC_2.17+0xa68>
  46eb2c:	ldr	x2, [x20, #784]
  46eb30:	ldrb	w1, [x1, #2919]
  46eb34:	cmp	w1, #0x8
  46eb38:	b.ne	46eb94 <_obstack_memory_used@@Base+0xd74c>  // b.any
  46eb3c:	str	x2, [sp, #72]
  46eb40:	tbz	x0, #62, 46eb48 <_obstack_memory_used@@Base+0xd700>
  46eb44:	strb	wzr, [x20, #887]
  46eb48:	add	x0, sp, #0x48
  46eb4c:	str	x0, [x20, #248]
  46eb50:	b	46ea6c <_obstack_memory_used@@Base+0xd624>
  46eb54:	ldr	x1, [x20, #832]
  46eb58:	ldr	x0, [x20, #248]
  46eb5c:	tbnz	x1, #62, 46eb88 <_obstack_memory_used@@Base+0xd740>
  46eb60:	adrp	x1, 4a5000 <__environ@@GLIBC_2.17+0xa68>
  46eb64:	ldrb	w1, [x1, #2919]
  46eb68:	cmp	w1, #0x8
  46eb6c:	b.ne	46eb94 <_obstack_memory_used@@Base+0xd74c>  // b.any
  46eb70:	ldr	x0, [x0]
  46eb74:	ldr	x2, [x21, #784]
  46eb78:	ldr	x1, [x20, #848]
  46eb7c:	sub	x0, x0, x2
  46eb80:	add	x0, x0, x1
  46eb84:	b	46eafc <_obstack_memory_used@@Base+0xd6b4>
  46eb88:	ldrb	w1, [x20, #887]
  46eb8c:	cbz	w1, 46eb60 <_obstack_memory_used@@Base+0xd718>
  46eb90:	b	46eb74 <_obstack_memory_used@@Base+0xd72c>
  46eb94:	bl	4027f0 <abort@plt>
  46eb98:	sub	sp, sp, #0x260
  46eb9c:	cmp	x0, x1
  46eba0:	stp	x29, x30, [sp]
  46eba4:	mov	x29, sp
  46eba8:	str	x3, [sp, #96]
  46ebac:	b.cs	46f004 <_obstack_memory_used@@Base+0xdbbc>  // b.hs, b.nlast
  46ebb0:	stp	x19, x20, [sp, #16]
  46ebb4:	mov	x19, x0
  46ebb8:	mov	w20, #0x1                   	// #1
  46ebbc:	stp	x21, x22, [sp, #32]
  46ebc0:	mov	x21, x1
  46ebc4:	add	x22, sp, #0x60
  46ebc8:	stp	x23, x24, [sp, #48]
  46ebcc:	adrp	x23, 482000 <_obstack_memory_used@@Base+0x20bb8>
  46ebd0:	mov	x24, x2
  46ebd4:	add	x23, x23, #0x498
  46ebd8:	stp	x25, x26, [sp, #64]
  46ebdc:	adrp	x25, 482000 <_obstack_memory_used@@Base+0x20bb8>
  46ebe0:	add	x25, x25, #0x678
  46ebe4:	nop
  46ebe8:	mov	x4, x19
  46ebec:	ldrb	w5, [x4], #1
  46ebf0:	sub	w0, w5, #0x3
  46ebf4:	cmp	w0, #0xee
  46ebf8:	b.ls	46ec00 <_obstack_memory_used@@Base+0xd7b8>  // b.plast
  46ebfc:	bl	4027f0 <abort@plt>
  46ec00:	ldrh	w0, [x23, w0, uxtw #1]
  46ec04:	adr	x1, 46ec10 <_obstack_memory_used@@Base+0xd7c8>
  46ec08:	add	x0, x1, w0, sxth #2
  46ec0c:	br	x0
  46ec10:	mov	x3, #0x0                   	// #0
  46ec14:	mov	w1, #0x0                   	// #0
  46ec18:	ldrb	w2, [x4], #1
  46ec1c:	and	x0, x2, #0x7f
  46ec20:	lsl	x0, x0, x1
  46ec24:	add	w1, w1, #0x7
  46ec28:	orr	x3, x3, x0
  46ec2c:	tbnz	w2, #7, 46ec18 <_obstack_memory_used@@Base+0xd7d0>
  46ec30:	cmp	w1, #0x3f
  46ec34:	b.ls	46ef98 <_obstack_memory_used@@Base+0xdb50>  // b.plast
  46ec38:	sub	w5, w5, #0x70
  46ec3c:	cmp	w5, #0x61
  46ec40:	b.gt	46ebfc <_obstack_memory_used@@Base+0xd7b4>
  46ec44:	ldr	x2, [x24, #832]
  46ec48:	sxtw	x1, w5
  46ec4c:	ldr	x0, [x24, x1, lsl #3]
  46ec50:	tbz	x2, #62, 46ec60 <_obstack_memory_used@@Base+0xd818>
  46ec54:	add	x1, x24, x1
  46ec58:	ldrb	w1, [x1, #856]
  46ec5c:	cbnz	w1, 46ec80 <_obstack_memory_used@@Base+0xd838>
  46ec60:	cmp	w5, #0x2e
  46ec64:	b.eq	46eff8 <_obstack_memory_used@@Base+0xdbb0>  // b.none
  46ec68:	adrp	x1, 4a5000 <__environ@@GLIBC_2.17+0xa68>
  46ec6c:	add	x1, x1, #0xb48
  46ec70:	ldrb	w1, [x1, w5, sxtw]
  46ec74:	cmp	w1, #0x8
  46ec78:	b.ne	46ebfc <_obstack_memory_used@@Base+0xd7b4>  // b.any
  46ec7c:	ldr	x0, [x0]
  46ec80:	add	x0, x3, x0
  46ec84:	mov	w3, w20
  46ec88:	mov	x19, x4
  46ec8c:	b	46eca0 <_obstack_memory_used@@Base+0xd858>
  46ec90:	mov	w3, w20
  46ec94:	add	x19, x19, #0x9
  46ec98:	ldur	x0, [x19, #-8]
  46ec9c:	nop
  46eca0:	cmp	w3, #0x3f
  46eca4:	b.gt	46ebfc <_obstack_memory_used@@Base+0xd7b4>
  46eca8:	add	w20, w3, #0x1
  46ecac:	str	x0, [x22, w3, sxtw #3]
  46ecb0:	cmp	x21, x19
  46ecb4:	b.hi	46ebe8 <_obstack_memory_used@@Base+0xd7a0>  // b.pmore
  46ecb8:	cbz	w20, 46ebfc <_obstack_memory_used@@Base+0xd7b4>
  46ecbc:	sub	w20, w20, #0x1
  46ecc0:	add	x0, sp, #0x60
  46ecc4:	ldp	x29, x30, [sp]
  46ecc8:	ldr	x0, [x0, w20, sxtw #3]
  46eccc:	ldp	x19, x20, [sp, #16]
  46ecd0:	ldp	x21, x22, [sp, #32]
  46ecd4:	ldp	x23, x24, [sp, #48]
  46ecd8:	ldp	x25, x26, [sp, #64]
  46ecdc:	add	sp, sp, #0x260
  46ece0:	ret
  46ece4:	sub	w5, w5, #0x50
  46ece8:	cmp	w5, #0x61
  46ecec:	b.gt	46ebfc <_obstack_memory_used@@Base+0xd7b4>
  46ecf0:	ldr	x2, [x24, #832]
  46ecf4:	sxtw	x1, w5
  46ecf8:	ldr	x0, [x24, x1, lsl #3]
  46ecfc:	tbz	x2, #62, 46ed0c <_obstack_memory_used@@Base+0xd8c4>
  46ed00:	add	x1, x24, x1
  46ed04:	ldrb	w1, [x1, #856]
  46ed08:	cbnz	w1, 46ec84 <_obstack_memory_used@@Base+0xd83c>
  46ed0c:	cmp	w5, #0x2e
  46ed10:	b.eq	46efe4 <_obstack_memory_used@@Base+0xdb9c>  // b.none
  46ed14:	adrp	x1, 4a5000 <__environ@@GLIBC_2.17+0xa68>
  46ed18:	add	x1, x1, #0xb48
  46ed1c:	ldrb	w1, [x1, w5, sxtw]
  46ed20:	cmp	w1, #0x8
  46ed24:	b.ne	46ebfc <_obstack_memory_used@@Base+0xd7b4>  // b.any
  46ed28:	mov	w3, w20
  46ed2c:	mov	x19, x4
  46ed30:	ldr	x0, [x0]
  46ed34:	b	46eca0 <_obstack_memory_used@@Base+0xd858>
  46ed38:	sub	w0, w5, #0x30
  46ed3c:	mov	w3, w20
  46ed40:	mov	x19, x4
  46ed44:	b	46eca0 <_obstack_memory_used@@Base+0xd858>
  46ed48:	cmp	w20, #0x1
  46ed4c:	b.le	46ebfc <_obstack_memory_used@@Base+0xd7b4>
  46ed50:	sub	w3, w20, #0x2
  46ed54:	sub	w20, w20, #0x1
  46ed58:	sub	w5, w5, #0x1a
  46ed5c:	cmp	w5, #0x14
  46ed60:	ldr	x1, [x22, w20, sxtw #3]
  46ed64:	ldr	x0, [x22, w3, sxtw #3]
  46ed68:	b.hi	46ebfc <_obstack_memory_used@@Base+0xd7b4>  // b.pmore
  46ed6c:	ldrh	w2, [x25, w5, uxtw #1]
  46ed70:	adr	x5, 46ed7c <_obstack_memory_used@@Base+0xd934>
  46ed74:	add	x2, x5, w2, sxth #2
  46ed78:	br	x2
  46ed7c:	cbz	w20, 46ebfc <_obstack_memory_used@@Base+0xd7b4>
  46ed80:	sub	w3, w20, #0x1
  46ed84:	cmp	w5, #0x20
  46ed88:	ldr	x0, [x22, w3, sxtw #3]
  46ed8c:	b.eq	46f2e0 <_obstack_memory_used@@Base+0xde98>  // b.none
  46ed90:	b.hi	46edb0 <_obstack_memory_used@@Base+0xd968>  // b.pmore
  46ed94:	cmp	w5, #0x19
  46ed98:	b.eq	46f014 <_obstack_memory_used@@Base+0xdbcc>  // b.none
  46ed9c:	cmp	w5, #0x1f
  46eda0:	b.ne	46ef84 <_obstack_memory_used@@Base+0xdb3c>  // b.any
  46eda4:	neg	x0, x0
  46eda8:	mov	x19, x4
  46edac:	b	46eca0 <_obstack_memory_used@@Base+0xd858>
  46edb0:	cmp	w5, #0x23
  46edb4:	b.eq	46efb8 <_obstack_memory_used@@Base+0xdb70>  // b.none
  46edb8:	cmp	w5, #0x94
  46edbc:	b.ne	46ebfc <_obstack_memory_used@@Base+0xd7b4>  // b.any
  46edc0:	ldrb	w1, [x19, #1]
  46edc4:	add	x19, x19, #0x2
  46edc8:	cmp	w1, #0x4
  46edcc:	b.eq	46f1d0 <_obstack_memory_used@@Base+0xdd88>  // b.none
  46edd0:	b.hi	46f2fc <_obstack_memory_used@@Base+0xdeb4>  // b.pmore
  46edd4:	cmp	w1, #0x1
  46edd8:	b.ne	46f2ec <_obstack_memory_used@@Base+0xdea4>  // b.any
  46eddc:	ldrb	w0, [x0]
  46ede0:	b	46eca0 <_obstack_memory_used@@Base+0xd858>
  46ede4:	cmp	w20, #0x2
  46ede8:	b.le	46ebfc <_obstack_memory_used@@Base+0xd7b4>
  46edec:	sub	w1, w20, #0x2
  46edf0:	sub	w2, w20, #0x1
  46edf4:	sub	w0, w20, #0x3
  46edf8:	mov	x19, x4
  46edfc:	sxtw	x1, w1
  46ee00:	sxtw	x2, w2
  46ee04:	sxtw	x0, w0
  46ee08:	ldr	x5, [x22, x1, lsl #3]
  46ee0c:	ldr	x3, [x22, x2, lsl #3]
  46ee10:	ldr	x4, [x22, x0, lsl #3]
  46ee14:	str	x5, [x22, x2, lsl #3]
  46ee18:	str	x4, [x22, x1, lsl #3]
  46ee1c:	str	x3, [x22, x0, lsl #3]
  46ee20:	b	46ecb0 <_obstack_memory_used@@Base+0xd868>
  46ee24:	cmp	w20, #0x1
  46ee28:	b.le	46ebfc <_obstack_memory_used@@Base+0xd7b4>
  46ee2c:	sub	w0, w20, #0x2
  46ee30:	sub	w1, w20, #0x1
  46ee34:	mov	x19, x4
  46ee38:	sxtw	x0, w0
  46ee3c:	sxtw	x1, w1
  46ee40:	ldr	x3, [x22, x0, lsl #3]
  46ee44:	ldr	x2, [x22, x1, lsl #3]
  46ee48:	str	x3, [x22, x1, lsl #3]
  46ee4c:	str	x2, [x22, x0, lsl #3]
  46ee50:	b	46ecb0 <_obstack_memory_used@@Base+0xd868>
  46ee54:	ldrb	w3, [x19, #1]
  46ee58:	sub	w1, w20, #0x1
  46ee5c:	add	x19, x19, #0x2
  46ee60:	sxtw	x2, w1
  46ee64:	cmp	x3, w1, sxtw
  46ee68:	b.ge	46ebfc <_obstack_memory_used@@Base+0xd7b4>  // b.tcont
  46ee6c:	sub	x1, x2, x3
  46ee70:	mov	w3, w20
  46ee74:	ldr	x0, [x22, x1, lsl #3]
  46ee78:	b	46eca0 <_obstack_memory_used@@Base+0xd858>
  46ee7c:	cmp	w20, #0x1
  46ee80:	b.le	46ebfc <_obstack_memory_used@@Base+0xd7b4>
  46ee84:	sub	w0, w20, #0x2
  46ee88:	mov	x19, x4
  46ee8c:	mov	w3, w20
  46ee90:	ldr	x0, [x22, w0, sxtw #3]
  46ee94:	b	46eca0 <_obstack_memory_used@@Base+0xd858>
  46ee98:	cbz	w20, 46ebfc <_obstack_memory_used@@Base+0xd7b4>
  46ee9c:	sub	w20, w20, #0x1
  46eea0:	mov	x19, x4
  46eea4:	b	46ecb0 <_obstack_memory_used@@Base+0xd868>
  46eea8:	cbz	w20, 46ebfc <_obstack_memory_used@@Base+0xd7b4>
  46eeac:	sub	w0, w20, #0x1
  46eeb0:	mov	x19, x4
  46eeb4:	mov	w3, w20
  46eeb8:	ldr	x0, [x22, w0, sxtw #3]
  46eebc:	b	46eca0 <_obstack_memory_used@@Base+0xd858>
  46eec0:	ldursh	x1, [x19, #1]
  46eec4:	add	x19, x19, #0x3
  46eec8:	add	x19, x19, x1
  46eecc:	b	46ecb0 <_obstack_memory_used@@Base+0xd868>
  46eed0:	ldrb	w0, [x19, #1]
  46eed4:	mov	w3, w20
  46eed8:	add	x19, x19, #0x2
  46eedc:	b	46eca0 <_obstack_memory_used@@Base+0xd858>
  46eee0:	ldrb	w26, [x19, #1]
  46eee4:	mov	x1, x24
  46eee8:	mov	w0, w26
  46eeec:	bl	46db60 <_obstack_memory_used@@Base+0xc718>
  46eef0:	add	x2, x19, #0x2
  46eef4:	mov	x1, x0
  46eef8:	add	x3, sp, #0x58
  46eefc:	mov	w0, w26
  46ef00:	bl	46da00 <_obstack_memory_used@@Base+0xc5b8>
  46ef04:	mov	x19, x0
  46ef08:	mov	w3, w20
  46ef0c:	ldr	x0, [sp, #88]
  46ef10:	b	46eca0 <_obstack_memory_used@@Base+0xd858>
  46ef14:	cbz	w20, 46ebfc <_obstack_memory_used@@Base+0xd7b4>
  46ef18:	sub	w20, w20, #0x1
  46ef1c:	add	x1, x19, #0x3
  46ef20:	ldr	x0, [x22, w20, sxtw #3]
  46ef24:	cbz	x0, 46efb0 <_obstack_memory_used@@Base+0xdb68>
  46ef28:	ldursh	x19, [x19, #1]
  46ef2c:	add	x19, x1, x19
  46ef30:	b	46ecb0 <_obstack_memory_used@@Base+0xd868>
  46ef34:	ldursw	x0, [x19, #1]
  46ef38:	mov	w3, w20
  46ef3c:	add	x19, x19, #0x5
  46ef40:	b	46eca0 <_obstack_memory_used@@Base+0xd858>
  46ef44:	ldur	w0, [x19, #1]
  46ef48:	mov	w3, w20
  46ef4c:	add	x19, x19, #0x5
  46ef50:	b	46eca0 <_obstack_memory_used@@Base+0xd858>
  46ef54:	ldursh	x0, [x19, #1]
  46ef58:	mov	w3, w20
  46ef5c:	add	x19, x19, #0x3
  46ef60:	b	46eca0 <_obstack_memory_used@@Base+0xd858>
  46ef64:	ldurh	w0, [x19, #1]
  46ef68:	mov	w3, w20
  46ef6c:	add	x19, x19, #0x3
  46ef70:	b	46eca0 <_obstack_memory_used@@Base+0xd858>
  46ef74:	ldrsb	x0, [x19, #1]
  46ef78:	mov	w3, w20
  46ef7c:	add	x19, x19, #0x2
  46ef80:	b	46eca0 <_obstack_memory_used@@Base+0xd858>
  46ef84:	cmp	w5, #0x6
  46ef88:	b.ne	46ebfc <_obstack_memory_used@@Base+0xd7b4>  // b.any
  46ef8c:	mov	x19, x4
  46ef90:	ldr	x0, [x0]
  46ef94:	b	46eca0 <_obstack_memory_used@@Base+0xd858>
  46ef98:	mov	x0, #0xffffffffffffffff    	// #-1
  46ef9c:	tst	x2, #0x40
  46efa0:	lsl	x0, x0, x1
  46efa4:	orr	x0, x3, x0
  46efa8:	csel	x3, x0, x3, ne  // ne = any
  46efac:	b	46ec38 <_obstack_memory_used@@Base+0xd7f0>
  46efb0:	mov	x19, x1
  46efb4:	b	46ecb0 <_obstack_memory_used@@Base+0xd868>
  46efb8:	mov	x6, #0x0                   	// #0
  46efbc:	mov	w2, #0x0                   	// #0
  46efc0:	ldrb	w5, [x4], #1
  46efc4:	and	x1, x5, #0x7f
  46efc8:	lsl	x1, x1, x2
  46efcc:	add	w2, w2, #0x7
  46efd0:	orr	x6, x6, x1
  46efd4:	tbnz	w5, #7, 46efc0 <_obstack_memory_used@@Base+0xdb78>
  46efd8:	add	x0, x0, x6
  46efdc:	mov	x19, x4
  46efe0:	b	46eca0 <_obstack_memory_used@@Base+0xd858>
  46efe4:	cntd	x0
  46efe8:	mov	w3, w20
  46efec:	mov	x19, x4
  46eff0:	sxtw	x0, w0
  46eff4:	b	46eca0 <_obstack_memory_used@@Base+0xd858>
  46eff8:	cntd	x0
  46effc:	sxtw	x0, w0
  46f000:	b	46ec80 <_obstack_memory_used@@Base+0xd838>
  46f004:	mov	x0, x3
  46f008:	ldp	x29, x30, [sp]
  46f00c:	add	sp, sp, #0x260
  46f010:	ret
  46f014:	cmp	x0, #0x0
  46f018:	mov	x19, x4
  46f01c:	cneg	x0, x0, lt  // lt = tstop
  46f020:	b	46eca0 <_obstack_memory_used@@Base+0xd858>
  46f024:	mov	x19, x4
  46f028:	mov	w1, #0x0                   	// #0
  46f02c:	mov	x4, #0x0                   	// #0
  46f030:	ldrb	w2, [x19], #1
  46f034:	and	x0, x2, #0x7f
  46f038:	lsl	x0, x0, x1
  46f03c:	add	w1, w1, #0x7
  46f040:	orr	x4, x4, x0
  46f044:	tbnz	w2, #7, 46f030 <_obstack_memory_used@@Base+0xdbe8>
  46f048:	mov	x3, #0x0                   	// #0
  46f04c:	mov	w1, #0x0                   	// #0
  46f050:	ldrb	w2, [x19], #1
  46f054:	and	x0, x2, #0x7f
  46f058:	lsl	x0, x0, x1
  46f05c:	add	w1, w1, #0x7
  46f060:	orr	x3, x3, x0
  46f064:	tbnz	w2, #7, 46f050 <_obstack_memory_used@@Base+0xdc08>
  46f068:	cmp	w1, #0x3f
  46f06c:	b.hi	46f084 <_obstack_memory_used@@Base+0xdc3c>  // b.pmore
  46f070:	mov	x0, #0xffffffffffffffff    	// #-1
  46f074:	tst	x2, #0x40
  46f078:	lsl	x0, x0, x1
  46f07c:	orr	x0, x3, x0
  46f080:	csel	x3, x0, x3, ne  // ne = any
  46f084:	cmp	w4, #0x61
  46f088:	mov	w1, w4
  46f08c:	b.gt	46ebfc <_obstack_memory_used@@Base+0xd7b4>
  46f090:	ldr	x2, [x24, #832]
  46f094:	sxtw	x4, w4
  46f098:	ldr	x0, [x24, x4, lsl #3]
  46f09c:	tbz	x2, #62, 46f0ac <_obstack_memory_used@@Base+0xdc64>
  46f0a0:	add	x4, x24, x4
  46f0a4:	ldrb	w2, [x4, #856]
  46f0a8:	cbnz	w2, 46f0cc <_obstack_memory_used@@Base+0xdc84>
  46f0ac:	cmp	w1, #0x2e
  46f0b0:	b.eq	46f2c0 <_obstack_memory_used@@Base+0xde78>  // b.none
  46f0b4:	adrp	x2, 4a5000 <__environ@@GLIBC_2.17+0xa68>
  46f0b8:	add	x2, x2, #0xb48
  46f0bc:	ldrb	w1, [x2, w1, sxtw]
  46f0c0:	cmp	w1, #0x8
  46f0c4:	b.ne	46ebfc <_obstack_memory_used@@Base+0xd7b4>  // b.any
  46f0c8:	ldr	x0, [x0]
  46f0cc:	add	x0, x3, x0
  46f0d0:	mov	w3, w20
  46f0d4:	b	46eca0 <_obstack_memory_used@@Base+0xd858>
  46f0d8:	mov	x19, x4
  46f0dc:	mov	x0, #0x0                   	// #0
  46f0e0:	mov	w2, #0x0                   	// #0
  46f0e4:	nop
  46f0e8:	ldrb	w4, [x19], #1
  46f0ec:	and	x1, x4, #0x7f
  46f0f0:	lsl	x1, x1, x2
  46f0f4:	add	w2, w2, #0x7
  46f0f8:	orr	x0, x0, x1
  46f0fc:	tbnz	w4, #7, 46f0e8 <_obstack_memory_used@@Base+0xdca0>
  46f100:	mov	w3, w20
  46f104:	cmp	w2, #0x3f
  46f108:	b.hi	46eca0 <_obstack_memory_used@@Base+0xd858>  // b.pmore
  46f10c:	tbz	w4, #6, 46eca0 <_obstack_memory_used@@Base+0xd858>
  46f110:	mov	x1, #0xffffffffffffffff    	// #-1
  46f114:	lsl	x2, x1, x2
  46f118:	orr	x0, x0, x2
  46f11c:	b	46eca0 <_obstack_memory_used@@Base+0xd858>
  46f120:	mov	x19, x4
  46f124:	mov	x0, #0x0                   	// #0
  46f128:	mov	w2, #0x0                   	// #0
  46f12c:	nop
  46f130:	ldrb	w3, [x19], #1
  46f134:	and	x1, x3, #0x7f
  46f138:	lsl	x1, x1, x2
  46f13c:	add	w2, w2, #0x7
  46f140:	orr	x0, x0, x1
  46f144:	tbnz	w3, #7, 46f130 <_obstack_memory_used@@Base+0xdce8>
  46f148:	mov	w3, w20
  46f14c:	b	46eca0 <_obstack_memory_used@@Base+0xd858>
  46f150:	mov	x19, x4
  46f154:	mov	x3, #0x0                   	// #0
  46f158:	mov	w1, #0x0                   	// #0
  46f15c:	nop
  46f160:	ldrb	w2, [x19], #1
  46f164:	and	x0, x2, #0x7f
  46f168:	lsl	x0, x0, x1
  46f16c:	add	w1, w1, #0x7
  46f170:	orr	x3, x3, x0
  46f174:	tbnz	w2, #7, 46f160 <_obstack_memory_used@@Base+0xdd18>
  46f178:	cmp	w3, #0x61
  46f17c:	mov	w1, w3
  46f180:	b.gt	46ebfc <_obstack_memory_used@@Base+0xd7b4>
  46f184:	ldr	x2, [x24, #832]
  46f188:	sxtw	x3, w3
  46f18c:	ldr	x0, [x24, x3, lsl #3]
  46f190:	tbz	x2, #62, 46f1a0 <_obstack_memory_used@@Base+0xdd58>
  46f194:	add	x3, x24, x3
  46f198:	ldrb	w2, [x3, #856]
  46f19c:	cbnz	w2, 46f0d0 <_obstack_memory_used@@Base+0xdc88>
  46f1a0:	cmp	w1, #0x2e
  46f1a4:	b.eq	46f2d0 <_obstack_memory_used@@Base+0xde88>  // b.none
  46f1a8:	adrp	x2, 4a5000 <__environ@@GLIBC_2.17+0xa68>
  46f1ac:	add	x2, x2, #0xb48
  46f1b0:	ldrb	w1, [x2, w1, sxtw]
  46f1b4:	cmp	w1, #0x8
  46f1b8:	b.ne	46ebfc <_obstack_memory_used@@Base+0xd7b4>  // b.any
  46f1bc:	mov	w3, w20
  46f1c0:	ldr	x0, [x0]
  46f1c4:	b	46eca0 <_obstack_memory_used@@Base+0xd858>
  46f1c8:	mov	x19, x4
  46f1cc:	b	46ecb0 <_obstack_memory_used@@Base+0xd868>
  46f1d0:	ldr	w0, [x0]
  46f1d4:	b	46eca0 <_obstack_memory_used@@Base+0xd858>
  46f1d8:	cmp	x0, x1
  46f1dc:	mov	x19, x4
  46f1e0:	cset	x0, ne  // ne = any
  46f1e4:	b	46eca0 <_obstack_memory_used@@Base+0xd858>
  46f1e8:	cmp	x0, x1
  46f1ec:	mov	x19, x4
  46f1f0:	cset	x0, lt  // lt = tstop
  46f1f4:	b	46eca0 <_obstack_memory_used@@Base+0xd858>
  46f1f8:	cmp	x0, x1
  46f1fc:	mov	x19, x4
  46f200:	cset	x0, le
  46f204:	b	46eca0 <_obstack_memory_used@@Base+0xd858>
  46f208:	cmp	x0, x1
  46f20c:	mov	x19, x4
  46f210:	cset	x0, gt
  46f214:	b	46eca0 <_obstack_memory_used@@Base+0xd858>
  46f218:	cmp	x0, x1
  46f21c:	mov	x19, x4
  46f220:	cset	x0, ge  // ge = tcont
  46f224:	b	46eca0 <_obstack_memory_used@@Base+0xd858>
  46f228:	cmp	x0, x1
  46f22c:	mov	x19, x4
  46f230:	cset	x0, eq  // eq = none
  46f234:	b	46eca0 <_obstack_memory_used@@Base+0xd858>
  46f238:	eor	x0, x0, x1
  46f23c:	mov	x19, x4
  46f240:	b	46eca0 <_obstack_memory_used@@Base+0xd858>
  46f244:	mov	x19, x4
  46f248:	asr	x0, x0, x1
  46f24c:	b	46eca0 <_obstack_memory_used@@Base+0xd858>
  46f250:	mov	x19, x4
  46f254:	lsr	x0, x0, x1
  46f258:	b	46eca0 <_obstack_memory_used@@Base+0xd858>
  46f25c:	mov	x19, x4
  46f260:	lsl	x0, x0, x1
  46f264:	b	46eca0 <_obstack_memory_used@@Base+0xd858>
  46f268:	add	x0, x0, x1
  46f26c:	mov	x19, x4
  46f270:	b	46eca0 <_obstack_memory_used@@Base+0xd858>
  46f274:	orr	x0, x0, x1
  46f278:	mov	x19, x4
  46f27c:	b	46eca0 <_obstack_memory_used@@Base+0xd858>
  46f280:	mul	x0, x0, x1
  46f284:	mov	x19, x4
  46f288:	b	46eca0 <_obstack_memory_used@@Base+0xd858>
  46f28c:	udiv	x2, x0, x1
  46f290:	mov	x19, x4
  46f294:	msub	x0, x2, x1, x0
  46f298:	b	46eca0 <_obstack_memory_used@@Base+0xd858>
  46f29c:	sub	x0, x0, x1
  46f2a0:	mov	x19, x4
  46f2a4:	b	46eca0 <_obstack_memory_used@@Base+0xd858>
  46f2a8:	sdiv	x0, x0, x1
  46f2ac:	mov	x19, x4
  46f2b0:	b	46eca0 <_obstack_memory_used@@Base+0xd858>
  46f2b4:	and	x0, x0, x1
  46f2b8:	mov	x19, x4
  46f2bc:	b	46eca0 <_obstack_memory_used@@Base+0xd858>
  46f2c0:	cntd	x0
  46f2c4:	sxtw	x0, w0
  46f2c8:	add	x0, x3, x0
  46f2cc:	b	46f0d0 <_obstack_memory_used@@Base+0xdc88>
  46f2d0:	cntd	x0
  46f2d4:	mov	w3, w20
  46f2d8:	sxtw	x0, w0
  46f2dc:	b	46eca0 <_obstack_memory_used@@Base+0xd858>
  46f2e0:	mvn	x0, x0
  46f2e4:	mov	x19, x4
  46f2e8:	b	46eca0 <_obstack_memory_used@@Base+0xd858>
  46f2ec:	cmp	w1, #0x2
  46f2f0:	b.ne	46ebfc <_obstack_memory_used@@Base+0xd7b4>  // b.any
  46f2f4:	ldrh	w0, [x0]
  46f2f8:	b	46eca0 <_obstack_memory_used@@Base+0xd858>
  46f2fc:	cmp	w1, #0x8
  46f300:	b.ne	46ebfc <_obstack_memory_used@@Base+0xd7b4>  // b.any
  46f304:	ldr	x0, [x0]
  46f308:	b	46eca0 <_obstack_memory_used@@Base+0xd858>
  46f30c:	nop
  46f310:	sub	sp, sp, #0x440
  46f314:	mov	x2, #0x3c0                 	// #960
  46f318:	stp	x29, x30, [sp]
  46f31c:	mov	x29, sp
  46f320:	stp	x27, x28, [sp, #80]
  46f324:	add	x28, sp, #0x80
  46f328:	mov	x27, x0
  46f32c:	stp	x19, x20, [sp, #16]
  46f330:	stp	x21, x22, [sp, #32]
  46f334:	stp	x23, x24, [sp, #48]
  46f338:	stp	x25, x26, [sp, #64]
  46f33c:	str	x1, [sp, #104]
  46f340:	mov	x1, x0
  46f344:	mov	x0, x28
  46f348:	bl	402490 <memcpy@plt>
  46f34c:	ldr	x1, [sp, #960]
  46f350:	tbz	x1, #62, 46f35c <_obstack_memory_used@@Base+0xdf14>
  46f354:	ldrb	w0, [sp, #1015]
  46f358:	cbnz	w0, 46f364 <_obstack_memory_used@@Base+0xdf1c>
  46f35c:	ldr	x0, [x28, #248]
  46f360:	cbz	x0, 46f630 <_obstack_memory_used@@Base+0xe1e8>
  46f364:	ldr	x0, [x27, #832]
  46f368:	tbz	x0, #62, 46f370 <_obstack_memory_used@@Base+0xdf28>
  46f36c:	strb	wzr, [x27, #887]
  46f370:	ldr	x0, [sp, #104]
  46f374:	ldr	w0, [x0, #1600]
  46f378:	str	xzr, [x27, #248]
  46f37c:	cmp	w0, #0x1
  46f380:	b.ne	46f3d0 <_obstack_memory_used@@Base+0xdf88>  // b.any
  46f384:	ldr	x0, [sp, #104]
  46f388:	ldr	x0, [x0, #1584]
  46f38c:	cmp	w0, #0x61
  46f390:	b.gt	46f598 <_obstack_memory_used@@Base+0xe150>
  46f394:	sxtw	x2, w0
  46f398:	ldr	x3, [x28, x2, lsl #3]
  46f39c:	tbnz	x1, #62, 46f610 <_obstack_memory_used@@Base+0xe1c8>
  46f3a0:	cmp	w0, #0x2e
  46f3a4:	b.eq	46f624 <_obstack_memory_used@@Base+0xe1dc>  // b.none
  46f3a8:	adrp	x0, 4a5000 <__environ@@GLIBC_2.17+0xa68>
  46f3ac:	add	x0, x0, #0xb48
  46f3b0:	ldrb	w0, [x0, x2]
  46f3b4:	cmp	w0, #0x8
  46f3b8:	b.ne	46f598 <_obstack_memory_used@@Base+0xe150>  // b.any
  46f3bc:	ldr	x3, [x3]
  46f3c0:	ldr	x0, [sp, #104]
  46f3c4:	ldr	x0, [x0, #1576]
  46f3c8:	add	x22, x3, x0
  46f3cc:	b	46f414 <_obstack_memory_used@@Base+0xdfcc>
  46f3d0:	cmp	w0, #0x2
  46f3d4:	b.ne	46f598 <_obstack_memory_used@@Base+0xe150>  // b.any
  46f3d8:	ldr	x0, [sp, #104]
  46f3dc:	mov	x1, #0x0                   	// #0
  46f3e0:	mov	w3, #0x0                   	// #0
  46f3e4:	ldr	x0, [x0, #1592]
  46f3e8:	ldrb	w4, [x0], #1
  46f3ec:	and	x2, x4, #0x7f
  46f3f0:	lsl	x2, x2, x3
  46f3f4:	add	w3, w3, #0x7
  46f3f8:	orr	x1, x1, x2
  46f3fc:	tbnz	w4, #7, 46f3e8 <_obstack_memory_used@@Base+0xdfa0>
  46f400:	add	x1, x0, x1
  46f404:	mov	x2, x28
  46f408:	mov	x3, #0x0                   	// #0
  46f40c:	bl	46eb98 <_obstack_memory_used@@Base+0xd750>
  46f410:	mov	x22, x0
  46f414:	ldr	x25, [sp, #104]
  46f418:	adrp	x23, 4a5000 <__environ@@GLIBC_2.17+0xa68>
  46f41c:	add	x26, x27, #0x358
  46f420:	add	x20, x23, #0xb48
  46f424:	add	x21, sp, #0x3d8
  46f428:	mov	x24, #0x0                   	// #0
  46f42c:	mov	w19, #0x1                   	// #1
  46f430:	str	x22, [x27, #784]
  46f434:	nop
  46f438:	ldr	w2, [x25, #8]
  46f43c:	cmp	w2, #0x3
  46f440:	b.eq	46f4e4 <_obstack_memory_used@@Base+0xe09c>  // b.none
  46f444:	b.hi	46f528 <_obstack_memory_used@@Base+0xe0e0>  // b.pmore
  46f448:	cmp	w2, #0x1
  46f44c:	b.eq	46f59c <_obstack_memory_used@@Base+0xe154>  // b.none
  46f450:	cmp	w2, #0x2
  46f454:	b.ne	46f47c <_obstack_memory_used@@Base+0xe034>  // b.any
  46f458:	ldr	x0, [x25]
  46f45c:	ldrb	w2, [x21, w0, sxtw]
  46f460:	sxtw	x1, w0
  46f464:	cbnz	w2, 46f5b4 <_obstack_memory_used@@Base+0xe16c>
  46f468:	ldr	x2, [x27, #832]
  46f46c:	ldr	x0, [x28, x1, lsl #3]
  46f470:	tbnz	x2, #62, 46f520 <_obstack_memory_used@@Base+0xe0d8>
  46f474:	nop
  46f478:	str	x0, [x27, x24, lsl #3]
  46f47c:	add	x24, x24, #0x1
  46f480:	add	x25, x25, #0x10
  46f484:	cmp	x24, #0x62
  46f488:	add	x26, x26, #0x1
  46f48c:	b.ne	46f438 <_obstack_memory_used@@Base+0xdff0>  // b.any
  46f490:	ldr	x3, [sp, #104]
  46f494:	ldr	x0, [x27, #832]
  46f498:	ldrb	w2, [x3, #1651]
  46f49c:	orr	x1, x0, #0x8000000000000000
  46f4a0:	and	x0, x0, #0x7fffffffffffffff
  46f4a4:	cmp	w2, #0x0
  46f4a8:	csel	x0, x0, x1, eq  // eq = none
  46f4ac:	ldp	x29, x30, [sp]
  46f4b0:	orr	x1, x0, #0x2000000000000000
  46f4b4:	ldp	x19, x20, [sp, #16]
  46f4b8:	ldp	x21, x22, [sp, #32]
  46f4bc:	ldp	x23, x24, [sp, #48]
  46f4c0:	ldp	x25, x26, [sp, #64]
  46f4c4:	str	x0, [x27, #832]
  46f4c8:	ldr	x2, [x3, #544]
  46f4cc:	tst	x2, #0x1
  46f4d0:	csel	x0, x1, x0, ne  // ne = any
  46f4d4:	str	x0, [x27, #832]
  46f4d8:	ldp	x27, x28, [sp, #80]
  46f4dc:	add	sp, sp, #0x440
  46f4e0:	ret
  46f4e4:	ldr	x0, [x25]
  46f4e8:	mov	x1, #0x0                   	// #0
  46f4ec:	mov	w4, #0x0                   	// #0
  46f4f0:	ldrb	w5, [x0], #1
  46f4f4:	and	x2, x5, #0x7f
  46f4f8:	lsl	x2, x2, x4
  46f4fc:	add	w4, w4, #0x7
  46f500:	orr	x1, x1, x2
  46f504:	tbnz	w5, #7, 46f4f0 <_obstack_memory_used@@Base+0xe0a8>
  46f508:	add	x1, x0, x1
  46f50c:	mov	x3, x22
  46f510:	mov	x2, x28
  46f514:	bl	46eb98 <_obstack_memory_used@@Base+0xd750>
  46f518:	ldr	x1, [x27, #832]
  46f51c:	tbz	x1, #62, 46f478 <_obstack_memory_used@@Base+0xe030>
  46f520:	strb	wzr, [x26]
  46f524:	b	46f478 <_obstack_memory_used@@Base+0xe030>
  46f528:	cmp	w2, #0x4
  46f52c:	b.eq	46f584 <_obstack_memory_used@@Base+0xe13c>  // b.none
  46f530:	cmp	w2, #0x5
  46f534:	b.ne	46f47c <_obstack_memory_used@@Base+0xe034>  // b.any
  46f538:	ldr	x0, [x25]
  46f53c:	mov	x1, #0x0                   	// #0
  46f540:	mov	w4, #0x0                   	// #0
  46f544:	nop
  46f548:	ldrb	w5, [x0], #1
  46f54c:	and	x2, x5, #0x7f
  46f550:	lsl	x2, x2, x4
  46f554:	add	w4, w4, #0x7
  46f558:	orr	x1, x1, x2
  46f55c:	tbnz	w5, #7, 46f548 <_obstack_memory_used@@Base+0xe100>
  46f560:	add	x1, x0, x1
  46f564:	mov	x3, x22
  46f568:	mov	x2, x28
  46f56c:	bl	46eb98 <_obstack_memory_used@@Base+0xd750>
  46f570:	ldrb	w1, [x24, x20]
  46f574:	cmp	w1, #0x8
  46f578:	b.hi	46f598 <_obstack_memory_used@@Base+0xe150>  // b.pmore
  46f57c:	strb	w19, [x26]
  46f580:	b	46f478 <_obstack_memory_used@@Base+0xe030>
  46f584:	ldr	x0, [x25]
  46f588:	ldrb	w1, [x24, x20]
  46f58c:	add	x0, x22, x0
  46f590:	cmp	w1, #0x8
  46f594:	b.ls	46f57c <_obstack_memory_used@@Base+0xe134>  // b.plast
  46f598:	bl	4027f0 <abort@plt>
  46f59c:	ldr	x1, [x27, #832]
  46f5a0:	ldr	x0, [x25]
  46f5a4:	add	x0, x22, x0
  46f5a8:	tbz	x1, #62, 46f478 <_obstack_memory_used@@Base+0xe030>
  46f5ac:	strb	wzr, [x26]
  46f5b0:	b	46f478 <_obstack_memory_used@@Base+0xe030>
  46f5b4:	cmp	w0, #0x61
  46f5b8:	b.gt	46f598 <_obstack_memory_used@@Base+0xe150>
  46f5bc:	ldr	x4, [sp, #960]
  46f5c0:	ldr	x2, [x28, x1, lsl #3]
  46f5c4:	tbz	x4, #62, 46f5e8 <_obstack_memory_used@@Base+0xe1a0>
  46f5c8:	mov	x0, x2
  46f5cc:	nop
  46f5d0:	add	x1, x23, #0xb48
  46f5d4:	ldrb	w1, [x24, x1]
  46f5d8:	cmp	w1, #0x8
  46f5dc:	b.hi	46f598 <_obstack_memory_used@@Base+0xe150>  // b.pmore
  46f5e0:	strb	w19, [x26]
  46f5e4:	b	46f478 <_obstack_memory_used@@Base+0xe030>
  46f5e8:	cmp	w0, #0x2e
  46f5ec:	b.eq	46f604 <_obstack_memory_used@@Base+0xe1bc>  // b.none
  46f5f0:	ldrb	w0, [x20, x1]
  46f5f4:	cmp	w0, #0x8
  46f5f8:	b.ne	46f598 <_obstack_memory_used@@Base+0xe150>  // b.any
  46f5fc:	ldr	x0, [x2]
  46f600:	b	46f5d0 <_obstack_memory_used@@Base+0xe188>
  46f604:	cntd	x0
  46f608:	sxtw	x0, w0
  46f60c:	b	46f5d0 <_obstack_memory_used@@Base+0xe188>
  46f610:	add	x1, sp, #0x3d8
  46f614:	ldrb	w1, [x1, x2]
  46f618:	cbnz	w1, 46f3c0 <_obstack_memory_used@@Base+0xdf78>
  46f61c:	cmp	w0, #0x2e
  46f620:	b.ne	46f3a8 <_obstack_memory_used@@Base+0xdf60>  // b.any
  46f624:	cntd	x0
  46f628:	sxtw	x3, w0
  46f62c:	b	46f3c0 <_obstack_memory_used@@Base+0xdf78>
  46f630:	adrp	x0, 4a5000 <__environ@@GLIBC_2.17+0xa68>
  46f634:	ldr	x2, [x27, #784]
  46f638:	ldrb	w0, [x0, #2919]
  46f63c:	cmp	w0, #0x8
  46f640:	b.ne	46f598 <_obstack_memory_used@@Base+0xe150>  // b.any
  46f644:	str	x2, [sp, #120]
  46f648:	tbz	x1, #62, 46f650 <_obstack_memory_used@@Base+0xe208>
  46f64c:	strb	wzr, [sp, #1015]
  46f650:	add	x0, sp, #0x78
  46f654:	str	x0, [x28, #248]
  46f658:	b	46f364 <_obstack_memory_used@@Base+0xdf1c>
  46f65c:	nop
  46f660:	sub	sp, sp, #0x6d0
  46f664:	stp	x29, x30, [sp]
  46f668:	mov	x29, sp
  46f66c:	xpaclri
  46f670:	stp	x19, x20, [sp, #16]
  46f674:	mov	x19, x0
  46f678:	mov	x20, x30
  46f67c:	stp	x21, x22, [sp, #32]
  46f680:	mov	x22, x1
  46f684:	mov	x21, x2
  46f688:	mov	w1, #0x0                   	// #0
  46f68c:	mov	x2, #0x3c0                 	// #960
  46f690:	str	x23, [sp, #48]
  46f694:	bl	4026f0 <memset@plt>
  46f698:	mov	x0, #0x4000000000000000    	// #4611686018427387904
  46f69c:	str	x20, [x19, #792]
  46f6a0:	str	x0, [x19, #832]
  46f6a4:	add	x23, sp, #0x50
  46f6a8:	mov	x1, x23
  46f6ac:	mov	x0, x19
  46f6b0:	bl	46e4e0 <_obstack_memory_used@@Base+0xd098>
  46f6b4:	cbnz	w0, 46f8a8 <_obstack_memory_used@@Base+0xe460>
  46f6b8:	adrp	x0, 4a3000 <_obstack_memory_used@@Base+0x41bb8>
  46f6bc:	adrp	x20, 4a5000 <__environ@@GLIBC_2.17+0xa68>
  46f6c0:	ldr	x0, [x0, #3880]
  46f6c4:	cbz	x0, 46f74c <_obstack_memory_used@@Base+0xe304>
  46f6c8:	add	x0, x20, #0xb48
  46f6cc:	adrp	x1, 46e000 <_obstack_memory_used@@Base+0xcbb8>
  46f6d0:	add	x0, x0, #0x64
  46f6d4:	add	x1, x1, #0x388
  46f6d8:	bl	402860 <pthread_once@plt>
  46f6dc:	cbnz	w0, 46f74c <_obstack_memory_used@@Base+0xe304>
  46f6e0:	add	x20, x20, #0xb48
  46f6e4:	ldrb	w0, [x20, #31]
  46f6e8:	cmp	w0, #0x8
  46f6ec:	b.ne	46f8a8 <_obstack_memory_used@@Base+0xe460>  // b.any
  46f6f0:	ldr	x0, [x19, #832]
  46f6f4:	str	x22, [sp, #72]
  46f6f8:	tbz	x0, #62, 46f700 <_obstack_memory_used@@Base+0xe2b8>
  46f6fc:	strb	wzr, [x19, #887]
  46f700:	add	x0, sp, #0x48
  46f704:	mov	x3, #0x1f                  	// #31
  46f708:	mov	w2, #0x1                   	// #1
  46f70c:	str	x0, [x19, #248]
  46f710:	mov	x1, x23
  46f714:	mov	x0, x19
  46f718:	str	xzr, [sp, #1656]
  46f71c:	str	x3, [sp, #1664]
  46f720:	str	w2, [sp, #1680]
  46f724:	bl	46f310 <_obstack_memory_used@@Base+0xdec8>
  46f728:	mov	x30, x21
  46f72c:	xpaclri
  46f730:	ldp	x21, x22, [sp, #32]
  46f734:	ldr	x23, [sp, #48]
  46f738:	str	x30, [x19, #792]
  46f73c:	ldp	x29, x30, [sp]
  46f740:	ldp	x19, x20, [sp, #16]
  46f744:	add	sp, sp, #0x6d0
  46f748:	ret
  46f74c:	ldrb	w0, [x20, #2888]
  46f750:	add	x3, x20, #0xb48
  46f754:	cbnz	w0, 46f6e0 <_obstack_memory_used@@Base+0xe298>
  46f758:	mov	w4, #0x8                   	// #8
  46f75c:	strb	w4, [x20, #2888]
  46f760:	strb	w4, [x3, #1]
  46f764:	strb	w4, [x3, #2]
  46f768:	strb	w4, [x3, #3]
  46f76c:	strb	w4, [x3, #4]
  46f770:	strb	w4, [x3, #5]
  46f774:	strb	w4, [x3, #6]
  46f778:	strb	w4, [x3, #7]
  46f77c:	strb	w4, [x3, #8]
  46f780:	strb	w4, [x3, #9]
  46f784:	strb	w4, [x3, #10]
  46f788:	strb	w4, [x3, #11]
  46f78c:	strb	w4, [x3, #12]
  46f790:	strb	w4, [x3, #13]
  46f794:	strb	w4, [x3, #14]
  46f798:	strb	w4, [x3, #15]
  46f79c:	strb	w4, [x3, #16]
  46f7a0:	strb	w4, [x3, #17]
  46f7a4:	strb	w4, [x3, #18]
  46f7a8:	strb	w4, [x3, #19]
  46f7ac:	strb	w4, [x3, #20]
  46f7b0:	strb	w4, [x3, #21]
  46f7b4:	strb	w4, [x3, #22]
  46f7b8:	strb	w4, [x3, #23]
  46f7bc:	strb	w4, [x3, #24]
  46f7c0:	strb	w4, [x3, #25]
  46f7c4:	strb	w4, [x3, #26]
  46f7c8:	strb	w4, [x3, #27]
  46f7cc:	strb	w4, [x3, #28]
  46f7d0:	strb	w4, [x3, #29]
  46f7d4:	strb	w4, [x3, #30]
  46f7d8:	strb	w4, [x3, #31]
  46f7dc:	strb	w4, [x3, #64]
  46f7e0:	strb	w4, [x3, #46]
  46f7e4:	strb	w4, [x3, #65]
  46f7e8:	strb	w4, [x3, #66]
  46f7ec:	strb	w4, [x3, #67]
  46f7f0:	strb	w4, [x3, #68]
  46f7f4:	strb	w4, [x3, #69]
  46f7f8:	strb	w4, [x3, #70]
  46f7fc:	strb	w4, [x3, #71]
  46f800:	strb	w4, [x3, #72]
  46f804:	strb	w4, [x3, #73]
  46f808:	strb	w4, [x3, #74]
  46f80c:	strb	w4, [x3, #75]
  46f810:	strb	w4, [x3, #76]
  46f814:	strb	w4, [x3, #77]
  46f818:	strb	w4, [x3, #78]
  46f81c:	strb	w4, [x3, #79]
  46f820:	strb	w4, [x3, #80]
  46f824:	strb	w4, [x3, #81]
  46f828:	strb	w4, [x3, #82]
  46f82c:	strb	w4, [x3, #83]
  46f830:	strb	w4, [x3, #84]
  46f834:	strb	w4, [x3, #85]
  46f838:	strb	w4, [x3, #86]
  46f83c:	strb	w4, [x3, #87]
  46f840:	strb	w4, [x3, #88]
  46f844:	strb	w4, [x3, #89]
  46f848:	strb	w4, [x3, #90]
  46f84c:	strb	w4, [x3, #91]
  46f850:	strb	w4, [x3, #92]
  46f854:	strb	w4, [x3, #93]
  46f858:	strb	w4, [x3, #94]
  46f85c:	strb	w4, [x3, #95]
  46f860:	strb	w4, [x3, #48]
  46f864:	strb	w4, [x3, #49]
  46f868:	strb	w4, [x3, #50]
  46f86c:	strb	w4, [x3, #51]
  46f870:	strb	w4, [x3, #52]
  46f874:	strb	w4, [x3, #53]
  46f878:	strb	w4, [x3, #54]
  46f87c:	strb	w4, [x3, #55]
  46f880:	strb	w4, [x3, #56]
  46f884:	strb	w4, [x3, #57]
  46f888:	strb	w4, [x3, #58]
  46f88c:	strb	w4, [x3, #59]
  46f890:	strb	w4, [x3, #60]
  46f894:	strb	w4, [x3, #61]
  46f898:	strb	w4, [x3, #62]
  46f89c:	strb	w4, [x3, #63]
  46f8a0:	strb	w4, [x3, #96]
  46f8a4:	b	46f6e0 <_obstack_memory_used@@Base+0xe298>
  46f8a8:	bl	4027f0 <abort@plt>
  46f8ac:	nop
  46f8b0:	stp	x29, x30, [sp, #-32]!
  46f8b4:	mov	x29, sp
  46f8b8:	stp	x19, x20, [sp, #16]
  46f8bc:	mov	x20, x1
  46f8c0:	mov	x19, x0
  46f8c4:	bl	46f310 <_obstack_memory_used@@Base+0xdec8>
  46f8c8:	ldr	x0, [x20, #1640]
  46f8cc:	add	x1, x20, x0, lsl #4
  46f8d0:	ldr	w1, [x1, #8]
  46f8d4:	cmp	w1, #0x6
  46f8d8:	b.ne	46f8ec <_obstack_memory_used@@Base+0xe4a4>  // b.any
  46f8dc:	str	xzr, [x19, #792]
  46f8e0:	ldp	x19, x20, [sp, #16]
  46f8e4:	ldp	x29, x30, [sp], #32
  46f8e8:	ret
  46f8ec:	cmp	w0, #0x61
  46f8f0:	b.gt	46f960 <_obstack_memory_used@@Base+0xe518>
  46f8f4:	ldr	x2, [x19, #832]
  46f8f8:	sxtw	x1, w0
  46f8fc:	ldr	x17, [x19, x1, lsl #3]
  46f900:	tbz	x2, #62, 46f910 <_obstack_memory_used@@Base+0xe4c8>
  46f904:	add	x2, x19, x1
  46f908:	ldrb	w2, [x2, #856]
  46f90c:	cbnz	w2, 46f930 <_obstack_memory_used@@Base+0xe4e8>
  46f910:	cmp	w0, #0x2e
  46f914:	b.eq	46f954 <_obstack_memory_used@@Base+0xe50c>  // b.none
  46f918:	adrp	x0, 4a5000 <__environ@@GLIBC_2.17+0xa68>
  46f91c:	add	x0, x0, #0xb48
  46f920:	ldrb	w0, [x0, x1]
  46f924:	cmp	w0, #0x8
  46f928:	b.ne	46f960 <_obstack_memory_used@@Base+0xe518>  // b.any
  46f92c:	ldr	x17, [x17]
  46f930:	ldr	x0, [x20, #544]
  46f934:	str	x17, [x19, #792]
  46f938:	tbz	w0, #0, 46f944 <_obstack_memory_used@@Base+0xe4fc>
  46f93c:	ldr	x16, [x19, #784]
  46f940:	autia1716
  46f944:	str	x17, [x19, #792]
  46f948:	ldp	x19, x20, [sp, #16]
  46f94c:	ldp	x29, x30, [sp], #32
  46f950:	ret
  46f954:	cntd	x0
  46f958:	sxtw	x17, w0
  46f95c:	b	46f930 <_obstack_memory_used@@Base+0xe4e8>
  46f960:	bl	4027f0 <abort@plt>
  46f964:	nop
  46f968:	sub	sp, sp, #0x6c0
  46f96c:	stp	x29, x30, [sp]
  46f970:	mov	x29, sp
  46f974:	stp	x19, x20, [sp, #16]
  46f978:	mov	x19, x1
  46f97c:	stp	x21, x22, [sp, #32]
  46f980:	mov	x21, x0
  46f984:	add	x22, sp, #0x40
  46f988:	stp	x23, x24, [sp, #48]
  46f98c:	mov	x24, x2
  46f990:	mov	x23, #0x1                   	// #1
  46f994:	nop
  46f998:	mov	x1, x22
  46f99c:	mov	x0, x19
  46f9a0:	bl	46e4e0 <_obstack_memory_used@@Base+0xd098>
  46f9a4:	ldr	x3, [x19, #784]
  46f9a8:	ldr	x1, [x19, #832]
  46f9ac:	ldr	x2, [x21, #24]
  46f9b0:	sub	x1, x3, x1, lsr #63
  46f9b4:	cmp	x2, x1
  46f9b8:	cset	w20, eq  // eq = none
  46f9bc:	lsl	w20, w20, #2
  46f9c0:	cbnz	w0, 46fa0c <_obstack_memory_used@@Base+0xe5c4>
  46f9c4:	ldr	x5, [sp, #1680]
  46f9c8:	cbz	x5, 46f9f4 <_obstack_memory_used@@Base+0xe5ac>
  46f9cc:	ldr	x2, [x21]
  46f9d0:	mov	x4, x19
  46f9d4:	mov	x3, x21
  46f9d8:	orr	w1, w20, #0x2
  46f9dc:	mov	w0, #0x1                   	// #1
  46f9e0:	blr	x5
  46f9e4:	cmp	w0, #0x7
  46f9e8:	b.eq	46fa28 <_obstack_memory_used@@Base+0xe5e0>  // b.none
  46f9ec:	cmp	w0, #0x8
  46f9f0:	b.ne	46fa0c <_obstack_memory_used@@Base+0xe5c4>  // b.any
  46f9f4:	cbnz	w20, 46fa44 <_obstack_memory_used@@Base+0xe5fc>
  46f9f8:	add	x23, x23, #0x1
  46f9fc:	mov	x1, x22
  46fa00:	mov	x0, x19
  46fa04:	bl	46f8b0 <_obstack_memory_used@@Base+0xe468>
  46fa08:	b	46f998 <_obstack_memory_used@@Base+0xe550>
  46fa0c:	mov	w0, #0x2                   	// #2
  46fa10:	ldp	x29, x30, [sp]
  46fa14:	ldp	x19, x20, [sp, #16]
  46fa18:	ldp	x21, x22, [sp, #32]
  46fa1c:	ldp	x23, x24, [sp, #48]
  46fa20:	add	sp, sp, #0x6c0
  46fa24:	ret
  46fa28:	str	x23, [x24]
  46fa2c:	ldp	x29, x30, [sp]
  46fa30:	ldp	x19, x20, [sp, #16]
  46fa34:	ldp	x21, x22, [sp, #32]
  46fa38:	ldp	x23, x24, [sp, #48]
  46fa3c:	add	sp, sp, #0x6c0
  46fa40:	ret
  46fa44:	bl	4027f0 <abort@plt>
  46fa48:	sub	sp, sp, #0x6d0
  46fa4c:	stp	x29, x30, [sp]
  46fa50:	mov	x29, sp
  46fa54:	stp	x19, x20, [sp, #16]
  46fa58:	mov	x20, x0
  46fa5c:	stp	x21, x22, [sp, #32]
  46fa60:	mov	x21, x1
  46fa64:	add	x22, sp, #0x50
  46fa68:	stp	x23, x24, [sp, #48]
  46fa6c:	mov	x23, #0x1                   	// #1
  46fa70:	stp	x25, x26, [sp, #64]
  46fa74:	mov	x26, x2
  46fa78:	ldp	x25, x24, [x0, #16]
  46fa7c:	b	46fad0 <_obstack_memory_used@@Base+0xe688>
  46fa80:	blr	x25
  46fa84:	mov	w2, w0
  46fa88:	mov	x4, x21
  46fa8c:	mov	x3, x20
  46fa90:	mov	w1, #0xa                   	// #10
  46fa94:	mov	w0, #0x1                   	// #1
  46fa98:	cbnz	w2, 46fb1c <_obstack_memory_used@@Base+0xe6d4>
  46fa9c:	ldr	x5, [sp, #1696]
  46faa0:	cbz	x5, 46fac0 <_obstack_memory_used@@Base+0xe678>
  46faa4:	ldr	x2, [x20]
  46faa8:	blr	x5
  46faac:	mov	w19, w0
  46fab0:	cmp	w0, #0x7
  46fab4:	b.eq	46fb40 <_obstack_memory_used@@Base+0xe6f8>  // b.none
  46fab8:	cmp	w0, #0x8
  46fabc:	b.ne	46fb1c <_obstack_memory_used@@Base+0xe6d4>  // b.any
  46fac0:	add	x23, x23, #0x1
  46fac4:	mov	x1, x22
  46fac8:	mov	x0, x21
  46facc:	bl	46f8b0 <_obstack_memory_used@@Base+0xe468>
  46fad0:	mov	x1, x22
  46fad4:	mov	x0, x21
  46fad8:	bl	46e4e0 <_obstack_memory_used@@Base+0xd098>
  46fadc:	cmp	w0, #0x0
  46fae0:	mov	w19, w0
  46fae4:	mov	x5, x24
  46fae8:	mov	x4, x21
  46faec:	ccmp	w0, #0x5, #0x4, ne  // ne = any
  46faf0:	b.ne	46fb1c <_obstack_memory_used@@Base+0xe6d4>  // b.any
  46faf4:	cmp	w0, #0x5
  46faf8:	mov	x3, x20
  46fafc:	mov	w1, #0xa                   	// #10
  46fb00:	mov	w0, #0x1                   	// #1
  46fb04:	ldr	x2, [x20]
  46fb08:	b.ne	46fa80 <_obstack_memory_used@@Base+0xe638>  // b.any
  46fb0c:	mov	w1, #0x1a                  	// #26
  46fb10:	mov	w0, #0x1                   	// #1
  46fb14:	blr	x25
  46fb18:	cbz	w0, 46fb40 <_obstack_memory_used@@Base+0xe6f8>
  46fb1c:	mov	w19, #0x2                   	// #2
  46fb20:	mov	w0, w19
  46fb24:	ldp	x29, x30, [sp]
  46fb28:	ldp	x19, x20, [sp, #16]
  46fb2c:	ldp	x21, x22, [sp, #32]
  46fb30:	ldp	x23, x24, [sp, #48]
  46fb34:	ldp	x25, x26, [sp, #64]
  46fb38:	add	sp, sp, #0x6d0
  46fb3c:	ret
  46fb40:	str	x23, [x26]
  46fb44:	mov	w0, w19
  46fb48:	ldp	x29, x30, [sp]
  46fb4c:	ldp	x19, x20, [sp, #16]
  46fb50:	ldp	x21, x22, [sp, #32]
  46fb54:	ldp	x23, x24, [sp, #48]
  46fb58:	ldp	x25, x26, [sp, #64]
  46fb5c:	add	sp, sp, #0x6d0
  46fb60:	ret
  46fb64:	nop
  46fb68:	cmp	w1, #0x61
  46fb6c:	b.gt	46fbc4 <_obstack_memory_used@@Base+0xe77c>
  46fb70:	ldr	x4, [x0, #832]
  46fb74:	sxtw	x3, w1
  46fb78:	ldr	x2, [x0, x3, lsl #3]
  46fb7c:	tbz	x4, #62, 46fb8c <_obstack_memory_used@@Base+0xe744>
  46fb80:	add	x0, x0, x3
  46fb84:	ldrb	w0, [x0, #856]
  46fb88:	cbnz	w0, 46fbbc <_obstack_memory_used@@Base+0xe774>
  46fb8c:	cmp	w1, #0x2e
  46fb90:	b.eq	46fbb0 <_obstack_memory_used@@Base+0xe768>  // b.none
  46fb94:	adrp	x0, 4a5000 <__environ@@GLIBC_2.17+0xa68>
  46fb98:	add	x0, x0, #0xb48
  46fb9c:	ldrb	w0, [x0, w1, sxtw]
  46fba0:	cmp	w0, #0x8
  46fba4:	b.ne	46fbc4 <_obstack_memory_used@@Base+0xe77c>  // b.any
  46fba8:	ldr	x0, [x2]
  46fbac:	ret
  46fbb0:	cntd	x0
  46fbb4:	sxtw	x0, w0
  46fbb8:	ret
  46fbbc:	mov	x0, x2
  46fbc0:	ret
  46fbc4:	stp	x29, x30, [sp, #-16]!
  46fbc8:	mov	x29, sp
  46fbcc:	bl	4027f0 <abort@plt>
  46fbd0:	ldr	x0, [x0, #784]
  46fbd4:	ret
  46fbd8:	cmp	w1, #0x61
  46fbdc:	b.gt	46fc20 <_obstack_memory_used@@Base+0xe7d8>
  46fbe0:	ldr	x5, [x0, #832]
  46fbe4:	adrp	x3, 4a5000 <__environ@@GLIBC_2.17+0xa68>
  46fbe8:	add	x3, x3, #0xb48
  46fbec:	sxtw	x4, w1
  46fbf0:	ldrb	w1, [x3, w1, sxtw]
  46fbf4:	tbz	x5, #62, 46fc04 <_obstack_memory_used@@Base+0xe7bc>
  46fbf8:	add	x3, x0, x4
  46fbfc:	ldrb	w3, [x3, #856]
  46fc00:	cbnz	w3, 46fc18 <_obstack_memory_used@@Base+0xe7d0>
  46fc04:	cmp	w1, #0x8
  46fc08:	ldr	x0, [x0, x4, lsl #3]
  46fc0c:	b.ne	46fc20 <_obstack_memory_used@@Base+0xe7d8>  // b.any
  46fc10:	str	x2, [x0]
  46fc14:	ret
  46fc18:	str	x2, [x0, x4, lsl #3]
  46fc1c:	ret
  46fc20:	stp	x29, x30, [sp, #-16]!
  46fc24:	mov	x29, sp
  46fc28:	bl	4027f0 <abort@plt>
  46fc2c:	nop
  46fc30:	ldr	x0, [x0, #792]
  46fc34:	ret
  46fc38:	ldr	x2, [x0, #832]
  46fc3c:	ldr	x0, [x0, #792]
  46fc40:	lsr	x2, x2, #63
  46fc44:	str	w2, [x1]
  46fc48:	ret
  46fc4c:	nop
  46fc50:	str	x1, [x0, #792]
  46fc54:	ret
  46fc58:	ldr	x0, [x0, #800]
  46fc5c:	ret
  46fc60:	ldr	x0, [x0, #824]
  46fc64:	ret
  46fc68:	stp	x29, x30, [sp, #-48]!
  46fc6c:	sub	x0, x0, #0x1
  46fc70:	mov	x29, sp
  46fc74:	add	x1, sp, #0x18
  46fc78:	bl	471c20 <_obstack_memory_used@@Base+0x107d8>
  46fc7c:	ldr	x1, [sp, #40]
  46fc80:	cmp	x0, #0x0
  46fc84:	ldp	x29, x30, [sp], #48
  46fc88:	csel	x0, x1, x0, ne  // ne = any
  46fc8c:	ret
  46fc90:	ldr	x0, [x0, #816]
  46fc94:	ret
  46fc98:	ldr	x0, [x0, #808]
  46fc9c:	ret
  46fca0:	sub	sp, sp, #0xa70
  46fca4:	mov	x2, #0x3c0                 	// #960
  46fca8:	add	x3, sp, #0x30
  46fcac:	stp	x29, x30, [sp]
  46fcb0:	mov	x29, sp
  46fcb4:	stp	x19, x20, [sp, #16]
  46fcb8:	mov	x20, x1
  46fcbc:	mov	w1, #0x0                   	// #0
  46fcc0:	str	x21, [sp, #32]
  46fcc4:	mov	x21, x0
  46fcc8:	mov	x0, x3
  46fccc:	bl	4026f0 <memset@plt>
  46fcd0:	mov	x2, #0x4000000000000000    	// #4611686018427387904
  46fcd4:	add	x19, sp, #0x3f0
  46fcd8:	add	x21, x21, #0x1
  46fcdc:	mov	x1, x19
  46fce0:	str	x21, [sp, #840]
  46fce4:	str	x2, [sp, #880]
  46fce8:	bl	46e4e0 <_obstack_memory_used@@Base+0xd098>
  46fcec:	cbnz	w0, 46fd98 <_obstack_memory_used@@Base+0xe950>
  46fcf0:	ldr	w0, [sp, #2608]
  46fcf4:	cmp	w0, #0x2
  46fcf8:	b.eq	46fd98 <_obstack_memory_used@@Base+0xe950>  // b.none
  46fcfc:	sub	x4, x20, x20, lsl #3
  46fd00:	mov	x1, #0xffffffffffffe680    	// #-6528
  46fd04:	mov	x0, x19
  46fd08:	add	x5, x19, #0x620
  46fd0c:	add	x4, x4, x1
  46fd10:	add	x2, x20, #0x334
  46fd14:	b	46fd2c <_obstack_memory_used@@Base+0xe8e4>
  46fd18:	str	xzr, [x4, x2, lsl #3]
  46fd1c:	add	x0, x0, #0x10
  46fd20:	add	x2, x2, #0x1
  46fd24:	cmp	x0, x5
  46fd28:	b.eq	46fd5c <_obstack_memory_used@@Base+0xe914>  // b.none
  46fd2c:	ldrb	w3, [x0, #8]
  46fd30:	strb	w3, [x2]
  46fd34:	cmp	w3, #0x1
  46fd38:	b.eq	46fd44 <_obstack_memory_used@@Base+0xe8fc>  // b.none
  46fd3c:	cmp	w3, #0x2
  46fd40:	b.ne	46fd18 <_obstack_memory_used@@Base+0xe8d0>  // b.any
  46fd44:	ldr	x3, [x0]
  46fd48:	str	x3, [x4, x2, lsl #3]
  46fd4c:	add	x0, x0, #0x10
  46fd50:	add	x2, x2, #0x1
  46fd54:	cmp	x0, x5
  46fd58:	b.ne	46fd2c <_obstack_memory_used@@Base+0xe8e4>  // b.any
  46fd5c:	ldr	x1, [sp, #896]
  46fd60:	mov	x0, x20
  46fd64:	ldr	x2, [sp, #2584]
  46fd68:	stp	x2, x1, [x20, #16]
  46fd6c:	ldr	x2, [sp, #2592]
  46fd70:	strh	w2, [x20, #816]
  46fd74:	ldr	x1, [sp, #2648]
  46fd78:	strh	w1, [x20, #818]
  46fd7c:	ldr	x2, [sp, #2664]
  46fd80:	str	x2, [x20, #8]
  46fd84:	ldp	x29, x30, [sp]
  46fd88:	ldp	x19, x20, [sp, #16]
  46fd8c:	ldr	x21, [sp, #32]
  46fd90:	add	sp, sp, #0xa70
  46fd94:	ret
  46fd98:	mov	x0, #0x0                   	// #0
  46fd9c:	ldp	x29, x30, [sp]
  46fda0:	ldp	x19, x20, [sp, #16]
  46fda4:	ldr	x21, [sp, #32]
  46fda8:	add	sp, sp, #0xa70
  46fdac:	ret
  46fdb0:	ret
  46fdb4:	nop
  46fdb8:	sub	sp, sp, #0xec0
  46fdbc:	stp	x29, x30, [sp]
  46fdc0:	mov	x29, sp
  46fdc4:	stp	x21, x22, [sp, #64]
  46fdc8:	add	x21, sp, #0xc0
  46fdcc:	add	x22, sp, #0x840
  46fdd0:	stp	x0, x1, [sp, #16]
  46fdd4:	add	x1, sp, #0xec0
  46fdd8:	stp	x2, x3, [sp, #32]
  46fddc:	mov	x2, x30
  46fde0:	stp	x19, x20, [sp, #48]
  46fde4:	mov	x20, x0
  46fde8:	add	x19, sp, #0x480
  46fdec:	mov	x0, x21
  46fdf0:	stp	x23, x24, [sp, #80]
  46fdf4:	stp	x25, x26, [sp, #96]
  46fdf8:	stp	x27, x28, [sp, #112]
  46fdfc:	stp	d8, d9, [sp, #128]
  46fe00:	stp	d10, d11, [sp, #144]
  46fe04:	stp	d12, d13, [sp, #160]
  46fe08:	stp	d14, d15, [sp, #176]
  46fe0c:	bl	46f660 <_obstack_memory_used@@Base+0xe218>
  46fe10:	mov	x1, x21
  46fe14:	mov	x0, x19
  46fe18:	mov	x2, #0x3c0                 	// #960
  46fe1c:	bl	402490 <memcpy@plt>
  46fe20:	b	46fe54 <_obstack_memory_used@@Base+0xea0c>
  46fe24:	cbnz	w2, 46fec0 <_obstack_memory_used@@Base+0xea78>
  46fe28:	ldr	x5, [sp, #3728]
  46fe2c:	cbz	x5, 46fe48 <_obstack_memory_used@@Base+0xea00>
  46fe30:	ldr	x2, [x20]
  46fe34:	blr	x5
  46fe38:	cmp	w0, #0x6
  46fe3c:	b.eq	46fec8 <_obstack_memory_used@@Base+0xea80>  // b.none
  46fe40:	cmp	w0, #0x8
  46fe44:	b.ne	46fec0 <_obstack_memory_used@@Base+0xea78>  // b.any
  46fe48:	mov	x1, x22
  46fe4c:	mov	x0, x19
  46fe50:	bl	46f8b0 <_obstack_memory_used@@Base+0xe468>
  46fe54:	mov	x1, x22
  46fe58:	mov	x0, x19
  46fe5c:	bl	46e4e0 <_obstack_memory_used@@Base+0xd098>
  46fe60:	mov	w2, w0
  46fe64:	mov	w1, #0x1                   	// #1
  46fe68:	mov	x4, x19
  46fe6c:	mov	x3, x20
  46fe70:	mov	w0, w1
  46fe74:	cmp	w2, #0x5
  46fe78:	b.ne	46fe24 <_obstack_memory_used@@Base+0xe9dc>  // b.any
  46fe7c:	mov	x4, #0x0                   	// #0
  46fe80:	mov	w0, w2
  46fe84:	ldp	x29, x30, [sp]
  46fe88:	ldp	x0, x1, [sp, #16]
  46fe8c:	ldp	x2, x3, [sp, #32]
  46fe90:	ldp	x19, x20, [sp, #48]
  46fe94:	ldp	x21, x22, [sp, #64]
  46fe98:	ldp	x23, x24, [sp, #80]
  46fe9c:	ldp	x25, x26, [sp, #96]
  46fea0:	ldp	x27, x28, [sp, #112]
  46fea4:	ldp	d8, d9, [sp, #128]
  46fea8:	ldp	d10, d11, [sp, #144]
  46feac:	ldp	d12, d13, [sp, #160]
  46feb0:	ldp	d14, d15, [sp, #176]
  46feb4:	add	sp, sp, #0xec0
  46feb8:	add	sp, sp, x4
  46febc:	ret
  46fec0:	mov	w2, #0x3                   	// #3
  46fec4:	b	46fe7c <_obstack_memory_used@@Base+0xea34>
  46fec8:	ldr	x4, [sp, #1936]
  46fecc:	mov	x1, x21
  46fed0:	ldr	x3, [sp, #1984]
  46fed4:	mov	x2, #0x3c0                 	// #960
  46fed8:	mov	x0, x19
  46fedc:	sub	x3, x4, x3, lsr #63
  46fee0:	stp	xzr, x3, [x20, #16]
  46fee4:	bl	402490 <memcpy@plt>
  46fee8:	mov	x2, x22
  46feec:	mov	x1, x19
  46fef0:	mov	x0, x20
  46fef4:	bl	46f968 <_obstack_memory_used@@Base+0xe520>
  46fef8:	mov	w2, w0
  46fefc:	cmp	w0, #0x7
  46ff00:	b.ne	46fe7c <_obstack_memory_used@@Base+0xea34>  // b.any
  46ff04:	mov	x1, x19
  46ff08:	mov	x0, x21
  46ff0c:	bl	46ea38 <_obstack_memory_used@@Base+0xd5f0>
  46ff10:	mov	x4, x0
  46ff14:	ldr	x2, [sp, #1024]
  46ff18:	ldr	x1, [sp, #1944]
  46ff1c:	tbz	x2, #61, 46ff30 <_obstack_memory_used@@Base+0xeae8>
  46ff20:	mov	x17, x1
  46ff24:	ldr	x16, [sp, #976]
  46ff28:	pacia1716
  46ff2c:	mov	x1, x17
  46ff30:	ldr	x0, [sp, #1936]
  46ff34:	bl	46fdb0 <_obstack_memory_used@@Base+0xe968>
  46ff38:	str	x1, [x29, #8]
  46ff3c:	b	46fe80 <_obstack_memory_used@@Base+0xea38>
  46ff40:	sub	sp, sp, #0x850
  46ff44:	stp	x29, x30, [sp]
  46ff48:	mov	x29, sp
  46ff4c:	stp	x19, x20, [sp, #48]
  46ff50:	mov	x19, x0
  46ff54:	mov	x20, x2
  46ff58:	stp	x21, x22, [sp, #64]
  46ff5c:	add	x22, sp, #0xd0
  46ff60:	mov	x21, x1
  46ff64:	stp	x0, x1, [sp, #16]
  46ff68:	mov	x0, x22
  46ff6c:	add	x1, sp, #0x850
  46ff70:	stp	x2, x3, [sp, #32]
  46ff74:	mov	x2, x30
  46ff78:	stp	x23, x24, [sp, #80]
  46ff7c:	add	x23, sp, #0x490
  46ff80:	stp	x25, x26, [sp, #96]
  46ff84:	stp	x27, x28, [sp, #112]
  46ff88:	stp	d8, d9, [sp, #128]
  46ff8c:	stp	d10, d11, [sp, #144]
  46ff90:	stp	d12, d13, [sp, #160]
  46ff94:	stp	d14, d15, [sp, #176]
  46ff98:	bl	46f660 <_obstack_memory_used@@Base+0xe218>
  46ff9c:	mov	x1, x22
  46ffa0:	mov	x2, #0x3c0                 	// #960
  46ffa4:	mov	x0, x23
  46ffa8:	bl	402490 <memcpy@plt>
  46ffac:	stp	x21, x20, [x19, #16]
  46ffb0:	mov	x0, x19
  46ffb4:	mov	x1, x23
  46ffb8:	add	x2, sp, #0xc8
  46ffbc:	bl	46fa48 <_obstack_memory_used@@Base+0xe600>
  46ffc0:	cmp	w0, #0x7
  46ffc4:	mov	x4, #0x0                   	// #0
  46ffc8:	b.eq	470008 <_obstack_memory_used@@Base+0xebc0>  // b.none
  46ffcc:	ldp	x29, x30, [sp]
  46ffd0:	ldp	x0, x1, [sp, #16]
  46ffd4:	ldp	x2, x3, [sp, #32]
  46ffd8:	ldp	x19, x20, [sp, #48]
  46ffdc:	ldp	x21, x22, [sp, #64]
  46ffe0:	ldp	x23, x24, [sp, #80]
  46ffe4:	ldp	x25, x26, [sp, #96]
  46ffe8:	ldp	x27, x28, [sp, #112]
  46ffec:	ldp	d8, d9, [sp, #128]
  46fff0:	ldp	d10, d11, [sp, #144]
  46fff4:	ldp	d12, d13, [sp, #160]
  46fff8:	ldp	d14, d15, [sp, #176]
  46fffc:	add	sp, sp, #0x850
  470000:	add	sp, sp, x4
  470004:	ret
  470008:	mov	x1, x23
  47000c:	mov	x0, x22
  470010:	bl	46ea38 <_obstack_memory_used@@Base+0xd5f0>
  470014:	mov	x4, x0
  470018:	ldr	x2, [sp, #1040]
  47001c:	ldr	x1, [sp, #1960]
  470020:	tbz	x2, #61, 470034 <_obstack_memory_used@@Base+0xebec>
  470024:	mov	x17, x1
  470028:	ldr	x16, [sp, #992]
  47002c:	pacia1716
  470030:	mov	x1, x17
  470034:	ldr	x0, [sp, #1952]
  470038:	bl	46fdb0 <_obstack_memory_used@@Base+0xe968>
  47003c:	str	x1, [x29, #8]
  470040:	b	46ffcc <_obstack_memory_used@@Base+0xeb84>
  470044:	nop
  470048:	sub	sp, sp, #0x850
  47004c:	stp	x29, x30, [sp]
  470050:	mov	x29, sp
  470054:	stp	x19, x20, [sp, #48]
  470058:	mov	x19, x0
  47005c:	add	x20, sp, #0xd0
  470060:	stp	x0, x1, [sp, #16]
  470064:	mov	x0, x20
  470068:	add	x1, sp, #0x850
  47006c:	stp	x2, x3, [sp, #32]
  470070:	mov	x2, x30
  470074:	stp	x21, x22, [sp, #64]
  470078:	add	x21, sp, #0x490
  47007c:	stp	x23, x24, [sp, #80]
  470080:	stp	x25, x26, [sp, #96]
  470084:	stp	x27, x28, [sp, #112]
  470088:	stp	d8, d9, [sp, #128]
  47008c:	stp	d10, d11, [sp, #144]
  470090:	stp	d12, d13, [sp, #160]
  470094:	stp	d14, d15, [sp, #176]
  470098:	bl	46f660 <_obstack_memory_used@@Base+0xe218>
  47009c:	mov	x1, x20
  4700a0:	mov	x0, x21
  4700a4:	mov	x2, #0x3c0                 	// #960
  4700a8:	bl	402490 <memcpy@plt>
  4700ac:	ldr	x0, [x19, #16]
  4700b0:	cbnz	x0, 470140 <_obstack_memory_used@@Base+0xecf8>
  4700b4:	mov	x0, x19
  4700b8:	add	x2, sp, #0xc8
  4700bc:	mov	x1, x21
  4700c0:	bl	46f968 <_obstack_memory_used@@Base+0xe520>
  4700c4:	cmp	w0, #0x7
  4700c8:	b.ne	470154 <_obstack_memory_used@@Base+0xed0c>  // b.any
  4700cc:	mov	x1, x21
  4700d0:	mov	x0, x20
  4700d4:	bl	46ea38 <_obstack_memory_used@@Base+0xd5f0>
  4700d8:	mov	x4, x0
  4700dc:	ldr	x2, [sp, #1040]
  4700e0:	ldr	x1, [sp, #1960]
  4700e4:	tbz	x2, #61, 4700f8 <_obstack_memory_used@@Base+0xecb0>
  4700e8:	mov	x17, x1
  4700ec:	ldr	x16, [sp, #992]
  4700f0:	pacia1716
  4700f4:	mov	x1, x17
  4700f8:	ldr	x0, [sp, #1952]
  4700fc:	bl	46fdb0 <_obstack_memory_used@@Base+0xe968>
  470100:	str	x1, [x29, #8]
  470104:	ldp	x29, x30, [sp]
  470108:	ldp	x0, x1, [sp, #16]
  47010c:	ldp	x2, x3, [sp, #32]
  470110:	ldp	x19, x20, [sp, #48]
  470114:	ldp	x21, x22, [sp, #64]
  470118:	ldp	x23, x24, [sp, #80]
  47011c:	ldp	x25, x26, [sp, #96]
  470120:	ldp	x27, x28, [sp, #112]
  470124:	ldp	d8, d9, [sp, #128]
  470128:	ldp	d10, d11, [sp, #144]
  47012c:	ldp	d12, d13, [sp, #160]
  470130:	ldp	d14, d15, [sp, #176]
  470134:	add	sp, sp, #0x850
  470138:	add	sp, sp, x4
  47013c:	ret
  470140:	mov	x0, x19
  470144:	add	x2, sp, #0xc8
  470148:	mov	x1, x21
  47014c:	bl	46fa48 <_obstack_memory_used@@Base+0xe600>
  470150:	b	4700c4 <_obstack_memory_used@@Base+0xec7c>
  470154:	bl	4027f0 <abort@plt>
  470158:	sub	sp, sp, #0x850
  47015c:	stp	x29, x30, [sp]
  470160:	mov	x29, sp
  470164:	stp	x0, x1, [sp, #16]
  470168:	ldr	x1, [x0, #16]
  47016c:	stp	x2, x3, [sp, #32]
  470170:	stp	x19, x20, [sp, #48]
  470174:	mov	x19, x0
  470178:	stp	x21, x22, [sp, #64]
  47017c:	stp	x23, x24, [sp, #80]
  470180:	stp	x25, x26, [sp, #96]
  470184:	stp	x27, x28, [sp, #112]
  470188:	stp	d8, d9, [sp, #128]
  47018c:	stp	d10, d11, [sp, #144]
  470190:	stp	d12, d13, [sp, #160]
  470194:	stp	d14, d15, [sp, #176]
  470198:	cbnz	x1, 4701e0 <_obstack_memory_used@@Base+0xed98>
  47019c:	bl	46fdb8 <_obstack_memory_used@@Base+0xe970>
  4701a0:	mov	x4, #0x0                   	// #0
  4701a4:	ldp	x29, x30, [sp]
  4701a8:	ldp	x0, x1, [sp, #16]
  4701ac:	ldp	x2, x3, [sp, #32]
  4701b0:	ldp	x19, x20, [sp, #48]
  4701b4:	ldp	x21, x22, [sp, #64]
  4701b8:	ldp	x23, x24, [sp, #80]
  4701bc:	ldp	x25, x26, [sp, #96]
  4701c0:	ldp	x27, x28, [sp, #112]
  4701c4:	ldp	d8, d9, [sp, #128]
  4701c8:	ldp	d10, d11, [sp, #144]
  4701cc:	ldp	d12, d13, [sp, #160]
  4701d0:	ldp	d14, d15, [sp, #176]
  4701d4:	add	sp, sp, #0x850
  4701d8:	add	sp, sp, x4
  4701dc:	ret
  4701e0:	add	x20, sp, #0xd0
  4701e4:	mov	x2, x30
  4701e8:	mov	x0, x20
  4701ec:	add	x1, sp, #0x850
  4701f0:	add	x21, sp, #0x490
  4701f4:	bl	46f660 <_obstack_memory_used@@Base+0xe218>
  4701f8:	mov	x1, x20
  4701fc:	mov	x2, #0x3c0                 	// #960
  470200:	mov	x0, x21
  470204:	bl	402490 <memcpy@plt>
  470208:	mov	x0, x19
  47020c:	mov	x1, x21
  470210:	add	x2, sp, #0xc8
  470214:	bl	46fa48 <_obstack_memory_used@@Base+0xe600>
  470218:	cmp	w0, #0x7
  47021c:	b.ne	47025c <_obstack_memory_used@@Base+0xee14>  // b.any
  470220:	mov	x1, x21
  470224:	mov	x0, x20
  470228:	bl	46ea38 <_obstack_memory_used@@Base+0xd5f0>
  47022c:	mov	x4, x0
  470230:	ldr	x2, [sp, #1040]
  470234:	ldr	x1, [sp, #1960]
  470238:	tbz	x2, #61, 47024c <_obstack_memory_used@@Base+0xee04>
  47023c:	mov	x17, x1
  470240:	ldr	x16, [sp, #992]
  470244:	pacia1716
  470248:	mov	x1, x17
  47024c:	ldr	x0, [sp, #1952]
  470250:	bl	46fdb0 <_obstack_memory_used@@Base+0xe968>
  470254:	str	x1, [x29, #8]
  470258:	b	4701a4 <_obstack_memory_used@@Base+0xed5c>
  47025c:	bl	4027f0 <abort@plt>
  470260:	ldr	x2, [x0, #8]
  470264:	mov	x1, x0
  470268:	cbz	x2, 470278 <_obstack_memory_used@@Base+0xee30>
  47026c:	mov	x16, x2
  470270:	mov	w0, #0x1                   	// #1
  470274:	br	x16
  470278:	ret
  47027c:	nop
  470280:	sub	sp, sp, #0xae0
  470284:	mov	x2, x30
  470288:	stp	x29, x30, [sp]
  47028c:	mov	x29, sp
  470290:	stp	x19, x20, [sp, #16]
  470294:	add	x20, sp, #0xa0
  470298:	stp	x21, x22, [sp, #32]
  47029c:	mov	x22, x1
  4702a0:	add	x21, sp, #0x460
  4702a4:	add	x1, sp, #0xae0
  4702a8:	stp	x23, x24, [sp, #48]
  4702ac:	mov	x23, x0
  4702b0:	mov	x0, x20
  4702b4:	stp	x25, x26, [sp, #64]
  4702b8:	stp	x27, x28, [sp, #80]
  4702bc:	stp	d8, d9, [sp, #96]
  4702c0:	stp	d10, d11, [sp, #112]
  4702c4:	stp	d12, d13, [sp, #128]
  4702c8:	stp	d14, d15, [sp, #144]
  4702cc:	bl	46f660 <_obstack_memory_used@@Base+0xe218>
  4702d0:	b	4702f0 <_obstack_memory_used@@Base+0xeea8>
  4702d4:	blr	x23
  4702d8:	cbnz	w0, 470314 <_obstack_memory_used@@Base+0xeecc>
  4702dc:	cmp	w19, #0x5
  4702e0:	b.eq	470318 <_obstack_memory_used@@Base+0xeed0>  // b.none
  4702e4:	mov	x1, x21
  4702e8:	mov	x0, x20
  4702ec:	bl	46f8b0 <_obstack_memory_used@@Base+0xe468>
  4702f0:	mov	x1, x21
  4702f4:	mov	x0, x20
  4702f8:	bl	46e4e0 <_obstack_memory_used@@Base+0xd098>
  4702fc:	mov	w19, w0
  470300:	cmp	w0, #0x0
  470304:	mov	x1, x22
  470308:	mov	x0, x20
  47030c:	ccmp	w19, #0x5, #0x4, ne  // ne = any
  470310:	b.eq	4702d4 <_obstack_memory_used@@Base+0xee8c>  // b.none
  470314:	mov	w19, #0x3                   	// #3
  470318:	mov	w0, w19
  47031c:	ldp	x29, x30, [sp]
  470320:	ldp	x19, x20, [sp, #16]
  470324:	ldp	x21, x22, [sp, #32]
  470328:	ldp	x23, x24, [sp, #48]
  47032c:	ldp	x25, x26, [sp, #64]
  470330:	ldp	x27, x28, [sp, #80]
  470334:	ldp	d8, d9, [sp, #96]
  470338:	ldp	d10, d11, [sp, #112]
  47033c:	ldp	d12, d13, [sp, #128]
  470340:	ldp	d14, d15, [sp, #144]
  470344:	add	sp, sp, #0xae0
  470348:	ret
  47034c:	nop
  470350:	ldr	x3, [x1, #8]
  470354:	mov	w4, #0x1                   	// #1
  470358:	ldr	x1, [x2, #8]
  47035c:	cmp	x3, x1
  470360:	csetm	w0, cc  // cc = lo, ul, last
  470364:	csel	w0, w0, w4, ls  // ls = plast
  470368:	ret
  47036c:	nop
  470370:	stp	x29, x30, [sp, #-112]!
  470374:	mov	x29, sp
  470378:	stp	x21, x22, [sp, #32]
  47037c:	lsl	w21, w3, #1
  470380:	stp	x25, x26, [sp, #64]
  470384:	add	w25, w21, #0x1
  470388:	cmp	w25, w4
  47038c:	b.ge	470464 <_obstack_memory_used@@Base+0xf01c>  // b.tcont
  470390:	mov	w22, w3
  470394:	stp	x19, x20, [sp, #16]
  470398:	mov	x20, x2
  47039c:	stp	x23, x24, [sp, #48]
  4703a0:	mov	w23, w4
  4703a4:	mov	x24, x1
  4703a8:	stp	x27, x28, [sp, #80]
  4703ac:	mov	x27, x0
  4703b0:	b	470408 <_obstack_memory_used@@Base+0xefc0>
  4703b4:	ldr	x2, [x20, x26]
  4703b8:	blr	x24
  4703bc:	ldr	x3, [sp, #104]
  4703c0:	tbnz	w0, #31, 470474 <_obstack_memory_used@@Base+0xf02c>
  4703c4:	ldr	x1, [x20, x28, lsl #3]
  4703c8:	mov	w21, w25
  4703cc:	sxtw	x26, w22
  4703d0:	mov	x2, x1
  4703d4:	mov	w22, w21
  4703d8:	mov	x0, x27
  4703dc:	lsl	w21, w21, #1
  4703e0:	ldr	x1, [x20, x26, lsl #3]
  4703e4:	blr	x24
  4703e8:	tbz	w0, #31, 470458 <_obstack_memory_used@@Base+0xf010>
  4703ec:	ldr	x1, [x19]
  4703f0:	add	w25, w21, #0x1
  4703f4:	ldr	x0, [x20, x26, lsl #3]
  4703f8:	str	x1, [x20, x26, lsl #3]
  4703fc:	str	x0, [x19]
  470400:	cmp	w23, w25
  470404:	b.le	470458 <_obstack_memory_used@@Base+0xf010>
  470408:	sbfiz	x19, x25, #3, #32
  47040c:	sxtw	x28, w25
  470410:	add	x26, x19, #0x8
  470414:	add	w21, w25, #0x1
  470418:	add	x3, x20, x26
  47041c:	str	x3, [sp, #104]
  470420:	cmp	w21, w23
  470424:	add	x19, x20, x19
  470428:	mov	x0, x27
  47042c:	ldr	x1, [x20, x28, lsl #3]
  470430:	b.lt	4703b4 <_obstack_memory_used@@Base+0xef6c>  // b.tstop
  470434:	sxtw	x26, w22
  470438:	mov	x2, x1
  47043c:	mov	w21, w25
  470440:	mov	x0, x27
  470444:	mov	w22, w21
  470448:	ldr	x1, [x20, x26, lsl #3]
  47044c:	lsl	w21, w21, #1
  470450:	blr	x24
  470454:	tbnz	w0, #31, 4703ec <_obstack_memory_used@@Base+0xefa4>
  470458:	ldp	x19, x20, [sp, #16]
  47045c:	ldp	x23, x24, [sp, #48]
  470460:	ldp	x27, x28, [sp, #80]
  470464:	ldp	x21, x22, [sp, #32]
  470468:	ldp	x25, x26, [sp, #64]
  47046c:	ldp	x29, x30, [sp], #112
  470470:	ret
  470474:	mov	x19, x3
  470478:	ldr	x1, [x20, x26]
  47047c:	b	4703cc <_obstack_memory_used@@Base+0xef84>
  470480:	stp	x29, x30, [sp, #-80]!
  470484:	mov	x29, sp
  470488:	stp	x19, x20, [sp, #16]
  47048c:	ldr	x19, [x2, #8]
  470490:	stp	x21, x22, [sp, #32]
  470494:	mov	x22, x2
  470498:	stp	x23, x24, [sp, #48]
  47049c:	add	x21, x2, #0x10
  4704a0:	lsr	x20, x19, #1
  4704a4:	mov	x23, x0
  4704a8:	mov	x24, x1
  4704ac:	subs	w20, w20, #0x1
  4704b0:	b.mi	4704e8 <_obstack_memory_used@@Base+0xf0a0>  // b.first
  4704b4:	str	x25, [sp, #64]
  4704b8:	mov	w25, w19
  4704bc:	nop
  4704c0:	mov	w3, w20
  4704c4:	mov	w4, w25
  4704c8:	mov	x2, x21
  4704cc:	sub	w20, w20, #0x1
  4704d0:	mov	x1, x24
  4704d4:	mov	x0, x23
  4704d8:	bl	470370 <_obstack_memory_used@@Base+0xef28>
  4704dc:	cmn	w20, #0x1
  4704e0:	b.ne	4704c0 <_obstack_memory_used@@Base+0xf078>  // b.any
  4704e4:	ldr	x25, [sp, #64]
  4704e8:	sub	w19, w19, #0x1
  4704ec:	cmp	w19, #0x0
  4704f0:	sxtw	x19, w19
  4704f4:	b.le	47052c <_obstack_memory_used@@Base+0xf0e4>
  4704f8:	ldr	x1, [x21, x19, lsl #3]
  4704fc:	mov	w4, w19
  470500:	ldr	x0, [x22, #16]
  470504:	str	x1, [x22, #16]
  470508:	str	x0, [x21, x19, lsl #3]
  47050c:	mov	x2, x21
  470510:	sub	x19, x19, #0x1
  470514:	mov	x1, x24
  470518:	mov	x0, x23
  47051c:	mov	w3, #0x0                   	// #0
  470520:	bl	470370 <_obstack_memory_used@@Base+0xef28>
  470524:	cmp	w19, #0x0
  470528:	b.gt	4704f8 <_obstack_memory_used@@Base+0xf0b0>
  47052c:	ldp	x19, x20, [sp, #16]
  470530:	ldp	x21, x22, [sp, #32]
  470534:	ldp	x23, x24, [sp, #48]
  470538:	ldp	x29, x30, [sp], #80
  47053c:	ret
  470540:	and	w0, w0, #0xff
  470544:	cmp	w0, #0xff
  470548:	b.eq	470598 <_obstack_memory_used@@Base+0xf150>  // b.none
  47054c:	and	w1, w0, #0x7
  470550:	cmp	w1, #0x2
  470554:	b.eq	470590 <_obstack_memory_used@@Base+0xf148>  // b.none
  470558:	b.ls	470584 <_obstack_memory_used@@Base+0xf13c>  // b.plast
  47055c:	cmp	w1, #0x3
  470560:	mov	w0, #0x4                   	// #4
  470564:	b.ne	47056c <_obstack_memory_used@@Base+0xf124>  // b.any
  470568:	ret
  47056c:	cmp	w1, w0
  470570:	mov	w0, #0x8                   	// #8
  470574:	b.eq	470568 <_obstack_memory_used@@Base+0xf120>  // b.none
  470578:	stp	x29, x30, [sp, #-16]!
  47057c:	mov	x29, sp
  470580:	bl	4027f0 <abort@plt>
  470584:	mov	w0, #0x8                   	// #8
  470588:	cbnz	w1, 470578 <_obstack_memory_used@@Base+0xf130>
  47058c:	ret
  470590:	mov	w0, w1
  470594:	ret
  470598:	mov	w0, #0x0                   	// #0
  47059c:	ret
  4705a0:	and	w5, w0, #0xff
  4705a4:	cmp	w5, #0x50
  4705a8:	b.eq	4706c0 <_obstack_memory_used@@Base+0xf278>  // b.none
  4705ac:	and	w4, w5, #0xf
  4705b0:	cmp	w4, #0x4
  4705b4:	b.eq	4705d0 <_obstack_memory_used@@Base+0xf188>  // b.none
  4705b8:	b.ls	4705e4 <_obstack_memory_used@@Base+0xf19c>  // b.plast
  4705bc:	cmp	w4, #0xb
  4705c0:	b.eq	4706e4 <_obstack_memory_used@@Base+0xf29c>  // b.none
  4705c4:	b.ls	470640 <_obstack_memory_used@@Base+0xf1f8>  // b.plast
  4705c8:	cmp	w4, #0xc
  4705cc:	b.ne	4706f4 <_obstack_memory_used@@Base+0xf2ac>  // b.any
  4705d0:	mov	x0, x2
  4705d4:	ldr	x4, [x0], #8
  4705d8:	cbnz	x4, 4706a0 <_obstack_memory_used@@Base+0xf258>
  4705dc:	str	x4, [x3]
  4705e0:	ret
  4705e4:	cmp	w4, #0x2
  4705e8:	b.eq	4706d4 <_obstack_memory_used@@Base+0xf28c>  // b.none
  4705ec:	b.ls	470608 <_obstack_memory_used@@Base+0xf1c0>  // b.plast
  4705f0:	cmp	w4, #0x3
  4705f4:	b.ne	4706f4 <_obstack_memory_used@@Base+0xf2ac>  // b.any
  4705f8:	mov	x0, x2
  4705fc:	ldr	w4, [x0], #4
  470600:	cbz	x4, 4705dc <_obstack_memory_used@@Base+0xf194>
  470604:	b	4706a0 <_obstack_memory_used@@Base+0xf258>
  470608:	cbz	w4, 4705d0 <_obstack_memory_used@@Base+0xf188>
  47060c:	cmp	w4, #0x1
  470610:	b.ne	4706f4 <_obstack_memory_used@@Base+0xf2ac>  // b.any
  470614:	mov	x0, x2
  470618:	mov	x4, #0x0                   	// #0
  47061c:	mov	w7, #0x0                   	// #0
  470620:	ldrb	w8, [x0], #1
  470624:	and	x6, x8, #0x7f
  470628:	lsl	x6, x6, x7
  47062c:	add	w7, w7, #0x7
  470630:	orr	x4, x4, x6
  470634:	tbnz	w8, #7, 470620 <_obstack_memory_used@@Base+0xf1d8>
  470638:	cbz	x4, 4705dc <_obstack_memory_used@@Base+0xf194>
  47063c:	b	4706a0 <_obstack_memory_used@@Base+0xf258>
  470640:	cmp	w4, #0x9
  470644:	b.eq	470660 <_obstack_memory_used@@Base+0xf218>  // b.none
  470648:	cmp	w4, #0xa
  47064c:	b.ne	4706f4 <_obstack_memory_used@@Base+0xf2ac>  // b.any
  470650:	mov	x0, x2
  470654:	ldrsh	x4, [x0], #2
  470658:	cbz	x4, 4705dc <_obstack_memory_used@@Base+0xf194>
  47065c:	b	4706a0 <_obstack_memory_used@@Base+0xf258>
  470660:	mov	x0, x2
  470664:	mov	x4, #0x0                   	// #0
  470668:	mov	w7, #0x0                   	// #0
  47066c:	ldrb	w8, [x0], #1
  470670:	and	x6, x8, #0x7f
  470674:	lsl	x6, x6, x7
  470678:	add	w7, w7, #0x7
  47067c:	orr	x4, x4, x6
  470680:	tbnz	w8, #7, 47066c <_obstack_memory_used@@Base+0xf224>
  470684:	cmp	w7, #0x3f
  470688:	b.hi	4705d8 <_obstack_memory_used@@Base+0xf190>  // b.pmore
  47068c:	tbz	w8, #6, 4705d8 <_obstack_memory_used@@Base+0xf190>
  470690:	mov	x6, #0xffffffffffffffff    	// #-1
  470694:	lsl	x7, x6, x7
  470698:	orr	x4, x4, x7
  47069c:	nop
  4706a0:	and	w6, w5, #0x70
  4706a4:	cmp	w6, #0x10
  4706a8:	csel	x1, x2, x1, eq  // eq = none
  4706ac:	add	x4, x4, x1
  4706b0:	tbz	w5, #7, 4705dc <_obstack_memory_used@@Base+0xf194>
  4706b4:	ldr	x4, [x4]
  4706b8:	str	x4, [x3]
  4706bc:	ret
  4706c0:	add	x0, x2, #0x7
  4706c4:	and	x0, x0, #0xfffffffffffffff8
  4706c8:	ldr	x4, [x0], #8
  4706cc:	str	x4, [x3]
  4706d0:	ret
  4706d4:	mov	x0, x2
  4706d8:	ldrh	w4, [x0], #2
  4706dc:	cbz	x4, 4705dc <_obstack_memory_used@@Base+0xf194>
  4706e0:	b	4706a0 <_obstack_memory_used@@Base+0xf258>
  4706e4:	mov	x0, x2
  4706e8:	ldrsw	x4, [x0], #4
  4706ec:	cbz	x4, 4705dc <_obstack_memory_used@@Base+0xf194>
  4706f0:	b	4706a0 <_obstack_memory_used@@Base+0xf258>
  4706f4:	stp	x29, x30, [sp, #-16]!
  4706f8:	mov	x29, sp
  4706fc:	bl	4027f0 <abort@plt>
  470700:	stp	x29, x30, [sp, #-48]!
  470704:	mov	x29, sp
  470708:	stp	x19, x20, [sp, #16]
  47070c:	mov	x20, x0
  470710:	add	x19, x0, #0x9
  470714:	mov	x0, x19
  470718:	bl	4024f0 <strlen@plt>
  47071c:	ldrb	w3, [x20, #8]
  470720:	add	x0, x0, #0x1
  470724:	add	x2, x19, x0
  470728:	cmp	w3, #0x3
  47072c:	b.hi	4707f8 <_obstack_memory_used@@Base+0xf3b0>  // b.pmore
  470730:	ldrb	w0, [x20, #9]
  470734:	cmp	w0, #0x7a
  470738:	b.eq	47074c <_obstack_memory_used@@Base+0xf304>  // b.none
  47073c:	mov	w0, #0x0                   	// #0
  470740:	ldp	x19, x20, [sp, #16]
  470744:	ldp	x29, x30, [sp], #48
  470748:	ret
  47074c:	ldrsb	w1, [x2], #1
  470750:	tbnz	w1, #31, 47074c <_obstack_memory_used@@Base+0xf304>
  470754:	nop
  470758:	mov	x0, x2
  47075c:	ldrsb	w1, [x2], #1
  470760:	tbnz	w1, #31, 470758 <_obstack_memory_used@@Base+0xf310>
  470764:	cmp	w3, #0x1
  470768:	b.eq	4707f0 <_obstack_memory_used@@Base+0xf3a8>  // b.none
  47076c:	nop
  470770:	ldrsb	w0, [x2], #1
  470774:	tbnz	w0, #31, 470770 <_obstack_memory_used@@Base+0xf328>
  470778:	add	x19, x20, #0xa
  47077c:	nop
  470780:	ldrsb	w1, [x2], #1
  470784:	tbnz	w1, #31, 470780 <_obstack_memory_used@@Base+0xf338>
  470788:	ldrb	w0, [x20, #10]
  47078c:	add	x20, sp, #0x28
  470790:	cmp	w0, #0x52
  470794:	b.ne	4707b4 <_obstack_memory_used@@Base+0xf36c>  // b.any
  470798:	b	4707e0 <_obstack_memory_used@@Base+0xf398>
  47079c:	add	x2, x2, #0x1
  4707a0:	cmp	w0, #0x4c
  4707a4:	b.ne	47073c <_obstack_memory_used@@Base+0xf2f4>  // b.any
  4707a8:	ldrb	w0, [x19, #1]!
  4707ac:	cmp	w0, #0x52
  4707b0:	b.eq	4707e0 <_obstack_memory_used@@Base+0xf398>  // b.none
  4707b4:	cmp	w0, #0x50
  4707b8:	b.ne	47079c <_obstack_memory_used@@Base+0xf354>  // b.any
  4707bc:	ldrb	w0, [x2], #1
  4707c0:	mov	x3, x20
  4707c4:	mov	x1, #0x0                   	// #0
  4707c8:	and	w0, w0, #0x7f
  4707cc:	bl	4705a0 <_obstack_memory_used@@Base+0xf158>
  4707d0:	mov	x2, x0
  4707d4:	ldrb	w0, [x19, #1]!
  4707d8:	cmp	w0, #0x52
  4707dc:	b.ne	4707b4 <_obstack_memory_used@@Base+0xf36c>  // b.any
  4707e0:	ldrb	w0, [x2]
  4707e4:	ldp	x19, x20, [sp, #16]
  4707e8:	ldp	x29, x30, [sp], #48
  4707ec:	ret
  4707f0:	add	x2, x0, #0x2
  4707f4:	b	470778 <_obstack_memory_used@@Base+0xf330>
  4707f8:	ldrb	w1, [x19, x0]
  4707fc:	mov	w0, #0xff                  	// #255
  470800:	cmp	w1, #0x8
  470804:	b.ne	470740 <_obstack_memory_used@@Base+0xf2f8>  // b.any
  470808:	ldrb	w1, [x2, #1]
  47080c:	cbnz	w1, 470740 <_obstack_memory_used@@Base+0xf2f8>
  470810:	add	x2, x2, #0x2
  470814:	b	470730 <_obstack_memory_used@@Base+0xf2e8>
  470818:	and	w0, w0, #0xff
  47081c:	cmp	w0, #0xff
  470820:	b.eq	470858 <_obstack_memory_used@@Base+0xf410>  // b.none
  470824:	and	w3, w0, #0x70
  470828:	cmp	w3, #0x20
  47082c:	b.eq	470870 <_obstack_memory_used@@Base+0xf428>  // b.none
  470830:	b.ls	470844 <_obstack_memory_used@@Base+0xf3fc>  // b.plast
  470834:	cmp	w3, #0x30
  470838:	b.ne	470860 <_obstack_memory_used@@Base+0xf418>  // b.any
  47083c:	ldr	x0, [x2]
  470840:	ret
  470844:	tst	w0, #0x60
  470848:	b.eq	470858 <_obstack_memory_used@@Base+0xf410>  // b.none
  47084c:	stp	x29, x30, [sp, #-16]!
  470850:	mov	x29, sp
  470854:	bl	4027f0 <abort@plt>
  470858:	mov	x0, #0x0                   	// #0
  47085c:	ret
  470860:	cmp	w3, #0x50
  470864:	mov	x0, #0x0                   	// #0
  470868:	b.ne	47084c <_obstack_memory_used@@Base+0xf404>  // b.any
  47086c:	ret
  470870:	ldr	x0, [x1]
  470874:	ret
  470878:	stp	x29, x30, [sp, #-64]!
  47087c:	mov	x29, sp
  470880:	stp	x21, x22, [sp, #32]
  470884:	mov	x22, x2
  470888:	ldrh	w21, [x0, #32]
  47088c:	add	x2, x0, #0x10
  470890:	stp	x19, x20, [sp, #16]
  470894:	mov	x19, x0
  470898:	ubfx	x21, x21, #3, #8
  47089c:	mov	x20, x1
  4708a0:	add	x1, x0, #0x8
  4708a4:	mov	w0, w21
  4708a8:	bl	470818 <_obstack_memory_used@@Base+0xf3d0>
  4708ac:	add	x2, x20, #0x8
  4708b0:	mov	x20, x0
  4708b4:	mov	x1, x20
  4708b8:	add	x3, sp, #0x30
  4708bc:	mov	w0, w21
  4708c0:	bl	4705a0 <_obstack_memory_used@@Base+0xf158>
  4708c4:	ldrh	w0, [x19, #32]
  4708c8:	add	x2, x22, #0x8
  4708cc:	mov	x1, x20
  4708d0:	add	x3, sp, #0x38
  4708d4:	ubfx	x0, x0, #3, #8
  4708d8:	bl	4705a0 <_obstack_memory_used@@Base+0xf158>
  4708dc:	ldp	x2, x1, [sp, #48]
  4708e0:	mov	w3, #0x1                   	// #1
  4708e4:	ldp	x19, x20, [sp, #16]
  4708e8:	ldp	x21, x22, [sp, #32]
  4708ec:	cmp	x2, x1
  4708f0:	csetm	w0, cc  // cc = lo, ul, last
  4708f4:	csel	w0, w0, w3, ls  // ls = plast
  4708f8:	ldp	x29, x30, [sp], #64
  4708fc:	ret
  470900:	stp	x29, x30, [sp, #-128]!
  470904:	mov	x29, sp
  470908:	stp	x21, x22, [sp, #32]
  47090c:	add	x22, x0, #0x8
  470910:	stp	x23, x24, [sp, #48]
  470914:	add	x23, x0, #0x10
  470918:	stp	x25, x26, [sp, #64]
  47091c:	mov	x26, x0
  470920:	ldrh	w0, [x0, #32]
  470924:	stp	x19, x20, [sp, #16]
  470928:	mov	x19, x1
  47092c:	mov	x20, x2
  470930:	ubfx	x24, x0, #3, #8
  470934:	mov	x1, x22
  470938:	mov	x2, x23
  47093c:	mov	x0, x24
  470940:	bl	470818 <_obstack_memory_used@@Base+0xf3d0>
  470944:	ldr	w1, [x19]
  470948:	cbz	w1, 4709dc <_obstack_memory_used@@Base+0xf594>
  47094c:	stp	x27, x28, [sp, #80]
  470950:	add	x27, sp, #0x70
  470954:	mov	x25, x0
  470958:	mov	x21, #0x0                   	// #0
  47095c:	add	x0, sp, #0x78
  470960:	str	x0, [sp, #104]
  470964:	nop
  470968:	ldr	w1, [x19, #4]
  47096c:	cbz	w1, 4709c4 <_obstack_memory_used@@Base+0xf57c>
  470970:	ldrb	w0, [x26, #32]
  470974:	tbz	w0, #2, 4709a8 <_obstack_memory_used@@Base+0xf560>
  470978:	add	x28, x19, #0x4
  47097c:	sub	x28, x28, w1, sxtw
  470980:	cmp	x28, x21
  470984:	b.eq	4709a8 <_obstack_memory_used@@Base+0xf560>  // b.none
  470988:	mov	x0, x28
  47098c:	bl	470700 <_obstack_memory_used@@Base+0xf2b8>
  470990:	mov	x2, x23
  470994:	mov	w24, w0
  470998:	mov	x1, x22
  47099c:	mov	x21, x28
  4709a0:	bl	470818 <_obstack_memory_used@@Base+0xf3d0>
  4709a4:	mov	x25, x0
  4709a8:	cbnz	w24, 4709f8 <_obstack_memory_used@@Base+0xf5b0>
  4709ac:	ldp	x1, x0, [x19, #8]
  4709b0:	stp	x1, x0, [sp, #112]
  4709b4:	cbz	x1, 4709c4 <_obstack_memory_used@@Base+0xf57c>
  4709b8:	sub	x1, x20, x1
  4709bc:	cmp	x1, x0
  4709c0:	b.cc	470a60 <_obstack_memory_used@@Base+0xf618>  // b.lo, b.ul, b.last
  4709c4:	ldr	w1, [x19]
  4709c8:	add	x1, x1, #0x4
  4709cc:	add	x19, x19, x1
  4709d0:	ldr	w1, [x19]
  4709d4:	cbnz	w1, 470968 <_obstack_memory_used@@Base+0xf520>
  4709d8:	ldp	x27, x28, [sp, #80]
  4709dc:	mov	x0, #0x0                   	// #0
  4709e0:	ldp	x19, x20, [sp, #16]
  4709e4:	ldp	x21, x22, [sp, #32]
  4709e8:	ldp	x23, x24, [sp, #48]
  4709ec:	ldp	x25, x26, [sp, #64]
  4709f0:	ldp	x29, x30, [sp], #128
  4709f4:	ret
  4709f8:	and	w28, w24, #0xff
  4709fc:	mov	x3, x27
  470a00:	add	x2, x19, #0x8
  470a04:	mov	x1, x25
  470a08:	mov	w0, w28
  470a0c:	bl	4705a0 <_obstack_memory_used@@Base+0xf158>
  470a10:	ldr	x3, [sp, #104]
  470a14:	mov	x2, x0
  470a18:	mov	x1, #0x0                   	// #0
  470a1c:	and	w0, w28, #0xf
  470a20:	bl	4705a0 <_obstack_memory_used@@Base+0xf158>
  470a24:	mov	w0, w28
  470a28:	bl	470540 <_obstack_memory_used@@Base+0xf0f8>
  470a2c:	lsl	w2, w0, #3
  470a30:	cmp	w0, #0x8
  470a34:	mov	x0, #0x1                   	// #1
  470a38:	ldr	x1, [sp, #112]
  470a3c:	lsl	x2, x0, x2
  470a40:	sub	x2, x2, #0x1
  470a44:	csinv	x2, x2, xzr, cc  // cc = lo, ul, last
  470a48:	tst	x1, x2
  470a4c:	b.eq	4709c4 <_obstack_memory_used@@Base+0xf57c>  // b.none
  470a50:	ldr	x0, [sp, #120]
  470a54:	sub	x1, x20, x1
  470a58:	cmp	x1, x0
  470a5c:	b.cs	4709c4 <_obstack_memory_used@@Base+0xf57c>  // b.hs, b.nlast
  470a60:	mov	x0, x19
  470a64:	ldp	x19, x20, [sp, #16]
  470a68:	ldp	x21, x22, [sp, #32]
  470a6c:	ldp	x23, x24, [sp, #48]
  470a70:	ldp	x25, x26, [sp, #64]
  470a74:	ldp	x27, x28, [sp, #80]
  470a78:	ldp	x29, x30, [sp], #128
  470a7c:	ret
  470a80:	stp	x29, x30, [sp, #-80]!
  470a84:	add	x3, x1, #0x4
  470a88:	mov	x29, sp
  470a8c:	stp	x21, x22, [sp, #32]
  470a90:	mov	x21, x1
  470a94:	ldrsw	x1, [x1, #4]
  470a98:	stp	x19, x20, [sp, #16]
  470a9c:	mov	x20, x2
  470aa0:	add	x19, x0, #0x10
  470aa4:	str	x23, [sp, #48]
  470aa8:	add	x23, x0, #0x8
  470aac:	sub	x0, x3, x1
  470ab0:	bl	470700 <_obstack_memory_used@@Base+0xf2b8>
  470ab4:	and	w22, w0, #0xff
  470ab8:	mov	x2, x19
  470abc:	mov	x1, x23
  470ac0:	mov	w0, w22
  470ac4:	bl	470818 <_obstack_memory_used@@Base+0xf3d0>
  470ac8:	mov	x1, x0
  470acc:	add	x3, sp, #0x40
  470ad0:	add	x2, x21, #0x8
  470ad4:	mov	w0, w22
  470ad8:	bl	4705a0 <_obstack_memory_used@@Base+0xf158>
  470adc:	add	x1, x20, #0x4
  470ae0:	ldrsw	x0, [x20, #4]
  470ae4:	sub	x0, x1, x0
  470ae8:	bl	470700 <_obstack_memory_used@@Base+0xf2b8>
  470aec:	mov	x2, x19
  470af0:	and	w19, w0, #0xff
  470af4:	mov	x1, x23
  470af8:	mov	w0, w19
  470afc:	bl	470818 <_obstack_memory_used@@Base+0xf3d0>
  470b00:	mov	x1, x0
  470b04:	add	x2, x20, #0x8
  470b08:	add	x3, sp, #0x48
  470b0c:	mov	w0, w19
  470b10:	bl	4705a0 <_obstack_memory_used@@Base+0xf158>
  470b14:	ldp	x2, x1, [sp, #64]
  470b18:	mov	w3, #0x1                   	// #1
  470b1c:	ldp	x19, x20, [sp, #16]
  470b20:	ldp	x21, x22, [sp, #32]
  470b24:	cmp	x2, x1
  470b28:	csetm	w0, cc  // cc = lo, ul, last
  470b2c:	csel	w0, w0, w3, ls  // ls = plast
  470b30:	ldr	x23, [sp, #48]
  470b34:	ldp	x29, x30, [sp], #80
  470b38:	ret
  470b3c:	nop
  470b40:	stp	x29, x30, [sp, #-112]!
  470b44:	mov	x29, sp
  470b48:	stp	x21, x22, [sp, #32]
  470b4c:	mov	x21, x0
  470b50:	ldr	w0, [x1]
  470b54:	cbz	w0, 470cb8 <_obstack_memory_used@@Base+0xf870>
  470b58:	stp	x19, x20, [sp, #16]
  470b5c:	mov	x19, x1
  470b60:	mov	w20, #0x0                   	// #0
  470b64:	stp	x25, x26, [sp, #64]
  470b68:	add	x25, sp, #0x68
  470b6c:	add	x26, x21, #0x8
  470b70:	stp	x27, x28, [sp, #80]
  470b74:	add	x27, x21, #0x10
  470b78:	mov	x22, #0x0                   	// #0
  470b7c:	mov	x4, #0x0                   	// #0
  470b80:	stp	x23, x24, [sp, #48]
  470b84:	mov	x23, #0x0                   	// #0
  470b88:	ldr	w2, [x19, #4]
  470b8c:	cbz	w2, 470c54 <_obstack_memory_used@@Base+0xf80c>
  470b90:	add	x28, x19, #0x4
  470b94:	and	w24, w20, #0xff
  470b98:	sub	x28, x28, w2, sxtw
  470b9c:	cmp	x28, x4
  470ba0:	b.eq	470bf8 <_obstack_memory_used@@Base+0xf7b0>  // b.none
  470ba4:	mov	x0, x28
  470ba8:	bl	470700 <_obstack_memory_used@@Base+0xf2b8>
  470bac:	mov	w20, w0
  470bb0:	cmp	w0, #0xff
  470bb4:	b.eq	470c94 <_obstack_memory_used@@Base+0xf84c>  // b.none
  470bb8:	and	w24, w0, #0xff
  470bbc:	mov	x2, x27
  470bc0:	mov	w0, w24
  470bc4:	mov	x1, x26
  470bc8:	bl	470818 <_obstack_memory_used@@Base+0xf3d0>
  470bcc:	mov	x23, x0
  470bd0:	ldrh	w2, [x21, #32]
  470bd4:	and	w0, w2, #0x7f8
  470bd8:	cmp	w0, #0x7f8
  470bdc:	b.eq	470c88 <_obstack_memory_used@@Base+0xf840>  // b.none
  470be0:	ubfx	x2, x2, #3, #8
  470be4:	cmp	w2, w20
  470be8:	b.eq	470bf8 <_obstack_memory_used@@Base+0xf7b0>  // b.none
  470bec:	ldrb	w0, [x21, #32]
  470bf0:	orr	w0, w0, #0x4
  470bf4:	strb	w0, [x21, #32]
  470bf8:	mov	x3, x25
  470bfc:	add	x2, x19, #0x8
  470c00:	mov	x1, x23
  470c04:	mov	w0, w24
  470c08:	bl	4705a0 <_obstack_memory_used@@Base+0xf158>
  470c0c:	mov	w0, w24
  470c10:	bl	470540 <_obstack_memory_used@@Base+0xf0f8>
  470c14:	lsl	w2, w0, #3
  470c18:	cmp	w0, #0x8
  470c1c:	mov	x0, #0x1                   	// #1
  470c20:	ldr	x3, [sp, #104]
  470c24:	lsl	x2, x0, x2
  470c28:	sub	x2, x2, #0x1
  470c2c:	mov	x4, x28
  470c30:	csinv	x2, x2, xzr, cc  // cc = lo, ul, last
  470c34:	tst	x3, x2
  470c38:	b.eq	470c54 <_obstack_memory_used@@Base+0xf80c>  // b.none
  470c3c:	ldr	x0, [x21]
  470c40:	add	x22, x22, #0x1
  470c44:	cmp	x0, x3
  470c48:	b.ls	470c50 <_obstack_memory_used@@Base+0xf808>  // b.plast
  470c4c:	str	x3, [x21]
  470c50:	mov	x4, x28
  470c54:	ldr	w2, [x19]
  470c58:	add	x2, x2, #0x4
  470c5c:	add	x19, x19, x2
  470c60:	ldr	w0, [x19]
  470c64:	cbnz	w0, 470b88 <_obstack_memory_used@@Base+0xf740>
  470c68:	ldp	x19, x20, [sp, #16]
  470c6c:	ldp	x23, x24, [sp, #48]
  470c70:	ldp	x25, x26, [sp, #64]
  470c74:	ldp	x27, x28, [sp, #80]
  470c78:	mov	x0, x22
  470c7c:	ldp	x21, x22, [sp, #32]
  470c80:	ldp	x29, x30, [sp], #112
  470c84:	ret
  470c88:	bfi	w2, w24, #3, #8
  470c8c:	strh	w2, [x21, #32]
  470c90:	b	470bf8 <_obstack_memory_used@@Base+0xf7b0>
  470c94:	mov	x22, #0xffffffffffffffff    	// #-1
  470c98:	mov	x0, x22
  470c9c:	ldp	x19, x20, [sp, #16]
  470ca0:	ldp	x21, x22, [sp, #32]
  470ca4:	ldp	x23, x24, [sp, #48]
  470ca8:	ldp	x25, x26, [sp, #64]
  470cac:	ldp	x27, x28, [sp, #80]
  470cb0:	ldp	x29, x30, [sp], #112
  470cb4:	ret
  470cb8:	mov	x22, #0x0                   	// #0
  470cbc:	b	470c78 <_obstack_memory_used@@Base+0xf830>
  470cc0:	stp	x29, x30, [sp, #-112]!
  470cc4:	mov	x29, sp
  470cc8:	stp	x21, x22, [sp, #32]
  470ccc:	add	x21, x0, #0x8
  470cd0:	add	x22, x0, #0x10
  470cd4:	stp	x27, x28, [sp, #80]
  470cd8:	mov	x28, x0
  470cdc:	ldrh	w0, [x0, #32]
  470ce0:	stp	x19, x20, [sp, #16]
  470ce4:	mov	x19, x2
  470ce8:	mov	x20, x1
  470cec:	stp	x25, x26, [sp, #64]
  470cf0:	ubfx	x26, x0, #3, #8
  470cf4:	mov	x2, x22
  470cf8:	mov	x1, x21
  470cfc:	mov	x0, x26
  470d00:	bl	470818 <_obstack_memory_used@@Base+0xf3d0>
  470d04:	ldr	w2, [x19]
  470d08:	cbz	w2, 470da0 <_obstack_memory_used@@Base+0xf958>
  470d0c:	add	x25, sp, #0x68
  470d10:	stp	x23, x24, [sp, #48]
  470d14:	mov	x24, x0
  470d18:	mov	x23, #0x0                   	// #0
  470d1c:	nop
  470d20:	ldr	w2, [x19, #4]
  470d24:	cbz	w2, 470d88 <_obstack_memory_used@@Base+0xf940>
  470d28:	ldrb	w0, [x28, #32]
  470d2c:	tbz	w0, #2, 470d60 <_obstack_memory_used@@Base+0xf918>
  470d30:	add	x27, x19, #0x4
  470d34:	sub	x27, x27, w2, sxtw
  470d38:	cmp	x27, x23
  470d3c:	b.eq	470d60 <_obstack_memory_used@@Base+0xf918>  // b.none
  470d40:	mov	x0, x27
  470d44:	bl	470700 <_obstack_memory_used@@Base+0xf2b8>
  470d48:	mov	x2, x22
  470d4c:	mov	w26, w0
  470d50:	mov	x1, x21
  470d54:	mov	x23, x27
  470d58:	bl	470818 <_obstack_memory_used@@Base+0xf3d0>
  470d5c:	mov	x24, x0
  470d60:	cbnz	w26, 470db8 <_obstack_memory_used@@Base+0xf970>
  470d64:	ldr	x0, [x19, #8]
  470d68:	cbz	x0, 470d88 <_obstack_memory_used@@Base+0xf940>
  470d6c:	ldr	x2, [x20]
  470d70:	cbz	x2, 470d88 <_obstack_memory_used@@Base+0xf940>
  470d74:	ldr	x3, [x2, #8]
  470d78:	add	x0, x3, #0x2
  470d7c:	add	x3, x3, #0x1
  470d80:	str	x3, [x2, #8]
  470d84:	str	x19, [x2, x0, lsl #3]
  470d88:	ldr	w2, [x19]
  470d8c:	add	x2, x2, #0x4
  470d90:	add	x19, x19, x2
  470d94:	ldr	w2, [x19]
  470d98:	cbnz	w2, 470d20 <_obstack_memory_used@@Base+0xf8d8>
  470d9c:	ldp	x23, x24, [sp, #48]
  470da0:	ldp	x19, x20, [sp, #16]
  470da4:	ldp	x21, x22, [sp, #32]
  470da8:	ldp	x25, x26, [sp, #64]
  470dac:	ldp	x27, x28, [sp, #80]
  470db0:	ldp	x29, x30, [sp], #112
  470db4:	ret
  470db8:	mov	x3, x25
  470dbc:	add	x2, x19, #0x8
  470dc0:	mov	x1, x24
  470dc4:	and	w27, w26, #0xff
  470dc8:	mov	w0, w27
  470dcc:	bl	4705a0 <_obstack_memory_used@@Base+0xf158>
  470dd0:	mov	w0, w27
  470dd4:	bl	470540 <_obstack_memory_used@@Base+0xf0f8>
  470dd8:	lsl	w2, w0, #3
  470ddc:	cmp	w0, #0x8
  470de0:	mov	x0, #0x1                   	// #1
  470de4:	ldr	x3, [sp, #104]
  470de8:	lsl	x2, x0, x2
  470dec:	sub	x2, x2, #0x1
  470df0:	csinv	x2, x2, xzr, cc  // cc = lo, ul, last
  470df4:	tst	x2, x3
  470df8:	b.ne	470d6c <_obstack_memory_used@@Base+0xf924>  // b.any
  470dfc:	b	470d88 <_obstack_memory_used@@Base+0xf940>
  470e00:	stp	x29, x30, [sp, #-128]!
  470e04:	cmp	x1, #0x2f
  470e08:	mov	x29, sp
  470e0c:	stp	x19, x20, [sp, #16]
  470e10:	mov	x19, x2
  470e14:	ldr	w2, [x2, #40]
  470e18:	ldr	x13, [x0]
  470e1c:	ccmp	w2, #0x0, #0x4, hi  // hi = pmore
  470e20:	ldr	x3, [x0, #16]
  470e24:	b.ne	470f64 <_obstack_memory_used@@Base+0xfb1c>  // b.any
  470e28:	cmp	x1, #0x19
  470e2c:	b.ls	470f3c <_obstack_memory_used@@Base+0xfaf4>  // b.plast
  470e30:	mov	x10, #0x0                   	// #0
  470e34:	mov	x15, #0x0                   	// #0
  470e38:	ldrh	w4, [x0, #24]
  470e3c:	cbz	w4, 470f54 <_obstack_memory_used@@Base+0xfb0c>
  470e40:	mov	w0, #0x38                  	// #56
  470e44:	mov	w7, #0xe550                	// #58704
  470e48:	mov	x11, #0x0                   	// #0
  470e4c:	mov	x12, #0x0                   	// #0
  470e50:	umaddl	x4, w4, w0, x3
  470e54:	mov	x8, #0x0                   	// #0
  470e58:	mov	x6, #0x0                   	// #0
  470e5c:	mov	x9, #0x0                   	// #0
  470e60:	movk	w7, #0x6474, lsl #16
  470e64:	mov	x14, #0x1                   	// #1
  470e68:	b	470e88 <_obstack_memory_used@@Base+0xfa40>
  470e6c:	cmp	w0, w7
  470e70:	b.eq	470f4c <_obstack_memory_used@@Base+0xfb04>  // b.none
  470e74:	cmp	w0, #0x2
  470e78:	csel	x6, x6, x3, ne  // ne = any
  470e7c:	add	x3, x3, #0x38
  470e80:	cmp	x4, x3
  470e84:	b.eq	470ed0 <_obstack_memory_used@@Base+0xfa88>  // b.none
  470e88:	ldr	w0, [x3]
  470e8c:	cmp	w0, #0x1
  470e90:	b.ne	470e6c <_obstack_memory_used@@Base+0xfa24>  // b.any
  470e94:	ldr	x0, [x3, #16]
  470e98:	ldr	x5, [x19]
  470e9c:	add	x0, x13, x0
  470ea0:	cmp	x5, x0
  470ea4:	b.cc	470e7c <_obstack_memory_used@@Base+0xfa34>  // b.lo, b.ul, b.last
  470ea8:	ldr	x2, [x3, #40]
  470eac:	add	x3, x3, #0x38
  470eb0:	add	x2, x0, x2
  470eb4:	cmp	x5, x2
  470eb8:	csel	x11, x11, x2, cs  // cs = hs, nlast
  470ebc:	csel	x12, x12, x0, cs  // cs = hs, nlast
  470ec0:	csel	x8, x8, x14, cs  // cs = hs, nlast
  470ec4:	cmp	x4, x3
  470ec8:	b.ne	470e88 <_obstack_memory_used@@Base+0xfa40>  // b.any
  470ecc:	nop
  470ed0:	cbz	x8, 470f54 <_obstack_memory_used@@Base+0xfb0c>
  470ed4:	cmp	x1, #0x2f
  470ed8:	b.ls	470f14 <_obstack_memory_used@@Base+0xfacc>  // b.plast
  470edc:	adrp	x1, 4a5000 <__environ@@GLIBC_2.17+0xa68>
  470ee0:	add	x1, x1, #0xbb0
  470ee4:	cmp	x10, #0x0
  470ee8:	ccmp	x15, #0x0, #0x4, ne  // ne = any
  470eec:	ldr	x0, [x1, #8]
  470ef0:	b.eq	470f08 <_obstack_memory_used@@Base+0xfac0>  // b.none
  470ef4:	ldr	x2, [x10, #40]
  470ef8:	str	x2, [x15, #40]
  470efc:	str	x0, [x10, #40]
  470f00:	mov	x0, x10
  470f04:	str	x10, [x1, #8]
  470f08:	stp	x12, x11, [x0]
  470f0c:	stp	x13, x9, [x0, #16]
  470f10:	str	x6, [x0, #32]
  470f14:	cbz	x9, 470f54 <_obstack_memory_used@@Base+0xfb0c>
  470f18:	ldr	x0, [x9, #16]
  470f1c:	add	x20, x13, x0
  470f20:	ldrb	w0, [x13, x0]
  470f24:	cmp	w0, #0x1
  470f28:	b.eq	470fc4 <_obstack_memory_used@@Base+0xfb7c>  // b.none
  470f2c:	mov	w0, #0x1                   	// #1
  470f30:	ldp	x19, x20, [sp, #16]
  470f34:	ldp	x29, x30, [sp], #128
  470f38:	ret
  470f3c:	mov	w0, #0xffffffff            	// #-1
  470f40:	ldp	x19, x20, [sp, #16]
  470f44:	ldp	x29, x30, [sp], #128
  470f48:	ret
  470f4c:	mov	x9, x3
  470f50:	b	470e7c <_obstack_memory_used@@Base+0xfa34>
  470f54:	mov	w0, #0x0                   	// #0
  470f58:	ldp	x19, x20, [sp, #16]
  470f5c:	ldp	x29, x30, [sp], #128
  470f60:	ret
  470f64:	ldp	x6, x7, [x0, #32]
  470f68:	adrp	x4, 4a4000 <_obstack_memory_used@@Base+0x42bb8>
  470f6c:	adrp	x5, 4a5000 <__environ@@GLIBC_2.17+0xa68>
  470f70:	ldr	x2, [x4, #1384]
  470f74:	cmp	x6, x2
  470f78:	b.eq	471098 <_obstack_memory_used@@Base+0xfc50>  // b.none
  470f7c:	add	x2, x5, #0xbb0
  470f80:	str	x6, [x4, #1384]
  470f84:	add	x4, x2, #0x40
  470f88:	add	x2, x2, #0x1c0
  470f8c:	str	x7, [x5, #2992]
  470f90:	stp	xzr, xzr, [x4, #-48]
  470f94:	stur	x4, [x4, #-8]
  470f98:	add	x4, x4, #0x30
  470f9c:	cmp	x2, x4
  470fa0:	b.ne	470f90 <_obstack_memory_used@@Base+0xfb48>  // b.any
  470fa4:	add	x5, x5, #0xbb0
  470fa8:	mov	x10, #0x0                   	// #0
  470fac:	add	x2, x5, #0x10
  470fb0:	mov	x15, #0x0                   	// #0
  470fb4:	str	xzr, [x5, #392]
  470fb8:	str	x2, [x5, #8]
  470fbc:	str	wzr, [x19, #40]
  470fc0:	b	470e38 <_obstack_memory_used@@Base+0xf9f0>
  470fc4:	stp	x21, x22, [sp, #32]
  470fc8:	add	x22, x19, #0x8
  470fcc:	mov	x1, x22
  470fd0:	stp	x23, x24, [sp, #48]
  470fd4:	add	x23, x19, #0x10
  470fd8:	mov	x2, x23
  470fdc:	ldrb	w21, [x20, #1]
  470fe0:	mov	w0, w21
  470fe4:	bl	470818 <_obstack_memory_used@@Base+0xf3d0>
  470fe8:	add	x3, sp, #0x40
  470fec:	mov	x1, x0
  470ff0:	add	x2, x20, #0x4
  470ff4:	mov	w0, w21
  470ff8:	bl	4705a0 <_obstack_memory_used@@Base+0xf158>
  470ffc:	ldrb	w24, [x20, #2]
  471000:	mov	x21, x0
  471004:	cmp	w24, #0xff
  471008:	b.eq	471018 <_obstack_memory_used@@Base+0xfbd0>  // b.none
  47100c:	ldrb	w0, [x20, #3]
  471010:	cmp	w0, #0x3b
  471014:	b.eq	4710f8 <_obstack_memory_used@@Base+0xfcb0>  // b.none
  471018:	ldr	x2, [x19]
  47101c:	mov	x3, #0x4                   	// #4
  471020:	ldp	x5, x4, [x19, #8]
  471024:	add	x0, sp, #0x50
  471028:	ldr	x1, [sp, #64]
  47102c:	stp	xzr, x5, [sp, #80]
  471030:	stp	x4, x1, [sp, #96]
  471034:	str	x3, [sp, #112]
  471038:	bl	470900 <_obstack_memory_used@@Base+0xf4b8>
  47103c:	str	x0, [x19, #32]
  471040:	cbz	x0, 471210 <_obstack_memory_used@@Base+0xfdc8>
  471044:	ldrsw	x1, [x0, #4]
  471048:	add	x0, x0, #0x4
  47104c:	sub	x0, x0, x1
  471050:	bl	470700 <_obstack_memory_used@@Base+0xf2b8>
  471054:	and	w20, w0, #0xff
  471058:	mov	x2, x23
  47105c:	mov	x1, x22
  471060:	mov	w0, w20
  471064:	bl	470818 <_obstack_memory_used@@Base+0xf3d0>
  471068:	ldr	x2, [x19, #32]
  47106c:	mov	x1, x0
  471070:	add	x3, sp, #0x48
  471074:	mov	w0, w20
  471078:	add	x2, x2, #0x8
  47107c:	bl	4705a0 <_obstack_memory_used@@Base+0xf158>
  471080:	ldr	x1, [sp, #72]
  471084:	mov	w0, #0x1                   	// #1
  471088:	ldp	x21, x22, [sp, #32]
  47108c:	ldp	x23, x24, [sp, #48]
  471090:	str	x1, [x19, #24]
  471094:	b	470f40 <_obstack_memory_used@@Base+0xfaf8>
  471098:	ldr	x2, [x5, #2992]
  47109c:	add	x8, x5, #0xbb0
  4710a0:	cmp	x2, x7
  4710a4:	b.ne	470f7c <_obstack_memory_used@@Base+0xfb34>  // b.any
  4710a8:	ldr	x7, [x8, #8]
  4710ac:	cbz	x7, 470e30 <_obstack_memory_used@@Base+0xf9e8>
  4710b0:	mov	x10, x7
  4710b4:	mov	x15, #0x0                   	// #0
  4710b8:	ldr	x6, [x19]
  4710bc:	ldp	x2, x4, [x10]
  4710c0:	cmp	x6, x2
  4710c4:	b.cc	4710d0 <_obstack_memory_used@@Base+0xfc88>  // b.lo, b.ul, b.last
  4710c8:	cmp	x6, x4
  4710cc:	b.cc	471228 <_obstack_memory_used@@Base+0xfde0>  // b.lo, b.ul, b.last
  4710d0:	orr	x2, x2, x4
  4710d4:	cbz	x2, 470e38 <_obstack_memory_used@@Base+0xf9f0>
  4710d8:	ldr	x2, [x10, #40]
  4710dc:	cbz	x2, 470e38 <_obstack_memory_used@@Base+0xf9f0>
  4710e0:	mov	x15, x10
  4710e4:	mov	x10, x2
  4710e8:	ldp	x2, x4, [x10]
  4710ec:	cmp	x6, x2
  4710f0:	b.cc	4710d0 <_obstack_memory_used@@Base+0xfc88>  // b.lo, b.ul, b.last
  4710f4:	b	4710c8 <_obstack_memory_used@@Base+0xfc80>
  4710f8:	mov	x2, x23
  4710fc:	mov	x1, x22
  471100:	mov	w0, w24
  471104:	bl	470818 <_obstack_memory_used@@Base+0xf3d0>
  471108:	add	x3, sp, #0x48
  47110c:	mov	x1, x0
  471110:	mov	x2, x21
  471114:	mov	w0, w24
  471118:	bl	4705a0 <_obstack_memory_used@@Base+0xf158>
  47111c:	ldr	x3, [sp, #72]
  471120:	cbz	x3, 471200 <_obstack_memory_used@@Base+0xfdb8>
  471124:	ands	x5, x0, #0x3
  471128:	ldr	x2, [x19]
  47112c:	b.ne	47101c <_obstack_memory_used@@Base+0xfbd4>  // b.any
  471130:	ldrsw	x1, [x0]
  471134:	add	x1, x1, x20
  471138:	cmp	x1, x2
  47113c:	b.hi	471200 <_obstack_memory_used@@Base+0xfdb8>  // b.pmore
  471140:	sub	x3, x3, #0x1
  471144:	lsl	x1, x3, #3
  471148:	add	x21, x0, x1
  47114c:	ldrsw	x1, [x0, x1]
  471150:	add	x1, x1, x20
  471154:	cmp	x1, x2
  471158:	b.ls	47119c <_obstack_memory_used@@Base+0xfd54>  // b.plast
  47115c:	cmp	x5, x3
  471160:	b.cs	47124c <_obstack_memory_used@@Base+0xfe04>  // b.hs, b.nlast
  471164:	add	x1, x5, x3
  471168:	lsr	x1, x1, #1
  47116c:	lsl	x4, x1, #3
  471170:	add	x21, x0, x4
  471174:	ldrsw	x4, [x0, x4]
  471178:	add	x4, x4, x20
  47117c:	cmp	x4, x2
  471180:	b.hi	471220 <_obstack_memory_used@@Base+0xfdd8>  // b.pmore
  471184:	add	x5, x1, #0x1
  471188:	lsl	x1, x5, #3
  47118c:	ldrsw	x1, [x0, x1]
  471190:	add	x1, x1, x20
  471194:	cmp	x1, x2
  471198:	b.ls	47115c <_obstack_memory_used@@Base+0xfd14>  // b.plast
  47119c:	ldrsw	x22, [x21, #4]
  4711a0:	add	x22, x22, x20
  4711a4:	add	x1, x22, #0x4
  4711a8:	ldrsw	x0, [x22, #4]
  4711ac:	sub	x0, x1, x0
  4711b0:	bl	470700 <_obstack_memory_used@@Base+0xf2b8>
  4711b4:	and	w23, w0, #0xff
  4711b8:	mov	w0, w23
  4711bc:	bl	470540 <_obstack_memory_used@@Base+0xf0f8>
  4711c0:	mov	w2, w0
  4711c4:	mov	x1, #0x0                   	// #0
  4711c8:	add	x2, x2, #0x8
  4711cc:	add	x3, sp, #0x50
  4711d0:	add	x2, x22, x2
  4711d4:	and	w0, w23, #0xf
  4711d8:	bl	4705a0 <_obstack_memory_used@@Base+0xf158>
  4711dc:	ldrsw	x0, [x21]
  4711e0:	ldr	x1, [sp, #80]
  4711e4:	add	x20, x0, x20
  4711e8:	ldr	x2, [x19]
  4711ec:	add	x0, x20, x1
  4711f0:	cmp	x2, x0
  4711f4:	b.cs	4711fc <_obstack_memory_used@@Base+0xfdb4>  // b.hs, b.nlast
  4711f8:	str	x22, [x19, #32]
  4711fc:	str	x20, [x19, #24]
  471200:	mov	w0, #0x1                   	// #1
  471204:	ldp	x21, x22, [sp, #32]
  471208:	ldp	x23, x24, [sp, #48]
  47120c:	b	470f40 <_obstack_memory_used@@Base+0xfaf8>
  471210:	mov	w0, #0x1                   	// #1
  471214:	ldp	x21, x22, [sp, #32]
  471218:	ldp	x23, x24, [sp, #48]
  47121c:	b	470f30 <_obstack_memory_used@@Base+0xfae8>
  471220:	mov	x3, x1
  471224:	b	47115c <_obstack_memory_used@@Base+0xfd14>
  471228:	cmp	x10, x7
  47122c:	ldp	x13, x9, [x10, #16]
  471230:	b.eq	470f14 <_obstack_memory_used@@Base+0xfacc>  // b.none
  471234:	add	x5, x5, #0xbb0
  471238:	ldr	x0, [x10, #40]
  47123c:	str	x0, [x15, #40]
  471240:	str	x10, [x5, #8]
  471244:	str	x7, [x10, #40]
  471248:	b	470f14 <_obstack_memory_used@@Base+0xfacc>
  47124c:	bl	4027f0 <abort@plt>
  471250:	stp	x29, x30, [sp, #-160]!
  471254:	mov	x29, sp
  471258:	stp	x19, x20, [sp, #16]
  47125c:	mov	x19, x1
  471260:	ldrb	w1, [x0, #32]
  471264:	stp	x23, x24, [sp, #48]
  471268:	mov	x24, x0
  47126c:	tbz	w1, #0, 4712d8 <_obstack_memory_used@@Base+0xfe90>
  471270:	stp	x27, x28, [sp, #80]
  471274:	ldr	x27, [x24, #24]
  471278:	tbnz	w1, #2, 47134c <_obstack_memory_used@@Base+0xff04>
  47127c:	ldrh	w0, [x24, #32]
  471280:	tst	w0, #0x7f8
  471284:	b.ne	4714ac <_obstack_memory_used@@Base+0x10064>  // b.any
  471288:	mov	x2, #0x0                   	// #0
  47128c:	ldr	x1, [x27, #8]
  471290:	b	4712b4 <_obstack_memory_used@@Base+0xfe6c>
  471294:	add	x0, x1, x2
  471298:	lsr	x0, x0, #1
  47129c:	add	x3, x0, #0x2
  4712a0:	ldr	x20, [x27, x3, lsl #3]
  4712a4:	ldr	x3, [x20, #8]
  4712a8:	cmp	x19, x3
  4712ac:	b.cs	471334 <_obstack_memory_used@@Base+0xfeec>  // b.hs, b.nlast
  4712b0:	mov	x1, x0
  4712b4:	cmp	x1, x2
  4712b8:	b.hi	471294 <_obstack_memory_used@@Base+0xfe4c>  // b.pmore
  4712bc:	ldp	x27, x28, [sp, #80]
  4712c0:	mov	x20, #0x0                   	// #0
  4712c4:	mov	x0, x20
  4712c8:	ldp	x19, x20, [sp, #16]
  4712cc:	ldp	x23, x24, [sp, #48]
  4712d0:	ldp	x29, x30, [sp], #160
  4712d4:	ret
  4712d8:	stp	x25, x26, [sp, #64]
  4712dc:	ldr	w25, [x0, #32]
  4712e0:	stp	x21, x22, [sp, #32]
  4712e4:	tst	x25, #0xfffff800
  4712e8:	lsr	w25, w25, #11
  4712ec:	b.ne	471554 <_obstack_memory_used@@Base+0x1010c>  // b.any
  4712f0:	ldr	x20, [x0, #24]
  4712f4:	tbz	w1, #1, 471404 <_obstack_memory_used@@Base+0xffbc>
  4712f8:	ldr	x1, [x20]
  4712fc:	cbnz	x1, 471310 <_obstack_memory_used@@Base+0xfec8>
  471300:	b	471430 <_obstack_memory_used@@Base+0xffe8>
  471304:	ldr	x1, [x20, #8]!
  471308:	add	x25, x25, x0
  47130c:	cbz	x1, 471418 <_obstack_memory_used@@Base+0xffd0>
  471310:	mov	x0, x24
  471314:	bl	470b40 <_obstack_memory_used@@Base+0xf6f8>
  471318:	cmn	x0, #0x1
  47131c:	b.ne	471304 <_obstack_memory_used@@Base+0xfebc>  // b.any
  471320:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x20bb8>
  471324:	mov	x1, #0x7f8                 	// #2040
  471328:	add	x0, x0, #0x6a8
  47132c:	stp	x0, x1, [x24, #24]
  471330:	b	471430 <_obstack_memory_used@@Base+0xffe8>
  471334:	ldr	x2, [x20, #16]
  471338:	add	x3, x3, x2
  47133c:	cmp	x19, x3
  471340:	b.cc	471828 <_obstack_memory_used@@Base+0x103e0>  // b.lo, b.ul, b.last
  471344:	add	x2, x0, #0x1
  471348:	b	4712b4 <_obstack_memory_used@@Base+0xfe6c>
  47134c:	ldr	x28, [x27, #8]
  471350:	cbz	x28, 4712bc <_obstack_memory_used@@Base+0xfe74>
  471354:	add	x0, x24, #0x8
  471358:	add	x23, sp, #0x88
  47135c:	stp	x21, x22, [sp, #32]
  471360:	add	x22, sp, #0x90
  471364:	stp	x25, x26, [sp, #64]
  471368:	add	x26, x24, #0x10
  47136c:	mov	x25, #0x0                   	// #0
  471370:	str	x0, [sp, #96]
  471374:	b	471394 <_obstack_memory_used@@Base+0xff4c>
  471378:	ldr	x1, [sp, #144]
  47137c:	add	x0, x0, x1
  471380:	cmp	x0, x19
  471384:	b.hi	471820 <_obstack_memory_used@@Base+0x103d8>  // b.pmore
  471388:	add	x25, x24, #0x1
  47138c:	cmp	x25, x28
  471390:	b.cs	47149c <_obstack_memory_used@@Base+0x10054>  // b.hs, b.nlast
  471394:	add	x24, x25, x28
  471398:	lsr	x24, x24, #1
  47139c:	add	x0, x24, #0x2
  4713a0:	ldr	x20, [x27, x0, lsl #3]
  4713a4:	add	x1, x20, #0x4
  4713a8:	ldrsw	x0, [x20, #4]
  4713ac:	sub	x0, x1, x0
  4713b0:	bl	470700 <_obstack_memory_used@@Base+0xf2b8>
  4713b4:	ldr	x1, [sp, #96]
  4713b8:	and	w21, w0, #0xff
  4713bc:	mov	x2, x26
  4713c0:	mov	w0, w21
  4713c4:	bl	470818 <_obstack_memory_used@@Base+0xf3d0>
  4713c8:	mov	x1, x0
  4713cc:	mov	x3, x23
  4713d0:	add	x2, x20, #0x8
  4713d4:	mov	w0, w21
  4713d8:	bl	4705a0 <_obstack_memory_used@@Base+0xf158>
  4713dc:	mov	x3, x22
  4713e0:	mov	x2, x0
  4713e4:	mov	x1, #0x0                   	// #0
  4713e8:	and	w0, w21, #0xf
  4713ec:	bl	4705a0 <_obstack_memory_used@@Base+0xf158>
  4713f0:	ldr	x0, [sp, #136]
  4713f4:	cmp	x0, x19
  4713f8:	b.ls	471378 <_obstack_memory_used@@Base+0xff30>  // b.plast
  4713fc:	mov	x28, x24
  471400:	b	47138c <_obstack_memory_used@@Base+0xff44>
  471404:	mov	x1, x20
  471408:	bl	470b40 <_obstack_memory_used@@Base+0xf6f8>
  47140c:	mov	x25, x0
  471410:	cmn	x0, #0x1
  471414:	b.eq	471320 <_obstack_memory_used@@Base+0xfed8>  // b.none
  471418:	ldr	w0, [x24, #32]
  47141c:	tst	x25, #0xffffffffffe00000
  471420:	b.eq	471864 <_obstack_memory_used@@Base+0x1041c>  // b.none
  471424:	and	w0, w0, #0x7ff
  471428:	str	w0, [x24, #32]
  47142c:	cbnz	x25, 471554 <_obstack_memory_used@@Base+0x1010c>
  471430:	ldr	x0, [x24]
  471434:	cmp	x0, x19
  471438:	b.hi	471490 <_obstack_memory_used@@Base+0x10048>  // b.pmore
  47143c:	ldrb	w1, [x24, #32]
  471440:	ldr	x21, [x24, #24]
  471444:	tbnz	w1, #0, 4718a8 <_obstack_memory_used@@Base+0x10460>
  471448:	tbz	w1, #1, 471800 <_obstack_memory_used@@Base+0x103b8>
  47144c:	ldr	x1, [x21]
  471450:	cbnz	x1, 471460 <_obstack_memory_used@@Base+0x10018>
  471454:	b	471490 <_obstack_memory_used@@Base+0x10048>
  471458:	ldr	x1, [x21, #8]!
  47145c:	cbz	x1, 471490 <_obstack_memory_used@@Base+0x10048>
  471460:	mov	x2, x19
  471464:	mov	x0, x24
  471468:	bl	470900 <_obstack_memory_used@@Base+0xf4b8>
  47146c:	mov	x20, x0
  471470:	cbz	x0, 471458 <_obstack_memory_used@@Base+0x10010>
  471474:	mov	x0, x20
  471478:	ldp	x19, x20, [sp, #16]
  47147c:	ldp	x21, x22, [sp, #32]
  471480:	ldp	x23, x24, [sp, #48]
  471484:	ldp	x25, x26, [sp, #64]
  471488:	ldp	x29, x30, [sp], #160
  47148c:	ret
  471490:	ldp	x21, x22, [sp, #32]
  471494:	ldp	x25, x26, [sp, #64]
  471498:	b	4712c0 <_obstack_memory_used@@Base+0xfe78>
  47149c:	ldp	x21, x22, [sp, #32]
  4714a0:	ldp	x25, x26, [sp, #64]
  4714a4:	ldp	x27, x28, [sp, #80]
  4714a8:	b	4712c0 <_obstack_memory_used@@Base+0xfe78>
  4714ac:	stp	x25, x26, [sp, #64]
  4714b0:	ubfx	x25, x0, #3, #8
  4714b4:	add	x2, x24, #0x10
  4714b8:	add	x1, x24, #0x8
  4714bc:	mov	x0, x25
  4714c0:	bl	470818 <_obstack_memory_used@@Base+0xf3d0>
  4714c4:	mov	x24, x0
  4714c8:	ldr	x28, [x27, #8]
  4714cc:	cbz	x28, 4714a0 <_obstack_memory_used@@Base+0x10058>
  4714d0:	and	w0, w25, #0xf
  4714d4:	add	x23, sp, #0x88
  4714d8:	mov	x26, #0x0                   	// #0
  4714dc:	stp	x21, x22, [sp, #32]
  4714e0:	add	x22, sp, #0x90
  4714e4:	str	w0, [sp, #96]
  4714e8:	b	471508 <_obstack_memory_used@@Base+0x100c0>
  4714ec:	ldr	x1, [sp, #144]
  4714f0:	add	x0, x0, x1
  4714f4:	cmp	x0, x19
  4714f8:	b.hi	471820 <_obstack_memory_used@@Base+0x103d8>  // b.pmore
  4714fc:	add	x26, x21, #0x1
  471500:	cmp	x26, x28
  471504:	b.cs	47149c <_obstack_memory_used@@Base+0x10054>  // b.hs, b.nlast
  471508:	add	x21, x28, x26
  47150c:	mov	x3, x23
  471510:	mov	x1, x24
  471514:	mov	w0, w25
  471518:	lsr	x21, x21, #1
  47151c:	add	x2, x21, #0x2
  471520:	ldr	x20, [x27, x2, lsl #3]
  471524:	add	x2, x20, #0x8
  471528:	bl	4705a0 <_obstack_memory_used@@Base+0xf158>
  47152c:	mov	x2, x0
  471530:	ldrb	w0, [sp, #96]
  471534:	mov	x3, x22
  471538:	mov	x1, #0x0                   	// #0
  47153c:	bl	4705a0 <_obstack_memory_used@@Base+0xf158>
  471540:	ldr	x0, [sp, #136]
  471544:	cmp	x0, x19
  471548:	b.ls	4714ec <_obstack_memory_used@@Base+0x100a4>  // b.plast
  47154c:	mov	x28, x21
  471550:	b	471500 <_obstack_memory_used@@Base+0x100b8>
  471554:	add	x20, x25, #0x2
  471558:	lsl	x20, x20, #3
  47155c:	mov	x0, x20
  471560:	bl	402670 <malloc@plt>
  471564:	str	x0, [sp, #144]
  471568:	mov	x1, x0
  47156c:	cbz	x0, 471430 <_obstack_memory_used@@Base+0xffe8>
  471570:	str	xzr, [x1, #8]
  471574:	mov	x0, x20
  471578:	bl	402670 <malloc@plt>
  47157c:	str	x0, [sp, #152]
  471580:	cbz	x0, 471588 <_obstack_memory_used@@Base+0x10140>
  471584:	str	xzr, [x0, #8]
  471588:	ldrb	w0, [x24, #32]
  47158c:	ldr	x20, [x24, #24]
  471590:	tbz	w0, #1, 47183c <_obstack_memory_used@@Base+0x103f4>
  471594:	ldr	x2, [x20]
  471598:	cbz	x2, 4718a0 <_obstack_memory_used@@Base+0x10458>
  47159c:	add	x22, sp, #0x90
  4715a0:	mov	x1, x22
  4715a4:	mov	x0, x24
  4715a8:	bl	470cc0 <_obstack_memory_used@@Base+0xf878>
  4715ac:	ldr	x2, [x20, #8]!
  4715b0:	cbnz	x2, 4715a0 <_obstack_memory_used@@Base+0x10158>
  4715b4:	ldr	x0, [sp, #144]
  4715b8:	str	x0, [sp, #96]
  4715bc:	str	x0, [sp, #120]
  4715c0:	cbz	x0, 4715d0 <_obstack_memory_used@@Base+0x10188>
  4715c4:	ldr	x0, [x0, #8]
  4715c8:	cmp	x0, x25
  4715cc:	b.ne	4718a0 <_obstack_memory_used@@Base+0x10458>  // b.any
  4715d0:	ldrb	w0, [x24, #32]
  4715d4:	tbnz	w0, #2, 471830 <_obstack_memory_used@@Base+0x103e8>
  4715d8:	ldrh	w1, [x24, #32]
  4715dc:	adrp	x0, 470000 <_obstack_memory_used@@Base+0xebb8>
  4715e0:	adrp	x20, 470000 <_obstack_memory_used@@Base+0xebb8>
  4715e4:	add	x0, x0, #0x878
  4715e8:	tst	w1, #0x7f8
  4715ec:	add	x20, x20, #0x350
  4715f0:	csel	x20, x20, x0, eq  // eq = none
  4715f4:	ldr	x22, [sp, #152]
  4715f8:	cbz	x22, 471850 <_obstack_memory_used@@Base+0x10408>
  4715fc:	ldr	x1, [sp, #96]
  471600:	stp	x27, x28, [sp, #80]
  471604:	ldr	x0, [x1, #8]
  471608:	str	x0, [sp, #104]
  47160c:	cbz	x0, 471890 <_obstack_memory_used@@Base+0x10448>
  471610:	adrp	x3, 4a5000 <__environ@@GLIBC_2.17+0xa68>
  471614:	add	x3, x3, #0xbb0
  471618:	add	x0, x0, #0x1
  47161c:	add	x28, x1, #0x10
  471620:	add	x27, x3, #0x190
  471624:	mov	x21, x28
  471628:	mov	x23, x27
  47162c:	lsl	x0, x0, #3
  471630:	mov	x26, #0x10                  	// #16
  471634:	str	x0, [sp, #112]
  471638:	ldr	x0, [sp, #112]
  47163c:	str	x27, [x22, x26]
  471640:	cmp	x0, x26
  471644:	b.eq	4716a0 <_obstack_memory_used@@Base+0x10258>  // b.none
  471648:	cmp	x21, x23
  47164c:	mov	x27, x21
  471650:	b.ne	471670 <_obstack_memory_used@@Base+0x10228>  // b.any
  471654:	b	471690 <_obstack_memory_used@@Base+0x10248>
  471658:	sub	x3, x27, x28
  47165c:	add	x0, x22, x3
  471660:	ldr	x27, [x0, #16]
  471664:	str	xzr, [x0, #16]
  471668:	cmp	x27, x23
  47166c:	b.eq	471690 <_obstack_memory_used@@Base+0x10248>  // b.none
  471670:	ldr	x2, [x27]
  471674:	mov	x0, x24
  471678:	ldr	x1, [x21, #8]
  47167c:	blr	x20
  471680:	tbnz	w0, #31, 471658 <_obstack_memory_used@@Base+0x10210>
  471684:	add	x21, x21, #0x8
  471688:	add	x26, x26, #0x8
  47168c:	b	471638 <_obstack_memory_used@@Base+0x101f0>
  471690:	mov	x27, x23
  471694:	add	x21, x21, #0x8
  471698:	add	x26, x26, #0x8
  47169c:	b	471638 <_obstack_memory_used@@Base+0x101f0>
  4716a0:	add	x6, x22, #0x10
  4716a4:	mov	x5, #0x0                   	// #0
  4716a8:	mov	x3, #0x0                   	// #0
  4716ac:	mov	x0, #0x0                   	// #0
  4716b0:	b	4716d4 <_obstack_memory_used@@Base+0x1028c>
  4716b4:	ldr	x4, [sp, #96]
  4716b8:	add	x1, x3, #0x2
  4716bc:	add	x3, x3, #0x1
  4716c0:	str	x2, [x4, x1, lsl #3]
  4716c4:	ldr	x1, [sp, #104]
  4716c8:	add	x0, x0, #0x1
  4716cc:	cmp	x1, x0
  4716d0:	b.eq	4716f0 <_obstack_memory_used@@Base+0x102a8>  // b.none
  4716d4:	ldr	x1, [x6, x0, lsl #3]
  4716d8:	ldr	x2, [x28, x0, lsl #3]
  4716dc:	cbnz	x1, 4716b4 <_obstack_memory_used@@Base+0x1026c>
  4716e0:	add	x1, x5, #0x2
  4716e4:	add	x5, x5, #0x1
  4716e8:	str	x2, [x22, x1, lsl #3]
  4716ec:	b	4716c4 <_obstack_memory_used@@Base+0x1027c>
  4716f0:	ldp	x0, x2, [sp, #144]
  4716f4:	str	x0, [sp, #96]
  4716f8:	ldr	x0, [sp, #120]
  4716fc:	str	x3, [x0, #8]
  471700:	ldr	x0, [sp, #96]
  471704:	str	x5, [x22, #8]
  471708:	ldr	x1, [x2, #8]
  47170c:	ldr	x0, [x0, #8]
  471710:	add	x0, x0, x1
  471714:	cmp	x0, x25
  471718:	b.ne	4718a4 <_obstack_memory_used@@Base+0x1045c>  // b.any
  47171c:	mov	x1, x20
  471720:	mov	x0, x24
  471724:	bl	470480 <_obstack_memory_used@@Base+0xf038>
  471728:	ldr	x25, [sp, #152]
  47172c:	ldr	x22, [x25, #8]
  471730:	cbz	x22, 4717d4 <_obstack_memory_used@@Base+0x1038c>
  471734:	ldr	x0, [sp, #144]
  471738:	str	x0, [sp, #96]
  47173c:	add	x27, x0, #0x10
  471740:	ldr	x28, [x0, #8]
  471744:	nop
  471748:	add	x0, x25, x22, lsl #3
  47174c:	sub	x23, x22, #0x1
  471750:	ldr	x26, [x0, #8]
  471754:	cbz	x28, 471870 <_obstack_memory_used@@Base+0x10428>
  471758:	add	x22, x22, x28
  47175c:	mov	x21, x28
  471760:	sub	x22, x22, #0x1
  471764:	b	471778 <_obstack_memory_used@@Base+0x10330>
  471768:	ldr	x0, [x27, x21, lsl #3]
  47176c:	str	x0, [x27, x22, lsl #3]
  471770:	sub	x22, x22, #0x1
  471774:	cbz	x21, 4717b0 <_obstack_memory_used@@Base+0x10368>
  471778:	mov	x28, x21
  47177c:	sub	x21, x21, #0x1
  471780:	mov	x2, x26
  471784:	mov	x0, x24
  471788:	ldr	x1, [x27, x21, lsl #3]
  47178c:	blr	x20
  471790:	cmp	w0, #0x0
  471794:	b.gt	471768 <_obstack_memory_used@@Base+0x10320>
  471798:	ldr	x0, [sp, #96]
  47179c:	add	x22, x22, #0x2
  4717a0:	str	x26, [x0, x22, lsl #3]
  4717a4:	cbz	x23, 4717bc <_obstack_memory_used@@Base+0x10374>
  4717a8:	mov	x22, x23
  4717ac:	b	471748 <_obstack_memory_used@@Base+0x10300>
  4717b0:	mov	x22, x23
  4717b4:	mov	x28, #0x0                   	// #0
  4717b8:	b	471798 <_obstack_memory_used@@Base+0x10350>
  4717bc:	ldr	x2, [sp, #96]
  4717c0:	ldr	x1, [x25, #8]
  4717c4:	ldr	x0, [x2, #8]
  4717c8:	ldr	x25, [sp, #152]
  4717cc:	add	x0, x0, x1
  4717d0:	str	x0, [x2, #8]
  4717d4:	mov	x0, x25
  4717d8:	bl	402910 <free@plt>
  4717dc:	ldp	x27, x28, [sp, #80]
  4717e0:	ldr	x1, [sp, #144]
  4717e4:	ldrb	w0, [x24, #32]
  4717e8:	ldr	x2, [x24, #24]
  4717ec:	str	x2, [x1]
  4717f0:	orr	w0, w0, #0x1
  4717f4:	str	x1, [x24, #24]
  4717f8:	strb	w0, [x24, #32]
  4717fc:	b	471430 <_obstack_memory_used@@Base+0xffe8>
  471800:	mov	x1, x21
  471804:	mov	x2, x19
  471808:	mov	x0, x24
  47180c:	bl	470900 <_obstack_memory_used@@Base+0xf4b8>
  471810:	mov	x20, x0
  471814:	ldp	x21, x22, [sp, #32]
  471818:	ldp	x25, x26, [sp, #64]
  47181c:	b	4712c4 <_obstack_memory_used@@Base+0xfe7c>
  471820:	ldp	x21, x22, [sp, #32]
  471824:	ldp	x25, x26, [sp, #64]
  471828:	ldp	x27, x28, [sp, #80]
  47182c:	b	4712c4 <_obstack_memory_used@@Base+0xfe7c>
  471830:	adrp	x20, 470000 <_obstack_memory_used@@Base+0xebb8>
  471834:	add	x20, x20, #0xa80
  471838:	b	4715f4 <_obstack_memory_used@@Base+0x101ac>
  47183c:	mov	x2, x20
  471840:	add	x1, sp, #0x90
  471844:	mov	x0, x24
  471848:	bl	470cc0 <_obstack_memory_used@@Base+0xf878>
  47184c:	b	4715b4 <_obstack_memory_used@@Base+0x1016c>
  471850:	ldr	x2, [sp, #96]
  471854:	mov	x1, x20
  471858:	mov	x0, x24
  47185c:	bl	470480 <_obstack_memory_used@@Base+0xf038>
  471860:	b	4717e0 <_obstack_memory_used@@Base+0x10398>
  471864:	bfi	w0, w25, #11, #21
  471868:	str	w0, [x24, #32]
  47186c:	b	47142c <_obstack_memory_used@@Base+0xffe4>
  471870:	ldr	x2, [sp, #96]
  471874:	add	x1, x22, #0x1
  471878:	str	x26, [x2, x1, lsl #3]
  47187c:	cbz	x23, 4717bc <_obstack_memory_used@@Base+0x10374>
  471880:	sub	x23, x22, #0x2
  471884:	mov	x22, x23
  471888:	ldr	x26, [x0]
  47188c:	b	471798 <_obstack_memory_used@@Base+0x10350>
  471890:	mov	x2, x22
  471894:	mov	x5, #0x0                   	// #0
  471898:	mov	x3, #0x0                   	// #0
  47189c:	b	4716f8 <_obstack_memory_used@@Base+0x102b0>
  4718a0:	stp	x27, x28, [sp, #80]
  4718a4:	bl	4027f0 <abort@plt>
  4718a8:	ldp	x21, x22, [sp, #32]
  4718ac:	ldp	x25, x26, [sp, #64]
  4718b0:	b	471270 <_obstack_memory_used@@Base+0xfe28>
  4718b4:	nop
  4718b8:	stp	x29, x30, [sp, #-48]!
  4718bc:	mov	x5, #0xffffffffffffffff    	// #-1
  4718c0:	mov	x4, #0x7f8                 	// #2040
  4718c4:	mov	x29, sp
  4718c8:	stp	x19, x20, [sp, #16]
  4718cc:	adrp	x20, 4a3000 <_obstack_memory_used@@Base+0x41bb8>
  4718d0:	mov	x19, x1
  4718d4:	ldr	x1, [x20, #3880]
  4718d8:	str	x21, [sp, #32]
  4718dc:	stp	x5, x2, [x19]
  4718e0:	adrp	x21, 4a5000 <__environ@@GLIBC_2.17+0xa68>
  4718e4:	stp	x3, x0, [x19, #16]
  4718e8:	str	x4, [x19, #32]
  4718ec:	cbz	x1, 4718fc <_obstack_memory_used@@Base+0x104b4>
  4718f0:	add	x0, x21, #0xbb0
  4718f4:	add	x0, x0, #0x198
  4718f8:	bl	402ad0 <pthread_mutex_lock@plt>
  4718fc:	add	x1, x21, #0xbb0
  471900:	ldr	w0, [x1, #464]
  471904:	ldr	x2, [x1, #456]
  471908:	str	x2, [x19, #40]
  47190c:	str	x19, [x1, #456]
  471910:	cbz	w0, 471944 <_obstack_memory_used@@Base+0x104fc>
  471914:	ldr	x20, [x20, #3880]
  471918:	cbz	x20, 471934 <_obstack_memory_used@@Base+0x104ec>
  47191c:	add	x0, x21, #0xbb0
  471920:	ldp	x19, x20, [sp, #16]
  471924:	add	x0, x0, #0x198
  471928:	ldr	x21, [sp, #32]
  47192c:	ldp	x29, x30, [sp], #48
  471930:	b	402b00 <pthread_mutex_unlock@plt>
  471934:	ldp	x19, x20, [sp, #16]
  471938:	ldr	x21, [sp, #32]
  47193c:	ldp	x29, x30, [sp], #48
  471940:	ret
  471944:	add	x1, x1, #0x1d0
  471948:	mov	w0, #0x1                   	// #1
  47194c:	str	w0, [x1]
  471950:	b	471914 <_obstack_memory_used@@Base+0x104cc>
  471954:	nop
  471958:	cbz	x0, 471968 <_obstack_memory_used@@Base+0x10520>
  47195c:	ldr	w4, [x0]
  471960:	cbz	w4, 471968 <_obstack_memory_used@@Base+0x10520>
  471964:	b	4718b8 <_obstack_memory_used@@Base+0x10470>
  471968:	ret
  47196c:	nop
  471970:	cbz	x0, 471988 <_obstack_memory_used@@Base+0x10540>
  471974:	ldr	w2, [x0]
  471978:	cbz	w2, 471988 <_obstack_memory_used@@Base+0x10540>
  47197c:	mov	x3, #0x0                   	// #0
  471980:	mov	x2, #0x0                   	// #0
  471984:	b	4718b8 <_obstack_memory_used@@Base+0x10470>
  471988:	ret
  47198c:	nop
  471990:	stp	x29, x30, [sp, #-32]!
  471994:	mov	x29, sp
  471998:	str	x19, [sp, #16]
  47199c:	mov	x19, x0
  4719a0:	ldr	w0, [x0]
  4719a4:	cbnz	w0, 4719b4 <_obstack_memory_used@@Base+0x1056c>
  4719a8:	ldr	x19, [sp, #16]
  4719ac:	ldp	x29, x30, [sp], #32
  4719b0:	ret
  4719b4:	mov	x0, #0x30                  	// #48
  4719b8:	bl	402670 <malloc@plt>
  4719bc:	mov	x1, x0
  4719c0:	mov	x0, x19
  4719c4:	ldr	x19, [sp, #16]
  4719c8:	mov	x3, #0x0                   	// #0
  4719cc:	ldp	x29, x30, [sp], #32
  4719d0:	mov	x2, #0x0                   	// #0
  4719d4:	b	4718b8 <_obstack_memory_used@@Base+0x10470>
  4719d8:	stp	x29, x30, [sp, #-48]!
  4719dc:	mov	x5, #0xffffffffffffffff    	// #-1
  4719e0:	mov	x4, #0x7fa                 	// #2042
  4719e4:	mov	x29, sp
  4719e8:	stp	x19, x20, [sp, #16]
  4719ec:	adrp	x20, 4a3000 <_obstack_memory_used@@Base+0x41bb8>
  4719f0:	mov	x19, x1
  4719f4:	ldr	x1, [x20, #3880]
  4719f8:	str	x21, [sp, #32]
  4719fc:	stp	x5, x2, [x19]
  471a00:	adrp	x21, 4a5000 <__environ@@GLIBC_2.17+0xa68>
  471a04:	stp	x3, x0, [x19, #16]
  471a08:	str	x4, [x19, #32]
  471a0c:	cbz	x1, 471a1c <_obstack_memory_used@@Base+0x105d4>
  471a10:	add	x0, x21, #0xbb0
  471a14:	add	x0, x0, #0x198
  471a18:	bl	402ad0 <pthread_mutex_lock@plt>
  471a1c:	add	x1, x21, #0xbb0
  471a20:	ldr	w0, [x1, #464]
  471a24:	ldr	x2, [x1, #456]
  471a28:	str	x2, [x19, #40]
  471a2c:	str	x19, [x1, #456]
  471a30:	cbz	w0, 471a64 <_obstack_memory_used@@Base+0x1061c>
  471a34:	ldr	x20, [x20, #3880]
  471a38:	cbz	x20, 471a54 <_obstack_memory_used@@Base+0x1060c>
  471a3c:	add	x0, x21, #0xbb0
  471a40:	ldp	x19, x20, [sp, #16]
  471a44:	add	x0, x0, #0x198
  471a48:	ldr	x21, [sp, #32]
  471a4c:	ldp	x29, x30, [sp], #48
  471a50:	b	402b00 <pthread_mutex_unlock@plt>
  471a54:	ldp	x19, x20, [sp, #16]
  471a58:	ldr	x21, [sp, #32]
  471a5c:	ldp	x29, x30, [sp], #48
  471a60:	ret
  471a64:	add	x1, x1, #0x1d0
  471a68:	mov	w0, #0x1                   	// #1
  471a6c:	str	w0, [x1]
  471a70:	b	471a34 <_obstack_memory_used@@Base+0x105ec>
  471a74:	nop
  471a78:	mov	x3, #0x0                   	// #0
  471a7c:	mov	x2, #0x0                   	// #0
  471a80:	b	4719d8 <_obstack_memory_used@@Base+0x10590>
  471a84:	nop
  471a88:	stp	x29, x30, [sp, #-32]!
  471a8c:	mov	x29, sp
  471a90:	str	x19, [sp, #16]
  471a94:	mov	x19, x0
  471a98:	mov	x0, #0x30                  	// #48
  471a9c:	bl	402670 <malloc@plt>
  471aa0:	mov	x1, x0
  471aa4:	mov	x0, x19
  471aa8:	ldr	x19, [sp, #16]
  471aac:	mov	x3, #0x0                   	// #0
  471ab0:	ldp	x29, x30, [sp], #32
  471ab4:	mov	x2, #0x0                   	// #0
  471ab8:	b	4719d8 <_obstack_memory_used@@Base+0x10590>
  471abc:	nop
  471ac0:	stp	x29, x30, [sp, #-48]!
  471ac4:	mov	x29, sp
  471ac8:	stp	x19, x20, [sp, #16]
  471acc:	cbz	x0, 471b98 <_obstack_memory_used@@Base+0x10750>
  471ad0:	mov	x20, x0
  471ad4:	ldr	w0, [x0]
  471ad8:	cbz	w0, 471b98 <_obstack_memory_used@@Base+0x10750>
  471adc:	stp	x21, x22, [sp, #32]
  471ae0:	adrp	x21, 4a3000 <_obstack_memory_used@@Base+0x41bb8>
  471ae4:	adrp	x22, 4a5000 <__environ@@GLIBC_2.17+0xa68>
  471ae8:	ldr	x0, [x21, #3880]
  471aec:	cbz	x0, 471afc <_obstack_memory_used@@Base+0x106b4>
  471af0:	add	x0, x22, #0xbb0
  471af4:	add	x0, x0, #0x198
  471af8:	bl	402ad0 <pthread_mutex_lock@plt>
  471afc:	add	x2, x22, #0xbb0
  471b00:	ldr	x1, [x2, #456]
  471b04:	cbz	x1, 471b4c <_obstack_memory_used@@Base+0x10704>
  471b08:	add	x2, x2, #0x1c8
  471b0c:	b	471b18 <_obstack_memory_used@@Base+0x106d0>
  471b10:	add	x2, x19, #0x28
  471b14:	cbz	x1, 471b4c <_obstack_memory_used@@Base+0x10704>
  471b18:	ldr	x0, [x1, #24]
  471b1c:	mov	x19, x1
  471b20:	ldr	x1, [x1, #40]
  471b24:	cmp	x20, x0
  471b28:	b.ne	471b10 <_obstack_memory_used@@Base+0x106c8>  // b.any
  471b2c:	str	x1, [x2]
  471b30:	ldr	x21, [x21, #3880]
  471b34:	cbnz	x21, 471bac <_obstack_memory_used@@Base+0x10764>
  471b38:	mov	x0, x19
  471b3c:	ldp	x19, x20, [sp, #16]
  471b40:	ldp	x21, x22, [sp, #32]
  471b44:	ldp	x29, x30, [sp], #48
  471b48:	ret
  471b4c:	add	x2, x22, #0xbb0
  471b50:	ldr	x19, [x2, #472]
  471b54:	cbz	x19, 471bcc <_obstack_memory_used@@Base+0x10784>
  471b58:	add	x2, x2, #0x1d8
  471b5c:	b	471b78 <_obstack_memory_used@@Base+0x10730>
  471b60:	ldr	x1, [x0]
  471b64:	cmp	x20, x1
  471b68:	b.eq	471be4 <_obstack_memory_used@@Base+0x1079c>  // b.none
  471b6c:	add	x2, x19, #0x28
  471b70:	ldr	x19, [x19, #40]
  471b74:	cbz	x19, 471bcc <_obstack_memory_used@@Base+0x10784>
  471b78:	ldrb	w1, [x19, #32]
  471b7c:	ldr	x0, [x19, #24]
  471b80:	tbnz	w1, #0, 471b60 <_obstack_memory_used@@Base+0x10718>
  471b84:	cmp	x20, x0
  471b88:	b.ne	471b6c <_obstack_memory_used@@Base+0x10724>  // b.any
  471b8c:	ldr	x0, [x19, #40]
  471b90:	str	x0, [x2]
  471b94:	b	471b30 <_obstack_memory_used@@Base+0x106e8>
  471b98:	mov	x19, #0x0                   	// #0
  471b9c:	mov	x0, x19
  471ba0:	ldp	x19, x20, [sp, #16]
  471ba4:	ldp	x29, x30, [sp], #48
  471ba8:	ret
  471bac:	add	x0, x22, #0xbb0
  471bb0:	add	x0, x0, #0x198
  471bb4:	bl	402b00 <pthread_mutex_unlock@plt>
  471bb8:	mov	x0, x19
  471bbc:	ldp	x19, x20, [sp, #16]
  471bc0:	ldp	x21, x22, [sp, #32]
  471bc4:	ldp	x29, x30, [sp], #48
  471bc8:	ret
  471bcc:	ldr	x21, [x21, #3880]
  471bd0:	cbz	x21, 471be0 <_obstack_memory_used@@Base+0x10798>
  471bd4:	add	x0, x22, #0xbb0
  471bd8:	add	x0, x0, #0x198
  471bdc:	bl	402b00 <pthread_mutex_unlock@plt>
  471be0:	bl	4027f0 <abort@plt>
  471be4:	ldr	x1, [x19, #40]
  471be8:	str	x1, [x2]
  471bec:	bl	402910 <free@plt>
  471bf0:	b	471b30 <_obstack_memory_used@@Base+0x106e8>
  471bf4:	nop
  471bf8:	b	471ac0 <_obstack_memory_used@@Base+0x10678>
  471bfc:	nop
  471c00:	ldr	w1, [x0]
  471c04:	cbnz	w1, 471c0c <_obstack_memory_used@@Base+0x107c4>
  471c08:	ret
  471c0c:	stp	x29, x30, [sp, #-16]!
  471c10:	mov	x29, sp
  471c14:	bl	471ac0 <_obstack_memory_used@@Base+0x10678>
  471c18:	ldp	x29, x30, [sp], #16
  471c1c:	b	402910 <free@plt>
  471c20:	stp	x29, x30, [sp, #-128]!
  471c24:	mov	x29, sp
  471c28:	stp	x23, x24, [sp, #48]
  471c2c:	adrp	x23, 4a5000 <__environ@@GLIBC_2.17+0xa68>
  471c30:	add	x2, x23, #0xbb0
  471c34:	stp	x19, x20, [sp, #16]
  471c38:	mov	x20, x0
  471c3c:	add	x0, x2, #0x1d0
  471c40:	stp	x21, x22, [sp, #32]
  471c44:	mov	x22, x1
  471c48:	ldr	w0, [x0]
  471c4c:	cbnz	w0, 471cb0 <_obstack_memory_used@@Base+0x10868>
  471c50:	mov	w2, #0x1                   	// #1
  471c54:	adrp	x0, 470000 <_obstack_memory_used@@Base+0xebb8>
  471c58:	add	x1, sp, #0x50
  471c5c:	add	x0, x0, #0xe00
  471c60:	stp	x20, xzr, [sp, #80]
  471c64:	stp	xzr, xzr, [sp, #96]
  471c68:	str	xzr, [sp, #112]
  471c6c:	str	w2, [sp, #120]
  471c70:	bl	4028e0 <dl_iterate_phdr@plt>
  471c74:	tbnz	w0, #31, 471dc4 <_obstack_memory_used@@Base+0x1097c>
  471c78:	ldr	x21, [sp, #112]
  471c7c:	cbz	x21, 471c98 <_obstack_memory_used@@Base+0x10850>
  471c80:	ldr	x0, [sp, #88]
  471c84:	str	x0, [x22]
  471c88:	ldr	x0, [sp, #96]
  471c8c:	str	x0, [x22, #8]
  471c90:	ldr	x0, [sp, #104]
  471c94:	str	x0, [x22, #16]
  471c98:	mov	x0, x21
  471c9c:	ldp	x19, x20, [sp, #16]
  471ca0:	ldp	x21, x22, [sp, #32]
  471ca4:	ldp	x23, x24, [sp, #48]
  471ca8:	ldp	x29, x30, [sp], #128
  471cac:	ret
  471cb0:	stp	x25, x26, [sp, #64]
  471cb4:	adrp	x25, 4a3000 <_obstack_memory_used@@Base+0x41bb8>
  471cb8:	ldr	x0, [x25, #3880]
  471cbc:	cbz	x0, 471cc8 <_obstack_memory_used@@Base+0x10880>
  471cc0:	add	x0, x2, #0x198
  471cc4:	bl	402ad0 <pthread_mutex_lock@plt>
  471cc8:	add	x0, x23, #0xbb0
  471ccc:	ldr	x19, [x0, #472]
  471cd0:	cbnz	x19, 471ce0 <_obstack_memory_used@@Base+0x10898>
  471cd4:	b	471d5c <_obstack_memory_used@@Base+0x10914>
  471cd8:	ldr	x19, [x19, #40]
  471cdc:	cbz	x19, 471d5c <_obstack_memory_used@@Base+0x10914>
  471ce0:	ldr	x0, [x19]
  471ce4:	cmp	x20, x0
  471ce8:	b.cc	471cd8 <_obstack_memory_used@@Base+0x10890>  // b.lo, b.ul, b.last
  471cec:	mov	x1, x20
  471cf0:	mov	x0, x19
  471cf4:	bl	471250 <_obstack_memory_used@@Base+0xfe08>
  471cf8:	mov	x21, x0
  471cfc:	cbz	x0, 471d5c <_obstack_memory_used@@Base+0x10914>
  471d00:	ldr	x25, [x25, #3880]
  471d04:	cbnz	x25, 471dcc <_obstack_memory_used@@Base+0x10984>
  471d08:	ldrb	w0, [x19, #32]
  471d0c:	ldr	x1, [x19, #8]
  471d10:	str	x1, [x22]
  471d14:	ldr	x1, [x19, #16]
  471d18:	str	x1, [x22, #8]
  471d1c:	tbnz	w0, #2, 471ddc <_obstack_memory_used@@Base+0x10994>
  471d20:	ldrh	w20, [x19, #32]
  471d24:	ubfx	x20, x20, #3, #8
  471d28:	add	x2, x19, #0x10
  471d2c:	add	x1, x19, #0x8
  471d30:	mov	w0, w20
  471d34:	bl	470818 <_obstack_memory_used@@Base+0xf3d0>
  471d38:	add	x3, sp, #0x50
  471d3c:	mov	x1, x0
  471d40:	add	x2, x21, #0x8
  471d44:	mov	w0, w20
  471d48:	bl	4705a0 <_obstack_memory_used@@Base+0xf158>
  471d4c:	ldr	x0, [sp, #80]
  471d50:	ldp	x25, x26, [sp, #64]
  471d54:	str	x0, [x22, #16]
  471d58:	b	471c98 <_obstack_memory_used@@Base+0x10850>
  471d5c:	add	x24, x23, #0xbb0
  471d60:	add	x26, x24, #0x1d8
  471d64:	nop
  471d68:	ldr	x19, [x24, #456]
  471d6c:	cbz	x19, 471df4 <_obstack_memory_used@@Base+0x109ac>
  471d70:	ldr	x2, [x19, #40]
  471d74:	mov	x1, x20
  471d78:	mov	x0, x19
  471d7c:	str	x2, [x24, #456]
  471d80:	bl	471250 <_obstack_memory_used@@Base+0xfe08>
  471d84:	mov	x21, x0
  471d88:	ldr	x2, [x24, #472]
  471d8c:	cbz	x2, 471e0c <_obstack_memory_used@@Base+0x109c4>
  471d90:	mov	x0, x26
  471d94:	ldr	x3, [x19]
  471d98:	b	471da8 <_obstack_memory_used@@Base+0x10960>
  471d9c:	add	x0, x2, #0x28
  471da0:	ldr	x2, [x2, #40]
  471da4:	cbz	x2, 471db4 <_obstack_memory_used@@Base+0x1096c>
  471da8:	ldr	x1, [x2]
  471dac:	cmp	x1, x3
  471db0:	b.cs	471d9c <_obstack_memory_used@@Base+0x10954>  // b.hs, b.nlast
  471db4:	str	x2, [x19, #40]
  471db8:	str	x19, [x0]
  471dbc:	cbz	x21, 471d68 <_obstack_memory_used@@Base+0x10920>
  471dc0:	b	471d00 <_obstack_memory_used@@Base+0x108b8>
  471dc4:	mov	x21, #0x0                   	// #0
  471dc8:	b	471c98 <_obstack_memory_used@@Base+0x10850>
  471dcc:	add	x0, x23, #0xbb0
  471dd0:	add	x0, x0, #0x198
  471dd4:	bl	402b00 <pthread_mutex_unlock@plt>
  471dd8:	b	471d08 <_obstack_memory_used@@Base+0x108c0>
  471ddc:	add	x1, x21, #0x4
  471de0:	ldrsw	x0, [x21, #4]
  471de4:	sub	x0, x1, x0
  471de8:	bl	470700 <_obstack_memory_used@@Base+0xf2b8>
  471dec:	and	w20, w0, #0xff
  471df0:	b	471d28 <_obstack_memory_used@@Base+0x108e0>
  471df4:	ldr	x25, [x25, #3880]
  471df8:	cbz	x25, 471e14 <_obstack_memory_used@@Base+0x109cc>
  471dfc:	add	x0, x24, #0x198
  471e00:	bl	402b00 <pthread_mutex_unlock@plt>
  471e04:	ldp	x25, x26, [sp, #64]
  471e08:	b	471c50 <_obstack_memory_used@@Base+0x10808>
  471e0c:	mov	x0, x26
  471e10:	b	471db4 <_obstack_memory_used@@Base+0x1096c>
  471e14:	ldp	x25, x26, [sp, #64]
  471e18:	b	471c50 <_obstack_memory_used@@Base+0x10808>
  471e1c:	nop
  471e20:	stp	x29, x30, [sp, #-64]!
  471e24:	mov	x29, sp
  471e28:	stp	x19, x20, [sp, #16]
  471e2c:	adrp	x20, 4a2000 <_obstack_memory_used@@Base+0x40bb8>
  471e30:	add	x20, x20, #0xde8
  471e34:	stp	x21, x22, [sp, #32]
  471e38:	adrp	x21, 4a2000 <_obstack_memory_used@@Base+0x40bb8>
  471e3c:	add	x21, x21, #0xdc8
  471e40:	sub	x20, x20, x21
  471e44:	mov	w22, w0
  471e48:	stp	x23, x24, [sp, #48]
  471e4c:	mov	x23, x1
  471e50:	mov	x24, x2
  471e54:	bl	402450 <memcpy@plt-0x40>
  471e58:	cmp	xzr, x20, asr #3
  471e5c:	b.eq	471e88 <_obstack_memory_used@@Base+0x10a40>  // b.none
  471e60:	asr	x20, x20, #3
  471e64:	mov	x19, #0x0                   	// #0
  471e68:	ldr	x3, [x21, x19, lsl #3]
  471e6c:	mov	x2, x24
  471e70:	add	x19, x19, #0x1
  471e74:	mov	x1, x23
  471e78:	mov	w0, w22
  471e7c:	blr	x3
  471e80:	cmp	x20, x19
  471e84:	b.ne	471e68 <_obstack_memory_used@@Base+0x10a20>  // b.any
  471e88:	ldp	x19, x20, [sp, #16]
  471e8c:	ldp	x21, x22, [sp, #32]
  471e90:	ldp	x23, x24, [sp, #48]
  471e94:	ldp	x29, x30, [sp], #64
  471e98:	ret
  471e9c:	nop
  471ea0:	ret

Disassembly of section .fini:

0000000000471ea4 <.fini>:
  471ea4:	stp	x29, x30, [sp, #-16]!
  471ea8:	mov	x29, sp
  471eac:	ldp	x29, x30, [sp], #16
  471eb0:	ret
