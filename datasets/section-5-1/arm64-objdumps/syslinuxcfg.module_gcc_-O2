
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//syslinuxcfg.module_gcc_-O2:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <grub_strcasecmp>:
       0:	ldrb	w2, [x0]
       4:	cbnz	w2, 28 <grub_strcasecmp+0x28>
       8:	b	64 <grub_strcasecmp+0x64>
       c:	csel	w2, w8, w2, cc  // cc = lo, ul, last
      10:	cmp	w6, #0x1a
      14:	csel	w3, w4, w3, cc  // cc = lo, ul, last
      18:	cmp	w3, w2
      1c:	b.ne	84 <grub_strcasecmp+0x84>  // b.any
      20:	ldrb	w2, [x0, #1]!
      24:	cbz	w2, 64 <grub_strcasecmp+0x64>
      28:	ldrb	w3, [x1]
      2c:	sub	w7, w2, #0x41
      30:	add	w8, w2, #0x20
      34:	mov	w5, w2
      38:	add	x1, x1, #0x1
      3c:	sub	w6, w3, #0x41
      40:	add	w4, w3, #0x20
      44:	mov	w9, w3
      48:	cmp	w7, #0x1a
      4c:	cbnz	w3, c <grub_strcasecmp+0xc>
      50:	add	w0, w2, #0x20
      54:	mov	w9, #0x0                   	// #0
      58:	csel	w5, w0, w2, cc  // cc = lo, ul, last
      5c:	sub	w0, w5, w9
      60:	ret
      64:	ldrb	w9, [x1]
      68:	mov	w5, #0x0                   	// #0
      6c:	sub	w6, w9, #0x41
      70:	cmp	w6, #0x1a
      74:	add	w0, w9, #0x20
      78:	csel	w9, w0, w9, cc  // cc = lo, ul, last
      7c:	sub	w0, w5, w9
      80:	ret
      84:	cmp	w7, #0x1a
      88:	csel	w5, w8, w5, cc  // cc = lo, ul, last
      8c:	b	70 <grub_strcasecmp+0x70>

0000000000000090 <cmd_say>:
      90:	stp	x29, x30, [sp, #-48]!
      94:	mov	x29, sp
      98:	stp	x19, x20, [sp, #16]
      9c:	mov	x20, x0
      a0:	str	x21, [sp, #32]
      a4:	mov	x21, x1
      a8:	bl	0 <grub_strlen>
      ac:	add	x0, x0, #0x11
      b0:	bl	0 <grub_malloc>
      b4:	cbz	x0, 118 <cmd_say+0x88>
      b8:	ldr	x1, [x21, #8]
      bc:	str	xzr, [x0, #8]
      c0:	mov	x19, x0
      c4:	cbz	x1, 108 <cmd_say+0x78>
      c8:	ldr	x0, [x1, #104]
      cc:	str	x0, [x19]
      d0:	str	x19, [x1, #104]
      d4:	cbz	x0, dc <cmd_say+0x4c>
      d8:	str	x19, [x0, #8]
      dc:	mov	x0, x20
      e0:	bl	0 <grub_strlen>
      e4:	mov	x1, x20
      e8:	add	x2, x0, #0x1
      ec:	add	x0, x19, #0x10
      f0:	bl	0 <grub_memmove>
      f4:	mov	w0, #0x0                   	// #0
      f8:	ldp	x19, x20, [sp, #16]
      fc:	ldr	x21, [sp, #32]
     100:	ldp	x29, x30, [sp], #48
     104:	ret
     108:	ldr	x0, [x21, #96]
     10c:	str	x0, [x19]
     110:	str	x19, [x21, #96]
     114:	b	d4 <cmd_say+0x44>
     118:	adrp	x0, 0 <grub_strcasecmp>
     11c:	ldp	x19, x20, [sp, #16]
     120:	ldr	x0, [x0]
     124:	ldr	x21, [sp, #32]
     128:	ldr	w0, [x0]
     12c:	ldp	x29, x30, [sp], #48
     130:	ret
     134:	nop
	...

0000000000000140 <cmd_timeout>:
     140:	stp	x29, x30, [sp, #-32]!
     144:	mov	w2, #0x0                   	// #0
     148:	mov	x29, sp
     14c:	str	x19, [sp, #16]
     150:	mov	x19, x1
     154:	mov	x1, #0x0                   	// #0
     158:	bl	0 <grub_strtoul>
     15c:	mov	x1, x0
     160:	mov	w0, #0x0                   	// #0
     164:	str	x1, [x19, #88]
     168:	ldr	x19, [sp, #16]
     16c:	ldp	x29, x30, [sp], #32
     170:	ret
     174:	nop

0000000000000178 <cmd_menubackground>:
     178:	stp	x29, x30, [sp, #-32]!
     17c:	mov	x29, sp
     180:	str	x19, [sp, #16]
     184:	mov	x19, x1
     188:	bl	0 <grub_strdup>
     18c:	mov	x1, x0
     190:	mov	w0, #0x0                   	// #0
     194:	str	x1, [x19, #32]
     198:	ldr	x19, [sp, #16]
     19c:	ldp	x29, x30, [sp], #32
     1a0:	ret
     1a4:	nop

00000000000001a8 <cmd_default>:
     1a8:	stp	x29, x30, [sp, #-32]!
     1ac:	mov	x29, sp
     1b0:	str	x19, [sp, #16]
     1b4:	mov	x19, x1
     1b8:	bl	0 <grub_strdup>
     1bc:	str	x0, [x19, #16]
     1c0:	cbz	x0, 1d4 <cmd_default+0x2c>
     1c4:	mov	w0, #0x0                   	// #0
     1c8:	ldr	x19, [sp, #16]
     1cc:	ldp	x29, x30, [sp], #32
     1d0:	ret
     1d4:	adrp	x0, 0 <grub_strcasecmp>
     1d8:	ldr	x19, [sp, #16]
     1dc:	ldr	x0, [x0]
     1e0:	ldp	x29, x30, [sp], #32
     1e4:	ldr	w0, [x0]
     1e8:	ret
     1ec:	nop
	...

00000000000001f8 <cmd_extlabel>:
     1f8:	stp	x29, x30, [sp, #-48]!
     1fc:	mov	x29, sp
     200:	stp	x19, x20, [sp, #16]
     204:	mov	x20, x1
     208:	ldr	x1, [x1, #8]
     20c:	cbz	x1, 2b8 <cmd_extlabel+0xc0>
     210:	mov	x19, x0
     214:	str	x21, [sp, #32]
     218:	bl	0 <grub_strlen>
     21c:	add	x0, x0, #0x1
     220:	ldr	x21, [x20, #8]
     224:	bl	0 <grub_malloc>
     228:	ldr	x1, [x20, #8]
     22c:	str	x0, [x21, #24]
     230:	ldr	x2, [x1, #24]
     234:	cbz	x2, 2d0 <cmd_extlabel+0xd8>
     238:	ldrb	w0, [x19]
     23c:	cbnz	w0, 258 <cmd_extlabel+0x60>
     240:	b	2a0 <cmd_extlabel+0xa8>
     244:	mov	x19, x0
     248:	ldrb	w3, [x19], #1
     24c:	strb	w3, [x2], #1
     250:	ldrb	w0, [x0, #1]
     254:	cbz	w0, 2a0 <cmd_extlabel+0xa8>
     258:	cmp	w0, #0x5e
     25c:	mov	x0, x19
     260:	b.ne	244 <cmd_extlabel+0x4c>  // b.any
     264:	ldrb	w3, [x19, #1]
     268:	sub	w4, w3, #0x41
     26c:	add	w1, w3, #0x20
     270:	and	w1, w1, #0xff
     274:	cmp	w4, #0x1a
     278:	cbz	w3, 244 <cmd_extlabel+0x4c>
     27c:	ldr	x4, [x20, #8]
     280:	add	x0, x19, #0x1
     284:	mov	x19, x0
     288:	csel	w3, w1, w3, cc  // cc = lo, ul, last
     28c:	strb	w3, [x4, #96]
     290:	ldrb	w3, [x19], #1
     294:	strb	w3, [x2], #1
     298:	ldrb	w0, [x0, #1]
     29c:	cbnz	w0, 258 <cmd_extlabel+0x60>
     2a0:	strb	wzr, [x2]
     2a4:	mov	w0, #0x0                   	// #0
     2a8:	ldp	x19, x20, [sp, #16]
     2ac:	ldr	x21, [sp, #32]
     2b0:	ldp	x29, x30, [sp], #48
     2b4:	ret
     2b8:	adrp	x1, 0 <grub_strcasecmp>
     2bc:	mov	w0, #0x12                  	// #18
     2c0:	ldp	x19, x20, [sp, #16]
     2c4:	ldp	x29, x30, [sp], #48
     2c8:	ldr	x1, [x1]
     2cc:	b	0 <grub_error>
     2d0:	adrp	x0, 0 <grub_strcasecmp>
     2d4:	ldp	x19, x20, [sp, #16]
     2d8:	ldr	x0, [x0]
     2dc:	ldr	x21, [sp, #32]
     2e0:	ldr	w0, [x0]
     2e4:	ldp	x29, x30, [sp], #48
     2e8:	ret
     2ec:	nop
	...

0000000000000300 <label>:
     300:	stp	x29, x30, [sp, #-48]!
     304:	mov	x29, sp
     308:	stp	x19, x20, [sp, #16]
     30c:	mov	x20, x1
     310:	str	x21, [sp, #32]
     314:	mov	x21, x0
     318:	mov	x0, #0x78                  	// #120
     31c:	bl	0 <grub_malloc>
     320:	cbz	x0, 374 <label+0x74>
     324:	mov	x19, x0
     328:	mov	x2, #0x78                  	// #120
     32c:	mov	w1, #0x0                   	// #0
     330:	bl	0 <grub_memset>
     334:	mov	x0, x21
     338:	bl	0 <grub_strdup>
     33c:	str	x0, [x19, #16]
     340:	cbz	x0, 36c <label+0x6c>
     344:	ldr	x0, [x20, #8]
     348:	stp	x0, xzr, [x19]
     34c:	cbz	x0, 354 <label+0x54>
     350:	str	x19, [x0, #8]
     354:	str	x19, [x20, #8]
     358:	mov	w0, #0x0                   	// #0
     35c:	ldp	x19, x20, [sp, #16]
     360:	ldr	x21, [sp, #32]
     364:	ldp	x29, x30, [sp], #48
     368:	ret
     36c:	mov	x0, x19
     370:	bl	0 <grub_free>
     374:	adrp	x0, 0 <grub_strcasecmp>
     378:	ldp	x19, x20, [sp, #16]
     37c:	ldr	x0, [x0]
     380:	ldr	x21, [sp, #32]
     384:	ldr	w0, [x0]
     388:	ldp	x29, x30, [sp], #48
     38c:	ret
	...

0000000000000398 <add_comment>:
     398:	stp	x29, x30, [sp, #-64]!
     39c:	mov	x29, sp
     3a0:	ldr	x3, [x0, #8]
     3a4:	stp	x19, x20, [sp, #16]
     3a8:	mov	x19, x1
     3ac:	stp	x21, x22, [sp, #32]
     3b0:	mov	x21, x0
     3b4:	mov	w22, w2
     3b8:	cbz	x3, 458 <add_comment+0xc0>
     3bc:	ldr	x20, [x3, #88]
     3c0:	cbnz	x20, 3d0 <add_comment+0x38>
     3c4:	ldrb	w1, [x1]
     3c8:	mov	w0, #0x0                   	// #0
     3cc:	cbz	w1, 448 <add_comment+0xb0>
     3d0:	stp	x23, x24, [sp, #48]
     3d4:	mov	x0, x19
     3d8:	add	x20, x20, #0x2
     3dc:	ldr	x24, [x3, #80]
     3e0:	bl	0 <grub_strlen>
     3e4:	mov	x1, x0
     3e8:	ldr	x23, [x21, #8]
     3ec:	add	x1, x20, x1
     3f0:	mov	x0, x24
     3f4:	bl	0 <grub_realloc>
     3f8:	ldr	x2, [x21, #8]
     3fc:	str	x0, [x23, #80]
     400:	ldr	x1, [x2, #80]
     404:	cbz	x1, 4f4 <add_comment+0x15c>
     408:	ldr	x0, [x2, #88]
     40c:	add	x1, x1, x0
     410:	ldrb	w3, [x19]
     414:	mov	x4, x1
     418:	strb	w3, [x1], #1
     41c:	ldrb	w3, [x19], #1
     420:	cbnz	w3, 410 <add_comment+0x78>
     424:	ldr	x0, [x21, #8]
     428:	mov	x1, x4
     42c:	ldr	x2, [x0, #80]
     430:	sub	x4, x4, x2
     434:	cbnz	w22, 4d4 <add_comment+0x13c>
     438:	str	x4, [x0, #88]
     43c:	strb	wzr, [x1]
     440:	mov	w0, #0x0                   	// #0
     444:	ldp	x23, x24, [sp, #48]
     448:	ldp	x19, x20, [sp, #16]
     44c:	ldp	x21, x22, [sp, #32]
     450:	ldp	x29, x30, [sp], #64
     454:	ret
     458:	ldr	x20, [x0, #80]
     45c:	cbnz	x20, 46c <add_comment+0xd4>
     460:	ldrb	w1, [x1]
     464:	mov	w0, #0x0                   	// #0
     468:	cbz	w1, 448 <add_comment+0xb0>
     46c:	stp	x23, x24, [sp, #48]
     470:	mov	x0, x19
     474:	add	x20, x20, #0x2
     478:	ldr	x23, [x21, #24]
     47c:	bl	0 <grub_strlen>
     480:	mov	x1, x0
     484:	add	x1, x20, x1
     488:	mov	x0, x23
     48c:	bl	0 <grub_realloc>
     490:	str	x0, [x21, #24]
     494:	mov	x1, x0
     498:	cbz	x0, 4f4 <add_comment+0x15c>
     49c:	ldr	x0, [x21, #80]
     4a0:	add	x1, x1, x0
     4a4:	nop
     4a8:	ldrb	w3, [x19]
     4ac:	mov	x4, x1
     4b0:	strb	w3, [x1], #1
     4b4:	ldrb	w3, [x19], #1
     4b8:	cbnz	w3, 4a8 <add_comment+0x110>
     4bc:	ldr	x0, [x21, #24]
     4c0:	mov	x1, x4
     4c4:	sub	x4, x4, x0
     4c8:	cbnz	w22, 514 <add_comment+0x17c>
     4cc:	str	x4, [x21, #80]
     4d0:	b	43c <add_comment+0xa4>
     4d4:	add	x1, x4, #0x1
     4d8:	str	x1, [x0, #88]
     4dc:	mov	w0, #0xa                   	// #10
     4e0:	strb	w0, [x2, x4]
     4e4:	ldr	x0, [x21, #8]
     4e8:	ldp	x1, x0, [x0, #80]
     4ec:	add	x1, x1, x0
     4f0:	b	43c <add_comment+0xa4>
     4f4:	adrp	x0, 0 <grub_strcasecmp>
     4f8:	ldp	x19, x20, [sp, #16]
     4fc:	ldr	x0, [x0]
     500:	ldp	x21, x22, [sp, #32]
     504:	ldr	w0, [x0]
     508:	ldp	x23, x24, [sp, #48]
     50c:	ldp	x29, x30, [sp], #64
     510:	ret
     514:	add	x1, x4, #0x1
     518:	str	x1, [x21, #80]
     51c:	mov	w1, #0xa                   	// #10
     520:	strb	w1, [x0, x4]
     524:	ldr	x1, [x21, #24]
     528:	ldr	x0, [x21, #80]
     52c:	add	x1, x1, x0
     530:	b	43c <add_comment+0xa4>
     534:	nop
	...

0000000000000540 <ensure_space>:
     540:	stp	x29, x30, [sp, #-32]!
     544:	mov	x29, sp
     548:	stp	x19, x20, [sp, #16]
     54c:	mov	x20, x0
     550:	ldr	x0, [x0]
     554:	ldr	x19, [x20, #8]
     558:	sub	x0, x0, x19
     55c:	cmp	x0, x1
     560:	b.ls	574 <ensure_space+0x34>  // b.plast
     564:	mov	w0, #0x0                   	// #0
     568:	ldp	x19, x20, [sp, #16]
     56c:	ldp	x29, x30, [sp], #32
     570:	ret
     574:	add	x1, x1, #0xa
     578:	add	x19, x1, x19
     57c:	ldr	x0, [x20, #16]
     580:	lsl	x19, x19, #1
     584:	mov	x1, x19
     588:	bl	0 <grub_realloc>
     58c:	mov	x1, x0
     590:	cbz	x0, 5ac <ensure_space+0x6c>
     594:	str	x19, [x20]
     598:	mov	w0, #0x0                   	// #0
     59c:	str	x1, [x20, #16]
     5a0:	ldp	x19, x20, [sp, #16]
     5a4:	ldp	x29, x30, [sp], #32
     5a8:	ret
     5ac:	adrp	x0, 0 <grub_strcasecmp>
     5b0:	ldr	x0, [x0]
     5b4:	ldr	w0, [x0]
     5b8:	b	568 <ensure_space+0x28>
     5bc:	nop
	...

00000000000005c8 <print_escaped>:
     5c8:	stp	x29, x30, [sp, #-48]!
     5cc:	mov	x29, sp
     5d0:	stp	x19, x20, [sp, #16]
     5d4:	mov	x19, x0
     5d8:	mov	x20, x1
     5dc:	str	x21, [sp, #32]
     5e0:	mov	x21, x2
     5e4:	cbz	x2, 6c0 <print_escaped+0xf8>
     5e8:	sub	x1, x21, x20
     5ec:	mov	x0, x19
     5f0:	lsl	x1, x1, #2
     5f4:	add	x1, x1, #0x2
     5f8:	bl	540 <ensure_space>
     5fc:	cbnz	w0, 6b0 <print_escaped+0xe8>
     600:	ldp	x1, x2, [x19, #8]
     604:	mov	w3, #0x27                  	// #39
     608:	mov	w5, #0x5c                  	// #92
     60c:	add	x4, x1, #0x1
     610:	str	x4, [x19, #8]
     614:	strb	w3, [x2, x1]
     618:	ldrb	w1, [x20]
     61c:	cmp	w1, #0x0
     620:	ccmp	x21, x20, #0x0, ne  // ne = any
     624:	b.hi	644 <print_escaped+0x7c>  // b.pmore
     628:	b	69c <print_escaped+0xd4>
     62c:	ldrb	w1, [x20]
     630:	strb	w1, [x2, x3]
     634:	ldrb	w1, [x20, #1]!
     638:	cmp	w1, #0x0
     63c:	ccmp	x21, x20, #0x0, ne  // ne = any
     640:	b.ls	69c <print_escaped+0xd4>  // b.plast
     644:	ldp	x3, x2, [x19, #8]
     648:	cmp	w1, #0x27
     64c:	add	x4, x3, #0x1
     650:	str	x4, [x19, #8]
     654:	b.ne	62c <print_escaped+0x64>  // b.any
     658:	strb	w1, [x2, x3]
     65c:	ldp	x2, x3, [x19, #8]
     660:	add	x4, x2, #0x1
     664:	str	x4, [x19, #8]
     668:	strb	w5, [x3, x2]
     66c:	ldp	x2, x3, [x19, #8]
     670:	add	x4, x2, #0x1
     674:	str	x4, [x19, #8]
     678:	strb	w1, [x3, x2]
     67c:	ldp	x2, x3, [x19, #8]
     680:	add	x4, x2, #0x1
     684:	str	x4, [x19, #8]
     688:	strb	w1, [x3, x2]
     68c:	ldrb	w1, [x20, #1]!
     690:	cmp	w1, #0x0
     694:	ccmp	x21, x20, #0x0, ne  // ne = any
     698:	b.hi	644 <print_escaped+0x7c>  // b.pmore
     69c:	ldp	x1, x2, [x19, #8]
     6a0:	mov	w3, #0x27                  	// #39
     6a4:	add	x4, x1, #0x1
     6a8:	str	x4, [x19, #8]
     6ac:	strb	w3, [x2, x1]
     6b0:	ldp	x19, x20, [sp, #16]
     6b4:	ldr	x21, [sp, #32]
     6b8:	ldp	x29, x30, [sp], #48
     6bc:	ret
     6c0:	mov	x0, x1
     6c4:	bl	0 <grub_strlen>
     6c8:	add	x21, x20, x0
     6cc:	b	5e8 <print_escaped+0x20>

00000000000006d0 <cmd_append.part.0>:
     6d0:	adrp	x1, 0 <grub_strcasecmp>
     6d4:	mov	w0, #0x12                  	// #18
     6d8:	ldr	x1, [x1]
     6dc:	b	0 <grub_error>
	...

00000000000006e8 <cmd_menudefault>:
     6e8:	ldr	x1, [x1, #8]
     6ec:	cbz	x1, 700 <cmd_menudefault+0x18>
     6f0:	mov	w2, #0x1                   	// #1
     6f4:	mov	w0, #0x0                   	// #0
     6f8:	str	w2, [x1, #100]
     6fc:	ret
     700:	b	6d0 <cmd_append.part.0>
     704:	nop

0000000000000708 <cmd_localboot>:
     708:	stp	x29, x30, [sp, #-32]!
     70c:	mov	x29, sp
     710:	stp	x19, x20, [sp, #16]
     714:	ldr	x20, [x1, #8]
     718:	cbz	x20, 74c <cmd_localboot+0x44>
     71c:	mov	x19, x1
     720:	bl	0 <grub_strdup>
     724:	ldr	x1, [x19, #8]
     728:	str	x0, [x20, #32]
     72c:	ldr	x0, [x1, #32]
     730:	cbz	x0, 758 <cmd_localboot+0x50>
     734:	mov	w2, #0xa                   	// #10
     738:	str	w2, [x1, #112]
     73c:	mov	w0, #0x0                   	// #0
     740:	ldp	x19, x20, [sp, #16]
     744:	ldp	x29, x30, [sp], #32
     748:	ret
     74c:	ldp	x19, x20, [sp, #16]
     750:	ldp	x29, x30, [sp], #32
     754:	b	6d0 <cmd_append.part.0>
     758:	adrp	x0, 0 <grub_strcasecmp>
     75c:	ldp	x19, x20, [sp, #16]
     760:	ldr	x0, [x0]
     764:	ldp	x29, x30, [sp], #32
     768:	ldr	w0, [x0]
     76c:	ret
	...

0000000000000778 <cmd_append>:
     778:	stp	x29, x30, [sp, #-32]!
     77c:	mov	x29, sp
     780:	stp	x19, x20, [sp, #16]
     784:	ldr	x20, [x1, #8]
     788:	cbz	x20, 7b4 <cmd_append+0x3c>
     78c:	mov	x19, x1
     790:	bl	0 <grub_strdup>
     794:	ldr	x1, [x19, #8]
     798:	str	x0, [x20, #56]
     79c:	mov	w0, #0x0                   	// #0
     7a0:	ldr	x1, [x1, #56]
     7a4:	cbz	x1, 7c0 <cmd_append+0x48>
     7a8:	ldp	x19, x20, [sp, #16]
     7ac:	ldp	x29, x30, [sp], #32
     7b0:	ret
     7b4:	ldp	x19, x20, [sp, #16]
     7b8:	ldp	x29, x30, [sp], #32
     7bc:	b	6d0 <cmd_append.part.0>
     7c0:	adrp	x0, 0 <grub_strcasecmp>
     7c4:	ldp	x19, x20, [sp, #16]
     7c8:	ldr	x0, [x0]
     7cc:	ldp	x29, x30, [sp], #32
     7d0:	ldr	w0, [x0]
     7d4:	ret
	...

00000000000007e0 <cmd_com32>:
     7e0:	stp	x29, x30, [sp, #-32]!
     7e4:	mov	x29, sp
     7e8:	stp	x19, x20, [sp, #16]
     7ec:	ldr	x20, [x1, #8]
     7f0:	cbz	x20, 824 <cmd_com32+0x44>
     7f4:	mov	x19, x1
     7f8:	bl	0 <grub_strdup>
     7fc:	ldr	x1, [x19, #8]
     800:	str	x0, [x20, #32]
     804:	ldr	x0, [x1, #32]
     808:	cbz	x0, 830 <cmd_com32+0x50>
     80c:	mov	w2, #0x6                   	// #6
     810:	str	w2, [x1, #112]
     814:	mov	w0, #0x0                   	// #0
     818:	ldp	x19, x20, [sp, #16]
     81c:	ldp	x29, x30, [sp], #32
     820:	ret
     824:	ldp	x19, x20, [sp, #16]
     828:	ldp	x29, x30, [sp], #32
     82c:	b	6d0 <cmd_append.part.0>
     830:	adrp	x0, 0 <grub_strcasecmp>
     834:	ldp	x19, x20, [sp, #16]
     838:	ldr	x0, [x0]
     83c:	ldp	x29, x30, [sp], #32
     840:	ldr	w0, [x0]
     844:	ret
	...

0000000000000850 <cmd_comboot>:
     850:	stp	x29, x30, [sp, #-32]!
     854:	mov	x29, sp
     858:	stp	x19, x20, [sp, #16]
     85c:	ldr	x20, [x1, #8]
     860:	cbz	x20, 894 <cmd_comboot+0x44>
     864:	mov	x19, x1
     868:	bl	0 <grub_strdup>
     86c:	ldr	x1, [x19, #8]
     870:	str	x0, [x20, #32]
     874:	ldr	x0, [x1, #32]
     878:	cbz	x0, 8a0 <cmd_comboot+0x50>
     87c:	mov	w2, #0x7                   	// #7
     880:	str	w2, [x1, #112]
     884:	mov	w0, #0x0                   	// #0
     888:	ldp	x19, x20, [sp, #16]
     88c:	ldp	x29, x30, [sp], #32
     890:	ret
     894:	ldp	x19, x20, [sp, #16]
     898:	ldp	x29, x30, [sp], #32
     89c:	b	6d0 <cmd_append.part.0>
     8a0:	adrp	x0, 0 <grub_strcasecmp>
     8a4:	ldp	x19, x20, [sp, #16]
     8a8:	ldr	x0, [x0]
     8ac:	ldp	x29, x30, [sp], #32
     8b0:	ldr	w0, [x0]
     8b4:	ret
	...

00000000000008c0 <cmd_fdimage>:
     8c0:	stp	x29, x30, [sp, #-32]!
     8c4:	mov	x29, sp
     8c8:	stp	x19, x20, [sp, #16]
     8cc:	ldr	x20, [x1, #8]
     8d0:	cbz	x20, 904 <cmd_fdimage+0x44>
     8d4:	mov	x19, x1
     8d8:	bl	0 <grub_strdup>
     8dc:	ldr	x1, [x19, #8]
     8e0:	str	x0, [x20, #32]
     8e4:	ldr	x0, [x1, #32]
     8e8:	cbz	x0, 910 <cmd_fdimage+0x50>
     8ec:	mov	w2, #0x8                   	// #8
     8f0:	str	w2, [x1, #112]
     8f4:	mov	w0, #0x0                   	// #0
     8f8:	ldp	x19, x20, [sp, #16]
     8fc:	ldp	x29, x30, [sp], #32
     900:	ret
     904:	ldp	x19, x20, [sp, #16]
     908:	ldp	x29, x30, [sp], #32
     90c:	b	6d0 <cmd_append.part.0>
     910:	adrp	x0, 0 <grub_strcasecmp>
     914:	ldp	x19, x20, [sp, #16]
     918:	ldr	x0, [x0]
     91c:	ldp	x29, x30, [sp], #32
     920:	ldr	w0, [x0]
     924:	ret
	...

0000000000000930 <cmd_pxe>:
     930:	stp	x29, x30, [sp, #-32]!
     934:	mov	x29, sp
     938:	stp	x19, x20, [sp, #16]
     93c:	ldr	x20, [x1, #8]
     940:	cbz	x20, 974 <cmd_pxe+0x44>
     944:	mov	x19, x1
     948:	bl	0 <grub_strdup>
     94c:	ldr	x1, [x19, #8]
     950:	str	x0, [x20, #32]
     954:	ldr	x0, [x1, #32]
     958:	cbz	x0, 980 <cmd_pxe+0x50>
     95c:	mov	w2, #0x4                   	// #4
     960:	str	w2, [x1, #112]
     964:	mov	w0, #0x0                   	// #0
     968:	ldp	x19, x20, [sp, #16]
     96c:	ldp	x29, x30, [sp], #32
     970:	ret
     974:	ldp	x19, x20, [sp, #16]
     978:	ldp	x29, x30, [sp], #32
     97c:	b	6d0 <cmd_append.part.0>
     980:	adrp	x0, 0 <grub_strcasecmp>
     984:	ldp	x19, x20, [sp, #16]
     988:	ldr	x0, [x0]
     98c:	ldp	x29, x30, [sp], #32
     990:	ldr	w0, [x0]
     994:	ret
	...

00000000000009a0 <cmd_bss>:
     9a0:	stp	x29, x30, [sp, #-32]!
     9a4:	mov	x29, sp
     9a8:	stp	x19, x20, [sp, #16]
     9ac:	ldr	x20, [x1, #8]
     9b0:	cbz	x20, 9e4 <cmd_bss+0x44>
     9b4:	mov	x19, x1
     9b8:	bl	0 <grub_strdup>
     9bc:	ldr	x1, [x19, #8]
     9c0:	str	x0, [x20, #32]
     9c4:	ldr	x0, [x1, #32]
     9c8:	cbz	x0, 9f0 <cmd_bss+0x50>
     9cc:	mov	w2, #0x5                   	// #5
     9d0:	str	w2, [x1, #112]
     9d4:	mov	w0, #0x0                   	// #0
     9d8:	ldp	x19, x20, [sp, #16]
     9dc:	ldp	x29, x30, [sp], #32
     9e0:	ret
     9e4:	ldp	x19, x20, [sp, #16]
     9e8:	ldp	x29, x30, [sp], #32
     9ec:	b	6d0 <cmd_append.part.0>
     9f0:	adrp	x0, 0 <grub_strcasecmp>
     9f4:	ldp	x19, x20, [sp, #16]
     9f8:	ldr	x0, [x0]
     9fc:	ldp	x29, x30, [sp], #32
     a00:	ldr	w0, [x0]
     a04:	ret
	...

0000000000000a10 <cmd_boot>:
     a10:	stp	x29, x30, [sp, #-32]!
     a14:	mov	x29, sp
     a18:	stp	x19, x20, [sp, #16]
     a1c:	ldr	x20, [x1, #8]
     a20:	cbz	x20, a54 <cmd_boot+0x44>
     a24:	mov	x19, x1
     a28:	bl	0 <grub_strdup>
     a2c:	ldr	x1, [x19, #8]
     a30:	str	x0, [x20, #32]
     a34:	ldr	x0, [x1, #32]
     a38:	cbz	x0, a60 <cmd_boot+0x50>
     a3c:	mov	w2, #0x2                   	// #2
     a40:	str	w2, [x1, #112]
     a44:	mov	w0, #0x0                   	// #0
     a48:	ldp	x19, x20, [sp, #16]
     a4c:	ldp	x29, x30, [sp], #32
     a50:	ret
     a54:	ldp	x19, x20, [sp, #16]
     a58:	ldp	x29, x30, [sp], #32
     a5c:	b	6d0 <cmd_append.part.0>
     a60:	adrp	x0, 0 <grub_strcasecmp>
     a64:	ldp	x19, x20, [sp, #16]
     a68:	ldr	x0, [x0]
     a6c:	ldp	x29, x30, [sp], #32
     a70:	ldr	w0, [x0]
     a74:	ret
	...

0000000000000a80 <cmd_linux>:
     a80:	stp	x29, x30, [sp, #-32]!
     a84:	mov	x29, sp
     a88:	stp	x19, x20, [sp, #16]
     a8c:	ldr	x20, [x1, #8]
     a90:	cbz	x20, ac4 <cmd_linux+0x44>
     a94:	mov	x19, x1
     a98:	bl	0 <grub_strdup>
     a9c:	ldr	x1, [x19, #8]
     aa0:	str	x0, [x20, #32]
     aa4:	ldr	x0, [x1, #32]
     aa8:	cbz	x0, ad0 <cmd_linux+0x50>
     aac:	mov	w2, #0x1                   	// #1
     ab0:	str	w2, [x1, #112]
     ab4:	mov	w0, #0x0                   	// #0
     ab8:	ldp	x19, x20, [sp, #16]
     abc:	ldp	x29, x30, [sp], #32
     ac0:	ret
     ac4:	ldp	x19, x20, [sp, #16]
     ac8:	ldp	x29, x30, [sp], #32
     acc:	b	6d0 <cmd_append.part.0>
     ad0:	adrp	x0, 0 <grub_strcasecmp>
     ad4:	ldp	x19, x20, [sp, #16]
     ad8:	ldr	x0, [x0]
     adc:	ldp	x29, x30, [sp], #32
     ae0:	ldr	w0, [x0]
     ae4:	ret
	...

0000000000000af0 <cmd_initrd>:
     af0:	stp	x29, x30, [sp, #-48]!
     af4:	mov	x29, sp
     af8:	stp	x19, x20, [sp, #16]
     afc:	mov	x20, x0
     b00:	ldr	x0, [x1, #8]
     b04:	cbz	x0, bd0 <cmd_initrd+0xe0>
     b08:	stp	x21, x22, [sp, #32]
     b0c:	mov	x22, x1
     b10:	ldrb	w0, [x20]
     b14:	cbz	w0, b90 <cmd_initrd+0xa0>
     b18:	cmp	w0, #0x2c
     b1c:	mov	x19, x20
     b20:	b.eq	b38 <cmd_initrd+0x48>  // b.none
     b24:	nop
     b28:	ldrb	w2, [x19, #1]!
     b2c:	cmp	w2, #0x2c
     b30:	ccmp	w2, #0x0, #0x4, ne  // ne = any
     b34:	b.ne	b28 <cmd_initrd+0x38>  // b.any
     b38:	mov	x0, #0x10                  	// #16
     b3c:	bl	0 <grub_malloc>
     b40:	mov	x21, x0
     b44:	cbz	x0, bb4 <cmd_initrd+0xc4>
     b48:	sub	x1, x19, x20
     b4c:	mov	x0, x20
     b50:	bl	0 <grub_strndup>
     b54:	str	x0, [x21, #8]
     b58:	cbz	x0, bac <cmd_initrd+0xbc>
     b5c:	ldr	x1, [x22, #8]
     b60:	ldr	x0, [x1, #48]
     b64:	str	xzr, [x21]
     b68:	cbz	x0, ba4 <cmd_initrd+0xb4>
     b6c:	str	x21, [x0]
     b70:	ldrb	w0, [x19]
     b74:	mov	x20, x19
     b78:	cmp	w0, #0x2c
     b7c:	b.ne	b8c <cmd_initrd+0x9c>  // b.any
     b80:	ldrb	w0, [x20, #1]!
     b84:	cmp	w0, #0x2c
     b88:	b.eq	b80 <cmd_initrd+0x90>  // b.none
     b8c:	cbnz	w0, b18 <cmd_initrd+0x28>
     b90:	mov	w0, #0x0                   	// #0
     b94:	ldp	x19, x20, [sp, #16]
     b98:	ldp	x21, x22, [sp, #32]
     b9c:	ldp	x29, x30, [sp], #48
     ba0:	ret
     ba4:	stp	x21, x21, [x1, #40]
     ba8:	b	b70 <cmd_initrd+0x80>
     bac:	mov	x0, x21
     bb0:	bl	0 <grub_free>
     bb4:	adrp	x0, 0 <grub_strcasecmp>
     bb8:	ldp	x19, x20, [sp, #16]
     bbc:	ldr	x0, [x0]
     bc0:	ldp	x21, x22, [sp, #32]
     bc4:	ldr	w0, [x0]
     bc8:	ldp	x29, x30, [sp], #48
     bcc:	ret
     bd0:	adrp	x1, 0 <grub_strcasecmp>
     bd4:	mov	w0, #0x12                  	// #18
     bd8:	ldp	x19, x20, [sp, #16]
     bdc:	ldp	x29, x30, [sp], #48
     be0:	ldr	x1, [x1]
     be4:	b	0 <grub_error>
	...

0000000000000bf8 <cmd_config>:
     bf8:	stp	x29, x30, [sp, #-48]!
     bfc:	mov	x29, sp
     c00:	stp	x21, x22, [sp, #32]
     c04:	ldr	x22, [x1, #8]
     c08:	cbz	x22, ce8 <cmd_config+0xf0>
     c0c:	stp	x19, x20, [sp, #16]
     c10:	mov	x21, x0
     c14:	mov	x20, x1
     c18:	ldrb	w0, [x0]
     c1c:	mov	x19, x21
     c20:	mov	x1, #0x0                   	// #0
     c24:	cbnz	w0, c34 <cmd_config+0x3c>
     c28:	b	c44 <cmd_config+0x4c>
     c2c:	ldrb	w0, [x19, #1]!
     c30:	cbz	w0, cd4 <cmd_config+0xdc>
     c34:	bl	0 <grub_isspace>
     c38:	cbz	w0, c2c <cmd_config+0x34>
     c3c:	ldr	x22, [x20, #8]
     c40:	sub	x1, x19, x21
     c44:	mov	x0, x21
     c48:	bl	0 <grub_strndup>
     c4c:	ldr	x21, [x20, #8]
     c50:	str	x0, [x22, #32]
     c54:	ldr	x0, [x21, #32]
     c58:	cbz	x0, cb8 <cmd_config+0xc0>
     c5c:	ldrb	w0, [x19]
     c60:	cbnz	w0, c70 <cmd_config+0x78>
     c64:	b	c9c <cmd_config+0xa4>
     c68:	ldrb	w0, [x19, #1]!
     c6c:	cbz	w0, ce0 <cmd_config+0xe8>
     c70:	bl	0 <grub_isspace>
     c74:	cbnz	w0, c68 <cmd_config+0x70>
     c78:	ldrb	w0, [x19]
     c7c:	ldr	x21, [x20, #8]
     c80:	cbz	w0, c9c <cmd_config+0xa4>
     c84:	mov	x0, x19
     c88:	bl	0 <grub_strdup>
     c8c:	str	x0, [x21, #64]
     c90:	ldr	x21, [x20, #8]
     c94:	ldr	x0, [x21, #64]
     c98:	cbz	x0, cb8 <cmd_config+0xc0>
     c9c:	mov	w1, #0x9                   	// #9
     ca0:	str	w1, [x21, #112]
     ca4:	mov	w0, #0x0                   	// #0
     ca8:	ldp	x19, x20, [sp, #16]
     cac:	ldp	x21, x22, [sp, #32]
     cb0:	ldp	x29, x30, [sp], #48
     cb4:	ret
     cb8:	adrp	x0, 0 <grub_strcasecmp>
     cbc:	ldp	x19, x20, [sp, #16]
     cc0:	ldr	x0, [x0]
     cc4:	ldp	x21, x22, [sp, #32]
     cc8:	ldr	w0, [x0]
     ccc:	ldp	x29, x30, [sp], #48
     cd0:	ret
     cd4:	sub	x1, x19, x21
     cd8:	ldr	x22, [x20, #8]
     cdc:	b	c44 <cmd_config+0x4c>
     ce0:	ldr	x21, [x20, #8]
     ce4:	b	c9c <cmd_config+0xa4>
     ce8:	adrp	x1, 0 <grub_strcasecmp>
     cec:	mov	w0, #0x12                  	// #18
     cf0:	ldp	x21, x22, [sp, #32]
     cf4:	ldp	x29, x30, [sp], #48
     cf8:	ldr	x1, [x1]
     cfc:	b	0 <grub_error>
	...

0000000000000d10 <print>:
     d10:	stp	x29, x30, [sp, #-48]!
     d14:	mov	x29, sp
     d18:	stp	x19, x20, [sp, #16]
     d1c:	mov	x20, x2
     d20:	stp	x21, x22, [sp, #32]
     d24:	mov	x22, x1
     d28:	mov	x21, x0
     d2c:	mov	x1, x2
     d30:	bl	540 <ensure_space>
     d34:	mov	w19, w0
     d38:	cbnz	w0, d5c <print+0x4c>
     d3c:	ldp	x0, x3, [x21, #8]
     d40:	mov	x2, x20
     d44:	mov	x1, x22
     d48:	add	x0, x3, x0
     d4c:	bl	0 <grub_memmove>
     d50:	ldr	x2, [x21, #8]
     d54:	add	x2, x2, x20
     d58:	str	x2, [x21, #8]
     d5c:	mov	w0, w19
     d60:	ldp	x19, x20, [sp, #16]
     d64:	ldp	x21, x22, [sp, #32]
     d68:	ldp	x29, x30, [sp], #48
     d6c:	ret

0000000000000d70 <print_num>:
     d70:	stp	x29, x30, [sp, #-64]!
     d74:	adrp	x2, 0 <grub_strcasecmp>
     d78:	mov	w3, w1
     d7c:	mov	x29, sp
     d80:	ldr	x2, [x2]
     d84:	mov	x1, #0x14                  	// #20
     d88:	str	x19, [sp, #16]
     d8c:	mov	x19, x0
     d90:	add	x0, sp, #0x28
     d94:	bl	0 <grub_snprintf>
     d98:	add	x0, sp, #0x28
     d9c:	bl	0 <grub_strlen>
     da0:	add	x1, sp, #0x28
     da4:	mov	x2, x0
     da8:	mov	x0, x19
     dac:	bl	d10 <print>
     db0:	ldr	x19, [sp, #16]
     db4:	ldp	x29, x30, [sp], #64
     db8:	ret
     dbc:	nop
	...

0000000000000dc8 <print_file.isra.0>:
     dc8:	stp	x29, x30, [sp, #-64]!
     dcc:	mov	x29, sp
     dd0:	stp	x19, x20, [sp, #16]
     dd4:	mov	x19, x1
     dd8:	mov	x20, x2
     ddc:	stp	x21, x22, [sp, #32]
     de0:	mov	x22, x3
     de4:	mov	x21, x4
     de8:	str	x23, [sp, #48]
     dec:	mov	x23, x0
     df0:	cbz	x4, e60 <print_file.isra.0+0x98>
     df4:	ldrb	w1, [x22]
     df8:	mov	x0, x23
     dfc:	mov	x2, #0x0                   	// #0
     e00:	cmp	w1, #0x2f
     e04:	csel	x19, x19, x20, eq  // eq = none
     e08:	ldr	x1, [x19]
     e0c:	bl	5c8 <print_escaped>
     e10:	cbz	w0, e28 <print_file.isra.0+0x60>
     e14:	ldp	x19, x20, [sp, #16]
     e18:	ldp	x21, x22, [sp, #32]
     e1c:	ldr	x23, [sp, #48]
     e20:	ldp	x29, x30, [sp], #64
     e24:	ret
     e28:	adrp	x1, 0 <grub_strcasecmp>
     e2c:	mov	x0, x23
     e30:	mov	x2, #0x1                   	// #1
     e34:	ldr	x1, [x1]
     e38:	bl	d10 <print>
     e3c:	cbnz	w0, e14 <print_file.isra.0+0x4c>
     e40:	mov	x2, x21
     e44:	mov	x1, x22
     e48:	mov	x0, x23
     e4c:	ldp	x19, x20, [sp, #16]
     e50:	ldp	x21, x22, [sp, #32]
     e54:	ldr	x23, [sp, #48]
     e58:	ldp	x29, x30, [sp], #64
     e5c:	b	5c8 <print_escaped>
     e60:	mov	x0, x3
     e64:	bl	0 <grub_strlen>
     e68:	add	x21, x22, x0
     e6c:	b	df4 <print_file.isra.0+0x2c>
	...

0000000000000e78 <kernel>:
     e78:	stp	x29, x30, [sp, #-48]!
     e7c:	mov	x29, sp
     e80:	stp	x21, x22, [sp, #32]
     e84:	mov	x21, x1
     e88:	stp	x19, x20, [sp, #16]
     e8c:	mov	x19, x0
     e90:	bl	0 <grub_strlen>
     e94:	ldr	x22, [x21, #8]
     e98:	cbz	x22, 114c <kernel+0x2d4>
     e9c:	mov	x20, x0
     ea0:	mov	x0, x19
     ea4:	bl	0 <grub_strdup>
     ea8:	str	x0, [x22, #32]
     eac:	ldr	x0, [x21, #8]
     eb0:	ldr	x1, [x0, #32]
     eb4:	cbz	x1, 1168 <kernel+0x2f0>
     eb8:	mov	w1, #0x1                   	// #1
     ebc:	str	w1, [x0, #112]
     ec0:	add	x19, x19, x20
     ec4:	cmp	x20, #0x1
     ec8:	b.gt	ee0 <kernel+0x68>
     ecc:	mov	w0, #0x0                   	// #0
     ed0:	ldp	x19, x20, [sp, #16]
     ed4:	ldp	x21, x22, [sp, #32]
     ed8:	ldp	x29, x30, [sp], #48
     edc:	ret
     ee0:	adrp	x1, 0 <grub_strcasecmp>
     ee4:	sub	x0, x19, #0x2
     ee8:	ldr	x1, [x1]
     eec:	bl	0 <grub_strcmp>
     ef0:	cbz	w0, 113c <kernel+0x2c4>
     ef4:	cmp	x20, #0x3
     ef8:	b.le	1350 <kernel+0x4d8>
     efc:	ldurb	w3, [x19, #-4]
     f00:	sub	x5, x19, #0x4
     f04:	cbz	w3, f50 <kernel+0xd8>
     f08:	adrp	x0, 0 <grub_strcasecmp>
     f0c:	mov	w2, #0x2e                  	// #46
     f10:	ldr	x4, [x0]
     f14:	nop
     f18:	sub	w6, w3, #0x41
     f1c:	cmp	w6, #0x1a
     f20:	sub	w8, w2, #0x41
     f24:	add	w1, w3, #0x20
     f28:	add	w0, w2, #0x20
     f2c:	csel	w7, w1, w3, cc  // cc = lo, ul, last
     f30:	cmp	w8, #0x1a
     f34:	csel	w2, w0, w2, cc  // cc = lo, ul, last
     f38:	cmp	w2, w7
     f3c:	b.ne	11f4 <kernel+0x37c>  // b.any
     f40:	ldrb	w3, [x5, #1]!
     f44:	ldrb	w2, [x4, #1]!
     f48:	cbz	w3, 1200 <kernel+0x388>
     f4c:	cbnz	w2, f18 <kernel+0xa0>
     f50:	ldurb	w3, [x19, #-3]
     f54:	sub	x5, x19, #0x3
     f58:	cbz	w3, fa0 <kernel+0x128>
     f5c:	adrp	x0, 0 <grub_strcasecmp>
     f60:	mov	w2, #0x2e                  	// #46
     f64:	ldr	x4, [x0]
     f68:	sub	w6, w3, #0x41
     f6c:	cmp	w6, #0x1a
     f70:	sub	w8, w2, #0x41
     f74:	add	w1, w3, #0x20
     f78:	add	w0, w2, #0x20
     f7c:	csel	w7, w1, w3, cc  // cc = lo, ul, last
     f80:	cmp	w8, #0x1a
     f84:	csel	w2, w0, w2, cc  // cc = lo, ul, last
     f88:	cmp	w2, w7
     f8c:	b.ne	11c0 <kernel+0x348>  // b.any
     f90:	ldrb	w3, [x5, #1]!
     f94:	ldrb	w2, [x4, #1]!
     f98:	cbz	w3, 11cc <kernel+0x354>
     f9c:	cbnz	w2, f68 <kernel+0xf0>
     fa0:	cmp	x20, #0x3
     fa4:	b.le	ecc <kernel+0x54>
     fa8:	ldurb	w2, [x19, #-4]
     fac:	sub	x4, x19, #0x4
     fb0:	cbz	w2, ecc <kernel+0x54>
     fb4:	adrp	x1, 0 <grub_strcasecmp>
     fb8:	mov	w0, w2
     fbc:	mov	x7, x4
     fc0:	mov	w3, #0x2e                  	// #46
     fc4:	ldr	x6, [x1]
     fc8:	sub	w8, w0, #0x41
     fcc:	cmp	w8, #0x1a
     fd0:	sub	w10, w3, #0x41
     fd4:	add	w5, w0, #0x20
     fd8:	add	w1, w3, #0x20
     fdc:	csel	w9, w5, w0, cc  // cc = lo, ul, last
     fe0:	cmp	w10, #0x1a
     fe4:	csel	w3, w1, w3, cc  // cc = lo, ul, last
     fe8:	cmp	w3, w9
     fec:	b.ne	1184 <kernel+0x30c>  // b.any
     ff0:	ldrb	w0, [x7, #1]!
     ff4:	ldrb	w1, [x6, #1]!
     ff8:	mov	w3, w1
     ffc:	cbz	w0, 1190 <kernel+0x318>
    1000:	cbnz	w1, fc8 <kernel+0x150>
    1004:	adrp	x1, 0 <grub_strcasecmp>
    1008:	mov	w3, w2
    100c:	mov	x7, x4
    1010:	mov	w0, #0x2e                  	// #46
    1014:	ldr	x6, [x1]
    1018:	sub	w8, w3, #0x41
    101c:	cmp	w8, #0x1a
    1020:	sub	w10, w0, #0x41
    1024:	add	w5, w3, #0x20
    1028:	add	w1, w0, #0x20
    102c:	csel	w9, w5, w3, cc  // cc = lo, ul, last
    1030:	cmp	w10, #0x1a
    1034:	csel	w0, w1, w0, cc  // cc = lo, ul, last
    1038:	cmp	w0, w9
    103c:	b.ne	12e4 <kernel+0x46c>  // b.any
    1040:	ldrb	w3, [x7, #1]!
    1044:	ldrb	w0, [x6, #1]!
    1048:	cbz	w3, 1338 <kernel+0x4c0>
    104c:	cbnz	w0, 1018 <kernel+0x1a0>
    1050:	adrp	x1, 0 <grub_strcasecmp>
    1054:	mov	x7, x4
    1058:	mov	w3, w2
    105c:	mov	w0, #0x2e                  	// #46
    1060:	ldr	x6, [x1]
    1064:	nop
    1068:	sub	w8, w3, #0x41
    106c:	cmp	w8, #0x1a
    1070:	sub	w10, w0, #0x41
    1074:	add	w5, w3, #0x20
    1078:	add	w1, w0, #0x20
    107c:	csel	w9, w5, w3, cc  // cc = lo, ul, last
    1080:	cmp	w10, #0x1a
    1084:	csel	w0, w1, w0, cc  // cc = lo, ul, last
    1088:	cmp	w0, w9
    108c:	b.ne	1264 <kernel+0x3ec>  // b.any
    1090:	ldrb	w3, [x7, #1]!
    1094:	ldrb	w0, [x6, #1]!
    1098:	cbz	w3, 132c <kernel+0x4b4>
    109c:	cbnz	w0, 1068 <kernel+0x1f0>
    10a0:	adrp	x1, 0 <grub_strcasecmp>
    10a4:	mov	w3, w2
    10a8:	mov	x7, x4
    10ac:	mov	w0, #0x2e                  	// #46
    10b0:	ldr	x6, [x1]
    10b4:	nop
    10b8:	sub	w8, w3, #0x41
    10bc:	cmp	w8, #0x1a
    10c0:	sub	w10, w0, #0x41
    10c4:	add	w5, w3, #0x20
    10c8:	add	w1, w0, #0x20
    10cc:	csel	w9, w5, w3, cc  // cc = lo, ul, last
    10d0:	cmp	w10, #0x1a
    10d4:	csel	w0, w1, w0, cc  // cc = lo, ul, last
    10d8:	cmp	w0, w9
    10dc:	b.ne	1228 <kernel+0x3b0>  // b.any
    10e0:	ldrb	w3, [x7, #1]!
    10e4:	ldrb	w0, [x6, #1]!
    10e8:	mov	w1, w0
    10ec:	cbz	w3, 1344 <kernel+0x4cc>
    10f0:	cbnz	w0, 10b8 <kernel+0x240>
    10f4:	adrp	x1, 0 <grub_strcasecmp>
    10f8:	mov	w0, #0x2e                  	// #46
    10fc:	ldr	x5, [x1]
    1100:	sub	w6, w2, #0x41
    1104:	cmp	w6, #0x1a
    1108:	sub	w8, w0, #0x41
    110c:	add	w3, w2, #0x20
    1110:	add	w1, w0, #0x20
    1114:	csel	w7, w3, w2, cc  // cc = lo, ul, last
    1118:	cmp	w8, #0x1a
    111c:	csel	w0, w1, w0, cc  // cc = lo, ul, last
    1120:	cmp	w0, w7
    1124:	b.ne	12a0 <kernel+0x428>  // b.any
    1128:	ldrb	w2, [x4, #1]!
    112c:	ldrb	w0, [x5, #1]!
    1130:	cbz	w2, 1320 <kernel+0x4a8>
    1134:	cbnz	w0, 1100 <kernel+0x288>
    1138:	b	ecc <kernel+0x54>
    113c:	ldr	x0, [x21, #8]
    1140:	mov	w1, #0x4                   	// #4
    1144:	str	w1, [x0, #112]
    1148:	b	ef4 <kernel+0x7c>
    114c:	adrp	x1, 0 <grub_strcasecmp>
    1150:	mov	w0, #0x12                  	// #18
    1154:	ldp	x19, x20, [sp, #16]
    1158:	ldp	x21, x22, [sp, #32]
    115c:	ldp	x29, x30, [sp], #48
    1160:	ldr	x1, [x1]
    1164:	b	0 <grub_error>
    1168:	adrp	x0, 0 <grub_strcasecmp>
    116c:	ldp	x19, x20, [sp, #16]
    1170:	ldr	x0, [x0]
    1174:	ldp	x21, x22, [sp, #32]
    1178:	ldr	w0, [x0]
    117c:	ldp	x29, x30, [sp], #48
    1180:	ret
    1184:	cmp	w8, #0x1a
    1188:	ldrb	w1, [x6]
    118c:	csel	w0, w5, w0, cc  // cc = lo, ul, last
    1190:	sub	w3, w1, #0x41
    1194:	cmp	w3, #0x1a
    1198:	add	w3, w1, #0x20
    119c:	csel	w1, w3, w1, cc  // cc = lo, ul, last
    11a0:	cmp	w0, w1
    11a4:	b.ne	1004 <kernel+0x18c>  // b.any
    11a8:	ldr	x0, [x21, #8]
    11ac:	mov	w1, #0x5                   	// #5
    11b0:	str	w1, [x0, #112]
    11b4:	ldurb	w2, [x19, #-4]
    11b8:	cbnz	w2, 1004 <kernel+0x18c>
    11bc:	b	ecc <kernel+0x54>
    11c0:	cmp	w6, #0x1a
    11c4:	ldrb	w2, [x4]
    11c8:	csel	w3, w1, w3, cc  // cc = lo, ul, last
    11cc:	sub	w0, w2, #0x41
    11d0:	cmp	w0, #0x1a
    11d4:	add	w0, w2, #0x20
    11d8:	csel	w2, w0, w2, cc  // cc = lo, ul, last
    11dc:	cmp	w3, w2
    11e0:	b.ne	fa0 <kernel+0x128>  // b.any
    11e4:	ldr	x0, [x21, #8]
    11e8:	mov	w1, #0x2                   	// #2
    11ec:	str	w1, [x0, #112]
    11f0:	b	fa0 <kernel+0x128>
    11f4:	cmp	w6, #0x1a
    11f8:	ldrb	w2, [x4]
    11fc:	csel	w3, w1, w3, cc  // cc = lo, ul, last
    1200:	sub	w0, w2, #0x41
    1204:	cmp	w0, #0x1a
    1208:	add	w0, w2, #0x20
    120c:	csel	w2, w0, w2, cc  // cc = lo, ul, last
    1210:	cmp	w3, w2
    1214:	b.ne	f50 <kernel+0xd8>  // b.any
    1218:	ldr	x0, [x21, #8]
    121c:	mov	w1, #0x3                   	// #3
    1220:	str	w1, [x0, #112]
    1224:	b	f50 <kernel+0xd8>
    1228:	ldrb	w1, [x6]
    122c:	cmp	w8, #0x1a
    1230:	csel	w3, w5, w3, cc  // cc = lo, ul, last
    1234:	sub	w0, w1, #0x41
    1238:	cmp	w0, #0x1a
    123c:	add	w0, w1, #0x20
    1240:	csel	w1, w0, w1, cc  // cc = lo, ul, last
    1244:	cmp	w3, w1
    1248:	b.ne	10f4 <kernel+0x27c>  // b.any
    124c:	ldr	x0, [x21, #8]
    1250:	mov	w1, #0x7                   	// #7
    1254:	str	w1, [x0, #112]
    1258:	ldurb	w2, [x19, #-4]
    125c:	cbnz	w2, 10f4 <kernel+0x27c>
    1260:	b	ecc <kernel+0x54>
    1264:	ldrb	w0, [x6]
    1268:	cmp	w8, #0x1a
    126c:	csel	w3, w5, w3, cc  // cc = lo, ul, last
    1270:	sub	w1, w0, #0x41
    1274:	cmp	w1, #0x1a
    1278:	add	w1, w0, #0x20
    127c:	csel	w0, w1, w0, cc  // cc = lo, ul, last
    1280:	cmp	w3, w0
    1284:	b.ne	10a0 <kernel+0x228>  // b.any
    1288:	ldr	x0, [x21, #8]
    128c:	mov	w1, #0x7                   	// #7
    1290:	str	w1, [x0, #112]
    1294:	ldurb	w2, [x19, #-4]
    1298:	cbnz	w2, 10a0 <kernel+0x228>
    129c:	b	ecc <kernel+0x54>
    12a0:	ldrb	w0, [x5]
    12a4:	cmp	w6, #0x1a
    12a8:	csel	w2, w3, w2, cc  // cc = lo, ul, last
    12ac:	sub	w1, w0, #0x41
    12b0:	cmp	w1, #0x1a
    12b4:	add	w1, w0, #0x20
    12b8:	csel	w0, w1, w0, cc  // cc = lo, ul, last
    12bc:	cmp	w2, w0
    12c0:	b.ne	ecc <kernel+0x54>  // b.any
    12c4:	ldr	x1, [x21, #8]
    12c8:	mov	w2, #0x8                   	// #8
    12cc:	mov	w0, #0x0                   	// #0
    12d0:	ldp	x19, x20, [sp, #16]
    12d4:	str	w2, [x1, #112]
    12d8:	ldp	x21, x22, [sp, #32]
    12dc:	ldp	x29, x30, [sp], #48
    12e0:	ret
    12e4:	ldrb	w0, [x6]
    12e8:	cmp	w8, #0x1a
    12ec:	csel	w3, w5, w3, cc  // cc = lo, ul, last
    12f0:	sub	w1, w0, #0x41
    12f4:	cmp	w1, #0x1a
    12f8:	add	w1, w0, #0x20
    12fc:	csel	w0, w1, w0, cc  // cc = lo, ul, last
    1300:	cmp	w3, w0
    1304:	b.ne	1050 <kernel+0x1d8>  // b.any
    1308:	ldr	x0, [x21, #8]
    130c:	mov	w1, #0x6                   	// #6
    1310:	str	w1, [x0, #112]
    1314:	ldurb	w2, [x19, #-4]
    1318:	cbnz	w2, 1050 <kernel+0x1d8>
    131c:	b	ecc <kernel+0x54>
    1320:	sub	w1, w0, #0x41
    1324:	mov	w2, #0x0                   	// #0
    1328:	b	12b0 <kernel+0x438>
    132c:	sub	w1, w0, #0x41
    1330:	mov	w3, #0x0                   	// #0
    1334:	b	1274 <kernel+0x3fc>
    1338:	sub	w1, w0, #0x41
    133c:	mov	w3, #0x0                   	// #0
    1340:	b	12f4 <kernel+0x47c>
    1344:	sub	w0, w0, #0x41
    1348:	mov	w3, #0x0                   	// #0
    134c:	b	1238 <kernel+0x3c0>
    1350:	cmp	x20, #0x2
    1354:	b.le	ecc <kernel+0x54>
    1358:	b	f50 <kernel+0xd8>
    135c:	nop
	...

00000000000013b0 <syslinux_parse_real>:
    13b0:	stp	x29, x30, [sp, #-112]!
    13b4:	mov	w1, #0x33                  	// #51
    13b8:	mov	x29, sp
    13bc:	stp	x25, x26, [sp, #64]
    13c0:	mov	x26, x0
    13c4:	ldr	x0, [x0, #72]
    13c8:	stp	x19, x20, [sp, #16]
    13cc:	stp	x21, x22, [sp, #32]
    13d0:	mov	x21, #0x0                   	// #0
    13d4:	bl	0 <grub_file_open>
    13d8:	mov	x25, x0
    13dc:	cbz	x0, 17e8 <syslinux_parse_real+0x438>
    13e0:	stp	x23, x24, [sp, #48]
    13e4:	stp	x27, x28, [sp, #80]
    13e8:	mov	x0, x21
    13ec:	bl	0 <grub_free>
    13f0:	mov	x0, x25
    13f4:	bl	0 <grub_file_getline>
    13f8:	mov	x21, x0
    13fc:	cbz	x0, 18ac <syslinux_parse_real+0x4fc>
    1400:	bl	0 <grub_strlen>
    1404:	add	x0, x21, x0
    1408:	cmp	x21, x0
    140c:	b.cc	1420 <syslinux_parse_real+0x70>  // b.lo, b.ul, b.last
    1410:	b	1430 <syslinux_parse_real+0x80>
    1414:	sub	x0, x0, #0x1
    1418:	cmp	x21, x0
    141c:	b.eq	16cc <syslinux_parse_real+0x31c>  // b.none
    1420:	ldurb	w1, [x0, #-1]
    1424:	cmp	w1, #0xa
    1428:	ccmp	w1, #0xd, #0x4, ne  // ne = any
    142c:	b.eq	1414 <syslinux_parse_real+0x64>  // b.none
    1430:	strb	wzr, [x0]
    1434:	mov	x20, x21
    1438:	ldrb	w0, [x21]
    143c:	cbnz	w0, 144c <syslinux_parse_real+0x9c>
    1440:	b	168c <syslinux_parse_real+0x2dc>
    1444:	ldrb	w0, [x20, #1]!
    1448:	cbz	w0, 168c <syslinux_parse_real+0x2dc>
    144c:	bl	0 <grub_isspace>
    1450:	cbnz	w0, 1444 <syslinux_parse_real+0x94>
    1454:	ldrb	w0, [x20]
    1458:	mov	x19, x20
    145c:	cmp	w0, #0x23
    1460:	ccmp	w0, #0x0, #0x4, ne  // ne = any
    1464:	b.ne	1478 <syslinux_parse_real+0xc8>  // b.any
    1468:	b	168c <syslinux_parse_real+0x2dc>
    146c:	ldrb	w0, [x19]
    1470:	cbz	w0, 1484 <syslinux_parse_real+0xd4>
    1474:	ldrb	w0, [x19, #1]!
    1478:	bl	0 <grub_isspace>
    147c:	cbz	w0, 146c <syslinux_parse_real+0xbc>
    1480:	ldrb	w0, [x19]
    1484:	mov	x22, x19
    1488:	b	1498 <syslinux_parse_real+0xe8>
    148c:	ldrb	w0, [x22]
    1490:	cbz	w0, 14a4 <syslinux_parse_real+0xf4>
    1494:	ldrb	w0, [x22, #1]!
    1498:	bl	0 <grub_isspace>
    149c:	cbnz	w0, 148c <syslinux_parse_real+0xdc>
    14a0:	ldrb	w0, [x22]
    14a4:	mov	x23, x22
    14a8:	b	14b8 <syslinux_parse_real+0x108>
    14ac:	ldrb	w0, [x23]
    14b0:	cbz	w0, 14c4 <syslinux_parse_real+0x114>
    14b4:	ldrb	w0, [x23, #1]!
    14b8:	bl	0 <grub_isspace>
    14bc:	cbz	w0, 14ac <syslinux_parse_real+0xfc>
    14c0:	ldrb	w0, [x23]
    14c4:	mov	x24, x23
    14c8:	b	14d8 <syslinux_parse_real+0x128>
    14cc:	ldrb	w0, [x24]
    14d0:	cbz	w0, 14e0 <syslinux_parse_real+0x130>
    14d4:	ldrb	w0, [x24, #1]!
    14d8:	bl	0 <grub_isspace>
    14dc:	cbnz	w0, 14cc <syslinux_parse_real+0x11c>
    14e0:	sub	x19, x19, x20
    14e4:	mov	w28, #0x0                   	// #0
    14e8:	sub	x0, x19, #0x1
    14ec:	str	x0, [sp, #104]
    14f0:	sub	x0, x23, x22
    14f4:	str	x0, [sp, #96]
    14f8:	adrp	x0, 0 <grub_strcasecmp>
    14fc:	add	x0, x0, #0x0
    1500:	ldr	x27, [x0]
    1504:	b	1518 <syslinux_parse_real+0x168>
    1508:	add	w28, w28, #0x1
    150c:	add	x27, x27, #0x18
    1510:	cmp	w28, #0x1a
    1514:	b.eq	1728 <syslinux_parse_real+0x378>  // b.none
    1518:	ldr	x0, [x27]
    151c:	bl	0 <grub_strlen>
    1520:	cmp	x0, x19
    1524:	b.ne	1508 <syslinux_parse_real+0x158>  // b.any
    1528:	cbz	x19, 15b0 <syslinux_parse_real+0x200>
    152c:	ldr	x4, [x27]
    1530:	ldrb	w1, [x4]
    1534:	cbz	w1, 16d4 <syslinux_parse_real+0x324>
    1538:	ldr	x0, [sp, #104]
    153c:	mov	x5, x20
    1540:	add	x11, x4, x0
    1544:	b	1568 <syslinux_parse_real+0x1b8>
    1548:	cmp	w8, #0x1a
    154c:	csel	w2, w2, w1, cc  // cc = lo, ul, last
    1550:	cmp	w7, #0x1a
    1554:	csel	w0, w3, w0, cc  // cc = lo, ul, last
    1558:	cmp	w0, w2
    155c:	b.ne	1590 <syslinux_parse_real+0x1e0>  // b.any
    1560:	ldrb	w1, [x4, #1]!
    1564:	cbz	w1, 16d8 <syslinux_parse_real+0x328>
    1568:	ldrb	w0, [x5]
    156c:	add	w2, w1, #0x20
    1570:	sub	w8, w1, #0x41
    1574:	cmp	x4, x11
    1578:	sub	w7, w0, #0x41
    157c:	add	w3, w0, #0x20
    1580:	mov	w10, w0
    1584:	add	x5, x5, #0x1
    1588:	cbz	w0, 1508 <syslinux_parse_real+0x158>
    158c:	b.ne	1548 <syslinux_parse_real+0x198>  // b.any
    1590:	cmp	w8, #0x1a
    1594:	add	w0, w1, #0x20
    1598:	csel	w1, w0, w1, cc  // cc = lo, ul, last
    159c:	cmp	w7, #0x1a
    15a0:	add	w0, w10, #0x20
    15a4:	csel	w10, w0, w10, cc  // cc = lo, ul, last
    15a8:	cmp	w1, w10
    15ac:	b.ne	1508 <syslinux_parse_real+0x158>  // b.any
    15b0:	ldr	x0, [x27, #8]
    15b4:	cbz	x0, 189c <syslinux_parse_real+0x4ec>
    15b8:	bl	0 <grub_strlen>
    15bc:	ldr	x1, [sp, #96]
    15c0:	cmp	x0, x1
    15c4:	b.ne	1508 <syslinux_parse_real+0x158>  // b.any
    15c8:	mov	x0, x1
    15cc:	ldr	x4, [x27, #8]
    15d0:	cbz	x1, 16e8 <syslinux_parse_real+0x338>
    15d4:	ldrb	w1, [x4]
    15d8:	cbz	w1, 17d4 <syslinux_parse_real+0x424>
    15dc:	sub	x10, x0, #0x1
    15e0:	mov	x5, x22
    15e4:	add	x10, x4, x10
    15e8:	b	160c <syslinux_parse_real+0x25c>
    15ec:	cmp	w8, #0x1a
    15f0:	csel	w2, w2, w1, cc  // cc = lo, ul, last
    15f4:	cmp	w7, #0x1a
    15f8:	csel	w0, w3, w0, cc  // cc = lo, ul, last
    15fc:	cmp	w0, w2
    1600:	b.ne	1634 <syslinux_parse_real+0x284>  // b.any
    1604:	ldrb	w1, [x4, #1]!
    1608:	cbz	w1, 17d8 <syslinux_parse_real+0x428>
    160c:	ldrb	w0, [x5]
    1610:	add	w2, w1, #0x20
    1614:	sub	w8, w1, #0x41
    1618:	cmp	x4, x10
    161c:	sub	w7, w0, #0x41
    1620:	add	w3, w0, #0x20
    1624:	mov	w11, w0
    1628:	add	x5, x5, #0x1
    162c:	cbz	w0, 1508 <syslinux_parse_real+0x158>
    1630:	b.ne	15ec <syslinux_parse_real+0x23c>  // b.any
    1634:	cmp	w8, #0x1a
    1638:	add	w0, w1, #0x20
    163c:	csel	w1, w0, w1, cc  // cc = lo, ul, last
    1640:	cmp	w7, #0x1a
    1644:	add	w0, w11, #0x20
    1648:	csel	w11, w0, w11, cc  // cc = lo, ul, last
    164c:	cmp	w1, w11
    1650:	b.ne	1508 <syslinux_parse_real+0x158>  // b.any
    1654:	ubfiz	x0, x28, #1, #32
    1658:	add	x0, x0, w28, uxtw
    165c:	adrp	x1, 0 <grub_strcasecmp>
    1660:	add	x1, x1, #0x0
    1664:	ldr	x1, [x1]
    1668:	add	x0, x1, x0, lsl #3
    166c:	ldr	x2, [x0, #16]
    1670:	cbz	x2, 13e8 <syslinux_parse_real+0x38>
    1674:	mov	x0, x24
    1678:	mov	x1, x26
    167c:	blr	x2
    1680:	mov	w19, w0
    1684:	cbz	w0, 13e8 <syslinux_parse_real+0x38>
    1688:	b	16a4 <syslinux_parse_real+0x2f4>
    168c:	mov	x1, x20
    1690:	mov	x0, x26
    1694:	mov	w2, #0x1                   	// #1
    1698:	bl	398 <add_comment>
    169c:	mov	w19, w0
    16a0:	cbz	w0, 13e8 <syslinux_parse_real+0x38>
    16a4:	mov	x0, x25
    16a8:	bl	0 <grub_file_close>
    16ac:	ldp	x23, x24, [sp, #48]
    16b0:	ldp	x27, x28, [sp, #80]
    16b4:	mov	w0, w19
    16b8:	ldp	x19, x20, [sp, #16]
    16bc:	ldp	x21, x22, [sp, #32]
    16c0:	ldp	x25, x26, [sp, #64]
    16c4:	ldp	x29, x30, [sp], #112
    16c8:	ret
    16cc:	mov	x0, x21
    16d0:	b	1430 <syslinux_parse_real+0x80>
    16d4:	mov	x5, x20
    16d8:	ldrb	w10, [x5]
    16dc:	mov	w1, #0x0                   	// #0
    16e0:	sub	w7, w10, #0x41
    16e4:	b	159c <syslinux_parse_real+0x1ec>
    16e8:	adrp	x1, 0 <grub_strcasecmp>
    16ec:	add	x1, x1, #0x0
    16f0:	ubfiz	x0, x28, #1, #32
    16f4:	cmp	x4, #0x0
    16f8:	add	x0, x0, w28, uxtw
    16fc:	csel	x24, x24, x22, ne  // ne = any
    1700:	ldr	x1, [x1]
    1704:	add	x0, x1, x0, lsl #3
    1708:	ldr	x2, [x0, #16]
    170c:	cbz	x2, 13e8 <syslinux_parse_real+0x38>
    1710:	mov	x0, x24
    1714:	mov	x1, x26
    1718:	blr	x2
    171c:	mov	w19, w0
    1720:	cbz	w0, 13e8 <syslinux_parse_real+0x38>
    1724:	b	16a4 <syslinux_parse_real+0x2f4>
    1728:	cmp	x19, #0x4
    172c:	b.ne	1798 <syslinux_parse_real+0x3e8>  // b.any
    1730:	adrp	x1, 0 <grub_strcasecmp>
    1734:	add	x10, x20, #0x3
    1738:	mov	x2, x20
    173c:	mov	w0, #0x74                  	// #116
    1740:	ldr	x8, [x1]
    1744:	b	1770 <syslinux_parse_real+0x3c0>
    1748:	b.eq	180c <syslinux_parse_real+0x45c>  // b.none
    174c:	cmp	w7, #0x1a
    1750:	csel	w3, w3, w0, cc  // cc = lo, ul, last
    1754:	cmp	w6, #0x1a
    1758:	csel	w4, w4, w1, cc  // cc = lo, ul, last
    175c:	cmp	w4, w3
    1760:	b.ne	180c <syslinux_parse_real+0x45c>  // b.any
    1764:	ldrb	w0, [x8, #1]!
    1768:	cbz	w0, 18b4 <syslinux_parse_real+0x504>
    176c:	mov	x2, x9
    1770:	ldrb	w5, [x2]
    1774:	add	w3, w0, #0x20
    1778:	sub	w7, w0, #0x41
    177c:	cmp	x2, x10
    1780:	mov	w1, w5
    1784:	add	x9, x2, #0x1
    1788:	sub	w6, w5, #0x41
    178c:	add	w4, w5, #0x20
    1790:	cbnz	w5, 1748 <syslinux_parse_real+0x398>
    1794:	nop
    1798:	adrp	x1, 0 <grub_strcasecmp>
    179c:	mov	x0, x26
    17a0:	mov	w2, #0x0                   	// #0
    17a4:	ldr	x1, [x1]
    17a8:	bl	398 <add_comment>
    17ac:	mov	x1, x20
    17b0:	mov	x0, x26
    17b4:	mov	w2, #0x0                   	// #0
    17b8:	bl	398 <add_comment>
    17bc:	adrp	x1, 0 <grub_strcasecmp>
    17c0:	mov	x0, x26
    17c4:	mov	w2, #0x1                   	// #1
    17c8:	ldr	x1, [x1]
    17cc:	bl	398 <add_comment>
    17d0:	b	13e8 <syslinux_parse_real+0x38>
    17d4:	mov	x5, x22
    17d8:	ldrb	w11, [x5]
    17dc:	mov	w1, #0x0                   	// #0
    17e0:	sub	w7, w11, #0x41
    17e4:	b	1640 <syslinux_parse_real+0x290>
    17e8:	adrp	x0, 0 <grub_strcasecmp>
    17ec:	ldp	x21, x22, [sp, #32]
    17f0:	ldr	x0, [x0]
    17f4:	ldp	x25, x26, [sp, #64]
    17f8:	ldr	w19, [x0]
    17fc:	mov	w0, w19
    1800:	ldp	x19, x20, [sp, #16]
    1804:	ldp	x29, x30, [sp], #112
    1808:	ret
    180c:	cmp	w7, #0x1a
    1810:	add	w2, w0, #0x20
    1814:	csel	w0, w2, w0, cc  // cc = lo, ul, last
    1818:	cmp	w6, #0x1a
    181c:	add	w2, w1, #0x20
    1820:	csel	w1, w2, w1, cc  // cc = lo, ul, last
    1824:	cmp	w0, w1
    1828:	b.ne	1798 <syslinux_parse_real+0x3e8>  // b.any
    182c:	sub	x23, x23, x22
    1830:	cmp	x23, #0x4
    1834:	b.ne	1798 <syslinux_parse_real+0x3e8>  // b.any
    1838:	adrp	x1, 0 <grub_strcasecmp>
    183c:	add	x9, x22, #0x3
    1840:	mov	w0, #0x68                  	// #104
    1844:	ldr	x7, [x1]
    1848:	b	1874 <syslinux_parse_real+0x4c4>
    184c:	b.eq	18c0 <syslinux_parse_real+0x510>  // b.none
    1850:	cmp	w6, #0x1a
    1854:	csel	w2, w2, w0, cc  // cc = lo, ul, last
    1858:	cmp	w5, #0x1a
    185c:	csel	w3, w3, w1, cc  // cc = lo, ul, last
    1860:	cmp	w3, w2
    1864:	b.ne	18c0 <syslinux_parse_real+0x510>  // b.any
    1868:	ldrb	w0, [x7, #1]!
    186c:	cbz	w0, 1aec <syslinux_parse_real+0x73c>
    1870:	mov	x22, x8
    1874:	ldrb	w4, [x22]
    1878:	add	w2, w0, #0x20
    187c:	sub	w6, w0, #0x41
    1880:	cmp	x22, x9
    1884:	mov	w1, w4
    1888:	add	x8, x22, #0x1
    188c:	sub	w5, w4, #0x41
    1890:	add	w3, w4, #0x20
    1894:	cbnz	w4, 184c <syslinux_parse_real+0x49c>
    1898:	b	1798 <syslinux_parse_real+0x3e8>
    189c:	ubfiz	x0, x28, #1, #32
    18a0:	mov	x24, x22
    18a4:	add	x0, x0, w28, uxtw
    18a8:	b	165c <syslinux_parse_real+0x2ac>
    18ac:	mov	w19, #0x0                   	// #0
    18b0:	b	16a4 <syslinux_parse_real+0x2f4>
    18b4:	ldrb	w1, [x2, #1]
    18b8:	sub	w6, w1, #0x41
    18bc:	b	1818 <syslinux_parse_real+0x468>
    18c0:	cmp	w6, #0x1a
    18c4:	add	w2, w0, #0x20
    18c8:	csel	w0, w2, w0, cc  // cc = lo, ul, last
    18cc:	cmp	w5, #0x1a
    18d0:	add	w2, w1, #0x20
    18d4:	csel	w1, w2, w1, cc  // cc = lo, ul, last
    18d8:	cmp	w0, w1
    18dc:	b.ne	1798 <syslinux_parse_real+0x3e8>  // b.any
    18e0:	mov	x0, x24
    18e4:	bl	0 <grub_strdup>
    18e8:	mov	x22, x0
    18ec:	cbz	x0, 1adc <syslinux_parse_real+0x72c>
    18f0:	mov	x0, x24
    18f4:	bl	0 <grub_strlen>
    18f8:	mov	x20, x0
    18fc:	mov	x23, #0x0                   	// #0
    1900:	mov	x19, #0x0                   	// #0
    1904:	nop
    1908:	mov	x0, x19
    190c:	bl	0 <grub_free>
    1910:	mov	x0, x25
    1914:	bl	0 <grub_file_getline>
    1918:	mov	x19, x0
    191c:	cbz	x0, 1ad0 <syslinux_parse_real+0x720>
    1920:	ldrb	w0, [x0]
    1924:	mov	x24, x19
    1928:	cbnz	w0, 1938 <syslinux_parse_real+0x588>
    192c:	b	19a8 <syslinux_parse_real+0x5f8>
    1930:	ldrb	w0, [x24, #1]!
    1934:	cbz	w0, 19a8 <syslinux_parse_real+0x5f8>
    1938:	bl	0 <grub_isspace>
    193c:	cbnz	w0, 1930 <syslinux_parse_real+0x580>
    1940:	ldrb	w4, [x24]
    1944:	cbz	w4, 19a8 <syslinux_parse_real+0x5f8>
    1948:	adrp	x0, 0 <grub_strcasecmp>
    194c:	mov	x7, x24
    1950:	mov	w1, #0x65                  	// #101
    1954:	ldr	x5, [x0]
    1958:	add	x9, x5, #0x6
    195c:	nop
    1960:	sub	w8, w1, #0x41
    1964:	add	w3, w1, #0x20
    1968:	mov	w0, w4
    196c:	cmp	x5, x9
    1970:	add	w2, w4, #0x20
    1974:	sub	w6, w4, #0x41
    1978:	b.eq	1a30 <syslinux_parse_real+0x680>  // b.none
    197c:	cmp	w6, #0x1a
    1980:	csel	w2, w2, w0, cc  // cc = lo, ul, last
    1984:	cmp	w8, #0x1a
    1988:	csel	w1, w3, w1, cc  // cc = lo, ul, last
    198c:	cmp	w1, w2
    1990:	b.ne	1a94 <syslinux_parse_real+0x6e4>  // b.any
    1994:	ldrb	w4, [x7, #1]!
    1998:	ldrb	w1, [x5, #1]!
    199c:	cbz	w4, 1ab4 <syslinux_parse_real+0x704>
    19a0:	cbnz	w1, 1960 <syslinux_parse_real+0x5b0>
    19a4:	nop
    19a8:	mov	x0, x19
    19ac:	bl	0 <grub_strlen>
    19b0:	add	x1, x20, #0x1
    19b4:	add	x0, x1, x0
    19b8:	cmp	x0, x23
    19bc:	b.hi	19f0 <syslinux_parse_real+0x640>  // b.pmore
    19c0:	add	x4, x22, x20
    19c4:	mov	x1, x19
    19c8:	mov	x0, x4
    19cc:	nop
    19d0:	ldrb	w2, [x1]
    19d4:	mov	x3, x0
    19d8:	strb	w2, [x0], #1
    19dc:	ldrb	w2, [x1], #1
    19e0:	cbnz	w2, 19d0 <syslinux_parse_real+0x620>
    19e4:	sub	x3, x3, x4
    19e8:	add	x20, x20, x3
    19ec:	b	1908 <syslinux_parse_real+0x558>
    19f0:	lsl	x23, x0, #1
    19f4:	mov	x0, x22
    19f8:	mov	x1, x23
    19fc:	bl	0 <grub_realloc>
    1a00:	mov	x22, x0
    1a04:	cbnz	x0, 19c0 <syslinux_parse_real+0x610>
    1a08:	mov	x0, x19
    1a0c:	bl	0 <grub_free>
    1a10:	adrp	x0, 0 <grub_strcasecmp>
    1a14:	ldr	x0, [x0]
    1a18:	ldr	w0, [x0]
    1a1c:	cbz	w0, 13e8 <syslinux_parse_real+0x38>
    1a20:	mov	w19, #0x1                   	// #1
    1a24:	ldp	x23, x24, [sp, #48]
    1a28:	ldp	x27, x28, [sp, #80]
    1a2c:	b	16b4 <syslinux_parse_real+0x304>
    1a30:	cmp	w6, #0x19
    1a34:	mov	w1, #0x74                  	// #116
    1a38:	b.ls	1ac0 <syslinux_parse_real+0x710>  // b.plast
    1a3c:	nop
    1a40:	cmp	w1, w0
    1a44:	b.ne	19a8 <syslinux_parse_real+0x5f8>  // b.any
    1a48:	ldrb	w0, [x24, #7]
    1a4c:	add	x24, x24, #0x7
    1a50:	cbz	w0, 1a78 <syslinux_parse_real+0x6c8>
    1a54:	nop
    1a58:	bl	0 <grub_isspace>
    1a5c:	cbnz	w0, 1a70 <syslinux_parse_real+0x6c0>
    1a60:	ldrb	w0, [x24]
    1a64:	cmp	w0, #0xa
    1a68:	ccmp	w0, #0xd, #0x4, ne  // ne = any
    1a6c:	b.ne	1a8c <syslinux_parse_real+0x6dc>  // b.any
    1a70:	ldrb	w0, [x24, #1]!
    1a74:	cbnz	w0, 1a58 <syslinux_parse_real+0x6a8>
    1a78:	ldr	x1, [x26, #8]
    1a7c:	mov	x0, x19
    1a80:	str	x22, [x1, #72]
    1a84:	bl	0 <grub_free>
    1a88:	b	13e8 <syslinux_parse_real+0x38>
    1a8c:	cbnz	w0, 19a8 <syslinux_parse_real+0x5f8>
    1a90:	b	1a78 <syslinux_parse_real+0x6c8>
    1a94:	ldrb	w1, [x5]
    1a98:	cmp	w6, #0x19
    1a9c:	sub	w2, w1, #0x41
    1aa0:	b.ls	1ac8 <syslinux_parse_real+0x718>  // b.plast
    1aa4:	cmp	w2, #0x1a
    1aa8:	add	w2, w1, #0x20
    1aac:	csel	w1, w2, w1, cc  // cc = lo, ul, last
    1ab0:	b	1a40 <syslinux_parse_real+0x690>
    1ab4:	sub	w2, w1, #0x41
    1ab8:	mov	w0, #0x0                   	// #0
    1abc:	b	1aa4 <syslinux_parse_real+0x6f4>
    1ac0:	mov	w2, #0x33                  	// #51
    1ac4:	mov	w1, #0x74                  	// #116
    1ac8:	add	w0, w4, #0x20
    1acc:	b	1aa4 <syslinux_parse_real+0x6f4>
    1ad0:	bl	0 <grub_free>
    1ad4:	mov	x0, x22
    1ad8:	bl	0 <grub_free>
    1adc:	adrp	x0, 0 <grub_strcasecmp>
    1ae0:	ldr	x0, [x0]
    1ae4:	ldr	w0, [x0]
    1ae8:	b	1a1c <syslinux_parse_real+0x66c>
    1aec:	ldrb	w1, [x22, #1]
    1af0:	sub	w5, w1, #0x41
    1af4:	b	18cc <syslinux_parse_real+0x51c>
	...

0000000000001b30 <syslinux_parse>:
    1b30:	stp	x29, x30, [sp, #-48]!
    1b34:	mov	x2, x0
    1b38:	mov	x29, sp
    1b3c:	stp	x19, x20, [sp, #16]
    1b40:	mov	x19, x1
    1b44:	stp	x21, x22, [sp, #32]
    1b48:	ldrb	w0, [x0]
    1b4c:	ldr	x1, [x1, #40]
    1b50:	cmp	w0, #0x2f
    1b54:	ldr	x22, [x19, #72]
    1b58:	b.eq	1b60 <syslinux_parse+0x30>  // b.none
    1b5c:	ldr	x1, [x19, #56]
    1b60:	adrp	x0, 0 <grub_strcasecmp>
    1b64:	ldr	x0, [x0]
    1b68:	bl	0 <grub_xasprintf>
    1b6c:	mov	x20, x0
    1b70:	cbz	x0, 1bfc <syslinux_parse+0xcc>
    1b74:	str	x20, [x19, #72]
    1b78:	mov	x0, x19
    1b7c:	bl	13b0 <syslinux_parse_real>
    1b80:	mov	w21, w0
    1b84:	and	w0, w0, #0xfffffffd
    1b88:	cmp	w0, #0x5
    1b8c:	b.eq	1bb0 <syslinux_parse+0x80>  // b.none
    1b90:	mov	x0, x20
    1b94:	bl	0 <grub_free>
    1b98:	str	x22, [x19, #72]
    1b9c:	mov	w0, w21
    1ba0:	ldp	x19, x20, [sp, #16]
    1ba4:	ldp	x21, x22, [sp, #32]
    1ba8:	ldp	x29, x30, [sp], #48
    1bac:	ret
    1bb0:	adrp	x3, 0 <grub_strcasecmp>
    1bb4:	adrp	x1, 0 <grub_strcasecmp>
    1bb8:	mov	x0, x19
    1bbc:	mov	w2, #0x0                   	// #0
    1bc0:	ldr	x3, [x3]
    1bc4:	mov	w21, #0x0                   	// #0
    1bc8:	ldr	x1, [x1]
    1bcc:	str	wzr, [x3]
    1bd0:	bl	398 <add_comment>
    1bd4:	mov	x1, x20
    1bd8:	mov	x0, x19
    1bdc:	mov	w2, #0x0                   	// #0
    1be0:	bl	398 <add_comment>
    1be4:	adrp	x1, 0 <grub_strcasecmp>
    1be8:	mov	x0, x19
    1bec:	mov	w2, #0x1                   	// #1
    1bf0:	ldr	x1, [x1]
    1bf4:	bl	398 <add_comment>
    1bf8:	b	1b90 <syslinux_parse+0x60>
    1bfc:	adrp	x0, 0 <grub_strcasecmp>
    1c00:	ldp	x19, x20, [sp, #16]
    1c04:	ldr	x0, [x0]
    1c08:	ldr	w21, [x0]
    1c0c:	mov	w0, w21
    1c10:	ldp	x21, x22, [sp, #32]
    1c14:	ldp	x29, x30, [sp], #48
    1c18:	ret
    1c1c:	nop
	...

0000000000001c40 <write_entry>:
    1c40:	stp	x29, x30, [sp, #-128]!
    1c44:	mov	x29, sp
    1c48:	stp	x19, x20, [sp, #16]
    1c4c:	mov	x20, x0
    1c50:	ldr	x19, [x2, #80]
    1c54:	stp	x21, x22, [sp, #32]
    1c58:	mov	x21, x2
    1c5c:	mov	x22, x1
    1c60:	cbz	x19, 1c84 <write_entry+0x44>
    1c64:	mov	x0, x19
    1c68:	bl	0 <grub_strlen>
    1c6c:	mov	x1, x19
    1c70:	mov	x2, x0
    1c74:	mov	x0, x20
    1c78:	bl	d10 <print>
    1c7c:	mov	w19, w0
    1c80:	cbnz	w0, 1d74 <write_entry+0x134>
    1c84:	stp	x23, x24, [sp, #48]
    1c88:	ldr	x23, [x21, #104]
    1c8c:	cbz	x23, 1ca0 <write_entry+0x60>
    1c90:	ldr	x0, [x23]
    1c94:	cbz	x0, 2054 <write_entry+0x414>
    1c98:	mov	x23, x0
    1c9c:	cbnz	x23, 1c90 <write_entry+0x50>
    1ca0:	ldr	w0, [x21, #112]
    1ca4:	cmp	w0, #0x5
    1ca8:	b.eq	25ac <write_entry+0x96c>  // b.none
    1cac:	b.ls	1d88 <write_entry+0x148>  // b.plast
    1cb0:	cmp	w0, #0x9
    1cb4:	b.eq	2188 <write_entry+0x548>  // b.none
    1cb8:	b.ls	1dc8 <write_entry+0x188>  // b.plast
    1cbc:	cmp	w0, #0xa
    1cc0:	b.ne	1f8c <write_entry+0x34c>  // b.any
    1cc4:	ldr	x19, [x21, #32]
    1cc8:	ldrb	w0, [x19]
    1ccc:	cbnz	w0, 1cdc <write_entry+0x9c>
    1cd0:	b	25d0 <write_entry+0x990>
    1cd4:	ldrb	w0, [x19, #1]!
    1cd8:	cbz	w0, 25d0 <write_entry+0x990>
    1cdc:	bl	0 <grub_isspace>
    1ce0:	mov	w21, w0
    1ce4:	cbnz	w0, 1cd4 <write_entry+0x94>
    1ce8:	ldrb	w0, [x19]
    1cec:	cmp	w0, #0x2d
    1cf0:	b.ne	25d0 <write_entry+0x990>  // b.any
    1cf4:	mov	x1, #0x0                   	// #0
    1cf8:	add	x0, x19, #0x1
    1cfc:	mov	w2, #0x0                   	// #0
    1d00:	bl	0 <grub_strtoull>
    1d04:	mov	x1, #0x8000000000000000    	// #-9223372036854775808
    1d08:	cmp	x0, x1
    1d0c:	neg	x0, x0
    1d10:	b.hi	2654 <write_entry+0xa14>  // b.pmore
    1d14:	cmp	w0, #0x2
    1d18:	mov	w21, w0
    1d1c:	b.ls	2664 <write_entry+0xa24>  // b.plast
    1d20:	sub	w22, w0, #0x80
    1d24:	cmp	w22, #0x9
    1d28:	b.hi	25f8 <write_entry+0x9b8>  // b.pmore
    1d2c:	adrp	x1, 0 <grub_strcasecmp>
    1d30:	mov	x0, x20
    1d34:	mov	x2, #0x9                   	// #9
    1d38:	ldr	x1, [x1]
    1d3c:	bl	d10 <print>
    1d40:	mov	w19, w0
    1d44:	cbnz	w0, 1db0 <write_entry+0x170>
    1d48:	mov	w1, w22
    1d4c:	mov	x0, x20
    1d50:	bl	d70 <print_num>
    1d54:	cbnz	w0, 2640 <write_entry+0xa00>
    1d58:	adrp	x1, 0 <grub_strcasecmp>
    1d5c:	mov	x0, x20
    1d60:	mov	x2, #0x14                  	// #20
    1d64:	ldr	x1, [x1]
    1d68:	bl	d10 <print>
    1d6c:	mov	w19, w0
    1d70:	ldp	x23, x24, [sp, #48]
    1d74:	mov	w0, w19
    1d78:	ldp	x19, x20, [sp, #16]
    1d7c:	ldp	x21, x22, [sp, #32]
    1d80:	ldp	x29, x30, [sp], #128
    1d84:	ret
    1d88:	cmp	w0, #0x2
    1d8c:	b.eq	2134 <write_entry+0x4f4>  // b.none
    1d90:	b.ls	1fa8 <write_entry+0x368>  // b.plast
    1d94:	adrp	x1, 0 <grub_strcasecmp>
    1d98:	mov	x0, x20
    1d9c:	mov	x2, #0x1b                  	// #27
    1da0:	ldr	x1, [x1]
    1da4:	bl	d10 <print>
    1da8:	mov	w19, w0
    1dac:	cbz	w0, 21ac <write_entry+0x56c>
    1db0:	ldp	x23, x24, [sp, #48]
    1db4:	mov	w0, w19
    1db8:	ldp	x19, x20, [sp, #16]
    1dbc:	ldp	x21, x22, [sp, #32]
    1dc0:	ldp	x29, x30, [sp], #128
    1dc4:	ret
    1dc8:	cmp	w0, #0x7
    1dcc:	b.hi	1f84 <write_entry+0x344>  // b.pmore
    1dd0:	ldr	x23, [x21, #32]
    1dd4:	ldrb	w10, [x23]
    1dd8:	cbz	w10, 2d8c <write_entry+0x114c>
    1ddc:	mov	x1, x23
    1de0:	mov	w0, w10
    1de4:	mov	x2, #0x0                   	// #0
    1de8:	mov	w3, #0x5c                  	// #92
    1dec:	nop
    1df0:	cmp	w0, #0x2f
    1df4:	ccmp	w0, w3, #0x4, ne  // ne = any
    1df8:	csel	x2, x2, x1, ne  // ne = any
    1dfc:	ldrb	w0, [x1, #1]!
    1e00:	cbnz	w0, 1df0 <write_entry+0x1b0>
    1e04:	cbz	x2, 1e14 <write_entry+0x1d4>
    1e08:	ldrb	w10, [x2, #1]
    1e0c:	add	x23, x2, #0x1
    1e10:	cbz	w10, 2d8c <write_entry+0x114c>
    1e14:	mov	w1, w10
    1e18:	add	x9, x23, #0x1
    1e1c:	mov	x3, #0x0                   	// #0
    1e20:	mov	w0, #0x63                  	// #99
    1e24:	adrp	x8, 0 <grub_strcasecmp>
    1e28:	b	1e54 <write_entry+0x214>
    1e2c:	csel	w7, w4, w1, cc  // cc = lo, ul, last
    1e30:	cmp	w5, #0x1a
    1e34:	csel	w2, w2, w0, cc  // cc = lo, ul, last
    1e38:	cmp	w2, w7
    1e3c:	b.ne	2694 <write_entry+0xa54>  // b.any
    1e40:	ldrb	w1, [x9, x3]
    1e44:	add	x3, x3, #0x1
    1e48:	ldr	x0, [x8]
    1e4c:	ldrb	w0, [x3, x0]
    1e50:	cbz	w1, 2a5c <write_entry+0xe1c>
    1e54:	sub	w6, w1, #0x41
    1e58:	add	w4, w1, #0x20
    1e5c:	sub	w5, w0, #0x41
    1e60:	add	w2, w0, #0x20
    1e64:	cmp	w6, #0x1a
    1e68:	cbnz	w0, 1e2c <write_entry+0x1ec>
    1e6c:	adrp	x1, 0 <grub_strcasecmp>
    1e70:	mov	w0, w10
    1e74:	mov	x5, x23
    1e78:	mov	w2, #0x6d                  	// #109
    1e7c:	ldr	x4, [x1]
    1e80:	sub	w6, w0, #0x41
    1e84:	sub	w7, w2, #0x41
    1e88:	cmp	w6, #0x1a
    1e8c:	add	w1, w0, #0x20
    1e90:	add	w3, w2, #0x20
    1e94:	csel	w1, w1, w0, cc  // cc = lo, ul, last
    1e98:	cmp	w7, #0x1a
    1e9c:	csel	w2, w3, w2, cc  // cc = lo, ul, last
    1ea0:	mov	w7, w0
    1ea4:	cmp	w2, w1
    1ea8:	b.ne	2ac4 <write_entry+0xe84>  // b.any
    1eac:	ldrb	w0, [x5, #1]!
    1eb0:	ldrb	w2, [x4, #1]!
    1eb4:	cbz	w0, 2abc <write_entry+0xe7c>
    1eb8:	cbnz	w2, 1e80 <write_entry+0x240>
    1ebc:	sub	w1, w0, #0x41
    1ec0:	cmp	w1, #0x19
    1ec4:	b.hi	21dc <write_entry+0x59c>  // b.pmore
    1ec8:	add	w7, w0, #0x20
    1ecc:	sub	w1, w2, #0x41
    1ed0:	add	w0, w2, #0x20
    1ed4:	cmp	w1, #0x1a
    1ed8:	csel	w2, w0, w2, cc  // cc = lo, ul, last
    1edc:	cmp	w7, w2
    1ee0:	b.ne	21dc <write_entry+0x59c>  // b.any
    1ee4:	ldr	x23, [x21, #56]
    1ee8:	ldrb	w0, [x23]
    1eec:	cbz	w0, 1f8c <write_entry+0x34c>
    1ef0:	add	x24, x22, #0x40
    1ef4:	add	x22, x22, #0x30
    1ef8:	stp	x25, x26, [sp, #64]
    1efc:	mov	w26, #0x1                   	// #1
    1f00:	mov	w19, w26
    1f04:	adrp	x25, 0 <grub_strcasecmp>
    1f08:	mov	x21, x23
    1f0c:	b	1f18 <write_entry+0x2d8>
    1f10:	ldrb	w0, [x21, #1]!
    1f14:	cbz	w0, 1f20 <write_entry+0x2e0>
    1f18:	bl	0 <grub_isspace>
    1f1c:	cbz	w0, 1f10 <write_entry+0x2d0>
    1f20:	add	x0, x23, #0x2
    1f24:	cmp	x21, x0
    1f28:	b.eq	23a4 <write_entry+0x764>  // b.none
    1f2c:	cbz	w19, 20f8 <write_entry+0x4b8>
    1f30:	cbz	w26, 20c4 <write_entry+0x484>
    1f34:	adrp	x1, 0 <grub_strcasecmp>
    1f38:	mov	x0, x20
    1f3c:	mov	x2, #0xc                   	// #12
    1f40:	ldr	x1, [x1]
    1f44:	bl	d10 <print>
    1f48:	mov	w19, w0
    1f4c:	cbnz	w0, 20dc <write_entry+0x49c>
    1f50:	mov	x3, x23
    1f54:	mov	x4, x21
    1f58:	mov	x2, x24
    1f5c:	mov	x1, x22
    1f60:	mov	x0, x20
    1f64:	bl	dc8 <print_file.isra.0>
    1f68:	cbnz	w0, 210c <write_entry+0x4cc>
    1f6c:	mov	w26, #0x0                   	// #0
    1f70:	mov	w19, #0x0                   	// #0
    1f74:	ldrb	w0, [x21]
    1f78:	cbz	w0, 2d64 <write_entry+0x1124>
    1f7c:	mov	x23, x21
    1f80:	b	1f08 <write_entry+0x2c8>
    1f84:	cmp	w0, #0x8
    1f88:	b.eq	1d94 <write_entry+0x154>  // b.none
    1f8c:	mov	w19, #0x0                   	// #0
    1f90:	mov	w0, w19
    1f94:	ldp	x19, x20, [sp, #16]
    1f98:	ldp	x21, x22, [sp, #32]
    1f9c:	ldp	x23, x24, [sp, #48]
    1fa0:	ldp	x29, x30, [sp], #128
    1fa4:	ret
    1fa8:	cbz	w0, 1d94 <write_entry+0x154>
    1fac:	cmp	w0, #0x1
    1fb0:	b.ne	1f8c <write_entry+0x34c>  // b.any
    1fb4:	ldr	x23, [x21, #56]
    1fb8:	cbz	x23, 23e0 <write_entry+0x7a0>
    1fbc:	add	x19, x23, #0x1
    1fc0:	adrp	x24, 0 <grub_strcasecmp>
    1fc4:	nop
    1fc8:	ldrb	w0, [x23]
    1fcc:	cbz	w0, 23e0 <write_entry+0x7a0>
    1fd0:	ldr	x1, [x21, #56]
    1fd4:	cmp	x1, x23
    1fd8:	b.eq	1ff0 <write_entry+0x3b0>  // b.none
    1fdc:	ldurb	w0, [x23, #-1]
    1fe0:	bl	0 <grub_isspace>
    1fe4:	cbz	w0, 2048 <write_entry+0x408>
    1fe8:	ldrb	w0, [x23]
    1fec:	cbz	w0, 2048 <write_entry+0x408>
    1ff0:	mov	x2, #0x0                   	// #0
    1ff4:	mov	w1, #0x69                  	// #105
    1ff8:	b	2030 <write_entry+0x3f0>
    1ffc:	cmp	x2, #0x6
    2000:	b.eq	2550 <write_entry+0x910>  // b.none
    2004:	cmp	w6, #0x1a
    2008:	csel	w3, w3, w0, cc  // cc = lo, ul, last
    200c:	cmp	w5, #0x1a
    2010:	csel	w4, w4, w1, cc  // cc = lo, ul, last
    2014:	cmp	w4, w3
    2018:	b.ne	2550 <write_entry+0x910>  // b.any
    201c:	ldrb	w0, [x19, x2]
    2020:	add	x2, x2, #0x1
    2024:	ldr	x1, [x24]
    2028:	ldrb	w1, [x2, x1]
    202c:	cbz	w0, 25a0 <write_entry+0x960>
    2030:	add	w3, w0, #0x20
    2034:	sub	w5, w1, #0x41
    2038:	add	w4, w1, #0x20
    203c:	sub	w6, w0, #0x41
    2040:	cbnz	w1, 1ffc <write_entry+0x3bc>
    2044:	nop
    2048:	add	x23, x23, #0x1
    204c:	add	x19, x19, #0x1
    2050:	b	1fc8 <write_entry+0x388>
    2054:	adrp	x24, 0 <grub_strcasecmp>
    2058:	stp	x25, x26, [sp, #64]
    205c:	adrp	x25, 0 <grub_strcasecmp>
    2060:	b	20ac <write_entry+0x46c>
    2064:	ldr	x1, [x24]
    2068:	bl	d10 <print>
    206c:	mov	w19, w0
    2070:	cbnz	w0, 20dc <write_entry+0x49c>
    2074:	add	x1, x23, #0x10
    2078:	mov	x2, #0x0                   	// #0
    207c:	mov	x0, x20
    2080:	bl	5c8 <print_escaped>
    2084:	mov	x2, #0x1                   	// #1
    2088:	mov	w1, w0
    208c:	mov	x0, x20
    2090:	cbnz	w1, 210c <write_entry+0x4cc>
    2094:	ldr	x1, [x25]
    2098:	bl	d10 <print>
    209c:	mov	w19, w0
    20a0:	cbnz	w0, 20dc <write_entry+0x49c>
    20a4:	ldr	x23, [x23, #8]
    20a8:	cbz	x23, 20bc <write_entry+0x47c>
    20ac:	ldr	x1, [x23, #8]
    20b0:	mov	x0, x20
    20b4:	mov	x2, #0x5                   	// #5
    20b8:	cbnz	x1, 2064 <write_entry+0x424>
    20bc:	ldp	x25, x26, [sp, #64]
    20c0:	b	1ca0 <write_entry+0x60>
    20c4:	ldr	x1, [x25]
    20c8:	mov	x0, x20
    20cc:	mov	x2, #0x9                   	// #9
    20d0:	bl	d10 <print>
    20d4:	mov	w19, w0
    20d8:	cbz	w0, 1f50 <write_entry+0x310>
    20dc:	mov	w0, w19
    20e0:	ldp	x19, x20, [sp, #16]
    20e4:	ldp	x21, x22, [sp, #32]
    20e8:	ldp	x23, x24, [sp, #48]
    20ec:	ldp	x25, x26, [sp, #64]
    20f0:	ldp	x29, x30, [sp], #128
    20f4:	ret
    20f8:	mov	x1, x23
    20fc:	mov	x2, x21
    2100:	mov	x0, x20
    2104:	bl	5c8 <print_escaped>
    2108:	cbz	w0, 1f74 <write_entry+0x334>
    210c:	adrp	x0, 0 <grub_strcasecmp>
    2110:	ldp	x21, x22, [sp, #32]
    2114:	ldr	x0, [x0]
    2118:	ldp	x23, x24, [sp, #48]
    211c:	ldr	w19, [x0]
    2120:	ldp	x25, x26, [sp, #64]
    2124:	mov	w0, w19
    2128:	ldp	x19, x20, [sp, #16]
    212c:	ldp	x29, x30, [sp], #128
    2130:	ret
    2134:	adrp	x1, 0 <grub_strcasecmp>
    2138:	mov	x0, x20
    213c:	mov	x2, #0xe                   	// #14
    2140:	ldr	x1, [x1]
    2144:	bl	d10 <print>
    2148:	mov	w19, w0
    214c:	cbnz	w0, 1db0 <write_entry+0x170>
    2150:	ldr	x3, [x21, #32]
    2154:	add	x2, x22, #0x40
    2158:	add	x1, x22, #0x30
    215c:	mov	x0, x20
    2160:	mov	x4, #0x0                   	// #0
    2164:	bl	dc8 <print_file.isra.0>
    2168:	adrp	x1, 0 <grub_strcasecmp>
    216c:	mov	x0, x20
    2170:	mov	x2, #0x1                   	// #1
    2174:	ldr	x1, [x1]
    2178:	bl	d10 <print>
    217c:	mov	w19, w0
    2180:	ldp	x23, x24, [sp, #48]
    2184:	b	1d74 <write_entry+0x134>
    2188:	ldr	x3, [x21, #56]
    218c:	cbz	x3, 2a98 <write_entry+0xe58>
    2190:	ldr	x2, [x21, #32]
    2194:	mov	x1, x22
    2198:	mov	x0, x20
    219c:	mov	w19, #0x0                   	// #0
    21a0:	bl	39e8 <print_config>
    21a4:	ldp	x23, x24, [sp, #48]
    21a8:	b	1d74 <write_entry+0x134>
    21ac:	ldr	w1, [x21, #112]
    21b0:	mov	x0, x20
    21b4:	bl	d70 <print_num>
    21b8:	cbnz	w0, 2640 <write_entry+0xa00>
    21bc:	adrp	x1, 0 <grub_strcasecmp>
    21c0:	mov	x0, x20
    21c4:	mov	x2, #0x7                   	// #7
    21c8:	ldr	x1, [x1]
    21cc:	bl	d10 <print>
    21d0:	mov	w19, w0
    21d4:	ldp	x23, x24, [sp, #48]
    21d8:	b	1d74 <write_entry+0x134>
    21dc:	adrp	x2, 0 <grub_strcasecmp>
    21e0:	mov	x5, x23
    21e4:	mov	w0, w10
    21e8:	mov	w1, #0x69                  	// #105
    21ec:	ldr	x4, [x2]
    21f0:	sub	w6, w0, #0x41
    21f4:	sub	w7, w1, #0x41
    21f8:	cmp	w6, #0x1a
    21fc:	add	w2, w0, #0x20
    2200:	add	w3, w1, #0x20
    2204:	csel	w2, w2, w0, cc  // cc = lo, ul, last
    2208:	cmp	w7, #0x1a
    220c:	csel	w1, w3, w1, cc  // cc = lo, ul, last
    2210:	mov	w7, w0
    2214:	cmp	w1, w2
    2218:	b.ne	2b68 <write_entry+0xf28>  // b.any
    221c:	ldrb	w0, [x5, #1]!
    2220:	ldrb	w1, [x4, #1]!
    2224:	cbz	w0, 2b60 <write_entry+0xf20>
    2228:	cbnz	w1, 21f0 <write_entry+0x5b0>
    222c:	sub	w1, w0, #0x41
    2230:	cmp	w1, #0x19
    2234:	b.hi	2b00 <write_entry+0xec0>  // b.pmore
    2238:	ldrb	w1, [x4]
    223c:	add	w7, w0, #0x20
    2240:	sub	w2, w1, #0x41
    2244:	add	w0, w1, #0x20
    2248:	cmp	w2, #0x1a
    224c:	csel	w1, w0, w1, cc  // cc = lo, ul, last
    2250:	cmp	w7, w1
    2254:	b.ne	2b00 <write_entry+0xec0>  // b.any
    2258:	stp	x25, x26, [sp, #64]
    225c:	ldr	x21, [x21, #56]
    2260:	b	2268 <write_entry+0x628>
    2264:	add	x21, x21, #0x1
    2268:	ldrb	w0, [x21]
    226c:	bl	0 <grub_isspace>
    2270:	cbnz	w0, 2264 <write_entry+0x624>
    2274:	ldrb	w0, [x21]
    2278:	mov	x25, x21
    227c:	cbnz	w0, 228c <write_entry+0x64c>
    2280:	b	2298 <write_entry+0x658>
    2284:	ldrb	w0, [x25, #1]!
    2288:	cbz	w0, 2298 <write_entry+0x658>
    228c:	bl	0 <grub_isspace>
    2290:	cbz	w0, 2284 <write_entry+0x644>
    2294:	ldrb	w0, [x25]
    2298:	mov	x19, x25
    229c:	b	22a4 <write_entry+0x664>
    22a0:	ldrb	w0, [x19, #1]!
    22a4:	bl	0 <grub_isspace>
    22a8:	cbnz	w0, 22a0 <write_entry+0x660>
    22ac:	ldrb	w0, [x19]
    22b0:	mov	x24, #0x0                   	// #0
    22b4:	mov	x23, #0x0                   	// #0
    22b8:	cmp	w0, #0x2d
    22bc:	b.ne	22c8 <write_entry+0x688>  // b.any
    22c0:	b	2cbc <write_entry+0x107c>
    22c4:	ldrb	w0, [x19, #1]!
    22c8:	bl	0 <grub_isspace>
    22cc:	cbnz	w0, 22c4 <write_entry+0x684>
    22d0:	ldrb	w0, [x19]
    22d4:	cmp	w0, #0x2d
    22d8:	b.eq	2bc0 <write_entry+0xf80>  // b.none
    22dc:	strb	wzr, [x25]
    22e0:	cbz	x24, 22ec <write_entry+0x6ac>
    22e4:	strb	wzr, [x24]
    22e8:	mov	x24, #0x0                   	// #0
    22ec:	adrp	x1, 0 <grub_strcasecmp>
    22f0:	mov	x0, x20
    22f4:	mov	x2, #0x21                  	// #33
    22f8:	ldr	x1, [x1]
    22fc:	bl	d10 <print>
    2300:	mov	w19, w0
    2304:	cbnz	w0, 20dc <write_entry+0x49c>
    2308:	mov	x2, x21
    230c:	mov	x1, x22
    2310:	mov	x0, x20
    2314:	bl	3450 <print_entry>
    2318:	cbnz	w0, 210c <write_entry+0x4cc>
    231c:	cbz	x24, 2350 <write_entry+0x710>
    2320:	adrp	x1, 0 <grub_strcasecmp>
    2324:	mov	x0, x20
    2328:	mov	x2, #0x1d                  	// #29
    232c:	ldr	x1, [x1]
    2330:	bl	d10 <print>
    2334:	mov	w19, w0
    2338:	cbnz	w0, 20dc <write_entry+0x49c>
    233c:	mov	x2, x24
    2340:	mov	x1, x22
    2344:	mov	x0, x20
    2348:	bl	3450 <print_entry>
    234c:	cbnz	w0, 210c <write_entry+0x4cc>
    2350:	adrp	x1, 0 <grub_strcasecmp>
    2354:	mov	x0, x20
    2358:	mov	x2, #0x5                   	// #5
    235c:	ldr	x1, [x1]
    2360:	bl	d10 <print>
    2364:	mov	w19, w0
    2368:	cbnz	w0, 20dc <write_entry+0x49c>
    236c:	mov	x2, x23
    2370:	mov	x1, x22
    2374:	mov	x0, x20
    2378:	bl	3450 <print_entry>
    237c:	cbnz	w0, 210c <write_entry+0x4cc>
    2380:	adrp	x1, 0 <grub_strcasecmp>
    2384:	mov	x0, x20
    2388:	mov	x2, #0x3                   	// #3
    238c:	ldr	x1, [x1]
    2390:	bl	d10 <print>
    2394:	mov	w19, w0
    2398:	ldp	x23, x24, [sp, #48]
    239c:	ldp	x25, x26, [sp, #64]
    23a0:	b	1d74 <write_entry+0x134>
    23a4:	ldrb	w0, [x23]
    23a8:	cmp	w0, #0x2d
    23ac:	b.ne	1f2c <write_entry+0x2ec>  // b.any
    23b0:	ldrb	w0, [x23, #1]
    23b4:	cmp	w0, #0x2d
    23b8:	b.ne	1f2c <write_entry+0x2ec>  // b.any
    23bc:	adrp	x1, 0 <grub_strcasecmp>
    23c0:	mov	x0, x20
    23c4:	mov	x2, #0x1                   	// #1
    23c8:	ldr	x1, [x1]
    23cc:	bl	d10 <print>
    23d0:	mov	w19, w0
    23d4:	cbnz	w0, 20dc <write_entry+0x49c>
    23d8:	mov	w19, #0x1                   	// #1
    23dc:	b	1f74 <write_entry+0x334>
    23e0:	mov	x24, #0x0                   	// #0
    23e4:	mov	x23, #0x0                   	// #0
    23e8:	adrp	x1, 0 <grub_strcasecmp>
    23ec:	mov	x0, x20
    23f0:	mov	x2, #0x4e                  	// #78
    23f4:	ldr	x1, [x1]
    23f8:	bl	d10 <print>
    23fc:	mov	w19, w0
    2400:	cbnz	w0, 1db0 <write_entry+0x170>
    2404:	adrp	x1, 0 <grub_strcasecmp>
    2408:	mov	x0, x20
    240c:	mov	x2, #0x15                  	// #21
    2410:	ldr	x1, [x1]
    2414:	bl	d10 <print>
    2418:	mov	w19, w0
    241c:	cbnz	w0, 1db0 <write_entry+0x170>
    2420:	ldr	x3, [x21, #32]
    2424:	stp	x25, x26, [sp, #64]
    2428:	add	x25, x22, #0x30
    242c:	add	x22, x22, #0x40
    2430:	mov	x1, x25
    2434:	mov	x2, x22
    2438:	mov	x4, #0x0                   	// #0
    243c:	mov	x0, x20
    2440:	bl	dc8 <print_file.isra.0>
    2444:	adrp	x1, 0 <grub_strcasecmp>
    2448:	mov	x0, x20
    244c:	mov	x2, #0x1                   	// #1
    2450:	ldr	x26, [x1]
    2454:	mov	x1, x26
    2458:	bl	d10 <print>
    245c:	mov	w19, w0
    2460:	cbnz	w0, 20dc <write_entry+0x49c>
    2464:	ldr	x19, [x21, #56]
    2468:	cbz	x19, 248c <write_entry+0x84c>
    246c:	mov	x0, x19
    2470:	bl	0 <grub_strlen>
    2474:	mov	x1, x19
    2478:	mov	x2, x0
    247c:	mov	x0, x20
    2480:	bl	d10 <print>
    2484:	mov	w19, w0
    2488:	cbnz	w0, 20dc <write_entry+0x49c>
    248c:	stp	x27, x28, [sp, #80]
    2490:	adrp	x27, 0 <grub_strcasecmp>
    2494:	mov	x0, x20
    2498:	ldr	x1, [x27]
    249c:	mov	x2, #0x1                   	// #1
    24a0:	bl	d10 <print>
    24a4:	mov	w19, w0
    24a8:	cbnz	w0, 2540 <write_entry+0x900>
    24ac:	cbz	x23, 2b78 <write_entry+0xf38>
    24b0:	adrp	x1, 0 <grub_strcasecmp>
    24b4:	mov	x0, x20
    24b8:	mov	x2, #0x16                  	// #22
    24bc:	ldr	x1, [x1]
    24c0:	bl	d10 <print>
    24c4:	mov	w19, w0
    24c8:	cbnz	w0, 2540 <write_entry+0x900>
    24cc:	mov	x4, x24
    24d0:	mov	x3, x23
    24d4:	mov	x2, x22
    24d8:	mov	x1, x25
    24dc:	mov	x0, x20
    24e0:	bl	dc8 <print_file.isra.0>
    24e4:	mov	x1, x26
    24e8:	mov	x0, x20
    24ec:	mov	x2, #0x1                   	// #1
    24f0:	bl	d10 <print>
    24f4:	mov	w19, w0
    24f8:	cbnz	w0, 2540 <write_entry+0x900>
    24fc:	ldr	x21, [x21, #40]
    2500:	cbnz	x21, 2510 <write_entry+0x8d0>
    2504:	b	2c20 <write_entry+0xfe0>
    2508:	ldr	x21, [x21]
    250c:	cbz	x21, 2c20 <write_entry+0xfe0>
    2510:	ldr	x3, [x21, #8]
    2514:	mov	x4, #0x0                   	// #0
    2518:	mov	x2, x22
    251c:	mov	x1, x25
    2520:	mov	x0, x20
    2524:	bl	dc8 <print_file.isra.0>
    2528:	mov	x1, x26
    252c:	mov	x0, x20
    2530:	mov	x2, #0x1                   	// #1
    2534:	bl	d10 <print>
    2538:	mov	w19, w0
    253c:	cbz	w0, 2508 <write_entry+0x8c8>
    2540:	ldp	x23, x24, [sp, #48]
    2544:	ldp	x25, x26, [sp, #64]
    2548:	ldp	x27, x28, [sp, #80]
    254c:	b	1d74 <write_entry+0x134>
    2550:	cmp	w6, #0x1a
    2554:	add	w2, w0, #0x20
    2558:	csel	w2, w2, w0, cc  // cc = lo, ul, last
    255c:	cmp	w5, #0x1a
    2560:	add	w0, w1, #0x20
    2564:	csel	w1, w0, w1, cc  // cc = lo, ul, last
    2568:	cmp	w2, w1
    256c:	b.ne	2048 <write_entry+0x408>  // b.any
    2570:	ldrb	w0, [x23]
    2574:	cbz	w0, 23e0 <write_entry+0x7a0>
    2578:	ldrb	w0, [x23, #7]
    257c:	add	x23, x23, #0x7
    2580:	mov	x24, x23
    2584:	cbnz	w0, 2594 <write_entry+0x954>
    2588:	b	23e8 <write_entry+0x7a8>
    258c:	ldrb	w0, [x24, #1]!
    2590:	cbz	w0, 23e8 <write_entry+0x7a8>
    2594:	bl	0 <grub_isspace>
    2598:	cbz	w0, 258c <write_entry+0x94c>
    259c:	b	23e8 <write_entry+0x7a8>
    25a0:	sub	w5, w1, #0x41
    25a4:	mov	w2, #0x0                   	// #0
    25a8:	b	255c <write_entry+0x91c>
    25ac:	adrp	x1, 0 <grub_strcasecmp>
    25b0:	mov	x0, x20
    25b4:	mov	x2, #0x14                  	// #20
    25b8:	ldr	x1, [x1]
    25bc:	bl	d10 <print>
    25c0:	mov	w19, w0
    25c4:	cbz	w0, 2150 <write_entry+0x510>
    25c8:	ldp	x23, x24, [sp, #48]
    25cc:	b	1db4 <write_entry+0x174>
    25d0:	mov	x0, x19
    25d4:	mov	w2, #0x0                   	// #0
    25d8:	mov	x1, #0x0                   	// #0
    25dc:	bl	0 <grub_strtoull>
    25e0:	tbz	x0, #63, 1d14 <write_entry+0xd4>
    25e4:	adrp	x1, 0 <grub_strcasecmp>
    25e8:	mov	w0, #0xb                   	// #11
    25ec:	mov	w21, #0xffffffff            	// #-1
    25f0:	ldr	x1, [x1]
    25f4:	bl	0 <grub_error>
    25f8:	adrp	x1, 0 <grub_strcasecmp>
    25fc:	mov	x0, x20
    2600:	mov	x2, #0x1f                  	// #31
    2604:	ldr	x1, [x1]
    2608:	bl	d10 <print>
    260c:	mov	w19, w0
    2610:	cbnz	w0, 1db0 <write_entry+0x170>
    2614:	adrp	x1, 0 <grub_strcasecmp>
    2618:	mov	x0, x20
    261c:	mov	x2, #0x7                   	// #7
    2620:	ldr	x1, [x1]
    2624:	bl	d10 <print>
    2628:	mov	w19, w0
    262c:	cbnz	w0, 1db0 <write_entry+0x170>
    2630:	mov	w1, w21
    2634:	mov	x0, x20
    2638:	bl	d70 <print_num>
    263c:	cbz	w0, 2168 <write_entry+0x528>
    2640:	adrp	x0, 0 <grub_strcasecmp>
    2644:	ldp	x23, x24, [sp, #48]
    2648:	ldr	x0, [x0]
    264c:	ldr	w19, [x0]
    2650:	b	1d74 <write_entry+0x134>
    2654:	adrp	x1, 0 <grub_strcasecmp>
    2658:	mov	w0, #0xb                   	// #11
    265c:	ldr	x1, [x1]
    2660:	bl	0 <grub_error>
    2664:	adrp	x1, 0 <grub_strcasecmp>
    2668:	mov	x0, x20
    266c:	mov	x2, #0x9                   	// #9
    2670:	ldr	x1, [x1]
    2674:	bl	d10 <print>
    2678:	mov	w19, w0
    267c:	cbnz	w0, 1db0 <write_entry+0x170>
    2680:	mov	w1, w21
    2684:	mov	x0, x20
    2688:	bl	d70 <print_num>
    268c:	cbnz	w0, 2640 <write_entry+0xa00>
    2690:	b	1d58 <write_entry+0x118>
    2694:	cmp	w6, #0x1a
    2698:	stp	x25, x26, [sp, #64]
    269c:	csel	w1, w4, w1, cc  // cc = lo, ul, last
    26a0:	stp	x27, x28, [sp, #80]
    26a4:	cmp	w5, #0x1a
    26a8:	add	w2, w0, #0x20
    26ac:	csel	w0, w2, w0, cc  // cc = lo, ul, last
    26b0:	cmp	w1, w0
    26b4:	b.ne	2d44 <write_entry+0x1104>  // b.any
    26b8:	ldr	x0, [x21, #56]
    26bc:	str	x0, [sp, #96]
    26c0:	ldrb	w0, [x0]
    26c4:	cbz	w0, 2ba0 <write_entry+0xf60>
    26c8:	mov	w24, #0xffffffff            	// #-1
    26cc:	mov	w21, #0x0                   	// #0
    26d0:	mov	w26, w24
    26d4:	mov	w25, #0x0                   	// #0
    26d8:	mov	x23, #0x0                   	// #0
    26dc:	adrp	x19, 0 <grub_strcasecmp>
    26e0:	adrp	x27, 0 <grub_strcasecmp>
    26e4:	b	26f8 <write_entry+0xab8>
    26e8:	ldr	x0, [sp, #96]
    26ec:	add	x1, x0, #0x1
    26f0:	str	x1, [sp, #96]
    26f4:	ldrb	w0, [x0, #1]
    26f8:	bl	0 <grub_isspace>
    26fc:	cbnz	w0, 26e8 <write_entry+0xaa8>
    2700:	ldr	x0, [sp, #96]
    2704:	ldrb	w8, [x0]
    2708:	cmp	w8, #0x68
    270c:	b.eq	29e8 <write_entry+0xda8>  // b.none
    2710:	mov	w2, w8
    2714:	cbz	w8, 27d4 <write_entry+0xb94>
    2718:	add	x9, x0, #0x1
    271c:	mov	x3, #0x0                   	// #0
    2720:	mov	w1, #0x66                  	// #102
    2724:	b	275c <write_entry+0xb1c>
    2728:	cmp	x3, #0x4
    272c:	b.eq	28f8 <write_entry+0xcb8>  // b.none
    2730:	cmp	w7, #0x1a
    2734:	csel	w4, w4, w2, cc  // cc = lo, ul, last
    2738:	cmp	w6, #0x1a
    273c:	csel	w5, w5, w1, cc  // cc = lo, ul, last
    2740:	cmp	w5, w4
    2744:	b.ne	28f8 <write_entry+0xcb8>  // b.any
    2748:	ldrb	w2, [x9, x3]
    274c:	add	x3, x3, #0x1
    2750:	ldr	x1, [x19]
    2754:	ldrb	w1, [x3, x1]
    2758:	cbz	w2, 29fc <write_entry+0xdbc>
    275c:	add	w4, w2, #0x20
    2760:	sub	w6, w1, #0x41
    2764:	add	w5, w1, #0x20
    2768:	sub	w7, w2, #0x41
    276c:	cbnz	w1, 2728 <write_entry+0xae8>
    2770:	cbz	w8, 27d4 <write_entry+0xb94>
    2774:	ldr	x5, [x27]
    2778:	mov	x9, x0
    277c:	mov	w6, w8
    2780:	mov	w1, #0x73                  	// #115
    2784:	add	x11, x5, #0x3
    2788:	sub	w10, w1, #0x41
    278c:	add	w4, w1, #0x20
    2790:	mov	w2, w6
    2794:	cmp	x5, x11
    2798:	add	w3, w6, #0x20
    279c:	sub	w7, w6, #0x41
    27a0:	b.eq	2a08 <write_entry+0xdc8>  // b.none
    27a4:	cmp	w7, #0x1a
    27a8:	csel	w3, w3, w2, cc  // cc = lo, ul, last
    27ac:	cmp	w10, #0x1a
    27b0:	csel	w1, w4, w1, cc  // cc = lo, ul, last
    27b4:	cmp	w1, w3
    27b8:	b.ne	2a44 <write_entry+0xe04>  // b.any
    27bc:	ldrb	w6, [x9, #1]!
    27c0:	ldrb	w1, [x5, #1]!
    27c4:	cbz	w6, 2a2c <write_entry+0xdec>
    27c8:	cbnz	w1, 2788 <write_entry+0xb48>
    27cc:	cmp	w8, #0x66
    27d0:	b.eq	2a6c <write_entry+0xe2c>  // b.none
    27d4:	sub	w8, w8, #0x30
    27d8:	cmp	w8, #0x9
    27dc:	b.hi	2968 <write_entry+0xd28>  // b.pmore
    27e0:	add	x1, sp, #0x60
    27e4:	mov	w2, #0x0                   	// #0
    27e8:	bl	0 <grub_strtoul>
    27ec:	mov	w24, w0
    27f0:	ldr	x0, [sp, #96]
    27f4:	ldrb	w0, [x0]
    27f8:	cbnz	w0, 26f8 <write_entry+0xab8>
    27fc:	cmn	w26, #0x1
    2800:	b.eq	2ba0 <write_entry+0xf60>  // b.none
    2804:	cbnz	w26, 2af4 <write_entry+0xeb4>
    2808:	adrp	x0, 0 <grub_strcasecmp>
    280c:	ldr	x1, [x0]
    2810:	mov	x0, x20
    2814:	mov	x2, #0x7                   	// #7
    2818:	bl	d10 <print>
    281c:	mov	w19, w0
    2820:	cbnz	w0, 2540 <write_entry+0x900>
    2824:	mov	w1, w25
    2828:	mov	x0, x20
    282c:	bl	d70 <print_num>
    2830:	cbnz	w0, 2ca0 <write_entry+0x1060>
    2834:	cmn	w24, #0x1
    2838:	b.eq	2868 <write_entry+0xc28>  // b.none
    283c:	adrp	x1, 0 <grub_strcasecmp>
    2840:	mov	x0, x20
    2844:	mov	x2, #0x1                   	// #1
    2848:	ldr	x1, [x1]
    284c:	bl	d10 <print>
    2850:	mov	w19, w0
    2854:	cbnz	w0, 2540 <write_entry+0x900>
    2858:	add	w1, w24, #0x1
    285c:	mov	x0, x20
    2860:	bl	d70 <print_num>
    2864:	cbnz	w0, 2ca0 <write_entry+0x1060>
    2868:	adrp	x24, 0 <grub_strcasecmp>
    286c:	mov	x0, x20
    2870:	mov	x2, #0x2                   	// #2
    2874:	ldr	x1, [x24]
    2878:	bl	d10 <print>
    287c:	mov	w19, w0
    2880:	cbnz	w0, 2540 <write_entry+0x900>
    2884:	cbz	x23, 2d6c <write_entry+0x112c>
    2888:	adrp	x1, 0 <grub_strcasecmp>
    288c:	mov	x0, x20
    2890:	mov	x2, #0xe                   	// #14
    2894:	ldr	x1, [x1]
    2898:	bl	d10 <print>
    289c:	mov	w19, w0
    28a0:	cbnz	w0, 2540 <write_entry+0x900>
    28a4:	mov	x3, x23
    28a8:	add	x2, x22, #0x40
    28ac:	add	x1, x22, #0x30
    28b0:	mov	x4, #0x0                   	// #0
    28b4:	mov	x0, x20
    28b8:	bl	dc8 <print_file.isra.0>
    28bc:	ldr	x1, [x24]
    28c0:	mov	x0, x20
    28c4:	mov	x2, #0x2                   	// #2
    28c8:	bl	d10 <print>
    28cc:	mov	w19, w0
    28d0:	cbnz	w0, 2540 <write_entry+0x900>
    28d4:	cbz	w21, 29d4 <write_entry+0xd94>
    28d8:	adrp	x1, 0 <grub_strcasecmp>
    28dc:	mov	x0, x20
    28e0:	mov	x2, #0x19                  	// #25
    28e4:	ldr	x1, [x1]
    28e8:	bl	d10 <print>
    28ec:	mov	w19, w0
    28f0:	cbz	w0, 29d4 <write_entry+0xd94>
    28f4:	b	2540 <write_entry+0x900>
    28f8:	cmp	w7, #0x1a
    28fc:	add	w3, w2, #0x20
    2900:	csel	w3, w3, w2, cc  // cc = lo, ul, last
    2904:	cmp	w6, #0x1a
    2908:	add	w2, w1, #0x20
    290c:	csel	w1, w2, w1, cc  // cc = lo, ul, last
    2910:	cmp	w3, w1
    2914:	b.ne	2770 <write_entry+0xb30>  // b.any
    2918:	add	x23, x0, #0x5
    291c:	str	x23, [sp, #96]
    2920:	ldrb	w0, [x0, #5]
    2924:	cbnz	w0, 2940 <write_entry+0xd00>
    2928:	b	27fc <write_entry+0xbbc>
    292c:	ldr	x0, [sp, #96]
    2930:	add	x1, x0, #0x1
    2934:	str	x1, [sp, #96]
    2938:	ldrb	w0, [x0, #1]
    293c:	cbz	w0, 27fc <write_entry+0xbbc>
    2940:	bl	0 <grub_isspace>
    2944:	cbz	w0, 292c <write_entry+0xcec>
    2948:	ldr	x0, [sp, #96]
    294c:	ldrb	w1, [x0]
    2950:	cbz	w1, 27fc <write_entry+0xbbc>
    2954:	strb	wzr, [x0]
    2958:	ldr	x0, [sp, #96]
    295c:	add	x0, x0, #0x1
    2960:	str	x0, [sp, #96]
    2964:	b	27f4 <write_entry+0xbb4>
    2968:	adrp	x1, 0 <grub_strcasecmp>
    296c:	mov	x0, x20
    2970:	mov	x2, #0x17                  	// #23
    2974:	ldr	x1, [x1]
    2978:	bl	d10 <print>
    297c:	mov	w19, w0
    2980:	cbnz	w0, 2540 <write_entry+0x900>
    2984:	ldr	x27, [sp, #96]
    2988:	mov	x0, x27
    298c:	bl	0 <grub_strlen>
    2990:	mov	x1, x27
    2994:	mov	x2, x0
    2998:	mov	x0, x20
    299c:	bl	d10 <print>
    29a0:	cbnz	w0, 2540 <write_entry+0x900>
    29a4:	adrp	x1, 0 <grub_strcasecmp>
    29a8:	mov	x0, x20
    29ac:	mov	x2, #0x1                   	// #1
    29b0:	ldr	x1, [x1]
    29b4:	bl	d10 <print>
    29b8:	mov	w19, w0
    29bc:	cbnz	w0, 2540 <write_entry+0x900>
    29c0:	cmn	w26, #0x1
    29c4:	b.eq	2ba0 <write_entry+0xf60>  // b.none
    29c8:	ldr	x0, [sp, #96]
    29cc:	ldrb	w0, [x0]
    29d0:	cbz	w0, 2804 <write_entry+0xbc4>
    29d4:	mov	w19, #0x0                   	// #0
    29d8:	ldp	x23, x24, [sp, #48]
    29dc:	ldp	x25, x26, [sp, #64]
    29e0:	ldp	x27, x28, [sp, #80]
    29e4:	b	1d74 <write_entry+0x134>
    29e8:	ldrb	w1, [x0, #1]
    29ec:	cmp	w1, #0x64
    29f0:	b.eq	2ad4 <write_entry+0xe94>  // b.none
    29f4:	mov	w2, w8
    29f8:	b	2718 <write_entry+0xad8>
    29fc:	sub	w6, w1, #0x41
    2a00:	mov	w3, #0x0                   	// #0
    2a04:	b	2904 <write_entry+0xcc4>
    2a08:	cmp	w7, #0x19
    2a0c:	mov	w1, #0x70                  	// #112
    2a10:	b.ls	2aac <write_entry+0xe6c>  // b.plast
    2a14:	cmp	w1, w2
    2a18:	b.ne	27cc <write_entry+0xb8c>  // b.any
    2a1c:	add	x0, x0, #0x4
    2a20:	mov	w21, #0x1                   	// #1
    2a24:	str	x0, [sp, #96]
    2a28:	b	27f4 <write_entry+0xbb4>
    2a2c:	sub	w3, w1, #0x41
    2a30:	mov	w2, #0x0                   	// #0
    2a34:	cmp	w3, #0x1a
    2a38:	add	w3, w1, #0x20
    2a3c:	csel	w1, w3, w1, cc  // cc = lo, ul, last
    2a40:	b	2a14 <write_entry+0xdd4>
    2a44:	ldrb	w1, [x5]
    2a48:	cmp	w7, #0x19
    2a4c:	sub	w3, w1, #0x41
    2a50:	b.hi	2a34 <write_entry+0xdf4>  // b.pmore
    2a54:	add	w2, w6, #0x20
    2a58:	b	2a34 <write_entry+0xdf4>
    2a5c:	sub	w5, w0, #0x41
    2a60:	stp	x25, x26, [sp, #64]
    2a64:	stp	x27, x28, [sp, #80]
    2a68:	b	26a4 <write_entry+0xa64>
    2a6c:	ldrb	w1, [x0, #1]
    2a70:	cmp	w1, #0x64
    2a74:	b.ne	2968 <write_entry+0xd28>  // b.any
    2a78:	add	x0, x0, #0x2
    2a7c:	add	x1, sp, #0x60
    2a80:	mov	w2, #0x0                   	// #0
    2a84:	bl	0 <grub_strtoul>
    2a88:	mov	w26, #0x1                   	// #1
    2a8c:	mov	w25, w0
    2a90:	ldr	x0, [sp, #96]
    2a94:	b	27f4 <write_entry+0xbb4>
    2a98:	ldr	x3, [x21, #64]
    2a9c:	cbnz	x3, 2190 <write_entry+0x550>
    2aa0:	adrp	x0, 0 <grub_strcasecmp>
    2aa4:	ldr	x3, [x0]
    2aa8:	b	2190 <write_entry+0x550>
    2aac:	add	w2, w6, #0x20
    2ab0:	mov	w3, #0x2f                  	// #47
    2ab4:	mov	w1, #0x70                  	// #112
    2ab8:	b	2a34 <write_entry+0xdf4>
    2abc:	mov	w7, #0x0                   	// #0
    2ac0:	b	1ecc <write_entry+0x28c>
    2ac4:	ldrb	w2, [x4]
    2ac8:	cmp	w6, #0x19
    2acc:	b.ls	1ec8 <write_entry+0x288>  // b.plast
    2ad0:	b	1ecc <write_entry+0x28c>
    2ad4:	add	x0, x0, #0x2
    2ad8:	add	x1, sp, #0x60
    2adc:	mov	w2, #0x0                   	// #0
    2ae0:	bl	0 <grub_strtoul>
    2ae4:	mov	w26, #0x0                   	// #0
    2ae8:	mov	w25, w0
    2aec:	ldr	x0, [sp, #96]
    2af0:	b	27f4 <write_entry+0xbb4>
    2af4:	adrp	x0, 0 <grub_strcasecmp>
    2af8:	ldr	x1, [x0]
    2afc:	b	2810 <write_entry+0xbd0>
    2b00:	adrp	x1, 0 <grub_strcasecmp>
    2b04:	mov	x4, x23
    2b08:	mov	w0, #0x72                  	// #114
    2b0c:	ldr	x2, [x1]
    2b10:	sub	w6, w10, #0x41
    2b14:	sub	w3, w0, #0x41
    2b18:	cmp	w6, #0x1a
    2b1c:	add	w1, w10, #0x20
    2b20:	add	w5, w0, #0x20
    2b24:	csel	w1, w1, w10, cc  // cc = lo, ul, last
    2b28:	cmp	w3, #0x1a
    2b2c:	csel	w0, w5, w0, cc  // cc = lo, ul, last
    2b30:	mov	w3, w10
    2b34:	cmp	w0, w1
    2b38:	b.ne	2c90 <write_entry+0x1050>  // b.any
    2b3c:	ldrb	w10, [x4, #1]!
    2b40:	ldrb	w0, [x2, #1]!
    2b44:	cbz	w10, 2c50 <write_entry+0x1010>
    2b48:	cbnz	w0, 2b10 <write_entry+0xed0>
    2b4c:	sub	w0, w10, #0x41
    2b50:	cmp	w0, #0x19
    2b54:	b.hi	2d10 <write_entry+0x10d0>  // b.pmore
    2b58:	add	w3, w10, #0x20
    2b5c:	b	2c54 <write_entry+0x1014>
    2b60:	mov	w7, #0x0                   	// #0
    2b64:	b	2240 <write_entry+0x600>
    2b68:	ldrb	w1, [x4]
    2b6c:	cmp	w6, #0x19
    2b70:	b.ls	2238 <write_entry+0x5f8>  // b.plast
    2b74:	b	2240 <write_entry+0x600>
    2b78:	ldr	x0, [x21, #40]
    2b7c:	cbz	x0, 2c44 <write_entry+0x1004>
    2b80:	adrp	x1, 0 <grub_strcasecmp>
    2b84:	mov	x0, x20
    2b88:	mov	x2, #0x16                  	// #22
    2b8c:	ldr	x1, [x1]
    2b90:	bl	d10 <print>
    2b94:	mov	w19, w0
    2b98:	cbz	w0, 24fc <write_entry+0x8bc>
    2b9c:	b	2540 <write_entry+0x900>
    2ba0:	adrp	x1, 0 <grub_strcasecmp>
    2ba4:	mov	x0, x20
    2ba8:	mov	x2, #0x17                  	// #23
    2bac:	ldr	x1, [x1]
    2bb0:	bl	d10 <print>
    2bb4:	mov	w19, w0
    2bb8:	cbz	w0, 29d4 <write_entry+0xd94>
    2bbc:	b	2540 <write_entry+0x900>
    2bc0:	ldrb	w0, [x19, #1]
    2bc4:	add	x19, x19, #0x2
    2bc8:	cmp	w0, #0x2d
    2bcc:	b.ne	22dc <write_entry+0x69c>  // b.any
    2bd0:	b	2bd8 <write_entry+0xf98>
    2bd4:	add	x19, x19, #0x1
    2bd8:	ldrb	w0, [x19]
    2bdc:	bl	0 <grub_isspace>
    2be0:	cbnz	w0, 2bd4 <write_entry+0xf94>
    2be4:	ldrb	w0, [x19]
    2be8:	mov	x26, x19
    2bec:	cbnz	w0, 2bfc <write_entry+0xfbc>
    2bf0:	b	2c04 <write_entry+0xfc4>
    2bf4:	ldrb	w0, [x26, #1]!
    2bf8:	cbz	w0, 2c04 <write_entry+0xfc4>
    2bfc:	bl	0 <grub_isspace>
    2c00:	cbz	w0, 2bf4 <write_entry+0xfb4>
    2c04:	strb	wzr, [x25]
    2c08:	cbz	x24, 2c10 <write_entry+0xfd0>
    2c0c:	strb	wzr, [x24]
    2c10:	mov	x24, x23
    2c14:	mov	x23, x19
    2c18:	strb	wzr, [x26]
    2c1c:	b	22ec <write_entry+0x6ac>
    2c20:	ldr	x1, [x27]
    2c24:	mov	x0, x20
    2c28:	mov	x2, #0x1                   	// #1
    2c2c:	bl	d10 <print>
    2c30:	mov	w19, w0
    2c34:	ldp	x23, x24, [sp, #48]
    2c38:	ldp	x25, x26, [sp, #64]
    2c3c:	ldp	x27, x28, [sp, #80]
    2c40:	b	1d74 <write_entry+0x134>
    2c44:	ldp	x25, x26, [sp, #64]
    2c48:	ldp	x27, x28, [sp, #80]
    2c4c:	b	1f8c <write_entry+0x34c>
    2c50:	mov	w3, #0x0                   	// #0
    2c54:	ldrb	w0, [x2]
    2c58:	sub	w2, w0, #0x41
    2c5c:	add	w1, w0, #0x20
    2c60:	cmp	w2, #0x1a
    2c64:	csel	w0, w1, w0, cc  // cc = lo, ul, last
    2c68:	cmp	w0, w3
    2c6c:	b.ne	2d10 <write_entry+0x10d0>  // b.any
    2c70:	adrp	x1, 0 <grub_strcasecmp>
    2c74:	mov	x0, x20
    2c78:	mov	x2, #0x9                   	// #9
    2c7c:	ldr	x1, [x1]
    2c80:	bl	d10 <print>
    2c84:	mov	w19, w0
    2c88:	ldp	x23, x24, [sp, #48]
    2c8c:	b	1d74 <write_entry+0x134>
    2c90:	cmp	w6, #0x19
    2c94:	b.hi	2c54 <write_entry+0x1014>  // b.pmore
    2c98:	add	w3, w10, #0x20
    2c9c:	b	2c54 <write_entry+0x1014>
    2ca0:	adrp	x0, 0 <grub_strcasecmp>
    2ca4:	ldp	x23, x24, [sp, #48]
    2ca8:	ldr	x0, [x0]
    2cac:	ldp	x25, x26, [sp, #64]
    2cb0:	ldr	w19, [x0]
    2cb4:	ldp	x27, x28, [sp, #80]
    2cb8:	b	1d74 <write_entry+0x134>
    2cbc:	ldrb	w1, [x19, #1]
    2cc0:	cmp	w1, #0x2d
    2cc4:	b.ne	22c8 <write_entry+0x688>  // b.any
    2cc8:	add	x23, x19, #0x2
    2ccc:	b	2cd4 <write_entry+0x1094>
    2cd0:	add	x23, x23, #0x1
    2cd4:	ldrb	w0, [x23]
    2cd8:	bl	0 <grub_isspace>
    2cdc:	cbnz	w0, 2cd0 <write_entry+0x1090>
    2ce0:	ldrb	w0, [x23]
    2ce4:	mov	x19, x23
    2ce8:	mov	x24, x23
    2cec:	cbnz	w0, 2cfc <write_entry+0x10bc>
    2cf0:	b	22c8 <write_entry+0x688>
    2cf4:	ldrb	w0, [x19, #1]!
    2cf8:	cbz	w0, 3280 <write_entry+0x1640>
    2cfc:	bl	0 <grub_isspace>
    2d00:	cbz	w0, 2cf4 <write_entry+0x10b4>
    2d04:	ldrb	w0, [x19]
    2d08:	mov	x24, x19
    2d0c:	b	22c8 <write_entry+0x688>
    2d10:	adrp	x1, 0 <grub_strcasecmp>
    2d14:	mov	x0, x23
    2d18:	ldr	x1, [x1]
    2d1c:	bl	0 <grub_strcasecmp>
    2d20:	cbnz	w0, 2d98 <write_entry+0x1158>
    2d24:	adrp	x1, 0 <grub_strcasecmp>
    2d28:	mov	x0, x20
    2d2c:	mov	x2, #0x7                   	// #7
    2d30:	ldr	x1, [x1]
    2d34:	bl	d10 <print>
    2d38:	mov	w19, w0
    2d3c:	ldp	x23, x24, [sp, #48]
    2d40:	b	1d74 <write_entry+0x134>
    2d44:	adrp	x1, 0 <grub_strcasecmp>
    2d48:	mov	w0, w10
    2d4c:	mov	x5, x23
    2d50:	mov	w2, #0x6d                  	// #109
    2d54:	ldr	x4, [x1]
    2d58:	ldp	x25, x26, [sp, #64]
    2d5c:	ldp	x27, x28, [sp, #80]
    2d60:	b	1e80 <write_entry+0x240>
    2d64:	ldp	x25, x26, [sp, #64]
    2d68:	b	1f8c <write_entry+0x34c>
    2d6c:	adrp	x1, 0 <grub_strcasecmp>
    2d70:	mov	x0, x20
    2d74:	mov	x2, #0x11                  	// #17
    2d78:	ldr	x1, [x1]
    2d7c:	bl	d10 <print>
    2d80:	mov	w19, w0
    2d84:	cbz	w0, 28d4 <write_entry+0xc94>
    2d88:	b	2540 <write_entry+0x900>
    2d8c:	mov	w3, #0x0                   	// #0
    2d90:	mov	w0, #0x72                  	// #114
    2d94:	b	2c68 <write_entry+0x1028>
    2d98:	adrp	x1, 0 <grub_strcasecmp>
    2d9c:	mov	x0, x23
    2da0:	ldr	x1, [x1]
    2da4:	bl	0 <grub_strcasecmp>
    2da8:	cbnz	w0, 317c <write_entry+0x153c>
    2dac:	adrp	x2, 0 <grub_strcasecmp>
    2db0:	adrp	x1, 0 <grub_strcasecmp>
    2db4:	adrp	x0, 0 <grub_strcasecmp>
    2db8:	stp	x27, x28, [sp, #80]
    2dbc:	mov	w23, #0x1                   	// #1
    2dc0:	ldr	x27, [x21, #56]
    2dc4:	ldr	x2, [x2]
    2dc8:	ldr	x1, [x1]
    2dcc:	stp	x2, x1, [sp, #104]
    2dd0:	ldr	x0, [x0]
    2dd4:	str	x0, [sp, #120]
    2dd8:	ldrb	w28, [x27]
    2ddc:	cbz	w28, 302c <write_entry+0x13ec>
    2de0:	adrp	x24, 0 <grub_strcasecmp>
    2de4:	stp	x25, x26, [sp, #64]
    2de8:	add	x25, sp, #0x60
    2dec:	adrp	x26, 0 <grub_strcasecmp>
    2df0:	b	2df8 <write_entry+0x11b8>
    2df4:	ldrb	w28, [x27, #1]!
    2df8:	mov	w0, w28
    2dfc:	bl	0 <grub_isspace>
    2e00:	cbnz	w0, 2df4 <write_entry+0x11b4>
    2e04:	ldrb	w0, [x27]
    2e08:	cbz	w0, 30b8 <write_entry+0x1478>
    2e0c:	adrp	x3, 0 <grub_strcasecmp>
    2e10:	mov	x9, x27
    2e14:	mov	w2, w0
    2e18:	mov	w1, #0x2d                  	// #45
    2e1c:	ldr	x5, [x3]
    2e20:	add	x10, x5, #0x4
    2e24:	nop
    2e28:	add	w4, w2, #0x20
    2e2c:	sub	w8, w1, #0x41
    2e30:	add	w3, w1, #0x20
    2e34:	mov	w6, w2
    2e38:	cmp	x5, x10
    2e3c:	sub	w7, w2, #0x41
    2e40:	b.eq	303c <write_entry+0x13fc>  // b.none
    2e44:	cmp	w7, #0x1a
    2e48:	csel	w4, w4, w2, cc  // cc = lo, ul, last
    2e4c:	cmp	w8, #0x1a
    2e50:	csel	w1, w3, w1, cc  // cc = lo, ul, last
    2e54:	cmp	w1, w4
    2e58:	b.ne	307c <write_entry+0x143c>  // b.any
    2e5c:	ldrb	w2, [x9, #1]!
    2e60:	ldrb	w1, [x5, #1]!
    2e64:	cbz	w2, 3074 <write_entry+0x1434>
    2e68:	cbnz	w1, 2e28 <write_entry+0x11e8>
    2e6c:	sub	w3, w2, #0x41
    2e70:	cmp	w3, #0x19
    2e74:	b.ls	3048 <write_entry+0x1408>  // b.plast
    2e78:	adrp	x3, 0 <grub_strcasecmp>
    2e7c:	mov	x7, x27
    2e80:	mov	w2, w0
    2e84:	mov	w1, #0x2d                  	// #45
    2e88:	ldr	x5, [x3]
    2e8c:	adrp	x3, 0 <grub_strcasecmp>
    2e90:	ldr	x10, [x3]
    2e94:	add	w4, w2, #0x20
    2e98:	sub	w9, w1, #0x41
    2e9c:	add	w3, w1, #0x20
    2ea0:	mov	w6, w2
    2ea4:	cmp	x5, x10
    2ea8:	sub	w8, w2, #0x41
    2eac:	b.eq	308c <write_entry+0x144c>  // b.none
    2eb0:	cmp	w8, #0x1a
    2eb4:	csel	w4, w4, w2, cc  // cc = lo, ul, last
    2eb8:	cmp	w9, #0x1a
    2ebc:	csel	w1, w3, w1, cc  // cc = lo, ul, last
    2ec0:	cmp	w1, w4
    2ec4:	b.ne	3114 <write_entry+0x14d4>  // b.any
    2ec8:	ldrb	w2, [x7, #1]!
    2ecc:	ldrb	w1, [x5, #1]!
    2ed0:	cbz	w2, 310c <write_entry+0x14cc>
    2ed4:	cbnz	w1, 2e94 <write_entry+0x1254>
    2ed8:	sub	w3, w2, #0x41
    2edc:	cmp	w3, #0x19
    2ee0:	b.ls	3098 <write_entry+0x1458>  // b.plast
    2ee4:	adrp	x3, 0 <grub_strcasecmp>
    2ee8:	mov	x8, x27
    2eec:	mov	w2, w0
    2ef0:	mov	w1, #0x2d                  	// #45
    2ef4:	ldr	x5, [x3]
    2ef8:	adrp	x3, 0 <grub_strcasecmp>
    2efc:	ldr	x10, [x3]
    2f00:	add	w4, w2, #0x20
    2f04:	sub	w9, w1, #0x41
    2f08:	add	w3, w1, #0x20
    2f0c:	mov	w6, w2
    2f10:	cmp	x5, x10
    2f14:	sub	w7, w2, #0x41
    2f18:	b.eq	3130 <write_entry+0x14f0>  // b.none
    2f1c:	cmp	w7, #0x1a
    2f20:	csel	w4, w4, w2, cc  // cc = lo, ul, last
    2f24:	cmp	w9, #0x1a
    2f28:	csel	w1, w3, w1, cc  // cc = lo, ul, last
    2f2c:	cmp	w1, w4
    2f30:	b.ne	30d0 <write_entry+0x1490>  // b.any
    2f34:	ldrb	w2, [x8, #1]!
    2f38:	ldrb	w1, [x5, #1]!
    2f3c:	cbz	w2, 3140 <write_entry+0x1500>
    2f40:	cbnz	w1, 2f00 <write_entry+0x12c0>
    2f44:	sub	w1, w2, #0x41
    2f48:	mov	x21, x27
    2f4c:	cmp	w1, #0x19
    2f50:	b.hi	2f60 <write_entry+0x1320>  // b.pmore
    2f54:	b	30dc <write_entry+0x149c>
    2f58:	ldrb	w0, [x21, #1]!
    2f5c:	cbz	w0, 2f68 <write_entry+0x1328>
    2f60:	bl	0 <grub_isspace>
    2f64:	cbz	w0, 2f58 <write_entry+0x1318>
    2f68:	ldrb	w28, [x21]
    2f6c:	strb	wzr, [x21]
    2f70:	ldr	w0, [x22, #104]
    2f74:	cbnz	w0, 3010 <write_entry+0x13d0>
    2f78:	cmp	w23, #0x1
    2f7c:	b.eq	3148 <write_entry+0x1508>  // b.none
    2f80:	ldr	x1, [x26]
    2f84:	mov	x0, x20
    2f88:	mov	x2, #0x1b                  	// #27
    2f8c:	bl	d10 <print>
    2f90:	mov	w19, w0
    2f94:	cbnz	w0, 2540 <write_entry+0x900>
    2f98:	ubfiz	x0, x23, #3, #2
    2f9c:	ldr	x19, [x25, x0]
    2fa0:	mov	x0, x19
    2fa4:	bl	0 <grub_strlen>
    2fa8:	mov	x1, x19
    2fac:	mov	x2, x0
    2fb0:	mov	x0, x20
    2fb4:	bl	d10 <print>
    2fb8:	mov	w19, w0
    2fbc:	cbnz	w0, 2540 <write_entry+0x900>
    2fc0:	ldr	x1, [x24]
    2fc4:	mov	x0, x20
    2fc8:	mov	x2, #0xf                   	// #15
    2fcc:	bl	d10 <print>
    2fd0:	mov	w19, w0
    2fd4:	cbnz	w0, 2540 <write_entry+0x900>
    2fd8:	str	w23, [x22, #104]
    2fdc:	mov	x2, x27
    2fe0:	mov	x1, x22
    2fe4:	mov	x0, x20
    2fe8:	bl	3450 <print_entry>
    2fec:	str	wzr, [x22, #104]
    2ff0:	adrp	x0, 0 <grub_strcasecmp>
    2ff4:	mov	x2, #0x3                   	// #3
    2ff8:	ldr	x1, [x0]
    2ffc:	mov	x0, x20
    3000:	bl	d10 <print>
    3004:	mov	w19, w0
    3008:	cbnz	w0, 2540 <write_entry+0x900>
    300c:	ldr	w0, [x22, #104]
    3010:	cmp	w0, #0x0
    3014:	ccmp	w0, w23, #0x0, ne  // ne = any
    3018:	b.eq	3168 <write_entry+0x1528>  // b.none
    301c:	mov	x27, x21
    3020:	strb	w28, [x21]
    3024:	cbnz	w28, 2df8 <write_entry+0x11b8>
    3028:	ldp	x25, x26, [sp, #64]
    302c:	mov	w19, #0x0                   	// #0
    3030:	ldp	x23, x24, [sp, #48]
    3034:	ldp	x27, x28, [sp, #80]
    3038:	b	1d74 <write_entry+0x134>
    303c:	cmp	w7, #0x19
    3040:	mov	w1, #0x2d                  	// #45
    3044:	b.hi	305c <write_entry+0x141c>  // b.pmore
    3048:	add	w6, w2, #0x20
    304c:	sub	w3, w1, #0x41
    3050:	add	w2, w1, #0x20
    3054:	cmp	w3, #0x1a
    3058:	csel	w1, w2, w1, cc  // cc = lo, ul, last
    305c:	cmp	w1, w6
    3060:	b.ne	2e78 <write_entry+0x1238>  // b.any
    3064:	ldrb	w28, [x27, #5]
    3068:	mov	w23, #0x1                   	// #1
    306c:	add	x27, x27, #0x5
    3070:	b	3024 <write_entry+0x13e4>
    3074:	mov	w6, #0x0                   	// #0
    3078:	b	304c <write_entry+0x140c>
    307c:	ldrb	w1, [x5]
    3080:	cmp	w7, #0x19
    3084:	b.hi	304c <write_entry+0x140c>  // b.pmore
    3088:	b	3048 <write_entry+0x1408>
    308c:	cmp	w8, #0x19
    3090:	mov	w1, #0x2d                  	// #45
    3094:	b.hi	30ac <write_entry+0x146c>  // b.pmore
    3098:	add	w6, w2, #0x20
    309c:	sub	w3, w1, #0x41
    30a0:	add	w2, w1, #0x20
    30a4:	cmp	w3, #0x1a
    30a8:	csel	w1, w2, w1, cc  // cc = lo, ul, last
    30ac:	cmp	w6, w1
    30b0:	b.eq	30c0 <write_entry+0x1480>  // b.none
    30b4:	cbnz	w0, 2ee4 <write_entry+0x12a4>
    30b8:	mov	x21, x27
    30bc:	b	2f68 <write_entry+0x1328>
    30c0:	ldrb	w28, [x27, #5]
    30c4:	mov	w23, #0x2                   	// #2
    30c8:	add	x27, x27, #0x5
    30cc:	b	3024 <write_entry+0x13e4>
    30d0:	ldrb	w1, [x5]
    30d4:	cmp	w7, #0x19
    30d8:	b.hi	30e4 <write_entry+0x14a4>  // b.pmore
    30dc:	ldrb	w1, [x5]
    30e0:	add	w6, w2, #0x20
    30e4:	sub	w3, w1, #0x41
    30e8:	add	w2, w1, #0x20
    30ec:	cmp	w3, #0x1a
    30f0:	csel	w1, w2, w1, cc  // cc = lo, ul, last
    30f4:	cmp	w1, w6
    30f8:	b.ne	3124 <write_entry+0x14e4>  // b.any
    30fc:	ldrb	w28, [x27, #5]
    3100:	mov	w23, #0x3                   	// #3
    3104:	add	x27, x27, #0x5
    3108:	b	3024 <write_entry+0x13e4>
    310c:	mov	w6, #0x0                   	// #0
    3110:	b	309c <write_entry+0x145c>
    3114:	ldrb	w1, [x5]
    3118:	cmp	w8, #0x19
    311c:	b.hi	309c <write_entry+0x145c>  // b.pmore
    3120:	b	3098 <write_entry+0x1458>
    3124:	mov	x21, x27
    3128:	cbnz	w0, 2f60 <write_entry+0x1320>
    312c:	b	2f68 <write_entry+0x1328>
    3130:	cmp	w7, #0x19
    3134:	mov	w1, #0x2d                  	// #45
    3138:	b.hi	30f4 <write_entry+0x14b4>  // b.pmore
    313c:	b	30dc <write_entry+0x149c>
    3140:	mov	w6, #0x0                   	// #0
    3144:	b	30e4 <write_entry+0x14a4>
    3148:	adrp	x1, 0 <grub_strcasecmp>
    314c:	mov	x0, x20
    3150:	mov	x2, #0x47                  	// #71
    3154:	ldr	x1, [x1]
    3158:	bl	d10 <print>
    315c:	mov	w19, w0
    3160:	cbz	w0, 2fd8 <write_entry+0x1398>
    3164:	b	2540 <write_entry+0x900>
    3168:	mov	x2, x27
    316c:	mov	x1, x22
    3170:	mov	x0, x20
    3174:	bl	3450 <print_entry>
    3178:	b	301c <write_entry+0x13dc>
    317c:	adrp	x1, 0 <grub_strcasecmp>
    3180:	mov	x0, x23
    3184:	ldr	x1, [x1]
    3188:	bl	0 <grub_strcasecmp>
    318c:	cbnz	w0, 3228 <write_entry+0x15e8>
    3190:	ldr	x21, [x21, #56]
    3194:	cbz	x21, 2640 <write_entry+0xa00>
    3198:	ldrb	w0, [x21]
    319c:	cbz	w0, 1f8c <write_entry+0x34c>
    31a0:	adrp	x1, 0 <grub_strcasecmp>
    31a4:	adrp	x24, 0 <grub_strcasecmp>
    31a8:	ldr	x23, [x1]
    31ac:	mov	x19, x21
    31b0:	b	31bc <write_entry+0x157c>
    31b4:	ldrb	w0, [x19, #1]!
    31b8:	cbz	w0, 31d0 <write_entry+0x1590>
    31bc:	bl	0 <grub_isspace>
    31c0:	cbz	w0, 31b4 <write_entry+0x1574>
    31c4:	ldrb	w0, [x19]
    31c8:	cbz	w0, 31d0 <write_entry+0x1590>
    31cc:	strb	wzr, [x19], #1
    31d0:	mov	x1, x23
    31d4:	mov	x0, x21
    31d8:	bl	0 <grub_strcmp>
    31dc:	cbnz	w0, 320c <write_entry+0x15cc>
    31e0:	ldrb	w0, [x19]
    31e4:	cbnz	w0, 31f4 <write_entry+0x15b4>
    31e8:	b	1f8c <write_entry+0x34c>
    31ec:	ldrb	w0, [x19, #1]!
    31f0:	cbz	w0, 1f8c <write_entry+0x34c>
    31f4:	bl	0 <grub_isspace>
    31f8:	cbnz	w0, 31ec <write_entry+0x15ac>
    31fc:	ldrb	w0, [x19]
    3200:	cbz	w0, 1f8c <write_entry+0x34c>
    3204:	mov	x21, x19
    3208:	b	31ac <write_entry+0x156c>
    320c:	ldr	x3, [x24]
    3210:	mov	x2, x21
    3214:	mov	x1, x22
    3218:	mov	x0, x20
    321c:	bl	39e8 <print_config>
    3220:	cbz	w0, 31e0 <write_entry+0x15a0>
    3224:	b	1f8c <write_entry+0x34c>
    3228:	adrp	x1, 0 <grub_strcasecmp>
    322c:	mov	x0, x23
    3230:	ldr	x1, [x1]
    3234:	bl	0 <grub_strcasecmp>
    3238:	cbz	w0, 3190 <write_entry+0x1550>
    323c:	adrp	x1, 0 <grub_strcasecmp>
    3240:	mov	x0, x20
    3244:	mov	x2, #0x18                  	// #24
    3248:	ldr	x1, [x1]
    324c:	bl	d10 <print>
    3250:	mov	w19, w0
    3254:	cbnz	w0, 1db0 <write_entry+0x170>
    3258:	mov	x0, x23
    325c:	bl	0 <grub_strlen>
    3260:	mov	x1, x23
    3264:	mov	x2, x0
    3268:	mov	x0, x20
    326c:	bl	d10 <print>
    3270:	mov	w19, w0
    3274:	cbz	w0, 21bc <write_entry+0x57c>
    3278:	ldp	x23, x24, [sp, #48]
    327c:	b	1db4 <write_entry+0x174>
    3280:	mov	x24, x19
    3284:	b	22c8 <write_entry+0x688>
	...

0000000000003450 <print_entry>:
    3450:	stp	x29, x30, [sp, #-48]!
    3454:	mov	x29, sp
    3458:	stp	x19, x20, [sp, #16]
    345c:	ldr	x19, [x1, #8]
    3460:	cbz	x19, 34d4 <print_entry+0x84>
    3464:	mov	x20, x0
    3468:	stp	x21, x22, [sp, #32]
    346c:	mov	x22, x1
    3470:	mov	x21, x2
    3474:	nop
    3478:	ldr	x7, [x19, #16]
    347c:	mov	x5, x21
    3480:	ldrb	w4, [x7]
    3484:	cbnz	w4, 34a0 <print_entry+0x50>
    3488:	b	34e4 <print_entry+0x94>
    348c:	csel	w6, w6, w3, cc  // cc = lo, ul, last
    3490:	cmp	w6, w10
    3494:	b.ne	3528 <print_entry+0xd8>  // b.any
    3498:	ldrb	w4, [x7, #1]!
    349c:	cbz	w4, 34e4 <print_entry+0x94>
    34a0:	ldrb	w3, [x5]
    34a4:	sub	w9, w4, #0x41
    34a8:	cmp	w9, #0x1a
    34ac:	add	w8, w4, #0x20
    34b0:	sub	w0, w3, #0x41
    34b4:	csel	w10, w8, w4, cc  // cc = lo, ul, last
    34b8:	add	x5, x5, #0x1
    34bc:	add	w6, w3, #0x20
    34c0:	cmp	w0, #0x1a
    34c4:	cbnz	w3, 348c <print_entry+0x3c>
    34c8:	ldr	x19, [x19]
    34cc:	cbnz	x19, 3478 <print_entry+0x28>
    34d0:	ldp	x21, x22, [sp, #32]
    34d4:	mov	w0, #0x0                   	// #0
    34d8:	ldp	x19, x20, [sp, #16]
    34dc:	ldp	x29, x30, [sp], #48
    34e0:	ret
    34e4:	ldrb	w3, [x5]
    34e8:	mov	w4, #0x0                   	// #0
    34ec:	sub	w0, w3, #0x41
    34f0:	cmp	w0, #0x1a
    34f4:	add	w0, w3, #0x20
    34f8:	csel	w3, w0, w3, cc  // cc = lo, ul, last
    34fc:	cmp	w4, w3
    3500:	b.ne	34c8 <print_entry+0x78>  // b.any
    3504:	mov	x2, x19
    3508:	mov	x1, x22
    350c:	mov	x0, x20
    3510:	bl	1c40 <write_entry>
    3514:	cbz	w0, 34c8 <print_entry+0x78>
    3518:	ldp	x19, x20, [sp, #16]
    351c:	ldp	x21, x22, [sp, #32]
    3520:	ldp	x29, x30, [sp], #48
    3524:	ret
    3528:	cmp	w9, #0x1a
    352c:	csel	w4, w8, w4, cc  // cc = lo, ul, last
    3530:	b	34f0 <print_entry+0xa0>
    3534:	nop

0000000000003538 <config_file>:
    3538:	stp	x29, x30, [sp, #-208]!
    353c:	mov	x29, sp
    3540:	stp	x23, x24, [sp, #48]
    3544:	mov	x24, x2
    3548:	mov	x2, #0x70                  	// #112
    354c:	stp	x25, x26, [sp, #64]
    3550:	mov	x25, x1
    3554:	mov	w1, #0x0                   	// #0
    3558:	mov	x23, x3
    355c:	mov	x26, x6
    3560:	stp	x19, x20, [sp, #16]
    3564:	mov	w19, w7
    3568:	mov	x20, x0
    356c:	add	x0, sp, #0x60
    3570:	stp	x21, x22, [sp, #32]
    3574:	mov	x22, x4
    3578:	mov	x21, x5
    357c:	bl	0 <grub_memset>
    3580:	add	x0, sp, #0x60
    3584:	str	x26, [sp, #96]
    3588:	stp	x25, x24, [sp, #136]
    358c:	stp	x23, x22, [sp, #152]
    3590:	str	x21, [sp, #168]
    3594:	str	w19, [sp, #200]
    3598:	bl	13b0 <syslinux_parse_real>
    359c:	mov	w23, w0
    35a0:	cbnz	w0, 35e4 <config_file+0xac>
    35a4:	ldr	x19, [sp, #192]
    35a8:	cbz	x19, 35c0 <config_file+0x88>
    35ac:	nop
    35b0:	ldr	x0, [x19]
    35b4:	cbz	x0, 3600 <config_file+0xc8>
    35b8:	mov	x19, x0
    35bc:	cbnz	x19, 35b0 <config_file+0x78>
    35c0:	ldr	x0, [sp, #128]
    35c4:	cbz	x0, 36a0 <config_file+0x168>
    35c8:	adrp	x1, 0 <grub_strcasecmp>
    35cc:	mov	x0, x20
    35d0:	mov	x2, #0x13                  	// #19
    35d4:	ldr	x1, [x1]
    35d8:	bl	d10 <print>
    35dc:	cbz	w0, 3664 <config_file+0x12c>
    35e0:	mov	w23, w0
    35e4:	mov	w0, w23
    35e8:	ldp	x19, x20, [sp, #16]
    35ec:	ldp	x21, x22, [sp, #32]
    35f0:	ldp	x23, x24, [sp, #48]
    35f4:	ldp	x25, x26, [sp, #64]
    35f8:	ldp	x29, x30, [sp], #208
    35fc:	ret
    3600:	adrp	x21, 0 <grub_strcasecmp>
    3604:	adrp	x22, 0 <grub_strcasecmp>
    3608:	b	3650 <config_file+0x118>
    360c:	ldr	x1, [x21]
    3610:	bl	d10 <print>
    3614:	mov	w3, w0
    3618:	add	x1, x19, #0x10
    361c:	mov	x0, x20
    3620:	mov	x2, #0x0                   	// #0
    3624:	cbnz	w3, 3794 <config_file+0x25c>
    3628:	bl	5c8 <print_escaped>
    362c:	mov	w1, w0
    3630:	mov	x2, #0x1                   	// #1
    3634:	mov	x0, x20
    3638:	cbnz	w1, 37b4 <config_file+0x27c>
    363c:	ldr	x1, [x22]
    3640:	bl	d10 <print>
    3644:	cbnz	w0, 35e0 <config_file+0xa8>
    3648:	ldr	x19, [x19, #8]
    364c:	cbz	x19, 35c0 <config_file+0x88>
    3650:	ldr	x1, [x19, #8]
    3654:	mov	x0, x20
    3658:	mov	x2, #0x5                   	// #5
    365c:	cbnz	x1, 360c <config_file+0xd4>
    3660:	b	35c0 <config_file+0x88>
    3664:	ldr	x3, [sp, #128]
    3668:	add	x0, sp, #0x60
    366c:	add	x1, x0, #0x30
    3670:	add	x2, sp, #0xa0
    3674:	mov	x0, x20
    3678:	mov	x4, #0x0                   	// #0
    367c:	bl	dc8 <print_file.isra.0>
    3680:	cbnz	w0, 35e0 <config_file+0xa8>
    3684:	adrp	x1, 0 <grub_strcasecmp>
    3688:	mov	x0, x20
    368c:	mov	x2, #0x1                   	// #1
    3690:	ldr	x1, [x1]
    3694:	bl	d10 <print>
    3698:	cbnz	w0, 35e0 <config_file+0xa8>
    369c:	nop
    36a0:	ldr	x19, [sp, #120]
    36a4:	cbz	x19, 36c4 <config_file+0x18c>
    36a8:	mov	x0, x19
    36ac:	bl	0 <grub_strlen>
    36b0:	mov	x1, x19
    36b4:	mov	x2, x0
    36b8:	mov	x0, x20
    36bc:	bl	d10 <print>
    36c0:	cbnz	w0, 35e0 <config_file+0xa8>
    36c4:	ldr	x0, [sp, #184]
    36c8:	ldr	x1, [sp, #104]
    36cc:	cbnz	x0, 37d4 <config_file+0x29c>
    36d0:	ldr	x0, [sp, #112]
    36d4:	cbz	x1, 36f4 <config_file+0x1bc>
    36d8:	cbz	x0, 37d8 <config_file+0x2a0>
    36dc:	mov	x2, x0
    36e0:	add	x1, sp, #0x60
    36e4:	mov	x0, x20
    36e8:	bl	3450 <print_entry>
    36ec:	cbnz	w0, 35e0 <config_file+0xa8>
    36f0:	ldr	x0, [sp, #112]
    36f4:	bl	0 <grub_free>
    36f8:	ldr	x0, [sp, #120]
    36fc:	bl	0 <grub_free>
    3700:	ldr	x0, [sp, #128]
    3704:	bl	0 <grub_free>
    3708:	ldr	x19, [sp, #192]
    370c:	cbz	x19, 3720 <config_file+0x1e8>
    3710:	mov	x0, x19
    3714:	ldr	x19, [x19]
    3718:	bl	0 <grub_free>
    371c:	cbnz	x19, 3710 <config_file+0x1d8>
    3720:	ldr	x22, [sp, #104]
    3724:	cbz	x22, 35e4 <config_file+0xac>
    3728:	ldr	x19, [x22, #40]
    372c:	mov	x21, x22
    3730:	ldr	x22, [x22]
    3734:	cbz	x19, 3754 <config_file+0x21c>
    3738:	mov	x20, x19
    373c:	ldr	x19, [x19]
    3740:	ldr	x0, [x20, #8]
    3744:	bl	0 <grub_free>
    3748:	mov	x0, x20
    374c:	bl	0 <grub_free>
    3750:	cbnz	x19, 3738 <config_file+0x200>
    3754:	ldr	x0, [x21, #80]
    3758:	bl	0 <grub_free>
    375c:	ldr	x0, [x21, #32]
    3760:	bl	0 <grub_free>
    3764:	ldr	x0, [x21, #16]
    3768:	bl	0 <grub_free>
    376c:	ldr	x0, [x21, #24]
    3770:	bl	0 <grub_free>
    3774:	ldr	x0, [x21, #56]
    3778:	bl	0 <grub_free>
    377c:	ldr	x0, [x21, #72]
    3780:	bl	0 <grub_free>
    3784:	mov	x0, x21
    3788:	bl	0 <grub_free>
    378c:	cbnz	x22, 3728 <config_file+0x1f0>
    3790:	b	35e4 <config_file+0xac>
    3794:	mov	w23, w3
    3798:	mov	w0, w23
    379c:	ldp	x19, x20, [sp, #16]
    37a0:	ldp	x21, x22, [sp, #32]
    37a4:	ldp	x23, x24, [sp, #48]
    37a8:	ldp	x25, x26, [sp, #64]
    37ac:	ldp	x29, x30, [sp], #208
    37b0:	ret
    37b4:	mov	w23, w1
    37b8:	mov	w0, w23
    37bc:	ldp	x19, x20, [sp, #16]
    37c0:	ldp	x21, x22, [sp, #32]
    37c4:	ldp	x23, x24, [sp, #48]
    37c8:	ldp	x25, x26, [sp, #64]
    37cc:	ldp	x29, x30, [sp], #208
    37d0:	ret
    37d4:	cbz	x1, 36f0 <config_file+0x1b8>
    37d8:	mov	x19, x1
    37dc:	ldr	x1, [x1]
    37e0:	cbnz	x1, 37d8 <config_file+0x2a0>
    37e4:	adrp	x1, 0 <grub_strcasecmp>
    37e8:	mov	x0, x20
    37ec:	mov	x2, #0xc                   	// #12
    37f0:	ldr	x1, [x1]
    37f4:	bl	d10 <print>
    37f8:	cbnz	w0, 35e0 <config_file+0xa8>
    37fc:	ldr	x1, [sp, #184]
    3800:	mov	x2, #0xcccccccccccccccc    	// #-3689348814741910324
    3804:	movk	x2, #0xcccd
    3808:	mov	x0, x20
    380c:	add	x1, x1, #0x9
    3810:	umulh	x1, x1, x2
    3814:	ubfx	x1, x1, #3, #32
    3818:	bl	d70 <print_num>
    381c:	cbnz	w0, 35e0 <config_file+0xa8>
    3820:	adrp	x1, 0 <grub_strcasecmp>
    3824:	mov	x0, x20
    3828:	mov	x2, #0x1                   	// #1
    382c:	ldr	x21, [x1]
    3830:	mov	x1, x21
    3834:	bl	d10 <print>
    3838:	cbnz	w0, 35e0 <config_file+0xa8>
    383c:	ldr	x0, [sp, #112]
    3840:	cbz	x0, 3884 <config_file+0x34c>
    3844:	adrp	x1, 0 <grub_strcasecmp>
    3848:	mov	x0, x20
    384c:	mov	x2, #0x9                   	// #9
    3850:	ldr	x1, [x1]
    3854:	bl	d10 <print>
    3858:	cbnz	w0, 35e0 <config_file+0xa8>
    385c:	ldr	x1, [sp, #112]
    3860:	mov	x0, x20
    3864:	mov	x2, #0x0                   	// #0
    3868:	bl	5c8 <print_escaped>
    386c:	cbnz	w0, 35e0 <config_file+0xa8>
    3870:	mov	x1, x21
    3874:	mov	x0, x20
    3878:	mov	x2, #0x1                   	// #1
    387c:	bl	d10 <print>
    3880:	cbnz	w0, 35e0 <config_file+0xa8>
    3884:	adrp	x0, 0 <grub_strcasecmp>
    3888:	adrp	x22, 0 <grub_strcasecmp>
    388c:	ldr	x21, [x0]
    3890:	b	396c <config_file+0x434>
    3894:	mov	x0, x20
    3898:	mov	x2, #0x0                   	// #0
    389c:	bl	5c8 <print_escaped>
    38a0:	cbnz	w0, 35e0 <config_file+0xa8>
    38a4:	ldrb	w3, [x19, #96]
    38a8:	cbz	w3, 38f4 <config_file+0x3bc>
    38ac:	ldr	x1, [x22]
    38b0:	mov	x0, x20
    38b4:	mov	x2, #0xb                   	// #11
    38b8:	strb	w3, [sp, #88]
    38bc:	strb	wzr, [sp, #89]
    38c0:	bl	d10 <print>
    38c4:	cbnz	w0, 35e0 <config_file+0xa8>
    38c8:	add	x1, sp, #0x58
    38cc:	mov	x0, x20
    38d0:	mov	x2, #0x1                   	// #1
    38d4:	bl	d10 <print>
    38d8:	cbnz	w0, 35e0 <config_file+0xa8>
    38dc:	adrp	x1, 0 <grub_strcasecmp>
    38e0:	mov	x0, x20
    38e4:	mov	x2, #0x1                   	// #1
    38e8:	ldr	x1, [x1]
    38ec:	bl	d10 <print>
    38f0:	cbnz	w0, 35e0 <config_file+0xa8>
    38f4:	adrp	x1, 0 <grub_strcasecmp>
    38f8:	mov	x0, x20
    38fc:	mov	x2, #0x6                   	// #6
    3900:	ldr	x1, [x1]
    3904:	bl	d10 <print>
    3908:	cbnz	w0, 35e0 <config_file+0xa8>
    390c:	ldr	x1, [x19, #16]
    3910:	mov	x0, x20
    3914:	mov	x2, #0x0                   	// #0
    3918:	bl	5c8 <print_escaped>
    391c:	cbnz	w0, 35e0 <config_file+0xa8>
    3920:	adrp	x1, 0 <grub_strcasecmp>
    3924:	mov	x0, x20
    3928:	mov	x2, #0x3                   	// #3
    392c:	ldr	x1, [x1]
    3930:	bl	d10 <print>
    3934:	cbnz	w0, 35e0 <config_file+0xa8>
    3938:	mov	x2, x19
    393c:	add	x1, sp, #0x60
    3940:	mov	x0, x20
    3944:	bl	1c40 <write_entry>
    3948:	cbnz	w0, 35e0 <config_file+0xa8>
    394c:	adrp	x1, 0 <grub_strcasecmp>
    3950:	mov	x0, x20
    3954:	mov	x2, #0x2                   	// #2
    3958:	ldr	x1, [x1]
    395c:	bl	d10 <print>
    3960:	cbnz	w0, 35e0 <config_file+0xa8>
    3964:	ldr	x19, [x19, #8]
    3968:	cbz	x19, 36f0 <config_file+0x1b8>
    396c:	mov	x1, x21
    3970:	mov	x0, x20
    3974:	mov	x2, #0xa                   	// #10
    3978:	bl	d10 <print>
    397c:	cbnz	w0, 35e0 <config_file+0xa8>
    3980:	ldr	x1, [x19, #24]
    3984:	cbnz	x1, 3894 <config_file+0x35c>
    3988:	ldr	x1, [x19, #16]
    398c:	b	3894 <config_file+0x35c>
	...

00000000000039e8 <print_config>:
    39e8:	stp	x29, x30, [sp, #-112]!
    39ec:	mov	x29, sp
    39f0:	stp	x19, x20, [sp, #16]
    39f4:	mov	x19, x1
    39f8:	mov	x20, x3
    39fc:	stp	x21, x22, [sp, #32]
    3a00:	mov	x21, x2
    3a04:	stp	x23, x24, [sp, #48]
    3a08:	mov	x23, x0
    3a0c:	stp	x25, x26, [sp, #64]
    3a10:	stp	x27, x28, [sp, #80]
    3a14:	ldrb	w0, [x3]
    3a18:	ldr	x1, [x1, #40]
    3a1c:	cmp	w0, #0x2f
    3a20:	b.eq	3a28 <print_config+0x40>  // b.none
    3a24:	ldr	x1, [x19, #56]
    3a28:	adrp	x0, 0 <grub_strcasecmp>
    3a2c:	mov	x2, x20
    3a30:	ldr	x25, [x0]
    3a34:	mov	x0, x25
    3a38:	bl	0 <grub_xasprintf>
    3a3c:	mov	x22, x0
    3a40:	cbz	x0, 3d0c <print_config+0x324>
    3a44:	ldrb	w0, [x20]
    3a48:	ldr	x1, [x19, #48]
    3a4c:	cmp	w0, #0x2f
    3a50:	b.eq	3a58 <print_config+0x70>  // b.none
    3a54:	ldr	x1, [x19, #64]
    3a58:	mov	x2, x20
    3a5c:	mov	x0, x25
    3a60:	bl	0 <grub_xasprintf>
    3a64:	mov	x24, x0
    3a68:	cbz	x0, 3d24 <print_config+0x33c>
    3a6c:	ldrb	w0, [x21]
    3a70:	ldr	x1, [x19, #40]
    3a74:	cmp	w0, #0x2f
    3a78:	b.eq	3a80 <print_config+0x98>  // b.none
    3a7c:	ldr	x1, [x19, #56]
    3a80:	mov	x0, x25
    3a84:	mov	x2, x21
    3a88:	bl	0 <grub_xasprintf>
    3a8c:	mov	x25, x0
    3a90:	cbz	x0, 3cc8 <print_config+0x2e0>
    3a94:	ldrb	w0, [x0]
    3a98:	mov	x1, x25
    3a9c:	mov	x4, x25
    3aa0:	mov	w3, #0x2f                  	// #47
    3aa4:	cbz	w0, 3acc <print_config+0xe4>
    3aa8:	cmp	w0, #0x2f
    3aac:	ccmp	x25, x4, #0x4, eq  // eq = none
    3ab0:	b.ne	3c58 <print_config+0x270>  // b.any
    3ab4:	cmp	w0, #0x2f
    3ab8:	b.eq	3c64 <print_config+0x27c>  // b.none
    3abc:	strb	w0, [x4], #1
    3ac0:	ldrb	w0, [x1, #1]
    3ac4:	add	x1, x1, #0x1
    3ac8:	cbnz	w0, 3aa8 <print_config+0xc0>
    3acc:	adrp	x1, 0 <grub_strcasecmp>
    3ad0:	strb	wzr, [x4]
    3ad4:	mov	x0, x23
    3ad8:	mov	x2, #0x1                   	// #1
    3adc:	ldr	x1, [x1]
    3ae0:	bl	d10 <print>
    3ae4:	mov	w28, w0
    3ae8:	cbnz	w0, 3cec <print_config+0x304>
    3aec:	add	x26, x19, #0x30
    3af0:	add	x27, x19, #0x40
    3af4:	mov	x1, x26
    3af8:	mov	x2, x27
    3afc:	mov	x3, x21
    3b00:	mov	x4, #0x0                   	// #0
    3b04:	mov	x0, x23
    3b08:	bl	dc8 <print_file.isra.0>
    3b0c:	adrp	x1, 0 <grub_strcasecmp>
    3b10:	mov	x0, x23
    3b14:	mov	x2, #0x1                   	// #1
    3b18:	ldr	x1, [x1]
    3b1c:	str	x1, [sp, #104]
    3b20:	bl	d10 <print>
    3b24:	mov	w28, w0
    3b28:	cbnz	w0, 3cec <print_config+0x304>
    3b2c:	mov	x0, x25
    3b30:	bl	0 <grub_strlen>
    3b34:	mov	x1, x25
    3b38:	mov	x2, x0
    3b3c:	mov	x0, x23
    3b40:	bl	d10 <print>
    3b44:	mov	w28, w0
    3b48:	cbnz	w0, 3cec <print_config+0x304>
    3b4c:	adrp	x1, 0 <grub_strcasecmp>
    3b50:	mov	x0, x23
    3b54:	mov	x2, #0x2                   	// #2
    3b58:	ldr	x1, [x1]
    3b5c:	bl	d10 <print>
    3b60:	mov	w28, w0
    3b64:	cbnz	w0, 3cec <print_config+0x304>
    3b68:	mov	x2, x19
    3b6c:	b	3b80 <print_config+0x198>
    3b70:	ldr	x2, [sp, #96]
    3b74:	add	w28, w28, #0x1
    3b78:	ldr	x2, [x2]
    3b7c:	cbz	x2, 3d40 <print_config+0x358>
    3b80:	ldr	x0, [x2, #72]
    3b84:	mov	x1, x25
    3b88:	str	x2, [sp, #96]
    3b8c:	bl	0 <grub_strcmp>
    3b90:	cmp	w0, #0x0
    3b94:	ccmp	w28, #0x15, #0x4, ne  // ne = any
    3b98:	b.ne	3b70 <print_config+0x188>  // b.any
    3b9c:	adrp	x1, 0 <grub_strcasecmp>
    3ba0:	mov	x0, x23
    3ba4:	mov	x2, #0x19                  	// #25
    3ba8:	ldr	x1, [x1]
    3bac:	bl	d10 <print>
    3bb0:	mov	w28, w0
    3bb4:	cbnz	w0, 3cec <print_config+0x304>
    3bb8:	adrp	x0, 0 <grub_strcasecmp>
    3bbc:	mov	x2, x27
    3bc0:	mov	x1, x26
    3bc4:	mov	x4, #0x0                   	// #0
    3bc8:	ldr	x3, [x0]
    3bcc:	mov	x0, x23
    3bd0:	bl	dc8 <print_file.isra.0>
    3bd4:	adrp	x1, 0 <grub_strcasecmp>
    3bd8:	mov	x0, x23
    3bdc:	mov	x2, #0x4                   	// #4
    3be0:	ldr	x1, [x1]
    3be4:	bl	d10 <print>
    3be8:	mov	w28, w0
    3bec:	cbnz	w0, 3cec <print_config+0x304>
    3bf0:	mov	x3, x20
    3bf4:	mov	x2, x27
    3bf8:	mov	x1, x26
    3bfc:	mov	x4, #0x0                   	// #0
    3c00:	mov	x0, x23
    3c04:	bl	dc8 <print_file.isra.0>
    3c08:	ldr	x1, [sp, #104]
    3c0c:	mov	x0, x23
    3c10:	mov	x2, #0x1                   	// #1
    3c14:	bl	d10 <print>
    3c18:	mov	w28, w0
    3c1c:	cbnz	w0, 3cec <print_config+0x304>
    3c20:	mov	x3, x21
    3c24:	mov	x2, x27
    3c28:	mov	x1, x26
    3c2c:	mov	x4, #0x0                   	// #0
    3c30:	mov	x0, x23
    3c34:	bl	dc8 <print_file.isra.0>
    3c38:	adrp	x1, 0 <grub_strcasecmp>
    3c3c:	mov	x0, x23
    3c40:	mov	x2, #0x1                   	// #1
    3c44:	ldr	x1, [x1]
    3c48:	bl	d10 <print>
    3c4c:	mov	w28, w0
    3c50:	cbz	w0, 3cd4 <print_config+0x2ec>
    3c54:	b	3cec <print_config+0x304>
    3c58:	ldurb	w2, [x4, #-1]
    3c5c:	cmp	w2, #0x2f
    3c60:	b.eq	3ac0 <print_config+0xd8>  // b.none
    3c64:	ldrb	w2, [x1, #1]
    3c68:	cmp	w2, #0x2e
    3c6c:	b.ne	3abc <print_config+0xd4>  // b.any
    3c70:	ldrb	w2, [x1, #2]
    3c74:	cmp	w2, #0x2f
    3c78:	b.eq	3d38 <print_config+0x350>  // b.none
    3c7c:	cmp	w2, #0x2e
    3c80:	b.ne	3abc <print_config+0xd4>  // b.any
    3c84:	ldrb	w2, [x1, #3]
    3c88:	cmp	w2, #0x2f
    3c8c:	b.ne	3abc <print_config+0xd4>  // b.any
    3c90:	add	x1, x1, #0x3
    3c94:	cmp	x25, x4
    3c98:	b.ls	3cac <print_config+0x2c4>  // b.plast
    3c9c:	b	3dd8 <print_config+0x3f0>
    3ca0:	sub	x4, x4, #0x1
    3ca4:	cmp	x25, x4
    3ca8:	b.hi	3dd8 <print_config+0x3f0>  // b.pmore
    3cac:	ldrb	w0, [x4]
    3cb0:	cmp	w0, #0x2f
    3cb4:	b.ne	3ca0 <print_config+0x2b8>  // b.any
    3cb8:	cmp	x25, x4
    3cbc:	b.hi	3dd8 <print_config+0x3f0>  // b.pmore
    3cc0:	add	x4, x4, #0x1
    3cc4:	b	3ac0 <print_config+0xd8>
    3cc8:	adrp	x0, 0 <grub_strcasecmp>
    3ccc:	ldr	x0, [x0]
    3cd0:	ldr	w28, [x0]
    3cd4:	mov	x0, x25
    3cd8:	bl	0 <grub_free>
    3cdc:	mov	x0, x22
    3ce0:	bl	0 <grub_free>
    3ce4:	mov	x0, x24
    3ce8:	bl	0 <grub_free>
    3cec:	mov	w0, w28
    3cf0:	ldp	x19, x20, [sp, #16]
    3cf4:	ldp	x21, x22, [sp, #32]
    3cf8:	ldp	x23, x24, [sp, #48]
    3cfc:	ldp	x25, x26, [sp, #64]
    3d00:	ldp	x27, x28, [sp, #80]
    3d04:	ldp	x29, x30, [sp], #112
    3d08:	ret
    3d0c:	adrp	x0, 0 <grub_strcasecmp>
    3d10:	mov	x25, #0x0                   	// #0
    3d14:	mov	x24, #0x0                   	// #0
    3d18:	ldr	x0, [x0]
    3d1c:	ldr	w28, [x0]
    3d20:	b	3cd4 <print_config+0x2ec>
    3d24:	adrp	x0, 0 <grub_strcasecmp>
    3d28:	mov	x25, #0x0                   	// #0
    3d2c:	ldr	x0, [x0]
    3d30:	ldr	w28, [x0]
    3d34:	b	3cd4 <print_config+0x2ec>
    3d38:	add	x1, x1, #0x2
    3d3c:	b	3ac0 <print_config+0xd8>
    3d40:	ldp	x1, x2, [x19, #40]
    3d44:	mov	x6, x19
    3d48:	ldr	w7, [x19, #104]
    3d4c:	mov	x5, x25
    3d50:	mov	x4, x24
    3d54:	mov	x3, x22
    3d58:	mov	x0, x23
    3d5c:	bl	3538 <config_file>
    3d60:	mov	w28, w0
    3d64:	and	w0, w0, #0xfffffffd
    3d68:	cmp	w0, #0x5
    3d6c:	b.ne	3cd4 <print_config+0x2ec>  // b.any
    3d70:	adrp	x3, 0 <grub_strcasecmp>
    3d74:	adrp	x1, 0 <grub_strcasecmp>
    3d78:	mov	x0, x23
    3d7c:	mov	x2, #0x7                   	// #7
    3d80:	ldr	x3, [x3]
    3d84:	ldr	x1, [x1]
    3d88:	str	wzr, [x3]
    3d8c:	bl	d10 <print>
    3d90:	mov	w28, w0
    3d94:	cbnz	w0, 3cec <print_config+0x304>
    3d98:	mov	x0, x25
    3d9c:	bl	0 <grub_strlen>
    3da0:	mov	x1, x25
    3da4:	mov	x2, x0
    3da8:	mov	x0, x23
    3dac:	bl	d10 <print>
    3db0:	mov	w28, w0
    3db4:	cbnz	w0, 3cd4 <print_config+0x2ec>
    3db8:	adrp	x1, 0 <grub_strcasecmp>
    3dbc:	mov	x0, x23
    3dc0:	mov	x2, #0xb                   	// #11
    3dc4:	ldr	x1, [x1]
    3dc8:	bl	d10 <print>
    3dcc:	mov	w28, w0
    3dd0:	cbz	w0, 3cd4 <print_config+0x2ec>
    3dd4:	b	3cec <print_config+0x304>
    3dd8:	mov	x4, x25
    3ddc:	strb	w3, [x25]
    3de0:	add	x4, x4, #0x1
    3de4:	b	3ac0 <print_config+0xd8>
	...

0000000000003e40 <grub_syslinux_config_file>:
    3e40:	stp	x29, x30, [sp, #-48]!
    3e44:	mov	x9, x1
    3e48:	mov	x8, x2
    3e4c:	mov	x7, x3
    3e50:	mov	x6, x4
    3e54:	mov	x29, sp
    3e58:	mov	x1, x0
    3e5c:	mov	x4, x7
    3e60:	mov	x2, x9
    3e64:	mov	w7, w5
    3e68:	mov	x3, x8
    3e6c:	mov	x5, x6
    3e70:	add	x0, sp, #0x18
    3e74:	mov	x6, #0x0                   	// #0
    3e78:	stp	xzr, xzr, [sp, #24]
    3e7c:	str	xzr, [sp, #40]
    3e80:	bl	3538 <config_file>
    3e84:	cbnz	w0, 3eac <grub_syslinux_config_file+0x6c>
    3e88:	adrp	x1, 0 <grub_strcasecmp>
    3e8c:	add	x0, sp, #0x18
    3e90:	mov	x2, #0x1                   	// #1
    3e94:	ldr	x1, [x1]
    3e98:	bl	d10 <print>
    3e9c:	cbnz	w0, 3eac <grub_syslinux_config_file+0x6c>
    3ea0:	ldr	x0, [sp, #40]
    3ea4:	ldp	x29, x30, [sp], #48
    3ea8:	ret
    3eac:	mov	x0, #0x0                   	// #0
    3eb0:	ldp	x29, x30, [sp], #48
    3eb4:	ret
	...

0000000000003ec0 <syslinux_file_getline>:
    3ec0:	mov	x1, x0
    3ec4:	mov	w0, #0x0                   	// #0
    3ec8:	str	xzr, [x1]
    3ecc:	ret

0000000000003ed0 <grub_cmd_syslinux_source>:
    3ed0:	cmp	w1, #0x1
    3ed4:	b.ne	4090 <grub_cmd_syslinux_source+0x1c0>  // b.any
    3ed8:	stp	x29, x30, [sp, #-96]!
    3edc:	mov	x29, sp
    3ee0:	stp	x19, x20, [sp, #16]
    3ee4:	mov	x19, x0
    3ee8:	mov	w20, w1
    3eec:	ldr	x0, [x0]
    3ef0:	stp	x21, x22, [sp, #32]
    3ef4:	mov	x21, x2
    3ef8:	stp	x23, x24, [sp, #48]
    3efc:	ldr	x0, [x0]
    3f00:	stp	x27, x28, [sp, #80]
    3f04:	ldr	x0, [x0, #16]
    3f08:	ldrb	w22, [x0]
    3f0c:	cmp	w22, #0x65
    3f10:	b.eq	4058 <grub_cmd_syslinux_source+0x188>  // b.none
    3f14:	ldrb	w23, [x0, #9]
    3f18:	mov	w24, #0x0                   	// #0
    3f1c:	cmp	w23, #0x63
    3f20:	b.ne	3f30 <grub_cmd_syslinux_source+0x60>  // b.any
    3f24:	bl	0 <grub_cls>
    3f28:	mov	w24, w20
    3f2c:	bl	0 <grub_env_context_open>
    3f30:	ldr	x1, [x19, #8]
    3f34:	ldr	x27, [x21]
    3f38:	ldr	w0, [x1]
    3f3c:	cbz	w0, 4084 <grub_cmd_syslinux_source+0x1b4>
    3f40:	ldr	x28, [x1, #8]
    3f44:	mov	x19, #0x0                   	// #0
    3f48:	ldr	w0, [x1, #16]
    3f4c:	cbz	w0, 3f54 <grub_cmd_syslinux_source+0x84>
    3f50:	ldr	x19, [x1, #24]
    3f54:	mov	w20, #0x2                   	// #2
    3f58:	ldr	w0, [x1, #48]
    3f5c:	ldr	w2, [x1, #32]
    3f60:	cbnz	w0, 3f6c <grub_cmd_syslinux_source+0x9c>
    3f64:	cmp	w2, #0x0
    3f68:	cset	w20, ne  // ne = any
    3f6c:	ldr	w1, [x1, #64]
    3f70:	mov	w0, #0x3                   	// #3
    3f74:	mov	x21, #0x0                   	// #0
    3f78:	cmp	w1, #0x0
    3f7c:	csel	w20, w20, w0, eq  // eq = none
    3f80:	cbz	x19, 40dc <grub_cmd_syslinux_source+0x20c>
    3f84:	stp	x25, x26, [sp, #64]
    3f88:	adrp	x2, 0 <grub_strcasecmp>
    3f8c:	adrp	x1, 0 <grub_strcasecmp>
    3f90:	adrp	x0, 0 <grub_strcasecmp>
    3f94:	ldr	x3, [x2]
    3f98:	mov	x6, x19
    3f9c:	ldr	x26, [x1]
    3fa0:	mov	x5, x28
    3fa4:	ldr	x25, [x0]
    3fa8:	mov	x4, x27
    3fac:	mov	x2, x26
    3fb0:	mov	w1, #0x6b                  	// #107
    3fb4:	mov	x0, x25
    3fb8:	bl	0 <grub_real_dprintf>
    3fbc:	mov	x3, x19
    3fc0:	mov	x2, x19
    3fc4:	mov	w5, w20
    3fc8:	mov	x4, x27
    3fcc:	mov	x1, x28
    3fd0:	mov	x0, x28
    3fd4:	bl	3e40 <grub_syslinux_config_file>
    3fd8:	mov	x19, x0
    3fdc:	cbz	x0, 40a8 <grub_cmd_syslinux_source+0x1d8>
    3fe0:	adrp	x3, 0 <grub_strcasecmp>
    3fe4:	mov	x2, x26
    3fe8:	mov	x0, x25
    3fec:	mov	w1, #0x73                  	// #115
    3ff0:	ldr	x3, [x3]
    3ff4:	bl	0 <grub_real_dprintf>
    3ff8:	bl	0 <grub_env_get_menu>
    3ffc:	cbz	x0, 4144 <grub_cmd_syslinux_source+0x274>
    4000:	adrp	x1, 0 <grub_strcasecmp>
    4004:	mov	x2, #0x0                   	// #0
    4008:	mov	x0, x19
    400c:	mov	w20, #0x0                   	// #0
    4010:	ldr	x1, [x1]
    4014:	bl	0 <grub_normal_parse_line>
    4018:	bl	0 <grub_print_error>
    401c:	mov	x0, x19
    4020:	bl	0 <grub_free>
    4024:	mov	x0, x21
    4028:	bl	0 <grub_free>
    402c:	ldp	x25, x26, [sp, #64]
    4030:	cbnz	w24, 40bc <grub_cmd_syslinux_source+0x1ec>
    4034:	cmp	w22, #0x65
    4038:	b.eq	411c <grub_cmd_syslinux_source+0x24c>  // b.none
    403c:	mov	w0, w20
    4040:	ldp	x19, x20, [sp, #16]
    4044:	ldp	x21, x22, [sp, #32]
    4048:	ldp	x23, x24, [sp, #48]
    404c:	ldp	x27, x28, [sp, #80]
    4050:	ldp	x29, x30, [sp], #96
    4054:	ret
    4058:	ldrb	w23, [x0, #25]
    405c:	cmp	w23, #0x63
    4060:	b.eq	417c <grub_cmd_syslinux_source+0x2ac>  // b.none
    4064:	mov	w24, #0x0                   	// #0
    4068:	cmp	w23, #0x63
    406c:	cset	w0, ne  // ne = any
    4070:	bl	0 <grub_env_extractor_open>
    4074:	ldr	x1, [x19, #8]
    4078:	ldr	x27, [x21]
    407c:	ldr	w0, [x1]
    4080:	cbnz	w0, 3f40 <grub_cmd_syslinux_source+0x70>
    4084:	adrp	x0, 0 <grub_strcasecmp>
    4088:	ldr	x28, [x0]
    408c:	b	3f44 <grub_cmd_syslinux_source+0x74>
    4090:	adrp	x1, 0 <grub_strcasecmp>
    4094:	mov	w0, #0x12                  	// #18
    4098:	ldr	x1, [x1]
    409c:	b	0 <grub_error>
    40a0:	mov	x0, x19
    40a4:	bl	0 <grub_free>
    40a8:	adrp	x0, 0 <grub_strcasecmp>
    40ac:	ldp	x25, x26, [sp, #64]
    40b0:	ldr	x0, [x0]
    40b4:	ldr	w20, [x0]
    40b8:	cbz	w24, 4034 <grub_cmd_syslinux_source+0x164>
    40bc:	bl	0 <grub_env_get_menu>
    40c0:	cbz	x0, 40cc <grub_cmd_syslinux_source+0x1fc>
    40c4:	ldr	w1, [x0]
    40c8:	cbnz	w1, 4158 <grub_cmd_syslinux_source+0x288>
    40cc:	cmp	w22, #0x65
    40d0:	b.eq	411c <grub_cmd_syslinux_source+0x24c>  // b.none
    40d4:	bl	0 <grub_env_context_close>
    40d8:	b	403c <grub_cmd_syslinux_source+0x16c>
    40dc:	mov	x0, x27
    40e0:	bl	0 <grub_strdup>
    40e4:	mov	x19, x0
    40e8:	cbz	x0, 410c <grub_cmd_syslinux_source+0x23c>
    40ec:	mov	w1, #0x2f                  	// #47
    40f0:	stp	x25, x26, [sp, #64]
    40f4:	bl	0 <grub_strrchr>
    40f8:	mov	x21, x0
    40fc:	cbz	x0, 4168 <grub_cmd_syslinux_source+0x298>
    4100:	mov	x21, x19
    4104:	strb	wzr, [x0]
    4108:	b	3f88 <grub_cmd_syslinux_source+0xb8>
    410c:	adrp	x0, 0 <grub_strcasecmp>
    4110:	ldr	x0, [x0]
    4114:	ldr	w20, [x0]
    4118:	b	4030 <grub_cmd_syslinux_source+0x160>
    411c:	cmp	w23, #0x63
    4120:	cset	w0, ne  // ne = any
    4124:	bl	0 <grub_env_extractor_close>
    4128:	mov	w0, w20
    412c:	ldp	x19, x20, [sp, #16]
    4130:	ldp	x21, x22, [sp, #32]
    4134:	ldp	x23, x24, [sp, #48]
    4138:	ldp	x27, x28, [sp, #80]
    413c:	ldp	x29, x30, [sp], #96
    4140:	ret
    4144:	mov	x0, #0x10                  	// #16
    4148:	bl	0 <grub_zalloc>
    414c:	cbz	x0, 40a0 <grub_cmd_syslinux_source+0x1d0>
    4150:	bl	0 <grub_env_set_menu>
    4154:	b	4000 <grub_cmd_syslinux_source+0x130>
    4158:	mov	w2, #0x0                   	// #0
    415c:	mov	w1, #0x1                   	// #1
    4160:	bl	0 <grub_show_menu>
    4164:	b	40cc <grub_cmd_syslinux_source+0x1fc>
    4168:	mov	x0, x19
    416c:	bl	0 <grub_free>
    4170:	adrp	x0, 0 <grub_strcasecmp>
    4174:	ldr	x19, [x0]
    4178:	b	3f88 <grub_cmd_syslinux_source+0xb8>
    417c:	mov	w24, w20
    4180:	bl	0 <grub_cls>
    4184:	b	4068 <grub_cmd_syslinux_source+0x198>
	...

00000000000041c8 <grub_mod_init>:
    41c8:	stp	x29, x30, [sp, #-48]!
    41cc:	adrp	x4, 0 <grub_strcasecmp>
    41d0:	adrp	x0, 0 <grub_strcasecmp>
    41d4:	adrp	x5, 0 <grub_strcasecmp>
    41d8:	adrp	x3, 0 <grub_strcasecmp>
    41dc:	adrp	x1, 0 <grub_strcasecmp>
    41e0:	mov	x29, sp
    41e4:	ldr	x4, [x4]
    41e8:	stp	x19, x20, [sp, #16]
    41ec:	mov	w2, #0x0                   	// #0
    41f0:	ldr	x0, [x0]
    41f4:	stp	x21, x22, [sp, #32]
    41f8:	ldr	x20, [x1]
    41fc:	ldr	x22, [x5]
    4200:	mov	x1, x20
    4204:	ldr	x21, [x3]
    4208:	mov	x5, x22
    420c:	mov	x3, x21
    4210:	bl	0 <grub_register_extcmd>
    4214:	adrp	x2, 0 <grub_strcasecmp>
    4218:	mov	x6, x0
    421c:	adrp	x1, 0 <grub_strcasecmp>
    4220:	adrp	x0, 0 <grub_strcasecmp>
    4224:	ldr	x19, [x2]
    4228:	mov	x5, x22
    422c:	ldr	x4, [x1]
    4230:	mov	x3, x21
    4234:	ldr	x0, [x0]
    4238:	mov	x1, x20
    423c:	mov	w2, #0x0                   	// #0
    4240:	str	x6, [x19]
    4244:	bl	0 <grub_register_extcmd>
    4248:	mov	x6, x0
    424c:	adrp	x1, 0 <grub_strcasecmp>
    4250:	adrp	x0, 0 <grub_strcasecmp>
    4254:	mov	x5, x22
    4258:	mov	x3, x21
    425c:	ldr	x4, [x1]
    4260:	mov	w2, #0x0                   	// #0
    4264:	ldr	x0, [x0]
    4268:	mov	x1, x20
    426c:	str	x6, [x19, #8]
    4270:	bl	0 <grub_register_extcmd>
    4274:	mov	x6, x0
    4278:	adrp	x1, 0 <grub_strcasecmp>
    427c:	adrp	x0, 0 <grub_strcasecmp>
    4280:	mov	x5, x22
    4284:	mov	x3, x21
    4288:	ldr	x4, [x1]
    428c:	mov	w2, #0x0                   	// #0
    4290:	ldr	x0, [x0]
    4294:	mov	x1, x20
    4298:	str	x6, [x19, #16]
    429c:	bl	0 <grub_register_extcmd>
    42a0:	ldp	x21, x22, [sp, #32]
    42a4:	str	x0, [x19, #24]
    42a8:	ldp	x19, x20, [sp, #16]
    42ac:	ldp	x29, x30, [sp], #48
    42b0:	ret
    42b4:	nop
	...

0000000000004318 <grub_mod_fini>:
    4318:	stp	x29, x30, [sp, #-32]!
    431c:	adrp	x0, 0 <grub_strcasecmp>
    4320:	mov	x29, sp
    4324:	str	x19, [sp, #16]
    4328:	ldr	x19, [x0]
    432c:	ldr	x0, [x19]
    4330:	bl	0 <grub_unregister_extcmd>
    4334:	ldr	x0, [x19, #8]
    4338:	bl	0 <grub_unregister_extcmd>
    433c:	ldr	x0, [x19, #16]
    4340:	bl	0 <grub_unregister_extcmd>
    4344:	ldr	x0, [x19, #24]
    4348:	ldr	x19, [sp, #16]
    434c:	ldp	x29, x30, [sp], #32
    4350:	b	0 <grub_unregister_extcmd>
    4354:	nop
	...
