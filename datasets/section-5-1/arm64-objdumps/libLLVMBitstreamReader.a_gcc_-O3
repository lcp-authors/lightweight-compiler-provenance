In archive /home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//libLLVMBitstreamReader.a_gcc_-O3:

BitstreamReader.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>:
       0:	stp	x29, x30, [sp, #-128]!
       4:	mov	x29, sp
       8:	ldrb	w2, [x1, #8]
       c:	stp	x19, x20, [sp, #16]
      10:	tbnz	w2, #0, 3b8 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE+0x3b8>
      14:	ubfx	x2, x2, #1, #3
      18:	mov	x19, x8
      1c:	cmp	w2, #0x2
      20:	b.eq	138 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE+0x138>  // b.none
      24:	b.ls	d8 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE+0xd8>  // b.plast
      28:	cmp	w2, #0x4
      2c:	b.ne	100 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE+0x100>  // b.any
      30:	stp	x21, x22, [sp, #32]
      34:	add	x21, sp, #0x70
      38:	mov	w1, #0x6                   	// #6
      3c:	mov	x8, x21
      40:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
      44:	ldrb	w1, [sp, #120]
      48:	ldrb	w0, [sp, #104]
      4c:	and	w2, w1, #0x1
      50:	and	w1, w1, #0xfffffffd
      54:	strb	w1, [sp, #120]
      58:	bfxil	w0, w2, #0, #1
      5c:	orr	w0, w0, #0x2
      60:	strb	w0, [sp, #104]
      64:	ldr	x0, [sp, #112]
      68:	cbz	w2, 1c8 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE+0x1c8>
      6c:	str	x0, [sp, #96]
      70:	mov	x0, x21
      74:	str	xzr, [sp, #112]
      78:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
      7c:	ldrb	w0, [sp, #104]
      80:	and	w1, w0, #0x1
      84:	bfi	w0, w1, #1, #1
      88:	strb	w0, [sp, #104]
      8c:	cbnz	w1, 1e8 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE+0x1e8>
      90:	ldr	w2, [sp, #96]
      94:	tst	w2, #0xffffffc0
      98:	b.ne	3e8 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE+0x3e8>  // b.any
      9c:	adrp	x1, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
      a0:	add	x1, x1, #0x0
      a4:	ldrb	w0, [x19, #8]
      a8:	ldrb	w1, [x1, w2, uxtw]
      ac:	and	w0, w0, #0xfffffffc
      b0:	orr	w0, w0, #0x2
      b4:	str	x1, [x19]
      b8:	strb	w0, [x19, #8]
      bc:	add	x0, sp, #0x60
      c0:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
      c4:	mov	x0, x19
      c8:	ldp	x19, x20, [sp, #16]
      cc:	ldp	x21, x22, [sp, #32]
      d0:	ldp	x29, x30, [sp], #128
      d4:	ret
      d8:	cmp	w2, #0x1
      dc:	b.ne	390 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE+0x390>  // b.any
      e0:	ldr	x1, [x1]
      e4:	cmp	w1, #0x40
      e8:	b.hi	31c <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE+0x31c>  // b.pmore
      ec:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
      f0:	mov	x0, x19
      f4:	ldp	x19, x20, [sp, #16]
      f8:	ldp	x29, x30, [sp], #128
      fc:	ret
     100:	sub	w2, w2, #0x3
     104:	mov	w0, #0xfd                  	// #253
     108:	tst	w2, w0
     10c:	b.ne	390 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE+0x390>  // b.any
     110:	adrp	x1, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     114:	adrp	x0, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     118:	add	x1, x1, #0x0
     11c:	add	x0, x0, #0x0
     120:	mov	w2, #0x4b                  	// #75
     124:	stp	x21, x22, [sp, #32]
     128:	stp	x23, x24, [sp, #48]
     12c:	stp	x25, x26, [sp, #64]
     130:	stp	x27, x28, [sp, #80]
     134:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
     138:	stp	x21, x22, [sp, #32]
     13c:	ldr	x22, [x1]
     140:	stp	x23, x24, [sp, #48]
     144:	stp	x25, x26, [sp, #64]
     148:	cmp	w22, #0x40
     14c:	mov	w25, w22
     150:	b.hi	414 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE+0x414>  // b.pmore
     154:	add	x23, sp, #0x60
     158:	mov	x20, x0
     15c:	mov	w1, w22
     160:	mov	x8, x23
     164:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     168:	ldrb	w1, [sp, #104]
     16c:	and	w0, w1, #0x1
     170:	bfi	w1, w0, #1, #1
     174:	strb	w1, [sp, #104]
     178:	cbnz	w0, 238 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE+0x238>
     17c:	ldr	x24, [sp, #96]
     180:	sub	w22, w22, #0x1
     184:	lsr	w0, w24, w22
     188:	tbnz	w0, #0, 264 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE+0x264>
     18c:	ldrb	w0, [x19, #8]
     190:	and	x24, x24, #0xffffffff
     194:	str	x24, [x19]
     198:	and	w0, w0, #0xfffffffc
     19c:	orr	w0, w0, #0x2
     1a0:	strb	w0, [x19, #8]
     1a4:	mov	x0, x23
     1a8:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     1ac:	mov	x0, x19
     1b0:	ldp	x19, x20, [sp, #16]
     1b4:	ldp	x21, x22, [sp, #32]
     1b8:	ldp	x23, x24, [sp, #48]
     1bc:	ldp	x25, x26, [sp, #64]
     1c0:	ldp	x29, x30, [sp], #128
     1c4:	ret
     1c8:	str	w0, [sp, #96]
     1cc:	mov	x0, x21
     1d0:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     1d4:	ldrb	w0, [sp, #104]
     1d8:	and	w1, w0, #0x1
     1dc:	bfi	w0, w1, #1, #1
     1e0:	strb	w0, [sp, #104]
     1e4:	cbz	w1, 90 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE+0x90>
     1e8:	ldrb	w2, [x19, #8]
     1ec:	and	w0, w0, #0xfffffffd
     1f0:	ldr	x1, [sp, #96]
     1f4:	orr	w2, w2, #0x3
     1f8:	strb	w2, [x19, #8]
     1fc:	str	xzr, [sp, #96]
     200:	ands	x1, x1, #0xfffffffffffffffe
     204:	strb	w0, [sp, #104]
     208:	b.ne	25c <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE+0x25c>  // b.any
     20c:	adrp	x3, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     210:	adrp	x1, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     214:	adrp	x0, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     218:	add	x3, x3, #0x0
     21c:	add	x1, x1, #0x0
     220:	add	x0, x0, #0x0
     224:	mov	w2, #0x1ce                 	// #462
     228:	stp	x23, x24, [sp, #48]
     22c:	stp	x25, x26, [sp, #64]
     230:	stp	x27, x28, [sp, #80]
     234:	bl	0 <__assert_fail>
     238:	ldrb	w0, [x19, #8]
     23c:	and	w1, w1, #0xfffffffd
     240:	strb	w1, [sp, #104]
     244:	ldr	x2, [sp, #96]
     248:	str	xzr, [sp, #96]
     24c:	orr	w0, w0, #0x3
     250:	str	x2, [x19]
     254:	strb	w0, [x19, #8]
     258:	b	1a4 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE+0x1a4>
     25c:	str	x1, [x19]
     260:	b	bc <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE+0xbc>
     264:	stp	x27, x28, [sp, #80]
     268:	mov	w27, #0xffffffff            	// #-1
     26c:	mov	w28, #0x1                   	// #1
     270:	lsl	w27, w27, w22
     274:	add	x21, sp, #0x70
     278:	bic	w24, w24, w27
     27c:	mov	w26, #0x0                   	// #0
     280:	mvn	w27, w27
     284:	lsl	w28, w28, w22
     288:	b	2f8 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE+0x2f8>
     28c:	mov	x0, x23
     290:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     294:	ldrb	w1, [sp, #120]
     298:	ldrb	w0, [sp, #104]
     29c:	and	w2, w1, #0x1
     2a0:	and	w1, w1, #0xfffffffd
     2a4:	strb	w1, [sp, #120]
     2a8:	bfxil	w0, w2, #0, #1
     2ac:	orr	w0, w0, #0x2
     2b0:	strb	w0, [sp, #104]
     2b4:	ldr	x0, [sp, #112]
     2b8:	str	x0, [sp, #96]
     2bc:	cbz	w2, 2c4 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE+0x2c4>
     2c0:	str	xzr, [sp, #112]
     2c4:	mov	x0, x21
     2c8:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     2cc:	ldrb	w0, [sp, #104]
     2d0:	and	w1, w0, #0x1
     2d4:	bfi	w0, w1, #1, #1
     2d8:	strb	w0, [sp, #104]
     2dc:	cbnz	w1, 368 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE+0x368>
     2e0:	ldr	x1, [sp, #96]
     2e4:	and	w0, w27, w1
     2e8:	tst	w28, w1
     2ec:	lsl	x0, x0, x26
     2f0:	orr	x24, x24, x0
     2f4:	b.eq	34c <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE+0x34c>  // b.none
     2f8:	mov	x0, x20
     2fc:	mov	x8, x21
     300:	mov	w1, w25
     304:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     308:	ldrb	w0, [sp, #104]
     30c:	add	w26, w26, w22
     310:	tbz	w0, #1, 28c <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE+0x28c>
     314:	mov	x0, x23
     318:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     31c:	adrp	x3, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     320:	adrp	x1, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     324:	adrp	x0, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     328:	add	x3, x3, #0x0
     32c:	add	x1, x1, #0x0
     330:	add	x0, x0, #0x0
     334:	mov	w2, #0x4d                  	// #77
     338:	stp	x21, x22, [sp, #32]
     33c:	stp	x23, x24, [sp, #48]
     340:	stp	x25, x26, [sp, #64]
     344:	stp	x27, x28, [sp, #80]
     348:	bl	0 <__assert_fail>
     34c:	ldrb	w0, [x19, #8]
     350:	and	w0, w0, #0xfffffffc
     354:	orr	w0, w0, #0x2
     358:	strb	w0, [x19, #8]
     35c:	ldp	x27, x28, [sp, #80]
     360:	str	x24, [x19]
     364:	b	1a4 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE+0x1a4>
     368:	ldrb	w1, [x19, #8]
     36c:	and	w0, w0, #0xfffffffd
     370:	ldr	x2, [sp, #96]
     374:	orr	w1, w1, #0x3
     378:	strb	w1, [x19, #8]
     37c:	str	xzr, [sp, #96]
     380:	strb	w0, [sp, #104]
     384:	ldp	x27, x28, [sp, #80]
     388:	str	x2, [x19]
     38c:	b	1a4 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE+0x1a4>
     390:	adrp	x1, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     394:	adrp	x0, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     398:	add	x1, x1, #0x0
     39c:	add	x0, x0, #0x0
     3a0:	mov	w2, #0x58                  	// #88
     3a4:	stp	x21, x22, [sp, #32]
     3a8:	stp	x23, x24, [sp, #48]
     3ac:	stp	x25, x26, [sp, #64]
     3b0:	stp	x27, x28, [sp, #80]
     3b4:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
     3b8:	adrp	x3, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     3bc:	adrp	x1, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     3c0:	adrp	x0, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     3c4:	add	x3, x3, #0x0
     3c8:	add	x1, x1, #0x0
     3cc:	add	x0, x0, #0x0
     3d0:	mov	w2, #0x45                  	// #69
     3d4:	stp	x21, x22, [sp, #32]
     3d8:	stp	x23, x24, [sp, #48]
     3dc:	stp	x25, x26, [sp, #64]
     3e0:	stp	x27, x28, [sp, #80]
     3e4:	bl	0 <__assert_fail>
     3e8:	adrp	x3, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     3ec:	adrp	x1, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     3f0:	adrp	x0, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     3f4:	add	x3, x3, #0x0
     3f8:	add	x1, x1, #0x0
     3fc:	add	x0, x0, #0x0
     400:	mov	w2, #0x9d                  	// #157
     404:	stp	x23, x24, [sp, #48]
     408:	stp	x25, x26, [sp, #64]
     40c:	stp	x27, x28, [sp, #80]
     410:	bl	0 <__assert_fail>
     414:	adrp	x3, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     418:	adrp	x1, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     41c:	adrp	x0, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     420:	add	x3, x3, #0x0
     424:	add	x1, x1, #0x0
     428:	add	x0, x0, #0x0
     42c:	mov	w2, #0x50                  	// #80
     430:	stp	x27, x28, [sp, #80]
     434:	bl	0 <__assert_fail>

0000000000000438 <_ZN4llvm15BitstreamCursor10skipRecordEj>:
     438:	stp	x29, x30, [sp, #-240]!
     43c:	cmp	w1, #0x3
     440:	mov	x29, sp
     444:	stp	x19, x20, [sp, #16]
     448:	mov	x20, x8
     44c:	mov	x19, x0
     450:	stp	x21, x22, [sp, #32]
     454:	b.eq	684 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x24c>  // b.none
     458:	ldp	x3, x2, [x0, #40]
     45c:	stp	x23, x24, [sp, #48]
     460:	sub	w1, w1, #0x4
     464:	sub	x2, x2, x3
     468:	cmp	x1, x2, asr #4
     46c:	b.cs	1404 <_ZN4llvm15BitstreamCursor10skipRecordEj+0xfcc>  // b.hs, b.nlast
     470:	lsl	x1, x1, #4
     474:	ldr	x22, [x3, x1]
     478:	ldr	w23, [x22, #8]
     47c:	cbz	w23, 13dc <_ZN4llvm15BitstreamCursor10skipRecordEj+0xfa4>
     480:	ldr	x1, [x22]
     484:	ldrb	w2, [x1, #8]
     488:	tbz	w2, #0, 620 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x1e8>
     48c:	ldr	w0, [x1]
     490:	str	w0, [sp, #100]
     494:	cmp	w23, #0x1
     498:	b.ls	11b0 <_ZN4llvm15BitstreamCursor10skipRecordEj+0xd78>  // b.plast
     49c:	mov	w0, w23
     4a0:	add	x24, sp, #0xe0
     4a4:	stp	x25, x26, [sp, #64]
     4a8:	add	x25, sp, #0xc0
     4ac:	add	x1, sp, #0xb0
     4b0:	stp	x27, x28, [sp, #80]
     4b4:	add	x27, sp, #0xd0
     4b8:	mov	w21, #0x1                   	// #1
     4bc:	str	x1, [sp, #104]
     4c0:	cmp	w21, w0
     4c4:	mov	w1, w21
     4c8:	b.cs	13e4 <_ZN4llvm15BitstreamCursor10skipRecordEj+0xfac>  // b.hs, b.nlast
     4cc:	ldr	x0, [x22]
     4d0:	add	x1, x0, x1, lsl #4
     4d4:	ldrb	w0, [x1, #8]
     4d8:	tbnz	w0, #0, 754 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x31c>
     4dc:	ubfx	x0, x0, #1, #3
     4e0:	cmp	w0, #0x3
     4e4:	b.eq	c44 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x80c>  // b.none
     4e8:	cmp	w0, #0x5
     4ec:	b.ne	768 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x330>  // b.any
     4f0:	mov	x0, x19
     4f4:	mov	w1, #0x6                   	// #6
     4f8:	mov	x8, x24
     4fc:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     500:	ldrb	w1, [sp, #232]
     504:	ldrb	w0, [sp, #200]
     508:	and	w2, w1, #0x1
     50c:	and	w1, w1, #0xfffffffd
     510:	strb	w1, [sp, #232]
     514:	bfxil	w0, w2, #0, #1
     518:	orr	w0, w0, #0x2
     51c:	strb	w0, [sp, #200]
     520:	ldr	x0, [sp, #224]
     524:	cbz	w2, 818 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x3e0>
     528:	str	x0, [sp, #192]
     52c:	mov	x0, x24
     530:	str	xzr, [sp, #224]
     534:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     538:	ldrb	w0, [sp, #200]
     53c:	and	w1, w0, #0x1
     540:	bfi	w0, w1, #1, #1
     544:	strb	w0, [sp, #200]
     548:	cbnz	w1, 838 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x400>
     54c:	ldr	w26, [sp, #192]
     550:	tbz	w26, #5, c2c <_ZN4llvm15BitstreamCursor10skipRecordEj+0x7f4>
     554:	and	w26, w26, #0x1f
     558:	mov	w28, #0x0                   	// #0
     55c:	b	5d8 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x1a0>
     560:	str	w0, [sp, #208]
     564:	ldrb	w0, [sp, #200]
     568:	tbnz	w0, #1, 113c <_ZN4llvm15BitstreamCursor10skipRecordEj+0xd04>
     56c:	mov	x0, x25
     570:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     574:	ldrb	w1, [sp, #216]
     578:	ldrb	w0, [sp, #200]
     57c:	and	w2, w1, #0x1
     580:	and	w1, w1, #0xfffffffd
     584:	strb	w1, [sp, #216]
     588:	bfxil	w0, w2, #0, #1
     58c:	orr	w0, w0, #0x2
     590:	strb	w0, [sp, #200]
     594:	cbnz	w2, b34 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x6fc>
     598:	ldr	w0, [sp, #208]
     59c:	str	w0, [sp, #192]
     5a0:	mov	x0, x27
     5a4:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     5a8:	mov	x0, x24
     5ac:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     5b0:	ldrb	w0, [sp, #200]
     5b4:	and	w1, w0, #0x1
     5b8:	bfi	w0, w1, #1, #1
     5bc:	strb	w0, [sp, #200]
     5c0:	cbnz	w1, 838 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x400>
     5c4:	ldr	w1, [sp, #192]
     5c8:	and	w0, w1, #0x1f
     5cc:	lsl	w0, w0, w28
     5d0:	orr	w26, w26, w0
     5d4:	tbz	w1, #5, c2c <_ZN4llvm15BitstreamCursor10skipRecordEj+0x7f4>
     5d8:	mov	x0, x19
     5dc:	mov	w1, #0x6                   	// #6
     5e0:	mov	x8, x24
     5e4:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     5e8:	ldrb	w1, [sp, #232]
     5ec:	add	w28, w28, #0x5
     5f0:	ldrb	w0, [sp, #216]
     5f4:	and	w2, w1, #0x1
     5f8:	and	w1, w1, #0xfffffffd
     5fc:	strb	w1, [sp, #232]
     600:	bfxil	w0, w2, #0, #1
     604:	orr	w0, w0, #0x2
     608:	strb	w0, [sp, #216]
     60c:	ldr	x0, [sp, #224]
     610:	cbz	w2, 560 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x128>
     614:	str	x0, [sp, #208]
     618:	str	xzr, [sp, #224]
     61c:	b	564 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x12c>
     620:	ubfx	x2, x2, #1, #3
     624:	mov	w3, #0xfd                  	// #253
     628:	sub	w2, w2, #0x3
     62c:	tst	w2, w3
     630:	b.ne	a74 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x63c>  // b.any
     634:	bl	0 <_ZNSt3_V216generic_categoryEv>
     638:	mov	x1, x0
     63c:	add	x8, sp, #0xe0
     640:	mov	x0, #0x54                  	// #84
     644:	adrp	x2, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     648:	add	x2, x2, #0x0
     64c:	bl	0 <_ZN4llvm17createStringErrorESt10error_codePKc>
     650:	ldrb	w1, [x20, #8]
     654:	ldr	x0, [sp, #224]
     658:	orr	w1, w1, #0x3
     65c:	strb	w1, [x20, #8]
     660:	ands	x0, x0, #0xfffffffffffffffe
     664:	b.eq	ed0 <_ZN4llvm15BitstreamCursor10skipRecordEj+0xa98>  // b.none
     668:	ldp	x23, x24, [sp, #48]
     66c:	str	x0, [x20]
     670:	mov	x0, x20
     674:	ldp	x19, x20, [sp, #16]
     678:	ldp	x21, x22, [sp, #32]
     67c:	ldp	x29, x30, [sp], #240
     680:	ret
     684:	add	x21, sp, #0xe0
     688:	mov	w1, #0x6                   	// #6
     68c:	mov	x8, x21
     690:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     694:	ldrb	w1, [sp, #232]
     698:	ldrb	w0, [sp, #200]
     69c:	and	w2, w1, #0x1
     6a0:	and	w1, w1, #0xfffffffd
     6a4:	strb	w1, [sp, #232]
     6a8:	bfxil	w0, w2, #0, #1
     6ac:	orr	w0, w0, #0x2
     6b0:	strb	w0, [sp, #200]
     6b4:	ldr	x0, [sp, #224]
     6b8:	cbz	w2, 7cc <_ZN4llvm15BitstreamCursor10skipRecordEj+0x394>
     6bc:	str	x0, [sp, #192]
     6c0:	mov	x0, x21
     6c4:	str	xzr, [sp, #224]
     6c8:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     6cc:	ldrb	w0, [sp, #200]
     6d0:	and	w1, w0, #0x1
     6d4:	bfi	w0, w1, #1, #1
     6d8:	strb	w0, [sp, #200]
     6dc:	cbz	w1, 7ec <_ZN4llvm15BitstreamCursor10skipRecordEj+0x3b4>
     6e0:	ldrb	w1, [sp, #120]
     6e4:	add	x22, sp, #0xc0
     6e8:	ldr	x2, [sp, #192]
     6ec:	and	w0, w0, #0xfffffffd
     6f0:	orr	w1, w1, #0x3
     6f4:	str	x2, [sp, #112]
     6f8:	strb	w1, [sp, #120]
     6fc:	str	xzr, [sp, #192]
     700:	strb	w0, [sp, #200]
     704:	mov	x0, x22
     708:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     70c:	ldrb	w0, [sp, #120]
     710:	and	w1, w0, #0x1
     714:	bfi	w0, w1, #1, #1
     718:	strb	w0, [sp, #120]
     71c:	cbz	w1, 938 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x500>
     720:	ldrb	w2, [x20, #8]
     724:	and	w0, w0, #0xfffffffd
     728:	ldr	x1, [sp, #112]
     72c:	orr	w2, w2, #0x3
     730:	strb	w2, [x20, #8]
     734:	str	xzr, [sp, #112]
     738:	ands	x1, x1, #0xfffffffffffffffe
     73c:	strb	w0, [sp, #120]
     740:	b.ne	ae8 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x6b0>  // b.any
     744:	stp	x23, x24, [sp, #48]
     748:	stp	x25, x26, [sp, #64]
     74c:	stp	x27, x28, [sp, #80]
     750:	b	7ac <_ZN4llvm15BitstreamCursor10skipRecordEj+0x374>
     754:	add	w21, w21, #0x1
     758:	cmp	w23, w21
     75c:	b.ls	11a8 <_ZN4llvm15BitstreamCursor10skipRecordEj+0xd70>  // b.plast
     760:	ldr	w0, [x22, #8]
     764:	b	4c0 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x88>
     768:	mov	x0, x19
     76c:	mov	x8, x25
     770:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     774:	ldrb	w0, [sp, #200]
     778:	and	w1, w0, #0x1
     77c:	bfi	w0, w1, #1, #1
     780:	strb	w0, [sp, #200]
     784:	cbz	w1, ea4 <_ZN4llvm15BitstreamCursor10skipRecordEj+0xa6c>
     788:	ldrb	w2, [x20, #8]
     78c:	and	w0, w0, #0xfffffffd
     790:	ldr	x1, [sp, #192]
     794:	orr	w2, w2, #0x3
     798:	strb	w2, [x20, #8]
     79c:	str	xzr, [sp, #192]
     7a0:	ands	x1, x1, #0xfffffffffffffffe
     7a4:	strb	w0, [sp, #200]
     7a8:	b.ne	b08 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x6d0>  // b.any
     7ac:	adrp	x3, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     7b0:	adrp	x1, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     7b4:	adrp	x0, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     7b8:	add	x3, x3, #0x0
     7bc:	add	x1, x1, #0x0
     7c0:	add	x0, x0, #0x0
     7c4:	mov	w2, #0x1ce                 	// #462
     7c8:	bl	0 <__assert_fail>
     7cc:	str	w0, [sp, #192]
     7d0:	mov	x0, x21
     7d4:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     7d8:	ldrb	w0, [sp, #200]
     7dc:	and	w1, w0, #0x1
     7e0:	bfi	w0, w1, #1, #1
     7e4:	strb	w0, [sp, #200]
     7e8:	cbnz	w1, 6e0 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x2a8>
     7ec:	stp	x23, x24, [sp, #48]
     7f0:	ldr	w23, [sp, #192]
     7f4:	tbnz	w23, #5, b44 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x70c>
     7f8:	ldrb	w0, [sp, #120]
     7fc:	add	x22, sp, #0xc0
     800:	str	w23, [sp, #112]
     804:	and	w0, w0, #0xfffffffc
     808:	orr	w0, w0, #0x2
     80c:	strb	w0, [sp, #120]
     810:	ldp	x23, x24, [sp, #48]
     814:	b	704 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x2cc>
     818:	str	w0, [sp, #192]
     81c:	mov	x0, x24
     820:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     824:	ldrb	w0, [sp, #200]
     828:	and	w1, w0, #0x1
     82c:	bfi	w0, w1, #1, #1
     830:	strb	w0, [sp, #200]
     834:	cbz	w1, 54c <_ZN4llvm15BitstreamCursor10skipRecordEj+0x114>
     838:	ldrb	w1, [sp, #216]
     83c:	and	w0, w0, #0xfffffffd
     840:	ldr	x2, [sp, #192]
     844:	orr	w1, w1, #0x3
     848:	str	xzr, [sp, #192]
     84c:	strb	w0, [sp, #200]
     850:	str	x2, [sp, #208]
     854:	strb	w1, [sp, #216]
     858:	mov	x0, x25
     85c:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     860:	ldrb	w0, [sp, #216]
     864:	and	w1, w0, #0x1
     868:	bfi	w0, w1, #1, #1
     86c:	strb	w0, [sp, #216]
     870:	cbnz	w1, 1338 <_ZN4llvm15BitstreamCursor10skipRecordEj+0xf00>
     874:	ldr	w2, [x19, #32]
     878:	mov	x3, #0x0                   	// #0
     87c:	ldr	w0, [sp, #208]
     880:	mov	w1, #0x0                   	// #0
     884:	cmp	w2, #0x1f
     888:	b.hi	d70 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x938>  // b.pmore
     88c:	add	w0, w0, #0x3
     890:	str	w1, [x19, #32]
     894:	ldr	x1, [x19, #16]
     898:	lsl	x0, x0, #3
     89c:	and	x0, x0, #0xffffffe0
     8a0:	ldr	x2, [x19, #8]
     8a4:	add	x1, x0, x1, lsl #3
     8a8:	sub	x1, x1, x3
     8ac:	lsr	x0, x1, #3
     8b0:	cmp	x2, x1, lsr #3
     8b4:	b.cc	1364 <_ZN4llvm15BitstreamCursor10skipRecordEj+0xf2c>  // b.lo, b.ul, b.last
     8b8:	and	x0, x0, #0xfffffffffffffff8
     8bc:	and	w1, w1, #0x3f
     8c0:	cmp	x2, x0
     8c4:	b.cc	141c <_ZN4llvm15BitstreamCursor10skipRecordEj+0xfe4>  // b.lo, b.ul, b.last
     8c8:	str	x0, [x19, #16]
     8cc:	str	wzr, [x19, #32]
     8d0:	cbz	w1, ad8 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x6a0>
     8d4:	mov	x0, x19
     8d8:	mov	x8, x24
     8dc:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     8e0:	ldrb	w0, [sp, #232]
     8e4:	and	w1, w0, #0x1
     8e8:	bfi	w0, w1, #1, #1
     8ec:	strb	w0, [sp, #232]
     8f0:	cbnz	w1, eb4 <_ZN4llvm15BitstreamCursor10skipRecordEj+0xa7c>
     8f4:	mov	x0, #0x1                   	// #1
     8f8:	str	x0, [sp, #192]
     8fc:	mov	x0, x24
     900:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     904:	ldr	x0, [sp, #192]
     908:	ands	x0, x0, #0xfffffffffffffffe
     90c:	b.eq	ad8 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x6a0>  // b.none
     910:	ldrb	w1, [x20, #8]
     914:	str	x0, [x20]
     918:	orr	w0, w1, #0x3
     91c:	strb	w0, [x20, #8]
     920:	add	x0, sp, #0xd0
     924:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     928:	ldp	x23, x24, [sp, #48]
     92c:	ldp	x25, x26, [sp, #64]
     930:	ldp	x27, x28, [sp, #80]
     934:	b	670 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x238>
     938:	mov	x0, x19
     93c:	mov	w1, #0x6                   	// #6
     940:	mov	x8, x21
     944:	stp	x23, x24, [sp, #48]
     948:	stp	x25, x26, [sp, #64]
     94c:	ldr	w25, [sp, #112]
     950:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     954:	ldrb	w1, [sp, #232]
     958:	ldrb	w0, [sp, #200]
     95c:	and	w2, w1, #0x1
     960:	and	w1, w1, #0xfffffffd
     964:	strb	w1, [sp, #232]
     968:	bfxil	w0, w2, #0, #1
     96c:	orr	w0, w0, #0x2
     970:	strb	w0, [sp, #200]
     974:	ldr	x0, [sp, #224]
     978:	cbnz	w2, e98 <_ZN4llvm15BitstreamCursor10skipRecordEj+0xa60>
     97c:	str	w0, [sp, #192]
     980:	mov	x0, x21
     984:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     988:	ldrb	w0, [sp, #200]
     98c:	and	w1, w0, #0x1
     990:	bfi	w0, w1, #1, #1
     994:	strb	w0, [sp, #200]
     998:	cbnz	w1, d8c <_ZN4llvm15BitstreamCursor10skipRecordEj+0x954>
     99c:	ldr	w23, [sp, #192]
     9a0:	tbz	w23, #5, f14 <_ZN4llvm15BitstreamCursor10skipRecordEj+0xadc>
     9a4:	and	w23, w23, #0x1f
     9a8:	add	x26, sp, #0xd0
     9ac:	mov	w24, #0x0                   	// #0
     9b0:	b	a2c <_ZN4llvm15BitstreamCursor10skipRecordEj+0x5f4>
     9b4:	str	w0, [sp, #208]
     9b8:	ldrb	w0, [sp, #200]
     9bc:	tbnz	w0, #1, 1130 <_ZN4llvm15BitstreamCursor10skipRecordEj+0xcf8>
     9c0:	mov	x0, x22
     9c4:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     9c8:	ldrb	w1, [sp, #216]
     9cc:	ldrb	w0, [sp, #200]
     9d0:	and	w2, w1, #0x1
     9d4:	and	w1, w1, #0xfffffffd
     9d8:	strb	w1, [sp, #216]
     9dc:	bfxil	w0, w2, #0, #1
     9e0:	orr	w0, w0, #0x2
     9e4:	strb	w0, [sp, #200]
     9e8:	cbnz	w2, 1088 <_ZN4llvm15BitstreamCursor10skipRecordEj+0xc50>
     9ec:	ldr	w0, [sp, #208]
     9f0:	str	w0, [sp, #192]
     9f4:	mov	x0, x26
     9f8:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     9fc:	mov	x0, x21
     a00:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     a04:	ldrb	w0, [sp, #200]
     a08:	and	w1, w0, #0x1
     a0c:	bfi	w0, w1, #1, #1
     a10:	strb	w0, [sp, #200]
     a14:	cbnz	w1, d8c <_ZN4llvm15BitstreamCursor10skipRecordEj+0x954>
     a18:	ldr	w1, [sp, #192]
     a1c:	and	w0, w1, #0x1f
     a20:	lsl	w0, w0, w24
     a24:	orr	w23, w23, w0
     a28:	tbz	w1, #5, f14 <_ZN4llvm15BitstreamCursor10skipRecordEj+0xadc>
     a2c:	mov	x0, x19
     a30:	mov	w1, #0x6                   	// #6
     a34:	mov	x8, x21
     a38:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     a3c:	ldrb	w1, [sp, #232]
     a40:	add	w24, w24, #0x5
     a44:	ldrb	w0, [sp, #216]
     a48:	and	w2, w1, #0x1
     a4c:	and	w1, w1, #0xfffffffd
     a50:	strb	w1, [sp, #232]
     a54:	bfxil	w0, w2, #0, #1
     a58:	orr	w0, w0, #0x2
     a5c:	strb	w0, [sp, #216]
     a60:	ldr	x0, [sp, #224]
     a64:	cbz	w2, 9b4 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x57c>
     a68:	str	x0, [sp, #208]
     a6c:	str	xzr, [sp, #224]
     a70:	b	9b8 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x580>
     a74:	add	x21, sp, #0xa0
     a78:	mov	x8, x21
     a7c:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     a80:	ldrb	w0, [sp, #168]
     a84:	and	w1, w0, #0x1
     a88:	bfi	w0, w1, #1, #1
     a8c:	strb	w0, [sp, #168]
     a90:	cbz	w1, e80 <_ZN4llvm15BitstreamCursor10skipRecordEj+0xa48>
     a94:	ldrb	w2, [x20, #8]
     a98:	and	w0, w0, #0xfffffffd
     a9c:	ldr	x1, [sp, #160]
     aa0:	orr	w2, w2, #0x3
     aa4:	strb	w2, [x20, #8]
     aa8:	str	xzr, [sp, #160]
     aac:	ands	x1, x1, #0xfffffffffffffffe
     ab0:	strb	w0, [sp, #168]
     ab4:	b.ne	ac4 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x68c>  // b.any
     ab8:	stp	x25, x26, [sp, #64]
     abc:	stp	x27, x28, [sp, #80]
     ac0:	b	7ac <_ZN4llvm15BitstreamCursor10skipRecordEj+0x374>
     ac4:	str	x1, [x20]
     ac8:	mov	x0, x21
     acc:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     ad0:	ldp	x23, x24, [sp, #48]
     ad4:	b	670 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x238>
     ad8:	add	w21, w21, #0x1
     adc:	mov	x0, x27
     ae0:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     ae4:	b	758 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x320>
     ae8:	str	x1, [x20]
     aec:	add	x0, sp, #0x70
     af0:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     af4:	mov	x0, x20
     af8:	ldp	x19, x20, [sp, #16]
     afc:	ldp	x21, x22, [sp, #32]
     b00:	ldp	x29, x30, [sp], #240
     b04:	ret
     b08:	str	x1, [x20]
     b0c:	mov	x0, x25
     b10:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     b14:	mov	x0, x20
     b18:	ldp	x19, x20, [sp, #16]
     b1c:	ldp	x21, x22, [sp, #32]
     b20:	ldp	x23, x24, [sp, #48]
     b24:	ldp	x25, x26, [sp, #64]
     b28:	ldp	x27, x28, [sp, #80]
     b2c:	ldp	x29, x30, [sp], #240
     b30:	ret
     b34:	ldr	x0, [sp, #208]
     b38:	str	x0, [sp, #192]
     b3c:	str	xzr, [sp, #208]
     b40:	b	5a0 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x168>
     b44:	and	w23, w23, #0x1f
     b48:	add	x22, sp, #0xc0
     b4c:	mov	w24, #0x0                   	// #0
     b50:	stp	x25, x26, [sp, #64]
     b54:	add	x25, sp, #0xd0
     b58:	b	bd4 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x79c>
     b5c:	str	w0, [sp, #208]
     b60:	ldrb	w0, [sp, #200]
     b64:	tbnz	w0, #1, 1130 <_ZN4llvm15BitstreamCursor10skipRecordEj+0xcf8>
     b68:	mov	x0, x22
     b6c:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     b70:	ldrb	w1, [sp, #216]
     b74:	ldrb	w0, [sp, #200]
     b78:	and	w2, w1, #0x1
     b7c:	and	w1, w1, #0xfffffffd
     b80:	strb	w1, [sp, #216]
     b84:	bfxil	w0, w2, #0, #1
     b88:	orr	w0, w0, #0x2
     b8c:	strb	w0, [sp, #200]
     b90:	cbnz	w2, c1c <_ZN4llvm15BitstreamCursor10skipRecordEj+0x7e4>
     b94:	ldr	w0, [sp, #208]
     b98:	str	w0, [sp, #192]
     b9c:	mov	x0, x25
     ba0:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     ba4:	mov	x0, x21
     ba8:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     bac:	ldrb	w0, [sp, #200]
     bb0:	and	w1, w0, #0x1
     bb4:	bfi	w0, w1, #1, #1
     bb8:	strb	w0, [sp, #200]
     bbc:	cbnz	w1, 128c <_ZN4llvm15BitstreamCursor10skipRecordEj+0xe54>
     bc0:	ldr	w1, [sp, #192]
     bc4:	and	w0, w1, #0x1f
     bc8:	lsl	w0, w0, w24
     bcc:	orr	w23, w23, w0
     bd0:	tbz	w1, #5, 126c <_ZN4llvm15BitstreamCursor10skipRecordEj+0xe34>
     bd4:	mov	x0, x19
     bd8:	mov	w1, #0x6                   	// #6
     bdc:	mov	x8, x21
     be0:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     be4:	ldrb	w1, [sp, #232]
     be8:	add	w24, w24, #0x5
     bec:	ldrb	w0, [sp, #216]
     bf0:	and	w2, w1, #0x1
     bf4:	and	w1, w1, #0xfffffffd
     bf8:	strb	w1, [sp, #232]
     bfc:	bfxil	w0, w2, #0, #1
     c00:	orr	w0, w0, #0x2
     c04:	strb	w0, [sp, #216]
     c08:	ldr	x0, [sp, #224]
     c0c:	cbz	w2, b5c <_ZN4llvm15BitstreamCursor10skipRecordEj+0x724>
     c10:	str	x0, [sp, #208]
     c14:	str	xzr, [sp, #224]
     c18:	b	b60 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x728>
     c1c:	ldr	x0, [sp, #208]
     c20:	str	x0, [sp, #192]
     c24:	str	xzr, [sp, #208]
     c28:	b	b9c <_ZN4llvm15BitstreamCursor10skipRecordEj+0x764>
     c2c:	ldrb	w0, [sp, #216]
     c30:	str	w26, [sp, #208]
     c34:	and	w0, w0, #0xfffffffc
     c38:	orr	w0, w0, #0x2
     c3c:	strb	w0, [sp, #216]
     c40:	b	858 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x420>
     c44:	mov	x0, x19
     c48:	mov	w1, #0x6                   	// #6
     c4c:	mov	x8, x24
     c50:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     c54:	ldrb	w1, [sp, #232]
     c58:	ldrb	w0, [sp, #200]
     c5c:	and	w2, w1, #0x1
     c60:	and	w1, w1, #0xfffffffd
     c64:	strb	w1, [sp, #232]
     c68:	bfxil	w0, w2, #0, #1
     c6c:	orr	w0, w0, #0x2
     c70:	strb	w0, [sp, #200]
     c74:	ldr	x0, [sp, #224]
     c78:	cbnz	w2, f08 <_ZN4llvm15BitstreamCursor10skipRecordEj+0xad0>
     c7c:	str	w0, [sp, #192]
     c80:	mov	x0, x24
     c84:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     c88:	ldrb	w0, [sp, #200]
     c8c:	and	w1, w0, #0x1
     c90:	bfi	w0, w1, #1, #1
     c94:	strb	w0, [sp, #200]
     c98:	cbnz	w1, f50 <_ZN4llvm15BitstreamCursor10skipRecordEj+0xb18>
     c9c:	ldr	w28, [sp, #192]
     ca0:	tbz	w28, #5, 11d0 <_ZN4llvm15BitstreamCursor10skipRecordEj+0xd98>
     ca4:	and	w28, w28, #0x1f
     ca8:	mov	w26, #0x0                   	// #0
     cac:	b	d28 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x8f0>
     cb0:	str	w0, [sp, #208]
     cb4:	ldrb	w0, [sp, #200]
     cb8:	tbnz	w0, #1, 113c <_ZN4llvm15BitstreamCursor10skipRecordEj+0xd04>
     cbc:	mov	x0, x25
     cc0:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     cc4:	ldrb	w1, [sp, #216]
     cc8:	ldrb	w0, [sp, #200]
     ccc:	and	w2, w1, #0x1
     cd0:	and	w1, w1, #0xfffffffd
     cd4:	strb	w1, [sp, #216]
     cd8:	bfxil	w0, w2, #0, #1
     cdc:	orr	w0, w0, #0x2
     ce0:	strb	w0, [sp, #200]
     ce4:	cbnz	w2, 1144 <_ZN4llvm15BitstreamCursor10skipRecordEj+0xd0c>
     ce8:	ldr	w0, [sp, #208]
     cec:	str	w0, [sp, #192]
     cf0:	mov	x0, x27
     cf4:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     cf8:	mov	x0, x24
     cfc:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     d00:	ldrb	w0, [sp, #200]
     d04:	and	w1, w0, #0x1
     d08:	bfi	w0, w1, #1, #1
     d0c:	strb	w0, [sp, #200]
     d10:	cbnz	w1, f50 <_ZN4llvm15BitstreamCursor10skipRecordEj+0xb18>
     d14:	ldr	w1, [sp, #192]
     d18:	and	w0, w1, #0x1f
     d1c:	lsl	w0, w0, w26
     d20:	orr	w28, w28, w0
     d24:	tbz	w1, #5, 11d0 <_ZN4llvm15BitstreamCursor10skipRecordEj+0xd98>
     d28:	mov	x0, x19
     d2c:	mov	w1, #0x6                   	// #6
     d30:	mov	x8, x24
     d34:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     d38:	ldrb	w1, [sp, #232]
     d3c:	add	w26, w26, #0x5
     d40:	ldrb	w0, [sp, #216]
     d44:	and	w2, w1, #0x1
     d48:	and	w1, w1, #0xfffffffd
     d4c:	strb	w1, [sp, #232]
     d50:	bfxil	w0, w2, #0, #1
     d54:	orr	w0, w0, #0x2
     d58:	strb	w0, [sp, #216]
     d5c:	ldr	x0, [sp, #224]
     d60:	cbz	w2, cb0 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x878>
     d64:	str	x0, [sp, #208]
     d68:	str	xzr, [sp, #224]
     d6c:	b	cb4 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x87c>
     d70:	ldr	x4, [x19, #24]
     d74:	sub	w2, w2, #0x20
     d78:	mov	x3, #0x20                  	// #32
     d7c:	mov	w1, w3
     d80:	lsr	x2, x4, x2
     d84:	str	x2, [x19, #24]
     d88:	b	88c <_ZN4llvm15BitstreamCursor10skipRecordEj+0x454>
     d8c:	ldrb	w1, [sp, #136]
     d90:	and	w0, w0, #0xfffffffd
     d94:	ldr	x2, [sp, #192]
     d98:	orr	w1, w1, #0x3
     d9c:	str	x2, [sp, #128]
     da0:	strb	w1, [sp, #136]
     da4:	str	xzr, [sp, #192]
     da8:	strb	w0, [sp, #200]
     dac:	mov	x0, x22
     db0:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     db4:	ldrb	w0, [sp, #136]
     db8:	and	w1, w0, #0x1
     dbc:	bfi	w0, w1, #1, #1
     dc0:	strb	w0, [sp, #136]
     dc4:	cbnz	w1, efc <_ZN4llvm15BitstreamCursor10skipRecordEj+0xac4>
     dc8:	ldr	w24, [sp, #128]
     dcc:	add	x22, sp, #0xd0
     dd0:	add	x26, sp, #0x90
     dd4:	mov	w23, #0x0                   	// #0
     dd8:	cbz	w24, e58 <_ZN4llvm15BitstreamCursor10skipRecordEj+0xa20>
     ddc:	stp	x27, x28, [sp, #80]
     de0:	mov	x0, x19
     de4:	mov	w1, #0x6                   	// #6
     de8:	mov	x8, x22
     dec:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     df0:	ldrb	w0, [sp, #216]
     df4:	and	w1, w0, #0x1
     df8:	bfi	w0, w1, #1, #1
     dfc:	strb	w0, [sp, #216]
     e00:	cbnz	w1, f2c <_ZN4llvm15BitstreamCursor10skipRecordEj+0xaf4>
     e04:	ldr	x27, [sp, #208]
     e08:	tbnz	w27, #5, 1098 <_ZN4llvm15BitstreamCursor10skipRecordEj+0xc60>
     e0c:	ldrb	w0, [sp, #152]
     e10:	and	x27, x27, #0xffffffff
     e14:	str	x27, [sp, #144]
     e18:	and	w0, w0, #0xfffffffc
     e1c:	orr	w0, w0, #0x2
     e20:	strb	w0, [sp, #152]
     e24:	mov	x0, x22
     e28:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     e2c:	ldrb	w0, [sp, #152]
     e30:	and	w1, w0, #0x1
     e34:	bfi	w0, w1, #1, #1
     e38:	strb	w0, [sp, #152]
     e3c:	cbnz	w1, 1300 <_ZN4llvm15BitstreamCursor10skipRecordEj+0xec8>
     e40:	add	w23, w23, #0x1
     e44:	mov	x0, x26
     e48:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     e4c:	cmp	w24, w23
     e50:	b.ne	de0 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x9a8>  // b.any
     e54:	ldp	x27, x28, [sp, #80]
     e58:	str	w25, [x20]
     e5c:	ldrb	w0, [x20, #8]
     e60:	and	w0, w0, #0xfffffffc
     e64:	orr	w0, w0, #0x2
     e68:	strb	w0, [x20, #8]
     e6c:	add	x0, sp, #0x80
     e70:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     e74:	ldp	x23, x24, [sp, #48]
     e78:	ldp	x25, x26, [sp, #64]
     e7c:	b	aec <_ZN4llvm15BitstreamCursor10skipRecordEj+0x6b4>
     e80:	ldr	w1, [sp, #160]
     e84:	mov	x0, x21
     e88:	str	w1, [sp, #100]
     e8c:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     e90:	ldr	w23, [x22, #8]
     e94:	b	494 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x5c>
     e98:	str	x0, [sp, #192]
     e9c:	str	xzr, [sp, #224]
     ea0:	b	980 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x548>
     ea4:	add	w21, w21, #0x1
     ea8:	mov	x0, x25
     eac:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     eb0:	b	758 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x320>
     eb4:	ldr	x1, [sp, #224]
     eb8:	and	w0, w0, #0xfffffffd
     ebc:	str	xzr, [sp, #224]
     ec0:	orr	x1, x1, #0x1
     ec4:	str	x1, [sp, #192]
     ec8:	strb	w0, [sp, #232]
     ecc:	b	8fc <_ZN4llvm15BitstreamCursor10skipRecordEj+0x4c4>
     ed0:	adrp	x3, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     ed4:	adrp	x1, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     ed8:	adrp	x0, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     edc:	add	x3, x3, #0x0
     ee0:	add	x1, x1, #0x0
     ee4:	add	x0, x0, #0x0
     ee8:	mov	w2, #0x1ce                 	// #462
     eec:	stp	x25, x26, [sp, #64]
     ef0:	stp	x27, x28, [sp, #80]
     ef4:	str	xzr, [sp, #224]
     ef8:	bl	0 <__assert_fail>
     efc:	add	x0, sp, #0x80
     f00:	stp	x27, x28, [sp, #80]
     f04:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     f08:	str	x0, [sp, #192]
     f0c:	str	xzr, [sp, #224]
     f10:	b	c80 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x848>
     f14:	ldrb	w0, [sp, #136]
     f18:	str	w23, [sp, #128]
     f1c:	and	w0, w0, #0xfffffffc
     f20:	orr	w0, w0, #0x2
     f24:	strb	w0, [sp, #136]
     f28:	b	dac <_ZN4llvm15BitstreamCursor10skipRecordEj+0x974>
     f2c:	ldrb	w1, [sp, #152]
     f30:	and	w0, w0, #0xfffffffd
     f34:	ldr	x2, [sp, #208]
     f38:	orr	w1, w1, #0x3
     f3c:	str	x2, [sp, #144]
     f40:	strb	w1, [sp, #152]
     f44:	str	xzr, [sp, #208]
     f48:	strb	w0, [sp, #216]
     f4c:	b	e24 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x9ec>
     f50:	ldrb	w1, [sp, #184]
     f54:	and	w0, w0, #0xfffffffd
     f58:	ldr	x2, [sp, #192]
     f5c:	orr	w1, w1, #0x3
     f60:	str	x2, [sp, #176]
     f64:	strb	w1, [sp, #184]
     f68:	str	xzr, [sp, #192]
     f6c:	strb	w0, [sp, #200]
     f70:	mov	x0, x25
     f74:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     f78:	ldrb	w0, [sp, #184]
     f7c:	and	w1, w0, #0x1
     f80:	bfi	w0, w1, #1, #1
     f84:	strb	w0, [sp, #184]
     f88:	cbnz	w1, 137c <_ZN4llvm15BitstreamCursor10skipRecordEj+0xf44>
     f8c:	add	w0, w21, #0x2
     f90:	ldr	w26, [sp, #176]
     f94:	cmp	w0, w23
     f98:	b.ne	14a4 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x106c>  // b.any
     f9c:	ldr	w0, [x22, #8]
     fa0:	add	w21, w21, #0x1
     fa4:	cmp	x21, x0
     fa8:	b.cs	13e4 <_ZN4llvm15BitstreamCursor10skipRecordEj+0xfac>  // b.hs, b.nlast
     fac:	ldr	x1, [x22]
     fb0:	lsl	x21, x21, #4
     fb4:	add	x28, x1, x21
     fb8:	ldrb	w0, [x28, #8]
     fbc:	tbnz	w0, #0, 1484 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x104c>
     fc0:	ubfx	x0, x0, #1, #3
     fc4:	cmp	w0, #0x2
     fc8:	b.eq	11e8 <_ZN4llvm15BitstreamCursor10skipRecordEj+0xdb0>  // b.none
     fcc:	cmp	w0, #0x4
     fd0:	b.ne	1070 <_ZN4llvm15BitstreamCursor10skipRecordEj+0xc38>  // b.any
     fd4:	ldp	x3, x1, [x19, #8]
     fd8:	add	w26, w26, w26, lsl #1
     fdc:	ldr	w2, [x19, #32]
     fe0:	lsl	w0, w26, #1
     fe4:	add	x0, x0, x1, lsl #3
     fe8:	sub	x0, x0, x2
     fec:	and	w1, w0, #0x3f
     ff0:	lsr	x2, x0, #3
     ff4:	and	x2, x2, #0xfffffffffffffff8
     ff8:	cmp	x2, x3
     ffc:	b.hi	141c <_ZN4llvm15BitstreamCursor10skipRecordEj+0xfe4>  // b.pmore
    1000:	str	x2, [x19, #16]
    1004:	str	wzr, [x19, #32]
    1008:	cbz	w1, 1198 <_ZN4llvm15BitstreamCursor10skipRecordEj+0xd60>
    100c:	mov	x0, x19
    1010:	mov	x8, x24
    1014:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    1018:	ldrb	w0, [sp, #232]
    101c:	and	w1, w0, #0x1
    1020:	bfi	w0, w1, #1, #1
    1024:	strb	w0, [sp, #232]
    1028:	cbnz	w1, 12b8 <_ZN4llvm15BitstreamCursor10skipRecordEj+0xe80>
    102c:	mov	x0, #0x1                   	// #1
    1030:	str	x0, [sp, #208]
    1034:	mov	x0, x24
    1038:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    103c:	ldr	x0, [sp, #208]
    1040:	ands	x0, x0, #0xfffffffffffffffe
    1044:	b.eq	1198 <_ZN4llvm15BitstreamCursor10skipRecordEj+0xd60>  // b.none
    1048:	ldrb	w1, [x20, #8]
    104c:	str	x0, [x20]
    1050:	orr	w0, w1, #0x3
    1054:	strb	w0, [x20, #8]
    1058:	add	x0, sp, #0xb0
    105c:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    1060:	ldp	x23, x24, [sp, #48]
    1064:	ldp	x25, x26, [sp, #64]
    1068:	ldp	x27, x28, [sp, #80]
    106c:	b	670 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x238>
    1070:	cmp	w0, #0x1
    1074:	b.eq	1154 <_ZN4llvm15BitstreamCursor10skipRecordEj+0xd1c>  // b.none
    1078:	adrp	x0, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    107c:	mov	w1, #0x1                   	// #1
    1080:	add	x0, x0, #0x0
    1084:	bl	0 <_ZN4llvm18report_fatal_errorEPKcb>
    1088:	ldr	x0, [sp, #208]
    108c:	str	x0, [sp, #192]
    1090:	str	xzr, [sp, #208]
    1094:	b	9f4 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x5bc>
    1098:	and	x27, x27, #0x1f
    109c:	mov	w28, #0x0                   	// #0
    10a0:	b	110c <_ZN4llvm15BitstreamCursor10skipRecordEj+0xcd4>
    10a4:	mov	x0, x22
    10a8:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    10ac:	ldrb	w1, [sp, #232]
    10b0:	ldrb	w0, [sp, #216]
    10b4:	and	w2, w1, #0x1
    10b8:	and	w1, w1, #0xfffffffd
    10bc:	strb	w1, [sp, #232]
    10c0:	bfxil	w0, w2, #0, #1
    10c4:	orr	w0, w0, #0x2
    10c8:	strb	w0, [sp, #216]
    10cc:	ldr	x0, [sp, #224]
    10d0:	str	x0, [sp, #208]
    10d4:	cbz	w2, 10dc <_ZN4llvm15BitstreamCursor10skipRecordEj+0xca4>
    10d8:	str	xzr, [sp, #224]
    10dc:	mov	x0, x21
    10e0:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    10e4:	ldrb	w0, [sp, #216]
    10e8:	and	w1, w0, #0x1
    10ec:	bfi	w0, w1, #1, #1
    10f0:	strb	w0, [sp, #216]
    10f4:	cbnz	w1, f2c <_ZN4llvm15BitstreamCursor10skipRecordEj+0xaf4>
    10f8:	ldr	x1, [sp, #208]
    10fc:	and	x0, x1, #0x1f
    1100:	lsl	x0, x0, x28
    1104:	orr	x27, x27, x0
    1108:	tbz	w1, #5, 12e8 <_ZN4llvm15BitstreamCursor10skipRecordEj+0xeb0>
    110c:	mov	x0, x19
    1110:	mov	x8, x21
    1114:	mov	w1, #0x6                   	// #6
    1118:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    111c:	ldrb	w0, [sp, #216]
    1120:	add	w28, w28, #0x5
    1124:	tbz	w0, #1, 10a4 <_ZN4llvm15BitstreamCursor10skipRecordEj+0xc6c>
    1128:	mov	x0, x22
    112c:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    1130:	mov	x0, x22
    1134:	stp	x27, x28, [sp, #80]
    1138:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    113c:	mov	x0, x25
    1140:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    1144:	ldr	x0, [sp, #208]
    1148:	str	x0, [sp, #192]
    114c:	str	xzr, [sp, #208]
    1150:	b	cf0 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x8b8>
    1154:	ldr	x2, [x1, x21]
    1158:	cmp	w2, #0x40
    115c:	b.hi	1464 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x102c>  // b.pmore
    1160:	ldp	x3, x1, [x19, #8]
    1164:	mov	w0, w26
    1168:	ldr	w4, [x19, #32]
    116c:	lsl	x1, x1, #3
    1170:	sub	x1, x1, x4
    1174:	madd	x0, x0, x2, x1
    1178:	and	w1, w0, #0x3f
    117c:	lsr	x0, x0, #3
    1180:	and	x0, x0, #0xfffffffffffffff8
    1184:	cmp	x0, x3
    1188:	b.hi	141c <_ZN4llvm15BitstreamCursor10skipRecordEj+0xfe4>  // b.pmore
    118c:	str	x0, [x19, #16]
    1190:	str	wzr, [x19, #32]
    1194:	cbnz	w1, 100c <_ZN4llvm15BitstreamCursor10skipRecordEj+0xbd4>
    1198:	ldr	x0, [sp, #104]
    119c:	mov	w21, w23
    11a0:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    11a4:	b	758 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x320>
    11a8:	ldp	x25, x26, [sp, #64]
    11ac:	ldp	x27, x28, [sp, #80]
    11b0:	ldrb	w0, [x20, #8]
    11b4:	ldr	w1, [sp, #100]
    11b8:	and	w0, w0, #0xfffffffc
    11bc:	orr	w0, w0, #0x2
    11c0:	strb	w0, [x20, #8]
    11c4:	ldp	x23, x24, [sp, #48]
    11c8:	str	w1, [x20]
    11cc:	b	670 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x238>
    11d0:	ldrb	w0, [sp, #184]
    11d4:	str	w28, [sp, #176]
    11d8:	and	w0, w0, #0xfffffffc
    11dc:	orr	w0, w0, #0x2
    11e0:	strb	w0, [sp, #184]
    11e4:	b	f70 <_ZN4llvm15BitstreamCursor10skipRecordEj+0xb38>
    11e8:	ldr	x1, [x1, x21]
    11ec:	cmp	w1, #0x40
    11f0:	b.hi	1444 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x100c>  // b.pmore
    11f4:	cbz	w26, 1198 <_ZN4llvm15BitstreamCursor10skipRecordEj+0xd60>
    11f8:	mov	x0, x19
    11fc:	mov	x8, x24
    1200:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    1204:	ldrb	w0, [sp, #232]
    1208:	and	w1, w0, #0x1
    120c:	bfi	w0, w1, #1, #1
    1210:	strb	w0, [sp, #232]
    1214:	cbnz	w1, 13a8 <_ZN4llvm15BitstreamCursor10skipRecordEj+0xf70>
    1218:	mov	x0, x24
    121c:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    1220:	subs	w26, w26, #0x1
    1224:	b.eq	1198 <_ZN4llvm15BitstreamCursor10skipRecordEj+0xd60>  // b.none
    1228:	ldrb	w0, [x28, #8]
    122c:	tbnz	w0, #0, 124c <_ZN4llvm15BitstreamCursor10skipRecordEj+0xe14>
    1230:	ubfx	x0, x0, #1, #3
    1234:	cmp	w0, #0x2
    1238:	b.ls	12d4 <_ZN4llvm15BitstreamCursor10skipRecordEj+0xe9c>  // b.plast
    123c:	add	w0, w0, #0x5
    1240:	and	w0, w0, #0x7
    1244:	cmp	w0, #0x2
    1248:	b.hi	12d8 <_ZN4llvm15BitstreamCursor10skipRecordEj+0xea0>  // b.pmore
    124c:	adrp	x3, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    1250:	adrp	x1, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    1254:	adrp	x0, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    1258:	add	x3, x3, #0x0
    125c:	add	x1, x1, #0x0
    1260:	add	x0, x0, #0x0
    1264:	mov	w2, #0x79                  	// #121
    1268:	bl	0 <__assert_fail>
    126c:	ldrb	w0, [sp, #120]
    1270:	str	w23, [sp, #112]
    1274:	and	w0, w0, #0xfffffffc
    1278:	orr	w0, w0, #0x2
    127c:	strb	w0, [sp, #120]
    1280:	ldp	x23, x24, [sp, #48]
    1284:	ldp	x25, x26, [sp, #64]
    1288:	b	704 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x2cc>
    128c:	ldrb	w1, [sp, #120]
    1290:	and	w0, w0, #0xfffffffd
    1294:	ldr	x2, [sp, #192]
    1298:	orr	w1, w1, #0x3
    129c:	str	x2, [sp, #112]
    12a0:	strb	w1, [sp, #120]
    12a4:	str	xzr, [sp, #192]
    12a8:	strb	w0, [sp, #200]
    12ac:	ldp	x23, x24, [sp, #48]
    12b0:	ldp	x25, x26, [sp, #64]
    12b4:	b	704 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x2cc>
    12b8:	ldr	x1, [sp, #224]
    12bc:	and	w0, w0, #0xfffffffd
    12c0:	str	xzr, [sp, #224]
    12c4:	orr	x1, x1, #0x1
    12c8:	str	x1, [sp, #208]
    12cc:	strb	w0, [sp, #232]
    12d0:	b	1034 <_ZN4llvm15BitstreamCursor10skipRecordEj+0xbfc>
    12d4:	cbnz	w0, 143c <_ZN4llvm15BitstreamCursor10skipRecordEj+0x1004>
    12d8:	adrp	x0, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    12dc:	mov	w1, #0x1                   	// #1
    12e0:	add	x0, x0, #0x0
    12e4:	bl	0 <_ZN4llvm18report_fatal_errorEPKcb>
    12e8:	ldrb	w0, [sp, #152]
    12ec:	str	x27, [sp, #144]
    12f0:	and	w0, w0, #0xfffffffc
    12f4:	orr	w0, w0, #0x2
    12f8:	strb	w0, [sp, #152]
    12fc:	b	e24 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x9ec>
    1300:	ldrb	w2, [x20, #8]
    1304:	and	w0, w0, #0xfffffffd
    1308:	ldr	x1, [sp, #144]
    130c:	orr	w2, w2, #0x3
    1310:	strb	w2, [x20, #8]
    1314:	str	xzr, [sp, #144]
    1318:	ands	x1, x1, #0xfffffffffffffffe
    131c:	strb	w0, [sp, #152]
    1320:	b.eq	7ac <_ZN4llvm15BitstreamCursor10skipRecordEj+0x374>  // b.none
    1324:	str	x1, [x20]
    1328:	add	x0, sp, #0x90
    132c:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    1330:	ldp	x27, x28, [sp, #80]
    1334:	b	e6c <_ZN4llvm15BitstreamCursor10skipRecordEj+0xa34>
    1338:	ldrb	w2, [x20, #8]
    133c:	and	w0, w0, #0xfffffffd
    1340:	ldr	x1, [sp, #208]
    1344:	orr	w2, w2, #0x3
    1348:	strb	w2, [x20, #8]
    134c:	str	xzr, [sp, #208]
    1350:	ands	x1, x1, #0xfffffffffffffffe
    1354:	strb	w0, [sp, #216]
    1358:	b.eq	7ac <_ZN4llvm15BitstreamCursor10skipRecordEj+0x374>  // b.none
    135c:	str	x1, [x20]
    1360:	b	920 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x4e8>
    1364:	str	x2, [x19, #16]
    1368:	add	x0, sp, #0xd0
    136c:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    1370:	ldp	x25, x26, [sp, #64]
    1374:	ldp	x27, x28, [sp, #80]
    1378:	b	11b0 <_ZN4llvm15BitstreamCursor10skipRecordEj+0xd78>
    137c:	ldrb	w2, [x20, #8]
    1380:	and	w0, w0, #0xfffffffd
    1384:	ldr	x1, [sp, #176]
    1388:	orr	w2, w2, #0x3
    138c:	strb	w2, [x20, #8]
    1390:	str	xzr, [sp, #176]
    1394:	ands	x1, x1, #0xfffffffffffffffe
    1398:	strb	w0, [sp, #184]
    139c:	b.eq	7ac <_ZN4llvm15BitstreamCursor10skipRecordEj+0x374>  // b.none
    13a0:	str	x1, [x20]
    13a4:	b	1058 <_ZN4llvm15BitstreamCursor10skipRecordEj+0xc20>
    13a8:	ldrb	w2, [x20, #8]
    13ac:	and	w0, w0, #0xfffffffd
    13b0:	ldr	x1, [sp, #224]
    13b4:	orr	w2, w2, #0x3
    13b8:	strb	w2, [x20, #8]
    13bc:	str	xzr, [sp, #224]
    13c0:	ands	x1, x1, #0xfffffffffffffffe
    13c4:	strb	w0, [sp, #232]
    13c8:	b.eq	7ac <_ZN4llvm15BitstreamCursor10skipRecordEj+0x374>  // b.none
    13cc:	str	x1, [x20]
    13d0:	mov	x0, x24
    13d4:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    13d8:	b	1058 <_ZN4llvm15BitstreamCursor10skipRecordEj+0xc20>
    13dc:	stp	x25, x26, [sp, #64]
    13e0:	stp	x27, x28, [sp, #80]
    13e4:	adrp	x3, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    13e8:	adrp	x1, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    13ec:	adrp	x0, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    13f0:	add	x3, x3, #0x0
    13f4:	add	x1, x1, #0x0
    13f8:	add	x0, x0, #0x0
    13fc:	mov	w2, #0x99                  	// #153
    1400:	bl	0 <__assert_fail>
    1404:	adrp	x0, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    1408:	mov	w1, #0x1                   	// #1
    140c:	add	x0, x0, #0x0
    1410:	stp	x25, x26, [sp, #64]
    1414:	stp	x27, x28, [sp, #80]
    1418:	bl	0 <_ZN4llvm18report_fatal_errorEPKcb>
    141c:	adrp	x3, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    1420:	adrp	x1, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    1424:	adrp	x0, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    1428:	add	x3, x3, #0x0
    142c:	add	x1, x1, #0x0
    1430:	add	x0, x0, #0x0
    1434:	mov	w2, #0x85                  	// #133
    1438:	bl	0 <__assert_fail>
    143c:	ldr	x1, [x28]
    1440:	b	11f8 <_ZN4llvm15BitstreamCursor10skipRecordEj+0xdc0>
    1444:	adrp	x3, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    1448:	adrp	x1, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    144c:	adrp	x0, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    1450:	add	x3, x3, #0x0
    1454:	add	x1, x1, #0x0
    1458:	add	x0, x0, #0x0
    145c:	mov	w2, #0xa4                  	// #164
    1460:	bl	0 <__assert_fail>
    1464:	adrp	x3, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    1468:	adrp	x1, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    146c:	adrp	x0, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    1470:	add	x3, x3, #0x0
    1474:	add	x1, x1, #0x0
    1478:	add	x0, x0, #0x0
    147c:	mov	w2, #0x9e                  	// #158
    1480:	bl	0 <__assert_fail>
    1484:	adrp	x3, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    1488:	adrp	x1, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    148c:	adrp	x0, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    1490:	add	x3, x3, #0x0
    1494:	add	x1, x1, #0x0
    1498:	add	x0, x0, #0x0
    149c:	mov	w2, #0x77                  	// #119
    14a0:	bl	0 <__assert_fail>
    14a4:	adrp	x3, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    14a8:	adrp	x1, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    14ac:	adrp	x0, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    14b0:	add	x3, x3, #0x0
    14b4:	add	x1, x1, #0x0
    14b8:	add	x0, x0, #0x0
    14bc:	mov	w2, #0x95                  	// #149
    14c0:	bl	0 <__assert_fail>
    14c4:	nop

00000000000014c8 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE>:
    14c8:	stp	x29, x30, [sp, #-288]!
    14cc:	cmp	w1, #0x3
    14d0:	mov	x29, sp
    14d4:	stp	x19, x20, [sp, #16]
    14d8:	mov	x20, x2
    14dc:	mov	x19, x0
    14e0:	stp	x21, x22, [sp, #32]
    14e4:	mov	x21, x8
    14e8:	b.eq	17c8 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x300>  // b.none
    14ec:	stp	x25, x26, [sp, #64]
    14f0:	mov	x25, x3
    14f4:	sub	w1, w1, #0x4
    14f8:	ldp	x3, x2, [x0, #40]
    14fc:	stp	x23, x24, [sp, #48]
    1500:	sub	x2, x2, x3
    1504:	cmp	x1, x2, asr #4
    1508:	b.cs	28dc <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x1414>  // b.hs, b.nlast
    150c:	lsl	x1, x1, #4
    1510:	ldr	x24, [x3, x1]
    1514:	ldr	w26, [x24, #8]
    1518:	cbz	w26, 28f0 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x1428>
    151c:	ldr	x1, [x24]
    1520:	ldrb	w2, [x1, #8]
    1524:	tbz	w2, #0, 15f8 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x130>
    1528:	ldr	w0, [x1]
    152c:	str	w0, [sp, #116]
    1530:	cmp	w26, #0x1
    1534:	b.eq	248c <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xfc4>  // b.none
    1538:	mov	w0, w26
    153c:	stp	x27, x28, [sp, #80]
    1540:	add	x28, sp, #0x100
    1544:	adrp	x1, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    1548:	mov	w23, #0x1                   	// #1
    154c:	add	x1, x1, #0x0
    1550:	str	x1, [sp, #120]
    1554:	cmp	w23, w0
    1558:	b.cs	2888 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x13c0>  // b.hs, b.nlast
    155c:	ldr	x3, [x24]
    1560:	ubfiz	x2, x23, #4, #32
    1564:	add	x1, x3, x2
    1568:	ldrb	w0, [x1, #8]
    156c:	tbnz	w0, #0, 1aa4 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x5dc>
    1570:	ubfx	x0, x0, #1, #3
    1574:	cmp	w0, #0x3
    1578:	b.eq	1cc8 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x800>  // b.none
    157c:	cmp	w0, #0x5
    1580:	b.eq	1658 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x190>  // b.none
    1584:	add	x22, sp, #0xc0
    1588:	mov	x0, x19
    158c:	mov	x8, x22
    1590:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    1594:	ldrb	w0, [sp, #200]
    1598:	and	w1, w0, #0x1
    159c:	bfi	w0, w1, #1, #1
    15a0:	strb	w0, [sp, #200]
    15a4:	cbz	w1, 1a60 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x598>
    15a8:	ldrb	w2, [x21, #8]
    15ac:	and	w0, w0, #0xfffffffd
    15b0:	ldr	x1, [sp, #192]
    15b4:	orr	w2, w2, #0x3
    15b8:	strb	w2, [x21, #8]
    15bc:	str	xzr, [sp, #192]
    15c0:	ands	x1, x1, #0xfffffffffffffffe
    15c4:	strb	w0, [sp, #200]
    15c8:	b.eq	1894 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x3cc>  // b.none
    15cc:	str	x1, [x21]
    15d0:	mov	x0, x22
    15d4:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    15d8:	ldp	x23, x24, [sp, #48]
    15dc:	ldp	x25, x26, [sp, #64]
    15e0:	ldp	x27, x28, [sp, #80]
    15e4:	mov	x0, x21
    15e8:	ldp	x19, x20, [sp, #16]
    15ec:	ldp	x21, x22, [sp, #32]
    15f0:	ldp	x29, x30, [sp], #288
    15f4:	ret
    15f8:	ubfx	x2, x2, #1, #3
    15fc:	mov	w3, #0xfd                  	// #253
    1600:	sub	w2, w2, #0x3
    1604:	tst	w2, w3
    1608:	b.eq	28c8 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x1400>  // b.none
    160c:	add	x22, sp, #0xb0
    1610:	mov	x8, x22
    1614:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    1618:	ldrb	w0, [sp, #184]
    161c:	and	w1, w0, #0x1
    1620:	bfi	w0, w1, #1, #1
    1624:	strb	w0, [sp, #184]
    1628:	cbz	w1, 19fc <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x534>
    162c:	ldrb	w2, [x21, #8]
    1630:	and	w0, w0, #0xfffffffd
    1634:	ldr	x1, [sp, #176]
    1638:	orr	w2, w2, #0x3
    163c:	strb	w2, [x21, #8]
    1640:	str	xzr, [sp, #176]
    1644:	ands	x1, x1, #0xfffffffffffffffe
    1648:	strb	w0, [sp, #184]
    164c:	b.ne	1ae0 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x618>  // b.any
    1650:	stp	x27, x28, [sp, #80]
    1654:	b	1894 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x3cc>
    1658:	add	x22, sp, #0x110
    165c:	mov	x0, x19
    1660:	mov	w1, #0x6                   	// #6
    1664:	mov	x8, x22
    1668:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    166c:	ldrb	w1, [sp, #280]
    1670:	ldrb	w0, [sp, #248]
    1674:	and	w2, w1, #0x1
    1678:	and	w1, w1, #0xfffffffd
    167c:	strb	w1, [sp, #280]
    1680:	bfxil	w0, w2, #0, #1
    1684:	orr	w0, w0, #0x2
    1688:	strb	w0, [sp, #248]
    168c:	ldr	x0, [sp, #272]
    1690:	cbnz	w2, 19a4 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x4dc>
    1694:	str	w0, [sp, #240]
    1698:	mov	x0, x22
    169c:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    16a0:	ldrb	w0, [sp, #248]
    16a4:	and	w1, w0, #0x1
    16a8:	bfi	w0, w1, #1, #1
    16ac:	strb	w0, [sp, #248]
    16b0:	cbz	w1, 18b4 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x3ec>
    16b4:	ldrb	w1, [sp, #264]
    16b8:	add	x27, sp, #0xf0
    16bc:	ldr	x2, [sp, #240]
    16c0:	and	w0, w0, #0xfffffffd
    16c4:	orr	w1, w1, #0x3
    16c8:	str	xzr, [sp, #240]
    16cc:	strb	w0, [sp, #248]
    16d0:	str	x2, [sp, #256]
    16d4:	strb	w1, [sp, #264]
    16d8:	mov	x0, x27
    16dc:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    16e0:	ldrb	w0, [sp, #264]
    16e4:	and	w1, w0, #0x1
    16e8:	bfi	w0, w1, #1, #1
    16ec:	strb	w0, [sp, #264]
    16f0:	cbnz	w1, 2614 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x114c>
    16f4:	ldr	w0, [x19, #32]
    16f8:	mov	x3, #0x0                   	// #0
    16fc:	ldr	w4, [sp, #256]
    1700:	mov	w5, #0x0                   	// #0
    1704:	cmp	w0, #0x1f
    1708:	b.hi	1dc0 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x8f8>  // b.pmore
    170c:	ldp	x2, x27, [x19, #8]
    1710:	add	w1, w4, #0x3
    1714:	str	w5, [x19, #32]
    1718:	lsl	x1, x1, #3
    171c:	and	x1, x1, #0xffffffe0
    1720:	lsl	x27, x27, #3
    1724:	sub	x27, x27, x3
    1728:	add	x1, x1, x27
    172c:	lsr	x0, x1, #3
    1730:	cmp	x2, x1, lsr #3
    1734:	b.cc	242c <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xf64>  // b.lo, b.ul, b.last
    1738:	and	x0, x0, #0xfffffffffffffff8
    173c:	and	w1, w1, #0x3f
    1740:	cmp	x2, x0
    1744:	b.cc	28a8 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x13e0>  // b.lo, b.ul, b.last
    1748:	str	x0, [x19, #16]
    174c:	str	wzr, [x19, #32]
    1750:	cbz	w1, 1a14 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x54c>
    1754:	mov	x0, x19
    1758:	mov	x8, x22
    175c:	str	w4, [sp, #96]
    1760:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    1764:	ldrb	w0, [sp, #280]
    1768:	ldr	w4, [sp, #96]
    176c:	and	w1, w0, #0x1
    1770:	bfi	w0, w1, #1, #1
    1774:	strb	w0, [sp, #280]
    1778:	cbnz	w1, 1ecc <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xa04>
    177c:	mov	x0, #0x1                   	// #1
    1780:	str	x0, [sp, #240]
    1784:	mov	x0, x22
    1788:	str	w4, [sp, #96]
    178c:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    1790:	ldr	x0, [sp, #240]
    1794:	ldr	w4, [sp, #96]
    1798:	ands	x0, x0, #0xfffffffffffffffe
    179c:	b.eq	1a14 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x54c>  // b.none
    17a0:	ldrb	w1, [x21, #8]
    17a4:	str	x0, [x21]
    17a8:	orr	w0, w1, #0x3
    17ac:	strb	w0, [x21, #8]
    17b0:	add	x0, sp, #0x100
    17b4:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    17b8:	ldp	x23, x24, [sp, #48]
    17bc:	ldp	x25, x26, [sp, #64]
    17c0:	ldp	x27, x28, [sp, #80]
    17c4:	b	15e4 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x11c>
    17c8:	add	x22, sp, #0x110
    17cc:	mov	w1, #0x6                   	// #6
    17d0:	mov	x8, x22
    17d4:	stp	x27, x28, [sp, #80]
    17d8:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    17dc:	ldrb	w1, [sp, #280]
    17e0:	ldrb	w0, [sp, #248]
    17e4:	and	w2, w1, #0x1
    17e8:	and	w1, w1, #0xfffffffd
    17ec:	strb	w1, [sp, #280]
    17f0:	bfxil	w0, w2, #0, #1
    17f4:	orr	w0, w0, #0x2
    17f8:	strb	w0, [sp, #248]
    17fc:	ldr	x0, [sp, #272]
    1800:	cbz	w2, 19b0 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x4e8>
    1804:	str	x0, [sp, #240]
    1808:	mov	x0, x22
    180c:	str	xzr, [sp, #272]
    1810:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    1814:	ldrb	w0, [sp, #248]
    1818:	and	w1, w0, #0x1
    181c:	bfi	w0, w1, #1, #1
    1820:	strb	w0, [sp, #248]
    1824:	cbz	w1, 19d0 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x508>
    1828:	ldrb	w1, [sp, #136]
    182c:	add	x27, sp, #0xf0
    1830:	ldr	x2, [sp, #240]
    1834:	and	w0, w0, #0xfffffffd
    1838:	orr	w1, w1, #0x3
    183c:	str	x2, [sp, #128]
    1840:	strb	w1, [sp, #136]
    1844:	str	xzr, [sp, #240]
    1848:	strb	w0, [sp, #248]
    184c:	mov	x0, x27
    1850:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    1854:	ldrb	w0, [sp, #136]
    1858:	and	w1, w0, #0x1
    185c:	bfi	w0, w1, #1, #1
    1860:	strb	w0, [sp, #136]
    1864:	cbz	w1, 1b18 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x650>
    1868:	ldrb	w2, [x21, #8]
    186c:	and	w0, w0, #0xfffffffd
    1870:	ldr	x1, [sp, #128]
    1874:	orr	w2, w2, #0x3
    1878:	strb	w2, [x21, #8]
    187c:	str	xzr, [sp, #128]
    1880:	ands	x1, x1, #0xfffffffffffffffe
    1884:	strb	w0, [sp, #136]
    1888:	b.ne	1ca4 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x7dc>  // b.any
    188c:	stp	x23, x24, [sp, #48]
    1890:	stp	x25, x26, [sp, #64]
    1894:	adrp	x3, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    1898:	adrp	x1, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    189c:	adrp	x0, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    18a0:	add	x3, x3, #0x0
    18a4:	add	x1, x1, #0x0
    18a8:	add	x0, x0, #0x0
    18ac:	mov	w2, #0x1ce                 	// #462
    18b0:	bl	0 <__assert_fail>
    18b4:	ldr	w0, [sp, #240]
    18b8:	tbz	w0, #5, 1a44 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x57c>
    18bc:	and	w0, w0, #0x1f
    18c0:	add	x27, sp, #0xf0
    18c4:	str	wzr, [sp, #96]
    18c8:	str	w0, [sp, #104]
    18cc:	b	1954 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x48c>
    18d0:	str	w0, [sp, #256]
    18d4:	ldrb	w0, [sp, #248]
    18d8:	tbnz	w0, #1, 1ec4 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x9fc>
    18dc:	mov	x0, x27
    18e0:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    18e4:	ldrb	w1, [sp, #264]
    18e8:	ldrb	w0, [sp, #248]
    18ec:	and	w2, w1, #0x1
    18f0:	and	w1, w1, #0xfffffffd
    18f4:	strb	w1, [sp, #264]
    18f8:	bfxil	w0, w2, #0, #1
    18fc:	orr	w0, w0, #0x2
    1900:	strb	w0, [sp, #248]
    1904:	cbnz	w2, 1b08 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x640>
    1908:	ldr	w0, [sp, #256]
    190c:	str	w0, [sp, #240]
    1910:	mov	x0, x28
    1914:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    1918:	mov	x0, x22
    191c:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    1920:	ldrb	w0, [sp, #248]
    1924:	and	w1, w0, #0x1
    1928:	bfi	w0, w1, #1, #1
    192c:	strb	w0, [sp, #248]
    1930:	cbnz	w1, 255c <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x1094>
    1934:	ldr	w1, [sp, #240]
    1938:	ldrb	w2, [sp, #96]
    193c:	and	w0, w1, #0x1f
    1940:	lsl	w0, w0, w2
    1944:	ldr	w2, [sp, #104]
    1948:	orr	w0, w2, w0
    194c:	str	w0, [sp, #104]
    1950:	tbz	w1, #5, 2540 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x1078>
    1954:	mov	x0, x19
    1958:	mov	w1, #0x6                   	// #6
    195c:	mov	x8, x22
    1960:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    1964:	ldr	w0, [sp, #96]
    1968:	ldrb	w1, [sp, #280]
    196c:	add	w0, w0, #0x5
    1970:	str	w0, [sp, #96]
    1974:	ldrb	w0, [sp, #264]
    1978:	and	w2, w1, #0x1
    197c:	and	w1, w1, #0xfffffffd
    1980:	strb	w1, [sp, #280]
    1984:	bfxil	w0, w2, #0, #1
    1988:	orr	w0, w0, #0x2
    198c:	strb	w0, [sp, #264]
    1990:	ldr	x0, [sp, #272]
    1994:	cbz	w2, 18d0 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x408>
    1998:	str	x0, [sp, #256]
    199c:	str	xzr, [sp, #272]
    19a0:	b	18d4 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x40c>
    19a4:	str	x0, [sp, #240]
    19a8:	str	xzr, [sp, #272]
    19ac:	b	1698 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x1d0>
    19b0:	str	w0, [sp, #240]
    19b4:	mov	x0, x22
    19b8:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    19bc:	ldrb	w0, [sp, #248]
    19c0:	and	w1, w0, #0x1
    19c4:	bfi	w0, w1, #1, #1
    19c8:	strb	w0, [sp, #248]
    19cc:	cbnz	w1, 1828 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x360>
    19d0:	stp	x23, x24, [sp, #48]
    19d4:	ldr	w23, [sp, #240]
    19d8:	tbnz	w23, #5, 1ddc <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x914>
    19dc:	ldrb	w0, [sp, #136]
    19e0:	add	x27, sp, #0xf0
    19e4:	str	w23, [sp, #128]
    19e8:	and	w0, w0, #0xfffffffc
    19ec:	orr	w0, w0, #0x2
    19f0:	strb	w0, [sp, #136]
    19f4:	ldp	x23, x24, [sp, #48]
    19f8:	b	184c <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x384>
    19fc:	ldr	w1, [sp, #176]
    1a00:	mov	x0, x22
    1a04:	str	w1, [sp, #116]
    1a08:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    1a0c:	ldr	w26, [x24, #8]
    1a10:	b	1530 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x68>
    1a14:	ldr	x0, [x19]
    1a18:	mov	w1, w4
    1a1c:	add	x27, x0, x27, lsr #3
    1a20:	cbz	x25, 24b0 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xfe8>
    1a24:	stp	x27, x1, [x25]
    1a28:	add	w23, w23, #0x1
    1a2c:	mov	x0, x28
    1a30:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    1a34:	cmp	w23, w26
    1a38:	b.eq	25d4 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x110c>  // b.none
    1a3c:	ldr	w0, [x24, #8]
    1a40:	b	1554 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x8c>
    1a44:	ldrb	w1, [sp, #264]
    1a48:	add	x27, sp, #0xf0
    1a4c:	str	w0, [sp, #256]
    1a50:	and	w0, w1, #0xfffffffc
    1a54:	orr	w0, w0, #0x2
    1a58:	strb	w0, [sp, #264]
    1a5c:	b	16d8 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x210>
    1a60:	ldp	w0, w1, [x20, #8]
    1a64:	cmp	w0, w1
    1a68:	b.cs	25f8 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x1130>  // b.hs, b.nlast
    1a6c:	ldr	x1, [x20]
    1a70:	ldr	x2, [sp, #192]
    1a74:	str	x2, [x1, w0, uxtw #3]
    1a78:	ldp	w0, w2, [x20, #8]
    1a7c:	mov	w1, w0
    1a80:	add	x1, x1, #0x1
    1a84:	cmp	x1, x2
    1a88:	b.hi	2914 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x144c>  // b.pmore
    1a8c:	add	w0, w0, #0x1
    1a90:	str	w0, [x20, #8]
    1a94:	add	w23, w23, #0x1
    1a98:	mov	x0, x22
    1a9c:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    1aa0:	b	1a34 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x56c>
    1aa4:	ldp	w0, w1, [x20, #8]
    1aa8:	ldr	x22, [x3, x2]
    1aac:	cmp	w0, w1
    1ab0:	b.cs	2524 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x105c>  // b.hs, b.nlast
    1ab4:	ldr	x1, [x20]
    1ab8:	str	x22, [x1, w0, uxtw #3]
    1abc:	ldp	w0, w2, [x20, #8]
    1ac0:	mov	w1, w0
    1ac4:	add	x1, x1, #0x1
    1ac8:	cmp	x1, x2
    1acc:	b.hi	2914 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x144c>  // b.pmore
    1ad0:	add	w0, w0, #0x1
    1ad4:	add	w23, w23, #0x1
    1ad8:	str	w0, [x20, #8]
    1adc:	b	1a34 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x56c>
    1ae0:	str	x1, [x21]
    1ae4:	mov	x0, x22
    1ae8:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    1aec:	mov	x0, x21
    1af0:	ldp	x19, x20, [sp, #16]
    1af4:	ldp	x21, x22, [sp, #32]
    1af8:	ldp	x23, x24, [sp, #48]
    1afc:	ldp	x25, x26, [sp, #64]
    1b00:	ldp	x29, x30, [sp], #288
    1b04:	ret
    1b08:	ldr	x0, [sp, #256]
    1b0c:	str	x0, [sp, #240]
    1b10:	str	xzr, [sp, #256]
    1b14:	b	1910 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x448>
    1b18:	ldr	w2, [sp, #128]
    1b1c:	mov	x0, x19
    1b20:	mov	w1, #0x6                   	// #6
    1b24:	mov	x8, x22
    1b28:	str	w2, [sp, #96]
    1b2c:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    1b30:	ldrb	w1, [sp, #280]
    1b34:	ldrb	w0, [sp, #248]
    1b38:	and	w2, w1, #0x1
    1b3c:	and	w1, w1, #0xfffffffd
    1b40:	strb	w1, [sp, #280]
    1b44:	bfxil	w0, w2, #0, #1
    1b48:	orr	w0, w0, #0x2
    1b4c:	strb	w0, [sp, #248]
    1b50:	ldr	x0, [sp, #272]
    1b54:	cbnz	w2, 1fc8 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xb00>
    1b58:	str	w0, [sp, #240]
    1b5c:	mov	x0, x22
    1b60:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    1b64:	ldrb	w0, [sp, #248]
    1b68:	and	w1, w0, #0x1
    1b6c:	bfi	w0, w1, #1, #1
    1b70:	strb	w0, [sp, #248]
    1b74:	cbz	w1, 1ee8 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xa20>
    1b78:	ldrb	w1, [sp, #152]
    1b7c:	and	w0, w0, #0xfffffffd
    1b80:	ldr	x2, [sp, #240]
    1b84:	orr	w1, w1, #0x3
    1b88:	str	x2, [sp, #144]
    1b8c:	strb	w1, [sp, #152]
    1b90:	str	xzr, [sp, #240]
    1b94:	strb	w0, [sp, #248]
    1b98:	mov	x0, x27
    1b9c:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    1ba0:	ldrb	w0, [sp, #152]
    1ba4:	and	w1, w0, #0x1
    1ba8:	bfi	w0, w1, #1, #1
    1bac:	strb	w0, [sp, #152]
    1bb0:	cbnz	w1, 20d0 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xc08>
    1bb4:	ldr	w27, [sp, #144]
    1bb8:	cbz	w27, 1c88 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x7c0>
    1bbc:	add	x28, sp, #0xa0
    1bc0:	stp	x23, x24, [sp, #48]
    1bc4:	add	x24, sp, #0x100
    1bc8:	add	x0, x20, #0x10
    1bcc:	stp	x25, x26, [sp, #64]
    1bd0:	mov	w25, #0x0                   	// #0
    1bd4:	str	x0, [sp, #104]
    1bd8:	mov	x0, x19
    1bdc:	mov	w1, #0x6                   	// #6
    1be0:	mov	x8, x24
    1be4:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    1be8:	ldrb	w0, [sp, #264]
    1bec:	and	w1, w0, #0x1
    1bf0:	bfi	w0, w1, #1, #1
    1bf4:	strb	w0, [sp, #264]
    1bf8:	cbnz	w1, 2350 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xe88>
    1bfc:	ldr	x23, [sp, #256]
    1c00:	tbnz	w23, #5, 2394 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xecc>
    1c04:	ldrb	w0, [sp, #168]
    1c08:	and	x23, x23, #0xffffffff
    1c0c:	str	x23, [sp, #160]
    1c10:	and	w0, w0, #0xfffffffc
    1c14:	orr	w0, w0, #0x2
    1c18:	strb	w0, [sp, #168]
    1c1c:	mov	x0, x24
    1c20:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    1c24:	ldrb	w0, [sp, #168]
    1c28:	and	w1, w0, #0x1
    1c2c:	bfi	w0, w1, #1, #1
    1c30:	strb	w0, [sp, #168]
    1c34:	cbnz	w1, 2678 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x11b0>
    1c38:	ldp	w0, w1, [x20, #8]
    1c3c:	cmp	w0, w1
    1c40:	b.cs	25dc <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x1114>  // b.hs, b.nlast
    1c44:	ldr	x1, [x20]
    1c48:	ldr	x2, [sp, #160]
    1c4c:	str	x2, [x1, w0, uxtw #3]
    1c50:	ldp	w0, w2, [x20, #8]
    1c54:	mov	w1, w0
    1c58:	add	x1, x1, #0x1
    1c5c:	cmp	x1, x2
    1c60:	b.hi	2914 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x144c>  // b.pmore
    1c64:	add	w0, w0, #0x1
    1c68:	str	w0, [x20, #8]
    1c6c:	add	w25, w25, #0x1
    1c70:	mov	x0, x28
    1c74:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    1c78:	cmp	w27, w25
    1c7c:	b.ne	1bd8 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x710>  // b.any
    1c80:	ldp	x23, x24, [sp, #48]
    1c84:	ldp	x25, x26, [sp, #64]
    1c88:	ldrb	w0, [x21, #8]
    1c8c:	ldr	w1, [sp, #96]
    1c90:	and	w0, w0, #0xfffffffc
    1c94:	str	w1, [x21]
    1c98:	orr	w0, w0, #0x2
    1c9c:	strb	w0, [x21, #8]
    1ca0:	b	20f8 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xc30>
    1ca4:	str	x1, [x21]
    1ca8:	add	x0, sp, #0x80
    1cac:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    1cb0:	mov	x0, x21
    1cb4:	ldp	x19, x20, [sp, #16]
    1cb8:	ldp	x21, x22, [sp, #32]
    1cbc:	ldp	x27, x28, [sp, #80]
    1cc0:	ldp	x29, x30, [sp], #288
    1cc4:	ret
    1cc8:	add	x22, sp, #0x110
    1ccc:	mov	x0, x19
    1cd0:	mov	w1, #0x6                   	// #6
    1cd4:	mov	x8, x22
    1cd8:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    1cdc:	ldrb	w1, [sp, #280]
    1ce0:	ldrb	w0, [sp, #248]
    1ce4:	and	w2, w1, #0x1
    1ce8:	and	w1, w1, #0xfffffffd
    1cec:	strb	w1, [sp, #280]
    1cf0:	bfxil	w0, w2, #0, #1
    1cf4:	orr	w0, w0, #0x2
    1cf8:	strb	w0, [sp, #248]
    1cfc:	ldr	x0, [sp, #272]
    1d00:	cbnz	w2, 20c4 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xbfc>
    1d04:	str	w0, [sp, #240]
    1d08:	mov	x0, x22
    1d0c:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    1d10:	ldrb	w0, [sp, #248]
    1d14:	and	w1, w0, #0x1
    1d18:	bfi	w0, w1, #1, #1
    1d1c:	strb	w0, [sp, #248]
    1d20:	cbz	w1, 1fd4 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xb0c>
    1d24:	ldrb	w1, [sp, #216]
    1d28:	add	x27, sp, #0xf0
    1d2c:	ldr	x2, [sp, #240]
    1d30:	and	w0, w0, #0xfffffffd
    1d34:	orr	w1, w1, #0x3
    1d38:	str	x2, [sp, #208]
    1d3c:	strb	w1, [sp, #216]
    1d40:	str	xzr, [sp, #240]
    1d44:	strb	w0, [sp, #248]
    1d48:	mov	x0, x27
    1d4c:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    1d50:	ldrb	w0, [sp, #216]
    1d54:	and	w1, w0, #0x1
    1d58:	bfi	w0, w1, #1, #1
    1d5c:	strb	w0, [sp, #216]
    1d60:	cbnz	w1, 2794 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x12cc>
    1d64:	add	w0, w23, #0x2
    1d68:	ldr	w4, [sp, #208]
    1d6c:	cmp	w0, w26
    1d70:	b.ne	2954 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x148c>  // b.any
    1d74:	ldr	w0, [x24, #8]
    1d78:	add	w23, w23, #0x1
    1d7c:	cmp	x23, x0
    1d80:	b.cs	2888 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x13c0>  // b.hs, b.nlast
    1d84:	ldr	x0, [x24]
    1d88:	add	x23, x0, x23, lsl #4
    1d8c:	ldrb	w0, [x23, #8]
    1d90:	tbnz	w0, #0, 2964 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x149c>
    1d94:	ubfx	x0, x0, #1, #3
    1d98:	cmp	w0, #0x2
    1d9c:	b.eq	22a8 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xde0>  // b.none
    1da0:	cmp	w0, #0x4
    1da4:	b.eq	21cc <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xd04>  // b.none
    1da8:	cmp	w0, #0x1
    1dac:	b.eq	2104 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xc3c>  // b.none
    1db0:	adrp	x0, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    1db4:	mov	w1, #0x1                   	// #1
    1db8:	add	x0, x0, #0x0
    1dbc:	bl	0 <_ZN4llvm18report_fatal_errorEPKcb>
    1dc0:	ldr	x1, [x19, #24]
    1dc4:	sub	w0, w0, #0x20
    1dc8:	mov	x3, #0x20                  	// #32
    1dcc:	mov	w5, w3
    1dd0:	lsr	x0, x1, x0
    1dd4:	str	x0, [x19, #24]
    1dd8:	b	170c <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x244>
    1ddc:	and	w23, w23, #0x1f
    1de0:	add	x27, sp, #0xf0
    1de4:	mov	w24, #0x0                   	// #0
    1de8:	stp	x25, x26, [sp, #64]
    1dec:	add	x25, sp, #0x100
    1df0:	b	1e6c <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x9a4>
    1df4:	str	w0, [sp, #256]
    1df8:	ldrb	w0, [sp, #248]
    1dfc:	tbnz	w0, #1, 1ec4 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x9fc>
    1e00:	mov	x0, x27
    1e04:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    1e08:	ldrb	w1, [sp, #264]
    1e0c:	ldrb	w0, [sp, #248]
    1e10:	and	w2, w1, #0x1
    1e14:	and	w1, w1, #0xfffffffd
    1e18:	strb	w1, [sp, #264]
    1e1c:	bfxil	w0, w2, #0, #1
    1e20:	orr	w0, w0, #0x2
    1e24:	strb	w0, [sp, #248]
    1e28:	cbnz	w2, 1eb4 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x9ec>
    1e2c:	ldr	w0, [sp, #256]
    1e30:	str	w0, [sp, #240]
    1e34:	mov	x0, x25
    1e38:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    1e3c:	mov	x0, x22
    1e40:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    1e44:	ldrb	w0, [sp, #248]
    1e48:	and	w1, w0, #0x1
    1e4c:	bfi	w0, w1, #1, #1
    1e50:	strb	w0, [sp, #248]
    1e54:	cbnz	w1, 25a0 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x10d8>
    1e58:	ldr	w1, [sp, #240]
    1e5c:	and	w0, w1, #0x1f
    1e60:	lsl	w0, w0, w24
    1e64:	orr	w23, w23, w0
    1e68:	tbz	w1, #5, 2580 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x10b8>
    1e6c:	mov	x0, x19
    1e70:	mov	w1, #0x6                   	// #6
    1e74:	mov	x8, x22
    1e78:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    1e7c:	ldrb	w1, [sp, #280]
    1e80:	add	w24, w24, #0x5
    1e84:	ldrb	w0, [sp, #264]
    1e88:	and	w2, w1, #0x1
    1e8c:	and	w1, w1, #0xfffffffd
    1e90:	strb	w1, [sp, #280]
    1e94:	bfxil	w0, w2, #0, #1
    1e98:	orr	w0, w0, #0x2
    1e9c:	strb	w0, [sp, #264]
    1ea0:	ldr	x0, [sp, #272]
    1ea4:	cbz	w2, 1df4 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x92c>
    1ea8:	str	x0, [sp, #256]
    1eac:	str	xzr, [sp, #272]
    1eb0:	b	1df8 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x930>
    1eb4:	ldr	x0, [sp, #256]
    1eb8:	str	x0, [sp, #240]
    1ebc:	str	xzr, [sp, #256]
    1ec0:	b	1e34 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x96c>
    1ec4:	mov	x0, x27
    1ec8:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    1ecc:	ldr	x1, [sp, #272]
    1ed0:	and	w0, w0, #0xfffffffd
    1ed4:	str	xzr, [sp, #272]
    1ed8:	orr	x1, x1, #0x1
    1edc:	str	x1, [sp, #240]
    1ee0:	strb	w0, [sp, #280]
    1ee4:	b	1784 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x2bc>
    1ee8:	stp	x23, x24, [sp, #48]
    1eec:	ldr	w23, [sp, #240]
    1ef0:	tbz	w23, #5, 2270 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xda8>
    1ef4:	and	w23, w23, #0x1f
    1ef8:	mov	w24, #0x0                   	// #0
    1efc:	stp	x25, x26, [sp, #64]
    1f00:	add	x25, sp, #0x100
    1f04:	b	1f80 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xab8>
    1f08:	str	w0, [sp, #256]
    1f0c:	ldrb	w0, [sp, #248]
    1f10:	tbnz	w0, #1, 1ec4 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x9fc>
    1f14:	mov	x0, x27
    1f18:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    1f1c:	ldrb	w1, [sp, #264]
    1f20:	ldrb	w0, [sp, #248]
    1f24:	and	w2, w1, #0x1
    1f28:	and	w1, w1, #0xfffffffd
    1f2c:	strb	w1, [sp, #264]
    1f30:	bfxil	w0, w2, #0, #1
    1f34:	orr	w0, w0, #0x2
    1f38:	strb	w0, [sp, #248]
    1f3c:	cbnz	w2, 2374 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xeac>
    1f40:	ldr	w0, [sp, #256]
    1f44:	str	w0, [sp, #240]
    1f48:	mov	x0, x25
    1f4c:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    1f50:	mov	x0, x22
    1f54:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    1f58:	ldrb	w0, [sp, #248]
    1f5c:	and	w1, w0, #0x1
    1f60:	bfi	w0, w1, #1, #1
    1f64:	strb	w0, [sp, #248]
    1f68:	cbnz	w1, 26d0 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x1208>
    1f6c:	ldr	w1, [sp, #240]
    1f70:	and	w0, w1, #0x1f
    1f74:	lsl	w0, w0, w24
    1f78:	orr	w23, w23, w0
    1f7c:	tbz	w1, #5, 2640 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x1178>
    1f80:	mov	x0, x19
    1f84:	mov	w1, #0x6                   	// #6
    1f88:	mov	x8, x22
    1f8c:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    1f90:	ldrb	w1, [sp, #280]
    1f94:	add	w24, w24, #0x5
    1f98:	ldrb	w0, [sp, #264]
    1f9c:	and	w2, w1, #0x1
    1fa0:	and	w1, w1, #0xfffffffd
    1fa4:	strb	w1, [sp, #280]
    1fa8:	bfxil	w0, w2, #0, #1
    1fac:	orr	w0, w0, #0x2
    1fb0:	strb	w0, [sp, #264]
    1fb4:	ldr	x0, [sp, #272]
    1fb8:	cbz	w2, 1f08 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xa40>
    1fbc:	str	x0, [sp, #256]
    1fc0:	str	xzr, [sp, #272]
    1fc4:	b	1f0c <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xa44>
    1fc8:	str	x0, [sp, #240]
    1fcc:	str	xzr, [sp, #272]
    1fd0:	b	1b5c <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x694>
    1fd4:	ldr	w0, [sp, #240]
    1fd8:	tbz	w0, #5, 228c <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xdc4>
    1fdc:	and	w0, w0, #0x1f
    1fe0:	add	x27, sp, #0xf0
    1fe4:	str	wzr, [sp, #96]
    1fe8:	str	w0, [sp, #104]
    1fec:	b	2074 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xbac>
    1ff0:	str	w0, [sp, #256]
    1ff4:	ldrb	w0, [sp, #248]
    1ff8:	tbnz	w0, #1, 1ec4 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x9fc>
    1ffc:	mov	x0, x27
    2000:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    2004:	ldrb	w1, [sp, #264]
    2008:	ldrb	w0, [sp, #248]
    200c:	and	w2, w1, #0x1
    2010:	and	w1, w1, #0xfffffffd
    2014:	strb	w1, [sp, #264]
    2018:	bfxil	w0, w2, #0, #1
    201c:	orr	w0, w0, #0x2
    2020:	strb	w0, [sp, #248]
    2024:	cbnz	w2, 2384 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xebc>
    2028:	ldr	w0, [sp, #256]
    202c:	str	w0, [sp, #240]
    2030:	mov	x0, x28
    2034:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    2038:	mov	x0, x22
    203c:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    2040:	ldrb	w0, [sp, #248]
    2044:	and	w1, w0, #0x1
    2048:	bfi	w0, w1, #1, #1
    204c:	strb	w0, [sp, #248]
    2050:	cbnz	w1, 26fc <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x1234>
    2054:	ldr	w1, [sp, #240]
    2058:	ldrb	w2, [sp, #96]
    205c:	and	w0, w1, #0x1f
    2060:	lsl	w0, w0, w2
    2064:	ldr	w2, [sp, #104]
    2068:	orr	w0, w2, w0
    206c:	str	w0, [sp, #104]
    2070:	tbz	w1, #5, 26b4 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x11ec>
    2074:	mov	x0, x19
    2078:	mov	w1, #0x6                   	// #6
    207c:	mov	x8, x22
    2080:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    2084:	ldr	w0, [sp, #96]
    2088:	ldrb	w1, [sp, #280]
    208c:	add	w0, w0, #0x5
    2090:	str	w0, [sp, #96]
    2094:	ldrb	w0, [sp, #264]
    2098:	and	w2, w1, #0x1
    209c:	and	w1, w1, #0xfffffffd
    20a0:	strb	w1, [sp, #280]
    20a4:	bfxil	w0, w2, #0, #1
    20a8:	orr	w0, w0, #0x2
    20ac:	strb	w0, [sp, #264]
    20b0:	ldr	x0, [sp, #272]
    20b4:	cbz	w2, 1ff0 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xb28>
    20b8:	str	x0, [sp, #256]
    20bc:	str	xzr, [sp, #272]
    20c0:	b	1ff4 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xb2c>
    20c4:	str	x0, [sp, #240]
    20c8:	str	xzr, [sp, #272]
    20cc:	b	1d08 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x840>
    20d0:	ldrb	w2, [x21, #8]
    20d4:	and	w0, w0, #0xfffffffd
    20d8:	ldr	x1, [sp, #144]
    20dc:	orr	w2, w2, #0x3
    20e0:	strb	w2, [x21, #8]
    20e4:	str	xzr, [sp, #144]
    20e8:	ands	x1, x1, #0xfffffffffffffffe
    20ec:	strb	w0, [sp, #152]
    20f0:	b.eq	188c <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x3c4>  // b.none
    20f4:	str	x1, [x21]
    20f8:	add	x0, sp, #0x90
    20fc:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    2100:	b	1ca8 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x7e0>
    2104:	cbz	w4, 2260 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xd98>
    2108:	add	x27, sp, #0xe0
    210c:	add	x22, x20, #0x10
    2110:	ldr	w1, [x23]
    2114:	mov	x0, x19
    2118:	mov	x8, x27
    211c:	str	w4, [sp, #96]
    2120:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    2124:	ldrb	w0, [sp, #232]
    2128:	ldr	w4, [sp, #96]
    212c:	and	w1, w0, #0x1
    2130:	bfi	w0, w1, #1, #1
    2134:	strb	w0, [sp, #232]
    2138:	cbnz	w1, 282c <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x1364>
    213c:	ldp	w0, w1, [x20, #8]
    2140:	cmp	w0, w1
    2144:	b.cs	274c <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x1284>  // b.hs, b.nlast
    2148:	ldr	x1, [x20]
    214c:	str	w4, [sp, #96]
    2150:	ldr	x2, [sp, #224]
    2154:	str	x2, [x1, w0, uxtw #3]
    2158:	ldp	w0, w2, [x20, #8]
    215c:	mov	w1, w0
    2160:	add	x1, x1, #0x1
    2164:	cmp	x1, x2
    2168:	b.hi	2914 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x144c>  // b.pmore
    216c:	add	w0, w0, #0x1
    2170:	str	w0, [x20, #8]
    2174:	mov	x0, x27
    2178:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    217c:	ldr	w4, [sp, #96]
    2180:	subs	w4, w4, #0x1
    2184:	b.eq	2260 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xd98>  // b.none
    2188:	ldrb	w0, [x23, #8]
    218c:	tbnz	w0, #0, 21ac <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xce4>
    2190:	ubfx	x0, x0, #1, #3
    2194:	cmp	w0, #0x2
    2198:	b.ls	25cc <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x1104>  // b.plast
    219c:	add	w0, w0, #0x5
    21a0:	and	w0, w0, #0x7
    21a4:	cmp	w0, #0x2
    21a8:	b.hi	2340 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xe78>  // b.pmore
    21ac:	adrp	x3, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    21b0:	adrp	x1, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    21b4:	adrp	x0, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    21b8:	add	x3, x3, #0x0
    21bc:	add	x1, x1, #0x0
    21c0:	add	x0, x0, #0x0
    21c4:	mov	w2, #0x79                  	// #121
    21c8:	bl	0 <__assert_fail>
    21cc:	cbz	w4, 2260 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xd98>
    21d0:	add	x23, x20, #0x10
    21d4:	mov	x0, x19
    21d8:	mov	w1, #0x6                   	// #6
    21dc:	mov	x8, x22
    21e0:	str	w4, [sp, #96]
    21e4:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    21e8:	ldrb	w0, [sp, #280]
    21ec:	and	w1, w0, #0x1
    21f0:	bfi	w0, w1, #1, #1
    21f4:	strb	w0, [sp, #280]
    21f8:	cbnz	w1, 2854 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x138c>
    21fc:	ldr	x0, [sp, #272]
    2200:	ldr	w4, [sp, #96]
    2204:	tst	w0, #0xffffffc0
    2208:	b.ne	2934 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x146c>  // b.any
    220c:	ldr	x3, [sp, #120]
    2210:	ldp	w1, w2, [x20, #8]
    2214:	ldrb	w27, [x3, w0, uxtw]
    2218:	cmp	w1, w2
    221c:	b.cs	2770 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x12a8>  // b.hs, b.nlast
    2220:	ldr	x0, [x20]
    2224:	str	w4, [sp, #96]
    2228:	str	x27, [x0, w1, uxtw #3]
    222c:	ldp	w0, w2, [x20, #8]
    2230:	mov	w1, w0
    2234:	add	x1, x1, #0x1
    2238:	cmp	x1, x2
    223c:	b.hi	2914 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x144c>  // b.pmore
    2240:	add	w0, w0, #0x1
    2244:	str	w0, [x20, #8]
    2248:	mov	x0, x22
    224c:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    2250:	ldr	w4, [sp, #96]
    2254:	subs	w4, w4, #0x1
    2258:	b.ne	21d4 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xd0c>  // b.any
    225c:	nop
    2260:	add	x0, sp, #0xd0
    2264:	mov	w23, w26
    2268:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    226c:	b	1a34 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x56c>
    2270:	ldrb	w0, [sp, #152]
    2274:	str	w23, [sp, #144]
    2278:	and	w0, w0, #0xfffffffc
    227c:	orr	w0, w0, #0x2
    2280:	strb	w0, [sp, #152]
    2284:	ldp	x23, x24, [sp, #48]
    2288:	b	1b98 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x6d0>
    228c:	ldrb	w1, [sp, #216]
    2290:	add	x27, sp, #0xf0
    2294:	str	w0, [sp, #208]
    2298:	and	w0, w1, #0xfffffffc
    229c:	orr	w0, w0, #0x2
    22a0:	strb	w0, [sp, #216]
    22a4:	b	1d48 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x880>
    22a8:	add	x22, x20, #0x10
    22ac:	cbz	w4, 2260 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xd98>
    22b0:	ldr	w1, [x23]
    22b4:	mov	x0, x19
    22b8:	mov	x8, x27
    22bc:	str	w4, [sp, #96]
    22c0:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    22c4:	ldrb	w0, [sp, #248]
    22c8:	and	w1, w0, #0x1
    22cc:	bfi	w0, w1, #1, #1
    22d0:	strb	w0, [sp, #248]
    22d4:	cbnz	w1, 27f8 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x1330>
    22d8:	ldp	w0, w1, [x20, #8]
    22dc:	ldr	w4, [sp, #96]
    22e0:	cmp	w0, w1
    22e4:	b.cs	27d4 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x130c>  // b.hs, b.nlast
    22e8:	ldr	x1, [x20]
    22ec:	str	w4, [sp, #96]
    22f0:	ldr	x2, [sp, #240]
    22f4:	str	x2, [x1, w0, uxtw #3]
    22f8:	ldp	w0, w2, [x20, #8]
    22fc:	mov	w1, w0
    2300:	add	x1, x1, #0x1
    2304:	cmp	x1, x2
    2308:	b.hi	2914 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x144c>  // b.pmore
    230c:	add	w0, w0, #0x1
    2310:	str	w0, [x20, #8]
    2314:	mov	x0, x27
    2318:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    231c:	ldr	w4, [sp, #96]
    2320:	subs	w4, w4, #0x1
    2324:	b.eq	2260 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xd98>  // b.none
    2328:	ldrb	w0, [x23, #8]
    232c:	tbnz	w0, #0, 21ac <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xce4>
    2330:	ubfx	x0, x0, #1, #3
    2334:	cmp	w0, #0x2
    2338:	b.hi	219c <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xcd4>  // b.pmore
    233c:	cbnz	w0, 22b0 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xde8>
    2340:	adrp	x0, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    2344:	mov	w1, #0x1                   	// #1
    2348:	add	x0, x0, #0x0
    234c:	bl	0 <_ZN4llvm18report_fatal_errorEPKcb>
    2350:	ldrb	w1, [sp, #168]
    2354:	and	w0, w0, #0xfffffffd
    2358:	ldr	x2, [sp, #256]
    235c:	orr	w1, w1, #0x3
    2360:	str	x2, [sp, #160]
    2364:	strb	w1, [sp, #168]
    2368:	str	xzr, [sp, #256]
    236c:	strb	w0, [sp, #264]
    2370:	b	1c1c <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x754>
    2374:	ldr	x0, [sp, #256]
    2378:	str	x0, [sp, #240]
    237c:	str	xzr, [sp, #256]
    2380:	b	1f48 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xa80>
    2384:	ldr	x0, [sp, #256]
    2388:	str	x0, [sp, #240]
    238c:	str	xzr, [sp, #256]
    2390:	b	2030 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xb68>
    2394:	and	x23, x23, #0x1f
    2398:	mov	w26, #0x0                   	// #0
    239c:	b	2408 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xf40>
    23a0:	mov	x0, x24
    23a4:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    23a8:	ldrb	w1, [sp, #280]
    23ac:	ldrb	w0, [sp, #264]
    23b0:	and	w2, w1, #0x1
    23b4:	and	w1, w1, #0xfffffffd
    23b8:	strb	w1, [sp, #280]
    23bc:	bfxil	w0, w2, #0, #1
    23c0:	orr	w0, w0, #0x2
    23c4:	strb	w0, [sp, #264]
    23c8:	ldr	x0, [sp, #272]
    23cc:	str	x0, [sp, #256]
    23d0:	cbz	w2, 23d8 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xf10>
    23d4:	str	xzr, [sp, #272]
    23d8:	mov	x0, x22
    23dc:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    23e0:	ldrb	w0, [sp, #264]
    23e4:	and	w1, w0, #0x1
    23e8:	bfi	w0, w1, #1, #1
    23ec:	strb	w0, [sp, #264]
    23f0:	cbnz	w1, 2350 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xe88>
    23f4:	ldr	x1, [sp, #256]
    23f8:	and	x0, x1, #0x1f
    23fc:	lsl	x0, x0, x26
    2400:	orr	x23, x23, x0
    2404:	tbz	w1, #5, 2660 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x1198>
    2408:	mov	x0, x19
    240c:	mov	x8, x22
    2410:	mov	w1, #0x6                   	// #6
    2414:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    2418:	ldrb	w0, [sp, #264]
    241c:	add	w26, w26, #0x5
    2420:	tbz	w0, #1, 23a0 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xed8>
    2424:	mov	x0, x24
    2428:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    242c:	ldp	w23, w24, [x20, #8]
    2430:	mov	w22, w4
    2434:	mov	w0, w23
    2438:	sub	x1, x24, x0
    243c:	add	x25, x22, x0
    2440:	cmp	x22, x1
    2444:	b.hi	2720 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x1258>  // b.pmore
    2448:	ldr	x1, [x20]
    244c:	add	x0, x1, x0, lsl #3
    2450:	cbz	x22, 2468 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xfa0>
    2454:	lsl	x2, x22, #3
    2458:	mov	w1, #0x0                   	// #0
    245c:	str	w4, [sp, #96]
    2460:	bl	0 <memset>
    2464:	ldr	w4, [sp, #96]
    2468:	cmp	x24, x25
    246c:	b.cc	2914 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x144c>  // b.lo, b.ul, b.last
    2470:	add	w4, w4, w23
    2474:	ldr	x0, [x19, #8]
    2478:	str	w4, [x20, #8]
    247c:	str	x0, [x19, #16]
    2480:	add	x0, sp, #0x100
    2484:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    2488:	ldp	x27, x28, [sp, #80]
    248c:	ldrb	w0, [x21, #8]
    2490:	ldr	w1, [sp, #116]
    2494:	and	w0, w0, #0xfffffffc
    2498:	orr	w0, w0, #0x2
    249c:	strb	w0, [x21, #8]
    24a0:	ldp	x23, x24, [sp, #48]
    24a4:	ldp	x25, x26, [sp, #64]
    24a8:	str	w1, [x21]
    24ac:	b	15e4 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x11c>
    24b0:	cbz	w4, 1a28 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x560>
    24b4:	sub	w4, w4, #0x1
    24b8:	add	x1, x20, #0x10
    24bc:	add	x4, x4, #0x1
    24c0:	ldp	w0, w3, [x20, #8]
    24c4:	add	x4, x27, x4
    24c8:	b	24f8 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x1030>
    24cc:	ldr	x2, [x20]
    24d0:	str	x22, [x2, w0, uxtw #3]
    24d4:	ldp	w0, w3, [x20, #8]
    24d8:	mov	w2, w0
    24dc:	add	x2, x2, #0x1
    24e0:	cmp	x2, w3, uxtw
    24e4:	b.hi	2914 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x144c>  // b.pmore
    24e8:	add	w0, w0, #0x1
    24ec:	str	w0, [x20, #8]
    24f0:	cmp	x27, x4
    24f4:	b.eq	1a28 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x560>  // b.none
    24f8:	ldrb	w22, [x27], #1
    24fc:	cmp	w0, w3
    2500:	b.cc	24cc <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x1004>  // b.lo, b.ul, b.last
    2504:	mov	x0, x20
    2508:	mov	x3, #0x8                   	// #8
    250c:	mov	x2, #0x0                   	// #0
    2510:	stp	x1, x4, [sp, #96]
    2514:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    2518:	ldr	w0, [x20, #8]
    251c:	ldp	x1, x4, [sp, #96]
    2520:	b	24cc <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x1004>
    2524:	mov	x0, x20
    2528:	add	x1, x20, #0x10
    252c:	mov	x3, #0x8                   	// #8
    2530:	mov	x2, #0x0                   	// #0
    2534:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    2538:	ldr	w0, [x20, #8]
    253c:	b	1ab4 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x5ec>
    2540:	ldrb	w0, [sp, #264]
    2544:	ldr	w1, [sp, #104]
    2548:	and	w0, w0, #0xfffffffc
    254c:	str	w1, [sp, #256]
    2550:	orr	w0, w0, #0x2
    2554:	strb	w0, [sp, #264]
    2558:	b	16d8 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x210>
    255c:	ldrb	w1, [sp, #264]
    2560:	and	w0, w0, #0xfffffffd
    2564:	ldr	x2, [sp, #240]
    2568:	orr	w1, w1, #0x3
    256c:	str	xzr, [sp, #240]
    2570:	strb	w0, [sp, #248]
    2574:	str	x2, [sp, #256]
    2578:	strb	w1, [sp, #264]
    257c:	b	16d8 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x210>
    2580:	ldrb	w0, [sp, #136]
    2584:	str	w23, [sp, #128]
    2588:	and	w0, w0, #0xfffffffc
    258c:	orr	w0, w0, #0x2
    2590:	strb	w0, [sp, #136]
    2594:	ldp	x23, x24, [sp, #48]
    2598:	ldp	x25, x26, [sp, #64]
    259c:	b	184c <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x384>
    25a0:	ldrb	w1, [sp, #136]
    25a4:	and	w0, w0, #0xfffffffd
    25a8:	ldr	x2, [sp, #240]
    25ac:	orr	w1, w1, #0x3
    25b0:	str	x2, [sp, #128]
    25b4:	strb	w1, [sp, #136]
    25b8:	str	xzr, [sp, #240]
    25bc:	strb	w0, [sp, #248]
    25c0:	ldp	x23, x24, [sp, #48]
    25c4:	ldp	x25, x26, [sp, #64]
    25c8:	b	184c <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x384>
    25cc:	cbz	w0, 2340 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xe78>
    25d0:	b	2110 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xc48>
    25d4:	ldp	x27, x28, [sp, #80]
    25d8:	b	248c <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xfc4>
    25dc:	ldr	x1, [sp, #104]
    25e0:	mov	x0, x20
    25e4:	mov	x3, #0x8                   	// #8
    25e8:	mov	x2, #0x0                   	// #0
    25ec:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    25f0:	ldr	w0, [x20, #8]
    25f4:	b	1c44 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x77c>
    25f8:	mov	x0, x20
    25fc:	add	x1, x20, #0x10
    2600:	mov	x3, #0x8                   	// #8
    2604:	mov	x2, #0x0                   	// #0
    2608:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    260c:	ldr	w0, [x20, #8]
    2610:	b	1a6c <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x5a4>
    2614:	ldrb	w2, [x21, #8]
    2618:	and	w0, w0, #0xfffffffd
    261c:	ldr	x1, [sp, #256]
    2620:	orr	w2, w2, #0x3
    2624:	strb	w2, [x21, #8]
    2628:	str	xzr, [sp, #256]
    262c:	ands	x1, x1, #0xfffffffffffffffe
    2630:	strb	w0, [sp, #264]
    2634:	b.eq	1894 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x3cc>  // b.none
    2638:	str	x1, [x21]
    263c:	b	17b0 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x2e8>
    2640:	ldrb	w0, [sp, #152]
    2644:	str	w23, [sp, #144]
    2648:	and	w0, w0, #0xfffffffc
    264c:	orr	w0, w0, #0x2
    2650:	strb	w0, [sp, #152]
    2654:	ldp	x23, x24, [sp, #48]
    2658:	ldp	x25, x26, [sp, #64]
    265c:	b	1b98 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x6d0>
    2660:	ldrb	w0, [sp, #168]
    2664:	str	x23, [sp, #160]
    2668:	and	w0, w0, #0xfffffffc
    266c:	orr	w0, w0, #0x2
    2670:	strb	w0, [sp, #168]
    2674:	b	1c1c <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x754>
    2678:	ldrb	w2, [x21, #8]
    267c:	and	w0, w0, #0xfffffffd
    2680:	ldr	x1, [sp, #160]
    2684:	orr	w2, w2, #0x3
    2688:	strb	w2, [x21, #8]
    268c:	str	xzr, [sp, #160]
    2690:	ands	x1, x1, #0xfffffffffffffffe
    2694:	strb	w0, [sp, #168]
    2698:	b.eq	1894 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x3cc>  // b.none
    269c:	str	x1, [x21]
    26a0:	add	x0, sp, #0xa0
    26a4:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    26a8:	ldp	x23, x24, [sp, #48]
    26ac:	ldp	x25, x26, [sp, #64]
    26b0:	b	20f8 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xc30>
    26b4:	ldrb	w0, [sp, #216]
    26b8:	ldr	w1, [sp, #104]
    26bc:	and	w0, w0, #0xfffffffc
    26c0:	str	w1, [sp, #208]
    26c4:	orr	w0, w0, #0x2
    26c8:	strb	w0, [sp, #216]
    26cc:	b	1d48 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x880>
    26d0:	ldrb	w1, [sp, #152]
    26d4:	and	w0, w0, #0xfffffffd
    26d8:	ldr	x2, [sp, #240]
    26dc:	orr	w1, w1, #0x3
    26e0:	str	x2, [sp, #144]
    26e4:	strb	w1, [sp, #152]
    26e8:	str	xzr, [sp, #240]
    26ec:	strb	w0, [sp, #248]
    26f0:	ldp	x23, x24, [sp, #48]
    26f4:	ldp	x25, x26, [sp, #64]
    26f8:	b	1b98 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x6d0>
    26fc:	ldrb	w1, [sp, #216]
    2700:	and	w0, w0, #0xfffffffd
    2704:	ldr	x2, [sp, #240]
    2708:	orr	w1, w1, #0x3
    270c:	str	x2, [sp, #208]
    2710:	strb	w1, [sp, #216]
    2714:	str	xzr, [sp, #240]
    2718:	strb	w0, [sp, #248]
    271c:	b	1d48 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x880>
    2720:	mov	x2, x25
    2724:	mov	x0, x20
    2728:	add	x1, x20, #0x10
    272c:	mov	x3, #0x8                   	// #8
    2730:	str	w4, [sp, #96]
    2734:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    2738:	ldp	w23, w24, [x20, #8]
    273c:	ldr	w4, [sp, #96]
    2740:	mov	w0, w23
    2744:	add	x25, x22, x0
    2748:	b	2448 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xf80>
    274c:	mov	x0, x20
    2750:	mov	x1, x22
    2754:	mov	x3, #0x8                   	// #8
    2758:	mov	x2, #0x0                   	// #0
    275c:	str	w4, [sp, #96]
    2760:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    2764:	ldr	w0, [x20, #8]
    2768:	ldr	w4, [sp, #96]
    276c:	b	2148 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xc80>
    2770:	mov	x1, x23
    2774:	mov	x0, x20
    2778:	mov	x3, #0x8                   	// #8
    277c:	mov	x2, #0x0                   	// #0
    2780:	str	w4, [sp, #96]
    2784:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    2788:	ldr	w1, [x20, #8]
    278c:	ldr	w4, [sp, #96]
    2790:	b	2220 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xd58>
    2794:	ldrb	w2, [x21, #8]
    2798:	and	w0, w0, #0xfffffffd
    279c:	ldr	x1, [sp, #208]
    27a0:	orr	w2, w2, #0x3
    27a4:	strb	w2, [x21, #8]
    27a8:	str	xzr, [sp, #208]
    27ac:	ands	x1, x1, #0xfffffffffffffffe
    27b0:	strb	w0, [sp, #216]
    27b4:	b.eq	1894 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x3cc>  // b.none
    27b8:	str	x1, [x21]
    27bc:	add	x0, sp, #0xd0
    27c0:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    27c4:	ldp	x23, x24, [sp, #48]
    27c8:	ldp	x25, x26, [sp, #64]
    27cc:	ldp	x27, x28, [sp, #80]
    27d0:	b	15e4 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x11c>
    27d4:	mov	x0, x20
    27d8:	mov	x1, x22
    27dc:	mov	x3, #0x8                   	// #8
    27e0:	mov	x2, #0x0                   	// #0
    27e4:	str	w4, [sp, #96]
    27e8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    27ec:	ldr	w0, [x20, #8]
    27f0:	ldr	w4, [sp, #96]
    27f4:	b	22e8 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xe20>
    27f8:	ldrb	w2, [x21, #8]
    27fc:	and	w0, w0, #0xfffffffd
    2800:	strb	w0, [sp, #248]
    2804:	ldr	x1, [sp, #240]
    2808:	str	xzr, [sp, #240]
    280c:	orr	w2, w2, #0x3
    2810:	strb	w2, [x21, #8]
    2814:	ands	x1, x1, #0xfffffffffffffffe
    2818:	b.eq	1894 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x3cc>  // b.none
    281c:	str	x1, [x21]
    2820:	mov	x0, x27
    2824:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    2828:	b	27bc <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x12f4>
    282c:	ldrb	w2, [x21, #8]
    2830:	and	w0, w0, #0xfffffffd
    2834:	strb	w0, [sp, #232]
    2838:	ldr	x1, [sp, #224]
    283c:	str	xzr, [sp, #224]
    2840:	orr	w2, w2, #0x3
    2844:	strb	w2, [x21, #8]
    2848:	ands	x1, x1, #0xfffffffffffffffe
    284c:	b.eq	1894 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x3cc>  // b.none
    2850:	b	281c <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x1354>
    2854:	ldrb	w2, [x21, #8]
    2858:	and	w0, w0, #0xfffffffd
    285c:	ldr	x1, [sp, #272]
    2860:	orr	w2, w2, #0x3
    2864:	strb	w2, [x21, #8]
    2868:	str	xzr, [sp, #272]
    286c:	ands	x1, x1, #0xfffffffffffffffe
    2870:	strb	w0, [sp, #280]
    2874:	b.eq	1894 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x3cc>  // b.none
    2878:	str	x1, [x21]
    287c:	mov	x0, x22
    2880:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    2884:	b	27bc <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x12f4>
    2888:	adrp	x3, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    288c:	adrp	x1, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    2890:	adrp	x0, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    2894:	add	x3, x3, #0x0
    2898:	add	x1, x1, #0x0
    289c:	add	x0, x0, #0x0
    28a0:	mov	w2, #0x99                  	// #153
    28a4:	bl	0 <__assert_fail>
    28a8:	adrp	x3, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    28ac:	adrp	x1, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    28b0:	adrp	x0, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    28b4:	add	x3, x3, #0x0
    28b8:	add	x1, x1, #0x0
    28bc:	add	x0, x0, #0x0
    28c0:	mov	w2, #0x85                  	// #133
    28c4:	bl	0 <__assert_fail>
    28c8:	adrp	x0, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    28cc:	mov	w1, #0x1                   	// #1
    28d0:	add	x0, x0, #0x0
    28d4:	stp	x27, x28, [sp, #80]
    28d8:	bl	0 <_ZN4llvm18report_fatal_errorEPKcb>
    28dc:	adrp	x0, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    28e0:	mov	w1, #0x1                   	// #1
    28e4:	add	x0, x0, #0x0
    28e8:	stp	x27, x28, [sp, #80]
    28ec:	bl	0 <_ZN4llvm18report_fatal_errorEPKcb>
    28f0:	adrp	x3, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    28f4:	adrp	x1, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    28f8:	adrp	x0, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    28fc:	add	x3, x3, #0x0
    2900:	add	x1, x1, #0x0
    2904:	add	x0, x0, #0x0
    2908:	mov	w2, #0xe5                  	// #229
    290c:	stp	x27, x28, [sp, #80]
    2910:	bl	0 <__assert_fail>
    2914:	adrp	x3, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    2918:	adrp	x1, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    291c:	adrp	x0, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    2920:	add	x3, x3, #0x0
    2924:	add	x1, x1, #0x0
    2928:	add	x0, x0, #0x0
    292c:	mov	w2, #0x43                  	// #67
    2930:	bl	0 <__assert_fail>
    2934:	adrp	x3, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    2938:	adrp	x1, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    293c:	adrp	x0, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    2940:	add	x3, x3, #0x0
    2944:	add	x1, x1, #0x0
    2948:	add	x0, x0, #0x0
    294c:	mov	w2, #0x9d                  	// #157
    2950:	bl	0 <__assert_fail>
    2954:	adrp	x0, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    2958:	mov	w1, #0x1                   	// #1
    295c:	add	x0, x0, #0x0
    2960:	bl	0 <_ZN4llvm18report_fatal_errorEPKcb>
    2964:	adrp	x0, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    2968:	mov	w1, #0x1                   	// #1
    296c:	add	x0, x0, #0x0
    2970:	bl	0 <_ZN4llvm18report_fatal_errorEPKcb>
    2974:	nop

0000000000002978 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>:
    2978:	stp	x29, x30, [sp, #-256]!
    297c:	mov	x29, sp
    2980:	stp	x19, x20, [sp, #16]
    2984:	mov	x20, x0
    2988:	ldp	w19, w0, [x0, #72]
    298c:	stp	x21, x22, [sp, #32]
    2990:	mov	x21, x8
    2994:	stp	x23, x24, [sp, #48]
    2998:	mov	x22, x2
    299c:	cmp	w19, w0
    29a0:	stp	x25, x26, [sp, #64]
    29a4:	ldr	w25, [x20, #36]
    29a8:	stp	x27, x28, [sp, #80]
    29ac:	mov	w28, w1
    29b0:	b.cs	2e7c <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x504>  // b.hs, b.nlast
    29b4:	ldr	x24, [x20, #64]
    29b8:	ubfiz	x19, x19, #5, #32
    29bc:	add	x2, x24, x19
    29c0:	str	w25, [x24, x19]
    29c4:	stp	xzr, xzr, [x2, #8]!
    29c8:	ldp	w1, w3, [x20, #72]
    29cc:	str	xzr, [x2, #16]
    29d0:	mov	w0, w1
    29d4:	add	x0, x0, #0x1
    29d8:	cmp	x0, x3
    29dc:	b.hi	3110 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x798>  // b.pmore
    29e0:	add	w1, w1, #0x1
    29e4:	str	w1, [x20, #72]
    29e8:	cbz	w1, 30f0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x778>
    29ec:	ldr	x1, [x20, #64]
    29f0:	lsl	x0, x0, #5
    29f4:	sub	x2, x0, #0x20
    29f8:	mov	x0, x20
    29fc:	add	x2, x1, x2
    2a00:	mov	x3, x2
    2a04:	ldr	q1, [x0, #40]!
    2a08:	ldr	q0, [x3, #8]!
    2a0c:	ldr	x4, [x20, #336]
    2a10:	ldp	x1, x6, [x3, #8]
    2a14:	stur	q1, [x2, #8]
    2a18:	ldr	x2, [x0, #16]
    2a1c:	str	x2, [x3, #16]
    2a20:	stur	q0, [x20, #40]
    2a24:	str	x6, [x0, #16]
    2a28:	cbz	x4, 2aa4 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x12c>
    2a2c:	ldp	x3, x4, [x4]
    2a30:	cmp	x3, x4
    2a34:	b.eq	2a48 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0xd0>  // b.none
    2a38:	ldur	w2, [x4, #-88]
    2a3c:	sub	x6, x4, #0x58
    2a40:	cmp	w28, w2
    2a44:	b.eq	2a98 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x120>  // b.none
    2a48:	sub	x4, x4, x3
    2a4c:	mov	x2, #0x8ba3                	// #35747
    2a50:	movk	x2, #0xba2e, lsl #16
    2a54:	asr	x4, x4, #3
    2a58:	movk	x2, #0xa2e8, lsl #32
    2a5c:	movk	x2, #0x2e8b, lsl #48
    2a60:	mul	x4, x4, x2
    2a64:	cbz	w4, 2aa4 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x12c>
    2a68:	sub	w4, w4, #0x1
    2a6c:	add	x2, x3, #0x58
    2a70:	mov	w6, #0x58                  	// #88
    2a74:	umaddl	x4, w4, w6, x2
    2a78:	b	2a88 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x110>
    2a7c:	add	x3, x3, #0x58
    2a80:	cmp	x3, x4
    2a84:	b.eq	2aa4 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x12c>  // b.none
    2a88:	ldr	w2, [x3]
    2a8c:	mov	x6, x3
    2a90:	cmp	w28, w2
    2a94:	b.ne	2a7c <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x104>  // b.any
    2a98:	ldp	x2, x3, [x6, #8]
    2a9c:	mov	w4, #0x0                   	// #0
    2aa0:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    2aa4:	add	x19, sp, #0xd0
    2aa8:	mov	x0, x20
    2aac:	mov	w1, #0x4                   	// #4
    2ab0:	mov	x8, x19
    2ab4:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    2ab8:	ldrb	w1, [sp, #216]
    2abc:	ldrb	w0, [sp, #152]
    2ac0:	and	w2, w1, #0x1
    2ac4:	and	w1, w1, #0xfffffffd
    2ac8:	strb	w1, [sp, #216]
    2acc:	bfxil	w0, w2, #0, #1
    2ad0:	orr	w0, w0, #0x2
    2ad4:	strb	w0, [sp, #152]
    2ad8:	ldr	x0, [sp, #208]
    2adc:	cbz	w2, 2b84 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x20c>
    2ae0:	str	x0, [sp, #144]
    2ae4:	mov	x0, x19
    2ae8:	str	xzr, [sp, #208]
    2aec:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    2af0:	ldrb	w0, [sp, #152]
    2af4:	and	w1, w0, #0x1
    2af8:	bfi	w0, w1, #1, #1
    2afc:	strb	w0, [sp, #152]
    2b00:	cbz	w1, 2ba4 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x22c>
    2b04:	ldrb	w1, [sp, #136]
    2b08:	add	x23, sp, #0x90
    2b0c:	ldr	x2, [sp, #144]
    2b10:	and	w0, w0, #0xfffffffd
    2b14:	orr	w1, w1, #0x3
    2b18:	str	x2, [sp, #128]
    2b1c:	strb	w1, [sp, #136]
    2b20:	str	xzr, [sp, #144]
    2b24:	strb	w0, [sp, #152]
    2b28:	mov	x0, x23
    2b2c:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    2b30:	ldrb	w0, [sp, #136]
    2b34:	and	w1, w0, #0x1
    2b38:	bfi	w0, w1, #1, #1
    2b3c:	strb	w0, [sp, #136]
    2b40:	cbz	w1, 2be0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x268>
    2b44:	ldr	x1, [sp, #128]
    2b48:	and	w0, w0, #0xfffffffd
    2b4c:	str	xzr, [sp, #128]
    2b50:	orr	x1, x1, #0x1
    2b54:	str	x1, [x21]
    2b58:	strb	w0, [sp, #136]
    2b5c:	add	x0, sp, #0x80
    2b60:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    2b64:	mov	x0, x21
    2b68:	ldp	x19, x20, [sp, #16]
    2b6c:	ldp	x21, x22, [sp, #32]
    2b70:	ldp	x23, x24, [sp, #48]
    2b74:	ldp	x25, x26, [sp, #64]
    2b78:	ldp	x27, x28, [sp, #80]
    2b7c:	ldp	x29, x30, [sp], #256
    2b80:	ret
    2b84:	str	w0, [sp, #144]
    2b88:	mov	x0, x19
    2b8c:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    2b90:	ldrb	w0, [sp, #152]
    2b94:	and	w1, w0, #0x1
    2b98:	bfi	w0, w1, #1, #1
    2b9c:	strb	w0, [sp, #152]
    2ba0:	cbnz	w1, 2b04 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x18c>
    2ba4:	ldr	w24, [sp, #144]
    2ba8:	tbnz	w24, #3, 2c70 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x2f8>
    2bac:	ldrb	w0, [sp, #136]
    2bb0:	add	x23, sp, #0x90
    2bb4:	str	w24, [sp, #128]
    2bb8:	and	w0, w0, #0xfffffffc
    2bbc:	orr	w0, w0, #0x2
    2bc0:	strb	w0, [sp, #136]
    2bc4:	mov	x0, x23
    2bc8:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    2bcc:	ldrb	w0, [sp, #136]
    2bd0:	and	w1, w0, #0x1
    2bd4:	bfi	w0, w1, #1, #1
    2bd8:	strb	w0, [sp, #136]
    2bdc:	cbnz	w1, 2b44 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x1cc>
    2be0:	ldr	w24, [sp, #128]
    2be4:	str	w24, [x20, #36]
    2be8:	cmp	w24, #0x40
    2bec:	b.hi	2d9c <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x424>  // b.pmore
    2bf0:	ldr	w0, [x20, #32]
    2bf4:	mov	w1, #0x0                   	// #0
    2bf8:	cmp	w0, #0x1f
    2bfc:	b.hi	2d78 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x400>  // b.pmore
    2c00:	str	w1, [x20, #32]
    2c04:	mov	x0, x20
    2c08:	mov	w1, #0x20                  	// #32
    2c0c:	mov	x8, x19
    2c10:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    2c14:	ldrb	w0, [sp, #216]
    2c18:	and	w1, w0, #0x1
    2c1c:	bfi	w0, w1, #1, #1
    2c20:	strb	w0, [sp, #216]
    2c24:	cbnz	w1, 2d54 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x3dc>
    2c28:	cbz	x22, 2c34 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x2bc>
    2c2c:	ldr	x0, [sp, #208]
    2c30:	str	w0, [x22]
    2c34:	ldr	w0, [x20, #36]
    2c38:	cbz	w0, 30bc <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x744>
    2c3c:	ldr	w0, [x20, #32]
    2c40:	cbnz	w0, 2d90 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x418>
    2c44:	ldp	x1, x0, [x20, #8]
    2c48:	cmp	x1, x0
    2c4c:	b.hi	2d90 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x418>  // b.pmore
    2c50:	bl	0 <_ZNSt3_V216generic_categoryEv>
    2c54:	mov	x1, x0
    2c58:	mov	x8, x21
    2c5c:	adrp	x2, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    2c60:	mov	x0, #0x54                  	// #84
    2c64:	add	x2, x2, #0x0
    2c68:	bl	0 <_ZN4llvm17createStringErrorESt10error_codePKc>
    2c6c:	b	2d6c <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x3f4>
    2c70:	and	w24, w24, #0x7
    2c74:	add	x23, sp, #0x90
    2c78:	add	x26, sp, #0xb0
    2c7c:	mov	w25, #0x0                   	// #0
    2c80:	b	2cfc <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x384>
    2c84:	str	w0, [sp, #176]
    2c88:	ldrb	w0, [sp, #152]
    2c8c:	tbnz	w0, #1, 3078 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x700>
    2c90:	mov	x0, x23
    2c94:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    2c98:	ldrb	w1, [sp, #184]
    2c9c:	ldrb	w0, [sp, #152]
    2ca0:	and	w2, w1, #0x1
    2ca4:	and	w1, w1, #0xfffffffd
    2ca8:	strb	w1, [sp, #184]
    2cac:	bfxil	w0, w2, #0, #1
    2cb0:	orr	w0, w0, #0x2
    2cb4:	strb	w0, [sp, #152]
    2cb8:	cbnz	w2, 2d44 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x3cc>
    2cbc:	ldr	w0, [sp, #176]
    2cc0:	str	w0, [sp, #144]
    2cc4:	mov	x0, x26
    2cc8:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    2ccc:	mov	x0, x19
    2cd0:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    2cd4:	ldrb	w0, [sp, #152]
    2cd8:	and	w1, w0, #0x1
    2cdc:	bfi	w0, w1, #1, #1
    2ce0:	strb	w0, [sp, #152]
    2ce4:	cbnz	w1, 3098 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x720>
    2ce8:	ldr	w1, [sp, #144]
    2cec:	and	w0, w1, #0x7
    2cf0:	lsl	w0, w0, w25
    2cf4:	orr	w24, w24, w0
    2cf8:	tbz	w1, #3, 3080 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x708>
    2cfc:	mov	x0, x20
    2d00:	mov	w1, #0x4                   	// #4
    2d04:	mov	x8, x19
    2d08:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    2d0c:	ldrb	w1, [sp, #216]
    2d10:	add	w25, w25, #0x3
    2d14:	ldrb	w0, [sp, #184]
    2d18:	and	w2, w1, #0x1
    2d1c:	and	w1, w1, #0xfffffffd
    2d20:	strb	w1, [sp, #216]
    2d24:	bfxil	w0, w2, #0, #1
    2d28:	orr	w0, w0, #0x2
    2d2c:	strb	w0, [sp, #184]
    2d30:	ldr	x0, [sp, #208]
    2d34:	cbz	w2, 2c84 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x30c>
    2d38:	str	x0, [sp, #176]
    2d3c:	str	xzr, [sp, #208]
    2d40:	b	2c88 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x310>
    2d44:	ldr	x0, [sp, #176]
    2d48:	str	x0, [sp, #144]
    2d4c:	str	xzr, [sp, #176]
    2d50:	b	2cc4 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x34c>
    2d54:	ldr	x1, [sp, #208]
    2d58:	and	w0, w0, #0xfffffffd
    2d5c:	str	xzr, [sp, #208]
    2d60:	orr	x1, x1, #0x1
    2d64:	str	x1, [x21]
    2d68:	strb	w0, [sp, #216]
    2d6c:	mov	x0, x19
    2d70:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    2d74:	b	2b5c <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x1e4>
    2d78:	ldr	x2, [x20, #24]
    2d7c:	sub	w0, w0, #0x20
    2d80:	mov	w1, #0x20                  	// #32
    2d84:	lsr	x0, x2, x0
    2d88:	str	x0, [x20, #24]
    2d8c:	b	2c00 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x288>
    2d90:	mov	x0, #0x1                   	// #1
    2d94:	str	x0, [x21]
    2d98:	b	2d6c <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x3f4>
    2d9c:	bl	0 <_ZNSt3_V216generic_categoryEv>
    2da0:	add	x22, sp, #0xb0
    2da4:	adrp	x2, 0 <_ZTVN4llvm18raw_string_ostreamE>
    2da8:	adrp	x3, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    2dac:	add	x7, x23, #0x10
    2db0:	adrp	x4, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    2db4:	ldr	x2, [x2]
    2db8:	add	x4, x4, #0x0
    2dbc:	ldr	x3, [x3]
    2dc0:	add	x2, x2, #0x10
    2dc4:	mov	w5, #0x1                   	// #1
    2dc8:	mov	x6, #0x40                  	// #64
    2dcc:	add	x3, x3, #0x10
    2dd0:	mov	x1, x22
    2dd4:	mov	x20, x0
    2dd8:	mov	x0, x19
    2ddc:	stp	x7, xzr, [sp, #144]
    2de0:	strb	wzr, [sp, #160]
    2de4:	stp	x3, x4, [sp, #176]
    2de8:	str	w24, [sp, #192]
    2dec:	stp	x6, x2, [sp, #200]
    2df0:	stp	xzr, xzr, [sp, #216]
    2df4:	str	xzr, [sp, #232]
    2df8:	str	w5, [sp, #240]
    2dfc:	str	x23, [sp, #248]
    2e00:	bl	0 <_ZN4llvm11raw_ostreamlsERKNS_18format_object_baseE>
    2e04:	ldr	x0, [sp, #216]
    2e08:	ldr	x1, [sp, #232]
    2e0c:	cmp	x1, x0
    2e10:	b.eq	2e1c <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x4a4>  // b.none
    2e14:	mov	x0, x19
    2e18:	bl	0 <_ZN4llvm11raw_ostream14flush_nonemptyEv>
    2e1c:	ldr	x2, [sp, #248]
    2e20:	mov	w1, #0x104                 	// #260
    2e24:	mov	x0, #0x54                  	// #84
    2e28:	mov	x24, #0x0                   	// #0
    2e2c:	bfxil	x24, x0, #0, #32
    2e30:	mov	x0, #0x40                  	// #64
    2e34:	stp	x2, xzr, [sp, #176]
    2e38:	add	x23, x23, #0x10
    2e3c:	strh	w1, [sp, #192]
    2e40:	bl	0 <_Znwm>
    2e44:	mov	x3, x20
    2e48:	mov	x2, x24
    2e4c:	mov	x20, x0
    2e50:	mov	x1, x22
    2e54:	orr	x20, x20, #0x1
    2e58:	bl	0 <_ZN4llvm11StringErrorC1ERKNS_5TwineESt10error_code>
    2e5c:	str	x20, [x21]
    2e60:	mov	x0, x19
    2e64:	bl	0 <_ZN4llvm18raw_string_ostreamD1Ev>
    2e68:	ldr	x0, [sp, #144]
    2e6c:	cmp	x0, x23
    2e70:	b.eq	2b5c <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x1e4>  // b.none
    2e74:	bl	0 <_ZdlPv>
    2e78:	b	2b5c <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x1e4>
    2e7c:	mov	w0, w0
    2e80:	mov	x2, #0xffffffff            	// #4294967295
    2e84:	add	x0, x0, #0x2
    2e88:	orr	x0, x0, x0, lsr #1
    2e8c:	orr	x0, x0, x0, lsr #2
    2e90:	orr	x0, x0, x0, lsr #4
    2e94:	orr	x0, x0, x0, lsr #8
    2e98:	orr	x1, x0, x0, lsr #16
    2e9c:	orr	x0, x1, x0, lsr #32
    2ea0:	add	x1, x0, #0x1
    2ea4:	cmp	x1, x2
    2ea8:	b.hi	30dc <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x764>  // b.pmore
    2eac:	lsl	x0, x1, #5
    2eb0:	str	w1, [sp, #124]
    2eb4:	str	x1, [sp, #208]
    2eb8:	bl	0 <malloc>
    2ebc:	mov	x24, x0
    2ec0:	cbz	x0, 3130 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x7b8>
    2ec4:	ldr	x0, [x20, #64]
    2ec8:	ubfiz	x19, x19, #5, #32
    2ecc:	add	x27, x0, x19
    2ed0:	cmp	x0, x27
    2ed4:	b.eq	2fe4 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x66c>  // b.none
    2ed8:	movi	v1.4s, #0x0
    2edc:	mov	x1, x24
    2ee0:	ldur	q0, [x0, #8]
    2ee4:	add	x0, x0, #0x20
    2ee8:	ldur	w3, [x0, #-32]
    2eec:	add	x1, x1, #0x20
    2ef0:	stur	w3, [x1, #-32]
    2ef4:	stur	q0, [x1, #-24]
    2ef8:	ldur	x3, [x0, #-8]
    2efc:	stur	x3, [x1, #-8]
    2f00:	stur	xzr, [x0, #-8]
    2f04:	stur	q1, [x0, #-24]
    2f08:	cmp	x27, x0
    2f0c:	b.ne	2ee0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x568>  // b.any
    2f10:	ldr	x0, [x20, #64]
    2f14:	str	x0, [sp, #104]
    2f18:	add	x27, x0, x19
    2f1c:	cmp	x0, x27
    2f20:	b.eq	2fe4 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x66c>  // b.none
    2f24:	adrp	x0, 0 <__pthread_key_create>
    2f28:	ldr	x0, [x0]
    2f2c:	str	x0, [sp, #112]
    2f30:	sub	x27, x27, #0x20
    2f34:	ldp	x19, x26, [x27, #8]
    2f38:	mov	x0, x19
    2f3c:	cmp	x19, x26
    2f40:	b.eq	2fcc <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x654>  // b.none
    2f44:	ldr	x0, [sp, #112]
    2f48:	cbnz	x0, 2f5c <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x5e4>
    2f4c:	b	304c <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x6d4>
    2f50:	add	x19, x19, #0x10
    2f54:	cmp	x26, x19
    2f58:	b.eq	2fc8 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x650>  // b.none
    2f5c:	ldr	x23, [x19, #8]
    2f60:	cbz	x23, 2f50 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x5d8>
    2f64:	add	x0, x23, #0x8
    2f68:	ldaxr	w3, [x0]
    2f6c:	sub	w1, w3, #0x1
    2f70:	stlxr	w2, w1, [x0]
    2f74:	cbnz	w2, 2f68 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x5f0>
    2f78:	cmp	w3, #0x1
    2f7c:	b.ne	2f50 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x5d8>  // b.any
    2f80:	ldr	x3, [x23]
    2f84:	mov	x0, x23
    2f88:	ldr	x3, [x3, #16]
    2f8c:	blr	x3
    2f90:	add	x0, x23, #0xc
    2f94:	ldaxr	w3, [x0]
    2f98:	sub	w1, w3, #0x1
    2f9c:	stlxr	w2, w1, [x0]
    2fa0:	cbnz	w2, 2f94 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x61c>
    2fa4:	cmp	w3, #0x1
    2fa8:	b.ne	2f50 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x5d8>  // b.any
    2fac:	ldr	x3, [x23]
    2fb0:	mov	x0, x23
    2fb4:	add	x19, x19, #0x10
    2fb8:	ldr	x3, [x3, #24]
    2fbc:	blr	x3
    2fc0:	cmp	x26, x19
    2fc4:	b.ne	2f5c <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x5e4>  // b.any
    2fc8:	ldr	x0, [x27, #8]
    2fcc:	cbz	x0, 3068 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x6f0>
    2fd0:	bl	0 <_ZdlPv>
    2fd4:	ldr	x0, [sp, #104]
    2fd8:	cmp	x0, x27
    2fdc:	b.ne	2f30 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x5b8>  // b.any
    2fe0:	ldr	x27, [x20, #64]
    2fe4:	add	x0, x20, #0x50
    2fe8:	cmp	x27, x0
    2fec:	b.eq	2ff8 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x680>  // b.none
    2ff0:	mov	x0, x27
    2ff4:	bl	0 <free>
    2ff8:	ldr	w0, [sp, #124]
    2ffc:	ldr	w19, [x20, #72]
    3000:	str	x24, [x20, #64]
    3004:	str	w0, [x20, #76]
    3008:	b	29b8 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x40>
    300c:	ldr	x3, [x23]
    3010:	mov	x0, x23
    3014:	ldr	x3, [x3, #16]
    3018:	blr	x3
    301c:	ldr	w0, [x23, #12]
    3020:	subs	w3, w0, #0x1
    3024:	str	w3, [x23, #12]
    3028:	b.ne	3040 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x6c8>  // b.any
    302c:	ldr	x3, [x23]
    3030:	mov	x0, x23
    3034:	ldr	x3, [x3, #24]
    3038:	blr	x3
    303c:	nop
    3040:	add	x19, x19, #0x10
    3044:	cmp	x19, x26
    3048:	b.eq	2fc8 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x650>  // b.none
    304c:	ldr	x23, [x19, #8]
    3050:	cbz	x23, 3040 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x6c8>
    3054:	ldr	w0, [x23, #8]
    3058:	subs	w3, w0, #0x1
    305c:	str	w3, [x23, #8]
    3060:	b.ne	3040 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x6c8>  // b.any
    3064:	b	300c <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x694>
    3068:	ldr	x0, [sp, #104]
    306c:	cmp	x0, x27
    3070:	b.ne	2f30 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x5b8>  // b.any
    3074:	b	2fe0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x668>
    3078:	mov	x0, x23
    307c:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    3080:	ldrb	w0, [sp, #136]
    3084:	str	w24, [sp, #128]
    3088:	and	w0, w0, #0xfffffffc
    308c:	orr	w0, w0, #0x2
    3090:	strb	w0, [sp, #136]
    3094:	b	2b28 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x1b0>
    3098:	ldrb	w1, [sp, #136]
    309c:	and	w0, w0, #0xfffffffd
    30a0:	ldr	x2, [sp, #144]
    30a4:	orr	w1, w1, #0x3
    30a8:	str	x2, [sp, #128]
    30ac:	strb	w1, [sp, #136]
    30b0:	str	xzr, [sp, #144]
    30b4:	strb	w0, [sp, #152]
    30b8:	b	2b28 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x1b0>
    30bc:	bl	0 <_ZNSt3_V216generic_categoryEv>
    30c0:	mov	x1, x0
    30c4:	mov	x8, x21
    30c8:	adrp	x2, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    30cc:	mov	x0, #0x54                  	// #84
    30d0:	add	x2, x2, #0x0
    30d4:	bl	0 <_ZN4llvm17createStringErrorESt10error_codePKc>
    30d8:	b	2d6c <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x3f4>
    30dc:	mov	w0, #0xffffffff            	// #-1
    30e0:	mov	x1, x2
    30e4:	str	w0, [sp, #124]
    30e8:	mov	x0, #0x1fffffffe0          	// #137438953440
    30ec:	b	2eb4 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x53c>
    30f0:	adrp	x3, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    30f4:	adrp	x1, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    30f8:	adrp	x0, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    30fc:	add	x3, x3, #0x0
    3100:	add	x1, x1, #0x0
    3104:	add	x0, x0, #0x0
    3108:	mov	w2, #0xa7                  	// #167
    310c:	bl	0 <__assert_fail>
    3110:	adrp	x3, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    3114:	adrp	x1, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    3118:	adrp	x0, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    311c:	add	x3, x3, #0x0
    3120:	add	x1, x1, #0x0
    3124:	add	x0, x0, #0x0
    3128:	mov	w2, #0x43                  	// #67
    312c:	bl	0 <__assert_fail>
    3130:	adrp	x0, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    3134:	mov	w1, #0x1                   	// #1
    3138:	add	x0, x0, #0x0
    313c:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
    3140:	ldr	w19, [x20, #72]
    3144:	b	2ec4 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x54c>

0000000000003148 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv>:
    3148:	stp	x29, x30, [sp, #-240]!
    314c:	mov	x29, sp
    3150:	stp	x19, x20, [sp, #16]
    3154:	mov	x19, x0
    3158:	mov	x0, #0x220                 	// #544
    315c:	stp	x21, x22, [sp, #32]
    3160:	mov	x21, x8
    3164:	add	x20, sp, #0xe0
    3168:	str	xzr, [sp, #128]
    316c:	bl	0 <_Znwm>
    3170:	adrp	x1, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    3174:	mov	x2, x0
    3178:	mov	x3, x0
    317c:	mov	x0, #0x100000001           	// #4294967297
    3180:	ldr	x1, [x1]
    3184:	str	x0, [x2, #8]
    3188:	add	x5, x2, #0x10
    318c:	mov	x4, #0x2000000000          	// #137438953472
    3190:	add	x1, x1, #0x10
    3194:	str	x1, [x3], #32
    3198:	mov	x0, x19
    319c:	mov	w1, #0x5                   	// #5
    31a0:	stp	x3, x4, [x2, #16]
    31a4:	mov	x8, x20
    31a8:	stp	x5, x2, [sp, #128]
    31ac:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    31b0:	ldrb	w1, [sp, #232]
    31b4:	ldrb	w0, [sp, #200]
    31b8:	and	w2, w1, #0x1
    31bc:	and	w1, w1, #0xfffffffd
    31c0:	strb	w1, [sp, #232]
    31c4:	bfxil	w0, w2, #0, #1
    31c8:	orr	w0, w0, #0x2
    31cc:	strb	w0, [sp, #200]
    31d0:	ldr	x0, [sp, #224]
    31d4:	cbnz	w2, 3400 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x2b8>
    31d8:	str	w0, [sp, #192]
    31dc:	mov	x0, x20
    31e0:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    31e4:	ldrb	w0, [sp, #200]
    31e8:	and	w1, w0, #0x1
    31ec:	bfi	w0, w1, #1, #1
    31f0:	strb	w0, [sp, #200]
    31f4:	cbnz	w1, 32d4 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x18c>
    31f8:	stp	x23, x24, [sp, #48]
    31fc:	ldr	w23, [sp, #192]
    3200:	tbnz	w23, #4, 352c <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x3e4>
    3204:	str	w23, [sp, #144]
    3208:	add	x22, sp, #0xc0
    320c:	ldp	x23, x24, [sp, #48]
    3210:	ldrb	w0, [sp, #152]
    3214:	and	w0, w0, #0xfffffffc
    3218:	orr	w0, w0, #0x2
    321c:	strb	w0, [sp, #152]
    3220:	mov	x0, x22
    3224:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    3228:	ldrb	w0, [sp, #152]
    322c:	and	w1, w0, #0x1
    3230:	bfi	w0, w1, #1, #1
    3234:	strb	w0, [sp, #152]
    3238:	cbz	w1, 3314 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x1cc>
    323c:	ldr	x1, [sp, #144]
    3240:	and	w0, w0, #0xfffffffd
    3244:	str	xzr, [sp, #144]
    3248:	orr	x1, x1, #0x1
    324c:	str	x1, [x21]
    3250:	strb	w0, [sp, #152]
    3254:	add	x0, sp, #0x90
    3258:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    325c:	ldr	x19, [sp, #136]
    3260:	cbz	x19, 32c0 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x178>
    3264:	adrp	x20, 0 <__pthread_key_create>
    3268:	ldr	x0, [x20]
    326c:	cbz	x0, 3708 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x5c0>
    3270:	add	x1, x19, #0x8
    3274:	ldaxr	w0, [x1]
    3278:	sub	w2, w0, #0x1
    327c:	stlxr	w3, w2, [x1]
    3280:	cbnz	w3, 3274 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x12c>
    3284:	cmp	w0, #0x1
    3288:	b.ne	32c0 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x178>  // b.any
    328c:	ldr	x1, [x19]
    3290:	mov	x0, x19
    3294:	ldr	x1, [x1, #16]
    3298:	blr	x1
    329c:	ldr	x20, [x20]
    32a0:	cbz	x20, 3924 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x7dc>
    32a4:	add	x1, x19, #0xc
    32a8:	ldaxr	w0, [x1]
    32ac:	sub	w2, w0, #0x1
    32b0:	stlxr	w3, w2, [x1]
    32b4:	cbnz	w3, 32a8 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x160>
    32b8:	cmp	w0, #0x1
    32bc:	b.eq	38b8 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x770>  // b.none
    32c0:	mov	x0, x21
    32c4:	ldp	x19, x20, [sp, #16]
    32c8:	ldp	x21, x22, [sp, #32]
    32cc:	ldp	x29, x30, [sp], #240
    32d0:	ret
    32d4:	ldrb	w1, [sp, #152]
    32d8:	and	w0, w0, #0xfffffffd
    32dc:	ldr	x2, [sp, #192]
    32e0:	orr	w1, w1, #0x3
    32e4:	add	x22, sp, #0xc0
    32e8:	str	x2, [sp, #144]
    32ec:	strb	w1, [sp, #152]
    32f0:	str	xzr, [sp, #192]
    32f4:	strb	w0, [sp, #200]
    32f8:	mov	x0, x22
    32fc:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    3300:	ldrb	w0, [sp, #152]
    3304:	and	w1, w0, #0x1
    3308:	bfi	w0, w1, #1, #1
    330c:	strb	w0, [sp, #152]
    3310:	cbnz	w1, 323c <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0xf4>
    3314:	stp	x25, x26, [sp, #64]
    3318:	ldr	w26, [sp, #144]
    331c:	cbz	w26, 34d4 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x38c>
    3320:	stp	x23, x24, [sp, #48]
    3324:	add	x23, sp, #0xa0
    3328:	add	x24, sp, #0xd0
    332c:	add	x0, sp, #0xb0
    3330:	mov	w25, #0x0                   	// #0
    3334:	stp	x27, x28, [sp, #80]
    3338:	str	x0, [sp, #104]
    333c:	mov	x0, x19
    3340:	mov	w1, #0x1                   	// #1
    3344:	mov	x8, x23
    3348:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    334c:	ldrb	w0, [sp, #168]
    3350:	and	w1, w0, #0x1
    3354:	bfi	w0, w1, #1, #1
    3358:	strb	w0, [sp, #168]
    335c:	cbnz	w1, 3960 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x818>
    3360:	ldr	x0, [sp, #160]
    3364:	cbz	x0, 3428 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x2e0>
    3368:	mov	x0, x19
    336c:	mov	w1, #0x8                   	// #8
    3370:	mov	x8, x24
    3374:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    3378:	ldrb	w0, [sp, #216]
    337c:	and	w1, w0, #0x1
    3380:	bfi	w0, w1, #1, #1
    3384:	strb	w0, [sp, #216]
    3388:	cbz	w1, 3614 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x4cc>
    338c:	ldrb	w1, [sp, #184]
    3390:	and	w0, w0, #0xfffffffd
    3394:	ldr	x2, [sp, #208]
    3398:	orr	w1, w1, #0x3
    339c:	str	x2, [sp, #176]
    33a0:	strb	w1, [sp, #184]
    33a4:	str	xzr, [sp, #208]
    33a8:	strb	w0, [sp, #216]
    33ac:	mov	x0, x24
    33b0:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    33b4:	ldrb	w0, [sp, #184]
    33b8:	and	w1, w0, #0x1
    33bc:	bfi	w0, w1, #1, #1
    33c0:	strb	w0, [sp, #184]
    33c4:	cbz	w1, 3724 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x5dc>
    33c8:	ldr	x2, [sp, #176]
    33cc:	and	w1, w0, #0xfffffffd
    33d0:	add	x0, sp, #0xb0
    33d4:	str	xzr, [sp, #176]
    33d8:	orr	x2, x2, #0x1
    33dc:	str	x2, [x21]
    33e0:	strb	w1, [sp, #184]
    33e4:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    33e8:	mov	x0, x23
    33ec:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    33f0:	ldp	x23, x24, [sp, #48]
    33f4:	ldp	x25, x26, [sp, #64]
    33f8:	ldp	x27, x28, [sp, #80]
    33fc:	b	3254 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x10c>
    3400:	str	x0, [sp, #192]
    3404:	mov	x0, x20
    3408:	str	xzr, [sp, #224]
    340c:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    3410:	ldrb	w0, [sp, #200]
    3414:	and	w1, w0, #0x1
    3418:	bfi	w0, w1, #1, #1
    341c:	strb	w0, [sp, #200]
    3420:	cbz	w1, 31f8 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0xb0>
    3424:	b	32d4 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x18c>
    3428:	mov	x0, x19
    342c:	mov	w1, #0x3                   	// #3
    3430:	mov	x8, x22
    3434:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    3438:	ldrb	w0, [sp, #200]
    343c:	and	w1, w0, #0x1
    3440:	bfi	w0, w1, #1, #1
    3444:	strb	w0, [sp, #200]
    3448:	cbnz	w1, 3a34 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x8ec>
    344c:	ldr	x28, [sp, #192]
    3450:	cmp	w28, #0x2
    3454:	b.ls	3518 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x3d0>  // b.plast
    3458:	sub	w0, w28, #0x3
    345c:	cmp	w0, #0x2
    3460:	b.hi	351c <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x3d4>  // b.pmore
    3464:	ldr	x27, [sp, #128]
    3468:	ubfiz	w2, w28, #1, #3
    346c:	mov	x28, #0x0                   	// #0
    3470:	bfxil	x28, x2, #0, #8
    3474:	ldp	w0, w1, [x27, #8]
    3478:	cmp	w0, w1
    347c:	b.cs	38e8 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x7a0>  // b.hs, b.nlast
    3480:	ldr	x1, [x27]
    3484:	ubfiz	x0, x0, #4, #32
    3488:	add	x2, x1, x0
    348c:	str	xzr, [x1, x0]
    3490:	str	x28, [x2, #8]
    3494:	ldp	w0, w2, [x27, #8]
    3498:	mov	w1, w0
    349c:	add	x1, x1, #0x1
    34a0:	cmp	x1, x2
    34a4:	b.hi	3ac0 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x978>  // b.pmore
    34a8:	add	w0, w0, #0x1
    34ac:	str	w0, [x27, #8]
    34b0:	mov	x0, x22
    34b4:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    34b8:	mov	x0, x23
    34bc:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    34c0:	add	w25, w25, #0x1
    34c4:	cmp	w26, w25
    34c8:	b.ne	333c <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x1f4>  // b.any
    34cc:	ldp	x23, x24, [sp, #48]
    34d0:	ldp	x27, x28, [sp, #80]
    34d4:	ldr	x2, [sp, #128]
    34d8:	ldr	w0, [x2, #8]
    34dc:	cbz	w0, 3ae0 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x998>
    34e0:	add	x0, x19, #0x28
    34e4:	ldp	x1, x3, [x0, #8]
    34e8:	cmp	x1, x3
    34ec:	b.eq	3a74 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x92c>  // b.none
    34f0:	stp	x2, xzr, [x1]
    34f4:	add	x3, x1, #0x10
    34f8:	ldr	x2, [sp, #136]
    34fc:	str	x2, [x1, #8]
    3500:	str	x3, [x0, #8]
    3504:	stp	xzr, xzr, [sp, #128]
    3508:	mov	x0, #0x1                   	// #1
    350c:	ldp	x25, x26, [sp, #64]
    3510:	str	x0, [x21]
    3514:	b	3254 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x10c>
    3518:	cbnz	w28, 3638 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x4f0>
    351c:	adrp	x0, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    3520:	mov	w1, #0x1                   	// #1
    3524:	add	x0, x0, #0x0
    3528:	bl	0 <_ZN4llvm18report_fatal_errorEPKcb>
    352c:	and	w23, w23, #0xf
    3530:	add	x22, sp, #0xc0
    3534:	mov	w24, #0x0                   	// #0
    3538:	stp	x25, x26, [sp, #64]
    353c:	add	x25, sp, #0xd0
    3540:	b	35bc <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x474>
    3544:	str	w0, [sp, #208]
    3548:	ldrb	w0, [sp, #200]
    354c:	tbnz	w0, #1, 3718 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x5d0>
    3550:	mov	x0, x22
    3554:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    3558:	ldrb	w1, [sp, #216]
    355c:	ldrb	w0, [sp, #200]
    3560:	and	w2, w1, #0x1
    3564:	and	w1, w1, #0xfffffffd
    3568:	strb	w1, [sp, #216]
    356c:	bfxil	w0, w2, #0, #1
    3570:	orr	w0, w0, #0x2
    3574:	strb	w0, [sp, #200]
    3578:	cbnz	w2, 3604 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x4bc>
    357c:	ldr	w0, [sp, #208]
    3580:	str	w0, [sp, #192]
    3584:	mov	x0, x25
    3588:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    358c:	mov	x0, x20
    3590:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    3594:	ldrb	w0, [sp, #200]
    3598:	and	w1, w0, #0x1
    359c:	bfi	w0, w1, #1, #1
    35a0:	strb	w0, [sp, #200]
    35a4:	cbnz	w1, 3934 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x7ec>
    35a8:	ldr	w1, [sp, #192]
    35ac:	and	w0, w1, #0xf
    35b0:	lsl	w0, w0, w24
    35b4:	orr	w23, w23, w0
    35b8:	tbz	w1, #4, 3904 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x7bc>
    35bc:	mov	x0, x19
    35c0:	mov	w1, #0x5                   	// #5
    35c4:	mov	x8, x20
    35c8:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    35cc:	ldrb	w1, [sp, #232]
    35d0:	add	w24, w24, #0x4
    35d4:	ldrb	w0, [sp, #216]
    35d8:	and	w2, w1, #0x1
    35dc:	and	w1, w1, #0xfffffffd
    35e0:	strb	w1, [sp, #232]
    35e4:	bfxil	w0, w2, #0, #1
    35e8:	orr	w0, w0, #0x2
    35ec:	strb	w0, [sp, #216]
    35f0:	ldr	x0, [sp, #224]
    35f4:	cbz	w2, 3544 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x3fc>
    35f8:	str	x0, [sp, #208]
    35fc:	str	xzr, [sp, #224]
    3600:	b	3548 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x400>
    3604:	ldr	x0, [sp, #208]
    3608:	str	x0, [sp, #192]
    360c:	str	xzr, [sp, #208]
    3610:	b	3584 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x43c>
    3614:	ldr	x0, [sp, #208]
    3618:	tbnz	w0, #7, 3780 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x638>
    361c:	ldrb	w1, [sp, #184]
    3620:	and	x0, x0, #0xffffffff
    3624:	str	x0, [sp, #176]
    3628:	and	w0, w1, #0xfffffffc
    362c:	orr	w0, w0, #0x2
    3630:	strb	w0, [sp, #184]
    3634:	b	33ac <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x264>
    3638:	mov	x0, x19
    363c:	mov	w1, #0x5                   	// #5
    3640:	mov	x8, x24
    3644:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    3648:	ldrb	w0, [sp, #216]
    364c:	and	w1, w0, #0x1
    3650:	bfi	w0, w1, #1, #1
    3654:	strb	w0, [sp, #216]
    3658:	cbnz	w1, 3814 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x6cc>
    365c:	ldr	x0, [sp, #208]
    3660:	tbz	w0, #4, 38cc <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x784>
    3664:	and	x0, x0, #0xf
    3668:	mov	w27, #0x0                   	// #0
    366c:	str	x0, [sp, #112]
    3670:	b	36e4 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x59c>
    3674:	mov	x0, x24
    3678:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    367c:	ldrb	w1, [sp, #232]
    3680:	ldrb	w0, [sp, #216]
    3684:	and	w3, w1, #0x1
    3688:	and	w1, w1, #0xfffffffd
    368c:	strb	w1, [sp, #232]
    3690:	bfxil	w0, w3, #0, #1
    3694:	orr	w0, w0, #0x2
    3698:	strb	w0, [sp, #216]
    369c:	ldr	x0, [sp, #224]
    36a0:	str	x0, [sp, #208]
    36a4:	cbz	w3, 36ac <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x564>
    36a8:	str	xzr, [sp, #224]
    36ac:	mov	x0, x20
    36b0:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    36b4:	ldrb	w0, [sp, #216]
    36b8:	and	w1, w0, #0x1
    36bc:	bfi	w0, w1, #1, #1
    36c0:	strb	w0, [sp, #216]
    36c4:	cbnz	w1, 3814 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x6cc>
    36c8:	ldr	x1, [sp, #208]
    36cc:	ldr	x2, [sp, #112]
    36d0:	and	x0, x1, #0xf
    36d4:	lsl	x0, x0, x27
    36d8:	orr	x0, x2, x0
    36dc:	str	x0, [sp, #112]
    36e0:	tbz	w1, #4, 3a58 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x910>
    36e4:	mov	x0, x19
    36e8:	mov	x8, x20
    36ec:	mov	w1, #0x5                   	// #5
    36f0:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    36f4:	ldrb	w0, [sp, #216]
    36f8:	add	w27, w27, #0x4
    36fc:	tbz	w0, #1, 3674 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x52c>
    3700:	mov	x0, x24
    3704:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    3708:	ldr	w0, [x19, #8]
    370c:	sub	w1, w0, #0x1
    3710:	str	w1, [x19, #8]
    3714:	b	3284 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x13c>
    3718:	mov	x0, x22
    371c:	stp	x27, x28, [sp, #80]
    3720:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    3724:	ldr	x27, [sp, #128]
    3728:	mov	x28, #0x1                   	// #1
    372c:	ldr	x5, [sp, #176]
    3730:	ldp	w0, w1, [x27, #8]
    3734:	cmp	w0, w1
    3738:	b.cs	3a10 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x8c8>  // b.hs, b.nlast
    373c:	ldr	x1, [x27]
    3740:	ubfiz	x0, x0, #4, #32
    3744:	add	x2, x1, x0
    3748:	str	x5, [x1, x0]
    374c:	str	x28, [x2, #8]
    3750:	ldp	w0, w2, [x27, #8]
    3754:	mov	w1, w0
    3758:	add	x1, x1, #0x1
    375c:	cmp	x1, x2
    3760:	b.hi	3ac0 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x978>  // b.pmore
    3764:	add	w0, w0, #0x1
    3768:	str	w0, [x27, #8]
    376c:	ldr	x0, [sp, #104]
    3770:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    3774:	mov	x0, x23
    3778:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    377c:	b	34c0 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x378>
    3780:	and	x28, x0, #0x7f
    3784:	mov	w27, #0x0                   	// #0
    3788:	b	37f4 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x6ac>
    378c:	mov	x0, x24
    3790:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    3794:	ldrb	w1, [sp, #232]
    3798:	ldrb	w0, [sp, #216]
    379c:	and	w2, w1, #0x1
    37a0:	and	w1, w1, #0xfffffffd
    37a4:	strb	w1, [sp, #232]
    37a8:	bfxil	w0, w2, #0, #1
    37ac:	orr	w0, w0, #0x2
    37b0:	strb	w0, [sp, #216]
    37b4:	ldr	x0, [sp, #224]
    37b8:	str	x0, [sp, #208]
    37bc:	cbz	w2, 37c4 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x67c>
    37c0:	str	xzr, [sp, #224]
    37c4:	mov	x0, x20
    37c8:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    37cc:	ldrb	w0, [sp, #216]
    37d0:	and	w1, w0, #0x1
    37d4:	bfi	w0, w1, #1, #1
    37d8:	strb	w0, [sp, #216]
    37dc:	cbnz	w1, 338c <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x244>
    37e0:	ldr	x1, [sp, #208]
    37e4:	and	x0, x1, #0x7f
    37e8:	lsl	x0, x0, x27
    37ec:	orr	x28, x28, x0
    37f0:	tbz	w1, #7, 397c <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x834>
    37f4:	mov	x0, x19
    37f8:	mov	x8, x20
    37fc:	mov	w1, #0x8                   	// #8
    3800:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    3804:	ldrb	w0, [sp, #216]
    3808:	add	w27, w27, #0x7
    380c:	tbz	w0, #1, 378c <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x644>
    3810:	b	3700 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x5b8>
    3814:	ldrb	w1, [sp, #232]
    3818:	and	w0, w0, #0xfffffffd
    381c:	ldr	x3, [sp, #208]
    3820:	orr	w1, w1, #0x3
    3824:	str	xzr, [sp, #208]
    3828:	strb	w0, [sp, #216]
    382c:	str	x3, [sp, #224]
    3830:	strb	w1, [sp, #232]
    3834:	mov	x0, x24
    3838:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    383c:	ldrb	w0, [sp, #232]
    3840:	and	w1, w0, #0x1
    3844:	bfi	w0, w1, #1, #1
    3848:	strb	w0, [sp, #232]
    384c:	cbnz	w1, 3a80 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x938>
    3850:	ldr	x4, [sp, #224]
    3854:	cbz	x4, 39b8 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x870>
    3858:	cmp	x4, #0x40
    385c:	b.hi	3af8 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x9b0>  // b.pmore
    3860:	ldr	x27, [sp, #128]
    3864:	ubfiz	w2, w28, #1, #3
    3868:	mov	x5, #0x0                   	// #0
    386c:	bfxil	x5, x2, #0, #8
    3870:	ldp	w0, w1, [x27, #8]
    3874:	cmp	w0, w1
    3878:	b.cs	3994 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x84c>  // b.hs, b.nlast
    387c:	ldr	x1, [x27]
    3880:	ubfiz	x0, x0, #4, #32
    3884:	add	x2, x1, x0
    3888:	str	x4, [x1, x0]
    388c:	str	x5, [x2, #8]
    3890:	ldp	w0, w2, [x27, #8]
    3894:	mov	w1, w0
    3898:	add	x1, x1, #0x1
    389c:	cmp	x1, x2
    38a0:	b.hi	3ac0 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x978>  // b.pmore
    38a4:	add	w0, w0, #0x1
    38a8:	str	w0, [x27, #8]
    38ac:	mov	x0, x20
    38b0:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    38b4:	b	34b0 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x368>
    38b8:	ldr	x1, [x19]
    38bc:	mov	x0, x19
    38c0:	ldr	x1, [x1, #24]
    38c4:	blr	x1
    38c8:	b	32c0 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x178>
    38cc:	ldrb	w1, [sp, #232]
    38d0:	and	x0, x0, #0xffffffff
    38d4:	str	x0, [sp, #224]
    38d8:	and	w0, w1, #0xfffffffc
    38dc:	orr	w0, w0, #0x2
    38e0:	strb	w0, [sp, #232]
    38e4:	b	3834 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x6ec>
    38e8:	mov	x0, x27
    38ec:	mov	x3, #0x10                  	// #16
    38f0:	mov	x2, #0x0                   	// #0
    38f4:	add	x1, x27, x3
    38f8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    38fc:	ldr	w0, [x27, #8]
    3900:	b	3480 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x338>
    3904:	ldrb	w0, [sp, #152]
    3908:	str	w23, [sp, #144]
    390c:	and	w0, w0, #0xfffffffc
    3910:	orr	w0, w0, #0x2
    3914:	strb	w0, [sp, #152]
    3918:	ldp	x23, x24, [sp, #48]
    391c:	ldp	x25, x26, [sp, #64]
    3920:	b	3220 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0xd8>
    3924:	ldr	w0, [x19, #12]
    3928:	sub	w1, w0, #0x1
    392c:	str	w1, [x19, #12]
    3930:	b	32b8 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x170>
    3934:	ldrb	w1, [sp, #152]
    3938:	and	w0, w0, #0xfffffffd
    393c:	ldr	x2, [sp, #192]
    3940:	orr	w1, w1, #0x3
    3944:	str	x2, [sp, #144]
    3948:	strb	w1, [sp, #152]
    394c:	str	xzr, [sp, #192]
    3950:	strb	w0, [sp, #200]
    3954:	ldp	x23, x24, [sp, #48]
    3958:	ldp	x25, x26, [sp, #64]
    395c:	b	3220 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0xd8>
    3960:	ldr	x1, [sp, #160]
    3964:	and	w0, w0, #0xfffffffd
    3968:	str	xzr, [sp, #160]
    396c:	orr	x1, x1, #0x1
    3970:	str	x1, [x21]
    3974:	strb	w0, [sp, #168]
    3978:	b	33e8 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x2a0>
    397c:	ldrb	w0, [sp, #184]
    3980:	str	x28, [sp, #176]
    3984:	and	w0, w0, #0xfffffffc
    3988:	orr	w0, w0, #0x2
    398c:	strb	w0, [sp, #184]
    3990:	b	33ac <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x264>
    3994:	mov	x0, x27
    3998:	mov	x3, #0x10                  	// #16
    399c:	mov	x2, #0x0                   	// #0
    39a0:	add	x1, x27, x3
    39a4:	stp	x4, x5, [sp, #112]
    39a8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    39ac:	ldr	w0, [x27, #8]
    39b0:	ldp	x4, x5, [sp, #112]
    39b4:	b	387c <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x734>
    39b8:	ldr	x27, [sp, #128]
    39bc:	mov	x28, #0x1                   	// #1
    39c0:	ldp	w0, w1, [x27, #8]
    39c4:	cmp	w0, w1
    39c8:	b.cs	3aa4 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x95c>  // b.hs, b.nlast
    39cc:	ldr	x1, [x27]
    39d0:	ubfiz	x0, x0, #4, #32
    39d4:	add	x2, x1, x0
    39d8:	str	xzr, [x1, x0]
    39dc:	str	x28, [x2, #8]
    39e0:	ldp	w0, w2, [x27, #8]
    39e4:	mov	w1, w0
    39e8:	add	x1, x1, #0x1
    39ec:	cmp	x1, x2
    39f0:	b.hi	3ac0 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x978>  // b.pmore
    39f4:	add	w0, w0, #0x1
    39f8:	str	w0, [x27, #8]
    39fc:	mov	x0, x20
    3a00:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    3a04:	mov	x0, x22
    3a08:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    3a0c:	b	3774 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x62c>
    3a10:	mov	x0, x27
    3a14:	mov	x3, #0x10                  	// #16
    3a18:	mov	x2, #0x0                   	// #0
    3a1c:	add	x1, x27, x3
    3a20:	str	x5, [sp, #112]
    3a24:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    3a28:	ldr	w0, [x27, #8]
    3a2c:	ldr	x5, [sp, #112]
    3a30:	b	373c <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x5f4>
    3a34:	ldr	x1, [sp, #192]
    3a38:	and	w0, w0, #0xfffffffd
    3a3c:	str	xzr, [sp, #192]
    3a40:	orr	x1, x1, #0x1
    3a44:	str	x1, [x21]
    3a48:	strb	w0, [sp, #200]
    3a4c:	mov	x0, x22
    3a50:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    3a54:	b	33e8 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x2a0>
    3a58:	mov	x1, x0
    3a5c:	ldrb	w0, [sp, #232]
    3a60:	str	x1, [sp, #224]
    3a64:	and	w0, w0, #0xfffffffc
    3a68:	orr	w0, w0, #0x2
    3a6c:	strb	w0, [sp, #232]
    3a70:	b	3834 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x6ec>
    3a74:	add	x2, sp, #0x80
    3a78:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    3a7c:	b	3508 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x3c0>
    3a80:	ldr	x2, [sp, #224]
    3a84:	and	w1, w0, #0xfffffffd
    3a88:	mov	x0, x20
    3a8c:	str	xzr, [sp, #224]
    3a90:	orr	x2, x2, #0x1
    3a94:	str	x2, [x21]
    3a98:	strb	w1, [sp, #232]
    3a9c:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    3aa0:	b	3a4c <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x904>
    3aa4:	mov	x0, x27
    3aa8:	mov	x3, #0x10                  	// #16
    3aac:	mov	x2, #0x0                   	// #0
    3ab0:	add	x1, x27, x3
    3ab4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    3ab8:	ldr	w0, [x27, #8]
    3abc:	b	39cc <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x884>
    3ac0:	adrp	x3, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    3ac4:	adrp	x1, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    3ac8:	adrp	x0, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    3acc:	add	x3, x3, #0x0
    3ad0:	add	x1, x1, #0x0
    3ad4:	add	x0, x0, #0x0
    3ad8:	mov	w2, #0x43                  	// #67
    3adc:	bl	0 <__assert_fail>
    3ae0:	adrp	x0, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    3ae4:	mov	w1, #0x1                   	// #1
    3ae8:	add	x0, x0, #0x0
    3aec:	stp	x23, x24, [sp, #48]
    3af0:	stp	x27, x28, [sp, #80]
    3af4:	bl	0 <_ZN4llvm18report_fatal_errorEPKcb>
    3af8:	adrp	x0, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    3afc:	mov	w1, #0x1                   	// #1
    3b00:	add	x0, x0, #0x0
    3b04:	bl	0 <_ZN4llvm18report_fatal_errorEPKcb>

0000000000003b08 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb>:
    3b08:	sub	sp, sp, #0x330
    3b0c:	mov	x2, #0x0                   	// #0
    3b10:	stp	x29, x30, [sp]
    3b14:	mov	x29, sp
    3b18:	stp	x19, x20, [sp, #16]
    3b1c:	add	x20, sp, #0x120
    3b20:	mov	x19, x0
    3b24:	stp	x21, x22, [sp, #32]
    3b28:	and	w21, w1, #0xff
    3b2c:	mov	w1, #0x0                   	// #0
    3b30:	stp	x23, x24, [sp, #48]
    3b34:	mov	x23, x8
    3b38:	mov	x8, x20
    3b3c:	bl	2978 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    3b40:	ldr	x1, [sp, #288]
    3b44:	ands	x1, x1, #0xfffffffffffffffe
    3b48:	b.ne	3c5c <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x154>  // b.any
    3b4c:	add	x22, sp, #0xf8
    3b50:	add	x24, sp, #0xd8
    3b54:	stp	x25, x26, [sp, #64]
    3b58:	add	x26, x24, #0x10
    3b5c:	add	x1, x20, #0x10
    3b60:	stp	x27, x28, [sp, #80]
    3b64:	add	x27, x22, #0x10
    3b68:	add	x28, sp, #0xa0
    3b6c:	mov	x0, #0x4000000000          	// #274877906944
    3b70:	mov	x25, #0x0                   	// #0
    3b74:	stp	xzr, xzr, [sp, #192]
    3b78:	str	xzr, [sp, #208]
    3b7c:	stp	x1, x0, [sp, #288]
    3b80:	mov	x0, x19
    3b84:	mov	w1, #0x2                   	// #2
    3b88:	mov	x8, x28
    3b8c:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    3b90:	ldrb	w0, [sp, #168]
    3b94:	and	w1, w0, #0x1
    3b98:	bfi	w0, w1, #1, #1
    3b9c:	strb	w0, [sp, #168]
    3ba0:	cbnz	w1, 4298 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x790>
    3ba4:	ldr	w0, [sp, #160]
    3ba8:	cmp	w0, #0x1
    3bac:	b.eq	3e88 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x380>  // b.none
    3bb0:	tst	w0, #0xfffffffd
    3bb4:	b.eq	3c88 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x180>  // b.none
    3bb8:	ldr	w1, [sp, #164]
    3bbc:	cmp	w1, #0x2
    3bc0:	b.ne	3eb8 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x3b0>  // b.any
    3bc4:	cbz	x25, 3c88 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x180>
    3bc8:	mov	x0, x19
    3bcc:	mov	x8, x22
    3bd0:	bl	3148 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv>
    3bd4:	ldr	x0, [sp, #248]
    3bd8:	ands	x0, x0, #0xfffffffffffffffe
    3bdc:	b.ne	3f14 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x40c>  // b.any
    3be0:	add	x0, x25, #0x8
    3be4:	ldr	x2, [x19, #48]
    3be8:	ldp	x1, x3, [x0, #8]
    3bec:	cmp	x1, x3
    3bf0:	b.eq	4340 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x838>  // b.none
    3bf4:	ldur	x3, [x2, #-16]
    3bf8:	stp	x3, xzr, [x1]
    3bfc:	add	x3, x1, #0x10
    3c00:	ldur	x4, [x2, #-8]
    3c04:	stp	xzr, xzr, [x2, #-16]
    3c08:	str	x4, [x1, #8]
    3c0c:	str	x3, [x0, #8]
    3c10:	ldr	x0, [x19, #48]
    3c14:	sub	x1, x0, #0x10
    3c18:	ldur	x0, [x0, #-8]
    3c1c:	str	x1, [x19, #48]
    3c20:	cbz	x0, 3c50 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x148>
    3c24:	adrp	x2, 0 <__pthread_key_create>
    3c28:	ldr	x1, [x2]
    3c2c:	cbz	x1, 42e4 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x7dc>
    3c30:	add	x3, x0, #0x8
    3c34:	ldaxr	w1, [x3]
    3c38:	sub	w4, w1, #0x1
    3c3c:	stlxr	w5, w4, [x3]
    3c40:	cbnz	w5, 3c34 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x12c>
    3c44:	cmp	w1, #0x1
    3c48:	b.eq	42f4 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x7ec>  // b.none
    3c4c:	nop
    3c50:	mov	x0, x28
    3c54:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    3c58:	b	3b80 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x78>
    3c5c:	ldrb	w0, [x23, #32]
    3c60:	str	x1, [x23]
    3c64:	orr	w0, w0, #0x3
    3c68:	strb	w0, [x23, #32]
    3c6c:	mov	x0, x23
    3c70:	ldp	x29, x30, [sp]
    3c74:	ldp	x19, x20, [sp, #16]
    3c78:	ldp	x21, x22, [sp, #32]
    3c7c:	ldp	x23, x24, [sp, #48]
    3c80:	add	sp, sp, #0x330
    3c84:	ret
    3c88:	ldrb	w0, [x23, #32]
    3c8c:	strb	wzr, [x23]
    3c90:	and	w0, w0, #0xfffffffc
    3c94:	strb	wzr, [x23, #24]
    3c98:	orr	w0, w0, #0x2
    3c9c:	strb	w0, [x23, #32]
    3ca0:	mov	x0, x28
    3ca4:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    3ca8:	ldr	x0, [sp, #288]
    3cac:	add	x8, x20, #0x10
    3cb0:	cmp	x0, x8
    3cb4:	b.eq	3cbc <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x1b4>  // b.none
    3cb8:	bl	0 <free>
    3cbc:	ldp	x19, x24, [sp, #192]
    3cc0:	cmp	x19, x24
    3cc4:	b.eq	3dd0 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x2c8>  // b.none
    3cc8:	adrp	x25, 0 <__pthread_key_create>
    3ccc:	ldr	x25, [x25]
    3cd0:	ldp	x20, x21, [x19, #64]
    3cd4:	cmp	x20, x21
    3cd8:	b.eq	3d04 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x1fc>  // b.none
    3cdc:	nop
    3ce0:	ldr	x0, [x20, #8]
    3ce4:	add	x1, x20, #0x18
    3ce8:	add	x20, x20, #0x28
    3cec:	cmp	x0, x1
    3cf0:	b.eq	3e58 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x350>  // b.none
    3cf4:	bl	0 <_ZdlPv>
    3cf8:	cmp	x20, x21
    3cfc:	b.ne	3ce0 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x1d8>  // b.any
    3d00:	ldr	x21, [x19, #64]
    3d04:	cbz	x21, 3d10 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x208>
    3d08:	mov	x0, x21
    3d0c:	bl	0 <_ZdlPv>
    3d10:	ldr	x0, [x19, #32]
    3d14:	add	x1, x19, #0x30
    3d18:	cmp	x0, x1
    3d1c:	b.eq	3d24 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x21c>  // b.none
    3d20:	bl	0 <_ZdlPv>
    3d24:	ldp	x20, x22, [x19, #8]
    3d28:	cmp	x20, x22
    3d2c:	b.eq	3db4 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x2ac>  // b.none
    3d30:	cbnz	x25, 3d44 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x23c>
    3d34:	b	3e3c <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x334>
    3d38:	add	x20, x20, #0x10
    3d3c:	cmp	x22, x20
    3d40:	b.eq	3db0 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x2a8>  // b.none
    3d44:	ldr	x21, [x20, #8]
    3d48:	cbz	x21, 3d38 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x230>
    3d4c:	add	x0, x21, #0x8
    3d50:	ldaxr	w1, [x0]
    3d54:	sub	w2, w1, #0x1
    3d58:	stlxr	w3, w2, [x0]
    3d5c:	cbnz	w3, 3d50 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x248>
    3d60:	cmp	w1, #0x1
    3d64:	b.ne	3d38 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x230>  // b.any
    3d68:	ldr	x1, [x21]
    3d6c:	mov	x0, x21
    3d70:	ldr	x1, [x1, #16]
    3d74:	blr	x1
    3d78:	add	x0, x21, #0xc
    3d7c:	ldaxr	w1, [x0]
    3d80:	sub	w2, w1, #0x1
    3d84:	stlxr	w3, w2, [x0]
    3d88:	cbnz	w3, 3d7c <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x274>
    3d8c:	cmp	w1, #0x1
    3d90:	b.ne	3d38 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x230>  // b.any
    3d94:	ldr	x1, [x21]
    3d98:	mov	x0, x21
    3d9c:	add	x20, x20, #0x10
    3da0:	ldr	x1, [x1, #24]
    3da4:	blr	x1
    3da8:	cmp	x22, x20
    3dac:	b.ne	3d44 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x23c>  // b.any
    3db0:	ldr	x22, [x19, #8]
    3db4:	cbz	x22, 3e68 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x360>
    3db8:	mov	x0, x22
    3dbc:	add	x19, x19, #0x58
    3dc0:	bl	0 <_ZdlPv>
    3dc4:	cmp	x24, x19
    3dc8:	b.ne	3cd0 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x1c8>  // b.any
    3dcc:	ldr	x24, [sp, #192]
    3dd0:	cbz	x24, 3e7c <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x374>
    3dd4:	mov	x0, x24
    3dd8:	bl	0 <_ZdlPv>
    3ddc:	mov	x0, x23
    3de0:	ldp	x29, x30, [sp]
    3de4:	ldp	x19, x20, [sp, #16]
    3de8:	ldp	x21, x22, [sp, #32]
    3dec:	ldp	x23, x24, [sp, #48]
    3df0:	ldp	x25, x26, [sp, #64]
    3df4:	ldp	x27, x28, [sp, #80]
    3df8:	add	sp, sp, #0x330
    3dfc:	ret
    3e00:	ldr	x1, [x21]
    3e04:	mov	x0, x21
    3e08:	ldr	x1, [x1, #16]
    3e0c:	blr	x1
    3e10:	ldr	w0, [x21, #12]
    3e14:	subs	w1, w0, #0x1
    3e18:	str	w1, [x21, #12]
    3e1c:	b.ne	3e30 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x328>  // b.any
    3e20:	ldr	x1, [x21]
    3e24:	mov	x0, x21
    3e28:	ldr	x1, [x1, #24]
    3e2c:	blr	x1
    3e30:	add	x20, x20, #0x10
    3e34:	cmp	x22, x20
    3e38:	b.eq	3db0 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x2a8>  // b.none
    3e3c:	ldr	x21, [x20, #8]
    3e40:	cbz	x21, 3e30 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x328>
    3e44:	ldr	w0, [x21, #8]
    3e48:	subs	w1, w0, #0x1
    3e4c:	str	w1, [x21, #8]
    3e50:	b.ne	3e30 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x328>  // b.any
    3e54:	b	3e00 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x2f8>
    3e58:	cmp	x21, x20
    3e5c:	b.ne	3ce0 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x1d8>  // b.any
    3e60:	ldr	x21, [x19, #64]
    3e64:	b	3d04 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x1fc>
    3e68:	add	x19, x19, #0x58
    3e6c:	cmp	x24, x19
    3e70:	b.ne	3cd0 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x1c8>  // b.any
    3e74:	ldr	x24, [sp, #192]
    3e78:	b	3dd0 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x2c8>
    3e7c:	ldp	x25, x26, [sp, #64]
    3e80:	ldp	x27, x28, [sp, #80]
    3e84:	b	3c6c <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x164>
    3e88:	ldr	q0, [sp, #192]
    3e8c:	strb	w0, [x23, #24]
    3e90:	ldrb	w0, [x23, #32]
    3e94:	stp	xzr, xzr, [sp, #192]
    3e98:	and	w0, w0, #0xfffffffc
    3e9c:	ldr	x1, [sp, #208]
    3ea0:	str	xzr, [sp, #208]
    3ea4:	orr	w0, w0, #0x2
    3ea8:	str	q0, [x23]
    3eac:	str	x1, [x23, #16]
    3eb0:	strb	w0, [x23, #32]
    3eb4:	b	3ca0 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x198>
    3eb8:	add	x8, sp, #0xb0
    3ebc:	mov	x0, x19
    3ec0:	mov	x2, x20
    3ec4:	mov	x3, #0x0                   	// #0
    3ec8:	str	x8, [sp, #96]
    3ecc:	str	wzr, [sp, #296]
    3ed0:	bl	14c8 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE>
    3ed4:	ldrb	w0, [sp, #184]
    3ed8:	ldr	x8, [sp, #96]
    3edc:	and	w1, w0, #0x1
    3ee0:	bfi	w0, w1, #1, #1
    3ee4:	strb	w0, [sp, #184]
    3ee8:	cbnz	w1, 43d8 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x8d0>
    3eec:	ldr	w0, [sp, #176]
    3ef0:	cmp	w0, #0x2
    3ef4:	b.eq	419c <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x694>  // b.none
    3ef8:	cmp	w0, #0x3
    3efc:	b.eq	3ff4 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x4ec>  // b.none
    3f00:	cmp	w0, #0x1
    3f04:	b.eq	3f28 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x420>  // b.none
    3f08:	mov	x0, x8
    3f0c:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    3f10:	b	3c50 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x148>
    3f14:	ldrb	w1, [x23, #32]
    3f18:	str	x0, [x23]
    3f1c:	orr	w0, w1, #0x3
    3f20:	strb	w0, [x23, #32]
    3f24:	b	3ca0 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x198>
    3f28:	ldr	w0, [sp, #296]
    3f2c:	cbz	w0, 4418 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x910>
    3f30:	ldr	x2, [sp, #288]
    3f34:	ldp	x0, x1, [sp, #192]
    3f38:	ldr	x6, [x2]
    3f3c:	mov	w4, w6
    3f40:	cmp	x0, x1
    3f44:	b.eq	3f58 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x450>  // b.none
    3f48:	ldur	w2, [x1, #-88]
    3f4c:	sub	x25, x1, #0x58
    3f50:	cmp	w6, w2
    3f54:	b.eq	3f08 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x400>  // b.none
    3f58:	sub	x2, x1, x0
    3f5c:	mov	x3, #0x8ba3                	// #35747
    3f60:	movk	x3, #0xba2e, lsl #16
    3f64:	asr	x2, x2, #3
    3f68:	movk	x3, #0xa2e8, lsl #32
    3f6c:	movk	x3, #0x2e8b, lsl #48
    3f70:	mul	x2, x2, x3
    3f74:	cbz	w2, 3fa4 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x49c>
    3f78:	sub	w2, w2, #0x1
    3f7c:	add	x3, x0, #0x58
    3f80:	mov	w7, #0x58                  	// #88
    3f84:	umaddl	x2, w2, w7, x3
    3f88:	ldr	w3, [x0]
    3f8c:	mov	x25, x0
    3f90:	cmp	w4, w3
    3f94:	b.eq	3f08 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x400>  // b.none
    3f98:	add	x0, x0, #0x58
    3f9c:	cmp	x0, x2
    3fa0:	b.ne	3f88 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x480>  // b.any
    3fa4:	ldr	x0, [sp, #208]
    3fa8:	cmp	x1, x0
    3fac:	b.eq	4434 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x92c>  // b.none
    3fb0:	movi	v0.4s, #0x0
    3fb4:	mov	x0, x1
    3fb8:	stp	xzr, xzr, [x1]
    3fbc:	mov	x2, x1
    3fc0:	add	x7, x1, #0x30
    3fc4:	stp	xzr, xzr, [x1, #48]
    3fc8:	mov	x3, x1
    3fcc:	add	x4, x1, #0x58
    3fd0:	str	q0, [x0, #8]!
    3fd4:	mov	x25, x1
    3fd8:	str	xzr, [x0, #16]
    3fdc:	stp	x7, xzr, [x1, #32]
    3fe0:	str	q0, [x2, #64]!
    3fe4:	str	xzr, [x2, #16]
    3fe8:	str	x4, [sp, #200]
    3fec:	str	w6, [x3]
    3ff0:	b	3f08 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x400>
    3ff4:	cbz	x25, 4418 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x910>
    3ff8:	cbz	w21, 3f08 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x400>
    3ffc:	ldr	w10, [sp, #296]
    4000:	stp	x26, xzr, [sp, #216]
    4004:	cmp	w10, #0x1
    4008:	strb	wzr, [sp, #232]
    400c:	b.eq	4458 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x950>  // b.none
    4010:	mov	w0, w10
    4014:	mov	w6, #0x1                   	// #1
    4018:	mov	x11, #0xf                   	// #15
    401c:	nop
    4020:	cmp	w6, w0
    4024:	mov	w4, w6
    4028:	b.cs	446c <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x964>  // b.hs, b.nlast
    402c:	ldp	x2, x1, [sp, #216]
    4030:	ldr	x3, [sp, #288]
    4034:	ldr	x0, [sp, #232]
    4038:	ldr	x9, [x3, x4, lsl #3]
    403c:	cmp	x2, x26
    4040:	add	x7, x1, #0x1
    4044:	csel	x0, x0, x11, ne  // ne = any
    4048:	cmp	x7, x0
    404c:	and	w9, w9, #0xff
    4050:	b.hi	4078 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x570>  // b.pmore
    4054:	strb	w9, [x2, x1]
    4058:	add	w6, w6, #0x1
    405c:	str	x7, [sp, #224]
    4060:	cmp	w6, w10
    4064:	ldr	x0, [sp, #216]
    4068:	strb	wzr, [x0, x7]
    406c:	b.eq	40d8 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x5d0>  // b.none
    4070:	ldr	w0, [sp, #296]
    4074:	b	4020 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x518>
    4078:	mov	x0, x24
    407c:	mov	x4, #0x1                   	// #1
    4080:	mov	x3, #0x0                   	// #0
    4084:	mov	x2, #0x0                   	// #0
    4088:	str	x1, [sp, #96]
    408c:	str	w9, [sp, #104]
    4090:	str	w6, [sp, #112]
    4094:	str	w10, [sp, #120]
    4098:	stp	x7, x8, [sp, #128]
    409c:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm>
    40a0:	ldr	w9, [sp, #104]
    40a4:	ldr	x1, [sp, #96]
    40a8:	mov	x11, #0xf                   	// #15
    40ac:	ldr	x0, [sp, #216]
    40b0:	ldp	x7, x8, [sp, #128]
    40b4:	strb	w9, [x0, x1]
    40b8:	ldr	w6, [sp, #112]
    40bc:	ldr	x0, [sp, #216]
    40c0:	str	x7, [sp, #224]
    40c4:	ldr	w10, [sp, #120]
    40c8:	add	w6, w6, #0x1
    40cc:	strb	wzr, [x0, x7]
    40d0:	cmp	w10, w6
    40d4:	b.ne	4070 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x568>  // b.any
    40d8:	ldr	w0, [sp, #296]
    40dc:	add	x3, x25, #0x40
    40e0:	cbz	w0, 446c <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x964>
    40e4:	ldp	x6, x4, [sp, #216]
    40e8:	add	x0, x22, #0x18
    40ec:	ldr	x1, [sp, #288]
    40f0:	ldr	x1, [x1]
    40f4:	str	w1, [sp, #248]
    40f8:	str	x0, [sp, #256]
    40fc:	cmn	x6, x4
    4100:	ccmp	x6, #0x0, #0x0, ne  // ne = any
    4104:	b.eq	4460 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x958>  // b.none
    4108:	str	x4, [sp, #152]
    410c:	cmp	x4, #0xf
    4110:	b.hi	43a8 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x8a0>  // b.pmore
    4114:	cmp	x4, #0x1
    4118:	b.ne	438c <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x884>  // b.any
    411c:	ldrb	w0, [x6]
    4120:	strb	w0, [sp, #272]
    4124:	ldr	x0, [sp, #152]
    4128:	str	x0, [sp, #264]
    412c:	ldr	x1, [sp, #256]
    4130:	strb	wzr, [x1, x0]
    4134:	ldp	x1, x0, [x3, #8]
    4138:	cmp	x1, x0
    413c:	b.eq	434c <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x844>  // b.none
    4140:	mov	x2, x1
    4144:	ldr	w4, [sp, #248]
    4148:	add	x0, x22, #0x18
    414c:	str	w4, [x2], #24
    4150:	str	x2, [x1, #8]
    4154:	ldr	x2, [sp, #256]
    4158:	cmp	x2, x0
    415c:	b.eq	440c <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x904>  // b.none
    4160:	str	x2, [x1, #8]
    4164:	ldr	x0, [sp, #272]
    4168:	str	x0, [x1, #24]
    416c:	ldr	x0, [x3, #8]
    4170:	ldr	x2, [sp, #264]
    4174:	str	x2, [x1, #16]
    4178:	add	x0, x0, #0x28
    417c:	str	x0, [x3, #8]
    4180:	ldr	x0, [sp, #216]
    4184:	cmp	x0, x26
    4188:	b.eq	3f08 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x400>  // b.none
    418c:	str	x8, [sp, #96]
    4190:	bl	0 <_ZdlPv>
    4194:	ldr	x8, [sp, #96]
    4198:	b	3f08 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x400>
    419c:	cbz	x25, 4418 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x910>
    41a0:	cbz	w21, 3f08 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x400>
    41a4:	ldr	w10, [sp, #296]
    41a8:	stp	x27, xzr, [sp, #248]
    41ac:	strb	wzr, [sp, #264]
    41b0:	cbz	w10, 4274 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x76c>
    41b4:	mov	w0, w10
    41b8:	mov	x6, #0x0                   	// #0
    41bc:	mov	x11, #0xf                   	// #15
    41c0:	cmp	x6, w0, uxtw
    41c4:	b.cs	446c <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x964>  // b.hs, b.nlast
    41c8:	ldp	x2, x1, [sp, #248]
    41cc:	ldr	x3, [sp, #288]
    41d0:	ldr	x0, [sp, #264]
    41d4:	ldr	x9, [x3, x6, lsl #3]
    41d8:	cmp	x2, x27
    41dc:	add	x7, x1, #0x1
    41e0:	csel	x0, x0, x11, ne  // ne = any
    41e4:	cmp	x7, x0
    41e8:	and	w9, w9, #0xff
    41ec:	b.hi	4214 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x70c>  // b.pmore
    41f0:	strb	w9, [x2, x1]
    41f4:	add	x6, x6, #0x1
    41f8:	str	x7, [sp, #256]
    41fc:	cmp	w10, w6
    4200:	ldr	x0, [sp, #248]
    4204:	strb	wzr, [x0, x7]
    4208:	b.eq	4274 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x76c>  // b.none
    420c:	ldr	w0, [sp, #296]
    4210:	b	41c0 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x6b8>
    4214:	mov	x0, x22
    4218:	mov	x4, #0x1                   	// #1
    421c:	mov	x3, #0x0                   	// #0
    4220:	mov	x2, #0x0                   	// #0
    4224:	str	x1, [sp, #96]
    4228:	str	w9, [sp, #104]
    422c:	str	w10, [sp, #112]
    4230:	stp	x6, x7, [sp, #120]
    4234:	str	x8, [sp, #136]
    4238:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm>
    423c:	ldr	x1, [sp, #96]
    4240:	mov	x11, #0xf                   	// #15
    4244:	ldr	x0, [sp, #248]
    4248:	ldr	w9, [sp, #104]
    424c:	ldp	x6, x7, [sp, #120]
    4250:	strb	w9, [x0, x1]
    4254:	str	x7, [sp, #256]
    4258:	ldr	x0, [sp, #248]
    425c:	ldr	w10, [sp, #112]
    4260:	add	x6, x6, #0x1
    4264:	strb	wzr, [x0, x7]
    4268:	cmp	w10, w6
    426c:	ldr	x8, [sp, #136]
    4270:	b.ne	420c <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x704>  // b.any
    4274:	add	x0, x25, #0x20
    4278:	mov	x1, x22
    427c:	str	x8, [sp, #96]
    4280:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_>
    4284:	ldr	x0, [sp, #248]
    4288:	ldr	x8, [sp, #96]
    428c:	cmp	x0, x27
    4290:	b.ne	4190 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x688>  // b.any
    4294:	b	3f08 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x400>
    4298:	ldrb	w2, [x23, #32]
    429c:	and	w0, w0, #0xfffffffd
    42a0:	ldr	x1, [sp, #160]
    42a4:	orr	w2, w2, #0x3
    42a8:	strb	w2, [x23, #32]
    42ac:	str	xzr, [sp, #160]
    42b0:	ands	x1, x1, #0xfffffffffffffffe
    42b4:	strb	w0, [sp, #168]
    42b8:	b.ne	42dc <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x7d4>  // b.any
    42bc:	adrp	x3, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    42c0:	adrp	x1, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    42c4:	adrp	x0, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    42c8:	add	x3, x3, #0x0
    42cc:	add	x1, x1, #0x0
    42d0:	add	x0, x0, #0x0
    42d4:	mov	w2, #0x1ce                 	// #462
    42d8:	bl	0 <__assert_fail>
    42dc:	str	x1, [x23]
    42e0:	b	3ca0 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x198>
    42e4:	ldr	w1, [x0, #8]
    42e8:	sub	w3, w1, #0x1
    42ec:	str	w3, [x0, #8]
    42f0:	b	3c44 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x13c>
    42f4:	ldr	x1, [x0]
    42f8:	str	x0, [sp, #96]
    42fc:	ldr	x1, [x1, #16]
    4300:	blr	x1
    4304:	adrp	x2, 0 <__pthread_key_create>
    4308:	ldr	x0, [sp, #96]
    430c:	ldr	x2, [x2]
    4310:	cbz	x2, 437c <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x874>
    4314:	add	x2, x0, #0xc
    4318:	ldaxr	w1, [x2]
    431c:	sub	w3, w1, #0x1
    4320:	stlxr	w4, w3, [x2]
    4324:	cbnz	w4, 4318 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x810>
    4328:	cmp	w1, #0x1
    432c:	b.ne	3c50 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x148>  // b.any
    4330:	ldr	x1, [x0]
    4334:	ldr	x1, [x1, #24]
    4338:	blr	x1
    433c:	b	3c50 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x148>
    4340:	sub	x2, x2, #0x10
    4344:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    4348:	b	3c10 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x108>
    434c:	mov	x0, x3
    4350:	mov	x2, x22
    4354:	str	x8, [sp, #96]
    4358:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    435c:	ldr	x0, [sp, #256]
    4360:	add	x1, x22, #0x18
    4364:	ldr	x8, [sp, #96]
    4368:	cmp	x0, x1
    436c:	b.eq	4180 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x678>  // b.none
    4370:	bl	0 <_ZdlPv>
    4374:	ldr	x8, [sp, #96]
    4378:	b	4180 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x678>
    437c:	ldr	w1, [x0, #12]
    4380:	sub	w2, w1, #0x1
    4384:	str	w2, [x0, #12]
    4388:	b	4328 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x820>
    438c:	cbz	x4, 4124 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x61c>
    4390:	mov	x2, x4
    4394:	mov	x1, x6
    4398:	stp	x3, x8, [sp, #96]
    439c:	bl	0 <memcpy>
    43a0:	ldp	x3, x8, [sp, #96]
    43a4:	b	4124 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x61c>
    43a8:	add	x1, sp, #0x98
    43ac:	add	x0, x22, #0x8
    43b0:	mov	x2, #0x0                   	// #0
    43b4:	stp	x6, x4, [sp, #96]
    43b8:	stp	x3, x8, [sp, #112]
    43bc:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
    43c0:	ldr	x1, [sp, #152]
    43c4:	str	x0, [sp, #256]
    43c8:	str	x1, [sp, #272]
    43cc:	ldp	x6, x4, [sp, #96]
    43d0:	ldp	x3, x8, [sp, #112]
    43d4:	b	4390 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x888>
    43d8:	ldrb	w2, [x23, #32]
    43dc:	and	w0, w0, #0xfffffffd
    43e0:	ldr	x1, [sp, #176]
    43e4:	orr	w2, w2, #0x3
    43e8:	strb	w2, [x23, #32]
    43ec:	str	xzr, [sp, #176]
    43f0:	ands	x1, x1, #0xfffffffffffffffe
    43f4:	strb	w0, [sp, #184]
    43f8:	b.eq	42bc <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x7b4>  // b.none
    43fc:	str	x1, [x23]
    4400:	mov	x0, x8
    4404:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    4408:	b	3ca0 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x198>
    440c:	ldp	x6, x7, [sp, #272]
    4410:	stp	x6, x7, [x1, #24]
    4414:	b	416c <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x664>
    4418:	ldrb	w0, [x23, #32]
    441c:	strb	wzr, [x23]
    4420:	and	w0, w0, #0xfffffffc
    4424:	strb	wzr, [x23, #24]
    4428:	orr	w0, w0, #0x2
    442c:	strb	w0, [x23, #32]
    4430:	b	4400 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x8f8>
    4434:	add	x0, sp, #0xc0
    4438:	stp	x6, x8, [sp, #96]
    443c:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    4440:	ldr	x4, [sp, #200]
    4444:	ldp	x6, x8, [sp, #96]
    4448:	sub	x3, x4, #0x58
    444c:	mov	x25, x3
    4450:	str	w6, [x3]
    4454:	b	3f08 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x400>
    4458:	add	x3, x25, #0x40
    445c:	b	40e4 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x5dc>
    4460:	adrp	x0, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    4464:	add	x0, x0, #0x0
    4468:	bl	0 <_ZSt19__throw_logic_errorPKc>
    446c:	adrp	x3, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    4470:	adrp	x1, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    4474:	adrp	x0, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    4478:	add	x3, x3, #0x0
    447c:	add	x1, x1, #0x0
    4480:	add	x0, x0, #0x0
    4484:	mov	w2, #0x95                  	// #149
    4488:	bl	0 <__assert_fail>

Disassembly of section .text._ZNSt23_Sp_counted_ptr_inplaceIN4llvm13BitCodeAbbrevESaIS1_ELN9__gnu_cxx12_Lock_policyE2EED2Ev:

0000000000000000 <_ZNSt23_Sp_counted_ptr_inplaceIN4llvm13BitCodeAbbrevESaIS1_ELN9__gnu_cxx12_Lock_policyE2EED1Ev>:
   0:	ret

Disassembly of section .text._ZNSt23_Sp_counted_ptr_inplaceIN4llvm13BitCodeAbbrevESaIS1_ELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv:

0000000000000000 <_ZNSt23_Sp_counted_ptr_inplaceIN4llvm13BitCodeAbbrevESaIS1_ELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv>:
   0:	add	x1, x0, #0x20
   4:	ldr	x0, [x0, #16]
   8:	cmp	x0, x1
   c:	b.eq	14 <_ZNSt23_Sp_counted_ptr_inplaceIN4llvm13BitCodeAbbrevESaIS1_ELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv+0x14>  // b.none
  10:	b	0 <free>
  14:	ret

Disassembly of section .text._ZNSt23_Sp_counted_ptr_inplaceIN4llvm13BitCodeAbbrevESaIS1_ELN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv:

0000000000000000 <_ZNSt23_Sp_counted_ptr_inplaceIN4llvm13BitCodeAbbrevESaIS1_ELN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv>:
   0:	b	0 <_ZdlPv>

Disassembly of section .text._ZNSt23_Sp_counted_ptr_inplaceIN4llvm13BitCodeAbbrevESaIS1_ELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info:

0000000000000000 <_ZNSt23_Sp_counted_ptr_inplaceIN4llvm13BitCodeAbbrevESaIS1_ELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	adrp	x2, 0 <_ZNSt23_Sp_counted_ptr_inplaceIN4llvm13BitCodeAbbrevESaIS1_ELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info>
   8:	mov	x29, sp
   c:	ldr	x2, [x2]
  10:	str	x19, [sp, #16]
  14:	add	x19, x0, #0x10
  18:	cmp	x1, x2
  1c:	b.eq	30 <_ZNSt23_Sp_counted_ptr_inplaceIN4llvm13BitCodeAbbrevESaIS1_ELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info+0x30>  // b.none
  20:	mov	x0, x1
  24:	bl	0 <_ZNSt19_Sp_make_shared_tag5_S_eqERKSt9type_info>
  28:	tst	w0, #0xff
  2c:	csel	x19, x19, xzr, ne  // ne = any
  30:	mov	x0, x19
  34:	ldr	x19, [sp, #16]
  38:	ldp	x29, x30, [sp], #32
  3c:	ret

Disassembly of section .text._ZNSt23_Sp_counted_ptr_inplaceIN4llvm13BitCodeAbbrevESaIS1_ELN9__gnu_cxx12_Lock_policyE2EED0Ev:

0000000000000000 <_ZNSt23_Sp_counted_ptr_inplaceIN4llvm13BitCodeAbbrevESaIS1_ELN9__gnu_cxx12_Lock_policyE2EED0Ev>:
   0:	mov	x1, #0x220                 	// #544
   4:	b	0 <_ZdlPvm>

Disassembly of section .text._ZNK4llvm13format_objectIJmjEE7snprintEPcj:

0000000000000000 <_ZNK4llvm13format_objectIJmjEE7snprintEPcj>:
   0:	mov	x3, x0
   4:	mov	x0, x1
   8:	mov	w1, w2
   c:	ldr	w4, [x3, #16]
  10:	ldr	x2, [x3, #8]
  14:	ldr	x3, [x3, #24]
  18:	b	0 <snprintf>

Disassembly of section .text._ZNK4llvm13format_objectIJjjEE7snprintEPcj:

0000000000000000 <_ZNK4llvm13format_objectIJjjEE7snprintEPcj>:
   0:	mov	x3, x0
   4:	mov	x0, x1
   8:	mov	w1, w2
   c:	ldr	w4, [x3, #16]
  10:	ldr	x2, [x3, #8]
  14:	ldr	w3, [x3, #20]
  18:	b	0 <snprintf>

Disassembly of section .text._ZNK4llvm13format_objectIJmmEE7snprintEPcj:

0000000000000000 <_ZNK4llvm13format_objectIJmmEE7snprintEPcj>:
   0:	mov	x3, x0
   4:	mov	x0, x1
   8:	mov	w1, w2
   c:	ldp	x2, x4, [x3, #8]
  10:	ldr	x3, [x3, #24]
  14:	b	0 <snprintf>

Disassembly of section .text._ZN4llvm11raw_ostreamlsEPKc:

0000000000000000 <_ZN4llvm11raw_ostreamlsEPKc>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	cbz	x1, 58 <_ZN4llvm11raw_ostreamlsEPKc+0x58>
  14:	mov	x20, x1
  18:	mov	x0, x1
  1c:	str	x21, [sp, #32]
  20:	bl	0 <strlen>
  24:	mov	x21, x0
  28:	ldp	x1, x0, [x19, #16]
  2c:	sub	x1, x1, x0
  30:	cmp	x21, x1
  34:	b.hi	68 <_ZN4llvm11raw_ostreamlsEPKc+0x68>  // b.pmore
  38:	cbz	x21, 84 <_ZN4llvm11raw_ostreamlsEPKc+0x84>
  3c:	mov	x2, x21
  40:	mov	x1, x20
  44:	bl	0 <memcpy>
  48:	ldr	x0, [x19, #24]
  4c:	add	x0, x0, x21
  50:	ldr	x21, [sp, #32]
  54:	str	x0, [x19, #24]
  58:	mov	x0, x19
  5c:	ldp	x19, x20, [sp, #16]
  60:	ldp	x29, x30, [sp], #48
  64:	ret
  68:	mov	x2, x21
  6c:	mov	x1, x20
  70:	mov	x0, x19
  74:	ldp	x19, x20, [sp, #16]
  78:	ldr	x21, [sp, #32]
  7c:	ldp	x29, x30, [sp], #48
  80:	b	0 <_ZN4llvm11raw_ostream5writeEPKcm>
  84:	mov	x0, x19
  88:	ldp	x19, x20, [sp, #16]
  8c:	ldr	x21, [sp, #32]
  90:	ldp	x29, x30, [sp], #48
  94:	ret

Disassembly of section .text._ZN4llvm21SimpleBitstreamCursor4ReadEj:

0000000000000000 <_ZN4llvm21SimpleBitstreamCursor4ReadEj>:
   0:	stp	x29, x30, [sp, #-224]!
   4:	sub	w2, w1, #0x1
   8:	cmp	w2, #0x3f
   c:	mov	x29, sp
  10:	stp	x19, x20, [sp, #16]
  14:	stp	x21, x22, [sp, #32]
  18:	stp	x23, x24, [sp, #48]
  1c:	stp	x25, x26, [sp, #64]
  20:	b.hi	3b8 <_ZN4llvm21SimpleBitstreamCursor4ReadEj+0x3b8>  // b.pmore
  24:	ldr	w21, [x0, #32]
  28:	mov	w24, w1
  2c:	mov	x25, x8
  30:	mov	x19, x0
  34:	cmp	w21, w1
  38:	b.cs	e8 <_ZN4llvm21SimpleBitstreamCursor4ReadEj+0xe8>  // b.hs, b.nlast
  3c:	mov	x22, #0x0                   	// #0
  40:	cbz	w21, 48 <_ZN4llvm21SimpleBitstreamCursor4ReadEj+0x48>
  44:	ldr	x22, [x0, #24]
  48:	ldp	x20, x23, [x19, #8]
  4c:	cmp	x23, x20
  50:	b.cs	17c <_ZN4llvm21SimpleBitstreamCursor4ReadEj+0x17c>  // b.hs, b.nlast
  54:	ldr	x1, [x19]
  58:	add	x0, x23, #0x8
  5c:	cmp	x20, x0
  60:	add	x4, x1, x23
  64:	b.cc	13c <_ZN4llvm21SimpleBitstreamCursor4ReadEj+0x13c>  // b.lo, b.ul, b.last
  68:	ldr	x1, [x1, x23]
  6c:	mov	w20, #0x40                  	// #64
  70:	str	x1, [x19, #24]
  74:	str	x0, [x19, #16]
  78:	str	w20, [x19, #32]
  7c:	sub	w23, w24, w21
  80:	cmp	w23, w20
  84:	b.hi	294 <_ZN4llvm21SimpleBitstreamCursor4ReadEj+0x294>  // b.pmore
  88:	ldr	x1, [x19, #24]
  8c:	sub	w24, w21, w24
  90:	add	w20, w20, w24
  94:	add	w24, w24, #0x40
  98:	str	w20, [x19, #32]
  9c:	mov	x0, #0xffffffffffffffff    	// #-1
  a0:	lsr	x2, x1, x23
  a4:	str	x2, [x19, #24]
  a8:	lsr	x0, x0, x24
  ac:	and	x0, x0, x1
  b0:	ldrb	w1, [x25, #8]
  b4:	lsl	x21, x0, x21
  b8:	orr	x22, x21, x22
  bc:	and	w0, w1, #0xfffffffc
  c0:	str	x22, [x25]
  c4:	orr	w0, w0, #0x2
  c8:	strb	w0, [x25, #8]
  cc:	mov	x0, x25
  d0:	ldp	x19, x20, [sp, #16]
  d4:	ldp	x21, x22, [sp, #32]
  d8:	ldp	x23, x24, [sp, #48]
  dc:	ldp	x25, x26, [sp, #64]
  e0:	ldp	x29, x30, [sp], #224
  e4:	ret
  e8:	ldr	x2, [x19, #24]
  ec:	sub	w21, w21, w1
  f0:	neg	w1, w1
  f4:	str	w21, [x19, #32]
  f8:	mov	x0, #0xffffffffffffffff    	// #-1
  fc:	lsr	x24, x2, x24
 100:	str	x24, [x19, #24]
 104:	lsr	x1, x0, x1
 108:	and	x1, x1, x2
 10c:	ldrb	w0, [x8, #8]
 110:	str	x1, [x8]
 114:	and	w0, w0, #0xfffffffc
 118:	orr	w0, w0, #0x2
 11c:	strb	w0, [x8, #8]
 120:	mov	x0, x25
 124:	ldp	x19, x20, [sp, #16]
 128:	ldp	x21, x22, [sp, #32]
 12c:	ldp	x23, x24, [sp, #48]
 130:	ldp	x25, x26, [sp, #64]
 134:	ldp	x29, x30, [sp], #224
 138:	ret
 13c:	str	xzr, [x19, #24]
 140:	subs	w20, w20, w23
 144:	b.eq	3ac <_ZN4llvm21SimpleBitstreamCursor4ReadEj+0x3ac>  // b.none
 148:	mov	x0, #0x0                   	// #0
 14c:	mov	x3, #0x0                   	// #0
 150:	ldrb	w2, [x4, x0]
 154:	lsl	w1, w0, #3
 158:	add	x0, x0, #0x1
 15c:	cmp	w20, w0
 160:	lsl	x2, x2, x1
 164:	orr	x3, x3, x2
 168:	str	x3, [x19, #24]
 16c:	b.ne	150 <_ZN4llvm21SimpleBitstreamCursor4ReadEj+0x150>  // b.any
 170:	add	x0, x23, w20, uxtw
 174:	lsl	w20, w20, #3
 178:	b	74 <_ZN4llvm21SimpleBitstreamCursor4ReadEj+0x74>
 17c:	stp	x27, x28, [sp, #80]
 180:	bl	0 <_ZNSt3_V216generic_categoryEv>
 184:	adrp	x2, 0 <_ZTVN4llvm18raw_string_ostreamE>
 188:	adrp	x3, 0 <_ZN4llvm21SimpleBitstreamCursor4ReadEj>
 18c:	add	x26, sp, #0x70
 190:	ldr	x2, [x2]
 194:	add	x7, x26, #0x10
 198:	ldr	x3, [x3]
 19c:	add	x2, x2, #0x10
 1a0:	adrp	x5, 0 <_ZN4llvm21SimpleBitstreamCursor4ReadEj>
 1a4:	add	x5, x5, #0x0
 1a8:	add	x3, x3, #0x10
 1ac:	mov	w6, #0x1                   	// #1
 1b0:	add	x27, sp, #0x90
 1b4:	add	x28, sp, #0xb0
 1b8:	mov	x1, x27
 1bc:	stp	x0, x7, [sp, #104]
 1c0:	mov	x0, x28
 1c4:	str	xzr, [sp, #120]
 1c8:	strb	wzr, [sp, #128]
 1cc:	stp	x3, x5, [sp, #144]
 1d0:	stp	x20, x23, [sp, #160]
 1d4:	stp	x2, xzr, [sp, #176]
 1d8:	stp	xzr, xzr, [sp, #192]
 1dc:	str	w6, [sp, #208]
 1e0:	str	x26, [sp, #216]
 1e4:	bl	0 <_ZN4llvm11raw_ostreamlsERKNS_18format_object_baseE>
 1e8:	ldr	x0, [sp, #184]
 1ec:	ldr	x1, [sp, #200]
 1f0:	cmp	x1, x0
 1f4:	b.eq	200 <_ZN4llvm21SimpleBitstreamCursor4ReadEj+0x200>  // b.none
 1f8:	mov	x0, x28
 1fc:	bl	0 <_ZN4llvm11raw_ostream14flush_nonemptyEv>
 200:	ldr	x2, [sp, #216]
 204:	mov	w1, #0x104                 	// #260
 208:	mov	x0, #0x5                   	// #5
 20c:	mov	x20, #0x0                   	// #0
 210:	bfxil	x20, x0, #0, #32
 214:	mov	x0, #0x40                  	// #64
 218:	stp	x2, xzr, [sp, #144]
 21c:	add	x26, x26, #0x10
 220:	strh	w1, [sp, #160]
 224:	bl	0 <_Znwm>
 228:	ldr	x3, [sp, #104]
 22c:	mov	x2, x20
 230:	mov	x1, x27
 234:	orr	x20, x0, #0x1
 238:	bl	0 <_ZN4llvm11StringErrorC1ERKNS_5TwineESt10error_code>
 23c:	str	x20, [sp, #144]
 240:	mov	x0, x28
 244:	bl	0 <_ZN4llvm18raw_string_ostreamD1Ev>
 248:	ldr	x0, [sp, #112]
 24c:	cmp	x0, x26
 250:	b.eq	258 <_ZN4llvm21SimpleBitstreamCursor4ReadEj+0x258>  // b.none
 254:	bl	0 <_ZdlPv>
 258:	ldr	x0, [sp, #144]
 25c:	ands	x0, x0, #0xfffffffffffffffe
 260:	b.eq	3dc <_ZN4llvm21SimpleBitstreamCursor4ReadEj+0x3dc>  // b.none
 264:	ldrb	w1, [x25, #8]
 268:	str	x0, [x25]
 26c:	orr	w0, w1, #0x3
 270:	strb	w0, [x25, #8]
 274:	mov	x0, x25
 278:	ldp	x19, x20, [sp, #16]
 27c:	ldp	x21, x22, [sp, #32]
 280:	ldp	x23, x24, [sp, #48]
 284:	ldp	x25, x26, [sp, #64]
 288:	ldp	x27, x28, [sp, #80]
 28c:	ldp	x29, x30, [sp], #224
 290:	ret
 294:	stp	x27, x28, [sp, #80]
 298:	bl	0 <_ZNSt3_V216generic_categoryEv>
 29c:	adrp	x2, 0 <_ZTVN4llvm18raw_string_ostreamE>
 2a0:	adrp	x3, 0 <_ZN4llvm21SimpleBitstreamCursor4ReadEj>
 2a4:	add	x27, sp, #0x90
 2a8:	ldr	x2, [x2]
 2ac:	add	x7, x27, #0x10
 2b0:	ldr	x3, [x3]
 2b4:	add	x2, x2, #0x10
 2b8:	adrp	x5, 0 <_ZN4llvm21SimpleBitstreamCursor4ReadEj>
 2bc:	add	x5, x5, #0x0
 2c0:	add	x3, x3, #0x10
 2c4:	mov	w6, #0x1                   	// #1
 2c8:	add	x26, sp, #0x70
 2cc:	add	x28, sp, #0xb0
 2d0:	mov	x1, x26
 2d4:	mov	x21, x0
 2d8:	mov	x0, x28
 2dc:	stp	x3, x5, [sp, #112]
 2e0:	stp	w23, w20, [sp, #128]
 2e4:	stp	x7, xzr, [sp, #144]
 2e8:	strb	wzr, [sp, #160]
 2ec:	stp	x2, xzr, [sp, #176]
 2f0:	stp	xzr, xzr, [sp, #192]
 2f4:	str	w6, [sp, #208]
 2f8:	str	x27, [sp, #216]
 2fc:	bl	0 <_ZN4llvm11raw_ostreamlsERKNS_18format_object_baseE>
 300:	ldr	x0, [sp, #184]
 304:	ldr	x1, [sp, #200]
 308:	cmp	x1, x0
 30c:	b.eq	318 <_ZN4llvm21SimpleBitstreamCursor4ReadEj+0x318>  // b.none
 310:	mov	x0, x28
 314:	bl	0 <_ZN4llvm11raw_ostream14flush_nonemptyEv>
 318:	ldr	x2, [sp, #216]
 31c:	mov	w1, #0x104                 	// #260
 320:	mov	x0, #0x5                   	// #5
 324:	mov	x20, #0x0                   	// #0
 328:	bfxil	x20, x0, #0, #32
 32c:	mov	x0, #0x40                  	// #64
 330:	stp	x2, xzr, [sp, #112]
 334:	add	x27, x27, #0x10
 338:	strh	w1, [sp, #128]
 33c:	bl	0 <_Znwm>
 340:	mov	x2, x20
 344:	mov	x3, x21
 348:	mov	x1, x26
 34c:	mov	x19, x0
 350:	bl	0 <_ZN4llvm11StringErrorC1ERKNS_5TwineESt10error_code>
 354:	and	x19, x19, #0xfffffffffffffffe
 358:	mov	x0, x28
 35c:	bl	0 <_ZN4llvm18raw_string_ostreamD1Ev>
 360:	ldr	x0, [sp, #144]
 364:	cmp	x0, x27
 368:	b.eq	370 <_ZN4llvm21SimpleBitstreamCursor4ReadEj+0x370>  // b.none
 36c:	bl	0 <_ZdlPv>
 370:	ldrb	w0, [x25, #8]
 374:	orr	w0, w0, #0x3
 378:	strb	w0, [x25, #8]
 37c:	cbnz	x19, 3a0 <_ZN4llvm21SimpleBitstreamCursor4ReadEj+0x3a0>
 380:	adrp	x3, 0 <_ZN4llvm21SimpleBitstreamCursor4ReadEj>
 384:	adrp	x1, 0 <_ZN4llvm21SimpleBitstreamCursor4ReadEj>
 388:	adrp	x0, 0 <_ZN4llvm21SimpleBitstreamCursor4ReadEj>
 38c:	add	x3, x3, #0x0
 390:	add	x1, x1, #0x0
 394:	add	x0, x0, #0x0
 398:	mov	w2, #0x1ce                 	// #462
 39c:	bl	0 <__assert_fail>
 3a0:	ldp	x27, x28, [sp, #80]
 3a4:	str	x19, [x25]
 3a8:	b	120 <_ZN4llvm21SimpleBitstreamCursor4ReadEj+0x120>
 3ac:	mov	x0, x23
 3b0:	mov	w20, #0x0                   	// #0
 3b4:	b	74 <_ZN4llvm21SimpleBitstreamCursor4ReadEj+0x74>
 3b8:	adrp	x3, 0 <_ZN4llvm21SimpleBitstreamCursor4ReadEj>
 3bc:	adrp	x1, 0 <_ZN4llvm21SimpleBitstreamCursor4ReadEj>
 3c0:	adrp	x0, 0 <_ZN4llvm21SimpleBitstreamCursor4ReadEj>
 3c4:	add	x3, x3, #0x0
 3c8:	add	x1, x1, #0x0
 3cc:	add	x0, x0, #0x0
 3d0:	mov	w2, #0xc0                  	// #192
 3d4:	stp	x27, x28, [sp, #80]
 3d8:	bl	0 <__assert_fail>
 3dc:	ldr	w20, [x19, #32]
 3e0:	ldp	x27, x28, [sp, #80]
 3e4:	b	7c <_ZN4llvm21SimpleBitstreamCursor4ReadEj+0x7c>

Disassembly of section .text._ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_:

0000000000000000 <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_>:
   0:	stp	x29, x30, [sp, #-128]!
   4:	mov	x2, #0x8ba3                	// #35747
   8:	movk	x2, #0xba2e, lsl #16
   c:	mov	x29, sp
  10:	stp	x21, x22, [sp, #32]
  14:	movk	x2, #0xa2e8, lsl #32
  18:	movk	x2, #0x2e8b, lsl #48
  1c:	stp	x25, x26, [sp, #64]
  20:	mov	x21, x1
  24:	mov	x1, #0x745d                	// #29789
  28:	ldp	x25, x22, [x0]
  2c:	str	x0, [sp, #120]
  30:	movk	x1, #0x45d1, lsl #16
  34:	stp	x19, x20, [sp, #16]
  38:	movk	x1, #0x5d17, lsl #32
  3c:	stp	x23, x24, [sp, #48]
  40:	movk	x1, #0x174, lsl #48
  44:	sub	x0, x22, x25
  48:	asr	x0, x0, #3
  4c:	mul	x0, x0, x2
  50:	cmp	x0, x1
  54:	b.eq	3e0 <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x3e0>  // b.none
  58:	sub	x20, x21, x25
  5c:	cbz	x0, 3c4 <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x3c4>
  60:	cmp	x0, x0, lsl #1
  64:	mov	x26, #0x7ffffffffffffff8    	// #9223372036854775800
  68:	lsl	x0, x0, #1
  6c:	b.ls	3b0 <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x3b0>  // b.plast
  70:	mov	x0, x26
  74:	bl	0 <_Znwm>
  78:	mov	x24, x0
  7c:	add	x0, x0, x26
  80:	add	x19, x24, #0x58
  84:	str	x0, [sp, #112]
  88:	add	x0, x24, x20
  8c:	cmp	x21, x25
  90:	movi	v0.4s, #0x0
  94:	mov	x1, x0
  98:	mov	x2, x0
  9c:	add	x3, x0, #0x30
  a0:	stp	xzr, xzr, [x0]
  a4:	stp	xzr, xzr, [x0, #48]
  a8:	str	q0, [x1, #8]!
  ac:	str	xzr, [x1, #16]
  b0:	stp	x3, xzr, [x0, #32]
  b4:	str	q0, [x2, #64]!
  b8:	str	xzr, [x2, #16]
  bc:	b.eq	224 <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x224>  // b.none
  c0:	stp	x27, x28, [sp, #80]
  c4:	adrp	x28, 0 <__pthread_key_create>
  c8:	mov	x20, x24
  cc:	ldr	x28, [x28]
  d0:	mov	x19, x25
  d4:	str	q0, [sp, #96]
  d8:	ldr	w2, [x19]
  dc:	str	w2, [x20]
  e0:	add	x1, x20, #0x30
  e4:	add	x0, x19, #0x30
  e8:	ldur	q0, [x19, #8]
  ec:	stur	q0, [x20, #8]
  f0:	ldr	q0, [sp, #96]
  f4:	ldr	x2, [x19, #24]
  f8:	str	x2, [x20, #24]
  fc:	str	xzr, [x19, #24]
 100:	stur	q0, [x19, #8]
 104:	str	x1, [x20, #32]
 108:	ldr	x1, [x19, #32]
 10c:	cmp	x1, x0
 110:	b.eq	3a4 <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x3a4>  // b.none
 114:	str	x1, [x20, #32]
 118:	ldr	x0, [x19, #48]
 11c:	str	x0, [x20, #48]
 120:	ldr	q0, [x19, #64]
 124:	ldp	x27, x26, [x19, #8]
 128:	ldr	x2, [x19, #40]
 12c:	str	q0, [x20, #64]
 130:	ldr	x0, [x19, #80]
 134:	str	x2, [x20, #40]
 138:	str	x0, [x20, #80]
 13c:	cmp	x27, x26
 140:	b.eq	1cc <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x1cc>  // b.none
 144:	cbnz	x28, 158 <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x158>
 148:	b	344 <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x344>
 14c:	add	x27, x27, #0x10
 150:	cmp	x26, x27
 154:	b.eq	1c8 <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x1c8>  // b.none
 158:	ldr	x23, [x27, #8]
 15c:	cbz	x23, 14c <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x14c>
 160:	add	x2, x23, #0x8
 164:	ldaxr	w3, [x2]
 168:	sub	w0, w3, #0x1
 16c:	stlxr	w1, w0, [x2]
 170:	cbnz	w1, 164 <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x164>
 174:	cmp	w3, #0x1
 178:	b.ne	14c <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x14c>  // b.any
 17c:	ldr	x2, [x23]
 180:	mov	x0, x23
 184:	ldr	x2, [x2, #16]
 188:	blr	x2
 18c:	add	x2, x23, #0xc
 190:	ldaxr	w3, [x2]
 194:	sub	w0, w3, #0x1
 198:	stlxr	w1, w0, [x2]
 19c:	cbnz	w1, 190 <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x190>
 1a0:	cmp	w3, #0x1
 1a4:	b.ne	14c <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x14c>  // b.any
 1a8:	ldr	x2, [x23]
 1ac:	mov	x0, x23
 1b0:	add	x27, x27, #0x10
 1b4:	ldr	x2, [x2, #24]
 1b8:	blr	x2
 1bc:	cmp	x26, x27
 1c0:	b.ne	158 <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x158>  // b.any
 1c4:	nop
 1c8:	ldr	x26, [x19, #8]
 1cc:	cbz	x26, 360 <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x360>
 1d0:	mov	x0, x26
 1d4:	add	x19, x19, #0x58
 1d8:	bl	0 <_ZdlPv>
 1dc:	add	x20, x20, #0x58
 1e0:	cmp	x21, x19
 1e4:	b.ne	d8 <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0xd8>  // b.any
 1e8:	sub	x0, x21, #0x58
 1ec:	mov	x1, #0x8ba3                	// #35747
 1f0:	sub	x0, x0, x25
 1f4:	movk	x1, #0xba2e, lsl #16
 1f8:	movk	x1, #0xa2e8, lsl #32
 1fc:	lsr	x0, x0, #3
 200:	movk	x1, #0xe8b, lsl #48
 204:	ldp	x27, x28, [sp, #80]
 208:	mul	x0, x0, x1
 20c:	and	x0, x0, #0x1fffffffffffffff
 210:	add	x0, x0, #0x2
 214:	add	x19, x0, x0, lsl #1
 218:	lsl	x19, x19, #2
 21c:	sub	x0, x19, x0
 220:	add	x19, x24, x0, lsl #3
 224:	cmp	x21, x22
 228:	b.eq	2d4 <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x2d4>  // b.none
 22c:	movi	v1.4s, #0x0
 230:	mov	x2, x21
 234:	mov	x3, x19
 238:	ldur	q0, [x2, #8]
 23c:	add	x1, x3, #0x30
 240:	ldr	w4, [x2]
 244:	add	x0, x2, #0x30
 248:	str	w4, [x3]
 24c:	ldr	x5, [x2, #24]
 250:	stp	x5, x1, [x3, #24]
 254:	ldr	x4, [x2, #32]
 258:	str	xzr, [x2, #24]
 25c:	stur	q0, [x3, #8]
 260:	cmp	x4, x0
 264:	stur	q1, [x2, #8]
 268:	ldr	q0, [x2, #64]
 26c:	b.eq	374 <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x374>  // b.none
 270:	ldr	x0, [x2, #40]
 274:	stp	x4, x0, [x3, #32]
 278:	add	x2, x2, #0x58
 27c:	ldur	x0, [x2, #-40]
 280:	str	x0, [x3, #48]
 284:	ldur	x0, [x2, #-8]
 288:	str	x0, [x3, #80]
 28c:	str	q0, [x3, #64]
 290:	cmp	x2, x22
 294:	add	x3, x3, #0x58
 298:	b.ne	238 <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x238>  // b.any
 29c:	sub	x0, x22, x21
 2a0:	mov	x1, #0x8ba3                	// #35747
 2a4:	sub	x0, x0, #0x58
 2a8:	movk	x1, #0xba2e, lsl #16
 2ac:	movk	x1, #0xa2e8, lsl #32
 2b0:	lsr	x0, x0, #3
 2b4:	movk	x1, #0xe8b, lsl #48
 2b8:	mul	x0, x0, x1
 2bc:	and	x0, x0, #0x1fffffffffffffff
 2c0:	add	x0, x0, #0x1
 2c4:	add	x1, x0, x0, lsl #1
 2c8:	lsl	x1, x1, #2
 2cc:	sub	x0, x1, x0
 2d0:	add	x19, x19, x0, lsl #3
 2d4:	cbz	x25, 2e0 <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x2e0>
 2d8:	mov	x0, x25
 2dc:	bl	0 <_ZdlPv>
 2e0:	ldp	x1, x0, [sp, #112]
 2e4:	ldp	x21, x22, [sp, #32]
 2e8:	ldp	x25, x26, [sp, #64]
 2ec:	stp	x24, x19, [x0]
 2f0:	str	x1, [x0, #16]
 2f4:	ldp	x19, x20, [sp, #16]
 2f8:	ldp	x23, x24, [sp, #48]
 2fc:	ldp	x29, x30, [sp], #128
 300:	ret
 304:	ldr	x2, [x23]
 308:	mov	x0, x23
 30c:	ldr	x2, [x2, #16]
 310:	blr	x2
 314:	ldr	w2, [x23, #12]
 318:	subs	w3, w2, #0x1
 31c:	str	w3, [x23, #12]
 320:	b.ne	338 <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x338>  // b.any
 324:	ldr	x2, [x23]
 328:	mov	x0, x23
 32c:	ldr	x2, [x2, #24]
 330:	blr	x2
 334:	nop
 338:	add	x27, x27, #0x10
 33c:	cmp	x27, x26
 340:	b.eq	1c8 <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x1c8>  // b.none
 344:	ldr	x23, [x27, #8]
 348:	cbz	x23, 338 <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x338>
 34c:	ldr	w2, [x23, #8]
 350:	subs	w3, w2, #0x1
 354:	str	w3, [x23, #8]
 358:	b.ne	338 <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x338>  // b.any
 35c:	b	304 <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x304>
 360:	add	x19, x19, #0x58
 364:	add	x20, x20, #0x58
 368:	cmp	x21, x19
 36c:	b.ne	d8 <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0xd8>  // b.any
 370:	b	1e8 <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x1e8>
 374:	ldr	x0, [x2, #40]
 378:	str	x0, [x3, #40]
 37c:	ldp	x0, x1, [x2, #48]
 380:	stp	x0, x1, [x3, #48]
 384:	add	x2, x2, #0x58
 388:	ldur	x0, [x2, #-8]
 38c:	str	x0, [x3, #80]
 390:	str	q0, [x3, #64]
 394:	cmp	x22, x2
 398:	add	x3, x3, #0x58
 39c:	b.ne	238 <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x238>  // b.any
 3a0:	b	29c <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x29c>
 3a4:	ldp	x0, x1, [x19, #48]
 3a8:	stp	x0, x1, [x20, #48]
 3ac:	b	120 <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x120>
 3b0:	cbnz	x0, 3cc <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x3cc>
 3b4:	mov	x19, #0x58                  	// #88
 3b8:	mov	x24, #0x0                   	// #0
 3bc:	str	xzr, [sp, #112]
 3c0:	b	88 <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x88>
 3c4:	mov	x26, #0x58                  	// #88
 3c8:	b	70 <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x70>
 3cc:	cmp	x0, x1
 3d0:	mov	x26, #0x58                  	// #88
 3d4:	csel	x0, x0, x1, ls  // ls = plast
 3d8:	mul	x26, x0, x26
 3dc:	b	70 <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x70>
 3e0:	adrp	x0, 0 <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_>
 3e4:	add	x0, x0, #0x0
 3e8:	stp	x27, x28, [sp, #80]
 3ec:	bl	0 <_ZSt20__throw_length_errorPKc>

Disassembly of section .text._ZNK4llvm8ExpectedImE22fatalUncheckedExpectedEv:

0000000000000000 <_ZNK4llvm8ExpectedImE22fatalUncheckedExpectedEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	bl	0 <_ZN4llvm4dbgsEv>
  14:	adrp	x1, 0 <_ZNK4llvm8ExpectedImE22fatalUncheckedExpectedEv>
  18:	add	x1, x1, #0x0
  1c:	bl	0 <_ZNK4llvm8ExpectedImE22fatalUncheckedExpectedEv>
  20:	ldrb	w0, [x19, #8]
  24:	tbz	w0, #0, 60 <_ZNK4llvm8ExpectedImE22fatalUncheckedExpectedEv+0x60>
  28:	bl	0 <_ZN4llvm4dbgsEv>
  2c:	adrp	x1, 0 <_ZNK4llvm8ExpectedImE22fatalUncheckedExpectedEv>
  30:	add	x1, x1, #0x0
  34:	bl	0 <_ZNK4llvm8ExpectedImE22fatalUncheckedExpectedEv>
  38:	ldrb	w0, [x19, #8]
  3c:	tbz	w0, #0, 74 <_ZNK4llvm8ExpectedImE22fatalUncheckedExpectedEv+0x74>
  40:	ldr	x19, [x19]
  44:	ldr	x0, [x19]
  48:	ldr	x20, [x0, #16]
  4c:	bl	0 <_ZN4llvm4dbgsEv>
  50:	mov	x1, x0
  54:	mov	x0, x19
  58:	blr	x20
  5c:	bl	0 <abort>
  60:	bl	0 <_ZN4llvm4dbgsEv>
  64:	adrp	x1, 0 <_ZNK4llvm8ExpectedImE22fatalUncheckedExpectedEv>
  68:	add	x1, x1, #0x0
  6c:	bl	0 <_ZNK4llvm8ExpectedImE22fatalUncheckedExpectedEv>
  70:	bl	0 <abort>
  74:	adrp	x3, 0 <_ZNK4llvm8ExpectedImE22fatalUncheckedExpectedEv>
  78:	adrp	x1, 0 <_ZNK4llvm8ExpectedImE22fatalUncheckedExpectedEv>
  7c:	adrp	x0, 0 <_ZNK4llvm8ExpectedImE22fatalUncheckedExpectedEv>
  80:	add	x3, x3, #0x0
  84:	add	x1, x1, #0x0
  88:	add	x0, x0, #0x0
  8c:	mov	w2, #0x281                 	// #641
  90:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm8ExpectedImED2Ev:

0000000000000000 <_ZN4llvm8ExpectedImED1Ev>:
   0:	ldrb	w2, [x0, #8]
   4:	tbnz	w2, #1, 28 <_ZN4llvm8ExpectedImED1Ev+0x28>
   8:	tbz	w2, #0, 24 <_ZN4llvm8ExpectedImED1Ev+0x24>
   c:	ldr	x0, [x0]
  10:	cbz	x0, 24 <_ZN4llvm8ExpectedImED1Ev+0x24>
  14:	ldr	x1, [x0]
  18:	ldr	x1, [x1, #8]
  1c:	mov	x16, x1
  20:	br	x16
  24:	ret
  28:	stp	x29, x30, [sp, #-16]!
  2c:	mov	x29, sp
  30:	bl	0 <_ZN4llvm8ExpectedImED1Ev>

Disassembly of section .text._ZN4llvm21SimpleBitstreamCursor9ReadVBR64Ej:

0000000000000000 <_ZN4llvm21SimpleBitstreamCursor9ReadVBR64Ej>:
   0:	stp	x29, x30, [sp, #-320]!
   4:	mov	x29, sp
   8:	stp	x27, x28, [sp, #80]
   c:	add	x27, sp, #0xc0
  10:	stp	x19, x20, [sp, #16]
  14:	mov	w20, w1
  18:	mov	x19, x8
  1c:	mov	x8, x27
  20:	stp	x25, x26, [sp, #64]
  24:	mov	x26, x0
  28:	bl	0 <_ZN4llvm21SimpleBitstreamCursor9ReadVBR64Ej>
  2c:	ldrb	w1, [sp, #200]
  30:	and	w0, w1, #0x1
  34:	bfi	w1, w0, #1, #1
  38:	strb	w1, [sp, #200]
  3c:	cbz	w0, 80 <_ZN4llvm21SimpleBitstreamCursor9ReadVBR64Ej+0x80>
  40:	ldrb	w0, [x19, #8]
  44:	and	w1, w1, #0xfffffffd
  48:	ldr	x2, [sp, #192]
  4c:	orr	w0, w0, #0x3
  50:	str	x2, [x19]
  54:	strb	w0, [x19, #8]
  58:	str	xzr, [sp, #192]
  5c:	strb	w1, [sp, #200]
  60:	mov	x0, x27
  64:	bl	0 <_ZN4llvm21SimpleBitstreamCursor9ReadVBR64Ej>
  68:	mov	x0, x19
  6c:	ldp	x19, x20, [sp, #16]
  70:	ldp	x25, x26, [sp, #64]
  74:	ldp	x27, x28, [sp, #80]
  78:	ldp	x29, x30, [sp], #320
  7c:	ret
  80:	stp	x21, x22, [sp, #32]
  84:	sub	w28, w20, #0x1
  88:	ldr	x21, [sp, #192]
  8c:	lsr	w0, w21, w28
  90:	tbz	w0, #0, 248 <_ZN4llvm21SimpleBitstreamCursor9ReadVBR64Ej+0x248>
  94:	mov	w22, #0xffffffff            	// #-1
  98:	stp	x23, x24, [sp, #48]
  9c:	lsl	w22, w22, w28
  a0:	mvn	w0, w22
  a4:	str	w0, [sp, #160]
  a8:	cmp	w28, #0x3f
  ac:	bic	w21, w21, w22
  b0:	b.hi	598 <_ZN4llvm21SimpleBitstreamCursor9ReadVBR64Ej+0x598>  // b.pmore
  b4:	adrp	x22, 0 <_ZTVN4llvm18raw_string_ostreamE>
  b8:	neg	w25, w20
  bc:	mov	x1, #0xffffffffffffffff    	// #-1
  c0:	ldr	w7, [x26, #32]
  c4:	ldr	x0, [x22]
  c8:	lsr	x1, x1, x25
  cc:	add	x2, sp, #0xf0
  d0:	stp	x1, x2, [sp, #96]
  d4:	add	x0, x0, #0x10
  d8:	add	x1, sp, #0x100
  dc:	str	x1, [sp, #128]
  e0:	str	x0, [sp, #136]
  e4:	mov	w23, #0x1                   	// #1
  e8:	mov	w24, w28
  ec:	cmp	w20, w7
  f0:	lsl	w23, w23, w28
  f4:	b.hi	1ac <_ZN4llvm21SimpleBitstreamCursor9ReadVBR64Ej+0x1ac>  // b.pmore
  f8:	ldr	x1, [x26, #24]
  fc:	sub	w7, w7, w20
 100:	ldrb	w0, [sp, #280]
 104:	ldr	x2, [sp, #96]
 108:	and	w0, w0, #0xfffffffc
 10c:	orr	w0, w0, #0x2
 110:	str	w7, [x26, #32]
 114:	and	x2, x1, x2
 118:	lsr	x1, x1, x20
 11c:	str	x1, [x26, #24]
 120:	str	x2, [sp, #272]
 124:	strb	w0, [sp, #280]
 128:	ldrb	w0, [sp, #200]
 12c:	tbnz	w0, #1, 3fc <_ZN4llvm21SimpleBitstreamCursor9ReadVBR64Ej+0x3fc>
 130:	mov	x0, x27
 134:	bl	0 <_ZN4llvm21SimpleBitstreamCursor9ReadVBR64Ej>
 138:	ldrb	w1, [sp, #280]
 13c:	ldrb	w0, [sp, #200]
 140:	and	w2, w1, #0x1
 144:	and	w1, w1, #0xfffffffd
 148:	strb	w1, [sp, #280]
 14c:	bfxil	w0, w2, #0, #1
 150:	orr	w0, w0, #0x2
 154:	strb	w0, [sp, #200]
 158:	ldr	x0, [sp, #272]
 15c:	str	x0, [sp, #192]
 160:	cbnz	w2, 284 <_ZN4llvm21SimpleBitstreamCursor9ReadVBR64Ej+0x284>
 164:	add	x0, sp, #0x110
 168:	bl	0 <_ZN4llvm21SimpleBitstreamCursor9ReadVBR64Ej>
 16c:	ldrb	w0, [sp, #200]
 170:	and	w1, w0, #0x1
 174:	bfi	w0, w1, #1, #1
 178:	strb	w0, [sp, #200]
 17c:	cbnz	w1, 560 <_ZN4llvm21SimpleBitstreamCursor9ReadVBR64Ej+0x560>
 180:	ldr	x1, [sp, #192]
 184:	ldr	w0, [sp, #160]
 188:	tst	w23, w1
 18c:	and	w0, w0, w1
 190:	lsl	x0, x0, x24
 194:	orr	x21, x21, x0
 198:	b.eq	404 <_ZN4llvm21SimpleBitstreamCursor9ReadVBR64Ej+0x404>  // b.none
 19c:	ldr	w7, [x26, #32]
 1a0:	add	w24, w24, w28
 1a4:	cmp	w20, w7
 1a8:	b.ls	f8 <_ZN4llvm21SimpleBitstreamCursor9ReadVBR64Ej+0xf8>  // b.plast
 1ac:	str	xzr, [sp, #112]
 1b0:	cbz	w7, 1bc <_ZN4llvm21SimpleBitstreamCursor9ReadVBR64Ej+0x1bc>
 1b4:	ldr	x0, [x26, #24]
 1b8:	str	x0, [sp, #112]
 1bc:	ldp	x1, x9, [x26, #8]
 1c0:	cmp	x9, x1
 1c4:	b.cs	28c <_ZN4llvm21SimpleBitstreamCursor9ReadVBR64Ej+0x28c>  // b.hs, b.nlast
 1c8:	ldr	x2, [x26]
 1cc:	add	x0, x9, #0x8
 1d0:	cmp	x1, x0
 1d4:	add	x10, x2, x9
 1d8:	b.cc	3bc <_ZN4llvm21SimpleBitstreamCursor9ReadVBR64Ej+0x3bc>  // b.lo, b.ul, b.last
 1dc:	ldr	x1, [x2, x9]
 1e0:	mov	w3, #0x40                  	// #64
 1e4:	str	x1, [x26, #24]
 1e8:	str	x0, [x26, #16]
 1ec:	str	w3, [x26, #32]
 1f0:	sub	w2, w20, w7
 1f4:	cmp	w2, w3
 1f8:	b.hi	424 <_ZN4llvm21SimpleBitstreamCursor9ReadVBR64Ej+0x424>  // b.pmore
 1fc:	ldr	x8, [x26, #24]
 200:	sub	w1, w7, w20
 204:	add	w9, w1, #0x40
 208:	add	w3, w1, w3
 20c:	mov	x0, #0xffffffffffffffff    	// #-1
 210:	ldrb	w1, [sp, #280]
 214:	lsr	x2, x8, x2
 218:	str	x2, [x26, #24]
 21c:	ldr	x2, [sp, #112]
 220:	lsr	x0, x0, x9
 224:	and	x0, x0, x8
 228:	and	w1, w1, #0xfffffffc
 22c:	orr	w1, w1, #0x2
 230:	str	w3, [x26, #32]
 234:	lsl	x0, x0, x7
 238:	orr	x0, x0, x2
 23c:	str	x0, [sp, #272]
 240:	strb	w1, [sp, #280]
 244:	b	128 <_ZN4llvm21SimpleBitstreamCursor9ReadVBR64Ej+0x128>
 248:	ldrb	w0, [x19, #8]
 24c:	and	x21, x21, #0xffffffff
 250:	str	x21, [x19]
 254:	and	w0, w0, #0xfffffffc
 258:	orr	w0, w0, #0x2
 25c:	strb	w0, [x19, #8]
 260:	mov	x0, x27
 264:	ldp	x21, x22, [sp, #32]
 268:	bl	0 <_ZN4llvm21SimpleBitstreamCursor9ReadVBR64Ej>
 26c:	mov	x0, x19
 270:	ldp	x19, x20, [sp, #16]
 274:	ldp	x25, x26, [sp, #64]
 278:	ldp	x27, x28, [sp, #80]
 27c:	ldp	x29, x30, [sp], #320
 280:	ret
 284:	str	xzr, [sp, #272]
 288:	b	164 <_ZN4llvm21SimpleBitstreamCursor9ReadVBR64Ej+0x164>
 28c:	str	w7, [sp, #164]
 290:	add	x25, sp, #0x110
 294:	stp	x9, x1, [sp, #168]
 298:	bl	0 <_ZNSt3_V216generic_categoryEv>
 29c:	adrp	x3, 0 <_ZN4llvm21SimpleBitstreamCursor9ReadVBR64Ej>
 2a0:	ldr	x2, [x22]
 2a4:	add	x4, sp, #0xd0
 2a8:	ldr	x3, [x3]
 2ac:	add	x2, x2, #0x10
 2b0:	ldp	x9, x1, [sp, #168]
 2b4:	stp	x1, x9, [sp, #256]
 2b8:	add	x3, x3, #0x10
 2bc:	ldr	x1, [sp, #104]
 2c0:	stp	x4, x0, [sp, #144]
 2c4:	add	x0, sp, #0xe0
 2c8:	stp	x2, xzr, [sp, #272]
 2cc:	mov	w2, #0x1                   	// #1
 2d0:	str	x0, [sp, #208]
 2d4:	adrp	x0, 0 <_ZN4llvm21SimpleBitstreamCursor9ReadVBR64Ej>
 2d8:	add	x0, x0, #0x0
 2dc:	str	xzr, [sp, #216]
 2e0:	strb	wzr, [sp, #224]
 2e4:	str	x3, [sp, #240]
 2e8:	str	x0, [sp, #248]
 2ec:	mov	x0, x25
 2f0:	stp	xzr, xzr, [sp, #288]
 2f4:	str	w2, [sp, #304]
 2f8:	str	x4, [sp, #312]
 2fc:	bl	0 <_ZN4llvm11raw_ostreamlsERKNS_18format_object_baseE>
 300:	ldr	x0, [sp, #280]
 304:	ldr	x1, [sp, #296]
 308:	ldr	w7, [sp, #164]
 30c:	cmp	x1, x0
 310:	b.eq	324 <_ZN4llvm21SimpleBitstreamCursor9ReadVBR64Ej+0x324>  // b.none
 314:	mov	x0, x25
 318:	str	w7, [sp, #164]
 31c:	bl	0 <_ZN4llvm11raw_ostream14flush_nonemptyEv>
 320:	ldr	w7, [sp, #164]
 324:	ldr	x3, [sp, #120]
 328:	mov	x0, #0x5                   	// #5
 32c:	ldr	x2, [sp, #312]
 330:	mov	w1, #0x104                 	// #260
 334:	bfxil	x3, x0, #0, #32
 338:	mov	x0, #0x40                  	// #64
 33c:	str	x3, [sp, #120]
 340:	str	w7, [sp, #164]
 344:	stp	x2, xzr, [sp, #240]
 348:	strh	w1, [sp, #256]
 34c:	bl	0 <_Znwm>
 350:	ldr	x1, [sp, #104]
 354:	ldr	x2, [sp, #120]
 358:	str	x0, [sp, #120]
 35c:	ldr	x3, [sp, #152]
 360:	bl	0 <_ZN4llvm11StringErrorC1ERKNS_5TwineESt10error_code>
 364:	ldr	x4, [sp, #120]
 368:	mov	x0, x25
 36c:	orr	x1, x4, #0x1
 370:	str	x1, [sp, #240]
 374:	bl	0 <_ZN4llvm18raw_string_ostreamD1Ev>
 378:	ldr	x1, [sp, #144]
 37c:	ldr	x0, [sp, #208]
 380:	add	x1, x1, #0x10
 384:	ldr	w7, [sp, #164]
 388:	cmp	x0, x1
 38c:	b.eq	39c <_ZN4llvm21SimpleBitstreamCursor9ReadVBR64Ej+0x39c>  // b.none
 390:	str	w7, [sp, #144]
 394:	bl	0 <_ZdlPv>
 398:	ldr	w7, [sp, #144]
 39c:	ldr	x0, [sp, #240]
 3a0:	ands	x0, x0, #0xfffffffffffffffe
 3a4:	b.eq	5b8 <_ZN4llvm21SimpleBitstreamCursor9ReadVBR64Ej+0x5b8>  // b.none
 3a8:	ldrb	w1, [sp, #280]
 3ac:	str	x0, [sp, #272]
 3b0:	orr	w0, w1, #0x3
 3b4:	strb	w0, [sp, #280]
 3b8:	b	128 <_ZN4llvm21SimpleBitstreamCursor9ReadVBR64Ej+0x128>
 3bc:	str	xzr, [x26, #24]
 3c0:	subs	w3, w1, w9
 3c4:	b.eq	58c <_ZN4llvm21SimpleBitstreamCursor9ReadVBR64Ej+0x58c>  // b.none
 3c8:	mov	x0, #0x0                   	// #0
 3cc:	mov	x2, #0x0                   	// #0
 3d0:	ldrb	w1, [x10, x0]
 3d4:	lsl	w8, w0, #3
 3d8:	add	x0, x0, #0x1
 3dc:	cmp	w3, w0
 3e0:	lsl	x1, x1, x8
 3e4:	orr	x2, x2, x1
 3e8:	str	x2, [x26, #24]
 3ec:	b.ne	3d0 <_ZN4llvm21SimpleBitstreamCursor9ReadVBR64Ej+0x3d0>  // b.any
 3f0:	add	x0, x9, w3, uxtw
 3f4:	lsl	w3, w3, #3
 3f8:	b	1e8 <_ZN4llvm21SimpleBitstreamCursor9ReadVBR64Ej+0x1e8>
 3fc:	mov	x0, x27
 400:	bl	0 <_ZN4llvm21SimpleBitstreamCursor9ReadVBR64Ej>
 404:	ldrb	w0, [x19, #8]
 408:	and	w0, w0, #0xfffffffc
 40c:	orr	w0, w0, #0x2
 410:	strb	w0, [x19, #8]
 414:	ldp	x23, x24, [sp, #48]
 418:	str	x21, [x19]
 41c:	ldp	x21, x22, [sp, #32]
 420:	b	60 <_ZN4llvm21SimpleBitstreamCursor9ReadVBR64Ej+0x60>
 424:	str	w3, [sp, #152]
 428:	add	x25, sp, #0x110
 42c:	str	w2, [sp, #164]
 430:	bl	0 <_ZNSt3_V216generic_categoryEv>
 434:	adrp	x1, 0 <_ZN4llvm21SimpleBitstreamCursor9ReadVBR64Ej>
 438:	ldr	w2, [sp, #164]
 43c:	str	x0, [sp, #112]
 440:	add	x3, sp, #0xd0
 444:	ldr	x0, [x1]
 448:	mov	x1, x3
 44c:	str	x3, [sp, #144]
 450:	ldr	w3, [sp, #152]
 454:	add	x0, x0, #0x10
 458:	str	w2, [sp, #224]
 45c:	adrp	x2, 0 <_ZN4llvm21SimpleBitstreamCursor9ReadVBR64Ej>
 460:	add	x2, x2, #0x0
 464:	stp	x0, x2, [sp, #208]
 468:	mov	w2, #0x1                   	// #1
 46c:	str	w3, [sp, #228]
 470:	mov	x0, x25
 474:	ldr	x3, [sp, #128]
 478:	str	x3, [sp, #240]
 47c:	str	w2, [sp, #304]
 480:	ldr	x2, [sp, #104]
 484:	str	xzr, [sp, #248]
 488:	ldr	x3, [sp, #136]
 48c:	strb	wzr, [sp, #256]
 490:	str	x3, [sp, #272]
 494:	stp	xzr, xzr, [sp, #280]
 498:	str	xzr, [sp, #296]
 49c:	str	x2, [sp, #312]
 4a0:	bl	0 <_ZN4llvm11raw_ostreamlsERKNS_18format_object_baseE>
 4a4:	ldr	x0, [sp, #280]
 4a8:	ldr	x1, [sp, #296]
 4ac:	cmp	x1, x0
 4b0:	b.eq	4bc <_ZN4llvm21SimpleBitstreamCursor9ReadVBR64Ej+0x4bc>  // b.none
 4b4:	mov	x0, x25
 4b8:	bl	0 <_ZN4llvm11raw_ostream14flush_nonemptyEv>
 4bc:	ldr	x2, [sp, #184]
 4c0:	mov	x1, #0x5                   	// #5
 4c4:	ldr	x0, [sp, #312]
 4c8:	stp	x0, xzr, [sp, #208]
 4cc:	bfxil	x2, x1, #0, #32
 4d0:	mov	w1, #0x104                 	// #260
 4d4:	mov	x0, #0x40                  	// #64
 4d8:	str	x2, [sp, #184]
 4dc:	strh	w1, [sp, #224]
 4e0:	bl	0 <_Znwm>
 4e4:	ldr	x3, [sp, #112]
 4e8:	str	x0, [sp, #112]
 4ec:	ldr	x1, [sp, #144]
 4f0:	ldr	x2, [sp, #184]
 4f4:	bl	0 <_ZN4llvm11StringErrorC1ERKNS_5TwineESt10error_code>
 4f8:	ldr	x7, [sp, #112]
 4fc:	mov	x0, x25
 500:	and	x7, x7, #0xfffffffffffffffe
 504:	str	x7, [sp, #112]
 508:	bl	0 <_ZN4llvm18raw_string_ostreamD1Ev>
 50c:	ldr	x1, [sp, #128]
 510:	ldr	x0, [sp, #240]
 514:	ldr	x7, [sp, #112]
 518:	cmp	x0, x1
 51c:	b.eq	528 <_ZN4llvm21SimpleBitstreamCursor9ReadVBR64Ej+0x528>  // b.none
 520:	bl	0 <_ZdlPv>
 524:	ldr	x7, [sp, #112]
 528:	ldrb	w0, [sp, #280]
 52c:	orr	w0, w0, #0x3
 530:	strb	w0, [sp, #280]
 534:	cbnz	x7, 558 <_ZN4llvm21SimpleBitstreamCursor9ReadVBR64Ej+0x558>
 538:	adrp	x3, 0 <_ZN4llvm21SimpleBitstreamCursor9ReadVBR64Ej>
 53c:	adrp	x1, 0 <_ZN4llvm21SimpleBitstreamCursor9ReadVBR64Ej>
 540:	adrp	x0, 0 <_ZN4llvm21SimpleBitstreamCursor9ReadVBR64Ej>
 544:	add	x3, x3, #0x0
 548:	add	x1, x1, #0x0
 54c:	add	x0, x0, #0x0
 550:	mov	w2, #0x1ce                 	// #462
 554:	bl	0 <__assert_fail>
 558:	str	x7, [sp, #272]
 55c:	b	128 <_ZN4llvm21SimpleBitstreamCursor9ReadVBR64Ej+0x128>
 560:	ldrb	w1, [x19, #8]
 564:	and	w0, w0, #0xfffffffd
 568:	ldr	x2, [sp, #192]
 56c:	orr	w1, w1, #0x3
 570:	strb	w1, [x19, #8]
 574:	str	xzr, [sp, #192]
 578:	strb	w0, [sp, #200]
 57c:	ldp	x21, x22, [sp, #32]
 580:	ldp	x23, x24, [sp, #48]
 584:	str	x2, [x19]
 588:	b	60 <_ZN4llvm21SimpleBitstreamCursor9ReadVBR64Ej+0x60>
 58c:	mov	x0, x9
 590:	mov	w3, #0x0                   	// #0
 594:	b	1e8 <_ZN4llvm21SimpleBitstreamCursor9ReadVBR64Ej+0x1e8>
 598:	adrp	x3, 0 <_ZN4llvm21SimpleBitstreamCursor9ReadVBR64Ej>
 59c:	adrp	x1, 0 <_ZN4llvm21SimpleBitstreamCursor9ReadVBR64Ej>
 5a0:	adrp	x0, 0 <_ZN4llvm21SimpleBitstreamCursor9ReadVBR64Ej>
 5a4:	add	x3, x3, #0x0
 5a8:	add	x1, x1, #0x0
 5ac:	add	x0, x0, #0x0
 5b0:	mov	w2, #0xc0                  	// #192
 5b4:	bl	0 <__assert_fail>
 5b8:	ldr	w3, [x26, #32]
 5bc:	b	1f0 <_ZN4llvm21SimpleBitstreamCursor9ReadVBR64Ej+0x1f0>

Disassembly of section .text._ZNK4llvm8ExpectedIjE22fatalUncheckedExpectedEv:

0000000000000000 <_ZNK4llvm8ExpectedIjE22fatalUncheckedExpectedEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	bl	0 <_ZN4llvm4dbgsEv>
  14:	adrp	x1, 0 <_ZNK4llvm8ExpectedIjE22fatalUncheckedExpectedEv>
  18:	add	x1, x1, #0x0
  1c:	bl	0 <_ZNK4llvm8ExpectedIjE22fatalUncheckedExpectedEv>
  20:	ldrb	w0, [x19, #8]
  24:	tbz	w0, #0, 60 <_ZNK4llvm8ExpectedIjE22fatalUncheckedExpectedEv+0x60>
  28:	bl	0 <_ZN4llvm4dbgsEv>
  2c:	adrp	x1, 0 <_ZNK4llvm8ExpectedIjE22fatalUncheckedExpectedEv>
  30:	add	x1, x1, #0x0
  34:	bl	0 <_ZNK4llvm8ExpectedIjE22fatalUncheckedExpectedEv>
  38:	ldrb	w0, [x19, #8]
  3c:	tbz	w0, #0, 74 <_ZNK4llvm8ExpectedIjE22fatalUncheckedExpectedEv+0x74>
  40:	ldr	x19, [x19]
  44:	ldr	x0, [x19]
  48:	ldr	x20, [x0, #16]
  4c:	bl	0 <_ZN4llvm4dbgsEv>
  50:	mov	x1, x0
  54:	mov	x0, x19
  58:	blr	x20
  5c:	bl	0 <abort>
  60:	bl	0 <_ZN4llvm4dbgsEv>
  64:	adrp	x1, 0 <_ZNK4llvm8ExpectedIjE22fatalUncheckedExpectedEv>
  68:	add	x1, x1, #0x0
  6c:	bl	0 <_ZNK4llvm8ExpectedIjE22fatalUncheckedExpectedEv>
  70:	bl	0 <abort>
  74:	adrp	x3, 0 <_ZNK4llvm8ExpectedIjE22fatalUncheckedExpectedEv>
  78:	adrp	x1, 0 <_ZNK4llvm8ExpectedIjE22fatalUncheckedExpectedEv>
  7c:	adrp	x0, 0 <_ZNK4llvm8ExpectedIjE22fatalUncheckedExpectedEv>
  80:	add	x3, x3, #0x0
  84:	add	x1, x1, #0x0
  88:	add	x0, x0, #0x0
  8c:	mov	w2, #0x281                 	// #641
  90:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm8ExpectedIjED2Ev:

0000000000000000 <_ZN4llvm8ExpectedIjED1Ev>:
   0:	ldrb	w2, [x0, #8]
   4:	tbnz	w2, #1, 28 <_ZN4llvm8ExpectedIjED1Ev+0x28>
   8:	tbz	w2, #0, 24 <_ZN4llvm8ExpectedIjED1Ev+0x24>
   c:	ldr	x0, [x0]
  10:	cbz	x0, 24 <_ZN4llvm8ExpectedIjED1Ev+0x24>
  14:	ldr	x1, [x0]
  18:	ldr	x1, [x1, #8]
  1c:	mov	x16, x1
  20:	br	x16
  24:	ret
  28:	stp	x29, x30, [sp, #-16]!
  2c:	mov	x29, sp
  30:	bl	0 <_ZN4llvm8ExpectedIjED1Ev>

Disassembly of section .text._ZNK4llvm8ExpectedINS_14BitstreamEntryEE22fatalUncheckedExpectedEv:

0000000000000000 <_ZNK4llvm8ExpectedINS_14BitstreamEntryEE22fatalUncheckedExpectedEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	bl	0 <_ZN4llvm4dbgsEv>
  14:	adrp	x1, 0 <_ZNK4llvm8ExpectedINS_14BitstreamEntryEE22fatalUncheckedExpectedEv>
  18:	add	x1, x1, #0x0
  1c:	bl	0 <_ZNK4llvm8ExpectedINS_14BitstreamEntryEE22fatalUncheckedExpectedEv>
  20:	ldrb	w0, [x19, #8]
  24:	tbz	w0, #0, 60 <_ZNK4llvm8ExpectedINS_14BitstreamEntryEE22fatalUncheckedExpectedEv+0x60>
  28:	bl	0 <_ZN4llvm4dbgsEv>
  2c:	adrp	x1, 0 <_ZNK4llvm8ExpectedINS_14BitstreamEntryEE22fatalUncheckedExpectedEv>
  30:	add	x1, x1, #0x0
  34:	bl	0 <_ZNK4llvm8ExpectedINS_14BitstreamEntryEE22fatalUncheckedExpectedEv>
  38:	ldrb	w0, [x19, #8]
  3c:	tbz	w0, #0, 74 <_ZNK4llvm8ExpectedINS_14BitstreamEntryEE22fatalUncheckedExpectedEv+0x74>
  40:	ldr	x19, [x19]
  44:	ldr	x0, [x19]
  48:	ldr	x20, [x0, #16]
  4c:	bl	0 <_ZN4llvm4dbgsEv>
  50:	mov	x1, x0
  54:	mov	x0, x19
  58:	blr	x20
  5c:	bl	0 <abort>
  60:	bl	0 <_ZN4llvm4dbgsEv>
  64:	adrp	x1, 0 <_ZNK4llvm8ExpectedINS_14BitstreamEntryEE22fatalUncheckedExpectedEv>
  68:	add	x1, x1, #0x0
  6c:	bl	0 <_ZNK4llvm8ExpectedINS_14BitstreamEntryEE22fatalUncheckedExpectedEv>
  70:	bl	0 <abort>
  74:	adrp	x3, 0 <_ZNK4llvm8ExpectedINS_14BitstreamEntryEE22fatalUncheckedExpectedEv>
  78:	adrp	x1, 0 <_ZNK4llvm8ExpectedINS_14BitstreamEntryEE22fatalUncheckedExpectedEv>
  7c:	adrp	x0, 0 <_ZNK4llvm8ExpectedINS_14BitstreamEntryEE22fatalUncheckedExpectedEv>
  80:	add	x3, x3, #0x0
  84:	add	x1, x1, #0x0
  88:	add	x0, x0, #0x0
  8c:	mov	w2, #0x281                 	// #641
  90:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm8ExpectedINS_14BitstreamEntryEED2Ev:

0000000000000000 <_ZN4llvm8ExpectedINS_14BitstreamEntryEED1Ev>:
   0:	ldrb	w2, [x0, #8]
   4:	tbnz	w2, #1, 28 <_ZN4llvm8ExpectedINS_14BitstreamEntryEED1Ev+0x28>
   8:	tbz	w2, #0, 24 <_ZN4llvm8ExpectedINS_14BitstreamEntryEED1Ev+0x24>
   c:	ldr	x0, [x0]
  10:	cbz	x0, 24 <_ZN4llvm8ExpectedINS_14BitstreamEntryEED1Ev+0x24>
  14:	ldr	x1, [x0]
  18:	ldr	x1, [x1, #8]
  1c:	mov	x16, x1
  20:	br	x16
  24:	ret
  28:	stp	x29, x30, [sp, #-16]!
  2c:	mov	x29, sp
  30:	bl	0 <_ZN4llvm8ExpectedINS_14BitstreamEntryEED1Ev>

Disassembly of section .text._ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag:

0000000000000000 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag>:
   0:	cmp	x3, x2
   4:	b.eq	3d0 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x3d0>  // b.none
   8:	stp	x29, x30, [sp, #-96]!
   c:	mov	x29, sp
  10:	stp	x21, x22, [sp, #32]
  14:	stp	x25, x26, [sp, #64]
  18:	mov	x25, x0
  1c:	ldp	x21, x0, [x0, #8]
  20:	stp	x23, x24, [sp, #48]
  24:	mov	x24, x3
  28:	stp	x19, x20, [sp, #16]
  2c:	mov	x23, x1
  30:	mov	x20, x2
  34:	str	x27, [sp, #80]
  38:	sub	x27, x24, x2
  3c:	sub	x0, x0, x21
  40:	mov	x19, x1
  44:	mov	x3, x21
  48:	asr	x22, x27, #4
  4c:	asr	x0, x0, #4
  50:	cmp	x0, x27, asr #4
  54:	b.cc	15c <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x15c>  // b.lo, b.ul, b.last
  58:	sub	x4, x21, x1
  5c:	cmp	x22, x4, asr #4
  60:	asr	x26, x4, #4
  64:	b.cs	3d4 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x3d4>  // b.hs, b.nlast
  68:	sub	x26, x21, x27
  6c:	mov	x2, x21
  70:	movi	v0.4s, #0x0
  74:	mov	x1, x26
  78:	ldr	x0, [x1]
  7c:	stp	x0, xzr, [x2]
  80:	add	x2, x2, #0x10
  84:	ldr	x0, [x1, #8]
  88:	stur	x0, [x2, #-8]
  8c:	str	q0, [x1], #16
  90:	cmp	x3, x1
  94:	b.ne	78 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x78>  // b.any
  98:	sub	x23, x26, x23
  9c:	add	x3, x3, x27
  a0:	str	x3, [x25, #8]
  a4:	cmp	x23, #0x0
  a8:	asr	x23, x23, #4
  ac:	b.le	56c <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x56c>
  b0:	movi	v1.4s, #0x0
  b4:	adrp	x0, 0 <__pthread_key_create>
  b8:	ldr	x0, [x0]
  bc:	cbz	x0, 348 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x348>
  c0:	ldr	q0, [x26, #-16]!
  c4:	sub	x21, x21, #0x10
  c8:	str	q1, [x26]
  cc:	ldr	x24, [x21, #8]
  d0:	str	q0, [x21]
  d4:	cbnz	x24, f8 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0xf8>
  d8:	subs	x23, x23, #0x1
  dc:	b.eq	56c <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x56c>  // b.none
  e0:	ldr	q0, [x26, #-16]!
  e4:	sub	x21, x21, #0x10
  e8:	str	q1, [x26]
  ec:	ldr	x24, [x21, #8]
  f0:	str	q0, [x21]
  f4:	cbz	x24, d8 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0xd8>
  f8:	add	x0, x24, #0x8
  fc:	ldaxr	w1, [x0]
 100:	sub	w2, w1, #0x1
 104:	stlxr	w3, w2, [x0]
 108:	cbnz	w3, fc <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0xfc>
 10c:	cmp	w1, #0x1
 110:	b.ne	d8 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0xd8>  // b.any
 114:	ldr	x1, [x24]
 118:	mov	x0, x24
 11c:	ldr	x1, [x1, #16]
 120:	blr	x1
 124:	add	x0, x24, #0xc
 128:	ldaxr	w1, [x0]
 12c:	sub	w2, w1, #0x1
 130:	stlxr	w3, w2, [x0]
 134:	cbnz	w3, 128 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x128>
 138:	movi	v1.4s, #0x0
 13c:	cmp	w1, #0x1
 140:	b.ne	d8 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0xd8>  // b.any
 144:	ldr	x1, [x24]
 148:	mov	x0, x24
 14c:	ldr	x1, [x1, #24]
 150:	blr	x1
 154:	movi	v1.4s, #0x0
 158:	b	d8 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0xd8>
 15c:	ldr	x5, [x25]
 160:	mov	x19, #0x7ffffffffffffff     	// #576460752303423487
 164:	sub	x3, x21, x5
 168:	asr	x3, x3, #4
 16c:	sub	x0, x19, x3
 170:	cmp	x22, x0
 174:	b.hi	768 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x768>  // b.pmore
 178:	cmp	x22, x3
 17c:	mov	x26, x2
 180:	csel	x22, x22, x3, cs  // cs = hs, nlast
 184:	adds	x22, x3, x22
 188:	b.cs	760 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x760>  // b.hs, b.nlast
 18c:	mov	x20, #0x0                   	// #0
 190:	mov	x27, #0x0                   	// #0
 194:	cbnz	x22, 734 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x734>
 198:	cmp	x23, x5
 19c:	b.eq	758 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x758>  // b.none
 1a0:	movi	v0.4s, #0x0
 1a4:	mov	x4, x5
 1a8:	mov	x1, x27
 1ac:	nop
 1b0:	ldr	x2, [x4]
 1b4:	stp	x2, xzr, [x1]
 1b8:	add	x1, x1, #0x10
 1bc:	ldr	x2, [x4, #8]
 1c0:	stur	x2, [x1, #-8]
 1c4:	str	q0, [x4], #16
 1c8:	cmp	x23, x4
 1cc:	b.ne	1b0 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x1b0>  // b.any
 1d0:	sub	x5, x23, x5
 1d4:	add	x5, x27, x5
 1d8:	adrp	x4, 0 <__pthread_key_create>
 1dc:	mov	x1, x26
 1e0:	mov	x3, x5
 1e4:	ldr	x0, [x4]
 1e8:	cbz	x0, 6c8 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x6c8>
 1ec:	nop
 1f0:	ldr	q0, [x1]
 1f4:	ldr	x2, [x1, #8]
 1f8:	str	q0, [x3]
 1fc:	cbz	x2, 214 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x214>
 200:	add	x2, x2, #0x8
 204:	ldaxr	w0, [x2]
 208:	add	w0, w0, #0x1
 20c:	stlxr	w6, w0, [x2]
 210:	cbnz	w6, 204 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x204>
 214:	add	x1, x1, #0x10
 218:	add	x3, x3, #0x10
 21c:	cmp	x24, x1
 220:	b.ne	1f0 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x1f0>  // b.any
 224:	ldr	x22, [x25, #8]
 228:	sub	x24, x24, x26
 22c:	add	x24, x5, x24
 230:	cmp	x23, x22
 234:	b.eq	27c <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x27c>  // b.none
 238:	sub	x0, x22, x23
 23c:	mov	x1, #0x0                   	// #0
 240:	sub	x0, x0, #0x10
 244:	mov	x2, #0x0                   	// #0
 248:	movi	v1.4s, #0x0
 24c:	lsr	x3, x0, #4
 250:	add	x3, x3, #0x1
 254:	nop
 258:	ldr	q0, [x23, x1]
 25c:	add	x2, x2, #0x1
 260:	str	q1, [x23, x1]
 264:	cmp	x3, x2
 268:	str	q0, [x24, x1]
 26c:	add	x1, x1, #0x10
 270:	b.hi	258 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x258>  // b.pmore
 274:	add	x0, x0, #0x10
 278:	add	x24, x24, x0
 27c:	ldr	x19, [x25]
 280:	cmp	x22, x19
 284:	b.eq	678 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x678>  // b.none
 288:	ldr	x0, [x4]
 28c:	cbz	x0, 3b4 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x3b4>
 290:	ldr	x21, [x19, #8]
 294:	cbnz	x21, 2ac <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x2ac>
 298:	add	x19, x19, #0x10
 29c:	cmp	x22, x19
 2a0:	b.eq	674 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x674>  // b.none
 2a4:	ldr	x21, [x19, #8]
 2a8:	cbz	x21, 298 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x298>
 2ac:	add	x0, x21, #0x8
 2b0:	ldaxr	w1, [x0]
 2b4:	sub	w2, w1, #0x1
 2b8:	stlxr	w3, w2, [x0]
 2bc:	cbnz	w3, 2b0 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x2b0>
 2c0:	cmp	w1, #0x1
 2c4:	b.ne	298 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x298>  // b.any
 2c8:	ldr	x1, [x21]
 2cc:	mov	x0, x21
 2d0:	ldr	x1, [x1, #16]
 2d4:	blr	x1
 2d8:	add	x0, x21, #0xc
 2dc:	ldaxr	w1, [x0]
 2e0:	sub	w2, w1, #0x1
 2e4:	stlxr	w3, w2, [x0]
 2e8:	cbnz	w3, 2dc <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x2dc>
 2ec:	cmp	w1, #0x1
 2f0:	b.ne	298 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x298>  // b.any
 2f4:	ldr	x1, [x21]
 2f8:	mov	x0, x21
 2fc:	ldr	x1, [x1, #24]
 300:	blr	x1
 304:	b	298 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x298>
 308:	ldr	x1, [x24]
 30c:	mov	x0, x24
 310:	ldr	x1, [x1, #16]
 314:	blr	x1
 318:	movi	v1.4s, #0x0
 31c:	ldr	w0, [x24, #12]
 320:	subs	w1, w0, #0x1
 324:	str	w1, [x24, #12]
 328:	b.ne	340 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x340>  // b.any
 32c:	ldr	x1, [x24]
 330:	mov	x0, x24
 334:	ldr	x1, [x1, #24]
 338:	blr	x1
 33c:	movi	v1.4s, #0x0
 340:	subs	x23, x23, #0x1
 344:	b.eq	56c <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x56c>  // b.none
 348:	ldr	q0, [x26, #-16]!
 34c:	sub	x21, x21, #0x10
 350:	str	q1, [x26]
 354:	ldr	x24, [x21, #8]
 358:	str	q0, [x21]
 35c:	cbz	x24, 340 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x340>
 360:	ldr	w0, [x24, #8]
 364:	subs	w1, w0, #0x1
 368:	str	w1, [x24, #8]
 36c:	b.ne	340 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x340>  // b.any
 370:	b	308 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x308>
 374:	ldr	x1, [x21]
 378:	mov	x0, x21
 37c:	ldr	x1, [x1, #16]
 380:	blr	x1
 384:	ldr	w0, [x21, #12]
 388:	subs	w1, w0, #0x1
 38c:	str	w1, [x21, #12]
 390:	b.ne	3a8 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x3a8>  // b.any
 394:	ldr	x1, [x21]
 398:	mov	x0, x21
 39c:	ldr	x1, [x1, #24]
 3a0:	blr	x1
 3a4:	nop
 3a8:	add	x19, x19, #0x10
 3ac:	cmp	x22, x19
 3b0:	b.eq	674 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x674>  // b.none
 3b4:	ldr	x21, [x19, #8]
 3b8:	cbz	x21, 3a8 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x3a8>
 3bc:	ldr	w0, [x21, #8]
 3c0:	subs	w1, w0, #0x1
 3c4:	str	w1, [x21, #8]
 3c8:	b.ne	3a8 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x3a8>  // b.any
 3cc:	b	374 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x374>
 3d0:	ret
 3d4:	add	x2, x2, x4
 3d8:	cmp	x24, x2
 3dc:	b.eq	424 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x424>  // b.none
 3e0:	adrp	x0, 0 <__pthread_key_create>
 3e4:	mov	x1, x21
 3e8:	ldr	x0, [x0]
 3ec:	cbz	x0, 700 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x700>
 3f0:	ldp	x3, x0, [x2]
 3f4:	stp	x3, x0, [x1]
 3f8:	cbz	x0, 410 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x410>
 3fc:	add	x0, x0, #0x8
 400:	ldaxr	w3, [x0]
 404:	add	w3, w3, #0x1
 408:	stlxr	w5, w3, [x0]
 40c:	cbnz	w5, 400 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x400>
 410:	add	x2, x2, #0x10
 414:	add	x1, x1, #0x10
 418:	cmp	x24, x2
 41c:	b.ne	3f0 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x3f0>  // b.any
 420:	ldr	x3, [x25, #8]
 424:	sub	x22, x22, x26
 428:	movi	v0.4s, #0x0
 42c:	mov	x1, x23
 430:	add	x3, x3, x22, lsl #4
 434:	cmp	x21, x23
 438:	mov	x2, x3
 43c:	b.eq	460 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x460>  // b.none
 440:	ldr	x0, [x1]
 444:	stp	x0, xzr, [x2]
 448:	add	x2, x2, #0x10
 44c:	ldr	x0, [x1, #8]
 450:	stur	x0, [x2, #-8]
 454:	str	q0, [x1], #16
 458:	cmp	x21, x1
 45c:	b.ne	440 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x440>  // b.any
 460:	add	x3, x3, x4
 464:	str	x3, [x25, #8]
 468:	cmp	x4, #0x0
 46c:	b.le	4ec <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x4ec>
 470:	adrp	x23, 0 <__pthread_key_create>
 474:	ldr	x23, [x23]
 478:	mov	x24, x23
 47c:	mov	x25, x23
 480:	ldp	x0, x21, [x20]
 484:	str	x0, [x19]
 488:	ldr	x22, [x19, #8]
 48c:	cmp	x21, x22
 490:	b.eq	4dc <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x4dc>  // b.none
 494:	cbz	x21, 4b4 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x4b4>
 498:	cbz	x25, 54c <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x54c>
 49c:	add	x0, x21, #0x8
 4a0:	ldaxr	w1, [x0]
 4a4:	add	w1, w1, #0x1
 4a8:	stlxr	w2, w1, [x0]
 4ac:	cbnz	w2, 4a0 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x4a0>
 4b0:	ldr	x22, [x19, #8]
 4b4:	cbz	x22, 4d8 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x4d8>
 4b8:	cbz	x23, 55c <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x55c>
 4bc:	add	x1, x22, #0x8
 4c0:	ldaxr	w0, [x1]
 4c4:	sub	w2, w0, #0x1
 4c8:	stlxr	w3, w2, [x1]
 4cc:	cbnz	w3, 4c0 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x4c0>
 4d0:	cmp	w0, #0x1
 4d4:	b.eq	508 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x508>  // b.none
 4d8:	str	x21, [x19, #8]
 4dc:	add	x20, x20, #0x10
 4e0:	add	x19, x19, #0x10
 4e4:	subs	x26, x26, #0x1
 4e8:	b.ne	480 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x480>  // b.any
 4ec:	ldp	x19, x20, [sp, #16]
 4f0:	ldp	x21, x22, [sp, #32]
 4f4:	ldp	x23, x24, [sp, #48]
 4f8:	ldp	x25, x26, [sp, #64]
 4fc:	ldr	x27, [sp, #80]
 500:	ldp	x29, x30, [sp], #96
 504:	ret
 508:	ldr	x1, [x22]
 50c:	mov	x0, x22
 510:	ldr	x1, [x1, #16]
 514:	blr	x1
 518:	cbz	x24, 6b8 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x6b8>
 51c:	add	x1, x22, #0xc
 520:	ldaxr	w0, [x1]
 524:	sub	w2, w0, #0x1
 528:	stlxr	w3, w2, [x1]
 52c:	cbnz	w3, 520 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x520>
 530:	cmp	w0, #0x1
 534:	b.ne	4d8 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x4d8>  // b.any
 538:	ldr	x1, [x22]
 53c:	mov	x0, x22
 540:	ldr	x1, [x1, #24]
 544:	blr	x1
 548:	b	4d8 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x4d8>
 54c:	ldr	w0, [x21, #8]
 550:	add	w0, w0, #0x1
 554:	str	w0, [x21, #8]
 558:	b	4b4 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x4b4>
 55c:	ldr	w0, [x22, #8]
 560:	sub	w1, w0, #0x1
 564:	str	w1, [x22, #8]
 568:	b	4d0 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x4d0>
 56c:	cmp	x27, #0x0
 570:	b.le	4ec <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x4ec>
 574:	adrp	x24, 0 <__pthread_key_create>
 578:	ldr	x24, [x24]
 57c:	mov	x25, x24
 580:	mov	x26, x24
 584:	nop
 588:	ldp	x0, x21, [x20]
 58c:	str	x0, [x19]
 590:	ldr	x23, [x19, #8]
 594:	cmp	x21, x23
 598:	b.eq	5e4 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x5e4>  // b.none
 59c:	cbz	x21, 5bc <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x5bc>
 5a0:	cbz	x26, 654 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x654>
 5a4:	add	x0, x21, #0x8
 5a8:	ldaxr	w1, [x0]
 5ac:	add	w1, w1, #0x1
 5b0:	stlxr	w2, w1, [x0]
 5b4:	cbnz	w2, 5a8 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x5a8>
 5b8:	ldr	x23, [x19, #8]
 5bc:	cbz	x23, 5e0 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x5e0>
 5c0:	cbz	x24, 664 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x664>
 5c4:	add	x1, x23, #0x8
 5c8:	ldaxr	w0, [x1]
 5cc:	sub	w2, w0, #0x1
 5d0:	stlxr	w3, w2, [x1]
 5d4:	cbnz	w3, 5c8 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x5c8>
 5d8:	cmp	w0, #0x1
 5dc:	b.eq	610 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x610>  // b.none
 5e0:	str	x21, [x19, #8]
 5e4:	add	x20, x20, #0x10
 5e8:	add	x19, x19, #0x10
 5ec:	subs	x22, x22, #0x1
 5f0:	b.ne	588 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x588>  // b.any
 5f4:	ldp	x19, x20, [sp, #16]
 5f8:	ldp	x21, x22, [sp, #32]
 5fc:	ldp	x23, x24, [sp, #48]
 600:	ldp	x25, x26, [sp, #64]
 604:	ldr	x27, [sp, #80]
 608:	ldp	x29, x30, [sp], #96
 60c:	ret
 610:	ldr	x1, [x23]
 614:	mov	x0, x23
 618:	ldr	x1, [x1, #16]
 61c:	blr	x1
 620:	cbz	x25, 6a8 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x6a8>
 624:	add	x1, x23, #0xc
 628:	ldaxr	w0, [x1]
 62c:	sub	w2, w0, #0x1
 630:	stlxr	w3, w2, [x1]
 634:	cbnz	w3, 628 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x628>
 638:	cmp	w0, #0x1
 63c:	b.ne	5e0 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x5e0>  // b.any
 640:	ldr	x1, [x23]
 644:	mov	x0, x23
 648:	ldr	x1, [x1, #24]
 64c:	blr	x1
 650:	b	5e0 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x5e0>
 654:	ldr	w0, [x21, #8]
 658:	add	w0, w0, #0x1
 65c:	str	w0, [x21, #8]
 660:	b	5bc <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x5bc>
 664:	ldr	w0, [x23, #8]
 668:	sub	w1, w0, #0x1
 66c:	str	w1, [x23, #8]
 670:	b	5d8 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x5d8>
 674:	ldr	x19, [x25]
 678:	cbz	x19, 684 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x684>
 67c:	mov	x0, x19
 680:	bl	0 <_ZdlPv>
 684:	stp	x27, x24, [x25]
 688:	str	x20, [x25, #16]
 68c:	ldp	x19, x20, [sp, #16]
 690:	ldp	x21, x22, [sp, #32]
 694:	ldp	x23, x24, [sp, #48]
 698:	ldp	x25, x26, [sp, #64]
 69c:	ldr	x27, [sp, #80]
 6a0:	ldp	x29, x30, [sp], #96
 6a4:	ret
 6a8:	ldr	w0, [x23, #12]
 6ac:	sub	w1, w0, #0x1
 6b0:	str	w1, [x23, #12]
 6b4:	b	638 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x638>
 6b8:	ldr	w0, [x22, #12]
 6bc:	sub	w1, w0, #0x1
 6c0:	str	w1, [x22, #12]
 6c4:	b	530 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x530>
 6c8:	mov	x2, x5
 6cc:	nop
 6d0:	ldr	q0, [x1]
 6d4:	ldr	x0, [x1, #8]
 6d8:	str	q0, [x2]
 6dc:	cbz	x0, 6ec <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x6ec>
 6e0:	ldr	w3, [x0, #8]
 6e4:	add	w3, w3, #0x1
 6e8:	str	w3, [x0, #8]
 6ec:	add	x1, x1, #0x10
 6f0:	add	x2, x2, #0x10
 6f4:	cmp	x24, x1
 6f8:	b.ne	6d0 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x6d0>  // b.any
 6fc:	b	224 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x224>
 700:	mov	x0, x21
 704:	nop
 708:	ldp	x5, x1, [x2]
 70c:	stp	x5, x1, [x0]
 710:	cbz	x1, 720 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x720>
 714:	ldr	w5, [x1, #8]
 718:	add	w5, w5, #0x1
 71c:	str	w5, [x1, #8]
 720:	add	x2, x2, #0x10
 724:	add	x0, x0, #0x10
 728:	cmp	x24, x2
 72c:	b.ne	708 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x708>  // b.any
 730:	b	424 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x424>
 734:	cmp	x22, x19
 738:	csel	x22, x22, x19, ls  // ls = plast
 73c:	lsl	x20, x22, #4
 740:	mov	x0, x20
 744:	bl	0 <_Znwm>
 748:	mov	x27, x0
 74c:	add	x20, x0, x20
 750:	ldr	x5, [x25]
 754:	b	198 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x198>
 758:	mov	x5, x27
 75c:	b	1d8 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x1d8>
 760:	mov	x20, #0x7ffffffffffffff0    	// #9223372036854775792
 764:	b	740 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x740>
 768:	adrp	x0, 0 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag>
 76c:	add	x0, x0, #0x0
 770:	bl	0 <_ZSt20__throw_length_errorPKc>

Disassembly of section .text._ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_:

0000000000000000 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_>:
   0:	stp	x29, x30, [sp, #-112]!
   4:	mov	x3, #0x7ffffffffffffff     	// #576460752303423487
   8:	mov	x29, sp
   c:	stp	x19, x20, [sp, #16]
  10:	mov	x19, x1
  14:	stp	x25, x26, [sp, #64]
  18:	ldp	x25, x20, [x0]
  1c:	stp	x21, x22, [sp, #32]
  20:	stp	x23, x24, [sp, #48]
  24:	str	x27, [sp, #80]
  28:	sub	x1, x20, x25
  2c:	cmp	x3, x1, asr #4
  30:	b.eq	268 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x268>  // b.none
  34:	mov	x22, x0
  38:	mov	x26, x2
  3c:	asr	x0, x1, #4
  40:	sub	x27, x19, x25
  44:	cbz	x0, 260 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x260>
  48:	cmp	x0, x0, lsl #1
  4c:	mov	x24, #0x7ffffffffffffff0    	// #9223372036854775792
  50:	lsl	x0, x0, #1
  54:	b.ls	24c <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x24c>  // b.plast
  58:	mov	x0, x24
  5c:	bl	0 <_Znwm>
  60:	mov	x23, x0
  64:	add	x24, x0, x24
  68:	add	x21, x0, #0x10
  6c:	movi	v0.4s, #0x0
  70:	cmp	x19, x25
  74:	ldr	q1, [x26]
  78:	str	q0, [x26]
  7c:	str	q1, [x23, x27]
  80:	b.eq	164 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x164>  // b.none
  84:	adrp	x0, 0 <__pthread_key_create>
  88:	str	q0, [sp, #96]
  8c:	mov	x27, x23
  90:	ldr	x0, [x0]
  94:	mov	x21, x25
  98:	cbz	x0, 218 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x218>
  9c:	ldr	x0, [x21]
  a0:	stp	x0, xzr, [x27]
  a4:	ldr	q0, [sp, #96]
  a8:	ldr	x0, [x21, #8]
  ac:	str	x0, [x27, #8]
  b0:	str	q0, [x21]
  b4:	ldr	x26, [x21, #8]
  b8:	cbnz	x26, f0 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0xf0>
  bc:	nop
  c0:	add	x21, x21, #0x10
  c4:	add	x27, x27, #0x10
  c8:	cmp	x19, x21
  cc:	b.eq	158 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x158>  // b.none
  d0:	ldr	x0, [x21]
  d4:	stp	x0, xzr, [x27]
  d8:	ldr	q0, [sp, #96]
  dc:	ldr	x0, [x21, #8]
  e0:	str	x0, [x27, #8]
  e4:	str	q0, [x21]
  e8:	ldr	x26, [x21, #8]
  ec:	cbz	x26, c0 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0xc0>
  f0:	add	x0, x26, #0x8
  f4:	ldaxr	w1, [x0]
  f8:	sub	w2, w1, #0x1
  fc:	stlxr	w3, w2, [x0]
 100:	cbnz	w3, f4 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0xf4>
 104:	cmp	w1, #0x1
 108:	b.ne	c0 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0xc0>  // b.any
 10c:	ldr	x1, [x26]
 110:	mov	x0, x26
 114:	ldr	x1, [x1, #16]
 118:	blr	x1
 11c:	add	x0, x26, #0xc
 120:	ldaxr	w1, [x0]
 124:	sub	w2, w1, #0x1
 128:	stlxr	w3, w2, [x0]
 12c:	cbnz	w3, 120 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x120>
 130:	cmp	w1, #0x1
 134:	b.ne	c0 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0xc0>  // b.any
 138:	ldr	x1, [x26]
 13c:	mov	x0, x26
 140:	add	x21, x21, #0x10
 144:	add	x27, x27, #0x10
 148:	ldr	x1, [x1, #24]
 14c:	blr	x1
 150:	cmp	x19, x21
 154:	b.ne	d0 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0xd0>  // b.any
 158:	sub	x21, x19, x25
 15c:	add	x21, x23, x21
 160:	add	x21, x21, #0x10
 164:	cmp	x19, x20
 168:	b.eq	1a8 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x1a8>  // b.none
 16c:	sub	x20, x20, x19
 170:	mov	x0, #0x0                   	// #0
 174:	sub	x20, x20, #0x10
 178:	mov	x1, #0x0                   	// #0
 17c:	lsr	x2, x20, #4
 180:	add	x2, x2, #0x1
 184:	nop
 188:	ldr	q0, [x19, x0]
 18c:	add	x1, x1, #0x1
 190:	cmp	x1, x2
 194:	str	q0, [x21, x0]
 198:	add	x0, x0, #0x10
 19c:	b.cc	188 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x188>  // b.lo, b.ul, b.last
 1a0:	add	x20, x20, #0x10
 1a4:	add	x21, x21, x20
 1a8:	cbz	x25, 1b4 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x1b4>
 1ac:	mov	x0, x25
 1b0:	bl	0 <_ZdlPv>
 1b4:	ldp	x19, x20, [sp, #16]
 1b8:	ldp	x25, x26, [sp, #64]
 1bc:	ldr	x27, [sp, #80]
 1c0:	stp	x23, x21, [x22]
 1c4:	str	x24, [x22, #16]
 1c8:	ldp	x21, x22, [sp, #32]
 1cc:	ldp	x23, x24, [sp, #48]
 1d0:	ldp	x29, x30, [sp], #112
 1d4:	ret
 1d8:	ldr	x1, [x26]
 1dc:	mov	x0, x26
 1e0:	ldr	x1, [x1, #16]
 1e4:	blr	x1
 1e8:	ldr	w0, [x26, #12]
 1ec:	subs	w1, w0, #0x1
 1f0:	str	w1, [x26, #12]
 1f4:	b.ne	208 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x208>  // b.any
 1f8:	ldr	x1, [x26]
 1fc:	mov	x0, x26
 200:	ldr	x1, [x1, #24]
 204:	blr	x1
 208:	add	x21, x21, #0x10
 20c:	add	x27, x27, #0x10
 210:	cmp	x19, x21
 214:	b.eq	158 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x158>  // b.none
 218:	ldr	x0, [x21]
 21c:	stp	x0, xzr, [x27]
 220:	ldr	q0, [sp, #96]
 224:	ldr	x0, [x21, #8]
 228:	str	x0, [x27, #8]
 22c:	str	q0, [x21]
 230:	ldr	x26, [x21, #8]
 234:	cbz	x26, 208 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x208>
 238:	ldr	w0, [x26, #8]
 23c:	subs	w1, w0, #0x1
 240:	str	w1, [x26, #8]
 244:	b.ne	208 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x208>  // b.any
 248:	b	1d8 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x1d8>
 24c:	cbnz	x0, 274 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x274>
 250:	mov	x21, #0x10                  	// #16
 254:	mov	x24, #0x0                   	// #0
 258:	mov	x23, #0x0                   	// #0
 25c:	b	6c <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x6c>
 260:	mov	x24, #0x10                  	// #16
 264:	b	58 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x58>
 268:	adrp	x0, 0 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_>
 26c:	add	x0, x0, #0x0
 270:	bl	0 <_ZSt20__throw_length_errorPKc>
 274:	cmp	x0, x3
 278:	csel	x0, x0, x3, ls  // ls = plast
 27c:	lsl	x24, x0, #4
 280:	b	58 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x58>

Disassembly of section .text._ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj:

0000000000000000 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj>:
   0:	stp	x29, x30, [sp, #-288]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	add	x20, sp, #0xf0
  10:	mov	x19, x0
  14:	stp	x21, x22, [sp, #32]
  18:	mov	x22, x8
  1c:	and	w0, w1, #0x1
  20:	stp	x23, x24, [sp, #48]
  24:	and	w23, w1, #0x2
  28:	stp	x25, x26, [sp, #64]
  2c:	add	x26, sp, #0xa0
  30:	stp	x27, x28, [sp, #80]
  34:	add	x28, sp, #0xd0
  38:	str	w0, [sp, #100]
  3c:	cbnz	w23, 610 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x610>
  40:	ldr	w0, [x19, #32]
  44:	cbnz	w0, 54 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x54>
  48:	ldp	x1, x0, [x19, #8]
  4c:	cmp	x1, x0
  50:	b.ls	230 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x230>  // b.plast
  54:	ldr	w1, [x19, #36]
  58:	mov	x0, x19
  5c:	mov	x8, x20
  60:	mov	x21, x20
  64:	bl	0 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj>
  68:	ldrb	w1, [sp, #248]
  6c:	ldrb	w0, [sp, #168]
  70:	and	w2, w1, #0x1
  74:	and	w1, w1, #0xfffffffd
  78:	strb	w1, [sp, #248]
  7c:	bfxil	w0, w2, #0, #1
  80:	orr	w0, w0, #0x2
  84:	strb	w0, [sp, #168]
  88:	ldr	x0, [sp, #240]
  8c:	cbnz	w2, 218 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x218>
  90:	str	w0, [sp, #160]
  94:	mov	x0, x20
  98:	bl	0 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj>
  9c:	ldrb	w0, [sp, #168]
  a0:	and	w1, w0, #0x1
  a4:	bfi	w0, w1, #1, #1
  a8:	strb	w0, [sp, #168]
  ac:	cbnz	w1, 790 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x790>
  b0:	ldr	w0, [sp, #160]
  b4:	cbz	w0, 820 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x820>
  b8:	cmp	w0, #0x1
  bc:	b.eq	694 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x694>  // b.none
  c0:	cmp	w0, #0x2
  c4:	b.ne	5f4 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x5f4>  // b.any
  c8:	mov	x0, x19
  cc:	mov	x8, x20
  d0:	bl	3148 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv>
  d4:	ldr	x0, [sp, #240]
  d8:	ands	x0, x0, #0xfffffffffffffffe
  dc:	b.eq	224 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x224>  // b.none
  e0:	ldrb	w1, [sp, #152]
  e4:	str	x0, [sp, #144]
  e8:	orr	w0, w1, #0x3
  ec:	strb	w0, [sp, #152]
  f0:	mov	x0, x26
  f4:	bl	0 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj>
  f8:	ldrb	w0, [sp, #152]
  fc:	and	w1, w0, #0x1
 100:	bfi	w0, w1, #1, #1
 104:	strb	w0, [sp, #152]
 108:	cbnz	w1, 5a8 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x5a8>
 10c:	ldr	w0, [sp, #144]
 110:	cmp	w0, #0x2
 114:	b.ne	244 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x244>  // b.any
 118:	mov	x0, x19
 11c:	mov	w1, #0x4                   	// #4
 120:	mov	x8, x21
 124:	bl	0 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj>
 128:	ldrb	w1, [sp, #248]
 12c:	ldrb	w0, [sp, #184]
 130:	and	w2, w1, #0x1
 134:	and	w1, w1, #0xfffffffd
 138:	strb	w1, [sp, #248]
 13c:	bfxil	w0, w2, #0, #1
 140:	orr	w0, w0, #0x2
 144:	strb	w0, [sp, #184]
 148:	ldr	x0, [sp, #240]
 14c:	cbz	w2, 260 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x260>
 150:	str	x0, [sp, #176]
 154:	mov	x0, x21
 158:	str	xzr, [sp, #240]
 15c:	bl	0 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj>
 160:	ldrb	w0, [sp, #184]
 164:	and	w1, w0, #0x1
 168:	bfi	w0, w1, #1, #1
 16c:	strb	w0, [sp, #184]
 170:	cbz	w1, 280 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x280>
 174:	ldrb	w1, [sp, #248]
 178:	add	x25, sp, #0xb0
 17c:	ldr	x2, [sp, #176]
 180:	and	w0, w0, #0xfffffffd
 184:	orr	w1, w1, #0x3
 188:	str	xzr, [sp, #176]
 18c:	strb	w0, [sp, #184]
 190:	str	x2, [sp, #240]
 194:	strb	w1, [sp, #248]
 198:	mov	x0, x25
 19c:	bl	0 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj>
 1a0:	ldrb	w0, [sp, #248]
 1a4:	and	w1, w0, #0x1
 1a8:	bfi	w0, w1, #1, #1
 1ac:	strb	w0, [sp, #248]
 1b0:	cbz	w1, 364 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x364>
 1b4:	ldr	x2, [sp, #240]
 1b8:	and	w1, w0, #0xfffffffd
 1bc:	mov	x0, x21
 1c0:	str	xzr, [sp, #240]
 1c4:	orr	x2, x2, #0x1
 1c8:	str	x2, [sp, #136]
 1cc:	strb	w1, [sp, #248]
 1d0:	bl	0 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj>
 1d4:	ldr	x0, [sp, #136]
 1d8:	ands	x0, x0, #0xfffffffffffffffe
 1dc:	b.eq	358 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x358>  // b.none
 1e0:	ldrb	w1, [x22, #8]
 1e4:	str	x0, [x22]
 1e8:	orr	w0, w1, #0x3
 1ec:	strb	w0, [x22, #8]
 1f0:	add	x0, sp, #0x90
 1f4:	bl	0 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj>
 1f8:	mov	x0, x22
 1fc:	ldp	x19, x20, [sp, #16]
 200:	ldp	x21, x22, [sp, #32]
 204:	ldp	x23, x24, [sp, #48]
 208:	ldp	x25, x26, [sp, #64]
 20c:	ldp	x27, x28, [sp, #80]
 210:	ldp	x29, x30, [sp], #288
 214:	ret
 218:	str	x0, [sp, #160]
 21c:	str	xzr, [sp, #240]
 220:	b	94 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x94>
 224:	mov	x0, x26
 228:	bl	0 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj>
 22c:	b	40 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x40>
 230:	ldrb	w1, [sp, #152]
 234:	mov	w0, #0x0                   	// #0
 238:	stp	wzr, wzr, [sp, #144]
 23c:	and	w1, w1, #0xfffffffc
 240:	strb	w1, [sp, #152]
 244:	ldrb	w1, [x22, #8]
 248:	ldr	w2, [sp, #148]
 24c:	and	w1, w1, #0xfffffffc
 250:	stp	w0, w2, [x22]
 254:	orr	w0, w1, #0x2
 258:	strb	w0, [x22, #8]
 25c:	b	1f0 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x1f0>
 260:	str	w0, [sp, #176]
 264:	mov	x0, x21
 268:	bl	0 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj>
 26c:	ldrb	w0, [sp, #184]
 270:	and	w1, w0, #0x1
 274:	bfi	w0, w1, #1, #1
 278:	strb	w0, [sp, #184]
 27c:	cbnz	w1, 174 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x174>
 280:	ldr	w24, [sp, #176]
 284:	tbz	w24, #3, 3fc <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x3fc>
 288:	and	w24, w24, #0x7
 28c:	add	x25, sp, #0xb0
 290:	mov	w27, #0x0                   	// #0
 294:	b	310 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x310>
 298:	str	w0, [sp, #208]
 29c:	ldrb	w0, [sp, #184]
 2a0:	tbnz	w0, #1, 5a0 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x5a0>
 2a4:	mov	x0, x25
 2a8:	bl	0 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj>
 2ac:	ldrb	w1, [sp, #216]
 2b0:	ldrb	w0, [sp, #184]
 2b4:	and	w2, w1, #0x1
 2b8:	and	w1, w1, #0xfffffffd
 2bc:	strb	w1, [sp, #216]
 2c0:	bfxil	w0, w2, #0, #1
 2c4:	orr	w0, w0, #0x2
 2c8:	strb	w0, [sp, #184]
 2cc:	cbnz	w2, 494 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x494>
 2d0:	ldr	w0, [sp, #208]
 2d4:	str	w0, [sp, #176]
 2d8:	mov	x0, x28
 2dc:	bl	0 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj>
 2e0:	mov	x0, x21
 2e4:	bl	0 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj>
 2e8:	ldrb	w0, [sp, #184]
 2ec:	and	w1, w0, #0x1
 2f0:	bfi	w0, w1, #1, #1
 2f4:	strb	w0, [sp, #184]
 2f8:	cbnz	w1, 76c <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x76c>
 2fc:	ldr	w1, [sp, #176]
 300:	and	w0, w1, #0x7
 304:	lsl	w0, w0, w27
 308:	orr	w24, w24, w0
 30c:	tbz	w1, #3, 754 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x754>
 310:	mov	x0, x19
 314:	mov	w1, #0x4                   	// #4
 318:	mov	x8, x21
 31c:	bl	0 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj>
 320:	ldrb	w1, [sp, #248]
 324:	add	w27, w27, #0x3
 328:	ldrb	w0, [sp, #216]
 32c:	and	w2, w1, #0x1
 330:	and	w1, w1, #0xfffffffd
 334:	strb	w1, [sp, #248]
 338:	bfxil	w0, w2, #0, #1
 33c:	orr	w0, w0, #0x2
 340:	strb	w0, [sp, #216]
 344:	ldr	x0, [sp, #240]
 348:	cbz	w2, 298 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x298>
 34c:	str	x0, [sp, #208]
 350:	str	xzr, [sp, #240]
 354:	b	29c <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x29c>
 358:	add	x0, sp, #0x90
 35c:	bl	0 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj>
 360:	b	3c <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x3c>
 364:	mov	x0, x21
 368:	bl	0 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj>
 36c:	ldr	w0, [x19, #32]
 370:	mov	w1, #0x0                   	// #0
 374:	cmp	w0, #0x1f
 378:	b.hi	47c <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x47c>  // b.pmore
 37c:	str	w1, [x19, #32]
 380:	mov	x0, x19
 384:	mov	w1, #0x20                  	// #32
 388:	mov	x8, x21
 38c:	bl	0 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj>
 390:	ldrb	w1, [sp, #248]
 394:	ldrb	w0, [sp, #168]
 398:	and	w2, w1, #0x1
 39c:	and	w1, w1, #0xfffffffd
 3a0:	strb	w1, [sp, #248]
 3a4:	bfxil	w0, w2, #0, #1
 3a8:	orr	w0, w0, #0x2
 3ac:	strb	w0, [sp, #168]
 3b0:	ldr	x0, [sp, #240]
 3b4:	cbnz	w2, 418 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x418>
 3b8:	str	w0, [sp, #160]
 3bc:	mov	x0, x21
 3c0:	bl	0 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj>
 3c4:	ldrb	w0, [sp, #168]
 3c8:	and	w1, w0, #0x1
 3cc:	bfi	w0, w1, #1, #1
 3d0:	strb	w0, [sp, #168]
 3d4:	cbz	w1, 43c <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x43c>
 3d8:	ldr	x1, [sp, #160]
 3dc:	and	w0, w0, #0xfffffffd
 3e0:	str	xzr, [sp, #160]
 3e4:	orr	x1, x1, #0x1
 3e8:	str	x1, [sp, #136]
 3ec:	strb	w0, [sp, #168]
 3f0:	mov	x0, x26
 3f4:	bl	0 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj>
 3f8:	b	1d4 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x1d4>
 3fc:	ldrb	w0, [sp, #248]
 400:	add	x25, sp, #0xb0
 404:	str	w24, [sp, #240]
 408:	and	w0, w0, #0xfffffffc
 40c:	orr	w0, w0, #0x2
 410:	strb	w0, [sp, #248]
 414:	b	198 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x198>
 418:	str	x0, [sp, #160]
 41c:	mov	x0, x21
 420:	str	xzr, [sp, #240]
 424:	bl	0 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj>
 428:	ldrb	w0, [sp, #168]
 42c:	and	w1, w0, #0x1
 430:	bfi	w0, w1, #1, #1
 434:	strb	w0, [sp, #168]
 438:	cbnz	w1, 3d8 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x3d8>
 43c:	ldr	w2, [x19, #32]
 440:	ldp	x3, x0, [x19, #8]
 444:	cbnz	w2, 4a4 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x4a4>
 448:	cmp	x0, x3
 44c:	b.cc	4a4 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x4a4>  // b.lo, b.ul, b.last
 450:	bl	0 <_ZNSt3_V216generic_categoryEv>
 454:	mov	x1, x0
 458:	ldr	x0, [sp, #120]
 45c:	mov	x2, #0x54                  	// #84
 460:	add	x8, sp, #0x88
 464:	bfxil	x0, x2, #0, #32
 468:	adrp	x2, 0 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj>
 46c:	add	x2, x2, #0x0
 470:	str	x0, [sp, #120]
 474:	bl	0 <_ZN4llvm17createStringErrorESt10error_codePKc>
 478:	b	3f0 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x3f0>
 47c:	ldr	x2, [x19, #24]
 480:	sub	w0, w0, #0x20
 484:	mov	w1, #0x20                  	// #32
 488:	lsr	x0, x2, x0
 48c:	str	x0, [x19, #24]
 490:	b	37c <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x37c>
 494:	ldr	x0, [sp, #208]
 498:	str	x0, [sp, #176]
 49c:	str	xzr, [sp, #208]
 4a0:	b	2d8 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x2d8>
 4a4:	lsl	x0, x0, #3
 4a8:	ldr	w27, [sp, #160]
 4ac:	sub	x2, x0, w2, uxtw
 4b0:	mov	w0, #0x20                  	// #32
 4b4:	str	x2, [sp, #104]
 4b8:	umaddl	x27, w27, w0, x2
 4bc:	cmp	x3, x27, lsr #3
 4c0:	lsr	x0, x27, #3
 4c4:	b.cs	5cc <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x5cc>  // b.hs, b.nlast
 4c8:	bl	0 <_ZNSt3_V216generic_categoryEv>
 4cc:	mov	x24, x0
 4d0:	adrp	x3, 0 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj>
 4d4:	adrp	x1, 0 <_ZTVN4llvm18raw_string_ostreamE>
 4d8:	ldr	x2, [sp, #104]
 4dc:	adrp	x5, 0 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj>
 4e0:	ldr	x1, [x1]
 4e4:	add	x5, x5, #0x0
 4e8:	ldr	x4, [x3]
 4ec:	add	x3, x1, #0x10
 4f0:	mov	w6, #0x1                   	// #1
 4f4:	add	x0, x25, #0x10
 4f8:	add	x4, x4, #0x10
 4fc:	mov	x1, x28
 500:	stp	x0, xzr, [sp, #176]
 504:	mov	x0, x21
 508:	strb	wzr, [sp, #192]
 50c:	stp	x4, x5, [sp, #208]
 510:	stp	x2, x27, [sp, #224]
 514:	stp	x3, xzr, [sp, #240]
 518:	stp	xzr, xzr, [sp, #256]
 51c:	str	w6, [sp, #272]
 520:	str	x25, [sp, #280]
 524:	bl	0 <_ZN4llvm11raw_ostreamlsERKNS_18format_object_baseE>
 528:	ldr	x0, [sp, #248]
 52c:	ldr	x1, [sp, #264]
 530:	cmp	x1, x0
 534:	b.eq	540 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x540>  // b.none
 538:	mov	x0, x21
 53c:	bl	0 <_ZN4llvm11raw_ostream14flush_nonemptyEv>
 540:	ldr	x27, [sp, #112]
 544:	mov	w1, #0x104                 	// #260
 548:	ldr	x2, [sp, #280]
 54c:	mov	x0, #0x54                  	// #84
 550:	bfxil	x27, x0, #0, #32
 554:	mov	x0, #0x40                  	// #64
 558:	stp	x2, xzr, [sp, #208]
 55c:	add	x25, x25, #0x10
 560:	strh	w1, [sp, #224]
 564:	bl	0 <_Znwm>
 568:	mov	x3, x24
 56c:	mov	x2, x27
 570:	mov	x1, x28
 574:	mov	x24, x0
 578:	bl	0 <_ZN4llvm11StringErrorC1ERKNS_5TwineESt10error_code>
 57c:	orr	x24, x24, #0x1
 580:	mov	x0, x21
 584:	str	x24, [sp, #136]
 588:	bl	0 <_ZN4llvm18raw_string_ostreamD1Ev>
 58c:	ldr	x0, [sp, #176]
 590:	cmp	x0, x25
 594:	b.eq	3f0 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x3f0>  // b.none
 598:	bl	0 <_ZdlPv>
 59c:	b	3f0 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x3f0>
 5a0:	mov	x0, x25
 5a4:	bl	0 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj>
 5a8:	ldrb	w1, [x22, #8]
 5ac:	and	w0, w0, #0xfffffffd
 5b0:	ldr	x2, [sp, #144]
 5b4:	orr	w1, w1, #0x3
 5b8:	str	x2, [x22]
 5bc:	strb	w1, [x22, #8]
 5c0:	str	xzr, [sp, #144]
 5c4:	strb	w0, [sp, #152]
 5c8:	b	1f0 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x1f0>
 5cc:	and	x0, x0, #0xfffffffffffffff8
 5d0:	and	w1, w27, #0x3f
 5d4:	cmp	x0, x3
 5d8:	b.hi	cb0 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0xcb0>  // b.pmore
 5dc:	str	x0, [x19, #16]
 5e0:	str	wzr, [x19, #32]
 5e4:	cbnz	w1, 7d8 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x7d8>
 5e8:	mov	x0, #0x1                   	// #1
 5ec:	str	x0, [sp, #136]
 5f0:	b	3f0 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x3f0>
 5f4:	ldrb	w1, [sp, #152]
 5f8:	mov	w2, #0x3                   	// #3
 5fc:	stp	w2, w0, [sp, #144]
 600:	and	w1, w1, #0xfffffffc
 604:	orr	w0, w1, #0x2
 608:	strb	w0, [sp, #152]
 60c:	b	f0 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0xf0>
 610:	ldr	w0, [x19, #32]
 614:	cbnz	w0, 624 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x624>
 618:	ldp	x1, x0, [x19, #8]
 61c:	cmp	x1, x0
 620:	b.ls	230 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x230>  // b.plast
 624:	ldr	w1, [x19, #36]
 628:	mov	x0, x19
 62c:	mov	x8, x20
 630:	mov	x21, x20
 634:	bl	0 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj>
 638:	ldrb	w1, [sp, #248]
 63c:	ldrb	w0, [sp, #168]
 640:	and	w2, w1, #0x1
 644:	and	w1, w1, #0xfffffffd
 648:	strb	w1, [sp, #248]
 64c:	bfxil	w0, w2, #0, #1
 650:	orr	w0, w0, #0x2
 654:	strb	w0, [sp, #168]
 658:	ldr	x0, [sp, #240]
 65c:	cbz	w2, 958 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x958>
 660:	str	x0, [sp, #160]
 664:	str	xzr, [sp, #240]
 668:	mov	x0, x20
 66c:	bl	0 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj>
 670:	ldrb	w0, [sp, #168]
 674:	and	w1, w0, #0x1
 678:	bfi	w0, w1, #1, #1
 67c:	strb	w0, [sp, #168]
 680:	cbnz	w1, 790 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x790>
 684:	ldr	w0, [sp, #160]
 688:	cbz	w0, 820 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x820>
 68c:	cmp	w0, #0x1
 690:	b.ne	5f4 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x5f4>  // b.any
 694:	mov	x0, x19
 698:	mov	w1, #0x8                   	// #8
 69c:	mov	x8, x21
 6a0:	bl	0 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj>
 6a4:	ldrb	w1, [sp, #248]
 6a8:	ldrb	w0, [sp, #184]
 6ac:	and	w2, w1, #0x1
 6b0:	and	w1, w1, #0xfffffffd
 6b4:	strb	w1, [sp, #248]
 6b8:	bfxil	w0, w2, #0, #1
 6bc:	orr	w0, w0, #0x2
 6c0:	strb	w0, [sp, #184]
 6c4:	ldr	x0, [sp, #240]
 6c8:	cbnz	w2, 9a0 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x9a0>
 6cc:	str	w0, [sp, #176]
 6d0:	mov	x0, x21
 6d4:	bl	0 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj>
 6d8:	ldrb	w0, [sp, #184]
 6dc:	and	w1, w0, #0x1
 6e0:	bfi	w0, w1, #1, #1
 6e4:	strb	w0, [sp, #184]
 6e8:	cbz	w1, 97c <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x97c>
 6ec:	ldrb	w1, [sp, #248]
 6f0:	add	x25, sp, #0xb0
 6f4:	ldr	x2, [sp, #176]
 6f8:	and	w0, w0, #0xfffffffd
 6fc:	orr	w1, w1, #0x3
 700:	str	xzr, [sp, #176]
 704:	strb	w0, [sp, #184]
 708:	str	x2, [sp, #240]
 70c:	strb	w1, [sp, #248]
 710:	mov	x0, x25
 714:	bl	0 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj>
 718:	ldrb	w0, [sp, #248]
 71c:	and	w1, w0, #0x1
 720:	bfi	w0, w1, #1, #1
 724:	strb	w0, [sp, #248]
 728:	cbnz	w1, 9ac <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x9ac>
 72c:	ldrb	w0, [sp, #152]
 730:	mov	w2, #0x2                   	// #2
 734:	ldr	w1, [sp, #240]
 738:	and	w0, w0, #0xfffffffc
 73c:	stp	w2, w1, [sp, #144]
 740:	orr	w0, w0, w2
 744:	strb	w0, [sp, #152]
 748:	mov	x0, x21
 74c:	bl	0 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj>
 750:	b	f0 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0xf0>
 754:	ldrb	w0, [sp, #248]
 758:	str	w24, [sp, #240]
 75c:	and	w0, w0, #0xfffffffc
 760:	orr	w0, w0, #0x2
 764:	strb	w0, [sp, #248]
 768:	b	198 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x198>
 76c:	ldrb	w1, [sp, #248]
 770:	and	w0, w0, #0xfffffffd
 774:	ldr	x2, [sp, #176]
 778:	orr	w1, w1, #0x3
 77c:	str	xzr, [sp, #176]
 780:	strb	w0, [sp, #184]
 784:	str	x2, [sp, #240]
 788:	strb	w1, [sp, #248]
 78c:	b	198 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x198>
 790:	ldrb	w2, [sp, #152]
 794:	ldrb	w1, [sp, #168]
 798:	ldr	x0, [sp, #160]
 79c:	and	w1, w1, #0xfffffffd
 7a0:	orr	w2, w2, #0x3
 7a4:	strb	w2, [sp, #152]
 7a8:	str	xzr, [sp, #160]
 7ac:	ands	x0, x0, #0xfffffffffffffffe
 7b0:	strb	w1, [sp, #168]
 7b4:	b.ne	928 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x928>  // b.any
 7b8:	adrp	x3, 0 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj>
 7bc:	adrp	x1, 0 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj>
 7c0:	adrp	x0, 0 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj>
 7c4:	add	x3, x3, #0x0
 7c8:	add	x1, x1, #0x0
 7cc:	add	x0, x0, #0x0
 7d0:	mov	w2, #0x1ce                 	// #462
 7d4:	bl	0 <__assert_fail>
 7d8:	mov	x0, x19
 7dc:	mov	x8, x21
 7e0:	bl	0 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj>
 7e4:	ldrb	w0, [sp, #248]
 7e8:	and	w1, w0, #0x1
 7ec:	bfi	w0, w1, #1, #1
 7f0:	strb	w0, [sp, #248]
 7f4:	cbnz	w1, 960 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x960>
 7f8:	mov	x0, #0x1                   	// #1
 7fc:	str	x0, [sp, #208]
 800:	mov	x0, x21
 804:	bl	0 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj>
 808:	ldr	x0, [sp, #208]
 80c:	ands	x0, x0, #0xfffffffffffffffe
 810:	b.eq	5e8 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x5e8>  // b.none
 814:	orr	x0, x0, #0x1
 818:	str	x0, [sp, #136]
 81c:	b	3f0 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x3f0>
 820:	ldr	w0, [sp, #100]
 824:	cbnz	w0, 93c <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x93c>
 828:	ldr	w0, [x19, #72]
 82c:	cbz	w0, af0 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0xaf0>
 830:	ldr	w1, [x19, #32]
 834:	mov	w5, #0x0                   	// #0
 838:	cmp	w1, #0x1f
 83c:	b.ls	854 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x854>  // b.plast
 840:	ldr	x2, [x19, #24]
 844:	sub	w1, w1, #0x20
 848:	mov	w5, #0x20                  	// #32
 84c:	lsr	x1, x2, x1
 850:	str	x1, [x19, #24]
 854:	ldr	x4, [x19, #64]
 858:	ubfiz	x0, x0, #5, #32
 85c:	sub	x0, x0, #0x20
 860:	add	x2, x19, #0x28
 864:	add	x3, x4, x0
 868:	mov	x1, x3
 86c:	ldr	x25, [x2, #8]
 870:	ldr	q0, [x1, #8]!
 874:	str	w5, [x19, #32]
 878:	ldr	x24, [x19, #40]
 87c:	ldr	w0, [x4, x0]
 880:	str	w0, [x19, #36]
 884:	mov	x0, x2
 888:	stur	q0, [x19, #40]
 88c:	cmp	x24, x25
 890:	ldr	x2, [x1, #16]
 894:	str	x2, [x0, #16]
 898:	stp	xzr, xzr, [x3, #8]
 89c:	str	xzr, [x1, #16]
 8a0:	b.eq	9d8 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x9d8>  // b.none
 8a4:	adrp	x0, 0 <__pthread_key_create>
 8a8:	mov	x27, x24
 8ac:	ldr	x0, [x0]
 8b0:	cbnz	x0, 8c4 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x8c4>
 8b4:	b	be8 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0xbe8>
 8b8:	add	x27, x27, #0x10
 8bc:	cmp	x25, x27
 8c0:	b.eq	9d8 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x9d8>  // b.none
 8c4:	ldr	x0, [x27, #8]
 8c8:	cbz	x0, 8b8 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x8b8>
 8cc:	add	x1, x0, #0x8
 8d0:	ldaxr	w2, [x1]
 8d4:	sub	w3, w2, #0x1
 8d8:	stlxr	w4, w3, [x1]
 8dc:	cbnz	w4, 8d0 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x8d0>
 8e0:	cmp	w2, #0x1
 8e4:	b.ne	8b8 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x8b8>  // b.any
 8e8:	ldr	x1, [x0]
 8ec:	str	x0, [sp, #104]
 8f0:	ldr	x1, [x1, #16]
 8f4:	blr	x1
 8f8:	ldr	x0, [sp, #104]
 8fc:	add	x1, x0, #0xc
 900:	ldaxr	w2, [x1]
 904:	sub	w3, w2, #0x1
 908:	stlxr	w4, w3, [x1]
 90c:	cbnz	w4, 900 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x900>
 910:	cmp	w2, #0x1
 914:	b.ne	8b8 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x8b8>  // b.any
 918:	ldr	x1, [x0]
 91c:	ldr	x1, [x1, #24]
 920:	blr	x1
 924:	b	8b8 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x8b8>
 928:	str	x0, [sp, #144]
 92c:	b	f0 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0xf0>
 930:	ldr	x0, [x25, #8]
 934:	cbz	x0, 93c <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x93c>
 938:	bl	0 <_ZdlPv>
 93c:	ldrb	w0, [sp, #152]
 940:	mov	w1, #0x1                   	// #1
 944:	stp	w1, wzr, [sp, #144]
 948:	and	w0, w0, #0xfffffffc
 94c:	orr	w0, w0, #0x2
 950:	strb	w0, [sp, #152]
 954:	b	f0 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0xf0>
 958:	str	w0, [sp, #160]
 95c:	b	668 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x668>
 960:	ldr	x1, [sp, #240]
 964:	and	w0, w0, #0xfffffffd
 968:	str	xzr, [sp, #240]
 96c:	orr	x1, x1, #0x1
 970:	str	x1, [sp, #208]
 974:	strb	w0, [sp, #248]
 978:	b	800 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x800>
 97c:	ldr	w27, [sp, #176]
 980:	tbnz	w27, #7, b08 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0xb08>
 984:	ldrb	w0, [sp, #248]
 988:	add	x25, sp, #0xb0
 98c:	str	w27, [sp, #240]
 990:	and	w0, w0, #0xfffffffc
 994:	orr	w0, w0, #0x2
 998:	strb	w0, [sp, #248]
 99c:	b	710 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x710>
 9a0:	str	x0, [sp, #176]
 9a4:	str	xzr, [sp, #240]
 9a8:	b	6d0 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x6d0>
 9ac:	ldrb	w2, [sp, #152]
 9b0:	and	w0, w0, #0xfffffffd
 9b4:	ldr	x1, [sp, #240]
 9b8:	orr	w2, w2, #0x3
 9bc:	strb	w2, [sp, #152]
 9c0:	str	xzr, [sp, #240]
 9c4:	ands	x1, x1, #0xfffffffffffffffe
 9c8:	strb	w0, [sp, #248]
 9cc:	b.eq	7b8 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x7b8>  // b.none
 9d0:	str	x1, [sp, #144]
 9d4:	b	748 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x748>
 9d8:	cbz	x24, 9e4 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x9e4>
 9dc:	mov	x0, x24
 9e0:	bl	0 <_ZdlPv>
 9e4:	ldp	w0, w2, [x19, #72]
 9e8:	mov	w1, w0
 9ec:	sub	x1, x1, #0x1
 9f0:	cmp	x1, x2
 9f4:	b.hi	c90 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0xc90>  // b.pmore
 9f8:	sub	w0, w0, #0x1
 9fc:	str	w0, [x19, #72]
 a00:	ldr	x25, [x19, #64]
 a04:	ubfiz	x0, x0, #5, #32
 a08:	add	x25, x25, x0
 a0c:	ldp	x27, x24, [x25, #8]
 a10:	cmp	x27, x24
 a14:	b.eq	930 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x930>  // b.none
 a18:	adrp	x0, 0 <__pthread_key_create>
 a1c:	ldr	x0, [x0]
 a20:	cbnz	x0, a34 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0xa34>
 a24:	b	ad4 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0xad4>
 a28:	add	x27, x27, #0x10
 a2c:	cmp	x24, x27
 a30:	b.eq	930 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x930>  // b.none
 a34:	ldr	x0, [x27, #8]
 a38:	cbz	x0, a28 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0xa28>
 a3c:	add	x1, x0, #0x8
 a40:	ldaxr	w2, [x1]
 a44:	sub	w3, w2, #0x1
 a48:	stlxr	w4, w3, [x1]
 a4c:	cbnz	w4, a40 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0xa40>
 a50:	cmp	w2, #0x1
 a54:	b.ne	a28 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0xa28>  // b.any
 a58:	ldr	x1, [x0]
 a5c:	str	x0, [sp, #104]
 a60:	ldr	x1, [x1, #16]
 a64:	blr	x1
 a68:	ldr	x0, [sp, #104]
 a6c:	add	x1, x0, #0xc
 a70:	ldaxr	w2, [x1]
 a74:	sub	w3, w2, #0x1
 a78:	stlxr	w4, w3, [x1]
 a7c:	cbnz	w4, a70 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0xa70>
 a80:	cmp	w2, #0x1
 a84:	b.ne	a28 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0xa28>  // b.any
 a88:	ldr	x1, [x0]
 a8c:	ldr	x1, [x1, #24]
 a90:	blr	x1
 a94:	b	a28 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0xa28>
 a98:	ldr	x1, [x0]
 a9c:	str	x0, [sp, #104]
 aa0:	ldr	x1, [x1, #16]
 aa4:	blr	x1
 aa8:	ldr	x0, [sp, #104]
 aac:	ldr	w1, [x0, #12]
 ab0:	subs	w2, w1, #0x1
 ab4:	str	w2, [x0, #12]
 ab8:	b.ne	ac8 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0xac8>  // b.any
 abc:	ldr	x1, [x0]
 ac0:	ldr	x1, [x1, #24]
 ac4:	blr	x1
 ac8:	add	x27, x27, #0x10
 acc:	cmp	x24, x27
 ad0:	b.eq	930 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x930>  // b.none
 ad4:	ldr	x0, [x27, #8]
 ad8:	cbz	x0, ac8 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0xac8>
 adc:	ldr	w1, [x0, #8]
 ae0:	subs	w2, w1, #0x1
 ae4:	str	w2, [x0, #8]
 ae8:	b.ne	ac8 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0xac8>  // b.any
 aec:	b	a98 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0xa98>
 af0:	ldrb	w0, [sp, #152]
 af4:	stp	wzr, wzr, [sp, #144]
 af8:	and	w0, w0, #0xfffffffc
 afc:	orr	w0, w0, #0x2
 b00:	strb	w0, [sp, #152]
 b04:	b	f0 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0xf0>
 b08:	and	w27, w27, #0x7f
 b0c:	add	x25, sp, #0xb0
 b10:	mov	w24, #0x0                   	// #0
 b14:	b	b90 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0xb90>
 b18:	str	w0, [sp, #240]
 b1c:	ldrb	w0, [sp, #184]
 b20:	tbnz	w0, #1, 5a0 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x5a0>
 b24:	mov	x0, x25
 b28:	bl	0 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj>
 b2c:	ldrb	w1, [sp, #248]
 b30:	ldrb	w0, [sp, #184]
 b34:	and	w2, w1, #0x1
 b38:	and	w1, w1, #0xfffffffd
 b3c:	strb	w1, [sp, #248]
 b40:	bfxil	w0, w2, #0, #1
 b44:	orr	w0, w0, #0x2
 b48:	strb	w0, [sp, #184]
 b4c:	cbnz	w2, bd8 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0xbd8>
 b50:	ldr	w0, [sp, #240]
 b54:	str	w0, [sp, #176]
 b58:	mov	x0, x21
 b5c:	bl	0 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj>
 b60:	mov	x0, x28
 b64:	bl	0 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj>
 b68:	ldrb	w0, [sp, #184]
 b6c:	and	w1, w0, #0x1
 b70:	bfi	w0, w1, #1, #1
 b74:	strb	w0, [sp, #184]
 b78:	cbnz	w1, c54 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0xc54>
 b7c:	ldr	w1, [sp, #176]
 b80:	and	w0, w1, #0x7f
 b84:	lsl	w0, w0, w24
 b88:	orr	w27, w27, w0
 b8c:	tbz	w1, #7, c78 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0xc78>
 b90:	mov	x0, x19
 b94:	mov	w1, #0x8                   	// #8
 b98:	mov	x8, x28
 b9c:	bl	0 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj>
 ba0:	ldrb	w1, [sp, #216]
 ba4:	add	w24, w24, #0x7
 ba8:	ldrb	w0, [sp, #248]
 bac:	and	w2, w1, #0x1
 bb0:	and	w1, w1, #0xfffffffd
 bb4:	strb	w1, [sp, #216]
 bb8:	bfxil	w0, w2, #0, #1
 bbc:	orr	w0, w0, #0x2
 bc0:	strb	w0, [sp, #248]
 bc4:	ldr	x0, [sp, #208]
 bc8:	cbz	w2, b18 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0xb18>
 bcc:	str	xzr, [sp, #208]
 bd0:	str	x0, [sp, #240]
 bd4:	b	b1c <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0xb1c>
 bd8:	ldr	x0, [sp, #240]
 bdc:	str	x0, [sp, #176]
 be0:	str	xzr, [sp, #240]
 be4:	b	b58 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0xb58>
 be8:	mov	x1, x24
 bec:	b	bfc <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0xbfc>
 bf0:	add	x1, x1, #0x10
 bf4:	cmp	x1, x25
 bf8:	b.eq	9d8 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x9d8>  // b.none
 bfc:	ldr	x27, [x1, #8]
 c00:	cbz	x27, bf0 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0xbf0>
 c04:	ldr	w0, [x27, #8]
 c08:	subs	w2, w0, #0x1
 c0c:	str	w2, [x27, #8]
 c10:	b.ne	bf0 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0xbf0>  // b.any
 c14:	ldr	x2, [x27]
 c18:	str	x1, [sp, #104]
 c1c:	mov	x0, x27
 c20:	ldr	x2, [x2, #16]
 c24:	blr	x2
 c28:	ldr	w0, [x27, #12]
 c2c:	ldr	x1, [sp, #104]
 c30:	subs	w2, w0, #0x1
 c34:	str	w2, [x27, #12]
 c38:	b.ne	bf0 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0xbf0>  // b.any
 c3c:	ldr	x2, [x27]
 c40:	mov	x0, x27
 c44:	ldr	x2, [x2, #24]
 c48:	blr	x2
 c4c:	ldr	x1, [sp, #104]
 c50:	b	bf0 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0xbf0>
 c54:	ldrb	w1, [sp, #248]
 c58:	and	w0, w0, #0xfffffffd
 c5c:	ldr	x2, [sp, #176]
 c60:	orr	w1, w1, #0x3
 c64:	str	xzr, [sp, #176]
 c68:	strb	w0, [sp, #184]
 c6c:	str	x2, [sp, #240]
 c70:	strb	w1, [sp, #248]
 c74:	b	710 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x710>
 c78:	ldrb	w0, [sp, #248]
 c7c:	str	w27, [sp, #240]
 c80:	and	w0, w0, #0xfffffffc
 c84:	orr	w0, w0, #0x2
 c88:	strb	w0, [sp, #248]
 c8c:	b	710 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x710>
 c90:	adrp	x3, 0 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj>
 c94:	adrp	x1, 0 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj>
 c98:	adrp	x0, 0 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj>
 c9c:	add	x3, x3, #0x0
 ca0:	add	x1, x1, #0x0
 ca4:	add	x0, x0, #0x0
 ca8:	mov	w2, #0x43                  	// #67
 cac:	bl	0 <__assert_fail>
 cb0:	adrp	x3, 0 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj>
 cb4:	adrp	x1, 0 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj>
 cb8:	adrp	x0, 0 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj>
 cbc:	add	x3, x3, #0x0
 cc0:	add	x1, x1, #0x0
 cc4:	add	x0, x0, #0x0
 cc8:	mov	w2, #0x85                  	// #133
 ccc:	bl	0 <__assert_fail>

Disassembly of section .text._ZNSt6vectorISt4pairIjNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE17_M_realloc_insertIJS7_EEEvN9__gnu_cxx17__normal_iteratorIPS7_S9_EEDpOT_:

0000000000000000 <_ZNSt6vectorISt4pairIjNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE17_M_realloc_insertIJS7_EEEvN9__gnu_cxx17__normal_iteratorIPS7_S9_EEDpOT_>:
   0:	stp	x29, x30, [sp, #-96]!
   4:	mov	x3, #0xcccccccccccccccc    	// #-3689348814741910324
   8:	movk	x3, #0xcccd
   c:	mov	x29, sp
  10:	stp	x19, x20, [sp, #16]
  14:	stp	x23, x24, [sp, #48]
  18:	mov	x23, x0
  1c:	ldp	x24, x19, [x0]
  20:	stp	x21, x22, [sp, #32]
  24:	mov	x21, x1
  28:	stp	x25, x26, [sp, #64]
  2c:	mov	x1, #0x3333333333333333    	// #3689348814741910323
  30:	movk	x1, #0x333, lsl #48
  34:	str	x27, [sp, #80]
  38:	sub	x0, x19, x24
  3c:	asr	x0, x0, #3
  40:	mul	x0, x0, x3
  44:	cmp	x0, x1
  48:	b.eq	274 <_ZNSt6vectorISt4pairIjNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE17_M_realloc_insertIJS7_EEEvN9__gnu_cxx17__normal_iteratorIPS7_S9_EEDpOT_+0x274>  // b.none
  4c:	mov	x26, x2
  50:	sub	x27, x21, x24
  54:	cbz	x0, 24c <_ZNSt6vectorISt4pairIjNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE17_M_realloc_insertIJS7_EEEvN9__gnu_cxx17__normal_iteratorIPS7_S9_EEDpOT_+0x24c>
  58:	cmp	x0, x0, lsl #1
  5c:	mov	x25, #0x7ffffffffffffff8    	// #9223372036854775800
  60:	lsl	x0, x0, #1
  64:	b.ls	238 <_ZNSt6vectorISt4pairIjNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE17_M_realloc_insertIJS7_EEEvN9__gnu_cxx17__normal_iteratorIPS7_S9_EEDpOT_+0x238>  // b.plast
  68:	mov	x0, x25
  6c:	bl	0 <_Znwm>
  70:	mov	x22, x0
  74:	add	x25, x0, x25
  78:	add	x20, x0, #0x28
  7c:	mov	x0, x26
  80:	add	x2, x22, x27
  84:	ldr	w1, [x26]
  88:	add	x4, x2, #0x18
  8c:	str	w1, [x22, x27]
  90:	add	x3, x26, #0x18
  94:	ldr	x1, [x0, #8]!
  98:	str	x4, [x2, #8]
  9c:	cmp	x1, x3
  a0:	b.eq	254 <_ZNSt6vectorISt4pairIjNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE17_M_realloc_insertIJS7_EEEvN9__gnu_cxx17__normal_iteratorIPS7_S9_EEDpOT_+0x254>  // b.none
  a4:	ldr	x0, [x0, #16]
  a8:	str	x1, [x2, #8]
  ac:	str	x0, [x2, #24]
  b0:	ldr	x0, [x26, #16]
  b4:	stp	x3, xzr, [x26, #8]
  b8:	cmp	x21, x24
  bc:	str	x0, [x2, #16]
  c0:	strb	wzr, [x26, #24]
  c4:	b.eq	168 <_ZNSt6vectorISt4pairIjNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE17_M_realloc_insertIJS7_EEEvN9__gnu_cxx17__normal_iteratorIPS7_S9_EEDpOT_+0x168>  // b.none
  c8:	mov	x3, x22
  cc:	mov	x2, x24
  d0:	b	f8 <_ZNSt6vectorISt4pairIjNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE17_M_realloc_insertIJS7_EEEvN9__gnu_cxx17__normal_iteratorIPS7_S9_EEDpOT_+0xf8>
  d4:	str	x5, [x3, #8]
  d8:	add	x2, x2, #0x28
  dc:	add	x3, x3, #0x28
  e0:	ldur	x0, [x2, #-16]
  e4:	stur	x0, [x3, #-16]
  e8:	ldur	x0, [x2, #-24]
  ec:	stur	x0, [x3, #-24]
  f0:	cmp	x21, x2
  f4:	b.eq	138 <_ZNSt6vectorISt4pairIjNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE17_M_realloc_insertIJS7_EEEvN9__gnu_cxx17__normal_iteratorIPS7_S9_EEDpOT_+0x138>  // b.none
  f8:	mov	x5, x3
  fc:	ldr	w6, [x2]
 100:	add	x4, x2, #0x18
 104:	str	w6, [x5], #24
 108:	str	x5, [x3, #8]
 10c:	ldr	x5, [x2, #8]
 110:	cmp	x5, x4
 114:	b.ne	d4 <_ZNSt6vectorISt4pairIjNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE17_M_realloc_insertIJS7_EEEvN9__gnu_cxx17__normal_iteratorIPS7_S9_EEDpOT_+0xd4>  // b.any
 118:	ldp	x0, x1, [x2, #24]
 11c:	stp	x0, x1, [x3, #24]
 120:	add	x2, x2, #0x28
 124:	ldur	x0, [x2, #-24]
 128:	str	x0, [x3, #16]
 12c:	cmp	x21, x2
 130:	add	x3, x3, #0x28
 134:	b.ne	f8 <_ZNSt6vectorISt4pairIjNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE17_M_realloc_insertIJS7_EEEvN9__gnu_cxx17__normal_iteratorIPS7_S9_EEDpOT_+0xf8>  // b.any
 138:	sub	x20, x21, #0x28
 13c:	mov	x0, #0xcccd                	// #52429
 140:	sub	x20, x20, x24
 144:	movk	x0, #0xcccc, lsl #16
 148:	movk	x0, #0xcccc, lsl #32
 14c:	lsr	x20, x20, #3
 150:	movk	x0, #0xccc, lsl #48
 154:	mul	x20, x20, x0
 158:	and	x20, x20, #0x1fffffffffffffff
 15c:	add	x20, x20, #0x2
 160:	add	x20, x20, x20, lsl #2
 164:	add	x20, x22, x20, lsl #3
 168:	cmp	x21, x19
 16c:	b.eq	1e4 <_ZNSt6vectorISt4pairIjNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE17_M_realloc_insertIJS7_EEEvN9__gnu_cxx17__normal_iteratorIPS7_S9_EEDpOT_+0x1e4>  // b.none
 170:	mov	x2, x21
 174:	mov	x3, x20
 178:	mov	x4, x3
 17c:	ldr	w7, [x2]
 180:	ldr	x6, [x2, #8]
 184:	add	x5, x2, #0x18
 188:	str	w7, [x4], #24
 18c:	cmp	x6, x5
 190:	str	x4, [x3, #8]
 194:	b.eq	214 <_ZNSt6vectorISt4pairIjNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE17_M_realloc_insertIJS7_EEEvN9__gnu_cxx17__normal_iteratorIPS7_S9_EEDpOT_+0x214>  // b.none
 198:	ldp	x1, x0, [x2, #16]
 19c:	stp	x6, x1, [x3, #8]
 1a0:	add	x2, x2, #0x28
 1a4:	str	x0, [x3, #24]
 1a8:	cmp	x2, x19
 1ac:	add	x3, x3, #0x28
 1b0:	b.ne	178 <_ZNSt6vectorISt4pairIjNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE17_M_realloc_insertIJS7_EEEvN9__gnu_cxx17__normal_iteratorIPS7_S9_EEDpOT_+0x178>  // b.any
 1b4:	sub	x0, x19, x21
 1b8:	mov	x1, #0xcccd                	// #52429
 1bc:	sub	x0, x0, #0x28
 1c0:	movk	x1, #0xcccc, lsl #16
 1c4:	movk	x1, #0xcccc, lsl #32
 1c8:	lsr	x0, x0, #3
 1cc:	movk	x1, #0xccc, lsl #48
 1d0:	mul	x0, x0, x1
 1d4:	and	x0, x0, #0x1fffffffffffffff
 1d8:	add	x0, x0, #0x1
 1dc:	add	x0, x0, x0, lsl #2
 1e0:	add	x20, x20, x0, lsl #3
 1e4:	cbz	x24, 1f0 <_ZNSt6vectorISt4pairIjNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE17_M_realloc_insertIJS7_EEEvN9__gnu_cxx17__normal_iteratorIPS7_S9_EEDpOT_+0x1f0>
 1e8:	mov	x0, x24
 1ec:	bl	0 <_ZdlPv>
 1f0:	ldr	x27, [sp, #80]
 1f4:	stp	x22, x20, [x23]
 1f8:	str	x25, [x23, #16]
 1fc:	ldp	x19, x20, [sp, #16]
 200:	ldp	x21, x22, [sp, #32]
 204:	ldp	x23, x24, [sp, #48]
 208:	ldp	x25, x26, [sp, #64]
 20c:	ldp	x29, x30, [sp], #96
 210:	ret
 214:	ldr	x0, [x2, #16]
 218:	str	x0, [x3, #16]
 21c:	ldp	x4, x5, [x2, #24]
 220:	stp	x4, x5, [x3, #24]
 224:	add	x2, x2, #0x28
 228:	cmp	x19, x2
 22c:	add	x3, x3, #0x28
 230:	b.ne	178 <_ZNSt6vectorISt4pairIjNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE17_M_realloc_insertIJS7_EEEvN9__gnu_cxx17__normal_iteratorIPS7_S9_EEDpOT_+0x178>  // b.any
 234:	b	1b4 <_ZNSt6vectorISt4pairIjNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE17_M_realloc_insertIJS7_EEEvN9__gnu_cxx17__normal_iteratorIPS7_S9_EEDpOT_+0x1b4>
 238:	cbnz	x0, 260 <_ZNSt6vectorISt4pairIjNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE17_M_realloc_insertIJS7_EEEvN9__gnu_cxx17__normal_iteratorIPS7_S9_EEDpOT_+0x260>
 23c:	mov	x20, #0x28                  	// #40
 240:	mov	x25, #0x0                   	// #0
 244:	mov	x22, #0x0                   	// #0
 248:	b	7c <_ZNSt6vectorISt4pairIjNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE17_M_realloc_insertIJS7_EEEvN9__gnu_cxx17__normal_iteratorIPS7_S9_EEDpOT_+0x7c>
 24c:	mov	x25, #0x28                  	// #40
 250:	b	68 <_ZNSt6vectorISt4pairIjNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE17_M_realloc_insertIJS7_EEEvN9__gnu_cxx17__normal_iteratorIPS7_S9_EEDpOT_+0x68>
 254:	ldp	x0, x1, [x26, #24]
 258:	stp	x0, x1, [x2, #24]
 25c:	b	b0 <_ZNSt6vectorISt4pairIjNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE17_M_realloc_insertIJS7_EEEvN9__gnu_cxx17__normal_iteratorIPS7_S9_EEDpOT_+0xb0>
 260:	cmp	x0, x1
 264:	mov	x25, #0x28                  	// #40
 268:	csel	x0, x0, x1, ls  // ls = plast
 26c:	mul	x25, x0, x25
 270:	b	68 <_ZNSt6vectorISt4pairIjNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE17_M_realloc_insertIJS7_EEEvN9__gnu_cxx17__normal_iteratorIPS7_S9_EEDpOT_+0x68>
 274:	adrp	x0, 0 <_ZNSt6vectorISt4pairIjNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE17_M_realloc_insertIJS7_EEEvN9__gnu_cxx17__normal_iteratorIPS7_S9_EEDpOT_>
 278:	add	x0, x0, #0x0
 27c:	bl	0 <_ZSt20__throw_length_errorPKc>
