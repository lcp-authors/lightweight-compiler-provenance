In archive /home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//libLLVMTarget.a_gcc_-O3:

Target.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   8:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   c:	mov	x29, sp
  10:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
  14:	add	x3, x3, #0x0
  18:	add	x1, x1, #0x0
  1c:	add	x0, x0, #0x0
  20:	mov	w2, #0x7d                  	// #125
  24:	bl	0 <__assert_fail>

0000000000000028 <_ZN4llvm16initializeTargetERNS_12PassRegistryE>:
  28:	stp	x29, x30, [sp, #-32]!
  2c:	mov	x29, sp
  30:	str	x19, [sp, #16]
  34:	mov	x19, x0
  38:	bl	0 <_ZN4llvm42initializeTargetLibraryInfoWrapperPassPassERNS_12PassRegistryE>
  3c:	mov	x0, x19
  40:	ldr	x19, [sp, #16]
  44:	ldp	x29, x30, [sp], #32
  48:	b	0 <_ZN4llvm44initializeTargetTransformInfoWrapperPassPassERNS_12PassRegistryE>
  4c:	nop

0000000000000050 <LLVMInitializeTarget>:
  50:	b	28 <_ZN4llvm16initializeTargetERNS_12PassRegistryE>
  54:	nop

0000000000000058 <LLVMGetModuleDataLayout>:
  58:	b	0 <_ZNK4llvm6Module13getDataLayoutEv>
  5c:	nop

0000000000000060 <LLVMSetModuleDataLayout>:
  60:	b	0 <_ZN4llvm6Module13setDataLayoutERKNS_10DataLayoutE>
  64:	nop

0000000000000068 <LLVMCreateTargetData>:
  68:	stp	x29, x30, [sp, #-48]!
  6c:	mov	x29, sp
  70:	stp	x19, x20, [sp, #16]
  74:	mov	x20, x0
  78:	str	x21, [sp, #32]
  7c:	mov	x21, #0x0                   	// #0
  80:	cbz	x0, 8c <LLVMCreateTargetData+0x24>
  84:	bl	0 <strlen>
  88:	mov	x21, x0
  8c:	mov	x0, #0x1b0                 	// #432
  90:	bl	0 <_Znwm>
  94:	add	x9, x0, #0x30
  98:	add	x8, x0, #0x48
  9c:	add	x6, x0, #0xd8
  a0:	add	x5, x0, #0xf8
  a4:	add	x4, x0, #0x190
  a8:	mov	x3, #0x800000000           	// #34359738368
  ac:	mov	x7, #0x1000000000          	// #68719476736
  b0:	strh	wzr, [x0, #8]
  b4:	strh	wzr, [x0, #16]
  b8:	mov	x19, x0
  bc:	stp	x9, x3, [x0, #32]
  c0:	mov	x1, x20
  c4:	mov	x2, x21
  c8:	stp	x8, x7, [x0, #56]
  cc:	stp	x6, xzr, [x0, #200]
  d0:	strb	wzr, [x0, #216]
  d4:	stp	x5, x3, [x0, #232]
  d8:	stp	xzr, x4, [x0, #376]
  dc:	str	x3, [x0, #392]
  e0:	bl	0 <_ZN4llvm10DataLayout5resetENS_9StringRefE>
  e4:	mov	x0, x19
  e8:	ldp	x19, x20, [sp, #16]
  ec:	ldr	x21, [sp, #32]
  f0:	ldp	x29, x30, [sp], #48
  f4:	ret

00000000000000f8 <LLVMDisposeTargetData>:
  f8:	cbz	x0, 124 <LLVMDisposeTargetData+0x2c>
  fc:	stp	x29, x30, [sp, #-32]!
 100:	mov	x29, sp
 104:	str	x19, [sp, #16]
 108:	mov	x19, x0
 10c:	bl	0 <_ZN4llvm10DataLayoutD1Ev>
 110:	mov	x0, x19
 114:	mov	x1, #0x1b0                 	// #432
 118:	ldr	x19, [sp, #16]
 11c:	ldp	x29, x30, [sp], #32
 120:	b	0 <_ZdlPvm>
 124:	ret

0000000000000128 <LLVMAddTargetLibraryInfo>:
 128:	stp	x29, x30, [sp, #-48]!
 12c:	mov	x29, sp
 130:	stp	x19, x20, [sp, #16]
 134:	mov	x19, x1
 138:	mov	x20, x0
 13c:	ldr	x1, [x1]
 140:	str	x21, [sp, #32]
 144:	mov	x0, #0x118                 	// #280
 148:	ldr	x21, [x1, #16]
 14c:	bl	0 <_Znwm>
 150:	mov	x1, x20
 154:	mov	x20, x0
 158:	bl	0 <_ZN4llvm28TargetLibraryInfoWrapperPassC1ERKNS_21TargetLibraryInfoImplE>
 15c:	mov	x1, x20
 160:	mov	x0, x19
 164:	mov	x16, x21
 168:	ldp	x19, x20, [sp, #16]
 16c:	ldr	x21, [sp, #32]
 170:	ldp	x29, x30, [sp], #48
 174:	br	x16

0000000000000178 <LLVMCopyStringRepOfTargetData>:
 178:	stp	x29, x30, [sp, #-96]!
 17c:	mov	x29, sp
 180:	stp	x19, x20, [sp, #16]
 184:	add	x20, sp, #0x40
 188:	add	x1, x20, #0x10
 18c:	ldr	x19, [x0, #208]
 190:	str	x21, [sp, #32]
 194:	ldr	x21, [x0, #200]
 198:	str	x1, [sp, #64]
 19c:	cmn	x21, x19
 1a0:	ccmp	x21, #0x0, #0x0, ne  // ne = any
 1a4:	b.eq	244 <LLVMCopyStringRepOfTargetData+0xcc>  // b.none
 1a8:	str	x19, [sp, #56]
 1ac:	cmp	x19, #0xf
 1b0:	b.hi	214 <LLVMCopyStringRepOfTargetData+0x9c>  // b.pmore
 1b4:	cmp	x19, #0x1
 1b8:	b.ne	208 <LLVMCopyStringRepOfTargetData+0x90>  // b.any
 1bc:	ldrb	w2, [x21]
 1c0:	mov	x0, x1
 1c4:	strb	w2, [sp, #80]
 1c8:	str	x19, [sp, #72]
 1cc:	add	x20, x20, #0x10
 1d0:	strb	wzr, [x0, x19]
 1d4:	ldr	x0, [sp, #64]
 1d8:	bl	0 <strdup>
 1dc:	mov	x19, x0
 1e0:	ldr	x1, [sp, #64]
 1e4:	cmp	x1, x20
 1e8:	b.eq	1f4 <LLVMCopyStringRepOfTargetData+0x7c>  // b.none
 1ec:	mov	x0, x1
 1f0:	bl	0 <_ZdlPv>
 1f4:	mov	x0, x19
 1f8:	ldp	x19, x20, [sp, #16]
 1fc:	ldr	x21, [sp, #32]
 200:	ldp	x29, x30, [sp], #96
 204:	ret
 208:	mov	x0, x1
 20c:	cbz	x19, 1c8 <LLVMCopyStringRepOfTargetData+0x50>
 210:	b	230 <LLVMCopyStringRepOfTargetData+0xb8>
 214:	add	x1, sp, #0x38
 218:	mov	x0, x20
 21c:	mov	x2, #0x0                   	// #0
 220:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
 224:	ldr	x1, [sp, #56]
 228:	str	x0, [sp, #64]
 22c:	str	x1, [sp, #80]
 230:	mov	x2, x19
 234:	mov	x1, x21
 238:	bl	0 <memcpy>
 23c:	ldp	x19, x0, [sp, #56]
 240:	b	1c8 <LLVMCopyStringRepOfTargetData+0x50>
 244:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
 248:	add	x0, x0, #0x0
 24c:	bl	0 <_ZSt19__throw_logic_errorPKc>

0000000000000250 <LLVMByteOrder>:
 250:	ldrb	w0, [x0]
 254:	eor	w0, w0, #0x1
 258:	ret
 25c:	nop

0000000000000260 <LLVMPointerSize>:
 260:	mov	w1, #0x0                   	// #0
 264:	b	0 <_ZNK4llvm10DataLayout14getPointerSizeEj>

0000000000000268 <LLVMPointerSizeForAS>:
 268:	b	0 <_ZNK4llvm10DataLayout14getPointerSizeEj>
 26c:	nop

0000000000000270 <LLVMIntPtrType>:
 270:	stp	x29, x30, [sp, #-32]!
 274:	mov	x29, sp
 278:	str	x19, [sp, #16]
 27c:	mov	x19, x0
 280:	bl	0 <LLVMGetGlobalContext>
 284:	mov	x1, x0
 288:	mov	x0, x19
 28c:	mov	w2, #0x0                   	// #0
 290:	ldr	x19, [sp, #16]
 294:	ldp	x29, x30, [sp], #32
 298:	b	0 <_ZNK4llvm10DataLayout13getIntPtrTypeERNS_11LLVMContextEj>
 29c:	nop

00000000000002a0 <LLVMIntPtrTypeForAS>:
 2a0:	stp	x29, x30, [sp, #-32]!
 2a4:	mov	x29, sp
 2a8:	stp	x19, x20, [sp, #16]
 2ac:	mov	w20, w1
 2b0:	mov	x19, x0
 2b4:	bl	0 <LLVMGetGlobalContext>
 2b8:	mov	x1, x0
 2bc:	mov	w2, w20
 2c0:	mov	x0, x19
 2c4:	ldp	x19, x20, [sp, #16]
 2c8:	ldp	x29, x30, [sp], #32
 2cc:	b	0 <_ZNK4llvm10DataLayout13getIntPtrTypeERNS_11LLVMContextEj>

00000000000002d0 <LLVMIntPtrTypeInContext>:
 2d0:	mov	x2, x0
 2d4:	mov	x0, x1
 2d8:	mov	x1, x2
 2dc:	mov	w2, #0x0                   	// #0
 2e0:	b	0 <_ZNK4llvm10DataLayout13getIntPtrTypeERNS_11LLVMContextEj>
 2e4:	nop

00000000000002e8 <LLVMIntPtrTypeForASInContext>:
 2e8:	mov	x3, x0
 2ec:	mov	x0, x1
 2f0:	mov	x1, x3
 2f4:	b	0 <_ZNK4llvm10DataLayout13getIntPtrTypeERNS_11LLVMContextEj>

00000000000002f8 <LLVMSizeOfTypeInBits>:
 2f8:	stp	x29, x30, [sp, #-64]!
 2fc:	mov	x29, sp
 300:	ldrb	w2, [x1, #8]
 304:	stp	x19, x20, [sp, #16]
 308:	mov	x20, x1
 30c:	sub	w1, w2, #0x1
 310:	and	w1, w1, #0xff
 314:	stp	x21, x22, [sp, #32]
 318:	cmp	w1, #0x5
 31c:	mov	x21, x0
 320:	ccmp	w2, #0xf, #0x4, hi  // hi = pmore
 324:	and	w0, w2, #0xfffffffd
 328:	ccmp	w0, #0x9, #0x4, ne  // ne = any
 32c:	b.ne	4f4 <LLVMSizeOfTypeInBits+0x1fc>  // b.any
 330:	cmp	w2, #0x9
 334:	b.eq	4ec <LLVMSizeOfTypeInBits+0x1f4>  // b.none
 338:	b.hi	3b4 <LLVMSizeOfTypeInBits+0xbc>  // b.pmore
 33c:	cmp	w2, #0x4
 340:	b.eq	458 <LLVMSizeOfTypeInBits+0x160>  // b.none
 344:	b.ls	378 <LLVMSizeOfTypeInBits+0x80>  // b.plast
 348:	cmp	w2, #0x6
 34c:	b.ls	430 <LLVMSizeOfTypeInBits+0x138>  // b.plast
 350:	cmp	w2, #0x7
 354:	b.ne	398 <LLVMSizeOfTypeInBits+0xa0>  // b.any
 358:	mov	x0, x21
 35c:	mov	w1, #0x0                   	// #0
 360:	bl	0 <_ZNK4llvm10DataLayout14getPointerSizeEj>
 364:	lsl	w0, w0, #3
 368:	ldp	x19, x20, [sp, #16]
 36c:	ldp	x21, x22, [sp, #32]
 370:	ldp	x29, x30, [sp], #64
 374:	ret
 378:	cmp	w2, #0x2
 37c:	b.eq	444 <LLVMSizeOfTypeInBits+0x14c>  // b.none
 380:	cmp	w2, #0x3
 384:	mov	x0, #0x40                  	// #64
 388:	b.eq	368 <LLVMSizeOfTypeInBits+0x70>  // b.none
 38c:	cmp	w2, #0x1
 390:	mov	x0, #0x10                  	// #16
 394:	b.eq	368 <LLVMSizeOfTypeInBits+0x70>  // b.none
 398:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
 39c:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
 3a0:	add	x1, x1, #0x0
 3a4:	add	x0, x0, #0x0
 3a8:	mov	w2, #0x298                 	// #664
 3ac:	str	x23, [sp, #48]
 3b0:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
 3b4:	cmp	w2, #0xe
 3b8:	b.eq	478 <LLVMSizeOfTypeInBits+0x180>  // b.none
 3bc:	b.ls	408 <LLVMSizeOfTypeInBits+0x110>  // b.plast
 3c0:	cmp	w2, #0xf
 3c4:	b.eq	4d4 <LLVMSizeOfTypeInBits+0x1dc>  // b.none
 3c8:	cmp	w2, #0x10
 3cc:	b.ne	398 <LLVMSizeOfTypeInBits+0xa0>  // b.any
 3d0:	ldr	x19, [x20, #32]
 3d4:	mov	x0, #0xffffffff            	// #4294967295
 3d8:	cmp	x19, x0
 3dc:	b.hi	544 <LLVMSizeOfTypeInBits+0x24c>  // b.pmore
 3e0:	ldr	x1, [x20, #24]
 3e4:	mov	x0, x21
 3e8:	ldrb	w20, [x20, #40]
 3ec:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
 3f0:	tst	w1, #0xff
 3f4:	b.ne	400 <LLVMSizeOfTypeInBits+0x108>  // b.any
 3f8:	mul	x0, x19, x0
 3fc:	cbz	w20, 368 <LLVMSizeOfTypeInBits+0x70>
 400:	str	x23, [sp, #48]
 404:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
 408:	cmp	w2, #0xb
 40c:	b.eq	46c <LLVMSizeOfTypeInBits+0x174>  // b.none
 410:	cmp	w2, #0xd
 414:	b.ne	398 <LLVMSizeOfTypeInBits+0xa0>  // b.any
 418:	mov	x1, x20
 41c:	mov	x0, x21
 420:	bl	0 <_ZNK4llvm10DataLayout15getStructLayoutEPNS_10StructTypeE>
 424:	ldr	x0, [x0]
 428:	lsl	x0, x0, #3
 42c:	b	368 <LLVMSizeOfTypeInBits+0x70>
 430:	mov	x0, #0x80                  	// #128
 434:	ldp	x19, x20, [sp, #16]
 438:	ldp	x21, x22, [sp, #32]
 43c:	ldp	x29, x30, [sp], #64
 440:	ret
 444:	mov	x0, #0x20                  	// #32
 448:	ldp	x19, x20, [sp, #16]
 44c:	ldp	x21, x22, [sp, #32]
 450:	ldp	x29, x30, [sp], #64
 454:	ret
 458:	mov	x0, #0x50                  	// #80
 45c:	ldp	x19, x20, [sp, #16]
 460:	ldp	x21, x22, [sp, #32]
 464:	ldp	x29, x30, [sp], #64
 468:	ret
 46c:	ldr	w0, [x20, #8]
 470:	lsr	w0, w0, #8
 474:	b	368 <LLVMSizeOfTypeInBits+0x70>
 478:	ldr	x22, [x20, #24]
 47c:	mov	x0, x21
 480:	str	x23, [sp, #48]
 484:	mov	x1, x22
 488:	ldr	x23, [x20, #32]
 48c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
 490:	add	x19, x0, #0x7
 494:	and	w20, w1, #0xff
 498:	mov	x1, x22
 49c:	mov	x0, x21
 4a0:	lsr	x19, x19, #3
 4a4:	bl	0 <_ZNK4llvm10DataLayout19getABITypeAlignmentEPNS_4TypeE>
 4a8:	mov	w1, w0
 4ac:	cbz	w0, 568 <LLVMSizeOfTypeInBits+0x270>
 4b0:	sub	x0, x19, #0x1
 4b4:	add	x0, x0, x1
 4b8:	udiv	x0, x0, x1
 4bc:	mul	x0, x0, x1
 4c0:	mul	x0, x0, x23
 4c4:	ldr	x23, [sp, #48]
 4c8:	lsl	x0, x0, #3
 4cc:	cbz	w20, 368 <LLVMSizeOfTypeInBits+0x70>
 4d0:	b	400 <LLVMSizeOfTypeInBits+0x108>
 4d4:	ldr	w1, [x20, #8]
 4d8:	mov	x0, x21
 4dc:	lsr	w1, w1, #8
 4e0:	bl	0 <_ZNK4llvm10DataLayout14getPointerSizeEj>
 4e4:	lsl	w0, w0, #3
 4e8:	b	368 <LLVMSizeOfTypeInBits+0x70>
 4ec:	mov	x0, #0x40                  	// #64
 4f0:	b	368 <LLVMSizeOfTypeInBits+0x70>
 4f4:	sub	w0, w2, #0xd
 4f8:	cmp	w0, #0x1
 4fc:	ccmp	w2, #0x10, #0x4, hi  // hi = pmore
 500:	b.ne	520 <LLVMSizeOfTypeInBits+0x228>  // b.any
 504:	mov	x0, x20
 508:	mov	x1, #0x0                   	// #0
 50c:	bl	0 <_ZNK4llvm4Type18isSizedDerivedTypeEPNS_15SmallPtrSetImplIPS0_EE>
 510:	tst	w0, #0xff
 514:	b.eq	520 <LLVMSizeOfTypeInBits+0x228>  // b.none
 518:	ldrb	w2, [x20, #8]
 51c:	b	330 <LLVMSizeOfTypeInBits+0x38>
 520:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
 524:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
 528:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
 52c:	add	x3, x3, #0x0
 530:	add	x1, x1, #0x0
 534:	add	x0, x0, #0x0
 538:	mov	w2, #0x271                 	// #625
 53c:	str	x23, [sp, #48]
 540:	bl	0 <__assert_fail>
 544:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
 548:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
 54c:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
 550:	add	x3, x3, #0x0
 554:	add	x1, x1, #0x0
 558:	add	x0, x0, #0x0
 55c:	mov	w2, #0x220                 	// #544
 560:	str	x23, [sp, #48]
 564:	bl	0 <__assert_fail>
 568:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
 56c:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
 570:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
 574:	add	x3, x3, #0x0
 578:	add	x1, x1, #0x0
 57c:	add	x0, x0, #0x0
 580:	mov	w2, #0xc7                  	// #199
 584:	bl	0 <__assert_fail>

0000000000000588 <LLVMStoreSizeOfType>:
 588:	stp	x29, x30, [sp, #-64]!
 58c:	mov	x29, sp
 590:	ldrb	w2, [x1, #8]
 594:	stp	x19, x20, [sp, #16]
 598:	mov	x20, x1
 59c:	sub	w1, w2, #0x1
 5a0:	and	w1, w1, #0xff
 5a4:	stp	x21, x22, [sp, #32]
 5a8:	cmp	w1, #0x5
 5ac:	mov	x21, x0
 5b0:	ccmp	w2, #0xf, #0x4, hi  // hi = pmore
 5b4:	and	w0, w2, #0xfffffffd
 5b8:	ccmp	w0, #0x9, #0x4, ne  // ne = any
 5bc:	b.ne	790 <LLVMStoreSizeOfType+0x208>  // b.any
 5c0:	cmp	w2, #0x9
 5c4:	b.eq	788 <LLVMStoreSizeOfType+0x200>  // b.none
 5c8:	b.hi	644 <LLVMStoreSizeOfType+0xbc>  // b.pmore
 5cc:	cmp	w2, #0x4
 5d0:	b.eq	6f0 <LLVMStoreSizeOfType+0x168>  // b.none
 5d4:	b.ls	608 <LLVMStoreSizeOfType+0x80>  // b.plast
 5d8:	cmp	w2, #0x6
 5dc:	b.ls	6c8 <LLVMStoreSizeOfType+0x140>  // b.plast
 5e0:	cmp	w2, #0x7
 5e4:	b.ne	628 <LLVMStoreSizeOfType+0xa0>  // b.any
 5e8:	mov	x0, x21
 5ec:	mov	w1, #0x0                   	// #0
 5f0:	bl	0 <_ZNK4llvm10DataLayout14getPointerSizeEj>
 5f4:	and	x0, x0, #0x1fffffff
 5f8:	ldp	x19, x20, [sp, #16]
 5fc:	ldp	x21, x22, [sp, #32]
 600:	ldp	x29, x30, [sp], #64
 604:	ret
 608:	cmp	w2, #0x2
 60c:	b.eq	6dc <LLVMStoreSizeOfType+0x154>  // b.none
 610:	cmp	w2, #0x3
 614:	mov	x0, #0x8                   	// #8
 618:	b.eq	5f8 <LLVMStoreSizeOfType+0x70>  // b.none
 61c:	cmp	w2, #0x1
 620:	mov	x0, #0x2                   	// #2
 624:	b.eq	5f8 <LLVMStoreSizeOfType+0x70>  // b.none
 628:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
 62c:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
 630:	add	x1, x1, #0x0
 634:	add	x0, x0, #0x0
 638:	mov	w2, #0x298                 	// #664
 63c:	str	x23, [sp, #48]
 640:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
 644:	cmp	w2, #0xe
 648:	b.eq	718 <LLVMStoreSizeOfType+0x190>  // b.none
 64c:	b.ls	6a0 <LLVMStoreSizeOfType+0x118>  // b.plast
 650:	cmp	w2, #0xf
 654:	b.eq	770 <LLVMStoreSizeOfType+0x1e8>  // b.none
 658:	cmp	w2, #0x10
 65c:	b.ne	628 <LLVMStoreSizeOfType+0xa0>  // b.any
 660:	ldr	x19, [x20, #32]
 664:	mov	x0, #0xffffffff            	// #4294967295
 668:	cmp	x19, x0
 66c:	b.hi	7e0 <LLVMStoreSizeOfType+0x258>  // b.pmore
 670:	ldr	x1, [x20, #24]
 674:	mov	x0, x21
 678:	ldrb	w20, [x20, #40]
 67c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
 680:	tst	w1, #0xff
 684:	b.ne	698 <LLVMStoreSizeOfType+0x110>  // b.any
 688:	mul	x0, x19, x0
 68c:	add	x0, x0, #0x7
 690:	lsr	x0, x0, #3
 694:	cbz	w20, 5f8 <LLVMStoreSizeOfType+0x70>
 698:	str	x23, [sp, #48]
 69c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
 6a0:	cmp	w2, #0xb
 6a4:	b.eq	704 <LLVMStoreSizeOfType+0x17c>  // b.none
 6a8:	cmp	w2, #0xd
 6ac:	b.ne	628 <LLVMStoreSizeOfType+0xa0>  // b.any
 6b0:	mov	x1, x20
 6b4:	mov	x0, x21
 6b8:	bl	0 <_ZNK4llvm10DataLayout15getStructLayoutEPNS_10StructTypeE>
 6bc:	ldr	x0, [x0]
 6c0:	and	x0, x0, #0x1fffffffffffffff
 6c4:	b	5f8 <LLVMStoreSizeOfType+0x70>
 6c8:	mov	x0, #0x10                  	// #16
 6cc:	ldp	x19, x20, [sp, #16]
 6d0:	ldp	x21, x22, [sp, #32]
 6d4:	ldp	x29, x30, [sp], #64
 6d8:	ret
 6dc:	mov	x0, #0x4                   	// #4
 6e0:	ldp	x19, x20, [sp, #16]
 6e4:	ldp	x21, x22, [sp, #32]
 6e8:	ldp	x29, x30, [sp], #64
 6ec:	ret
 6f0:	mov	x0, #0xa                   	// #10
 6f4:	ldp	x19, x20, [sp, #16]
 6f8:	ldp	x21, x22, [sp, #32]
 6fc:	ldp	x29, x30, [sp], #64
 700:	ret
 704:	ldr	w0, [x20, #8]
 708:	lsr	w0, w0, #8
 70c:	add	x0, x0, #0x7
 710:	lsr	x0, x0, #3
 714:	b	5f8 <LLVMStoreSizeOfType+0x70>
 718:	ldr	x22, [x20, #24]
 71c:	mov	x0, x21
 720:	str	x23, [sp, #48]
 724:	mov	x1, x22
 728:	ldr	x23, [x20, #32]
 72c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
 730:	add	x19, x0, #0x7
 734:	and	w20, w1, #0xff
 738:	mov	x1, x22
 73c:	mov	x0, x21
 740:	lsr	x19, x19, #3
 744:	bl	0 <_ZNK4llvm10DataLayout19getABITypeAlignmentEPNS_4TypeE>
 748:	mov	w1, w0
 74c:	cbz	w0, 804 <LLVMStoreSizeOfType+0x27c>
 750:	sub	x0, x19, #0x1
 754:	add	x0, x0, x1
 758:	udiv	x0, x0, x1
 75c:	mul	x0, x0, x1
 760:	mul	x0, x0, x23
 764:	ldr	x23, [sp, #48]
 768:	lsl	x0, x0, #3
 76c:	b	68c <LLVMStoreSizeOfType+0x104>
 770:	ldr	w1, [x20, #8]
 774:	mov	x0, x21
 778:	lsr	w1, w1, #8
 77c:	bl	0 <_ZNK4llvm10DataLayout14getPointerSizeEj>
 780:	and	x0, x0, #0x1fffffff
 784:	b	5f8 <LLVMStoreSizeOfType+0x70>
 788:	mov	x0, #0x8                   	// #8
 78c:	b	5f8 <LLVMStoreSizeOfType+0x70>
 790:	sub	w0, w2, #0xd
 794:	cmp	w0, #0x1
 798:	ccmp	w2, #0x10, #0x4, hi  // hi = pmore
 79c:	b.ne	7bc <LLVMStoreSizeOfType+0x234>  // b.any
 7a0:	mov	x0, x20
 7a4:	mov	x1, #0x0                   	// #0
 7a8:	bl	0 <_ZNK4llvm4Type18isSizedDerivedTypeEPNS_15SmallPtrSetImplIPS0_EE>
 7ac:	tst	w0, #0xff
 7b0:	b.eq	7bc <LLVMStoreSizeOfType+0x234>  // b.none
 7b4:	ldrb	w2, [x20, #8]
 7b8:	b	5c0 <LLVMStoreSizeOfType+0x38>
 7bc:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
 7c0:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
 7c4:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
 7c8:	add	x3, x3, #0x0
 7cc:	add	x1, x1, #0x0
 7d0:	add	x0, x0, #0x0
 7d4:	mov	w2, #0x271                 	// #625
 7d8:	str	x23, [sp, #48]
 7dc:	bl	0 <__assert_fail>
 7e0:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
 7e4:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
 7e8:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
 7ec:	add	x3, x3, #0x0
 7f0:	add	x1, x1, #0x0
 7f4:	add	x0, x0, #0x0
 7f8:	mov	w2, #0x220                 	// #544
 7fc:	str	x23, [sp, #48]
 800:	bl	0 <__assert_fail>
 804:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
 808:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
 80c:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
 810:	add	x3, x3, #0x0
 814:	add	x1, x1, #0x0
 818:	add	x0, x0, #0x0
 81c:	mov	w2, #0xc7                  	// #199
 820:	bl	0 <__assert_fail>
 824:	nop

0000000000000828 <LLVMABISizeOfType>:
 828:	stp	x29, x30, [sp, #-64]!
 82c:	mov	x29, sp
 830:	ldrb	w2, [x1, #8]
 834:	stp	x21, x22, [sp, #32]
 838:	mov	x22, x0
 83c:	sub	w0, w2, #0x1
 840:	and	w0, w0, #0xff
 844:	stp	x19, x20, [sp, #16]
 848:	cmp	w0, #0x5
 84c:	mov	x21, x1
 850:	ccmp	w2, #0xf, #0x4, hi  // hi = pmore
 854:	and	w1, w2, #0xfffffffd
 858:	ccmp	w1, #0x9, #0x4, ne  // ne = any
 85c:	b.ne	a6c <LLVMABISizeOfType+0x244>  // b.any
 860:	cmp	w2, #0x9
 864:	b.eq	a64 <LLVMABISizeOfType+0x23c>  // b.none
 868:	b.hi	908 <LLVMABISizeOfType+0xe0>  // b.pmore
 86c:	cmp	w2, #0x4
 870:	b.eq	9b8 <LLVMABISizeOfType+0x190>  // b.none
 874:	b.ls	8cc <LLVMABISizeOfType+0xa4>  // b.plast
 878:	cmp	w2, #0x6
 87c:	b.ls	a40 <LLVMABISizeOfType+0x218>  // b.plast
 880:	cmp	w2, #0x7
 884:	b.ne	8ec <LLVMABISizeOfType+0xc4>  // b.any
 888:	mov	x0, x22
 88c:	mov	w1, #0x0                   	// #0
 890:	bl	0 <_ZNK4llvm10DataLayout14getPointerSizeEj>
 894:	and	x19, x0, #0x1fffffff
 898:	mov	x1, x21
 89c:	mov	x0, x22
 8a0:	bl	0 <_ZNK4llvm10DataLayout19getABITypeAlignmentEPNS_4TypeE>
 8a4:	mov	w1, w0
 8a8:	cbz	w0, abc <LLVMABISizeOfType+0x294>
 8ac:	sub	x0, x19, #0x1
 8b0:	add	x0, x0, x1
 8b4:	udiv	x0, x0, x1
 8b8:	mul	x0, x0, x1
 8bc:	ldp	x19, x20, [sp, #16]
 8c0:	ldp	x21, x22, [sp, #32]
 8c4:	ldp	x29, x30, [sp], #64
 8c8:	ret
 8cc:	cmp	w2, #0x2
 8d0:	b.eq	9b0 <LLVMABISizeOfType+0x188>  // b.none
 8d4:	cmp	w2, #0x3
 8d8:	mov	x19, #0x8                   	// #8
 8dc:	b.eq	898 <LLVMABISizeOfType+0x70>  // b.none
 8e0:	cmp	w2, #0x1
 8e4:	mov	x19, #0x2                   	// #2
 8e8:	b.eq	898 <LLVMABISizeOfType+0x70>  // b.none
 8ec:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
 8f0:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
 8f4:	add	x1, x1, #0x0
 8f8:	add	x0, x0, #0x0
 8fc:	mov	w2, #0x298                 	// #664
 900:	stp	x23, x24, [sp, #48]
 904:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
 908:	cmp	w2, #0xe
 90c:	b.eq	9d8 <LLVMABISizeOfType+0x1b0>  // b.none
 910:	b.ls	988 <LLVMABISizeOfType+0x160>  // b.plast
 914:	cmp	w2, #0xf
 918:	b.eq	9c0 <LLVMABISizeOfType+0x198>  // b.none
 91c:	cmp	w2, #0x10
 920:	b.ne	8ec <LLVMABISizeOfType+0xc4>  // b.any
 924:	ldr	x19, [x21, #32]
 928:	mov	x0, #0xffffffff            	// #4294967295
 92c:	cmp	x19, x0
 930:	b.hi	ae0 <LLVMABISizeOfType+0x2b8>  // b.pmore
 934:	ldr	x1, [x21, #24]
 938:	mov	x0, x22
 93c:	ldrb	w20, [x21, #40]
 940:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
 944:	tst	w1, #0xff
 948:	b.ne	980 <LLVMABISizeOfType+0x158>  // b.any
 94c:	mul	x19, x19, x0
 950:	add	x19, x19, #0x7
 954:	lsr	x19, x19, #3
 958:	mov	x1, x21
 95c:	mov	x0, x22
 960:	bl	0 <_ZNK4llvm10DataLayout19getABITypeAlignmentEPNS_4TypeE>
 964:	mov	w1, w0
 968:	cbz	w0, abc <LLVMABISizeOfType+0x294>
 96c:	sub	x0, x19, #0x1
 970:	add	x0, x0, x1
 974:	udiv	x0, x0, x1
 978:	mul	x0, x0, x1
 97c:	cbz	w20, 8bc <LLVMABISizeOfType+0x94>
 980:	stp	x23, x24, [sp, #48]
 984:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
 988:	cmp	w2, #0xb
 98c:	b.eq	a2c <LLVMABISizeOfType+0x204>  // b.none
 990:	cmp	w2, #0xd
 994:	b.ne	8ec <LLVMABISizeOfType+0xc4>  // b.any
 998:	mov	x1, x21
 99c:	mov	x0, x22
 9a0:	bl	0 <_ZNK4llvm10DataLayout15getStructLayoutEPNS_10StructTypeE>
 9a4:	ldr	x19, [x0]
 9a8:	and	x19, x19, #0x1fffffffffffffff
 9ac:	b	898 <LLVMABISizeOfType+0x70>
 9b0:	mov	x19, #0x4                   	// #4
 9b4:	b	898 <LLVMABISizeOfType+0x70>
 9b8:	mov	x19, #0xa                   	// #10
 9bc:	b	898 <LLVMABISizeOfType+0x70>
 9c0:	ldr	w1, [x21, #8]
 9c4:	mov	x0, x22
 9c8:	lsr	w1, w1, #8
 9cc:	bl	0 <_ZNK4llvm10DataLayout14getPointerSizeEj>
 9d0:	and	x19, x0, #0x1fffffff
 9d4:	b	898 <LLVMABISizeOfType+0x70>
 9d8:	stp	x23, x24, [sp, #48]
 9dc:	mov	x0, x22
 9e0:	ldp	x23, x24, [x21, #24]
 9e4:	mov	x1, x23
 9e8:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
 9ec:	add	x19, x0, #0x7
 9f0:	and	w20, w1, #0xff
 9f4:	mov	x1, x23
 9f8:	mov	x0, x22
 9fc:	lsr	x19, x19, #3
 a00:	bl	0 <_ZNK4llvm10DataLayout19getABITypeAlignmentEPNS_4TypeE>
 a04:	mov	w1, w0
 a08:	cbz	w0, ac0 <LLVMABISizeOfType+0x298>
 a0c:	sub	x19, x19, #0x1
 a10:	add	x19, x19, x1
 a14:	udiv	x19, x19, x1
 a18:	mul	x19, x19, x1
 a1c:	mul	x19, x19, x24
 a20:	ldp	x23, x24, [sp, #48]
 a24:	and	x19, x19, #0x1fffffffffffffff
 a28:	b	958 <LLVMABISizeOfType+0x130>
 a2c:	ldr	w19, [x21, #8]
 a30:	lsr	w19, w19, #8
 a34:	add	x19, x19, #0x7
 a38:	lsr	x19, x19, #3
 a3c:	b	898 <LLVMABISizeOfType+0x70>
 a40:	mov	x1, x21
 a44:	mov	x0, x22
 a48:	bl	0 <_ZNK4llvm10DataLayout19getABITypeAlignmentEPNS_4TypeE>
 a4c:	mov	w1, w0
 a50:	cbz	w0, abc <LLVMABISizeOfType+0x294>
 a54:	add	x0, x1, #0xf
 a58:	udiv	x0, x0, x1
 a5c:	mul	x0, x0, x1
 a60:	b	8bc <LLVMABISizeOfType+0x94>
 a64:	mov	x19, #0x8                   	// #8
 a68:	b	898 <LLVMABISizeOfType+0x70>
 a6c:	sub	w0, w2, #0xd
 a70:	cmp	w0, #0x1
 a74:	ccmp	w2, #0x10, #0x4, hi  // hi = pmore
 a78:	b.ne	a98 <LLVMABISizeOfType+0x270>  // b.any
 a7c:	mov	x0, x21
 a80:	mov	x1, #0x0                   	// #0
 a84:	bl	0 <_ZNK4llvm4Type18isSizedDerivedTypeEPNS_15SmallPtrSetImplIPS0_EE>
 a88:	tst	w0, #0xff
 a8c:	b.eq	a98 <LLVMABISizeOfType+0x270>  // b.none
 a90:	ldrb	w2, [x21, #8]
 a94:	b	860 <LLVMABISizeOfType+0x38>
 a98:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
 a9c:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
 aa0:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
 aa4:	add	x3, x3, #0x0
 aa8:	add	x1, x1, #0x0
 aac:	add	x0, x0, #0x0
 ab0:	mov	w2, #0x271                 	// #625
 ab4:	stp	x23, x24, [sp, #48]
 ab8:	bl	0 <__assert_fail>
 abc:	stp	x23, x24, [sp, #48]
 ac0:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
 ac4:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
 ac8:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
 acc:	add	x3, x3, #0x0
 ad0:	add	x1, x1, #0x0
 ad4:	add	x0, x0, #0x0
 ad8:	mov	w2, #0xc7                  	// #199
 adc:	bl	0 <__assert_fail>
 ae0:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
 ae4:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
 ae8:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
 aec:	add	x3, x3, #0x0
 af0:	add	x1, x1, #0x0
 af4:	add	x0, x0, #0x0
 af8:	mov	w2, #0x220                 	// #544
 afc:	stp	x23, x24, [sp, #48]
 b00:	bl	0 <__assert_fail>
 b04:	nop

0000000000000b08 <LLVMABIAlignmentOfType>:
 b08:	b	0 <_ZNK4llvm10DataLayout19getABITypeAlignmentEPNS_4TypeE>
 b0c:	nop

0000000000000b10 <LLVMCallFrameAlignmentOfType>:
 b10:	b	0 <_ZNK4llvm10DataLayout19getABITypeAlignmentEPNS_4TypeE>
 b14:	nop

0000000000000b18 <LLVMPreferredAlignmentOfType>:
 b18:	b	0 <_ZNK4llvm10DataLayout20getPrefTypeAlignmentEPNS_4TypeE>
 b1c:	nop

0000000000000b20 <LLVMPreferredAlignmentOfGlobal>:
 b20:	stp	x29, x30, [sp, #-16]!
 b24:	mov	x29, sp
 b28:	cbz	x1, b40 <LLVMPreferredAlignmentOfGlobal+0x20>
 b2c:	ldrb	w2, [x1, #16]
 b30:	cmp	w2, #0x3
 b34:	b.ne	b60 <LLVMPreferredAlignmentOfGlobal+0x40>  // b.any
 b38:	ldp	x29, x30, [sp], #16
 b3c:	b	0 <_ZNK4llvm10DataLayout21getPreferredAlignmentEPKNS_14GlobalVariableE>
 b40:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
 b44:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
 b48:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
 b4c:	add	x3, x3, #0x0
 b50:	add	x1, x1, #0x0
 b54:	add	x0, x0, #0x0
 b58:	mov	w2, #0x69                  	// #105
 b5c:	bl	0 <__assert_fail>
 b60:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
 b64:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
 b68:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
 b6c:	add	x3, x3, #0x0
 b70:	add	x1, x1, #0x0
 b74:	add	x0, x0, #0x0
 b78:	mov	w2, #0x108                 	// #264
 b7c:	bl	0 <__assert_fail>

0000000000000b80 <LLVMElementAtOffset>:
 b80:	stp	x29, x30, [sp, #-32]!
 b84:	mov	x29, sp
 b88:	str	x19, [sp, #16]
 b8c:	cbz	x1, bb4 <LLVMElementAtOffset+0x34>
 b90:	mov	x19, x2
 b94:	ldrb	w2, [x1, #8]
 b98:	cmp	w2, #0xd
 b9c:	b.ne	bd4 <LLVMElementAtOffset+0x54>  // b.any
 ba0:	bl	0 <_ZNK4llvm10DataLayout15getStructLayoutEPNS_10StructTypeE>
 ba4:	mov	x1, x19
 ba8:	ldr	x19, [sp, #16]
 bac:	ldp	x29, x30, [sp], #32
 bb0:	b	0 <_ZNK4llvm12StructLayout26getElementContainingOffsetEm>
 bb4:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
 bb8:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
 bbc:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
 bc0:	add	x3, x3, #0x0
 bc4:	add	x1, x1, #0x0
 bc8:	add	x0, x0, #0x0
 bcc:	mov	w2, #0x69                  	// #105
 bd0:	bl	0 <__assert_fail>
 bd4:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
 bd8:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
 bdc:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
 be0:	add	x3, x3, #0x0
 be4:	add	x1, x1, #0x0
 be8:	add	x0, x0, #0x0
 bec:	mov	w2, #0x108                 	// #264
 bf0:	bl	0 <__assert_fail>
 bf4:	nop

0000000000000bf8 <LLVMOffsetOfElement>:
 bf8:	stp	x29, x30, [sp, #-32]!
 bfc:	mov	x29, sp
 c00:	str	x19, [sp, #16]
 c04:	cbz	x1, c40 <LLVMOffsetOfElement+0x48>
 c08:	mov	w19, w2
 c0c:	ldrb	w2, [x1, #8]
 c10:	cmp	w2, #0xd
 c14:	b.ne	c80 <LLVMOffsetOfElement+0x88>  // b.any
 c18:	bl	0 <_ZNK4llvm10DataLayout15getStructLayoutEPNS_10StructTypeE>
 c1c:	ldr	w1, [x0, #12]
 c20:	ubfx	x1, x1, #0, #31
 c24:	cmp	w1, w19
 c28:	b.ls	c60 <LLVMOffsetOfElement+0x68>  // b.plast
 c2c:	add	x19, x0, w19, uxtw #3
 c30:	ldr	x0, [x19, #16]
 c34:	ldr	x19, [sp, #16]
 c38:	ldp	x29, x30, [sp], #32
 c3c:	ret
 c40:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
 c44:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
 c48:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
 c4c:	add	x3, x3, #0x0
 c50:	add	x1, x1, #0x0
 c54:	add	x0, x0, #0x0
 c58:	mov	w2, #0x69                  	// #105
 c5c:	bl	0 <__assert_fail>
 c60:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
 c64:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
 c68:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
 c6c:	add	x3, x3, #0x0
 c70:	add	x1, x1, #0x0
 c74:	add	x0, x0, #0x0
 c78:	mov	w2, #0x260                 	// #608
 c7c:	bl	0 <__assert_fail>
 c80:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
 c84:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
 c88:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
 c8c:	add	x3, x3, #0x0
 c90:	add	x1, x1, #0x0
 c94:	add	x0, x0, #0x0
 c98:	mov	w2, #0x108                 	// #264
 c9c:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE:

0000000000000000 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	mov	x29, sp
   8:	ldrb	w2, [x1, #8]
   c:	stp	x19, x20, [sp, #16]
  10:	mov	x19, x1
  14:	sub	w1, w2, #0x1
  18:	and	w1, w1, #0xff
  1c:	stp	x21, x22, [sp, #32]
  20:	cmp	w1, #0x5
  24:	mov	x21, x0
  28:	ccmp	w2, #0xf, #0x4, hi  // hi = pmore
  2c:	and	w0, w2, #0xfffffffd
  30:	ccmp	w0, #0x9, #0x4, ne  // ne = any
  34:	b.ne	1e4 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x1e4>  // b.any
  38:	cmp	w2, #0x9
  3c:	b.eq	94 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x94>  // b.none
  40:	b.hi	a0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0xa0>  // b.pmore
  44:	cmp	w2, #0x4
  48:	b.eq	14c <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x14c>  // b.none
  4c:	b.ls	84 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x84>  // b.plast
  50:	cmp	w2, #0x6
  54:	b.ls	134 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x134>  // b.plast
  58:	cmp	w2, #0x7
  5c:	b.ne	234 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x234>  // b.any
  60:	mov	w1, #0x0                   	// #0
  64:	mov	x0, x21
  68:	bl	0 <_ZNK4llvm10DataLayout14getPointerSizeEj>
  6c:	lsl	w0, w0, #3
  70:	mov	x1, #0x0                   	// #0
  74:	ldp	x19, x20, [sp, #16]
  78:	ldp	x21, x22, [sp, #32]
  7c:	ldp	x29, x30, [sp], #64
  80:	ret
  84:	cmp	w2, #0x2
  88:	b.eq	140 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x140>  // b.none
  8c:	cmp	w2, #0x3
  90:	b.ne	f4 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0xf4>  // b.any
  94:	mov	x0, #0x40                  	// #64
  98:	mov	x1, #0x0                   	// #0
  9c:	b	74 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x74>
  a0:	cmp	w2, #0xe
  a4:	b.eq	168 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x168>  // b.none
  a8:	b.ls	108 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x108>  // b.plast
  ac:	cmp	w2, #0xf
  b0:	b.eq	1c8 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x1c8>  // b.none
  b4:	cmp	w2, #0x10
  b8:	b.ne	234 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x234>  // b.any
  bc:	ldr	x20, [x19, #32]
  c0:	mov	x0, #0xffffffff            	// #4294967295
  c4:	cmp	x20, x0
  c8:	b.hi	250 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x250>  // b.pmore
  cc:	ldr	x1, [x19, #24]
  d0:	mov	x0, x21
  d4:	ldrb	w19, [x19, #40]
  d8:	bl	0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
  dc:	tst	w1, #0xff
  e0:	b.ne	294 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x294>  // b.any
  e4:	mov	x1, #0x0                   	// #0
  e8:	mul	x0, x20, x0
  ec:	bfxil	x1, x19, #0, #8
  f0:	b	74 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x74>
  f4:	cmp	w2, #0x1
  f8:	b.ne	234 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x234>  // b.any
  fc:	mov	x0, #0x10                  	// #16
 100:	mov	x1, #0x0                   	// #0
 104:	b	74 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x74>
 108:	cmp	w2, #0xb
 10c:	b.eq	158 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x158>  // b.none
 110:	cmp	w2, #0xd
 114:	b.ne	234 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x234>  // b.any
 118:	mov	x1, x19
 11c:	mov	x0, x21
 120:	bl	0 <_ZNK4llvm10DataLayout15getStructLayoutEPNS_10StructTypeE>
 124:	ldr	x0, [x0]
 128:	mov	x1, #0x0                   	// #0
 12c:	lsl	x0, x0, #3
 130:	b	74 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x74>
 134:	mov	x0, #0x80                  	// #128
 138:	mov	x1, #0x0                   	// #0
 13c:	b	74 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x74>
 140:	mov	x0, #0x20                  	// #32
 144:	mov	x1, #0x0                   	// #0
 148:	b	74 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x74>
 14c:	mov	x0, #0x50                  	// #80
 150:	mov	x1, #0x0                   	// #0
 154:	b	74 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x74>
 158:	ldr	w0, [x19, #8]
 15c:	mov	x1, #0x0                   	// #0
 160:	lsr	w0, w0, #8
 164:	b	74 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x74>
 168:	ldr	x22, [x19, #24]
 16c:	mov	x0, x21
 170:	str	x23, [sp, #48]
 174:	mov	x1, x22
 178:	ldr	x23, [x19, #32]
 17c:	bl	0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 180:	add	x19, x0, #0x7
 184:	and	w20, w1, #0xff
 188:	mov	x0, x21
 18c:	mov	x1, x22
 190:	lsr	x19, x19, #3
 194:	bl	0 <_ZNK4llvm10DataLayout19getABITypeAlignmentEPNS_4TypeE>
 198:	mov	w2, w0
 19c:	cbz	w0, 274 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x274>
 1a0:	sub	x0, x19, #0x1
 1a4:	mov	x1, #0x0                   	// #0
 1a8:	add	x0, x0, x2
 1ac:	bfxil	x1, x20, #0, #8
 1b0:	udiv	x0, x0, x2
 1b4:	mul	x0, x0, x2
 1b8:	mul	x0, x0, x23
 1bc:	ldr	x23, [sp, #48]
 1c0:	lsl	x0, x0, #3
 1c4:	b	74 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x74>
 1c8:	ldr	w1, [x19, #8]
 1cc:	mov	x0, x21
 1d0:	lsr	w1, w1, #8
 1d4:	bl	0 <_ZNK4llvm10DataLayout14getPointerSizeEj>
 1d8:	mov	x1, #0x0                   	// #0
 1dc:	lsl	w0, w0, #3
 1e0:	b	74 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x74>
 1e4:	sub	w0, w2, #0xd
 1e8:	cmp	w0, #0x1
 1ec:	ccmp	w2, #0x10, #0x4, hi  // hi = pmore
 1f0:	b.ne	210 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x210>  // b.any
 1f4:	mov	x0, x19
 1f8:	mov	x1, #0x0                   	// #0
 1fc:	bl	0 <_ZNK4llvm4Type18isSizedDerivedTypeEPNS_15SmallPtrSetImplIPS0_EE>
 200:	tst	w0, #0xff
 204:	b.eq	210 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x210>  // b.none
 208:	ldrb	w2, [x19, #8]
 20c:	b	38 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x38>
 210:	adrp	x3, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 214:	adrp	x1, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 218:	adrp	x0, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 21c:	add	x3, x3, #0x0
 220:	add	x1, x1, #0x0
 224:	add	x0, x0, #0x0
 228:	mov	w2, #0x271                 	// #625
 22c:	str	x23, [sp, #48]
 230:	bl	0 <__assert_fail>
 234:	adrp	x1, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 238:	adrp	x0, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 23c:	add	x1, x1, #0x0
 240:	add	x0, x0, #0x0
 244:	mov	w2, #0x298                 	// #664
 248:	str	x23, [sp, #48]
 24c:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
 250:	adrp	x3, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 254:	adrp	x1, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 258:	adrp	x0, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 25c:	add	x3, x3, #0x0
 260:	add	x1, x1, #0x0
 264:	add	x0, x0, #0x0
 268:	mov	w2, #0x220                 	// #544
 26c:	str	x23, [sp, #48]
 270:	bl	0 <__assert_fail>
 274:	adrp	x3, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 278:	adrp	x1, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 27c:	adrp	x0, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 280:	add	x3, x3, #0x0
 284:	add	x1, x1, #0x0
 288:	add	x0, x0, #0x0
 28c:	mov	w2, #0xc7                  	// #199
 290:	bl	0 <__assert_fail>
 294:	str	x23, [sp, #48]
 298:	bl	0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>

TargetIntrinsicInfo.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZNK4llvm19TargetIntrinsicInfo14getIntrinsicIDEPKNS_8FunctionE>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x19, [sp, #16]
   c:	mov	x19, x0
  10:	mov	x0, x1
  14:	bl	0 <_ZNK4llvm5Value12getValueNameEv>
  18:	cbz	x0, 40 <_ZNK4llvm19TargetIntrinsicInfo14getIntrinsicIDEPKNS_8FunctionE+0x40>
  1c:	ldr	x3, [x19]
  20:	mov	x1, x0
  24:	mov	x0, x19
  28:	ldr	x19, [sp, #16]
  2c:	ldp	x29, x30, [sp], #32
  30:	ldr	w2, [x1], #16
  34:	ldr	x3, [x3, #24]
  38:	mov	x16, x3
  3c:	br	x16
  40:	mov	w0, #0x0                   	// #0
  44:	ldr	x19, [sp, #16]
  48:	ldp	x29, x30, [sp], #32
  4c:	ret

0000000000000050 <_ZN4llvm19TargetIntrinsicInfoC1Ev>:
  50:	adrp	x1, 0 <_ZNK4llvm19TargetIntrinsicInfo14getIntrinsicIDEPKNS_8FunctionE>
  54:	ldr	x1, [x1]
  58:	add	x1, x1, #0x10
  5c:	str	x1, [x0]
  60:	ret
  64:	nop

0000000000000068 <_ZN4llvm19TargetIntrinsicInfoD1Ev>:
  68:	ret
  6c:	nop

0000000000000070 <_ZN4llvm19TargetIntrinsicInfoD0Ev>:
  70:	stp	x29, x30, [sp, #-32]!
  74:	mov	x29, sp
  78:	str	x19, [sp, #16]
  7c:	mov	x19, x0
  80:	bl	68 <_ZN4llvm19TargetIntrinsicInfoD1Ev>
  84:	mov	x0, x19
  88:	mov	x1, #0x8                   	// #8
  8c:	ldr	x19, [sp, #16]
  90:	ldp	x29, x30, [sp], #32
  94:	b	0 <_ZdlPvm>

TargetLoweringObjectFile.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZNK4llvm24TargetLoweringObjectFile20emitPersonalityValueERNS_10MCStreamerERKNS_10DataLayoutEPKNS_8MCSymbolE>:
   0:	ret
   4:	nop

0000000000000008 <_ZNK4llvm24TargetLoweringObjectFile21getSectionForConstantERKNS_10DataLayoutENS_11SectionKindEPKNS_8ConstantERj>:
   8:	sub	w2, w2, #0x3
   c:	mov	x1, x0
  10:	and	w2, w2, #0xff
  14:	cmp	w2, #0x7
  18:	b.ls	24 <_ZNK4llvm24TargetLoweringObjectFile21getSectionForConstantERKNS_10DataLayoutENS_11SectionKindEPKNS_8ConstantERj+0x1c>  // b.plast
  1c:	ldr	x0, [x1, #32]
  20:	ret
  24:	ldr	x0, [x0, #48]
  28:	cbz	x0, 1c <_ZNK4llvm24TargetLoweringObjectFile21getSectionForConstantERKNS_10DataLayoutENS_11SectionKindEPKNS_8ConstantERj+0x14>
  2c:	ret

0000000000000030 <_ZNK4llvm24TargetLoweringObjectFile23getCFIPersonalitySymbolEPKNS_11GlobalValueERKNS_13TargetMachineEPNS_17MachineModuleInfoE>:
  30:	mov	x0, x2
  34:	b	0 <_ZNK4llvm13TargetMachine9getSymbolEPKNS_11GlobalValueE>

0000000000000038 <_ZL13isNullOrUndefPKN4llvm8ConstantE>:
  38:	stp	x29, x30, [sp, #-48]!
  3c:	mov	x29, sp
  40:	stp	x19, x20, [sp, #16]
  44:	mov	x19, x0
  48:	bl	0 <_ZNK4llvm8Constant11isNullValueEv>
  4c:	ands	w20, w0, #0xff
  50:	b.ne	c8 <_ZL13isNullOrUndefPKN4llvm8ConstantE+0x90>  // b.any
  54:	cbz	x19, 13c <_ZL13isNullOrUndefPKN4llvm8ConstantE+0x104>
  58:	ldrb	w0, [x19, #16]
  5c:	cmp	w0, #0x9
  60:	b.eq	c8 <_ZL13isNullOrUndefPKN4llvm8ConstantE+0x90>  // b.none
  64:	sub	w0, w0, #0x6
  68:	cmp	w0, #0x2
  6c:	b.hi	cc <_ZL13isNullOrUndefPKN4llvm8ConstantE+0x94>  // b.pmore
  70:	ldr	w0, [x19, #20]
  74:	mov	w2, #0x18                  	// #24
  78:	ldrb	w1, [x19, #23]
  7c:	str	x21, [sp, #32]
  80:	ubfx	x0, x0, #0, #28
  84:	umull	x0, w0, w2
  88:	sub	x21, x19, x0
  8c:	tbnz	w1, #6, dc <_ZL13isNullOrUndefPKN4llvm8ConstantE+0xa4>
  90:	cmp	x21, x19
  94:	b.eq	c4 <_ZL13isNullOrUndefPKN4llvm8ConstantE+0x8c>  // b.none
  98:	ldr	x0, [x21]
  9c:	cbz	x0, 11c <_ZL13isNullOrUndefPKN4llvm8ConstantE+0xe4>
  a0:	ldrb	w1, [x0, #16]
  a4:	cmp	w1, #0x10
  a8:	b.hi	fc <_ZL13isNullOrUndefPKN4llvm8ConstantE+0xc4>  // b.pmore
  ac:	bl	38 <_ZL13isNullOrUndefPKN4llvm8ConstantE>
  b0:	tst	w0, #0xff
  b4:	b.eq	e8 <_ZL13isNullOrUndefPKN4llvm8ConstantE+0xb0>  // b.none
  b8:	add	x21, x21, #0x18
  bc:	cmp	x19, x21
  c0:	b.ne	98 <_ZL13isNullOrUndefPKN4llvm8ConstantE+0x60>  // b.any
  c4:	ldr	x21, [sp, #32]
  c8:	mov	w20, #0x1                   	// #1
  cc:	mov	w0, w20
  d0:	ldp	x19, x20, [sp, #16]
  d4:	ldp	x29, x30, [sp], #48
  d8:	ret
  dc:	ldur	x21, [x19, #-8]
  e0:	add	x19, x21, x0
  e4:	b	90 <_ZL13isNullOrUndefPKN4llvm8ConstantE+0x58>
  e8:	mov	w0, w20
  ec:	ldp	x19, x20, [sp, #16]
  f0:	ldr	x21, [sp, #32]
  f4:	ldp	x29, x30, [sp], #48
  f8:	ret
  fc:	adrp	x3, 0 <_ZNK4llvm24TargetLoweringObjectFile20emitPersonalityValueERNS_10MCStreamerERKNS_10DataLayoutEPKNS_8MCSymbolE>
 100:	adrp	x1, 0 <_ZNK4llvm24TargetLoweringObjectFile20emitPersonalityValueERNS_10MCStreamerERKNS_10DataLayoutEPKNS_8MCSymbolE>
 104:	adrp	x0, 0 <_ZNK4llvm24TargetLoweringObjectFile20emitPersonalityValueERNS_10MCStreamerERKNS_10DataLayoutEPKNS_8MCSymbolE>
 108:	add	x3, x3, #0x0
 10c:	add	x1, x1, #0x0
 110:	add	x0, x0, #0x0
 114:	mov	w2, #0x108                 	// #264
 118:	bl	0 <__assert_fail>
 11c:	adrp	x3, 0 <_ZNK4llvm24TargetLoweringObjectFile20emitPersonalityValueERNS_10MCStreamerERKNS_10DataLayoutEPKNS_8MCSymbolE>
 120:	add	x3, x3, #0x0
 124:	adrp	x1, 0 <_ZNK4llvm24TargetLoweringObjectFile20emitPersonalityValueERNS_10MCStreamerERKNS_10DataLayoutEPKNS_8MCSymbolE>
 128:	adrp	x0, 0 <_ZNK4llvm24TargetLoweringObjectFile20emitPersonalityValueERNS_10MCStreamerERKNS_10DataLayoutEPKNS_8MCSymbolE>
 12c:	add	x1, x1, #0x0
 130:	add	x0, x0, #0x0
 134:	mov	w2, #0x69                  	// #105
 138:	bl	0 <__assert_fail>
 13c:	adrp	x3, 0 <_ZNK4llvm24TargetLoweringObjectFile20emitPersonalityValueERNS_10MCStreamerERKNS_10DataLayoutEPKNS_8MCSymbolE>
 140:	adrp	x1, 0 <_ZNK4llvm24TargetLoweringObjectFile20emitPersonalityValueERNS_10MCStreamerERKNS_10DataLayoutEPKNS_8MCSymbolE>
 144:	add	x3, x3, #0x0
 148:	str	x21, [sp, #32]
 14c:	b	128 <_ZL13isNullOrUndefPKN4llvm8ConstantE+0xf0>

0000000000000150 <_ZNK4llvm24TargetLoweringObjectFile25getDebugThreadLocalSymbolEPKNS_8MCSymbolE>:
 150:	mov	x2, x0
 154:	mov	x3, #0x0                   	// #0
 158:	mov	x0, x1
 15c:	mov	w1, #0x0                   	// #0
 160:	ldr	x2, [x2, #800]
 164:	b	0 <_ZN4llvm15MCSymbolRefExpr6createEPKNS_8MCSymbolENS0_11VariantKindERNS_9MCContextENS_5SMLocE>

0000000000000168 <_ZNK4llvm24TargetLoweringObjectFile17getNameWithPrefixERNS_15SmallVectorImplIcEEPKNS_11GlobalValueERKNS_13TargetMachineE>:
 168:	ldr	x0, [x0, #808]
 16c:	mov	w3, #0x0                   	// #0
 170:	b	0 <_ZNK4llvm7Mangler17getNameWithPrefixERNS_15SmallVectorImplIcEEPKNS_11GlobalValueEb>
 174:	nop

0000000000000178 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>:
 178:	stp	x29, x30, [sp, #-16]!
 17c:	adrp	x3, 0 <_ZNK4llvm24TargetLoweringObjectFile20emitPersonalityValueERNS_10MCStreamerERKNS_10DataLayoutEPKNS_8MCSymbolE>
 180:	adrp	x1, 0 <_ZNK4llvm24TargetLoweringObjectFile20emitPersonalityValueERNS_10MCStreamerERKNS_10DataLayoutEPKNS_8MCSymbolE>
 184:	mov	x29, sp
 188:	adrp	x0, 0 <_ZNK4llvm24TargetLoweringObjectFile20emitPersonalityValueERNS_10MCStreamerERKNS_10DataLayoutEPKNS_8MCSymbolE>
 18c:	add	x3, x3, #0x0
 190:	add	x1, x1, #0x0
 194:	add	x0, x0, #0x0
 198:	mov	w2, #0x7d                  	// #125
 19c:	bl	0 <__assert_fail>

00000000000001a0 <_ZNK4llvm24TargetLoweringObjectFile35shouldPutJumpTableInFunctionSectionEbRKNS_8FunctionE>:
 1a0:	ands	w0, w1, #0xff
 1a4:	b.ne	1c8 <_ZNK4llvm24TargetLoweringObjectFile35shouldPutJumpTableInFunctionSectionEbRKNS_8FunctionE+0x28>  // b.any
 1a8:	ldrb	w1, [x2, #32]
 1ac:	and	w1, w1, #0xf
 1b0:	sub	w0, w1, #0x4
 1b4:	cmp	w0, #0x1
 1b8:	cset	w0, ls  // ls = plast
 1bc:	cmp	w1, #0x2
 1c0:	csinc	w0, w0, wzr, ne  // ne = any
 1c4:	cbz	w0, 1cc <_ZNK4llvm24TargetLoweringObjectFile35shouldPutJumpTableInFunctionSectionEbRKNS_8FunctionE+0x2c>
 1c8:	ret
 1cc:	add	w0, w1, #0x7
 1d0:	and	w0, w0, #0xf
 1d4:	cmp	w0, #0x1
 1d8:	cset	w0, ls  // ls = plast
 1dc:	cmp	w1, #0x3
 1e0:	csinc	w0, w0, wzr, ne  // ne = any
 1e4:	ret

00000000000001e8 <_ZN4llvm3isaINS_8FunctionEPKNS_12GlobalObjectEEEbRKT0_.isra.0.part.0>:
 1e8:	stp	x29, x30, [sp, #-16]!
 1ec:	adrp	x3, 0 <_ZNK4llvm24TargetLoweringObjectFile20emitPersonalityValueERNS_10MCStreamerERKNS_10DataLayoutEPKNS_8MCSymbolE>
 1f0:	adrp	x1, 0 <_ZNK4llvm24TargetLoweringObjectFile20emitPersonalityValueERNS_10MCStreamerERKNS_10DataLayoutEPKNS_8MCSymbolE>
 1f4:	mov	x29, sp
 1f8:	adrp	x0, 0 <_ZNK4llvm24TargetLoweringObjectFile20emitPersonalityValueERNS_10MCStreamerERKNS_10DataLayoutEPKNS_8MCSymbolE>
 1fc:	add	x3, x3, #0x0
 200:	add	x1, x1, #0x0
 204:	add	x0, x0, #0x0
 208:	mov	w2, #0x69                  	// #105
 20c:	bl	0 <__assert_fail>

0000000000000210 <_ZN4llvm13isa_impl_wrapINS_11IntegerTypeEPKNS_4TypeES4_E4doitERKS4_.isra.0.part.0>:
 210:	stp	x29, x30, [sp, #-16]!
 214:	adrp	x3, 0 <_ZNK4llvm24TargetLoweringObjectFile20emitPersonalityValueERNS_10MCStreamerERKNS_10DataLayoutEPKNS_8MCSymbolE>
 218:	adrp	x1, 0 <_ZNK4llvm24TargetLoweringObjectFile20emitPersonalityValueERNS_10MCStreamerERKNS_10DataLayoutEPKNS_8MCSymbolE>
 21c:	mov	x29, sp
 220:	adrp	x0, 0 <_ZNK4llvm24TargetLoweringObjectFile20emitPersonalityValueERNS_10MCStreamerERKNS_10DataLayoutEPKNS_8MCSymbolE>
 224:	add	x3, x3, #0x0
 228:	add	x1, x1, #0x0
 22c:	add	x0, x0, #0x0
 230:	mov	w2, #0x69                  	// #105
 234:	bl	0 <__assert_fail>

0000000000000238 <_ZN4llvm3isaINS_9ArrayTypeEPNS_4TypeEEEbRKT0_.isra.0.part.0>:
 238:	stp	x29, x30, [sp, #-16]!
 23c:	adrp	x3, 0 <_ZNK4llvm24TargetLoweringObjectFile20emitPersonalityValueERNS_10MCStreamerERKNS_10DataLayoutEPKNS_8MCSymbolE>
 240:	adrp	x1, 0 <_ZNK4llvm24TargetLoweringObjectFile20emitPersonalityValueERNS_10MCStreamerERKNS_10DataLayoutEPKNS_8MCSymbolE>
 244:	mov	x29, sp
 248:	adrp	x0, 0 <_ZNK4llvm24TargetLoweringObjectFile20emitPersonalityValueERNS_10MCStreamerERKNS_10DataLayoutEPKNS_8MCSymbolE>
 24c:	add	x3, x3, #0x0
 250:	add	x1, x1, #0x0
 254:	add	x0, x0, #0x0
 258:	mov	w2, #0x69                  	// #105
 25c:	bl	0 <__assert_fail>

0000000000000260 <_ZN4llvm3isaINS_14GlobalVariableEPKNS_12GlobalObjectEEEbRKT0_.isra.0.part.0>:
 260:	stp	x29, x30, [sp, #-16]!
 264:	adrp	x3, 0 <_ZNK4llvm24TargetLoweringObjectFile20emitPersonalityValueERNS_10MCStreamerERKNS_10DataLayoutEPKNS_8MCSymbolE>
 268:	adrp	x1, 0 <_ZNK4llvm24TargetLoweringObjectFile20emitPersonalityValueERNS_10MCStreamerERKNS_10DataLayoutEPKNS_8MCSymbolE>
 26c:	mov	x29, sp
 270:	adrp	x0, 0 <_ZNK4llvm24TargetLoweringObjectFile20emitPersonalityValueERNS_10MCStreamerERKNS_10DataLayoutEPKNS_8MCSymbolE>
 274:	add	x3, x3, #0x0
 278:	add	x1, x1, #0x0
 27c:	add	x0, x0, #0x0
 280:	mov	w2, #0x69                  	// #105
 284:	bl	0 <__assert_fail>

0000000000000288 <_ZN4llvm24TargetLoweringObjectFile10InitializeERNS_9MCContextERKNS_13TargetMachineE>:
 288:	stp	x29, x30, [sp, #-48]!
 28c:	mov	x29, sp
 290:	stp	x21, x22, [sp, #32]
 294:	ldr	x21, [x0, #808]
 298:	stp	x19, x20, [sp, #16]
 29c:	mov	x19, x0
 2a0:	str	x1, [x0, #800]
 2a4:	mov	x20, x2
 2a8:	cbz	x21, 2c8 <_ZN4llvm24TargetLoweringObjectFile10InitializeERNS_9MCContextERKNS_13TargetMachineE+0x40>
 2ac:	ldr	x0, [x21, #8]
 2b0:	ldr	w1, [x21, #24]
 2b4:	lsl	x1, x1, #4
 2b8:	bl	0 <_ZdlPvm>
 2bc:	mov	x0, x21
 2c0:	mov	x1, #0x20                  	// #32
 2c4:	bl	0 <_ZdlPvm>
 2c8:	mov	x0, #0x20                  	// #32
 2cc:	bl	0 <_Znwm>
 2d0:	mov	x1, x0
 2d4:	str	x1, [x19, #808]
 2d8:	mov	x0, x20
 2dc:	stp	xzr, xzr, [x1]
 2e0:	str	xzr, [x1, #16]
 2e4:	str	wzr, [x1, #24]
 2e8:	bl	0 <_ZNK4llvm13TargetMachine21isPositionIndependentEv>
 2ec:	mov	w21, w0
 2f0:	mov	x0, x20
 2f4:	ldr	x22, [x19, #800]
 2f8:	bl	0 <_ZNK4llvm13TargetMachine12getCodeModelEv>
 2fc:	cmp	w0, #0x4
 300:	mov	w2, w21
 304:	mov	x3, x22
 308:	add	x1, x20, #0x1c0
 30c:	add	x0, x19, #0x8
 310:	cset	w4, eq  // eq = none
 314:	bl	0 <_ZN4llvm16MCObjectFileInfo20InitMCObjectFileInfoERKNS_6TripleEbRNS_9MCContextEb>
 318:	add	x19, x19, #0x400
 31c:	adrp	x0, 0 <_ZNK4llvm24TargetLoweringObjectFile20emitPersonalityValueERNS_10MCStreamerERKNS_10DataLayoutEPKNS_8MCSymbolE>
 320:	ldp	x21, x22, [sp, #32]
 324:	ldr	q0, [x0]
 328:	stur	q0, [x19, #-204]
 32c:	ldp	x19, x20, [sp, #16]
 330:	ldp	x29, x30, [sp], #48
 334:	ret

0000000000000338 <_ZNK4llvm24TargetLoweringObjectFile22getSectionForJumpTableERKNS_8FunctionERKNS_13TargetMachineE>:
 338:	stp	x29, x30, [sp, #-48]!
 33c:	mov	x29, sp
 340:	stp	x19, x20, [sp, #16]
 344:	mov	x19, x0
 348:	ldr	x0, [x1, #40]
 34c:	str	wzr, [sp, #44]
 350:	ldr	x1, [x19]
 354:	ldr	x20, [x1, #48]
 358:	bl	0 <_ZNK4llvm6Module13getDataLayoutEv>
 35c:	adrp	x3, 0 <_ZNK4llvm24TargetLoweringObjectFile20emitPersonalityValueERNS_10MCStreamerERKNS_10DataLayoutEPKNS_8MCSymbolE>
 360:	mov	w1, #0x3                   	// #3
 364:	add	x3, x3, #0x0
 368:	mov	w2, #0x0                   	// #0
 36c:	cmp	x20, x3
 370:	bfxil	w2, w1, #0, #8
 374:	b.ne	39c <_ZNK4llvm24TargetLoweringObjectFile22getSectionForJumpTableERKNS_8FunctionERKNS_13TargetMachineE+0x64>  // b.any
 378:	ldr	x0, [x19, #48]
 37c:	cbz	x0, 38c <_ZNK4llvm24TargetLoweringObjectFile22getSectionForJumpTableERKNS_8FunctionERKNS_13TargetMachineE+0x54>
 380:	ldp	x19, x20, [sp, #16]
 384:	ldp	x29, x30, [sp], #48
 388:	ret
 38c:	ldr	x0, [x19, #32]
 390:	ldp	x19, x20, [sp, #16]
 394:	ldp	x29, x30, [sp], #48
 398:	ret
 39c:	mov	x1, x0
 3a0:	add	x4, sp, #0x2c
 3a4:	mov	x0, x19
 3a8:	mov	x3, #0x0                   	// #0
 3ac:	blr	x20
 3b0:	ldp	x19, x20, [sp, #16]
 3b4:	ldp	x29, x30, [sp], #48
 3b8:	ret
 3bc:	nop

00000000000003c0 <_ZN4llvm24TargetLoweringObjectFileD1Ev>:
 3c0:	stp	x29, x30, [sp, #-32]!
 3c4:	adrp	x1, 0 <_ZNK4llvm24TargetLoweringObjectFile20emitPersonalityValueERNS_10MCStreamerERKNS_10DataLayoutEPKNS_8MCSymbolE>
 3c8:	mov	x29, sp
 3cc:	ldr	x1, [x1]
 3d0:	stp	x19, x20, [sp, #16]
 3d4:	mov	x19, x0
 3d8:	ldr	x20, [x0, #808]
 3dc:	add	x1, x1, #0x10
 3e0:	str	x1, [x0]
 3e4:	cbz	x20, 404 <_ZN4llvm24TargetLoweringObjectFileD1Ev+0x44>
 3e8:	ldr	x0, [x20, #8]
 3ec:	ldr	w1, [x20, #24]
 3f0:	lsl	x1, x1, #4
 3f4:	bl	0 <_ZdlPvm>
 3f8:	mov	x0, x20
 3fc:	mov	x1, #0x20                  	// #32
 400:	bl	0 <_ZdlPvm>
 404:	ldr	x0, [x19, #728]
 408:	add	x1, x19, #0x2e8
 40c:	cmp	x0, x1
 410:	b.eq	418 <_ZN4llvm24TargetLoweringObjectFileD1Ev+0x58>  // b.none
 414:	bl	0 <_ZdlPv>
 418:	ldr	w1, [x19, #480]
 41c:	ldr	x0, [x19, #464]
 420:	ldp	x19, x20, [sp, #16]
 424:	lsl	x1, x1, #4
 428:	ldp	x29, x30, [sp], #32
 42c:	b	0 <_ZdlPvm>

0000000000000430 <_ZN4llvm24TargetLoweringObjectFileD0Ev>:
 430:	stp	x29, x30, [sp, #-32]!
 434:	mov	x29, sp
 438:	str	x19, [sp, #16]
 43c:	mov	x19, x0
 440:	bl	3c0 <_ZN4llvm24TargetLoweringObjectFileD1Ev>
 444:	mov	x0, x19
 448:	mov	x1, #0x358                 	// #856
 44c:	ldr	x19, [sp, #16]
 450:	ldp	x29, x30, [sp], #32
 454:	b	0 <_ZdlPvm>

0000000000000458 <_ZNK4llvm24TargetLoweringObjectFile28getSymbolWithGlobalValueBaseEPKNS_11GlobalValueENS_9StringRefERKNS_13TargetMachineE>:
 458:	stp	x29, x30, [sp, #-192]!
 45c:	mov	x29, sp
 460:	stp	x19, x20, [sp, #16]
 464:	stp	x21, x22, [sp, #32]
 468:	stp	x23, x24, [sp, #48]
 46c:	stp	x25, x26, [sp, #64]
 470:	cbz	x3, 688 <_ZNK4llvm24TargetLoweringObjectFile28getSymbolWithGlobalValueBaseEPKNS_11GlobalValueENS_9StringRefERKNS_13TargetMachineE+0x230>
 474:	mov	x22, x1
 478:	adrp	x1, 0 <_ZNK4llvm24TargetLoweringObjectFile20emitPersonalityValueERNS_10MCStreamerERKNS_10DataLayoutEPKNS_8MCSymbolE>
 47c:	mov	x23, x0
 480:	add	x19, sp, #0x70
 484:	ldr	d0, [x1]
 488:	add	x1, x19, #0x10
 48c:	ldr	x0, [x22, #40]
 490:	mov	x24, x2
 494:	mov	x21, x3
 498:	mov	x25, x4
 49c:	str	x1, [sp, #112]
 4a0:	str	d0, [sp, #120]
 4a4:	bl	0 <_ZNK4llvm6Module13getDataLayoutEv>
 4a8:	ldr	w0, [x0, #24]
 4ac:	cmp	w0, #0x3
 4b0:	b.eq	624 <_ZNK4llvm24TargetLoweringObjectFile28getSymbolWithGlobalValueBaseEPKNS_11GlobalValueENS_9StringRefERKNS_13TargetMachineE+0x1cc>  // b.none
 4b4:	b.hi	588 <_ZNK4llvm24TargetLoweringObjectFile28getSymbolWithGlobalValueBaseEPKNS_11GlobalValueENS_9StringRefERKNS_13TargetMachineE+0x130>  // b.pmore
 4b8:	cmp	w0, #0x1
 4bc:	b.eq	624 <_ZNK4llvm24TargetLoweringObjectFile28getSymbolWithGlobalValueBaseEPKNS_11GlobalValueENS_9StringRefERKNS_13TargetMachineE+0x1cc>  // b.none
 4c0:	cmp	w0, #0x2
 4c4:	b.eq	5d4 <_ZNK4llvm24TargetLoweringObjectFile28getSymbolWithGlobalValueBaseEPKNS_11GlobalValueENS_9StringRefERKNS_13TargetMachineE+0x17c>  // b.none
 4c8:	cbnz	w0, 670 <_ZNK4llvm24TargetLoweringObjectFile28getSymbolWithGlobalValueBaseEPKNS_11GlobalValueENS_9StringRefERKNS_13TargetMachineE+0x218>
 4cc:	ldr	w0, [sp, #120]
 4d0:	mov	x26, #0x0                   	// #0
 4d4:	ldr	w1, [sp, #124]
 4d8:	add	x26, x0, x26
 4dc:	cmp	x26, x1
 4e0:	b.hi	650 <_ZNK4llvm24TargetLoweringObjectFile28getSymbolWithGlobalValueBaseEPKNS_11GlobalValueENS_9StringRefERKNS_13TargetMachineE+0x1f8>  // b.pmore
 4e4:	ldr	x3, [x23, #808]
 4e8:	mov	x0, x25
 4ec:	mov	x1, x19
 4f0:	mov	x2, x22
 4f4:	mov	w4, #0x0                   	// #0
 4f8:	str	w26, [sp, #120]
 4fc:	bl	0 <_ZNK4llvm13TargetMachine17getNameWithPrefixERNS_15SmallVectorImplIcEEPKNS_11GlobalValueERNS_7ManglerEb>
 500:	ldp	w0, w1, [sp, #120]
 504:	sub	x1, x1, x0
 508:	cmp	x21, x1
 50c:	b.hi	634 <_ZNK4llvm24TargetLoweringObjectFile28getSymbolWithGlobalValueBaseEPKNS_11GlobalValueENS_9StringRefERKNS_13TargetMachineE+0x1dc>  // b.pmore
 510:	ldr	x3, [sp, #112]
 514:	mov	x2, x21
 518:	mov	x1, x24
 51c:	add	x0, x3, x0
 520:	bl	0 <memcpy>
 524:	ldp	w3, w0, [sp, #120]
 528:	add	x21, x3, x21
 52c:	cmp	x21, x0
 530:	b.hi	650 <_ZNK4llvm24TargetLoweringObjectFile28getSymbolWithGlobalValueBaseEPKNS_11GlobalValueENS_9StringRefERKNS_13TargetMachineE+0x1f8>  // b.pmore
 534:	ldr	x0, [x23, #800]
 538:	mov	w2, #0x106                 	// #262
 53c:	add	x1, sp, #0x58
 540:	stp	x19, xzr, [sp, #88]
 544:	add	x19, x19, #0x10
 548:	strh	w2, [sp, #104]
 54c:	str	w21, [sp, #120]
 550:	bl	0 <_ZN4llvm9MCContext17getOrCreateSymbolERKNS_5TwineE>
 554:	ldr	x1, [sp, #112]
 558:	mov	x20, x0
 55c:	cmp	x1, x19
 560:	b.eq	56c <_ZNK4llvm24TargetLoweringObjectFile28getSymbolWithGlobalValueBaseEPKNS_11GlobalValueENS_9StringRefERKNS_13TargetMachineE+0x114>  // b.none
 564:	mov	x0, x1
 568:	bl	0 <free>
 56c:	mov	x0, x20
 570:	ldp	x19, x20, [sp, #16]
 574:	ldp	x21, x22, [sp, #32]
 578:	ldp	x23, x24, [sp, #48]
 57c:	ldp	x25, x26, [sp, #64]
 580:	ldp	x29, x30, [sp], #192
 584:	ret
 588:	cmp	w0, #0x4
 58c:	b.eq	5d4 <_ZNK4llvm24TargetLoweringObjectFile28getSymbolWithGlobalValueBaseEPKNS_11GlobalValueENS_9StringRefERKNS_13TargetMachineE+0x17c>  // b.none
 590:	cmp	w0, #0x5
 594:	b.ne	670 <_ZNK4llvm24TargetLoweringObjectFile28getSymbolWithGlobalValueBaseEPKNS_11GlobalValueENS_9StringRefERKNS_13TargetMachineE+0x218>  // b.any
 598:	adrp	x20, 0 <_ZNK4llvm24TargetLoweringObjectFile20emitPersonalityValueERNS_10MCStreamerERKNS_10DataLayoutEPKNS_8MCSymbolE>
 59c:	add	x20, x20, #0x0
 5a0:	mov	x26, #0x1                   	// #1
 5a4:	ldp	w0, w1, [sp, #120]
 5a8:	sub	x1, x1, x0
 5ac:	cmp	x1, x26
 5b0:	b.cc	5f0 <_ZNK4llvm24TargetLoweringObjectFile28getSymbolWithGlobalValueBaseEPKNS_11GlobalValueENS_9StringRefERKNS_13TargetMachineE+0x198>  // b.lo, b.ul, b.last
 5b4:	nop
 5b8:	ldr	x3, [sp, #112]
 5bc:	mov	x1, x20
 5c0:	mov	x2, x26
 5c4:	add	x0, x3, x0
 5c8:	bl	0 <memcpy>
 5cc:	ldr	w0, [sp, #120]
 5d0:	b	4d4 <_ZNK4llvm24TargetLoweringObjectFile28getSymbolWithGlobalValueBaseEPKNS_11GlobalValueENS_9StringRefERKNS_13TargetMachineE+0x7c>
 5d4:	ldp	w0, w1, [sp, #120]
 5d8:	adrp	x20, 0 <_ZNK4llvm24TargetLoweringObjectFile20emitPersonalityValueERNS_10MCStreamerERKNS_10DataLayoutEPKNS_8MCSymbolE>
 5dc:	mov	x26, #0x1                   	// #1
 5e0:	add	x20, x20, #0x0
 5e4:	sub	x1, x1, x0
 5e8:	cmp	x1, x26
 5ec:	b.cs	5b8 <_ZNK4llvm24TargetLoweringObjectFile28getSymbolWithGlobalValueBaseEPKNS_11GlobalValueENS_9StringRefERKNS_13TargetMachineE+0x160>  // b.hs, b.nlast
 5f0:	add	x2, x0, x26
 5f4:	add	x1, x19, #0x10
 5f8:	mov	x0, x19
 5fc:	mov	x3, #0x1                   	// #1
 600:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
 604:	ldr	x3, [sp, #112]
 608:	mov	x1, x20
 60c:	ldr	w0, [sp, #120]
 610:	mov	x2, x26
 614:	add	x0, x3, x0
 618:	bl	0 <memcpy>
 61c:	ldr	w0, [sp, #120]
 620:	b	4d4 <_ZNK4llvm24TargetLoweringObjectFile28getSymbolWithGlobalValueBaseEPKNS_11GlobalValueENS_9StringRefERKNS_13TargetMachineE+0x7c>
 624:	adrp	x20, 0 <_ZNK4llvm24TargetLoweringObjectFile20emitPersonalityValueERNS_10MCStreamerERKNS_10DataLayoutEPKNS_8MCSymbolE>
 628:	mov	x26, #0x2                   	// #2
 62c:	add	x20, x20, #0x0
 630:	b	5a4 <_ZNK4llvm24TargetLoweringObjectFile28getSymbolWithGlobalValueBaseEPKNS_11GlobalValueENS_9StringRefERKNS_13TargetMachineE+0x14c>
 634:	add	x2, x21, x0
 638:	add	x1, x19, #0x10
 63c:	mov	x0, x19
 640:	mov	x3, #0x1                   	// #1
 644:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
 648:	ldr	w0, [sp, #120]
 64c:	b	510 <_ZNK4llvm24TargetLoweringObjectFile28getSymbolWithGlobalValueBaseEPKNS_11GlobalValueENS_9StringRefERKNS_13TargetMachineE+0xb8>
 650:	adrp	x3, 0 <_ZNK4llvm24TargetLoweringObjectFile20emitPersonalityValueERNS_10MCStreamerERKNS_10DataLayoutEPKNS_8MCSymbolE>
 654:	adrp	x1, 0 <_ZNK4llvm24TargetLoweringObjectFile20emitPersonalityValueERNS_10MCStreamerERKNS_10DataLayoutEPKNS_8MCSymbolE>
 658:	adrp	x0, 0 <_ZNK4llvm24TargetLoweringObjectFile20emitPersonalityValueERNS_10MCStreamerERKNS_10DataLayoutEPKNS_8MCSymbolE>
 65c:	add	x3, x3, #0x0
 660:	add	x1, x1, #0x0
 664:	add	x0, x0, #0x0
 668:	mov	w2, #0x43                  	// #67
 66c:	bl	0 <__assert_fail>
 670:	adrp	x1, 0 <_ZNK4llvm24TargetLoweringObjectFile20emitPersonalityValueERNS_10MCStreamerERKNS_10DataLayoutEPKNS_8MCSymbolE>
 674:	adrp	x0, 0 <_ZNK4llvm24TargetLoweringObjectFile20emitPersonalityValueERNS_10MCStreamerERKNS_10DataLayoutEPKNS_8MCSymbolE>
 678:	add	x1, x1, #0x0
 67c:	add	x0, x0, #0x0
 680:	mov	w2, #0x14d                 	// #333
 684:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
 688:	adrp	x3, 0 <_ZNK4llvm24TargetLoweringObjectFile20emitPersonalityValueERNS_10MCStreamerERKNS_10DataLayoutEPKNS_8MCSymbolE>
 68c:	adrp	x1, 0 <_ZNK4llvm24TargetLoweringObjectFile20emitPersonalityValueERNS_10MCStreamerERKNS_10DataLayoutEPKNS_8MCSymbolE>
 690:	adrp	x0, 0 <_ZNK4llvm24TargetLoweringObjectFile20emitPersonalityValueERNS_10MCStreamerERKNS_10DataLayoutEPKNS_8MCSymbolE>
 694:	add	x3, x3, #0x0
 698:	add	x1, x1, #0x0
 69c:	add	x0, x0, #0x0
 6a0:	mov	w2, #0x76                  	// #118
 6a4:	bl	0 <__assert_fail>

00000000000006a8 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE>:
 6a8:	stp	x29, x30, [sp, #-64]!
 6ac:	mov	x29, sp
 6b0:	stp	x19, x20, [sp, #16]
 6b4:	mov	x19, x0
 6b8:	stp	x21, x22, [sp, #32]
 6bc:	mov	x21, x1
 6c0:	bl	0 <_ZNK4llvm11GlobalValue13isDeclarationEv>
 6c4:	tst	w0, #0xff
 6c8:	b.ne	9d4 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x32c>  // b.any
 6cc:	ldrb	w0, [x19, #32]
 6d0:	and	w0, w0, #0xf
 6d4:	cmp	w0, #0x1
 6d8:	b.eq	9d4 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x32c>  // b.none
 6dc:	ldrb	w2, [x19, #16]
 6e0:	cbnz	w2, 704 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x5c>
 6e4:	mov	w0, #0x1                   	// #1
 6e8:	mov	w20, #0x0                   	// #0
 6ec:	bfxil	w20, w0, #0, #8
 6f0:	mov	w0, w20
 6f4:	ldp	x19, x20, [sp, #16]
 6f8:	ldp	x21, x22, [sp, #32]
 6fc:	ldp	x29, x30, [sp], #64
 700:	ret
 704:	cmp	w2, #0x3
 708:	b.ne	a88 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x3e0>  // b.any
 70c:	ldrb	w1, [x19, #33]
 710:	tst	x1, #0x1c
 714:	b.ne	7a8 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x100>  // b.any
 718:	cmp	w0, #0xa
 71c:	b.ne	740 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x98>  // b.any
 720:	mov	w0, #0x10                  	// #16
 724:	mov	w20, #0x0                   	// #0
 728:	bfxil	w20, w0, #0, #8
 72c:	mov	w0, w20
 730:	ldp	x19, x20, [sp, #16]
 734:	ldp	x21, x22, [sp, #32]
 738:	ldp	x29, x30, [sp], #64
 73c:	ret
 740:	mov	x0, x19
 744:	bl	0 <_ZNK4llvm11GlobalValue13isDeclarationEv>
 748:	tst	w0, #0xff
 74c:	b.ne	ac0 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x418>  // b.any
 750:	ldur	x0, [x19, #-24]
 754:	bl	38 <_ZL13isNullOrUndefPKN4llvm8ConstantE>
 758:	tst	w0, #0xff
 75c:	ldrb	w0, [x19, #80]
 760:	b.eq	800 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x158>  // b.none
 764:	tbnz	w0, #0, 808 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x160>
 768:	ldrh	w0, [x19, #34]
 76c:	tbnz	w0, #6, 84c <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x1a4>
 770:	ldrsb	w0, [x21, #776]
 774:	tbnz	w0, #31, 84c <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x1a4>
 778:	ldrb	w0, [x19, #32]
 77c:	mov	w1, #0xe                   	// #14
 780:	mov	w20, #0x0                   	// #0
 784:	and	w0, w0, #0xf
 788:	bfxil	w20, w1, #0, #8
 78c:	sub	w1, w0, #0x7
 790:	cmp	w1, #0x1
 794:	b.ls	6f0 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x48>  // b.plast
 798:	cbnz	w0, 884 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x1dc>
 79c:	mov	w0, #0xf                   	// #15
 7a0:	bfxil	w20, w0, #0, #8
 7a4:	b	6f0 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x48>
 7a8:	mov	x0, x19
 7ac:	bl	0 <_ZNK4llvm11GlobalValue13isDeclarationEv>
 7b0:	tst	w0, #0xff
 7b4:	b.ne	ac0 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x418>  // b.any
 7b8:	ldur	x0, [x19, #-24]
 7bc:	bl	38 <_ZL13isNullOrUndefPKN4llvm8ConstantE>
 7c0:	tst	w0, #0xff
 7c4:	b.eq	7f0 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x148>  // b.none
 7c8:	ldrb	w0, [x19, #80]
 7cc:	tbnz	w0, #0, 7f0 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x148>
 7d0:	ldrh	w0, [x19, #34]
 7d4:	tbnz	w0, #6, 7f0 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x148>
 7d8:	ldrsb	w0, [x21, #776]
 7dc:	tbnz	w0, #31, 7f0 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x148>
 7e0:	mov	w0, #0xb                   	// #11
 7e4:	mov	w20, #0x0                   	// #0
 7e8:	bfxil	w20, w0, #0, #8
 7ec:	b	6f0 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x48>
 7f0:	mov	w0, #0xc                   	// #12
 7f4:	mov	w20, #0x0                   	// #0
 7f8:	bfxil	w20, w0, #0, #8
 7fc:	b	6f0 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x48>
 800:	tbz	w0, #0, 84c <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x1a4>
 804:	nop
 808:	mov	x0, x19
 80c:	bl	0 <_ZNK4llvm11GlobalValue13isDeclarationEv>
 810:	tst	w0, #0xff
 814:	b.ne	ac0 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x418>  // b.any
 818:	ldur	x22, [x19, #-24]
 81c:	mov	x0, x22
 820:	bl	0 <_ZNK4llvm8Constant15needsRelocationEv>
 824:	tst	w0, #0xff
 828:	b.ne	85c <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x1b4>  // b.any
 82c:	ldrb	w0, [x19, #32]
 830:	ubfx	x0, x0, #6, #2
 834:	cmp	w0, #0x2
 838:	b.eq	890 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x1e8>  // b.none
 83c:	mov	w0, #0x3                   	// #3
 840:	mov	w20, #0x0                   	// #0
 844:	bfxil	w20, w0, #0, #8
 848:	b	6f0 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x48>
 84c:	mov	w0, #0x11                  	// #17
 850:	mov	w20, #0x0                   	// #0
 854:	bfxil	w20, w0, #0, #8
 858:	b	6f0 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x48>
 85c:	mov	x0, x21
 860:	bl	0 <_ZNK4llvm13TargetMachine18getRelocationModelEv>
 864:	cmp	w0, #0x0
 868:	sub	w0, w0, #0x3
 86c:	ccmp	w0, #0x2, #0x0, ne  // ne = any
 870:	b.ls	83c <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x194>  // b.plast
 874:	mov	w0, #0x12                  	// #18
 878:	mov	w20, #0x0                   	// #0
 87c:	bfxil	w20, w0, #0, #8
 880:	b	6f0 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x48>
 884:	mov	w0, #0xd                   	// #13
 888:	bfxil	w20, w0, #0, #8
 88c:	b	6f0 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x48>
 890:	ldr	x0, [x22]
 894:	cbz	x0, b28 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x480>
 898:	ldrb	w1, [x0, #8]
 89c:	cmp	w1, #0xe
 8a0:	b.eq	940 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x298>  // b.none
 8a4:	ldr	x0, [x19, #40]
 8a8:	bl	0 <_ZNK4llvm6Module13getDataLayoutEv>
 8ac:	mov	x19, x0
 8b0:	ldr	x22, [x22]
 8b4:	mov	x1, x22
 8b8:	bl	0 <_ZNK4llvm24TargetLoweringObjectFile20emitPersonalityValueERNS_10MCStreamerERKNS_10DataLayoutEPKNS_8MCSymbolE>
 8bc:	mov	x2, x0
 8c0:	and	w21, w1, #0xff
 8c4:	mov	x1, x22
 8c8:	mov	x0, x19
 8cc:	mov	x19, x2
 8d0:	bl	0 <_ZNK4llvm10DataLayout19getABITypeAlignmentEPNS_4TypeE>
 8d4:	mov	w1, w0
 8d8:	cbz	w0, b38 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x490>
 8dc:	add	x0, x19, #0x7
 8e0:	lsr	x0, x0, #3
 8e4:	sub	x0, x0, #0x1
 8e8:	add	x0, x0, x1
 8ec:	udiv	x0, x0, x1
 8f0:	mul	x0, x0, x1
 8f4:	cbnz	w21, b30 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x488>
 8f8:	cmp	x0, #0x10
 8fc:	b.eq	a08 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x360>  // b.none
 900:	b.hi	928 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x280>  // b.pmore
 904:	cmp	x0, #0x4
 908:	b.eq	9f8 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x350>  // b.none
 90c:	mov	w20, #0x0                   	// #0
 910:	cmp	x0, #0x8
 914:	bfxil	w20, w0, #0, #8
 918:	b.eq	6f0 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x48>  // b.none
 91c:	mov	w0, #0x3                   	// #3
 920:	bfxil	w20, w0, #0, #8
 924:	b	6f0 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x48>
 928:	cmp	x0, #0x20
 92c:	b.ne	91c <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x274>  // b.any
 930:	mov	w0, #0xa                   	// #10
 934:	mov	w20, #0x0                   	// #0
 938:	bfxil	w20, w0, #0, #8
 93c:	b	6f0 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x48>
 940:	stp	x23, x24, [sp, #48]
 944:	ldr	x24, [x0, #24]
 948:	cbz	x24, b04 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x45c>
 94c:	ldrb	w1, [x24, #8]
 950:	cmp	w1, #0xb
 954:	b.eq	960 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x2b8>  // b.none
 958:	ldp	x23, x24, [sp, #48]
 95c:	b	8a4 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x1fc>
 960:	ldr	w1, [x24, #8]
 964:	lsr	w3, w1, #8
 968:	sub	w2, w3, #0x8
 96c:	cmp	w3, #0x20
 970:	and	w2, w2, #0xfffffff7
 974:	ccmp	w2, #0x0, #0x4, ne  // ne = any
 978:	b.ne	958 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x2b0>  // b.any
 97c:	ldrb	w3, [x22, #16]
 980:	sub	w2, w3, #0xb
 984:	and	w2, w2, #0xff
 988:	cmp	w2, #0x1
 98c:	b.ls	a18 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x370>  // b.plast
 990:	cmp	w3, #0xa
 994:	b.ne	958 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x2b0>  // b.any
 998:	ldr	x0, [x0, #32]
 99c:	cmp	x0, #0x1
 9a0:	b.ne	958 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x2b0>  // b.any
 9a4:	lsr	w1, w1, #8
 9a8:	cmp	w1, #0x8
 9ac:	b.eq	a6c <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x3c4>  // b.none
 9b0:	cmp	w1, #0x10
 9b4:	b.eq	aac <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x404>  // b.none
 9b8:	cmp	w1, #0x20
 9bc:	b.ne	b08 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x460>  // b.any
 9c0:	mov	w0, #0x6                   	// #6
 9c4:	mov	w20, #0x0                   	// #0
 9c8:	bfxil	w20, w0, #0, #8
 9cc:	ldp	x23, x24, [sp, #48]
 9d0:	b	6f0 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x48>
 9d4:	adrp	x3, 0 <_ZNK4llvm24TargetLoweringObjectFile20emitPersonalityValueERNS_10MCStreamerERKNS_10DataLayoutEPKNS_8MCSymbolE>
 9d8:	adrp	x1, 0 <_ZNK4llvm24TargetLoweringObjectFile20emitPersonalityValueERNS_10MCStreamerERKNS_10DataLayoutEPKNS_8MCSymbolE>
 9dc:	adrp	x0, 0 <_ZNK4llvm24TargetLoweringObjectFile20emitPersonalityValueERNS_10MCStreamerERKNS_10DataLayoutEPKNS_8MCSymbolE>
 9e0:	add	x3, x3, #0x0
 9e4:	add	x1, x1, #0x0
 9e8:	add	x0, x0, #0x0
 9ec:	mov	w2, #0x91                  	// #145
 9f0:	stp	x23, x24, [sp, #48]
 9f4:	bl	0 <__assert_fail>
 9f8:	mov	w0, #0x7                   	// #7
 9fc:	mov	w20, #0x0                   	// #0
 a00:	bfxil	w20, w0, #0, #8
 a04:	b	6f0 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x48>
 a08:	mov	w0, #0x9                   	// #9
 a0c:	mov	w20, #0x0                   	// #0
 a10:	bfxil	w20, w0, #0, #8
 a14:	b	6f0 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x48>
 a18:	mov	x0, x22
 a1c:	bl	0 <_ZNK4llvm22ConstantDataSequential14getNumElementsEv>
 a20:	mov	w23, w0
 a24:	cbz	w0, ae4 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x43c>
 a28:	sub	w23, w23, #0x1
 a2c:	mov	x0, x22
 a30:	mov	w1, w23
 a34:	bl	0 <_ZNK4llvm22ConstantDataSequential19getElementAsIntegerEj>
 a38:	cbnz	x0, 958 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x2b0>
 a3c:	mov	w21, #0x0                   	// #0
 a40:	cbnz	w23, a54 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x3ac>
 a44:	b	a80 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x3d8>
 a48:	add	w21, w21, #0x1
 a4c:	cmp	w23, w21
 a50:	b.eq	a80 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x3d8>  // b.none
 a54:	mov	w1, w21
 a58:	mov	x0, x22
 a5c:	bl	0 <_ZNK4llvm22ConstantDataSequential19getElementAsIntegerEj>
 a60:	cbnz	x0, a48 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x3a0>
 a64:	ldp	x23, x24, [sp, #48]
 a68:	b	8a4 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x1fc>
 a6c:	mov	w0, #0x4                   	// #4
 a70:	mov	w20, #0x0                   	// #0
 a74:	bfxil	w20, w0, #0, #8
 a78:	ldp	x23, x24, [sp, #48]
 a7c:	b	6f0 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x48>
 a80:	ldr	w1, [x24, #8]
 a84:	b	9a4 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x2fc>
 a88:	adrp	x3, 0 <_ZNK4llvm24TargetLoweringObjectFile20emitPersonalityValueERNS_10MCStreamerERKNS_10DataLayoutEPKNS_8MCSymbolE>
 a8c:	adrp	x1, 0 <_ZNK4llvm24TargetLoweringObjectFile20emitPersonalityValueERNS_10MCStreamerERKNS_10DataLayoutEPKNS_8MCSymbolE>
 a90:	adrp	x0, 0 <_ZNK4llvm24TargetLoweringObjectFile20emitPersonalityValueERNS_10MCStreamerERKNS_10DataLayoutEPKNS_8MCSymbolE>
 a94:	add	x3, x3, #0x0
 a98:	add	x1, x1, #0x0
 a9c:	add	x0, x0, #0x0
 aa0:	mov	w2, #0x108                 	// #264
 aa4:	stp	x23, x24, [sp, #48]
 aa8:	bl	0 <__assert_fail>
 aac:	mov	w0, #0x5                   	// #5
 ab0:	mov	w20, #0x0                   	// #0
 ab4:	bfxil	w20, w0, #0, #8
 ab8:	ldp	x23, x24, [sp, #48]
 abc:	b	6f0 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x48>
 ac0:	adrp	x3, 0 <_ZNK4llvm24TargetLoweringObjectFile20emitPersonalityValueERNS_10MCStreamerERKNS_10DataLayoutEPKNS_8MCSymbolE>
 ac4:	adrp	x1, 0 <_ZNK4llvm24TargetLoweringObjectFile20emitPersonalityValueERNS_10MCStreamerERKNS_10DataLayoutEPKNS_8MCSymbolE>
 ac8:	adrp	x0, 0 <_ZNK4llvm24TargetLoweringObjectFile20emitPersonalityValueERNS_10MCStreamerERKNS_10DataLayoutEPKNS_8MCSymbolE>
 acc:	add	x3, x3, #0x0
 ad0:	add	x1, x1, #0x0
 ad4:	add	x0, x0, #0x0
 ad8:	mov	w2, #0x89                  	// #137
 adc:	stp	x23, x24, [sp, #48]
 ae0:	bl	0 <__assert_fail>
 ae4:	adrp	x3, 0 <_ZNK4llvm24TargetLoweringObjectFile20emitPersonalityValueERNS_10MCStreamerERKNS_10DataLayoutEPKNS_8MCSymbolE>
 ae8:	adrp	x1, 0 <_ZNK4llvm24TargetLoweringObjectFile20emitPersonalityValueERNS_10MCStreamerERKNS_10DataLayoutEPKNS_8MCSymbolE>
 aec:	adrp	x0, 0 <_ZNK4llvm24TargetLoweringObjectFile20emitPersonalityValueERNS_10MCStreamerERKNS_10DataLayoutEPKNS_8MCSymbolE>
 af0:	add	x3, x3, #0x0
 af4:	add	x1, x1, #0x0
 af8:	add	x0, x0, #0x0
 afc:	mov	w2, #0x61                  	// #97
 b00:	bl	0 <__assert_fail>
 b04:	bl	210 <_ZN4llvm13isa_impl_wrapINS_11IntegerTypeEPKNS_4TypeES4_E4doitERKS4_.isra.0.part.0>
 b08:	adrp	x3, 0 <_ZNK4llvm24TargetLoweringObjectFile20emitPersonalityValueERNS_10MCStreamerERKNS_10DataLayoutEPKNS_8MCSymbolE>
 b0c:	adrp	x1, 0 <_ZNK4llvm24TargetLoweringObjectFile20emitPersonalityValueERNS_10MCStreamerERKNS_10DataLayoutEPKNS_8MCSymbolE>
 b10:	adrp	x0, 0 <_ZNK4llvm24TargetLoweringObjectFile20emitPersonalityValueERNS_10MCStreamerERKNS_10DataLayoutEPKNS_8MCSymbolE>
 b14:	add	x3, x3, #0x0
 b18:	add	x1, x1, #0x0
 b1c:	add	x0, x0, #0x0
 b20:	mov	w2, #0xcb                  	// #203
 b24:	bl	0 <__assert_fail>
 b28:	stp	x23, x24, [sp, #48]
 b2c:	bl	238 <_ZN4llvm3isaINS_9ArrayTypeEPNS_4TypeEEEbRKT0_.isra.0.part.0>
 b30:	stp	x23, x24, [sp, #48]
 b34:	bl	178 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
 b38:	adrp	x3, 0 <_ZNK4llvm24TargetLoweringObjectFile20emitPersonalityValueERNS_10MCStreamerERKNS_10DataLayoutEPKNS_8MCSymbolE>
 b3c:	adrp	x1, 0 <_ZNK4llvm24TargetLoweringObjectFile20emitPersonalityValueERNS_10MCStreamerERKNS_10DataLayoutEPKNS_8MCSymbolE>
 b40:	adrp	x0, 0 <_ZNK4llvm24TargetLoweringObjectFile20emitPersonalityValueERNS_10MCStreamerERKNS_10DataLayoutEPKNS_8MCSymbolE>
 b44:	add	x3, x3, #0x0
 b48:	add	x1, x1, #0x0
 b4c:	add	x0, x0, #0x0
 b50:	mov	w2, #0xc7                  	// #199
 b54:	stp	x23, x24, [sp, #48]
 b58:	bl	0 <__assert_fail>
 b5c:	nop

0000000000000b60 <_ZNK4llvm24TargetLoweringObjectFile16SectionForGlobalEPKNS_12GlobalObjectENS_11SectionKindERKNS_13TargetMachineE>:
 b60:	stp	x29, x30, [sp, #-80]!
 b64:	mov	x29, sp
 b68:	ldrh	w4, [x1, #34]
 b6c:	stp	x19, x20, [sp, #16]
 b70:	mov	x20, x0
 b74:	tbz	w4, #6, b90 <_ZNK4llvm24TargetLoweringObjectFile16SectionForGlobalEPKNS_12GlobalObjectENS_11SectionKindERKNS_13TargetMachineE+0x30>
 b78:	ldr	x4, [x0]
 b7c:	ldr	x4, [x4, #80]
 b80:	blr	x4
 b84:	ldp	x19, x20, [sp, #16]
 b88:	ldp	x29, x30, [sp], #80
 b8c:	ret
 b90:	stp	x21, x22, [sp, #32]
 b94:	mov	x19, x1
 b98:	mov	w22, w2
 b9c:	ldrb	w0, [x1, #16]
 ba0:	mov	x21, x3
 ba4:	cmp	w0, #0x3
 ba8:	b.eq	bdc <_ZNK4llvm24TargetLoweringObjectFile16SectionForGlobalEPKNS_12GlobalObjectENS_11SectionKindERKNS_13TargetMachineE+0x7c>  // b.none
 bac:	cbz	w0, cc4 <_ZNK4llvm24TargetLoweringObjectFile16SectionForGlobalEPKNS_12GlobalObjectENS_11SectionKindERKNS_13TargetMachineE+0x164>
 bb0:	ldr	x4, [x20]
 bb4:	mov	x3, x21
 bb8:	mov	w2, w22
 bbc:	mov	x1, x19
 bc0:	mov	x0, x20
 bc4:	ldr	x4, [x4, #168]
 bc8:	blr	x4
 bcc:	ldp	x19, x20, [sp, #16]
 bd0:	ldp	x21, x22, [sp, #32]
 bd4:	ldp	x29, x30, [sp], #80
 bd8:	ret
 bdc:	ldr	x3, [x19, #72]
 be0:	stp	x23, x24, [sp, #48]
 be4:	add	x24, sp, #0x48
 be8:	mov	x0, x24
 bec:	adrp	x1, 0 <_ZNK4llvm24TargetLoweringObjectFile20emitPersonalityValueERNS_10MCStreamerERKNS_10DataLayoutEPKNS_8MCSymbolE>
 bf0:	mov	x2, #0xb                   	// #11
 bf4:	add	x1, x1, #0x0
 bf8:	and	w23, w22, #0xff
 bfc:	str	x3, [sp, #72]
 c00:	bl	0 <_ZNK4llvm12AttributeSet12hasAttributeENS_9StringRefE>
 c04:	tst	w0, #0xff
 c08:	b.eq	c1c <_ZNK4llvm24TargetLoweringObjectFile16SectionForGlobalEPKNS_12GlobalObjectENS_11SectionKindERKNS_13TargetMachineE+0xbc>  // b.none
 c0c:	sub	w0, w23, #0xd
 c10:	and	w0, w0, #0xff
 c14:	cmp	w0, #0x2
 c18:	b.ls	c94 <_ZNK4llvm24TargetLoweringObjectFile16SectionForGlobalEPKNS_12GlobalObjectENS_11SectionKindERKNS_13TargetMachineE+0x134>  // b.plast
 c1c:	mov	x0, x24
 c20:	adrp	x1, 0 <_ZNK4llvm24TargetLoweringObjectFile20emitPersonalityValueERNS_10MCStreamerERKNS_10DataLayoutEPKNS_8MCSymbolE>
 c24:	mov	x2, #0xc                   	// #12
 c28:	add	x1, x1, #0x0
 c2c:	bl	0 <_ZNK4llvm12AttributeSet12hasAttributeENS_9StringRefE>
 c30:	tst	w0, #0xff
 c34:	ccmp	w23, #0x11, #0x0, ne  // ne = any
 c38:	b.eq	c94 <_ZNK4llvm24TargetLoweringObjectFile16SectionForGlobalEPKNS_12GlobalObjectENS_11SectionKindERKNS_13TargetMachineE+0x134>  // b.none
 c3c:	mov	x0, x24
 c40:	adrp	x1, 0 <_ZNK4llvm24TargetLoweringObjectFile20emitPersonalityValueERNS_10MCStreamerERKNS_10DataLayoutEPKNS_8MCSymbolE>
 c44:	mov	x2, #0xd                   	// #13
 c48:	add	x1, x1, #0x0
 c4c:	bl	0 <_ZNK4llvm12AttributeSet12hasAttributeENS_9StringRefE>
 c50:	tst	w0, #0xff
 c54:	ccmp	w23, #0x12, #0x0, ne  // ne = any
 c58:	b.eq	c94 <_ZNK4llvm24TargetLoweringObjectFile16SectionForGlobalEPKNS_12GlobalObjectENS_11SectionKindERKNS_13TargetMachineE+0x134>  // b.none
 c5c:	mov	x0, x24
 c60:	adrp	x1, 0 <_ZNK4llvm24TargetLoweringObjectFile20emitPersonalityValueERNS_10MCStreamerERKNS_10DataLayoutEPKNS_8MCSymbolE>
 c64:	mov	x2, #0xe                   	// #14
 c68:	add	x1, x1, #0x0
 c6c:	bl	0 <_ZNK4llvm12AttributeSet12hasAttributeENS_9StringRefE>
 c70:	tst	w0, #0xff
 c74:	b.eq	c88 <_ZNK4llvm24TargetLoweringObjectFile16SectionForGlobalEPKNS_12GlobalObjectENS_11SectionKindERKNS_13TargetMachineE+0x128>  // b.none
 c78:	sub	w23, w23, #0x3
 c7c:	and	w23, w23, #0xff
 c80:	cmp	w23, #0x7
 c84:	b.ls	c94 <_ZNK4llvm24TargetLoweringObjectFile16SectionForGlobalEPKNS_12GlobalObjectENS_11SectionKindERKNS_13TargetMachineE+0x134>  // b.plast
 c88:	ldrb	w0, [x19, #16]
 c8c:	ldp	x23, x24, [sp, #48]
 c90:	b	bac <_ZNK4llvm24TargetLoweringObjectFile16SectionForGlobalEPKNS_12GlobalObjectENS_11SectionKindERKNS_13TargetMachineE+0x4c>
 c94:	ldr	x4, [x20]
 c98:	mov	x3, x21
 c9c:	mov	w2, w22
 ca0:	mov	x1, x19
 ca4:	mov	x0, x20
 ca8:	ldr	x4, [x4, #80]
 cac:	blr	x4
 cb0:	ldp	x19, x20, [sp, #16]
 cb4:	ldp	x21, x22, [sp, #32]
 cb8:	ldp	x23, x24, [sp, #48]
 cbc:	ldp	x29, x30, [sp], #80
 cc0:	ret
 cc4:	add	x0, x19, #0x70
 cc8:	adrp	x1, 0 <_ZNK4llvm24TargetLoweringObjectFile20emitPersonalityValueERNS_10MCStreamerERKNS_10DataLayoutEPKNS_8MCSymbolE>
 ccc:	mov	x2, #0x15                  	// #21
 cd0:	add	x1, x1, #0x0
 cd4:	bl	0 <_ZNK4llvm13AttributeList14hasFnAttributeENS_9StringRefE>
 cd8:	tst	w0, #0xff
 cdc:	b.eq	bb0 <_ZNK4llvm24TargetLoweringObjectFile16SectionForGlobalEPKNS_12GlobalObjectENS_11SectionKindERKNS_13TargetMachineE+0x50>  // b.none
 ce0:	ldr	x4, [x20]
 ce4:	mov	x3, x21
 ce8:	mov	w2, w22
 cec:	mov	x1, x19
 cf0:	mov	x0, x20
 cf4:	ldr	x4, [x4, #80]
 cf8:	blr	x4
 cfc:	ldp	x21, x22, [sp, #32]
 d00:	b	b84 <_ZNK4llvm24TargetLoweringObjectFile16SectionForGlobalEPKNS_12GlobalObjectENS_11SectionKindERKNS_13TargetMachineE+0x24>
 d04:	nop

0000000000000d08 <_ZNK4llvm24TargetLoweringObjectFile17getTTypeReferenceEPKNS_15MCSymbolRefExprEjRNS_10MCStreamerE>:
 d08:	stp	x29, x30, [sp, #-48]!
 d0c:	ands	w2, w2, #0x70
 d10:	mov	x29, sp
 d14:	stp	x19, x20, [sp, #16]
 d18:	mov	x20, x1
 d1c:	b.eq	d94 <_ZNK4llvm24TargetLoweringObjectFile17getTTypeReferenceEPKNS_15MCSymbolRefExprEjRNS_10MCStreamerE+0x8c>  // b.none
 d20:	stp	x21, x22, [sp, #32]
 d24:	cmp	w2, #0x10
 d28:	b.ne	da4 <_ZNK4llvm24TargetLoweringObjectFile17getTTypeReferenceEPKNS_15MCSymbolRefExprEjRNS_10MCStreamerE+0x9c>  // b.any
 d2c:	mov	x19, x0
 d30:	mov	x21, x3
 d34:	ldr	x0, [x0, #800]
 d38:	mov	w1, #0x1                   	// #1
 d3c:	bl	0 <_ZN4llvm9MCContext16createTempSymbolEb>
 d40:	mov	x22, x0
 d44:	ldr	x3, [x21]
 d48:	mov	x1, x0
 d4c:	mov	x2, #0x0                   	// #0
 d50:	mov	x0, x21
 d54:	ldr	x3, [x3, #176]
 d58:	blr	x3
 d5c:	ldr	x2, [x19, #800]
 d60:	mov	x0, x22
 d64:	mov	x3, #0x0                   	// #0
 d68:	mov	w1, #0x0                   	// #0
 d6c:	bl	0 <_ZN4llvm15MCSymbolRefExpr6createEPKNS_8MCSymbolENS0_11VariantKindERNS_9MCContextENS_5SMLocE>
 d70:	mov	x2, x0
 d74:	mov	x1, x20
 d78:	mov	x4, #0x0                   	// #0
 d7c:	ldp	x21, x22, [sp, #32]
 d80:	mov	w0, #0x11                  	// #17
 d84:	ldr	x3, [x19, #800]
 d88:	ldp	x19, x20, [sp, #16]
 d8c:	ldp	x29, x30, [sp], #48
 d90:	b	0 <_ZN4llvm12MCBinaryExpr6createENS0_6OpcodeEPKNS_6MCExprES4_RNS_9MCContextENS_5SMLocE>
 d94:	mov	x0, x1
 d98:	ldp	x19, x20, [sp, #16]
 d9c:	ldp	x29, x30, [sp], #48
 da0:	ret
 da4:	adrp	x0, 0 <_ZNK4llvm24TargetLoweringObjectFile20emitPersonalityValueERNS_10MCStreamerERKNS_10DataLayoutEPKNS_8MCSymbolE>
 da8:	mov	w1, #0x1                   	// #1
 dac:	add	x0, x0, #0x0
 db0:	bl	0 <_ZN4llvm18report_fatal_errorEPKcb>
 db4:	nop

0000000000000db8 <_ZNK4llvm24TargetLoweringObjectFile23getTTypeGlobalReferenceEPKNS_11GlobalValueEjRKNS_13TargetMachineEPNS_17MachineModuleInfoERNS_10MCStreamerE>:
 db8:	stp	x29, x30, [sp, #-48]!
 dbc:	mov	x29, sp
 dc0:	stp	x19, x20, [sp, #16]
 dc4:	mov	x19, x0
 dc8:	mov	w20, w2
 dcc:	mov	x0, x3
 dd0:	str	x21, [sp, #32]
 dd4:	mov	x21, x5
 dd8:	bl	0 <_ZNK4llvm13TargetMachine9getSymbolEPKNS_11GlobalValueE>
 ddc:	ldr	x2, [x19, #800]
 de0:	mov	x3, #0x0                   	// #0
 de4:	mov	w1, #0x0                   	// #0
 de8:	bl	0 <_ZN4llvm15MCSymbolRefExpr6createEPKNS_8MCSymbolENS0_11VariantKindERNS_9MCContextENS_5SMLocE>
 dec:	mov	x1, x0
 df0:	mov	x3, x21
 df4:	mov	w2, w20
 df8:	mov	x0, x19
 dfc:	ldp	x19, x20, [sp, #16]
 e00:	ldr	x21, [sp, #32]
 e04:	ldp	x29, x30, [sp], #48
 e08:	b	d08 <_ZNK4llvm24TargetLoweringObjectFile17getTTypeReferenceEPKNS_15MCSymbolRefExprEjRNS_10MCStreamerE>

Disassembly of section .text._ZNK4llvm24TargetLoweringObjectFile18emitModuleMetadataERNS_10MCStreamerERNS_6ModuleE:

0000000000000000 <_ZNK4llvm24TargetLoweringObjectFile18emitModuleMetadataERNS_10MCStreamerERNS_6ModuleE>:
   0:	ret

Disassembly of section .text._ZN4llvm24TargetLoweringObjectFile17getModuleMetadataERNS_6ModuleE:

0000000000000000 <_ZN4llvm24TargetLoweringObjectFile17getModuleMetadataERNS_6ModuleE>:
   0:	ret

Disassembly of section .text._ZNK4llvm24TargetLoweringObjectFile20getStaticCtorSectionEjPKNS_8MCSymbolE:

0000000000000000 <_ZNK4llvm24TargetLoweringObjectFile20getStaticCtorSectionEjPKNS_8MCSymbolE>:
   0:	ldr	x0, [x0, #840]
   4:	ret

Disassembly of section .text._ZNK4llvm24TargetLoweringObjectFile20getStaticDtorSectionEjPKNS_8MCSymbolE:

0000000000000000 <_ZNK4llvm24TargetLoweringObjectFile20getStaticDtorSectionEjPKNS_8MCSymbolE>:
   0:	ldr	x0, [x0, #848]
   4:	ret

Disassembly of section .text._ZNK4llvm24TargetLoweringObjectFile22lowerRelativeReferenceEPKNS_11GlobalValueES3_RKNS_13TargetMachineE:

0000000000000000 <_ZNK4llvm24TargetLoweringObjectFile22lowerRelativeReferenceEPKNS_11GlobalValueES3_RKNS_13TargetMachineE>:
   0:	mov	x0, #0x0                   	// #0
   4:	ret

Disassembly of section .text._ZNK4llvm24TargetLoweringObjectFile25getIndirectSymViaGOTPCRelEPKNS_11GlobalValueEPKNS_8MCSymbolERKNS_7MCValueElPNS_17MachineModuleInfoERNS_10MCStreamerE:

0000000000000000 <_ZNK4llvm24TargetLoweringObjectFile25getIndirectSymViaGOTPCRelEPKNS_11GlobalValueEPKNS_8MCSymbolERKNS_7MCValueElPNS_17MachineModuleInfoERNS_10MCStreamerE>:
   0:	mov	x0, #0x0                   	// #0
   4:	ret

Disassembly of section .text._ZNK4llvm24TargetLoweringObjectFile24emitLinkerFlagsForGlobalERNS_11raw_ostreamEPKNS_11GlobalValueE:

0000000000000000 <_ZNK4llvm24TargetLoweringObjectFile24emitLinkerFlagsForGlobalERNS_11raw_ostreamEPKNS_11GlobalValueE>:
   0:	ret

Disassembly of section .text._ZNK4llvm24TargetLoweringObjectFile22emitLinkerFlagsForUsedERNS_11raw_ostreamEPKNS_11GlobalValueE:

0000000000000000 <_ZNK4llvm24TargetLoweringObjectFile22emitLinkerFlagsForUsedERNS_11raw_ostreamEPKNS_11GlobalValueE>:
   0:	ret

Disassembly of section .text._ZNK4llvm24TargetLoweringObjectFile25getSectionForCommandLinesEv:

0000000000000000 <_ZNK4llvm24TargetLoweringObjectFile25getSectionForCommandLinesEv>:
   0:	mov	x0, #0x0                   	// #0
   4:	ret

Disassembly of section .text._ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE:

0000000000000000 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	mov	x29, sp
   8:	ldrb	w2, [x1, #8]
   c:	stp	x19, x20, [sp, #16]
  10:	mov	x19, x1
  14:	sub	w1, w2, #0x1
  18:	and	w1, w1, #0xff
  1c:	stp	x21, x22, [sp, #32]
  20:	cmp	w1, #0x5
  24:	mov	x21, x0
  28:	ccmp	w2, #0xf, #0x4, hi  // hi = pmore
  2c:	and	w0, w2, #0xfffffffd
  30:	ccmp	w0, #0x9, #0x4, ne  // ne = any
  34:	b.ne	1e4 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x1e4>  // b.any
  38:	cmp	w2, #0x9
  3c:	b.eq	94 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x94>  // b.none
  40:	b.hi	a0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0xa0>  // b.pmore
  44:	cmp	w2, #0x4
  48:	b.eq	14c <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x14c>  // b.none
  4c:	b.ls	84 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x84>  // b.plast
  50:	cmp	w2, #0x6
  54:	b.ls	134 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x134>  // b.plast
  58:	cmp	w2, #0x7
  5c:	b.ne	234 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x234>  // b.any
  60:	mov	w1, #0x0                   	// #0
  64:	mov	x0, x21
  68:	bl	0 <_ZNK4llvm10DataLayout14getPointerSizeEj>
  6c:	lsl	w0, w0, #3
  70:	mov	x1, #0x0                   	// #0
  74:	ldp	x19, x20, [sp, #16]
  78:	ldp	x21, x22, [sp, #32]
  7c:	ldp	x29, x30, [sp], #64
  80:	ret
  84:	cmp	w2, #0x2
  88:	b.eq	140 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x140>  // b.none
  8c:	cmp	w2, #0x3
  90:	b.ne	f4 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0xf4>  // b.any
  94:	mov	x0, #0x40                  	// #64
  98:	mov	x1, #0x0                   	// #0
  9c:	b	74 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x74>
  a0:	cmp	w2, #0xe
  a4:	b.eq	168 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x168>  // b.none
  a8:	b.ls	108 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x108>  // b.plast
  ac:	cmp	w2, #0xf
  b0:	b.eq	1c8 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x1c8>  // b.none
  b4:	cmp	w2, #0x10
  b8:	b.ne	234 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x234>  // b.any
  bc:	ldr	x20, [x19, #32]
  c0:	mov	x0, #0xffffffff            	// #4294967295
  c4:	cmp	x20, x0
  c8:	b.hi	250 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x250>  // b.pmore
  cc:	ldr	x1, [x19, #24]
  d0:	mov	x0, x21
  d4:	ldrb	w19, [x19, #40]
  d8:	bl	0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
  dc:	tst	w1, #0xff
  e0:	b.ne	294 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x294>  // b.any
  e4:	mov	x1, #0x0                   	// #0
  e8:	mul	x0, x20, x0
  ec:	bfxil	x1, x19, #0, #8
  f0:	b	74 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x74>
  f4:	cmp	w2, #0x1
  f8:	b.ne	234 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x234>  // b.any
  fc:	mov	x0, #0x10                  	// #16
 100:	mov	x1, #0x0                   	// #0
 104:	b	74 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x74>
 108:	cmp	w2, #0xb
 10c:	b.eq	158 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x158>  // b.none
 110:	cmp	w2, #0xd
 114:	b.ne	234 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x234>  // b.any
 118:	mov	x1, x19
 11c:	mov	x0, x21
 120:	bl	0 <_ZNK4llvm10DataLayout15getStructLayoutEPNS_10StructTypeE>
 124:	ldr	x0, [x0]
 128:	mov	x1, #0x0                   	// #0
 12c:	lsl	x0, x0, #3
 130:	b	74 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x74>
 134:	mov	x0, #0x80                  	// #128
 138:	mov	x1, #0x0                   	// #0
 13c:	b	74 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x74>
 140:	mov	x0, #0x20                  	// #32
 144:	mov	x1, #0x0                   	// #0
 148:	b	74 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x74>
 14c:	mov	x0, #0x50                  	// #80
 150:	mov	x1, #0x0                   	// #0
 154:	b	74 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x74>
 158:	ldr	w0, [x19, #8]
 15c:	mov	x1, #0x0                   	// #0
 160:	lsr	w0, w0, #8
 164:	b	74 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x74>
 168:	ldr	x22, [x19, #24]
 16c:	mov	x0, x21
 170:	str	x23, [sp, #48]
 174:	mov	x1, x22
 178:	ldr	x23, [x19, #32]
 17c:	bl	0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 180:	add	x19, x0, #0x7
 184:	and	w20, w1, #0xff
 188:	mov	x0, x21
 18c:	mov	x1, x22
 190:	lsr	x19, x19, #3
 194:	bl	0 <_ZNK4llvm10DataLayout19getABITypeAlignmentEPNS_4TypeE>
 198:	mov	w2, w0
 19c:	cbz	w0, 274 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x274>
 1a0:	sub	x0, x19, #0x1
 1a4:	mov	x1, #0x0                   	// #0
 1a8:	add	x0, x0, x2
 1ac:	bfxil	x1, x20, #0, #8
 1b0:	udiv	x0, x0, x2
 1b4:	mul	x0, x0, x2
 1b8:	mul	x0, x0, x23
 1bc:	ldr	x23, [sp, #48]
 1c0:	lsl	x0, x0, #3
 1c4:	b	74 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x74>
 1c8:	ldr	w1, [x19, #8]
 1cc:	mov	x0, x21
 1d0:	lsr	w1, w1, #8
 1d4:	bl	0 <_ZNK4llvm10DataLayout14getPointerSizeEj>
 1d8:	mov	x1, #0x0                   	// #0
 1dc:	lsl	w0, w0, #3
 1e0:	b	74 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x74>
 1e4:	sub	w0, w2, #0xd
 1e8:	cmp	w0, #0x1
 1ec:	ccmp	w2, #0x10, #0x4, hi  // hi = pmore
 1f0:	b.ne	210 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x210>  // b.any
 1f4:	mov	x0, x19
 1f8:	mov	x1, #0x0                   	// #0
 1fc:	bl	0 <_ZNK4llvm4Type18isSizedDerivedTypeEPNS_15SmallPtrSetImplIPS0_EE>
 200:	tst	w0, #0xff
 204:	b.eq	210 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x210>  // b.none
 208:	ldrb	w2, [x19, #8]
 20c:	b	38 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x38>
 210:	adrp	x3, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 214:	adrp	x1, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 218:	adrp	x0, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 21c:	add	x3, x3, #0x0
 220:	add	x1, x1, #0x0
 224:	add	x0, x0, #0x0
 228:	mov	w2, #0x271                 	// #625
 22c:	str	x23, [sp, #48]
 230:	bl	0 <__assert_fail>
 234:	adrp	x1, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 238:	adrp	x0, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 23c:	add	x1, x1, #0x0
 240:	add	x0, x0, #0x0
 244:	mov	w2, #0x298                 	// #664
 248:	str	x23, [sp, #48]
 24c:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
 250:	adrp	x3, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 254:	adrp	x1, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 258:	adrp	x0, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 25c:	add	x3, x3, #0x0
 260:	add	x1, x1, #0x0
 264:	add	x0, x0, #0x0
 268:	mov	w2, #0x220                 	// #544
 26c:	str	x23, [sp, #48]
 270:	bl	0 <__assert_fail>
 274:	adrp	x3, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 278:	adrp	x1, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 27c:	adrp	x0, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 280:	add	x3, x3, #0x0
 284:	add	x1, x1, #0x0
 288:	add	x0, x0, #0x0
 28c:	mov	w2, #0xc7                  	// #199
 290:	bl	0 <__assert_fail>
 294:	str	x23, [sp, #48]
 298:	bl	0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>

TargetMachine.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZNSt14_Function_base13_Base_managerIZN4llvm13TargetMachine19getTargetIRAnalysisEvEUlRKNS1_8FunctionEE_E10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation>:
       0:	cmp	w2, #0x2
       4:	b.eq	20 <_ZNSt14_Function_base13_Base_managerIZN4llvm13TargetMachine19getTargetIRAnalysisEvEUlRKNS1_8FunctionEE_E10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation+0x20>  // b.none
       8:	cmp	w2, #0x3
       c:	b.eq	18 <_ZNSt14_Function_base13_Base_managerIZN4llvm13TargetMachine19getTargetIRAnalysisEvEUlRKNS1_8FunctionEE_E10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation+0x18>  // b.none
      10:	cmp	w2, #0x1
      14:	b.eq	24 <_ZNSt14_Function_base13_Base_managerIZN4llvm13TargetMachine19getTargetIRAnalysisEvEUlRKNS1_8FunctionEE_E10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation+0x24>  // b.none
      18:	mov	w0, #0x0                   	// #0
      1c:	ret
      20:	ldr	x1, [x1]
      24:	str	x1, [x0]
      28:	mov	w0, #0x0                   	// #0
      2c:	ret

0000000000000030 <_ZN4llvm13TargetMachine22getTargetTransformInfoERKNS_8FunctionE>:
      30:	stp	x29, x30, [sp, #-32]!
      34:	mov	x29, sp
      38:	ldr	x0, [x1, #40]
      3c:	str	x19, [sp, #16]
      40:	mov	x19, x8
      44:	bl	0 <_ZNK4llvm6Module13getDataLayoutEv>
      48:	mov	x1, x0
      4c:	mov	x0, x19
      50:	bl	0 <_ZN4llvm19TargetTransformInfoC1ERKNS_10DataLayoutE>
      54:	mov	x0, x19
      58:	ldr	x19, [sp, #16]
      5c:	ldp	x29, x30, [sp], #32
      60:	ret
      64:	nop

0000000000000068 <_ZNSt17_Function_handlerIFN4llvm19TargetTransformInfoERKNS0_8FunctionEEZNS0_13TargetMachine19getTargetIRAnalysisEvEUlS4_E_E9_M_invokeERKSt9_Any_dataS4_>:
      68:	stp	x29, x30, [sp, #-32]!
      6c:	adrp	x2, 0 <_ZNSt14_Function_base13_Base_managerIZN4llvm13TargetMachine19getTargetIRAnalysisEvEUlRKNS1_8FunctionEE_E10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation>
      70:	add	x2, x2, #0x0
      74:	mov	x29, sp
      78:	ldr	x0, [x0]
      7c:	ldr	x4, [x0]
      80:	ldr	x4, [x4, #64]
      84:	str	x19, [sp, #16]
      88:	mov	x19, x8
      8c:	cmp	x4, x2
      90:	b.ne	b8 <_ZNSt17_Function_handlerIFN4llvm19TargetTransformInfoERKNS0_8FunctionEEZNS0_13TargetMachine19getTargetIRAnalysisEvEUlS4_E_E9_M_invokeERKSt9_Any_dataS4_+0x50>  // b.any
      94:	ldr	x0, [x1, #40]
      98:	bl	0 <_ZNK4llvm6Module13getDataLayoutEv>
      9c:	mov	x1, x0
      a0:	mov	x0, x19
      a4:	bl	0 <_ZN4llvm19TargetTransformInfoC1ERKNS_10DataLayoutE>
      a8:	mov	x0, x19
      ac:	ldr	x19, [sp, #16]
      b0:	ldp	x29, x30, [sp], #32
      b4:	ret
      b8:	blr	x4
      bc:	mov	x0, x19
      c0:	ldr	x19, [sp, #16]
      c4:	ldp	x29, x30, [sp], #32
      c8:	ret
      cc:	nop

00000000000000d0 <_ZN4llvm13TargetMachineD1Ev>:
      d0:	stp	x29, x30, [sp, #-48]!
      d4:	adrp	x1, 0 <_ZNSt14_Function_base13_Base_managerIZN4llvm13TargetMachine19getTargetIRAnalysisEvEUlRKNS1_8FunctionEE_E10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation>
      d8:	mov	x29, sp
      dc:	ldr	x1, [x1]
      e0:	stp	x19, x20, [sp, #16]
      e4:	mov	x19, x0
      e8:	ldr	x20, [x0, #904]
      ec:	str	x21, [sp, #32]
      f0:	ldr	x21, [x0, #912]
      f4:	add	x1, x1, #0x10
      f8:	str	x1, [x0]
      fc:	cmp	x20, x21
     100:	b.eq	12c <_ZN4llvm13TargetMachineD1Ev+0x5c>  // b.none
     104:	nop
     108:	mov	x1, x20
     10c:	add	x20, x20, #0x20
     110:	ldr	x0, [x1], #16
     114:	cmp	x0, x1
     118:	b.eq	2e4 <_ZN4llvm13TargetMachineD1Ev+0x214>  // b.none
     11c:	bl	0 <_ZdlPv>
     120:	cmp	x21, x20
     124:	b.ne	108 <_ZN4llvm13TargetMachineD1Ev+0x38>  // b.any
     128:	ldr	x21, [x19, #904]
     12c:	cbz	x21, 138 <_ZN4llvm13TargetMachineD1Ev+0x68>
     130:	mov	x0, x21
     134:	bl	0 <_ZdlPv>
     138:	ldr	x0, [x19, #872]
     13c:	add	x1, x19, #0x378
     140:	cmp	x0, x1
     144:	b.eq	14c <_ZN4llvm13TargetMachineD1Ev+0x7c>  // b.none
     148:	bl	0 <_ZdlPv>
     14c:	ldr	x0, [x19, #840]
     150:	add	x1, x19, #0x358
     154:	cmp	x0, x1
     158:	b.eq	160 <_ZN4llvm13TargetMachineD1Ev+0x90>  // b.none
     15c:	bl	0 <_ZdlPv>
     160:	ldr	x20, [x19, #752]
     164:	ldr	x21, [x19, #760]
     168:	cmp	x20, x21
     16c:	b.eq	194 <_ZN4llvm13TargetMachineD1Ev+0xc4>  // b.none
     170:	mov	x1, x20
     174:	add	x20, x20, #0x20
     178:	ldr	x0, [x1], #16
     17c:	cmp	x0, x1
     180:	b.eq	2d4 <_ZN4llvm13TargetMachineD1Ev+0x204>  // b.none
     184:	bl	0 <_ZdlPv>
     188:	cmp	x20, x21
     18c:	b.ne	170 <_ZN4llvm13TargetMachineD1Ev+0xa0>  // b.any
     190:	ldr	x21, [x19, #752]
     194:	cbz	x21, 1a0 <_ZN4llvm13TargetMachineD1Ev+0xd0>
     198:	mov	x0, x21
     19c:	bl	0 <_ZdlPv>
     1a0:	ldr	x0, [x19, #720]
     1a4:	add	x1, x19, #0x2e0
     1a8:	cmp	x0, x1
     1ac:	b.eq	1b4 <_ZN4llvm13TargetMachineD1Ev+0xe4>  // b.none
     1b0:	bl	0 <_ZdlPv>
     1b4:	ldr	x0, [x19, #688]
     1b8:	add	x1, x19, #0x2c0
     1bc:	cmp	x0, x1
     1c0:	b.eq	1c8 <_ZN4llvm13TargetMachineD1Ev+0xf8>  // b.none
     1c4:	bl	0 <_ZdlPv>
     1c8:	ldr	x20, [x19, #608]
     1cc:	cbz	x20, 22c <_ZN4llvm13TargetMachineD1Ev+0x15c>
     1d0:	ldr	x1, [x20]
     1d4:	adrp	x0, 0 <_ZNSt14_Function_base13_Base_managerIZN4llvm13TargetMachine19getTargetIRAnalysisEvEUlRKNS1_8FunctionEE_E10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation>
     1d8:	add	x0, x0, #0x0
     1dc:	ldr	x1, [x1, #8]
     1e0:	cmp	x1, x0
     1e4:	b.ne	2f4 <_ZN4llvm13TargetMachineD1Ev+0x224>  // b.any
     1e8:	adrp	x1, 0 <_ZTVN4llvm15MCSubtargetInfoE>
     1ec:	add	x2, x20, #0x50
     1f0:	ldr	x0, [x20, #64]
     1f4:	ldr	x1, [x1]
     1f8:	cmp	x0, x2
     1fc:	add	x1, x1, #0x10
     200:	str	x1, [x20]
     204:	b.eq	20c <_ZN4llvm13TargetMachineD1Ev+0x13c>  // b.none
     208:	bl	0 <_ZdlPv>
     20c:	ldr	x0, [x20, #8]
     210:	add	x1, x20, #0x18
     214:	cmp	x0, x1
     218:	b.eq	220 <_ZN4llvm13TargetMachineD1Ev+0x150>  // b.none
     21c:	bl	0 <_ZdlPv>
     220:	mov	x0, x20
     224:	mov	x1, #0xd0                  	// #208
     228:	bl	0 <_ZdlPvm>
     22c:	ldr	x0, [x19, #600]
     230:	cbz	x0, 23c <_ZN4llvm13TargetMachineD1Ev+0x16c>
     234:	mov	x1, #0x20                  	// #32
     238:	bl	0 <_ZdlPvm>
     23c:	ldr	x20, [x19, #592]
     240:	cbz	x20, 270 <_ZN4llvm13TargetMachineD1Ev+0x1a0>
     244:	ldr	x0, [x20, #200]
     248:	ldr	w1, [x20, #216]
     24c:	lsl	x1, x1, #3
     250:	bl	0 <_ZdlPvm>
     254:	ldr	x0, [x20, #168]
     258:	ldr	w1, [x20, #184]
     25c:	lsl	x1, x1, #3
     260:	bl	0 <_ZdlPvm>
     264:	mov	x0, x20
     268:	mov	x1, #0xe0                  	// #224
     26c:	bl	0 <_ZdlPvm>
     270:	ldr	x0, [x19, #584]
     274:	cbz	x0, 284 <_ZN4llvm13TargetMachineD1Ev+0x1b4>
     278:	ldr	x1, [x0]
     27c:	ldr	x1, [x1, #8]
     280:	blr	x1
     284:	ldr	x0, [x19, #536]
     288:	add	x1, x19, #0x228
     28c:	cmp	x0, x1
     290:	b.eq	298 <_ZN4llvm13TargetMachineD1Ev+0x1c8>  // b.none
     294:	bl	0 <_ZdlPv>
     298:	ldr	x0, [x19, #504]
     29c:	add	x1, x19, #0x208
     2a0:	cmp	x0, x1
     2a4:	b.eq	2ac <_ZN4llvm13TargetMachineD1Ev+0x1dc>  // b.none
     2a8:	bl	0 <_ZdlPv>
     2ac:	ldr	x0, [x19, #448]
     2b0:	add	x1, x19, #0x1d0
     2b4:	cmp	x0, x1
     2b8:	b.eq	2c0 <_ZN4llvm13TargetMachineD1Ev+0x1f0>  // b.none
     2bc:	bl	0 <_ZdlPv>
     2c0:	add	x0, x19, #0x10
     2c4:	ldp	x19, x20, [sp, #16]
     2c8:	ldr	x21, [sp, #32]
     2cc:	ldp	x29, x30, [sp], #48
     2d0:	b	0 <_ZN4llvm10DataLayoutD1Ev>
     2d4:	cmp	x21, x20
     2d8:	b.ne	170 <_ZN4llvm13TargetMachineD1Ev+0xa0>  // b.any
     2dc:	ldr	x21, [x19, #752]
     2e0:	b	194 <_ZN4llvm13TargetMachineD1Ev+0xc4>
     2e4:	cmp	x21, x20
     2e8:	b.ne	108 <_ZN4llvm13TargetMachineD1Ev+0x38>  // b.any
     2ec:	ldr	x21, [x19, #904]
     2f0:	b	12c <_ZN4llvm13TargetMachineD1Ev+0x5c>
     2f4:	mov	x0, x20
     2f8:	blr	x1
     2fc:	b	22c <_ZN4llvm13TargetMachineD1Ev+0x15c>

0000000000000300 <_ZN4llvm13TargetMachineD0Ev>:
     300:	stp	x29, x30, [sp, #-32]!
     304:	mov	x29, sp
     308:	str	x19, [sp, #16]
     30c:	mov	x19, x0
     310:	bl	d0 <_ZN4llvm13TargetMachineD1Ev>
     314:	mov	x0, x19
     318:	mov	x1, #0x3a0                 	// #928
     31c:	ldr	x19, [sp, #16]
     320:	ldp	x29, x30, [sp], #32
     324:	b	0 <_ZdlPvm>

0000000000000328 <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE>:
     328:	stp	x29, x30, [sp, #-112]!
     32c:	adrp	x7, 0 <_ZNSt14_Function_base13_Base_managerIZN4llvm13TargetMachine19getTargetIRAnalysisEvEUlRKNS1_8FunctionEE_E10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation>
     330:	mov	x8, #0x800000000           	// #34359738368
     334:	mov	x29, sp
     338:	ldr	x7, [x7]
     33c:	stp	x19, x20, [sp, #16]
     340:	mov	x19, x0
     344:	add	x7, x7, #0x10
     348:	add	x0, x0, #0x10
     34c:	stp	x21, x22, [sp, #32]
     350:	add	x13, x19, #0x40
     354:	add	x12, x19, #0x58
     358:	stp	x23, x24, [sp, #48]
     35c:	add	x10, x19, #0xe8
     360:	add	x9, x19, #0x108
     364:	stp	x25, x26, [sp, #64]
     368:	mov	x22, x4
     36c:	mov	x11, #0x1000000000          	// #68719476736
     370:	stp	x27, x28, [sp, #80]
     374:	mov	x24, x5
     378:	mov	x23, x6
     37c:	stp	x7, x1, [x19]
     380:	add	x7, x19, #0x1a0
     384:	mov	x1, x2
     388:	strh	wzr, [x19, #24]
     38c:	mov	x2, x3
     390:	strh	wzr, [x19, #32]
     394:	stp	x13, x8, [x19, #48]
     398:	stp	x12, x11, [x19, #72]
     39c:	stp	x10, xzr, [x19, #216]
     3a0:	strb	wzr, [x19, #232]
     3a4:	stp	x9, x8, [x19, #248]
     3a8:	str	xzr, [x0, #376]
     3ac:	stp	x7, x8, [x19, #400]
     3b0:	ldp	x26, x25, [sp, #112]
     3b4:	ldr	x20, [sp, #128]
     3b8:	bl	0 <_ZN4llvm10DataLayout5resetENS_9StringRefE>
     3bc:	add	x0, x19, #0x1d0
     3c0:	ldr	x21, [x22, #8]
     3c4:	str	x0, [x19, #448]
     3c8:	ldr	x27, [x22]
     3cc:	cmn	x27, x21
     3d0:	ccmp	x27, #0x0, #0x0, ne  // ne = any
     3d4:	b.eq	acc <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE+0x7a4>  // b.none
     3d8:	str	x21, [sp, #104]
     3dc:	cmp	x21, #0xf
     3e0:	b.hi	94c <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE+0x624>  // b.pmore
     3e4:	cmp	x21, #0x1
     3e8:	b.ne	8d0 <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE+0x5a8>  // b.any
     3ec:	ldrb	w1, [x27]
     3f0:	strb	w1, [x19, #464]
     3f4:	str	x21, [x19, #456]
     3f8:	add	x2, x19, #0x1f8
     3fc:	strb	wzr, [x0, x21]
     400:	add	x0, x19, #0x208
     404:	ldr	q0, [x22, #32]
     408:	ldr	x1, [x22, #48]
     40c:	str	x1, [x19, #496]
     410:	str	q0, [x19, #480]
     414:	cbz	x24, 8d8 <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE+0x5b0>
     418:	str	x23, [sp, #104]
     41c:	cmp	x23, #0xf
     420:	str	x0, [x19, #504]
     424:	mov	x1, x23
     428:	b.hi	a98 <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE+0x770>  // b.pmore
     42c:	cmp	x23, #0x1
     430:	b.ne	a54 <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE+0x72c>  // b.any
     434:	ldrb	w2, [x24]
     438:	strb	w2, [x19, #520]
     43c:	str	x1, [x19, #512]
     440:	add	x2, x19, #0x218
     444:	strb	wzr, [x0, x1]
     448:	add	x0, x19, #0x228
     44c:	cbnz	x26, 8ec <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE+0x5c4>
     450:	str	x0, [x19, #536]
     454:	str	xzr, [x19, #544]
     458:	strb	wzr, [x19, #552]
     45c:	movi	v0.4s, #0x0
     460:	add	x1, x19, #0x200
     464:	mov	x2, #0x100000000           	// #4294967296
     468:	mov	w0, #0x2                   	// #2
     46c:	str	x2, [x19, #568]
     470:	mov	x23, x20
     474:	str	w0, [x19, #576]
     478:	add	x0, x19, #0x2c0
     47c:	add	x6, x19, #0x2b0
     480:	stur	q0, [x1, #72]
     484:	stur	q0, [x1, #88]
     488:	ldrb	w3, [x19, #616]
     48c:	ldrh	w1, [x19, #624]
     490:	and	w3, w3, #0xfffffffc
     494:	strb	w3, [x19, #616]
     498:	ldrh	w5, [x20]
     49c:	ldrb	w4, [x20, #8]
     4a0:	ldr	w3, [x20, #4]
     4a4:	bfxil	w1, w5, #0, #9
     4a8:	strh	w1, [x19, #624]
     4ac:	ldrb	w1, [x19, #632]
     4b0:	ldrb	w8, [x20, #16]
     4b4:	str	w3, [x19, #628]
     4b8:	bfxil	w1, w4, #0, #3
     4bc:	strb	w1, [x19, #632]
     4c0:	ldp	x1, x5, [x20, #24]
     4c4:	str	x5, [x19, #656]
     4c8:	ldrb	w4, [x19, #640]
     4cc:	ldr	w3, [x20, #12]
     4d0:	str	w3, [x19, #636]
     4d4:	ldr	d0, [x20, #40]
     4d8:	and	x3, x1, #0xffffffff007fffff
     4dc:	mov	w1, w4
     4e0:	ldr	x2, [x20, #48]
     4e4:	bfxil	w1, w8, #0, #2
     4e8:	strb	w1, [x19, #640]
     4ec:	ldr	x1, [x19, #648]
     4f0:	str	x2, [x19, #672]
     4f4:	str	d0, [x19, #664]
     4f8:	and	x1, x1, #0xff800000
     4fc:	ldrh	w2, [x19, #680]
     500:	orr	x1, x1, x3
     504:	str	x1, [x19, #648]
     508:	ldr	w7, [x20, #20]
     50c:	ldrh	w1, [x23, #56]!
     510:	str	w7, [x19, #644]
     514:	bfxil	w2, w1, #0, #12
     518:	strh	w2, [x19, #680]
     51c:	ldr	w1, [x23, #4]
     520:	ldr	x21, [x20, #72]
     524:	str	x0, [x19, #688]
     528:	str	w1, [x19, #684]
     52c:	ldr	x22, [x20, #64]
     530:	cmn	x22, x21
     534:	ccmp	x22, #0x0, #0x0, ne  // ne = any
     538:	b.eq	acc <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE+0x7a4>  // b.none
     53c:	str	x21, [sp, #104]
     540:	cmp	x21, #0xf
     544:	b.hi	984 <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE+0x65c>  // b.pmore
     548:	cmp	x21, #0x1
     54c:	b.ne	92c <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE+0x604>  // b.any
     550:	ldrb	w1, [x22]
     554:	strb	w1, [x19, #704]
     558:	str	x21, [x19, #696]
     55c:	add	x1, x19, #0x2d0
     560:	strb	wzr, [x0, x21]
     564:	add	x0, x19, #0x2e0
     568:	ldr	x21, [x20, #104]
     56c:	str	x0, [x19, #720]
     570:	ldr	x22, [x20, #96]
     574:	cmn	x22, x21
     578:	ccmp	x22, #0x0, #0x0, ne  // ne = any
     57c:	b.eq	acc <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE+0x7a4>  // b.none
     580:	str	x21, [sp, #104]
     584:	cmp	x21, #0xf
     588:	b.hi	9b8 <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE+0x690>  // b.pmore
     58c:	cmp	x21, #0x1
     590:	b.ne	934 <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE+0x60c>  // b.any
     594:	ldrb	w1, [x22]
     598:	strb	w1, [x19, #736]
     59c:	str	x21, [x19, #728]
     5a0:	add	x24, x19, #0x2f0
     5a4:	strb	wzr, [x0, x21]
     5a8:	mov	x21, #0x0                   	// #0
     5ac:	ldp	x0, x22, [x20, #128]
     5b0:	stp	xzr, xzr, [x24]
     5b4:	str	xzr, [x24, #16]
     5b8:	sub	x22, x22, x0
     5bc:	cmp	xzr, x22, asr #5
     5c0:	asr	x0, x22, #5
     5c4:	b.eq	5e0 <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE+0x2b8>  // b.none
     5c8:	mov	x1, #0x3ffffffffffffff     	// #288230376151711743
     5cc:	cmp	x0, x1
     5d0:	b.hi	ad8 <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE+0x7b0>  // b.pmore
     5d4:	mov	x0, x22
     5d8:	bl	0 <_Znwm>
     5dc:	mov	x21, x0
     5e0:	dup	v0.2d, x21
     5e4:	add	x22, x21, x22
     5e8:	str	q0, [x19, #752]
     5ec:	str	x22, [x24, #16]
     5f0:	ldp	x27, x25, [x20, #128]
     5f4:	cmp	x27, x25
     5f8:	b.eq	69c <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE+0x374>  // b.none
     5fc:	add	x26, sp, #0x68
     600:	b	62c <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE+0x304>
     604:	cmp	x22, #0x1
     608:	b.ne	91c <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE+0x5f4>  // b.any
     60c:	ldrb	w1, [x28]
     610:	strb	w1, [x21, #16]
     614:	str	x22, [x21, #8]
     618:	add	x27, x27, #0x20
     61c:	strb	wzr, [x0, x22]
     620:	cmp	x25, x27
     624:	add	x21, x21, #0x20
     628:	b.eq	69c <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE+0x374>  // b.none
     62c:	add	x0, x21, #0x10
     630:	ldr	x22, [x27, #8]
     634:	str	x0, [x21]
     638:	ldr	x28, [x27]
     63c:	cmn	x28, x22
     640:	ccmp	x28, #0x0, #0x0, ne  // ne = any
     644:	b.eq	acc <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE+0x7a4>  // b.none
     648:	str	x22, [sp, #104]
     64c:	cmp	x22, #0xf
     650:	b.ls	604 <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE+0x2dc>  // b.plast
     654:	mov	x1, x26
     658:	mov	x0, x21
     65c:	mov	x2, #0x0                   	// #0
     660:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
     664:	ldr	x1, [sp, #104]
     668:	str	x0, [x21]
     66c:	str	x1, [x21, #16]
     670:	mov	x2, x22
     674:	mov	x1, x28
     678:	bl	0 <memcpy>
     67c:	add	x27, x27, #0x20
     680:	ldr	x0, [x21]
     684:	cmp	x25, x27
     688:	ldr	x22, [sp, #104]
     68c:	str	x22, [x21, #8]
     690:	add	x21, x21, #0x20
     694:	strb	wzr, [x0, x22]
     698:	b.ne	62c <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE+0x304>  // b.any
     69c:	ldr	w3, [x20, #4]
     6a0:	add	x0, x19, #0x358
     6a4:	ldr	w4, [x20, #12]
     6a8:	add	x8, x19, #0x348
     6ac:	str	x21, [x24, #8]
     6b0:	str	w3, [x19, #780]
     6b4:	ldrh	w6, [x20]
     6b8:	ldrh	w1, [x19, #776]
     6bc:	ldrb	w5, [x20, #8]
     6c0:	ldrb	w3, [x19, #784]
     6c4:	bfxil	w1, w6, #0, #9
     6c8:	strh	w1, [x19, #776]
     6cc:	ldr	x1, [x20, #24]
     6d0:	bfxil	w3, w5, #0, #3
     6d4:	ldrb	w7, [x20, #16]
     6d8:	strb	w3, [x19, #784]
     6dc:	and	x3, x1, #0xffffffff007fffff
     6e0:	ldrb	w1, [x19, #792]
     6e4:	str	w4, [x19, #788]
     6e8:	ldr	x5, [x20, #32]
     6ec:	bfxil	w1, w7, #0, #2
     6f0:	strb	w1, [x19, #792]
     6f4:	ldr	x1, [x19, #800]
     6f8:	str	x5, [x19, #808]
     6fc:	ldr	d0, [x20, #40]
     700:	and	x1, x1, #0xff800000
     704:	ldrh	w2, [x19, #832]
     708:	ldr	x4, [x20, #48]
     70c:	orr	x1, x1, x3
     710:	str	x1, [x19, #800]
     714:	str	x4, [x19, #824]
     718:	str	d0, [x19, #816]
     71c:	ldrh	w1, [x20, #56]
     720:	ldr	w6, [x20, #20]
     724:	ldr	w3, [x23, #4]
     728:	str	x0, [x19, #840]
     72c:	bfxil	w2, w1, #0, #12
     730:	str	w6, [x19, #796]
     734:	strh	w2, [x19, #832]
     738:	str	w3, [x19, #836]
     73c:	ldp	x22, x21, [x20, #64]
     740:	cmn	x22, x21
     744:	ccmp	x22, #0x0, #0x0, ne  // ne = any
     748:	b.eq	acc <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE+0x7a4>  // b.none
     74c:	str	x21, [sp, #104]
     750:	cmp	x21, #0xf
     754:	b.hi	9ec <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE+0x6c4>  // b.pmore
     758:	cmp	x21, #0x1
     75c:	b.ne	93c <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE+0x614>  // b.any
     760:	ldrb	w1, [x22]
     764:	strb	w1, [x19, #856]
     768:	str	x21, [x19, #848]
     76c:	add	x1, x19, #0x368
     770:	strb	wzr, [x0, x21]
     774:	add	x0, x19, #0x378
     778:	ldr	x21, [x20, #104]
     77c:	str	x0, [x19, #872]
     780:	ldr	x22, [x20, #96]
     784:	cmn	x22, x21
     788:	ccmp	x22, #0x0, #0x0, ne  // ne = any
     78c:	b.eq	acc <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE+0x7a4>  // b.none
     790:	str	x21, [sp, #104]
     794:	cmp	x21, #0xf
     798:	b.hi	a20 <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE+0x6f8>  // b.pmore
     79c:	cmp	x21, #0x1
     7a0:	b.ne	944 <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE+0x61c>  // b.any
     7a4:	ldrb	w1, [x22]
     7a8:	strb	w1, [x19, #888]
     7ac:	str	x21, [x19, #880]
     7b0:	add	x23, x19, #0x400
     7b4:	strb	wzr, [x0, x21]
     7b8:	add	x19, x19, #0x388
     7bc:	mov	x21, #0x0                   	// #0
     7c0:	ldp	x0, x22, [x20, #128]
     7c4:	stp	xzr, xzr, [x23, #-120]
     7c8:	str	xzr, [x19, #16]
     7cc:	sub	x22, x22, x0
     7d0:	cmp	xzr, x22, asr #5
     7d4:	asr	x0, x22, #5
     7d8:	b.eq	7f4 <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE+0x4cc>  // b.none
     7dc:	mov	x1, #0x3ffffffffffffff     	// #288230376151711743
     7e0:	cmp	x0, x1
     7e4:	b.hi	ad8 <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE+0x7b0>  // b.pmore
     7e8:	mov	x0, x22
     7ec:	bl	0 <_Znwm>
     7f0:	mov	x21, x0
     7f4:	dup	v0.2d, x21
     7f8:	add	x22, x21, x22
     7fc:	stur	q0, [x23, #-120]
     800:	str	x22, [x19, #16]
     804:	ldp	x22, x24, [x20, #128]
     808:	cmp	x22, x24
     80c:	b.eq	8b0 <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE+0x588>  // b.none
     810:	add	x25, sp, #0x68
     814:	b	840 <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE+0x518>
     818:	cmp	x20, #0x1
     81c:	b.ne	924 <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE+0x5fc>  // b.any
     820:	ldrb	w1, [x23]
     824:	strb	w1, [x21, #16]
     828:	str	x20, [x21, #8]
     82c:	add	x22, x22, #0x20
     830:	strb	wzr, [x0, x20]
     834:	cmp	x24, x22
     838:	add	x21, x21, #0x20
     83c:	b.eq	8b0 <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE+0x588>  // b.none
     840:	add	x0, x21, #0x10
     844:	ldr	x20, [x22, #8]
     848:	str	x0, [x21]
     84c:	ldr	x23, [x22]
     850:	cmn	x23, x20
     854:	ccmp	x23, #0x0, #0x0, ne  // ne = any
     858:	b.eq	acc <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE+0x7a4>  // b.none
     85c:	str	x20, [sp, #104]
     860:	cmp	x20, #0xf
     864:	b.ls	818 <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE+0x4f0>  // b.plast
     868:	mov	x1, x25
     86c:	mov	x0, x21
     870:	mov	x2, #0x0                   	// #0
     874:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
     878:	ldr	x1, [sp, #104]
     87c:	str	x0, [x21]
     880:	str	x1, [x21, #16]
     884:	mov	x2, x20
     888:	mov	x1, x23
     88c:	bl	0 <memcpy>
     890:	add	x22, x22, #0x20
     894:	ldr	x0, [x21]
     898:	cmp	x24, x22
     89c:	ldr	x20, [sp, #104]
     8a0:	str	x20, [x21, #8]
     8a4:	add	x21, x21, #0x20
     8a8:	strb	wzr, [x0, x20]
     8ac:	b.ne	840 <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE+0x518>  // b.any
     8b0:	ldp	x23, x24, [sp, #48]
     8b4:	ldp	x25, x26, [sp, #64]
     8b8:	ldp	x27, x28, [sp, #80]
     8bc:	str	x21, [x19, #8]
     8c0:	ldp	x19, x20, [sp, #16]
     8c4:	ldp	x21, x22, [sp, #32]
     8c8:	ldp	x29, x30, [sp], #112
     8cc:	ret
     8d0:	cbz	x21, 3f4 <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE+0xcc>
     8d4:	b	96c <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE+0x644>
     8d8:	stp	x0, xzr, [x19, #504]
     8dc:	add	x2, x19, #0x218
     8e0:	add	x0, x19, #0x228
     8e4:	strb	wzr, [x19, #520]
     8e8:	cbz	x26, 450 <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE+0x128>
     8ec:	str	x25, [sp, #104]
     8f0:	cmp	x25, #0xf
     8f4:	str	x0, [x19, #536]
     8f8:	mov	x1, x25
     8fc:	b.hi	a64 <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE+0x73c>  // b.pmore
     900:	cmp	x25, #0x1
     904:	b.ne	a5c <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE+0x734>  // b.any
     908:	ldrb	w2, [x26]
     90c:	strb	w2, [x19, #552]
     910:	str	x1, [x19, #544]
     914:	strb	wzr, [x0, x1]
     918:	b	45c <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE+0x134>
     91c:	cbz	x22, 614 <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE+0x2ec>
     920:	b	670 <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE+0x348>
     924:	cbz	x20, 828 <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE+0x500>
     928:	b	884 <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE+0x55c>
     92c:	cbz	x21, 558 <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE+0x230>
     930:	b	9a0 <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE+0x678>
     934:	cbz	x21, 59c <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE+0x274>
     938:	b	9d4 <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE+0x6ac>
     93c:	cbz	x21, 768 <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE+0x440>
     940:	b	a08 <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE+0x6e0>
     944:	cbz	x21, 7ac <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE+0x484>
     948:	b	a3c <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE+0x714>
     94c:	add	x1, x19, #0x1c0
     950:	mov	x2, #0x0                   	// #0
     954:	mov	x0, x1
     958:	add	x1, sp, #0x68
     95c:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
     960:	str	x0, [x19, #448]
     964:	ldr	x1, [sp, #104]
     968:	str	x1, [x19, #464]
     96c:	mov	x2, x21
     970:	mov	x1, x27
     974:	bl	0 <memcpy>
     978:	ldr	x21, [sp, #104]
     97c:	ldr	x0, [x19, #448]
     980:	b	3f4 <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE+0xcc>
     984:	add	x1, sp, #0x68
     988:	mov	x0, x6
     98c:	mov	x2, #0x0                   	// #0
     990:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
     994:	ldr	x1, [sp, #104]
     998:	str	x0, [x19, #688]
     99c:	str	x1, [x19, #704]
     9a0:	mov	x2, x21
     9a4:	mov	x1, x22
     9a8:	bl	0 <memcpy>
     9ac:	ldr	x21, [sp, #104]
     9b0:	ldr	x0, [x19, #688]
     9b4:	b	558 <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE+0x230>
     9b8:	mov	x0, x1
     9bc:	mov	x2, #0x0                   	// #0
     9c0:	add	x1, sp, #0x68
     9c4:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
     9c8:	ldr	x1, [sp, #104]
     9cc:	str	x0, [x19, #720]
     9d0:	str	x1, [x19, #736]
     9d4:	mov	x2, x21
     9d8:	mov	x1, x22
     9dc:	bl	0 <memcpy>
     9e0:	ldr	x21, [sp, #104]
     9e4:	ldr	x0, [x19, #720]
     9e8:	b	59c <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE+0x274>
     9ec:	add	x1, sp, #0x68
     9f0:	mov	x0, x8
     9f4:	mov	x2, #0x0                   	// #0
     9f8:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
     9fc:	ldr	x1, [sp, #104]
     a00:	str	x0, [x19, #840]
     a04:	str	x1, [x19, #856]
     a08:	mov	x2, x21
     a0c:	mov	x1, x22
     a10:	bl	0 <memcpy>
     a14:	ldr	x21, [sp, #104]
     a18:	ldr	x0, [x19, #840]
     a1c:	b	768 <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE+0x440>
     a20:	mov	x0, x1
     a24:	mov	x2, #0x0                   	// #0
     a28:	add	x1, sp, #0x68
     a2c:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
     a30:	ldr	x1, [sp, #104]
     a34:	str	x0, [x19, #872]
     a38:	str	x1, [x19, #888]
     a3c:	mov	x2, x21
     a40:	mov	x1, x22
     a44:	bl	0 <memcpy>
     a48:	ldr	x21, [sp, #104]
     a4c:	ldr	x0, [x19, #872]
     a50:	b	7ac <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE+0x484>
     a54:	cbz	x23, 43c <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE+0x114>
     a58:	b	ab4 <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE+0x78c>
     a5c:	cbz	x25, 910 <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE+0x5e8>
     a60:	b	a80 <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE+0x758>
     a64:	mov	x0, x2
     a68:	add	x1, sp, #0x68
     a6c:	mov	x2, #0x0                   	// #0
     a70:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
     a74:	ldr	x1, [sp, #104]
     a78:	str	x0, [x19, #536]
     a7c:	str	x1, [x19, #552]
     a80:	mov	x1, x26
     a84:	mov	x2, x25
     a88:	bl	0 <memcpy>
     a8c:	ldr	x1, [sp, #104]
     a90:	ldr	x0, [x19, #536]
     a94:	b	910 <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE+0x5e8>
     a98:	mov	x0, x2
     a9c:	add	x1, sp, #0x68
     aa0:	mov	x2, #0x0                   	// #0
     aa4:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
     aa8:	ldr	x1, [sp, #104]
     aac:	str	x0, [x19, #504]
     ab0:	str	x1, [x19, #520]
     ab4:	mov	x1, x24
     ab8:	mov	x2, x23
     abc:	bl	0 <memcpy>
     ac0:	ldr	x1, [sp, #104]
     ac4:	ldr	x0, [x19, #504]
     ac8:	b	43c <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE+0x114>
     acc:	adrp	x0, 0 <_ZNSt14_Function_base13_Base_managerIZN4llvm13TargetMachine19getTargetIRAnalysisEvEUlRKNS1_8FunctionEE_E10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation>
     ad0:	add	x0, x0, #0x0
     ad4:	bl	0 <_ZSt19__throw_logic_errorPKc>
     ad8:	bl	0 <_ZSt17__throw_bad_allocv>
     adc:	nop

0000000000000ae0 <_ZNK4llvm13TargetMachine18resetTargetOptionsERKNS_8FunctionE>:
     ae0:	stp	x29, x30, [sp, #-64]!
     ae4:	mov	x2, #0xe                   	// #14
     ae8:	mov	x29, sp
     aec:	stp	x19, x20, [sp, #16]
     af0:	add	x20, x1, #0x70
     af4:	mov	x19, x0
     af8:	str	x21, [sp, #32]
     afc:	adrp	x21, 0 <_ZNSt14_Function_base13_Base_managerIZN4llvm13TargetMachine19getTargetIRAnalysisEvEUlRKNS1_8FunctionEE_E10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation>
     b00:	add	x21, x21, #0x0
     b04:	mov	x0, x20
     b08:	mov	x1, x21
     b0c:	bl	0 <_ZNK4llvm13AttributeList14hasFnAttributeENS_9StringRefE>
     b10:	tst	w0, #0xff
     b14:	b.ne	bd8 <_ZNK4llvm13TargetMachine18resetTargetOptionsERKNS_8FunctionE+0xf8>  // b.any
     b18:	ldrb	w0, [x19, #624]
     b1c:	adrp	x21, 0 <_ZNSt14_Function_base13_Base_managerIZN4llvm13TargetMachine19getTargetIRAnalysisEvEUlRKNS1_8FunctionEE_E10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation>
     b20:	ldrb	w1, [x19, #776]
     b24:	add	x21, x21, #0x0
     b28:	mov	x2, #0xf                   	// #15
     b2c:	ubfx	x0, x0, #1, #1
     b30:	bfi	w1, w0, #1, #1
     b34:	strb	w1, [x19, #776]
     b38:	mov	x0, x20
     b3c:	mov	x1, x21
     b40:	bl	0 <_ZNK4llvm13AttributeList14hasFnAttributeENS_9StringRefE>
     b44:	tst	w0, #0xff
     b48:	b.ne	c48 <_ZNK4llvm13TargetMachine18resetTargetOptionsERKNS_8FunctionE+0x168>  // b.any
     b4c:	ldrb	w0, [x19, #624]
     b50:	adrp	x21, 0 <_ZNSt14_Function_base13_Base_managerIZN4llvm13TargetMachine19getTargetIRAnalysisEvEUlRKNS1_8FunctionEE_E10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation>
     b54:	ldrb	w1, [x19, #776]
     b58:	add	x21, x21, #0x0
     b5c:	mov	x2, #0xf                   	// #15
     b60:	ubfx	x0, x0, #2, #1
     b64:	bfi	w1, w0, #2, #1
     b68:	strb	w1, [x19, #776]
     b6c:	mov	x0, x20
     b70:	mov	x1, x21
     b74:	bl	0 <_ZNK4llvm13AttributeList14hasFnAttributeENS_9StringRefE>
     b78:	tst	w0, #0xff
     b7c:	b.ne	cb8 <_ZNK4llvm13TargetMachine18resetTargetOptionsERKNS_8FunctionE+0x1d8>  // b.any
     b80:	ldrb	w0, [x19, #624]
     b84:	adrp	x21, 0 <_ZNSt14_Function_base13_Base_managerIZN4llvm13TargetMachine19getTargetIRAnalysisEvEUlRKNS1_8FunctionEE_E10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation>
     b88:	ldrb	w1, [x19, #776]
     b8c:	add	x21, x21, #0x0
     b90:	mov	x2, #0x17                  	// #23
     b94:	ubfx	x0, x0, #3, #1
     b98:	bfi	w1, w0, #3, #1
     b9c:	strb	w1, [x19, #776]
     ba0:	mov	x0, x20
     ba4:	mov	x1, x21
     ba8:	bl	0 <_ZNK4llvm13AttributeList14hasFnAttributeENS_9StringRefE>
     bac:	tst	w0, #0xff
     bb0:	b.ne	d28 <_ZNK4llvm13TargetMachine18resetTargetOptionsERKNS_8FunctionE+0x248>  // b.any
     bb4:	ldrb	w0, [x19, #624]
     bb8:	ldrb	w1, [x19, #776]
     bbc:	ldr	x21, [sp, #32]
     bc0:	ubfx	x0, x0, #5, #1
     bc4:	bfi	w1, w0, #5, #1
     bc8:	strb	w1, [x19, #776]
     bcc:	ldp	x19, x20, [sp, #16]
     bd0:	ldp	x29, x30, [sp], #64
     bd4:	ret
     bd8:	mov	w1, #0xffffffff            	// #-1
     bdc:	mov	x2, x21
     be0:	mov	x3, #0xe                   	// #14
     be4:	mov	x0, x20
     be8:	bl	0 <_ZNK4llvm13AttributeList12getAttributeEjNS_9StringRefE>
     bec:	mov	x1, x0
     bf0:	add	x0, sp, #0x38
     bf4:	str	x1, [sp, #56]
     bf8:	bl	0 <_ZNK4llvm9Attribute16getValueAsStringEv>
     bfc:	cmp	x1, #0x4
     c00:	mov	w1, #0x0                   	// #0
     c04:	b.ne	c1c <_ZNK4llvm13TargetMachine18resetTargetOptionsERKNS_8FunctionE+0x13c>  // b.any
     c08:	ldr	w1, [x0]
     c0c:	mov	w0, #0x7274                	// #29300
     c10:	movk	w0, #0x6575, lsl #16
     c14:	cmp	w1, w0
     c18:	cset	w1, eq  // eq = none
     c1c:	ldrb	w0, [x19, #776]
     c20:	adrp	x21, 0 <_ZNSt14_Function_base13_Base_managerIZN4llvm13TargetMachine19getTargetIRAnalysisEvEUlRKNS1_8FunctionEE_E10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation>
     c24:	add	x21, x21, #0x0
     c28:	mov	x2, #0xf                   	// #15
     c2c:	bfi	w0, w1, #1, #1
     c30:	strb	w0, [x19, #776]
     c34:	mov	x1, x21
     c38:	mov	x0, x20
     c3c:	bl	0 <_ZNK4llvm13AttributeList14hasFnAttributeENS_9StringRefE>
     c40:	tst	w0, #0xff
     c44:	b.eq	b4c <_ZNK4llvm13TargetMachine18resetTargetOptionsERKNS_8FunctionE+0x6c>  // b.none
     c48:	mov	w1, #0xffffffff            	// #-1
     c4c:	mov	x2, x21
     c50:	mov	x3, #0xf                   	// #15
     c54:	mov	x0, x20
     c58:	bl	0 <_ZNK4llvm13AttributeList12getAttributeEjNS_9StringRefE>
     c5c:	mov	x1, x0
     c60:	add	x0, sp, #0x38
     c64:	str	x1, [sp, #56]
     c68:	bl	0 <_ZNK4llvm9Attribute16getValueAsStringEv>
     c6c:	cmp	x1, #0x4
     c70:	mov	w1, #0x0                   	// #0
     c74:	b.ne	c8c <_ZNK4llvm13TargetMachine18resetTargetOptionsERKNS_8FunctionE+0x1ac>  // b.any
     c78:	ldr	w1, [x0]
     c7c:	mov	w0, #0x7274                	// #29300
     c80:	movk	w0, #0x6575, lsl #16
     c84:	cmp	w1, w0
     c88:	cset	w1, eq  // eq = none
     c8c:	ldrb	w0, [x19, #776]
     c90:	adrp	x21, 0 <_ZNSt14_Function_base13_Base_managerIZN4llvm13TargetMachine19getTargetIRAnalysisEvEUlRKNS1_8FunctionEE_E10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation>
     c94:	add	x21, x21, #0x0
     c98:	mov	x2, #0xf                   	// #15
     c9c:	bfi	w0, w1, #2, #1
     ca0:	strb	w0, [x19, #776]
     ca4:	mov	x1, x21
     ca8:	mov	x0, x20
     cac:	bl	0 <_ZNK4llvm13AttributeList14hasFnAttributeENS_9StringRefE>
     cb0:	tst	w0, #0xff
     cb4:	b.eq	b80 <_ZNK4llvm13TargetMachine18resetTargetOptionsERKNS_8FunctionE+0xa0>  // b.none
     cb8:	mov	w1, #0xffffffff            	// #-1
     cbc:	mov	x2, x21
     cc0:	mov	x3, #0xf                   	// #15
     cc4:	mov	x0, x20
     cc8:	bl	0 <_ZNK4llvm13AttributeList12getAttributeEjNS_9StringRefE>
     ccc:	mov	x1, x0
     cd0:	add	x0, sp, #0x38
     cd4:	str	x1, [sp, #56]
     cd8:	bl	0 <_ZNK4llvm9Attribute16getValueAsStringEv>
     cdc:	cmp	x1, #0x4
     ce0:	mov	w1, #0x0                   	// #0
     ce4:	b.ne	cfc <_ZNK4llvm13TargetMachine18resetTargetOptionsERKNS_8FunctionE+0x21c>  // b.any
     ce8:	ldr	w1, [x0]
     cec:	mov	w0, #0x7274                	// #29300
     cf0:	movk	w0, #0x6575, lsl #16
     cf4:	cmp	w1, w0
     cf8:	cset	w1, eq  // eq = none
     cfc:	ldrb	w0, [x19, #776]
     d00:	adrp	x21, 0 <_ZNSt14_Function_base13_Base_managerIZN4llvm13TargetMachine19getTargetIRAnalysisEvEUlRKNS1_8FunctionEE_E10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation>
     d04:	add	x21, x21, #0x0
     d08:	mov	x2, #0x17                  	// #23
     d0c:	bfi	w0, w1, #3, #1
     d10:	strb	w0, [x19, #776]
     d14:	mov	x1, x21
     d18:	mov	x0, x20
     d1c:	bl	0 <_ZNK4llvm13AttributeList14hasFnAttributeENS_9StringRefE>
     d20:	tst	w0, #0xff
     d24:	b.eq	bb4 <_ZNK4llvm13TargetMachine18resetTargetOptionsERKNS_8FunctionE+0xd4>  // b.none
     d28:	mov	w1, #0xffffffff            	// #-1
     d2c:	mov	x2, x21
     d30:	mov	x3, #0x17                  	// #23
     d34:	mov	x0, x20
     d38:	bl	0 <_ZNK4llvm13AttributeList12getAttributeEjNS_9StringRefE>
     d3c:	mov	x1, x0
     d40:	add	x0, sp, #0x38
     d44:	str	x1, [sp, #56]
     d48:	bl	0 <_ZNK4llvm9Attribute16getValueAsStringEv>
     d4c:	cmp	x1, #0x4
     d50:	mov	w1, #0x0                   	// #0
     d54:	b.ne	d6c <_ZNK4llvm13TargetMachine18resetTargetOptionsERKNS_8FunctionE+0x28c>  // b.any
     d58:	ldr	w1, [x0]
     d5c:	mov	w0, #0x7274                	// #29300
     d60:	movk	w0, #0x6575, lsl #16
     d64:	cmp	w1, w0
     d68:	cset	w1, eq  // eq = none
     d6c:	ldrb	w0, [x19, #776]
     d70:	ldr	x21, [sp, #32]
     d74:	bfi	w0, w1, #5, #1
     d78:	strb	w0, [x19, #776]
     d7c:	ldp	x19, x20, [sp, #16]
     d80:	ldp	x29, x30, [sp], #64
     d84:	ret

0000000000000d88 <_ZNK4llvm13TargetMachine18getRelocationModelEv>:
     d88:	ldr	w0, [x0, #568]
     d8c:	ret

0000000000000d90 <_ZNK4llvm13TargetMachine21isPositionIndependentEv>:
     d90:	stp	x29, x30, [sp, #-16]!
     d94:	mov	x29, sp
     d98:	bl	d88 <_ZNK4llvm13TargetMachine18getRelocationModelEv>
     d9c:	cmp	w0, #0x1
     da0:	cset	w0, eq  // eq = none
     da4:	ldp	x29, x30, [sp], #16
     da8:	ret
     dac:	nop

0000000000000db0 <_ZNK4llvm13TargetMachine12getCodeModelEv>:
     db0:	ldr	w0, [x0, #572]
     db4:	ret

0000000000000db8 <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE>:
     db8:	stp	x29, x30, [sp, #-48]!
     dbc:	mov	x29, sp
     dc0:	stp	x19, x20, [sp, #16]
     dc4:	mov	x20, x0
     dc8:	mov	x19, x2
     dcc:	stp	x21, x22, [sp, #32]
     dd0:	mov	x21, x1
     dd4:	cbz	x2, fb8 <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0x200>
     dd8:	ldrb	w0, [x2, #33]
     ddc:	tbnz	w0, #6, ee8 <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0x130>
     de0:	mov	x0, x1
     de4:	bl	0 <_ZNK4llvm6Module14getRtLibUseGOTEv>
     de8:	mov	x0, x20
     dec:	bl	d88 <_ZNK4llvm13TargetMachine18getRelocationModelEv>
     df0:	ldrb	w1, [x19, #33]
     df4:	mov	w22, w0
     df8:	and	w1, w1, #0x3
     dfc:	cmp	w1, #0x1
     e00:	b.eq	f10 <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0x158>  // b.none
     e04:	ldr	w0, [x20, #492]
     e08:	cmp	w0, #0xf
     e0c:	b.eq	f24 <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0x16c>  // b.none
     e10:	ldr	w1, [x20, #500]
     e14:	cmp	w1, #0x1
     e18:	b.eq	f3c <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0x184>  // b.none
     e1c:	cbz	x19, e4c <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0x94>
     e20:	mov	x0, x20
     e24:	bl	d90 <_ZNK4llvm13TargetMachine21isPositionIndependentEv>
     e28:	tst	w0, #0xff
     e2c:	ldrb	w0, [x19, #32]
     e30:	b.eq	e40 <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0x88>  // b.none
     e34:	and	w1, w0, #0xf
     e38:	cmp	w1, #0x9
     e3c:	b.eq	f10 <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0x158>  // b.none
     e40:	tst	w0, #0x30
     e44:	b.ne	ee8 <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0x130>  // b.any
     e48:	ldr	w1, [x20, #500]
     e4c:	cmp	w1, #0x3
     e50:	b.eq	f60 <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0x1a8>  // b.none
     e54:	cmp	w1, #0x5
     e58:	b.eq	f10 <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0x158>  // b.none
     e5c:	sub	w1, w1, #0x2
     e60:	tst	w1, #0xfffffffd
     e64:	b.ne	106c <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0x2b4>  // b.any
     e68:	cmp	w22, #0x2
     e6c:	b.eq	104c <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0x294>  // b.none
     e70:	cbnz	w22, fd8 <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0x220>
     e74:	cbz	x19, efc <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0x144>
     e78:	ldrb	w0, [x19, #32]
     e7c:	and	w0, w0, #0xf
     e80:	cmp	w0, #0x1
     e84:	b.eq	e98 <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0xe0>  // b.none
     e88:	mov	x0, x19
     e8c:	bl	0 <_ZNK4llvm11GlobalValue13isDeclarationEv>
     e90:	tst	w0, #0xff
     e94:	b.eq	ee8 <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0x130>  // b.none
     e98:	ldrb	w0, [x19, #16]
     e9c:	cbnz	w0, eb4 <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0xfc>
     ea0:	add	x0, x19, #0x70
     ea4:	mov	w1, #0x22                  	// #34
     ea8:	bl	0 <_ZNK4llvm13AttributeList14hasFnAttributeENS_9Attribute8AttrKindE>
     eac:	tst	w0, #0xff
     eb0:	b.ne	f10 <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0x158>  // b.any
     eb4:	ldr	w0, [x20, #480]
     eb8:	sub	w0, w0, #0x10
     ebc:	cmp	w0, #0x2
     ec0:	b.ls	f10 <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0x158>  // b.plast
     ec4:	ldrb	w0, [x19, #33]
     ec8:	tst	x0, #0x1c
     ecc:	b.ne	f10 <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0x158>  // b.any
     ed0:	cmp	w22, #0x0
     ed4:	cset	w0, eq  // eq = none
     ed8:	b	eec <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0x134>
     edc:	cmp	w0, #0x1
     ee0:	b.eq	fec <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0x234>  // b.none
     ee4:	nop
     ee8:	mov	w0, #0x1                   	// #1
     eec:	ldp	x19, x20, [sp, #16]
     ef0:	ldp	x21, x22, [sp, #32]
     ef4:	ldp	x29, x30, [sp], #48
     ef8:	ret
     efc:	ldr	w0, [x20, #480]
     f00:	sub	w0, w0, #0x10
     f04:	cmp	w0, #0x2
     f08:	b.hi	ed0 <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0x118>  // b.pmore
     f0c:	nop
     f10:	mov	w0, #0x0                   	// #0
     f14:	ldp	x19, x20, [sp, #16]
     f18:	ldp	x21, x22, [sp, #32]
     f1c:	ldp	x29, x30, [sp], #48
     f20:	ret
     f24:	ldr	w0, [x20, #496]
     f28:	cmp	w0, #0x1
     f2c:	ldr	w0, [x20, #500]
     f30:	b.eq	edc <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0x124>  // b.none
     f34:	cmp	w0, #0x1
     f38:	b.ne	ee8 <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0x130>  // b.any
     f3c:	cbz	x19, ee8 <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0x130>
     f40:	ldrb	w0, [x19, #32]
     f44:	and	w0, w0, #0xf
     f48:	cmp	w0, #0x9
     f4c:	cset	w0, ne  // ne = any
     f50:	ldp	x19, x20, [sp, #16]
     f54:	ldp	x21, x22, [sp, #32]
     f58:	ldp	x29, x30, [sp], #48
     f5c:	ret
     f60:	cbz	w22, ee8 <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0x130>
     f64:	cbz	x19, f10 <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0x158>
     f68:	ldrb	w0, [x19, #32]
     f6c:	and	w0, w0, #0xf
     f70:	cmp	w0, #0x1
     f74:	b.eq	f10 <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0x158>  // b.none
     f78:	mov	x0, x19
     f7c:	bl	0 <_ZNK4llvm11GlobalValue13isDeclarationEv>
     f80:	tst	w0, #0xff
     f84:	b.ne	f10 <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0x158>  // b.any
     f88:	ldrb	w0, [x19, #32]
     f8c:	and	w0, w0, #0xf
     f90:	sub	w1, w0, #0x4
     f94:	cmp	w1, #0x1
     f98:	ccmp	w0, #0x2, #0x4, hi  // hi = pmore
     f9c:	b.eq	f10 <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0x158>  // b.none
     fa0:	add	w1, w0, #0x7
     fa4:	and	w1, w1, #0xf
     fa8:	cmp	w1, #0x1
     fac:	ccmp	w0, #0x3, #0x4, hi  // hi = pmore
     fb0:	cset	w0, ne  // ne = any
     fb4:	b	eec <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0x134>
     fb8:	mov	x0, x1
     fbc:	bl	0 <_ZNK4llvm6Module14getRtLibUseGOTEv>
     fc0:	tst	w0, #0xff
     fc4:	b.ne	f10 <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0x158>  // b.any
     fc8:	mov	x0, x20
     fcc:	bl	d88 <_ZNK4llvm13TargetMachine18getRelocationModelEv>
     fd0:	mov	w22, w0
     fd4:	b	e04 <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0x4c>
     fd8:	mov	x0, x21
     fdc:	bl	0 <_ZNK4llvm6Module11getPIELevelEv>
     fe0:	cbnz	w0, e74 <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0xbc>
     fe4:	mov	w0, #0x0                   	// #0
     fe8:	b	f14 <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0x15c>
     fec:	cbz	x19, ee8 <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0x130>
     ff0:	ldrb	w0, [x19, #32]
     ff4:	and	w0, w0, #0xf
     ff8:	cmp	w0, #0x1
     ffc:	b.eq	1038 <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0x280>  // b.none
    1000:	mov	x0, x19
    1004:	bl	0 <_ZNK4llvm11GlobalValue13isDeclarationEv>
    1008:	tst	w0, #0xff
    100c:	b.eq	101c <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0x264>  // b.none
    1010:	ldrb	w0, [x19, #16]
    1014:	cmp	w0, #0x3
    1018:	b.eq	f10 <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0x158>  // b.none
    101c:	ldr	w0, [x20, #500]
    1020:	cmp	w0, #0x1
    1024:	b.eq	f40 <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0x188>  // b.none
    1028:	ldr	w0, [x20, #492]
    102c:	cmp	w0, #0xf
    1030:	b.ne	e20 <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0x68>  // b.any
    1034:	b	ee8 <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0x130>
    1038:	ldrb	w1, [x19, #16]
    103c:	cmp	w1, #0x3
    1040:	b.ne	f48 <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0x190>  // b.any
    1044:	mov	w0, #0x0                   	// #0
    1048:	b	f14 <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0x15c>
    104c:	adrp	x3, 0 <_ZNSt14_Function_base13_Base_managerIZN4llvm13TargetMachine19getTargetIRAnalysisEvEUlRKNS1_8FunctionEE_E10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation>
    1050:	adrp	x1, 0 <_ZNSt14_Function_base13_Base_managerIZN4llvm13TargetMachine19getTargetIRAnalysisEvEUlRKNS1_8FunctionEE_E10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation>
    1054:	adrp	x0, 0 <_ZNSt14_Function_base13_Base_managerIZN4llvm13TargetMachine19getTargetIRAnalysisEvEUlRKNS1_8FunctionEE_E10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation>
    1058:	add	x3, x3, #0x0
    105c:	add	x1, x1, #0x0
    1060:	add	x0, x0, #0x0
    1064:	mov	w2, #0xac                  	// #172
    1068:	bl	0 <__assert_fail>
    106c:	adrp	x3, 0 <_ZNSt14_Function_base13_Base_managerIZN4llvm13TargetMachine19getTargetIRAnalysisEvEUlRKNS1_8FunctionEE_E10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation>
    1070:	adrp	x1, 0 <_ZNSt14_Function_base13_Base_managerIZN4llvm13TargetMachine19getTargetIRAnalysisEvEUlRKNS1_8FunctionEE_E10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation>
    1074:	adrp	x0, 0 <_ZNSt14_Function_base13_Base_managerIZN4llvm13TargetMachine19getTargetIRAnalysisEvEUlRKNS1_8FunctionEE_E10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation>
    1078:	add	x3, x3, #0x0
    107c:	add	x1, x1, #0x0
    1080:	add	x0, x0, #0x0
    1084:	mov	w2, #0xab                  	// #171
    1088:	bl	0 <__assert_fail>
    108c:	nop

0000000000001090 <_ZNK4llvm13TargetMachine14useEmulatedTLSEv>:
    1090:	ldrb	w1, [x0, #801]
    1094:	mov	x2, x0
    1098:	ubfx	x0, x1, #6, #1
    109c:	tbnz	w1, #7, 10cc <_ZNK4llvm13TargetMachine14useEmulatedTLSEv+0x3c>
    10a0:	ldr	w1, [x2, #496]
    10a4:	mov	w0, #0x1                   	// #1
    10a8:	cmp	w1, #0xa
    10ac:	b.eq	10cc <_ZNK4llvm13TargetMachine14useEmulatedTLSEv+0x3c>  // b.none
    10b0:	ldr	w2, [x2, #492]
    10b4:	cmp	w2, #0xd
    10b8:	b.eq	10cc <_ZNK4llvm13TargetMachine14useEmulatedTLSEv+0x3c>  // b.none
    10bc:	cmp	w1, #0x10
    10c0:	cset	w0, eq  // eq = none
    10c4:	cmp	w2, #0xf
    10c8:	csel	w0, w0, wzr, eq  // eq = none
    10cc:	ret

00000000000010d0 <_ZNK4llvm13TargetMachine11getTLSModelEPKNS_11GlobalValueE>:
    10d0:	stp	x29, x30, [sp, #-48]!
    10d4:	mov	x29, sp
    10d8:	stp	x19, x20, [sp, #16]
    10dc:	mov	x20, x0
    10e0:	mov	x19, x1
    10e4:	ldr	x0, [x1, #40]
    10e8:	str	x21, [sp, #32]
    10ec:	bl	0 <_ZNK4llvm6Module11getPIELevelEv>
    10f0:	mov	w21, w0
    10f4:	mov	x0, x20
    10f8:	bl	d88 <_ZNK4llvm13TargetMachine18getRelocationModelEv>
    10fc:	cmp	w0, #0x1
    1100:	mov	x0, x20
    1104:	ldr	x1, [x19, #40]
    1108:	cset	w20, eq  // eq = none
    110c:	cmp	w21, #0x0
    1110:	mov	x2, x19
    1114:	csel	w20, w20, wzr, eq  // eq = none
    1118:	bl	db8 <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE>
    111c:	and	w0, w0, #0xff
    1120:	cbz	w20, 1188 <_ZNK4llvm13TargetMachine11getTLSModelEPKNS_11GlobalValueE+0xb8>
    1124:	ldrb	w1, [x19, #33]
    1128:	ubfx	x1, x1, #2, #3
    112c:	cmp	w1, #0x2
    1130:	b.eq	11ec <_ZNK4llvm13TargetMachine11getTLSModelEPKNS_11GlobalValueE+0x11c>  // b.none
    1134:	b.ls	116c <_ZNK4llvm13TargetMachine11getTLSModelEPKNS_11GlobalValueE+0x9c>  // b.plast
    1138:	cmp	w1, #0x3
    113c:	b.eq	11e4 <_ZNK4llvm13TargetMachine11getTLSModelEPKNS_11GlobalValueE+0x114>  // b.none
    1140:	cmp	w1, #0x4
    1144:	mov	w2, w0
    1148:	b.ne	11cc <_ZNK4llvm13TargetMachine11getTLSModelEPKNS_11GlobalValueE+0xfc>  // b.any
    114c:	mov	w1, #0x3                   	// #3
    1150:	mov	w3, w1
    1154:	cmp	w1, w2
    1158:	csel	w0, w0, w3, le
    115c:	ldp	x19, x20, [sp, #16]
    1160:	ldr	x21, [sp, #32]
    1164:	ldp	x29, x30, [sp], #48
    1168:	ret
    116c:	cbnz	w1, 115c <_ZNK4llvm13TargetMachine11getTLSModelEPKNS_11GlobalValueE+0x8c>
    1170:	adrp	x1, 0 <_ZNSt14_Function_base13_Base_managerIZN4llvm13TargetMachine19getTargetIRAnalysisEvEUlRKNS1_8FunctionEE_E10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation>
    1174:	adrp	x0, 0 <_ZNSt14_Function_base13_Base_managerIZN4llvm13TargetMachine19getTargetIRAnalysisEvEUlRKNS1_8FunctionEE_E10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation>
    1178:	add	x1, x1, #0x0
    117c:	add	x0, x0, #0x0
    1180:	mov	w2, #0x50                  	// #80
    1184:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    1188:	cbnz	w0, 11b8 <_ZNK4llvm13TargetMachine11getTLSModelEPKNS_11GlobalValueE+0xe8>
    118c:	mov	w2, #0x2                   	// #2
    1190:	mov	w0, w2
    1194:	ldrb	w1, [x19, #33]
    1198:	ubfx	x1, x1, #2, #3
    119c:	cmp	w1, #0x2
    11a0:	b.ls	116c <_ZNK4llvm13TargetMachine11getTLSModelEPKNS_11GlobalValueE+0x9c>  // b.plast
    11a4:	cmp	w1, #0x3
    11a8:	b.ne	11c4 <_ZNK4llvm13TargetMachine11getTLSModelEPKNS_11GlobalValueE+0xf4>  // b.any
    11ac:	mov	w1, #0x2                   	// #2
    11b0:	mov	w3, w1
    11b4:	b	1154 <_ZNK4llvm13TargetMachine11getTLSModelEPKNS_11GlobalValueE+0x84>
    11b8:	mov	w2, #0x3                   	// #3
    11bc:	mov	w0, w2
    11c0:	b	1194 <_ZNK4llvm13TargetMachine11getTLSModelEPKNS_11GlobalValueE+0xc4>
    11c4:	cmp	w1, #0x4
    11c8:	b.eq	114c <_ZNK4llvm13TargetMachine11getTLSModelEPKNS_11GlobalValueE+0x7c>  // b.none
    11cc:	adrp	x1, 0 <_ZNSt14_Function_base13_Base_managerIZN4llvm13TargetMachine19getTargetIRAnalysisEvEUlRKNS1_8FunctionEE_E10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation>
    11d0:	adrp	x0, 0 <_ZNSt14_Function_base13_Base_managerIZN4llvm13TargetMachine19getTargetIRAnalysisEvEUlRKNS1_8FunctionEE_E10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation>
    11d4:	add	x1, x1, #0x0
    11d8:	add	x0, x0, #0x0
    11dc:	mov	w2, #0x5b                  	// #91
    11e0:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    11e4:	mov	w2, w0
    11e8:	b	11ac <_ZNK4llvm13TargetMachine11getTLSModelEPKNS_11GlobalValueE+0xdc>
    11ec:	mov	w1, #0x1                   	// #1
    11f0:	mov	w2, w0
    11f4:	mov	w3, w1
    11f8:	b	1154 <_ZNK4llvm13TargetMachine11getTLSModelEPKNS_11GlobalValueE+0x84>
    11fc:	nop

0000000000001200 <_ZNK4llvm13TargetMachine11getOptLevelEv>:
    1200:	ldr	w0, [x0, #576]
    1204:	ret

0000000000001208 <_ZN4llvm13TargetMachine11setOptLevelENS_10CodeGenOpt5LevelE>:
    1208:	str	w1, [x0, #576]
    120c:	ret

0000000000001210 <_ZNK4llvm13TargetMachine17getNameWithPrefixERNS_15SmallVectorImplIcEEPKNS_11GlobalValueERNS_7ManglerEb>:
    1210:	tst	w4, #0xff
    1214:	b.ne	1278 <_ZNK4llvm13TargetMachine17getNameWithPrefixERNS_15SmallVectorImplIcEEPKNS_11GlobalValueERNS_7ManglerEb+0x68>  // b.any
    1218:	ldrb	w4, [x2, #32]
    121c:	and	w4, w4, #0xf
    1220:	cmp	w4, #0x8
    1224:	b.ne	1278 <_ZNK4llvm13TargetMachine17getNameWithPrefixERNS_15SmallVectorImplIcEEPKNS_11GlobalValueERNS_7ManglerEb+0x68>  // b.any
    1228:	stp	x29, x30, [sp, #-48]!
    122c:	adrp	x3, 0 <_ZNSt14_Function_base13_Base_managerIZN4llvm13TargetMachine19getTargetIRAnalysisEvEUlRKNS1_8FunctionEE_E10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation>
    1230:	add	x3, x3, #0x0
    1234:	mov	x29, sp
    1238:	ldr	x4, [x0]
    123c:	str	x19, [sp, #16]
    1240:	stp	x1, x2, [sp, #32]
    1244:	mov	x19, x0
    1248:	ldr	x4, [x4, #24]
    124c:	cmp	x4, x3
    1250:	b.eq	1284 <_ZNK4llvm13TargetMachine17getNameWithPrefixERNS_15SmallVectorImplIcEEPKNS_11GlobalValueERNS_7ManglerEb+0x74>  // b.none
    1254:	blr	x4
    1258:	ldr	x4, [x0]
    125c:	mov	x3, x19
    1260:	ldr	x19, [sp, #16]
    1264:	ldp	x1, x2, [sp, #32]
    1268:	ldr	x4, [x4, #56]
    126c:	ldp	x29, x30, [sp], #48
    1270:	mov	x16, x4
    1274:	br	x16
    1278:	mov	x0, x3
    127c:	mov	w3, #0x0                   	// #0
    1280:	b	0 <_ZNK4llvm7Mangler17getNameWithPrefixERNS_15SmallVectorImplIcEEPKNS_11GlobalValueEb>
    1284:	mov	x0, #0x0                   	// #0
    1288:	ldr	x0, [x0]
    128c:	brk	#0x3e8

0000000000001290 <_ZNK4llvm13TargetMachine9getSymbolEPKNS_11GlobalValueE>:
    1290:	stp	x29, x30, [sp, #-224]!
    1294:	adrp	x3, 0 <_ZNSt14_Function_base13_Base_managerIZN4llvm13TargetMachine19getTargetIRAnalysisEvEUlRKNS1_8FunctionEE_E10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation>
    1298:	add	x3, x3, #0x0
    129c:	mov	x29, sp
    12a0:	stp	x19, x20, [sp, #16]
    12a4:	mov	x20, x1
    12a8:	ldr	x1, [x0]
    12ac:	ldr	x1, [x1, #24]
    12b0:	str	x21, [sp, #32]
    12b4:	cmp	x1, x3
    12b8:	b.eq	1338 <_ZNK4llvm13TargetMachine9getSymbolEPKNS_11GlobalValueE+0xa8>  // b.none
    12bc:	mov	x19, x0
    12c0:	blr	x1
    12c4:	mov	x21, x0
    12c8:	adrp	x0, 0 <_ZNSt14_Function_base13_Base_managerIZN4llvm13TargetMachine19getTargetIRAnalysisEvEUlRKNS1_8FunctionEE_E10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation>
    12cc:	add	x1, sp, #0x50
    12d0:	mov	x2, x20
    12d4:	ldr	d0, [x0]
    12d8:	add	x20, x1, #0x10
    12dc:	ldr	x3, [x21, #808]
    12e0:	mov	x0, x19
    12e4:	mov	w4, #0x0                   	// #0
    12e8:	mov	x19, x1
    12ec:	str	x20, [sp, #80]
    12f0:	str	d0, [sp, #88]
    12f4:	bl	1210 <_ZNK4llvm13TargetMachine17getNameWithPrefixERNS_15SmallVectorImplIcEEPKNS_11GlobalValueERNS_7ManglerEb>
    12f8:	ldr	x0, [x21, #800]
    12fc:	mov	w2, #0x106                 	// #262
    1300:	add	x1, sp, #0x38
    1304:	stp	x19, xzr, [sp, #56]
    1308:	strh	w2, [sp, #72]
    130c:	bl	0 <_ZN4llvm9MCContext17getOrCreateSymbolERKNS_5TwineE>
    1310:	mov	x19, x0
    1314:	ldr	x0, [sp, #80]
    1318:	cmp	x0, x20
    131c:	b.eq	1324 <_ZNK4llvm13TargetMachine9getSymbolEPKNS_11GlobalValueE+0x94>  // b.none
    1320:	bl	0 <free>
    1324:	mov	x0, x19
    1328:	ldp	x19, x20, [sp, #16]
    132c:	ldr	x21, [sp, #32]
    1330:	ldp	x29, x30, [sp], #224
    1334:	ret
    1338:	adrp	x0, 0 <_ZNSt14_Function_base13_Base_managerIZN4llvm13TargetMachine19getTargetIRAnalysisEvEUlRKNS1_8FunctionEE_E10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation>
    133c:	mov	x1, #0x0                   	// #0
    1340:	ldr	d0, [x0]
    1344:	add	x0, sp, #0x60
    1348:	str	x0, [sp, #80]
    134c:	str	d0, [sp, #88]
    1350:	ldr	x0, [x1, #808]
    1354:	brk	#0x3e8

0000000000001358 <_ZN4llvm13TargetMachine19getTargetIRAnalysisEv>:
    1358:	stp	x29, x30, [sp, #-64]!
    135c:	mov	x4, x0
    1360:	adrp	x2, 0 <_ZNSt14_Function_base13_Base_managerIZN4llvm13TargetMachine19getTargetIRAnalysisEvEUlRKNS1_8FunctionEE_E10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation>
    1364:	adrp	x3, 0 <_ZNSt14_Function_base13_Base_managerIZN4llvm13TargetMachine19getTargetIRAnalysisEvEUlRKNS1_8FunctionEE_E10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation>
    1368:	add	x2, x2, #0x0
    136c:	add	x3, x3, #0x0
    1370:	mov	x29, sp
    1374:	mov	x0, x8
    1378:	stp	x19, x20, [sp, #16]
    137c:	add	x20, sp, #0x20
    1380:	mov	x19, x8
    1384:	mov	x1, x20
    1388:	str	x4, [sp, #32]
    138c:	stp	x3, x2, [sp, #48]
    1390:	bl	0 <_ZN4llvm16TargetIRAnalysisC1ESt8functionIFNS_19TargetTransformInfoERKNS_8FunctionEEE>
    1394:	ldr	x3, [sp, #48]
    1398:	cbz	x3, 13ac <_ZN4llvm13TargetMachine19getTargetIRAnalysisEv+0x54>
    139c:	mov	x1, x20
    13a0:	mov	x0, x20
    13a4:	mov	w2, #0x3                   	// #3
    13a8:	blr	x3
    13ac:	mov	x0, x19
    13b0:	ldp	x19, x20, [sp, #16]
    13b4:	ldp	x29, x30, [sp], #64
    13b8:	ret

Disassembly of section .text._ZNK4llvm13TargetMachine16getSubtargetImplERKNS_8FunctionE:

0000000000000000 <_ZNK4llvm13TargetMachine16getSubtargetImplERKNS_8FunctionE>:
   0:	mov	x0, #0x0                   	// #0
   4:	ret

Disassembly of section .text._ZNK4llvm13TargetMachine18getObjFileLoweringEv:

0000000000000000 <_ZNK4llvm13TargetMachine18getObjFileLoweringEv>:
   0:	mov	x0, #0x0                   	// #0
   4:	ret

Disassembly of section .text._ZNK4llvm13TargetMachine25createDefaultFuncInfoYAMLEv:

0000000000000000 <_ZNK4llvm13TargetMachine25createDefaultFuncInfoYAMLEv>:
   0:	mov	x0, #0x0                   	// #0
   4:	ret

Disassembly of section .text._ZNK4llvm13TargetMachine21convertFuncInfoToYAMLERKNS_15MachineFunctionE:

0000000000000000 <_ZNK4llvm13TargetMachine21convertFuncInfoToYAMLERKNS_15MachineFunctionE>:
   0:	mov	x0, #0x0                   	// #0
   4:	ret

Disassembly of section .text._ZNK4llvm13TargetMachine24parseMachineFunctionInfoERKNS_4yaml19MachineFunctionInfoERNS_25PerFunctionMIParsingStateERNS_12SMDiagnosticERNS_7SMRangeE:

0000000000000000 <_ZNK4llvm13TargetMachine24parseMachineFunctionInfoERKNS_4yaml19MachineFunctionInfoERNS_25PerFunctionMIParsingStateERNS_12SMDiagnosticERNS_7SMRangeE>:
   0:	mov	w0, #0x0                   	// #0
   4:	ret

Disassembly of section .text._ZNK4llvm13TargetMachine16getIntrinsicInfoEv:

0000000000000000 <_ZNK4llvm13TargetMachine16getIntrinsicInfoEv>:
   0:	mov	x0, #0x0                   	// #0
   4:	ret

Disassembly of section .text._ZN4llvm13TargetMachine17adjustPassManagerERNS_18PassManagerBuilderE:

0000000000000000 <_ZN4llvm13TargetMachine17adjustPassManagerERNS_18PassManagerBuilderE>:
   0:	ret

Disassembly of section .text._ZN4llvm13TargetMachine19addPassesToEmitFileERNS_6legacy15PassManagerBaseERNS_17raw_pwrite_streamEPS4_NS_15CodeGenFileTypeEbPNS_28MachineModuleInfoWrapperPassE:

0000000000000000 <_ZN4llvm13TargetMachine19addPassesToEmitFileERNS_6legacy15PassManagerBaseERNS_17raw_pwrite_streamEPS4_NS_15CodeGenFileTypeEbPNS_28MachineModuleInfoWrapperPassE>:
   0:	mov	w0, #0x1                   	// #1
   4:	ret

Disassembly of section .text._ZN4llvm13TargetMachine17addPassesToEmitMCERNS_6legacy15PassManagerBaseERPNS_9MCContextERNS_17raw_pwrite_streamEb:

0000000000000000 <_ZN4llvm13TargetMachine17addPassesToEmitMCERNS_6legacy15PassManagerBaseERPNS_9MCContextERNS_17raw_pwrite_streamEb>:
   0:	mov	w0, #0x1                   	// #1
   4:	ret

Disassembly of section .text._ZNK4llvm13TargetMachine31targetSchedulesPostRASchedulingEv:

0000000000000000 <_ZNK4llvm13TargetMachine31targetSchedulesPostRASchedulingEv>:
   0:	mov	w0, #0x0                   	// #0
   4:	ret

Disassembly of section .text._ZN4llvm15MCSubtargetInfoD0Ev:

0000000000000000 <_ZN4llvm15MCSubtargetInfoD0Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	adrp	x1, 0 <_ZTVN4llvm15MCSubtargetInfoE>
   8:	add	x2, x0, #0x50
   c:	mov	x29, sp
  10:	ldr	x1, [x1]
  14:	str	x19, [sp, #16]
  18:	mov	x19, x0
  1c:	ldr	x0, [x0, #64]
  20:	add	x1, x1, #0x10
  24:	str	x1, [x19]
  28:	cmp	x0, x2
  2c:	b.eq	34 <_ZN4llvm15MCSubtargetInfoD0Ev+0x34>  // b.none
  30:	bl	0 <_ZdlPv>
  34:	ldr	x0, [x19, #8]
  38:	add	x1, x19, #0x18
  3c:	cmp	x0, x1
  40:	b.eq	48 <_ZN4llvm15MCSubtargetInfoD0Ev+0x48>  // b.none
  44:	bl	0 <_ZdlPv>
  48:	mov	x0, x19
  4c:	mov	x1, #0xd0                  	// #208
  50:	ldr	x19, [sp, #16]
  54:	ldp	x29, x30, [sp], #32
  58:	b	0 <_ZdlPvm>

Disassembly of section .text._ZN4llvm15MCSubtargetInfoD2Ev:

0000000000000000 <_ZN4llvm15MCSubtargetInfoD1Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	adrp	x1, 0 <_ZTVN4llvm15MCSubtargetInfoE>
   8:	add	x2, x0, #0x50
   c:	mov	x29, sp
  10:	ldr	x1, [x1]
  14:	str	x19, [sp, #16]
  18:	mov	x19, x0
  1c:	ldr	x0, [x0, #64]
  20:	add	x1, x1, #0x10
  24:	str	x1, [x19]
  28:	cmp	x0, x2
  2c:	b.eq	34 <_ZN4llvm15MCSubtargetInfoD1Ev+0x34>  // b.none
  30:	bl	0 <_ZdlPv>
  34:	ldr	x0, [x19, #8]
  38:	add	x19, x19, #0x18
  3c:	cmp	x0, x19
  40:	b.eq	50 <_ZN4llvm15MCSubtargetInfoD1Ev+0x50>  // b.none
  44:	ldr	x19, [sp, #16]
  48:	ldp	x29, x30, [sp], #32
  4c:	b	0 <_ZdlPv>
  50:	ldr	x19, [sp, #16]
  54:	ldp	x29, x30, [sp], #32
  58:	ret

TargetMachineC.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZNK4llvm14TargetRegistry8iteratordeEv.isra.0.part.0>:
       0:	stp	x29, x30, [sp, #-16]!
       4:	adrp	x3, 0 <_ZNK4llvm14TargetRegistry8iteratordeEv.isra.0.part.0>
       8:	adrp	x1, 0 <_ZNK4llvm14TargetRegistry8iteratordeEv.isra.0.part.0>
       c:	mov	x29, sp
      10:	adrp	x0, 0 <_ZNK4llvm14TargetRegistry8iteratordeEv.isra.0.part.0>
      14:	add	x3, x3, #0x0
      18:	add	x1, x1, #0x0
      1c:	add	x0, x0, #0x0
      20:	mov	w2, #0x277                 	// #631
      24:	bl	0 <__assert_fail>

0000000000000028 <LLVMGetFirstTarget>:
      28:	stp	x29, x30, [sp, #-32]!
      2c:	mov	x29, sp
      30:	str	x19, [sp, #16]
      34:	bl	0 <_ZN4llvm14TargetRegistry7targetsEv>
      38:	mov	x19, x0
      3c:	bl	0 <_ZN4llvm14TargetRegistry7targetsEv>
      40:	cmp	x19, x1
      44:	b.eq	5c <LLVMGetFirstTarget+0x34>  // b.none
      48:	bl	0 <_ZN4llvm14TargetRegistry7targetsEv>
      4c:	cbz	x0, 6c <LLVMGetFirstTarget+0x44>
      50:	ldr	x19, [sp, #16]
      54:	ldp	x29, x30, [sp], #32
      58:	ret
      5c:	mov	x0, #0x0                   	// #0
      60:	ldr	x19, [sp, #16]
      64:	ldp	x29, x30, [sp], #32
      68:	ret
      6c:	bl	0 <_ZNK4llvm14TargetRegistry8iteratordeEv.isra.0.part.0>

0000000000000070 <LLVMGetNextTarget>:
      70:	ldr	x0, [x0]
      74:	ret

0000000000000078 <LLVMGetTargetFromName>:
      78:	stp	x29, x30, [sp, #-64]!
      7c:	mov	x29, sp
      80:	stp	x19, x20, [sp, #16]
      84:	mov	x20, #0x0                   	// #0
      88:	stp	x21, x22, [sp, #32]
      8c:	mov	x21, x0
      90:	str	x23, [sp, #48]
      94:	cbz	x0, a0 <LLVMGetTargetFromName+0x28>
      98:	bl	0 <strlen>
      9c:	mov	x20, x0
      a0:	bl	0 <_ZN4llvm14TargetRegistry7targetsEv>
      a4:	mov	x19, x0
      a8:	mov	x22, x1
      ac:	cmp	x0, x1
      b0:	b.eq	e4 <LLVMGetTargetFromName+0x6c>  // b.none
      b4:	nop
      b8:	cbz	x19, 150 <LLVMGetTargetFromName+0xd8>
      bc:	ldr	x23, [x19, #16]
      c0:	mov	x0, #0x0                   	// #0
      c4:	cbz	x23, d0 <LLVMGetTargetFromName+0x58>
      c8:	mov	x0, x23
      cc:	bl	0 <strlen>
      d0:	cmp	x20, x0
      d4:	b.eq	f8 <LLVMGetTargetFromName+0x80>  // b.none
      d8:	ldr	x19, [x19]
      dc:	cmp	x22, x19
      e0:	b.ne	b8 <LLVMGetTargetFromName+0x40>  // b.any
      e4:	bl	0 <_ZN4llvm14TargetRegistry7targetsEv>
      e8:	cmp	x19, x1
      ec:	b.eq	134 <LLVMGetTargetFromName+0xbc>  // b.none
      f0:	cbnz	x19, 11c <LLVMGetTargetFromName+0xa4>
      f4:	bl	0 <_ZNK4llvm14TargetRegistry8iteratordeEv.isra.0.part.0>
      f8:	cbz	x20, 110 <LLVMGetTargetFromName+0x98>
      fc:	mov	x0, x23
     100:	mov	x2, x20
     104:	mov	x1, x21
     108:	bl	0 <memcmp>
     10c:	cbnz	w0, d8 <LLVMGetTargetFromName+0x60>
     110:	bl	0 <_ZN4llvm14TargetRegistry7targetsEv>
     114:	cmp	x19, x1
     118:	b.eq	134 <LLVMGetTargetFromName+0xbc>  // b.none
     11c:	mov	x0, x19
     120:	ldp	x19, x20, [sp, #16]
     124:	ldp	x21, x22, [sp, #32]
     128:	ldr	x23, [sp, #48]
     12c:	ldp	x29, x30, [sp], #64
     130:	ret
     134:	mov	x19, #0x0                   	// #0
     138:	mov	x0, x19
     13c:	ldp	x19, x20, [sp, #16]
     140:	ldp	x21, x22, [sp, #32]
     144:	ldr	x23, [sp, #48]
     148:	ldp	x29, x30, [sp], #64
     14c:	ret
     150:	adrp	x3, 0 <_ZNK4llvm14TargetRegistry8iteratordeEv.isra.0.part.0>
     154:	adrp	x1, 0 <_ZNK4llvm14TargetRegistry8iteratordeEv.isra.0.part.0>
     158:	adrp	x0, 0 <_ZNK4llvm14TargetRegistry8iteratordeEv.isra.0.part.0>
     15c:	add	x3, x3, #0x0
     160:	add	x1, x1, #0x0
     164:	add	x0, x0, #0x0
     168:	mov	w2, #0x277                 	// #631
     16c:	bl	0 <__assert_fail>

0000000000000170 <LLVMGetTargetFromTriple>:
     170:	stp	x29, x30, [sp, #-160]!
     174:	mov	x29, sp
     178:	stp	x19, x20, [sp, #16]
     17c:	add	x20, sp, #0x80
     180:	stp	x21, x22, [sp, #32]
     184:	add	x21, sp, #0x60
     188:	add	x3, x21, #0x10
     18c:	stp	x23, x24, [sp, #48]
     190:	str	x25, [sp, #64]
     194:	add	x25, x20, #0x10
     198:	stp	x3, xzr, [sp, #96]
     19c:	strb	wzr, [sp, #112]
     1a0:	str	x25, [sp, #128]
     1a4:	cbz	x0, 28c <LLVMGetTargetFromTriple+0x11c>
     1a8:	mov	x23, x1
     1ac:	mov	x24, x2
     1b0:	mov	x22, x0
     1b4:	bl	0 <strlen>
     1b8:	str	x0, [sp, #88]
     1bc:	mov	x19, x0
     1c0:	cmp	x0, #0xf
     1c4:	b.hi	258 <LLVMGetTargetFromTriple+0xe8>  // b.pmore
     1c8:	cmp	x0, #0x1
     1cc:	b.ne	24c <LLVMGetTargetFromTriple+0xdc>  // b.any
     1d0:	ldrb	w1, [x22]
     1d4:	mov	x0, x25
     1d8:	strb	w1, [sp, #144]
     1dc:	str	x19, [sp, #136]
     1e0:	mov	x1, x21
     1e4:	strb	wzr, [x0, x19]
     1e8:	mov	x0, x20
     1ec:	add	x20, x20, #0x10
     1f0:	bl	0 <_ZN4llvm14TargetRegistry12lookupTargetERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERS6_>
     1f4:	str	x0, [x23]
     1f8:	ldr	x1, [sp, #128]
     1fc:	mov	x3, x0
     200:	cmp	x1, x20
     204:	b.eq	214 <LLVMGetTargetFromTriple+0xa4>  // b.none
     208:	mov	x0, x1
     20c:	bl	0 <_ZdlPv>
     210:	ldr	x3, [x23]
     214:	mov	w19, #0x0                   	// #0
     218:	ldr	x0, [sp, #96]
     21c:	cbz	x3, 298 <LLVMGetTargetFromTriple+0x128>
     220:	add	x21, x21, #0x10
     224:	cmp	x0, x21
     228:	b.eq	230 <LLVMGetTargetFromTriple+0xc0>  // b.none
     22c:	bl	0 <_ZdlPv>
     230:	mov	w0, w19
     234:	ldp	x19, x20, [sp, #16]
     238:	ldp	x21, x22, [sp, #32]
     23c:	ldp	x23, x24, [sp, #48]
     240:	ldr	x25, [sp, #64]
     244:	ldp	x29, x30, [sp], #160
     248:	ret
     24c:	mov	x0, x25
     250:	cbz	x19, 1dc <LLVMGetTargetFromTriple+0x6c>
     254:	b	274 <LLVMGetTargetFromTriple+0x104>
     258:	add	x1, sp, #0x58
     25c:	mov	x0, x20
     260:	mov	x2, #0x0                   	// #0
     264:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
     268:	ldr	x1, [sp, #88]
     26c:	str	x0, [sp, #128]
     270:	str	x1, [sp, #144]
     274:	mov	x2, x19
     278:	mov	x1, x22
     27c:	bl	0 <memcpy>
     280:	ldr	x19, [sp, #88]
     284:	ldr	x0, [sp, #128]
     288:	b	1dc <LLVMGetTargetFromTriple+0x6c>
     28c:	adrp	x0, 0 <_ZNK4llvm14TargetRegistry8iteratordeEv.isra.0.part.0>
     290:	add	x0, x0, #0x0
     294:	bl	0 <_ZSt19__throw_logic_errorPKc>
     298:	mov	w19, #0x1                   	// #1
     29c:	cbz	x24, 220 <LLVMGetTargetFromTriple+0xb0>
     2a0:	bl	0 <strdup>
     2a4:	str	x0, [x24]
     2a8:	ldr	x0, [sp, #96]
     2ac:	b	220 <LLVMGetTargetFromTriple+0xb0>

00000000000002b0 <LLVMGetTargetName>:
     2b0:	ldr	x0, [x0, #16]
     2b4:	ret

00000000000002b8 <LLVMGetTargetDescription>:
     2b8:	ldr	x0, [x0, #24]
     2bc:	ret

00000000000002c0 <LLVMTargetHasJIT>:
     2c0:	ldrb	w0, [x0, #40]
     2c4:	ret

00000000000002c8 <LLVMTargetHasTargetMachine>:
     2c8:	ldr	x0, [x0, #88]
     2cc:	cmp	x0, #0x0
     2d0:	cset	w0, ne  // ne = any
     2d4:	ret

00000000000002d8 <LLVMTargetHasAsmBackend>:
     2d8:	ldr	x0, [x0, #96]
     2dc:	cmp	x0, #0x0
     2e0:	cset	w0, ne  // ne = any
     2e4:	ret

00000000000002e8 <LLVMCreateTargetMachine>:
     2e8:	sub	sp, sp, #0x1a0
     2ec:	cmp	w5, #0x4
     2f0:	stp	x29, x30, [sp, #32]
     2f4:	add	x29, sp, #0x20
     2f8:	stp	x19, x20, [sp, #48]
     2fc:	mov	w20, w4
     300:	stp	x21, x22, [sp, #64]
     304:	mov	x22, x1
     308:	stp	x23, x24, [sp, #80]
     30c:	mov	x23, x2
     310:	mov	x24, x3
     314:	stp	x25, x26, [sp, #96]
     318:	mov	x25, x0
     31c:	stp	x27, x28, [sp, #112]
     320:	b.eq	648 <LLVMCreateTargetMachine+0x360>  // b.none
     324:	b.hi	5d8 <LLVMCreateTargetMachine+0x2f0>  // b.pmore
     328:	cmp	w5, #0x2
     32c:	b.eq	660 <LLVMCreateTargetMachine+0x378>  // b.none
     330:	cmp	w5, #0x3
     334:	b.ne	5a0 <LLVMCreateTargetMachine+0x2b8>  // b.any
     338:	mov	x0, #0x2                   	// #2
     33c:	mov	x28, #0x0                   	// #0
     340:	bfxil	x28, x0, #0, #32
     344:	mov	w0, #0x1                   	// #1
     348:	str	w0, [sp, #128]
     34c:	nop
     350:	cmp	w6, #0x4
     354:	b.eq	5c8 <LLVMCreateTargetMachine+0x2e0>  // b.none
     358:	b.hi	580 <LLVMCreateTargetMachine+0x298>  // b.pmore
     35c:	cmp	w6, #0x1
     360:	b.eq	620 <LLVMCreateTargetMachine+0x338>  // b.none
     364:	cmp	w6, #0x2
     368:	b.ne	56c <LLVMCreateTargetMachine+0x284>  // b.any
     36c:	mov	w26, #0x0                   	// #0
     370:	mov	w27, #0x1                   	// #1
     374:	mov	w19, #0x0                   	// #0
     378:	ldr	x1, [sp, #288]
     37c:	adrp	x0, 0 <_ZNK4llvm14TargetRegistry8iteratordeEv.isra.0.part.0>
     380:	ldrh	w3, [sp, #264]
     384:	cmp	w20, #0x4
     388:	ldrb	w2, [sp, #272]
     38c:	and	x1, x1, #0xff800000
     390:	ldrb	w4, [sp, #280]
     394:	and	w3, w3, #0xfffffe00
     398:	and	w2, w2, #0xfffffff8
     39c:	ldr	d0, [x0]
     3a0:	orr	w3, w3, #0x10
     3a4:	orr	w2, w2, #0x1
     3a8:	and	w4, w4, #0xfffffffc
     3ac:	orr	x1, x1, #0x8
     3b0:	mov	w6, #0x1                   	// #1
     3b4:	mov	x5, #0x1                   	// #1
     3b8:	mov	w0, #0x2                   	// #2
     3bc:	add	x21, sp, #0x108
     3c0:	csel	w20, w20, w0, cc  // cc = lo, ul, last
     3c4:	add	x0, x21, #0x38
     3c8:	str	xzr, [sp, #136]
     3cc:	strh	w3, [sp, #264]
     3d0:	str	wzr, [sp, #268]
     3d4:	strb	w2, [sp, #272]
     3d8:	str	w6, [sp, #276]
     3dc:	strb	w4, [sp, #280]
     3e0:	str	wzr, [sp, #284]
     3e4:	stp	x1, x5, [sp, #288]
     3e8:	str	d0, [sp, #304]
     3ec:	str	xzr, [sp, #312]
     3f0:	bl	0 <_ZN4llvm15MCTargetOptionsC1Ev>
     3f4:	cbz	x22, 404 <LLVMCreateTargetMachine+0x11c>
     3f8:	mov	x0, x22
     3fc:	bl	0 <strlen>
     400:	str	x0, [sp, #136]
     404:	mov	x3, #0x0                   	// #0
     408:	cbz	x23, 418 <LLVMCreateTargetMachine+0x130>
     40c:	mov	x0, x23
     410:	bl	0 <strlen>
     414:	mov	x3, x0
     418:	mov	x5, #0x0                   	// #0
     41c:	cbz	x24, 434 <LLVMCreateTargetMachine+0x14c>
     420:	mov	x0, x24
     424:	str	x3, [sp, #144]
     428:	bl	0 <strlen>
     42c:	mov	x5, x0
     430:	ldr	x3, [sp, #144]
     434:	mov	x2, #0x0                   	// #0
     438:	ldr	x0, [sp, #136]
     43c:	bfxil	x2, x26, #0, #32
     440:	stp	x22, x0, [sp, #168]
     444:	bfi	x2, x27, #32, #8
     448:	ldr	x8, [x25, #88]
     44c:	stp	x2, x5, [sp, #136]
     450:	ldr	x0, [sp, #128]
     454:	str	x8, [sp, #128]
     458:	str	x3, [sp, #152]
     45c:	bfi	x28, x0, #32, #8
     460:	cbz	x8, 628 <LLVMCreateTargetMachine+0x340>
     464:	add	x4, sp, #0xa8
     468:	mov	w6, #0x105                 	// #261
     46c:	add	x22, sp, #0xd0
     470:	add	x1, sp, #0xb8
     474:	mov	x0, x22
     478:	stp	x4, xzr, [sp, #184]
     47c:	strh	w6, [sp, #200]
     480:	bl	0 <_ZN4llvm6TripleC1ERKNS_5TwineE>
     484:	ldp	x8, x2, [sp, #128]
     488:	str	x2, [sp]
     48c:	ldp	x5, x3, [sp, #144]
     490:	str	w20, [sp, #8]
     494:	strb	w19, [sp, #16]
     498:	mov	x1, x22
     49c:	mov	x2, x23
     4a0:	mov	x7, x28
     4a4:	mov	x4, x24
     4a8:	mov	x0, x25
     4ac:	mov	x6, x21
     4b0:	add	x22, x22, #0x10
     4b4:	blr	x8
     4b8:	mov	x23, x0
     4bc:	ldr	x1, [sp, #208]
     4c0:	cmp	x1, x22
     4c4:	b.eq	4d0 <LLVMCreateTargetMachine+0x1e8>  // b.none
     4c8:	mov	x0, x1
     4cc:	bl	0 <_ZdlPv>
     4d0:	ldp	x19, x20, [sp, #392]
     4d4:	cmp	x19, x20
     4d8:	b.eq	504 <LLVMCreateTargetMachine+0x21c>  // b.none
     4dc:	nop
     4e0:	mov	x1, x19
     4e4:	add	x19, x19, #0x20
     4e8:	ldr	x0, [x1], #16
     4ec:	cmp	x0, x1
     4f0:	b.eq	55c <LLVMCreateTargetMachine+0x274>  // b.none
     4f4:	bl	0 <_ZdlPv>
     4f8:	cmp	x20, x19
     4fc:	b.ne	4e0 <LLVMCreateTargetMachine+0x1f8>  // b.any
     500:	ldr	x20, [sp, #392]
     504:	cbz	x20, 510 <LLVMCreateTargetMachine+0x228>
     508:	mov	x0, x20
     50c:	bl	0 <_ZdlPv>
     510:	ldr	x0, [sp, #360]
     514:	add	x1, x21, #0x70
     518:	cmp	x0, x1
     51c:	b.eq	524 <LLVMCreateTargetMachine+0x23c>  // b.none
     520:	bl	0 <_ZdlPv>
     524:	ldr	x0, [sp, #328]
     528:	add	x21, x21, #0x50
     52c:	cmp	x0, x21
     530:	b.eq	538 <LLVMCreateTargetMachine+0x250>  // b.none
     534:	bl	0 <_ZdlPv>
     538:	mov	x0, x23
     53c:	ldp	x29, x30, [sp, #32]
     540:	ldp	x19, x20, [sp, #48]
     544:	ldp	x21, x22, [sp, #64]
     548:	ldp	x23, x24, [sp, #80]
     54c:	ldp	x25, x26, [sp, #96]
     550:	ldp	x27, x28, [sp, #112]
     554:	add	sp, sp, #0x1a0
     558:	ret
     55c:	cmp	x20, x19
     560:	b.ne	4e0 <LLVMCreateTargetMachine+0x1f8>  // b.any
     564:	ldr	x20, [sp, #392]
     568:	b	504 <LLVMCreateTargetMachine+0x21c>
     56c:	cbz	w6, 600 <LLVMCreateTargetMachine+0x318>
     570:	mov	w26, #0x1                   	// #1
     574:	mov	w19, #0x0                   	// #0
     578:	mov	w27, w26
     57c:	b	378 <LLVMCreateTargetMachine+0x90>
     580:	cmp	w6, #0x5
     584:	b.eq	610 <LLVMCreateTargetMachine+0x328>  // b.none
     588:	cmp	w6, #0x6
     58c:	b.ne	674 <LLVMCreateTargetMachine+0x38c>  // b.any
     590:	mov	w26, #0x4                   	// #4
     594:	mov	w27, #0x1                   	// #1
     598:	mov	w19, #0x0                   	// #0
     59c:	b	378 <LLVMCreateTargetMachine+0x90>
     5a0:	mov	w0, #0x1                   	// #1
     5a4:	str	w0, [sp, #128]
     5a8:	cmp	w5, #0x1
     5ac:	mov	x28, #0x0                   	// #0
     5b0:	b.eq	350 <LLVMCreateTargetMachine+0x68>  // b.none
     5b4:	str	wzr, [sp, #128]
     5b8:	and	x28, x28, #0xffffffffffffff00
     5bc:	cmp	w6, #0x4
     5c0:	b.ne	358 <LLVMCreateTargetMachine+0x70>  // b.any
     5c4:	nop
     5c8:	mov	w26, #0x2                   	// #2
     5cc:	mov	w27, #0x1                   	// #1
     5d0:	mov	w19, #0x0                   	// #0
     5d4:	b	378 <LLVMCreateTargetMachine+0x90>
     5d8:	cmp	w5, #0x5
     5dc:	b.eq	630 <LLVMCreateTargetMachine+0x348>  // b.none
     5e0:	cmp	w5, #0x6
     5e4:	b.ne	5b4 <LLVMCreateTargetMachine+0x2cc>  // b.any
     5e8:	mov	x0, #0x5                   	// #5
     5ec:	mov	x28, #0x0                   	// #0
     5f0:	bfxil	x28, x0, #0, #32
     5f4:	mov	w0, #0x1                   	// #1
     5f8:	str	w0, [sp, #128]
     5fc:	b	350 <LLVMCreateTargetMachine+0x68>
     600:	mov	w19, #0x0                   	// #0
     604:	mov	w26, #0x0                   	// #0
     608:	mov	w27, #0x0                   	// #0
     60c:	b	378 <LLVMCreateTargetMachine+0x90>
     610:	mov	w26, #0x3                   	// #3
     614:	mov	w27, #0x1                   	// #1
     618:	mov	w19, #0x0                   	// #0
     61c:	b	378 <LLVMCreateTargetMachine+0x90>
     620:	mov	w19, w6
     624:	b	604 <LLVMCreateTargetMachine+0x31c>
     628:	mov	x23, #0x0                   	// #0
     62c:	b	4d0 <LLVMCreateTargetMachine+0x1e8>
     630:	mov	x0, #0x4                   	// #4
     634:	mov	x28, #0x0                   	// #0
     638:	bfxil	x28, x0, #0, #32
     63c:	mov	w0, #0x1                   	// #1
     640:	str	w0, [sp, #128]
     644:	b	350 <LLVMCreateTargetMachine+0x68>
     648:	mov	x0, #0x3                   	// #3
     64c:	mov	x28, #0x0                   	// #0
     650:	bfxil	x28, x0, #0, #32
     654:	mov	w0, #0x1                   	// #1
     658:	str	w0, [sp, #128]
     65c:	b	350 <LLVMCreateTargetMachine+0x68>
     660:	mov	x0, #0x1                   	// #1
     664:	mov	x28, #0x0                   	// #0
     668:	bfxil	x28, x0, #0, #32
     66c:	str	w0, [sp, #128]
     670:	b	350 <LLVMCreateTargetMachine+0x68>
     674:	mov	w26, #0x1                   	// #1
     678:	mov	w19, #0x0                   	// #0
     67c:	mov	w27, w26
     680:	b	378 <LLVMCreateTargetMachine+0x90>
     684:	nop

0000000000000688 <LLVMDisposeTargetMachine>:
     688:	cbz	x0, 69c <LLVMDisposeTargetMachine+0x14>
     68c:	ldr	x1, [x0]
     690:	ldr	x1, [x1, #8]
     694:	mov	x16, x1
     698:	br	x16
     69c:	ret

00000000000006a0 <LLVMGetTargetMachineTarget>:
     6a0:	ldr	x0, [x0, #8]
     6a4:	ret

00000000000006a8 <LLVMGetTargetMachineTriple>:
     6a8:	stp	x29, x30, [sp, #-96]!
     6ac:	mov	x29, sp
     6b0:	stp	x19, x20, [sp, #16]
     6b4:	add	x20, sp, #0x40
     6b8:	add	x1, x20, #0x10
     6bc:	ldr	x19, [x0, #456]
     6c0:	str	x21, [sp, #32]
     6c4:	ldr	x21, [x0, #448]
     6c8:	str	x1, [sp, #64]
     6cc:	cmn	x21, x19
     6d0:	ccmp	x21, #0x0, #0x0, ne  // ne = any
     6d4:	b.eq	774 <LLVMGetTargetMachineTriple+0xcc>  // b.none
     6d8:	str	x19, [sp, #56]
     6dc:	cmp	x19, #0xf
     6e0:	b.hi	744 <LLVMGetTargetMachineTriple+0x9c>  // b.pmore
     6e4:	cmp	x19, #0x1
     6e8:	b.ne	738 <LLVMGetTargetMachineTriple+0x90>  // b.any
     6ec:	ldrb	w2, [x21]
     6f0:	mov	x0, x1
     6f4:	strb	w2, [sp, #80]
     6f8:	str	x19, [sp, #72]
     6fc:	add	x20, x20, #0x10
     700:	strb	wzr, [x0, x19]
     704:	ldr	x0, [sp, #64]
     708:	bl	0 <strdup>
     70c:	mov	x19, x0
     710:	ldr	x1, [sp, #64]
     714:	cmp	x1, x20
     718:	b.eq	724 <LLVMGetTargetMachineTriple+0x7c>  // b.none
     71c:	mov	x0, x1
     720:	bl	0 <_ZdlPv>
     724:	mov	x0, x19
     728:	ldp	x19, x20, [sp, #16]
     72c:	ldr	x21, [sp, #32]
     730:	ldp	x29, x30, [sp], #96
     734:	ret
     738:	mov	x0, x1
     73c:	cbz	x19, 6f8 <LLVMGetTargetMachineTriple+0x50>
     740:	b	760 <LLVMGetTargetMachineTriple+0xb8>
     744:	add	x1, sp, #0x38
     748:	mov	x0, x20
     74c:	mov	x2, #0x0                   	// #0
     750:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
     754:	ldr	x1, [sp, #56]
     758:	str	x0, [sp, #64]
     75c:	str	x1, [sp, #80]
     760:	mov	x2, x19
     764:	mov	x1, x21
     768:	bl	0 <memcpy>
     76c:	ldp	x19, x0, [sp, #56]
     770:	b	6f8 <LLVMGetTargetMachineTriple+0x50>
     774:	adrp	x0, 0 <_ZNK4llvm14TargetRegistry8iteratordeEv.isra.0.part.0>
     778:	add	x0, x0, #0x0
     77c:	bl	0 <_ZSt19__throw_logic_errorPKc>

0000000000000780 <LLVMGetTargetMachineCPU>:
     780:	stp	x29, x30, [sp, #-96]!
     784:	mov	x29, sp
     788:	str	x21, [sp, #32]
     78c:	ldr	x21, [x0, #504]
     790:	stp	x19, x20, [sp, #16]
     794:	add	x19, sp, #0x40
     798:	cbz	x21, 7d4 <LLVMGetTargetMachineCPU+0x54>
     79c:	ldr	x20, [x0, #512]
     7a0:	add	x0, x19, #0x10
     7a4:	stp	x20, x0, [sp, #56]
     7a8:	cmp	x20, #0xf
     7ac:	b.hi	814 <LLVMGetTargetMachineCPU+0x94>  // b.pmore
     7b0:	cmp	x20, #0x1
     7b4:	b.ne	844 <LLVMGetTargetMachineCPU+0xc4>  // b.any
     7b8:	ldrb	w2, [x21]
     7bc:	mov	x1, x0
     7c0:	strb	w2, [sp, #80]
     7c4:	str	x20, [sp, #72]
     7c8:	strb	wzr, [x1, x20]
     7cc:	ldr	x0, [sp, #64]
     7d0:	b	7e0 <LLVMGetTargetMachineCPU+0x60>
     7d4:	add	x0, x19, #0x10
     7d8:	stp	x0, xzr, [sp, #64]
     7dc:	strb	wzr, [sp, #80]
     7e0:	bl	0 <strdup>
     7e4:	add	x19, x19, #0x10
     7e8:	ldr	x1, [sp, #64]
     7ec:	mov	x20, x0
     7f0:	cmp	x1, x19
     7f4:	b.eq	800 <LLVMGetTargetMachineCPU+0x80>  // b.none
     7f8:	mov	x0, x1
     7fc:	bl	0 <_ZdlPv>
     800:	mov	x0, x20
     804:	ldp	x19, x20, [sp, #16]
     808:	ldr	x21, [sp, #32]
     80c:	ldp	x29, x30, [sp], #96
     810:	ret
     814:	add	x1, sp, #0x38
     818:	mov	x0, x19
     81c:	mov	x2, #0x0                   	// #0
     820:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
     824:	ldr	x1, [sp, #56]
     828:	str	x0, [sp, #64]
     82c:	str	x1, [sp, #80]
     830:	mov	x2, x20
     834:	mov	x1, x21
     838:	bl	0 <memcpy>
     83c:	ldp	x20, x1, [sp, #56]
     840:	b	7c4 <LLVMGetTargetMachineCPU+0x44>
     844:	mov	x1, x0
     848:	cbz	x20, 7c4 <LLVMGetTargetMachineCPU+0x44>
     84c:	b	830 <LLVMGetTargetMachineCPU+0xb0>

0000000000000850 <LLVMGetTargetMachineFeatureString>:
     850:	stp	x29, x30, [sp, #-96]!
     854:	mov	x29, sp
     858:	str	x21, [sp, #32]
     85c:	ldr	x21, [x0, #536]
     860:	stp	x19, x20, [sp, #16]
     864:	add	x19, sp, #0x40
     868:	cbz	x21, 8a4 <LLVMGetTargetMachineFeatureString+0x54>
     86c:	ldr	x20, [x0, #544]
     870:	add	x0, x19, #0x10
     874:	stp	x20, x0, [sp, #56]
     878:	cmp	x20, #0xf
     87c:	b.hi	8e4 <LLVMGetTargetMachineFeatureString+0x94>  // b.pmore
     880:	cmp	x20, #0x1
     884:	b.ne	914 <LLVMGetTargetMachineFeatureString+0xc4>  // b.any
     888:	ldrb	w2, [x21]
     88c:	mov	x1, x0
     890:	strb	w2, [sp, #80]
     894:	str	x20, [sp, #72]
     898:	strb	wzr, [x1, x20]
     89c:	ldr	x0, [sp, #64]
     8a0:	b	8b0 <LLVMGetTargetMachineFeatureString+0x60>
     8a4:	add	x0, x19, #0x10
     8a8:	stp	x0, xzr, [sp, #64]
     8ac:	strb	wzr, [sp, #80]
     8b0:	bl	0 <strdup>
     8b4:	add	x19, x19, #0x10
     8b8:	ldr	x1, [sp, #64]
     8bc:	mov	x20, x0
     8c0:	cmp	x1, x19
     8c4:	b.eq	8d0 <LLVMGetTargetMachineFeatureString+0x80>  // b.none
     8c8:	mov	x0, x1
     8cc:	bl	0 <_ZdlPv>
     8d0:	mov	x0, x20
     8d4:	ldp	x19, x20, [sp, #16]
     8d8:	ldr	x21, [sp, #32]
     8dc:	ldp	x29, x30, [sp], #96
     8e0:	ret
     8e4:	add	x1, sp, #0x38
     8e8:	mov	x0, x19
     8ec:	mov	x2, #0x0                   	// #0
     8f0:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
     8f4:	ldr	x1, [sp, #56]
     8f8:	str	x0, [sp, #64]
     8fc:	str	x1, [sp, #80]
     900:	mov	x2, x20
     904:	mov	x1, x21
     908:	bl	0 <memcpy>
     90c:	ldp	x20, x1, [sp, #56]
     910:	b	894 <LLVMGetTargetMachineFeatureString+0x44>
     914:	mov	x1, x0
     918:	cbz	x20, 894 <LLVMGetTargetMachineFeatureString+0x44>
     91c:	b	900 <LLVMGetTargetMachineFeatureString+0xb0>

0000000000000920 <LLVMSetTargetMachineAsmVerbosity>:
     920:	cmp	w1, #0x0
     924:	ldrb	w1, [x0, #833]
     928:	cset	w2, ne  // ne = any
     92c:	bfi	w1, w2, #2, #1
     930:	strb	w1, [x0, #833]
     934:	ret

0000000000000938 <LLVMGetDefaultTargetTriple>:
     938:	stp	x29, x30, [sp, #-64]!
     93c:	mov	x29, sp
     940:	stp	x19, x20, [sp, #16]
     944:	add	x19, sp, #0x20
     948:	mov	x8, x19
     94c:	bl	0 <_ZN4llvm3sys22getDefaultTargetTripleB5cxx11Ev>
     950:	add	x19, x19, #0x10
     954:	ldr	x0, [sp, #32]
     958:	bl	0 <strdup>
     95c:	mov	x20, x0
     960:	ldr	x1, [sp, #32]
     964:	cmp	x1, x19
     968:	b.eq	974 <LLVMGetDefaultTargetTriple+0x3c>  // b.none
     96c:	mov	x0, x1
     970:	bl	0 <_ZdlPv>
     974:	mov	x0, x20
     978:	ldp	x19, x20, [sp, #16]
     97c:	ldp	x29, x30, [sp], #64
     980:	ret
     984:	nop

0000000000000988 <LLVMNormalizeTargetTriple>:
     988:	stp	x29, x30, [sp, #-64]!
     98c:	mov	x1, #0x0                   	// #0
     990:	mov	x29, sp
     994:	stp	x19, x20, [sp, #16]
     998:	mov	x20, x0
     99c:	cbz	x0, 9a8 <LLVMNormalizeTargetTriple+0x20>
     9a0:	bl	0 <strlen>
     9a4:	mov	x1, x0
     9a8:	add	x19, sp, #0x20
     9ac:	mov	x0, x20
     9b0:	mov	x8, x19
     9b4:	bl	0 <_ZN4llvm6Triple9normalizeB5cxx11ENS_9StringRefE>
     9b8:	ldr	x0, [sp, #32]
     9bc:	add	x19, x19, #0x10
     9c0:	bl	0 <strdup>
     9c4:	mov	x20, x0
     9c8:	ldr	x1, [sp, #32]
     9cc:	cmp	x1, x19
     9d0:	b.eq	9dc <LLVMNormalizeTargetTriple+0x54>  // b.none
     9d4:	mov	x0, x1
     9d8:	bl	0 <_ZdlPv>
     9dc:	mov	x0, x20
     9e0:	ldp	x19, x20, [sp, #16]
     9e4:	ldp	x29, x30, [sp], #64
     9e8:	ret
     9ec:	nop

00000000000009f0 <LLVMGetHostCPUName>:
     9f0:	stp	x29, x30, [sp, #-16]!
     9f4:	mov	x29, sp
     9f8:	bl	0 <_ZN4llvm3sys14getHostCPUNameEv>
     9fc:	ldp	x29, x30, [sp], #16
     a00:	b	0 <strdup>
     a04:	nop

0000000000000a08 <LLVMAddAnalysisPasses>:
     a08:	stp	x29, x30, [sp, #-80]!
     a0c:	mov	x29, sp
     a10:	stp	x19, x20, [sp, #16]
     a14:	mov	x19, x1
     a18:	add	x20, sp, #0x30
     a1c:	ldr	x1, [x1]
     a20:	mov	x8, x20
     a24:	str	x21, [sp, #32]
     a28:	ldr	x21, [x1, #16]
     a2c:	bl	0 <_ZN4llvm13TargetMachine19getTargetIRAnalysisEv>
     a30:	mov	x0, x20
     a34:	bl	0 <_ZN4llvm36createTargetTransformInfoWrapperPassENS_16TargetIRAnalysisE>
     a38:	mov	x1, x0
     a3c:	mov	x0, x19
     a40:	blr	x21
     a44:	ldr	x3, [sp, #64]
     a48:	cbz	x3, a5c <LLVMAddAnalysisPasses+0x54>
     a4c:	mov	x1, x20
     a50:	mov	x0, x20
     a54:	mov	w2, #0x3                   	// #3
     a58:	blr	x3
     a5c:	ldp	x19, x20, [sp, #16]
     a60:	ldr	x21, [sp, #32]
     a64:	ldp	x29, x30, [sp], #80
     a68:	ret
     a6c:	nop

0000000000000a70 <LLVMCreateTargetDataLayout>:
     a70:	stp	x29, x30, [sp, #-48]!
     a74:	mov	x29, sp
     a78:	stp	x19, x20, [sp, #16]
     a7c:	mov	x20, x0
     a80:	mov	x0, #0x1b0                 	// #432
     a84:	stp	x21, x22, [sp, #32]
     a88:	bl	0 <_Znwm>
     a8c:	add	x7, x0, #0x30
     a90:	add	x6, x0, #0x48
     a94:	add	x4, x0, #0xd8
     a98:	add	x3, x0, #0xf8
     a9c:	add	x2, x0, #0x190
     aa0:	mov	x1, #0x800000000           	// #34359738368
     aa4:	mov	x5, #0x1000000000          	// #68719476736
     aa8:	strh	wzr, [x0, #8]
     aac:	mov	x19, x0
     ab0:	strh	wzr, [x0, #16]
     ab4:	add	x22, x0, #0xc8
     ab8:	stp	x7, x1, [x0, #32]
     abc:	stp	x6, x5, [x0, #56]
     ac0:	stp	x4, xzr, [x0, #200]
     ac4:	strb	wzr, [x0, #216]
     ac8:	stp	x3, x1, [x0, #232]
     acc:	stp	xzr, x2, [x0, #376]
     ad0:	str	x1, [x0, #392]
     ad4:	bl	0 <_ZN4llvm10DataLayout5clearEv>
     ad8:	mov	x0, x22
     adc:	add	x1, x20, #0xd8
     ae0:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_>
     ae4:	ldrh	w5, [x20, #24]
     ae8:	add	x1, x20, #0x30
     aec:	ldrb	w7, [x20, #16]
     af0:	add	x0, x19, #0x20
     af4:	ldrh	w3, [x20, #32]
     af8:	ldr	w6, [x20, #20]
     afc:	ldr	w4, [x20, #28]
     b00:	ldur	x2, [x20, #36]
     b04:	strb	w7, [x19]
     b08:	str	w6, [x19, #4]
     b0c:	strh	w5, [x19, #8]
     b10:	str	w4, [x19, #12]
     b14:	strh	w3, [x19, #16]
     b18:	stur	x2, [x19, #20]
     b1c:	bl	0 <_ZNK4llvm14TargetRegistry8iteratordeEv.isra.0.part.0>
     b20:	add	x1, x20, #0x48
     b24:	add	x0, x19, #0x38
     b28:	bl	0 <_ZNK4llvm14TargetRegistry8iteratordeEv.isra.0.part.0>
     b2c:	add	x1, x20, #0xf8
     b30:	add	x0, x19, #0xe8
     b34:	bl	0 <_ZNK4llvm14TargetRegistry8iteratordeEv.isra.0.part.0>
     b38:	add	x1, x20, #0x190
     b3c:	add	x0, x19, #0x180
     b40:	bl	0 <_ZNK4llvm14TargetRegistry8iteratordeEv.isra.0.part.0>
     b44:	mov	x0, x19
     b48:	ldp	x19, x20, [sp, #16]
     b4c:	ldp	x21, x22, [sp, #32]
     b50:	ldp	x29, x30, [sp], #48
     b54:	ret

0000000000000b58 <LLVMGetHostCPUFeatures>:
     b58:	stp	x29, x30, [sp, #-144]!
     b5c:	mov	x2, #0x0                   	// #0
     b60:	adrp	x1, 0 <_ZNK4llvm14TargetRegistry8iteratordeEv.isra.0.part.0>
     b64:	mov	x29, sp
     b68:	stp	x19, x20, [sp, #16]
     b6c:	add	x20, sp, #0x38
     b70:	mov	x0, x20
     b74:	add	x1, x1, #0x0
     b78:	stp	x21, x22, [sp, #32]
     b7c:	bl	0 <_ZN4llvm17SubtargetFeaturesC1ENS_9StringRefE>
     b80:	adrp	x0, 0 <_ZNK4llvm14TargetRegistry8iteratordeEv.isra.0.part.0>
     b84:	add	x22, sp, #0x70
     b88:	str	xzr, [sp, #80]
     b8c:	ldr	q0, [x0]
     b90:	add	x0, sp, #0x50
     b94:	stur	q0, [sp, #88]
     b98:	bl	0 <_ZN4llvm3sys18getHostCPUFeaturesERNS_9StringMapIbNS_15MallocAllocatorEEE>
     b9c:	tst	w0, #0xff
     ba0:	b.ne	c84 <LLVMGetHostCPUFeatures+0x12c>  // b.any
     ba4:	mov	x8, x22
     ba8:	mov	x0, x20
     bac:	bl	0 <_ZNK4llvm17SubtargetFeatures9getStringB5cxx11Ev>
     bb0:	add	x22, x22, #0x10
     bb4:	ldr	x0, [sp, #112]
     bb8:	bl	0 <strdup>
     bbc:	mov	x21, x0
     bc0:	ldr	x1, [sp, #112]
     bc4:	cmp	x1, x22
     bc8:	b.eq	bd4 <LLVMGetHostCPUFeatures+0x7c>  // b.none
     bcc:	mov	x0, x1
     bd0:	bl	0 <_ZdlPv>
     bd4:	ldr	w0, [sp, #92]
     bd8:	ldr	x2, [sp, #80]
     bdc:	cbz	w0, c1c <LLVMGetHostCPUFeatures+0xc4>
     be0:	ldr	w1, [sp, #88]
     be4:	cbz	w1, c1c <LLVMGetHostCPUFeatures+0xc4>
     be8:	sub	w20, w1, #0x1
     bec:	mov	x19, #0x0                   	// #0
     bf0:	add	x20, x20, #0x1
     bf4:	lsl	x20, x20, #3
     bf8:	ldr	x0, [x2, x19]
     bfc:	add	x19, x19, #0x8
     c00:	cmp	x0, #0x0
     c04:	ccmn	x0, #0x8, #0x4, ne  // ne = any
     c08:	b.eq	c14 <LLVMGetHostCPUFeatures+0xbc>  // b.none
     c0c:	bl	0 <free>
     c10:	ldr	x2, [sp, #80]
     c14:	cmp	x20, x19
     c18:	b.ne	bf8 <LLVMGetHostCPUFeatures+0xa0>  // b.any
     c1c:	mov	x0, x2
     c20:	bl	0 <free>
     c24:	ldp	x19, x20, [sp, #56]
     c28:	cmp	x19, x20
     c2c:	b.eq	c54 <LLVMGetHostCPUFeatures+0xfc>  // b.none
     c30:	mov	x1, x19
     c34:	add	x19, x19, #0x20
     c38:	ldr	x0, [x1], #16
     c3c:	cmp	x0, x1
     c40:	b.eq	c74 <LLVMGetHostCPUFeatures+0x11c>  // b.none
     c44:	bl	0 <_ZdlPv>
     c48:	cmp	x20, x19
     c4c:	b.ne	c30 <LLVMGetHostCPUFeatures+0xd8>  // b.any
     c50:	ldr	x20, [sp, #56]
     c54:	cbz	x20, c60 <LLVMGetHostCPUFeatures+0x108>
     c58:	mov	x0, x20
     c5c:	bl	0 <_ZdlPv>
     c60:	mov	x0, x21
     c64:	ldp	x19, x20, [sp, #16]
     c68:	ldp	x21, x22, [sp, #32]
     c6c:	ldp	x29, x30, [sp], #144
     c70:	ret
     c74:	cmp	x20, x19
     c78:	b.ne	c30 <LLVMGetHostCPUFeatures+0xd8>  // b.any
     c7c:	ldr	x20, [sp, #56]
     c80:	b	c54 <LLVMGetHostCPUFeatures+0xfc>
     c84:	ldr	w2, [sp, #88]
     c88:	mov	x0, x22
     c8c:	ldr	x1, [sp, #80]
     c90:	cmp	w2, #0x0
     c94:	cset	w2, eq  // eq = none
     c98:	bl	0 <_ZNK4llvm14TargetRegistry8iteratordeEv.isra.0.part.0>
     c9c:	ldr	w3, [sp, #88]
     ca0:	mov	x0, x22
     ca4:	ldr	x1, [sp, #80]
     ca8:	mov	w2, #0x1                   	// #1
     cac:	ldr	x19, [sp, #112]
     cb0:	add	x1, x1, x3, lsl #3
     cb4:	bl	0 <_ZNK4llvm14TargetRegistry8iteratordeEv.isra.0.part.0>
     cb8:	ldr	x21, [sp, #112]
     cbc:	cmp	x19, x21
     cc0:	b.eq	ba4 <LLVMGetHostCPUFeatures+0x4c>  // b.none
     cc4:	ldr	x1, [x19]
     cc8:	mov	x0, x20
     ccc:	ldrb	w3, [x1, #8]
     cd0:	ldr	x2, [x1], #16
     cd4:	bl	0 <_ZN4llvm17SubtargetFeatures10AddFeatureENS_9StringRefEb>
     cd8:	ldr	x1, [x19, #8]
     cdc:	add	x2, x19, #0x8
     ce0:	add	x0, x19, #0x10
     ce4:	cmp	x1, #0x0
     ce8:	ccmn	x1, #0x8, #0x4, ne  // ne = any
     cec:	b.ne	d10 <LLVMGetHostCPUFeatures+0x1b8>  // b.any
     cf0:	mov	x19, x0
     cf4:	ldr	x1, [x0], #8
     cf8:	cmp	x1, #0x0
     cfc:	ccmn	x1, #0x8, #0x4, ne  // ne = any
     d00:	b.eq	cf0 <LLVMGetHostCPUFeatures+0x198>  // b.none
     d04:	cmp	x21, x19
     d08:	b.ne	cc8 <LLVMGetHostCPUFeatures+0x170>  // b.any
     d0c:	b	ba4 <LLVMGetHostCPUFeatures+0x4c>
     d10:	mov	x19, x2
     d14:	cmp	x21, x19
     d18:	b.ne	cc8 <LLVMGetHostCPUFeatures+0x170>  // b.any
     d1c:	b	ba4 <LLVMGetHostCPUFeatures+0x4c>

0000000000000d20 <_ZL21LLVMTargetMachineEmitP23LLVMOpaqueTargetMachineP16LLVMOpaqueModuleRN4llvm17raw_pwrite_streamE19LLVMCodeGenFileTypePPc>:
     d20:	sub	sp, sp, #0x240
     d24:	stp	x29, x30, [sp]
     d28:	mov	x29, sp
     d2c:	stp	x25, x26, [sp, #64]
     d30:	add	x25, sp, #0x60
     d34:	mov	x26, x4
     d38:	stp	x19, x20, [sp, #16]
     d3c:	mov	x20, x0
     d40:	mov	x0, x25
     d44:	stp	x21, x22, [sp, #32]
     d48:	add	x21, sp, #0x70
     d4c:	add	x19, sp, #0x90
     d50:	stp	x23, x24, [sp, #48]
     d54:	mov	x24, x1
     d58:	mov	x23, x2
     d5c:	str	x27, [sp, #80]
     d60:	mov	w27, w3
     d64:	bl	0 <_ZN4llvm6legacy11PassManagerC1Ev>
     d68:	strb	wzr, [sp, #128]
     d6c:	add	x8, x21, #0x10
     d70:	add	x7, sp, #0xc0
     d74:	add	x6, sp, #0xd8
     d78:	add	x4, sp, #0x168
     d7c:	add	x3, sp, #0x188
     d80:	add	x2, sp, #0x220
     d84:	mov	x1, #0x800000000           	// #34359738368
     d88:	mov	x5, #0x1000000000          	// #68719476736
     d8c:	mov	x0, x19
     d90:	stp	x8, xzr, [sp, #112]
     d94:	strh	wzr, [sp, #152]
     d98:	strh	wzr, [sp, #160]
     d9c:	stp	x7, x1, [sp, #176]
     da0:	stp	x6, x5, [sp, #200]
     da4:	stp	x4, xzr, [sp, #344]
     da8:	strb	wzr, [sp, #360]
     dac:	stp	x3, x1, [sp, #376]
     db0:	str	xzr, [sp, #520]
     db4:	str	x2, [sp, #528]
     db8:	str	x1, [sp, #536]
     dbc:	bl	0 <_ZN4llvm10DataLayout5clearEv>
     dc0:	add	x1, x20, #0xd8
     dc4:	add	x0, x19, #0xc8
     dc8:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_>
     dcc:	ldrb	w7, [x20, #16]
     dd0:	add	x1, x20, #0x30
     dd4:	ldrh	w5, [x20, #24]
     dd8:	add	x0, x19, #0x20
     ddc:	ldrh	w3, [x20, #32]
     de0:	ldr	w6, [x20, #20]
     de4:	ldr	w4, [x20, #28]
     de8:	ldur	x2, [x20, #36]
     dec:	strb	w7, [sp, #144]
     df0:	str	w6, [sp, #148]
     df4:	strh	w5, [sp, #152]
     df8:	str	w4, [sp, #156]
     dfc:	strh	w3, [sp, #160]
     e00:	stur	x2, [sp, #164]
     e04:	bl	0 <_ZNK4llvm14TargetRegistry8iteratordeEv.isra.0.part.0>
     e08:	add	x1, x20, #0x48
     e0c:	add	x0, x19, #0x38
     e10:	bl	0 <_ZNK4llvm14TargetRegistry8iteratordeEv.isra.0.part.0>
     e14:	add	x1, x20, #0xf8
     e18:	add	x0, x19, #0xe8
     e1c:	bl	0 <_ZNK4llvm14TargetRegistry8iteratordeEv.isra.0.part.0>
     e20:	add	x1, x20, #0x190
     e24:	add	x0, x19, #0x180
     e28:	bl	0 <_ZNK4llvm14TargetRegistry8iteratordeEv.isra.0.part.0>
     e2c:	mov	x1, x19
     e30:	mov	x0, x24
     e34:	bl	0 <_ZN4llvm6Module13setDataLayoutERKNS_10DataLayoutE>
     e38:	mov	x0, x19
     e3c:	bl	0 <_ZN4llvm10DataLayoutD1Ev>
     e40:	ldr	x1, [x20]
     e44:	adrp	x0, 0 <_ZNK4llvm14TargetRegistry8iteratordeEv.isra.0.part.0>
     e48:	add	x0, x0, #0x0
     e4c:	ldr	x7, [x1, #80]
     e50:	cmp	x7, x0
     e54:	b.ne	ec4 <_ZL21LLVMTargetMachineEmitP23LLVMOpaqueTargetMachineP16LLVMOpaqueModuleRN4llvm17raw_pwrite_streamE19LLVMCodeGenFileTypePPc+0x1a4>  // b.any
     e58:	ldr	x2, [sp, #120]
     e5c:	mov	x4, #0x2c                  	// #44
     e60:	mov	x1, #0x0                   	// #0
     e64:	mov	x0, x21
     e68:	adrp	x3, 0 <_ZNK4llvm14TargetRegistry8iteratordeEv.isra.0.part.0>
     e6c:	add	x3, x3, #0x0
     e70:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm>
     e74:	mov	w19, #0x1                   	// #1
     e78:	ldr	x0, [sp, #112]
     e7c:	bl	0 <strdup>
     e80:	str	x0, [x26]
     e84:	ldr	x0, [sp, #112]
     e88:	add	x21, x21, #0x10
     e8c:	cmp	x0, x21
     e90:	b.eq	e98 <_ZL21LLVMTargetMachineEmitP23LLVMOpaqueTargetMachineP16LLVMOpaqueModuleRN4llvm17raw_pwrite_streamE19LLVMCodeGenFileTypePPc+0x178>  // b.none
     e94:	bl	0 <_ZdlPv>
     e98:	mov	x0, x25
     e9c:	bl	0 <_ZN4llvm6legacy11PassManagerD1Ev>
     ea0:	mov	w0, w19
     ea4:	ldp	x29, x30, [sp]
     ea8:	ldp	x19, x20, [sp, #16]
     eac:	ldp	x21, x22, [sp, #32]
     eb0:	ldp	x23, x24, [sp, #48]
     eb4:	ldp	x25, x26, [sp, #64]
     eb8:	ldr	x27, [sp, #80]
     ebc:	add	sp, sp, #0x240
     ec0:	ret
     ec4:	cmp	w27, #0x0
     ec8:	mov	x0, x20
     ecc:	cset	w4, ne  // ne = any
     ed0:	mov	x2, x23
     ed4:	mov	x1, x25
     ed8:	mov	x6, #0x0                   	// #0
     edc:	mov	w5, #0x1                   	// #1
     ee0:	mov	x3, #0x0                   	// #0
     ee4:	blr	x7
     ee8:	tst	w0, #0xff
     eec:	b.ne	e58 <_ZL21LLVMTargetMachineEmitP23LLVMOpaqueTargetMachineP16LLVMOpaqueModuleRN4llvm17raw_pwrite_streamE19LLVMCodeGenFileTypePPc+0x138>  // b.any
     ef0:	mov	x1, x24
     ef4:	mov	x0, x25
     ef8:	bl	0 <_ZN4llvm6legacy11PassManager3runERNS_6ModuleE>
     efc:	mov	w19, #0x0                   	// #0
     f00:	ldr	x0, [x23, #8]
     f04:	ldr	x1, [x23, #24]
     f08:	cmp	x1, x0
     f0c:	b.eq	e84 <_ZL21LLVMTargetMachineEmitP23LLVMOpaqueTargetMachineP16LLVMOpaqueModuleRN4llvm17raw_pwrite_streamE19LLVMCodeGenFileTypePPc+0x164>  // b.none
     f10:	mov	x0, x23
     f14:	bl	0 <_ZN4llvm11raw_ostream14flush_nonemptyEv>
     f18:	b	e84 <_ZL21LLVMTargetMachineEmitP23LLVMOpaqueTargetMachineP16LLVMOpaqueModuleRN4llvm17raw_pwrite_streamE19LLVMCodeGenFileTypePPc+0x164>
     f1c:	nop

0000000000000f20 <LLVMTargetMachineEmitToFile>:
     f20:	stp	x29, x30, [sp, #-192]!
     f24:	mov	x29, sp
     f28:	stp	x19, x20, [sp, #16]
     f2c:	mov	x19, x2
     f30:	mov	x20, x4
     f34:	stp	x21, x22, [sp, #32]
     f38:	mov	x22, x0
     f3c:	stp	x23, x24, [sp, #48]
     f40:	mov	x23, x1
     f44:	mov	w24, w3
     f48:	str	wzr, [sp, #72]
     f4c:	bl	0 <_ZNSt3_V215system_categoryEv>
     f50:	str	x0, [sp, #80]
     f54:	mov	x2, #0x0                   	// #0
     f58:	cbz	x19, f68 <LLVMTargetMachineEmitToFile+0x48>
     f5c:	mov	x0, x19
     f60:	bl	0 <strlen>
     f64:	mov	x2, x0
     f68:	add	x21, sp, #0x78
     f6c:	mov	x1, x19
     f70:	mov	x0, x21
     f74:	add	x3, sp, #0x48
     f78:	mov	w4, #0x0                   	// #0
     f7c:	bl	0 <_ZN4llvm14raw_fd_ostreamC1ENS_9StringRefERSt10error_codeNS_3sys2fs9OpenFlagsE>
     f80:	ldr	w1, [sp, #72]
     f84:	cbz	w1, fe8 <LLVMTargetMachineEmitToFile+0xc8>
     f88:	ldr	x0, [sp, #80]
     f8c:	add	x19, sp, #0x58
     f90:	mov	x8, x19
     f94:	add	x19, x19, #0x10
     f98:	ldr	x2, [x0]
     f9c:	ldr	x2, [x2, #32]
     fa0:	blr	x2
     fa4:	ldr	x0, [sp, #88]
     fa8:	bl	0 <strdup>
     fac:	str	x0, [x20]
     fb0:	ldr	x1, [sp, #88]
     fb4:	cmp	x1, x19
     fb8:	b.eq	fc4 <LLVMTargetMachineEmitToFile+0xa4>  // b.none
     fbc:	mov	x0, x1
     fc0:	bl	0 <_ZdlPv>
     fc4:	mov	w19, #0x1                   	// #1
     fc8:	mov	x0, x21
     fcc:	bl	0 <_ZN4llvm14raw_fd_ostreamD1Ev>
     fd0:	mov	w0, w19
     fd4:	ldp	x19, x20, [sp, #16]
     fd8:	ldp	x21, x22, [sp, #32]
     fdc:	ldp	x23, x24, [sp, #48]
     fe0:	ldp	x29, x30, [sp], #192
     fe4:	ret
     fe8:	mov	x1, x23
     fec:	mov	x4, x20
     ff0:	mov	w3, w24
     ff4:	mov	x0, x22
     ff8:	mov	x2, x21
     ffc:	bl	d20 <_ZL21LLVMTargetMachineEmitP23LLVMOpaqueTargetMachineP16LLVMOpaqueModuleRN4llvm17raw_pwrite_streamE19LLVMCodeGenFileTypePPc>
    1000:	cmp	w0, #0x0
    1004:	ldr	x1, [sp, #128]
    1008:	cset	w19, ne  // ne = any
    100c:	ldr	x0, [sp, #144]
    1010:	cmp	x0, x1
    1014:	b.eq	fc8 <LLVMTargetMachineEmitToFile+0xa8>  // b.none
    1018:	mov	x0, x21
    101c:	bl	0 <_ZN4llvm11raw_ostream14flush_nonemptyEv>
    1020:	mov	x0, x21
    1024:	bl	0 <_ZN4llvm14raw_fd_ostreamD1Ev>
    1028:	mov	w0, w19
    102c:	ldp	x19, x20, [sp, #16]
    1030:	ldp	x21, x22, [sp, #32]
    1034:	ldp	x23, x24, [sp, #48]
    1038:	ldp	x29, x30, [sp], #192
    103c:	ret

0000000000001040 <LLVMTargetMachineEmitToMemoryBuffer>:
    1040:	stp	x29, x30, [sp, #-144]!
    1044:	adrp	x5, 0 <_ZTVN4llvm19raw_svector_ostreamE>
    1048:	mov	x29, sp
    104c:	ldr	x5, [x5]
    1050:	add	x6, sp, #0x50
    1054:	stp	x19, x20, [sp, #16]
    1058:	mov	x20, x4
    105c:	add	x5, x5, #0x10
    1060:	mov	w4, #0x1                   	// #1
    1064:	add	x19, sp, #0x60
    1068:	stp	x21, x22, [sp, #32]
    106c:	mov	x21, x0
    1070:	mov	x22, x1
    1074:	mov	x0, x19
    1078:	mov	x1, #0x0                   	// #0
    107c:	stp	x23, x24, [sp, #48]
    1080:	mov	w23, w2
    1084:	mov	x24, x3
    1088:	mov	x2, #0x0                   	// #0
    108c:	mov	w3, #0x0                   	// #0
    1090:	str	x25, [sp, #64]
    1094:	mov	x25, x19
    1098:	stp	x19, xzr, [sp, #80]
    109c:	stp	x5, xzr, [sp, #96]
    10a0:	stp	xzr, xzr, [sp, #112]
    10a4:	str	w4, [sp, #128]
    10a8:	str	x6, [sp, #136]
    10ac:	bl	0 <_ZN4llvm11raw_ostream16SetBufferAndModeEPcmNS0_10BufferKindE>
    10b0:	mov	x4, x24
    10b4:	mov	x2, x19
    10b8:	mov	w3, w23
    10bc:	mov	x1, x22
    10c0:	mov	x0, x21
    10c4:	bl	d20 <_ZL21LLVMTargetMachineEmitP23LLVMOpaqueTargetMachineP16LLVMOpaqueModuleRN4llvm17raw_pwrite_streamE19LLVMCodeGenFileTypePPc>
    10c8:	ldr	x3, [sp, #136]
    10cc:	mov	w21, w0
    10d0:	adrp	x2, 0 <_ZNK4llvm14TargetRegistry8iteratordeEv.isra.0.part.0>
    10d4:	add	x2, x2, #0x0
    10d8:	ldr	w1, [x3, #8]
    10dc:	ldr	x0, [x3]
    10e0:	bl	0 <LLVMCreateMemoryBufferWithMemoryRangeCopy>
    10e4:	str	x0, [x20]
    10e8:	adrp	x1, 0 <_ZTVN4llvm17raw_pwrite_streamE>
    10ec:	cmp	w21, #0x0
    10f0:	mov	x0, x19
    10f4:	cset	w19, ne  // ne = any
    10f8:	ldr	x1, [x1]
    10fc:	add	x1, x1, #0x10
    1100:	str	x1, [sp, #96]
    1104:	bl	0 <_ZN4llvm11raw_ostreamD2Ev>
    1108:	ldr	x0, [sp, #80]
    110c:	cmp	x0, x25
    1110:	b.eq	1118 <LLVMTargetMachineEmitToMemoryBuffer+0xd8>  // b.none
    1114:	bl	0 <free>
    1118:	mov	w0, w19
    111c:	ldp	x19, x20, [sp, #16]
    1120:	ldp	x21, x22, [sp, #32]
    1124:	ldp	x23, x24, [sp, #48]
    1128:	ldr	x25, [sp, #64]
    112c:	ldp	x29, x30, [sp], #144
    1130:	ret

Disassembly of section .text._ZN4llvm13TargetMachine19addPassesToEmitFileERNS_6legacy15PassManagerBaseERNS_17raw_pwrite_streamEPS4_NS_15CodeGenFileTypeEbPNS_28MachineModuleInfoWrapperPassE:

0000000000000000 <_ZN4llvm13TargetMachine19addPassesToEmitFileERNS_6legacy15PassManagerBaseERNS_17raw_pwrite_streamEPS4_NS_15CodeGenFileTypeEbPNS_28MachineModuleInfoWrapperPassE>:
   0:	mov	w0, #0x1                   	// #1
   4:	ret

Disassembly of section .text._ZN4llvm15SmallVectorImplIjEaSERKS1_:

0000000000000000 <_ZN4llvm15SmallVectorImplIjEaSERKS1_>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	cmp	x0, x1
   8:	mov	x29, sp
   c:	stp	x19, x20, [sp, #16]
  10:	mov	x19, x0
  14:	b.eq	5c <_ZN4llvm15SmallVectorImplIjEaSERKS1_+0x5c>  // b.none
  18:	ldr	w2, [x0, #8]
  1c:	mov	x20, x1
  20:	stp	x21, x22, [sp, #32]
  24:	ldr	w21, [x1, #8]
  28:	mov	w22, w21
  2c:	cmp	x2, w21, uxtw
  30:	b.cc	6c <_ZN4llvm15SmallVectorImplIjEaSERKS1_+0x6c>  // b.lo, b.ul, b.last
  34:	cbz	x22, 54 <_ZN4llvm15SmallVectorImplIjEaSERKS1_+0x54>
  38:	ldr	x0, [x0]
  3c:	lsl	x2, x22, #2
  40:	ldr	x1, [x1]
  44:	bl	0 <memmove>
  48:	ldr	w0, [x19, #12]
  4c:	cmp	x22, x0
  50:	b.hi	12c <_ZN4llvm15SmallVectorImplIjEaSERKS1_+0x12c>  // b.pmore
  54:	str	w21, [x19, #8]
  58:	ldp	x21, x22, [sp, #32]
  5c:	mov	x0, x19
  60:	ldp	x19, x20, [sp, #16]
  64:	ldp	x29, x30, [sp], #64
  68:	ret
  6c:	ldr	w1, [x0, #12]
  70:	str	x23, [sp, #48]
  74:	cmp	x22, x1
  78:	b.hi	104 <_ZN4llvm15SmallVectorImplIjEaSERKS1_+0x104>  // b.pmore
  7c:	lsl	x23, x2, #2
  80:	ldr	x0, [x0]
  84:	ldr	x3, [x20]
  88:	cbnz	x2, d4 <_ZN4llvm15SmallVectorImplIjEaSERKS1_+0xd4>
  8c:	lsl	x2, x22, #2
  90:	add	x1, x3, x23
  94:	add	x3, x3, x2
  98:	cmp	x1, x3
  9c:	b.eq	b8 <_ZN4llvm15SmallVectorImplIjEaSERKS1_+0xb8>  // b.none
  a0:	sub	x2, x2, x23
  a4:	add	x0, x0, x23
  a8:	bl	0 <memcpy>
  ac:	ldr	w0, [x19, #12]
  b0:	cmp	x22, x0
  b4:	b.hi	130 <_ZN4llvm15SmallVectorImplIjEaSERKS1_+0x130>  // b.pmore
  b8:	ldr	x23, [sp, #48]
  bc:	str	w21, [x19, #8]
  c0:	mov	x0, x19
  c4:	ldp	x19, x20, [sp, #16]
  c8:	ldp	x21, x22, [sp, #32]
  cc:	ldp	x29, x30, [sp], #64
  d0:	ret
  d4:	mov	x1, x3
  d8:	mov	x2, x23
  dc:	bl	0 <memmove>
  e0:	ldr	w2, [x20, #8]
  e4:	ldr	x0, [x19]
  e8:	ldr	x1, [x20]
  ec:	lsl	x2, x2, #2
  f0:	add	x3, x1, x2
  f4:	add	x1, x1, x23
  f8:	cmp	x1, x3
  fc:	b.ne	a0 <_ZN4llvm15SmallVectorImplIjEaSERKS1_+0xa0>  // b.any
 100:	b	ac <_ZN4llvm15SmallVectorImplIjEaSERKS1_+0xac>
 104:	str	wzr, [x0, #8]
 108:	add	x1, x0, #0x10
 10c:	mov	x2, x22
 110:	mov	x3, #0x4                   	// #4
 114:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
 118:	mov	x23, #0x0                   	// #0
 11c:	ldr	w2, [x20, #8]
 120:	ldr	x0, [x19]
 124:	ldr	x1, [x20]
 128:	b	ec <_ZN4llvm15SmallVectorImplIjEaSERKS1_+0xec>
 12c:	str	x23, [sp, #48]
 130:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplIjEaSERKS1_>
 134:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplIjEaSERKS1_>
 138:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplIjEaSERKS1_>
 13c:	add	x3, x3, #0x0
 140:	add	x1, x1, #0x0
 144:	add	x0, x0, #0x0
 148:	mov	w2, #0x43                  	// #67
 14c:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm15SmallVectorImplIhEaSERKS1_:

0000000000000000 <_ZN4llvm15SmallVectorImplIhEaSERKS1_>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	cmp	x0, x1
   8:	mov	x29, sp
   c:	stp	x19, x20, [sp, #16]
  10:	mov	x19, x0
  14:	b.eq	64 <_ZN4llvm15SmallVectorImplIhEaSERKS1_+0x64>  // b.none
  18:	stp	x21, x22, [sp, #32]
  1c:	mov	x20, x1
  20:	ldr	w21, [x1, #8]
  24:	ldr	w22, [x0, #8]
  28:	str	x23, [sp, #48]
  2c:	mov	w23, w21
  30:	cmp	x22, w21, uxtw
  34:	b.cc	74 <_ZN4llvm15SmallVectorImplIhEaSERKS1_+0x74>  // b.lo, b.ul, b.last
  38:	cbz	x23, 58 <_ZN4llvm15SmallVectorImplIhEaSERKS1_+0x58>
  3c:	ldr	x0, [x0]
  40:	mov	x2, x23
  44:	ldr	x1, [x1]
  48:	bl	0 <memmove>
  4c:	ldr	w0, [x19, #12]
  50:	cmp	x23, x0
  54:	b.hi	f0 <_ZN4llvm15SmallVectorImplIhEaSERKS1_+0xf0>  // b.pmore
  58:	ldr	x23, [sp, #48]
  5c:	str	w21, [x19, #8]
  60:	ldp	x21, x22, [sp, #32]
  64:	mov	x0, x19
  68:	ldp	x19, x20, [sp, #16]
  6c:	ldp	x29, x30, [sp], #64
  70:	ret
  74:	ldr	w1, [x0, #12]
  78:	cmp	x23, x1
  7c:	b.hi	d4 <_ZN4llvm15SmallVectorImplIhEaSERKS1_+0xd4>  // b.pmore
  80:	ldr	x0, [x0]
  84:	ldr	x1, [x20]
  88:	cbz	x22, bc <_ZN4llvm15SmallVectorImplIhEaSERKS1_+0xbc>
  8c:	mov	x2, x22
  90:	bl	0 <memmove>
  94:	ldr	x0, [x20]
  98:	ldr	w2, [x20, #8]
  9c:	add	x1, x0, x22
  a0:	add	x0, x0, x2
  a4:	cmp	x1, x0
  a8:	b.eq	4c <_ZN4llvm15SmallVectorImplIhEaSERKS1_+0x4c>  // b.none
  ac:	ldr	x0, [x19]
  b0:	mov	x3, x22
  b4:	add	x0, x0, x22
  b8:	b	c8 <_ZN4llvm15SmallVectorImplIhEaSERKS1_+0xc8>
  bc:	cbz	w21, 58 <_ZN4llvm15SmallVectorImplIhEaSERKS1_+0x58>
  c0:	mov	x2, x23
  c4:	mov	x3, #0x0                   	// #0
  c8:	sub	x2, x2, x3
  cc:	bl	0 <memcpy>
  d0:	b	4c <_ZN4llvm15SmallVectorImplIhEaSERKS1_+0x4c>
  d4:	str	wzr, [x0, #8]
  d8:	mov	x2, x23
  dc:	add	x1, x0, #0x10
  e0:	mov	x3, #0x1                   	// #1
  e4:	mov	x22, #0x0                   	// #0
  e8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
  ec:	b	94 <_ZN4llvm15SmallVectorImplIhEaSERKS1_+0x94>
  f0:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplIhEaSERKS1_>
  f4:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplIhEaSERKS1_>
  f8:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplIhEaSERKS1_>
  fc:	add	x3, x3, #0x0
 100:	add	x1, x1, #0x0
 104:	add	x0, x0, #0x0
 108:	mov	w2, #0x43                  	// #67
 10c:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm15SmallVectorImplINS_15LayoutAlignElemEEaSERKS2_:

0000000000000000 <_ZN4llvm15SmallVectorImplINS_15LayoutAlignElemEEaSERKS2_>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	cmp	x0, x1
   8:	mov	x29, sp
   c:	stp	x19, x20, [sp, #16]
  10:	mov	x19, x0
  14:	b.eq	5c <_ZN4llvm15SmallVectorImplINS_15LayoutAlignElemEEaSERKS2_+0x5c>  // b.none
  18:	ldr	w2, [x0, #8]
  1c:	mov	x20, x1
  20:	stp	x21, x22, [sp, #32]
  24:	ldr	w21, [x1, #8]
  28:	mov	w22, w21
  2c:	cmp	x2, w21, uxtw
  30:	b.cc	6c <_ZN4llvm15SmallVectorImplINS_15LayoutAlignElemEEaSERKS2_+0x6c>  // b.lo, b.ul, b.last
  34:	cbz	x22, 54 <_ZN4llvm15SmallVectorImplINS_15LayoutAlignElemEEaSERKS2_+0x54>
  38:	ldr	x0, [x0]
  3c:	lsl	x2, x22, #3
  40:	ldr	x1, [x1]
  44:	bl	0 <memmove>
  48:	ldr	w0, [x19, #12]
  4c:	cmp	x22, x0
  50:	b.hi	12c <_ZN4llvm15SmallVectorImplINS_15LayoutAlignElemEEaSERKS2_+0x12c>  // b.pmore
  54:	str	w21, [x19, #8]
  58:	ldp	x21, x22, [sp, #32]
  5c:	mov	x0, x19
  60:	ldp	x19, x20, [sp, #16]
  64:	ldp	x29, x30, [sp], #64
  68:	ret
  6c:	ldr	w1, [x0, #12]
  70:	str	x23, [sp, #48]
  74:	cmp	x22, x1
  78:	b.hi	104 <_ZN4llvm15SmallVectorImplINS_15LayoutAlignElemEEaSERKS2_+0x104>  // b.pmore
  7c:	lsl	x23, x2, #3
  80:	ldr	x0, [x0]
  84:	ldr	x3, [x20]
  88:	cbnz	x2, d4 <_ZN4llvm15SmallVectorImplINS_15LayoutAlignElemEEaSERKS2_+0xd4>
  8c:	lsl	x2, x22, #3
  90:	add	x1, x3, x23
  94:	add	x3, x3, x2
  98:	cmp	x1, x3
  9c:	b.eq	b8 <_ZN4llvm15SmallVectorImplINS_15LayoutAlignElemEEaSERKS2_+0xb8>  // b.none
  a0:	sub	x2, x2, x23
  a4:	add	x0, x0, x23
  a8:	bl	0 <memcpy>
  ac:	ldr	w0, [x19, #12]
  b0:	cmp	x22, x0
  b4:	b.hi	130 <_ZN4llvm15SmallVectorImplINS_15LayoutAlignElemEEaSERKS2_+0x130>  // b.pmore
  b8:	ldr	x23, [sp, #48]
  bc:	str	w21, [x19, #8]
  c0:	mov	x0, x19
  c4:	ldp	x19, x20, [sp, #16]
  c8:	ldp	x21, x22, [sp, #32]
  cc:	ldp	x29, x30, [sp], #64
  d0:	ret
  d4:	mov	x1, x3
  d8:	mov	x2, x23
  dc:	bl	0 <memmove>
  e0:	ldr	w2, [x20, #8]
  e4:	ldr	x0, [x19]
  e8:	ldr	x1, [x20]
  ec:	lsl	x2, x2, #3
  f0:	add	x3, x1, x2
  f4:	add	x1, x1, x23
  f8:	cmp	x1, x3
  fc:	b.ne	a0 <_ZN4llvm15SmallVectorImplINS_15LayoutAlignElemEEaSERKS2_+0xa0>  // b.any
 100:	b	ac <_ZN4llvm15SmallVectorImplINS_15LayoutAlignElemEEaSERKS2_+0xac>
 104:	str	wzr, [x0, #8]
 108:	add	x1, x0, #0x10
 10c:	mov	x2, x22
 110:	mov	x3, #0x8                   	// #8
 114:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
 118:	mov	x23, #0x0                   	// #0
 11c:	ldr	w2, [x20, #8]
 120:	ldr	x0, [x19]
 124:	ldr	x1, [x20]
 128:	b	ec <_ZN4llvm15SmallVectorImplINS_15LayoutAlignElemEEaSERKS2_+0xec>
 12c:	str	x23, [sp, #48]
 130:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplINS_15LayoutAlignElemEEaSERKS2_>
 134:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplINS_15LayoutAlignElemEEaSERKS2_>
 138:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplINS_15LayoutAlignElemEEaSERKS2_>
 13c:	add	x3, x3, #0x0
 140:	add	x1, x1, #0x0
 144:	add	x0, x0, #0x0
 148:	mov	w2, #0x43                  	// #67
 14c:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm15SmallVectorImplINS_16PointerAlignElemEEaSERKS2_:

0000000000000000 <_ZN4llvm15SmallVectorImplINS_16PointerAlignElemEEaSERKS2_>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	cmp	x0, x1
   8:	mov	x29, sp
   c:	stp	x19, x20, [sp, #16]
  10:	mov	x19, x0
  14:	b.eq	5c <_ZN4llvm15SmallVectorImplINS_16PointerAlignElemEEaSERKS2_+0x5c>  // b.none
  18:	ldr	w2, [x0, #8]
  1c:	mov	x20, x1
  20:	stp	x21, x22, [sp, #32]
  24:	ldr	w21, [x1, #8]
  28:	mov	w22, w21
  2c:	cmp	x2, w21, uxtw
  30:	b.cc	6c <_ZN4llvm15SmallVectorImplINS_16PointerAlignElemEEaSERKS2_+0x6c>  // b.lo, b.ul, b.last
  34:	cbz	x22, 54 <_ZN4llvm15SmallVectorImplINS_16PointerAlignElemEEaSERKS2_+0x54>
  38:	ldr	x0, [x0]
  3c:	lsl	x2, x22, #4
  40:	ldr	x1, [x1]
  44:	bl	0 <memmove>
  48:	ldr	w0, [x19, #12]
  4c:	cmp	x22, x0
  50:	b.hi	12c <_ZN4llvm15SmallVectorImplINS_16PointerAlignElemEEaSERKS2_+0x12c>  // b.pmore
  54:	str	w21, [x19, #8]
  58:	ldp	x21, x22, [sp, #32]
  5c:	mov	x0, x19
  60:	ldp	x19, x20, [sp, #16]
  64:	ldp	x29, x30, [sp], #64
  68:	ret
  6c:	ldr	w1, [x0, #12]
  70:	str	x23, [sp, #48]
  74:	cmp	x22, x1
  78:	b.hi	104 <_ZN4llvm15SmallVectorImplINS_16PointerAlignElemEEaSERKS2_+0x104>  // b.pmore
  7c:	lsl	x23, x2, #4
  80:	ldr	x0, [x0]
  84:	ldr	x3, [x20]
  88:	cbnz	x2, d4 <_ZN4llvm15SmallVectorImplINS_16PointerAlignElemEEaSERKS2_+0xd4>
  8c:	lsl	x2, x22, #4
  90:	add	x1, x3, x23
  94:	add	x3, x3, x2
  98:	cmp	x1, x3
  9c:	b.eq	b8 <_ZN4llvm15SmallVectorImplINS_16PointerAlignElemEEaSERKS2_+0xb8>  // b.none
  a0:	sub	x2, x2, x23
  a4:	add	x0, x0, x23
  a8:	bl	0 <memcpy>
  ac:	ldr	w0, [x19, #12]
  b0:	cmp	x22, x0
  b4:	b.hi	130 <_ZN4llvm15SmallVectorImplINS_16PointerAlignElemEEaSERKS2_+0x130>  // b.pmore
  b8:	ldr	x23, [sp, #48]
  bc:	str	w21, [x19, #8]
  c0:	mov	x0, x19
  c4:	ldp	x19, x20, [sp, #16]
  c8:	ldp	x21, x22, [sp, #32]
  cc:	ldp	x29, x30, [sp], #64
  d0:	ret
  d4:	mov	x1, x3
  d8:	mov	x2, x23
  dc:	bl	0 <memmove>
  e0:	ldr	w2, [x20, #8]
  e4:	ldr	x0, [x19]
  e8:	ldr	x1, [x20]
  ec:	lsl	x2, x2, #4
  f0:	add	x3, x1, x2
  f4:	add	x1, x1, x23
  f8:	cmp	x1, x3
  fc:	b.ne	a0 <_ZN4llvm15SmallVectorImplINS_16PointerAlignElemEEaSERKS2_+0xa0>  // b.any
 100:	b	ac <_ZN4llvm15SmallVectorImplINS_16PointerAlignElemEEaSERKS2_+0xac>
 104:	str	wzr, [x0, #8]
 108:	mov	x2, x22
 10c:	mov	x3, #0x10                  	// #16
 110:	add	x1, x0, x3
 114:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
 118:	mov	x23, #0x0                   	// #0
 11c:	ldr	w2, [x20, #8]
 120:	ldr	x0, [x19]
 124:	ldr	x1, [x20]
 128:	b	ec <_ZN4llvm15SmallVectorImplINS_16PointerAlignElemEEaSERKS2_+0xec>
 12c:	str	x23, [sp, #48]
 130:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplINS_16PointerAlignElemEEaSERKS2_>
 134:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplINS_16PointerAlignElemEEaSERKS2_>
 138:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplINS_16PointerAlignElemEEaSERKS2_>
 13c:	add	x3, x3, #0x0
 140:	add	x1, x1, #0x0
 144:	add	x0, x0, #0x0
 148:	mov	w2, #0x43                  	// #67
 14c:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm17StringMapIterBaseINS_17StringMapIteratorIbEENS_14StringMapEntryIbEEEC2EPPNS_18StringMapEntryBaseEb:

0000000000000000 <_ZN4llvm17StringMapIterBaseINS_17StringMapIteratorIbEENS_14StringMapEntryIbEEEC1EPPNS_18StringMapEntryBaseEb>:
   0:	str	x1, [x0]
   4:	tst	w2, #0xff
   8:	b.ne	38 <_ZN4llvm17StringMapIterBaseINS_17StringMapIteratorIbEENS_14StringMapEntryIbEEEC1EPPNS_18StringMapEntryBaseEb+0x38>  // b.any
   c:	ldr	x2, [x1]
  10:	cmp	x2, #0x0
  14:	ccmn	x2, #0x8, #0x4, ne  // ne = any
  18:	b.ne	38 <_ZN4llvm17StringMapIterBaseINS_17StringMapIteratorIbEENS_14StringMapEntryIbEEEC1EPPNS_18StringMapEntryBaseEb+0x38>  // b.any
  1c:	add	x1, x1, #0x8
  20:	mov	x3, x1
  24:	ldr	x2, [x1], #8
  28:	cmp	x2, #0x0
  2c:	ccmn	x2, #0x8, #0x4, ne  // ne = any
  30:	b.eq	20 <_ZN4llvm17StringMapIterBaseINS_17StringMapIteratorIbEENS_14StringMapEntryIbEEEC1EPPNS_18StringMapEntryBaseEb+0x20>  // b.none
  34:	str	x3, [x0]
  38:	ret
