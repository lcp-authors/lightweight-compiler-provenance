
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//sort_gcc_-O3:     file format elf64-littleaarch64


Disassembly of section .init:

00000000004026d8 <.init>:
  4026d8:	stp	x29, x30, [sp, #-16]!
  4026dc:	mov	x29, sp
  4026e0:	bl	4052bc <ferror@plt+0x247c>
  4026e4:	ldp	x29, x30, [sp], #16
  4026e8:	ret

Disassembly of section .plt:

00000000004026f0 <mbrtowc@plt-0x20>:
  4026f0:	stp	x16, x30, [sp, #-16]!
  4026f4:	adrp	x16, 42c000 <_obstack_memory_used@@Base+0x166c8>
  4026f8:	ldr	x17, [x16, #4088]
  4026fc:	add	x16, x16, #0xff8
  402700:	br	x17
  402704:	nop
  402708:	nop
  40270c:	nop

0000000000402710 <mbrtowc@plt>:
  402710:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402714:	ldr	x17, [x16]
  402718:	add	x16, x16, #0x0
  40271c:	br	x17

0000000000402720 <memcpy@plt>:
  402720:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402724:	ldr	x17, [x16, #8]
  402728:	add	x16, x16, #0x8
  40272c:	br	x17

0000000000402730 <memmove@plt>:
  402730:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402734:	ldr	x17, [x16, #16]
  402738:	add	x16, x16, #0x10
  40273c:	br	x17

0000000000402740 <pthread_sigmask@plt>:
  402740:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402744:	ldr	x17, [x16, #24]
  402748:	add	x16, x16, #0x18
  40274c:	br	x17

0000000000402750 <_exit@plt>:
  402750:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402754:	ldr	x17, [x16, #32]
  402758:	add	x16, x16, #0x20
  40275c:	br	x17

0000000000402760 <fwrite_unlocked@plt>:
  402760:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402764:	ldr	x17, [x16, #40]
  402768:	add	x16, x16, #0x28
  40276c:	br	x17

0000000000402770 <strtoul@plt>:
  402770:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402774:	ldr	x17, [x16, #48]
  402778:	add	x16, x16, #0x30
  40277c:	br	x17

0000000000402780 <strlen@plt>:
  402780:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402784:	ldr	x17, [x16, #56]
  402788:	add	x16, x16, #0x38
  40278c:	br	x17

0000000000402790 <exit@plt>:
  402790:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402794:	ldr	x17, [x16, #64]
  402798:	add	x16, x16, #0x40
  40279c:	br	x17

00000000004027a0 <raise@plt>:
  4027a0:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  4027a4:	ldr	x17, [x16, #72]
  4027a8:	add	x16, x16, #0x48
  4027ac:	br	x17

00000000004027b0 <error@plt>:
  4027b0:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  4027b4:	ldr	x17, [x16, #80]
  4027b8:	add	x16, x16, #0x50
  4027bc:	br	x17

00000000004027c0 <sysinfo@plt>:
  4027c0:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  4027c4:	ldr	x17, [x16, #88]
  4027c8:	add	x16, x16, #0x58
  4027cc:	br	x17

00000000004027d0 <getuid@plt>:
  4027d0:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  4027d4:	ldr	x17, [x16, #96]
  4027d8:	add	x16, x16, #0x60
  4027dc:	br	x17

00000000004027e0 <pipe@plt>:
  4027e0:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  4027e4:	ldr	x17, [x16, #104]
  4027e8:	add	x16, x16, #0x68
  4027ec:	br	x17

00000000004027f0 <__cxa_atexit@plt>:
  4027f0:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  4027f4:	ldr	x17, [x16, #112]
  4027f8:	add	x16, x16, #0x70
  4027fc:	br	x17

0000000000402800 <iswcntrl@plt>:
  402800:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402804:	ldr	x17, [x16, #120]
  402808:	add	x16, x16, #0x78
  40280c:	br	x17

0000000000402810 <qsort@plt>:
  402810:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402814:	ldr	x17, [x16, #128]
  402818:	add	x16, x16, #0x80
  40281c:	br	x17

0000000000402820 <setvbuf@plt>:
  402820:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402824:	ldr	x17, [x16, #136]
  402828:	add	x16, x16, #0x88
  40282c:	br	x17

0000000000402830 <euidaccess@plt>:
  402830:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402834:	ldr	x17, [x16, #144]
  402838:	add	x16, x16, #0x90
  40283c:	br	x17

0000000000402840 <fork@plt>:
  402840:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402844:	ldr	x17, [x16, #152]
  402848:	add	x16, x16, #0x98
  40284c:	br	x17

0000000000402850 <lseek@plt>:
  402850:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402854:	ldr	x17, [x16, #160]
  402858:	add	x16, x16, #0xa0
  40285c:	br	x17

0000000000402860 <__fpending@plt>:
  402860:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402864:	ldr	x17, [x16, #168]
  402868:	add	x16, x16, #0xa8
  40286c:	br	x17

0000000000402870 <localeconv@plt>:
  402870:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402874:	ldr	x17, [x16, #176]
  402878:	add	x16, x16, #0xb0
  40287c:	br	x17

0000000000402880 <fileno@plt>:
  402880:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402884:	ldr	x17, [x16, #184]
  402888:	add	x16, x16, #0xb8
  40288c:	br	x17

0000000000402890 <signal@plt>:
  402890:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402894:	ldr	x17, [x16, #192]
  402898:	add	x16, x16, #0xc0
  40289c:	br	x17

00000000004028a0 <fclose@plt>:
  4028a0:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  4028a4:	ldr	x17, [x16, #200]
  4028a8:	add	x16, x16, #0xc8
  4028ac:	br	x17

00000000004028b0 <getpid@plt>:
  4028b0:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  4028b4:	ldr	x17, [x16, #208]
  4028b8:	add	x16, x16, #0xd0
  4028bc:	br	x17

00000000004028c0 <nl_langinfo@plt>:
  4028c0:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  4028c4:	ldr	x17, [x16, #216]
  4028c8:	add	x16, x16, #0xd8
  4028cc:	br	x17

00000000004028d0 <fopen@plt>:
  4028d0:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  4028d4:	ldr	x17, [x16, #224]
  4028d8:	add	x16, x16, #0xe0
  4028dc:	br	x17

00000000004028e0 <malloc@plt>:
  4028e0:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  4028e4:	ldr	x17, [x16, #232]
  4028e8:	add	x16, x16, #0xe8
  4028ec:	br	x17

00000000004028f0 <wcwidth@plt>:
  4028f0:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  4028f4:	ldr	x17, [x16, #240]
  4028f8:	add	x16, x16, #0xf0
  4028fc:	br	x17

0000000000402900 <open@plt>:
  402900:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402904:	ldr	x17, [x16, #248]
  402908:	add	x16, x16, #0xf8
  40290c:	br	x17

0000000000402910 <getppid@plt>:
  402910:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402914:	ldr	x17, [x16, #256]
  402918:	add	x16, x16, #0x100
  40291c:	br	x17

0000000000402920 <sigemptyset@plt>:
  402920:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402924:	ldr	x17, [x16, #264]
  402928:	add	x16, x16, #0x108
  40292c:	br	x17

0000000000402930 <pthread_cond_signal@plt>:
  402930:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402934:	ldr	x17, [x16, #272]
  402938:	add	x16, x16, #0x110
  40293c:	br	x17

0000000000402940 <strncmp@plt>:
  402940:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402944:	ldr	x17, [x16, #280]
  402948:	add	x16, x16, #0x118
  40294c:	br	x17

0000000000402950 <bindtextdomain@plt>:
  402950:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402954:	ldr	x17, [x16, #288]
  402958:	add	x16, x16, #0x120
  40295c:	br	x17

0000000000402960 <__libc_start_main@plt>:
  402960:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402964:	ldr	x17, [x16, #296]
  402968:	add	x16, x16, #0x128
  40296c:	br	x17

0000000000402970 <fgetc@plt>:
  402970:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402974:	ldr	x17, [x16, #304]
  402978:	add	x16, x16, #0x130
  40297c:	br	x17

0000000000402980 <__printf_chk@plt>:
  402980:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402984:	ldr	x17, [x16, #312]
  402988:	add	x16, x16, #0x138
  40298c:	br	x17

0000000000402990 <memset@plt>:
  402990:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402994:	ldr	x17, [x16, #320]
  402998:	add	x16, x16, #0x140
  40299c:	br	x17

00000000004029a0 <fdopen@plt>:
  4029a0:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  4029a4:	ldr	x17, [x16, #328]
  4029a8:	add	x16, x16, #0x148
  4029ac:	br	x17

00000000004029b0 <gettimeofday@plt>:
  4029b0:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  4029b4:	ldr	x17, [x16, #336]
  4029b8:	add	x16, x16, #0x150
  4029bc:	br	x17

00000000004029c0 <__strtoul_internal@plt>:
  4029c0:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  4029c4:	ldr	x17, [x16, #344]
  4029c8:	add	x16, x16, #0x158
  4029cc:	br	x17

00000000004029d0 <calloc@plt>:
  4029d0:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  4029d4:	ldr	x17, [x16, #352]
  4029d8:	add	x16, x16, #0x160
  4029dc:	br	x17

00000000004029e0 <realloc@plt>:
  4029e0:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  4029e4:	ldr	x17, [x16, #360]
  4029e8:	add	x16, x16, #0x168
  4029ec:	br	x17

00000000004029f0 <__ctype_toupper_loc@plt>:
  4029f0:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  4029f4:	ldr	x17, [x16, #368]
  4029f8:	add	x16, x16, #0x170
  4029fc:	br	x17

0000000000402a00 <pthread_mutex_init@plt>:
  402a00:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402a04:	ldr	x17, [x16, #376]
  402a08:	add	x16, x16, #0x178
  402a0c:	br	x17

0000000000402a10 <close@plt>:
  402a10:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402a14:	ldr	x17, [x16, #384]
  402a18:	add	x16, x16, #0x180
  402a1c:	br	x17

0000000000402a20 <sigaction@plt>:
  402a20:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402a24:	ldr	x17, [x16, #392]
  402a28:	add	x16, x16, #0x188
  402a2c:	br	x17

0000000000402a30 <strrchr@plt>:
  402a30:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402a34:	ldr	x17, [x16, #400]
  402a38:	add	x16, x16, #0x190
  402a3c:	br	x17

0000000000402a40 <pthread_create@plt>:
  402a40:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402a44:	ldr	x17, [x16, #408]
  402a48:	add	x16, x16, #0x198
  402a4c:	br	x17

0000000000402a50 <__gmon_start__@plt>:
  402a50:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402a54:	ldr	x17, [x16, #416]
  402a58:	add	x16, x16, #0x1a0
  402a5c:	br	x17

0000000000402a60 <write@plt>:
  402a60:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402a64:	ldr	x17, [x16, #424]
  402a68:	add	x16, x16, #0x1a8
  402a6c:	br	x17

0000000000402a70 <pthread_join@plt>:
  402a70:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402a74:	ldr	x17, [x16, #432]
  402a78:	add	x16, x16, #0x1b0
  402a7c:	br	x17

0000000000402a80 <abort@plt>:
  402a80:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402a84:	ldr	x17, [x16, #440]
  402a88:	add	x16, x16, #0x1b8
  402a8c:	br	x17

0000000000402a90 <mkostemp@plt>:
  402a90:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402a94:	ldr	x17, [x16, #448]
  402a98:	add	x16, x16, #0x1c0
  402a9c:	br	x17

0000000000402aa0 <sched_getaffinity@plt>:
  402aa0:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402aa4:	ldr	x17, [x16, #456]
  402aa8:	add	x16, x16, #0x1c8
  402aac:	br	x17

0000000000402ab0 <posix_fadvise@plt>:
  402ab0:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402ab4:	ldr	x17, [x16, #464]
  402ab8:	add	x16, x16, #0x1d0
  402abc:	br	x17

0000000000402ac0 <mbsinit@plt>:
  402ac0:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402ac4:	ldr	x17, [x16, #472]
  402ac8:	add	x16, x16, #0x1d8
  402acc:	br	x17

0000000000402ad0 <__overflow@plt>:
  402ad0:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402ad4:	ldr	x17, [x16, #480]
  402ad8:	add	x16, x16, #0x1e0
  402adc:	br	x17

0000000000402ae0 <pipe2@plt>:
  402ae0:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402ae4:	ldr	x17, [x16, #488]
  402ae8:	add	x16, x16, #0x1e8
  402aec:	br	x17

0000000000402af0 <fread_unlocked@plt>:
  402af0:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402af4:	ldr	x17, [x16, #496]
  402af8:	add	x16, x16, #0x1f0
  402afc:	br	x17

0000000000402b00 <memcmp@plt>:
  402b00:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402b04:	ldr	x17, [x16, #504]
  402b08:	add	x16, x16, #0x1f8
  402b0c:	br	x17

0000000000402b10 <textdomain@plt>:
  402b10:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402b14:	ldr	x17, [x16, #512]
  402b18:	add	x16, x16, #0x200
  402b1c:	br	x17

0000000000402b20 <getopt_long@plt>:
  402b20:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402b24:	ldr	x17, [x16, #520]
  402b28:	add	x16, x16, #0x208
  402b2c:	br	x17

0000000000402b30 <__fprintf_chk@plt>:
  402b30:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402b34:	ldr	x17, [x16, #528]
  402b38:	add	x16, x16, #0x210
  402b3c:	br	x17

0000000000402b40 <sigismember@plt>:
  402b40:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402b44:	ldr	x17, [x16, #536]
  402b48:	add	x16, x16, #0x218
  402b4c:	br	x17

0000000000402b50 <strcmp@plt>:
  402b50:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402b54:	ldr	x17, [x16, #544]
  402b58:	add	x16, x16, #0x220
  402b5c:	br	x17

0000000000402b60 <__ctype_b_loc@plt>:
  402b60:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402b64:	ldr	x17, [x16, #552]
  402b68:	add	x16, x16, #0x228
  402b6c:	br	x17

0000000000402b70 <strtol@plt>:
  402b70:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402b74:	ldr	x17, [x16, #560]
  402b78:	add	x16, x16, #0x230
  402b7c:	br	x17

0000000000402b80 <fseeko@plt>:
  402b80:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402b84:	ldr	x17, [x16, #568]
  402b88:	add	x16, x16, #0x238
  402b8c:	br	x17

0000000000402b90 <strtold@plt>:
  402b90:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402b94:	ldr	x17, [x16, #576]
  402b98:	add	x16, x16, #0x240
  402b9c:	br	x17

0000000000402ba0 <free@plt>:
  402ba0:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402ba4:	ldr	x17, [x16, #584]
  402ba8:	add	x16, x16, #0x248
  402bac:	br	x17

0000000000402bb0 <__ctype_get_mb_cur_max@plt>:
  402bb0:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402bb4:	ldr	x17, [x16, #592]
  402bb8:	add	x16, x16, #0x250
  402bbc:	br	x17

0000000000402bc0 <getgid@plt>:
  402bc0:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402bc4:	ldr	x17, [x16, #600]
  402bc8:	add	x16, x16, #0x258
  402bcc:	br	x17

0000000000402bd0 <pthread_cond_wait@plt>:
  402bd0:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402bd4:	ldr	x17, [x16, #608]
  402bd8:	add	x16, x16, #0x260
  402bdc:	br	x17

0000000000402be0 <nanosleep@plt>:
  402be0:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402be4:	ldr	x17, [x16, #616]
  402be8:	add	x16, x16, #0x268
  402bec:	br	x17

0000000000402bf0 <__stpcpy_chk@plt>:
  402bf0:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402bf4:	ldr	x17, [x16, #624]
  402bf8:	add	x16, x16, #0x270
  402bfc:	br	x17

0000000000402c00 <strchr@plt>:
  402c00:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402c04:	ldr	x17, [x16, #632]
  402c08:	add	x16, x16, #0x278
  402c0c:	br	x17

0000000000402c10 <fwrite@plt>:
  402c10:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402c14:	ldr	x17, [x16, #640]
  402c18:	add	x16, x16, #0x280
  402c1c:	br	x17

0000000000402c20 <__read_chk@plt>:
  402c20:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402c24:	ldr	x17, [x16, #648]
  402c28:	add	x16, x16, #0x288
  402c2c:	br	x17

0000000000402c30 <fflush_unlocked@plt>:
  402c30:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402c34:	ldr	x17, [x16, #656]
  402c38:	add	x16, x16, #0x290
  402c3c:	br	x17

0000000000402c40 <__sched_cpucount@plt>:
  402c40:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402c44:	ldr	x17, [x16, #664]
  402c48:	add	x16, x16, #0x298
  402c4c:	br	x17

0000000000402c50 <fcntl@plt>:
  402c50:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402c54:	ldr	x17, [x16, #672]
  402c58:	add	x16, x16, #0x2a0
  402c5c:	br	x17

0000000000402c60 <strxfrm@plt>:
  402c60:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402c64:	ldr	x17, [x16, #680]
  402c68:	add	x16, x16, #0x2a8
  402c6c:	br	x17

0000000000402c70 <dcngettext@plt>:
  402c70:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402c74:	ldr	x17, [x16, #688]
  402c78:	add	x16, x16, #0x2b0
  402c7c:	br	x17

0000000000402c80 <fflush@plt>:
  402c80:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402c84:	ldr	x17, [x16, #696]
  402c88:	add	x16, x16, #0x2b8
  402c8c:	br	x17

0000000000402c90 <strcpy@plt>:
  402c90:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402c94:	ldr	x17, [x16, #704]
  402c98:	add	x16, x16, #0x2c0
  402c9c:	br	x17

0000000000402ca0 <pthread_cond_init@plt>:
  402ca0:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402ca4:	ldr	x17, [x16, #712]
  402ca8:	add	x16, x16, #0x2c8
  402cac:	br	x17

0000000000402cb0 <getrlimit@plt>:
  402cb0:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402cb4:	ldr	x17, [x16, #720]
  402cb8:	add	x16, x16, #0x2d0
  402cbc:	br	x17

0000000000402cc0 <clearerr_unlocked@plt>:
  402cc0:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402cc4:	ldr	x17, [x16, #728]
  402cc8:	add	x16, x16, #0x2d8
  402ccc:	br	x17

0000000000402cd0 <__explicit_bzero_chk@plt>:
  402cd0:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402cd4:	ldr	x17, [x16, #736]
  402cd8:	add	x16, x16, #0x2e0
  402cdc:	br	x17

0000000000402ce0 <memchr@plt>:
  402ce0:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402ce4:	ldr	x17, [x16, #744]
  402ce8:	add	x16, x16, #0x2e8
  402cec:	br	x17

0000000000402cf0 <mkstemp@plt>:
  402cf0:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402cf4:	ldr	x17, [x16, #752]
  402cf8:	add	x16, x16, #0x2f0
  402cfc:	br	x17

0000000000402d00 <sysconf@plt>:
  402d00:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402d04:	ldr	x17, [x16, #760]
  402d08:	add	x16, x16, #0x2f8
  402d0c:	br	x17

0000000000402d10 <__fxstat@plt>:
  402d10:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402d14:	ldr	x17, [x16, #768]
  402d18:	add	x16, x16, #0x300
  402d1c:	br	x17

0000000000402d20 <dcgettext@plt>:
  402d20:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402d24:	ldr	x17, [x16, #776]
  402d28:	add	x16, x16, #0x308
  402d2c:	br	x17

0000000000402d30 <fputs_unlocked@plt>:
  402d30:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402d34:	ldr	x17, [x16, #784]
  402d38:	add	x16, x16, #0x310
  402d3c:	br	x17

0000000000402d40 <strcoll@plt>:
  402d40:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402d44:	ldr	x17, [x16, #792]
  402d48:	add	x16, x16, #0x318
  402d4c:	br	x17

0000000000402d50 <__freading@plt>:
  402d50:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402d54:	ldr	x17, [x16, #800]
  402d58:	add	x16, x16, #0x320
  402d5c:	br	x17

0000000000402d60 <ftruncate@plt>:
  402d60:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402d64:	ldr	x17, [x16, #808]
  402d68:	add	x16, x16, #0x328
  402d6c:	br	x17

0000000000402d70 <dup2@plt>:
  402d70:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402d74:	ldr	x17, [x16, #816]
  402d78:	add	x16, x16, #0x330
  402d7c:	br	x17

0000000000402d80 <sigaddset@plt>:
  402d80:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402d84:	ldr	x17, [x16, #824]
  402d88:	add	x16, x16, #0x338
  402d8c:	br	x17

0000000000402d90 <iswprint@plt>:
  402d90:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402d94:	ldr	x17, [x16, #832]
  402d98:	add	x16, x16, #0x340
  402d9c:	br	x17

0000000000402da0 <__assert_fail@plt>:
  402da0:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402da4:	ldr	x17, [x16, #840]
  402da8:	add	x16, x16, #0x348
  402dac:	br	x17

0000000000402db0 <__errno_location@plt>:
  402db0:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402db4:	ldr	x17, [x16, #848]
  402db8:	add	x16, x16, #0x350
  402dbc:	br	x17

0000000000402dc0 <execlp@plt>:
  402dc0:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402dc4:	ldr	x17, [x16, #856]
  402dc8:	add	x16, x16, #0x358
  402dcc:	br	x17

0000000000402dd0 <getenv@plt>:
  402dd0:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402dd4:	ldr	x17, [x16, #864]
  402dd8:	add	x16, x16, #0x360
  402ddc:	br	x17

0000000000402de0 <__xstat@plt>:
  402de0:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402de4:	ldr	x17, [x16, #872]
  402de8:	add	x16, x16, #0x368
  402dec:	br	x17

0000000000402df0 <pthread_mutex_lock@plt>:
  402df0:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402df4:	ldr	x17, [x16, #880]
  402df8:	add	x16, x16, #0x370
  402dfc:	br	x17

0000000000402e00 <pthread_mutex_unlock@plt>:
  402e00:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402e04:	ldr	x17, [x16, #888]
  402e08:	add	x16, x16, #0x378
  402e0c:	br	x17

0000000000402e10 <waitpid@plt>:
  402e10:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402e14:	ldr	x17, [x16, #896]
  402e18:	add	x16, x16, #0x380
  402e1c:	br	x17

0000000000402e20 <unlink@plt>:
  402e20:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402e24:	ldr	x17, [x16, #904]
  402e28:	add	x16, x16, #0x388
  402e2c:	br	x17

0000000000402e30 <setlocale@plt>:
  402e30:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402e34:	ldr	x17, [x16, #912]
  402e38:	add	x16, x16, #0x390
  402e3c:	br	x17

0000000000402e40 <ferror@plt>:
  402e40:	adrp	x16, 42d000 <mbrtowc@GLIBC_2.17>
  402e44:	ldr	x17, [x16, #920]
  402e48:	add	x16, x16, #0x398
  402e4c:	br	x17

Disassembly of section .text:

0000000000402e50 <_obstack_begin@@Base-0x126d8>:
  402e50:	sub	sp, sp, #0x3b0
  402e54:	stp	x29, x30, [sp]
  402e58:	mov	x29, sp
  402e5c:	stp	x19, x20, [sp, #16]
  402e60:	adrp	x19, 416000 <_obstack_memory_used@@Base+0x6c8>
  402e64:	add	x19, x19, #0x2f0
  402e68:	stp	x21, x22, [sp, #32]
  402e6c:	mov	x22, x1
  402e70:	mov	w21, w0
  402e74:	adrp	x0, 417000 <_obstack_memory_used@@Base+0x16c8>
  402e78:	add	x0, x0, #0x728
  402e7c:	stp	x23, x24, [sp, #48]
  402e80:	mov	w20, #0x2                   	// #2
  402e84:	stp	x25, x26, [sp, #64]
  402e88:	stp	x27, x28, [sp, #80]
  402e8c:	str	d8, [sp, #96]
  402e90:	bl	402dd0 <getenv@plt>
  402e94:	cmp	x0, #0x0
  402e98:	str	x0, [sp, #184]
  402e9c:	cset	w23, ne  // ne = any
  402ea0:	bl	40efc8 <ferror@plt+0xc188>
  402ea4:	sub	w1, w0, #0x30, lsl #12
  402ea8:	sub	w1, w1, #0xdb0
  402eac:	cmp	w1, #0x2b8
  402eb0:	ldr	x0, [x22]
  402eb4:	cset	w1, hi  // hi = pmore
  402eb8:	str	w1, [sp, #120]
  402ebc:	bl	40f060 <ferror@plt+0xc220>
  402ec0:	adrp	x0, 416000 <_obstack_memory_used@@Base+0x6c8>
  402ec4:	add	x0, x0, #0xc10
  402ec8:	mov	x1, x0
  402ecc:	str	x0, [sp, #168]
  402ed0:	mov	w0, #0x6                   	// #6
  402ed4:	bl	402e30 <setlocale@plt>
  402ed8:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x16c8>
  402edc:	add	x1, x1, #0x738
  402ee0:	str	x0, [sp, #176]
  402ee4:	mov	x0, x19
  402ee8:	bl	402950 <bindtextdomain@plt>
  402eec:	mov	x0, x19
  402ef0:	bl	402b10 <textdomain@plt>
  402ef4:	adrp	x1, 42d000 <_obstack_memory_used@@Base+0x176c8>
  402ef8:	mov	w0, #0x3                   	// #3
  402efc:	adrp	x19, 42d000 <_obstack_memory_used@@Base+0x176c8>
  402f00:	add	x19, x19, #0x570
  402f04:	str	w20, [x1, #1224]
  402f08:	bl	40d070 <ferror@plt+0xa230>
  402f0c:	mov	w1, w0
  402f10:	mov	w0, w20
  402f14:	strb	w1, [x19, #1200]
  402f18:	bl	40d070 <ferror@plt+0xa230>
  402f1c:	and	w20, w0, #0xff
  402f20:	strb	w0, [x19, #1584]
  402f24:	bl	402870 <localeconv@plt>
  402f28:	ldr	x2, [x0]
  402f2c:	ldrb	w1, [x2]
  402f30:	str	w1, [x19, #1244]
  402f34:	cbz	w1, 4032d0 <ferror@plt+0x490>
  402f38:	ldrb	w1, [x2, #1]
  402f3c:	cbnz	w1, 4032d0 <ferror@plt+0x490>
  402f40:	ldr	x1, [x0, #8]
  402f44:	ldrb	w0, [x1]
  402f48:	str	w0, [x19, #1240]
  402f4c:	cbz	w0, 4032c4 <ferror@plt+0x484>
  402f50:	ldrb	w0, [x1, #1]
  402f54:	cbnz	w0, 4032c4 <ferror@plt+0x484>
  402f58:	strb	wzr, [x19, #1250]
  402f5c:	bl	402b60 <__ctype_b_loc@plt>
  402f60:	mov	x25, x0
  402f64:	bl	4029f0 <__ctype_toupper_loc@plt>
  402f68:	add	x6, x19, #0x320
  402f6c:	add	x5, x19, #0x100
  402f70:	add	x8, x19, #0x200
  402f74:	mov	x1, #0x0                   	// #0
  402f78:	mov	w7, #0x1                   	// #1
  402f7c:	b	402fbc <ferror@plt+0x17c>
  402f80:	cmp	x1, #0xa
  402f84:	b.eq	4032dc <ferror@plt+0x49c>  // b.none
  402f88:	eor	x3, x2, #0x4000
  402f8c:	eor	x2, x2, #0x8
  402f90:	strb	wzr, [x1, x6]
  402f94:	ubfx	w4, w2, #3, #1
  402f98:	ubfx	x3, x3, #14, #1
  402f9c:	ldr	x2, [x0]
  402fa0:	strb	w3, [x1, x5]
  402fa4:	strb	w4, [x19, x1]
  402fa8:	ldr	w2, [x2, x1, lsl #2]
  402fac:	strb	w2, [x1, x8]
  402fb0:	add	x1, x1, #0x1
  402fb4:	cmp	x1, #0x100
  402fb8:	b.eq	402ff8 <ferror@plt+0x1b8>  // b.none
  402fbc:	ldr	x3, [x25]
  402fc0:	ldrh	w2, [x3, x1, lsl #1]
  402fc4:	tbz	w2, #0, 402f80 <ferror@plt+0x140>
  402fc8:	eor	x2, x2, #0x4000
  402fcc:	mov	w4, #0x0                   	// #0
  402fd0:	strb	w7, [x1, x6]
  402fd4:	ubfx	x2, x2, #14, #1
  402fd8:	strb	w2, [x1, x5]
  402fdc:	ldr	x2, [x0]
  402fe0:	strb	w4, [x19, x1]
  402fe4:	ldr	w2, [x2, x1, lsl #2]
  402fe8:	strb	w2, [x1, x8]
  402fec:	add	x1, x1, #0x1
  402ff0:	cmp	x1, #0x100
  402ff4:	b.ne	402fbc <ferror@plt+0x17c>  // b.any
  402ff8:	cbz	w20, 4030bc <ferror@plt+0x27c>
  402ffc:	adrp	x0, 42d000 <_obstack_memory_used@@Base+0x176c8>
  403000:	add	x0, x0, #0x3b0
  403004:	add	x24, x0, #0x20
  403008:	add	x27, x19, #0x200
  40300c:	mov	x28, #0x1                   	// #1
  403010:	str	x0, [sp, #160]
  403014:	nop
  403018:	add	w0, w28, #0x20, lsl #12
  40301c:	add	w0, w0, #0xd
  403020:	bl	4028c0 <nl_langinfo@plt>
  403024:	mov	x20, x0
  403028:	bl	402780 <strlen@plt>
  40302c:	mov	x26, x0
  403030:	add	x0, x0, #0x1
  403034:	bl	414158 <ferror@plt+0x11318>
  403038:	str	x0, [x24]
  40303c:	str	w28, [x24, #8]
  403040:	cbz	x26, 403b14 <ferror@plt+0xcd4>
  403044:	ldr	x9, [x25]
  403048:	mov	x1, x0
  40304c:	add	x4, x20, x26
  403050:	mov	x5, #0x0                   	// #0
  403054:	nop
  403058:	ldrb	w2, [x20]
  40305c:	mov	x6, x1
  403060:	ubfiz	x3, x2, #1, #8
  403064:	ldrh	w3, [x9, x3]
  403068:	tbnz	w3, #0, 403080 <ferror@plt+0x240>
  40306c:	ldrb	w2, [x27, w2, sxtw]
  403070:	add	x5, x5, #0x1
  403074:	strb	w2, [x1]
  403078:	add	x1, x0, x5
  40307c:	mov	x6, x1
  403080:	add	x20, x20, #0x1
  403084:	cmp	x4, x20
  403088:	b.ne	403058 <ferror@plt+0x218>  // b.any
  40308c:	strb	wzr, [x6]
  403090:	add	x28, x28, #0x1
  403094:	cmp	x28, #0xd
  403098:	add	x24, x24, #0x10
  40309c:	b.ne	403018 <ferror@plt+0x1d8>  // b.any
  4030a0:	ldr	x0, [sp, #160]
  4030a4:	adrp	x3, 405000 <ferror@plt+0x21c0>
  4030a8:	mov	x2, #0x10                  	// #16
  4030ac:	add	x3, x3, #0x910
  4030b0:	add	x0, x0, #0x20
  4030b4:	mov	x1, #0xc                   	// #12
  4030b8:	bl	402810 <qsort@plt>
  4030bc:	add	x26, x19, #0x430
  4030c0:	adrp	x25, 418000 <_obstack_memory_used@@Base+0x26c8>
  4030c4:	mov	x0, x26
  4030c8:	bl	402920 <sigemptyset@plt>
  4030cc:	add	x0, x25, #0x100
  4030d0:	str	x0, [sp, #128]
  4030d4:	add	x20, x0, #0x180
  4030d8:	add	x24, x0, #0x1ac
  4030dc:	mov	x28, x20
  4030e0:	ldr	w25, [x28]
  4030e4:	add	x2, sp, #0x290
  4030e8:	mov	x1, #0x0                   	// #0
  4030ec:	mov	w0, w25
  4030f0:	bl	402a20 <sigaction@plt>
  4030f4:	ldr	x0, [sp, #656]
  4030f8:	cmp	x0, #0x1
  4030fc:	b.eq	40310c <ferror@plt+0x2cc>  // b.none
  403100:	mov	w1, w25
  403104:	mov	x0, x26
  403108:	bl	402d80 <sigaddset@plt>
  40310c:	add	x28, x28, #0x4
  403110:	cmp	x24, x28
  403114:	b.ne	4030e0 <ferror@plt+0x2a0>  // b.any
  403118:	add	x0, x19, #0x430
  40311c:	adrp	x1, 405000 <ferror@plt+0x21c0>
  403120:	add	x1, x1, #0x9c0
  403124:	str	x1, [sp, #656]
  403128:	add	x1, sp, #0x270
  40312c:	mov	x26, x0
  403130:	ldp	x2, x3, [x0]
  403134:	str	wzr, [sp, #792]
  403138:	stp	x2, x3, [x1, #40]
  40313c:	ldp	x2, x3, [x0, #16]
  403140:	stp	x2, x3, [x1, #56]
  403144:	ldp	x2, x3, [x0, #32]
  403148:	stp	x2, x3, [x1, #72]
  40314c:	ldp	x2, x3, [x0, #48]
  403150:	stp	x2, x3, [x1, #88]
  403154:	ldp	x2, x3, [x0, #64]
  403158:	stp	x2, x3, [x1, #104]
  40315c:	ldp	x2, x3, [x0, #80]
  403160:	stp	x2, x3, [x1, #120]
  403164:	ldp	x2, x3, [x0, #96]
  403168:	stp	x2, x3, [x1, #136]
  40316c:	add	x2, sp, #0x270
  403170:	ldp	x0, x1, [x0, #112]
  403174:	stp	x0, x1, [x2, #152]
  403178:	b	403188 <ferror@plt+0x348>
  40317c:	add	x20, x20, #0x4
  403180:	cmp	x24, x20
  403184:	b.eq	4031b8 <ferror@plt+0x378>  // b.none
  403188:	ldr	w28, [x20]
  40318c:	mov	x0, x26
  403190:	mov	w1, w28
  403194:	bl	402b40 <sigismember@plt>
  403198:	cbz	w0, 40317c <ferror@plt+0x33c>
  40319c:	mov	w0, w28
  4031a0:	add	x1, sp, #0x290
  4031a4:	add	x20, x20, #0x4
  4031a8:	mov	x2, #0x0                   	// #0
  4031ac:	bl	402a20 <sigaction@plt>
  4031b0:	cmp	x24, x20
  4031b4:	b.ne	403188 <ferror@plt+0x348>  // b.any
  4031b8:	mov	x1, #0x0                   	// #0
  4031bc:	mov	w0, #0x11                  	// #17
  4031c0:	bl	402890 <signal@plt>
  4031c4:	adrp	x0, 407000 <ferror@plt+0x41c0>
  4031c8:	add	x0, x0, #0x410
  4031cc:	bl	4162a0 <_obstack_memory_used@@Base+0x968>
  4031d0:	add	x2, sp, #0x270
  4031d4:	add	x1, sp, #0x1c8
  4031d8:	sxtw	x0, w21
  4031dc:	cmp	xzr, x0, lsr #61
  4031e0:	stp	xzr, xzr, [x2, #-168]
  4031e4:	mov	x2, #0xffffffffffffffff    	// #-1
  4031e8:	stp	xzr, xzr, [x1, #16]
  4031ec:	sbfiz	x0, x21, #3, #32
  4031f0:	stp	xzr, xzr, [x1, #32]
  4031f4:	stp	xzr, xzr, [x1, #48]
  4031f8:	str	x2, [sp, #448]
  4031fc:	str	x2, [sp, #464]
  403200:	cset	x2, ne  // ne = any
  403204:	tbnz	w21, #31, 405200 <ferror@plt+0x23c0>
  403208:	cbnz	x2, 405200 <ferror@plt+0x23c0>
  40320c:	bl	414158 <ferror@plt+0x11318>
  403210:	mov	x27, #0x0                   	// #0
  403214:	mov	x20, x0
  403218:	adrp	x7, 417000 <_obstack_memory_used@@Base+0x16c8>
  40321c:	add	x0, sp, #0x180
  403220:	add	x25, x7, #0xf70
  403224:	mov	w24, #0x0                   	// #0
  403228:	mov	w26, #0x0                   	// #0
  40322c:	mov	w28, #0x0                   	// #0
  403230:	stp	xzr, xzr, [sp, #136]
  403234:	str	xzr, [sp, #152]
  403238:	stp	xzr, x0, [sp, #192]
  40323c:	b	4032a4 <ferror@plt+0x464>
  403240:	cmp	x27, #0x0
  403244:	ccmp	w23, #0x0, #0x4, ne  // ne = any
  403248:	b.eq	403328 <ferror@plt+0x4e8>  // b.none
  40324c:	ldr	w2, [sp, #120]
  403250:	adrp	x1, 42d000 <_obstack_memory_used@@Base+0x176c8>
  403254:	cmp	w26, #0x0
  403258:	add	x3, x1, #0x548
  40325c:	cset	w0, ne  // ne = any
  403260:	eor	w2, w2, #0x1
  403264:	ldr	w1, [x1, #1352]
  403268:	orr	w0, w0, w2
  40326c:	cbnz	w0, 403288 <ferror@plt+0x448>
  403270:	cmp	w21, w1
  403274:	b.eq	403478 <ferror@plt+0x638>  // b.none
  403278:	ldr	x0, [x22, w1, sxtw #3]
  40327c:	ldrb	w2, [x0]
  403280:	cmp	w2, #0x2d
  403284:	b.eq	403308 <ferror@plt+0x4c8>  // b.none
  403288:	cmp	w21, w1
  40328c:	b.le	4050c4 <ferror@plt+0x2284>
  403290:	ldr	x0, [x22, w1, sxtw #3]
  403294:	str	x0, [x20, x27, lsl #3]
  403298:	add	x27, x27, #0x1
  40329c:	add	w1, w1, #0x1
  4032a0:	str	w1, [x3]
  4032a4:	mov	w0, #0xffffffff            	// #-1
  4032a8:	str	w0, [sp, #256]
  4032ac:	cmp	w28, w0
  4032b0:	b.ne	403240 <ferror@plt+0x400>  // b.any
  4032b4:	adrp	x1, 42d000 <_obstack_memory_used@@Base+0x176c8>
  4032b8:	add	x3, x1, #0x548
  4032bc:	ldr	w1, [x1, #1352]
  4032c0:	b	403288 <ferror@plt+0x448>
  4032c4:	mov	w0, #0xffffffff            	// #-1
  4032c8:	str	w0, [x19, #1240]
  4032cc:	b	402f58 <ferror@plt+0x118>
  4032d0:	mov	w1, #0x2e                  	// #46
  4032d4:	str	w1, [x19, #1244]
  4032d8:	b	402f40 <ferror@plt+0x100>
  4032dc:	ldr	x4, [x0]
  4032e0:	mov	x1, #0xb                   	// #11
  4032e4:	ldrh	w2, [x3, #20]
  4032e8:	strb	wzr, [x19, #10]
  4032ec:	eor	x2, x2, #0x4000
  4032f0:	ldr	w3, [x4, #40]
  4032f4:	strb	w7, [x6, #10]
  4032f8:	ubfx	x2, x2, #14, #1
  4032fc:	strb	w3, [x8, #10]
  403300:	strb	w2, [x5, #10]
  403304:	b	402fbc <ferror@plt+0x17c>
  403308:	ldrb	w2, [x0, #1]
  40330c:	cmp	w2, #0x6f
  403310:	b.ne	403288 <ferror@plt+0x448>  // b.any
  403314:	ldrb	w0, [x0, #2]
  403318:	cbnz	w0, 403328 <ferror@plt+0x4e8>
  40331c:	add	w0, w1, #0x1
  403320:	cmp	w0, w21
  403324:	b.eq	403288 <ferror@plt+0x448>  // b.none
  403328:	ldr	x0, [sp, #128]
  40332c:	add	x4, sp, #0x100
  403330:	mov	x1, x22
  403334:	add	x3, x0, #0x1b0
  403338:	add	x2, x0, #0x590
  40333c:	mov	w0, w21
  403340:	bl	402b20 <getopt_long@plt>
  403344:	mov	w28, w0
  403348:	cmn	w0, #0x1
  40334c:	b.eq	4032b4 <ferror@plt+0x474>  // b.none
  403350:	cmp	w0, #0x107
  403354:	b.gt	404c98 <ferror@plt+0x1e58>
  403358:	cmp	w0, #0x42
  40335c:	b.le	4033f8 <ferror@plt+0x5b8>
  403360:	sub	w0, w0, #0x43
  403364:	cmp	w0, #0xc4
  403368:	b.hi	404c98 <ferror@plt+0x1e58>  // b.pmore
  40336c:	ldrh	w0, [x25, w0, uxtw #1]
  403370:	adr	x1, 40337c <ferror@plt+0x53c>
  403374:	add	x0, x1, w0, sxth #2
  403378:	br	x0
  40337c:	mov	w24, #0x1                   	// #1
  403380:	b	4032a4 <ferror@plt+0x464>
  403384:	ldr	x6, [sp, #128]
  403388:	adrp	x2, 42d000 <_obstack_memory_used@@Base+0x176c8>
  40338c:	adrp	x1, 42d000 <_obstack_memory_used@@Base+0x176c8>
  403390:	adrp	x0, 417000 <_obstack_memory_used@@Base+0x16c8>
  403394:	ldr	x5, [x2, #1216]
  403398:	add	x3, x6, #0x5b8
  40339c:	ldr	x1, [x1, #1344]
  4033a0:	mov	x28, x3
  4033a4:	add	x0, x0, #0x7b0
  4033a8:	add	x2, x6, #0x5c0
  4033ac:	mov	x4, #0x1                   	// #1
  4033b0:	bl	40b850 <ferror@plt+0x8a10>
  4033b4:	ldrb	w28, [x28, x0]
  4033b8:	add	x1, sp, #0x1c0
  4033bc:	add	x0, sp, #0x290
  4033c0:	mov	w2, #0x2                   	// #2
  4033c4:	strb	w28, [sp, #656]
  4033c8:	strb	wzr, [sp, #657]
  4033cc:	bl	4054d8 <ferror@plt+0x2698>
  4033d0:	b	4032a4 <ferror@plt+0x464>
  4033d4:	adrp	x0, 42d000 <_obstack_memory_used@@Base+0x176c8>
  4033d8:	ldr	x1, [x0, #1344]
  4033dc:	cbnz	x1, 404124 <ferror@plt+0x12e4>
  4033e0:	mov	w28, #0x63                  	// #99
  4033e4:	cbz	w26, 4033f0 <ferror@plt+0x5b0>
  4033e8:	cmp	w26, w28
  4033ec:	b.ne	404e58 <ferror@plt+0x2018>  // b.any
  4033f0:	and	w26, w28, #0xff
  4033f4:	b	4032a4 <ferror@plt+0x464>
  4033f8:	cmn	w0, #0x2
  4033fc:	b.eq	404dfc <ferror@plt+0x1fbc>  // b.none
  403400:	cmp	w0, #0x1
  403404:	b.ne	403430 <ferror@plt+0x5f0>  // b.any
  403408:	adrp	x3, 42d000 <_obstack_memory_used@@Base+0x176c8>
  40340c:	add	x4, x3, #0x540
  403410:	ldr	x0, [x3, #1344]
  403414:	ldrb	w1, [x0]
  403418:	cmp	w1, #0x2b
  40341c:	b.eq	4041cc <ferror@plt+0x138c>  // b.none
  403420:	ldr	x0, [x4]
  403424:	str	x0, [x20, x27, lsl #3]
  403428:	add	x27, x27, #0x1
  40342c:	b	4032a4 <ferror@plt+0x464>
  403430:	cmn	w0, #0x3
  403434:	b.ne	404c98 <ferror@plt+0x1e58>  // b.any
  403438:	adrp	x1, 42d000 <_obstack_memory_used@@Base+0x176c8>
  40343c:	adrp	x0, 42d000 <_obstack_memory_used@@Base+0x176c8>
  403440:	adrp	x5, 417000 <_obstack_memory_used@@Base+0x16c8>
  403444:	adrp	x4, 417000 <_obstack_memory_used@@Base+0x16c8>
  403448:	ldr	x3, [x1, #1208]
  40344c:	add	x5, x5, #0x9c8
  403450:	ldr	x0, [x0, #1360]
  403454:	add	x4, x4, #0x9d8
  403458:	adrp	x2, 417000 <_obstack_memory_used@@Base+0x16c8>
  40345c:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x16c8>
  403460:	add	x2, x2, #0x670
  403464:	add	x1, x1, #0xdf8
  403468:	mov	x6, #0x0                   	// #0
  40346c:	bl	413df0 <ferror@plt+0x10fb0>
  403470:	mov	w0, #0x0                   	// #0
  403474:	bl	402790 <exit@plt>
  403478:	ldr	x0, [sp, #136]
  40347c:	cbnz	x0, 404c2c <ferror@plt+0x1dec>
  403480:	mov	w26, #0x0                   	// #0
  403484:	ldr	x0, [x19, #1232]
  403488:	cbz	x0, 404728 <ferror@plt+0x18e8>
  40348c:	mov	x13, #0xff0000              	// #16711680
  403490:	mov	x1, x0
  403494:	mov	w25, #0x0                   	// #0
  403498:	movk	x13, #0xffff, lsl #32
  40349c:	b	4034ac <ferror@plt+0x66c>
  4034a0:	ldr	x1, [x1, #64]
  4034a4:	orr	w25, w25, w2
  4034a8:	cbz	x1, 403554 <ferror@plt+0x714>
  4034ac:	ldr	x3, [x1, #32]
  4034b0:	ldrb	w2, [x1, #51]
  4034b4:	cbnz	x3, 4034a0 <ferror@plt+0x660>
  4034b8:	ldr	x3, [x1, #40]
  4034bc:	cbnz	x3, 4034a0 <ferror@plt+0x660>
  4034c0:	ldrb	w3, [x1, #48]
  4034c4:	cbnz	w3, 4034a0 <ferror@plt+0x660>
  4034c8:	ldrb	w3, [x1, #49]
  4034cc:	cbnz	w3, 4034a0 <ferror@plt+0x660>
  4034d0:	ldr	x3, [x1, #48]
  4034d4:	tst	x3, x13
  4034d8:	b.ne	4034a0 <ferror@plt+0x660>  // b.any
  4034dc:	ldrb	w3, [x1, #54]
  4034e0:	cbnz	w3, 4034a0 <ferror@plt+0x660>
  4034e4:	ldrb	w3, [x1, #56]
  4034e8:	cbnz	w3, 4034a0 <ferror@plt+0x660>
  4034ec:	cbnz	w2, 4034a0 <ferror@plt+0x660>
  4034f0:	ldrb	w3, [x1, #55]
  4034f4:	cbnz	w3, 4034a0 <ferror@plt+0x660>
  4034f8:	ldr	q0, [sp, #480]
  4034fc:	str	q0, [x1, #32]
  403500:	ldrb	w3, [sp, #504]
  403504:	ldrb	w4, [sp, #503]
  403508:	ldrb	w7, [sp, #502]
  40350c:	ldrb	w8, [sp, #501]
  403510:	ldrb	w9, [sp, #500]
  403514:	ldrb	w2, [sp, #499]
  403518:	ldrb	w10, [sp, #498]
  40351c:	ldrb	w11, [sp, #497]
  403520:	orr	w25, w25, w2
  403524:	ldrb	w12, [sp, #496]
  403528:	strb	w12, [x1, #48]
  40352c:	strb	w11, [x1, #49]
  403530:	strb	w10, [x1, #50]
  403534:	strb	w2, [x1, #51]
  403538:	strb	w9, [x1, #52]
  40353c:	strb	w8, [x1, #53]
  403540:	strb	w7, [x1, #54]
  403544:	strb	w4, [x1, #55]
  403548:	strb	w3, [x1, #56]
  40354c:	ldr	x1, [x1, #64]
  403550:	cbnz	x1, 4034ac <ferror@plt+0x66c>
  403554:	mov	w22, #0x0                   	// #0
  403558:	ldr	x2, [x0, #32]
  40355c:	ldrb	w7, [x0, #52]
  403560:	ldrb	w1, [x0, #50]
  403564:	cmp	x2, #0x0
  403568:	ldrb	w4, [x0, #51]
  40356c:	cset	w2, ne  // ne = any
  403570:	ldrb	w3, [x0, #56]
  403574:	add	w1, w1, w7
  403578:	ldrb	w7, [x0, #53]
  40357c:	orr	w3, w3, w4
  403580:	ldrb	w4, [x0, #54]
  403584:	add	w1, w1, w7
  403588:	orr	w2, w2, w3
  40358c:	add	w1, w1, w4
  403590:	add	w1, w1, w2, uxtb
  403594:	cmp	w1, #0x1
  403598:	b.gt	404e38 <ferror@plt+0x1ff8>
  40359c:	ldr	x0, [x0, #64]
  4035a0:	cbnz	x0, 403558 <ferror@plt+0x718>
  4035a4:	ldrb	w0, [x19, #1228]
  4035a8:	cbz	w0, 4039c4 <ferror@plt+0xb84>
  4035ac:	ldr	x0, [sp, #152]
  4035b0:	cmp	w26, #0x0
  4035b4:	ccmp	x0, #0x0, #0x0, eq  // eq = none
  4035b8:	b.ne	4050a4 <ferror@plt+0x2264>  // b.any
  4035bc:	ldr	x0, [sp, #176]
  4035c0:	cbz	x0, 4040f4 <ferror@plt+0x12b4>
  4035c4:	ldr	x1, [sp, #168]
  4035c8:	mov	w0, #0x3                   	// #3
  4035cc:	bl	402e30 <setlocale@plt>
  4035d0:	cbz	x0, 4040f4 <ferror@plt+0x12b4>
  4035d4:	ldrb	w0, [x19, #1200]
  4035d8:	cbnz	w0, 4040b4 <ferror@plt+0x1274>
  4035dc:	mov	w2, #0x5                   	// #5
  4035e0:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x16c8>
  4035e4:	mov	x0, #0x0                   	// #0
  4035e8:	add	x1, x1, #0xb20
  4035ec:	bl	402d20 <dcgettext@plt>
  4035f0:	mov	x3, x0
  4035f4:	adrp	x2, 416000 <_obstack_memory_used@@Base+0x6c8>
  4035f8:	mov	w1, #0x0                   	// #0
  4035fc:	add	x2, x2, #0x5a0
  403600:	mov	w0, #0x0                   	// #0
  403604:	bl	4027b0 <error@plt>
  403608:	add	x2, sp, #0x200
  40360c:	mov	x21, #0x1                   	// #1
  403610:	ldp	x0, x1, [sp, #448]
  403614:	stp	x0, x1, [x2, #16]
  403618:	ldp	x0, x1, [sp, #464]
  40361c:	stp	x0, x1, [x2, #32]
  403620:	ldp	x0, x1, [sp, #480]
  403624:	stp	x0, x1, [x2, #48]
  403628:	ldp	x0, x1, [sp, #496]
  40362c:	stp	x0, x1, [x2, #64]
  403630:	ldr	x28, [x19, #1232]
  403634:	ldr	x0, [sp, #512]
  403638:	str	x0, [sp, #592]
  40363c:	cbz	x28, 403904 <ferror@plt+0xac4>
  403640:	add	x0, sp, #0x100
  403644:	add	x0, x0, x21
  403648:	str	x0, [sp, #128]
  40364c:	add	x0, sp, #0x133
  403650:	str	x0, [sp, #136]
  403654:	nop
  403658:	ldrb	w0, [x28, #57]
  40365c:	ldr	x23, [x28]
  403660:	ldr	x3, [x28, #16]
  403664:	cbz	w0, 4037ac <ferror@plt+0x96c>
  403668:	cmn	x23, #0x1
  40366c:	mov	w2, #0x2b                  	// #43
  403670:	csel	x23, x23, xzr, ne  // ne = any
  403674:	add	x1, sp, #0xe8
  403678:	mov	x0, x23
  40367c:	str	x3, [sp, #120]
  403680:	strh	w2, [sp, #256]
  403684:	bl	40e790 <ferror@plt+0xb950>
  403688:	mov	x1, x0
  40368c:	mov	x2, #0x2d                  	// #45
  403690:	ldr	x0, [sp, #128]
  403694:	bl	402bf0 <__stpcpy_chk@plt>
  403698:	mov	x1, x0
  40369c:	mov	w2, #0x6b2d                	// #27437
  4036a0:	add	x0, x23, #0x1
  4036a4:	movk	w2, #0x20, lsl #16
  4036a8:	mov	x23, x1
  4036ac:	add	x1, sp, #0xe8
  4036b0:	str	w2, [sp, #304]
  4036b4:	bl	40e790 <ferror@plt+0xb950>
  4036b8:	mov	x1, x0
  4036bc:	ldr	x0, [sp, #136]
  4036c0:	mov	x2, #0x2c                  	// #44
  4036c4:	bl	402bf0 <__stpcpy_chk@plt>
  4036c8:	ldr	x1, [x28, #16]
  4036cc:	cmn	x1, #0x1
  4036d0:	b.eq	403754 <ferror@plt+0x914>  // b.none
  4036d4:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x16c8>
  4036d8:	add	x1, x1, #0xb58
  4036dc:	ldr	x3, [sp, #120]
  4036e0:	mov	x4, x23
  4036e4:	ldrb	w7, [x1, #2]
  4036e8:	mov	x2, x0
  4036ec:	ldrh	w0, [x1]
  4036f0:	add	x3, x3, #0x1
  4036f4:	strh	w0, [x23]
  4036f8:	add	x1, sp, #0xe8
  4036fc:	strb	w7, [x4, #2]!
  403700:	mov	x0, x3
  403704:	stp	x3, x2, [sp, #160]
  403708:	str	x4, [sp, #120]
  40370c:	bl	40e790 <ferror@plt+0xb950>
  403710:	ldr	x4, [sp, #120]
  403714:	mov	x1, x0
  403718:	mov	x0, x4
  40371c:	bl	402c90 <strcpy@plt>
  403720:	ldp	x3, x2, [sp, #160]
  403724:	mov	w0, #0x2c                  	// #44
  403728:	add	x1, sp, #0xe8
  40372c:	strh	w0, [x2], #1
  403730:	ldr	x0, [x28, #24]
  403734:	str	x2, [sp, #120]
  403738:	cmn	x0, #0x1
  40373c:	cinc	x0, x3, eq  // eq = none
  403740:	bl	40e790 <ferror@plt+0xb950>
  403744:	mov	x1, x0
  403748:	ldr	x2, [sp, #120]
  40374c:	mov	x0, x2
  403750:	bl	402c90 <strcpy@plt>
  403754:	mov	w2, #0x5                   	// #5
  403758:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x16c8>
  40375c:	mov	x0, #0x0                   	// #0
  403760:	add	x1, x1, #0xb60
  403764:	bl	402d20 <dcgettext@plt>
  403768:	mov	x23, x0
  40376c:	add	x1, sp, #0x100
  403770:	mov	w0, #0x0                   	// #0
  403774:	bl	4121c8 <ferror@plt+0xf388>
  403778:	mov	x3, x0
  40377c:	add	x1, sp, #0x130
  403780:	mov	w0, #0x1                   	// #1
  403784:	str	x3, [sp, #120]
  403788:	bl	4121c8 <ferror@plt+0xf388>
  40378c:	mov	x4, x0
  403790:	ldr	x3, [sp, #120]
  403794:	mov	x2, x23
  403798:	mov	w1, #0x0                   	// #0
  40379c:	mov	w0, #0x0                   	// #0
  4037a0:	bl	4027b0 <error@plt>
  4037a4:	ldr	x23, [x28]
  4037a8:	ldr	x3, [x28, #16]
  4037ac:	cmn	x23, #0x1
  4037b0:	mov	w1, w22
  4037b4:	b.eq	4037f0 <ferror@plt+0x9b0>  // b.none
  4037b8:	cmp	x23, x3
  4037bc:	b.ls	4037f0 <ferror@plt+0x9b0>  // b.plast
  4037c0:	mov	w2, #0x5                   	// #5
  4037c4:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x16c8>
  4037c8:	mov	x0, #0x0                   	// #0
  4037cc:	add	x1, x1, #0xcf8
  4037d0:	bl	402d20 <dcgettext@plt>
  4037d4:	mov	x2, x0
  4037d8:	mov	x3, x21
  4037dc:	mov	w1, #0x0                   	// #0
  4037e0:	mov	w0, #0x0                   	// #0
  4037e4:	bl	4027b0 <error@plt>
  4037e8:	ldr	x3, [x28, #16]
  4037ec:	mov	w1, #0x1                   	// #1
  4037f0:	ldr	x0, [x28, #48]
  4037f4:	mov	w2, #0x1                   	// #1
  4037f8:	and	x0, x0, #0xffffffff0000
  4037fc:	and	x0, x0, #0xffffffff00ffffff
  403800:	cbnz	x0, 403808 <ferror@plt+0x9c8>
  403804:	ldrb	w2, [x28, #54]
  403808:	cbnz	x3, 40400c <ferror@plt+0x11cc>
  40380c:	ldr	x3, [x28, #24]
  403810:	cbz	x3, 40400c <ferror@plt+0x11cc>
  403814:	cbz	w1, 404068 <ferror@plt+0x1228>
  403818:	cbz	w22, 404068 <ferror@plt+0x1228>
  40381c:	ldr	x0, [sp, #560]
  403820:	cbz	x0, 403830 <ferror@plt+0x9f0>
  403824:	ldr	x1, [x28, #32]
  403828:	cmp	x0, x1
  40382c:	b.eq	404360 <ferror@plt+0x1520>  // b.none
  403830:	ldr	x0, [sp, #568]
  403834:	cbz	x0, 403844 <ferror@plt+0xa04>
  403838:	ldr	x1, [x28, #40]
  40383c:	cmp	x0, x1
  403840:	b.eq	404368 <ferror@plt+0x1528>  // b.none
  403844:	ldrb	w7, [x28, #48]
  403848:	add	x21, x21, #0x1
  40384c:	ldrb	w10, [x28, #50]
  403850:	eor	w8, w7, #0x1
  403854:	ldrb	w7, [x28, #51]
  403858:	ldrb	w11, [x28, #49]
  40385c:	eor	w10, w10, #0x1
  403860:	eor	w9, w7, #0x1
  403864:	ldrb	w7, [sp, #576]
  403868:	ldrb	w4, [x28, #52]
  40386c:	eor	w11, w11, #0x1
  403870:	and	w7, w8, w7
  403874:	ldrb	w3, [x28, #53]
  403878:	ldrb	w2, [x28, #54]
  40387c:	eor	w4, w4, #0x1
  403880:	ldrb	w1, [x28, #55]
  403884:	eor	w3, w3, #0x1
  403888:	ldrb	w0, [x28, #56]
  40388c:	eor	w2, w2, #0x1
  403890:	ldrb	w8, [sp, #578]
  403894:	eor	w1, w1, #0x1
  403898:	ldr	x28, [x28, #64]
  40389c:	strb	w7, [sp, #576]
  4038a0:	ldrb	w7, [sp, #579]
  4038a4:	and	w8, w10, w8
  4038a8:	ldrb	w12, [sp, #577]
  4038ac:	eor	w0, w0, #0x1
  4038b0:	ldrb	w10, [sp, #581]
  4038b4:	and	w7, w9, w7
  4038b8:	ldrb	w9, [sp, #582]
  4038bc:	and	w11, w11, w12
  4038c0:	and	w3, w3, w10
  4038c4:	ldrb	w12, [sp, #580]
  4038c8:	ldrb	w10, [sp, #583]
  4038cc:	and	w2, w2, w9
  4038d0:	ldrb	w9, [sp, #584]
  4038d4:	and	w4, w4, w12
  4038d8:	and	w1, w1, w10
  4038dc:	strb	w11, [sp, #577]
  4038e0:	and	w0, w0, w9
  4038e4:	strb	w8, [sp, #578]
  4038e8:	strb	w7, [sp, #579]
  4038ec:	strb	w4, [sp, #580]
  4038f0:	strb	w3, [sp, #581]
  4038f4:	strb	w2, [sp, #582]
  4038f8:	strb	w1, [sp, #583]
  4038fc:	strb	w0, [sp, #584]
  403900:	cbnz	x28, 403658 <ferror@plt+0x818>
  403904:	add	x21, sp, #0x210
  403908:	mov	x0, x21
  40390c:	bl	4053a0 <ferror@plt+0x2560>
  403910:	ldrb	w22, [sp, #583]
  403914:	tst	w0, #0xff
  403918:	b.ne	40474c <ferror@plt+0x190c>  // b.any
  40391c:	ldrb	w0, [x19, #1249]
  403920:	cbnz	w0, 403930 <ferror@plt+0xaf0>
  403924:	ldrb	w0, [x19, #1248]
  403928:	cbnz	w0, 403930 <ferror@plt+0xaf0>
  40392c:	strb	wzr, [sp, #583]
  403930:	add	x0, sp, #0x130
  403934:	mov	x1, x0
  403938:	mov	x0, x21
  40393c:	mov	x21, x1
  403940:	bl	4053f8 <ferror@plt+0x25b8>
  403944:	mov	x0, x21
  403948:	bl	402780 <strlen@plt>
  40394c:	mov	x3, x0
  403950:	mov	w4, #0x5                   	// #5
  403954:	adrp	x2, 417000 <_obstack_memory_used@@Base+0x16c8>
  403958:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x16c8>
  40395c:	add	x2, x2, #0xc08
  403960:	add	x1, x1, #0xc28
  403964:	mov	x0, #0x0                   	// #0
  403968:	bl	402c70 <dcngettext@plt>
  40396c:	mov	x2, x0
  403970:	mov	x3, x21
  403974:	mov	w1, #0x0                   	// #0
  403978:	mov	w0, #0x0                   	// #0
  40397c:	bl	4027b0 <error@plt>
  403980:	strb	w22, [sp, #583]
  403984:	cbz	w22, 4039c4 <ferror@plt+0xb84>
  403988:	ldrb	w0, [x19, #1249]
  40398c:	cbnz	w0, 4039c4 <ferror@plt+0xb84>
  403990:	ldrb	w0, [x19, #1248]
  403994:	cbnz	w0, 4039c4 <ferror@plt+0xb84>
  403998:	ldr	x0, [x19, #1232]
  40399c:	cbz	x0, 4039c4 <ferror@plt+0xb84>
  4039a0:	mov	w2, #0x5                   	// #5
  4039a4:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x16c8>
  4039a8:	mov	x0, #0x0                   	// #0
  4039ac:	add	x1, x1, #0xc40
  4039b0:	bl	402d20 <dcgettext@plt>
  4039b4:	mov	x2, x0
  4039b8:	mov	w1, #0x0                   	// #0
  4039bc:	mov	w0, #0x0                   	// #0
  4039c0:	bl	4027b0 <error@plt>
  4039c4:	ldrb	w0, [sp, #503]
  4039c8:	strb	w0, [x19, #1201]
  4039cc:	cbnz	w25, 404370 <ferror@plt+0x1530>
  4039d0:	ldr	x0, [x19, #776]
  4039d4:	cbz	x0, 403fcc <ferror@plt+0x118c>
  4039d8:	cbz	x27, 403fe4 <ferror@plt+0x11a4>
  4039dc:	ldr	x1, [x19, #1576]
  4039e0:	cbz	x1, 403a00 <ferror@plt+0xbc0>
  4039e4:	adrp	x0, 42d000 <_obstack_memory_used@@Base+0x176c8>
  4039e8:	mov	w2, #0x22                  	// #34
  4039ec:	ldr	w0, [x0, #960]
  4039f0:	umull	x0, w0, w2
  4039f4:	cmp	x0, x1
  4039f8:	csel	x0, x0, x1, cs  // cs = hs, nlast
  4039fc:	str	x0, [x19, #1576]
  403a00:	cbz	w26, 4043c0 <ferror@plt+0x1580>
  403a04:	cmp	x27, #0x1
  403a08:	b.hi	40521c <ferror@plt+0x23dc>  // b.pmore
  403a0c:	ldr	x0, [sp, #152]
  403a10:	cbnz	x0, 405258 <ferror@plt+0x2418>
  403a14:	ldr	x25, [x20]
  403a18:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x6c8>
  403a1c:	add	x1, x1, #0x618
  403a20:	mov	x0, x25
  403a24:	bl	408f98 <ferror@plt+0x6158>
  403a28:	mov	x24, x0
  403a2c:	cbz	x0, 404ef8 <ferror@plt+0x20b8>
  403a30:	adrp	x0, 42d000 <_obstack_memory_used@@Base+0x176c8>
  403a34:	ldrb	w22, [x19, #1248]
  403a38:	ldr	x3, [x19, #1576]
  403a3c:	add	x21, sp, #0x210
  403a40:	ldr	x2, [x0, #1176]
  403a44:	eor	w22, w22, #0x1
  403a48:	mov	x0, x21
  403a4c:	mov	x1, #0x20                  	// #32
  403a50:	cmp	x3, x2
  403a54:	mov	x27, #0x0                   	// #0
  403a58:	csel	x2, x3, x2, cs  // cs = hs, nlast
  403a5c:	mov	x23, #0x0                   	// #0
  403a60:	ldr	x28, [x19, #1232]
  403a64:	bl	405b48 <ferror@plt+0x2d08>
  403a68:	str	xzr, [sp, #304]
  403a6c:	mov	x2, x25
  403a70:	mov	x1, x24
  403a74:	mov	x0, x21
  403a78:	bl	407728 <ferror@plt+0x48e8>
  403a7c:	tst	w0, #0xff
  403a80:	b.eq	404d70 <ferror@plt+0x1f30>  // b.none
  403a84:	ldr	x0, [sp, #528]
  403a88:	ldr	x20, [sp, #544]
  403a8c:	ldr	x1, [sp, #552]
  403a90:	add	x0, x0, x1
  403a94:	sub	x20, x0, x20, lsl #5
  403a98:	sub	x19, x0, #0x20
  403a9c:	cbz	x23, 403ab8 <ferror@plt+0xc78>
  403aa0:	b	403f68 <ferror@plt+0x1128>
  403aa4:	sub	x19, x19, #0x20
  403aa8:	mov	x1, x19
  403aac:	bl	409af8 <ferror@plt+0x6cb8>
  403ab0:	cmp	w22, w0
  403ab4:	b.le	403f7c <ferror@plt+0x113c>
  403ab8:	cmp	x20, x19
  403abc:	mov	x0, x19
  403ac0:	b.cc	403aa4 <ferror@plt+0xc64>  // b.lo, b.ul, b.last
  403ac4:	ldr	x2, [x19, #8]
  403ac8:	ldr	x0, [sp, #544]
  403acc:	cmp	x23, x2
  403ad0:	add	x27, x27, x0
  403ad4:	b.cc	403f40 <ferror@plt+0x1100>  // b.lo, b.ul, b.last
  403ad8:	ldr	x1, [x19]
  403adc:	ldr	x0, [sp, #304]
  403ae0:	bl	402720 <memcpy@plt>
  403ae4:	ldr	x0, [x19, #8]
  403ae8:	str	x0, [sp, #312]
  403aec:	cbz	x28, 403a6c <ferror@plt+0xc2c>
  403af0:	ldr	q0, [x19]
  403af4:	ldr	d1, [sp, #304]
  403af8:	dup	v2.2d, v0.d[0]
  403afc:	ldr	q0, [x19, #16]
  403b00:	dup	v1.2d, v1.d[0]
  403b04:	sub	v0.2d, v0.2d, v2.2d
  403b08:	add	v0.2d, v0.2d, v1.2d
  403b0c:	str	q0, [sp, #320]
  403b10:	b	403a6c <ferror@plt+0xc2c>
  403b14:	mov	x6, x0
  403b18:	b	40308c <ferror@plt+0x24c>
  403b1c:	adrp	x0, 42d000 <_obstack_memory_used@@Base+0x176c8>
  403b20:	add	x3, sp, #0x290
  403b24:	ldr	x4, [sp, #168]
  403b28:	mov	w2, #0xa                   	// #10
  403b2c:	ldr	x8, [x0, #1344]
  403b30:	mov	x1, #0x0                   	// #0
  403b34:	ldr	w0, [sp, #256]
  403b38:	str	x8, [sp, #160]
  403b3c:	str	w0, [sp, #192]
  403b40:	mov	x0, x8
  403b44:	bl	4145b0 <ferror@plt+0x11770>
  403b48:	cmp	w0, #0x1
  403b4c:	b.eq	404d64 <ferror@plt+0x1f24>  // b.none
  403b50:	ldr	x8, [sp, #160]
  403b54:	cbnz	w0, 404fb0 <ferror@plt+0x2170>
  403b58:	ldr	x0, [sp, #656]
  403b5c:	str	x0, [sp, #192]
  403b60:	cbnz	x0, 4032a4 <ferror@plt+0x464>
  403b64:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x16c8>
  403b68:	mov	w2, #0x5                   	// #5
  403b6c:	add	x1, x1, #0x9a0
  403b70:	b	404e74 <ferror@plt+0x2034>
  403b74:	adrp	x0, 42d000 <_obstack_memory_used@@Base+0x176c8>
  403b78:	ldr	x1, [x0, #1344]
  403b7c:	ldr	x0, [sp, #144]
  403b80:	cbz	x0, 403b94 <ferror@plt+0xd54>
  403b84:	str	x1, [sp, #144]
  403b88:	bl	402b50 <strcmp@plt>
  403b8c:	ldr	x1, [sp, #144]
  403b90:	cbnz	w0, 405064 <ferror@plt+0x2224>
  403b94:	str	x1, [sp, #144]
  403b98:	b	4032a4 <ferror@plt+0x464>
  403b9c:	adrp	x0, 42d000 <_obstack_memory_used@@Base+0x176c8>
  403ba0:	mov	w2, #0xa                   	// #10
  403ba4:	add	x3, sp, #0x130
  403ba8:	mov	x4, #0x0                   	// #0
  403bac:	ldr	x8, [x0, #1344]
  403bb0:	mov	x1, #0x0                   	// #0
  403bb4:	ldr	w0, [sp, #256]
  403bb8:	str	x8, [sp, #208]
  403bbc:	str	w0, [sp, #220]
  403bc0:	mov	x0, x8
  403bc4:	bl	414b00 <ferror@plt+0x11cc0>
  403bc8:	mov	w2, w0
  403bcc:	add	x1, sp, #0x290
  403bd0:	mov	w0, #0x7                   	// #7
  403bd4:	str	w2, [sp, #160]
  403bd8:	bl	402cb0 <getrlimit@plt>
  403bdc:	ldr	w2, [sp, #160]
  403be0:	ldr	x8, [sp, #208]
  403be4:	cbnz	w0, 404158 <ferror@plt+0x1318>
  403be8:	ldr	x9, [sp, #656]
  403bec:	sub	w9, w9, #0x3
  403bf0:	cbnz	w2, 404160 <ferror@plt+0x1320>
  403bf4:	adrp	x1, 42d000 <_obstack_memory_used@@Base+0x176c8>
  403bf8:	ldr	x0, [sp, #304]
  403bfc:	str	w0, [x1, #960]
  403c00:	tst	x0, #0xffffffff00000000
  403c04:	b.ne	403c18 <ferror@plt+0xdd8>  // b.any
  403c08:	cmp	w0, #0x1
  403c0c:	b.ls	404fc8 <ferror@plt+0x2188>  // b.plast
  403c10:	cmp	w0, w9
  403c14:	b.ls	4032a4 <ferror@plt+0x464>  // b.plast
  403c18:	mov	w2, #0x5                   	// #5
  403c1c:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x16c8>
  403c20:	mov	x0, #0x0                   	// #0
  403c24:	add	x1, x1, #0x868
  403c28:	str	x8, [sp, #120]
  403c2c:	str	w9, [sp, #136]
  403c30:	bl	402d20 <dcgettext@plt>
  403c34:	ldp	x8, x1, [sp, #120]
  403c38:	mov	x19, x0
  403c3c:	add	x25, x1, #0x1b0
  403c40:	ldr	w1, [sp, #220]
  403c44:	mov	x0, x8
  403c48:	sbfiz	x1, x1, #5, #32
  403c4c:	ldr	x20, [x25, x1]
  403c50:	bl	412348 <ferror@plt+0xf508>
  403c54:	mov	x4, x0
  403c58:	mov	x2, x19
  403c5c:	mov	x3, x20
  403c60:	mov	w1, #0x0                   	// #0
  403c64:	mov	w0, #0x0                   	// #0
  403c68:	bl	4027b0 <error@plt>
  403c6c:	mov	w2, #0x5                   	// #5
  403c70:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x16c8>
  403c74:	mov	x0, #0x0                   	// #0
  403c78:	add	x1, x1, #0x888
  403c7c:	bl	402d20 <dcgettext@plt>
  403c80:	mov	x19, x0
  403c84:	ldr	w9, [sp, #136]
  403c88:	add	x1, sp, #0x210
  403c8c:	mov	w0, w9
  403c90:	bl	40e750 <ferror@plt+0xb910>
  403c94:	b	40503c <ferror@plt+0x21fc>
  403c98:	adrp	x0, 42d000 <_obstack_memory_used@@Base+0x176c8>
  403c9c:	ldr	x0, [x0, #1344]
  403ca0:	str	x0, [sp, #136]
  403ca4:	b	4032a4 <ferror@plt+0x464>
  403ca8:	mov	w0, #0x1                   	// #1
  403cac:	strb	w0, [x19, #1228]
  403cb0:	b	4032a4 <ferror@plt+0x464>
  403cb4:	ldr	x0, [x19, #1208]
  403cb8:	adrp	x1, 42d000 <_obstack_memory_used@@Base+0x176c8>
  403cbc:	ldr	x1, [x1, #1344]
  403cc0:	cbz	x0, 403cd4 <ferror@plt+0xe94>
  403cc4:	str	x1, [sp, #160]
  403cc8:	bl	402b50 <strcmp@plt>
  403ccc:	ldr	x1, [sp, #160]
  403cd0:	cbnz	w0, 405074 <ferror@plt+0x2234>
  403cd4:	str	x1, [x19, #1208]
  403cd8:	b	4032a4 <ferror@plt+0x464>
  403cdc:	mov	w0, #0x1                   	// #1
  403ce0:	strb	w0, [x19, #1248]
  403ce4:	b	4032a4 <ferror@plt+0x464>
  403ce8:	adrp	x0, 42d000 <_obstack_memory_used@@Base+0x176c8>
  403cec:	ldr	x0, [x0, #1344]
  403cf0:	ldrb	w1, [x0]
  403cf4:	cbz	w1, 404e64 <ferror@plt+0x2024>
  403cf8:	ldrb	w2, [x0, #1]
  403cfc:	cbz	w2, 403d14 <ferror@plt+0xed4>
  403d00:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x16c8>
  403d04:	add	x1, x1, #0x968
  403d08:	bl	402b50 <strcmp@plt>
  403d0c:	cbnz	w0, 404f00 <ferror@plt+0x20c0>
  403d10:	mov	w1, #0x0                   	// #0
  403d14:	adrp	x0, 42d000 <_obstack_memory_used@@Base+0x176c8>
  403d18:	add	x2, x0, #0x3b0
  403d1c:	str	x2, [sp, #160]
  403d20:	ldr	w0, [x0, #944]
  403d24:	cmp	w0, #0x100
  403d28:	b.eq	403d34 <ferror@plt+0xef4>  // b.none
  403d2c:	cmp	w0, w1
  403d30:	b.ne	405054 <ferror@plt+0x2214>  // b.any
  403d34:	ldr	x0, [sp, #160]
  403d38:	str	w1, [x0]
  403d3c:	b	4032a4 <ferror@plt+0x464>
  403d40:	mov	w0, #0x1                   	// #1
  403d44:	strb	w0, [x19, #1249]
  403d48:	b	4032a4 <ferror@plt+0x464>
  403d4c:	adrp	x0, 42d000 <_obstack_memory_used@@Base+0x176c8>
  403d50:	ldr	x1, [x0, #1344]
  403d54:	ldr	x0, [sp, #152]
  403d58:	cbz	x0, 403d6c <ferror@plt+0xf2c>
  403d5c:	str	x1, [sp, #152]
  403d60:	bl	402b50 <strcmp@plt>
  403d64:	ldr	x1, [sp, #152]
  403d68:	cbnz	w0, 405084 <ferror@plt+0x2244>
  403d6c:	str	x1, [sp, #152]
  403d70:	b	4032a4 <ferror@plt+0x464>
  403d74:	adrp	x0, 42d000 <_obstack_memory_used@@Base+0x176c8>
  403d78:	strb	wzr, [x0, #1168]
  403d7c:	b	4032a4 <ferror@plt+0x464>
  403d80:	adrp	x1, 42d000 <_obstack_memory_used@@Base+0x176c8>
  403d84:	adrp	x2, 42d000 <_obstack_memory_used@@Base+0x176c8>
  403d88:	add	x3, x1, #0x548
  403d8c:	ldr	w0, [x1, #1352]
  403d90:	ldr	x1, [x2, #1344]
  403d94:	add	x2, x22, w0, sxtw #3
  403d98:	ldur	x2, [x2, #-8]
  403d9c:	cmp	x2, x1
  403da0:	b.ne	4032a4 <ferror@plt+0x464>  // b.any
  403da4:	ldrb	w2, [x1]
  403da8:	sub	w4, w2, #0x30
  403dac:	cmp	w4, #0x9
  403db0:	b.ls	404d20 <ferror@plt+0x1ee0>  // b.plast
  403db4:	cmp	w2, #0x0
  403db8:	cset	w1, ne  // ne = any
  403dbc:	sub	w0, w0, w1
  403dc0:	str	w0, [x3]
  403dc4:	b	4032a4 <ferror@plt+0x464>
  403dc8:	adrp	x3, 42d000 <_obstack_memory_used@@Base+0x176c8>
  403dcc:	mov	x4, #0xffffffffffffffff    	// #-1
  403dd0:	stp	xzr, xzr, [sp, #384]
  403dd4:	add	x1, sp, #0x170
  403dd8:	adrp	x2, 417000 <_obstack_memory_used@@Base+0x16c8>
  403ddc:	ldr	x0, [x3, #1344]
  403de0:	add	x2, x2, #0x7f0
  403de4:	str	x3, [sp, #160]
  403de8:	stp	xzr, xzr, [sp, #368]
  403dec:	str	x4, [sp, #384]
  403df0:	stp	xzr, xzr, [sp, #400]
  403df4:	stp	xzr, xzr, [sp, #416]
  403df8:	str	xzr, [sp, #432]
  403dfc:	bl	4062f0 <ferror@plt+0x34b0>
  403e00:	ldr	x1, [sp, #368]
  403e04:	ldr	x3, [sp, #160]
  403e08:	mov	x2, x1
  403e0c:	sub	x1, x1, #0x1
  403e10:	str	x1, [sp, #368]
  403e14:	cbz	x2, 405204 <ferror@plt+0x23c4>
  403e18:	ldrb	w2, [x0]
  403e1c:	cmp	w2, #0x2e
  403e20:	b.eq	404bf4 <ferror@plt+0x1db4>  // b.none
  403e24:	ldr	x2, [sp, #376]
  403e28:	orr	x1, x1, x2
  403e2c:	cbz	x1, 4041c0 <ferror@plt+0x1380>
  403e30:	add	x1, sp, #0x170
  403e34:	mov	w2, #0x0                   	// #0
  403e38:	str	x3, [sp, #160]
  403e3c:	bl	4054d8 <ferror@plt+0x2698>
  403e40:	ldrb	w1, [x0]
  403e44:	ldr	x3, [sp, #160]
  403e48:	cmp	w1, #0x2c
  403e4c:	b.eq	404ba4 <ferror@plt+0x1d64>  // b.none
  403e50:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x26c8>
  403e54:	ldr	q0, [x1, #1824]
  403e58:	str	q0, [sp, #384]
  403e5c:	ldrb	w0, [x0]
  403e60:	cbnz	w0, 405094 <ferror@plt+0x2254>
  403e64:	mov	x1, #0x48                  	// #72
  403e68:	add	x0, sp, #0x170
  403e6c:	bl	4142a0 <ferror@plt+0x11460>
  403e70:	ldr	x1, [x19, #1232]
  403e74:	add	x2, x19, #0x4d0
  403e78:	cbz	x1, 403e88 <ferror@plt+0x1048>
  403e7c:	add	x2, x1, #0x40
  403e80:	ldr	x1, [x1, #64]
  403e84:	cbnz	x1, 403e7c <ferror@plt+0x103c>
  403e88:	str	x0, [x2]
  403e8c:	str	xzr, [x0, #64]
  403e90:	b	4032a4 <ferror@plt+0x464>
  403e94:	adrp	x0, 42d000 <_obstack_memory_used@@Base+0x176c8>
  403e98:	ldr	x0, [x0, #1344]
  403e9c:	bl	405a90 <ferror@plt+0x2c50>
  403ea0:	b	4032a4 <ferror@plt+0x464>
  403ea4:	adrp	x0, 42d000 <_obstack_memory_used@@Base+0x176c8>
  403ea8:	add	x3, sp, #0x210
  403eac:	add	x1, sp, #0x290
  403eb0:	adrp	x4, 417000 <_obstack_memory_used@@Base+0x16c8>
  403eb4:	ldr	x8, [x0, #1344]
  403eb8:	add	x4, x4, #0x948
  403ebc:	ldr	w0, [sp, #256]
  403ec0:	mov	w2, #0xa                   	// #10
  403ec4:	str	x8, [sp, #160]
  403ec8:	str	w0, [sp, #208]
  403ecc:	mov	x0, x8
  403ed0:	bl	414b00 <ferror@plt+0x11cc0>
  403ed4:	ldr	x8, [sp, #160]
  403ed8:	cbnz	w0, 404184 <ferror@plt+0x1344>
  403edc:	ldr	x0, [sp, #656]
  403ee0:	ldurb	w0, [x0, #-1]
  403ee4:	sub	w0, w0, #0x30
  403ee8:	cmp	w0, #0x9
  403eec:	b.hi	403f08 <ferror@plt+0x10c8>  // b.pmore
  403ef0:	ldr	x0, [sp, #528]
  403ef4:	mov	x1, #0x3fffffffffffff      	// #18014398509481983
  403ef8:	cmp	x0, x1
  403efc:	b.hi	404d04 <ferror@plt+0x1ec4>  // b.pmore
  403f00:	lsl	x0, x0, #10
  403f04:	str	x0, [sp, #528]
  403f08:	ldr	x1, [sp, #528]
  403f0c:	ldr	x0, [x19, #1576]
  403f10:	cmp	x1, x0
  403f14:	b.cc	4032a4 <ferror@plt+0x464>  // b.lo, b.ul, b.last
  403f18:	adrp	x0, 42d000 <_obstack_memory_used@@Base+0x176c8>
  403f1c:	mov	w2, #0x22                  	// #34
  403f20:	ldr	w0, [x0, #960]
  403f24:	umull	x0, w0, w2
  403f28:	cmp	x0, x1
  403f2c:	csel	x0, x0, x1, cs  // cs = hs, nlast
  403f30:	str	x0, [x19, #1576]
  403f34:	b	4032a4 <ferror@plt+0x464>
  403f38:	cmp	x2, x23
  403f3c:	b.ls	403f4c <ferror@plt+0x110c>  // b.plast
  403f40:	lsl	x23, x23, #1
  403f44:	cbnz	x23, 403f38 <ferror@plt+0x10f8>
  403f48:	mov	x23, x2
  403f4c:	ldr	x0, [sp, #304]
  403f50:	bl	402ba0 <free@plt>
  403f54:	mov	x0, x23
  403f58:	bl	414158 <ferror@plt+0x11318>
  403f5c:	ldr	x2, [x19, #8]
  403f60:	str	x0, [sp, #304]
  403f64:	b	403ad8 <ferror@plt+0xc98>
  403f68:	mov	x1, x19
  403f6c:	add	x0, sp, #0x130
  403f70:	bl	409af8 <ferror@plt+0x6cb8>
  403f74:	cmp	w22, w0
  403f78:	b.gt	403ab8 <ferror@plt+0xc78>
  403f7c:	cmp	w26, #0x63
  403f80:	b.eq	404a60 <ferror@plt+0x1c20>  // b.none
  403f84:	mov	w20, #0x0                   	// #0
  403f88:	mov	x1, x25
  403f8c:	mov	x0, x24
  403f90:	bl	4063f0 <ferror@plt+0x35b0>
  403f94:	ldr	x0, [sp, #528]
  403f98:	bl	402ba0 <free@plt>
  403f9c:	ldr	x0, [sp, #304]
  403fa0:	bl	402ba0 <free@plt>
  403fa4:	eor	w0, w20, #0x1
  403fa8:	ldp	x29, x30, [sp]
  403fac:	ldp	x19, x20, [sp, #16]
  403fb0:	ldp	x21, x22, [sp, #32]
  403fb4:	ldp	x23, x24, [sp, #48]
  403fb8:	ldp	x25, x26, [sp, #64]
  403fbc:	ldp	x27, x28, [sp, #80]
  403fc0:	ldr	d8, [sp, #96]
  403fc4:	add	sp, sp, #0x3b0
  403fc8:	ret
  403fcc:	adrp	x0, 417000 <_obstack_memory_used@@Base+0x16c8>
  403fd0:	add	x0, x0, #0xc78
  403fd4:	bl	402dd0 <getenv@plt>
  403fd8:	cbz	x0, 40433c <ferror@plt+0x14fc>
  403fdc:	bl	405a90 <ferror@plt+0x2c50>
  403fe0:	cbnz	x27, 4039dc <ferror@plt+0xb9c>
  403fe4:	mov	x0, x20
  403fe8:	bl	402ba0 <free@plt>
  403fec:	mov	x0, #0x8                   	// #8
  403ff0:	bl	414158 <ferror@plt+0x11318>
  403ff4:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x16c8>
  403ff8:	mov	x20, x0
  403ffc:	add	x1, x1, #0xc80
  404000:	mov	x27, #0x1                   	// #1
  404004:	str	x1, [x0]
  404008:	b	4039dc <ferror@plt+0xb9c>
  40400c:	cbnz	w1, 403818 <ferror@plt+0x9d8>
  404010:	adrp	x1, 42d000 <_obstack_memory_used@@Base+0x176c8>
  404014:	ldr	w1, [x1, #944]
  404018:	cmp	w1, #0x100
  40401c:	b.ne	404068 <ferror@plt+0x1228>  // b.any
  404020:	ldrb	w1, [x28, #48]
  404024:	cbnz	w1, 40434c <ferror@plt+0x150c>
  404028:	cbz	w2, 404034 <ferror@plt+0x11f4>
  40402c:	ldr	x1, [x28, #8]
  404030:	cbz	x1, 40434c <ferror@plt+0x150c>
  404034:	mov	w2, #0x5                   	// #5
  404038:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x16c8>
  40403c:	mov	x0, #0x0                   	// #0
  404040:	add	x1, x1, #0xb90
  404044:	bl	402d20 <dcgettext@plt>
  404048:	mov	x2, x0
  40404c:	mov	x3, x21
  404050:	mov	w0, #0x0                   	// #0
  404054:	mov	w1, #0x0                   	// #0
  404058:	bl	4027b0 <error@plt>
  40405c:	ldr	x0, [x28, #48]
  404060:	and	x0, x0, #0xffffffff0000
  404064:	and	x0, x0, #0xffffffff00ffffff
  404068:	cbz	x0, 40381c <ferror@plt+0x9dc>
  40406c:	ldr	x0, [x28]
  404070:	ldr	x1, [x28, #16]
  404074:	adds	x0, x0, #0x1
  404078:	csinc	x0, x0, xzr, ne  // ne = any
  40407c:	adds	x1, x1, #0x1
  404080:	ccmp	x1, x0, #0x2, ne  // ne = any
  404084:	b.ls	40381c <ferror@plt+0x9dc>  // b.plast
  404088:	mov	w2, #0x5                   	// #5
  40408c:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x16c8>
  404090:	mov	x0, #0x0                   	// #0
  404094:	add	x1, x1, #0xbd8
  404098:	bl	402d20 <dcgettext@plt>
  40409c:	mov	x2, x0
  4040a0:	mov	x3, x21
  4040a4:	mov	w1, #0x0                   	// #0
  4040a8:	mov	w0, #0x0                   	// #0
  4040ac:	bl	4027b0 <error@plt>
  4040b0:	b	40381c <ferror@plt+0x9dc>
  4040b4:	mov	w2, #0x5                   	// #5
  4040b8:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x16c8>
  4040bc:	mov	x0, #0x0                   	// #0
  4040c0:	add	x1, x1, #0xaf0
  4040c4:	bl	402d20 <dcgettext@plt>
  4040c8:	mov	x21, x0
  4040cc:	mov	x1, #0x0                   	// #0
  4040d0:	mov	w0, #0x3                   	// #3
  4040d4:	bl	402e30 <setlocale@plt>
  4040d8:	bl	412348 <ferror@plt+0xf508>
  4040dc:	mov	x3, x0
  4040e0:	mov	x2, x21
  4040e4:	mov	w1, #0x0                   	// #0
  4040e8:	mov	w0, #0x0                   	// #0
  4040ec:	bl	4027b0 <error@plt>
  4040f0:	b	403608 <ferror@plt+0x7c8>
  4040f4:	mov	w2, #0x5                   	// #5
  4040f8:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x16c8>
  4040fc:	mov	x0, #0x0                   	// #0
  404100:	add	x1, x1, #0xad8
  404104:	bl	402d20 <dcgettext@plt>
  404108:	mov	x3, x0
  40410c:	adrp	x2, 416000 <_obstack_memory_used@@Base+0x6c8>
  404110:	mov	w1, #0x0                   	// #0
  404114:	add	x2, x2, #0x5a0
  404118:	mov	w0, #0x0                   	// #0
  40411c:	bl	4027b0 <error@plt>
  404120:	b	4035d4 <ferror@plt+0x794>
  404124:	ldr	x2, [sp, #128]
  404128:	adrp	x0, 42d000 <_obstack_memory_used@@Base+0x176c8>
  40412c:	mov	x4, #0x1                   	// #1
  404130:	add	x3, x2, #0x5f8
  404134:	add	x2, x2, #0x600
  404138:	ldr	x5, [x0, #1216]
  40413c:	mov	x28, x3
  404140:	adrp	x0, 417000 <_obstack_memory_used@@Base+0x16c8>
  404144:	add	x0, x0, #0x7b8
  404148:	bl	40b850 <ferror@plt+0x8a10>
  40414c:	ldrb	w28, [x28, x0]
  404150:	cbz	w26, 4033f0 <ferror@plt+0x5b0>
  404154:	b	4033e8 <ferror@plt+0x5a8>
  404158:	mov	w9, #0x11                  	// #17
  40415c:	cbz	w2, 403bf4 <ferror@plt+0xdb4>
  404160:	cmp	w2, #0x1
  404164:	b.eq	403c18 <ferror@plt+0xdd8>  // b.none
  404168:	ldr	w1, [sp, #220]
  40416c:	mov	x4, x8
  404170:	ldr	x0, [sp, #128]
  404174:	add	x3, x0, #0x1b0
  404178:	mov	w0, w2
  40417c:	mov	w2, #0x4                   	// #4
  404180:	bl	414a60 <ferror@plt+0x11c20>
  404184:	cmp	w0, #0x2
  404188:	b.ne	4041a8 <ferror@plt+0x1368>  // b.any
  40418c:	ldr	x1, [sp, #656]
  404190:	ldurb	w2, [x1, #-1]
  404194:	sub	w2, w2, #0x30
  404198:	cmp	w2, #0x9
  40419c:	b.hi	4041a8 <ferror@plt+0x1368>  // b.pmore
  4041a0:	ldrb	w2, [x1, #1]
  4041a4:	cbz	w2, 404d90 <ferror@plt+0x1f50>
  4041a8:	ldr	x1, [sp, #128]
  4041ac:	mov	x4, x8
  4041b0:	mov	w2, #0x53                  	// #83
  4041b4:	add	x3, x1, #0x1b0
  4041b8:	ldr	w1, [sp, #208]
  4041bc:	bl	414a60 <ferror@plt+0x11c20>
  4041c0:	mov	x1, #0xffffffffffffffff    	// #-1
  4041c4:	str	x1, [sp, #368]
  4041c8:	b	403e30 <ferror@plt+0xff0>
  4041cc:	adrp	x1, 42d000 <_obstack_memory_used@@Base+0x176c8>
  4041d0:	add	x3, x1, #0x548
  4041d4:	ldr	w1, [x1, #1352]
  4041d8:	cmp	w1, w21
  4041dc:	b.eq	4041f0 <ferror@plt+0x13b0>  // b.none
  4041e0:	ldr	x1, [x22, w1, sxtw #3]
  4041e4:	ldrb	w2, [x1]
  4041e8:	cmp	w2, #0x2d
  4041ec:	b.eq	404d0c <ferror@plt+0x1ecc>  // b.none
  4041f0:	mov	w8, #0x0                   	// #0
  4041f4:	ldr	x1, [sp, #184]
  4041f8:	ldr	w2, [sp, #120]
  4041fc:	cmp	x1, #0x0
  404200:	csel	w1, w8, wzr, eq  // eq = none
  404204:	orr	w1, w2, w1
  404208:	str	w1, [sp, #120]
  40420c:	cbz	w1, 403420 <ferror@plt+0x5e0>
  404210:	mov	x9, #0xffffffffffffffff    	// #-1
  404214:	stp	xzr, xzr, [sp, #384]
  404218:	add	x1, sp, #0x170
  40421c:	add	x0, x0, #0x1
  404220:	mov	x2, #0x0                   	// #0
  404224:	str	w8, [sp, #160]
  404228:	str	x3, [sp, #208]
  40422c:	stp	xzr, xzr, [sp, #368]
  404230:	str	x9, [sp, #384]
  404234:	stp	xzr, xzr, [sp, #400]
  404238:	stp	xzr, xzr, [sp, #416]
  40423c:	str	xzr, [sp, #432]
  404240:	bl	4062f0 <ferror@plt+0x34b0>
  404244:	adrp	x1, 42d000 <_obstack_memory_used@@Base+0x176c8>
  404248:	mov	x9, #0xffffffffffffffff    	// #-1
  40424c:	add	x4, x1, #0x540
  404250:	cbz	x0, 404da8 <ferror@plt+0x1f68>
  404254:	ldrb	w1, [x0]
  404258:	ldr	w8, [sp, #160]
  40425c:	cmp	w1, #0x2e
  404260:	ldr	x3, [sp, #208]
  404264:	b.eq	404e04 <ferror@plt+0x1fc4>  // b.none
  404268:	ldp	x2, x1, [sp, #368]
  40426c:	orr	x1, x1, x2
  404270:	cbnz	x1, 404280 <ferror@plt+0x1440>
  404274:	mov	x1, #0xffffffffffffffff    	// #-1
  404278:	str	x1, [sp, #368]
  40427c:	cbz	x0, 403420 <ferror@plt+0x5e0>
  404280:	add	x1, sp, #0x170
  404284:	mov	w2, #0x0                   	// #0
  404288:	str	w8, [sp, #160]
  40428c:	str	x3, [sp, #208]
  404290:	bl	4054d8 <ferror@plt+0x2698>
  404294:	ldrb	w0, [x0]
  404298:	adrp	x1, 42d000 <_obstack_memory_used@@Base+0x176c8>
  40429c:	add	x4, x1, #0x540
  4042a0:	cbnz	w0, 403420 <ferror@plt+0x5e0>
  4042a4:	ldr	w8, [sp, #160]
  4042a8:	cbz	w8, 404310 <ferror@plt+0x14d0>
  4042ac:	ldp	x1, x3, [sp, #200]
  4042b0:	adrp	x2, 417000 <_obstack_memory_used@@Base+0x16c8>
  4042b4:	add	x2, x2, #0x750
  4042b8:	ldr	w0, [x3]
  4042bc:	add	w4, w0, #0x1
  4042c0:	ldr	x0, [x22, w0, sxtw #3]
  4042c4:	str	w4, [x3]
  4042c8:	str	x0, [sp, #160]
  4042cc:	add	x0, x0, #0x1
  4042d0:	bl	4062f0 <ferror@plt+0x34b0>
  4042d4:	cbz	x0, 404f74 <ferror@plt+0x2134>
  4042d8:	ldrb	w1, [x0]
  4042dc:	cmp	w1, #0x2e
  4042e0:	b.eq	404f5c <ferror@plt+0x211c>  // b.none
  4042e4:	ldr	x1, [sp, #392]
  4042e8:	cbnz	x1, 4042fc <ferror@plt+0x14bc>
  4042ec:	ldr	x1, [sp, #384]
  4042f0:	cbz	x1, 4042fc <ferror@plt+0x14bc>
  4042f4:	sub	x1, x1, #0x1
  4042f8:	str	x1, [sp, #384]
  4042fc:	add	x1, sp, #0x170
  404300:	mov	w2, #0x1                   	// #1
  404304:	bl	4054d8 <ferror@plt+0x2698>
  404308:	ldrb	w0, [x0]
  40430c:	cbnz	w0, 404f4c <ferror@plt+0x210c>
  404310:	mov	w2, #0x1                   	// #1
  404314:	mov	x1, #0x48                  	// #72
  404318:	add	x0, sp, #0x170
  40431c:	strb	w2, [sp, #425]
  404320:	bl	4142a0 <ferror@plt+0x11460>
  404324:	ldr	x1, [x19, #1232]
  404328:	add	x2, x19, #0x4d0
  40432c:	cbz	x1, 403e88 <ferror@plt+0x1048>
  404330:	add	x2, x1, #0x40
  404334:	ldr	x1, [x1, #64]
  404338:	b	40432c <ferror@plt+0x14ec>
  40433c:	adrp	x0, 417000 <_obstack_memory_used@@Base+0x16c8>
  404340:	add	x0, x0, #0x238
  404344:	bl	405a90 <ferror@plt+0x2c50>
  404348:	b	403fe0 <ferror@plt+0x11a0>
  40434c:	ldrb	w1, [x28, #49]
  404350:	cbnz	w1, 404068 <ferror@plt+0x1228>
  404354:	ldr	x1, [x28, #24]
  404358:	cbz	x1, 404068 <ferror@plt+0x1228>
  40435c:	b	404034 <ferror@plt+0x11f4>
  404360:	str	xzr, [sp, #560]
  404364:	b	403830 <ferror@plt+0x9f0>
  404368:	str	xzr, [sp, #568]
  40436c:	b	403844 <ferror@plt+0xa04>
  404370:	ldr	x0, [sp, #144]
  404374:	mov	x1, #0x10                  	// #16
  404378:	bl	412520 <ferror@plt+0xf6e0>
  40437c:	mov	x22, x0
  404380:	cbz	x0, 404ea4 <ferror@plt+0x2064>
  404384:	add	x21, sp, #0x210
  404388:	mov	x2, #0x10                  	// #16
  40438c:	mov	x1, x21
  404390:	bl	4127d8 <ferror@plt+0xf998>
  404394:	mov	x0, x22
  404398:	bl	412950 <ferror@plt+0xfb10>
  40439c:	cbnz	w0, 404e88 <ferror@plt+0x2048>
  4043a0:	add	x22, x19, #0x4e8
  4043a4:	mov	x0, x22
  4043a8:	bl	40baa8 <ferror@plt+0x8c68>
  4043ac:	mov	x2, x22
  4043b0:	mov	x0, x21
  4043b4:	mov	x1, #0x10                  	// #16
  4043b8:	bl	40c630 <ferror@plt+0x97f0>
  4043bc:	b	4039d0 <ferror@plt+0xb90>
  4043c0:	mov	x21, x20
  4043c4:	mov	x22, #0x0                   	// #0
  4043c8:	b	4043e8 <ferror@plt+0x15a8>
  4043cc:	ldrb	w1, [x0, #1]
  4043d0:	cbnz	w1, 4043f8 <ferror@plt+0x15b8>
  4043d4:	add	x23, x22, #0x1
  4043d8:	add	x21, x21, #0x8
  4043dc:	cmp	x27, x23
  4043e0:	b.eq	404420 <ferror@plt+0x15e0>  // b.none
  4043e4:	mov	x22, x23
  4043e8:	ldr	x0, [x21]
  4043ec:	ldrb	w1, [x0]
  4043f0:	cmp	w1, #0x2d
  4043f4:	b.eq	4043cc <ferror@plt+0x158c>  // b.none
  4043f8:	mov	w1, #0x4                   	// #4
  4043fc:	bl	402830 <euidaccess@plt>
  404400:	cbz	w0, 4043d4 <ferror@plt+0x1594>
  404404:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x16c8>
  404408:	mov	w2, #0x5                   	// #5
  40440c:	add	x1, x1, #0xcd8
  404410:	mov	x0, #0x0                   	// #0
  404414:	bl	402d20 <dcgettext@plt>
  404418:	ldr	x1, [x21]
  40441c:	bl	405a20 <ferror@plt+0x2be0>
  404420:	ldr	x0, [sp, #152]
  404424:	cbz	x0, 40444c <ferror@plt+0x160c>
  404428:	mov	w1, #0x41                  	// #65
  40442c:	mov	w2, #0x1b6                 	// #438
  404430:	movk	w1, #0x8, lsl #16
  404434:	bl	402900 <open@plt>
  404438:	tbnz	w0, #31, 404f94 <ferror@plt+0x2154>
  40443c:	cmp	w0, #0x1
  404440:	b.eq	40444c <ferror@plt+0x160c>  // b.none
  404444:	mov	w1, #0x1                   	// #1
  404448:	bl	406560 <ferror@plt+0x3720>
  40444c:	cbnz	w24, 404b1c <ferror@plt+0x1cdc>
  404450:	ldr	x0, [sp, #192]
  404454:	cbz	x0, 404d48 <ferror@plt+0x1f08>
  404458:	ldr	x0, [sp, #192]
  40445c:	mov	x25, #0xf0f0f0f0f0f0f0f0    	// #-1085102592571150096
  404460:	movk	x25, #0xf0, lsl #48
  404464:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x6c8>
  404468:	cmp	x0, x25
  40446c:	mov	x24, #0x0                   	// #0
  404470:	csel	x25, x0, x25, ls  // ls = plast
  404474:	mov	x0, #0x110                 	// #272
  404478:	str	xzr, [sp, #328]
  40447c:	lsl	x2, x25, #1
  404480:	mul	x0, x25, x0
  404484:	stp	x0, x2, [sp, #168]
  404488:	add	x2, sp, #0x218
  40448c:	add	x0, x1, #0x618
  404490:	str	x2, [sp, #184]
  404494:	str	x0, [sp, #208]
  404498:	ldr	x0, [x20]
  40449c:	str	x0, [sp, #120]
  4044a0:	ldr	x1, [sp, #208]
  4044a4:	bl	408f98 <ferror@plt+0x6158>
  4044a8:	mov	x26, x0
  4044ac:	cbz	x0, 404ebc <ferror@plt+0x207c>
  4044b0:	ldr	x0, [sp, #192]
  4044b4:	cmp	x0, #0x1
  4044b8:	b.hi	404850 <ferror@plt+0x1a10>  // b.pmore
  4044bc:	mov	x0, #0x30                  	// #48
  4044c0:	str	x0, [sp, #200]
  4044c4:	ldr	x28, [sp, #328]
  4044c8:	cbz	x28, 404874 <ferror@plt+0x1a34>
  4044cc:	add	x0, sp, #0x130
  4044d0:	str	x0, [sp, #144]
  4044d4:	adrp	x0, 406000 <ferror@plt+0x31c0>
  4044d8:	sub	x23, x23, #0x1
  4044dc:	add	x0, x0, #0xd0
  4044e0:	str	x0, [sp, #160]
  4044e4:	strb	wzr, [sp, #352]
  4044e8:	b	4045b0 <ferror@plt+0x1770>
  4044ec:	ldr	x0, [sp, #160]
  4044f0:	ldr	x1, [sp, #176]
  4044f4:	bl	40e408 <ferror@plt+0xb5c8>
  4044f8:	mov	x2, x0
  4044fc:	ldr	x0, [sp, #184]
  404500:	mov	x1, #0x0                   	// #0
  404504:	str	x2, [sp, #528]
  404508:	bl	402a00 <pthread_mutex_init@plt>
  40450c:	mov	x1, #0x0                   	// #0
  404510:	add	x0, sp, #0x248
  404514:	bl	402ca0 <pthread_cond_init@plt>
  404518:	ldr	x0, [sp, #168]
  40451c:	ldr	x4, [sp, #320]
  404520:	str	x4, [sp, #128]
  404524:	bl	414158 <ferror@plt+0x11318>
  404528:	mov	x2, x0
  40452c:	ldr	x4, [sp, #128]
  404530:	add	x27, x2, #0x88
  404534:	movi	v0.4s, #0x0
  404538:	str	xzr, [x2, #32]
  40453c:	dup	v1.2d, x4
  404540:	str	xzr, [x2, #56]
  404544:	str	wzr, [x2, #80]
  404548:	mov	x1, #0x0                   	// #0
  40454c:	strb	wzr, [x2, #84]
  404550:	add	x0, x0, #0x58
  404554:	stp	q0, q0, [x2]
  404558:	stur	q1, [x2, #40]
  40455c:	stp	x2, x4, [sp, #128]
  404560:	bl	402a00 <pthread_mutex_init@plt>
  404564:	mov	x1, x27
  404568:	ldp	x2, x4, [sp, #128]
  40456c:	mov	x3, x25
  404570:	mov	w5, #0x0                   	// #0
  404574:	mov	x0, x2
  404578:	mov	x2, x21
  40457c:	bl	405d18 <ferror@plt+0x2ed8>
  404580:	ldr	x5, [sp, #256]
  404584:	mov	x6, x28
  404588:	ldr	x2, [sp, #320]
  40458c:	mov	x3, x27
  404590:	mov	x0, x21
  404594:	add	x4, sp, #0x210
  404598:	mov	x1, x25
  40459c:	bl	409ee8 <ferror@plt+0x70a8>
  4045a0:	ldr	x0, [sp, #256]
  4045a4:	mov	x1, x28
  4045a8:	bl	4063f0 <ferror@plt+0x35b0>
  4045ac:	cbnz	w22, 4046b4 <ferror@plt+0x1874>
  4045b0:	ldr	x2, [sp, #120]
  4045b4:	mov	x1, x26
  4045b8:	ldr	x0, [sp, #144]
  4045bc:	bl	407728 <ferror@plt+0x48e8>
  4045c0:	tst	w0, #0xff
  4045c4:	b.eq	4047c0 <ferror@plt+0x1980>  // b.none
  4045c8:	ldrb	w22, [sp, #352]
  4045cc:	ldr	x21, [sp, #328]
  4045d0:	cbz	w22, 4045f4 <ferror@plt+0x17b4>
  4045d4:	cbz	x23, 4046e8 <ferror@plt+0x18a8>
  4045d8:	ldp	x2, x0, [sp, #312]
  4045dc:	ldr	x4, [sp, #200]
  4045e0:	add	x1, x4, #0x1
  4045e4:	sub	x3, x21, x2
  4045e8:	msub	x0, x4, x0, x3
  4045ec:	cmp	x1, x0
  4045f0:	b.cc	404d78 <ferror@plt+0x1f38>  // b.lo, b.ul, b.last
  4045f4:	ldr	x0, [sp, #304]
  4045f8:	str	xzr, [x19, #1544]
  4045fc:	add	x21, x0, x21
  404600:	add	x0, sp, #0x100
  404604:	add	x24, x24, #0x1
  404608:	bl	406948 <ferror@plt+0x3b08>
  40460c:	add	x28, x0, #0xd
  404610:	mov	w22, #0x0                   	// #0
  404614:	ldr	x0, [sp, #320]
  404618:	cmp	x0, #0x1
  40461c:	b.hi	4044ec <ferror@plt+0x16ac>  // b.pmore
  404620:	ldrb	w0, [x19, #1248]
  404624:	sub	x21, x21, #0x20
  404628:	ldr	x4, [sp, #256]
  40462c:	cbz	w0, 404694 <ferror@plt+0x1854>
  404630:	ldr	x0, [x19, #1544]
  404634:	add	x1, x19, #0x608
  404638:	cbz	x0, 404680 <ferror@plt+0x1840>
  40463c:	ldr	x0, [x19, #1232]
  404640:	cbz	x0, 404668 <ferror@plt+0x1828>
  404644:	mov	x0, x21
  404648:	str	x4, [sp, #128]
  40464c:	bl	407d30 <ferror@plt+0x4ef0>
  404650:	ldr	x4, [sp, #128]
  404654:	cbnz	w0, 404680 <ferror@plt+0x1840>
  404658:	ldrb	w0, [x19, #1248]
  40465c:	cbnz	w0, 4045a0 <ferror@plt+0x1760>
  404660:	ldrb	w0, [x19, #1249]
  404664:	cbnz	w0, 4045a0 <ferror@plt+0x1760>
  404668:	add	x1, x19, #0x608
  40466c:	mov	x0, x21
  404670:	str	x4, [sp, #128]
  404674:	bl	406488 <ferror@plt+0x3648>
  404678:	ldr	x4, [sp, #128]
  40467c:	cbz	w0, 4045a0 <ferror@plt+0x1760>
  404680:	add	x0, x19, #0x608
  404684:	ldp	x2, x3, [x21]
  404688:	stp	x2, x3, [x0]
  40468c:	ldp	x2, x3, [x21, #16]
  404690:	stp	x2, x3, [x0, #16]
  404694:	mov	x1, x4
  404698:	mov	x0, x21
  40469c:	mov	x2, x28
  4046a0:	bl	406a98 <ferror@plt+0x3c58>
  4046a4:	ldr	x0, [sp, #256]
  4046a8:	mov	x1, x28
  4046ac:	bl	4063f0 <ferror@plt+0x35b0>
  4046b0:	cbz	w22, 4045b0 <ferror@plt+0x1770>
  4046b4:	ldr	x0, [sp, #304]
  4046b8:	bl	402ba0 <free@plt>
  4046bc:	ldr	w0, [x19, #1224]
  4046c0:	cmp	w0, #0x0
  4046c4:	b.le	4046d8 <ferror@plt+0x1898>
  4046c8:	bl	406688 <ferror@plt+0x3848>
  4046cc:	ldr	w0, [x19, #1224]
  4046d0:	cmp	w0, #0x0
  4046d4:	b.gt	4046c8 <ferror@plt+0x1888>
  4046d8:	ldrb	w0, [x19, #1250]
  4046dc:	cbnz	w0, 40481c <ferror@plt+0x19dc>
  4046e0:	mov	w0, #0x0                   	// #0
  4046e4:	b	403fa8 <ferror@plt+0x1168>
  4046e8:	ldr	x1, [sp, #304]
  4046ec:	str	xzr, [x19, #1544]
  4046f0:	ldr	x0, [sp, #336]
  4046f4:	add	x21, x1, x21
  4046f8:	orr	x0, x24, x0
  4046fc:	cbnz	x0, 404600 <ferror@plt+0x17c0>
  404700:	ldr	x1, [sp, #120]
  404704:	mov	x0, x26
  404708:	bl	4063f0 <ferror@plt+0x35b0>
  40470c:	ldr	x0, [sp, #152]
  404710:	bl	409120 <ferror@plt+0x62e0>
  404714:	cbz	x0, 404e50 <ferror@plt+0x2010>
  404718:	mov	x24, #0x0                   	// #0
  40471c:	str	x0, [sp, #256]
  404720:	ldr	x28, [sp, #152]
  404724:	b	404614 <ferror@plt+0x17d4>
  404728:	add	x0, sp, #0x1c0
  40472c:	bl	4053a0 <ferror@plt+0x2560>
  404730:	tst	w0, #0xff
  404734:	b.eq	404b64 <ferror@plt+0x1d24>  // b.none
  404738:	ldrb	w0, [x19, #1228]
  40473c:	cbz	w0, 404b58 <ferror@plt+0x1d18>
  404740:	mov	w22, #0x0                   	// #0
  404744:	mov	w25, #0x0                   	// #0
  404748:	b	4035ac <ferror@plt+0x76c>
  40474c:	cbz	w22, 4039c4 <ferror@plt+0xb84>
  404750:	ldrb	w0, [x19, #1249]
  404754:	cbnz	w0, 404ca0 <ferror@plt+0x1e60>
  404758:	ldrb	w0, [x19, #1248]
  40475c:	cbz	w0, 403990 <ferror@plt+0xb50>
  404760:	ldr	x0, [x19, #1232]
  404764:	cbz	x0, 403990 <ferror@plt+0xb50>
  404768:	add	x0, sp, #0x130
  40476c:	mov	x1, x0
  404770:	mov	x0, x21
  404774:	mov	x21, x1
  404778:	bl	4053f8 <ferror@plt+0x25b8>
  40477c:	mov	x0, x21
  404780:	bl	402780 <strlen@plt>
  404784:	mov	x3, x0
  404788:	mov	w4, #0x5                   	// #5
  40478c:	adrp	x2, 417000 <_obstack_memory_used@@Base+0x16c8>
  404790:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x16c8>
  404794:	add	x2, x2, #0xc08
  404798:	add	x1, x1, #0xc28
  40479c:	mov	x0, #0x0                   	// #0
  4047a0:	bl	402c70 <dcngettext@plt>
  4047a4:	mov	x2, x0
  4047a8:	mov	x3, x21
  4047ac:	mov	w1, #0x0                   	// #0
  4047b0:	mov	w0, #0x0                   	// #0
  4047b4:	bl	4027b0 <error@plt>
  4047b8:	strb	w22, [sp, #583]
  4047bc:	b	403988 <ferror@plt+0xb48>
  4047c0:	ldr	x1, [sp, #120]
  4047c4:	mov	x0, x26
  4047c8:	bl	4063f0 <ferror@plt+0x35b0>
  4047cc:	cbz	x23, 4047d8 <ferror@plt+0x1998>
  4047d0:	add	x20, x20, #0x8
  4047d4:	b	404498 <ferror@plt+0x1658>
  4047d8:	ldr	x0, [sp, #304]
  4047dc:	bl	402ba0 <free@plt>
  4047e0:	ldr	x20, [x19, #768]
  4047e4:	cmp	xzr, x24, lsr #60
  4047e8:	lsl	x0, x24, #4
  4047ec:	cset	x1, ne  // ne = any
  4047f0:	tbnz	x24, #59, 405200 <ferror@plt+0x23c0>
  4047f4:	cbnz	x1, 405200 <ferror@plt+0x23c0>
  4047f8:	bl	414158 <ferror@plt+0x11318>
  4047fc:	mov	x21, x0
  404800:	mov	x1, x0
  404804:	cbz	x20, 404afc <ferror@plt+0x1cbc>
  404808:	add	x2, x20, #0xd
  40480c:	stp	x2, x20, [x1]
  404810:	add	x1, x1, #0x10
  404814:	ldr	x20, [x20]
  404818:	b	404804 <ferror@plt+0x19c4>
  40481c:	adrp	x0, 42d000 <_obstack_memory_used@@Base+0x176c8>
  404820:	ldr	x0, [x0, #1368]
  404824:	bl	414fb8 <ferror@plt+0x12178>
  404828:	cmn	w0, #0x1
  40482c:	b.ne	4046e0 <ferror@plt+0x18a0>  // b.any
  404830:	mov	w2, #0x5                   	// #5
  404834:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x6c8>
  404838:	mov	x0, #0x0                   	// #0
  40483c:	add	x1, x1, #0x4c8
  404840:	bl	402d20 <dcgettext@plt>
  404844:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x16c8>
  404848:	add	x1, x1, #0xc80
  40484c:	bl	405a20 <ferror@plt+0x2be0>
  404850:	mov	x1, #0x1                   	// #1
  404854:	mov	x0, x1
  404858:	lsl	x0, x0, #1
  40485c:	add	x1, x1, #0x1
  404860:	cmp	x25, x0
  404864:	b.hi	404858 <ferror@plt+0x1a18>  // b.pmore
  404868:	lsl	x0, x1, #5
  40486c:	str	x0, [sp, #200]
  404870:	b	4044c4 <ferror@plt+0x1684>
  404874:	ldr	x0, [sp, #200]
  404878:	adrp	x22, 42d000 <_obstack_memory_used@@Base+0x176c8>
  40487c:	add	x1, x22, #0x3b0
  404880:	str	x1, [sp, #136]
  404884:	add	x21, x0, #0x1
  404888:	add	x22, x0, #0x2
  40488c:	nop
  404890:	cbz	x28, 404a3c <ferror@plt+0x1bfc>
  404894:	ldr	x1, [x20, x28, lsl #3]
  404898:	add	x2, sp, #0x210
  40489c:	ldrb	w0, [x1]
  4048a0:	cmp	w0, #0x2d
  4048a4:	b.ne	404a28 <ferror@plt+0x1be8>  // b.any
  4048a8:	ldrb	w0, [x1, #1]
  4048ac:	cbnz	w0, 404a28 <ferror@plt+0x1be8>
  4048b0:	mov	w1, #0x0                   	// #0
  4048b4:	bl	402d10 <__fxstat@plt>
  4048b8:	cmp	w0, #0x0
  4048bc:	cset	w0, ne  // ne = any
  4048c0:	cbnz	w0, 404edc <ferror@plt+0x209c>
  4048c4:	ldr	w0, [sp, #544]
  4048c8:	and	w0, w0, #0xf000
  4048cc:	cmp	w0, #0x8, lsl #12
  4048d0:	b.eq	404934 <ferror@plt+0x1af4>  // b.none
  4048d4:	ldr	x1, [x19, #1576]
  4048d8:	cbnz	x1, 404af4 <ferror@plt+0x1cb4>
  4048dc:	ldr	x0, [x19, #1592]
  4048e0:	mov	x27, #0x20000               	// #131072
  4048e4:	cbz	x0, 40494c <ferror@plt+0x1b0c>
  4048e8:	mul	x0, x21, x27
  4048ec:	ldr	x1, [x19, #1592]
  4048f0:	add	x0, x0, #0x1
  4048f4:	udiv	x5, x0, x21
  4048f8:	cmp	x27, x5
  4048fc:	b.ne	404af4 <ferror@plt+0x1cb4>  // b.any
  404900:	sub	x2, x1, x22
  404904:	cmp	x0, x2
  404908:	b.cs	404af4 <ferror@plt+0x1cb4>  // b.hs, b.nlast
  40490c:	add	x28, x28, #0x1
  404910:	add	x22, x22, x0
  404914:	cmp	x28, x23
  404918:	b.cc	404890 <ferror@plt+0x1a50>  // b.lo, b.ul, b.last
  40491c:	ldr	x1, [sp, #200]
  404920:	add	x0, sp, #0x130
  404924:	mov	x2, x22
  404928:	str	x0, [sp, #144]
  40492c:	bl	405b48 <ferror@plt+0x2d08>
  404930:	b	4044d4 <ferror@plt+0x1694>
  404934:	ldr	x0, [x19, #1592]
  404938:	ldr	x27, [sp, #576]
  40493c:	cbnz	x0, 4048e8 <ferror@plt+0x1aa8>
  404940:	ldr	x0, [x19, #1576]
  404944:	str	x0, [x19, #1592]
  404948:	cbnz	x0, 4048e8 <ferror@plt+0x1aa8>
  40494c:	add	x1, sp, #0x100
  404950:	mov	w0, #0x2                   	// #2
  404954:	bl	402cb0 <getrlimit@plt>
  404958:	cmp	w0, #0x0
  40495c:	ldr	x5, [sp, #256]
  404960:	add	x1, sp, #0x100
  404964:	mov	w0, #0x9                   	// #9
  404968:	csinv	x5, x5, xzr, eq  // eq = none
  40496c:	str	x5, [sp, #128]
  404970:	bl	402cb0 <getrlimit@plt>
  404974:	ldr	x5, [sp, #128]
  404978:	cbnz	w0, 404988 <ferror@plt+0x1b48>
  40497c:	ldr	x0, [sp, #256]
  404980:	cmp	x5, x0
  404984:	csel	x5, x5, x0, ls  // ls = plast
  404988:	lsr	x5, x5, #1
  40498c:	add	x1, sp, #0x100
  404990:	mov	w0, #0x5                   	// #5
  404994:	str	x5, [sp, #128]
  404998:	bl	402cb0 <getrlimit@plt>
  40499c:	ldr	x5, [sp, #128]
  4049a0:	cbnz	w0, 4049bc <ferror@plt+0x1b7c>
  4049a4:	ldr	x0, [sp, #256]
  4049a8:	mov	x1, #0xf                   	// #15
  4049ac:	lsr	x0, x0, #4
  4049b0:	mul	x0, x0, x1
  4049b4:	cmp	x5, x0
  4049b8:	csel	x5, x5, x0, ls  // ls = plast
  4049bc:	str	x5, [sp, #128]
  4049c0:	bl	40ed18 <ferror@plt+0xbed8>
  4049c4:	fmov	d8, d0
  4049c8:	bl	40ec98 <ferror@plt+0xbe58>
  4049cc:	fmov	d1, #1.250000000000000000e-01
  4049d0:	fmov	d2, #7.500000000000000000e-01
  4049d4:	ldr	x5, [sp, #128]
  4049d8:	fmul	d1, d0, d1
  4049dc:	fmul	d0, d0, d2
  4049e0:	fcmpe	d8, d1
  4049e4:	fcsel	d8, d8, d1, gt
  4049e8:	scvtf	d1, x5
  4049ec:	fcmpe	d0, d1
  4049f0:	b.pl	4049f8 <ferror@plt+0x1bb8>  // b.nfrst
  4049f4:	fcvtzu	x5, d0
  4049f8:	ucvtf	d0, x5
  4049fc:	fcmpe	d0, d8
  404a00:	b.le	404a08 <ferror@plt+0x1bc8>
  404a04:	fcvtzu	x5, d8
  404a08:	ldr	x0, [sp, #136]
  404a0c:	mov	w1, #0x22                  	// #34
  404a10:	ldr	w0, [x0, #16]
  404a14:	umull	x0, w0, w1
  404a18:	cmp	x0, x5
  404a1c:	csel	x0, x0, x5, cs  // cs = hs, nlast
  404a20:	str	x0, [x19, #1592]
  404a24:	b	4048e8 <ferror@plt+0x1aa8>
  404a28:	mov	w0, #0x0                   	// #0
  404a2c:	bl	402de0 <__xstat@plt>
  404a30:	cmp	w0, #0x0
  404a34:	cset	w0, ne  // ne = any
  404a38:	b	4048c0 <ferror@plt+0x1a80>
  404a3c:	mov	x0, x26
  404a40:	bl	402880 <fileno@plt>
  404a44:	add	x2, sp, #0x210
  404a48:	mov	w1, w0
  404a4c:	mov	w0, #0x0                   	// #0
  404a50:	bl	402d10 <__fxstat@plt>
  404a54:	cmp	w0, #0x0
  404a58:	cset	w0, ne  // ne = any
  404a5c:	b	4048c0 <ferror@plt+0x1a80>
  404a60:	ldr	x3, [sp, #528]
  404a64:	adrp	x22, 42d000 <_obstack_memory_used@@Base+0x176c8>
  404a68:	ldr	x0, [sp, #552]
  404a6c:	mov	w2, #0x5                   	// #5
  404a70:	ldr	x23, [x22, #1336]
  404a74:	add	x3, x3, x0
  404a78:	sub	x3, x3, x19
  404a7c:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x16c8>
  404a80:	mov	x0, #0x0                   	// #0
  404a84:	add	x1, x1, #0xcb0
  404a88:	add	x27, x27, x3, asr #5
  404a8c:	mov	w20, #0x0                   	// #0
  404a90:	bl	402d20 <dcgettext@plt>
  404a94:	mov	x21, x0
  404a98:	adrp	x1, 42d000 <_obstack_memory_used@@Base+0x176c8>
  404a9c:	mov	x0, x27
  404aa0:	ldr	x26, [x1, #3008]
  404aa4:	add	x1, sp, #0x100
  404aa8:	bl	40e790 <ferror@plt+0xb950>
  404aac:	mov	x5, x0
  404ab0:	mov	x4, x25
  404ab4:	mov	x3, x26
  404ab8:	mov	x2, x21
  404abc:	mov	x0, x23
  404ac0:	mov	w1, #0x1                   	// #1
  404ac4:	bl	402b30 <__fprintf_chk@plt>
  404ac8:	ldr	x21, [x22, #1336]
  404acc:	mov	w2, #0x5                   	// #5
  404ad0:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x16c8>
  404ad4:	mov	x0, #0x0                   	// #0
  404ad8:	add	x1, x1, #0xcc8
  404adc:	bl	402d20 <dcgettext@plt>
  404ae0:	mov	x1, x21
  404ae4:	mov	x2, x0
  404ae8:	mov	x0, x19
  404aec:	bl	406a98 <ferror@plt+0x3c58>
  404af0:	b	403f88 <ferror@plt+0x1148>
  404af4:	mov	x22, x1
  404af8:	b	40491c <ferror@plt+0x1adc>
  404afc:	ldr	x3, [sp, #152]
  404b00:	mov	x2, x24
  404b04:	mov	x1, x24
  404b08:	mov	x0, x21
  404b0c:	bl	40a888 <ferror@plt+0x7a48>
  404b10:	mov	x0, x21
  404b14:	bl	402ba0 <free@plt>
  404b18:	b	4046bc <ferror@plt+0x187c>
  404b1c:	mov	x1, #0x10                  	// #16
  404b20:	mov	x0, x23
  404b24:	bl	414268 <ferror@plt+0x11428>
  404b28:	mov	x1, #0x0                   	// #0
  404b2c:	lsl	x2, x1, #4
  404b30:	cmp	x1, x22
  404b34:	ldr	x3, [x20, x1, lsl #3]
  404b38:	add	x1, x1, #0x1
  404b3c:	str	x3, [x0, x2]
  404b40:	b.ne	404b2c <ferror@plt+0x1cec>  // b.any
  404b44:	ldr	x3, [sp, #152]
  404b48:	mov	x2, x23
  404b4c:	mov	x1, #0x0                   	// #0
  404b50:	bl	40a888 <ferror@plt+0x7a48>
  404b54:	b	4046d8 <ferror@plt+0x1898>
  404b58:	ldrb	w0, [sp, #503]
  404b5c:	strb	w0, [x19, #1201]
  404b60:	b	4039d0 <ferror@plt+0xb90>
  404b64:	mov	x1, #0x48                  	// #72
  404b68:	add	x0, sp, #0x1c0
  404b6c:	bl	4142a0 <ferror@plt+0x11460>
  404b70:	ldr	x1, [x19, #1232]
  404b74:	add	x2, x19, #0x4d0
  404b78:	cbz	x1, 404b88 <ferror@plt+0x1d48>
  404b7c:	add	x2, x1, #0x40
  404b80:	ldr	x1, [x1, #64]
  404b84:	b	404b78 <ferror@plt+0x1d38>
  404b88:	ldrb	w25, [sp, #499]
  404b8c:	mov	w22, #0x1                   	// #1
  404b90:	str	x0, [x2]
  404b94:	str	xzr, [x0, #64]
  404b98:	ldr	x0, [x19, #1232]
  404b9c:	cbnz	x0, 403558 <ferror@plt+0x718>
  404ba0:	b	4035a4 <ferror@plt+0x764>
  404ba4:	ldr	x1, [sp, #200]
  404ba8:	add	x0, x0, #0x1
  404bac:	adrp	x2, 417000 <_obstack_memory_used@@Base+0x16c8>
  404bb0:	add	x2, x2, #0x848
  404bb4:	str	x3, [sp, #160]
  404bb8:	bl	4062f0 <ferror@plt+0x34b0>
  404bbc:	ldr	x1, [sp, #384]
  404bc0:	ldr	x3, [sp, #160]
  404bc4:	sub	x2, x1, #0x1
  404bc8:	str	x2, [sp, #384]
  404bcc:	cbz	x1, 404f3c <ferror@plt+0x20fc>
  404bd0:	ldrb	w1, [x0]
  404bd4:	cmp	w1, #0x2e
  404bd8:	b.eq	404d28 <ferror@plt+0x1ee8>  // b.none
  404bdc:	add	x1, sp, #0x170
  404be0:	mov	w2, #0x1                   	// #1
  404be4:	str	x3, [sp, #160]
  404be8:	bl	4054d8 <ferror@plt+0x2698>
  404bec:	ldr	x3, [sp, #160]
  404bf0:	b	403e5c <ferror@plt+0x101c>
  404bf4:	add	x1, sp, #0x178
  404bf8:	add	x0, x0, #0x1
  404bfc:	adrp	x2, 417000 <_obstack_memory_used@@Base+0x16c8>
  404c00:	add	x2, x2, #0x770
  404c04:	str	x3, [sp, #160]
  404c08:	bl	4062f0 <ferror@plt+0x34b0>
  404c0c:	ldr	x2, [sp, #376]
  404c10:	mov	x1, x2
  404c14:	sub	x2, x2, #0x1
  404c18:	str	x2, [sp, #376]
  404c1c:	cbz	x1, 404ec4 <ferror@plt+0x2084>
  404c20:	ldr	x3, [sp, #160]
  404c24:	ldr	x1, [sp, #368]
  404c28:	b	403e28 <ferror@plt+0xfe8>
  404c2c:	mov	w2, #0x5                   	// #5
  404c30:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x16c8>
  404c34:	mov	x0, #0x0                   	// #0
  404c38:	add	x1, x1, #0x9e8
  404c3c:	bl	402d20 <dcgettext@plt>
  404c40:	mov	x19, x0
  404c44:	ldr	x1, [x20]
  404c48:	mov	w0, #0x4                   	// #4
  404c4c:	bl	4110c0 <ferror@plt+0xe280>
  404c50:	mov	x3, x0
  404c54:	mov	x2, x19
  404c58:	mov	w1, #0x0                   	// #0
  404c5c:	mov	w0, #0x0                   	// #0
  404c60:	bl	4027b0 <error@plt>
  404c64:	adrp	x0, 42d000 <_obstack_memory_used@@Base+0x176c8>
  404c68:	mov	w2, #0x5                   	// #5
  404c6c:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x16c8>
  404c70:	add	x1, x1, #0xa00
  404c74:	ldr	x19, [x0, #1336]
  404c78:	mov	x0, #0x0                   	// #0
  404c7c:	bl	402d20 <dcgettext@plt>
  404c80:	mov	x3, x0
  404c84:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x26c8>
  404c88:	mov	x0, x19
  404c8c:	add	x2, x2, #0xd98
  404c90:	mov	w1, #0x1                   	// #1
  404c94:	bl	402b30 <__fprintf_chk@plt>
  404c98:	mov	w0, #0x2                   	// #2
  404c9c:	bl	40b028 <ferror@plt+0x81e8>
  404ca0:	ldr	x0, [x19, #1232]
  404ca4:	cbz	x0, 4039c4 <ferror@plt+0xb84>
  404ca8:	add	x0, sp, #0x130
  404cac:	mov	x1, x0
  404cb0:	mov	x0, x21
  404cb4:	mov	x21, x1
  404cb8:	bl	4053f8 <ferror@plt+0x25b8>
  404cbc:	mov	x0, x21
  404cc0:	bl	402780 <strlen@plt>
  404cc4:	mov	x3, x0
  404cc8:	mov	w4, #0x5                   	// #5
  404ccc:	adrp	x2, 417000 <_obstack_memory_used@@Base+0x16c8>
  404cd0:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x16c8>
  404cd4:	add	x2, x2, #0xc08
  404cd8:	add	x1, x1, #0xc28
  404cdc:	mov	x0, #0x0                   	// #0
  404ce0:	bl	402c70 <dcngettext@plt>
  404ce4:	mov	x2, x0
  404ce8:	mov	x3, x21
  404cec:	mov	w0, #0x0                   	// #0
  404cf0:	mov	w1, #0x0                   	// #0
  404cf4:	bl	4027b0 <error@plt>
  404cf8:	mov	w0, #0x1                   	// #1
  404cfc:	strb	w0, [sp, #583]
  404d00:	b	403988 <ferror@plt+0xb48>
  404d04:	mov	w0, #0x1                   	// #1
  404d08:	b	4041a8 <ferror@plt+0x1368>
  404d0c:	ldrb	w1, [x1, #1]
  404d10:	sub	w1, w1, #0x30
  404d14:	cmp	w1, #0x9
  404d18:	cset	w8, ls  // ls = plast
  404d1c:	b	4041f4 <ferror@plt+0x13b4>
  404d20:	add	x1, x1, #0x1
  404d24:	b	403da4 <ferror@plt+0xf64>
  404d28:	add	x0, x0, #0x1
  404d2c:	add	x1, sp, #0x188
  404d30:	adrp	x2, 417000 <_obstack_memory_used@@Base+0x16c8>
  404d34:	add	x2, x2, #0x770
  404d38:	str	x3, [sp, #160]
  404d3c:	bl	4062f0 <ferror@plt+0x34b0>
  404d40:	ldr	x3, [sp, #160]
  404d44:	b	404bdc <ferror@plt+0x1d9c>
  404d48:	mov	w0, #0x2                   	// #2
  404d4c:	bl	40eb40 <ferror@plt+0xbd00>
  404d50:	mov	x1, #0x8                   	// #8
  404d54:	cmp	x0, x1
  404d58:	csel	x0, x0, x1, ls  // ls = plast
  404d5c:	str	x0, [sp, #192]
  404d60:	b	404458 <ferror@plt+0x1618>
  404d64:	mov	x0, #0xffffffffffffffff    	// #-1
  404d68:	str	x0, [sp, #192]
  404d6c:	b	4032a4 <ferror@plt+0x464>
  404d70:	mov	w20, #0x1                   	// #1
  404d74:	b	403f88 <ferror@plt+0x1148>
  404d78:	ldr	x1, [sp, #120]
  404d7c:	mov	x0, x26
  404d80:	add	x20, x20, #0x8
  404d84:	str	x2, [sp, #336]
  404d88:	bl	4063f0 <ferror@plt+0x35b0>
  404d8c:	b	404498 <ferror@plt+0x1658>
  404d90:	ldrb	w1, [x1]
  404d94:	cmp	w1, #0x25
  404d98:	b.eq	404dbc <ferror@plt+0x1f7c>  // b.none
  404d9c:	cmp	w1, #0x62
  404da0:	b.eq	403f08 <ferror@plt+0x10c8>  // b.none
  404da4:	b	4041a8 <ferror@plt+0x1368>
  404da8:	ldp	x1, x0, [sp, #368]
  404dac:	orr	x0, x0, x1
  404db0:	cbnz	x0, 403420 <ferror@plt+0x5e0>
  404db4:	str	x9, [sp, #368]
  404db8:	b	403420 <ferror@plt+0x5e0>
  404dbc:	str	x8, [sp, #160]
  404dc0:	bl	40ec98 <ferror@plt+0xbe58>
  404dc4:	ldr	d1, [sp, #528]
  404dc8:	mov	x0, #0x4059000000000000    	// #4636737291354636288
  404dcc:	fmov	d3, x0
  404dd0:	mov	x0, #0x43f0000000000000    	// #4895412794951729152
  404dd4:	fmov	d2, x0
  404dd8:	ucvtf	d1, d1
  404ddc:	ldr	x8, [sp, #160]
  404de0:	fmul	d0, d1, d0
  404de4:	fdiv	d0, d0, d3
  404de8:	fcmpe	d0, d2
  404dec:	b.pl	404d04 <ferror@plt+0x1ec4>  // b.nfrst
  404df0:	fcvtzu	d0, d0
  404df4:	str	d0, [sp, #528]
  404df8:	b	403f08 <ferror@plt+0x10c8>
  404dfc:	mov	w0, #0x0                   	// #0
  404e00:	bl	40b028 <ferror@plt+0x81e8>
  404e04:	add	x1, sp, #0x178
  404e08:	mov	x2, #0x0                   	// #0
  404e0c:	add	x0, x0, #0x1
  404e10:	str	w8, [sp, #160]
  404e14:	bl	4062f0 <ferror@plt+0x34b0>
  404e18:	ldp	x1, x2, [sp, #368]
  404e1c:	ldr	w8, [sp, #160]
  404e20:	ldr	x3, [sp, #208]
  404e24:	orr	x1, x1, x2
  404e28:	adrp	x2, 42d000 <_obstack_memory_used@@Base+0x176c8>
  404e2c:	add	x4, x2, #0x540
  404e30:	cbz	x1, 404274 <ferror@plt+0x1434>
  404e34:	b	40427c <ferror@plt+0x143c>
  404e38:	add	x1, sp, #0x210
  404e3c:	strh	wzr, [x0, #48]
  404e40:	strb	wzr, [x0, #55]
  404e44:	bl	4053f8 <ferror@plt+0x25b8>
  404e48:	add	x0, sp, #0x210
  404e4c:	bl	405920 <ferror@plt+0x2ae0>
  404e50:	ldr	x0, [sp, #152]
  404e54:	bl	4063c0 <ferror@plt+0x3580>
  404e58:	adrp	x0, 417000 <_obstack_memory_used@@Base+0x16c8>
  404e5c:	add	x0, x0, #0x7c0
  404e60:	bl	405920 <ferror@plt+0x2ae0>
  404e64:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x16c8>
  404e68:	add	x1, x1, #0x958
  404e6c:	mov	w2, #0x5                   	// #5
  404e70:	mov	x0, #0x0                   	// #0
  404e74:	bl	402d20 <dcgettext@plt>
  404e78:	mov	x2, x0
  404e7c:	mov	w1, #0x0                   	// #0
  404e80:	mov	w0, #0x2                   	// #2
  404e84:	bl	4027b0 <error@plt>
  404e88:	mov	w2, #0x5                   	// #5
  404e8c:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x6c8>
  404e90:	mov	x0, #0x0                   	// #0
  404e94:	add	x1, x1, #0x4c8
  404e98:	bl	402d20 <dcgettext@plt>
  404e9c:	ldr	x1, [sp, #144]
  404ea0:	bl	405a20 <ferror@plt+0x2be0>
  404ea4:	mov	w2, #0x5                   	// #5
  404ea8:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x6c8>
  404eac:	add	x1, x1, #0x4a8
  404eb0:	bl	402d20 <dcgettext@plt>
  404eb4:	ldr	x1, [sp, #144]
  404eb8:	bl	405a20 <ferror@plt+0x2be0>
  404ebc:	ldr	x0, [sp, #120]
  404ec0:	bl	4063c0 <ferror@plt+0x3580>
  404ec4:	adrp	x0, 42d000 <_obstack_memory_used@@Base+0x176c8>
  404ec8:	add	x0, x0, #0x540
  404ecc:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x16c8>
  404ed0:	add	x1, x1, #0x828
  404ed4:	ldr	x0, [x0]
  404ed8:	bl	405958 <ferror@plt+0x2b18>
  404edc:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x16c8>
  404ee0:	mov	w2, #0x5                   	// #5
  404ee4:	add	x1, x1, #0xce8
  404ee8:	mov	x0, #0x0                   	// #0
  404eec:	bl	402d20 <dcgettext@plt>
  404ef0:	ldr	x1, [x20, x28, lsl #3]
  404ef4:	bl	405a20 <ferror@plt+0x2be0>
  404ef8:	mov	x0, x25
  404efc:	bl	4063c0 <ferror@plt+0x3580>
  404f00:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x16c8>
  404f04:	mov	w2, #0x5                   	// #5
  404f08:	add	x1, x1, #0x970
  404f0c:	mov	x0, #0x0                   	// #0
  404f10:	bl	402d20 <dcgettext@plt>
  404f14:	mov	x19, x0
  404f18:	adrp	x0, 42d000 <_obstack_memory_used@@Base+0x176c8>
  404f1c:	add	x0, x0, #0x540
  404f20:	ldr	x0, [x0]
  404f24:	bl	412348 <ferror@plt+0xf508>
  404f28:	mov	x3, x0
  404f2c:	mov	x2, x19
  404f30:	mov	w1, #0x0                   	// #0
  404f34:	mov	w0, #0x2                   	// #2
  404f38:	bl	4027b0 <error@plt>
  404f3c:	ldr	x0, [x3, #1344]
  404f40:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x16c8>
  404f44:	add	x1, x1, #0x810
  404f48:	bl	405958 <ferror@plt+0x2b18>
  404f4c:	ldr	x0, [sp, #160]
  404f50:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x16c8>
  404f54:	add	x1, x1, #0x790
  404f58:	bl	405958 <ferror@plt+0x2b18>
  404f5c:	add	x1, sp, #0x188
  404f60:	adrp	x2, 417000 <_obstack_memory_used@@Base+0x16c8>
  404f64:	add	x0, x0, #0x1
  404f68:	add	x2, x2, #0x770
  404f6c:	bl	4062f0 <ferror@plt+0x34b0>
  404f70:	b	4042e4 <ferror@plt+0x14a4>
  404f74:	ldr	x0, [sp, #128]
  404f78:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x6c8>
  404f7c:	mov	w2, #0x1112                	// #4370
  404f80:	add	x1, x1, #0x638
  404f84:	add	x3, x0, #0x5b0
  404f88:	adrp	x0, 417000 <_obstack_memory_used@@Base+0x16c8>
  404f8c:	add	x0, x0, #0x998
  404f90:	bl	402da0 <__assert_fail@plt>
  404f94:	mov	w2, #0x5                   	// #5
  404f98:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x6c8>
  404f9c:	mov	x0, #0x0                   	// #0
  404fa0:	add	x1, x1, #0x4a8
  404fa4:	bl	402d20 <dcgettext@plt>
  404fa8:	ldr	x1, [sp, #152]
  404fac:	bl	405a20 <ferror@plt+0x2be0>
  404fb0:	ldr	x1, [sp, #128]
  404fb4:	mov	x4, x8
  404fb8:	mov	w2, #0x7                   	// #7
  404fbc:	add	x3, x1, #0x1b0
  404fc0:	ldr	w1, [sp, #192]
  404fc4:	bl	414a60 <ferror@plt+0x11c20>
  404fc8:	mov	w2, #0x5                   	// #5
  404fcc:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x16c8>
  404fd0:	mov	x0, #0x0                   	// #0
  404fd4:	add	x1, x1, #0x8b8
  404fd8:	str	x8, [sp, #120]
  404fdc:	bl	402d20 <dcgettext@plt>
  404fe0:	ldp	x8, x1, [sp, #120]
  404fe4:	mov	x19, x0
  404fe8:	add	x25, x1, #0x1b0
  404fec:	ldr	w1, [sp, #220]
  404ff0:	mov	x0, x8
  404ff4:	sbfiz	x1, x1, #5, #32
  404ff8:	ldr	x20, [x25, x1]
  404ffc:	bl	412348 <ferror@plt+0xf508>
  405000:	mov	x2, x19
  405004:	mov	x4, x0
  405008:	mov	x3, x20
  40500c:	mov	w1, #0x0                   	// #0
  405010:	mov	w0, #0x0                   	// #0
  405014:	bl	4027b0 <error@plt>
  405018:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x16c8>
  40501c:	add	x1, x1, #0x8d8
  405020:	mov	w2, #0x5                   	// #5
  405024:	mov	x0, #0x0                   	// #0
  405028:	bl	402d20 <dcgettext@plt>
  40502c:	mov	x19, x0
  405030:	adrp	x0, 417000 <_obstack_memory_used@@Base+0x16c8>
  405034:	add	x0, x0, #0x8f8
  405038:	bl	412348 <ferror@plt+0xf508>
  40503c:	mov	x4, x0
  405040:	mov	x3, x20
  405044:	mov	x2, x19
  405048:	mov	w1, #0x0                   	// #0
  40504c:	mov	w0, #0x2                   	// #2
  405050:	bl	4027b0 <error@plt>
  405054:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x16c8>
  405058:	mov	w2, #0x5                   	// #5
  40505c:	add	x1, x1, #0x988
  405060:	b	404e70 <ferror@plt+0x2030>
  405064:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x16c8>
  405068:	mov	w2, #0x5                   	// #5
  40506c:	add	x1, x1, #0x920
  405070:	b	404e70 <ferror@plt+0x2030>
  405074:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x16c8>
  405078:	mov	w2, #0x5                   	// #5
  40507c:	add	x1, x1, #0x7c8
  405080:	b	404e70 <ferror@plt+0x2030>
  405084:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x16c8>
  405088:	mov	w2, #0x5                   	// #5
  40508c:	add	x1, x1, #0x900
  405090:	b	404e70 <ferror@plt+0x2030>
  405094:	ldr	x0, [x3, #1344]
  405098:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x16c8>
  40509c:	add	x1, x1, #0x790
  4050a0:	bl	405958 <ferror@plt+0x2b18>
  4050a4:	cmp	w26, #0x0
  4050a8:	adrp	x1, 42d000 <_obstack_memory_used@@Base+0x176c8>
  4050ac:	add	x1, x1, #0x3b0
  4050b0:	mov	w2, #0x6f                  	// #111
  4050b4:	add	x0, x1, #0xf0
  4050b8:	csel	w26, w26, w2, ne  // ne = any
  4050bc:	strb	w26, [x1, #240]
  4050c0:	bl	405920 <ferror@plt+0x2ae0>
  4050c4:	ldr	x0, [sp, #136]
  4050c8:	cbz	x0, 403484 <ferror@plt+0x644>
  4050cc:	cbnz	x27, 404c2c <ferror@plt+0x1dec>
  4050d0:	ldr	x0, [sp, #136]
  4050d4:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x6c8>
  4050d8:	add	x1, x1, #0x618
  4050dc:	bl	408f98 <ferror@plt+0x6158>
  4050e0:	mov	x21, x0
  4050e4:	cbz	x0, 4051c4 <ferror@plt+0x2384>
  4050e8:	add	x0, sp, #0x290
  4050ec:	bl	412ed8 <ferror@plt+0x10098>
  4050f0:	add	x1, sp, #0x290
  4050f4:	mov	x0, x21
  4050f8:	bl	412f98 <ferror@plt+0x10158>
  4050fc:	tst	w0, #0xff
  405100:	b.eq	4051ec <ferror@plt+0x23ac>  // b.none
  405104:	ldr	x1, [sp, #136]
  405108:	mov	x0, x21
  40510c:	bl	4063f0 <ferror@plt+0x35b0>
  405110:	ldr	x22, [sp, #656]
  405114:	cbz	x22, 4051cc <ferror@plt+0x238c>
  405118:	mov	x0, x20
  40511c:	bl	402ba0 <free@plt>
  405120:	ldr	x20, [sp, #664]
  405124:	mov	x21, x20
  405128:	b	405144 <ferror@plt+0x2304>
  40512c:	ldrb	w0, [x0]
  405130:	add	x27, x27, #0x1
  405134:	cbz	w0, 405184 <ferror@plt+0x2344>
  405138:	add	x21, x21, #0x8
  40513c:	cmp	x22, x27
  405140:	b.eq	403484 <ferror@plt+0x644>  // b.none
  405144:	ldr	x0, [x21]
  405148:	ldrb	w1, [x0]
  40514c:	cmp	w1, #0x2d
  405150:	b.ne	40512c <ferror@plt+0x22ec>  // b.any
  405154:	ldrb	w1, [x0, #1]
  405158:	cbnz	w1, 40512c <ferror@plt+0x22ec>
  40515c:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x16c8>
  405160:	mov	w2, #0x5                   	// #5
  405164:	add	x1, x1, #0xa58
  405168:	mov	x0, #0x0                   	// #0
  40516c:	bl	402d20 <dcgettext@plt>
  405170:	mov	x19, x0
  405174:	ldr	x1, [x21]
  405178:	mov	w0, #0x4                   	// #4
  40517c:	bl	4110c0 <ferror@plt+0xe280>
  405180:	b	404f28 <ferror@plt+0x20e8>
  405184:	mov	w2, #0x5                   	// #5
  405188:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x16c8>
  40518c:	mov	x0, #0x0                   	// #0
  405190:	add	x1, x1, #0xa98
  405194:	bl	402d20 <dcgettext@plt>
  405198:	mov	x19, x0
  40519c:	ldr	x2, [sp, #136]
  4051a0:	mov	w1, #0x3                   	// #3
  4051a4:	mov	w0, #0x0                   	// #0
  4051a8:	bl	411a40 <ferror@plt+0xec00>
  4051ac:	mov	x3, x0
  4051b0:	mov	x4, x27
  4051b4:	mov	x2, x19
  4051b8:	mov	w1, #0x0                   	// #0
  4051bc:	mov	w0, #0x2                   	// #2
  4051c0:	bl	4027b0 <error@plt>
  4051c4:	ldr	x0, [sp, #136]
  4051c8:	bl	4063c0 <ferror@plt+0x3580>
  4051cc:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x16c8>
  4051d0:	add	x1, x1, #0xac0
  4051d4:	mov	w2, #0x5                   	// #5
  4051d8:	mov	x0, #0x0                   	// #0
  4051dc:	bl	402d20 <dcgettext@plt>
  4051e0:	mov	x19, x0
  4051e4:	ldr	x1, [sp, #136]
  4051e8:	b	405178 <ferror@plt+0x2338>
  4051ec:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x16c8>
  4051f0:	mov	w2, #0x5                   	// #5
  4051f4:	add	x1, x1, #0xa38
  4051f8:	mov	x0, #0x0                   	// #0
  4051fc:	b	4051dc <ferror@plt+0x239c>
  405200:	bl	414320 <ferror@plt+0x114e0>
  405204:	adrp	x0, 42d000 <_obstack_memory_used@@Base+0x176c8>
  405208:	add	x0, x0, #0x540
  40520c:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x16c8>
  405210:	add	x1, x1, #0x810
  405214:	ldr	x0, [x0]
  405218:	bl	405958 <ferror@plt+0x2b18>
  40521c:	mov	w2, #0x5                   	// #5
  405220:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x16c8>
  405224:	mov	x0, #0x0                   	// #0
  405228:	add	x1, x1, #0xc88
  40522c:	bl	402d20 <dcgettext@plt>
  405230:	mov	x19, x0
  405234:	ldr	x1, [x20, #8]
  405238:	mov	w0, #0x4                   	// #4
  40523c:	bl	4110c0 <ferror@plt+0xe280>
  405240:	mov	x3, x0
  405244:	mov	w4, w26
  405248:	mov	x2, x19
  40524c:	mov	w1, #0x0                   	// #0
  405250:	mov	w0, #0x2                   	// #2
  405254:	bl	4027b0 <error@plt>
  405258:	adrp	x1, 42d000 <_obstack_memory_used@@Base+0x176c8>
  40525c:	add	x1, x1, #0x3b0
  405260:	add	x0, x1, #0x100
  405264:	strb	w26, [x1, #256]
  405268:	bl	405920 <ferror@plt+0x2ae0>
  40526c:	mov	x29, #0x0                   	// #0
  405270:	mov	x30, #0x0                   	// #0
  405274:	mov	x5, x0
  405278:	ldr	x1, [sp]
  40527c:	add	x2, sp, #0x8
  405280:	mov	x6, sp
  405284:	movz	x0, #0x0, lsl #48
  405288:	movk	x0, #0x0, lsl #32
  40528c:	movk	x0, #0x40, lsl #16
  405290:	movk	x0, #0x2e50
  405294:	movz	x3, #0x0, lsl #48
  405298:	movk	x3, #0x0, lsl #32
  40529c:	movk	x3, #0x41, lsl #16
  4052a0:	movk	x3, #0x6218
  4052a4:	movz	x4, #0x0, lsl #48
  4052a8:	movk	x4, #0x0, lsl #32
  4052ac:	movk	x4, #0x41, lsl #16
  4052b0:	movk	x4, #0x6298
  4052b4:	bl	402960 <__libc_start_main@plt>
  4052b8:	bl	402a80 <abort@plt>
  4052bc:	adrp	x0, 42c000 <_obstack_memory_used@@Base+0x166c8>
  4052c0:	ldr	x0, [x0, #4064]
  4052c4:	cbz	x0, 4052cc <ferror@plt+0x248c>
  4052c8:	b	402a50 <__gmon_start__@plt>
  4052cc:	ret
  4052d0:	adrp	x0, 42d000 <_obstack_memory_used@@Base+0x176c8>
  4052d4:	add	x0, x0, #0x530
  4052d8:	adrp	x1, 42d000 <_obstack_memory_used@@Base+0x176c8>
  4052dc:	add	x1, x1, #0x530
  4052e0:	cmp	x1, x0
  4052e4:	b.eq	4052fc <ferror@plt+0x24bc>  // b.none
  4052e8:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x6c8>
  4052ec:	ldr	x1, [x1, #712]
  4052f0:	cbz	x1, 4052fc <ferror@plt+0x24bc>
  4052f4:	mov	x16, x1
  4052f8:	br	x16
  4052fc:	ret
  405300:	adrp	x0, 42d000 <_obstack_memory_used@@Base+0x176c8>
  405304:	add	x0, x0, #0x530
  405308:	adrp	x1, 42d000 <_obstack_memory_used@@Base+0x176c8>
  40530c:	add	x1, x1, #0x530
  405310:	sub	x1, x1, x0
  405314:	lsr	x2, x1, #63
  405318:	add	x1, x2, x1, asr #3
  40531c:	cmp	xzr, x1, asr #1
  405320:	asr	x1, x1, #1
  405324:	b.eq	40533c <ferror@plt+0x24fc>  // b.none
  405328:	adrp	x2, 416000 <_obstack_memory_used@@Base+0x6c8>
  40532c:	ldr	x2, [x2, #720]
  405330:	cbz	x2, 40533c <ferror@plt+0x24fc>
  405334:	mov	x16, x2
  405338:	br	x16
  40533c:	ret
  405340:	stp	x29, x30, [sp, #-32]!
  405344:	mov	x29, sp
  405348:	str	x19, [sp, #16]
  40534c:	adrp	x19, 42d000 <_obstack_memory_used@@Base+0x176c8>
  405350:	ldrb	w0, [x19, #1384]
  405354:	cbnz	w0, 405364 <ferror@plt+0x2524>
  405358:	bl	4052d0 <ferror@plt+0x2490>
  40535c:	mov	w0, #0x1                   	// #1
  405360:	strb	w0, [x19, #1384]
  405364:	ldr	x19, [sp, #16]
  405368:	ldp	x29, x30, [sp], #32
  40536c:	ret
  405370:	b	405300 <ferror@plt+0x24c0>
  405374:	nop
  405378:	ldrsw	x0, [x0, #8]
  40537c:	udiv	x2, x0, x1
  405380:	msub	x0, x2, x1, x0
  405384:	ret
  405388:	ldr	w2, [x0, #8]
  40538c:	ldr	w0, [x1, #8]
  405390:	cmp	w2, w0
  405394:	cset	w0, eq  // eq = none
  405398:	ret
  40539c:	nop
  4053a0:	mov	x1, x0
  4053a4:	ldr	x0, [x0, #32]
  4053a8:	cbz	x0, 4053b4 <ferror@plt+0x2574>
  4053ac:	mov	w0, #0x0                   	// #0
  4053b0:	ret
  4053b4:	ldr	x0, [x1, #40]
  4053b8:	cbnz	x0, 4053ac <ferror@plt+0x256c>
  4053bc:	ldrb	w0, [x1, #48]
  4053c0:	cbnz	w0, 4053ac <ferror@plt+0x256c>
  4053c4:	ldrb	w0, [x1, #49]
  4053c8:	cbnz	w0, 4053ac <ferror@plt+0x256c>
  4053cc:	ldr	x2, [x1, #48]
  4053d0:	and	x2, x2, #0xffffffff0000
  4053d4:	and	x2, x2, #0xffffffff00ffffff
  4053d8:	cbnz	x2, 4053b0 <ferror@plt+0x2570>
  4053dc:	ldrb	w2, [x1, #54]
  4053e0:	cbnz	w2, 4053b0 <ferror@plt+0x2570>
  4053e4:	ldrb	w2, [x1, #56]
  4053e8:	cbnz	w2, 4053b0 <ferror@plt+0x2570>
  4053ec:	ldrb	w0, [x1, #51]
  4053f0:	eor	w0, w0, #0x1
  4053f4:	ret
  4053f8:	ldrh	w2, [x0, #48]
  4053fc:	cbz	w2, 405408 <ferror@plt+0x25c8>
  405400:	mov	w2, #0x62                  	// #98
  405404:	strb	w2, [x1], #1
  405408:	ldr	x2, [x0, #32]
  40540c:	adrp	x3, 42d000 <_obstack_memory_used@@Base+0x176c8>
  405410:	add	x3, x3, #0x570
  405414:	cmp	x2, x3
  405418:	b.eq	4054bc <ferror@plt+0x267c>  // b.none
  40541c:	ldr	x4, [x0, #40]
  405420:	mov	x2, x1
  405424:	cbz	x4, 405434 <ferror@plt+0x25f4>
  405428:	add	x2, x1, #0x1
  40542c:	mov	w4, #0x66                  	// #102
  405430:	strb	w4, [x1]
  405434:	ldrb	w1, [x0, #52]
  405438:	cbz	w1, 405444 <ferror@plt+0x2604>
  40543c:	mov	w1, #0x67                  	// #103
  405440:	strb	w1, [x2], #1
  405444:	ldrb	w1, [x0, #53]
  405448:	cbz	w1, 405454 <ferror@plt+0x2614>
  40544c:	mov	w1, #0x68                  	// #104
  405450:	strb	w1, [x2], #1
  405454:	ldr	x1, [x0, #32]
  405458:	add	x3, x3, #0x100
  40545c:	cmp	x1, x3
  405460:	b.eq	4054c8 <ferror@plt+0x2688>  // b.none
  405464:	ldrb	w1, [x0, #54]
  405468:	cbz	w1, 405474 <ferror@plt+0x2634>
  40546c:	mov	w1, #0x4d                  	// #77
  405470:	strb	w1, [x2], #1
  405474:	ldrb	w1, [x0, #50]
  405478:	cbz	w1, 405484 <ferror@plt+0x2644>
  40547c:	mov	w1, #0x6e                  	// #110
  405480:	strb	w1, [x2], #1
  405484:	ldrb	w1, [x0, #51]
  405488:	cbz	w1, 405494 <ferror@plt+0x2654>
  40548c:	mov	w1, #0x52                  	// #82
  405490:	strb	w1, [x2], #1
  405494:	ldrb	w1, [x0, #55]
  405498:	cbz	w1, 4054a4 <ferror@plt+0x2664>
  40549c:	mov	w1, #0x72                  	// #114
  4054a0:	strb	w1, [x2], #1
  4054a4:	ldrb	w0, [x0, #56]
  4054a8:	cbz	w0, 4054b4 <ferror@plt+0x2674>
  4054ac:	mov	w0, #0x56                  	// #86
  4054b0:	strb	w0, [x2], #1
  4054b4:	strb	wzr, [x2]
  4054b8:	ret
  4054bc:	mov	w2, #0x64                  	// #100
  4054c0:	strb	w2, [x1], #1
  4054c4:	b	40541c <ferror@plt+0x25dc>
  4054c8:	mov	w1, #0x69                  	// #105
  4054cc:	strb	w1, [x2], #1
  4054d0:	b	405464 <ferror@plt+0x2624>
  4054d4:	nop
  4054d8:	ldrb	w3, [x0]
  4054dc:	cbz	w3, 405540 <ferror@plt+0x2700>
  4054e0:	sub	w4, w2, #0x1
  4054e4:	and	w2, w2, #0xfffffffd
  4054e8:	cmp	w4, #0x1
  4054ec:	b.ls	405680 <ferror@plt+0x2840>  // b.plast
  4054f0:	cbz	w2, 405544 <ferror@plt+0x2704>
  4054f4:	adrp	x2, 42d000 <_obstack_memory_used@@Base+0x176c8>
  4054f8:	add	x2, x2, #0x570
  4054fc:	add	x5, x2, #0x200
  405500:	add	x6, x2, #0x100
  405504:	mov	w4, #0x1                   	// #1
  405508:	cmp	w3, #0x66
  40550c:	b.eq	4057f0 <ferror@plt+0x29b0>  // b.none
  405510:	b.hi	4055a8 <ferror@plt+0x2768>  // b.pmore
  405514:	cmp	w3, #0x56
  405518:	b.eq	4057e0 <ferror@plt+0x29a0>  // b.none
  40551c:	b.ls	4055d4 <ferror@plt+0x2794>  // b.plast
  405520:	cmp	w3, #0x62
  405524:	b.eq	405538 <ferror@plt+0x26f8>  // b.none
  405528:	cmp	w3, #0x64
  40552c:	b.ne	405540 <ferror@plt+0x2700>  // b.any
  405530:	str	x2, [x1, #32]
  405534:	nop
  405538:	ldrb	w3, [x0, #1]!
  40553c:	cbnz	w3, 405508 <ferror@plt+0x26c8>
  405540:	ret
  405544:	adrp	x4, 42d000 <_obstack_memory_used@@Base+0x176c8>
  405548:	add	x4, x4, #0x570
  40554c:	add	x5, x4, #0x200
  405550:	add	x6, x4, #0x100
  405554:	cmp	w3, #0x66
  405558:	mov	w2, #0x1                   	// #1
  40555c:	b.eq	405598 <ferror@plt+0x2758>  // b.none
  405560:	b.hi	405634 <ferror@plt+0x27f4>  // b.pmore
  405564:	cmp	w3, #0x56
  405568:	b.eq	405800 <ferror@plt+0x29c0>  // b.none
  40556c:	b.ls	4055f4 <ferror@plt+0x27b4>  // b.plast
  405570:	cmp	w3, #0x62
  405574:	b.eq	405840 <ferror@plt+0x2a00>  // b.none
  405578:	cmp	w3, #0x64
  40557c:	b.ne	405540 <ferror@plt+0x2700>  // b.any
  405580:	str	x4, [x1, #32]
  405584:	ldrb	w3, [x0, #1]!
  405588:	cbz	w3, 405540 <ferror@plt+0x2700>
  40558c:	nop
  405590:	cmp	w3, #0x66
  405594:	b.ne	405560 <ferror@plt+0x2720>  // b.any
  405598:	str	x5, [x1, #40]
  40559c:	ldrb	w3, [x0, #1]!
  4055a0:	cbnz	w3, 405590 <ferror@plt+0x2750>
  4055a4:	b	405540 <ferror@plt+0x2700>
  4055a8:	cmp	w3, #0x69
  4055ac:	b.eq	4057d0 <ferror@plt+0x2990>  // b.none
  4055b0:	b.ls	405614 <ferror@plt+0x27d4>  // b.plast
  4055b4:	cmp	w3, #0x6e
  4055b8:	b.eq	405820 <ferror@plt+0x29e0>  // b.none
  4055bc:	cmp	w3, #0x72
  4055c0:	b.ne	405540 <ferror@plt+0x2700>  // b.any
  4055c4:	strb	w4, [x1, #55]
  4055c8:	ldrb	w3, [x0, #1]!
  4055cc:	cbnz	w3, 405508 <ferror@plt+0x26c8>
  4055d0:	b	405540 <ferror@plt+0x2700>
  4055d4:	cmp	w3, #0x4d
  4055d8:	b.eq	405860 <ferror@plt+0x2a20>  // b.none
  4055dc:	cmp	w3, #0x52
  4055e0:	b.ne	405540 <ferror@plt+0x2700>  // b.any
  4055e4:	strb	w4, [x1, #51]
  4055e8:	ldrb	w3, [x0, #1]!
  4055ec:	cbnz	w3, 405508 <ferror@plt+0x26c8>
  4055f0:	b	405540 <ferror@plt+0x2700>
  4055f4:	cmp	w3, #0x4d
  4055f8:	b.eq	405870 <ferror@plt+0x2a30>  // b.none
  4055fc:	cmp	w3, #0x52
  405600:	b.ne	405540 <ferror@plt+0x2700>  // b.any
  405604:	strb	w2, [x1, #51]
  405608:	ldrb	w3, [x0, #1]!
  40560c:	cbnz	w3, 405590 <ferror@plt+0x2750>
  405610:	b	405540 <ferror@plt+0x2700>
  405614:	cmp	w3, #0x67
  405618:	b.eq	405880 <ferror@plt+0x2a40>  // b.none
  40561c:	cmp	w3, #0x68
  405620:	b.ne	405540 <ferror@plt+0x2700>  // b.any
  405624:	strb	w4, [x1, #53]
  405628:	ldrb	w3, [x0, #1]!
  40562c:	cbnz	w3, 405508 <ferror@plt+0x26c8>
  405630:	b	405540 <ferror@plt+0x2700>
  405634:	cmp	w3, #0x69
  405638:	b.eq	405810 <ferror@plt+0x29d0>  // b.none
  40563c:	b.ls	405660 <ferror@plt+0x2820>  // b.plast
  405640:	cmp	w3, #0x6e
  405644:	b.eq	405850 <ferror@plt+0x2a10>  // b.none
  405648:	cmp	w3, #0x72
  40564c:	b.ne	405540 <ferror@plt+0x2700>  // b.any
  405650:	strb	w2, [x1, #55]
  405654:	ldrb	w3, [x0, #1]!
  405658:	cbnz	w3, 405590 <ferror@plt+0x2750>
  40565c:	b	405540 <ferror@plt+0x2700>
  405660:	cmp	w3, #0x67
  405664:	b.eq	405830 <ferror@plt+0x29f0>  // b.none
  405668:	cmp	w3, #0x68
  40566c:	b.ne	405540 <ferror@plt+0x2700>  // b.any
  405670:	strb	w2, [x1, #53]
  405674:	ldrb	w3, [x0, #1]!
  405678:	cbnz	w3, 405590 <ferror@plt+0x2750>
  40567c:	b	405540 <ferror@plt+0x2700>
  405680:	cbz	w2, 4056f8 <ferror@plt+0x28b8>
  405684:	adrp	x4, 42d000 <_obstack_memory_used@@Base+0x176c8>
  405688:	add	x4, x4, #0x570
  40568c:	add	x5, x4, #0x200
  405690:	add	x6, x4, #0x100
  405694:	mov	w2, #0x1                   	// #1
  405698:	b	4056c8 <ferror@plt+0x2888>
  40569c:	cmp	w3, #0x56
  4056a0:	b.eq	4058e8 <ferror@plt+0x2aa8>  // b.none
  4056a4:	b.ls	405770 <ferror@plt+0x2930>  // b.plast
  4056a8:	cmp	w3, #0x62
  4056ac:	b.eq	4058a8 <ferror@plt+0x2a68>  // b.none
  4056b0:	cmp	w3, #0x64
  4056b4:	b.ne	405540 <ferror@plt+0x2700>  // b.any
  4056b8:	str	x4, [x1, #32]
  4056bc:	nop
  4056c0:	ldrb	w3, [x0, #1]!
  4056c4:	cbz	w3, 405540 <ferror@plt+0x2700>
  4056c8:	cmp	w3, #0x66
  4056cc:	b.eq	4058a0 <ferror@plt+0x2a60>  // b.none
  4056d0:	b.ls	40569c <ferror@plt+0x285c>  // b.plast
  4056d4:	cmp	w3, #0x69
  4056d8:	b.eq	4058f8 <ferror@plt+0x2ab8>  // b.none
  4056dc:	b.ls	4057a0 <ferror@plt+0x2960>  // b.plast
  4056e0:	cmp	w3, #0x6e
  4056e4:	b.eq	4058f0 <ferror@plt+0x2ab0>  // b.none
  4056e8:	cmp	w3, #0x72
  4056ec:	b.ne	405540 <ferror@plt+0x2700>  // b.any
  4056f0:	strb	w2, [x1, #55]
  4056f4:	b	4056c0 <ferror@plt+0x2880>
  4056f8:	adrp	x2, 42d000 <_obstack_memory_used@@Base+0x176c8>
  4056fc:	add	x2, x2, #0x570
  405700:	add	x6, x2, #0x200
  405704:	add	x7, x2, #0x100
  405708:	mov	w4, #0x1                   	// #1
  40570c:	mov	w5, #0x101                 	// #257
  405710:	b	405740 <ferror@plt+0x2900>
  405714:	cmp	w3, #0x56
  405718:	b.eq	4058d8 <ferror@plt+0x2a98>  // b.none
  40571c:	b.ls	405788 <ferror@plt+0x2948>  // b.plast
  405720:	cmp	w3, #0x62
  405724:	b.eq	4058d0 <ferror@plt+0x2a90>  // b.none
  405728:	cmp	w3, #0x64
  40572c:	b.ne	405540 <ferror@plt+0x2700>  // b.any
  405730:	str	x2, [x1, #32]
  405734:	nop
  405738:	ldrb	w3, [x0, #1]!
  40573c:	cbz	w3, 405540 <ferror@plt+0x2700>
  405740:	cmp	w3, #0x66
  405744:	b.eq	4058c8 <ferror@plt+0x2a88>  // b.none
  405748:	b.ls	405714 <ferror@plt+0x28d4>  // b.plast
  40574c:	cmp	w3, #0x69
  405750:	b.eq	4058b0 <ferror@plt+0x2a70>  // b.none
  405754:	b.ls	4057b8 <ferror@plt+0x2978>  // b.plast
  405758:	cmp	w3, #0x6e
  40575c:	b.eq	405890 <ferror@plt+0x2a50>  // b.none
  405760:	cmp	w3, #0x72
  405764:	b.ne	405540 <ferror@plt+0x2700>  // b.any
  405768:	strb	w4, [x1, #55]
  40576c:	b	405738 <ferror@plt+0x28f8>
  405770:	cmp	w3, #0x4d
  405774:	b.eq	4058e0 <ferror@plt+0x2aa0>  // b.none
  405778:	cmp	w3, #0x52
  40577c:	b.ne	405540 <ferror@plt+0x2700>  // b.any
  405780:	strb	w2, [x1, #51]
  405784:	b	4056c0 <ferror@plt+0x2880>
  405788:	cmp	w3, #0x4d
  40578c:	b.eq	405908 <ferror@plt+0x2ac8>  // b.none
  405790:	cmp	w3, #0x52
  405794:	b.ne	405540 <ferror@plt+0x2700>  // b.any
  405798:	strb	w4, [x1, #51]
  40579c:	b	405738 <ferror@plt+0x28f8>
  4057a0:	cmp	w3, #0x67
  4057a4:	b.eq	4058c0 <ferror@plt+0x2a80>  // b.none
  4057a8:	cmp	w3, #0x68
  4057ac:	b.ne	405540 <ferror@plt+0x2700>  // b.any
  4057b0:	strb	w2, [x1, #53]
  4057b4:	b	4056c0 <ferror@plt+0x2880>
  4057b8:	cmp	w3, #0x67
  4057bc:	b.eq	405898 <ferror@plt+0x2a58>  // b.none
  4057c0:	cmp	w3, #0x68
  4057c4:	b.ne	405540 <ferror@plt+0x2700>  // b.any
  4057c8:	strb	w4, [x1, #53]
  4057cc:	b	405738 <ferror@plt+0x28f8>
  4057d0:	ldr	x3, [x1, #32]
  4057d4:	cbnz	x3, 405538 <ferror@plt+0x26f8>
  4057d8:	str	x6, [x1, #32]
  4057dc:	b	405538 <ferror@plt+0x26f8>
  4057e0:	strb	w4, [x1, #56]
  4057e4:	ldrb	w3, [x0, #1]!
  4057e8:	cbnz	w3, 405508 <ferror@plt+0x26c8>
  4057ec:	b	405540 <ferror@plt+0x2700>
  4057f0:	str	x5, [x1, #40]
  4057f4:	ldrb	w3, [x0, #1]!
  4057f8:	cbnz	w3, 405508 <ferror@plt+0x26c8>
  4057fc:	b	405540 <ferror@plt+0x2700>
  405800:	strb	w2, [x1, #56]
  405804:	ldrb	w3, [x0, #1]!
  405808:	cbnz	w3, 405590 <ferror@plt+0x2750>
  40580c:	b	405540 <ferror@plt+0x2700>
  405810:	ldr	x3, [x1, #32]
  405814:	cbnz	x3, 405584 <ferror@plt+0x2744>
  405818:	str	x6, [x1, #32]
  40581c:	b	405584 <ferror@plt+0x2744>
  405820:	strb	w4, [x1, #50]
  405824:	ldrb	w3, [x0, #1]!
  405828:	cbnz	w3, 405508 <ferror@plt+0x26c8>
  40582c:	b	405540 <ferror@plt+0x2700>
  405830:	strb	w2, [x1, #52]
  405834:	ldrb	w3, [x0, #1]!
  405838:	cbnz	w3, 405590 <ferror@plt+0x2750>
  40583c:	b	405540 <ferror@plt+0x2700>
  405840:	strb	w2, [x1, #48]
  405844:	ldrb	w3, [x0, #1]!
  405848:	cbnz	w3, 405590 <ferror@plt+0x2750>
  40584c:	b	405540 <ferror@plt+0x2700>
  405850:	strb	w2, [x1, #50]
  405854:	ldrb	w3, [x0, #1]!
  405858:	cbnz	w3, 405590 <ferror@plt+0x2750>
  40585c:	b	405540 <ferror@plt+0x2700>
  405860:	strb	w4, [x1, #54]
  405864:	ldrb	w3, [x0, #1]!
  405868:	cbnz	w3, 405508 <ferror@plt+0x26c8>
  40586c:	b	405540 <ferror@plt+0x2700>
  405870:	strb	w2, [x1, #54]
  405874:	ldrb	w3, [x0, #1]!
  405878:	cbnz	w3, 405590 <ferror@plt+0x2750>
  40587c:	b	405540 <ferror@plt+0x2700>
  405880:	strb	w4, [x1, #52]
  405884:	ldrb	w3, [x0, #1]!
  405888:	cbnz	w3, 405508 <ferror@plt+0x26c8>
  40588c:	b	405540 <ferror@plt+0x2700>
  405890:	strb	w4, [x1, #50]
  405894:	b	405738 <ferror@plt+0x28f8>
  405898:	strb	w4, [x1, #52]
  40589c:	b	405738 <ferror@plt+0x28f8>
  4058a0:	str	x5, [x1, #40]
  4058a4:	b	4056c0 <ferror@plt+0x2880>
  4058a8:	strb	w2, [x1, #49]
  4058ac:	b	4056c0 <ferror@plt+0x2880>
  4058b0:	ldr	x3, [x1, #32]
  4058b4:	cbnz	x3, 405738 <ferror@plt+0x28f8>
  4058b8:	str	x7, [x1, #32]
  4058bc:	b	405738 <ferror@plt+0x28f8>
  4058c0:	strb	w2, [x1, #52]
  4058c4:	b	4056c0 <ferror@plt+0x2880>
  4058c8:	str	x6, [x1, #40]
  4058cc:	b	405738 <ferror@plt+0x28f8>
  4058d0:	strh	w5, [x1, #48]
  4058d4:	b	405738 <ferror@plt+0x28f8>
  4058d8:	strb	w4, [x1, #56]
  4058dc:	b	405738 <ferror@plt+0x28f8>
  4058e0:	strb	w2, [x1, #54]
  4058e4:	b	4056c0 <ferror@plt+0x2880>
  4058e8:	strb	w2, [x1, #56]
  4058ec:	b	4056c0 <ferror@plt+0x2880>
  4058f0:	strb	w2, [x1, #50]
  4058f4:	b	4056c0 <ferror@plt+0x2880>
  4058f8:	ldr	x3, [x1, #32]
  4058fc:	cbnz	x3, 4056c0 <ferror@plt+0x2880>
  405900:	str	x6, [x1, #32]
  405904:	b	4056c0 <ferror@plt+0x2880>
  405908:	strb	w4, [x1, #54]
  40590c:	b	405738 <ferror@plt+0x28f8>
  405910:	ldr	x0, [x0]
  405914:	ldr	x1, [x1]
  405918:	b	402b50 <strcmp@plt>
  40591c:	nop
  405920:	stp	x29, x30, [sp, #-32]!
  405924:	mov	w2, #0x5                   	// #5
  405928:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x6c8>
  40592c:	mov	x29, sp
  405930:	add	x1, x1, #0x368
  405934:	str	x19, [sp, #16]
  405938:	mov	x19, x0
  40593c:	mov	x0, #0x0                   	// #0
  405940:	bl	402d20 <dcgettext@plt>
  405944:	mov	x2, x0
  405948:	mov	x3, x19
  40594c:	mov	w1, #0x0                   	// #0
  405950:	mov	w0, #0x2                   	// #2
  405954:	bl	4027b0 <error@plt>
  405958:	stp	x29, x30, [sp, #-48]!
  40595c:	mov	w2, #0x5                   	// #5
  405960:	mov	x29, sp
  405964:	stp	x19, x20, [sp, #16]
  405968:	mov	x19, x1
  40596c:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x6c8>
  405970:	add	x1, x1, #0x388
  405974:	str	x21, [sp, #32]
  405978:	mov	x21, x0
  40597c:	mov	x0, #0x0                   	// #0
  405980:	bl	402d20 <dcgettext@plt>
  405984:	mov	x1, x19
  405988:	mov	w2, #0x5                   	// #5
  40598c:	mov	x19, x0
  405990:	mov	x0, #0x0                   	// #0
  405994:	bl	402d20 <dcgettext@plt>
  405998:	mov	x20, x0
  40599c:	mov	x0, x21
  4059a0:	bl	412348 <ferror@plt+0xf508>
  4059a4:	mov	x3, x20
  4059a8:	mov	x4, x0
  4059ac:	mov	x2, x19
  4059b0:	mov	w1, #0x0                   	// #0
  4059b4:	mov	w0, #0x2                   	// #2
  4059b8:	bl	4027b0 <error@plt>
  4059bc:	nop
  4059c0:	stp	x29, x30, [sp, #-48]!
  4059c4:	mov	x29, sp
  4059c8:	str	x21, [sp, #32]
  4059cc:	adrp	x21, 42d000 <_obstack_memory_used@@Base+0x176c8>
  4059d0:	add	x21, x21, #0x570
  4059d4:	stp	x19, x20, [sp, #16]
  4059d8:	mov	w20, w0
  4059dc:	ldr	x19, [x21, #768]
  4059e0:	cbz	x19, 4059f8 <ferror@plt+0x2bb8>
  4059e4:	nop
  4059e8:	add	x0, x19, #0xd
  4059ec:	bl	402e20 <unlink@plt>
  4059f0:	ldr	x19, [x19]
  4059f4:	cbnz	x19, 4059e8 <ferror@plt+0x2ba8>
  4059f8:	mov	w0, w20
  4059fc:	mov	x1, #0x0                   	// #0
  405a00:	str	xzr, [x21, #768]
  405a04:	bl	402890 <signal@plt>
  405a08:	mov	w0, w20
  405a0c:	ldp	x19, x20, [sp, #16]
  405a10:	ldr	x21, [sp, #32]
  405a14:	ldp	x29, x30, [sp], #48
  405a18:	b	4027a0 <raise@plt>
  405a1c:	nop
  405a20:	stp	x29, x30, [sp, #-48]!
  405a24:	mov	x29, sp
  405a28:	stp	x19, x20, [sp, #16]
  405a2c:	mov	x20, x0
  405a30:	mov	x19, x1
  405a34:	str	x21, [sp, #32]
  405a38:	bl	402db0 <__errno_location@plt>
  405a3c:	ldr	w21, [x0]
  405a40:	cbz	x19, 405a70 <ferror@plt+0x2c30>
  405a44:	mov	x2, x19
  405a48:	mov	w1, #0x3                   	// #3
  405a4c:	mov	w0, #0x0                   	// #0
  405a50:	bl	411a40 <ferror@plt+0xec00>
  405a54:	adrp	x2, 416000 <_obstack_memory_used@@Base+0x6c8>
  405a58:	mov	x4, x0
  405a5c:	mov	x3, x20
  405a60:	mov	w1, w21
  405a64:	add	x2, x2, #0x3c0
  405a68:	mov	w0, #0x2                   	// #2
  405a6c:	bl	4027b0 <error@plt>
  405a70:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x6c8>
  405a74:	mov	w2, #0x5                   	// #5
  405a78:	add	x1, x1, #0x3b0
  405a7c:	mov	x0, #0x0                   	// #0
  405a80:	bl	402d20 <dcgettext@plt>
  405a84:	mov	x19, x0
  405a88:	b	405a44 <ferror@plt+0x2c04>
  405a8c:	nop
  405a90:	stp	x29, x30, [sp, #-32]!
  405a94:	mov	x29, sp
  405a98:	stp	x19, x20, [sp, #16]
  405a9c:	adrp	x19, 42d000 <_obstack_memory_used@@Base+0x176c8>
  405aa0:	add	x19, x19, #0x570
  405aa4:	mov	x20, x0
  405aa8:	ldr	x1, [x19, #776]
  405aac:	ldr	x2, [x19, #784]
  405ab0:	ldr	x0, [x19, #792]
  405ab4:	cmp	x1, x2
  405ab8:	b.eq	405ad4 <ferror@plt+0x2c94>  // b.none
  405abc:	str	x20, [x0, x1, lsl #3]
  405ac0:	add	x2, x1, #0x1
  405ac4:	str	x2, [x19, #776]
  405ac8:	ldp	x19, x20, [sp, #16]
  405acc:	ldp	x29, x30, [sp], #32
  405ad0:	ret
  405ad4:	cbz	x0, 405b1c <ferror@plt+0x2cdc>
  405ad8:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  405adc:	movk	x1, #0xaaa, lsl #48
  405ae0:	cmp	x2, x1
  405ae4:	b.cs	405b34 <ferror@plt+0x2cf4>  // b.hs, b.nlast
  405ae8:	add	x1, x2, #0x1
  405aec:	add	x2, x1, x2, lsr #1
  405af0:	lsl	x1, x2, #3
  405af4:	str	x2, [x19, #784]
  405af8:	bl	414188 <ferror@plt+0x11348>
  405afc:	ldr	x1, [x19, #776]
  405b00:	str	x0, [x19, #792]
  405b04:	add	x2, x1, #0x1
  405b08:	str	x2, [x19, #776]
  405b0c:	str	x20, [x0, x1, lsl #3]
  405b10:	ldp	x19, x20, [sp, #16]
  405b14:	ldp	x29, x30, [sp], #32
  405b18:	ret
  405b1c:	cbz	x2, 405b38 <ferror@plt+0x2cf8>
  405b20:	cmp	xzr, x2, lsr #61
  405b24:	lsl	x1, x2, #3
  405b28:	cset	x3, ne  // ne = any
  405b2c:	tbnz	x2, #60, 405b34 <ferror@plt+0x2cf4>
  405b30:	cbz	x3, 405af4 <ferror@plt+0x2cb4>
  405b34:	bl	414320 <ferror@plt+0x114e0>
  405b38:	mov	x1, #0x80                  	// #128
  405b3c:	mov	x2, #0x10                  	// #16
  405b40:	b	405af4 <ferror@plt+0x2cb4>
  405b44:	nop
  405b48:	stp	x29, x30, [sp, #-48]!
  405b4c:	mov	x29, sp
  405b50:	stp	x19, x20, [sp, #16]
  405b54:	mov	x20, x0
  405b58:	stp	x21, x22, [sp, #32]
  405b5c:	mov	x21, x1
  405b60:	add	x22, x1, #0x1
  405b64:	and	x19, x2, #0xffffffffffffffe0
  405b68:	add	x19, x19, #0x20
  405b6c:	mov	x0, x19
  405b70:	bl	4028e0 <malloc@plt>
  405b74:	str	x0, [x20]
  405b78:	cbz	x0, 405b9c <ferror@plt+0x2d5c>
  405b7c:	stp	xzr, xzr, [x20, #8]
  405b80:	stp	x19, xzr, [x20, #24]
  405b84:	str	x21, [x20, #40]
  405b88:	strb	wzr, [x20, #48]
  405b8c:	ldp	x19, x20, [sp, #16]
  405b90:	ldp	x21, x22, [sp, #32]
  405b94:	ldp	x29, x30, [sp], #48
  405b98:	ret
  405b9c:	cmp	x22, x19, lsr #1
  405ba0:	lsr	x2, x19, #1
  405ba4:	b.cc	405b64 <ferror@plt+0x2d24>  // b.lo, b.ul, b.last
  405ba8:	bl	414320 <ferror@plt+0x114e0>
  405bac:	nop
  405bb0:	stp	x29, x30, [sp, #-48]!
  405bb4:	mov	x29, sp
  405bb8:	stp	x19, x20, [sp, #16]
  405bbc:	mov	x20, x1
  405bc0:	stp	x21, x22, [sp, #32]
  405bc4:	mov	x21, x0
  405bc8:	mov	x22, x2
  405bcc:	bl	402db0 <__errno_location@plt>
  405bd0:	mov	x19, x0
  405bd4:	mov	x2, x22
  405bd8:	mov	x0, x21
  405bdc:	mov	x1, x20
  405be0:	str	wzr, [x19]
  405be4:	bl	402c60 <strxfrm@plt>
  405be8:	ldr	w19, [x19]
  405bec:	cbnz	w19, 405c00 <ferror@plt+0x2dc0>
  405bf0:	ldp	x19, x20, [sp, #16]
  405bf4:	ldp	x21, x22, [sp, #32]
  405bf8:	ldp	x29, x30, [sp], #48
  405bfc:	ret
  405c00:	mov	w2, #0x5                   	// #5
  405c04:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x6c8>
  405c08:	mov	x0, #0x0                   	// #0
  405c0c:	add	x1, x1, #0x3c8
  405c10:	bl	402d20 <dcgettext@plt>
  405c14:	mov	x2, x0
  405c18:	mov	w1, w19
  405c1c:	mov	w0, #0x0                   	// #0
  405c20:	bl	4027b0 <error@plt>
  405c24:	mov	w2, #0x5                   	// #5
  405c28:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x6c8>
  405c2c:	mov	x0, #0x0                   	// #0
  405c30:	add	x1, x1, #0x3e8
  405c34:	bl	402d20 <dcgettext@plt>
  405c38:	mov	x2, x0
  405c3c:	mov	w1, #0x0                   	// #0
  405c40:	mov	w0, #0x0                   	// #0
  405c44:	bl	4027b0 <error@plt>
  405c48:	mov	w2, #0x5                   	// #5
  405c4c:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x6c8>
  405c50:	mov	x0, #0x0                   	// #0
  405c54:	add	x1, x1, #0x418
  405c58:	bl	402d20 <dcgettext@plt>
  405c5c:	mov	x19, x0
  405c60:	mov	x2, x20
  405c64:	mov	w1, #0x8                   	// #8
  405c68:	mov	w0, #0x0                   	// #0
  405c6c:	bl	411020 <ferror@plt+0xe1e0>
  405c70:	mov	x2, x19
  405c74:	mov	x3, x0
  405c78:	mov	w1, #0x0                   	// #0
  405c7c:	mov	w0, #0x2                   	// #2
  405c80:	bl	4027b0 <error@plt>
  405c84:	nop
  405c88:	stp	x29, x30, [sp, #-48]!
  405c8c:	mov	x29, sp
  405c90:	stp	x19, x20, [sp, #16]
  405c94:	mov	x19, x1
  405c98:	mov	w20, w0
  405c9c:	mov	x0, x1
  405ca0:	bl	402780 <strlen@plt>
  405ca4:	mov	x1, x19
  405ca8:	mov	x2, x0
  405cac:	mov	w0, #0x2                   	// #2
  405cb0:	bl	402a60 <write@plt>
  405cb4:	cbnz	w20, 405cd4 <ferror@plt+0x2e94>
  405cb8:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x6c8>
  405cbc:	add	x1, x1, #0xae0
  405cc0:	mov	x2, #0x1                   	// #1
  405cc4:	mov	w0, #0x2                   	// #2
  405cc8:	bl	402a60 <write@plt>
  405ccc:	mov	w0, #0x2                   	// #2
  405cd0:	bl	402750 <_exit@plt>
  405cd4:	add	x1, sp, #0x20
  405cd8:	mov	w0, w20
  405cdc:	bl	40e6d0 <ferror@plt+0xb890>
  405ce0:	mov	x19, x0
  405ce4:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x6c8>
  405ce8:	add	x1, x1, #0x438
  405cec:	mov	x2, #0x8                   	// #8
  405cf0:	mov	w0, #0x2                   	// #2
  405cf4:	bl	402a60 <write@plt>
  405cf8:	mov	x0, x19
  405cfc:	bl	402780 <strlen@plt>
  405d00:	mov	x1, x19
  405d04:	mov	x2, x0
  405d08:	mov	w0, #0x2                   	// #2
  405d0c:	bl	402a60 <write@plt>
  405d10:	b	405cb8 <ferror@plt+0x2e78>
  405d14:	nop
  405d18:	stp	x29, x30, [sp, #-80]!
  405d1c:	mov	x6, x0
  405d20:	and	w5, w5, #0xff
  405d24:	mov	x29, sp
  405d28:	stp	x19, x20, [sp, #16]
  405d2c:	mov	x19, x1
  405d30:	stp	x21, x22, [sp, #32]
  405d34:	mov	x22, x4
  405d38:	mov	x21, x3
  405d3c:	stp	x23, x24, [sp, #48]
  405d40:	neg	x24, x4, lsl #5
  405d44:	mov	x23, x2
  405d48:	str	x25, [sp, #64]
  405d4c:	add	x4, x6, #0x18
  405d50:	add	x20, x23, x24
  405d54:	cbz	w5, 405de4 <ferror@plt+0x2fa4>
  405d58:	ldr	x5, [x6, #40]
  405d5c:	add	x4, x6, #0x10
  405d60:	lsr	x3, x5, #1
  405d64:	sub	x5, x5, x3
  405d68:	sub	x23, x20, x3, lsl #5
  405d6c:	ldr	w2, [x6, #80]
  405d70:	mov	x1, #0x0                   	// #0
  405d74:	stp	x20, x23, [x19]
  405d78:	add	x0, x19, #0x58
  405d7c:	add	w2, w2, #0x1
  405d80:	stp	x20, x23, [x19, #16]
  405d84:	add	x25, x19, #0x88
  405d88:	stp	x4, x3, [x19, #32]
  405d8c:	stp	x5, x6, [x19, #48]
  405d90:	str	w2, [x19, #80]
  405d94:	strb	wzr, [x19, #84]
  405d98:	bl	402a00 <pthread_mutex_init@plt>
  405d9c:	lsr	x3, x21, #1
  405da0:	cmp	x21, #0x1
  405da4:	mov	x0, x19
  405da8:	mov	x4, x22
  405dac:	mov	x2, x20
  405db0:	mov	x1, x25
  405db4:	sub	x21, x21, x3
  405db8:	mov	w5, #0x1                   	// #1
  405dbc:	b.ls	405df8 <ferror@plt+0x2fb8>  // b.plast
  405dc0:	str	x25, [x19, #64]
  405dc4:	add	x20, x23, x24
  405dc8:	bl	405d18 <ferror@plt+0x2ed8>
  405dcc:	str	x0, [x19, #72]
  405dd0:	mov	x6, x19
  405dd4:	mov	w5, #0x0                   	// #0
  405dd8:	mov	x19, x0
  405ddc:	add	x4, x6, #0x18
  405de0:	cbnz	w5, 405d58 <ferror@plt+0x2f18>
  405de4:	ldr	x5, [x6, #48]
  405de8:	lsr	x3, x5, #1
  405dec:	sub	x5, x5, x3
  405df0:	sub	x23, x20, x3, lsl #5
  405df4:	b	405d6c <ferror@plt+0x2f2c>
  405df8:	stp	xzr, xzr, [x19, #64]
  405dfc:	mov	x0, x25
  405e00:	ldp	x19, x20, [sp, #16]
  405e04:	ldp	x21, x22, [sp, #32]
  405e08:	ldp	x23, x24, [sp, #48]
  405e0c:	ldr	x25, [sp, #64]
  405e10:	ldp	x29, x30, [sp], #80
  405e14:	ret
  405e18:	adrp	x3, 42d000 <_obstack_memory_used@@Base+0x176c8>
  405e1c:	sub	x1, x1, #0x1
  405e20:	add	x1, x0, x1
  405e24:	ldr	w4, [x3, #944]
  405e28:	ldp	x3, x6, [x2]
  405e2c:	cmp	w4, #0x100
  405e30:	b.eq	405ed0 <ferror@plt+0x3090>  // b.none
  405e34:	cmp	x1, x0
  405e38:	b.ls	405e60 <ferror@plt+0x3020>  // b.plast
  405e3c:	sub	x5, x3, #0x1
  405e40:	cbz	x3, 405e90 <ferror@plt+0x3050>
  405e44:	nop
  405e48:	ldrb	w3, [x0]
  405e4c:	cmp	w4, w3
  405e50:	b.eq	405e70 <ferror@plt+0x3030>  // b.none
  405e54:	add	x0, x0, #0x1
  405e58:	cmp	x1, x0
  405e5c:	b.hi	405e48 <ferror@plt+0x3008>  // b.pmore
  405e60:	add	x0, x0, x6
  405e64:	cmp	x1, x0
  405e68:	csel	x0, x1, x0, ls  // ls = plast
  405e6c:	ret
  405e70:	sub	x5, x5, #0x1
  405e74:	cmp	x1, x0
  405e78:	b.ls	405e60 <ferror@plt+0x3020>  // b.plast
  405e7c:	add	x0, x0, #0x1
  405e80:	cmp	x1, x0
  405e84:	b.ls	405e60 <ferror@plt+0x3020>  // b.plast
  405e88:	cmn	x5, #0x1
  405e8c:	b.ne	405e48 <ferror@plt+0x3008>  // b.any
  405e90:	ldrb	w2, [x2, #48]
  405e94:	cbz	w2, 405e60 <ferror@plt+0x3020>
  405e98:	adrp	x3, 42d000 <_obstack_memory_used@@Base+0x176c8>
  405e9c:	add	x3, x3, #0x570
  405ea0:	add	x3, x3, #0x320
  405ea4:	b	405eb4 <ferror@plt+0x3074>
  405ea8:	add	x0, x0, #0x1
  405eac:	cmp	x1, x0
  405eb0:	b.ls	405e60 <ferror@plt+0x3020>  // b.plast
  405eb4:	ldrb	w2, [x0]
  405eb8:	ldrb	w2, [x3, w2, sxtw]
  405ebc:	cbnz	w2, 405ea8 <ferror@plt+0x3068>
  405ec0:	add	x0, x0, x6
  405ec4:	cmp	x1, x0
  405ec8:	csel	x0, x1, x0, ls  // ls = plast
  405ecc:	ret
  405ed0:	cmp	x1, x0
  405ed4:	b.ls	405e60 <ferror@plt+0x3020>  // b.plast
  405ed8:	sub	x5, x3, #0x1
  405edc:	cbz	x3, 405e90 <ferror@plt+0x3050>
  405ee0:	ldrb	w7, [x0]
  405ee4:	adrp	x3, 42d000 <_obstack_memory_used@@Base+0x176c8>
  405ee8:	add	x3, x3, #0x570
  405eec:	add	x3, x3, #0x320
  405ef0:	mov	x4, x3
  405ef4:	ldrb	w3, [x3, w7, sxtw]
  405ef8:	cbz	w3, 405f18 <ferror@plt+0x30d8>
  405efc:	nop
  405f00:	add	x0, x0, #0x1
  405f04:	cmp	x1, x0
  405f08:	b.ls	405e60 <ferror@plt+0x3020>  // b.plast
  405f0c:	ldrb	w3, [x0]
  405f10:	ldrb	w3, [x4, w3, sxtw]
  405f14:	cbnz	w3, 405f00 <ferror@plt+0x30c0>
  405f18:	cmp	x1, x0
  405f1c:	b.ls	405e60 <ferror@plt+0x3020>  // b.plast
  405f20:	add	x0, x0, #0x1
  405f24:	cmp	x1, x0
  405f28:	b.eq	405f50 <ferror@plt+0x3110>  // b.none
  405f2c:	ldrb	w3, [x0]
  405f30:	ldrb	w3, [x4, w3, sxtw]
  405f34:	cbz	w3, 405f20 <ferror@plt+0x30e0>
  405f38:	cmp	x1, x0
  405f3c:	b.ls	405e60 <ferror@plt+0x3020>  // b.plast
  405f40:	sub	x5, x5, #0x1
  405f44:	cmn	x5, #0x1
  405f48:	b.ne	405ef8 <ferror@plt+0x30b8>  // b.any
  405f4c:	b	405e90 <ferror@plt+0x3050>
  405f50:	mov	x0, x1
  405f54:	add	x0, x0, x6
  405f58:	cmp	x1, x0
  405f5c:	csel	x0, x1, x0, ls  // ls = plast
  405f60:	ret
  405f64:	nop
  405f68:	adrp	x3, 42d000 <_obstack_memory_used@@Base+0x176c8>
  405f6c:	sub	x1, x1, #0x1
  405f70:	add	x1, x0, x1
  405f74:	ldr	w4, [x3, #944]
  405f78:	ldp	x3, x6, [x2, #16]
  405f7c:	cmp	x6, #0x0
  405f80:	cinc	x3, x3, eq  // eq = none
  405f84:	cmp	w4, #0x100
  405f88:	b.eq	406030 <ferror@plt+0x31f0>  // b.none
  405f8c:	cmp	x1, x0
  405f90:	b.ls	405fb8 <ferror@plt+0x3178>  // b.plast
  405f94:	sub	x5, x3, #0x1
  405f98:	cbz	x3, 405fb8 <ferror@plt+0x3178>
  405f9c:	nop
  405fa0:	ldrb	w3, [x0]
  405fa4:	cmp	w4, w3
  405fa8:	b.eq	406004 <ferror@plt+0x31c4>  // b.none
  405fac:	add	x0, x0, #0x1
  405fb0:	cmp	x1, x0
  405fb4:	b.hi	405fa0 <ferror@plt+0x3160>  // b.pmore
  405fb8:	cbz	x6, 406000 <ferror@plt+0x31c0>
  405fbc:	ldrb	w2, [x2, #49]
  405fc0:	cbz	w2, 405ff4 <ferror@plt+0x31b4>
  405fc4:	adrp	x3, 42d000 <_obstack_memory_used@@Base+0x176c8>
  405fc8:	add	x3, x3, #0x570
  405fcc:	cmp	x1, x0
  405fd0:	add	x2, x3, #0x320
  405fd4:	b.hi	405fe8 <ferror@plt+0x31a8>  // b.pmore
  405fd8:	b	405ff4 <ferror@plt+0x31b4>
  405fdc:	add	x0, x0, #0x1
  405fe0:	cmp	x1, x0
  405fe4:	b.eq	4060b8 <ferror@plt+0x3278>  // b.none
  405fe8:	ldrb	w3, [x0]
  405fec:	ldrb	w3, [x2, w3, sxtw]
  405ff0:	cbnz	w3, 405fdc <ferror@plt+0x319c>
  405ff4:	add	x0, x0, x6
  405ff8:	cmp	x1, x0
  405ffc:	csel	x0, x1, x0, ls  // ls = plast
  406000:	ret
  406004:	cmp	x1, x0
  406008:	b.ls	405fb8 <ferror@plt+0x3178>  // b.plast
  40600c:	orr	x3, x6, x5
  406010:	sub	x5, x5, #0x1
  406014:	cbz	x3, 406000 <ferror@plt+0x31c0>
  406018:	add	x0, x0, #0x1
  40601c:	cmp	x1, x0
  406020:	b.ls	405fb8 <ferror@plt+0x3178>  // b.plast
  406024:	cmn	x5, #0x1
  406028:	b.ne	405fa0 <ferror@plt+0x3160>  // b.any
  40602c:	b	405fb8 <ferror@plt+0x3178>
  406030:	cmp	x1, x0
  406034:	b.ls	405fb8 <ferror@plt+0x3178>  // b.plast
  406038:	sub	x5, x3, #0x1
  40603c:	cbz	x3, 405fb8 <ferror@plt+0x3178>
  406040:	ldrb	w7, [x0]
  406044:	adrp	x3, 42d000 <_obstack_memory_used@@Base+0x176c8>
  406048:	add	x3, x3, #0x570
  40604c:	add	x3, x3, #0x320
  406050:	mov	x4, x3
  406054:	ldrb	w3, [x3, w7, sxtw]
  406058:	cbz	w3, 406078 <ferror@plt+0x3238>
  40605c:	nop
  406060:	add	x0, x0, #0x1
  406064:	cmp	x1, x0
  406068:	b.ls	405fb8 <ferror@plt+0x3178>  // b.plast
  40606c:	ldrb	w3, [x0]
  406070:	ldrb	w3, [x4, w3, sxtw]
  406074:	cbnz	w3, 406060 <ferror@plt+0x3220>
  406078:	cmp	x1, x0
  40607c:	b.ls	405fb8 <ferror@plt+0x3178>  // b.plast
  406080:	add	x0, x0, #0x1
  406084:	cmp	x1, x0
  406088:	b.eq	4060b0 <ferror@plt+0x3270>  // b.none
  40608c:	ldrb	w3, [x0]
  406090:	ldrb	w3, [x4, w3, sxtw]
  406094:	cbz	w3, 406080 <ferror@plt+0x3240>
  406098:	cmp	x1, x0
  40609c:	b.ls	405fb8 <ferror@plt+0x3178>  // b.plast
  4060a0:	sub	x5, x5, #0x1
  4060a4:	cmn	x5, #0x1
  4060a8:	b.ne	406058 <ferror@plt+0x3218>  // b.any
  4060ac:	b	405fb8 <ferror@plt+0x3178>
  4060b0:	mov	x0, x1
  4060b4:	b	405fb8 <ferror@plt+0x3178>
  4060b8:	mov	x0, x1
  4060bc:	add	x0, x0, x6
  4060c0:	cmp	x1, x0
  4060c4:	csel	x0, x1, x0, ls  // ls = plast
  4060c8:	b	406000 <ferror@plt+0x31c0>
  4060cc:	nop
  4060d0:	ldr	w3, [x0, #80]
  4060d4:	ldr	w2, [x1, #80]
  4060d8:	cmp	w3, w2
  4060dc:	b.eq	4060e8 <ferror@plt+0x32a8>  // b.none
  4060e0:	cset	w0, cc  // cc = lo, ul, last
  4060e4:	ret
  4060e8:	ldp	x3, x4, [x0, #40]
  4060ec:	ldp	x2, x0, [x1, #40]
  4060f0:	add	x1, x3, x4
  4060f4:	add	x0, x2, x0
  4060f8:	cmp	x1, x0
  4060fc:	cset	w0, cc  // cc = lo, ul, last
  406100:	ret
  406104:	nop
  406108:	stp	x29, x30, [sp, #-224]!
  40610c:	mov	x29, sp
  406110:	stp	x19, x20, [sp, #16]
  406114:	adrp	x19, 42d000 <_obstack_memory_used@@Base+0x176c8>
  406118:	add	x19, x19, #0x570
  40611c:	stp	x23, x24, [sp, #48]
  406120:	and	w24, w1, #0xff
  406124:	mov	x23, x0
  406128:	ldr	x0, [x19, #792]
  40612c:	stp	x21, x22, [sp, #32]
  406130:	ldr	x1, [x19, #1056]
  406134:	str	x25, [sp, #64]
  406138:	ldr	x25, [x0, x1, lsl #3]
  40613c:	mov	x0, x25
  406140:	bl	402780 <strlen@plt>
  406144:	mov	x21, x0
  406148:	add	x0, x0, #0x20
  40614c:	and	x0, x0, #0xfffffffffffffff8
  406150:	bl	414158 <ferror@plt+0x11318>
  406154:	add	x22, x0, #0xd
  406158:	mov	x2, x21
  40615c:	mov	x1, x25
  406160:	mov	x20, x0
  406164:	mov	x0, x22
  406168:	bl	402720 <memcpy@plt>
  40616c:	adrp	x0, 416000 <_obstack_memory_used@@Base+0x6c8>
  406170:	add	x0, x0, #0x470
  406174:	ldr	x1, [x19, #1056]
  406178:	add	x2, x22, x21
  40617c:	ldr	x3, [x19, #776]
  406180:	add	x1, x1, #0x1
  406184:	ldr	x4, [x0]
  406188:	cmp	x1, x3
  40618c:	ldr	w0, [x0, #8]
  406190:	csel	x3, x1, xzr, ne  // ne = any
  406194:	str	x4, [x22, x21]
  406198:	add	x1, x19, #0x430
  40619c:	str	w0, [x2, #8]
  4061a0:	add	x2, sp, #0x60
  4061a4:	str	xzr, [x20]
  4061a8:	mov	w0, #0x0                   	// #0
  4061ac:	str	x3, [x19, #1056]
  4061b0:	bl	402740 <pthread_sigmask@plt>
  4061b4:	cmp	w0, #0x0
  4061b8:	cset	w2, eq  // eq = none
  4061bc:	mov	w1, #0x80000               	// #524288
  4061c0:	mov	x0, x22
  4061c4:	strb	w2, [sp, #88]
  4061c8:	bl	4131b8 <ferror@plt+0x10378>
  4061cc:	mov	w19, w0
  4061d0:	bl	402db0 <__errno_location@plt>
  4061d4:	mov	x21, x0
  4061d8:	tbnz	w19, #31, 406218 <ferror@plt+0x33d8>
  4061dc:	adrp	x0, 42d000 <_obstack_memory_used@@Base+0x176c8>
  4061e0:	add	x0, x0, #0x3b0
  4061e4:	ldrb	w1, [sp, #88]
  4061e8:	ldr	x2, [x0, #8]
  4061ec:	str	x20, [x0, #8]
  4061f0:	str	x20, [x2]
  4061f4:	cbnz	w1, 406264 <ferror@plt+0x3424>
  4061f8:	ldp	x21, x22, [sp, #32]
  4061fc:	mov	x0, x20
  406200:	ldr	x25, [sp, #64]
  406204:	str	w19, [x23]
  406208:	ldp	x19, x20, [sp, #16]
  40620c:	ldp	x23, x24, [sp, #48]
  406210:	ldp	x29, x30, [sp], #224
  406214:	ret
  406218:	ldrb	w0, [sp, #88]
  40621c:	ldr	w22, [x21]
  406220:	cbnz	w0, 40629c <ferror@plt+0x345c>
  406224:	cmp	w22, #0x18
  406228:	eor	w24, w24, #0x1
  40622c:	cset	w0, ne  // ne = any
  406230:	orr	w24, w0, w24
  406234:	cbnz	w24, 4062b4 <ferror@plt+0x3474>
  406238:	mov	x0, x20
  40623c:	bl	402ba0 <free@plt>
  406240:	ldp	x21, x22, [sp, #32]
  406244:	mov	x20, #0x0                   	// #0
  406248:	ldr	x25, [sp, #64]
  40624c:	str	w19, [x23]
  406250:	mov	x0, x20
  406254:	ldp	x19, x20, [sp, #16]
  406258:	ldp	x23, x24, [sp, #48]
  40625c:	ldp	x29, x30, [sp], #224
  406260:	ret
  406264:	ldr	w22, [x21]
  406268:	add	x1, sp, #0x60
  40626c:	mov	x2, #0x0                   	// #0
  406270:	mov	w0, #0x2                   	// #2
  406274:	bl	402740 <pthread_sigmask@plt>
  406278:	str	w22, [x21]
  40627c:	ldp	x21, x22, [sp, #32]
  406280:	mov	x0, x20
  406284:	ldr	x25, [sp, #64]
  406288:	str	w19, [x23]
  40628c:	ldp	x19, x20, [sp, #16]
  406290:	ldp	x23, x24, [sp, #48]
  406294:	ldp	x29, x30, [sp], #224
  406298:	ret
  40629c:	add	x1, sp, #0x60
  4062a0:	mov	x2, #0x0                   	// #0
  4062a4:	mov	w0, #0x2                   	// #2
  4062a8:	bl	402740 <pthread_sigmask@plt>
  4062ac:	str	w22, [x21]
  4062b0:	b	406224 <ferror@plt+0x33e4>
  4062b4:	mov	w2, #0x5                   	// #5
  4062b8:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x6c8>
  4062bc:	mov	x0, #0x0                   	// #0
  4062c0:	add	x1, x1, #0x448
  4062c4:	bl	402d20 <dcgettext@plt>
  4062c8:	mov	x19, x0
  4062cc:	mov	x1, x25
  4062d0:	mov	w0, #0x4                   	// #4
  4062d4:	bl	4110c0 <ferror@plt+0xe280>
  4062d8:	mov	x3, x0
  4062dc:	mov	x2, x19
  4062e0:	mov	w1, w22
  4062e4:	mov	w0, #0x2                   	// #2
  4062e8:	bl	4027b0 <error@plt>
  4062ec:	nop
  4062f0:	stp	x29, x30, [sp, #-64]!
  4062f4:	adrp	x4, 416000 <_obstack_memory_used@@Base+0x6c8>
  4062f8:	add	x4, x4, #0xc10
  4062fc:	mov	x29, sp
  406300:	add	x3, sp, #0x38
  406304:	stp	x19, x20, [sp, #16]
  406308:	mov	x19, x1
  40630c:	mov	x20, x2
  406310:	add	x1, sp, #0x30
  406314:	mov	w2, #0xa                   	// #10
  406318:	str	x21, [sp, #32]
  40631c:	mov	x21, x0
  406320:	bl	414b00 <ferror@plt+0x11cc0>
  406324:	cmp	w0, #0x3
  406328:	b.eq	4063b4 <ferror@plt+0x3574>  // b.none
  40632c:	b.hi	40635c <ferror@plt+0x351c>  // b.pmore
  406330:	cmp	w0, #0x1
  406334:	b.eq	4063b4 <ferror@plt+0x3574>  // b.none
  406338:	tbnz	w0, #0, 406348 <ferror@plt+0x3508>
  40633c:	ldr	x0, [sp, #56]
  406340:	str	x0, [x19]
  406344:	nop
  406348:	ldr	x0, [sp, #48]
  40634c:	ldp	x19, x20, [sp, #16]
  406350:	ldr	x21, [sp, #32]
  406354:	ldp	x29, x30, [sp], #64
  406358:	ret
  40635c:	cmp	w0, #0x4
  406360:	b.ne	406348 <ferror@plt+0x3508>  // b.any
  406364:	mov	x0, #0x0                   	// #0
  406368:	cbz	x20, 40634c <ferror@plt+0x350c>
  40636c:	mov	w2, #0x5                   	// #5
  406370:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x6c8>
  406374:	add	x1, x1, #0x480
  406378:	bl	402d20 <dcgettext@plt>
  40637c:	mov	x1, x20
  406380:	mov	w2, #0x5                   	// #5
  406384:	mov	x19, x0
  406388:	mov	x0, #0x0                   	// #0
  40638c:	bl	402d20 <dcgettext@plt>
  406390:	mov	x20, x0
  406394:	mov	x0, x21
  406398:	bl	412348 <ferror@plt+0xf508>
  40639c:	mov	x3, x20
  4063a0:	mov	x4, x0
  4063a4:	mov	x2, x19
  4063a8:	mov	w1, #0x0                   	// #0
  4063ac:	mov	w0, #0x2                   	// #2
  4063b0:	bl	4027b0 <error@plt>
  4063b4:	mov	x0, #0xffffffffffffffff    	// #-1
  4063b8:	str	x0, [x19]
  4063bc:	b	406348 <ferror@plt+0x3508>
  4063c0:	stp	x29, x30, [sp, #-32]!
  4063c4:	mov	w2, #0x5                   	// #5
  4063c8:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x6c8>
  4063cc:	mov	x29, sp
  4063d0:	add	x1, x1, #0x4a8
  4063d4:	str	x19, [sp, #16]
  4063d8:	mov	x19, x0
  4063dc:	mov	x0, #0x0                   	// #0
  4063e0:	bl	402d20 <dcgettext@plt>
  4063e4:	mov	x1, x19
  4063e8:	bl	405a20 <ferror@plt+0x2be0>
  4063ec:	nop
  4063f0:	stp	x29, x30, [sp, #-32]!
  4063f4:	mov	x29, sp
  4063f8:	stp	x19, x20, [sp, #16]
  4063fc:	mov	x20, x1
  406400:	mov	x19, x0
  406404:	bl	402880 <fileno@plt>
  406408:	cbz	w0, 40642c <ferror@plt+0x35ec>
  40640c:	cmp	w0, #0x1
  406410:	b.eq	406444 <ferror@plt+0x3604>  // b.none
  406414:	mov	x0, x19
  406418:	bl	414fb8 <ferror@plt+0x12178>
  40641c:	cbnz	w0, 40646c <ferror@plt+0x362c>
  406420:	ldp	x19, x20, [sp, #16]
  406424:	ldp	x29, x30, [sp], #32
  406428:	ret
  40642c:	ldr	w0, [x19]
  406430:	tbz	w0, #4, 406420 <ferror@plt+0x35e0>
  406434:	mov	x0, x19
  406438:	ldp	x19, x20, [sp, #16]
  40643c:	ldp	x29, x30, [sp], #32
  406440:	b	402cc0 <clearerr_unlocked@plt>
  406444:	mov	x0, x19
  406448:	bl	402c30 <fflush_unlocked@plt>
  40644c:	cbz	w0, 406420 <ferror@plt+0x35e0>
  406450:	mov	w2, #0x5                   	// #5
  406454:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x6c8>
  406458:	mov	x0, #0x0                   	// #0
  40645c:	add	x1, x1, #0x4b8
  406460:	bl	402d20 <dcgettext@plt>
  406464:	mov	x1, x20
  406468:	bl	405a20 <ferror@plt+0x2be0>
  40646c:	mov	w2, #0x5                   	// #5
  406470:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x6c8>
  406474:	mov	x0, #0x0                   	// #0
  406478:	add	x1, x1, #0x4c8
  40647c:	bl	402d20 <dcgettext@plt>
  406480:	mov	x1, x20
  406484:	bl	405a20 <ferror@plt+0x2be0>
  406488:	stp	x29, x30, [sp, #-64]!
  40648c:	mov	x29, sp
  406490:	stp	x19, x20, [sp, #16]
  406494:	stp	x21, x22, [sp, #32]
  406498:	ldr	x20, [x0, #8]
  40649c:	ldr	x22, [x1, #8]
  4064a0:	str	x23, [sp, #48]
  4064a4:	subs	x23, x20, #0x1
  4064a8:	sub	x21, x22, #0x1
  4064ac:	b.ne	4064e0 <ferror@plt+0x36a0>  // b.any
  4064b0:	cmp	x21, #0x0
  4064b4:	adrp	x19, 42d000 <_obstack_memory_used@@Base+0x176c8>
  4064b8:	csetm	w0, ne  // ne = any
  4064bc:	add	x19, x19, #0x570
  4064c0:	ldrb	w1, [x19, #1201]
  4064c4:	ldp	x19, x20, [sp, #16]
  4064c8:	cmp	w1, #0x0
  4064cc:	cneg	w0, w0, ne  // ne = any
  4064d0:	ldp	x21, x22, [sp, #32]
  4064d4:	ldr	x23, [sp, #48]
  4064d8:	ldp	x29, x30, [sp], #64
  4064dc:	ret
  4064e0:	adrp	x19, 42d000 <_obstack_memory_used@@Base+0x176c8>
  4064e4:	add	x19, x19, #0x570
  4064e8:	cbz	x21, 406524 <ferror@plt+0x36e4>
  4064ec:	ldrb	w3, [x19, #1200]
  4064f0:	ldr	x0, [x0]
  4064f4:	ldr	x1, [x1]
  4064f8:	cbnz	w3, 406548 <ferror@plt+0x3708>
  4064fc:	cmp	x23, x21
  406500:	csel	x2, x23, x21, ls  // ls = plast
  406504:	bl	402b00 <memcmp@plt>
  406508:	cbnz	w0, 4064c0 <ferror@plt+0x3680>
  40650c:	cmp	x23, x21
  406510:	mov	w0, #0xffffffff            	// #-1
  406514:	b.cc	4064c0 <ferror@plt+0x3680>  // b.lo, b.ul, b.last
  406518:	cmp	x20, x22
  40651c:	cset	w0, ne  // ne = any
  406520:	b	4064c0 <ferror@plt+0x3680>
  406524:	ldrb	w1, [x19, #1201]
  406528:	mov	w0, #0x1                   	// #1
  40652c:	ldp	x19, x20, [sp, #16]
  406530:	cmp	w1, #0x0
  406534:	cneg	w0, w0, ne  // ne = any
  406538:	ldp	x21, x22, [sp, #32]
  40653c:	ldr	x23, [sp, #48]
  406540:	ldp	x29, x30, [sp], #64
  406544:	ret
  406548:	mov	x2, x1
  40654c:	mov	x3, x22
  406550:	mov	x1, x20
  406554:	bl	4144d0 <ferror@plt+0x11690>
  406558:	b	4064c0 <ferror@plt+0x3680>
  40655c:	nop
  406560:	stp	x29, x30, [sp, #-32]!
  406564:	mov	x29, sp
  406568:	str	x19, [sp, #16]
  40656c:	mov	w19, w0
  406570:	bl	402d70 <dup2@plt>
  406574:	mov	w0, w19
  406578:	ldr	x19, [sp, #16]
  40657c:	ldp	x29, x30, [sp], #32
  406580:	b	402a10 <close@plt>
  406584:	nop
  406588:	stp	x29, x30, [sp, #-64]!
  40658c:	mov	w2, #0x1                   	// #1
  406590:	mov	w0, #0xffffffff            	// #-1
  406594:	mov	x29, sp
  406598:	add	x1, sp, #0x2c
  40659c:	stp	x19, x20, [sp, #16]
  4065a0:	bl	402e10 <waitpid@plt>
  4065a4:	cmp	w0, #0x0
  4065a8:	b.lt	406640 <ferror@plt+0x3800>  // b.tstop
  4065ac:	mov	w19, w0
  4065b0:	b.eq	4065f8 <ferror@plt+0x37b8>  // b.none
  4065b4:	adrp	x20, 42d000 <_obstack_memory_used@@Base+0x176c8>
  4065b8:	add	x20, x20, #0x570
  4065bc:	add	x1, sp, #0x30
  4065c0:	str	w19, [sp, #56]
  4065c4:	ldr	x0, [x20, #1216]
  4065c8:	bl	40e290 <ferror@plt+0xb450>
  4065cc:	cbz	x0, 4065f8 <ferror@plt+0x37b8>
  4065d0:	ldr	w1, [sp, #44]
  4065d4:	mov	w2, #0x2                   	// #2
  4065d8:	strb	w2, [x0, #12]
  4065dc:	and	w0, w1, #0x7f
  4065e0:	ubfx	x1, x1, #8, #8
  4065e4:	orr	w1, w1, w0
  4065e8:	cbnz	w1, 406608 <ferror@plt+0x37c8>
  4065ec:	ldr	w0, [x20, #1224]
  4065f0:	sub	w0, w0, #0x1
  4065f4:	str	w0, [x20, #1224]
  4065f8:	mov	w0, w19
  4065fc:	ldp	x19, x20, [sp, #16]
  406600:	ldp	x29, x30, [sp], #64
  406604:	ret
  406608:	mov	w2, #0x5                   	// #5
  40660c:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x6c8>
  406610:	mov	x0, #0x0                   	// #0
  406614:	add	x1, x1, #0x4f0
  406618:	bl	402d20 <dcgettext@plt>
  40661c:	mov	x19, x0
  406620:	ldr	x1, [x20, #1208]
  406624:	mov	w0, #0x4                   	// #4
  406628:	bl	4110c0 <ferror@plt+0xe280>
  40662c:	mov	x3, x0
  406630:	mov	x2, x19
  406634:	mov	w1, #0x0                   	// #0
  406638:	mov	w0, #0x2                   	// #2
  40663c:	bl	4027b0 <error@plt>
  406640:	bl	402db0 <__errno_location@plt>
  406644:	mov	x3, x0
  406648:	mov	w2, #0x5                   	// #5
  40664c:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x6c8>
  406650:	mov	x0, #0x0                   	// #0
  406654:	add	x1, x1, #0x4d8
  406658:	ldr	w20, [x3]
  40665c:	bl	402d20 <dcgettext@plt>
  406660:	adrp	x1, 42d000 <_obstack_memory_used@@Base+0x176c8>
  406664:	mov	x19, x0
  406668:	mov	w0, #0x4                   	// #4
  40666c:	ldr	x1, [x1, #2600]
  406670:	bl	4110c0 <ferror@plt+0xe280>
  406674:	mov	x3, x0
  406678:	mov	x2, x19
  40667c:	mov	w1, w20
  406680:	mov	w0, #0x2                   	// #2
  406684:	bl	4027b0 <error@plt>
  406688:	stp	x29, x30, [sp, #-64]!
  40668c:	mov	w2, #0x0                   	// #0
  406690:	mov	w0, #0xffffffff            	// #-1
  406694:	mov	x29, sp
  406698:	add	x1, sp, #0x2c
  40669c:	stp	x19, x20, [sp, #16]
  4066a0:	bl	402e10 <waitpid@plt>
  4066a4:	cmp	w0, #0x0
  4066a8:	b.lt	406740 <ferror@plt+0x3900>  // b.tstop
  4066ac:	mov	w19, w0
  4066b0:	b.eq	4066f8 <ferror@plt+0x38b8>  // b.none
  4066b4:	adrp	x20, 42d000 <_obstack_memory_used@@Base+0x176c8>
  4066b8:	add	x20, x20, #0x570
  4066bc:	add	x1, sp, #0x30
  4066c0:	str	w19, [sp, #56]
  4066c4:	ldr	x0, [x20, #1216]
  4066c8:	bl	40e290 <ferror@plt+0xb450>
  4066cc:	cbz	x0, 4066f8 <ferror@plt+0x38b8>
  4066d0:	ldr	w1, [sp, #44]
  4066d4:	mov	w2, #0x2                   	// #2
  4066d8:	strb	w2, [x0, #12]
  4066dc:	and	w0, w1, #0x7f
  4066e0:	ubfx	x1, x1, #8, #8
  4066e4:	orr	w1, w1, w0
  4066e8:	cbnz	w1, 406708 <ferror@plt+0x38c8>
  4066ec:	ldr	w0, [x20, #1224]
  4066f0:	sub	w0, w0, #0x1
  4066f4:	str	w0, [x20, #1224]
  4066f8:	mov	w0, w19
  4066fc:	ldp	x19, x20, [sp, #16]
  406700:	ldp	x29, x30, [sp], #64
  406704:	ret
  406708:	mov	w2, #0x5                   	// #5
  40670c:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x6c8>
  406710:	mov	x0, #0x0                   	// #0
  406714:	add	x1, x1, #0x4f0
  406718:	bl	402d20 <dcgettext@plt>
  40671c:	mov	x19, x0
  406720:	ldr	x1, [x20, #1208]
  406724:	mov	w0, #0x4                   	// #4
  406728:	bl	4110c0 <ferror@plt+0xe280>
  40672c:	mov	x3, x0
  406730:	mov	x2, x19
  406734:	mov	w1, #0x0                   	// #0
  406738:	mov	w0, #0x2                   	// #2
  40673c:	bl	4027b0 <error@plt>
  406740:	bl	402db0 <__errno_location@plt>
  406744:	mov	x3, x0
  406748:	mov	w2, #0x5                   	// #5
  40674c:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x6c8>
  406750:	mov	x0, #0x0                   	// #0
  406754:	add	x1, x1, #0x4d8
  406758:	ldr	w20, [x3]
  40675c:	bl	402d20 <dcgettext@plt>
  406760:	adrp	x1, 42d000 <_obstack_memory_used@@Base+0x176c8>
  406764:	mov	x19, x0
  406768:	mov	w0, #0x4                   	// #4
  40676c:	ldr	x1, [x1, #2600]
  406770:	bl	4110c0 <ferror@plt+0xe280>
  406774:	mov	x3, x0
  406778:	mov	x2, x19
  40677c:	mov	w1, w20
  406780:	mov	w0, #0x2                   	// #2
  406784:	bl	4027b0 <error@plt>
  406788:	stp	x29, x30, [sp, #-240]!
  40678c:	mov	x29, sp
  406790:	stp	x19, x20, [sp, #16]
  406794:	stp	x21, x22, [sp, #32]
  406798:	mov	x22, x1
  40679c:	mov	w1, #0x80000               	// #524288
  4067a0:	stp	x25, x26, [sp, #64]
  4067a4:	mov	x25, x0
  4067a8:	bl	40ee08 <ferror@plt+0xbfc8>
  4067ac:	tbnz	w0, #31, 406940 <ferror@plt+0x3b00>
  4067b0:	adrp	x0, 42d000 <_obstack_memory_used@@Base+0x176c8>
  4067b4:	adrp	x21, 42d000 <_obstack_memory_used@@Base+0x176c8>
  4067b8:	add	x21, x21, #0x570
  4067bc:	stp	x23, x24, [sp, #48]
  4067c0:	ldr	w0, [x0, #960]
  4067c4:	str	d8, [sp, #80]
  4067c8:	ldr	w1, [x21, #1224]
  4067cc:	add	w0, w0, #0x1
  4067d0:	cmp	w0, w1
  4067d4:	b.cc	4068ec <ferror@plt+0x3aac>  // b.lo, b.ul, b.last
  4067d8:	bl	402db0 <__errno_location@plt>
  4067dc:	sub	x22, x22, #0x1
  4067e0:	mov	x23, x0
  4067e4:	add	x24, x21, #0x430
  4067e8:	fmov	d8, #2.500000000000000000e-01
  4067ec:	b	406838 <ferror@plt+0x39f8>
  4067f0:	str	x26, [x21, #768]
  4067f4:	cbnz	w0, 406874 <ferror@plt+0x3a34>
  4067f8:	str	w20, [x23]
  4067fc:	cmp	w19, #0x0
  406800:	b.ge	406888 <ferror@plt+0x3a48>  // b.tcont
  406804:	cmp	w20, #0xb
  406808:	b.ne	40690c <ferror@plt+0x3acc>  // b.any
  40680c:	fmov	d0, d8
  406810:	bl	414550 <ferror@plt+0x11710>
  406814:	fadd	d8, d8, d8
  406818:	ldr	w1, [x21, #1224]
  40681c:	cmp	w1, #0x0
  406820:	b.le	40682c <ferror@plt+0x39ec>
  406824:	bl	406588 <ferror@plt+0x3748>
  406828:	cbnz	w0, 406818 <ferror@plt+0x39d8>
  40682c:	sub	x22, x22, #0x1
  406830:	cmn	x22, #0x1
  406834:	b.eq	406908 <ferror@plt+0x3ac8>  // b.none
  406838:	add	x2, sp, #0x70
  40683c:	mov	x1, x24
  406840:	mov	w0, #0x0                   	// #0
  406844:	bl	402740 <pthread_sigmask@plt>
  406848:	cmp	w0, #0x0
  40684c:	cset	w0, eq  // eq = none
  406850:	strb	w0, [sp, #104]
  406854:	ldr	x26, [x21, #768]
  406858:	str	xzr, [x21, #768]
  40685c:	bl	402840 <fork@plt>
  406860:	ldr	w20, [x23]
  406864:	mov	w19, w0
  406868:	ldrb	w0, [sp, #104]
  40686c:	cbnz	w19, 4067f0 <ferror@plt+0x39b0>
  406870:	cbz	w0, 4068b8 <ferror@plt+0x3a78>
  406874:	add	x1, sp, #0x70
  406878:	mov	x2, #0x0                   	// #0
  40687c:	mov	w0, #0x2                   	// #2
  406880:	bl	402740 <pthread_sigmask@plt>
  406884:	b	4067f8 <ferror@plt+0x39b8>
  406888:	b.eq	4068b8 <ferror@plt+0x3a78>  // b.none
  40688c:	ldp	x23, x24, [sp, #48]
  406890:	ldr	w0, [x21, #1224]
  406894:	ldr	d8, [sp, #80]
  406898:	add	w0, w0, #0x1
  40689c:	str	w0, [x21, #1224]
  4068a0:	mov	w0, w19
  4068a4:	ldp	x19, x20, [sp, #16]
  4068a8:	ldp	x21, x22, [sp, #32]
  4068ac:	ldp	x25, x26, [sp, #64]
  4068b0:	ldp	x29, x30, [sp], #240
  4068b4:	ret
  4068b8:	mov	w0, #0x0                   	// #0
  4068bc:	bl	402a10 <close@plt>
  4068c0:	mov	w19, #0x0                   	// #0
  4068c4:	mov	w0, #0x1                   	// #1
  4068c8:	bl	402a10 <close@plt>
  4068cc:	mov	w0, w19
  4068d0:	ldr	d8, [sp, #80]
  4068d4:	ldp	x19, x20, [sp, #16]
  4068d8:	ldp	x21, x22, [sp, #32]
  4068dc:	ldp	x23, x24, [sp, #48]
  4068e0:	ldp	x25, x26, [sp, #64]
  4068e4:	ldp	x29, x30, [sp], #240
  4068e8:	ret
  4068ec:	bl	406688 <ferror@plt+0x3848>
  4068f0:	ldr	w0, [x21, #1224]
  4068f4:	cmp	w0, #0x0
  4068f8:	b.le	4067d8 <ferror@plt+0x3998>
  4068fc:	bl	406588 <ferror@plt+0x3748>
  406900:	cbz	w0, 4067d8 <ferror@plt+0x3998>
  406904:	b	4068f0 <ferror@plt+0x3ab0>
  406908:	ldr	w20, [x23]
  40690c:	ldr	w0, [x25]
  406910:	bl	402a10 <close@plt>
  406914:	ldr	w0, [x25, #4]
  406918:	bl	402a10 <close@plt>
  40691c:	ldr	d8, [sp, #80]
  406920:	mov	w0, w19
  406924:	str	w20, [x23]
  406928:	ldp	x19, x20, [sp, #16]
  40692c:	ldp	x21, x22, [sp, #32]
  406930:	ldp	x23, x24, [sp, #48]
  406934:	ldp	x25, x26, [sp, #64]
  406938:	ldp	x29, x30, [sp], #240
  40693c:	ret
  406940:	mov	w19, #0xffffffff            	// #-1
  406944:	b	4068a0 <ferror@plt+0x3a60>
  406948:	stp	x29, x30, [sp, #-64]!
  40694c:	mov	w1, #0x0                   	// #0
  406950:	mov	x29, sp
  406954:	stp	x19, x20, [sp, #16]
  406958:	str	x21, [sp, #32]
  40695c:	mov	x21, x0
  406960:	add	x0, sp, #0x34
  406964:	bl	406108 <ferror@plt+0x32c8>
  406968:	mov	x19, x0
  40696c:	cbz	x0, 4069b8 <ferror@plt+0x3b78>
  406970:	adrp	x20, 42d000 <_obstack_memory_used@@Base+0x176c8>
  406974:	add	x20, x20, #0x570
  406978:	strb	wzr, [x0, #12]
  40697c:	ldr	x0, [x20, #1208]
  406980:	cbz	x0, 4069a0 <ferror@plt+0x3b60>
  406984:	add	x0, sp, #0x38
  406988:	mov	x1, #0x4                   	// #4
  40698c:	bl	406788 <ferror@plt+0x3948>
  406990:	str	w0, [x19, #8]
  406994:	cmp	w0, #0x0
  406998:	b.gt	4069cc <ferror@plt+0x3b8c>
  40699c:	b.eq	406a48 <ferror@plt+0x3c08>  // b.none
  4069a0:	ldr	w0, [sp, #52]
  4069a4:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x6c8>
  4069a8:	add	x1, x1, #0x538
  4069ac:	bl	4029a0 <fdopen@plt>
  4069b0:	str	x0, [x21]
  4069b4:	cbz	x0, 406a30 <ferror@plt+0x3bf0>
  4069b8:	mov	x0, x19
  4069bc:	ldp	x19, x20, [sp, #16]
  4069c0:	ldr	x21, [sp, #32]
  4069c4:	ldp	x29, x30, [sp], #64
  4069c8:	ret
  4069cc:	ldr	w0, [sp, #52]
  4069d0:	bl	402a10 <close@plt>
  4069d4:	ldr	w0, [sp, #56]
  4069d8:	bl	402a10 <close@plt>
  4069dc:	ldr	x0, [x20, #1216]
  4069e0:	ldr	w1, [sp, #60]
  4069e4:	str	w1, [sp, #52]
  4069e8:	cbz	x0, 406a04 <ferror@plt+0x3bc4>
  4069ec:	mov	w1, #0x1                   	// #1
  4069f0:	strb	w1, [x19, #12]
  4069f4:	mov	x1, x19
  4069f8:	bl	40e078 <ferror@plt+0xb238>
  4069fc:	cbnz	x0, 4069a0 <ferror@plt+0x3b60>
  406a00:	bl	414320 <ferror@plt+0x114e0>
  406a04:	adrp	x3, 405000 <ferror@plt+0x21c0>
  406a08:	adrp	x2, 405000 <ferror@plt+0x21c0>
  406a0c:	add	x3, x3, #0x388
  406a10:	add	x2, x2, #0x378
  406a14:	mov	x4, #0x0                   	// #0
  406a18:	mov	x1, #0x0                   	// #0
  406a1c:	mov	x0, #0x2f                  	// #47
  406a20:	bl	40d8a0 <ferror@plt+0xaa60>
  406a24:	str	x0, [x20, #1216]
  406a28:	cbnz	x0, 4069ec <ferror@plt+0x3bac>
  406a2c:	b	406a00 <ferror@plt+0x3bc0>
  406a30:	mov	w2, #0x5                   	// #5
  406a34:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x6c8>
  406a38:	add	x1, x1, #0x540
  406a3c:	bl	402d20 <dcgettext@plt>
  406a40:	add	x1, x19, #0xd
  406a44:	bl	405a20 <ferror@plt+0x2be0>
  406a48:	ldr	w0, [sp, #60]
  406a4c:	bl	402a10 <close@plt>
  406a50:	ldr	w0, [sp, #52]
  406a54:	cmp	w0, #0x1
  406a58:	b.eq	406a64 <ferror@plt+0x3c24>  // b.none
  406a5c:	mov	w1, #0x1                   	// #1
  406a60:	bl	406560 <ferror@plt+0x3720>
  406a64:	ldr	w0, [sp, #56]
  406a68:	cbz	w0, 406a74 <ferror@plt+0x3c34>
  406a6c:	mov	w1, #0x0                   	// #0
  406a70:	bl	406560 <ferror@plt+0x3720>
  406a74:	ldr	x1, [x20, #1208]
  406a78:	mov	x2, #0x0                   	// #0
  406a7c:	mov	x0, x1
  406a80:	bl	402dc0 <execlp@plt>
  406a84:	bl	402db0 <__errno_location@plt>
  406a88:	ldr	w0, [x0]
  406a8c:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x6c8>
  406a90:	add	x1, x1, #0x510
  406a94:	bl	405c88 <ferror@plt+0x2e48>
  406a98:	stp	x29, x30, [sp, #-128]!
  406a9c:	mov	x29, sp
  406aa0:	stp	x19, x20, [sp, #16]
  406aa4:	mov	x19, x1
  406aa8:	stp	x21, x22, [sp, #32]
  406aac:	ldp	x20, x21, [x0]
  406ab0:	stp	x23, x24, [sp, #48]
  406ab4:	mov	x24, x2
  406ab8:	add	x22, x20, x21
  406abc:	cbz	x2, 406b00 <ferror@plt+0x3cc0>
  406ac0:	adrp	x1, 42d000 <_obstack_memory_used@@Base+0x176c8>
  406ac4:	mov	x3, x19
  406ac8:	mov	x0, x20
  406acc:	mov	x2, x21
  406ad0:	ldrb	w4, [x1, #1168]
  406ad4:	mov	x1, #0x1                   	// #1
  406ad8:	sturb	w4, [x22, #-1]
  406adc:	bl	402760 <fwrite_unlocked@plt>
  406ae0:	cmp	x21, x0
  406ae4:	b.ne	4073e8 <ferror@plt+0x45a8>  // b.any
  406ae8:	sturb	wzr, [x22, #-1]
  406aec:	ldp	x19, x20, [sp, #16]
  406af0:	ldp	x21, x22, [sp, #32]
  406af4:	ldp	x23, x24, [sp, #48]
  406af8:	ldp	x29, x30, [sp], #128
  406afc:	ret
  406b00:	stp	x25, x26, [sp, #64]
  406b04:	adrp	x25, 42d000 <_obstack_memory_used@@Base+0x176c8>
  406b08:	add	x25, x25, #0x570
  406b0c:	mov	x23, x0
  406b10:	ldrb	w0, [x25, #1228]
  406b14:	cbz	w0, 406ba0 <ferror@plt+0x3d60>
  406b18:	stp	x27, x28, [sp, #80]
  406b1c:	cmp	x20, x22
  406b20:	b.cc	406b54 <ferror@plt+0x3d14>  // b.lo, b.ul, b.last
  406b24:	b	406bb8 <ferror@plt+0x3d78>
  406b28:	mov	w1, w0
  406b2c:	cmp	x22, x20
  406b30:	b.eq	406ba8 <ferror@plt+0x3d68>  // b.none
  406b34:	ldp	x2, x3, [x19, #40]
  406b38:	cmp	x3, x2
  406b3c:	b.ls	406b74 <ferror@plt+0x3d34>  // b.plast
  406b40:	add	x1, x2, #0x1
  406b44:	str	x1, [x19, #40]
  406b48:	strb	w0, [x2]
  406b4c:	cmp	x22, x20
  406b50:	b.eq	406bb4 <ferror@plt+0x3d74>  // b.none
  406b54:	ldrb	w0, [x20], #1
  406b58:	cmp	w0, #0x9
  406b5c:	b.ne	406b28 <ferror@plt+0x3ce8>  // b.any
  406b60:	ldp	x2, x3, [x19, #40]
  406b64:	mov	w1, #0x3e                  	// #62
  406b68:	mov	w0, w1
  406b6c:	cmp	x3, x2
  406b70:	b.hi	406b40 <ferror@plt+0x3d00>  // b.pmore
  406b74:	mov	x0, x19
  406b78:	bl	402ad0 <__overflow@plt>
  406b7c:	cmn	w0, #0x1
  406b80:	b.ne	406b4c <ferror@plt+0x3d0c>  // b.any
  406b84:	mov	w2, #0x5                   	// #5
  406b88:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x6c8>
  406b8c:	mov	x0, #0x0                   	// #0
  406b90:	add	x1, x1, #0x560
  406b94:	bl	402d20 <dcgettext@plt>
  406b98:	mov	x1, #0x0                   	// #0
  406b9c:	bl	405a20 <ferror@plt+0x2be0>
  406ba0:	ldp	x25, x26, [sp, #64]
  406ba4:	b	406ac0 <ferror@plt+0x3c80>
  406ba8:	mov	w1, #0xa                   	// #10
  406bac:	mov	w0, w1
  406bb0:	b	406b34 <ferror@plt+0x3cf4>
  406bb4:	ldp	x20, x21, [x23]
  406bb8:	adrp	x27, 42d000 <_obstack_memory_used@@Base+0x176c8>
  406bbc:	ldr	x28, [x25, #1232]
  406bc0:	add	x27, x27, #0x3b0
  406bc4:	add	x0, x27, #0x20
  406bc8:	str	x0, [sp, #104]
  406bcc:	sub	x22, x21, #0x1
  406bd0:	mov	w26, #0x20                  	// #32
  406bd4:	add	x22, x20, x22
  406bd8:	cbz	x28, 407220 <ferror@plt+0x43e0>
  406bdc:	nop
  406be0:	ldr	x8, [x28]
  406be4:	cmn	x8, #0x1
  406be8:	b.eq	40728c <ferror@plt+0x444c>  // b.none
  406bec:	mov	x1, x21
  406bf0:	mov	x2, x28
  406bf4:	mov	x0, x20
  406bf8:	bl	405e18 <ferror@plt+0x2fd8>
  406bfc:	ldr	x1, [x28, #16]
  406c00:	mov	x19, x0
  406c04:	cmn	x1, #0x1
  406c08:	b.eq	406c34 <ferror@plt+0x3df4>  // b.none
  406c0c:	mov	x1, x21
  406c10:	mov	x2, x28
  406c14:	mov	x0, x20
  406c18:	bl	405f68 <ferror@plt+0x3128>
  406c1c:	mov	x22, x0
  406c20:	cmn	x8, #0x1
  406c24:	ldrb	w0, [x28, #48]
  406c28:	cset	w1, eq  // eq = none
  406c2c:	tst	w1, w0
  406c30:	b.ne	406c4c <ferror@plt+0x3e0c>  // b.any
  406c34:	ldrb	w0, [x28, #54]
  406c38:	cbnz	w0, 406c4c <ferror@plt+0x3e0c>
  406c3c:	ldr	x0, [x28, #48]
  406c40:	and	x0, x0, #0xffffffff0000
  406c44:	and	x0, x0, #0xffffffff00ffffff
  406c48:	cbz	x0, 406d50 <ferror@plt+0x3f10>
  406c4c:	ldrb	w21, [x22]
  406c50:	add	x0, x25, #0x320
  406c54:	strb	wzr, [x22]
  406c58:	ldrb	w1, [x19]
  406c5c:	ldrb	w1, [x0, w1, sxtw]
  406c60:	cbz	w1, 406c74 <ferror@plt+0x3e34>
  406c64:	nop
  406c68:	ldrb	w1, [x19, #1]!
  406c6c:	ldrb	w1, [x0, w1, sxtw]
  406c70:	cbnz	w1, 406c68 <ferror@plt+0x3e28>
  406c74:	str	x19, [sp, #120]
  406c78:	cmp	x22, x19
  406c7c:	b.cc	407240 <ferror@plt+0x4400>  // b.lo, b.ul, b.last
  406c80:	ldrb	w0, [x28, #54]
  406c84:	cbnz	w0, 4072a0 <ferror@plt+0x4460>
  406c88:	ldrb	w0, [x28, #52]
  406c8c:	cbnz	w0, 407340 <ferror@plt+0x4500>
  406c90:	ldr	x0, [x28, #48]
  406c94:	and	x0, x0, #0xffffffff0000
  406c98:	and	x0, x0, #0xffffff0000ffffff
  406c9c:	cbz	x0, 407240 <ferror@plt+0x4400>
  406ca0:	mov	x2, x19
  406ca4:	mov	x4, x19
  406ca8:	ldrb	w1, [x2], #1
  406cac:	b.ls	406cc8 <ferror@plt+0x3e88>  // b.plast
  406cb0:	cmp	w1, #0x2d
  406cb4:	b.ne	406cc8 <ferror@plt+0x3e88>  // b.any
  406cb8:	ldrb	w1, [x19, #1]
  406cbc:	mov	x4, x2
  406cc0:	add	x2, x19, #0x2
  406cc4:	nop
  406cc8:	sub	w0, w1, #0x30
  406ccc:	cmp	w0, #0x9
  406cd0:	b.hi	40736c <ferror@plt+0x452c>  // b.pmore
  406cd4:	ldr	w5, [x25, #1240]
  406cd8:	mov	w0, #0x0                   	// #0
  406cdc:	b	406cfc <ferror@plt+0x3ebc>
  406ce0:	mov	x3, x2
  406ce4:	ldrb	w1, [x3], #1
  406ce8:	sub	w4, w1, #0x30
  406cec:	cmp	w4, #0x9
  406cf0:	b.hi	407378 <ferror@plt+0x4538>  // b.pmore
  406cf4:	mov	x4, x2
  406cf8:	mov	x2, x3
  406cfc:	cmp	w1, w0
  406d00:	ldrb	w3, [x4, #1]
  406d04:	csel	w0, w1, w0, hi  // hi = pmore
  406d08:	and	w0, w0, #0xff
  406d0c:	cmp	w5, w3
  406d10:	b.ne	406ce0 <ferror@plt+0x3ea0>  // b.any
  406d14:	ldrb	w1, [x4, #2]
  406d18:	add	x2, x4, #0x2
  406d1c:	add	x3, x4, #0x3
  406d20:	sub	w6, w1, #0x30
  406d24:	cmp	w6, #0x9
  406d28:	b.ls	406cf4 <ferror@plt+0x3eb4>  // b.plast
  406d2c:	mov	x3, x2
  406d30:	add	x2, x4, #0x1
  406d34:	cmp	w0, #0x2f
  406d38:	b.ls	406d48 <ferror@plt+0x3f08>  // b.plast
  406d3c:	ldrb	w0, [x28, #53]
  406d40:	cbnz	w0, 4073c0 <ferror@plt+0x4580>
  406d44:	str	x2, [sp, #120]
  406d48:	strb	w21, [x22]
  406d4c:	ldr	x22, [sp, #120]
  406d50:	adrp	x24, 416000 <_obstack_memory_used@@Base+0x6c8>
  406d54:	add	x24, x24, #0x570
  406d58:	sub	x27, x19, x20
  406d5c:	mov	x0, x20
  406d60:	mov	x1, x27
  406d64:	mov	w2, #0x0                   	// #0
  406d68:	bl	40e7d0 <ferror@plt+0xb990>
  406d6c:	sxtw	x21, w0
  406d70:	cmp	x19, x20
  406d74:	b.ls	406f68 <ferror@plt+0x4128>  // b.plast
  406d78:	sub	x0, x27, #0x1
  406d7c:	mov	x2, x20
  406d80:	cmp	x0, #0xe
  406d84:	b.ls	406e08 <ferror@plt+0x3fc8>  // b.plast
  406d88:	movi	v2.4s, #0x0
  406d8c:	and	x0, x27, #0xfffffffffffffff0
  406d90:	movi	v6.16b, #0x1
  406d94:	add	x0, x0, x20
  406d98:	movi	v0.16b, #0x9
  406d9c:	ldr	q1, [x2], #16
  406da0:	cmeq	v1.16b, v1.16b, v0.16b
  406da4:	cmp	x2, x0
  406da8:	and	v1.16b, v6.16b, v1.16b
  406dac:	uxtl	v0.8h, v1.8b
  406db0:	uxtl2	v1.8h, v1.16b
  406db4:	uxtl	v5.4s, v0.4h
  406db8:	uxtl2	v3.4s, v0.8h
  406dbc:	uxtl	v4.4s, v1.4h
  406dc0:	uxtl2	v1.4s, v1.8h
  406dc4:	uxtl	v0.2d, v5.2s
  406dc8:	uaddw2	v0.2d, v0.2d, v5.4s
  406dcc:	uaddw	v0.2d, v0.2d, v3.2s
  406dd0:	uaddw2	v0.2d, v0.2d, v3.4s
  406dd4:	uaddw	v0.2d, v0.2d, v4.2s
  406dd8:	uaddw2	v0.2d, v0.2d, v4.4s
  406ddc:	uaddw	v0.2d, v0.2d, v1.2s
  406de0:	uaddw2	v0.2d, v0.2d, v1.4s
  406de4:	add	v2.2d, v2.2d, v0.2d
  406de8:	b.ne	406d98 <ferror@plt+0x3f58>  // b.any
  406dec:	addp	d2, v2.2d
  406df0:	and	x0, x27, #0xfffffffffffffff0
  406df4:	add	x20, x20, x0
  406df8:	cmp	x0, x27
  406dfc:	mov	x0, v2.d[0]
  406e00:	add	x21, x21, x0
  406e04:	b.eq	406f68 <ferror@plt+0x4128>  // b.none
  406e08:	mov	x0, x20
  406e0c:	ldrb	w1, [x0], #1
  406e10:	cmp	w1, #0x9
  406e14:	cinc	x21, x21, eq  // eq = none
  406e18:	cmp	x19, x0
  406e1c:	b.ls	406f68 <ferror@plt+0x4128>  // b.plast
  406e20:	ldrb	w1, [x20, #1]
  406e24:	add	x0, x20, #0x2
  406e28:	cmp	w1, #0x9
  406e2c:	cinc	x21, x21, eq  // eq = none
  406e30:	cmp	x19, x0
  406e34:	b.ls	406f68 <ferror@plt+0x4128>  // b.plast
  406e38:	ldrb	w1, [x20, #2]
  406e3c:	add	x0, x20, #0x3
  406e40:	cmp	w1, #0x9
  406e44:	cinc	x21, x21, eq  // eq = none
  406e48:	cmp	x19, x0
  406e4c:	b.ls	406f68 <ferror@plt+0x4128>  // b.plast
  406e50:	ldrb	w1, [x20, #3]
  406e54:	add	x0, x20, #0x4
  406e58:	cmp	w1, #0x9
  406e5c:	cinc	x21, x21, eq  // eq = none
  406e60:	cmp	x19, x0
  406e64:	b.ls	406f68 <ferror@plt+0x4128>  // b.plast
  406e68:	ldrb	w1, [x20, #4]
  406e6c:	add	x0, x20, #0x5
  406e70:	cmp	w1, #0x9
  406e74:	cinc	x21, x21, eq  // eq = none
  406e78:	cmp	x19, x0
  406e7c:	b.ls	406f68 <ferror@plt+0x4128>  // b.plast
  406e80:	ldrb	w1, [x20, #5]
  406e84:	add	x0, x20, #0x6
  406e88:	cmp	w1, #0x9
  406e8c:	cinc	x21, x21, eq  // eq = none
  406e90:	cmp	x19, x0
  406e94:	b.ls	406f68 <ferror@plt+0x4128>  // b.plast
  406e98:	ldrb	w1, [x20, #6]
  406e9c:	add	x0, x20, #0x7
  406ea0:	cmp	w1, #0x9
  406ea4:	cinc	x21, x21, eq  // eq = none
  406ea8:	cmp	x19, x0
  406eac:	b.ls	406f68 <ferror@plt+0x4128>  // b.plast
  406eb0:	ldrb	w1, [x20, #7]
  406eb4:	add	x0, x20, #0x8
  406eb8:	cmp	w1, #0x9
  406ebc:	cinc	x21, x21, eq  // eq = none
  406ec0:	cmp	x19, x0
  406ec4:	b.ls	406f68 <ferror@plt+0x4128>  // b.plast
  406ec8:	ldrb	w1, [x20, #8]
  406ecc:	add	x0, x20, #0x9
  406ed0:	cmp	w1, #0x9
  406ed4:	cinc	x21, x21, eq  // eq = none
  406ed8:	cmp	x19, x0
  406edc:	b.ls	406f68 <ferror@plt+0x4128>  // b.plast
  406ee0:	ldrb	w1, [x20, #9]
  406ee4:	add	x0, x20, #0xa
  406ee8:	cmp	w1, #0x9
  406eec:	cinc	x21, x21, eq  // eq = none
  406ef0:	cmp	x19, x0
  406ef4:	b.ls	406f68 <ferror@plt+0x4128>  // b.plast
  406ef8:	ldrb	w1, [x20, #10]
  406efc:	add	x0, x20, #0xb
  406f00:	cmp	w1, #0x9
  406f04:	cinc	x21, x21, eq  // eq = none
  406f08:	cmp	x19, x0
  406f0c:	b.ls	406f68 <ferror@plt+0x4128>  // b.plast
  406f10:	ldrb	w1, [x20, #11]
  406f14:	add	x0, x20, #0xc
  406f18:	cmp	w1, #0x9
  406f1c:	cinc	x21, x21, eq  // eq = none
  406f20:	cmp	x19, x0
  406f24:	b.ls	406f68 <ferror@plt+0x4128>  // b.plast
  406f28:	ldrb	w1, [x20, #12]
  406f2c:	add	x0, x20, #0xd
  406f30:	cmp	w1, #0x9
  406f34:	cinc	x21, x21, eq  // eq = none
  406f38:	cmp	x19, x0
  406f3c:	b.ls	406f68 <ferror@plt+0x4128>  // b.plast
  406f40:	ldrb	w1, [x20, #13]
  406f44:	add	x0, x20, #0xe
  406f48:	cmp	w1, #0x9
  406f4c:	cinc	x21, x21, eq  // eq = none
  406f50:	cmp	x19, x0
  406f54:	b.ls	406f68 <ferror@plt+0x4128>  // b.plast
  406f58:	ldrb	w0, [x20, #14]
  406f5c:	cmp	w0, #0x9
  406f60:	cinc	x21, x21, eq  // eq = none
  406f64:	nop
  406f68:	sub	x27, x22, x19
  406f6c:	mov	x0, x19
  406f70:	mov	x1, x27
  406f74:	mov	w2, #0x0                   	// #0
  406f78:	bl	40e7d0 <ferror@plt+0xb990>
  406f7c:	sxtw	x20, w0
  406f80:	cmp	x19, x22
  406f84:	b.cs	407178 <ferror@plt+0x4338>  // b.hs, b.nlast
  406f88:	sub	x0, x27, #0x1
  406f8c:	mov	x2, x19
  406f90:	cmp	x0, #0xe
  406f94:	b.ls	407018 <ferror@plt+0x41d8>  // b.plast
  406f98:	movi	v2.4s, #0x0
  406f9c:	and	x0, x27, #0xfffffffffffffff0
  406fa0:	movi	v6.16b, #0x1
  406fa4:	add	x0, x0, x19
  406fa8:	movi	v0.16b, #0x9
  406fac:	ldr	q1, [x2], #16
  406fb0:	cmeq	v1.16b, v1.16b, v0.16b
  406fb4:	cmp	x2, x0
  406fb8:	and	v1.16b, v6.16b, v1.16b
  406fbc:	uxtl	v0.8h, v1.8b
  406fc0:	uxtl2	v1.8h, v1.16b
  406fc4:	uxtl	v5.4s, v0.4h
  406fc8:	uxtl2	v3.4s, v0.8h
  406fcc:	uxtl	v4.4s, v1.4h
  406fd0:	uxtl2	v1.4s, v1.8h
  406fd4:	uxtl	v0.2d, v5.2s
  406fd8:	uaddw2	v0.2d, v0.2d, v5.4s
  406fdc:	uaddw	v0.2d, v0.2d, v3.2s
  406fe0:	uaddw2	v0.2d, v0.2d, v3.4s
  406fe4:	uaddw	v0.2d, v0.2d, v4.2s
  406fe8:	uaddw2	v0.2d, v0.2d, v4.4s
  406fec:	uaddw	v0.2d, v0.2d, v1.2s
  406ff0:	uaddw2	v0.2d, v0.2d, v1.4s
  406ff4:	add	v2.2d, v2.2d, v0.2d
  406ff8:	b.ne	406fa8 <ferror@plt+0x4168>  // b.any
  406ffc:	addp	d2, v2.2d
  407000:	and	x0, x27, #0xfffffffffffffff0
  407004:	add	x19, x19, x0
  407008:	cmp	x0, x27
  40700c:	mov	x0, v2.d[0]
  407010:	add	x20, x20, x0
  407014:	b.eq	407178 <ferror@plt+0x4338>  // b.none
  407018:	mov	x0, x19
  40701c:	ldrb	w1, [x0], #1
  407020:	cmp	w1, #0x9
  407024:	cinc	x20, x20, eq  // eq = none
  407028:	cmp	x22, x0
  40702c:	b.ls	407178 <ferror@plt+0x4338>  // b.plast
  407030:	ldrb	w1, [x19, #1]
  407034:	add	x0, x19, #0x2
  407038:	cmp	w1, #0x9
  40703c:	cinc	x20, x20, eq  // eq = none
  407040:	cmp	x22, x0
  407044:	b.ls	407178 <ferror@plt+0x4338>  // b.plast
  407048:	ldrb	w1, [x19, #2]
  40704c:	add	x0, x19, #0x3
  407050:	cmp	w1, #0x9
  407054:	cinc	x20, x20, eq  // eq = none
  407058:	cmp	x22, x0
  40705c:	b.ls	407178 <ferror@plt+0x4338>  // b.plast
  407060:	ldrb	w1, [x19, #3]
  407064:	add	x0, x19, #0x4
  407068:	cmp	w1, #0x9
  40706c:	cinc	x20, x20, eq  // eq = none
  407070:	cmp	x22, x0
  407074:	b.ls	407178 <ferror@plt+0x4338>  // b.plast
  407078:	ldrb	w1, [x19, #4]
  40707c:	add	x0, x19, #0x5
  407080:	cmp	w1, #0x9
  407084:	cinc	x20, x20, eq  // eq = none
  407088:	cmp	x22, x0
  40708c:	b.ls	407178 <ferror@plt+0x4338>  // b.plast
  407090:	ldrb	w1, [x19, #5]
  407094:	add	x0, x19, #0x6
  407098:	cmp	w1, #0x9
  40709c:	cinc	x20, x20, eq  // eq = none
  4070a0:	cmp	x22, x0
  4070a4:	b.ls	407178 <ferror@plt+0x4338>  // b.plast
  4070a8:	ldrb	w1, [x19, #6]
  4070ac:	add	x0, x19, #0x7
  4070b0:	cmp	w1, #0x9
  4070b4:	cinc	x20, x20, eq  // eq = none
  4070b8:	cmp	x22, x0
  4070bc:	b.ls	407178 <ferror@plt+0x4338>  // b.plast
  4070c0:	ldrb	w1, [x19, #7]
  4070c4:	add	x0, x19, #0x8
  4070c8:	cmp	w1, #0x9
  4070cc:	cinc	x20, x20, eq  // eq = none
  4070d0:	cmp	x22, x0
  4070d4:	b.ls	407178 <ferror@plt+0x4338>  // b.plast
  4070d8:	ldrb	w1, [x19, #8]
  4070dc:	add	x0, x19, #0x9
  4070e0:	cmp	w1, #0x9
  4070e4:	cinc	x20, x20, eq  // eq = none
  4070e8:	cmp	x22, x0
  4070ec:	b.ls	407178 <ferror@plt+0x4338>  // b.plast
  4070f0:	ldrb	w1, [x19, #9]
  4070f4:	add	x0, x19, #0xa
  4070f8:	cmp	w1, #0x9
  4070fc:	cinc	x20, x20, eq  // eq = none
  407100:	cmp	x22, x0
  407104:	b.ls	407178 <ferror@plt+0x4338>  // b.plast
  407108:	ldrb	w1, [x19, #10]
  40710c:	add	x0, x19, #0xb
  407110:	cmp	w1, #0x9
  407114:	cinc	x20, x20, eq  // eq = none
  407118:	cmp	x22, x0
  40711c:	b.ls	407178 <ferror@plt+0x4338>  // b.plast
  407120:	ldrb	w1, [x19, #11]
  407124:	add	x0, x19, #0xc
  407128:	cmp	w1, #0x9
  40712c:	cinc	x20, x20, eq  // eq = none
  407130:	cmp	x22, x0
  407134:	b.ls	407178 <ferror@plt+0x4338>  // b.plast
  407138:	ldrb	w1, [x19, #12]
  40713c:	add	x0, x19, #0xd
  407140:	cmp	w1, #0x9
  407144:	cinc	x20, x20, eq  // eq = none
  407148:	cmp	x22, x0
  40714c:	b.ls	407178 <ferror@plt+0x4338>  // b.plast
  407150:	ldrb	w1, [x19, #13]
  407154:	add	x0, x19, #0xe
  407158:	cmp	w1, #0x9
  40715c:	cinc	x20, x20, eq  // eq = none
  407160:	cmp	x22, x0
  407164:	b.ls	407178 <ferror@plt+0x4338>  // b.plast
  407168:	ldrb	w0, [x19, #14]
  40716c:	cmp	w0, #0x9
  407170:	cinc	x20, x20, eq  // eq = none
  407174:	nop
  407178:	adrp	x19, 42d000 <_obstack_memory_used@@Base+0x176c8>
  40717c:	sub	x22, x21, #0x1
  407180:	add	x19, x19, #0x550
  407184:	cbz	x21, 4071b0 <ferror@plt+0x4370>
  407188:	ldr	x0, [x19]
  40718c:	ldp	x1, x2, [x0, #40]
  407190:	cmp	x1, x2
  407194:	b.cs	407228 <ferror@plt+0x43e8>  // b.hs, b.nlast
  407198:	add	x2, x1, #0x1
  40719c:	str	x2, [x0, #40]
  4071a0:	strb	w26, [x1]
  4071a4:	sub	x22, x22, #0x1
  4071a8:	cmn	x22, #0x1
  4071ac:	b.ne	407188 <ferror@plt+0x4348>  // b.any
  4071b0:	cbz	x20, 407248 <ferror@plt+0x4408>
  4071b4:	adrp	x19, 42d000 <_obstack_memory_used@@Base+0x176c8>
  4071b8:	add	x19, x19, #0x550
  4071bc:	mov	w21, #0x5f                  	// #95
  4071c0:	ldr	x0, [x19]
  4071c4:	ldp	x1, x2, [x0, #40]
  4071c8:	cmp	x1, x2
  4071cc:	b.cs	407234 <ferror@plt+0x43f4>  // b.hs, b.nlast
  4071d0:	add	x2, x1, #0x1
  4071d4:	str	x2, [x0, #40]
  4071d8:	strb	w21, [x1]
  4071dc:	subs	x20, x20, #0x1
  4071e0:	b.ne	4071c0 <ferror@plt+0x4380>  // b.any
  4071e4:	ldr	x0, [x19]
  4071e8:	ldp	x1, x2, [x0, #40]
  4071ec:	cmp	x1, x2
  4071f0:	b.cs	407334 <ferror@plt+0x44f4>  // b.hs, b.nlast
  4071f4:	add	x2, x1, #0x1
  4071f8:	str	x2, [x0, #40]
  4071fc:	mov	w0, #0xa                   	// #10
  407200:	strb	w0, [x1]
  407204:	cbz	x28, 407350 <ferror@plt+0x4510>
  407208:	ldr	x28, [x28, #64]
  40720c:	cbz	x28, 407268 <ferror@plt+0x4428>
  407210:	ldp	x20, x21, [x23]
  407214:	sub	x22, x21, #0x1
  407218:	add	x22, x20, x22
  40721c:	cbnz	x28, 406be0 <ferror@plt+0x3da0>
  407220:	mov	x19, x20
  407224:	b	406d50 <ferror@plt+0x3f10>
  407228:	mov	w1, #0x20                  	// #32
  40722c:	bl	402ad0 <__overflow@plt>
  407230:	b	4071a4 <ferror@plt+0x4364>
  407234:	mov	w1, #0x5f                  	// #95
  407238:	bl	402ad0 <__overflow@plt>
  40723c:	b	4071dc <ferror@plt+0x439c>
  407240:	str	x22, [sp, #120]
  407244:	b	406d48 <ferror@plt+0x3f08>
  407248:	mov	w2, #0x5                   	// #5
  40724c:	mov	x1, x24
  407250:	mov	x0, #0x0                   	// #0
  407254:	bl	402d20 <dcgettext@plt>
  407258:	mov	x1, x0
  40725c:	mov	w0, #0x1                   	// #1
  407260:	bl	402980 <__printf_chk@plt>
  407264:	b	407204 <ferror@plt+0x43c4>
  407268:	ldrb	w0, [x25, #1248]
  40726c:	cbnz	w0, 407350 <ferror@plt+0x4510>
  407270:	ldrb	w0, [x25, #1249]
  407274:	cbnz	w0, 407350 <ferror@plt+0x4510>
  407278:	ldp	x20, x22, [x23]
  40727c:	sub	x22, x22, #0x1
  407280:	mov	x19, x20
  407284:	add	x22, x20, x22
  407288:	b	406d58 <ferror@plt+0x3f18>
  40728c:	ldr	x0, [x28, #16]
  407290:	mov	x19, x20
  407294:	cmn	x0, #0x1
  407298:	b.ne	406c0c <ferror@plt+0x3dcc>  // b.any
  40729c:	b	406c20 <ferror@plt+0x3de0>
  4072a0:	ldrb	w0, [x19]
  4072a4:	add	x1, x25, #0x320
  4072a8:	mov	x4, x19
  4072ac:	ldrb	w0, [x1, w0, sxtw]
  4072b0:	cbz	w0, 4072c4 <ferror@plt+0x4484>
  4072b4:	nop
  4072b8:	ldrb	w0, [x4, #1]!
  4072bc:	ldrb	w0, [x1, w0, sxtw]
  4072c0:	cbnz	w0, 4072b8 <ferror@plt+0x4478>
  4072c4:	add	x5, x25, #0x200
  4072c8:	mov	x7, #0xc                   	// #12
  4072cc:	mov	x8, #0x0                   	// #0
  4072d0:	add	x6, x8, x7
  4072d4:	ldr	x1, [sp, #104]
  4072d8:	lsr	x6, x6, #1
  4072dc:	lsl	x0, x6, #4
  4072e0:	ldr	x2, [x1, x0]
  4072e4:	mov	x1, x4
  4072e8:	ldrb	w0, [x2]
  4072ec:	cbnz	w0, 407304 <ferror@plt+0x44c4>
  4072f0:	b	407324 <ferror@plt+0x44e4>
  4072f4:	b.hi	40732c <ferror@plt+0x44ec>  // b.pmore
  4072f8:	ldrb	w0, [x2, #1]!
  4072fc:	add	x1, x1, #0x1
  407300:	cbz	w0, 407324 <ferror@plt+0x44e4>
  407304:	ldrb	w3, [x1]
  407308:	ldrb	w3, [x5, w3, sxtw]
  40730c:	cmp	w3, w0
  407310:	b.cs	4072f4 <ferror@plt+0x44b4>  // b.hs, b.nlast
  407314:	mov	x7, x6
  407318:	cmp	x8, x7
  40731c:	b.cc	4072d0 <ferror@plt+0x4490>  // b.lo, b.ul, b.last
  407320:	b	406d48 <ferror@plt+0x3f08>
  407324:	str	x1, [sp, #120]
  407328:	b	406d48 <ferror@plt+0x3f08>
  40732c:	add	x8, x6, #0x1
  407330:	b	407318 <ferror@plt+0x44d8>
  407334:	mov	w1, #0xa                   	// #10
  407338:	bl	402ad0 <__overflow@plt>
  40733c:	b	407204 <ferror@plt+0x43c4>
  407340:	add	x1, sp, #0x78
  407344:	mov	x0, x19
  407348:	bl	402b90 <strtold@plt>
  40734c:	b	406d48 <ferror@plt+0x3f08>
  407350:	ldp	x19, x20, [sp, #16]
  407354:	ldp	x21, x22, [sp, #32]
  407358:	ldp	x23, x24, [sp, #48]
  40735c:	ldp	x25, x26, [sp, #64]
  407360:	ldp	x27, x28, [sp, #80]
  407364:	ldp	x29, x30, [sp], #128
  407368:	ret
  40736c:	mov	x3, x2
  407370:	mov	x2, x4
  407374:	mov	w0, #0x0                   	// #0
  407378:	ldr	w4, [x25, #1244]
  40737c:	cmp	w1, w4
  407380:	b.ne	406d34 <ferror@plt+0x3ef4>  // b.any
  407384:	mov	x1, x3
  407388:	ldrb	w4, [x1], #1
  40738c:	sub	w2, w4, #0x30
  407390:	cmp	w2, #0x9
  407394:	b.hi	4073dc <ferror@plt+0x459c>  // b.pmore
  407398:	cmp	w4, w0
  40739c:	mov	x2, x1
  4073a0:	csel	w0, w4, w0, hi  // hi = pmore
  4073a4:	ldrb	w4, [x1], #1
  4073a8:	and	w0, w0, #0xff
  4073ac:	sub	w3, w4, #0x30
  4073b0:	cmp	w3, #0x9
  4073b4:	b.ls	407398 <ferror@plt+0x4558>  // b.plast
  4073b8:	mov	x3, x1
  4073bc:	b	406d34 <ferror@plt+0x3ef4>
  4073c0:	ldrb	w1, [x2]
  4073c4:	adrp	x0, 418000 <_obstack_memory_used@@Base+0x26c8>
  4073c8:	add	x0, x0, #0x100
  4073cc:	ldrb	w0, [x0, w1, sxtw]
  4073d0:	cmp	w0, #0x0
  4073d4:	csel	x2, x2, x3, eq  // eq = none
  4073d8:	b	406d44 <ferror@plt+0x3f04>
  4073dc:	mov	x2, x3
  4073e0:	mov	x3, x1
  4073e4:	b	406d34 <ferror@plt+0x3ef4>
  4073e8:	mov	w2, #0x5                   	// #5
  4073ec:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x6c8>
  4073f0:	mov	x0, #0x0                   	// #0
  4073f4:	add	x1, x1, #0x560
  4073f8:	stp	x25, x26, [sp, #64]
  4073fc:	stp	x27, x28, [sp, #80]
  407400:	bl	402d20 <dcgettext@plt>
  407404:	mov	x1, x24
  407408:	bl	405a20 <ferror@plt+0x2be0>
  40740c:	nop
  407410:	stp	x29, x30, [sp, #-176]!
  407414:	mov	x29, sp
  407418:	stp	x19, x20, [sp, #16]
  40741c:	adrp	x20, 42d000 <_obstack_memory_used@@Base+0x176c8>
  407420:	add	x20, x20, #0x570
  407424:	ldr	x0, [x20, #768]
  407428:	cbz	x0, 40746c <ferror@plt+0x462c>
  40742c:	add	x1, x20, #0x430
  407430:	add	x2, sp, #0x30
  407434:	mov	w0, #0x0                   	// #0
  407438:	bl	402740 <pthread_sigmask@plt>
  40743c:	ldr	x19, [x20, #768]
  407440:	cmp	w0, #0x0
  407444:	cset	w0, eq  // eq = none
  407448:	strb	w0, [sp, #40]
  40744c:	cbz	x19, 407464 <ferror@plt+0x4624>
  407450:	add	x0, x19, #0xd
  407454:	bl	402e20 <unlink@plt>
  407458:	ldr	x19, [x19]
  40745c:	cbnz	x19, 407450 <ferror@plt+0x4610>
  407460:	ldrb	w0, [sp, #40]
  407464:	str	xzr, [x20, #768]
  407468:	cbnz	w0, 40747c <ferror@plt+0x463c>
  40746c:	bl	40b9c8 <ferror@plt+0x8b88>
  407470:	ldp	x19, x20, [sp, #16]
  407474:	ldp	x29, x30, [sp], #176
  407478:	ret
  40747c:	add	x1, sp, #0x30
  407480:	mov	x2, #0x0                   	// #0
  407484:	mov	w0, #0x2                   	// #2
  407488:	bl	402740 <pthread_sigmask@plt>
  40748c:	bl	40b9c8 <ferror@plt+0x8b88>
  407490:	ldp	x19, x20, [sp, #16]
  407494:	ldp	x29, x30, [sp], #176
  407498:	ret
  40749c:	nop
  4074a0:	stp	x29, x30, [sp, #-80]!
  4074a4:	mov	x29, sp
  4074a8:	stp	x19, x20, [sp, #16]
  4074ac:	adrp	x20, 42d000 <_obstack_memory_used@@Base+0x176c8>
  4074b0:	add	x20, x20, #0x570
  4074b4:	mov	w19, w0
  4074b8:	add	x1, sp, #0x40
  4074bc:	str	w19, [sp, #72]
  4074c0:	ldr	x0, [x20, #1216]
  4074c4:	bl	40e290 <ferror@plt+0xb450>
  4074c8:	cbz	x0, 40752c <ferror@plt+0x46ec>
  4074cc:	mov	x1, x0
  4074d0:	cmp	w19, #0x0
  4074d4:	str	x21, [sp, #32]
  4074d8:	mov	w21, #0x2                   	// #2
  4074dc:	cset	w2, eq  // eq = none
  4074e0:	csinv	w0, w19, wzr, ne  // ne = any
  4074e4:	strb	w21, [x1, #12]
  4074e8:	add	x1, sp, #0x3c
  4074ec:	bl	402e10 <waitpid@plt>
  4074f0:	mov	w2, w0
  4074f4:	cmp	w0, #0x0
  4074f8:	b.lt	407564 <ferror@plt+0x4724>  // b.tstop
  4074fc:	b.eq	407538 <ferror@plt+0x46f8>  // b.none
  407500:	cmp	w19, #0x0
  407504:	b.le	407548 <ferror@plt+0x4708>
  407508:	ldr	w0, [sp, #60]
  40750c:	and	w1, w0, #0x7f
  407510:	ubfx	x0, x0, #8, #8
  407514:	orr	w0, w0, w1
  407518:	cbnz	w0, 4075a8 <ferror@plt+0x4768>
  40751c:	ldr	w0, [x20, #1224]
  407520:	ldr	x21, [sp, #32]
  407524:	sub	w0, w0, #0x1
  407528:	str	w0, [x20, #1224]
  40752c:	ldp	x19, x20, [sp, #16]
  407530:	ldp	x29, x30, [sp], #80
  407534:	ret
  407538:	ldp	x19, x20, [sp, #16]
  40753c:	ldr	x21, [sp, #32]
  407540:	ldp	x29, x30, [sp], #80
  407544:	ret
  407548:	ldr	x0, [x20, #1216]
  40754c:	add	x1, sp, #0x40
  407550:	str	w2, [sp, #72]
  407554:	bl	40e290 <ferror@plt+0xb450>
  407558:	cbz	x0, 407538 <ferror@plt+0x46f8>
  40755c:	strb	w21, [x0, #12]
  407560:	b	407508 <ferror@plt+0x46c8>
  407564:	bl	402db0 <__errno_location@plt>
  407568:	mov	x3, x0
  40756c:	mov	w2, #0x5                   	// #5
  407570:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x6c8>
  407574:	mov	x0, #0x0                   	// #0
  407578:	add	x1, x1, #0x4d8
  40757c:	ldr	w21, [x3]
  407580:	bl	402d20 <dcgettext@plt>
  407584:	ldr	x1, [x20, #1208]
  407588:	mov	x19, x0
  40758c:	mov	w0, #0x4                   	// #4
  407590:	bl	4110c0 <ferror@plt+0xe280>
  407594:	mov	x3, x0
  407598:	mov	x2, x19
  40759c:	mov	w1, w21
  4075a0:	mov	w0, #0x2                   	// #2
  4075a4:	bl	4027b0 <error@plt>
  4075a8:	mov	w2, #0x5                   	// #5
  4075ac:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x6c8>
  4075b0:	mov	x0, #0x0                   	// #0
  4075b4:	add	x1, x1, #0x4f0
  4075b8:	bl	402d20 <dcgettext@plt>
  4075bc:	mov	x19, x0
  4075c0:	ldr	x1, [x20, #1208]
  4075c4:	mov	w0, #0x4                   	// #4
  4075c8:	bl	4110c0 <ferror@plt+0xe280>
  4075cc:	mov	x3, x0
  4075d0:	mov	x2, x19
  4075d4:	mov	w1, #0x0                   	// #0
  4075d8:	mov	w0, #0x2                   	// #2
  4075dc:	bl	4027b0 <error@plt>
  4075e0:	stp	x29, x30, [sp, #-208]!
  4075e4:	mov	x29, sp
  4075e8:	stp	x21, x22, [sp, #32]
  4075ec:	adrp	x21, 42d000 <_obstack_memory_used@@Base+0x176c8>
  4075f0:	add	x21, x21, #0x570
  4075f4:	stp	x19, x20, [sp, #16]
  4075f8:	mov	x20, x0
  4075fc:	add	x22, x21, #0x300
  407600:	ldr	x19, [x21, #768]
  407604:	stp	x23, x24, [sp, #48]
  407608:	add	x0, x19, #0xd
  40760c:	cmp	x20, x0
  407610:	b.eq	407628 <ferror@plt+0x47e8>  // b.none
  407614:	mov	x22, x19
  407618:	ldr	x19, [x19]
  40761c:	add	x0, x19, #0xd
  407620:	cmp	x20, x0
  407624:	b.ne	407614 <ferror@plt+0x47d4>  // b.any
  407628:	ldrb	w0, [x19, #12]
  40762c:	cmp	w0, #0x1
  407630:	b.eq	407718 <ferror@plt+0x48d8>  // b.none
  407634:	add	x1, x21, #0x430
  407638:	add	x2, sp, #0x50
  40763c:	mov	w0, #0x0                   	// #0
  407640:	ldr	x23, [x19]
  407644:	bl	402740 <pthread_sigmask@plt>
  407648:	mov	w1, w0
  40764c:	mov	x0, x20
  407650:	cmp	w1, #0x0
  407654:	cset	w1, eq  // eq = none
  407658:	strb	w1, [sp, #72]
  40765c:	bl	402e20 <unlink@plt>
  407660:	mov	w21, w0
  407664:	bl	402db0 <__errno_location@plt>
  407668:	ldr	w24, [x0]
  40766c:	ldrb	w1, [sp, #72]
  407670:	str	x23, [x22]
  407674:	cbnz	w1, 407700 <ferror@plt+0x48c0>
  407678:	cbnz	w21, 40769c <ferror@plt+0x485c>
  40767c:	cbz	x23, 4076dc <ferror@plt+0x489c>
  407680:	mov	x0, x19
  407684:	bl	402ba0 <free@plt>
  407688:	ldp	x19, x20, [sp, #16]
  40768c:	ldp	x21, x22, [sp, #32]
  407690:	ldp	x23, x24, [sp, #48]
  407694:	ldp	x29, x30, [sp], #208
  407698:	ret
  40769c:	mov	w2, #0x5                   	// #5
  4076a0:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x6c8>
  4076a4:	mov	x0, #0x0                   	// #0
  4076a8:	add	x1, x1, #0x588
  4076ac:	bl	402d20 <dcgettext@plt>
  4076b0:	mov	x21, x0
  4076b4:	mov	x2, x20
  4076b8:	mov	w1, #0x3                   	// #3
  4076bc:	mov	w0, #0x0                   	// #0
  4076c0:	bl	411a40 <ferror@plt+0xec00>
  4076c4:	mov	x2, x21
  4076c8:	mov	x3, x0
  4076cc:	mov	w1, w24
  4076d0:	mov	w0, #0x0                   	// #0
  4076d4:	bl	4027b0 <error@plt>
  4076d8:	cbnz	x23, 407680 <ferror@plt+0x4840>
  4076dc:	adrp	x0, 42d000 <_obstack_memory_used@@Base+0x176c8>
  4076e0:	str	x22, [x0, #952]
  4076e4:	mov	x0, x19
  4076e8:	bl	402ba0 <free@plt>
  4076ec:	ldp	x19, x20, [sp, #16]
  4076f0:	ldp	x21, x22, [sp, #32]
  4076f4:	ldp	x23, x24, [sp, #48]
  4076f8:	ldp	x29, x30, [sp], #208
  4076fc:	ret
  407700:	add	x1, sp, #0x50
  407704:	mov	x2, #0x0                   	// #0
  407708:	mov	w0, #0x2                   	// #2
  40770c:	bl	402740 <pthread_sigmask@plt>
  407710:	cbz	w21, 40767c <ferror@plt+0x483c>
  407714:	b	40769c <ferror@plt+0x485c>
  407718:	ldr	w0, [x19, #8]
  40771c:	bl	4074a0 <ferror@plt+0x4660>
  407720:	b	407634 <ferror@plt+0x47f4>
  407724:	nop
  407728:	stp	x29, x30, [sp, #-144]!
  40772c:	mov	x29, sp
  407730:	stp	x1, x0, [sp, #112]
  407734:	mov	x1, x0
  407738:	ldrb	w0, [x0, #48]
  40773c:	str	x2, [sp, #128]
  407740:	cbnz	w0, 407970 <ferror@plt+0x4b30>
  407744:	stp	x23, x24, [sp, #48]
  407748:	adrp	x0, 42d000 <_obstack_memory_used@@Base+0x176c8>
  40774c:	adrp	x24, 42d000 <_obstack_memory_used@@Base+0x176c8>
  407750:	stp	x27, x28, [sp, #80]
  407754:	add	x0, x0, #0x3b0
  407758:	add	x24, x24, #0x570
  40775c:	ldp	x28, x4, [x1]
  407760:	stp	x19, x20, [sp, #16]
  407764:	ldp	x2, x23, [x1, #32]
  407768:	stp	x21, x22, [sp, #32]
  40776c:	stp	x25, x26, [sp, #64]
  407770:	str	x0, [sp, #136]
  407774:	ldrb	w22, [x0, #224]
  407778:	cmp	x4, x2
  40777c:	ldr	x19, [x0, #232]
  407780:	ldr	x27, [x24, #1232]
  407784:	b.ne	40797c <ferror@plt+0x4b3c>  // b.any
  407788:	ldr	x0, [x1, #16]
  40778c:	sub	x19, x19, #0x22
  407790:	ldr	x1, [sp, #120]
  407794:	add	x24, x24, #0x320
  407798:	ldr	x20, [x1, #24]
  40779c:	add	x1, x23, #0x1
  4077a0:	str	x1, [sp, #104]
  4077a4:	add	x20, x28, x20
  4077a8:	add	x26, x28, x4
  4077ac:	sub	x25, x20, x0, lsl #5
  4077b0:	msub	x20, x23, x0, x20
  4077b4:	sub	x20, x20, x26
  4077b8:	cbz	x0, 4077c8 <ferror@plt+0x4988>
  4077bc:	ldp	x5, x0, [x25]
  4077c0:	add	x28, x5, x0
  4077c4:	nop
  4077c8:	ldr	x0, [sp, #104]
  4077cc:	cmp	x20, x0
  4077d0:	b.ls	4078ec <ferror@plt+0x4aac>  // b.plast
  4077d4:	mov	x2, x0
  4077d8:	sub	x21, x20, #0x1
  4077dc:	ldr	x3, [sp, #112]
  4077e0:	mov	x0, x26
  4077e4:	udiv	x21, x21, x2
  4077e8:	mov	x1, #0x1                   	// #1
  4077ec:	mov	x2, x21
  4077f0:	bl	402af0 <fread_unlocked@plt>
  4077f4:	cmp	x21, x0
  4077f8:	sub	x20, x20, x0
  4077fc:	add	x21, x26, x0
  407800:	b.eq	407848 <ferror@plt+0x4a08>  // b.none
  407804:	ldr	x0, [sp, #112]
  407808:	ldr	w0, [x0]
  40780c:	tbnz	w0, #5, 407a2c <ferror@plt+0x4bec>
  407810:	tbz	w0, #4, 407848 <ferror@plt+0x4a08>
  407814:	ldr	x1, [sp, #120]
  407818:	mov	w2, #0x1                   	// #1
  40781c:	ldr	x0, [x1]
  407820:	strb	w2, [x1, #48]
  407824:	cmp	x0, x21
  407828:	b.eq	40795c <ferror@plt+0x4b1c>  // b.none
  40782c:	cmp	x28, x21
  407830:	b.eq	407848 <ferror@plt+0x4a08>  // b.none
  407834:	ldurb	w0, [x21, #-1]
  407838:	cmp	w0, w22
  40783c:	b.eq	407848 <ferror@plt+0x4a08>  // b.none
  407840:	strb	w22, [x21], #1
  407844:	nop
  407848:	sub	x2, x21, x26
  40784c:	mov	x0, x26
  407850:	mov	w1, w22
  407854:	bl	402ce0 <memchr@plt>
  407858:	cbz	x0, 4078dc <ferror@plt+0x4a9c>
  40785c:	nop
  407860:	mov	x26, x0
  407864:	sub	x20, x20, x23
  407868:	strb	wzr, [x26], #1
  40786c:	str	x28, [x25, #-32]!
  407870:	sub	x8, x26, x28
  407874:	str	x8, [x25, #8]
  407878:	cmp	x19, x8
  40787c:	csel	x19, x19, x8, cs  // cs = hs, nlast
  407880:	cbz	x27, 4078c4 <ferror@plt+0x4a84>
  407884:	ldr	x1, [x27, #16]
  407888:	cmn	x1, #0x1
  40788c:	b.eq	4078a0 <ferror@plt+0x4a60>  // b.none
  407890:	mov	x2, x27
  407894:	mov	x1, x8
  407898:	mov	x0, x28
  40789c:	bl	405f68 <ferror@plt+0x3128>
  4078a0:	ldr	x1, [x27]
  4078a4:	str	x0, [x25, #24]
  4078a8:	cmn	x1, #0x1
  4078ac:	b.eq	4079a4 <ferror@plt+0x4b64>  // b.none
  4078b0:	mov	x1, x8
  4078b4:	mov	x0, x28
  4078b8:	mov	x2, x27
  4078bc:	bl	405e18 <ferror@plt+0x2fd8>
  4078c0:	str	x0, [x25, #16]
  4078c4:	mov	x28, x26
  4078c8:	sub	x2, x21, x26
  4078cc:	mov	x0, x26
  4078d0:	mov	w1, w22
  4078d4:	bl	402ce0 <memchr@plt>
  4078d8:	cbnz	x0, 407860 <ferror@plt+0x4a20>
  4078dc:	ldr	x0, [sp, #120]
  4078e0:	mov	x26, x21
  4078e4:	ldrb	w0, [x0, #48]
  4078e8:	cbz	w0, 4077c8 <ferror@plt+0x4988>
  4078ec:	ldr	x3, [sp, #120]
  4078f0:	ldr	x0, [x3]
  4078f4:	ldr	x1, [x3, #24]
  4078f8:	sub	x2, x26, x0
  4078fc:	str	x2, [x3, #8]
  407900:	add	x2, x0, x1
  407904:	sub	x2, x2, x25
  407908:	asr	x2, x2, #5
  40790c:	str	x2, [x3, #16]
  407910:	cbnz	x2, 4079f8 <ferror@plt+0x4bb8>
  407914:	lsr	x20, x1, #5
  407918:	cbz	x0, 4079dc <ferror@plt+0x4b9c>
  40791c:	mov	x2, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  407920:	movk	x2, #0x2aa, lsl #48
  407924:	cmp	x20, x2
  407928:	b.cs	4079ec <ferror@plt+0x4bac>  // b.hs, b.nlast
  40792c:	add	x20, x20, x1, lsr #6
  407930:	add	x20, x20, #0x1
  407934:	lsl	x20, x20, #5
  407938:	mov	x1, x20
  40793c:	bl	414188 <ferror@plt+0x11348>
  407940:	mov	x28, x0
  407944:	ldr	x0, [sp, #120]
  407948:	str	x28, [x0]
  40794c:	str	x20, [x0, #24]
  407950:	ldr	x4, [x0, #8]
  407954:	ldr	x0, [x0, #16]
  407958:	b	4077a4 <ferror@plt+0x4964>
  40795c:	ldp	x19, x20, [sp, #16]
  407960:	ldp	x21, x22, [sp, #32]
  407964:	ldp	x23, x24, [sp, #48]
  407968:	ldp	x25, x26, [sp, #64]
  40796c:	ldp	x27, x28, [sp, #80]
  407970:	mov	w0, #0x0                   	// #0
  407974:	ldp	x29, x30, [sp], #144
  407978:	ret
  40797c:	sub	x4, x4, x2
  407980:	mov	x0, x28
  407984:	add	x1, x28, x4
  407988:	bl	402730 <memmove@plt>
  40798c:	ldr	x1, [sp, #120]
  407990:	mov	x0, #0x0                   	// #0
  407994:	ldr	x4, [x1, #32]
  407998:	stp	x4, xzr, [x1, #8]
  40799c:	ldr	x28, [x1]
  4079a0:	b	40778c <ferror@plt+0x494c>
  4079a4:	ldrb	w0, [x27, #48]
  4079a8:	cbnz	w0, 4079b8 <ferror@plt+0x4b78>
  4079ac:	str	x28, [x25, #16]
  4079b0:	mov	x28, x26
  4079b4:	b	4078c8 <ferror@plt+0x4a88>
  4079b8:	ldrb	w0, [x28]
  4079bc:	ldrb	w0, [x24, w0, sxtw]
  4079c0:	cbz	w0, 4079ac <ferror@plt+0x4b6c>
  4079c4:	nop
  4079c8:	ldrb	w0, [x28, #1]!
  4079cc:	ldrb	w0, [x24, w0, sxtw]
  4079d0:	cbnz	w0, 4079c8 <ferror@plt+0x4b88>
  4079d4:	str	x28, [x25, #16]
  4079d8:	b	4079b0 <ferror@plt+0x4b70>
  4079dc:	cbz	x20, 4079f0 <ferror@plt+0x4bb0>
  4079e0:	cmp	xzr, x20, lsl #5
  4079e4:	lsl	x20, x20, #5
  4079e8:	b.le	407938 <ferror@plt+0x4af8>
  4079ec:	bl	414320 <ferror@plt+0x114e0>
  4079f0:	mov	x20, #0x80                  	// #128
  4079f4:	b	407938 <ferror@plt+0x4af8>
  4079f8:	ldr	x1, [sp, #136]
  4079fc:	sub	x4, x26, x28
  407a00:	add	x19, x19, #0x22
  407a04:	mov	w0, #0x1                   	// #1
  407a08:	ldp	x21, x22, [sp, #32]
  407a0c:	ldp	x23, x24, [sp, #48]
  407a10:	ldp	x25, x26, [sp, #64]
  407a14:	ldp	x27, x28, [sp, #80]
  407a18:	str	x4, [x3, #32]
  407a1c:	str	x19, [x1, #232]
  407a20:	ldp	x19, x20, [sp, #16]
  407a24:	ldp	x29, x30, [sp], #144
  407a28:	ret
  407a2c:	mov	w2, #0x5                   	// #5
  407a30:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x6c8>
  407a34:	mov	x0, #0x0                   	// #0
  407a38:	add	x1, x1, #0x5a8
  407a3c:	bl	402d20 <dcgettext@plt>
  407a40:	ldr	x1, [sp, #128]
  407a44:	bl	405a20 <ferror@plt+0x2be0>
  407a48:	stp	x29, x30, [sp, #-96]!
  407a4c:	cmp	xzr, x1, lsr #61
  407a50:	mov	x29, sp
  407a54:	stp	x19, x20, [sp, #16]
  407a58:	mov	x19, x0
  407a5c:	lsl	x0, x1, #3
  407a60:	stp	x21, x22, [sp, #32]
  407a64:	mov	x22, x1
  407a68:	cset	x1, ne  // ne = any
  407a6c:	stp	x23, x24, [sp, #48]
  407a70:	tbnz	x22, #60, 407c90 <ferror@plt+0x4e50>
  407a74:	cbnz	x1, 407c90 <ferror@plt+0x4e50>
  407a78:	mov	x20, x2
  407a7c:	bl	414158 <ferror@plt+0x11318>
  407a80:	mov	x23, x0
  407a84:	str	x0, [x20]
  407a88:	cbz	x22, 407c88 <ferror@plt+0x4e48>
  407a8c:	adrp	x24, 42d000 <_obstack_memory_used@@Base+0x176c8>
  407a90:	add	x24, x24, #0x570
  407a94:	stp	x25, x26, [sp, #64]
  407a98:	adrp	x25, 416000 <_obstack_memory_used@@Base+0x6c8>
  407a9c:	add	x25, x25, #0x618
  407aa0:	mov	x20, #0x0                   	// #0
  407aa4:	nop
  407aa8:	ldr	x21, [x19, #8]
  407aac:	cbz	x21, 407ab8 <ferror@plt+0x4c78>
  407ab0:	ldrb	w2, [x21, #12]
  407ab4:	cbnz	w2, 407b58 <ferror@plt+0x4d18>
  407ab8:	ldr	x0, [x19]
  407abc:	ldrb	w1, [x0]
  407ac0:	cmp	w1, #0x2d
  407ac4:	b.eq	407b00 <ferror@plt+0x4cc0>  // b.none
  407ac8:	mov	w1, #0x80000               	// #524288
  407acc:	bl	402900 <open@plt>
  407ad0:	tbz	w0, #31, 407c1c <ferror@plt+0x4ddc>
  407ad4:	mov	w1, #0x2                   	// #2
  407ad8:	mov	x0, #0x0                   	// #0
  407adc:	bl	40c9e8 <ferror@plt+0x9ba8>
  407ae0:	str	xzr, [x23, x20, lsl #3]
  407ae4:	mov	x0, x20
  407ae8:	ldp	x19, x20, [sp, #16]
  407aec:	ldp	x21, x22, [sp, #32]
  407af0:	ldp	x23, x24, [sp, #48]
  407af4:	ldp	x25, x26, [sp, #64]
  407af8:	ldp	x29, x30, [sp], #96
  407afc:	ret
  407b00:	ldrb	w1, [x0, #1]
  407b04:	cbnz	w1, 407ac8 <ferror@plt+0x4c88>
  407b08:	adrp	x0, 42d000 <_obstack_memory_used@@Base+0x176c8>
  407b0c:	mov	w1, #0x1                   	// #1
  407b10:	strb	w1, [x24, #1250]
  407b14:	ldr	x21, [x0, #1368]
  407b18:	mov	x0, x21
  407b1c:	mov	w1, #0x2                   	// #2
  407b20:	bl	40c9e8 <ferror@plt+0x9ba8>
  407b24:	str	x21, [x23, x20, lsl #3]
  407b28:	cbz	x21, 407b3c <ferror@plt+0x4cfc>
  407b2c:	add	x20, x20, #0x1
  407b30:	add	x19, x19, #0x10
  407b34:	cmp	x22, x20
  407b38:	b.ne	407aa8 <ferror@plt+0x4c68>  // b.any
  407b3c:	mov	x0, x20
  407b40:	ldp	x19, x20, [sp, #16]
  407b44:	ldp	x21, x22, [sp, #32]
  407b48:	ldp	x23, x24, [sp, #48]
  407b4c:	ldp	x25, x26, [sp, #64]
  407b50:	ldp	x29, x30, [sp], #96
  407b54:	ret
  407b58:	cmp	w2, #0x1
  407b5c:	b.eq	407c2c <ferror@plt+0x4dec>  // b.none
  407b60:	add	x0, x21, #0xd
  407b64:	mov	w1, #0x0                   	// #0
  407b68:	bl	402900 <open@plt>
  407b6c:	mov	w26, w0
  407b70:	tbnz	w0, #31, 407ae0 <ferror@plt+0x4ca0>
  407b74:	mov	x1, #0x9                   	// #9
  407b78:	add	x0, sp, #0x58
  407b7c:	bl	406788 <ferror@plt+0x3948>
  407b80:	mov	w1, w0
  407b84:	cmn	w0, #0x1
  407b88:	b.ne	407bcc <ferror@plt+0x4d8c>  // b.any
  407b8c:	bl	402db0 <__errno_location@plt>
  407b90:	ldr	w21, [x0]
  407b94:	mov	x19, x0
  407b98:	cmp	w21, #0x18
  407b9c:	b.ne	407cf4 <ferror@plt+0x4eb4>  // b.any
  407ba0:	mov	w0, w26
  407ba4:	bl	402a10 <close@plt>
  407ba8:	ldp	x25, x26, [sp, #64]
  407bac:	str	w21, [x19]
  407bb0:	str	xzr, [x23, x20, lsl #3]
  407bb4:	mov	x0, x20
  407bb8:	ldp	x19, x20, [sp, #16]
  407bbc:	ldp	x21, x22, [sp, #32]
  407bc0:	ldp	x23, x24, [sp, #48]
  407bc4:	ldp	x29, x30, [sp], #96
  407bc8:	ret
  407bcc:	cbz	w0, 407c98 <ferror@plt+0x4e58>
  407bd0:	ldr	x0, [x24, #1216]
  407bd4:	str	w1, [x21, #8]
  407bd8:	cbz	x0, 407c38 <ferror@plt+0x4df8>
  407bdc:	mov	w1, #0x1                   	// #1
  407be0:	strb	w1, [x21, #12]
  407be4:	mov	x1, x21
  407be8:	bl	40e078 <ferror@plt+0xb238>
  407bec:	cbz	x0, 407c60 <ferror@plt+0x4e20>
  407bf0:	mov	w0, w26
  407bf4:	bl	402a10 <close@plt>
  407bf8:	ldr	w0, [sp, #92]
  407bfc:	add	x21, x23, x20, lsl #3
  407c00:	bl	402a10 <close@plt>
  407c04:	ldr	w0, [sp, #88]
  407c08:	mov	x1, x25
  407c0c:	bl	4029a0 <fdopen@plt>
  407c10:	cbz	x0, 407c64 <ferror@plt+0x4e24>
  407c14:	str	x0, [x23, x20, lsl #3]
  407c18:	b	407b2c <ferror@plt+0x4cec>
  407c1c:	mov	x1, x25
  407c20:	bl	4029a0 <fdopen@plt>
  407c24:	mov	x21, x0
  407c28:	b	407b18 <ferror@plt+0x4cd8>
  407c2c:	ldr	w0, [x21, #8]
  407c30:	bl	4074a0 <ferror@plt+0x4660>
  407c34:	b	407b60 <ferror@plt+0x4d20>
  407c38:	adrp	x3, 405000 <ferror@plt+0x21c0>
  407c3c:	adrp	x2, 405000 <ferror@plt+0x21c0>
  407c40:	add	x3, x3, #0x388
  407c44:	add	x2, x2, #0x378
  407c48:	mov	x4, #0x0                   	// #0
  407c4c:	mov	x1, #0x0                   	// #0
  407c50:	mov	x0, #0x2f                  	// #47
  407c54:	bl	40d8a0 <ferror@plt+0xaa60>
  407c58:	str	x0, [x24, #1216]
  407c5c:	cbnz	x0, 407bdc <ferror@plt+0x4d9c>
  407c60:	bl	414320 <ferror@plt+0x114e0>
  407c64:	bl	402db0 <__errno_location@plt>
  407c68:	ldr	w22, [x0]
  407c6c:	mov	x19, x0
  407c70:	ldr	w0, [sp, #88]
  407c74:	bl	402a10 <close@plt>
  407c78:	ldp	x25, x26, [sp, #64]
  407c7c:	str	w22, [x19]
  407c80:	str	xzr, [x21]
  407c84:	b	407bb4 <ferror@plt+0x4d74>
  407c88:	mov	x20, #0x0                   	// #0
  407c8c:	b	407bb4 <ferror@plt+0x4d74>
  407c90:	stp	x25, x26, [sp, #64]
  407c94:	bl	414320 <ferror@plt+0x114e0>
  407c98:	ldr	w0, [sp, #88]
  407c9c:	bl	402a10 <close@plt>
  407ca0:	cbz	w26, 407cb0 <ferror@plt+0x4e70>
  407ca4:	mov	w0, w26
  407ca8:	mov	w1, #0x0                   	// #0
  407cac:	bl	406560 <ferror@plt+0x3720>
  407cb0:	ldr	w0, [sp, #92]
  407cb4:	cmp	w0, #0x1
  407cb8:	b.eq	407cc4 <ferror@plt+0x4e84>  // b.none
  407cbc:	mov	w1, #0x1                   	// #1
  407cc0:	bl	406560 <ferror@plt+0x3720>
  407cc4:	adrp	x0, 42d000 <_obstack_memory_used@@Base+0x176c8>
  407cc8:	adrp	x2, 416000 <_obstack_memory_used@@Base+0x6c8>
  407ccc:	add	x2, x2, #0x5e0
  407cd0:	mov	x3, #0x0                   	// #0
  407cd4:	ldr	x1, [x0, #2600]
  407cd8:	mov	x0, x1
  407cdc:	bl	402dc0 <execlp@plt>
  407ce0:	bl	402db0 <__errno_location@plt>
  407ce4:	ldr	w0, [x0]
  407ce8:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x6c8>
  407cec:	add	x1, x1, #0x5e8
  407cf0:	bl	405c88 <ferror@plt+0x2e48>
  407cf4:	mov	w2, #0x5                   	// #5
  407cf8:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x6c8>
  407cfc:	mov	x0, #0x0                   	// #0
  407d00:	add	x1, x1, #0x5b8
  407d04:	bl	402d20 <dcgettext@plt>
  407d08:	mov	x19, x0
  407d0c:	adrp	x1, 42d000 <_obstack_memory_used@@Base+0x176c8>
  407d10:	mov	w0, #0x4                   	// #4
  407d14:	ldr	x1, [x1, #2600]
  407d18:	bl	4110c0 <ferror@plt+0xe280>
  407d1c:	mov	x3, x0
  407d20:	mov	x2, x19
  407d24:	mov	w1, w21
  407d28:	mov	w0, #0x2                   	// #2
  407d2c:	bl	4027b0 <error@plt>
  407d30:	mov	x12, #0x2180                	// #8576
  407d34:	sub	sp, sp, x12
  407d38:	add	x2, sp, #0x19c
  407d3c:	stp	x29, x30, [sp]
  407d40:	mov	x29, sp
  407d44:	stp	x25, x26, [sp, #64]
  407d48:	ldp	x26, x9, [x1, #16]
  407d4c:	stp	x19, x20, [sp, #16]
  407d50:	adrp	x20, 42d000 <_obstack_memory_used@@Base+0x176c8>
  407d54:	ldp	x25, x8, [x0, #16]
  407d58:	add	x20, x20, #0x570
  407d5c:	stp	x27, x28, [sp, #80]
  407d60:	mov	x27, x26
  407d64:	ldr	x28, [x20, #1232]
  407d68:	stp	x21, x22, [sp, #32]
  407d6c:	mov	x26, x25
  407d70:	stp	x23, x24, [sp, #48]
  407d74:	str	x1, [sp, #112]
  407d78:	stp	wzr, wzr, [sp, #120]
  407d7c:	str	x0, [sp, #144]
  407d80:	str	x2, [sp, #184]
  407d84:	add	x2, sp, #0xf0
  407d88:	str	x2, [sp, #192]
  407d8c:	nop
  407d90:	ldrb	w0, [x20, #1200]
  407d94:	cmp	x26, x8
  407d98:	csel	x22, x26, x8, cs  // cs = hs, nlast
  407d9c:	cmp	x27, x9
  407da0:	csel	x21, x27, x9, cs  // cs = hs, nlast
  407da4:	sub	x10, x22, x26
  407da8:	sub	x24, x21, x27
  407dac:	ldp	x19, x23, [x28, #32]
  407db0:	cbnz	w0, 407dc0 <ferror@plt+0x4f80>
  407db4:	ldr	x0, [x28, #48]
  407db8:	tst	x0, #0xffffffffff0000
  407dbc:	b.eq	408340 <ferror@plt+0x5500>  // b.none
  407dc0:	orr	x0, x23, x19
  407dc4:	str	x0, [sp, #104]
  407dc8:	cbnz	x0, 407fb8 <ferror@plt+0x5178>
  407dcc:	ldrb	w0, [x22]
  407dd0:	strb	wzr, [x22]
  407dd4:	str	w0, [sp, #120]
  407dd8:	ldrb	w0, [x21]
  407ddc:	str	w0, [sp, #124]
  407de0:	strb	wzr, [x21]
  407de4:	ldrb	w0, [x28, #50]
  407de8:	cbnz	w0, 407f5c <ferror@plt+0x511c>
  407dec:	ldrb	w0, [x28, #52]
  407df0:	cbnz	w0, 4080cc <ferror@plt+0x528c>
  407df4:	ldrb	w0, [x28, #53]
  407df8:	cbnz	w0, 4081a0 <ferror@plt+0x5360>
  407dfc:	ldrb	w0, [x28, #54]
  407e00:	cbnz	w0, 408438 <ferror@plt+0x55f8>
  407e04:	ldrb	w0, [x28, #51]
  407e08:	cbnz	w0, 40870c <ferror@plt+0x58cc>
  407e0c:	ldrb	w0, [x28, #56]
  407e10:	cbz	w0, 4086fc <ferror@plt+0x58bc>
  407e14:	mov	x1, x27
  407e18:	mov	x0, x26
  407e1c:	bl	40ca20 <ferror@plt+0x9be0>
  407e20:	mov	w25, w0
  407e24:	nop
  407e28:	ldr	x0, [sp, #104]
  407e2c:	cbnz	x0, 407f48 <ferror@plt+0x5108>
  407e30:	ldrb	w0, [sp, #120]
  407e34:	strb	w0, [x22]
  407e38:	ldrb	w0, [sp, #124]
  407e3c:	strb	w0, [x21]
  407e40:	cbnz	w25, 407f54 <ferror@plt+0x5114>
  407e44:	ldr	x28, [x28, #64]
  407e48:	cbz	x28, 408e7c <ferror@plt+0x603c>
  407e4c:	ldr	x1, [sp, #144]
  407e50:	ldr	x0, [x28, #16]
  407e54:	ldp	x26, x10, [x1]
  407e58:	cmn	x0, #0x1
  407e5c:	b.eq	407ec8 <ferror@plt+0x5088>  // b.none
  407e60:	mov	x1, x10
  407e64:	mov	x2, x28
  407e68:	mov	x0, x26
  407e6c:	bl	405f68 <ferror@plt+0x3128>
  407e70:	ldr	x3, [sp, #112]
  407e74:	mov	x8, x0
  407e78:	mov	x2, x28
  407e7c:	ldp	x27, x1, [x3]
  407e80:	mov	x0, x27
  407e84:	bl	405f68 <ferror@plt+0x3128>
  407e88:	mov	x9, x0
  407e8c:	ldr	x0, [x28]
  407e90:	cmn	x0, #0x1
  407e94:	b.eq	407eec <ferror@plt+0x50ac>  // b.none
  407e98:	mov	x1, x10
  407e9c:	mov	x0, x26
  407ea0:	mov	x2, x28
  407ea4:	bl	405e18 <ferror@plt+0x2fd8>
  407ea8:	ldr	x1, [sp, #112]
  407eac:	mov	x2, x28
  407eb0:	mov	x26, x0
  407eb4:	mov	x0, x27
  407eb8:	ldr	x1, [x1, #8]
  407ebc:	bl	405e18 <ferror@plt+0x2fd8>
  407ec0:	mov	x27, x0
  407ec4:	b	407d90 <ferror@plt+0x4f50>
  407ec8:	ldr	x0, [sp, #112]
  407ecc:	sub	x8, x10, #0x1
  407ed0:	add	x8, x26, x8
  407ed4:	ldp	x27, x9, [x0]
  407ed8:	ldr	x0, [x28]
  407edc:	cmn	x0, #0x1
  407ee0:	sub	x9, x9, #0x1
  407ee4:	add	x9, x27, x9
  407ee8:	b.ne	407e98 <ferror@plt+0x5058>  // b.any
  407eec:	ldrb	w0, [x28, #48]
  407ef0:	cbz	w0, 407d90 <ferror@plt+0x4f50>
  407ef4:	cmp	x8, x26
  407ef8:	add	x1, x20, #0x320
  407efc:	b.hi	407f10 <ferror@plt+0x50d0>  // b.pmore
  407f00:	b	407f1c <ferror@plt+0x50dc>
  407f04:	add	x26, x26, #0x1
  407f08:	cmp	x8, x26
  407f0c:	b.eq	408a34 <ferror@plt+0x5bf4>  // b.none
  407f10:	ldrb	w0, [x26]
  407f14:	ldrb	w0, [x1, w0, sxtw]
  407f18:	cbnz	w0, 407f04 <ferror@plt+0x50c4>
  407f1c:	cmp	x9, x27
  407f20:	b.ls	407d90 <ferror@plt+0x4f50>  // b.plast
  407f24:	add	x1, x20, #0x320
  407f28:	ldrb	w0, [x27]
  407f2c:	ldrb	w0, [x1, w0, sxtw]
  407f30:	cbz	w0, 407d90 <ferror@plt+0x4f50>
  407f34:	add	x27, x27, #0x1
  407f38:	cmp	x9, x27
  407f3c:	b.ne	407f28 <ferror@plt+0x50e8>  // b.any
  407f40:	mov	x27, x9
  407f44:	b	407d90 <ferror@plt+0x4f50>
  407f48:	ldr	x0, [sp, #152]
  407f4c:	bl	402ba0 <free@plt>
  407f50:	cbz	w25, 407e44 <ferror@plt+0x5004>
  407f54:	mov	w27, w25
  407f58:	b	408b70 <ferror@plt+0x5d30>
  407f5c:	ldrb	w0, [x26]
  407f60:	add	x1, x20, #0x320
  407f64:	ldrb	w0, [x1, w0, sxtw]
  407f68:	cbz	w0, 407f7c <ferror@plt+0x513c>
  407f6c:	nop
  407f70:	ldrb	w0, [x26, #1]!
  407f74:	ldrb	w0, [x1, w0, sxtw]
  407f78:	cbnz	w0, 407f70 <ferror@plt+0x5130>
  407f7c:	ldrb	w0, [x27]
  407f80:	add	x1, x20, #0x320
  407f84:	ldrb	w0, [x1, w0, sxtw]
  407f88:	cbz	w0, 407f9c <ferror@plt+0x515c>
  407f8c:	nop
  407f90:	ldrb	w0, [x27, #1]!
  407f94:	ldrb	w0, [x1, w0, sxtw]
  407f98:	cbnz	w0, 407f90 <ferror@plt+0x5150>
  407f9c:	ldr	w3, [x20, #1240]
  407fa0:	mov	x1, x27
  407fa4:	ldr	w2, [x20, #1244]
  407fa8:	mov	x0, x26
  407fac:	bl	4131e0 <ferror@plt+0x103a0>
  407fb0:	mov	w25, w0
  407fb4:	b	407e28 <ferror@plt+0x4fe8>
  407fb8:	add	x0, x10, x24
  407fbc:	add	x0, x0, #0x2
  407fc0:	cmp	x0, #0xfa0
  407fc4:	b.hi	408668 <ferror@plt+0x5828>  // b.pmore
  407fc8:	str	xzr, [sp, #152]
  407fcc:	add	x7, sp, #0x240
  407fd0:	add	x2, x10, #0x1
  407fd4:	add	x2, x7, x2
  407fd8:	cbz	x10, 408688 <ferror@plt+0x5848>
  407fdc:	cbz	x19, 4086d4 <ferror@plt+0x5894>
  407fe0:	mov	x5, x26
  407fe4:	add	x9, x26, x10
  407fe8:	mov	x1, #0x0                   	// #0
  407fec:	cbz	x23, 408078 <ferror@plt+0x5238>
  407ff0:	ldrb	w0, [x5]
  407ff4:	add	x5, x5, #0x1
  407ff8:	cmp	x5, x9
  407ffc:	ldrb	w3, [x19, x0]
  408000:	cbnz	w3, 408010 <ferror@plt+0x51d0>
  408004:	ldrb	w0, [x23, x0]
  408008:	strb	w0, [x7, x1]
  40800c:	add	x1, x1, #0x1
  408010:	b.ne	407ff0 <ferror@plt+0x51b0>  // b.any
  408014:	add	x22, x7, x1
  408018:	strb	wzr, [x22]
  40801c:	cbz	x24, 408698 <ferror@plt+0x5858>
  408020:	cbz	x19, 4086b0 <ferror@plt+0x5870>
  408024:	add	x9, x27, x24
  408028:	mov	x4, x27
  40802c:	mov	x24, #0x0                   	// #0
  408030:	cbz	x23, 4080a4 <ferror@plt+0x5264>
  408034:	nop
  408038:	ldrb	w0, [x4]
  40803c:	add	x4, x4, #0x1
  408040:	cmp	x9, x4
  408044:	ldrb	w3, [x19, x0]
  408048:	cbnz	w3, 408058 <ferror@plt+0x5218>
  40804c:	ldrb	w0, [x23, x0]
  408050:	strb	w0, [x2, x24]
  408054:	add	x24, x24, #0x1
  408058:	b.ne	408038 <ferror@plt+0x51f8>  // b.any
  40805c:	add	x21, x2, x24
  408060:	mov	x10, x1
  408064:	mov	x27, x2
  408068:	mov	x26, x7
  40806c:	strb	wzr, [x21]
  408070:	b	407de4 <ferror@plt+0x4fa4>
  408074:	b.eq	408014 <ferror@plt+0x51d4>  // b.none
  408078:	ldrb	w0, [x5]
  40807c:	add	x5, x5, #0x1
  408080:	cmp	x9, x5
  408084:	and	x3, x0, #0xff
  408088:	ldrb	w3, [x19, x3]
  40808c:	cbnz	w3, 408074 <ferror@plt+0x5234>
  408090:	strb	w0, [x7, x1]
  408094:	add	x1, x1, #0x1
  408098:	b.ne	408078 <ferror@plt+0x5238>  // b.any
  40809c:	b	408014 <ferror@plt+0x51d4>
  4080a0:	b.eq	40805c <ferror@plt+0x521c>  // b.none
  4080a4:	ldrb	w0, [x4]
  4080a8:	add	x4, x4, #0x1
  4080ac:	cmp	x9, x4
  4080b0:	and	x3, x0, #0xff
  4080b4:	ldrb	w3, [x19, x3]
  4080b8:	cbnz	w3, 4080a0 <ferror@plt+0x5260>
  4080bc:	strb	w0, [x2, x24]
  4080c0:	add	x24, x24, #0x1
  4080c4:	b.ne	4080a4 <ferror@plt+0x5264>  // b.any
  4080c8:	b	40805c <ferror@plt+0x521c>
  4080cc:	add	x1, sp, #0xd8
  4080d0:	mov	x0, x26
  4080d4:	bl	402b90 <strtold@plt>
  4080d8:	str	q0, [sp, #128]
  4080dc:	mov	x0, x27
  4080e0:	add	x1, sp, #0xe0
  4080e4:	bl	402b90 <strtold@plt>
  4080e8:	mov	v1.16b, v0.16b
  4080ec:	ldr	x0, [sp, #216]
  4080f0:	cmp	x26, x0
  4080f4:	ldr	x0, [sp, #224]
  4080f8:	b.eq	408a3c <ferror@plt+0x5bfc>  // b.none
  4080fc:	cmp	x27, x0
  408100:	b.eq	408b24 <ferror@plt+0x5ce4>  // b.none
  408104:	str	q0, [sp, #160]
  408108:	ldr	q0, [sp, #128]
  40810c:	bl	416068 <_obstack_memory_used@@Base+0x730>
  408110:	tbnz	w0, #31, 408f54 <ferror@plt+0x6114>
  408114:	ldr	q0, [sp, #128]
  408118:	mov	w25, #0x1                   	// #1
  40811c:	ldr	q1, [sp, #160]
  408120:	bl	415f20 <_obstack_memory_used@@Base+0x5e8>
  408124:	cmp	w0, #0x0
  408128:	b.gt	407e28 <ferror@plt+0x4fe8>
  40812c:	ldr	q0, [sp, #128]
  408130:	ldr	q1, [sp, #160]
  408134:	bl	415e18 <_obstack_memory_used@@Base+0x4e0>
  408138:	cbz	w0, 408a48 <ferror@plt+0x5c08>
  40813c:	ldr	q1, [sp, #160]
  408140:	mov	v0.16b, v1.16b
  408144:	bl	415e18 <_obstack_memory_used@@Base+0x4e0>
  408148:	cbz	w0, 408f54 <ferror@plt+0x6114>
  40814c:	ldr	q1, [sp, #128]
  408150:	mov	v0.16b, v1.16b
  408154:	bl	415e18 <_obstack_memory_used@@Base+0x4e0>
  408158:	cbz	w0, 407e28 <ferror@plt+0x4fe8>
  40815c:	mov	x0, x26
  408160:	mov	x1, #0x0                   	// #0
  408164:	bl	402b90 <strtold@plt>
  408168:	str	q0, [sp, #256]
  40816c:	mov	x0, x27
  408170:	mov	x1, #0x0                   	// #0
  408174:	bl	402b90 <strtold@plt>
  408178:	mov	x3, #0x11e0                	// #4576
  40817c:	mov	x4, #0x1270                	// #4720
  408180:	add	x1, sp, x3
  408184:	add	x3, sp, x4
  408188:	add	x0, sp, #0x100
  40818c:	mov	x2, #0x10                  	// #16
  408190:	stur	q0, [x3, #-144]
  408194:	bl	402b00 <memcmp@plt>
  408198:	mov	w25, w0
  40819c:	b	407e28 <ferror@plt+0x4fe8>
  4081a0:	ldrb	w10, [x26]
  4081a4:	add	x1, x20, #0x320
  4081a8:	ldrb	w0, [x1, w10, sxtw]
  4081ac:	cbz	w0, 4081bc <ferror@plt+0x537c>
  4081b0:	ldrb	w10, [x26, #1]!
  4081b4:	ldrb	w0, [x1, w10, sxtw]
  4081b8:	cbnz	w0, 4081b0 <ferror@plt+0x5370>
  4081bc:	ldrb	w11, [x27]
  4081c0:	add	x1, x20, #0x320
  4081c4:	ldrb	w0, [x1, w11, sxtw]
  4081c8:	cbz	w0, 4081dc <ferror@plt+0x539c>
  4081cc:	nop
  4081d0:	ldrb	w11, [x27, #1]!
  4081d4:	ldrb	w0, [x1, w11, sxtw]
  4081d8:	cbnz	w0, 4081d0 <ferror@plt+0x5390>
  4081dc:	cmp	w10, #0x2d
  4081e0:	cset	w0, eq  // eq = none
  4081e4:	cinc	x7, x26, eq  // eq = none
  4081e8:	add	x2, x7, #0x1
  4081ec:	ldrb	w1, [x26, w0, uxtw]
  4081f0:	sub	w0, w1, #0x30
  4081f4:	cmp	w0, #0x9
  4081f8:	b.hi	408558 <ferror@plt+0x5718>  // b.pmore
  4081fc:	ldr	w13, [x20, #1240]
  408200:	mov	w0, #0x0                   	// #0
  408204:	b	408220 <ferror@plt+0x53e0>
  408208:	ldrb	w1, [x3], #1
  40820c:	sub	w4, w1, #0x30
  408210:	cmp	w4, #0x9
  408214:	b.hi	408568 <ferror@plt+0x5728>  // b.pmore
  408218:	mov	x7, x2
  40821c:	mov	x2, x3
  408220:	cmp	w0, w1
  408224:	ldrb	w4, [x7, #1]
  408228:	csel	w0, w0, w1, hi  // hi = pmore
  40822c:	mov	x3, x2
  408230:	and	w0, w0, #0xff
  408234:	cmp	w13, w4
  408238:	b.ne	408208 <ferror@plt+0x53c8>  // b.any
  40823c:	ldrb	w1, [x7, #2]
  408240:	add	x2, x7, #0x2
  408244:	add	x3, x7, #0x3
  408248:	sub	w4, w1, #0x30
  40824c:	cmp	w4, #0x9
  408250:	b.ls	408218 <ferror@plt+0x53d8>  // b.plast
  408254:	add	x2, x7, #0x1
  408258:	cmp	w0, #0x30
  40825c:	mov	w25, #0x0                   	// #0
  408260:	b.ls	40827c <ferror@plt+0x543c>  // b.plast
  408264:	ldrb	w1, [x2]
  408268:	adrp	x0, 418000 <_obstack_memory_used@@Base+0x26c8>
  40826c:	add	x0, x0, #0x100
  408270:	cmp	w10, #0x2d
  408274:	ldrb	w25, [x0, w1, sxtw]
  408278:	cneg	w25, w25, eq  // eq = none
  40827c:	cmp	w11, #0x2d
  408280:	cset	w0, eq  // eq = none
  408284:	cinc	x10, x27, eq  // eq = none
  408288:	add	x2, x10, #0x1
  40828c:	ldrb	w0, [x27, w0, uxtw]
  408290:	sub	w1, w0, #0x30
  408294:	cmp	w1, #0x9
  408298:	b.hi	4085cc <ferror@plt+0x578c>  // b.pmore
  40829c:	ldr	w13, [x20, #1240]
  4082a0:	mov	w1, #0x0                   	// #0
  4082a4:	b	4082c0 <ferror@plt+0x5480>
  4082a8:	ldrb	w0, [x3], #1
  4082ac:	sub	w4, w0, #0x30
  4082b0:	cmp	w4, #0x9
  4082b4:	b.hi	4085d8 <ferror@plt+0x5798>  // b.pmore
  4082b8:	mov	x10, x2
  4082bc:	mov	x2, x3
  4082c0:	cmp	w0, w1
  4082c4:	ldrb	w4, [x10, #1]
  4082c8:	csel	w1, w0, w1, hi  // hi = pmore
  4082cc:	mov	x3, x2
  4082d0:	and	w1, w1, #0xff
  4082d4:	cmp	w13, w4
  4082d8:	b.ne	4082a8 <ferror@plt+0x5468>  // b.any
  4082dc:	ldrb	w0, [x10, #2]
  4082e0:	add	x2, x10, #0x2
  4082e4:	add	x3, x10, #0x3
  4082e8:	sub	w4, w0, #0x30
  4082ec:	cmp	w4, #0x9
  4082f0:	b.ls	4082b8 <ferror@plt+0x5478>  // b.plast
  4082f4:	add	x2, x10, #0x1
  4082f8:	cmp	w1, #0x30
  4082fc:	b.ls	408320 <ferror@plt+0x54e0>  // b.plast
  408300:	ldrb	w1, [x2]
  408304:	adrp	x0, 418000 <_obstack_memory_used@@Base+0x26c8>
  408308:	add	x0, x0, #0x100
  40830c:	cmp	w11, #0x2d
  408310:	ldrb	w0, [x0, w1, sxtw]
  408314:	sub	w1, w25, w0
  408318:	add	w0, w25, w0
  40831c:	csel	w25, w0, w1, eq  // eq = none
  408320:	cbnz	w25, 407e28 <ferror@plt+0x4fe8>
  408324:	ldr	w3, [x20, #1240]
  408328:	mov	x1, x27
  40832c:	ldr	w2, [x20, #1244]
  408330:	mov	x0, x26
  408334:	bl	4131e0 <ferror@plt+0x103a0>
  408338:	mov	w25, w0
  40833c:	b	407e28 <ferror@plt+0x4fe8>
  408340:	ldrb	w0, [x28, #56]
  408344:	cbnz	w0, 407dc0 <ferror@plt+0x4f80>
  408348:	cbz	x19, 408e84 <ferror@plt+0x6044>
  40834c:	mov	x2, x26
  408350:	mov	x5, x26
  408354:	cbz	x23, 4083dc <ferror@plt+0x559c>
  408358:	cmp	x2, x22
  40835c:	b.cs	40836c <ferror@plt+0x552c>  // b.hs, b.nlast
  408360:	ldrb	w0, [x2]
  408364:	ldrb	w0, [x19, x0]
  408368:	cbnz	w0, 4083b4 <ferror@plt+0x5574>
  40836c:	cmp	x27, x21
  408370:	b.cc	408384 <ferror@plt+0x5544>  // b.lo, b.ul, b.last
  408374:	b	408420 <ferror@plt+0x55e0>
  408378:	add	x27, x27, #0x1
  40837c:	cmp	x21, x27
  408380:	b.eq	40841c <ferror@plt+0x55dc>  // b.none
  408384:	ldrb	w0, [x27]
  408388:	ldrb	w1, [x19, x0]
  40838c:	cbnz	w1, 408378 <ferror@plt+0x5538>
  408390:	cmp	x2, x22
  408394:	ccmp	x21, x27, #0x0, cc  // cc = lo, ul, last
  408398:	b.ls	408420 <ferror@plt+0x55e0>  // b.plast
  40839c:	ldrb	w3, [x2]
  4083a0:	ldrb	w1, [x23, x0]
  4083a4:	ldrb	w0, [x23, x3]
  4083a8:	subs	w0, w0, w1
  4083ac:	b.ne	408b6c <ferror@plt+0x5d2c>  // b.any
  4083b0:	add	x27, x27, #0x1
  4083b4:	add	x2, x2, #0x1
  4083b8:	b	408358 <ferror@plt+0x5518>
  4083bc:	cmp	x5, x22
  4083c0:	ccmp	x21, x27, #0x0, cc  // cc = lo, ul, last
  4083c4:	b.ls	408a00 <ferror@plt+0x5bc0>  // b.plast
  4083c8:	ldrb	w1, [x5]
  4083cc:	subs	w0, w1, w0
  4083d0:	b.ne	408b6c <ferror@plt+0x5d2c>  // b.any
  4083d4:	add	x27, x27, #0x1
  4083d8:	add	x5, x5, #0x1
  4083dc:	cmp	x5, x22
  4083e0:	b.cs	4083f0 <ferror@plt+0x55b0>  // b.hs, b.nlast
  4083e4:	ldrb	w0, [x5]
  4083e8:	ldrb	w0, [x19, x0]
  4083ec:	cbnz	w0, 4083d8 <ferror@plt+0x5598>
  4083f0:	cmp	x27, x21
  4083f4:	b.cc	408408 <ferror@plt+0x55c8>  // b.lo, b.ul, b.last
  4083f8:	b	408a00 <ferror@plt+0x5bc0>
  4083fc:	add	x27, x27, #0x1
  408400:	cmp	x21, x27
  408404:	b.eq	4089fc <ferror@plt+0x5bbc>  // b.none
  408408:	ldrb	w0, [x27]
  40840c:	and	x1, x0, #0xff
  408410:	ldrb	w1, [x19, x1]
  408414:	cbnz	w1, 4083fc <ferror@plt+0x55bc>
  408418:	b	4083bc <ferror@plt+0x557c>
  40841c:	mov	x27, x21
  408420:	cmp	x2, x22
  408424:	cset	w7, cc  // cc = lo, ul, last
  408428:	cmp	x21, x27
  40842c:	cset	w0, hi  // hi = pmore
  408430:	sub	w25, w7, w0
  408434:	b	407e40 <ferror@plt+0x5000>
  408438:	ldrb	w0, [x26]
  40843c:	add	x1, x20, #0x320
  408440:	ldrb	w0, [x1, w0, sxtw]
  408444:	cbz	w0, 408454 <ferror@plt+0x5614>
  408448:	ldrb	w0, [x26, #1]!
  40844c:	ldrb	w0, [x1, w0, sxtw]
  408450:	cbnz	w0, 408448 <ferror@plt+0x5608>
  408454:	adrp	x11, 42d000 <_obstack_memory_used@@Base+0x176c8>
  408458:	add	x11, x11, #0x3b0
  40845c:	add	x15, x11, #0x20
  408460:	add	x7, x20, #0x200
  408464:	mov	x13, #0xc                   	// #12
  408468:	mov	x14, #0x0                   	// #0
  40846c:	add	x4, x14, x13
  408470:	lsr	x4, x4, #1
  408474:	lsl	x12, x4, #4
  408478:	ldr	x3, [x15, x12]
  40847c:	ldrb	w1, [x3]
  408480:	cbz	w1, 40863c <ferror@plt+0x57fc>
  408484:	mov	x0, #0x0                   	// #0
  408488:	b	408498 <ferror@plt+0x5658>
  40848c:	b.hi	4086a0 <ferror@plt+0x5860>  // b.pmore
  408490:	ldrb	w1, [x3, x0]
  408494:	cbz	w1, 40863c <ferror@plt+0x57fc>
  408498:	ldrb	w2, [x26, x0]
  40849c:	add	x0, x0, #0x1
  4084a0:	ldrb	w2, [x7, w2, sxtw]
  4084a4:	cmp	w2, w1
  4084a8:	b.cs	40848c <ferror@plt+0x564c>  // b.hs, b.nlast
  4084ac:	mov	x13, x4
  4084b0:	cmp	x14, x13
  4084b4:	b.cc	40846c <ferror@plt+0x562c>  // b.lo, b.ul, b.last
  4084b8:	ldrb	w0, [x27]
  4084bc:	add	x1, x20, #0x320
  4084c0:	mov	w25, #0x0                   	// #0
  4084c4:	ldrb	w0, [x1, w0, sxtw]
  4084c8:	cbnz	w0, 408658 <ferror@plt+0x5818>
  4084cc:	nop
  4084d0:	mov	x13, #0xc                   	// #12
  4084d4:	mov	x14, #0x0                   	// #0
  4084d8:	add	x4, x14, x13
  4084dc:	add	x15, x11, #0x20
  4084e0:	add	x5, x20, #0x200
  4084e4:	lsr	x4, x4, #1
  4084e8:	lsl	x12, x4, #4
  4084ec:	ldr	x3, [x15, x12]
  4084f0:	ldrb	w1, [x3]
  4084f4:	cbz	w1, 408548 <ferror@plt+0x5708>
  4084f8:	mov	x0, #0x0                   	// #0
  4084fc:	b	40850c <ferror@plt+0x56cc>
  408500:	b.hi	4086a8 <ferror@plt+0x5868>  // b.pmore
  408504:	ldrb	w1, [x3, x0]
  408508:	cbz	w1, 408548 <ferror@plt+0x5708>
  40850c:	ldrb	w2, [x27, x0]
  408510:	add	x0, x0, #0x1
  408514:	ldrb	w2, [x5, w2, sxtw]
  408518:	cmp	w2, w1
  40851c:	b.cs	408500 <ferror@plt+0x56c0>  // b.hs, b.nlast
  408520:	mov	x13, x4
  408524:	cmp	x14, x13
  408528:	b.cs	407e28 <ferror@plt+0x4fe8>  // b.hs, b.nlast
  40852c:	add	x4, x14, x13
  408530:	lsr	x4, x4, #1
  408534:	lsl	x12, x4, #4
  408538:	ldr	x3, [x15, x12]
  40853c:	ldrb	w1, [x3]
  408540:	cbnz	w1, 4084f8 <ferror@plt+0x56b8>
  408544:	nop
  408548:	add	x11, x11, x12
  40854c:	ldr	w0, [x11, #40]
  408550:	sub	w25, w25, w0
  408554:	b	407e28 <ferror@plt+0x4fe8>
  408558:	mov	x3, x2
  40855c:	mov	x2, x7
  408560:	mov	w0, #0x0                   	// #0
  408564:	nop
  408568:	ldr	w7, [x20, #1244]
  40856c:	cmp	w1, w7
  408570:	b.ne	408258 <ferror@plt+0x5418>  // b.any
  408574:	mov	x7, x3
  408578:	ldrb	w1, [x7], #1
  40857c:	sub	w2, w1, #0x30
  408580:	cmp	w2, #0x9
  408584:	b.hi	408f04 <ferror@plt+0x60c4>  // b.pmore
  408588:	cmp	w0, w1
  40858c:	mov	x2, x7
  408590:	csel	w0, w0, w1, hi  // hi = pmore
  408594:	ldrb	w1, [x7], #1
  408598:	and	w0, w0, #0xff
  40859c:	sub	w3, w1, #0x30
  4085a0:	cmp	w3, #0x9
  4085a4:	b.hi	408258 <ferror@plt+0x5418>  // b.pmore
  4085a8:	cmp	w0, w1
  4085ac:	mov	x2, x7
  4085b0:	csel	w0, w0, w1, hi  // hi = pmore
  4085b4:	ldrb	w1, [x7], #1
  4085b8:	and	w0, w0, #0xff
  4085bc:	sub	w3, w1, #0x30
  4085c0:	cmp	w3, #0x9
  4085c4:	b.ls	408588 <ferror@plt+0x5748>  // b.plast
  4085c8:	b	408258 <ferror@plt+0x5418>
  4085cc:	mov	x3, x2
  4085d0:	mov	x2, x10
  4085d4:	mov	w1, #0x0                   	// #0
  4085d8:	ldr	w10, [x20, #1244]
  4085dc:	cmp	w0, w10
  4085e0:	b.ne	4082f8 <ferror@plt+0x54b8>  // b.any
  4085e4:	mov	x10, x3
  4085e8:	ldrb	w0, [x10], #1
  4085ec:	sub	w2, w0, #0x30
  4085f0:	cmp	w2, #0x9
  4085f4:	b.hi	408efc <ferror@plt+0x60bc>  // b.pmore
  4085f8:	cmp	w1, w0
  4085fc:	mov	x2, x10
  408600:	csel	w1, w1, w0, hi  // hi = pmore
  408604:	ldrb	w0, [x10], #1
  408608:	and	w1, w1, #0xff
  40860c:	sub	w3, w0, #0x30
  408610:	cmp	w3, #0x9
  408614:	b.hi	4082f8 <ferror@plt+0x54b8>  // b.pmore
  408618:	cmp	w1, w0
  40861c:	mov	x2, x10
  408620:	csel	w1, w1, w0, hi  // hi = pmore
  408624:	ldrb	w0, [x10], #1
  408628:	and	w1, w1, #0xff
  40862c:	sub	w3, w0, #0x30
  408630:	cmp	w3, #0x9
  408634:	b.ls	4085f8 <ferror@plt+0x57b8>  // b.plast
  408638:	b	4082f8 <ferror@plt+0x54b8>
  40863c:	ldrb	w0, [x27]
  408640:	add	x1, x20, #0x320
  408644:	add	x12, x11, x12
  408648:	ldrb	w0, [x1, w0, sxtw]
  40864c:	ldr	w25, [x12, #40]
  408650:	cbz	w0, 4084d0 <ferror@plt+0x5690>
  408654:	nop
  408658:	ldrb	w0, [x27, #1]!
  40865c:	ldrb	w0, [x1, w0, sxtw]
  408660:	cbnz	w0, 408658 <ferror@plt+0x5818>
  408664:	b	4084d0 <ferror@plt+0x5690>
  408668:	str	x10, [sp, #128]
  40866c:	bl	414158 <ferror@plt+0x11318>
  408670:	ldr	x10, [sp, #128]
  408674:	str	x0, [sp, #152]
  408678:	mov	x7, x0
  40867c:	add	x2, x10, #0x1
  408680:	add	x2, x7, x2
  408684:	cbnz	x10, 407fdc <ferror@plt+0x519c>
  408688:	mov	x22, x7
  40868c:	mov	x1, #0x0                   	// #0
  408690:	strb	wzr, [x22]
  408694:	cbnz	x24, 408020 <ferror@plt+0x51e0>
  408698:	mov	x21, x2
  40869c:	b	408060 <ferror@plt+0x5220>
  4086a0:	add	x14, x4, #0x1
  4086a4:	b	4084b0 <ferror@plt+0x5670>
  4086a8:	add	x14, x4, #0x1
  4086ac:	b	408524 <ferror@plt+0x56e4>
  4086b0:	mov	x0, #0x0                   	// #0
  4086b4:	cbz	x23, 408d10 <ferror@plt+0x5ed0>
  4086b8:	ldrb	w3, [x27, x0]
  4086bc:	ldrb	w3, [x23, x3]
  4086c0:	strb	w3, [x2, x0]
  4086c4:	add	x0, x0, #0x1
  4086c8:	cmp	x24, x0
  4086cc:	b.ne	4086b8 <ferror@plt+0x5878>  // b.any
  4086d0:	b	40805c <ferror@plt+0x521c>
  4086d4:	mov	x1, #0x0                   	// #0
  4086d8:	cbz	x23, 408ba4 <ferror@plt+0x5d64>
  4086dc:	nop
  4086e0:	ldrb	w0, [x26, x1]
  4086e4:	ldrb	w0, [x23, x0]
  4086e8:	strb	w0, [x7, x1]
  4086ec:	add	x1, x1, #0x1
  4086f0:	cmp	x10, x1
  4086f4:	b.ne	4086e0 <ferror@plt+0x58a0>  // b.any
  4086f8:	b	408014 <ferror@plt+0x51d4>
  4086fc:	cbnz	x10, 408a50 <ferror@plt+0x5c10>
  408700:	cmp	x24, #0x0
  408704:	csetm	w25, ne  // ne = any
  408708:	b	407e28 <ferror@plt+0x4fe8>
  40870c:	add	x1, x20, #0x4e8
  408710:	mov	x2, #0x9c                  	// #156
  408714:	add	x0, sp, #0x19c
  408718:	str	x10, [sp, #128]
  40871c:	bl	402720 <memcpy@plt>
  408720:	add	x1, sp, #0x19c
  408724:	add	x0, sp, #0x100
  408728:	mov	x2, #0x9c                  	// #156
  40872c:	bl	402720 <memcpy@plt>
  408730:	ldrb	w0, [x20, #1200]
  408734:	ldr	x10, [sp, #128]
  408738:	cbz	w0, 408a74 <ferror@plt+0x5c34>
  40873c:	add	x3, x10, x24
  408740:	mov	w25, #0x0                   	// #0
  408744:	mov	x2, #0x11e0                	// #4576
  408748:	add	x0, sp, x2
  40874c:	add	x3, x3, x3, lsl #1
  408750:	str	w25, [sp, #160]
  408754:	mov	x25, x0
  408758:	add	x1, x3, #0x2
  40875c:	mov	x23, #0xfa0                 	// #4000
  408760:	str	xzr, [sp, #128]
  408764:	str	x1, [sp, #176]
  408768:	str	x28, [sp, #200]
  40876c:	nop
  408770:	ldr	x0, [sp, #176]
  408774:	cmp	x0, x23
  408778:	b.hi	408820 <ferror@plt+0x59e0>  // b.pmore
  40877c:	cmp	x26, x22
  408780:	b.cc	408864 <ferror@plt+0x5a24>  // b.lo, b.ul, b.last
  408784:	cmp	x27, x21
  408788:	b.cc	40899c <ferror@plt+0x5b5c>  // b.lo, b.ul, b.last
  40878c:	mov	x19, x25
  408790:	mov	x24, #0x0                   	// #0
  408794:	mov	x28, #0x0                   	// #0
  408798:	cmp	x27, x21
  40879c:	b.cs	408f70 <ferror@plt+0x6130>  // b.hs, b.nlast
  4087a0:	mov	x0, x27
  4087a4:	bl	402780 <strlen@plt>
  4087a8:	add	x0, x0, #0x1
  4087ac:	add	x27, x27, x0
  4087b0:	cmp	x26, x22
  4087b4:	ccmp	x27, x21, #0x0, cs  // cs = hs, nlast
  4087b8:	b.cs	408f70 <ferror@plt+0x6130>  // b.hs, b.nlast
  4087bc:	add	x2, sp, #0x100
  4087c0:	mov	x1, x28
  4087c4:	mov	x0, x25
  4087c8:	bl	40c630 <ferror@plt+0x97f0>
  4087cc:	ldr	x2, [sp, #184]
  4087d0:	mov	x0, x19
  4087d4:	mov	x1, x24
  4087d8:	bl	40c630 <ferror@plt+0x97f0>
  4087dc:	ldr	w0, [sp, #160]
  4087e0:	cbnz	w0, 408770 <ferror@plt+0x5930>
  4087e4:	cmp	x24, x28
  4087e8:	mov	x1, x19
  4087ec:	csel	x2, x24, x28, ls  // ls = plast
  4087f0:	mov	x0, x25
  4087f4:	bl	402b00 <memcmp@plt>
  4087f8:	str	w0, [sp, #160]
  4087fc:	cbnz	w0, 408770 <ferror@plt+0x5930>
  408800:	cmp	x24, x28
  408804:	cset	w1, cc  // cc = lo, ul, last
  408808:	cset	w0, hi  // hi = pmore
  40880c:	sub	w0, w1, w0
  408810:	str	w0, [sp, #160]
  408814:	ldr	x0, [sp, #176]
  408818:	cmp	x0, x23
  40881c:	b.ls	40877c <ferror@plt+0x593c>  // b.plast
  408820:	add	x23, x23, x23, lsl #1
  408824:	lsr	x23, x23, #1
  408828:	cmp	x0, x23
  40882c:	csel	x23, x0, x23, cs  // cs = hs, nlast
  408830:	ldr	x0, [sp, #128]
  408834:	bl	402ba0 <free@plt>
  408838:	mov	x0, x23
  40883c:	bl	4028e0 <malloc@plt>
  408840:	mov	x1, #0xfa0                 	// #4000
  408844:	cmp	x0, #0x0
  408848:	str	x0, [sp, #128]
  40884c:	csel	x23, x23, x1, ne  // ne = any
  408850:	mov	x1, #0x11e0                	// #4576
  408854:	add	x1, sp, x1
  408858:	csel	x25, x0, x1, ne  // ne = any
  40885c:	cmp	x26, x22
  408860:	b.cs	408784 <ferror@plt+0x5944>  // b.hs, b.nlast
  408864:	mov	x2, x23
  408868:	mov	x1, x26
  40886c:	mov	x0, x25
  408870:	bl	405bb0 <ferror@plt+0x2d70>
  408874:	cmp	x27, x21
  408878:	add	x28, x0, #0x1
  40887c:	b.cs	408b2c <ferror@plt+0x5cec>  // b.hs, b.nlast
  408880:	cmp	x23, x28
  408884:	b.cs	408f64 <ferror@plt+0x6124>  // b.hs, b.nlast
  408888:	mov	x0, #0x0                   	// #0
  40888c:	mov	x2, #0x0                   	// #0
  408890:	mov	x1, x27
  408894:	bl	405bb0 <ferror@plt+0x2d70>
  408898:	add	x24, x0, #0x1
  40889c:	cmp	x23, x28
  4088a0:	add	x3, x24, x28
  4088a4:	b.cs	408b3c <ferror@plt+0x5cfc>  // b.hs, b.nlast
  4088a8:	add	x1, x3, x3, lsl #1
  4088ac:	mov	x0, #0x5555555555555555    	// #6148914691236517205
  4088b0:	cmp	x3, x0
  4088b4:	lsr	x1, x1, #1
  4088b8:	ldr	x0, [sp, #128]
  4088bc:	csel	x3, x1, x3, cc  // cc = lo, ul, last
  4088c0:	str	x3, [sp, #128]
  4088c4:	bl	402ba0 <free@plt>
  4088c8:	ldr	x3, [sp, #128]
  4088cc:	mov	x0, x3
  4088d0:	bl	414158 <ferror@plt+0x11318>
  4088d4:	mov	x25, x0
  4088d8:	cmp	x26, x22
  4088dc:	ldr	x3, [sp, #128]
  4088e0:	b.cc	4089ac <ferror@plt+0x5b6c>  // b.lo, b.ul, b.last
  4088e4:	cmp	x27, x21
  4088e8:	add	x19, x0, x28
  4088ec:	b.cc	408a18 <ferror@plt+0x5bd8>  // b.lo, b.ul, b.last
  4088f0:	cmp	x26, x22
  4088f4:	b.cc	408978 <ferror@plt+0x5b38>  // b.lo, b.ul, b.last
  4088f8:	mov	x0, x25
  4088fc:	mov	x10, x28
  408900:	ldr	w25, [sp, #160]
  408904:	ldr	x28, [sp, #200]
  408908:	str	x0, [sp, #128]
  40890c:	str	x0, [sp, #176]
  408910:	add	x2, sp, #0x100
  408914:	mov	x1, x10
  408918:	str	x10, [sp, #160]
  40891c:	bl	40c630 <ferror@plt+0x97f0>
  408920:	add	x1, sp, #0xe0
  408924:	add	x0, sp, #0x100
  408928:	bl	40c548 <ferror@plt+0x9708>
  40892c:	ldr	x26, [sp, #184]
  408930:	mov	x1, x24
  408934:	mov	x0, x19
  408938:	mov	x2, x26
  40893c:	bl	40c630 <ferror@plt+0x97f0>
  408940:	ldr	x23, [sp, #192]
  408944:	mov	x0, x26
  408948:	mov	x1, x23
  40894c:	bl	40c548 <ferror@plt+0x9708>
  408950:	mov	x1, x23
  408954:	add	x0, sp, #0xe0
  408958:	mov	x2, #0x10                  	// #16
  40895c:	bl	402b00 <memcmp@plt>
  408960:	ldr	x10, [sp, #160]
  408964:	cbnz	w0, 408b14 <ferror@plt+0x5cd4>
  408968:	cbz	w25, 408f88 <ferror@plt+0x6148>
  40896c:	ldr	x0, [sp, #128]
  408970:	bl	402ba0 <free@plt>
  408974:	b	407e28 <ferror@plt+0x4fe8>
  408978:	mov	x0, x26
  40897c:	str	x3, [sp, #128]
  408980:	bl	402780 <strlen@plt>
  408984:	add	x0, x0, #0x1
  408988:	ldr	x3, [sp, #128]
  40898c:	add	x26, x26, x0
  408990:	str	x25, [sp, #128]
  408994:	mov	x23, x3
  408998:	b	4087b0 <ferror@plt+0x5970>
  40899c:	mov	x2, x23
  4089a0:	mov	x0, x25
  4089a4:	mov	x28, #0x0                   	// #0
  4089a8:	b	408890 <ferror@plt+0x5a50>
  4089ac:	mov	x2, x28
  4089b0:	mov	x1, x26
  4089b4:	bl	402c60 <strxfrm@plt>
  4089b8:	add	x19, x25, x28
  4089bc:	cmp	x27, x21
  4089c0:	ldr	x3, [sp, #128]
  4089c4:	b.cs	4088f0 <ferror@plt+0x5ab0>  // b.hs, b.nlast
  4089c8:	mov	x2, x24
  4089cc:	mov	x1, x27
  4089d0:	mov	x0, x19
  4089d4:	str	x3, [sp, #128]
  4089d8:	bl	402c60 <strxfrm@plt>
  4089dc:	ldr	x3, [sp, #128]
  4089e0:	mov	x0, x26
  4089e4:	mov	x23, x3
  4089e8:	bl	402780 <strlen@plt>
  4089ec:	add	x0, x0, #0x1
  4089f0:	add	x26, x26, x0
  4089f4:	str	x25, [sp, #128]
  4089f8:	b	4087a0 <ferror@plt+0x5960>
  4089fc:	mov	x27, x21
  408a00:	cmp	x5, x22
  408a04:	cset	w7, cc  // cc = lo, ul, last
  408a08:	cmp	x21, x27
  408a0c:	cset	w0, hi  // hi = pmore
  408a10:	sub	w25, w7, w0
  408a14:	b	407e40 <ferror@plt+0x5000>
  408a18:	mov	x23, x3
  408a1c:	mov	x2, x24
  408a20:	mov	x1, x27
  408a24:	mov	x0, x19
  408a28:	bl	402c60 <strxfrm@plt>
  408a2c:	str	x25, [sp, #128]
  408a30:	b	4087a0 <ferror@plt+0x5960>
  408a34:	mov	x26, x8
  408a38:	b	407f1c <ferror@plt+0x50dc>
  408a3c:	cmp	x0, x27
  408a40:	csetm	w25, ne  // ne = any
  408a44:	b	407e28 <ferror@plt+0x4fe8>
  408a48:	mov	w25, #0x0                   	// #0
  408a4c:	b	407e28 <ferror@plt+0x4fe8>
  408a50:	mov	w25, #0x1                   	// #1
  408a54:	cbz	x24, 407e28 <ferror@plt+0x4fe8>
  408a58:	add	x3, x24, #0x1
  408a5c:	mov	x2, x27
  408a60:	add	x1, x10, #0x1
  408a64:	mov	x0, x26
  408a68:	bl	4144d0 <ferror@plt+0x11690>
  408a6c:	mov	w25, w0
  408a70:	b	407e28 <ferror@plt+0x4fe8>
  408a74:	add	x2, sp, #0x100
  408a78:	mov	x1, x10
  408a7c:	mov	x0, x26
  408a80:	str	x10, [sp, #128]
  408a84:	bl	40c630 <ferror@plt+0x97f0>
  408a88:	add	x1, sp, #0xe0
  408a8c:	add	x0, sp, #0x100
  408a90:	bl	40c548 <ferror@plt+0x9708>
  408a94:	ldr	x23, [sp, #184]
  408a98:	mov	x1, x24
  408a9c:	mov	x0, x27
  408aa0:	mov	x2, x23
  408aa4:	bl	40c630 <ferror@plt+0x97f0>
  408aa8:	ldr	x19, [sp, #192]
  408aac:	mov	x0, x23
  408ab0:	mov	x1, x19
  408ab4:	bl	40c548 <ferror@plt+0x9708>
  408ab8:	mov	x1, x19
  408abc:	add	x0, sp, #0xe0
  408ac0:	mov	x2, #0x10                  	// #16
  408ac4:	bl	402b00 <memcmp@plt>
  408ac8:	ldr	x10, [sp, #128]
  408acc:	str	xzr, [sp, #128]
  408ad0:	mov	w25, w0
  408ad4:	cbnz	w0, 40896c <ferror@plt+0x5b2c>
  408ad8:	cmp	x10, x24
  408adc:	mov	x1, x27
  408ae0:	mov	x0, x26
  408ae4:	csel	x2, x10, x24, ls  // ls = plast
  408ae8:	str	x10, [sp, #160]
  408aec:	bl	402b00 <memcmp@plt>
  408af0:	mov	w25, w0
  408af4:	cbnz	w0, 40896c <ferror@plt+0x5b2c>
  408af8:	ldr	x10, [sp, #160]
  408afc:	ldr	x0, [sp, #128]
  408b00:	cmp	x10, x24
  408b04:	cset	w7, hi  // hi = pmore
  408b08:	sbc	w25, w7, wzr
  408b0c:	bl	402ba0 <free@plt>
  408b10:	b	407e28 <ferror@plt+0x4fe8>
  408b14:	mov	w25, w0
  408b18:	ldr	x0, [sp, #128]
  408b1c:	bl	402ba0 <free@plt>
  408b20:	b	407e28 <ferror@plt+0x4fe8>
  408b24:	mov	w25, #0x1                   	// #1
  408b28:	b	407e28 <ferror@plt+0x4fe8>
  408b2c:	mov	x3, x28
  408b30:	cmp	x23, x28
  408b34:	mov	x24, #0x0                   	// #0
  408b38:	b.cc	4088a8 <ferror@plt+0x5a68>  // b.lo, b.ul, b.last
  408b3c:	cmp	x23, x3
  408b40:	b.cc	4088a8 <ferror@plt+0x5a68>  // b.lo, b.ul, b.last
  408b44:	cmp	x26, x22
  408b48:	add	x19, x25, x28
  408b4c:	b.cs	408798 <ferror@plt+0x5958>  // b.hs, b.nlast
  408b50:	mov	x0, x26
  408b54:	bl	402780 <strlen@plt>
  408b58:	add	x0, x0, #0x1
  408b5c:	cmp	x27, x21
  408b60:	add	x26, x26, x0
  408b64:	b.cs	4087b0 <ferror@plt+0x5970>  // b.hs, b.nlast
  408b68:	b	4087a0 <ferror@plt+0x5960>
  408b6c:	mov	w27, w0
  408b70:	ldrb	w0, [x28, #55]
  408b74:	cmp	w0, #0x0
  408b78:	cneg	w27, w27, ne  // ne = any
  408b7c:	mov	w0, w27
  408b80:	mov	x12, #0x2180                	// #8576
  408b84:	ldp	x29, x30, [sp]
  408b88:	ldp	x19, x20, [sp, #16]
  408b8c:	ldp	x21, x22, [sp, #32]
  408b90:	ldp	x23, x24, [sp, #48]
  408b94:	ldp	x25, x26, [sp, #64]
  408b98:	ldp	x27, x28, [sp, #80]
  408b9c:	add	sp, sp, x12
  408ba0:	ret
  408ba4:	add	x0, x26, #0xf
  408ba8:	sub	x1, x10, #0x1
  408bac:	sub	x0, x0, x7
  408bb0:	cmp	x0, #0x1e
  408bb4:	ccmp	x1, #0xe, #0x0, hi  // hi = pmore
  408bb8:	b.ls	408f28 <ferror@plt+0x60e8>  // b.plast
  408bbc:	and	x1, x10, #0xfffffffffffffff0
  408bc0:	mov	x0, #0x0                   	// #0
  408bc4:	nop
  408bc8:	ldr	q0, [x26, x0]
  408bcc:	str	q0, [x7, x0]
  408bd0:	add	x0, x0, #0x10
  408bd4:	cmp	x0, x1
  408bd8:	b.ne	408bc8 <ferror@plt+0x5d88>  // b.any
  408bdc:	tst	x10, #0xf
  408be0:	and	x0, x10, #0xfffffffffffffff0
  408be4:	b.eq	408d08 <ferror@plt+0x5ec8>  // b.none
  408be8:	ldrb	w8, [x26, x0]
  408bec:	add	x1, x0, #0x1
  408bf0:	strb	w8, [x7, x0]
  408bf4:	cmp	x10, x1
  408bf8:	b.ls	408d08 <ferror@plt+0x5ec8>  // b.plast
  408bfc:	ldrb	w9, [x26, x1]
  408c00:	add	x8, x0, #0x2
  408c04:	strb	w9, [x7, x1]
  408c08:	cmp	x10, x8
  408c0c:	b.ls	408d08 <ferror@plt+0x5ec8>  // b.plast
  408c10:	ldrb	w9, [x26, x8]
  408c14:	add	x1, x0, #0x3
  408c18:	strb	w9, [x7, x8]
  408c1c:	cmp	x10, x1
  408c20:	b.ls	408d08 <ferror@plt+0x5ec8>  // b.plast
  408c24:	ldrb	w9, [x26, x1]
  408c28:	add	x8, x0, #0x4
  408c2c:	strb	w9, [x7, x1]
  408c30:	cmp	x10, x8
  408c34:	b.ls	408d08 <ferror@plt+0x5ec8>  // b.plast
  408c38:	ldrb	w9, [x26, x8]
  408c3c:	add	x1, x0, #0x5
  408c40:	strb	w9, [x7, x8]
  408c44:	cmp	x10, x1
  408c48:	b.ls	408d08 <ferror@plt+0x5ec8>  // b.plast
  408c4c:	ldrb	w9, [x26, x1]
  408c50:	add	x8, x0, #0x6
  408c54:	strb	w9, [x7, x1]
  408c58:	cmp	x10, x8
  408c5c:	b.ls	408d08 <ferror@plt+0x5ec8>  // b.plast
  408c60:	ldrb	w9, [x26, x8]
  408c64:	add	x1, x0, #0x7
  408c68:	strb	w9, [x7, x8]
  408c6c:	cmp	x1, x10
  408c70:	b.cs	408d08 <ferror@plt+0x5ec8>  // b.hs, b.nlast
  408c74:	ldrb	w9, [x26, x1]
  408c78:	add	x8, x0, #0x8
  408c7c:	strb	w9, [x7, x1]
  408c80:	cmp	x8, x10
  408c84:	b.cs	408d08 <ferror@plt+0x5ec8>  // b.hs, b.nlast
  408c88:	ldrb	w9, [x26, x8]
  408c8c:	add	x1, x0, #0x9
  408c90:	strb	w9, [x7, x8]
  408c94:	cmp	x1, x10
  408c98:	b.cs	408d08 <ferror@plt+0x5ec8>  // b.hs, b.nlast
  408c9c:	ldrb	w9, [x26, x1]
  408ca0:	add	x8, x0, #0xa
  408ca4:	strb	w9, [x7, x1]
  408ca8:	cmp	x10, x8
  408cac:	b.ls	408d08 <ferror@plt+0x5ec8>  // b.plast
  408cb0:	ldrb	w9, [x26, x8]
  408cb4:	add	x1, x0, #0xb
  408cb8:	strb	w9, [x7, x8]
  408cbc:	cmp	x10, x1
  408cc0:	b.ls	408d08 <ferror@plt+0x5ec8>  // b.plast
  408cc4:	ldrb	w9, [x26, x1]
  408cc8:	add	x8, x0, #0xc
  408ccc:	strb	w9, [x7, x1]
  408cd0:	cmp	x8, x10
  408cd4:	b.cs	408d08 <ferror@plt+0x5ec8>  // b.hs, b.nlast
  408cd8:	ldrb	w9, [x26, x8]
  408cdc:	add	x1, x0, #0xd
  408ce0:	strb	w9, [x7, x8]
  408ce4:	cmp	x1, x10
  408ce8:	b.cs	408d08 <ferror@plt+0x5ec8>  // b.hs, b.nlast
  408cec:	ldrb	w8, [x26, x1]
  408cf0:	add	x0, x0, #0xe
  408cf4:	strb	w8, [x7, x1]
  408cf8:	cmp	x10, x0
  408cfc:	b.ls	408d08 <ferror@plt+0x5ec8>  // b.plast
  408d00:	ldrb	w1, [x26, x0]
  408d04:	strb	w1, [x7, x0]
  408d08:	mov	x1, x10
  408d0c:	b	408014 <ferror@plt+0x51d4>
  408d10:	add	x0, x10, #0x11
  408d14:	add	x5, x27, #0x10
  408d18:	add	x0, x7, x0
  408d1c:	cmp	x27, x0
  408d20:	sub	x0, x24, #0x1
  408d24:	ccmp	x2, x5, #0x2, cc  // cc = lo, ul, last
  408d28:	ccmp	x0, #0xe, #0x0, cs  // cs = hs, nlast
  408d2c:	b.ls	408f0c <ferror@plt+0x60cc>  // b.plast
  408d30:	and	x5, x24, #0xfffffffffffffff0
  408d34:	mov	x0, #0x0                   	// #0
  408d38:	ldr	q0, [x27, x0]
  408d3c:	str	q0, [x2, x0]
  408d40:	add	x0, x0, #0x10
  408d44:	cmp	x5, x0
  408d48:	b.ne	408d38 <ferror@plt+0x5ef8>  // b.any
  408d4c:	tst	x24, #0xf
  408d50:	and	x0, x24, #0xfffffffffffffff0
  408d54:	b.eq	40805c <ferror@plt+0x521c>  // b.none
  408d58:	ldrb	w9, [x27, x0]
  408d5c:	add	x5, x0, #0x1
  408d60:	strb	w9, [x2, x0]
  408d64:	cmp	x24, x5
  408d68:	b.ls	40805c <ferror@plt+0x521c>  // b.plast
  408d6c:	ldrb	w10, [x27, x5]
  408d70:	add	x9, x0, #0x2
  408d74:	strb	w10, [x2, x5]
  408d78:	cmp	x24, x9
  408d7c:	b.ls	40805c <ferror@plt+0x521c>  // b.plast
  408d80:	ldrb	w10, [x27, x9]
  408d84:	add	x5, x0, #0x3
  408d88:	strb	w10, [x2, x9]
  408d8c:	cmp	x24, x5
  408d90:	b.ls	40805c <ferror@plt+0x521c>  // b.plast
  408d94:	ldrb	w10, [x27, x5]
  408d98:	add	x9, x0, #0x4
  408d9c:	strb	w10, [x2, x5]
  408da0:	cmp	x24, x9
  408da4:	b.ls	40805c <ferror@plt+0x521c>  // b.plast
  408da8:	ldrb	w10, [x27, x9]
  408dac:	add	x5, x0, #0x5
  408db0:	strb	w10, [x2, x9]
  408db4:	cmp	x24, x5
  408db8:	b.ls	40805c <ferror@plt+0x521c>  // b.plast
  408dbc:	ldrb	w10, [x27, x5]
  408dc0:	add	x9, x0, #0x6
  408dc4:	strb	w10, [x2, x5]
  408dc8:	cmp	x24, x9
  408dcc:	b.ls	40805c <ferror@plt+0x521c>  // b.plast
  408dd0:	ldrb	w10, [x27, x9]
  408dd4:	add	x5, x0, #0x7
  408dd8:	strb	w10, [x2, x9]
  408ddc:	cmp	x24, x5
  408de0:	b.ls	40805c <ferror@plt+0x521c>  // b.plast
  408de4:	ldrb	w10, [x27, x5]
  408de8:	add	x9, x0, #0x8
  408dec:	strb	w10, [x2, x5]
  408df0:	cmp	x24, x9
  408df4:	b.ls	40805c <ferror@plt+0x521c>  // b.plast
  408df8:	ldrb	w10, [x27, x9]
  408dfc:	add	x5, x0, #0x9
  408e00:	strb	w10, [x2, x9]
  408e04:	cmp	x24, x5
  408e08:	b.ls	40805c <ferror@plt+0x521c>  // b.plast
  408e0c:	ldrb	w10, [x27, x5]
  408e10:	add	x9, x0, #0xa
  408e14:	strb	w10, [x2, x5]
  408e18:	cmp	x24, x9
  408e1c:	b.ls	40805c <ferror@plt+0x521c>  // b.plast
  408e20:	ldrb	w10, [x27, x9]
  408e24:	add	x5, x0, #0xb
  408e28:	strb	w10, [x2, x9]
  408e2c:	cmp	x24, x5
  408e30:	b.ls	40805c <ferror@plt+0x521c>  // b.plast
  408e34:	ldrb	w10, [x27, x5]
  408e38:	add	x9, x0, #0xc
  408e3c:	strb	w10, [x2, x5]
  408e40:	cmp	x24, x9
  408e44:	b.ls	40805c <ferror@plt+0x521c>  // b.plast
  408e48:	ldrb	w10, [x27, x9]
  408e4c:	add	x5, x0, #0xd
  408e50:	strb	w10, [x2, x9]
  408e54:	cmp	x24, x5
  408e58:	b.ls	40805c <ferror@plt+0x521c>  // b.plast
  408e5c:	ldrb	w9, [x27, x5]
  408e60:	add	x0, x0, #0xe
  408e64:	strb	w9, [x2, x5]
  408e68:	cmp	x24, x0
  408e6c:	b.ls	40805c <ferror@plt+0x521c>  // b.plast
  408e70:	ldrb	w4, [x27, x0]
  408e74:	strb	w4, [x2, x0]
  408e78:	b	40805c <ferror@plt+0x521c>
  408e7c:	mov	w27, w25
  408e80:	b	408b7c <ferror@plt+0x5d3c>
  408e84:	cbz	x10, 408ef0 <ferror@plt+0x60b0>
  408e88:	cbz	x24, 408f5c <ferror@plt+0x611c>
  408e8c:	cbnz	x23, 408ec4 <ferror@plt+0x6084>
  408e90:	cmp	x10, x24
  408e94:	mov	x1, x27
  408e98:	csel	x2, x10, x24, ls  // ls = plast
  408e9c:	mov	x0, x26
  408ea0:	str	x10, [sp, #104]
  408ea4:	bl	402b00 <memcmp@plt>
  408ea8:	mov	w25, w0
  408eac:	ldr	x10, [sp, #104]
  408eb0:	cbnz	w0, 407f54 <ferror@plt+0x5114>
  408eb4:	cmp	x10, x24
  408eb8:	b.cc	408f4c <ferror@plt+0x610c>  // b.lo, b.ul, b.last
  408ebc:	cset	w25, ne  // ne = any
  408ec0:	b	407e40 <ferror@plt+0x5000>
  408ec4:	cmp	x26, x22
  408ec8:	ccmp	x27, x21, #0x2, cc  // cc = lo, ul, last
  408ecc:	b.cs	408eb4 <ferror@plt+0x6074>  // b.hs, b.nlast
  408ed0:	ldrb	w0, [x26], #1
  408ed4:	ldrb	w1, [x27], #1
  408ed8:	ldrb	w0, [x23, x0]
  408edc:	ldrb	w25, [x23, x1]
  408ee0:	subs	w25, w0, w25
  408ee4:	b.eq	408ec4 <ferror@plt+0x6084>  // b.none
  408ee8:	mov	w27, w25
  408eec:	b	408b70 <ferror@plt+0x5d30>
  408ef0:	cmp	x24, #0x0
  408ef4:	csetm	w25, ne  // ne = any
  408ef8:	b	407e40 <ferror@plt+0x5000>
  408efc:	mov	x2, x3
  408f00:	b	4082f8 <ferror@plt+0x54b8>
  408f04:	mov	x2, x3
  408f08:	b	408258 <ferror@plt+0x5418>
  408f0c:	mov	x0, #0x0                   	// #0
  408f10:	ldrb	w3, [x27, x0]
  408f14:	strb	w3, [x2, x0]
  408f18:	add	x0, x0, #0x1
  408f1c:	cmp	x24, x0
  408f20:	b.ne	408f10 <ferror@plt+0x60d0>  // b.any
  408f24:	b	40805c <ferror@plt+0x521c>
  408f28:	mov	x0, #0x0                   	// #0
  408f2c:	nop
  408f30:	ldrb	w1, [x26, x0]
  408f34:	strb	w1, [x7, x0]
  408f38:	add	x0, x0, #0x1
  408f3c:	cmp	x10, x0
  408f40:	b.ne	408f30 <ferror@plt+0x60f0>  // b.any
  408f44:	mov	x1, x10
  408f48:	b	408014 <ferror@plt+0x51d4>
  408f4c:	mov	w27, #0xffffffff            	// #-1
  408f50:	b	408b70 <ferror@plt+0x5d30>
  408f54:	mov	w25, #0xffffffff            	// #-1
  408f58:	b	407e28 <ferror@plt+0x4fe8>
  408f5c:	mov	w27, #0x1                   	// #1
  408f60:	b	408b70 <ferror@plt+0x5d30>
  408f64:	add	x0, x25, x28
  408f68:	sub	x2, x23, x28
  408f6c:	b	408890 <ferror@plt+0x5a50>
  408f70:	str	x25, [sp, #176]
  408f74:	mov	x10, x28
  408f78:	ldr	w25, [sp, #160]
  408f7c:	ldr	x0, [sp, #176]
  408f80:	ldr	x28, [sp, #200]
  408f84:	b	408910 <ferror@plt+0x5ad0>
  408f88:	mov	x27, x19
  408f8c:	ldr	x26, [sp, #176]
  408f90:	b	408ad8 <ferror@plt+0x5c98>
  408f94:	nop
  408f98:	stp	x29, x30, [sp, #-48]!
  408f9c:	mov	x29, sp
  408fa0:	stp	x19, x20, [sp, #16]
  408fa4:	mov	x19, x0
  408fa8:	ldrb	w0, [x1]
  408fac:	cmp	w0, #0x72
  408fb0:	b.eq	408fe8 <ferror@plt+0x61a8>  // b.none
  408fb4:	cmp	w0, #0x77
  408fb8:	b.ne	4090b8 <ferror@plt+0x6278>  // b.any
  408fbc:	cbz	x19, 408fd0 <ferror@plt+0x6190>
  408fc0:	mov	x1, #0x0                   	// #0
  408fc4:	mov	w0, #0x1                   	// #1
  408fc8:	bl	402d60 <ftruncate@plt>
  408fcc:	cbnz	w0, 409054 <ferror@plt+0x6214>
  408fd0:	adrp	x0, 42d000 <_obstack_memory_used@@Base+0x176c8>
  408fd4:	ldr	x19, [x0, #1360]
  408fd8:	mov	x0, x19
  408fdc:	ldp	x19, x20, [sp, #16]
  408fe0:	ldp	x29, x30, [sp], #48
  408fe4:	ret
  408fe8:	ldrb	w0, [x19]
  408fec:	mov	x20, x1
  408ff0:	cmp	w0, #0x2d
  408ff4:	b.ne	409030 <ferror@plt+0x61f0>  // b.any
  408ff8:	ldrb	w0, [x19, #1]
  408ffc:	cbnz	w0, 409030 <ferror@plt+0x61f0>
  409000:	adrp	x2, 42d000 <_obstack_memory_used@@Base+0x176c8>
  409004:	adrp	x0, 42d000 <_obstack_memory_used@@Base+0x176c8>
  409008:	mov	w1, #0x1                   	// #1
  40900c:	ldr	x19, [x2, #1368]
  409010:	strb	w1, [x0, #2642]
  409014:	mov	x0, x19
  409018:	mov	w1, #0x2                   	// #2
  40901c:	bl	40c9e8 <ferror@plt+0x9ba8>
  409020:	mov	x0, x19
  409024:	ldp	x19, x20, [sp, #16]
  409028:	ldp	x29, x30, [sp], #48
  40902c:	ret
  409030:	mov	x0, x19
  409034:	mov	w1, #0x80000               	// #524288
  409038:	mov	x19, #0x0                   	// #0
  40903c:	bl	402900 <open@plt>
  409040:	tbnz	w0, #31, 409014 <ferror@plt+0x61d4>
  409044:	mov	x1, x20
  409048:	bl	4029a0 <fdopen@plt>
  40904c:	mov	x19, x0
  409050:	b	409014 <ferror@plt+0x61d4>
  409054:	adrp	x20, 42d000 <_obstack_memory_used@@Base+0x176c8>
  409058:	add	x20, x20, #0x570
  40905c:	stp	x21, x22, [sp, #32]
  409060:	bl	402db0 <__errno_location@plt>
  409064:	mov	x21, x0
  409068:	ldr	w0, [x20, #1412]
  40906c:	ldr	w22, [x21]
  409070:	cbz	w0, 409090 <ferror@plt+0x6250>
  409074:	tbz	w0, #31, 4090e0 <ferror@plt+0x62a0>
  409078:	ldr	w0, [x20, #1432]
  40907c:	and	w0, w0, #0xf000
  409080:	cmp	w0, #0x8, lsl #12
  409084:	b.eq	4090e0 <ferror@plt+0x62a0>  // b.none
  409088:	ldp	x21, x22, [sp, #32]
  40908c:	b	408fd0 <ferror@plt+0x6190>
  409090:	add	x2, x20, #0x588
  409094:	mov	w1, #0x1                   	// #1
  409098:	bl	402d10 <__fxstat@plt>
  40909c:	cbnz	w0, 4090ac <ferror@plt+0x626c>
  4090a0:	mov	w0, #0xffffffff            	// #-1
  4090a4:	str	w0, [x20, #1412]
  4090a8:	b	409078 <ferror@plt+0x6238>
  4090ac:	ldr	w0, [x21]
  4090b0:	str	w0, [x20, #1412]
  4090b4:	b	409074 <ferror@plt+0x6234>
  4090b8:	adrp	x3, 418000 <_obstack_memory_used@@Base+0x26c8>
  4090bc:	add	x3, x3, #0x100
  4090c0:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x6c8>
  4090c4:	adrp	x0, 416000 <_obstack_memory_used@@Base+0x6c8>
  4090c8:	add	x3, x3, #0x100
  4090cc:	add	x1, x1, #0x638
  4090d0:	add	x0, x0, #0x648
  4090d4:	mov	w2, #0x3d6                 	// #982
  4090d8:	stp	x21, x22, [sp, #32]
  4090dc:	bl	402da0 <__assert_fail@plt>
  4090e0:	mov	w2, #0x5                   	// #5
  4090e4:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x6c8>
  4090e8:	mov	x0, #0x0                   	// #0
  4090ec:	add	x1, x1, #0x620
  4090f0:	bl	402d20 <dcgettext@plt>
  4090f4:	mov	x20, x0
  4090f8:	mov	x2, x19
  4090fc:	mov	w1, #0x3                   	// #3
  409100:	mov	w0, #0x0                   	// #0
  409104:	bl	411a40 <ferror@plt+0xec00>
  409108:	mov	x2, x20
  40910c:	mov	x3, x0
  409110:	mov	w1, w22
  409114:	mov	w0, #0x2                   	// #2
  409118:	bl	4027b0 <error@plt>
  40911c:	nop
  409120:	cbz	x0, 409158 <ferror@plt+0x6318>
  409124:	stp	x29, x30, [sp, #-48]!
  409128:	mov	x1, #0x0                   	// #0
  40912c:	mov	x29, sp
  409130:	stp	x19, x20, [sp, #16]
  409134:	mov	x19, x0
  409138:	mov	w0, #0x1                   	// #1
  40913c:	bl	402d60 <ftruncate@plt>
  409140:	cbnz	w0, 409164 <ferror@plt+0x6324>
  409144:	adrp	x0, 42d000 <_obstack_memory_used@@Base+0x176c8>
  409148:	ldp	x19, x20, [sp, #16]
  40914c:	ldr	x0, [x0, #1360]
  409150:	ldp	x29, x30, [sp], #48
  409154:	ret
  409158:	adrp	x0, 42d000 <_obstack_memory_used@@Base+0x176c8>
  40915c:	ldr	x0, [x0, #1360]
  409160:	ret
  409164:	adrp	x20, 42d000 <_obstack_memory_used@@Base+0x176c8>
  409168:	add	x20, x20, #0x570
  40916c:	stp	x21, x22, [sp, #32]
  409170:	bl	402db0 <__errno_location@plt>
  409174:	mov	x21, x0
  409178:	ldr	w0, [x20, #1412]
  40917c:	ldr	w22, [x21]
  409180:	cbz	w0, 4091b0 <ferror@plt+0x6370>
  409184:	tbz	w0, #31, 4091d8 <ferror@plt+0x6398>
  409188:	ldr	w0, [x20, #1432]
  40918c:	and	w0, w0, #0xf000
  409190:	cmp	w0, #0x8, lsl #12
  409194:	b.eq	4091d8 <ferror@plt+0x6398>  // b.none
  409198:	adrp	x0, 42d000 <_obstack_memory_used@@Base+0x176c8>
  40919c:	ldp	x19, x20, [sp, #16]
  4091a0:	ldr	x0, [x0, #1360]
  4091a4:	ldp	x21, x22, [sp, #32]
  4091a8:	ldp	x29, x30, [sp], #48
  4091ac:	ret
  4091b0:	add	x2, x20, #0x588
  4091b4:	mov	w1, #0x1                   	// #1
  4091b8:	bl	402d10 <__fxstat@plt>
  4091bc:	cbnz	w0, 4091cc <ferror@plt+0x638c>
  4091c0:	mov	w0, #0xffffffff            	// #-1
  4091c4:	str	w0, [x20, #1412]
  4091c8:	b	409188 <ferror@plt+0x6348>
  4091cc:	ldr	w0, [x21]
  4091d0:	str	w0, [x20, #1412]
  4091d4:	b	409184 <ferror@plt+0x6344>
  4091d8:	mov	w2, #0x5                   	// #5
  4091dc:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x6c8>
  4091e0:	mov	x0, #0x0                   	// #0
  4091e4:	add	x1, x1, #0x620
  4091e8:	bl	402d20 <dcgettext@plt>
  4091ec:	mov	x20, x0
  4091f0:	mov	x2, x19
  4091f4:	mov	w1, #0x3                   	// #3
  4091f8:	mov	w0, #0x0                   	// #0
  4091fc:	bl	411a40 <ferror@plt+0xec00>
  409200:	mov	x2, x20
  409204:	mov	x3, x0
  409208:	mov	w1, w22
  40920c:	mov	w0, #0x2                   	// #2
  409210:	bl	4027b0 <error@plt>
  409214:	nop
  409218:	stp	x29, x30, [sp, #-144]!
  40921c:	mov	x29, sp
  409220:	stp	x19, x20, [sp, #16]
  409224:	adrp	x19, 42d000 <_obstack_memory_used@@Base+0x176c8>
  409228:	add	x19, x19, #0x570
  40922c:	add	x20, x19, #0x608
  409230:	stp	x21, x22, [sp, #32]
  409234:	mov	x22, x3
  409238:	stp	x23, x24, [sp, #48]
  40923c:	mov	x23, x2
  409240:	add	x21, x0, #0x8
  409244:	stp	x25, x26, [sp, #64]
  409248:	stp	x27, x28, [sp, #80]
  40924c:	stp	x0, x1, [sp, #128]
  409250:	add	x0, x0, #0x38
  409254:	str	x0, [sp, #120]
  409258:	mov	x0, x21
  40925c:	bl	402df0 <pthread_mutex_lock@plt>
  409260:	b	409270 <ferror@plt+0x6430>
  409264:	ldr	x0, [sp, #120]
  409268:	mov	x1, x21
  40926c:	bl	402bd0 <pthread_cond_wait@plt>
  409270:	ldr	x0, [sp, #128]
  409274:	ldr	x0, [x0]
  409278:	bl	40e5d0 <ferror@plt+0xb790>
  40927c:	mov	x27, x0
  409280:	cbz	x0, 409264 <ferror@plt+0x6424>
  409284:	mov	x0, x21
  409288:	add	x24, x27, #0x58
  40928c:	bl	402e00 <pthread_mutex_unlock@plt>
  409290:	mov	x0, x24
  409294:	bl	402df0 <pthread_mutex_lock@plt>
  409298:	ldr	w0, [x27, #80]
  40929c:	strb	wzr, [x27, #84]
  4092a0:	cbz	w0, 409a04 <ferror@plt+0x6bc4>
  4092a4:	add	w6, w0, #0x1
  4092a8:	cmp	w0, #0x1
  4092ac:	ldr	x0, [sp, #136]
  4092b0:	lsl	w6, w6, #1
  4092b4:	ldp	x28, x25, [x27]
  4092b8:	str	x28, [sp, #104]
  4092bc:	ldr	x4, [x27, #16]
  4092c0:	lsr	x6, x0, x6
  4092c4:	add	x6, x6, #0x1
  4092c8:	mov	x13, x4
  4092cc:	b.ls	409404 <ferror@plt+0x65c4>  // b.plast
  4092d0:	ldr	x11, [x27, #32]
  4092d4:	mov	x2, x28
  4092d8:	cmp	x28, x4
  4092dc:	mov	x1, x25
  4092e0:	ldr	x26, [x11]
  4092e4:	b.ne	409314 <ferror@plt+0x64d4>  // b.any
  4092e8:	b	409a9c <ferror@plt+0x6c5c>
  4092ec:	sub	x1, x8, #0x20
  4092f0:	str	x1, [x27, #8]
  4092f4:	ldp	x6, x7, [x8, #-32]
  4092f8:	stp	x6, x7, [x26]
  4092fc:	ldp	x6, x7, [x8, #-16]
  409300:	stp	x6, x7, [x26, #16]
  409304:	ldr	x13, [x27, #16]
  409308:	cmp	x13, x2
  40930c:	b.eq	4093a4 <ferror@plt+0x6564>  // b.none
  409310:	ldr	x6, [sp, #96]
  409314:	ldr	x0, [x27, #24]
  409318:	cmp	x0, x1
  40931c:	b.eq	409764 <ferror@plt+0x6924>  // b.none
  409320:	sub	x0, x6, #0x1
  409324:	str	x0, [sp, #96]
  409328:	cbz	x6, 409874 <ferror@plt+0x6a34>
  40932c:	ldr	x0, [x19, #1232]
  409330:	sub	x2, x2, #0x20
  409334:	sub	x1, x1, #0x20
  409338:	sub	x26, x26, #0x20
  40933c:	cbz	x0, 409364 <ferror@plt+0x6524>
  409340:	mov	x0, x2
  409344:	stp	x2, x1, [sp, #104]
  409348:	bl	407d30 <ferror@plt+0x4ef0>
  40934c:	cbnz	w0, 40936c <ferror@plt+0x652c>
  409350:	ldrb	w0, [x19, #1248]
  409354:	ldp	x2, x1, [sp, #104]
  409358:	cbnz	w0, 4093dc <ferror@plt+0x659c>
  40935c:	ldrb	w0, [x19, #1249]
  409360:	cbnz	w0, 4093dc <ferror@plt+0x659c>
  409364:	mov	x0, x2
  409368:	bl	406488 <ferror@plt+0x3648>
  40936c:	cmp	w0, #0x0
  409370:	ldp	x2, x8, [x27]
  409374:	b.gt	4092ec <ferror@plt+0x64ac>
  409378:	sub	x9, x2, #0x20
  40937c:	str	x9, [x27]
  409380:	ldp	x0, x1, [x2, #-32]
  409384:	stp	x0, x1, [x26]
  409388:	mov	x1, x8
  40938c:	ldp	x6, x7, [x2, #-16]
  409390:	mov	x2, x9
  409394:	stp	x6, x7, [x26, #16]
  409398:	ldr	x13, [x27, #16]
  40939c:	cmp	x13, x2
  4093a0:	b.ne	409310 <ferror@plt+0x64d0>  // b.any
  4093a4:	sub	x8, x28, x2
  4093a8:	sub	x0, x25, x1
  4093ac:	ldrb	w12, [x27, #84]
  4093b0:	ldr	x11, [x27, #32]
  4093b4:	asr	x7, x8, #5
  4093b8:	ldr	x6, [sp, #96]
  4093bc:	asr	x0, x0, #5
  4093c0:	ldp	x10, x9, [x27, #40]
  4093c4:	cmp	x9, x0
  4093c8:	b.eq	4093d4 <ferror@plt+0x6594>  // b.none
  4093cc:	cmp	x10, x7
  4093d0:	b.eq	4097dc <ferror@plt+0x699c>  // b.none
  4093d4:	str	x26, [x11]
  4093d8:	b	409698 <ferror@plt+0x6858>
  4093dc:	ldp	x2, x8, [x27]
  4093e0:	sub	x9, x2, #0x20
  4093e4:	str	x9, [x27]
  4093e8:	ldp	x0, x1, [x2, #-32]
  4093ec:	stp	x0, x1, [x26]
  4093f0:	ldp	x6, x7, [x2, #-16]
  4093f4:	mov	x1, x8
  4093f8:	mov	x2, x9
  4093fc:	stp	x6, x7, [x26, #16]
  409400:	b	409398 <ferror@plt+0x6558>
  409404:	cmp	x28, x4
  409408:	mov	x1, x25
  40940c:	mov	x0, #0x0                   	// #0
  409410:	mov	x2, #0x0                   	// #0
  409414:	b.ne	4094b0 <ferror@plt+0x6670>  // b.any
  409418:	b	4098ec <ferror@plt+0x6aac>
  40941c:	ldr	x2, [x27, #8]
  409420:	sub	x28, x2, #0x20
  409424:	str	x28, [x27, #8]
  409428:	cbz	w0, 40948c <ferror@plt+0x664c>
  40942c:	ldr	x0, [x20]
  409430:	cbz	x0, 40947c <ferror@plt+0x663c>
  409434:	ldr	x0, [x19, #1232]
  409438:	cbz	x0, 409464 <ferror@plt+0x6624>
  40943c:	mov	x1, x20
  409440:	mov	x0, x28
  409444:	str	x2, [sp, #96]
  409448:	bl	407d30 <ferror@plt+0x4ef0>
  40944c:	ldr	x2, [sp, #96]
  409450:	cbnz	w0, 40947c <ferror@plt+0x663c>
  409454:	ldrb	w0, [x19, #1248]
  409458:	cbnz	w0, 40949c <ferror@plt+0x665c>
  40945c:	ldrb	w0, [x19, #1249]
  409460:	cbnz	w0, 40949c <ferror@plt+0x665c>
  409464:	mov	x1, x20
  409468:	mov	x0, x28
  40946c:	str	x2, [sp, #96]
  409470:	bl	406488 <ferror@plt+0x3648>
  409474:	ldr	x2, [sp, #96]
  409478:	cbz	w0, 40949c <ferror@plt+0x665c>
  40947c:	ldp	x0, x1, [x2, #-32]
  409480:	stp	x0, x1, [x20]
  409484:	ldp	x0, x1, [x2, #-16]
  409488:	stp	x0, x1, [x20, #16]
  40948c:	mov	x0, x28
  409490:	mov	x2, x22
  409494:	mov	x1, x23
  409498:	bl	406a98 <ferror@plt+0x3c58>
  40949c:	ldp	x28, x1, [x27]
  4094a0:	ldr	x4, [x27, #16]
  4094a4:	cmp	x28, x4
  4094a8:	b.eq	4098d4 <ferror@plt+0x6a94>  // b.none
  4094ac:	mov	x6, x26
  4094b0:	ldr	x0, [x27, #24]
  4094b4:	cmp	x0, x1
  4094b8:	b.eq	4095ac <ferror@plt+0x676c>  // b.none
  4094bc:	sub	x26, x6, #0x1
  4094c0:	cbz	x6, 4095a8 <ferror@plt+0x6768>
  4094c4:	ldr	x0, [x19, #1232]
  4094c8:	sub	x28, x28, #0x20
  4094cc:	sub	x1, x1, #0x20
  4094d0:	cbz	x0, 4094f8 <ferror@plt+0x66b8>
  4094d4:	mov	x0, x28
  4094d8:	str	x1, [sp, #96]
  4094dc:	bl	407d30 <ferror@plt+0x4ef0>
  4094e0:	cbnz	w0, 409500 <ferror@plt+0x66c0>
  4094e4:	ldrb	w0, [x19, #1248]
  4094e8:	cbnz	w0, 409584 <ferror@plt+0x6744>
  4094ec:	ldrb	w0, [x19, #1249]
  4094f0:	ldr	x1, [sp, #96]
  4094f4:	cbnz	w0, 409598 <ferror@plt+0x6758>
  4094f8:	mov	x0, x28
  4094fc:	bl	406488 <ferror@plt+0x3648>
  409500:	cmp	w0, #0x0
  409504:	ldrb	w0, [x19, #1248]
  409508:	b.gt	40941c <ferror@plt+0x65dc>
  40950c:	ldr	x2, [x27]
  409510:	sub	x2, x2, #0x20
  409514:	str	x2, [x27]
  409518:	mov	x28, x2
  40951c:	cbz	w0, 40948c <ferror@plt+0x664c>
  409520:	ldr	x0, [x20]
  409524:	cbz	x0, 409570 <ferror@plt+0x6730>
  409528:	ldr	x0, [x19, #1232]
  40952c:	cbz	x0, 409558 <ferror@plt+0x6718>
  409530:	mov	x0, x2
  409534:	mov	x1, x20
  409538:	str	x2, [sp, #96]
  40953c:	bl	407d30 <ferror@plt+0x4ef0>
  409540:	ldr	x2, [sp, #96]
  409544:	cbnz	w0, 409570 <ferror@plt+0x6730>
  409548:	ldrb	w0, [x19, #1248]
  40954c:	cbnz	w0, 40949c <ferror@plt+0x665c>
  409550:	ldrb	w0, [x19, #1249]
  409554:	cbnz	w0, 40949c <ferror@plt+0x665c>
  409558:	mov	x0, x2
  40955c:	mov	x1, x20
  409560:	str	x2, [sp, #96]
  409564:	bl	406488 <ferror@plt+0x3648>
  409568:	ldr	x2, [sp, #96]
  40956c:	cbz	w0, 40949c <ferror@plt+0x665c>
  409570:	ldp	x0, x1, [x2]
  409574:	stp	x0, x1, [x20]
  409578:	ldp	x0, x1, [x2, #16]
  40957c:	stp	x0, x1, [x20, #16]
  409580:	b	40948c <ferror@plt+0x664c>
  409584:	ldr	x2, [x27]
  409588:	sub	x2, x2, #0x20
  40958c:	str	x2, [x27]
  409590:	mov	x28, x2
  409594:	b	409520 <ferror@plt+0x66e0>
  409598:	ldr	x4, [x27]
  40959c:	sub	x28, x4, #0x20
  4095a0:	str	x28, [x27]
  4095a4:	b	40948c <ferror@plt+0x664c>
  4095a8:	mov	x6, #0xffffffffffffffff    	// #-1
  4095ac:	ldr	x9, [x27, #48]
  4095b0:	sub	x2, x25, x1
  4095b4:	asr	x0, x2, #5
  4095b8:	cmp	x9, x2, asr #5
  4095bc:	b.ne	409914 <ferror@plt+0x6ad4>  // b.any
  4095c0:	cmp	x4, x28
  4095c4:	mov	x26, x28
  4095c8:	b.eq	409ae0 <ferror@plt+0x6ca0>  // b.none
  4095cc:	sub	x4, x6, #0x1
  4095d0:	cbnz	x6, 4095e4 <ferror@plt+0x67a4>
  4095d4:	b	409ac8 <ferror@plt+0x6c88>
  4095d8:	sub	x4, x4, #0x1
  4095dc:	cmn	x4, #0x1
  4095e0:	b.eq	409a74 <ferror@plt+0x6c34>  // b.none
  4095e4:	ldrb	w0, [x19, #1248]
  4095e8:	sub	x26, x26, #0x20
  4095ec:	str	x26, [x27]
  4095f0:	cbz	w0, 409654 <ferror@plt+0x6814>
  4095f4:	ldr	x0, [x20]
  4095f8:	cbz	x0, 409644 <ferror@plt+0x6804>
  4095fc:	ldr	x0, [x19, #1232]
  409600:	cbz	x0, 40962c <ferror@plt+0x67ec>
  409604:	mov	x1, x20
  409608:	mov	x0, x26
  40960c:	str	x4, [sp, #96]
  409610:	bl	407d30 <ferror@plt+0x4ef0>
  409614:	ldr	x4, [sp, #96]
  409618:	cbnz	w0, 409644 <ferror@plt+0x6804>
  40961c:	ldrb	w0, [x19, #1248]
  409620:	cbnz	w0, 40966c <ferror@plt+0x682c>
  409624:	ldrb	w0, [x19, #1249]
  409628:	cbnz	w0, 40966c <ferror@plt+0x682c>
  40962c:	mov	x1, x20
  409630:	mov	x0, x26
  409634:	str	x4, [sp, #96]
  409638:	bl	406488 <ferror@plt+0x3648>
  40963c:	ldr	x4, [sp, #96]
  409640:	cbz	w0, 40966c <ferror@plt+0x682c>
  409644:	ldp	x0, x1, [x26]
  409648:	stp	x0, x1, [x20]
  40964c:	ldp	x0, x1, [x26, #16]
  409650:	stp	x0, x1, [x20, #16]
  409654:	mov	x0, x26
  409658:	mov	x2, x22
  40965c:	mov	x1, x23
  409660:	str	x4, [sp, #96]
  409664:	bl	406a98 <ferror@plt+0x3c58>
  409668:	ldr	x4, [sp, #96]
  40966c:	ldr	x26, [x27]
  409670:	ldr	x2, [x27, #16]
  409674:	cmp	x26, x2
  409678:	b.ne	4095d8 <ferror@plt+0x6798>  // b.any
  40967c:	ldr	x1, [x27, #8]
  409680:	sub	x25, x25, x1
  409684:	ldp	x10, x9, [x27, #40]
  409688:	ldr	x0, [sp, #104]
  40968c:	ldrb	w12, [x27, #84]
  409690:	sub	x8, x0, x2
  409694:	asr	x0, x25, #5
  409698:	sub	x8, x10, x8, asr #5
  40969c:	sub	x25, x9, x0
  4096a0:	stp	x8, x25, [x27, #40]
  4096a4:	cbnz	w12, 4096c8 <ferror@plt+0x6888>
  4096a8:	ldp	x4, x0, [x27, #16]
  4096ac:	cmp	x0, x1
  4096b0:	cset	w0, ne  // ne = any
  4096b4:	cmp	x4, x2
  4096b8:	b.eq	4098c8 <ferror@plt+0x6a88>  // b.none
  4096bc:	cmp	x25, #0x0
  4096c0:	csinc	w0, w0, wzr, ne  // ne = any
  4096c4:	cbnz	w0, 409894 <ferror@plt+0x6a54>
  4096c8:	ldr	w0, [x27, #80]
  4096cc:	cmp	w0, #0x1
  4096d0:	b.hi	4096ec <ferror@plt+0x68ac>  // b.pmore
  4096d4:	ldp	x0, x1, [x27, #40]
  4096d8:	cmn	x0, x1
  4096dc:	b.eq	40983c <ferror@plt+0x69fc>  // b.none
  4096e0:	mov	x0, x24
  4096e4:	bl	402e00 <pthread_mutex_unlock@plt>
  4096e8:	b	409258 <ferror@plt+0x6418>
  4096ec:	ldr	x0, [x27, #56]
  4096f0:	add	x0, x0, #0x58
  4096f4:	bl	402df0 <pthread_mutex_lock@plt>
  4096f8:	ldr	x25, [x27, #56]
  4096fc:	ldrb	w0, [x25, #84]
  409700:	cbnz	w0, 409758 <ferror@plt+0x6918>
  409704:	ldp	x2, x1, [x25]
  409708:	ldr	x0, [x25, #16]
  40970c:	cmp	x2, x0
  409710:	ldr	x0, [x25, #24]
  409714:	b.eq	409a60 <ferror@plt+0x6c20>  // b.none
  409718:	cmp	x1, x0
  40971c:	b.eq	409a90 <ferror@plt+0x6c50>  // b.none
  409720:	mov	x0, x21
  409724:	bl	402df0 <pthread_mutex_lock@plt>
  409728:	ldr	x0, [sp, #128]
  40972c:	mov	x1, x25
  409730:	ldr	x0, [x0]
  409734:	bl	40e4b0 <ferror@plt+0xb670>
  409738:	mov	w0, #0x1                   	// #1
  40973c:	strb	w0, [x25, #84]
  409740:	ldr	x0, [sp, #120]
  409744:	bl	402930 <pthread_cond_signal@plt>
  409748:	mov	x0, x21
  40974c:	bl	402e00 <pthread_mutex_unlock@plt>
  409750:	ldr	x25, [x27, #56]
  409754:	nop
  409758:	add	x0, x25, #0x58
  40975c:	bl	402e00 <pthread_mutex_unlock@plt>
  409760:	b	4096e0 <ferror@plt+0x68a0>
  409764:	sub	x8, x28, x2
  409768:	sub	x0, x25, x1
  40976c:	ldrb	w12, [x27, #84]
  409770:	ldr	x11, [x27, #32]
  409774:	asr	x7, x8, #5
  409778:	asr	x0, x0, #5
  40977c:	ldp	x10, x9, [x27, #40]
  409780:	cmp	x9, x0
  409784:	b.ne	4093cc <ferror@plt+0x658c>  // b.any
  409788:	cmp	x13, x2
  40978c:	b.eq	4093d4 <ferror@plt+0x6594>  // b.none
  409790:	sub	x14, x6, #0x1
  409794:	cbz	x6, 4093d4 <ferror@plt+0x6594>
  409798:	sub	x6, x2, #0x20
  40979c:	b	4097ac <ferror@plt+0x696c>
  4097a0:	cmn	x14, #0x1
  4097a4:	sub	x6, x2, #0x20
  4097a8:	b.eq	409a54 <ferror@plt+0x6c14>  // b.none
  4097ac:	mov	x2, x6
  4097b0:	sub	x14, x14, #0x1
  4097b4:	ldp	x6, x7, [x6]
  4097b8:	str	x2, [x27]
  4097bc:	stp	x6, x7, [x26, #-32]!
  4097c0:	cmp	x2, x13
  4097c4:	ldp	x6, x7, [x2, #16]
  4097c8:	stp	x6, x7, [x26, #16]
  4097cc:	b.ne	4097a0 <ferror@plt+0x6960>  // b.any
  4097d0:	sub	x8, x28, x13
  4097d4:	str	x26, [x11]
  4097d8:	b	409698 <ferror@plt+0x6858>
  4097dc:	ldr	x13, [x27, #24]
  4097e0:	cmp	x13, x1
  4097e4:	b.eq	4093d4 <ferror@plt+0x6594>  // b.none
  4097e8:	sub	x5, x6, #0x1
  4097ec:	cbz	x6, 4093d4 <ferror@plt+0x6594>
  4097f0:	sub	x0, x1, #0x20
  4097f4:	b	409804 <ferror@plt+0x69c4>
  4097f8:	cmn	x5, #0x1
  4097fc:	sub	x0, x0, #0x20
  409800:	b.eq	409a80 <ferror@plt+0x6c40>  // b.none
  409804:	ldp	x6, x7, [x0]
  409808:	str	x0, [x27, #8]
  40980c:	stp	x6, x7, [x26, #-32]!
  409810:	mov	x1, x0
  409814:	sub	x5, x5, #0x1
  409818:	ldp	x6, x7, [x0, #16]
  40981c:	stp	x6, x7, [x26, #16]
  409820:	cmp	x0, x13
  409824:	b.ne	4097f8 <ferror@plt+0x69b8>  // b.any
  409828:	sub	x25, x25, x13
  40982c:	mov	x1, x13
  409830:	str	x26, [x11]
  409834:	asr	x0, x25, #5
  409838:	b	409698 <ferror@plt+0x6858>
  40983c:	mov	x0, x21
  409840:	ldr	x25, [x27, #56]
  409844:	bl	402df0 <pthread_mutex_lock@plt>
  409848:	ldr	x0, [sp, #128]
  40984c:	mov	x1, x25
  409850:	ldr	x0, [x0]
  409854:	bl	40e4b0 <ferror@plt+0xb670>
  409858:	mov	w0, #0x1                   	// #1
  40985c:	strb	w0, [x25, #84]
  409860:	ldr	x0, [sp, #120]
  409864:	bl	402930 <pthread_cond_signal@plt>
  409868:	mov	x0, x21
  40986c:	bl	402e00 <pthread_mutex_unlock@plt>
  409870:	b	4096e0 <ferror@plt+0x68a0>
  409874:	sub	x8, x28, x2
  409878:	sub	x0, x25, x1
  40987c:	ldrb	w12, [x27, #84]
  409880:	mov	x6, #0xffffffffffffffff    	// #-1
  409884:	asr	x7, x8, #5
  409888:	asr	x0, x0, #5
  40988c:	ldr	x11, [x27, #32]
  409890:	b	40977c <ferror@plt+0x693c>
  409894:	mov	x0, x21
  409898:	bl	402df0 <pthread_mutex_lock@plt>
  40989c:	ldr	x0, [sp, #128]
  4098a0:	mov	x1, x27
  4098a4:	ldr	x0, [x0]
  4098a8:	bl	40e4b0 <ferror@plt+0xb670>
  4098ac:	mov	w0, #0x1                   	// #1
  4098b0:	strb	w0, [x27, #84]
  4098b4:	ldr	x0, [sp, #120]
  4098b8:	bl	402930 <pthread_cond_signal@plt>
  4098bc:	mov	x0, x21
  4098c0:	bl	402e00 <pthread_mutex_unlock@plt>
  4098c4:	b	4096c8 <ferror@plt+0x6888>
  4098c8:	cmp	x8, #0x0
  4098cc:	csel	w0, w0, wzr, eq  // eq = none
  4098d0:	b	4096c4 <ferror@plt+0x6884>
  4098d4:	ldr	x0, [sp, #104]
  4098d8:	mov	x6, x26
  4098dc:	sub	x2, x0, x28
  4098e0:	sub	x0, x25, x1
  4098e4:	asr	x2, x2, #5
  4098e8:	asr	x0, x0, #5
  4098ec:	ldp	x10, x9, [x27, #40]
  4098f0:	cmp	x9, x0
  4098f4:	b.eq	409ab0 <ferror@plt+0x6c70>  // b.none
  4098f8:	cmp	x2, x10
  4098fc:	b.eq	40992c <ferror@plt+0x6aec>  // b.none
  409900:	ldr	x3, [sp, #104]
  409904:	mov	x2, x28
  409908:	ldrb	w12, [x27, #84]
  40990c:	sub	x8, x3, x28
  409910:	b	409698 <ferror@plt+0x6858>
  409914:	ldr	x2, [sp, #104]
  409918:	ldr	x10, [x27, #40]
  40991c:	sub	x2, x2, x28
  409920:	asr	x2, x2, #5
  409924:	cmp	x2, x10
  409928:	b.ne	409900 <ferror@plt+0x6ac0>  // b.any
  40992c:	ldr	x2, [x27, #24]
  409930:	cmp	x2, x1
  409934:	b.eq	409900 <ferror@plt+0x6ac0>  // b.none
  409938:	sub	x4, x6, #0x1
  40993c:	cbz	x6, 409900 <ferror@plt+0x6ac0>
  409940:	ldrb	w0, [x19, #1248]
  409944:	sub	x26, x1, #0x20
  409948:	str	x26, [x27, #8]
  40994c:	cbz	w0, 4099b0 <ferror@plt+0x6b70>
  409950:	ldr	x0, [x20]
  409954:	cbz	x0, 4099a0 <ferror@plt+0x6b60>
  409958:	ldr	x0, [x19, #1232]
  40995c:	cbz	x0, 409988 <ferror@plt+0x6b48>
  409960:	mov	x1, x20
  409964:	mov	x0, x26
  409968:	str	x4, [sp, #96]
  40996c:	bl	407d30 <ferror@plt+0x4ef0>
  409970:	ldr	x4, [sp, #96]
  409974:	cbnz	w0, 4099a0 <ferror@plt+0x6b60>
  409978:	ldrb	w0, [x19, #1248]
  40997c:	cbnz	w0, 4099c8 <ferror@plt+0x6b88>
  409980:	ldrb	w0, [x19, #1249]
  409984:	cbnz	w0, 4099c8 <ferror@plt+0x6b88>
  409988:	mov	x1, x20
  40998c:	mov	x0, x26
  409990:	str	x4, [sp, #96]
  409994:	bl	406488 <ferror@plt+0x3648>
  409998:	ldr	x4, [sp, #96]
  40999c:	cbz	w0, 4099c8 <ferror@plt+0x6b88>
  4099a0:	ldp	x0, x1, [x26]
  4099a4:	stp	x0, x1, [x20]
  4099a8:	ldp	x0, x1, [x26, #16]
  4099ac:	stp	x0, x1, [x20, #16]
  4099b0:	mov	x0, x26
  4099b4:	mov	x2, x22
  4099b8:	mov	x1, x23
  4099bc:	str	x4, [sp, #96]
  4099c0:	bl	406a98 <ferror@plt+0x3c58>
  4099c4:	ldr	x4, [sp, #96]
  4099c8:	ldr	x1, [x27, #8]
  4099cc:	ldr	x0, [x27, #24]
  4099d0:	cmp	x1, x0
  4099d4:	b.eq	4099e4 <ferror@plt+0x6ba4>  // b.none
  4099d8:	sub	x4, x4, #0x1
  4099dc:	cmn	x4, #0x1
  4099e0:	b.ne	409940 <ferror@plt+0x6b00>  // b.any
  4099e4:	ldr	x2, [x27]
  4099e8:	sub	x25, x25, x1
  4099ec:	ldr	x3, [sp, #104]
  4099f0:	asr	x0, x25, #5
  4099f4:	ldrb	w12, [x27, #84]
  4099f8:	sub	x8, x3, x2
  4099fc:	ldp	x10, x9, [x27, #40]
  409a00:	b	409698 <ferror@plt+0x6858>
  409a04:	mov	x0, x24
  409a08:	bl	402e00 <pthread_mutex_unlock@plt>
  409a0c:	mov	x0, x21
  409a10:	bl	402df0 <pthread_mutex_lock@plt>
  409a14:	ldr	x0, [sp, #128]
  409a18:	mov	x1, x27
  409a1c:	ldr	x0, [x0]
  409a20:	bl	40e4b0 <ferror@plt+0xb670>
  409a24:	mov	w0, #0x1                   	// #1
  409a28:	strb	w0, [x27, #84]
  409a2c:	ldr	x0, [sp, #120]
  409a30:	bl	402930 <pthread_cond_signal@plt>
  409a34:	mov	x0, x21
  409a38:	ldp	x19, x20, [sp, #16]
  409a3c:	ldp	x21, x22, [sp, #32]
  409a40:	ldp	x23, x24, [sp, #48]
  409a44:	ldp	x25, x26, [sp, #64]
  409a48:	ldp	x27, x28, [sp, #80]
  409a4c:	ldp	x29, x30, [sp], #144
  409a50:	b	402e00 <pthread_mutex_unlock@plt>
  409a54:	sub	x8, x28, x2
  409a58:	str	x26, [x11]
  409a5c:	b	409698 <ferror@plt+0x6858>
  409a60:	cmp	x1, x0
  409a64:	b.eq	409758 <ferror@plt+0x6918>  // b.none
  409a68:	ldr	x0, [x25, #40]
  409a6c:	cbnz	x0, 409758 <ferror@plt+0x6918>
  409a70:	b	409720 <ferror@plt+0x68e0>
  409a74:	mov	x2, x26
  409a78:	ldr	x1, [x27, #8]
  409a7c:	b	409680 <ferror@plt+0x6840>
  409a80:	sub	x25, x25, x1
  409a84:	str	x26, [x11]
  409a88:	asr	x0, x25, #5
  409a8c:	b	409698 <ferror@plt+0x6858>
  409a90:	ldr	x0, [x25, #48]
  409a94:	cbnz	x0, 409758 <ferror@plt+0x6918>
  409a98:	b	409720 <ferror@plt+0x68e0>
  409a9c:	mov	w12, #0x0                   	// #0
  409aa0:	mov	x0, #0x0                   	// #0
  409aa4:	mov	x7, #0x0                   	// #0
  409aa8:	mov	x8, #0x0                   	// #0
  409aac:	b	4093c0 <ferror@plt+0x6580>
  409ab0:	ldr	x3, [sp, #104]
  409ab4:	mov	x2, x4
  409ab8:	ldrb	w12, [x27, #84]
  409abc:	mov	x9, x0
  409ac0:	sub	x8, x3, x4
  409ac4:	b	409698 <ferror@plt+0x6858>
  409ac8:	ldr	x3, [sp, #104]
  409acc:	mov	x2, x28
  409ad0:	ldrb	w12, [x27, #84]
  409ad4:	sub	x8, x3, x28
  409ad8:	ldr	x10, [x27, #40]
  409adc:	b	409698 <ferror@plt+0x6858>
  409ae0:	ldr	x3, [sp, #104]
  409ae4:	mov	x2, x4
  409ae8:	ldrb	w12, [x27, #84]
  409aec:	sub	x8, x3, x4
  409af0:	ldr	x10, [x27, #40]
  409af4:	b	409698 <ferror@plt+0x6858>
  409af8:	stp	x29, x30, [sp, #-80]!
  409afc:	mov	x29, sp
  409b00:	stp	x19, x20, [sp, #16]
  409b04:	adrp	x19, 42d000 <_obstack_memory_used@@Base+0x176c8>
  409b08:	add	x19, x19, #0x570
  409b0c:	stp	x21, x22, [sp, #32]
  409b10:	mov	x20, x1
  409b14:	mov	x21, x0
  409b18:	ldr	x2, [x19, #1232]
  409b1c:	cbz	x2, 409b38 <ferror@plt+0x6cf8>
  409b20:	bl	407d30 <ferror@plt+0x4ef0>
  409b24:	cbnz	w0, 409b70 <ferror@plt+0x6d30>
  409b28:	ldrb	w1, [x19, #1248]
  409b2c:	cbnz	w1, 409b70 <ferror@plt+0x6d30>
  409b30:	ldrb	w1, [x19, #1249]
  409b34:	cbnz	w1, 409b70 <ferror@plt+0x6d30>
  409b38:	stp	x23, x24, [sp, #48]
  409b3c:	ldr	x22, [x21, #8]
  409b40:	ldr	x24, [x20, #8]
  409b44:	str	x25, [sp, #64]
  409b48:	subs	x25, x22, #0x1
  409b4c:	sub	x23, x24, #0x1
  409b50:	b.ne	409b80 <ferror@plt+0x6d40>  // b.any
  409b54:	cmp	x23, #0x0
  409b58:	csetm	w0, ne  // ne = any
  409b5c:	ldrb	w1, [x19, #1201]
  409b60:	ldp	x23, x24, [sp, #48]
  409b64:	cmp	w1, #0x0
  409b68:	ldr	x25, [sp, #64]
  409b6c:	cneg	w0, w0, ne  // ne = any
  409b70:	ldp	x19, x20, [sp, #16]
  409b74:	ldp	x21, x22, [sp, #32]
  409b78:	ldp	x29, x30, [sp], #80
  409b7c:	ret
  409b80:	mov	w0, #0x1                   	// #1
  409b84:	cbz	x23, 409b5c <ferror@plt+0x6d1c>
  409b88:	ldrb	w2, [x19, #1200]
  409b8c:	ldr	x1, [x20]
  409b90:	ldr	x0, [x21]
  409b94:	cbnz	w2, 409bc0 <ferror@plt+0x6d80>
  409b98:	cmp	x25, x23
  409b9c:	csel	x2, x25, x23, ls  // ls = plast
  409ba0:	bl	402b00 <memcmp@plt>
  409ba4:	cbnz	w0, 409b5c <ferror@plt+0x6d1c>
  409ba8:	cmp	x25, x23
  409bac:	mov	w0, #0xffffffff            	// #-1
  409bb0:	b.cc	409b5c <ferror@plt+0x6d1c>  // b.lo, b.ul, b.last
  409bb4:	cmp	x22, x24
  409bb8:	cset	w0, ne  // ne = any
  409bbc:	b	409b5c <ferror@plt+0x6d1c>
  409bc0:	mov	x2, x1
  409bc4:	mov	x3, x24
  409bc8:	mov	x1, x22
  409bcc:	bl	4144d0 <ferror@plt+0x11690>
  409bd0:	b	409b5c <ferror@plt+0x6d1c>
  409bd4:	nop
  409bd8:	stp	x29, x30, [sp, #-112]!
  409bdc:	cmp	x1, #0x2
  409be0:	mov	x29, sp
  409be4:	stp	x19, x20, [sp, #16]
  409be8:	mov	x19, x2
  409bec:	stp	x21, x22, [sp, #32]
  409bf0:	mov	x21, x0
  409bf4:	stp	x25, x26, [sp, #64]
  409bf8:	and	w25, w3, #0xff
  409bfc:	b.eq	409e20 <ferror@plt+0x6fe0>  // b.none
  409c00:	lsr	x22, x1, #1
  409c04:	stp	x23, x24, [sp, #48]
  409c08:	mov	x24, x1
  409c0c:	stp	x27, x28, [sp, #80]
  409c10:	neg	x20, x22, lsl #5
  409c14:	sub	x23, x1, x22
  409c18:	add	x26, x0, x20
  409c1c:	cbnz	w25, 409ce8 <ferror@plt+0x6ea8>
  409c20:	mov	x1, x23
  409c24:	mov	x0, x26
  409c28:	mov	w3, #0x0                   	// #0
  409c2c:	bl	409bd8 <ferror@plt+0x6d98>
  409c30:	cmp	x24, #0x3
  409c34:	b.hi	409ebc <ferror@plt+0x707c>  // b.pmore
  409c38:	ldp	x2, x3, [x21, #-32]
  409c3c:	mov	x0, x19
  409c40:	stp	x2, x3, [x19, #-32]
  409c44:	mov	x20, x26
  409c48:	ldp	x2, x3, [x21, #-16]
  409c4c:	stp	x2, x3, [x19, #-16]
  409c50:	mov	x19, x21
  409c54:	mov	x21, x0
  409c58:	adrp	x24, 42d000 <_obstack_memory_used@@Base+0x176c8>
  409c5c:	sub	x19, x19, #0x20
  409c60:	sub	x20, x20, #0x20
  409c64:	sub	x25, x21, #0x20
  409c68:	add	x24, x24, #0x570
  409c6c:	nop
  409c70:	ldr	x0, [x24, #1232]
  409c74:	cbz	x0, 409c98 <ferror@plt+0x6e58>
  409c78:	mov	x1, x20
  409c7c:	mov	x0, x25
  409c80:	bl	407d30 <ferror@plt+0x4ef0>
  409c84:	cbnz	w0, 409cbc <ferror@plt+0x6e7c>
  409c88:	ldrb	w0, [x24, #1248]
  409c8c:	cbnz	w0, 409d30 <ferror@plt+0x6ef0>
  409c90:	ldrb	w0, [x24, #1249]
  409c94:	cbnz	w0, 409d30 <ferror@plt+0x6ef0>
  409c98:	ldr	x3, [x20, #8]
  409c9c:	ldr	x27, [x25, #8]
  409ca0:	sub	x26, x3, #0x1
  409ca4:	subs	x28, x27, #0x1
  409ca8:	b.ne	409d20 <ferror@plt+0x6ee0>  // b.any
  409cac:	ldrb	w0, [x24, #1201]
  409cb0:	cbz	w0, 409d30 <ferror@plt+0x6ef0>
  409cb4:	cmp	x26, #0x0
  409cb8:	cset	w0, ne  // ne = any
  409cbc:	cmp	w0, #0x0
  409cc0:	b.le	409d30 <ferror@plt+0x6ef0>
  409cc4:	ldp	x0, x1, [x20]
  409cc8:	stp	x0, x1, [x19]
  409ccc:	subs	x23, x23, #0x1
  409cd0:	ldp	x0, x1, [x20, #16]
  409cd4:	stp	x0, x1, [x19, #16]
  409cd8:	b.eq	409da8 <ferror@plt+0x6f68>  // b.none
  409cdc:	sub	x20, x20, #0x20
  409ce0:	sub	x19, x19, #0x20
  409ce4:	b	409c70 <ferror@plt+0x6e30>
  409ce8:	add	x20, x2, x20
  409cec:	mov	x0, x26
  409cf0:	mov	x2, x20
  409cf4:	mov	x1, x23
  409cf8:	mov	w3, #0x1                   	// #1
  409cfc:	bl	409bd8 <ferror@plt+0x6d98>
  409d00:	cmp	x24, #0x3
  409d04:	b.ls	409c58 <ferror@plt+0x6e18>  // b.plast
  409d08:	mov	x2, x19
  409d0c:	mov	x1, x22
  409d10:	mov	x0, x21
  409d14:	mov	w3, #0x0                   	// #0
  409d18:	bl	409bd8 <ferror@plt+0x6d98>
  409d1c:	b	409c58 <ferror@plt+0x6e18>
  409d20:	cbnz	x26, 409d58 <ferror@plt+0x6f18>
  409d24:	ldrb	w0, [x24, #1201]
  409d28:	cbz	w0, 409cc4 <ferror@plt+0x6e84>
  409d2c:	nop
  409d30:	ldp	x0, x1, [x25]
  409d34:	stp	x0, x1, [x19]
  409d38:	subs	x22, x22, #0x1
  409d3c:	ldp	x0, x1, [x25, #16]
  409d40:	stp	x0, x1, [x19, #16]
  409d44:	b.eq	409dd4 <ferror@plt+0x6f94>  // b.none
  409d48:	mov	x21, x25
  409d4c:	sub	x19, x19, #0x20
  409d50:	sub	x25, x25, #0x20
  409d54:	b	409c70 <ferror@plt+0x6e30>
  409d58:	ldrb	w2, [x24, #1200]
  409d5c:	ldr	x1, [x20]
  409d60:	ldr	x0, [x25]
  409d64:	cbnz	w2, 409e04 <ferror@plt+0x6fc4>
  409d68:	cmp	x28, x26
  409d6c:	str	x3, [sp, #104]
  409d70:	csel	x2, x28, x26, ls  // ls = plast
  409d74:	bl	402b00 <memcmp@plt>
  409d78:	ldrb	w1, [x24, #1201]
  409d7c:	cbnz	w0, 409df8 <ferror@plt+0x6fb8>
  409d80:	cmp	x28, x26
  409d84:	ldr	x3, [sp, #104]
  409d88:	b.cs	409df0 <ferror@plt+0x6fb0>  // b.hs, b.nlast
  409d8c:	cbz	w1, 409d30 <ferror@plt+0x6ef0>
  409d90:	ldp	x0, x1, [x20]
  409d94:	stp	x0, x1, [x19]
  409d98:	subs	x23, x23, #0x1
  409d9c:	ldp	x0, x1, [x20, #16]
  409da0:	stp	x0, x1, [x19, #16]
  409da4:	b.ne	409cdc <ferror@plt+0x6e9c>  // b.any
  409da8:	mov	x0, #0xffffffffffffffe0    	// #-32
  409dac:	nop
  409db0:	add	x2, x21, x0
  409db4:	add	x1, x19, x0
  409db8:	subs	x22, x22, #0x1
  409dbc:	sub	x0, x0, #0x20
  409dc0:	ldp	x4, x5, [x2]
  409dc4:	stp	x4, x5, [x1]
  409dc8:	ldp	x2, x3, [x2, #16]
  409dcc:	stp	x2, x3, [x1, #16]
  409dd0:	b.ne	409db0 <ferror@plt+0x6f70>  // b.any
  409dd4:	ldp	x23, x24, [sp, #48]
  409dd8:	ldp	x27, x28, [sp, #80]
  409ddc:	ldp	x19, x20, [sp, #16]
  409de0:	ldp	x21, x22, [sp, #32]
  409de4:	ldp	x25, x26, [sp, #64]
  409de8:	ldp	x29, x30, [sp], #112
  409dec:	ret
  409df0:	cmp	x27, x3
  409df4:	cset	w0, ne  // ne = any
  409df8:	cmp	w1, #0x0
  409dfc:	cneg	w0, w0, ne  // ne = any
  409e00:	b	409cbc <ferror@plt+0x6e7c>
  409e04:	mov	x2, x1
  409e08:	mov	x1, x27
  409e0c:	bl	4144d0 <ferror@plt+0x11690>
  409e10:	ldrb	w1, [x24, #1201]
  409e14:	cmp	w1, #0x0
  409e18:	cneg	w0, w0, ne  // ne = any
  409e1c:	b	409cbc <ferror@plt+0x6e7c>
  409e20:	sub	x20, x0, #0x40
  409e24:	sub	x22, x0, #0x20
  409e28:	mov	x1, x20
  409e2c:	mov	x0, x22
  409e30:	bl	409af8 <ferror@plt+0x6cb8>
  409e34:	cmp	w0, #0x0
  409e38:	cbnz	w25, 409e6c <ferror@plt+0x702c>
  409e3c:	b.le	409ddc <ferror@plt+0x6f9c>
  409e40:	ldp	x0, x1, [x20]
  409e44:	ldp	x2, x3, [x22]
  409e48:	stp	x0, x1, [x22]
  409e4c:	ldp	x4, x5, [x20, #16]
  409e50:	stp	x2, x3, [x19, #-32]
  409e54:	ldp	x0, x1, [x22, #16]
  409e58:	stp	x4, x5, [x22, #16]
  409e5c:	stp	x0, x1, [x19, #-16]
  409e60:	stp	x2, x3, [x20]
  409e64:	stp	x0, x1, [x20, #16]
  409e68:	b	409ddc <ferror@plt+0x6f9c>
  409e6c:	cset	w0, gt
  409e70:	mvn	w1, w0
  409e74:	sub	w0, w0, #0x2
  409e78:	ldp	x25, x26, [sp, #64]
  409e7c:	sbfiz	x1, x1, #5, #32
  409e80:	add	x1, x21, x1
  409e84:	sbfiz	x0, x0, #5, #32
  409e88:	add	x21, x21, x0
  409e8c:	ldp	x2, x3, [x1]
  409e90:	stp	x2, x3, [x19, #-32]
  409e94:	ldp	x0, x1, [x1, #16]
  409e98:	stp	x0, x1, [x19, #-16]
  409e9c:	ldp	x2, x3, [x21]
  409ea0:	stp	x2, x3, [x19, #-64]
  409ea4:	ldp	x0, x1, [x21, #16]
  409ea8:	stp	x0, x1, [x19, #-48]
  409eac:	ldp	x19, x20, [sp, #16]
  409eb0:	ldp	x21, x22, [sp, #32]
  409eb4:	ldp	x29, x30, [sp], #112
  409eb8:	ret
  409ebc:	mov	x0, x21
  409ec0:	mov	x2, x19
  409ec4:	mov	x1, x22
  409ec8:	mov	w3, #0x1                   	// #1
  409ecc:	bl	409bd8 <ferror@plt+0x6d98>
  409ed0:	mov	x20, x26
  409ed4:	mov	x0, x19
  409ed8:	mov	x19, x21
  409edc:	mov	x21, x0
  409ee0:	b	409c58 <ferror@plt+0x6e18>
  409ee4:	nop
  409ee8:	stp	x29, x30, [sp, #-176]!
  409eec:	mov	x29, sp
  409ef0:	stp	x21, x22, [sp, #32]
  409ef4:	mov	x22, x4
  409ef8:	stp	x27, x28, [sp, #80]
  409efc:	lsr	x27, x1, #1
  409f00:	ldp	x28, x21, [x3, #40]
  409f04:	stp	x19, x20, [sp, #16]
  409f08:	mov	x20, x0
  409f0c:	ldr	x0, [x3, #64]
  409f10:	stp	x23, x24, [sp, #48]
  409f14:	mov	x23, x2
  409f18:	add	x2, x28, x21
  409f1c:	stp	x25, x26, [sp, #64]
  409f20:	mov	x24, x1
  409f24:	stp	x20, x27, [sp, #120]
  409f28:	mov	x1, #0x1ffff               	// #131071
  409f2c:	cmp	x2, x1
  409f30:	stp	x23, x0, [sp, #136]
  409f34:	mov	x19, x3
  409f38:	mov	x25, x5
  409f3c:	stp	x4, x5, [sp, #152]
  409f40:	mov	x26, x6
  409f44:	ccmp	x24, #0x1, #0x0, hi  // hi = pmore
  409f48:	str	x6, [sp, #168]
  409f4c:	b.hi	40a014 <ferror@plt+0x71d4>  // b.pmore
  409f50:	neg	x24, x28, lsl #5
  409f54:	cmp	x21, #0x1
  409f58:	add	x27, x20, x24
  409f5c:	sub	x4, x20, x23, lsl #5
  409f60:	b.ls	409f84 <ferror@plt+0x7144>  // b.plast
  409f64:	lsr	x2, x28, #1
  409f68:	mov	x1, x21
  409f6c:	mov	x0, x27
  409f70:	mov	w3, #0x0                   	// #0
  409f74:	sub	x2, x4, x2, lsl #5
  409f78:	str	x4, [sp, #104]
  409f7c:	bl	409bd8 <ferror@plt+0x6d98>
  409f80:	ldr	x4, [sp, #104]
  409f84:	cmp	x28, #0x1
  409f88:	b.ls	409fa0 <ferror@plt+0x7160>  // b.plast
  409f8c:	mov	x2, x4
  409f90:	mov	x1, x28
  409f94:	mov	x0, x20
  409f98:	mov	w3, #0x0                   	// #0
  409f9c:	bl	409bd8 <ferror@plt+0x6d98>
  409fa0:	sub	x21, x24, x21, lsl #5
  409fa4:	mov	x24, x22
  409fa8:	add	x21, x20, x21
  409fac:	stp	x20, x27, [x19]
  409fb0:	add	x20, x22, #0x8
  409fb4:	stp	x27, x21, [x19, #16]
  409fb8:	mov	x0, x20
  409fbc:	bl	402df0 <pthread_mutex_lock@plt>
  409fc0:	ldr	x0, [x24], #56
  409fc4:	mov	x1, x19
  409fc8:	bl	40e4b0 <ferror@plt+0xb670>
  409fcc:	mov	w0, #0x1                   	// #1
  409fd0:	strb	w0, [x19, #84]
  409fd4:	mov	x0, x24
  409fd8:	bl	402930 <pthread_cond_signal@plt>
  409fdc:	mov	x0, x20
  409fe0:	bl	402e00 <pthread_mutex_unlock@plt>
  409fe4:	mov	x3, x26
  409fe8:	mov	x2, x25
  409fec:	mov	x1, x23
  409ff0:	mov	x0, x22
  409ff4:	bl	409218 <ferror@plt+0x63d8>
  409ff8:	ldp	x19, x20, [sp, #16]
  409ffc:	ldp	x21, x22, [sp, #32]
  40a000:	ldp	x23, x24, [sp, #48]
  40a004:	ldp	x25, x26, [sp, #64]
  40a008:	ldp	x27, x28, [sp, #80]
  40a00c:	ldp	x29, x30, [sp], #176
  40a010:	ret
  40a014:	adrp	x2, 40a000 <ferror@plt+0x71c0>
  40a018:	add	x3, sp, #0x78
  40a01c:	add	x2, x2, #0xe90
  40a020:	add	x0, sp, #0x70
  40a024:	mov	x1, #0x0                   	// #0
  40a028:	bl	402a40 <pthread_create@plt>
  40a02c:	cbz	w0, 40a038 <ferror@plt+0x71f8>
  40a030:	ldp	x28, x21, [x19, #40]
  40a034:	b	409f50 <ferror@plt+0x7110>
  40a038:	ldr	x0, [x19, #40]
  40a03c:	mov	x6, x26
  40a040:	ldr	x3, [x19, #72]
  40a044:	mov	x5, x25
  40a048:	mov	x4, x22
  40a04c:	mov	x2, x23
  40a050:	sub	x1, x24, x27
  40a054:	sub	x0, x20, x0, lsl #5
  40a058:	bl	409ee8 <ferror@plt+0x70a8>
  40a05c:	ldr	x0, [sp, #112]
  40a060:	mov	x1, #0x0                   	// #0
  40a064:	bl	402a70 <pthread_join@plt>
  40a068:	ldp	x19, x20, [sp, #16]
  40a06c:	ldp	x21, x22, [sp, #32]
  40a070:	ldp	x23, x24, [sp, #48]
  40a074:	ldp	x25, x26, [sp, #64]
  40a078:	ldp	x27, x28, [sp, #80]
  40a07c:	ldp	x29, x30, [sp], #176
  40a080:	ret
  40a084:	nop
  40a088:	stp	x29, x30, [sp, #-272]!
  40a08c:	mov	x6, #0x38                  	// #56
  40a090:	mov	x29, sp
  40a094:	stp	x21, x22, [sp, #32]
  40a098:	mov	x22, x2
  40a09c:	umulh	x2, x2, x6
  40a0a0:	stp	x19, x20, [sp, #16]
  40a0a4:	mul	x6, x22, x6
  40a0a8:	cmp	x2, #0x0
  40a0ac:	stp	x0, x5, [sp, #112]
  40a0b0:	cset	x0, ne  // ne = any
  40a0b4:	stp	x3, x4, [sp, #168]
  40a0b8:	str	x1, [sp, #184]
  40a0bc:	tbnz	x6, #63, 40a878 <ferror@plt+0x7a38>
  40a0c0:	cbnz	x0, 40a878 <ferror@plt+0x7a38>
  40a0c4:	lsl	x19, x22, #3
  40a0c8:	sub	x0, x19, x22
  40a0cc:	lsl	x0, x0, #3
  40a0d0:	bl	414158 <ferror@plt+0x11318>
  40a0d4:	cmp	xzr, x22, lsr #61
  40a0d8:	str	x0, [sp, #104]
  40a0dc:	cset	x0, ne  // ne = any
  40a0e0:	tbnz	x19, #63, 40a878 <ferror@plt+0x7a38>
  40a0e4:	cbnz	x0, 40a878 <ferror@plt+0x7a38>
  40a0e8:	mov	x0, x19
  40a0ec:	adrp	x20, 42d000 <_obstack_memory_used@@Base+0x176c8>
  40a0f0:	add	x20, x20, #0x570
  40a0f4:	stp	x23, x24, [sp, #48]
  40a0f8:	bl	414158 <ferror@plt+0x11318>
  40a0fc:	mov	x21, x0
  40a100:	mov	x0, x19
  40a104:	bl	414158 <ferror@plt+0x11318>
  40a108:	mov	x24, x0
  40a10c:	mov	x0, x19
  40a110:	str	x24, [sp, #128]
  40a114:	bl	414158 <ferror@plt+0x11318>
  40a118:	mov	x19, x0
  40a11c:	ldr	x0, [x20, #1232]
  40a120:	str	x0, [sp, #200]
  40a124:	str	xzr, [sp, #240]
  40a128:	cbz	x22, 40a2b0 <ferror@plt+0x7470>
  40a12c:	ldr	x0, [sp, #112]
  40a130:	stp	x25, x26, [sp, #64]
  40a134:	mov	x26, #0x0                   	// #0
  40a138:	sub	x0, x0, #0x10
  40a13c:	stp	x19, x0, [sp, #144]
  40a140:	mov	x19, x26
  40a144:	stp	x27, x28, [sp, #80]
  40a148:	adrp	x28, 42d000 <_obstack_memory_used@@Base+0x176c8>
  40a14c:	add	x0, x28, #0x3b0
  40a150:	str	x0, [sp, #136]
  40a154:	nop
  40a158:	ldr	x23, [x20, #1576]
  40a15c:	sub	x24, x19, x26
  40a160:	ldr	x0, [sp, #136]
  40a164:	udiv	x23, x23, x22
  40a168:	ldr	x1, [sp, #104]
  40a16c:	ldr	x0, [x0, #232]
  40a170:	add	x27, x1, x24, lsl #3
  40a174:	cmp	x23, x0
  40a178:	csel	x23, x23, x0, cs  // cs = hs, nlast
  40a17c:	and	x23, x23, #0xffffffffffffffe0
  40a180:	add	x23, x23, #0x20
  40a184:	mov	x0, x23
  40a188:	bl	4028e0 <malloc@plt>
  40a18c:	str	x0, [x27]
  40a190:	cbz	x0, 40a868 <ferror@plt+0x7a28>
  40a194:	ldp	x2, x3, [sp, #112]
  40a198:	lsl	x25, x26, #4
  40a19c:	stp	xzr, xzr, [x27, #8]
  40a1a0:	mov	x0, x27
  40a1a4:	stp	x23, xzr, [x27, #24]
  40a1a8:	add	x28, x2, x25
  40a1ac:	add	x23, x3, x19
  40a1b0:	ldr	x1, [x3, x19]
  40a1b4:	mov	x3, #0x20                  	// #32
  40a1b8:	ldr	x2, [x2, x25]
  40a1bc:	str	x3, [x27, #40]
  40a1c0:	strb	wzr, [x27, #48]
  40a1c4:	bl	407728 <ferror@plt+0x48e8>
  40a1c8:	tst	w0, #0xff
  40a1cc:	b.eq	40a208 <ferror@plt+0x73c8>  // b.none
  40a1d0:	ldr	x0, [sp, #104]
  40a1d4:	add	x26, x26, #0x1
  40a1d8:	ldp	x1, x2, [x27, #16]
  40a1dc:	cmp	x26, x22
  40a1e0:	ldr	x0, [x0, x24, lsl #3]
  40a1e4:	add	x0, x0, x2
  40a1e8:	ldr	x2, [sp, #128]
  40a1ec:	sub	x1, x0, x1, lsl #5
  40a1f0:	sub	x0, x0, #0x20
  40a1f4:	str	x0, [x21, x19]
  40a1f8:	str	x1, [x2, x19]
  40a1fc:	b.cs	40a2f0 <ferror@plt+0x74b0>  // b.hs, b.nlast
  40a200:	lsl	x19, x26, #3
  40a204:	b	40a158 <ferror@plt+0x7318>
  40a208:	ldr	x0, [sp, #112]
  40a20c:	ldr	x1, [x0, x25]
  40a210:	ldr	x0, [sp, #120]
  40a214:	ldr	x0, [x0, x19]
  40a218:	bl	4063f0 <ferror@plt+0x35b0>
  40a21c:	ldr	x0, [sp, #184]
  40a220:	cmp	x26, x0
  40a224:	b.cc	40a768 <ferror@plt+0x7928>  // b.lo, b.ul, b.last
  40a228:	ldr	x0, [sp, #104]
  40a22c:	ldr	x0, [x0, x24, lsl #3]
  40a230:	sub	x24, x22, #0x1
  40a234:	bl	402ba0 <free@plt>
  40a238:	cmp	x24, x26
  40a23c:	b.ls	40a794 <ferror@plt+0x7954>  // b.plast
  40a240:	ldp	x2, x27, [sp, #112]
  40a244:	lsl	x22, x22, #4
  40a248:	add	x0, x27, x24, lsl #3
  40a24c:	add	x1, x2, x22
  40a250:	cmp	x28, x0
  40a254:	ccmp	x23, x1, #0x2, cc  // cc = lo, ul, last
  40a258:	b.cc	40a83c <ferror@plt+0x79fc>  // b.lo, b.ul, b.last
  40a25c:	sub	x22, x24, x26
  40a260:	add	x1, x25, #0x10
  40a264:	add	x1, x2, x1
  40a268:	mov	x0, x28
  40a26c:	lsl	x2, x22, #4
  40a270:	bl	402730 <memmove@plt>
  40a274:	add	x1, x19, #0x8
  40a278:	lsl	x2, x22, #3
  40a27c:	mov	x0, x23
  40a280:	add	x1, x27, x1
  40a284:	mov	x22, x24
  40a288:	bl	402730 <memmove@plt>
  40a28c:	b	40a158 <ferror@plt+0x7318>
  40a290:	ldr	x0, [sp, #144]
  40a294:	cmp	x0, #0x0
  40a298:	ldrb	w0, [x20, #1248]
  40a29c:	cset	w1, ne  // ne = any
  40a2a0:	tst	w1, w0
  40a2a4:	b.ne	40a7a0 <ferror@plt+0x7960>  // b.any
  40a2a8:	ldp	x25, x26, [sp, #64]
  40a2ac:	ldp	x27, x28, [sp, #80]
  40a2b0:	ldp	x0, x1, [sp, #168]
  40a2b4:	bl	4063f0 <ferror@plt+0x35b0>
  40a2b8:	ldr	x0, [sp, #120]
  40a2bc:	bl	402ba0 <free@plt>
  40a2c0:	ldr	x0, [sp, #104]
  40a2c4:	bl	402ba0 <free@plt>
  40a2c8:	mov	x0, x19
  40a2cc:	bl	402ba0 <free@plt>
  40a2d0:	ldr	x0, [sp, #128]
  40a2d4:	bl	402ba0 <free@plt>
  40a2d8:	mov	x0, x21
  40a2dc:	ldp	x19, x20, [sp, #16]
  40a2e0:	ldp	x21, x22, [sp, #32]
  40a2e4:	ldp	x23, x24, [sp, #48]
  40a2e8:	ldp	x29, x30, [sp], #272
  40a2ec:	b	402ba0 <free@plt>
  40a2f0:	ldr	x19, [sp, #144]
  40a2f4:	cbz	x22, 40a2a8 <ferror@plt+0x7468>
  40a2f8:	mov	x0, #0x0                   	// #0
  40a2fc:	nop
  40a300:	str	x0, [x19, x0, lsl #3]
  40a304:	add	x0, x0, #0x1
  40a308:	cmp	x0, x22
  40a30c:	b.ne	40a300 <ferror@plt+0x74c0>  // b.any
  40a310:	cmp	x22, #0x1
  40a314:	b.eq	40a360 <ferror@plt+0x7520>  // b.none
  40a318:	mov	x26, #0x1                   	// #1
  40a31c:	nop
  40a320:	lsl	x23, x26, #3
  40a324:	sub	x23, x23, #0x8
  40a328:	ldr	x25, [x19, x26, lsl #3]
  40a32c:	ldr	x24, [x19, x23]
  40a330:	ldr	x1, [x21, x25, lsl #3]
  40a334:	ldr	x0, [x21, x24, lsl #3]
  40a338:	bl	409af8 <ferror@plt+0x6cb8>
  40a33c:	cmp	w0, #0x0
  40a340:	b.le	40a354 <ferror@plt+0x7514>
  40a344:	str	x25, [x19, x23]
  40a348:	str	x24, [x19, x26, lsl #3]
  40a34c:	mov	x26, #0x1                   	// #1
  40a350:	b	40a320 <ferror@plt+0x74e0>
  40a354:	add	x26, x26, #0x1
  40a358:	cmp	x26, x22
  40a35c:	b.cc	40a320 <ferror@plt+0x74e0>  // b.lo, b.ul, b.last
  40a360:	ldr	x0, [sp, #120]
  40a364:	str	xzr, [sp, #144]
  40a368:	str	xzr, [sp, #192]
  40a36c:	sub	x0, x0, #0x8
  40a370:	str	x0, [sp, #208]
  40a374:	ldr	x0, [sp, #104]
  40a378:	add	x0, x0, #0x38
  40a37c:	str	x0, [sp, #216]
  40a380:	sub	x0, x21, #0x8
  40a384:	str	x0, [sp, #224]
  40a388:	ldr	x0, [sp, #128]
  40a38c:	sub	x0, x0, #0x8
  40a390:	str	x0, [sp, #232]
  40a394:	ldr	x23, [x19]
  40a398:	ldrb	w0, [x20, #1248]
  40a39c:	lsl	x24, x23, #3
  40a3a0:	add	x26, x21, x24
  40a3a4:	ldr	x27, [x21, x23, lsl #3]
  40a3a8:	cbz	w0, 40a4fc <ferror@plt+0x76bc>
  40a3ac:	ldr	x0, [sp, #144]
  40a3b0:	cbz	x0, 40a55c <ferror@plt+0x771c>
  40a3b4:	mov	x1, x27
  40a3b8:	bl	409af8 <ferror@plt+0x6cb8>
  40a3bc:	cbnz	w0, 40a550 <ferror@plt+0x7710>
  40a3c0:	ldr	x1, [sp, #128]
  40a3c4:	add	x7, x1, x24
  40a3c8:	ldr	x0, [x1, x24]
  40a3cc:	cmp	x0, x27
  40a3d0:	b.cc	40a51c <ferror@plt+0x76dc>  // b.lo, b.ul, b.last
  40a3d4:	ldp	x0, x4, [sp, #104]
  40a3d8:	lsl	x28, x23, #4
  40a3dc:	ldr	x3, [sp, #120]
  40a3e0:	sub	x27, x24, x23
  40a3e4:	add	x25, x3, x24
  40a3e8:	ldr	x2, [x4, x28]
  40a3ec:	add	x5, x0, x27, lsl #3
  40a3f0:	ldr	x1, [x3, x24]
  40a3f4:	add	x4, x4, x28
  40a3f8:	mov	x0, x5
  40a3fc:	str	x5, [sp, #136]
  40a400:	stp	x7, x4, [sp, #152]
  40a404:	bl	407728 <ferror@plt+0x48e8>
  40a408:	tst	w0, #0xff
  40a40c:	ldr	x5, [sp, #136]
  40a410:	ldr	x7, [sp, #152]
  40a414:	b.eq	40a5ec <ferror@plt+0x77ac>  // b.none
  40a418:	ldr	x0, [sp, #104]
  40a41c:	cmp	x22, #0x1
  40a420:	ldr	x1, [x5, #24]
  40a424:	mov	x24, x22
  40a428:	ldr	x27, [x0, x27, lsl #3]
  40a42c:	ldr	x0, [x5, #16]
  40a430:	add	x27, x27, x1
  40a434:	sub	x0, x27, x0, lsl #5
  40a438:	sub	x27, x27, #0x20
  40a43c:	str	x0, [x7]
  40a440:	str	x27, [x26]
  40a444:	mov	x26, #0x1                   	// #1
  40a448:	mov	x28, x26
  40a44c:	b.eq	40a538 <ferror@plt+0x76f8>  // b.none
  40a450:	str	x22, [sp, #136]
  40a454:	nop
  40a458:	ldr	x25, [x19, x26, lsl #3]
  40a45c:	ldr	x0, [x20, #1232]
  40a460:	ldr	x22, [x21, x25, lsl #3]
  40a464:	cbz	x0, 40a48c <ferror@plt+0x764c>
  40a468:	mov	x1, x22
  40a46c:	mov	x0, x27
  40a470:	bl	407d30 <ferror@plt+0x4ef0>
  40a474:	cmp	w0, #0x0
  40a478:	cbnz	w0, 40a540 <ferror@plt+0x7700>
  40a47c:	ldrb	w0, [x20, #1248]
  40a480:	cbnz	w0, 40a4a4 <ferror@plt+0x7664>
  40a484:	ldrb	w0, [x20, #1249]
  40a488:	cbnz	w0, 40a4a4 <ferror@plt+0x7664>
  40a48c:	mov	x1, x22
  40a490:	mov	x0, x27
  40a494:	bl	406488 <ferror@plt+0x3648>
  40a498:	cmp	w0, #0x0
  40a49c:	b.lt	40a548 <ferror@plt+0x7708>  // b.tstop
  40a4a0:	cset	w0, eq  // eq = none
  40a4a4:	cmp	w0, #0x0
  40a4a8:	ccmp	x23, x25, #0x2, ne  // ne = any
  40a4ac:	b.cc	40a548 <ferror@plt+0x7708>  // b.lo, b.ul, b.last
  40a4b0:	add	x28, x26, #0x1
  40a4b4:	add	x26, x28, x24
  40a4b8:	cmp	x28, x24
  40a4bc:	lsr	x26, x26, #1
  40a4c0:	b.cc	40a458 <ferror@plt+0x7618>  // b.lo, b.ul, b.last
  40a4c4:	sub	x28, x28, #0x1
  40a4c8:	ldr	x22, [sp, #136]
  40a4cc:	lsl	x2, x28, #3
  40a4d0:	cbz	x28, 40a4e0 <ferror@plt+0x76a0>
  40a4d4:	add	x1, x19, #0x8
  40a4d8:	mov	x0, x19
  40a4dc:	bl	402730 <memmove@plt>
  40a4e0:	str	x23, [x19, x28, lsl #3]
  40a4e4:	ldrb	w0, [x20, #1248]
  40a4e8:	ldr	x23, [x19]
  40a4ec:	lsl	x24, x23, #3
  40a4f0:	add	x26, x21, x24
  40a4f4:	ldr	x27, [x21, x23, lsl #3]
  40a4f8:	cbnz	w0, 40a3ac <ferror@plt+0x756c>
  40a4fc:	ldp	x1, x2, [sp, #168]
  40a500:	mov	x0, x27
  40a504:	bl	406a98 <ferror@plt+0x3c58>
  40a508:	ldr	x1, [sp, #128]
  40a50c:	add	x7, x1, x24
  40a510:	ldr	x0, [x1, x24]
  40a514:	cmp	x0, x27
  40a518:	b.cs	40a3d4 <ferror@plt+0x7594>  // b.hs, b.nlast
  40a51c:	sub	x27, x27, #0x20
  40a520:	str	x27, [x26]
  40a524:	cmp	x22, #0x1
  40a528:	mov	x26, #0x1                   	// #1
  40a52c:	mov	x24, x22
  40a530:	mov	x28, x26
  40a534:	b.ne	40a450 <ferror@plt+0x7610>  // b.any
  40a538:	str	x23, [x19]
  40a53c:	b	40a394 <ferror@plt+0x7554>
  40a540:	b.ge	40a4b0 <ferror@plt+0x7670>  // b.tcont
  40a544:	nop
  40a548:	mov	x24, x26
  40a54c:	b	40a4b4 <ferror@plt+0x7674>
  40a550:	ldp	x1, x2, [sp, #168]
  40a554:	add	x0, sp, #0xf0
  40a558:	bl	406a98 <ferror@plt+0x3c58>
  40a55c:	ldr	x28, [x27, #8]
  40a560:	ldr	x1, [sp, #192]
  40a564:	ldr	x0, [sp, #240]
  40a568:	cmp	x28, x1
  40a56c:	b.hi	40a5bc <ferror@plt+0x777c>  // b.pmore
  40a570:	ldr	x1, [x27]
  40a574:	add	x3, sp, #0xf0
  40a578:	mov	x2, x28
  40a57c:	str	x3, [sp, #144]
  40a580:	str	x28, [sp, #248]
  40a584:	bl	402720 <memcpy@plt>
  40a588:	ldr	x0, [sp, #200]
  40a58c:	cbz	x0, 40a3c0 <ferror@plt+0x7580>
  40a590:	ldr	q0, [x27]
  40a594:	add	x0, sp, #0xf0
  40a598:	ldr	d1, [sp, #240]
  40a59c:	str	x0, [sp, #144]
  40a5a0:	dup	v2.2d, v0.d[0]
  40a5a4:	ldr	q0, [x27, #16]
  40a5a8:	dup	v1.2d, v1.d[0]
  40a5ac:	sub	v0.2d, v0.2d, v2.2d
  40a5b0:	add	v0.2d, v0.2d, v1.2d
  40a5b4:	str	q0, [sp, #256]
  40a5b8:	b	40a3c0 <ferror@plt+0x7580>
  40a5bc:	cbz	x1, 40a5d0 <ferror@plt+0x7790>
  40a5c0:	lsl	x1, x1, #1
  40a5c4:	cmp	x28, x1
  40a5c8:	b.hi	40a5bc <ferror@plt+0x777c>  // b.pmore
  40a5cc:	mov	x28, x1
  40a5d0:	str	x28, [sp, #192]
  40a5d4:	bl	402ba0 <free@plt>
  40a5d8:	mov	x0, x28
  40a5dc:	bl	414158 <ferror@plt+0x11318>
  40a5e0:	str	x0, [sp, #240]
  40a5e4:	ldr	x28, [x27, #8]
  40a5e8:	b	40a570 <ferror@plt+0x7730>
  40a5ec:	cmp	x22, #0x1
  40a5f0:	mov	x0, #0x1                   	// #1
  40a5f4:	b.eq	40a644 <ferror@plt+0x7804>  // b.none
  40a5f8:	ldr	x1, [x19, x0, lsl #3]
  40a5fc:	cmp	x1, x23
  40a600:	b.ls	40a610 <ferror@plt+0x77d0>  // b.plast
  40a604:	sub	x1, x1, #0x1
  40a608:	str	x1, [x19, x0, lsl #3]
  40a60c:	ldr	x23, [x19]
  40a610:	add	x0, x0, #0x1
  40a614:	cmp	x0, x22
  40a618:	b.ne	40a5f8 <ferror@plt+0x77b8>  // b.any
  40a61c:	ldr	x0, [sp, #120]
  40a620:	lsl	x24, x23, #3
  40a624:	lsl	x28, x23, #4
  40a628:	sub	x5, x24, x23
  40a62c:	add	x25, x0, x24
  40a630:	ldr	x0, [sp, #112]
  40a634:	add	x0, x0, x28
  40a638:	str	x0, [sp, #160]
  40a63c:	ldr	x0, [sp, #104]
  40a640:	add	x5, x0, x5, lsl #3
  40a644:	ldr	x1, [sp, #160]
  40a648:	str	x5, [sp, #136]
  40a64c:	ldr	x0, [x25]
  40a650:	sub	x26, x22, #0x1
  40a654:	ldr	x1, [x1]
  40a658:	bl	4063f0 <ferror@plt+0x35b0>
  40a65c:	ldr	x0, [sp, #184]
  40a660:	ldr	x5, [sp, #136]
  40a664:	cmp	x0, x23
  40a668:	b.hi	40a74c <ferror@plt+0x790c>  // b.pmore
  40a66c:	ldr	x0, [x5]
  40a670:	bl	402ba0 <free@plt>
  40a674:	cmp	x26, x23
  40a678:	b.ls	40a730 <ferror@plt+0x78f0>  // b.plast
  40a67c:	ldp	x3, x2, [sp, #112]
  40a680:	add	x1, x3, x26, lsl #4
  40a684:	add	x0, x2, x24
  40a688:	cmp	x0, x1
  40a68c:	add	x27, x3, x28
  40a690:	add	x1, x2, x22, lsl #3
  40a694:	ccmp	x27, x1, #0x2, cc  // cc = lo, ul, last
  40a698:	b.cc	40a7c0 <ferror@plt+0x7980>  // b.lo, b.ul, b.last
  40a69c:	sub	x6, x26, x23
  40a6a0:	add	x25, x24, #0x8
  40a6a4:	add	x1, x2, x25
  40a6a8:	str	x6, [sp, #152]
  40a6ac:	lsl	x5, x6, #3
  40a6b0:	str	x5, [sp, #136]
  40a6b4:	mov	x2, x5
  40a6b8:	sub	x22, x22, x23
  40a6bc:	bl	402730 <memmove@plt>
  40a6c0:	ldr	x3, [sp, #112]
  40a6c4:	add	x1, x28, #0x10
  40a6c8:	ldr	x6, [sp, #152]
  40a6cc:	add	x1, x3, x1
  40a6d0:	mov	x0, x27
  40a6d4:	lsl	x2, x6, #4
  40a6d8:	bl	402730 <memmove@plt>
  40a6dc:	sub	x0, x24, x23
  40a6e0:	lsl	x2, x22, #3
  40a6e4:	ldr	x3, [sp, #104]
  40a6e8:	sub	x2, x2, x22
  40a6ec:	lsl	x0, x0, #3
  40a6f0:	add	x1, x0, #0x38
  40a6f4:	lsl	x2, x2, #3
  40a6f8:	add	x1, x3, x1
  40a6fc:	sub	x2, x2, #0x38
  40a700:	add	x0, x3, x0
  40a704:	bl	402730 <memmove@plt>
  40a708:	ldr	x5, [sp, #136]
  40a70c:	add	x1, x21, x25
  40a710:	add	x0, x21, x24
  40a714:	mov	x2, x5
  40a718:	bl	402730 <memmove@plt>
  40a71c:	ldp	x0, x5, [sp, #128]
  40a720:	add	x1, x0, x25
  40a724:	mov	x2, x5
  40a728:	add	x0, x0, x24
  40a72c:	bl	402730 <memmove@plt>
  40a730:	cbz	x26, 40a290 <ferror@plt+0x7450>
  40a734:	lsl	x2, x26, #3
  40a738:	mov	x22, x26
  40a73c:	add	x1, x19, #0x8
  40a740:	mov	x0, x19
  40a744:	bl	402730 <memmove@plt>
  40a748:	b	40a394 <ferror@plt+0x7554>
  40a74c:	sub	x1, x0, #0x1
  40a750:	str	x1, [sp, #184]
  40a754:	ldr	x0, [sp, #160]
  40a758:	ldr	x0, [x0]
  40a75c:	bl	4075e0 <ferror@plt+0x47a0>
  40a760:	ldr	x5, [sp, #136]
  40a764:	b	40a66c <ferror@plt+0x782c>
  40a768:	sub	x1, x0, #0x1
  40a76c:	str	x1, [sp, #184]
  40a770:	ldr	x0, [sp, #112]
  40a774:	ldr	x0, [x0, x25]
  40a778:	bl	4075e0 <ferror@plt+0x47a0>
  40a77c:	ldr	x0, [sp, #104]
  40a780:	ldr	x0, [x0, x24, lsl #3]
  40a784:	sub	x24, x22, #0x1
  40a788:	bl	402ba0 <free@plt>
  40a78c:	cmp	x24, x26
  40a790:	b.hi	40a240 <ferror@plt+0x7400>  // b.pmore
  40a794:	mov	x22, x24
  40a798:	ldr	x19, [sp, #144]
  40a79c:	b	40a2f4 <ferror@plt+0x74b4>
  40a7a0:	ldp	x1, x2, [sp, #168]
  40a7a4:	add	x0, sp, #0xf0
  40a7a8:	bl	406a98 <ferror@plt+0x3c58>
  40a7ac:	ldr	x0, [sp, #240]
  40a7b0:	bl	402ba0 <free@plt>
  40a7b4:	ldp	x25, x26, [sp, #64]
  40a7b8:	ldp	x27, x28, [sp, #80]
  40a7bc:	b	40a2b0 <ferror@plt+0x7470>
  40a7c0:	ldp	x9, x10, [sp, #208]
  40a7c4:	sub	x0, x24, x23
  40a7c8:	ldp	x11, x12, [sp, #224]
  40a7cc:	mov	x8, x2
  40a7d0:	ldr	x7, [sp, #104]
  40a7d4:	lsl	x0, x0, #3
  40a7d8:	ldr	x6, [sp, #128]
  40a7dc:	nop
  40a7e0:	add	x2, x10, x0
  40a7e4:	add	x1, x7, x0
  40a7e8:	add	x23, x23, #0x1
  40a7ec:	add	x0, x0, #0x38
  40a7f0:	cmp	x26, x23
  40a7f4:	ldp	x4, x5, [x2]
  40a7f8:	stp	x4, x5, [x1]
  40a7fc:	ldp	x4, x5, [x2, #16]
  40a800:	stp	x4, x5, [x1, #16]
  40a804:	ldp	x4, x5, [x2, #32]
  40a808:	stp	x4, x5, [x1, #32]
  40a80c:	ldr	x3, [x8, x23, lsl #3]
  40a810:	str	x3, [x9, x23, lsl #3]
  40a814:	ldr	x3, [x21, x23, lsl #3]
  40a818:	str	x3, [x11, x23, lsl #3]
  40a81c:	ldr	x3, [x6, x23, lsl #3]
  40a820:	str	x3, [x12, x23, lsl #3]
  40a824:	ldp	x4, x5, [x27, #16]
  40a828:	stp	x4, x5, [x27], #16
  40a82c:	ldr	x2, [x2, #48]
  40a830:	str	x2, [x1, #48]
  40a834:	b.ne	40a7e0 <ferror@plt+0x79a0>  // b.any
  40a838:	b	40a730 <ferror@plt+0x78f0>
  40a83c:	ldr	x0, [sp, #152]
  40a840:	add	x22, x0, x22
  40a844:	nop
  40a848:	ldp	x0, x1, [x28, #16]
  40a84c:	stp	x0, x1, [x28], #16
  40a850:	ldr	x0, [x23, #8]
  40a854:	str	x0, [x23], #8
  40a858:	cmp	x22, x28
  40a85c:	b.ne	40a848 <ferror@plt+0x7a08>  // b.any
  40a860:	mov	x22, x24
  40a864:	b	40a158 <ferror@plt+0x7318>
  40a868:	cmp	x23, #0x42
  40a86c:	lsr	x23, x23, #1
  40a870:	b.hi	40a17c <ferror@plt+0x733c>  // b.pmore
  40a874:	bl	414320 <ferror@plt+0x114e0>
  40a878:	stp	x23, x24, [sp, #48]
  40a87c:	stp	x25, x26, [sp, #64]
  40a880:	stp	x27, x28, [sp, #80]
  40a884:	bl	414320 <ferror@plt+0x114e0>
  40a888:	stp	x29, x30, [sp, #-288]!
  40a88c:	mov	x29, sp
  40a890:	stp	x27, x28, [sp, #80]
  40a894:	adrp	x27, 42d000 <_obstack_memory_used@@Base+0x176c8>
  40a898:	add	x4, x27, #0x3b0
  40a89c:	stp	x19, x20, [sp, #16]
  40a8a0:	ldr	w5, [x4, #16]
  40a8a4:	stp	x21, x22, [sp, #32]
  40a8a8:	mov	x21, x2
  40a8ac:	cmp	x5, x2
  40a8b0:	stp	x23, x24, [sp, #48]
  40a8b4:	mov	x23, x0
  40a8b8:	stp	x25, x26, [sp, #64]
  40a8bc:	mov	x26, x1
  40a8c0:	str	x4, [sp, #104]
  40a8c4:	str	x3, [sp, #136]
  40a8c8:	b.cs	40a9c4 <ferror@plt+0x7b84>  // b.hs, b.nlast
  40a8cc:	cmp	x5, x21
  40a8d0:	mov	x25, x23
  40a8d4:	mov	x24, #0x0                   	// #0
  40a8d8:	mov	x22, #0x0                   	// #0
  40a8dc:	b.hi	40ad4c <ferror@plt+0x7f0c>  // b.pmore
  40a8e0:	add	x0, sp, #0x98
  40a8e4:	bl	406948 <ferror@plt+0x3b08>
  40a8e8:	ldr	x1, [sp, #104]
  40a8ec:	add	x28, x23, x22, lsl #4
  40a8f0:	ldr	x3, [sp, #152]
  40a8f4:	mov	x20, x0
  40a8f8:	ldr	w1, [x1, #16]
  40a8fc:	mov	x0, x28
  40a900:	add	x2, sp, #0xa0
  40a904:	str	x1, [sp, #128]
  40a908:	cmp	x1, x26
  40a90c:	add	x27, x20, #0xd
  40a910:	csel	x8, x1, x26, ls  // ls = plast
  40a914:	stp	x3, x8, [sp, #112]
  40a918:	bl	407a48 <ferror@plt+0x4c08>
  40a91c:	mov	x19, x0
  40a920:	ldr	x1, [sp, #128]
  40a924:	ldp	x3, x8, [sp, #112]
  40a928:	cmp	x1, x0
  40a92c:	ccmp	x0, #0x1, #0x2, hi  // hi = pmore
  40a930:	b.ls	40ae70 <ferror@plt+0x8030>  // b.plast
  40a934:	ldr	x5, [sp, #160]
  40a938:	mov	x2, x19
  40a93c:	mov	x0, x28
  40a940:	mov	x1, x8
  40a944:	mov	x4, x27
  40a948:	add	x22, x22, x19
  40a94c:	bl	40a088 <ferror@plt+0x7248>
  40a950:	stp	x27, x20, [x25]
  40a954:	cmp	x19, x26
  40a958:	ldr	x0, [sp, #104]
  40a95c:	csel	x19, x19, x26, ls  // ls = plast
  40a960:	sub	x2, x21, x22
  40a964:	add	x24, x24, #0x1
  40a968:	sub	x26, x26, x19
  40a96c:	add	x25, x25, #0x10
  40a970:	ldr	w5, [x0, #16]
  40a974:	cmp	x5, x2
  40a978:	b.ls	40a8e0 <ferror@plt+0x7aa0>  // b.plast
  40a97c:	udiv	x0, x24, x5
  40a980:	add	x28, x23, x22, lsl #4
  40a984:	msub	x0, x0, x5, x24
  40a988:	sub	x3, x5, x0
  40a98c:	add	x1, x2, x0
  40a990:	cmp	x2, x3
  40a994:	b.hi	40ac98 <ferror@plt+0x7e58>  // b.pmore
  40a998:	lsl	x2, x2, #4
  40a99c:	mov	x1, x28
  40a9a0:	add	x0, x23, x24, lsl #4
  40a9a4:	str	x5, [sp, #112]
  40a9a8:	bl	402730 <memmove@plt>
  40a9ac:	sub	x22, x24, x22
  40a9b0:	ldr	x5, [sp, #112]
  40a9b4:	add	x21, x21, x22
  40a9b8:	add	x26, x26, x24
  40a9bc:	cmp	x21, x5
  40a9c0:	b.hi	40a8cc <ferror@plt+0x7a8c>  // b.pmore
  40a9c4:	cmp	x26, x21
  40a9c8:	b.cs	40aa50 <ferror@plt+0x7c10>  // b.hs, b.nlast
  40a9cc:	adrp	x27, 42d000 <_obstack_memory_used@@Base+0x176c8>
  40a9d0:	add	x20, x23, x26, lsl #4
  40a9d4:	add	x27, x27, #0x570
  40a9d8:	mov	x22, x26
  40a9dc:	mov	x24, #0x0                   	// #0
  40a9e0:	ldr	x1, [x20]
  40a9e4:	ldrb	w19, [x1]
  40a9e8:	subs	w19, w19, #0x2d
  40a9ec:	b.ne	40a9f4 <ferror@plt+0x7bb4>  // b.any
  40a9f0:	ldrb	w19, [x1, #1]
  40a9f4:	ldr	x0, [sp, #136]
  40a9f8:	cbz	x0, 40aa0c <ferror@plt+0x7bcc>
  40a9fc:	bl	402b50 <strcmp@plt>
  40aa00:	cmp	w0, #0x0
  40aa04:	ccmp	w19, #0x0, #0x4, eq  // eq = none
  40aa08:	b.ne	40abcc <ferror@plt+0x7d8c>  // b.any
  40aa0c:	ldr	w0, [x27, #1412]
  40aa10:	cbz	w0, 40ab7c <ferror@plt+0x7d3c>
  40aa14:	tbz	w0, #31, 40aa50 <ferror@plt+0x7c10>
  40aa18:	cbnz	w19, 40ab98 <ferror@plt+0x7d58>
  40aa1c:	add	x2, sp, #0xa0
  40aa20:	mov	w1, #0x0                   	// #0
  40aa24:	mov	w0, #0x0                   	// #0
  40aa28:	bl	402d10 <__fxstat@plt>
  40aa2c:	cbnz	w0, 40aa40 <ferror@plt+0x7c00>
  40aa30:	ldr	x1, [sp, #168]
  40aa34:	ldr	x0, [x27, #1424]
  40aa38:	cmp	x1, x0
  40aa3c:	b.eq	40abbc <ferror@plt+0x7d7c>  // b.none
  40aa40:	add	x22, x22, #0x1
  40aa44:	add	x20, x20, #0x10
  40aa48:	cmp	x22, x21
  40aa4c:	b.ne	40a9e0 <ferror@plt+0x7ba0>  // b.any
  40aa50:	adrp	x24, 42d000 <_obstack_memory_used@@Base+0x176c8>
  40aa54:	add	x24, x24, #0x570
  40aa58:	b	40aac0 <ferror@plt+0x7c80>
  40aa5c:	b.eq	40adb0 <ferror@plt+0x7f70>  // b.none
  40aa60:	ldr	w0, [sp, #144]
  40aa64:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x6c8>
  40aa68:	add	x28, x20, #0xd
  40aa6c:	add	x1, x1, #0x538
  40aa70:	bl	4029a0 <fdopen@plt>
  40aa74:	mov	x3, x0
  40aa78:	cbz	x0, 40ad98 <ferror@plt+0x7f58>
  40aa7c:	ldr	x5, [sp, #152]
  40aa80:	cmp	x26, x19
  40aa84:	csel	x22, x26, x19, ls  // ls = plast
  40aa88:	mov	x4, x28
  40aa8c:	mov	x1, x22
  40aa90:	sub	x21, x21, x19
  40aa94:	mov	x2, x19
  40aa98:	mov	x0, x23
  40aa9c:	bl	40a088 <ferror@plt+0x7248>
  40aaa0:	stp	x28, x20, [x23]
  40aaa4:	sub	x22, x26, x22
  40aaa8:	lsl	x2, x21, #4
  40aaac:	add	x26, x22, #0x1
  40aab0:	mov	x1, x27
  40aab4:	add	x0, x23, #0x10
  40aab8:	add	x21, x21, #0x1
  40aabc:	bl	402730 <memmove@plt>
  40aac0:	add	x2, sp, #0x98
  40aac4:	mov	x1, x21
  40aac8:	mov	x0, x23
  40aacc:	bl	407a48 <ferror@plt+0x4c08>
  40aad0:	mov	x19, x0
  40aad4:	cmp	x21, x0
  40aad8:	b.eq	40ac10 <ferror@plt+0x7dd0>  // b.none
  40aadc:	cmp	x0, #0x2
  40aae0:	b.ls	40ae50 <ferror@plt+0x8010>  // b.plast
  40aae4:	sub	x19, x19, #0x1
  40aae8:	add	x0, x23, x19, lsl #4
  40aaec:	nop
  40aaf0:	ldr	x2, [sp, #152]
  40aaf4:	mov	x27, x0
  40aaf8:	ldr	x1, [x0]
  40aafc:	ldr	x0, [x2, x19, lsl #3]
  40ab00:	bl	4063f0 <ferror@plt+0x35b0>
  40ab04:	cmp	x19, #0x2
  40ab08:	add	x0, sp, #0x90
  40ab0c:	cset	w1, hi  // hi = pmore
  40ab10:	bl	406108 <ferror@plt+0x32c8>
  40ab14:	mov	x20, x0
  40ab18:	sub	x0, x27, #0x10
  40ab1c:	cbz	x20, 40abdc <ferror@plt+0x7d9c>
  40ab20:	ldr	x0, [x24, #1208]
  40ab24:	strb	wzr, [x20, #12]
  40ab28:	cbz	x0, 40aa60 <ferror@plt+0x7c20>
  40ab2c:	add	x0, sp, #0xa0
  40ab30:	mov	x1, #0x4                   	// #4
  40ab34:	bl	406788 <ferror@plt+0x3948>
  40ab38:	str	w0, [x20, #8]
  40ab3c:	cmp	w0, #0x0
  40ab40:	b.le	40aa5c <ferror@plt+0x7c1c>
  40ab44:	ldr	w0, [sp, #144]
  40ab48:	bl	402a10 <close@plt>
  40ab4c:	ldr	w0, [sp, #160]
  40ab50:	bl	402a10 <close@plt>
  40ab54:	ldr	x0, [x24, #1216]
  40ab58:	ldr	w1, [sp, #164]
  40ab5c:	str	w1, [sp, #144]
  40ab60:	cbz	x0, 40abe4 <ferror@plt+0x7da4>
  40ab64:	mov	w1, #0x1                   	// #1
  40ab68:	strb	w1, [x20, #12]
  40ab6c:	mov	x1, x20
  40ab70:	bl	40e078 <ferror@plt+0xb238>
  40ab74:	cbnz	x0, 40aa60 <ferror@plt+0x7c20>
  40ab78:	bl	414320 <ferror@plt+0x114e0>
  40ab7c:	add	x2, x27, #0x588
  40ab80:	mov	w1, #0x1                   	// #1
  40ab84:	bl	402d10 <__fxstat@plt>
  40ab88:	cbnz	w0, 40ad38 <ferror@plt+0x7ef8>
  40ab8c:	mov	w0, #0xffffffff            	// #-1
  40ab90:	str	w0, [x27, #1412]
  40ab94:	cbz	w19, 40aa1c <ferror@plt+0x7bdc>
  40ab98:	ldr	x1, [x20]
  40ab9c:	add	x2, sp, #0xa0
  40aba0:	mov	w0, #0x0                   	// #0
  40aba4:	bl	402de0 <__xstat@plt>
  40aba8:	cbnz	w0, 40aa40 <ferror@plt+0x7c00>
  40abac:	ldr	x1, [sp, #168]
  40abb0:	ldr	x0, [x27, #1424]
  40abb4:	cmp	x1, x0
  40abb8:	b.ne	40aa40 <ferror@plt+0x7c00>  // b.any
  40abbc:	ldr	x1, [sp, #160]
  40abc0:	ldr	x0, [x27, #1416]
  40abc4:	cmp	x1, x0
  40abc8:	b.ne	40aa40 <ferror@plt+0x7c00>  // b.any
  40abcc:	add	x19, x24, #0xd
  40abd0:	cbz	x24, 40ac4c <ferror@plt+0x7e0c>
  40abd4:	stp	x19, x24, [x20]
  40abd8:	b	40aa40 <ferror@plt+0x7c00>
  40abdc:	sub	x19, x19, #0x1
  40abe0:	b	40aaf0 <ferror@plt+0x7cb0>
  40abe4:	adrp	x3, 405000 <ferror@plt+0x21c0>
  40abe8:	adrp	x2, 405000 <ferror@plt+0x21c0>
  40abec:	add	x3, x3, #0x388
  40abf0:	add	x2, x2, #0x378
  40abf4:	mov	x4, #0x0                   	// #0
  40abf8:	mov	x1, #0x0                   	// #0
  40abfc:	mov	x0, #0x2f                  	// #47
  40ac00:	bl	40d8a0 <ferror@plt+0xaa60>
  40ac04:	str	x0, [x24, #1216]
  40ac08:	cbnz	x0, 40ab64 <ferror@plt+0x7d24>
  40ac0c:	bl	414320 <ferror@plt+0x114e0>
  40ac10:	ldr	x0, [sp, #136]
  40ac14:	bl	409120 <ferror@plt+0x62e0>
  40ac18:	cbnz	x0, 40ad60 <ferror@plt+0x7f20>
  40ac1c:	bl	402db0 <__errno_location@plt>
  40ac20:	ldr	w0, [x0]
  40ac24:	cmp	w0, #0x18
  40ac28:	ccmp	x21, #0x2, #0x0, eq  // eq = none
  40ac2c:	b.hi	40aae4 <ferror@plt+0x7ca4>  // b.pmore
  40ac30:	mov	w2, #0x5                   	// #5
  40ac34:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x6c8>
  40ac38:	mov	x0, #0x0                   	// #0
  40ac3c:	add	x1, x1, #0x4a8
  40ac40:	bl	402d20 <dcgettext@plt>
  40ac44:	ldr	x1, [sp, #136]
  40ac48:	bl	405a20 <ferror@plt+0x2be0>
  40ac4c:	add	x0, sp, #0x90
  40ac50:	bl	406948 <ferror@plt+0x3b08>
  40ac54:	add	x2, sp, #0x98
  40ac58:	mov	x24, x0
  40ac5c:	mov	x1, #0x1                   	// #1
  40ac60:	mov	x0, x20
  40ac64:	add	x19, x24, #0xd
  40ac68:	ldr	x28, [sp, #144]
  40ac6c:	bl	407a48 <ferror@plt+0x4c08>
  40ac70:	mov	x2, x0
  40ac74:	cbz	x0, 40ae38 <ferror@plt+0x7ff8>
  40ac78:	ldr	x5, [sp, #152]
  40ac7c:	mov	x3, x28
  40ac80:	mov	x4, x19
  40ac84:	mov	x0, x20
  40ac88:	mov	x1, #0x0                   	// #0
  40ac8c:	bl	40a088 <ferror@plt+0x7248>
  40ac90:	stp	x19, x24, [x20]
  40ac94:	b	40aa40 <ferror@plt+0x7c00>
  40ac98:	mov	x0, #0x1                   	// #1
  40ac9c:	sub	x5, x0, x5
  40aca0:	add	x25, x5, x1
  40aca4:	add	x0, sp, #0x98
  40aca8:	bl	406948 <ferror@plt+0x3b08>
  40acac:	mov	x27, x0
  40acb0:	cmp	x26, x25
  40acb4:	mov	x1, x25
  40acb8:	ldr	x3, [sp, #152]
  40acbc:	csel	x7, x26, x25, ls  // ls = plast
  40acc0:	add	x2, sp, #0xa0
  40acc4:	mov	x0, x28
  40acc8:	stp	x3, x7, [sp, #112]
  40accc:	add	x20, x27, #0xd
  40acd0:	bl	407a48 <ferror@plt+0x4c08>
  40acd4:	cmp	x25, x0
  40acd8:	mov	x19, x0
  40acdc:	ccmp	x0, #0x1, #0x2, hi  // hi = pmore
  40ace0:	ldp	x3, x7, [sp, #112]
  40ace4:	b.ls	40ae18 <ferror@plt+0x7fd8>  // b.plast
  40ace8:	ldr	x5, [sp, #160]
  40acec:	mov	x0, x28
  40acf0:	mov	x1, x7
  40acf4:	mov	x2, x19
  40acf8:	mov	x4, x20
  40acfc:	add	x22, x22, x19
  40ad00:	bl	40a088 <ferror@plt+0x7248>
  40ad04:	lsl	x0, x24, #4
  40ad08:	cmp	x26, x19
  40ad0c:	ldr	x2, [sp, #104]
  40ad10:	add	x1, x23, x0
  40ad14:	csel	x6, x26, x19, ls  // ls = plast
  40ad18:	str	x20, [x23, x0]
  40ad1c:	add	x28, x23, x22, lsl #4
  40ad20:	sub	x26, x26, x6
  40ad24:	ldr	w5, [x2, #16]
  40ad28:	add	x24, x24, #0x1
  40ad2c:	sub	x2, x21, x22
  40ad30:	str	x27, [x1, #8]
  40ad34:	b	40a998 <ferror@plt+0x7b58>
  40ad38:	bl	402db0 <__errno_location@plt>
  40ad3c:	ldr	w0, [x0]
  40ad40:	str	w0, [x27, #1412]
  40ad44:	tbnz	w0, #31, 40aa18 <ferror@plt+0x7bd8>
  40ad48:	b	40aa50 <ferror@plt+0x7c10>
  40ad4c:	mov	x3, x5
  40ad50:	mov	x28, x23
  40ad54:	mov	x2, x21
  40ad58:	mov	x0, #0x0                   	// #0
  40ad5c:	b	40a98c <ferror@plt+0x7b4c>
  40ad60:	ldr	x4, [sp, #136]
  40ad64:	mov	x3, x0
  40ad68:	ldr	x5, [sp, #152]
  40ad6c:	mov	x2, x21
  40ad70:	mov	x1, x26
  40ad74:	mov	x0, x23
  40ad78:	bl	40a088 <ferror@plt+0x7248>
  40ad7c:	ldp	x19, x20, [sp, #16]
  40ad80:	ldp	x21, x22, [sp, #32]
  40ad84:	ldp	x23, x24, [sp, #48]
  40ad88:	ldp	x25, x26, [sp, #64]
  40ad8c:	ldp	x27, x28, [sp, #80]
  40ad90:	ldp	x29, x30, [sp], #288
  40ad94:	ret
  40ad98:	mov	w2, #0x5                   	// #5
  40ad9c:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x6c8>
  40ada0:	add	x1, x1, #0x540
  40ada4:	bl	402d20 <dcgettext@plt>
  40ada8:	mov	x1, x28
  40adac:	bl	405a20 <ferror@plt+0x2be0>
  40adb0:	ldr	w0, [sp, #164]
  40adb4:	bl	402a10 <close@plt>
  40adb8:	ldr	w19, [sp, #144]
  40adbc:	cmp	w19, #0x1
  40adc0:	b.eq	40add8 <ferror@plt+0x7f98>  // b.none
  40adc4:	mov	w1, #0x1                   	// #1
  40adc8:	mov	w0, w19
  40adcc:	bl	402d70 <dup2@plt>
  40add0:	mov	w0, w19
  40add4:	bl	402a10 <close@plt>
  40add8:	ldr	w19, [sp, #160]
  40addc:	cbz	w19, 40adf4 <ferror@plt+0x7fb4>
  40ade0:	mov	w1, #0x0                   	// #0
  40ade4:	mov	w0, w19
  40ade8:	bl	402d70 <dup2@plt>
  40adec:	mov	w0, w19
  40adf0:	bl	402a10 <close@plt>
  40adf4:	ldr	x1, [x24, #1208]
  40adf8:	mov	x2, #0x0                   	// #0
  40adfc:	mov	x0, x1
  40ae00:	bl	402dc0 <execlp@plt>
  40ae04:	bl	402db0 <__errno_location@plt>
  40ae08:	ldr	w0, [x0]
  40ae0c:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x6c8>
  40ae10:	add	x1, x1, #0x510
  40ae14:	bl	405c88 <ferror@plt+0x2e48>
  40ae18:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x6c8>
  40ae1c:	mov	w2, #0x5                   	// #5
  40ae20:	add	x1, x1, #0x4a8
  40ae24:	mov	x0, #0x0                   	// #0
  40ae28:	bl	402d20 <dcgettext@plt>
  40ae2c:	lsl	x6, x19, #4
  40ae30:	ldr	x1, [x28, x6]
  40ae34:	bl	405a20 <ferror@plt+0x2be0>
  40ae38:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x6c8>
  40ae3c:	mov	w2, #0x5                   	// #5
  40ae40:	add	x1, x1, #0x4a8
  40ae44:	bl	402d20 <dcgettext@plt>
  40ae48:	ldr	x1, [x20]
  40ae4c:	bl	405a20 <ferror@plt+0x2be0>
  40ae50:	lsl	x19, x19, #4
  40ae54:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x6c8>
  40ae58:	mov	w2, #0x5                   	// #5
  40ae5c:	add	x1, x1, #0x4a8
  40ae60:	mov	x0, #0x0                   	// #0
  40ae64:	bl	402d20 <dcgettext@plt>
  40ae68:	ldr	x1, [x23, x19]
  40ae6c:	bl	405a20 <ferror@plt+0x2be0>
  40ae70:	lsl	x19, x19, #4
  40ae74:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x6c8>
  40ae78:	mov	w2, #0x5                   	// #5
  40ae7c:	add	x1, x1, #0x4a8
  40ae80:	mov	x0, #0x0                   	// #0
  40ae84:	bl	402d20 <dcgettext@plt>
  40ae88:	ldr	x1, [x28, x19]
  40ae8c:	bl	405a20 <ferror@plt+0x2be0>
  40ae90:	stp	x29, x30, [sp, #-176]!
  40ae94:	mov	x1, #0x1ffff               	// #131071
  40ae98:	mov	x29, sp
  40ae9c:	stp	x19, x20, [sp, #16]
  40aea0:	stp	x23, x24, [sp, #48]
  40aea4:	ldp	x24, x19, [x0, #16]
  40aea8:	stp	x21, x22, [sp, #32]
  40aeac:	stp	x27, x28, [sp, #80]
  40aeb0:	ldp	x21, x27, [x0]
  40aeb4:	stp	x25, x26, [sp, #64]
  40aeb8:	ldp	x23, x20, [x19, #40]
  40aebc:	ldp	x22, x25, [x0, #32]
  40aec0:	lsr	x28, x27, #1
  40aec4:	ldr	x26, [x0, #48]
  40aec8:	stp	x21, x28, [sp, #120]
  40aecc:	add	x2, x23, x20
  40aed0:	ldr	x0, [x19, #64]
  40aed4:	stp	x24, x0, [sp, #136]
  40aed8:	cmp	x2, x1
  40aedc:	stp	x22, x25, [sp, #152]
  40aee0:	ccmp	x27, #0x1, #0x0, hi  // hi = pmore
  40aee4:	str	x26, [sp, #168]
  40aee8:	b.hi	40afb4 <ferror@plt+0x8174>  // b.pmore
  40aeec:	neg	x28, x23, lsl #5
  40aef0:	cmp	x20, #0x1
  40aef4:	add	x27, x21, x28
  40aef8:	sub	x4, x21, x24, lsl #5
  40aefc:	b.ls	40af20 <ferror@plt+0x80e0>  // b.plast
  40af00:	lsr	x2, x23, #1
  40af04:	mov	x1, x20
  40af08:	mov	x0, x27
  40af0c:	mov	w3, #0x0                   	// #0
  40af10:	sub	x2, x4, x2, lsl #5
  40af14:	str	x4, [sp, #104]
  40af18:	bl	409bd8 <ferror@plt+0x6d98>
  40af1c:	ldr	x4, [sp, #104]
  40af20:	cmp	x23, #0x1
  40af24:	b.ls	40af3c <ferror@plt+0x80fc>  // b.plast
  40af28:	mov	x2, x4
  40af2c:	mov	x1, x23
  40af30:	mov	x0, x21
  40af34:	mov	w3, #0x0                   	// #0
  40af38:	bl	409bd8 <ferror@plt+0x6d98>
  40af3c:	sub	x20, x28, x20, lsl #5
  40af40:	mov	x23, x22
  40af44:	add	x20, x21, x20
  40af48:	stp	x21, x27, [x19]
  40af4c:	add	x21, x22, #0x8
  40af50:	stp	x27, x20, [x19, #16]
  40af54:	mov	x0, x21
  40af58:	bl	402df0 <pthread_mutex_lock@plt>
  40af5c:	ldr	x0, [x23], #56
  40af60:	mov	x1, x19
  40af64:	bl	40e4b0 <ferror@plt+0xb670>
  40af68:	mov	w0, #0x1                   	// #1
  40af6c:	strb	w0, [x19, #84]
  40af70:	mov	x0, x23
  40af74:	bl	402930 <pthread_cond_signal@plt>
  40af78:	mov	x0, x21
  40af7c:	bl	402e00 <pthread_mutex_unlock@plt>
  40af80:	mov	x3, x26
  40af84:	mov	x2, x25
  40af88:	mov	x1, x24
  40af8c:	mov	x0, x22
  40af90:	bl	409218 <ferror@plt+0x63d8>
  40af94:	mov	x0, #0x0                   	// #0
  40af98:	ldp	x19, x20, [sp, #16]
  40af9c:	ldp	x21, x22, [sp, #32]
  40afa0:	ldp	x23, x24, [sp, #48]
  40afa4:	ldp	x25, x26, [sp, #64]
  40afa8:	ldp	x27, x28, [sp, #80]
  40afac:	ldp	x29, x30, [sp], #176
  40afb0:	ret
  40afb4:	adrp	x2, 40a000 <ferror@plt+0x71c0>
  40afb8:	add	x3, sp, #0x78
  40afbc:	add	x2, x2, #0xe90
  40afc0:	add	x0, sp, #0x70
  40afc4:	mov	x1, #0x0                   	// #0
  40afc8:	bl	402a40 <pthread_create@plt>
  40afcc:	cbz	w0, 40afd8 <ferror@plt+0x8198>
  40afd0:	ldp	x23, x20, [x19, #40]
  40afd4:	b	40aeec <ferror@plt+0x80ac>
  40afd8:	ldr	x0, [x19, #40]
  40afdc:	mov	x6, x26
  40afe0:	ldr	x3, [x19, #72]
  40afe4:	mov	x5, x25
  40afe8:	mov	x4, x22
  40afec:	mov	x2, x24
  40aff0:	sub	x1, x27, x28
  40aff4:	sub	x0, x21, x0, lsl #5
  40aff8:	bl	409ee8 <ferror@plt+0x70a8>
  40affc:	ldr	x0, [sp, #112]
  40b000:	mov	x1, #0x0                   	// #0
  40b004:	bl	402a70 <pthread_join@plt>
  40b008:	mov	x0, #0x0                   	// #0
  40b00c:	ldp	x19, x20, [sp, #16]
  40b010:	ldp	x21, x22, [sp, #32]
  40b014:	ldp	x23, x24, [sp, #48]
  40b018:	ldp	x25, x26, [sp, #64]
  40b01c:	ldp	x27, x28, [sp, #80]
  40b020:	ldp	x29, x30, [sp], #176
  40b024:	ret
  40b028:	stp	x29, x30, [sp, #-176]!
  40b02c:	mov	x29, sp
  40b030:	stp	x19, x20, [sp, #16]
  40b034:	mov	w20, w0
  40b038:	stp	x21, x22, [sp, #32]
  40b03c:	str	x23, [sp, #48]
  40b040:	cbz	w0, 40b080 <ferror@plt+0x8240>
  40b044:	adrp	x0, 42d000 <_obstack_memory_used@@Base+0x176c8>
  40b048:	mov	w2, #0x5                   	// #5
  40b04c:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x6c8>
  40b050:	add	x1, x1, #0x688
  40b054:	ldr	x19, [x0, #1336]
  40b058:	mov	x0, #0x0                   	// #0
  40b05c:	bl	402d20 <dcgettext@plt>
  40b060:	mov	x2, x0
  40b064:	adrp	x3, 42d000 <_obstack_memory_used@@Base+0x176c8>
  40b068:	mov	x0, x19
  40b06c:	mov	w1, #0x1                   	// #1
  40b070:	ldr	x3, [x3, #3008]
  40b074:	bl	402b30 <__fprintf_chk@plt>
  40b078:	mov	w0, w20
  40b07c:	bl	402790 <exit@plt>
  40b080:	mov	w2, #0x5                   	// #5
  40b084:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x6c8>
  40b088:	mov	x0, #0x0                   	// #0
  40b08c:	add	x1, x1, #0x6b0
  40b090:	bl	402d20 <dcgettext@plt>
  40b094:	adrp	x19, 42d000 <_obstack_memory_used@@Base+0x176c8>
  40b098:	adrp	x2, 42d000 <_obstack_memory_used@@Base+0x176c8>
  40b09c:	mov	x1, x0
  40b0a0:	mov	w0, #0x1                   	// #1
  40b0a4:	adrp	x22, 417000 <_obstack_memory_used@@Base+0x16c8>
  40b0a8:	ldr	x3, [x2, #3008]
  40b0ac:	add	x21, sp, #0x40
  40b0b0:	add	x22, x22, #0xdf8
  40b0b4:	mov	x2, x3
  40b0b8:	bl	402980 <__printf_chk@plt>
  40b0bc:	mov	w2, #0x5                   	// #5
  40b0c0:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x6c8>
  40b0c4:	mov	x0, #0x0                   	// #0
  40b0c8:	add	x1, x1, #0x6f8
  40b0cc:	bl	402d20 <dcgettext@plt>
  40b0d0:	ldr	x1, [x19, #1360]
  40b0d4:	bl	402d30 <fputs_unlocked@plt>
  40b0d8:	mov	w2, #0x5                   	// #5
  40b0dc:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x6c8>
  40b0e0:	mov	x0, #0x0                   	// #0
  40b0e4:	add	x1, x1, #0x738
  40b0e8:	bl	402d20 <dcgettext@plt>
  40b0ec:	ldr	x1, [x19, #1360]
  40b0f0:	bl	402d30 <fputs_unlocked@plt>
  40b0f4:	mov	w2, #0x5                   	// #5
  40b0f8:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x6c8>
  40b0fc:	mov	x0, #0x0                   	// #0
  40b100:	add	x1, x1, #0x770
  40b104:	bl	402d20 <dcgettext@plt>
  40b108:	ldr	x1, [x19, #1360]
  40b10c:	bl	402d30 <fputs_unlocked@plt>
  40b110:	mov	w2, #0x5                   	// #5
  40b114:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x6c8>
  40b118:	mov	x0, #0x0                   	// #0
  40b11c:	add	x1, x1, #0x7c0
  40b120:	bl	402d20 <dcgettext@plt>
  40b124:	ldr	x1, [x19, #1360]
  40b128:	bl	402d30 <fputs_unlocked@plt>
  40b12c:	mov	w2, #0x5                   	// #5
  40b130:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x6c8>
  40b134:	mov	x0, #0x0                   	// #0
  40b138:	add	x1, x1, #0x7d8
  40b13c:	bl	402d20 <dcgettext@plt>
  40b140:	ldr	x1, [x19, #1360]
  40b144:	bl	402d30 <fputs_unlocked@plt>
  40b148:	mov	w2, #0x5                   	// #5
  40b14c:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x6c8>
  40b150:	mov	x0, #0x0                   	// #0
  40b154:	add	x1, x1, #0x8a8
  40b158:	bl	402d20 <dcgettext@plt>
  40b15c:	ldr	x1, [x19, #1360]
  40b160:	bl	402d30 <fputs_unlocked@plt>
  40b164:	mov	w2, #0x5                   	// #5
  40b168:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x6c8>
  40b16c:	mov	x0, #0x0                   	// #0
  40b170:	add	x1, x1, #0x980
  40b174:	bl	402d20 <dcgettext@plt>
  40b178:	ldr	x1, [x19, #1360]
  40b17c:	bl	402d30 <fputs_unlocked@plt>
  40b180:	mov	w2, #0x5                   	// #5
  40b184:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x6c8>
  40b188:	mov	x0, #0x0                   	// #0
  40b18c:	add	x1, x1, #0x9d0
  40b190:	bl	402d20 <dcgettext@plt>
  40b194:	ldr	x1, [x19, #1360]
  40b198:	bl	402d30 <fputs_unlocked@plt>
  40b19c:	mov	w2, #0x5                   	// #5
  40b1a0:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x6c8>
  40b1a4:	mov	x0, #0x0                   	// #0
  40b1a8:	add	x1, x1, #0xae8
  40b1ac:	bl	402d20 <dcgettext@plt>
  40b1b0:	ldr	x1, [x19, #1360]
  40b1b4:	bl	402d30 <fputs_unlocked@plt>
  40b1b8:	mov	w2, #0x5                   	// #5
  40b1bc:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x6c8>
  40b1c0:	mov	x0, #0x0                   	// #0
  40b1c4:	add	x1, x1, #0xc00
  40b1c8:	bl	402d20 <dcgettext@plt>
  40b1cc:	ldr	x1, [x19, #1360]
  40b1d0:	bl	402d30 <fputs_unlocked@plt>
  40b1d4:	mov	w2, #0x5                   	// #5
  40b1d8:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x6c8>
  40b1dc:	mov	x0, #0x0                   	// #0
  40b1e0:	add	x1, x1, #0xc18
  40b1e4:	bl	402d20 <dcgettext@plt>
  40b1e8:	ldr	x1, [x19, #1360]
  40b1ec:	bl	402d30 <fputs_unlocked@plt>
  40b1f0:	mov	w2, #0x5                   	// #5
  40b1f4:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x6c8>
  40b1f8:	mov	x0, #0x0                   	// #0
  40b1fc:	add	x1, x1, #0xc90
  40b200:	bl	402d20 <dcgettext@plt>
  40b204:	ldr	x1, [x19, #1360]
  40b208:	bl	402d30 <fputs_unlocked@plt>
  40b20c:	mov	w2, #0x5                   	// #5
  40b210:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x6c8>
  40b214:	mov	x0, #0x0                   	// #0
  40b218:	add	x1, x1, #0xda8
  40b21c:	bl	402d20 <dcgettext@plt>
  40b220:	ldr	x1, [x19, #1360]
  40b224:	bl	402d30 <fputs_unlocked@plt>
  40b228:	mov	w2, #0x5                   	// #5
  40b22c:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x6c8>
  40b230:	mov	x0, #0x0                   	// #0
  40b234:	add	x1, x1, #0xf08
  40b238:	bl	402d20 <dcgettext@plt>
  40b23c:	ldr	x1, [x19, #1360]
  40b240:	bl	402d30 <fputs_unlocked@plt>
  40b244:	mov	w2, #0x5                   	// #5
  40b248:	adrp	x1, 416000 <_obstack_memory_used@@Base+0x6c8>
  40b24c:	mov	x0, #0x0                   	// #0
  40b250:	add	x1, x1, #0xf98
  40b254:	bl	402d20 <dcgettext@plt>
  40b258:	ldr	x1, [x19, #1360]
  40b25c:	bl	402d30 <fputs_unlocked@plt>
  40b260:	mov	w2, #0x5                   	// #5
  40b264:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x16c8>
  40b268:	mov	x0, #0x0                   	// #0
  40b26c:	add	x1, x1, #0x70
  40b270:	bl	402d20 <dcgettext@plt>
  40b274:	mov	x1, x0
  40b278:	adrp	x2, 417000 <_obstack_memory_used@@Base+0x16c8>
  40b27c:	mov	w0, #0x1                   	// #1
  40b280:	add	x2, x2, #0x238
  40b284:	bl	402980 <__printf_chk@plt>
  40b288:	mov	w2, #0x5                   	// #5
  40b28c:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x16c8>
  40b290:	mov	x0, #0x0                   	// #0
  40b294:	add	x1, x1, #0x240
  40b298:	bl	402d20 <dcgettext@plt>
  40b29c:	ldr	x1, [x19, #1360]
  40b2a0:	bl	402d30 <fputs_unlocked@plt>
  40b2a4:	mov	w2, #0x5                   	// #5
  40b2a8:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x16c8>
  40b2ac:	mov	x0, #0x0                   	// #0
  40b2b0:	add	x1, x1, #0x280
  40b2b4:	bl	402d20 <dcgettext@plt>
  40b2b8:	ldr	x1, [x19, #1360]
  40b2bc:	bl	402d30 <fputs_unlocked@plt>
  40b2c0:	mov	w2, #0x5                   	// #5
  40b2c4:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x16c8>
  40b2c8:	mov	x0, #0x0                   	// #0
  40b2cc:	add	x1, x1, #0x2b0
  40b2d0:	bl	402d20 <dcgettext@plt>
  40b2d4:	ldr	x1, [x19, #1360]
  40b2d8:	bl	402d30 <fputs_unlocked@plt>
  40b2dc:	mov	w2, #0x5                   	// #5
  40b2e0:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x16c8>
  40b2e4:	mov	x0, #0x0                   	// #0
  40b2e8:	add	x1, x1, #0x2e8
  40b2ec:	bl	402d20 <dcgettext@plt>
  40b2f0:	ldr	x1, [x19, #1360]
  40b2f4:	bl	402d30 <fputs_unlocked@plt>
  40b2f8:	mov	w2, #0x5                   	// #5
  40b2fc:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x16c8>
  40b300:	mov	x0, #0x0                   	// #0
  40b304:	add	x1, x1, #0x548
  40b308:	bl	402d20 <dcgettext@plt>
  40b30c:	ldr	x1, [x19, #1360]
  40b310:	bl	402d30 <fputs_unlocked@plt>
  40b314:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x26c8>
  40b318:	add	x2, x2, #0x100
  40b31c:	ldp	x4, x5, [x2, #288]
  40b320:	stp	x4, x5, [sp, #80]
  40b324:	ldp	x4, x5, [x2, #304]
  40b328:	stp	x4, x5, [sp, #96]
  40b32c:	ldp	x1, x0, [x2, #272]
  40b330:	stp	x1, x0, [sp, #64]
  40b334:	ldp	x4, x5, [x2, #320]
  40b338:	stp	x4, x5, [sp, #112]
  40b33c:	ldp	x4, x5, [x2, #336]
  40b340:	stp	x4, x5, [sp, #128]
  40b344:	ldp	x4, x5, [x2, #352]
  40b348:	stp	x4, x5, [sp, #144]
  40b34c:	ldp	x4, x5, [x2, #368]
  40b350:	stp	x4, x5, [sp, #160]
  40b354:	cbnz	x1, 40b428 <ferror@plt+0x85e8>
  40b358:	ldr	x23, [x21, #8]
  40b35c:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x16c8>
  40b360:	mov	w2, #0x5                   	// #5
  40b364:	add	x1, x1, #0x630
  40b368:	mov	x0, #0x0                   	// #0
  40b36c:	cbz	x23, 40b438 <ferror@plt+0x85f8>
  40b370:	bl	402d20 <dcgettext@plt>
  40b374:	adrp	x21, 417000 <_obstack_memory_used@@Base+0x16c8>
  40b378:	add	x21, x21, #0x648
  40b37c:	adrp	x2, 417000 <_obstack_memory_used@@Base+0x16c8>
  40b380:	mov	x3, x21
  40b384:	add	x2, x2, #0x670
  40b388:	mov	x1, x0
  40b38c:	mov	w0, #0x1                   	// #1
  40b390:	bl	402980 <__printf_chk@plt>
  40b394:	mov	x1, #0x0                   	// #0
  40b398:	mov	w0, #0x5                   	// #5
  40b39c:	bl	402e30 <setlocale@plt>
  40b3a0:	cbz	x0, 40b3b8 <ferror@plt+0x8578>
  40b3a4:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x16c8>
  40b3a8:	mov	x2, #0x3                   	// #3
  40b3ac:	add	x1, x1, #0x680
  40b3b0:	bl	402940 <strncmp@plt>
  40b3b4:	cbnz	w0, 40b4d4 <ferror@plt+0x8694>
  40b3b8:	mov	w2, #0x5                   	// #5
  40b3bc:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x16c8>
  40b3c0:	mov	x0, #0x0                   	// #0
  40b3c4:	add	x1, x1, #0x6d0
  40b3c8:	bl	402d20 <dcgettext@plt>
  40b3cc:	mov	x1, x0
  40b3d0:	mov	x3, x22
  40b3d4:	mov	x2, x21
  40b3d8:	mov	w0, #0x1                   	// #1
  40b3dc:	bl	402980 <__printf_chk@plt>
  40b3e0:	mov	w2, #0x5                   	// #5
  40b3e4:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x16c8>
  40b3e8:	mov	x0, #0x0                   	// #0
  40b3ec:	add	x1, x1, #0x6f0
  40b3f0:	bl	402d20 <dcgettext@plt>
  40b3f4:	mov	x1, x0
  40b3f8:	cmp	x23, x22
  40b3fc:	adrp	x2, 416000 <_obstack_memory_used@@Base+0x6c8>
  40b400:	adrp	x3, 416000 <_obstack_memory_used@@Base+0x6c8>
  40b404:	add	x2, x2, #0xc10
  40b408:	add	x3, x3, #0x678
  40b40c:	csel	x3, x3, x2, eq  // eq = none
  40b410:	mov	x2, x23
  40b414:	mov	w0, #0x1                   	// #1
  40b418:	bl	402980 <__printf_chk@plt>
  40b41c:	b	40b078 <ferror@plt+0x8238>
  40b420:	ldr	x1, [x21, #16]!
  40b424:	cbz	x1, 40b358 <ferror@plt+0x8518>
  40b428:	mov	x0, x22
  40b42c:	bl	402b50 <strcmp@plt>
  40b430:	cbnz	w0, 40b420 <ferror@plt+0x85e0>
  40b434:	b	40b358 <ferror@plt+0x8518>
  40b438:	bl	402d20 <dcgettext@plt>
  40b43c:	adrp	x21, 417000 <_obstack_memory_used@@Base+0x16c8>
  40b440:	add	x21, x21, #0x648
  40b444:	adrp	x2, 417000 <_obstack_memory_used@@Base+0x16c8>
  40b448:	mov	x3, x21
  40b44c:	add	x2, x2, #0x670
  40b450:	mov	x1, x0
  40b454:	mov	w0, #0x1                   	// #1
  40b458:	bl	402980 <__printf_chk@plt>
  40b45c:	mov	x1, #0x0                   	// #0
  40b460:	mov	w0, #0x5                   	// #5
  40b464:	bl	402e30 <setlocale@plt>
  40b468:	cbz	x0, 40b480 <ferror@plt+0x8640>
  40b46c:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x16c8>
  40b470:	mov	x2, #0x3                   	// #3
  40b474:	add	x1, x1, #0x680
  40b478:	bl	402940 <strncmp@plt>
  40b47c:	cbnz	w0, 40b4d0 <ferror@plt+0x8690>
  40b480:	mov	w2, #0x5                   	// #5
  40b484:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x16c8>
  40b488:	mov	x0, #0x0                   	// #0
  40b48c:	add	x1, x1, #0x6d0
  40b490:	bl	402d20 <dcgettext@plt>
  40b494:	mov	x1, x0
  40b498:	mov	x3, x22
  40b49c:	mov	x2, x21
  40b4a0:	mov	w0, #0x1                   	// #1
  40b4a4:	bl	402980 <__printf_chk@plt>
  40b4a8:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x16c8>
  40b4ac:	mov	w2, #0x5                   	// #5
  40b4b0:	add	x1, x1, #0x6f0
  40b4b4:	mov	x0, #0x0                   	// #0
  40b4b8:	bl	402d20 <dcgettext@plt>
  40b4bc:	mov	x23, x22
  40b4c0:	adrp	x3, 416000 <_obstack_memory_used@@Base+0x6c8>
  40b4c4:	mov	x1, x0
  40b4c8:	add	x3, x3, #0x678
  40b4cc:	b	40b410 <ferror@plt+0x85d0>
  40b4d0:	mov	x23, x22
  40b4d4:	mov	w2, #0x5                   	// #5
  40b4d8:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x16c8>
  40b4dc:	mov	x0, #0x0                   	// #0
  40b4e0:	add	x1, x1, #0x688
  40b4e4:	bl	402d20 <dcgettext@plt>
  40b4e8:	ldr	x1, [x19, #1360]
  40b4ec:	bl	402d30 <fputs_unlocked@plt>
  40b4f0:	b	40b3b8 <ferror@plt+0x8578>
  40b4f4:	nop
  40b4f8:	mov	w0, #0x1                   	// #1
  40b4fc:	b	40b028 <ferror@plt+0x81e8>
  40b500:	stp	x29, x30, [sp, #-96]!
  40b504:	mov	x29, sp
  40b508:	stp	x23, x24, [sp, #48]
  40b50c:	mov	x23, x1
  40b510:	stp	x21, x22, [sp, #32]
  40b514:	mov	x22, x3
  40b518:	stp	x25, x26, [sp, #64]
  40b51c:	mov	x26, x2
  40b520:	mov	x25, x0
  40b524:	stp	x27, x28, [sp, #80]
  40b528:	bl	402780 <strlen@plt>
  40b52c:	ldr	x28, [x23]
  40b530:	cbz	x28, 40b670 <ferror@plt+0x8830>
  40b534:	stp	x19, x20, [sp, #16]
  40b538:	mov	x21, x0
  40b53c:	cbz	x26, 40b618 <ferror@plt+0x87d8>
  40b540:	mov	x20, x26
  40b544:	mov	w27, #0x0                   	// #0
  40b548:	mov	x24, #0xffffffffffffffff    	// #-1
  40b54c:	mov	x19, #0x0                   	// #0
  40b550:	b	40b570 <ferror@plt+0x8730>
  40b554:	bl	402b00 <memcmp@plt>
  40b558:	cmp	w0, #0x0
  40b55c:	csinc	w27, w27, wzr, eq  // eq = none
  40b560:	add	x19, x19, #0x1
  40b564:	add	x20, x20, x22
  40b568:	ldr	x28, [x23, x19, lsl #3]
  40b56c:	cbz	x28, 40b5c8 <ferror@plt+0x8788>
  40b570:	mov	x1, x25
  40b574:	mov	x2, x21
  40b578:	mov	x0, x28
  40b57c:	bl	402940 <strncmp@plt>
  40b580:	mov	w1, w0
  40b584:	mov	x0, x28
  40b588:	cbnz	w1, 40b560 <ferror@plt+0x8720>
  40b58c:	bl	402780 <strlen@plt>
  40b590:	mov	x3, x0
  40b594:	mov	x2, x22
  40b598:	madd	x0, x24, x22, x26
  40b59c:	mov	x1, x20
  40b5a0:	cmp	x21, x3
  40b5a4:	b.eq	40b5f4 <ferror@plt+0x87b4>  // b.none
  40b5a8:	cmn	x24, #0x1
  40b5ac:	b.ne	40b554 <ferror@plt+0x8714>  // b.any
  40b5b0:	mov	x24, x19
  40b5b4:	add	x19, x19, #0x1
  40b5b8:	add	x20, x20, x22
  40b5bc:	ldr	x28, [x23, x19, lsl #3]
  40b5c0:	cbnz	x28, 40b570 <ferror@plt+0x8730>
  40b5c4:	nop
  40b5c8:	ldp	x19, x20, [sp, #16]
  40b5cc:	cmp	w27, #0x0
  40b5d0:	mov	x0, #0xfffffffffffffffe    	// #-2
  40b5d4:	csel	x24, x24, x0, eq  // eq = none
  40b5d8:	mov	x0, x24
  40b5dc:	ldp	x21, x22, [sp, #32]
  40b5e0:	ldp	x23, x24, [sp, #48]
  40b5e4:	ldp	x25, x26, [sp, #64]
  40b5e8:	ldp	x27, x28, [sp, #80]
  40b5ec:	ldp	x29, x30, [sp], #96
  40b5f0:	ret
  40b5f4:	mov	x24, x19
  40b5f8:	mov	x0, x24
  40b5fc:	ldp	x19, x20, [sp, #16]
  40b600:	ldp	x21, x22, [sp, #32]
  40b604:	ldp	x23, x24, [sp, #48]
  40b608:	ldp	x25, x26, [sp, #64]
  40b60c:	ldp	x27, x28, [sp, #80]
  40b610:	ldp	x29, x30, [sp], #96
  40b614:	ret
  40b618:	mov	w27, #0x0                   	// #0
  40b61c:	mov	x24, #0xffffffffffffffff    	// #-1
  40b620:	mov	x19, #0x0                   	// #0
  40b624:	b	40b638 <ferror@plt+0x87f8>
  40b628:	mov	w27, #0x1                   	// #1
  40b62c:	add	x19, x19, #0x1
  40b630:	ldr	x28, [x23, x19, lsl #3]
  40b634:	cbz	x28, 40b5c8 <ferror@plt+0x8788>
  40b638:	mov	x1, x25
  40b63c:	mov	x2, x21
  40b640:	mov	x0, x28
  40b644:	bl	402940 <strncmp@plt>
  40b648:	mov	w1, w0
  40b64c:	mov	x0, x28
  40b650:	cbnz	w1, 40b62c <ferror@plt+0x87ec>
  40b654:	bl	402780 <strlen@plt>
  40b658:	cmp	x0, x21
  40b65c:	b.eq	40b5f4 <ferror@plt+0x87b4>  // b.none
  40b660:	cmn	x24, #0x1
  40b664:	b.ne	40b628 <ferror@plt+0x87e8>  // b.any
  40b668:	mov	x24, x19
  40b66c:	b	40b62c <ferror@plt+0x87ec>
  40b670:	mov	x24, #0xffffffffffffffff    	// #-1
  40b674:	b	40b5d8 <ferror@plt+0x8798>
  40b678:	stp	x29, x30, [sp, #-48]!
  40b67c:	cmn	x2, #0x1
  40b680:	mov	x29, sp
  40b684:	stp	x19, x20, [sp, #16]
  40b688:	mov	x20, x0
  40b68c:	str	x21, [sp, #32]
  40b690:	mov	x21, x1
  40b694:	b.eq	40b6f4 <ferror@plt+0x88b4>  // b.none
  40b698:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x26c8>
  40b69c:	mov	w2, #0x5                   	// #5
  40b6a0:	add	x1, x1, #0x758
  40b6a4:	mov	x0, #0x0                   	// #0
  40b6a8:	bl	402d20 <dcgettext@plt>
  40b6ac:	mov	x19, x0
  40b6b0:	mov	x2, x21
  40b6b4:	mov	w1, #0x8                   	// #8
  40b6b8:	mov	w0, #0x0                   	// #0
  40b6bc:	bl	411020 <ferror@plt+0xe1e0>
  40b6c0:	mov	x1, x20
  40b6c4:	mov	x20, x0
  40b6c8:	mov	w0, #0x1                   	// #1
  40b6cc:	bl	4121c8 <ferror@plt+0xf388>
  40b6d0:	mov	x3, x20
  40b6d4:	mov	x2, x19
  40b6d8:	ldp	x19, x20, [sp, #16]
  40b6dc:	mov	x4, x0
  40b6e0:	ldr	x21, [sp, #32]
  40b6e4:	mov	w1, #0x0                   	// #0
  40b6e8:	ldp	x29, x30, [sp], #48
  40b6ec:	mov	w0, #0x0                   	// #0
  40b6f0:	b	4027b0 <error@plt>
  40b6f4:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x26c8>
  40b6f8:	mov	w2, #0x5                   	// #5
  40b6fc:	add	x1, x1, #0x738
  40b700:	mov	x0, #0x0                   	// #0
  40b704:	bl	402d20 <dcgettext@plt>
  40b708:	mov	x19, x0
  40b70c:	b	40b6b0 <ferror@plt+0x8870>
  40b710:	stp	x29, x30, [sp, #-112]!
  40b714:	mov	x29, sp
  40b718:	stp	x27, x28, [sp, #80]
  40b71c:	adrp	x28, 42d000 <_obstack_memory_used@@Base+0x176c8>
  40b720:	stp	x19, x20, [sp, #16]
  40b724:	mov	x20, x1
  40b728:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x26c8>
  40b72c:	add	x1, x1, #0x778
  40b730:	stp	x21, x22, [sp, #32]
  40b734:	mov	x22, x2
  40b738:	mov	w2, #0x5                   	// #5
  40b73c:	stp	x23, x24, [sp, #48]
  40b740:	mov	x24, x0
  40b744:	mov	x0, #0x0                   	// #0
  40b748:	bl	402d20 <dcgettext@plt>
  40b74c:	ldr	x1, [x28, #1336]
  40b750:	bl	402d30 <fputs_unlocked@plt>
  40b754:	ldr	x21, [x24]
  40b758:	cbz	x21, 40b7d0 <ferror@plt+0x8990>
  40b75c:	adrp	x27, 418000 <_obstack_memory_used@@Base+0x26c8>
  40b760:	add	x27, x27, #0x798
  40b764:	stp	x25, x26, [sp, #64]
  40b768:	adrp	x26, 418000 <_obstack_memory_used@@Base+0x26c8>
  40b76c:	add	x25, x28, #0x538
  40b770:	add	x26, x26, #0x790
  40b774:	mov	x23, #0x0                   	// #0
  40b778:	mov	x19, #0x0                   	// #0
  40b77c:	nop
  40b780:	cbz	x19, 40b798 <ferror@plt+0x8958>
  40b784:	mov	x2, x22
  40b788:	mov	x1, x20
  40b78c:	mov	x0, x23
  40b790:	bl	402b00 <memcmp@plt>
  40b794:	cbz	w0, 40b808 <ferror@plt+0x89c8>
  40b798:	ldr	x23, [x25]
  40b79c:	mov	x0, x21
  40b7a0:	bl	412348 <ferror@plt+0xf508>
  40b7a4:	mov	x3, x0
  40b7a8:	mov	x2, x26
  40b7ac:	mov	x0, x23
  40b7b0:	mov	w1, #0x1                   	// #1
  40b7b4:	mov	x23, x20
  40b7b8:	bl	402b30 <__fprintf_chk@plt>
  40b7bc:	add	x19, x19, #0x1
  40b7c0:	add	x20, x20, x22
  40b7c4:	ldr	x21, [x24, x19, lsl #3]
  40b7c8:	cbnz	x21, 40b780 <ferror@plt+0x8940>
  40b7cc:	ldp	x25, x26, [sp, #64]
  40b7d0:	ldr	x0, [x28, #1336]
  40b7d4:	ldp	x1, x2, [x0, #40]
  40b7d8:	cmp	x1, x2
  40b7dc:	b.cs	40b834 <ferror@plt+0x89f4>  // b.hs, b.nlast
  40b7e0:	add	x2, x1, #0x1
  40b7e4:	str	x2, [x0, #40]
  40b7e8:	mov	w0, #0xa                   	// #10
  40b7ec:	strb	w0, [x1]
  40b7f0:	ldp	x19, x20, [sp, #16]
  40b7f4:	ldp	x21, x22, [sp, #32]
  40b7f8:	ldp	x23, x24, [sp, #48]
  40b7fc:	ldp	x27, x28, [sp, #80]
  40b800:	ldp	x29, x30, [sp], #112
  40b804:	ret
  40b808:	ldr	x1, [x25]
  40b80c:	mov	x0, x21
  40b810:	str	x1, [sp, #104]
  40b814:	bl	412348 <ferror@plt+0xf508>
  40b818:	mov	x3, x0
  40b81c:	ldr	x1, [sp, #104]
  40b820:	mov	x2, x27
  40b824:	mov	x0, x1
  40b828:	mov	w1, #0x1                   	// #1
  40b82c:	bl	402b30 <__fprintf_chk@plt>
  40b830:	b	40b7bc <ferror@plt+0x897c>
  40b834:	ldp	x19, x20, [sp, #16]
  40b838:	mov	w1, #0xa                   	// #10
  40b83c:	ldp	x21, x22, [sp, #32]
  40b840:	ldp	x23, x24, [sp, #48]
  40b844:	ldp	x27, x28, [sp, #80]
  40b848:	ldp	x29, x30, [sp], #112
  40b84c:	b	402ad0 <__overflow@plt>
  40b850:	stp	x29, x30, [sp, #-80]!
  40b854:	mov	x29, sp
  40b858:	stp	x19, x20, [sp, #16]
  40b85c:	mov	x19, x2
  40b860:	mov	x20, x3
  40b864:	stp	x21, x22, [sp, #32]
  40b868:	mov	x22, x1
  40b86c:	mov	x21, x4
  40b870:	mov	x3, x4
  40b874:	mov	x2, x20
  40b878:	mov	x1, x19
  40b87c:	stp	x23, x24, [sp, #48]
  40b880:	mov	x24, x0
  40b884:	mov	x23, x5
  40b888:	mov	x0, x22
  40b88c:	bl	40b500 <ferror@plt+0x86c0>
  40b890:	tbnz	x0, #63, 40b8a8 <ferror@plt+0x8a68>
  40b894:	ldp	x19, x20, [sp, #16]
  40b898:	ldp	x21, x22, [sp, #32]
  40b89c:	ldp	x23, x24, [sp, #48]
  40b8a0:	ldp	x29, x30, [sp], #80
  40b8a4:	ret
  40b8a8:	str	x25, [sp, #64]
  40b8ac:	cmn	x0, #0x1
  40b8b0:	b.eq	40b924 <ferror@plt+0x8ae4>  // b.none
  40b8b4:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x26c8>
  40b8b8:	mov	w2, #0x5                   	// #5
  40b8bc:	add	x1, x1, #0x758
  40b8c0:	mov	x0, #0x0                   	// #0
  40b8c4:	bl	402d20 <dcgettext@plt>
  40b8c8:	mov	x25, x0
  40b8cc:	mov	x2, x22
  40b8d0:	mov	w1, #0x8                   	// #8
  40b8d4:	mov	w0, #0x0                   	// #0
  40b8d8:	bl	411020 <ferror@plt+0xe1e0>
  40b8dc:	mov	x1, x24
  40b8e0:	mov	x22, x0
  40b8e4:	mov	w0, #0x1                   	// #1
  40b8e8:	bl	4121c8 <ferror@plt+0xf388>
  40b8ec:	mov	x3, x22
  40b8f0:	mov	x4, x0
  40b8f4:	mov	x2, x25
  40b8f8:	mov	w1, #0x0                   	// #0
  40b8fc:	mov	w0, #0x0                   	// #0
  40b900:	bl	4027b0 <error@plt>
  40b904:	mov	x0, x19
  40b908:	mov	x2, x21
  40b90c:	mov	x1, x20
  40b910:	bl	40b710 <ferror@plt+0x88d0>
  40b914:	blr	x23
  40b918:	mov	x0, #0xffffffffffffffff    	// #-1
  40b91c:	ldr	x25, [sp, #64]
  40b920:	b	40b894 <ferror@plt+0x8a54>
  40b924:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x26c8>
  40b928:	mov	w2, #0x5                   	// #5
  40b92c:	add	x1, x1, #0x738
  40b930:	mov	x0, #0x0                   	// #0
  40b934:	bl	402d20 <dcgettext@plt>
  40b938:	mov	x25, x0
  40b93c:	b	40b8cc <ferror@plt+0x8a8c>
  40b940:	stp	x29, x30, [sp, #-64]!
  40b944:	mov	x29, sp
  40b948:	stp	x21, x22, [sp, #32]
  40b94c:	ldr	x22, [x1]
  40b950:	cbz	x22, 40b998 <ferror@plt+0x8b58>
  40b954:	mov	x21, x3
  40b958:	stp	x19, x20, [sp, #16]
  40b95c:	mov	x19, x2
  40b960:	add	x20, x1, #0x8
  40b964:	str	x23, [sp, #48]
  40b968:	mov	x23, x0
  40b96c:	b	40b97c <ferror@plt+0x8b3c>
  40b970:	ldr	x22, [x20], #8
  40b974:	add	x19, x19, x21
  40b978:	cbz	x22, 40b990 <ferror@plt+0x8b50>
  40b97c:	mov	x2, x21
  40b980:	mov	x1, x19
  40b984:	mov	x0, x23
  40b988:	bl	402b00 <memcmp@plt>
  40b98c:	cbnz	w0, 40b970 <ferror@plt+0x8b30>
  40b990:	ldp	x19, x20, [sp, #16]
  40b994:	ldr	x23, [sp, #48]
  40b998:	mov	x0, x22
  40b99c:	ldp	x21, x22, [sp, #32]
  40b9a0:	ldp	x29, x30, [sp], #64
  40b9a4:	ret
  40b9a8:	adrp	x1, 42d000 <_obstack_memory_used@@Base+0x176c8>
  40b9ac:	str	x0, [x1, #2992]
  40b9b0:	ret
  40b9b4:	nop
  40b9b8:	adrp	x1, 42d000 <_obstack_memory_used@@Base+0x176c8>
  40b9bc:	strb	w0, [x1, #3000]
  40b9c0:	ret
  40b9c4:	nop
  40b9c8:	stp	x29, x30, [sp, #-48]!
  40b9cc:	adrp	x0, 42d000 <_obstack_memory_used@@Base+0x176c8>
  40b9d0:	mov	x29, sp
  40b9d4:	ldr	x0, [x0, #1360]
  40b9d8:	bl	415960 <_obstack_memory_used@@Base+0x28>
  40b9dc:	cbz	w0, 40ba14 <ferror@plt+0x8bd4>
  40b9e0:	stp	x19, x20, [sp, #16]
  40b9e4:	adrp	x20, 42d000 <_obstack_memory_used@@Base+0x176c8>
  40b9e8:	add	x0, x20, #0xbb0
  40b9ec:	str	x21, [sp, #32]
  40b9f0:	ldrb	w21, [x0, #8]
  40b9f4:	bl	402db0 <__errno_location@plt>
  40b9f8:	mov	x19, x0
  40b9fc:	cbz	w21, 40ba2c <ferror@plt+0x8bec>
  40ba00:	ldr	w0, [x0]
  40ba04:	cmp	w0, #0x20
  40ba08:	b.ne	40ba2c <ferror@plt+0x8bec>  // b.any
  40ba0c:	ldp	x19, x20, [sp, #16]
  40ba10:	ldr	x21, [sp, #32]
  40ba14:	adrp	x0, 42d000 <_obstack_memory_used@@Base+0x176c8>
  40ba18:	ldr	x0, [x0, #1336]
  40ba1c:	bl	415960 <_obstack_memory_used@@Base+0x28>
  40ba20:	cbnz	w0, 40ba80 <ferror@plt+0x8c40>
  40ba24:	ldp	x29, x30, [sp], #48
  40ba28:	ret
  40ba2c:	mov	w2, #0x5                   	// #5
  40ba30:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x26c8>
  40ba34:	mov	x0, #0x0                   	// #0
  40ba38:	add	x1, x1, #0x7a0
  40ba3c:	bl	402d20 <dcgettext@plt>
  40ba40:	ldr	x2, [x20, #2992]
  40ba44:	mov	x20, x0
  40ba48:	cbz	x2, 40ba8c <ferror@plt+0x8c4c>
  40ba4c:	ldr	w19, [x19]
  40ba50:	mov	x0, x2
  40ba54:	bl	411720 <ferror@plt+0xe8e0>
  40ba58:	mov	x3, x0
  40ba5c:	adrp	x2, 416000 <_obstack_memory_used@@Base+0x6c8>
  40ba60:	mov	w1, w19
  40ba64:	mov	x4, x20
  40ba68:	add	x2, x2, #0x3c0
  40ba6c:	mov	w0, #0x0                   	// #0
  40ba70:	bl	4027b0 <error@plt>
  40ba74:	adrp	x0, 42d000 <_obstack_memory_used@@Base+0x176c8>
  40ba78:	ldr	w0, [x0, #1224]
  40ba7c:	bl	402750 <_exit@plt>
  40ba80:	stp	x19, x20, [sp, #16]
  40ba84:	str	x21, [sp, #32]
  40ba88:	b	40ba74 <ferror@plt+0x8c34>
  40ba8c:	ldr	w1, [x19]
  40ba90:	mov	x3, x0
  40ba94:	adrp	x2, 416000 <_obstack_memory_used@@Base+0x6c8>
  40ba98:	mov	w0, #0x0                   	// #0
  40ba9c:	add	x2, x2, #0x5a0
  40baa0:	bl	4027b0 <error@plt>
  40baa4:	b	40ba74 <ferror@plt+0x8c34>
  40baa8:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x26c8>
  40baac:	str	xzr, [x0, #16]
  40bab0:	str	wzr, [x0, #24]
  40bab4:	ldr	q0, [x1, #1968]
  40bab8:	str	q0, [x0]
  40babc:	ret
  40bac0:	mov	x2, x0
  40bac4:	mov	x0, x1
  40bac8:	ldr	w1, [x2]
  40bacc:	str	w1, [x0]
  40bad0:	ldr	w1, [x2, #4]
  40bad4:	str	w1, [x0, #4]
  40bad8:	ldr	w1, [x2, #8]
  40badc:	str	w1, [x0, #8]
  40bae0:	ldr	w1, [x2, #12]
  40bae4:	str	w1, [x0, #12]
  40bae8:	ret
  40baec:	nop
  40baf0:	stp	x29, x30, [sp, #-96]!
  40baf4:	lsr	x5, x1, #32
  40baf8:	mov	x29, sp
  40bafc:	ldp	w3, w4, [x2, #16]
  40bb00:	stp	x25, x26, [sp, #64]
  40bb04:	and	x26, x1, #0xfffffffffffffffc
  40bb08:	adds	w1, w3, w1
  40bb0c:	str	w1, [x2, #16]
  40bb10:	adc	w1, w4, w5
  40bb14:	str	w1, [x2, #20]
  40bb18:	add	x26, x0, x26
  40bb1c:	ldr	w10, [x2, #4]
  40bb20:	ldp	s0, s1, [x2, #8]
  40bb24:	cmp	x0, x26
  40bb28:	ldr	s2, [x2]
  40bb2c:	b.cs	40c528 <ferror@plt+0x96e8>  // b.hs, b.nlast
  40bb30:	stp	x27, x28, [sp, #80]
  40bb34:	mov	w28, #0xa478                	// #42104
  40bb38:	mov	w27, #0xb756                	// #46934
  40bb3c:	movk	w28, #0xd76a, lsl #16
  40bb40:	movk	w27, #0xe8c7, lsl #16
  40bb44:	stp	x19, x20, [sp, #16]
  40bb48:	stp	x21, x22, [sp, #32]
  40bb4c:	stp	x23, x24, [sp, #48]
  40bb50:	eor	v3.8b, v0.8b, v1.8b
  40bb54:	fmov	w3, s1
  40bb58:	fmov	w1, s2
  40bb5c:	ldp	w19, w15, [x0]
  40bb60:	fmov	w7, s0
  40bb64:	fmov	w4, s3
  40bb68:	mov	w6, #0x70db                	// #28891
  40bb6c:	add	w1, w1, w28
  40bb70:	movk	w6, #0x2420, lsl #16
  40bb74:	ldp	w8, w16, [x0, #8]
  40bb78:	add	w6, w7, w6
  40bb7c:	and	w4, w4, w10
  40bb80:	ldr	w14, [x0, #32]
  40bb84:	eor	w4, w4, w3
  40bb88:	fmov	w3, s0
  40bb8c:	add	w4, w4, w19
  40bb90:	add	w4, w4, w1
  40bb94:	fmov	w1, s1
  40bb98:	ldp	w11, w17, [x0, #16]
  40bb9c:	ror	w4, w4, #25
  40bba0:	add	w4, w4, w10
  40bba4:	eor	w3, w10, w3
  40bba8:	and	w3, w3, w4
  40bbac:	add	w5, w1, w27
  40bbb0:	eor	w3, w3, w7
  40bbb4:	eor	w1, w4, w10
  40bbb8:	add	w3, w3, w15
  40bbbc:	mov	w7, #0xceee                	// #52974
  40bbc0:	add	w3, w3, w5
  40bbc4:	mov	w5, #0xfaf                 	// #4015
  40bbc8:	movk	w5, #0xf57c, lsl #16
  40bbcc:	add	w25, w11, w5
  40bbd0:	mov	w5, #0xc62a                	// #50730
  40bbd4:	ror	w3, w3, #20
  40bbd8:	add	w3, w4, w3
  40bbdc:	movk	w5, #0x4787, lsl #16
  40bbe0:	and	w1, w1, w3
  40bbe4:	add	w23, w17, w5
  40bbe8:	eor	w1, w1, w10
  40bbec:	eor	w5, w4, w3
  40bbf0:	add	w1, w1, w8
  40bbf4:	movk	w7, #0xc1bd, lsl #16
  40bbf8:	add	w1, w1, w6
  40bbfc:	add	w9, w10, w7
  40bc00:	ldp	w13, w18, [x0, #24]
  40bc04:	ror	w1, w1, #15
  40bc08:	add	w1, w3, w1
  40bc0c:	mov	w7, #0x4613                	// #17939
  40bc10:	and	w5, w5, w1
  40bc14:	eor	w21, w3, w1
  40bc18:	eor	w5, w5, w4
  40bc1c:	movk	w7, #0xa830, lsl #16
  40bc20:	add	w5, w5, w16
  40bc24:	add	w20, w13, w7
  40bc28:	add	w5, w5, w9
  40bc2c:	mov	w6, #0x9501                	// #38145
  40bc30:	movk	w6, #0xfd46, lsl #16
  40bc34:	add	w22, w18, w6
  40bc38:	mov	w6, #0x98d8                	// #39128
  40bc3c:	ror	w5, w5, #10
  40bc40:	add	w5, w1, w5
  40bc44:	movk	w6, #0x6980, lsl #16
  40bc48:	and	w21, w21, w5
  40bc4c:	eor	w30, w1, w5
  40bc50:	eor	w21, w21, w3
  40bc54:	add	w12, w14, w6
  40bc58:	add	w4, w21, w4
  40bc5c:	ldr	w7, [x0, #36]
  40bc60:	add	w4, w25, w4
  40bc64:	mov	w6, #0xf7af                	// #63407
  40bc68:	movk	w6, #0x8b44, lsl #16
  40bc6c:	add	w24, w7, w6
  40bc70:	ldr	w6, [x0, #40]
  40bc74:	ror	w4, w4, #25
  40bc78:	add	w4, w5, w4
  40bc7c:	mov	w21, #0xffff5bb1            	// #-42063
  40bc80:	and	w25, w30, w4
  40bc84:	add	w21, w6, w21
  40bc88:	eor	w25, w25, w1
  40bc8c:	add	w3, w25, w3
  40bc90:	eor	w25, w5, w4
  40bc94:	add	w3, w23, w3
  40bc98:	mov	w23, #0xd7be                	// #55230
  40bc9c:	movk	w23, #0x895c, lsl #16
  40bca0:	ror	w3, w3, #20
  40bca4:	add	w3, w4, w3
  40bca8:	and	w25, w25, w3
  40bcac:	eor	w25, w25, w5
  40bcb0:	add	w1, w25, w1
  40bcb4:	eor	w25, w4, w3
  40bcb8:	add	w1, w20, w1
  40bcbc:	ldp	w9, w20, [x0, #44]
  40bcc0:	ror	w1, w1, #15
  40bcc4:	add	w1, w3, w1
  40bcc8:	and	w25, w25, w1
  40bccc:	add	w23, w9, w23
  40bcd0:	eor	w25, w25, w4
  40bcd4:	add	w5, w25, w5
  40bcd8:	eor	w25, w3, w1
  40bcdc:	add	w5, w22, w5
  40bce0:	mov	w22, #0x1122                	// #4386
  40bce4:	movk	w22, #0x6b90, lsl #16
  40bce8:	add	w22, w20, w22
  40bcec:	ror	w5, w5, #10
  40bcf0:	add	w5, w1, w5
  40bcf4:	and	w25, w25, w5
  40bcf8:	eor	w25, w25, w3
  40bcfc:	add	w4, w25, w4
  40bd00:	eor	w25, w1, w5
  40bd04:	add	w4, w12, w4
  40bd08:	ldr	w12, [x0, #52]
  40bd0c:	ror	w4, w4, #25
  40bd10:	add	w4, w5, w4
  40bd14:	and	w25, w25, w4
  40bd18:	eor	w30, w5, w4
  40bd1c:	eor	w25, w25, w1
  40bd20:	add	w3, w25, w3
  40bd24:	add	w24, w24, w3
  40bd28:	mov	w3, #0x7193                	// #29075
  40bd2c:	movk	w3, #0xfd98, lsl #16
  40bd30:	add	w25, w12, w3
  40bd34:	mov	w3, #0x438e                	// #17294
  40bd38:	ror	w24, w24, #20
  40bd3c:	add	w24, w4, w24
  40bd40:	movk	w3, #0xa679, lsl #16
  40bd44:	and	w30, w30, w24
  40bd48:	eor	w30, w30, w5
  40bd4c:	add	w30, w30, w1
  40bd50:	eor	w1, w4, w24
  40bd54:	add	w30, w21, w30
  40bd58:	ror	w30, w30, #15
  40bd5c:	add	w30, w24, w30
  40bd60:	and	w1, w1, w30
  40bd64:	eor	w1, w1, w4
  40bd68:	add	w5, w1, w5
  40bd6c:	eor	w1, w24, w30
  40bd70:	add	w23, w23, w5
  40bd74:	ror	w23, w23, #10
  40bd78:	add	w23, w30, w23
  40bd7c:	and	w1, w1, w23
  40bd80:	eor	w1, w1, w24
  40bd84:	add	w1, w1, w4
  40bd88:	eor	w4, w30, w23
  40bd8c:	add	w22, w22, w1
  40bd90:	ldp	w21, w1, [x0, #56]
  40bd94:	ror	w22, w22, #25
  40bd98:	add	w22, w23, w22
  40bd9c:	add	x0, x0, #0x40
  40bda0:	and	w4, w4, w22
  40bda4:	eor	w5, w23, w22
  40bda8:	eor	w4, w4, w30
  40bdac:	add	w3, w21, w3
  40bdb0:	add	w24, w4, w24
  40bdb4:	mov	w4, #0x821                 	// #2081
  40bdb8:	add	w25, w25, w24
  40bdbc:	movk	w4, #0x49b4, lsl #16
  40bdc0:	add	w4, w1, w4
  40bdc4:	cmp	x26, x0
  40bdc8:	ror	w25, w25, #20
  40bdcc:	add	w25, w22, w25
  40bdd0:	and	w5, w5, w25
  40bdd4:	eor	w5, w5, w23
  40bdd8:	add	w30, w5, w30
  40bddc:	eor	w5, w22, w25
  40bde0:	add	w30, w3, w30
  40bde4:	mov	w3, #0x2562                	// #9570
  40bde8:	movk	w3, #0xf61e, lsl #16
  40bdec:	add	w24, w15, w3
  40bdf0:	ror	w30, w30, #15
  40bdf4:	add	w30, w25, w30
  40bdf8:	and	w3, w5, w30
  40bdfc:	eor	w3, w3, w22
  40be00:	add	w23, w3, w23
  40be04:	mov	w3, #0xb340                	// #45888
  40be08:	add	w23, w4, w23
  40be0c:	movk	w3, #0xc040, lsl #16
  40be10:	add	w5, w13, w3
  40be14:	mov	w3, #0x5a51                	// #23121
  40be18:	movk	w3, #0x265e, lsl #16
  40be1c:	ror	w23, w23, #10
  40be20:	add	w23, w30, w23
  40be24:	add	w4, w9, w3
  40be28:	eor	w3, w30, w23
  40be2c:	and	w3, w3, w25
  40be30:	eor	w3, w3, w30
  40be34:	add	w22, w3, w22
  40be38:	mov	w3, #0xc7aa                	// #51114
  40be3c:	add	w24, w24, w22
  40be40:	movk	w3, #0xe9b6, lsl #16
  40be44:	add	w22, w19, w3
  40be48:	ror	w24, w24, #27
  40be4c:	add	w24, w23, w24
  40be50:	eor	w3, w23, w24
  40be54:	and	w3, w3, w30
  40be58:	eor	w3, w3, w23
  40be5c:	add	w25, w3, w25
  40be60:	mov	w3, #0x105d                	// #4189
  40be64:	add	w5, w5, w25
  40be68:	movk	w3, #0xd62f, lsl #16
  40be6c:	add	w3, w17, w3
  40be70:	ror	w5, w5, #23
  40be74:	add	w5, w24, w5
  40be78:	eor	w25, w24, w5
  40be7c:	and	w25, w25, w23
  40be80:	eor	w25, w25, w24
  40be84:	add	w30, w25, w30
  40be88:	add	w30, w4, w30
  40be8c:	mov	w4, #0x1453                	// #5203
  40be90:	movk	w4, #0x244, lsl #16
  40be94:	add	w25, w6, w4
  40be98:	ror	w30, w30, #18
  40be9c:	add	w30, w5, w30
  40bea0:	eor	w4, w5, w30
  40bea4:	and	w4, w4, w24
  40bea8:	eor	w4, w4, w5
  40beac:	add	w23, w4, w23
  40beb0:	mov	w4, #0xe681                	// #59009
  40beb4:	add	w22, w22, w23
  40beb8:	movk	w4, #0xd8a1, lsl #16
  40bebc:	add	w4, w1, w4
  40bec0:	ror	w22, w22, #12
  40bec4:	add	w22, w30, w22
  40bec8:	eor	w23, w30, w22
  40becc:	and	w23, w23, w5
  40bed0:	eor	w23, w23, w30
  40bed4:	add	w24, w23, w24
  40bed8:	add	w24, w3, w24
  40bedc:	mov	w3, #0xfbc8                	// #64456
  40bee0:	movk	w3, #0xe7d3, lsl #16
  40bee4:	add	w23, w11, w3
  40bee8:	ror	w24, w24, #27
  40beec:	add	w24, w22, w24
  40bef0:	eor	w3, w22, w24
  40bef4:	and	w3, w3, w30
  40bef8:	eor	w3, w3, w22
  40befc:	add	w5, w3, w5
  40bf00:	mov	w3, #0xcde6                	// #52710
  40bf04:	add	w25, w25, w5
  40bf08:	movk	w3, #0x21e1, lsl #16
  40bf0c:	add	w3, w7, w3
  40bf10:	ror	w25, w25, #23
  40bf14:	add	w25, w24, w25
  40bf18:	eor	w5, w24, w25
  40bf1c:	and	w5, w5, w22
  40bf20:	eor	w5, w5, w24
  40bf24:	add	w30, w5, w30
  40bf28:	add	w30, w4, w30
  40bf2c:	mov	w4, #0x7d6                 	// #2006
  40bf30:	movk	w4, #0xc337, lsl #16
  40bf34:	add	w5, w21, w4
  40bf38:	ror	w30, w30, #18
  40bf3c:	add	w30, w25, w30
  40bf40:	eor	w4, w25, w30
  40bf44:	and	w4, w4, w24
  40bf48:	eor	w4, w4, w25
  40bf4c:	add	w22, w4, w22
  40bf50:	mov	w4, #0xd87                 	// #3463
  40bf54:	add	w23, w23, w22
  40bf58:	movk	w4, #0xf4d5, lsl #16
  40bf5c:	add	w4, w16, w4
  40bf60:	ror	w23, w23, #12
  40bf64:	add	w23, w30, w23
  40bf68:	eor	w22, w30, w23
  40bf6c:	and	w22, w22, w25
  40bf70:	eor	w22, w22, w30
  40bf74:	add	w24, w22, w24
  40bf78:	mov	w22, #0x14ed                	// #5357
  40bf7c:	add	w24, w3, w24
  40bf80:	movk	w22, #0x455a, lsl #16
  40bf84:	add	w22, w14, w22
  40bf88:	ror	w24, w24, #27
  40bf8c:	add	w24, w23, w24
  40bf90:	eor	w3, w23, w24
  40bf94:	and	w3, w3, w30
  40bf98:	eor	w3, w3, w23
  40bf9c:	add	w25, w3, w25
  40bfa0:	mov	w3, #0xe905                	// #59653
  40bfa4:	add	w5, w5, w25
  40bfa8:	movk	w3, #0xa9e3, lsl #16
  40bfac:	add	w3, w12, w3
  40bfb0:	ror	w5, w5, #23
  40bfb4:	add	w5, w24, w5
  40bfb8:	eor	w25, w24, w5
  40bfbc:	and	w25, w25, w23
  40bfc0:	eor	w25, w25, w24
  40bfc4:	add	w30, w25, w30
  40bfc8:	mov	w25, #0xa3f8                	// #41976
  40bfcc:	add	w4, w4, w30
  40bfd0:	movk	w25, #0xfcef, lsl #16
  40bfd4:	add	w25, w8, w25
  40bfd8:	ror	w4, w4, #18
  40bfdc:	add	w4, w5, w4
  40bfe0:	eor	w30, w5, w4
  40bfe4:	and	w30, w30, w24
  40bfe8:	eor	w30, w30, w5
  40bfec:	add	w23, w30, w23
  40bff0:	mov	w30, #0x2d9                 	// #729
  40bff4:	add	w23, w22, w23
  40bff8:	movk	w30, #0x676f, lsl #16
  40bffc:	add	w30, w18, w30
  40c000:	ror	w23, w23, #12
  40c004:	add	w23, w4, w23
  40c008:	eor	w22, w4, w23
  40c00c:	and	w22, w22, w5
  40c010:	eor	w22, w22, w4
  40c014:	add	w24, w22, w24
  40c018:	mov	w22, #0x4c8a                	// #19594
  40c01c:	add	w3, w3, w24
  40c020:	movk	w22, #0x8d2a, lsl #16
  40c024:	add	w22, w20, w22
  40c028:	ror	w3, w3, #27
  40c02c:	add	w3, w23, w3
  40c030:	eor	w24, w23, w3
  40c034:	and	w24, w24, w4
  40c038:	eor	w24, w24, w23
  40c03c:	add	w5, w24, w5
  40c040:	add	w25, w25, w5
  40c044:	sub	w5, w17, #0x5c, lsl #12
  40c048:	sub	w5, w5, #0x6be
  40c04c:	ror	w25, w25, #23
  40c050:	add	w25, w3, w25
  40c054:	eor	w24, w3, w25
  40c058:	and	w24, w24, w23
  40c05c:	eor	w24, w24, w3
  40c060:	add	w4, w24, w4
  40c064:	add	w4, w30, w4
  40c068:	ror	w24, w4, #18
  40c06c:	add	w24, w25, w24
  40c070:	eor	w4, w25, w24
  40c074:	and	w30, w4, w3
  40c078:	eor	w30, w30, w25
  40c07c:	add	w23, w30, w23
  40c080:	mov	w30, #0xf681                	// #63105
  40c084:	add	w22, w22, w23
  40c088:	movk	w30, #0x8771, lsl #16
  40c08c:	add	w30, w14, w30
  40c090:	ror	w22, w22, #12
  40c094:	add	w22, w24, w22
  40c098:	eor	w4, w4, w22
  40c09c:	add	w3, w4, w3
  40c0a0:	eor	w4, w24, w22
  40c0a4:	add	w23, w5, w3
  40c0a8:	mov	w3, #0x6122                	// #24866
  40c0ac:	movk	w3, #0x6d9d, lsl #16
  40c0b0:	add	w3, w9, w3
  40c0b4:	mov	w5, #0x380c                	// #14348
  40c0b8:	ror	w23, w23, #28
  40c0bc:	add	w23, w22, w23
  40c0c0:	movk	w5, #0xfde5, lsl #16
  40c0c4:	eor	w4, w4, w23
  40c0c8:	add	w5, w21, w5
  40c0cc:	add	w25, w4, w25
  40c0d0:	eor	w4, w22, w23
  40c0d4:	add	w30, w30, w25
  40c0d8:	mov	w25, #0xea44                	// #59972
  40c0dc:	movk	w25, #0xa4be, lsl #16
  40c0e0:	add	w25, w15, w25
  40c0e4:	ror	w30, w30, #21
  40c0e8:	add	w30, w23, w30
  40c0ec:	eor	w4, w4, w30
  40c0f0:	add	w4, w4, w24
  40c0f4:	eor	w24, w23, w30
  40c0f8:	add	w4, w3, w4
  40c0fc:	ror	w4, w4, #16
  40c100:	add	w4, w30, w4
  40c104:	eor	w3, w24, w4
  40c108:	mov	w24, #0x4b60                	// #19296
  40c10c:	add	w3, w3, w22
  40c110:	eor	w22, w30, w4
  40c114:	add	w5, w5, w3
  40c118:	mov	w3, #0xcfa9                	// #53161
  40c11c:	movk	w3, #0x4bde, lsl #16
  40c120:	add	w3, w11, w3
  40c124:	movk	w24, #0xf6bb, lsl #16
  40c128:	ror	w5, w5, #9
  40c12c:	add	w5, w4, w5
  40c130:	add	w24, w18, w24
  40c134:	eor	w22, w22, w5
  40c138:	add	w23, w22, w23
  40c13c:	eor	w22, w4, w5
  40c140:	add	w25, w25, w23
  40c144:	mov	w23, #0xbc70                	// #48240
  40c148:	movk	w23, #0xbebf, lsl #16
  40c14c:	add	w23, w6, w23
  40c150:	sub	w6, w6, #0x100, lsl #12
  40c154:	ror	w25, w25, #28
  40c158:	add	w25, w5, w25
  40c15c:	sub	w6, w6, #0xb83
  40c160:	eor	w22, w22, w25
  40c164:	add	w30, w22, w30
  40c168:	eor	w22, w5, w25
  40c16c:	add	w3, w3, w30
  40c170:	mov	w30, #0x27fa                	// #10234
  40c174:	movk	w30, #0xeaa1, lsl #16
  40c178:	add	w30, w19, w30
  40c17c:	ror	w3, w3, #21
  40c180:	add	w3, w25, w3
  40c184:	eor	w22, w22, w3
  40c188:	add	w22, w22, w4
  40c18c:	eor	w4, w25, w3
  40c190:	add	w24, w24, w22
  40c194:	mov	w22, #0x7ec6                	// #32454
  40c198:	movk	w22, #0x289b, lsl #16
  40c19c:	add	w22, w12, w22
  40c1a0:	ror	w24, w24, #16
  40c1a4:	add	w24, w3, w24
  40c1a8:	eor	w4, w4, w24
  40c1ac:	add	w5, w4, w5
  40c1b0:	eor	w4, w3, w24
  40c1b4:	add	w23, w23, w5
  40c1b8:	ror	w23, w23, #9
  40c1bc:	add	w23, w24, w23
  40c1c0:	eor	w4, w4, w23
  40c1c4:	eor	w5, w24, w23
  40c1c8:	add	w25, w4, w25
  40c1cc:	mov	w4, #0x3085                	// #12421
  40c1d0:	add	w22, w22, w25
  40c1d4:	movk	w4, #0xd4ef, lsl #16
  40c1d8:	add	w4, w16, w4
  40c1dc:	mov	w25, #0xd039                	// #53305
  40c1e0:	movk	w25, #0xd9d4, lsl #16
  40c1e4:	ror	w22, w22, #28
  40c1e8:	add	w22, w23, w22
  40c1ec:	add	w25, w7, w25
  40c1f0:	eor	w5, w5, w22
  40c1f4:	add	w5, w5, w3
  40c1f8:	eor	w3, w23, w22
  40c1fc:	add	w5, w30, w5
  40c200:	mov	w30, #0x1d05                	// #7429
  40c204:	movk	w30, #0x488, lsl #16
  40c208:	add	w30, w13, w30
  40c20c:	ror	w5, w5, #21
  40c210:	add	w5, w22, w5
  40c214:	eor	w3, w3, w5
  40c218:	add	w24, w3, w24
  40c21c:	eor	w3, w22, w5
  40c220:	add	w4, w4, w24
  40c224:	mov	w24, #0x99e5                	// #39397
  40c228:	movk	w24, #0xe6db, lsl #16
  40c22c:	add	w24, w20, w24
  40c230:	ror	w4, w4, #16
  40c234:	add	w4, w5, w4
  40c238:	eor	w3, w3, w4
  40c23c:	add	w23, w3, w23
  40c240:	eor	w3, w5, w4
  40c244:	add	w23, w30, w23
  40c248:	mov	w30, #0xff97                	// #65431
  40c24c:	movk	w30, #0x432a, lsl #16
  40c250:	add	w18, w18, w30
  40c254:	ror	w23, w23, #9
  40c258:	add	w23, w4, w23
  40c25c:	eor	w3, w3, w23
  40c260:	add	w22, w3, w22
  40c264:	eor	w3, w4, w23
  40c268:	add	w22, w25, w22
  40c26c:	mov	w25, #0x7cf8                	// #31992
  40c270:	movk	w25, #0x1fa2, lsl #16
  40c274:	add	w25, w1, w25
  40c278:	ror	w22, w22, #28
  40c27c:	add	w22, w23, w22
  40c280:	eor	w3, w3, w22
  40c284:	add	w5, w3, w5
  40c288:	eor	w3, w23, w22
  40c28c:	add	w5, w24, w5
  40c290:	mov	w24, #0x5665                	// #22117
  40c294:	movk	w24, #0xc4ac, lsl #16
  40c298:	add	w24, w8, w24
  40c29c:	ror	w5, w5, #21
  40c2a0:	add	w5, w22, w5
  40c2a4:	eor	w3, w3, w5
  40c2a8:	add	w3, w3, w4
  40c2ac:	eor	w4, w22, w5
  40c2b0:	add	w3, w25, w3
  40c2b4:	mov	w25, #0x2244                	// #8772
  40c2b8:	movk	w25, #0xf429, lsl #16
  40c2bc:	add	w19, w19, w25
  40c2c0:	mov	w25, #0x23a7                	// #9127
  40c2c4:	ror	w3, w3, #16
  40c2c8:	add	w3, w5, w3
  40c2cc:	movk	w25, #0xab94, lsl #16
  40c2d0:	eor	w4, w4, w3
  40c2d4:	add	w21, w21, w25
  40c2d8:	add	w23, w4, w23
  40c2dc:	mov	w4, #0xa039                	// #41017
  40c2e0:	add	w24, w24, w23
  40c2e4:	movk	w4, #0xfc93, lsl #16
  40c2e8:	add	w17, w17, w4
  40c2ec:	mov	w4, #0x59c3                	// #22979
  40c2f0:	movk	w4, #0x655b, lsl #16
  40c2f4:	ror	w24, w24, #9
  40c2f8:	add	w24, w3, w24
  40c2fc:	add	w20, w20, w4
  40c300:	orn	w4, w24, w5
  40c304:	mov	w23, #0xcc92                	// #52370
  40c308:	eor	w4, w4, w3
  40c30c:	movk	w23, #0x8f0c, lsl #16
  40c310:	add	w22, w4, w22
  40c314:	mov	w4, #0x5dd1                	// #24017
  40c318:	add	w19, w19, w22
  40c31c:	movk	w4, #0x8584, lsl #16
  40c320:	add	w15, w15, w4
  40c324:	mov	w4, #0x7e4f                	// #32335
  40c328:	movk	w4, #0x6fa8, lsl #16
  40c32c:	ror	w19, w19, #26
  40c330:	add	w19, w24, w19
  40c334:	add	w14, w14, w4
  40c338:	orn	w22, w19, w3
  40c33c:	mov	w4, #0xe6e0                	// #59104
  40c340:	movk	w4, #0xfe2c, lsl #16
  40c344:	add	w4, w1, w4
  40c348:	eor	w1, w22, w24
  40c34c:	add	w16, w16, w23
  40c350:	add	w5, w1, w5
  40c354:	mov	w22, #0x4314                	// #17172
  40c358:	add	w18, w18, w5
  40c35c:	movk	w22, #0xa301, lsl #16
  40c360:	add	w13, w13, w22
  40c364:	mov	w1, #0x11a1                	// #4513
  40c368:	movk	w1, #0x4e08, lsl #16
  40c36c:	ror	w18, w18, #22
  40c370:	add	w18, w19, w18
  40c374:	add	w12, w12, w1
  40c378:	orn	w5, w18, w24
  40c37c:	mov	w1, #0x7e82                	// #32386
  40c380:	eor	w5, w5, w19
  40c384:	movk	w1, #0xf753, lsl #16
  40c388:	add	w3, w5, w3
  40c38c:	add	w1, w11, w1
  40c390:	add	w21, w21, w3
  40c394:	mov	w3, #0xd391                	// #54161
  40c398:	movk	w3, #0xeb86, lsl #16
  40c39c:	add	w7, w7, w3
  40c3a0:	mov	w11, #0xf235                	// #62005
  40c3a4:	ror	w21, w21, #17
  40c3a8:	add	w21, w18, w21
  40c3ac:	movk	w11, #0xbd3a, lsl #16
  40c3b0:	orn	w3, w21, w19
  40c3b4:	add	w9, w9, w11
  40c3b8:	eor	w3, w3, w18
  40c3bc:	mov	w5, #0xd2bb                	// #53947
  40c3c0:	add	w24, w3, w24
  40c3c4:	movk	w5, #0x2ad7, lsl #16
  40c3c8:	add	w17, w17, w24
  40c3cc:	add	w8, w8, w5
  40c3d0:	ror	w17, w17, #11
  40c3d4:	add	w17, w21, w17
  40c3d8:	orn	w3, w17, w18
  40c3dc:	eor	w3, w3, w21
  40c3e0:	add	w19, w3, w19
  40c3e4:	add	w20, w20, w19
  40c3e8:	ror	w20, w20, #26
  40c3ec:	add	w20, w17, w20
  40c3f0:	orn	w3, w20, w21
  40c3f4:	eor	w3, w3, w17
  40c3f8:	add	w18, w3, w18
  40c3fc:	add	w16, w16, w18
  40c400:	ror	w16, w16, #22
  40c404:	add	w16, w20, w16
  40c408:	orn	w3, w16, w17
  40c40c:	eor	w3, w3, w20
  40c410:	add	w21, w3, w21
  40c414:	add	w6, w6, w21
  40c418:	ror	w6, w6, #17
  40c41c:	add	w6, w16, w6
  40c420:	orn	w3, w6, w20
  40c424:	eor	w3, w3, w16
  40c428:	add	w17, w3, w17
  40c42c:	add	w15, w15, w17
  40c430:	ror	w15, w15, #11
  40c434:	add	w15, w6, w15
  40c438:	orn	w3, w15, w16
  40c43c:	eor	w3, w3, w6
  40c440:	add	w20, w3, w20
  40c444:	add	w14, w14, w20
  40c448:	ror	w14, w14, #26
  40c44c:	add	w14, w15, w14
  40c450:	orn	w3, w14, w6
  40c454:	eor	w3, w3, w15
  40c458:	add	w16, w3, w16
  40c45c:	add	w4, w4, w16
  40c460:	ror	w4, w4, #22
  40c464:	add	w4, w14, w4
  40c468:	orn	w3, w4, w15
  40c46c:	eor	w3, w3, w14
  40c470:	add	w6, w3, w6
  40c474:	add	w13, w13, w6
  40c478:	ror	w13, w13, #17
  40c47c:	add	w13, w4, w13
  40c480:	orn	w3, w13, w14
  40c484:	eor	w3, w3, w4
  40c488:	add	w15, w3, w15
  40c48c:	add	w12, w12, w15
  40c490:	ror	w12, w12, #11
  40c494:	add	w12, w13, w12
  40c498:	orn	w3, w12, w4
  40c49c:	eor	w3, w3, w13
  40c4a0:	add	w14, w3, w14
  40c4a4:	add	w1, w1, w14
  40c4a8:	ror	w1, w1, #26
  40c4ac:	add	w1, w12, w1
  40c4b0:	fmov	s3, w1
  40c4b4:	orn	w3, w1, w13
  40c4b8:	eor	w3, w3, w12
  40c4bc:	add	v2.2s, v2.2s, v3.2s
  40c4c0:	add	w4, w3, w4
  40c4c4:	add	w9, w9, w4
  40c4c8:	ror	w9, w9, #22
  40c4cc:	add	w9, w1, w9
  40c4d0:	fmov	s3, w9
  40c4d4:	orn	w3, w9, w12
  40c4d8:	eor	w3, w3, w1
  40c4dc:	add	v1.2s, v1.2s, v3.2s
  40c4e0:	add	w13, w3, w13
  40c4e4:	add	w8, w8, w13
  40c4e8:	ror	w8, w8, #17
  40c4ec:	add	w8, w9, w8
  40c4f0:	fmov	s3, w8
  40c4f4:	orn	w1, w8, w1
  40c4f8:	eor	w1, w1, w9
  40c4fc:	add	v0.2s, v0.2s, v3.2s
  40c500:	add	w1, w1, w12
  40c504:	add	w7, w7, w1
  40c508:	ror	w7, w7, #11
  40c50c:	add	w8, w8, w7
  40c510:	add	w10, w10, w8
  40c514:	b.hi	40bb50 <ferror@plt+0x8d10>  // b.pmore
  40c518:	ldp	x19, x20, [sp, #16]
  40c51c:	ldp	x21, x22, [sp, #32]
  40c520:	ldp	x23, x24, [sp, #48]
  40c524:	ldp	x27, x28, [sp, #80]
  40c528:	mov	v2.s[1], w10
  40c52c:	ldp	x25, x26, [sp, #64]
  40c530:	ldp	x29, x30, [sp], #96
  40c534:	mov	v2.s[2], v0.s[0]
  40c538:	mov	v2.s[3], v1.s[0]
  40c53c:	str	q2, [x2]
  40c540:	ret
  40c544:	nop
  40c548:	stp	x29, x30, [sp, #-48]!
  40c54c:	mov	x9, #0x80                  	// #128
  40c550:	mov	x2, #0x38                  	// #56
  40c554:	mov	x29, sp
  40c558:	ldr	w3, [x0, #24]
  40c55c:	mov	x8, #0x78                  	// #120
  40c560:	stp	x19, x20, [sp, #16]
  40c564:	mov	x19, x0
  40c568:	ldr	w0, [x0, #16]
  40c56c:	cmp	w3, #0x38
  40c570:	stp	x21, x22, [sp, #32]
  40c574:	csel	x2, x2, x8, cc  // cc = lo, ul, last
  40c578:	mov	x21, #0x40                  	// #64
  40c57c:	mov	x4, #0xf                   	// #15
  40c580:	csel	x21, x21, x9, cc  // cc = lo, ul, last
  40c584:	mov	x7, #0x1f                  	// #31
  40c588:	mov	x5, #0xe                   	// #14
  40c58c:	csel	x4, x4, x7, cc  // cc = lo, ul, last
  40c590:	mov	x6, #0x1e                  	// #30
  40c594:	csel	x5, x5, x6, cc  // cc = lo, ul, last
  40c598:	adds	w0, w0, w3
  40c59c:	str	w0, [x19, #16]
  40c5a0:	mov	x20, x1
  40c5a4:	ldr	w1, [x19, #20]
  40c5a8:	b.cc	40c5b4 <ferror@plt+0x9774>  // b.lo, b.ul, b.last
  40c5ac:	add	w1, w1, #0x1
  40c5b0:	str	w1, [x19, #20]
  40c5b4:	add	x5, x19, x5, lsl #2
  40c5b8:	add	x4, x19, x4, lsl #2
  40c5bc:	lsl	w6, w0, #3
  40c5c0:	extr	w1, w1, w0, #29
  40c5c4:	add	x22, x19, #0x1c
  40c5c8:	mov	w0, w3
  40c5cc:	str	w6, [x5, #28]
  40c5d0:	sub	x2, x2, x0
  40c5d4:	str	w1, [x4, #28]
  40c5d8:	add	x0, x22, x0
  40c5dc:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x26c8>
  40c5e0:	add	x1, x1, #0x7c0
  40c5e4:	bl	402720 <memcpy@plt>
  40c5e8:	mov	x2, x19
  40c5ec:	mov	x1, x21
  40c5f0:	mov	x0, x22
  40c5f4:	bl	40baf0 <ferror@plt+0x8cb0>
  40c5f8:	ldr	w0, [x19]
  40c5fc:	str	w0, [x20]
  40c600:	mov	x0, x20
  40c604:	ldr	w1, [x19, #4]
  40c608:	str	w1, [x20, #4]
  40c60c:	ldr	w1, [x19, #8]
  40c610:	str	w1, [x20, #8]
  40c614:	ldr	w1, [x19, #12]
  40c618:	str	w1, [x20, #12]
  40c61c:	ldp	x19, x20, [sp, #16]
  40c620:	ldp	x21, x22, [sp, #32]
  40c624:	ldp	x29, x30, [sp], #48
  40c628:	ret
  40c62c:	nop
  40c630:	stp	x29, x30, [sp, #-64]!
  40c634:	mov	x29, sp
  40c638:	stp	x19, x20, [sp, #16]
  40c63c:	mov	x19, x0
  40c640:	ldr	w0, [x2, #24]
  40c644:	stp	x21, x22, [sp, #32]
  40c648:	mov	x21, x2
  40c64c:	mov	x22, x1
  40c650:	cbnz	w0, 40c730 <ferror@plt+0x98f0>
  40c654:	cmp	x22, #0x3f
  40c658:	b.ls	40c71c <ferror@plt+0x98dc>  // b.plast
  40c65c:	tst	x19, #0x3
  40c660:	b.eq	40c704 <ferror@plt+0x98c4>  // b.none
  40c664:	stp	x23, x24, [sp, #48]
  40c668:	cmp	x22, #0x40
  40c66c:	add	x20, x21, #0x1c
  40c670:	b.eq	40c7e0 <ferror@plt+0x99a0>  // b.none
  40c674:	sub	x24, x22, #0x41
  40c678:	lsr	x24, x24, #6
  40c67c:	add	x23, x24, #0x1
  40c680:	add	x23, x19, x23, lsl #6
  40c684:	nop
  40c688:	ldp	x0, x1, [x19]
  40c68c:	stp	x0, x1, [x20]
  40c690:	mov	x2, x21
  40c694:	ldp	x0, x1, [x19, #16]
  40c698:	stp	x0, x1, [x20, #16]
  40c69c:	ldp	x4, x5, [x19, #32]
  40c6a0:	stp	x4, x5, [x20, #32]
  40c6a4:	mov	x1, #0x40                  	// #64
  40c6a8:	ldp	x4, x5, [x19, #48]
  40c6ac:	stp	x4, x5, [x20, #48]
  40c6b0:	add	x19, x19, x1
  40c6b4:	mov	x0, x20
  40c6b8:	bl	40baf0 <ferror@plt+0x8cb0>
  40c6bc:	cmp	x19, x23
  40c6c0:	b.ne	40c688 <ferror@plt+0x9848>  // b.any
  40c6c4:	sub	x22, x22, #0x40
  40c6c8:	sub	x22, x22, x24, lsl #6
  40c6cc:	ldr	w19, [x21, #24]
  40c6d0:	mov	x1, x23
  40c6d4:	mov	x2, x22
  40c6d8:	add	x0, x20, x19
  40c6dc:	add	x19, x19, x22
  40c6e0:	bl	402720 <memcpy@plt>
  40c6e4:	cmp	x19, #0x3f
  40c6e8:	b.hi	40c780 <ferror@plt+0x9940>  // b.pmore
  40c6ec:	ldp	x23, x24, [sp, #48]
  40c6f0:	str	w19, [x21, #24]
  40c6f4:	ldp	x19, x20, [sp, #16]
  40c6f8:	ldp	x21, x22, [sp, #32]
  40c6fc:	ldp	x29, x30, [sp], #64
  40c700:	ret
  40c704:	and	x1, x22, #0xffffffffffffffc0
  40c708:	mov	x0, x19
  40c70c:	and	x22, x22, #0x3f
  40c710:	add	x19, x19, x1
  40c714:	mov	x2, x21
  40c718:	bl	40baf0 <ferror@plt+0x8cb0>
  40c71c:	cbnz	x22, 40c7e8 <ferror@plt+0x99a8>
  40c720:	ldp	x19, x20, [sp, #16]
  40c724:	ldp	x21, x22, [sp, #32]
  40c728:	ldp	x29, x30, [sp], #64
  40c72c:	ret
  40c730:	mov	w20, w0
  40c734:	stp	x23, x24, [sp, #48]
  40c738:	mov	x23, #0x80                  	// #128
  40c73c:	sub	x23, x23, x20
  40c740:	add	x24, x2, #0x1c
  40c744:	cmp	x23, x1
  40c748:	add	x0, x24, x20
  40c74c:	csel	x23, x23, x1, ls  // ls = plast
  40c750:	mov	x1, x19
  40c754:	mov	x2, x23
  40c758:	bl	402720 <memcpy@plt>
  40c75c:	ldr	w1, [x21, #24]
  40c760:	add	w1, w1, w23
  40c764:	str	w1, [x21, #24]
  40c768:	cmp	w1, #0x40
  40c76c:	b.hi	40c7a8 <ferror@plt+0x9968>  // b.pmore
  40c770:	add	x19, x19, x23
  40c774:	sub	x22, x22, x23
  40c778:	ldp	x23, x24, [sp, #48]
  40c77c:	b	40c654 <ferror@plt+0x9814>
  40c780:	mov	x2, x21
  40c784:	mov	x0, x20
  40c788:	sub	x19, x19, #0x40
  40c78c:	mov	x1, #0x40                  	// #64
  40c790:	bl	40baf0 <ferror@plt+0x8cb0>
  40c794:	mov	x0, x20
  40c798:	mov	x2, x19
  40c79c:	add	x1, x21, #0x5c
  40c7a0:	bl	402720 <memcpy@plt>
  40c7a4:	b	40c6ec <ferror@plt+0x98ac>
  40c7a8:	mov	x2, x21
  40c7ac:	mov	x0, x24
  40c7b0:	and	x1, x1, #0xffffffc0
  40c7b4:	bl	40baf0 <ferror@plt+0x8cb0>
  40c7b8:	ldr	w2, [x21, #24]
  40c7bc:	add	x0, x20, x23
  40c7c0:	and	x1, x0, #0xffffffffffffffc0
  40c7c4:	mov	x0, x24
  40c7c8:	and	w2, w2, #0x3f
  40c7cc:	str	w2, [x21, #24]
  40c7d0:	add	x1, x24, x1
  40c7d4:	and	x2, x2, #0x3f
  40c7d8:	bl	402720 <memcpy@plt>
  40c7dc:	b	40c770 <ferror@plt+0x9930>
  40c7e0:	mov	x23, x19
  40c7e4:	b	40c6cc <ferror@plt+0x988c>
  40c7e8:	add	x20, x21, #0x1c
  40c7ec:	stp	x23, x24, [sp, #48]
  40c7f0:	mov	x23, x19
  40c7f4:	b	40c6cc <ferror@plt+0x988c>
  40c7f8:	stp	x29, x30, [sp, #-224]!
  40c7fc:	mov	x29, sp
  40c800:	stp	x19, x20, [sp, #16]
  40c804:	mov	x20, x0
  40c808:	mov	x0, #0x8048                	// #32840
  40c80c:	str	x23, [sp, #48]
  40c810:	mov	x23, x1
  40c814:	bl	4028e0 <malloc@plt>
  40c818:	cbz	x0, 40c8f0 <ferror@plt+0x9ab0>
  40c81c:	stp	x21, x22, [sp, #32]
  40c820:	mov	x21, x0
  40c824:	adrp	x0, 418000 <_obstack_memory_used@@Base+0x26c8>
  40c828:	mov	x22, #0x8000                	// #32768
  40c82c:	str	xzr, [sp, #80]
  40c830:	ldr	q0, [x0, #1968]
  40c834:	str	wzr, [sp, #88]
  40c838:	str	q0, [sp, #64]
  40c83c:	mov	x19, #0x0                   	// #0
  40c840:	b	40c858 <ferror@plt+0x9a18>
  40c844:	bl	402af0 <fread_unlocked@plt>
  40c848:	add	x19, x19, x0
  40c84c:	cmp	x19, #0x8, lsl #12
  40c850:	b.eq	40c8a0 <ferror@plt+0x9a60>  // b.none
  40c854:	cbz	x0, 40c8b4 <ferror@plt+0x9a74>
  40c858:	ldr	w4, [x20]
  40c85c:	sub	x2, x22, x19
  40c860:	add	x0, x21, x19
  40c864:	mov	x3, x20
  40c868:	mov	x1, #0x1                   	// #1
  40c86c:	tbz	w4, #4, 40c844 <ferror@plt+0x9a04>
  40c870:	cbnz	x19, 40c8dc <ferror@plt+0x9a9c>
  40c874:	mov	x1, x23
  40c878:	add	x0, sp, #0x40
  40c87c:	bl	40c548 <ferror@plt+0x9708>
  40c880:	mov	x0, x21
  40c884:	bl	402ba0 <free@plt>
  40c888:	ldp	x21, x22, [sp, #32]
  40c88c:	mov	w0, #0x0                   	// #0
  40c890:	ldp	x19, x20, [sp, #16]
  40c894:	ldr	x23, [sp, #48]
  40c898:	ldp	x29, x30, [sp], #224
  40c89c:	ret
  40c8a0:	mov	x1, x19
  40c8a4:	add	x2, sp, #0x40
  40c8a8:	mov	x0, x21
  40c8ac:	bl	40baf0 <ferror@plt+0x8cb0>
  40c8b0:	b	40c83c <ferror@plt+0x99fc>
  40c8b4:	ldr	w0, [x20]
  40c8b8:	tbz	w0, #5, 40c870 <ferror@plt+0x9a30>
  40c8bc:	mov	x0, x21
  40c8c0:	bl	402ba0 <free@plt>
  40c8c4:	mov	w0, #0x1                   	// #1
  40c8c8:	ldp	x19, x20, [sp, #16]
  40c8cc:	ldp	x21, x22, [sp, #32]
  40c8d0:	ldr	x23, [sp, #48]
  40c8d4:	ldp	x29, x30, [sp], #224
  40c8d8:	ret
  40c8dc:	mov	x1, x19
  40c8e0:	add	x2, sp, #0x40
  40c8e4:	mov	x0, x21
  40c8e8:	bl	40c630 <ferror@plt+0x97f0>
  40c8ec:	b	40c874 <ferror@plt+0x9a34>
  40c8f0:	mov	w0, #0x1                   	// #1
  40c8f4:	b	40c890 <ferror@plt+0x9a50>
  40c8f8:	stp	x29, x30, [sp, #-208]!
  40c8fc:	adrp	x3, 418000 <_obstack_memory_used@@Base+0x26c8>
  40c900:	mov	x29, sp
  40c904:	ldr	q0, [x3, #1968]
  40c908:	stp	x19, x20, [sp, #16]
  40c90c:	mov	x19, x2
  40c910:	add	x2, sp, #0x30
  40c914:	str	x21, [sp, #32]
  40c918:	str	q0, [sp, #48]
  40c91c:	mov	x20, #0x40                  	// #64
  40c920:	str	xzr, [sp, #64]
  40c924:	str	wzr, [sp, #72]
  40c928:	bl	40c630 <ferror@plt+0x97f0>
  40c92c:	ldr	w0, [sp, #72]
  40c930:	mov	x3, #0x80                  	// #128
  40c934:	mov	x1, #0x78                  	// #120
  40c938:	mov	x4, #0x1f                  	// #31
  40c93c:	cmp	w0, #0x38
  40c940:	mov	x5, #0x1e                  	// #30
  40c944:	csel	x20, x20, x3, cc  // cc = lo, ul, last
  40c948:	mov	x2, #0x38                  	// #56
  40c94c:	mov	x3, #0xf                   	// #15
  40c950:	csel	x2, x2, x1, cc  // cc = lo, ul, last
  40c954:	csel	x3, x3, x4, cc  // cc = lo, ul, last
  40c958:	mov	x4, #0xe                   	// #14
  40c95c:	csel	x4, x4, x5, cc  // cc = lo, ul, last
  40c960:	ldp	w1, w5, [sp, #64]
  40c964:	adds	w1, w0, w1
  40c968:	str	w1, [sp, #64]
  40c96c:	b.cc	40c978 <ferror@plt+0x9b38>  // b.lo, b.ul, b.last
  40c970:	add	w5, w5, #0x1
  40c974:	str	w5, [sp, #68]
  40c978:	add	x6, sp, #0x3c
  40c97c:	add	x4, x4, #0x4
  40c980:	lsl	w7, w1, #3
  40c984:	extr	w5, w5, w1, #29
  40c988:	add	x3, x3, #0x4
  40c98c:	add	x21, sp, #0x4c
  40c990:	mov	w0, w0
  40c994:	str	w7, [x6, x4, lsl #2]
  40c998:	sub	x2, x2, x0
  40c99c:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x26c8>
  40c9a0:	add	x0, x21, x0
  40c9a4:	add	x1, x1, #0x7c0
  40c9a8:	str	w5, [x6, x3, lsl #2]
  40c9ac:	bl	402720 <memcpy@plt>
  40c9b0:	add	x2, sp, #0x30
  40c9b4:	mov	x1, x20
  40c9b8:	mov	x0, x21
  40c9bc:	bl	40baf0 <ferror@plt+0x8cb0>
  40c9c0:	ldr	q0, [sp, #48]
  40c9c4:	mov	x0, x19
  40c9c8:	str	q0, [x19]
  40c9cc:	ldp	x19, x20, [sp, #16]
  40c9d0:	ldr	x21, [sp, #32]
  40c9d4:	ldp	x29, x30, [sp], #208
  40c9d8:	ret
  40c9dc:	nop
  40c9e0:	b	402ab0 <posix_fadvise@plt>
  40c9e4:	nop
  40c9e8:	cbz	x0, 40ca18 <ferror@plt+0x9bd8>
  40c9ec:	stp	x29, x30, [sp, #-32]!
  40c9f0:	mov	x29, sp
  40c9f4:	str	x19, [sp, #16]
  40c9f8:	mov	w19, w1
  40c9fc:	bl	402880 <fileno@plt>
  40ca00:	mov	w3, w19
  40ca04:	mov	x2, #0x0                   	// #0
  40ca08:	ldr	x19, [sp, #16]
  40ca0c:	mov	x1, #0x0                   	// #0
  40ca10:	ldp	x29, x30, [sp], #32
  40ca14:	b	402ab0 <posix_fadvise@plt>
  40ca18:	ret
  40ca1c:	nop
  40ca20:	stp	x29, x30, [sp, #-80]!
  40ca24:	mov	x29, sp
  40ca28:	stp	x19, x20, [sp, #16]
  40ca2c:	mov	x20, x0
  40ca30:	mov	x19, x1
  40ca34:	stp	x21, x22, [sp, #32]
  40ca38:	bl	402b50 <strcmp@plt>
  40ca3c:	mov	w21, w0
  40ca40:	cbz	w0, 40ca7c <ferror@plt+0x9c3c>
  40ca44:	ldrb	w1, [x20]
  40ca48:	cbz	w1, 40cd68 <ferror@plt+0x9f28>
  40ca4c:	ldrb	w2, [x19]
  40ca50:	cbz	w2, 40ca78 <ferror@plt+0x9c38>
  40ca54:	cmp	w1, #0x2e
  40ca58:	b.ne	40ca64 <ferror@plt+0x9c24>  // b.any
  40ca5c:	ldrb	w0, [x20, #1]
  40ca60:	cbz	w0, 40cd68 <ferror@plt+0x9f28>
  40ca64:	ldrb	w0, [x19]
  40ca68:	cmp	w0, #0x2e
  40ca6c:	b.ne	40ca90 <ferror@plt+0x9c50>  // b.any
  40ca70:	ldrb	w0, [x19, #1]
  40ca74:	cbnz	w0, 40ca90 <ferror@plt+0x9c50>
  40ca78:	mov	w21, #0x1                   	// #1
  40ca7c:	mov	w0, w21
  40ca80:	ldp	x19, x20, [sp, #16]
  40ca84:	ldp	x21, x22, [sp, #32]
  40ca88:	ldp	x29, x30, [sp], #80
  40ca8c:	ret
  40ca90:	ldrb	w3, [x20]
  40ca94:	mov	w0, #0x2e                  	// #46
  40ca98:	cmp	w0, w3
  40ca9c:	b.ne	40cab4 <ferror@plt+0x9c74>  // b.any
  40caa0:	ldrb	w3, [x20, #1]
  40caa4:	cmp	w0, w3
  40caa8:	b.ne	40cab4 <ferror@plt+0x9c74>  // b.any
  40caac:	ldrb	w0, [x20, #2]
  40cab0:	cbz	w0, 40cd68 <ferror@plt+0x9f28>
  40cab4:	ldrb	w3, [x19]
  40cab8:	mov	w0, #0x2e                  	// #46
  40cabc:	cmp	w0, w3
  40cac0:	b.eq	40ccc4 <ferror@plt+0x9e84>  // b.none
  40cac4:	cmp	w1, #0x2e
  40cac8:	cset	w0, eq  // eq = none
  40cacc:	cmp	w2, #0x2e
  40cad0:	ccmp	w0, #0x0, #0x4, ne  // ne = any
  40cad4:	b.ne	40cd68 <ferror@plt+0x9f28>  // b.any
  40cad8:	cmp	w2, #0x2e
  40cadc:	cset	w3, eq  // eq = none
  40cae0:	cmp	w1, #0x2e
  40cae4:	ccmp	w3, #0x0, #0x4, ne  // ne = any
  40cae8:	b.ne	40ca78 <ferror@plt+0x9c38>  // b.any
  40caec:	stp	x23, x24, [sp, #48]
  40caf0:	cmp	w0, #0x0
  40caf4:	ccmp	w3, #0x0, #0x4, ne  // ne = any
  40caf8:	str	x25, [sp, #64]
  40cafc:	ldrb	w0, [x20, #1]
  40cb00:	b.ne	40cf40 <ferror@plt+0xa100>  // b.any
  40cb04:	mov	x22, x20
  40cb08:	cmp	w1, #0x2e
  40cb0c:	mov	x5, #0x0                   	// #0
  40cb10:	b.eq	40cd94 <ferror@plt+0x9f54>  // b.none
  40cb14:	nop
  40cb18:	sub	w3, w1, #0x30
  40cb1c:	sub	w0, w1, #0x61
  40cb20:	mov	x6, x22
  40cb24:	and	w3, w3, #0xff
  40cb28:	and	w0, w0, #0xff
  40cb2c:	add	x22, x22, #0x1
  40cb30:	cmp	w1, #0x5a
  40cb34:	b.hi	40cd70 <ferror@plt+0x9f30>  // b.pmore
  40cb38:	cmp	w1, #0x40
  40cb3c:	b.hi	40cd80 <ferror@plt+0x9f40>  // b.pmore
  40cb40:	cmp	w3, #0x9
  40cb44:	b.ls	40cd80 <ferror@plt+0x9f40>  // b.plast
  40cb48:	ldrb	w1, [x22]
  40cb4c:	mov	x5, #0x0                   	// #0
  40cb50:	cmp	w1, #0x2e
  40cb54:	cbz	w1, 40cf58 <ferror@plt+0xa118>
  40cb58:	b.ne	40cb18 <ferror@plt+0x9cd8>  // b.any
  40cb5c:	ldrb	w0, [x6, #2]
  40cb60:	mov	x5, x22
  40cb64:	add	x4, x6, #0x2
  40cb68:	cbnz	w0, 40cda0 <ferror@plt+0x9f60>
  40cb6c:	mov	x22, x4
  40cb70:	cbz	w2, 40cfe4 <ferror@plt+0xa1a4>
  40cb74:	mov	x23, x19
  40cb78:	mov	x24, #0x0                   	// #0
  40cb7c:	nop
  40cb80:	cmp	w2, #0x2e
  40cb84:	b.eq	40ce3c <ferror@plt+0x9ffc>  // b.none
  40cb88:	sub	w1, w2, #0x30
  40cb8c:	sub	w0, w2, #0x61
  40cb90:	mov	x4, x23
  40cb94:	and	w1, w1, #0xff
  40cb98:	and	w0, w0, #0xff
  40cb9c:	add	x23, x23, #0x1
  40cba0:	cmp	w2, #0x5a
  40cba4:	b.hi	40ce04 <ferror@plt+0x9fc4>  // b.pmore
  40cba8:	cmp	w2, #0x40
  40cbac:	b.hi	40ce30 <ferror@plt+0x9ff0>  // b.pmore
  40cbb0:	cmp	w1, #0x9
  40cbb4:	b.ls	40ce30 <ferror@plt+0x9ff0>  // b.plast
  40cbb8:	ldrb	w2, [x23]
  40cbbc:	cbz	w2, 40cfb0 <ferror@plt+0xa170>
  40cbc0:	cmp	w2, #0x2e
  40cbc4:	mov	x24, #0x0                   	// #0
  40cbc8:	b.ne	40cb88 <ferror@plt+0x9d48>  // b.any
  40cbcc:	ldrb	w1, [x4, #2]
  40cbd0:	mov	x24, x23
  40cbd4:	add	x3, x4, #0x2
  40cbd8:	cbnz	w1, 40ce4c <ferror@plt+0xa00c>
  40cbdc:	mov	x23, x3
  40cbe0:	sub	x25, x5, x20
  40cbe4:	cbz	x5, 40d004 <ferror@plt+0xa1c4>
  40cbe8:	sub	x24, x24, x19
  40cbec:	cmp	x25, x24
  40cbf0:	b.eq	40cfc0 <ferror@plt+0xa180>  // b.none
  40cbf4:	mov	x0, #0x0                   	// #0
  40cbf8:	mov	x3, #0x0                   	// #0
  40cbfc:	cmp	x25, x3
  40cc00:	ccmp	x24, x0, #0x2, ls  // ls = plast
  40cc04:	b.ls	40d018 <ferror@plt+0xa1d8>  // b.plast
  40cc08:	sub	x6, x0, x3
  40cc0c:	cmp	x25, x3
  40cc10:	b.ls	40cc74 <ferror@plt+0x9e34>  // b.plast
  40cc14:	ldrb	w4, [x20, x3]
  40cc18:	sub	w1, w4, #0x30
  40cc1c:	cmp	w1, #0x9
  40cc20:	b.ls	40cc74 <ferror@plt+0x9e34>  // b.plast
  40cc24:	mov	w5, w4
  40cc28:	cmp	w4, #0x5a
  40cc2c:	b.hi	40cee0 <ferror@plt+0xa0a0>  // b.pmore
  40cc30:	cmp	w4, #0x40
  40cc34:	b.hi	40cea8 <ferror@plt+0xa068>  // b.pmore
  40cc38:	add	w5, w4, #0x100
  40cc3c:	add	x1, x3, x6
  40cc40:	cmp	x24, x1
  40cc44:	b.eq	40cf20 <ferror@plt+0xa0e0>  // b.none
  40cc48:	ldrb	w1, [x19, x0]
  40cc4c:	sub	w2, w1, #0x30
  40cc50:	cmp	w2, #0x9
  40cc54:	mov	w2, #0x0                   	// #0
  40cc58:	b.hi	40cca8 <ferror@plt+0x9e68>  // b.pmore
  40cc5c:	cmp	w2, w5
  40cc60:	b.ne	40cf18 <ferror@plt+0xa0d8>  // b.any
  40cc64:	add	x3, x3, #0x1
  40cc68:	add	x0, x0, #0x1
  40cc6c:	cmp	x25, x3
  40cc70:	b.hi	40cc14 <ferror@plt+0x9dd4>  // b.pmore
  40cc74:	ldrb	w1, [x19, x0]
  40cc78:	cmp	x24, x0
  40cc7c:	b.ls	40cce0 <ferror@plt+0x9ea0>  // b.plast
  40cc80:	sub	w2, w1, #0x30
  40cc84:	cmp	w2, #0x9
  40cc88:	b.ls	40cce0 <ferror@plt+0x9ea0>  // b.plast
  40cc8c:	cmp	x25, x3
  40cc90:	b.eq	40cf10 <ferror@plt+0xa0d0>  // b.none
  40cc94:	ldrb	w4, [x20, x3]
  40cc98:	mov	w5, #0x0                   	// #0
  40cc9c:	sub	w2, w4, #0x30
  40cca0:	cmp	w2, #0x9
  40cca4:	b.hi	40cc24 <ferror@plt+0x9de4>  // b.pmore
  40cca8:	cmp	w1, #0x5a
  40ccac:	mov	w2, w1
  40ccb0:	b.hi	40cebc <ferror@plt+0xa07c>  // b.pmore
  40ccb4:	cmp	w1, #0x40
  40ccb8:	b.hi	40cc5c <ferror@plt+0x9e1c>  // b.pmore
  40ccbc:	add	w2, w1, #0x100
  40ccc0:	b	40cc5c <ferror@plt+0x9e1c>
  40ccc4:	ldrb	w3, [x19, #1]
  40ccc8:	cmp	w0, w3
  40cccc:	b.ne	40cac4 <ferror@plt+0x9c84>  // b.any
  40ccd0:	ldrb	w0, [x19, #2]
  40ccd4:	cbz	w0, 40ca78 <ferror@plt+0x9c38>
  40ccd8:	b	40cac4 <ferror@plt+0x9c84>
  40ccdc:	add	x3, x3, #0x1
  40cce0:	ldrb	w4, [x20, x3]
  40cce4:	cmp	w4, #0x30
  40cce8:	b.eq	40ccdc <ferror@plt+0x9e9c>  // b.none
  40ccec:	cmp	w1, #0x30
  40ccf0:	add	x6, x3, #0x1
  40ccf4:	b.ne	40cd08 <ferror@plt+0x9ec8>  // b.any
  40ccf8:	add	x0, x0, #0x1
  40ccfc:	ldrb	w1, [x19, x0]
  40cd00:	cmp	w1, #0x30
  40cd04:	b.eq	40ccf8 <ferror@plt+0x9eb8>  // b.none
  40cd08:	sub	w2, w4, #0x30
  40cd0c:	cmp	w2, #0x9
  40cd10:	b.hi	40cf00 <ferror@plt+0xa0c0>  // b.pmore
  40cd14:	sub	x3, x3, x0
  40cd18:	mov	x1, x0
  40cd1c:	add	x3, x20, x3
  40cd20:	mov	w7, #0x0                   	// #0
  40cd24:	ldrb	w2, [x19, x1]
  40cd28:	sub	w5, w2, #0x30
  40cd2c:	cmp	w5, #0x9
  40cd30:	b.hi	40cf34 <ferror@plt+0xa0f4>  // b.pmore
  40cd34:	sub	x5, x1, x0
  40cd38:	cbz	w7, 40cf6c <ferror@plt+0xa12c>
  40cd3c:	add	x1, x1, #0x1
  40cd40:	ldrb	w4, [x3, x1]
  40cd44:	sub	w2, w4, #0x30
  40cd48:	cmp	w2, #0x9
  40cd4c:	b.ls	40cd24 <ferror@plt+0x9ee4>  // b.plast
  40cd50:	ldrb	w0, [x19, x1]
  40cd54:	sub	w0, w0, #0x30
  40cd58:	cmp	w0, #0x9
  40cd5c:	b.hi	40d014 <ferror@plt+0xa1d4>  // b.pmore
  40cd60:	ldp	x23, x24, [sp, #48]
  40cd64:	ldr	x25, [sp, #64]
  40cd68:	mov	w21, #0xffffffff            	// #-1
  40cd6c:	b	40ca7c <ferror@plt+0x9c3c>
  40cd70:	cmp	w0, #0x19
  40cd74:	b.ls	40cd80 <ferror@plt+0x9f40>  // b.plast
  40cd78:	cmp	w1, #0x7e
  40cd7c:	b.ne	40cb48 <ferror@plt+0x9d08>  // b.any
  40cd80:	ldrb	w1, [x6, #1]
  40cd84:	cbz	w1, 40cfa8 <ferror@plt+0xa168>
  40cd88:	ldrb	w0, [x22, #1]
  40cd8c:	cmp	w1, #0x2e
  40cd90:	b.ne	40cb18 <ferror@plt+0x9cd8>  // b.any
  40cd94:	add	x4, x22, #0x1
  40cd98:	cbz	x5, 40d024 <ferror@plt+0xa1e4>
  40cd9c:	cbz	w0, 40cfdc <ferror@plt+0xa19c>
  40cda0:	ldrb	w1, [x4, #1]
  40cda4:	cmp	w0, #0x5a
  40cda8:	add	x22, x4, #0x1
  40cdac:	b.hi	40cddc <ferror@plt+0x9f9c>  // b.pmore
  40cdb0:	cmp	w0, #0x40
  40cdb4:	b.hi	40cdf8 <ferror@plt+0x9fb8>  // b.pmore
  40cdb8:	cbz	w1, 40cf58 <ferror@plt+0xa118>
  40cdbc:	cmp	w1, #0x2e
  40cdc0:	mov	x5, #0x0                   	// #0
  40cdc4:	b.ne	40cb18 <ferror@plt+0x9cd8>  // b.any
  40cdc8:	ldrb	w0, [x4, #2]
  40cdcc:	mov	x5, x22
  40cdd0:	add	x4, x4, #0x2
  40cdd4:	cbnz	w0, 40cda0 <ferror@plt+0x9f60>
  40cdd8:	b	40cb6c <ferror@plt+0x9d2c>
  40cddc:	sub	w3, w0, #0x61
  40cde0:	and	w3, w3, #0xff
  40cde4:	cmp	w3, #0x19
  40cde8:	b.ls	40cdf8 <ferror@plt+0x9fb8>  // b.plast
  40cdec:	cmp	w0, #0x7e
  40cdf0:	b.ne	40cdb8 <ferror@plt+0x9f78>  // b.any
  40cdf4:	nop
  40cdf8:	cbz	w1, 40cb70 <ferror@plt+0x9d30>
  40cdfc:	ldrb	w0, [x22, #1]
  40ce00:	b	40cd8c <ferror@plt+0x9f4c>
  40ce04:	cmp	w0, #0x19
  40ce08:	b.ls	40ce30 <ferror@plt+0x9ff0>  // b.plast
  40ce0c:	cmp	w2, #0x7e
  40ce10:	ldrb	w2, [x23]
  40ce14:	b.ne	40cbbc <ferror@plt+0x9d7c>  // b.any
  40ce18:	cbnz	w2, 40cb80 <ferror@plt+0x9d40>
  40ce1c:	cbz	x5, 40d004 <ferror@plt+0xa1c4>
  40ce20:	sub	x25, x5, x20
  40ce24:	cbnz	x24, 40cbe8 <ferror@plt+0x9da8>
  40ce28:	sub	x24, x23, x19
  40ce2c:	b	40cbec <ferror@plt+0x9dac>
  40ce30:	ldrb	w2, [x4, #1]
  40ce34:	cbnz	w2, 40cb80 <ferror@plt+0x9d40>
  40ce38:	b	40ce1c <ferror@plt+0x9fdc>
  40ce3c:	ldrb	w1, [x23, #1]
  40ce40:	add	x3, x23, #0x1
  40ce44:	cbz	x24, 40d030 <ferror@plt+0xa1f0>
  40ce48:	cbz	w1, 40cff4 <ferror@plt+0xa1b4>
  40ce4c:	ldrb	w2, [x3, #1]
  40ce50:	cmp	w1, #0x5a
  40ce54:	add	x23, x3, #0x1
  40ce58:	b.hi	40ce88 <ferror@plt+0xa048>  // b.pmore
  40ce5c:	cmp	w1, #0x40
  40ce60:	b.hi	40cea0 <ferror@plt+0xa060>  // b.pmore
  40ce64:	cbz	w2, 40cfb0 <ferror@plt+0xa170>
  40ce68:	cmp	w2, #0x2e
  40ce6c:	mov	x24, #0x0                   	// #0
  40ce70:	b.ne	40cb88 <ferror@plt+0x9d48>  // b.any
  40ce74:	ldrb	w1, [x3, #2]
  40ce78:	mov	x24, x23
  40ce7c:	add	x3, x3, #0x2
  40ce80:	cbnz	w1, 40ce4c <ferror@plt+0xa00c>
  40ce84:	b	40cbdc <ferror@plt+0x9d9c>
  40ce88:	sub	w0, w1, #0x61
  40ce8c:	and	w0, w0, #0xff
  40ce90:	cmp	w0, #0x19
  40ce94:	b.ls	40cea0 <ferror@plt+0xa060>  // b.plast
  40ce98:	cmp	w1, #0x7e
  40ce9c:	b.ne	40ce64 <ferror@plt+0xa024>  // b.any
  40cea0:	cbnz	w2, 40cb80 <ferror@plt+0x9d40>
  40cea4:	b	40cbe0 <ferror@plt+0x9da0>
  40cea8:	add	x1, x3, x6
  40ceac:	mov	w2, #0x0                   	// #0
  40ceb0:	cmp	x24, x1
  40ceb4:	b.ne	40cc48 <ferror@plt+0x9e08>  // b.any
  40ceb8:	b	40cc5c <ferror@plt+0x9e1c>
  40cebc:	sub	w4, w1, #0x61
  40cec0:	and	w4, w4, #0xff
  40cec4:	cmp	w4, #0x19
  40cec8:	b.ls	40cc5c <ferror@plt+0x9e1c>  // b.plast
  40cecc:	cmp	w1, #0x7e
  40ced0:	mov	w2, #0xffffffff            	// #-1
  40ced4:	b.eq	40cc5c <ferror@plt+0x9e1c>  // b.none
  40ced8:	add	w2, w1, #0x100
  40cedc:	b	40cc5c <ferror@plt+0x9e1c>
  40cee0:	sub	w1, w4, #0x61
  40cee4:	and	w1, w1, #0xff
  40cee8:	cmp	w1, #0x19
  40ceec:	b.ls	40cea8 <ferror@plt+0xa068>  // b.plast
  40cef0:	cmp	w4, #0x7e
  40cef4:	mov	w5, #0xffffffff            	// #-1
  40cef8:	b.eq	40cc3c <ferror@plt+0x9dfc>  // b.none
  40cefc:	b	40cc38 <ferror@plt+0x9df8>
  40cf00:	sub	w1, w1, #0x30
  40cf04:	cmp	w1, #0x9
  40cf08:	b.ls	40cd60 <ferror@plt+0x9f20>  // b.plast
  40cf0c:	b	40cbfc <ferror@plt+0x9dbc>
  40cf10:	mov	w5, #0x0                   	// #0
  40cf14:	b	40cca8 <ferror@plt+0x9e68>
  40cf18:	sub	w5, w5, w2
  40cf1c:	nop
  40cf20:	cmp	w5, #0x0
  40cf24:	csel	w21, w21, w5, eq  // eq = none
  40cf28:	ldp	x23, x24, [sp, #48]
  40cf2c:	ldr	x25, [sp, #64]
  40cf30:	b	40ca7c <ferror@plt+0x9c3c>
  40cf34:	ldp	x23, x24, [sp, #48]
  40cf38:	ldr	x25, [sp, #64]
  40cf3c:	b	40ca78 <ferror@plt+0x9c38>
  40cf40:	ldrb	w2, [x19, #1]
  40cf44:	add	x22, x20, #0x1
  40cf48:	add	x3, x19, #0x1
  40cf4c:	cbnz	w0, 40d03c <ferror@plt+0xa1fc>
  40cf50:	mov	x19, x3
  40cf54:	mov	x20, x22
  40cf58:	sub	x25, x22, x20
  40cf5c:	mov	x5, #0x0                   	// #0
  40cf60:	mov	x24, #0x0                   	// #0
  40cf64:	cbnz	w2, 40cb74 <ferror@plt+0x9d34>
  40cf68:	b	40cbf4 <ferror@plt+0x9db4>
  40cf6c:	add	x1, x1, #0x1
  40cf70:	sub	w7, w4, w2
  40cf74:	add	x5, x5, x6
  40cf78:	ldrb	w4, [x3, x1]
  40cf7c:	sub	w2, w4, #0x30
  40cf80:	cmp	w2, #0x9
  40cf84:	b.ls	40cd24 <ferror@plt+0x9ee4>  // b.plast
  40cf88:	ldrb	w0, [x19, x1]
  40cf8c:	sub	w0, w0, #0x30
  40cf90:	cmp	w0, #0x9
  40cf94:	b.ls	40cd60 <ferror@plt+0x9f20>  // b.plast
  40cf98:	cbnz	w7, 40d014 <ferror@plt+0xa1d4>
  40cf9c:	mov	x0, x1
  40cfa0:	mov	x3, x5
  40cfa4:	b	40cbfc <ferror@plt+0x9dbc>
  40cfa8:	cbnz	w2, 40cb74 <ferror@plt+0x9d34>
  40cfac:	mov	x23, x19
  40cfb0:	cbnz	x5, 40d054 <ferror@plt+0xa214>
  40cfb4:	sub	x25, x22, x20
  40cfb8:	sub	x24, x23, x19
  40cfbc:	b	40cbf4 <ferror@plt+0x9db4>
  40cfc0:	mov	x2, x25
  40cfc4:	mov	x1, x19
  40cfc8:	mov	x0, x20
  40cfcc:	bl	402940 <strncmp@plt>
  40cfd0:	cbnz	w0, 40cbf4 <ferror@plt+0x9db4>
  40cfd4:	sub	x25, x22, x20
  40cfd8:	b	40cfb8 <ferror@plt+0xa178>
  40cfdc:	mov	x22, x4
  40cfe0:	cbnz	w2, 40cb74 <ferror@plt+0x9d34>
  40cfe4:	sub	x25, x5, x20
  40cfe8:	mov	x23, x19
  40cfec:	mov	x24, #0x0                   	// #0
  40cff0:	b	40cbec <ferror@plt+0x9dac>
  40cff4:	cbz	x5, 40d060 <ferror@plt+0xa220>
  40cff8:	sub	x25, x5, x20
  40cffc:	mov	x23, x3
  40d000:	b	40cbe8 <ferror@plt+0x9da8>
  40d004:	sub	x25, x22, x20
  40d008:	cbnz	x24, 40cbe8 <ferror@plt+0x9da8>
  40d00c:	sub	x24, x23, x19
  40d010:	b	40cbf4 <ferror@plt+0x9db4>
  40d014:	mov	w21, w7
  40d018:	ldp	x23, x24, [sp, #48]
  40d01c:	ldr	x25, [sp, #64]
  40d020:	b	40ca7c <ferror@plt+0x9c3c>
  40d024:	mov	x5, x22
  40d028:	cbnz	w0, 40cda0 <ferror@plt+0x9f60>
  40d02c:	b	40cb6c <ferror@plt+0x9d2c>
  40d030:	mov	x24, x23
  40d034:	cbnz	w1, 40ce4c <ferror@plt+0xa00c>
  40d038:	b	40cbdc <ferror@plt+0x9d9c>
  40d03c:	ldrb	w4, [x20, #2]
  40d040:	mov	w1, w0
  40d044:	mov	x19, x3
  40d048:	mov	x20, x22
  40d04c:	mov	w0, w4
  40d050:	b	40cb04 <ferror@plt+0x9cc4>
  40d054:	sub	x25, x5, x20
  40d058:	sub	x24, x23, x19
  40d05c:	b	40cbec <ferror@plt+0x9dac>
  40d060:	mov	x23, x3
  40d064:	sub	x25, x22, x20
  40d068:	b	40cbe8 <ferror@plt+0x9da8>
  40d06c:	nop
  40d070:	stp	x29, x30, [sp, #-16]!
  40d074:	mov	x1, #0x0                   	// #0
  40d078:	mov	x29, sp
  40d07c:	bl	402e30 <setlocale@plt>
  40d080:	mov	w1, #0x1                   	// #1
  40d084:	cbz	x0, 40d0a8 <ferror@plt+0xa268>
  40d088:	ldrb	w1, [x0]
  40d08c:	cmp	w1, #0x43
  40d090:	b.eq	40d0b4 <ferror@plt+0xa274>  // b.none
  40d094:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x26c8>
  40d098:	add	x1, x1, #0x800
  40d09c:	bl	402b50 <strcmp@plt>
  40d0a0:	cmp	w0, #0x0
  40d0a4:	cset	w1, ne  // ne = any
  40d0a8:	mov	w0, w1
  40d0ac:	ldp	x29, x30, [sp], #16
  40d0b0:	ret
  40d0b4:	ldrb	w2, [x0, #1]
  40d0b8:	mov	w1, #0x0                   	// #0
  40d0bc:	cbnz	w2, 40d094 <ferror@plt+0xa254>
  40d0c0:	mov	w0, w1
  40d0c4:	ldp	x29, x30, [sp], #16
  40d0c8:	ret
  40d0cc:	nop
  40d0d0:	ror	x2, x0, #3
  40d0d4:	udiv	x0, x2, x1
  40d0d8:	msub	x0, x0, x1, x2
  40d0dc:	ret
  40d0e0:	cmp	x1, x0
  40d0e4:	cset	w0, eq  // eq = none
  40d0e8:	ret
  40d0ec:	nop
  40d0f0:	stp	x29, x30, [sp, #-80]!
  40d0f4:	mov	x29, sp
  40d0f8:	stp	x21, x22, [sp, #32]
  40d0fc:	mov	x21, x0
  40d100:	mov	x0, x1
  40d104:	stp	x19, x20, [sp, #16]
  40d108:	mov	x20, x1
  40d10c:	stp	x23, x24, [sp, #48]
  40d110:	mov	x24, x2
  40d114:	and	w23, w3, #0xff
  40d118:	ldr	x1, [x21, #16]
  40d11c:	ldr	x2, [x21, #48]
  40d120:	str	x25, [sp, #64]
  40d124:	blr	x2
  40d128:	ldr	x1, [x21, #16]
  40d12c:	cmp	x0, x1
  40d130:	b.cs	40d23c <ferror@plt+0xa3fc>  // b.hs, b.nlast
  40d134:	ldr	x25, [x21]
  40d138:	lsl	x22, x0, #4
  40d13c:	add	x19, x25, x22
  40d140:	str	x19, [x24]
  40d144:	ldr	x1, [x25, x22]
  40d148:	cbz	x1, 40d1d4 <ferror@plt+0xa394>
  40d14c:	cmp	x1, x20
  40d150:	b.eq	40d234 <ferror@plt+0xa3f4>  // b.none
  40d154:	ldr	x2, [x21, #56]
  40d158:	mov	x0, x20
  40d15c:	blr	x2
  40d160:	tst	w0, #0xff
  40d164:	b.eq	40d1cc <ferror@plt+0xa38c>  // b.none
  40d168:	ldr	x0, [x25, x22]
  40d16c:	cbz	w23, 40d1d8 <ferror@plt+0xa398>
  40d170:	ldr	x1, [x19, #8]
  40d174:	cbz	x1, 40d22c <ferror@plt+0xa3ec>
  40d178:	ldp	x2, x3, [x1]
  40d17c:	stp	x2, x3, [x19]
  40d180:	str	xzr, [x1]
  40d184:	ldp	x19, x20, [sp, #16]
  40d188:	ldr	x2, [x21, #72]
  40d18c:	str	x2, [x1, #8]
  40d190:	str	x1, [x21, #72]
  40d194:	ldp	x21, x22, [sp, #32]
  40d198:	ldp	x23, x24, [sp, #48]
  40d19c:	ldr	x25, [sp, #64]
  40d1a0:	ldp	x29, x30, [sp], #80
  40d1a4:	ret
  40d1a8:	ldr	x1, [x2]
  40d1ac:	cmp	x1, x20
  40d1b0:	b.eq	40d1f4 <ferror@plt+0xa3b4>  // b.none
  40d1b4:	ldr	x2, [x21, #56]
  40d1b8:	mov	x0, x20
  40d1bc:	blr	x2
  40d1c0:	tst	w0, #0xff
  40d1c4:	b.ne	40d1f0 <ferror@plt+0xa3b0>  // b.any
  40d1c8:	ldr	x19, [x19, #8]
  40d1cc:	ldr	x2, [x19, #8]
  40d1d0:	cbnz	x2, 40d1a8 <ferror@plt+0xa368>
  40d1d4:	mov	x0, #0x0                   	// #0
  40d1d8:	ldp	x19, x20, [sp, #16]
  40d1dc:	ldp	x21, x22, [sp, #32]
  40d1e0:	ldp	x23, x24, [sp, #48]
  40d1e4:	ldr	x25, [sp, #64]
  40d1e8:	ldp	x29, x30, [sp], #80
  40d1ec:	ret
  40d1f0:	ldr	x2, [x19, #8]
  40d1f4:	ldr	x0, [x2]
  40d1f8:	cbz	w23, 40d1d8 <ferror@plt+0xa398>
  40d1fc:	ldr	x1, [x2, #8]
  40d200:	str	x1, [x19, #8]
  40d204:	str	xzr, [x2]
  40d208:	ldp	x19, x20, [sp, #16]
  40d20c:	ldr	x1, [x21, #72]
  40d210:	str	x1, [x2, #8]
  40d214:	str	x2, [x21, #72]
  40d218:	ldp	x21, x22, [sp, #32]
  40d21c:	ldp	x23, x24, [sp, #48]
  40d220:	ldr	x25, [sp, #64]
  40d224:	ldp	x29, x30, [sp], #80
  40d228:	ret
  40d22c:	str	xzr, [x25, x22]
  40d230:	b	40d1d8 <ferror@plt+0xa398>
  40d234:	mov	x0, x1
  40d238:	b	40d16c <ferror@plt+0xa32c>
  40d23c:	bl	402a80 <abort@plt>
  40d240:	stp	x29, x30, [sp, #-64]!
  40d244:	mov	x29, sp
  40d248:	stp	x19, x20, [sp, #16]
  40d24c:	mov	x20, x0
  40d250:	stp	x21, x22, [sp, #32]
  40d254:	mov	x22, x1
  40d258:	ldp	x21, x0, [x1]
  40d25c:	stp	x23, x24, [sp, #48]
  40d260:	and	w23, w2, #0xff
  40d264:	cmp	x21, x0
  40d268:	b.cc	40d27c <ferror@plt+0xa43c>  // b.lo, b.ul, b.last
  40d26c:	b	40d31c <ferror@plt+0xa4dc>
  40d270:	add	x21, x21, #0x10
  40d274:	cmp	x21, x0
  40d278:	b.cs	40d31c <ferror@plt+0xa4dc>  // b.hs, b.nlast
  40d27c:	ldr	x24, [x21]
  40d280:	cbz	x24, 40d270 <ferror@plt+0xa430>
  40d284:	ldr	x19, [x21, #8]
  40d288:	cbz	x19, 40d304 <ferror@plt+0xa4c4>
  40d28c:	ldr	x1, [x20, #16]
  40d290:	ldr	x2, [x20, #48]
  40d294:	ldr	x24, [x19]
  40d298:	mov	x0, x24
  40d29c:	blr	x2
  40d2a0:	ldr	x1, [x20, #16]
  40d2a4:	cmp	x0, x1
  40d2a8:	b.cs	40d3d4 <ferror@plt+0xa594>  // b.hs, b.nlast
  40d2ac:	ldr	x2, [x20]
  40d2b0:	lsl	x0, x0, #4
  40d2b4:	ldr	x3, [x19, #8]
  40d2b8:	add	x4, x2, x0
  40d2bc:	ldr	x5, [x2, x0]
  40d2c0:	cbz	x5, 40d2dc <ferror@plt+0xa49c>
  40d2c4:	ldr	x0, [x4, #8]
  40d2c8:	str	x0, [x19, #8]
  40d2cc:	str	x19, [x4, #8]
  40d2d0:	cbz	x3, 40d300 <ferror@plt+0xa4c0>
  40d2d4:	mov	x19, x3
  40d2d8:	b	40d290 <ferror@plt+0xa450>
  40d2dc:	ldr	x4, [x20, #24]
  40d2e0:	str	x24, [x2, x0]
  40d2e4:	add	x0, x4, #0x1
  40d2e8:	str	x0, [x20, #24]
  40d2ec:	str	xzr, [x19]
  40d2f0:	ldr	x0, [x20, #72]
  40d2f4:	str	x0, [x19, #8]
  40d2f8:	str	x19, [x20, #72]
  40d2fc:	cbnz	x3, 40d2d4 <ferror@plt+0xa494>
  40d300:	ldr	x24, [x21]
  40d304:	str	xzr, [x21, #8]
  40d308:	cbz	w23, 40d338 <ferror@plt+0xa4f8>
  40d30c:	ldr	x0, [x22, #8]
  40d310:	add	x21, x21, #0x10
  40d314:	cmp	x21, x0
  40d318:	b.cc	40d27c <ferror@plt+0xa43c>  // b.lo, b.ul, b.last
  40d31c:	mov	w23, #0x1                   	// #1
  40d320:	mov	w0, w23
  40d324:	ldp	x19, x20, [sp, #16]
  40d328:	ldp	x21, x22, [sp, #32]
  40d32c:	ldp	x23, x24, [sp, #48]
  40d330:	ldp	x29, x30, [sp], #64
  40d334:	ret
  40d338:	ldr	x1, [x20, #16]
  40d33c:	mov	x0, x24
  40d340:	ldr	x2, [x20, #48]
  40d344:	blr	x2
  40d348:	ldr	x1, [x20, #16]
  40d34c:	cmp	x0, x1
  40d350:	b.cs	40d3d4 <ferror@plt+0xa594>  // b.hs, b.nlast
  40d354:	ldr	x1, [x20]
  40d358:	lsl	x0, x0, #4
  40d35c:	add	x19, x1, x0
  40d360:	ldr	x2, [x1, x0]
  40d364:	cbz	x2, 40d39c <ferror@plt+0xa55c>
  40d368:	ldr	x0, [x20, #72]
  40d36c:	cbz	x0, 40d3b0 <ferror@plt+0xa570>
  40d370:	ldr	x1, [x0, #8]
  40d374:	str	x1, [x20, #72]
  40d378:	ldr	x1, [x19, #8]
  40d37c:	stp	x24, x1, [x0]
  40d380:	str	x0, [x19, #8]
  40d384:	ldr	x1, [x22, #24]
  40d388:	str	xzr, [x21]
  40d38c:	sub	x1, x1, #0x1
  40d390:	str	x1, [x22, #24]
  40d394:	ldr	x0, [x22, #8]
  40d398:	b	40d270 <ferror@plt+0xa430>
  40d39c:	ldr	x2, [x20, #24]
  40d3a0:	str	x24, [x1, x0]
  40d3a4:	add	x0, x2, #0x1
  40d3a8:	str	x0, [x20, #24]
  40d3ac:	b	40d384 <ferror@plt+0xa544>
  40d3b0:	mov	x0, #0x10                  	// #16
  40d3b4:	bl	4028e0 <malloc@plt>
  40d3b8:	cbnz	x0, 40d378 <ferror@plt+0xa538>
  40d3bc:	mov	w0, w23
  40d3c0:	ldp	x19, x20, [sp, #16]
  40d3c4:	ldp	x21, x22, [sp, #32]
  40d3c8:	ldp	x23, x24, [sp, #48]
  40d3cc:	ldp	x29, x30, [sp], #64
  40d3d0:	ret
  40d3d4:	bl	402a80 <abort@plt>
  40d3d8:	ldr	x0, [x0, #16]
  40d3dc:	ret
  40d3e0:	ldr	x0, [x0, #24]
  40d3e4:	ret
  40d3e8:	ldr	x0, [x0, #32]
  40d3ec:	ret
  40d3f0:	ldp	x3, x4, [x0]
  40d3f4:	mov	x0, #0x0                   	// #0
  40d3f8:	cmp	x3, x4
  40d3fc:	b.cc	40d410 <ferror@plt+0xa5d0>  // b.lo, b.ul, b.last
  40d400:	b	40d448 <ferror@plt+0xa608>
  40d404:	add	x3, x3, #0x10
  40d408:	cmp	x3, x4
  40d40c:	b.cs	40d448 <ferror@plt+0xa608>  // b.hs, b.nlast
  40d410:	ldr	x1, [x3]
  40d414:	cbz	x1, 40d404 <ferror@plt+0xa5c4>
  40d418:	ldr	x1, [x3, #8]
  40d41c:	mov	x2, #0x1                   	// #1
  40d420:	cbz	x1, 40d434 <ferror@plt+0xa5f4>
  40d424:	nop
  40d428:	ldr	x1, [x1, #8]
  40d42c:	add	x2, x2, #0x1
  40d430:	cbnz	x1, 40d428 <ferror@plt+0xa5e8>
  40d434:	cmp	x0, x2
  40d438:	add	x3, x3, #0x10
  40d43c:	csel	x0, x0, x2, cs  // cs = hs, nlast
  40d440:	cmp	x3, x4
  40d444:	b.cc	40d410 <ferror@plt+0xa5d0>  // b.lo, b.ul, b.last
  40d448:	ret
  40d44c:	nop
  40d450:	ldp	x3, x4, [x0]
  40d454:	mov	x6, x0
  40d458:	mov	x2, #0x0                   	// #0
  40d45c:	mov	x5, #0x0                   	// #0
  40d460:	cmp	x3, x4
  40d464:	b.cc	40d478 <ferror@plt+0xa638>  // b.lo, b.ul, b.last
  40d468:	b	40d4a8 <ferror@plt+0xa668>
  40d46c:	add	x3, x3, #0x10
  40d470:	cmp	x3, x4
  40d474:	b.cs	40d4a8 <ferror@plt+0xa668>  // b.hs, b.nlast
  40d478:	ldr	x1, [x3]
  40d47c:	cbz	x1, 40d46c <ferror@plt+0xa62c>
  40d480:	ldr	x1, [x3, #8]
  40d484:	add	x5, x5, #0x1
  40d488:	add	x2, x2, #0x1
  40d48c:	cbz	x1, 40d46c <ferror@plt+0xa62c>
  40d490:	ldr	x1, [x1, #8]
  40d494:	add	x2, x2, #0x1
  40d498:	cbnz	x1, 40d490 <ferror@plt+0xa650>
  40d49c:	add	x3, x3, #0x10
  40d4a0:	cmp	x3, x4
  40d4a4:	b.cc	40d478 <ferror@plt+0xa638>  // b.lo, b.ul, b.last
  40d4a8:	ldr	x1, [x6, #24]
  40d4ac:	mov	w0, #0x0                   	// #0
  40d4b0:	cmp	x1, x5
  40d4b4:	b.eq	40d4bc <ferror@plt+0xa67c>  // b.none
  40d4b8:	ret
  40d4bc:	ldr	x0, [x6, #32]
  40d4c0:	cmp	x0, x2
  40d4c4:	cset	w0, eq  // eq = none
  40d4c8:	ret
  40d4cc:	nop
  40d4d0:	stp	x29, x30, [sp, #-48]!
  40d4d4:	mov	x29, sp
  40d4d8:	ldp	x4, x5, [x0]
  40d4dc:	stp	x19, x20, [sp, #16]
  40d4e0:	mov	x20, x1
  40d4e4:	stp	x21, x22, [sp, #32]
  40d4e8:	mov	x19, #0x0                   	// #0
  40d4ec:	ldp	x21, x22, [x0, #16]
  40d4f0:	cmp	x4, x5
  40d4f4:	ldr	x3, [x0, #32]
  40d4f8:	b.cc	40d50c <ferror@plt+0xa6cc>  // b.lo, b.ul, b.last
  40d4fc:	b	40d540 <ferror@plt+0xa700>
  40d500:	add	x4, x4, #0x10
  40d504:	cmp	x4, x5
  40d508:	b.cs	40d540 <ferror@plt+0xa700>  // b.hs, b.nlast
  40d50c:	ldr	x0, [x4]
  40d510:	cbz	x0, 40d500 <ferror@plt+0xa6c0>
  40d514:	ldr	x0, [x4, #8]
  40d518:	mov	x2, #0x1                   	// #1
  40d51c:	cbz	x0, 40d52c <ferror@plt+0xa6ec>
  40d520:	ldr	x0, [x0, #8]
  40d524:	add	x2, x2, #0x1
  40d528:	cbnz	x0, 40d520 <ferror@plt+0xa6e0>
  40d52c:	cmp	x19, x2
  40d530:	add	x4, x4, #0x10
  40d534:	csel	x19, x19, x2, cs  // cs = hs, nlast
  40d538:	cmp	x4, x5
  40d53c:	b.cc	40d50c <ferror@plt+0xa6cc>  // b.lo, b.ul, b.last
  40d540:	mov	x0, x20
  40d544:	mov	w1, #0x1                   	// #1
  40d548:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x26c8>
  40d54c:	add	x2, x2, #0x808
  40d550:	bl	402b30 <__fprintf_chk@plt>
  40d554:	mov	x3, x21
  40d558:	mov	x0, x20
  40d55c:	mov	w1, #0x1                   	// #1
  40d560:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x26c8>
  40d564:	add	x2, x2, #0x820
  40d568:	bl	402b30 <__fprintf_chk@plt>
  40d56c:	ucvtf	d1, x22
  40d570:	mov	x0, #0x4059000000000000    	// #4636737291354636288
  40d574:	fmov	d2, x0
  40d578:	ucvtf	d0, x21
  40d57c:	mov	x3, x22
  40d580:	mov	x0, x20
  40d584:	mov	w1, #0x1                   	// #1
  40d588:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x26c8>
  40d58c:	fmul	d1, d1, d2
  40d590:	add	x2, x2, #0x838
  40d594:	fdiv	d0, d1, d0
  40d598:	bl	402b30 <__fprintf_chk@plt>
  40d59c:	mov	x3, x19
  40d5a0:	mov	x0, x20
  40d5a4:	ldp	x19, x20, [sp, #16]
  40d5a8:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x26c8>
  40d5ac:	ldp	x21, x22, [sp, #32]
  40d5b0:	add	x2, x2, #0x860
  40d5b4:	ldp	x29, x30, [sp], #48
  40d5b8:	mov	w1, #0x1                   	// #1
  40d5bc:	b	402b30 <__fprintf_chk@plt>
  40d5c0:	stp	x29, x30, [sp, #-48]!
  40d5c4:	mov	x29, sp
  40d5c8:	str	x21, [sp, #32]
  40d5cc:	mov	x21, x0
  40d5d0:	mov	x0, x1
  40d5d4:	stp	x19, x20, [sp, #16]
  40d5d8:	mov	x20, x1
  40d5dc:	ldr	x1, [x21, #16]
  40d5e0:	ldr	x2, [x21, #48]
  40d5e4:	blr	x2
  40d5e8:	ldr	x1, [x21, #16]
  40d5ec:	cmp	x0, x1
  40d5f0:	b.cs	40d660 <ferror@plt+0xa820>  // b.hs, b.nlast
  40d5f4:	ldr	x1, [x21]
  40d5f8:	lsl	x0, x0, #4
  40d5fc:	add	x19, x1, x0
  40d600:	ldr	x1, [x1, x0]
  40d604:	cbnz	x1, 40d610 <ferror@plt+0xa7d0>
  40d608:	b	40d634 <ferror@plt+0xa7f4>
  40d60c:	ldr	x1, [x19]
  40d610:	cmp	x1, x20
  40d614:	b.eq	40d64c <ferror@plt+0xa80c>  // b.none
  40d618:	ldr	x2, [x21, #56]
  40d61c:	mov	x0, x20
  40d620:	blr	x2
  40d624:	tst	w0, #0xff
  40d628:	b.ne	40d648 <ferror@plt+0xa808>  // b.any
  40d62c:	ldr	x19, [x19, #8]
  40d630:	cbnz	x19, 40d60c <ferror@plt+0xa7cc>
  40d634:	mov	x0, #0x0                   	// #0
  40d638:	ldp	x19, x20, [sp, #16]
  40d63c:	ldr	x21, [sp, #32]
  40d640:	ldp	x29, x30, [sp], #48
  40d644:	ret
  40d648:	ldr	x20, [x19]
  40d64c:	mov	x0, x20
  40d650:	ldp	x19, x20, [sp, #16]
  40d654:	ldr	x21, [sp, #32]
  40d658:	ldp	x29, x30, [sp], #48
  40d65c:	ret
  40d660:	bl	402a80 <abort@plt>
  40d664:	nop
  40d668:	ldr	x1, [x0, #32]
  40d66c:	cbz	x1, 40d698 <ferror@plt+0xa858>
  40d670:	ldp	x1, x2, [x0]
  40d674:	cmp	x1, x2
  40d678:	b.cc	40d68c <ferror@plt+0xa84c>  // b.lo, b.ul, b.last
  40d67c:	b	40d6a0 <ferror@plt+0xa860>
  40d680:	add	x1, x1, #0x10
  40d684:	cmp	x1, x2
  40d688:	b.cs	40d6a0 <ferror@plt+0xa860>  // b.hs, b.nlast
  40d68c:	ldr	x0, [x1]
  40d690:	cbz	x0, 40d680 <ferror@plt+0xa840>
  40d694:	ret
  40d698:	mov	x0, #0x0                   	// #0
  40d69c:	ret
  40d6a0:	stp	x29, x30, [sp, #-16]!
  40d6a4:	mov	x29, sp
  40d6a8:	bl	402a80 <abort@plt>
  40d6ac:	nop
  40d6b0:	stp	x29, x30, [sp, #-32]!
  40d6b4:	mov	x29, sp
  40d6b8:	stp	x19, x20, [sp, #16]
  40d6bc:	mov	x20, x0
  40d6c0:	mov	x19, x1
  40d6c4:	mov	x0, x1
  40d6c8:	ldr	x1, [x20, #16]
  40d6cc:	ldr	x2, [x20, #48]
  40d6d0:	blr	x2
  40d6d4:	ldr	x1, [x20, #16]
  40d6d8:	cmp	x0, x1
  40d6dc:	b.cs	40d740 <ferror@plt+0xa900>  // b.hs, b.nlast
  40d6e0:	ldr	x3, [x20]
  40d6e4:	add	x3, x3, x0, lsl #4
  40d6e8:	mov	x2, x3
  40d6ec:	b	40d6f4 <ferror@plt+0xa8b4>
  40d6f0:	cbz	x2, 40d704 <ferror@plt+0xa8c4>
  40d6f4:	ldp	x4, x2, [x2]
  40d6f8:	cmp	x4, x19
  40d6fc:	b.ne	40d6f0 <ferror@plt+0xa8b0>  // b.any
  40d700:	cbnz	x2, 40d730 <ferror@plt+0xa8f0>
  40d704:	ldr	x1, [x20, #8]
  40d708:	b	40d714 <ferror@plt+0xa8d4>
  40d70c:	ldr	x0, [x3]
  40d710:	cbnz	x0, 40d724 <ferror@plt+0xa8e4>
  40d714:	add	x3, x3, #0x10
  40d718:	cmp	x1, x3
  40d71c:	b.hi	40d70c <ferror@plt+0xa8cc>  // b.pmore
  40d720:	mov	x0, #0x0                   	// #0
  40d724:	ldp	x19, x20, [sp, #16]
  40d728:	ldp	x29, x30, [sp], #32
  40d72c:	ret
  40d730:	ldr	x0, [x2]
  40d734:	ldp	x19, x20, [sp, #16]
  40d738:	ldp	x29, x30, [sp], #32
  40d73c:	ret
  40d740:	bl	402a80 <abort@plt>
  40d744:	nop
  40d748:	ldp	x5, x3, [x0]
  40d74c:	mov	x6, x0
  40d750:	cmp	x3, x5
  40d754:	b.ls	40d7a4 <ferror@plt+0xa964>  // b.plast
  40d758:	sub	x4, x1, #0x8
  40d75c:	mov	x0, #0x0                   	// #0
  40d760:	ldr	x1, [x5]
  40d764:	cbnz	x1, 40d778 <ferror@plt+0xa938>
  40d768:	add	x5, x5, #0x10
  40d76c:	cmp	x5, x3
  40d770:	b.cc	40d760 <ferror@plt+0xa920>  // b.lo, b.ul, b.last
  40d774:	ret
  40d778:	mov	x1, x5
  40d77c:	nop
  40d780:	cmp	x2, x0
  40d784:	b.ls	40d774 <ferror@plt+0xa934>  // b.plast
  40d788:	add	x0, x0, #0x1
  40d78c:	ldr	x3, [x1]
  40d790:	str	x3, [x4, x0, lsl #3]
  40d794:	ldr	x1, [x1, #8]
  40d798:	cbnz	x1, 40d780 <ferror@plt+0xa940>
  40d79c:	ldr	x3, [x6, #8]
  40d7a0:	b	40d768 <ferror@plt+0xa928>
  40d7a4:	mov	x0, #0x0                   	// #0
  40d7a8:	ret
  40d7ac:	nop
  40d7b0:	stp	x29, x30, [sp, #-64]!
  40d7b4:	mov	x29, sp
  40d7b8:	stp	x21, x22, [sp, #32]
  40d7bc:	mov	x21, x1
  40d7c0:	stp	x23, x24, [sp, #48]
  40d7c4:	ldp	x23, x1, [x0]
  40d7c8:	stp	x19, x20, [sp, #16]
  40d7cc:	cmp	x1, x23
  40d7d0:	b.ls	40d83c <ferror@plt+0xa9fc>  // b.plast
  40d7d4:	mov	x24, x0
  40d7d8:	mov	x22, x2
  40d7dc:	mov	x20, #0x0                   	// #0
  40d7e0:	ldr	x0, [x23]
  40d7e4:	cbnz	x0, 40d80c <ferror@plt+0xa9cc>
  40d7e8:	add	x23, x23, #0x10
  40d7ec:	cmp	x23, x1
  40d7f0:	b.cc	40d7e0 <ferror@plt+0xa9a0>  // b.lo, b.ul, b.last
  40d7f4:	mov	x0, x20
  40d7f8:	ldp	x19, x20, [sp, #16]
  40d7fc:	ldp	x21, x22, [sp, #32]
  40d800:	ldp	x23, x24, [sp, #48]
  40d804:	ldp	x29, x30, [sp], #64
  40d808:	ret
  40d80c:	mov	x19, x23
  40d810:	b	40d818 <ferror@plt+0xa9d8>
  40d814:	ldr	x0, [x19]
  40d818:	mov	x1, x22
  40d81c:	blr	x21
  40d820:	tst	w0, #0xff
  40d824:	b.eq	40d7f4 <ferror@plt+0xa9b4>  // b.none
  40d828:	ldr	x19, [x19, #8]
  40d82c:	add	x20, x20, #0x1
  40d830:	cbnz	x19, 40d814 <ferror@plt+0xa9d4>
  40d834:	ldr	x1, [x24, #8]
  40d838:	b	40d7e8 <ferror@plt+0xa9a8>
  40d83c:	mov	x20, #0x0                   	// #0
  40d840:	b	40d7f4 <ferror@plt+0xa9b4>
  40d844:	nop
  40d848:	ldrb	w4, [x0]
  40d84c:	mov	x2, #0x0                   	// #0
  40d850:	cbz	w4, 40d874 <ferror@plt+0xaa34>
  40d854:	nop
  40d858:	lsl	x3, x2, #5
  40d85c:	sub	x2, x3, x2
  40d860:	add	x2, x2, w4, uxtb
  40d864:	ldrb	w4, [x0, #1]!
  40d868:	udiv	x3, x2, x1
  40d86c:	msub	x2, x3, x1, x2
  40d870:	cbnz	w4, 40d858 <ferror@plt+0xaa18>
  40d874:	mov	x0, x2
  40d878:	ret
  40d87c:	nop
  40d880:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x26c8>
  40d884:	add	x1, x1, #0x890
  40d888:	ldp	x2, x3, [x1]
  40d88c:	stp	x2, x3, [x0]
  40d890:	ldr	w1, [x1, #16]
  40d894:	str	w1, [x0, #16]
  40d898:	ret
  40d89c:	nop
  40d8a0:	stp	x29, x30, [sp, #-64]!
  40d8a4:	cmp	x2, #0x0
  40d8a8:	mov	x29, sp
  40d8ac:	stp	x23, x24, [sp, #48]
  40d8b0:	mov	x23, x2
  40d8b4:	adrp	x2, 40d000 <ferror@plt+0xa1c0>
  40d8b8:	add	x2, x2, #0xd0
  40d8bc:	stp	x19, x20, [sp, #16]
  40d8c0:	csel	x23, x2, x23, eq  // eq = none
  40d8c4:	cmp	x3, #0x0
  40d8c8:	adrp	x2, 40d000 <ferror@plt+0xa1c0>
  40d8cc:	add	x2, x2, #0xe0
  40d8d0:	mov	x19, x0
  40d8d4:	mov	x20, x4
  40d8d8:	csel	x24, x2, x3, eq  // eq = none
  40d8dc:	mov	x0, #0x50                  	// #80
  40d8e0:	stp	x21, x22, [sp, #32]
  40d8e4:	mov	x22, x1
  40d8e8:	bl	4028e0 <malloc@plt>
  40d8ec:	mov	x21, x0
  40d8f0:	cbz	x0, 40d9ac <ferror@plt+0xab6c>
  40d8f4:	cbz	x22, 40d9c4 <ferror@plt+0xab84>
  40d8f8:	str	x22, [x21, #40]
  40d8fc:	adrp	x0, 418000 <_obstack_memory_used@@Base+0x26c8>
  40d900:	add	x0, x0, #0x890
  40d904:	cmp	x22, x0
  40d908:	b.eq	40d9d0 <ferror@plt+0xab90>  // b.none
  40d90c:	mov	w0, #0xcccd                	// #52429
  40d910:	ldr	s2, [x22, #8]
  40d914:	movk	w0, #0x3dcc, lsl #16
  40d918:	fmov	s1, w0
  40d91c:	fcmpe	s2, s1
  40d920:	b.le	40d9a0 <ferror@plt+0xab60>
  40d924:	mov	w0, #0x6666                	// #26214
  40d928:	movk	w0, #0x3f66, lsl #16
  40d92c:	fmov	s0, w0
  40d930:	fcmpe	s2, s0
  40d934:	b.pl	40d9a0 <ferror@plt+0xab60>  // b.nfrst
  40d938:	mov	w0, #0xcccd                	// #52429
  40d93c:	ldr	s3, [x22, #12]
  40d940:	movk	w0, #0x3f8c, lsl #16
  40d944:	fmov	s0, w0
  40d948:	fcmpe	s3, s0
  40d94c:	b.le	40d9a0 <ferror@plt+0xab60>
  40d950:	ldr	s0, [x22]
  40d954:	fcmpe	s0, #0.0
  40d958:	b.lt	40d9a0 <ferror@plt+0xab60>  // b.tstop
  40d95c:	fadd	s1, s0, s1
  40d960:	ldr	s0, [x22, #4]
  40d964:	fcmpe	s1, s0
  40d968:	b.pl	40d9a0 <ferror@plt+0xab60>  // b.nfrst
  40d96c:	fmov	s3, #1.000000000000000000e+00
  40d970:	fcmpe	s0, s3
  40d974:	b.hi	40d9a0 <ferror@plt+0xab60>  // b.pmore
  40d978:	fcmpe	s2, s1
  40d97c:	b.le	40d9a0 <ferror@plt+0xab60>
  40d980:	ldrb	w0, [x22, #16]
  40d984:	cbnz	w0, 40d9f8 <ferror@plt+0xabb8>
  40d988:	ucvtf	s0, x19
  40d98c:	mov	w0, #0x5f800000            	// #1602224128
  40d990:	fmov	s1, w0
  40d994:	fdiv	s0, s0, s2
  40d998:	fcmpe	s0, s1
  40d99c:	b.lt	40d9f4 <ferror@plt+0xabb4>  // b.tstop
  40d9a0:	mov	x0, x21
  40d9a4:	mov	x21, #0x0                   	// #0
  40d9a8:	bl	402ba0 <free@plt>
  40d9ac:	mov	x0, x21
  40d9b0:	ldp	x19, x20, [sp, #16]
  40d9b4:	ldp	x21, x22, [sp, #32]
  40d9b8:	ldp	x23, x24, [sp, #48]
  40d9bc:	ldp	x29, x30, [sp], #64
  40d9c0:	ret
  40d9c4:	adrp	x0, 418000 <_obstack_memory_used@@Base+0x26c8>
  40d9c8:	add	x0, x0, #0x890
  40d9cc:	str	x0, [x21, #40]
  40d9d0:	ucvtf	s0, x19
  40d9d4:	mov	w0, #0xcccd                	// #52429
  40d9d8:	movk	w0, #0x3f4c, lsl #16
  40d9dc:	fmov	s2, w0
  40d9e0:	mov	w0, #0x5f800000            	// #1602224128
  40d9e4:	fmov	s1, w0
  40d9e8:	fdiv	s0, s0, s2
  40d9ec:	fcmpe	s0, s1
  40d9f0:	b.ge	40d9a0 <ferror@plt+0xab60>  // b.tcont
  40d9f4:	fcvtzu	x19, s0
  40d9f8:	cmp	x19, #0xa
  40d9fc:	mov	x0, #0xa                   	// #10
  40da00:	csel	x19, x19, x0, cs  // cs = hs, nlast
  40da04:	mov	x4, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  40da08:	orr	x19, x19, #0x1
  40da0c:	movk	x4, #0xaaab
  40da10:	cmn	x19, #0x1
  40da14:	b.eq	40d9a0 <ferror@plt+0xab60>  // b.none
  40da18:	umulh	x1, x19, x4
  40da1c:	cmp	x19, #0x9
  40da20:	and	x0, x1, #0xfffffffffffffffe
  40da24:	add	x1, x0, x1, lsr #1
  40da28:	sub	x1, x19, x1
  40da2c:	b.ls	40da64 <ferror@plt+0xac24>  // b.plast
  40da30:	cbz	x1, 40da68 <ferror@plt+0xac28>
  40da34:	mov	x3, #0x10                  	// #16
  40da38:	mov	x2, #0x9                   	// #9
  40da3c:	mov	x0, #0x3                   	// #3
  40da40:	b	40da48 <ferror@plt+0xac08>
  40da44:	cbz	x1, 40da68 <ferror@plt+0xac28>
  40da48:	add	x0, x0, #0x2
  40da4c:	add	x2, x2, x3
  40da50:	cmp	x2, x19
  40da54:	add	x3, x3, #0x8
  40da58:	udiv	x1, x19, x0
  40da5c:	msub	x1, x1, x0, x19
  40da60:	b.cc	40da44 <ferror@plt+0xac04>  // b.lo, b.ul, b.last
  40da64:	cbnz	x1, 40da78 <ferror@plt+0xac38>
  40da68:	add	x19, x19, #0x2
  40da6c:	cmn	x19, #0x1
  40da70:	b.ne	40da18 <ferror@plt+0xabd8>  // b.any
  40da74:	b	40d9a0 <ferror@plt+0xab60>
  40da78:	cmp	xzr, x19, lsr #61
  40da7c:	cset	x0, ne  // ne = any
  40da80:	tbnz	x19, #60, 40d9a0 <ferror@plt+0xab60>
  40da84:	cbnz	x0, 40d9a0 <ferror@plt+0xab60>
  40da88:	str	x19, [x21, #16]
  40da8c:	mov	x0, x19
  40da90:	mov	x1, #0x10                  	// #16
  40da94:	bl	4029d0 <calloc@plt>
  40da98:	str	x0, [x21]
  40da9c:	cbz	x0, 40d9a0 <ferror@plt+0xab60>
  40daa0:	add	x19, x0, x19, lsl #4
  40daa4:	str	x19, [x21, #8]
  40daa8:	stp	xzr, xzr, [x21, #24]
  40daac:	mov	x0, x21
  40dab0:	stp	x23, x24, [x21, #48]
  40dab4:	stp	x20, xzr, [x21, #64]
  40dab8:	ldp	x19, x20, [sp, #16]
  40dabc:	ldp	x21, x22, [sp, #32]
  40dac0:	ldp	x23, x24, [sp, #48]
  40dac4:	ldp	x29, x30, [sp], #64
  40dac8:	ret
  40dacc:	nop
  40dad0:	stp	x29, x30, [sp, #-48]!
  40dad4:	mov	x29, sp
  40dad8:	ldr	x1, [x0, #8]
  40dadc:	str	x21, [sp, #32]
  40dae0:	ldr	x21, [x0]
  40dae4:	stp	x19, x20, [sp, #16]
  40dae8:	mov	x20, x0
  40daec:	cmp	x21, x1
  40daf0:	b.cc	40db04 <ferror@plt+0xacc4>  // b.lo, b.ul, b.last
  40daf4:	b	40db5c <ferror@plt+0xad1c>
  40daf8:	add	x21, x21, #0x10
  40dafc:	cmp	x1, x21
  40db00:	b.ls	40db5c <ferror@plt+0xad1c>  // b.plast
  40db04:	ldr	x0, [x21]
  40db08:	cbz	x0, 40daf8 <ferror@plt+0xacb8>
  40db0c:	ldr	x19, [x21, #8]
  40db10:	ldr	x1, [x20, #64]
  40db14:	cbz	x19, 40db3c <ferror@plt+0xacfc>
  40db18:	cbz	x1, 40db70 <ferror@plt+0xad30>
  40db1c:	ldr	x0, [x19]
  40db20:	blr	x1
  40db24:	ldr	x2, [x19, #8]
  40db28:	ldp	x1, x0, [x20, #64]
  40db2c:	stp	xzr, x0, [x19]
  40db30:	str	x19, [x20, #72]
  40db34:	mov	x19, x2
  40db38:	cbnz	x2, 40db18 <ferror@plt+0xacd8>
  40db3c:	cbz	x1, 40db48 <ferror@plt+0xad08>
  40db40:	ldr	x0, [x21]
  40db44:	blr	x1
  40db48:	stp	xzr, xzr, [x21]
  40db4c:	add	x21, x21, #0x10
  40db50:	ldr	x1, [x20, #8]
  40db54:	cmp	x1, x21
  40db58:	b.hi	40db04 <ferror@plt+0xacc4>  // b.pmore
  40db5c:	stp	xzr, xzr, [x20, #24]
  40db60:	ldp	x19, x20, [sp, #16]
  40db64:	ldr	x21, [sp, #32]
  40db68:	ldp	x29, x30, [sp], #48
  40db6c:	ret
  40db70:	ldr	x0, [x20, #72]
  40db74:	mov	x1, x19
  40db78:	str	xzr, [x19]
  40db7c:	ldr	x19, [x19, #8]
  40db80:	str	x0, [x1, #8]
  40db84:	str	x1, [x20, #72]
  40db88:	mov	x0, x1
  40db8c:	cbnz	x19, 40db74 <ferror@plt+0xad34>
  40db90:	b	40db48 <ferror@plt+0xad08>
  40db94:	nop
  40db98:	stp	x29, x30, [sp, #-48]!
  40db9c:	mov	x29, sp
  40dba0:	str	x21, [sp, #32]
  40dba4:	mov	x21, x0
  40dba8:	ldr	x0, [x0, #64]
  40dbac:	stp	x19, x20, [sp, #16]
  40dbb0:	ldp	x20, x1, [x21]
  40dbb4:	cbz	x0, 40dc10 <ferror@plt+0xadd0>
  40dbb8:	ldr	x0, [x21, #32]
  40dbbc:	cbz	x0, 40dc10 <ferror@plt+0xadd0>
  40dbc0:	cmp	x20, x1
  40dbc4:	b.cc	40dbd8 <ferror@plt+0xad98>  // b.lo, b.ul, b.last
  40dbc8:	b	40dc40 <ferror@plt+0xae00>
  40dbcc:	add	x20, x20, #0x10
  40dbd0:	cmp	x20, x1
  40dbd4:	b.cs	40dc0c <ferror@plt+0xadcc>  // b.hs, b.nlast
  40dbd8:	ldr	x0, [x20]
  40dbdc:	cbz	x0, 40dbcc <ferror@plt+0xad8c>
  40dbe0:	mov	x19, x20
  40dbe4:	b	40dbec <ferror@plt+0xadac>
  40dbe8:	ldr	x0, [x19]
  40dbec:	ldr	x1, [x21, #64]
  40dbf0:	blr	x1
  40dbf4:	ldr	x19, [x19, #8]
  40dbf8:	cbnz	x19, 40dbe8 <ferror@plt+0xada8>
  40dbfc:	ldr	x1, [x21, #8]
  40dc00:	add	x20, x20, #0x10
  40dc04:	cmp	x20, x1
  40dc08:	b.cc	40dbd8 <ferror@plt+0xad98>  // b.lo, b.ul, b.last
  40dc0c:	ldr	x20, [x21]
  40dc10:	cmp	x1, x20
  40dc14:	b.ls	40dc40 <ferror@plt+0xae00>  // b.plast
  40dc18:	ldr	x19, [x20, #8]
  40dc1c:	cbz	x19, 40dc34 <ferror@plt+0xadf4>
  40dc20:	mov	x0, x19
  40dc24:	ldr	x19, [x19, #8]
  40dc28:	bl	402ba0 <free@plt>
  40dc2c:	cbnz	x19, 40dc20 <ferror@plt+0xade0>
  40dc30:	ldr	x1, [x21, #8]
  40dc34:	add	x20, x20, #0x10
  40dc38:	cmp	x20, x1
  40dc3c:	b.cc	40dc18 <ferror@plt+0xadd8>  // b.lo, b.ul, b.last
  40dc40:	ldr	x19, [x21, #72]
  40dc44:	cbz	x19, 40dc58 <ferror@plt+0xae18>
  40dc48:	mov	x0, x19
  40dc4c:	ldr	x19, [x19, #8]
  40dc50:	bl	402ba0 <free@plt>
  40dc54:	cbnz	x19, 40dc48 <ferror@plt+0xae08>
  40dc58:	ldr	x0, [x21]
  40dc5c:	bl	402ba0 <free@plt>
  40dc60:	mov	x0, x21
  40dc64:	ldp	x19, x20, [sp, #16]
  40dc68:	ldr	x21, [sp, #32]
  40dc6c:	ldp	x29, x30, [sp], #48
  40dc70:	b	402ba0 <free@plt>
  40dc74:	nop
  40dc78:	stp	x29, x30, [sp, #-128]!
  40dc7c:	mov	x29, sp
  40dc80:	str	x21, [sp, #32]
  40dc84:	ldr	x21, [x0, #40]
  40dc88:	stp	x19, x20, [sp, #16]
  40dc8c:	mov	x20, x0
  40dc90:	ldrb	w0, [x21, #16]
  40dc94:	cbnz	w0, 40dcb8 <ferror@plt+0xae78>
  40dc98:	ucvtf	s0, x1
  40dc9c:	ldr	s2, [x21, #8]
  40dca0:	mov	w0, #0x5f800000            	// #1602224128
  40dca4:	fmov	s1, w0
  40dca8:	fdiv	s0, s0, s2
  40dcac:	fcmpe	s0, s1
  40dcb0:	fcvtzu	x1, s0
  40dcb4:	b.ge	40dd34 <ferror@plt+0xaef4>  // b.tcont
  40dcb8:	cmp	x1, #0xa
  40dcbc:	mov	x19, #0xa                   	// #10
  40dcc0:	csel	x1, x1, x19, cs  // cs = hs, nlast
  40dcc4:	mov	x4, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  40dcc8:	orr	x19, x1, #0x1
  40dccc:	movk	x4, #0xaaab
  40dcd0:	cmn	x19, #0x1
  40dcd4:	b.eq	40dd34 <ferror@plt+0xaef4>  // b.none
  40dcd8:	umulh	x1, x19, x4
  40dcdc:	cmp	x19, #0x9
  40dce0:	and	x0, x1, #0xfffffffffffffffe
  40dce4:	add	x1, x0, x1, lsr #1
  40dce8:	sub	x1, x19, x1
  40dcec:	b.ls	40dd24 <ferror@plt+0xaee4>  // b.plast
  40dcf0:	cbz	x1, 40dd28 <ferror@plt+0xaee8>
  40dcf4:	mov	x3, #0x10                  	// #16
  40dcf8:	mov	x2, #0x9                   	// #9
  40dcfc:	mov	x0, #0x3                   	// #3
  40dd00:	b	40dd0c <ferror@plt+0xaecc>
  40dd04:	add	x3, x3, #0x8
  40dd08:	cbz	x1, 40dd28 <ferror@plt+0xaee8>
  40dd0c:	add	x0, x0, #0x2
  40dd10:	add	x2, x2, x3
  40dd14:	cmp	x2, x19
  40dd18:	udiv	x1, x19, x0
  40dd1c:	msub	x1, x1, x0, x19
  40dd20:	b.cc	40dd04 <ferror@plt+0xaec4>  // b.lo, b.ul, b.last
  40dd24:	cbnz	x1, 40dd4c <ferror@plt+0xaf0c>
  40dd28:	add	x19, x19, #0x2
  40dd2c:	cmn	x19, #0x1
  40dd30:	b.ne	40dcd8 <ferror@plt+0xae98>  // b.any
  40dd34:	mov	w19, #0x0                   	// #0
  40dd38:	mov	w0, w19
  40dd3c:	ldp	x19, x20, [sp, #16]
  40dd40:	ldr	x21, [sp, #32]
  40dd44:	ldp	x29, x30, [sp], #128
  40dd48:	ret
  40dd4c:	cmp	xzr, x19, lsr #61
  40dd50:	cset	x0, ne  // ne = any
  40dd54:	tbnz	x19, #60, 40dd34 <ferror@plt+0xaef4>
  40dd58:	cbnz	x0, 40dd34 <ferror@plt+0xaef4>
  40dd5c:	ldr	x0, [x20, #16]
  40dd60:	cmp	x0, x19
  40dd64:	b.eq	40de08 <ferror@plt+0xafc8>  // b.none
  40dd68:	mov	x0, x19
  40dd6c:	mov	x1, #0x10                  	// #16
  40dd70:	bl	4029d0 <calloc@plt>
  40dd74:	str	x0, [sp, #48]
  40dd78:	cbz	x0, 40dd34 <ferror@plt+0xaef4>
  40dd7c:	ldp	x5, x4, [x20, #64]
  40dd80:	add	x3, x0, x19, lsl #4
  40dd84:	ldr	q0, [x20, #48]
  40dd88:	add	x0, sp, #0x30
  40dd8c:	mov	x1, x20
  40dd90:	mov	w2, #0x0                   	// #0
  40dd94:	stp	x3, x19, [sp, #56]
  40dd98:	stp	xzr, xzr, [sp, #72]
  40dd9c:	str	x21, [sp, #88]
  40dda0:	str	q0, [sp, #96]
  40dda4:	stp	x5, x4, [sp, #112]
  40dda8:	bl	40d240 <ferror@plt+0xa400>
  40ddac:	ands	w19, w0, #0xff
  40ddb0:	b.ne	40de20 <ferror@plt+0xafe0>  // b.any
  40ddb4:	ldr	x0, [sp, #120]
  40ddb8:	str	x0, [x20, #72]
  40ddbc:	add	x1, sp, #0x30
  40ddc0:	mov	x0, x20
  40ddc4:	mov	w2, #0x1                   	// #1
  40ddc8:	bl	40d240 <ferror@plt+0xa400>
  40ddcc:	tst	w0, #0xff
  40ddd0:	b.eq	40de4c <ferror@plt+0xb00c>  // b.none
  40ddd4:	add	x1, sp, #0x30
  40ddd8:	mov	x0, x20
  40dddc:	mov	w2, #0x0                   	// #0
  40dde0:	bl	40d240 <ferror@plt+0xa400>
  40dde4:	tst	w0, #0xff
  40dde8:	b.eq	40de4c <ferror@plt+0xb00c>  // b.none
  40ddec:	ldr	x0, [sp, #48]
  40ddf0:	bl	402ba0 <free@plt>
  40ddf4:	mov	w0, w19
  40ddf8:	ldp	x19, x20, [sp, #16]
  40ddfc:	ldr	x21, [sp, #32]
  40de00:	ldp	x29, x30, [sp], #128
  40de04:	ret
  40de08:	mov	w19, #0x1                   	// #1
  40de0c:	mov	w0, w19
  40de10:	ldp	x19, x20, [sp, #16]
  40de14:	ldr	x21, [sp, #32]
  40de18:	ldp	x29, x30, [sp], #128
  40de1c:	ret
  40de20:	ldr	x0, [x20]
  40de24:	bl	402ba0 <free@plt>
  40de28:	ldp	q1, q0, [sp, #48]
  40de2c:	ldr	x0, [sp, #120]
  40de30:	str	x0, [x20, #72]
  40de34:	stp	q1, q0, [x20]
  40de38:	mov	w0, w19
  40de3c:	ldp	x19, x20, [sp, #16]
  40de40:	ldr	x21, [sp, #32]
  40de44:	ldp	x29, x30, [sp], #128
  40de48:	ret
  40de4c:	bl	402a80 <abort@plt>
  40de50:	stp	x29, x30, [sp, #-64]!
  40de54:	mov	x29, sp
  40de58:	stp	x19, x20, [sp, #16]
  40de5c:	str	x21, [sp, #32]
  40de60:	cbz	x1, 40dfd0 <ferror@plt+0xb190>
  40de64:	mov	w3, #0x0                   	// #0
  40de68:	mov	x21, x2
  40de6c:	mov	x19, x0
  40de70:	mov	x20, x1
  40de74:	add	x2, sp, #0x38
  40de78:	bl	40d0f0 <ferror@plt+0xa2b0>
  40de7c:	mov	x3, x0
  40de80:	cbz	x0, 40dea0 <ferror@plt+0xb060>
  40de84:	mov	w0, #0x0                   	// #0
  40de88:	cbz	x21, 40de90 <ferror@plt+0xb050>
  40de8c:	str	x3, [x21]
  40de90:	ldp	x19, x20, [sp, #16]
  40de94:	ldr	x21, [sp, #32]
  40de98:	ldp	x29, x30, [sp], #64
  40de9c:	ret
  40dea0:	ldr	x0, [x19, #16]
  40dea4:	ldr	x1, [x19, #40]
  40dea8:	ucvtf	s0, x0
  40deac:	ldr	x0, [x19, #24]
  40deb0:	ldr	s2, [x1, #8]
  40deb4:	ucvtf	s1, x0
  40deb8:	fmul	s3, s2, s0
  40debc:	fcmpe	s1, s3
  40dec0:	b.gt	40df0c <ferror@plt+0xb0cc>
  40dec4:	ldr	x21, [sp, #56]
  40dec8:	ldr	x0, [x21]
  40decc:	cbz	x0, 40e008 <ferror@plt+0xb1c8>
  40ded0:	ldr	x0, [x19, #72]
  40ded4:	cbz	x0, 40e034 <ferror@plt+0xb1f4>
  40ded8:	ldr	x1, [x0, #8]
  40dedc:	str	x1, [x19, #72]
  40dee0:	ldr	x2, [x21, #8]
  40dee4:	ldr	x1, [x19, #32]
  40dee8:	stp	x20, x2, [x0]
  40deec:	str	x0, [x21, #8]
  40def0:	add	x1, x1, #0x1
  40def4:	str	x1, [x19, #32]
  40def8:	mov	w0, #0x1                   	// #1
  40defc:	ldp	x19, x20, [sp, #16]
  40df00:	ldr	x21, [sp, #32]
  40df04:	ldp	x29, x30, [sp], #64
  40df08:	ret
  40df0c:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x26c8>
  40df10:	add	x2, x2, #0x890
  40df14:	cmp	x1, x2
  40df18:	b.eq	40e054 <ferror@plt+0xb214>  // b.none
  40df1c:	mov	w0, #0xcccd                	// #52429
  40df20:	movk	w0, #0x3dcc, lsl #16
  40df24:	fmov	s3, w0
  40df28:	fcmpe	s2, s3
  40df2c:	b.le	40dfd4 <ferror@plt+0xb194>
  40df30:	mov	w0, #0x6666                	// #26214
  40df34:	movk	w0, #0x3f66, lsl #16
  40df38:	fmov	s4, w0
  40df3c:	fcmpe	s2, s4
  40df40:	b.pl	40dfd4 <ferror@plt+0xb194>  // b.nfrst
  40df44:	adrp	x0, 418000 <_obstack_memory_used@@Base+0x26c8>
  40df48:	ldr	s5, [x1, #12]
  40df4c:	ldr	s4, [x0, #2168]
  40df50:	fcmpe	s5, s4
  40df54:	b.le	40dfd4 <ferror@plt+0xb194>
  40df58:	ldr	s4, [x1]
  40df5c:	fcmpe	s4, #0.0
  40df60:	b.lt	40dfd4 <ferror@plt+0xb194>  // b.tstop
  40df64:	fadd	s3, s4, s3
  40df68:	ldr	s4, [x1, #4]
  40df6c:	fcmpe	s3, s4
  40df70:	b.pl	40dfd4 <ferror@plt+0xb194>  // b.nfrst
  40df74:	fmov	s6, #1.000000000000000000e+00
  40df78:	fcmpe	s4, s6
  40df7c:	b.hi	40dfd4 <ferror@plt+0xb194>  // b.pmore
  40df80:	fcmpe	s2, s3
  40df84:	b.le	40dfd4 <ferror@plt+0xb194>
  40df88:	ldrb	w0, [x1, #16]
  40df8c:	fmul	s0, s0, s5
  40df90:	cbz	w0, 40e000 <ferror@plt+0xb1c0>
  40df94:	mov	w0, #0x5f800000            	// #1602224128
  40df98:	fmov	s1, w0
  40df9c:	fcmpe	s0, s1
  40dfa0:	b.ge	40e040 <ferror@plt+0xb200>  // b.tcont
  40dfa4:	fcvtzu	x1, s0
  40dfa8:	mov	x0, x19
  40dfac:	bl	40dc78 <ferror@plt+0xae38>
  40dfb0:	tst	w0, #0xff
  40dfb4:	b.eq	40e040 <ferror@plt+0xb200>  // b.none
  40dfb8:	add	x2, sp, #0x38
  40dfbc:	mov	x1, x20
  40dfc0:	mov	x0, x19
  40dfc4:	mov	w3, #0x0                   	// #0
  40dfc8:	bl	40d0f0 <ferror@plt+0xa2b0>
  40dfcc:	cbz	x0, 40dec4 <ferror@plt+0xb084>
  40dfd0:	bl	402a80 <abort@plt>
  40dfd4:	mov	w0, #0xcccd                	// #52429
  40dfd8:	str	x2, [x19, #40]
  40dfdc:	movk	w0, #0x3f4c, lsl #16
  40dfe0:	fmov	s2, w0
  40dfe4:	fmul	s3, s0, s2
  40dfe8:	fcmpe	s1, s3
  40dfec:	b.le	40dec4 <ferror@plt+0xb084>
  40dff0:	mov	w0, #0xfdf4                	// #65012
  40dff4:	movk	w0, #0x3fb4, lsl #16
  40dff8:	fmov	s1, w0
  40dffc:	fmul	s0, s0, s1
  40e000:	fmul	s0, s0, s2
  40e004:	b	40df94 <ferror@plt+0xb154>
  40e008:	adrp	x0, 418000 <_obstack_memory_used@@Base+0x26c8>
  40e00c:	ldur	q0, [x19, #24]
  40e010:	str	x20, [x21]
  40e014:	ldr	q1, [x0, #2176]
  40e018:	mov	w0, #0x1                   	// #1
  40e01c:	ldr	x21, [sp, #32]
  40e020:	add	v0.2d, v0.2d, v1.2d
  40e024:	stur	q0, [x19, #24]
  40e028:	ldp	x19, x20, [sp, #16]
  40e02c:	ldp	x29, x30, [sp], #64
  40e030:	ret
  40e034:	mov	x0, #0x10                  	// #16
  40e038:	bl	4028e0 <malloc@plt>
  40e03c:	cbnz	x0, 40dee0 <ferror@plt+0xb0a0>
  40e040:	mov	w0, #0xffffffff            	// #-1
  40e044:	ldp	x19, x20, [sp, #16]
  40e048:	ldr	x21, [sp, #32]
  40e04c:	ldp	x29, x30, [sp], #64
  40e050:	ret
  40e054:	mov	w0, #0xfdf4                	// #65012
  40e058:	movk	w0, #0x3fb4, lsl #16
  40e05c:	fmov	s1, w0
  40e060:	mov	w0, #0xcccd                	// #52429
  40e064:	fmul	s0, s0, s1
  40e068:	movk	w0, #0x3f4c, lsl #16
  40e06c:	fmov	s2, w0
  40e070:	fmul	s0, s0, s2
  40e074:	b	40df94 <ferror@plt+0xb154>
  40e078:	stp	x29, x30, [sp, #-64]!
  40e07c:	mov	x29, sp
  40e080:	stp	x19, x20, [sp, #16]
  40e084:	stp	x21, x22, [sp, #32]
  40e088:	cbz	x1, 40e1f4 <ferror@plt+0xb3b4>
  40e08c:	mov	x19, x0
  40e090:	mov	x21, x1
  40e094:	add	x2, sp, #0x38
  40e098:	mov	w3, #0x0                   	// #0
  40e09c:	bl	40d0f0 <ferror@plt+0xa2b0>
  40e0a0:	mov	x20, x0
  40e0a4:	cbz	x0, 40e0bc <ferror@plt+0xb27c>
  40e0a8:	mov	x0, x20
  40e0ac:	ldp	x19, x20, [sp, #16]
  40e0b0:	ldp	x21, x22, [sp, #32]
  40e0b4:	ldp	x29, x30, [sp], #64
  40e0b8:	ret
  40e0bc:	ldr	x0, [x19, #16]
  40e0c0:	ldr	x1, [x19, #40]
  40e0c4:	ucvtf	s0, x0
  40e0c8:	ldr	x0, [x19, #24]
  40e0cc:	ldr	s2, [x1, #8]
  40e0d0:	ucvtf	s1, x0
  40e0d4:	fmul	s3, s2, s0
  40e0d8:	fcmpe	s1, s3
  40e0dc:	b.gt	40e12c <ferror@plt+0xb2ec>
  40e0e0:	ldr	x22, [sp, #56]
  40e0e4:	ldr	x0, [x22]
  40e0e8:	cbz	x0, 40e22c <ferror@plt+0xb3ec>
  40e0ec:	ldr	x0, [x19, #72]
  40e0f0:	cbz	x0, 40e25c <ferror@plt+0xb41c>
  40e0f4:	ldr	x1, [x0, #8]
  40e0f8:	str	x1, [x19, #72]
  40e0fc:	ldr	x2, [x22, #8]
  40e100:	mov	x20, x21
  40e104:	ldr	x1, [x19, #32]
  40e108:	stp	x21, x2, [x0]
  40e10c:	str	x0, [x22, #8]
  40e110:	add	x0, x1, #0x1
  40e114:	str	x0, [x19, #32]
  40e118:	mov	x0, x20
  40e11c:	ldp	x19, x20, [sp, #16]
  40e120:	ldp	x21, x22, [sp, #32]
  40e124:	ldp	x29, x30, [sp], #64
  40e128:	ret
  40e12c:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x26c8>
  40e130:	add	x2, x2, #0x890
  40e134:	cmp	x1, x2
  40e138:	b.eq	40e26c <ferror@plt+0xb42c>  // b.none
  40e13c:	mov	w0, #0xcccd                	// #52429
  40e140:	movk	w0, #0x3dcc, lsl #16
  40e144:	fmov	s3, w0
  40e148:	fcmpe	s2, s3
  40e14c:	b.le	40e1f8 <ferror@plt+0xb3b8>
  40e150:	mov	w0, #0x6666                	// #26214
  40e154:	movk	w0, #0x3f66, lsl #16
  40e158:	fmov	s4, w0
  40e15c:	fcmpe	s2, s4
  40e160:	b.pl	40e1f8 <ferror@plt+0xb3b8>  // b.nfrst
  40e164:	mov	w0, #0xcccd                	// #52429
  40e168:	ldr	s5, [x1, #12]
  40e16c:	movk	w0, #0x3f8c, lsl #16
  40e170:	fmov	s4, w0
  40e174:	fcmpe	s5, s4
  40e178:	b.le	40e1f8 <ferror@plt+0xb3b8>
  40e17c:	ldr	s4, [x1]
  40e180:	fcmpe	s4, #0.0
  40e184:	b.lt	40e1f8 <ferror@plt+0xb3b8>  // b.tstop
  40e188:	fadd	s3, s4, s3
  40e18c:	ldr	s4, [x1, #4]
  40e190:	fcmpe	s3, s4
  40e194:	b.pl	40e1f8 <ferror@plt+0xb3b8>  // b.nfrst
  40e198:	fmov	s6, #1.000000000000000000e+00
  40e19c:	fcmpe	s4, s6
  40e1a0:	b.hi	40e1f8 <ferror@plt+0xb3b8>  // b.pmore
  40e1a4:	fcmpe	s2, s3
  40e1a8:	b.le	40e1f8 <ferror@plt+0xb3b8>
  40e1ac:	ldrb	w0, [x1, #16]
  40e1b0:	fmul	s0, s0, s5
  40e1b4:	cbz	w0, 40e224 <ferror@plt+0xb3e4>
  40e1b8:	mov	w0, #0x5f800000            	// #1602224128
  40e1bc:	fmov	s1, w0
  40e1c0:	fcmpe	s0, s1
  40e1c4:	b.ge	40e0a8 <ferror@plt+0xb268>  // b.tcont
  40e1c8:	fcvtzu	x1, s0
  40e1cc:	mov	x0, x19
  40e1d0:	bl	40dc78 <ferror@plt+0xae38>
  40e1d4:	tst	w0, #0xff
  40e1d8:	b.eq	40e0a8 <ferror@plt+0xb268>  // b.none
  40e1dc:	add	x2, sp, #0x38
  40e1e0:	mov	x1, x21
  40e1e4:	mov	x0, x19
  40e1e8:	mov	w3, #0x0                   	// #0
  40e1ec:	bl	40d0f0 <ferror@plt+0xa2b0>
  40e1f0:	cbz	x0, 40e0e0 <ferror@plt+0xb2a0>
  40e1f4:	bl	402a80 <abort@plt>
  40e1f8:	mov	w0, #0xcccd                	// #52429
  40e1fc:	str	x2, [x19, #40]
  40e200:	movk	w0, #0x3f4c, lsl #16
  40e204:	fmov	s2, w0
  40e208:	fmul	s3, s0, s2
  40e20c:	fcmpe	s1, s3
  40e210:	b.le	40e0e0 <ferror@plt+0xb2a0>
  40e214:	mov	w0, #0xfdf4                	// #65012
  40e218:	movk	w0, #0x3fb4, lsl #16
  40e21c:	fmov	s1, w0
  40e220:	fmul	s0, s0, s1
  40e224:	fmul	s0, s0, s2
  40e228:	b	40e1b8 <ferror@plt+0xb378>
  40e22c:	adrp	x0, 418000 <_obstack_memory_used@@Base+0x26c8>
  40e230:	mov	x20, x21
  40e234:	ldur	q0, [x19, #24]
  40e238:	str	x21, [x22]
  40e23c:	ldr	q1, [x0, #2176]
  40e240:	mov	x0, x20
  40e244:	ldp	x21, x22, [sp, #32]
  40e248:	add	v0.2d, v0.2d, v1.2d
  40e24c:	stur	q0, [x19, #24]
  40e250:	ldp	x19, x20, [sp, #16]
  40e254:	ldp	x29, x30, [sp], #64
  40e258:	ret
  40e25c:	mov	x0, #0x10                  	// #16
  40e260:	bl	4028e0 <malloc@plt>
  40e264:	cbz	x0, 40e0a8 <ferror@plt+0xb268>
  40e268:	b	40e0fc <ferror@plt+0xb2bc>
  40e26c:	mov	w0, #0xfdf4                	// #65012
  40e270:	movk	w0, #0x3fb4, lsl #16
  40e274:	fmov	s1, w0
  40e278:	mov	w0, #0xcccd                	// #52429
  40e27c:	fmul	s0, s0, s1
  40e280:	movk	w0, #0x3f4c, lsl #16
  40e284:	fmov	s2, w0
  40e288:	fmul	s0, s0, s2
  40e28c:	b	40e1b8 <ferror@plt+0xb378>
  40e290:	stp	x29, x30, [sp, #-64]!
  40e294:	mov	w3, #0x1                   	// #1
  40e298:	mov	x29, sp
  40e29c:	add	x2, sp, #0x38
  40e2a0:	stp	x19, x20, [sp, #16]
  40e2a4:	mov	x19, x0
  40e2a8:	bl	40d0f0 <ferror@plt+0xa2b0>
  40e2ac:	mov	x20, x0
  40e2b0:	cbz	x0, 40e2cc <ferror@plt+0xb48c>
  40e2b4:	ldr	x1, [sp, #56]
  40e2b8:	ldr	x0, [x19, #32]
  40e2bc:	ldr	x1, [x1]
  40e2c0:	sub	x0, x0, #0x1
  40e2c4:	str	x0, [x19, #32]
  40e2c8:	cbz	x1, 40e2dc <ferror@plt+0xb49c>
  40e2cc:	mov	x0, x20
  40e2d0:	ldp	x19, x20, [sp, #16]
  40e2d4:	ldp	x29, x30, [sp], #64
  40e2d8:	ret
  40e2dc:	ldr	x0, [x19, #16]
  40e2e0:	ldr	x1, [x19, #40]
  40e2e4:	ucvtf	s1, x0
  40e2e8:	ldr	x0, [x19, #24]
  40e2ec:	ldr	s2, [x1]
  40e2f0:	sub	x0, x0, #0x1
  40e2f4:	str	x0, [x19, #24]
  40e2f8:	fmul	s3, s2, s1
  40e2fc:	ucvtf	s0, x0
  40e300:	fcmpe	s0, s3
  40e304:	b.pl	40e2cc <ferror@plt+0xb48c>  // b.nfrst
  40e308:	adrp	x0, 418000 <_obstack_memory_used@@Base+0x26c8>
  40e30c:	add	x0, x0, #0x890
  40e310:	cmp	x1, x0
  40e314:	b.eq	40e3f0 <ferror@plt+0xb5b0>  // b.none
  40e318:	mov	w2, #0xcccd                	// #52429
  40e31c:	ldr	s3, [x1, #8]
  40e320:	movk	w2, #0x3dcc, lsl #16
  40e324:	fmov	s4, w2
  40e328:	fcmpe	s3, s4
  40e32c:	b.le	40e3dc <ferror@plt+0xb59c>
  40e330:	mov	w2, #0x6666                	// #26214
  40e334:	movk	w2, #0x3f66, lsl #16
  40e338:	fmov	s5, w2
  40e33c:	fcmpe	s3, s5
  40e340:	b.pl	40e3dc <ferror@plt+0xb59c>  // b.nfrst
  40e344:	mov	w2, #0xcccd                	// #52429
  40e348:	ldr	s6, [x1, #12]
  40e34c:	movk	w2, #0x3f8c, lsl #16
  40e350:	fmov	s5, w2
  40e354:	fcmpe	s6, s5
  40e358:	b.le	40e3dc <ferror@plt+0xb59c>
  40e35c:	fcmpe	s2, #0.0
  40e360:	b.lt	40e3dc <ferror@plt+0xb59c>  // b.tstop
  40e364:	fadd	s2, s2, s4
  40e368:	ldr	s4, [x1, #4]
  40e36c:	fcmpe	s2, s4
  40e370:	b.pl	40e3dc <ferror@plt+0xb59c>  // b.nfrst
  40e374:	fmov	s5, #1.000000000000000000e+00
  40e378:	fcmpe	s4, s5
  40e37c:	b.hi	40e3dc <ferror@plt+0xb59c>  // b.pmore
  40e380:	fcmpe	s3, s2
  40e384:	b.le	40e3dc <ferror@plt+0xb59c>
  40e388:	ldrb	w0, [x1, #16]
  40e38c:	fmul	s1, s1, s4
  40e390:	cbnz	w0, 40e39c <ferror@plt+0xb55c>
  40e394:	nop
  40e398:	fmul	s1, s1, s3
  40e39c:	fcvtzu	x1, s1
  40e3a0:	mov	x0, x19
  40e3a4:	bl	40dc78 <ferror@plt+0xae38>
  40e3a8:	tst	w0, #0xff
  40e3ac:	b.ne	40e2cc <ferror@plt+0xb48c>  // b.any
  40e3b0:	str	x21, [sp, #32]
  40e3b4:	ldr	x21, [x19, #72]
  40e3b8:	cbz	x21, 40e3d0 <ferror@plt+0xb590>
  40e3bc:	nop
  40e3c0:	mov	x0, x21
  40e3c4:	ldr	x21, [x21, #8]
  40e3c8:	bl	402ba0 <free@plt>
  40e3cc:	cbnz	x21, 40e3c0 <ferror@plt+0xb580>
  40e3d0:	ldr	x21, [sp, #32]
  40e3d4:	str	xzr, [x19, #72]
  40e3d8:	b	40e2cc <ferror@plt+0xb48c>
  40e3dc:	movi	v2.2s, #0x0
  40e3e0:	str	x0, [x19, #40]
  40e3e4:	fmul	s2, s1, s2
  40e3e8:	fcmpe	s0, s2
  40e3ec:	b.pl	40e2cc <ferror@plt+0xb48c>  // b.nfrst
  40e3f0:	mov	w0, #0xcccd                	// #52429
  40e3f4:	movk	w0, #0x3f4c, lsl #16
  40e3f8:	fmov	s3, w0
  40e3fc:	b	40e398 <ferror@plt+0xb558>
  40e400:	mov	w0, #0x0                   	// #0
  40e404:	ret
  40e408:	stp	x29, x30, [sp, #-48]!
  40e40c:	mov	x29, sp
  40e410:	stp	x19, x20, [sp, #16]
  40e414:	mov	x19, x1
  40e418:	str	x21, [sp, #32]
  40e41c:	mov	x21, x0
  40e420:	mov	x0, #0x20                  	// #32
  40e424:	bl	414158 <ferror@plt+0x11318>
  40e428:	cmp	x19, #0x0
  40e42c:	csinc	x19, x19, xzr, ne  // ne = any
  40e430:	cmp	xzr, x19, lsr #61
  40e434:	cset	x1, ne  // ne = any
  40e438:	tbnz	x19, #60, 40e480 <ferror@plt+0xb640>
  40e43c:	cbnz	x1, 40e480 <ferror@plt+0xb640>
  40e440:	mov	x20, x0
  40e444:	lsl	x0, x19, #3
  40e448:	bl	414158 <ferror@plt+0x11318>
  40e44c:	mov	x1, x0
  40e450:	cmp	x21, #0x0
  40e454:	adrp	x2, 40e000 <ferror@plt+0xb1c0>
  40e458:	add	x2, x2, #0x400
  40e45c:	stp	x1, x19, [x20]
  40e460:	csel	x21, x2, x21, eq  // eq = none
  40e464:	str	xzr, [x1]
  40e468:	mov	x0, x20
  40e46c:	stp	xzr, x21, [x20, #16]
  40e470:	ldp	x19, x20, [sp, #16]
  40e474:	ldr	x21, [sp, #32]
  40e478:	ldp	x29, x30, [sp], #48
  40e47c:	ret
  40e480:	bl	414320 <ferror@plt+0x114e0>
  40e484:	nop
  40e488:	stp	x29, x30, [sp, #-32]!
  40e48c:	mov	x29, sp
  40e490:	str	x19, [sp, #16]
  40e494:	mov	x19, x0
  40e498:	ldr	x0, [x0]
  40e49c:	bl	402ba0 <free@plt>
  40e4a0:	mov	x0, x19
  40e4a4:	ldr	x19, [sp, #16]
  40e4a8:	ldp	x29, x30, [sp], #32
  40e4ac:	b	402ba0 <free@plt>
  40e4b0:	stp	x29, x30, [sp, #-64]!
  40e4b4:	mov	x29, sp
  40e4b8:	stp	x19, x20, [sp, #16]
  40e4bc:	mov	x20, x0
  40e4c0:	ldp	x2, x19, [x0, #8]
  40e4c4:	stp	x21, x22, [sp, #32]
  40e4c8:	mov	x21, x1
  40e4cc:	ldr	x0, [x0]
  40e4d0:	str	x23, [sp, #48]
  40e4d4:	sub	x1, x2, #0x1
  40e4d8:	cmp	x1, x19
  40e4dc:	b.ls	40e570 <ferror@plt+0xb730>  // b.plast
  40e4e0:	add	x19, x19, #0x1
  40e4e4:	str	x19, [x20, #16]
  40e4e8:	cmp	x19, #0x1
  40e4ec:	str	x21, [x0, x19, lsl #3]
  40e4f0:	ldr	x21, [x20]
  40e4f4:	ldr	x23, [x20, #24]
  40e4f8:	ldr	x22, [x21, x19, lsl #3]
  40e4fc:	b.ne	40e514 <ferror@plt+0xb6d4>  // b.any
  40e500:	b	40e550 <ferror@plt+0xb710>
  40e504:	ldr	x0, [x21, x19, lsl #3]
  40e508:	str	x0, [x21, x20, lsl #3]
  40e50c:	cmp	x19, #0x1
  40e510:	b.eq	40e550 <ferror@plt+0xb710>  // b.none
  40e514:	mov	x20, x19
  40e518:	lsr	x19, x19, #1
  40e51c:	mov	x1, x22
  40e520:	ldr	x0, [x21, x19, lsl #3]
  40e524:	blr	x23
  40e528:	cmp	w0, #0x0
  40e52c:	add	x1, x21, x20, lsl #3
  40e530:	b.le	40e504 <ferror@plt+0xb6c4>
  40e534:	ldp	x19, x20, [sp, #16]
  40e538:	mov	w0, #0x0                   	// #0
  40e53c:	ldr	x23, [sp, #48]
  40e540:	str	x22, [x1]
  40e544:	ldp	x21, x22, [sp, #32]
  40e548:	ldp	x29, x30, [sp], #64
  40e54c:	ret
  40e550:	add	x1, x21, #0x8
  40e554:	mov	w0, #0x0                   	// #0
  40e558:	ldp	x19, x20, [sp, #16]
  40e55c:	ldr	x23, [sp, #48]
  40e560:	str	x22, [x1]
  40e564:	ldp	x21, x22, [sp, #32]
  40e568:	ldp	x29, x30, [sp], #64
  40e56c:	ret
  40e570:	cbz	x0, 40e5a4 <ferror@plt+0xb764>
  40e574:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  40e578:	movk	x1, #0xaaa, lsl #48
  40e57c:	cmp	x2, x1
  40e580:	b.cs	40e5bc <ferror@plt+0xb77c>  // b.hs, b.nlast
  40e584:	add	x1, x2, #0x1
  40e588:	add	x2, x1, x2, lsr #1
  40e58c:	lsl	x1, x2, #3
  40e590:	str	x2, [x20, #8]
  40e594:	bl	414188 <ferror@plt+0x11348>
  40e598:	str	x0, [x20]
  40e59c:	ldr	x19, [x20, #16]
  40e5a0:	b	40e4e0 <ferror@plt+0xb6a0>
  40e5a4:	cbz	x2, 40e5c0 <ferror@plt+0xb780>
  40e5a8:	cmp	xzr, x2, lsr #61
  40e5ac:	lsl	x1, x2, #3
  40e5b0:	cset	x3, ne  // ne = any
  40e5b4:	tbnz	x2, #60, 40e5bc <ferror@plt+0xb77c>
  40e5b8:	cbz	x3, 40e590 <ferror@plt+0xb750>
  40e5bc:	bl	414320 <ferror@plt+0x114e0>
  40e5c0:	mov	x1, #0x80                  	// #128
  40e5c4:	mov	x2, #0x10                  	// #16
  40e5c8:	b	40e590 <ferror@plt+0xb750>
  40e5cc:	nop
  40e5d0:	stp	x29, x30, [sp, #-112]!
  40e5d4:	mov	x29, sp
  40e5d8:	ldr	x1, [x0, #16]
  40e5dc:	stp	x25, x26, [sp, #64]
  40e5e0:	mov	x25, #0x0                   	// #0
  40e5e4:	cbz	x1, 40e6ac <ferror@plt+0xb86c>
  40e5e8:	ldr	x2, [x0]
  40e5ec:	stp	x19, x20, [sp, #16]
  40e5f0:	stp	x23, x24, [sp, #48]
  40e5f4:	sub	x23, x1, #0x1
  40e5f8:	stp	x27, x28, [sp, #80]
  40e5fc:	lsr	x3, x23, #1
  40e600:	cmp	xzr, x23, lsr #1
  40e604:	ldr	x1, [x2, x1, lsl #3]
  40e608:	str	x3, [sp, #104]
  40e60c:	ldr	x25, [x2, #8]
  40e610:	str	x23, [x0, #16]
  40e614:	str	x1, [x2, #8]
  40e618:	ldr	x19, [x0]
  40e61c:	ldr	x24, [x0, #24]
  40e620:	ldr	x27, [x19, #8]
  40e624:	b.eq	40e6c8 <ferror@plt+0xb888>  // b.none
  40e628:	stp	x21, x22, [sp, #32]
  40e62c:	mov	x21, #0x1                   	// #1
  40e630:	b	40e64c <ferror@plt+0xb80c>
  40e634:	ldr	x0, [sp, #104]
  40e638:	cmp	x22, x0
  40e63c:	ldr	x0, [x20]
  40e640:	str	x0, [x19, x21, lsl #3]
  40e644:	mov	x21, x22
  40e648:	b.hi	40e6bc <ferror@plt+0xb87c>  // b.pmore
  40e64c:	lsl	x0, x21, #4
  40e650:	lsl	x22, x21, #1
  40e654:	cmp	x23, x21, lsl #1
  40e658:	add	x20, x19, x0
  40e65c:	add	x28, x22, #0x1
  40e660:	b.ls	40e680 <ferror@plt+0xb840>  // b.plast
  40e664:	ldr	x0, [x19, x0]
  40e668:	add	x26, x19, x28, lsl #3
  40e66c:	ldr	x1, [x19, x28, lsl #3]
  40e670:	blr	x24
  40e674:	cmp	w0, #0x0
  40e678:	csel	x20, x20, x26, ge  // ge = tcont
  40e67c:	csel	x22, x22, x28, ge  // ge = tcont
  40e680:	ldr	x0, [x20]
  40e684:	mov	x1, x27
  40e688:	blr	x24
  40e68c:	cmp	w0, #0x0
  40e690:	add	x0, x19, x21, lsl #3
  40e694:	b.gt	40e634 <ferror@plt+0xb7f4>
  40e698:	ldp	x21, x22, [sp, #32]
  40e69c:	ldp	x19, x20, [sp, #16]
  40e6a0:	ldp	x23, x24, [sp, #48]
  40e6a4:	str	x27, [x0]
  40e6a8:	ldp	x27, x28, [sp, #80]
  40e6ac:	mov	x0, x25
  40e6b0:	ldp	x25, x26, [sp, #64]
  40e6b4:	ldp	x29, x30, [sp], #112
  40e6b8:	ret
  40e6bc:	mov	x0, x20
  40e6c0:	ldp	x21, x22, [sp, #32]
  40e6c4:	b	40e69c <ferror@plt+0xb85c>
  40e6c8:	add	x0, x19, #0x8
  40e6cc:	b	40e69c <ferror@plt+0xb85c>
  40e6d0:	strb	wzr, [x1, #11]
  40e6d4:	mov	w4, #0xcccd                	// #52429
  40e6d8:	mov	w2, w0
  40e6dc:	movk	w4, #0xcccc, lsl #16
  40e6e0:	add	x0, x1, #0xb
  40e6e4:	tbnz	w2, #31, 40e70c <ferror@plt+0xb8cc>
  40e6e8:	umull	x3, w2, w4
  40e6ec:	lsr	x3, x3, #35
  40e6f0:	add	w1, w3, w3, lsl #2
  40e6f4:	sub	w1, w2, w1, lsl #1
  40e6f8:	mov	w2, w3
  40e6fc:	add	w1, w1, #0x30
  40e700:	strb	w1, [x0, #-1]!
  40e704:	cbnz	w3, 40e6e8 <ferror@plt+0xb8a8>
  40e708:	ret
  40e70c:	mov	w6, #0x6667                	// #26215
  40e710:	mov	w5, #0x30                  	// #48
  40e714:	movk	w6, #0x6666, lsl #16
  40e718:	smull	x1, w2, w6
  40e71c:	mov	x4, x0
  40e720:	asr	x1, x1, #34
  40e724:	sub	w1, w1, w2, asr #31
  40e728:	add	w3, w1, w1, lsl #2
  40e72c:	sub	w3, w2, w3, lsl #1
  40e730:	mov	w2, w1
  40e734:	sub	w1, w5, w3
  40e738:	strb	w1, [x0, #-1]!
  40e73c:	cbnz	w2, 40e718 <ferror@plt+0xb8d8>
  40e740:	mov	w1, #0x2d                  	// #45
  40e744:	sturb	w1, [x0, #-1]
  40e748:	sub	x0, x4, #0x2
  40e74c:	ret
  40e750:	mov	w3, w0
  40e754:	mov	w4, #0xcccd                	// #52429
  40e758:	add	x0, x1, #0xa
  40e75c:	movk	w4, #0xcccc, lsl #16
  40e760:	strb	wzr, [x1, #10]
  40e764:	nop
  40e768:	umull	x2, w3, w4
  40e76c:	cmp	w3, #0x9
  40e770:	lsr	x2, x2, #35
  40e774:	add	w1, w2, w2, lsl #2
  40e778:	sub	w1, w3, w1, lsl #1
  40e77c:	mov	w3, w2
  40e780:	add	w1, w1, #0x30
  40e784:	strb	w1, [x0, #-1]!
  40e788:	b.hi	40e768 <ferror@plt+0xb928>  // b.pmore
  40e78c:	ret
  40e790:	mov	x3, x0
  40e794:	mov	x4, #0xcccccccccccccccc    	// #-3689348814741910324
  40e798:	add	x0, x1, #0x14
  40e79c:	movk	x4, #0xcccd
  40e7a0:	strb	wzr, [x1, #20]
  40e7a4:	nop
  40e7a8:	umulh	x2, x3, x4
  40e7ac:	cmp	x3, #0x9
  40e7b0:	lsr	x2, x2, #3
  40e7b4:	add	x1, x2, x2, lsl #2
  40e7b8:	sub	x1, x3, x1, lsl #1
  40e7bc:	mov	x3, x2
  40e7c0:	add	w1, w1, #0x30
  40e7c4:	strb	w1, [x0, #-1]!
  40e7c8:	b.hi	40e7a8 <ferror@plt+0xb968>  // b.pmore
  40e7cc:	ret
  40e7d0:	stp	x29, x30, [sp, #-96]!
  40e7d4:	mov	x29, sp
  40e7d8:	stp	x21, x22, [sp, #32]
  40e7dc:	mov	x21, x1
  40e7e0:	stp	x25, x26, [sp, #64]
  40e7e4:	mov	x25, x0
  40e7e8:	stp	x19, x20, [sp, #16]
  40e7ec:	add	x20, x25, x21
  40e7f0:	stp	x23, x24, [sp, #48]
  40e7f4:	mov	w23, w2
  40e7f8:	bl	402bb0 <__ctype_get_mb_cur_max@plt>
  40e7fc:	cmp	x0, #0x1
  40e800:	b.ls	40e99c <ferror@plt+0xbb5c>  // b.plast
  40e804:	cmp	x25, x20
  40e808:	b.cs	40ea14 <ferror@plt+0xbbd4>  // b.hs, b.nlast
  40e80c:	ldrb	w2, [x25]
  40e810:	and	w24, w23, #0x2
  40e814:	mov	w19, #0x0                   	// #0
  40e818:	and	w23, w23, #0x1
  40e81c:	cmp	w2, #0x5f
  40e820:	mov	x22, #0x1                   	// #1
  40e824:	mov	w21, #0x7fffffff            	// #2147483647
  40e828:	b.hi	40e910 <ferror@plt+0xbad0>  // b.pmore
  40e82c:	nop
  40e830:	cmp	w2, #0x40
  40e834:	b.hi	40e8f4 <ferror@plt+0xbab4>  // b.pmore
  40e838:	cmp	w2, #0x23
  40e83c:	b.hi	40e8e4 <ferror@plt+0xbaa4>  // b.pmore
  40e840:	cmp	w2, #0x1f
  40e844:	b.hi	40e8f4 <ferror@plt+0xbab4>  // b.pmore
  40e848:	str	xzr, [sp, #88]
  40e84c:	cbz	w24, 40e870 <ferror@plt+0xba30>
  40e850:	b	40e93c <ferror@plt+0xbafc>
  40e854:	cmp	w1, w0
  40e858:	b.lt	40e8c4 <ferror@plt+0xba84>  // b.tstop
  40e85c:	add	w19, w19, w0
  40e860:	add	x25, x25, x26
  40e864:	add	x0, sp, #0x58
  40e868:	bl	402ac0 <mbsinit@plt>
  40e86c:	cbnz	w0, 40e8fc <ferror@plt+0xbabc>
  40e870:	add	x3, sp, #0x58
  40e874:	sub	x2, x20, x25
  40e878:	mov	x1, x25
  40e87c:	add	x0, sp, #0x54
  40e880:	bl	415380 <ferror@plt+0x12540>
  40e884:	cmn	x0, #0x1
  40e888:	b.eq	40e9f8 <ferror@plt+0xbbb8>  // b.none
  40e88c:	cmn	x0, #0x2
  40e890:	b.eq	40ea04 <ferror@plt+0xbbc4>  // b.none
  40e894:	cmp	x0, #0x0
  40e898:	csel	x26, x0, x22, ne  // ne = any
  40e89c:	ldr	w0, [sp, #84]
  40e8a0:	bl	4028f0 <wcwidth@plt>
  40e8a4:	sub	w1, w21, w19
  40e8a8:	tbz	w0, #31, 40e854 <ferror@plt+0xba14>
  40e8ac:	ldr	w0, [sp, #84]
  40e8b0:	bl	402800 <iswcntrl@plt>
  40e8b4:	cbnz	w0, 40e860 <ferror@plt+0xba20>
  40e8b8:	cmp	w19, w21
  40e8bc:	add	w19, w19, #0x1
  40e8c0:	b.ne	40e860 <ferror@plt+0xba20>  // b.any
  40e8c4:	mov	w19, #0x7fffffff            	// #2147483647
  40e8c8:	mov	w0, w19
  40e8cc:	ldp	x19, x20, [sp, #16]
  40e8d0:	ldp	x21, x22, [sp, #32]
  40e8d4:	ldp	x23, x24, [sp, #48]
  40e8d8:	ldp	x25, x26, [sp, #64]
  40e8dc:	ldp	x29, x30, [sp], #96
  40e8e0:	ret
  40e8e4:	sub	w2, w2, #0x25
  40e8e8:	and	w2, w2, #0xff
  40e8ec:	cmp	w2, #0x1a
  40e8f0:	b.hi	40e848 <ferror@plt+0xba08>  // b.pmore
  40e8f4:	add	x25, x25, #0x1
  40e8f8:	add	w19, w19, #0x1
  40e8fc:	cmp	x25, x20
  40e900:	b.cs	40e8c8 <ferror@plt+0xba88>  // b.hs, b.nlast
  40e904:	ldrb	w2, [x25]
  40e908:	cmp	w2, #0x5f
  40e90c:	b.ls	40e830 <ferror@plt+0xb9f0>  // b.plast
  40e910:	sub	w2, w2, #0x61
  40e914:	and	w2, w2, #0xff
  40e918:	cmp	w2, #0x1d
  40e91c:	b.ls	40e8f4 <ferror@plt+0xbab4>  // b.plast
  40e920:	b	40e848 <ferror@plt+0xba08>
  40e924:	cmp	w0, w1
  40e928:	b.gt	40e8c4 <ferror@plt+0xba84>
  40e92c:	add	w19, w19, w0
  40e930:	add	x0, sp, #0x58
  40e934:	bl	402ac0 <mbsinit@plt>
  40e938:	cbnz	w0, 40e8fc <ferror@plt+0xbabc>
  40e93c:	add	x3, sp, #0x58
  40e940:	sub	x2, x20, x25
  40e944:	mov	x1, x25
  40e948:	add	x0, sp, #0x54
  40e94c:	bl	415380 <ferror@plt+0x12540>
  40e950:	cmn	x0, #0x1
  40e954:	b.eq	40e9f8 <ferror@plt+0xbbb8>  // b.none
  40e958:	cmn	x0, #0x2
  40e95c:	b.eq	40ea04 <ferror@plt+0xbbc4>  // b.none
  40e960:	cmp	x0, #0x0
  40e964:	csel	x1, x0, x22, ne  // ne = any
  40e968:	ldr	w0, [sp, #84]
  40e96c:	add	x25, x25, x1
  40e970:	bl	4028f0 <wcwidth@plt>
  40e974:	sub	w1, w21, w19
  40e978:	tbz	w0, #31, 40e924 <ferror@plt+0xbae4>
  40e97c:	mov	w19, #0xffffffff            	// #-1
  40e980:	mov	w0, w19
  40e984:	ldp	x19, x20, [sp, #16]
  40e988:	ldp	x21, x22, [sp, #32]
  40e98c:	ldp	x23, x24, [sp, #48]
  40e990:	ldp	x25, x26, [sp, #64]
  40e994:	ldp	x29, x30, [sp], #96
  40e998:	ret
  40e99c:	cmp	x25, x20
  40e9a0:	b.cs	40ea14 <ferror@plt+0xbbd4>  // b.hs, b.nlast
  40e9a4:	bl	402b60 <__ctype_b_loc@plt>
  40e9a8:	and	w19, w23, #0x2
  40e9ac:	mov	w2, #0x7fffffff            	// #2147483647
  40e9b0:	ldr	x3, [x0]
  40e9b4:	tbnz	w23, #1, 40ea1c <ferror@plt+0xbbdc>
  40e9b8:	ldrb	w0, [x25], #1
  40e9bc:	ldrh	w0, [x3, x0, lsl #1]
  40e9c0:	tbnz	w0, #14, 40e9c8 <ferror@plt+0xbb88>
  40e9c4:	tbnz	w0, #1, 40e9d4 <ferror@plt+0xbb94>
  40e9c8:	cmp	w19, w2
  40e9cc:	b.eq	40e8c8 <ferror@plt+0xba88>  // b.none
  40e9d0:	add	w19, w19, #0x1
  40e9d4:	cmp	x20, x25
  40e9d8:	b.ne	40e9b8 <ferror@plt+0xbb78>  // b.any
  40e9dc:	mov	w0, w19
  40e9e0:	ldp	x19, x20, [sp, #16]
  40e9e4:	ldp	x21, x22, [sp, #32]
  40e9e8:	ldp	x23, x24, [sp, #48]
  40e9ec:	ldp	x25, x26, [sp, #64]
  40e9f0:	ldp	x29, x30, [sp], #96
  40e9f4:	ret
  40e9f8:	cbz	w23, 40e8f4 <ferror@plt+0xbab4>
  40e9fc:	mov	w19, #0xffffffff            	// #-1
  40ea00:	b	40e980 <ferror@plt+0xbb40>
  40ea04:	cbnz	w23, 40e97c <ferror@plt+0xbb3c>
  40ea08:	add	w19, w19, #0x1
  40ea0c:	mov	x25, x20
  40ea10:	b	40e8fc <ferror@plt+0xbabc>
  40ea14:	mov	w19, #0x0                   	// #0
  40ea18:	b	40e8c8 <ferror@plt+0xba88>
  40ea1c:	mov	x0, #0x0                   	// #0
  40ea20:	mov	x2, #0x7fffffff            	// #2147483647
  40ea24:	b	40ea3c <ferror@plt+0xbbfc>
  40ea28:	cmp	x0, x2
  40ea2c:	b.eq	40ea54 <ferror@plt+0xbc14>  // b.none
  40ea30:	add	x0, x0, #0x1
  40ea34:	cmp	x21, x0
  40ea38:	b.eq	40e8c8 <ferror@plt+0xba88>  // b.none
  40ea3c:	ldrb	w1, [x25, x0]
  40ea40:	add	w19, w0, #0x1
  40ea44:	ldrh	w1, [x3, x1, lsl #1]
  40ea48:	tbnz	w1, #14, 40ea28 <ferror@plt+0xbbe8>
  40ea4c:	mov	w19, #0xffffffff            	// #-1
  40ea50:	b	40e980 <ferror@plt+0xbb40>
  40ea54:	mov	w19, w0
  40ea58:	b	40e8c8 <ferror@plt+0xba88>
  40ea5c:	nop
  40ea60:	stp	x29, x30, [sp, #-32]!
  40ea64:	mov	x29, sp
  40ea68:	stp	x19, x20, [sp, #16]
  40ea6c:	mov	w20, w1
  40ea70:	mov	x19, x0
  40ea74:	bl	402780 <strlen@plt>
  40ea78:	mov	x1, x0
  40ea7c:	mov	w2, w20
  40ea80:	mov	x0, x19
  40ea84:	ldp	x19, x20, [sp, #16]
  40ea88:	ldp	x29, x30, [sp], #32
  40ea8c:	b	40e7d0 <ferror@plt+0xb990>
  40ea90:	ldrb	w1, [x0]
  40ea94:	cbz	w1, 40eaa8 <ferror@plt+0xbc68>
  40ea98:	cmp	w1, #0xd
  40ea9c:	b.hi	40eab0 <ferror@plt+0xbc70>  // b.pmore
  40eaa0:	cmp	w1, #0x8
  40eaa4:	b.hi	40eb0c <ferror@plt+0xbccc>  // b.pmore
  40eaa8:	mov	x0, #0x0                   	// #0
  40eaac:	ret
  40eab0:	cmp	w1, #0x20
  40eab4:	b.eq	40eb0c <ferror@plt+0xbccc>  // b.none
  40eab8:	sub	w1, w1, #0x30
  40eabc:	cmp	w1, #0x9
  40eac0:	b.hi	40eaa8 <ferror@plt+0xbc68>  // b.pmore
  40eac4:	stp	x29, x30, [sp, #-32]!
  40eac8:	mov	w2, #0xa                   	// #10
  40eacc:	mov	x29, sp
  40ead0:	add	x1, sp, #0x18
  40ead4:	str	xzr, [sp, #24]
  40ead8:	bl	402770 <strtoul@plt>
  40eadc:	ldr	x2, [sp, #24]
  40eae0:	cbz	x2, 40eb00 <ferror@plt+0xbcc0>
  40eae4:	ldrb	w1, [x2]
  40eae8:	cbz	w1, 40eb04 <ferror@plt+0xbcc4>
  40eaec:	add	x2, x2, #0x1
  40eaf0:	cmp	w1, #0xd
  40eaf4:	b.hi	40eb2c <ferror@plt+0xbcec>  // b.pmore
  40eaf8:	cmp	w1, #0x8
  40eafc:	b.hi	40eb18 <ferror@plt+0xbcd8>  // b.pmore
  40eb00:	mov	x0, #0x0                   	// #0
  40eb04:	ldp	x29, x30, [sp], #32
  40eb08:	ret
  40eb0c:	ldrb	w1, [x0, #1]!
  40eb10:	cbnz	w1, 40ea98 <ferror@plt+0xbc58>
  40eb14:	b	40eaa8 <ferror@plt+0xbc68>
  40eb18:	str	x2, [sp, #24]
  40eb1c:	ldrb	w1, [x2], #1
  40eb20:	cbz	w1, 40eb04 <ferror@plt+0xbcc4>
  40eb24:	cmp	w1, #0xd
  40eb28:	b.ls	40eaf8 <ferror@plt+0xbcb8>  // b.plast
  40eb2c:	cmp	w1, #0x20
  40eb30:	b.eq	40eb18 <ferror@plt+0xbcd8>  // b.none
  40eb34:	cmp	w1, #0x2c
  40eb38:	b.eq	40eb04 <ferror@plt+0xbcc4>  // b.none
  40eb3c:	b	40eb00 <ferror@plt+0xbcc0>
  40eb40:	stp	x29, x30, [sp, #-160]!
  40eb44:	cmp	w0, #0x2
  40eb48:	mov	x29, sp
  40eb4c:	b.eq	40eb78 <ferror@plt+0xbd38>  // b.none
  40eb50:	cmp	w0, #0x1
  40eb54:	b.eq	40ec8c <ferror@plt+0xbe4c>  // b.none
  40eb58:	mov	w0, #0x53                  	// #83
  40eb5c:	bl	402d00 <sysconf@plt>
  40eb60:	cmp	x0, #0x1
  40eb64:	b.eq	40ebec <ferror@plt+0xbdac>  // b.none
  40eb68:	cmp	x0, #0x0
  40eb6c:	csinc	x0, x0, xzr, gt
  40eb70:	ldp	x29, x30, [sp], #160
  40eb74:	ret
  40eb78:	adrp	x0, 418000 <_obstack_memory_used@@Base+0x26c8>
  40eb7c:	add	x0, x0, #0x8a8
  40eb80:	stp	x19, x20, [sp, #16]
  40eb84:	bl	402dd0 <getenv@plt>
  40eb88:	cbz	x0, 40ec44 <ferror@plt+0xbe04>
  40eb8c:	bl	40ea90 <ferror@plt+0xbc50>
  40eb90:	mov	x19, x0
  40eb94:	adrp	x0, 418000 <_obstack_memory_used@@Base+0x26c8>
  40eb98:	add	x0, x0, #0x8b8
  40eb9c:	bl	402dd0 <getenv@plt>
  40eba0:	cbz	x0, 40ec68 <ferror@plt+0xbe28>
  40eba4:	bl	40ea90 <ferror@plt+0xbc50>
  40eba8:	cmp	x0, #0x0
  40ebac:	csinv	x20, x0, xzr, ne  // ne = any
  40ebb0:	cbnz	x19, 40ec0c <ferror@plt+0xbdcc>
  40ebb4:	add	x2, sp, #0x20
  40ebb8:	mov	x1, #0x80                  	// #128
  40ebbc:	mov	w0, #0x0                   	// #0
  40ebc0:	bl	402aa0 <sched_getaffinity@plt>
  40ebc4:	cbz	w0, 40ec20 <ferror@plt+0xbde0>
  40ebc8:	mov	w0, #0x54                  	// #84
  40ebcc:	bl	402d00 <sysconf@plt>
  40ebd0:	mov	x1, x0
  40ebd4:	mov	x0, #0x1                   	// #1
  40ebd8:	cmp	x1, #0x0
  40ebdc:	b.gt	40ec34 <ferror@plt+0xbdf4>
  40ebe0:	ldp	x19, x20, [sp, #16]
  40ebe4:	ldp	x29, x30, [sp], #160
  40ebe8:	ret
  40ebec:	add	x2, sp, #0x20
  40ebf0:	mov	x1, #0x80                  	// #128
  40ebf4:	mov	w0, #0x0                   	// #0
  40ebf8:	bl	402aa0 <sched_getaffinity@plt>
  40ebfc:	cbz	w0, 40ec74 <ferror@plt+0xbe34>
  40ec00:	mov	x0, #0x1                   	// #1
  40ec04:	ldp	x29, x30, [sp], #160
  40ec08:	ret
  40ec0c:	cmp	x20, x19
  40ec10:	csel	x0, x20, x19, ls  // ls = plast
  40ec14:	ldp	x19, x20, [sp, #16]
  40ec18:	ldp	x29, x30, [sp], #160
  40ec1c:	ret
  40ec20:	add	x1, sp, #0x20
  40ec24:	mov	x0, #0x80                  	// #128
  40ec28:	bl	402c40 <__sched_cpucount@plt>
  40ec2c:	sxtw	x1, w0
  40ec30:	cbz	w0, 40ebc8 <ferror@plt+0xbd88>
  40ec34:	cmp	x1, x20
  40ec38:	csel	x0, x1, x20, ls  // ls = plast
  40ec3c:	ldp	x19, x20, [sp, #16]
  40ec40:	b	40eb70 <ferror@plt+0xbd30>
  40ec44:	adrp	x0, 418000 <_obstack_memory_used@@Base+0x26c8>
  40ec48:	add	x0, x0, #0x8b8
  40ec4c:	bl	402dd0 <getenv@plt>
  40ec50:	cbz	x0, 40ec60 <ferror@plt+0xbe20>
  40ec54:	bl	40ea90 <ferror@plt+0xbc50>
  40ec58:	mov	x20, x0
  40ec5c:	cbnz	x0, 40ebb4 <ferror@plt+0xbd74>
  40ec60:	mov	x20, #0xffffffffffffffff    	// #-1
  40ec64:	b	40ebb4 <ferror@plt+0xbd74>
  40ec68:	mov	x20, #0xffffffffffffffff    	// #-1
  40ec6c:	cbz	x19, 40ebb4 <ferror@plt+0xbd74>
  40ec70:	b	40ec0c <ferror@plt+0xbdcc>
  40ec74:	add	x1, sp, #0x20
  40ec78:	mov	x0, #0x80                  	// #128
  40ec7c:	bl	402c40 <__sched_cpucount@plt>
  40ec80:	cbz	w0, 40ec00 <ferror@plt+0xbdc0>
  40ec84:	sxtw	x0, w0
  40ec88:	b	40eb68 <ferror@plt+0xbd28>
  40ec8c:	stp	x19, x20, [sp, #16]
  40ec90:	mov	x20, #0xffffffffffffffff    	// #-1
  40ec94:	b	40ebb4 <ferror@plt+0xbd74>
  40ec98:	stp	x29, x30, [sp, #-144]!
  40ec9c:	mov	w0, #0x55                  	// #85
  40eca0:	mov	x29, sp
  40eca4:	str	d8, [sp, #16]
  40eca8:	bl	402d00 <sysconf@plt>
  40ecac:	mov	x1, x0
  40ecb0:	mov	w0, #0x1e                  	// #30
  40ecb4:	scvtf	d8, x1
  40ecb8:	bl	402d00 <sysconf@plt>
  40ecbc:	fcmpe	d8, #0.0
  40ecc0:	b.lt	40ecd4 <ferror@plt+0xbe94>  // b.tstop
  40ecc4:	fmov	d0, x0
  40ecc8:	scvtf	d0, d0
  40eccc:	fcmpe	d0, #0.0
  40ecd0:	b.ge	40ed04 <ferror@plt+0xbec4>  // b.tcont
  40ecd4:	add	x0, sp, #0x20
  40ecd8:	bl	4027c0 <sysinfo@plt>
  40ecdc:	mov	x1, #0x4190000000000000    	// #4724276009111650304
  40ece0:	fmov	d0, x1
  40ece4:	cbz	w0, 40ecf4 <ferror@plt+0xbeb4>
  40ece8:	ldr	d8, [sp, #16]
  40ecec:	ldp	x29, x30, [sp], #144
  40ecf0:	ret
  40ecf4:	ldr	d0, [sp, #64]
  40ecf8:	ldr	w0, [sp, #136]
  40ecfc:	ucvtf	d0, d0
  40ed00:	ucvtf	d8, w0
  40ed04:	fmul	d0, d0, d8
  40ed08:	ldr	d8, [sp, #16]
  40ed0c:	ldp	x29, x30, [sp], #144
  40ed10:	ret
  40ed14:	nop
  40ed18:	stp	x29, x30, [sp, #-144]!
  40ed1c:	mov	w0, #0x56                  	// #86
  40ed20:	mov	x29, sp
  40ed24:	str	d8, [sp, #16]
  40ed28:	bl	402d00 <sysconf@plt>
  40ed2c:	mov	x1, x0
  40ed30:	mov	w0, #0x1e                  	// #30
  40ed34:	scvtf	d8, x1
  40ed38:	bl	402d00 <sysconf@plt>
  40ed3c:	fcmpe	d8, #0.0
  40ed40:	b.lt	40ed54 <ferror@plt+0xbf14>  // b.tstop
  40ed44:	fmov	d0, x0
  40ed48:	scvtf	d0, d0
  40ed4c:	fcmpe	d0, #0.0
  40ed50:	b.ge	40ed7c <ferror@plt+0xbf3c>  // b.tcont
  40ed54:	add	x0, sp, #0x20
  40ed58:	bl	4027c0 <sysinfo@plt>
  40ed5c:	cbnz	w0, 40ed8c <ferror@plt+0xbf4c>
  40ed60:	ldr	d0, [sp, #72]
  40ed64:	ldr	d1, [sp, #88]
  40ed68:	ucvtf	d0, d0
  40ed6c:	ldr	w0, [sp, #136]
  40ed70:	ucvtf	d1, d1
  40ed74:	ucvtf	d8, w0
  40ed78:	fadd	d0, d0, d1
  40ed7c:	fmul	d0, d0, d8
  40ed80:	ldr	d8, [sp, #16]
  40ed84:	ldp	x29, x30, [sp], #144
  40ed88:	ret
  40ed8c:	mov	w0, #0x55                  	// #85
  40ed90:	bl	402d00 <sysconf@plt>
  40ed94:	mov	x1, x0
  40ed98:	mov	w0, #0x1e                  	// #30
  40ed9c:	scvtf	d8, x1
  40eda0:	bl	402d00 <sysconf@plt>
  40eda4:	fcmpe	d8, #0.0
  40eda8:	fmov	d0, x0
  40edac:	b.lt	40edbc <ferror@plt+0xbf7c>  // b.tstop
  40edb0:	scvtf	d0, d0
  40edb4:	fcmpe	d0, #0.0
  40edb8:	b.ge	40edf0 <ferror@plt+0xbfb0>  // b.tcont
  40edbc:	add	x0, sp, #0x20
  40edc0:	bl	4027c0 <sysinfo@plt>
  40edc4:	mov	x1, #0x4170000000000000    	// #4715268809856909312
  40edc8:	fmov	d0, x1
  40edcc:	cbnz	w0, 40ed80 <ferror@plt+0xbf40>
  40edd0:	ldr	d0, [sp, #64]
  40edd4:	fmov	d1, #2.500000000000000000e-01
  40edd8:	ldr	w0, [sp, #136]
  40eddc:	ucvtf	d0, d0
  40ede0:	ucvtf	d8, w0
  40ede4:	fmul	d0, d0, d8
  40ede8:	fmul	d0, d0, d1
  40edec:	b	40ed80 <ferror@plt+0xbf40>
  40edf0:	fmul	d8, d8, d0
  40edf4:	fmov	d0, #2.500000000000000000e-01
  40edf8:	fmul	d0, d8, d0
  40edfc:	ldr	d8, [sp, #16]
  40ee00:	ldp	x29, x30, [sp], #144
  40ee04:	ret
  40ee08:	stp	x29, x30, [sp, #-64]!
  40ee0c:	mov	x29, sp
  40ee10:	stp	x21, x22, [sp, #32]
  40ee14:	adrp	x22, 42d000 <_obstack_memory_used@@Base+0x176c8>
  40ee18:	ldr	w2, [x22, #3004]
  40ee1c:	stp	x19, x20, [sp, #16]
  40ee20:	mov	x19, x0
  40ee24:	mov	w20, w1
  40ee28:	str	x23, [sp, #48]
  40ee2c:	ldr	x23, [x0]
  40ee30:	tbz	w2, #31, 40ef64 <ferror@plt+0xc124>
  40ee34:	mov	w21, #0xf7ff                	// #63487
  40ee38:	movk	w21, #0xfff7, lsl #16
  40ee3c:	ands	w21, w20, w21
  40ee40:	b.ne	40efac <ferror@plt+0xc16c>  // b.any
  40ee44:	mov	x0, x19
  40ee48:	bl	4027e0 <pipe@plt>
  40ee4c:	tbnz	w0, #31, 40efc0 <ferror@plt+0xc180>
  40ee50:	tbnz	w20, #11, 40ee70 <ferror@plt+0xc030>
  40ee54:	tbnz	w20, #19, 40eef4 <ferror@plt+0xc0b4>
  40ee58:	mov	w0, w21
  40ee5c:	ldp	x19, x20, [sp, #16]
  40ee60:	ldp	x21, x22, [sp, #32]
  40ee64:	ldr	x23, [sp, #48]
  40ee68:	ldp	x29, x30, [sp], #64
  40ee6c:	ret
  40ee70:	ldr	w0, [x19, #4]
  40ee74:	mov	w2, #0x0                   	// #0
  40ee78:	mov	w1, #0x3                   	// #3
  40ee7c:	bl	415048 <ferror@plt+0x12208>
  40ee80:	tbnz	w0, #31, 40eec8 <ferror@plt+0xc088>
  40ee84:	orr	w2, w0, #0x800
  40ee88:	ldr	w0, [x19, #4]
  40ee8c:	mov	w1, #0x4                   	// #4
  40ee90:	bl	415048 <ferror@plt+0x12208>
  40ee94:	cmn	w0, #0x1
  40ee98:	b.eq	40eec8 <ferror@plt+0xc088>  // b.none
  40ee9c:	ldr	w0, [x19]
  40eea0:	mov	w2, #0x0                   	// #0
  40eea4:	mov	w1, #0x3                   	// #3
  40eea8:	bl	415048 <ferror@plt+0x12208>
  40eeac:	tbnz	w0, #31, 40eec8 <ferror@plt+0xc088>
  40eeb0:	orr	w2, w0, #0x800
  40eeb4:	ldr	w0, [x19]
  40eeb8:	mov	w1, #0x4                   	// #4
  40eebc:	bl	415048 <ferror@plt+0x12208>
  40eec0:	cmn	w0, #0x1
  40eec4:	b.ne	40ee54 <ferror@plt+0xc014>  // b.any
  40eec8:	bl	402db0 <__errno_location@plt>
  40eecc:	mov	x20, x0
  40eed0:	ldr	w0, [x19]
  40eed4:	mov	w21, #0xffffffff            	// #-1
  40eed8:	ldr	w22, [x20]
  40eedc:	bl	402a10 <close@plt>
  40eee0:	ldr	w0, [x19, #4]
  40eee4:	bl	402a10 <close@plt>
  40eee8:	str	x23, [x19]
  40eeec:	str	w22, [x20]
  40eef0:	b	40ee58 <ferror@plt+0xc018>
  40eef4:	ldr	w0, [x19, #4]
  40eef8:	mov	w2, #0x0                   	// #0
  40eefc:	mov	w1, #0x1                   	// #1
  40ef00:	bl	415048 <ferror@plt+0x12208>
  40ef04:	tbnz	w0, #31, 40eec8 <ferror@plt+0xc088>
  40ef08:	orr	w2, w0, #0x1
  40ef0c:	ldr	w0, [x19, #4]
  40ef10:	mov	w1, #0x2                   	// #2
  40ef14:	bl	415048 <ferror@plt+0x12208>
  40ef18:	cmn	w0, #0x1
  40ef1c:	b.eq	40eec8 <ferror@plt+0xc088>  // b.none
  40ef20:	ldr	w0, [x19]
  40ef24:	mov	w2, #0x0                   	// #0
  40ef28:	mov	w1, #0x1                   	// #1
  40ef2c:	bl	415048 <ferror@plt+0x12208>
  40ef30:	tbnz	w0, #31, 40eec8 <ferror@plt+0xc088>
  40ef34:	orr	w2, w0, #0x1
  40ef38:	ldr	w0, [x19]
  40ef3c:	mov	w1, #0x2                   	// #2
  40ef40:	bl	415048 <ferror@plt+0x12208>
  40ef44:	cmn	w0, #0x1
  40ef48:	b.eq	40eec8 <ferror@plt+0xc088>  // b.none
  40ef4c:	mov	w0, w21
  40ef50:	ldp	x19, x20, [sp, #16]
  40ef54:	ldp	x21, x22, [sp, #32]
  40ef58:	ldr	x23, [sp, #48]
  40ef5c:	ldp	x29, x30, [sp], #64
  40ef60:	ret
  40ef64:	bl	402ae0 <pipe2@plt>
  40ef68:	mov	w21, w0
  40ef6c:	tbz	w0, #31, 40ef80 <ferror@plt+0xc140>
  40ef70:	bl	402db0 <__errno_location@plt>
  40ef74:	ldr	w0, [x0]
  40ef78:	cmp	w0, #0x26
  40ef7c:	b.eq	40efa0 <ferror@plt+0xc160>  // b.none
  40ef80:	mov	w0, #0x1                   	// #1
  40ef84:	str	w0, [x22, #3004]
  40ef88:	mov	w0, w21
  40ef8c:	ldp	x19, x20, [sp, #16]
  40ef90:	ldp	x21, x22, [sp, #32]
  40ef94:	ldr	x23, [sp, #48]
  40ef98:	ldp	x29, x30, [sp], #64
  40ef9c:	ret
  40efa0:	mov	w0, #0xffffffff            	// #-1
  40efa4:	str	w0, [x22, #3004]
  40efa8:	b	40ee34 <ferror@plt+0xbff4>
  40efac:	bl	402db0 <__errno_location@plt>
  40efb0:	mov	w21, #0xffffffff            	// #-1
  40efb4:	mov	w1, #0x16                  	// #22
  40efb8:	str	w1, [x0]
  40efbc:	b	40ee58 <ferror@plt+0xc018>
  40efc0:	mov	w21, #0xffffffff            	// #-1
  40efc4:	b	40ee58 <ferror@plt+0xc018>
  40efc8:	stp	x29, x30, [sp, #-48]!
  40efcc:	adrp	x0, 418000 <_obstack_memory_used@@Base+0x26c8>
  40efd0:	add	x0, x0, #0x8d0
  40efd4:	mov	x29, sp
  40efd8:	str	x19, [sp, #16]
  40efdc:	bl	402dd0 <getenv@plt>
  40efe0:	cbz	x0, 40f044 <ferror@plt+0xc204>
  40efe4:	ldrb	w1, [x0]
  40efe8:	mov	w19, #0x1069                	// #4201
  40efec:	movk	w19, #0x3, lsl #16
  40eff0:	cbnz	w1, 40f004 <ferror@plt+0xc1c4>
  40eff4:	mov	w0, w19
  40eff8:	ldr	x19, [sp, #16]
  40effc:	ldp	x29, x30, [sp], #48
  40f000:	ret
  40f004:	add	x1, sp, #0x28
  40f008:	mov	w2, #0xa                   	// #10
  40f00c:	bl	402b70 <strtol@plt>
  40f010:	ldr	x1, [sp, #40]
  40f014:	ldrb	w1, [x1]
  40f018:	cbnz	w1, 40eff4 <ferror@plt+0xc1b4>
  40f01c:	mov	x19, #0xffffffff80000000    	// #-2147483648
  40f020:	cmp	x0, x19
  40f024:	b.lt	40eff4 <ferror@plt+0xc1b4>  // b.tstop
  40f028:	mov	x19, #0x7fffffff            	// #2147483647
  40f02c:	cmp	x0, x19
  40f030:	csel	x19, x0, x19, le
  40f034:	mov	w0, w19
  40f038:	ldr	x19, [sp, #16]
  40f03c:	ldp	x29, x30, [sp], #48
  40f040:	ret
  40f044:	mov	w19, #0x1069                	// #4201
  40f048:	movk	w19, #0x3, lsl #16
  40f04c:	mov	w0, w19
  40f050:	ldr	x19, [sp, #16]
  40f054:	ldp	x29, x30, [sp], #48
  40f058:	ret
  40f05c:	nop
  40f060:	stp	x29, x30, [sp, #-48]!
  40f064:	mov	x29, sp
  40f068:	stp	x19, x20, [sp, #16]
  40f06c:	cbz	x0, 40f144 <ferror@plt+0xc304>
  40f070:	mov	x19, x0
  40f074:	mov	w1, #0x2f                  	// #47
  40f078:	bl	402a30 <strrchr@plt>
  40f07c:	mov	x20, x0
  40f080:	cbz	x0, 40f0e4 <ferror@plt+0xc2a4>
  40f084:	str	x21, [sp, #32]
  40f088:	add	x21, x0, #0x1
  40f08c:	sub	x0, x21, x19
  40f090:	cmp	x0, #0x6
  40f094:	b.le	40f100 <ferror@plt+0xc2c0>
  40f098:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x26c8>
  40f09c:	sub	x0, x20, #0x6
  40f0a0:	add	x1, x1, #0x918
  40f0a4:	mov	x2, #0x7                   	// #7
  40f0a8:	bl	402940 <strncmp@plt>
  40f0ac:	cbnz	w0, 40f100 <ferror@plt+0xc2c0>
  40f0b0:	ldrb	w0, [x20, #1]
  40f0b4:	cmp	w0, #0x6c
  40f0b8:	b.ne	40f120 <ferror@plt+0xc2e0>  // b.any
  40f0bc:	ldrb	w0, [x21, #1]
  40f0c0:	cmp	w0, #0x74
  40f0c4:	b.ne	40f120 <ferror@plt+0xc2e0>  // b.any
  40f0c8:	ldrb	w0, [x21, #2]
  40f0cc:	cmp	w0, #0x2d
  40f0d0:	b.ne	40f120 <ferror@plt+0xc2e0>  // b.any
  40f0d4:	adrp	x0, 42d000 <_obstack_memory_used@@Base+0x176c8>
  40f0d8:	add	x19, x20, #0x4
  40f0dc:	ldr	x21, [sp, #32]
  40f0e0:	str	x19, [x0, #1376]
  40f0e4:	adrp	x1, 42d000 <_obstack_memory_used@@Base+0x176c8>
  40f0e8:	adrp	x0, 42d000 <_obstack_memory_used@@Base+0x176c8>
  40f0ec:	str	x19, [x1, #3008]
  40f0f0:	str	x19, [x0, #1328]
  40f0f4:	ldp	x19, x20, [sp, #16]
  40f0f8:	ldp	x29, x30, [sp], #48
  40f0fc:	ret
  40f100:	adrp	x1, 42d000 <_obstack_memory_used@@Base+0x176c8>
  40f104:	adrp	x0, 42d000 <_obstack_memory_used@@Base+0x176c8>
  40f108:	ldr	x21, [sp, #32]
  40f10c:	str	x19, [x1, #3008]
  40f110:	str	x19, [x0, #1328]
  40f114:	ldp	x19, x20, [sp, #16]
  40f118:	ldp	x29, x30, [sp], #48
  40f11c:	ret
  40f120:	adrp	x1, 42d000 <_obstack_memory_used@@Base+0x176c8>
  40f124:	adrp	x0, 42d000 <_obstack_memory_used@@Base+0x176c8>
  40f128:	mov	x19, x21
  40f12c:	str	x19, [x1, #3008]
  40f130:	str	x19, [x0, #1328]
  40f134:	ldp	x19, x20, [sp, #16]
  40f138:	ldr	x21, [sp, #32]
  40f13c:	ldp	x29, x30, [sp], #48
  40f140:	ret
  40f144:	adrp	x3, 42d000 <_obstack_memory_used@@Base+0x176c8>
  40f148:	mov	x2, #0x37                  	// #55
  40f14c:	mov	x1, #0x1                   	// #1
  40f150:	adrp	x0, 418000 <_obstack_memory_used@@Base+0x26c8>
  40f154:	ldr	x3, [x3, #1336]
  40f158:	add	x0, x0, #0x8e0
  40f15c:	str	x21, [sp, #32]
  40f160:	bl	402c10 <fwrite@plt>
  40f164:	bl	402a80 <abort@plt>
  40f168:	stp	x29, x30, [sp, #-48]!
  40f16c:	mov	w2, #0x5                   	// #5
  40f170:	mov	x29, sp
  40f174:	stp	x19, x20, [sp, #16]
  40f178:	mov	x20, x0
  40f17c:	str	x21, [sp, #32]
  40f180:	mov	w21, w1
  40f184:	mov	x1, x0
  40f188:	mov	x0, #0x0                   	// #0
  40f18c:	bl	402d20 <dcgettext@plt>
  40f190:	mov	x19, x0
  40f194:	cmp	x20, x0
  40f198:	b.eq	40f1b0 <ferror@plt+0xc370>  // b.none
  40f19c:	mov	x0, x19
  40f1a0:	ldp	x19, x20, [sp, #16]
  40f1a4:	ldr	x21, [sp, #32]
  40f1a8:	ldp	x29, x30, [sp], #48
  40f1ac:	ret
  40f1b0:	bl	415bc0 <_obstack_memory_used@@Base+0x288>
  40f1b4:	ldrb	w1, [x0]
  40f1b8:	and	w1, w1, #0xffffffdf
  40f1bc:	cmp	w1, #0x55
  40f1c0:	b.ne	40f224 <ferror@plt+0xc3e4>  // b.any
  40f1c4:	ldrb	w1, [x0, #1]
  40f1c8:	and	w1, w1, #0xffffffdf
  40f1cc:	cmp	w1, #0x54
  40f1d0:	b.ne	40f2a0 <ferror@plt+0xc460>  // b.any
  40f1d4:	ldrb	w1, [x0, #2]
  40f1d8:	and	w1, w1, #0xffffffdf
  40f1dc:	cmp	w1, #0x46
  40f1e0:	b.ne	40f2a0 <ferror@plt+0xc460>  // b.any
  40f1e4:	ldrb	w1, [x0, #3]
  40f1e8:	cmp	w1, #0x2d
  40f1ec:	b.ne	40f2a0 <ferror@plt+0xc460>  // b.any
  40f1f0:	ldrb	w1, [x0, #4]
  40f1f4:	cmp	w1, #0x38
  40f1f8:	b.ne	40f2a0 <ferror@plt+0xc460>  // b.any
  40f1fc:	ldrb	w0, [x0, #5]
  40f200:	cbnz	w0, 40f2a0 <ferror@plt+0xc460>
  40f204:	ldrb	w1, [x19]
  40f208:	adrp	x0, 418000 <_obstack_memory_used@@Base+0x26c8>
  40f20c:	adrp	x19, 418000 <_obstack_memory_used@@Base+0x26c8>
  40f210:	add	x0, x0, #0x928
  40f214:	cmp	w1, #0x60
  40f218:	add	x19, x19, #0x940
  40f21c:	csel	x19, x19, x0, eq  // eq = none
  40f220:	b	40f19c <ferror@plt+0xc35c>
  40f224:	cmp	w1, #0x47
  40f228:	b.ne	40f2a0 <ferror@plt+0xc460>  // b.any
  40f22c:	ldrb	w1, [x0, #1]
  40f230:	and	w1, w1, #0xffffffdf
  40f234:	cmp	w1, #0x42
  40f238:	b.ne	40f2a0 <ferror@plt+0xc460>  // b.any
  40f23c:	ldrb	w1, [x0, #2]
  40f240:	cmp	w1, #0x31
  40f244:	b.ne	40f2a0 <ferror@plt+0xc460>  // b.any
  40f248:	ldrb	w1, [x0, #3]
  40f24c:	cmp	w1, #0x38
  40f250:	b.ne	40f2a0 <ferror@plt+0xc460>  // b.any
  40f254:	ldrb	w1, [x0, #4]
  40f258:	cmp	w1, #0x30
  40f25c:	b.ne	40f2a0 <ferror@plt+0xc460>  // b.any
  40f260:	ldrb	w1, [x0, #5]
  40f264:	cmp	w1, #0x33
  40f268:	b.ne	40f2a0 <ferror@plt+0xc460>  // b.any
  40f26c:	ldrb	w1, [x0, #6]
  40f270:	cmp	w1, #0x30
  40f274:	b.ne	40f2a0 <ferror@plt+0xc460>  // b.any
  40f278:	ldrb	w0, [x0, #7]
  40f27c:	cbnz	w0, 40f2a0 <ferror@plt+0xc460>
  40f280:	ldrb	w1, [x19]
  40f284:	adrp	x0, 418000 <_obstack_memory_used@@Base+0x26c8>
  40f288:	adrp	x19, 418000 <_obstack_memory_used@@Base+0x26c8>
  40f28c:	add	x0, x0, #0x930
  40f290:	cmp	w1, #0x60
  40f294:	add	x19, x19, #0x938
  40f298:	csel	x19, x19, x0, eq  // eq = none
  40f29c:	b	40f19c <ferror@plt+0xc35c>
  40f2a0:	cmp	w21, #0x9
  40f2a4:	adrp	x0, 418000 <_obstack_memory_used@@Base+0x26c8>
  40f2a8:	adrp	x19, 418000 <_obstack_memory_used@@Base+0x26c8>
  40f2ac:	add	x0, x0, #0x948
  40f2b0:	add	x19, x19, #0x920
  40f2b4:	csel	x19, x19, x0, eq  // eq = none
  40f2b8:	mov	x0, x19
  40f2bc:	ldp	x19, x20, [sp, #16]
  40f2c0:	ldr	x21, [sp, #32]
  40f2c4:	ldp	x29, x30, [sp], #48
  40f2c8:	ret
  40f2cc:	nop
  40f2d0:	sub	sp, sp, #0x100
  40f2d4:	stp	x29, x30, [sp, #16]
  40f2d8:	add	x29, sp, #0x10
  40f2dc:	stp	x19, x20, [sp, #32]
  40f2e0:	mov	w19, w5
  40f2e4:	and	w20, w5, #0x2
  40f2e8:	stp	x21, x22, [sp, #48]
  40f2ec:	mov	w21, w4
  40f2f0:	stp	x23, x24, [sp, #64]
  40f2f4:	mov	x23, x1
  40f2f8:	mov	x24, x3
  40f2fc:	stp	x25, x26, [sp, #80]
  40f300:	mov	x26, x6
  40f304:	stp	x27, x28, [sp, #96]
  40f308:	mov	x28, x0
  40f30c:	mov	x27, x2
  40f310:	str	w4, [sp, #116]
  40f314:	str	w5, [sp, #184]
  40f318:	str	x7, [sp, #200]
  40f31c:	bl	402bb0 <__ctype_get_mb_cur_max@plt>
  40f320:	mov	x1, x19
  40f324:	str	x0, [sp, #176]
  40f328:	cmp	w21, #0x4
  40f32c:	ubfx	x10, x1, #1, #1
  40f330:	b.eq	40ffc0 <ferror@plt+0xd180>  // b.none
  40f334:	ldr	w0, [sp, #116]
  40f338:	b.ls	40f6c8 <ferror@plt+0xc888>  // b.plast
  40f33c:	cmp	w0, #0x7
  40f340:	b.eq	41002c <ferror@plt+0xd1ec>  // b.none
  40f344:	b.ls	40fcd4 <ferror@plt+0xce94>  // b.plast
  40f348:	ldr	w0, [sp, #116]
  40f34c:	sub	w0, w0, #0x8
  40f350:	cmp	w0, #0x2
  40f354:	b.hi	41046c <ferror@plt+0xd62c>  // b.pmore
  40f358:	ldr	w19, [sp, #116]
  40f35c:	cmp	w19, #0xa
  40f360:	b.ne	40feb8 <ferror@plt+0xd078>  // b.any
  40f364:	mov	x19, #0x0                   	// #0
  40f368:	cbz	w20, 4102ac <ferror@plt+0xd46c>
  40f36c:	ldr	x0, [sp, #256]
  40f370:	str	w10, [sp, #124]
  40f374:	mov	w25, #0x0                   	// #0
  40f378:	bl	402780 <strlen@plt>
  40f37c:	cmp	x0, #0x0
  40f380:	ldr	w10, [sp, #124]
  40f384:	mov	x12, x0
  40f388:	mov	w11, #0x1                   	// #1
  40f38c:	mov	w5, w11
  40f390:	csel	w0, w10, wzr, ne  // ne = any
  40f394:	str	w0, [sp, #208]
  40f398:	ldr	w0, [sp, #184]
  40f39c:	mov	w7, #0x0                   	// #0
  40f3a0:	stp	w11, wzr, [sp, #120]
  40f3a4:	and	w1, w0, w11
  40f3a8:	and	w0, w0, #0x4
  40f3ac:	stp	w1, w0, [sp, #212]
  40f3b0:	ldr	x0, [sp, #256]
  40f3b4:	str	wzr, [sp, #144]
  40f3b8:	str	x0, [sp, #168]
  40f3bc:	str	wzr, [sp, #188]
  40f3c0:	str	xzr, [sp, #192]
  40f3c4:	nop
  40f3c8:	mov	x4, x26
  40f3cc:	mov	w26, w5
  40f3d0:	mov	x20, #0x0                   	// #0
  40f3d4:	nop
  40f3d8:	cmp	x24, x20
  40f3dc:	cset	w21, ne  // ne = any
  40f3e0:	cmn	x24, #0x1
  40f3e4:	b.eq	40f738 <ferror@plt+0xc8f8>  // b.none
  40f3e8:	cbz	w21, 40f748 <ferror@plt+0xc908>
  40f3ec:	add	x3, x27, x20
  40f3f0:	cbz	w11, 40f9fc <ferror@plt+0xcbbc>
  40f3f4:	cbz	x12, 40fba8 <ferror@plt+0xcd68>
  40f3f8:	cmp	x12, #0x1
  40f3fc:	add	x22, x20, x12
  40f400:	ccmn	x24, #0x1, #0x0, hi  // hi = pmore
  40f404:	b.ne	40f434 <ferror@plt+0xc5f4>  // b.any
  40f408:	mov	x0, x27
  40f40c:	stp	x3, x12, [sp, #128]
  40f410:	stp	w10, w7, [sp, #148]
  40f414:	str	w11, [sp, #156]
  40f418:	str	x4, [sp, #160]
  40f41c:	bl	402780 <strlen@plt>
  40f420:	ldp	x3, x12, [sp, #128]
  40f424:	mov	x24, x0
  40f428:	ldp	w10, w7, [sp, #148]
  40f42c:	ldr	w11, [sp, #156]
  40f430:	ldr	x4, [sp, #160]
  40f434:	cmp	x22, x24
  40f438:	b.hi	40fba8 <ferror@plt+0xcd68>  // b.pmore
  40f43c:	ldr	x1, [sp, #168]
  40f440:	mov	x2, x12
  40f444:	mov	x0, x3
  40f448:	stp	x3, x12, [sp, #128]
  40f44c:	stp	w10, w7, [sp, #148]
  40f450:	str	w11, [sp, #156]
  40f454:	str	x4, [sp, #160]
  40f458:	bl	402b00 <memcmp@plt>
  40f45c:	ldp	w10, w7, [sp, #148]
  40f460:	ldr	w11, [sp, #156]
  40f464:	ldp	x3, x12, [sp, #128]
  40f468:	ldr	x4, [sp, #160]
  40f46c:	cbnz	w0, 40fba8 <ferror@plt+0xcd68>
  40f470:	cbnz	w10, 40f98c <ferror@plt+0xcb4c>
  40f474:	ldrb	w22, [x3]
  40f478:	cmp	w22, #0x7e
  40f47c:	b.ls	40f7e4 <ferror@plt+0xc9a4>  // b.plast
  40f480:	ldr	x0, [sp, #176]
  40f484:	mov	w5, w11
  40f488:	cmp	x0, #0x1
  40f48c:	b.eq	40fa18 <ferror@plt+0xcbd8>  // b.none
  40f490:	str	xzr, [sp, #248]
  40f494:	cmn	x24, #0x1
  40f498:	b.ne	40f4d0 <ferror@plt+0xc690>  // b.any
  40f49c:	mov	x0, x27
  40f4a0:	str	w5, [sp, #128]
  40f4a4:	str	x12, [sp, #136]
  40f4a8:	stp	w10, w7, [sp, #148]
  40f4ac:	str	w11, [sp, #156]
  40f4b0:	str	x4, [sp, #160]
  40f4b4:	bl	402780 <strlen@plt>
  40f4b8:	ldr	w5, [sp, #128]
  40f4bc:	mov	x24, x0
  40f4c0:	ldp	w10, w7, [sp, #148]
  40f4c4:	ldr	w11, [sp, #156]
  40f4c8:	ldr	x12, [sp, #136]
  40f4cc:	ldr	x4, [sp, #160]
  40f4d0:	str	w22, [sp, #220]
  40f4d4:	ldr	w22, [sp, #144]
  40f4d8:	mov	x8, #0x0                   	// #0
  40f4dc:	stp	x19, x4, [sp, #224]
  40f4e0:	mov	w19, w21
  40f4e4:	mov	x21, x8
  40f4e8:	str	x12, [sp, #128]
  40f4ec:	str	w10, [sp, #136]
  40f4f0:	stp	w25, w5, [sp, #148]
  40f4f4:	stp	w7, w11, [sp, #156]
  40f4f8:	add	x25, x20, x21
  40f4fc:	add	x3, sp, #0xf8
  40f500:	sub	x2, x24, x25
  40f504:	add	x1, x27, x25
  40f508:	add	x0, sp, #0xf4
  40f50c:	bl	415380 <ferror@plt+0x12540>
  40f510:	mov	x13, #0x2b                  	// #43
  40f514:	mov	x3, x0
  40f518:	movk	x13, #0x2, lsl #32
  40f51c:	cbz	x0, 40f558 <ferror@plt+0xc718>
  40f520:	cmn	x0, #0x1
  40f524:	b.eq	4102f0 <ferror@plt+0xd4b0>  // b.none
  40f528:	cmn	x0, #0x2
  40f52c:	mov	x6, #0x1                   	// #1
  40f530:	b.eq	410328 <ferror@plt+0xd4e8>  // b.none
  40f534:	cbnz	w22, 40fe24 <ferror@plt+0xcfe4>
  40f538:	ldr	w0, [sp, #244]
  40f53c:	add	x21, x21, x3
  40f540:	bl	402d90 <iswprint@plt>
  40f544:	cmp	w0, #0x0
  40f548:	csel	w19, w19, wzr, ne  // ne = any
  40f54c:	add	x0, sp, #0xf8
  40f550:	bl	402ac0 <mbsinit@plt>
  40f554:	cbz	w0, 40f4f8 <ferror@plt+0xc6b8>
  40f558:	eor	w1, w19, #0x1
  40f55c:	ldr	w0, [sp, #120]
  40f560:	mov	x8, x21
  40f564:	mov	w21, w19
  40f568:	ldp	x19, x4, [sp, #224]
  40f56c:	and	w1, w0, w1
  40f570:	ldr	w10, [sp, #136]
  40f574:	and	w1, w1, #0xff
  40f578:	ldp	w25, w5, [sp, #148]
  40f57c:	ldp	w7, w11, [sp, #156]
  40f580:	ldr	w22, [sp, #220]
  40f584:	ldr	x12, [sp, #128]
  40f588:	cmp	x8, #0x1
  40f58c:	b.hi	40f5a0 <ferror@plt+0xc760>  // b.pmore
  40f590:	cbz	w1, 40fa8c <ferror@plt+0xcc4c>
  40f594:	nop
  40f598:	ldr	w1, [sp, #120]
  40f59c:	mov	w21, #0x0                   	// #0
  40f5a0:	add	x8, x8, x20
  40f5a4:	mov	w9, #0x0                   	// #0
  40f5a8:	mov	w2, #0x27                  	// #39
  40f5ac:	mov	w3, #0x5c                  	// #92
  40f5b0:	mov	w6, #0x24                  	// #36
  40f5b4:	cbz	w1, 40f66c <ferror@plt+0xc82c>
  40f5b8:	cbnz	w10, 40fea4 <ferror@plt+0xd064>
  40f5bc:	eor	w0, w25, #0x1
  40f5c0:	ands	w0, w7, w0
  40f5c4:	b.eq	40f5fc <ferror@plt+0xc7bc>  // b.none
  40f5c8:	cmp	x23, x19
  40f5cc:	b.ls	40f5d4 <ferror@plt+0xc794>  // b.plast
  40f5d0:	strb	w2, [x28, x19]
  40f5d4:	add	x9, x19, #0x1
  40f5d8:	cmp	x23, x9
  40f5dc:	b.ls	40f5e4 <ferror@plt+0xc7a4>  // b.plast
  40f5e0:	strb	w6, [x28, x9]
  40f5e4:	add	x9, x19, #0x2
  40f5e8:	cmp	x23, x9
  40f5ec:	b.ls	40f5f4 <ferror@plt+0xc7b4>  // b.plast
  40f5f0:	strb	w2, [x28, x9]
  40f5f4:	add	x19, x19, #0x3
  40f5f8:	mov	w25, w0
  40f5fc:	cmp	x23, x19
  40f600:	b.ls	40f608 <ferror@plt+0xc7c8>  // b.plast
  40f604:	strb	w3, [x28, x19]
  40f608:	add	x0, x19, #0x1
  40f60c:	cmp	x23, x0
  40f610:	b.ls	40f620 <ferror@plt+0xc7e0>  // b.plast
  40f614:	lsr	w9, w22, #6
  40f618:	add	w9, w9, #0x30
  40f61c:	strb	w9, [x28, x0]
  40f620:	add	x0, x19, #0x2
  40f624:	cmp	x23, x0
  40f628:	b.ls	40f638 <ferror@plt+0xc7f8>  // b.plast
  40f62c:	ubfx	x9, x22, #3, #3
  40f630:	add	w9, w9, #0x30
  40f634:	strb	w9, [x28, x0]
  40f638:	and	w22, w22, #0x7
  40f63c:	add	x20, x20, #0x1
  40f640:	add	w22, w22, #0x30
  40f644:	cmp	x8, x20
  40f648:	add	x19, x19, #0x3
  40f64c:	b.ls	40f88c <ferror@plt+0xca4c>  // b.plast
  40f650:	mov	w9, w1
  40f654:	cmp	x23, x19
  40f658:	b.ls	40f660 <ferror@plt+0xc820>  // b.plast
  40f65c:	strb	w22, [x28, x19]
  40f660:	ldrb	w22, [x27, x20]
  40f664:	add	x19, x19, #0x1
  40f668:	cbnz	w1, 40f5b8 <ferror@plt+0xc778>
  40f66c:	eor	w0, w9, #0x1
  40f670:	and	w0, w25, w0
  40f674:	and	w0, w0, #0xff
  40f678:	cbz	w5, 40f68c <ferror@plt+0xc84c>
  40f67c:	cmp	x23, x19
  40f680:	b.ls	40f688 <ferror@plt+0xc848>  // b.plast
  40f684:	strb	w3, [x28, x19]
  40f688:	add	x19, x19, #0x1
  40f68c:	add	x20, x20, #0x1
  40f690:	cmp	x20, x8
  40f694:	b.cs	40f928 <ferror@plt+0xcae8>  // b.hs, b.nlast
  40f698:	cbz	w0, 410074 <ferror@plt+0xd234>
  40f69c:	cmp	x23, x19
  40f6a0:	b.ls	40f6a8 <ferror@plt+0xc868>  // b.plast
  40f6a4:	strb	w2, [x28, x19]
  40f6a8:	add	x0, x19, #0x1
  40f6ac:	cmp	x23, x0
  40f6b0:	b.ls	40f6b8 <ferror@plt+0xc878>  // b.plast
  40f6b4:	strb	w2, [x28, x0]
  40f6b8:	add	x19, x19, #0x2
  40f6bc:	mov	w5, #0x0                   	// #0
  40f6c0:	mov	w25, #0x0                   	// #0
  40f6c4:	b	40f654 <ferror@plt+0xc814>
  40f6c8:	cmp	w21, #0x1
  40f6cc:	b.eq	4100c8 <ferror@plt+0xd288>  // b.none
  40f6d0:	b.ls	40fc88 <ferror@plt+0xce48>  // b.plast
  40f6d4:	cmp	w0, #0x2
  40f6d8:	b.eq	410140 <ferror@plt+0xd300>  // b.none
  40f6dc:	adrp	x0, 418000 <_obstack_memory_used@@Base+0x26c8>
  40f6e0:	add	x0, x0, #0x948
  40f6e4:	str	x0, [sp, #168]
  40f6e8:	mov	w1, #0x1                   	// #1
  40f6ec:	ldr	w0, [sp, #184]
  40f6f0:	mov	w7, w1
  40f6f4:	mov	w5, w1
  40f6f8:	mov	w10, w1
  40f6fc:	stp	w1, w1, [sp, #120]
  40f700:	mov	w11, #0x0                   	// #0
  40f704:	str	w1, [sp, #144]
  40f708:	mov	w25, #0x0                   	// #0
  40f70c:	str	w1, [sp, #208]
  40f710:	and	w1, w0, w1
  40f714:	and	w0, w0, #0x4
  40f718:	mov	x12, #0x1                   	// #1
  40f71c:	mov	x19, #0x0                   	// #0
  40f720:	str	wzr, [sp, #188]
  40f724:	str	xzr, [sp, #192]
  40f728:	stp	w1, w0, [sp, #212]
  40f72c:	mov	w0, #0x2                   	// #2
  40f730:	str	w0, [sp, #116]
  40f734:	b	40f3c8 <ferror@plt+0xc588>
  40f738:	ldrb	w0, [x27, x20]
  40f73c:	cmp	w0, #0x0
  40f740:	cset	w21, ne  // ne = any
  40f744:	cbnz	w21, 40f3ec <ferror@plt+0xc5ac>
  40f748:	ldr	w0, [sp, #144]
  40f74c:	cmp	x19, #0x0
  40f750:	mov	w5, w26
  40f754:	mov	x26, x4
  40f758:	ccmp	w0, #0x0, #0x4, eq  // eq = none
  40f75c:	b.ne	40fabc <ferror@plt+0xcc7c>  // b.any
  40f760:	eor	w10, w10, #0x1
  40f764:	ands	w7, w10, w7
  40f768:	b.eq	410378 <ferror@plt+0xd538>  // b.none
  40f76c:	ldr	w0, [sp, #188]
  40f770:	cbz	w0, 41037c <ferror@plt+0xd53c>
  40f774:	cbnz	w5, 4103d8 <ferror@plt+0xd598>
  40f778:	ldr	x2, [sp, #192]
  40f77c:	cmp	x23, #0x0
  40f780:	cset	w0, eq  // eq = none
  40f784:	cmp	x2, #0x0
  40f788:	mov	x1, x2
  40f78c:	csel	w0, w0, wzr, ne  // ne = any
  40f790:	cbz	w0, 4103d0 <ferror@plt+0xd590>
  40f794:	str	w0, [sp, #188]
  40f798:	mov	w0, #0x27                  	// #39
  40f79c:	ldr	x23, [sp, #192]
  40f7a0:	str	x1, [sp, #192]
  40f7a4:	mov	w1, #0x1                   	// #1
  40f7a8:	mov	x12, #0x1                   	// #1
  40f7ac:	mov	w7, w1
  40f7b0:	mov	x19, x12
  40f7b4:	mov	w11, #0x0                   	// #0
  40f7b8:	mov	w10, #0x0                   	// #0
  40f7bc:	strb	w0, [x28]
  40f7c0:	mov	w0, #0x2                   	// #2
  40f7c4:	str	w0, [sp, #116]
  40f7c8:	str	w1, [sp, #124]
  40f7cc:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x26c8>
  40f7d0:	add	x1, x1, #0x948
  40f7d4:	str	wzr, [sp, #144]
  40f7d8:	str	x1, [sp, #168]
  40f7dc:	str	wzr, [sp, #208]
  40f7e0:	b	40f3c8 <ferror@plt+0xc588>
  40f7e4:	adrp	x0, 418000 <_obstack_memory_used@@Base+0x26c8>
  40f7e8:	add	x0, x0, #0x9d0
  40f7ec:	ldrh	w0, [x0, w22, uxtw #1]
  40f7f0:	adr	x1, 40f7fc <ferror@plt+0xc9bc>
  40f7f4:	add	x0, x1, w0, sxth #2
  40f7f8:	br	x0
  40f7fc:	ldr	w0, [sp, #124]
  40f800:	cbnz	w0, 410318 <ferror@plt+0xd4d8>
  40f804:	mov	w0, w25
  40f808:	mov	w21, w11
  40f80c:	mov	w5, w11
  40f810:	cbz	x4, 40f920 <ferror@plt+0xcae0>
  40f814:	ubfx	x1, x22, #5, #8
  40f818:	ldr	w1, [x4, x1, lsl #2]
  40f81c:	lsr	w1, w1, w22
  40f820:	tbz	w1, #0, 40f920 <ferror@plt+0xcae0>
  40f824:	cbnz	w10, 40f96c <ferror@plt+0xcb2c>
  40f828:	eor	w1, w25, #0x1
  40f82c:	ands	w1, w7, w1
  40f830:	b.eq	40f874 <ferror@plt+0xca34>  // b.none
  40f834:	cmp	x23, x19
  40f838:	b.ls	40f844 <ferror@plt+0xca04>  // b.plast
  40f83c:	mov	w0, #0x27                  	// #39
  40f840:	strb	w0, [x28, x19]
  40f844:	add	x0, x19, #0x1
  40f848:	cmp	x23, x0
  40f84c:	b.ls	40f858 <ferror@plt+0xca18>  // b.plast
  40f850:	mov	w2, #0x24                  	// #36
  40f854:	strb	w2, [x28, x0]
  40f858:	add	x0, x19, #0x2
  40f85c:	cmp	x23, x0
  40f860:	b.ls	40f86c <ferror@plt+0xca2c>  // b.plast
  40f864:	mov	w2, #0x27                  	// #39
  40f868:	strb	w2, [x28, x0]
  40f86c:	add	x19, x19, #0x3
  40f870:	mov	w25, w1
  40f874:	cmp	x23, x19
  40f878:	b.ls	40f884 <ferror@plt+0xca44>  // b.plast
  40f87c:	mov	w0, #0x5c                  	// #92
  40f880:	strb	w0, [x28, x19]
  40f884:	add	x19, x19, #0x1
  40f888:	add	x20, x20, #0x1
  40f88c:	cmp	x19, x23
  40f890:	b.cs	40f898 <ferror@plt+0xca58>  // b.hs, b.nlast
  40f894:	strb	w22, [x28, x19]
  40f898:	cmp	w21, #0x0
  40f89c:	add	x19, x19, #0x1
  40f8a0:	csel	w26, w26, wzr, ne  // ne = any
  40f8a4:	b	40f3d8 <ferror@plt+0xc598>
  40f8a8:	cbnz	w10, 40fac4 <ferror@plt+0xcc84>
  40f8ac:	mov	w5, #0x0                   	// #0
  40f8b0:	ldr	x1, [sp, #192]
  40f8b4:	cmp	x23, #0x0
  40f8b8:	mov	x0, #0x0                   	// #0
  40f8bc:	ccmp	x1, #0x0, #0x0, ne  // ne = any
  40f8c0:	b.eq	40f904 <ferror@plt+0xcac4>  // b.none
  40f8c4:	cmp	x23, x19
  40f8c8:	b.ls	40f8d4 <ferror@plt+0xca94>  // b.plast
  40f8cc:	mov	w0, #0x27                  	// #39
  40f8d0:	strb	w0, [x28, x19]
  40f8d4:	add	x0, x19, #0x1
  40f8d8:	cmp	x23, x0
  40f8dc:	b.ls	40f8e8 <ferror@plt+0xcaa8>  // b.plast
  40f8e0:	mov	w1, #0x5c                  	// #92
  40f8e4:	strb	w1, [x28, x0]
  40f8e8:	add	x1, x19, #0x2
  40f8ec:	mov	x0, x23
  40f8f0:	cmp	x23, x1
  40f8f4:	b.ls	410408 <ferror@plt+0xd5c8>  // b.plast
  40f8f8:	ldr	x23, [sp, #192]
  40f8fc:	mov	w2, #0x27                  	// #39
  40f900:	strb	w2, [x28, x1]
  40f904:	add	x19, x19, #0x3
  40f908:	mov	w22, #0x27                  	// #39
  40f90c:	mov	w25, #0x0                   	// #0
  40f910:	str	w21, [sp, #188]
  40f914:	str	x23, [sp, #192]
  40f918:	mov	x23, x0
  40f91c:	mov	w0, #0x0                   	// #0
  40f920:	cbnz	w5, 40f824 <ferror@plt+0xc9e4>
  40f924:	add	x20, x20, #0x1
  40f928:	cbz	w0, 40f88c <ferror@plt+0xca4c>
  40f92c:	cmp	x23, x19
  40f930:	b.ls	40f93c <ferror@plt+0xcafc>  // b.plast
  40f934:	mov	w0, #0x27                  	// #39
  40f938:	strb	w0, [x28, x19]
  40f93c:	add	x0, x19, #0x1
  40f940:	cmp	x23, x0
  40f944:	b.ls	40f950 <ferror@plt+0xcb10>  // b.plast
  40f948:	mov	w1, #0x27                  	// #39
  40f94c:	strb	w1, [x28, x0]
  40f950:	add	x19, x19, #0x2
  40f954:	mov	w25, #0x0                   	// #0
  40f958:	b	40f88c <ferror@plt+0xca4c>
  40f95c:	mov	w22, #0x66                  	// #102
  40f960:	mov	w21, #0x0                   	// #0
  40f964:	nop
  40f968:	cbz	w10, 40f828 <ferror@plt+0xc9e8>
  40f96c:	ldr	w0, [sp, #120]
  40f970:	and	w0, w0, w7
  40f974:	str	w0, [sp, #120]
  40f978:	ldp	w1, w0, [sp, #116]
  40f97c:	cmp	w0, #0x0
  40f980:	mov	w0, #0x4                   	// #4
  40f984:	csel	w0, w1, w0, eq  // eq = none
  40f988:	str	w0, [sp, #116]
  40f98c:	ldr	w4, [sp, #116]
  40f990:	mov	x3, x24
  40f994:	ldr	x7, [sp, #200]
  40f998:	mov	x2, x27
  40f99c:	ldr	x0, [sp, #256]
  40f9a0:	str	x0, [sp]
  40f9a4:	ldr	w0, [sp, #184]
  40f9a8:	mov	x1, x23
  40f9ac:	mov	x6, #0x0                   	// #0
  40f9b0:	and	w5, w0, #0xfffffffd
  40f9b4:	mov	x0, x28
  40f9b8:	bl	40f2d0 <ferror@plt+0xc490>
  40f9bc:	mov	x19, x0
  40f9c0:	mov	x0, x19
  40f9c4:	ldp	x29, x30, [sp, #16]
  40f9c8:	ldp	x19, x20, [sp, #32]
  40f9cc:	ldp	x21, x22, [sp, #48]
  40f9d0:	ldp	x23, x24, [sp, #64]
  40f9d4:	ldp	x25, x26, [sp, #80]
  40f9d8:	ldp	x27, x28, [sp, #96]
  40f9dc:	add	sp, sp, #0x100
  40f9e0:	ret
  40f9e4:	mov	w22, #0x62                  	// #98
  40f9e8:	mov	w21, #0x0                   	// #0
  40f9ec:	b	40f968 <ferror@plt+0xcb28>
  40f9f0:	mov	w22, #0x61                  	// #97
  40f9f4:	mov	w21, #0x0                   	// #0
  40f9f8:	b	40f968 <ferror@plt+0xcb28>
  40f9fc:	ldrb	w22, [x27, x20]
  40fa00:	cmp	w22, #0x7e
  40fa04:	b.ls	40fa6c <ferror@plt+0xcc2c>  // b.plast
  40fa08:	ldr	x0, [sp, #176]
  40fa0c:	mov	w5, #0x0                   	// #0
  40fa10:	cmp	x0, #0x1
  40fa14:	b.ne	40f490 <ferror@plt+0xc650>  // b.any
  40fa18:	str	w5, [sp, #128]
  40fa1c:	str	x12, [sp, #136]
  40fa20:	stp	w10, w7, [sp, #148]
  40fa24:	str	w11, [sp, #156]
  40fa28:	str	x4, [sp, #160]
  40fa2c:	bl	402b60 <__ctype_b_loc@plt>
  40fa30:	ldr	x0, [x0]
  40fa34:	ldr	w5, [sp, #128]
  40fa38:	ldp	w10, w7, [sp, #148]
  40fa3c:	ldrh	w21, [x0, w22, uxtw #1]
  40fa40:	ldr	w11, [sp, #156]
  40fa44:	ands	w0, w21, #0x4000
  40fa48:	ldr	w0, [sp, #120]
  40fa4c:	cset	w1, eq  // eq = none
  40fa50:	ubfx	x21, x21, #14, #1
  40fa54:	and	w1, w0, w1
  40fa58:	ldr	x12, [sp, #136]
  40fa5c:	ldr	x4, [sp, #160]
  40fa60:	ldr	x8, [sp, #176]
  40fa64:	cbz	w1, 40fa8c <ferror@plt+0xcc4c>
  40fa68:	b	40f598 <ferror@plt+0xc758>
  40fa6c:	adrp	x0, 418000 <_obstack_memory_used@@Base+0x26c8>
  40fa70:	add	x0, x0, #0xad0
  40fa74:	ldrh	w0, [x0, w22, uxtw #1]
  40fa78:	adr	x1, 40fa84 <ferror@plt+0xcc44>
  40fa7c:	add	x0, x1, w0, sxth #2
  40fa80:	br	x0
  40fa84:	mov	w21, w11
  40fa88:	mov	w5, #0x0                   	// #0
  40fa8c:	ldr	w1, [sp, #124]
  40fa90:	mov	w0, w25
  40fa94:	cbz	w1, 40f810 <ferror@plt+0xc9d0>
  40fa98:	mov	w0, w25
  40fa9c:	cbnz	w10, 40f810 <ferror@plt+0xc9d0>
  40faa0:	mov	w0, w25
  40faa4:	cbnz	w5, 40f824 <ferror@plt+0xc9e4>
  40faa8:	b	40f924 <ferror@plt+0xcae4>
  40faac:	mov	w5, #0x0                   	// #0
  40fab0:	mov	w21, #0x0                   	// #0
  40fab4:	ldr	w0, [sp, #144]
  40fab8:	cbz	w0, 40fa8c <ferror@plt+0xcc4c>
  40fabc:	mov	w0, #0x2                   	// #2
  40fac0:	str	w0, [sp, #116]
  40fac4:	ldp	w1, w0, [sp, #116]
  40fac8:	cmp	w0, #0x0
  40facc:	mov	w0, #0x4                   	// #4
  40fad0:	csel	w0, w1, w0, eq  // eq = none
  40fad4:	str	w0, [sp, #116]
  40fad8:	b	40f98c <ferror@plt+0xcb4c>
  40fadc:	ldr	w0, [sp, #116]
  40fae0:	cmp	w0, #0x2
  40fae4:	b.eq	40fe08 <ferror@plt+0xcfc8>  // b.none
  40fae8:	mov	w5, #0x0                   	// #0
  40faec:	ldr	w0, [sp, #116]
  40faf0:	cmp	w0, #0x5
  40faf4:	b.ne	40fb18 <ferror@plt+0xccd8>  // b.any
  40faf8:	ldr	w0, [sp, #216]
  40fafc:	cbz	w0, 40fb18 <ferror@plt+0xccd8>
  40fb00:	add	x6, x20, #0x2
  40fb04:	cmp	x6, x24
  40fb08:	b.cs	40fb18 <ferror@plt+0xccd8>  // b.hs, b.nlast
  40fb0c:	ldrb	w22, [x3, #1]
  40fb10:	cmp	w22, #0x3f
  40fb14:	b.eq	41015c <ferror@plt+0xd31c>  // b.none
  40fb18:	mov	w21, #0x0                   	// #0
  40fb1c:	mov	w22, #0x3f                  	// #63
  40fb20:	b	40fa8c <ferror@plt+0xcc4c>
  40fb24:	ldr	w0, [sp, #116]
  40fb28:	cmp	w0, #0x2
  40fb2c:	b.eq	40f8a8 <ferror@plt+0xca68>  // b.none
  40fb30:	mov	w5, #0x0                   	// #0
  40fb34:	mov	w22, #0x27                  	// #39
  40fb38:	str	w21, [sp, #188]
  40fb3c:	b	40fa8c <ferror@plt+0xcc4c>
  40fb40:	mov	w5, #0x0                   	// #0
  40fb44:	mov	w0, #0x74                  	// #116
  40fb48:	ldr	w1, [sp, #144]
  40fb4c:	cbnz	w1, 40fabc <ferror@plt+0xcc7c>
  40fb50:	ldr	w1, [sp, #120]
  40fb54:	cbnz	w1, 40fb68 <ferror@plt+0xcd28>
  40fb58:	mov	w0, w25
  40fb5c:	mov	w21, #0x0                   	// #0
  40fb60:	cbnz	w10, 40f810 <ferror@plt+0xc9d0>
  40fb64:	b	40faa0 <ferror@plt+0xcc60>
  40fb68:	mov	w22, w0
  40fb6c:	mov	w21, #0x0                   	// #0
  40fb70:	b	40f968 <ferror@plt+0xcb28>
  40fb74:	mov	w5, #0x0                   	// #0
  40fb78:	mov	w0, #0x66                  	// #102
  40fb7c:	b	40fb50 <ferror@plt+0xcd10>
  40fb80:	mov	w5, #0x0                   	// #0
  40fb84:	mov	w0, #0x62                  	// #98
  40fb88:	b	40fb50 <ferror@plt+0xcd10>
  40fb8c:	ldr	w0, [sp, #120]
  40fb90:	cbnz	w0, 40fbd8 <ferror@plt+0xcd98>
  40fb94:	ldr	w0, [sp, #212]
  40fb98:	mov	w5, #0x0                   	// #0
  40fb9c:	cbz	w0, 40fb58 <ferror@plt+0xcd18>
  40fba0:	add	x20, x20, #0x1
  40fba4:	b	40f3d8 <ferror@plt+0xc598>
  40fba8:	ldrb	w22, [x3]
  40fbac:	cmp	w22, #0x7e
  40fbb0:	b.hi	40fa08 <ferror@plt+0xcbc8>  // b.pmore
  40fbb4:	adrp	x0, 418000 <_obstack_memory_used@@Base+0x26c8>
  40fbb8:	add	x0, x0, #0xbd0
  40fbbc:	ldrh	w0, [x0, w22, uxtw #1]
  40fbc0:	adr	x1, 40fbcc <ferror@plt+0xcd8c>
  40fbc4:	add	x0, x1, w0, sxth #2
  40fbc8:	br	x0
  40fbcc:	mov	w5, #0x0                   	// #0
  40fbd0:	mov	w21, #0x0                   	// #0
  40fbd4:	b	40fa8c <ferror@plt+0xcc4c>
  40fbd8:	cbnz	w10, 40fea4 <ferror@plt+0xd064>
  40fbdc:	mov	w5, #0x0                   	// #0
  40fbe0:	eor	w0, w25, #0x1
  40fbe4:	ands	w0, w7, w0
  40fbe8:	b.eq	40fda4 <ferror@plt+0xcf64>  // b.none
  40fbec:	cmp	x23, x19
  40fbf0:	b.ls	40fbfc <ferror@plt+0xcdbc>  // b.plast
  40fbf4:	mov	w1, #0x27                  	// #39
  40fbf8:	strb	w1, [x28, x19]
  40fbfc:	add	x1, x19, #0x1
  40fc00:	cmp	x23, x1
  40fc04:	b.ls	40fc10 <ferror@plt+0xcdd0>  // b.plast
  40fc08:	mov	w2, #0x24                  	// #36
  40fc0c:	strb	w2, [x28, x1]
  40fc10:	add	x1, x19, #0x2
  40fc14:	cmp	x23, x1
  40fc18:	b.ls	40fc24 <ferror@plt+0xcde4>  // b.plast
  40fc1c:	mov	w2, #0x27                  	// #39
  40fc20:	strb	w2, [x28, x1]
  40fc24:	add	x1, x19, #0x3
  40fc28:	cmp	x23, x1
  40fc2c:	b.ls	40fe70 <ferror@plt+0xd030>  // b.plast
  40fc30:	mov	w25, w0
  40fc34:	mov	w0, #0x5c                  	// #92
  40fc38:	strb	w0, [x28, x1]
  40fc3c:	ldr	w0, [sp, #116]
  40fc40:	add	x19, x1, #0x1
  40fc44:	cmp	w0, #0x2
  40fc48:	b.eq	40fe78 <ferror@plt+0xd038>  // b.none
  40fc4c:	add	x0, x20, #0x1
  40fc50:	cmp	x0, x24
  40fc54:	b.cs	40fe8c <ferror@plt+0xd04c>  // b.hs, b.nlast
  40fc58:	ldrb	w2, [x27, x0]
  40fc5c:	mov	w22, #0x30                  	// #48
  40fc60:	mov	w0, #0x0                   	// #0
  40fc64:	sub	w2, w2, #0x30
  40fc68:	and	w2, w2, #0xff
  40fc6c:	cmp	w2, #0x9
  40fc70:	b.ls	40feec <ferror@plt+0xd0ac>  // b.plast
  40fc74:	ldr	w1, [sp, #124]
  40fc78:	mov	w21, #0x0                   	// #0
  40fc7c:	cbz	w1, 40f810 <ferror@plt+0xc9d0>
  40fc80:	cbnz	w5, 40f824 <ferror@plt+0xc9e4>
  40fc84:	b	40f924 <ferror@plt+0xcae4>
  40fc88:	cbnz	w0, 41046c <ferror@plt+0xd62c>
  40fc8c:	ldr	w0, [sp, #184]
  40fc90:	mov	w5, #0x1                   	// #1
  40fc94:	mov	w7, #0x0                   	// #0
  40fc98:	mov	w11, #0x0                   	// #0
  40fc9c:	and	w1, w0, w5
  40fca0:	mov	w25, #0x0                   	// #0
  40fca4:	and	w0, w0, #0x4
  40fca8:	mov	w10, #0x0                   	// #0
  40fcac:	mov	x12, #0x0                   	// #0
  40fcb0:	mov	x19, #0x0                   	// #0
  40fcb4:	stp	wzr, w5, [sp, #120]
  40fcb8:	str	wzr, [sp, #144]
  40fcbc:	str	xzr, [sp, #168]
  40fcc0:	str	wzr, [sp, #188]
  40fcc4:	str	xzr, [sp, #192]
  40fcc8:	stp	wzr, w1, [sp, #208]
  40fccc:	str	w0, [sp, #216]
  40fcd0:	b	40f3c8 <ferror@plt+0xc588>
  40fcd4:	cmp	w0, #0x5
  40fcd8:	b.ne	40fd3c <ferror@plt+0xcefc>  // b.any
  40fcdc:	ldr	w0, [sp, #184]
  40fce0:	and	w1, w0, #0x1
  40fce4:	and	w0, w0, #0x4
  40fce8:	stp	w1, w0, [sp, #212]
  40fcec:	cbnz	w20, 4101e4 <ferror@plt+0xd3a4>
  40fcf0:	cbz	x23, 410100 <ferror@plt+0xd2c0>
  40fcf4:	mov	w11, #0x1                   	// #1
  40fcf8:	mov	w0, #0x22                  	// #34
  40fcfc:	mov	x12, #0x1                   	// #1
  40fd00:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x26c8>
  40fd04:	mov	w5, w11
  40fd08:	add	x1, x1, #0x920
  40fd0c:	mov	x19, x12
  40fd10:	mov	w7, #0x0                   	// #0
  40fd14:	mov	w25, #0x0                   	// #0
  40fd18:	mov	w10, #0x0                   	// #0
  40fd1c:	strb	w0, [x28]
  40fd20:	stp	w11, wzr, [sp, #120]
  40fd24:	str	wzr, [sp, #144]
  40fd28:	str	x1, [sp, #168]
  40fd2c:	str	wzr, [sp, #188]
  40fd30:	str	xzr, [sp, #192]
  40fd34:	str	wzr, [sp, #208]
  40fd38:	b	40f3c8 <ferror@plt+0xc588>
  40fd3c:	cmp	w0, #0x6
  40fd40:	b.ne	41046c <ferror@plt+0xd62c>  // b.any
  40fd44:	mov	w0, #0x1                   	// #1
  40fd48:	mov	w1, w0
  40fd4c:	adrp	x0, 418000 <_obstack_memory_used@@Base+0x26c8>
  40fd50:	add	x0, x0, #0x920
  40fd54:	str	x0, [sp, #168]
  40fd58:	mov	w11, w1
  40fd5c:	ldr	w0, [sp, #184]
  40fd60:	mov	w5, w1
  40fd64:	mov	w10, w1
  40fd68:	stp	w1, wzr, [sp, #120]
  40fd6c:	str	w1, [sp, #208]
  40fd70:	and	w1, w0, w1
  40fd74:	and	w0, w0, #0x4
  40fd78:	mov	w7, #0x0                   	// #0
  40fd7c:	mov	w25, #0x0                   	// #0
  40fd80:	mov	x12, #0x1                   	// #1
  40fd84:	mov	x19, #0x0                   	// #0
  40fd88:	str	wzr, [sp, #144]
  40fd8c:	str	wzr, [sp, #188]
  40fd90:	str	xzr, [sp, #192]
  40fd94:	stp	w1, w0, [sp, #212]
  40fd98:	mov	w0, #0x5                   	// #5
  40fd9c:	str	w0, [sp, #116]
  40fda0:	b	40f3c8 <ferror@plt+0xc588>
  40fda4:	mov	x1, x19
  40fda8:	cmp	x23, x19
  40fdac:	b.ls	40fc3c <ferror@plt+0xcdfc>  // b.plast
  40fdb0:	mov	w0, w25
  40fdb4:	mov	w25, w0
  40fdb8:	mov	w0, #0x5c                  	// #92
  40fdbc:	strb	w0, [x28, x1]
  40fdc0:	b	40fc3c <ferror@plt+0xcdfc>
  40fdc4:	mov	w5, #0x0                   	// #0
  40fdc8:	cmp	x24, #0x1
  40fdcc:	cset	w0, ne  // ne = any
  40fdd0:	cmn	x24, #0x1
  40fdd4:	b.eq	40fde8 <ferror@plt+0xcfa8>  // b.none
  40fdd8:	cbnz	w0, 40fbd0 <ferror@plt+0xcd90>
  40fddc:	cbz	x20, 40fab4 <ferror@plt+0xcc74>
  40fde0:	mov	w21, #0x0                   	// #0
  40fde4:	b	40fa8c <ferror@plt+0xcc4c>
  40fde8:	ldrb	w0, [x27, #1]
  40fdec:	cmp	w0, #0x0
  40fdf0:	cset	w0, ne  // ne = any
  40fdf4:	cbnz	w0, 40fbd0 <ferror@plt+0xcd90>
  40fdf8:	b	40fddc <ferror@plt+0xcf9c>
  40fdfc:	mov	w5, #0x0                   	// #0
  40fe00:	cbnz	x20, 40fde0 <ferror@plt+0xcfa0>
  40fe04:	b	40fab4 <ferror@plt+0xcc74>
  40fe08:	cbnz	w10, 40fac4 <ferror@plt+0xcc84>
  40fe0c:	mov	w5, #0x0                   	// #0
  40fe10:	mov	w0, w25
  40fe14:	mov	w21, #0x0                   	// #0
  40fe18:	mov	w22, #0x3f                  	// #63
  40fe1c:	cbnz	w5, 40f824 <ferror@plt+0xc9e4>
  40fe20:	b	40f924 <ferror@plt+0xcae4>
  40fe24:	cmp	x0, #0x1
  40fe28:	b.eq	40f538 <ferror@plt+0xc6f8>  // b.none
  40fe2c:	add	x2, x25, #0x1
  40fe30:	add	x0, x27, x0
  40fe34:	add	x2, x27, x2
  40fe38:	add	x9, x0, x25
  40fe3c:	b	40fe4c <ferror@plt+0xd00c>
  40fe40:	add	x2, x2, #0x1
  40fe44:	cmp	x9, x2
  40fe48:	b.eq	40f538 <ferror@plt+0xc6f8>  // b.none
  40fe4c:	ldrb	w0, [x2]
  40fe50:	sub	w0, w0, #0x5b
  40fe54:	and	w0, w0, #0xff
  40fe58:	cmp	w0, #0x21
  40fe5c:	b.hi	40fe40 <ferror@plt+0xd000>  // b.pmore
  40fe60:	lsl	x0, x6, x0
  40fe64:	tst	x0, x13
  40fe68:	b.eq	40fe40 <ferror@plt+0xd000>  // b.none
  40fe6c:	b	40fabc <ferror@plt+0xcc7c>
  40fe70:	add	x19, x19, #0x4
  40fe74:	mov	w25, w0
  40fe78:	mov	w0, #0x0                   	// #0
  40fe7c:	mov	w21, #0x0                   	// #0
  40fe80:	mov	w22, #0x30                  	// #48
  40fe84:	cbnz	w5, 40f824 <ferror@plt+0xc9e4>
  40fe88:	b	40f924 <ferror@plt+0xcae4>
  40fe8c:	ldr	w1, [sp, #124]
  40fe90:	mov	w0, #0x0                   	// #0
  40fe94:	mov	w22, #0x30                  	// #48
  40fe98:	mov	w21, #0x0                   	// #0
  40fe9c:	cbz	w1, 40f810 <ferror@plt+0xc9d0>
  40fea0:	b	40fc80 <ferror@plt+0xce40>
  40fea4:	str	w7, [sp, #120]
  40fea8:	b	40fac4 <ferror@plt+0xcc84>
  40feac:	mov	w5, w11
  40feb0:	mov	w21, #0x0                   	// #0
  40feb4:	b	40fa8c <ferror@plt+0xcc4c>
  40feb8:	mov	w1, w19
  40febc:	adrp	x0, 418000 <_obstack_memory_used@@Base+0x26c8>
  40fec0:	add	x0, x0, #0x950
  40fec4:	str	w10, [sp, #120]
  40fec8:	bl	40f168 <ferror@plt+0xc328>
  40fecc:	str	x0, [sp, #200]
  40fed0:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x26c8>
  40fed4:	add	x0, x1, #0x948
  40fed8:	mov	w1, w19
  40fedc:	bl	40f168 <ferror@plt+0xc328>
  40fee0:	ldr	w10, [sp, #120]
  40fee4:	str	x0, [sp, #256]
  40fee8:	b	40f364 <ferror@plt+0xc524>
  40feec:	cmp	x23, x19
  40fef0:	b.ls	40fef8 <ferror@plt+0xd0b8>  // b.plast
  40fef4:	strb	w22, [x28, x19]
  40fef8:	add	x0, x1, #0x2
  40fefc:	cmp	x23, x0
  40ff00:	b.ls	40ff0c <ferror@plt+0xd0cc>  // b.plast
  40ff04:	mov	w2, #0x30                  	// #48
  40ff08:	strb	w2, [x28, x0]
  40ff0c:	add	x19, x1, #0x3
  40ff10:	mov	w0, #0x0                   	// #0
  40ff14:	mov	w22, #0x30                  	// #48
  40ff18:	b	40fc74 <ferror@plt+0xce34>
  40ff1c:	mov	w5, #0x0                   	// #0
  40ff20:	ldr	w0, [sp, #116]
  40ff24:	cmp	w0, #0x2
  40ff28:	b.eq	40ffa8 <ferror@plt+0xd168>  // b.none
  40ff2c:	ldr	w1, [sp, #208]
  40ff30:	mov	w22, #0x5c                  	// #92
  40ff34:	mov	w0, w22
  40ff38:	cbz	w1, 40fb50 <ferror@plt+0xcd10>
  40ff3c:	add	x20, x20, #0x1
  40ff40:	mov	w0, w25
  40ff44:	mov	w21, #0x0                   	// #0
  40ff48:	b	40f928 <ferror@plt+0xcae8>
  40ff4c:	mov	w5, #0x0                   	// #0
  40ff50:	mov	w0, #0x76                  	// #118
  40ff54:	b	40fb50 <ferror@plt+0xcd10>
  40ff58:	mov	w21, w11
  40ff5c:	mov	w5, #0x0                   	// #0
  40ff60:	b	40fab4 <ferror@plt+0xcc74>
  40ff64:	mov	w5, #0x0                   	// #0
  40ff68:	mov	w0, #0x72                  	// #114
  40ff6c:	b	40fb48 <ferror@plt+0xcd08>
  40ff70:	mov	w5, #0x0                   	// #0
  40ff74:	mov	w0, #0x6e                  	// #110
  40ff78:	b	40fb48 <ferror@plt+0xcd08>
  40ff7c:	mov	w5, #0x0                   	// #0
  40ff80:	mov	w0, #0x61                  	// #97
  40ff84:	b	40fb50 <ferror@plt+0xcd10>
  40ff88:	mov	w5, #0x0                   	// #0
  40ff8c:	mov	w22, #0xa                   	// #10
  40ff90:	mov	w0, #0x6e                  	// #110
  40ff94:	b	40fb50 <ferror@plt+0xcd10>
  40ff98:	mov	w5, #0x0                   	// #0
  40ff9c:	mov	w22, #0xd                   	// #13
  40ffa0:	mov	w0, #0x72                  	// #114
  40ffa4:	b	40fb50 <ferror@plt+0xcd10>
  40ffa8:	cbnz	w10, 40fac4 <ferror@plt+0xcc84>
  40ffac:	add	x20, x20, #0x1
  40ffb0:	mov	w0, w25
  40ffb4:	mov	w21, #0x0                   	// #0
  40ffb8:	mov	w22, #0x5c                  	// #92
  40ffbc:	b	40f928 <ferror@plt+0xcae8>
  40ffc0:	ldr	w0, [sp, #184]
  40ffc4:	and	w1, w0, #0x1
  40ffc8:	and	w0, w0, #0x4
  40ffcc:	stp	w1, w0, [sp, #212]
  40ffd0:	cbnz	w20, 41007c <ferror@plt+0xd23c>
  40ffd4:	mov	w0, #0x1                   	// #1
  40ffd8:	str	w0, [sp, #120]
  40ffdc:	cbnz	x23, 410454 <ferror@plt+0xd614>
  40ffe0:	mov	w0, #0x1                   	// #1
  40ffe4:	mov	w5, w0
  40ffe8:	mov	w7, w0
  40ffec:	adrp	x0, 418000 <_obstack_memory_used@@Base+0x26c8>
  40fff0:	add	x0, x0, #0x948
  40fff4:	mov	x12, #0x1                   	// #1
  40fff8:	mov	w11, #0x0                   	// #0
  40fffc:	mov	x19, x12
  410000:	mov	w25, #0x0                   	// #0
  410004:	mov	w10, #0x0                   	// #0
  410008:	str	w5, [sp, #124]
  41000c:	str	wzr, [sp, #144]
  410010:	str	x0, [sp, #168]
  410014:	mov	w0, #0x2                   	// #2
  410018:	str	w0, [sp, #116]
  41001c:	str	wzr, [sp, #188]
  410020:	str	xzr, [sp, #192]
  410024:	str	wzr, [sp, #208]
  410028:	b	40f3c8 <ferror@plt+0xc588>
  41002c:	ldr	w0, [sp, #184]
  410030:	mov	w11, #0x1                   	// #1
  410034:	mov	w7, #0x0                   	// #0
  410038:	mov	w5, w11
  41003c:	and	w1, w0, w11
  410040:	mov	w25, #0x0                   	// #0
  410044:	and	w0, w0, #0x4
  410048:	mov	w10, #0x0                   	// #0
  41004c:	mov	x12, #0x0                   	// #0
  410050:	mov	x19, #0x0                   	// #0
  410054:	stp	w11, wzr, [sp, #120]
  410058:	str	wzr, [sp, #144]
  41005c:	str	xzr, [sp, #168]
  410060:	str	wzr, [sp, #188]
  410064:	str	xzr, [sp, #192]
  410068:	stp	wzr, w1, [sp, #208]
  41006c:	str	w0, [sp, #216]
  410070:	b	40f3c8 <ferror@plt+0xc588>
  410074:	mov	w5, #0x0                   	// #0
  410078:	b	40f654 <ferror@plt+0xc814>
  41007c:	mov	w1, #0x1                   	// #1
  410080:	mov	w10, w1
  410084:	mov	w7, w1
  410088:	mov	w5, w1
  41008c:	adrp	x0, 418000 <_obstack_memory_used@@Base+0x26c8>
  410090:	add	x0, x0, #0x948
  410094:	str	w1, [sp, #124]
  410098:	str	w1, [sp, #144]
  41009c:	str	x0, [sp, #168]
  4100a0:	mov	w0, #0x2                   	// #2
  4100a4:	mov	w11, #0x0                   	// #0
  4100a8:	mov	w25, #0x0                   	// #0
  4100ac:	mov	x12, #0x1                   	// #1
  4100b0:	mov	x19, #0x0                   	// #0
  4100b4:	stp	w0, wzr, [sp, #116]
  4100b8:	str	wzr, [sp, #188]
  4100bc:	str	xzr, [sp, #192]
  4100c0:	str	wzr, [sp, #208]
  4100c4:	b	40f3c8 <ferror@plt+0xc588>
  4100c8:	ldr	w1, [sp, #184]
  4100cc:	mov	w10, w0
  4100d0:	mov	w7, w0
  4100d4:	mov	w5, w0
  4100d8:	str	w0, [sp, #124]
  4100dc:	and	w2, w1, #0x1
  4100e0:	str	w0, [sp, #144]
  4100e4:	adrp	x0, 418000 <_obstack_memory_used@@Base+0x26c8>
  4100e8:	add	x0, x0, #0x948
  4100ec:	str	x0, [sp, #168]
  4100f0:	and	w0, w1, #0x4
  4100f4:	str	w2, [sp, #212]
  4100f8:	str	w0, [sp, #216]
  4100fc:	b	4100a0 <ferror@plt+0xd260>
  410100:	mov	w11, #0x1                   	// #1
  410104:	mov	x12, #0x1                   	// #1
  410108:	adrp	x0, 418000 <_obstack_memory_used@@Base+0x26c8>
  41010c:	mov	w5, w11
  410110:	add	x0, x0, #0x920
  410114:	mov	x19, x12
  410118:	mov	w7, #0x0                   	// #0
  41011c:	mov	w25, #0x0                   	// #0
  410120:	mov	w10, #0x0                   	// #0
  410124:	stp	w11, wzr, [sp, #120]
  410128:	str	wzr, [sp, #144]
  41012c:	str	x0, [sp, #168]
  410130:	str	wzr, [sp, #188]
  410134:	str	xzr, [sp, #192]
  410138:	str	wzr, [sp, #208]
  41013c:	b	40f3c8 <ferror@plt+0xc588>
  410140:	ldr	w0, [sp, #184]
  410144:	and	w1, w0, #0x1
  410148:	and	w0, w0, #0x4
  41014c:	stp	w1, w0, [sp, #212]
  410150:	cbnz	w20, 410410 <ferror@plt+0xd5d0>
  410154:	str	wzr, [sp, #120]
  410158:	b	40ffdc <ferror@plt+0xd19c>
  41015c:	ldrb	w2, [x27, x6]
  410160:	cmp	w2, #0x3e
  410164:	b.hi	40fbd0 <ferror@plt+0xcd90>  // b.pmore
  410168:	mov	x1, #0x1                   	// #1
  41016c:	mov	x0, #0xa38200000000        	// #179778741075968
  410170:	movk	x0, #0x7000, lsl #48
  410174:	lsl	x1, x1, x2
  410178:	mov	w21, #0x0                   	// #0
  41017c:	tst	x1, x0
  410180:	b.eq	40fa8c <ferror@plt+0xcc4c>  // b.none
  410184:	cbnz	w10, 40f98c <ferror@plt+0xcb4c>
  410188:	cmp	x23, x19
  41018c:	b.ls	410194 <ferror@plt+0xd354>  // b.plast
  410190:	strb	w22, [x28, x19]
  410194:	add	x0, x19, #0x1
  410198:	cmp	x23, x0
  41019c:	b.ls	4101a8 <ferror@plt+0xd368>  // b.plast
  4101a0:	mov	w1, #0x22                  	// #34
  4101a4:	strb	w1, [x28, x0]
  4101a8:	add	x0, x19, #0x2
  4101ac:	cmp	x23, x0
  4101b0:	b.ls	4101bc <ferror@plt+0xd37c>  // b.plast
  4101b4:	mov	w1, #0x22                  	// #34
  4101b8:	strb	w1, [x28, x0]
  4101bc:	add	x0, x19, #0x3
  4101c0:	cmp	x23, x0
  4101c4:	b.ls	4101d0 <ferror@plt+0xd390>  // b.plast
  4101c8:	mov	w1, #0x3f                  	// #63
  4101cc:	strb	w1, [x28, x0]
  4101d0:	add	x19, x19, #0x4
  4101d4:	mov	w22, w2
  4101d8:	mov	x20, x6
  4101dc:	mov	w0, w25
  4101e0:	b	40fc74 <ferror@plt+0xce34>
  4101e4:	mov	w0, #0x1                   	// #1
  4101e8:	mov	w1, w0
  4101ec:	mov	w11, w1
  4101f0:	adrp	x0, 418000 <_obstack_memory_used@@Base+0x26c8>
  4101f4:	mov	w5, w1
  4101f8:	add	x0, x0, #0x920
  4101fc:	mov	w10, w1
  410200:	mov	w7, #0x0                   	// #0
  410204:	mov	w25, #0x0                   	// #0
  410208:	mov	x12, #0x1                   	// #1
  41020c:	mov	x19, #0x0                   	// #0
  410210:	stp	w1, wzr, [sp, #120]
  410214:	str	wzr, [sp, #144]
  410218:	str	x0, [sp, #168]
  41021c:	str	wzr, [sp, #188]
  410220:	str	xzr, [sp, #192]
  410224:	str	w1, [sp, #208]
  410228:	b	40f3c8 <ferror@plt+0xc588>
  41022c:	mov	w5, w11
  410230:	cbnz	x20, 40fde0 <ferror@plt+0xcfa0>
  410234:	b	40fab4 <ferror@plt+0xcc74>
  410238:	mov	w5, w11
  41023c:	b	40fdc8 <ferror@plt+0xcf88>
  410240:	mov	w5, w11
  410244:	b	40ff9c <ferror@plt+0xd15c>
  410248:	mov	w5, w11
  41024c:	mov	w0, #0x76                  	// #118
  410250:	b	40fb50 <ferror@plt+0xcd10>
  410254:	mov	w5, w11
  410258:	b	40ff20 <ferror@plt+0xd0e0>
  41025c:	ldr	w0, [sp, #116]
  410260:	mov	w5, w11
  410264:	cmp	w0, #0x2
  410268:	b.ne	40faec <ferror@plt+0xccac>  // b.any
  41026c:	b	40fe10 <ferror@plt+0xcfd0>
  410270:	mov	w5, w11
  410274:	mov	w21, w11
  410278:	b	40fab4 <ferror@plt+0xcc74>
  41027c:	mov	w5, w11
  410280:	b	40ff8c <ferror@plt+0xd14c>
  410284:	mov	w5, w11
  410288:	mov	w0, #0x74                  	// #116
  41028c:	b	40fb48 <ferror@plt+0xcd08>
  410290:	mov	w5, w11
  410294:	b	40fbe0 <ferror@plt+0xcda0>
  410298:	ldr	w0, [sp, #116]
  41029c:	mov	w5, w11
  4102a0:	cmp	w0, #0x2
  4102a4:	b.ne	40fb34 <ferror@plt+0xccf4>  // b.any
  4102a8:	b	40f8b0 <ferror@plt+0xca70>
  4102ac:	ldr	x0, [sp, #200]
  4102b0:	ldrb	w0, [x0]
  4102b4:	cbz	w0, 40f36c <ferror@plt+0xc52c>
  4102b8:	cmp	x23, x19
  4102bc:	b.ls	4102dc <ferror@plt+0xd49c>  // b.plast
  4102c0:	strb	w0, [x28, x19]
  4102c4:	add	x19, x19, #0x1
  4102c8:	ldr	x0, [sp, #200]
  4102cc:	ldrb	w0, [x0, x19]
  4102d0:	cbz	w0, 40f36c <ferror@plt+0xc52c>
  4102d4:	cmp	x23, x19
  4102d8:	b.hi	4102c0 <ferror@plt+0xd480>  // b.pmore
  4102dc:	ldr	x0, [sp, #200]
  4102e0:	add	x19, x19, #0x1
  4102e4:	ldrb	w0, [x0, x19]
  4102e8:	cbnz	w0, 4102b8 <ferror@plt+0xd478>
  4102ec:	b	40f36c <ferror@plt+0xc52c>
  4102f0:	mov	x8, x21
  4102f4:	ldr	w1, [sp, #120]
  4102f8:	ldr	w10, [sp, #136]
  4102fc:	mov	w21, #0x0                   	// #0
  410300:	ldp	w25, w5, [sp, #148]
  410304:	ldp	w7, w11, [sp, #156]
  410308:	ldr	w22, [sp, #220]
  41030c:	ldr	x12, [sp, #128]
  410310:	ldp	x19, x4, [sp, #224]
  410314:	b	40f588 <ferror@plt+0xc748>
  410318:	ldr	w5, [sp, #124]
  41031c:	mov	w0, w25
  410320:	mov	w21, w5
  410324:	b	40faa4 <ferror@plt+0xcc64>
  410328:	mov	x9, x25
  41032c:	cmp	x25, x24
  410330:	ldr	w10, [sp, #136]
  410334:	mov	x8, x21
  410338:	ldp	w25, w5, [sp, #148]
  41033c:	ldp	w7, w11, [sp, #156]
  410340:	ldr	w22, [sp, #220]
  410344:	ldr	x12, [sp, #128]
  410348:	ldp	x19, x4, [sp, #224]
  41034c:	b.cc	410364 <ferror@plt+0xd524>  // b.lo, b.ul, b.last
  410350:	b	41036c <ferror@plt+0xd52c>
  410354:	add	x8, x8, #0x1
  410358:	add	x9, x20, x8
  41035c:	cmp	x24, x9
  410360:	b.ls	41036c <ferror@plt+0xd52c>  // b.plast
  410364:	ldrb	w0, [x27, x9]
  410368:	cbnz	w0, 410354 <ferror@plt+0xd514>
  41036c:	ldr	w1, [sp, #120]
  410370:	mov	w21, #0x0                   	// #0
  410374:	b	40f588 <ferror@plt+0xc748>
  410378:	mov	w7, w10
  41037c:	ldr	x0, [sp, #168]
  410380:	cmp	x0, #0x0
  410384:	ccmp	w7, #0x0, #0x4, ne  // ne = any
  410388:	b.eq	4103b0 <ferror@plt+0xd570>  // b.none
  41038c:	ldrb	w1, [x0]
  410390:	cbz	w1, 4103b0 <ferror@plt+0xd570>
  410394:	sub	x0, x0, x19
  410398:	cmp	x23, x19
  41039c:	b.ls	4103c0 <ferror@plt+0xd580>  // b.plast
  4103a0:	strb	w1, [x28, x19]
  4103a4:	add	x19, x19, #0x1
  4103a8:	ldrb	w1, [x0, x19]
  4103ac:	cbnz	w1, 410398 <ferror@plt+0xd558>
  4103b0:	cmp	x23, x19
  4103b4:	b.ls	40f9c0 <ferror@plt+0xcb80>  // b.plast
  4103b8:	strb	wzr, [x28, x19]
  4103bc:	b	40f9c0 <ferror@plt+0xcb80>
  4103c0:	add	x19, x19, #0x1
  4103c4:	ldrb	w1, [x0, x19]
  4103c8:	cbnz	w1, 410398 <ferror@plt+0xd558>
  4103cc:	b	4103b0 <ferror@plt+0xd570>
  4103d0:	ldr	w7, [sp, #188]
  4103d4:	b	41037c <ferror@plt+0xd53c>
  4103d8:	ldp	x1, x7, [sp, #192]
  4103dc:	mov	x6, x4
  4103e0:	ldr	w5, [sp, #184]
  4103e4:	mov	x3, x24
  4103e8:	ldr	x0, [sp, #256]
  4103ec:	str	x0, [sp]
  4103f0:	mov	x2, x27
  4103f4:	mov	x0, x28
  4103f8:	mov	w4, #0x5                   	// #5
  4103fc:	bl	40f2d0 <ferror@plt+0xc490>
  410400:	mov	x19, x0
  410404:	b	40f9c0 <ferror@plt+0xcb80>
  410408:	ldr	x23, [sp, #192]
  41040c:	b	40f904 <ferror@plt+0xcac4>
  410410:	mov	w1, #0x1                   	// #1
  410414:	adrp	x0, 418000 <_obstack_memory_used@@Base+0x26c8>
  410418:	mov	w10, w1
  41041c:	add	x0, x0, #0x948
  410420:	mov	w7, w1
  410424:	mov	w5, w1
  410428:	mov	w11, #0x0                   	// #0
  41042c:	mov	w25, #0x0                   	// #0
  410430:	mov	x12, #0x1                   	// #1
  410434:	mov	x19, #0x0                   	// #0
  410438:	stp	wzr, w1, [sp, #120]
  41043c:	str	w1, [sp, #144]
  410440:	str	x0, [sp, #168]
  410444:	str	wzr, [sp, #188]
  410448:	str	xzr, [sp, #192]
  41044c:	str	wzr, [sp, #208]
  410450:	b	40f3c8 <ferror@plt+0xc588>
  410454:	mov	w25, #0x0                   	// #0
  410458:	mov	w0, #0x0                   	// #0
  41045c:	mov	w5, #0x1                   	// #1
  410460:	mov	x1, #0x0                   	// #0
  410464:	str	x23, [sp, #192]
  410468:	b	40f794 <ferror@plt+0xc954>
  41046c:	bl	402a80 <abort@plt>
  410470:	sub	sp, sp, #0x80
  410474:	stp	x29, x30, [sp, #16]
  410478:	add	x29, sp, #0x10
  41047c:	stp	x19, x20, [sp, #32]
  410480:	mov	w19, w0
  410484:	mov	x20, x3
  410488:	stp	x21, x22, [sp, #48]
  41048c:	stp	x23, x24, [sp, #64]
  410490:	mov	x23, x1
  410494:	mov	x24, x2
  410498:	stp	x25, x26, [sp, #80]
  41049c:	stp	x27, x28, [sp, #96]
  4104a0:	bl	402db0 <__errno_location@plt>
  4104a4:	mov	x22, x0
  4104a8:	ldr	w0, [x0]
  4104ac:	adrp	x27, 42d000 <_obstack_memory_used@@Base+0x176c8>
  4104b0:	str	w0, [sp, #116]
  4104b4:	ldr	x21, [x27, #1232]
  4104b8:	tbnz	w19, #31, 410610 <ferror@plt+0xd7d0>
  4104bc:	add	x26, x27, #0x4d0
  4104c0:	ldr	w0, [x26, #8]
  4104c4:	cmp	w0, w19
  4104c8:	b.gt	410518 <ferror@plt+0xd6d8>
  4104cc:	mov	w0, #0x7fffffff            	// #2147483647
  4104d0:	cmp	w19, w0
  4104d4:	b.eq	41060c <ferror@plt+0xd7cc>  // b.none
  4104d8:	add	w28, w19, #0x1
  4104dc:	add	x0, x26, #0x10
  4104e0:	cmp	x21, x0
  4104e4:	sbfiz	x1, x28, #4, #32
  4104e8:	b.eq	4105f0 <ferror@plt+0xd7b0>  // b.none
  4104ec:	mov	x0, x21
  4104f0:	bl	414188 <ferror@plt+0x11348>
  4104f4:	mov	x21, x0
  4104f8:	str	x0, [x27, #1232]
  4104fc:	ldr	w0, [x26, #8]
  410500:	mov	w1, #0x0                   	// #0
  410504:	sub	w2, w28, w0
  410508:	add	x0, x21, w0, sxtw #4
  41050c:	sbfiz	x2, x2, #4, #32
  410510:	bl	402990 <memset@plt>
  410514:	str	w28, [x26, #8]
  410518:	sbfiz	x19, x19, #4, #32
  41051c:	add	x26, x20, #0x8
  410520:	add	x0, x21, x19
  410524:	str	x0, [sp, #120]
  410528:	ldp	w4, w5, [x20]
  41052c:	mov	x6, x26
  410530:	ldr	x7, [x20, #40]
  410534:	orr	w25, w5, #0x1
  410538:	ldr	x27, [x21, x19]
  41053c:	mov	x3, x24
  410540:	ldr	x28, [x0, #8]
  410544:	mov	x1, x27
  410548:	ldr	x0, [x20, #48]
  41054c:	str	x0, [sp]
  410550:	mov	x2, x23
  410554:	mov	w5, w25
  410558:	mov	x0, x28
  41055c:	bl	40f2d0 <ferror@plt+0xc490>
  410560:	cmp	x27, x0
  410564:	b.hi	4105c4 <ferror@plt+0xd784>  // b.pmore
  410568:	add	x27, x0, #0x1
  41056c:	str	x27, [x21, x19]
  410570:	adrp	x0, 42d000 <_obstack_memory_used@@Base+0x176c8>
  410574:	add	x0, x0, #0xbd0
  410578:	cmp	x28, x0
  41057c:	b.eq	410588 <ferror@plt+0xd748>  // b.none
  410580:	mov	x0, x28
  410584:	bl	402ba0 <free@plt>
  410588:	mov	x0, x27
  41058c:	bl	414158 <ferror@plt+0x11318>
  410590:	ldr	x1, [sp, #120]
  410594:	mov	x28, x0
  410598:	ldr	w4, [x20]
  41059c:	mov	x6, x26
  4105a0:	ldr	x7, [x20, #40]
  4105a4:	str	x0, [x1, #8]
  4105a8:	ldr	x1, [x20, #48]
  4105ac:	str	x1, [sp]
  4105b0:	mov	w5, w25
  4105b4:	mov	x3, x24
  4105b8:	mov	x2, x23
  4105bc:	mov	x1, x27
  4105c0:	bl	40f2d0 <ferror@plt+0xc490>
  4105c4:	ldr	w0, [sp, #116]
  4105c8:	ldp	x29, x30, [sp, #16]
  4105cc:	ldp	x19, x20, [sp, #32]
  4105d0:	ldp	x23, x24, [sp, #64]
  4105d4:	ldp	x25, x26, [sp, #80]
  4105d8:	str	w0, [x22]
  4105dc:	mov	x0, x28
  4105e0:	ldp	x21, x22, [sp, #48]
  4105e4:	ldp	x27, x28, [sp, #96]
  4105e8:	add	sp, sp, #0x80
  4105ec:	ret
  4105f0:	mov	x0, #0x0                   	// #0
  4105f4:	bl	414188 <ferror@plt+0x11348>
  4105f8:	mov	x21, x0
  4105fc:	str	x0, [x27, #1232]
  410600:	ldp	x0, x1, [x26, #16]
  410604:	stp	x0, x1, [x21]
  410608:	b	4104fc <ferror@plt+0xd6bc>
  41060c:	bl	414320 <ferror@plt+0x114e0>
  410610:	bl	402a80 <abort@plt>
  410614:	nop
  410618:	stp	x29, x30, [sp, #-48]!
  41061c:	mov	x29, sp
  410620:	stp	x19, x20, [sp, #16]
  410624:	mov	x20, x0
  410628:	str	x21, [sp, #32]
  41062c:	bl	402db0 <__errno_location@plt>
  410630:	adrp	x2, 42d000 <_obstack_memory_used@@Base+0x176c8>
  410634:	mov	x19, x0
  410638:	add	x2, x2, #0xbd0
  41063c:	cmp	x20, #0x0
  410640:	add	x2, x2, #0x100
  410644:	mov	x1, #0x38                  	// #56
  410648:	ldr	w21, [x19]
  41064c:	csel	x0, x2, x20, eq  // eq = none
  410650:	bl	4142a0 <ferror@plt+0x11460>
  410654:	str	w21, [x19]
  410658:	ldp	x19, x20, [sp, #16]
  41065c:	ldr	x21, [sp, #32]
  410660:	ldp	x29, x30, [sp], #48
  410664:	ret
  410668:	adrp	x1, 42d000 <_obstack_memory_used@@Base+0x176c8>
  41066c:	add	x1, x1, #0xbd0
  410670:	cmp	x0, #0x0
  410674:	add	x1, x1, #0x100
  410678:	csel	x0, x1, x0, eq  // eq = none
  41067c:	ldr	w0, [x0]
  410680:	ret
  410684:	nop
  410688:	adrp	x2, 42d000 <_obstack_memory_used@@Base+0x176c8>
  41068c:	add	x2, x2, #0xbd0
  410690:	cmp	x0, #0x0
  410694:	add	x2, x2, #0x100
  410698:	csel	x0, x2, x0, eq  // eq = none
  41069c:	str	w1, [x0]
  4106a0:	ret
  4106a4:	nop
  4106a8:	adrp	x3, 42d000 <_obstack_memory_used@@Base+0x176c8>
  4106ac:	add	x3, x3, #0xbd0
  4106b0:	cmp	x0, #0x0
  4106b4:	add	x3, x3, #0x100
  4106b8:	csel	x0, x3, x0, eq  // eq = none
  4106bc:	ubfx	x4, x1, #5, #3
  4106c0:	add	x3, x0, #0x8
  4106c4:	and	w1, w1, #0x1f
  4106c8:	ldr	w5, [x3, x4, lsl #2]
  4106cc:	lsr	w0, w5, w1
  4106d0:	eor	w2, w0, w2
  4106d4:	and	w2, w2, #0x1
  4106d8:	and	w0, w0, #0x1
  4106dc:	lsl	w2, w2, w1
  4106e0:	eor	w2, w2, w5
  4106e4:	str	w2, [x3, x4, lsl #2]
  4106e8:	ret
  4106ec:	nop
  4106f0:	adrp	x3, 42d000 <_obstack_memory_used@@Base+0x176c8>
  4106f4:	add	x3, x3, #0xbd0
  4106f8:	cmp	x0, #0x0
  4106fc:	add	x3, x3, #0x100
  410700:	csel	x2, x3, x0, eq  // eq = none
  410704:	ldr	w0, [x2, #4]
  410708:	str	w1, [x2, #4]
  41070c:	ret
  410710:	adrp	x3, 42d000 <_obstack_memory_used@@Base+0x176c8>
  410714:	add	x3, x3, #0xbd0
  410718:	cmp	x0, #0x0
  41071c:	add	x3, x3, #0x100
  410720:	csel	x0, x3, x0, eq  // eq = none
  410724:	mov	w3, #0xa                   	// #10
  410728:	cmp	x1, #0x0
  41072c:	ccmp	x2, #0x0, #0x4, ne  // ne = any
  410730:	str	w3, [x0]
  410734:	b.eq	410740 <ferror@plt+0xd900>  // b.none
  410738:	stp	x1, x2, [x0, #40]
  41073c:	ret
  410740:	stp	x29, x30, [sp, #-16]!
  410744:	mov	x29, sp
  410748:	bl	402a80 <abort@plt>
  41074c:	nop
  410750:	sub	sp, sp, #0x50
  410754:	adrp	x5, 42d000 <_obstack_memory_used@@Base+0x176c8>
  410758:	stp	x29, x30, [sp, #16]
  41075c:	add	x29, sp, #0x10
  410760:	stp	x19, x20, [sp, #32]
  410764:	mov	x19, x4
  410768:	add	x4, x5, #0xbd0
  41076c:	cmp	x19, #0x0
  410770:	add	x4, x4, #0x100
  410774:	csel	x19, x4, x19, eq  // eq = none
  410778:	mov	x20, x3
  41077c:	stp	x21, x22, [sp, #48]
  410780:	mov	x21, x0
  410784:	mov	x22, x1
  410788:	str	x23, [sp, #64]
  41078c:	mov	x23, x2
  410790:	bl	402db0 <__errno_location@plt>
  410794:	ldp	x7, x8, [x19, #40]
  410798:	mov	x3, x20
  41079c:	mov	x20, x0
  4107a0:	mov	x0, x21
  4107a4:	ldp	w4, w5, [x19]
  4107a8:	mov	x2, x23
  4107ac:	ldr	w21, [x20]
  4107b0:	mov	x1, x22
  4107b4:	str	x8, [sp]
  4107b8:	add	x6, x19, #0x8
  4107bc:	bl	40f2d0 <ferror@plt+0xc490>
  4107c0:	ldp	x29, x30, [sp, #16]
  4107c4:	ldr	x23, [sp, #64]
  4107c8:	str	w21, [x20]
  4107cc:	ldp	x19, x20, [sp, #32]
  4107d0:	ldp	x21, x22, [sp, #48]
  4107d4:	add	sp, sp, #0x50
  4107d8:	ret
  4107dc:	nop
  4107e0:	sub	sp, sp, #0x60
  4107e4:	adrp	x4, 42d000 <_obstack_memory_used@@Base+0x176c8>
  4107e8:	add	x4, x4, #0xbd0
  4107ec:	cmp	x2, #0x0
  4107f0:	add	x4, x4, #0x100
  4107f4:	stp	x29, x30, [sp, #16]
  4107f8:	add	x29, sp, #0x10
  4107fc:	stp	x19, x20, [sp, #32]
  410800:	csel	x19, x4, x2, eq  // eq = none
  410804:	stp	x21, x22, [sp, #48]
  410808:	mov	x22, x0
  41080c:	stp	x23, x24, [sp, #64]
  410810:	mov	x23, x1
  410814:	stp	x25, x26, [sp, #80]
  410818:	bl	402db0 <__errno_location@plt>
  41081c:	ldr	w26, [x0]
  410820:	ldp	w4, w24, [x19]
  410824:	mov	x20, x0
  410828:	ldp	x7, x0, [x19, #40]
  41082c:	add	x25, x19, #0x8
  410830:	orr	w24, w24, #0x1
  410834:	mov	x6, x25
  410838:	mov	x3, x23
  41083c:	mov	x2, x22
  410840:	mov	w5, w24
  410844:	str	x0, [sp]
  410848:	mov	x1, #0x0                   	// #0
  41084c:	mov	x0, #0x0                   	// #0
  410850:	bl	40f2d0 <ferror@plt+0xc490>
  410854:	add	x21, x0, #0x1
  410858:	mov	x0, x21
  41085c:	bl	414158 <ferror@plt+0x11318>
  410860:	ldp	x7, x1, [x19, #40]
  410864:	mov	w5, w24
  410868:	ldr	w4, [x19]
  41086c:	mov	x6, x25
  410870:	str	x1, [sp]
  410874:	mov	x3, x23
  410878:	mov	x2, x22
  41087c:	mov	x19, x0
  410880:	mov	x1, x21
  410884:	bl	40f2d0 <ferror@plt+0xc490>
  410888:	mov	x0, x19
  41088c:	ldp	x29, x30, [sp, #16]
  410890:	ldp	x21, x22, [sp, #48]
  410894:	ldp	x23, x24, [sp, #64]
  410898:	str	w26, [x20]
  41089c:	ldp	x19, x20, [sp, #32]
  4108a0:	ldp	x25, x26, [sp, #80]
  4108a4:	add	sp, sp, #0x60
  4108a8:	ret
  4108ac:	nop
  4108b0:	sub	sp, sp, #0x70
  4108b4:	adrp	x4, 42d000 <_obstack_memory_used@@Base+0x176c8>
  4108b8:	add	x4, x4, #0xbd0
  4108bc:	cmp	x3, #0x0
  4108c0:	add	x4, x4, #0x100
  4108c4:	stp	x29, x30, [sp, #16]
  4108c8:	add	x29, sp, #0x10
  4108cc:	stp	x19, x20, [sp, #32]
  4108d0:	csel	x19, x4, x3, eq  // eq = none
  4108d4:	mov	x20, x2
  4108d8:	stp	x21, x22, [sp, #48]
  4108dc:	mov	x22, x0
  4108e0:	stp	x23, x24, [sp, #64]
  4108e4:	mov	x23, x1
  4108e8:	stp	x25, x26, [sp, #80]
  4108ec:	stp	x27, x28, [sp, #96]
  4108f0:	bl	402db0 <__errno_location@plt>
  4108f4:	ldr	w28, [x0]
  4108f8:	ldp	w4, w5, [x19]
  4108fc:	mov	x21, x0
  410900:	ldp	x7, x0, [x19, #40]
  410904:	cmp	x20, #0x0
  410908:	cset	w24, eq  // eq = none
  41090c:	add	x27, x19, #0x8
  410910:	orr	w24, w24, w5
  410914:	mov	x6, x27
  410918:	mov	x3, x23
  41091c:	mov	x2, x22
  410920:	mov	w5, w24
  410924:	str	x0, [sp]
  410928:	mov	x1, #0x0                   	// #0
  41092c:	mov	x0, #0x0                   	// #0
  410930:	bl	40f2d0 <ferror@plt+0xc490>
  410934:	add	x26, x0, #0x1
  410938:	mov	x25, x0
  41093c:	mov	x0, x26
  410940:	bl	414158 <ferror@plt+0x11318>
  410944:	ldp	x7, x1, [x19, #40]
  410948:	mov	w5, w24
  41094c:	ldr	w4, [x19]
  410950:	mov	x6, x27
  410954:	str	x1, [sp]
  410958:	mov	x3, x23
  41095c:	mov	x2, x22
  410960:	mov	x19, x0
  410964:	mov	x1, x26
  410968:	bl	40f2d0 <ferror@plt+0xc490>
  41096c:	str	w28, [x21]
  410970:	cbz	x20, 410978 <ferror@plt+0xdb38>
  410974:	str	x25, [x20]
  410978:	mov	x0, x19
  41097c:	ldp	x29, x30, [sp, #16]
  410980:	ldp	x19, x20, [sp, #32]
  410984:	ldp	x21, x22, [sp, #48]
  410988:	ldp	x23, x24, [sp, #64]
  41098c:	ldp	x25, x26, [sp, #80]
  410990:	ldp	x27, x28, [sp, #96]
  410994:	add	sp, sp, #0x70
  410998:	ret
  41099c:	nop
  4109a0:	stp	x29, x30, [sp, #-64]!
  4109a4:	mov	x29, sp
  4109a8:	stp	x21, x22, [sp, #32]
  4109ac:	str	x23, [sp, #48]
  4109b0:	adrp	x23, 42d000 <_obstack_memory_used@@Base+0x176c8>
  4109b4:	add	x22, x23, #0x4d0
  4109b8:	stp	x19, x20, [sp, #16]
  4109bc:	ldr	x21, [x23, #1232]
  4109c0:	ldr	w20, [x22, #8]
  4109c4:	cmp	w20, #0x1
  4109c8:	b.le	4109f0 <ferror@plt+0xdbb0>
  4109cc:	sub	w0, w20, #0x2
  4109d0:	add	x20, x21, #0x28
  4109d4:	add	x19, x21, #0x18
  4109d8:	add	x20, x20, w0, uxtw #4
  4109dc:	nop
  4109e0:	ldr	x0, [x19], #16
  4109e4:	bl	402ba0 <free@plt>
  4109e8:	cmp	x19, x20
  4109ec:	b.ne	4109e0 <ferror@plt+0xdba0>  // b.any
  4109f0:	ldr	x0, [x21, #8]
  4109f4:	adrp	x19, 42d000 <_obstack_memory_used@@Base+0x176c8>
  4109f8:	add	x19, x19, #0xbd0
  4109fc:	cmp	x0, x19
  410a00:	b.eq	410a10 <ferror@plt+0xdbd0>  // b.none
  410a04:	bl	402ba0 <free@plt>
  410a08:	mov	x0, #0x100                 	// #256
  410a0c:	stp	x0, x19, [x22, #16]
  410a10:	add	x19, x22, #0x10
  410a14:	cmp	x21, x19
  410a18:	b.eq	410a28 <ferror@plt+0xdbe8>  // b.none
  410a1c:	mov	x0, x21
  410a20:	bl	402ba0 <free@plt>
  410a24:	str	x19, [x23, #1232]
  410a28:	mov	w0, #0x1                   	// #1
  410a2c:	str	w0, [x22, #8]
  410a30:	ldp	x19, x20, [sp, #16]
  410a34:	ldp	x21, x22, [sp, #32]
  410a38:	ldr	x23, [sp, #48]
  410a3c:	ldp	x29, x30, [sp], #64
  410a40:	ret
  410a44:	nop
  410a48:	sub	sp, sp, #0x70
  410a4c:	stp	x29, x30, [sp, #16]
  410a50:	add	x29, sp, #0x10
  410a54:	stp	x21, x22, [sp, #48]
  410a58:	adrp	x22, 42d000 <_obstack_memory_used@@Base+0x176c8>
  410a5c:	stp	x19, x20, [sp, #32]
  410a60:	mov	w19, w0
  410a64:	stp	x23, x24, [sp, #64]
  410a68:	mov	x24, x1
  410a6c:	stp	x25, x26, [sp, #80]
  410a70:	stp	x27, x28, [sp, #96]
  410a74:	bl	402db0 <__errno_location@plt>
  410a78:	ldr	w25, [x0]
  410a7c:	ldr	x20, [x22, #1232]
  410a80:	tbnz	w19, #31, 410bc8 <ferror@plt+0xdd88>
  410a84:	add	x21, x22, #0x4d0
  410a88:	mov	x23, x0
  410a8c:	ldr	w0, [x21, #8]
  410a90:	cmp	w19, w0
  410a94:	b.lt	410ae4 <ferror@plt+0xdca4>  // b.tstop
  410a98:	mov	w0, #0x7fffffff            	// #2147483647
  410a9c:	cmp	w19, w0
  410aa0:	b.eq	410bc4 <ferror@plt+0xdd84>  // b.none
  410aa4:	add	w26, w19, #0x1
  410aa8:	add	x0, x21, #0x10
  410aac:	cmp	x20, x0
  410ab0:	sbfiz	x1, x26, #4, #32
  410ab4:	b.eq	410ba8 <ferror@plt+0xdd68>  // b.none
  410ab8:	mov	x0, x20
  410abc:	bl	414188 <ferror@plt+0x11348>
  410ac0:	mov	x20, x0
  410ac4:	str	x0, [x22, #1232]
  410ac8:	ldr	w0, [x21, #8]
  410acc:	mov	w1, #0x0                   	// #0
  410ad0:	sub	w2, w26, w0
  410ad4:	add	x0, x20, w0, sxtw #4
  410ad8:	sbfiz	x2, x2, #4, #32
  410adc:	bl	402990 <memset@plt>
  410ae0:	str	w26, [x21, #8]
  410ae4:	adrp	x21, 42d000 <_obstack_memory_used@@Base+0x176c8>
  410ae8:	add	x21, x21, #0xbd0
  410aec:	sbfiz	x19, x19, #4, #32
  410af0:	add	x6, x21, #0x108
  410af4:	add	x26, x20, x19
  410af8:	mov	x2, x24
  410afc:	ldp	x7, x0, [x21, #296]
  410b00:	mov	x3, #0xffffffffffffffff    	// #-1
  410b04:	ldr	w4, [x21, #256]
  410b08:	ldr	w28, [x21, #260]
  410b0c:	ldr	x22, [x20, x19]
  410b10:	orr	w28, w28, #0x1
  410b14:	ldr	x27, [x26, #8]
  410b18:	str	x0, [sp]
  410b1c:	mov	x1, x22
  410b20:	mov	w5, w28
  410b24:	mov	x0, x27
  410b28:	bl	40f2d0 <ferror@plt+0xc490>
  410b2c:	cmp	x22, x0
  410b30:	b.hi	410b80 <ferror@plt+0xdd40>  // b.pmore
  410b34:	add	x22, x0, #0x1
  410b38:	str	x22, [x20, x19]
  410b3c:	cmp	x27, x21
  410b40:	b.eq	410b4c <ferror@plt+0xdd0c>  // b.none
  410b44:	mov	x0, x27
  410b48:	bl	402ba0 <free@plt>
  410b4c:	mov	x0, x22
  410b50:	bl	414158 <ferror@plt+0x11318>
  410b54:	ldp	x7, x1, [x21, #296]
  410b58:	str	x0, [x26, #8]
  410b5c:	ldr	w4, [x21, #256]
  410b60:	mov	x27, x0
  410b64:	str	x1, [sp]
  410b68:	mov	w5, w28
  410b6c:	mov	x2, x24
  410b70:	add	x6, x21, #0x108
  410b74:	mov	x1, x22
  410b78:	mov	x3, #0xffffffffffffffff    	// #-1
  410b7c:	bl	40f2d0 <ferror@plt+0xc490>
  410b80:	mov	x0, x27
  410b84:	ldp	x29, x30, [sp, #16]
  410b88:	ldp	x19, x20, [sp, #32]
  410b8c:	ldp	x21, x22, [sp, #48]
  410b90:	ldp	x27, x28, [sp, #96]
  410b94:	str	w25, [x23]
  410b98:	ldp	x23, x24, [sp, #64]
  410b9c:	ldp	x25, x26, [sp, #80]
  410ba0:	add	sp, sp, #0x70
  410ba4:	ret
  410ba8:	mov	x0, #0x0                   	// #0
  410bac:	bl	414188 <ferror@plt+0x11348>
  410bb0:	mov	x20, x0
  410bb4:	str	x0, [x22, #1232]
  410bb8:	ldp	x0, x1, [x21, #16]
  410bbc:	stp	x0, x1, [x20]
  410bc0:	b	410ac8 <ferror@plt+0xdc88>
  410bc4:	bl	414320 <ferror@plt+0x114e0>
  410bc8:	bl	402a80 <abort@plt>
  410bcc:	nop
  410bd0:	sub	sp, sp, #0x80
  410bd4:	stp	x29, x30, [sp, #16]
  410bd8:	add	x29, sp, #0x10
  410bdc:	stp	x19, x20, [sp, #32]
  410be0:	mov	w19, w0
  410be4:	stp	x21, x22, [sp, #48]
  410be8:	stp	x23, x24, [sp, #64]
  410bec:	mov	x23, x1
  410bf0:	mov	x24, x2
  410bf4:	stp	x25, x26, [sp, #80]
  410bf8:	adrp	x26, 42d000 <_obstack_memory_used@@Base+0x176c8>
  410bfc:	stp	x27, x28, [sp, #96]
  410c00:	bl	402db0 <__errno_location@plt>
  410c04:	mov	x22, x0
  410c08:	ldr	w0, [x0]
  410c0c:	str	w0, [sp, #124]
  410c10:	ldr	x20, [x26, #1232]
  410c14:	tbnz	w19, #31, 410d5c <ferror@plt+0xdf1c>
  410c18:	add	x21, x26, #0x4d0
  410c1c:	ldr	w0, [x21, #8]
  410c20:	cmp	w19, w0
  410c24:	b.lt	410c74 <ferror@plt+0xde34>  // b.tstop
  410c28:	mov	w0, #0x7fffffff            	// #2147483647
  410c2c:	cmp	w19, w0
  410c30:	b.eq	410d58 <ferror@plt+0xdf18>  // b.none
  410c34:	add	w27, w19, #0x1
  410c38:	add	x0, x21, #0x10
  410c3c:	cmp	x20, x0
  410c40:	sbfiz	x1, x27, #4, #32
  410c44:	b.eq	410d3c <ferror@plt+0xdefc>  // b.none
  410c48:	mov	x0, x20
  410c4c:	bl	414188 <ferror@plt+0x11348>
  410c50:	mov	x20, x0
  410c54:	str	x0, [x26, #1232]
  410c58:	ldr	w0, [x21, #8]
  410c5c:	mov	w1, #0x0                   	// #0
  410c60:	sub	w2, w27, w0
  410c64:	add	x0, x20, w0, sxtw #4
  410c68:	sbfiz	x2, x2, #4, #32
  410c6c:	bl	402990 <memset@plt>
  410c70:	str	w27, [x21, #8]
  410c74:	adrp	x21, 42d000 <_obstack_memory_used@@Base+0x176c8>
  410c78:	add	x21, x21, #0xbd0
  410c7c:	sbfiz	x19, x19, #4, #32
  410c80:	add	x6, x21, #0x108
  410c84:	add	x26, x20, x19
  410c88:	mov	x3, x24
  410c8c:	ldp	x7, x0, [x21, #296]
  410c90:	mov	x2, x23
  410c94:	ldr	w4, [x21, #256]
  410c98:	ldr	w5, [x21, #260]
  410c9c:	ldr	x27, [x20, x19]
  410ca0:	orr	w25, w5, #0x1
  410ca4:	ldr	x28, [x26, #8]
  410ca8:	str	x0, [sp]
  410cac:	mov	x1, x27
  410cb0:	mov	w5, w25
  410cb4:	mov	x0, x28
  410cb8:	bl	40f2d0 <ferror@plt+0xc490>
  410cbc:	cmp	x27, x0
  410cc0:	b.hi	410d10 <ferror@plt+0xded0>  // b.pmore
  410cc4:	add	x27, x0, #0x1
  410cc8:	str	x27, [x20, x19]
  410ccc:	cmp	x28, x21
  410cd0:	b.eq	410cdc <ferror@plt+0xde9c>  // b.none
  410cd4:	mov	x0, x28
  410cd8:	bl	402ba0 <free@plt>
  410cdc:	mov	x0, x27
  410ce0:	bl	414158 <ferror@plt+0x11318>
  410ce4:	ldp	x7, x1, [x21, #296]
  410ce8:	str	x0, [x26, #8]
  410cec:	ldr	w4, [x21, #256]
  410cf0:	mov	x28, x0
  410cf4:	str	x1, [sp]
  410cf8:	mov	w5, w25
  410cfc:	mov	x3, x24
  410d00:	mov	x2, x23
  410d04:	add	x6, x21, #0x108
  410d08:	mov	x1, x27
  410d0c:	bl	40f2d0 <ferror@plt+0xc490>
  410d10:	ldr	w0, [sp, #124]
  410d14:	ldp	x29, x30, [sp, #16]
  410d18:	ldp	x19, x20, [sp, #32]
  410d1c:	ldp	x23, x24, [sp, #64]
  410d20:	ldp	x25, x26, [sp, #80]
  410d24:	str	w0, [x22]
  410d28:	mov	x0, x28
  410d2c:	ldp	x21, x22, [sp, #48]
  410d30:	ldp	x27, x28, [sp, #96]
  410d34:	add	sp, sp, #0x80
  410d38:	ret
  410d3c:	mov	x0, #0x0                   	// #0
  410d40:	bl	414188 <ferror@plt+0x11348>
  410d44:	mov	x20, x0
  410d48:	str	x0, [x26, #1232]
  410d4c:	ldp	x0, x1, [x21, #16]
  410d50:	stp	x0, x1, [x20]
  410d54:	b	410c58 <ferror@plt+0xde18>
  410d58:	bl	414320 <ferror@plt+0x114e0>
  410d5c:	bl	402a80 <abort@plt>
  410d60:	sub	sp, sp, #0x60
  410d64:	stp	x29, x30, [sp, #16]
  410d68:	add	x29, sp, #0x10
  410d6c:	stp	x19, x20, [sp, #32]
  410d70:	stp	x21, x22, [sp, #48]
  410d74:	adrp	x21, 42d000 <_obstack_memory_used@@Base+0x176c8>
  410d78:	add	x20, x21, #0x4d0
  410d7c:	stp	x23, x24, [sp, #64]
  410d80:	mov	x24, x0
  410d84:	stp	x25, x26, [sp, #80]
  410d88:	bl	402db0 <__errno_location@plt>
  410d8c:	mov	x23, x0
  410d90:	ldr	w0, [x20, #8]
  410d94:	ldr	x19, [x21, #1232]
  410d98:	cmp	w0, #0x0
  410d9c:	ldr	w25, [x23]
  410da0:	b.gt	410de4 <ferror@plt+0xdfa4>
  410da4:	add	x0, x20, #0x10
  410da8:	cmp	x19, x0
  410dac:	b.eq	410e98 <ferror@plt+0xe058>  // b.none
  410db0:	mov	x0, x19
  410db4:	mov	x1, #0x10                  	// #16
  410db8:	bl	414188 <ferror@plt+0x11348>
  410dbc:	mov	x19, x0
  410dc0:	str	x0, [x21, #1232]
  410dc4:	ldr	w0, [x20, #8]
  410dc8:	mov	w21, #0x1                   	// #1
  410dcc:	mov	w1, #0x0                   	// #0
  410dd0:	sub	w2, w21, w0
  410dd4:	add	x0, x19, w0, sxtw #4
  410dd8:	sbfiz	x2, x2, #4, #32
  410ddc:	bl	402990 <memset@plt>
  410de0:	str	w21, [x20, #8]
  410de4:	adrp	x20, 42d000 <_obstack_memory_used@@Base+0x176c8>
  410de8:	add	x20, x20, #0xbd0
  410dec:	ldp	x21, x22, [x19]
  410df0:	add	x6, x20, #0x108
  410df4:	ldp	x7, x0, [x20, #296]
  410df8:	mov	x2, x24
  410dfc:	ldr	w4, [x20, #256]
  410e00:	mov	x3, #0xffffffffffffffff    	// #-1
  410e04:	ldr	w26, [x20, #260]
  410e08:	str	x0, [sp]
  410e0c:	mov	x1, x21
  410e10:	orr	w26, w26, #0x1
  410e14:	mov	x0, x22
  410e18:	mov	w5, w26
  410e1c:	bl	40f2d0 <ferror@plt+0xc490>
  410e20:	cmp	x21, x0
  410e24:	b.hi	410e74 <ferror@plt+0xe034>  // b.pmore
  410e28:	add	x21, x0, #0x1
  410e2c:	str	x21, [x19]
  410e30:	cmp	x22, x20
  410e34:	b.eq	410e40 <ferror@plt+0xe000>  // b.none
  410e38:	mov	x0, x22
  410e3c:	bl	402ba0 <free@plt>
  410e40:	mov	x0, x21
  410e44:	bl	414158 <ferror@plt+0x11318>
  410e48:	ldp	x7, x1, [x20, #296]
  410e4c:	str	x0, [x19, #8]
  410e50:	ldr	w4, [x20, #256]
  410e54:	mov	x22, x0
  410e58:	str	x1, [sp]
  410e5c:	mov	w5, w26
  410e60:	mov	x2, x24
  410e64:	add	x6, x20, #0x108
  410e68:	mov	x1, x21
  410e6c:	mov	x3, #0xffffffffffffffff    	// #-1
  410e70:	bl	40f2d0 <ferror@plt+0xc490>
  410e74:	mov	x0, x22
  410e78:	ldp	x29, x30, [sp, #16]
  410e7c:	ldp	x19, x20, [sp, #32]
  410e80:	ldp	x21, x22, [sp, #48]
  410e84:	str	w25, [x23]
  410e88:	ldp	x23, x24, [sp, #64]
  410e8c:	ldp	x25, x26, [sp, #80]
  410e90:	add	sp, sp, #0x60
  410e94:	ret
  410e98:	mov	x1, #0x10                  	// #16
  410e9c:	mov	x0, #0x0                   	// #0
  410ea0:	bl	414188 <ferror@plt+0x11348>
  410ea4:	mov	x19, x0
  410ea8:	str	x0, [x21, #1232]
  410eac:	ldp	x0, x1, [x20, #16]
  410eb0:	stp	x0, x1, [x19]
  410eb4:	b	410dc4 <ferror@plt+0xdf84>
  410eb8:	sub	sp, sp, #0x70
  410ebc:	stp	x29, x30, [sp, #16]
  410ec0:	add	x29, sp, #0x10
  410ec4:	stp	x19, x20, [sp, #32]
  410ec8:	stp	x21, x22, [sp, #48]
  410ecc:	adrp	x21, 42d000 <_obstack_memory_used@@Base+0x176c8>
  410ed0:	add	x20, x21, #0x4d0
  410ed4:	stp	x23, x24, [sp, #64]
  410ed8:	mov	x23, x0
  410edc:	mov	x24, x1
  410ee0:	stp	x25, x26, [sp, #80]
  410ee4:	str	x27, [sp, #96]
  410ee8:	bl	402db0 <__errno_location@plt>
  410eec:	mov	x22, x0
  410ef0:	ldr	w0, [x20, #8]
  410ef4:	ldr	x19, [x21, #1232]
  410ef8:	cmp	w0, #0x0
  410efc:	ldr	w25, [x22]
  410f00:	b.gt	410f44 <ferror@plt+0xe104>
  410f04:	add	x0, x20, #0x10
  410f08:	cmp	x19, x0
  410f0c:	b.eq	410ffc <ferror@plt+0xe1bc>  // b.none
  410f10:	mov	x0, x19
  410f14:	mov	x1, #0x10                  	// #16
  410f18:	bl	414188 <ferror@plt+0x11348>
  410f1c:	mov	x19, x0
  410f20:	str	x0, [x21, #1232]
  410f24:	ldr	w0, [x20, #8]
  410f28:	mov	w21, #0x1                   	// #1
  410f2c:	mov	w1, #0x0                   	// #0
  410f30:	sub	w2, w21, w0
  410f34:	add	x0, x19, w0, sxtw #4
  410f38:	sbfiz	x2, x2, #4, #32
  410f3c:	bl	402990 <memset@plt>
  410f40:	str	w21, [x20, #8]
  410f44:	adrp	x20, 42d000 <_obstack_memory_used@@Base+0x176c8>
  410f48:	add	x20, x20, #0xbd0
  410f4c:	ldp	x21, x26, [x19]
  410f50:	add	x6, x20, #0x108
  410f54:	ldp	x7, x0, [x20, #296]
  410f58:	mov	x3, x24
  410f5c:	ldr	w4, [x20, #256]
  410f60:	mov	x2, x23
  410f64:	ldr	w27, [x20, #260]
  410f68:	str	x0, [sp]
  410f6c:	mov	x1, x21
  410f70:	orr	w27, w27, #0x1
  410f74:	mov	x0, x26
  410f78:	mov	w5, w27
  410f7c:	bl	40f2d0 <ferror@plt+0xc490>
  410f80:	cmp	x21, x0
  410f84:	b.hi	410fd4 <ferror@plt+0xe194>  // b.pmore
  410f88:	add	x21, x0, #0x1
  410f8c:	str	x21, [x19]
  410f90:	cmp	x26, x20
  410f94:	b.eq	410fa0 <ferror@plt+0xe160>  // b.none
  410f98:	mov	x0, x26
  410f9c:	bl	402ba0 <free@plt>
  410fa0:	mov	x0, x21
  410fa4:	bl	414158 <ferror@plt+0x11318>
  410fa8:	ldp	x7, x1, [x20, #296]
  410fac:	str	x0, [x19, #8]
  410fb0:	ldr	w4, [x20, #256]
  410fb4:	mov	x26, x0
  410fb8:	str	x1, [sp]
  410fbc:	mov	w5, w27
  410fc0:	mov	x3, x24
  410fc4:	mov	x2, x23
  410fc8:	add	x6, x20, #0x108
  410fcc:	mov	x1, x21
  410fd0:	bl	40f2d0 <ferror@plt+0xc490>
  410fd4:	mov	x0, x26
  410fd8:	ldp	x29, x30, [sp, #16]
  410fdc:	ldp	x19, x20, [sp, #32]
  410fe0:	ldp	x23, x24, [sp, #64]
  410fe4:	ldr	x27, [sp, #96]
  410fe8:	str	w25, [x22]
  410fec:	ldp	x21, x22, [sp, #48]
  410ff0:	ldp	x25, x26, [sp, #80]
  410ff4:	add	sp, sp, #0x70
  410ff8:	ret
  410ffc:	mov	x1, #0x10                  	// #16
  411000:	mov	x0, #0x0                   	// #0
  411004:	bl	414188 <ferror@plt+0x11348>
  411008:	mov	x19, x0
  41100c:	str	x0, [x21, #1232]
  411010:	ldp	x0, x1, [x20, #16]
  411014:	stp	x0, x1, [x19]
  411018:	b	410f24 <ferror@plt+0xe0e4>
  41101c:	nop
  411020:	stp	x29, x30, [sp, #-128]!
  411024:	cmp	w1, #0xa
  411028:	mov	x29, sp
  41102c:	stp	xzr, xzr, [sp, #72]
  411030:	b.eq	411068 <ferror@plt+0xe228>  // b.none
  411034:	mov	w3, w1
  411038:	str	w3, [sp, #72]
  41103c:	mov	x1, x2
  411040:	add	x3, sp, #0x10
  411044:	ldp	x4, x5, [sp, #72]
  411048:	mov	x2, #0xffffffffffffffff    	// #-1
  41104c:	stp	x4, x5, [sp, #16]
  411050:	stp	xzr, xzr, [sp, #32]
  411054:	stp	xzr, xzr, [sp, #48]
  411058:	str	xzr, [sp, #64]
  41105c:	bl	410470 <ferror@plt+0xd630>
  411060:	ldp	x29, x30, [sp], #128
  411064:	ret
  411068:	bl	402a80 <abort@plt>
  41106c:	nop
  411070:	stp	x29, x30, [sp, #-128]!
  411074:	cmp	w1, #0xa
  411078:	mov	x29, sp
  41107c:	stp	xzr, xzr, [sp, #72]
  411080:	b.eq	4110b8 <ferror@plt+0xe278>  // b.none
  411084:	mov	w4, w1
  411088:	str	w4, [sp, #72]
  41108c:	mov	x1, x2
  411090:	mov	x2, x3
  411094:	ldp	x4, x5, [sp, #72]
  411098:	add	x3, sp, #0x10
  41109c:	stp	x4, x5, [sp, #16]
  4110a0:	stp	xzr, xzr, [sp, #32]
  4110a4:	stp	xzr, xzr, [sp, #48]
  4110a8:	str	xzr, [sp, #64]
  4110ac:	bl	410470 <ferror@plt+0xd630>
  4110b0:	ldp	x29, x30, [sp], #128
  4110b4:	ret
  4110b8:	bl	402a80 <abort@plt>
  4110bc:	nop
  4110c0:	sub	sp, sp, #0xd0
  4110c4:	cmp	w0, #0xa
  4110c8:	stp	x29, x30, [sp, #16]
  4110cc:	add	x29, sp, #0x10
  4110d0:	stp	x19, x20, [sp, #32]
  4110d4:	stp	x21, x22, [sp, #48]
  4110d8:	stp	x23, x24, [sp, #64]
  4110dc:	str	x25, [sp, #80]
  4110e0:	stp	xzr, xzr, [sp, #152]
  4110e4:	stp	xzr, xzr, [sp, #168]
  4110e8:	stp	xzr, xzr, [sp, #184]
  4110ec:	str	xzr, [sp, #200]
  4110f0:	b.eq	411244 <ferror@plt+0xe404>  // b.none
  4110f4:	str	w0, [sp, #152]
  4110f8:	mov	x23, x1
  4110fc:	adrp	x21, 42d000 <_obstack_memory_used@@Base+0x176c8>
  411100:	add	x20, x21, #0x4d0
  411104:	ldp	x0, x1, [sp, #152]
  411108:	stp	x0, x1, [sp, #96]
  41110c:	stp	xzr, xzr, [sp, #112]
  411110:	stp	xzr, xzr, [sp, #128]
  411114:	str	xzr, [sp, #144]
  411118:	bl	402db0 <__errno_location@plt>
  41111c:	ldr	w1, [x20, #8]
  411120:	mov	x22, x0
  411124:	ldr	x19, [x21, #1232]
  411128:	cmp	w1, #0x0
  41112c:	ldr	w25, [x0]
  411130:	b.gt	411174 <ferror@plt+0xe334>
  411134:	add	x0, x20, #0x10
  411138:	cmp	x19, x0
  41113c:	b.eq	411224 <ferror@plt+0xe3e4>  // b.none
  411140:	mov	x0, x19
  411144:	mov	x1, #0x10                  	// #16
  411148:	bl	414188 <ferror@plt+0x11348>
  41114c:	mov	x19, x0
  411150:	str	x0, [x21, #1232]
  411154:	ldr	w0, [x20, #8]
  411158:	mov	w21, #0x1                   	// #1
  41115c:	mov	w1, #0x0                   	// #0
  411160:	sub	w2, w21, w0
  411164:	add	x0, x19, w0, sxtw #4
  411168:	sbfiz	x2, x2, #4, #32
  41116c:	bl	402990 <memset@plt>
  411170:	str	w21, [x20, #8]
  411174:	ldp	x20, x21, [x19]
  411178:	add	x6, sp, #0x68
  41117c:	ldp	x7, x0, [sp, #136]
  411180:	str	x0, [sp]
  411184:	ldp	w4, w24, [sp, #96]
  411188:	mov	x2, x23
  41118c:	mov	x1, x20
  411190:	mov	x0, x21
  411194:	orr	w24, w24, #0x1
  411198:	mov	x3, #0xffffffffffffffff    	// #-1
  41119c:	mov	w5, w24
  4111a0:	bl	40f2d0 <ferror@plt+0xc490>
  4111a4:	cmp	x20, x0
  4111a8:	b.hi	411200 <ferror@plt+0xe3c0>  // b.pmore
  4111ac:	add	x20, x0, #0x1
  4111b0:	str	x20, [x19]
  4111b4:	adrp	x0, 42d000 <_obstack_memory_used@@Base+0x176c8>
  4111b8:	add	x0, x0, #0xbd0
  4111bc:	cmp	x21, x0
  4111c0:	b.eq	4111cc <ferror@plt+0xe38c>  // b.none
  4111c4:	mov	x0, x21
  4111c8:	bl	402ba0 <free@plt>
  4111cc:	mov	x0, x20
  4111d0:	bl	414158 <ferror@plt+0x11318>
  4111d4:	ldp	x7, x1, [sp, #136]
  4111d8:	str	x0, [x19, #8]
  4111dc:	ldr	w4, [sp, #96]
  4111e0:	mov	x21, x0
  4111e4:	str	x1, [sp]
  4111e8:	add	x6, sp, #0x68
  4111ec:	mov	w5, w24
  4111f0:	mov	x2, x23
  4111f4:	mov	x1, x20
  4111f8:	mov	x3, #0xffffffffffffffff    	// #-1
  4111fc:	bl	40f2d0 <ferror@plt+0xc490>
  411200:	ldp	x29, x30, [sp, #16]
  411204:	mov	x0, x21
  411208:	ldp	x19, x20, [sp, #32]
  41120c:	ldp	x23, x24, [sp, #64]
  411210:	str	w25, [x22]
  411214:	ldp	x21, x22, [sp, #48]
  411218:	ldr	x25, [sp, #80]
  41121c:	add	sp, sp, #0xd0
  411220:	ret
  411224:	mov	x1, #0x10                  	// #16
  411228:	mov	x0, #0x0                   	// #0
  41122c:	bl	414188 <ferror@plt+0x11348>
  411230:	mov	x19, x0
  411234:	str	x0, [x21, #1232]
  411238:	ldp	x0, x1, [x20, #16]
  41123c:	stp	x0, x1, [x19]
  411240:	b	411154 <ferror@plt+0xe314>
  411244:	bl	402a80 <abort@plt>
  411248:	sub	sp, sp, #0xd0
  41124c:	cmp	w0, #0xa
  411250:	stp	x29, x30, [sp, #16]
  411254:	add	x29, sp, #0x10
  411258:	stp	x19, x20, [sp, #32]
  41125c:	stp	x21, x22, [sp, #48]
  411260:	stp	x23, x24, [sp, #64]
  411264:	stp	x25, x26, [sp, #80]
  411268:	stp	xzr, xzr, [sp, #152]
  41126c:	stp	xzr, xzr, [sp, #168]
  411270:	stp	xzr, xzr, [sp, #184]
  411274:	str	xzr, [sp, #200]
  411278:	b.eq	4113d0 <ferror@plt+0xe590>  // b.none
  41127c:	str	w0, [sp, #152]
  411280:	mov	x23, x1
  411284:	adrp	x21, 42d000 <_obstack_memory_used@@Base+0x176c8>
  411288:	add	x20, x21, #0x4d0
  41128c:	ldp	x0, x1, [sp, #152]
  411290:	mov	x24, x2
  411294:	stp	x0, x1, [sp, #96]
  411298:	stp	xzr, xzr, [sp, #112]
  41129c:	stp	xzr, xzr, [sp, #128]
  4112a0:	str	xzr, [sp, #144]
  4112a4:	bl	402db0 <__errno_location@plt>
  4112a8:	ldr	w1, [x20, #8]
  4112ac:	mov	x22, x0
  4112b0:	ldr	x19, [x21, #1232]
  4112b4:	cmp	w1, #0x0
  4112b8:	ldr	w25, [x0]
  4112bc:	b.gt	411300 <ferror@plt+0xe4c0>
  4112c0:	add	x0, x20, #0x10
  4112c4:	cmp	x19, x0
  4112c8:	b.eq	4113b0 <ferror@plt+0xe570>  // b.none
  4112cc:	mov	x0, x19
  4112d0:	mov	x1, #0x10                  	// #16
  4112d4:	bl	414188 <ferror@plt+0x11348>
  4112d8:	mov	x19, x0
  4112dc:	str	x0, [x21, #1232]
  4112e0:	ldr	w0, [x20, #8]
  4112e4:	mov	w21, #0x1                   	// #1
  4112e8:	mov	w1, #0x0                   	// #0
  4112ec:	sub	w2, w21, w0
  4112f0:	add	x0, x19, w0, sxtw #4
  4112f4:	sbfiz	x2, x2, #4, #32
  4112f8:	bl	402990 <memset@plt>
  4112fc:	str	w21, [x20, #8]
  411300:	ldp	x20, x21, [x19]
  411304:	add	x6, sp, #0x68
  411308:	ldp	x7, x0, [sp, #136]
  41130c:	str	x0, [sp]
  411310:	ldp	w4, w26, [sp, #96]
  411314:	mov	x3, x24
  411318:	mov	x2, x23
  41131c:	mov	x1, x20
  411320:	orr	w26, w26, #0x1
  411324:	mov	x0, x21
  411328:	mov	w5, w26
  41132c:	bl	40f2d0 <ferror@plt+0xc490>
  411330:	cmp	x20, x0
  411334:	b.hi	41138c <ferror@plt+0xe54c>  // b.pmore
  411338:	add	x20, x0, #0x1
  41133c:	str	x20, [x19]
  411340:	adrp	x0, 42d000 <_obstack_memory_used@@Base+0x176c8>
  411344:	add	x0, x0, #0xbd0
  411348:	cmp	x21, x0
  41134c:	b.eq	411358 <ferror@plt+0xe518>  // b.none
  411350:	mov	x0, x21
  411354:	bl	402ba0 <free@plt>
  411358:	mov	x0, x20
  41135c:	bl	414158 <ferror@plt+0x11318>
  411360:	ldp	x7, x1, [sp, #136]
  411364:	str	x0, [x19, #8]
  411368:	ldr	w4, [sp, #96]
  41136c:	mov	x21, x0
  411370:	str	x1, [sp]
  411374:	add	x6, sp, #0x68
  411378:	mov	w5, w26
  41137c:	mov	x3, x24
  411380:	mov	x2, x23
  411384:	mov	x1, x20
  411388:	bl	40f2d0 <ferror@plt+0xc490>
  41138c:	ldp	x29, x30, [sp, #16]
  411390:	mov	x0, x21
  411394:	ldp	x19, x20, [sp, #32]
  411398:	ldp	x23, x24, [sp, #64]
  41139c:	str	w25, [x22]
  4113a0:	ldp	x21, x22, [sp, #48]
  4113a4:	ldp	x25, x26, [sp, #80]
  4113a8:	add	sp, sp, #0xd0
  4113ac:	ret
  4113b0:	mov	x1, #0x10                  	// #16
  4113b4:	mov	x0, #0x0                   	// #0
  4113b8:	bl	414188 <ferror@plt+0x11348>
  4113bc:	mov	x19, x0
  4113c0:	str	x0, [x21, #1232]
  4113c4:	ldp	x0, x1, [x20, #16]
  4113c8:	stp	x0, x1, [x19]
  4113cc:	b	4112e0 <ferror@plt+0xe4a0>
  4113d0:	bl	402a80 <abort@plt>
  4113d4:	nop
  4113d8:	sub	sp, sp, #0xb0
  4113dc:	ubfx	x6, x2, #5, #3
  4113e0:	add	x5, sp, #0x80
  4113e4:	and	w2, w2, #0x1f
  4113e8:	stp	x29, x30, [sp, #16]
  4113ec:	add	x29, sp, #0x10
  4113f0:	stp	x19, x20, [sp, #32]
  4113f4:	adrp	x20, 42d000 <_obstack_memory_used@@Base+0x176c8>
  4113f8:	add	x20, x20, #0xbd0
  4113fc:	stp	x21, x22, [sp, #48]
  411400:	mov	x22, x1
  411404:	mov	x21, x0
  411408:	ldp	x8, x9, [x20, #256]
  41140c:	stp	x8, x9, [sp, #120]
  411410:	ldp	x8, x9, [x20, #272]
  411414:	stp	x8, x9, [sp, #136]
  411418:	ldp	x8, x9, [x20, #288]
  41141c:	stp	x8, x9, [sp, #152]
  411420:	ldr	x3, [x20, #304]
  411424:	str	x3, [sp, #168]
  411428:	stp	x23, x24, [sp, #64]
  41142c:	adrp	x24, 42d000 <_obstack_memory_used@@Base+0x176c8>
  411430:	ldr	w4, [x5, x6, lsl #2]
  411434:	stp	x25, x26, [sp, #80]
  411438:	add	x23, x24, #0x4d0
  41143c:	lsr	w3, w4, w2
  411440:	mvn	w3, w3
  411444:	and	w3, w3, #0x1
  411448:	str	x27, [sp, #96]
  41144c:	lsl	w3, w3, w2
  411450:	eor	w3, w3, w4
  411454:	str	w3, [x5, x6, lsl #2]
  411458:	bl	402db0 <__errno_location@plt>
  41145c:	ldr	w26, [x0]
  411460:	ldr	w1, [x23, #8]
  411464:	mov	x25, x0
  411468:	ldr	x19, [x24, #1232]
  41146c:	cmp	w1, #0x0
  411470:	b.gt	4114b4 <ferror@plt+0xe674>
  411474:	add	x0, x23, #0x10
  411478:	cmp	x19, x0
  41147c:	b.eq	411560 <ferror@plt+0xe720>  // b.none
  411480:	mov	x0, x19
  411484:	mov	x1, #0x10                  	// #16
  411488:	bl	414188 <ferror@plt+0x11348>
  41148c:	mov	x19, x0
  411490:	str	x0, [x24, #1232]
  411494:	ldr	w0, [x23, #8]
  411498:	mov	w24, #0x1                   	// #1
  41149c:	mov	w1, #0x0                   	// #0
  4114a0:	sub	w2, w24, w0
  4114a4:	add	x0, x19, w0, sxtw #4
  4114a8:	sbfiz	x2, x2, #4, #32
  4114ac:	bl	402990 <memset@plt>
  4114b0:	str	w24, [x23, #8]
  4114b4:	ldp	x23, x24, [x19]
  4114b8:	add	x6, sp, #0x80
  4114bc:	ldp	x7, x0, [sp, #160]
  4114c0:	str	x0, [sp]
  4114c4:	ldp	w4, w27, [sp, #120]
  4114c8:	mov	x3, x22
  4114cc:	mov	x2, x21
  4114d0:	mov	x1, x23
  4114d4:	orr	w27, w27, #0x1
  4114d8:	mov	x0, x24
  4114dc:	mov	w5, w27
  4114e0:	bl	40f2d0 <ferror@plt+0xc490>
  4114e4:	cmp	x23, x0
  4114e8:	b.hi	411538 <ferror@plt+0xe6f8>  // b.pmore
  4114ec:	add	x23, x0, #0x1
  4114f0:	str	x23, [x19]
  4114f4:	cmp	x24, x20
  4114f8:	b.eq	411504 <ferror@plt+0xe6c4>  // b.none
  4114fc:	mov	x0, x24
  411500:	bl	402ba0 <free@plt>
  411504:	mov	x0, x23
  411508:	bl	414158 <ferror@plt+0x11318>
  41150c:	ldp	x7, x1, [sp, #160]
  411510:	str	x0, [x19, #8]
  411514:	ldr	w4, [sp, #120]
  411518:	mov	x24, x0
  41151c:	str	x1, [sp]
  411520:	add	x6, sp, #0x80
  411524:	mov	w5, w27
  411528:	mov	x3, x22
  41152c:	mov	x2, x21
  411530:	mov	x1, x23
  411534:	bl	40f2d0 <ferror@plt+0xc490>
  411538:	mov	x0, x24
  41153c:	ldp	x29, x30, [sp, #16]
  411540:	ldp	x19, x20, [sp, #32]
  411544:	ldp	x21, x22, [sp, #48]
  411548:	ldp	x23, x24, [sp, #64]
  41154c:	ldr	x27, [sp, #96]
  411550:	str	w26, [x25]
  411554:	ldp	x25, x26, [sp, #80]
  411558:	add	sp, sp, #0xb0
  41155c:	ret
  411560:	mov	x1, #0x10                  	// #16
  411564:	mov	x0, #0x0                   	// #0
  411568:	bl	414188 <ferror@plt+0x11348>
  41156c:	mov	x19, x0
  411570:	str	x0, [x24, #1232]
  411574:	ldp	x0, x1, [x23, #16]
  411578:	stp	x0, x1, [x19]
  41157c:	b	411494 <ferror@plt+0xe654>
  411580:	sub	sp, sp, #0xa0
  411584:	ubfx	x5, x1, #5, #3
  411588:	add	x4, sp, #0x70
  41158c:	and	w1, w1, #0x1f
  411590:	stp	x29, x30, [sp, #16]
  411594:	add	x29, sp, #0x10
  411598:	stp	x21, x22, [sp, #48]
  41159c:	adrp	x21, 42d000 <_obstack_memory_used@@Base+0x176c8>
  4115a0:	add	x21, x21, #0xbd0
  4115a4:	mov	x22, x0
  4115a8:	stp	x19, x20, [sp, #32]
  4115ac:	ldp	x6, x7, [x21, #256]
  4115b0:	stp	x6, x7, [sp, #104]
  4115b4:	ldp	x6, x7, [x21, #272]
  4115b8:	stp	x6, x7, [sp, #120]
  4115bc:	ldp	x6, x7, [x21, #288]
  4115c0:	stp	x6, x7, [sp, #136]
  4115c4:	ldr	x2, [x21, #304]
  4115c8:	str	x2, [sp, #152]
  4115cc:	stp	x23, x24, [sp, #64]
  4115d0:	adrp	x23, 42d000 <_obstack_memory_used@@Base+0x176c8>
  4115d4:	ldr	w0, [x4, x5, lsl #2]
  4115d8:	stp	x25, x26, [sp, #80]
  4115dc:	add	x20, x23, #0x4d0
  4115e0:	lsr	w2, w0, w1
  4115e4:	mvn	w2, w2
  4115e8:	and	w2, w2, #0x1
  4115ec:	lsl	w2, w2, w1
  4115f0:	eor	w2, w2, w0
  4115f4:	str	w2, [x4, x5, lsl #2]
  4115f8:	bl	402db0 <__errno_location@plt>
  4115fc:	ldr	w25, [x0]
  411600:	ldr	w1, [x20, #8]
  411604:	mov	x24, x0
  411608:	ldr	x19, [x23, #1232]
  41160c:	cmp	w1, #0x0
  411610:	b.gt	411654 <ferror@plt+0xe814>
  411614:	add	x0, x20, #0x10
  411618:	cmp	x19, x0
  41161c:	b.eq	4116fc <ferror@plt+0xe8bc>  // b.none
  411620:	mov	x0, x19
  411624:	mov	x1, #0x10                  	// #16
  411628:	bl	414188 <ferror@plt+0x11348>
  41162c:	mov	x19, x0
  411630:	str	x0, [x23, #1232]
  411634:	ldr	w0, [x20, #8]
  411638:	mov	w23, #0x1                   	// #1
  41163c:	mov	w1, #0x0                   	// #0
  411640:	sub	w2, w23, w0
  411644:	add	x0, x19, w0, sxtw #4
  411648:	sbfiz	x2, x2, #4, #32
  41164c:	bl	402990 <memset@plt>
  411650:	str	w23, [x20, #8]
  411654:	ldp	x20, x23, [x19]
  411658:	add	x6, sp, #0x70
  41165c:	ldp	x7, x0, [sp, #144]
  411660:	str	x0, [sp]
  411664:	ldp	w4, w26, [sp, #104]
  411668:	mov	x2, x22
  41166c:	mov	x1, x20
  411670:	mov	x0, x23
  411674:	orr	w26, w26, #0x1
  411678:	mov	x3, #0xffffffffffffffff    	// #-1
  41167c:	mov	w5, w26
  411680:	bl	40f2d0 <ferror@plt+0xc490>
  411684:	cmp	x20, x0
  411688:	b.hi	4116d8 <ferror@plt+0xe898>  // b.pmore
  41168c:	add	x20, x0, #0x1
  411690:	str	x20, [x19]
  411694:	cmp	x23, x21
  411698:	b.eq	4116a4 <ferror@plt+0xe864>  // b.none
  41169c:	mov	x0, x23
  4116a0:	bl	402ba0 <free@plt>
  4116a4:	mov	x0, x20
  4116a8:	bl	414158 <ferror@plt+0x11318>
  4116ac:	ldp	x7, x1, [sp, #144]
  4116b0:	str	x0, [x19, #8]
  4116b4:	ldr	w4, [sp, #104]
  4116b8:	mov	x23, x0
  4116bc:	str	x1, [sp]
  4116c0:	add	x6, sp, #0x70
  4116c4:	mov	w5, w26
  4116c8:	mov	x2, x22
  4116cc:	mov	x1, x20
  4116d0:	mov	x3, #0xffffffffffffffff    	// #-1
  4116d4:	bl	40f2d0 <ferror@plt+0xc490>
  4116d8:	ldp	x29, x30, [sp, #16]
  4116dc:	mov	x0, x23
  4116e0:	ldp	x19, x20, [sp, #32]
  4116e4:	ldp	x21, x22, [sp, #48]
  4116e8:	str	w25, [x24]
  4116ec:	ldp	x23, x24, [sp, #64]
  4116f0:	ldp	x25, x26, [sp, #80]
  4116f4:	add	sp, sp, #0xa0
  4116f8:	ret
  4116fc:	mov	x1, #0x10                  	// #16
  411700:	mov	x0, #0x0                   	// #0
  411704:	bl	414188 <ferror@plt+0x11348>
  411708:	mov	x19, x0
  41170c:	str	x0, [x23, #1232]
  411710:	ldp	x0, x1, [x20, #16]
  411714:	stp	x0, x1, [x19]
  411718:	b	411634 <ferror@plt+0xe7f4>
  41171c:	nop
  411720:	sub	sp, sp, #0xa0
  411724:	stp	x29, x30, [sp, #16]
  411728:	add	x29, sp, #0x10
  41172c:	stp	x23, x24, [sp, #64]
  411730:	adrp	x23, 42d000 <_obstack_memory_used@@Base+0x176c8>
  411734:	add	x23, x23, #0xbd0
  411738:	stp	x21, x22, [sp, #48]
  41173c:	mov	x22, x0
  411740:	adrp	x21, 42d000 <_obstack_memory_used@@Base+0x176c8>
  411744:	ldp	x4, x5, [x23, #256]
  411748:	stp	x4, x5, [sp, #104]
  41174c:	ldr	w0, [sp, #116]
  411750:	ldp	x4, x5, [x23, #272]
  411754:	stp	x4, x5, [sp, #120]
  411758:	mvn	w1, w0, lsr #26
  41175c:	ldp	x4, x5, [x23, #288]
  411760:	ubfiz	w1, w1, #26, #1
  411764:	ldr	x2, [x23, #304]
  411768:	eor	w1, w1, w0
  41176c:	stp	x19, x20, [sp, #32]
  411770:	add	x20, x21, #0x4d0
  411774:	stp	x25, x26, [sp, #80]
  411778:	str	w1, [sp, #116]
  41177c:	stp	x4, x5, [sp, #136]
  411780:	str	x2, [sp, #152]
  411784:	bl	402db0 <__errno_location@plt>
  411788:	ldr	w1, [x20, #8]
  41178c:	mov	x24, x0
  411790:	ldr	x19, [x21, #1232]
  411794:	cmp	w1, #0x0
  411798:	ldr	w25, [x0]
  41179c:	b.gt	4117e0 <ferror@plt+0xe9a0>
  4117a0:	add	x0, x20, #0x10
  4117a4:	cmp	x19, x0
  4117a8:	b.eq	411888 <ferror@plt+0xea48>  // b.none
  4117ac:	mov	x0, x19
  4117b0:	mov	x1, #0x10                  	// #16
  4117b4:	bl	414188 <ferror@plt+0x11348>
  4117b8:	mov	x19, x0
  4117bc:	str	x0, [x21, #1232]
  4117c0:	ldr	w0, [x20, #8]
  4117c4:	mov	w21, #0x1                   	// #1
  4117c8:	mov	w1, #0x0                   	// #0
  4117cc:	sub	w2, w21, w0
  4117d0:	add	x0, x19, w0, sxtw #4
  4117d4:	sbfiz	x2, x2, #4, #32
  4117d8:	bl	402990 <memset@plt>
  4117dc:	str	w21, [x20, #8]
  4117e0:	ldp	x20, x21, [x19]
  4117e4:	add	x6, sp, #0x70
  4117e8:	ldp	x7, x0, [sp, #144]
  4117ec:	str	x0, [sp]
  4117f0:	ldp	w4, w26, [sp, #104]
  4117f4:	mov	x2, x22
  4117f8:	mov	x1, x20
  4117fc:	mov	x0, x21
  411800:	orr	w26, w26, #0x1
  411804:	mov	x3, #0xffffffffffffffff    	// #-1
  411808:	mov	w5, w26
  41180c:	bl	40f2d0 <ferror@plt+0xc490>
  411810:	cmp	x20, x0
  411814:	b.hi	411864 <ferror@plt+0xea24>  // b.pmore
  411818:	add	x20, x0, #0x1
  41181c:	str	x20, [x19]
  411820:	cmp	x21, x23
  411824:	b.eq	411830 <ferror@plt+0xe9f0>  // b.none
  411828:	mov	x0, x21
  41182c:	bl	402ba0 <free@plt>
  411830:	mov	x0, x20
  411834:	bl	414158 <ferror@plt+0x11318>
  411838:	ldp	x7, x1, [sp, #144]
  41183c:	str	x0, [x19, #8]
  411840:	ldr	w4, [sp, #104]
  411844:	mov	x21, x0
  411848:	str	x1, [sp]
  41184c:	add	x6, sp, #0x70
  411850:	mov	w5, w26
  411854:	mov	x2, x22
  411858:	mov	x1, x20
  41185c:	mov	x3, #0xffffffffffffffff    	// #-1
  411860:	bl	40f2d0 <ferror@plt+0xc490>
  411864:	mov	x0, x21
  411868:	ldp	x29, x30, [sp, #16]
  41186c:	ldp	x19, x20, [sp, #32]
  411870:	ldp	x21, x22, [sp, #48]
  411874:	str	w25, [x24]
  411878:	ldp	x23, x24, [sp, #64]
  41187c:	ldp	x25, x26, [sp, #80]
  411880:	add	sp, sp, #0xa0
  411884:	ret
  411888:	mov	x1, #0x10                  	// #16
  41188c:	mov	x0, #0x0                   	// #0
  411890:	bl	414188 <ferror@plt+0x11348>
  411894:	mov	x19, x0
  411898:	str	x0, [x21, #1232]
  41189c:	ldp	x0, x1, [x20, #16]
  4118a0:	stp	x0, x1, [x19]
  4118a4:	b	4117c0 <ferror@plt+0xe980>
  4118a8:	sub	sp, sp, #0xb0
  4118ac:	stp	x29, x30, [sp, #16]
  4118b0:	add	x29, sp, #0x10
  4118b4:	stp	x21, x22, [sp, #48]
  4118b8:	adrp	x21, 42d000 <_obstack_memory_used@@Base+0x176c8>
  4118bc:	add	x21, x21, #0xbd0
  4118c0:	mov	x22, x0
  4118c4:	stp	x19, x20, [sp, #32]
  4118c8:	ldp	x4, x5, [x21, #256]
  4118cc:	stp	x4, x5, [sp, #120]
  4118d0:	ldr	w4, [sp, #132]
  4118d4:	ldp	x6, x7, [x21, #272]
  4118d8:	stp	x6, x7, [sp, #136]
  4118dc:	mvn	w2, w4, lsr #26
  4118e0:	ldp	x6, x7, [x21, #288]
  4118e4:	ubfiz	w2, w2, #26, #1
  4118e8:	ldr	x0, [x21, #304]
  4118ec:	eor	w2, w2, w4
  4118f0:	stp	x23, x24, [sp, #64]
  4118f4:	adrp	x24, 42d000 <_obstack_memory_used@@Base+0x176c8>
  4118f8:	add	x20, x24, #0x4d0
  4118fc:	mov	x23, x1
  411900:	stp	x25, x26, [sp, #80]
  411904:	str	x27, [sp, #96]
  411908:	str	w2, [sp, #132]
  41190c:	stp	x6, x7, [sp, #152]
  411910:	str	x0, [sp, #168]
  411914:	bl	402db0 <__errno_location@plt>
  411918:	ldr	w1, [x20, #8]
  41191c:	mov	x25, x0
  411920:	ldr	x19, [x24, #1232]
  411924:	cmp	w1, #0x0
  411928:	ldr	w26, [x0]
  41192c:	b.gt	411970 <ferror@plt+0xeb30>
  411930:	add	x0, x20, #0x10
  411934:	cmp	x19, x0
  411938:	b.eq	411a1c <ferror@plt+0xebdc>  // b.none
  41193c:	mov	x0, x19
  411940:	mov	x1, #0x10                  	// #16
  411944:	bl	414188 <ferror@plt+0x11348>
  411948:	mov	x19, x0
  41194c:	str	x0, [x24, #1232]
  411950:	ldr	w0, [x20, #8]
  411954:	mov	w24, #0x1                   	// #1
  411958:	mov	w1, #0x0                   	// #0
  41195c:	sub	w2, w24, w0
  411960:	add	x0, x19, w0, sxtw #4
  411964:	sbfiz	x2, x2, #4, #32
  411968:	bl	402990 <memset@plt>
  41196c:	str	w24, [x20, #8]
  411970:	ldp	x20, x24, [x19]
  411974:	add	x6, sp, #0x80
  411978:	ldp	x7, x0, [sp, #160]
  41197c:	str	x0, [sp]
  411980:	ldp	w4, w27, [sp, #120]
  411984:	mov	x3, x23
  411988:	mov	x2, x22
  41198c:	mov	x1, x20
  411990:	orr	w27, w27, #0x1
  411994:	mov	x0, x24
  411998:	mov	w5, w27
  41199c:	bl	40f2d0 <ferror@plt+0xc490>
  4119a0:	cmp	x20, x0
  4119a4:	b.hi	4119f4 <ferror@plt+0xebb4>  // b.pmore
  4119a8:	add	x20, x0, #0x1
  4119ac:	str	x20, [x19]
  4119b0:	cmp	x24, x21
  4119b4:	b.eq	4119c0 <ferror@plt+0xeb80>  // b.none
  4119b8:	mov	x0, x24
  4119bc:	bl	402ba0 <free@plt>
  4119c0:	mov	x0, x20
  4119c4:	bl	414158 <ferror@plt+0x11318>
  4119c8:	ldp	x7, x1, [sp, #160]
  4119cc:	str	x0, [x19, #8]
  4119d0:	ldr	w4, [sp, #120]
  4119d4:	mov	x24, x0
  4119d8:	str	x1, [sp]
  4119dc:	add	x6, sp, #0x80
  4119e0:	mov	w5, w27
  4119e4:	mov	x3, x23
  4119e8:	mov	x2, x22
  4119ec:	mov	x1, x20
  4119f0:	bl	40f2d0 <ferror@plt+0xc490>
  4119f4:	mov	x0, x24
  4119f8:	ldp	x29, x30, [sp, #16]
  4119fc:	ldp	x19, x20, [sp, #32]
  411a00:	ldp	x21, x22, [sp, #48]
  411a04:	ldp	x23, x24, [sp, #64]
  411a08:	ldr	x27, [sp, #96]
  411a0c:	str	w26, [x25]
  411a10:	ldp	x25, x26, [sp, #80]
  411a14:	add	sp, sp, #0xb0
  411a18:	ret
  411a1c:	mov	x1, #0x10                  	// #16
  411a20:	mov	x0, #0x0                   	// #0
  411a24:	bl	414188 <ferror@plt+0x11348>
  411a28:	mov	x19, x0
  411a2c:	str	x0, [x24, #1232]
  411a30:	ldp	x0, x1, [x20, #16]
  411a34:	stp	x0, x1, [x19]
  411a38:	b	411950 <ferror@plt+0xeb10>
  411a3c:	nop
  411a40:	stp	x29, x30, [sp, #-128]!
  411a44:	cmp	w1, #0xa
  411a48:	mov	x29, sp
  411a4c:	stp	xzr, xzr, [sp, #16]
  411a50:	stp	xzr, xzr, [sp, #32]
  411a54:	stp	xzr, xzr, [sp, #48]
  411a58:	str	xzr, [sp, #64]
  411a5c:	b.eq	411a88 <ferror@plt+0xec48>  // b.none
  411a60:	mov	w4, w1
  411a64:	mov	w5, #0x4000000             	// #67108864
  411a68:	mov	x1, x2
  411a6c:	add	x3, sp, #0x10
  411a70:	mov	x2, #0xffffffffffffffff    	// #-1
  411a74:	str	w4, [sp, #16]
  411a78:	str	w5, [sp, #28]
  411a7c:	bl	410470 <ferror@plt+0xd630>
  411a80:	ldp	x29, x30, [sp], #128
  411a84:	ret
  411a88:	bl	402a80 <abort@plt>
  411a8c:	nop
  411a90:	adrp	x4, 42d000 <_obstack_memory_used@@Base+0x176c8>
  411a94:	add	x4, x4, #0xbd0
  411a98:	stp	x29, x30, [sp, #-80]!
  411a9c:	mov	x5, x1
  411aa0:	mov	w1, #0xa                   	// #10
  411aa4:	mov	x29, sp
  411aa8:	ldp	x8, x9, [x4, #256]
  411aac:	stp	x8, x9, [sp, #24]
  411ab0:	cmp	x5, #0x0
  411ab4:	str	w1, [sp, #24]
  411ab8:	ccmp	x2, #0x0, #0x4, ne  // ne = any
  411abc:	ldp	x10, x11, [x4, #272]
  411ac0:	stp	x10, x11, [sp, #40]
  411ac4:	ldp	x8, x9, [x4, #288]
  411ac8:	stp	x8, x9, [sp, #56]
  411acc:	ldr	x1, [x4, #304]
  411ad0:	str	x1, [sp, #72]
  411ad4:	b.eq	411af8 <ferror@plt+0xecb8>  // b.none
  411ad8:	mov	x4, x2
  411adc:	mov	x1, x3
  411ae0:	mov	x2, #0xffffffffffffffff    	// #-1
  411ae4:	add	x3, sp, #0x18
  411ae8:	stp	x5, x4, [sp, #64]
  411aec:	bl	410470 <ferror@plt+0xd630>
  411af0:	ldp	x29, x30, [sp], #80
  411af4:	ret
  411af8:	bl	402a80 <abort@plt>
  411afc:	nop
  411b00:	adrp	x5, 42d000 <_obstack_memory_used@@Base+0x176c8>
  411b04:	add	x5, x5, #0xbd0
  411b08:	stp	x29, x30, [sp, #-80]!
  411b0c:	mov	x6, x1
  411b10:	mov	w1, #0xa                   	// #10
  411b14:	mov	x29, sp
  411b18:	ldp	x8, x9, [x5, #256]
  411b1c:	stp	x8, x9, [sp, #24]
  411b20:	cmp	x6, #0x0
  411b24:	str	w1, [sp, #24]
  411b28:	ccmp	x2, #0x0, #0x4, ne  // ne = any
  411b2c:	ldp	x10, x11, [x5, #272]
  411b30:	stp	x10, x11, [sp, #40]
  411b34:	ldp	x8, x9, [x5, #288]
  411b38:	stp	x8, x9, [sp, #56]
  411b3c:	ldr	x1, [x5, #304]
  411b40:	str	x1, [sp, #72]
  411b44:	b.eq	411b68 <ferror@plt+0xed28>  // b.none
  411b48:	mov	x5, x2
  411b4c:	mov	x1, x3
  411b50:	mov	x2, x4
  411b54:	add	x3, sp, #0x18
  411b58:	stp	x6, x5, [sp, #64]
  411b5c:	bl	410470 <ferror@plt+0xd630>
  411b60:	ldp	x29, x30, [sp], #80
  411b64:	ret
  411b68:	bl	402a80 <abort@plt>
  411b6c:	nop
  411b70:	sub	sp, sp, #0xb0
  411b74:	cmp	x0, #0x0
  411b78:	ccmp	x1, #0x0, #0x4, ne  // ne = any
  411b7c:	stp	x29, x30, [sp, #16]
  411b80:	add	x29, sp, #0x10
  411b84:	stp	x21, x22, [sp, #48]
  411b88:	adrp	x22, 42d000 <_obstack_memory_used@@Base+0x176c8>
  411b8c:	add	x22, x22, #0xbd0
  411b90:	mov	x21, x0
  411b94:	stp	x19, x20, [sp, #32]
  411b98:	mov	w19, #0xa                   	// #10
  411b9c:	ldp	x4, x5, [x22, #256]
  411ba0:	stp	x4, x5, [sp, #120]
  411ba4:	ldp	x4, x5, [x22, #272]
  411ba8:	stp	x23, x24, [sp, #64]
  411bac:	ldp	x6, x7, [x22, #288]
  411bb0:	stp	x25, x26, [sp, #80]
  411bb4:	ldr	x0, [x22, #304]
  411bb8:	str	x27, [sp, #96]
  411bbc:	str	w19, [sp, #120]
  411bc0:	stp	x4, x5, [sp, #136]
  411bc4:	stp	x6, x7, [sp, #152]
  411bc8:	str	x0, [sp, #168]
  411bcc:	b.eq	411d1c <ferror@plt+0xeedc>  // b.none
  411bd0:	adrp	x27, 42d000 <_obstack_memory_used@@Base+0x176c8>
  411bd4:	add	x26, x27, #0x4d0
  411bd8:	mov	x20, x1
  411bdc:	mov	x24, x2
  411be0:	stp	x21, x1, [sp, #160]
  411be4:	bl	402db0 <__errno_location@plt>
  411be8:	ldr	w1, [x26, #8]
  411bec:	mov	w4, w19
  411bf0:	ldr	w25, [x0]
  411bf4:	ldr	x19, [x27, #1232]
  411bf8:	mov	x23, x0
  411bfc:	cmp	w1, #0x0
  411c00:	b.gt	411c50 <ferror@plt+0xee10>
  411c04:	add	x0, x26, #0x10
  411c08:	cmp	x19, x0
  411c0c:	b.eq	411cfc <ferror@plt+0xeebc>  // b.none
  411c10:	mov	x0, x19
  411c14:	mov	x1, #0x10                  	// #16
  411c18:	bl	414188 <ferror@plt+0x11348>
  411c1c:	mov	x19, x0
  411c20:	str	x0, [x27, #1232]
  411c24:	ldr	w0, [x26, #8]
  411c28:	mov	w20, #0x1                   	// #1
  411c2c:	mov	w1, #0x0                   	// #0
  411c30:	sub	w2, w20, w0
  411c34:	add	x0, x19, w0, sxtw #4
  411c38:	sbfiz	x2, x2, #4, #32
  411c3c:	bl	402990 <memset@plt>
  411c40:	ldr	w4, [sp, #120]
  411c44:	str	w20, [x26, #8]
  411c48:	ldr	x21, [sp, #160]
  411c4c:	ldr	x20, [sp, #168]
  411c50:	mov	x7, x21
  411c54:	ldp	x27, x21, [x19]
  411c58:	str	x20, [sp]
  411c5c:	ldr	w26, [sp, #124]
  411c60:	add	x6, sp, #0x80
  411c64:	mov	x2, x24
  411c68:	mov	x3, #0xffffffffffffffff    	// #-1
  411c6c:	orr	w26, w26, #0x1
  411c70:	mov	w5, w26
  411c74:	mov	x1, x27
  411c78:	mov	x0, x21
  411c7c:	bl	40f2d0 <ferror@plt+0xc490>
  411c80:	cmp	x27, x0
  411c84:	b.hi	411cd4 <ferror@plt+0xee94>  // b.pmore
  411c88:	add	x20, x0, #0x1
  411c8c:	str	x20, [x19]
  411c90:	cmp	x21, x22
  411c94:	b.eq	411ca0 <ferror@plt+0xee60>  // b.none
  411c98:	mov	x0, x21
  411c9c:	bl	402ba0 <free@plt>
  411ca0:	mov	x0, x20
  411ca4:	bl	414158 <ferror@plt+0x11318>
  411ca8:	ldp	x7, x1, [sp, #160]
  411cac:	str	x0, [x19, #8]
  411cb0:	ldr	w4, [sp, #120]
  411cb4:	mov	x21, x0
  411cb8:	str	x1, [sp]
  411cbc:	add	x6, sp, #0x80
  411cc0:	mov	w5, w26
  411cc4:	mov	x2, x24
  411cc8:	mov	x1, x20
  411ccc:	mov	x3, #0xffffffffffffffff    	// #-1
  411cd0:	bl	40f2d0 <ferror@plt+0xc490>
  411cd4:	mov	x0, x21
  411cd8:	ldp	x29, x30, [sp, #16]
  411cdc:	ldp	x19, x20, [sp, #32]
  411ce0:	ldp	x21, x22, [sp, #48]
  411ce4:	ldr	x27, [sp, #96]
  411ce8:	str	w25, [x23]
  411cec:	ldp	x23, x24, [sp, #64]
  411cf0:	ldp	x25, x26, [sp, #80]
  411cf4:	add	sp, sp, #0xb0
  411cf8:	ret
  411cfc:	mov	x1, #0x10                  	// #16
  411d00:	mov	x0, #0x0                   	// #0
  411d04:	bl	414188 <ferror@plt+0x11348>
  411d08:	mov	x19, x0
  411d0c:	str	x0, [x27, #1232]
  411d10:	ldp	x0, x1, [x26, #16]
  411d14:	stp	x0, x1, [x19]
  411d18:	b	411c24 <ferror@plt+0xede4>
  411d1c:	bl	402a80 <abort@plt>
  411d20:	sub	sp, sp, #0xb0
  411d24:	cmp	x0, #0x0
  411d28:	ccmp	x1, #0x0, #0x4, ne  // ne = any
  411d2c:	stp	x29, x30, [sp, #16]
  411d30:	add	x29, sp, #0x10
  411d34:	stp	x21, x22, [sp, #48]
  411d38:	adrp	x22, 42d000 <_obstack_memory_used@@Base+0x176c8>
  411d3c:	add	x22, x22, #0xbd0
  411d40:	mov	x21, x0
  411d44:	stp	x19, x20, [sp, #32]
  411d48:	mov	w19, #0xa                   	// #10
  411d4c:	ldp	x6, x7, [x22, #256]
  411d50:	stp	x6, x7, [sp, #120]
  411d54:	add	x4, x22, #0x100
  411d58:	ldp	x6, x7, [x4, #16]
  411d5c:	stp	x23, x24, [sp, #64]
  411d60:	ldp	x8, x9, [x4, #32]
  411d64:	stp	x25, x26, [sp, #80]
  411d68:	ldr	x0, [x4, #48]
  411d6c:	stp	x27, x28, [sp, #96]
  411d70:	str	w19, [sp, #120]
  411d74:	stp	x6, x7, [sp, #136]
  411d78:	stp	x8, x9, [sp, #152]
  411d7c:	str	x0, [sp, #168]
  411d80:	b.eq	411ed4 <ferror@plt+0xf094>  // b.none
  411d84:	adrp	x28, 42d000 <_obstack_memory_used@@Base+0x176c8>
  411d88:	add	x27, x28, #0x4d0
  411d8c:	mov	x20, x1
  411d90:	mov	x24, x2
  411d94:	mov	x25, x3
  411d98:	stp	x21, x1, [sp, #160]
  411d9c:	bl	402db0 <__errno_location@plt>
  411da0:	ldr	w1, [x27, #8]
  411da4:	mov	w4, w19
  411da8:	ldr	w26, [x0]
  411dac:	mov	x23, x0
  411db0:	ldr	x19, [x28, #1232]
  411db4:	cmp	w1, #0x0
  411db8:	b.gt	411e08 <ferror@plt+0xefc8>
  411dbc:	add	x0, x27, #0x10
  411dc0:	cmp	x19, x0
  411dc4:	b.eq	411eb4 <ferror@plt+0xf074>  // b.none
  411dc8:	mov	x0, x19
  411dcc:	mov	x1, #0x10                  	// #16
  411dd0:	bl	414188 <ferror@plt+0x11348>
  411dd4:	mov	x19, x0
  411dd8:	str	x0, [x28, #1232]
  411ddc:	ldr	w0, [x27, #8]
  411de0:	mov	w20, #0x1                   	// #1
  411de4:	mov	w1, #0x0                   	// #0
  411de8:	sub	w2, w20, w0
  411dec:	add	x0, x19, w0, sxtw #4
  411df0:	sbfiz	x2, x2, #4, #32
  411df4:	bl	402990 <memset@plt>
  411df8:	ldr	w4, [sp, #120]
  411dfc:	str	w20, [x27, #8]
  411e00:	ldr	x21, [sp, #160]
  411e04:	ldr	x20, [sp, #168]
  411e08:	mov	x7, x21
  411e0c:	ldp	x28, x21, [x19]
  411e10:	str	x20, [sp]
  411e14:	ldr	w27, [sp, #124]
  411e18:	add	x6, sp, #0x80
  411e1c:	mov	x3, x25
  411e20:	mov	x2, x24
  411e24:	orr	w27, w27, #0x1
  411e28:	mov	w5, w27
  411e2c:	mov	x1, x28
  411e30:	mov	x0, x21
  411e34:	bl	40f2d0 <ferror@plt+0xc490>
  411e38:	cmp	x28, x0
  411e3c:	b.hi	411e8c <ferror@plt+0xf04c>  // b.pmore
  411e40:	add	x20, x0, #0x1
  411e44:	str	x20, [x19]
  411e48:	cmp	x21, x22
  411e4c:	b.eq	411e58 <ferror@plt+0xf018>  // b.none
  411e50:	mov	x0, x21
  411e54:	bl	402ba0 <free@plt>
  411e58:	mov	x0, x20
  411e5c:	bl	414158 <ferror@plt+0x11318>
  411e60:	ldp	x7, x1, [sp, #160]
  411e64:	str	x0, [x19, #8]
  411e68:	ldr	w4, [sp, #120]
  411e6c:	mov	x21, x0
  411e70:	str	x1, [sp]
  411e74:	add	x6, sp, #0x80
  411e78:	mov	w5, w27
  411e7c:	mov	x3, x25
  411e80:	mov	x2, x24
  411e84:	mov	x1, x20
  411e88:	bl	40f2d0 <ferror@plt+0xc490>
  411e8c:	mov	x0, x21
  411e90:	ldp	x29, x30, [sp, #16]
  411e94:	ldp	x19, x20, [sp, #32]
  411e98:	ldp	x21, x22, [sp, #48]
  411e9c:	ldp	x27, x28, [sp, #96]
  411ea0:	str	w26, [x23]
  411ea4:	ldp	x23, x24, [sp, #64]
  411ea8:	ldp	x25, x26, [sp, #80]
  411eac:	add	sp, sp, #0xb0
  411eb0:	ret
  411eb4:	mov	x1, #0x10                  	// #16
  411eb8:	mov	x0, #0x0                   	// #0
  411ebc:	bl	414188 <ferror@plt+0x11348>
  411ec0:	mov	x19, x0
  411ec4:	str	x0, [x28, #1232]
  411ec8:	ldp	x0, x1, [x27, #16]
  411ecc:	stp	x0, x1, [x19]
  411ed0:	b	411ddc <ferror@plt+0xef9c>
  411ed4:	bl	402a80 <abort@plt>
  411ed8:	sub	sp, sp, #0x80
  411edc:	stp	x29, x30, [sp, #16]
  411ee0:	add	x29, sp, #0x10
  411ee4:	stp	x19, x20, [sp, #32]
  411ee8:	mov	w19, w0
  411eec:	stp	x21, x22, [sp, #48]
  411ef0:	stp	x23, x24, [sp, #64]
  411ef4:	mov	x23, x1
  411ef8:	mov	x24, x2
  411efc:	stp	x25, x26, [sp, #80]
  411f00:	adrp	x26, 42d000 <_obstack_memory_used@@Base+0x176c8>
  411f04:	stp	x27, x28, [sp, #96]
  411f08:	bl	402db0 <__errno_location@plt>
  411f0c:	mov	x22, x0
  411f10:	ldr	w0, [x0]
  411f14:	str	w0, [sp, #124]
  411f18:	ldr	x21, [x26, #1232]
  411f1c:	tbnz	w19, #31, 412060 <ferror@plt+0xf220>
  411f20:	add	x20, x26, #0x4d0
  411f24:	ldr	w0, [x20, #8]
  411f28:	cmp	w19, w0
  411f2c:	b.lt	411f7c <ferror@plt+0xf13c>  // b.tstop
  411f30:	mov	w0, #0x7fffffff            	// #2147483647
  411f34:	cmp	w19, w0
  411f38:	b.eq	41205c <ferror@plt+0xf21c>  // b.none
  411f3c:	add	w27, w19, #0x1
  411f40:	add	x0, x20, #0x10
  411f44:	cmp	x21, x0
  411f48:	sbfiz	x1, x27, #4, #32
  411f4c:	b.eq	412040 <ferror@plt+0xf200>  // b.none
  411f50:	mov	x0, x21
  411f54:	bl	414188 <ferror@plt+0x11348>
  411f58:	mov	x21, x0
  411f5c:	str	x0, [x26, #1232]
  411f60:	ldr	w0, [x20, #8]
  411f64:	mov	w1, #0x0                   	// #0
  411f68:	sub	w2, w27, w0
  411f6c:	add	x0, x21, w0, sxtw #4
  411f70:	sbfiz	x2, x2, #4, #32
  411f74:	bl	402990 <memset@plt>
  411f78:	str	w27, [x20, #8]
  411f7c:	sbfiz	x19, x19, #4, #32
  411f80:	add	x6, x20, #0x28
  411f84:	add	x26, x21, x19
  411f88:	mov	x3, x24
  411f8c:	ldp	x7, x0, [x20, #72]
  411f90:	mov	x2, x23
  411f94:	ldp	w4, w5, [x20, #32]
  411f98:	ldr	x27, [x21, x19]
  411f9c:	orr	w25, w5, #0x1
  411fa0:	ldr	x28, [x26, #8]
  411fa4:	str	x0, [sp]
  411fa8:	mov	x1, x27
  411fac:	mov	w5, w25
  411fb0:	mov	x0, x28
  411fb4:	bl	40f2d0 <ferror@plt+0xc490>
  411fb8:	cmp	x27, x0
  411fbc:	b.hi	412014 <ferror@plt+0xf1d4>  // b.pmore
  411fc0:	add	x27, x0, #0x1
  411fc4:	str	x27, [x21, x19]
  411fc8:	adrp	x0, 42d000 <_obstack_memory_used@@Base+0x176c8>
  411fcc:	add	x0, x0, #0xbd0
  411fd0:	cmp	x28, x0
  411fd4:	b.eq	411fe0 <ferror@plt+0xf1a0>  // b.none
  411fd8:	mov	x0, x28
  411fdc:	bl	402ba0 <free@plt>
  411fe0:	mov	x0, x27
  411fe4:	bl	414158 <ferror@plt+0x11318>
  411fe8:	ldp	x7, x1, [x20, #72]
  411fec:	str	x0, [x26, #8]
  411ff0:	ldr	w4, [x20, #32]
  411ff4:	mov	x28, x0
  411ff8:	str	x1, [sp]
  411ffc:	mov	w5, w25
  412000:	mov	x3, x24
  412004:	mov	x2, x23
  412008:	add	x6, x20, #0x28
  41200c:	mov	x1, x27
  412010:	bl	40f2d0 <ferror@plt+0xc490>
  412014:	ldr	w0, [sp, #124]
  412018:	ldp	x29, x30, [sp, #16]
  41201c:	ldp	x19, x20, [sp, #32]
  412020:	ldp	x23, x24, [sp, #64]
  412024:	ldp	x25, x26, [sp, #80]
  412028:	str	w0, [x22]
  41202c:	mov	x0, x28
  412030:	ldp	x21, x22, [sp, #48]
  412034:	ldp	x27, x28, [sp, #96]
  412038:	add	sp, sp, #0x80
  41203c:	ret
  412040:	mov	x0, #0x0                   	// #0
  412044:	bl	414188 <ferror@plt+0x11348>
  412048:	mov	x21, x0
  41204c:	str	x0, [x26, #1232]
  412050:	ldp	x0, x1, [x20, #16]
  412054:	stp	x0, x1, [x21]
  412058:	b	411f60 <ferror@plt+0xf120>
  41205c:	bl	414320 <ferror@plt+0x114e0>
  412060:	bl	402a80 <abort@plt>
  412064:	nop
  412068:	sub	sp, sp, #0x70
  41206c:	stp	x29, x30, [sp, #16]
  412070:	add	x29, sp, #0x10
  412074:	stp	x19, x20, [sp, #32]
  412078:	stp	x21, x22, [sp, #48]
  41207c:	adrp	x21, 42d000 <_obstack_memory_used@@Base+0x176c8>
  412080:	add	x19, x21, #0x4d0
  412084:	stp	x23, x24, [sp, #64]
  412088:	mov	x24, x0
  41208c:	stp	x25, x26, [sp, #80]
  412090:	mov	x25, x1
  412094:	str	x27, [sp, #96]
  412098:	bl	402db0 <__errno_location@plt>
  41209c:	mov	x23, x0
  4120a0:	ldr	w0, [x19, #8]
  4120a4:	ldr	x20, [x21, #1232]
  4120a8:	cmp	w0, #0x0
  4120ac:	ldr	w26, [x23]
  4120b0:	b.gt	4120f4 <ferror@plt+0xf2b4>
  4120b4:	add	x0, x19, #0x10
  4120b8:	cmp	x20, x0
  4120bc:	b.eq	4121a8 <ferror@plt+0xf368>  // b.none
  4120c0:	mov	x0, x20
  4120c4:	mov	x1, #0x10                  	// #16
  4120c8:	bl	414188 <ferror@plt+0x11348>
  4120cc:	mov	x20, x0
  4120d0:	str	x0, [x21, #1232]
  4120d4:	ldr	w0, [x19, #8]
  4120d8:	mov	w21, #0x1                   	// #1
  4120dc:	mov	w1, #0x0                   	// #0
  4120e0:	sub	w2, w21, w0
  4120e4:	add	x0, x20, w0, sxtw #4
  4120e8:	sbfiz	x2, x2, #4, #32
  4120ec:	bl	402990 <memset@plt>
  4120f0:	str	w21, [x19, #8]
  4120f4:	ldp	x21, x22, [x20]
  4120f8:	add	x6, x19, #0x28
  4120fc:	ldp	x7, x0, [x19, #72]
  412100:	str	x0, [sp]
  412104:	ldp	w4, w27, [x19, #32]
  412108:	mov	x3, x25
  41210c:	mov	x2, x24
  412110:	mov	x1, x21
  412114:	orr	w27, w27, #0x1
  412118:	mov	x0, x22
  41211c:	mov	w5, w27
  412120:	bl	40f2d0 <ferror@plt+0xc490>
  412124:	cmp	x21, x0
  412128:	b.hi	412180 <ferror@plt+0xf340>  // b.pmore
  41212c:	add	x21, x0, #0x1
  412130:	str	x21, [x20]
  412134:	adrp	x0, 42d000 <_obstack_memory_used@@Base+0x176c8>
  412138:	add	x0, x0, #0xbd0
  41213c:	cmp	x22, x0
  412140:	b.eq	41214c <ferror@plt+0xf30c>  // b.none
  412144:	mov	x0, x22
  412148:	bl	402ba0 <free@plt>
  41214c:	mov	x0, x21
  412150:	bl	414158 <ferror@plt+0x11318>
  412154:	ldp	x7, x1, [x19, #72]
  412158:	str	x0, [x20, #8]
  41215c:	ldr	w4, [x19, #32]
  412160:	mov	x22, x0
  412164:	str	x1, [sp]
  412168:	mov	w5, w27
  41216c:	mov	x3, x25
  412170:	mov	x2, x24
  412174:	add	x6, x19, #0x28
  412178:	mov	x1, x21
  41217c:	bl	40f2d0 <ferror@plt+0xc490>
  412180:	mov	x0, x22
  412184:	ldp	x29, x30, [sp, #16]
  412188:	ldp	x19, x20, [sp, #32]
  41218c:	ldp	x21, x22, [sp, #48]
  412190:	ldr	x27, [sp, #96]
  412194:	str	w26, [x23]
  412198:	ldp	x23, x24, [sp, #64]
  41219c:	ldp	x25, x26, [sp, #80]
  4121a0:	add	sp, sp, #0x70
  4121a4:	ret
  4121a8:	mov	x1, #0x10                  	// #16
  4121ac:	mov	x0, #0x0                   	// #0
  4121b0:	bl	414188 <ferror@plt+0x11348>
  4121b4:	mov	x20, x0
  4121b8:	str	x0, [x21, #1232]
  4121bc:	ldp	x0, x1, [x19, #16]
  4121c0:	stp	x0, x1, [x20]
  4121c4:	b	4120d4 <ferror@plt+0xf294>
  4121c8:	sub	sp, sp, #0x70
  4121cc:	stp	x29, x30, [sp, #16]
  4121d0:	add	x29, sp, #0x10
  4121d4:	stp	x21, x22, [sp, #48]
  4121d8:	adrp	x22, 42d000 <_obstack_memory_used@@Base+0x176c8>
  4121dc:	stp	x19, x20, [sp, #32]
  4121e0:	mov	w19, w0
  4121e4:	stp	x23, x24, [sp, #64]
  4121e8:	mov	x24, x1
  4121ec:	stp	x25, x26, [sp, #80]
  4121f0:	stp	x27, x28, [sp, #96]
  4121f4:	bl	402db0 <__errno_location@plt>
  4121f8:	ldr	w25, [x0]
  4121fc:	ldr	x21, [x22, #1232]
  412200:	tbnz	w19, #31, 412344 <ferror@plt+0xf504>
  412204:	add	x20, x22, #0x4d0
  412208:	mov	x23, x0
  41220c:	ldr	w0, [x20, #8]
  412210:	cmp	w19, w0
  412214:	b.lt	412264 <ferror@plt+0xf424>  // b.tstop
  412218:	mov	w0, #0x7fffffff            	// #2147483647
  41221c:	cmp	w19, w0
  412220:	b.eq	412340 <ferror@plt+0xf500>  // b.none
  412224:	add	w26, w19, #0x1
  412228:	add	x0, x20, #0x10
  41222c:	cmp	x21, x0
  412230:	sbfiz	x1, x26, #4, #32
  412234:	b.eq	412324 <ferror@plt+0xf4e4>  // b.none
  412238:	mov	x0, x21
  41223c:	bl	414188 <ferror@plt+0x11348>
  412240:	mov	x21, x0
  412244:	str	x0, [x22, #1232]
  412248:	ldr	w0, [x20, #8]
  41224c:	mov	w1, #0x0                   	// #0
  412250:	sub	w2, w26, w0
  412254:	add	x0, x21, w0, sxtw #4
  412258:	sbfiz	x2, x2, #4, #32
  41225c:	bl	402990 <memset@plt>
  412260:	str	w26, [x20, #8]
  412264:	sbfiz	x19, x19, #4, #32
  412268:	add	x6, x20, #0x28
  41226c:	add	x26, x21, x19
  412270:	mov	x2, x24
  412274:	ldp	x7, x0, [x20, #72]
  412278:	mov	x3, #0xffffffffffffffff    	// #-1
  41227c:	ldp	w4, w28, [x20, #32]
  412280:	ldr	x22, [x21, x19]
  412284:	orr	w28, w28, #0x1
  412288:	ldr	x27, [x26, #8]
  41228c:	str	x0, [sp]
  412290:	mov	x1, x22
  412294:	mov	w5, w28
  412298:	mov	x0, x27
  41229c:	bl	40f2d0 <ferror@plt+0xc490>
  4122a0:	cmp	x22, x0
  4122a4:	b.hi	4122fc <ferror@plt+0xf4bc>  // b.pmore
  4122a8:	add	x22, x0, #0x1
  4122ac:	str	x22, [x21, x19]
  4122b0:	adrp	x0, 42d000 <_obstack_memory_used@@Base+0x176c8>
  4122b4:	add	x0, x0, #0xbd0
  4122b8:	cmp	x27, x0
  4122bc:	b.eq	4122c8 <ferror@plt+0xf488>  // b.none
  4122c0:	mov	x0, x27
  4122c4:	bl	402ba0 <free@plt>
  4122c8:	mov	x0, x22
  4122cc:	bl	414158 <ferror@plt+0x11318>
  4122d0:	ldp	x7, x1, [x20, #72]
  4122d4:	str	x0, [x26, #8]
  4122d8:	ldr	w4, [x20, #32]
  4122dc:	mov	x27, x0
  4122e0:	str	x1, [sp]
  4122e4:	mov	w5, w28
  4122e8:	mov	x2, x24
  4122ec:	add	x6, x20, #0x28
  4122f0:	mov	x1, x22
  4122f4:	mov	x3, #0xffffffffffffffff    	// #-1
  4122f8:	bl	40f2d0 <ferror@plt+0xc490>
  4122fc:	mov	x0, x27
  412300:	ldp	x29, x30, [sp, #16]
  412304:	ldp	x19, x20, [sp, #32]
  412308:	ldp	x21, x22, [sp, #48]
  41230c:	ldp	x27, x28, [sp, #96]
  412310:	str	w25, [x23]
  412314:	ldp	x23, x24, [sp, #64]
  412318:	ldp	x25, x26, [sp, #80]
  41231c:	add	sp, sp, #0x70
  412320:	ret
  412324:	mov	x0, #0x0                   	// #0
  412328:	bl	414188 <ferror@plt+0x11348>
  41232c:	mov	x21, x0
  412330:	str	x0, [x22, #1232]
  412334:	ldp	x0, x1, [x20, #16]
  412338:	stp	x0, x1, [x21]
  41233c:	b	412248 <ferror@plt+0xf408>
  412340:	bl	414320 <ferror@plt+0x114e0>
  412344:	bl	402a80 <abort@plt>
  412348:	sub	sp, sp, #0x60
  41234c:	stp	x29, x30, [sp, #16]
  412350:	add	x29, sp, #0x10
  412354:	stp	x19, x20, [sp, #32]
  412358:	stp	x21, x22, [sp, #48]
  41235c:	adrp	x21, 42d000 <_obstack_memory_used@@Base+0x176c8>
  412360:	add	x19, x21, #0x4d0
  412364:	stp	x23, x24, [sp, #64]
  412368:	mov	x24, x0
  41236c:	stp	x25, x26, [sp, #80]
  412370:	bl	402db0 <__errno_location@plt>
  412374:	mov	x23, x0
  412378:	ldr	w0, [x19, #8]
  41237c:	ldr	x20, [x21, #1232]
  412380:	cmp	w0, #0x0
  412384:	ldr	w25, [x23]
  412388:	b.gt	4123cc <ferror@plt+0xf58c>
  41238c:	add	x0, x19, #0x10
  412390:	cmp	x20, x0
  412394:	b.eq	41247c <ferror@plt+0xf63c>  // b.none
  412398:	mov	x0, x20
  41239c:	mov	x1, #0x10                  	// #16
  4123a0:	bl	414188 <ferror@plt+0x11348>
  4123a4:	mov	x20, x0
  4123a8:	str	x0, [x21, #1232]
  4123ac:	ldr	w0, [x19, #8]
  4123b0:	mov	w21, #0x1                   	// #1
  4123b4:	mov	w1, #0x0                   	// #0
  4123b8:	sub	w2, w21, w0
  4123bc:	add	x0, x20, w0, sxtw #4
  4123c0:	sbfiz	x2, x2, #4, #32
  4123c4:	bl	402990 <memset@plt>
  4123c8:	str	w21, [x19, #8]
  4123cc:	ldp	x21, x22, [x20]
  4123d0:	add	x6, x19, #0x28
  4123d4:	ldp	x7, x0, [x19, #72]
  4123d8:	str	x0, [sp]
  4123dc:	ldp	w4, w26, [x19, #32]
  4123e0:	mov	x2, x24
  4123e4:	mov	x1, x21
  4123e8:	mov	x0, x22
  4123ec:	orr	w26, w26, #0x1
  4123f0:	mov	x3, #0xffffffffffffffff    	// #-1
  4123f4:	mov	w5, w26
  4123f8:	bl	40f2d0 <ferror@plt+0xc490>
  4123fc:	cmp	x21, x0
  412400:	b.hi	412458 <ferror@plt+0xf618>  // b.pmore
  412404:	add	x21, x0, #0x1
  412408:	str	x21, [x20]
  41240c:	adrp	x0, 42d000 <_obstack_memory_used@@Base+0x176c8>
  412410:	add	x0, x0, #0xbd0
  412414:	cmp	x22, x0
  412418:	b.eq	412424 <ferror@plt+0xf5e4>  // b.none
  41241c:	mov	x0, x22
  412420:	bl	402ba0 <free@plt>
  412424:	mov	x0, x21
  412428:	bl	414158 <ferror@plt+0x11318>
  41242c:	ldp	x7, x1, [x19, #72]
  412430:	str	x0, [x20, #8]
  412434:	ldr	w4, [x19, #32]
  412438:	mov	x22, x0
  41243c:	str	x1, [sp]
  412440:	mov	w5, w26
  412444:	mov	x2, x24
  412448:	add	x6, x19, #0x28
  41244c:	mov	x1, x21
  412450:	mov	x3, #0xffffffffffffffff    	// #-1
  412454:	bl	40f2d0 <ferror@plt+0xc490>
  412458:	mov	x0, x22
  41245c:	ldp	x29, x30, [sp, #16]
  412460:	ldp	x19, x20, [sp, #32]
  412464:	ldp	x21, x22, [sp, #48]
  412468:	str	w25, [x23]
  41246c:	ldp	x23, x24, [sp, #64]
  412470:	ldp	x25, x26, [sp, #80]
  412474:	add	sp, sp, #0x60
  412478:	ret
  41247c:	mov	x1, #0x10                  	// #16
  412480:	mov	x0, #0x0                   	// #0
  412484:	bl	414188 <ferror@plt+0x11348>
  412488:	mov	x20, x0
  41248c:	str	x0, [x21, #1232]
  412490:	ldp	x0, x1, [x19, #16]
  412494:	stp	x0, x1, [x20]
  412498:	b	4123ac <ferror@plt+0xf56c>
  41249c:	nop
  4124a0:	stp	x29, x30, [sp, #-48]!
  4124a4:	mov	x29, sp
  4124a8:	stp	x19, x20, [sp, #16]
  4124ac:	stp	x21, x22, [sp, #32]
  4124b0:	cbz	x0, 412500 <ferror@plt+0xf6c0>
  4124b4:	mov	x19, x0
  4124b8:	adrp	x0, 42d000 <_obstack_memory_used@@Base+0x176c8>
  4124bc:	ldr	w22, [x0, #1224]
  4124c0:	bl	402db0 <__errno_location@plt>
  4124c4:	ldr	w21, [x0]
  4124c8:	cbnz	w21, 412504 <ferror@plt+0xf6c4>
  4124cc:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x26c8>
  4124d0:	mov	w2, #0x5                   	// #5
  4124d4:	add	x1, x1, #0xd58
  4124d8:	mov	x0, #0x0                   	// #0
  4124dc:	bl	402d20 <dcgettext@plt>
  4124e0:	mov	x20, x0
  4124e4:	mov	x0, x19
  4124e8:	bl	412348 <ferror@plt+0xf508>
  4124ec:	mov	x2, x20
  4124f0:	mov	x3, x0
  4124f4:	mov	w1, w21
  4124f8:	mov	w0, w22
  4124fc:	bl	4027b0 <error@plt>
  412500:	bl	402a80 <abort@plt>
  412504:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x26c8>
  412508:	mov	w2, #0x5                   	// #5
  41250c:	add	x1, x1, #0xd68
  412510:	mov	x0, #0x0                   	// #0
  412514:	bl	402d20 <dcgettext@plt>
  412518:	mov	x20, x0
  41251c:	b	4124e4 <ferror@plt+0xf6a4>
  412520:	stp	x29, x30, [sp, #-96]!
  412524:	mov	x29, sp
  412528:	stp	x19, x20, [sp, #16]
  41252c:	cbz	x1, 412628 <ferror@plt+0xf7e8>
  412530:	stp	x21, x22, [sp, #32]
  412534:	mov	x20, x1
  412538:	mov	x21, x0
  41253c:	cbz	x0, 4125a0 <ferror@plt+0xf760>
  412540:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x26c8>
  412544:	add	x1, x1, #0xd88
  412548:	bl	415af8 <_obstack_memory_used@@Base+0x1c0>
  41254c:	mov	x22, x0
  412550:	cbz	x0, 41272c <ferror@plt+0xf8ec>
  412554:	mov	x0, #0x1038                	// #4152
  412558:	bl	414158 <ferror@plt+0x11318>
  41255c:	mov	x19, x0
  412560:	cmp	x20, #0x1, lsl #12
  412564:	adrp	x2, 412000 <ferror@plt+0xf1c0>
  412568:	add	x2, x2, #0x4a0
  41256c:	mov	x0, x22
  412570:	add	x1, x19, #0x18
  412574:	stp	x22, x2, [x19]
  412578:	mov	x3, #0x1000                	// #4096
  41257c:	mov	w2, #0x0                   	// #0
  412580:	str	x21, [x19, #16]
  412584:	csel	x3, x20, x3, ls  // ls = plast
  412588:	bl	402820 <setvbuf@plt>
  41258c:	ldp	x21, x22, [sp, #32]
  412590:	mov	x0, x19
  412594:	ldp	x19, x20, [sp, #16]
  412598:	ldp	x29, x30, [sp], #96
  41259c:	ret
  4125a0:	mov	x0, #0x1038                	// #4152
  4125a4:	stp	x23, x24, [sp, #48]
  4125a8:	bl	414158 <ferror@plt+0x11318>
  4125ac:	mov	x19, x0
  4125b0:	adrp	x2, 412000 <ferror@plt+0xf1c0>
  4125b4:	add	x2, x2, #0x4a0
  4125b8:	adrp	x0, 418000 <_obstack_memory_used@@Base+0x26c8>
  4125bc:	mov	w1, #0x0                   	// #0
  4125c0:	add	x0, x0, #0xd78
  4125c4:	stp	xzr, x2, [x19]
  4125c8:	add	x22, x19, #0x20
  4125cc:	stp	xzr, xzr, [x19, #16]
  4125d0:	bl	402900 <open@plt>
  4125d4:	mov	w21, w0
  4125d8:	tbnz	w0, #31, 412654 <ferror@plt+0xf814>
  4125dc:	cmp	x20, #0x800
  4125e0:	mov	x1, x22
  4125e4:	mov	x23, #0x800                 	// #2048
  4125e8:	csel	x2, x20, x23, ls  // ls = plast
  4125ec:	mov	x3, #0x1018                	// #4120
  4125f0:	bl	402c20 <__read_chk@plt>
  4125f4:	mov	x20, x0
  4125f8:	mov	w0, w21
  4125fc:	bl	402a10 <close@plt>
  412600:	cmp	x20, #0x7ff
  412604:	b.le	412738 <ferror@plt+0xf8f8>
  412608:	mov	x0, x22
  41260c:	bl	412bc8 <ferror@plt+0xfd88>
  412610:	mov	x0, x19
  412614:	ldp	x19, x20, [sp, #16]
  412618:	ldp	x21, x22, [sp, #32]
  41261c:	ldp	x23, x24, [sp, #48]
  412620:	ldp	x29, x30, [sp], #96
  412624:	ret
  412628:	mov	x0, #0x1038                	// #4152
  41262c:	bl	414158 <ferror@plt+0x11318>
  412630:	adrp	x1, 412000 <ferror@plt+0xf1c0>
  412634:	add	x1, x1, #0x4a0
  412638:	stp	xzr, x1, [x0]
  41263c:	mov	x19, x0
  412640:	str	xzr, [x0, #16]
  412644:	mov	x0, x19
  412648:	ldp	x19, x20, [sp, #16]
  41264c:	ldp	x29, x30, [sp], #96
  412650:	ret
  412654:	add	x21, sp, #0x50
  412658:	mov	x1, #0x0                   	// #0
  41265c:	mov	x0, x21
  412660:	stp	x25, x26, [sp, #64]
  412664:	bl	4029b0 <gettimeofday@plt>
  412668:	ldp	x0, x1, [sp, #80]
  41266c:	stp	x0, x1, [x19, #32]
  412670:	mov	x25, #0x14                  	// #20
  412674:	bl	4028b0 <getpid@plt>
  412678:	mov	w3, w0
  41267c:	mov	x1, x21
  412680:	add	x0, x19, #0x30
  412684:	mov	x2, #0x4                   	// #4
  412688:	str	w3, [sp, #80]
  41268c:	bl	402720 <memcpy@plt>
  412690:	mov	x20, #0x800                 	// #2048
  412694:	sub	x23, x20, x25
  412698:	cmp	x23, #0x4
  41269c:	mov	x26, #0x4                   	// #4
  4126a0:	csel	x23, x23, x26, ls  // ls = plast
  4126a4:	add	x24, x23, x25
  4126a8:	bl	402910 <getppid@plt>
  4126ac:	mov	w3, w0
  4126b0:	mov	x2, x23
  4126b4:	add	x0, x22, x25
  4126b8:	mov	x1, x21
  4126bc:	str	w3, [sp, #80]
  4126c0:	bl	402720 <memcpy@plt>
  4126c4:	cmp	x24, #0x7ff
  4126c8:	b.hi	4127bc <ferror@plt+0xf97c>  // b.pmore
  4126cc:	sub	x23, x20, x24
  4126d0:	cmp	x23, x26
  4126d4:	csel	x23, x23, x26, ls  // ls = plast
  4126d8:	add	x25, x24, x23
  4126dc:	bl	4027d0 <getuid@plt>
  4126e0:	mov	w3, w0
  4126e4:	mov	x2, x23
  4126e8:	add	x0, x22, x24
  4126ec:	mov	x1, x21
  4126f0:	str	w3, [sp, #80]
  4126f4:	bl	402720 <memcpy@plt>
  4126f8:	cmp	x25, #0x7ff
  4126fc:	b.hi	4127bc <ferror@plt+0xf97c>  // b.pmore
  412700:	bl	402bc0 <getgid@plt>
  412704:	mov	w3, w0
  412708:	sub	x2, x20, x25
  41270c:	add	x0, x22, x25
  412710:	cmp	x2, x26
  412714:	mov	x1, x21
  412718:	csel	x2, x2, x26, ls  // ls = plast
  41271c:	str	w3, [sp, #80]
  412720:	bl	402720 <memcpy@plt>
  412724:	ldp	x25, x26, [sp, #64]
  412728:	b	412608 <ferror@plt+0xf7c8>
  41272c:	mov	x19, #0x0                   	// #0
  412730:	ldp	x21, x22, [sp, #32]
  412734:	b	412590 <ferror@plt+0xf750>
  412738:	cmp	x20, #0x0
  41273c:	mov	x1, #0x10                  	// #16
  412740:	csel	x20, x20, xzr, ge  // ge = tcont
  412744:	add	x21, sp, #0x50
  412748:	sub	x24, x23, x20
  41274c:	mov	x0, x21
  412750:	cmp	x24, x1
  412754:	stp	x25, x26, [sp, #64]
  412758:	csel	x24, x24, x1, ls  // ls = plast
  41275c:	add	x25, x22, x20
  412760:	mov	x1, #0x0                   	// #0
  412764:	bl	4029b0 <gettimeofday@plt>
  412768:	add	x20, x24, x20
  41276c:	mov	x2, x24
  412770:	mov	x1, x21
  412774:	mov	x0, x25
  412778:	bl	402720 <memcpy@plt>
  41277c:	cmp	x20, #0x7ff
  412780:	b.hi	4127bc <ferror@plt+0xf97c>  // b.pmore
  412784:	sub	x23, x23, x20
  412788:	mov	x0, #0x4                   	// #4
  41278c:	cmp	x23, x0
  412790:	csel	x23, x23, x0, ls  // ls = plast
  412794:	add	x25, x20, x23
  412798:	bl	4028b0 <getpid@plt>
  41279c:	mov	w3, w0
  4127a0:	mov	x2, x23
  4127a4:	add	x0, x22, x20
  4127a8:	mov	x1, x21
  4127ac:	str	w3, [sp, #80]
  4127b0:	bl	402720 <memcpy@plt>
  4127b4:	cmp	x25, #0x7ff
  4127b8:	b.ls	412690 <ferror@plt+0xf850>  // b.plast
  4127bc:	ldp	x25, x26, [sp, #64]
  4127c0:	b	412608 <ferror@plt+0xf7c8>
  4127c4:	nop
  4127c8:	str	x1, [x0, #8]
  4127cc:	ret
  4127d0:	str	x1, [x0, #16]
  4127d4:	ret
  4127d8:	stp	x29, x30, [sp, #-80]!
  4127dc:	mov	x29, sp
  4127e0:	stp	x23, x24, [sp, #48]
  4127e4:	ldr	x23, [x0]
  4127e8:	stp	x19, x20, [sp, #16]
  4127ec:	mov	x20, x1
  4127f0:	stp	x21, x22, [sp, #32]
  4127f4:	mov	x19, x2
  4127f8:	mov	x21, x0
  4127fc:	cbz	x23, 412864 <ferror@plt+0xfa24>
  412800:	bl	402db0 <__errno_location@plt>
  412804:	mov	x22, x0
  412808:	b	41282c <ferror@plt+0xf9ec>
  41280c:	ldp	x0, x2, [x21]
  412810:	ldr	w3, [x0]
  412814:	ldr	x0, [x21, #16]
  412818:	tst	x3, #0x20
  41281c:	csel	w1, w1, wzr, ne  // ne = any
  412820:	str	w1, [x22]
  412824:	blr	x2
  412828:	ldr	x23, [x21]
  41282c:	mov	x2, x19
  412830:	mov	x0, x20
  412834:	mov	x1, #0x1                   	// #1
  412838:	mov	x3, x23
  41283c:	bl	402af0 <fread_unlocked@plt>
  412840:	ldr	w1, [x22]
  412844:	add	x20, x20, x0
  412848:	subs	x19, x19, x0
  41284c:	b.ne	41280c <ferror@plt+0xf9cc>  // b.any
  412850:	ldp	x19, x20, [sp, #16]
  412854:	ldp	x21, x22, [sp, #32]
  412858:	ldp	x23, x24, [sp, #48]
  41285c:	ldp	x29, x30, [sp], #80
  412860:	ret
  412864:	ldr	x23, [x0, #24]
  412868:	str	x25, [sp, #64]
  41286c:	add	x24, x0, #0x838
  412870:	add	x25, x0, #0x20
  412874:	cmp	x2, x23
  412878:	mov	x22, #0x800                 	// #2048
  41287c:	b.ls	41293c <ferror@plt+0xfafc>  // b.plast
  412880:	mov	x0, x20
  412884:	sub	x1, x22, x23
  412888:	add	x20, x20, x23
  41288c:	add	x1, x24, x1
  412890:	mov	x2, x23
  412894:	bl	402720 <memcpy@plt>
  412898:	mov	x1, x24
  41289c:	mov	x0, x25
  4128a0:	sub	x19, x19, x23
  4128a4:	tst	x20, #0x7
  4128a8:	b.eq	4128e4 <ferror@plt+0xfaa4>  // b.none
  4128ac:	bl	4129a0 <ferror@plt+0xfb60>
  4128b0:	mov	x23, #0x800                 	// #2048
  4128b4:	cmp	x19, x23
  4128b8:	b.hi	412880 <ferror@plt+0xfa40>  // b.pmore
  4128bc:	mov	x22, x19
  4128c0:	mov	x23, #0x800                 	// #2048
  4128c4:	mov	x2, x22
  4128c8:	mov	x1, x24
  4128cc:	mov	x0, x20
  4128d0:	sub	x22, x23, x22
  4128d4:	bl	402720 <memcpy@plt>
  4128d8:	ldr	x25, [sp, #64]
  4128dc:	str	x22, [x21, #24]
  4128e0:	b	412850 <ferror@plt+0xfa10>
  4128e4:	mov	x22, x19
  4128e8:	and	x19, x19, #0x7ff
  4128ec:	add	x23, x20, x22
  4128f0:	b	412904 <ferror@plt+0xfac4>
  4128f4:	mov	x1, x20
  4128f8:	bl	4129a0 <ferror@plt+0xfb60>
  4128fc:	subs	x22, x22, #0x800
  412900:	b.eq	412920 <ferror@plt+0xfae0>  // b.none
  412904:	mov	x0, x25
  412908:	cmp	x19, x22
  41290c:	sub	x20, x23, x22
  412910:	b.ne	4128f4 <ferror@plt+0xfab4>  // b.any
  412914:	mov	x1, x24
  412918:	bl	4129a0 <ferror@plt+0xfb60>
  41291c:	b	4128c0 <ferror@plt+0xfa80>
  412920:	ldr	x25, [sp, #64]
  412924:	str	xzr, [x21, #24]
  412928:	ldp	x19, x20, [sp, #16]
  41292c:	ldp	x21, x22, [sp, #32]
  412930:	ldp	x23, x24, [sp, #48]
  412934:	ldp	x29, x30, [sp], #80
  412938:	ret
  41293c:	sub	x24, x24, x23
  412940:	mov	x22, x2
  412944:	add	x24, x24, #0x800
  412948:	b	4128c4 <ferror@plt+0xfa84>
  41294c:	nop
  412950:	stp	x29, x30, [sp, #-32]!
  412954:	mov	x2, #0xffffffffffffffff    	// #-1
  412958:	mov	x1, #0x1038                	// #4152
  41295c:	mov	x29, sp
  412960:	stp	x19, x20, [sp, #16]
  412964:	mov	x19, x0
  412968:	ldr	x20, [x0]
  41296c:	bl	402cd0 <__explicit_bzero_chk@plt>
  412970:	mov	x0, x19
  412974:	bl	402ba0 <free@plt>
  412978:	cbz	x20, 41298c <ferror@plt+0xfb4c>
  41297c:	mov	x0, x20
  412980:	ldp	x19, x20, [sp, #16]
  412984:	ldp	x29, x30, [sp], #32
  412988:	b	414fb8 <ferror@plt+0x12178>
  41298c:	mov	w0, #0x0                   	// #0
  412990:	ldp	x19, x20, [sp, #16]
  412994:	ldp	x29, x30, [sp], #32
  412998:	ret
  41299c:	nop
  4129a0:	ldr	x8, [x0, #2064]
  4129a4:	add	x6, x0, #0x400
  4129a8:	ldr	x4, [x0, #2056]
  4129ac:	add	x8, x8, #0x1
  4129b0:	ldr	x2, [x0, #2048]
  4129b4:	mov	x5, x1
  4129b8:	mov	x3, x0
  4129bc:	add	x7, x4, x8
  4129c0:	str	x8, [x0, #2064]
  4129c4:	nop
  4129c8:	ldr	x8, [x3]
  4129cc:	eor	x9, x2, x2, lsl #21
  4129d0:	ldr	x2, [x3, #1024]
  4129d4:	and	x4, x8, #0x7f8
  4129d8:	add	x3, x3, #0x20
  4129dc:	add	x5, x5, #0x20
  4129e0:	sub	x2, x2, #0x1
  4129e4:	ldr	x4, [x0, x4]
  4129e8:	sub	x2, x2, x9
  4129ec:	add	x4, x2, x4
  4129f0:	eor	x2, x2, x2, lsr #5
  4129f4:	add	x4, x4, x7
  4129f8:	stur	x4, [x3, #-32]
  4129fc:	lsr	x4, x4, #8
  412a00:	and	x4, x4, #0x7f8
  412a04:	ldr	x4, [x0, x4]
  412a08:	add	x8, x8, x4
  412a0c:	stur	x8, [x5, #-32]
  412a10:	ldur	x7, [x3, #-24]
  412a14:	ldr	x9, [x3, #1000]
  412a18:	and	x4, x7, #0x7f8
  412a1c:	add	x2, x2, x9
  412a20:	ldr	x9, [x0, x4]
  412a24:	eor	x4, x2, x2, lsl #12
  412a28:	add	x2, x2, x9
  412a2c:	add	x2, x2, x8
  412a30:	stur	x2, [x3, #-24]
  412a34:	lsr	x2, x2, #8
  412a38:	and	x2, x2, #0x7f8
  412a3c:	ldr	x2, [x0, x2]
  412a40:	add	x7, x7, x2
  412a44:	stur	x7, [x5, #-24]
  412a48:	ldur	x8, [x3, #-16]
  412a4c:	ldr	x9, [x3, #1008]
  412a50:	and	x2, x8, #0x7f8
  412a54:	add	x4, x4, x9
  412a58:	ldr	x2, [x0, x2]
  412a5c:	eor	x9, x4, x4, lsr #33
  412a60:	add	x4, x4, x2
  412a64:	add	x4, x4, x7
  412a68:	stur	x4, [x3, #-16]
  412a6c:	lsr	x4, x4, #8
  412a70:	and	x4, x4, #0x7f8
  412a74:	ldr	x4, [x0, x4]
  412a78:	add	x8, x8, x4
  412a7c:	stur	x8, [x5, #-16]
  412a80:	ldur	x7, [x3, #-8]
  412a84:	ldr	x2, [x3, #1016]
  412a88:	and	x4, x7, #0x7f8
  412a8c:	add	x2, x9, x2
  412a90:	ldr	x4, [x0, x4]
  412a94:	add	x4, x2, x4
  412a98:	add	x4, x4, x8
  412a9c:	stur	x4, [x3, #-8]
  412aa0:	cmp	x3, x6
  412aa4:	lsr	x4, x4, #8
  412aa8:	and	x4, x4, #0x7f8
  412aac:	ldr	x4, [x0, x4]
  412ab0:	add	x7, x7, x4
  412ab4:	stur	x7, [x5, #-8]
  412ab8:	b.ne	4129c8 <ferror@plt+0xfb88>  // b.any
  412abc:	add	x6, x1, #0x400
  412ac0:	mov	x5, x0
  412ac4:	add	x1, x1, #0x800
  412ac8:	ldr	x8, [x5, #1024]
  412acc:	eor	x2, x2, x2, lsl #21
  412ad0:	ldr	x3, [x5]
  412ad4:	and	x4, x8, #0x7f8
  412ad8:	add	x6, x6, #0x20
  412adc:	add	x5, x5, #0x20
  412ae0:	sub	x3, x3, #0x1
  412ae4:	ldr	x4, [x0, x4]
  412ae8:	sub	x2, x3, x2
  412aec:	add	x4, x2, x4
  412af0:	eor	x2, x2, x2, lsr #5
  412af4:	add	x4, x4, x7
  412af8:	str	x4, [x5, #992]
  412afc:	lsr	x4, x4, #8
  412b00:	and	x4, x4, #0x7f8
  412b04:	ldr	x7, [x0, x4]
  412b08:	add	x7, x8, x7
  412b0c:	stur	x7, [x6, #-32]
  412b10:	ldr	x4, [x5, #1000]
  412b14:	ldur	x8, [x5, #-24]
  412b18:	and	x3, x4, #0x7f8
  412b1c:	add	x2, x2, x8
  412b20:	ldr	x8, [x0, x3]
  412b24:	eor	x3, x2, x2, lsl #12
  412b28:	add	x2, x2, x8
  412b2c:	add	x2, x2, x7
  412b30:	str	x2, [x5, #1000]
  412b34:	lsr	x2, x2, #8
  412b38:	and	x2, x2, #0x7f8
  412b3c:	ldr	x2, [x0, x2]
  412b40:	add	x4, x4, x2
  412b44:	stur	x4, [x6, #-24]
  412b48:	ldr	x7, [x5, #1008]
  412b4c:	ldur	x8, [x5, #-16]
  412b50:	and	x2, x7, #0x7f8
  412b54:	add	x3, x3, x8
  412b58:	ldr	x2, [x0, x2]
  412b5c:	eor	x8, x3, x3, lsr #33
  412b60:	add	x3, x3, x2
  412b64:	add	x3, x3, x4
  412b68:	str	x3, [x5, #1008]
  412b6c:	lsr	x3, x3, #8
  412b70:	and	x3, x3, #0x7f8
  412b74:	ldr	x3, [x0, x3]
  412b78:	add	x7, x7, x3
  412b7c:	stur	x7, [x6, #-16]
  412b80:	ldr	x4, [x5, #1016]
  412b84:	ldur	x2, [x5, #-8]
  412b88:	and	x3, x4, #0x7f8
  412b8c:	add	x2, x8, x2
  412b90:	ldr	x3, [x0, x3]
  412b94:	add	x3, x2, x3
  412b98:	add	x3, x3, x7
  412b9c:	str	x3, [x5, #1016]
  412ba0:	lsr	x3, x3, #8
  412ba4:	and	x3, x3, #0x7f8
  412ba8:	ldr	x7, [x0, x3]
  412bac:	add	x7, x4, x7
  412bb0:	stur	x7, [x6, #-8]
  412bb4:	cmp	x6, x1
  412bb8:	b.ne	412ac8 <ferror@plt+0xfc88>  // b.any
  412bbc:	str	x2, [x0, #2048]
  412bc0:	str	x7, [x0, #2056]
  412bc4:	ret
  412bc8:	mov	x3, #0xc0ab                	// #49323
  412bcc:	mov	x14, #0x89ed                	// #35309
  412bd0:	mov	x1, #0x9315                	// #37653
  412bd4:	mov	x2, #0xe0ce                	// #57550
  412bd8:	mov	x7, #0x5524                	// #21796
  412bdc:	mov	x6, #0x12a0                	// #4768
  412be0:	mov	x10, #0xc862                	// #51298
  412be4:	mov	x9, #0x4b7c                	// #19324
  412be8:	movk	x3, #0x6c44, lsl #16
  412bec:	movk	x14, #0xcbfc, lsl #16
  412bf0:	movk	x1, #0xa5a0, lsl #16
  412bf4:	movk	x2, #0x8355, lsl #16
  412bf8:	movk	x7, #0x4a59, lsl #16
  412bfc:	movk	x6, #0x3d47, lsl #16
  412c00:	movk	x10, #0xc73a, lsl #16
  412c04:	movk	x9, #0xa288, lsl #16
  412c08:	movk	x3, #0x704f, lsl #32
  412c0c:	movk	x14, #0x5bf2, lsl #32
  412c10:	movk	x1, #0x4a0f, lsl #32
  412c14:	movk	x2, #0x53db, lsl #32
  412c18:	movk	x7, #0x2e82, lsl #32
  412c1c:	movk	x6, #0xa505, lsl #32
  412c20:	movk	x10, #0xb322, lsl #32
  412c24:	movk	x9, #0x4677, lsl #32
  412c28:	mov	x5, x0
  412c2c:	add	x8, x0, #0x800
  412c30:	mov	x4, x0
  412c34:	movk	x3, #0x98f5, lsl #48
  412c38:	movk	x14, #0xae98, lsl #48
  412c3c:	movk	x1, #0x48fe, lsl #48
  412c40:	movk	x2, #0x82f0, lsl #48
  412c44:	movk	x7, #0xb29b, lsl #48
  412c48:	movk	x6, #0x8c0e, lsl #48
  412c4c:	movk	x10, #0xb9f8, lsl #48
  412c50:	movk	x9, #0x647c, lsl #48
  412c54:	nop
  412c58:	ldr	x12, [x4, #32]
  412c5c:	ldr	x13, [x4]
  412c60:	add	x2, x2, x12
  412c64:	ldr	x11, [x4, #56]
  412c68:	sub	x13, x13, x2
  412c6c:	add	x9, x13, x9
  412c70:	ldp	x12, x13, [x4, #8]
  412c74:	add	x3, x3, x11
  412c78:	ldr	x11, [x4, #40]
  412c7c:	add	x1, x1, x11
  412c80:	ldr	x11, [x4, #48]
  412c84:	eor	x1, x1, x3, lsr #9
  412c88:	sub	x12, x12, x1
  412c8c:	add	x3, x3, x9
  412c90:	add	x10, x12, x10
  412c94:	add	x11, x14, x11
  412c98:	ldr	x12, [x4, #24]
  412c9c:	eor	x11, x11, x9, lsl #9
  412ca0:	eor	x3, x3, x10, lsr #23
  412ca4:	sub	x13, x13, x11
  412ca8:	add	x6, x13, x6
  412cac:	sub	x12, x12, x3
  412cb0:	add	x7, x12, x7
  412cb4:	add	x9, x9, x10
  412cb8:	eor	x9, x9, x6, lsl #15
  412cbc:	add	x10, x10, x6
  412cc0:	eor	x10, x10, x7, lsr #14
  412cc4:	sub	x2, x2, x9
  412cc8:	sub	x1, x1, x10
  412ccc:	add	x6, x6, x7
  412cd0:	eor	x6, x6, x2, lsl #20
  412cd4:	add	x7, x7, x2
  412cd8:	eor	x7, x7, x1, lsr #17
  412cdc:	sub	x11, x11, x6
  412ce0:	sub	x3, x3, x7
  412ce4:	add	x2, x2, x1
  412ce8:	eor	x2, x2, x11, lsl #14
  412cec:	add	x1, x1, x11
  412cf0:	add	x14, x11, x3
  412cf4:	stp	x9, x10, [x4]
  412cf8:	stp	x6, x7, [x4, #16]
  412cfc:	stp	x2, x1, [x4, #32]
  412d00:	stp	x14, x3, [x4, #48]
  412d04:	add	x4, x4, #0x40
  412d08:	cmp	x8, x4
  412d0c:	b.ne	412c58 <ferror@plt+0xfe18>  // b.any
  412d10:	ldp	x12, x13, [x5]
  412d14:	ldr	x11, [x5, #32]
  412d18:	ldr	x4, [x5, #56]
  412d1c:	add	x2, x2, x11
  412d20:	sub	x12, x12, x2
  412d24:	add	x3, x3, x4
  412d28:	add	x9, x12, x9
  412d2c:	ldr	x4, [x5, #40]
  412d30:	ldp	x12, x11, [x5, #16]
  412d34:	add	x1, x1, x4
  412d38:	ldr	x4, [x5, #48]
  412d3c:	eor	x1, x1, x3, lsr #9
  412d40:	sub	x13, x13, x1
  412d44:	add	x3, x3, x9
  412d48:	add	x10, x13, x10
  412d4c:	add	x4, x14, x4
  412d50:	eor	x4, x4, x9, lsl #9
  412d54:	add	x9, x9, x10
  412d58:	eor	x3, x3, x10, lsr #23
  412d5c:	sub	x12, x12, x4
  412d60:	add	x6, x12, x6
  412d64:	sub	x11, x11, x3
  412d68:	add	x7, x11, x7
  412d6c:	add	x10, x10, x6
  412d70:	eor	x9, x9, x6, lsl #15
  412d74:	add	x6, x6, x7
  412d78:	eor	x10, x10, x7, lsr #14
  412d7c:	sub	x2, x2, x9
  412d80:	sub	x1, x1, x10
  412d84:	add	x7, x7, x2
  412d88:	eor	x6, x6, x2, lsl #20
  412d8c:	add	x2, x2, x1
  412d90:	eor	x7, x7, x1, lsr #17
  412d94:	sub	x4, x4, x6
  412d98:	sub	x3, x3, x7
  412d9c:	add	x1, x1, x4
  412da0:	eor	x2, x2, x4, lsl #14
  412da4:	add	x14, x4, x3
  412da8:	stp	x9, x10, [x5]
  412dac:	stp	x6, x7, [x5, #16]
  412db0:	stp	x2, x1, [x5, #32]
  412db4:	stp	x14, x3, [x5, #48]
  412db8:	add	x5, x5, #0x40
  412dbc:	cmp	x5, x8
  412dc0:	b.ne	412d10 <ferror@plt+0xfed0>  // b.any
  412dc4:	add	x1, x0, #0x800
  412dc8:	stp	xzr, xzr, [x1]
  412dcc:	str	xzr, [x0, #2064]
  412dd0:	ret
  412dd4:	nop
  412dd8:	stp	x29, x30, [sp, #-48]!
  412ddc:	add	x1, x0, #0x18
  412de0:	mov	x29, sp
  412de4:	stp	x19, x20, [sp, #16]
  412de8:	mov	x19, x0
  412dec:	ldp	x20, x0, [x1, #16]
  412df0:	stp	x21, x22, [sp, #32]
  412df4:	subs	x22, x0, x20
  412df8:	sub	x22, x22, #0x1
  412dfc:	b.eq	412ec8 <ferror@plt+0x10088>  // b.none
  412e00:	ldr	x2, [x1, #48]
  412e04:	ldr	x3, [x1, #8]
  412e08:	add	x0, x0, x2
  412e0c:	ldr	x4, [x1, #32]
  412e10:	bic	x2, x0, x2
  412e14:	str	x2, [x1, #24]
  412e18:	sub	x0, x2, x3
  412e1c:	sub	x3, x4, x3
  412e20:	cmp	x0, x3
  412e24:	b.ls	412e30 <ferror@plt+0xfff0>  // b.plast
  412e28:	mov	x2, x4
  412e2c:	str	x4, [x1, #24]
  412e30:	ldr	x0, [x19, #144]
  412e34:	str	x2, [x1, #16]
  412e38:	ldr	x1, [x19, #136]
  412e3c:	add	x21, x19, #0x70
  412e40:	sub	x0, x0, x1
  412e44:	cmp	x0, #0x7
  412e48:	b.ls	412ea0 <ferror@plt+0x10060>  // b.plast
  412e4c:	str	x20, [x1]
  412e50:	add	x20, x19, #0xc8
  412e54:	ldr	x1, [x21, #24]
  412e58:	ldr	x0, [x20, #32]
  412e5c:	add	x1, x1, #0x8
  412e60:	str	x1, [x21, #24]
  412e64:	ldr	x1, [x20, #24]
  412e68:	sub	x0, x0, x1
  412e6c:	cmp	x0, #0x7
  412e70:	b.ls	412eb4 <ferror@plt+0x10074>  // b.plast
  412e74:	str	x22, [x1]
  412e78:	ldr	x1, [x20, #24]
  412e7c:	ldr	x0, [x19]
  412e80:	add	x1, x1, #0x8
  412e84:	ldp	x21, x22, [sp, #32]
  412e88:	str	x1, [x20, #24]
  412e8c:	add	x0, x0, #0x1
  412e90:	str	x0, [x19]
  412e94:	ldp	x19, x20, [sp, #16]
  412e98:	ldp	x29, x30, [sp], #48
  412e9c:	ret
  412ea0:	mov	x1, #0x8                   	// #8
  412ea4:	mov	x0, x21
  412ea8:	bl	415700 <_obstack_newchunk@@Base>
  412eac:	ldr	x1, [x21, #24]
  412eb0:	b	412e4c <ferror@plt+0x1000c>
  412eb4:	mov	x1, #0x8                   	// #8
  412eb8:	mov	x0, x20
  412ebc:	bl	415700 <_obstack_newchunk@@Base>
  412ec0:	ldr	x1, [x20, #24]
  412ec4:	b	412e74 <ferror@plt+0x10034>
  412ec8:	ldrb	w2, [x1, #80]
  412ecc:	orr	w2, w2, #0x2
  412ed0:	strb	w2, [x1, #80]
  412ed4:	b	412e00 <ferror@plt+0xffc0>
  412ed8:	stp	x29, x30, [sp, #-48]!
  412edc:	mov	x2, #0x0                   	// #0
  412ee0:	mov	x1, #0x0                   	// #0
  412ee4:	mov	x29, sp
  412ee8:	stp	x19, x20, [sp, #16]
  412eec:	mov	x19, x0
  412ef0:	adrp	x20, 402000 <mbrtowc@plt-0x710>
  412ef4:	str	x21, [sp, #32]
  412ef8:	add	x20, x20, #0x8e0
  412efc:	str	xzr, [x19]
  412f00:	adrp	x21, 402000 <mbrtowc@plt-0x710>
  412f04:	stp	xzr, xzr, [x19, #8]
  412f08:	add	x21, x21, #0xba0
  412f0c:	mov	x3, x20
  412f10:	mov	x4, x21
  412f14:	add	x0, x0, #0x18
  412f18:	bl	415528 <_obstack_begin@@Base>
  412f1c:	mov	x4, x21
  412f20:	mov	x3, x20
  412f24:	add	x0, x19, #0x70
  412f28:	mov	x2, #0x0                   	// #0
  412f2c:	mov	x1, #0x0                   	// #0
  412f30:	bl	415528 <_obstack_begin@@Base>
  412f34:	mov	x4, x21
  412f38:	mov	x3, x20
  412f3c:	add	x0, x19, #0xc8
  412f40:	mov	x2, #0x0                   	// #0
  412f44:	ldp	x19, x20, [sp, #16]
  412f48:	mov	x1, #0x0                   	// #0
  412f4c:	ldr	x21, [sp, #32]
  412f50:	ldp	x29, x30, [sp], #48
  412f54:	b	415528 <_obstack_begin@@Base>
  412f58:	stp	x29, x30, [sp, #-32]!
  412f5c:	mov	x1, #0x0                   	// #0
  412f60:	mov	x29, sp
  412f64:	str	x19, [sp, #16]
  412f68:	mov	x19, x0
  412f6c:	add	x0, x0, #0x18
  412f70:	bl	415888 <_obstack_free@@Base>
  412f74:	add	x0, x19, #0x70
  412f78:	mov	x1, #0x0                   	// #0
  412f7c:	bl	415888 <_obstack_free@@Base>
  412f80:	add	x0, x19, #0xc8
  412f84:	mov	x1, #0x0                   	// #0
  412f88:	ldr	x19, [sp, #16]
  412f8c:	ldp	x29, x30, [sp], #32
  412f90:	b	415888 <_obstack_free@@Base>
  412f94:	nop
  412f98:	stp	x29, x30, [sp, #-48]!
  412f9c:	mov	x29, sp
  412fa0:	stp	x19, x20, [sp, #16]
  412fa4:	add	x20, x1, #0x18
  412fa8:	stp	x21, x22, [sp, #32]
  412fac:	mov	x22, x1
  412fb0:	mov	x21, x0
  412fb4:	nop
  412fb8:	mov	x0, x21
  412fbc:	bl	402970 <fgetc@plt>
  412fc0:	mov	w19, w0
  412fc4:	cmn	w0, #0x1
  412fc8:	b.eq	413008 <ferror@plt+0x101c8>  // b.none
  412fcc:	ldp	x2, x3, [x20, #24]
  412fd0:	add	x4, x2, #0x1
  412fd4:	cmp	x3, x2
  412fd8:	b.eq	4130f8 <ferror@plt+0x102b8>  // b.none
  412fdc:	str	x4, [x20, #24]
  412fe0:	strb	w0, [x2]
  412fe4:	cbnz	w0, 412fb8 <ferror@plt+0x10178>
  412fe8:	mov	x0, x22
  412fec:	bl	412dd8 <ferror@plt+0xff98>
  412ff0:	mov	x0, x21
  412ff4:	bl	402970 <fgetc@plt>
  412ff8:	mov	w19, w0
  412ffc:	cmn	w0, #0x1
  413000:	b.ne	412fcc <ferror@plt+0x1018c>  // b.any
  413004:	nop
  413008:	ldp	x0, x1, [x20, #16]
  41300c:	cmp	x1, x0
  413010:	b.eq	413034 <ferror@plt+0x101f4>  // b.none
  413014:	ldr	x0, [x20, #32]
  413018:	cmp	x1, x0
  41301c:	b.eq	41318c <ferror@plt+0x1034c>  // b.none
  413020:	add	x0, x1, #0x1
  413024:	str	x0, [x20, #24]
  413028:	strb	wzr, [x1]
  41302c:	mov	x0, x22
  413030:	bl	412dd8 <ferror@plt+0xff98>
  413034:	add	x19, x22, #0x70
  413038:	ldp	x1, x0, [x19, #24]
  41303c:	sub	x0, x0, x1
  413040:	cmp	x0, #0x7
  413044:	b.ls	413158 <ferror@plt+0x10318>  // b.plast
  413048:	str	xzr, [x1]
  41304c:	ldp	x3, x0, [x19, #16]
  413050:	add	x0, x0, #0x8
  413054:	cmp	x0, x3
  413058:	b.eq	41317c <ferror@plt+0x1033c>  // b.none
  41305c:	ldr	x1, [x19, #48]
  413060:	ldr	x2, [x19, #8]
  413064:	add	x0, x0, x1
  413068:	ldr	x4, [x19, #32]
  41306c:	bic	x1, x0, x1
  413070:	str	x1, [x19, #24]
  413074:	sub	x0, x1, x2
  413078:	sub	x2, x4, x2
  41307c:	cmp	x0, x2
  413080:	b.hi	413124 <ferror@plt+0x102e4>  // b.pmore
  413084:	add	x0, x22, #0xc8
  413088:	str	x1, [x19, #16]
  41308c:	ldr	x4, [x0, #16]
  413090:	str	x3, [x22, #8]
  413094:	ldr	x3, [x0, #24]
  413098:	cmp	x3, x4
  41309c:	b.eq	413148 <ferror@plt+0x10308>  // b.none
  4130a0:	ldr	x1, [x0, #48]
  4130a4:	ldr	x2, [x0, #8]
  4130a8:	add	x3, x3, x1
  4130ac:	ldr	x5, [x0, #32]
  4130b0:	bic	x1, x3, x1
  4130b4:	str	x1, [x0, #24]
  4130b8:	sub	x3, x1, x2
  4130bc:	sub	x2, x5, x2
  4130c0:	cmp	x3, x2
  4130c4:	b.ls	4130d0 <ferror@plt+0x10290>  // b.plast
  4130c8:	mov	x1, x5
  4130cc:	str	x5, [x0, #24]
  4130d0:	str	x1, [x0, #16]
  4130d4:	mov	x0, x21
  4130d8:	str	x4, [x22, #16]
  4130dc:	bl	402e40 <ferror@plt>
  4130e0:	cmp	w0, #0x0
  4130e4:	cset	w0, eq  // eq = none
  4130e8:	ldp	x19, x20, [sp, #16]
  4130ec:	ldp	x21, x22, [sp, #32]
  4130f0:	ldp	x29, x30, [sp], #48
  4130f4:	ret
  4130f8:	mov	x0, x20
  4130fc:	mov	x1, #0x1                   	// #1
  413100:	bl	415700 <_obstack_newchunk@@Base>
  413104:	ldr	x0, [x20, #24]
  413108:	add	x1, x0, #0x1
  41310c:	str	x1, [x20, #24]
  413110:	strb	w19, [x0]
  413114:	cbnz	w19, 412fb8 <ferror@plt+0x10178>
  413118:	mov	x0, x22
  41311c:	bl	412dd8 <ferror@plt+0xff98>
  413120:	b	412ff0 <ferror@plt+0x101b0>
  413124:	add	x0, x22, #0xc8
  413128:	mov	x1, x4
  41312c:	str	x1, [x19, #16]
  413130:	str	x4, [x19, #24]
  413134:	ldr	x4, [x0, #16]
  413138:	str	x3, [x22, #8]
  41313c:	ldr	x3, [x0, #24]
  413140:	cmp	x3, x4
  413144:	b.ne	4130a0 <ferror@plt+0x10260>  // b.any
  413148:	ldrb	w1, [x0, #80]
  41314c:	orr	w1, w1, #0x2
  413150:	strb	w1, [x0, #80]
  413154:	b	4130a0 <ferror@plt+0x10260>
  413158:	mov	x0, x19
  41315c:	mov	x1, #0x8                   	// #8
  413160:	bl	415700 <_obstack_newchunk@@Base>
  413164:	ldr	x1, [x19, #24]
  413168:	str	xzr, [x1]
  41316c:	ldp	x3, x0, [x19, #16]
  413170:	add	x0, x0, #0x8
  413174:	cmp	x0, x3
  413178:	b.ne	41305c <ferror@plt+0x1021c>  // b.any
  41317c:	ldrb	w1, [x19, #80]
  413180:	orr	w1, w1, #0x2
  413184:	strb	w1, [x19, #80]
  413188:	b	41305c <ferror@plt+0x1021c>
  41318c:	mov	x1, #0x1                   	// #1
  413190:	mov	x0, x20
  413194:	bl	415700 <_obstack_newchunk@@Base>
  413198:	ldr	x1, [x20, #24]
  41319c:	b	413020 <ferror@plt+0x101e0>
  4131a0:	stp	x29, x30, [sp, #-16]!
  4131a4:	mov	x29, sp
  4131a8:	bl	402cf0 <mkstemp@plt>
  4131ac:	ldp	x29, x30, [sp], #16
  4131b0:	b	413708 <ferror@plt+0x108c8>
  4131b4:	nop
  4131b8:	stp	x29, x30, [sp, #-32]!
  4131bc:	mov	x29, sp
  4131c0:	str	x19, [sp, #16]
  4131c4:	mov	w19, w1
  4131c8:	bl	402a90 <mkostemp@plt>
  4131cc:	mov	w1, w19
  4131d0:	ldr	x19, [sp, #16]
  4131d4:	ldp	x29, x30, [sp], #32
  4131d8:	b	415a78 <_obstack_memory_used@@Base+0x140>
  4131dc:	nop
  4131e0:	ldrb	w6, [x0]
  4131e4:	mov	x4, x0
  4131e8:	ldrb	w5, [x1]
  4131ec:	cmp	w6, #0x2d
  4131f0:	b.eq	413218 <ferror@plt+0x103d8>  // b.none
  4131f4:	cmp	w5, #0x2d
  4131f8:	b.eq	413260 <ferror@plt+0x10420>  // b.none
  4131fc:	nop
  413200:	cmp	w6, #0x30
  413204:	b.eq	413210 <ferror@plt+0x103d0>  // b.none
  413208:	cmp	w3, w6
  41320c:	b.ne	4132ac <ferror@plt+0x1046c>  // b.any
  413210:	ldrb	w6, [x4, #1]!
  413214:	b	413200 <ferror@plt+0x103c0>
  413218:	ldrb	w0, [x4, #1]!
  41321c:	cmp	w0, #0x30
  413220:	b.eq	413218 <ferror@plt+0x103d8>  // b.none
  413224:	cmp	w3, w0
  413228:	b.eq	413218 <ferror@plt+0x103d8>  // b.none
  41322c:	cmp	w5, #0x2d
  413230:	b.eq	413304 <ferror@plt+0x104c4>  // b.none
  413234:	cmp	w2, w0
  413238:	b.eq	41335c <ferror@plt+0x1051c>  // b.none
  41323c:	sub	w0, w0, #0x30
  413240:	cmp	w0, #0x9
  413244:	b.ls	4136d8 <ferror@plt+0x10898>  // b.plast
  413248:	cmp	w5, #0x30
  41324c:	b.eq	413258 <ferror@plt+0x10418>  // b.none
  413250:	cmp	w3, w5
  413254:	b.ne	413394 <ferror@plt+0x10554>  // b.any
  413258:	ldrb	w5, [x1, #1]!
  41325c:	b	413248 <ferror@plt+0x10408>
  413260:	ldrb	w0, [x1, #1]!
  413264:	cmp	w0, #0x30
  413268:	b.eq	413260 <ferror@plt+0x10420>  // b.none
  41326c:	cmp	w3, w0
  413270:	b.eq	413260 <ferror@plt+0x10420>  // b.none
  413274:	cmp	w2, w0
  413278:	b.eq	413378 <ferror@plt+0x10538>  // b.none
  41327c:	sub	w1, w0, #0x30
  413280:	mov	w0, #0x1                   	// #1
  413284:	cmp	w1, #0x9
  413288:	b.ls	4133a8 <ferror@plt+0x10568>  // b.plast
  41328c:	nop
  413290:	cmp	w6, #0x30
  413294:	b.eq	4132a0 <ferror@plt+0x10460>  // b.none
  413298:	cmp	w3, w6
  41329c:	b.ne	4134b8 <ferror@plt+0x10678>  // b.any
  4132a0:	ldrb	w6, [x4, #1]!
  4132a4:	b	413290 <ferror@plt+0x10450>
  4132a8:	ldrb	w5, [x1, #1]!
  4132ac:	cmp	w5, #0x30
  4132b0:	b.eq	4132a8 <ferror@plt+0x10468>  // b.none
  4132b4:	cmp	w3, w5
  4132b8:	b.eq	4132a8 <ferror@plt+0x10468>  // b.none
  4132bc:	nop
  4132c0:	cmp	w6, w5
  4132c4:	b.ne	4133c8 <ferror@plt+0x10588>  // b.any
  4132c8:	sub	w0, w6, #0x30
  4132cc:	cmp	w0, #0x9
  4132d0:	b.hi	4133c8 <ferror@plt+0x10588>  // b.pmore
  4132d4:	nop
  4132d8:	ldrb	w6, [x4, #1]!
  4132dc:	cmp	w3, w6
  4132e0:	b.eq	4132d8 <ferror@plt+0x10498>  // b.none
  4132e4:	nop
  4132e8:	ldrb	w5, [x1, #1]!
  4132ec:	cmp	w3, w5
  4132f0:	b.ne	4132c0 <ferror@plt+0x10480>  // b.any
  4132f4:	ldrb	w5, [x1, #1]!
  4132f8:	cmp	w3, w5
  4132fc:	b.eq	4132e8 <ferror@plt+0x104a8>  // b.none
  413300:	b	4132c0 <ferror@plt+0x10480>
  413304:	ldrb	w6, [x1, #1]!
  413308:	cmp	w6, #0x30
  41330c:	b.eq	413304 <ferror@plt+0x104c4>  // b.none
  413310:	cmp	w3, w6
  413314:	b.eq	413304 <ferror@plt+0x104c4>  // b.none
  413318:	cmp	w0, w6
  41331c:	b.ne	41354c <ferror@plt+0x1070c>  // b.any
  413320:	sub	w5, w0, #0x30
  413324:	cmp	w5, #0x9
  413328:	b.hi	41354c <ferror@plt+0x1070c>  // b.pmore
  41332c:	nop
  413330:	ldrb	w0, [x4, #1]!
  413334:	cmp	w3, w0
  413338:	b.eq	413330 <ferror@plt+0x104f0>  // b.none
  41333c:	nop
  413340:	ldrb	w6, [x1, #1]!
  413344:	cmp	w3, w6
  413348:	b.ne	413318 <ferror@plt+0x104d8>  // b.any
  41334c:	ldrb	w6, [x1, #1]!
  413350:	cmp	w3, w6
  413354:	b.eq	413340 <ferror@plt+0x10500>  // b.none
  413358:	b	413318 <ferror@plt+0x104d8>
  41335c:	ldrb	w0, [x4, #1]!
  413360:	cmp	w0, #0x30
  413364:	b.ne	41323c <ferror@plt+0x103fc>  // b.any
  413368:	ldrb	w0, [x4, #1]!
  41336c:	cmp	w0, #0x30
  413370:	b.eq	41335c <ferror@plt+0x1051c>  // b.none
  413374:	b	41323c <ferror@plt+0x103fc>
  413378:	ldrb	w0, [x1, #1]!
  41337c:	cmp	w0, #0x30
  413380:	b.ne	41327c <ferror@plt+0x1043c>  // b.any
  413384:	ldrb	w0, [x1, #1]!
  413388:	cmp	w0, #0x30
  41338c:	b.eq	413378 <ferror@plt+0x10538>  // b.none
  413390:	b	41327c <ferror@plt+0x1043c>
  413394:	cmp	w2, w5
  413398:	b.eq	4133ac <ferror@plt+0x1056c>  // b.none
  41339c:	sub	w5, w5, #0x30
  4133a0:	cmp	w5, #0x9
  4133a4:	csetm	w0, ls  // ls = plast
  4133a8:	ret
  4133ac:	ldrb	w5, [x1, #1]!
  4133b0:	cmp	w5, #0x30
  4133b4:	b.ne	41339c <ferror@plt+0x1055c>  // b.any
  4133b8:	ldrb	w5, [x1, #1]!
  4133bc:	cmp	w5, #0x30
  4133c0:	b.eq	4133ac <ferror@plt+0x1056c>  // b.none
  4133c4:	b	41339c <ferror@plt+0x1055c>
  4133c8:	cmp	w2, w6
  4133cc:	b.eq	4134ec <ferror@plt+0x106ac>  // b.none
  4133d0:	cmp	w2, w5
  4133d4:	sub	w7, w6, #0x30
  4133d8:	b.eq	413538 <ferror@plt+0x106f8>  // b.none
  4133dc:	sub	w0, w6, w5
  4133e0:	cmp	w7, #0x9
  4133e4:	sub	w5, w5, #0x30
  4133e8:	b.hi	413590 <ferror@plt+0x10750>  // b.pmore
  4133ec:	mov	x6, #0x0                   	// #0
  4133f0:	ldrb	w2, [x4, #1]!
  4133f4:	cmp	w3, w2
  4133f8:	b.eq	4133f0 <ferror@plt+0x105b0>  // b.none
  4133fc:	sub	w2, w2, #0x30
  413400:	add	x6, x6, #0x1
  413404:	cmp	w2, #0x9
  413408:	b.ls	4133f0 <ferror@plt+0x105b0>  // b.plast
  41340c:	cmp	w5, #0x9
  413410:	b.hi	4135a4 <ferror@plt+0x10764>  // b.pmore
  413414:	mov	x4, #0x0                   	// #0
  413418:	ldrb	w2, [x1, #1]!
  41341c:	cmp	w3, w2
  413420:	b.eq	413418 <ferror@plt+0x105d8>  // b.none
  413424:	sub	w2, w2, #0x30
  413428:	add	x4, x4, #0x1
  41342c:	cmp	w2, #0x9
  413430:	b.ls	413418 <ferror@plt+0x105d8>  // b.plast
  413434:	cmp	x4, x6
  413438:	b.eq	4134ac <ferror@plt+0x1066c>  // b.none
  41343c:	mov	w0, #0xffffffff            	// #-1
  413440:	cneg	w0, w0, ls  // ls = plast
  413444:	ret
  413448:	cmp	w5, #0x9
  41344c:	b.hi	4135c8 <ferror@plt+0x10788>  // b.pmore
  413450:	sub	w0, w2, w0
  413454:	sub	w6, w2, #0x30
  413458:	mov	x5, #0x0                   	// #0
  41345c:	nop
  413460:	ldrb	w2, [x4, #1]!
  413464:	cmp	w3, w2
  413468:	b.eq	413460 <ferror@plt+0x10620>  // b.none
  41346c:	sub	w2, w2, #0x30
  413470:	add	x5, x5, #0x1
  413474:	cmp	w2, #0x9
  413478:	b.ls	413460 <ferror@plt+0x10620>  // b.plast
  41347c:	cmp	w6, #0x9
  413480:	b.hi	4135b0 <ferror@plt+0x10770>  // b.pmore
  413484:	mov	x4, #0x0                   	// #0
  413488:	ldrb	w2, [x1, #1]!
  41348c:	cmp	w3, w2
  413490:	b.eq	413488 <ferror@plt+0x10648>  // b.none
  413494:	sub	w2, w2, #0x30
  413498:	add	x4, x4, #0x1
  41349c:	cmp	w2, #0x9
  4134a0:	b.ls	413488 <ferror@plt+0x10648>  // b.plast
  4134a4:	cmp	x4, x5
  4134a8:	b.ne	413584 <ferror@plt+0x10744>  // b.any
  4134ac:	cmp	x4, #0x0
  4134b0:	csel	w0, w0, wzr, ne  // ne = any
  4134b4:	ret
  4134b8:	cmp	w2, w6
  4134bc:	b.eq	4134d0 <ferror@plt+0x10690>  // b.none
  4134c0:	sub	w6, w6, #0x30
  4134c4:	cmp	w6, #0x9
  4134c8:	cset	w0, ls  // ls = plast
  4134cc:	ret
  4134d0:	ldrb	w6, [x4, #1]!
  4134d4:	cmp	w6, #0x30
  4134d8:	b.ne	4134c0 <ferror@plt+0x10680>  // b.any
  4134dc:	ldrb	w6, [x4, #1]!
  4134e0:	cmp	w6, #0x30
  4134e4:	b.eq	4134d0 <ferror@plt+0x10690>  // b.none
  4134e8:	b	4134c0 <ferror@plt+0x10680>
  4134ec:	sub	w0, w5, #0x30
  4134f0:	cmp	w0, #0x9
  4134f4:	b.ls	4133d0 <ferror@plt+0x10590>  // b.plast
  4134f8:	cmp	w6, w2, uxtb
  4134fc:	and	w2, w2, #0xff
  413500:	b.eq	41360c <ferror@plt+0x107cc>  // b.none
  413504:	cmp	w2, w5
  413508:	mov	w0, #0x0                   	// #0
  41350c:	b.ne	4133a8 <ferror@plt+0x10568>  // b.any
  413510:	ldrb	w2, [x1, #1]
  413514:	add	x0, x1, #0x1
  413518:	b	413520 <ferror@plt+0x106e0>
  41351c:	ldrb	w2, [x0, #1]!
  413520:	cmp	w2, #0x30
  413524:	b.eq	41351c <ferror@plt+0x106dc>  // b.none
  413528:	sub	w2, w2, #0x30
  41352c:	cmp	w2, #0x9
  413530:	csetm	w0, ls  // ls = plast
  413534:	ret
  413538:	cmp	w7, #0x9
  41353c:	b.hi	4134f8 <ferror@plt+0x106b8>  // b.pmore
  413540:	sub	w0, w6, w2
  413544:	sub	w5, w2, #0x30
  413548:	b	4133ec <ferror@plt+0x105ac>
  41354c:	cmp	w2, w0
  413550:	b.eq	4135bc <ferror@plt+0x1077c>  // b.none
  413554:	cmp	w2, w6
  413558:	sub	w5, w0, #0x30
  41355c:	b.eq	413448 <ferror@plt+0x10608>  // b.none
  413560:	sub	w0, w6, w0
  413564:	cmp	w5, #0x9
  413568:	sub	w6, w6, #0x30
  41356c:	b.ls	413458 <ferror@plt+0x10618>  // b.plast
  413570:	cmp	w6, #0x9
  413574:	mov	x5, #0x0                   	// #0
  413578:	b.ls	413484 <ferror@plt+0x10644>  // b.plast
  41357c:	mov	w0, #0x0                   	// #0
  413580:	ret
  413584:	mov	w0, #0x1                   	// #1
  413588:	cneg	w0, w0, ls  // ls = plast
  41358c:	ret
  413590:	cmp	w5, #0x9
  413594:	mov	x6, #0x0                   	// #0
  413598:	b.ls	413414 <ferror@plt+0x105d4>  // b.plast
  41359c:	mov	w0, #0x0                   	// #0
  4135a0:	b	413580 <ferror@plt+0x10740>
  4135a4:	cmp	x6, #0x0
  4135a8:	cset	w0, ne  // ne = any
  4135ac:	ret
  4135b0:	cmp	x5, #0x0
  4135b4:	csetm	w0, ne  // ne = any
  4135b8:	ret
  4135bc:	sub	w5, w6, #0x30
  4135c0:	cmp	w5, #0x9
  4135c4:	b.ls	413554 <ferror@plt+0x10714>  // b.plast
  4135c8:	cmp	w6, w2, uxtb
  4135cc:	and	w2, w2, #0xff
  4135d0:	b.eq	413674 <ferror@plt+0x10834>  // b.none
  4135d4:	cmp	w2, w0
  4135d8:	add	x4, x4, #0x1
  4135dc:	mov	w0, #0x0                   	// #0
  4135e0:	b.ne	4133a8 <ferror@plt+0x10568>  // b.any
  4135e4:	ldrb	w0, [x4]
  4135e8:	cmp	w0, #0x30
  4135ec:	b.ne	4135fc <ferror@plt+0x107bc>  // b.any
  4135f0:	ldrb	w0, [x4, #1]!
  4135f4:	cmp	w0, #0x30
  4135f8:	b.eq	4135f0 <ferror@plt+0x107b0>  // b.none
  4135fc:	sub	w0, w0, #0x30
  413600:	cmp	w0, #0x9
  413604:	csetm	w0, ls  // ls = plast
  413608:	ret
  41360c:	ldrb	w0, [x4, #1]
  413610:	cmp	w6, w5
  413614:	b.eq	413644 <ferror@plt+0x10804>  // b.none
  413618:	add	x4, x4, #0x1
  41361c:	b	413624 <ferror@plt+0x107e4>
  413620:	ldrb	w0, [x4, #1]!
  413624:	cmp	w0, #0x30
  413628:	b.eq	413620 <ferror@plt+0x107e0>  // b.none
  41362c:	sub	w0, w0, #0x30
  413630:	cmp	w0, #0x9
  413634:	cset	w0, ls  // ls = plast
  413638:	ret
  41363c:	cmp	w3, #0x9
  413640:	b.hi	41357c <ferror@plt+0x1073c>  // b.pmore
  413644:	ldrb	w0, [x4, #1]!
  413648:	ldrb	w2, [x1, #1]!
  41364c:	sub	w3, w0, #0x30
  413650:	cmp	w0, w2
  413654:	b.eq	41363c <ferror@plt+0x107fc>  // b.none
  413658:	cmp	w3, #0x9
  41365c:	sub	w3, w2, #0x30
  413660:	b.hi	4136e0 <ferror@plt+0x108a0>  // b.pmore
  413664:	cmp	w3, #0x9
  413668:	b.hi	413624 <ferror@plt+0x107e4>  // b.pmore
  41366c:	sub	w0, w0, w2
  413670:	ret
  413674:	cmp	w6, w0
  413678:	b.eq	4136a8 <ferror@plt+0x10868>  // b.none
  41367c:	add	x1, x1, #0x1
  413680:	ldrb	w0, [x1]
  413684:	cmp	w0, #0x30
  413688:	b.ne	41362c <ferror@plt+0x107ec>  // b.any
  41368c:	nop
  413690:	ldrb	w0, [x1, #1]!
  413694:	cmp	w0, #0x30
  413698:	b.eq	413690 <ferror@plt+0x10850>  // b.none
  41369c:	b	41362c <ferror@plt+0x107ec>
  4136a0:	cmp	w3, #0x9
  4136a4:	b.hi	41357c <ferror@plt+0x1073c>  // b.pmore
  4136a8:	ldrb	w0, [x1, #1]!
  4136ac:	ldrb	w2, [x4, #1]!
  4136b0:	sub	w3, w0, #0x30
  4136b4:	cmp	w0, w2
  4136b8:	b.eq	4136a0 <ferror@plt+0x10860>  // b.none
  4136bc:	cmp	w3, #0x9
  4136c0:	sub	w3, w2, #0x30
  4136c4:	b.hi	4136f4 <ferror@plt+0x108b4>  // b.pmore
  4136c8:	cmp	w3, #0x9
  4136cc:	b.hi	413680 <ferror@plt+0x10840>  // b.pmore
  4136d0:	sub	w0, w0, w2
  4136d4:	b	413670 <ferror@plt+0x10830>
  4136d8:	mov	w0, #0xffffffff            	// #-1
  4136dc:	ret
  4136e0:	cmp	w3, #0x9
  4136e4:	mov	w0, #0x0                   	// #0
  4136e8:	b.hi	4133a8 <ferror@plt+0x10568>  // b.pmore
  4136ec:	mov	x0, x1
  4136f0:	b	413520 <ferror@plt+0x106e0>
  4136f4:	cmp	w3, #0x9
  4136f8:	b.ls	4135e4 <ferror@plt+0x107a4>  // b.plast
  4136fc:	mov	w0, #0x0                   	// #0
  413700:	b	413580 <ferror@plt+0x10740>
  413704:	nop
  413708:	stp	x29, x30, [sp, #-48]!
  41370c:	cmp	w0, #0x2
  413710:	mov	x29, sp
  413714:	stp	x19, x20, [sp, #16]
  413718:	mov	w19, w0
  41371c:	b.ls	413730 <ferror@plt+0x108f0>  // b.plast
  413720:	mov	w0, w19
  413724:	ldp	x19, x20, [sp, #16]
  413728:	ldp	x29, x30, [sp], #48
  41372c:	ret
  413730:	str	x21, [sp, #32]
  413734:	bl	415e08 <_obstack_memory_used@@Base+0x4d0>
  413738:	mov	w21, w0
  41373c:	bl	402db0 <__errno_location@plt>
  413740:	mov	x20, x0
  413744:	mov	w0, w19
  413748:	mov	w19, w21
  41374c:	ldr	w21, [x20]
  413750:	bl	402a10 <close@plt>
  413754:	str	w21, [x20]
  413758:	mov	w0, w19
  41375c:	ldp	x19, x20, [sp, #16]
  413760:	ldr	x21, [sp, #32]
  413764:	ldp	x29, x30, [sp], #48
  413768:	ret
  41376c:	nop
  413770:	sub	sp, sp, #0x50
  413774:	stp	x29, x30, [sp, #32]
  413778:	add	x29, sp, #0x20
  41377c:	stp	x19, x20, [sp, #48]
  413780:	mov	x19, x5
  413784:	mov	x20, x4
  413788:	str	x21, [sp, #64]
  41378c:	mov	x5, x3
  413790:	mov	x21, x0
  413794:	cbz	x1, 413970 <ferror@plt+0x10b30>
  413798:	mov	x4, x2
  41379c:	mov	x3, x1
  4137a0:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x26c8>
  4137a4:	mov	w1, #0x1                   	// #1
  4137a8:	add	x2, x2, #0xd90
  4137ac:	bl	402b30 <__fprintf_chk@plt>
  4137b0:	mov	w2, #0x5                   	// #5
  4137b4:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x26c8>
  4137b8:	mov	x0, #0x0                   	// #0
  4137bc:	add	x1, x1, #0xda8
  4137c0:	bl	402d20 <dcgettext@plt>
  4137c4:	mov	x3, x0
  4137c8:	mov	w4, #0x7e3                 	// #2019
  4137cc:	mov	w1, #0x1                   	// #1
  4137d0:	mov	x0, x21
  4137d4:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x36c8>
  4137d8:	add	x2, x2, #0xa0
  4137dc:	bl	402b30 <__fprintf_chk@plt>
  4137e0:	mov	w2, #0x5                   	// #5
  4137e4:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x26c8>
  4137e8:	mov	x0, #0x0                   	// #0
  4137ec:	add	x1, x1, #0xdb0
  4137f0:	bl	402d20 <dcgettext@plt>
  4137f4:	mov	x1, x21
  4137f8:	bl	402d30 <fputs_unlocked@plt>
  4137fc:	cmp	x19, #0x5
  413800:	b.eq	41398c <ferror@plt+0x10b4c>  // b.none
  413804:	b.hi	413858 <ferror@plt+0x10a18>  // b.pmore
  413808:	cmp	x19, #0x2
  41380c:	b.eq	4139cc <ferror@plt+0x10b8c>  // b.none
  413810:	b.ls	4138cc <ferror@plt+0x10a8c>  // b.plast
  413814:	cmp	x19, #0x3
  413818:	b.eq	413a4c <ferror@plt+0x10c0c>  // b.none
  41381c:	mov	w2, #0x5                   	// #5
  413820:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x26c8>
  413824:	mov	x0, #0x0                   	// #0
  413828:	add	x1, x1, #0xec8
  41382c:	bl	402d20 <dcgettext@plt>
  413830:	mov	x2, x0
  413834:	ldp	x3, x4, [x20]
  413838:	mov	x0, x21
  41383c:	ldp	x5, x6, [x20, #16]
  413840:	mov	w1, #0x1                   	// #1
  413844:	ldp	x29, x30, [sp, #32]
  413848:	ldp	x19, x20, [sp, #48]
  41384c:	ldr	x21, [sp, #64]
  413850:	add	sp, sp, #0x50
  413854:	b	402b30 <__fprintf_chk@plt>
  413858:	cmp	x19, #0x8
  41385c:	b.eq	413a88 <ferror@plt+0x10c48>  // b.none
  413860:	b.ls	413910 <ferror@plt+0x10ad0>  // b.plast
  413864:	cmp	x19, #0x9
  413868:	b.ne	413a3c <ferror@plt+0x10bfc>  // b.any
  41386c:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x26c8>
  413870:	add	x1, x1, #0xf98
  413874:	mov	w2, #0x5                   	// #5
  413878:	mov	x0, #0x0                   	// #0
  41387c:	bl	402d20 <dcgettext@plt>
  413880:	ldp	x7, x8, [x20, #32]
  413884:	mov	x2, x0
  413888:	ldp	x3, x4, [x20]
  41388c:	mov	x0, x21
  413890:	ldp	x5, x6, [x20, #16]
  413894:	str	x8, [sp]
  413898:	mov	w1, #0x1                   	// #1
  41389c:	ldr	x8, [x20, #48]
  4138a0:	str	x8, [sp, #8]
  4138a4:	ldr	x8, [x20, #56]
  4138a8:	str	x8, [sp, #16]
  4138ac:	ldr	x8, [x20, #64]
  4138b0:	str	x8, [sp, #24]
  4138b4:	bl	402b30 <__fprintf_chk@plt>
  4138b8:	ldp	x29, x30, [sp, #32]
  4138bc:	ldp	x19, x20, [sp, #48]
  4138c0:	ldr	x21, [sp, #64]
  4138c4:	add	sp, sp, #0x50
  4138c8:	ret
  4138cc:	cbz	x19, 41395c <ferror@plt+0x10b1c>
  4138d0:	cmp	x19, #0x1
  4138d4:	b.ne	413a3c <ferror@plt+0x10bfc>  // b.any
  4138d8:	mov	w2, #0x5                   	// #5
  4138dc:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x26c8>
  4138e0:	mov	x0, #0x0                   	// #0
  4138e4:	add	x1, x1, #0xe80
  4138e8:	bl	402d20 <dcgettext@plt>
  4138ec:	mov	x2, x0
  4138f0:	mov	w1, w19
  4138f4:	mov	x0, x21
  4138f8:	ldr	x3, [x20]
  4138fc:	ldp	x29, x30, [sp, #32]
  413900:	ldp	x19, x20, [sp, #48]
  413904:	ldr	x21, [sp, #64]
  413908:	add	sp, sp, #0x50
  41390c:	b	402b30 <__fprintf_chk@plt>
  413910:	cmp	x19, #0x6
  413914:	b.eq	413a04 <ferror@plt+0x10bc4>  // b.none
  413918:	cmp	x19, #0x7
  41391c:	b.ne	413a3c <ferror@plt+0x10bfc>  // b.any
  413920:	mov	w2, #0x5                   	// #5
  413924:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x26c8>
  413928:	mov	x0, #0x0                   	// #0
  41392c:	add	x1, x1, #0xf38
  413930:	bl	402d20 <dcgettext@plt>
  413934:	mov	x2, x0
  413938:	ldp	x7, x8, [x20, #32]
  41393c:	mov	x0, x21
  413940:	ldp	x3, x4, [x20]
  413944:	mov	w1, #0x1                   	// #1
  413948:	ldp	x5, x6, [x20, #16]
  41394c:	str	x8, [sp]
  413950:	ldr	x8, [x20, #48]
  413954:	str	x8, [sp, #8]
  413958:	bl	402b30 <__fprintf_chk@plt>
  41395c:	ldp	x29, x30, [sp, #32]
  413960:	ldp	x19, x20, [sp, #48]
  413964:	ldr	x21, [sp, #64]
  413968:	add	sp, sp, #0x50
  41396c:	ret
  413970:	mov	x4, x3
  413974:	mov	w1, #0x1                   	// #1
  413978:	mov	x3, x2
  41397c:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x26c8>
  413980:	add	x2, x2, #0xda0
  413984:	bl	402b30 <__fprintf_chk@plt>
  413988:	b	4137b0 <ferror@plt+0x10970>
  41398c:	mov	w2, w19
  413990:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x26c8>
  413994:	mov	x0, #0x0                   	// #0
  413998:	add	x1, x1, #0xee8
  41399c:	bl	402d20 <dcgettext@plt>
  4139a0:	mov	x2, x0
  4139a4:	ldp	x3, x4, [x20]
  4139a8:	mov	x0, x21
  4139ac:	ldp	x5, x6, [x20, #16]
  4139b0:	mov	w1, #0x1                   	// #1
  4139b4:	ldp	x29, x30, [sp, #32]
  4139b8:	ldr	x7, [x20, #32]
  4139bc:	ldp	x19, x20, [sp, #48]
  4139c0:	ldr	x21, [sp, #64]
  4139c4:	add	sp, sp, #0x50
  4139c8:	b	402b30 <__fprintf_chk@plt>
  4139cc:	mov	w2, #0x5                   	// #5
  4139d0:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x26c8>
  4139d4:	mov	x0, #0x0                   	// #0
  4139d8:	add	x1, x1, #0xe90
  4139dc:	bl	402d20 <dcgettext@plt>
  4139e0:	mov	x2, x0
  4139e4:	ldp	x3, x4, [x20]
  4139e8:	mov	x0, x21
  4139ec:	ldp	x29, x30, [sp, #32]
  4139f0:	mov	w1, #0x1                   	// #1
  4139f4:	ldp	x19, x20, [sp, #48]
  4139f8:	ldr	x21, [sp, #64]
  4139fc:	add	sp, sp, #0x50
  413a00:	b	402b30 <__fprintf_chk@plt>
  413a04:	mov	w2, #0x5                   	// #5
  413a08:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x26c8>
  413a0c:	mov	x0, #0x0                   	// #0
  413a10:	add	x1, x1, #0xf10
  413a14:	bl	402d20 <dcgettext@plt>
  413a18:	mov	x2, x0
  413a1c:	ldp	x3, x4, [x20]
  413a20:	mov	x0, x21
  413a24:	ldp	x5, x6, [x20, #16]
  413a28:	mov	w1, #0x1                   	// #1
  413a2c:	ldp	x7, x8, [x20, #32]
  413a30:	str	x8, [sp]
  413a34:	bl	402b30 <__fprintf_chk@plt>
  413a38:	b	41395c <ferror@plt+0x10b1c>
  413a3c:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x26c8>
  413a40:	mov	w2, #0x5                   	// #5
  413a44:	add	x1, x1, #0xfd0
  413a48:	b	413878 <ferror@plt+0x10a38>
  413a4c:	mov	w2, #0x5                   	// #5
  413a50:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x26c8>
  413a54:	mov	x0, #0x0                   	// #0
  413a58:	add	x1, x1, #0xea8
  413a5c:	bl	402d20 <dcgettext@plt>
  413a60:	mov	x2, x0
  413a64:	ldp	x3, x4, [x20]
  413a68:	mov	x0, x21
  413a6c:	ldr	x5, [x20, #16]
  413a70:	mov	w1, #0x1                   	// #1
  413a74:	ldp	x29, x30, [sp, #32]
  413a78:	ldp	x19, x20, [sp, #48]
  413a7c:	ldr	x21, [sp, #64]
  413a80:	add	sp, sp, #0x50
  413a84:	b	402b30 <__fprintf_chk@plt>
  413a88:	mov	w2, #0x5                   	// #5
  413a8c:	adrp	x1, 418000 <_obstack_memory_used@@Base+0x26c8>
  413a90:	mov	x0, #0x0                   	// #0
  413a94:	add	x1, x1, #0xf68
  413a98:	bl	402d20 <dcgettext@plt>
  413a9c:	mov	x2, x0
  413aa0:	ldp	x7, x8, [x20, #32]
  413aa4:	mov	x0, x21
  413aa8:	ldp	x3, x4, [x20]
  413aac:	mov	w1, #0x1                   	// #1
  413ab0:	ldp	x5, x6, [x20, #16]
  413ab4:	str	x8, [sp]
  413ab8:	ldr	x8, [x20, #48]
  413abc:	str	x8, [sp, #8]
  413ac0:	ldr	x8, [x20, #56]
  413ac4:	str	x8, [sp, #16]
  413ac8:	bl	402b30 <__fprintf_chk@plt>
  413acc:	b	41395c <ferror@plt+0x10b1c>
  413ad0:	ldr	x5, [x4]
  413ad4:	cbz	x5, 413af0 <ferror@plt+0x10cb0>
  413ad8:	mov	x5, #0x0                   	// #0
  413adc:	nop
  413ae0:	add	x5, x5, #0x1
  413ae4:	ldr	x6, [x4, x5, lsl #3]
  413ae8:	cbnz	x6, 413ae0 <ferror@plt+0x10ca0>
  413aec:	b	413770 <ferror@plt+0x10930>
  413af0:	mov	x5, #0x0                   	// #0
  413af4:	b	413770 <ferror@plt+0x10930>
  413af8:	stp	x29, x30, [sp, #-96]!
  413afc:	mov	x29, sp
  413b00:	ldp	x6, x8, [x4]
  413b04:	ldr	w7, [x4, #24]
  413b08:	add	x5, x6, #0xf
  413b0c:	and	x5, x5, #0xfffffffffffffff8
  413b10:	tbnz	w7, #31, 413bf8 <ferror@plt+0x10db8>
  413b14:	ldr	x4, [x6]
  413b18:	str	x4, [sp, #16]
  413b1c:	cbz	x4, 413c48 <ferror@plt+0x10e08>
  413b20:	add	x4, x5, #0xf
  413b24:	ldr	x5, [x5]
  413b28:	str	x5, [sp, #24]
  413b2c:	and	x4, x4, #0xfffffffffffffff8
  413b30:	cbz	x5, 413c34 <ferror@plt+0x10df4>
  413b34:	add	x5, x4, #0xf
  413b38:	and	x5, x5, #0xfffffffffffffff8
  413b3c:	ldr	x4, [x4]
  413b40:	str	x4, [sp, #32]
  413b44:	cbz	x4, 413be4 <ferror@plt+0x10da4>
  413b48:	add	x6, x5, #0xf
  413b4c:	and	x6, x6, #0xfffffffffffffff8
  413b50:	ldr	x4, [x5]
  413b54:	str	x4, [sp, #40]
  413b58:	cbz	x4, 413c5c <ferror@plt+0x10e1c>
  413b5c:	ldr	x5, [x6]
  413b60:	str	x5, [sp, #48]
  413b64:	add	x4, x6, #0xf
  413b68:	and	x4, x4, #0xfffffffffffffff8
  413b6c:	cbz	x5, 413c70 <ferror@plt+0x10e30>
  413b70:	add	x6, x4, #0xf
  413b74:	and	x6, x6, #0xfffffffffffffff8
  413b78:	ldr	x4, [x4]
  413b7c:	str	x4, [sp, #56]
  413b80:	cbz	x4, 413c78 <ferror@plt+0x10e38>
  413b84:	ldr	x5, [x6]
  413b88:	str	x5, [sp, #64]
  413b8c:	add	x4, x6, #0xf
  413b90:	and	x4, x4, #0xfffffffffffffff8
  413b94:	cbz	x5, 413c80 <ferror@plt+0x10e40>
  413b98:	add	x5, x4, #0xf
  413b9c:	and	x5, x5, #0xfffffffffffffff8
  413ba0:	ldr	x4, [x4]
  413ba4:	str	x4, [sp, #72]
  413ba8:	cbz	x4, 413c88 <ferror@plt+0x10e48>
  413bac:	add	x6, x5, #0xf
  413bb0:	and	x6, x6, #0xfffffffffffffff8
  413bb4:	ldr	x4, [x5]
  413bb8:	str	x4, [sp, #80]
  413bbc:	cbz	x4, 413c90 <ferror@plt+0x10e50>
  413bc0:	ldr	x4, [x6]
  413bc4:	str	x4, [sp, #88]
  413bc8:	cmp	x4, #0x0
  413bcc:	cset	x5, ne  // ne = any
  413bd0:	add	x5, x5, #0x9
  413bd4:	add	x4, sp, #0x10
  413bd8:	bl	413770 <ferror@plt+0x10930>
  413bdc:	ldp	x29, x30, [sp], #96
  413be0:	ret
  413be4:	add	x4, sp, #0x10
  413be8:	mov	x5, #0x2                   	// #2
  413bec:	bl	413770 <ferror@plt+0x10930>
  413bf0:	ldp	x29, x30, [sp], #96
  413bf4:	ret
  413bf8:	add	w4, w7, #0x8
  413bfc:	cmp	w4, #0x0
  413c00:	b.gt	413b14 <ferror@plt+0x10cd4>
  413c04:	ldr	x9, [x8, w7, sxtw]
  413c08:	str	x9, [sp, #16]
  413c0c:	cbz	x9, 413c48 <ferror@plt+0x10e08>
  413c10:	cbz	w4, 413dc0 <ferror@plt+0x10f80>
  413c14:	add	w9, w7, #0x10
  413c18:	cmp	w9, #0x0
  413c1c:	b.le	413c98 <ferror@plt+0x10e58>
  413c20:	mov	x4, x5
  413c24:	mov	x5, x6
  413c28:	ldr	x5, [x5]
  413c2c:	str	x5, [sp, #24]
  413c30:	cbnz	x5, 413b34 <ferror@plt+0x10cf4>
  413c34:	add	x4, sp, #0x10
  413c38:	mov	x5, #0x1                   	// #1
  413c3c:	bl	413770 <ferror@plt+0x10930>
  413c40:	ldp	x29, x30, [sp], #96
  413c44:	ret
  413c48:	add	x4, sp, #0x10
  413c4c:	mov	x5, #0x0                   	// #0
  413c50:	bl	413770 <ferror@plt+0x10930>
  413c54:	ldp	x29, x30, [sp], #96
  413c58:	ret
  413c5c:	add	x4, sp, #0x10
  413c60:	mov	x5, #0x3                   	// #3
  413c64:	bl	413770 <ferror@plt+0x10930>
  413c68:	ldp	x29, x30, [sp], #96
  413c6c:	ret
  413c70:	mov	x5, #0x4                   	// #4
  413c74:	b	413bd4 <ferror@plt+0x10d94>
  413c78:	mov	x5, #0x5                   	// #5
  413c7c:	b	413bd4 <ferror@plt+0x10d94>
  413c80:	mov	x5, #0x6                   	// #6
  413c84:	b	413bd4 <ferror@plt+0x10d94>
  413c88:	mov	x5, #0x7                   	// #7
  413c8c:	b	413bd4 <ferror@plt+0x10d94>
  413c90:	mov	x5, #0x8                   	// #8
  413c94:	b	413bd4 <ferror@plt+0x10d94>
  413c98:	ldr	x4, [x8, w4, sxtw]
  413c9c:	str	x4, [sp, #24]
  413ca0:	cbz	x4, 413c34 <ferror@plt+0x10df4>
  413ca4:	cbz	w9, 413de8 <ferror@plt+0x10fa8>
  413ca8:	add	w10, w7, #0x18
  413cac:	mov	x4, x6
  413cb0:	cmp	w10, #0x0
  413cb4:	b.gt	413b3c <ferror@plt+0x10cfc>
  413cb8:	ldr	x4, [x8, w9, sxtw]
  413cbc:	str	x4, [sp, #32]
  413cc0:	cbz	x4, 413be4 <ferror@plt+0x10da4>
  413cc4:	cbz	w10, 413de0 <ferror@plt+0x10fa0>
  413cc8:	add	w4, w7, #0x20
  413ccc:	cmp	w4, #0x0
  413cd0:	b.le	413ce4 <ferror@plt+0x10ea4>
  413cd4:	add	x4, x6, #0xf
  413cd8:	mov	x5, x6
  413cdc:	and	x6, x4, #0xfffffffffffffff8
  413ce0:	b	413b50 <ferror@plt+0x10d10>
  413ce4:	ldr	x5, [x8, w10, sxtw]
  413ce8:	str	x5, [sp, #40]
  413cec:	cbz	x5, 413c5c <ferror@plt+0x10e1c>
  413cf0:	cbz	w4, 413b5c <ferror@plt+0x10d1c>
  413cf4:	add	w5, w7, #0x28
  413cf8:	cmp	w5, #0x0
  413cfc:	b.gt	413b5c <ferror@plt+0x10d1c>
  413d00:	ldr	x4, [x8, w4, sxtw]
  413d04:	str	x4, [sp, #48]
  413d08:	cbz	x4, 413c70 <ferror@plt+0x10e30>
  413d0c:	cbz	w5, 413dd8 <ferror@plt+0x10f98>
  413d10:	add	w4, w7, #0x30
  413d14:	cmp	w4, #0x0
  413d18:	b.le	413d2c <ferror@plt+0x10eec>
  413d1c:	add	x5, x6, #0xf
  413d20:	mov	x4, x6
  413d24:	and	x6, x5, #0xfffffffffffffff8
  413d28:	b	413b78 <ferror@plt+0x10d38>
  413d2c:	ldr	x5, [x8, w5, sxtw]
  413d30:	str	x5, [sp, #56]
  413d34:	cbz	x5, 413c78 <ferror@plt+0x10e38>
  413d38:	cbz	w4, 413b84 <ferror@plt+0x10d44>
  413d3c:	add	w5, w7, #0x38
  413d40:	cmp	w5, #0x0
  413d44:	b.gt	413b84 <ferror@plt+0x10d44>
  413d48:	ldr	x4, [x8, w4, sxtw]
  413d4c:	str	x4, [sp, #64]
  413d50:	cbz	x4, 413c80 <ferror@plt+0x10e40>
  413d54:	cbz	w5, 413dd0 <ferror@plt+0x10f90>
  413d58:	add	w9, w7, #0x40
  413d5c:	cmp	w9, #0x0
  413d60:	b.le	413d74 <ferror@plt+0x10f34>
  413d64:	add	x5, x6, #0xf
  413d68:	mov	x4, x6
  413d6c:	and	x5, x5, #0xfffffffffffffff8
  413d70:	b	413ba0 <ferror@plt+0x10d60>
  413d74:	ldr	x4, [x8, w5, sxtw]
  413d78:	str	x4, [sp, #72]
  413d7c:	cbz	x4, 413c88 <ferror@plt+0x10e48>
  413d80:	cbz	w9, 413dc8 <ferror@plt+0x10f88>
  413d84:	add	w4, w7, #0x48
  413d88:	cmp	w4, #0x0
  413d8c:	b.le	413da0 <ferror@plt+0x10f60>
  413d90:	add	x4, x6, #0xf
  413d94:	mov	x5, x6
  413d98:	and	x6, x4, #0xfffffffffffffff8
  413d9c:	b	413bb4 <ferror@plt+0x10d74>
  413da0:	ldr	x5, [x8, w9, sxtw]
  413da4:	str	x5, [sp, #80]
  413da8:	cbz	x5, 413c90 <ferror@plt+0x10e50>
  413dac:	cbz	w4, 413bc0 <ferror@plt+0x10d80>
  413db0:	add	x8, x8, w4, sxtw
  413db4:	cmn	w7, #0x4f
  413db8:	csel	x6, x8, x6, lt  // lt = tstop
  413dbc:	b	413bc0 <ferror@plt+0x10d80>
  413dc0:	mov	x5, x6
  413dc4:	b	413b20 <ferror@plt+0x10ce0>
  413dc8:	mov	x5, x6
  413dcc:	b	413bac <ferror@plt+0x10d6c>
  413dd0:	mov	x4, x6
  413dd4:	b	413b98 <ferror@plt+0x10d58>
  413dd8:	mov	x4, x6
  413ddc:	b	413b70 <ferror@plt+0x10d30>
  413de0:	mov	x5, x6
  413de4:	b	413b48 <ferror@plt+0x10d08>
  413de8:	mov	x4, x6
  413dec:	b	413b34 <ferror@plt+0x10cf4>
  413df0:	stp	x29, x30, [sp, #-288]!
  413df4:	mov	w10, #0xffffffe0            	// #-32
  413df8:	mov	w9, #0xffffff80            	// #-128
  413dfc:	mov	x29, sp
  413e00:	add	x11, sp, #0x100
  413e04:	add	x12, sp, #0x120
  413e08:	stp	x12, x12, [sp, #16]
  413e0c:	str	x11, [sp, #32]
  413e10:	stp	w10, w9, [sp, #40]
  413e14:	str	x4, [sp, #48]
  413e18:	str	q0, [sp, #128]
  413e1c:	str	q1, [sp, #144]
  413e20:	str	q2, [sp, #160]
  413e24:	str	q3, [sp, #176]
  413e28:	str	q4, [sp, #192]
  413e2c:	str	q5, [sp, #208]
  413e30:	str	q6, [sp, #224]
  413e34:	str	q7, [sp, #240]
  413e38:	stp	x4, x5, [sp, #256]
  413e3c:	stp	x6, x7, [sp, #272]
  413e40:	cbz	x4, 413f30 <ferror@plt+0x110f0>
  413e44:	str	x5, [sp, #56]
  413e48:	cbz	x5, 413f28 <ferror@plt+0x110e8>
  413e4c:	str	x6, [sp, #64]
  413e50:	mov	x5, #0x2                   	// #2
  413e54:	cbz	x6, 413ec8 <ferror@plt+0x11088>
  413e58:	str	x7, [sp, #72]
  413e5c:	mov	x5, #0x3                   	// #3
  413e60:	cbz	x7, 413ec8 <ferror@plt+0x11088>
  413e64:	ldr	x4, [sp, #288]
  413e68:	str	x4, [sp, #80]
  413e6c:	mov	x5, #0x4                   	// #4
  413e70:	cbz	x4, 413ec8 <ferror@plt+0x11088>
  413e74:	ldr	x5, [sp, #296]
  413e78:	str	x5, [sp, #88]
  413e7c:	add	x4, sp, #0x130
  413e80:	cbz	x5, 413ed8 <ferror@plt+0x11098>
  413e84:	ldr	x5, [x4]
  413e88:	str	x5, [sp, #96]
  413e8c:	add	x4, x4, #0x8
  413e90:	cbz	x5, 413eec <ferror@plt+0x110ac>
  413e94:	ldr	x5, [x4]
  413e98:	str	x5, [sp, #104]
  413e9c:	add	x4, x4, #0x8
  413ea0:	cbz	x5, 413f00 <ferror@plt+0x110c0>
  413ea4:	ldr	x5, [x4]
  413ea8:	str	x5, [sp, #112]
  413eac:	add	x4, x4, #0x8
  413eb0:	cbz	x5, 413f14 <ferror@plt+0x110d4>
  413eb4:	ldr	x4, [x4]
  413eb8:	str	x4, [sp, #120]
  413ebc:	cmp	x4, #0x0
  413ec0:	cset	x5, ne  // ne = any
  413ec4:	add	x5, x5, #0x9
  413ec8:	add	x4, sp, #0x30
  413ecc:	bl	413770 <ferror@plt+0x10930>
  413ed0:	ldp	x29, x30, [sp], #288
  413ed4:	ret
  413ed8:	add	x4, sp, #0x30
  413edc:	mov	x5, #0x5                   	// #5
  413ee0:	bl	413770 <ferror@plt+0x10930>
  413ee4:	ldp	x29, x30, [sp], #288
  413ee8:	ret
  413eec:	add	x4, sp, #0x30
  413ef0:	mov	x5, #0x6                   	// #6
  413ef4:	bl	413770 <ferror@plt+0x10930>
  413ef8:	ldp	x29, x30, [sp], #288
  413efc:	ret
  413f00:	add	x4, sp, #0x30
  413f04:	mov	x5, #0x7                   	// #7
  413f08:	bl	413770 <ferror@plt+0x10930>
  413f0c:	ldp	x29, x30, [sp], #288
  413f10:	ret
  413f14:	add	x4, sp, #0x30
  413f18:	mov	x5, #0x8                   	// #8
  413f1c:	bl	413770 <ferror@plt+0x10930>
  413f20:	ldp	x29, x30, [sp], #288
  413f24:	ret
  413f28:	mov	x5, #0x1                   	// #1
  413f2c:	b	413ec8 <ferror@plt+0x11088>
  413f30:	mov	x5, #0x0                   	// #0
  413f34:	b	413ec8 <ferror@plt+0x11088>
  413f38:	stp	x29, x30, [sp, #-16]!
  413f3c:	mov	w2, #0x5                   	// #5
  413f40:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x36c8>
  413f44:	mov	x29, sp
  413f48:	add	x1, x1, #0x10
  413f4c:	mov	x0, #0x0                   	// #0
  413f50:	bl	402d20 <dcgettext@plt>
  413f54:	mov	x1, x0
  413f58:	adrp	x2, 419000 <_obstack_memory_used@@Base+0x36c8>
  413f5c:	mov	w0, #0x1                   	// #1
  413f60:	add	x2, x2, #0x28
  413f64:	bl	402980 <__printf_chk@plt>
  413f68:	mov	w2, #0x5                   	// #5
  413f6c:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x36c8>
  413f70:	mov	x0, #0x0                   	// #0
  413f74:	add	x1, x1, #0x40
  413f78:	bl	402d20 <dcgettext@plt>
  413f7c:	mov	x1, x0
  413f80:	adrp	x3, 417000 <_obstack_memory_used@@Base+0x16c8>
  413f84:	add	x3, x3, #0x648
  413f88:	adrp	x2, 417000 <_obstack_memory_used@@Base+0x16c8>
  413f8c:	mov	w0, #0x1                   	// #1
  413f90:	add	x2, x2, #0x670
  413f94:	bl	402980 <__printf_chk@plt>
  413f98:	mov	w2, #0x5                   	// #5
  413f9c:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x36c8>
  413fa0:	mov	x0, #0x0                   	// #0
  413fa4:	add	x1, x1, #0x58
  413fa8:	bl	402d20 <dcgettext@plt>
  413fac:	ldp	x29, x30, [sp], #16
  413fb0:	adrp	x1, 42d000 <_obstack_memory_used@@Base+0x176c8>
  413fb4:	ldr	x1, [x1, #1360]
  413fb8:	b	402d30 <fputs_unlocked@plt>
  413fbc:	nop
  413fc0:	stp	x29, x30, [sp, #-32]!
  413fc4:	umulh	x2, x0, x1
  413fc8:	mov	x29, sp
  413fcc:	str	x19, [sp, #16]
  413fd0:	mul	x19, x0, x1
  413fd4:	cmp	x2, #0x0
  413fd8:	cset	x0, ne  // ne = any
  413fdc:	tbnz	x19, #63, 414004 <ferror@plt+0x111c4>
  413fe0:	cbnz	x0, 414004 <ferror@plt+0x111c4>
  413fe4:	mov	x0, x19
  413fe8:	bl	4028e0 <malloc@plt>
  413fec:	cmp	x0, #0x0
  413ff0:	ccmp	x19, #0x0, #0x4, eq  // eq = none
  413ff4:	b.ne	414004 <ferror@plt+0x111c4>  // b.any
  413ff8:	ldr	x19, [sp, #16]
  413ffc:	ldp	x29, x30, [sp], #32
  414000:	ret
  414004:	bl	414320 <ferror@plt+0x114e0>
  414008:	stp	x29, x30, [sp, #-32]!
  41400c:	umulh	x4, x1, x2
  414010:	mov	x29, sp
  414014:	str	x19, [sp, #16]
  414018:	mul	x19, x1, x2
  41401c:	cmp	x4, #0x0
  414020:	cset	x1, ne  // ne = any
  414024:	tbnz	x19, #63, 41406c <ferror@plt+0x1122c>
  414028:	cbnz	x1, 41406c <ferror@plt+0x1122c>
  41402c:	cmp	x19, #0x0
  414030:	ccmp	x0, #0x0, #0x4, eq  // eq = none
  414034:	b.ne	414058 <ferror@plt+0x11218>  // b.any
  414038:	mov	x1, x19
  41403c:	bl	4029e0 <realloc@plt>
  414040:	cmp	x0, #0x0
  414044:	ccmp	x19, #0x0, #0x4, eq  // eq = none
  414048:	b.ne	41406c <ferror@plt+0x1122c>  // b.any
  41404c:	ldr	x19, [sp, #16]
  414050:	ldp	x29, x30, [sp], #32
  414054:	ret
  414058:	bl	402ba0 <free@plt>
  41405c:	mov	x0, #0x0                   	// #0
  414060:	ldr	x19, [sp, #16]
  414064:	ldp	x29, x30, [sp], #32
  414068:	ret
  41406c:	bl	414320 <ferror@plt+0x114e0>
  414070:	stp	x29, x30, [sp, #-32]!
  414074:	mov	x4, x0
  414078:	mov	x29, sp
  41407c:	ldr	x3, [x1]
  414080:	str	x19, [sp, #16]
  414084:	cbz	x0, 4140d4 <ferror@plt+0x11294>
  414088:	mov	x5, #0x5555555555555555    	// #6148914691236517205
  41408c:	movk	x5, #0x5554
  414090:	udiv	x5, x5, x2
  414094:	cmp	x5, x3
  414098:	b.ls	414120 <ferror@plt+0x112e0>  // b.plast
  41409c:	add	x19, x3, #0x1
  4140a0:	add	x19, x19, x3, lsr #1
  4140a4:	str	x19, [x1]
  4140a8:	mul	x19, x2, x19
  4140ac:	cbz	x19, 41410c <ferror@plt+0x112cc>
  4140b0:	mov	x0, x4
  4140b4:	mov	x1, x19
  4140b8:	bl	4029e0 <realloc@plt>
  4140bc:	cmp	x0, #0x0
  4140c0:	ccmp	x19, #0x0, #0x4, eq  // eq = none
  4140c4:	b.ne	414120 <ferror@plt+0x112e0>  // b.any
  4140c8:	ldr	x19, [sp, #16]
  4140cc:	ldp	x29, x30, [sp], #32
  4140d0:	ret
  4140d4:	cbz	x3, 4140f8 <ferror@plt+0x112b8>
  4140d8:	umulh	x0, x3, x2
  4140dc:	mul	x19, x3, x2
  4140e0:	cmp	x0, #0x0
  4140e4:	cset	x0, ne  // ne = any
  4140e8:	tbnz	x19, #63, 414120 <ferror@plt+0x112e0>
  4140ec:	cbnz	x0, 414120 <ferror@plt+0x112e0>
  4140f0:	str	x3, [x1]
  4140f4:	b	4140b0 <ferror@plt+0x11270>
  4140f8:	mov	x3, #0x80                  	// #128
  4140fc:	cmp	x2, x3
  414100:	udiv	x3, x3, x2
  414104:	cinc	x3, x3, hi  // hi = pmore
  414108:	b	4140d8 <ferror@plt+0x11298>
  41410c:	bl	402ba0 <free@plt>
  414110:	mov	x0, #0x0                   	// #0
  414114:	ldr	x19, [sp, #16]
  414118:	ldp	x29, x30, [sp], #32
  41411c:	ret
  414120:	bl	414320 <ferror@plt+0x114e0>
  414124:	nop
  414128:	stp	x29, x30, [sp, #-32]!
  41412c:	mov	x29, sp
  414130:	str	x19, [sp, #16]
  414134:	mov	x19, x0
  414138:	bl	4028e0 <malloc@plt>
  41413c:	cmp	x0, #0x0
  414140:	ccmp	x19, #0x0, #0x4, eq  // eq = none
  414144:	b.ne	414154 <ferror@plt+0x11314>  // b.any
  414148:	ldr	x19, [sp, #16]
  41414c:	ldp	x29, x30, [sp], #32
  414150:	ret
  414154:	bl	414320 <ferror@plt+0x114e0>
  414158:	stp	x29, x30, [sp, #-32]!
  41415c:	mov	x29, sp
  414160:	str	x19, [sp, #16]
  414164:	mov	x19, x0
  414168:	bl	4028e0 <malloc@plt>
  41416c:	cmp	x0, #0x0
  414170:	ccmp	x19, #0x0, #0x4, eq  // eq = none
  414174:	b.ne	414184 <ferror@plt+0x11344>  // b.any
  414178:	ldr	x19, [sp, #16]
  41417c:	ldp	x29, x30, [sp], #32
  414180:	ret
  414184:	bl	414320 <ferror@plt+0x114e0>
  414188:	stp	x29, x30, [sp, #-32]!
  41418c:	cmp	x1, #0x0
  414190:	ccmp	x0, #0x0, #0x4, eq  // eq = none
  414194:	mov	x29, sp
  414198:	b.ne	4141c0 <ferror@plt+0x11380>  // b.any
  41419c:	str	x19, [sp, #16]
  4141a0:	mov	x19, x1
  4141a4:	bl	4029e0 <realloc@plt>
  4141a8:	cmp	x0, #0x0
  4141ac:	ccmp	x19, #0x0, #0x4, eq  // eq = none
  4141b0:	b.ne	4141d0 <ferror@plt+0x11390>  // b.any
  4141b4:	ldr	x19, [sp, #16]
  4141b8:	ldp	x29, x30, [sp], #32
  4141bc:	ret
  4141c0:	bl	402ba0 <free@plt>
  4141c4:	mov	x0, #0x0                   	// #0
  4141c8:	ldp	x29, x30, [sp], #32
  4141cc:	ret
  4141d0:	bl	414320 <ferror@plt+0x114e0>
  4141d4:	nop
  4141d8:	stp	x29, x30, [sp, #-16]!
  4141dc:	mov	x2, x1
  4141e0:	mov	x29, sp
  4141e4:	ldr	x1, [x1]
  4141e8:	cbz	x0, 414218 <ferror@plt+0x113d8>
  4141ec:	mov	x3, #0x5555555555555555    	// #6148914691236517205
  4141f0:	movk	x3, #0x5553
  4141f4:	cmp	x1, x3
  4141f8:	b.hi	41422c <ferror@plt+0x113ec>  // b.pmore
  4141fc:	add	x3, x1, #0x1
  414200:	add	x1, x3, x1, lsr #1
  414204:	str	x1, [x2]
  414208:	bl	4029e0 <realloc@plt>
  41420c:	cbz	x0, 41422c <ferror@plt+0x113ec>
  414210:	ldp	x29, x30, [sp], #16
  414214:	ret
  414218:	cmp	x1, #0x0
  41421c:	cbnz	x1, 414228 <ferror@plt+0x113e8>
  414220:	mov	x1, #0x80                  	// #128
  414224:	b	414204 <ferror@plt+0x113c4>
  414228:	b.ge	414204 <ferror@plt+0x113c4>  // b.tcont
  41422c:	bl	414320 <ferror@plt+0x114e0>
  414230:	stp	x29, x30, [sp, #-32]!
  414234:	mov	x1, #0x1                   	// #1
  414238:	mov	x29, sp
  41423c:	str	x19, [sp, #16]
  414240:	mov	x19, x0
  414244:	bl	4029d0 <calloc@plt>
  414248:	cmp	x0, #0x0
  41424c:	ccmp	x19, #0x0, #0x4, eq  // eq = none
  414250:	b.ne	414260 <ferror@plt+0x11420>  // b.any
  414254:	ldr	x19, [sp, #16]
  414258:	ldp	x29, x30, [sp], #32
  41425c:	ret
  414260:	bl	414320 <ferror@plt+0x114e0>
  414264:	nop
  414268:	umulh	x4, x0, x1
  41426c:	stp	x29, x30, [sp, #-16]!
  414270:	mul	x2, x0, x1
  414274:	cmp	x4, #0x0
  414278:	mov	x29, sp
  41427c:	cset	x3, ne  // ne = any
  414280:	tbnz	x2, #63, 414298 <ferror@plt+0x11458>
  414284:	cbnz	x3, 414298 <ferror@plt+0x11458>
  414288:	bl	4029d0 <calloc@plt>
  41428c:	cbz	x0, 414298 <ferror@plt+0x11458>
  414290:	ldp	x29, x30, [sp], #16
  414294:	ret
  414298:	bl	414320 <ferror@plt+0x114e0>
  41429c:	nop
  4142a0:	stp	x29, x30, [sp, #-32]!
  4142a4:	mov	x29, sp
  4142a8:	stp	x19, x20, [sp, #16]
  4142ac:	mov	x19, x1
  4142b0:	mov	x20, x0
  4142b4:	mov	x0, x1
  4142b8:	bl	4028e0 <malloc@plt>
  4142bc:	cmp	x0, #0x0
  4142c0:	ccmp	x19, #0x0, #0x4, eq  // eq = none
  4142c4:	b.ne	4142dc <ferror@plt+0x1149c>  // b.any
  4142c8:	mov	x2, x19
  4142cc:	mov	x1, x20
  4142d0:	ldp	x19, x20, [sp, #16]
  4142d4:	ldp	x29, x30, [sp], #32
  4142d8:	b	402720 <memcpy@plt>
  4142dc:	bl	414320 <ferror@plt+0x114e0>
  4142e0:	stp	x29, x30, [sp, #-32]!
  4142e4:	mov	x29, sp
  4142e8:	stp	x19, x20, [sp, #16]
  4142ec:	mov	x20, x0
  4142f0:	bl	402780 <strlen@plt>
  4142f4:	add	x19, x0, #0x1
  4142f8:	mov	x0, x19
  4142fc:	bl	4028e0 <malloc@plt>
  414300:	cbz	x0, 414318 <ferror@plt+0x114d8>
  414304:	mov	x2, x19
  414308:	mov	x1, x20
  41430c:	ldp	x19, x20, [sp, #16]
  414310:	ldp	x29, x30, [sp], #32
  414314:	b	402720 <memcpy@plt>
  414318:	bl	414320 <ferror@plt+0x114e0>
  41431c:	nop
  414320:	stp	x29, x30, [sp, #-32]!
  414324:	adrp	x0, 42d000 <_obstack_memory_used@@Base+0x176c8>
  414328:	mov	w2, #0x5                   	// #5
  41432c:	mov	x29, sp
  414330:	str	x19, [sp, #16]
  414334:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x36c8>
  414338:	ldr	w19, [x0, #1224]
  41433c:	add	x1, x1, #0xd0
  414340:	mov	x0, #0x0                   	// #0
  414344:	bl	402d20 <dcgettext@plt>
  414348:	adrp	x2, 416000 <_obstack_memory_used@@Base+0x6c8>
  41434c:	mov	x3, x0
  414350:	add	x2, x2, #0x5a0
  414354:	mov	w0, w19
  414358:	mov	w1, #0x0                   	// #0
  41435c:	bl	4027b0 <error@plt>
  414360:	bl	402a80 <abort@plt>
  414364:	nop
  414368:	stp	x29, x30, [sp, #-64]!
  41436c:	mov	x29, sp
  414370:	stp	x19, x20, [sp, #16]
  414374:	mov	x20, x3
  414378:	mov	x19, x1
  41437c:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x36c8>
  414380:	add	x1, x1, #0xe8
  414384:	stp	x21, x22, [sp, #32]
  414388:	mov	x21, x4
  41438c:	mov	x22, x2
  414390:	mov	w2, #0x5                   	// #5
  414394:	str	x23, [sp, #48]
  414398:	mov	w23, w0
  41439c:	mov	x0, #0x0                   	// #0
  4143a0:	bl	402d20 <dcgettext@plt>
  4143a4:	mov	x2, x0
  4143a8:	mov	w1, w23
  4143ac:	mov	w0, #0x0                   	// #0
  4143b0:	bl	4027b0 <error@plt>
  4143b4:	mov	w2, #0x5                   	// #5
  4143b8:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x36c8>
  4143bc:	mov	x0, #0x0                   	// #0
  4143c0:	add	x1, x1, #0x108
  4143c4:	bl	402d20 <dcgettext@plt>
  4143c8:	mov	x2, x0
  4143cc:	mov	w1, #0x0                   	// #0
  4143d0:	mov	w0, #0x0                   	// #0
  4143d4:	bl	4027b0 <error@plt>
  4143d8:	adrp	x0, 42d000 <_obstack_memory_used@@Base+0x176c8>
  4143dc:	mov	w2, #0x5                   	// #5
  4143e0:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x36c8>
  4143e4:	add	x1, x1, #0x138
  4143e8:	ldr	w23, [x0, #1224]
  4143ec:	mov	x0, #0x0                   	// #0
  4143f0:	bl	402d20 <dcgettext@plt>
  4143f4:	mov	x3, x22
  4143f8:	mov	x2, x19
  4143fc:	mov	w1, #0x8                   	// #8
  414400:	mov	x19, x0
  414404:	mov	w0, #0x0                   	// #0
  414408:	bl	411070 <ferror@plt+0xe230>
  41440c:	mov	x3, x21
  414410:	mov	x2, x20
  414414:	mov	w1, #0x8                   	// #8
  414418:	mov	x20, x0
  41441c:	mov	w0, #0x1                   	// #1
  414420:	bl	411070 <ferror@plt+0xe230>
  414424:	mov	x3, x20
  414428:	mov	x4, x0
  41442c:	mov	x2, x19
  414430:	mov	w0, w23
  414434:	ldp	x19, x20, [sp, #16]
  414438:	mov	w1, #0x0                   	// #0
  41443c:	ldp	x21, x22, [sp, #32]
  414440:	ldr	x23, [sp, #48]
  414444:	ldp	x29, x30, [sp], #64
  414448:	b	4027b0 <error@plt>
  41444c:	nop
  414450:	stp	x29, x30, [sp, #-64]!
  414454:	mov	x29, sp
  414458:	stp	x19, x20, [sp, #16]
  41445c:	mov	x20, x0
  414460:	stp	x21, x22, [sp, #32]
  414464:	mov	x21, x1
  414468:	mov	x22, x2
  41446c:	str	x23, [sp, #48]
  414470:	mov	x23, x3
  414474:	bl	415c00 <_obstack_memory_used@@Base+0x2c8>
  414478:	mov	w19, w0
  41447c:	bl	402db0 <__errno_location@plt>
  414480:	ldr	w0, [x0]
  414484:	cbnz	w0, 4144a0 <ferror@plt+0x11660>
  414488:	mov	w0, w19
  41448c:	ldp	x19, x20, [sp, #16]
  414490:	ldp	x21, x22, [sp, #32]
  414494:	ldr	x23, [sp, #48]
  414498:	ldp	x29, x30, [sp], #64
  41449c:	ret
  4144a0:	mov	x4, x23
  4144a4:	mov	x3, x22
  4144a8:	mov	x2, x21
  4144ac:	mov	x1, x20
  4144b0:	bl	414368 <ferror@plt+0x11528>
  4144b4:	mov	w0, w19
  4144b8:	ldp	x19, x20, [sp, #16]
  4144bc:	ldp	x21, x22, [sp, #32]
  4144c0:	ldr	x23, [sp, #48]
  4144c4:	ldp	x29, x30, [sp], #64
  4144c8:	ret
  4144cc:	nop
  4144d0:	stp	x29, x30, [sp, #-64]!
  4144d4:	mov	x29, sp
  4144d8:	stp	x19, x20, [sp, #16]
  4144dc:	mov	x20, x0
  4144e0:	stp	x21, x22, [sp, #32]
  4144e4:	mov	x21, x1
  4144e8:	mov	x22, x2
  4144ec:	str	x23, [sp, #48]
  4144f0:	mov	x23, x3
  4144f4:	bl	415d18 <_obstack_memory_used@@Base+0x3e0>
  4144f8:	mov	w19, w0
  4144fc:	bl	402db0 <__errno_location@plt>
  414500:	ldr	w0, [x0]
  414504:	cbnz	w0, 414520 <ferror@plt+0x116e0>
  414508:	mov	w0, w19
  41450c:	ldp	x19, x20, [sp, #16]
  414510:	ldp	x21, x22, [sp, #32]
  414514:	ldr	x23, [sp, #48]
  414518:	ldp	x29, x30, [sp], #64
  41451c:	ret
  414520:	sub	x4, x23, #0x1
  414524:	mov	x3, x22
  414528:	sub	x2, x21, #0x1
  41452c:	mov	x1, x20
  414530:	bl	414368 <ferror@plt+0x11528>
  414534:	mov	w0, w19
  414538:	ldp	x19, x20, [sp, #16]
  41453c:	ldp	x21, x22, [sp, #32]
  414540:	ldr	x23, [sp, #48]
  414544:	ldp	x29, x30, [sp], #64
  414548:	ret
  41454c:	nop
  414550:	stp	x29, x30, [sp, #-48]!
  414554:	mov	x29, sp
  414558:	str	x19, [sp, #16]
  41455c:	bl	4159d0 <_obstack_memory_used@@Base+0x98>
  414560:	stp	x0, x1, [sp, #32]
  414564:	bl	402db0 <__errno_location@plt>
  414568:	mov	x19, x0
  41456c:	b	41457c <ferror@plt+0x1173c>
  414570:	ldr	w0, [x19]
  414574:	tst	w0, #0xfffffffb
  414578:	b.ne	41459c <ferror@plt+0x1175c>  // b.any
  41457c:	str	wzr, [x19]
  414580:	add	x0, sp, #0x20
  414584:	mov	x1, #0x0                   	// #0
  414588:	bl	415400 <ferror@plt+0x125c0>
  41458c:	cbnz	w0, 414570 <ferror@plt+0x11730>
  414590:	ldr	x19, [sp, #16]
  414594:	ldp	x29, x30, [sp], #48
  414598:	ret
  41459c:	mov	w0, #0xffffffff            	// #-1
  4145a0:	ldr	x19, [sp, #16]
  4145a4:	ldp	x29, x30, [sp], #48
  4145a8:	ret
  4145ac:	nop
  4145b0:	stp	x29, x30, [sp, #-112]!
  4145b4:	cmp	w2, #0x24
  4145b8:	mov	x29, sp
  4145bc:	stp	x19, x20, [sp, #16]
  4145c0:	stp	x21, x22, [sp, #32]
  4145c4:	stp	x23, x24, [sp, #48]
  4145c8:	stp	x25, x26, [sp, #64]
  4145cc:	b.hi	414a40 <ferror@plt+0x11c00>  // b.pmore
  4145d0:	cmp	x1, #0x0
  4145d4:	mov	x19, x0
  4145d8:	add	x0, sp, #0x68
  4145dc:	mov	w24, w2
  4145e0:	mov	x21, x3
  4145e4:	mov	x20, x4
  4145e8:	csel	x23, x0, x1, eq  // eq = none
  4145ec:	bl	402db0 <__errno_location@plt>
  4145f0:	str	wzr, [x0]
  4145f4:	mov	x22, x0
  4145f8:	bl	402b60 <__ctype_b_loc@plt>
  4145fc:	ldrb	w5, [x19]
  414600:	ldr	x6, [x0]
  414604:	ubfiz	x0, x5, #1, #8
  414608:	ldrh	w0, [x6, x0]
  41460c:	tbz	w0, #13, 414628 <ferror@plt+0x117e8>
  414610:	mov	x3, x19
  414614:	nop
  414618:	ldrb	w5, [x3, #1]!
  41461c:	ubfiz	x4, x5, #1, #8
  414620:	ldrh	w4, [x6, x4]
  414624:	tbnz	w4, #13, 414618 <ferror@plt+0x117d8>
  414628:	cmp	w5, #0x2d
  41462c:	b.eq	4146a4 <ferror@plt+0x11864>  // b.none
  414630:	mov	w2, w24
  414634:	mov	x1, x23
  414638:	mov	x0, x19
  41463c:	bl	402770 <strtoul@plt>
  414640:	ldr	x25, [x23]
  414644:	mov	x24, x0
  414648:	cmp	x25, x19
  41464c:	b.eq	414698 <ferror@plt+0x11858>  // b.none
  414650:	ldr	w0, [x22]
  414654:	cbz	w0, 414690 <ferror@plt+0x11850>
  414658:	cmp	w0, #0x22
  41465c:	mov	w26, #0x1                   	// #1
  414660:	b.ne	4146a4 <ferror@plt+0x11864>  // b.any
  414664:	cbz	x20, 414670 <ferror@plt+0x11830>
  414668:	ldrb	w22, [x25]
  41466c:	cbnz	w22, 414768 <ferror@plt+0x11928>
  414670:	str	x24, [x21]
  414674:	mov	w0, w26
  414678:	ldp	x19, x20, [sp, #16]
  41467c:	ldp	x21, x22, [sp, #32]
  414680:	ldp	x23, x24, [sp, #48]
  414684:	ldp	x25, x26, [sp, #64]
  414688:	ldp	x29, x30, [sp], #112
  41468c:	ret
  414690:	mov	w26, #0x0                   	// #0
  414694:	b	414664 <ferror@plt+0x11824>
  414698:	cbz	x20, 4146a4 <ferror@plt+0x11864>
  41469c:	ldrb	w22, [x19]
  4146a0:	cbnz	w22, 4146c4 <ferror@plt+0x11884>
  4146a4:	mov	w26, #0x4                   	// #4
  4146a8:	mov	w0, w26
  4146ac:	ldp	x19, x20, [sp, #16]
  4146b0:	ldp	x21, x22, [sp, #32]
  4146b4:	ldp	x23, x24, [sp, #48]
  4146b8:	ldp	x25, x26, [sp, #64]
  4146bc:	ldp	x29, x30, [sp], #112
  4146c0:	ret
  4146c4:	mov	w1, w22
  4146c8:	mov	x0, x20
  4146cc:	mov	w26, #0x0                   	// #0
  4146d0:	mov	x24, #0x1                   	// #1
  4146d4:	bl	402c00 <strchr@plt>
  4146d8:	cbz	x0, 4146a4 <ferror@plt+0x11864>
  4146dc:	sub	w2, w22, #0x45
  4146e0:	and	w2, w2, #0xff
  4146e4:	cmp	w2, #0x2f
  4146e8:	b.hi	414780 <ferror@plt+0x11940>  // b.pmore
  4146ec:	mov	x6, #0x8945                	// #35141
  4146f0:	mov	x5, #0x1                   	// #1
  4146f4:	movk	x6, #0x30, lsl #16
  4146f8:	lsl	x2, x5, x2
  4146fc:	movk	x6, #0x8144, lsl #32
  414700:	mov	x19, #0x400                 	// #1024
  414704:	tst	x2, x6
  414708:	b.ne	4148c4 <ferror@plt+0x11a84>  // b.any
  41470c:	cmp	w22, #0x5a
  414710:	b.eq	4147c8 <ferror@plt+0x11988>  // b.none
  414714:	b.hi	4147e4 <ferror@plt+0x119a4>  // b.pmore
  414718:	cmp	w22, #0x4d
  41471c:	b.eq	4148a4 <ferror@plt+0x11a64>  // b.none
  414720:	b.hi	4147ac <ferror@plt+0x1196c>  // b.pmore
  414724:	cmp	w22, #0x45
  414728:	b.eq	414a08 <ferror@plt+0x11bc8>  // b.none
  41472c:	b.ls	41478c <ferror@plt+0x1194c>  // b.plast
  414730:	cmp	w22, #0x47
  414734:	b.eq	414800 <ferror@plt+0x119c0>  // b.none
  414738:	cmp	w22, #0x4b
  41473c:	b.ne	414778 <ferror@plt+0x11938>  // b.any
  414740:	umulh	x0, x24, x19
  414744:	cbnz	x0, 4148b8 <ferror@plt+0x11a78>
  414748:	mul	x24, x24, x19
  41474c:	add	x0, x25, x5
  414750:	str	x0, [x23]
  414754:	orr	w0, w26, #0x2
  414758:	ldrb	w1, [x25, x5]
  41475c:	cmp	w1, #0x0
  414760:	csel	w26, w0, w26, ne  // ne = any
  414764:	b	414670 <ferror@plt+0x11830>
  414768:	mov	w1, w22
  41476c:	mov	x0, x20
  414770:	bl	402c00 <strchr@plt>
  414774:	cbnz	x0, 4146dc <ferror@plt+0x1189c>
  414778:	orr	w26, w26, #0x2
  41477c:	b	414670 <ferror@plt+0x11830>
  414780:	mov	x19, #0x400                 	// #1024
  414784:	mov	x5, #0x1                   	// #1
  414788:	b	41470c <ferror@plt+0x118cc>
  41478c:	cmp	w22, #0x42
  414790:	b.ne	414778 <ferror@plt+0x11938>  // b.any
  414794:	lsr	x0, x24, #54
  414798:	lsl	x24, x24, #10
  41479c:	cmp	x0, #0x0
  4147a0:	csinc	w26, w26, wzr, eq  // eq = none
  4147a4:	csinv	x24, x24, xzr, eq  // eq = none
  4147a8:	b	41474c <ferror@plt+0x1190c>
  4147ac:	cmp	w22, #0x54
  4147b0:	b.eq	41488c <ferror@plt+0x11a4c>  // b.none
  4147b4:	cmp	w22, #0x59
  4147b8:	b.ne	414878 <ferror@plt+0x11a38>  // b.any
  4147bc:	umulh	x0, x24, x19
  4147c0:	cbnz	x0, 414a10 <ferror@plt+0x11bd0>
  4147c4:	mul	x24, x19, x24
  4147c8:	umulh	x0, x24, x19
  4147cc:	cbnz	x0, 414a10 <ferror@plt+0x11bd0>
  4147d0:	mul	x24, x19, x24
  4147d4:	umulh	x0, x24, x19
  4147d8:	cbnz	x0, 414a10 <ferror@plt+0x11bd0>
  4147dc:	mul	x24, x19, x24
  4147e0:	b	414880 <ferror@plt+0x11a40>
  4147e4:	cmp	w22, #0x6b
  4147e8:	b.eq	414740 <ferror@plt+0x11900>  // b.none
  4147ec:	b.hi	414850 <ferror@plt+0x11a10>  // b.pmore
  4147f0:	cmp	w22, #0x63
  4147f4:	b.eq	41474c <ferror@plt+0x1190c>  // b.none
  4147f8:	cmp	w22, #0x67
  4147fc:	b.ne	414830 <ferror@plt+0x119f0>  // b.any
  414800:	umulh	x0, x24, x19
  414804:	cbnz	x0, 414a10 <ferror@plt+0x11bd0>
  414808:	mul	x24, x24, x19
  41480c:	umulh	x0, x24, x19
  414810:	cbnz	x0, 414a10 <ferror@plt+0x11bd0>
  414814:	mul	x24, x24, x19
  414818:	umulh	x0, x24, x19
  41481c:	cbnz	x0, 414a10 <ferror@plt+0x11bd0>
  414820:	mov	w0, #0x0                   	// #0
  414824:	mul	x24, x24, x19
  414828:	orr	w26, w26, w0
  41482c:	b	41474c <ferror@plt+0x1190c>
  414830:	cmp	w22, #0x62
  414834:	b.ne	414778 <ferror@plt+0x11938>  // b.any
  414838:	lsr	x0, x24, #55
  41483c:	lsl	x24, x24, #9
  414840:	cmp	x0, #0x0
  414844:	csinc	w26, w26, wzr, eq  // eq = none
  414848:	csinv	x24, x24, xzr, eq  // eq = none
  41484c:	b	41474c <ferror@plt+0x1190c>
  414850:	cmp	w22, #0x74
  414854:	b.eq	41488c <ferror@plt+0x11a4c>  // b.none
  414858:	cmp	w22, #0x77
  41485c:	b.ne	41489c <ferror@plt+0x11a5c>  // b.any
  414860:	lsr	x0, x24, #63
  414864:	lsl	x24, x24, #1
  414868:	cmp	x0, #0x0
  41486c:	csinc	w26, w26, wzr, eq  // eq = none
  414870:	csinv	x24, x24, xzr, eq  // eq = none
  414874:	b	41474c <ferror@plt+0x1190c>
  414878:	cmp	w22, #0x50
  41487c:	b.ne	414778 <ferror@plt+0x11938>  // b.any
  414880:	umulh	x0, x24, x19
  414884:	cbnz	x0, 414a10 <ferror@plt+0x11bd0>
  414888:	mul	x24, x24, x19
  41488c:	umulh	x0, x24, x19
  414890:	cbnz	x0, 414a10 <ferror@plt+0x11bd0>
  414894:	mul	x24, x24, x19
  414898:	b	414800 <ferror@plt+0x119c0>
  41489c:	cmp	w22, #0x6d
  4148a0:	b.ne	414778 <ferror@plt+0x11938>  // b.any
  4148a4:	umulh	x0, x24, x19
  4148a8:	cbnz	x0, 4148b8 <ferror@plt+0x11a78>
  4148ac:	mul	x24, x19, x24
  4148b0:	umulh	x0, x24, x19
  4148b4:	cbz	x0, 414748 <ferror@plt+0x11908>
  4148b8:	mov	w26, #0x1                   	// #1
  4148bc:	mov	x24, #0xffffffffffffffff    	// #-1
  4148c0:	b	41474c <ferror@plt+0x1190c>
  4148c4:	mov	x0, x20
  4148c8:	mov	w1, #0x30                  	// #48
  4148cc:	str	x5, [sp, #88]
  4148d0:	bl	402c00 <strchr@plt>
  4148d4:	ldr	x5, [sp, #88]
  4148d8:	cbz	x0, 41470c <ferror@plt+0x118cc>
  4148dc:	ldrb	w0, [x25, #1]
  4148e0:	cmp	w0, #0x44
  4148e4:	b.eq	41494c <ferror@plt+0x11b0c>  // b.none
  4148e8:	cmp	w0, #0x69
  4148ec:	b.eq	414938 <ferror@plt+0x11af8>  // b.none
  4148f0:	cmp	w0, #0x42
  4148f4:	b.eq	41494c <ferror@plt+0x11b0c>  // b.none
  4148f8:	cmp	w22, #0x5a
  4148fc:	b.eq	4147c8 <ferror@plt+0x11988>  // b.none
  414900:	b.hi	414988 <ferror@plt+0x11b48>  // b.pmore
  414904:	cmp	w22, #0x4d
  414908:	b.eq	4148a4 <ferror@plt+0x11a64>  // b.none
  41490c:	b.hi	41496c <ferror@plt+0x11b2c>  // b.pmore
  414910:	cmp	w22, #0x45
  414914:	b.eq	414a00 <ferror@plt+0x11bc0>  // b.none
  414918:	b.ls	414958 <ferror@plt+0x11b18>  // b.plast
  41491c:	cmp	w22, #0x47
  414920:	b.eq	414a20 <ferror@plt+0x11be0>  // b.none
  414924:	cmp	w22, #0x4b
  414928:	b.ne	414778 <ferror@plt+0x11938>  // b.any
  41492c:	mov	x5, #0x1                   	// #1
  414930:	mov	x19, #0x400                 	// #1024
  414934:	b	414740 <ferror@plt+0x11900>
  414938:	ldrb	w1, [x25, #2]
  41493c:	mov	x0, #0x3                   	// #3
  414940:	cmp	w1, #0x42
  414944:	csel	x5, x5, x0, ne  // ne = any
  414948:	b	41470c <ferror@plt+0x118cc>
  41494c:	mov	x19, #0x3e8                 	// #1000
  414950:	mov	x5, #0x2                   	// #2
  414954:	b	41470c <ferror@plt+0x118cc>
  414958:	cmp	w22, #0x42
  41495c:	mov	x5, #0x1                   	// #1
  414960:	b.eq	414794 <ferror@plt+0x11954>  // b.none
  414964:	orr	w26, w26, #0x2
  414968:	b	414670 <ferror@plt+0x11830>
  41496c:	cmp	w22, #0x54
  414970:	b.eq	414a34 <ferror@plt+0x11bf4>  // b.none
  414974:	cmp	w22, #0x59
  414978:	b.ne	4149b4 <ferror@plt+0x11b74>  // b.any
  41497c:	mov	x5, #0x1                   	// #1
  414980:	mov	x19, #0x400                 	// #1024
  414984:	b	4147bc <ferror@plt+0x1197c>
  414988:	cmp	w22, #0x67
  41498c:	b.eq	414800 <ferror@plt+0x119c0>  // b.none
  414990:	b.ls	4149e4 <ferror@plt+0x11ba4>  // b.plast
  414994:	cmp	w22, #0x74
  414998:	b.eq	414a34 <ferror@plt+0x11bf4>  // b.none
  41499c:	b.ls	4149c8 <ferror@plt+0x11b88>  // b.plast
  4149a0:	cmp	w22, #0x77
  4149a4:	mov	x5, #0x1                   	// #1
  4149a8:	b.eq	414860 <ferror@plt+0x11a20>  // b.none
  4149ac:	orr	w26, w26, #0x2
  4149b0:	b	414670 <ferror@plt+0x11830>
  4149b4:	cmp	w22, #0x50
  4149b8:	b.ne	414778 <ferror@plt+0x11938>  // b.any
  4149bc:	mov	x5, #0x1                   	// #1
  4149c0:	mov	x19, #0x400                 	// #1024
  4149c4:	b	414880 <ferror@plt+0x11a40>
  4149c8:	cmp	w22, #0x6b
  4149cc:	b.eq	41492c <ferror@plt+0x11aec>  // b.none
  4149d0:	cmp	w22, #0x6d
  4149d4:	b.ne	414778 <ferror@plt+0x11938>  // b.any
  4149d8:	mov	x5, #0x1                   	// #1
  4149dc:	mov	x19, #0x400                 	// #1024
  4149e0:	b	4148a4 <ferror@plt+0x11a64>
  4149e4:	cmp	w22, #0x62
  4149e8:	b.eq	414a2c <ferror@plt+0x11bec>  // b.none
  4149ec:	cmp	w22, #0x63
  4149f0:	mov	x5, #0x1                   	// #1
  4149f4:	b.eq	41474c <ferror@plt+0x1190c>  // b.none
  4149f8:	orr	w26, w26, #0x2
  4149fc:	b	414670 <ferror@plt+0x11830>
  414a00:	mov	x5, #0x1                   	// #1
  414a04:	mov	x19, #0x400                 	// #1024
  414a08:	umulh	x0, x24, x19
  414a0c:	cbz	x0, 4147dc <ferror@plt+0x1199c>
  414a10:	mov	w0, #0x1                   	// #1
  414a14:	mov	x24, #0xffffffffffffffff    	// #-1
  414a18:	orr	w26, w26, w0
  414a1c:	b	41474c <ferror@plt+0x1190c>
  414a20:	mov	x5, #0x1                   	// #1
  414a24:	mov	x19, #0x400                 	// #1024
  414a28:	b	414800 <ferror@plt+0x119c0>
  414a2c:	mov	x5, #0x1                   	// #1
  414a30:	b	414838 <ferror@plt+0x119f8>
  414a34:	mov	x5, #0x1                   	// #1
  414a38:	mov	x19, #0x400                 	// #1024
  414a3c:	b	41488c <ferror@plt+0x11a4c>
  414a40:	adrp	x3, 419000 <_obstack_memory_used@@Base+0x36c8>
  414a44:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x36c8>
  414a48:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x36c8>
  414a4c:	add	x3, x3, #0x198
  414a50:	add	x1, x1, #0x160
  414a54:	add	x0, x0, #0x170
  414a58:	mov	w2, #0x54                  	// #84
  414a5c:	bl	402da0 <__assert_fail@plt>
  414a60:	stp	x29, x30, [sp, #-64]!
  414a64:	adrp	x5, 42d000 <_obstack_memory_used@@Base+0x176c8>
  414a68:	sub	w0, w0, #0x1
  414a6c:	mov	x29, sp
  414a70:	stp	x21, x22, [sp, #32]
  414a74:	cmp	w0, #0x3
  414a78:	ldr	w21, [x5, #1224]
  414a7c:	stp	x19, x20, [sp, #16]
  414a80:	b.hi	414ad8 <ferror@plt+0x11c98>  // b.pmore
  414a84:	mov	w6, w1
  414a88:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x36c8>
  414a8c:	add	x1, x1, #0x218
  414a90:	mov	x20, x4
  414a94:	sxtw	x4, w6
  414a98:	ldr	x1, [x1, w0, uxtw #3]
  414a9c:	tbnz	w6, #31, 414adc <ferror@plt+0x11c9c>
  414aa0:	lsl	x4, x4, #5
  414aa4:	adrp	x19, 419000 <_obstack_memory_used@@Base+0x36c8>
  414aa8:	add	x19, x19, #0x1a8
  414aac:	ldr	x22, [x3, x4]
  414ab0:	mov	w2, #0x5                   	// #5
  414ab4:	mov	x0, #0x0                   	// #0
  414ab8:	bl	402d20 <dcgettext@plt>
  414abc:	mov	x5, x20
  414ac0:	mov	x2, x0
  414ac4:	mov	x4, x22
  414ac8:	mov	x3, x19
  414acc:	mov	w0, w21
  414ad0:	mov	w1, #0x0                   	// #0
  414ad4:	bl	4027b0 <error@plt>
  414ad8:	bl	402a80 <abort@plt>
  414adc:	adrp	x19, 419000 <_obstack_memory_used@@Base+0x36c8>
  414ae0:	add	x19, x19, #0x1a8
  414ae4:	and	w2, w2, #0xff
  414ae8:	sub	x19, x19, x4
  414aec:	add	x22, sp, #0x38
  414af0:	strb	w2, [sp, #56]
  414af4:	strb	wzr, [sp, #57]
  414af8:	b	414ab0 <ferror@plt+0x11c70>
  414afc:	nop
  414b00:	stp	x29, x30, [sp, #-112]!
  414b04:	cmp	w2, #0x24
  414b08:	mov	x29, sp
  414b0c:	stp	x19, x20, [sp, #16]
  414b10:	stp	x21, x22, [sp, #32]
  414b14:	stp	x23, x24, [sp, #48]
  414b18:	stp	x25, x26, [sp, #64]
  414b1c:	b.hi	414f94 <ferror@plt+0x12154>  // b.pmore
  414b20:	cmp	x1, #0x0
  414b24:	mov	x19, x0
  414b28:	add	x0, sp, #0x68
  414b2c:	mov	w24, w2
  414b30:	mov	x21, x3
  414b34:	mov	x20, x4
  414b38:	csel	x23, x0, x1, eq  // eq = none
  414b3c:	bl	402db0 <__errno_location@plt>
  414b40:	str	wzr, [x0]
  414b44:	mov	x22, x0
  414b48:	bl	402b60 <__ctype_b_loc@plt>
  414b4c:	ldrb	w5, [x19]
  414b50:	ldr	x6, [x0]
  414b54:	ubfiz	x0, x5, #1, #8
  414b58:	ldrh	w0, [x6, x0]
  414b5c:	tbz	w0, #13, 414b78 <ferror@plt+0x11d38>
  414b60:	mov	x3, x19
  414b64:	nop
  414b68:	ldrb	w5, [x3, #1]!
  414b6c:	ubfiz	x4, x5, #1, #8
  414b70:	ldrh	w4, [x6, x4]
  414b74:	tbnz	w4, #13, 414b68 <ferror@plt+0x11d28>
  414b78:	cmp	w5, #0x2d
  414b7c:	b.eq	414bf8 <ferror@plt+0x11db8>  // b.none
  414b80:	mov	w2, w24
  414b84:	mov	x1, x23
  414b88:	mov	x0, x19
  414b8c:	mov	w3, #0x0                   	// #0
  414b90:	bl	4029c0 <__strtoul_internal@plt>
  414b94:	mov	x24, x0
  414b98:	ldr	x25, [x23]
  414b9c:	cmp	x25, x19
  414ba0:	b.eq	414bec <ferror@plt+0x11dac>  // b.none
  414ba4:	ldr	w0, [x22]
  414ba8:	cbz	w0, 414be4 <ferror@plt+0x11da4>
  414bac:	cmp	w0, #0x22
  414bb0:	mov	w26, #0x1                   	// #1
  414bb4:	b.ne	414bf8 <ferror@plt+0x11db8>  // b.any
  414bb8:	cbz	x20, 414bc4 <ferror@plt+0x11d84>
  414bbc:	ldrb	w22, [x25]
  414bc0:	cbnz	w22, 414cbc <ferror@plt+0x11e7c>
  414bc4:	str	x24, [x21]
  414bc8:	mov	w0, w26
  414bcc:	ldp	x19, x20, [sp, #16]
  414bd0:	ldp	x21, x22, [sp, #32]
  414bd4:	ldp	x23, x24, [sp, #48]
  414bd8:	ldp	x25, x26, [sp, #64]
  414bdc:	ldp	x29, x30, [sp], #112
  414be0:	ret
  414be4:	mov	w26, #0x0                   	// #0
  414be8:	b	414bb8 <ferror@plt+0x11d78>
  414bec:	cbz	x20, 414bf8 <ferror@plt+0x11db8>
  414bf0:	ldrb	w22, [x19]
  414bf4:	cbnz	w22, 414c18 <ferror@plt+0x11dd8>
  414bf8:	mov	w26, #0x4                   	// #4
  414bfc:	mov	w0, w26
  414c00:	ldp	x19, x20, [sp, #16]
  414c04:	ldp	x21, x22, [sp, #32]
  414c08:	ldp	x23, x24, [sp, #48]
  414c0c:	ldp	x25, x26, [sp, #64]
  414c10:	ldp	x29, x30, [sp], #112
  414c14:	ret
  414c18:	mov	w1, w22
  414c1c:	mov	x0, x20
  414c20:	mov	w26, #0x0                   	// #0
  414c24:	mov	x24, #0x1                   	// #1
  414c28:	bl	402c00 <strchr@plt>
  414c2c:	cbz	x0, 414bf8 <ferror@plt+0x11db8>
  414c30:	sub	w2, w22, #0x45
  414c34:	and	w2, w2, #0xff
  414c38:	cmp	w2, #0x2f
  414c3c:	b.hi	414cd4 <ferror@plt+0x11e94>  // b.pmore
  414c40:	mov	x6, #0x8945                	// #35141
  414c44:	mov	x5, #0x1                   	// #1
  414c48:	movk	x6, #0x30, lsl #16
  414c4c:	lsl	x2, x5, x2
  414c50:	movk	x6, #0x8144, lsl #32
  414c54:	mov	x19, #0x400                 	// #1024
  414c58:	tst	x2, x6
  414c5c:	b.ne	414e18 <ferror@plt+0x11fd8>  // b.any
  414c60:	cmp	w22, #0x5a
  414c64:	b.eq	414d1c <ferror@plt+0x11edc>  // b.none
  414c68:	b.hi	414d38 <ferror@plt+0x11ef8>  // b.pmore
  414c6c:	cmp	w22, #0x4d
  414c70:	b.eq	414df8 <ferror@plt+0x11fb8>  // b.none
  414c74:	b.hi	414d00 <ferror@plt+0x11ec0>  // b.pmore
  414c78:	cmp	w22, #0x45
  414c7c:	b.eq	414f5c <ferror@plt+0x1211c>  // b.none
  414c80:	b.ls	414ce0 <ferror@plt+0x11ea0>  // b.plast
  414c84:	cmp	w22, #0x47
  414c88:	b.eq	414d54 <ferror@plt+0x11f14>  // b.none
  414c8c:	cmp	w22, #0x4b
  414c90:	b.ne	414ccc <ferror@plt+0x11e8c>  // b.any
  414c94:	umulh	x0, x24, x19
  414c98:	cbnz	x0, 414e0c <ferror@plt+0x11fcc>
  414c9c:	mul	x24, x24, x19
  414ca0:	add	x0, x25, x5
  414ca4:	str	x0, [x23]
  414ca8:	orr	w0, w26, #0x2
  414cac:	ldrb	w1, [x25, x5]
  414cb0:	cmp	w1, #0x0
  414cb4:	csel	w26, w0, w26, ne  // ne = any
  414cb8:	b	414bc4 <ferror@plt+0x11d84>
  414cbc:	mov	w1, w22
  414cc0:	mov	x0, x20
  414cc4:	bl	402c00 <strchr@plt>
  414cc8:	cbnz	x0, 414c30 <ferror@plt+0x11df0>
  414ccc:	orr	w26, w26, #0x2
  414cd0:	b	414bc4 <ferror@plt+0x11d84>
  414cd4:	mov	x19, #0x400                 	// #1024
  414cd8:	mov	x5, #0x1                   	// #1
  414cdc:	b	414c60 <ferror@plt+0x11e20>
  414ce0:	cmp	w22, #0x42
  414ce4:	b.ne	414ccc <ferror@plt+0x11e8c>  // b.any
  414ce8:	lsr	x0, x24, #54
  414cec:	lsl	x24, x24, #10
  414cf0:	cmp	x0, #0x0
  414cf4:	csinc	w26, w26, wzr, eq  // eq = none
  414cf8:	csinv	x24, x24, xzr, eq  // eq = none
  414cfc:	b	414ca0 <ferror@plt+0x11e60>
  414d00:	cmp	w22, #0x54
  414d04:	b.eq	414de0 <ferror@plt+0x11fa0>  // b.none
  414d08:	cmp	w22, #0x59
  414d0c:	b.ne	414dcc <ferror@plt+0x11f8c>  // b.any
  414d10:	umulh	x0, x24, x19
  414d14:	cbnz	x0, 414f64 <ferror@plt+0x12124>
  414d18:	mul	x24, x19, x24
  414d1c:	umulh	x0, x24, x19
  414d20:	cbnz	x0, 414f64 <ferror@plt+0x12124>
  414d24:	mul	x24, x19, x24
  414d28:	umulh	x0, x24, x19
  414d2c:	cbnz	x0, 414f64 <ferror@plt+0x12124>
  414d30:	mul	x24, x19, x24
  414d34:	b	414dd4 <ferror@plt+0x11f94>
  414d38:	cmp	w22, #0x6b
  414d3c:	b.eq	414c94 <ferror@plt+0x11e54>  // b.none
  414d40:	b.hi	414da4 <ferror@plt+0x11f64>  // b.pmore
  414d44:	cmp	w22, #0x63
  414d48:	b.eq	414ca0 <ferror@plt+0x11e60>  // b.none
  414d4c:	cmp	w22, #0x67
  414d50:	b.ne	414d84 <ferror@plt+0x11f44>  // b.any
  414d54:	umulh	x0, x24, x19
  414d58:	cbnz	x0, 414f64 <ferror@plt+0x12124>
  414d5c:	mul	x24, x24, x19
  414d60:	umulh	x0, x24, x19
  414d64:	cbnz	x0, 414f64 <ferror@plt+0x12124>
  414d68:	mul	x24, x24, x19
  414d6c:	umulh	x0, x24, x19
  414d70:	cbnz	x0, 414f64 <ferror@plt+0x12124>
  414d74:	mov	w0, #0x0                   	// #0
  414d78:	mul	x24, x24, x19
  414d7c:	orr	w26, w26, w0
  414d80:	b	414ca0 <ferror@plt+0x11e60>
  414d84:	cmp	w22, #0x62
  414d88:	b.ne	414ccc <ferror@plt+0x11e8c>  // b.any
  414d8c:	lsr	x0, x24, #55
  414d90:	lsl	x24, x24, #9
  414d94:	cmp	x0, #0x0
  414d98:	csinc	w26, w26, wzr, eq  // eq = none
  414d9c:	csinv	x24, x24, xzr, eq  // eq = none
  414da0:	b	414ca0 <ferror@plt+0x11e60>
  414da4:	cmp	w22, #0x74
  414da8:	b.eq	414de0 <ferror@plt+0x11fa0>  // b.none
  414dac:	cmp	w22, #0x77
  414db0:	b.ne	414df0 <ferror@plt+0x11fb0>  // b.any
  414db4:	lsr	x0, x24, #63
  414db8:	lsl	x24, x24, #1
  414dbc:	cmp	x0, #0x0
  414dc0:	csinc	w26, w26, wzr, eq  // eq = none
  414dc4:	csinv	x24, x24, xzr, eq  // eq = none
  414dc8:	b	414ca0 <ferror@plt+0x11e60>
  414dcc:	cmp	w22, #0x50
  414dd0:	b.ne	414ccc <ferror@plt+0x11e8c>  // b.any
  414dd4:	umulh	x0, x24, x19
  414dd8:	cbnz	x0, 414f64 <ferror@plt+0x12124>
  414ddc:	mul	x24, x24, x19
  414de0:	umulh	x0, x24, x19
  414de4:	cbnz	x0, 414f64 <ferror@plt+0x12124>
  414de8:	mul	x24, x24, x19
  414dec:	b	414d54 <ferror@plt+0x11f14>
  414df0:	cmp	w22, #0x6d
  414df4:	b.ne	414ccc <ferror@plt+0x11e8c>  // b.any
  414df8:	umulh	x0, x24, x19
  414dfc:	cbnz	x0, 414e0c <ferror@plt+0x11fcc>
  414e00:	mul	x24, x19, x24
  414e04:	umulh	x0, x24, x19
  414e08:	cbz	x0, 414c9c <ferror@plt+0x11e5c>
  414e0c:	mov	w26, #0x1                   	// #1
  414e10:	mov	x24, #0xffffffffffffffff    	// #-1
  414e14:	b	414ca0 <ferror@plt+0x11e60>
  414e18:	mov	x0, x20
  414e1c:	mov	w1, #0x30                  	// #48
  414e20:	str	x5, [sp, #88]
  414e24:	bl	402c00 <strchr@plt>
  414e28:	ldr	x5, [sp, #88]
  414e2c:	cbz	x0, 414c60 <ferror@plt+0x11e20>
  414e30:	ldrb	w0, [x25, #1]
  414e34:	cmp	w0, #0x44
  414e38:	b.eq	414ea0 <ferror@plt+0x12060>  // b.none
  414e3c:	cmp	w0, #0x69
  414e40:	b.eq	414e8c <ferror@plt+0x1204c>  // b.none
  414e44:	cmp	w0, #0x42
  414e48:	b.eq	414ea0 <ferror@plt+0x12060>  // b.none
  414e4c:	cmp	w22, #0x5a
  414e50:	b.eq	414d1c <ferror@plt+0x11edc>  // b.none
  414e54:	b.hi	414edc <ferror@plt+0x1209c>  // b.pmore
  414e58:	cmp	w22, #0x4d
  414e5c:	b.eq	414df8 <ferror@plt+0x11fb8>  // b.none
  414e60:	b.hi	414ec0 <ferror@plt+0x12080>  // b.pmore
  414e64:	cmp	w22, #0x45
  414e68:	b.eq	414f54 <ferror@plt+0x12114>  // b.none
  414e6c:	b.ls	414eac <ferror@plt+0x1206c>  // b.plast
  414e70:	cmp	w22, #0x47
  414e74:	b.eq	414f74 <ferror@plt+0x12134>  // b.none
  414e78:	cmp	w22, #0x4b
  414e7c:	b.ne	414ccc <ferror@plt+0x11e8c>  // b.any
  414e80:	mov	x5, #0x1                   	// #1
  414e84:	mov	x19, #0x400                 	// #1024
  414e88:	b	414c94 <ferror@plt+0x11e54>
  414e8c:	ldrb	w1, [x25, #2]
  414e90:	mov	x0, #0x3                   	// #3
  414e94:	cmp	w1, #0x42
  414e98:	csel	x5, x5, x0, ne  // ne = any
  414e9c:	b	414c60 <ferror@plt+0x11e20>
  414ea0:	mov	x19, #0x3e8                 	// #1000
  414ea4:	mov	x5, #0x2                   	// #2
  414ea8:	b	414c60 <ferror@plt+0x11e20>
  414eac:	cmp	w22, #0x42
  414eb0:	mov	x5, #0x1                   	// #1
  414eb4:	b.eq	414ce8 <ferror@plt+0x11ea8>  // b.none
  414eb8:	orr	w26, w26, #0x2
  414ebc:	b	414bc4 <ferror@plt+0x11d84>
  414ec0:	cmp	w22, #0x54
  414ec4:	b.eq	414f88 <ferror@plt+0x12148>  // b.none
  414ec8:	cmp	w22, #0x59
  414ecc:	b.ne	414f08 <ferror@plt+0x120c8>  // b.any
  414ed0:	mov	x5, #0x1                   	// #1
  414ed4:	mov	x19, #0x400                 	// #1024
  414ed8:	b	414d10 <ferror@plt+0x11ed0>
  414edc:	cmp	w22, #0x67
  414ee0:	b.eq	414d54 <ferror@plt+0x11f14>  // b.none
  414ee4:	b.ls	414f38 <ferror@plt+0x120f8>  // b.plast
  414ee8:	cmp	w22, #0x74
  414eec:	b.eq	414f88 <ferror@plt+0x12148>  // b.none
  414ef0:	b.ls	414f1c <ferror@plt+0x120dc>  // b.plast
  414ef4:	cmp	w22, #0x77
  414ef8:	mov	x5, #0x1                   	// #1
  414efc:	b.eq	414db4 <ferror@plt+0x11f74>  // b.none
  414f00:	orr	w26, w26, #0x2
  414f04:	b	414bc4 <ferror@plt+0x11d84>
  414f08:	cmp	w22, #0x50
  414f0c:	b.ne	414ccc <ferror@plt+0x11e8c>  // b.any
  414f10:	mov	x5, #0x1                   	// #1
  414f14:	mov	x19, #0x400                 	// #1024
  414f18:	b	414dd4 <ferror@plt+0x11f94>
  414f1c:	cmp	w22, #0x6b
  414f20:	b.eq	414e80 <ferror@plt+0x12040>  // b.none
  414f24:	cmp	w22, #0x6d
  414f28:	b.ne	414ccc <ferror@plt+0x11e8c>  // b.any
  414f2c:	mov	x5, #0x1                   	// #1
  414f30:	mov	x19, #0x400                 	// #1024
  414f34:	b	414df8 <ferror@plt+0x11fb8>
  414f38:	cmp	w22, #0x62
  414f3c:	b.eq	414f80 <ferror@plt+0x12140>  // b.none
  414f40:	cmp	w22, #0x63
  414f44:	mov	x5, #0x1                   	// #1
  414f48:	b.eq	414ca0 <ferror@plt+0x11e60>  // b.none
  414f4c:	orr	w26, w26, #0x2
  414f50:	b	414bc4 <ferror@plt+0x11d84>
  414f54:	mov	x5, #0x1                   	// #1
  414f58:	mov	x19, #0x400                 	// #1024
  414f5c:	umulh	x0, x24, x19
  414f60:	cbz	x0, 414d30 <ferror@plt+0x11ef0>
  414f64:	mov	w0, #0x1                   	// #1
  414f68:	mov	x24, #0xffffffffffffffff    	// #-1
  414f6c:	orr	w26, w26, w0
  414f70:	b	414ca0 <ferror@plt+0x11e60>
  414f74:	mov	x5, #0x1                   	// #1
  414f78:	mov	x19, #0x400                 	// #1024
  414f7c:	b	414d54 <ferror@plt+0x11f14>
  414f80:	mov	x5, #0x1                   	// #1
  414f84:	b	414d8c <ferror@plt+0x11f4c>
  414f88:	mov	x5, #0x1                   	// #1
  414f8c:	mov	x19, #0x400                 	// #1024
  414f90:	b	414de0 <ferror@plt+0x11fa0>
  414f94:	adrp	x3, 419000 <_obstack_memory_used@@Base+0x36c8>
  414f98:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x36c8>
  414f9c:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x36c8>
  414fa0:	add	x3, x3, #0x238
  414fa4:	add	x1, x1, #0x160
  414fa8:	add	x0, x0, #0x170
  414fac:	mov	w2, #0x54                  	// #84
  414fb0:	bl	402da0 <__assert_fail@plt>
  414fb4:	nop
  414fb8:	stp	x29, x30, [sp, #-32]!
  414fbc:	mov	x29, sp
  414fc0:	stp	x19, x20, [sp, #16]
  414fc4:	mov	x19, x0
  414fc8:	bl	402880 <fileno@plt>
  414fcc:	tbnz	w0, #31, 415028 <ferror@plt+0x121e8>
  414fd0:	mov	x0, x19
  414fd4:	bl	402d50 <__freading@plt>
  414fd8:	cbnz	w0, 41500c <ferror@plt+0x121cc>
  414fdc:	mov	x0, x19
  414fe0:	bl	4152a0 <ferror@plt+0x12460>
  414fe4:	cbz	w0, 415028 <ferror@plt+0x121e8>
  414fe8:	bl	402db0 <__errno_location@plt>
  414fec:	mov	x20, x0
  414ff0:	mov	x0, x19
  414ff4:	ldr	w19, [x20]
  414ff8:	bl	4028a0 <fclose@plt>
  414ffc:	cbnz	w19, 415038 <ferror@plt+0x121f8>
  415000:	ldp	x19, x20, [sp, #16]
  415004:	ldp	x29, x30, [sp], #32
  415008:	ret
  41500c:	mov	x0, x19
  415010:	bl	402880 <fileno@plt>
  415014:	mov	w2, #0x1                   	// #1
  415018:	mov	x1, #0x0                   	// #0
  41501c:	bl	402850 <lseek@plt>
  415020:	cmn	x0, #0x1
  415024:	b.ne	414fdc <ferror@plt+0x1219c>  // b.any
  415028:	mov	x0, x19
  41502c:	ldp	x19, x20, [sp, #16]
  415030:	ldp	x29, x30, [sp], #32
  415034:	b	4028a0 <fclose@plt>
  415038:	mov	w0, #0xffffffff            	// #-1
  41503c:	str	w19, [x20]
  415040:	b	415000 <ferror@plt+0x121c0>
  415044:	nop
  415048:	stp	x29, x30, [sp, #-112]!
  41504c:	mov	w6, #0xffffffe0            	// #-32
  415050:	mov	x29, sp
  415054:	add	x7, sp, #0x50
  415058:	stp	x19, x20, [sp, #16]
  41505c:	str	x7, [sp, #64]
  415060:	stp	w6, wzr, [sp, #72]
  415064:	stp	x2, x3, [sp, #80]
  415068:	add	x2, sp, #0x70
  41506c:	stp	x2, x2, [sp, #48]
  415070:	stp	x4, x5, [sp, #96]
  415074:	cbz	w1, 415134 <ferror@plt+0x122f4>
  415078:	mov	w20, w0
  41507c:	mov	w3, w1
  415080:	cmp	w1, #0x406
  415084:	b.eq	415150 <ferror@plt+0x12310>  // b.none
  415088:	cmp	w1, #0xb
  41508c:	b.gt	4150d8 <ferror@plt+0x12298>
  415090:	cmp	w1, #0x0
  415094:	b.le	415104 <ferror@plt+0x122c4>
  415098:	mov	x1, #0x1                   	// #1
  41509c:	mov	x2, #0x514                 	// #1300
  4150a0:	lsl	x1, x1, x3
  4150a4:	tst	x1, x2
  4150a8:	b.ne	4151cc <ferror@plt+0x1238c>  // b.any
  4150ac:	mov	x2, #0xa0a                 	// #2570
  4150b0:	tst	x1, x2
  4150b4:	b.eq	415104 <ferror@plt+0x122c4>  // b.none
  4150b8:	mov	w1, w3
  4150bc:	mov	w0, w20
  4150c0:	bl	402c50 <fcntl@plt>
  4150c4:	mov	w19, w0
  4150c8:	mov	w0, w19
  4150cc:	ldp	x19, x20, [sp, #16]
  4150d0:	ldp	x29, x30, [sp], #112
  4150d4:	ret
  4150d8:	sub	w0, w1, #0x400
  4150dc:	cmp	w0, #0xa
  4150e0:	b.hi	415104 <ferror@plt+0x122c4>  // b.pmore
  4150e4:	mov	x1, #0x1                   	// #1
  4150e8:	mov	x2, #0x2c5                 	// #709
  4150ec:	lsl	x1, x1, x0
  4150f0:	tst	x1, x2
  4150f4:	b.ne	4151cc <ferror@plt+0x1238c>  // b.any
  4150f8:	mov	x2, #0x502                 	// #1282
  4150fc:	tst	x1, x2
  415100:	b.ne	4150b8 <ferror@plt+0x12278>  // b.any
  415104:	ldr	w0, [sp, #72]
  415108:	ldr	x1, [sp, #48]
  41510c:	tbnz	w0, #31, 415278 <ferror@plt+0x12438>
  415110:	ldr	x2, [x1]
  415114:	mov	w0, w20
  415118:	mov	w1, w3
  41511c:	bl	402c50 <fcntl@plt>
  415120:	mov	w19, w0
  415124:	mov	w0, w19
  415128:	ldp	x19, x20, [sp, #16]
  41512c:	ldp	x29, x30, [sp], #112
  415130:	ret
  415134:	ldr	w2, [sp, #80]
  415138:	bl	402c50 <fcntl@plt>
  41513c:	mov	w19, w0
  415140:	mov	w0, w19
  415144:	ldp	x19, x20, [sp, #16]
  415148:	ldp	x29, x30, [sp], #112
  41514c:	ret
  415150:	stp	x21, x22, [sp, #32]
  415154:	adrp	x21, 42d000 <_obstack_memory_used@@Base+0x176c8>
  415158:	mov	w2, #0xffffffe8            	// #-24
  41515c:	str	w2, [sp, #72]
  415160:	ldr	w2, [x21, #3336]
  415164:	ldr	w22, [sp, #80]
  415168:	tbnz	w2, #31, 415198 <ferror@plt+0x12358>
  41516c:	mov	w2, w22
  415170:	bl	402c50 <fcntl@plt>
  415174:	mov	w19, w0
  415178:	tbnz	w0, #31, 4151fc <ferror@plt+0x123bc>
  41517c:	mov	w0, #0x1                   	// #1
  415180:	str	w0, [x21, #3336]
  415184:	mov	w0, w19
  415188:	ldp	x19, x20, [sp, #16]
  41518c:	ldp	x21, x22, [sp, #32]
  415190:	ldp	x29, x30, [sp], #112
  415194:	ret
  415198:	mov	w2, w22
  41519c:	mov	w1, #0x0                   	// #0
  4151a0:	bl	402c50 <fcntl@plt>
  4151a4:	mov	w19, w0
  4151a8:	tbnz	w0, #31, 4151b8 <ferror@plt+0x12378>
  4151ac:	ldr	w0, [x21, #3336]
  4151b0:	cmn	w0, #0x1
  4151b4:	b.eq	41522c <ferror@plt+0x123ec>  // b.none
  4151b8:	mov	w0, w19
  4151bc:	ldp	x19, x20, [sp, #16]
  4151c0:	ldp	x21, x22, [sp, #32]
  4151c4:	ldp	x29, x30, [sp], #112
  4151c8:	ret
  4151cc:	ldr	w0, [sp, #72]
  4151d0:	ldr	x1, [sp, #48]
  4151d4:	tbnz	w0, #31, 41528c <ferror@plt+0x1244c>
  4151d8:	ldr	w2, [x1]
  4151dc:	mov	w0, w20
  4151e0:	mov	w1, w3
  4151e4:	bl	402c50 <fcntl@plt>
  4151e8:	mov	w19, w0
  4151ec:	mov	w0, w19
  4151f0:	ldp	x19, x20, [sp, #16]
  4151f4:	ldp	x29, x30, [sp], #112
  4151f8:	ret
  4151fc:	bl	402db0 <__errno_location@plt>
  415200:	ldr	w0, [x0]
  415204:	cmp	w0, #0x16
  415208:	b.ne	41517c <ferror@plt+0x1233c>  // b.any
  41520c:	mov	w2, w22
  415210:	mov	w0, w20
  415214:	mov	w1, #0x0                   	// #0
  415218:	bl	402c50 <fcntl@plt>
  41521c:	mov	w19, w0
  415220:	tbnz	w0, #31, 4151b8 <ferror@plt+0x12378>
  415224:	mov	w0, #0xffffffff            	// #-1
  415228:	str	w0, [x21, #3336]
  41522c:	mov	w0, w19
  415230:	mov	w1, #0x1                   	// #1
  415234:	bl	402c50 <fcntl@plt>
  415238:	tbnz	w0, #31, 415254 <ferror@plt+0x12414>
  41523c:	orr	w2, w0, #0x1
  415240:	mov	w1, #0x2                   	// #2
  415244:	mov	w0, w19
  415248:	bl	402c50 <fcntl@plt>
  41524c:	cmn	w0, #0x1
  415250:	b.ne	4151b8 <ferror@plt+0x12378>  // b.any
  415254:	bl	402db0 <__errno_location@plt>
  415258:	mov	x20, x0
  41525c:	mov	w0, w19
  415260:	mov	w19, #0xffffffff            	// #-1
  415264:	ldr	w21, [x20]
  415268:	bl	402a10 <close@plt>
  41526c:	str	w21, [x20]
  415270:	ldp	x21, x22, [sp, #32]
  415274:	b	4150c8 <ferror@plt+0x12288>
  415278:	cmn	w0, #0x7
  41527c:	b.ge	415110 <ferror@plt+0x122d0>  // b.tcont
  415280:	ldr	x1, [sp, #56]
  415284:	add	x1, x1, w0, sxtw
  415288:	b	415110 <ferror@plt+0x122d0>
  41528c:	cmn	w0, #0x7
  415290:	b.ge	4151d8 <ferror@plt+0x12398>  // b.tcont
  415294:	ldr	x1, [sp, #56]
  415298:	add	x1, x1, w0, sxtw
  41529c:	b	4151d8 <ferror@plt+0x12398>
  4152a0:	stp	x29, x30, [sp, #-32]!
  4152a4:	mov	x29, sp
  4152a8:	str	x19, [sp, #16]
  4152ac:	mov	x19, x0
  4152b0:	cbz	x0, 4152c4 <ferror@plt+0x12484>
  4152b4:	bl	402d50 <__freading@plt>
  4152b8:	cbz	w0, 4152c4 <ferror@plt+0x12484>
  4152bc:	ldr	w0, [x19]
  4152c0:	tbnz	w0, #8, 4152d4 <ferror@plt+0x12494>
  4152c4:	mov	x0, x19
  4152c8:	ldr	x19, [sp, #16]
  4152cc:	ldp	x29, x30, [sp], #32
  4152d0:	b	402c80 <fflush@plt>
  4152d4:	mov	x0, x19
  4152d8:	mov	w2, #0x1                   	// #1
  4152dc:	mov	x1, #0x0                   	// #0
  4152e0:	bl	4152f8 <ferror@plt+0x124b8>
  4152e4:	mov	x0, x19
  4152e8:	ldr	x19, [sp, #16]
  4152ec:	ldp	x29, x30, [sp], #32
  4152f0:	b	402c80 <fflush@plt>
  4152f4:	nop
  4152f8:	stp	x29, x30, [sp, #-48]!
  4152fc:	mov	x29, sp
  415300:	ldp	x3, x4, [x0, #8]
  415304:	str	x19, [sp, #16]
  415308:	mov	x19, x0
  41530c:	cmp	x4, x3
  415310:	b.eq	415324 <ferror@plt+0x124e4>  // b.none
  415314:	mov	x0, x19
  415318:	ldr	x19, [sp, #16]
  41531c:	ldp	x29, x30, [sp], #48
  415320:	b	402b80 <fseeko@plt>
  415324:	ldp	x3, x4, [x0, #32]
  415328:	cmp	x4, x3
  41532c:	b.ne	415314 <ferror@plt+0x124d4>  // b.any
  415330:	ldr	x3, [x0, #72]
  415334:	cbnz	x3, 415314 <ferror@plt+0x124d4>
  415338:	str	x1, [sp, #32]
  41533c:	str	w2, [sp, #44]
  415340:	bl	402880 <fileno@plt>
  415344:	ldr	w2, [sp, #44]
  415348:	ldr	x1, [sp, #32]
  41534c:	bl	402850 <lseek@plt>
  415350:	mov	x1, x0
  415354:	cmn	x0, #0x1
  415358:	b.eq	415370 <ferror@plt+0x12530>  // b.none
  41535c:	ldr	w2, [x19]
  415360:	mov	w0, #0x0                   	// #0
  415364:	str	x1, [x19, #144]
  415368:	and	w1, w2, #0xffffffef
  41536c:	str	w1, [x19]
  415370:	ldr	x19, [sp, #16]
  415374:	ldp	x29, x30, [sp], #48
  415378:	ret
  41537c:	nop
  415380:	stp	x29, x30, [sp, #-64]!
  415384:	cmp	x0, #0x0
  415388:	add	x4, sp, #0x3c
  41538c:	mov	x29, sp
  415390:	stp	x19, x20, [sp, #16]
  415394:	csel	x19, x4, x0, eq  // eq = none
  415398:	mov	x20, x2
  41539c:	mov	x0, x19
  4153a0:	str	x21, [sp, #32]
  4153a4:	mov	x21, x1
  4153a8:	bl	402710 <mbrtowc@plt>
  4153ac:	cmp	x20, #0x0
  4153b0:	mov	x20, x0
  4153b4:	ccmn	x0, #0x3, #0x0, ne  // ne = any
  4153b8:	b.hi	4153d0 <ferror@plt+0x12590>  // b.pmore
  4153bc:	mov	x0, x20
  4153c0:	ldp	x19, x20, [sp, #16]
  4153c4:	ldr	x21, [sp, #32]
  4153c8:	ldp	x29, x30, [sp], #64
  4153cc:	ret
  4153d0:	mov	w0, #0x0                   	// #0
  4153d4:	bl	40d070 <ferror@plt+0xa230>
  4153d8:	tst	w0, #0xff
  4153dc:	b.ne	4153bc <ferror@plt+0x1257c>  // b.any
  4153e0:	ldrb	w0, [x21]
  4153e4:	mov	x20, #0x1                   	// #1
  4153e8:	str	w0, [x19]
  4153ec:	mov	x0, x20
  4153f0:	ldp	x19, x20, [sp, #16]
  4153f4:	ldr	x21, [sp, #32]
  4153f8:	ldp	x29, x30, [sp], #64
  4153fc:	ret
  415400:	stp	x29, x30, [sp, #-64]!
  415404:	mov	x2, #0xc9ff                	// #51711
  415408:	movk	x2, #0x3b9a, lsl #16
  41540c:	mov	x29, sp
  415410:	stp	x21, x22, [sp, #32]
  415414:	mov	x21, x1
  415418:	ldr	x1, [x0, #8]
  41541c:	cmp	x1, x2
  415420:	b.hi	4154bc <ferror@plt+0x1267c>  // b.pmore
  415424:	stp	x19, x20, [sp, #16]
  415428:	mov	x19, #0xa400                	// #41984
  41542c:	movk	x19, #0x1f, lsl #16
  415430:	ldr	x20, [x0]
  415434:	str	x1, [sp, #56]
  415438:	add	x22, sp, #0x30
  41543c:	cmp	x20, x19
  415440:	b.gt	415454 <ferror@plt+0x12614>
  415444:	b	41548c <ferror@plt+0x1264c>
  415448:	str	xzr, [sp, #56]
  41544c:	cmp	x20, x19
  415450:	b.le	41548c <ferror@plt+0x1264c>
  415454:	mov	x1, x21
  415458:	mov	x0, x22
  41545c:	sub	x20, x20, x19
  415460:	str	x19, [sp, #48]
  415464:	bl	402be0 <nanosleep@plt>
  415468:	cbz	w0, 415448 <ferror@plt+0x12608>
  41546c:	cbz	x21, 4154ac <ferror@plt+0x1266c>
  415470:	ldr	x1, [x21]
  415474:	add	x20, x1, x20
  415478:	str	x20, [x21]
  41547c:	ldp	x19, x20, [sp, #16]
  415480:	ldp	x21, x22, [sp, #32]
  415484:	ldp	x29, x30, [sp], #64
  415488:	ret
  41548c:	mov	x1, x21
  415490:	mov	x0, x22
  415494:	str	x20, [sp, #48]
  415498:	bl	402be0 <nanosleep@plt>
  41549c:	ldp	x19, x20, [sp, #16]
  4154a0:	ldp	x21, x22, [sp, #32]
  4154a4:	ldp	x29, x30, [sp], #64
  4154a8:	ret
  4154ac:	ldp	x19, x20, [sp, #16]
  4154b0:	ldp	x21, x22, [sp, #32]
  4154b4:	ldp	x29, x30, [sp], #64
  4154b8:	ret
  4154bc:	bl	402db0 <__errno_location@plt>
  4154c0:	mov	x1, x0
  4154c4:	mov	w2, #0x16                  	// #22
  4154c8:	mov	w0, #0xffffffff            	// #-1
  4154cc:	str	w2, [x1]
  4154d0:	b	4154a0 <ferror@plt+0x12660>
  4154d4:	nop
  4154d8:	stp	x29, x30, [sp, #-32]!
  4154dc:	adrp	x0, 42d000 <_obstack_memory_used@@Base+0x176c8>
  4154e0:	mov	w2, #0x5                   	// #5
  4154e4:	mov	x29, sp
  4154e8:	str	x19, [sp, #16]
  4154ec:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x36c8>
  4154f0:	ldr	x19, [x0, #1336]
  4154f4:	add	x1, x1, #0xd0
  4154f8:	mov	x0, #0x0                   	// #0
  4154fc:	bl	402d20 <dcgettext@plt>
  415500:	adrp	x2, 418000 <_obstack_memory_used@@Base+0x26c8>
  415504:	mov	x3, x0
  415508:	add	x2, x2, #0xd98
  41550c:	mov	x0, x19
  415510:	mov	w1, #0x1                   	// #1
  415514:	bl	402b30 <__fprintf_chk@plt>
  415518:	adrp	x0, 42d000 <_obstack_memory_used@@Base+0x176c8>
  41551c:	ldr	w0, [x0, #1224]
  415520:	bl	402790 <exit@plt>
  415524:	nop

0000000000415528 <_obstack_begin@@Base>:
  415528:	stp	x29, x30, [sp, #-48]!
  41552c:	mov	x29, sp
  415530:	stp	x19, x20, [sp, #16]
  415534:	mov	x19, x0
  415538:	ldrb	w0, [x0, #80]
  41553c:	str	x21, [sp, #32]
  415540:	and	w0, w0, #0xfffffffe
  415544:	stp	x3, x4, [x19, #56]
  415548:	strb	w0, [x19, #80]
  41554c:	cbz	x2, 4155d0 <_obstack_begin@@Base+0xa8>
  415550:	ldrb	w0, [x19, #80]
  415554:	cmp	x1, #0x0
  415558:	sub	x21, x2, #0x1
  41555c:	mov	x20, x2
  415560:	mov	x2, #0xfe0                 	// #4064
  415564:	csel	x1, x1, x2, ne  // ne = any
  415568:	str	x1, [x19]
  41556c:	str	x21, [x19, #48]
  415570:	tbz	w0, #0, 4155f4 <_obstack_begin@@Base+0xcc>
  415574:	ldr	x0, [x19, #72]
  415578:	blr	x3
  41557c:	mov	x1, x0
  415580:	str	x1, [x19, #8]
  415584:	cbz	x1, 415604 <_obstack_begin@@Base+0xdc>
  415588:	add	x2, x1, #0x10
  41558c:	neg	x20, x20
  415590:	ldr	x0, [x19]
  415594:	add	x2, x2, x21
  415598:	and	x20, x2, x20
  41559c:	ldr	x21, [sp, #32]
  4155a0:	stp	x20, x20, [x19, #16]
  4155a4:	add	x2, x1, x0
  4155a8:	str	x2, [x1]
  4155ac:	mov	w0, #0x1                   	// #1
  4155b0:	str	x2, [x19, #32]
  4155b4:	ldrb	w2, [x19, #80]
  4155b8:	str	xzr, [x1, #8]
  4155bc:	and	w1, w2, #0xfffffff9
  4155c0:	strb	w1, [x19, #80]
  4155c4:	ldp	x19, x20, [sp, #16]
  4155c8:	ldp	x29, x30, [sp], #48
  4155cc:	ret
  4155d0:	ldrb	w0, [x19, #80]
  4155d4:	cmp	x1, #0x0
  4155d8:	mov	x21, #0xf                   	// #15
  4155dc:	mov	x2, #0xfe0                 	// #4064
  4155e0:	csel	x1, x1, x2, ne  // ne = any
  4155e4:	str	x1, [x19]
  4155e8:	str	x21, [x19, #48]
  4155ec:	mov	x20, #0x10                  	// #16
  4155f0:	tbnz	w0, #0, 415574 <_obstack_begin@@Base+0x4c>
  4155f4:	mov	x0, x1
  4155f8:	blr	x3
  4155fc:	mov	x1, x0
  415600:	b	415580 <_obstack_begin@@Base+0x58>
  415604:	adrp	x0, 42d000 <_obstack_memory_used@@Base+0x176c8>
  415608:	ldr	x0, [x0, #1320]
  41560c:	blr	x0

0000000000415610 <_obstack_begin_1@@Base>:
  415610:	stp	x29, x30, [sp, #-48]!
  415614:	mov	x29, sp
  415618:	stp	x19, x20, [sp, #16]
  41561c:	mov	x19, x0
  415620:	mov	x0, x5
  415624:	ldrb	w5, [x19, #80]
  415628:	str	x21, [sp, #32]
  41562c:	orr	w5, w5, #0x1
  415630:	stp	x3, x4, [x19, #56]
  415634:	str	x0, [x19, #72]
  415638:	strb	w5, [x19, #80]
  41563c:	cbz	x2, 4156bc <_obstack_begin_1@@Base+0xac>
  415640:	sub	x21, x2, #0x1
  415644:	mov	x20, x2
  415648:	ldrb	w2, [x19, #80]
  41564c:	cmp	x1, #0x0
  415650:	mov	x4, #0xfe0                 	// #4064
  415654:	csel	x1, x1, x4, ne  // ne = any
  415658:	str	x1, [x19]
  41565c:	str	x21, [x19, #48]
  415660:	tbz	w2, #0, 4156e0 <_obstack_begin_1@@Base+0xd0>
  415664:	blr	x3
  415668:	mov	x1, x0
  41566c:	str	x1, [x19, #8]
  415670:	cbz	x1, 4156f0 <_obstack_begin_1@@Base+0xe0>
  415674:	add	x2, x1, #0x10
  415678:	neg	x20, x20
  41567c:	ldr	x0, [x19]
  415680:	add	x2, x2, x21
  415684:	and	x20, x2, x20
  415688:	ldr	x21, [sp, #32]
  41568c:	stp	x20, x20, [x19, #16]
  415690:	add	x2, x1, x0
  415694:	str	x2, [x1]
  415698:	mov	w0, #0x1                   	// #1
  41569c:	str	x2, [x19, #32]
  4156a0:	ldrb	w2, [x19, #80]
  4156a4:	str	xzr, [x1, #8]
  4156a8:	and	w1, w2, #0xfffffff9
  4156ac:	strb	w1, [x19, #80]
  4156b0:	ldp	x19, x20, [sp, #16]
  4156b4:	ldp	x29, x30, [sp], #48
  4156b8:	ret
  4156bc:	ldrb	w2, [x19, #80]
  4156c0:	cmp	x1, #0x0
  4156c4:	mov	x21, #0xf                   	// #15
  4156c8:	mov	x4, #0xfe0                 	// #4064
  4156cc:	csel	x1, x1, x4, ne  // ne = any
  4156d0:	str	x1, [x19]
  4156d4:	str	x21, [x19, #48]
  4156d8:	mov	x20, #0x10                  	// #16
  4156dc:	tbnz	w2, #0, 415664 <_obstack_begin_1@@Base+0x54>
  4156e0:	mov	x0, x1
  4156e4:	blr	x3
  4156e8:	mov	x1, x0
  4156ec:	b	41566c <_obstack_begin_1@@Base+0x5c>
  4156f0:	adrp	x0, 42d000 <_obstack_memory_used@@Base+0x176c8>
  4156f4:	ldr	x0, [x0, #1320]
  4156f8:	blr	x0
  4156fc:	nop

0000000000415700 <_obstack_newchunk@@Base>:
  415700:	stp	x29, x30, [sp, #-64]!
  415704:	mov	x29, sp
  415708:	stp	x21, x22, [sp, #32]
  41570c:	ldp	x2, x21, [x0, #16]
  415710:	stp	x19, x20, [sp, #16]
  415714:	mov	x19, x0
  415718:	ldr	x3, [x0, #48]
  41571c:	ldr	x0, [x0]
  415720:	sub	x21, x21, x2
  415724:	adds	x1, x21, x1
  415728:	str	x23, [sp, #48]
  41572c:	cset	x2, cs  // cs = hs, nlast
  415730:	lsr	x20, x21, #3
  415734:	adds	x3, x3, x1
  415738:	add	x20, x20, #0x64
  41573c:	cset	x1, cs  // cs = hs, nlast
  415740:	cmp	x0, x3
  415744:	csel	x0, x0, x3, cs  // cs = hs, nlast
  415748:	add	x3, x20, x3
  41574c:	cmp	x0, x3
  415750:	csel	x20, x0, x3, cs  // cs = hs, nlast
  415754:	cmp	x2, #0x0
  415758:	ccmp	x1, #0x0, #0x0, eq  // eq = none
  41575c:	ldr	x23, [x19, #8]
  415760:	b.ne	415840 <_obstack_newchunk@@Base+0x140>  // b.any
  415764:	ldrb	w0, [x19, #80]
  415768:	ldr	x2, [x19, #56]
  41576c:	tbz	w0, #0, 415804 <_obstack_newchunk@@Base+0x104>
  415770:	ldr	x0, [x19, #72]
  415774:	mov	x1, x20
  415778:	blr	x2
  41577c:	mov	x22, x0
  415780:	cbz	x22, 415840 <_obstack_newchunk@@Base+0x140>
  415784:	mov	x3, x22
  415788:	str	x22, [x19, #8]
  41578c:	ldr	x1, [x19, #16]
  415790:	add	x20, x22, x20
  415794:	ldr	x0, [x19, #48]
  415798:	str	x23, [x22, #8]
  41579c:	str	x20, [x19, #32]
  4157a0:	mov	x2, x21
  4157a4:	str	x20, [x3], #16
  4157a8:	add	x20, x3, x0
  4157ac:	bic	x20, x20, x0
  4157b0:	mov	x0, x20
  4157b4:	bl	402720 <memcpy@plt>
  4157b8:	ldrb	w2, [x19, #80]
  4157bc:	tbnz	w2, #1, 4157dc <_obstack_newchunk@@Base+0xdc>
  4157c0:	ldr	x1, [x19, #48]
  4157c4:	add	x0, x23, #0x10
  4157c8:	ldr	x3, [x19, #16]
  4157cc:	add	x0, x0, x1
  4157d0:	bic	x0, x0, x1
  4157d4:	cmp	x3, x0
  4157d8:	b.eq	415814 <_obstack_newchunk@@Base+0x114>  // b.none
  4157dc:	ldrb	w0, [x19, #80]
  4157e0:	add	x21, x20, x21
  4157e4:	ldr	x23, [sp, #48]
  4157e8:	and	w0, w0, #0xfffffffd
  4157ec:	stp	x20, x21, [x19, #16]
  4157f0:	strb	w0, [x19, #80]
  4157f4:	ldp	x19, x20, [sp, #16]
  4157f8:	ldp	x21, x22, [sp, #32]
  4157fc:	ldp	x29, x30, [sp], #64
  415800:	ret
  415804:	mov	x0, x20
  415808:	blr	x2
  41580c:	mov	x22, x0
  415810:	b	415780 <_obstack_newchunk@@Base+0x80>
  415814:	ldr	x0, [x23, #8]
  415818:	ldr	x3, [x19, #64]
  41581c:	str	x0, [x22, #8]
  415820:	tbz	w2, #0, 415834 <_obstack_newchunk@@Base+0x134>
  415824:	ldr	x0, [x19, #72]
  415828:	mov	x1, x23
  41582c:	blr	x3
  415830:	b	4157dc <_obstack_newchunk@@Base+0xdc>
  415834:	mov	x0, x23
  415838:	blr	x3
  41583c:	b	4157dc <_obstack_newchunk@@Base+0xdc>
  415840:	adrp	x0, 42d000 <_obstack_memory_used@@Base+0x176c8>
  415844:	ldr	x0, [x0, #1320]
  415848:	blr	x0
  41584c:	nop

0000000000415850 <_obstack_allocated_p@@Base>:
  415850:	ldr	x0, [x0, #8]
  415854:	cbz	x0, 415878 <_obstack_allocated_p@@Base+0x28>
  415858:	cmp	x1, x0
  41585c:	b.ls	41586c <_obstack_allocated_p@@Base+0x1c>  // b.plast
  415860:	ldr	x2, [x0]
  415864:	cmp	x2, x1
  415868:	b.cs	41587c <_obstack_allocated_p@@Base+0x2c>  // b.hs, b.nlast
  41586c:	ldr	x0, [x0, #8]
  415870:	cbnz	x0, 415858 <_obstack_allocated_p@@Base+0x8>
  415874:	mov	w0, #0x0                   	// #0
  415878:	ret
  41587c:	mov	w0, #0x1                   	// #1
  415880:	ret
  415884:	nop

0000000000415888 <_obstack_free@@Base>:
  415888:	stp	x29, x30, [sp, #-48]!
  41588c:	mov	x29, sp
  415890:	str	x21, [sp, #32]
  415894:	mov	x21, x1
  415898:	ldr	x1, [x0, #8]
  41589c:	cbz	x1, 415908 <_obstack_free@@Base+0x80>
  4158a0:	stp	x19, x20, [sp, #16]
  4158a4:	mov	x19, x0
  4158a8:	cmp	x1, x21
  4158ac:	b.cs	4158bc <_obstack_free@@Base+0x34>  // b.hs, b.nlast
  4158b0:	ldr	x0, [x1]
  4158b4:	cmp	x0, x21
  4158b8:	b.cs	415918 <_obstack_free@@Base+0x90>  // b.hs, b.nlast
  4158bc:	ldrb	w0, [x19, #80]
  4158c0:	ldr	x20, [x1, #8]
  4158c4:	ldr	x2, [x19, #64]
  4158c8:	tbz	w0, #0, 4158ec <_obstack_free@@Base+0x64>
  4158cc:	ldr	x0, [x19, #72]
  4158d0:	blr	x2
  4158d4:	ldrb	w0, [x19, #80]
  4158d8:	orr	w0, w0, #0x2
  4158dc:	strb	w0, [x19, #80]
  4158e0:	cbz	x20, 415904 <_obstack_free@@Base+0x7c>
  4158e4:	mov	x1, x20
  4158e8:	b	4158a8 <_obstack_free@@Base+0x20>
  4158ec:	mov	x0, x1
  4158f0:	blr	x2
  4158f4:	ldrb	w0, [x19, #80]
  4158f8:	orr	w0, w0, #0x2
  4158fc:	strb	w0, [x19, #80]
  415900:	cbnz	x20, 4158e4 <_obstack_free@@Base+0x5c>
  415904:	ldp	x19, x20, [sp, #16]
  415908:	cbnz	x21, 415930 <_obstack_free@@Base+0xa8>
  41590c:	ldr	x21, [sp, #32]
  415910:	ldp	x29, x30, [sp], #48
  415914:	ret
  415918:	stp	x1, x21, [x19, #8]
  41591c:	stp	x21, x0, [x19, #24]
  415920:	ldp	x19, x20, [sp, #16]
  415924:	ldr	x21, [sp, #32]
  415928:	ldp	x29, x30, [sp], #48
  41592c:	ret
  415930:	stp	x19, x20, [sp, #16]
  415934:	bl	402a80 <abort@plt>

0000000000415938 <_obstack_memory_used@@Base>:
  415938:	ldr	x1, [x0, #8]
  41593c:	mov	x0, #0x0                   	// #0
  415940:	cbz	x1, 41595c <_obstack_memory_used@@Base+0x24>
  415944:	nop
  415948:	ldr	x2, [x1]
  41594c:	sub	x2, x2, x1
  415950:	ldr	x1, [x1, #8]
  415954:	add	x0, x0, x2
  415958:	cbnz	x1, 415948 <_obstack_memory_used@@Base+0x10>
  41595c:	ret
  415960:	stp	x29, x30, [sp, #-32]!
  415964:	mov	x29, sp
  415968:	stp	x19, x20, [sp, #16]
  41596c:	mov	x19, x0
  415970:	bl	402860 <__fpending@plt>
  415974:	mov	x20, x0
  415978:	mov	x0, x19
  41597c:	ldr	w19, [x19]
  415980:	and	w19, w19, #0x20
  415984:	bl	414fb8 <ferror@plt+0x12178>
  415988:	cbnz	w19, 4159b0 <_obstack_memory_used@@Base+0x78>
  41598c:	cbz	w0, 4159a4 <_obstack_memory_used@@Base+0x6c>
  415990:	cbnz	x20, 4159c8 <_obstack_memory_used@@Base+0x90>
  415994:	bl	402db0 <__errno_location@plt>
  415998:	ldr	w0, [x0]
  41599c:	cmp	w0, #0x9
  4159a0:	csetm	w0, ne  // ne = any
  4159a4:	ldp	x19, x20, [sp, #16]
  4159a8:	ldp	x29, x30, [sp], #32
  4159ac:	ret
  4159b0:	cbnz	w0, 4159c8 <_obstack_memory_used@@Base+0x90>
  4159b4:	bl	402db0 <__errno_location@plt>
  4159b8:	mov	x1, x0
  4159bc:	mov	w0, #0xffffffff            	// #-1
  4159c0:	str	wzr, [x1]
  4159c4:	b	4159a4 <_obstack_memory_used@@Base+0x6c>
  4159c8:	mov	w0, #0xffffffff            	// #-1
  4159cc:	b	4159a4 <_obstack_memory_used@@Base+0x6c>
  4159d0:	mov	x0, #0xc3e0000000000000    	// #-4332462841530417152
  4159d4:	fmov	d1, x0
  4159d8:	mov	x1, #0x0                   	// #0
  4159dc:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
  4159e0:	fcmpe	d0, d1
  4159e4:	b.le	415a04 <_obstack_memory_used@@Base+0xcc>
  4159e8:	mov	x0, #0x43e0000000000000    	// #4890909195324358656
  4159ec:	fmov	d1, x0
  4159f0:	fcmpe	d0, d1
  4159f4:	b.mi	415a08 <_obstack_memory_used@@Base+0xd0>  // b.first
  4159f8:	mov	x1, #0xc9ff                	// #51711
  4159fc:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
  415a00:	movk	x1, #0x3b9a, lsl #16
  415a04:	ret
  415a08:	fcvtzs	d1, d0
  415a0c:	mov	x0, #0xcd6500000000        	// #225833675390976
  415a10:	movk	x0, #0x41cd, lsl #48
  415a14:	fmov	d2, x0
  415a18:	mov	x1, #0x94b3                	// #38067
  415a1c:	mov	x3, #0xca00                	// #51712
  415a20:	movk	x1, #0x26d6, lsl #16
  415a24:	movk	x3, #0x3b9a, lsl #16
  415a28:	scvtf	d3, d1
  415a2c:	movk	x1, #0xbe8, lsl #32
  415a30:	movk	x1, #0x112e, lsl #48
  415a34:	fmov	x0, d1
  415a38:	fsub	d0, d0, d3
  415a3c:	fmul	d0, d0, d2
  415a40:	fcvtzs	x2, d0
  415a44:	scvtf	d2, x2
  415a48:	fcmpe	d2, d0
  415a4c:	cinc	x2, x2, mi  // mi = first
  415a50:	smulh	x1, x2, x1
  415a54:	asr	x1, x1, #26
  415a58:	sub	x1, x1, x2, asr #63
  415a5c:	add	x0, x1, x0
  415a60:	msub	x1, x1, x3, x2
  415a64:	tbz	x1, #63, 415a04 <_obstack_memory_used@@Base+0xcc>
  415a68:	sub	x0, x0, #0x1
  415a6c:	add	x1, x1, x3
  415a70:	ret
  415a74:	nop
  415a78:	stp	x29, x30, [sp, #-48]!
  415a7c:	cmp	w0, #0x2
  415a80:	mov	x29, sp
  415a84:	stp	x19, x20, [sp, #16]
  415a88:	mov	w19, w0
  415a8c:	b.ls	415aa0 <_obstack_memory_used@@Base+0x168>  // b.plast
  415a90:	mov	w0, w19
  415a94:	ldp	x19, x20, [sp, #16]
  415a98:	ldp	x29, x30, [sp], #48
  415a9c:	ret
  415aa0:	str	x21, [sp, #32]
  415aa4:	bl	415ae0 <_obstack_memory_used@@Base+0x1a8>
  415aa8:	mov	w21, w0
  415aac:	bl	402db0 <__errno_location@plt>
  415ab0:	mov	x20, x0
  415ab4:	mov	w0, w19
  415ab8:	mov	w19, w21
  415abc:	ldr	w21, [x20]
  415ac0:	bl	402a10 <close@plt>
  415ac4:	str	w21, [x20]
  415ac8:	mov	w0, w19
  415acc:	ldp	x19, x20, [sp, #16]
  415ad0:	ldr	x21, [sp, #32]
  415ad4:	ldp	x29, x30, [sp], #48
  415ad8:	ret
  415adc:	nop
  415ae0:	ands	w1, w1, #0x80000
  415ae4:	mov	w3, #0x406                 	// #1030
  415ae8:	mov	w2, #0x3                   	// #3
  415aec:	csel	w1, w1, w3, eq  // eq = none
  415af0:	b	415048 <ferror@plt+0x12208>
  415af4:	nop
  415af8:	stp	x29, x30, [sp, #-48]!
  415afc:	mov	x29, sp
  415b00:	stp	x19, x20, [sp, #16]
  415b04:	mov	x20, x1
  415b08:	bl	4028d0 <fopen@plt>
  415b0c:	mov	x19, x0
  415b10:	cbz	x0, 415b20 <_obstack_memory_used@@Base+0x1e8>
  415b14:	bl	402880 <fileno@plt>
  415b18:	cmp	w0, #0x2
  415b1c:	b.ls	415b30 <_obstack_memory_used@@Base+0x1f8>  // b.plast
  415b20:	mov	x0, x19
  415b24:	ldp	x19, x20, [sp, #16]
  415b28:	ldp	x29, x30, [sp], #48
  415b2c:	ret
  415b30:	str	x21, [sp, #32]
  415b34:	bl	415e08 <_obstack_memory_used@@Base+0x4d0>
  415b38:	mov	w21, w0
  415b3c:	tbnz	w0, #31, 415b98 <_obstack_memory_used@@Base+0x260>
  415b40:	mov	x0, x19
  415b44:	bl	414fb8 <ferror@plt+0x12178>
  415b48:	cbnz	w0, 415b74 <_obstack_memory_used@@Base+0x23c>
  415b4c:	mov	x1, x20
  415b50:	mov	w0, w21
  415b54:	bl	4029a0 <fdopen@plt>
  415b58:	mov	x19, x0
  415b5c:	cbz	x0, 415b74 <_obstack_memory_used@@Base+0x23c>
  415b60:	mov	x0, x19
  415b64:	ldp	x19, x20, [sp, #16]
  415b68:	ldr	x21, [sp, #32]
  415b6c:	ldp	x29, x30, [sp], #48
  415b70:	ret
  415b74:	bl	402db0 <__errno_location@plt>
  415b78:	mov	x20, x0
  415b7c:	mov	w0, w21
  415b80:	mov	x19, #0x0                   	// #0
  415b84:	ldr	w21, [x20]
  415b88:	bl	402a10 <close@plt>
  415b8c:	str	w21, [x20]
  415b90:	ldr	x21, [sp, #32]
  415b94:	b	415b20 <_obstack_memory_used@@Base+0x1e8>
  415b98:	bl	402db0 <__errno_location@plt>
  415b9c:	mov	x20, x0
  415ba0:	mov	x0, x19
  415ba4:	mov	x19, #0x0                   	// #0
  415ba8:	ldr	w21, [x20]
  415bac:	bl	414fb8 <ferror@plt+0x12178>
  415bb0:	str	w21, [x20]
  415bb4:	ldr	x21, [sp, #32]
  415bb8:	b	415b20 <_obstack_memory_used@@Base+0x1e8>
  415bbc:	nop
  415bc0:	stp	x29, x30, [sp, #-16]!
  415bc4:	mov	w0, #0xe                   	// #14
  415bc8:	mov	x29, sp
  415bcc:	bl	4028c0 <nl_langinfo@plt>
  415bd0:	cbz	x0, 415bf0 <_obstack_memory_used@@Base+0x2b8>
  415bd4:	ldrb	w2, [x0]
  415bd8:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x36c8>
  415bdc:	add	x1, x1, #0x248
  415be0:	cmp	w2, #0x0
  415be4:	csel	x0, x1, x0, eq  // eq = none
  415be8:	ldp	x29, x30, [sp], #16
  415bec:	ret
  415bf0:	ldp	x29, x30, [sp], #16
  415bf4:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x36c8>
  415bf8:	add	x0, x0, #0x248
  415bfc:	ret
  415c00:	stp	x29, x30, [sp, #-96]!
  415c04:	mov	x29, sp
  415c08:	stp	x19, x20, [sp, #16]
  415c0c:	mov	x20, x0
  415c10:	mov	x19, x2
  415c14:	stp	x21, x22, [sp, #32]
  415c18:	mov	x22, x1
  415c1c:	stp	x27, x28, [sp, #80]
  415c20:	mov	x28, x3
  415c24:	bl	402db0 <__errno_location@plt>
  415c28:	cmp	x22, x28
  415c2c:	mov	x21, x0
  415c30:	b.ne	415c4c <_obstack_memory_used@@Base+0x314>  // b.any
  415c34:	mov	x2, x22
  415c38:	mov	x1, x19
  415c3c:	mov	x0, x20
  415c40:	bl	402b00 <memcmp@plt>
  415c44:	mov	w4, w0
  415c48:	cbz	w0, 415ce8 <_obstack_memory_used@@Base+0x3b0>
  415c4c:	stp	x23, x24, [sp, #48]
  415c50:	add	x23, x22, #0x1
  415c54:	add	x24, x19, x28
  415c58:	stp	x25, x26, [sp, #64]
  415c5c:	add	x26, x20, x22
  415c60:	ldrb	w27, [x20, x22]
  415c64:	ldrb	w25, [x19, x28]
  415c68:	strb	wzr, [x20, x22]
  415c6c:	add	x22, x28, #0x1
  415c70:	strb	wzr, [x19, x28]
  415c74:	b	415ca4 <_obstack_memory_used@@Base+0x36c>
  415c78:	bl	402780 <strlen@plt>
  415c7c:	add	x28, x0, #0x1
  415c80:	mov	x0, x19
  415c84:	bl	402780 <strlen@plt>
  415c88:	add	x0, x0, #0x1
  415c8c:	add	x20, x20, x28
  415c90:	subs	x23, x23, x28
  415c94:	add	x19, x19, x0
  415c98:	sub	x22, x22, x0
  415c9c:	b.eq	415d04 <_obstack_memory_used@@Base+0x3cc>  // b.none
  415ca0:	cbz	x22, 415d10 <_obstack_memory_used@@Base+0x3d8>
  415ca4:	str	wzr, [x21]
  415ca8:	mov	x1, x19
  415cac:	mov	x0, x20
  415cb0:	bl	402d40 <strcoll@plt>
  415cb4:	mov	w4, w0
  415cb8:	mov	x0, x20
  415cbc:	cbz	w4, 415c78 <_obstack_memory_used@@Base+0x340>
  415cc0:	strb	w27, [x26]
  415cc4:	mov	w0, w4
  415cc8:	strb	w25, [x24]
  415ccc:	ldp	x19, x20, [sp, #16]
  415cd0:	ldp	x21, x22, [sp, #32]
  415cd4:	ldp	x23, x24, [sp, #48]
  415cd8:	ldp	x25, x26, [sp, #64]
  415cdc:	ldp	x27, x28, [sp, #80]
  415ce0:	ldp	x29, x30, [sp], #96
  415ce4:	ret
  415ce8:	str	wzr, [x21]
  415cec:	mov	w0, w4
  415cf0:	ldp	x19, x20, [sp, #16]
  415cf4:	ldp	x21, x22, [sp, #32]
  415cf8:	ldp	x27, x28, [sp, #80]
  415cfc:	ldp	x29, x30, [sp], #96
  415d00:	ret
  415d04:	cmp	x22, #0x0
  415d08:	csetm	w4, ne  // ne = any
  415d0c:	b	415cc0 <_obstack_memory_used@@Base+0x388>
  415d10:	mov	w4, #0x1                   	// #1
  415d14:	b	415cc0 <_obstack_memory_used@@Base+0x388>
  415d18:	stp	x29, x30, [sp, #-64]!
  415d1c:	mov	x29, sp
  415d20:	stp	x19, x20, [sp, #16]
  415d24:	mov	x19, x0
  415d28:	mov	x20, x2
  415d2c:	stp	x21, x22, [sp, #32]
  415d30:	mov	x21, x1
  415d34:	mov	x22, x3
  415d38:	stp	x23, x24, [sp, #48]
  415d3c:	bl	402db0 <__errno_location@plt>
  415d40:	cmp	x21, x22
  415d44:	mov	x24, x0
  415d48:	b.ne	415dac <_obstack_memory_used@@Base+0x474>  // b.any
  415d4c:	mov	x2, x21
  415d50:	mov	x1, x20
  415d54:	mov	x0, x19
  415d58:	bl	402b00 <memcmp@plt>
  415d5c:	mov	w4, w0
  415d60:	cbnz	w0, 415dac <_obstack_memory_used@@Base+0x474>
  415d64:	str	wzr, [x24]
  415d68:	mov	w0, w4
  415d6c:	ldp	x19, x20, [sp, #16]
  415d70:	ldp	x21, x22, [sp, #32]
  415d74:	ldp	x23, x24, [sp, #48]
  415d78:	ldp	x29, x30, [sp], #64
  415d7c:	ret
  415d80:	bl	402780 <strlen@plt>
  415d84:	add	x23, x0, #0x1
  415d88:	mov	x0, x20
  415d8c:	bl	402780 <strlen@plt>
  415d90:	add	x0, x0, #0x1
  415d94:	add	x19, x19, x23
  415d98:	subs	x21, x21, x23
  415d9c:	add	x20, x20, x0
  415da0:	sub	x22, x22, x0
  415da4:	b.eq	415dcc <_obstack_memory_used@@Base+0x494>  // b.none
  415da8:	cbz	x22, 415dec <_obstack_memory_used@@Base+0x4b4>
  415dac:	str	wzr, [x24]
  415db0:	mov	x1, x20
  415db4:	mov	x0, x19
  415db8:	bl	402d40 <strcoll@plt>
  415dbc:	mov	w4, w0
  415dc0:	mov	x0, x19
  415dc4:	cbz	w4, 415d80 <_obstack_memory_used@@Base+0x448>
  415dc8:	b	415d68 <_obstack_memory_used@@Base+0x430>
  415dcc:	cmp	x22, #0x0
  415dd0:	csetm	w4, ne  // ne = any
  415dd4:	mov	w0, w4
  415dd8:	ldp	x19, x20, [sp, #16]
  415ddc:	ldp	x21, x22, [sp, #32]
  415de0:	ldp	x23, x24, [sp, #48]
  415de4:	ldp	x29, x30, [sp], #64
  415de8:	ret
  415dec:	mov	w4, #0x1                   	// #1
  415df0:	mov	w0, w4
  415df4:	ldp	x19, x20, [sp, #16]
  415df8:	ldp	x21, x22, [sp, #32]
  415dfc:	ldp	x23, x24, [sp, #48]
  415e00:	ldp	x29, x30, [sp], #64
  415e04:	ret
  415e08:	mov	w2, #0x3                   	// #3
  415e0c:	mov	w1, #0x0                   	// #0
  415e10:	b	415048 <ferror@plt+0x12208>
  415e14:	nop
  415e18:	stp	x29, x30, [sp, #-48]!
  415e1c:	mov	x29, sp
  415e20:	str	q0, [sp, #16]
  415e24:	str	q1, [sp, #32]
  415e28:	ldp	x6, x1, [sp, #16]
  415e2c:	ldp	x7, x0, [sp, #32]
  415e30:	mrs	x2, fpcr
  415e34:	ubfx	x4, x1, #48, #15
  415e38:	lsr	x2, x1, #63
  415e3c:	lsr	x3, x0, #63
  415e40:	ubfx	x9, x0, #0, #48
  415e44:	mov	x5, #0x7fff                	// #32767
  415e48:	mov	x10, x6
  415e4c:	cmp	x4, x5
  415e50:	and	w2, w2, #0xff
  415e54:	ubfx	x1, x1, #0, #48
  415e58:	and	w3, w3, #0xff
  415e5c:	ubfx	x0, x0, #48, #15
  415e60:	b.eq	415e94 <_obstack_memory_used@@Base+0x55c>  // b.none
  415e64:	cmp	x0, x5
  415e68:	b.eq	415e80 <_obstack_memory_used@@Base+0x548>  // b.none
  415e6c:	cmp	x4, x0
  415e70:	mov	w0, #0x1                   	// #1
  415e74:	b.eq	415eac <_obstack_memory_used@@Base+0x574>  // b.none
  415e78:	ldp	x29, x30, [sp], #48
  415e7c:	ret
  415e80:	orr	x8, x9, x7
  415e84:	cbnz	x8, 415f10 <_obstack_memory_used@@Base+0x5d8>
  415e88:	mov	w0, #0x1                   	// #1
  415e8c:	ldp	x29, x30, [sp], #48
  415e90:	ret
  415e94:	orr	x5, x1, x6
  415e98:	cbnz	x5, 415ee0 <_obstack_memory_used@@Base+0x5a8>
  415e9c:	cmp	x0, x4
  415ea0:	b.ne	415e88 <_obstack_memory_used@@Base+0x550>  // b.any
  415ea4:	orr	x8, x9, x7
  415ea8:	cbnz	x8, 415f10 <_obstack_memory_used@@Base+0x5d8>
  415eac:	cmp	x1, x9
  415eb0:	mov	w0, #0x1                   	// #1
  415eb4:	ccmp	x6, x7, #0x0, eq  // eq = none
  415eb8:	b.ne	415e78 <_obstack_memory_used@@Base+0x540>  // b.any
  415ebc:	cmp	w2, w3
  415ec0:	mov	w0, #0x0                   	// #0
  415ec4:	b.eq	415e78 <_obstack_memory_used@@Base+0x540>  // b.none
  415ec8:	mov	w0, #0x1                   	// #1
  415ecc:	cbnz	x4, 415e78 <_obstack_memory_used@@Base+0x540>
  415ed0:	orr	x1, x1, x10
  415ed4:	cmp	x1, #0x0
  415ed8:	cset	w0, ne  // ne = any
  415edc:	b	415e78 <_obstack_memory_used@@Base+0x540>
  415ee0:	tst	x1, #0x800000000000
  415ee4:	b.ne	415efc <_obstack_memory_used@@Base+0x5c4>  // b.any
  415ee8:	mov	w0, #0x1                   	// #1
  415eec:	bl	4161a8 <_obstack_memory_used@@Base+0x870>
  415ef0:	mov	w0, #0x1                   	// #1
  415ef4:	ldp	x29, x30, [sp], #48
  415ef8:	ret
  415efc:	cmp	x0, x4
  415f00:	mov	w0, #0x1                   	// #1
  415f04:	b.ne	415e78 <_obstack_memory_used@@Base+0x540>  // b.any
  415f08:	orr	x8, x9, x7
  415f0c:	cbz	x8, 415e78 <_obstack_memory_used@@Base+0x540>
  415f10:	tst	x9, #0x800000000000
  415f14:	b.eq	415ee8 <_obstack_memory_used@@Base+0x5b0>  // b.none
  415f18:	b	415e88 <_obstack_memory_used@@Base+0x550>
  415f1c:	nop
  415f20:	stp	x29, x30, [sp, #-48]!
  415f24:	mov	x29, sp
  415f28:	str	q0, [sp, #16]
  415f2c:	str	q1, [sp, #32]
  415f30:	ldp	x8, x1, [sp, #16]
  415f34:	ldp	x9, x0, [sp, #32]
  415f38:	mrs	x2, fpcr
  415f3c:	ubfx	x4, x1, #48, #15
  415f40:	ubfx	x10, x1, #0, #48
  415f44:	lsr	x2, x1, #63
  415f48:	mov	x7, #0x7fff                	// #32767
  415f4c:	mov	x5, x8
  415f50:	cmp	x4, x7
  415f54:	ubfx	x11, x0, #0, #48
  415f58:	ubfx	x6, x0, #48, #15
  415f5c:	lsr	x1, x0, #63
  415f60:	mov	x3, x9
  415f64:	b.eq	415fa0 <_obstack_memory_used@@Base+0x668>  // b.none
  415f68:	cmp	x6, x7
  415f6c:	b.eq	415fb0 <_obstack_memory_used@@Base+0x678>  // b.none
  415f70:	cbnz	x4, 415fd8 <_obstack_memory_used@@Base+0x6a0>
  415f74:	orr	x5, x10, x8
  415f78:	cmp	x5, #0x0
  415f7c:	cset	w0, eq  // eq = none
  415f80:	cbnz	x6, 415f8c <_obstack_memory_used@@Base+0x654>
  415f84:	orr	x3, x11, x9
  415f88:	cbz	x3, 415ff8 <_obstack_memory_used@@Base+0x6c0>
  415f8c:	cbz	w0, 415fbc <_obstack_memory_used@@Base+0x684>
  415f90:	cmp	x1, #0x0
  415f94:	csinv	w0, w0, wzr, ne  // ne = any
  415f98:	ldp	x29, x30, [sp], #48
  415f9c:	ret
  415fa0:	orr	x0, x10, x8
  415fa4:	cbnz	x0, 416004 <_obstack_memory_used@@Base+0x6cc>
  415fa8:	cmp	x6, x4
  415fac:	b.ne	415fd8 <_obstack_memory_used@@Base+0x6a0>  // b.any
  415fb0:	orr	x3, x11, x3
  415fb4:	cbnz	x3, 416004 <_obstack_memory_used@@Base+0x6cc>
  415fb8:	cbz	x4, 415fe8 <_obstack_memory_used@@Base+0x6b0>
  415fbc:	cmp	x2, x1
  415fc0:	b.eq	416018 <_obstack_memory_used@@Base+0x6e0>  // b.none
  415fc4:	cmp	x2, #0x0
  415fc8:	mov	w0, #0xffffffff            	// #-1
  415fcc:	cneg	w0, w0, eq  // eq = none
  415fd0:	ldp	x29, x30, [sp], #48
  415fd4:	ret
  415fd8:	cbnz	x6, 415fbc <_obstack_memory_used@@Base+0x684>
  415fdc:	orr	x3, x11, x3
  415fe0:	cbnz	x3, 415fbc <_obstack_memory_used@@Base+0x684>
  415fe4:	b	415fc4 <_obstack_memory_used@@Base+0x68c>
  415fe8:	orr	x5, x10, x5
  415fec:	cmp	x5, #0x0
  415ff0:	cset	w0, eq  // eq = none
  415ff4:	b	415f8c <_obstack_memory_used@@Base+0x654>
  415ff8:	mov	w0, #0x0                   	// #0
  415ffc:	cbz	x5, 415f98 <_obstack_memory_used@@Base+0x660>
  416000:	b	415fc4 <_obstack_memory_used@@Base+0x68c>
  416004:	mov	w0, #0x1                   	// #1
  416008:	bl	4161a8 <_obstack_memory_used@@Base+0x870>
  41600c:	mov	w0, #0xfffffffe            	// #-2
  416010:	ldp	x29, x30, [sp], #48
  416014:	ret
  416018:	cmp	x4, x6
  41601c:	b.gt	415fc4 <_obstack_memory_used@@Base+0x68c>
  416020:	b.lt	416058 <_obstack_memory_used@@Base+0x720>  // b.tstop
  416024:	cmp	x10, x11
  416028:	b.hi	415fc4 <_obstack_memory_used@@Base+0x68c>  // b.pmore
  41602c:	cset	w0, eq  // eq = none
  416030:	cmp	w0, #0x0
  416034:	ccmp	x8, x9, #0x0, ne  // ne = any
  416038:	b.hi	415fc4 <_obstack_memory_used@@Base+0x68c>  // b.pmore
  41603c:	cmp	x10, x11
  416040:	b.cc	416058 <_obstack_memory_used@@Base+0x720>  // b.lo, b.ul, b.last
  416044:	cmp	w0, #0x0
  416048:	mov	w0, #0x0                   	// #0
  41604c:	ccmp	x8, x9, #0x2, ne  // ne = any
  416050:	b.cs	415f98 <_obstack_memory_used@@Base+0x660>  // b.hs, b.nlast
  416054:	nop
  416058:	cmp	x2, #0x0
  41605c:	mov	w0, #0x1                   	// #1
  416060:	cneg	w0, w0, eq  // eq = none
  416064:	b	415f98 <_obstack_memory_used@@Base+0x660>
  416068:	stp	x29, x30, [sp, #-48]!
  41606c:	mov	x29, sp
  416070:	str	q0, [sp, #16]
  416074:	str	q1, [sp, #32]
  416078:	ldp	x8, x1, [sp, #16]
  41607c:	ldp	x9, x0, [sp, #32]
  416080:	mrs	x2, fpcr
  416084:	ubfx	x4, x1, #48, #15
  416088:	ubfx	x10, x1, #0, #48
  41608c:	lsr	x2, x1, #63
  416090:	mov	x5, #0x7fff                	// #32767
  416094:	mov	x6, x8
  416098:	cmp	x4, x5
  41609c:	ubfx	x11, x0, #0, #48
  4160a0:	ubfx	x7, x0, #48, #15
  4160a4:	lsr	x1, x0, #63
  4160a8:	mov	x3, x9
  4160ac:	b.eq	4160e4 <_obstack_memory_used@@Base+0x7ac>  // b.none
  4160b0:	cmp	x7, x5
  4160b4:	b.eq	4160f4 <_obstack_memory_used@@Base+0x7bc>  // b.none
  4160b8:	cbnz	x4, 416120 <_obstack_memory_used@@Base+0x7e8>
  4160bc:	orr	x6, x10, x8
  4160c0:	cmp	x6, #0x0
  4160c4:	cset	w0, eq  // eq = none
  4160c8:	cbnz	x7, 41610c <_obstack_memory_used@@Base+0x7d4>
  4160cc:	orr	x3, x11, x9
  4160d0:	cbnz	x3, 41610c <_obstack_memory_used@@Base+0x7d4>
  4160d4:	mov	w0, #0x0                   	// #0
  4160d8:	cbnz	x6, 416134 <_obstack_memory_used@@Base+0x7fc>
  4160dc:	ldp	x29, x30, [sp], #48
  4160e0:	ret
  4160e4:	orr	x0, x10, x8
  4160e8:	cbnz	x0, 416148 <_obstack_memory_used@@Base+0x810>
  4160ec:	cmp	x7, x4
  4160f0:	b.ne	416120 <_obstack_memory_used@@Base+0x7e8>  // b.any
  4160f4:	orr	x3, x11, x3
  4160f8:	cbnz	x3, 416148 <_obstack_memory_used@@Base+0x810>
  4160fc:	cbnz	x4, 41612c <_obstack_memory_used@@Base+0x7f4>
  416100:	orr	x6, x10, x6
  416104:	cmp	x6, #0x0
  416108:	cset	w0, eq  // eq = none
  41610c:	cbz	w0, 41612c <_obstack_memory_used@@Base+0x7f4>
  416110:	cmp	x1, #0x0
  416114:	csinv	w0, w0, wzr, ne  // ne = any
  416118:	ldp	x29, x30, [sp], #48
  41611c:	ret
  416120:	cbnz	x7, 41612c <_obstack_memory_used@@Base+0x7f4>
  416124:	orr	x3, x11, x3
  416128:	cbz	x3, 416134 <_obstack_memory_used@@Base+0x7fc>
  41612c:	cmp	x2, x1
  416130:	b.eq	41615c <_obstack_memory_used@@Base+0x824>  // b.none
  416134:	cmp	x2, #0x0
  416138:	mov	w0, #0xffffffff            	// #-1
  41613c:	cneg	w0, w0, eq  // eq = none
  416140:	ldp	x29, x30, [sp], #48
  416144:	ret
  416148:	mov	w0, #0x1                   	// #1
  41614c:	bl	4161a8 <_obstack_memory_used@@Base+0x870>
  416150:	mov	w0, #0x2                   	// #2
  416154:	ldp	x29, x30, [sp], #48
  416158:	ret
  41615c:	cmp	x4, x7
  416160:	b.gt	416134 <_obstack_memory_used@@Base+0x7fc>
  416164:	b.lt	416198 <_obstack_memory_used@@Base+0x860>  // b.tstop
  416168:	cmp	x10, x11
  41616c:	b.hi	416134 <_obstack_memory_used@@Base+0x7fc>  // b.pmore
  416170:	cset	w0, eq  // eq = none
  416174:	cmp	w0, #0x0
  416178:	ccmp	x8, x9, #0x0, ne  // ne = any
  41617c:	b.hi	416134 <_obstack_memory_used@@Base+0x7fc>  // b.pmore
  416180:	cmp	x10, x11
  416184:	b.cc	416198 <_obstack_memory_used@@Base+0x860>  // b.lo, b.ul, b.last
  416188:	cmp	w0, #0x0
  41618c:	mov	w0, #0x0                   	// #0
  416190:	ccmp	x8, x9, #0x2, ne  // ne = any
  416194:	b.cs	4160dc <_obstack_memory_used@@Base+0x7a4>  // b.hs, b.nlast
  416198:	cmp	x2, #0x0
  41619c:	mov	w0, #0x1                   	// #1
  4161a0:	cneg	w0, w0, eq  // eq = none
  4161a4:	b	4160dc <_obstack_memory_used@@Base+0x7a4>
  4161a8:	tbz	w0, #0, 4161b8 <_obstack_memory_used@@Base+0x880>
  4161ac:	movi	v1.2s, #0x0
  4161b0:	fdiv	s0, s1, s1
  4161b4:	mrs	x1, fpsr
  4161b8:	tbz	w0, #1, 4161cc <_obstack_memory_used@@Base+0x894>
  4161bc:	fmov	s1, #1.000000000000000000e+00
  4161c0:	movi	v2.2s, #0x0
  4161c4:	fdiv	s0, s1, s2
  4161c8:	mrs	x1, fpsr
  4161cc:	tbz	w0, #2, 4161ec <_obstack_memory_used@@Base+0x8b4>
  4161d0:	mov	w2, #0xc5ae                	// #50606
  4161d4:	mov	w1, #0x7f7fffff            	// #2139095039
  4161d8:	movk	w2, #0x749d, lsl #16
  4161dc:	fmov	s1, w1
  4161e0:	fmov	s2, w2
  4161e4:	fadd	s0, s1, s2
  4161e8:	mrs	x1, fpsr
  4161ec:	tbz	w0, #3, 4161fc <_obstack_memory_used@@Base+0x8c4>
  4161f0:	movi	v1.2s, #0x80, lsl #16
  4161f4:	fmul	s0, s1, s1
  4161f8:	mrs	x1, fpsr
  4161fc:	tbz	w0, #4, 416214 <_obstack_memory_used@@Base+0x8dc>
  416200:	mov	w0, #0x7f7fffff            	// #2139095039
  416204:	fmov	s2, #1.000000000000000000e+00
  416208:	fmov	s1, w0
  41620c:	fsub	s0, s1, s2
  416210:	mrs	x0, fpsr
  416214:	ret
  416218:	stp	x29, x30, [sp, #-64]!
  41621c:	mov	x29, sp
  416220:	stp	x19, x20, [sp, #16]
  416224:	adrp	x20, 42c000 <_obstack_memory_used@@Base+0x166c8>
  416228:	add	x20, x20, #0xde0
  41622c:	stp	x21, x22, [sp, #32]
  416230:	adrp	x21, 42c000 <_obstack_memory_used@@Base+0x166c8>
  416234:	add	x21, x21, #0xdd8
  416238:	sub	x20, x20, x21
  41623c:	mov	w22, w0
  416240:	stp	x23, x24, [sp, #48]
  416244:	mov	x23, x1
  416248:	mov	x24, x2
  41624c:	bl	4026d8 <mbrtowc@plt-0x38>
  416250:	cmp	xzr, x20, asr #3
  416254:	b.eq	416280 <_obstack_memory_used@@Base+0x948>  // b.none
  416258:	asr	x20, x20, #3
  41625c:	mov	x19, #0x0                   	// #0
  416260:	ldr	x3, [x21, x19, lsl #3]
  416264:	mov	x2, x24
  416268:	add	x19, x19, #0x1
  41626c:	mov	x1, x23
  416270:	mov	w0, w22
  416274:	blr	x3
  416278:	cmp	x20, x19
  41627c:	b.ne	416260 <_obstack_memory_used@@Base+0x928>  // b.any
  416280:	ldp	x19, x20, [sp, #16]
  416284:	ldp	x21, x22, [sp, #32]
  416288:	ldp	x23, x24, [sp, #48]
  41628c:	ldp	x29, x30, [sp], #64
  416290:	ret
  416294:	nop
  416298:	ret
  41629c:	nop
  4162a0:	adrp	x2, 42d000 <_obstack_memory_used@@Base+0x176c8>
  4162a4:	mov	x1, #0x0                   	// #0
  4162a8:	ldr	x2, [x2, #936]
  4162ac:	b	4027f0 <__cxa_atexit@plt>

Disassembly of section .fini:

00000000004162b0 <.fini>:
  4162b0:	stp	x29, x30, [sp, #-16]!
  4162b4:	mov	x29, sp
  4162b8:	ldp	x29, x30, [sp], #16
  4162bc:	ret
