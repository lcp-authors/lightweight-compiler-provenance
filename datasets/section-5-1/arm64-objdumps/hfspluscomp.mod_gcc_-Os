
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//hfspluscomp.mod_gcc_-Os:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <grub_mod_init-0x560>:
   0:	stp	x29, x30, [sp, #-144]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	adrp	x0, 0 <grub_mod_init-0x560>
  14:	stp	x21, x22, [sp, #32]
  18:	ldr	x0, [x0]
  1c:	ldp	x2, x3, [x0]
  20:	stp	x2, x3, [sp, #104]
  24:	ldp	x2, x3, [x0, #16]
  28:	stp	x2, x3, [sp, #120]
  2c:	ldrh	w0, [x0, #32]
  30:	strh	w0, [sp, #136]
  34:	ldr	x0, [x19, #136]
  38:	cbnz	x0, 90 <grub_mod_init-0x4d0>
  3c:	ldr	w0, [x19, #152]
  40:	adrp	x1, 0 <grub_mod_init-0x560>
  44:	str	w0, [sp, #80]
  48:	add	x4, sp, #0x48
  4c:	mov	x0, #0x11                  	// #17
  50:	str	x0, [sp, #96]
  54:	ldr	x2, [x1]
  58:	add	x0, sp, #0x68
  5c:	str	x0, [sp, #88]
  60:	add	x3, sp, #0x40
  64:	ldr	x0, [x19]
  68:	add	x1, sp, #0x50
  6c:	add	x0, x0, #0x3c0
  70:	bl	0 <grub_hfsplus_btree_search>
  74:	mov	w20, w0
  78:	cbnz	w0, 84 <grub_mod_init-0x4dc>
  7c:	ldr	x0, [sp, #64]
  80:	cbnz	x0, 98 <grub_mod_init-0x4c8>
  84:	adrp	x0, 0 <grub_mod_init-0x560>
  88:	ldr	x0, [x0]
  8c:	str	wzr, [x0]
  90:	mov	w20, #0x0                   	// #0
  94:	b	168 <grub_mod_init-0x3f8>
  98:	ldr	x2, [x19]
  9c:	ldr	x1, [sp, #72]
  a0:	ldr	x2, [x2, #968]
  a4:	ubfiz	x3, x1, #1, #32
  a8:	add	x3, x3, #0x2
  ac:	cmp	x2, x3
  b0:	sub	x3, x2, #0x2
  b4:	csel	x1, x1, xzr, cs  // cs = hs, nlast
  b8:	sub	x2, x2, #0xe
  bc:	sub	x1, x3, w1, uxtw #1
  c0:	ldrh	w1, [x0, x1]
  c4:	lsr	w3, w1, #8
  c8:	orr	w1, w3, w1, lsl #8
  cc:	and	w21, w1, #0xffff
  d0:	cmp	x2, w1, uxth
  d4:	csel	w21, w21, wzr, cs  // cs = hs, nlast
  d8:	add	x21, x0, w21, uxth
  dc:	add	x22, x21, #0x30
  e0:	ldrb	w1, [x21, #51]
  e4:	cmp	w1, #0x10
  e8:	b.ne	f8 <grub_mod_init-0x468>  // b.any
  ec:	ldr	x1, [x22, #8]
  f0:	tst	x1, #0xf0ffffffffffffff
  f4:	b.ne	100 <grub_mod_init-0x460>  // b.any
  f8:	bl	0 <grub_free>
  fc:	b	168 <grub_mod_init-0x3f8>
 100:	ldr	w2, [x21, #64]
 104:	mov	w1, #0x7066                	// #28774
 108:	movk	w1, #0x636d, lsl #16
 10c:	cmp	w2, w1
 110:	b.ne	f8 <grub_mod_init-0x468>  // b.any
 114:	ldp	w2, w1, [x21, #68]
 118:	str	x1, [x19, #136]
 11c:	cmp	w2, #0x4
 120:	b.ne	220 <grub_mod_init-0x340>  // b.any
 124:	mov	w0, #0x2                   	// #2
 128:	str	w0, [x19, #160]
 12c:	add	x5, sp, #0x3c
 130:	mov	x0, x19
 134:	mov	x4, #0x4                   	// #4
 138:	mov	x3, #0x104                 	// #260
 13c:	mov	x2, #0x0                   	// #0
 140:	mov	x1, #0x0                   	// #0
 144:	bl	0 <grub_hfsplus_read_file>
 148:	cmp	x0, #0x4
 14c:	b.eq	17c <grub_mod_init-0x3e4>  // b.none
 150:	ldr	x0, [sp, #64]
 154:	str	wzr, [x19, #160]
 158:	bl	0 <grub_free>
 15c:	adrp	x0, 0 <grub_mod_init-0x560>
 160:	ldr	x0, [x0]
 164:	str	wzr, [x0]
 168:	mov	w0, w20
 16c:	ldp	x19, x20, [sp, #16]
 170:	ldp	x21, x22, [sp, #32]
 174:	ldp	x29, x30, [sp], #144
 178:	ret
 17c:	ldr	w0, [sp, #60]
 180:	str	w0, [x19, #196]
 184:	ubfiz	x0, x0, #3, #32
 188:	bl	0 <grub_malloc>
 18c:	str	x0, [x19, #184]
 190:	mov	x5, x0
 194:	cbnz	x0, 1b4 <grub_mod_init-0x3ac>
 198:	ldr	x0, [sp, #64]
 19c:	str	wzr, [x19, #160]
 1a0:	bl	0 <grub_free>
 1a4:	adrp	x0, 0 <grub_mod_init-0x560>
 1a8:	ldr	x0, [x0]
 1ac:	ldr	w20, [x0]
 1b0:	b	168 <grub_mod_init-0x3f8>
 1b4:	ldr	w4, [x19, #196]
 1b8:	mov	x1, #0x0                   	// #0
 1bc:	mov	x0, x19
 1c0:	mov	x3, #0x108                 	// #264
 1c4:	mov	x2, #0x0                   	// #0
 1c8:	lsl	x4, x4, #3
 1cc:	bl	0 <grub_hfsplus_read_file>
 1d0:	ldr	w1, [x19, #196]
 1d4:	cmp	x0, x1, lsl #3
 1d8:	b.eq	1f0 <grub_mod_init-0x370>  // b.none
 1dc:	ldr	x0, [sp, #64]
 1e0:	str	wzr, [x19, #160]
 1e4:	bl	0 <grub_free>
 1e8:	ldr	x0, [x19, #184]
 1ec:	b	158 <grub_mod_init-0x408>
 1f0:	mov	w0, #0xffffffff            	// #-1
 1f4:	str	w0, [x19, #192]
 1f8:	mov	x0, #0x10000               	// #65536
 1fc:	bl	0 <grub_malloc>
 200:	str	x0, [x19, #168]
 204:	ldr	x0, [sp, #64]
 208:	bl	0 <grub_free>
 20c:	ldr	x0, [x19, #168]
 210:	cbnz	x0, 168 <grub_mod_init-0x3f8>
 214:	str	wzr, [x19, #160]
 218:	ldr	x0, [x19, #184]
 21c:	b	1a0 <grub_mod_init-0x3c0>
 220:	cmp	w2, #0x3
 224:	b.ne	f8 <grub_mod_init-0x468>  // b.any
 228:	mov	x0, x1
 22c:	bl	0 <grub_malloc>
 230:	str	x0, [x19, #168]
 234:	mov	x3, x0
 238:	cbz	x0, 1a4 <grub_mod_init-0x3bc>
 23c:	ldr	x1, [x22, #8]
 240:	add	x0, x21, #0x50
 244:	ldr	x4, [x19, #136]
 248:	rev	x1, x1
 24c:	sub	x1, x1, #0x10
 250:	mov	x2, #0x0                   	// #0
 254:	bl	0 <grub_zlib_decompress>
 258:	ldr	x1, [x19, #136]
 25c:	cmp	x0, x1
 260:	b.eq	28c <grub_mod_init-0x2d4>  // b.none
 264:	adrp	x0, 0 <grub_mod_init-0x560>
 268:	ldr	x19, [x0]
 26c:	ldr	w0, [x19]
 270:	cbnz	w0, 284 <grub_mod_init-0x2dc>
 274:	adrp	x0, 0 <grub_mod_init-0x560>
 278:	ldr	x1, [x0]
 27c:	mov	w0, #0x1a                  	// #26
 280:	bl	0 <grub_error>
 284:	ldr	w20, [x19]
 288:	b	168 <grub_mod_init-0x3f8>
 28c:	mov	w0, #0x1                   	// #1
 290:	str	w0, [x19, #160]
 294:	b	168 <grub_mod_init-0x3f8>
	...
 2b8:	stp	x29, x30, [sp, #-32]!
 2bc:	mov	x29, sp
 2c0:	stp	x19, x20, [sp, #16]
 2c4:	mov	x19, x0
 2c8:	ldr	w0, [x0, #4]
 2cc:	mov	x20, x1
 2d0:	ldr	w1, [x1]
 2d4:	rev	w0, w0
 2d8:	cmp	w1, w0
 2dc:	b.cc	338 <grub_mod_init-0x228>  // b.lo, b.ul, b.last
 2e0:	b.hi	340 <grub_mod_init-0x220>  // b.pmore
 2e4:	ldrb	w1, [x19, #13]
 2e8:	ldrh	w0, [x19, #12]
 2ec:	ldr	x2, [x20, #16]
 2f0:	orr	w0, w1, w0, lsl #8
 2f4:	and	x1, x0, #0xffff
 2f8:	cmp	x2, w0, uxth
 2fc:	add	x0, x19, #0xe
 300:	csel	x2, x2, x1, ls  // ls = plast
 304:	ldr	x1, [x20, #8]
 308:	lsl	x2, x2, #1
 30c:	bl	0 <grub_memcmp>
 310:	cbnz	w0, 32c <grub_mod_init-0x234>
 314:	ldrb	w1, [x19, #13]
 318:	ldrh	w0, [x19, #12]
 31c:	orr	w0, w1, w0, lsl #8
 320:	ldr	x1, [x20, #16]
 324:	and	w0, w0, #0xffff
 328:	sub	w0, w0, w1
 32c:	ldp	x19, x20, [sp, #16]
 330:	ldp	x29, x30, [sp], #32
 334:	ret
 338:	mov	w0, #0x1                   	// #1
 33c:	b	32c <grub_mod_init-0x234>
 340:	mov	w0, #0xffffffff            	// #-1
 344:	b	32c <grub_mod_init-0x234>
 348:	stp	x29, x30, [sp, #-128]!
 34c:	mov	x29, sp
 350:	stp	x19, x20, [sp, #16]
 354:	mov	x20, x1
 358:	mov	x19, x2
 35c:	stp	x21, x22, [sp, #32]
 360:	mov	x22, x3
 364:	stp	x23, x24, [sp, #48]
 368:	stp	x25, x26, [sp, #64]
 36c:	stp	x27, x28, [sp, #80]
 370:	mov	x28, x0
 374:	ldr	w0, [x0, #160]
 378:	cmp	w0, #0x1
 37c:	b.ne	530 <grub_mod_init-0x30>  // b.any
 380:	ldr	x1, [x28, #168]
 384:	mov	x0, x3
 388:	add	x1, x1, x20
 38c:	bl	0 <grub_memmove>
 390:	adrp	x0, 0 <grub_mod_init-0x560>
 394:	ldr	x0, [x0]
 398:	ldr	x4, [x0]
 39c:	cbz	x4, 3b8 <grub_mod_init-0x1a8>
 3a0:	ldr	x3, [x28, #176]
 3a4:	cbz	x3, 3b8 <grub_mod_init-0x1a8>
 3a8:	mov	w2, w19
 3ac:	mov	w1, #0x0                   	// #0
 3b0:	mov	x0, #0x0                   	// #0
 3b4:	blr	x4
 3b8:	mov	x0, x19
 3bc:	ldp	x19, x20, [sp, #16]
 3c0:	ldp	x21, x22, [sp, #32]
 3c4:	ldp	x23, x24, [sp, #48]
 3c8:	ldp	x25, x26, [sp, #64]
 3cc:	ldp	x27, x28, [sp, #80]
 3d0:	ldp	x29, x30, [sp], #128
 3d4:	ret
 3d8:	and	x0, x20, #0xffff
 3dc:	sub	x21, x25, w20, uxth
 3e0:	str	x0, [sp, #104]
 3e4:	cmp	x21, x23
 3e8:	ldr	w0, [x28, #192]
 3ec:	lsr	x24, x20, #16
 3f0:	csel	x21, x21, x23, ls  // ls = plast
 3f4:	cmp	w24, w0
 3f8:	b.eq	4d8 <grub_mod_init-0x88>  // b.none
 3fc:	ldr	x0, [x28, #184]
 400:	ubfiz	x1, x24, #3, #32
 404:	add	x0, x0, x1
 408:	ldr	w4, [x0, #4]
 40c:	cbnz	x26, 430 <grub_mod_init-0x130>
 410:	mov	x0, #0x10000               	// #65536
 414:	str	x1, [sp, #112]
 418:	str	w4, [sp, #124]
 41c:	bl	0 <grub_malloc>
 420:	ldr	w4, [sp, #124]
 424:	mov	x26, x0
 428:	ldr	x1, [sp, #112]
 42c:	cbz	x0, 470 <grub_mod_init-0xf0>
 430:	ldr	x0, [x28, #184]
 434:	mov	w4, w4
 438:	mov	x5, x26
 43c:	mov	x2, #0x0                   	// #0
 440:	str	x4, [sp, #112]
 444:	ldr	w3, [x0, x1]
 448:	mov	x1, #0x0                   	// #0
 44c:	mov	x0, x28
 450:	add	w3, w3, #0x104
 454:	bl	0 <grub_hfsplus_read_file>
 458:	ldr	x4, [sp, #112]
 45c:	mov	x1, x0
 460:	cmp	x0, x4
 464:	b.eq	478 <grub_mod_init-0xe8>  // b.none
 468:	mov	x0, x26
 46c:	bl	0 <grub_free>
 470:	mov	x0, #0xffffffffffffffff    	// #-1
 474:	b	3bc <grub_mod_init-0x1a4>
 478:	ldr	x2, [x28, #136]
 47c:	and	x4, x20, #0xfffffffffffeffff
 480:	ldr	x3, [x28, #168]
 484:	sub	x4, x2, x4
 488:	mov	x0, #0xffff                	// #65535
 48c:	cmp	x4, x0
 490:	csel	x4, x4, x25, ls  // ls = plast
 494:	mov	x0, x26
 498:	mov	x2, #0x0                   	// #0
 49c:	str	x4, [sp, #112]
 4a0:	bl	0 <grub_zlib_decompress>
 4a4:	ldr	x4, [sp, #112]
 4a8:	cmp	x0, x4
 4ac:	b.eq	4d4 <grub_mod_init-0x8c>  // b.none
 4b0:	adrp	x0, 0 <grub_mod_init-0x560>
 4b4:	ldr	x0, [x0]
 4b8:	ldr	w0, [x0]
 4bc:	cbnz	w0, 468 <grub_mod_init-0xf8>
 4c0:	adrp	x0, 0 <grub_mod_init-0x560>
 4c4:	ldr	x1, [x0]
 4c8:	mov	w0, #0x1a                  	// #26
 4cc:	bl	0 <grub_error>
 4d0:	b	468 <grub_mod_init-0xf8>
 4d4:	str	w24, [x28, #192]
 4d8:	ldr	x0, [sp, #104]
 4dc:	mov	x2, x21
 4e0:	ldr	x1, [x28, #168]
 4e4:	add	x1, x1, x0
 4e8:	mov	x0, x22
 4ec:	bl	0 <grub_memmove>
 4f0:	ldr	x0, [x27]
 4f4:	ldr	x4, [x0]
 4f8:	cbz	x4, 514 <grub_mod_init-0x4c>
 4fc:	ldr	x3, [x28, #176]
 500:	cbz	x3, 514 <grub_mod_init-0x4c>
 504:	mov	w2, w21
 508:	mov	w1, #0x0                   	// #0
 50c:	mov	x0, #0x0                   	// #0
 510:	blr	x4
 514:	add	x22, x22, x21
 518:	add	x20, x20, x21
 51c:	sub	x23, x23, x21
 520:	cbnz	x23, 3d8 <grub_mod_init-0x188>
 524:	mov	x0, x26
 528:	bl	0 <grub_free>
 52c:	b	3b8 <grub_mod_init-0x1a8>
 530:	mov	x23, x2
 534:	mov	x26, #0x0                   	// #0
 538:	mov	x25, #0x10000               	// #65536
 53c:	adrp	x27, 0 <grub_mod_init-0x560>
 540:	b	520 <grub_mod_init-0x40>
 544:	nop
	...

0000000000000560 <grub_mod_init>:
 560:	adrp	x0, 0 <grub_mod_init-0x560>
 564:	adrp	x1, 0 <grub_mod_init-0x560>
 568:	ldr	x0, [x0]
 56c:	ldr	x1, [x1]
 570:	str	x1, [x0]
 574:	adrp	x0, 0 <grub_mod_init-0x560>
 578:	adrp	x1, 0 <grub_mod_init-0x560>
 57c:	ldr	x0, [x0]
 580:	ldr	x1, [x1]
 584:	str	x1, [x0]
 588:	ret
 58c:	nop
	...

00000000000005b0 <grub_mod_fini>:
 5b0:	adrp	x0, 0 <grub_mod_init-0x560>
 5b4:	ldr	x0, [x0]
 5b8:	str	xzr, [x0]
 5bc:	adrp	x0, 0 <grub_mod_init-0x560>
 5c0:	ldr	x0, [x0]
 5c4:	str	xzr, [x0]
 5c8:	ret
 5cc:	nop
	...
