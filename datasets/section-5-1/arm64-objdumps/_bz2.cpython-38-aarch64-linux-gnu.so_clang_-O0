
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//_bz2.cpython-38-aarch64-linux-gnu.so_clang_-O0:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000001680 <.init>:
    1680:	stp	x29, x30, [sp, #-16]!
    1684:	mov	x29, sp
    1688:	bl	1990 <PyThread_free_lock@plt+0x10>
    168c:	ldp	x29, x30, [sp], #16
    1690:	ret

Disassembly of section .plt:

00000000000016a0 <memcpy@plt-0x20>:
    16a0:	stp	x16, x30, [sp, #-16]!
    16a4:	adrp	x16, 13000 <PyInit__bz2@@Base+0x1159c>
    16a8:	ldr	x17, [x16, #4088]
    16ac:	add	x16, x16, #0xff8
    16b0:	br	x17
    16b4:	nop
    16b8:	nop
    16bc:	nop

00000000000016c0 <memcpy@plt>:
    16c0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    16c4:	ldr	x17, [x16]
    16c8:	add	x16, x16, #0x0
    16cc:	br	x17

00000000000016d0 <memmove@plt>:
    16d0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    16d4:	ldr	x17, [x16, #8]
    16d8:	add	x16, x16, #0x8
    16dc:	br	x17

00000000000016e0 <_PyBytes_Resize@plt>:
    16e0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    16e4:	ldr	x17, [x16, #16]
    16e8:	add	x16, x16, #0x10
    16ec:	br	x17

00000000000016f0 <PyEval_RestoreThread@plt>:
    16f0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    16f4:	ldr	x17, [x16, #24]
    16f8:	add	x16, x16, #0x18
    16fc:	br	x17

0000000000001700 <PyMem_Free@plt>:
    1700:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    1704:	ldr	x17, [x16, #32]
    1708:	add	x16, x16, #0x20
    170c:	br	x17

0000000000001710 <PyBuffer_Release@plt>:
    1710:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    1714:	ldr	x17, [x16, #40]
    1718:	add	x16, x16, #0x28
    171c:	br	x17

0000000000001720 <__cxa_finalize@plt>:
    1720:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    1724:	ldr	x17, [x16, #48]
    1728:	add	x16, x16, #0x30
    172c:	br	x17

0000000000001730 <PyMem_RawMalloc@plt>:
    1730:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    1734:	ldr	x17, [x16, #56]
    1738:	add	x16, x16, #0x38
    173c:	br	x17

0000000000001740 <PyBuffer_IsContiguous@plt>:
    1740:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    1744:	ldr	x17, [x16, #64]
    1748:	add	x16, x16, #0x40
    174c:	br	x17

0000000000001750 <PyBytes_FromStringAndSize@plt>:
    1750:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    1754:	ldr	x17, [x16, #72]
    1758:	add	x16, x16, #0x48
    175c:	br	x17

0000000000001760 <_Py_Dealloc@plt>:
    1760:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    1764:	ldr	x17, [x16, #80]
    1768:	add	x16, x16, #0x50
    176c:	br	x17

0000000000001770 <PyErr_NoMemory@plt>:
    1770:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    1774:	ldr	x17, [x16, #88]
    1778:	add	x16, x16, #0x58
    177c:	br	x17

0000000000001780 <PyThread_acquire_lock@plt>:
    1780:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    1784:	ldr	x17, [x16, #96]
    1788:	add	x16, x16, #0x60
    178c:	br	x17

0000000000001790 <_PyArg_UnpackKeywords@plt>:
    1790:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    1794:	ldr	x17, [x16, #104]
    1798:	add	x16, x16, #0x68
    179c:	br	x17

00000000000017a0 <PyErr_SetString@plt>:
    17a0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    17a4:	ldr	x17, [x16, #112]
    17a8:	add	x16, x16, #0x70
    17ac:	br	x17

00000000000017b0 <BZ2_bzDecompressInit@plt>:
    17b0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    17b4:	ldr	x17, [x16, #120]
    17b8:	add	x16, x16, #0x78
    17bc:	br	x17

00000000000017c0 <BZ2_bzDecompressEnd@plt>:
    17c0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    17c4:	ldr	x17, [x16, #128]
    17c8:	add	x16, x16, #0x80
    17cc:	br	x17

00000000000017d0 <PyMem_Realloc@plt>:
    17d0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    17d4:	ldr	x17, [x16, #136]
    17d8:	add	x16, x16, #0x88
    17dc:	br	x17

00000000000017e0 <PyErr_SetNone@plt>:
    17e0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    17e4:	ldr	x17, [x16, #144]
    17e8:	add	x16, x16, #0x90
    17ec:	br	x17

00000000000017f0 <memset@plt>:
    17f0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    17f4:	ldr	x17, [x16, #152]
    17f8:	add	x16, x16, #0x98
    17fc:	br	x17

0000000000001800 <BZ2_bzCompressInit@plt>:
    1800:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    1804:	ldr	x17, [x16, #160]
    1808:	add	x16, x16, #0xa0
    180c:	br	x17

0000000000001810 <PyType_Ready@plt>:
    1810:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    1814:	ldr	x17, [x16, #168]
    1818:	add	x16, x16, #0xa8
    181c:	br	x17

0000000000001820 <PyLong_AsSsize_t@plt>:
    1820:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    1824:	ldr	x17, [x16, #176]
    1828:	add	x16, x16, #0xb0
    182c:	br	x17

0000000000001830 <_PyArg_BadArgument@plt>:
    1830:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    1834:	ldr	x17, [x16, #184]
    1838:	add	x16, x16, #0xb8
    183c:	br	x17

0000000000001840 <BZ2_bzCompressEnd@plt>:
    1840:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    1844:	ldr	x17, [x16, #192]
    1848:	add	x16, x16, #0xc0
    184c:	br	x17

0000000000001850 <_PyArg_NoPositional@plt>:
    1850:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    1854:	ldr	x17, [x16, #200]
    1858:	add	x16, x16, #0xc8
    185c:	br	x17

0000000000001860 <__gmon_start__@plt>:
    1860:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    1864:	ldr	x17, [x16, #208]
    1868:	add	x16, x16, #0xd0
    186c:	br	x17

0000000000001870 <_PyArg_CheckPositional@plt>:
    1870:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    1874:	ldr	x17, [x16, #216]
    1878:	add	x16, x16, #0xd8
    187c:	br	x17

0000000000001880 <PyErr_Occurred@plt>:
    1880:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    1884:	ldr	x17, [x16, #224]
    1888:	add	x16, x16, #0xe0
    188c:	br	x17

0000000000001890 <PyModule_Create2@plt>:
    1890:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    1894:	ldr	x17, [x16, #232]
    1898:	add	x16, x16, #0xe8
    189c:	br	x17

00000000000018a0 <BZ2_bzCompress@plt>:
    18a0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    18a4:	ldr	x17, [x16, #240]
    18a8:	add	x16, x16, #0xf0
    18ac:	br	x17

00000000000018b0 <PyMem_RawFree@plt>:
    18b0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    18b4:	ldr	x17, [x16, #248]
    18b8:	add	x16, x16, #0xf8
    18bc:	br	x17

00000000000018c0 <PyThread_allocate_lock@plt>:
    18c0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    18c4:	ldr	x17, [x16, #256]
    18c8:	add	x16, x16, #0x100
    18cc:	br	x17

00000000000018d0 <BZ2_bzDecompress@plt>:
    18d0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    18d4:	ldr	x17, [x16, #264]
    18d8:	add	x16, x16, #0x108
    18dc:	br	x17

00000000000018e0 <PyThread_release_lock@plt>:
    18e0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    18e4:	ldr	x17, [x16, #272]
    18e8:	add	x16, x16, #0x110
    18ec:	br	x17

00000000000018f0 <PyObject_GetBuffer@plt>:
    18f0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    18f4:	ldr	x17, [x16, #280]
    18f8:	add	x16, x16, #0x118
    18fc:	br	x17

0000000000001900 <PyEval_SaveThread@plt>:
    1900:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    1904:	ldr	x17, [x16, #288]
    1908:	add	x16, x16, #0x120
    190c:	br	x17

0000000000001910 <PyModule_AddObject@plt>:
    1910:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    1914:	ldr	x17, [x16, #296]
    1918:	add	x16, x16, #0x128
    191c:	br	x17

0000000000001920 <PyType_IsSubtype@plt>:
    1920:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    1924:	ldr	x17, [x16, #304]
    1928:	add	x16, x16, #0x130
    192c:	br	x17

0000000000001930 <PyErr_Format@plt>:
    1930:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    1934:	ldr	x17, [x16, #312]
    1938:	add	x16, x16, #0x138
    193c:	br	x17

0000000000001940 <PyNumber_Index@plt>:
    1940:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    1944:	ldr	x17, [x16, #320]
    1948:	add	x16, x16, #0x140
    194c:	br	x17

0000000000001950 <_PyArg_NoKeywords@plt>:
    1950:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    1954:	ldr	x17, [x16, #328]
    1958:	add	x16, x16, #0x148
    195c:	br	x17

0000000000001960 <_PyLong_AsInt@plt>:
    1960:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    1964:	ldr	x17, [x16, #336]
    1968:	add	x16, x16, #0x150
    196c:	br	x17

0000000000001970 <PyMem_Malloc@plt>:
    1970:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    1974:	ldr	x17, [x16, #344]
    1978:	add	x16, x16, #0x158
    197c:	br	x17

0000000000001980 <PyThread_free_lock@plt>:
    1980:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    1984:	ldr	x17, [x16, #352]
    1988:	add	x16, x16, #0x160
    198c:	br	x17

Disassembly of section .text:

0000000000001990 <PyInit__bz2@@Base-0xd4>:
    1990:	adrp	x0, 13000 <PyInit__bz2@@Base+0x1159c>
    1994:	ldr	x0, [x0, #4040]
    1998:	cbz	x0, 19a0 <PyThread_free_lock@plt+0x20>
    199c:	b	1860 <__gmon_start__@plt>
    19a0:	ret
    19a4:	nop
    19a8:	adrp	x0, 14000 <PyInit__bz2@@Base+0x1259c>
    19ac:	add	x0, x0, #0x698
    19b0:	adrp	x1, 14000 <PyInit__bz2@@Base+0x1259c>
    19b4:	add	x1, x1, #0x698
    19b8:	cmp	x1, x0
    19bc:	b.eq	19d4 <PyThread_free_lock@plt+0x54>  // b.none
    19c0:	adrp	x1, 13000 <PyInit__bz2@@Base+0x1159c>
    19c4:	ldr	x1, [x1, #3976]
    19c8:	cbz	x1, 19d4 <PyThread_free_lock@plt+0x54>
    19cc:	mov	x16, x1
    19d0:	br	x16
    19d4:	ret
    19d8:	adrp	x0, 14000 <PyInit__bz2@@Base+0x1259c>
    19dc:	add	x0, x0, #0x698
    19e0:	adrp	x1, 14000 <PyInit__bz2@@Base+0x1259c>
    19e4:	add	x1, x1, #0x698
    19e8:	sub	x1, x1, x0
    19ec:	lsr	x2, x1, #63
    19f0:	add	x1, x2, x1, asr #3
    19f4:	cmp	xzr, x1, asr #1
    19f8:	asr	x1, x1, #1
    19fc:	b.eq	1a14 <PyThread_free_lock@plt+0x94>  // b.none
    1a00:	adrp	x2, 13000 <PyInit__bz2@@Base+0x1159c>
    1a04:	ldr	x2, [x2, #4064]
    1a08:	cbz	x2, 1a14 <PyThread_free_lock@plt+0x94>
    1a0c:	mov	x16, x2
    1a10:	br	x16
    1a14:	ret
    1a18:	stp	x29, x30, [sp, #-32]!
    1a1c:	mov	x29, sp
    1a20:	str	x19, [sp, #16]
    1a24:	adrp	x19, 14000 <PyInit__bz2@@Base+0x1259c>
    1a28:	ldrb	w0, [x19, #1688]
    1a2c:	cbnz	w0, 1a54 <PyThread_free_lock@plt+0xd4>
    1a30:	adrp	x0, 13000 <PyInit__bz2@@Base+0x1159c>
    1a34:	ldr	x0, [x0, #3992]
    1a38:	cbz	x0, 1a48 <PyThread_free_lock@plt+0xc8>
    1a3c:	adrp	x0, 14000 <PyInit__bz2@@Base+0x1259c>
    1a40:	ldr	x0, [x0, #360]
    1a44:	bl	1720 <__cxa_finalize@plt>
    1a48:	bl	19a8 <PyThread_free_lock@plt+0x28>
    1a4c:	mov	w0, #0x1                   	// #1
    1a50:	strb	w0, [x19, #1688]
    1a54:	ldr	x19, [sp, #16]
    1a58:	ldp	x29, x30, [sp], #32
    1a5c:	ret
    1a60:	b	19d8 <PyThread_free_lock@plt+0x58>

0000000000001a64 <PyInit__bz2@@Base>:
    1a64:	sub	sp, sp, #0x30
    1a68:	stp	x29, x30, [sp, #32]
    1a6c:	add	x29, sp, #0x20
    1a70:	adrp	x8, 14000 <PyInit__bz2@@Base+0x1259c>
    1a74:	add	x8, x8, #0x170
    1a78:	adrp	x9, 14000 <PyInit__bz2@@Base+0x1259c>
    1a7c:	add	x9, x9, #0x310
    1a80:	mov	x0, x8
    1a84:	str	x8, [sp, #8]
    1a88:	str	x9, [sp]
    1a8c:	bl	1810 <PyType_Ready@plt>
    1a90:	cmp	w0, #0x0
    1a94:	cset	w10, ge  // ge = tcont
    1a98:	tbnz	w10, #0, 1aa8 <PyInit__bz2@@Base+0x44>
    1a9c:	mov	x8, xzr
    1aa0:	stur	x8, [x29, #-8]
    1aa4:	b	1b34 <PyInit__bz2@@Base+0xd0>
    1aa8:	ldr	x0, [sp]
    1aac:	bl	1810 <PyType_Ready@plt>
    1ab0:	cmp	w0, #0x0
    1ab4:	cset	w8, ge  // ge = tcont
    1ab8:	tbnz	w8, #0, 1ac8 <PyInit__bz2@@Base+0x64>
    1abc:	mov	x8, xzr
    1ac0:	stur	x8, [x29, #-8]
    1ac4:	b	1b34 <PyInit__bz2@@Base+0xd0>
    1ac8:	adrp	x0, 14000 <PyInit__bz2@@Base+0x1259c>
    1acc:	add	x0, x0, #0x4b0
    1ad0:	mov	w1, #0x3f5                 	// #1013
    1ad4:	bl	1890 <PyModule_Create2@plt>
    1ad8:	str	x0, [sp, #16]
    1adc:	ldr	x8, [sp, #16]
    1ae0:	cbnz	x8, 1af0 <PyInit__bz2@@Base+0x8c>
    1ae4:	mov	x8, xzr
    1ae8:	stur	x8, [x29, #-8]
    1aec:	b	1b34 <PyInit__bz2@@Base+0xd0>
    1af0:	ldr	x0, [sp, #8]
    1af4:	bl	1b44 <PyInit__bz2@@Base+0xe0>
    1af8:	ldr	x0, [sp, #16]
    1afc:	adrp	x1, 3000 <PyInit__bz2@@Base+0x159c>
    1b00:	add	x1, x1, #0x96d
    1b04:	ldr	x2, [sp, #8]
    1b08:	bl	1910 <PyModule_AddObject@plt>
    1b0c:	ldr	x8, [sp]
    1b10:	mov	x0, x8
    1b14:	bl	1b44 <PyInit__bz2@@Base+0xe0>
    1b18:	ldr	x0, [sp, #16]
    1b1c:	adrp	x1, 3000 <PyInit__bz2@@Base+0x159c>
    1b20:	add	x1, x1, #0xba2
    1b24:	ldr	x2, [sp]
    1b28:	bl	1910 <PyModule_AddObject@plt>
    1b2c:	ldr	x8, [sp, #16]
    1b30:	stur	x8, [x29, #-8]
    1b34:	ldur	x0, [x29, #-8]
    1b38:	ldp	x29, x30, [sp, #32]
    1b3c:	add	sp, sp, #0x30
    1b40:	ret
    1b44:	sub	sp, sp, #0x10
    1b48:	str	x0, [sp, #8]
    1b4c:	ldr	x8, [sp, #8]
    1b50:	ldr	x9, [x8]
    1b54:	add	x9, x9, #0x1
    1b58:	str	x9, [x8]
    1b5c:	add	sp, sp, #0x10
    1b60:	ret
    1b64:	sub	sp, sp, #0x20
    1b68:	stp	x29, x30, [sp, #16]
    1b6c:	add	x29, sp, #0x10
    1b70:	str	x0, [sp, #8]
    1b74:	ldr	x8, [sp, #8]
    1b78:	add	x0, x8, #0x10
    1b7c:	bl	1840 <BZ2_bzCompressEnd@plt>
    1b80:	ldr	x8, [sp, #8]
    1b84:	ldr	x8, [x8, #104]
    1b88:	cbz	x8, 1b98 <PyInit__bz2@@Base+0x134>
    1b8c:	ldr	x8, [sp, #8]
    1b90:	ldr	x0, [x8, #104]
    1b94:	bl	1980 <PyThread_free_lock@plt>
    1b98:	ldr	x8, [sp, #8]
    1b9c:	ldr	x8, [x8, #8]
    1ba0:	ldr	x8, [x8, #320]
    1ba4:	ldr	x0, [sp, #8]
    1ba8:	blr	x8
    1bac:	ldp	x29, x30, [sp, #16]
    1bb0:	add	sp, sp, #0x20
    1bb4:	ret
    1bb8:	sub	sp, sp, #0x30
    1bbc:	stp	x29, x30, [sp, #32]
    1bc0:	add	x29, sp, #0x20
    1bc4:	mov	w8, #0xffffffff            	// #-1
    1bc8:	mov	w9, #0x9                   	// #9
    1bcc:	adrp	x10, 14000 <PyInit__bz2@@Base+0x1259c>
    1bd0:	add	x10, x10, #0x170
    1bd4:	stur	x0, [x29, #-8]
    1bd8:	str	x1, [sp, #16]
    1bdc:	str	x2, [sp, #8]
    1be0:	str	w8, [sp, #4]
    1be4:	str	w9, [sp]
    1be8:	ldur	x11, [x29, #-8]
    1bec:	ldr	x11, [x11, #8]
    1bf0:	cmp	x11, x10
    1bf4:	b.ne	1c18 <PyInit__bz2@@Base+0x1b4>  // b.any
    1bf8:	ldr	x8, [sp, #8]
    1bfc:	cbz	x8, 1c18 <PyInit__bz2@@Base+0x1b4>
    1c00:	ldr	x1, [sp, #8]
    1c04:	adrp	x0, 3000 <PyInit__bz2@@Base+0x159c>
    1c08:	add	x0, x0, #0x96d
    1c0c:	bl	1950 <_PyArg_NoKeywords@plt>
    1c10:	cbnz	w0, 1c18 <PyInit__bz2@@Base+0x1b4>
    1c14:	b	1d0c <PyInit__bz2@@Base+0x2a8>
    1c18:	ldr	x8, [sp, #16]
    1c1c:	ldr	x8, [x8, #16]
    1c20:	mov	x9, xzr
    1c24:	cmp	x9, x8
    1c28:	cset	w10, gt
    1c2c:	tbnz	w10, #0, 1c40 <PyInit__bz2@@Base+0x1dc>
    1c30:	ldr	x8, [sp, #16]
    1c34:	ldr	x8, [x8, #16]
    1c38:	cmp	x8, #0x1
    1c3c:	b.le	1c68 <PyInit__bz2@@Base+0x204>
    1c40:	ldr	x8, [sp, #16]
    1c44:	ldr	x1, [x8, #16]
    1c48:	adrp	x0, 3000 <PyInit__bz2@@Base+0x159c>
    1c4c:	add	x0, x0, #0x96d
    1c50:	mov	x8, xzr
    1c54:	mov	x2, x8
    1c58:	mov	x3, #0x1                   	// #1
    1c5c:	bl	1870 <_PyArg_CheckPositional@plt>
    1c60:	cbnz	w0, 1c68 <PyInit__bz2@@Base+0x204>
    1c64:	b	1d0c <PyInit__bz2@@Base+0x2a8>
    1c68:	ldr	x8, [sp, #16]
    1c6c:	ldr	x8, [x8, #16]
    1c70:	cmp	x8, #0x1
    1c74:	b.ge	1c7c <PyInit__bz2@@Base+0x218>  // b.tcont
    1c78:	b	1cfc <PyInit__bz2@@Base+0x298>
    1c7c:	ldr	x8, [sp, #16]
    1c80:	ldr	x8, [x8, #24]
    1c84:	ldr	x8, [x8, #8]
    1c88:	adrp	x9, 13000 <PyInit__bz2@@Base+0x1159c>
    1c8c:	ldr	x9, [x9, #3984]
    1c90:	cmp	x8, x9
    1c94:	b.eq	1cb4 <PyInit__bz2@@Base+0x250>  // b.none
    1c98:	ldr	x8, [sp, #16]
    1c9c:	ldr	x8, [x8, #24]
    1ca0:	ldr	x0, [x8, #8]
    1ca4:	adrp	x1, 13000 <PyInit__bz2@@Base+0x1159c>
    1ca8:	ldr	x1, [x1, #3984]
    1cac:	bl	1920 <PyType_IsSubtype@plt>
    1cb0:	cbz	w0, 1cd0 <PyInit__bz2@@Base+0x26c>
    1cb4:	adrp	x8, 13000 <PyInit__bz2@@Base+0x1159c>
    1cb8:	ldr	x8, [x8, #4024]
    1cbc:	ldr	x0, [x8]
    1cc0:	adrp	x1, 3000 <PyInit__bz2@@Base+0x159c>
    1cc4:	add	x1, x1, #0xb3a
    1cc8:	bl	17a0 <PyErr_SetString@plt>
    1ccc:	b	1d0c <PyInit__bz2@@Base+0x2a8>
    1cd0:	ldr	x8, [sp, #16]
    1cd4:	ldr	x0, [x8, #24]
    1cd8:	bl	1960 <_PyLong_AsInt@plt>
    1cdc:	str	w0, [sp]
    1ce0:	ldr	w9, [sp]
    1ce4:	mov	w10, #0xffffffff            	// #-1
    1ce8:	cmp	w9, w10
    1cec:	b.ne	1cfc <PyInit__bz2@@Base+0x298>  // b.any
    1cf0:	bl	1880 <PyErr_Occurred@plt>
    1cf4:	cbz	x0, 1cfc <PyInit__bz2@@Base+0x298>
    1cf8:	b	1d0c <PyInit__bz2@@Base+0x2a8>
    1cfc:	ldur	x0, [x29, #-8]
    1d00:	ldr	w1, [sp]
    1d04:	bl	248c <PyInit__bz2@@Base+0xa28>
    1d08:	str	w0, [sp, #4]
    1d0c:	ldr	w0, [sp, #4]
    1d10:	ldp	x29, x30, [sp, #32]
    1d14:	add	sp, sp, #0x30
    1d18:	ret
    1d1c:	sub	sp, sp, #0x90
    1d20:	stp	x29, x30, [sp, #128]
    1d24:	add	x29, sp, #0x80
    1d28:	mov	x8, xzr
    1d2c:	mov	x2, #0x50                  	// #80
    1d30:	mov	w9, wzr
    1d34:	add	x10, sp, #0x18
    1d38:	stur	x0, [x29, #-8]
    1d3c:	stur	x1, [x29, #-16]
    1d40:	stur	x8, [x29, #-24]
    1d44:	mov	x0, x10
    1d48:	mov	w3, w9
    1d4c:	mov	w1, w3
    1d50:	str	w9, [sp, #20]
    1d54:	str	x10, [sp, #8]
    1d58:	bl	17f0 <memset@plt>
    1d5c:	ldur	x0, [x29, #-16]
    1d60:	ldr	x1, [sp, #8]
    1d64:	ldr	w2, [sp, #20]
    1d68:	bl	18f0 <PyObject_GetBuffer@plt>
    1d6c:	cbz	w0, 1d74 <PyInit__bz2@@Base+0x310>
    1d70:	b	1db8 <PyInit__bz2@@Base+0x354>
    1d74:	add	x0, sp, #0x18
    1d78:	mov	w1, #0x43                  	// #67
    1d7c:	bl	1740 <PyBuffer_IsContiguous@plt>
    1d80:	cbnz	w0, 1da8 <PyInit__bz2@@Base+0x344>
    1d84:	ldur	x3, [x29, #-16]
    1d88:	adrp	x0, 3000 <PyInit__bz2@@Base+0x159c>
    1d8c:	add	x0, x0, #0xbdf
    1d90:	adrp	x1, 3000 <PyInit__bz2@@Base+0x159c>
    1d94:	add	x1, x1, #0x981
    1d98:	adrp	x2, 3000 <PyInit__bz2@@Base+0x159c>
    1d9c:	add	x2, x2, #0x98a
    1da0:	bl	1830 <_PyArg_BadArgument@plt>
    1da4:	b	1db8 <PyInit__bz2@@Base+0x354>
    1da8:	ldur	x0, [x29, #-8]
    1dac:	add	x1, sp, #0x18
    1db0:	bl	1e04 <PyInit__bz2@@Base+0x3a0>
    1db4:	stur	x0, [x29, #-24]
    1db8:	add	x8, sp, #0x18
    1dbc:	ldr	x8, [x8, #8]
    1dc0:	cbz	x8, 1dcc <PyInit__bz2@@Base+0x368>
    1dc4:	add	x0, sp, #0x18
    1dc8:	bl	1710 <PyBuffer_Release@plt>
    1dcc:	ldur	x0, [x29, #-24]
    1dd0:	ldp	x29, x30, [sp, #128]
    1dd4:	add	sp, sp, #0x90
    1dd8:	ret
    1ddc:	sub	sp, sp, #0x20
    1de0:	stp	x29, x30, [sp, #16]
    1de4:	add	x29, sp, #0x10
    1de8:	str	x0, [sp, #8]
    1dec:	str	x1, [sp]
    1df0:	ldr	x0, [sp, #8]
    1df4:	bl	23cc <PyInit__bz2@@Base+0x968>
    1df8:	ldp	x29, x30, [sp, #16]
    1dfc:	add	sp, sp, #0x20
    1e00:	ret
    1e04:	sub	sp, sp, #0x30
    1e08:	stp	x29, x30, [sp, #32]
    1e0c:	add	x29, sp, #0x20
    1e10:	mov	x8, xzr
    1e14:	stur	x0, [x29, #-8]
    1e18:	str	x1, [sp, #16]
    1e1c:	str	x8, [sp, #8]
    1e20:	ldur	x8, [x29, #-8]
    1e24:	ldr	x0, [x8, #104]
    1e28:	mov	w9, wzr
    1e2c:	mov	w1, w9
    1e30:	bl	1780 <PyThread_acquire_lock@plt>
    1e34:	cbnz	w0, 1e5c <PyInit__bz2@@Base+0x3f8>
    1e38:	bl	1900 <PyEval_SaveThread@plt>
    1e3c:	str	x0, [sp]
    1e40:	ldur	x8, [x29, #-8]
    1e44:	ldr	x0, [x8, #104]
    1e48:	mov	w1, #0x1                   	// #1
    1e4c:	bl	1780 <PyThread_acquire_lock@plt>
    1e50:	ldr	x8, [sp]
    1e54:	mov	x0, x8
    1e58:	bl	16f0 <PyEval_RestoreThread@plt>
    1e5c:	ldur	x8, [x29, #-8]
    1e60:	ldr	w9, [x8, #96]
    1e64:	cbz	w9, 1e84 <PyInit__bz2@@Base+0x420>
    1e68:	adrp	x8, 13000 <PyInit__bz2@@Base+0x1159c>
    1e6c:	ldr	x8, [x8, #4016]
    1e70:	ldr	x0, [x8]
    1e74:	adrp	x1, 3000 <PyInit__bz2@@Base+0x159c>
    1e78:	add	x1, x1, #0x99c
    1e7c:	bl	17a0 <PyErr_SetString@plt>
    1e80:	b	1ea8 <PyInit__bz2@@Base+0x444>
    1e84:	ldur	x0, [x29, #-8]
    1e88:	ldr	x8, [sp, #16]
    1e8c:	ldr	x1, [x8]
    1e90:	ldr	x8, [sp, #16]
    1e94:	ldr	x2, [x8, #16]
    1e98:	mov	w9, wzr
    1e9c:	mov	w3, w9
    1ea0:	bl	1ec4 <PyInit__bz2@@Base+0x460>
    1ea4:	str	x0, [sp, #8]
    1ea8:	ldur	x8, [x29, #-8]
    1eac:	ldr	x0, [x8, #104]
    1eb0:	bl	18e0 <PyThread_release_lock@plt>
    1eb4:	ldr	x0, [sp, #8]
    1eb8:	ldp	x29, x30, [sp, #32]
    1ebc:	add	sp, sp, #0x30
    1ec0:	ret
    1ec4:	sub	sp, sp, #0x80
    1ec8:	stp	x29, x30, [sp, #112]
    1ecc:	add	x29, sp, #0x70
    1ed0:	mov	x8, xzr
    1ed4:	mov	x9, #0x2000                	// #8192
    1ed8:	stur	x0, [x29, #-16]
    1edc:	stur	x1, [x29, #-24]
    1ee0:	stur	x2, [x29, #-32]
    1ee4:	stur	w3, [x29, #-36]
    1ee8:	stur	xzr, [x29, #-48]
    1eec:	mov	x0, x8
    1ef0:	mov	x1, x9
    1ef4:	bl	1750 <PyBytes_FromStringAndSize@plt>
    1ef8:	str	x0, [sp, #56]
    1efc:	ldr	x8, [sp, #56]
    1f00:	cbnz	x8, 1f10 <PyInit__bz2@@Base+0x4ac>
    1f04:	mov	x8, xzr
    1f08:	stur	x8, [x29, #-8]
    1f0c:	b	2124 <PyInit__bz2@@Base+0x6c0>
    1f10:	ldur	x8, [x29, #-24]
    1f14:	ldur	x9, [x29, #-16]
    1f18:	str	x8, [x9, #16]
    1f1c:	ldur	x8, [x29, #-16]
    1f20:	str	wzr, [x8, #24]
    1f24:	ldr	x8, [sp, #56]
    1f28:	add	x8, x8, #0x20
    1f2c:	ldur	x9, [x29, #-16]
    1f30:	str	x8, [x9, #40]
    1f34:	ldur	x8, [x29, #-16]
    1f38:	mov	w10, #0x2000                	// #8192
    1f3c:	str	w10, [x8, #48]
    1f40:	ldur	x8, [x29, #-16]
    1f44:	ldr	w9, [x8, #24]
    1f48:	cbnz	w9, 1fa4 <PyInit__bz2@@Base+0x540>
    1f4c:	ldur	x8, [x29, #-32]
    1f50:	cmp	x8, #0x0
    1f54:	cset	w9, ls  // ls = plast
    1f58:	tbnz	w9, #0, 1fa4 <PyInit__bz2@@Base+0x540>
    1f5c:	ldur	x8, [x29, #-32]
    1f60:	mov	x9, #0xffffffff            	// #4294967295
    1f64:	cmp	x8, x9
    1f68:	b.ls	1f78 <PyInit__bz2@@Base+0x514>  // b.plast
    1f6c:	mov	x8, #0xffffffff            	// #4294967295
    1f70:	str	x8, [sp, #16]
    1f74:	b	1f80 <PyInit__bz2@@Base+0x51c>
    1f78:	ldur	x8, [x29, #-32]
    1f7c:	str	x8, [sp, #16]
    1f80:	ldr	x8, [sp, #16]
    1f84:	ldur	x9, [x29, #-16]
    1f88:	str	w8, [x9, #24]
    1f8c:	ldur	x9, [x29, #-16]
    1f90:	ldr	w8, [x9, #24]
    1f94:	mov	w9, w8
    1f98:	ldur	x10, [x29, #-32]
    1f9c:	subs	x9, x10, x9
    1fa0:	stur	x9, [x29, #-32]
    1fa4:	ldur	w8, [x29, #-36]
    1fa8:	cbnz	w8, 1fbc <PyInit__bz2@@Base+0x558>
    1fac:	ldur	x8, [x29, #-16]
    1fb0:	ldr	w9, [x8, #24]
    1fb4:	cbnz	w9, 1fbc <PyInit__bz2@@Base+0x558>
    1fb8:	b	20d8 <PyInit__bz2@@Base+0x674>
    1fbc:	ldur	x8, [x29, #-16]
    1fc0:	ldr	w9, [x8, #48]
    1fc4:	cbnz	w9, 205c <PyInit__bz2@@Base+0x5f8>
    1fc8:	ldr	x8, [sp, #56]
    1fcc:	ldr	x8, [x8, #16]
    1fd0:	ldur	x9, [x29, #-48]
    1fd4:	subs	x8, x8, x9
    1fd8:	str	x8, [sp, #32]
    1fdc:	ldr	x8, [sp, #32]
    1fe0:	cbnz	x8, 202c <PyInit__bz2@@Base+0x5c8>
    1fe4:	add	x0, sp, #0x38
    1fe8:	mov	x1, #0xffffffffffffffff    	// #-1
    1fec:	bl	2134 <PyInit__bz2@@Base+0x6d0>
    1ff0:	cmp	w0, #0x0
    1ff4:	cset	w8, ge  // ge = tcont
    1ff8:	tbnz	w8, #0, 2000 <PyInit__bz2@@Base+0x59c>
    1ffc:	b	2114 <PyInit__bz2@@Base+0x6b0>
    2000:	ldr	x8, [sp, #56]
    2004:	add	x8, x8, #0x20
    2008:	ldur	x9, [x29, #-48]
    200c:	add	x8, x8, x9
    2010:	ldur	x9, [x29, #-16]
    2014:	str	x8, [x9, #40]
    2018:	ldr	x8, [sp, #56]
    201c:	ldr	x8, [x8, #16]
    2020:	ldur	x9, [x29, #-48]
    2024:	subs	x8, x8, x9
    2028:	str	x8, [sp, #32]
    202c:	ldr	x8, [sp, #32]
    2030:	mov	x9, #0xffffffff            	// #4294967295
    2034:	cmp	x8, x9
    2038:	b.ls	2048 <PyInit__bz2@@Base+0x5e4>  // b.plast
    203c:	mov	x8, #0xffffffff            	// #4294967295
    2040:	str	x8, [sp, #8]
    2044:	b	2050 <PyInit__bz2@@Base+0x5ec>
    2048:	ldr	x8, [sp, #32]
    204c:	str	x8, [sp, #8]
    2050:	ldr	x8, [sp, #8]
    2054:	ldur	x9, [x29, #-16]
    2058:	str	w8, [x9, #48]
    205c:	bl	1900 <PyEval_SaveThread@plt>
    2060:	str	x0, [sp, #24]
    2064:	ldur	x8, [x29, #-16]
    2068:	ldr	x8, [x8, #40]
    206c:	str	x8, [sp, #48]
    2070:	ldur	x8, [x29, #-16]
    2074:	add	x0, x8, #0x10
    2078:	ldur	w1, [x29, #-36]
    207c:	bl	18a0 <BZ2_bzCompress@plt>
    2080:	str	w0, [sp, #44]
    2084:	ldur	x8, [x29, #-16]
    2088:	ldr	x8, [x8, #40]
    208c:	ldr	x9, [sp, #48]
    2090:	subs	x8, x8, x9
    2094:	ldur	x9, [x29, #-48]
    2098:	add	x8, x9, x8
    209c:	stur	x8, [x29, #-48]
    20a0:	ldr	x0, [sp, #24]
    20a4:	bl	16f0 <PyEval_RestoreThread@plt>
    20a8:	ldr	w0, [sp, #44]
    20ac:	bl	21e8 <PyInit__bz2@@Base+0x784>
    20b0:	cbz	w0, 20b8 <PyInit__bz2@@Base+0x654>
    20b4:	b	2114 <PyInit__bz2@@Base+0x6b0>
    20b8:	ldur	w8, [x29, #-36]
    20bc:	cmp	w8, #0x2
    20c0:	b.ne	20d4 <PyInit__bz2@@Base+0x670>  // b.any
    20c4:	ldr	w8, [sp, #44]
    20c8:	cmp	w8, #0x4
    20cc:	b.ne	20d4 <PyInit__bz2@@Base+0x670>  // b.any
    20d0:	b	20d8 <PyInit__bz2@@Base+0x674>
    20d4:	b	1f40 <PyInit__bz2@@Base+0x4dc>
    20d8:	ldur	x8, [x29, #-48]
    20dc:	ldr	x9, [sp, #56]
    20e0:	ldr	x9, [x9, #16]
    20e4:	cmp	x8, x9
    20e8:	b.eq	2108 <PyInit__bz2@@Base+0x6a4>  // b.none
    20ec:	ldur	x1, [x29, #-48]
    20f0:	add	x0, sp, #0x38
    20f4:	bl	16e0 <_PyBytes_Resize@plt>
    20f8:	cmp	w0, #0x0
    20fc:	cset	w8, ge  // ge = tcont
    2100:	tbnz	w8, #0, 2108 <PyInit__bz2@@Base+0x6a4>
    2104:	b	2114 <PyInit__bz2@@Base+0x6b0>
    2108:	ldr	x8, [sp, #56]
    210c:	stur	x8, [x29, #-8]
    2110:	b	2124 <PyInit__bz2@@Base+0x6c0>
    2114:	ldr	x0, [sp, #56]
    2118:	bl	2350 <PyInit__bz2@@Base+0x8ec>
    211c:	mov	x8, xzr
    2120:	stur	x8, [x29, #-8]
    2124:	ldur	x0, [x29, #-8]
    2128:	ldp	x29, x30, [sp, #112]
    212c:	add	sp, sp, #0x80
    2130:	ret
    2134:	sub	sp, sp, #0x40
    2138:	stp	x29, x30, [sp, #48]
    213c:	add	x29, sp, #0x30
    2140:	stur	x0, [x29, #-16]
    2144:	str	x1, [sp, #24]
    2148:	ldur	x8, [x29, #-16]
    214c:	ldr	x8, [x8]
    2150:	ldr	x8, [x8, #16]
    2154:	str	x8, [sp, #16]
    2158:	ldr	x8, [sp, #16]
    215c:	ldr	x9, [sp, #16]
    2160:	add	x8, x8, x9, lsr #3
    2164:	add	x8, x8, #0x6
    2168:	str	x8, [sp, #8]
    216c:	ldr	x8, [sp, #24]
    2170:	cmp	x8, #0x0
    2174:	cset	w10, le
    2178:	tbnz	w10, #0, 2194 <PyInit__bz2@@Base+0x730>
    217c:	ldr	x8, [sp, #8]
    2180:	ldr	x9, [sp, #24]
    2184:	cmp	x8, x9
    2188:	b.ls	2194 <PyInit__bz2@@Base+0x730>  // b.plast
    218c:	ldr	x8, [sp, #24]
    2190:	str	x8, [sp, #8]
    2194:	ldr	x8, [sp, #8]
    2198:	ldr	x9, [sp, #16]
    219c:	cmp	x8, x9
    21a0:	b.ls	21b8 <PyInit__bz2@@Base+0x754>  // b.plast
    21a4:	ldur	x0, [x29, #-16]
    21a8:	ldr	x1, [sp, #8]
    21ac:	bl	16e0 <_PyBytes_Resize@plt>
    21b0:	stur	w0, [x29, #-4]
    21b4:	b	21d8 <PyInit__bz2@@Base+0x774>
    21b8:	adrp	x8, 13000 <PyInit__bz2@@Base+0x1159c>
    21bc:	ldr	x8, [x8, #4048]
    21c0:	ldr	x0, [x8]
    21c4:	adrp	x1, 3000 <PyInit__bz2@@Base+0x159c>
    21c8:	add	x1, x1, #0x9b8
    21cc:	bl	17a0 <PyErr_SetString@plt>
    21d0:	mov	w9, #0xffffffff            	// #-1
    21d4:	stur	w9, [x29, #-4]
    21d8:	ldur	w0, [x29, #-4]
    21dc:	ldp	x29, x30, [sp, #48]
    21e0:	add	sp, sp, #0x40
    21e4:	ret
    21e8:	sub	sp, sp, #0x30
    21ec:	stp	x29, x30, [sp, #32]
    21f0:	add	x29, sp, #0x20
    21f4:	adrp	x8, 13000 <PyInit__bz2@@Base+0x1159c>
    21f8:	ldr	x8, [x8, #4032]
    21fc:	stur	w0, [x29, #-8]
    2200:	ldur	w9, [x29, #-8]
    2204:	add	w9, w9, #0x9
    2208:	mov	w10, w9
    220c:	ubfx	x10, x10, #0, #32
    2210:	cmp	x10, #0xd
    2214:	str	x8, [sp, #16]
    2218:	str	x10, [sp, #8]
    221c:	b.hi	2320 <PyInit__bz2@@Base+0x8bc>  // b.pmore
    2220:	adrp	x8, 3000 <PyInit__bz2@@Base+0x159c>
    2224:	add	x8, x8, #0x248
    2228:	ldr	x11, [sp, #8]
    222c:	ldrsw	x10, [x8, x11, lsl #2]
    2230:	add	x9, x8, x10
    2234:	br	x9
    2238:	stur	wzr, [x29, #-4]
    223c:	b	2340 <PyInit__bz2@@Base+0x8dc>
    2240:	adrp	x8, 13000 <PyInit__bz2@@Base+0x1159c>
    2244:	ldr	x8, [x8, #3968]
    2248:	ldr	x0, [x8]
    224c:	adrp	x1, 3000 <PyInit__bz2@@Base+0x159c>
    2250:	add	x1, x1, #0x9e5
    2254:	bl	17a0 <PyErr_SetString@plt>
    2258:	mov	w9, #0x1                   	// #1
    225c:	stur	w9, [x29, #-4]
    2260:	b	2340 <PyInit__bz2@@Base+0x8dc>
    2264:	adrp	x8, 13000 <PyInit__bz2@@Base+0x1159c>
    2268:	ldr	x8, [x8, #4016]
    226c:	ldr	x0, [x8]
    2270:	adrp	x1, 3000 <PyInit__bz2@@Base+0x159c>
    2274:	add	x1, x1, #0xa09
    2278:	bl	17a0 <PyErr_SetString@plt>
    227c:	mov	w9, #0x1                   	// #1
    2280:	stur	w9, [x29, #-4]
    2284:	b	2340 <PyInit__bz2@@Base+0x8dc>
    2288:	bl	1770 <PyErr_NoMemory@plt>
    228c:	mov	w8, #0x1                   	// #1
    2290:	stur	w8, [x29, #-4]
    2294:	b	2340 <PyInit__bz2@@Base+0x8dc>
    2298:	ldr	x8, [sp, #16]
    229c:	ldr	x0, [x8]
    22a0:	adrp	x1, 3000 <PyInit__bz2@@Base+0x159c>
    22a4:	add	x1, x1, #0xa40
    22a8:	bl	17a0 <PyErr_SetString@plt>
    22ac:	mov	w9, #0x1                   	// #1
    22b0:	stur	w9, [x29, #-4]
    22b4:	b	2340 <PyInit__bz2@@Base+0x8dc>
    22b8:	ldr	x8, [sp, #16]
    22bc:	ldr	x0, [x8]
    22c0:	adrp	x1, 3000 <PyInit__bz2@@Base+0x159c>
    22c4:	add	x1, x1, #0xa54
    22c8:	bl	17a0 <PyErr_SetString@plt>
    22cc:	mov	w9, #0x1                   	// #1
    22d0:	stur	w9, [x29, #-4]
    22d4:	b	2340 <PyInit__bz2@@Base+0x8dc>
    22d8:	adrp	x8, 13000 <PyInit__bz2@@Base+0x1159c>
    22dc:	ldr	x8, [x8, #4056]
    22e0:	ldr	x0, [x8]
    22e4:	adrp	x1, 3000 <PyInit__bz2@@Base+0x159c>
    22e8:	add	x1, x1, #0xa66
    22ec:	bl	17a0 <PyErr_SetString@plt>
    22f0:	mov	w9, #0x1                   	// #1
    22f4:	stur	w9, [x29, #-4]
    22f8:	b	2340 <PyInit__bz2@@Base+0x8dc>
    22fc:	adrp	x8, 13000 <PyInit__bz2@@Base+0x1159c>
    2300:	ldr	x8, [x8, #4000]
    2304:	ldr	x0, [x8]
    2308:	adrp	x1, 3000 <PyInit__bz2@@Base+0x159c>
    230c:	add	x1, x1, #0xaaa
    2310:	bl	17a0 <PyErr_SetString@plt>
    2314:	mov	w9, #0x1                   	// #1
    2318:	stur	w9, [x29, #-4]
    231c:	b	2340 <PyInit__bz2@@Base+0x8dc>
    2320:	ldr	x8, [sp, #16]
    2324:	ldr	x0, [x8]
    2328:	ldur	w2, [x29, #-8]
    232c:	adrp	x1, 3000 <PyInit__bz2@@Base+0x159c>
    2330:	add	x1, x1, #0xae9
    2334:	bl	1930 <PyErr_Format@plt>
    2338:	mov	w9, #0x1                   	// #1
    233c:	stur	w9, [x29, #-4]
    2340:	ldur	w0, [x29, #-4]
    2344:	ldp	x29, x30, [sp, #32]
    2348:	add	sp, sp, #0x30
    234c:	ret
    2350:	sub	sp, sp, #0x20
    2354:	stp	x29, x30, [sp, #16]
    2358:	add	x29, sp, #0x10
    235c:	str	x0, [sp, #8]
    2360:	ldr	x8, [sp, #8]
    2364:	cbz	x8, 237c <PyInit__bz2@@Base+0x918>
    2368:	ldr	x2, [sp, #8]
    236c:	adrp	x0, 3000 <PyInit__bz2@@Base+0x159c>
    2370:	add	x0, x0, #0xb0e
    2374:	mov	w1, #0x21d                 	// #541
    2378:	bl	2388 <PyInit__bz2@@Base+0x924>
    237c:	ldp	x29, x30, [sp, #16]
    2380:	add	sp, sp, #0x20
    2384:	ret
    2388:	sub	sp, sp, #0x30
    238c:	stp	x29, x30, [sp, #32]
    2390:	add	x29, sp, #0x20
    2394:	stur	x0, [x29, #-8]
    2398:	stur	w1, [x29, #-12]
    239c:	str	x2, [sp, #8]
    23a0:	ldr	x8, [sp, #8]
    23a4:	ldr	x9, [x8]
    23a8:	subs	x9, x9, #0x1
    23ac:	str	x9, [x8]
    23b0:	cbz	x9, 23b8 <PyInit__bz2@@Base+0x954>
    23b4:	b	23c0 <PyInit__bz2@@Base+0x95c>
    23b8:	ldr	x0, [sp, #8]
    23bc:	bl	1760 <_Py_Dealloc@plt>
    23c0:	ldp	x29, x30, [sp, #32]
    23c4:	add	sp, sp, #0x30
    23c8:	ret
    23cc:	sub	sp, sp, #0x30
    23d0:	stp	x29, x30, [sp, #32]
    23d4:	add	x29, sp, #0x20
    23d8:	mov	x8, xzr
    23dc:	stur	x0, [x29, #-8]
    23e0:	str	x8, [sp, #16]
    23e4:	ldur	x8, [x29, #-8]
    23e8:	ldr	x0, [x8, #104]
    23ec:	mov	w9, wzr
    23f0:	mov	w1, w9
    23f4:	bl	1780 <PyThread_acquire_lock@plt>
    23f8:	cbnz	w0, 2420 <PyInit__bz2@@Base+0x9bc>
    23fc:	bl	1900 <PyEval_SaveThread@plt>
    2400:	str	x0, [sp, #8]
    2404:	ldur	x8, [x29, #-8]
    2408:	ldr	x0, [x8, #104]
    240c:	mov	w1, #0x1                   	// #1
    2410:	bl	1780 <PyThread_acquire_lock@plt>
    2414:	ldr	x8, [sp, #8]
    2418:	mov	x0, x8
    241c:	bl	16f0 <PyEval_RestoreThread@plt>
    2420:	ldur	x8, [x29, #-8]
    2424:	ldr	w9, [x8, #96]
    2428:	cbz	w9, 2448 <PyInit__bz2@@Base+0x9e4>
    242c:	adrp	x8, 13000 <PyInit__bz2@@Base+0x1159c>
    2430:	ldr	x8, [x8, #4016]
    2434:	ldr	x0, [x8]
    2438:	adrp	x1, 3000 <PyInit__bz2@@Base+0x159c>
    243c:	add	x1, x1, #0xb21
    2440:	bl	17a0 <PyErr_SetString@plt>
    2444:	b	2470 <PyInit__bz2@@Base+0xa0c>
    2448:	ldur	x8, [x29, #-8]
    244c:	mov	w9, #0x1                   	// #1
    2450:	str	w9, [x8, #96]
    2454:	ldur	x0, [x29, #-8]
    2458:	mov	x8, xzr
    245c:	mov	x1, x8
    2460:	mov	x2, x8
    2464:	mov	w3, #0x2                   	// #2
    2468:	bl	1ec4 <PyInit__bz2@@Base+0x460>
    246c:	str	x0, [sp, #16]
    2470:	ldur	x8, [x29, #-8]
    2474:	ldr	x0, [x8, #104]
    2478:	bl	18e0 <PyThread_release_lock@plt>
    247c:	ldr	x0, [sp, #16]
    2480:	ldp	x29, x30, [sp, #32]
    2484:	add	sp, sp, #0x30
    2488:	ret
    248c:	sub	sp, sp, #0x30
    2490:	stp	x29, x30, [sp, #32]
    2494:	add	x29, sp, #0x20
    2498:	mov	w8, #0x1                   	// #1
    249c:	str	x0, [sp, #16]
    24a0:	str	w1, [sp, #12]
    24a4:	ldr	w9, [sp, #12]
    24a8:	cmp	w8, w9
    24ac:	b.gt	24bc <PyInit__bz2@@Base+0xa58>
    24b0:	ldr	w8, [sp, #12]
    24b4:	cmp	w8, #0x9
    24b8:	b.le	24e0 <PyInit__bz2@@Base+0xa7c>
    24bc:	adrp	x8, 13000 <PyInit__bz2@@Base+0x1159c>
    24c0:	ldr	x8, [x8, #4016]
    24c4:	ldr	x0, [x8]
    24c8:	adrp	x1, 3000 <PyInit__bz2@@Base+0x159c>
    24cc:	add	x1, x1, #0xb5f
    24d0:	bl	17a0 <PyErr_SetString@plt>
    24d4:	mov	w9, #0xffffffff            	// #-1
    24d8:	stur	w9, [x29, #-4]
    24dc:	b	25a0 <PyInit__bz2@@Base+0xb3c>
    24e0:	bl	18c0 <PyThread_allocate_lock@plt>
    24e4:	ldr	x8, [sp, #16]
    24e8:	str	x0, [x8, #104]
    24ec:	ldr	x8, [sp, #16]
    24f0:	ldr	x8, [x8, #104]
    24f4:	cbnz	x8, 251c <PyInit__bz2@@Base+0xab8>
    24f8:	adrp	x8, 13000 <PyInit__bz2@@Base+0x1159c>
    24fc:	ldr	x8, [x8, #4008]
    2500:	ldr	x0, [x8]
    2504:	adrp	x1, 3000 <PyInit__bz2@@Base+0x159c>
    2508:	add	x1, x1, #0xb85
    250c:	bl	17a0 <PyErr_SetString@plt>
    2510:	mov	w9, #0xffffffff            	// #-1
    2514:	stur	w9, [x29, #-4]
    2518:	b	25a0 <PyInit__bz2@@Base+0xb3c>
    251c:	ldr	x8, [sp, #16]
    2520:	mov	x9, xzr
    2524:	str	x9, [x8, #88]
    2528:	ldr	x8, [sp, #16]
    252c:	adrp	x9, 2000 <PyInit__bz2@@Base+0x59c>
    2530:	add	x9, x9, #0x5b0
    2534:	str	x9, [x8, #72]
    2538:	ldr	x8, [sp, #16]
    253c:	adrp	x9, 2000 <PyInit__bz2@@Base+0x59c>
    2540:	add	x9, x9, #0x644
    2544:	str	x9, [x8, #80]
    2548:	ldr	x8, [sp, #16]
    254c:	add	x0, x8, #0x10
    2550:	ldr	w1, [sp, #12]
    2554:	mov	w10, wzr
    2558:	mov	w2, w10
    255c:	mov	w3, w10
    2560:	bl	1800 <BZ2_bzCompressInit@plt>
    2564:	str	w0, [sp, #8]
    2568:	ldr	w0, [sp, #8]
    256c:	bl	21e8 <PyInit__bz2@@Base+0x784>
    2570:	cbz	w0, 2578 <PyInit__bz2@@Base+0xb14>
    2574:	b	2580 <PyInit__bz2@@Base+0xb1c>
    2578:	stur	wzr, [x29, #-4]
    257c:	b	25a0 <PyInit__bz2@@Base+0xb3c>
    2580:	ldr	x8, [sp, #16]
    2584:	ldr	x0, [x8, #104]
    2588:	bl	1980 <PyThread_free_lock@plt>
    258c:	ldr	x8, [sp, #16]
    2590:	mov	x9, xzr
    2594:	str	x9, [x8, #104]
    2598:	mov	w10, #0xffffffff            	// #-1
    259c:	stur	w10, [x29, #-4]
    25a0:	ldur	w0, [x29, #-4]
    25a4:	ldp	x29, x30, [sp, #32]
    25a8:	add	sp, sp, #0x30
    25ac:	ret
    25b0:	sub	sp, sp, #0x30
    25b4:	stp	x29, x30, [sp, #32]
    25b8:	add	x29, sp, #0x20
    25bc:	str	x0, [sp, #16]
    25c0:	str	w1, [sp, #12]
    25c4:	str	w2, [sp, #8]
    25c8:	ldr	w8, [sp, #12]
    25cc:	cmp	w8, #0x0
    25d0:	cset	w8, lt  // lt = tstop
    25d4:	tbnz	w8, #0, 25e8 <PyInit__bz2@@Base+0xb84>
    25d8:	ldr	w8, [sp, #8]
    25dc:	cmp	w8, #0x0
    25e0:	cset	w8, ge  // ge = tcont
    25e4:	tbnz	w8, #0, 25f4 <PyInit__bz2@@Base+0xb90>
    25e8:	mov	x8, xzr
    25ec:	stur	x8, [x29, #-8]
    25f0:	b	2634 <PyInit__bz2@@Base+0xbd0>
    25f4:	ldr	w8, [sp, #8]
    25f8:	cbz	w8, 2620 <PyInit__bz2@@Base+0xbbc>
    25fc:	ldrsw	x8, [sp, #12]
    2600:	ldrsw	x9, [sp, #8]
    2604:	mov	x10, #0x7fffffffffffffff    	// #9223372036854775807
    2608:	udiv	x9, x10, x9
    260c:	cmp	x8, x9
    2610:	b.ls	2620 <PyInit__bz2@@Base+0xbbc>  // b.plast
    2614:	mov	x8, xzr
    2618:	stur	x8, [x29, #-8]
    261c:	b	2634 <PyInit__bz2@@Base+0xbd0>
    2620:	ldrsw	x8, [sp, #12]
    2624:	ldrsw	x9, [sp, #8]
    2628:	mul	x0, x8, x9
    262c:	bl	1730 <PyMem_RawMalloc@plt>
    2630:	stur	x0, [x29, #-8]
    2634:	ldur	x0, [x29, #-8]
    2638:	ldp	x29, x30, [sp, #32]
    263c:	add	sp, sp, #0x30
    2640:	ret
    2644:	sub	sp, sp, #0x20
    2648:	stp	x29, x30, [sp, #16]
    264c:	add	x29, sp, #0x10
    2650:	str	x0, [sp, #8]
    2654:	str	x1, [sp]
    2658:	ldr	x0, [sp]
    265c:	bl	18b0 <PyMem_RawFree@plt>
    2660:	ldp	x29, x30, [sp, #16]
    2664:	add	sp, sp, #0x20
    2668:	ret
    266c:	sub	sp, sp, #0x20
    2670:	stp	x29, x30, [sp, #16]
    2674:	add	x29, sp, #0x10
    2678:	str	x0, [sp, #8]
    267c:	ldr	x8, [sp, #8]
    2680:	ldr	x8, [x8, #120]
    2684:	cbz	x8, 2694 <PyInit__bz2@@Base+0xc30>
    2688:	ldr	x8, [sp, #8]
    268c:	ldr	x0, [x8, #120]
    2690:	bl	1700 <PyMem_Free@plt>
    2694:	ldr	x8, [sp, #8]
    2698:	add	x0, x8, #0x10
    269c:	bl	17c0 <BZ2_bzDecompressEnd@plt>
    26a0:	ldr	x8, [sp, #8]
    26a4:	ldr	x8, [x8, #104]
    26a8:	str	x8, [sp]
    26ac:	ldr	x8, [sp]
    26b0:	cbz	x8, 26d4 <PyInit__bz2@@Base+0xc70>
    26b4:	ldr	x8, [sp, #8]
    26b8:	mov	x9, xzr
    26bc:	str	x9, [x8, #104]
    26c0:	ldr	x2, [sp]
    26c4:	adrp	x0, 3000 <PyInit__bz2@@Base+0x159c>
    26c8:	add	x0, x0, #0xbb2
    26cc:	mov	w1, #0x291                 	// #657
    26d0:	bl	2388 <PyInit__bz2@@Base+0x924>
    26d4:	ldr	x8, [sp, #8]
    26d8:	ldr	x8, [x8, #144]
    26dc:	cbz	x8, 26ec <PyInit__bz2@@Base+0xc88>
    26e0:	ldr	x8, [sp, #8]
    26e4:	ldr	x0, [x8, #144]
    26e8:	bl	1980 <PyThread_free_lock@plt>
    26ec:	ldr	x8, [sp, #8]
    26f0:	ldr	x8, [x8, #8]
    26f4:	ldr	x8, [x8, #320]
    26f8:	ldr	x0, [sp, #8]
    26fc:	blr	x8
    2700:	ldp	x29, x30, [sp, #16]
    2704:	add	sp, sp, #0x20
    2708:	ret
    270c:	sub	sp, sp, #0x30
    2710:	stp	x29, x30, [sp, #32]
    2714:	add	x29, sp, #0x20
    2718:	mov	w8, #0xffffffff            	// #-1
    271c:	adrp	x9, 14000 <PyInit__bz2@@Base+0x1259c>
    2720:	add	x9, x9, #0x310
    2724:	stur	x0, [x29, #-8]
    2728:	str	x1, [sp, #16]
    272c:	str	x2, [sp, #8]
    2730:	str	w8, [sp, #4]
    2734:	ldur	x10, [x29, #-8]
    2738:	ldr	x10, [x10, #8]
    273c:	cmp	x10, x9
    2740:	b.ne	2764 <PyInit__bz2@@Base+0xd00>  // b.any
    2744:	ldr	x8, [sp, #16]
    2748:	cbz	x8, 2764 <PyInit__bz2@@Base+0xd00>
    274c:	ldr	x1, [sp, #16]
    2750:	adrp	x0, 3000 <PyInit__bz2@@Base+0x159c>
    2754:	add	x0, x0, #0xba2
    2758:	bl	1850 <_PyArg_NoPositional@plt>
    275c:	cbnz	w0, 2764 <PyInit__bz2@@Base+0xd00>
    2760:	b	27a8 <PyInit__bz2@@Base+0xd44>
    2764:	ldur	x8, [x29, #-8]
    2768:	ldr	x8, [x8, #8]
    276c:	adrp	x9, 14000 <PyInit__bz2@@Base+0x1259c>
    2770:	add	x9, x9, #0x310
    2774:	cmp	x8, x9
    2778:	b.ne	279c <PyInit__bz2@@Base+0xd38>  // b.any
    277c:	ldr	x8, [sp, #8]
    2780:	cbz	x8, 279c <PyInit__bz2@@Base+0xd38>
    2784:	ldr	x1, [sp, #8]
    2788:	adrp	x0, 3000 <PyInit__bz2@@Base+0x159c>
    278c:	add	x0, x0, #0xba2
    2790:	bl	1950 <_PyArg_NoKeywords@plt>
    2794:	cbnz	w0, 279c <PyInit__bz2@@Base+0xd38>
    2798:	b	27a8 <PyInit__bz2@@Base+0xd44>
    279c:	ldur	x0, [x29, #-8]
    27a0:	bl	30d4 <PyInit__bz2@@Base+0x1670>
    27a4:	str	w0, [sp, #4]
    27a8:	ldr	w0, [sp, #4]
    27ac:	ldp	x29, x30, [sp, #32]
    27b0:	add	sp, sp, #0x30
    27b4:	ret
    27b8:	sub	sp, sp, #0xe0
    27bc:	stp	x29, x30, [sp, #208]
    27c0:	add	x29, sp, #0xd0
    27c4:	mov	x8, xzr
    27c8:	stur	x0, [x29, #-8]
    27cc:	stur	x1, [x29, #-16]
    27d0:	stur	x2, [x29, #-24]
    27d4:	stur	x3, [x29, #-32]
    27d8:	stur	x8, [x29, #-40]
    27dc:	ldur	x8, [x29, #-24]
    27e0:	ldur	x9, [x29, #-32]
    27e4:	str	x8, [sp, #32]
    27e8:	cbz	x9, 27fc <PyInit__bz2@@Base+0xd98>
    27ec:	ldur	x8, [x29, #-32]
    27f0:	ldr	x8, [x8, #16]
    27f4:	str	x8, [sp, #24]
    27f8:	b	2804 <PyInit__bz2@@Base+0xda0>
    27fc:	mov	x8, xzr
    2800:	str	x8, [sp, #24]
    2804:	ldr	x8, [sp, #24]
    2808:	ldr	x9, [sp, #32]
    280c:	add	x8, x9, x8
    2810:	subs	x8, x8, #0x1
    2814:	stur	x8, [x29, #-64]
    2818:	add	x0, sp, #0x40
    281c:	mov	w10, wzr
    2820:	mov	w1, w10
    2824:	mov	x2, #0x50                  	// #80
    2828:	bl	17f0 <memset@plt>
    282c:	mov	x8, #0xffffffffffffffff    	// #-1
    2830:	str	x8, [sp, #56]
    2834:	ldur	x8, [x29, #-32]
    2838:	cbnz	x8, 286c <PyInit__bz2@@Base+0xe08>
    283c:	ldur	x8, [x29, #-24]
    2840:	mov	x9, #0x1                   	// #1
    2844:	cmp	x9, x8
    2848:	b.gt	286c <PyInit__bz2@@Base+0xe08>
    284c:	ldur	x8, [x29, #-24]
    2850:	cmp	x8, #0x2
    2854:	b.gt	286c <PyInit__bz2@@Base+0xe08>
    2858:	ldur	x8, [x29, #-16]
    285c:	cbz	x8, 286c <PyInit__bz2@@Base+0xe08>
    2860:	ldur	x8, [x29, #-16]
    2864:	str	x8, [sp, #16]
    2868:	b	28ac <PyInit__bz2@@Base+0xe48>
    286c:	ldur	x0, [x29, #-16]
    2870:	ldur	x1, [x29, #-24]
    2874:	ldur	x3, [x29, #-32]
    2878:	mov	x8, xzr
    287c:	mov	x2, x8
    2880:	adrp	x4, 14000 <PyInit__bz2@@Base+0x1259c>
    2884:	add	x4, x4, #0x658
    2888:	mov	w5, #0x1                   	// #1
    288c:	mov	w6, #0x2                   	// #2
    2890:	mov	w9, wzr
    2894:	mov	w7, w9
    2898:	mov	x8, sp
    289c:	sub	x10, x29, #0x38
    28a0:	str	x10, [x8]
    28a4:	bl	1790 <_PyArg_UnpackKeywords@plt>
    28a8:	str	x0, [sp, #16]
    28ac:	ldr	x8, [sp, #16]
    28b0:	stur	x8, [x29, #-16]
    28b4:	ldur	x8, [x29, #-16]
    28b8:	cbnz	x8, 28c0 <PyInit__bz2@@Base+0xe5c>
    28bc:	b	29f0 <PyInit__bz2@@Base+0xf8c>
    28c0:	ldur	x8, [x29, #-16]
    28c4:	ldr	x0, [x8]
    28c8:	add	x1, sp, #0x40
    28cc:	mov	w9, wzr
    28d0:	mov	w2, w9
    28d4:	bl	18f0 <PyObject_GetBuffer@plt>
    28d8:	cbz	w0, 28e0 <PyInit__bz2@@Base+0xe7c>
    28dc:	b	29f0 <PyInit__bz2@@Base+0xf8c>
    28e0:	add	x0, sp, #0x40
    28e4:	mov	w1, #0x43                  	// #67
    28e8:	bl	1740 <PyBuffer_IsContiguous@plt>
    28ec:	cbnz	w0, 2918 <PyInit__bz2@@Base+0xeb4>
    28f0:	ldur	x8, [x29, #-16]
    28f4:	ldr	x3, [x8]
    28f8:	adrp	x0, 3000 <PyInit__bz2@@Base+0x159c>
    28fc:	add	x0, x0, #0xbdd
    2900:	adrp	x1, 3000 <PyInit__bz2@@Base+0x159c>
    2904:	add	x1, x1, #0xbf3
    2908:	adrp	x2, 3000 <PyInit__bz2@@Base+0x159c>
    290c:	add	x2, x2, #0x98a
    2910:	bl	1830 <_PyArg_BadArgument@plt>
    2914:	b	29f0 <PyInit__bz2@@Base+0xf8c>
    2918:	ldur	x8, [x29, #-64]
    291c:	cbnz	x8, 2924 <PyInit__bz2@@Base+0xec0>
    2920:	b	29dc <PyInit__bz2@@Base+0xf78>
    2924:	ldur	x8, [x29, #-16]
    2928:	ldr	x8, [x8, #8]
    292c:	ldr	x8, [x8, #8]
    2930:	adrp	x9, 13000 <PyInit__bz2@@Base+0x1159c>
    2934:	ldr	x9, [x9, #3984]
    2938:	cmp	x8, x9
    293c:	b.eq	295c <PyInit__bz2@@Base+0xef8>  // b.none
    2940:	ldur	x8, [x29, #-16]
    2944:	ldr	x8, [x8, #8]
    2948:	ldr	x0, [x8, #8]
    294c:	adrp	x1, 13000 <PyInit__bz2@@Base+0x1159c>
    2950:	ldr	x1, [x1, #3984]
    2954:	bl	1920 <PyType_IsSubtype@plt>
    2958:	cbz	w0, 2978 <PyInit__bz2@@Base+0xf14>
    295c:	adrp	x8, 13000 <PyInit__bz2@@Base+0x1159c>
    2960:	ldr	x8, [x8, #4024]
    2964:	ldr	x0, [x8]
    2968:	adrp	x1, 3000 <PyInit__bz2@@Base+0x159c>
    296c:	add	x1, x1, #0xb3a
    2970:	bl	17a0 <PyErr_SetString@plt>
    2974:	b	29f0 <PyInit__bz2@@Base+0xf8c>
    2978:	mov	x8, #0xffffffffffffffff    	// #-1
    297c:	str	x8, [sp, #48]
    2980:	ldur	x8, [x29, #-16]
    2984:	ldr	x0, [x8, #8]
    2988:	bl	1940 <PyNumber_Index@plt>
    298c:	str	x0, [sp, #40]
    2990:	ldr	x8, [sp, #40]
    2994:	cbz	x8, 29b8 <PyInit__bz2@@Base+0xf54>
    2998:	ldr	x0, [sp, #40]
    299c:	bl	1820 <PyLong_AsSsize_t@plt>
    29a0:	str	x0, [sp, #48]
    29a4:	ldr	x2, [sp, #40]
    29a8:	adrp	x0, 3000 <PyInit__bz2@@Base+0x159c>
    29ac:	add	x0, x0, #0xc03
    29b0:	mov	w1, #0xaf                  	// #175
    29b4:	bl	2388 <PyInit__bz2@@Base+0x924>
    29b8:	ldr	x8, [sp, #48]
    29bc:	mov	x9, #0xffffffffffffffff    	// #-1
    29c0:	cmp	x8, x9
    29c4:	b.ne	29d4 <PyInit__bz2@@Base+0xf70>  // b.any
    29c8:	bl	1880 <PyErr_Occurred@plt>
    29cc:	cbz	x0, 29d4 <PyInit__bz2@@Base+0xf70>
    29d0:	b	29f0 <PyInit__bz2@@Base+0xf8c>
    29d4:	ldr	x8, [sp, #48]
    29d8:	str	x8, [sp, #56]
    29dc:	ldur	x0, [x29, #-8]
    29e0:	ldr	x2, [sp, #56]
    29e4:	add	x1, sp, #0x40
    29e8:	bl	2a14 <PyInit__bz2@@Base+0xfb0>
    29ec:	stur	x0, [x29, #-40]
    29f0:	add	x8, sp, #0x40
    29f4:	ldr	x8, [x8, #8]
    29f8:	cbz	x8, 2a04 <PyInit__bz2@@Base+0xfa0>
    29fc:	add	x0, sp, #0x40
    2a00:	bl	1710 <PyBuffer_Release@plt>
    2a04:	ldur	x0, [x29, #-40]
    2a08:	ldp	x29, x30, [sp, #208]
    2a0c:	add	sp, sp, #0xe0
    2a10:	ret
    2a14:	sub	sp, sp, #0x40
    2a18:	stp	x29, x30, [sp, #48]
    2a1c:	add	x29, sp, #0x30
    2a20:	mov	x8, xzr
    2a24:	stur	x0, [x29, #-8]
    2a28:	stur	x1, [x29, #-16]
    2a2c:	str	x2, [sp, #24]
    2a30:	str	x8, [sp, #16]
    2a34:	ldur	x8, [x29, #-8]
    2a38:	ldr	x0, [x8, #144]
    2a3c:	mov	w9, wzr
    2a40:	mov	w1, w9
    2a44:	bl	1780 <PyThread_acquire_lock@plt>
    2a48:	cbnz	w0, 2a70 <PyInit__bz2@@Base+0x100c>
    2a4c:	bl	1900 <PyEval_SaveThread@plt>
    2a50:	str	x0, [sp, #8]
    2a54:	ldur	x8, [x29, #-8]
    2a58:	ldr	x0, [x8, #144]
    2a5c:	mov	w1, #0x1                   	// #1
    2a60:	bl	1780 <PyThread_acquire_lock@plt>
    2a64:	ldr	x8, [sp, #8]
    2a68:	mov	x0, x8
    2a6c:	bl	16f0 <PyEval_RestoreThread@plt>
    2a70:	ldur	x8, [x29, #-8]
    2a74:	ldrb	w9, [x8, #96]
    2a78:	cbz	w9, 2a98 <PyInit__bz2@@Base+0x1034>
    2a7c:	adrp	x8, 13000 <PyInit__bz2@@Base+0x1159c>
    2a80:	ldr	x8, [x8, #4056]
    2a84:	ldr	x0, [x8]
    2a88:	adrp	x1, 3000 <PyInit__bz2@@Base+0x159c>
    2a8c:	add	x1, x1, #0xc37
    2a90:	bl	17a0 <PyErr_SetString@plt>
    2a94:	b	2ab8 <PyInit__bz2@@Base+0x1054>
    2a98:	ldur	x0, [x29, #-8]
    2a9c:	ldur	x8, [x29, #-16]
    2aa0:	ldr	x1, [x8]
    2aa4:	ldur	x8, [x29, #-16]
    2aa8:	ldr	x2, [x8, #16]
    2aac:	ldr	x3, [sp, #24]
    2ab0:	bl	2ad4 <PyInit__bz2@@Base+0x1070>
    2ab4:	str	x0, [sp, #16]
    2ab8:	ldur	x8, [x29, #-8]
    2abc:	ldr	x0, [x8, #144]
    2ac0:	bl	18e0 <PyThread_release_lock@plt>
    2ac4:	ldr	x0, [sp, #16]
    2ac8:	ldp	x29, x30, [sp, #48]
    2acc:	add	sp, sp, #0x40
    2ad0:	ret
    2ad4:	sub	sp, sp, #0x80
    2ad8:	stp	x29, x30, [sp, #112]
    2adc:	add	x29, sp, #0x70
    2ae0:	stur	x0, [x29, #-16]
    2ae4:	stur	x1, [x29, #-24]
    2ae8:	stur	x2, [x29, #-32]
    2aec:	stur	x3, [x29, #-40]
    2af0:	ldur	x8, [x29, #-16]
    2af4:	add	x8, x8, #0x10
    2af8:	str	x8, [sp, #48]
    2afc:	ldr	x8, [sp, #48]
    2b00:	ldr	x8, [x8]
    2b04:	cbz	x8, 2c7c <PyInit__bz2@@Base+0x1218>
    2b08:	ldur	x8, [x29, #-16]
    2b0c:	ldr	x8, [x8, #120]
    2b10:	ldur	x9, [x29, #-16]
    2b14:	ldr	x9, [x9, #128]
    2b18:	add	x8, x8, x9
    2b1c:	ldr	x9, [sp, #48]
    2b20:	ldr	x9, [x9]
    2b24:	ldur	x10, [x29, #-16]
    2b28:	ldr	x10, [x10, #136]
    2b2c:	add	x9, x9, x10
    2b30:	subs	x8, x8, x9
    2b34:	str	x8, [sp, #40]
    2b38:	ldur	x8, [x29, #-16]
    2b3c:	ldr	x8, [x8, #128]
    2b40:	ldur	x9, [x29, #-16]
    2b44:	ldr	x9, [x9, #136]
    2b48:	subs	x8, x8, x9
    2b4c:	str	x8, [sp, #32]
    2b50:	ldr	x8, [sp, #32]
    2b54:	ldur	x9, [x29, #-32]
    2b58:	cmp	x8, x9
    2b5c:	b.cs	2c00 <PyInit__bz2@@Base+0x119c>  // b.hs, b.nlast
    2b60:	ldr	x8, [sp, #48]
    2b64:	ldr	x8, [x8]
    2b68:	ldur	x9, [x29, #-16]
    2b6c:	ldr	x9, [x9, #120]
    2b70:	subs	x8, x8, x9
    2b74:	str	x8, [sp, #24]
    2b78:	ldur	x8, [x29, #-16]
    2b7c:	ldr	x8, [x8, #128]
    2b80:	ldur	x9, [x29, #-32]
    2b84:	add	x8, x8, x9
    2b88:	ldr	x9, [sp, #40]
    2b8c:	subs	x8, x8, x9
    2b90:	str	x8, [sp, #8]
    2b94:	ldur	x8, [x29, #-16]
    2b98:	ldr	x0, [x8, #120]
    2b9c:	ldr	x1, [sp, #8]
    2ba0:	bl	17d0 <PyMem_Realloc@plt>
    2ba4:	str	x0, [sp, #16]
    2ba8:	ldr	x8, [sp, #16]
    2bac:	cbnz	x8, 2bcc <PyInit__bz2@@Base+0x1168>
    2bb0:	adrp	x8, 13000 <PyInit__bz2@@Base+0x1159c>
    2bb4:	ldr	x8, [x8, #4008]
    2bb8:	ldr	x0, [x8]
    2bbc:	bl	17e0 <PyErr_SetNone@plt>
    2bc0:	mov	x8, xzr
    2bc4:	stur	x8, [x29, #-8]
    2bc8:	b	2e48 <PyInit__bz2@@Base+0x13e4>
    2bcc:	ldr	x8, [sp, #16]
    2bd0:	ldur	x9, [x29, #-16]
    2bd4:	str	x8, [x9, #120]
    2bd8:	ldr	x8, [sp, #8]
    2bdc:	ldur	x9, [x29, #-16]
    2be0:	str	x8, [x9, #128]
    2be4:	ldur	x8, [x29, #-16]
    2be8:	ldr	x8, [x8, #120]
    2bec:	ldr	x9, [sp, #24]
    2bf0:	add	x8, x8, x9
    2bf4:	ldr	x9, [sp, #48]
    2bf8:	str	x8, [x9]
    2bfc:	b	2c3c <PyInit__bz2@@Base+0x11d8>
    2c00:	ldr	x8, [sp, #40]
    2c04:	ldur	x9, [x29, #-32]
    2c08:	cmp	x8, x9
    2c0c:	b.cs	2c3c <PyInit__bz2@@Base+0x11d8>  // b.hs, b.nlast
    2c10:	ldur	x8, [x29, #-16]
    2c14:	ldr	x0, [x8, #120]
    2c18:	ldr	x8, [sp, #48]
    2c1c:	ldr	x1, [x8]
    2c20:	ldur	x8, [x29, #-16]
    2c24:	ldr	x2, [x8, #136]
    2c28:	bl	16d0 <memmove@plt>
    2c2c:	ldur	x8, [x29, #-16]
    2c30:	ldr	x8, [x8, #120]
    2c34:	ldr	x9, [sp, #48]
    2c38:	str	x8, [x9]
    2c3c:	ldr	x8, [sp, #48]
    2c40:	ldr	x8, [x8]
    2c44:	ldur	x9, [x29, #-16]
    2c48:	ldr	x9, [x9, #136]
    2c4c:	add	x0, x8, x9
    2c50:	ldur	x1, [x29, #-24]
    2c54:	ldur	x2, [x29, #-32]
    2c58:	bl	16c0 <memcpy@plt>
    2c5c:	ldur	x8, [x29, #-32]
    2c60:	ldur	x9, [x29, #-16]
    2c64:	ldr	x10, [x9, #136]
    2c68:	add	x8, x10, x8
    2c6c:	str	x8, [x9, #136]
    2c70:	mov	w11, #0x1                   	// #1
    2c74:	sturb	w11, [x29, #-41]
    2c78:	b	2c9c <PyInit__bz2@@Base+0x1238>
    2c7c:	ldur	x8, [x29, #-24]
    2c80:	ldr	x9, [sp, #48]
    2c84:	str	x8, [x9]
    2c88:	ldur	x8, [x29, #-32]
    2c8c:	ldur	x9, [x29, #-16]
    2c90:	str	x8, [x9, #136]
    2c94:	mov	w10, #0x0                   	// #0
    2c98:	sturb	w10, [x29, #-41]
    2c9c:	ldur	x0, [x29, #-16]
    2ca0:	ldur	x1, [x29, #-40]
    2ca4:	bl	2e58 <PyInit__bz2@@Base+0x13f4>
    2ca8:	str	x0, [sp, #56]
    2cac:	ldr	x8, [sp, #56]
    2cb0:	cbnz	x8, 2cc8 <PyInit__bz2@@Base+0x1264>
    2cb4:	ldr	x8, [sp, #48]
    2cb8:	mov	x9, xzr
    2cbc:	str	x9, [x8]
    2cc0:	stur	x9, [x29, #-8]
    2cc4:	b	2e48 <PyInit__bz2@@Base+0x13e4>
    2cc8:	ldur	x8, [x29, #-16]
    2ccc:	ldrb	w9, [x8, #96]
    2cd0:	cbz	w9, 2d38 <PyInit__bz2@@Base+0x12d4>
    2cd4:	ldur	x8, [x29, #-16]
    2cd8:	mov	w9, #0x0                   	// #0
    2cdc:	strb	w9, [x8, #112]
    2ce0:	ldur	x8, [x29, #-16]
    2ce4:	ldr	x8, [x8, #136]
    2ce8:	cmp	x8, #0x0
    2cec:	cset	w9, ls  // ls = plast
    2cf0:	tbnz	w9, #0, 2d34 <PyInit__bz2@@Base+0x12d0>
    2cf4:	ldur	x8, [x29, #-16]
    2cf8:	ldr	x8, [x8, #104]
    2cfc:	str	x8, [sp]
    2d00:	ldr	x8, [sp, #48]
    2d04:	ldr	x0, [x8]
    2d08:	ldur	x8, [x29, #-16]
    2d0c:	ldr	x1, [x8, #136]
    2d10:	bl	1750 <PyBytes_FromStringAndSize@plt>
    2d14:	ldur	x8, [x29, #-16]
    2d18:	str	x0, [x8, #104]
    2d1c:	ldr	x0, [sp]
    2d20:	bl	2350 <PyInit__bz2@@Base+0x8ec>
    2d24:	ldur	x8, [x29, #-16]
    2d28:	ldr	x8, [x8, #104]
    2d2c:	cbnz	x8, 2d34 <PyInit__bz2@@Base+0x12d0>
    2d30:	b	2e38 <PyInit__bz2@@Base+0x13d4>
    2d34:	b	2e2c <PyInit__bz2@@Base+0x13c8>
    2d38:	ldur	x8, [x29, #-16]
    2d3c:	ldr	x8, [x8, #136]
    2d40:	cbnz	x8, 2d60 <PyInit__bz2@@Base+0x12fc>
    2d44:	ldr	x8, [sp, #48]
    2d48:	mov	x9, xzr
    2d4c:	str	x9, [x8]
    2d50:	ldur	x8, [x29, #-16]
    2d54:	mov	w10, #0x1                   	// #1
    2d58:	strb	w10, [x8, #112]
    2d5c:	b	2e2c <PyInit__bz2@@Base+0x13c8>
    2d60:	ldur	x8, [x29, #-16]
    2d64:	mov	w9, #0x0                   	// #0
    2d68:	strb	w9, [x8, #112]
    2d6c:	ldurb	w9, [x29, #-41]
    2d70:	cbnz	w9, 2e2c <PyInit__bz2@@Base+0x13c8>
    2d74:	ldur	x8, [x29, #-16]
    2d78:	ldr	x8, [x8, #120]
    2d7c:	cbz	x8, 2db0 <PyInit__bz2@@Base+0x134c>
    2d80:	ldur	x8, [x29, #-16]
    2d84:	ldr	x8, [x8, #128]
    2d88:	ldur	x9, [x29, #-16]
    2d8c:	ldr	x9, [x9, #136]
    2d90:	cmp	x8, x9
    2d94:	b.cs	2db0 <PyInit__bz2@@Base+0x134c>  // b.hs, b.nlast
    2d98:	ldur	x8, [x29, #-16]
    2d9c:	ldr	x0, [x8, #120]
    2da0:	bl	1700 <PyMem_Free@plt>
    2da4:	ldur	x8, [x29, #-16]
    2da8:	mov	x9, xzr
    2dac:	str	x9, [x8, #120]
    2db0:	ldur	x8, [x29, #-16]
    2db4:	ldr	x8, [x8, #120]
    2db8:	cbnz	x8, 2e00 <PyInit__bz2@@Base+0x139c>
    2dbc:	ldur	x8, [x29, #-16]
    2dc0:	ldr	x0, [x8, #136]
    2dc4:	bl	1970 <PyMem_Malloc@plt>
    2dc8:	ldur	x8, [x29, #-16]
    2dcc:	str	x0, [x8, #120]
    2dd0:	ldur	x8, [x29, #-16]
    2dd4:	ldr	x8, [x8, #120]
    2dd8:	cbnz	x8, 2df0 <PyInit__bz2@@Base+0x138c>
    2ddc:	adrp	x8, 13000 <PyInit__bz2@@Base+0x1159c>
    2de0:	ldr	x8, [x8, #4008]
    2de4:	ldr	x0, [x8]
    2de8:	bl	17e0 <PyErr_SetNone@plt>
    2dec:	b	2e38 <PyInit__bz2@@Base+0x13d4>
    2df0:	ldur	x8, [x29, #-16]
    2df4:	ldr	x8, [x8, #136]
    2df8:	ldur	x9, [x29, #-16]
    2dfc:	str	x8, [x9, #128]
    2e00:	ldur	x8, [x29, #-16]
    2e04:	ldr	x0, [x8, #120]
    2e08:	ldr	x8, [sp, #48]
    2e0c:	ldr	x1, [x8]
    2e10:	ldur	x8, [x29, #-16]
    2e14:	ldr	x2, [x8, #136]
    2e18:	bl	16c0 <memcpy@plt>
    2e1c:	ldur	x8, [x29, #-16]
    2e20:	ldr	x8, [x8, #120]
    2e24:	ldr	x9, [sp, #48]
    2e28:	str	x8, [x9]
    2e2c:	ldr	x8, [sp, #56]
    2e30:	stur	x8, [x29, #-8]
    2e34:	b	2e48 <PyInit__bz2@@Base+0x13e4>
    2e38:	ldr	x0, [sp, #56]
    2e3c:	bl	2350 <PyInit__bz2@@Base+0x8ec>
    2e40:	mov	x8, xzr
    2e44:	stur	x8, [x29, #-8]
    2e48:	ldur	x0, [x29, #-8]
    2e4c:	ldp	x29, x30, [sp, #112]
    2e50:	add	sp, sp, #0x80
    2e54:	ret
    2e58:	sub	sp, sp, #0x70
    2e5c:	stp	x29, x30, [sp, #96]
    2e60:	add	x29, sp, #0x60
    2e64:	stur	x0, [x29, #-16]
    2e68:	stur	x1, [x29, #-24]
    2e6c:	stur	xzr, [x29, #-32]
    2e70:	ldur	x8, [x29, #-16]
    2e74:	add	x8, x8, #0x10
    2e78:	str	x8, [sp, #48]
    2e7c:	ldur	x8, [x29, #-24]
    2e80:	cmp	x8, #0x0
    2e84:	cset	w9, lt  // lt = tstop
    2e88:	tbnz	w9, #0, 2e98 <PyInit__bz2@@Base+0x1434>
    2e8c:	ldur	x8, [x29, #-24]
    2e90:	cmp	x8, #0x2, lsl #12
    2e94:	b.lt	2eb0 <PyInit__bz2@@Base+0x144c>  // b.tstop
    2e98:	mov	x8, xzr
    2e9c:	mov	x0, x8
    2ea0:	mov	x1, #0x2000                	// #8192
    2ea4:	bl	1750 <PyBytes_FromStringAndSize@plt>
    2ea8:	stur	x0, [x29, #-40]
    2eac:	b	2ec4 <PyInit__bz2@@Base+0x1460>
    2eb0:	ldur	x1, [x29, #-24]
    2eb4:	mov	x8, xzr
    2eb8:	mov	x0, x8
    2ebc:	bl	1750 <PyBytes_FromStringAndSize@plt>
    2ec0:	stur	x0, [x29, #-40]
    2ec4:	ldur	x8, [x29, #-40]
    2ec8:	cbnz	x8, 2ed8 <PyInit__bz2@@Base+0x1474>
    2ecc:	mov	x8, xzr
    2ed0:	stur	x8, [x29, #-8]
    2ed4:	b	30c4 <PyInit__bz2@@Base+0x1660>
    2ed8:	ldur	x8, [x29, #-40]
    2edc:	add	x8, x8, #0x20
    2ee0:	ldr	x9, [sp, #48]
    2ee4:	str	x8, [x9, #24]
    2ee8:	ldur	x8, [x29, #-40]
    2eec:	ldr	x8, [x8, #16]
    2ef0:	ldur	x9, [x29, #-32]
    2ef4:	subs	x8, x8, x9
    2ef8:	str	x8, [sp, #32]
    2efc:	ldr	x8, [sp, #32]
    2f00:	mov	x9, #0xffffffff            	// #4294967295
    2f04:	cmp	x8, x9
    2f08:	b.ls	2f18 <PyInit__bz2@@Base+0x14b4>  // b.plast
    2f0c:	mov	x8, #0xffffffff            	// #4294967295
    2f10:	str	x8, [sp, #16]
    2f14:	b	2f20 <PyInit__bz2@@Base+0x14bc>
    2f18:	ldr	x8, [sp, #32]
    2f1c:	str	x8, [sp, #16]
    2f20:	ldr	x8, [sp, #16]
    2f24:	ldr	x9, [sp, #48]
    2f28:	str	w8, [x9, #32]
    2f2c:	ldur	x9, [x29, #-16]
    2f30:	ldr	x9, [x9, #136]
    2f34:	mov	x10, #0xffffffff            	// #4294967295
    2f38:	cmp	x9, x10
    2f3c:	b.ls	2f4c <PyInit__bz2@@Base+0x14e8>  // b.plast
    2f40:	mov	x8, #0xffffffff            	// #4294967295
    2f44:	str	x8, [sp, #8]
    2f48:	b	2f58 <PyInit__bz2@@Base+0x14f4>
    2f4c:	ldur	x8, [x29, #-16]
    2f50:	ldr	x8, [x8, #136]
    2f54:	str	x8, [sp, #8]
    2f58:	ldr	x8, [sp, #8]
    2f5c:	ldr	x9, [sp, #48]
    2f60:	str	w8, [x9, #8]
    2f64:	ldr	x9, [sp, #48]
    2f68:	ldr	w8, [x9, #8]
    2f6c:	mov	w9, w8
    2f70:	ldur	x10, [x29, #-16]
    2f74:	ldr	x11, [x10, #136]
    2f78:	subs	x9, x11, x9
    2f7c:	str	x9, [x10, #136]
    2f80:	bl	1900 <PyEval_SaveThread@plt>
    2f84:	str	x0, [sp, #24]
    2f88:	ldr	x0, [sp, #48]
    2f8c:	bl	18d0 <BZ2_bzDecompress@plt>
    2f90:	str	w0, [sp, #44]
    2f94:	ldr	x9, [sp, #48]
    2f98:	ldr	x9, [x9, #24]
    2f9c:	ldur	x10, [x29, #-40]
    2fa0:	add	x10, x10, #0x20
    2fa4:	subs	x9, x9, x10
    2fa8:	stur	x9, [x29, #-32]
    2fac:	ldr	x9, [sp, #48]
    2fb0:	ldr	w8, [x9, #8]
    2fb4:	mov	w9, w8
    2fb8:	ldur	x10, [x29, #-16]
    2fbc:	ldr	x11, [x10, #136]
    2fc0:	add	x9, x11, x9
    2fc4:	str	x9, [x10, #136]
    2fc8:	ldr	x0, [sp, #24]
    2fcc:	bl	16f0 <PyEval_RestoreThread@plt>
    2fd0:	ldr	w0, [sp, #44]
    2fd4:	bl	21e8 <PyInit__bz2@@Base+0x784>
    2fd8:	cbz	w0, 2fe0 <PyInit__bz2@@Base+0x157c>
    2fdc:	b	30b4 <PyInit__bz2@@Base+0x1650>
    2fe0:	ldr	w8, [sp, #44]
    2fe4:	cmp	w8, #0x4
    2fe8:	b.ne	2ffc <PyInit__bz2@@Base+0x1598>  // b.any
    2fec:	ldur	x8, [x29, #-16]
    2ff0:	mov	w9, #0x1                   	// #1
    2ff4:	strb	w9, [x8, #96]
    2ff8:	b	3078 <PyInit__bz2@@Base+0x1614>
    2ffc:	ldur	x8, [x29, #-16]
    3000:	ldr	x8, [x8, #136]
    3004:	cbnz	x8, 300c <PyInit__bz2@@Base+0x15a8>
    3008:	b	3078 <PyInit__bz2@@Base+0x1614>
    300c:	ldr	x8, [sp, #48]
    3010:	ldr	w9, [x8, #32]
    3014:	cbnz	w9, 3074 <PyInit__bz2@@Base+0x1610>
    3018:	ldur	x8, [x29, #-32]
    301c:	ldur	x9, [x29, #-24]
    3020:	cmp	x8, x9
    3024:	b.ne	302c <PyInit__bz2@@Base+0x15c8>  // b.any
    3028:	b	3078 <PyInit__bz2@@Base+0x1614>
    302c:	ldur	x8, [x29, #-32]
    3030:	ldur	x9, [x29, #-40]
    3034:	ldr	x9, [x9, #16]
    3038:	cmp	x8, x9
    303c:	b.ne	305c <PyInit__bz2@@Base+0x15f8>  // b.any
    3040:	ldur	x1, [x29, #-24]
    3044:	sub	x0, x29, #0x28
    3048:	bl	2134 <PyInit__bz2@@Base+0x6d0>
    304c:	mov	w8, #0xffffffff            	// #-1
    3050:	cmp	w0, w8
    3054:	b.ne	305c <PyInit__bz2@@Base+0x15f8>  // b.any
    3058:	b	30b4 <PyInit__bz2@@Base+0x1650>
    305c:	ldur	x8, [x29, #-40]
    3060:	add	x8, x8, #0x20
    3064:	ldur	x9, [x29, #-32]
    3068:	add	x8, x8, x9
    306c:	ldr	x9, [sp, #48]
    3070:	str	x8, [x9, #24]
    3074:	b	2ee8 <PyInit__bz2@@Base+0x1484>
    3078:	ldur	x8, [x29, #-32]
    307c:	ldur	x9, [x29, #-40]
    3080:	ldr	x9, [x9, #16]
    3084:	cmp	x8, x9
    3088:	b.eq	30a8 <PyInit__bz2@@Base+0x1644>  // b.none
    308c:	ldur	x1, [x29, #-32]
    3090:	sub	x0, x29, #0x28
    3094:	bl	16e0 <_PyBytes_Resize@plt>
    3098:	mov	w8, #0xffffffff            	// #-1
    309c:	cmp	w0, w8
    30a0:	b.ne	30a8 <PyInit__bz2@@Base+0x1644>  // b.any
    30a4:	b	30b4 <PyInit__bz2@@Base+0x1650>
    30a8:	ldur	x8, [x29, #-40]
    30ac:	stur	x8, [x29, #-8]
    30b0:	b	30c4 <PyInit__bz2@@Base+0x1660>
    30b4:	ldur	x0, [x29, #-40]
    30b8:	bl	2350 <PyInit__bz2@@Base+0x8ec>
    30bc:	mov	x8, xzr
    30c0:	stur	x8, [x29, #-8]
    30c4:	ldur	x0, [x29, #-8]
    30c8:	ldp	x29, x30, [sp, #96]
    30cc:	add	sp, sp, #0x70
    30d0:	ret
    30d4:	sub	sp, sp, #0x40
    30d8:	stp	x29, x30, [sp, #48]
    30dc:	add	x29, sp, #0x30
    30e0:	stur	x0, [x29, #-16]
    30e4:	bl	18c0 <PyThread_allocate_lock@plt>
    30e8:	str	x0, [sp, #16]
    30ec:	ldr	x8, [sp, #16]
    30f0:	cbnz	x8, 3118 <PyInit__bz2@@Base+0x16b4>
    30f4:	adrp	x8, 13000 <PyInit__bz2@@Base+0x1159c>
    30f8:	ldr	x8, [x8, #4008]
    30fc:	ldr	x0, [x8]
    3100:	adrp	x1, 3000 <PyInit__bz2@@Base+0x159c>
    3104:	add	x1, x1, #0xb85
    3108:	bl	17a0 <PyErr_SetString@plt>
    310c:	mov	w9, #0xffffffff            	// #-1
    3110:	stur	w9, [x29, #-4]
    3114:	b	3228 <PyInit__bz2@@Base+0x17c4>
    3118:	ldur	x8, [x29, #-16]
    311c:	ldr	x8, [x8, #144]
    3120:	cbz	x8, 3130 <PyInit__bz2@@Base+0x16cc>
    3124:	ldur	x8, [x29, #-16]
    3128:	ldr	x0, [x8, #144]
    312c:	bl	1980 <PyThread_free_lock@plt>
    3130:	ldr	x8, [sp, #16]
    3134:	ldur	x9, [x29, #-16]
    3138:	str	x8, [x9, #144]
    313c:	ldur	x8, [x29, #-16]
    3140:	mov	w10, #0x1                   	// #1
    3144:	strb	w10, [x8, #112]
    3148:	ldur	x8, [x29, #-16]
    314c:	mov	x9, xzr
    3150:	str	xzr, [x8, #136]
    3154:	ldur	x8, [x29, #-16]
    3158:	str	x9, [x8, #120]
    315c:	ldur	x8, [x29, #-16]
    3160:	str	xzr, [x8, #128]
    3164:	ldur	x8, [x29, #-16]
    3168:	ldr	x8, [x8, #104]
    316c:	str	x8, [sp, #8]
    3170:	mov	x8, xzr
    3174:	mov	x0, x8
    3178:	mov	x1, x8
    317c:	bl	1750 <PyBytes_FromStringAndSize@plt>
    3180:	ldur	x8, [x29, #-16]
    3184:	str	x0, [x8, #104]
    3188:	ldr	x0, [sp, #8]
    318c:	bl	2350 <PyInit__bz2@@Base+0x8ec>
    3190:	ldur	x8, [x29, #-16]
    3194:	ldr	x8, [x8, #104]
    3198:	cbnz	x8, 31a0 <PyInit__bz2@@Base+0x173c>
    319c:	b	31d4 <PyInit__bz2@@Base+0x1770>
    31a0:	ldur	x8, [x29, #-16]
    31a4:	add	x0, x8, #0x10
    31a8:	mov	w9, wzr
    31ac:	mov	w1, w9
    31b0:	mov	w2, w9
    31b4:	bl	17b0 <BZ2_bzDecompressInit@plt>
    31b8:	stur	w0, [x29, #-20]
    31bc:	ldur	w0, [x29, #-20]
    31c0:	bl	21e8 <PyInit__bz2@@Base+0x784>
    31c4:	cbz	w0, 31cc <PyInit__bz2@@Base+0x1768>
    31c8:	b	31d4 <PyInit__bz2@@Base+0x1770>
    31cc:	stur	wzr, [x29, #-4]
    31d0:	b	3228 <PyInit__bz2@@Base+0x17c4>
    31d4:	ldur	x8, [x29, #-16]
    31d8:	ldr	x8, [x8, #104]
    31dc:	str	x8, [sp]
    31e0:	ldr	x8, [sp]
    31e4:	cbz	x8, 3208 <PyInit__bz2@@Base+0x17a4>
    31e8:	ldur	x8, [x29, #-16]
    31ec:	mov	x9, xzr
    31f0:	str	x9, [x8, #104]
    31f4:	ldr	x2, [sp]
    31f8:	adrp	x0, 3000 <PyInit__bz2@@Base+0x159c>
    31fc:	add	x0, x0, #0xbb2
    3200:	mov	w1, #0x285                 	// #645
    3204:	bl	2388 <PyInit__bz2@@Base+0x924>
    3208:	ldur	x8, [x29, #-16]
    320c:	ldr	x0, [x8, #144]
    3210:	bl	1980 <PyThread_free_lock@plt>
    3214:	ldur	x8, [x29, #-16]
    3218:	mov	x9, xzr
    321c:	str	x9, [x8, #144]
    3220:	mov	w10, #0xffffffff            	// #-1
    3224:	stur	w10, [x29, #-4]
    3228:	ldur	w0, [x29, #-4]
    322c:	ldp	x29, x30, [sp, #48]
    3230:	add	sp, sp, #0x40
    3234:	ret

Disassembly of section .fini:

0000000000003238 <.fini>:
    3238:	stp	x29, x30, [sp, #-16]!
    323c:	mov	x29, sp
    3240:	ldp	x29, x30, [sp], #16
    3244:	ret
