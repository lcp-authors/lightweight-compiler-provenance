
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//_decimal.cpython-38-aarch64-linux-gnu.so_gcc_-O2:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000006438 <.init>:
    6438:	stp	x29, x30, [sp, #-16]!
    643c:	mov	x29, sp
    6440:	bl	6aa0 <PyFloat_FromString@plt+0x10>
    6444:	ldp	x29, x30, [sp], #16
    6448:	ret

Disassembly of section .plt:

0000000000006450 <memcpy@plt-0x20>:
    6450:	stp	x16, x30, [sp, #-16]!
    6454:	adrp	x16, 5c000 <PyInit__decimal@@Base+0x41a80>
    6458:	ldr	x17, [x16, #4088]
    645c:	add	x16, x16, #0xff8
    6460:	br	x17
    6464:	nop
    6468:	nop
    646c:	nop

0000000000006470 <memcpy@plt>:
    6470:	adrp	x16, 5d000 <memcpy@GLIBC_2.17>
    6474:	ldr	x17, [x16]
    6478:	add	x16, x16, #0x0
    647c:	br	x17

0000000000006480 <PyUnicode_FromFormat@plt>:
    6480:	adrp	x16, 5d000 <memcpy@GLIBC_2.17>
    6484:	ldr	x17, [x16, #8]
    6488:	add	x16, x16, #0x8
    648c:	br	x17

0000000000006490 <memmove@plt>:
    6490:	adrp	x16, 5d000 <memcpy@GLIBC_2.17>
    6494:	ldr	x17, [x16, #16]
    6498:	add	x16, x16, #0x10
    649c:	br	x17

00000000000064a0 <PyList_New@plt>:
    64a0:	adrp	x16, 5d000 <memcpy@GLIBC_2.17>
    64a4:	ldr	x17, [x16, #24]
    64a8:	add	x16, x16, #0x18
    64ac:	br	x17

00000000000064b0 <_PyUnicode_Ready@plt>:
    64b0:	adrp	x16, 5d000 <memcpy@GLIBC_2.17>
    64b4:	ldr	x17, [x16, #32]
    64b8:	add	x16, x16, #0x20
    64bc:	br	x17

00000000000064c0 <PyDict_SetItemString@plt>:
    64c0:	adrp	x16, 5d000 <memcpy@GLIBC_2.17>
    64c4:	ldr	x17, [x16, #40]
    64c8:	add	x16, x16, #0x28
    64cc:	br	x17

00000000000064d0 <strlen@plt>:
    64d0:	adrp	x16, 5d000 <memcpy@GLIBC_2.17>
    64d4:	ldr	x17, [x16, #48]
    64d8:	add	x16, x16, #0x30
    64dc:	br	x17

00000000000064e0 <PyDict_Size@plt>:
    64e0:	adrp	x16, 5d000 <memcpy@GLIBC_2.17>
    64e4:	ldr	x17, [x16, #56]
    64e8:	add	x16, x16, #0x38
    64ec:	br	x17

00000000000064f0 <mbstowcs@plt>:
    64f0:	adrp	x16, 5d000 <memcpy@GLIBC_2.17>
    64f4:	ldr	x17, [x16, #64]
    64f8:	add	x16, x16, #0x40
    64fc:	br	x17

0000000000006500 <PyModule_AddIntConstant@plt>:
    6500:	adrp	x16, 5d000 <memcpy@GLIBC_2.17>
    6504:	ldr	x17, [x16, #72]
    6508:	add	x16, x16, #0x48
    650c:	br	x17

0000000000006510 <raise@plt>:
    6510:	adrp	x16, 5d000 <memcpy@GLIBC_2.17>
    6514:	ldr	x17, [x16, #80]
    6518:	add	x16, x16, #0x50
    651c:	br	x17

0000000000006520 <PyArg_ParseTupleAndKeywords@plt>:
    6520:	adrp	x16, 5d000 <memcpy@GLIBC_2.17>
    6524:	ldr	x17, [x16, #88]
    6528:	add	x16, x16, #0x58
    652c:	br	x17

0000000000006530 <PyList_AsTuple@plt>:
    6530:	adrp	x16, 5d000 <memcpy@GLIBC_2.17>
    6534:	ldr	x17, [x16, #96]
    6538:	add	x16, x16, #0x60
    653c:	br	x17

0000000000006540 <strtoll@plt>:
    6540:	adrp	x16, 5d000 <memcpy@GLIBC_2.17>
    6544:	ldr	x17, [x16, #104]
    6548:	add	x16, x16, #0x68
    654c:	br	x17

0000000000006550 <PyObject_CallMethod@plt>:
    6550:	adrp	x16, 5d000 <memcpy@GLIBC_2.17>
    6554:	ldr	x17, [x16, #112]
    6558:	add	x16, x16, #0x70
    655c:	br	x17

0000000000006560 <PyMem_Free@plt>:
    6560:	adrp	x16, 5d000 <memcpy@GLIBC_2.17>
    6564:	ldr	x17, [x16, #120]
    6568:	add	x16, x16, #0x78
    656c:	br	x17

0000000000006570 <PyUnicode_FromWideChar@plt>:
    6570:	adrp	x16, 5d000 <memcpy@GLIBC_2.17>
    6574:	ldr	x17, [x16, #128]
    6578:	add	x16, x16, #0x80
    657c:	br	x17

0000000000006580 <PyObject_GetAttrString@plt>:
    6580:	adrp	x16, 5d000 <memcpy@GLIBC_2.17>
    6584:	ldr	x17, [x16, #136]
    6588:	add	x16, x16, #0x88
    658c:	br	x17

0000000000006590 <__cxa_finalize@plt>:
    6590:	adrp	x16, 5d000 <memcpy@GLIBC_2.17>
    6594:	ldr	x17, [x16, #144]
    6598:	add	x16, x16, #0x90
    659c:	br	x17

00000000000065a0 <_PyLong_New@plt>:
    65a0:	adrp	x16, 5d000 <memcpy@GLIBC_2.17>
    65a4:	ldr	x17, [x16, #152]
    65a8:	add	x16, x16, #0x98
    65ac:	br	x17

00000000000065b0 <fputc@plt>:
    65b0:	adrp	x16, 5d000 <memcpy@GLIBC_2.17>
    65b4:	ldr	x17, [x16, #160]
    65b8:	add	x16, x16, #0xa0
    65bc:	br	x17

00000000000065c0 <PyUnicode_AsUTF8String@plt>:
    65c0:	adrp	x16, 5d000 <memcpy@GLIBC_2.17>
    65c4:	ldr	x17, [x16, #168]
    65c8:	add	x16, x16, #0xa8
    65cc:	br	x17

00000000000065d0 <_Py_Dealloc@plt>:
    65d0:	adrp	x16, 5d000 <memcpy@GLIBC_2.17>
    65d4:	ldr	x17, [x16, #176]
    65d8:	add	x16, x16, #0xb0
    65dc:	br	x17

00000000000065e0 <PyErr_NoMemory@plt>:
    65e0:	adrp	x16, 5d000 <memcpy@GLIBC_2.17>
    65e4:	ldr	x17, [x16, #184]
    65e8:	add	x16, x16, #0xb8
    65ec:	br	x17

00000000000065f0 <PyErr_SetObject@plt>:
    65f0:	adrp	x16, 5d000 <memcpy@GLIBC_2.17>
    65f4:	ldr	x17, [x16, #192]
    65f8:	add	x16, x16, #0xc0
    65fc:	br	x17

0000000000006600 <__ctype_tolower_loc@plt>:
    6600:	adrp	x16, 5d000 <memcpy@GLIBC_2.17>
    6604:	ldr	x17, [x16, #200]
    6608:	add	x16, x16, #0xc8
    660c:	br	x17

0000000000006610 <snprintf@plt>:
    6610:	adrp	x16, 5d000 <memcpy@GLIBC_2.17>
    6614:	ldr	x17, [x16, #208]
    6618:	add	x16, x16, #0xd0
    661c:	br	x17

0000000000006620 <log10@plt>:
    6620:	adrp	x16, 5d000 <memcpy@GLIBC_2.17>
    6624:	ldr	x17, [x16, #216]
    6628:	add	x16, x16, #0xd8
    662c:	br	x17

0000000000006630 <localeconv@plt>:
    6630:	adrp	x16, 5d000 <memcpy@GLIBC_2.17>
    6634:	ldr	x17, [x16, #224]
    6638:	add	x16, x16, #0xe0
    663c:	br	x17

0000000000006640 <malloc@plt>:
    6640:	adrp	x16, 5d000 <memcpy@GLIBC_2.17>
    6644:	ldr	x17, [x16, #232]
    6648:	add	x16, x16, #0xe8
    664c:	br	x17

0000000000006650 <PyErr_SetString@plt>:
    6650:	adrp	x16, 5d000 <memcpy@GLIBC_2.17>
    6654:	ldr	x17, [x16, #240]
    6658:	add	x16, x16, #0xf0
    665c:	br	x17

0000000000006660 <PyObject_IsInstance@plt>:
    6660:	adrp	x16, 5d000 <memcpy@GLIBC_2.17>
    6664:	ldr	x17, [x16, #248]
    6668:	add	x16, x16, #0xf8
    666c:	br	x17

0000000000006670 <memset@plt>:
    6670:	adrp	x16, 5d000 <memcpy@GLIBC_2.17>
    6674:	ldr	x17, [x16, #256]
    6678:	add	x16, x16, #0x100
    667c:	br	x17

0000000000006680 <PyContextVar_Set@plt>:
    6680:	adrp	x16, 5d000 <memcpy@GLIBC_2.17>
    6684:	ldr	x17, [x16, #264]
    6688:	add	x16, x16, #0x108
    668c:	br	x17

0000000000006690 <PyObject_Free@plt>:
    6690:	adrp	x16, 5d000 <memcpy@GLIBC_2.17>
    6694:	ldr	x17, [x16, #272]
    6698:	add	x16, x16, #0x110
    669c:	br	x17

00000000000066a0 <PyLong_FromSsize_t@plt>:
    66a0:	adrp	x16, 5d000 <memcpy@GLIBC_2.17>
    66a4:	ldr	x17, [x16, #280]
    66a8:	add	x16, x16, #0x118
    66ac:	br	x17

00000000000066b0 <PyFloat_FromDouble@plt>:
    66b0:	adrp	x16, 5d000 <memcpy@GLIBC_2.17>
    66b4:	ldr	x17, [x16, #288]
    66b8:	add	x16, x16, #0x120
    66bc:	br	x17

00000000000066c0 <PyType_Ready@plt>:
    66c0:	adrp	x16, 5d000 <memcpy@GLIBC_2.17>
    66c4:	ldr	x17, [x16, #296]
    66c8:	add	x16, x16, #0x128
    66cc:	br	x17

00000000000066d0 <calloc@plt>:
    66d0:	adrp	x16, 5d000 <memcpy@GLIBC_2.17>
    66d4:	ldr	x17, [x16, #304]
    66d8:	add	x16, x16, #0x130
    66dc:	br	x17

00000000000066e0 <PyLong_FromLong@plt>:
    66e0:	adrp	x16, 5d000 <memcpy@GLIBC_2.17>
    66e4:	ldr	x17, [x16, #312]
    66e8:	add	x16, x16, #0x138
    66ec:	br	x17

00000000000066f0 <PyLong_AsSsize_t@plt>:
    66f0:	adrp	x16, 5d000 <memcpy@GLIBC_2.17>
    66f4:	ldr	x17, [x16, #320]
    66f8:	add	x16, x16, #0x140
    66fc:	br	x17

0000000000006700 <_PyLong_GCD@plt>:
    6700:	adrp	x16, 5d000 <memcpy@GLIBC_2.17>
    6704:	ldr	x17, [x16, #328]
    6708:	add	x16, x16, #0x148
    670c:	br	x17

0000000000006710 <PyErr_NewException@plt>:
    6710:	adrp	x16, 5d000 <memcpy@GLIBC_2.17>
    6714:	ldr	x17, [x16, #336]
    6718:	add	x16, x16, #0x150
    671c:	br	x17

0000000000006720 <realloc@plt>:
    6720:	adrp	x16, 5d000 <memcpy@GLIBC_2.17>
    6724:	ldr	x17, [x16, #344]
    6728:	add	x16, x16, #0x158
    672c:	br	x17

0000000000006730 <PyErr_Clear@plt>:
    6730:	adrp	x16, 5d000 <memcpy@GLIBC_2.17>
    6734:	ldr	x17, [x16, #352]
    6738:	add	x16, x16, #0x160
    673c:	br	x17

0000000000006740 <PyContextVar_Get@plt>:
    6740:	adrp	x16, 5d000 <memcpy@GLIBC_2.17>
    6744:	ldr	x17, [x16, #360]
    6748:	add	x16, x16, #0x168
    674c:	br	x17

0000000000006750 <PyBool_FromLong@plt>:
    6750:	adrp	x16, 5d000 <memcpy@GLIBC_2.17>
    6754:	ldr	x17, [x16, #368]
    6758:	add	x16, x16, #0x170
    675c:	br	x17

0000000000006760 <PyContextVar_New@plt>:
    6760:	adrp	x16, 5d000 <memcpy@GLIBC_2.17>
    6764:	ldr	x17, [x16, #376]
    6768:	add	x16, x16, #0x178
    676c:	br	x17

0000000000006770 <PyList_Append@plt>:
    6770:	adrp	x16, 5d000 <memcpy@GLIBC_2.17>
    6774:	ldr	x17, [x16, #384]
    6778:	add	x16, x16, #0x180
    677c:	br	x17

0000000000006780 <__gmon_start__@plt>:
    6780:	adrp	x16, 5d000 <memcpy@GLIBC_2.17>
    6784:	ldr	x17, [x16, #392]
    6788:	add	x16, x16, #0x188
    678c:	br	x17

0000000000006790 <PyObject_CallFunction@plt>:
    6790:	adrp	x16, 5d000 <memcpy@GLIBC_2.17>
    6794:	ldr	x17, [x16, #400]
    6798:	add	x16, x16, #0x190
    679c:	br	x17

00000000000067a0 <PyTuple_New@plt>:
    67a0:	adrp	x16, 5d000 <memcpy@GLIBC_2.17>
    67a4:	ldr	x17, [x16, #408]
    67a8:	add	x16, x16, #0x198
    67ac:	br	x17

00000000000067b0 <PyObject_GenericGetAttr@plt>:
    67b0:	adrp	x16, 5d000 <memcpy@GLIBC_2.17>
    67b4:	ldr	x17, [x16, #416]
    67b8:	add	x16, x16, #0x1a0
    67bc:	br	x17

00000000000067c0 <abort@plt>:
    67c0:	adrp	x16, 5d000 <memcpy@GLIBC_2.17>
    67c4:	ldr	x17, [x16, #424]
    67c8:	add	x16, x16, #0x1a8
    67cc:	br	x17

00000000000067d0 <Py_BuildValue@plt>:
    67d0:	adrp	x16, 5d000 <memcpy@GLIBC_2.17>
    67d4:	ldr	x17, [x16, #432]
    67d8:	add	x16, x16, #0x1b0
    67dc:	br	x17

00000000000067e0 <PyErr_Occurred@plt>:
    67e0:	adrp	x16, 5d000 <memcpy@GLIBC_2.17>
    67e4:	ldr	x17, [x16, #440]
    67e8:	add	x16, x16, #0x1b8
    67ec:	br	x17

00000000000067f0 <PyModule_Create2@plt>:
    67f0:	adrp	x16, 5d000 <memcpy@GLIBC_2.17>
    67f4:	ldr	x17, [x16, #448]
    67f8:	add	x16, x16, #0x1c0
    67fc:	br	x17

0000000000006800 <_PyUnicode_IsWhitespace@plt>:
    6800:	adrp	x16, 5d000 <memcpy@GLIBC_2.17>
    6804:	ldr	x17, [x16, #456]
    6808:	add	x16, x16, #0x1c8
    680c:	br	x17

0000000000006810 <puts@plt>:
    6810:	adrp	x16, 5d000 <memcpy@GLIBC_2.17>
    6814:	ldr	x17, [x16, #464]
    6818:	add	x16, x16, #0x1d0
    681c:	br	x17

0000000000006820 <PyLong_AsLong@plt>:
    6820:	adrp	x16, 5d000 <memcpy@GLIBC_2.17>
    6824:	ldr	x17, [x16, #472]
    6828:	add	x16, x16, #0x1d8
    682c:	br	x17

0000000000006830 <PyImport_ImportModule@plt>:
    6830:	adrp	x16, 5d000 <memcpy@GLIBC_2.17>
    6834:	ldr	x17, [x16, #480]
    6838:	add	x16, x16, #0x1e0
    683c:	br	x17

0000000000006840 <PyObject_CallObject@plt>:
    6840:	adrp	x16, 5d000 <memcpy@GLIBC_2.17>
    6844:	ldr	x17, [x16, #488]
    6848:	add	x16, x16, #0x1e8
    684c:	br	x17

0000000000006850 <PyObject_CallFunctionObjArgs@plt>:
    6850:	adrp	x16, 5d000 <memcpy@GLIBC_2.17>
    6854:	ldr	x17, [x16, #496]
    6858:	add	x16, x16, #0x1f0
    685c:	br	x17

0000000000006860 <strcmp@plt>:
    6860:	adrp	x16, 5d000 <memcpy@GLIBC_2.17>
    6864:	ldr	x17, [x16, #504]
    6868:	add	x16, x16, #0x1f8
    686c:	br	x17

0000000000006870 <PyDict_GetItemString@plt>:
    6870:	adrp	x16, 5d000 <memcpy@GLIBC_2.17>
    6874:	ldr	x17, [x16, #512]
    6878:	add	x16, x16, #0x200
    687c:	br	x17

0000000000006880 <__ctype_b_loc@plt>:
    6880:	adrp	x16, 5d000 <memcpy@GLIBC_2.17>
    6884:	ldr	x17, [x16, #520]
    6888:	add	x16, x16, #0x208
    688c:	br	x17

0000000000006890 <PyUnicode_CompareWithASCIIString@plt>:
    6890:	adrp	x16, 5d000 <memcpy@GLIBC_2.17>
    6894:	ldr	x17, [x16, #528]
    6898:	add	x16, x16, #0x210
    689c:	br	x17

00000000000068a0 <PyUnicode_DecodeUTF8@plt>:
    68a0:	adrp	x16, 5d000 <memcpy@GLIBC_2.17>
    68a4:	ldr	x17, [x16, #536]
    68a8:	add	x16, x16, #0x218
    68ac:	br	x17

00000000000068b0 <_PyUnicode_ToDecimalDigit@plt>:
    68b0:	adrp	x16, 5d000 <memcpy@GLIBC_2.17>
    68b4:	ldr	x17, [x16, #544]
    68b8:	add	x16, x16, #0x220
    68bc:	br	x17

00000000000068c0 <PyFloat_AsDouble@plt>:
    68c0:	adrp	x16, 5d000 <memcpy@GLIBC_2.17>
    68c4:	ldr	x17, [x16, #552]
    68c8:	add	x16, x16, #0x228
    68cc:	br	x17

00000000000068d0 <PyObject_IsTrue@plt>:
    68d0:	adrp	x16, 5d000 <memcpy@GLIBC_2.17>
    68d4:	ldr	x17, [x16, #560]
    68d8:	add	x16, x16, #0x230
    68dc:	br	x17

00000000000068e0 <PyArg_ParseTuple@plt>:
    68e0:	adrp	x16, 5d000 <memcpy@GLIBC_2.17>
    68e4:	ldr	x17, [x16, #568]
    68e8:	add	x16, x16, #0x238
    68ec:	br	x17

00000000000068f0 <free@plt>:
    68f0:	adrp	x16, 5d000 <memcpy@GLIBC_2.17>
    68f4:	ldr	x17, [x16, #576]
    68f8:	add	x16, x16, #0x240
    68fc:	br	x17

0000000000006900 <PyUnicode_Compare@plt>:
    6900:	adrp	x16, 5d000 <memcpy@GLIBC_2.17>
    6904:	ldr	x17, [x16, #584]
    6908:	add	x16, x16, #0x248
    690c:	br	x17

0000000000006910 <PyList_Size@plt>:
    6910:	adrp	x16, 5d000 <memcpy@GLIBC_2.17>
    6914:	ldr	x17, [x16, #592]
    6918:	add	x16, x16, #0x250
    691c:	br	x17

0000000000006920 <PyDict_New@plt>:
    6920:	adrp	x16, 5d000 <memcpy@GLIBC_2.17>
    6924:	ldr	x17, [x16, #600]
    6928:	add	x16, x16, #0x258
    692c:	br	x17

0000000000006930 <fwrite@plt>:
    6930:	adrp	x16, 5d000 <memcpy@GLIBC_2.17>
    6934:	ldr	x17, [x16, #608]
    6938:	add	x16, x16, #0x260
    693c:	br	x17

0000000000006940 <PyLong_FromUnsignedLong@plt>:
    6940:	adrp	x16, 5d000 <memcpy@GLIBC_2.17>
    6944:	ldr	x17, [x16, #616]
    6948:	add	x16, x16, #0x268
    694c:	br	x17

0000000000006950 <_PyObject_New@plt>:
    6950:	adrp	x16, 5d000 <memcpy@GLIBC_2.17>
    6954:	ldr	x17, [x16, #624]
    6958:	add	x16, x16, #0x270
    695c:	br	x17

0000000000006960 <PyUnicode_FromString@plt>:
    6960:	adrp	x16, 5d000 <memcpy@GLIBC_2.17>
    6964:	ldr	x17, [x16, #632]
    6968:	add	x16, x16, #0x278
    696c:	br	x17

0000000000006970 <PyModule_AddStringConstant@plt>:
    6970:	adrp	x16, 5d000 <memcpy@GLIBC_2.17>
    6974:	ldr	x17, [x16, #640]
    6978:	add	x16, x16, #0x280
    697c:	br	x17

0000000000006980 <PyUnicode_InternFromString@plt>:
    6980:	adrp	x16, 5d000 <memcpy@GLIBC_2.17>
    6984:	ldr	x17, [x16, #648]
    6988:	add	x16, x16, #0x288
    698c:	br	x17

0000000000006990 <PyModule_AddObject@plt>:
    6990:	adrp	x16, 5d000 <memcpy@GLIBC_2.17>
    6994:	ldr	x17, [x16, #656]
    6998:	add	x16, x16, #0x290
    699c:	br	x17

00000000000069a0 <PyDict_SetItem@plt>:
    69a0:	adrp	x16, 5d000 <memcpy@GLIBC_2.17>
    69a4:	ldr	x17, [x16, #664]
    69a8:	add	x16, x16, #0x298
    69ac:	br	x17

00000000000069b0 <PyObject_GenericSetAttr@plt>:
    69b0:	adrp	x16, 5d000 <memcpy@GLIBC_2.17>
    69b4:	ldr	x17, [x16, #672]
    69b8:	add	x16, x16, #0x2a0
    69bc:	br	x17

00000000000069c0 <PyType_IsSubtype@plt>:
    69c0:	adrp	x16, 5d000 <memcpy@GLIBC_2.17>
    69c4:	ldr	x17, [x16, #680]
    69c8:	add	x16, x16, #0x2a8
    69cc:	br	x17

00000000000069d0 <PyUnicode_AsUTF8AndSize@plt>:
    69d0:	adrp	x16, 5d000 <memcpy@GLIBC_2.17>
    69d4:	ldr	x17, [x16, #688]
    69d8:	add	x16, x16, #0x2b0
    69dc:	br	x17

00000000000069e0 <PyTuple_Size@plt>:
    69e0:	adrp	x16, 5d000 <memcpy@GLIBC_2.17>
    69e4:	ldr	x17, [x16, #696]
    69e8:	add	x16, x16, #0x2b8
    69ec:	br	x17

00000000000069f0 <PyComplex_AsCComplex@plt>:
    69f0:	adrp	x16, 5d000 <memcpy@GLIBC_2.17>
    69f4:	ldr	x17, [x16, #704]
    69f8:	add	x16, x16, #0x2c0
    69fc:	br	x17

0000000000006a00 <PyComplex_FromDoubles@plt>:
    6a00:	adrp	x16, 5d000 <memcpy@GLIBC_2.17>
    6a04:	ldr	x17, [x16, #712]
    6a08:	add	x16, x16, #0x2c8
    6a0c:	br	x17

0000000000006a10 <PyErr_Format@plt>:
    6a10:	adrp	x16, 5d000 <memcpy@GLIBC_2.17>
    6a14:	ldr	x17, [x16, #720]
    6a18:	add	x16, x16, #0x2d0
    6a1c:	br	x17

0000000000006a20 <__errno_location@plt>:
    6a20:	adrp	x16, 5d000 <memcpy@GLIBC_2.17>
    6a24:	ldr	x17, [x16, #728]
    6a28:	add	x16, x16, #0x2d8
    6a2c:	br	x17

0000000000006a30 <PyList_GetItem@plt>:
    6a30:	adrp	x16, 5d000 <memcpy@GLIBC_2.17>
    6a34:	ldr	x17, [x16, #736]
    6a38:	add	x16, x16, #0x2e0
    6a3c:	br	x17

0000000000006a40 <PyMem_Malloc@plt>:
    6a40:	adrp	x16, 5d000 <memcpy@GLIBC_2.17>
    6a44:	ldr	x17, [x16, #744]
    6a48:	add	x16, x16, #0x2e8
    6a4c:	br	x17

0000000000006a50 <PyUnicode_New@plt>:
    6a50:	adrp	x16, 5d000 <memcpy@GLIBC_2.17>
    6a54:	ldr	x17, [x16, #752]
    6a58:	add	x16, x16, #0x2f0
    6a5c:	br	x17

0000000000006a60 <PyTuple_Pack@plt>:
    6a60:	adrp	x16, 5d000 <memcpy@GLIBC_2.17>
    6a64:	ldr	x17, [x16, #760]
    6a68:	add	x16, x16, #0x2f8
    6a6c:	br	x17

0000000000006a70 <fprintf@plt>:
    6a70:	adrp	x16, 5d000 <memcpy@GLIBC_2.17>
    6a74:	ldr	x17, [x16, #768]
    6a78:	add	x16, x16, #0x300
    6a7c:	br	x17

0000000000006a80 <PyDict_GetItemWithError@plt>:
    6a80:	adrp	x16, 5d000 <memcpy@GLIBC_2.17>
    6a84:	ldr	x17, [x16, #776]
    6a88:	add	x16, x16, #0x308
    6a8c:	br	x17

0000000000006a90 <PyFloat_FromString@plt>:
    6a90:	adrp	x16, 5d000 <memcpy@GLIBC_2.17>
    6a94:	ldr	x17, [x16, #784]
    6a98:	add	x16, x16, #0x310
    6a9c:	br	x17

Disassembly of section .text:

0000000000006aa0 <PyInit__decimal@@Base-0x13ae0>:
    6aa0:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
    6aa4:	ldr	x0, [x0, #3984]
    6aa8:	cbz	x0, 6ab0 <PyFloat_FromString@plt+0x20>
    6aac:	b	6780 <__gmon_start__@plt>
    6ab0:	ret
    6ab4:	nop
    6ab8:	adrp	x0, 5f000 <PyInit__decimal@@Base+0x44a80>
    6abc:	add	x0, x0, #0x6b8
    6ac0:	adrp	x1, 5f000 <PyInit__decimal@@Base+0x44a80>
    6ac4:	add	x1, x1, #0x6b8
    6ac8:	cmp	x1, x0
    6acc:	b.eq	6ae4 <PyFloat_FromString@plt+0x54>  // b.none
    6ad0:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41a80>
    6ad4:	ldr	x1, [x1, #3856]
    6ad8:	cbz	x1, 6ae4 <PyFloat_FromString@plt+0x54>
    6adc:	mov	x16, x1
    6ae0:	br	x16
    6ae4:	ret
    6ae8:	adrp	x0, 5f000 <PyInit__decimal@@Base+0x44a80>
    6aec:	add	x0, x0, #0x6b8
    6af0:	adrp	x1, 5f000 <PyInit__decimal@@Base+0x44a80>
    6af4:	add	x1, x1, #0x6b8
    6af8:	sub	x1, x1, x0
    6afc:	lsr	x2, x1, #63
    6b00:	add	x1, x2, x1, asr #3
    6b04:	cmp	xzr, x1, asr #1
    6b08:	asr	x1, x1, #1
    6b0c:	b.eq	6b24 <PyFloat_FromString@plt+0x94>  // b.none
    6b10:	adrp	x2, 5c000 <PyInit__decimal@@Base+0x41a80>
    6b14:	ldr	x2, [x2, #4056]
    6b18:	cbz	x2, 6b24 <PyFloat_FromString@plt+0x94>
    6b1c:	mov	x16, x2
    6b20:	br	x16
    6b24:	ret
    6b28:	stp	x29, x30, [sp, #-32]!
    6b2c:	mov	x29, sp
    6b30:	str	x19, [sp, #16]
    6b34:	adrp	x19, 5f000 <PyInit__decimal@@Base+0x44a80>
    6b38:	ldrb	w0, [x19, #1720]
    6b3c:	cbnz	w0, 6b64 <PyFloat_FromString@plt+0xd4>
    6b40:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
    6b44:	ldr	x0, [x0, #3896]
    6b48:	cbz	x0, 6b58 <PyFloat_FromString@plt+0xc8>
    6b4c:	adrp	x0, 5d000 <PyInit__decimal@@Base+0x42a80>
    6b50:	ldr	x0, [x0, #792]
    6b54:	bl	6590 <__cxa_finalize@plt>
    6b58:	bl	6ab8 <PyFloat_FromString@plt+0x28>
    6b5c:	mov	w0, #0x1                   	// #1
    6b60:	strb	w0, [x19, #1720]
    6b64:	ldr	x19, [sp, #16]
    6b68:	ldp	x29, x30, [sp], #32
    6b6c:	ret
    6b70:	b	6ae8 <PyFloat_FromString@plt+0x58>
    6b74:	nop
    6b78:	ret
    6b7c:	nop
    6b80:	mov	x1, x0
    6b84:	mov	w0, #0x0                   	// #0
    6b88:	str	xzr, [x1, #16]
    6b8c:	ret
    6b90:	mov	x0, #0x9                   	// #9
    6b94:	ret
    6b98:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41a80>
    6b9c:	adrp	x0, 5f000 <PyInit__decimal@@Base+0x44a80>
    6ba0:	ldr	x1, [x1, #3872]
    6ba4:	ldr	x0, [x0, #1728]
    6ba8:	ldr	x1, [x1, #216]
    6bac:	mov	x16, x1
    6bb0:	br	x16
    6bb4:	nop
    6bb8:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41a80>
    6bbc:	str	wzr, [x0, #40]
    6bc0:	ldr	x1, [x1, #4008]
    6bc4:	mov	x0, x1
    6bc8:	ldr	x2, [x1]
    6bcc:	add	x2, x2, #0x1
    6bd0:	str	x2, [x1]
    6bd4:	ret
    6bd8:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41a80>
    6bdc:	str	wzr, [x0, #44]
    6be0:	ldr	x1, [x1, #4008]
    6be4:	mov	x0, x1
    6be8:	ldr	x2, [x1]
    6bec:	add	x2, x2, #0x1
    6bf0:	str	x2, [x1]
    6bf4:	ret
    6bf8:	ldr	x2, [x0]
    6bfc:	add	x2, x2, #0x1
    6c00:	str	x2, [x0]
    6c04:	ret
    6c08:	stp	x29, x30, [sp, #-32]!
    6c0c:	adrp	x1, 5d000 <PyInit__decimal@@Base+0x42a80>
    6c10:	mov	x29, sp
    6c14:	str	x19, [sp, #16]
    6c18:	mov	x19, x0
    6c1c:	add	x0, x1, #0x320
    6c20:	mov	x1, #0x0                   	// #0
    6c24:	bl	6840 <PyObject_CallObject@plt>
    6c28:	cbz	x0, 6c54 <PyFloat_FromString@plt+0x1c4>
    6c2c:	add	x2, x19, #0x10
    6c30:	ldp	x4, x5, [x19, #16]
    6c34:	stp	x4, x5, [x0, #16]
    6c38:	ldp	x4, x5, [x2, #16]
    6c3c:	stp	x4, x5, [x0, #32]
    6c40:	ldp	x2, x3, [x2, #32]
    6c44:	stp	x2, x3, [x0, #48]
    6c48:	ldr	w1, [x19, #80]
    6c4c:	str	wzr, [x0, #48]
    6c50:	str	w1, [x0, #80]
    6c54:	ldr	x19, [sp, #16]
    6c58:	ldp	x29, x30, [sp], #32
    6c5c:	ret
    6c60:	stp	x29, x30, [sp, #-16]!
    6c64:	adrp	x1, 5d000 <PyInit__decimal@@Base+0x42a80>
    6c68:	add	x1, x1, #0x320
    6c6c:	mov	x29, sp
    6c70:	add	x1, x1, #0x1a0
    6c74:	cmp	x0, x1
    6c78:	b.eq	6cb8 <PyFloat_FromString@plt+0x228>  // b.none
    6c7c:	ldr	x2, [x0, #304]
    6c80:	mov	x1, #0x0                   	// #0
    6c84:	blr	x2
    6c88:	cbz	x0, 6cb0 <PyFloat_FromString@plt+0x220>
    6c8c:	add	x1, x0, #0x48
    6c90:	mov	x4, #0xffffffffffffffff    	// #-1
    6c94:	mov	w3, #0x30                  	// #48
    6c98:	mov	x2, #0x4                   	// #4
    6c9c:	str	x4, [x0, #16]
    6ca0:	strb	w3, [x0, #24]
    6ca4:	stp	xzr, xzr, [x0, #32]
    6ca8:	stp	xzr, x2, [x0, #48]
    6cac:	str	x1, [x0, #64]
    6cb0:	ldp	x29, x30, [sp], #16
    6cb4:	ret
    6cb8:	bl	6950 <_PyObject_New@plt>
    6cbc:	b	6c88 <PyFloat_FromString@plt+0x1f8>
    6cc0:	sub	sp, sp, #0x100
    6cc4:	adrp	x2, 5d000 <PyInit__decimal@@Base+0x42a80>
    6cc8:	add	x1, x2, #0x9a0
    6ccc:	stp	x29, x30, [sp, #96]
    6cd0:	add	x29, sp, #0x60
    6cd4:	ldr	x2, [x2, #2464]
    6cd8:	cbz	x2, 6d30 <PyFloat_FromString@plt+0x2a0>
    6cdc:	ldr	x0, [x0, #16]
    6ce0:	adrp	x8, 3b000 <PyInit__decimal@@Base+0x20a80>
    6ce4:	adrp	x7, 3b000 <PyInit__decimal@@Base+0x20a80>
    6ce8:	add	x8, x8, #0x888
    6cec:	add	x7, x7, #0x880
    6cf0:	add	x10, sp, #0x70
    6cf4:	ldr	w11, [x0]
    6cf8:	add	x9, sp, #0xb8
    6cfc:	mov	x2, #0x1                   	// #1
    6d00:	lsl	x0, x2, #3
    6d04:	ldr	w3, [x1, #16]
    6d08:	add	x4, x9, x0
    6d0c:	add	x0, x10, x0
    6d10:	tst	w11, w3
    6d14:	add	x2, x2, #0x1
    6d18:	ldr	x6, [x1, #8]
    6d1c:	csel	x5, x7, x8, ne  // ne = any
    6d20:	ldr	x3, [x1, #32]!
    6d24:	stur	x6, [x0, #-8]
    6d28:	stur	x5, [x4, #-8]
    6d2c:	cbnz	x3, 6d00 <PyFloat_FromString@plt+0x270>
    6d30:	ldr	x8, [sp, #144]
    6d34:	str	x8, [sp, #8]
    6d38:	ldr	x8, [sp, #208]
    6d3c:	str	x8, [sp]
    6d40:	ldr	x8, [sp, #216]
    6d44:	str	x8, [sp, #16]
    6d48:	ldr	x8, [sp, #152]
    6d4c:	str	x8, [sp, #24]
    6d50:	ldr	x8, [sp, #160]
    6d54:	str	x8, [sp, #40]
    6d58:	ldr	x8, [sp, #168]
    6d5c:	str	x8, [sp, #56]
    6d60:	ldr	x8, [sp, #176]
    6d64:	str	x8, [sp, #72]
    6d68:	ldr	x8, [sp, #224]
    6d6c:	str	x8, [sp, #32]
    6d70:	ldp	x1, x3, [sp, #112]
    6d74:	adrp	x0, 3b000 <PyInit__decimal@@Base+0x20a80>
    6d78:	ldp	x5, x7, [sp, #128]
    6d7c:	add	x0, x0, #0x890
    6d80:	ldp	x2, x4, [sp, #184]
    6d84:	ldr	x8, [sp, #232]
    6d88:	str	x8, [sp, #48]
    6d8c:	ldr	x8, [sp, #240]
    6d90:	str	x8, [sp, #64]
    6d94:	ldr	x6, [sp, #200]
    6d98:	ldr	x8, [sp, #248]
    6d9c:	str	x8, [sp, #80]
    6da0:	bl	6480 <PyUnicode_FromFormat@plt>
    6da4:	ldp	x29, x30, [sp, #96]
    6da8:	add	sp, sp, #0x100
    6dac:	ret
    6db0:	stp	x29, x30, [sp, #-16]!
    6db4:	add	x0, x0, #0x10
    6db8:	mov	x29, sp
    6dbc:	bl	1d630 <PyInit__decimal@@Base+0x30b0>
    6dc0:	sxtw	x0, w0
    6dc4:	ldp	x29, x30, [sp], #16
    6dc8:	b	66a0 <PyLong_FromSsize_t@plt>
    6dcc:	nop
    6dd0:	ldrsw	x0, [x0, #80]
    6dd4:	b	66e0 <PyLong_FromLong@plt>
    6dd8:	stp	x29, x30, [sp, #-16]!
    6ddc:	add	x0, x0, #0x10
    6de0:	mov	x29, sp
    6de4:	bl	1d618 <PyInit__decimal@@Base+0x3098>
    6de8:	adrp	x1, 5f000 <PyInit__decimal@@Base+0x44a80>
    6dec:	add	x1, x1, #0x6c0
    6df0:	add	x1, x1, #0x8
    6df4:	ldr	x0, [x1, w0, sxtw #3]
    6df8:	ldr	x1, [x0]
    6dfc:	add	x1, x1, #0x1
    6e00:	str	x1, [x0]
    6e04:	ldp	x29, x30, [sp], #16
    6e08:	ret
    6e0c:	nop
    6e10:	stp	x29, x30, [sp, #-16]!
    6e14:	add	x0, x0, #0x10
    6e18:	mov	x29, sp
    6e1c:	bl	1d610 <PyInit__decimal@@Base+0x3090>
    6e20:	ldp	x29, x30, [sp], #16
    6e24:	b	66a0 <PyLong_FromSsize_t@plt>
    6e28:	stp	x29, x30, [sp, #-16]!
    6e2c:	add	x0, x0, #0x10
    6e30:	mov	x29, sp
    6e34:	bl	1d608 <PyInit__decimal@@Base+0x3088>
    6e38:	ldp	x29, x30, [sp], #16
    6e3c:	b	66a0 <PyLong_FromSsize_t@plt>
    6e40:	stp	x29, x30, [sp, #-16]!
    6e44:	add	x0, x0, #0x10
    6e48:	mov	x29, sp
    6e4c:	bl	1d600 <PyInit__decimal@@Base+0x3080>
    6e50:	ldp	x29, x30, [sp], #16
    6e54:	b	66a0 <PyLong_FromSsize_t@plt>
    6e58:	stp	x29, x30, [sp, #-32]!
    6e5c:	mov	x29, sp
    6e60:	str	x19, [sp, #16]
    6e64:	mov	x19, x0
    6e68:	add	x0, x0, #0x18
    6e6c:	bl	281b8 <PyInit__decimal@@Base+0xdc38>
    6e70:	mov	x0, x19
    6e74:	ldr	x1, [x19, #8]
    6e78:	ldr	x19, [sp, #16]
    6e7c:	ldp	x29, x30, [sp], #32
    6e80:	ldr	x1, [x1, #320]
    6e84:	mov	x16, x1
    6e88:	br	x16
    6e8c:	nop
    6e90:	stp	x29, x30, [sp, #-64]!
    6e94:	mov	x29, sp
    6e98:	stp	x19, x20, [sp, #16]
    6e9c:	mov	x20, x1
    6ea0:	stp	x21, x22, [sp, #32]
    6ea4:	mov	x21, x3
    6ea8:	str	x23, [sp, #48]
    6eac:	mov	x23, x2
    6eb0:	bl	6c60 <PyFloat_FromString@plt+0x1d0>
    6eb4:	mov	x19, x0
    6eb8:	cbz	x0, 6ef0 <PyFloat_FromString@plt+0x460>
    6ebc:	ldr	x2, [x20, #16]
    6ec0:	add	x22, x0, #0x18
    6ec4:	cbz	x2, 6f68 <PyFloat_FromString@plt+0x4d8>
    6ec8:	mov	w3, #0x0                   	// #0
    6ecc:	tbnz	x2, #63, 6f08 <PyFloat_FromString@plt+0x478>
    6ed0:	cmp	x2, #0x1
    6ed4:	b.eq	6f18 <PyFloat_FromString@plt+0x488>  // b.none
    6ed8:	mov	x6, x21
    6edc:	mov	x5, x23
    6ee0:	add	x1, x20, #0x18
    6ee4:	mov	x0, x22
    6ee8:	mov	w4, #0x40000000            	// #1073741824
    6eec:	bl	38790 <PyInit__decimal@@Base+0x1e210>
    6ef0:	mov	x0, x19
    6ef4:	ldp	x19, x20, [sp, #16]
    6ef8:	ldp	x21, x22, [sp, #32]
    6efc:	ldr	x23, [sp, #48]
    6f00:	ldp	x29, x30, [sp], #64
    6f04:	ret
    6f08:	neg	x2, x2
    6f0c:	mov	w3, #0x1                   	// #1
    6f10:	cmp	x2, #0x1
    6f14:	b.ne	6ed8 <PyFloat_FromString@plt+0x448>  // b.any
    6f18:	ldr	x4, [x19, #64]
    6f1c:	mov	w1, w3
    6f20:	ldr	w3, [x20, #24]
    6f24:	mov	x0, x22
    6f28:	str	x3, [x4]
    6f2c:	str	x2, [x19, #48]
    6f30:	bl	28768 <PyInit__decimal@@Base+0xe1e8>
    6f34:	str	xzr, [x19, #32]
    6f38:	mov	x0, x22
    6f3c:	bl	28498 <PyInit__decimal@@Base+0xdf18>
    6f40:	mov	x2, x21
    6f44:	mov	x1, x23
    6f48:	mov	x0, x22
    6f4c:	bl	2b110 <PyInit__decimal@@Base+0x10b90>
    6f50:	mov	x0, x19
    6f54:	ldp	x19, x20, [sp, #16]
    6f58:	ldp	x21, x22, [sp, #32]
    6f5c:	ldr	x23, [sp, #48]
    6f60:	ldp	x29, x30, [sp], #64
    6f64:	ret
    6f68:	ldr	x3, [x19, #64]
    6f6c:	mov	x2, #0x1                   	// #1
    6f70:	mov	x0, x22
    6f74:	mov	w1, #0x0                   	// #0
    6f78:	str	xzr, [x3]
    6f7c:	str	x2, [x19, #48]
    6f80:	bl	28768 <PyInit__decimal@@Base+0xe1e8>
    6f84:	str	xzr, [x19, #32]
    6f88:	mov	x0, x22
    6f8c:	bl	28498 <PyInit__decimal@@Base+0xdf18>
    6f90:	mov	x0, x19
    6f94:	ldp	x19, x20, [sp, #16]
    6f98:	ldp	x21, x22, [sp, #32]
    6f9c:	ldr	x23, [sp, #48]
    6fa0:	ldp	x29, x30, [sp], #64
    6fa4:	ret
    6fa8:	stp	x29, x30, [sp, #-32]!
    6fac:	adrp	x0, 5d000 <PyInit__decimal@@Base+0x42a80>
    6fb0:	add	x0, x0, #0x320
    6fb4:	mov	x29, sp
    6fb8:	add	x0, x0, #0x1a0
    6fbc:	stp	x19, x20, [sp, #16]
    6fc0:	bl	6c60 <PyFloat_FromString@plt+0x1d0>
    6fc4:	mov	x19, x0
    6fc8:	cbz	x0, 6ffc <PyFloat_FromString@plt+0x56c>
    6fcc:	ldr	x3, [x19, #64]
    6fd0:	mov	x4, #0xa                   	// #10
    6fd4:	mov	x2, #0x1                   	// #1
    6fd8:	add	x20, x0, #0x18
    6fdc:	mov	x0, x20
    6fe0:	mov	w1, #0x0                   	// #0
    6fe4:	str	x4, [x3]
    6fe8:	str	x2, [x19, #48]
    6fec:	bl	28768 <PyInit__decimal@@Base+0xe1e8>
    6ff0:	str	xzr, [x19, #32]
    6ff4:	mov	x0, x20
    6ff8:	bl	28498 <PyInit__decimal@@Base+0xdf18>
    6ffc:	mov	x0, x19
    7000:	ldp	x19, x20, [sp, #16]
    7004:	ldp	x29, x30, [sp], #32
    7008:	ret
    700c:	nop
    7010:	b	6fa8 <PyFloat_FromString@plt+0x518>
    7014:	nop
    7018:	stp	x29, x30, [sp, #-32]!
    701c:	adrp	x0, 5d000 <PyInit__decimal@@Base+0x42a80>
    7020:	add	x0, x0, #0x320
    7024:	mov	x29, sp
    7028:	add	x0, x0, #0x1a0
    702c:	stp	x19, x20, [sp, #16]
    7030:	bl	6c60 <PyFloat_FromString@plt+0x1d0>
    7034:	mov	x19, x0
    7038:	cbz	x0, 7068 <PyFloat_FromString@plt+0x5d8>
    703c:	ldr	x3, [x19, #64]
    7040:	mov	x2, #0x1                   	// #1
    7044:	add	x20, x0, #0x18
    7048:	mov	w1, #0x0                   	// #0
    704c:	mov	x0, x20
    7050:	str	xzr, [x3]
    7054:	str	x2, [x19, #48]
    7058:	bl	28768 <PyInit__decimal@@Base+0xe1e8>
    705c:	str	xzr, [x19, #32]
    7060:	mov	x0, x20
    7064:	bl	28498 <PyInit__decimal@@Base+0xdf18>
    7068:	mov	x0, x19
    706c:	ldp	x19, x20, [sp, #16]
    7070:	ldp	x29, x30, [sp], #32
    7074:	ret
    7078:	mov	x4, x1
    707c:	ldr	x1, [x0, #8]
    7080:	ldr	x1, [x1, #168]
    7084:	tbnz	w1, #26, 70b0 <PyFloat_FromString@plt+0x620>
    7088:	tbz	w1, #25, 7090 <PyFloat_FromString@plt+0x600>
    708c:	b	6530 <PyList_AsTuple@plt>
    7090:	stp	x29, x30, [sp, #-16]!
    7094:	mov	x0, x4
    7098:	mov	x1, x2
    709c:	mov	x29, sp
    70a0:	bl	6650 <PyErr_SetString@plt>
    70a4:	mov	x0, #0x0                   	// #0
    70a8:	ldp	x29, x30, [sp], #16
    70ac:	ret
    70b0:	ldr	x1, [x0]
    70b4:	add	x1, x1, #0x1
    70b8:	str	x1, [x0]
    70bc:	ret
    70c0:	stp	x29, x30, [sp, #-48]!
    70c4:	mov	x29, sp
    70c8:	stp	x19, x20, [sp, #16]
    70cc:	mov	x20, x1
    70d0:	str	x21, [sp, #32]
    70d4:	mov	x21, x0
    70d8:	mov	x0, x1
    70dc:	mov	w1, #0x7f                  	// #127
    70e0:	bl	6a50 <PyUnicode_New@plt>
    70e4:	mov	x19, x0
    70e8:	cbz	x0, 7104 <PyFloat_FromString@plt+0x674>
    70ec:	ldrb	w0, [x0, #32]
    70f0:	tbnz	w0, #5, 7118 <PyFloat_FromString@plt+0x688>
    70f4:	ldr	x0, [x19, #72]
    70f8:	mov	x2, x20
    70fc:	mov	x1, x21
    7100:	bl	6470 <memcpy@plt>
    7104:	mov	x0, x19
    7108:	ldp	x19, x20, [sp, #16]
    710c:	ldr	x21, [sp, #32]
    7110:	ldp	x29, x30, [sp], #48
    7114:	ret
    7118:	tst	x0, #0x40
    711c:	add	x1, x19, #0x48
    7120:	add	x0, x19, #0x30
    7124:	csel	x0, x1, x0, eq  // eq = none
    7128:	b	70f8 <PyFloat_FromString@plt+0x668>
    712c:	nop
    7130:	stp	x29, x30, [sp, #-16]!
    7134:	add	x0, x0, #0x18
    7138:	mov	x29, sp
    713c:	bl	28008 <PyInit__decimal@@Base+0xda88>
    7140:	cmp	w0, #0x0
    7144:	cset	w0, eq  // eq = none
    7148:	ldp	x29, x30, [sp], #16
    714c:	ret
    7150:	stp	x29, x30, [sp, #-16]!
    7154:	add	x0, x0, #0x10
    7158:	mov	x29, sp
    715c:	bl	27c88 <PyInit__decimal@@Base+0xd708>
    7160:	ldp	x29, x30, [sp], #16
    7164:	b	66a0 <PyLong_FromSsize_t@plt>
    7168:	stp	x29, x30, [sp, #-16]!
    716c:	add	x0, x0, #0x10
    7170:	mov	x29, sp
    7174:	bl	27c70 <PyInit__decimal@@Base+0xd6f0>
    7178:	ldp	x29, x30, [sp], #16
    717c:	b	66a0 <PyLong_FromSsize_t@plt>
    7180:	sub	sp, sp, #0x150
    7184:	mov	w1, #0x79                  	// #121
    7188:	stp	x29, x30, [sp, #16]
    718c:	add	x29, sp, #0x10
    7190:	stp	x19, x20, [sp, #32]
    7194:	adrp	x19, 5d000 <PyInit__decimal@@Base+0x42a80>
    7198:	add	x19, x19, #0x9a0
    719c:	ldr	w2, [x0, #44]
    71a0:	add	x19, x19, #0x140
    71a4:	stp	x21, x22, [sp, #48]
    71a8:	add	x22, sp, #0x50
    71ac:	add	x20, x0, #0x10
    71b0:	mov	x21, x0
    71b4:	mov	x3, x19
    71b8:	mov	x0, x22
    71bc:	bl	24ff8 <PyInit__decimal@@Base+0xaa78>
    71c0:	cmp	w0, #0x78
    71c4:	b.hi	723c <PyFloat_FromString@plt+0x7ac>  // b.pmore
    71c8:	ldr	w2, [x20, #24]
    71cc:	mov	x3, x19
    71d0:	str	x23, [sp, #64]
    71d4:	add	x23, sp, #0xd0
    71d8:	mov	x0, x23
    71dc:	mov	w1, #0x79                  	// #121
    71e0:	bl	24ff8 <PyInit__decimal@@Base+0xaa78>
    71e4:	cmp	w0, #0x78
    71e8:	b.hi	726c <PyFloat_FromString@plt+0x7dc>  // b.pmore
    71ec:	ldrsw	x1, [x20, #36]
    71f0:	adrp	x0, 5f000 <PyInit__decimal@@Base+0x44a80>
    71f4:	add	x0, x0, #0x548
    71f8:	ldr	w6, [x20, #40]
    71fc:	ldr	x4, [x20, #8]
    7200:	str	x23, [sp]
    7204:	mov	x7, x22
    7208:	ldr	w5, [x21, #80]
    720c:	ldr	x2, [x0, x1, lsl #3]
    7210:	adrp	x0, 3b000 <PyInit__decimal@@Base+0x20a80>
    7214:	ldr	x3, [x20, #16]
    7218:	add	x0, x0, #0x950
    721c:	ldr	x1, [x21, #16]
    7220:	bl	6480 <PyUnicode_FromFormat@plt>
    7224:	ldp	x29, x30, [sp, #16]
    7228:	ldp	x19, x20, [sp, #32]
    722c:	ldp	x21, x22, [sp, #48]
    7230:	ldr	x23, [sp, #64]
    7234:	add	sp, sp, #0x150
    7238:	ret
    723c:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
    7240:	adrp	x1, 3b000 <PyInit__decimal@@Base+0x20a80>
    7244:	add	x1, x1, #0x930
    7248:	ldr	x0, [x0, #3920]
    724c:	ldr	x0, [x0]
    7250:	bl	6650 <PyErr_SetString@plt>
    7254:	mov	x0, #0x0                   	// #0
    7258:	ldp	x29, x30, [sp, #16]
    725c:	ldp	x19, x20, [sp, #32]
    7260:	ldp	x21, x22, [sp, #48]
    7264:	add	sp, sp, #0x150
    7268:	ret
    726c:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
    7270:	adrp	x1, 3b000 <PyInit__decimal@@Base+0x20a80>
    7274:	add	x1, x1, #0x930
    7278:	ldr	x0, [x0, #3920]
    727c:	ldr	x0, [x0]
    7280:	bl	6650 <PyErr_SetString@plt>
    7284:	mov	x0, #0x0                   	// #0
    7288:	ldp	x29, x30, [sp, #16]
    728c:	ldp	x19, x20, [sp, #32]
    7290:	ldp	x21, x22, [sp, #48]
    7294:	ldr	x23, [sp, #64]
    7298:	add	sp, sp, #0x150
    729c:	ret
    72a0:	stp	x29, x30, [sp, #-32]!
    72a4:	mov	x29, sp
    72a8:	stp	x19, x20, [sp, #16]
    72ac:	mov	x19, x0
    72b0:	add	x0, x0, #0x18
    72b4:	ldr	x1, [x19, #8]
    72b8:	ldr	x20, [x1, #32]
    72bc:	bl	28160 <PyInit__decimal@@Base+0xdbe0>
    72c0:	cbz	w0, 72cc <PyFloat_FromString@plt+0x83c>
    72c4:	ldr	x0, [x19, #56]
    72c8:	add	x20, x20, x0, lsl #3
    72cc:	mov	x0, x20
    72d0:	ldp	x19, x20, [sp, #16]
    72d4:	ldp	x29, x30, [sp], #32
    72d8:	b	66a0 <PyLong_FromSsize_t@plt>
    72dc:	nop
    72e0:	stp	x29, x30, [sp, #-32]!
    72e4:	mov	x29, sp
    72e8:	str	x19, [sp, #16]
    72ec:	add	x19, x0, #0x18
    72f0:	mov	x0, x19
    72f4:	bl	27ff8 <PyInit__decimal@@Base+0xda78>
    72f8:	cbz	w0, 730c <PyFloat_FromString@plt+0x87c>
    72fc:	ldr	x19, [sp, #16]
    7300:	mov	x0, #0x0                   	// #0
    7304:	ldp	x29, x30, [sp], #32
    7308:	b	66a0 <PyLong_FromSsize_t@plt>
    730c:	mov	x0, x19
    7310:	bl	27c60 <PyInit__decimal@@Base+0xd6e0>
    7314:	ldr	x19, [sp, #16]
    7318:	ldp	x29, x30, [sp], #32
    731c:	b	66a0 <PyLong_FromSsize_t@plt>
    7320:	stp	x29, x30, [sp, #-32]!
    7324:	mov	x1, #0x0                   	// #0
    7328:	mov	x29, sp
    732c:	stp	x19, x20, [sp, #16]
    7330:	adrp	x20, 5f000 <PyInit__decimal@@Base+0x44a80>
    7334:	add	x20, x20, #0x6c0
    7338:	ldr	x0, [x20, #72]
    733c:	bl	6c08 <PyFloat_FromString@plt+0x178>
    7340:	cbz	x0, 73a0 <PyFloat_FromString@plt+0x910>
    7344:	mov	x19, x0
    7348:	mov	x1, x0
    734c:	ldr	x0, [x20, #80]
    7350:	str	wzr, [x19, #44]
    7354:	bl	6680 <PyContextVar_Set@plt>
    7358:	cbz	x0, 7390 <PyFloat_FromString@plt+0x900>
    735c:	ldr	x2, [x0]
    7360:	sub	x2, x2, #0x1
    7364:	str	x2, [x0]
    7368:	cbz	x2, 737c <PyFloat_FromString@plt+0x8ec>
    736c:	mov	x0, x19
    7370:	ldp	x19, x20, [sp, #16]
    7374:	ldp	x29, x30, [sp], #32
    7378:	ret
    737c:	bl	65d0 <_Py_Dealloc@plt>
    7380:	mov	x0, x19
    7384:	ldp	x19, x20, [sp, #16]
    7388:	ldp	x29, x30, [sp], #32
    738c:	ret
    7390:	ldr	x0, [x19]
    7394:	sub	x0, x0, #0x1
    7398:	str	x0, [x19]
    739c:	cbz	x0, 73b4 <PyFloat_FromString@plt+0x924>
    73a0:	mov	x19, #0x0                   	// #0
    73a4:	mov	x0, x19
    73a8:	ldp	x19, x20, [sp, #16]
    73ac:	ldp	x29, x30, [sp], #32
    73b0:	ret
    73b4:	mov	x0, x19
    73b8:	mov	x19, #0x0                   	// #0
    73bc:	bl	65d0 <_Py_Dealloc@plt>
    73c0:	b	736c <PyFloat_FromString@plt+0x8dc>
    73c4:	nop
    73c8:	stp	x29, x30, [sp, #-32]!
    73cc:	adrp	x0, 5d000 <PyInit__decimal@@Base+0x42a80>
    73d0:	mov	x29, sp
    73d4:	stp	x19, x20, [sp, #16]
    73d8:	mov	x19, x1
    73dc:	add	x1, x0, #0x320
    73e0:	ldr	x0, [x19, #8]
    73e4:	cmp	x0, x1
    73e8:	b.eq	73f4 <PyFloat_FromString@plt+0x964>  // b.none
    73ec:	bl	69c0 <PyType_IsSubtype@plt>
    73f0:	cbz	w0, 74bc <PyFloat_FromString@plt+0xa2c>
    73f4:	adrp	x20, 5f000 <PyInit__decimal@@Base+0x44a80>
    73f8:	add	x0, x20, #0x6c0
    73fc:	ldr	x1, [x0, #72]
    7400:	cmp	x1, x19
    7404:	b.eq	7430 <PyFloat_FromString@plt+0x9a0>  // b.none
    7408:	ldr	x1, [x0, #88]
    740c:	cmp	x1, x19
    7410:	b.eq	7430 <PyFloat_FromString@plt+0x9a0>  // b.none
    7414:	ldr	x0, [x0, #96]
    7418:	cmp	x0, x19
    741c:	b.eq	7430 <PyFloat_FromString@plt+0x9a0>  // b.none
    7420:	ldr	x0, [x19]
    7424:	add	x0, x0, #0x1
    7428:	str	x0, [x19]
    742c:	b	7448 <PyFloat_FromString@plt+0x9b8>
    7430:	mov	x0, x19
    7434:	mov	x1, #0x0                   	// #0
    7438:	bl	6c08 <PyFloat_FromString@plt+0x178>
    743c:	mov	x19, x0
    7440:	cbz	x0, 74dc <PyFloat_FromString@plt+0xa4c>
    7444:	str	wzr, [x0, #44]
    7448:	add	x20, x20, #0x6c0
    744c:	mov	x1, x19
    7450:	ldr	x0, [x20, #80]
    7454:	bl	6680 <PyContextVar_Set@plt>
    7458:	mov	x20, x0
    745c:	ldr	x1, [x19]
    7460:	sub	x0, x1, #0x1
    7464:	str	x0, [x19]
    7468:	cbz	x0, 74a4 <PyFloat_FromString@plt+0xa14>
    746c:	cbz	x20, 74dc <PyFloat_FromString@plt+0xa4c>
    7470:	ldr	x0, [x20]
    7474:	sub	x0, x0, #0x1
    7478:	str	x0, [x20]
    747c:	cbz	x0, 74b0 <PyFloat_FromString@plt+0xa20>
    7480:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41a80>
    7484:	ldr	x1, [x1, #4008]
    7488:	mov	x0, x1
    748c:	ldr	x2, [x1]
    7490:	add	x2, x2, #0x1
    7494:	str	x2, [x1]
    7498:	ldp	x19, x20, [sp, #16]
    749c:	ldp	x29, x30, [sp], #32
    74a0:	ret
    74a4:	mov	x0, x19
    74a8:	bl	65d0 <_Py_Dealloc@plt>
    74ac:	b	746c <PyFloat_FromString@plt+0x9dc>
    74b0:	mov	x0, x20
    74b4:	bl	65d0 <_Py_Dealloc@plt>
    74b8:	b	7480 <PyFloat_FromString@plt+0x9f0>
    74bc:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
    74c0:	adrp	x1, 3b000 <PyInit__decimal@@Base+0x20a80>
    74c4:	add	x1, x1, #0x9b0
    74c8:	ldr	x0, [x0, #3936]
    74cc:	ldr	x0, [x0]
    74d0:	bl	6650 <PyErr_SetString@plt>
    74d4:	mov	x0, #0x0                   	// #0
    74d8:	b	7498 <PyFloat_FromString@plt+0xa08>
    74dc:	mov	x0, #0x0                   	// #0
    74e0:	ldp	x19, x20, [sp, #16]
    74e4:	ldp	x29, x30, [sp], #32
    74e8:	ret
    74ec:	nop
    74f0:	stp	x29, x30, [sp, #-64]!
    74f4:	mov	x29, sp
    74f8:	ldr	x0, [x0, #16]
    74fc:	stp	x19, x20, [sp, #16]
    7500:	str	x23, [sp, #48]
    7504:	ldr	w23, [x0]
    7508:	bl	6920 <PyDict_New@plt>
    750c:	cbz	x0, 7574 <PyFloat_FromString@plt+0xae4>
    7510:	mov	x19, x0
    7514:	adrp	x0, 5d000 <PyInit__decimal@@Base+0x42a80>
    7518:	add	x20, x0, #0x9a0
    751c:	ldr	x0, [x0, #2464]
    7520:	cbz	x0, 7578 <PyFloat_FromString@plt+0xae8>
    7524:	stp	x21, x22, [sp, #32]
    7528:	adrp	x22, 5c000 <PyInit__decimal@@Base+0x41a80>
    752c:	adrp	x21, 5c000 <PyInit__decimal@@Base+0x41a80>
    7530:	ldr	x22, [x22, #3976]
    7534:	ldr	x21, [x21, #4024]
    7538:	b	7544 <PyFloat_FromString@plt+0xab4>
    753c:	ldr	x0, [x20, #32]!
    7540:	cbz	x0, 758c <PyFloat_FromString@plt+0xafc>
    7544:	ldr	w2, [x20, #16]
    7548:	mov	x0, x19
    754c:	ldr	x1, [x20, #24]
    7550:	tst	w23, w2
    7554:	csel	x2, x21, x22, ne  // ne = any
    7558:	bl	69a0 <PyDict_SetItem@plt>
    755c:	tbz	w0, #31, 753c <PyFloat_FromString@plt+0xaac>
    7560:	ldr	x0, [x19]
    7564:	sub	x0, x0, #0x1
    7568:	str	x0, [x19]
    756c:	cbz	x0, 75a4 <PyFloat_FromString@plt+0xb14>
    7570:	ldp	x21, x22, [sp, #32]
    7574:	mov	x19, #0x0                   	// #0
    7578:	mov	x0, x19
    757c:	ldp	x19, x20, [sp, #16]
    7580:	ldr	x23, [sp, #48]
    7584:	ldp	x29, x30, [sp], #64
    7588:	ret
    758c:	mov	x0, x19
    7590:	ldp	x19, x20, [sp, #16]
    7594:	ldp	x21, x22, [sp, #32]
    7598:	ldr	x23, [sp, #48]
    759c:	ldp	x29, x30, [sp], #64
    75a0:	ret
    75a4:	mov	x0, x19
    75a8:	mov	x19, #0x0                   	// #0
    75ac:	bl	65d0 <_Py_Dealloc@plt>
    75b0:	mov	x0, x19
    75b4:	ldp	x19, x20, [sp, #16]
    75b8:	ldp	x21, x22, [sp, #32]
    75bc:	ldr	x23, [sp, #48]
    75c0:	ldp	x29, x30, [sp], #64
    75c4:	ret
    75c8:	mov	x1, x0
    75cc:	stp	x29, x30, [sp, #-16]!
    75d0:	mov	x0, #0x0                   	// #0
    75d4:	mov	x29, sp
    75d8:	ldr	x1, [x1, #24]
    75dc:	bl	73c8 <PyFloat_FromString@plt+0x938>
    75e0:	mov	x1, x0
    75e4:	cbz	x0, 7610 <PyFloat_FromString@plt+0xb80>
    75e8:	ldr	x2, [x0]
    75ec:	sub	x2, x2, #0x1
    75f0:	str	x2, [x0]
    75f4:	cbz	x2, 761c <PyFloat_FromString@plt+0xb8c>
    75f8:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
    75fc:	ldr	x0, [x0, #4008]
    7600:	mov	x1, x0
    7604:	ldr	x2, [x0]
    7608:	add	x2, x2, #0x1
    760c:	str	x2, [x0]
    7610:	mov	x0, x1
    7614:	ldp	x29, x30, [sp], #16
    7618:	ret
    761c:	bl	65d0 <_Py_Dealloc@plt>
    7620:	b	75f8 <PyFloat_FromString@plt+0xb68>
    7624:	nop
    7628:	stp	x29, x30, [sp, #-32]!
    762c:	mov	x29, sp
    7630:	str	x19, [sp, #16]
    7634:	mov	x19, x0
    7638:	mov	x0, #0x0                   	// #0
    763c:	ldr	x1, [x19, #16]
    7640:	bl	73c8 <PyFloat_FromString@plt+0x938>
    7644:	mov	x1, x0
    7648:	cbz	x0, 766c <PyFloat_FromString@plt+0xbdc>
    764c:	ldr	x2, [x0]
    7650:	sub	x2, x2, #0x1
    7654:	str	x2, [x0]
    7658:	cbz	x2, 767c <PyFloat_FromString@plt+0xbec>
    765c:	ldr	x1, [x19, #16]
    7660:	ldr	x0, [x1]
    7664:	add	x0, x0, #0x1
    7668:	str	x0, [x1]
    766c:	mov	x0, x1
    7670:	ldr	x19, [sp, #16]
    7674:	ldp	x29, x30, [sp], #32
    7678:	ret
    767c:	bl	65d0 <_Py_Dealloc@plt>
    7680:	b	765c <PyFloat_FromString@plt+0xbcc>
    7684:	nop
    7688:	stp	x29, x30, [sp, #-32]!
    768c:	mov	x29, sp
    7690:	str	x19, [sp, #16]
    7694:	mov	x19, x0
    7698:	ldr	x0, [x0, #16]
    769c:	cbz	x0, 76b0 <PyFloat_FromString@plt+0xc20>
    76a0:	ldr	x1, [x0]
    76a4:	sub	x1, x1, #0x1
    76a8:	str	x1, [x0]
    76ac:	cbz	x1, 76ec <PyFloat_FromString@plt+0xc5c>
    76b0:	ldr	x0, [x19, #24]
    76b4:	cbz	x0, 76c8 <PyFloat_FromString@plt+0xc38>
    76b8:	ldr	x1, [x0]
    76bc:	sub	x1, x1, #0x1
    76c0:	str	x1, [x0]
    76c4:	cbz	x1, 76d8 <PyFloat_FromString@plt+0xc48>
    76c8:	mov	x0, x19
    76cc:	ldr	x19, [sp, #16]
    76d0:	ldp	x29, x30, [sp], #32
    76d4:	b	6690 <PyObject_Free@plt>
    76d8:	bl	65d0 <_Py_Dealloc@plt>
    76dc:	mov	x0, x19
    76e0:	ldr	x19, [sp, #16]
    76e4:	ldp	x29, x30, [sp], #32
    76e8:	b	6690 <PyObject_Free@plt>
    76ec:	bl	65d0 <_Py_Dealloc@plt>
    76f0:	b	76b0 <PyFloat_FromString@plt+0xc20>
    76f4:	nop
    76f8:	stp	x29, x30, [sp, #-112]!
    76fc:	mov	x29, sp
    7700:	stp	x19, x20, [sp, #16]
    7704:	mov	x19, x0
    7708:	bl	69e0 <PyTuple_Size@plt>
    770c:	cmp	x0, #0x3
    7710:	b.ne	78dc <PyFloat_FromString@plt+0xe4c>  // b.any
    7714:	ldr	x0, [x19, #24]
    7718:	ldr	x1, [x0, #8]
    771c:	ldr	x1, [x1, #168]
    7720:	tbz	w1, #24, 78b0 <PyFloat_FromString@plt+0xe20>
    7724:	bl	6820 <PyLong_AsLong@plt>
    7728:	cmn	x0, #0x1
    772c:	b.eq	78a4 <PyFloat_FromString@plt+0xe14>  // b.none
    7730:	cmp	x0, #0x1
    7734:	b.hi	78b0 <PyFloat_FromString@plt+0xe20>  // b.pmore
    7738:	ldr	x20, [x19, #40]
    773c:	cmp	x0, #0x0
    7740:	mov	w1, #0x2b                  	// #43
    7744:	mov	w0, #0x2d                  	// #45
    7748:	csel	w0, w0, w1, ne  // ne = any
    774c:	strb	w0, [sp, #104]
    7750:	ldr	x0, [x20, #8]
    7754:	stp	x23, x24, [sp, #48]
    7758:	stp	x25, x26, [sp, #64]
    775c:	ldr	x0, [x0, #168]
    7760:	strb	wzr, [sp, #105]
    7764:	tbnz	w0, #28, 7908 <PyFloat_FromString@plt+0xe78>
    7768:	tbz	w0, #24, 7980 <PyFloat_FromString@plt+0xef0>
    776c:	mov	x0, x20
    7770:	mov	w23, #0x0                   	// #0
    7774:	bl	66f0 <PyLong_AsSsize_t@plt>
    7778:	mov	x26, x0
    777c:	cmn	x0, #0x1
    7780:	b.eq	795c <PyFloat_FromString@plt+0xecc>  // b.none
    7784:	stp	x21, x22, [sp, #32]
    7788:	stp	x27, x28, [sp, #80]
    778c:	adrp	x24, 5c000 <PyInit__decimal@@Base+0x41a80>
    7790:	ldr	x0, [x19, #32]
    7794:	adrp	x27, 3b000 <PyInit__decimal@@Base+0x20a80>
    7798:	ldr	x1, [x24, #3928]
    779c:	add	x2, x27, #0xaa0
    77a0:	ldr	x1, [x1]
    77a4:	bl	7078 <PyFloat_FromString@plt+0x5e8>
    77a8:	mov	x22, x0
    77ac:	cbz	x0, 79a8 <PyFloat_FromString@plt+0xf18>
    77b0:	bl	69e0 <PyTuple_Size@plt>
    77b4:	add	x20, x0, #0x19
    77b8:	mov	x21, x0
    77bc:	mov	x0, x20
    77c0:	bl	6a40 <PyMem_Malloc@plt>
    77c4:	mov	x19, x0
    77c8:	cbz	x0, 79c0 <PyFloat_FromString@plt+0xf30>
    77cc:	adrp	x2, 3b000 <PyInit__decimal@@Base+0x20a80>
    77d0:	add	x3, sp, #0x68
    77d4:	add	x2, x2, #0xac8
    77d8:	mov	x1, x20
    77dc:	bl	6610 <snprintf@plt>
    77e0:	tbnz	w0, #31, 7a5c <PyFloat_FromString@plt+0xfcc>
    77e4:	cmp	x20, w0, sxtw
    77e8:	sxtw	x0, w0
    77ec:	b.le	7a5c <PyFloat_FromString@plt+0xfcc>
    77f0:	add	x20, x19, x0
    77f4:	cmp	x21, #0x0
    77f8:	cbz	x21, 7a1c <PyFloat_FromString@plt+0xf8c>
    77fc:	b.le	7a2c <PyFloat_FromString@plt+0xf9c>
    7800:	add	x25, x22, #0x18
    7804:	mov	x28, #0x0                   	// #0
    7808:	b	7828 <PyFloat_FromString@plt+0xd98>
    780c:	cmp	x0, #0x9
    7810:	b.hi	7858 <PyFloat_FromString@plt+0xdc8>  // b.pmore
    7814:	cbnz	w23, 7820 <PyFloat_FromString@plt+0xd90>
    7818:	strb	w2, [x1], #1
    781c:	mov	x20, x1
    7820:	cmp	x21, x28
    7824:	b.eq	7a2c <PyFloat_FromString@plt+0xf9c>  // b.none
    7828:	ldr	x0, [x25, x28, lsl #3]
    782c:	add	x28, x28, #0x1
    7830:	ldr	x1, [x0, #8]
    7834:	ldr	x1, [x1, #168]
    7838:	tbz	w1, #24, 7858 <PyFloat_FromString@plt+0xdc8>
    783c:	bl	6820 <PyLong_AsLong@plt>
    7840:	add	w2, w0, #0x30
    7844:	mov	x1, x20
    7848:	cmn	x0, #0x1
    784c:	b.ne	780c <PyFloat_FromString@plt+0xd7c>  // b.any
    7850:	bl	67e0 <PyErr_Occurred@plt>
    7854:	cbnz	x0, 7868 <PyFloat_FromString@plt+0xdd8>
    7858:	ldr	x24, [x24, #3928]
    785c:	add	x1, x27, #0xaa0
    7860:	ldr	x0, [x24]
    7864:	bl	6650 <PyErr_SetString@plt>
    7868:	ldr	x0, [x22]
    786c:	sub	x0, x0, #0x1
    7870:	str	x0, [x22]
    7874:	cbz	x0, 7b00 <PyFloat_FromString@plt+0x1070>
    7878:	mov	x0, x19
    787c:	mov	x19, #0x0                   	// #0
    7880:	bl	6560 <PyMem_Free@plt>
    7884:	mov	x0, x19
    7888:	ldp	x19, x20, [sp, #16]
    788c:	ldp	x21, x22, [sp, #32]
    7890:	ldp	x23, x24, [sp, #48]
    7894:	ldp	x25, x26, [sp, #64]
    7898:	ldp	x27, x28, [sp, #80]
    789c:	ldp	x29, x30, [sp], #112
    78a0:	ret
    78a4:	bl	67e0 <PyErr_Occurred@plt>
    78a8:	cbnz	x0, 796c <PyFloat_FromString@plt+0xedc>
    78ac:	nop
    78b0:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
    78b4:	adrp	x1, 3b000 <PyInit__decimal@@Base+0x20a80>
    78b8:	mov	x19, #0x0                   	// #0
    78bc:	add	x1, x1, #0x9f8
    78c0:	ldr	x0, [x0, #3928]
    78c4:	ldr	x0, [x0]
    78c8:	bl	6650 <PyErr_SetString@plt>
    78cc:	mov	x0, x19
    78d0:	ldp	x19, x20, [sp, #16]
    78d4:	ldp	x29, x30, [sp], #112
    78d8:	ret
    78dc:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
    78e0:	mov	x19, #0x0                   	// #0
    78e4:	adrp	x1, 3b000 <PyInit__decimal@@Base+0x20a80>
    78e8:	add	x1, x1, #0x9d0
    78ec:	ldr	x0, [x0, #3928]
    78f0:	ldr	x0, [x0]
    78f4:	bl	6650 <PyErr_SetString@plt>
    78f8:	mov	x0, x19
    78fc:	ldp	x19, x20, [sp, #16]
    7900:	ldp	x29, x30, [sp], #112
    7904:	ret
    7908:	adrp	x1, 3b000 <PyInit__decimal@@Base+0x20a80>
    790c:	mov	x0, x20
    7910:	add	x1, x1, #0xa28
    7914:	bl	6890 <PyUnicode_CompareWithASCIIString@plt>
    7918:	cbz	w0, 79f0 <PyFloat_FromString@plt+0xf60>
    791c:	mov	x0, x20
    7920:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
    7924:	add	x1, x1, #0x8a8
    7928:	bl	6890 <PyUnicode_CompareWithASCIIString@plt>
    792c:	mov	w23, w0
    7930:	cbnz	w0, 7a78 <PyFloat_FromString@plt+0xfe8>
    7934:	add	x20, sp, #0x68
    7938:	stp	x21, x22, [sp, #32]
    793c:	mov	x0, x20
    7940:	stp	x27, x28, [sp, #80]
    7944:	bl	64d0 <strlen@plt>
    7948:	mov	w1, #0x614e                	// #24910
    794c:	movk	w1, #0x4e, lsl #16
    7950:	mov	x26, #0x0                   	// #0
    7954:	str	w1, [x20, x0]
    7958:	b	778c <PyFloat_FromString@plt+0xcfc>
    795c:	bl	67e0 <PyErr_Occurred@plt>
    7960:	cbz	x0, 7784 <PyFloat_FromString@plt+0xcf4>
    7964:	ldp	x23, x24, [sp, #48]
    7968:	ldp	x25, x26, [sp, #64]
    796c:	mov	x19, #0x0                   	// #0
    7970:	mov	x0, x19
    7974:	ldp	x19, x20, [sp, #16]
    7978:	ldp	x29, x30, [sp], #112
    797c:	ret
    7980:	adrp	x1, 3b000 <PyInit__decimal@@Base+0x20a80>
    7984:	add	x1, x1, #0xa80
    7988:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
    798c:	mov	x19, #0x0                   	// #0
    7990:	ldr	x0, [x0, #3928]
    7994:	ldr	x0, [x0]
    7998:	bl	6650 <PyErr_SetString@plt>
    799c:	ldp	x23, x24, [sp, #48]
    79a0:	ldp	x25, x26, [sp, #64]
    79a4:	b	78cc <PyFloat_FromString@plt+0xe3c>
    79a8:	mov	x19, #0x0                   	// #0
    79ac:	ldp	x21, x22, [sp, #32]
    79b0:	ldp	x23, x24, [sp, #48]
    79b4:	ldp	x25, x26, [sp, #64]
    79b8:	ldp	x27, x28, [sp, #80]
    79bc:	b	7970 <PyFloat_FromString@plt+0xee0>
    79c0:	bl	65e0 <PyErr_NoMemory@plt>
    79c4:	ldr	x0, [x22]
    79c8:	sub	x0, x0, #0x1
    79cc:	str	x0, [x22]
    79d0:	cbnz	x0, 79a8 <PyFloat_FromString@plt+0xf18>
    79d4:	mov	x0, x22
    79d8:	bl	65d0 <_Py_Dealloc@plt>
    79dc:	ldp	x21, x22, [sp, #32]
    79e0:	ldp	x23, x24, [sp, #48]
    79e4:	ldp	x25, x26, [sp, #64]
    79e8:	ldp	x27, x28, [sp, #80]
    79ec:	b	78cc <PyFloat_FromString@plt+0xe3c>
    79f0:	add	x20, sp, #0x68
    79f4:	stp	x21, x22, [sp, #32]
    79f8:	mov	x0, x20
    79fc:	stp	x27, x28, [sp, #80]
    7a00:	bl	64d0 <strlen@plt>
    7a04:	mov	w1, #0x6e49                	// #28233
    7a08:	movk	w1, #0x66, lsl #16
    7a0c:	mov	w23, #0x1                   	// #1
    7a10:	mov	x26, #0x0                   	// #0
    7a14:	str	w1, [x20, x0]
    7a18:	b	778c <PyFloat_FromString@plt+0xcfc>
    7a1c:	ldrb	w0, [sp, #105]
    7a20:	cbnz	w0, 7a2c <PyFloat_FromString@plt+0xf9c>
    7a24:	mov	w0, #0x30                  	// #48
    7a28:	strb	w0, [x20], #1
    7a2c:	strb	wzr, [x20]
    7a30:	ldrb	w0, [sp, #105]
    7a34:	cbz	w0, 7adc <PyFloat_FromString@plt+0x104c>
    7a38:	ldr	x0, [x22]
    7a3c:	sub	x0, x0, #0x1
    7a40:	str	x0, [x22]
    7a44:	cbz	x0, 79d4 <PyFloat_FromString@plt+0xf44>
    7a48:	ldp	x21, x22, [sp, #32]
    7a4c:	ldp	x23, x24, [sp, #48]
    7a50:	ldp	x25, x26, [sp, #64]
    7a54:	ldp	x27, x28, [sp, #80]
    7a58:	b	78cc <PyFloat_FromString@plt+0xe3c>
    7a5c:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
    7a60:	adrp	x1, 3b000 <PyInit__decimal@@Base+0x20a80>
    7a64:	add	x1, x1, #0xad0
    7a68:	ldr	x0, [x0, #3920]
    7a6c:	ldr	x0, [x0]
    7a70:	bl	6650 <PyErr_SetString@plt>
    7a74:	b	7868 <PyFloat_FromString@plt+0xdd8>
    7a78:	mov	x0, x20
    7a7c:	adrp	x1, 3b000 <PyInit__decimal@@Base+0x20a80>
    7a80:	add	x1, x1, #0xa30
    7a84:	bl	6890 <PyUnicode_CompareWithASCIIString@plt>
    7a88:	mov	w23, w0
    7a8c:	cbnz	w0, 7ac8 <PyFloat_FromString@plt+0x1038>
    7a90:	add	x20, sp, #0x68
    7a94:	stp	x21, x22, [sp, #32]
    7a98:	mov	x0, x20
    7a9c:	stp	x27, x28, [sp, #80]
    7aa0:	bl	64d0 <strlen@plt>
    7aa4:	adrp	x1, 3b000 <PyInit__decimal@@Base+0x20a80>
    7aa8:	add	x1, x1, #0xa38
    7aac:	add	x2, x20, x0
    7ab0:	mov	x26, #0x0                   	// #0
    7ab4:	ldr	w3, [x1]
    7ab8:	str	w3, [x20, x0]
    7abc:	ldrb	w0, [x1, #4]
    7ac0:	strb	w0, [x2, #4]
    7ac4:	b	778c <PyFloat_FromString@plt+0xcfc>
    7ac8:	adrp	x1, 3b000 <PyInit__decimal@@Base+0x20a80>
    7acc:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
    7ad0:	add	x1, x1, #0xa40
    7ad4:	mov	x19, #0x0                   	// #0
    7ad8:	b	7990 <PyFloat_FromString@plt+0xf00>
    7adc:	mov	x0, x20
    7ae0:	mov	w4, #0x45                  	// #69
    7ae4:	mov	x3, x26
    7ae8:	adrp	x2, 3b000 <PyInit__decimal@@Base+0x20a80>
    7aec:	mov	x1, #0x15                  	// #21
    7af0:	add	x2, x2, #0xaf8
    7af4:	strb	w4, [x0], #1
    7af8:	bl	6610 <snprintf@plt>
    7afc:	b	7a38 <PyFloat_FromString@plt+0xfa8>
    7b00:	mov	x0, x22
    7b04:	bl	65d0 <_Py_Dealloc@plt>
    7b08:	b	7878 <PyFloat_FromString@plt+0xde8>
    7b0c:	nop
    7b10:	stp	x29, x30, [sp, #-32]!
    7b14:	mov	x29, sp
    7b18:	str	x19, [sp, #16]
    7b1c:	mov	x19, x0
    7b20:	ldr	x0, [x0, #64]
    7b24:	cbz	x0, 7b38 <PyFloat_FromString@plt+0x10a8>
    7b28:	ldr	x1, [x0]
    7b2c:	sub	x1, x1, #0x1
    7b30:	str	x1, [x0]
    7b34:	cbz	x1, 7b8c <PyFloat_FromString@plt+0x10fc>
    7b38:	ldr	x0, [x19, #72]
    7b3c:	cbz	x0, 7b50 <PyFloat_FromString@plt+0x10c0>
    7b40:	ldr	x1, [x0]
    7b44:	sub	x1, x1, #0x1
    7b48:	str	x1, [x0]
    7b4c:	cbz	x1, 7b6c <PyFloat_FromString@plt+0x10dc>
    7b50:	ldr	x1, [x19, #8]
    7b54:	mov	x0, x19
    7b58:	ldr	x19, [sp, #16]
    7b5c:	ldp	x29, x30, [sp], #32
    7b60:	ldr	x1, [x1, #320]
    7b64:	mov	x16, x1
    7b68:	br	x16
    7b6c:	bl	65d0 <_Py_Dealloc@plt>
    7b70:	ldr	x1, [x19, #8]
    7b74:	mov	x0, x19
    7b78:	ldr	x19, [sp, #16]
    7b7c:	ldp	x29, x30, [sp], #32
    7b80:	ldr	x1, [x1, #320]
    7b84:	mov	x16, x1
    7b88:	br	x16
    7b8c:	bl	65d0 <_Py_Dealloc@plt>
    7b90:	b	7b38 <PyFloat_FromString@plt+0x10a8>
    7b94:	nop
    7b98:	stp	x29, x30, [sp, #-80]!
    7b9c:	mov	x29, sp
    7ba0:	stp	x21, x22, [sp, #32]
    7ba4:	add	x21, x0, #0x18
    7ba8:	stp	x19, x20, [sp, #16]
    7bac:	mov	x19, x0
    7bb0:	mov	x0, x21
    7bb4:	bl	29d98 <PyInit__decimal@@Base+0xf818>
    7bb8:	cbz	x0, 7e4c <PyFloat_FromString@plt+0x13bc>
    7bbc:	mov	x20, x0
    7bc0:	mov	x0, x21
    7bc4:	bl	28110 <PyInit__decimal@@Base+0xdb90>
    7bc8:	and	x0, x0, #0xff
    7bcc:	bl	6940 <PyLong_FromUnsignedLong@plt>
    7bd0:	mov	x21, x0
    7bd4:	cbz	x0, 7e00 <PyFloat_FromString@plt+0x1370>
    7bd8:	mov	x0, x20
    7bdc:	stp	x23, x24, [sp, #48]
    7be0:	bl	27f88 <PyInit__decimal@@Base+0xda08>
    7be4:	cbz	w0, 7c8c <PyFloat_FromString@plt+0x11fc>
    7be8:	adrp	x0, 3b000 <PyInit__decimal@@Base+0x20a80>
    7bec:	add	x0, x0, #0xa28
    7bf0:	bl	6960 <PyUnicode_FromString@plt>
    7bf4:	mov	x22, x0
    7bf8:	cbz	x0, 7dc0 <PyFloat_FromString@plt+0x1330>
    7bfc:	adrp	x0, 3b000 <PyInit__decimal@@Base+0x20a80>
    7c00:	mov	w1, #0x0                   	// #0
    7c04:	add	x0, x0, #0xb00
    7c08:	bl	67d0 <Py_BuildValue@plt>
    7c0c:	mov	x23, x0
    7c10:	cbz	x0, 7dc0 <PyFloat_FromString@plt+0x1330>
    7c14:	adrp	x0, 5f000 <PyInit__decimal@@Base+0x44a80>
    7c18:	mov	x3, x22
    7c1c:	mov	x2, x23
    7c20:	mov	x1, x21
    7c24:	ldr	x0, [x0, #1832]
    7c28:	mov	x4, #0x0                   	// #0
    7c2c:	bl	6850 <PyObject_CallFunctionObjArgs@plt>
    7c30:	mov	x19, x0
    7c34:	mov	x0, x20
    7c38:	bl	281b8 <PyInit__decimal@@Base+0xdc38>
    7c3c:	ldr	x0, [x21]
    7c40:	sub	x0, x0, #0x1
    7c44:	str	x0, [x21]
    7c48:	cbz	x0, 7de0 <PyFloat_FromString@plt+0x1350>
    7c4c:	ldr	x1, [x23]
    7c50:	sub	x1, x1, #0x1
    7c54:	str	x1, [x23]
    7c58:	cbz	x1, 7da4 <PyFloat_FromString@plt+0x1314>
    7c5c:	nop
    7c60:	cbz	x22, 7c74 <PyFloat_FromString@plt+0x11e4>
    7c64:	ldr	x1, [x22]
    7c68:	sub	x1, x1, #0x1
    7c6c:	str	x1, [x22]
    7c70:	cbz	x1, 7d84 <PyFloat_FromString@plt+0x12f4>
    7c74:	mov	x0, x19
    7c78:	ldp	x19, x20, [sp, #16]
    7c7c:	ldp	x21, x22, [sp, #32]
    7c80:	ldp	x23, x24, [sp, #48]
    7c84:	ldp	x29, x30, [sp], #80
    7c88:	ret
    7c8c:	mov	x0, x20
    7c90:	bl	27f98 <PyInit__decimal@@Base+0xda18>
    7c94:	cbz	w0, 7df0 <PyFloat_FromString@plt+0x1360>
    7c98:	mov	x0, x20
    7c9c:	bl	27fc8 <PyInit__decimal@@Base+0xda48>
    7ca0:	adrp	x1, 3b000 <PyInit__decimal@@Base+0x20a80>
    7ca4:	cmp	w0, #0x0
    7ca8:	add	x1, x1, #0xa30
    7cac:	adrp	x0, 3c000 <PyInit__decimal@@Base+0x21a80>
    7cb0:	add	x0, x0, #0x8a8
    7cb4:	csel	x0, x0, x1, ne  // ne = any
    7cb8:	bl	6960 <PyUnicode_FromString@plt>
    7cbc:	mov	x22, x0
    7cc0:	cbz	x22, 7dc0 <PyFloat_FromString@plt+0x1330>
    7cc4:	ldr	x0, [x20, #24]
    7cc8:	cmp	x0, #0x0
    7ccc:	b.le	7db0 <PyFloat_FromString@plt+0x1320>
    7cd0:	str	xzr, [x20, #8]
    7cd4:	mov	x0, x20
    7cd8:	bl	28758 <PyInit__decimal@@Base+0xe1d8>
    7cdc:	mov	x0, x20
    7ce0:	mov	w1, #0x1                   	// #1
    7ce4:	bl	24038 <PyInit__decimal@@Base+0x9ab8>
    7ce8:	mov	x24, x0
    7cec:	cbz	x0, 7e58 <PyFloat_FromString@plt+0x13c8>
    7cf0:	stp	x25, x26, [sp, #64]
    7cf4:	bl	64d0 <strlen@plt>
    7cf8:	mov	x25, x0
    7cfc:	bl	67a0 <PyTuple_New@plt>
    7d00:	mov	x23, x0
    7d04:	cbz	x0, 7d3c <PyFloat_FromString@plt+0x12ac>
    7d08:	cbz	x25, 7e20 <PyFloat_FromString@plt+0x1390>
    7d0c:	add	x26, x0, #0x18
    7d10:	mov	x19, #0x0                   	// #0
    7d14:	b	7d28 <PyFloat_FromString@plt+0x1298>
    7d18:	str	x0, [x26, x19, lsl #3]
    7d1c:	add	x19, x19, #0x1
    7d20:	cmp	x25, x19
    7d24:	b.eq	7e20 <PyFloat_FromString@plt+0x1390>  // b.none
    7d28:	ldrb	w0, [x24, x19]
    7d2c:	sub	w0, w0, #0x30
    7d30:	sxtw	x0, w0
    7d34:	bl	66e0 <PyLong_FromLong@plt>
    7d38:	cbnz	x0, 7d18 <PyFloat_FromString@plt+0x1288>
    7d3c:	mov	x0, x20
    7d40:	mov	x19, #0x0                   	// #0
    7d44:	bl	281b8 <PyInit__decimal@@Base+0xdc38>
    7d48:	adrp	x1, 5f000 <PyInit__decimal@@Base+0x44a80>
    7d4c:	mov	x0, x24
    7d50:	ldr	x1, [x1, #1704]
    7d54:	blr	x1
    7d58:	ldr	x0, [x21]
    7d5c:	ldp	x25, x26, [sp, #64]
    7d60:	sub	x0, x0, #0x1
    7d64:	str	x0, [x21]
    7d68:	cbz	x0, 7de0 <PyFloat_FromString@plt+0x1350>
    7d6c:	cbz	x23, 7c60 <PyFloat_FromString@plt+0x11d0>
    7d70:	ldr	x1, [x23]
    7d74:	sub	x1, x1, #0x1
    7d78:	str	x1, [x23]
    7d7c:	cbnz	x1, 7c60 <PyFloat_FromString@plt+0x11d0>
    7d80:	b	7da4 <PyFloat_FromString@plt+0x1314>
    7d84:	mov	x0, x22
    7d88:	bl	65d0 <_Py_Dealloc@plt>
    7d8c:	mov	x0, x19
    7d90:	ldp	x19, x20, [sp, #16]
    7d94:	ldp	x21, x22, [sp, #32]
    7d98:	ldp	x23, x24, [sp, #48]
    7d9c:	ldp	x29, x30, [sp], #80
    7da0:	ret
    7da4:	mov	x0, x23
    7da8:	bl	65d0 <_Py_Dealloc@plt>
    7dac:	b	7c60 <PyFloat_FromString@plt+0x11d0>
    7db0:	mov	x0, #0x0                   	// #0
    7db4:	bl	67a0 <PyTuple_New@plt>
    7db8:	mov	x23, x0
    7dbc:	cbnz	x0, 7c14 <PyFloat_FromString@plt+0x1184>
    7dc0:	mov	x0, x20
    7dc4:	bl	281b8 <PyInit__decimal@@Base+0xdc38>
    7dc8:	ldr	x0, [x21]
    7dcc:	mov	x19, #0x0                   	// #0
    7dd0:	sub	x0, x0, #0x1
    7dd4:	str	x0, [x21]
    7dd8:	cbnz	x0, 7c60 <PyFloat_FromString@plt+0x11d0>
    7ddc:	mov	x23, #0x0                   	// #0
    7de0:	mov	x0, x21
    7de4:	bl	65d0 <_Py_Dealloc@plt>
    7de8:	cbnz	x23, 7d70 <PyFloat_FromString@plt+0x12e0>
    7dec:	b	7c60 <PyFloat_FromString@plt+0x11d0>
    7df0:	ldr	x0, [x19, #32]
    7df4:	bl	66a0 <PyLong_FromSsize_t@plt>
    7df8:	mov	x22, x0
    7dfc:	b	7cc0 <PyFloat_FromString@plt+0x1230>
    7e00:	mov	x19, #0x0                   	// #0
    7e04:	mov	x0, x20
    7e08:	bl	281b8 <PyInit__decimal@@Base+0xdc38>
    7e0c:	mov	x0, x19
    7e10:	ldp	x19, x20, [sp, #16]
    7e14:	ldp	x21, x22, [sp, #32]
    7e18:	ldp	x29, x30, [sp], #80
    7e1c:	ret
    7e20:	adrp	x0, 5f000 <PyInit__decimal@@Base+0x44a80>
    7e24:	mov	x3, x22
    7e28:	mov	x2, x23
    7e2c:	mov	x1, x21
    7e30:	ldr	x0, [x0, #1832]
    7e34:	mov	x4, #0x0                   	// #0
    7e38:	bl	6850 <PyObject_CallFunctionObjArgs@plt>
    7e3c:	mov	x19, x0
    7e40:	mov	x0, x20
    7e44:	bl	281b8 <PyInit__decimal@@Base+0xdc38>
    7e48:	b	7d48 <PyFloat_FromString@plt+0x12b8>
    7e4c:	mov	x19, #0x0                   	// #0
    7e50:	bl	65e0 <PyErr_NoMemory@plt>
    7e54:	b	7e0c <PyFloat_FromString@plt+0x137c>
    7e58:	bl	65e0 <PyErr_NoMemory@plt>
    7e5c:	mov	x0, x20
    7e60:	bl	281b8 <PyInit__decimal@@Base+0xdc38>
    7e64:	b	7dc8 <PyFloat_FromString@plt+0x1338>
    7e68:	stp	x29, x30, [sp, #-32]!
    7e6c:	adrp	x2, 5d000 <PyInit__decimal@@Base+0x42a80>
    7e70:	add	x2, x2, #0x320
    7e74:	mov	x29, sp
    7e78:	stp	x19, x20, [sp, #16]
    7e7c:	cmp	x0, x2
    7e80:	b.eq	7f64 <PyFloat_FromString@plt+0x14d4>  // b.none
    7e84:	ldr	x2, [x0, #304]
    7e88:	mov	x1, #0x0                   	// #0
    7e8c:	blr	x2
    7e90:	mov	x19, x0
    7e94:	cbz	x19, 7f2c <PyFloat_FromString@plt+0x149c>
    7e98:	adrp	x20, 5f000 <PyInit__decimal@@Base+0x44a80>
    7e9c:	add	x20, x20, #0x6c0
    7ea0:	mov	x1, #0x0                   	// #0
    7ea4:	ldr	x0, [x20, #112]
    7ea8:	bl	6840 <PyObject_CallObject@plt>
    7eac:	str	x0, [x19, #64]
    7eb0:	cbz	x0, 7f18 <PyFloat_FromString@plt+0x1488>
    7eb4:	ldr	x0, [x20, #112]
    7eb8:	mov	x1, #0x0                   	// #0
    7ebc:	bl	6840 <PyObject_CallObject@plt>
    7ec0:	str	x0, [x19, #72]
    7ec4:	cbz	x0, 7f70 <PyFloat_FromString@plt+0x14e0>
    7ec8:	ldr	x1, [x20, #72]
    7ecc:	cbz	x1, 7f40 <PyFloat_FromString@plt+0x14b0>
    7ed0:	ldp	x4, x5, [x1, #16]
    7ed4:	stp	x4, x5, [x19, #16]
    7ed8:	ldp	x4, x5, [x1, #32]
    7edc:	stp	x4, x5, [x19, #32]
    7ee0:	ldp	x4, x5, [x1, #48]
    7ee4:	stp	x4, x5, [x19, #48]
    7ee8:	add	x2, x19, #0x28
    7eec:	ldr	x4, [x19, #64]
    7ef0:	add	x1, x19, #0x2c
    7ef4:	mov	w3, #0x1                   	// #1
    7ef8:	str	x2, [x4, #16]
    7efc:	str	x1, [x0, #16]
    7f00:	str	w3, [x19, #80]
    7f04:	str	xzr, [x19, #88]
    7f08:	mov	x0, x19
    7f0c:	ldp	x19, x20, [sp, #16]
    7f10:	ldp	x29, x30, [sp], #32
    7f14:	ret
    7f18:	ldr	x0, [x19]
    7f1c:	str	xzr, [x19, #72]
    7f20:	sub	x0, x0, #0x1
    7f24:	str	x0, [x19]
    7f28:	cbz	x0, 7f80 <PyFloat_FromString@plt+0x14f0>
    7f2c:	mov	x19, #0x0                   	// #0
    7f30:	mov	x0, x19
    7f34:	ldp	x19, x20, [sp, #16]
    7f38:	ldp	x29, x30, [sp], #32
    7f3c:	ret
    7f40:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
    7f44:	add	x1, x1, #0xc00
    7f48:	ldp	x4, x5, [x1]
    7f4c:	stp	x4, x5, [x19, #16]
    7f50:	ldp	x4, x5, [x1, #16]
    7f54:	stp	x4, x5, [x19, #32]
    7f58:	ldp	x4, x5, [x1, #32]
    7f5c:	stp	x4, x5, [x19, #48]
    7f60:	b	7ee8 <PyFloat_FromString@plt+0x1458>
    7f64:	bl	6950 <_PyObject_New@plt>
    7f68:	mov	x19, x0
    7f6c:	b	7e94 <PyFloat_FromString@plt+0x1404>
    7f70:	ldr	x0, [x19]
    7f74:	sub	x0, x0, #0x1
    7f78:	str	x0, [x19]
    7f7c:	cbnz	x0, 7f2c <PyFloat_FromString@plt+0x149c>
    7f80:	mov	x0, x19
    7f84:	mov	x19, #0x0                   	// #0
    7f88:	bl	65d0 <_Py_Dealloc@plt>
    7f8c:	b	7f08 <PyFloat_FromString@plt+0x1478>
    7f90:	stp	x29, x30, [sp, #-64]!
    7f94:	mov	x29, sp
    7f98:	stp	x19, x20, [sp, #16]
    7f9c:	ldp	w20, w2, [x0, #40]
    7fa0:	orr	w2, w2, w1
    7fa4:	str	w2, [x0, #44]
    7fa8:	orr	w0, w20, #0x200
    7fac:	tst	w0, w1
    7fb0:	b.eq	8064 <PyFloat_FromString@plt+0x15d4>  // b.none
    7fb4:	tbnz	w1, #9, 8074 <PyFloat_FromString@plt+0x15e4>
    7fb8:	adrp	x19, 5d000 <PyInit__decimal@@Base+0x42a80>
    7fbc:	and	w20, w20, w1
    7fc0:	add	x0, x19, #0x9a0
    7fc4:	ldr	x1, [x19, #2464]
    7fc8:	cbz	x1, 8090 <PyFloat_FromString@plt+0x1600>
    7fcc:	stp	x21, x22, [sp, #32]
    7fd0:	str	x23, [sp, #48]
    7fd4:	b	7fe0 <PyFloat_FromString@plt+0x1550>
    7fd8:	ldr	x1, [x0, #32]!
    7fdc:	cbz	x1, 8088 <PyFloat_FromString@plt+0x15f8>
    7fe0:	ldr	w1, [x0, #16]
    7fe4:	tst	w20, w1
    7fe8:	b.eq	7fd8 <PyFloat_FromString@plt+0x1548>  // b.none
    7fec:	ldr	x23, [x0, #24]
    7ff0:	cbz	x23, 804c <PyFloat_FromString@plt+0x15bc>
    7ff4:	mov	x0, #0x0                   	// #0
    7ff8:	bl	64a0 <PyList_New@plt>
    7ffc:	mov	x22, x0
    8000:	cbz	x0, 804c <PyFloat_FromString@plt+0x15bc>
    8004:	add	x0, x19, #0x9a0
    8008:	add	x21, x0, #0x1b8
    800c:	ldr	x0, [x0, #440]
    8010:	cbnz	x0, 8020 <PyFloat_FromString@plt+0x1590>
    8014:	b	80b8 <PyFloat_FromString@plt+0x1628>
    8018:	ldr	x0, [x21, #32]!
    801c:	cbz	x0, 80b8 <PyFloat_FromString@plt+0x1628>
    8020:	ldr	w0, [x21, #16]
    8024:	tst	w20, w0
    8028:	b.eq	8018 <PyFloat_FromString@plt+0x1588>  // b.none
    802c:	ldr	x1, [x21, #24]
    8030:	mov	x0, x22
    8034:	bl	6770 <PyList_Append@plt>
    8038:	tbz	w0, #31, 8018 <PyFloat_FromString@plt+0x1588>
    803c:	ldr	x0, [x22]
    8040:	sub	x0, x0, #0x1
    8044:	str	x0, [x22]
    8048:	cbz	x0, 8108 <PyFloat_FromString@plt+0x1678>
    804c:	mov	w0, #0x1                   	// #1
    8050:	ldp	x19, x20, [sp, #16]
    8054:	ldp	x21, x22, [sp, #32]
    8058:	ldr	x23, [sp, #48]
    805c:	ldp	x29, x30, [sp], #64
    8060:	ret
    8064:	mov	w0, #0x0                   	// #0
    8068:	ldp	x19, x20, [sp, #16]
    806c:	ldp	x29, x30, [sp], #64
    8070:	ret
    8074:	bl	65e0 <PyErr_NoMemory@plt>
    8078:	mov	w0, #0x1                   	// #1
    807c:	ldp	x19, x20, [sp, #16]
    8080:	ldp	x29, x30, [sp], #64
    8084:	ret
    8088:	ldp	x21, x22, [sp, #32]
    808c:	ldr	x23, [sp, #48]
    8090:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
    8094:	adrp	x1, 3b000 <PyInit__decimal@@Base+0x20a80>
    8098:	add	x1, x1, #0xb08
    809c:	ldr	x0, [x0, #3920]
    80a0:	ldr	x0, [x0]
    80a4:	bl	6650 <PyErr_SetString@plt>
    80a8:	mov	w0, #0x1                   	// #1
    80ac:	ldp	x19, x20, [sp, #16]
    80b0:	ldp	x29, x30, [sp], #64
    80b4:	ret
    80b8:	add	x19, x19, #0x9a0
    80bc:	ldr	x0, [x19, #32]
    80c0:	cbz	x0, 80f8 <PyFloat_FromString@plt+0x1668>
    80c4:	add	x19, x19, #0x20
    80c8:	b	80d4 <PyFloat_FromString@plt+0x1644>
    80cc:	ldr	x0, [x19, #32]!
    80d0:	cbz	x0, 80f8 <PyFloat_FromString@plt+0x1668>
    80d4:	ldr	w0, [x19, #16]
    80d8:	tst	w20, w0
    80dc:	b.eq	80cc <PyFloat_FromString@plt+0x163c>  // b.none
    80e0:	ldr	x1, [x19, #24]
    80e4:	mov	x0, x22
    80e8:	bl	6770 <PyList_Append@plt>
    80ec:	tbnz	w0, #31, 803c <PyFloat_FromString@plt+0x15ac>
    80f0:	ldr	x0, [x19, #32]!
    80f4:	cbnz	x0, 80d4 <PyFloat_FromString@plt+0x1644>
    80f8:	mov	x0, x23
    80fc:	mov	x1, x22
    8100:	bl	65f0 <PyErr_SetObject@plt>
    8104:	b	803c <PyFloat_FromString@plt+0x15ac>
    8108:	mov	x0, x22
    810c:	bl	65d0 <_Py_Dealloc@plt>
    8110:	b	804c <PyFloat_FromString@plt+0x15bc>
    8114:	nop
    8118:	stp	x29, x30, [sp, #-128]!
    811c:	mov	x29, sp
    8120:	stp	x21, x22, [sp, #32]
    8124:	add	x21, x0, #0x18
    8128:	mov	x0, x21
    812c:	stp	x19, x20, [sp, #16]
    8130:	mov	x19, x1
    8134:	str	x23, [sp, #48]
    8138:	mov	w23, w2
    813c:	str	wzr, [sp, #68]
    8140:	bl	27ff8 <PyInit__decimal@@Base+0xda78>
    8144:	cbnz	w0, 8284 <PyFloat_FromString@plt+0x17f4>
    8148:	bl	253d8 <PyInit__decimal@@Base+0xae58>
    814c:	mov	x20, x0
    8150:	cbz	x0, 82e8 <PyFloat_FromString@plt+0x1858>
    8154:	ldp	x6, x7, [x19, #16]
    8158:	add	x22, sp, #0x44
    815c:	ldp	x4, x5, [x19, #32]
    8160:	mov	x1, x21
    8164:	ldp	x2, x3, [x19, #48]
    8168:	stp	x2, x3, [sp, #112]
    816c:	mov	x3, x22
    8170:	add	x2, sp, #0x50
    8174:	stp	x6, x7, [sp, #80]
    8178:	stp	x4, x5, [sp, #96]
    817c:	str	w23, [sp, #116]
    8180:	bl	37550 <PyInit__decimal@@Base+0x1cfd0>
    8184:	ldr	w1, [sp, #68]
    8188:	mov	x0, x19
    818c:	bl	7f90 <PyFloat_FromString@plt+0x1500>
    8190:	cbnz	w0, 8260 <PyFloat_FromString@plt+0x17d0>
    8194:	mov	x4, x22
    8198:	mov	x3, x20
    819c:	add	x0, sp, #0x48
    81a0:	mov	w2, #0x40000000            	// #1073741824
    81a4:	mov	x1, #0x0                   	// #0
    81a8:	str	wzr, [sp, #68]
    81ac:	str	xzr, [sp, #72]
    81b0:	bl	37fe8 <PyInit__decimal@@Base+0x1da68>
    81b4:	mov	x19, x0
    81b8:	cmn	x0, #0x1
    81bc:	b.eq	825c <PyFloat_FromString@plt+0x17cc>  // b.none
    81c0:	bl	65a0 <_PyLong_New@plt>
    81c4:	mov	x22, x0
    81c8:	cbz	x0, 8240 <PyFloat_FromString@plt+0x17b0>
    81cc:	ldr	x23, [sp, #72]
    81d0:	add	x21, x0, #0x18
    81d4:	mov	x0, x21
    81d8:	lsl	x2, x19, #2
    81dc:	mov	x1, x23
    81e0:	bl	6470 <memcpy@plt>
    81e4:	adrp	x1, 5f000 <PyInit__decimal@@Base+0x44a80>
    81e8:	mov	x0, x23
    81ec:	ldr	x1, [x1, #1704]
    81f0:	blr	x1
    81f4:	b	8204 <PyFloat_FromString@plt+0x1774>
    81f8:	ldr	w2, [x21, x1, lsl #2]
    81fc:	cbnz	w2, 8210 <PyFloat_FromString@plt+0x1780>
    8200:	mov	x19, x1
    8204:	sub	x1, x19, #0x1
    8208:	cmp	x19, #0x0
    820c:	b.gt	81f8 <PyFloat_FromString@plt+0x1768>
    8210:	str	x19, [x22, #16]
    8214:	mov	x0, x20
    8218:	bl	27fa8 <PyInit__decimal@@Base+0xda28>
    821c:	cbnz	w0, 82b0 <PyFloat_FromString@plt+0x1820>
    8220:	mov	x0, x20
    8224:	bl	281b8 <PyInit__decimal@@Base+0xdc38>
    8228:	mov	x0, x22
    822c:	ldp	x19, x20, [sp, #16]
    8230:	ldp	x21, x22, [sp, #32]
    8234:	ldr	x23, [sp, #48]
    8238:	ldp	x29, x30, [sp], #128
    823c:	ret
    8240:	adrp	x1, 5f000 <PyInit__decimal@@Base+0x44a80>
    8244:	ldr	x0, [sp, #72]
    8248:	ldr	x1, [x1, #1704]
    824c:	blr	x1
    8250:	mov	x0, x20
    8254:	bl	281b8 <PyInit__decimal@@Base+0xdc38>
    8258:	b	8228 <PyFloat_FromString@plt+0x1798>
    825c:	bl	65e0 <PyErr_NoMemory@plt>
    8260:	mov	x0, x20
    8264:	mov	x22, #0x0                   	// #0
    8268:	bl	281b8 <PyInit__decimal@@Base+0xdc38>
    826c:	mov	x0, x22
    8270:	ldp	x19, x20, [sp, #16]
    8274:	ldp	x21, x22, [sp, #32]
    8278:	ldr	x23, [sp, #48]
    827c:	ldp	x29, x30, [sp], #128
    8280:	ret
    8284:	mov	x0, x21
    8288:	bl	27f98 <PyInit__decimal@@Base+0xda18>
    828c:	cbz	w0, 82c8 <PyFloat_FromString@plt+0x1838>
    8290:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
    8294:	adrp	x1, 3b000 <PyInit__decimal@@Base+0x20a80>
    8298:	mov	x22, #0x0                   	// #0
    829c:	add	x1, x1, #0xb30
    82a0:	ldr	x0, [x0, #3928]
    82a4:	ldr	x0, [x0]
    82a8:	bl	6650 <PyErr_SetString@plt>
    82ac:	b	8228 <PyFloat_FromString@plt+0x1798>
    82b0:	mov	x0, x20
    82b4:	bl	28008 <PyInit__decimal@@Base+0xda88>
    82b8:	cbnz	w0, 8220 <PyFloat_FromString@plt+0x1790>
    82bc:	neg	x19, x19
    82c0:	str	x19, [x22, #16]
    82c4:	b	8220 <PyFloat_FromString@plt+0x1790>
    82c8:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
    82cc:	adrp	x1, 3b000 <PyInit__decimal@@Base+0x20a80>
    82d0:	mov	x22, #0x0                   	// #0
    82d4:	add	x1, x1, #0xb50
    82d8:	ldr	x0, [x0, #3992]
    82dc:	ldr	x0, [x0]
    82e0:	bl	6650 <PyErr_SetString@plt>
    82e4:	b	8228 <PyFloat_FromString@plt+0x1798>
    82e8:	mov	x22, #0x0                   	// #0
    82ec:	bl	65e0 <PyErr_NoMemory@plt>
    82f0:	b	8228 <PyFloat_FromString@plt+0x1798>
    82f4:	nop
    82f8:	stp	x29, x30, [sp, #-128]!
    82fc:	mov	x29, sp
    8300:	stp	x21, x22, [sp, #32]
    8304:	mov	x21, x0
    8308:	ldr	x0, [x1, #8]
    830c:	stp	x19, x20, [sp, #16]
    8310:	str	wzr, [sp, #76]
    8314:	ldr	x0, [x0, #168]
    8318:	tbz	w0, #24, 83ec <PyFloat_FromString@plt+0x195c>
    831c:	add	x20, sp, #0x50
    8320:	mov	x19, x1
    8324:	mov	x22, x2
    8328:	mov	x0, x20
    832c:	str	x23, [sp, #48]
    8330:	bl	1d4d0 <PyInit__decimal@@Base+0x2f50>
    8334:	add	x23, sp, #0x4c
    8338:	mov	x1, x19
    833c:	mov	x2, x20
    8340:	mov	x0, x21
    8344:	mov	x3, x23
    8348:	bl	6e90 <PyFloat_FromString@plt+0x400>
    834c:	mov	x19, x0
    8350:	cbz	x0, 83d0 <PyFloat_FromString@plt+0x1940>
    8354:	ldr	w1, [sp, #76]
    8358:	mov	w0, #0x1041                	// #4161
    835c:	tst	w1, w0
    8360:	b.ne	8394 <PyFloat_FromString@plt+0x1904>  // b.any
    8364:	mov	w0, #0x3be                 	// #958
    8368:	and	w1, w1, w0
    836c:	mov	x0, x22
    8370:	str	w1, [sp, #76]
    8374:	bl	7f90 <PyFloat_FromString@plt+0x1500>
    8378:	cbnz	w0, 83c0 <PyFloat_FromString@plt+0x1930>
    837c:	ldr	x23, [sp, #48]
    8380:	mov	x0, x19
    8384:	ldp	x19, x20, [sp, #16]
    8388:	ldp	x21, x22, [sp, #32]
    838c:	ldp	x29, x30, [sp], #128
    8390:	ret
    8394:	add	x0, x19, #0x18
    8398:	mov	w1, #0x100                 	// #256
    839c:	mov	x2, x23
    83a0:	bl	28d68 <PyInit__decimal@@Base+0xe7e8>
    83a4:	ldr	w1, [sp, #76]
    83a8:	mov	w0, #0x3be                 	// #958
    83ac:	and	w1, w1, w0
    83b0:	mov	x0, x22
    83b4:	str	w1, [sp, #76]
    83b8:	bl	7f90 <PyFloat_FromString@plt+0x1500>
    83bc:	cbz	w0, 837c <PyFloat_FromString@plt+0x18ec>
    83c0:	ldr	x0, [x19]
    83c4:	sub	x0, x0, #0x1
    83c8:	str	x0, [x19]
    83cc:	cbz	x0, 841c <PyFloat_FromString@plt+0x198c>
    83d0:	mov	x19, #0x0                   	// #0
    83d4:	mov	x0, x19
    83d8:	ldp	x19, x20, [sp, #16]
    83dc:	ldp	x21, x22, [sp, #32]
    83e0:	ldr	x23, [sp, #48]
    83e4:	ldp	x29, x30, [sp], #128
    83e8:	ret
    83ec:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
    83f0:	mov	x19, #0x0                   	// #0
    83f4:	adrp	x1, 3b000 <PyInit__decimal@@Base+0x20a80>
    83f8:	add	x1, x1, #0xb78
    83fc:	ldr	x0, [x0, #3936]
    8400:	ldr	x0, [x0]
    8404:	bl	6650 <PyErr_SetString@plt>
    8408:	mov	x0, x19
    840c:	ldp	x19, x20, [sp, #16]
    8410:	ldp	x21, x22, [sp, #32]
    8414:	ldp	x29, x30, [sp], #128
    8418:	ret
    841c:	mov	x0, x19
    8420:	mov	x19, #0x0                   	// #0
    8424:	bl	65d0 <_Py_Dealloc@plt>
    8428:	ldr	x23, [sp, #48]
    842c:	b	8380 <PyFloat_FromString@plt+0x18f0>
    8430:	stp	x29, x30, [sp, #-160]!
    8434:	mov	x29, sp
    8438:	ldr	x3, [x1, #8]
    843c:	stp	x19, x20, [sp, #16]
    8440:	str	wzr, [sp, #108]
    8444:	ldr	x4, [x3, #168]
    8448:	tbnz	w4, #24, 86c8 <PyFloat_FromString@plt+0x1c38>
    844c:	mov	x19, x1
    8450:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41a80>
    8454:	stp	x21, x22, [sp, #32]
    8458:	mov	x22, x0
    845c:	mov	x21, x2
    8460:	ldr	x1, [x1, #3864]
    8464:	cmp	x3, x1
    8468:	b.eq	8478 <PyFloat_FromString@plt+0x19e8>  // b.none
    846c:	mov	x0, x3
    8470:	bl	69c0 <PyType_IsSubtype@plt>
    8474:	cbz	w0, 8740 <PyFloat_FromString@plt+0x1cb0>
    8478:	mov	x0, x19
    847c:	stp	x23, x24, [sp, #48]
    8480:	bl	68c0 <PyFloat_AsDouble@plt>
    8484:	fmov	d1, #-1.000000000000000000e+00
    8488:	fcmp	d0, d1
    848c:	b.eq	84fc <PyFloat_FromString@plt+0x1a6c>  // b.none
    8490:	fmov	d2, #1.000000000000000000e+00
    8494:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
    8498:	fmov	d1, x0
    849c:	bsl	v1.8b, v0.8b, v2.8b
    84a0:	fcmp	d1, d2
    84a4:	cset	w23, ne  // ne = any
    84a8:	fcmp	d0, d0
    84ac:	b.vs	87c8 <PyFloat_FromString@plt+0x1d38>
    84b0:	fabs	d0, d0
    84b4:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    84b8:	fmov	d1, x0
    84bc:	fcmp	d0, d1
    84c0:	b.le	8508 <PyFloat_FromString@plt+0x1a78>
    84c4:	mov	x0, x22
    84c8:	bl	6c60 <PyFloat_FromString@plt+0x1d0>
    84cc:	mov	x19, x0
    84d0:	cbz	x0, 8764 <PyFloat_FromString@plt+0x1cd4>
    84d4:	mov	w1, w23
    84d8:	add	x0, x19, #0x18
    84dc:	mov	w2, #0x2                   	// #2
    84e0:	bl	28cd8 <PyInit__decimal@@Base+0xe758>
    84e4:	ldp	x21, x22, [sp, #32]
    84e8:	ldp	x23, x24, [sp, #48]
    84ec:	mov	x0, x19
    84f0:	ldp	x19, x20, [sp, #16]
    84f4:	ldp	x29, x30, [sp], #160
    84f8:	ret
    84fc:	mov	w23, #0x1                   	// #1
    8500:	bl	67e0 <PyErr_Occurred@plt>
    8504:	cbnz	x0, 86ac <PyFloat_FromString@plt+0x1c1c>
    8508:	adrp	x24, 5f000 <PyInit__decimal@@Base+0x44a80>
    850c:	add	x20, x24, #0x6c0
    8510:	mov	x0, x19
    8514:	ldr	x1, [x20, #120]
    8518:	blr	x1
    851c:	mov	x19, x0
    8520:	cbz	x0, 86ac <PyFloat_FromString@plt+0x1c1c>
    8524:	ldr	x2, [x20, #128]
    8528:	mov	x1, #0x0                   	// #0
    852c:	blr	x2
    8530:	mov	x20, x0
    8534:	ldr	x1, [x19]
    8538:	sub	x0, x1, #0x1
    853c:	str	x0, [x19]
    8540:	cbz	x0, 86e0 <PyFloat_FromString@plt+0x1c50>
    8544:	cbz	x20, 86ac <PyFloat_FromString@plt+0x1c1c>
    8548:	add	x24, x24, #0x6c0
    854c:	stp	x25, x26, [sp, #64]
    8550:	mov	x1, #0x0                   	// #0
    8554:	ldp	x25, x0, [x20, #24]
    8558:	ldr	x2, [x24, #136]
    855c:	blr	x2
    8560:	mov	x19, x0
    8564:	cbz	x0, 8770 <PyFloat_FromString@plt+0x1ce0>
    8568:	bl	66f0 <PyLong_AsSsize_t@plt>
    856c:	mov	x24, x0
    8570:	ldr	x1, [x19]
    8574:	sub	x1, x1, #0x1
    8578:	str	x1, [x19]
    857c:	cbz	x1, 8720 <PyFloat_FromString@plt+0x1c90>
    8580:	cmn	x24, #0x1
    8584:	b.eq	86ec <PyFloat_FromString@plt+0x1c5c>  // b.none
    8588:	mov	x1, x25
    858c:	mov	x0, x22
    8590:	mov	x2, x21
    8594:	bl	82f8 <PyFloat_FromString@plt+0x1868>
    8598:	ldr	x1, [x20]
    859c:	mov	x19, x0
    85a0:	sub	x0, x1, #0x1
    85a4:	str	x0, [x20]
    85a8:	cbz	x0, 872c <PyFloat_FromString@plt+0x1c9c>
    85ac:	cbz	x19, 8738 <PyFloat_FromString@plt+0x1ca8>
    85b0:	bl	253d8 <PyInit__decimal@@Base+0xae58>
    85b4:	mov	x20, x0
    85b8:	cbz	x0, 87a0 <PyFloat_FromString@plt+0x1d10>
    85bc:	bl	253d8 <PyInit__decimal@@Base+0xae58>
    85c0:	mov	x22, x0
    85c4:	cbz	x0, 8798 <PyFloat_FromString@plt+0x1d08>
    85c8:	add	x25, sp, #0x70
    85cc:	add	x26, sp, #0x6c
    85d0:	mov	x0, x25
    85d4:	bl	1d4d0 <PyInit__decimal@@Base+0x2f50>
    85d8:	mov	x2, x25
    85dc:	mov	x3, x26
    85e0:	mov	x0, x20
    85e4:	mov	x1, #0x5                   	// #5
    85e8:	bl	2be60 <PyInit__decimal@@Base+0x118e0>
    85ec:	mov	x3, x26
    85f0:	mov	x2, x25
    85f4:	sub	x1, x24, #0x1
    85f8:	mov	x0, x22
    85fc:	bl	2bba8 <PyInit__decimal@@Base+0x11628>
    8600:	mov	x1, x20
    8604:	mov	x0, x20
    8608:	mov	x4, x26
    860c:	mov	x3, x25
    8610:	mov	x2, x22
    8614:	bl	35920 <PyInit__decimal@@Base+0x1b3a0>
    8618:	ldr	w1, [sp, #108]
    861c:	mov	x0, x21
    8620:	bl	7f90 <PyFloat_FromString@plt+0x1500>
    8624:	cbnz	w0, 87f4 <PyFloat_FromString@plt+0x1d64>
    8628:	str	x27, [sp, #80]
    862c:	add	x27, x19, #0x18
    8630:	mov	x1, x27
    8634:	mov	x4, x26
    8638:	mov	x3, x25
    863c:	mov	x2, x20
    8640:	mov	x0, x27
    8644:	bl	336b0 <PyInit__decimal@@Base+0x19130>
    8648:	mov	x0, x20
    864c:	bl	281b8 <PyInit__decimal@@Base+0xdc38>
    8650:	mov	x0, x22
    8654:	bl	281b8 <PyInit__decimal@@Base+0xdc38>
    8658:	ldr	w1, [sp, #108]
    865c:	mov	x0, x21
    8660:	bl	7f90 <PyFloat_FromString@plt+0x1500>
    8664:	cbnz	w0, 8694 <PyFloat_FromString@plt+0x1c04>
    8668:	mov	x0, x27
    866c:	mov	w1, w23
    8670:	bl	28648 <PyInit__decimal@@Base+0xe0c8>
    8674:	mov	x0, #0x1                   	// #1
    8678:	sub	x24, x0, x24
    867c:	ldp	x21, x22, [sp, #32]
    8680:	ldp	x25, x26, [sp, #64]
    8684:	ldr	x27, [sp, #80]
    8688:	str	x24, [x19, #32]
    868c:	ldp	x23, x24, [sp, #48]
    8690:	b	84ec <PyFloat_FromString@plt+0x1a5c>
    8694:	ldr	x0, [x19]
    8698:	sub	x0, x0, #0x1
    869c:	str	x0, [x19]
    86a0:	cbz	x0, 8828 <PyFloat_FromString@plt+0x1d98>
    86a4:	ldp	x25, x26, [sp, #64]
    86a8:	ldr	x27, [sp, #80]
    86ac:	mov	x19, #0x0                   	// #0
    86b0:	mov	x0, x19
    86b4:	ldp	x19, x20, [sp, #16]
    86b8:	ldp	x21, x22, [sp, #32]
    86bc:	ldp	x23, x24, [sp, #48]
    86c0:	ldp	x29, x30, [sp], #160
    86c4:	ret
    86c8:	bl	82f8 <PyFloat_FromString@plt+0x1868>
    86cc:	mov	x19, x0
    86d0:	mov	x0, x19
    86d4:	ldp	x19, x20, [sp, #16]
    86d8:	ldp	x29, x30, [sp], #160
    86dc:	ret
    86e0:	mov	x0, x19
    86e4:	bl	65d0 <_Py_Dealloc@plt>
    86e8:	b	8544 <PyFloat_FromString@plt+0x1ab4>
    86ec:	bl	67e0 <PyErr_Occurred@plt>
    86f0:	cbz	x0, 8588 <PyFloat_FromString@plt+0x1af8>
    86f4:	ldr	x0, [x20]
    86f8:	sub	x0, x0, #0x1
    86fc:	str	x0, [x20]
    8700:	cbnz	x0, 8738 <PyFloat_FromString@plt+0x1ca8>
    8704:	mov	x0, x20
    8708:	bl	65d0 <_Py_Dealloc@plt>
    870c:	mov	x19, #0x0                   	// #0
    8710:	ldp	x21, x22, [sp, #32]
    8714:	ldp	x23, x24, [sp, #48]
    8718:	ldp	x25, x26, [sp, #64]
    871c:	b	84ec <PyFloat_FromString@plt+0x1a5c>
    8720:	mov	x0, x19
    8724:	bl	65d0 <_Py_Dealloc@plt>
    8728:	b	8580 <PyFloat_FromString@plt+0x1af0>
    872c:	mov	x0, x20
    8730:	bl	65d0 <_Py_Dealloc@plt>
    8734:	b	85ac <PyFloat_FromString@plt+0x1b1c>
    8738:	ldp	x25, x26, [sp, #64]
    873c:	b	86ac <PyFloat_FromString@plt+0x1c1c>
    8740:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
    8744:	adrp	x1, 3b000 <PyInit__decimal@@Base+0x20a80>
    8748:	mov	x19, #0x0                   	// #0
    874c:	add	x1, x1, #0xb98
    8750:	ldr	x0, [x0, #3936]
    8754:	ldr	x0, [x0]
    8758:	bl	6650 <PyErr_SetString@plt>
    875c:	ldp	x21, x22, [sp, #32]
    8760:	b	84ec <PyFloat_FromString@plt+0x1a5c>
    8764:	ldp	x21, x22, [sp, #32]
    8768:	ldp	x23, x24, [sp, #48]
    876c:	b	84ec <PyFloat_FromString@plt+0x1a5c>
    8770:	ldr	x0, [x20]
    8774:	sub	x0, x0, #0x1
    8778:	str	x0, [x20]
    877c:	cbnz	x0, 8738 <PyFloat_FromString@plt+0x1ca8>
    8780:	mov	x0, x20
    8784:	bl	65d0 <_Py_Dealloc@plt>
    8788:	ldp	x21, x22, [sp, #32]
    878c:	ldp	x23, x24, [sp, #48]
    8790:	ldp	x25, x26, [sp, #64]
    8794:	b	84ec <PyFloat_FromString@plt+0x1a5c>
    8798:	mov	x0, x20
    879c:	bl	281b8 <PyInit__decimal@@Base+0xdc38>
    87a0:	ldr	x0, [x19]
    87a4:	sub	x0, x0, #0x1
    87a8:	str	x0, [x19]
    87ac:	cbz	x0, 881c <PyFloat_FromString@plt+0x1d8c>
    87b0:	bl	65e0 <PyErr_NoMemory@plt>
    87b4:	mov	x19, #0x0                   	// #0
    87b8:	ldp	x21, x22, [sp, #32]
    87bc:	ldp	x23, x24, [sp, #48]
    87c0:	ldp	x25, x26, [sp, #64]
    87c4:	b	84ec <PyFloat_FromString@plt+0x1a5c>
    87c8:	mov	x0, x22
    87cc:	bl	6c60 <PyFloat_FromString@plt+0x1d0>
    87d0:	mov	x19, x0
    87d4:	cbz	x0, 8764 <PyFloat_FromString@plt+0x1cd4>
    87d8:	add	x0, x19, #0x18
    87dc:	mov	w2, #0x4                   	// #4
    87e0:	mov	w1, #0x0                   	// #0
    87e4:	bl	28cd8 <PyInit__decimal@@Base+0xe758>
    87e8:	ldp	x21, x22, [sp, #32]
    87ec:	ldp	x23, x24, [sp, #48]
    87f0:	b	84ec <PyFloat_FromString@plt+0x1a5c>
    87f4:	mov	x0, x20
    87f8:	bl	281b8 <PyInit__decimal@@Base+0xdc38>
    87fc:	mov	x0, x22
    8800:	bl	281b8 <PyInit__decimal@@Base+0xdc38>
    8804:	ldr	x0, [x19]
    8808:	sub	x0, x0, #0x1
    880c:	str	x0, [x19]
    8810:	cbnz	x0, 8738 <PyFloat_FromString@plt+0x1ca8>
    8814:	mov	x0, x19
    8818:	b	8708 <PyFloat_FromString@plt+0x1c78>
    881c:	mov	x0, x19
    8820:	bl	65d0 <_Py_Dealloc@plt>
    8824:	b	87b0 <PyFloat_FromString@plt+0x1d20>
    8828:	mov	x0, x19
    882c:	mov	x19, #0x0                   	// #0
    8830:	bl	65d0 <_Py_Dealloc@plt>
    8834:	ldp	x21, x22, [sp, #32]
    8838:	ldp	x23, x24, [sp, #48]
    883c:	ldp	x25, x26, [sp, #64]
    8840:	ldr	x27, [sp, #80]
    8844:	b	84ec <PyFloat_FromString@plt+0x1a5c>
    8848:	stp	x29, x30, [sp, #-80]!
    884c:	adrp	x2, 5d000 <PyInit__decimal@@Base+0x42a80>
    8850:	add	x2, x2, #0x320
    8854:	mov	x29, sp
    8858:	stp	x19, x20, [sp, #16]
    885c:	mov	x20, x1
    8860:	stp	x21, x22, [sp, #32]
    8864:	mov	x21, x0
    8868:	add	x0, x2, #0x1a0
    886c:	str	wzr, [sp, #76]
    8870:	bl	6c60 <PyFloat_FromString@plt+0x1d0>
    8874:	cbz	x0, 88f4 <PyFloat_FromString@plt+0x1e64>
    8878:	add	x22, x0, #0x18
    887c:	str	x23, [sp, #48]
    8880:	add	x23, sp, #0x4c
    8884:	add	x1, x21, #0x18
    8888:	mov	x19, x0
    888c:	mov	x2, x23
    8890:	mov	x0, x22
    8894:	bl	28fe0 <PyInit__decimal@@Base+0xea60>
    8898:	ldr	w1, [sp, #76]
    889c:	mov	x0, x20
    88a0:	bl	7f90 <PyFloat_FromString@plt+0x1500>
    88a4:	cbnz	w0, 88e0 <PyFloat_FromString@plt+0x1e50>
    88a8:	mov	x0, x22
    88ac:	add	x1, x20, #0x10
    88b0:	mov	x2, x23
    88b4:	bl	2b110 <PyInit__decimal@@Base+0x10b90>
    88b8:	ldr	w1, [sp, #76]
    88bc:	mov	x0, x20
    88c0:	bl	7f90 <PyFloat_FromString@plt+0x1500>
    88c4:	cbnz	w0, 88e0 <PyFloat_FromString@plt+0x1e50>
    88c8:	mov	x0, x19
    88cc:	ldp	x19, x20, [sp, #16]
    88d0:	ldp	x21, x22, [sp, #32]
    88d4:	ldr	x23, [sp, #48]
    88d8:	ldp	x29, x30, [sp], #80
    88dc:	ret
    88e0:	ldr	x0, [x19]
    88e4:	sub	x0, x0, #0x1
    88e8:	str	x0, [x19]
    88ec:	cbz	x0, 890c <PyFloat_FromString@plt+0x1e7c>
    88f0:	ldr	x23, [sp, #48]
    88f4:	mov	x19, #0x0                   	// #0
    88f8:	mov	x0, x19
    88fc:	ldp	x19, x20, [sp, #16]
    8900:	ldp	x21, x22, [sp, #32]
    8904:	ldp	x29, x30, [sp], #80
    8908:	ret
    890c:	mov	x0, x19
    8910:	mov	x19, #0x0                   	// #0
    8914:	bl	65d0 <_Py_Dealloc@plt>
    8918:	mov	x0, x19
    891c:	ldp	x19, x20, [sp, #16]
    8920:	ldp	x21, x22, [sp, #32]
    8924:	ldr	x23, [sp, #48]
    8928:	ldp	x29, x30, [sp], #80
    892c:	ret
    8930:	stp	x29, x30, [sp, #-48]!
    8934:	mov	x29, sp
    8938:	stp	x19, x20, [sp, #16]
    893c:	mov	w20, w0
    8940:	mov	x0, #0x0                   	// #0
    8944:	str	x21, [sp, #32]
    8948:	bl	64a0 <PyList_New@plt>
    894c:	cbz	x0, 899c <PyFloat_FromString@plt+0x1f0c>
    8950:	mov	x21, x0
    8954:	adrp	x0, 5d000 <PyInit__decimal@@Base+0x42a80>
    8958:	add	x19, x0, #0x9a0
    895c:	ldr	x0, [x0, #2464]
    8960:	cbnz	x0, 8970 <PyFloat_FromString@plt+0x1ee0>
    8964:	b	89a0 <PyFloat_FromString@plt+0x1f10>
    8968:	ldr	x1, [x19, #32]!
    896c:	cbz	x1, 89a0 <PyFloat_FromString@plt+0x1f10>
    8970:	ldr	w1, [x19, #16]
    8974:	tst	w20, w1
    8978:	b.eq	8968 <PyFloat_FromString@plt+0x1ed8>  // b.none
    897c:	ldr	x1, [x19, #24]
    8980:	mov	x0, x21
    8984:	bl	6770 <PyList_Append@plt>
    8988:	tbz	w0, #31, 8968 <PyFloat_FromString@plt+0x1ed8>
    898c:	ldr	x0, [x21]
    8990:	sub	x0, x0, #0x1
    8994:	str	x0, [x21]
    8998:	cbz	x0, 89b4 <PyFloat_FromString@plt+0x1f24>
    899c:	mov	x21, #0x0                   	// #0
    89a0:	mov	x0, x21
    89a4:	ldp	x19, x20, [sp, #16]
    89a8:	ldr	x21, [sp, #32]
    89ac:	ldp	x29, x30, [sp], #48
    89b0:	ret
    89b4:	mov	x0, x21
    89b8:	mov	x21, #0x0                   	// #0
    89bc:	bl	65d0 <_Py_Dealloc@plt>
    89c0:	b	89a0 <PyFloat_FromString@plt+0x1f10>
    89c4:	nop
    89c8:	sub	sp, sp, #0x40
    89cc:	stp	x29, x30, [sp, #16]
    89d0:	add	x29, sp, #0x10
    89d4:	stp	x21, x22, [sp, #48]
    89d8:	add	x22, x0, #0x10
    89dc:	stp	x19, x20, [sp, #32]
    89e0:	mov	x20, x0
    89e4:	ldr	w0, [x22, #28]
    89e8:	bl	8930 <PyFloat_FromString@plt+0x1ea0>
    89ec:	cbz	x0, 8ac4 <PyFloat_FromString@plt+0x2034>
    89f0:	mov	x19, x0
    89f4:	ldr	w0, [x22, #24]
    89f8:	bl	8930 <PyFloat_FromString@plt+0x1ea0>
    89fc:	mov	x21, x0
    8a00:	cbz	x0, 8ab4 <PyFloat_FromString@plt+0x2024>
    8a04:	ldrsw	x1, [x22, #36]
    8a08:	adrp	x0, 5f000 <PyInit__decimal@@Base+0x44a80>
    8a0c:	add	x0, x0, #0x548
    8a10:	ldr	w7, [x22, #40]
    8a14:	ldr	x5, [x22, #8]
    8a18:	str	x19, [sp]
    8a1c:	ldr	x3, [x0, x1, lsl #3]
    8a20:	str	x21, [sp, #8]
    8a24:	adrp	x0, 3b000 <PyInit__decimal@@Base+0x20a80>
    8a28:	add	x0, x0, #0xbb8
    8a2c:	ldp	x1, x2, [x20, #8]
    8a30:	ldr	w6, [x20, #80]
    8a34:	ldr	x4, [x22, #16]
    8a38:	bl	67d0 <Py_BuildValue@plt>
    8a3c:	mov	x20, x0
    8a40:	ldr	x1, [x19]
    8a44:	sub	x1, x1, #0x1
    8a48:	str	x1, [x19]
    8a4c:	cbz	x1, 8a98 <PyFloat_FromString@plt+0x2008>
    8a50:	ldr	x1, [x21]
    8a54:	sub	x1, x1, #0x1
    8a58:	str	x1, [x21]
    8a5c:	cbz	x1, 8a78 <PyFloat_FromString@plt+0x1fe8>
    8a60:	mov	x0, x20
    8a64:	ldp	x29, x30, [sp, #16]
    8a68:	ldp	x19, x20, [sp, #32]
    8a6c:	ldp	x21, x22, [sp, #48]
    8a70:	add	sp, sp, #0x40
    8a74:	ret
    8a78:	mov	x0, x21
    8a7c:	bl	65d0 <_Py_Dealloc@plt>
    8a80:	mov	x0, x20
    8a84:	ldp	x29, x30, [sp, #16]
    8a88:	ldp	x19, x20, [sp, #32]
    8a8c:	ldp	x21, x22, [sp, #48]
    8a90:	add	sp, sp, #0x40
    8a94:	ret
    8a98:	mov	x0, x19
    8a9c:	bl	65d0 <_Py_Dealloc@plt>
    8aa0:	ldr	x1, [x21]
    8aa4:	sub	x1, x1, #0x1
    8aa8:	str	x1, [x21]
    8aac:	cbnz	x1, 8a60 <PyFloat_FromString@plt+0x1fd0>
    8ab0:	b	8a78 <PyFloat_FromString@plt+0x1fe8>
    8ab4:	ldr	x0, [x19]
    8ab8:	sub	x0, x0, #0x1
    8abc:	str	x0, [x19]
    8ac0:	cbz	x0, 8ae0 <PyFloat_FromString@plt+0x2050>
    8ac4:	mov	x20, #0x0                   	// #0
    8ac8:	mov	x0, x20
    8acc:	ldp	x29, x30, [sp, #16]
    8ad0:	ldp	x19, x20, [sp, #32]
    8ad4:	ldp	x21, x22, [sp, #48]
    8ad8:	add	sp, sp, #0x40
    8adc:	ret
    8ae0:	mov	x0, x19
    8ae4:	mov	x20, #0x0                   	// #0
    8ae8:	bl	65d0 <_Py_Dealloc@plt>
    8aec:	b	8a60 <PyFloat_FromString@plt+0x1fd0>
    8af0:	stp	x29, x30, [sp, #-128]!
    8af4:	mov	x29, sp
    8af8:	stp	x19, x20, [sp, #16]
    8afc:	stp	x21, x22, [sp, #32]
    8b00:	mov	x21, x1
    8b04:	mov	x22, x2
    8b08:	str	wzr, [sp, #76]
    8b0c:	bl	6c60 <PyFloat_FromString@plt+0x1d0>
    8b10:	cbz	x0, 8bc4 <PyFloat_FromString@plt+0x2134>
    8b14:	add	x20, sp, #0x50
    8b18:	mov	x19, x0
    8b1c:	stp	x23, x24, [sp, #48]
    8b20:	add	x23, x0, #0x18
    8b24:	add	x24, sp, #0x4c
    8b28:	mov	x0, x20
    8b2c:	bl	1d4d0 <PyInit__decimal@@Base+0x2f50>
    8b30:	mov	x1, x21
    8b34:	mov	x0, x23
    8b38:	mov	x2, x20
    8b3c:	mov	x3, x24
    8b40:	bl	23a18 <PyInit__decimal@@Base+0x9498>
    8b44:	ldr	w1, [sp, #76]
    8b48:	mov	w0, #0x1041                	// #4161
    8b4c:	tst	w1, w0
    8b50:	b.ne	8b84 <PyFloat_FromString@plt+0x20f4>  // b.any
    8b54:	mov	w0, #0x3be                 	// #958
    8b58:	and	w1, w1, w0
    8b5c:	mov	x0, x22
    8b60:	str	w1, [sp, #76]
    8b64:	bl	7f90 <PyFloat_FromString@plt+0x1500>
    8b68:	cbnz	w0, 8bb0 <PyFloat_FromString@plt+0x2120>
    8b6c:	ldp	x23, x24, [sp, #48]
    8b70:	mov	x0, x19
    8b74:	ldp	x19, x20, [sp, #16]
    8b78:	ldp	x21, x22, [sp, #32]
    8b7c:	ldp	x29, x30, [sp], #128
    8b80:	ret
    8b84:	mov	x0, x23
    8b88:	mov	w1, #0x100                 	// #256
    8b8c:	mov	x2, x24
    8b90:	bl	28d68 <PyInit__decimal@@Base+0xe7e8>
    8b94:	ldr	w1, [sp, #76]
    8b98:	mov	w0, #0x3be                 	// #958
    8b9c:	and	w1, w1, w0
    8ba0:	mov	x0, x22
    8ba4:	str	w1, [sp, #76]
    8ba8:	bl	7f90 <PyFloat_FromString@plt+0x1500>
    8bac:	cbz	w0, 8b6c <PyFloat_FromString@plt+0x20dc>
    8bb0:	ldr	x0, [x19]
    8bb4:	sub	x0, x0, #0x1
    8bb8:	str	x0, [x19]
    8bbc:	cbz	x0, 8bdc <PyFloat_FromString@plt+0x214c>
    8bc0:	ldp	x23, x24, [sp, #48]
    8bc4:	mov	x19, #0x0                   	// #0
    8bc8:	mov	x0, x19
    8bcc:	ldp	x19, x20, [sp, #16]
    8bd0:	ldp	x21, x22, [sp, #32]
    8bd4:	ldp	x29, x30, [sp], #128
    8bd8:	ret
    8bdc:	mov	x0, x19
    8be0:	mov	x19, #0x0                   	// #0
    8be4:	bl	65d0 <_Py_Dealloc@plt>
    8be8:	ldp	x23, x24, [sp, #48]
    8bec:	b	8b70 <PyFloat_FromString@plt+0x20e0>
    8bf0:	stp	x29, x30, [sp, #-48]!
    8bf4:	adrp	x2, 5d000 <PyInit__decimal@@Base+0x42a80>
    8bf8:	add	x2, x2, #0x320
    8bfc:	mov	x29, sp
    8c00:	stp	x19, x20, [sp, #16]
    8c04:	mov	x20, x0
    8c08:	add	x0, x2, #0x1a0
    8c0c:	str	wzr, [sp, #44]
    8c10:	bl	6c60 <PyFloat_FromString@plt+0x1d0>
    8c14:	mov	x19, x0
    8c18:	cbz	x0, 8c34 <PyFloat_FromString@plt+0x21a4>
    8c1c:	add	x1, x20, #0x18
    8c20:	add	x2, sp, #0x2c
    8c24:	add	x0, x0, #0x18
    8c28:	bl	29e40 <PyInit__decimal@@Base+0xf8c0>
    8c2c:	ldr	w0, [sp, #44]
    8c30:	tbnz	w0, #9, 8c44 <PyFloat_FromString@plt+0x21b4>
    8c34:	mov	x0, x19
    8c38:	ldp	x19, x20, [sp, #16]
    8c3c:	ldp	x29, x30, [sp], #48
    8c40:	ret
    8c44:	ldr	x0, [x19]
    8c48:	sub	x0, x0, #0x1
    8c4c:	str	x0, [x19]
    8c50:	cbz	x0, 8c6c <PyFloat_FromString@plt+0x21dc>
    8c54:	bl	65e0 <PyErr_NoMemory@plt>
    8c58:	mov	x19, #0x0                   	// #0
    8c5c:	mov	x0, x19
    8c60:	ldp	x19, x20, [sp, #16]
    8c64:	ldp	x29, x30, [sp], #48
    8c68:	ret
    8c6c:	mov	x0, x19
    8c70:	bl	65d0 <_Py_Dealloc@plt>
    8c74:	b	8c54 <PyFloat_FromString@plt+0x21c4>
    8c78:	stp	x29, x30, [sp, #-48]!
    8c7c:	adrp	x2, 5d000 <PyInit__decimal@@Base+0x42a80>
    8c80:	add	x2, x2, #0x320
    8c84:	mov	x29, sp
    8c88:	stp	x19, x20, [sp, #16]
    8c8c:	mov	x20, x0
    8c90:	add	x0, x2, #0x1a0
    8c94:	str	wzr, [sp, #44]
    8c98:	bl	6c60 <PyFloat_FromString@plt+0x1d0>
    8c9c:	mov	x19, x0
    8ca0:	cbz	x0, 8cbc <PyFloat_FromString@plt+0x222c>
    8ca4:	add	x1, x20, #0x18
    8ca8:	add	x2, sp, #0x2c
    8cac:	add	x0, x0, #0x18
    8cb0:	bl	29e08 <PyInit__decimal@@Base+0xf888>
    8cb4:	ldr	w0, [sp, #44]
    8cb8:	tbnz	w0, #9, 8ccc <PyFloat_FromString@plt+0x223c>
    8cbc:	mov	x0, x19
    8cc0:	ldp	x19, x20, [sp, #16]
    8cc4:	ldp	x29, x30, [sp], #48
    8cc8:	ret
    8ccc:	ldr	x0, [x19]
    8cd0:	sub	x0, x0, #0x1
    8cd4:	str	x0, [x19]
    8cd8:	cbz	x0, 8cf4 <PyFloat_FromString@plt+0x2264>
    8cdc:	bl	65e0 <PyErr_NoMemory@plt>
    8ce0:	mov	x19, #0x0                   	// #0
    8ce4:	mov	x0, x19
    8ce8:	ldp	x19, x20, [sp, #16]
    8cec:	ldp	x29, x30, [sp], #48
    8cf0:	ret
    8cf4:	mov	x0, x19
    8cf8:	bl	65d0 <_Py_Dealloc@plt>
    8cfc:	b	8cdc <PyFloat_FromString@plt+0x224c>
    8d00:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
    8d04:	ldr	x0, [x0, #4024]
    8d08:	ldr	x1, [x0]
    8d0c:	add	x1, x1, #0x1
    8d10:	str	x1, [x0]
    8d14:	ret
    8d18:	stp	x29, x30, [sp, #-32]!
    8d1c:	adrp	x2, 5d000 <PyInit__decimal@@Base+0x42a80>
    8d20:	add	x2, x2, #0x320
    8d24:	mov	x29, sp
    8d28:	str	x19, [sp, #16]
    8d2c:	mov	x19, x1
    8d30:	add	x1, x2, #0x1a0
    8d34:	ldr	x0, [x19, #8]
    8d38:	cmp	x0, x1
    8d3c:	b.eq	8d48 <PyFloat_FromString@plt+0x22b8>  // b.none
    8d40:	bl	69c0 <PyType_IsSubtype@plt>
    8d44:	cbz	w0, 8d9c <PyFloat_FromString@plt+0x230c>
    8d48:	add	x0, x19, #0x18
    8d4c:	bl	27f70 <PyInit__decimal@@Base+0xd9f0>
    8d50:	cbnz	w0, 8d78 <PyFloat_FromString@plt+0x22e8>
    8d54:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41a80>
    8d58:	ldr	x1, [x1, #3976]
    8d5c:	mov	x0, x1
    8d60:	ldr	x2, [x1]
    8d64:	add	x2, x2, #0x1
    8d68:	str	x2, [x1]
    8d6c:	ldr	x19, [sp, #16]
    8d70:	ldp	x29, x30, [sp], #32
    8d74:	ret
    8d78:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41a80>
    8d7c:	ldr	x19, [sp, #16]
    8d80:	ldr	x1, [x1, #4024]
    8d84:	mov	x0, x1
    8d88:	ldr	x2, [x1]
    8d8c:	add	x2, x2, #0x1
    8d90:	str	x2, [x1]
    8d94:	ldp	x29, x30, [sp], #32
    8d98:	ret
    8d9c:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
    8da0:	adrp	x1, 3b000 <PyInit__decimal@@Base+0x20a80>
    8da4:	add	x1, x1, #0xbc8
    8da8:	ldr	x0, [x0, #3936]
    8dac:	ldr	x0, [x0]
    8db0:	bl	6650 <PyErr_SetString@plt>
    8db4:	mov	x0, #0x0                   	// #0
    8db8:	b	8d6c <PyFloat_FromString@plt+0x22dc>
    8dbc:	nop
    8dc0:	stp	x29, x30, [sp, #-48]!
    8dc4:	mov	x29, sp
    8dc8:	ldr	x1, [x0, #8]
    8dcc:	ldr	x1, [x1, #168]
    8dd0:	str	x21, [sp, #32]
    8dd4:	tbz	w1, #29, 8e84 <PyFloat_FromString@plt+0x23f4>
    8dd8:	stp	x19, x20, [sp, #16]
    8ddc:	mov	x20, x0
    8de0:	bl	64e0 <PyDict_Size@plt>
    8de4:	cmp	x0, #0x9
    8de8:	b.ne	8e54 <PyFloat_FromString@plt+0x23c4>  // b.any
    8dec:	adrp	x0, 5d000 <PyInit__decimal@@Base+0x42a80>
    8df0:	add	x19, x0, #0x9a0
    8df4:	mov	w21, #0x0                   	// #0
    8df8:	ldr	x0, [x0, #2464]
    8dfc:	cbnz	x0, 8e24 <PyFloat_FromString@plt+0x2394>
    8e00:	b	8eb0 <PyFloat_FromString@plt+0x2420>
    8e04:	bl	68d0 <PyObject_IsTrue@plt>
    8e08:	tbnz	w0, #31, 8e3c <PyFloat_FromString@plt+0x23ac>
    8e0c:	cmp	w0, #0x1
    8e10:	b.ne	8e1c <PyFloat_FromString@plt+0x238c>  // b.any
    8e14:	ldr	w0, [x19, #16]
    8e18:	orr	w21, w21, w0
    8e1c:	ldr	x1, [x19, #32]!
    8e20:	cbz	x1, 8eb0 <PyFloat_FromString@plt+0x2420>
    8e24:	ldr	x1, [x19, #24]
    8e28:	mov	x0, x20
    8e2c:	bl	6a80 <PyDict_GetItemWithError@plt>
    8e30:	cbnz	x0, 8e04 <PyFloat_FromString@plt+0x2374>
    8e34:	bl	67e0 <PyErr_Occurred@plt>
    8e38:	cbz	x0, 8e54 <PyFloat_FromString@plt+0x23c4>
    8e3c:	mov	w21, #0x10000               	// #65536
    8e40:	mov	w0, w21
    8e44:	ldp	x19, x20, [sp, #16]
    8e48:	ldr	x21, [sp, #32]
    8e4c:	ldp	x29, x30, [sp], #48
    8e50:	ret
    8e54:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
    8e58:	mov	w21, #0x8000                	// #32768
    8e5c:	adrp	x1, 3b000 <PyInit__decimal@@Base+0x20a80>
    8e60:	add	x1, x1, #0xc08
    8e64:	ldr	x0, [x0, #3968]
    8e68:	ldr	x0, [x0]
    8e6c:	bl	6650 <PyErr_SetString@plt>
    8e70:	mov	w0, w21
    8e74:	ldp	x19, x20, [sp, #16]
    8e78:	ldr	x21, [sp, #32]
    8e7c:	ldp	x29, x30, [sp], #48
    8e80:	ret
    8e84:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
    8e88:	mov	w21, #0x8000                	// #32768
    8e8c:	adrp	x1, 3b000 <PyInit__decimal@@Base+0x20a80>
    8e90:	add	x1, x1, #0xbe8
    8e94:	ldr	x0, [x0, #3936]
    8e98:	ldr	x0, [x0]
    8e9c:	bl	6650 <PyErr_SetString@plt>
    8ea0:	mov	w0, w21
    8ea4:	ldr	x21, [sp, #32]
    8ea8:	ldp	x29, x30, [sp], #48
    8eac:	ret
    8eb0:	mov	w0, w21
    8eb4:	ldp	x19, x20, [sp, #16]
    8eb8:	ldr	x21, [sp, #32]
    8ebc:	ldp	x29, x30, [sp], #48
    8ec0:	ret
    8ec4:	nop
    8ec8:	stp	x29, x30, [sp, #-48]!
    8ecc:	mov	x29, sp
    8ed0:	stp	x19, x20, [sp, #16]
    8ed4:	mov	w19, w2
    8ed8:	sub	w2, w2, #0x2
    8edc:	str	x21, [sp, #32]
    8ee0:	adrp	x21, 5c000 <PyInit__decimal@@Base+0x41a80>
    8ee4:	mov	x20, x0
    8ee8:	cmp	w2, #0x1
    8eec:	ldr	x0, [x21, #3912]
    8ef0:	b.ls	8f10 <PyFloat_FromString@plt+0x2480>  // b.plast
    8ef4:	ldr	x1, [x0]
    8ef8:	add	x1, x1, #0x1
    8efc:	str	x1, [x0]
    8f00:	ldp	x19, x20, [sp, #16]
    8f04:	ldr	x21, [sp, #32]
    8f08:	ldp	x29, x30, [sp], #48
    8f0c:	ret
    8f10:	adrp	x2, 5f000 <PyInit__decimal@@Base+0x44a80>
    8f14:	ldr	x3, [x1, #8]
    8f18:	ldr	x2, [x2, #1840]
    8f1c:	cmp	x3, x2
    8f20:	b.eq	8f54 <PyFloat_FromString@plt+0x24c4>  // b.none
    8f24:	ldr	x2, [x3, #168]
    8f28:	tbz	w2, #29, 8ef4 <PyFloat_FromString@plt+0x2464>
    8f2c:	mov	x0, x1
    8f30:	bl	8dc0 <PyFloat_FromString@plt+0x2330>
    8f34:	mov	w1, w0
    8f38:	tst	w0, #0x18000
    8f3c:	b.eq	8f94 <PyFloat_FromString@plt+0x2504>  // b.none
    8f40:	mov	x0, #0x0                   	// #0
    8f44:	tbz	w1, #15, 8f00 <PyFloat_FromString@plt+0x2470>
    8f48:	bl	6730 <PyErr_Clear@plt>
    8f4c:	ldr	x0, [x21, #3912]
    8f50:	b	8ef4 <PyFloat_FromString@plt+0x2464>
    8f54:	ldr	x0, [x1, #16]
    8f58:	ldr	x2, [x20, #16]
    8f5c:	ldr	w0, [x0]
    8f60:	ldr	w1, [x2]
    8f64:	cmp	w1, w0
    8f68:	cset	w1, eq  // eq = none
    8f6c:	cmp	w19, #0x3
    8f70:	cset	w0, eq  // eq = none
    8f74:	cmp	w1, w0
    8f78:	b.eq	8f88 <PyFloat_FromString@plt+0x24f8>  // b.none
    8f7c:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
    8f80:	ldr	x0, [x0, #4024]
    8f84:	b	8ef4 <PyFloat_FromString@plt+0x2464>
    8f88:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
    8f8c:	ldr	x0, [x0, #3976]
    8f90:	b	8ef4 <PyFloat_FromString@plt+0x2464>
    8f94:	ldr	x0, [x20, #16]
    8f98:	ldr	w0, [x0]
    8f9c:	cmp	w0, w1
    8fa0:	b	8f68 <PyFloat_FromString@plt+0x24d8>
    8fa4:	nop
    8fa8:	stp	x29, x30, [sp, #-32]!
    8fac:	mov	x29, sp
    8fb0:	cbz	x2, 9064 <PyFloat_FromString@plt+0x25d4>
    8fb4:	stp	x19, x20, [sp, #16]
    8fb8:	mov	x20, x0
    8fbc:	mov	x0, x2
    8fc0:	adrp	x2, 5d000 <PyInit__decimal@@Base+0x42a80>
    8fc4:	add	x3, x2, #0x9a0
    8fc8:	ldr	x2, [x2, #2464]
    8fcc:	cbnz	x2, 8fdc <PyFloat_FromString@plt+0x254c>
    8fd0:	b	9024 <PyFloat_FromString@plt+0x2594>
    8fd4:	ldr	x4, [x3, #32]!
    8fd8:	cbz	x4, 9024 <PyFloat_FromString@plt+0x2594>
    8fdc:	ldr	x4, [x3, #24]
    8fe0:	cmp	x1, x4
    8fe4:	b.ne	8fd4 <PyFloat_FromString@plt+0x2544>  // b.any
    8fe8:	ldr	w19, [x3, #16]
    8fec:	tst	w19, #0x18000
    8ff0:	b.ne	903c <PyFloat_FromString@plt+0x25ac>  // b.any
    8ff4:	bl	68d0 <PyObject_IsTrue@plt>
    8ff8:	tbnz	w0, #31, 903c <PyFloat_FromString@plt+0x25ac>
    8ffc:	ldr	x1, [x20, #16]
    9000:	cmp	w0, #0x1
    9004:	ldr	w0, [x1]
    9008:	b.eq	904c <PyFloat_FromString@plt+0x25bc>  // b.none
    900c:	bic	w19, w0, w19
    9010:	str	w19, [x1]
    9014:	ldp	x19, x20, [sp, #16]
    9018:	mov	w0, #0x0                   	// #0
    901c:	ldp	x29, x30, [sp], #32
    9020:	ret
    9024:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
    9028:	adrp	x1, 3b000 <PyInit__decimal@@Base+0x20a80>
    902c:	add	x1, x1, #0xc40
    9030:	ldr	x0, [x0, #3968]
    9034:	ldr	x0, [x0]
    9038:	bl	6650 <PyErr_SetString@plt>
    903c:	mov	w0, #0xffffffff            	// #-1
    9040:	ldp	x19, x20, [sp, #16]
    9044:	ldp	x29, x30, [sp], #32
    9048:	ret
    904c:	orr	w19, w0, w19
    9050:	str	w19, [x1]
    9054:	mov	w0, #0x0                   	// #0
    9058:	ldp	x19, x20, [sp, #16]
    905c:	ldp	x29, x30, [sp], #32
    9060:	ret
    9064:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
    9068:	adrp	x1, 3b000 <PyInit__decimal@@Base+0x20a80>
    906c:	add	x1, x1, #0xc20
    9070:	ldr	x0, [x0, #3928]
    9074:	ldr	x0, [x0]
    9078:	bl	6650 <PyErr_SetString@plt>
    907c:	mov	w0, #0xffffffff            	// #-1
    9080:	b	901c <PyFloat_FromString@plt+0x258c>
    9084:	nop
    9088:	stp	x29, x30, [sp, #-32]!
    908c:	mov	x29, sp
    9090:	stp	x19, x20, [sp, #16]
    9094:	mov	x20, x0
    9098:	mov	x0, x1
    909c:	bl	66f0 <PyLong_AsSsize_t@plt>
    90a0:	mov	x19, x0
    90a4:	cmn	x0, #0x1
    90a8:	b.eq	90c8 <PyFloat_FromString@plt+0x2638>  // b.none
    90ac:	cmp	x0, #0x1
    90b0:	b.hi	90d0 <PyFloat_FromString@plt+0x2640>  // b.pmore
    90b4:	mov	w0, #0x0                   	// #0
    90b8:	str	w19, [x20, #80]
    90bc:	ldp	x19, x20, [sp, #16]
    90c0:	ldp	x29, x30, [sp], #32
    90c4:	ret
    90c8:	bl	67e0 <PyErr_Occurred@plt>
    90cc:	cbnz	x0, 90f8 <PyFloat_FromString@plt+0x2668>
    90d0:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
    90d4:	adrp	x1, 3b000 <PyInit__decimal@@Base+0x20a80>
    90d8:	add	x1, x1, #0xcd8
    90dc:	ldr	x0, [x0, #3928]
    90e0:	ldr	x0, [x0]
    90e4:	bl	6650 <PyErr_SetString@plt>
    90e8:	mov	w0, #0xffffffff            	// #-1
    90ec:	ldp	x19, x20, [sp, #16]
    90f0:	ldp	x29, x30, [sp], #32
    90f4:	ret
    90f8:	mov	w0, w19
    90fc:	b	90bc <PyFloat_FromString@plt+0x262c>
    9100:	stp	x29, x30, [sp, #-32]!
    9104:	mov	x29, sp
    9108:	stp	x19, x20, [sp, #16]
    910c:	mov	x20, x0
    9110:	mov	x0, x1
    9114:	bl	66f0 <PyLong_AsSsize_t@plt>
    9118:	mov	x19, x0
    911c:	cmn	x0, #0x1
    9120:	b.eq	9144 <PyFloat_FromString@plt+0x26b4>  // b.none
    9124:	mov	x1, x19
    9128:	add	x0, x20, #0x10
    912c:	bl	1d640 <PyInit__decimal@@Base+0x30c0>
    9130:	cbz	w0, 9154 <PyFloat_FromString@plt+0x26c4>
    9134:	mov	w0, #0x0                   	// #0
    9138:	ldp	x19, x20, [sp, #16]
    913c:	ldp	x29, x30, [sp], #32
    9140:	ret
    9144:	bl	67e0 <PyErr_Occurred@plt>
    9148:	cbz	x0, 9124 <PyFloat_FromString@plt+0x2694>
    914c:	mov	w0, w19
    9150:	b	9138 <PyFloat_FromString@plt+0x26a8>
    9154:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
    9158:	adrp	x1, 3b000 <PyInit__decimal@@Base+0x20a80>
    915c:	add	x1, x1, #0xd00
    9160:	ldr	x0, [x0, #3928]
    9164:	ldr	x0, [x0]
    9168:	bl	6650 <PyErr_SetString@plt>
    916c:	mov	w0, #0xffffffff            	// #-1
    9170:	b	9138 <PyFloat_FromString@plt+0x26a8>
    9174:	nop
    9178:	stp	x29, x30, [sp, #-48]!
    917c:	mov	x29, sp
    9180:	stp	x19, x20, [sp, #16]
    9184:	mov	x20, x0
    9188:	ldr	x0, [x0, #8]
    918c:	stp	x21, x22, [sp, #32]
    9190:	ldr	x0, [x0, #168]
    9194:	tbz	w0, #28, 91f0 <PyFloat_FromString@plt+0x2760>
    9198:	adrp	x22, 5f000 <PyInit__decimal@@Base+0x44a80>
    919c:	add	x2, x22, #0x6c0
    91a0:	add	x2, x2, #0x8
    91a4:	mov	x1, #0x0                   	// #0
    91a8:	ldr	x0, [x2, x1, lsl #3]
    91ac:	mov	w21, w1
    91b0:	add	x1, x1, #0x1
    91b4:	cmp	x0, x20
    91b8:	b.eq	920c <PyFloat_FromString@plt+0x277c>  // b.none
    91bc:	cmp	x1, #0x8
    91c0:	b.ne	91a8 <PyFloat_FromString@plt+0x2718>  // b.any
    91c4:	add	x22, x22, #0x6c0
    91c8:	mov	x19, #0x0                   	// #0
    91cc:	add	x22, x22, #0x8
    91d0:	ldr	x1, [x22, x19, lsl #3]
    91d4:	mov	w21, w19
    91d8:	mov	x0, x20
    91dc:	add	x19, x19, #0x1
    91e0:	bl	6900 <PyUnicode_Compare@plt>
    91e4:	cbz	w0, 920c <PyFloat_FromString@plt+0x277c>
    91e8:	cmp	x19, #0x8
    91ec:	b.ne	91d0 <PyFloat_FromString@plt+0x2740>  // b.any
    91f0:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
    91f4:	adrp	x1, 3b000 <PyInit__decimal@@Base+0x20a80>
    91f8:	mov	w21, #0xffffffff            	// #-1
    91fc:	add	x1, x1, #0xd28
    9200:	ldr	x0, [x0, #3936]
    9204:	ldr	x0, [x0]
    9208:	bl	6650 <PyErr_SetString@plt>
    920c:	mov	w0, w21
    9210:	ldp	x19, x20, [sp, #16]
    9214:	ldp	x21, x22, [sp, #32]
    9218:	ldp	x29, x30, [sp], #48
    921c:	ret
    9220:	stp	x29, x30, [sp, #-32]!
    9224:	mov	x29, sp
    9228:	str	x19, [sp, #16]
    922c:	mov	x19, x0
    9230:	mov	x0, x1
    9234:	bl	9178 <PyFloat_FromString@plt+0x26e8>
    9238:	mov	w1, w0
    923c:	cmn	w0, #0x1
    9240:	b.eq	9254 <PyFloat_FromString@plt+0x27c4>  // b.none
    9244:	add	x0, x19, #0x10
    9248:	bl	1d6d0 <PyInit__decimal@@Base+0x3150>
    924c:	mov	w1, #0x0                   	// #0
    9250:	cbz	w0, 9264 <PyFloat_FromString@plt+0x27d4>
    9254:	mov	w0, w1
    9258:	ldr	x19, [sp, #16]
    925c:	ldp	x29, x30, [sp], #32
    9260:	ret
    9264:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
    9268:	adrp	x1, 3b000 <PyInit__decimal@@Base+0x20a80>
    926c:	add	x1, x1, #0xdc0
    9270:	ldr	x0, [x0, #3920]
    9274:	ldr	x0, [x0]
    9278:	bl	6650 <PyErr_SetString@plt>
    927c:	mov	w1, #0xffffffff            	// #-1
    9280:	b	9254 <PyFloat_FromString@plt+0x27c4>
    9284:	nop
    9288:	stp	x29, x30, [sp, #-32]!
    928c:	mov	x29, sp
    9290:	stp	x19, x20, [sp, #16]
    9294:	mov	x20, x0
    9298:	mov	x0, x1
    929c:	bl	66f0 <PyLong_AsSsize_t@plt>
    92a0:	mov	x19, x0
    92a4:	cmn	x0, #0x1
    92a8:	b.eq	92cc <PyFloat_FromString@plt+0x283c>  // b.none
    92ac:	mov	x1, x19
    92b0:	add	x0, x20, #0x10
    92b4:	bl	1d6a0 <PyInit__decimal@@Base+0x3120>
    92b8:	cbz	w0, 92dc <PyFloat_FromString@plt+0x284c>
    92bc:	mov	w0, #0x0                   	// #0
    92c0:	ldp	x19, x20, [sp, #16]
    92c4:	ldp	x29, x30, [sp], #32
    92c8:	ret
    92cc:	bl	67e0 <PyErr_Occurred@plt>
    92d0:	cbz	x0, 92ac <PyFloat_FromString@plt+0x281c>
    92d4:	mov	w0, w19
    92d8:	b	92c0 <PyFloat_FromString@plt+0x2830>
    92dc:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
    92e0:	adrp	x1, 3b000 <PyInit__decimal@@Base+0x20a80>
    92e4:	add	x1, x1, #0xde8
    92e8:	ldr	x0, [x0, #3928]
    92ec:	ldr	x0, [x0]
    92f0:	bl	6650 <PyErr_SetString@plt>
    92f4:	mov	w0, #0xffffffff            	// #-1
    92f8:	b	92c0 <PyFloat_FromString@plt+0x2830>
    92fc:	nop
    9300:	stp	x29, x30, [sp, #-32]!
    9304:	mov	x29, sp
    9308:	stp	x19, x20, [sp, #16]
    930c:	mov	x20, x0
    9310:	mov	x0, x1
    9314:	bl	66f0 <PyLong_AsSsize_t@plt>
    9318:	mov	x19, x0
    931c:	cmn	x0, #0x1
    9320:	b.eq	9344 <PyFloat_FromString@plt+0x28b4>  // b.none
    9324:	mov	x1, x19
    9328:	add	x0, x20, #0x10
    932c:	bl	1d670 <PyInit__decimal@@Base+0x30f0>
    9330:	cbz	w0, 9354 <PyFloat_FromString@plt+0x28c4>
    9334:	mov	w0, #0x0                   	// #0
    9338:	ldp	x19, x20, [sp, #16]
    933c:	ldp	x29, x30, [sp], #32
    9340:	ret
    9344:	bl	67e0 <PyErr_Occurred@plt>
    9348:	cbz	x0, 9324 <PyFloat_FromString@plt+0x2894>
    934c:	mov	w0, w19
    9350:	b	9338 <PyFloat_FromString@plt+0x28a8>
    9354:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
    9358:	adrp	x1, 3b000 <PyInit__decimal@@Base+0x20a80>
    935c:	add	x1, x1, #0xe10
    9360:	ldr	x0, [x0, #3928]
    9364:	ldr	x0, [x0]
    9368:	bl	6650 <PyErr_SetString@plt>
    936c:	mov	w0, #0xffffffff            	// #-1
    9370:	b	9338 <PyFloat_FromString@plt+0x28a8>
    9374:	nop
    9378:	stp	x29, x30, [sp, #-32]!
    937c:	mov	x29, sp
    9380:	stp	x19, x20, [sp, #16]
    9384:	mov	x20, x0
    9388:	mov	x0, x1
    938c:	bl	66f0 <PyLong_AsSsize_t@plt>
    9390:	mov	x19, x0
    9394:	cmn	x0, #0x1
    9398:	b.eq	93d4 <PyFloat_FromString@plt+0x2944>  // b.none
    939c:	mov	x0, #0x80000000            	// #2147483648
    93a0:	add	x0, x19, x0
    93a4:	mov	x1, #0xffffffff            	// #4294967295
    93a8:	cmp	x0, x1
    93ac:	mov	w1, #0x7fffffff            	// #2147483647
    93b0:	csel	w1, w19, w1, ls  // ls = plast
    93b4:	add	x0, x20, #0x10
    93b8:	bl	1d740 <PyInit__decimal@@Base+0x31c0>
    93bc:	mov	w1, w0
    93c0:	mov	w0, #0x0                   	// #0
    93c4:	cbz	w1, 93ec <PyFloat_FromString@plt+0x295c>
    93c8:	ldp	x19, x20, [sp, #16]
    93cc:	ldp	x29, x30, [sp], #32
    93d0:	ret
    93d4:	bl	67e0 <PyErr_Occurred@plt>
    93d8:	cbnz	x0, 93e4 <PyFloat_FromString@plt+0x2954>
    93dc:	mov	w1, w19
    93e0:	b	93b4 <PyFloat_FromString@plt+0x2924>
    93e4:	mov	w0, w19
    93e8:	b	93c8 <PyFloat_FromString@plt+0x2938>
    93ec:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
    93f0:	adrp	x1, 3b000 <PyInit__decimal@@Base+0x20a80>
    93f4:	add	x1, x1, #0xe38
    93f8:	ldr	x0, [x0, #3928]
    93fc:	ldr	x0, [x0]
    9400:	bl	6650 <PyErr_SetString@plt>
    9404:	mov	w0, #0xffffffff            	// #-1
    9408:	b	93c8 <PyFloat_FromString@plt+0x2938>
    940c:	nop
    9410:	stp	x29, x30, [sp, #-32]!
    9414:	adrp	x2, 5f000 <PyInit__decimal@@Base+0x44a80>
    9418:	mov	x29, sp
    941c:	ldr	x2, [x2, #1840]
    9420:	str	x19, [sp, #16]
    9424:	mov	x19, x0
    9428:	ldr	x0, [x1, #8]
    942c:	cmp	x0, x2
    9430:	b.eq	9468 <PyFloat_FromString@plt+0x29d8>  // b.none
    9434:	mov	x0, x1
    9438:	bl	8dc0 <PyFloat_FromString@plt+0x2330>
    943c:	mov	w1, w0
    9440:	tst	w0, #0x18000
    9444:	b.ne	9474 <PyFloat_FromString@plt+0x29e4>  // b.any
    9448:	add	x0, x19, #0x10
    944c:	bl	1d6f0 <PyInit__decimal@@Base+0x3170>
    9450:	mov	w1, w0
    9454:	mov	w0, #0x0                   	// #0
    9458:	cbz	w1, 947c <PyFloat_FromString@plt+0x29ec>
    945c:	ldr	x19, [sp, #16]
    9460:	ldp	x29, x30, [sp], #32
    9464:	ret
    9468:	ldr	x0, [x1, #16]
    946c:	ldr	w1, [x0]
    9470:	b	9448 <PyFloat_FromString@plt+0x29b8>
    9474:	mov	w0, #0xffffffff            	// #-1
    9478:	b	945c <PyFloat_FromString@plt+0x29cc>
    947c:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
    9480:	adrp	x1, 3b000 <PyInit__decimal@@Base+0x20a80>
    9484:	add	x1, x1, #0xe60
    9488:	ldr	x0, [x0, #3920]
    948c:	ldr	x0, [x0]
    9490:	bl	6650 <PyErr_SetString@plt>
    9494:	mov	w0, #0xffffffff            	// #-1
    9498:	b	945c <PyFloat_FromString@plt+0x29cc>
    949c:	nop
    94a0:	stp	x29, x30, [sp, #-32]!
    94a4:	adrp	x2, 5f000 <PyInit__decimal@@Base+0x44a80>
    94a8:	mov	x29, sp
    94ac:	ldr	x2, [x2, #1840]
    94b0:	str	x19, [sp, #16]
    94b4:	mov	x19, x0
    94b8:	ldr	x0, [x1, #8]
    94bc:	cmp	x0, x2
    94c0:	b.eq	94f8 <PyFloat_FromString@plt+0x2a68>  // b.none
    94c4:	mov	x0, x1
    94c8:	bl	8dc0 <PyFloat_FromString@plt+0x2330>
    94cc:	mov	w1, w0
    94d0:	tst	w0, #0x18000
    94d4:	b.ne	9504 <PyFloat_FromString@plt+0x2a74>  // b.any
    94d8:	add	x0, x19, #0x10
    94dc:	bl	1d718 <PyInit__decimal@@Base+0x3198>
    94e0:	mov	w1, w0
    94e4:	mov	w0, #0x0                   	// #0
    94e8:	cbz	w1, 950c <PyFloat_FromString@plt+0x2a7c>
    94ec:	ldr	x19, [sp, #16]
    94f0:	ldp	x29, x30, [sp], #32
    94f4:	ret
    94f8:	ldr	x0, [x1, #16]
    94fc:	ldr	w1, [x0]
    9500:	b	94d8 <PyFloat_FromString@plt+0x2a48>
    9504:	mov	w0, #0xffffffff            	// #-1
    9508:	b	94ec <PyFloat_FromString@plt+0x2a5c>
    950c:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
    9510:	adrp	x1, 3b000 <PyInit__decimal@@Base+0x20a80>
    9514:	add	x1, x1, #0xe88
    9518:	ldr	x0, [x0, #3920]
    951c:	ldr	x0, [x0]
    9520:	bl	6650 <PyErr_SetString@plt>
    9524:	mov	w0, #0xffffffff            	// #-1
    9528:	b	94ec <PyFloat_FromString@plt+0x2a5c>
    952c:	nop
    9530:	stp	x29, x30, [sp, #-16]!
    9534:	add	x0, x0, #0x18
    9538:	mov	x29, sp
    953c:	bl	27f98 <PyInit__decimal@@Base+0xda18>
    9540:	cbz	w0, 954c <PyFloat_FromString@plt+0x2abc>
    9544:	ldp	x29, x30, [sp], #16
    9548:	b	8d00 <PyFloat_FromString@plt+0x2270>
    954c:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
    9550:	ldr	x0, [x0, #3976]
    9554:	ldr	x1, [x0]
    9558:	add	x1, x1, #0x1
    955c:	str	x1, [x0]
    9560:	ldp	x29, x30, [sp], #16
    9564:	ret
    9568:	stp	x29, x30, [sp, #-32]!
    956c:	mov	x29, sp
    9570:	stp	x19, x20, [sp, #16]
    9574:	mov	x20, x0
    9578:	mov	x19, x1
    957c:	ldr	x0, [x1, #8]
    9580:	ldr	x0, [x0, #168]
    9584:	tbz	w0, #28, 95cc <PyFloat_FromString@plt+0x2b3c>
    9588:	adrp	x1, 3b000 <PyInit__decimal@@Base+0x20a80>
    958c:	mov	x0, x19
    9590:	add	x1, x1, #0xeb8
    9594:	bl	6890 <PyUnicode_CompareWithASCIIString@plt>
    9598:	cbnz	w0, 95b8 <PyFloat_FromString@plt+0x2b28>
    959c:	ldr	x0, [x20, #64]
    95a0:	ldr	x1, [x0]
    95a4:	add	x1, x1, #0x1
    95a8:	str	x1, [x0]
    95ac:	ldp	x19, x20, [sp, #16]
    95b0:	ldp	x29, x30, [sp], #32
    95b4:	ret
    95b8:	adrp	x1, 3b000 <PyInit__decimal@@Base+0x20a80>
    95bc:	mov	x0, x19
    95c0:	add	x1, x1, #0xec0
    95c4:	bl	6890 <PyUnicode_CompareWithASCIIString@plt>
    95c8:	cbz	w0, 95e0 <PyFloat_FromString@plt+0x2b50>
    95cc:	mov	x1, x19
    95d0:	mov	x0, x20
    95d4:	ldp	x19, x20, [sp, #16]
    95d8:	ldp	x29, x30, [sp], #32
    95dc:	b	67b0 <PyObject_GenericGetAttr@plt>
    95e0:	ldr	x0, [x20, #72]
    95e4:	ldr	x1, [x0]
    95e8:	add	x1, x1, #0x1
    95ec:	str	x1, [x0]
    95f0:	b	95ac <PyFloat_FromString@plt+0x2b1c>
    95f4:	nop
    95f8:	stp	x29, x30, [sp, #-16]!
    95fc:	add	x0, x0, #0x18
    9600:	mov	x29, sp
    9604:	bl	28008 <PyInit__decimal@@Base+0xda88>
    9608:	cbz	w0, 9614 <PyFloat_FromString@plt+0x2b84>
    960c:	ldp	x29, x30, [sp], #16
    9610:	b	8d00 <PyFloat_FromString@plt+0x2270>
    9614:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
    9618:	ldr	x0, [x0, #3976]
    961c:	ldr	x1, [x0]
    9620:	add	x1, x1, #0x1
    9624:	str	x1, [x0]
    9628:	ldp	x29, x30, [sp], #16
    962c:	ret
    9630:	stp	x29, x30, [sp, #-16]!
    9634:	add	x0, x0, #0x18
    9638:	mov	x29, sp
    963c:	bl	27fe8 <PyInit__decimal@@Base+0xda68>
    9640:	cbz	w0, 964c <PyFloat_FromString@plt+0x2bbc>
    9644:	ldp	x29, x30, [sp], #16
    9648:	b	8d00 <PyFloat_FromString@plt+0x2270>
    964c:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
    9650:	ldr	x0, [x0, #3976]
    9654:	ldr	x1, [x0]
    9658:	add	x1, x1, #0x1
    965c:	str	x1, [x0]
    9660:	ldp	x29, x30, [sp], #16
    9664:	ret
    9668:	stp	x29, x30, [sp, #-16]!
    966c:	add	x0, x0, #0x18
    9670:	mov	x29, sp
    9674:	bl	27fd8 <PyInit__decimal@@Base+0xda58>
    9678:	cbz	w0, 9684 <PyFloat_FromString@plt+0x2bf4>
    967c:	ldp	x29, x30, [sp], #16
    9680:	b	8d00 <PyFloat_FromString@plt+0x2270>
    9684:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
    9688:	ldr	x0, [x0, #3976]
    968c:	ldr	x1, [x0]
    9690:	add	x1, x1, #0x1
    9694:	str	x1, [x0]
    9698:	ldp	x29, x30, [sp], #16
    969c:	ret
    96a0:	stp	x29, x30, [sp, #-16]!
    96a4:	add	x0, x0, #0x18
    96a8:	mov	x29, sp
    96ac:	bl	27fc8 <PyInit__decimal@@Base+0xda48>
    96b0:	cbz	w0, 96bc <PyFloat_FromString@plt+0x2c2c>
    96b4:	ldp	x29, x30, [sp], #16
    96b8:	b	8d00 <PyFloat_FromString@plt+0x2270>
    96bc:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
    96c0:	ldr	x0, [x0, #3976]
    96c4:	ldr	x1, [x0]
    96c8:	add	x1, x1, #0x1
    96cc:	str	x1, [x0]
    96d0:	ldp	x29, x30, [sp], #16
    96d4:	ret
    96d8:	stp	x29, x30, [sp, #-16]!
    96dc:	add	x0, x0, #0x18
    96e0:	mov	x29, sp
    96e4:	bl	27f88 <PyInit__decimal@@Base+0xda08>
    96e8:	cbz	w0, 96f4 <PyFloat_FromString@plt+0x2c64>
    96ec:	ldp	x29, x30, [sp], #16
    96f0:	b	8d00 <PyFloat_FromString@plt+0x2270>
    96f4:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
    96f8:	ldr	x0, [x0, #3976]
    96fc:	ldr	x1, [x0]
    9700:	add	x1, x1, #0x1
    9704:	str	x1, [x0]
    9708:	ldp	x29, x30, [sp], #16
    970c:	ret
    9710:	stp	x29, x30, [sp, #-16]!
    9714:	add	x0, x0, #0x18
    9718:	mov	x29, sp
    971c:	bl	27f78 <PyInit__decimal@@Base+0xd9f8>
    9720:	cbz	w0, 972c <PyFloat_FromString@plt+0x2c9c>
    9724:	ldp	x29, x30, [sp], #16
    9728:	b	8d00 <PyFloat_FromString@plt+0x2270>
    972c:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
    9730:	ldr	x0, [x0, #3976]
    9734:	ldr	x1, [x0]
    9738:	add	x1, x1, #0x1
    973c:	str	x1, [x0]
    9740:	ldp	x29, x30, [sp], #16
    9744:	ret
    9748:	stp	x29, x30, [sp, #-16]!
    974c:	add	x0, x0, #0x18
    9750:	mov	x29, sp
    9754:	bl	27f70 <PyInit__decimal@@Base+0xd9f0>
    9758:	cbz	w0, 9764 <PyFloat_FromString@plt+0x2cd4>
    975c:	ldp	x29, x30, [sp], #16
    9760:	b	8d00 <PyFloat_FromString@plt+0x2270>
    9764:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
    9768:	ldr	x0, [x0, #3976]
    976c:	ldr	x1, [x0]
    9770:	add	x1, x1, #0x1
    9774:	str	x1, [x0]
    9778:	ldp	x29, x30, [sp], #16
    977c:	ret
    9780:	stp	x29, x30, [sp, #-48]!
    9784:	mov	x29, sp
    9788:	cbz	x2, 9820 <PyFloat_FromString@plt+0x2d90>
    978c:	str	x21, [sp, #32]
    9790:	mov	x21, x0
    9794:	ldr	x0, [x1, #8]
    9798:	stp	x19, x20, [sp, #16]
    979c:	mov	x19, x1
    97a0:	mov	x20, x2
    97a4:	ldr	x0, [x0, #168]
    97a8:	tbz	w0, #28, 97d4 <PyFloat_FromString@plt+0x2d44>
    97ac:	adrp	x1, 3b000 <PyInit__decimal@@Base+0x20a80>
    97b0:	mov	x0, x19
    97b4:	add	x1, x1, #0xeb8
    97b8:	bl	6890 <PyUnicode_CompareWithASCIIString@plt>
    97bc:	cbz	w0, 9808 <PyFloat_FromString@plt+0x2d78>
    97c0:	adrp	x1, 3b000 <PyInit__decimal@@Base+0x20a80>
    97c4:	mov	x0, x19
    97c8:	add	x1, x1, #0xec0
    97cc:	bl	6890 <PyUnicode_CompareWithASCIIString@plt>
    97d0:	cbz	w0, 97f0 <PyFloat_FromString@plt+0x2d60>
    97d4:	mov	x2, x20
    97d8:	mov	x1, x19
    97dc:	mov	x0, x21
    97e0:	ldp	x19, x20, [sp, #16]
    97e4:	ldr	x21, [sp, #32]
    97e8:	ldp	x29, x30, [sp], #48
    97ec:	b	69b0 <PyObject_GenericSetAttr@plt>
    97f0:	mov	x1, x20
    97f4:	mov	x0, x21
    97f8:	ldp	x19, x20, [sp, #16]
    97fc:	ldr	x21, [sp, #32]
    9800:	ldp	x29, x30, [sp], #48
    9804:	b	94a0 <PyFloat_FromString@plt+0x2a10>
    9808:	mov	x1, x20
    980c:	mov	x0, x21
    9810:	ldp	x19, x20, [sp, #16]
    9814:	ldr	x21, [sp, #32]
    9818:	ldp	x29, x30, [sp], #48
    981c:	b	9410 <PyFloat_FromString@plt+0x2980>
    9820:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
    9824:	adrp	x1, 3b000 <PyInit__decimal@@Base+0x20a80>
    9828:	add	x1, x1, #0xec8
    982c:	ldr	x0, [x0, #4048]
    9830:	ldr	x0, [x0]
    9834:	bl	6650 <PyErr_SetString@plt>
    9838:	mov	w0, #0xffffffff            	// #-1
    983c:	ldp	x29, x30, [sp], #48
    9840:	ret
    9844:	nop
    9848:	stp	x29, x30, [sp, #-32]!
    984c:	mov	x29, sp
    9850:	stp	x19, x20, [sp, #16]
    9854:	mov	x20, x1
    9858:	cbz	x0, 9898 <PyFloat_FromString@plt+0x2e08>
    985c:	ldr	x1, [x0]
    9860:	mov	x19, x0
    9864:	cbnz	x1, 9874 <PyFloat_FromString@plt+0x2de4>
    9868:	b	9898 <PyFloat_FromString@plt+0x2e08>
    986c:	ldr	x1, [x19, #32]!
    9870:	cbz	x1, 9898 <PyFloat_FromString@plt+0x2e08>
    9874:	mov	x0, x20
    9878:	bl	6860 <strcmp@plt>
    987c:	cbnz	w0, 986c <PyFloat_FromString@plt+0x2ddc>
    9880:	ldr	w0, [x19, #16]
    9884:	tbz	w0, #2, 9898 <PyFloat_FromString@plt+0x2e08>
    9888:	ldr	x0, [x19, #8]
    988c:	ldp	x19, x20, [sp, #16]
    9890:	ldp	x29, x30, [sp], #32
    9894:	ret
    9898:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
    989c:	mov	x2, x20
    98a0:	adrp	x1, 3b000 <PyInit__decimal@@Base+0x20a80>
    98a4:	add	x1, x1, #0xef0
    98a8:	ldr	x0, [x0, #3920]
    98ac:	ldr	x0, [x0]
    98b0:	bl	6a10 <PyErr_Format@plt>
    98b4:	mov	x0, #0x0                   	// #0
    98b8:	ldp	x19, x20, [sp, #16]
    98bc:	ldp	x29, x30, [sp], #32
    98c0:	ret
    98c4:	nop
    98c8:	stp	x29, x30, [sp, #-48]!
    98cc:	mov	x1, x0
    98d0:	mov	x2, #0x2                   	// #2
    98d4:	mov	x29, sp
    98d8:	stp	x19, x20, [sp, #16]
    98dc:	add	x19, sp, #0x28
    98e0:	mov	x0, x19
    98e4:	bl	64f0 <mbstowcs@plt>
    98e8:	cmp	x0, #0x1
    98ec:	b.ne	992c <PyFloat_FromString@plt+0x2e9c>  // b.any
    98f0:	mov	x1, x0
    98f4:	mov	x0, x19
    98f8:	bl	6570 <PyUnicode_FromWideChar@plt>
    98fc:	mov	x19, x0
    9900:	cbz	x0, 9970 <PyFloat_FromString@plt+0x2ee0>
    9904:	bl	65c0 <PyUnicode_AsUTF8String@plt>
    9908:	mov	x20, x0
    990c:	ldr	x1, [x19]
    9910:	sub	x0, x1, #0x1
    9914:	str	x0, [x19]
    9918:	cbz	x0, 9958 <PyFloat_FromString@plt+0x2ec8>
    991c:	mov	x0, x20
    9920:	ldp	x19, x20, [sp, #16]
    9924:	ldp	x29, x30, [sp], #48
    9928:	ret
    992c:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
    9930:	mov	x20, #0x0                   	// #0
    9934:	adrp	x1, 3b000 <PyInit__decimal@@Base+0x20a80>
    9938:	add	x1, x1, #0xf20
    993c:	ldr	x0, [x0, #3928]
    9940:	ldr	x0, [x0]
    9944:	bl	6650 <PyErr_SetString@plt>
    9948:	mov	x0, x20
    994c:	ldp	x19, x20, [sp, #16]
    9950:	ldp	x29, x30, [sp], #48
    9954:	ret
    9958:	mov	x0, x19
    995c:	bl	65d0 <_Py_Dealloc@plt>
    9960:	mov	x0, x20
    9964:	ldp	x19, x20, [sp, #16]
    9968:	ldp	x29, x30, [sp], #48
    996c:	ret
    9970:	mov	x20, #0x0                   	// #0
    9974:	mov	x0, x20
    9978:	ldp	x19, x20, [sp, #16]
    997c:	ldp	x29, x30, [sp], #48
    9980:	ret
    9984:	nop
    9988:	stp	x29, x30, [sp, #-48]!
    998c:	adrp	x3, 5d000 <PyInit__decimal@@Base+0x42a80>
    9990:	add	x3, x3, #0x320
    9994:	mov	x29, sp
    9998:	stp	x19, x20, [sp, #16]
    999c:	mov	x20, x1
    99a0:	mov	x2, x20
    99a4:	mov	x1, x0
    99a8:	add	x0, x3, #0x1a0
    99ac:	str	wzr, [sp, #44]
    99b0:	bl	8430 <PyFloat_FromString@plt+0x19a0>
    99b4:	cbz	x0, 99fc <PyFloat_FromString@plt+0x2f6c>
    99b8:	add	x1, x20, #0x10
    99bc:	mov	x19, x0
    99c0:	add	x2, sp, #0x2c
    99c4:	add	x0, x0, #0x18
    99c8:	bl	2b110 <PyInit__decimal@@Base+0x10b90>
    99cc:	ldr	w1, [sp, #44]
    99d0:	mov	x0, x20
    99d4:	bl	7f90 <PyFloat_FromString@plt+0x1500>
    99d8:	cbnz	w0, 99ec <PyFloat_FromString@plt+0x2f5c>
    99dc:	mov	x0, x19
    99e0:	ldp	x19, x20, [sp, #16]
    99e4:	ldp	x29, x30, [sp], #48
    99e8:	ret
    99ec:	ldr	x0, [x19]
    99f0:	sub	x0, x0, #0x1
    99f4:	str	x0, [x19]
    99f8:	cbz	x0, 9a10 <PyFloat_FromString@plt+0x2f80>
    99fc:	mov	x19, #0x0                   	// #0
    9a00:	mov	x0, x19
    9a04:	ldp	x19, x20, [sp, #16]
    9a08:	ldp	x29, x30, [sp], #48
    9a0c:	ret
    9a10:	mov	x0, x19
    9a14:	mov	x19, #0x0                   	// #0
    9a18:	bl	65d0 <_Py_Dealloc@plt>
    9a1c:	b	99dc <PyFloat_FromString@plt+0x2f4c>
    9a20:	mov	x2, x0
    9a24:	mov	x0, x1
    9a28:	mov	x1, x2
    9a2c:	b	9988 <PyFloat_FromString@plt+0x2ef8>
    9a30:	stp	x29, x30, [sp, #-64]!
    9a34:	adrp	x2, 5d000 <PyInit__decimal@@Base+0x42a80>
    9a38:	add	x2, x2, #0x320
    9a3c:	mov	x29, sp
    9a40:	stp	x19, x20, [sp, #16]
    9a44:	mov	x20, x1
    9a48:	str	x21, [sp, #32]
    9a4c:	mov	x21, x0
    9a50:	add	x0, x2, #0x1a0
    9a54:	str	wzr, [sp, #60]
    9a58:	bl	6c60 <PyFloat_FromString@plt+0x1d0>
    9a5c:	cbz	x0, 9aac <PyFloat_FromString@plt+0x301c>
    9a60:	mov	x1, x21
    9a64:	mov	x19, x0
    9a68:	add	x3, sp, #0x3c
    9a6c:	add	x0, x0, #0x18
    9a70:	add	x2, x20, #0x10
    9a74:	bl	23a18 <PyInit__decimal@@Base+0x9498>
    9a78:	ldr	w1, [sp, #60]
    9a7c:	mov	x0, x20
    9a80:	bl	7f90 <PyFloat_FromString@plt+0x1500>
    9a84:	cbnz	w0, 9a9c <PyFloat_FromString@plt+0x300c>
    9a88:	mov	x0, x19
    9a8c:	ldp	x19, x20, [sp, #16]
    9a90:	ldr	x21, [sp, #32]
    9a94:	ldp	x29, x30, [sp], #64
    9a98:	ret
    9a9c:	ldr	x0, [x19]
    9aa0:	sub	x0, x0, #0x1
    9aa4:	str	x0, [x19]
    9aa8:	cbz	x0, 9ac4 <PyFloat_FromString@plt+0x3034>
    9aac:	mov	x19, #0x0                   	// #0
    9ab0:	mov	x0, x19
    9ab4:	ldp	x19, x20, [sp, #16]
    9ab8:	ldr	x21, [sp, #32]
    9abc:	ldp	x29, x30, [sp], #64
    9ac0:	ret
    9ac4:	mov	x0, x19
    9ac8:	mov	x19, #0x0                   	// #0
    9acc:	bl	65d0 <_Py_Dealloc@plt>
    9ad0:	b	9a88 <PyFloat_FromString@plt+0x2ff8>
    9ad4:	nop
    9ad8:	ldr	x2, [x0]
    9adc:	add	x2, x2, #0x1
    9ae0:	str	x2, [x0]
    9ae4:	ret
    9ae8:	ldr	x2, [x0]
    9aec:	add	x2, x2, #0x1
    9af0:	str	x2, [x0]
    9af4:	ret
    9af8:	ldr	x2, [x0]
    9afc:	add	x2, x2, #0x1
    9b00:	str	x2, [x0]
    9b04:	ret
    9b08:	stp	x29, x30, [sp, #-64]!
    9b0c:	mov	x29, sp
    9b10:	stp	x19, x20, [sp, #16]
    9b14:	stp	x21, x22, [sp, #32]
    9b18:	mov	x22, x0
    9b1c:	bl	6910 <PyList_Size@plt>
    9b20:	cmp	x0, #0x0
    9b24:	b.le	9bd8 <PyFloat_FromString@plt+0x3148>
    9b28:	mov	x21, x0
    9b2c:	str	x23, [sp, #48]
    9b30:	adrp	x23, 5d000 <PyInit__decimal@@Base+0x42a80>
    9b34:	add	x23, x23, #0x9a0
    9b38:	mov	x19, #0x0                   	// #0
    9b3c:	mov	w20, #0x0                   	// #0
    9b40:	mov	x1, x19
    9b44:	mov	x0, x22
    9b48:	bl	6a30 <PyList_GetItem@plt>
    9b4c:	ldr	x1, [x23]
    9b50:	cbz	x1, 9ba4 <PyFloat_FromString@plt+0x3114>
    9b54:	mov	x2, x23
    9b58:	b	9b64 <PyFloat_FromString@plt+0x30d4>
    9b5c:	ldr	x3, [x2, #32]!
    9b60:	cbz	x3, 9ba4 <PyFloat_FromString@plt+0x3114>
    9b64:	ldr	x3, [x2, #24]
    9b68:	cmp	x0, x3
    9b6c:	b.ne	9b5c <PyFloat_FromString@plt+0x30cc>  // b.any
    9b70:	ldr	w1, [x2, #16]
    9b74:	tst	w1, #0x18000
    9b78:	b.ne	9be0 <PyFloat_FromString@plt+0x3150>  // b.any
    9b7c:	add	x19, x19, #0x1
    9b80:	orr	w20, w20, w1
    9b84:	cmp	x21, x19
    9b88:	b.ne	9b40 <PyFloat_FromString@plt+0x30b0>  // b.any
    9b8c:	ldr	x23, [sp, #48]
    9b90:	mov	w0, w20
    9b94:	ldp	x19, x20, [sp, #16]
    9b98:	ldp	x21, x22, [sp, #32]
    9b9c:	ldp	x29, x30, [sp], #64
    9ba0:	ret
    9ba4:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
    9ba8:	adrp	x1, 3b000 <PyInit__decimal@@Base+0x20a80>
    9bac:	add	x1, x1, #0xc40
    9bb0:	mov	w20, #0x8000                	// #32768
    9bb4:	ldr	x0, [x0, #3968]
    9bb8:	ldr	x0, [x0]
    9bbc:	bl	6650 <PyErr_SetString@plt>
    9bc0:	ldr	x23, [sp, #48]
    9bc4:	mov	w0, w20
    9bc8:	ldp	x19, x20, [sp, #16]
    9bcc:	ldp	x21, x22, [sp, #32]
    9bd0:	ldp	x29, x30, [sp], #64
    9bd4:	ret
    9bd8:	mov	w20, #0x0                   	// #0
    9bdc:	b	9bc4 <PyFloat_FromString@plt+0x3134>
    9be0:	mov	w20, w1
    9be4:	ldr	x23, [sp, #48]
    9be8:	b	9b90 <PyFloat_FromString@plt+0x3100>
    9bec:	nop
    9bf0:	sub	sp, sp, #0x90
    9bf4:	add	x3, sp, #0x88
    9bf8:	add	x4, sp, #0x80
    9bfc:	add	x5, sp, #0x78
    9c00:	add	x6, sp, #0x70
    9c04:	stp	x29, x30, [sp, #32]
    9c08:	add	x29, sp, #0x20
    9c0c:	add	x7, sp, #0x68
    9c10:	stp	x19, x20, [sp, #48]
    9c14:	adrp	x19, 5c000 <PyInit__decimal@@Base+0x41a80>
    9c18:	stp	x6, x5, [sp]
    9c1c:	add	x6, sp, #0x60
    9c20:	add	x5, sp, #0x58
    9c24:	stp	x4, x3, [sp, #16]
    9c28:	adrp	x3, 5d000 <PyInit__decimal@@Base+0x42a80>
    9c2c:	add	x3, x3, #0x9a0
    9c30:	ldr	x20, [x19, #4008]
    9c34:	add	x3, x3, #0x278
    9c38:	add	x4, sp, #0x50
    9c3c:	str	x21, [sp, #64]
    9c40:	mov	x21, x0
    9c44:	mov	x0, x1
    9c48:	mov	x1, x2
    9c4c:	adrp	x2, 3b000 <PyInit__decimal@@Base+0x20a80>
    9c50:	add	x2, x2, #0xf70
    9c54:	stp	x20, x20, [sp, #80]
    9c58:	stp	x20, x20, [sp, #96]
    9c5c:	stp	x20, x20, [sp, #112]
    9c60:	stp	x20, x20, [sp, #128]
    9c64:	bl	6520 <PyArg_ParseTupleAndKeywords@plt>
    9c68:	cbz	w0, 9e44 <PyFloat_FromString@plt+0x33b4>
    9c6c:	ldr	x1, [sp, #80]
    9c70:	cmp	x1, x20
    9c74:	b.eq	9c88 <PyFloat_FromString@plt+0x31f8>  // b.none
    9c78:	mov	x0, x21
    9c7c:	mov	x2, #0x0                   	// #0
    9c80:	bl	9100 <PyFloat_FromString@plt+0x2670>
    9c84:	tbnz	w0, #31, 9e44 <PyFloat_FromString@plt+0x33b4>
    9c88:	ldr	x0, [x19, #4008]
    9c8c:	ldr	x1, [sp, #88]
    9c90:	cmp	x1, x0
    9c94:	b.eq	9ca8 <PyFloat_FromString@plt+0x3218>  // b.none
    9c98:	mov	x0, x21
    9c9c:	mov	x2, #0x0                   	// #0
    9ca0:	bl	9220 <PyFloat_FromString@plt+0x2790>
    9ca4:	tbnz	w0, #31, 9e44 <PyFloat_FromString@plt+0x33b4>
    9ca8:	ldr	x0, [x19, #4008]
    9cac:	ldr	x1, [sp, #96]
    9cb0:	cmp	x1, x0
    9cb4:	b.eq	9cc8 <PyFloat_FromString@plt+0x3238>  // b.none
    9cb8:	mov	x0, x21
    9cbc:	mov	x2, #0x0                   	// #0
    9cc0:	bl	9288 <PyFloat_FromString@plt+0x27f8>
    9cc4:	tbnz	w0, #31, 9e44 <PyFloat_FromString@plt+0x33b4>
    9cc8:	ldr	x0, [x19, #4008]
    9ccc:	ldr	x1, [sp, #104]
    9cd0:	cmp	x1, x0
    9cd4:	b.eq	9ce8 <PyFloat_FromString@plt+0x3258>  // b.none
    9cd8:	mov	x0, x21
    9cdc:	mov	x2, #0x0                   	// #0
    9ce0:	bl	9300 <PyFloat_FromString@plt+0x2870>
    9ce4:	tbnz	w0, #31, 9e44 <PyFloat_FromString@plt+0x33b4>
    9ce8:	ldr	x0, [x19, #4008]
    9cec:	ldr	x1, [sp, #112]
    9cf0:	cmp	x1, x0
    9cf4:	b.eq	9d08 <PyFloat_FromString@plt+0x3278>  // b.none
    9cf8:	mov	x0, x21
    9cfc:	mov	x2, #0x0                   	// #0
    9d00:	bl	9088 <PyFloat_FromString@plt+0x25f8>
    9d04:	tbnz	w0, #31, 9e44 <PyFloat_FromString@plt+0x33b4>
    9d08:	ldr	x0, [x19, #4008]
    9d0c:	ldr	x1, [sp, #120]
    9d10:	cmp	x1, x0
    9d14:	b.eq	9d28 <PyFloat_FromString@plt+0x3298>  // b.none
    9d18:	mov	x0, x21
    9d1c:	mov	x2, #0x0                   	// #0
    9d20:	bl	9378 <PyFloat_FromString@plt+0x28e8>
    9d24:	tbnz	w0, #31, 9e44 <PyFloat_FromString@plt+0x33b4>
    9d28:	ldr	x2, [x19, #4008]
    9d2c:	ldr	x0, [sp, #136]
    9d30:	cmp	x0, x2
    9d34:	b.eq	9d60 <PyFloat_FromString@plt+0x32d0>  // b.none
    9d38:	ldr	x1, [x0, #8]
    9d3c:	ldr	x1, [x1, #168]
    9d40:	tbz	w1, #25, 9dc0 <PyFloat_FromString@plt+0x3330>
    9d44:	bl	9b08 <PyFloat_FromString@plt+0x3078>
    9d48:	mov	w1, w0
    9d4c:	tst	w0, #0x18000
    9d50:	b.ne	9e44 <PyFloat_FromString@plt+0x33b4>  // b.any
    9d54:	add	x0, x21, #0x10
    9d58:	bl	1d6f0 <PyInit__decimal@@Base+0x3170>
    9d5c:	cbz	w0, 9e24 <PyFloat_FromString@plt+0x3394>
    9d60:	ldr	x19, [x19, #4008]
    9d64:	ldr	x0, [sp, #128]
    9d68:	cmp	x0, x19
    9d6c:	b.eq	9e0c <PyFloat_FromString@plt+0x337c>  // b.none
    9d70:	ldr	x1, [x0, #8]
    9d74:	ldr	x1, [x1, #168]
    9d78:	tbz	w1, #25, 9de4 <PyFloat_FromString@plt+0x3354>
    9d7c:	bl	9b08 <PyFloat_FromString@plt+0x3078>
    9d80:	mov	w1, w0
    9d84:	tst	w0, #0x18000
    9d88:	b.ne	9e44 <PyFloat_FromString@plt+0x33b4>  // b.any
    9d8c:	add	x0, x21, #0x10
    9d90:	bl	1d718 <PyInit__decimal@@Base+0x3198>
    9d94:	mov	w1, w0
    9d98:	mov	w0, #0x0                   	// #0
    9d9c:	cbnz	w1, 9df8 <PyFloat_FromString@plt+0x3368>
    9da0:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
    9da4:	adrp	x1, 3b000 <PyInit__decimal@@Base+0x20a80>
    9da8:	add	x1, x1, #0xfa8
    9dac:	ldr	x0, [x0, #3920]
    9db0:	ldr	x0, [x0]
    9db4:	bl	6650 <PyErr_SetString@plt>
    9db8:	mov	w0, #0xffffffff            	// #-1
    9dbc:	b	9df8 <PyFloat_FromString@plt+0x3368>
    9dc0:	mov	x1, x0
    9dc4:	mov	x0, x21
    9dc8:	bl	9410 <PyFloat_FromString@plt+0x2980>
    9dcc:	tbz	w0, #31, 9d60 <PyFloat_FromString@plt+0x32d0>
    9dd0:	ldp	x29, x30, [sp, #32]
    9dd4:	ldp	x19, x20, [sp, #48]
    9dd8:	ldr	x21, [sp, #64]
    9ddc:	add	sp, sp, #0x90
    9de0:	ret
    9de4:	mov	x1, x0
    9de8:	mov	x0, x21
    9dec:	bl	94a0 <PyFloat_FromString@plt+0x2a10>
    9df0:	cmp	w0, #0x0
    9df4:	csel	w0, w0, wzr, le
    9df8:	ldp	x29, x30, [sp, #32]
    9dfc:	ldp	x19, x20, [sp, #48]
    9e00:	ldr	x21, [sp, #64]
    9e04:	add	sp, sp, #0x90
    9e08:	ret
    9e0c:	mov	w0, #0x0                   	// #0
    9e10:	ldp	x29, x30, [sp, #32]
    9e14:	ldp	x19, x20, [sp, #48]
    9e18:	ldr	x21, [sp, #64]
    9e1c:	add	sp, sp, #0x90
    9e20:	ret
    9e24:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
    9e28:	adrp	x1, 3b000 <PyInit__decimal@@Base+0x20a80>
    9e2c:	add	x1, x1, #0xf80
    9e30:	ldr	x0, [x0, #3920]
    9e34:	ldr	x0, [x0]
    9e38:	bl	6650 <PyErr_SetString@plt>
    9e3c:	mov	w0, #0xffffffff            	// #-1
    9e40:	b	9df8 <PyFloat_FromString@plt+0x3368>
    9e44:	mov	w0, #0xffffffff            	// #-1
    9e48:	b	9df8 <PyFloat_FromString@plt+0x3368>
    9e4c:	nop
    9e50:	adrp	x2, 5d000 <PyInit__decimal@@Base+0x42a80>
    9e54:	ldr	x3, [x2, #2464]
    9e58:	cbz	x3, 9e98 <PyFloat_FromString@plt+0x3408>
    9e5c:	add	x2, x2, #0x9a0
    9e60:	b	9e6c <PyFloat_FromString@plt+0x33dc>
    9e64:	ldr	x3, [x2, #32]!
    9e68:	cbz	x3, 9e98 <PyFloat_FromString@plt+0x3408>
    9e6c:	ldr	x3, [x2, #24]
    9e70:	cmp	x1, x3
    9e74:	b.ne	9e64 <PyFloat_FromString@plt+0x33d4>  // b.any
    9e78:	ldr	w1, [x2, #16]
    9e7c:	tst	w1, #0x18000
    9e80:	b.ne	9ee0 <PyFloat_FromString@plt+0x3450>  // b.any
    9e84:	ldr	x0, [x0, #16]
    9e88:	ldr	w0, [x0]
    9e8c:	tst	w1, w0
    9e90:	b.eq	9ec4 <PyFloat_FromString@plt+0x3434>  // b.none
    9e94:	b	8d00 <PyFloat_FromString@plt+0x2270>
    9e98:	stp	x29, x30, [sp, #-16]!
    9e9c:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
    9ea0:	adrp	x1, 3b000 <PyInit__decimal@@Base+0x20a80>
    9ea4:	mov	x29, sp
    9ea8:	ldr	x0, [x0, #3968]
    9eac:	add	x1, x1, #0xc40
    9eb0:	ldr	x0, [x0]
    9eb4:	bl	6650 <PyErr_SetString@plt>
    9eb8:	mov	x0, #0x0                   	// #0
    9ebc:	ldp	x29, x30, [sp], #16
    9ec0:	ret
    9ec4:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41a80>
    9ec8:	ldr	x1, [x1, #3976]
    9ecc:	mov	x0, x1
    9ed0:	ldr	x2, [x1]
    9ed4:	add	x2, x2, #0x1
    9ed8:	str	x2, [x1]
    9edc:	ret
    9ee0:	mov	x0, #0x0                   	// #0
    9ee4:	ret
    9ee8:	stp	x29, x30, [sp, #-32]!
    9eec:	adrp	x0, 5d000 <PyInit__decimal@@Base+0x42a80>
    9ef0:	mov	x29, sp
    9ef4:	str	x19, [sp, #16]
    9ef8:	mov	x19, x1
    9efc:	add	x1, x0, #0x320
    9f00:	add	x1, x1, #0x1a0
    9f04:	ldr	x0, [x19, #8]
    9f08:	cmp	x0, x1
    9f0c:	b.eq	9f18 <PyFloat_FromString@plt+0x3488>  // b.none
    9f10:	bl	69c0 <PyType_IsSubtype@plt>
    9f14:	cbz	w0, 9f34 <PyFloat_FromString@plt+0x34a4>
    9f18:	ldr	x1, [x19]
    9f1c:	mov	x0, x19
    9f20:	add	x1, x1, #0x1
    9f24:	str	x1, [x19]
    9f28:	ldr	x19, [sp, #16]
    9f2c:	ldp	x29, x30, [sp], #32
    9f30:	ret
    9f34:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
    9f38:	adrp	x1, 3b000 <PyInit__decimal@@Base+0x20a80>
    9f3c:	add	x1, x1, #0xbc8
    9f40:	ldr	x0, [x0, #3936]
    9f44:	ldr	x0, [x0]
    9f48:	bl	6650 <PyErr_SetString@plt>
    9f4c:	mov	x0, #0x0                   	// #0
    9f50:	b	9f28 <PyFloat_FromString@plt+0x3498>
    9f54:	nop
    9f58:	stp	x29, x30, [sp, #-96]!
    9f5c:	mov	x29, sp
    9f60:	stp	x27, x28, [sp, #80]
    9f64:	mov	w28, w2
    9f68:	ldrb	w2, [x0, #32]
    9f6c:	stp	x19, x20, [sp, #16]
    9f70:	mov	x19, x0
    9f74:	mov	w20, w1
    9f78:	stp	x23, x24, [sp, #48]
    9f7c:	tbz	w2, #7, a168 <PyFloat_FromString@plt+0x36d8>
    9f80:	stp	x21, x22, [sp, #32]
    9f84:	stp	x25, x26, [sp, #64]
    9f88:	ldrb	w22, [x19, #32]
    9f8c:	ubfx	x22, x22, #2, #3
    9f90:	tbnz	w2, #5, a01c <PyFloat_FromString@plt+0x358c>
    9f94:	ldr	x27, [x19, #72]
    9f98:	ldr	x26, [x19, #16]
    9f9c:	add	x0, x26, #0x1
    9fa0:	bl	6a40 <PyMem_Malloc@plt>
    9fa4:	mov	x24, x0
    9fa8:	cbz	x0, a1b0 <PyFloat_FromString@plt+0x3720>
    9fac:	cbz	w20, a0a4 <PyFloat_FromString@plt+0x3614>
    9fb0:	adrp	x20, 5c000 <PyInit__decimal@@Base+0x41a80>
    9fb4:	cmp	x26, #0x0
    9fb8:	ldr	x20, [x20, #3880]
    9fbc:	b.le	9ff4 <PyFloat_FromString@plt+0x3564>
    9fc0:	cmp	w22, #0x1
    9fc4:	sub	x19, x26, #0x1
    9fc8:	b.eq	a030 <PyFloat_FromString@plt+0x35a0>  // b.none
    9fcc:	cmp	w22, #0x2
    9fd0:	b.eq	a09c <PyFloat_FromString@plt+0x360c>  // b.none
    9fd4:	ldr	w0, [x27, x19, lsl #2]
    9fd8:	cmp	w0, #0x7f
    9fdc:	b.hi	a03c <PyFloat_FromString@plt+0x35ac>  // b.pmore
    9fe0:	ldrb	w0, [x20, w0, uxtw]
    9fe4:	cbz	w0, a044 <PyFloat_FromString@plt+0x35b4>
    9fe8:	mov	x26, x19
    9fec:	cmp	x26, #0x0
    9ff0:	b.gt	9fc0 <PyFloat_FromString@plt+0x3530>
    9ff4:	mov	x20, x24
    9ff8:	strb	wzr, [x20]
    9ffc:	ldp	x21, x22, [sp, #32]
    a000:	ldp	x25, x26, [sp, #64]
    a004:	mov	x0, x24
    a008:	ldp	x19, x20, [sp, #16]
    a00c:	ldp	x23, x24, [sp, #48]
    a010:	ldp	x27, x28, [sp, #80]
    a014:	ldp	x29, x30, [sp], #96
    a018:	ret
    a01c:	tst	x2, #0x40
    a020:	add	x27, x19, #0x30
    a024:	add	x0, x19, #0x48
    a028:	csel	x27, x0, x27, eq  // eq = none
    a02c:	b	9f98 <PyFloat_FromString@plt+0x3508>
    a030:	ldrb	w0, [x27, x19]
    a034:	cmp	w0, #0x7f
    a038:	b.ls	9fe0 <PyFloat_FromString@plt+0x3550>  // b.plast
    a03c:	bl	6800 <_PyUnicode_IsWhitespace@plt>
    a040:	cbnz	w0, 9fe8 <PyFloat_FromString@plt+0x3558>
    a044:	adrp	x20, 5c000 <PyInit__decimal@@Base+0x41a80>
    a048:	cmp	w22, #0x1
    a04c:	mov	x19, #0x0                   	// #0
    a050:	ldr	x20, [x20, #3880]
    a054:	b.eq	a088 <PyFloat_FromString@plt+0x35f8>  // b.none
    a058:	cmp	w22, #0x2
    a05c:	b.eq	a184 <PyFloat_FromString@plt+0x36f4>  // b.none
    a060:	ldr	w0, [x27, x19, lsl #2]
    a064:	cmp	w0, #0x7f
    a068:	b.hi	a094 <PyFloat_FromString@plt+0x3604>  // b.pmore
    a06c:	ldrb	w0, [x20, w0, uxtw]
    a070:	cbz	w0, a0a8 <PyFloat_FromString@plt+0x3618>
    a074:	add	x19, x19, #0x1
    a078:	cmp	x26, x19
    a07c:	b.le	9ff4 <PyFloat_FromString@plt+0x3564>
    a080:	cmp	w22, #0x1
    a084:	b.ne	a058 <PyFloat_FromString@plt+0x35c8>  // b.any
    a088:	ldrb	w0, [x27, x19]
    a08c:	cmp	w0, #0x7f
    a090:	b.ls	a06c <PyFloat_FromString@plt+0x35dc>  // b.plast
    a094:	bl	6800 <_PyUnicode_IsWhitespace@plt>
    a098:	b	a070 <PyFloat_FromString@plt+0x35e0>
    a09c:	ldrh	w0, [x27, x19, lsl #1]
    a0a0:	b	9fd8 <PyFloat_FromString@plt+0x3548>
    a0a4:	mov	x19, #0x0                   	// #0
    a0a8:	adrp	x23, 5c000 <PyInit__decimal@@Base+0x41a80>
    a0ac:	and	w28, w28, #0x1
    a0b0:	cmp	x19, x26
    a0b4:	mov	x20, x24
    a0b8:	ldr	x23, [x23, #3880]
    a0bc:	mov	w25, #0x20                  	// #32
    a0c0:	b.ge	9ff8 <PyFloat_FromString@plt+0x3568>  // b.tcont
    a0c4:	cmp	w22, #0x1
    a0c8:	b.eq	a124 <PyFloat_FromString@plt+0x3694>  // b.none
    a0cc:	nop
    a0d0:	cmp	w22, #0x2
    a0d4:	b.eq	a12c <PyFloat_FromString@plt+0x369c>  // b.none
    a0d8:	ldr	w21, [x27, x19, lsl #2]
    a0dc:	cmp	w21, #0x5f
    a0e0:	ccmp	w28, #0x0, #0x4, eq  // eq = none
    a0e4:	b.ne	a110 <PyFloat_FromString@plt+0x3680>  // b.any
    a0e8:	sub	w0, w21, #0x1
    a0ec:	cmp	w0, #0x7e
    a0f0:	b.ls	a14c <PyFloat_FromString@plt+0x36bc>  // b.plast
    a0f4:	cmp	w21, #0x7f
    a0f8:	b.hi	a154 <PyFloat_FromString@plt+0x36c4>  // b.pmore
    a0fc:	ldrb	w0, [x23]
    a100:	cmp	w0, #0x0
    a104:	cset	w0, ne  // ne = any
    a108:	cbz	w0, a134 <PyFloat_FromString@plt+0x36a4>
    a10c:	strb	w25, [x20], #1
    a110:	add	x19, x19, #0x1
    a114:	cmp	x19, x26
    a118:	b.eq	9ff8 <PyFloat_FromString@plt+0x3568>  // b.none
    a11c:	cmp	w22, #0x1
    a120:	b.ne	a0d0 <PyFloat_FromString@plt+0x3640>  // b.any
    a124:	ldrb	w21, [x27, x19]
    a128:	b	a0dc <PyFloat_FromString@plt+0x364c>
    a12c:	ldrh	w21, [x27, x19, lsl #1]
    a130:	b	a0dc <PyFloat_FromString@plt+0x364c>
    a134:	mov	w0, w21
    a138:	bl	68b0 <_PyUnicode_ToDecimalDigit@plt>
    a13c:	tbnz	w0, #31, a18c <PyFloat_FromString@plt+0x36fc>
    a140:	add	w0, w0, #0x30
    a144:	strb	w0, [x20], #1
    a148:	b	a110 <PyFloat_FromString@plt+0x3680>
    a14c:	strb	w21, [x20], #1
    a150:	b	a110 <PyFloat_FromString@plt+0x3680>
    a154:	mov	w0, w21
    a158:	bl	6800 <_PyUnicode_IsWhitespace@plt>
    a15c:	cmp	w0, #0x0
    a160:	cset	w0, ne  // ne = any
    a164:	b	a108 <PyFloat_FromString@plt+0x3678>
    a168:	bl	64b0 <_PyUnicode_Ready@plt>
    a16c:	cmn	w0, #0x1
    a170:	b.eq	a1c0 <PyFloat_FromString@plt+0x3730>  // b.none
    a174:	ldrb	w2, [x19, #32]
    a178:	stp	x21, x22, [sp, #32]
    a17c:	stp	x25, x26, [sp, #64]
    a180:	b	9f88 <PyFloat_FromString@plt+0x34f8>
    a184:	ldrh	w0, [x27, x19, lsl #1]
    a188:	b	a064 <PyFloat_FromString@plt+0x35d4>
    a18c:	strb	wzr, [x24]
    a190:	mov	x0, x24
    a194:	ldp	x19, x20, [sp, #16]
    a198:	ldp	x21, x22, [sp, #32]
    a19c:	ldp	x23, x24, [sp, #48]
    a1a0:	ldp	x25, x26, [sp, #64]
    a1a4:	ldp	x27, x28, [sp, #80]
    a1a8:	ldp	x29, x30, [sp], #96
    a1ac:	ret
    a1b0:	bl	65e0 <PyErr_NoMemory@plt>
    a1b4:	ldp	x21, x22, [sp, #32]
    a1b8:	ldp	x25, x26, [sp, #64]
    a1bc:	b	a004 <PyFloat_FromString@plt+0x3574>
    a1c0:	mov	x24, #0x0                   	// #0
    a1c4:	b	a004 <PyFloat_FromString@plt+0x3574>
    a1c8:	stp	x29, x30, [sp, #-80]!
    a1cc:	mov	x29, sp
    a1d0:	add	x2, sp, #0x48
    a1d4:	stp	x19, x20, [sp, #16]
    a1d8:	mov	x19, x0
    a1dc:	mov	x0, x1
    a1e0:	adrp	x1, 3b000 <PyInit__decimal@@Base+0x20a80>
    a1e4:	add	x1, x1, #0xfd8
    a1e8:	str	xzr, [sp, #72]
    a1ec:	bl	68e0 <PyArg_ParseTuple@plt>
    a1f0:	cbz	w0, a2c8 <PyFloat_FromString@plt+0x3838>
    a1f4:	stp	x21, x22, [sp, #32]
    a1f8:	ldr	x21, [sp, #72]
    a1fc:	cbz	x21, a350 <PyFloat_FromString@plt+0x38c0>
    a200:	ldr	x0, [x21, #8]
    a204:	adrp	x22, 5d000 <PyInit__decimal@@Base+0x42a80>
    a208:	add	x20, x22, #0x320
    a20c:	add	x20, x20, #0x1a0
    a210:	cmp	x0, x20
    a214:	b.eq	a27c <PyFloat_FromString@plt+0x37ec>  // b.none
    a218:	mov	x1, x20
    a21c:	bl	69c0 <PyType_IsSubtype@plt>
    a220:	cbnz	w0, a27c <PyFloat_FromString@plt+0x37ec>
    a224:	ldr	x0, [x21, #8]
    a228:	ldr	x1, [x0, #168]
    a22c:	tbnz	w1, #28, a3b0 <PyFloat_FromString@plt+0x3920>
    a230:	tbnz	w1, #24, a318 <PyFloat_FromString@plt+0x3888>
    a234:	tst	x1, #0x6000000
    a238:	b.ne	a3e4 <PyFloat_FromString@plt+0x3954>  // b.any
    a23c:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41a80>
    a240:	ldr	x1, [x1, #3864]
    a244:	cmp	x0, x1
    a248:	b.eq	a254 <PyFloat_FromString@plt+0x37c4>  // b.none
    a24c:	bl	69c0 <PyType_IsSubtype@plt>
    a250:	cbz	w0, a43c <PyFloat_FromString@plt+0x39ac>
    a254:	mov	x0, x19
    a258:	mov	w1, #0x400                 	// #1024
    a25c:	bl	7f90 <PyFloat_FromString@plt+0x1500>
    a260:	cbnz	w0, a2c4 <PyFloat_FromString@plt+0x3834>
    a264:	mov	x0, x21
    a268:	mov	x1, x19
    a26c:	bl	9988 <PyFloat_FromString@plt+0x2ef8>
    a270:	mov	x20, x0
    a274:	ldp	x21, x22, [sp, #32]
    a278:	b	a2b4 <PyFloat_FromString@plt+0x3824>
    a27c:	add	x0, x21, #0x18
    a280:	bl	27f98 <PyInit__decimal@@Base+0xda18>
    a284:	cbz	w0, a2a0 <PyFloat_FromString@plt+0x3810>
    a288:	ldr	x0, [x19, #16]
    a28c:	ldrsw	x2, [x19, #56]
    a290:	ldr	x1, [x21, #40]
    a294:	sub	x0, x0, x2
    a298:	cmp	x1, x0
    a29c:	b.gt	a2dc <PyFloat_FromString@plt+0x384c>
    a2a0:	mov	x0, x21
    a2a4:	mov	x1, x19
    a2a8:	bl	8848 <PyFloat_FromString@plt+0x1db8>
    a2ac:	mov	x20, x0
    a2b0:	ldp	x21, x22, [sp, #32]
    a2b4:	mov	x0, x20
    a2b8:	ldp	x19, x20, [sp, #16]
    a2bc:	ldp	x29, x30, [sp], #80
    a2c0:	ret
    a2c4:	ldp	x21, x22, [sp, #32]
    a2c8:	mov	x20, #0x0                   	// #0
    a2cc:	mov	x0, x20
    a2d0:	ldp	x19, x20, [sp, #16]
    a2d4:	ldp	x29, x30, [sp], #80
    a2d8:	ret
    a2dc:	mov	x0, x19
    a2e0:	mov	w1, #0x2                   	// #2
    a2e4:	bl	7f90 <PyFloat_FromString@plt+0x1500>
    a2e8:	cbnz	w0, a2c4 <PyFloat_FromString@plt+0x3834>
    a2ec:	add	x0, x22, #0x320
    a2f0:	add	x0, x0, #0x1a0
    a2f4:	bl	6c60 <PyFloat_FromString@plt+0x1d0>
    a2f8:	mov	x20, x0
    a2fc:	cbz	x0, a348 <PyFloat_FromString@plt+0x38b8>
    a300:	add	x0, x0, #0x18
    a304:	mov	w2, #0x4                   	// #4
    a308:	mov	w1, #0x0                   	// #0
    a30c:	bl	28cd8 <PyInit__decimal@@Base+0xe758>
    a310:	ldp	x21, x22, [sp, #32]
    a314:	b	a2b4 <PyFloat_FromString@plt+0x3824>
    a318:	mov	x0, x20
    a31c:	mov	x1, x21
    a320:	add	x3, sp, #0x44
    a324:	add	x2, x19, #0x10
    a328:	str	wzr, [sp, #68]
    a32c:	bl	6e90 <PyFloat_FromString@plt+0x400>
    a330:	mov	x20, x0
    a334:	cbz	x0, a3a4 <PyFloat_FromString@plt+0x3914>
    a338:	ldr	w1, [sp, #68]
    a33c:	mov	x0, x19
    a340:	bl	7f90 <PyFloat_FromString@plt+0x1500>
    a344:	cbnz	w0, a394 <PyFloat_FromString@plt+0x3904>
    a348:	ldp	x21, x22, [sp, #32]
    a34c:	b	a2b4 <PyFloat_FromString@plt+0x3824>
    a350:	adrp	x0, 5d000 <PyInit__decimal@@Base+0x42a80>
    a354:	add	x0, x0, #0x320
    a358:	add	x0, x0, #0x1a0
    a35c:	str	wzr, [sp, #68]
    a360:	bl	6c60 <PyFloat_FromString@plt+0x1d0>
    a364:	str	x0, [sp, #56]
    a368:	mov	x20, x0
    a36c:	cbz	x0, a3a4 <PyFloat_FromString@plt+0x3914>
    a370:	add	x0, x0, #0x18
    a374:	mov	x1, #0x0                   	// #0
    a378:	add	x3, sp, #0x44
    a37c:	add	x2, x19, #0x10
    a380:	bl	2bba8 <PyInit__decimal@@Base+0x11628>
    a384:	ldr	w1, [sp, #68]
    a388:	mov	x0, x19
    a38c:	bl	7f90 <PyFloat_FromString@plt+0x1500>
    a390:	cbz	w0, a348 <PyFloat_FromString@plt+0x38b8>
    a394:	ldr	x0, [x20]
    a398:	sub	x0, x0, #0x1
    a39c:	str	x0, [x20]
    a3a0:	cbz	x0, a468 <PyFloat_FromString@plt+0x39d8>
    a3a4:	mov	x20, #0x0                   	// #0
    a3a8:	ldp	x21, x22, [sp, #32]
    a3ac:	b	a2b4 <PyFloat_FromString@plt+0x3824>
    a3b0:	mov	x0, x21
    a3b4:	mov	w2, #0x0                   	// #0
    a3b8:	mov	w1, #0x0                   	// #0
    a3bc:	bl	9f58 <PyFloat_FromString@plt+0x34c8>
    a3c0:	mov	x21, x0
    a3c4:	cbz	x0, a2c4 <PyFloat_FromString@plt+0x3834>
    a3c8:	mov	x1, x19
    a3cc:	bl	9a30 <PyFloat_FromString@plt+0x2fa0>
    a3d0:	mov	x20, x0
    a3d4:	mov	x0, x21
    a3d8:	bl	6560 <PyMem_Free@plt>
    a3dc:	ldp	x21, x22, [sp, #32]
    a3e0:	b	a2b4 <PyFloat_FromString@plt+0x3824>
    a3e4:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41a80>
    a3e8:	mov	x0, x21
    a3ec:	adrp	x2, 3b000 <PyInit__decimal@@Base+0x20a80>
    a3f0:	add	x2, x2, #0xfe0
    a3f4:	ldr	x1, [x1, #3936]
    a3f8:	ldr	x1, [x1]
    a3fc:	bl	7078 <PyFloat_FromString@plt+0x5e8>
    a400:	mov	x20, x0
    a404:	cbz	x0, a2c4 <PyFloat_FromString@plt+0x3834>
    a408:	bl	76f8 <PyFloat_FromString@plt+0xc68>
    a40c:	mov	x21, x0
    a410:	ldr	x1, [x20]
    a414:	sub	x0, x1, #0x1
    a418:	str	x0, [x20]
    a41c:	cbz	x0, a430 <PyFloat_FromString@plt+0x39a0>
    a420:	cbz	x21, a2c4 <PyFloat_FromString@plt+0x3834>
    a424:	mov	x1, x19
    a428:	mov	x0, x21
    a42c:	b	a3cc <PyFloat_FromString@plt+0x393c>
    a430:	mov	x0, x20
    a434:	bl	65d0 <_Py_Dealloc@plt>
    a438:	b	a420 <PyFloat_FromString@plt+0x3990>
    a43c:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
    a440:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
    a444:	ldr	x2, [x21, #8]
    a448:	add	x1, x1, #0x8
    a44c:	ldr	x0, [x0, #3936]
    a450:	mov	x20, #0x0                   	// #0
    a454:	ldr	x2, [x2, #24]
    a458:	ldr	x0, [x0]
    a45c:	bl	6a10 <PyErr_Format@plt>
    a460:	ldp	x21, x22, [sp, #32]
    a464:	b	a2b4 <PyFloat_FromString@plt+0x3824>
    a468:	mov	x0, x20
    a46c:	mov	x20, #0x0                   	// #0
    a470:	bl	65d0 <_Py_Dealloc@plt>
    a474:	ldp	x21, x22, [sp, #32]
    a478:	b	a2b4 <PyFloat_FromString@plt+0x3824>
    a47c:	nop
    a480:	stp	x29, x30, [sp, #-32]!
    a484:	adrp	x0, 5f000 <PyInit__decimal@@Base+0x44a80>
    a488:	mov	x1, #0x0                   	// #0
    a48c:	mov	x29, sp
    a490:	ldr	x0, [x0, #1808]
    a494:	add	x2, sp, #0x18
    a498:	bl	6740 <PyContextVar_Get@plt>
    a49c:	tbnz	w0, #31, a4bc <PyFloat_FromString@plt+0x3a2c>
    a4a0:	ldr	x0, [sp, #24]
    a4a4:	cbz	x0, a4b0 <PyFloat_FromString@plt+0x3a20>
    a4a8:	ldp	x29, x30, [sp], #32
    a4ac:	ret
    a4b0:	bl	7320 <PyFloat_FromString@plt+0x890>
    a4b4:	ldp	x29, x30, [sp], #32
    a4b8:	ret
    a4bc:	mov	x0, #0x0                   	// #0
    a4c0:	ldp	x29, x30, [sp], #32
    a4c4:	ret
    a4c8:	stp	x29, x30, [sp, #-64]!
    a4cc:	adrp	x1, 5f000 <PyInit__decimal@@Base+0x44a80>
    a4d0:	mov	x29, sp
    a4d4:	str	x19, [sp, #16]
    a4d8:	mov	x19, x0
    a4dc:	ldr	x0, [x1, #1808]
    a4e0:	add	x2, sp, #0x38
    a4e4:	mov	x1, #0x0                   	// #0
    a4e8:	bl	6740 <PyContextVar_Get@plt>
    a4ec:	tbnz	w0, #31, a540 <PyFloat_FromString@plt+0x3ab0>
    a4f0:	ldr	x0, [sp, #56]
    a4f4:	cbz	x0, a534 <PyFloat_FromString@plt+0x3aa4>
    a4f8:	ldr	x1, [x0]
    a4fc:	sub	x1, x1, #0x1
    a500:	str	x1, [x0]
    a504:	cbz	x1, a524 <PyFloat_FromString@plt+0x3a94>
    a508:	mov	x1, x0
    a50c:	mov	w2, #0x1                   	// #1
    a510:	mov	x0, x19
    a514:	bl	8118 <PyFloat_FromString@plt+0x1688>
    a518:	ldr	x19, [sp, #16]
    a51c:	ldp	x29, x30, [sp], #64
    a520:	ret
    a524:	str	x0, [sp, #40]
    a528:	bl	65d0 <_Py_Dealloc@plt>
    a52c:	ldr	x0, [sp, #40]
    a530:	b	a508 <PyFloat_FromString@plt+0x3a78>
    a534:	bl	7320 <PyFloat_FromString@plt+0x890>
    a538:	cbnz	x0, a4f8 <PyFloat_FromString@plt+0x3a68>
    a53c:	b	a518 <PyFloat_FromString@plt+0x3a88>
    a540:	mov	x0, #0x0                   	// #0
    a544:	ldr	x19, [sp, #16]
    a548:	ldp	x29, x30, [sp], #64
    a54c:	ret
    a550:	stp	x29, x30, [sp, #-64]!
    a554:	adrp	x1, 5f000 <PyInit__decimal@@Base+0x44a80>
    a558:	mov	x29, sp
    a55c:	str	x19, [sp, #16]
    a560:	mov	x19, x0
    a564:	ldr	x0, [x1, #1808]
    a568:	add	x2, sp, #0x38
    a56c:	mov	x1, #0x0                   	// #0
    a570:	bl	6740 <PyContextVar_Get@plt>
    a574:	tbnz	w0, #31, a5c8 <PyFloat_FromString@plt+0x3b38>
    a578:	ldr	x0, [sp, #56]
    a57c:	cbz	x0, a5bc <PyFloat_FromString@plt+0x3b2c>
    a580:	ldr	x1, [x0]
    a584:	sub	x1, x1, #0x1
    a588:	str	x1, [x0]
    a58c:	cbz	x1, a5ac <PyFloat_FromString@plt+0x3b1c>
    a590:	mov	x1, x0
    a594:	mov	w2, #0x1                   	// #1
    a598:	mov	x0, x19
    a59c:	bl	8118 <PyFloat_FromString@plt+0x1688>
    a5a0:	ldr	x19, [sp, #16]
    a5a4:	ldp	x29, x30, [sp], #64
    a5a8:	ret
    a5ac:	str	x0, [sp, #40]
    a5b0:	bl	65d0 <_Py_Dealloc@plt>
    a5b4:	ldr	x0, [sp, #40]
    a5b8:	b	a590 <PyFloat_FromString@plt+0x3b00>
    a5bc:	bl	7320 <PyFloat_FromString@plt+0x890>
    a5c0:	cbnz	x0, a580 <PyFloat_FromString@plt+0x3af0>
    a5c4:	b	a5a0 <PyFloat_FromString@plt+0x3b10>
    a5c8:	mov	x0, #0x0                   	// #0
    a5cc:	ldr	x19, [sp, #16]
    a5d0:	ldp	x29, x30, [sp], #64
    a5d4:	ret
    a5d8:	stp	x29, x30, [sp, #-64]!
    a5dc:	adrp	x1, 5f000 <PyInit__decimal@@Base+0x44a80>
    a5e0:	mov	x29, sp
    a5e4:	str	x20, [sp, #16]
    a5e8:	mov	x20, x0
    a5ec:	ldr	x0, [x1, #1808]
    a5f0:	add	x2, sp, #0x38
    a5f4:	mov	x1, #0x0                   	// #0
    a5f8:	bl	6740 <PyContextVar_Get@plt>
    a5fc:	tbnz	w0, #31, a654 <PyFloat_FromString@plt+0x3bc4>
    a600:	ldr	x0, [sp, #56]
    a604:	cbz	x0, a648 <PyFloat_FromString@plt+0x3bb8>
    a608:	ldr	x1, [x0]
    a60c:	sub	x1, x1, #0x1
    a610:	str	x1, [x0]
    a614:	cbz	x1, a638 <PyFloat_FromString@plt+0x3ba8>
    a618:	mov	x1, x0
    a61c:	mov	w2, #0x3                   	// #3
    a620:	mov	x0, x20
    a624:	bl	8118 <PyFloat_FromString@plt+0x1688>
    a628:	str	x0, [sp, #40]
    a62c:	ldr	x20, [sp, #16]
    a630:	ldp	x29, x30, [sp], #64
    a634:	ret
    a638:	str	x0, [sp, #40]
    a63c:	bl	65d0 <_Py_Dealloc@plt>
    a640:	ldr	x0, [sp, #40]
    a644:	b	a618 <PyFloat_FromString@plt+0x3b88>
    a648:	bl	7320 <PyFloat_FromString@plt+0x890>
    a64c:	cbnz	x0, a608 <PyFloat_FromString@plt+0x3b78>
    a650:	b	a62c <PyFloat_FromString@plt+0x3b9c>
    a654:	mov	x0, #0x0                   	// #0
    a658:	ldr	x20, [sp, #16]
    a65c:	ldp	x29, x30, [sp], #64
    a660:	ret
    a664:	nop
    a668:	stp	x29, x30, [sp, #-64]!
    a66c:	adrp	x1, 5f000 <PyInit__decimal@@Base+0x44a80>
    a670:	mov	x29, sp
    a674:	str	x19, [sp, #16]
    a678:	mov	x19, x0
    a67c:	ldr	x0, [x1, #1808]
    a680:	add	x2, sp, #0x38
    a684:	mov	x1, #0x0                   	// #0
    a688:	bl	6740 <PyContextVar_Get@plt>
    a68c:	tbnz	w0, #31, a6e0 <PyFloat_FromString@plt+0x3c50>
    a690:	ldr	x0, [sp, #56]
    a694:	cbz	x0, a6d4 <PyFloat_FromString@plt+0x3c44>
    a698:	ldr	x1, [x0]
    a69c:	sub	x1, x1, #0x1
    a6a0:	str	x1, [x0]
    a6a4:	cbz	x1, a6c4 <PyFloat_FromString@plt+0x3c34>
    a6a8:	mov	x1, x0
    a6ac:	mov	w2, #0x2                   	// #2
    a6b0:	mov	x0, x19
    a6b4:	bl	8118 <PyFloat_FromString@plt+0x1688>
    a6b8:	ldr	x19, [sp, #16]
    a6bc:	ldp	x29, x30, [sp], #64
    a6c0:	ret
    a6c4:	str	x0, [sp, #40]
    a6c8:	bl	65d0 <_Py_Dealloc@plt>
    a6cc:	ldr	x0, [sp, #40]
    a6d0:	b	a6a8 <PyFloat_FromString@plt+0x3c18>
    a6d4:	bl	7320 <PyFloat_FromString@plt+0x890>
    a6d8:	cbnz	x0, a698 <PyFloat_FromString@plt+0x3c08>
    a6dc:	b	a6b8 <PyFloat_FromString@plt+0x3c28>
    a6e0:	mov	x0, #0x0                   	// #0
    a6e4:	ldr	x19, [sp, #16]
    a6e8:	ldp	x29, x30, [sp], #64
    a6ec:	ret
    a6f0:	stp	x29, x30, [sp, #-48]!
    a6f4:	adrp	x1, 5f000 <PyInit__decimal@@Base+0x44a80>
    a6f8:	mov	x29, sp
    a6fc:	stp	x19, x20, [sp, #16]
    a700:	mov	x20, x0
    a704:	add	x2, sp, #0x28
    a708:	ldr	x0, [x1, #1808]
    a70c:	mov	x1, #0x0                   	// #0
    a710:	bl	6740 <PyContextVar_Get@plt>
    a714:	tbnz	w0, #31, a798 <PyFloat_FromString@plt+0x3d08>
    a718:	ldr	x19, [sp, #40]
    a71c:	cbz	x19, a784 <PyFloat_FromString@plt+0x3cf4>
    a720:	ldr	x1, [x19]
    a724:	sub	x1, x1, #0x1
    a728:	str	x1, [x19]
    a72c:	cbz	x1, a778 <PyFloat_FromString@plt+0x3ce8>
    a730:	ldr	w1, [x19, #80]
    a734:	add	x0, x20, #0x18
    a738:	bl	24038 <PyInit__decimal@@Base+0x9ab8>
    a73c:	mov	x20, x0
    a740:	cbz	x0, a794 <PyFloat_FromString@plt+0x3d04>
    a744:	mov	x1, x20
    a748:	adrp	x0, 3c000 <PyInit__decimal@@Base+0x21a80>
    a74c:	add	x0, x0, #0x38
    a750:	bl	6480 <PyUnicode_FromFormat@plt>
    a754:	adrp	x1, 5f000 <PyInit__decimal@@Base+0x44a80>
    a758:	mov	x19, x0
    a75c:	mov	x0, x20
    a760:	ldr	x1, [x1, #1704]
    a764:	blr	x1
    a768:	mov	x0, x19
    a76c:	ldp	x19, x20, [sp, #16]
    a770:	ldp	x29, x30, [sp], #48
    a774:	ret
    a778:	mov	x0, x19
    a77c:	bl	65d0 <_Py_Dealloc@plt>
    a780:	b	a730 <PyFloat_FromString@plt+0x3ca0>
    a784:	bl	7320 <PyFloat_FromString@plt+0x890>
    a788:	mov	x19, x0
    a78c:	cbnz	x0, a720 <PyFloat_FromString@plt+0x3c90>
    a790:	b	a768 <PyFloat_FromString@plt+0x3cd8>
    a794:	bl	65e0 <PyErr_NoMemory@plt>
    a798:	mov	x19, #0x0                   	// #0
    a79c:	mov	x0, x19
    a7a0:	ldp	x19, x20, [sp, #16]
    a7a4:	ldp	x29, x30, [sp], #48
    a7a8:	ret
    a7ac:	nop
    a7b0:	stp	x29, x30, [sp, #-64]!
    a7b4:	adrp	x2, 5f000 <PyInit__decimal@@Base+0x44a80>
    a7b8:	mov	x1, #0x0                   	// #0
    a7bc:	mov	x29, sp
    a7c0:	stp	x19, x20, [sp, #16]
    a7c4:	mov	x20, x0
    a7c8:	ldr	x0, [x2, #1808]
    a7cc:	str	x21, [sp, #32]
    a7d0:	add	x21, sp, #0x38
    a7d4:	mov	x2, x21
    a7d8:	bl	6740 <PyContextVar_Get@plt>
    a7dc:	tbnz	w0, #31, a864 <PyFloat_FromString@plt+0x3dd4>
    a7e0:	ldr	x19, [sp, #56]
    a7e4:	cbz	x19, a87c <PyFloat_FromString@plt+0x3dec>
    a7e8:	ldr	x1, [x19]
    a7ec:	sub	x1, x1, #0x1
    a7f0:	str	x1, [x19]
    a7f4:	cbz	x1, a840 <PyFloat_FromString@plt+0x3db0>
    a7f8:	ldr	w2, [x19, #80]
    a7fc:	add	x1, x20, #0x18
    a800:	mov	x0, x21
    a804:	bl	24098 <PyInit__decimal@@Base+0x9b18>
    a808:	mov	x1, x0
    a80c:	tbnz	x0, #63, a860 <PyFloat_FromString@plt+0x3dd0>
    a810:	ldr	x0, [sp, #56]
    a814:	bl	70c0 <PyFloat_FromString@plt+0x630>
    a818:	mov	x19, x0
    a81c:	adrp	x1, 5f000 <PyInit__decimal@@Base+0x44a80>
    a820:	ldr	x0, [sp, #56]
    a824:	ldr	x1, [x1, #1704]
    a828:	blr	x1
    a82c:	mov	x0, x19
    a830:	ldp	x19, x20, [sp, #16]
    a834:	ldr	x21, [sp, #32]
    a838:	ldp	x29, x30, [sp], #64
    a83c:	ret
    a840:	mov	x0, x19
    a844:	bl	65d0 <_Py_Dealloc@plt>
    a848:	ldr	w2, [x19, #80]
    a84c:	add	x1, x20, #0x18
    a850:	mov	x0, x21
    a854:	bl	24098 <PyInit__decimal@@Base+0x9b18>
    a858:	mov	x1, x0
    a85c:	tbz	x0, #63, a810 <PyFloat_FromString@plt+0x3d80>
    a860:	bl	65e0 <PyErr_NoMemory@plt>
    a864:	mov	x19, #0x0                   	// #0
    a868:	mov	x0, x19
    a86c:	ldp	x19, x20, [sp, #16]
    a870:	ldr	x21, [sp, #32]
    a874:	ldp	x29, x30, [sp], #64
    a878:	ret
    a87c:	bl	7320 <PyFloat_FromString@plt+0x890>
    a880:	mov	x19, x0
    a884:	cbnz	x0, a7e8 <PyFloat_FromString@plt+0x3d58>
    a888:	b	a82c <PyFloat_FromString@plt+0x3d9c>
    a88c:	nop
    a890:	stp	x29, x30, [sp, #-32]!
    a894:	mov	x29, sp
    a898:	stp	x19, x20, [sp, #16]
    a89c:	add	x20, x0, #0x18
    a8a0:	mov	x19, x0
    a8a4:	mov	x0, x20
    a8a8:	bl	27f98 <PyInit__decimal@@Base+0xda18>
    a8ac:	cbz	w0, a908 <PyFloat_FromString@plt+0x3e78>
    a8b0:	mov	x0, x20
    a8b4:	bl	27fe8 <PyInit__decimal@@Base+0xda68>
    a8b8:	cbnz	w0, a958 <PyFloat_FromString@plt+0x3ec8>
    a8bc:	mov	x0, x20
    a8c0:	bl	27fa8 <PyInit__decimal@@Base+0xda28>
    a8c4:	cbz	w0, a944 <PyFloat_FromString@plt+0x3eb4>
    a8c8:	adrp	x0, 3c000 <PyInit__decimal@@Base+0x21a80>
    a8cc:	add	x0, x0, #0x70
    a8d0:	bl	6960 <PyUnicode_FromString@plt>
    a8d4:	mov	x19, x0
    a8d8:	cbz	x19, a918 <PyFloat_FromString@plt+0x3e88>
    a8dc:	mov	x0, x19
    a8e0:	bl	6a90 <PyFloat_FromString@plt>
    a8e4:	ldr	x1, [x19]
    a8e8:	mov	x20, x0
    a8ec:	sub	x1, x1, #0x1
    a8f0:	str	x1, [x19]
    a8f4:	cbz	x1, a92c <PyFloat_FromString@plt+0x3e9c>
    a8f8:	mov	x0, x20
    a8fc:	ldp	x19, x20, [sp, #16]
    a900:	ldp	x29, x30, [sp], #32
    a904:	ret
    a908:	mov	x0, x19
    a90c:	bl	a7b0 <PyFloat_FromString@plt+0x3d20>
    a910:	mov	x19, x0
    a914:	cbnz	x19, a8dc <PyFloat_FromString@plt+0x3e4c>
    a918:	mov	x20, #0x0                   	// #0
    a91c:	mov	x0, x20
    a920:	ldp	x19, x20, [sp, #16]
    a924:	ldp	x29, x30, [sp], #32
    a928:	ret
    a92c:	mov	x0, x19
    a930:	bl	65d0 <_Py_Dealloc@plt>
    a934:	mov	x0, x20
    a938:	ldp	x19, x20, [sp, #16]
    a93c:	ldp	x29, x30, [sp], #32
    a940:	ret
    a944:	adrp	x0, 3c000 <PyInit__decimal@@Base+0x21a80>
    a948:	add	x0, x0, #0x78
    a94c:	bl	6960 <PyUnicode_FromString@plt>
    a950:	mov	x19, x0
    a954:	b	a8d8 <PyFloat_FromString@plt+0x3e48>
    a958:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
    a95c:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
    a960:	mov	x20, #0x0                   	// #0
    a964:	add	x1, x1, #0x48
    a968:	ldr	x0, [x0, #3928]
    a96c:	ldr	x0, [x0]
    a970:	bl	6650 <PyErr_SetString@plt>
    a974:	b	a8f8 <PyFloat_FromString@plt+0x3e68>
    a978:	stp	x29, x30, [sp, #-32]!
    a97c:	mov	x29, sp
    a980:	bl	a890 <PyFloat_FromString@plt+0x3e00>
    a984:	cbz	x0, a9e0 <PyFloat_FromString@plt+0x3f50>
    a988:	str	x19, [sp, #16]
    a98c:	mov	x19, x0
    a990:	str	d8, [sp, #24]
    a994:	bl	68c0 <PyFloat_AsDouble@plt>
    a998:	fmov	d8, d0
    a99c:	ldr	x0, [x19]
    a9a0:	sub	x0, x0, #0x1
    a9a4:	str	x0, [x19]
    a9a8:	cbz	x0, a9ec <PyFloat_FromString@plt+0x3f5c>
    a9ac:	fmov	d0, #-1.000000000000000000e+00
    a9b0:	fcmp	d8, d0
    a9b4:	b.ne	a9c0 <PyFloat_FromString@plt+0x3f30>  // b.any
    a9b8:	bl	67e0 <PyErr_Occurred@plt>
    a9bc:	cbnz	x0, a9d8 <PyFloat_FromString@plt+0x3f48>
    a9c0:	fmov	d0, d8
    a9c4:	ldr	d8, [sp, #24]
    a9c8:	ldr	x19, [sp, #16]
    a9cc:	movi	d1, #0x0
    a9d0:	ldp	x29, x30, [sp], #32
    a9d4:	b	6a00 <PyComplex_FromDoubles@plt>
    a9d8:	ldr	x19, [sp, #16]
    a9dc:	ldr	d8, [sp, #24]
    a9e0:	mov	x0, #0x0                   	// #0
    a9e4:	ldp	x29, x30, [sp], #32
    a9e8:	ret
    a9ec:	mov	x0, x19
    a9f0:	bl	65d0 <_Py_Dealloc@plt>
    a9f4:	b	a9ac <PyFloat_FromString@plt+0x3f1c>
    a9f8:	stp	x29, x30, [sp, #-32]!
    a9fc:	mov	x29, sp
    aa00:	stp	x19, x20, [sp, #16]
    aa04:	mov	x20, x0
    aa08:	bl	a7b0 <PyFloat_FromString@plt+0x3d20>
    aa0c:	cbz	x0, aa64 <PyFloat_FromString@plt+0x3fd4>
    aa10:	ldr	x1, [x20, #8]
    aa14:	mov	x19, x0
    aa18:	mov	x2, x19
    aa1c:	adrp	x0, 3c000 <PyInit__decimal@@Base+0x21a80>
    aa20:	add	x0, x0, #0x80
    aa24:	bl	67d0 <Py_BuildValue@plt>
    aa28:	mov	x20, x0
    aa2c:	ldr	x1, [x19]
    aa30:	sub	x1, x1, #0x1
    aa34:	str	x1, [x19]
    aa38:	cbz	x1, aa4c <PyFloat_FromString@plt+0x3fbc>
    aa3c:	mov	x0, x20
    aa40:	ldp	x19, x20, [sp, #16]
    aa44:	ldp	x29, x30, [sp], #32
    aa48:	ret
    aa4c:	mov	x0, x19
    aa50:	bl	65d0 <_Py_Dealloc@plt>
    aa54:	mov	x0, x20
    aa58:	ldp	x19, x20, [sp, #16]
    aa5c:	ldp	x29, x30, [sp], #32
    aa60:	ret
    aa64:	mov	x20, #0x0                   	// #0
    aa68:	mov	x0, x20
    aa6c:	ldp	x19, x20, [sp, #16]
    aa70:	ldp	x29, x30, [sp], #32
    aa74:	ret
    aa78:	stp	x29, x30, [sp, #-64]!
    aa7c:	adrp	x2, 5f000 <PyInit__decimal@@Base+0x44a80>
    aa80:	mov	x29, sp
    aa84:	stp	x21, x22, [sp, #32]
    aa88:	mov	x21, x0
    aa8c:	mov	x22, x1
    aa90:	ldr	x0, [x2, #1808]
    aa94:	mov	x1, #0x0                   	// #0
    aa98:	add	x2, sp, #0x38
    aa9c:	stp	x19, x20, [sp, #16]
    aaa0:	bl	6740 <PyContextVar_Get@plt>
    aaa4:	tbnz	w0, #31, ab34 <PyFloat_FromString@plt+0x40a4>
    aaa8:	ldr	x19, [sp, #56]
    aaac:	cbz	x19, ab28 <PyFloat_FromString@plt+0x4098>
    aab0:	ldr	x2, [x19]
    aab4:	sub	x2, x2, #0x1
    aab8:	str	x2, [x19]
    aabc:	cbz	x2, ab4c <PyFloat_FromString@plt+0x40bc>
    aac0:	adrp	x20, 5d000 <PyInit__decimal@@Base+0x42a80>
    aac4:	add	x20, x20, #0x320
    aac8:	add	x20, x20, #0x1a0
    aacc:	mov	x2, x19
    aad0:	mov	x0, x20
    aad4:	mov	x1, x22
    aad8:	bl	8430 <PyFloat_FromString@plt+0x19a0>
    aadc:	mov	x19, x0
    aae0:	cmp	x21, x20
    aae4:	mov	x20, x0
    aae8:	b.eq	ab14 <PyFloat_FromString@plt+0x4084>  // b.none
    aaec:	cbz	x0, ab34 <PyFloat_FromString@plt+0x40a4>
    aaf0:	mov	x1, x0
    aaf4:	mov	x2, #0x0                   	// #0
    aaf8:	mov	x0, x21
    aafc:	bl	6850 <PyObject_CallFunctionObjArgs@plt>
    ab00:	ldr	x1, [x20]
    ab04:	mov	x19, x0
    ab08:	sub	x0, x1, #0x1
    ab0c:	str	x0, [x20]
    ab10:	cbz	x0, ab58 <PyFloat_FromString@plt+0x40c8>
    ab14:	mov	x0, x19
    ab18:	ldp	x19, x20, [sp, #16]
    ab1c:	ldp	x21, x22, [sp, #32]
    ab20:	ldp	x29, x30, [sp], #64
    ab24:	ret
    ab28:	bl	7320 <PyFloat_FromString@plt+0x890>
    ab2c:	mov	x19, x0
    ab30:	cbnz	x0, aab0 <PyFloat_FromString@plt+0x4020>
    ab34:	mov	x19, #0x0                   	// #0
    ab38:	mov	x0, x19
    ab3c:	ldp	x19, x20, [sp, #16]
    ab40:	ldp	x21, x22, [sp, #32]
    ab44:	ldp	x29, x30, [sp], #64
    ab48:	ret
    ab4c:	mov	x0, x19
    ab50:	bl	65d0 <_Py_Dealloc@plt>
    ab54:	b	aac0 <PyFloat_FromString@plt+0x4030>
    ab58:	mov	x0, x20
    ab5c:	bl	65d0 <_Py_Dealloc@plt>
    ab60:	mov	x0, x19
    ab64:	ldp	x19, x20, [sp, #16]
    ab68:	ldp	x21, x22, [sp, #32]
    ab6c:	ldp	x29, x30, [sp], #64
    ab70:	ret
    ab74:	nop
    ab78:	stp	x29, x30, [sp, #-80]!
    ab7c:	adrp	x3, 5f000 <PyInit__decimal@@Base+0x44a80>
    ab80:	mov	x1, #0x0                   	// #0
    ab84:	mov	x29, sp
    ab88:	str	x21, [sp, #32]
    ab8c:	mov	x21, x0
    ab90:	ldr	x0, [x3, #1808]
    ab94:	add	x2, sp, #0x48
    ab98:	stp	x19, x20, [sp, #16]
    ab9c:	str	wzr, [sp, #68]
    aba0:	bl	6740 <PyContextVar_Get@plt>
    aba4:	tbnz	w0, #31, ac20 <PyFloat_FromString@plt+0x4190>
    aba8:	ldr	x19, [sp, #72]
    abac:	cbz	x19, ac44 <PyFloat_FromString@plt+0x41b4>
    abb0:	ldr	x1, [x19]
    abb4:	sub	x1, x1, #0x1
    abb8:	str	x1, [x19]
    abbc:	cbz	x1, ac38 <PyFloat_FromString@plt+0x41a8>
    abc0:	adrp	x0, 5d000 <PyInit__decimal@@Base+0x42a80>
    abc4:	add	x0, x0, #0x320
    abc8:	add	x0, x0, #0x1a0
    abcc:	bl	6c60 <PyFloat_FromString@plt+0x1d0>
    abd0:	mov	x20, x0
    abd4:	cbz	x0, ac20 <PyFloat_FromString@plt+0x4190>
    abd8:	add	x1, x21, #0x18
    abdc:	add	x0, x0, #0x18
    abe0:	add	x3, sp, #0x44
    abe4:	add	x2, x19, #0x10
    abe8:	bl	35298 <PyInit__decimal@@Base+0x1ad18>
    abec:	ldr	w1, [sp, #68]
    abf0:	mov	x0, x19
    abf4:	bl	7f90 <PyFloat_FromString@plt+0x1500>
    abf8:	cbnz	w0, ac10 <PyFloat_FromString@plt+0x4180>
    abfc:	mov	x0, x20
    ac00:	ldp	x19, x20, [sp, #16]
    ac04:	ldr	x21, [sp, #32]
    ac08:	ldp	x29, x30, [sp], #80
    ac0c:	ret
    ac10:	ldr	x0, [x20]
    ac14:	sub	x0, x0, #0x1
    ac18:	str	x0, [x20]
    ac1c:	cbz	x0, ac5c <PyFloat_FromString@plt+0x41cc>
    ac20:	mov	x20, #0x0                   	// #0
    ac24:	mov	x0, x20
    ac28:	ldp	x19, x20, [sp, #16]
    ac2c:	ldr	x21, [sp, #32]
    ac30:	ldp	x29, x30, [sp], #80
    ac34:	ret
    ac38:	mov	x0, x19
    ac3c:	bl	65d0 <_Py_Dealloc@plt>
    ac40:	b	abc0 <PyFloat_FromString@plt+0x4130>
    ac44:	bl	7320 <PyFloat_FromString@plt+0x890>
    ac48:	str	x0, [sp, #56]
    ac4c:	mov	x19, x0
    ac50:	cbnz	x0, abb0 <PyFloat_FromString@plt+0x4120>
    ac54:	mov	x20, #0x0                   	// #0
    ac58:	b	ac24 <PyFloat_FromString@plt+0x4194>
    ac5c:	mov	x0, x20
    ac60:	mov	x20, #0x0                   	// #0
    ac64:	bl	65d0 <_Py_Dealloc@plt>
    ac68:	b	abfc <PyFloat_FromString@plt+0x416c>
    ac6c:	nop
    ac70:	stp	x29, x30, [sp, #-64]!
    ac74:	adrp	x3, 5f000 <PyInit__decimal@@Base+0x44a80>
    ac78:	mov	x1, #0x0                   	// #0
    ac7c:	mov	x29, sp
    ac80:	str	x21, [sp, #32]
    ac84:	mov	x21, x0
    ac88:	ldr	x0, [x3, #1808]
    ac8c:	add	x2, sp, #0x38
    ac90:	stp	x19, x20, [sp, #16]
    ac94:	str	wzr, [sp, #52]
    ac98:	bl	6740 <PyContextVar_Get@plt>
    ac9c:	tbnz	w0, #31, ad18 <PyFloat_FromString@plt+0x4288>
    aca0:	ldr	x19, [sp, #56]
    aca4:	cbz	x19, ad3c <PyFloat_FromString@plt+0x42ac>
    aca8:	ldr	x1, [x19]
    acac:	sub	x1, x1, #0x1
    acb0:	str	x1, [x19]
    acb4:	cbz	x1, ad30 <PyFloat_FromString@plt+0x42a0>
    acb8:	adrp	x0, 5d000 <PyInit__decimal@@Base+0x42a80>
    acbc:	add	x0, x0, #0x320
    acc0:	add	x0, x0, #0x1a0
    acc4:	bl	6c60 <PyFloat_FromString@plt+0x1d0>
    acc8:	mov	x20, x0
    accc:	cbz	x0, ad18 <PyFloat_FromString@plt+0x4288>
    acd0:	add	x1, x21, #0x18
    acd4:	add	x0, x0, #0x18
    acd8:	add	x3, sp, #0x34
    acdc:	add	x2, x19, #0x10
    ace0:	bl	35370 <PyInit__decimal@@Base+0x1adf0>
    ace4:	ldr	w1, [sp, #52]
    ace8:	mov	x0, x19
    acec:	bl	7f90 <PyFloat_FromString@plt+0x1500>
    acf0:	cbnz	w0, ad08 <PyFloat_FromString@plt+0x4278>
    acf4:	mov	x0, x20
    acf8:	ldp	x19, x20, [sp, #16]
    acfc:	ldr	x21, [sp, #32]
    ad00:	ldp	x29, x30, [sp], #64
    ad04:	ret
    ad08:	ldr	x0, [x20]
    ad0c:	sub	x0, x0, #0x1
    ad10:	str	x0, [x20]
    ad14:	cbz	x0, ad50 <PyFloat_FromString@plt+0x42c0>
    ad18:	mov	x20, #0x0                   	// #0
    ad1c:	mov	x0, x20
    ad20:	ldp	x19, x20, [sp, #16]
    ad24:	ldr	x21, [sp, #32]
    ad28:	ldp	x29, x30, [sp], #64
    ad2c:	ret
    ad30:	mov	x0, x19
    ad34:	bl	65d0 <_Py_Dealloc@plt>
    ad38:	b	acb8 <PyFloat_FromString@plt+0x4228>
    ad3c:	bl	7320 <PyFloat_FromString@plt+0x890>
    ad40:	mov	x19, x0
    ad44:	cbnz	x0, aca8 <PyFloat_FromString@plt+0x4218>
    ad48:	mov	x20, #0x0                   	// #0
    ad4c:	b	ad1c <PyFloat_FromString@plt+0x428c>
    ad50:	mov	x0, x20
    ad54:	mov	x20, #0x0                   	// #0
    ad58:	bl	65d0 <_Py_Dealloc@plt>
    ad5c:	b	acf4 <PyFloat_FromString@plt+0x4264>
    ad60:	stp	x29, x30, [sp, #-64]!
    ad64:	adrp	x3, 5f000 <PyInit__decimal@@Base+0x44a80>
    ad68:	mov	x1, #0x0                   	// #0
    ad6c:	mov	x29, sp
    ad70:	str	x21, [sp, #32]
    ad74:	mov	x21, x0
    ad78:	ldr	x0, [x3, #1808]
    ad7c:	add	x2, sp, #0x38
    ad80:	stp	x19, x20, [sp, #16]
    ad84:	str	wzr, [sp, #52]
    ad88:	bl	6740 <PyContextVar_Get@plt>
    ad8c:	tbnz	w0, #31, ae08 <PyFloat_FromString@plt+0x4378>
    ad90:	ldr	x19, [sp, #56]
    ad94:	cbz	x19, ae2c <PyFloat_FromString@plt+0x439c>
    ad98:	ldr	x1, [x19]
    ad9c:	sub	x1, x1, #0x1
    ada0:	str	x1, [x19]
    ada4:	cbz	x1, ae20 <PyFloat_FromString@plt+0x4390>
    ada8:	adrp	x0, 5d000 <PyInit__decimal@@Base+0x42a80>
    adac:	add	x0, x0, #0x320
    adb0:	add	x0, x0, #0x1a0
    adb4:	bl	6c60 <PyFloat_FromString@plt+0x1d0>
    adb8:	mov	x20, x0
    adbc:	cbz	x0, ae08 <PyFloat_FromString@plt+0x4378>
    adc0:	add	x1, x21, #0x18
    adc4:	add	x0, x0, #0x18
    adc8:	add	x3, sp, #0x34
    adcc:	add	x2, x19, #0x10
    add0:	bl	35438 <PyInit__decimal@@Base+0x1aeb8>
    add4:	ldr	w1, [sp, #52]
    add8:	mov	x0, x19
    addc:	bl	7f90 <PyFloat_FromString@plt+0x1500>
    ade0:	cbnz	w0, adf8 <PyFloat_FromString@plt+0x4368>
    ade4:	mov	x0, x20
    ade8:	ldp	x19, x20, [sp, #16]
    adec:	ldr	x21, [sp, #32]
    adf0:	ldp	x29, x30, [sp], #64
    adf4:	ret
    adf8:	ldr	x0, [x20]
    adfc:	sub	x0, x0, #0x1
    ae00:	str	x0, [x20]
    ae04:	cbz	x0, ae40 <PyFloat_FromString@plt+0x43b0>
    ae08:	mov	x20, #0x0                   	// #0
    ae0c:	mov	x0, x20
    ae10:	ldp	x19, x20, [sp, #16]
    ae14:	ldr	x21, [sp, #32]
    ae18:	ldp	x29, x30, [sp], #64
    ae1c:	ret
    ae20:	mov	x0, x19
    ae24:	bl	65d0 <_Py_Dealloc@plt>
    ae28:	b	ada8 <PyFloat_FromString@plt+0x4318>
    ae2c:	bl	7320 <PyFloat_FromString@plt+0x890>
    ae30:	mov	x19, x0
    ae34:	cbnz	x0, ad98 <PyFloat_FromString@plt+0x4308>
    ae38:	mov	x20, #0x0                   	// #0
    ae3c:	b	ae0c <PyFloat_FromString@plt+0x437c>
    ae40:	mov	x0, x20
    ae44:	mov	x20, #0x0                   	// #0
    ae48:	bl	65d0 <_Py_Dealloc@plt>
    ae4c:	b	ade4 <PyFloat_FromString@plt+0x4354>
    ae50:	stp	x29, x30, [sp, #-64]!
    ae54:	mov	x29, sp
    ae58:	str	x21, [sp, #32]
    ae5c:	mov	x21, x0
    ae60:	str	x0, [sp, #56]
    ae64:	ldr	x0, [x1, #8]
    ae68:	stp	x19, x20, [sp, #16]
    ae6c:	adrp	x19, 5d000 <PyInit__decimal@@Base+0x42a80>
    ae70:	add	x19, x19, #0x320
    ae74:	mov	x20, x1
    ae78:	add	x19, x19, #0x1a0
    ae7c:	cmp	x0, x19
    ae80:	b.eq	aecc <PyFloat_FromString@plt+0x443c>  // b.none
    ae84:	mov	x1, x19
    ae88:	bl	69c0 <PyType_IsSubtype@plt>
    ae8c:	cbnz	w0, aecc <PyFloat_FromString@plt+0x443c>
    ae90:	ldr	x2, [x20, #8]
    ae94:	ldr	x0, [x2, #168]
    ae98:	tbnz	w0, #24, aeec <PyFloat_FromString@plt+0x445c>
    ae9c:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
    aea0:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
    aea4:	ldr	x2, [x2, #24]
    aea8:	add	x1, x1, #0x8
    aeac:	ldr	x0, [x0, #3936]
    aeb0:	ldr	x0, [x0]
    aeb4:	bl	6a10 <PyErr_Format@plt>
    aeb8:	mov	x0, #0x0                   	// #0
    aebc:	ldp	x19, x20, [sp, #16]
    aec0:	ldr	x21, [sp, #32]
    aec4:	ldp	x29, x30, [sp], #64
    aec8:	ret
    aecc:	ldr	x1, [x20]
    aed0:	mov	x0, x20
    aed4:	ldr	x21, [sp, #32]
    aed8:	add	x1, x1, #0x1
    aedc:	str	x1, [x20]
    aee0:	ldp	x19, x20, [sp, #16]
    aee4:	ldp	x29, x30, [sp], #64
    aee8:	ret
    aeec:	mov	x2, x21
    aef0:	mov	x1, x20
    aef4:	mov	x0, x19
    aef8:	ldp	x19, x20, [sp, #16]
    aefc:	ldr	x21, [sp, #32]
    af00:	ldp	x29, x30, [sp], #64
    af04:	b	82f8 <PyFloat_FromString@plt+0x1868>
    af08:	stp	x29, x30, [sp, #-48]!
    af0c:	mov	x29, sp
    af10:	str	x21, [sp, #32]
    af14:	mov	x21, x0
    af18:	ldr	x0, [x1, #8]
    af1c:	stp	x19, x20, [sp, #16]
    af20:	adrp	x20, 5d000 <PyInit__decimal@@Base+0x42a80>
    af24:	add	x20, x20, #0x320
    af28:	mov	x19, x1
    af2c:	add	x20, x20, #0x1a0
    af30:	cmp	x0, x20
    af34:	b.eq	af84 <PyFloat_FromString@plt+0x44f4>  // b.none
    af38:	mov	x1, x20
    af3c:	bl	69c0 <PyType_IsSubtype@plt>
    af40:	cbnz	w0, af84 <PyFloat_FromString@plt+0x44f4>
    af44:	ldr	x2, [x19, #8]
    af48:	ldr	x0, [x2, #168]
    af4c:	tbnz	w0, #24, afcc <PyFloat_FromString@plt+0x453c>
    af50:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
    af54:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
    af58:	ldr	x2, [x2, #24]
    af5c:	add	x1, x1, #0x8
    af60:	ldr	x0, [x0, #3936]
    af64:	mov	x20, #0x0                   	// #0
    af68:	ldr	x0, [x0]
    af6c:	bl	6a10 <PyErr_Format@plt>
    af70:	mov	x0, x20
    af74:	ldp	x19, x20, [sp, #16]
    af78:	ldr	x21, [sp, #32]
    af7c:	ldp	x29, x30, [sp], #48
    af80:	ret
    af84:	ldr	x0, [x19]
    af88:	add	x0, x0, #0x1
    af8c:	str	x0, [x19]
    af90:	mov	x1, x21
    af94:	mov	x0, x19
    af98:	bl	8848 <PyFloat_FromString@plt+0x1db8>
    af9c:	mov	x20, x0
    afa0:	ldr	x1, [x19]
    afa4:	sub	x0, x1, #0x1
    afa8:	str	x0, [x19]
    afac:	cbnz	x0, af70 <PyFloat_FromString@plt+0x44e0>
    afb0:	mov	x0, x19
    afb4:	bl	65d0 <_Py_Dealloc@plt>
    afb8:	mov	x0, x20
    afbc:	ldp	x19, x20, [sp, #16]
    afc0:	ldr	x21, [sp, #32]
    afc4:	ldp	x29, x30, [sp], #48
    afc8:	ret
    afcc:	mov	x1, x19
    afd0:	mov	x0, x20
    afd4:	mov	x2, x21
    afd8:	mov	x20, #0x0                   	// #0
    afdc:	bl	82f8 <PyFloat_FromString@plt+0x1868>
    afe0:	mov	x19, x0
    afe4:	cbnz	x0, af90 <PyFloat_FromString@plt+0x4500>
    afe8:	b	af70 <PyFloat_FromString@plt+0x44e0>
    afec:	nop
    aff0:	stp	x29, x30, [sp, #-48]!
    aff4:	mov	x29, sp
    aff8:	str	x21, [sp, #32]
    affc:	mov	x21, x0
    b000:	ldr	x0, [x1, #8]
    b004:	stp	x19, x20, [sp, #16]
    b008:	adrp	x20, 5d000 <PyInit__decimal@@Base+0x42a80>
    b00c:	add	x20, x20, #0x320
    b010:	mov	x19, x1
    b014:	add	x20, x20, #0x1a0
    b018:	cmp	x0, x20
    b01c:	b.eq	b068 <PyFloat_FromString@plt+0x45d8>  // b.none
    b020:	mov	x1, x20
    b024:	bl	69c0 <PyType_IsSubtype@plt>
    b028:	cbnz	w0, b068 <PyFloat_FromString@plt+0x45d8>
    b02c:	ldr	x2, [x19, #8]
    b030:	ldr	x0, [x2, #168]
    b034:	tbnz	w0, #24, b0c4 <PyFloat_FromString@plt+0x4634>
    b038:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
    b03c:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
    b040:	ldr	x2, [x2, #24]
    b044:	add	x1, x1, #0x8
    b048:	ldr	x0, [x0, #3936]
    b04c:	ldr	x0, [x0]
    b050:	bl	6a10 <PyErr_Format@plt>
    b054:	mov	x0, #0x0                   	// #0
    b058:	ldp	x19, x20, [sp, #16]
    b05c:	ldr	x21, [sp, #32]
    b060:	ldp	x29, x30, [sp], #48
    b064:	ret
    b068:	ldr	x0, [x19]
    b06c:	add	x0, x0, #0x1
    b070:	str	x0, [x19]
    b074:	add	x1, x21, #0x10
    b078:	add	x0, x19, #0x18
    b07c:	bl	2ce90 <PyInit__decimal@@Base+0x12910>
    b080:	mov	x20, x0
    b084:	ldr	x1, [x19]
    b088:	sub	x1, x1, #0x1
    b08c:	str	x1, [x19]
    b090:	cbz	x1, b0a8 <PyFloat_FromString@plt+0x4618>
    b094:	mov	x0, x20
    b098:	ldp	x19, x20, [sp, #16]
    b09c:	ldr	x21, [sp, #32]
    b0a0:	ldp	x29, x30, [sp], #48
    b0a4:	b	6960 <PyUnicode_FromString@plt>
    b0a8:	mov	x0, x19
    b0ac:	bl	65d0 <_Py_Dealloc@plt>
    b0b0:	mov	x0, x20
    b0b4:	ldp	x19, x20, [sp, #16]
    b0b8:	ldr	x21, [sp, #32]
    b0bc:	ldp	x29, x30, [sp], #48
    b0c0:	b	6960 <PyUnicode_FromString@plt>
    b0c4:	mov	x1, x19
    b0c8:	mov	x0, x20
    b0cc:	mov	x2, x21
    b0d0:	bl	82f8 <PyFloat_FromString@plt+0x1868>
    b0d4:	mov	x19, x0
    b0d8:	cbnz	x0, b074 <PyFloat_FromString@plt+0x45e4>
    b0dc:	b	b054 <PyFloat_FromString@plt+0x45c4>
    b0e0:	stp	x29, x30, [sp, #-64]!
    b0e4:	adrp	x3, 5f000 <PyInit__decimal@@Base+0x44a80>
    b0e8:	mov	x29, sp
    b0ec:	stp	x19, x20, [sp, #16]
    b0f0:	adrp	x20, 5c000 <PyInit__decimal@@Base+0x41a80>
    b0f4:	ldr	x0, [x3, #1808]
    b0f8:	stp	x21, x22, [sp, #32]
    b0fc:	mov	x21, x1
    b100:	ldr	x3, [x20, #4008]
    b104:	mov	x22, x2
    b108:	mov	x1, #0x0                   	// #0
    b10c:	add	x2, sp, #0x38
    b110:	str	x3, [sp, #48]
    b114:	bl	6740 <PyContextVar_Get@plt>
    b118:	tbnz	w0, #31, b1e8 <PyFloat_FromString@plt+0x4758>
    b11c:	ldr	x19, [sp, #56]
    b120:	cbz	x19, b20c <PyFloat_FromString@plt+0x477c>
    b124:	ldr	x0, [x19]
    b128:	sub	x0, x0, #0x1
    b12c:	str	x0, [x19]
    b130:	cbz	x0, b200 <PyFloat_FromString@plt+0x4770>
    b134:	adrp	x3, 5d000 <PyInit__decimal@@Base+0x42a80>
    b138:	add	x3, x3, #0x9a0
    b13c:	adrp	x2, 3b000 <PyInit__decimal@@Base+0x20a80>
    b140:	mov	x1, x22
    b144:	mov	x0, x21
    b148:	add	x3, x3, #0x2c0
    b14c:	add	x4, sp, #0x30
    b150:	add	x2, x2, #0xfd8
    b154:	bl	6520 <PyArg_ParseTupleAndKeywords@plt>
    b158:	cbz	w0, b1e8 <PyFloat_FromString@plt+0x4758>
    b15c:	ldr	x20, [x20, #4008]
    b160:	ldr	x0, [sp, #48]
    b164:	cmp	x0, x20
    b168:	b.eq	b220 <PyFloat_FromString@plt+0x4790>  // b.none
    b16c:	ldr	x0, [x0, #8]
    b170:	adrp	x20, 5d000 <PyInit__decimal@@Base+0x42a80>
    b174:	add	x1, x20, #0x320
    b178:	cmp	x0, x1
    b17c:	b.eq	b188 <PyFloat_FromString@plt+0x46f8>  // b.none
    b180:	bl	69c0 <PyType_IsSubtype@plt>
    b184:	cbz	w0, b22c <PyFloat_FromString@plt+0x479c>
    b188:	add	x0, x20, #0x320
    b18c:	add	x0, x0, #0x340
    b190:	bl	6950 <_PyObject_New@plt>
    b194:	mov	x20, x0
    b198:	cbz	x0, b1e8 <PyFloat_FromString@plt+0x4758>
    b19c:	ldr	x0, [sp, #48]
    b1a0:	mov	x1, #0x0                   	// #0
    b1a4:	bl	6c08 <PyFloat_FromString@plt+0x178>
    b1a8:	str	x0, [x20, #16]
    b1ac:	cbz	x0, b1d4 <PyFloat_FromString@plt+0x4744>
    b1b0:	ldr	x0, [x19]
    b1b4:	str	x19, [x20, #24]
    b1b8:	add	x0, x0, #0x1
    b1bc:	str	x0, [x19]
    b1c0:	mov	x0, x20
    b1c4:	ldp	x19, x20, [sp, #16]
    b1c8:	ldp	x21, x22, [sp, #32]
    b1cc:	ldp	x29, x30, [sp], #64
    b1d0:	ret
    b1d4:	ldr	x0, [x20]
    b1d8:	str	xzr, [x20, #24]
    b1dc:	sub	x0, x0, #0x1
    b1e0:	str	x0, [x20]
    b1e4:	cbz	x0, b24c <PyFloat_FromString@plt+0x47bc>
    b1e8:	mov	x20, #0x0                   	// #0
    b1ec:	mov	x0, x20
    b1f0:	ldp	x19, x20, [sp, #16]
    b1f4:	ldp	x21, x22, [sp, #32]
    b1f8:	ldp	x29, x30, [sp], #64
    b1fc:	ret
    b200:	mov	x0, x19
    b204:	bl	65d0 <_Py_Dealloc@plt>
    b208:	b	b134 <PyFloat_FromString@plt+0x46a4>
    b20c:	bl	7320 <PyFloat_FromString@plt+0x890>
    b210:	mov	x19, x0
    b214:	cbnz	x0, b124 <PyFloat_FromString@plt+0x4694>
    b218:	mov	x20, #0x0                   	// #0
    b21c:	b	b1ec <PyFloat_FromString@plt+0x475c>
    b220:	adrp	x20, 5d000 <PyInit__decimal@@Base+0x42a80>
    b224:	str	x19, [sp, #48]
    b228:	b	b188 <PyFloat_FromString@plt+0x46f8>
    b22c:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
    b230:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
    b234:	mov	x20, #0x0                   	// #0
    b238:	add	x1, x1, #0x88
    b23c:	ldr	x0, [x0, #3936]
    b240:	ldr	x0, [x0]
    b244:	bl	6650 <PyErr_SetString@plt>
    b248:	b	b1c0 <PyFloat_FromString@plt+0x4730>
    b24c:	mov	x0, x20
    b250:	mov	x20, #0x0                   	// #0
    b254:	bl	65d0 <_Py_Dealloc@plt>
    b258:	b	b1c0 <PyFloat_FromString@plt+0x4730>
    b25c:	nop
    b260:	stp	x29, x30, [sp, #-48]!
    b264:	mov	x29, sp
    b268:	str	x21, [sp, #32]
    b26c:	mov	x21, x0
    b270:	ldr	x0, [x1, #8]
    b274:	stp	x19, x20, [sp, #16]
    b278:	adrp	x20, 5d000 <PyInit__decimal@@Base+0x42a80>
    b27c:	add	x20, x20, #0x320
    b280:	mov	x19, x1
    b284:	add	x20, x20, #0x1a0
    b288:	cmp	x0, x20
    b28c:	b.eq	b2dc <PyFloat_FromString@plt+0x484c>  // b.none
    b290:	mov	x1, x20
    b294:	bl	69c0 <PyType_IsSubtype@plt>
    b298:	cbnz	w0, b2dc <PyFloat_FromString@plt+0x484c>
    b29c:	ldr	x2, [x19, #8]
    b2a0:	ldr	x0, [x2, #168]
    b2a4:	tbnz	w0, #24, b354 <PyFloat_FromString@plt+0x48c4>
    b2a8:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
    b2ac:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
    b2b0:	ldr	x2, [x2, #24]
    b2b4:	add	x1, x1, #0x8
    b2b8:	ldr	x0, [x0, #3936]
    b2bc:	mov	x20, #0x0                   	// #0
    b2c0:	ldr	x0, [x0]
    b2c4:	bl	6a10 <PyErr_Format@plt>
    b2c8:	mov	x0, x20
    b2cc:	ldp	x19, x20, [sp, #16]
    b2d0:	ldr	x21, [sp, #32]
    b2d4:	ldp	x29, x30, [sp], #48
    b2d8:	ret
    b2dc:	ldr	x0, [x19]
    b2e0:	add	x0, x0, #0x1
    b2e4:	str	x0, [x19]
    b2e8:	add	x0, x19, #0x18
    b2ec:	bl	28008 <PyInit__decimal@@Base+0xda88>
    b2f0:	cbnz	w0, b338 <PyFloat_FromString@plt+0x48a8>
    b2f4:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
    b2f8:	ldr	x0, [x0, #3976]
    b2fc:	mov	x20, x0
    b300:	ldr	x1, [x0]
    b304:	add	x1, x1, #0x1
    b308:	str	x1, [x0]
    b30c:	ldr	x0, [x19]
    b310:	sub	x0, x0, #0x1
    b314:	str	x0, [x19]
    b318:	cbnz	x0, b2c8 <PyFloat_FromString@plt+0x4838>
    b31c:	mov	x0, x19
    b320:	bl	65d0 <_Py_Dealloc@plt>
    b324:	mov	x0, x20
    b328:	ldp	x19, x20, [sp, #16]
    b32c:	ldr	x21, [sp, #32]
    b330:	ldp	x29, x30, [sp], #48
    b334:	ret
    b338:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
    b33c:	ldr	x0, [x0, #4024]
    b340:	mov	x20, x0
    b344:	ldr	x1, [x0]
    b348:	add	x1, x1, #0x1
    b34c:	str	x1, [x0]
    b350:	b	b30c <PyFloat_FromString@plt+0x487c>
    b354:	mov	x1, x19
    b358:	mov	x0, x20
    b35c:	mov	x2, x21
    b360:	mov	x20, #0x0                   	// #0
    b364:	bl	82f8 <PyFloat_FromString@plt+0x1868>
    b368:	mov	x19, x0
    b36c:	cbnz	x0, b2e8 <PyFloat_FromString@plt+0x4858>
    b370:	b	b2c8 <PyFloat_FromString@plt+0x4838>
    b374:	nop
    b378:	stp	x29, x30, [sp, #-48]!
    b37c:	mov	x29, sp
    b380:	str	x21, [sp, #32]
    b384:	mov	x21, x0
    b388:	ldr	x0, [x1, #8]
    b38c:	stp	x19, x20, [sp, #16]
    b390:	adrp	x20, 5d000 <PyInit__decimal@@Base+0x42a80>
    b394:	add	x20, x20, #0x320
    b398:	mov	x19, x1
    b39c:	add	x20, x20, #0x1a0
    b3a0:	cmp	x0, x20
    b3a4:	b.eq	b3f4 <PyFloat_FromString@plt+0x4964>  // b.none
    b3a8:	mov	x1, x20
    b3ac:	bl	69c0 <PyType_IsSubtype@plt>
    b3b0:	cbnz	w0, b3f4 <PyFloat_FromString@plt+0x4964>
    b3b4:	ldr	x2, [x19, #8]
    b3b8:	ldr	x0, [x2, #168]
    b3bc:	tbnz	w0, #24, b46c <PyFloat_FromString@plt+0x49dc>
    b3c0:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
    b3c4:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
    b3c8:	ldr	x2, [x2, #24]
    b3cc:	add	x1, x1, #0x8
    b3d0:	ldr	x0, [x0, #3936]
    b3d4:	mov	x20, #0x0                   	// #0
    b3d8:	ldr	x0, [x0]
    b3dc:	bl	6a10 <PyErr_Format@plt>
    b3e0:	mov	x0, x20
    b3e4:	ldp	x19, x20, [sp, #16]
    b3e8:	ldr	x21, [sp, #32]
    b3ec:	ldp	x29, x30, [sp], #48
    b3f0:	ret
    b3f4:	ldr	x0, [x19]
    b3f8:	add	x0, x0, #0x1
    b3fc:	str	x0, [x19]
    b400:	add	x0, x19, #0x18
    b404:	bl	27fe8 <PyInit__decimal@@Base+0xda68>
    b408:	cbnz	w0, b450 <PyFloat_FromString@plt+0x49c0>
    b40c:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
    b410:	ldr	x0, [x0, #3976]
    b414:	mov	x20, x0
    b418:	ldr	x1, [x0]
    b41c:	add	x1, x1, #0x1
    b420:	str	x1, [x0]
    b424:	ldr	x0, [x19]
    b428:	sub	x0, x0, #0x1
    b42c:	str	x0, [x19]
    b430:	cbnz	x0, b3e0 <PyFloat_FromString@plt+0x4950>
    b434:	mov	x0, x19
    b438:	bl	65d0 <_Py_Dealloc@plt>
    b43c:	mov	x0, x20
    b440:	ldp	x19, x20, [sp, #16]
    b444:	ldr	x21, [sp, #32]
    b448:	ldp	x29, x30, [sp], #48
    b44c:	ret
    b450:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
    b454:	ldr	x0, [x0, #4024]
    b458:	mov	x20, x0
    b45c:	ldr	x1, [x0]
    b460:	add	x1, x1, #0x1
    b464:	str	x1, [x0]
    b468:	b	b424 <PyFloat_FromString@plt+0x4994>
    b46c:	mov	x1, x19
    b470:	mov	x0, x20
    b474:	mov	x2, x21
    b478:	mov	x20, #0x0                   	// #0
    b47c:	bl	82f8 <PyFloat_FromString@plt+0x1868>
    b480:	mov	x19, x0
    b484:	cbnz	x0, b400 <PyFloat_FromString@plt+0x4970>
    b488:	b	b3e0 <PyFloat_FromString@plt+0x4950>
    b48c:	nop
    b490:	stp	x29, x30, [sp, #-48]!
    b494:	mov	x29, sp
    b498:	str	x21, [sp, #32]
    b49c:	mov	x21, x0
    b4a0:	ldr	x0, [x1, #8]
    b4a4:	stp	x19, x20, [sp, #16]
    b4a8:	adrp	x20, 5d000 <PyInit__decimal@@Base+0x42a80>
    b4ac:	add	x20, x20, #0x320
    b4b0:	mov	x19, x1
    b4b4:	add	x20, x20, #0x1a0
    b4b8:	cmp	x0, x20
    b4bc:	b.eq	b50c <PyFloat_FromString@plt+0x4a7c>  // b.none
    b4c0:	mov	x1, x20
    b4c4:	bl	69c0 <PyType_IsSubtype@plt>
    b4c8:	cbnz	w0, b50c <PyFloat_FromString@plt+0x4a7c>
    b4cc:	ldr	x2, [x19, #8]
    b4d0:	ldr	x0, [x2, #168]
    b4d4:	tbnz	w0, #24, b584 <PyFloat_FromString@plt+0x4af4>
    b4d8:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
    b4dc:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
    b4e0:	ldr	x2, [x2, #24]
    b4e4:	add	x1, x1, #0x8
    b4e8:	ldr	x0, [x0, #3936]
    b4ec:	mov	x20, #0x0                   	// #0
    b4f0:	ldr	x0, [x0]
    b4f4:	bl	6a10 <PyErr_Format@plt>
    b4f8:	mov	x0, x20
    b4fc:	ldp	x19, x20, [sp, #16]
    b500:	ldr	x21, [sp, #32]
    b504:	ldp	x29, x30, [sp], #48
    b508:	ret
    b50c:	ldr	x0, [x19]
    b510:	add	x0, x0, #0x1
    b514:	str	x0, [x19]
    b518:	add	x0, x19, #0x18
    b51c:	bl	27fd8 <PyInit__decimal@@Base+0xda58>
    b520:	cbnz	w0, b568 <PyFloat_FromString@plt+0x4ad8>
    b524:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
    b528:	ldr	x0, [x0, #3976]
    b52c:	mov	x20, x0
    b530:	ldr	x1, [x0]
    b534:	add	x1, x1, #0x1
    b538:	str	x1, [x0]
    b53c:	ldr	x0, [x19]
    b540:	sub	x0, x0, #0x1
    b544:	str	x0, [x19]
    b548:	cbnz	x0, b4f8 <PyFloat_FromString@plt+0x4a68>
    b54c:	mov	x0, x19
    b550:	bl	65d0 <_Py_Dealloc@plt>
    b554:	mov	x0, x20
    b558:	ldp	x19, x20, [sp, #16]
    b55c:	ldr	x21, [sp, #32]
    b560:	ldp	x29, x30, [sp], #48
    b564:	ret
    b568:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
    b56c:	ldr	x0, [x0, #4024]
    b570:	mov	x20, x0
    b574:	ldr	x1, [x0]
    b578:	add	x1, x1, #0x1
    b57c:	str	x1, [x0]
    b580:	b	b53c <PyFloat_FromString@plt+0x4aac>
    b584:	mov	x1, x19
    b588:	mov	x0, x20
    b58c:	mov	x2, x21
    b590:	mov	x20, #0x0                   	// #0
    b594:	bl	82f8 <PyFloat_FromString@plt+0x1868>
    b598:	mov	x19, x0
    b59c:	cbnz	x0, b518 <PyFloat_FromString@plt+0x4a88>
    b5a0:	b	b4f8 <PyFloat_FromString@plt+0x4a68>
    b5a4:	nop
    b5a8:	stp	x29, x30, [sp, #-48]!
    b5ac:	mov	x29, sp
    b5b0:	str	x21, [sp, #32]
    b5b4:	mov	x21, x0
    b5b8:	ldr	x0, [x1, #8]
    b5bc:	stp	x19, x20, [sp, #16]
    b5c0:	adrp	x20, 5d000 <PyInit__decimal@@Base+0x42a80>
    b5c4:	add	x20, x20, #0x320
    b5c8:	mov	x19, x1
    b5cc:	add	x20, x20, #0x1a0
    b5d0:	cmp	x0, x20
    b5d4:	b.eq	b624 <PyFloat_FromString@plt+0x4b94>  // b.none
    b5d8:	mov	x1, x20
    b5dc:	bl	69c0 <PyType_IsSubtype@plt>
    b5e0:	cbnz	w0, b624 <PyFloat_FromString@plt+0x4b94>
    b5e4:	ldr	x2, [x19, #8]
    b5e8:	ldr	x0, [x2, #168]
    b5ec:	tbnz	w0, #24, b69c <PyFloat_FromString@plt+0x4c0c>
    b5f0:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
    b5f4:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
    b5f8:	ldr	x2, [x2, #24]
    b5fc:	add	x1, x1, #0x8
    b600:	ldr	x0, [x0, #3936]
    b604:	mov	x20, #0x0                   	// #0
    b608:	ldr	x0, [x0]
    b60c:	bl	6a10 <PyErr_Format@plt>
    b610:	mov	x0, x20
    b614:	ldp	x19, x20, [sp, #16]
    b618:	ldr	x21, [sp, #32]
    b61c:	ldp	x29, x30, [sp], #48
    b620:	ret
    b624:	ldr	x0, [x19]
    b628:	add	x0, x0, #0x1
    b62c:	str	x0, [x19]
    b630:	add	x0, x19, #0x18
    b634:	bl	27f88 <PyInit__decimal@@Base+0xda08>
    b638:	cbnz	w0, b680 <PyFloat_FromString@plt+0x4bf0>
    b63c:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
    b640:	ldr	x0, [x0, #3976]
    b644:	mov	x20, x0
    b648:	ldr	x1, [x0]
    b64c:	add	x1, x1, #0x1
    b650:	str	x1, [x0]
    b654:	ldr	x0, [x19]
    b658:	sub	x0, x0, #0x1
    b65c:	str	x0, [x19]
    b660:	cbnz	x0, b610 <PyFloat_FromString@plt+0x4b80>
    b664:	mov	x0, x19
    b668:	bl	65d0 <_Py_Dealloc@plt>
    b66c:	mov	x0, x20
    b670:	ldp	x19, x20, [sp, #16]
    b674:	ldr	x21, [sp, #32]
    b678:	ldp	x29, x30, [sp], #48
    b67c:	ret
    b680:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
    b684:	ldr	x0, [x0, #4024]
    b688:	mov	x20, x0
    b68c:	ldr	x1, [x0]
    b690:	add	x1, x1, #0x1
    b694:	str	x1, [x0]
    b698:	b	b654 <PyFloat_FromString@plt+0x4bc4>
    b69c:	mov	x1, x19
    b6a0:	mov	x0, x20
    b6a4:	mov	x2, x21
    b6a8:	mov	x20, #0x0                   	// #0
    b6ac:	bl	82f8 <PyFloat_FromString@plt+0x1868>
    b6b0:	mov	x19, x0
    b6b4:	cbnz	x0, b630 <PyFloat_FromString@plt+0x4ba0>
    b6b8:	b	b610 <PyFloat_FromString@plt+0x4b80>
    b6bc:	nop
    b6c0:	stp	x29, x30, [sp, #-48]!
    b6c4:	mov	x29, sp
    b6c8:	str	x21, [sp, #32]
    b6cc:	mov	x21, x0
    b6d0:	ldr	x0, [x1, #8]
    b6d4:	stp	x19, x20, [sp, #16]
    b6d8:	adrp	x20, 5d000 <PyInit__decimal@@Base+0x42a80>
    b6dc:	add	x20, x20, #0x320
    b6e0:	mov	x19, x1
    b6e4:	add	x20, x20, #0x1a0
    b6e8:	cmp	x0, x20
    b6ec:	b.eq	b73c <PyFloat_FromString@plt+0x4cac>  // b.none
    b6f0:	mov	x1, x20
    b6f4:	bl	69c0 <PyType_IsSubtype@plt>
    b6f8:	cbnz	w0, b73c <PyFloat_FromString@plt+0x4cac>
    b6fc:	ldr	x2, [x19, #8]
    b700:	ldr	x0, [x2, #168]
    b704:	tbnz	w0, #24, b7b4 <PyFloat_FromString@plt+0x4d24>
    b708:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
    b70c:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
    b710:	ldr	x2, [x2, #24]
    b714:	add	x1, x1, #0x8
    b718:	ldr	x0, [x0, #3936]
    b71c:	mov	x20, #0x0                   	// #0
    b720:	ldr	x0, [x0]
    b724:	bl	6a10 <PyErr_Format@plt>
    b728:	mov	x0, x20
    b72c:	ldp	x19, x20, [sp, #16]
    b730:	ldr	x21, [sp, #32]
    b734:	ldp	x29, x30, [sp], #48
    b738:	ret
    b73c:	ldr	x0, [x19]
    b740:	add	x0, x0, #0x1
    b744:	str	x0, [x19]
    b748:	add	x0, x19, #0x18
    b74c:	bl	27fc8 <PyInit__decimal@@Base+0xda48>
    b750:	cbnz	w0, b798 <PyFloat_FromString@plt+0x4d08>
    b754:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
    b758:	ldr	x0, [x0, #3976]
    b75c:	mov	x20, x0
    b760:	ldr	x1, [x0]
    b764:	add	x1, x1, #0x1
    b768:	str	x1, [x0]
    b76c:	ldr	x0, [x19]
    b770:	sub	x0, x0, #0x1
    b774:	str	x0, [x19]
    b778:	cbnz	x0, b728 <PyFloat_FromString@plt+0x4c98>
    b77c:	mov	x0, x19
    b780:	bl	65d0 <_Py_Dealloc@plt>
    b784:	mov	x0, x20
    b788:	ldp	x19, x20, [sp, #16]
    b78c:	ldr	x21, [sp, #32]
    b790:	ldp	x29, x30, [sp], #48
    b794:	ret
    b798:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
    b79c:	ldr	x0, [x0, #4024]
    b7a0:	mov	x20, x0
    b7a4:	ldr	x1, [x0]
    b7a8:	add	x1, x1, #0x1
    b7ac:	str	x1, [x0]
    b7b0:	b	b76c <PyFloat_FromString@plt+0x4cdc>
    b7b4:	mov	x1, x19
    b7b8:	mov	x0, x20
    b7bc:	mov	x2, x21
    b7c0:	mov	x20, #0x0                   	// #0
    b7c4:	bl	82f8 <PyFloat_FromString@plt+0x1868>
    b7c8:	mov	x19, x0
    b7cc:	cbnz	x0, b748 <PyFloat_FromString@plt+0x4cb8>
    b7d0:	b	b728 <PyFloat_FromString@plt+0x4c98>
    b7d4:	nop
    b7d8:	stp	x29, x30, [sp, #-48]!
    b7dc:	mov	x29, sp
    b7e0:	str	x21, [sp, #32]
    b7e4:	mov	x21, x0
    b7e8:	ldr	x0, [x1, #8]
    b7ec:	stp	x19, x20, [sp, #16]
    b7f0:	adrp	x20, 5d000 <PyInit__decimal@@Base+0x42a80>
    b7f4:	add	x20, x20, #0x320
    b7f8:	mov	x19, x1
    b7fc:	add	x20, x20, #0x1a0
    b800:	cmp	x0, x20
    b804:	b.eq	b854 <PyFloat_FromString@plt+0x4dc4>  // b.none
    b808:	mov	x1, x20
    b80c:	bl	69c0 <PyType_IsSubtype@plt>
    b810:	cbnz	w0, b854 <PyFloat_FromString@plt+0x4dc4>
    b814:	ldr	x2, [x19, #8]
    b818:	ldr	x0, [x2, #168]
    b81c:	tbnz	w0, #24, b8cc <PyFloat_FromString@plt+0x4e3c>
    b820:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
    b824:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
    b828:	ldr	x2, [x2, #24]
    b82c:	add	x1, x1, #0x8
    b830:	ldr	x0, [x0, #3936]
    b834:	mov	x20, #0x0                   	// #0
    b838:	ldr	x0, [x0]
    b83c:	bl	6a10 <PyErr_Format@plt>
    b840:	mov	x0, x20
    b844:	ldp	x19, x20, [sp, #16]
    b848:	ldr	x21, [sp, #32]
    b84c:	ldp	x29, x30, [sp], #48
    b850:	ret
    b854:	ldr	x0, [x19]
    b858:	add	x0, x0, #0x1
    b85c:	str	x0, [x19]
    b860:	add	x0, x19, #0x18
    b864:	bl	27f78 <PyInit__decimal@@Base+0xd9f8>
    b868:	cbnz	w0, b8b0 <PyFloat_FromString@plt+0x4e20>
    b86c:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
    b870:	ldr	x0, [x0, #3976]
    b874:	mov	x20, x0
    b878:	ldr	x1, [x0]
    b87c:	add	x1, x1, #0x1
    b880:	str	x1, [x0]
    b884:	ldr	x0, [x19]
    b888:	sub	x0, x0, #0x1
    b88c:	str	x0, [x19]
    b890:	cbnz	x0, b840 <PyFloat_FromString@plt+0x4db0>
    b894:	mov	x0, x19
    b898:	bl	65d0 <_Py_Dealloc@plt>
    b89c:	mov	x0, x20
    b8a0:	ldp	x19, x20, [sp, #16]
    b8a4:	ldr	x21, [sp, #32]
    b8a8:	ldp	x29, x30, [sp], #48
    b8ac:	ret
    b8b0:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
    b8b4:	ldr	x0, [x0, #4024]
    b8b8:	mov	x20, x0
    b8bc:	ldr	x1, [x0]
    b8c0:	add	x1, x1, #0x1
    b8c4:	str	x1, [x0]
    b8c8:	b	b884 <PyFloat_FromString@plt+0x4df4>
    b8cc:	mov	x1, x19
    b8d0:	mov	x0, x20
    b8d4:	mov	x2, x21
    b8d8:	mov	x20, #0x0                   	// #0
    b8dc:	bl	82f8 <PyFloat_FromString@plt+0x1868>
    b8e0:	mov	x19, x0
    b8e4:	cbnz	x0, b860 <PyFloat_FromString@plt+0x4dd0>
    b8e8:	b	b840 <PyFloat_FromString@plt+0x4db0>
    b8ec:	nop
    b8f0:	stp	x29, x30, [sp, #-48]!
    b8f4:	mov	x29, sp
    b8f8:	str	x21, [sp, #32]
    b8fc:	mov	x21, x0
    b900:	ldr	x0, [x1, #8]
    b904:	stp	x19, x20, [sp, #16]
    b908:	adrp	x20, 5d000 <PyInit__decimal@@Base+0x42a80>
    b90c:	add	x20, x20, #0x320
    b910:	mov	x19, x1
    b914:	add	x20, x20, #0x1a0
    b918:	cmp	x0, x20
    b91c:	b.eq	b96c <PyFloat_FromString@plt+0x4edc>  // b.none
    b920:	mov	x1, x20
    b924:	bl	69c0 <PyType_IsSubtype@plt>
    b928:	cbnz	w0, b96c <PyFloat_FromString@plt+0x4edc>
    b92c:	ldr	x2, [x19, #8]
    b930:	ldr	x0, [x2, #168]
    b934:	tbnz	w0, #24, b9e4 <PyFloat_FromString@plt+0x4f54>
    b938:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
    b93c:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
    b940:	ldr	x2, [x2, #24]
    b944:	add	x1, x1, #0x8
    b948:	ldr	x0, [x0, #3936]
    b94c:	mov	x20, #0x0                   	// #0
    b950:	ldr	x0, [x0]
    b954:	bl	6a10 <PyErr_Format@plt>
    b958:	mov	x0, x20
    b95c:	ldp	x19, x20, [sp, #16]
    b960:	ldr	x21, [sp, #32]
    b964:	ldp	x29, x30, [sp], #48
    b968:	ret
    b96c:	ldr	x0, [x19]
    b970:	add	x0, x0, #0x1
    b974:	str	x0, [x19]
    b978:	add	x0, x19, #0x18
    b97c:	bl	27f98 <PyInit__decimal@@Base+0xda18>
    b980:	cbnz	w0, b9c8 <PyFloat_FromString@plt+0x4f38>
    b984:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
    b988:	ldr	x0, [x0, #3976]
    b98c:	mov	x20, x0
    b990:	ldr	x1, [x0]
    b994:	add	x1, x1, #0x1
    b998:	str	x1, [x0]
    b99c:	ldr	x0, [x19]
    b9a0:	sub	x0, x0, #0x1
    b9a4:	str	x0, [x19]
    b9a8:	cbnz	x0, b958 <PyFloat_FromString@plt+0x4ec8>
    b9ac:	mov	x0, x19
    b9b0:	bl	65d0 <_Py_Dealloc@plt>
    b9b4:	mov	x0, x20
    b9b8:	ldp	x19, x20, [sp, #16]
    b9bc:	ldr	x21, [sp, #32]
    b9c0:	ldp	x29, x30, [sp], #48
    b9c4:	ret
    b9c8:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
    b9cc:	ldr	x0, [x0, #4024]
    b9d0:	mov	x20, x0
    b9d4:	ldr	x1, [x0]
    b9d8:	add	x1, x1, #0x1
    b9dc:	str	x1, [x0]
    b9e0:	b	b99c <PyFloat_FromString@plt+0x4f0c>
    b9e4:	mov	x1, x19
    b9e8:	mov	x0, x20
    b9ec:	mov	x2, x21
    b9f0:	mov	x20, #0x0                   	// #0
    b9f4:	bl	82f8 <PyFloat_FromString@plt+0x1868>
    b9f8:	mov	x19, x0
    b9fc:	cbnz	x0, b978 <PyFloat_FromString@plt+0x4ee8>
    ba00:	b	b958 <PyFloat_FromString@plt+0x4ec8>
    ba04:	nop
    ba08:	stp	x29, x30, [sp, #-48]!
    ba0c:	mov	x29, sp
    ba10:	str	x21, [sp, #32]
    ba14:	mov	x21, x0
    ba18:	ldr	x0, [x1, #8]
    ba1c:	stp	x19, x20, [sp, #16]
    ba20:	adrp	x20, 5d000 <PyInit__decimal@@Base+0x42a80>
    ba24:	add	x20, x20, #0x320
    ba28:	mov	x19, x1
    ba2c:	add	x20, x20, #0x1a0
    ba30:	cmp	x0, x20
    ba34:	b.eq	ba84 <PyFloat_FromString@plt+0x4ff4>  // b.none
    ba38:	mov	x1, x20
    ba3c:	bl	69c0 <PyType_IsSubtype@plt>
    ba40:	cbnz	w0, ba84 <PyFloat_FromString@plt+0x4ff4>
    ba44:	ldr	x2, [x19, #8]
    ba48:	ldr	x0, [x2, #168]
    ba4c:	tbnz	w0, #24, bb00 <PyFloat_FromString@plt+0x5070>
    ba50:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
    ba54:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
    ba58:	ldr	x2, [x2, #24]
    ba5c:	add	x1, x1, #0x8
    ba60:	ldr	x0, [x0, #3936]
    ba64:	mov	x20, #0x0                   	// #0
    ba68:	ldr	x0, [x0]
    ba6c:	bl	6a10 <PyErr_Format@plt>
    ba70:	mov	x0, x20
    ba74:	ldp	x19, x20, [sp, #16]
    ba78:	ldr	x21, [sp, #32]
    ba7c:	ldp	x29, x30, [sp], #48
    ba80:	ret
    ba84:	ldr	x0, [x19]
    ba88:	add	x0, x0, #0x1
    ba8c:	str	x0, [x19]
    ba90:	add	x1, x21, #0x10
    ba94:	add	x0, x19, #0x18
    ba98:	bl	28058 <PyInit__decimal@@Base+0xdad8>
    ba9c:	cbnz	w0, bae4 <PyFloat_FromString@plt+0x5054>
    baa0:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
    baa4:	ldr	x0, [x0, #3976]
    baa8:	mov	x20, x0
    baac:	ldr	x1, [x0]
    bab0:	add	x1, x1, #0x1
    bab4:	str	x1, [x0]
    bab8:	ldr	x0, [x19]
    babc:	sub	x0, x0, #0x1
    bac0:	str	x0, [x19]
    bac4:	cbnz	x0, ba70 <PyFloat_FromString@plt+0x4fe0>
    bac8:	mov	x0, x19
    bacc:	bl	65d0 <_Py_Dealloc@plt>
    bad0:	mov	x0, x20
    bad4:	ldp	x19, x20, [sp, #16]
    bad8:	ldr	x21, [sp, #32]
    badc:	ldp	x29, x30, [sp], #48
    bae0:	ret
    bae4:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
    bae8:	ldr	x0, [x0, #4024]
    baec:	mov	x20, x0
    baf0:	ldr	x1, [x0]
    baf4:	add	x1, x1, #0x1
    baf8:	str	x1, [x0]
    bafc:	b	bab8 <PyFloat_FromString@plt+0x5028>
    bb00:	mov	x1, x19
    bb04:	mov	x0, x20
    bb08:	mov	x2, x21
    bb0c:	mov	x20, #0x0                   	// #0
    bb10:	bl	82f8 <PyFloat_FromString@plt+0x1868>
    bb14:	mov	x19, x0
    bb18:	cbnz	x0, ba90 <PyFloat_FromString@plt+0x5000>
    bb1c:	b	ba70 <PyFloat_FromString@plt+0x4fe0>
    bb20:	stp	x29, x30, [sp, #-48]!
    bb24:	mov	x29, sp
    bb28:	str	x21, [sp, #32]
    bb2c:	mov	x21, x0
    bb30:	ldr	x0, [x1, #8]
    bb34:	stp	x19, x20, [sp, #16]
    bb38:	adrp	x20, 5d000 <PyInit__decimal@@Base+0x42a80>
    bb3c:	add	x20, x20, #0x320
    bb40:	mov	x19, x1
    bb44:	add	x20, x20, #0x1a0
    bb48:	cmp	x0, x20
    bb4c:	b.eq	bb9c <PyFloat_FromString@plt+0x510c>  // b.none
    bb50:	mov	x1, x20
    bb54:	bl	69c0 <PyType_IsSubtype@plt>
    bb58:	cbnz	w0, bb9c <PyFloat_FromString@plt+0x510c>
    bb5c:	ldr	x2, [x19, #8]
    bb60:	ldr	x0, [x2, #168]
    bb64:	tbnz	w0, #24, bc18 <PyFloat_FromString@plt+0x5188>
    bb68:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
    bb6c:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
    bb70:	ldr	x2, [x2, #24]
    bb74:	add	x1, x1, #0x8
    bb78:	ldr	x0, [x0, #3936]
    bb7c:	mov	x20, #0x0                   	// #0
    bb80:	ldr	x0, [x0]
    bb84:	bl	6a10 <PyErr_Format@plt>
    bb88:	mov	x0, x20
    bb8c:	ldp	x19, x20, [sp, #16]
    bb90:	ldr	x21, [sp, #32]
    bb94:	ldp	x29, x30, [sp], #48
    bb98:	ret
    bb9c:	ldr	x0, [x19]
    bba0:	add	x0, x0, #0x1
    bba4:	str	x0, [x19]
    bba8:	add	x1, x21, #0x10
    bbac:	add	x0, x19, #0x18
    bbb0:	bl	280a8 <PyInit__decimal@@Base+0xdb28>
    bbb4:	cbnz	w0, bbfc <PyFloat_FromString@plt+0x516c>
    bbb8:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
    bbbc:	ldr	x0, [x0, #3976]
    bbc0:	mov	x20, x0
    bbc4:	ldr	x1, [x0]
    bbc8:	add	x1, x1, #0x1
    bbcc:	str	x1, [x0]
    bbd0:	ldr	x0, [x19]
    bbd4:	sub	x0, x0, #0x1
    bbd8:	str	x0, [x19]
    bbdc:	cbnz	x0, bb88 <PyFloat_FromString@plt+0x50f8>
    bbe0:	mov	x0, x19
    bbe4:	bl	65d0 <_Py_Dealloc@plt>
    bbe8:	mov	x0, x20
    bbec:	ldp	x19, x20, [sp, #16]
    bbf0:	ldr	x21, [sp, #32]
    bbf4:	ldp	x29, x30, [sp], #48
    bbf8:	ret
    bbfc:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
    bc00:	ldr	x0, [x0, #4024]
    bc04:	mov	x20, x0
    bc08:	ldr	x1, [x0]
    bc0c:	add	x1, x1, #0x1
    bc10:	str	x1, [x0]
    bc14:	b	bbd0 <PyFloat_FromString@plt+0x5140>
    bc18:	mov	x1, x19
    bc1c:	mov	x0, x20
    bc20:	mov	x2, x21
    bc24:	mov	x20, #0x0                   	// #0
    bc28:	bl	82f8 <PyFloat_FromString@plt+0x1868>
    bc2c:	mov	x19, x0
    bc30:	cbnz	x0, bba8 <PyFloat_FromString@plt+0x5118>
    bc34:	b	bb88 <PyFloat_FromString@plt+0x50f8>
    bc38:	stp	x29, x30, [sp, #-64]!
    bc3c:	mov	x29, sp
    bc40:	str	x21, [sp, #32]
    bc44:	mov	x21, x0
    bc48:	ldr	x0, [x1, #8]
    bc4c:	stp	x19, x20, [sp, #16]
    bc50:	adrp	x20, 5d000 <PyInit__decimal@@Base+0x42a80>
    bc54:	add	x20, x20, #0x320
    bc58:	mov	x19, x1
    bc5c:	add	x20, x20, #0x1a0
    bc60:	cmp	x0, x20
    bc64:	b.eq	bcb4 <PyFloat_FromString@plt+0x5224>  // b.none
    bc68:	mov	x1, x20
    bc6c:	bl	69c0 <PyType_IsSubtype@plt>
    bc70:	cbnz	w0, bcb4 <PyFloat_FromString@plt+0x5224>
    bc74:	ldr	x2, [x19, #8]
    bc78:	ldr	x0, [x2, #168]
    bc7c:	tbnz	w0, #24, bd28 <PyFloat_FromString@plt+0x5298>
    bc80:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
    bc84:	mov	x20, #0x0                   	// #0
    bc88:	ldr	x2, [x2, #24]
    bc8c:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
    bc90:	ldr	x0, [x0, #3936]
    bc94:	add	x1, x1, #0x8
    bc98:	ldr	x0, [x0]
    bc9c:	bl	6a10 <PyErr_Format@plt>
    bca0:	mov	x0, x20
    bca4:	ldp	x19, x20, [sp, #16]
    bca8:	ldr	x21, [sp, #32]
    bcac:	ldp	x29, x30, [sp], #64
    bcb0:	ret
    bcb4:	ldr	x0, [x19]
    bcb8:	add	x0, x0, #0x1
    bcbc:	str	x0, [x19]
    bcc0:	ldr	w2, [x21, #80]
    bcc4:	add	x1, x19, #0x18
    bcc8:	add	x0, sp, #0x38
    bccc:	bl	240b0 <PyInit__decimal@@Base+0x9b30>
    bcd0:	mov	x20, x0
    bcd4:	ldr	x2, [x19]
    bcd8:	sub	x2, x2, #0x1
    bcdc:	str	x2, [x19]
    bce0:	cbz	x2, bd1c <PyFloat_FromString@plt+0x528c>
    bce4:	tbnz	x20, #63, bd48 <PyFloat_FromString@plt+0x52b8>
    bce8:	ldr	x0, [sp, #56]
    bcec:	mov	x1, x20
    bcf0:	bl	70c0 <PyFloat_FromString@plt+0x630>
    bcf4:	mov	x20, x0
    bcf8:	adrp	x1, 5f000 <PyInit__decimal@@Base+0x44a80>
    bcfc:	ldr	x0, [sp, #56]
    bd00:	ldr	x1, [x1, #1704]
    bd04:	blr	x1
    bd08:	mov	x0, x20
    bd0c:	ldp	x19, x20, [sp, #16]
    bd10:	ldr	x21, [sp, #32]
    bd14:	ldp	x29, x30, [sp], #64
    bd18:	ret
    bd1c:	mov	x0, x19
    bd20:	bl	65d0 <_Py_Dealloc@plt>
    bd24:	b	bce4 <PyFloat_FromString@plt+0x5254>
    bd28:	mov	x1, x19
    bd2c:	mov	x0, x20
    bd30:	mov	x2, x21
    bd34:	mov	x20, #0x0                   	// #0
    bd38:	bl	82f8 <PyFloat_FromString@plt+0x1868>
    bd3c:	mov	x19, x0
    bd40:	cbnz	x0, bcc0 <PyFloat_FromString@plt+0x5230>
    bd44:	b	bd08 <PyFloat_FromString@plt+0x5278>
    bd48:	mov	x20, #0x0                   	// #0
    bd4c:	bl	65e0 <PyErr_NoMemory@plt>
    bd50:	b	bd08 <PyFloat_FromString@plt+0x5278>
    bd54:	nop
    bd58:	stp	x29, x30, [sp, #-64]!
    bd5c:	mov	x29, sp
    bd60:	str	x21, [sp, #32]
    bd64:	mov	x21, x0
    bd68:	ldr	x0, [x1, #8]
    bd6c:	stp	x19, x20, [sp, #16]
    bd70:	adrp	x20, 5d000 <PyInit__decimal@@Base+0x42a80>
    bd74:	add	x20, x20, #0x320
    bd78:	mov	x19, x1
    bd7c:	add	x20, x20, #0x1a0
    bd80:	cmp	x0, x20
    bd84:	b.eq	bdd4 <PyFloat_FromString@plt+0x5344>  // b.none
    bd88:	mov	x1, x20
    bd8c:	bl	69c0 <PyType_IsSubtype@plt>
    bd90:	cbnz	w0, bdd4 <PyFloat_FromString@plt+0x5344>
    bd94:	ldr	x2, [x19, #8]
    bd98:	ldr	x0, [x2, #168]
    bd9c:	tbnz	w0, #24, be48 <PyFloat_FromString@plt+0x53b8>
    bda0:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
    bda4:	mov	x20, #0x0                   	// #0
    bda8:	ldr	x2, [x2, #24]
    bdac:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
    bdb0:	ldr	x0, [x0, #3936]
    bdb4:	add	x1, x1, #0x8
    bdb8:	ldr	x0, [x0]
    bdbc:	bl	6a10 <PyErr_Format@plt>
    bdc0:	mov	x0, x20
    bdc4:	ldp	x19, x20, [sp, #16]
    bdc8:	ldr	x21, [sp, #32]
    bdcc:	ldp	x29, x30, [sp], #64
    bdd0:	ret
    bdd4:	ldr	x0, [x19]
    bdd8:	add	x0, x0, #0x1
    bddc:	str	x0, [x19]
    bde0:	ldr	w2, [x21, #80]
    bde4:	add	x1, x19, #0x18
    bde8:	add	x0, sp, #0x38
    bdec:	bl	24098 <PyInit__decimal@@Base+0x9b18>
    bdf0:	mov	x20, x0
    bdf4:	ldr	x2, [x19]
    bdf8:	sub	x2, x2, #0x1
    bdfc:	str	x2, [x19]
    be00:	cbz	x2, be3c <PyFloat_FromString@plt+0x53ac>
    be04:	tbnz	x20, #63, be68 <PyFloat_FromString@plt+0x53d8>
    be08:	ldr	x0, [sp, #56]
    be0c:	mov	x1, x20
    be10:	bl	70c0 <PyFloat_FromString@plt+0x630>
    be14:	mov	x20, x0
    be18:	adrp	x1, 5f000 <PyInit__decimal@@Base+0x44a80>
    be1c:	ldr	x0, [sp, #56]
    be20:	ldr	x1, [x1, #1704]
    be24:	blr	x1
    be28:	mov	x0, x20
    be2c:	ldp	x19, x20, [sp, #16]
    be30:	ldr	x21, [sp, #32]
    be34:	ldp	x29, x30, [sp], #64
    be38:	ret
    be3c:	mov	x0, x19
    be40:	bl	65d0 <_Py_Dealloc@plt>
    be44:	b	be04 <PyFloat_FromString@plt+0x5374>
    be48:	mov	x1, x19
    be4c:	mov	x0, x20
    be50:	mov	x2, x21
    be54:	mov	x20, #0x0                   	// #0
    be58:	bl	82f8 <PyFloat_FromString@plt+0x1868>
    be5c:	mov	x19, x0
    be60:	cbnz	x0, bde0 <PyFloat_FromString@plt+0x5350>
    be64:	b	be28 <PyFloat_FromString@plt+0x5398>
    be68:	mov	x20, #0x0                   	// #0
    be6c:	bl	65e0 <PyErr_NoMemory@plt>
    be70:	b	be28 <PyFloat_FromString@plt+0x5398>
    be74:	nop
    be78:	stp	x29, x30, [sp, #-144]!
    be7c:	adrp	x2, 5f000 <PyInit__decimal@@Base+0x44a80>
    be80:	mov	x29, sp
    be84:	stp	x21, x22, [sp, #32]
    be88:	mov	x22, x0
    be8c:	add	x21, sp, #0x60
    be90:	ldr	x0, [x2, #1808]
    be94:	mov	x2, x21
    be98:	stp	x19, x20, [sp, #16]
    be9c:	mov	x20, x1
    bea0:	mov	x1, #0x0                   	// #0
    bea4:	str	wzr, [sp, #76]
    bea8:	str	xzr, [sp, #80]
    beac:	bl	6740 <PyContextVar_Get@plt>
    beb0:	tbnz	w0, #31, bfec <PyFloat_FromString@plt+0x555c>
    beb4:	ldr	x19, [sp, #96]
    beb8:	cbz	x19, bfe0 <PyFloat_FromString@plt+0x5550>
    bebc:	ldr	x2, [x19]
    bec0:	sub	x2, x2, #0x1
    bec4:	str	x2, [x19]
    bec8:	cbz	x2, c004 <PyFloat_FromString@plt+0x5574>
    becc:	adrp	x1, 3b000 <PyInit__decimal@@Base+0x20a80>
    bed0:	mov	x0, x20
    bed4:	add	x2, sp, #0x50
    bed8:	add	x1, x1, #0xfd8
    bedc:	bl	68e0 <PyArg_ParseTuple@plt>
    bee0:	cbz	w0, bfec <PyFloat_FromString@plt+0x555c>
    bee4:	ldr	x0, [sp, #80]
    bee8:	cbz	x0, c050 <PyFloat_FromString@plt+0x55c0>
    beec:	mov	w1, #0xffffff90            	// #-112
    bef0:	strb	w1, [sp, #96]
    bef4:	add	x2, sp, #0x58
    bef8:	mov	x1, #0x1                   	// #1
    befc:	ldr	x3, [x0, #8]
    bf00:	str	x1, [sp, #88]
    bf04:	ldr	x3, [x3, #168]
    bf08:	stp	xzr, x1, [sp, #104]
    bf0c:	stp	x1, x1, [sp, #120]
    bf10:	str	x2, [sp, #136]
    bf14:	tbz	w3, #24, bfb0 <PyFloat_FromString@plt+0x5520>
    bf18:	str	x23, [sp, #48]
    bf1c:	bl	66f0 <PyLong_AsSsize_t@plt>
    bf20:	mov	x23, x0
    bf24:	cmn	x0, #0x1
    bf28:	b.eq	c028 <PyFloat_FromString@plt+0x5598>  // b.none
    bf2c:	adrp	x0, 5d000 <PyInit__decimal@@Base+0x42a80>
    bf30:	add	x0, x0, #0x320
    bf34:	add	x0, x0, #0x1a0
    bf38:	bl	6c60 <PyFloat_FromString@plt+0x1d0>
    bf3c:	mov	x20, x0
    bf40:	cbz	x0, bf94 <PyFloat_FromString@plt+0x5504>
    bf44:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
    bf48:	mov	x5, #0x7fffffffffffffff    	// #9223372036854775807
    bf4c:	cmp	x23, x0
    bf50:	b.eq	bf58 <PyFloat_FromString@plt+0x54c8>  // b.none
    bf54:	neg	x5, x23
    bf58:	add	x1, x22, #0x18
    bf5c:	add	x0, x20, #0x18
    bf60:	mov	x2, x21
    bf64:	add	x4, sp, #0x4c
    bf68:	add	x3, x19, #0x10
    bf6c:	str	x5, [sp, #104]
    bf70:	bl	360e0 <PyInit__decimal@@Base+0x1bb60>
    bf74:	ldr	w1, [sp, #76]
    bf78:	mov	x0, x19
    bf7c:	bl	7f90 <PyFloat_FromString@plt+0x1500>
    bf80:	cbz	w0, c010 <PyFloat_FromString@plt+0x5580>
    bf84:	ldr	x0, [x20]
    bf88:	sub	x0, x0, #0x1
    bf8c:	str	x0, [x20]
    bf90:	cbz	x0, c068 <PyFloat_FromString@plt+0x55d8>
    bf94:	mov	x20, #0x0                   	// #0
    bf98:	mov	x0, x20
    bf9c:	ldp	x19, x20, [sp, #16]
    bfa0:	ldp	x21, x22, [sp, #32]
    bfa4:	ldr	x23, [sp, #48]
    bfa8:	ldp	x29, x30, [sp], #144
    bfac:	ret
    bfb0:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
    bfb4:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
    bfb8:	mov	x20, #0x0                   	// #0
    bfbc:	add	x1, x1, #0xb0
    bfc0:	ldr	x0, [x0, #3936]
    bfc4:	ldr	x0, [x0]
    bfc8:	bl	6650 <PyErr_SetString@plt>
    bfcc:	mov	x0, x20
    bfd0:	ldp	x19, x20, [sp, #16]
    bfd4:	ldp	x21, x22, [sp, #32]
    bfd8:	ldp	x29, x30, [sp], #144
    bfdc:	ret
    bfe0:	bl	7320 <PyFloat_FromString@plt+0x890>
    bfe4:	mov	x19, x0
    bfe8:	cbnz	x0, bebc <PyFloat_FromString@plt+0x542c>
    bfec:	mov	x20, #0x0                   	// #0
    bff0:	mov	x0, x20
    bff4:	ldp	x19, x20, [sp, #16]
    bff8:	ldp	x21, x22, [sp, #32]
    bffc:	ldp	x29, x30, [sp], #144
    c000:	ret
    c004:	mov	x0, x19
    c008:	bl	65d0 <_Py_Dealloc@plt>
    c00c:	b	becc <PyFloat_FromString@plt+0x543c>
    c010:	mov	x0, x20
    c014:	ldp	x19, x20, [sp, #16]
    c018:	ldp	x21, x22, [sp, #32]
    c01c:	ldr	x23, [sp, #48]
    c020:	ldp	x29, x30, [sp], #144
    c024:	ret
    c028:	bl	67e0 <PyErr_Occurred@plt>
    c02c:	cbnz	x0, bf94 <PyFloat_FromString@plt+0x5504>
    c030:	adrp	x0, 5d000 <PyInit__decimal@@Base+0x42a80>
    c034:	add	x0, x0, #0x320
    c038:	add	x0, x0, #0x1a0
    c03c:	bl	6c60 <PyFloat_FromString@plt+0x1d0>
    c040:	mov	x20, x0
    c044:	cbz	x0, bf94 <PyFloat_FromString@plt+0x5504>
    c048:	neg	x5, x23
    c04c:	b	bf58 <PyFloat_FromString@plt+0x54c8>
    c050:	mov	x1, x19
    c054:	mov	x0, x22
    c058:	mov	w2, #0x6                   	// #6
    c05c:	bl	8118 <PyFloat_FromString@plt+0x1688>
    c060:	mov	x20, x0
    c064:	b	bfcc <PyFloat_FromString@plt+0x553c>
    c068:	mov	x0, x20
    c06c:	mov	x20, #0x0                   	// #0
    c070:	bl	65d0 <_Py_Dealloc@plt>
    c074:	ldr	x23, [sp, #48]
    c078:	b	bfcc <PyFloat_FromString@plt+0x553c>
    c07c:	nop
    c080:	stp	x29, x30, [sp, #-304]!
    c084:	mov	x29, sp
    c088:	stp	x19, x20, [sp, #16]
    c08c:	ldr	x20, [x0, #16]
    c090:	cmn	x20, #0x1
    c094:	b.eq	c0a8 <PyFloat_FromString@plt+0x5618>  // b.none
    c098:	mov	x0, x20
    c09c:	ldp	x19, x20, [sp, #16]
    c0a0:	ldp	x29, x30, [sp], #304
    c0a4:	ret
    c0a8:	mov	x19, x0
    c0ac:	adrp	x0, 5f000 <PyInit__decimal@@Base+0x44a80>
    c0b0:	add	x7, sp, #0x58
    c0b4:	add	x6, sp, #0x60
    c0b8:	ldr	x0, [x0, #1808]
    c0bc:	add	x4, sp, #0x68
    c0c0:	mov	x11, #0xcccccccccccccccc    	// #-3689348814741910324
    c0c4:	mov	w5, #0xffffff90            	// #-112
    c0c8:	mov	x3, #0x1                   	// #1
    c0cc:	mov	x8, #0x13                  	// #19
    c0d0:	mov	x12, #0x1fffffffffffffff    	// #2305843009213693951
    c0d4:	movk	x11, #0x1ccc, lsl #48
    c0d8:	mov	x10, #0xa                   	// #10
    c0dc:	mov	x9, #0x2                   	// #2
    c0e0:	stp	x21, x22, [sp, #32]
    c0e4:	add	x21, sp, #0x100
    c0e8:	mov	x2, x21
    c0ec:	mov	x1, #0x0                   	// #0
    c0f0:	str	wzr, [sp, #84]
    c0f4:	stp	x12, x11, [sp, #88]
    c0f8:	str	x10, [sp, #104]
    c0fc:	strb	w5, [sp, #112]
    c100:	stp	xzr, x8, [sp, #120]
    c104:	stp	x3, x3, [sp, #136]
    c108:	str	x7, [sp, #152]
    c10c:	strb	w5, [sp, #160]
    c110:	stp	xzr, x8, [sp, #168]
    c114:	stp	x3, x3, [sp, #184]
    c118:	str	x6, [sp, #200]
    c11c:	strb	w5, [sp, #208]
    c120:	stp	xzr, x9, [sp, #216]
    c124:	stp	x3, x3, [sp, #232]
    c128:	str	x4, [sp, #248]
    c12c:	bl	6740 <PyContextVar_Get@plt>
    c130:	tbnz	w0, #31, c178 <PyFloat_FromString@plt+0x56e8>
    c134:	ldr	x0, [sp, #256]
    c138:	cbz	x0, c2dc <PyFloat_FromString@plt+0x584c>
    c13c:	ldr	x1, [x0]
    c140:	sub	x1, x1, #0x1
    c144:	str	x1, [x0]
    c148:	cbz	x1, c2d4 <PyFloat_FromString@plt+0x5844>
    c14c:	add	x22, x19, #0x18
    c150:	mov	x0, x22
    c154:	bl	27ff8 <PyInit__decimal@@Base+0xda78>
    c158:	cbz	w0, c190 <PyFloat_FromString@plt+0x5700>
    c15c:	mov	x0, x22
    c160:	bl	27fe8 <PyInit__decimal@@Base+0xda68>
    c164:	cbnz	w0, c364 <PyFloat_FromString@plt+0x58d4>
    c168:	mov	x0, x22
    c16c:	mov	x20, #0x0                   	// #0
    c170:	bl	27f98 <PyInit__decimal@@Base+0xda18>
    c174:	cbz	w0, c2e8 <PyFloat_FromString@plt+0x5858>
    c178:	ldp	x21, x22, [sp, #32]
    c17c:	str	x20, [x19, #16]
    c180:	mov	x0, x20
    c184:	ldp	x19, x20, [sp, #16]
    c188:	ldp	x29, x30, [sp], #304
    c18c:	ret
    c190:	mov	x0, x21
    c194:	stp	x23, x24, [sp, #48]
    c198:	bl	1d4d0 <PyInit__decimal@@Base+0x2f50>
    c19c:	bl	253d8 <PyInit__decimal@@Base+0xae58>
    c1a0:	mov	x24, x0
    c1a4:	cbz	x0, c33c <PyFloat_FromString@plt+0x58ac>
    c1a8:	bl	253d8 <PyInit__decimal@@Base+0xae58>
    c1ac:	mov	x23, x0
    c1b0:	cbz	x0, c350 <PyFloat_FromString@plt+0x58c0>
    c1b4:	ldr	x1, [x19, #32]
    c1b8:	stp	x25, x26, [sp, #64]
    c1bc:	add	x25, sp, #0x54
    c1c0:	tbnz	x1, #63, c300 <PyFloat_FromString@plt+0x5870>
    c1c4:	mov	x3, x25
    c1c8:	mov	x2, x21
    c1cc:	add	x26, sp, #0x70
    c1d0:	bl	2b9f0 <PyInit__decimal@@Base+0x11470>
    c1d4:	mov	x5, x25
    c1d8:	mov	x3, x26
    c1dc:	mov	x4, x21
    c1e0:	mov	x2, x23
    c1e4:	add	x1, sp, #0xd0
    c1e8:	mov	x0, x24
    c1ec:	bl	368e0 <PyInit__decimal@@Base+0x1c360>
    c1f0:	mov	x2, x25
    c1f4:	mov	x1, x22
    c1f8:	mov	x0, x23
    c1fc:	bl	28fe0 <PyInit__decimal@@Base+0xea60>
    c200:	cbz	w0, c334 <PyFloat_FromString@plt+0x58a4>
    c204:	str	xzr, [x23, #8]
    c208:	mov	x0, x23
    c20c:	bl	286d0 <PyInit__decimal@@Base+0xe150>
    c210:	mov	x5, #0x14                  	// #20
    c214:	mov	x6, #0xffec                	// #65516
    c218:	movk	x5, #0xa764, lsl #16
    c21c:	movk	x6, #0x589b, lsl #16
    c220:	movk	x5, #0xb6b3, lsl #32
    c224:	movk	x6, #0x494c, lsl #32
    c228:	movk	x5, #0xde0, lsl #48
    c22c:	movk	x6, #0xf21f, lsl #48
    c230:	mov	x3, x21
    c234:	mov	x4, x25
    c238:	mov	x2, x24
    c23c:	mov	x1, x23
    c240:	mov	x0, x23
    c244:	stp	x5, x5, [sp, #256]
    c248:	str	x6, [sp, #272]
    c24c:	bl	336b0 <PyInit__decimal@@Base+0x19130>
    c250:	mov	x3, x21
    c254:	mov	x4, x25
    c258:	mov	x2, x26
    c25c:	mov	x1, x23
    c260:	mov	x0, x23
    c264:	bl	36738 <PyInit__decimal@@Base+0x1c1b8>
    c268:	mov	x1, x25
    c26c:	mov	x0, x23
    c270:	bl	28e70 <PyInit__decimal@@Base+0xe8f0>
    c274:	mov	x21, x0
    c278:	mov	x0, x22
    c27c:	bl	27fb8 <PyInit__decimal@@Base+0xda38>
    c280:	cmp	w0, #0x0
    c284:	ldr	w1, [sp, #84]
    c288:	cneg	x21, x21, eq  // eq = none
    c28c:	cmn	x21, #0x1
    c290:	mov	x0, #0xfffffffffffffffe    	// #-2
    c294:	csel	x21, x21, x0, ne  // ne = any
    c298:	cbz	w1, c348 <PyFloat_FromString@plt+0x58b8>
    c29c:	tbnz	w1, #9, c334 <PyFloat_FromString@plt+0x58a4>
    c2a0:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
    c2a4:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
    c2a8:	add	x1, x1, #0xf8
    c2ac:	ldr	x0, [x0, #3920]
    c2b0:	ldr	x0, [x0]
    c2b4:	bl	6650 <PyErr_SetString@plt>
    c2b8:	mov	x0, x24
    c2bc:	bl	281b8 <PyInit__decimal@@Base+0xdc38>
    c2c0:	mov	x0, x23
    c2c4:	bl	281b8 <PyInit__decimal@@Base+0xdc38>
    c2c8:	ldp	x23, x24, [sp, #48]
    c2cc:	ldp	x25, x26, [sp, #64]
    c2d0:	b	c178 <PyFloat_FromString@plt+0x56e8>
    c2d4:	bl	65d0 <_Py_Dealloc@plt>
    c2d8:	b	c14c <PyFloat_FromString@plt+0x56bc>
    c2dc:	bl	7320 <PyFloat_FromString@plt+0x890>
    c2e0:	cbnz	x0, c13c <PyFloat_FromString@plt+0x56ac>
    c2e4:	b	c178 <PyFloat_FromString@plt+0x56e8>
    c2e8:	mov	x0, x22
    c2ec:	bl	28120 <PyInit__decimal@@Base+0xdba0>
    c2f0:	mov	w1, #0xcb2f                	// #52015
    c2f4:	movk	w1, #0x4, lsl #16
    c2f8:	smull	x20, w0, w1
    c2fc:	b	c178 <PyFloat_FromString@plt+0x56e8>
    c300:	mov	x3, x25
    c304:	mov	x2, x21
    c308:	neg	x1, x1
    c30c:	add	x26, sp, #0x70
    c310:	bl	2b9f0 <PyInit__decimal@@Base+0x11470>
    c314:	mov	x5, x25
    c318:	mov	x3, x26
    c31c:	mov	x4, x21
    c320:	mov	x2, x23
    c324:	add	x1, sp, #0xa0
    c328:	mov	x0, x24
    c32c:	bl	368e0 <PyInit__decimal@@Base+0x1c360>
    c330:	b	c1f0 <PyFloat_FromString@plt+0x5760>
    c334:	bl	65e0 <PyErr_NoMemory@plt>
    c338:	b	c2b8 <PyFloat_FromString@plt+0x5828>
    c33c:	bl	65e0 <PyErr_NoMemory@plt>
    c340:	ldp	x23, x24, [sp, #48]
    c344:	b	c178 <PyFloat_FromString@plt+0x56e8>
    c348:	mov	x20, x21
    c34c:	b	c2b8 <PyFloat_FromString@plt+0x5828>
    c350:	bl	65e0 <PyErr_NoMemory@plt>
    c354:	mov	x0, x24
    c358:	bl	281b8 <PyInit__decimal@@Base+0xdc38>
    c35c:	ldp	x23, x24, [sp, #48]
    c360:	b	c178 <PyFloat_FromString@plt+0x56e8>
    c364:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
    c368:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
    c36c:	add	x1, x1, #0xd0
    c370:	ldr	x0, [x0, #3936]
    c374:	ldr	x0, [x0]
    c378:	bl	6650 <PyErr_SetString@plt>
    c37c:	b	c178 <PyFloat_FromString@plt+0x56e8>
    c380:	stp	x29, x30, [sp, #-64]!
    c384:	mov	x29, sp
    c388:	stp	x21, x22, [sp, #32]
    c38c:	mov	x22, x0
    c390:	adrp	x21, 5d000 <PyInit__decimal@@Base+0x42a80>
    c394:	ldr	x0, [x1, #8]
    c398:	stp	x19, x20, [sp, #16]
    c39c:	add	x20, x21, #0x320
    c3a0:	str	wzr, [sp, #60]
    c3a4:	add	x20, x20, #0x1a0
    c3a8:	mov	x19, x1
    c3ac:	cmp	x0, x20
    c3b0:	b.eq	c400 <PyFloat_FromString@plt+0x5970>  // b.none
    c3b4:	mov	x1, x20
    c3b8:	bl	69c0 <PyType_IsSubtype@plt>
    c3bc:	cbnz	w0, c400 <PyFloat_FromString@plt+0x5970>
    c3c0:	ldr	x2, [x19, #8]
    c3c4:	ldr	x0, [x2, #168]
    c3c8:	tbnz	w0, #24, c494 <PyFloat_FromString@plt+0x5a04>
    c3cc:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
    c3d0:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
    c3d4:	ldr	x2, [x2, #24]
    c3d8:	add	x1, x1, #0x8
    c3dc:	ldr	x0, [x0, #3936]
    c3e0:	mov	x20, #0x0                   	// #0
    c3e4:	ldr	x0, [x0]
    c3e8:	bl	6a10 <PyErr_Format@plt>
    c3ec:	mov	x0, x20
    c3f0:	ldp	x19, x20, [sp, #16]
    c3f4:	ldp	x21, x22, [sp, #32]
    c3f8:	ldp	x29, x30, [sp], #64
    c3fc:	ret
    c400:	ldr	x0, [x19]
    c404:	add	x21, x21, #0x320
    c408:	add	x0, x0, #0x1
    c40c:	str	x0, [x19]
    c410:	add	x0, x21, #0x1a0
    c414:	bl	6c60 <PyFloat_FromString@plt+0x1d0>
    c418:	mov	x20, x0
    c41c:	cbz	x0, c4c0 <PyFloat_FromString@plt+0x5a30>
    c420:	add	x2, sp, #0x3c
    c424:	add	x1, x19, #0x18
    c428:	add	x0, x0, #0x18
    c42c:	bl	29e08 <PyInit__decimal@@Base+0xf888>
    c430:	ldr	x0, [x19]
    c434:	sub	x0, x0, #0x1
    c438:	str	x0, [x19]
    c43c:	cbz	x0, c478 <PyFloat_FromString@plt+0x59e8>
    c440:	ldr	w1, [sp, #60]
    c444:	mov	x0, x22
    c448:	bl	7f90 <PyFloat_FromString@plt+0x1500>
    c44c:	cbz	w0, c3ec <PyFloat_FromString@plt+0x595c>
    c450:	ldr	x0, [x20]
    c454:	sub	x0, x0, #0x1
    c458:	str	x0, [x20]
    c45c:	cbz	x0, c4dc <PyFloat_FromString@plt+0x5a4c>
    c460:	mov	x20, #0x0                   	// #0
    c464:	mov	x0, x20
    c468:	ldp	x19, x20, [sp, #16]
    c46c:	ldp	x21, x22, [sp, #32]
    c470:	ldp	x29, x30, [sp], #64
    c474:	ret
    c478:	mov	x0, x19
    c47c:	bl	65d0 <_Py_Dealloc@plt>
    c480:	ldr	w1, [sp, #60]
    c484:	mov	x0, x22
    c488:	bl	7f90 <PyFloat_FromString@plt+0x1500>
    c48c:	cbz	w0, c3ec <PyFloat_FromString@plt+0x595c>
    c490:	b	c450 <PyFloat_FromString@plt+0x59c0>
    c494:	mov	x1, x19
    c498:	mov	x0, x20
    c49c:	mov	x2, x22
    c4a0:	bl	82f8 <PyFloat_FromString@plt+0x1868>
    c4a4:	mov	x19, x0
    c4a8:	cbz	x0, c460 <PyFloat_FromString@plt+0x59d0>
    c4ac:	add	x21, x21, #0x320
    c4b0:	add	x0, x21, #0x1a0
    c4b4:	bl	6c60 <PyFloat_FromString@plt+0x1d0>
    c4b8:	mov	x20, x0
    c4bc:	cbnz	x0, c420 <PyFloat_FromString@plt+0x5990>
    c4c0:	ldr	x0, [x19]
    c4c4:	sub	x0, x0, #0x1
    c4c8:	str	x0, [x19]
    c4cc:	cbnz	x0, c460 <PyFloat_FromString@plt+0x59d0>
    c4d0:	mov	x0, x19
    c4d4:	bl	65d0 <_Py_Dealloc@plt>
    c4d8:	b	c3ec <PyFloat_FromString@plt+0x595c>
    c4dc:	mov	x0, x20
    c4e0:	mov	x20, #0x0                   	// #0
    c4e4:	bl	65d0 <_Py_Dealloc@plt>
    c4e8:	b	c3ec <PyFloat_FromString@plt+0x595c>
    c4ec:	nop
    c4f0:	stp	x29, x30, [sp, #-64]!
    c4f4:	mov	x29, sp
    c4f8:	stp	x21, x22, [sp, #32]
    c4fc:	mov	x22, x0
    c500:	adrp	x21, 5d000 <PyInit__decimal@@Base+0x42a80>
    c504:	ldr	x0, [x1, #8]
    c508:	stp	x19, x20, [sp, #16]
    c50c:	add	x20, x21, #0x320
    c510:	str	wzr, [sp, #60]
    c514:	add	x20, x20, #0x1a0
    c518:	mov	x19, x1
    c51c:	cmp	x0, x20
    c520:	b.eq	c570 <PyFloat_FromString@plt+0x5ae0>  // b.none
    c524:	mov	x1, x20
    c528:	bl	69c0 <PyType_IsSubtype@plt>
    c52c:	cbnz	w0, c570 <PyFloat_FromString@plt+0x5ae0>
    c530:	ldr	x2, [x19, #8]
    c534:	ldr	x0, [x2, #168]
    c538:	tbnz	w0, #24, c604 <PyFloat_FromString@plt+0x5b74>
    c53c:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
    c540:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
    c544:	ldr	x2, [x2, #24]
    c548:	add	x1, x1, #0x8
    c54c:	ldr	x0, [x0, #3936]
    c550:	mov	x20, #0x0                   	// #0
    c554:	ldr	x0, [x0]
    c558:	bl	6a10 <PyErr_Format@plt>
    c55c:	mov	x0, x20
    c560:	ldp	x19, x20, [sp, #16]
    c564:	ldp	x21, x22, [sp, #32]
    c568:	ldp	x29, x30, [sp], #64
    c56c:	ret
    c570:	ldr	x0, [x19]
    c574:	add	x21, x21, #0x320
    c578:	add	x0, x0, #0x1
    c57c:	str	x0, [x19]
    c580:	add	x0, x21, #0x1a0
    c584:	bl	6c60 <PyFloat_FromString@plt+0x1d0>
    c588:	mov	x20, x0
    c58c:	cbz	x0, c630 <PyFloat_FromString@plt+0x5ba0>
    c590:	add	x2, sp, #0x3c
    c594:	add	x1, x19, #0x18
    c598:	add	x0, x0, #0x18
    c59c:	bl	29e40 <PyInit__decimal@@Base+0xf8c0>
    c5a0:	ldr	x0, [x19]
    c5a4:	sub	x0, x0, #0x1
    c5a8:	str	x0, [x19]
    c5ac:	cbz	x0, c5e8 <PyFloat_FromString@plt+0x5b58>
    c5b0:	ldr	w1, [sp, #60]
    c5b4:	mov	x0, x22
    c5b8:	bl	7f90 <PyFloat_FromString@plt+0x1500>
    c5bc:	cbz	w0, c55c <PyFloat_FromString@plt+0x5acc>
    c5c0:	ldr	x0, [x20]
    c5c4:	sub	x0, x0, #0x1
    c5c8:	str	x0, [x20]
    c5cc:	cbz	x0, c64c <PyFloat_FromString@plt+0x5bbc>
    c5d0:	mov	x20, #0x0                   	// #0
    c5d4:	mov	x0, x20
    c5d8:	ldp	x19, x20, [sp, #16]
    c5dc:	ldp	x21, x22, [sp, #32]
    c5e0:	ldp	x29, x30, [sp], #64
    c5e4:	ret
    c5e8:	mov	x0, x19
    c5ec:	bl	65d0 <_Py_Dealloc@plt>
    c5f0:	ldr	w1, [sp, #60]
    c5f4:	mov	x0, x22
    c5f8:	bl	7f90 <PyFloat_FromString@plt+0x1500>
    c5fc:	cbz	w0, c55c <PyFloat_FromString@plt+0x5acc>
    c600:	b	c5c0 <PyFloat_FromString@plt+0x5b30>
    c604:	mov	x1, x19
    c608:	mov	x0, x20
    c60c:	mov	x2, x22
    c610:	bl	82f8 <PyFloat_FromString@plt+0x1868>
    c614:	mov	x19, x0
    c618:	cbz	x0, c5d0 <PyFloat_FromString@plt+0x5b40>
    c61c:	add	x21, x21, #0x320
    c620:	add	x0, x21, #0x1a0
    c624:	bl	6c60 <PyFloat_FromString@plt+0x1d0>
    c628:	mov	x20, x0
    c62c:	cbnz	x0, c590 <PyFloat_FromString@plt+0x5b00>
    c630:	ldr	x0, [x19]
    c634:	sub	x0, x0, #0x1
    c638:	str	x0, [x19]
    c63c:	cbnz	x0, c5d0 <PyFloat_FromString@plt+0x5b40>
    c640:	mov	x0, x19
    c644:	bl	65d0 <_Py_Dealloc@plt>
    c648:	b	c55c <PyFloat_FromString@plt+0x5acc>
    c64c:	mov	x0, x20
    c650:	mov	x20, #0x0                   	// #0
    c654:	bl	65d0 <_Py_Dealloc@plt>
    c658:	b	c55c <PyFloat_FromString@plt+0x5acc>
    c65c:	nop
    c660:	stp	x29, x30, [sp, #-64]!
    c664:	mov	x29, sp
    c668:	stp	x21, x22, [sp, #32]
    c66c:	mov	x21, x0
    c670:	adrp	x22, 5d000 <PyInit__decimal@@Base+0x42a80>
    c674:	ldr	x0, [x1, #8]
    c678:	stp	x19, x20, [sp, #16]
    c67c:	add	x20, x22, #0x320
    c680:	str	wzr, [sp, #60]
    c684:	add	x20, x20, #0x1a0
    c688:	mov	x19, x1
    c68c:	cmp	x0, x20
    c690:	b.eq	c6e0 <PyFloat_FromString@plt+0x5c50>  // b.none
    c694:	mov	x1, x20
    c698:	bl	69c0 <PyType_IsSubtype@plt>
    c69c:	cbnz	w0, c6e0 <PyFloat_FromString@plt+0x5c50>
    c6a0:	ldr	x2, [x19, #8]
    c6a4:	ldr	x0, [x2, #168]
    c6a8:	tbnz	w0, #24, c778 <PyFloat_FromString@plt+0x5ce8>
    c6ac:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
    c6b0:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
    c6b4:	ldr	x2, [x2, #24]
    c6b8:	add	x1, x1, #0x8
    c6bc:	ldr	x0, [x0, #3936]
    c6c0:	mov	x20, #0x0                   	// #0
    c6c4:	ldr	x0, [x0]
    c6c8:	bl	6a10 <PyErr_Format@plt>
    c6cc:	mov	x0, x20
    c6d0:	ldp	x19, x20, [sp, #16]
    c6d4:	ldp	x21, x22, [sp, #32]
    c6d8:	ldp	x29, x30, [sp], #64
    c6dc:	ret
    c6e0:	ldr	x0, [x19]
    c6e4:	add	x0, x0, #0x1
    c6e8:	str	x0, [x19]
    c6ec:	add	x0, x22, #0x320
    c6f0:	add	x0, x0, #0x1a0
    c6f4:	bl	6c60 <PyFloat_FromString@plt+0x1d0>
    c6f8:	mov	x20, x0
    c6fc:	cbz	x0, c7a8 <PyFloat_FromString@plt+0x5d18>
    c700:	add	x0, x0, #0x18
    c704:	add	x3, sp, #0x3c
    c708:	add	x2, x21, #0x10
    c70c:	add	x1, x19, #0x18
    c710:	bl	37530 <PyInit__decimal@@Base+0x1cfb0>
    c714:	ldr	x0, [x19]
    c718:	sub	x0, x0, #0x1
    c71c:	str	x0, [x19]
    c720:	cbz	x0, c75c <PyFloat_FromString@plt+0x5ccc>
    c724:	ldr	w1, [sp, #60]
    c728:	mov	x0, x21
    c72c:	bl	7f90 <PyFloat_FromString@plt+0x1500>
    c730:	cbz	w0, c6cc <PyFloat_FromString@plt+0x5c3c>
    c734:	ldr	x0, [x20]
    c738:	sub	x0, x0, #0x1
    c73c:	str	x0, [x20]
    c740:	cbz	x0, c7c4 <PyFloat_FromString@plt+0x5d34>
    c744:	mov	x20, #0x0                   	// #0
    c748:	mov	x0, x20
    c74c:	ldp	x19, x20, [sp, #16]
    c750:	ldp	x21, x22, [sp, #32]
    c754:	ldp	x29, x30, [sp], #64
    c758:	ret
    c75c:	mov	x0, x19
    c760:	bl	65d0 <_Py_Dealloc@plt>
    c764:	ldr	w1, [sp, #60]
    c768:	mov	x0, x21
    c76c:	bl	7f90 <PyFloat_FromString@plt+0x1500>
    c770:	cbz	w0, c6cc <PyFloat_FromString@plt+0x5c3c>
    c774:	b	c734 <PyFloat_FromString@plt+0x5ca4>
    c778:	mov	x1, x19
    c77c:	mov	x0, x20
    c780:	mov	x2, x21
    c784:	bl	82f8 <PyFloat_FromString@plt+0x1868>
    c788:	mov	x19, x0
    c78c:	cbz	x0, c744 <PyFloat_FromString@plt+0x5cb4>
    c790:	add	x0, x22, #0x320
    c794:	add	x0, x0, #0x1a0
    c798:	bl	6c60 <PyFloat_FromString@plt+0x1d0>
    c79c:	mov	x20, x0
    c7a0:	cbnz	x0, c700 <PyFloat_FromString@plt+0x5c70>
    c7a4:	nop
    c7a8:	ldr	x0, [x19]
    c7ac:	sub	x0, x0, #0x1
    c7b0:	str	x0, [x19]
    c7b4:	cbnz	x0, c744 <PyFloat_FromString@plt+0x5cb4>
    c7b8:	mov	x0, x19
    c7bc:	bl	65d0 <_Py_Dealloc@plt>
    c7c0:	b	c6cc <PyFloat_FromString@plt+0x5c3c>
    c7c4:	mov	x0, x20
    c7c8:	mov	x20, #0x0                   	// #0
    c7cc:	bl	65d0 <_Py_Dealloc@plt>
    c7d0:	b	c6cc <PyFloat_FromString@plt+0x5c3c>
    c7d4:	nop
    c7d8:	stp	x29, x30, [sp, #-64]!
    c7dc:	mov	x29, sp
    c7e0:	stp	x21, x22, [sp, #32]
    c7e4:	mov	x21, x0
    c7e8:	adrp	x22, 5d000 <PyInit__decimal@@Base+0x42a80>
    c7ec:	ldr	x0, [x1, #8]
    c7f0:	stp	x19, x20, [sp, #16]
    c7f4:	add	x20, x22, #0x320
    c7f8:	str	wzr, [sp, #60]
    c7fc:	add	x20, x20, #0x1a0
    c800:	mov	x19, x1
    c804:	cmp	x0, x20
    c808:	b.eq	c858 <PyFloat_FromString@plt+0x5dc8>  // b.none
    c80c:	mov	x1, x20
    c810:	bl	69c0 <PyType_IsSubtype@plt>
    c814:	cbnz	w0, c858 <PyFloat_FromString@plt+0x5dc8>
    c818:	ldr	x2, [x19, #8]
    c81c:	ldr	x0, [x2, #168]
    c820:	tbnz	w0, #24, c8f0 <PyFloat_FromString@plt+0x5e60>
    c824:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
    c828:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
    c82c:	ldr	x2, [x2, #24]
    c830:	add	x1, x1, #0x8
    c834:	ldr	x0, [x0, #3936]
    c838:	mov	x20, #0x0                   	// #0
    c83c:	ldr	x0, [x0]
    c840:	bl	6a10 <PyErr_Format@plt>
    c844:	mov	x0, x20
    c848:	ldp	x19, x20, [sp, #16]
    c84c:	ldp	x21, x22, [sp, #32]
    c850:	ldp	x29, x30, [sp], #64
    c854:	ret
    c858:	ldr	x0, [x19]
    c85c:	add	x0, x0, #0x1
    c860:	str	x0, [x19]
    c864:	add	x0, x22, #0x320
    c868:	add	x0, x0, #0x1a0
    c86c:	bl	6c60 <PyFloat_FromString@plt+0x1d0>
    c870:	mov	x20, x0
    c874:	cbz	x0, c920 <PyFloat_FromString@plt+0x5e90>
    c878:	add	x0, x0, #0x18
    c87c:	add	x3, sp, #0x3c
    c880:	add	x2, x21, #0x10
    c884:	add	x1, x19, #0x18
    c888:	bl	354b8 <PyInit__decimal@@Base+0x1af38>
    c88c:	ldr	x0, [x19]
    c890:	sub	x0, x0, #0x1
    c894:	str	x0, [x19]
    c898:	cbz	x0, c8d4 <PyFloat_FromString@plt+0x5e44>
    c89c:	ldr	w1, [sp, #60]
    c8a0:	mov	x0, x21
    c8a4:	bl	7f90 <PyFloat_FromString@plt+0x1500>
    c8a8:	cbz	w0, c844 <PyFloat_FromString@plt+0x5db4>
    c8ac:	ldr	x0, [x20]
    c8b0:	sub	x0, x0, #0x1
    c8b4:	str	x0, [x20]
    c8b8:	cbz	x0, c93c <PyFloat_FromString@plt+0x5eac>
    c8bc:	mov	x20, #0x0                   	// #0
    c8c0:	mov	x0, x20
    c8c4:	ldp	x19, x20, [sp, #16]
    c8c8:	ldp	x21, x22, [sp, #32]
    c8cc:	ldp	x29, x30, [sp], #64
    c8d0:	ret
    c8d4:	mov	x0, x19
    c8d8:	bl	65d0 <_Py_Dealloc@plt>
    c8dc:	ldr	w1, [sp, #60]
    c8e0:	mov	x0, x21
    c8e4:	bl	7f90 <PyFloat_FromString@plt+0x1500>
    c8e8:	cbz	w0, c844 <PyFloat_FromString@plt+0x5db4>
    c8ec:	b	c8ac <PyFloat_FromString@plt+0x5e1c>
    c8f0:	mov	x1, x19
    c8f4:	mov	x0, x20
    c8f8:	mov	x2, x21
    c8fc:	bl	82f8 <PyFloat_FromString@plt+0x1868>
    c900:	mov	x19, x0
    c904:	cbz	x0, c8bc <PyFloat_FromString@plt+0x5e2c>
    c908:	add	x0, x22, #0x320
    c90c:	add	x0, x0, #0x1a0
    c910:	bl	6c60 <PyFloat_FromString@plt+0x1d0>
    c914:	mov	x20, x0
    c918:	cbnz	x0, c878 <PyFloat_FromString@plt+0x5de8>
    c91c:	nop
    c920:	ldr	x0, [x19]
    c924:	sub	x0, x0, #0x1
    c928:	str	x0, [x19]
    c92c:	cbnz	x0, c8bc <PyFloat_FromString@plt+0x5e2c>
    c930:	mov	x0, x19
    c934:	bl	65d0 <_Py_Dealloc@plt>
    c938:	b	c844 <PyFloat_FromString@plt+0x5db4>
    c93c:	mov	x0, x20
    c940:	mov	x20, #0x0                   	// #0
    c944:	bl	65d0 <_Py_Dealloc@plt>
    c948:	b	c844 <PyFloat_FromString@plt+0x5db4>
    c94c:	nop
    c950:	stp	x29, x30, [sp, #-64]!
    c954:	mov	x29, sp
    c958:	stp	x21, x22, [sp, #32]
    c95c:	mov	x21, x0
    c960:	adrp	x22, 5d000 <PyInit__decimal@@Base+0x42a80>
    c964:	ldr	x0, [x1, #8]
    c968:	stp	x19, x20, [sp, #16]
    c96c:	add	x20, x22, #0x320
    c970:	str	wzr, [sp, #60]
    c974:	add	x20, x20, #0x1a0
    c978:	mov	x19, x1
    c97c:	cmp	x0, x20
    c980:	b.eq	c9d0 <PyFloat_FromString@plt+0x5f40>  // b.none
    c984:	mov	x1, x20
    c988:	bl	69c0 <PyType_IsSubtype@plt>
    c98c:	cbnz	w0, c9d0 <PyFloat_FromString@plt+0x5f40>
    c990:	ldr	x2, [x19, #8]
    c994:	ldr	x0, [x2, #168]
    c998:	tbnz	w0, #24, ca68 <PyFloat_FromString@plt+0x5fd8>
    c99c:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
    c9a0:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
    c9a4:	ldr	x2, [x2, #24]
    c9a8:	add	x1, x1, #0x8
    c9ac:	ldr	x0, [x0, #3936]
    c9b0:	mov	x20, #0x0                   	// #0
    c9b4:	ldr	x0, [x0]
    c9b8:	bl	6a10 <PyErr_Format@plt>
    c9bc:	mov	x0, x20
    c9c0:	ldp	x19, x20, [sp, #16]
    c9c4:	ldp	x21, x22, [sp, #32]
    c9c8:	ldp	x29, x30, [sp], #64
    c9cc:	ret
    c9d0:	ldr	x0, [x19]
    c9d4:	add	x0, x0, #0x1
    c9d8:	str	x0, [x19]
    c9dc:	add	x0, x22, #0x320
    c9e0:	add	x0, x0, #0x1a0
    c9e4:	bl	6c60 <PyFloat_FromString@plt+0x1d0>
    c9e8:	mov	x20, x0
    c9ec:	cbz	x0, ca98 <PyFloat_FromString@plt+0x6008>
    c9f0:	add	x0, x0, #0x18
    c9f4:	add	x3, sp, #0x3c
    c9f8:	add	x2, x21, #0x10
    c9fc:	add	x1, x19, #0x18
    ca00:	bl	365a0 <PyInit__decimal@@Base+0x1c020>
    ca04:	ldr	x0, [x19]
    ca08:	sub	x0, x0, #0x1
    ca0c:	str	x0, [x19]
    ca10:	cbz	x0, ca4c <PyFloat_FromString@plt+0x5fbc>
    ca14:	ldr	w1, [sp, #60]
    ca18:	mov	x0, x21
    ca1c:	bl	7f90 <PyFloat_FromString@plt+0x1500>
    ca20:	cbz	w0, c9bc <PyFloat_FromString@plt+0x5f2c>
    ca24:	ldr	x0, [x20]
    ca28:	sub	x0, x0, #0x1
    ca2c:	str	x0, [x20]
    ca30:	cbz	x0, cab4 <PyFloat_FromString@plt+0x6024>
    ca34:	mov	x20, #0x0                   	// #0
    ca38:	mov	x0, x20
    ca3c:	ldp	x19, x20, [sp, #16]
    ca40:	ldp	x21, x22, [sp, #32]
    ca44:	ldp	x29, x30, [sp], #64
    ca48:	ret
    ca4c:	mov	x0, x19
    ca50:	bl	65d0 <_Py_Dealloc@plt>
    ca54:	ldr	w1, [sp, #60]
    ca58:	mov	x0, x21
    ca5c:	bl	7f90 <PyFloat_FromString@plt+0x1500>
    ca60:	cbz	w0, c9bc <PyFloat_FromString@plt+0x5f2c>
    ca64:	b	ca24 <PyFloat_FromString@plt+0x5f94>
    ca68:	mov	x1, x19
    ca6c:	mov	x0, x20
    ca70:	mov	x2, x21
    ca74:	bl	82f8 <PyFloat_FromString@plt+0x1868>
    ca78:	mov	x19, x0
    ca7c:	cbz	x0, ca34 <PyFloat_FromString@plt+0x5fa4>
    ca80:	add	x0, x22, #0x320
    ca84:	add	x0, x0, #0x1a0
    ca88:	bl	6c60 <PyFloat_FromString@plt+0x1d0>
    ca8c:	mov	x20, x0
    ca90:	cbnz	x0, c9f0 <PyFloat_FromString@plt+0x5f60>
    ca94:	nop
    ca98:	ldr	x0, [x19]
    ca9c:	sub	x0, x0, #0x1
    caa0:	str	x0, [x19]
    caa4:	cbnz	x0, ca34 <PyFloat_FromString@plt+0x5fa4>
    caa8:	mov	x0, x19
    caac:	bl	65d0 <_Py_Dealloc@plt>
    cab0:	b	c9bc <PyFloat_FromString@plt+0x5f2c>
    cab4:	mov	x0, x20
    cab8:	mov	x20, #0x0                   	// #0
    cabc:	bl	65d0 <_Py_Dealloc@plt>
    cac0:	b	c9bc <PyFloat_FromString@plt+0x5f2c>
    cac4:	nop
    cac8:	stp	x29, x30, [sp, #-64]!
    cacc:	mov	x29, sp
    cad0:	stp	x21, x22, [sp, #32]
    cad4:	mov	x21, x0
    cad8:	adrp	x22, 5d000 <PyInit__decimal@@Base+0x42a80>
    cadc:	ldr	x0, [x1, #8]
    cae0:	stp	x19, x20, [sp, #16]
    cae4:	add	x20, x22, #0x320
    cae8:	str	wzr, [sp, #60]
    caec:	add	x20, x20, #0x1a0
    caf0:	mov	x19, x1
    caf4:	cmp	x0, x20
    caf8:	b.eq	cb48 <PyFloat_FromString@plt+0x60b8>  // b.none
    cafc:	mov	x1, x20
    cb00:	bl	69c0 <PyType_IsSubtype@plt>
    cb04:	cbnz	w0, cb48 <PyFloat_FromString@plt+0x60b8>
    cb08:	ldr	x2, [x19, #8]
    cb0c:	ldr	x0, [x2, #168]
    cb10:	tbnz	w0, #24, cbe0 <PyFloat_FromString@plt+0x6150>
    cb14:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
    cb18:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
    cb1c:	ldr	x2, [x2, #24]
    cb20:	add	x1, x1, #0x8
    cb24:	ldr	x0, [x0, #3936]
    cb28:	mov	x20, #0x0                   	// #0
    cb2c:	ldr	x0, [x0]
    cb30:	bl	6a10 <PyErr_Format@plt>
    cb34:	mov	x0, x20
    cb38:	ldp	x19, x20, [sp, #16]
    cb3c:	ldp	x21, x22, [sp, #32]
    cb40:	ldp	x29, x30, [sp], #64
    cb44:	ret
    cb48:	ldr	x0, [x19]
    cb4c:	add	x0, x0, #0x1
    cb50:	str	x0, [x19]
    cb54:	add	x0, x22, #0x320
    cb58:	add	x0, x0, #0x1a0
    cb5c:	bl	6c60 <PyFloat_FromString@plt+0x1d0>
    cb60:	mov	x20, x0
    cb64:	cbz	x0, cc10 <PyFloat_FromString@plt+0x6180>
    cb68:	add	x0, x0, #0x18
    cb6c:	add	x3, sp, #0x3c
    cb70:	add	x2, x21, #0x10
    cb74:	add	x1, x19, #0x18
    cb78:	bl	32668 <PyInit__decimal@@Base+0x180e8>
    cb7c:	ldr	x0, [x19]
    cb80:	sub	x0, x0, #0x1
    cb84:	str	x0, [x19]
    cb88:	cbz	x0, cbc4 <PyFloat_FromString@plt+0x6134>
    cb8c:	ldr	w1, [sp, #60]
    cb90:	mov	x0, x21
    cb94:	bl	7f90 <PyFloat_FromString@plt+0x1500>
    cb98:	cbz	w0, cb34 <PyFloat_FromString@plt+0x60a4>
    cb9c:	ldr	x0, [x20]
    cba0:	sub	x0, x0, #0x1
    cba4:	str	x0, [x20]
    cba8:	cbz	x0, cc2c <PyFloat_FromString@plt+0x619c>
    cbac:	mov	x20, #0x0                   	// #0
    cbb0:	mov	x0, x20
    cbb4:	ldp	x19, x20, [sp, #16]
    cbb8:	ldp	x21, x22, [sp, #32]
    cbbc:	ldp	x29, x30, [sp], #64
    cbc0:	ret
    cbc4:	mov	x0, x19
    cbc8:	bl	65d0 <_Py_Dealloc@plt>
    cbcc:	ldr	w1, [sp, #60]
    cbd0:	mov	x0, x21
    cbd4:	bl	7f90 <PyFloat_FromString@plt+0x1500>
    cbd8:	cbz	w0, cb34 <PyFloat_FromString@plt+0x60a4>
    cbdc:	b	cb9c <PyFloat_FromString@plt+0x610c>
    cbe0:	mov	x1, x19
    cbe4:	mov	x0, x20
    cbe8:	mov	x2, x21
    cbec:	bl	82f8 <PyFloat_FromString@plt+0x1868>
    cbf0:	mov	x19, x0
    cbf4:	cbz	x0, cbac <PyFloat_FromString@plt+0x611c>
    cbf8:	add	x0, x22, #0x320
    cbfc:	add	x0, x0, #0x1a0
    cc00:	bl	6c60 <PyFloat_FromString@plt+0x1d0>
    cc04:	mov	x20, x0
    cc08:	cbnz	x0, cb68 <PyFloat_FromString@plt+0x60d8>
    cc0c:	nop
    cc10:	ldr	x0, [x19]
    cc14:	sub	x0, x0, #0x1
    cc18:	str	x0, [x19]
    cc1c:	cbnz	x0, cbac <PyFloat_FromString@plt+0x611c>
    cc20:	mov	x0, x19
    cc24:	bl	65d0 <_Py_Dealloc@plt>
    cc28:	b	cb34 <PyFloat_FromString@plt+0x60a4>
    cc2c:	mov	x0, x20
    cc30:	mov	x20, #0x0                   	// #0
    cc34:	bl	65d0 <_Py_Dealloc@plt>
    cc38:	b	cb34 <PyFloat_FromString@plt+0x60a4>
    cc3c:	nop
    cc40:	stp	x29, x30, [sp, #-64]!
    cc44:	mov	x29, sp
    cc48:	stp	x21, x22, [sp, #32]
    cc4c:	mov	x21, x0
    cc50:	adrp	x22, 5d000 <PyInit__decimal@@Base+0x42a80>
    cc54:	ldr	x0, [x1, #8]
    cc58:	stp	x19, x20, [sp, #16]
    cc5c:	add	x20, x22, #0x320
    cc60:	str	wzr, [sp, #60]
    cc64:	add	x20, x20, #0x1a0
    cc68:	mov	x19, x1
    cc6c:	cmp	x0, x20
    cc70:	b.eq	ccc0 <PyFloat_FromString@plt+0x6230>  // b.none
    cc74:	mov	x1, x20
    cc78:	bl	69c0 <PyType_IsSubtype@plt>
    cc7c:	cbnz	w0, ccc0 <PyFloat_FromString@plt+0x6230>
    cc80:	ldr	x2, [x19, #8]
    cc84:	ldr	x0, [x2, #168]
    cc88:	tbnz	w0, #24, cd58 <PyFloat_FromString@plt+0x62c8>
    cc8c:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
    cc90:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
    cc94:	ldr	x2, [x2, #24]
    cc98:	add	x1, x1, #0x8
    cc9c:	ldr	x0, [x0, #3936]
    cca0:	mov	x20, #0x0                   	// #0
    cca4:	ldr	x0, [x0]
    cca8:	bl	6a10 <PyErr_Format@plt>
    ccac:	mov	x0, x20
    ccb0:	ldp	x19, x20, [sp, #16]
    ccb4:	ldp	x21, x22, [sp, #32]
    ccb8:	ldp	x29, x30, [sp], #64
    ccbc:	ret
    ccc0:	ldr	x0, [x19]
    ccc4:	add	x0, x0, #0x1
    ccc8:	str	x0, [x19]
    cccc:	add	x0, x22, #0x320
    ccd0:	add	x0, x0, #0x1a0
    ccd4:	bl	6c60 <PyFloat_FromString@plt+0x1d0>
    ccd8:	mov	x20, x0
    ccdc:	cbz	x0, cd88 <PyFloat_FromString@plt+0x62f8>
    cce0:	add	x0, x0, #0x18
    cce4:	add	x3, sp, #0x3c
    cce8:	add	x2, x21, #0x10
    ccec:	add	x1, x19, #0x18
    ccf0:	bl	37550 <PyInit__decimal@@Base+0x1cfd0>
    ccf4:	ldr	x0, [x19]
    ccf8:	sub	x0, x0, #0x1
    ccfc:	str	x0, [x19]
    cd00:	cbz	x0, cd3c <PyFloat_FromString@plt+0x62ac>
    cd04:	ldr	w1, [sp, #60]
    cd08:	mov	x0, x21
    cd0c:	bl	7f90 <PyFloat_FromString@plt+0x1500>
    cd10:	cbz	w0, ccac <PyFloat_FromString@plt+0x621c>
    cd14:	ldr	x0, [x20]
    cd18:	sub	x0, x0, #0x1
    cd1c:	str	x0, [x20]
    cd20:	cbz	x0, cda4 <PyFloat_FromString@plt+0x6314>
    cd24:	mov	x20, #0x0                   	// #0
    cd28:	mov	x0, x20
    cd2c:	ldp	x19, x20, [sp, #16]
    cd30:	ldp	x21, x22, [sp, #32]
    cd34:	ldp	x29, x30, [sp], #64
    cd38:	ret
    cd3c:	mov	x0, x19
    cd40:	bl	65d0 <_Py_Dealloc@plt>
    cd44:	ldr	w1, [sp, #60]
    cd48:	mov	x0, x21
    cd4c:	bl	7f90 <PyFloat_FromString@plt+0x1500>
    cd50:	cbz	w0, ccac <PyFloat_FromString@plt+0x621c>
    cd54:	b	cd14 <PyFloat_FromString@plt+0x6284>
    cd58:	mov	x1, x19
    cd5c:	mov	x0, x20
    cd60:	mov	x2, x21
    cd64:	bl	82f8 <PyFloat_FromString@plt+0x1868>
    cd68:	mov	x19, x0
    cd6c:	cbz	x0, cd24 <PyFloat_FromString@plt+0x6294>
    cd70:	add	x0, x22, #0x320
    cd74:	add	x0, x0, #0x1a0
    cd78:	bl	6c60 <PyFloat_FromString@plt+0x1d0>
    cd7c:	mov	x20, x0
    cd80:	cbnz	x0, cce0 <PyFloat_FromString@plt+0x6250>
    cd84:	nop
    cd88:	ldr	x0, [x19]
    cd8c:	sub	x0, x0, #0x1
    cd90:	str	x0, [x19]
    cd94:	cbnz	x0, cd24 <PyFloat_FromString@plt+0x6294>
    cd98:	mov	x0, x19
    cd9c:	bl	65d0 <_Py_Dealloc@plt>
    cda0:	b	ccac <PyFloat_FromString@plt+0x621c>
    cda4:	mov	x0, x20
    cda8:	mov	x20, #0x0                   	// #0
    cdac:	bl	65d0 <_Py_Dealloc@plt>
    cdb0:	b	ccac <PyFloat_FromString@plt+0x621c>
    cdb4:	nop
    cdb8:	stp	x29, x30, [sp, #-64]!
    cdbc:	mov	x29, sp
    cdc0:	stp	x21, x22, [sp, #32]
    cdc4:	mov	x21, x0
    cdc8:	adrp	x22, 5d000 <PyInit__decimal@@Base+0x42a80>
    cdcc:	ldr	x0, [x1, #8]
    cdd0:	stp	x19, x20, [sp, #16]
    cdd4:	add	x20, x22, #0x320
    cdd8:	str	wzr, [sp, #60]
    cddc:	add	x20, x20, #0x1a0
    cde0:	mov	x19, x1
    cde4:	cmp	x0, x20
    cde8:	b.eq	ce38 <PyFloat_FromString@plt+0x63a8>  // b.none
    cdec:	mov	x1, x20
    cdf0:	bl	69c0 <PyType_IsSubtype@plt>
    cdf4:	cbnz	w0, ce38 <PyFloat_FromString@plt+0x63a8>
    cdf8:	ldr	x2, [x19, #8]
    cdfc:	ldr	x0, [x2, #168]
    ce00:	tbnz	w0, #24, ced0 <PyFloat_FromString@plt+0x6440>
    ce04:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
    ce08:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
    ce0c:	ldr	x2, [x2, #24]
    ce10:	add	x1, x1, #0x8
    ce14:	ldr	x0, [x0, #3936]
    ce18:	mov	x20, #0x0                   	// #0
    ce1c:	ldr	x0, [x0]
    ce20:	bl	6a10 <PyErr_Format@plt>
    ce24:	mov	x0, x20
    ce28:	ldp	x19, x20, [sp, #16]
    ce2c:	ldp	x21, x22, [sp, #32]
    ce30:	ldp	x29, x30, [sp], #64
    ce34:	ret
    ce38:	ldr	x0, [x19]
    ce3c:	add	x0, x0, #0x1
    ce40:	str	x0, [x19]
    ce44:	add	x0, x22, #0x320
    ce48:	add	x0, x0, #0x1a0
    ce4c:	bl	6c60 <PyFloat_FromString@plt+0x1d0>
    ce50:	mov	x20, x0
    ce54:	cbz	x0, cf00 <PyFloat_FromString@plt+0x6470>
    ce58:	add	x0, x0, #0x18
    ce5c:	add	x3, sp, #0x3c
    ce60:	add	x2, x21, #0x10
    ce64:	add	x1, x19, #0x18
    ce68:	bl	348d8 <PyInit__decimal@@Base+0x1a358>
    ce6c:	ldr	x0, [x19]
    ce70:	sub	x0, x0, #0x1
    ce74:	str	x0, [x19]
    ce78:	cbz	x0, ceb4 <PyFloat_FromString@plt+0x6424>
    ce7c:	ldr	w1, [sp, #60]
    ce80:	mov	x0, x21
    ce84:	bl	7f90 <PyFloat_FromString@plt+0x1500>
    ce88:	cbz	w0, ce24 <PyFloat_FromString@plt+0x6394>
    ce8c:	ldr	x0, [x20]
    ce90:	sub	x0, x0, #0x1
    ce94:	str	x0, [x20]
    ce98:	cbz	x0, cf1c <PyFloat_FromString@plt+0x648c>
    ce9c:	mov	x20, #0x0                   	// #0
    cea0:	mov	x0, x20
    cea4:	ldp	x19, x20, [sp, #16]
    cea8:	ldp	x21, x22, [sp, #32]
    ceac:	ldp	x29, x30, [sp], #64
    ceb0:	ret
    ceb4:	mov	x0, x19
    ceb8:	bl	65d0 <_Py_Dealloc@plt>
    cebc:	ldr	w1, [sp, #60]
    cec0:	mov	x0, x21
    cec4:	bl	7f90 <PyFloat_FromString@plt+0x1500>
    cec8:	cbz	w0, ce24 <PyFloat_FromString@plt+0x6394>
    cecc:	b	ce8c <PyFloat_FromString@plt+0x63fc>
    ced0:	mov	x1, x19
    ced4:	mov	x0, x20
    ced8:	mov	x2, x21
    cedc:	bl	82f8 <PyFloat_FromString@plt+0x1868>
    cee0:	mov	x19, x0
    cee4:	cbz	x0, ce9c <PyFloat_FromString@plt+0x640c>
    cee8:	add	x0, x22, #0x320
    ceec:	add	x0, x0, #0x1a0
    cef0:	bl	6c60 <PyFloat_FromString@plt+0x1d0>
    cef4:	mov	x20, x0
    cef8:	cbnz	x0, ce58 <PyFloat_FromString@plt+0x63c8>
    cefc:	nop
    cf00:	ldr	x0, [x19]
    cf04:	sub	x0, x0, #0x1
    cf08:	str	x0, [x19]
    cf0c:	cbnz	x0, ce9c <PyFloat_FromString@plt+0x640c>
    cf10:	mov	x0, x19
    cf14:	bl	65d0 <_Py_Dealloc@plt>
    cf18:	b	ce24 <PyFloat_FromString@plt+0x6394>
    cf1c:	mov	x0, x20
    cf20:	mov	x20, #0x0                   	// #0
    cf24:	bl	65d0 <_Py_Dealloc@plt>
    cf28:	b	ce24 <PyFloat_FromString@plt+0x6394>
    cf2c:	nop
    cf30:	stp	x29, x30, [sp, #-64]!
    cf34:	mov	x29, sp
    cf38:	stp	x21, x22, [sp, #32]
    cf3c:	mov	x21, x0
    cf40:	adrp	x22, 5d000 <PyInit__decimal@@Base+0x42a80>
    cf44:	ldr	x0, [x1, #8]
    cf48:	stp	x19, x20, [sp, #16]
    cf4c:	add	x20, x22, #0x320
    cf50:	str	wzr, [sp, #60]
    cf54:	add	x20, x20, #0x1a0
    cf58:	mov	x19, x1
    cf5c:	cmp	x0, x20
    cf60:	b.eq	cfb0 <PyFloat_FromString@plt+0x6520>  // b.none
    cf64:	mov	x1, x20
    cf68:	bl	69c0 <PyType_IsSubtype@plt>
    cf6c:	cbnz	w0, cfb0 <PyFloat_FromString@plt+0x6520>
    cf70:	ldr	x2, [x19, #8]
    cf74:	ldr	x0, [x2, #168]
    cf78:	tbnz	w0, #24, d048 <PyFloat_FromString@plt+0x65b8>
    cf7c:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
    cf80:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
    cf84:	ldr	x2, [x2, #24]
    cf88:	add	x1, x1, #0x8
    cf8c:	ldr	x0, [x0, #3936]
    cf90:	mov	x20, #0x0                   	// #0
    cf94:	ldr	x0, [x0]
    cf98:	bl	6a10 <PyErr_Format@plt>
    cf9c:	mov	x0, x20
    cfa0:	ldp	x19, x20, [sp, #16]
    cfa4:	ldp	x21, x22, [sp, #32]
    cfa8:	ldp	x29, x30, [sp], #64
    cfac:	ret
    cfb0:	ldr	x0, [x19]
    cfb4:	add	x0, x0, #0x1
    cfb8:	str	x0, [x19]
    cfbc:	add	x0, x22, #0x320
    cfc0:	add	x0, x0, #0x1a0
    cfc4:	bl	6c60 <PyFloat_FromString@plt+0x1d0>
    cfc8:	mov	x20, x0
    cfcc:	cbz	x0, d078 <PyFloat_FromString@plt+0x65e8>
    cfd0:	add	x0, x0, #0x18
    cfd4:	add	x3, sp, #0x3c
    cfd8:	add	x2, x21, #0x10
    cfdc:	add	x1, x19, #0x18
    cfe0:	bl	35438 <PyInit__decimal@@Base+0x1aeb8>
    cfe4:	ldr	x0, [x19]
    cfe8:	sub	x0, x0, #0x1
    cfec:	str	x0, [x19]
    cff0:	cbz	x0, d02c <PyFloat_FromString@plt+0x659c>
    cff4:	ldr	w1, [sp, #60]
    cff8:	mov	x0, x21
    cffc:	bl	7f90 <PyFloat_FromString@plt+0x1500>
    d000:	cbz	w0, cf9c <PyFloat_FromString@plt+0x650c>
    d004:	ldr	x0, [x20]
    d008:	sub	x0, x0, #0x1
    d00c:	str	x0, [x20]
    d010:	cbz	x0, d094 <PyFloat_FromString@plt+0x6604>
    d014:	mov	x20, #0x0                   	// #0
    d018:	mov	x0, x20
    d01c:	ldp	x19, x20, [sp, #16]
    d020:	ldp	x21, x22, [sp, #32]
    d024:	ldp	x29, x30, [sp], #64
    d028:	ret
    d02c:	mov	x0, x19
    d030:	bl	65d0 <_Py_Dealloc@plt>
    d034:	ldr	w1, [sp, #60]
    d038:	mov	x0, x21
    d03c:	bl	7f90 <PyFloat_FromString@plt+0x1500>
    d040:	cbz	w0, cf9c <PyFloat_FromString@plt+0x650c>
    d044:	b	d004 <PyFloat_FromString@plt+0x6574>
    d048:	mov	x1, x19
    d04c:	mov	x0, x20
    d050:	mov	x2, x21
    d054:	bl	82f8 <PyFloat_FromString@plt+0x1868>
    d058:	mov	x19, x0
    d05c:	cbz	x0, d014 <PyFloat_FromString@plt+0x6584>
    d060:	add	x0, x22, #0x320
    d064:	add	x0, x0, #0x1a0
    d068:	bl	6c60 <PyFloat_FromString@plt+0x1d0>
    d06c:	mov	x20, x0
    d070:	cbnz	x0, cfd0 <PyFloat_FromString@plt+0x6540>
    d074:	nop
    d078:	ldr	x0, [x19]
    d07c:	sub	x0, x0, #0x1
    d080:	str	x0, [x19]
    d084:	cbnz	x0, d014 <PyFloat_FromString@plt+0x6584>
    d088:	mov	x0, x19
    d08c:	bl	65d0 <_Py_Dealloc@plt>
    d090:	b	cf9c <PyFloat_FromString@plt+0x650c>
    d094:	mov	x0, x20
    d098:	mov	x20, #0x0                   	// #0
    d09c:	bl	65d0 <_Py_Dealloc@plt>
    d0a0:	b	cf9c <PyFloat_FromString@plt+0x650c>
    d0a4:	nop
    d0a8:	stp	x29, x30, [sp, #-64]!
    d0ac:	mov	x29, sp
    d0b0:	stp	x21, x22, [sp, #32]
    d0b4:	mov	x21, x0
    d0b8:	adrp	x22, 5d000 <PyInit__decimal@@Base+0x42a80>
    d0bc:	ldr	x0, [x1, #8]
    d0c0:	stp	x19, x20, [sp, #16]
    d0c4:	add	x20, x22, #0x320
    d0c8:	str	wzr, [sp, #60]
    d0cc:	add	x20, x20, #0x1a0
    d0d0:	mov	x19, x1
    d0d4:	cmp	x0, x20
    d0d8:	b.eq	d128 <PyFloat_FromString@plt+0x6698>  // b.none
    d0dc:	mov	x1, x20
    d0e0:	bl	69c0 <PyType_IsSubtype@plt>
    d0e4:	cbnz	w0, d128 <PyFloat_FromString@plt+0x6698>
    d0e8:	ldr	x2, [x19, #8]
    d0ec:	ldr	x0, [x2, #168]
    d0f0:	tbnz	w0, #24, d1c0 <PyFloat_FromString@plt+0x6730>
    d0f4:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
    d0f8:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
    d0fc:	ldr	x2, [x2, #24]
    d100:	add	x1, x1, #0x8
    d104:	ldr	x0, [x0, #3936]
    d108:	mov	x20, #0x0                   	// #0
    d10c:	ldr	x0, [x0]
    d110:	bl	6a10 <PyErr_Format@plt>
    d114:	mov	x0, x20
    d118:	ldp	x19, x20, [sp, #16]
    d11c:	ldp	x21, x22, [sp, #32]
    d120:	ldp	x29, x30, [sp], #64
    d124:	ret
    d128:	ldr	x0, [x19]
    d12c:	add	x0, x0, #0x1
    d130:	str	x0, [x19]
    d134:	add	x0, x22, #0x320
    d138:	add	x0, x0, #0x1a0
    d13c:	bl	6c60 <PyFloat_FromString@plt+0x1d0>
    d140:	mov	x20, x0
    d144:	cbz	x0, d1f0 <PyFloat_FromString@plt+0x6760>
    d148:	add	x0, x0, #0x18
    d14c:	add	x3, sp, #0x3c
    d150:	add	x2, x21, #0x10
    d154:	add	x1, x19, #0x18
    d158:	bl	33e90 <PyInit__decimal@@Base+0x19910>
    d15c:	ldr	x0, [x19]
    d160:	sub	x0, x0, #0x1
    d164:	str	x0, [x19]
    d168:	cbz	x0, d1a4 <PyFloat_FromString@plt+0x6714>
    d16c:	ldr	w1, [sp, #60]
    d170:	mov	x0, x21
    d174:	bl	7f90 <PyFloat_FromString@plt+0x1500>
    d178:	cbz	w0, d114 <PyFloat_FromString@plt+0x6684>
    d17c:	ldr	x0, [x20]
    d180:	sub	x0, x0, #0x1
    d184:	str	x0, [x20]
    d188:	cbz	x0, d20c <PyFloat_FromString@plt+0x677c>
    d18c:	mov	x20, #0x0                   	// #0
    d190:	mov	x0, x20
    d194:	ldp	x19, x20, [sp, #16]
    d198:	ldp	x21, x22, [sp, #32]
    d19c:	ldp	x29, x30, [sp], #64
    d1a0:	ret
    d1a4:	mov	x0, x19
    d1a8:	bl	65d0 <_Py_Dealloc@plt>
    d1ac:	ldr	w1, [sp, #60]
    d1b0:	mov	x0, x21
    d1b4:	bl	7f90 <PyFloat_FromString@plt+0x1500>
    d1b8:	cbz	w0, d114 <PyFloat_FromString@plt+0x6684>
    d1bc:	b	d17c <PyFloat_FromString@plt+0x66ec>
    d1c0:	mov	x1, x19
    d1c4:	mov	x0, x20
    d1c8:	mov	x2, x21
    d1cc:	bl	82f8 <PyFloat_FromString@plt+0x1868>
    d1d0:	mov	x19, x0
    d1d4:	cbz	x0, d18c <PyFloat_FromString@plt+0x66fc>
    d1d8:	add	x0, x22, #0x320
    d1dc:	add	x0, x0, #0x1a0
    d1e0:	bl	6c60 <PyFloat_FromString@plt+0x1d0>
    d1e4:	mov	x20, x0
    d1e8:	cbnz	x0, d148 <PyFloat_FromString@plt+0x66b8>
    d1ec:	nop
    d1f0:	ldr	x0, [x19]
    d1f4:	sub	x0, x0, #0x1
    d1f8:	str	x0, [x19]
    d1fc:	cbnz	x0, d18c <PyFloat_FromString@plt+0x66fc>
    d200:	mov	x0, x19
    d204:	bl	65d0 <_Py_Dealloc@plt>
    d208:	b	d114 <PyFloat_FromString@plt+0x6684>
    d20c:	mov	x0, x20
    d210:	mov	x20, #0x0                   	// #0
    d214:	bl	65d0 <_Py_Dealloc@plt>
    d218:	b	d114 <PyFloat_FromString@plt+0x6684>
    d21c:	nop
    d220:	stp	x29, x30, [sp, #-64]!
    d224:	mov	x29, sp
    d228:	stp	x21, x22, [sp, #32]
    d22c:	mov	x21, x0
    d230:	adrp	x22, 5d000 <PyInit__decimal@@Base+0x42a80>
    d234:	ldr	x0, [x1, #8]
    d238:	stp	x19, x20, [sp, #16]
    d23c:	add	x20, x22, #0x320
    d240:	str	wzr, [sp, #60]
    d244:	add	x20, x20, #0x1a0
    d248:	mov	x19, x1
    d24c:	cmp	x0, x20
    d250:	b.eq	d2a0 <PyFloat_FromString@plt+0x6810>  // b.none
    d254:	mov	x1, x20
    d258:	bl	69c0 <PyType_IsSubtype@plt>
    d25c:	cbnz	w0, d2a0 <PyFloat_FromString@plt+0x6810>
    d260:	ldr	x2, [x19, #8]
    d264:	ldr	x0, [x2, #168]
    d268:	tbnz	w0, #24, d338 <PyFloat_FromString@plt+0x68a8>
    d26c:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
    d270:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
    d274:	ldr	x2, [x2, #24]
    d278:	add	x1, x1, #0x8
    d27c:	ldr	x0, [x0, #3936]
    d280:	mov	x20, #0x0                   	// #0
    d284:	ldr	x0, [x0]
    d288:	bl	6a10 <PyErr_Format@plt>
    d28c:	mov	x0, x20
    d290:	ldp	x19, x20, [sp, #16]
    d294:	ldp	x21, x22, [sp, #32]
    d298:	ldp	x29, x30, [sp], #64
    d29c:	ret
    d2a0:	ldr	x0, [x19]
    d2a4:	add	x0, x0, #0x1
    d2a8:	str	x0, [x19]
    d2ac:	add	x0, x22, #0x320
    d2b0:	add	x0, x0, #0x1a0
    d2b4:	bl	6c60 <PyFloat_FromString@plt+0x1d0>
    d2b8:	mov	x20, x0
    d2bc:	cbz	x0, d368 <PyFloat_FromString@plt+0x68d8>
    d2c0:	add	x0, x0, #0x18
    d2c4:	add	x3, sp, #0x3c
    d2c8:	add	x2, x21, #0x10
    d2cc:	add	x1, x19, #0x18
    d2d0:	bl	35298 <PyInit__decimal@@Base+0x1ad18>
    d2d4:	ldr	x0, [x19]
    d2d8:	sub	x0, x0, #0x1
    d2dc:	str	x0, [x19]
    d2e0:	cbz	x0, d31c <PyFloat_FromString@plt+0x688c>
    d2e4:	ldr	w1, [sp, #60]
    d2e8:	mov	x0, x21
    d2ec:	bl	7f90 <PyFloat_FromString@plt+0x1500>
    d2f0:	cbz	w0, d28c <PyFloat_FromString@plt+0x67fc>
    d2f4:	ldr	x0, [x20]
    d2f8:	sub	x0, x0, #0x1
    d2fc:	str	x0, [x20]
    d300:	cbz	x0, d384 <PyFloat_FromString@plt+0x68f4>
    d304:	mov	x20, #0x0                   	// #0
    d308:	mov	x0, x20
    d30c:	ldp	x19, x20, [sp, #16]
    d310:	ldp	x21, x22, [sp, #32]
    d314:	ldp	x29, x30, [sp], #64
    d318:	ret
    d31c:	mov	x0, x19
    d320:	bl	65d0 <_Py_Dealloc@plt>
    d324:	ldr	w1, [sp, #60]
    d328:	mov	x0, x21
    d32c:	bl	7f90 <PyFloat_FromString@plt+0x1500>
    d330:	cbz	w0, d28c <PyFloat_FromString@plt+0x67fc>
    d334:	b	d2f4 <PyFloat_FromString@plt+0x6864>
    d338:	mov	x1, x19
    d33c:	mov	x0, x20
    d340:	mov	x2, x21
    d344:	bl	82f8 <PyFloat_FromString@plt+0x1868>
    d348:	mov	x19, x0
    d34c:	cbz	x0, d304 <PyFloat_FromString@plt+0x6874>
    d350:	add	x0, x22, #0x320
    d354:	add	x0, x0, #0x1a0
    d358:	bl	6c60 <PyFloat_FromString@plt+0x1d0>
    d35c:	mov	x20, x0
    d360:	cbnz	x0, d2c0 <PyFloat_FromString@plt+0x6830>
    d364:	nop
    d368:	ldr	x0, [x19]
    d36c:	sub	x0, x0, #0x1
    d370:	str	x0, [x19]
    d374:	cbnz	x0, d304 <PyFloat_FromString@plt+0x6874>
    d378:	mov	x0, x19
    d37c:	bl	65d0 <_Py_Dealloc@plt>
    d380:	b	d28c <PyFloat_FromString@plt+0x67fc>
    d384:	mov	x0, x20
    d388:	mov	x20, #0x0                   	// #0
    d38c:	bl	65d0 <_Py_Dealloc@plt>
    d390:	b	d28c <PyFloat_FromString@plt+0x67fc>
    d394:	nop
    d398:	stp	x29, x30, [sp, #-64]!
    d39c:	mov	x29, sp
    d3a0:	stp	x21, x22, [sp, #32]
    d3a4:	mov	x21, x0
    d3a8:	adrp	x22, 5d000 <PyInit__decimal@@Base+0x42a80>
    d3ac:	ldr	x0, [x1, #8]
    d3b0:	stp	x19, x20, [sp, #16]
    d3b4:	add	x20, x22, #0x320
    d3b8:	str	wzr, [sp, #60]
    d3bc:	add	x20, x20, #0x1a0
    d3c0:	mov	x19, x1
    d3c4:	cmp	x0, x20
    d3c8:	b.eq	d418 <PyFloat_FromString@plt+0x6988>  // b.none
    d3cc:	mov	x1, x20
    d3d0:	bl	69c0 <PyType_IsSubtype@plt>
    d3d4:	cbnz	w0, d418 <PyFloat_FromString@plt+0x6988>
    d3d8:	ldr	x2, [x19, #8]
    d3dc:	ldr	x0, [x2, #168]
    d3e0:	tbnz	w0, #24, d4b0 <PyFloat_FromString@plt+0x6a20>
    d3e4:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
    d3e8:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
    d3ec:	ldr	x2, [x2, #24]
    d3f0:	add	x1, x1, #0x8
    d3f4:	ldr	x0, [x0, #3936]
    d3f8:	mov	x20, #0x0                   	// #0
    d3fc:	ldr	x0, [x0]
    d400:	bl	6a10 <PyErr_Format@plt>
    d404:	mov	x0, x20
    d408:	ldp	x19, x20, [sp, #16]
    d40c:	ldp	x21, x22, [sp, #32]
    d410:	ldp	x29, x30, [sp], #64
    d414:	ret
    d418:	ldr	x0, [x19]
    d41c:	add	x0, x0, #0x1
    d420:	str	x0, [x19]
    d424:	add	x0, x22, #0x320
    d428:	add	x0, x0, #0x1a0
    d42c:	bl	6c60 <PyFloat_FromString@plt+0x1d0>
    d430:	mov	x20, x0
    d434:	cbz	x0, d4e0 <PyFloat_FromString@plt+0x6a50>
    d438:	add	x0, x0, #0x18
    d43c:	add	x3, sp, #0x3c
    d440:	add	x2, x21, #0x10
    d444:	add	x1, x19, #0x18
    d448:	bl	35658 <PyInit__decimal@@Base+0x1b0d8>
    d44c:	ldr	x0, [x19]
    d450:	sub	x0, x0, #0x1
    d454:	str	x0, [x19]
    d458:	cbz	x0, d494 <PyFloat_FromString@plt+0x6a04>
    d45c:	ldr	w1, [sp, #60]
    d460:	mov	x0, x21
    d464:	bl	7f90 <PyFloat_FromString@plt+0x1500>
    d468:	cbz	w0, d404 <PyFloat_FromString@plt+0x6974>
    d46c:	ldr	x0, [x20]
    d470:	sub	x0, x0, #0x1
    d474:	str	x0, [x20]
    d478:	cbz	x0, d4fc <PyFloat_FromString@plt+0x6a6c>
    d47c:	mov	x20, #0x0                   	// #0
    d480:	mov	x0, x20
    d484:	ldp	x19, x20, [sp, #16]
    d488:	ldp	x21, x22, [sp, #32]
    d48c:	ldp	x29, x30, [sp], #64
    d490:	ret
    d494:	mov	x0, x19
    d498:	bl	65d0 <_Py_Dealloc@plt>
    d49c:	ldr	w1, [sp, #60]
    d4a0:	mov	x0, x21
    d4a4:	bl	7f90 <PyFloat_FromString@plt+0x1500>
    d4a8:	cbz	w0, d404 <PyFloat_FromString@plt+0x6974>
    d4ac:	b	d46c <PyFloat_FromString@plt+0x69dc>
    d4b0:	mov	x1, x19
    d4b4:	mov	x0, x20
    d4b8:	mov	x2, x21
    d4bc:	bl	82f8 <PyFloat_FromString@plt+0x1868>
    d4c0:	mov	x19, x0
    d4c4:	cbz	x0, d47c <PyFloat_FromString@plt+0x69ec>
    d4c8:	add	x0, x22, #0x320
    d4cc:	add	x0, x0, #0x1a0
    d4d0:	bl	6c60 <PyFloat_FromString@plt+0x1d0>
    d4d4:	mov	x20, x0
    d4d8:	cbnz	x0, d438 <PyFloat_FromString@plt+0x69a8>
    d4dc:	nop
    d4e0:	ldr	x0, [x19]
    d4e4:	sub	x0, x0, #0x1
    d4e8:	str	x0, [x19]
    d4ec:	cbnz	x0, d47c <PyFloat_FromString@plt+0x69ec>
    d4f0:	mov	x0, x19
    d4f4:	bl	65d0 <_Py_Dealloc@plt>
    d4f8:	b	d404 <PyFloat_FromString@plt+0x6974>
    d4fc:	mov	x0, x20
    d500:	mov	x20, #0x0                   	// #0
    d504:	bl	65d0 <_Py_Dealloc@plt>
    d508:	b	d404 <PyFloat_FromString@plt+0x6974>
    d50c:	nop
    d510:	stp	x29, x30, [sp, #-64]!
    d514:	mov	x29, sp
    d518:	stp	x21, x22, [sp, #32]
    d51c:	mov	x21, x0
    d520:	adrp	x22, 5d000 <PyInit__decimal@@Base+0x42a80>
    d524:	ldr	x0, [x1, #8]
    d528:	stp	x19, x20, [sp, #16]
    d52c:	add	x20, x22, #0x320
    d530:	str	wzr, [sp, #60]
    d534:	add	x20, x20, #0x1a0
    d538:	mov	x19, x1
    d53c:	cmp	x0, x20
    d540:	b.eq	d590 <PyFloat_FromString@plt+0x6b00>  // b.none
    d544:	mov	x1, x20
    d548:	bl	69c0 <PyType_IsSubtype@plt>
    d54c:	cbnz	w0, d590 <PyFloat_FromString@plt+0x6b00>
    d550:	ldr	x2, [x19, #8]
    d554:	ldr	x0, [x2, #168]
    d558:	tbnz	w0, #24, d628 <PyFloat_FromString@plt+0x6b98>
    d55c:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
    d560:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
    d564:	ldr	x2, [x2, #24]
    d568:	add	x1, x1, #0x8
    d56c:	ldr	x0, [x0, #3936]
    d570:	mov	x20, #0x0                   	// #0
    d574:	ldr	x0, [x0]
    d578:	bl	6a10 <PyErr_Format@plt>
    d57c:	mov	x0, x20
    d580:	ldp	x19, x20, [sp, #16]
    d584:	ldp	x21, x22, [sp, #32]
    d588:	ldp	x29, x30, [sp], #64
    d58c:	ret
    d590:	ldr	x0, [x19]
    d594:	add	x0, x0, #0x1
    d598:	str	x0, [x19]
    d59c:	add	x0, x22, #0x320
    d5a0:	add	x0, x0, #0x1a0
    d5a4:	bl	6c60 <PyFloat_FromString@plt+0x1d0>
    d5a8:	mov	x20, x0
    d5ac:	cbz	x0, d658 <PyFloat_FromString@plt+0x6bc8>
    d5b0:	add	x0, x0, #0x18
    d5b4:	add	x3, sp, #0x3c
    d5b8:	add	x2, x21, #0x10
    d5bc:	add	x1, x19, #0x18
    d5c0:	bl	35370 <PyInit__decimal@@Base+0x1adf0>
    d5c4:	ldr	x0, [x19]
    d5c8:	sub	x0, x0, #0x1
    d5cc:	str	x0, [x19]
    d5d0:	cbz	x0, d60c <PyFloat_FromString@plt+0x6b7c>
    d5d4:	ldr	w1, [sp, #60]
    d5d8:	mov	x0, x21
    d5dc:	bl	7f90 <PyFloat_FromString@plt+0x1500>
    d5e0:	cbz	w0, d57c <PyFloat_FromString@plt+0x6aec>
    d5e4:	ldr	x0, [x20]
    d5e8:	sub	x0, x0, #0x1
    d5ec:	str	x0, [x20]
    d5f0:	cbz	x0, d674 <PyFloat_FromString@plt+0x6be4>
    d5f4:	mov	x20, #0x0                   	// #0
    d5f8:	mov	x0, x20
    d5fc:	ldp	x19, x20, [sp, #16]
    d600:	ldp	x21, x22, [sp, #32]
    d604:	ldp	x29, x30, [sp], #64
    d608:	ret
    d60c:	mov	x0, x19
    d610:	bl	65d0 <_Py_Dealloc@plt>
    d614:	ldr	w1, [sp, #60]
    d618:	mov	x0, x21
    d61c:	bl	7f90 <PyFloat_FromString@plt+0x1500>
    d620:	cbz	w0, d57c <PyFloat_FromString@plt+0x6aec>
    d624:	b	d5e4 <PyFloat_FromString@plt+0x6b54>
    d628:	mov	x1, x19
    d62c:	mov	x0, x20
    d630:	mov	x2, x21
    d634:	bl	82f8 <PyFloat_FromString@plt+0x1868>
    d638:	mov	x19, x0
    d63c:	cbz	x0, d5f4 <PyFloat_FromString@plt+0x6b64>
    d640:	add	x0, x22, #0x320
    d644:	add	x0, x0, #0x1a0
    d648:	bl	6c60 <PyFloat_FromString@plt+0x1d0>
    d64c:	mov	x20, x0
    d650:	cbnz	x0, d5b0 <PyFloat_FromString@plt+0x6b20>
    d654:	nop
    d658:	ldr	x0, [x19]
    d65c:	sub	x0, x0, #0x1
    d660:	str	x0, [x19]
    d664:	cbnz	x0, d5f4 <PyFloat_FromString@plt+0x6b64>
    d668:	mov	x0, x19
    d66c:	bl	65d0 <_Py_Dealloc@plt>
    d670:	b	d57c <PyFloat_FromString@plt+0x6aec>
    d674:	mov	x0, x20
    d678:	mov	x20, #0x0                   	// #0
    d67c:	bl	65d0 <_Py_Dealloc@plt>
    d680:	b	d57c <PyFloat_FromString@plt+0x6aec>
    d684:	nop
    d688:	stp	x29, x30, [sp, #-64]!
    d68c:	mov	x29, sp
    d690:	stp	x21, x22, [sp, #32]
    d694:	mov	x21, x0
    d698:	adrp	x22, 5d000 <PyInit__decimal@@Base+0x42a80>
    d69c:	ldr	x0, [x1, #8]
    d6a0:	stp	x19, x20, [sp, #16]
    d6a4:	add	x20, x22, #0x320
    d6a8:	str	wzr, [sp, #60]
    d6ac:	add	x20, x20, #0x1a0
    d6b0:	mov	x19, x1
    d6b4:	cmp	x0, x20
    d6b8:	b.eq	d708 <PyFloat_FromString@plt+0x6c78>  // b.none
    d6bc:	mov	x1, x20
    d6c0:	bl	69c0 <PyType_IsSubtype@plt>
    d6c4:	cbnz	w0, d708 <PyFloat_FromString@plt+0x6c78>
    d6c8:	ldr	x2, [x19, #8]
    d6cc:	ldr	x0, [x2, #168]
    d6d0:	tbnz	w0, #24, d7a0 <PyFloat_FromString@plt+0x6d10>
    d6d4:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
    d6d8:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
    d6dc:	ldr	x2, [x2, #24]
    d6e0:	add	x1, x1, #0x8
    d6e4:	ldr	x0, [x0, #3936]
    d6e8:	mov	x20, #0x0                   	// #0
    d6ec:	ldr	x0, [x0]
    d6f0:	bl	6a10 <PyErr_Format@plt>
    d6f4:	mov	x0, x20
    d6f8:	ldp	x19, x20, [sp, #16]
    d6fc:	ldp	x21, x22, [sp, #32]
    d700:	ldp	x29, x30, [sp], #64
    d704:	ret
    d708:	ldr	x0, [x19]
    d70c:	add	x0, x0, #0x1
    d710:	str	x0, [x19]
    d714:	add	x0, x22, #0x320
    d718:	add	x0, x0, #0x1a0
    d71c:	bl	6c60 <PyFloat_FromString@plt+0x1d0>
    d720:	mov	x20, x0
    d724:	cbz	x0, d7d0 <PyFloat_FromString@plt+0x6d40>
    d728:	add	x0, x0, #0x18
    d72c:	add	x3, sp, #0x3c
    d730:	add	x2, x21, #0x10
    d734:	add	x1, x19, #0x18
    d738:	bl	2d348 <PyInit__decimal@@Base+0x12dc8>
    d73c:	ldr	x0, [x19]
    d740:	sub	x0, x0, #0x1
    d744:	str	x0, [x19]
    d748:	cbz	x0, d784 <PyFloat_FromString@plt+0x6cf4>
    d74c:	ldr	w1, [sp, #60]
    d750:	mov	x0, x21
    d754:	bl	7f90 <PyFloat_FromString@plt+0x1500>
    d758:	cbz	w0, d6f4 <PyFloat_FromString@plt+0x6c64>
    d75c:	ldr	x0, [x20]
    d760:	sub	x0, x0, #0x1
    d764:	str	x0, [x20]
    d768:	cbz	x0, d7ec <PyFloat_FromString@plt+0x6d5c>
    d76c:	mov	x20, #0x0                   	// #0
    d770:	mov	x0, x20
    d774:	ldp	x19, x20, [sp, #16]
    d778:	ldp	x21, x22, [sp, #32]
    d77c:	ldp	x29, x30, [sp], #64
    d780:	ret
    d784:	mov	x0, x19
    d788:	bl	65d0 <_Py_Dealloc@plt>
    d78c:	ldr	w1, [sp, #60]
    d790:	mov	x0, x21
    d794:	bl	7f90 <PyFloat_FromString@plt+0x1500>
    d798:	cbz	w0, d6f4 <PyFloat_FromString@plt+0x6c64>
    d79c:	b	d75c <PyFloat_FromString@plt+0x6ccc>
    d7a0:	mov	x1, x19
    d7a4:	mov	x0, x20
    d7a8:	mov	x2, x21
    d7ac:	bl	82f8 <PyFloat_FromString@plt+0x1868>
    d7b0:	mov	x19, x0
    d7b4:	cbz	x0, d76c <PyFloat_FromString@plt+0x6cdc>
    d7b8:	add	x0, x22, #0x320
    d7bc:	add	x0, x0, #0x1a0
    d7c0:	bl	6c60 <PyFloat_FromString@plt+0x1d0>
    d7c4:	mov	x20, x0
    d7c8:	cbnz	x0, d728 <PyFloat_FromString@plt+0x6c98>
    d7cc:	nop
    d7d0:	ldr	x0, [x19]
    d7d4:	sub	x0, x0, #0x1
    d7d8:	str	x0, [x19]
    d7dc:	cbnz	x0, d76c <PyFloat_FromString@plt+0x6cdc>
    d7e0:	mov	x0, x19
    d7e4:	bl	65d0 <_Py_Dealloc@plt>
    d7e8:	b	d6f4 <PyFloat_FromString@plt+0x6c64>
    d7ec:	mov	x0, x20
    d7f0:	mov	x20, #0x0                   	// #0
    d7f4:	bl	65d0 <_Py_Dealloc@plt>
    d7f8:	b	d6f4 <PyFloat_FromString@plt+0x6c64>
    d7fc:	nop
    d800:	stp	x29, x30, [sp, #-64]!
    d804:	mov	x29, sp
    d808:	stp	x21, x22, [sp, #32]
    d80c:	mov	x21, x0
    d810:	adrp	x22, 5d000 <PyInit__decimal@@Base+0x42a80>
    d814:	ldr	x0, [x1, #8]
    d818:	stp	x19, x20, [sp, #16]
    d81c:	add	x20, x22, #0x320
    d820:	str	wzr, [sp, #60]
    d824:	add	x20, x20, #0x1a0
    d828:	mov	x19, x1
    d82c:	cmp	x0, x20
    d830:	b.eq	d880 <PyFloat_FromString@plt+0x6df0>  // b.none
    d834:	mov	x1, x20
    d838:	bl	69c0 <PyType_IsSubtype@plt>
    d83c:	cbnz	w0, d880 <PyFloat_FromString@plt+0x6df0>
    d840:	ldr	x2, [x19, #8]
    d844:	ldr	x0, [x2, #168]
    d848:	tbnz	w0, #24, d918 <PyFloat_FromString@plt+0x6e88>
    d84c:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
    d850:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
    d854:	ldr	x2, [x2, #24]
    d858:	add	x1, x1, #0x8
    d85c:	ldr	x0, [x0, #3936]
    d860:	mov	x20, #0x0                   	// #0
    d864:	ldr	x0, [x0]
    d868:	bl	6a10 <PyErr_Format@plt>
    d86c:	mov	x0, x20
    d870:	ldp	x19, x20, [sp, #16]
    d874:	ldp	x21, x22, [sp, #32]
    d878:	ldp	x29, x30, [sp], #64
    d87c:	ret
    d880:	ldr	x0, [x19]
    d884:	add	x0, x0, #0x1
    d888:	str	x0, [x19]
    d88c:	add	x0, x22, #0x320
    d890:	add	x0, x0, #0x1a0
    d894:	bl	6c60 <PyFloat_FromString@plt+0x1d0>
    d898:	mov	x20, x0
    d89c:	cbz	x0, d948 <PyFloat_FromString@plt+0x6eb8>
    d8a0:	add	x0, x0, #0x18
    d8a4:	add	x3, sp, #0x3c
    d8a8:	add	x2, x21, #0x10
    d8ac:	add	x1, x19, #0x18
    d8b0:	bl	2cfa0 <PyInit__decimal@@Base+0x12a20>
    d8b4:	ldr	x0, [x19]
    d8b8:	sub	x0, x0, #0x1
    d8bc:	str	x0, [x19]
    d8c0:	cbz	x0, d8fc <PyFloat_FromString@plt+0x6e6c>
    d8c4:	ldr	w1, [sp, #60]
    d8c8:	mov	x0, x21
    d8cc:	bl	7f90 <PyFloat_FromString@plt+0x1500>
    d8d0:	cbz	w0, d86c <PyFloat_FromString@plt+0x6ddc>
    d8d4:	ldr	x0, [x20]
    d8d8:	sub	x0, x0, #0x1
    d8dc:	str	x0, [x20]
    d8e0:	cbz	x0, d964 <PyFloat_FromString@plt+0x6ed4>
    d8e4:	mov	x20, #0x0                   	// #0
    d8e8:	mov	x0, x20
    d8ec:	ldp	x19, x20, [sp, #16]
    d8f0:	ldp	x21, x22, [sp, #32]
    d8f4:	ldp	x29, x30, [sp], #64
    d8f8:	ret
    d8fc:	mov	x0, x19
    d900:	bl	65d0 <_Py_Dealloc@plt>
    d904:	ldr	w1, [sp, #60]
    d908:	mov	x0, x21
    d90c:	bl	7f90 <PyFloat_FromString@plt+0x1500>
    d910:	cbz	w0, d86c <PyFloat_FromString@plt+0x6ddc>
    d914:	b	d8d4 <PyFloat_FromString@plt+0x6e44>
    d918:	mov	x1, x19
    d91c:	mov	x0, x20
    d920:	mov	x2, x21
    d924:	bl	82f8 <PyFloat_FromString@plt+0x1868>
    d928:	mov	x19, x0
    d92c:	cbz	x0, d8e4 <PyFloat_FromString@plt+0x6e54>
    d930:	add	x0, x22, #0x320
    d934:	add	x0, x0, #0x1a0
    d938:	bl	6c60 <PyFloat_FromString@plt+0x1d0>
    d93c:	mov	x20, x0
    d940:	cbnz	x0, d8a0 <PyFloat_FromString@plt+0x6e10>
    d944:	nop
    d948:	ldr	x0, [x19]
    d94c:	sub	x0, x0, #0x1
    d950:	str	x0, [x19]
    d954:	cbnz	x0, d8e4 <PyFloat_FromString@plt+0x6e54>
    d958:	mov	x0, x19
    d95c:	bl	65d0 <_Py_Dealloc@plt>
    d960:	b	d86c <PyFloat_FromString@plt+0x6ddc>
    d964:	mov	x0, x20
    d968:	mov	x20, #0x0                   	// #0
    d96c:	bl	65d0 <_Py_Dealloc@plt>
    d970:	b	d86c <PyFloat_FromString@plt+0x6ddc>
    d974:	nop
    d978:	stp	x29, x30, [sp, #-64]!
    d97c:	mov	x29, sp
    d980:	stp	x21, x22, [sp, #32]
    d984:	mov	x21, x0
    d988:	adrp	x22, 5d000 <PyInit__decimal@@Base+0x42a80>
    d98c:	ldr	x0, [x1, #8]
    d990:	stp	x19, x20, [sp, #16]
    d994:	add	x20, x22, #0x320
    d998:	str	wzr, [sp, #60]
    d99c:	add	x20, x20, #0x1a0
    d9a0:	mov	x19, x1
    d9a4:	cmp	x0, x20
    d9a8:	b.eq	d9f8 <PyFloat_FromString@plt+0x6f68>  // b.none
    d9ac:	mov	x1, x20
    d9b0:	bl	69c0 <PyType_IsSubtype@plt>
    d9b4:	cbnz	w0, d9f8 <PyFloat_FromString@plt+0x6f68>
    d9b8:	ldr	x2, [x19, #8]
    d9bc:	ldr	x0, [x2, #168]
    d9c0:	tbnz	w0, #24, da90 <PyFloat_FromString@plt+0x7000>
    d9c4:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
    d9c8:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
    d9cc:	ldr	x2, [x2, #24]
    d9d0:	add	x1, x1, #0x8
    d9d4:	ldr	x0, [x0, #3936]
    d9d8:	mov	x20, #0x0                   	// #0
    d9dc:	ldr	x0, [x0]
    d9e0:	bl	6a10 <PyErr_Format@plt>
    d9e4:	mov	x0, x20
    d9e8:	ldp	x19, x20, [sp, #16]
    d9ec:	ldp	x21, x22, [sp, #32]
    d9f0:	ldp	x29, x30, [sp], #64
    d9f4:	ret
    d9f8:	ldr	x0, [x19]
    d9fc:	add	x0, x0, #0x1
    da00:	str	x0, [x19]
    da04:	add	x0, x22, #0x320
    da08:	add	x0, x0, #0x1a0
    da0c:	bl	6c60 <PyFloat_FromString@plt+0x1d0>
    da10:	mov	x20, x0
    da14:	cbz	x0, dac0 <PyFloat_FromString@plt+0x7030>
    da18:	add	x0, x0, #0x18
    da1c:	add	x3, sp, #0x3c
    da20:	add	x2, x21, #0x10
    da24:	add	x1, x19, #0x18
    da28:	bl	377b8 <PyInit__decimal@@Base+0x1d238>
    da2c:	ldr	x0, [x19]
    da30:	sub	x0, x0, #0x1
    da34:	str	x0, [x19]
    da38:	cbz	x0, da74 <PyFloat_FromString@plt+0x6fe4>
    da3c:	ldr	w1, [sp, #60]
    da40:	mov	x0, x21
    da44:	bl	7f90 <PyFloat_FromString@plt+0x1500>
    da48:	cbz	w0, d9e4 <PyFloat_FromString@plt+0x6f54>
    da4c:	ldr	x0, [x20]
    da50:	sub	x0, x0, #0x1
    da54:	str	x0, [x20]
    da58:	cbz	x0, dadc <PyFloat_FromString@plt+0x704c>
    da5c:	mov	x20, #0x0                   	// #0
    da60:	mov	x0, x20
    da64:	ldp	x19, x20, [sp, #16]
    da68:	ldp	x21, x22, [sp, #32]
    da6c:	ldp	x29, x30, [sp], #64
    da70:	ret
    da74:	mov	x0, x19
    da78:	bl	65d0 <_Py_Dealloc@plt>
    da7c:	ldr	w1, [sp, #60]
    da80:	mov	x0, x21
    da84:	bl	7f90 <PyFloat_FromString@plt+0x1500>
    da88:	cbz	w0, d9e4 <PyFloat_FromString@plt+0x6f54>
    da8c:	b	da4c <PyFloat_FromString@plt+0x6fbc>
    da90:	mov	x1, x19
    da94:	mov	x0, x20
    da98:	mov	x2, x21
    da9c:	bl	82f8 <PyFloat_FromString@plt+0x1868>
    daa0:	mov	x19, x0
    daa4:	cbz	x0, da5c <PyFloat_FromString@plt+0x6fcc>
    daa8:	add	x0, x22, #0x320
    daac:	add	x0, x0, #0x1a0
    dab0:	bl	6c60 <PyFloat_FromString@plt+0x1d0>
    dab4:	mov	x20, x0
    dab8:	cbnz	x0, da18 <PyFloat_FromString@plt+0x6f88>
    dabc:	nop
    dac0:	ldr	x0, [x19]
    dac4:	sub	x0, x0, #0x1
    dac8:	str	x0, [x19]
    dacc:	cbnz	x0, da5c <PyFloat_FromString@plt+0x6fcc>
    dad0:	mov	x0, x19
    dad4:	bl	65d0 <_Py_Dealloc@plt>
    dad8:	b	d9e4 <PyFloat_FromString@plt+0x6f54>
    dadc:	mov	x0, x20
    dae0:	mov	x20, #0x0                   	// #0
    dae4:	bl	65d0 <_Py_Dealloc@plt>
    dae8:	b	d9e4 <PyFloat_FromString@plt+0x6f54>
    daec:	nop
    daf0:	stp	x29, x30, [sp, #-176]!
    daf4:	mov	x29, sp
    daf8:	stp	x23, x24, [sp, #48]
    dafc:	adrp	x24, 5f000 <PyInit__decimal@@Base+0x44a80>
    db00:	add	x3, x24, #0x6c0
    db04:	mov	x23, x0
    db08:	stp	x25, x26, [sp, #64]
    db0c:	add	x25, sp, #0x80
    db10:	ldr	x0, [x3, #80]
    db14:	stp	x19, x20, [sp, #16]
    db18:	mov	x19, x1
    db1c:	mov	x1, #0x0                   	// #0
    db20:	stp	x21, x22, [sp, #32]
    db24:	mov	w21, w2
    db28:	mov	x2, x25
    db2c:	str	wzr, [sp, #120]
    db30:	bl	6740 <PyContextVar_Get@plt>
    db34:	tbnz	w0, #31, dc38 <PyFloat_FromString@plt+0x71a8>
    db38:	ldr	x20, [sp, #128]
    db3c:	cbz	x20, dc60 <PyFloat_FromString@plt+0x71d0>
    db40:	ldr	x1, [x20]
    db44:	sub	x1, x1, #0x1
    db48:	str	x1, [x20]
    db4c:	cbz	x1, dc54 <PyFloat_FromString@plt+0x71c4>
    db50:	ldr	x0, [x19, #8]
    db54:	adrp	x26, 5d000 <PyInit__decimal@@Base+0x42a80>
    db58:	add	x22, x26, #0x320
    db5c:	add	x22, x22, #0x1a0
    db60:	cmp	x0, x22
    db64:	b.eq	dbf8 <PyFloat_FromString@plt+0x7168>  // b.none
    db68:	mov	x1, x22
    db6c:	bl	69c0 <PyType_IsSubtype@plt>
    db70:	cbnz	w0, dbf8 <PyFloat_FromString@plt+0x7168>
    db74:	ldr	x0, [x19, #8]
    db78:	ldr	x1, [x0, #168]
    db7c:	tbnz	w1, #24, dd34 <PyFloat_FromString@plt+0x72a4>
    db80:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41a80>
    db84:	ldr	x1, [x1, #3864]
    db88:	cmp	x0, x1
    db8c:	b.eq	dd58 <PyFloat_FromString@plt+0x72c8>  // b.none
    db90:	bl	69c0 <PyType_IsSubtype@plt>
    db94:	cbnz	w0, dd58 <PyFloat_FromString@plt+0x72c8>
    db98:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41a80>
    db9c:	ldr	x0, [x19, #8]
    dba0:	ldr	x1, [x1, #3952]
    dba4:	cmp	x0, x1
    dba8:	b.eq	dbb4 <PyFloat_FromString@plt+0x7124>  // b.none
    dbac:	bl	69c0 <PyType_IsSubtype@plt>
    dbb0:	cbz	w0, dbc0 <PyFloat_FromString@plt+0x7130>
    dbb4:	sub	w0, w21, #0x2
    dbb8:	cmp	w0, #0x1
    dbbc:	b.ls	de6c <PyFloat_FromString@plt+0x73dc>  // b.plast
    dbc0:	add	x24, x24, #0x6c0
    dbc4:	mov	x0, x19
    dbc8:	ldr	x1, [x24, #144]
    dbcc:	bl	6660 <PyObject_IsInstance@plt>
    dbd0:	cmp	w0, #0x0
    dbd4:	b.lt	dc38 <PyFloat_FromString@plt+0x71a8>  // b.tstop
    dbd8:	b.ne	dea4 <PyFloat_FromString@plt+0x7414>  // b.any
    dbdc:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41a80>
    dbe0:	ldr	x1, [x1, #3912]
    dbe4:	mov	x0, x1
    dbe8:	ldr	x2, [x1]
    dbec:	add	x2, x2, #0x1
    dbf0:	str	x2, [x1]
    dbf4:	b	dc18 <PyFloat_FromString@plt+0x7188>
    dbf8:	ldr	x0, [x19]
    dbfc:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41a80>
    dc00:	add	x0, x0, #0x1
    dc04:	str	x0, [x19]
    dc08:	ldr	x0, [x1, #3912]
    dc0c:	cmp	x19, x0
    dc10:	b.ne	dc74 <PyFloat_FromString@plt+0x71e4>  // b.any
    dc14:	ldr	x0, [x1, #3912]
    dc18:	ldp	x19, x20, [sp, #16]
    dc1c:	ldp	x21, x22, [sp, #32]
    dc20:	ldp	x23, x24, [sp, #48]
    dc24:	ldp	x25, x26, [sp, #64]
    dc28:	ldp	x29, x30, [sp], #176
    dc2c:	ret
    dc30:	ldp	x27, x28, [sp, #80]
    dc34:	nop
    dc38:	mov	x0, #0x0                   	// #0
    dc3c:	ldp	x19, x20, [sp, #16]
    dc40:	ldp	x21, x22, [sp, #32]
    dc44:	ldp	x23, x24, [sp, #48]
    dc48:	ldp	x25, x26, [sp, #64]
    dc4c:	ldp	x29, x30, [sp], #176
    dc50:	ret
    dc54:	mov	x0, x20
    dc58:	bl	65d0 <_Py_Dealloc@plt>
    dc5c:	b	db50 <PyFloat_FromString@plt+0x70c0>
    dc60:	bl	7320 <PyFloat_FromString@plt+0x890>
    dc64:	mov	x20, x0
    dc68:	cbnz	x0, db40 <PyFloat_FromString@plt+0x70b0>
    dc6c:	mov	x0, #0x0                   	// #0
    dc70:	b	dc3c <PyFloat_FromString@plt+0x71ac>
    dc74:	mov	x26, x23
    dc78:	stp	x27, x28, [sp, #80]
    dc7c:	add	x27, x23, #0x18
    dc80:	ldr	x0, [x23]
    dc84:	mov	x24, x19
    dc88:	add	x0, x0, #0x1
    dc8c:	str	x0, [x23]
    dc90:	add	x19, x24, #0x18
    dc94:	mov	x0, x27
    dc98:	bl	27fe8 <PyInit__decimal@@Base+0xda68>
    dc9c:	mov	w22, w0
    dca0:	mov	x0, x19
    dca4:	bl	27fe8 <PyInit__decimal@@Base+0xda68>
    dca8:	mov	x1, x19
    dcac:	mov	w23, w0
    dcb0:	add	x2, sp, #0x78
    dcb4:	mov	x0, x27
    dcb8:	bl	29eb8 <PyInit__decimal@@Base+0xf938>
    dcbc:	mov	w19, w0
    dcc0:	ldr	x1, [x26]
    dcc4:	sub	x1, x1, #0x1
    dcc8:	str	x1, [x26]
    dccc:	cbz	x1, de3c <PyFloat_FromString@plt+0x73ac>
    dcd0:	ldr	x1, [x24]
    dcd4:	sub	x1, x1, #0x1
    dcd8:	str	x1, [x24]
    dcdc:	cbz	x1, de30 <PyFloat_FromString@plt+0x73a0>
    dce0:	mov	w0, #0x7fffffff            	// #2147483647
    dce4:	cmp	w19, w0
    dce8:	b.eq	ddc8 <PyFloat_FromString@plt+0x7338>  // b.none
    dcec:	cmp	w21, #0x3
    dcf0:	b.eq	de48 <PyFloat_FromString@plt+0x73b8>  // b.none
    dcf4:	b.gt	ddac <PyFloat_FromString@plt+0x731c>
    dcf8:	cmp	w21, #0x1
    dcfc:	b.eq	de60 <PyFloat_FromString@plt+0x73d0>  // b.none
    dd00:	cmp	w21, #0x2
    dd04:	b.ne	dd9c <PyFloat_FromString@plt+0x730c>  // b.any
    dd08:	cmp	w19, #0x0
    dd0c:	cset	w19, eq  // eq = none
    dd10:	sxtw	x0, w19
    dd14:	bl	6750 <PyBool_FromLong@plt>
    dd18:	ldp	x19, x20, [sp, #16]
    dd1c:	ldp	x21, x22, [sp, #32]
    dd20:	ldp	x23, x24, [sp, #48]
    dd24:	ldp	x25, x26, [sp, #64]
    dd28:	ldp	x27, x28, [sp, #80]
    dd2c:	ldp	x29, x30, [sp], #176
    dd30:	ret
    dd34:	mov	x1, x19
    dd38:	mov	x0, x22
    dd3c:	mov	x2, x20
    dd40:	bl	82f8 <PyFloat_FromString@plt+0x1868>
    dd44:	mov	x19, x0
    dd48:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41a80>
    dd4c:	cbnz	x19, dc08 <PyFloat_FromString@plt+0x7178>
    dd50:	mov	x0, #0x0                   	// #0
    dd54:	b	dc3c <PyFloat_FromString@plt+0x71ac>
    dd58:	sub	w0, w21, #0x2
    dd5c:	cmp	w0, #0x1
    dd60:	b.ls	dd74 <PyFloat_FromString@plt+0x72e4>  // b.plast
    dd64:	mov	x0, x20
    dd68:	mov	w1, #0x400                 	// #1024
    dd6c:	bl	7f90 <PyFloat_FromString@plt+0x1500>
    dd70:	cbnz	w0, dc38 <PyFloat_FromString@plt+0x71a8>
    dd74:	ldr	w3, [x20, #44]
    dd78:	add	x0, x26, #0x320
    dd7c:	mov	x1, x19
    dd80:	add	x0, x0, #0x1a0
    dd84:	orr	w3, w3, #0x400
    dd88:	str	w3, [x20, #44]
    dd8c:	mov	x2, x20
    dd90:	bl	8430 <PyFloat_FromString@plt+0x19a0>
    dd94:	mov	x19, x0
    dd98:	b	dd48 <PyFloat_FromString@plt+0x72b8>
    dd9c:	cbnz	w21, dd10 <PyFloat_FromString@plt+0x7280>
    dda0:	cmn	w19, #0x1
    dda4:	cset	w19, eq  // eq = none
    dda8:	b	dd10 <PyFloat_FromString@plt+0x7280>
    ddac:	cmp	w21, #0x4
    ddb0:	b.eq	de54 <PyFloat_FromString@plt+0x73c4>  // b.none
    ddb4:	cmp	w21, #0x5
    ddb8:	b.ne	dd10 <PyFloat_FromString@plt+0x7280>  // b.any
    ddbc:	mvn	w19, w19
    ddc0:	lsr	w19, w19, #31
    ddc4:	b	dd10 <PyFloat_FromString@plt+0x7280>
    ddc8:	orr	w22, w22, w23
    ddcc:	cbnz	w22, dddc <PyFloat_FromString@plt+0x734c>
    ddd0:	sub	w0, w21, #0x2
    ddd4:	cmp	w0, #0x1
    ddd8:	b.ls	ddec <PyFloat_FromString@plt+0x735c>  // b.plast
    dddc:	ldr	w1, [sp, #120]
    dde0:	mov	x0, x20
    dde4:	bl	7f90 <PyFloat_FromString@plt+0x1500>
    dde8:	cbnz	w0, dc30 <PyFloat_FromString@plt+0x71a0>
    ddec:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41a80>
    ddf0:	cmp	w21, #0x3
    ddf4:	ldr	x1, [x1, #3976]
    ddf8:	b.ne	de04 <PyFloat_FromString@plt+0x7374>  // b.any
    ddfc:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41a80>
    de00:	ldr	x1, [x1, #4024]
    de04:	mov	x0, x1
    de08:	ldr	x2, [x1]
    de0c:	ldp	x27, x28, [sp, #80]
    de10:	add	x2, x2, #0x1
    de14:	str	x2, [x1]
    de18:	ldp	x19, x20, [sp, #16]
    de1c:	ldp	x21, x22, [sp, #32]
    de20:	ldp	x23, x24, [sp, #48]
    de24:	ldp	x25, x26, [sp, #64]
    de28:	ldp	x29, x30, [sp], #176
    de2c:	ret
    de30:	mov	x0, x24
    de34:	bl	65d0 <_Py_Dealloc@plt>
    de38:	b	dce0 <PyFloat_FromString@plt+0x7250>
    de3c:	mov	x0, x26
    de40:	bl	65d0 <_Py_Dealloc@plt>
    de44:	b	dcd0 <PyFloat_FromString@plt+0x7240>
    de48:	cmp	w19, #0x0
    de4c:	cset	w19, ne  // ne = any
    de50:	b	dd10 <PyFloat_FromString@plt+0x7280>
    de54:	cmp	w19, #0x1
    de58:	cset	w19, eq  // eq = none
    de5c:	b	dd10 <PyFloat_FromString@plt+0x7280>
    de60:	cmp	w19, #0x0
    de64:	cset	w19, le
    de68:	b	dd10 <PyFloat_FromString@plt+0x7280>
    de6c:	mov	x0, x19
    de70:	bl	69f0 <PyComplex_AsCComplex@plt>
    de74:	fmov	d2, #-1.000000000000000000e+00
    de78:	fcmp	d0, d2
    de7c:	b.eq	df18 <PyFloat_FromString@plt+0x7488>  // b.none
    de80:	fcmp	d1, #0.0
    de84:	b.eq	df30 <PyFloat_FromString@plt+0x74a0>  // b.none
    de88:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41a80>
    de8c:	ldr	x0, [x1, #3912]
    de90:	mov	x19, x0
    de94:	ldr	x2, [x0]
    de98:	add	x2, x2, #0x1
    de9c:	str	x2, [x0]
    dea0:	b	dc08 <PyFloat_FromString@plt+0x7178>
    dea4:	mov	x0, x19
    dea8:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
    deac:	add	x1, x1, #0x120
    deb0:	bl	6580 <PyObject_GetAttrString@plt>
    deb4:	mov	x22, x0
    deb8:	cbz	x0, dc38 <PyFloat_FromString@plt+0x71a8>
    debc:	add	x0, x26, #0x320
    dec0:	mov	x1, x22
    dec4:	mov	x2, x20
    dec8:	add	x0, x0, #0x1a0
    decc:	bl	82f8 <PyFloat_FromString@plt+0x1868>
    ded0:	mov	x24, x0
    ded4:	ldr	x1, [x22]
    ded8:	sub	x0, x1, #0x1
    dedc:	str	x0, [x22]
    dee0:	cbz	x0, df0c <PyFloat_FromString@plt+0x747c>
    dee4:	cbz	x24, dc38 <PyFloat_FromString@plt+0x71a8>
    dee8:	stp	x27, x28, [sp, #80]
    deec:	add	x27, x23, #0x18
    def0:	mov	x0, x27
    def4:	bl	27ff8 <PyInit__decimal@@Base+0xda78>
    def8:	cbz	w0, df7c <PyFloat_FromString@plt+0x74ec>
    defc:	mov	x19, x24
    df00:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41a80>
    df04:	ldp	x27, x28, [sp, #80]
    df08:	b	dc08 <PyFloat_FromString@plt+0x7178>
    df0c:	mov	x0, x22
    df10:	bl	65d0 <_Py_Dealloc@plt>
    df14:	b	dee4 <PyFloat_FromString@plt+0x7454>
    df18:	stp	d0, d1, [sp, #96]
    df1c:	bl	67e0 <PyErr_Occurred@plt>
    df20:	ldp	d0, d1, [sp, #96]
    df24:	cbz	x0, de80 <PyFloat_FromString@plt+0x73f0>
    df28:	mov	x0, #0x0                   	// #0
    df2c:	b	dc3c <PyFloat_FromString@plt+0x71ac>
    df30:	bl	66b0 <PyFloat_FromDouble@plt>
    df34:	mov	x22, x0
    df38:	cbz	x0, dc38 <PyFloat_FromString@plt+0x71a8>
    df3c:	ldr	w3, [x20, #44]
    df40:	add	x0, x26, #0x320
    df44:	mov	x1, x22
    df48:	add	x0, x0, #0x1a0
    df4c:	orr	w3, w3, #0x400
    df50:	str	w3, [x20, #44]
    df54:	mov	x2, x20
    df58:	bl	8430 <PyFloat_FromString@plt+0x19a0>
    df5c:	mov	x19, x0
    df60:	ldr	x1, [x22]
    df64:	sub	x0, x1, #0x1
    df68:	str	x0, [x22]
    df6c:	cbnz	x0, dd48 <PyFloat_FromString@plt+0x72b8>
    df70:	mov	x0, x22
    df74:	bl	65d0 <_Py_Dealloc@plt>
    df78:	b	dd48 <PyFloat_FromString@plt+0x72b8>
    df7c:	mov	x0, x19
    df80:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
    df84:	add	x1, x1, #0x130
    df88:	str	wzr, [sp, #124]
    df8c:	bl	6580 <PyObject_GetAttrString@plt>
    df90:	mov	x19, x0
    df94:	cbz	x0, e094 <PyFloat_FromString@plt+0x7604>
    df98:	add	x0, x26, #0x320
    df9c:	mov	x1, x19
    dfa0:	mov	x2, x20
    dfa4:	add	x0, x0, #0x1a0
    dfa8:	bl	82f8 <PyFloat_FromString@plt+0x1868>
    dfac:	mov	x22, x0
    dfb0:	ldr	x1, [x19]
    dfb4:	sub	x0, x1, #0x1
    dfb8:	str	x0, [x19]
    dfbc:	cbz	x0, e058 <PyFloat_FromString@plt+0x75c8>
    dfc0:	cbz	x22, e094 <PyFloat_FromString@plt+0x7604>
    dfc4:	mov	x0, x27
    dfc8:	bl	29d98 <PyInit__decimal@@Base+0xf818>
    dfcc:	mov	x19, x0
    dfd0:	cbz	x0, e0e8 <PyFloat_FromString@plt+0x7658>
    dfd4:	add	x26, x26, #0x320
    dfd8:	add	x0, x26, #0x1a0
    dfdc:	bl	6c60 <PyFloat_FromString@plt+0x1d0>
    dfe0:	mov	x26, x0
    dfe4:	cbz	x0, e0cc <PyFloat_FromString@plt+0x763c>
    dfe8:	mov	x0, x25
    dfec:	bl	1d4d0 <PyInit__decimal@@Base+0x2f50>
    dff0:	ldr	x28, [x19, #8]
    dff4:	str	xzr, [x19, #8]
    dff8:	add	x27, x26, #0x18
    dffc:	mov	x3, x25
    e000:	mov	x0, x27
    e004:	add	x4, sp, #0x7c
    e008:	add	x2, x22, #0x18
    e00c:	mov	x1, x19
    e010:	bl	336b0 <PyInit__decimal@@Base+0x19130>
    e014:	ldr	x0, [x22]
    e018:	str	x28, [x26, #32]
    e01c:	sub	x0, x0, #0x1
    e020:	str	x0, [x22]
    e024:	cbz	x0, e0b8 <PyFloat_FromString@plt+0x7628>
    e028:	mov	x0, x19
    e02c:	bl	281b8 <PyInit__decimal@@Base+0xdc38>
    e030:	ldr	w0, [sp, #124]
    e034:	cbnz	w0, e064 <PyFloat_FromString@plt+0x75d4>
    e038:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41a80>
    e03c:	ldr	x0, [x1, #3912]
    e040:	cmp	x24, x0
    e044:	b.eq	e0c4 <PyFloat_FromString@plt+0x7634>  // b.none
    e048:	cmp	x23, x26
    e04c:	b.ne	dc90 <PyFloat_FromString@plt+0x7200>  // b.any
    e050:	mov	x19, x24
    e054:	b	dc80 <PyFloat_FromString@plt+0x71f0>
    e058:	mov	x0, x19
    e05c:	bl	65d0 <_Py_Dealloc@plt>
    e060:	b	dfc0 <PyFloat_FromString@plt+0x7530>
    e064:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
    e068:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
    e06c:	add	x1, x1, #0x140
    e070:	ldr	x0, [x0, #3928]
    e074:	ldr	x0, [x0]
    e078:	bl	6650 <PyErr_SetString@plt>
    e07c:	ldr	x0, [x26]
    e080:	sub	x0, x0, #0x1
    e084:	str	x0, [x26]
    e088:	cbnz	x0, e094 <PyFloat_FromString@plt+0x7604>
    e08c:	mov	x0, x26
    e090:	bl	65d0 <_Py_Dealloc@plt>
    e094:	ldr	x0, [x24]
    e098:	sub	x0, x0, #0x1
    e09c:	str	x0, [x24]
    e0a0:	cbnz	x0, dc30 <PyFloat_FromString@plt+0x71a0>
    e0a4:	mov	x0, x24
    e0a8:	bl	65d0 <_Py_Dealloc@plt>
    e0ac:	mov	x0, #0x0                   	// #0
    e0b0:	ldp	x27, x28, [sp, #80]
    e0b4:	b	dc18 <PyFloat_FromString@plt+0x7188>
    e0b8:	mov	x0, x22
    e0bc:	bl	65d0 <_Py_Dealloc@plt>
    e0c0:	b	e028 <PyFloat_FromString@plt+0x7598>
    e0c4:	ldp	x27, x28, [sp, #80]
    e0c8:	b	dc14 <PyFloat_FromString@plt+0x7184>
    e0cc:	ldr	x0, [x22]
    e0d0:	sub	x0, x0, #0x1
    e0d4:	str	x0, [x22]
    e0d8:	cbz	x0, e100 <PyFloat_FromString@plt+0x7670>
    e0dc:	mov	x0, x19
    e0e0:	bl	281b8 <PyInit__decimal@@Base+0xdc38>
    e0e4:	b	e094 <PyFloat_FromString@plt+0x7604>
    e0e8:	ldr	x0, [x22]
    e0ec:	sub	x0, x0, #0x1
    e0f0:	str	x0, [x22]
    e0f4:	cbz	x0, e10c <PyFloat_FromString@plt+0x767c>
    e0f8:	bl	65e0 <PyErr_NoMemory@plt>
    e0fc:	b	e094 <PyFloat_FromString@plt+0x7604>
    e100:	mov	x0, x22
    e104:	bl	65d0 <_Py_Dealloc@plt>
    e108:	b	e0dc <PyFloat_FromString@plt+0x764c>
    e10c:	mov	x0, x22
    e110:	bl	65d0 <_Py_Dealloc@plt>
    e114:	bl	65e0 <PyErr_NoMemory@plt>
    e118:	b	e094 <PyFloat_FromString@plt+0x7604>
    e11c:	nop
    e120:	stp	x29, x30, [sp, #-176]!
    e124:	adrp	x2, 5f000 <PyInit__decimal@@Base+0x44a80>
    e128:	mov	x29, sp
    e12c:	stp	x23, x24, [sp, #48]
    e130:	mov	x24, x0
    e134:	ldr	x0, [x2, #1808]
    e138:	stp	x21, x22, [sp, #32]
    e13c:	add	x22, sp, #0x80
    e140:	mov	x2, x22
    e144:	stp	x19, x20, [sp, #16]
    e148:	mov	x20, x1
    e14c:	mov	x1, #0x0                   	// #0
    e150:	str	wzr, [sp, #100]
    e154:	str	xzr, [sp, #104]
    e158:	bl	6740 <PyContextVar_Get@plt>
    e15c:	tbnz	w0, #31, e1fc <PyFloat_FromString@plt+0x776c>
    e160:	ldr	x19, [sp, #128]
    e164:	cbz	x19, e224 <PyFloat_FromString@plt+0x7794>
    e168:	ldr	x2, [x19]
    e16c:	sub	x2, x2, #0x1
    e170:	str	x2, [x19]
    e174:	cbz	x2, e218 <PyFloat_FromString@plt+0x7788>
    e178:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
    e17c:	mov	x0, x20
    e180:	add	x3, sp, #0x68
    e184:	add	x1, x1, #0x168
    e188:	add	x2, sp, #0x70
    e18c:	bl	68e0 <PyArg_ParseTuple@plt>
    e190:	cbz	w0, e1fc <PyFloat_FromString@plt+0x776c>
    e194:	ldr	x0, [sp, #112]
    e198:	ldr	x1, [x0, #8]
    e19c:	ldr	x1, [x1, #168]
    e1a0:	tbz	w1, #28, e4cc <PyFloat_FromString@plt+0x7a3c>
    e1a4:	add	x1, sp, #0x78
    e1a8:	bl	69d0 <PyUnicode_AsUTF8AndSize@plt>
    e1ac:	mov	x20, x0
    e1b0:	cbz	x0, e1fc <PyFloat_FromString@plt+0x776c>
    e1b4:	ldr	x21, [sp, #120]
    e1b8:	stp	x25, x26, [sp, #64]
    e1bc:	cmp	x21, #0x0
    e1c0:	b.le	e1cc <PyFloat_FromString@plt+0x773c>
    e1c4:	ldrb	w0, [x0]
    e1c8:	cbz	w0, e418 <PyFloat_FromString@plt+0x7988>
    e1cc:	ldr	w2, [x19, #80]
    e1d0:	mov	x1, x20
    e1d4:	mov	x0, x22
    e1d8:	bl	24110 <PyInit__decimal@@Base+0x9b90>
    e1dc:	cbnz	w0, e234 <PyFloat_FromString@plt+0x77a4>
    e1e0:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
    e1e4:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
    e1e8:	add	x1, x1, #0x188
    e1ec:	ldr	x0, [x0, #3928]
    e1f0:	ldr	x0, [x0]
    e1f4:	bl	6650 <PyErr_SetString@plt>
    e1f8:	ldp	x25, x26, [sp, #64]
    e1fc:	mov	x23, #0x0                   	// #0
    e200:	mov	x0, x23
    e204:	ldp	x19, x20, [sp, #16]
    e208:	ldp	x21, x22, [sp, #32]
    e20c:	ldp	x23, x24, [sp, #48]
    e210:	ldp	x29, x30, [sp], #176
    e214:	ret
    e218:	mov	x0, x19
    e21c:	bl	65d0 <_Py_Dealloc@plt>
    e220:	b	e178 <PyFloat_FromString@plt+0x76e8>
    e224:	bl	7320 <PyFloat_FromString@plt+0x890>
    e228:	mov	x19, x0
    e22c:	cbnz	x0, e168 <PyFloat_FromString@plt+0x76d8>
    e230:	b	e1fc <PyFloat_FromString@plt+0x776c>
    e234:	ldr	x21, [sp, #104]
    e238:	str	x27, [sp, #80]
    e23c:	mov	w26, #0x0                   	// #0
    e240:	cbz	x21, e470 <PyFloat_FromString@plt+0x79e0>
    e244:	ldr	x0, [x21, #8]
    e248:	ldr	x0, [x0, #168]
    e24c:	tbz	w0, #29, e3e4 <PyFloat_FromString@plt+0x7954>
    e250:	mov	x0, x21
    e254:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
    e258:	add	x1, x1, #0x1c8
    e25c:	bl	6870 <PyDict_GetItemString@plt>
    e260:	mov	x25, x0
    e264:	cbz	x0, e27c <PyFloat_FromString@plt+0x77ec>
    e268:	bl	65c0 <PyUnicode_AsUTF8String@plt>
    e26c:	mov	x25, x0
    e270:	cbz	x0, e3fc <PyFloat_FromString@plt+0x796c>
    e274:	add	x0, x0, #0x20
    e278:	str	x0, [sp, #152]
    e27c:	ldr	x0, [sp, #104]
    e280:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
    e284:	add	x1, x1, #0x1d8
    e288:	bl	6870 <PyDict_GetItemString@plt>
    e28c:	mov	x27, x0
    e290:	cbz	x0, e2a8 <PyFloat_FromString@plt+0x7818>
    e294:	bl	65c0 <PyUnicode_AsUTF8String@plt>
    e298:	mov	x27, x0
    e29c:	cbz	x0, e53c <PyFloat_FromString@plt+0x7aac>
    e2a0:	add	x0, x0, #0x20
    e2a4:	str	x0, [sp, #160]
    e2a8:	ldr	x0, [sp, #104]
    e2ac:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
    e2b0:	add	x1, x1, #0x1e8
    e2b4:	bl	6870 <PyDict_GetItemString@plt>
    e2b8:	mov	x21, x0
    e2bc:	cbz	x0, e2d4 <PyFloat_FromString@plt+0x7844>
    e2c0:	bl	65c0 <PyUnicode_AsUTF8String@plt>
    e2c4:	mov	x21, x0
    e2c8:	cbz	x0, e59c <PyFloat_FromString@plt+0x7b0c>
    e2cc:	add	x0, x0, #0x20
    e2d0:	str	x0, [sp, #168]
    e2d4:	mov	x0, x22
    e2d8:	bl	240c8 <PyInit__decimal@@Base+0x9b48>
    e2dc:	tbnz	w0, #31, e558 <PyFloat_FromString@plt+0x7ac8>
    e2e0:	add	x2, x19, #0x10
    e2e4:	mov	x1, x22
    e2e8:	add	x0, x24, #0x18
    e2ec:	add	x3, sp, #0x64
    e2f0:	bl	245a0 <PyInit__decimal@@Base+0xa020>
    e2f4:	mov	x19, x0
    e2f8:	cbz	x0, e528 <PyFloat_FromString@plt+0x7a98>
    e2fc:	bl	64d0 <strlen@plt>
    e300:	str	x0, [sp, #120]
    e304:	mov	x1, x0
    e308:	cbz	w26, e330 <PyFloat_FromString@plt+0x78a0>
    e30c:	ldrb	w2, [x19]
    e310:	cbz	w2, e330 <PyFloat_FromString@plt+0x78a0>
    e314:	mov	x1, x19
    e318:	cmp	w2, #0xff
    e31c:	b.ne	e324 <PyFloat_FromString@plt+0x7894>  // b.any
    e320:	strb	wzr, [x1]
    e324:	ldrb	w2, [x1, #1]!
    e328:	cbnz	w2, e318 <PyFloat_FromString@plt+0x7888>
    e32c:	ldr	x1, [sp, #120]
    e330:	mov	x0, x19
    e334:	mov	x2, #0x0                   	// #0
    e338:	bl	68a0 <PyUnicode_DecodeUTF8@plt>
    e33c:	mov	x23, x0
    e340:	cbz	x21, e354 <PyFloat_FromString@plt+0x78c4>
    e344:	ldr	x1, [x21]
    e348:	sub	x1, x1, #0x1
    e34c:	str	x1, [x21]
    e350:	cbz	x1, e3b4 <PyFloat_FromString@plt+0x7924>
    e354:	cbz	x27, e368 <PyFloat_FromString@plt+0x78d8>
    e358:	ldr	x1, [x27]
    e35c:	sub	x1, x1, #0x1
    e360:	str	x1, [x27]
    e364:	cbz	x1, e3c0 <PyFloat_FromString@plt+0x7930>
    e368:	cbz	x25, e37c <PyFloat_FromString@plt+0x78ec>
    e36c:	ldr	x0, [x25]
    e370:	sub	x0, x0, #0x1
    e374:	str	x0, [x25]
    e378:	cbz	x0, e3cc <PyFloat_FromString@plt+0x793c>
    e37c:	cbnz	w26, e3d8 <PyFloat_FromString@plt+0x7948>
    e380:	cbz	x19, e5b4 <PyFloat_FromString@plt+0x7b24>
    e384:	adrp	x1, 5f000 <PyInit__decimal@@Base+0x44a80>
    e388:	mov	x0, x19
    e38c:	ldr	x1, [x1, #1704]
    e390:	blr	x1
    e394:	mov	x0, x23
    e398:	ldp	x19, x20, [sp, #16]
    e39c:	ldp	x21, x22, [sp, #32]
    e3a0:	ldp	x23, x24, [sp, #48]
    e3a4:	ldp	x25, x26, [sp, #64]
    e3a8:	ldr	x27, [sp, #80]
    e3ac:	ldp	x29, x30, [sp], #176
    e3b0:	ret
    e3b4:	mov	x0, x21
    e3b8:	bl	65d0 <_Py_Dealloc@plt>
    e3bc:	b	e354 <PyFloat_FromString@plt+0x78c4>
    e3c0:	mov	x0, x27
    e3c4:	bl	65d0 <_Py_Dealloc@plt>
    e3c8:	b	e368 <PyFloat_FromString@plt+0x78d8>
    e3cc:	mov	x0, x25
    e3d0:	bl	65d0 <_Py_Dealloc@plt>
    e3d4:	cbz	w26, e380 <PyFloat_FromString@plt+0x78f0>
    e3d8:	mov	x0, x20
    e3dc:	bl	6560 <PyMem_Free@plt>
    e3e0:	b	e380 <PyFloat_FromString@plt+0x78f0>
    e3e4:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
    e3e8:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
    e3ec:	add	x1, x1, #0x1a0
    e3f0:	ldr	x0, [x0, #3936]
    e3f4:	ldr	x0, [x0]
    e3f8:	bl	6650 <PyErr_SetString@plt>
    e3fc:	cbz	w26, e51c <PyFloat_FromString@plt+0x7a8c>
    e400:	ldr	x27, [sp, #80]
    e404:	mov	x0, x20
    e408:	mov	x23, #0x0                   	// #0
    e40c:	bl	6560 <PyMem_Free@plt>
    e410:	ldp	x25, x26, [sp, #64]
    e414:	b	e200 <PyFloat_FromString@plt+0x7770>
    e418:	add	x0, x21, #0x1
    e41c:	bl	6a40 <PyMem_Malloc@plt>
    e420:	mov	x23, x0
    e424:	cbz	x0, e5a8 <PyFloat_FromString@plt+0x7b18>
    e428:	mov	x1, x20
    e42c:	mov	x2, x21
    e430:	bl	6470 <memcpy@plt>
    e434:	strb	wzr, [x23, x21]
    e438:	mov	w0, #0x5f                  	// #95
    e43c:	strb	w0, [x23]
    e440:	mov	x1, x23
    e444:	mov	x0, x22
    e448:	ldr	w2, [x19, #80]
    e44c:	bl	24110 <PyInit__decimal@@Base+0x9b90>
    e450:	cbz	w0, e5c0 <PyFloat_FromString@plt+0x7b30>
    e454:	ldr	x21, [sp, #104]
    e458:	mov	w0, #0xff                  	// #255
    e45c:	str	x27, [sp, #80]
    e460:	mov	x20, x23
    e464:	sturh	w0, [sp, #147]
    e468:	mov	w26, #0x1                   	// #1
    e46c:	cbnz	x21, e244 <PyFloat_FromString@plt+0x77b4>
    e470:	ldr	x23, [sp, #152]
    e474:	mov	x0, x23
    e478:	bl	64d0 <strlen@plt>
    e47c:	cmp	x0, #0x1
    e480:	b.hi	e500 <PyFloat_FromString@plt+0x7a70>  // b.pmore
    e484:	mov	x25, #0x0                   	// #0
    e488:	b.eq	e548 <PyFloat_FromString@plt+0x7ab8>  // b.none
    e48c:	ldr	x23, [sp, #160]
    e490:	mov	x0, x23
    e494:	bl	64d0 <strlen@plt>
    e498:	cmp	x0, #0x1
    e49c:	b.hi	e4b0 <PyFloat_FromString@plt+0x7a20>  // b.pmore
    e4a0:	mov	x27, #0x0                   	// #0
    e4a4:	b.ne	e2e0 <PyFloat_FromString@plt+0x7850>  // b.any
    e4a8:	ldrb	w0, [x23]
    e4ac:	tbz	w0, #7, e2e0 <PyFloat_FromString@plt+0x7850>
    e4b0:	mov	x0, x23
    e4b4:	bl	98c8 <PyFloat_FromString@plt+0x2e38>
    e4b8:	mov	x27, x0
    e4bc:	cbz	x0, e53c <PyFloat_FromString@plt+0x7aac>
    e4c0:	add	x0, x0, #0x20
    e4c4:	str	x0, [sp, #160]
    e4c8:	b	e2e0 <PyFloat_FromString@plt+0x7850>
    e4cc:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
    e4d0:	mov	x23, #0x0                   	// #0
    e4d4:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
    e4d8:	add	x1, x1, #0x170
    e4dc:	ldr	x0, [x0, #3936]
    e4e0:	ldr	x0, [x0]
    e4e4:	bl	6650 <PyErr_SetString@plt>
    e4e8:	mov	x0, x23
    e4ec:	ldp	x19, x20, [sp, #16]
    e4f0:	ldp	x21, x22, [sp, #32]
    e4f4:	ldp	x23, x24, [sp, #48]
    e4f8:	ldp	x29, x30, [sp], #176
    e4fc:	ret
    e500:	mov	x0, x23
    e504:	bl	98c8 <PyFloat_FromString@plt+0x2e38>
    e508:	mov	x25, x0
    e50c:	cbz	x0, e3fc <PyFloat_FromString@plt+0x796c>
    e510:	add	x0, x0, #0x20
    e514:	str	x0, [sp, #152]
    e518:	b	e48c <PyFloat_FromString@plt+0x79fc>
    e51c:	ldp	x25, x26, [sp, #64]
    e520:	ldr	x27, [sp, #80]
    e524:	b	e1fc <PyFloat_FromString@plt+0x776c>
    e528:	ldr	w0, [sp, #100]
    e52c:	tbz	w0, #9, e57c <PyFloat_FromString@plt+0x7aec>
    e530:	mov	x23, #0x0                   	// #0
    e534:	bl	65e0 <PyErr_NoMemory@plt>
    e538:	b	e340 <PyFloat_FromString@plt+0x78b0>
    e53c:	mov	x19, #0x0                   	// #0
    e540:	mov	x23, #0x0                   	// #0
    e544:	b	e368 <PyFloat_FromString@plt+0x78d8>
    e548:	ldrb	w0, [x23]
    e54c:	tbnz	w0, #7, e500 <PyFloat_FromString@plt+0x7a70>
    e550:	mov	x25, x21
    e554:	b	e48c <PyFloat_FromString@plt+0x79fc>
    e558:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
    e55c:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
    e560:	mov	x19, #0x0                   	// #0
    e564:	add	x1, x1, #0x1f8
    e568:	ldr	x0, [x0, #3928]
    e56c:	mov	x23, #0x0                   	// #0
    e570:	ldr	x0, [x0]
    e574:	bl	6650 <PyErr_SetString@plt>
    e578:	b	e340 <PyFloat_FromString@plt+0x78b0>
    e57c:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
    e580:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
    e584:	mov	x23, #0x0                   	// #0
    e588:	add	x1, x1, #0x210
    e58c:	ldr	x0, [x0, #3928]
    e590:	ldr	x0, [x0]
    e594:	bl	6650 <PyErr_SetString@plt>
    e598:	b	e340 <PyFloat_FromString@plt+0x78b0>
    e59c:	mov	x19, #0x0                   	// #0
    e5a0:	mov	x23, #0x0                   	// #0
    e5a4:	b	e354 <PyFloat_FromString@plt+0x78c4>
    e5a8:	bl	65e0 <PyErr_NoMemory@plt>
    e5ac:	ldp	x25, x26, [sp, #64]
    e5b0:	b	e200 <PyFloat_FromString@plt+0x7770>
    e5b4:	ldp	x25, x26, [sp, #64]
    e5b8:	ldr	x27, [sp, #80]
    e5bc:	b	e200 <PyFloat_FromString@plt+0x7770>
    e5c0:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
    e5c4:	mov	x20, x23
    e5c8:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
    e5cc:	add	x1, x1, #0x188
    e5d0:	ldr	x0, [x0, #3928]
    e5d4:	ldr	x0, [x0]
    e5d8:	bl	6650 <PyErr_SetString@plt>
    e5dc:	b	e404 <PyFloat_FromString@plt+0x7974>
    e5e0:	stp	x29, x30, [sp, #-80]!
    e5e4:	mov	x29, sp
    e5e8:	stp	x19, x20, [sp, #16]
    e5ec:	add	x20, x0, #0x18
    e5f0:	mov	x0, x20
    e5f4:	str	wzr, [sp, #68]
    e5f8:	bl	27ff8 <PyInit__decimal@@Base+0xda78>
    e5fc:	cbnz	w0, e82c <PyFloat_FromString@plt+0x7d9c>
    e600:	stp	x21, x22, [sp, #32]
    e604:	adrp	x22, 5f000 <PyInit__decimal@@Base+0x44a80>
    e608:	add	x0, x22, #0x6c0
    e60c:	add	x2, sp, #0x48
    e610:	mov	x1, #0x0                   	// #0
    e614:	ldr	x0, [x0, #80]
    e618:	bl	6740 <PyContextVar_Get@plt>
    e61c:	tbnz	w0, #31, e7b0 <PyFloat_FromString@plt+0x7d20>
    e620:	ldr	x21, [sp, #72]
    e624:	cbz	x21, e7d4 <PyFloat_FromString@plt+0x7d44>
    e628:	ldr	x0, [x21]
    e62c:	sub	x0, x0, #0x1
    e630:	str	x0, [x21]
    e634:	cbz	x0, e7c8 <PyFloat_FromString@plt+0x7d38>
    e638:	adrp	x0, 5d000 <PyInit__decimal@@Base+0x42a80>
    e63c:	add	x0, x0, #0x320
    e640:	add	x0, x0, #0x1a0
    e644:	bl	6c60 <PyFloat_FromString@plt+0x1d0>
    e648:	mov	x19, x0
    e64c:	cbz	x0, e7b0 <PyFloat_FromString@plt+0x7d20>
    e650:	stp	x23, x24, [sp, #48]
    e654:	add	x23, x0, #0x18
    e658:	mov	x1, x20
    e65c:	mov	x0, x23
    e660:	add	x2, sp, #0x44
    e664:	bl	28fe0 <PyInit__decimal@@Base+0xea60>
    e668:	cbz	w0, e7e4 <PyFloat_FromString@plt+0x7d54>
    e66c:	mov	x0, x23
    e670:	mov	x23, #0x0                   	// #0
    e674:	bl	28008 <PyInit__decimal@@Base+0xda88>
    e678:	cbnz	w0, e680 <PyFloat_FromString@plt+0x7bf0>
    e67c:	ldr	x23, [x19, #32]
    e680:	str	xzr, [x19, #32]
    e684:	mov	x1, x21
    e688:	mov	x0, x19
    e68c:	mov	w2, #0x3                   	// #3
    e690:	bl	8118 <PyFloat_FromString@plt+0x1688>
    e694:	ldr	x1, [x19]
    e698:	mov	x20, x0
    e69c:	sub	x0, x1, #0x1
    e6a0:	str	x0, [x19]
    e6a4:	cbz	x0, e814 <PyFloat_FromString@plt+0x7d84>
    e6a8:	cbz	x20, e7ac <PyFloat_FromString@plt+0x7d1c>
    e6ac:	cmp	x23, #0x0
    e6b0:	cneg	x0, x23, lt  // lt = tstop
    e6b4:	bl	66a0 <PyLong_FromSsize_t@plt>
    e6b8:	mov	x19, x0
    e6bc:	cbz	x0, e858 <PyFloat_FromString@plt+0x7dc8>
    e6c0:	mov	x0, #0xa                   	// #10
    e6c4:	bl	66e0 <PyLong_FromLong@plt>
    e6c8:	mov	x21, x0
    e6cc:	cbz	x0, e980 <PyFloat_FromString@plt+0x7ef0>
    e6d0:	add	x3, x22, #0x6c0
    e6d4:	adrp	x2, 5c000 <PyInit__decimal@@Base+0x41a80>
    e6d8:	mov	x1, x19
    e6dc:	ldr	x2, [x2, #4008]
    e6e0:	ldr	x3, [x3, #152]
    e6e4:	blr	x3
    e6e8:	mov	x24, x0
    e6ec:	ldr	x1, [x19]
    e6f0:	sub	x1, x1, #0x1
    e6f4:	str	x1, [x19]
    e6f8:	cbz	x1, e974 <PyFloat_FromString@plt+0x7ee4>
    e6fc:	ldr	x1, [x21]
    e700:	sub	x1, x1, #0x1
    e704:	str	x1, [x21]
    e708:	cbz	x1, e820 <PyFloat_FromString@plt+0x7d90>
    e70c:	cbz	x24, e858 <PyFloat_FromString@plt+0x7dc8>
    e710:	tbnz	x23, #63, e890 <PyFloat_FromString@plt+0x7e00>
    e714:	add	x22, x22, #0x6c0
    e718:	mov	x1, x24
    e71c:	mov	x0, x20
    e720:	ldr	x2, [x22, #160]
    e724:	blr	x2
    e728:	mov	x23, x0
    e72c:	ldr	x1, [x20]
    e730:	sub	x1, x1, #0x1
    e734:	str	x1, [x20]
    e738:	cbz	x1, e9a8 <PyFloat_FromString@plt+0x7f18>
    e73c:	cbz	x23, e9b4 <PyFloat_FromString@plt+0x7f24>
    e740:	mov	x0, #0x1                   	// #1
    e744:	bl	66e0 <PyLong_FromLong@plt>
    e748:	mov	x21, x0
    e74c:	cbz	x0, e9d8 <PyFloat_FromString@plt+0x7f48>
    e750:	mov	x2, x0
    e754:	mov	x1, x23
    e758:	mov	x0, #0x2                   	// #2
    e75c:	bl	6a60 <PyTuple_Pack@plt>
    e760:	ldr	x1, [x24]
    e764:	mov	x19, x0
    e768:	sub	x1, x1, #0x1
    e76c:	str	x1, [x24]
    e770:	cbz	x1, e9cc <PyFloat_FromString@plt+0x7f3c>
    e774:	ldr	x1, [x21]
    e778:	sub	x1, x1, #0x1
    e77c:	str	x1, [x21]
    e780:	cbz	x1, e938 <PyFloat_FromString@plt+0x7ea8>
    e784:	ldr	x1, [x23]
    e788:	sub	x1, x1, #0x1
    e78c:	str	x1, [x23]
    e790:	cbz	x1, e870 <PyFloat_FromString@plt+0x7de0>
    e794:	mov	x0, x19
    e798:	ldp	x19, x20, [sp, #16]
    e79c:	ldp	x21, x22, [sp, #32]
    e7a0:	ldp	x23, x24, [sp, #48]
    e7a4:	ldp	x29, x30, [sp], #80
    e7a8:	ret
    e7ac:	ldp	x23, x24, [sp, #48]
    e7b0:	mov	x19, #0x0                   	// #0
    e7b4:	ldp	x21, x22, [sp, #32]
    e7b8:	mov	x0, x19
    e7bc:	ldp	x19, x20, [sp, #16]
    e7c0:	ldp	x29, x30, [sp], #80
    e7c4:	ret
    e7c8:	mov	x0, x21
    e7cc:	bl	65d0 <_Py_Dealloc@plt>
    e7d0:	b	e638 <PyFloat_FromString@plt+0x7ba8>
    e7d4:	bl	7320 <PyFloat_FromString@plt+0x890>
    e7d8:	mov	x21, x0
    e7dc:	cbnz	x0, e628 <PyFloat_FromString@plt+0x7b98>
    e7e0:	b	e7b0 <PyFloat_FromString@plt+0x7d20>
    e7e4:	ldr	x0, [x19]
    e7e8:	sub	x0, x0, #0x1
    e7ec:	str	x0, [x19]
    e7f0:	cbz	x0, e968 <PyFloat_FromString@plt+0x7ed8>
    e7f4:	bl	65e0 <PyErr_NoMemory@plt>
    e7f8:	mov	x19, #0x0                   	// #0
    e7fc:	mov	x0, x19
    e800:	ldp	x19, x20, [sp, #16]
    e804:	ldp	x21, x22, [sp, #32]
    e808:	ldp	x23, x24, [sp, #48]
    e80c:	ldp	x29, x30, [sp], #80
    e810:	ret
    e814:	mov	x0, x19
    e818:	bl	65d0 <_Py_Dealloc@plt>
    e81c:	b	e6a8 <PyFloat_FromString@plt+0x7c18>
    e820:	mov	x0, x21
    e824:	bl	65d0 <_Py_Dealloc@plt>
    e828:	b	e70c <PyFloat_FromString@plt+0x7c7c>
    e82c:	mov	x0, x20
    e830:	bl	27f98 <PyInit__decimal@@Base+0xda18>
    e834:	cbz	w0, e948 <PyFloat_FromString@plt+0x7eb8>
    e838:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
    e83c:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
    e840:	mov	x19, #0x0                   	// #0
    e844:	add	x1, x1, #0x250
    e848:	ldr	x0, [x0, #3928]
    e84c:	ldr	x0, [x0]
    e850:	bl	6650 <PyErr_SetString@plt>
    e854:	b	e7b8 <PyFloat_FromString@plt+0x7d28>
    e858:	mov	x23, x20
    e85c:	mov	x19, #0x0                   	// #0
    e860:	ldr	x1, [x23]
    e864:	sub	x1, x1, #0x1
    e868:	str	x1, [x23]
    e86c:	cbnz	x1, e794 <PyFloat_FromString@plt+0x7d04>
    e870:	mov	x0, x23
    e874:	bl	65d0 <_Py_Dealloc@plt>
    e878:	mov	x0, x19
    e87c:	ldp	x19, x20, [sp, #16]
    e880:	ldp	x21, x22, [sp, #32]
    e884:	ldp	x23, x24, [sp, #48]
    e888:	ldp	x29, x30, [sp], #80
    e88c:	ret
    e890:	mov	x1, x24
    e894:	mov	x0, x20
    e898:	bl	6700 <_PyLong_GCD@plt>
    e89c:	mov	x19, x0
    e8a0:	cbz	x0, ea04 <PyFloat_FromString@plt+0x7f74>
    e8a4:	add	x2, x22, #0x6c0
    e8a8:	mov	x1, x0
    e8ac:	mov	x0, x20
    e8b0:	ldr	x2, [x2, #168]
    e8b4:	blr	x2
    e8b8:	mov	x23, x0
    e8bc:	ldr	x1, [x20]
    e8c0:	sub	x0, x1, #0x1
    e8c4:	str	x0, [x20]
    e8c8:	cbz	x0, e9f8 <PyFloat_FromString@plt+0x7f68>
    e8cc:	add	x22, x22, #0x6c0
    e8d0:	mov	x1, x19
    e8d4:	mov	x0, x24
    e8d8:	ldr	x2, [x22, #168]
    e8dc:	blr	x2
    e8e0:	mov	x21, x0
    e8e4:	ldr	x1, [x24]
    e8e8:	sub	x0, x1, #0x1
    e8ec:	str	x0, [x24]
    e8f0:	cbz	x0, e9ec <PyFloat_FromString@plt+0x7f5c>
    e8f4:	ldr	x0, [x19]
    e8f8:	sub	x0, x0, #0x1
    e8fc:	str	x0, [x19]
    e900:	cbz	x0, e9e0 <PyFloat_FromString@plt+0x7f50>
    e904:	cmp	x23, #0x0
    e908:	ccmp	x21, #0x0, #0x4, ne  // ne = any
    e90c:	b.eq	ea10 <PyFloat_FromString@plt+0x7f80>  // b.none
    e910:	mov	x2, x21
    e914:	mov	x1, x23
    e918:	mov	x0, #0x2                   	// #2
    e91c:	bl	6a60 <PyTuple_Pack@plt>
    e920:	mov	x19, x0
    e924:	ldr	x0, [x21]
    e928:	sub	x0, x0, #0x1
    e92c:	str	x0, [x21]
    e930:	cbnz	x0, e784 <PyFloat_FromString@plt+0x7cf4>
    e934:	nop
    e938:	mov	x0, x21
    e93c:	bl	65d0 <_Py_Dealloc@plt>
    e940:	cbz	x23, e794 <PyFloat_FromString@plt+0x7d04>
    e944:	b	e784 <PyFloat_FromString@plt+0x7cf4>
    e948:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
    e94c:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
    e950:	mov	x19, #0x0                   	// #0
    e954:	add	x1, x1, #0x278
    e958:	ldr	x0, [x0, #3992]
    e95c:	ldr	x0, [x0]
    e960:	bl	6650 <PyErr_SetString@plt>
    e964:	b	e7b8 <PyFloat_FromString@plt+0x7d28>
    e968:	mov	x0, x19
    e96c:	bl	65d0 <_Py_Dealloc@plt>
    e970:	b	e7f4 <PyFloat_FromString@plt+0x7d64>
    e974:	mov	x0, x19
    e978:	bl	65d0 <_Py_Dealloc@plt>
    e97c:	b	e6fc <PyFloat_FromString@plt+0x7c6c>
    e980:	mov	x23, x20
    e984:	ldr	x0, [x19]
    e988:	sub	x0, x0, #0x1
    e98c:	str	x0, [x19]
    e990:	cbnz	x0, ea30 <PyFloat_FromString@plt+0x7fa0>
    e994:	mov	x0, x19
    e998:	mov	x19, #0x0                   	// #0
    e99c:	bl	65d0 <_Py_Dealloc@plt>
    e9a0:	cbz	x23, e794 <PyFloat_FromString@plt+0x7d04>
    e9a4:	b	e784 <PyFloat_FromString@plt+0x7cf4>
    e9a8:	mov	x0, x20
    e9ac:	bl	65d0 <_Py_Dealloc@plt>
    e9b0:	b	e73c <PyFloat_FromString@plt+0x7cac>
    e9b4:	ldr	x0, [x24]
    e9b8:	sub	x0, x0, #0x1
    e9bc:	str	x0, [x24]
    e9c0:	cbnz	x0, ea38 <PyFloat_FromString@plt+0x7fa8>
    e9c4:	mov	x19, x24
    e9c8:	b	e994 <PyFloat_FromString@plt+0x7f04>
    e9cc:	mov	x0, x24
    e9d0:	bl	65d0 <_Py_Dealloc@plt>
    e9d4:	b	e774 <PyFloat_FromString@plt+0x7ce4>
    e9d8:	mov	x19, x24
    e9dc:	b	e984 <PyFloat_FromString@plt+0x7ef4>
    e9e0:	mov	x0, x19
    e9e4:	bl	65d0 <_Py_Dealloc@plt>
    e9e8:	b	e904 <PyFloat_FromString@plt+0x7e74>
    e9ec:	mov	x0, x24
    e9f0:	bl	65d0 <_Py_Dealloc@plt>
    e9f4:	b	e8f4 <PyFloat_FromString@plt+0x7e64>
    e9f8:	mov	x0, x20
    e9fc:	bl	65d0 <_Py_Dealloc@plt>
    ea00:	b	e8cc <PyFloat_FromString@plt+0x7e3c>
    ea04:	mov	x21, x24
    ea08:	mov	x23, x20
    ea0c:	b	e924 <PyFloat_FromString@plt+0x7e94>
    ea10:	cbz	x21, ea48 <PyFloat_FromString@plt+0x7fb8>
    ea14:	ldr	x0, [x21]
    ea18:	mov	x19, #0x0                   	// #0
    ea1c:	sub	x0, x0, #0x1
    ea20:	str	x0, [x21]
    ea24:	cbz	x0, e938 <PyFloat_FromString@plt+0x7ea8>
    ea28:	cbz	x23, e794 <PyFloat_FromString@plt+0x7d04>
    ea2c:	b	e784 <PyFloat_FromString@plt+0x7cf4>
    ea30:	mov	x19, #0x0                   	// #0
    ea34:	b	e784 <PyFloat_FromString@plt+0x7cf4>
    ea38:	mov	x19, #0x0                   	// #0
    ea3c:	ldp	x21, x22, [sp, #32]
    ea40:	ldp	x23, x24, [sp, #48]
    ea44:	b	e7b8 <PyFloat_FromString@plt+0x7d28>
    ea48:	mov	x19, #0x0                   	// #0
    ea4c:	cbz	x23, e794 <PyFloat_FromString@plt+0x7d04>
    ea50:	b	e784 <PyFloat_FromString@plt+0x7cf4>
    ea54:	nop
    ea58:	stp	x29, x30, [sp, #-64]!
    ea5c:	mov	x29, sp
    ea60:	add	x3, sp, #0x38
    ea64:	add	x2, sp, #0x30
    ea68:	stp	x19, x20, [sp, #16]
    ea6c:	stp	x21, x22, [sp, #32]
    ea70:	mov	x22, x0
    ea74:	mov	x0, x1
    ea78:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
    ea7c:	add	x1, x1, #0x2a8
    ea80:	bl	68e0 <PyArg_ParseTuple@plt>
    ea84:	cbz	w0, eb58 <PyFloat_FromString@plt+0x80c8>
    ea88:	ldr	x19, [sp, #48]
    ea8c:	adrp	x20, 5d000 <PyInit__decimal@@Base+0x42a80>
    ea90:	add	x21, x20, #0x320
    ea94:	add	x21, x21, #0x1a0
    ea98:	ldr	x0, [x19, #8]
    ea9c:	cmp	x0, x21
    eaa0:	b.eq	eaf0 <PyFloat_FromString@plt+0x8060>  // b.none
    eaa4:	mov	x1, x21
    eaa8:	bl	69c0 <PyType_IsSubtype@plt>
    eaac:	cbnz	w0, eaf0 <PyFloat_FromString@plt+0x8060>
    eab0:	ldr	x2, [x19, #8]
    eab4:	ldr	x0, [x2, #168]
    eab8:	tbnz	w0, #24, ec30 <PyFloat_FromString@plt+0x81a0>
    eabc:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
    eac0:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
    eac4:	ldr	x2, [x2, #24]
    eac8:	add	x1, x1, #0x8
    eacc:	ldr	x0, [x0, #3936]
    ead0:	mov	x20, #0x0                   	// #0
    ead4:	ldr	x0, [x0]
    ead8:	bl	6a10 <PyErr_Format@plt>
    eadc:	mov	x0, x20
    eae0:	ldp	x19, x20, [sp, #16]
    eae4:	ldp	x21, x22, [sp, #32]
    eae8:	ldp	x29, x30, [sp], #64
    eaec:	ret
    eaf0:	ldr	x0, [x19]
    eaf4:	add	x0, x0, #0x1
    eaf8:	str	x0, [x19]
    eafc:	ldr	x21, [sp, #56]
    eb00:	add	x20, x20, #0x320
    eb04:	add	x20, x20, #0x1a0
    eb08:	ldr	x0, [x21, #8]
    eb0c:	cmp	x0, x20
    eb10:	b.eq	eb70 <PyFloat_FromString@plt+0x80e0>  // b.none
    eb14:	mov	x1, x20
    eb18:	bl	69c0 <PyType_IsSubtype@plt>
    eb1c:	cbnz	w0, eb70 <PyFloat_FromString@plt+0x80e0>
    eb20:	ldr	x2, [x21, #8]
    eb24:	ldr	x0, [x2, #168]
    eb28:	tbnz	w0, #24, ec14 <PyFloat_FromString@plt+0x8184>
    eb2c:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
    eb30:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
    eb34:	ldr	x2, [x2, #24]
    eb38:	add	x1, x1, #0x8
    eb3c:	ldr	x0, [x0, #3936]
    eb40:	ldr	x0, [x0]
    eb44:	bl	6a10 <PyErr_Format@plt>
    eb48:	ldr	x0, [x19]
    eb4c:	sub	x0, x0, #0x1
    eb50:	str	x0, [x19]
    eb54:	cbz	x0, ec50 <PyFloat_FromString@plt+0x81c0>
    eb58:	mov	x20, #0x0                   	// #0
    eb5c:	mov	x0, x20
    eb60:	ldp	x19, x20, [sp, #16]
    eb64:	ldp	x21, x22, [sp, #32]
    eb68:	ldp	x29, x30, [sp], #64
    eb6c:	ret
    eb70:	ldr	x0, [x21]
    eb74:	add	x0, x0, #0x1
    eb78:	str	x0, [x21]
    eb7c:	add	x1, x21, #0x18
    eb80:	add	x0, x19, #0x18
    eb84:	bl	37630 <PyInit__decimal@@Base+0x1d0b0>
    eb88:	cbnz	w0, ebe0 <PyFloat_FromString@plt+0x8150>
    eb8c:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
    eb90:	ldr	x0, [x0, #3976]
    eb94:	mov	x20, x0
    eb98:	ldr	x1, [x0]
    eb9c:	add	x1, x1, #0x1
    eba0:	str	x1, [x0]
    eba4:	ldr	x0, [x19]
    eba8:	sub	x0, x0, #0x1
    ebac:	str	x0, [x19]
    ebb0:	cbz	x0, ec08 <PyFloat_FromString@plt+0x8178>
    ebb4:	ldr	x0, [x21]
    ebb8:	sub	x0, x0, #0x1
    ebbc:	str	x0, [x21]
    ebc0:	cbnz	x0, eadc <PyFloat_FromString@plt+0x804c>
    ebc4:	mov	x0, x21
    ebc8:	bl	65d0 <_Py_Dealloc@plt>
    ebcc:	mov	x0, x20
    ebd0:	ldp	x19, x20, [sp, #16]
    ebd4:	ldp	x21, x22, [sp, #32]
    ebd8:	ldp	x29, x30, [sp], #64
    ebdc:	ret
    ebe0:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
    ebe4:	ldr	x0, [x0, #4024]
    ebe8:	mov	x20, x0
    ebec:	ldr	x1, [x0]
    ebf0:	add	x1, x1, #0x1
    ebf4:	str	x1, [x0]
    ebf8:	ldr	x0, [x19]
    ebfc:	sub	x0, x0, #0x1
    ec00:	str	x0, [x19]
    ec04:	cbnz	x0, ebb4 <PyFloat_FromString@plt+0x8124>
    ec08:	mov	x0, x19
    ec0c:	bl	65d0 <_Py_Dealloc@plt>
    ec10:	b	ebb4 <PyFloat_FromString@plt+0x8124>
    ec14:	mov	x1, x21
    ec18:	mov	x2, x22
    ec1c:	mov	x0, x20
    ec20:	bl	82f8 <PyFloat_FromString@plt+0x1868>
    ec24:	mov	x21, x0
    ec28:	cbnz	x0, eb7c <PyFloat_FromString@plt+0x80ec>
    ec2c:	b	eb48 <PyFloat_FromString@plt+0x80b8>
    ec30:	mov	x1, x19
    ec34:	mov	x0, x21
    ec38:	mov	x2, x22
    ec3c:	bl	82f8 <PyFloat_FromString@plt+0x1868>
    ec40:	mov	x19, x0
    ec44:	cbnz	x0, eafc <PyFloat_FromString@plt+0x806c>
    ec48:	mov	x20, #0x0                   	// #0
    ec4c:	b	eb5c <PyFloat_FromString@plt+0x80cc>
    ec50:	mov	x0, x19
    ec54:	mov	x20, #0x0                   	// #0
    ec58:	bl	65d0 <_Py_Dealloc@plt>
    ec5c:	b	eadc <PyFloat_FromString@plt+0x804c>
    ec60:	stp	x29, x30, [sp, #-80]!
    ec64:	mov	x29, sp
    ec68:	add	x3, sp, #0x48
    ec6c:	add	x2, sp, #0x40
    ec70:	stp	x19, x20, [sp, #16]
    ec74:	stp	x21, x22, [sp, #32]
    ec78:	mov	x22, x0
    ec7c:	mov	x0, x1
    ec80:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
    ec84:	add	x1, x1, #0x2a8
    ec88:	bl	68e0 <PyArg_ParseTuple@plt>
    ec8c:	cbz	w0, ed6c <PyFloat_FromString@plt+0x82dc>
    ec90:	ldr	x19, [sp, #64]
    ec94:	ldr	x0, [x19, #8]
    ec98:	str	x23, [sp, #48]
    ec9c:	adrp	x23, 5d000 <PyInit__decimal@@Base+0x42a80>
    eca0:	add	x20, x23, #0x320
    eca4:	add	x20, x20, #0x1a0
    eca8:	cmp	x0, x20
    ecac:	b.eq	ed00 <PyFloat_FromString@plt+0x8270>  // b.none
    ecb0:	mov	x1, x20
    ecb4:	bl	69c0 <PyType_IsSubtype@plt>
    ecb8:	cbnz	w0, ed00 <PyFloat_FromString@plt+0x8270>
    ecbc:	ldr	x2, [x19, #8]
    ecc0:	ldr	x0, [x2, #168]
    ecc4:	tbnz	w0, #24, ee5c <PyFloat_FromString@plt+0x83cc>
    ecc8:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
    eccc:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
    ecd0:	ldr	x2, [x2, #24]
    ecd4:	add	x1, x1, #0x8
    ecd8:	ldr	x0, [x0, #3936]
    ecdc:	mov	x20, #0x0                   	// #0
    ece0:	ldr	x0, [x0]
    ece4:	bl	6a10 <PyErr_Format@plt>
    ece8:	ldr	x23, [sp, #48]
    ecec:	mov	x0, x20
    ecf0:	ldp	x19, x20, [sp, #16]
    ecf4:	ldp	x21, x22, [sp, #32]
    ecf8:	ldp	x29, x30, [sp], #80
    ecfc:	ret
    ed00:	ldr	x0, [x19]
    ed04:	add	x0, x0, #0x1
    ed08:	str	x0, [x19]
    ed0c:	ldr	x21, [sp, #72]
    ed10:	add	x20, x23, #0x320
    ed14:	add	x20, x20, #0x1a0
    ed18:	ldr	x0, [x21, #8]
    ed1c:	cmp	x0, x20
    ed20:	b.eq	ed84 <PyFloat_FromString@plt+0x82f4>  // b.none
    ed24:	mov	x1, x20
    ed28:	bl	69c0 <PyType_IsSubtype@plt>
    ed2c:	cbnz	w0, ed84 <PyFloat_FromString@plt+0x82f4>
    ed30:	ldr	x2, [x21, #8]
    ed34:	ldr	x0, [x2, #168]
    ed38:	tbnz	w0, #24, ee40 <PyFloat_FromString@plt+0x83b0>
    ed3c:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
    ed40:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
    ed44:	ldr	x2, [x2, #24]
    ed48:	add	x1, x1, #0x8
    ed4c:	ldr	x0, [x0, #3936]
    ed50:	ldr	x0, [x0]
    ed54:	bl	6a10 <PyErr_Format@plt>
    ed58:	ldr	x0, [x19]
    ed5c:	sub	x0, x0, #0x1
    ed60:	str	x0, [x19]
    ed64:	cbz	x0, ee7c <PyFloat_FromString@plt+0x83ec>
    ed68:	ldr	x23, [sp, #48]
    ed6c:	mov	x20, #0x0                   	// #0
    ed70:	mov	x0, x20
    ed74:	ldp	x19, x20, [sp, #16]
    ed78:	ldp	x21, x22, [sp, #32]
    ed7c:	ldp	x29, x30, [sp], #80
    ed80:	ret
    ed84:	ldr	x0, [x21]
    ed88:	add	x0, x0, #0x1
    ed8c:	str	x0, [x21]
    ed90:	add	x0, x23, #0x320
    ed94:	add	x0, x0, #0x1a0
    ed98:	bl	6c60 <PyFloat_FromString@plt+0x1d0>
    ed9c:	mov	x20, x0
    eda0:	cbz	x0, edec <PyFloat_FromString@plt+0x835c>
    eda4:	add	x2, x21, #0x18
    eda8:	add	x1, x19, #0x18
    edac:	add	x0, x0, #0x18
    edb0:	bl	2a1c0 <PyInit__decimal@@Base+0xfc40>
    edb4:	ldr	x0, [x19]
    edb8:	sub	x0, x0, #0x1
    edbc:	str	x0, [x19]
    edc0:	cbz	x0, ee34 <PyFloat_FromString@plt+0x83a4>
    edc4:	ldr	x0, [x21]
    edc8:	sub	x0, x0, #0x1
    edcc:	str	x0, [x21]
    edd0:	cbz	x0, ee14 <PyFloat_FromString@plt+0x8384>
    edd4:	mov	x0, x20
    edd8:	ldp	x19, x20, [sp, #16]
    eddc:	ldp	x21, x22, [sp, #32]
    ede0:	ldr	x23, [sp, #48]
    ede4:	ldp	x29, x30, [sp], #80
    ede8:	ret
    edec:	ldr	x0, [x19]
    edf0:	sub	x0, x0, #0x1
    edf4:	str	x0, [x19]
    edf8:	cbnz	x0, ee04 <PyFloat_FromString@plt+0x8374>
    edfc:	mov	x0, x19
    ee00:	bl	65d0 <_Py_Dealloc@plt>
    ee04:	ldr	x0, [x21]
    ee08:	sub	x0, x0, #0x1
    ee0c:	str	x0, [x21]
    ee10:	cbnz	x0, ed68 <PyFloat_FromString@plt+0x82d8>
    ee14:	mov	x0, x21
    ee18:	bl	65d0 <_Py_Dealloc@plt>
    ee1c:	mov	x0, x20
    ee20:	ldp	x19, x20, [sp, #16]
    ee24:	ldp	x21, x22, [sp, #32]
    ee28:	ldr	x23, [sp, #48]
    ee2c:	ldp	x29, x30, [sp], #80
    ee30:	ret
    ee34:	mov	x0, x19
    ee38:	bl	65d0 <_Py_Dealloc@plt>
    ee3c:	b	edc4 <PyFloat_FromString@plt+0x8334>
    ee40:	mov	x1, x21
    ee44:	mov	x2, x22
    ee48:	mov	x0, x20
    ee4c:	bl	82f8 <PyFloat_FromString@plt+0x1868>
    ee50:	mov	x21, x0
    ee54:	cbnz	x0, ed90 <PyFloat_FromString@plt+0x8300>
    ee58:	b	ed58 <PyFloat_FromString@plt+0x82c8>
    ee5c:	mov	x1, x19
    ee60:	mov	x0, x20
    ee64:	mov	x2, x22
    ee68:	bl	82f8 <PyFloat_FromString@plt+0x1868>
    ee6c:	mov	x19, x0
    ee70:	cbnz	x0, ed0c <PyFloat_FromString@plt+0x827c>
    ee74:	ldr	x23, [sp, #48]
    ee78:	b	ed6c <PyFloat_FromString@plt+0x82dc>
    ee7c:	mov	x0, x19
    ee80:	mov	x20, #0x0                   	// #0
    ee84:	bl	65d0 <_Py_Dealloc@plt>
    ee88:	ldr	x23, [sp, #48]
    ee8c:	b	ecec <PyFloat_FromString@plt+0x825c>
    ee90:	stp	x29, x30, [sp, #-80]!
    ee94:	mov	x29, sp
    ee98:	add	x3, sp, #0x48
    ee9c:	add	x2, sp, #0x40
    eea0:	stp	x19, x20, [sp, #16]
    eea4:	stp	x21, x22, [sp, #32]
    eea8:	mov	x22, x0
    eeac:	mov	x0, x1
    eeb0:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
    eeb4:	add	x1, x1, #0x2a8
    eeb8:	bl	68e0 <PyArg_ParseTuple@plt>
    eebc:	cbz	w0, ef9c <PyFloat_FromString@plt+0x850c>
    eec0:	ldr	x19, [sp, #64]
    eec4:	ldr	x0, [x19, #8]
    eec8:	str	x23, [sp, #48]
    eecc:	adrp	x23, 5d000 <PyInit__decimal@@Base+0x42a80>
    eed0:	add	x20, x23, #0x320
    eed4:	add	x20, x20, #0x1a0
    eed8:	cmp	x0, x20
    eedc:	b.eq	ef30 <PyFloat_FromString@plt+0x84a0>  // b.none
    eee0:	mov	x1, x20
    eee4:	bl	69c0 <PyType_IsSubtype@plt>
    eee8:	cbnz	w0, ef30 <PyFloat_FromString@plt+0x84a0>
    eeec:	ldr	x2, [x19, #8]
    eef0:	ldr	x0, [x2, #168]
    eef4:	tbnz	w0, #24, f08c <PyFloat_FromString@plt+0x85fc>
    eef8:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
    eefc:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
    ef00:	ldr	x2, [x2, #24]
    ef04:	add	x1, x1, #0x8
    ef08:	ldr	x0, [x0, #3936]
    ef0c:	mov	x20, #0x0                   	// #0
    ef10:	ldr	x0, [x0]
    ef14:	bl	6a10 <PyErr_Format@plt>
    ef18:	ldr	x23, [sp, #48]
    ef1c:	mov	x0, x20
    ef20:	ldp	x19, x20, [sp, #16]
    ef24:	ldp	x21, x22, [sp, #32]
    ef28:	ldp	x29, x30, [sp], #80
    ef2c:	ret
    ef30:	ldr	x0, [x19]
    ef34:	add	x0, x0, #0x1
    ef38:	str	x0, [x19]
    ef3c:	ldr	x21, [sp, #72]
    ef40:	add	x20, x23, #0x320
    ef44:	add	x20, x20, #0x1a0
    ef48:	ldr	x0, [x21, #8]
    ef4c:	cmp	x0, x20
    ef50:	b.eq	efb4 <PyFloat_FromString@plt+0x8524>  // b.none
    ef54:	mov	x1, x20
    ef58:	bl	69c0 <PyType_IsSubtype@plt>
    ef5c:	cbnz	w0, efb4 <PyFloat_FromString@plt+0x8524>
    ef60:	ldr	x2, [x21, #8]
    ef64:	ldr	x0, [x2, #168]
    ef68:	tbnz	w0, #24, f070 <PyFloat_FromString@plt+0x85e0>
    ef6c:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
    ef70:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
    ef74:	ldr	x2, [x2, #24]
    ef78:	add	x1, x1, #0x8
    ef7c:	ldr	x0, [x0, #3936]
    ef80:	ldr	x0, [x0]
    ef84:	bl	6a10 <PyErr_Format@plt>
    ef88:	ldr	x0, [x19]
    ef8c:	sub	x0, x0, #0x1
    ef90:	str	x0, [x19]
    ef94:	cbz	x0, f0ac <PyFloat_FromString@plt+0x861c>
    ef98:	ldr	x23, [sp, #48]
    ef9c:	mov	x20, #0x0                   	// #0
    efa0:	mov	x0, x20
    efa4:	ldp	x19, x20, [sp, #16]
    efa8:	ldp	x21, x22, [sp, #32]
    efac:	ldp	x29, x30, [sp], #80
    efb0:	ret
    efb4:	ldr	x0, [x21]
    efb8:	add	x0, x0, #0x1
    efbc:	str	x0, [x21]
    efc0:	add	x0, x23, #0x320
    efc4:	add	x0, x0, #0x1a0
    efc8:	bl	6c60 <PyFloat_FromString@plt+0x1d0>
    efcc:	mov	x20, x0
    efd0:	cbz	x0, f01c <PyFloat_FromString@plt+0x858c>
    efd4:	add	x2, x21, #0x18
    efd8:	add	x1, x19, #0x18
    efdc:	add	x0, x0, #0x18
    efe0:	bl	2a298 <PyInit__decimal@@Base+0xfd18>
    efe4:	ldr	x0, [x19]
    efe8:	sub	x0, x0, #0x1
    efec:	str	x0, [x19]
    eff0:	cbz	x0, f064 <PyFloat_FromString@plt+0x85d4>
    eff4:	ldr	x0, [x21]
    eff8:	sub	x0, x0, #0x1
    effc:	str	x0, [x21]
    f000:	cbz	x0, f044 <PyFloat_FromString@plt+0x85b4>
    f004:	mov	x0, x20
    f008:	ldp	x19, x20, [sp, #16]
    f00c:	ldp	x21, x22, [sp, #32]
    f010:	ldr	x23, [sp, #48]
    f014:	ldp	x29, x30, [sp], #80
    f018:	ret
    f01c:	ldr	x0, [x19]
    f020:	sub	x0, x0, #0x1
    f024:	str	x0, [x19]
    f028:	cbnz	x0, f034 <PyFloat_FromString@plt+0x85a4>
    f02c:	mov	x0, x19
    f030:	bl	65d0 <_Py_Dealloc@plt>
    f034:	ldr	x0, [x21]
    f038:	sub	x0, x0, #0x1
    f03c:	str	x0, [x21]
    f040:	cbnz	x0, ef98 <PyFloat_FromString@plt+0x8508>
    f044:	mov	x0, x21
    f048:	bl	65d0 <_Py_Dealloc@plt>
    f04c:	mov	x0, x20
    f050:	ldp	x19, x20, [sp, #16]
    f054:	ldp	x21, x22, [sp, #32]
    f058:	ldr	x23, [sp, #48]
    f05c:	ldp	x29, x30, [sp], #80
    f060:	ret
    f064:	mov	x0, x19
    f068:	bl	65d0 <_Py_Dealloc@plt>
    f06c:	b	eff4 <PyFloat_FromString@plt+0x8564>
    f070:	mov	x1, x21
    f074:	mov	x2, x22
    f078:	mov	x0, x20
    f07c:	bl	82f8 <PyFloat_FromString@plt+0x1868>
    f080:	mov	x21, x0
    f084:	cbnz	x0, efc0 <PyFloat_FromString@plt+0x8530>
    f088:	b	ef88 <PyFloat_FromString@plt+0x84f8>
    f08c:	mov	x1, x19
    f090:	mov	x0, x20
    f094:	mov	x2, x22
    f098:	bl	82f8 <PyFloat_FromString@plt+0x1868>
    f09c:	mov	x19, x0
    f0a0:	cbnz	x0, ef3c <PyFloat_FromString@plt+0x84ac>
    f0a4:	ldr	x23, [sp, #48]
    f0a8:	b	ef9c <PyFloat_FromString@plt+0x850c>
    f0ac:	mov	x0, x19
    f0b0:	mov	x20, #0x0                   	// #0
    f0b4:	bl	65d0 <_Py_Dealloc@plt>
    f0b8:	ldr	x23, [sp, #48]
    f0bc:	b	ef1c <PyFloat_FromString@plt+0x848c>
    f0c0:	stp	x29, x30, [sp, #-96]!
    f0c4:	mov	x29, sp
    f0c8:	add	x3, sp, #0x58
    f0cc:	add	x2, sp, #0x50
    f0d0:	stp	x19, x20, [sp, #16]
    f0d4:	stp	x21, x22, [sp, #32]
    f0d8:	mov	x21, x0
    f0dc:	mov	x0, x1
    f0e0:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
    f0e4:	add	x1, x1, #0x2a8
    f0e8:	str	wzr, [sp, #76]
    f0ec:	bl	68e0 <PyArg_ParseTuple@plt>
    f0f0:	cbz	w0, f1d0 <PyFloat_FromString@plt+0x8740>
    f0f4:	ldr	x19, [sp, #80]
    f0f8:	ldr	x0, [x19, #8]
    f0fc:	str	x23, [sp, #48]
    f100:	adrp	x23, 5d000 <PyInit__decimal@@Base+0x42a80>
    f104:	add	x20, x23, #0x320
    f108:	add	x20, x20, #0x1a0
    f10c:	cmp	x0, x20
    f110:	b.eq	f164 <PyFloat_FromString@plt+0x86d4>  // b.none
    f114:	mov	x1, x20
    f118:	bl	69c0 <PyType_IsSubtype@plt>
    f11c:	cbnz	w0, f164 <PyFloat_FromString@plt+0x86d4>
    f120:	ldr	x2, [x19, #8]
    f124:	ldr	x0, [x2, #168]
    f128:	tbnz	w0, #24, f298 <PyFloat_FromString@plt+0x8808>
    f12c:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
    f130:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
    f134:	ldr	x2, [x2, #24]
    f138:	add	x1, x1, #0x8
    f13c:	ldr	x0, [x0, #3936]
    f140:	mov	x20, #0x0                   	// #0
    f144:	ldr	x0, [x0]
    f148:	bl	6a10 <PyErr_Format@plt>
    f14c:	ldr	x23, [sp, #48]
    f150:	mov	x0, x20
    f154:	ldp	x19, x20, [sp, #16]
    f158:	ldp	x21, x22, [sp, #32]
    f15c:	ldp	x29, x30, [sp], #96
    f160:	ret
    f164:	ldr	x0, [x19]
    f168:	add	x0, x0, #0x1
    f16c:	str	x0, [x19]
    f170:	ldr	x22, [sp, #88]
    f174:	add	x20, x23, #0x320
    f178:	add	x20, x20, #0x1a0
    f17c:	ldr	x0, [x22, #8]
    f180:	cmp	x0, x20
    f184:	b.eq	f1e8 <PyFloat_FromString@plt+0x8758>  // b.none
    f188:	mov	x1, x20
    f18c:	bl	69c0 <PyType_IsSubtype@plt>
    f190:	cbnz	w0, f1e8 <PyFloat_FromString@plt+0x8758>
    f194:	ldr	x2, [x22, #8]
    f198:	ldr	x0, [x2, #168]
    f19c:	tbnz	w0, #24, f27c <PyFloat_FromString@plt+0x87ec>
    f1a0:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
    f1a4:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
    f1a8:	ldr	x2, [x2, #24]
    f1ac:	add	x1, x1, #0x8
    f1b0:	ldr	x0, [x0, #3936]
    f1b4:	ldr	x0, [x0]
    f1b8:	bl	6a10 <PyErr_Format@plt>
    f1bc:	ldr	x0, [x19]
    f1c0:	sub	x0, x0, #0x1
    f1c4:	str	x0, [x19]
    f1c8:	cbz	x0, f30c <PyFloat_FromString@plt+0x887c>
    f1cc:	ldr	x23, [sp, #48]
    f1d0:	mov	x20, #0x0                   	// #0
    f1d4:	mov	x0, x20
    f1d8:	ldp	x19, x20, [sp, #16]
    f1dc:	ldp	x21, x22, [sp, #32]
    f1e0:	ldp	x29, x30, [sp], #96
    f1e4:	ret
    f1e8:	ldr	x0, [x22]
    f1ec:	add	x0, x0, #0x1
    f1f0:	str	x0, [x22]
    f1f4:	add	x0, x23, #0x320
    f1f8:	add	x0, x0, #0x1a0
    f1fc:	bl	6c60 <PyFloat_FromString@plt+0x1d0>
    f200:	mov	x20, x0
    f204:	cbz	x0, f2b8 <PyFloat_FromString@plt+0x8828>
    f208:	add	x3, sp, #0x4c
    f20c:	add	x2, x22, #0x18
    f210:	add	x1, x19, #0x18
    f214:	add	x0, x0, #0x18
    f218:	bl	29e78 <PyInit__decimal@@Base+0xf8f8>
    f21c:	ldr	x0, [x19]
    f220:	sub	x0, x0, #0x1
    f224:	str	x0, [x19]
    f228:	cbz	x0, f270 <PyFloat_FromString@plt+0x87e0>
    f22c:	ldr	x0, [x22]
    f230:	sub	x0, x0, #0x1
    f234:	str	x0, [x22]
    f238:	cbz	x0, f264 <PyFloat_FromString@plt+0x87d4>
    f23c:	ldr	w1, [sp, #76]
    f240:	mov	x0, x21
    f244:	bl	7f90 <PyFloat_FromString@plt+0x1500>
    f248:	cbnz	w0, f2e8 <PyFloat_FromString@plt+0x8858>
    f24c:	mov	x0, x20
    f250:	ldp	x19, x20, [sp, #16]
    f254:	ldp	x21, x22, [sp, #32]
    f258:	ldr	x23, [sp, #48]
    f25c:	ldp	x29, x30, [sp], #96
    f260:	ret
    f264:	mov	x0, x22
    f268:	bl	65d0 <_Py_Dealloc@plt>
    f26c:	b	f23c <PyFloat_FromString@plt+0x87ac>
    f270:	mov	x0, x19
    f274:	bl	65d0 <_Py_Dealloc@plt>
    f278:	b	f22c <PyFloat_FromString@plt+0x879c>
    f27c:	mov	x1, x22
    f280:	mov	x0, x20
    f284:	mov	x2, x21
    f288:	bl	82f8 <PyFloat_FromString@plt+0x1868>
    f28c:	mov	x22, x0
    f290:	cbnz	x0, f1f4 <PyFloat_FromString@plt+0x8764>
    f294:	b	f1bc <PyFloat_FromString@plt+0x872c>
    f298:	mov	x1, x19
    f29c:	mov	x0, x20
    f2a0:	mov	x2, x21
    f2a4:	bl	82f8 <PyFloat_FromString@plt+0x1868>
    f2a8:	mov	x19, x0
    f2ac:	cbnz	x0, f170 <PyFloat_FromString@plt+0x86e0>
    f2b0:	ldr	x23, [sp, #48]
    f2b4:	b	f1d0 <PyFloat_FromString@plt+0x8740>
    f2b8:	ldr	x0, [x19]
    f2bc:	sub	x0, x0, #0x1
    f2c0:	str	x0, [x19]
    f2c4:	cbz	x0, f320 <PyFloat_FromString@plt+0x8890>
    f2c8:	ldr	x0, [x22]
    f2cc:	sub	x0, x0, #0x1
    f2d0:	str	x0, [x22]
    f2d4:	cbnz	x0, f1cc <PyFloat_FromString@plt+0x873c>
    f2d8:	mov	x0, x22
    f2dc:	bl	65d0 <_Py_Dealloc@plt>
    f2e0:	ldr	x23, [sp, #48]
    f2e4:	b	f150 <PyFloat_FromString@plt+0x86c0>
    f2e8:	ldr	x0, [x20]
    f2ec:	sub	x0, x0, #0x1
    f2f0:	str	x0, [x20]
    f2f4:	cbnz	x0, f1cc <PyFloat_FromString@plt+0x873c>
    f2f8:	mov	x0, x20
    f2fc:	mov	x20, #0x0                   	// #0
    f300:	bl	65d0 <_Py_Dealloc@plt>
    f304:	ldr	x23, [sp, #48]
    f308:	b	f150 <PyFloat_FromString@plt+0x86c0>
    f30c:	mov	x0, x19
    f310:	mov	x20, #0x0                   	// #0
    f314:	bl	65d0 <_Py_Dealloc@plt>
    f318:	ldr	x23, [sp, #48]
    f31c:	b	f150 <PyFloat_FromString@plt+0x86c0>
    f320:	mov	x0, x19
    f324:	bl	65d0 <_Py_Dealloc@plt>
    f328:	b	f2c8 <PyFloat_FromString@plt+0x8838>
    f32c:	nop
    f330:	stp	x29, x30, [sp, #-96]!
    f334:	mov	x29, sp
    f338:	add	x3, sp, #0x58
    f33c:	add	x2, sp, #0x50
    f340:	stp	x19, x20, [sp, #16]
    f344:	mov	x20, x0
    f348:	mov	x0, x1
    f34c:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
    f350:	add	x1, x1, #0x2a8
    f354:	stp	x21, x22, [sp, #32]
    f358:	str	wzr, [sp, #76]
    f35c:	bl	68e0 <PyArg_ParseTuple@plt>
    f360:	cbz	w0, f440 <PyFloat_FromString@plt+0x89b0>
    f364:	ldr	x19, [sp, #80]
    f368:	ldr	x0, [x19, #8]
    f36c:	str	x23, [sp, #48]
    f370:	adrp	x23, 5d000 <PyInit__decimal@@Base+0x42a80>
    f374:	add	x21, x23, #0x320
    f378:	add	x21, x21, #0x1a0
    f37c:	cmp	x0, x21
    f380:	b.eq	f3d4 <PyFloat_FromString@plt+0x8944>  // b.none
    f384:	mov	x1, x21
    f388:	bl	69c0 <PyType_IsSubtype@plt>
    f38c:	cbnz	w0, f3d4 <PyFloat_FromString@plt+0x8944>
    f390:	ldr	x2, [x19, #8]
    f394:	ldr	x0, [x2, #168]
    f398:	tbnz	w0, #24, f50c <PyFloat_FromString@plt+0x8a7c>
    f39c:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
    f3a0:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
    f3a4:	ldr	x2, [x2, #24]
    f3a8:	add	x1, x1, #0x8
    f3ac:	ldr	x0, [x0, #3936]
    f3b0:	mov	x21, #0x0                   	// #0
    f3b4:	ldr	x0, [x0]
    f3b8:	bl	6a10 <PyErr_Format@plt>
    f3bc:	ldr	x23, [sp, #48]
    f3c0:	mov	x0, x21
    f3c4:	ldp	x19, x20, [sp, #16]
    f3c8:	ldp	x21, x22, [sp, #32]
    f3cc:	ldp	x29, x30, [sp], #96
    f3d0:	ret
    f3d4:	ldr	x0, [x19]
    f3d8:	add	x0, x0, #0x1
    f3dc:	str	x0, [x19]
    f3e0:	ldr	x22, [sp, #88]
    f3e4:	add	x21, x23, #0x320
    f3e8:	add	x21, x21, #0x1a0
    f3ec:	ldr	x0, [x22, #8]
    f3f0:	cmp	x0, x21
    f3f4:	b.eq	f458 <PyFloat_FromString@plt+0x89c8>  // b.none
    f3f8:	mov	x1, x21
    f3fc:	bl	69c0 <PyType_IsSubtype@plt>
    f400:	cbnz	w0, f458 <PyFloat_FromString@plt+0x89c8>
    f404:	ldr	x2, [x22, #8]
    f408:	ldr	x0, [x2, #168]
    f40c:	tbnz	w0, #24, f4f0 <PyFloat_FromString@plt+0x8a60>
    f410:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
    f414:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
    f418:	ldr	x2, [x2, #24]
    f41c:	add	x1, x1, #0x8
    f420:	ldr	x0, [x0, #3936]
    f424:	ldr	x0, [x0]
    f428:	bl	6a10 <PyErr_Format@plt>
    f42c:	ldr	x0, [x19]
    f430:	sub	x0, x0, #0x1
    f434:	str	x0, [x19]
    f438:	cbz	x0, f580 <PyFloat_FromString@plt+0x8af0>
    f43c:	ldr	x23, [sp, #48]
    f440:	mov	x21, #0x0                   	// #0
    f444:	mov	x0, x21
    f448:	ldp	x19, x20, [sp, #16]
    f44c:	ldp	x21, x22, [sp, #32]
    f450:	ldp	x29, x30, [sp], #96
    f454:	ret
    f458:	ldr	x0, [x22]
    f45c:	add	x0, x0, #0x1
    f460:	str	x0, [x22]
    f464:	add	x0, x23, #0x320
    f468:	add	x0, x0, #0x1a0
    f46c:	bl	6c60 <PyFloat_FromString@plt+0x1d0>
    f470:	mov	x21, x0
    f474:	cbz	x0, f52c <PyFloat_FromString@plt+0x8a9c>
    f478:	add	x0, x0, #0x18
    f47c:	add	x4, sp, #0x4c
    f480:	add	x3, x20, #0x10
    f484:	add	x2, x22, #0x18
    f488:	add	x1, x19, #0x18
    f48c:	bl	2dba8 <PyInit__decimal@@Base+0x13628>
    f490:	ldr	x0, [x19]
    f494:	sub	x0, x0, #0x1
    f498:	str	x0, [x19]
    f49c:	cbz	x0, f4e4 <PyFloat_FromString@plt+0x8a54>
    f4a0:	ldr	x0, [x22]
    f4a4:	sub	x0, x0, #0x1
    f4a8:	str	x0, [x22]
    f4ac:	cbz	x0, f4d8 <PyFloat_FromString@plt+0x8a48>
    f4b0:	ldr	w1, [sp, #76]
    f4b4:	mov	x0, x20
    f4b8:	bl	7f90 <PyFloat_FromString@plt+0x1500>
    f4bc:	cbnz	w0, f55c <PyFloat_FromString@plt+0x8acc>
    f4c0:	mov	x0, x21
    f4c4:	ldp	x19, x20, [sp, #16]
    f4c8:	ldp	x21, x22, [sp, #32]
    f4cc:	ldr	x23, [sp, #48]
    f4d0:	ldp	x29, x30, [sp], #96
    f4d4:	ret
    f4d8:	mov	x0, x22
    f4dc:	bl	65d0 <_Py_Dealloc@plt>
    f4e0:	b	f4b0 <PyFloat_FromString@plt+0x8a20>
    f4e4:	mov	x0, x19
    f4e8:	bl	65d0 <_Py_Dealloc@plt>
    f4ec:	b	f4a0 <PyFloat_FromString@plt+0x8a10>
    f4f0:	mov	x1, x22
    f4f4:	mov	x0, x21
    f4f8:	mov	x2, x20
    f4fc:	bl	82f8 <PyFloat_FromString@plt+0x1868>
    f500:	mov	x22, x0
    f504:	cbnz	x0, f464 <PyFloat_FromString@plt+0x89d4>
    f508:	b	f42c <PyFloat_FromString@plt+0x899c>
    f50c:	mov	x1, x19
    f510:	mov	x0, x21
    f514:	mov	x2, x20
    f518:	bl	82f8 <PyFloat_FromString@plt+0x1868>
    f51c:	mov	x19, x0
    f520:	cbnz	x0, f3e0 <PyFloat_FromString@plt+0x8950>
    f524:	ldr	x23, [sp, #48]
    f528:	b	f440 <PyFloat_FromString@plt+0x89b0>
    f52c:	ldr	x0, [x19]
    f530:	sub	x0, x0, #0x1
    f534:	str	x0, [x19]
    f538:	cbz	x0, f594 <PyFloat_FromString@plt+0x8b04>
    f53c:	ldr	x0, [x22]
    f540:	sub	x0, x0, #0x1
    f544:	str	x0, [x22]
    f548:	cbnz	x0, f43c <PyFloat_FromString@plt+0x89ac>
    f54c:	mov	x0, x22
    f550:	bl	65d0 <_Py_Dealloc@plt>
    f554:	ldr	x23, [sp, #48]
    f558:	b	f3c0 <PyFloat_FromString@plt+0x8930>
    f55c:	ldr	x0, [x21]
    f560:	sub	x0, x0, #0x1
    f564:	str	x0, [x21]
    f568:	cbnz	x0, f43c <PyFloat_FromString@plt+0x89ac>
    f56c:	mov	x0, x21
    f570:	mov	x21, #0x0                   	// #0
    f574:	bl	65d0 <_Py_Dealloc@plt>
    f578:	ldr	x23, [sp, #48]
    f57c:	b	f3c0 <PyFloat_FromString@plt+0x8930>
    f580:	mov	x0, x19
    f584:	mov	x21, #0x0                   	// #0
    f588:	bl	65d0 <_Py_Dealloc@plt>
    f58c:	ldr	x23, [sp, #48]
    f590:	b	f3c0 <PyFloat_FromString@plt+0x8930>
    f594:	mov	x0, x19
    f598:	bl	65d0 <_Py_Dealloc@plt>
    f59c:	b	f53c <PyFloat_FromString@plt+0x8aac>
    f5a0:	stp	x29, x30, [sp, #-96]!
    f5a4:	mov	x29, sp
    f5a8:	add	x3, sp, #0x58
    f5ac:	add	x2, sp, #0x50
    f5b0:	stp	x19, x20, [sp, #16]
    f5b4:	mov	x20, x0
    f5b8:	mov	x0, x1
    f5bc:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
    f5c0:	add	x1, x1, #0x2a8
    f5c4:	stp	x21, x22, [sp, #32]
    f5c8:	str	wzr, [sp, #76]
    f5cc:	bl	68e0 <PyArg_ParseTuple@plt>
    f5d0:	cbz	w0, f6b0 <PyFloat_FromString@plt+0x8c20>
    f5d4:	ldr	x19, [sp, #80]
    f5d8:	ldr	x0, [x19, #8]
    f5dc:	str	x23, [sp, #48]
    f5e0:	adrp	x23, 5d000 <PyInit__decimal@@Base+0x42a80>
    f5e4:	add	x21, x23, #0x320
    f5e8:	add	x21, x21, #0x1a0
    f5ec:	cmp	x0, x21
    f5f0:	b.eq	f644 <PyFloat_FromString@plt+0x8bb4>  // b.none
    f5f4:	mov	x1, x21
    f5f8:	bl	69c0 <PyType_IsSubtype@plt>
    f5fc:	cbnz	w0, f644 <PyFloat_FromString@plt+0x8bb4>
    f600:	ldr	x2, [x19, #8]
    f604:	ldr	x0, [x2, #168]
    f608:	tbnz	w0, #24, f77c <PyFloat_FromString@plt+0x8cec>
    f60c:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
    f610:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
    f614:	ldr	x2, [x2, #24]
    f618:	add	x1, x1, #0x8
    f61c:	ldr	x0, [x0, #3936]
    f620:	mov	x21, #0x0                   	// #0
    f624:	ldr	x0, [x0]
    f628:	bl	6a10 <PyErr_Format@plt>
    f62c:	ldr	x23, [sp, #48]
    f630:	mov	x0, x21
    f634:	ldp	x19, x20, [sp, #16]
    f638:	ldp	x21, x22, [sp, #32]
    f63c:	ldp	x29, x30, [sp], #96
    f640:	ret
    f644:	ldr	x0, [x19]
    f648:	add	x0, x0, #0x1
    f64c:	str	x0, [x19]
    f650:	ldr	x22, [sp, #88]
    f654:	add	x21, x23, #0x320
    f658:	add	x21, x21, #0x1a0
    f65c:	ldr	x0, [x22, #8]
    f660:	cmp	x0, x21
    f664:	b.eq	f6c8 <PyFloat_FromString@plt+0x8c38>  // b.none
    f668:	mov	x1, x21
    f66c:	bl	69c0 <PyType_IsSubtype@plt>
    f670:	cbnz	w0, f6c8 <PyFloat_FromString@plt+0x8c38>
    f674:	ldr	x2, [x22, #8]
    f678:	ldr	x0, [x2, #168]
    f67c:	tbnz	w0, #24, f760 <PyFloat_FromString@plt+0x8cd0>
    f680:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
    f684:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
    f688:	ldr	x2, [x2, #24]
    f68c:	add	x1, x1, #0x8
    f690:	ldr	x0, [x0, #3936]
    f694:	ldr	x0, [x0]
    f698:	bl	6a10 <PyErr_Format@plt>
    f69c:	ldr	x0, [x19]
    f6a0:	sub	x0, x0, #0x1
    f6a4:	str	x0, [x19]
    f6a8:	cbz	x0, f7f0 <PyFloat_FromString@plt+0x8d60>
    f6ac:	ldr	x23, [sp, #48]
    f6b0:	mov	x21, #0x0                   	// #0
    f6b4:	mov	x0, x21
    f6b8:	ldp	x19, x20, [sp, #16]
    f6bc:	ldp	x21, x22, [sp, #32]
    f6c0:	ldp	x29, x30, [sp], #96
    f6c4:	ret
    f6c8:	ldr	x0, [x22]
    f6cc:	add	x0, x0, #0x1
    f6d0:	str	x0, [x22]
    f6d4:	add	x0, x23, #0x320
    f6d8:	add	x0, x0, #0x1a0
    f6dc:	bl	6c60 <PyFloat_FromString@plt+0x1d0>
    f6e0:	mov	x21, x0
    f6e4:	cbz	x0, f79c <PyFloat_FromString@plt+0x8d0c>
    f6e8:	add	x0, x0, #0x18
    f6ec:	add	x4, sp, #0x4c
    f6f0:	add	x3, x20, #0x10
    f6f4:	add	x2, x22, #0x18
    f6f8:	add	x1, x19, #0x18
    f6fc:	bl	35800 <PyInit__decimal@@Base+0x1b280>
    f700:	ldr	x0, [x19]
    f704:	sub	x0, x0, #0x1
    f708:	str	x0, [x19]
    f70c:	cbz	x0, f754 <PyFloat_FromString@plt+0x8cc4>
    f710:	ldr	x0, [x22]
    f714:	sub	x0, x0, #0x1
    f718:	str	x0, [x22]
    f71c:	cbz	x0, f748 <PyFloat_FromString@plt+0x8cb8>
    f720:	ldr	w1, [sp, #76]
    f724:	mov	x0, x20
    f728:	bl	7f90 <PyFloat_FromString@plt+0x1500>
    f72c:	cbnz	w0, f7cc <PyFloat_FromString@plt+0x8d3c>
    f730:	mov	x0, x21
    f734:	ldp	x19, x20, [sp, #16]
    f738:	ldp	x21, x22, [sp, #32]
    f73c:	ldr	x23, [sp, #48]
    f740:	ldp	x29, x30, [sp], #96
    f744:	ret
    f748:	mov	x0, x22
    f74c:	bl	65d0 <_Py_Dealloc@plt>
    f750:	b	f720 <PyFloat_FromString@plt+0x8c90>
    f754:	mov	x0, x19
    f758:	bl	65d0 <_Py_Dealloc@plt>
    f75c:	b	f710 <PyFloat_FromString@plt+0x8c80>
    f760:	mov	x1, x22
    f764:	mov	x0, x21
    f768:	mov	x2, x20
    f76c:	bl	82f8 <PyFloat_FromString@plt+0x1868>
    f770:	mov	x22, x0
    f774:	cbnz	x0, f6d4 <PyFloat_FromString@plt+0x8c44>
    f778:	b	f69c <PyFloat_FromString@plt+0x8c0c>
    f77c:	mov	x1, x19
    f780:	mov	x0, x21
    f784:	mov	x2, x20
    f788:	bl	82f8 <PyFloat_FromString@plt+0x1868>
    f78c:	mov	x19, x0
    f790:	cbnz	x0, f650 <PyFloat_FromString@plt+0x8bc0>
    f794:	ldr	x23, [sp, #48]
    f798:	b	f6b0 <PyFloat_FromString@plt+0x8c20>
    f79c:	ldr	x0, [x19]
    f7a0:	sub	x0, x0, #0x1
    f7a4:	str	x0, [x19]
    f7a8:	cbz	x0, f804 <PyFloat_FromString@plt+0x8d74>
    f7ac:	ldr	x0, [x22]
    f7b0:	sub	x0, x0, #0x1
    f7b4:	str	x0, [x22]
    f7b8:	cbnz	x0, f6ac <PyFloat_FromString@plt+0x8c1c>
    f7bc:	mov	x0, x22
    f7c0:	bl	65d0 <_Py_Dealloc@plt>
    f7c4:	ldr	x23, [sp, #48]
    f7c8:	b	f630 <PyFloat_FromString@plt+0x8ba0>
    f7cc:	ldr	x0, [x21]
    f7d0:	sub	x0, x0, #0x1
    f7d4:	str	x0, [x21]
    f7d8:	cbnz	x0, f6ac <PyFloat_FromString@plt+0x8c1c>
    f7dc:	mov	x0, x21
    f7e0:	mov	x21, #0x0                   	// #0
    f7e4:	bl	65d0 <_Py_Dealloc@plt>
    f7e8:	ldr	x23, [sp, #48]
    f7ec:	b	f630 <PyFloat_FromString@plt+0x8ba0>
    f7f0:	mov	x0, x19
    f7f4:	mov	x21, #0x0                   	// #0
    f7f8:	bl	65d0 <_Py_Dealloc@plt>
    f7fc:	ldr	x23, [sp, #48]
    f800:	b	f630 <PyFloat_FromString@plt+0x8ba0>
    f804:	mov	x0, x19
    f808:	bl	65d0 <_Py_Dealloc@plt>
    f80c:	b	f7ac <PyFloat_FromString@plt+0x8d1c>
    f810:	stp	x29, x30, [sp, #-96]!
    f814:	mov	x29, sp
    f818:	add	x3, sp, #0x58
    f81c:	add	x2, sp, #0x50
    f820:	stp	x19, x20, [sp, #16]
    f824:	mov	x20, x0
    f828:	mov	x0, x1
    f82c:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
    f830:	add	x1, x1, #0x2a8
    f834:	stp	x21, x22, [sp, #32]
    f838:	str	wzr, [sp, #76]
    f83c:	bl	68e0 <PyArg_ParseTuple@plt>
    f840:	cbz	w0, f920 <PyFloat_FromString@plt+0x8e90>
    f844:	ldr	x19, [sp, #80]
    f848:	ldr	x0, [x19, #8]
    f84c:	str	x23, [sp, #48]
    f850:	adrp	x23, 5d000 <PyInit__decimal@@Base+0x42a80>
    f854:	add	x21, x23, #0x320
    f858:	add	x21, x21, #0x1a0
    f85c:	cmp	x0, x21
    f860:	b.eq	f8b4 <PyFloat_FromString@plt+0x8e24>  // b.none
    f864:	mov	x1, x21
    f868:	bl	69c0 <PyType_IsSubtype@plt>
    f86c:	cbnz	w0, f8b4 <PyFloat_FromString@plt+0x8e24>
    f870:	ldr	x2, [x19, #8]
    f874:	ldr	x0, [x2, #168]
    f878:	tbnz	w0, #24, f9ec <PyFloat_FromString@plt+0x8f5c>
    f87c:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
    f880:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
    f884:	ldr	x2, [x2, #24]
    f888:	add	x1, x1, #0x8
    f88c:	ldr	x0, [x0, #3936]
    f890:	mov	x21, #0x0                   	// #0
    f894:	ldr	x0, [x0]
    f898:	bl	6a10 <PyErr_Format@plt>
    f89c:	ldr	x23, [sp, #48]
    f8a0:	mov	x0, x21
    f8a4:	ldp	x19, x20, [sp, #16]
    f8a8:	ldp	x21, x22, [sp, #32]
    f8ac:	ldp	x29, x30, [sp], #96
    f8b0:	ret
    f8b4:	ldr	x0, [x19]
    f8b8:	add	x0, x0, #0x1
    f8bc:	str	x0, [x19]
    f8c0:	ldr	x22, [sp, #88]
    f8c4:	add	x21, x23, #0x320
    f8c8:	add	x21, x21, #0x1a0
    f8cc:	ldr	x0, [x22, #8]
    f8d0:	cmp	x0, x21
    f8d4:	b.eq	f938 <PyFloat_FromString@plt+0x8ea8>  // b.none
    f8d8:	mov	x1, x21
    f8dc:	bl	69c0 <PyType_IsSubtype@plt>
    f8e0:	cbnz	w0, f938 <PyFloat_FromString@plt+0x8ea8>
    f8e4:	ldr	x2, [x22, #8]
    f8e8:	ldr	x0, [x2, #168]
    f8ec:	tbnz	w0, #24, f9d0 <PyFloat_FromString@plt+0x8f40>
    f8f0:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
    f8f4:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
    f8f8:	ldr	x2, [x2, #24]
    f8fc:	add	x1, x1, #0x8
    f900:	ldr	x0, [x0, #3936]
    f904:	ldr	x0, [x0]
    f908:	bl	6a10 <PyErr_Format@plt>
    f90c:	ldr	x0, [x19]
    f910:	sub	x0, x0, #0x1
    f914:	str	x0, [x19]
    f918:	cbz	x0, fa60 <PyFloat_FromString@plt+0x8fd0>
    f91c:	ldr	x23, [sp, #48]
    f920:	mov	x21, #0x0                   	// #0
    f924:	mov	x0, x21
    f928:	ldp	x19, x20, [sp, #16]
    f92c:	ldp	x21, x22, [sp, #32]
    f930:	ldp	x29, x30, [sp], #96
    f934:	ret
    f938:	ldr	x0, [x22]
    f93c:	add	x0, x0, #0x1
    f940:	str	x0, [x22]
    f944:	add	x0, x23, #0x320
    f948:	add	x0, x0, #0x1a0
    f94c:	bl	6c60 <PyFloat_FromString@plt+0x1d0>
    f950:	mov	x21, x0
    f954:	cbz	x0, fa0c <PyFloat_FromString@plt+0x8f7c>
    f958:	add	x0, x0, #0x18
    f95c:	add	x4, sp, #0x4c
    f960:	add	x3, x20, #0x10
    f964:	add	x2, x22, #0x18
    f968:	add	x1, x19, #0x18
    f96c:	bl	33580 <PyInit__decimal@@Base+0x19000>
    f970:	ldr	x0, [x19]
    f974:	sub	x0, x0, #0x1
    f978:	str	x0, [x19]
    f97c:	cbz	x0, f9c4 <PyFloat_FromString@plt+0x8f34>
    f980:	ldr	x0, [x22]
    f984:	sub	x0, x0, #0x1
    f988:	str	x0, [x22]
    f98c:	cbz	x0, f9b8 <PyFloat_FromString@plt+0x8f28>
    f990:	ldr	w1, [sp, #76]
    f994:	mov	x0, x20
    f998:	bl	7f90 <PyFloat_FromString@plt+0x1500>
    f99c:	cbnz	w0, fa3c <PyFloat_FromString@plt+0x8fac>
    f9a0:	mov	x0, x21
    f9a4:	ldp	x19, x20, [sp, #16]
    f9a8:	ldp	x21, x22, [sp, #32]
    f9ac:	ldr	x23, [sp, #48]
    f9b0:	ldp	x29, x30, [sp], #96
    f9b4:	ret
    f9b8:	mov	x0, x22
    f9bc:	bl	65d0 <_Py_Dealloc@plt>
    f9c0:	b	f990 <PyFloat_FromString@plt+0x8f00>
    f9c4:	mov	x0, x19
    f9c8:	bl	65d0 <_Py_Dealloc@plt>
    f9cc:	b	f980 <PyFloat_FromString@plt+0x8ef0>
    f9d0:	mov	x1, x22
    f9d4:	mov	x0, x21
    f9d8:	mov	x2, x20
    f9dc:	bl	82f8 <PyFloat_FromString@plt+0x1868>
    f9e0:	mov	x22, x0
    f9e4:	cbnz	x0, f944 <PyFloat_FromString@plt+0x8eb4>
    f9e8:	b	f90c <PyFloat_FromString@plt+0x8e7c>
    f9ec:	mov	x1, x19
    f9f0:	mov	x0, x21
    f9f4:	mov	x2, x20
    f9f8:	bl	82f8 <PyFloat_FromString@plt+0x1868>
    f9fc:	mov	x19, x0
    fa00:	cbnz	x0, f8c0 <PyFloat_FromString@plt+0x8e30>
    fa04:	ldr	x23, [sp, #48]
    fa08:	b	f920 <PyFloat_FromString@plt+0x8e90>
    fa0c:	ldr	x0, [x19]
    fa10:	sub	x0, x0, #0x1
    fa14:	str	x0, [x19]
    fa18:	cbz	x0, fa74 <PyFloat_FromString@plt+0x8fe4>
    fa1c:	ldr	x0, [x22]
    fa20:	sub	x0, x0, #0x1
    fa24:	str	x0, [x22]
    fa28:	cbnz	x0, f91c <PyFloat_FromString@plt+0x8e8c>
    fa2c:	mov	x0, x22
    fa30:	bl	65d0 <_Py_Dealloc@plt>
    fa34:	ldr	x23, [sp, #48]
    fa38:	b	f8a0 <PyFloat_FromString@plt+0x8e10>
    fa3c:	ldr	x0, [x21]
    fa40:	sub	x0, x0, #0x1
    fa44:	str	x0, [x21]
    fa48:	cbnz	x0, f91c <PyFloat_FromString@plt+0x8e8c>
    fa4c:	mov	x0, x21
    fa50:	mov	x21, #0x0                   	// #0
    fa54:	bl	65d0 <_Py_Dealloc@plt>
    fa58:	ldr	x23, [sp, #48]
    fa5c:	b	f8a0 <PyFloat_FromString@plt+0x8e10>
    fa60:	mov	x0, x19
    fa64:	mov	x21, #0x0                   	// #0
    fa68:	bl	65d0 <_Py_Dealloc@plt>
    fa6c:	ldr	x23, [sp, #48]
    fa70:	b	f8a0 <PyFloat_FromString@plt+0x8e10>
    fa74:	mov	x0, x19
    fa78:	bl	65d0 <_Py_Dealloc@plt>
    fa7c:	b	fa1c <PyFloat_FromString@plt+0x8f8c>
    fa80:	stp	x29, x30, [sp, #-96]!
    fa84:	mov	x29, sp
    fa88:	add	x3, sp, #0x58
    fa8c:	add	x2, sp, #0x50
    fa90:	stp	x19, x20, [sp, #16]
    fa94:	mov	x20, x0
    fa98:	mov	x0, x1
    fa9c:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
    faa0:	add	x1, x1, #0x2a8
    faa4:	stp	x21, x22, [sp, #32]
    faa8:	str	wzr, [sp, #76]
    faac:	bl	68e0 <PyArg_ParseTuple@plt>
    fab0:	cbz	w0, fb90 <PyFloat_FromString@plt+0x9100>
    fab4:	ldr	x19, [sp, #80]
    fab8:	ldr	x0, [x19, #8]
    fabc:	str	x23, [sp, #48]
    fac0:	adrp	x23, 5d000 <PyInit__decimal@@Base+0x42a80>
    fac4:	add	x21, x23, #0x320
    fac8:	add	x21, x21, #0x1a0
    facc:	cmp	x0, x21
    fad0:	b.eq	fb24 <PyFloat_FromString@plt+0x9094>  // b.none
    fad4:	mov	x1, x21
    fad8:	bl	69c0 <PyType_IsSubtype@plt>
    fadc:	cbnz	w0, fb24 <PyFloat_FromString@plt+0x9094>
    fae0:	ldr	x2, [x19, #8]
    fae4:	ldr	x0, [x2, #168]
    fae8:	tbnz	w0, #24, fc5c <PyFloat_FromString@plt+0x91cc>
    faec:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
    faf0:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
    faf4:	ldr	x2, [x2, #24]
    faf8:	add	x1, x1, #0x8
    fafc:	ldr	x0, [x0, #3936]
    fb00:	mov	x21, #0x0                   	// #0
    fb04:	ldr	x0, [x0]
    fb08:	bl	6a10 <PyErr_Format@plt>
    fb0c:	ldr	x23, [sp, #48]
    fb10:	mov	x0, x21
    fb14:	ldp	x19, x20, [sp, #16]
    fb18:	ldp	x21, x22, [sp, #32]
    fb1c:	ldp	x29, x30, [sp], #96
    fb20:	ret
    fb24:	ldr	x0, [x19]
    fb28:	add	x0, x0, #0x1
    fb2c:	str	x0, [x19]
    fb30:	ldr	x22, [sp, #88]
    fb34:	add	x21, x23, #0x320
    fb38:	add	x21, x21, #0x1a0
    fb3c:	ldr	x0, [x22, #8]
    fb40:	cmp	x0, x21
    fb44:	b.eq	fba8 <PyFloat_FromString@plt+0x9118>  // b.none
    fb48:	mov	x1, x21
    fb4c:	bl	69c0 <PyType_IsSubtype@plt>
    fb50:	cbnz	w0, fba8 <PyFloat_FromString@plt+0x9118>
    fb54:	ldr	x2, [x22, #8]
    fb58:	ldr	x0, [x2, #168]
    fb5c:	tbnz	w0, #24, fc40 <PyFloat_FromString@plt+0x91b0>
    fb60:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
    fb64:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
    fb68:	ldr	x2, [x2, #24]
    fb6c:	add	x1, x1, #0x8
    fb70:	ldr	x0, [x0, #3936]
    fb74:	ldr	x0, [x0]
    fb78:	bl	6a10 <PyErr_Format@plt>
    fb7c:	ldr	x0, [x19]
    fb80:	sub	x0, x0, #0x1
    fb84:	str	x0, [x19]
    fb88:	cbz	x0, fcd0 <PyFloat_FromString@plt+0x9240>
    fb8c:	ldr	x23, [sp, #48]
    fb90:	mov	x21, #0x0                   	// #0
    fb94:	mov	x0, x21
    fb98:	ldp	x19, x20, [sp, #16]
    fb9c:	ldp	x21, x22, [sp, #32]
    fba0:	ldp	x29, x30, [sp], #96
    fba4:	ret
    fba8:	ldr	x0, [x22]
    fbac:	add	x0, x0, #0x1
    fbb0:	str	x0, [x22]
    fbb4:	add	x0, x23, #0x320
    fbb8:	add	x0, x0, #0x1a0
    fbbc:	bl	6c60 <PyFloat_FromString@plt+0x1d0>
    fbc0:	mov	x21, x0
    fbc4:	cbz	x0, fc7c <PyFloat_FromString@plt+0x91ec>
    fbc8:	add	x0, x0, #0x18
    fbcc:	add	x4, sp, #0x4c
    fbd0:	add	x3, x20, #0x10
    fbd4:	add	x2, x22, #0x18
    fbd8:	add	x1, x19, #0x18
    fbdc:	bl	336b0 <PyInit__decimal@@Base+0x19130>
    fbe0:	ldr	x0, [x19]
    fbe4:	sub	x0, x0, #0x1
    fbe8:	str	x0, [x19]
    fbec:	cbz	x0, fc34 <PyFloat_FromString@plt+0x91a4>
    fbf0:	ldr	x0, [x22]
    fbf4:	sub	x0, x0, #0x1
    fbf8:	str	x0, [x22]
    fbfc:	cbz	x0, fc28 <PyFloat_FromString@plt+0x9198>
    fc00:	ldr	w1, [sp, #76]
    fc04:	mov	x0, x20
    fc08:	bl	7f90 <PyFloat_FromString@plt+0x1500>
    fc0c:	cbnz	w0, fcac <PyFloat_FromString@plt+0x921c>
    fc10:	mov	x0, x21
    fc14:	ldp	x19, x20, [sp, #16]
    fc18:	ldp	x21, x22, [sp, #32]
    fc1c:	ldr	x23, [sp, #48]
    fc20:	ldp	x29, x30, [sp], #96
    fc24:	ret
    fc28:	mov	x0, x22
    fc2c:	bl	65d0 <_Py_Dealloc@plt>
    fc30:	b	fc00 <PyFloat_FromString@plt+0x9170>
    fc34:	mov	x0, x19
    fc38:	bl	65d0 <_Py_Dealloc@plt>
    fc3c:	b	fbf0 <PyFloat_FromString@plt+0x9160>
    fc40:	mov	x1, x22
    fc44:	mov	x0, x21
    fc48:	mov	x2, x20
    fc4c:	bl	82f8 <PyFloat_FromString@plt+0x1868>
    fc50:	mov	x22, x0
    fc54:	cbnz	x0, fbb4 <PyFloat_FromString@plt+0x9124>
    fc58:	b	fb7c <PyFloat_FromString@plt+0x90ec>
    fc5c:	mov	x1, x19
    fc60:	mov	x0, x21
    fc64:	mov	x2, x20
    fc68:	bl	82f8 <PyFloat_FromString@plt+0x1868>
    fc6c:	mov	x19, x0
    fc70:	cbnz	x0, fb30 <PyFloat_FromString@plt+0x90a0>
    fc74:	ldr	x23, [sp, #48]
    fc78:	b	fb90 <PyFloat_FromString@plt+0x9100>
    fc7c:	ldr	x0, [x19]
    fc80:	sub	x0, x0, #0x1
    fc84:	str	x0, [x19]
    fc88:	cbz	x0, fce4 <PyFloat_FromString@plt+0x9254>
    fc8c:	ldr	x0, [x22]
    fc90:	sub	x0, x0, #0x1
    fc94:	str	x0, [x22]
    fc98:	cbnz	x0, fb8c <PyFloat_FromString@plt+0x90fc>
    fc9c:	mov	x0, x22
    fca0:	bl	65d0 <_Py_Dealloc@plt>
    fca4:	ldr	x23, [sp, #48]
    fca8:	b	fb10 <PyFloat_FromString@plt+0x9080>
    fcac:	ldr	x0, [x21]
    fcb0:	sub	x0, x0, #0x1
    fcb4:	str	x0, [x21]
    fcb8:	cbnz	x0, fb8c <PyFloat_FromString@plt+0x90fc>
    fcbc:	mov	x0, x21
    fcc0:	mov	x21, #0x0                   	// #0
    fcc4:	bl	65d0 <_Py_Dealloc@plt>
    fcc8:	ldr	x23, [sp, #48]
    fccc:	b	fb10 <PyFloat_FromString@plt+0x9080>
    fcd0:	mov	x0, x19
    fcd4:	mov	x21, #0x0                   	// #0
    fcd8:	bl	65d0 <_Py_Dealloc@plt>
    fcdc:	ldr	x23, [sp, #48]
    fce0:	b	fb10 <PyFloat_FromString@plt+0x9080>
    fce4:	mov	x0, x19
    fce8:	bl	65d0 <_Py_Dealloc@plt>
    fcec:	b	fc8c <PyFloat_FromString@plt+0x91fc>
    fcf0:	stp	x29, x30, [sp, #-96]!
    fcf4:	mov	x29, sp
    fcf8:	add	x3, sp, #0x58
    fcfc:	add	x2, sp, #0x50
    fd00:	stp	x19, x20, [sp, #16]
    fd04:	mov	x20, x0
    fd08:	mov	x0, x1
    fd0c:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
    fd10:	add	x1, x1, #0x2a8
    fd14:	stp	x21, x22, [sp, #32]
    fd18:	str	wzr, [sp, #76]
    fd1c:	bl	68e0 <PyArg_ParseTuple@plt>
    fd20:	cbz	w0, fe00 <PyFloat_FromString@plt+0x9370>
    fd24:	ldr	x19, [sp, #80]
    fd28:	ldr	x0, [x19, #8]
    fd2c:	str	x23, [sp, #48]
    fd30:	adrp	x23, 5d000 <PyInit__decimal@@Base+0x42a80>
    fd34:	add	x21, x23, #0x320
    fd38:	add	x21, x21, #0x1a0
    fd3c:	cmp	x0, x21
    fd40:	b.eq	fd94 <PyFloat_FromString@plt+0x9304>  // b.none
    fd44:	mov	x1, x21
    fd48:	bl	69c0 <PyType_IsSubtype@plt>
    fd4c:	cbnz	w0, fd94 <PyFloat_FromString@plt+0x9304>
    fd50:	ldr	x2, [x19, #8]
    fd54:	ldr	x0, [x2, #168]
    fd58:	tbnz	w0, #24, fecc <PyFloat_FromString@plt+0x943c>
    fd5c:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
    fd60:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
    fd64:	ldr	x2, [x2, #24]
    fd68:	add	x1, x1, #0x8
    fd6c:	ldr	x0, [x0, #3936]
    fd70:	mov	x21, #0x0                   	// #0
    fd74:	ldr	x0, [x0]
    fd78:	bl	6a10 <PyErr_Format@plt>
    fd7c:	ldr	x23, [sp, #48]
    fd80:	mov	x0, x21
    fd84:	ldp	x19, x20, [sp, #16]
    fd88:	ldp	x21, x22, [sp, #32]
    fd8c:	ldp	x29, x30, [sp], #96
    fd90:	ret
    fd94:	ldr	x0, [x19]
    fd98:	add	x0, x0, #0x1
    fd9c:	str	x0, [x19]
    fda0:	ldr	x22, [sp, #88]
    fda4:	add	x21, x23, #0x320
    fda8:	add	x21, x21, #0x1a0
    fdac:	ldr	x0, [x22, #8]
    fdb0:	cmp	x0, x21
    fdb4:	b.eq	fe18 <PyFloat_FromString@plt+0x9388>  // b.none
    fdb8:	mov	x1, x21
    fdbc:	bl	69c0 <PyType_IsSubtype@plt>
    fdc0:	cbnz	w0, fe18 <PyFloat_FromString@plt+0x9388>
    fdc4:	ldr	x2, [x22, #8]
    fdc8:	ldr	x0, [x2, #168]
    fdcc:	tbnz	w0, #24, feb0 <PyFloat_FromString@plt+0x9420>
    fdd0:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
    fdd4:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
    fdd8:	ldr	x2, [x2, #24]
    fddc:	add	x1, x1, #0x8
    fde0:	ldr	x0, [x0, #3936]
    fde4:	ldr	x0, [x0]
    fde8:	bl	6a10 <PyErr_Format@plt>
    fdec:	ldr	x0, [x19]
    fdf0:	sub	x0, x0, #0x1
    fdf4:	str	x0, [x19]
    fdf8:	cbz	x0, ff40 <PyFloat_FromString@plt+0x94b0>
    fdfc:	ldr	x23, [sp, #48]
    fe00:	mov	x21, #0x0                   	// #0
    fe04:	mov	x0, x21
    fe08:	ldp	x19, x20, [sp, #16]
    fe0c:	ldp	x21, x22, [sp, #32]
    fe10:	ldp	x29, x30, [sp], #96
    fe14:	ret
    fe18:	ldr	x0, [x22]
    fe1c:	add	x0, x0, #0x1
    fe20:	str	x0, [x22]
    fe24:	add	x0, x23, #0x320
    fe28:	add	x0, x0, #0x1a0
    fe2c:	bl	6c60 <PyFloat_FromString@plt+0x1d0>
    fe30:	mov	x21, x0
    fe34:	cbz	x0, feec <PyFloat_FromString@plt+0x945c>
    fe38:	add	x0, x0, #0x18
    fe3c:	add	x4, sp, #0x4c
    fe40:	add	x3, x20, #0x10
    fe44:	add	x2, x22, #0x18
    fe48:	add	x1, x19, #0x18
    fe4c:	bl	33320 <PyInit__decimal@@Base+0x18da0>
    fe50:	ldr	x0, [x19]
    fe54:	sub	x0, x0, #0x1
    fe58:	str	x0, [x19]
    fe5c:	cbz	x0, fea4 <PyFloat_FromString@plt+0x9414>
    fe60:	ldr	x0, [x22]
    fe64:	sub	x0, x0, #0x1
    fe68:	str	x0, [x22]
    fe6c:	cbz	x0, fe98 <PyFloat_FromString@plt+0x9408>
    fe70:	ldr	w1, [sp, #76]
    fe74:	mov	x0, x20
    fe78:	bl	7f90 <PyFloat_FromString@plt+0x1500>
    fe7c:	cbnz	w0, ff1c <PyFloat_FromString@plt+0x948c>
    fe80:	mov	x0, x21
    fe84:	ldp	x19, x20, [sp, #16]
    fe88:	ldp	x21, x22, [sp, #32]
    fe8c:	ldr	x23, [sp, #48]
    fe90:	ldp	x29, x30, [sp], #96
    fe94:	ret
    fe98:	mov	x0, x22
    fe9c:	bl	65d0 <_Py_Dealloc@plt>
    fea0:	b	fe70 <PyFloat_FromString@plt+0x93e0>
    fea4:	mov	x0, x19
    fea8:	bl	65d0 <_Py_Dealloc@plt>
    feac:	b	fe60 <PyFloat_FromString@plt+0x93d0>
    feb0:	mov	x1, x22
    feb4:	mov	x0, x21
    feb8:	mov	x2, x20
    febc:	bl	82f8 <PyFloat_FromString@plt+0x1868>
    fec0:	mov	x22, x0
    fec4:	cbnz	x0, fe24 <PyFloat_FromString@plt+0x9394>
    fec8:	b	fdec <PyFloat_FromString@plt+0x935c>
    fecc:	mov	x1, x19
    fed0:	mov	x0, x21
    fed4:	mov	x2, x20
    fed8:	bl	82f8 <PyFloat_FromString@plt+0x1868>
    fedc:	mov	x19, x0
    fee0:	cbnz	x0, fda0 <PyFloat_FromString@plt+0x9310>
    fee4:	ldr	x23, [sp, #48]
    fee8:	b	fe00 <PyFloat_FromString@plt+0x9370>
    feec:	ldr	x0, [x19]
    fef0:	sub	x0, x0, #0x1
    fef4:	str	x0, [x19]
    fef8:	cbz	x0, ff54 <PyFloat_FromString@plt+0x94c4>
    fefc:	ldr	x0, [x22]
    ff00:	sub	x0, x0, #0x1
    ff04:	str	x0, [x22]
    ff08:	cbnz	x0, fdfc <PyFloat_FromString@plt+0x936c>
    ff0c:	mov	x0, x22
    ff10:	bl	65d0 <_Py_Dealloc@plt>
    ff14:	ldr	x23, [sp, #48]
    ff18:	b	fd80 <PyFloat_FromString@plt+0x92f0>
    ff1c:	ldr	x0, [x21]
    ff20:	sub	x0, x0, #0x1
    ff24:	str	x0, [x21]
    ff28:	cbnz	x0, fdfc <PyFloat_FromString@plt+0x936c>
    ff2c:	mov	x0, x21
    ff30:	mov	x21, #0x0                   	// #0
    ff34:	bl	65d0 <_Py_Dealloc@plt>
    ff38:	ldr	x23, [sp, #48]
    ff3c:	b	fd80 <PyFloat_FromString@plt+0x92f0>
    ff40:	mov	x0, x19
    ff44:	mov	x21, #0x0                   	// #0
    ff48:	bl	65d0 <_Py_Dealloc@plt>
    ff4c:	ldr	x23, [sp, #48]
    ff50:	b	fd80 <PyFloat_FromString@plt+0x92f0>
    ff54:	mov	x0, x19
    ff58:	bl	65d0 <_Py_Dealloc@plt>
    ff5c:	b	fefc <PyFloat_FromString@plt+0x946c>
    ff60:	stp	x29, x30, [sp, #-96]!
    ff64:	mov	x29, sp
    ff68:	add	x3, sp, #0x58
    ff6c:	add	x2, sp, #0x50
    ff70:	stp	x19, x20, [sp, #16]
    ff74:	mov	x20, x0
    ff78:	mov	x0, x1
    ff7c:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
    ff80:	add	x1, x1, #0x2a8
    ff84:	stp	x21, x22, [sp, #32]
    ff88:	str	wzr, [sp, #76]
    ff8c:	bl	68e0 <PyArg_ParseTuple@plt>
    ff90:	cbz	w0, 10070 <PyFloat_FromString@plt+0x95e0>
    ff94:	ldr	x19, [sp, #80]
    ff98:	ldr	x0, [x19, #8]
    ff9c:	str	x23, [sp, #48]
    ffa0:	adrp	x23, 5d000 <PyInit__decimal@@Base+0x42a80>
    ffa4:	add	x21, x23, #0x320
    ffa8:	add	x21, x21, #0x1a0
    ffac:	cmp	x0, x21
    ffb0:	b.eq	10004 <PyFloat_FromString@plt+0x9574>  // b.none
    ffb4:	mov	x1, x21
    ffb8:	bl	69c0 <PyType_IsSubtype@plt>
    ffbc:	cbnz	w0, 10004 <PyFloat_FromString@plt+0x9574>
    ffc0:	ldr	x2, [x19, #8]
    ffc4:	ldr	x0, [x2, #168]
    ffc8:	tbnz	w0, #24, 1013c <PyFloat_FromString@plt+0x96ac>
    ffcc:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
    ffd0:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
    ffd4:	ldr	x2, [x2, #24]
    ffd8:	add	x1, x1, #0x8
    ffdc:	ldr	x0, [x0, #3936]
    ffe0:	mov	x21, #0x0                   	// #0
    ffe4:	ldr	x0, [x0]
    ffe8:	bl	6a10 <PyErr_Format@plt>
    ffec:	ldr	x23, [sp, #48]
    fff0:	mov	x0, x21
    fff4:	ldp	x19, x20, [sp, #16]
    fff8:	ldp	x21, x22, [sp, #32]
    fffc:	ldp	x29, x30, [sp], #96
   10000:	ret
   10004:	ldr	x0, [x19]
   10008:	add	x0, x0, #0x1
   1000c:	str	x0, [x19]
   10010:	ldr	x22, [sp, #88]
   10014:	add	x21, x23, #0x320
   10018:	add	x21, x21, #0x1a0
   1001c:	ldr	x0, [x22, #8]
   10020:	cmp	x0, x21
   10024:	b.eq	10088 <PyFloat_FromString@plt+0x95f8>  // b.none
   10028:	mov	x1, x21
   1002c:	bl	69c0 <PyType_IsSubtype@plt>
   10030:	cbnz	w0, 10088 <PyFloat_FromString@plt+0x95f8>
   10034:	ldr	x2, [x22, #8]
   10038:	ldr	x0, [x2, #168]
   1003c:	tbnz	w0, #24, 10120 <PyFloat_FromString@plt+0x9690>
   10040:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
   10044:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
   10048:	ldr	x2, [x2, #24]
   1004c:	add	x1, x1, #0x8
   10050:	ldr	x0, [x0, #3936]
   10054:	ldr	x0, [x0]
   10058:	bl	6a10 <PyErr_Format@plt>
   1005c:	ldr	x0, [x19]
   10060:	sub	x0, x0, #0x1
   10064:	str	x0, [x19]
   10068:	cbz	x0, 101b0 <PyFloat_FromString@plt+0x9720>
   1006c:	ldr	x23, [sp, #48]
   10070:	mov	x21, #0x0                   	// #0
   10074:	mov	x0, x21
   10078:	ldp	x19, x20, [sp, #16]
   1007c:	ldp	x21, x22, [sp, #32]
   10080:	ldp	x29, x30, [sp], #96
   10084:	ret
   10088:	ldr	x0, [x22]
   1008c:	add	x0, x0, #0x1
   10090:	str	x0, [x22]
   10094:	add	x0, x23, #0x320
   10098:	add	x0, x0, #0x1a0
   1009c:	bl	6c60 <PyFloat_FromString@plt+0x1d0>
   100a0:	mov	x21, x0
   100a4:	cbz	x0, 1015c <PyFloat_FromString@plt+0x96cc>
   100a8:	add	x0, x0, #0x18
   100ac:	add	x4, sp, #0x4c
   100b0:	add	x3, x20, #0x10
   100b4:	add	x2, x22, #0x18
   100b8:	add	x1, x19, #0x18
   100bc:	bl	2df78 <PyInit__decimal@@Base+0x139f8>
   100c0:	ldr	x0, [x19]
   100c4:	sub	x0, x0, #0x1
   100c8:	str	x0, [x19]
   100cc:	cbz	x0, 10114 <PyFloat_FromString@plt+0x9684>
   100d0:	ldr	x0, [x22]
   100d4:	sub	x0, x0, #0x1
   100d8:	str	x0, [x22]
   100dc:	cbz	x0, 10108 <PyFloat_FromString@plt+0x9678>
   100e0:	ldr	w1, [sp, #76]
   100e4:	mov	x0, x20
   100e8:	bl	7f90 <PyFloat_FromString@plt+0x1500>
   100ec:	cbnz	w0, 1018c <PyFloat_FromString@plt+0x96fc>
   100f0:	mov	x0, x21
   100f4:	ldp	x19, x20, [sp, #16]
   100f8:	ldp	x21, x22, [sp, #32]
   100fc:	ldr	x23, [sp, #48]
   10100:	ldp	x29, x30, [sp], #96
   10104:	ret
   10108:	mov	x0, x22
   1010c:	bl	65d0 <_Py_Dealloc@plt>
   10110:	b	100e0 <PyFloat_FromString@plt+0x9650>
   10114:	mov	x0, x19
   10118:	bl	65d0 <_Py_Dealloc@plt>
   1011c:	b	100d0 <PyFloat_FromString@plt+0x9640>
   10120:	mov	x1, x22
   10124:	mov	x0, x21
   10128:	mov	x2, x20
   1012c:	bl	82f8 <PyFloat_FromString@plt+0x1868>
   10130:	mov	x22, x0
   10134:	cbnz	x0, 10094 <PyFloat_FromString@plt+0x9604>
   10138:	b	1005c <PyFloat_FromString@plt+0x95cc>
   1013c:	mov	x1, x19
   10140:	mov	x0, x21
   10144:	mov	x2, x20
   10148:	bl	82f8 <PyFloat_FromString@plt+0x1868>
   1014c:	mov	x19, x0
   10150:	cbnz	x0, 10010 <PyFloat_FromString@plt+0x9580>
   10154:	ldr	x23, [sp, #48]
   10158:	b	10070 <PyFloat_FromString@plt+0x95e0>
   1015c:	ldr	x0, [x19]
   10160:	sub	x0, x0, #0x1
   10164:	str	x0, [x19]
   10168:	cbz	x0, 101c4 <PyFloat_FromString@plt+0x9734>
   1016c:	ldr	x0, [x22]
   10170:	sub	x0, x0, #0x1
   10174:	str	x0, [x22]
   10178:	cbnz	x0, 1006c <PyFloat_FromString@plt+0x95dc>
   1017c:	mov	x0, x22
   10180:	bl	65d0 <_Py_Dealloc@plt>
   10184:	ldr	x23, [sp, #48]
   10188:	b	fff0 <PyFloat_FromString@plt+0x9560>
   1018c:	ldr	x0, [x21]
   10190:	sub	x0, x0, #0x1
   10194:	str	x0, [x21]
   10198:	cbnz	x0, 1006c <PyFloat_FromString@plt+0x95dc>
   1019c:	mov	x0, x21
   101a0:	mov	x21, #0x0                   	// #0
   101a4:	bl	65d0 <_Py_Dealloc@plt>
   101a8:	ldr	x23, [sp, #48]
   101ac:	b	fff0 <PyFloat_FromString@plt+0x9560>
   101b0:	mov	x0, x19
   101b4:	mov	x21, #0x0                   	// #0
   101b8:	bl	65d0 <_Py_Dealloc@plt>
   101bc:	ldr	x23, [sp, #48]
   101c0:	b	fff0 <PyFloat_FromString@plt+0x9560>
   101c4:	mov	x0, x19
   101c8:	bl	65d0 <_Py_Dealloc@plt>
   101cc:	b	1016c <PyFloat_FromString@plt+0x96dc>
   101d0:	stp	x29, x30, [sp, #-96]!
   101d4:	mov	x29, sp
   101d8:	add	x3, sp, #0x58
   101dc:	add	x2, sp, #0x50
   101e0:	stp	x19, x20, [sp, #16]
   101e4:	mov	x20, x0
   101e8:	mov	x0, x1
   101ec:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
   101f0:	add	x1, x1, #0x2a8
   101f4:	stp	x21, x22, [sp, #32]
   101f8:	str	wzr, [sp, #76]
   101fc:	bl	68e0 <PyArg_ParseTuple@plt>
   10200:	cbz	w0, 102e0 <PyFloat_FromString@plt+0x9850>
   10204:	ldr	x19, [sp, #80]
   10208:	ldr	x0, [x19, #8]
   1020c:	str	x23, [sp, #48]
   10210:	adrp	x23, 5d000 <PyInit__decimal@@Base+0x42a80>
   10214:	add	x21, x23, #0x320
   10218:	add	x21, x21, #0x1a0
   1021c:	cmp	x0, x21
   10220:	b.eq	10274 <PyFloat_FromString@plt+0x97e4>  // b.none
   10224:	mov	x1, x21
   10228:	bl	69c0 <PyType_IsSubtype@plt>
   1022c:	cbnz	w0, 10274 <PyFloat_FromString@plt+0x97e4>
   10230:	ldr	x2, [x19, #8]
   10234:	ldr	x0, [x2, #168]
   10238:	tbnz	w0, #24, 103ac <PyFloat_FromString@plt+0x991c>
   1023c:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
   10240:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
   10244:	ldr	x2, [x2, #24]
   10248:	add	x1, x1, #0x8
   1024c:	ldr	x0, [x0, #3936]
   10250:	mov	x21, #0x0                   	// #0
   10254:	ldr	x0, [x0]
   10258:	bl	6a10 <PyErr_Format@plt>
   1025c:	ldr	x23, [sp, #48]
   10260:	mov	x0, x21
   10264:	ldp	x19, x20, [sp, #16]
   10268:	ldp	x21, x22, [sp, #32]
   1026c:	ldp	x29, x30, [sp], #96
   10270:	ret
   10274:	ldr	x0, [x19]
   10278:	add	x0, x0, #0x1
   1027c:	str	x0, [x19]
   10280:	ldr	x22, [sp, #88]
   10284:	add	x21, x23, #0x320
   10288:	add	x21, x21, #0x1a0
   1028c:	ldr	x0, [x22, #8]
   10290:	cmp	x0, x21
   10294:	b.eq	102f8 <PyFloat_FromString@plt+0x9868>  // b.none
   10298:	mov	x1, x21
   1029c:	bl	69c0 <PyType_IsSubtype@plt>
   102a0:	cbnz	w0, 102f8 <PyFloat_FromString@plt+0x9868>
   102a4:	ldr	x2, [x22, #8]
   102a8:	ldr	x0, [x2, #168]
   102ac:	tbnz	w0, #24, 10390 <PyFloat_FromString@plt+0x9900>
   102b0:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
   102b4:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
   102b8:	ldr	x2, [x2, #24]
   102bc:	add	x1, x1, #0x8
   102c0:	ldr	x0, [x0, #3936]
   102c4:	ldr	x0, [x0]
   102c8:	bl	6a10 <PyErr_Format@plt>
   102cc:	ldr	x0, [x19]
   102d0:	sub	x0, x0, #0x1
   102d4:	str	x0, [x19]
   102d8:	cbz	x0, 10420 <PyFloat_FromString@plt+0x9990>
   102dc:	ldr	x23, [sp, #48]
   102e0:	mov	x21, #0x0                   	// #0
   102e4:	mov	x0, x21
   102e8:	ldp	x19, x20, [sp, #16]
   102ec:	ldp	x21, x22, [sp, #32]
   102f0:	ldp	x29, x30, [sp], #96
   102f4:	ret
   102f8:	ldr	x0, [x22]
   102fc:	add	x0, x0, #0x1
   10300:	str	x0, [x22]
   10304:	add	x0, x23, #0x320
   10308:	add	x0, x0, #0x1a0
   1030c:	bl	6c60 <PyFloat_FromString@plt+0x1d0>
   10310:	mov	x21, x0
   10314:	cbz	x0, 103cc <PyFloat_FromString@plt+0x993c>
   10318:	add	x0, x0, #0x18
   1031c:	add	x4, sp, #0x4c
   10320:	add	x3, x20, #0x10
   10324:	add	x2, x22, #0x18
   10328:	add	x1, x19, #0x18
   1032c:	bl	2e488 <PyInit__decimal@@Base+0x13f08>
   10330:	ldr	x0, [x19]
   10334:	sub	x0, x0, #0x1
   10338:	str	x0, [x19]
   1033c:	cbz	x0, 10384 <PyFloat_FromString@plt+0x98f4>
   10340:	ldr	x0, [x22]
   10344:	sub	x0, x0, #0x1
   10348:	str	x0, [x22]
   1034c:	cbz	x0, 10378 <PyFloat_FromString@plt+0x98e8>
   10350:	ldr	w1, [sp, #76]
   10354:	mov	x0, x20
   10358:	bl	7f90 <PyFloat_FromString@plt+0x1500>
   1035c:	cbnz	w0, 103fc <PyFloat_FromString@plt+0x996c>
   10360:	mov	x0, x21
   10364:	ldp	x19, x20, [sp, #16]
   10368:	ldp	x21, x22, [sp, #32]
   1036c:	ldr	x23, [sp, #48]
   10370:	ldp	x29, x30, [sp], #96
   10374:	ret
   10378:	mov	x0, x22
   1037c:	bl	65d0 <_Py_Dealloc@plt>
   10380:	b	10350 <PyFloat_FromString@plt+0x98c0>
   10384:	mov	x0, x19
   10388:	bl	65d0 <_Py_Dealloc@plt>
   1038c:	b	10340 <PyFloat_FromString@plt+0x98b0>
   10390:	mov	x1, x22
   10394:	mov	x0, x21
   10398:	mov	x2, x20
   1039c:	bl	82f8 <PyFloat_FromString@plt+0x1868>
   103a0:	mov	x22, x0
   103a4:	cbnz	x0, 10304 <PyFloat_FromString@plt+0x9874>
   103a8:	b	102cc <PyFloat_FromString@plt+0x983c>
   103ac:	mov	x1, x19
   103b0:	mov	x0, x21
   103b4:	mov	x2, x20
   103b8:	bl	82f8 <PyFloat_FromString@plt+0x1868>
   103bc:	mov	x19, x0
   103c0:	cbnz	x0, 10280 <PyFloat_FromString@plt+0x97f0>
   103c4:	ldr	x23, [sp, #48]
   103c8:	b	102e0 <PyFloat_FromString@plt+0x9850>
   103cc:	ldr	x0, [x19]
   103d0:	sub	x0, x0, #0x1
   103d4:	str	x0, [x19]
   103d8:	cbz	x0, 10434 <PyFloat_FromString@plt+0x99a4>
   103dc:	ldr	x0, [x22]
   103e0:	sub	x0, x0, #0x1
   103e4:	str	x0, [x22]
   103e8:	cbnz	x0, 102dc <PyFloat_FromString@plt+0x984c>
   103ec:	mov	x0, x22
   103f0:	bl	65d0 <_Py_Dealloc@plt>
   103f4:	ldr	x23, [sp, #48]
   103f8:	b	10260 <PyFloat_FromString@plt+0x97d0>
   103fc:	ldr	x0, [x21]
   10400:	sub	x0, x0, #0x1
   10404:	str	x0, [x21]
   10408:	cbnz	x0, 102dc <PyFloat_FromString@plt+0x984c>
   1040c:	mov	x0, x21
   10410:	mov	x21, #0x0                   	// #0
   10414:	bl	65d0 <_Py_Dealloc@plt>
   10418:	ldr	x23, [sp, #48]
   1041c:	b	10260 <PyFloat_FromString@plt+0x97d0>
   10420:	mov	x0, x19
   10424:	mov	x21, #0x0                   	// #0
   10428:	bl	65d0 <_Py_Dealloc@plt>
   1042c:	ldr	x23, [sp, #48]
   10430:	b	10260 <PyFloat_FromString@plt+0x97d0>
   10434:	mov	x0, x19
   10438:	bl	65d0 <_Py_Dealloc@plt>
   1043c:	b	103dc <PyFloat_FromString@plt+0x994c>
   10440:	stp	x29, x30, [sp, #-96]!
   10444:	mov	x29, sp
   10448:	add	x3, sp, #0x58
   1044c:	add	x2, sp, #0x50
   10450:	stp	x19, x20, [sp, #16]
   10454:	mov	x20, x0
   10458:	mov	x0, x1
   1045c:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
   10460:	add	x1, x1, #0x2a8
   10464:	stp	x21, x22, [sp, #32]
   10468:	str	wzr, [sp, #76]
   1046c:	bl	68e0 <PyArg_ParseTuple@plt>
   10470:	cbz	w0, 10550 <PyFloat_FromString@plt+0x9ac0>
   10474:	ldr	x19, [sp, #80]
   10478:	ldr	x0, [x19, #8]
   1047c:	str	x23, [sp, #48]
   10480:	adrp	x23, 5d000 <PyInit__decimal@@Base+0x42a80>
   10484:	add	x21, x23, #0x320
   10488:	add	x21, x21, #0x1a0
   1048c:	cmp	x0, x21
   10490:	b.eq	104e4 <PyFloat_FromString@plt+0x9a54>  // b.none
   10494:	mov	x1, x21
   10498:	bl	69c0 <PyType_IsSubtype@plt>
   1049c:	cbnz	w0, 104e4 <PyFloat_FromString@plt+0x9a54>
   104a0:	ldr	x2, [x19, #8]
   104a4:	ldr	x0, [x2, #168]
   104a8:	tbnz	w0, #24, 1061c <PyFloat_FromString@plt+0x9b8c>
   104ac:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
   104b0:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
   104b4:	ldr	x2, [x2, #24]
   104b8:	add	x1, x1, #0x8
   104bc:	ldr	x0, [x0, #3936]
   104c0:	mov	x21, #0x0                   	// #0
   104c4:	ldr	x0, [x0]
   104c8:	bl	6a10 <PyErr_Format@plt>
   104cc:	ldr	x23, [sp, #48]
   104d0:	mov	x0, x21
   104d4:	ldp	x19, x20, [sp, #16]
   104d8:	ldp	x21, x22, [sp, #32]
   104dc:	ldp	x29, x30, [sp], #96
   104e0:	ret
   104e4:	ldr	x0, [x19]
   104e8:	add	x0, x0, #0x1
   104ec:	str	x0, [x19]
   104f0:	ldr	x22, [sp, #88]
   104f4:	add	x21, x23, #0x320
   104f8:	add	x21, x21, #0x1a0
   104fc:	ldr	x0, [x22, #8]
   10500:	cmp	x0, x21
   10504:	b.eq	10568 <PyFloat_FromString@plt+0x9ad8>  // b.none
   10508:	mov	x1, x21
   1050c:	bl	69c0 <PyType_IsSubtype@plt>
   10510:	cbnz	w0, 10568 <PyFloat_FromString@plt+0x9ad8>
   10514:	ldr	x2, [x22, #8]
   10518:	ldr	x0, [x2, #168]
   1051c:	tbnz	w0, #24, 10600 <PyFloat_FromString@plt+0x9b70>
   10520:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
   10524:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
   10528:	ldr	x2, [x2, #24]
   1052c:	add	x1, x1, #0x8
   10530:	ldr	x0, [x0, #3936]
   10534:	ldr	x0, [x0]
   10538:	bl	6a10 <PyErr_Format@plt>
   1053c:	ldr	x0, [x19]
   10540:	sub	x0, x0, #0x1
   10544:	str	x0, [x19]
   10548:	cbz	x0, 10690 <PyFloat_FromString@plt+0x9c00>
   1054c:	ldr	x23, [sp, #48]
   10550:	mov	x21, #0x0                   	// #0
   10554:	mov	x0, x21
   10558:	ldp	x19, x20, [sp, #16]
   1055c:	ldp	x21, x22, [sp, #32]
   10560:	ldp	x29, x30, [sp], #96
   10564:	ret
   10568:	ldr	x0, [x22]
   1056c:	add	x0, x0, #0x1
   10570:	str	x0, [x22]
   10574:	add	x0, x23, #0x320
   10578:	add	x0, x0, #0x1a0
   1057c:	bl	6c60 <PyFloat_FromString@plt+0x1d0>
   10580:	mov	x21, x0
   10584:	cbz	x0, 1063c <PyFloat_FromString@plt+0x9bac>
   10588:	add	x0, x0, #0x18
   1058c:	add	x4, sp, #0x4c
   10590:	add	x3, x20, #0x10
   10594:	add	x2, x22, #0x18
   10598:	add	x1, x19, #0x18
   1059c:	bl	33450 <PyInit__decimal@@Base+0x18ed0>
   105a0:	ldr	x0, [x19]
   105a4:	sub	x0, x0, #0x1
   105a8:	str	x0, [x19]
   105ac:	cbz	x0, 105f4 <PyFloat_FromString@plt+0x9b64>
   105b0:	ldr	x0, [x22]
   105b4:	sub	x0, x0, #0x1
   105b8:	str	x0, [x22]
   105bc:	cbz	x0, 105e8 <PyFloat_FromString@plt+0x9b58>
   105c0:	ldr	w1, [sp, #76]
   105c4:	mov	x0, x20
   105c8:	bl	7f90 <PyFloat_FromString@plt+0x1500>
   105cc:	cbnz	w0, 1066c <PyFloat_FromString@plt+0x9bdc>
   105d0:	mov	x0, x21
   105d4:	ldp	x19, x20, [sp, #16]
   105d8:	ldp	x21, x22, [sp, #32]
   105dc:	ldr	x23, [sp, #48]
   105e0:	ldp	x29, x30, [sp], #96
   105e4:	ret
   105e8:	mov	x0, x22
   105ec:	bl	65d0 <_Py_Dealloc@plt>
   105f0:	b	105c0 <PyFloat_FromString@plt+0x9b30>
   105f4:	mov	x0, x19
   105f8:	bl	65d0 <_Py_Dealloc@plt>
   105fc:	b	105b0 <PyFloat_FromString@plt+0x9b20>
   10600:	mov	x1, x22
   10604:	mov	x0, x21
   10608:	mov	x2, x20
   1060c:	bl	82f8 <PyFloat_FromString@plt+0x1868>
   10610:	mov	x22, x0
   10614:	cbnz	x0, 10574 <PyFloat_FromString@plt+0x9ae4>
   10618:	b	1053c <PyFloat_FromString@plt+0x9aac>
   1061c:	mov	x1, x19
   10620:	mov	x0, x21
   10624:	mov	x2, x20
   10628:	bl	82f8 <PyFloat_FromString@plt+0x1868>
   1062c:	mov	x19, x0
   10630:	cbnz	x0, 104f0 <PyFloat_FromString@plt+0x9a60>
   10634:	ldr	x23, [sp, #48]
   10638:	b	10550 <PyFloat_FromString@plt+0x9ac0>
   1063c:	ldr	x0, [x19]
   10640:	sub	x0, x0, #0x1
   10644:	str	x0, [x19]
   10648:	cbz	x0, 106a4 <PyFloat_FromString@plt+0x9c14>
   1064c:	ldr	x0, [x22]
   10650:	sub	x0, x0, #0x1
   10654:	str	x0, [x22]
   10658:	cbnz	x0, 1054c <PyFloat_FromString@plt+0x9abc>
   1065c:	mov	x0, x22
   10660:	bl	65d0 <_Py_Dealloc@plt>
   10664:	ldr	x23, [sp, #48]
   10668:	b	104d0 <PyFloat_FromString@plt+0x9a40>
   1066c:	ldr	x0, [x21]
   10670:	sub	x0, x0, #0x1
   10674:	str	x0, [x21]
   10678:	cbnz	x0, 1054c <PyFloat_FromString@plt+0x9abc>
   1067c:	mov	x0, x21
   10680:	mov	x21, #0x0                   	// #0
   10684:	bl	65d0 <_Py_Dealloc@plt>
   10688:	ldr	x23, [sp, #48]
   1068c:	b	104d0 <PyFloat_FromString@plt+0x9a40>
   10690:	mov	x0, x19
   10694:	mov	x21, #0x0                   	// #0
   10698:	bl	65d0 <_Py_Dealloc@plt>
   1069c:	ldr	x23, [sp, #48]
   106a0:	b	104d0 <PyFloat_FromString@plt+0x9a40>
   106a4:	mov	x0, x19
   106a8:	bl	65d0 <_Py_Dealloc@plt>
   106ac:	b	1064c <PyFloat_FromString@plt+0x9bbc>
   106b0:	stp	x29, x30, [sp, #-96]!
   106b4:	mov	x29, sp
   106b8:	add	x3, sp, #0x58
   106bc:	add	x2, sp, #0x50
   106c0:	stp	x19, x20, [sp, #16]
   106c4:	mov	x20, x0
   106c8:	mov	x0, x1
   106cc:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
   106d0:	add	x1, x1, #0x2a8
   106d4:	stp	x21, x22, [sp, #32]
   106d8:	str	wzr, [sp, #76]
   106dc:	bl	68e0 <PyArg_ParseTuple@plt>
   106e0:	cbz	w0, 107c0 <PyFloat_FromString@plt+0x9d30>
   106e4:	ldr	x19, [sp, #80]
   106e8:	ldr	x0, [x19, #8]
   106ec:	str	x23, [sp, #48]
   106f0:	adrp	x23, 5d000 <PyInit__decimal@@Base+0x42a80>
   106f4:	add	x21, x23, #0x320
   106f8:	add	x21, x21, #0x1a0
   106fc:	cmp	x0, x21
   10700:	b.eq	10754 <PyFloat_FromString@plt+0x9cc4>  // b.none
   10704:	mov	x1, x21
   10708:	bl	69c0 <PyType_IsSubtype@plt>
   1070c:	cbnz	w0, 10754 <PyFloat_FromString@plt+0x9cc4>
   10710:	ldr	x2, [x19, #8]
   10714:	ldr	x0, [x2, #168]
   10718:	tbnz	w0, #24, 1088c <PyFloat_FromString@plt+0x9dfc>
   1071c:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
   10720:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
   10724:	ldr	x2, [x2, #24]
   10728:	add	x1, x1, #0x8
   1072c:	ldr	x0, [x0, #3936]
   10730:	mov	x21, #0x0                   	// #0
   10734:	ldr	x0, [x0]
   10738:	bl	6a10 <PyErr_Format@plt>
   1073c:	ldr	x23, [sp, #48]
   10740:	mov	x0, x21
   10744:	ldp	x19, x20, [sp, #16]
   10748:	ldp	x21, x22, [sp, #32]
   1074c:	ldp	x29, x30, [sp], #96
   10750:	ret
   10754:	ldr	x0, [x19]
   10758:	add	x0, x0, #0x1
   1075c:	str	x0, [x19]
   10760:	ldr	x22, [sp, #88]
   10764:	add	x21, x23, #0x320
   10768:	add	x21, x21, #0x1a0
   1076c:	ldr	x0, [x22, #8]
   10770:	cmp	x0, x21
   10774:	b.eq	107d8 <PyFloat_FromString@plt+0x9d48>  // b.none
   10778:	mov	x1, x21
   1077c:	bl	69c0 <PyType_IsSubtype@plt>
   10780:	cbnz	w0, 107d8 <PyFloat_FromString@plt+0x9d48>
   10784:	ldr	x2, [x22, #8]
   10788:	ldr	x0, [x2, #168]
   1078c:	tbnz	w0, #24, 10870 <PyFloat_FromString@plt+0x9de0>
   10790:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
   10794:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
   10798:	ldr	x2, [x2, #24]
   1079c:	add	x1, x1, #0x8
   107a0:	ldr	x0, [x0, #3936]
   107a4:	ldr	x0, [x0]
   107a8:	bl	6a10 <PyErr_Format@plt>
   107ac:	ldr	x0, [x19]
   107b0:	sub	x0, x0, #0x1
   107b4:	str	x0, [x19]
   107b8:	cbz	x0, 10900 <PyFloat_FromString@plt+0x9e70>
   107bc:	ldr	x23, [sp, #48]
   107c0:	mov	x21, #0x0                   	// #0
   107c4:	mov	x0, x21
   107c8:	ldp	x19, x20, [sp, #16]
   107cc:	ldp	x21, x22, [sp, #32]
   107d0:	ldp	x29, x30, [sp], #96
   107d4:	ret
   107d8:	ldr	x0, [x22]
   107dc:	add	x0, x0, #0x1
   107e0:	str	x0, [x22]
   107e4:	add	x0, x23, #0x320
   107e8:	add	x0, x0, #0x1a0
   107ec:	bl	6c60 <PyFloat_FromString@plt+0x1d0>
   107f0:	mov	x21, x0
   107f4:	cbz	x0, 108ac <PyFloat_FromString@plt+0x9e1c>
   107f8:	add	x0, x0, #0x18
   107fc:	add	x4, sp, #0x4c
   10800:	add	x3, x20, #0x10
   10804:	add	x2, x22, #0x18
   10808:	add	x1, x19, #0x18
   1080c:	bl	2c9b0 <PyInit__decimal@@Base+0x12430>
   10810:	ldr	x0, [x19]
   10814:	sub	x0, x0, #0x1
   10818:	str	x0, [x19]
   1081c:	cbz	x0, 10864 <PyFloat_FromString@plt+0x9dd4>
   10820:	ldr	x0, [x22]
   10824:	sub	x0, x0, #0x1
   10828:	str	x0, [x22]
   1082c:	cbz	x0, 10858 <PyFloat_FromString@plt+0x9dc8>
   10830:	ldr	w1, [sp, #76]
   10834:	mov	x0, x20
   10838:	bl	7f90 <PyFloat_FromString@plt+0x1500>
   1083c:	cbnz	w0, 108dc <PyFloat_FromString@plt+0x9e4c>
   10840:	mov	x0, x21
   10844:	ldp	x19, x20, [sp, #16]
   10848:	ldp	x21, x22, [sp, #32]
   1084c:	ldr	x23, [sp, #48]
   10850:	ldp	x29, x30, [sp], #96
   10854:	ret
   10858:	mov	x0, x22
   1085c:	bl	65d0 <_Py_Dealloc@plt>
   10860:	b	10830 <PyFloat_FromString@plt+0x9da0>
   10864:	mov	x0, x19
   10868:	bl	65d0 <_Py_Dealloc@plt>
   1086c:	b	10820 <PyFloat_FromString@plt+0x9d90>
   10870:	mov	x1, x22
   10874:	mov	x0, x21
   10878:	mov	x2, x20
   1087c:	bl	82f8 <PyFloat_FromString@plt+0x1868>
   10880:	mov	x22, x0
   10884:	cbnz	x0, 107e4 <PyFloat_FromString@plt+0x9d54>
   10888:	b	107ac <PyFloat_FromString@plt+0x9d1c>
   1088c:	mov	x1, x19
   10890:	mov	x0, x21
   10894:	mov	x2, x20
   10898:	bl	82f8 <PyFloat_FromString@plt+0x1868>
   1089c:	mov	x19, x0
   108a0:	cbnz	x0, 10760 <PyFloat_FromString@plt+0x9cd0>
   108a4:	ldr	x23, [sp, #48]
   108a8:	b	107c0 <PyFloat_FromString@plt+0x9d30>
   108ac:	ldr	x0, [x19]
   108b0:	sub	x0, x0, #0x1
   108b4:	str	x0, [x19]
   108b8:	cbz	x0, 10914 <PyFloat_FromString@plt+0x9e84>
   108bc:	ldr	x0, [x22]
   108c0:	sub	x0, x0, #0x1
   108c4:	str	x0, [x22]
   108c8:	cbnz	x0, 107bc <PyFloat_FromString@plt+0x9d2c>
   108cc:	mov	x0, x22
   108d0:	bl	65d0 <_Py_Dealloc@plt>
   108d4:	ldr	x23, [sp, #48]
   108d8:	b	10740 <PyFloat_FromString@plt+0x9cb0>
   108dc:	ldr	x0, [x21]
   108e0:	sub	x0, x0, #0x1
   108e4:	str	x0, [x21]
   108e8:	cbnz	x0, 107bc <PyFloat_FromString@plt+0x9d2c>
   108ec:	mov	x0, x21
   108f0:	mov	x21, #0x0                   	// #0
   108f4:	bl	65d0 <_Py_Dealloc@plt>
   108f8:	ldr	x23, [sp, #48]
   108fc:	b	10740 <PyFloat_FromString@plt+0x9cb0>
   10900:	mov	x0, x19
   10904:	mov	x21, #0x0                   	// #0
   10908:	bl	65d0 <_Py_Dealloc@plt>
   1090c:	ldr	x23, [sp, #48]
   10910:	b	10740 <PyFloat_FromString@plt+0x9cb0>
   10914:	mov	x0, x19
   10918:	bl	65d0 <_Py_Dealloc@plt>
   1091c:	b	108bc <PyFloat_FromString@plt+0x9e2c>
   10920:	stp	x29, x30, [sp, #-96]!
   10924:	mov	x29, sp
   10928:	add	x3, sp, #0x58
   1092c:	add	x2, sp, #0x50
   10930:	stp	x19, x20, [sp, #16]
   10934:	mov	x20, x0
   10938:	mov	x0, x1
   1093c:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
   10940:	add	x1, x1, #0x2a8
   10944:	stp	x21, x22, [sp, #32]
   10948:	str	wzr, [sp, #76]
   1094c:	bl	68e0 <PyArg_ParseTuple@plt>
   10950:	cbz	w0, 10a30 <PyFloat_FromString@plt+0x9fa0>
   10954:	ldr	x19, [sp, #80]
   10958:	ldr	x0, [x19, #8]
   1095c:	str	x23, [sp, #48]
   10960:	adrp	x23, 5d000 <PyInit__decimal@@Base+0x42a80>
   10964:	add	x21, x23, #0x320
   10968:	add	x21, x21, #0x1a0
   1096c:	cmp	x0, x21
   10970:	b.eq	109c4 <PyFloat_FromString@plt+0x9f34>  // b.none
   10974:	mov	x1, x21
   10978:	bl	69c0 <PyType_IsSubtype@plt>
   1097c:	cbnz	w0, 109c4 <PyFloat_FromString@plt+0x9f34>
   10980:	ldr	x2, [x19, #8]
   10984:	ldr	x0, [x2, #168]
   10988:	tbnz	w0, #24, 10afc <PyFloat_FromString@plt+0xa06c>
   1098c:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
   10990:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
   10994:	ldr	x2, [x2, #24]
   10998:	add	x1, x1, #0x8
   1099c:	ldr	x0, [x0, #3936]
   109a0:	mov	x21, #0x0                   	// #0
   109a4:	ldr	x0, [x0]
   109a8:	bl	6a10 <PyErr_Format@plt>
   109ac:	ldr	x23, [sp, #48]
   109b0:	mov	x0, x21
   109b4:	ldp	x19, x20, [sp, #16]
   109b8:	ldp	x21, x22, [sp, #32]
   109bc:	ldp	x29, x30, [sp], #96
   109c0:	ret
   109c4:	ldr	x0, [x19]
   109c8:	add	x0, x0, #0x1
   109cc:	str	x0, [x19]
   109d0:	ldr	x22, [sp, #88]
   109d4:	add	x21, x23, #0x320
   109d8:	add	x21, x21, #0x1a0
   109dc:	ldr	x0, [x22, #8]
   109e0:	cmp	x0, x21
   109e4:	b.eq	10a48 <PyFloat_FromString@plt+0x9fb8>  // b.none
   109e8:	mov	x1, x21
   109ec:	bl	69c0 <PyType_IsSubtype@plt>
   109f0:	cbnz	w0, 10a48 <PyFloat_FromString@plt+0x9fb8>
   109f4:	ldr	x2, [x22, #8]
   109f8:	ldr	x0, [x2, #168]
   109fc:	tbnz	w0, #24, 10ae0 <PyFloat_FromString@plt+0xa050>
   10a00:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
   10a04:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
   10a08:	ldr	x2, [x2, #24]
   10a0c:	add	x1, x1, #0x8
   10a10:	ldr	x0, [x0, #3936]
   10a14:	ldr	x0, [x0]
   10a18:	bl	6a10 <PyErr_Format@plt>
   10a1c:	ldr	x0, [x19]
   10a20:	sub	x0, x0, #0x1
   10a24:	str	x0, [x19]
   10a28:	cbz	x0, 10b70 <PyFloat_FromString@plt+0xa0e0>
   10a2c:	ldr	x23, [sp, #48]
   10a30:	mov	x21, #0x0                   	// #0
   10a34:	mov	x0, x21
   10a38:	ldp	x19, x20, [sp, #16]
   10a3c:	ldp	x21, x22, [sp, #32]
   10a40:	ldp	x29, x30, [sp], #96
   10a44:	ret
   10a48:	ldr	x0, [x22]
   10a4c:	add	x0, x0, #0x1
   10a50:	str	x0, [x22]
   10a54:	add	x0, x23, #0x320
   10a58:	add	x0, x0, #0x1a0
   10a5c:	bl	6c60 <PyFloat_FromString@plt+0x1d0>
   10a60:	mov	x21, x0
   10a64:	cbz	x0, 10b1c <PyFloat_FromString@plt+0xa08c>
   10a68:	add	x0, x0, #0x18
   10a6c:	add	x4, sp, #0x4c
   10a70:	add	x3, x20, #0x10
   10a74:	add	x2, x22, #0x18
   10a78:	add	x1, x19, #0x18
   10a7c:	bl	360e0 <PyInit__decimal@@Base+0x1bb60>
   10a80:	ldr	x0, [x19]
   10a84:	sub	x0, x0, #0x1
   10a88:	str	x0, [x19]
   10a8c:	cbz	x0, 10ad4 <PyFloat_FromString@plt+0xa044>
   10a90:	ldr	x0, [x22]
   10a94:	sub	x0, x0, #0x1
   10a98:	str	x0, [x22]
   10a9c:	cbz	x0, 10ac8 <PyFloat_FromString@plt+0xa038>
   10aa0:	ldr	w1, [sp, #76]
   10aa4:	mov	x0, x20
   10aa8:	bl	7f90 <PyFloat_FromString@plt+0x1500>
   10aac:	cbnz	w0, 10b4c <PyFloat_FromString@plt+0xa0bc>
   10ab0:	mov	x0, x21
   10ab4:	ldp	x19, x20, [sp, #16]
   10ab8:	ldp	x21, x22, [sp, #32]
   10abc:	ldr	x23, [sp, #48]
   10ac0:	ldp	x29, x30, [sp], #96
   10ac4:	ret
   10ac8:	mov	x0, x22
   10acc:	bl	65d0 <_Py_Dealloc@plt>
   10ad0:	b	10aa0 <PyFloat_FromString@plt+0xa010>
   10ad4:	mov	x0, x19
   10ad8:	bl	65d0 <_Py_Dealloc@plt>
   10adc:	b	10a90 <PyFloat_FromString@plt+0xa000>
   10ae0:	mov	x1, x22
   10ae4:	mov	x0, x21
   10ae8:	mov	x2, x20
   10aec:	bl	82f8 <PyFloat_FromString@plt+0x1868>
   10af0:	mov	x22, x0
   10af4:	cbnz	x0, 10a54 <PyFloat_FromString@plt+0x9fc4>
   10af8:	b	10a1c <PyFloat_FromString@plt+0x9f8c>
   10afc:	mov	x1, x19
   10b00:	mov	x0, x21
   10b04:	mov	x2, x20
   10b08:	bl	82f8 <PyFloat_FromString@plt+0x1868>
   10b0c:	mov	x19, x0
   10b10:	cbnz	x0, 109d0 <PyFloat_FromString@plt+0x9f40>
   10b14:	ldr	x23, [sp, #48]
   10b18:	b	10a30 <PyFloat_FromString@plt+0x9fa0>
   10b1c:	ldr	x0, [x19]
   10b20:	sub	x0, x0, #0x1
   10b24:	str	x0, [x19]
   10b28:	cbz	x0, 10b84 <PyFloat_FromString@plt+0xa0f4>
   10b2c:	ldr	x0, [x22]
   10b30:	sub	x0, x0, #0x1
   10b34:	str	x0, [x22]
   10b38:	cbnz	x0, 10a2c <PyFloat_FromString@plt+0x9f9c>
   10b3c:	mov	x0, x22
   10b40:	bl	65d0 <_Py_Dealloc@plt>
   10b44:	ldr	x23, [sp, #48]
   10b48:	b	109b0 <PyFloat_FromString@plt+0x9f20>
   10b4c:	ldr	x0, [x21]
   10b50:	sub	x0, x0, #0x1
   10b54:	str	x0, [x21]
   10b58:	cbnz	x0, 10a2c <PyFloat_FromString@plt+0x9f9c>
   10b5c:	mov	x0, x21
   10b60:	mov	x21, #0x0                   	// #0
   10b64:	bl	65d0 <_Py_Dealloc@plt>
   10b68:	ldr	x23, [sp, #48]
   10b6c:	b	109b0 <PyFloat_FromString@plt+0x9f20>
   10b70:	mov	x0, x19
   10b74:	mov	x21, #0x0                   	// #0
   10b78:	bl	65d0 <_Py_Dealloc@plt>
   10b7c:	ldr	x23, [sp, #48]
   10b80:	b	109b0 <PyFloat_FromString@plt+0x9f20>
   10b84:	mov	x0, x19
   10b88:	bl	65d0 <_Py_Dealloc@plt>
   10b8c:	b	10b2c <PyFloat_FromString@plt+0xa09c>
   10b90:	stp	x29, x30, [sp, #-96]!
   10b94:	mov	x29, sp
   10b98:	add	x3, sp, #0x58
   10b9c:	add	x2, sp, #0x50
   10ba0:	stp	x19, x20, [sp, #16]
   10ba4:	mov	x20, x0
   10ba8:	mov	x0, x1
   10bac:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
   10bb0:	add	x1, x1, #0x2a8
   10bb4:	stp	x21, x22, [sp, #32]
   10bb8:	str	wzr, [sp, #76]
   10bbc:	bl	68e0 <PyArg_ParseTuple@plt>
   10bc0:	cbz	w0, 10ca0 <PyFloat_FromString@plt+0xa210>
   10bc4:	ldr	x19, [sp, #80]
   10bc8:	ldr	x0, [x19, #8]
   10bcc:	str	x23, [sp, #48]
   10bd0:	adrp	x23, 5d000 <PyInit__decimal@@Base+0x42a80>
   10bd4:	add	x21, x23, #0x320
   10bd8:	add	x21, x21, #0x1a0
   10bdc:	cmp	x0, x21
   10be0:	b.eq	10c34 <PyFloat_FromString@plt+0xa1a4>  // b.none
   10be4:	mov	x1, x21
   10be8:	bl	69c0 <PyType_IsSubtype@plt>
   10bec:	cbnz	w0, 10c34 <PyFloat_FromString@plt+0xa1a4>
   10bf0:	ldr	x2, [x19, #8]
   10bf4:	ldr	x0, [x2, #168]
   10bf8:	tbnz	w0, #24, 10d6c <PyFloat_FromString@plt+0xa2dc>
   10bfc:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
   10c00:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
   10c04:	ldr	x2, [x2, #24]
   10c08:	add	x1, x1, #0x8
   10c0c:	ldr	x0, [x0, #3936]
   10c10:	mov	x21, #0x0                   	// #0
   10c14:	ldr	x0, [x0]
   10c18:	bl	6a10 <PyErr_Format@plt>
   10c1c:	ldr	x23, [sp, #48]
   10c20:	mov	x0, x21
   10c24:	ldp	x19, x20, [sp, #16]
   10c28:	ldp	x21, x22, [sp, #32]
   10c2c:	ldp	x29, x30, [sp], #96
   10c30:	ret
   10c34:	ldr	x0, [x19]
   10c38:	add	x0, x0, #0x1
   10c3c:	str	x0, [x19]
   10c40:	ldr	x22, [sp, #88]
   10c44:	add	x21, x23, #0x320
   10c48:	add	x21, x21, #0x1a0
   10c4c:	ldr	x0, [x22, #8]
   10c50:	cmp	x0, x21
   10c54:	b.eq	10cb8 <PyFloat_FromString@plt+0xa228>  // b.none
   10c58:	mov	x1, x21
   10c5c:	bl	69c0 <PyType_IsSubtype@plt>
   10c60:	cbnz	w0, 10cb8 <PyFloat_FromString@plt+0xa228>
   10c64:	ldr	x2, [x22, #8]
   10c68:	ldr	x0, [x2, #168]
   10c6c:	tbnz	w0, #24, 10d50 <PyFloat_FromString@plt+0xa2c0>
   10c70:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
   10c74:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
   10c78:	ldr	x2, [x2, #24]
   10c7c:	add	x1, x1, #0x8
   10c80:	ldr	x0, [x0, #3936]
   10c84:	ldr	x0, [x0]
   10c88:	bl	6a10 <PyErr_Format@plt>
   10c8c:	ldr	x0, [x19]
   10c90:	sub	x0, x0, #0x1
   10c94:	str	x0, [x19]
   10c98:	cbz	x0, 10de0 <PyFloat_FromString@plt+0xa350>
   10c9c:	ldr	x23, [sp, #48]
   10ca0:	mov	x21, #0x0                   	// #0
   10ca4:	mov	x0, x21
   10ca8:	ldp	x19, x20, [sp, #16]
   10cac:	ldp	x21, x22, [sp, #32]
   10cb0:	ldp	x29, x30, [sp], #96
   10cb4:	ret
   10cb8:	ldr	x0, [x22]
   10cbc:	add	x0, x0, #0x1
   10cc0:	str	x0, [x22]
   10cc4:	add	x0, x23, #0x320
   10cc8:	add	x0, x0, #0x1a0
   10ccc:	bl	6c60 <PyFloat_FromString@plt+0x1d0>
   10cd0:	mov	x21, x0
   10cd4:	cbz	x0, 10d8c <PyFloat_FromString@plt+0xa2fc>
   10cd8:	add	x0, x0, #0x18
   10cdc:	add	x4, sp, #0x4c
   10ce0:	add	x3, x20, #0x10
   10ce4:	add	x2, x22, #0x18
   10ce8:	add	x1, x19, #0x18
   10cec:	bl	2d3e0 <PyInit__decimal@@Base+0x12e60>
   10cf0:	ldr	x0, [x19]
   10cf4:	sub	x0, x0, #0x1
   10cf8:	str	x0, [x19]
   10cfc:	cbz	x0, 10d44 <PyFloat_FromString@plt+0xa2b4>
   10d00:	ldr	x0, [x22]
   10d04:	sub	x0, x0, #0x1
   10d08:	str	x0, [x22]
   10d0c:	cbz	x0, 10d38 <PyFloat_FromString@plt+0xa2a8>
   10d10:	ldr	w1, [sp, #76]
   10d14:	mov	x0, x20
   10d18:	bl	7f90 <PyFloat_FromString@plt+0x1500>
   10d1c:	cbnz	w0, 10dbc <PyFloat_FromString@plt+0xa32c>
   10d20:	mov	x0, x21
   10d24:	ldp	x19, x20, [sp, #16]
   10d28:	ldp	x21, x22, [sp, #32]
   10d2c:	ldr	x23, [sp, #48]
   10d30:	ldp	x29, x30, [sp], #96
   10d34:	ret
   10d38:	mov	x0, x22
   10d3c:	bl	65d0 <_Py_Dealloc@plt>
   10d40:	b	10d10 <PyFloat_FromString@plt+0xa280>
   10d44:	mov	x0, x19
   10d48:	bl	65d0 <_Py_Dealloc@plt>
   10d4c:	b	10d00 <PyFloat_FromString@plt+0xa270>
   10d50:	mov	x1, x22
   10d54:	mov	x0, x21
   10d58:	mov	x2, x20
   10d5c:	bl	82f8 <PyFloat_FromString@plt+0x1868>
   10d60:	mov	x22, x0
   10d64:	cbnz	x0, 10cc4 <PyFloat_FromString@plt+0xa234>
   10d68:	b	10c8c <PyFloat_FromString@plt+0xa1fc>
   10d6c:	mov	x1, x19
   10d70:	mov	x0, x21
   10d74:	mov	x2, x20
   10d78:	bl	82f8 <PyFloat_FromString@plt+0x1868>
   10d7c:	mov	x19, x0
   10d80:	cbnz	x0, 10c40 <PyFloat_FromString@plt+0xa1b0>
   10d84:	ldr	x23, [sp, #48]
   10d88:	b	10ca0 <PyFloat_FromString@plt+0xa210>
   10d8c:	ldr	x0, [x19]
   10d90:	sub	x0, x0, #0x1
   10d94:	str	x0, [x19]
   10d98:	cbz	x0, 10df4 <PyFloat_FromString@plt+0xa364>
   10d9c:	ldr	x0, [x22]
   10da0:	sub	x0, x0, #0x1
   10da4:	str	x0, [x22]
   10da8:	cbnz	x0, 10c9c <PyFloat_FromString@plt+0xa20c>
   10dac:	mov	x0, x22
   10db0:	bl	65d0 <_Py_Dealloc@plt>
   10db4:	ldr	x23, [sp, #48]
   10db8:	b	10c20 <PyFloat_FromString@plt+0xa190>
   10dbc:	ldr	x0, [x21]
   10dc0:	sub	x0, x0, #0x1
   10dc4:	str	x0, [x21]
   10dc8:	cbnz	x0, 10c9c <PyFloat_FromString@plt+0xa20c>
   10dcc:	mov	x0, x21
   10dd0:	mov	x21, #0x0                   	// #0
   10dd4:	bl	65d0 <_Py_Dealloc@plt>
   10dd8:	ldr	x23, [sp, #48]
   10ddc:	b	10c20 <PyFloat_FromString@plt+0xa190>
   10de0:	mov	x0, x19
   10de4:	mov	x21, #0x0                   	// #0
   10de8:	bl	65d0 <_Py_Dealloc@plt>
   10dec:	ldr	x23, [sp, #48]
   10df0:	b	10c20 <PyFloat_FromString@plt+0xa190>
   10df4:	mov	x0, x19
   10df8:	bl	65d0 <_Py_Dealloc@plt>
   10dfc:	b	10d9c <PyFloat_FromString@plt+0xa30c>
   10e00:	stp	x29, x30, [sp, #-96]!
   10e04:	mov	x29, sp
   10e08:	add	x3, sp, #0x58
   10e0c:	add	x2, sp, #0x50
   10e10:	stp	x19, x20, [sp, #16]
   10e14:	mov	x20, x0
   10e18:	mov	x0, x1
   10e1c:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
   10e20:	add	x1, x1, #0x2a8
   10e24:	stp	x21, x22, [sp, #32]
   10e28:	str	wzr, [sp, #76]
   10e2c:	bl	68e0 <PyArg_ParseTuple@plt>
   10e30:	cbz	w0, 10f10 <PyFloat_FromString@plt+0xa480>
   10e34:	ldr	x19, [sp, #80]
   10e38:	ldr	x0, [x19, #8]
   10e3c:	str	x23, [sp, #48]
   10e40:	adrp	x23, 5d000 <PyInit__decimal@@Base+0x42a80>
   10e44:	add	x21, x23, #0x320
   10e48:	add	x21, x21, #0x1a0
   10e4c:	cmp	x0, x21
   10e50:	b.eq	10ea4 <PyFloat_FromString@plt+0xa414>  // b.none
   10e54:	mov	x1, x21
   10e58:	bl	69c0 <PyType_IsSubtype@plt>
   10e5c:	cbnz	w0, 10ea4 <PyFloat_FromString@plt+0xa414>
   10e60:	ldr	x2, [x19, #8]
   10e64:	ldr	x0, [x2, #168]
   10e68:	tbnz	w0, #24, 10fdc <PyFloat_FromString@plt+0xa54c>
   10e6c:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
   10e70:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
   10e74:	ldr	x2, [x2, #24]
   10e78:	add	x1, x1, #0x8
   10e7c:	ldr	x0, [x0, #3936]
   10e80:	mov	x21, #0x0                   	// #0
   10e84:	ldr	x0, [x0]
   10e88:	bl	6a10 <PyErr_Format@plt>
   10e8c:	ldr	x23, [sp, #48]
   10e90:	mov	x0, x21
   10e94:	ldp	x19, x20, [sp, #16]
   10e98:	ldp	x21, x22, [sp, #32]
   10e9c:	ldp	x29, x30, [sp], #96
   10ea0:	ret
   10ea4:	ldr	x0, [x19]
   10ea8:	add	x0, x0, #0x1
   10eac:	str	x0, [x19]
   10eb0:	ldr	x22, [sp, #88]
   10eb4:	add	x21, x23, #0x320
   10eb8:	add	x21, x21, #0x1a0
   10ebc:	ldr	x0, [x22, #8]
   10ec0:	cmp	x0, x21
   10ec4:	b.eq	10f28 <PyFloat_FromString@plt+0xa498>  // b.none
   10ec8:	mov	x1, x21
   10ecc:	bl	69c0 <PyType_IsSubtype@plt>
   10ed0:	cbnz	w0, 10f28 <PyFloat_FromString@plt+0xa498>
   10ed4:	ldr	x2, [x22, #8]
   10ed8:	ldr	x0, [x2, #168]
   10edc:	tbnz	w0, #24, 10fc0 <PyFloat_FromString@plt+0xa530>
   10ee0:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
   10ee4:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
   10ee8:	ldr	x2, [x2, #24]
   10eec:	add	x1, x1, #0x8
   10ef0:	ldr	x0, [x0, #3936]
   10ef4:	ldr	x0, [x0]
   10ef8:	bl	6a10 <PyErr_Format@plt>
   10efc:	ldr	x0, [x19]
   10f00:	sub	x0, x0, #0x1
   10f04:	str	x0, [x19]
   10f08:	cbz	x0, 11050 <PyFloat_FromString@plt+0xa5c0>
   10f0c:	ldr	x23, [sp, #48]
   10f10:	mov	x21, #0x0                   	// #0
   10f14:	mov	x0, x21
   10f18:	ldp	x19, x20, [sp, #16]
   10f1c:	ldp	x21, x22, [sp, #32]
   10f20:	ldp	x29, x30, [sp], #96
   10f24:	ret
   10f28:	ldr	x0, [x22]
   10f2c:	add	x0, x0, #0x1
   10f30:	str	x0, [x22]
   10f34:	add	x0, x23, #0x320
   10f38:	add	x0, x0, #0x1a0
   10f3c:	bl	6c60 <PyFloat_FromString@plt+0x1d0>
   10f40:	mov	x21, x0
   10f44:	cbz	x0, 10ffc <PyFloat_FromString@plt+0xa56c>
   10f48:	add	x0, x0, #0x18
   10f4c:	add	x4, sp, #0x4c
   10f50:	add	x3, x20, #0x10
   10f54:	add	x2, x22, #0x18
   10f58:	add	x1, x19, #0x18
   10f5c:	bl	2de28 <PyInit__decimal@@Base+0x138a8>
   10f60:	ldr	x0, [x19]
   10f64:	sub	x0, x0, #0x1
   10f68:	str	x0, [x19]
   10f6c:	cbz	x0, 10fb4 <PyFloat_FromString@plt+0xa524>
   10f70:	ldr	x0, [x22]
   10f74:	sub	x0, x0, #0x1
   10f78:	str	x0, [x22]
   10f7c:	cbz	x0, 10fa8 <PyFloat_FromString@plt+0xa518>
   10f80:	ldr	w1, [sp, #76]
   10f84:	mov	x0, x20
   10f88:	bl	7f90 <PyFloat_FromString@plt+0x1500>
   10f8c:	cbnz	w0, 1102c <PyFloat_FromString@plt+0xa59c>
   10f90:	mov	x0, x21
   10f94:	ldp	x19, x20, [sp, #16]
   10f98:	ldp	x21, x22, [sp, #32]
   10f9c:	ldr	x23, [sp, #48]
   10fa0:	ldp	x29, x30, [sp], #96
   10fa4:	ret
   10fa8:	mov	x0, x22
   10fac:	bl	65d0 <_Py_Dealloc@plt>
   10fb0:	b	10f80 <PyFloat_FromString@plt+0xa4f0>
   10fb4:	mov	x0, x19
   10fb8:	bl	65d0 <_Py_Dealloc@plt>
   10fbc:	b	10f70 <PyFloat_FromString@plt+0xa4e0>
   10fc0:	mov	x1, x22
   10fc4:	mov	x0, x21
   10fc8:	mov	x2, x20
   10fcc:	bl	82f8 <PyFloat_FromString@plt+0x1868>
   10fd0:	mov	x22, x0
   10fd4:	cbnz	x0, 10f34 <PyFloat_FromString@plt+0xa4a4>
   10fd8:	b	10efc <PyFloat_FromString@plt+0xa46c>
   10fdc:	mov	x1, x19
   10fe0:	mov	x0, x21
   10fe4:	mov	x2, x20
   10fe8:	bl	82f8 <PyFloat_FromString@plt+0x1868>
   10fec:	mov	x19, x0
   10ff0:	cbnz	x0, 10eb0 <PyFloat_FromString@plt+0xa420>
   10ff4:	ldr	x23, [sp, #48]
   10ff8:	b	10f10 <PyFloat_FromString@plt+0xa480>
   10ffc:	ldr	x0, [x19]
   11000:	sub	x0, x0, #0x1
   11004:	str	x0, [x19]
   11008:	cbz	x0, 11064 <PyFloat_FromString@plt+0xa5d4>
   1100c:	ldr	x0, [x22]
   11010:	sub	x0, x0, #0x1
   11014:	str	x0, [x22]
   11018:	cbnz	x0, 10f0c <PyFloat_FromString@plt+0xa47c>
   1101c:	mov	x0, x22
   11020:	bl	65d0 <_Py_Dealloc@plt>
   11024:	ldr	x23, [sp, #48]
   11028:	b	10e90 <PyFloat_FromString@plt+0xa400>
   1102c:	ldr	x0, [x21]
   11030:	sub	x0, x0, #0x1
   11034:	str	x0, [x21]
   11038:	cbnz	x0, 10f0c <PyFloat_FromString@plt+0xa47c>
   1103c:	mov	x0, x21
   11040:	mov	x21, #0x0                   	// #0
   11044:	bl	65d0 <_Py_Dealloc@plt>
   11048:	ldr	x23, [sp, #48]
   1104c:	b	10e90 <PyFloat_FromString@plt+0xa400>
   11050:	mov	x0, x19
   11054:	mov	x21, #0x0                   	// #0
   11058:	bl	65d0 <_Py_Dealloc@plt>
   1105c:	ldr	x23, [sp, #48]
   11060:	b	10e90 <PyFloat_FromString@plt+0xa400>
   11064:	mov	x0, x19
   11068:	bl	65d0 <_Py_Dealloc@plt>
   1106c:	b	1100c <PyFloat_FromString@plt+0xa57c>
   11070:	stp	x29, x30, [sp, #-96]!
   11074:	mov	x29, sp
   11078:	add	x3, sp, #0x58
   1107c:	add	x2, sp, #0x50
   11080:	stp	x19, x20, [sp, #16]
   11084:	mov	x20, x0
   11088:	mov	x0, x1
   1108c:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
   11090:	add	x1, x1, #0x2a8
   11094:	stp	x21, x22, [sp, #32]
   11098:	str	wzr, [sp, #76]
   1109c:	bl	68e0 <PyArg_ParseTuple@plt>
   110a0:	cbz	w0, 11180 <PyFloat_FromString@plt+0xa6f0>
   110a4:	ldr	x19, [sp, #80]
   110a8:	ldr	x0, [x19, #8]
   110ac:	str	x23, [sp, #48]
   110b0:	adrp	x23, 5d000 <PyInit__decimal@@Base+0x42a80>
   110b4:	add	x21, x23, #0x320
   110b8:	add	x21, x21, #0x1a0
   110bc:	cmp	x0, x21
   110c0:	b.eq	11114 <PyFloat_FromString@plt+0xa684>  // b.none
   110c4:	mov	x1, x21
   110c8:	bl	69c0 <PyType_IsSubtype@plt>
   110cc:	cbnz	w0, 11114 <PyFloat_FromString@plt+0xa684>
   110d0:	ldr	x2, [x19, #8]
   110d4:	ldr	x0, [x2, #168]
   110d8:	tbnz	w0, #24, 1124c <PyFloat_FromString@plt+0xa7bc>
   110dc:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
   110e0:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
   110e4:	ldr	x2, [x2, #24]
   110e8:	add	x1, x1, #0x8
   110ec:	ldr	x0, [x0, #3936]
   110f0:	mov	x21, #0x0                   	// #0
   110f4:	ldr	x0, [x0]
   110f8:	bl	6a10 <PyErr_Format@plt>
   110fc:	ldr	x23, [sp, #48]
   11100:	mov	x0, x21
   11104:	ldp	x19, x20, [sp, #16]
   11108:	ldp	x21, x22, [sp, #32]
   1110c:	ldp	x29, x30, [sp], #96
   11110:	ret
   11114:	ldr	x0, [x19]
   11118:	add	x0, x0, #0x1
   1111c:	str	x0, [x19]
   11120:	ldr	x22, [sp, #88]
   11124:	add	x21, x23, #0x320
   11128:	add	x21, x21, #0x1a0
   1112c:	ldr	x0, [x22, #8]
   11130:	cmp	x0, x21
   11134:	b.eq	11198 <PyFloat_FromString@plt+0xa708>  // b.none
   11138:	mov	x1, x21
   1113c:	bl	69c0 <PyType_IsSubtype@plt>
   11140:	cbnz	w0, 11198 <PyFloat_FromString@plt+0xa708>
   11144:	ldr	x2, [x22, #8]
   11148:	ldr	x0, [x2, #168]
   1114c:	tbnz	w0, #24, 11230 <PyFloat_FromString@plt+0xa7a0>
   11150:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
   11154:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
   11158:	ldr	x2, [x2, #24]
   1115c:	add	x1, x1, #0x8
   11160:	ldr	x0, [x0, #3936]
   11164:	ldr	x0, [x0]
   11168:	bl	6a10 <PyErr_Format@plt>
   1116c:	ldr	x0, [x19]
   11170:	sub	x0, x0, #0x1
   11174:	str	x0, [x19]
   11178:	cbz	x0, 112c0 <PyFloat_FromString@plt+0xa830>
   1117c:	ldr	x23, [sp, #48]
   11180:	mov	x21, #0x0                   	// #0
   11184:	mov	x0, x21
   11188:	ldp	x19, x20, [sp, #16]
   1118c:	ldp	x21, x22, [sp, #32]
   11190:	ldp	x29, x30, [sp], #96
   11194:	ret
   11198:	ldr	x0, [x22]
   1119c:	add	x0, x0, #0x1
   111a0:	str	x0, [x22]
   111a4:	add	x0, x23, #0x320
   111a8:	add	x0, x0, #0x1a0
   111ac:	bl	6c60 <PyFloat_FromString@plt+0x1d0>
   111b0:	mov	x21, x0
   111b4:	cbz	x0, 1126c <PyFloat_FromString@plt+0xa7dc>
   111b8:	add	x0, x0, #0x18
   111bc:	add	x4, sp, #0x4c
   111c0:	add	x3, x20, #0x10
   111c4:	add	x2, x22, #0x18
   111c8:	add	x1, x19, #0x18
   111cc:	bl	36738 <PyInit__decimal@@Base+0x1c1b8>
   111d0:	ldr	x0, [x19]
   111d4:	sub	x0, x0, #0x1
   111d8:	str	x0, [x19]
   111dc:	cbz	x0, 11224 <PyFloat_FromString@plt+0xa794>
   111e0:	ldr	x0, [x22]
   111e4:	sub	x0, x0, #0x1
   111e8:	str	x0, [x22]
   111ec:	cbz	x0, 11218 <PyFloat_FromString@plt+0xa788>
   111f0:	ldr	w1, [sp, #76]
   111f4:	mov	x0, x20
   111f8:	bl	7f90 <PyFloat_FromString@plt+0x1500>
   111fc:	cbnz	w0, 1129c <PyFloat_FromString@plt+0xa80c>
   11200:	mov	x0, x21
   11204:	ldp	x19, x20, [sp, #16]
   11208:	ldp	x21, x22, [sp, #32]
   1120c:	ldr	x23, [sp, #48]
   11210:	ldp	x29, x30, [sp], #96
   11214:	ret
   11218:	mov	x0, x22
   1121c:	bl	65d0 <_Py_Dealloc@plt>
   11220:	b	111f0 <PyFloat_FromString@plt+0xa760>
   11224:	mov	x0, x19
   11228:	bl	65d0 <_Py_Dealloc@plt>
   1122c:	b	111e0 <PyFloat_FromString@plt+0xa750>
   11230:	mov	x1, x22
   11234:	mov	x0, x21
   11238:	mov	x2, x20
   1123c:	bl	82f8 <PyFloat_FromString@plt+0x1868>
   11240:	mov	x22, x0
   11244:	cbnz	x0, 111a4 <PyFloat_FromString@plt+0xa714>
   11248:	b	1116c <PyFloat_FromString@plt+0xa6dc>
   1124c:	mov	x1, x19
   11250:	mov	x0, x21
   11254:	mov	x2, x20
   11258:	bl	82f8 <PyFloat_FromString@plt+0x1868>
   1125c:	mov	x19, x0
   11260:	cbnz	x0, 11120 <PyFloat_FromString@plt+0xa690>
   11264:	ldr	x23, [sp, #48]
   11268:	b	11180 <PyFloat_FromString@plt+0xa6f0>
   1126c:	ldr	x0, [x19]
   11270:	sub	x0, x0, #0x1
   11274:	str	x0, [x19]
   11278:	cbz	x0, 112d4 <PyFloat_FromString@plt+0xa844>
   1127c:	ldr	x0, [x22]
   11280:	sub	x0, x0, #0x1
   11284:	str	x0, [x22]
   11288:	cbnz	x0, 1117c <PyFloat_FromString@plt+0xa6ec>
   1128c:	mov	x0, x22
   11290:	bl	65d0 <_Py_Dealloc@plt>
   11294:	ldr	x23, [sp, #48]
   11298:	b	11100 <PyFloat_FromString@plt+0xa670>
   1129c:	ldr	x0, [x21]
   112a0:	sub	x0, x0, #0x1
   112a4:	str	x0, [x21]
   112a8:	cbnz	x0, 1117c <PyFloat_FromString@plt+0xa6ec>
   112ac:	mov	x0, x21
   112b0:	mov	x21, #0x0                   	// #0
   112b4:	bl	65d0 <_Py_Dealloc@plt>
   112b8:	ldr	x23, [sp, #48]
   112bc:	b	11100 <PyFloat_FromString@plt+0xa670>
   112c0:	mov	x0, x19
   112c4:	mov	x21, #0x0                   	// #0
   112c8:	bl	65d0 <_Py_Dealloc@plt>
   112cc:	ldr	x23, [sp, #48]
   112d0:	b	11100 <PyFloat_FromString@plt+0xa670>
   112d4:	mov	x0, x19
   112d8:	bl	65d0 <_Py_Dealloc@plt>
   112dc:	b	1127c <PyFloat_FromString@plt+0xa7ec>
   112e0:	stp	x29, x30, [sp, #-96]!
   112e4:	mov	x29, sp
   112e8:	add	x3, sp, #0x58
   112ec:	add	x2, sp, #0x50
   112f0:	stp	x19, x20, [sp, #16]
   112f4:	mov	x20, x0
   112f8:	mov	x0, x1
   112fc:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
   11300:	add	x1, x1, #0x2a8
   11304:	stp	x21, x22, [sp, #32]
   11308:	str	wzr, [sp, #76]
   1130c:	bl	68e0 <PyArg_ParseTuple@plt>
   11310:	cbz	w0, 113f0 <PyFloat_FromString@plt+0xa960>
   11314:	ldr	x19, [sp, #80]
   11318:	ldr	x0, [x19, #8]
   1131c:	str	x23, [sp, #48]
   11320:	adrp	x23, 5d000 <PyInit__decimal@@Base+0x42a80>
   11324:	add	x21, x23, #0x320
   11328:	add	x21, x21, #0x1a0
   1132c:	cmp	x0, x21
   11330:	b.eq	11384 <PyFloat_FromString@plt+0xa8f4>  // b.none
   11334:	mov	x1, x21
   11338:	bl	69c0 <PyType_IsSubtype@plt>
   1133c:	cbnz	w0, 11384 <PyFloat_FromString@plt+0xa8f4>
   11340:	ldr	x2, [x19, #8]
   11344:	ldr	x0, [x2, #168]
   11348:	tbnz	w0, #24, 114bc <PyFloat_FromString@plt+0xaa2c>
   1134c:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
   11350:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
   11354:	ldr	x2, [x2, #24]
   11358:	add	x1, x1, #0x8
   1135c:	ldr	x0, [x0, #3936]
   11360:	mov	x21, #0x0                   	// #0
   11364:	ldr	x0, [x0]
   11368:	bl	6a10 <PyErr_Format@plt>
   1136c:	ldr	x23, [sp, #48]
   11370:	mov	x0, x21
   11374:	ldp	x19, x20, [sp, #16]
   11378:	ldp	x21, x22, [sp, #32]
   1137c:	ldp	x29, x30, [sp], #96
   11380:	ret
   11384:	ldr	x0, [x19]
   11388:	add	x0, x0, #0x1
   1138c:	str	x0, [x19]
   11390:	ldr	x22, [sp, #88]
   11394:	add	x21, x23, #0x320
   11398:	add	x21, x21, #0x1a0
   1139c:	ldr	x0, [x22, #8]
   113a0:	cmp	x0, x21
   113a4:	b.eq	11408 <PyFloat_FromString@plt+0xa978>  // b.none
   113a8:	mov	x1, x21
   113ac:	bl	69c0 <PyType_IsSubtype@plt>
   113b0:	cbnz	w0, 11408 <PyFloat_FromString@plt+0xa978>
   113b4:	ldr	x2, [x22, #8]
   113b8:	ldr	x0, [x2, #168]
   113bc:	tbnz	w0, #24, 114a0 <PyFloat_FromString@plt+0xaa10>
   113c0:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
   113c4:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
   113c8:	ldr	x2, [x2, #24]
   113cc:	add	x1, x1, #0x8
   113d0:	ldr	x0, [x0, #3936]
   113d4:	ldr	x0, [x0]
   113d8:	bl	6a10 <PyErr_Format@plt>
   113dc:	ldr	x0, [x19]
   113e0:	sub	x0, x0, #0x1
   113e4:	str	x0, [x19]
   113e8:	cbz	x0, 11530 <PyFloat_FromString@plt+0xaaa0>
   113ec:	ldr	x23, [sp, #48]
   113f0:	mov	x21, #0x0                   	// #0
   113f4:	mov	x0, x21
   113f8:	ldp	x19, x20, [sp, #16]
   113fc:	ldp	x21, x22, [sp, #32]
   11400:	ldp	x29, x30, [sp], #96
   11404:	ret
   11408:	ldr	x0, [x22]
   1140c:	add	x0, x0, #0x1
   11410:	str	x0, [x22]
   11414:	add	x0, x23, #0x320
   11418:	add	x0, x0, #0x1a0
   1141c:	bl	6c60 <PyFloat_FromString@plt+0x1d0>
   11420:	mov	x21, x0
   11424:	cbz	x0, 114dc <PyFloat_FromString@plt+0xaa4c>
   11428:	add	x4, sp, #0x4c
   1142c:	add	x3, x20, #0x10
   11430:	add	x2, x22, #0x18
   11434:	add	x1, x19, #0x18
   11438:	add	x0, x0, #0x18
   1143c:	bl	29f00 <PyInit__decimal@@Base+0xf980>
   11440:	ldr	x0, [x19]
   11444:	sub	x0, x0, #0x1
   11448:	str	x0, [x19]
   1144c:	cbz	x0, 11494 <PyFloat_FromString@plt+0xaa04>
   11450:	ldr	x0, [x22]
   11454:	sub	x0, x0, #0x1
   11458:	str	x0, [x22]
   1145c:	cbz	x0, 11488 <PyFloat_FromString@plt+0xa9f8>
   11460:	ldr	w1, [sp, #76]
   11464:	mov	x0, x20
   11468:	bl	7f90 <PyFloat_FromString@plt+0x1500>
   1146c:	cbnz	w0, 1150c <PyFloat_FromString@plt+0xaa7c>
   11470:	mov	x0, x21
   11474:	ldp	x19, x20, [sp, #16]
   11478:	ldp	x21, x22, [sp, #32]
   1147c:	ldr	x23, [sp, #48]
   11480:	ldp	x29, x30, [sp], #96
   11484:	ret
   11488:	mov	x0, x22
   1148c:	bl	65d0 <_Py_Dealloc@plt>
   11490:	b	11460 <PyFloat_FromString@plt+0xa9d0>
   11494:	mov	x0, x19
   11498:	bl	65d0 <_Py_Dealloc@plt>
   1149c:	b	11450 <PyFloat_FromString@plt+0xa9c0>
   114a0:	mov	x1, x22
   114a4:	mov	x0, x21
   114a8:	mov	x2, x20
   114ac:	bl	82f8 <PyFloat_FromString@plt+0x1868>
   114b0:	mov	x22, x0
   114b4:	cbnz	x0, 11414 <PyFloat_FromString@plt+0xa984>
   114b8:	b	113dc <PyFloat_FromString@plt+0xa94c>
   114bc:	mov	x1, x19
   114c0:	mov	x0, x21
   114c4:	mov	x2, x20
   114c8:	bl	82f8 <PyFloat_FromString@plt+0x1868>
   114cc:	mov	x19, x0
   114d0:	cbnz	x0, 11390 <PyFloat_FromString@plt+0xa900>
   114d4:	ldr	x23, [sp, #48]
   114d8:	b	113f0 <PyFloat_FromString@plt+0xa960>
   114dc:	ldr	x0, [x19]
   114e0:	sub	x0, x0, #0x1
   114e4:	str	x0, [x19]
   114e8:	cbz	x0, 11544 <PyFloat_FromString@plt+0xaab4>
   114ec:	ldr	x0, [x22]
   114f0:	sub	x0, x0, #0x1
   114f4:	str	x0, [x22]
   114f8:	cbnz	x0, 113ec <PyFloat_FromString@plt+0xa95c>
   114fc:	mov	x0, x22
   11500:	bl	65d0 <_Py_Dealloc@plt>
   11504:	ldr	x23, [sp, #48]
   11508:	b	11370 <PyFloat_FromString@plt+0xa8e0>
   1150c:	ldr	x0, [x21]
   11510:	sub	x0, x0, #0x1
   11514:	str	x0, [x21]
   11518:	cbnz	x0, 113ec <PyFloat_FromString@plt+0xa95c>
   1151c:	mov	x0, x21
   11520:	mov	x21, #0x0                   	// #0
   11524:	bl	65d0 <_Py_Dealloc@plt>
   11528:	ldr	x23, [sp, #48]
   1152c:	b	11370 <PyFloat_FromString@plt+0xa8e0>
   11530:	mov	x0, x19
   11534:	mov	x21, #0x0                   	// #0
   11538:	bl	65d0 <_Py_Dealloc@plt>
   1153c:	ldr	x23, [sp, #48]
   11540:	b	11370 <PyFloat_FromString@plt+0xa8e0>
   11544:	mov	x0, x19
   11548:	bl	65d0 <_Py_Dealloc@plt>
   1154c:	b	114ec <PyFloat_FromString@plt+0xaa5c>
   11550:	stp	x29, x30, [sp, #-96]!
   11554:	mov	x29, sp
   11558:	add	x3, sp, #0x58
   1155c:	add	x2, sp, #0x50
   11560:	stp	x19, x20, [sp, #16]
   11564:	mov	x20, x0
   11568:	mov	x0, x1
   1156c:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
   11570:	add	x1, x1, #0x2a8
   11574:	stp	x21, x22, [sp, #32]
   11578:	str	wzr, [sp, #76]
   1157c:	bl	68e0 <PyArg_ParseTuple@plt>
   11580:	cbz	w0, 11660 <PyFloat_FromString@plt+0xabd0>
   11584:	ldr	x19, [sp, #80]
   11588:	ldr	x0, [x19, #8]
   1158c:	str	x23, [sp, #48]
   11590:	adrp	x23, 5d000 <PyInit__decimal@@Base+0x42a80>
   11594:	add	x21, x23, #0x320
   11598:	add	x21, x21, #0x1a0
   1159c:	cmp	x0, x21
   115a0:	b.eq	115f4 <PyFloat_FromString@plt+0xab64>  // b.none
   115a4:	mov	x1, x21
   115a8:	bl	69c0 <PyType_IsSubtype@plt>
   115ac:	cbnz	w0, 115f4 <PyFloat_FromString@plt+0xab64>
   115b0:	ldr	x2, [x19, #8]
   115b4:	ldr	x0, [x2, #168]
   115b8:	tbnz	w0, #24, 1172c <PyFloat_FromString@plt+0xac9c>
   115bc:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
   115c0:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
   115c4:	ldr	x2, [x2, #24]
   115c8:	add	x1, x1, #0x8
   115cc:	ldr	x0, [x0, #3936]
   115d0:	mov	x21, #0x0                   	// #0
   115d4:	ldr	x0, [x0]
   115d8:	bl	6a10 <PyErr_Format@plt>
   115dc:	ldr	x23, [sp, #48]
   115e0:	mov	x0, x21
   115e4:	ldp	x19, x20, [sp, #16]
   115e8:	ldp	x21, x22, [sp, #32]
   115ec:	ldp	x29, x30, [sp], #96
   115f0:	ret
   115f4:	ldr	x0, [x19]
   115f8:	add	x0, x0, #0x1
   115fc:	str	x0, [x19]
   11600:	ldr	x22, [sp, #88]
   11604:	add	x21, x23, #0x320
   11608:	add	x21, x21, #0x1a0
   1160c:	ldr	x0, [x22, #8]
   11610:	cmp	x0, x21
   11614:	b.eq	11678 <PyFloat_FromString@plt+0xabe8>  // b.none
   11618:	mov	x1, x21
   1161c:	bl	69c0 <PyType_IsSubtype@plt>
   11620:	cbnz	w0, 11678 <PyFloat_FromString@plt+0xabe8>
   11624:	ldr	x2, [x22, #8]
   11628:	ldr	x0, [x2, #168]
   1162c:	tbnz	w0, #24, 11710 <PyFloat_FromString@plt+0xac80>
   11630:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
   11634:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
   11638:	ldr	x2, [x2, #24]
   1163c:	add	x1, x1, #0x8
   11640:	ldr	x0, [x0, #3936]
   11644:	ldr	x0, [x0]
   11648:	bl	6a10 <PyErr_Format@plt>
   1164c:	ldr	x0, [x19]
   11650:	sub	x0, x0, #0x1
   11654:	str	x0, [x19]
   11658:	cbz	x0, 117a0 <PyFloat_FromString@plt+0xad10>
   1165c:	ldr	x23, [sp, #48]
   11660:	mov	x21, #0x0                   	// #0
   11664:	mov	x0, x21
   11668:	ldp	x19, x20, [sp, #16]
   1166c:	ldp	x21, x22, [sp, #32]
   11670:	ldp	x29, x30, [sp], #96
   11674:	ret
   11678:	ldr	x0, [x22]
   1167c:	add	x0, x0, #0x1
   11680:	str	x0, [x22]
   11684:	add	x0, x23, #0x320
   11688:	add	x0, x0, #0x1a0
   1168c:	bl	6c60 <PyFloat_FromString@plt+0x1d0>
   11690:	mov	x21, x0
   11694:	cbz	x0, 1174c <PyFloat_FromString@plt+0xacbc>
   11698:	add	x0, x0, #0x18
   1169c:	add	x4, sp, #0x4c
   116a0:	add	x3, x20, #0x10
   116a4:	add	x2, x22, #0x18
   116a8:	add	x1, x19, #0x18
   116ac:	bl	36fd0 <PyInit__decimal@@Base+0x1ca50>
   116b0:	ldr	x0, [x19]
   116b4:	sub	x0, x0, #0x1
   116b8:	str	x0, [x19]
   116bc:	cbz	x0, 11704 <PyFloat_FromString@plt+0xac74>
   116c0:	ldr	x0, [x22]
   116c4:	sub	x0, x0, #0x1
   116c8:	str	x0, [x22]
   116cc:	cbz	x0, 116f8 <PyFloat_FromString@plt+0xac68>
   116d0:	ldr	w1, [sp, #76]
   116d4:	mov	x0, x20
   116d8:	bl	7f90 <PyFloat_FromString@plt+0x1500>
   116dc:	cbnz	w0, 1177c <PyFloat_FromString@plt+0xacec>
   116e0:	mov	x0, x21
   116e4:	ldp	x19, x20, [sp, #16]
   116e8:	ldp	x21, x22, [sp, #32]
   116ec:	ldr	x23, [sp, #48]
   116f0:	ldp	x29, x30, [sp], #96
   116f4:	ret
   116f8:	mov	x0, x22
   116fc:	bl	65d0 <_Py_Dealloc@plt>
   11700:	b	116d0 <PyFloat_FromString@plt+0xac40>
   11704:	mov	x0, x19
   11708:	bl	65d0 <_Py_Dealloc@plt>
   1170c:	b	116c0 <PyFloat_FromString@plt+0xac30>
   11710:	mov	x1, x22
   11714:	mov	x0, x21
   11718:	mov	x2, x20
   1171c:	bl	82f8 <PyFloat_FromString@plt+0x1868>
   11720:	mov	x22, x0
   11724:	cbnz	x0, 11684 <PyFloat_FromString@plt+0xabf4>
   11728:	b	1164c <PyFloat_FromString@plt+0xabbc>
   1172c:	mov	x1, x19
   11730:	mov	x0, x21
   11734:	mov	x2, x20
   11738:	bl	82f8 <PyFloat_FromString@plt+0x1868>
   1173c:	mov	x19, x0
   11740:	cbnz	x0, 11600 <PyFloat_FromString@plt+0xab70>
   11744:	ldr	x23, [sp, #48]
   11748:	b	11660 <PyFloat_FromString@plt+0xabd0>
   1174c:	ldr	x0, [x19]
   11750:	sub	x0, x0, #0x1
   11754:	str	x0, [x19]
   11758:	cbz	x0, 117b4 <PyFloat_FromString@plt+0xad24>
   1175c:	ldr	x0, [x22]
   11760:	sub	x0, x0, #0x1
   11764:	str	x0, [x22]
   11768:	cbnz	x0, 1165c <PyFloat_FromString@plt+0xabcc>
   1176c:	mov	x0, x22
   11770:	bl	65d0 <_Py_Dealloc@plt>
   11774:	ldr	x23, [sp, #48]
   11778:	b	115e0 <PyFloat_FromString@plt+0xab50>
   1177c:	ldr	x0, [x21]
   11780:	sub	x0, x0, #0x1
   11784:	str	x0, [x21]
   11788:	cbnz	x0, 1165c <PyFloat_FromString@plt+0xabcc>
   1178c:	mov	x0, x21
   11790:	mov	x21, #0x0                   	// #0
   11794:	bl	65d0 <_Py_Dealloc@plt>
   11798:	ldr	x23, [sp, #48]
   1179c:	b	115e0 <PyFloat_FromString@plt+0xab50>
   117a0:	mov	x0, x19
   117a4:	mov	x21, #0x0                   	// #0
   117a8:	bl	65d0 <_Py_Dealloc@plt>
   117ac:	ldr	x23, [sp, #48]
   117b0:	b	115e0 <PyFloat_FromString@plt+0xab50>
   117b4:	mov	x0, x19
   117b8:	bl	65d0 <_Py_Dealloc@plt>
   117bc:	b	1175c <PyFloat_FromString@plt+0xaccc>
   117c0:	stp	x29, x30, [sp, #-96]!
   117c4:	mov	x29, sp
   117c8:	add	x3, sp, #0x58
   117cc:	add	x2, sp, #0x50
   117d0:	stp	x19, x20, [sp, #16]
   117d4:	mov	x20, x0
   117d8:	mov	x0, x1
   117dc:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
   117e0:	add	x1, x1, #0x2a8
   117e4:	stp	x21, x22, [sp, #32]
   117e8:	str	wzr, [sp, #76]
   117ec:	bl	68e0 <PyArg_ParseTuple@plt>
   117f0:	cbz	w0, 118d0 <PyFloat_FromString@plt+0xae40>
   117f4:	ldr	x19, [sp, #80]
   117f8:	ldr	x0, [x19, #8]
   117fc:	str	x23, [sp, #48]
   11800:	adrp	x23, 5d000 <PyInit__decimal@@Base+0x42a80>
   11804:	add	x21, x23, #0x320
   11808:	add	x21, x21, #0x1a0
   1180c:	cmp	x0, x21
   11810:	b.eq	11864 <PyFloat_FromString@plt+0xadd4>  // b.none
   11814:	mov	x1, x21
   11818:	bl	69c0 <PyType_IsSubtype@plt>
   1181c:	cbnz	w0, 11864 <PyFloat_FromString@plt+0xadd4>
   11820:	ldr	x2, [x19, #8]
   11824:	ldr	x0, [x2, #168]
   11828:	tbnz	w0, #24, 1199c <PyFloat_FromString@plt+0xaf0c>
   1182c:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
   11830:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
   11834:	ldr	x2, [x2, #24]
   11838:	add	x1, x1, #0x8
   1183c:	ldr	x0, [x0, #3936]
   11840:	mov	x21, #0x0                   	// #0
   11844:	ldr	x0, [x0]
   11848:	bl	6a10 <PyErr_Format@plt>
   1184c:	ldr	x23, [sp, #48]
   11850:	mov	x0, x21
   11854:	ldp	x19, x20, [sp, #16]
   11858:	ldp	x21, x22, [sp, #32]
   1185c:	ldp	x29, x30, [sp], #96
   11860:	ret
   11864:	ldr	x0, [x19]
   11868:	add	x0, x0, #0x1
   1186c:	str	x0, [x19]
   11870:	ldr	x22, [sp, #88]
   11874:	add	x21, x23, #0x320
   11878:	add	x21, x21, #0x1a0
   1187c:	ldr	x0, [x22, #8]
   11880:	cmp	x0, x21
   11884:	b.eq	118e8 <PyFloat_FromString@plt+0xae58>  // b.none
   11888:	mov	x1, x21
   1188c:	bl	69c0 <PyType_IsSubtype@plt>
   11890:	cbnz	w0, 118e8 <PyFloat_FromString@plt+0xae58>
   11894:	ldr	x2, [x22, #8]
   11898:	ldr	x0, [x2, #168]
   1189c:	tbnz	w0, #24, 11980 <PyFloat_FromString@plt+0xaef0>
   118a0:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
   118a4:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
   118a8:	ldr	x2, [x2, #24]
   118ac:	add	x1, x1, #0x8
   118b0:	ldr	x0, [x0, #3936]
   118b4:	ldr	x0, [x0]
   118b8:	bl	6a10 <PyErr_Format@plt>
   118bc:	ldr	x0, [x19]
   118c0:	sub	x0, x0, #0x1
   118c4:	str	x0, [x19]
   118c8:	cbz	x0, 11a10 <PyFloat_FromString@plt+0xaf80>
   118cc:	ldr	x23, [sp, #48]
   118d0:	mov	x21, #0x0                   	// #0
   118d4:	mov	x0, x21
   118d8:	ldp	x19, x20, [sp, #16]
   118dc:	ldp	x21, x22, [sp, #32]
   118e0:	ldp	x29, x30, [sp], #96
   118e4:	ret
   118e8:	ldr	x0, [x22]
   118ec:	add	x0, x0, #0x1
   118f0:	str	x0, [x22]
   118f4:	add	x0, x23, #0x320
   118f8:	add	x0, x0, #0x1a0
   118fc:	bl	6c60 <PyFloat_FromString@plt+0x1d0>
   11900:	mov	x21, x0
   11904:	cbz	x0, 119bc <PyFloat_FromString@plt+0xaf2c>
   11908:	add	x0, x0, #0x18
   1190c:	add	x4, sp, #0x4c
   11910:	add	x3, x20, #0x10
   11914:	add	x2, x22, #0x18
   11918:	add	x1, x19, #0x18
   1191c:	bl	2e5c0 <PyInit__decimal@@Base+0x14040>
   11920:	ldr	x0, [x19]
   11924:	sub	x0, x0, #0x1
   11928:	str	x0, [x19]
   1192c:	cbz	x0, 11974 <PyFloat_FromString@plt+0xaee4>
   11930:	ldr	x0, [x22]
   11934:	sub	x0, x0, #0x1
   11938:	str	x0, [x22]
   1193c:	cbz	x0, 11968 <PyFloat_FromString@plt+0xaed8>
   11940:	ldr	w1, [sp, #76]
   11944:	mov	x0, x20
   11948:	bl	7f90 <PyFloat_FromString@plt+0x1500>
   1194c:	cbnz	w0, 119ec <PyFloat_FromString@plt+0xaf5c>
   11950:	mov	x0, x21
   11954:	ldp	x19, x20, [sp, #16]
   11958:	ldp	x21, x22, [sp, #32]
   1195c:	ldr	x23, [sp, #48]
   11960:	ldp	x29, x30, [sp], #96
   11964:	ret
   11968:	mov	x0, x22
   1196c:	bl	65d0 <_Py_Dealloc@plt>
   11970:	b	11940 <PyFloat_FromString@plt+0xaeb0>
   11974:	mov	x0, x19
   11978:	bl	65d0 <_Py_Dealloc@plt>
   1197c:	b	11930 <PyFloat_FromString@plt+0xaea0>
   11980:	mov	x1, x22
   11984:	mov	x0, x21
   11988:	mov	x2, x20
   1198c:	bl	82f8 <PyFloat_FromString@plt+0x1868>
   11990:	mov	x22, x0
   11994:	cbnz	x0, 118f4 <PyFloat_FromString@plt+0xae64>
   11998:	b	118bc <PyFloat_FromString@plt+0xae2c>
   1199c:	mov	x1, x19
   119a0:	mov	x0, x21
   119a4:	mov	x2, x20
   119a8:	bl	82f8 <PyFloat_FromString@plt+0x1868>
   119ac:	mov	x19, x0
   119b0:	cbnz	x0, 11870 <PyFloat_FromString@plt+0xade0>
   119b4:	ldr	x23, [sp, #48]
   119b8:	b	118d0 <PyFloat_FromString@plt+0xae40>
   119bc:	ldr	x0, [x19]
   119c0:	sub	x0, x0, #0x1
   119c4:	str	x0, [x19]
   119c8:	cbz	x0, 11a24 <PyFloat_FromString@plt+0xaf94>
   119cc:	ldr	x0, [x22]
   119d0:	sub	x0, x0, #0x1
   119d4:	str	x0, [x22]
   119d8:	cbnz	x0, 118cc <PyFloat_FromString@plt+0xae3c>
   119dc:	mov	x0, x22
   119e0:	bl	65d0 <_Py_Dealloc@plt>
   119e4:	ldr	x23, [sp, #48]
   119e8:	b	11850 <PyFloat_FromString@plt+0xadc0>
   119ec:	ldr	x0, [x21]
   119f0:	sub	x0, x0, #0x1
   119f4:	str	x0, [x21]
   119f8:	cbnz	x0, 118cc <PyFloat_FromString@plt+0xae3c>
   119fc:	mov	x0, x21
   11a00:	mov	x21, #0x0                   	// #0
   11a04:	bl	65d0 <_Py_Dealloc@plt>
   11a08:	ldr	x23, [sp, #48]
   11a0c:	b	11850 <PyFloat_FromString@plt+0xadc0>
   11a10:	mov	x0, x19
   11a14:	mov	x21, #0x0                   	// #0
   11a18:	bl	65d0 <_Py_Dealloc@plt>
   11a1c:	ldr	x23, [sp, #48]
   11a20:	b	11850 <PyFloat_FromString@plt+0xadc0>
   11a24:	mov	x0, x19
   11a28:	bl	65d0 <_Py_Dealloc@plt>
   11a2c:	b	119cc <PyFloat_FromString@plt+0xaf3c>
   11a30:	stp	x29, x30, [sp, #-96]!
   11a34:	mov	x29, sp
   11a38:	add	x3, sp, #0x58
   11a3c:	add	x2, sp, #0x50
   11a40:	stp	x19, x20, [sp, #16]
   11a44:	mov	x20, x0
   11a48:	mov	x0, x1
   11a4c:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
   11a50:	add	x1, x1, #0x2a8
   11a54:	stp	x21, x22, [sp, #32]
   11a58:	str	wzr, [sp, #76]
   11a5c:	bl	68e0 <PyArg_ParseTuple@plt>
   11a60:	cbz	w0, 11b40 <PyFloat_FromString@plt+0xb0b0>
   11a64:	ldr	x19, [sp, #80]
   11a68:	ldr	x0, [x19, #8]
   11a6c:	str	x23, [sp, #48]
   11a70:	adrp	x23, 5d000 <PyInit__decimal@@Base+0x42a80>
   11a74:	add	x21, x23, #0x320
   11a78:	add	x21, x21, #0x1a0
   11a7c:	cmp	x0, x21
   11a80:	b.eq	11ad4 <PyFloat_FromString@plt+0xb044>  // b.none
   11a84:	mov	x1, x21
   11a88:	bl	69c0 <PyType_IsSubtype@plt>
   11a8c:	cbnz	w0, 11ad4 <PyFloat_FromString@plt+0xb044>
   11a90:	ldr	x2, [x19, #8]
   11a94:	ldr	x0, [x2, #168]
   11a98:	tbnz	w0, #24, 11c0c <PyFloat_FromString@plt+0xb17c>
   11a9c:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
   11aa0:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
   11aa4:	ldr	x2, [x2, #24]
   11aa8:	add	x1, x1, #0x8
   11aac:	ldr	x0, [x0, #3936]
   11ab0:	mov	x21, #0x0                   	// #0
   11ab4:	ldr	x0, [x0]
   11ab8:	bl	6a10 <PyErr_Format@plt>
   11abc:	ldr	x23, [sp, #48]
   11ac0:	mov	x0, x21
   11ac4:	ldp	x19, x20, [sp, #16]
   11ac8:	ldp	x21, x22, [sp, #32]
   11acc:	ldp	x29, x30, [sp], #96
   11ad0:	ret
   11ad4:	ldr	x0, [x19]
   11ad8:	add	x0, x0, #0x1
   11adc:	str	x0, [x19]
   11ae0:	ldr	x22, [sp, #88]
   11ae4:	add	x21, x23, #0x320
   11ae8:	add	x21, x21, #0x1a0
   11aec:	ldr	x0, [x22, #8]
   11af0:	cmp	x0, x21
   11af4:	b.eq	11b58 <PyFloat_FromString@plt+0xb0c8>  // b.none
   11af8:	mov	x1, x21
   11afc:	bl	69c0 <PyType_IsSubtype@plt>
   11b00:	cbnz	w0, 11b58 <PyFloat_FromString@plt+0xb0c8>
   11b04:	ldr	x2, [x22, #8]
   11b08:	ldr	x0, [x2, #168]
   11b0c:	tbnz	w0, #24, 11bf0 <PyFloat_FromString@plt+0xb160>
   11b10:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
   11b14:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
   11b18:	ldr	x2, [x2, #24]
   11b1c:	add	x1, x1, #0x8
   11b20:	ldr	x0, [x0, #3936]
   11b24:	ldr	x0, [x0]
   11b28:	bl	6a10 <PyErr_Format@plt>
   11b2c:	ldr	x0, [x19]
   11b30:	sub	x0, x0, #0x1
   11b34:	str	x0, [x19]
   11b38:	cbz	x0, 11c80 <PyFloat_FromString@plt+0xb1f0>
   11b3c:	ldr	x23, [sp, #48]
   11b40:	mov	x21, #0x0                   	// #0
   11b44:	mov	x0, x21
   11b48:	ldp	x19, x20, [sp, #16]
   11b4c:	ldp	x21, x22, [sp, #32]
   11b50:	ldp	x29, x30, [sp], #96
   11b54:	ret
   11b58:	ldr	x0, [x22]
   11b5c:	add	x0, x0, #0x1
   11b60:	str	x0, [x22]
   11b64:	add	x0, x23, #0x320
   11b68:	add	x0, x0, #0x1a0
   11b6c:	bl	6c60 <PyFloat_FromString@plt+0x1d0>
   11b70:	mov	x21, x0
   11b74:	cbz	x0, 11c2c <PyFloat_FromString@plt+0xb19c>
   11b78:	add	x4, sp, #0x4c
   11b7c:	add	x3, x20, #0x10
   11b80:	add	x2, x22, #0x18
   11b84:	add	x1, x19, #0x18
   11b88:	add	x0, x0, #0x18
   11b8c:	bl	29fa0 <PyInit__decimal@@Base+0xfa20>
   11b90:	ldr	x0, [x19]
   11b94:	sub	x0, x0, #0x1
   11b98:	str	x0, [x19]
   11b9c:	cbz	x0, 11be4 <PyFloat_FromString@plt+0xb154>
   11ba0:	ldr	x0, [x22]
   11ba4:	sub	x0, x0, #0x1
   11ba8:	str	x0, [x22]
   11bac:	cbz	x0, 11bd8 <PyFloat_FromString@plt+0xb148>
   11bb0:	ldr	w1, [sp, #76]
   11bb4:	mov	x0, x20
   11bb8:	bl	7f90 <PyFloat_FromString@plt+0x1500>
   11bbc:	cbnz	w0, 11c5c <PyFloat_FromString@plt+0xb1cc>
   11bc0:	mov	x0, x21
   11bc4:	ldp	x19, x20, [sp, #16]
   11bc8:	ldp	x21, x22, [sp, #32]
   11bcc:	ldr	x23, [sp, #48]
   11bd0:	ldp	x29, x30, [sp], #96
   11bd4:	ret
   11bd8:	mov	x0, x22
   11bdc:	bl	65d0 <_Py_Dealloc@plt>
   11be0:	b	11bb0 <PyFloat_FromString@plt+0xb120>
   11be4:	mov	x0, x19
   11be8:	bl	65d0 <_Py_Dealloc@plt>
   11bec:	b	11ba0 <PyFloat_FromString@plt+0xb110>
   11bf0:	mov	x1, x22
   11bf4:	mov	x0, x21
   11bf8:	mov	x2, x20
   11bfc:	bl	82f8 <PyFloat_FromString@plt+0x1868>
   11c00:	mov	x22, x0
   11c04:	cbnz	x0, 11b64 <PyFloat_FromString@plt+0xb0d4>
   11c08:	b	11b2c <PyFloat_FromString@plt+0xb09c>
   11c0c:	mov	x1, x19
   11c10:	mov	x0, x21
   11c14:	mov	x2, x20
   11c18:	bl	82f8 <PyFloat_FromString@plt+0x1868>
   11c1c:	mov	x19, x0
   11c20:	cbnz	x0, 11ae0 <PyFloat_FromString@plt+0xb050>
   11c24:	ldr	x23, [sp, #48]
   11c28:	b	11b40 <PyFloat_FromString@plt+0xb0b0>
   11c2c:	ldr	x0, [x19]
   11c30:	sub	x0, x0, #0x1
   11c34:	str	x0, [x19]
   11c38:	cbz	x0, 11c94 <PyFloat_FromString@plt+0xb204>
   11c3c:	ldr	x0, [x22]
   11c40:	sub	x0, x0, #0x1
   11c44:	str	x0, [x22]
   11c48:	cbnz	x0, 11b3c <PyFloat_FromString@plt+0xb0ac>
   11c4c:	mov	x0, x22
   11c50:	bl	65d0 <_Py_Dealloc@plt>
   11c54:	ldr	x23, [sp, #48]
   11c58:	b	11ac0 <PyFloat_FromString@plt+0xb030>
   11c5c:	ldr	x0, [x21]
   11c60:	sub	x0, x0, #0x1
   11c64:	str	x0, [x21]
   11c68:	cbnz	x0, 11b3c <PyFloat_FromString@plt+0xb0ac>
   11c6c:	mov	x0, x21
   11c70:	mov	x21, #0x0                   	// #0
   11c74:	bl	65d0 <_Py_Dealloc@plt>
   11c78:	ldr	x23, [sp, #48]
   11c7c:	b	11ac0 <PyFloat_FromString@plt+0xb030>
   11c80:	mov	x0, x19
   11c84:	mov	x21, #0x0                   	// #0
   11c88:	bl	65d0 <_Py_Dealloc@plt>
   11c8c:	ldr	x23, [sp, #48]
   11c90:	b	11ac0 <PyFloat_FromString@plt+0xb030>
   11c94:	mov	x0, x19
   11c98:	bl	65d0 <_Py_Dealloc@plt>
   11c9c:	b	11c3c <PyFloat_FromString@plt+0xb1ac>
   11ca0:	stp	x29, x30, [sp, #-96]!
   11ca4:	mov	x29, sp
   11ca8:	add	x3, sp, #0x58
   11cac:	add	x2, sp, #0x50
   11cb0:	stp	x19, x20, [sp, #16]
   11cb4:	mov	x20, x0
   11cb8:	mov	x0, x1
   11cbc:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
   11cc0:	add	x1, x1, #0x2a8
   11cc4:	stp	x21, x22, [sp, #32]
   11cc8:	str	wzr, [sp, #76]
   11ccc:	bl	68e0 <PyArg_ParseTuple@plt>
   11cd0:	cbz	w0, 11db0 <PyFloat_FromString@plt+0xb320>
   11cd4:	ldr	x19, [sp, #80]
   11cd8:	ldr	x0, [x19, #8]
   11cdc:	str	x23, [sp, #48]
   11ce0:	adrp	x23, 5d000 <PyInit__decimal@@Base+0x42a80>
   11ce4:	add	x21, x23, #0x320
   11ce8:	add	x21, x21, #0x1a0
   11cec:	cmp	x0, x21
   11cf0:	b.eq	11d44 <PyFloat_FromString@plt+0xb2b4>  // b.none
   11cf4:	mov	x1, x21
   11cf8:	bl	69c0 <PyType_IsSubtype@plt>
   11cfc:	cbnz	w0, 11d44 <PyFloat_FromString@plt+0xb2b4>
   11d00:	ldr	x2, [x19, #8]
   11d04:	ldr	x0, [x2, #168]
   11d08:	tbnz	w0, #24, 11e7c <PyFloat_FromString@plt+0xb3ec>
   11d0c:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
   11d10:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
   11d14:	ldr	x2, [x2, #24]
   11d18:	add	x1, x1, #0x8
   11d1c:	ldr	x0, [x0, #3936]
   11d20:	mov	x21, #0x0                   	// #0
   11d24:	ldr	x0, [x0]
   11d28:	bl	6a10 <PyErr_Format@plt>
   11d2c:	ldr	x23, [sp, #48]
   11d30:	mov	x0, x21
   11d34:	ldp	x19, x20, [sp, #16]
   11d38:	ldp	x21, x22, [sp, #32]
   11d3c:	ldp	x29, x30, [sp], #96
   11d40:	ret
   11d44:	ldr	x0, [x19]
   11d48:	add	x0, x0, #0x1
   11d4c:	str	x0, [x19]
   11d50:	ldr	x22, [sp, #88]
   11d54:	add	x21, x23, #0x320
   11d58:	add	x21, x21, #0x1a0
   11d5c:	ldr	x0, [x22, #8]
   11d60:	cmp	x0, x21
   11d64:	b.eq	11dc8 <PyFloat_FromString@plt+0xb338>  // b.none
   11d68:	mov	x1, x21
   11d6c:	bl	69c0 <PyType_IsSubtype@plt>
   11d70:	cbnz	w0, 11dc8 <PyFloat_FromString@plt+0xb338>
   11d74:	ldr	x2, [x22, #8]
   11d78:	ldr	x0, [x2, #168]
   11d7c:	tbnz	w0, #24, 11e60 <PyFloat_FromString@plt+0xb3d0>
   11d80:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
   11d84:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
   11d88:	ldr	x2, [x2, #24]
   11d8c:	add	x1, x1, #0x8
   11d90:	ldr	x0, [x0, #3936]
   11d94:	ldr	x0, [x0]
   11d98:	bl	6a10 <PyErr_Format@plt>
   11d9c:	ldr	x0, [x19]
   11da0:	sub	x0, x0, #0x1
   11da4:	str	x0, [x19]
   11da8:	cbz	x0, 11ef0 <PyFloat_FromString@plt+0xb460>
   11dac:	ldr	x23, [sp, #48]
   11db0:	mov	x21, #0x0                   	// #0
   11db4:	mov	x0, x21
   11db8:	ldp	x19, x20, [sp, #16]
   11dbc:	ldp	x21, x22, [sp, #32]
   11dc0:	ldp	x29, x30, [sp], #96
   11dc4:	ret
   11dc8:	ldr	x0, [x22]
   11dcc:	add	x0, x0, #0x1
   11dd0:	str	x0, [x22]
   11dd4:	add	x0, x23, #0x320
   11dd8:	add	x0, x0, #0x1a0
   11ddc:	bl	6c60 <PyFloat_FromString@plt+0x1d0>
   11de0:	mov	x21, x0
   11de4:	cbz	x0, 11e9c <PyFloat_FromString@plt+0xb40c>
   11de8:	add	x0, x0, #0x18
   11dec:	add	x4, sp, #0x4c
   11df0:	add	x3, x20, #0x10
   11df4:	add	x2, x22, #0x18
   11df8:	add	x1, x19, #0x18
   11dfc:	bl	31490 <PyInit__decimal@@Base+0x16f10>
   11e00:	ldr	x0, [x19]
   11e04:	sub	x0, x0, #0x1
   11e08:	str	x0, [x19]
   11e0c:	cbz	x0, 11e54 <PyFloat_FromString@plt+0xb3c4>
   11e10:	ldr	x0, [x22]
   11e14:	sub	x0, x0, #0x1
   11e18:	str	x0, [x22]
   11e1c:	cbz	x0, 11e48 <PyFloat_FromString@plt+0xb3b8>
   11e20:	ldr	w1, [sp, #76]
   11e24:	mov	x0, x20
   11e28:	bl	7f90 <PyFloat_FromString@plt+0x1500>
   11e2c:	cbnz	w0, 11ecc <PyFloat_FromString@plt+0xb43c>
   11e30:	mov	x0, x21
   11e34:	ldp	x19, x20, [sp, #16]
   11e38:	ldp	x21, x22, [sp, #32]
   11e3c:	ldr	x23, [sp, #48]
   11e40:	ldp	x29, x30, [sp], #96
   11e44:	ret
   11e48:	mov	x0, x22
   11e4c:	bl	65d0 <_Py_Dealloc@plt>
   11e50:	b	11e20 <PyFloat_FromString@plt+0xb390>
   11e54:	mov	x0, x19
   11e58:	bl	65d0 <_Py_Dealloc@plt>
   11e5c:	b	11e10 <PyFloat_FromString@plt+0xb380>
   11e60:	mov	x1, x22
   11e64:	mov	x0, x21
   11e68:	mov	x2, x20
   11e6c:	bl	82f8 <PyFloat_FromString@plt+0x1868>
   11e70:	mov	x22, x0
   11e74:	cbnz	x0, 11dd4 <PyFloat_FromString@plt+0xb344>
   11e78:	b	11d9c <PyFloat_FromString@plt+0xb30c>
   11e7c:	mov	x1, x19
   11e80:	mov	x0, x21
   11e84:	mov	x2, x20
   11e88:	bl	82f8 <PyFloat_FromString@plt+0x1868>
   11e8c:	mov	x19, x0
   11e90:	cbnz	x0, 11d50 <PyFloat_FromString@plt+0xb2c0>
   11e94:	ldr	x23, [sp, #48]
   11e98:	b	11db0 <PyFloat_FromString@plt+0xb320>
   11e9c:	ldr	x0, [x19]
   11ea0:	sub	x0, x0, #0x1
   11ea4:	str	x0, [x19]
   11ea8:	cbz	x0, 11f04 <PyFloat_FromString@plt+0xb474>
   11eac:	ldr	x0, [x22]
   11eb0:	sub	x0, x0, #0x1
   11eb4:	str	x0, [x22]
   11eb8:	cbnz	x0, 11dac <PyFloat_FromString@plt+0xb31c>
   11ebc:	mov	x0, x22
   11ec0:	bl	65d0 <_Py_Dealloc@plt>
   11ec4:	ldr	x23, [sp, #48]
   11ec8:	b	11d30 <PyFloat_FromString@plt+0xb2a0>
   11ecc:	ldr	x0, [x21]
   11ed0:	sub	x0, x0, #0x1
   11ed4:	str	x0, [x21]
   11ed8:	cbnz	x0, 11dac <PyFloat_FromString@plt+0xb31c>
   11edc:	mov	x0, x21
   11ee0:	mov	x21, #0x0                   	// #0
   11ee4:	bl	65d0 <_Py_Dealloc@plt>
   11ee8:	ldr	x23, [sp, #48]
   11eec:	b	11d30 <PyFloat_FromString@plt+0xb2a0>
   11ef0:	mov	x0, x19
   11ef4:	mov	x21, #0x0                   	// #0
   11ef8:	bl	65d0 <_Py_Dealloc@plt>
   11efc:	ldr	x23, [sp, #48]
   11f00:	b	11d30 <PyFloat_FromString@plt+0xb2a0>
   11f04:	mov	x0, x19
   11f08:	bl	65d0 <_Py_Dealloc@plt>
   11f0c:	b	11eac <PyFloat_FromString@plt+0xb41c>
   11f10:	stp	x29, x30, [sp, #-96]!
   11f14:	mov	x29, sp
   11f18:	add	x3, sp, #0x58
   11f1c:	add	x2, sp, #0x50
   11f20:	stp	x19, x20, [sp, #16]
   11f24:	mov	x20, x0
   11f28:	mov	x0, x1
   11f2c:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
   11f30:	add	x1, x1, #0x2a8
   11f34:	stp	x21, x22, [sp, #32]
   11f38:	str	wzr, [sp, #76]
   11f3c:	bl	68e0 <PyArg_ParseTuple@plt>
   11f40:	cbz	w0, 12020 <PyFloat_FromString@plt+0xb590>
   11f44:	ldr	x19, [sp, #80]
   11f48:	ldr	x0, [x19, #8]
   11f4c:	str	x23, [sp, #48]
   11f50:	adrp	x23, 5d000 <PyInit__decimal@@Base+0x42a80>
   11f54:	add	x21, x23, #0x320
   11f58:	add	x21, x21, #0x1a0
   11f5c:	cmp	x0, x21
   11f60:	b.eq	11fb4 <PyFloat_FromString@plt+0xb524>  // b.none
   11f64:	mov	x1, x21
   11f68:	bl	69c0 <PyType_IsSubtype@plt>
   11f6c:	cbnz	w0, 11fb4 <PyFloat_FromString@plt+0xb524>
   11f70:	ldr	x2, [x19, #8]
   11f74:	ldr	x0, [x2, #168]
   11f78:	tbnz	w0, #24, 120ec <PyFloat_FromString@plt+0xb65c>
   11f7c:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
   11f80:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
   11f84:	ldr	x2, [x2, #24]
   11f88:	add	x1, x1, #0x8
   11f8c:	ldr	x0, [x0, #3936]
   11f90:	mov	x21, #0x0                   	// #0
   11f94:	ldr	x0, [x0]
   11f98:	bl	6a10 <PyErr_Format@plt>
   11f9c:	ldr	x23, [sp, #48]
   11fa0:	mov	x0, x21
   11fa4:	ldp	x19, x20, [sp, #16]
   11fa8:	ldp	x21, x22, [sp, #32]
   11fac:	ldp	x29, x30, [sp], #96
   11fb0:	ret
   11fb4:	ldr	x0, [x19]
   11fb8:	add	x0, x0, #0x1
   11fbc:	str	x0, [x19]
   11fc0:	ldr	x22, [sp, #88]
   11fc4:	add	x21, x23, #0x320
   11fc8:	add	x21, x21, #0x1a0
   11fcc:	ldr	x0, [x22, #8]
   11fd0:	cmp	x0, x21
   11fd4:	b.eq	12038 <PyFloat_FromString@plt+0xb5a8>  // b.none
   11fd8:	mov	x1, x21
   11fdc:	bl	69c0 <PyType_IsSubtype@plt>
   11fe0:	cbnz	w0, 12038 <PyFloat_FromString@plt+0xb5a8>
   11fe4:	ldr	x2, [x22, #8]
   11fe8:	ldr	x0, [x2, #168]
   11fec:	tbnz	w0, #24, 120d0 <PyFloat_FromString@plt+0xb640>
   11ff0:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
   11ff4:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
   11ff8:	ldr	x2, [x2, #24]
   11ffc:	add	x1, x1, #0x8
   12000:	ldr	x0, [x0, #3936]
   12004:	ldr	x0, [x0]
   12008:	bl	6a10 <PyErr_Format@plt>
   1200c:	ldr	x0, [x19]
   12010:	sub	x0, x0, #0x1
   12014:	str	x0, [x19]
   12018:	cbz	x0, 12160 <PyFloat_FromString@plt+0xb6d0>
   1201c:	ldr	x23, [sp, #48]
   12020:	mov	x21, #0x0                   	// #0
   12024:	mov	x0, x21
   12028:	ldp	x19, x20, [sp, #16]
   1202c:	ldp	x21, x22, [sp, #32]
   12030:	ldp	x29, x30, [sp], #96
   12034:	ret
   12038:	ldr	x0, [x22]
   1203c:	add	x0, x0, #0x1
   12040:	str	x0, [x22]
   12044:	add	x0, x23, #0x320
   12048:	add	x0, x0, #0x1a0
   1204c:	bl	6c60 <PyFloat_FromString@plt+0x1d0>
   12050:	mov	x21, x0
   12054:	cbz	x0, 1210c <PyFloat_FromString@plt+0xb67c>
   12058:	add	x0, x0, #0x18
   1205c:	add	x4, sp, #0x4c
   12060:	add	x3, x20, #0x10
   12064:	add	x2, x22, #0x18
   12068:	add	x1, x19, #0x18
   1206c:	bl	331f0 <PyInit__decimal@@Base+0x18c70>
   12070:	ldr	x0, [x19]
   12074:	sub	x0, x0, #0x1
   12078:	str	x0, [x19]
   1207c:	cbz	x0, 120c4 <PyFloat_FromString@plt+0xb634>
   12080:	ldr	x0, [x22]
   12084:	sub	x0, x0, #0x1
   12088:	str	x0, [x22]
   1208c:	cbz	x0, 120b8 <PyFloat_FromString@plt+0xb628>
   12090:	ldr	w1, [sp, #76]
   12094:	mov	x0, x20
   12098:	bl	7f90 <PyFloat_FromString@plt+0x1500>
   1209c:	cbnz	w0, 1213c <PyFloat_FromString@plt+0xb6ac>
   120a0:	mov	x0, x21
   120a4:	ldp	x19, x20, [sp, #16]
   120a8:	ldp	x21, x22, [sp, #32]
   120ac:	ldr	x23, [sp, #48]
   120b0:	ldp	x29, x30, [sp], #96
   120b4:	ret
   120b8:	mov	x0, x22
   120bc:	bl	65d0 <_Py_Dealloc@plt>
   120c0:	b	12090 <PyFloat_FromString@plt+0xb600>
   120c4:	mov	x0, x19
   120c8:	bl	65d0 <_Py_Dealloc@plt>
   120cc:	b	12080 <PyFloat_FromString@plt+0xb5f0>
   120d0:	mov	x1, x22
   120d4:	mov	x0, x21
   120d8:	mov	x2, x20
   120dc:	bl	82f8 <PyFloat_FromString@plt+0x1868>
   120e0:	mov	x22, x0
   120e4:	cbnz	x0, 12044 <PyFloat_FromString@plt+0xb5b4>
   120e8:	b	1200c <PyFloat_FromString@plt+0xb57c>
   120ec:	mov	x1, x19
   120f0:	mov	x0, x21
   120f4:	mov	x2, x20
   120f8:	bl	82f8 <PyFloat_FromString@plt+0x1868>
   120fc:	mov	x19, x0
   12100:	cbnz	x0, 11fc0 <PyFloat_FromString@plt+0xb530>
   12104:	ldr	x23, [sp, #48]
   12108:	b	12020 <PyFloat_FromString@plt+0xb590>
   1210c:	ldr	x0, [x19]
   12110:	sub	x0, x0, #0x1
   12114:	str	x0, [x19]
   12118:	cbz	x0, 12174 <PyFloat_FromString@plt+0xb6e4>
   1211c:	ldr	x0, [x22]
   12120:	sub	x0, x0, #0x1
   12124:	str	x0, [x22]
   12128:	cbnz	x0, 1201c <PyFloat_FromString@plt+0xb58c>
   1212c:	mov	x0, x22
   12130:	bl	65d0 <_Py_Dealloc@plt>
   12134:	ldr	x23, [sp, #48]
   12138:	b	11fa0 <PyFloat_FromString@plt+0xb510>
   1213c:	ldr	x0, [x21]
   12140:	sub	x0, x0, #0x1
   12144:	str	x0, [x21]
   12148:	cbnz	x0, 1201c <PyFloat_FromString@plt+0xb58c>
   1214c:	mov	x0, x21
   12150:	mov	x21, #0x0                   	// #0
   12154:	bl	65d0 <_Py_Dealloc@plt>
   12158:	ldr	x23, [sp, #48]
   1215c:	b	11fa0 <PyFloat_FromString@plt+0xb510>
   12160:	mov	x0, x19
   12164:	mov	x21, #0x0                   	// #0
   12168:	bl	65d0 <_Py_Dealloc@plt>
   1216c:	ldr	x23, [sp, #48]
   12170:	b	11fa0 <PyFloat_FromString@plt+0xb510>
   12174:	mov	x0, x19
   12178:	bl	65d0 <_Py_Dealloc@plt>
   1217c:	b	1211c <PyFloat_FromString@plt+0xb68c>
   12180:	stp	x29, x30, [sp, #-96]!
   12184:	mov	x29, sp
   12188:	add	x3, sp, #0x58
   1218c:	add	x2, sp, #0x50
   12190:	stp	x19, x20, [sp, #16]
   12194:	mov	x20, x0
   12198:	mov	x0, x1
   1219c:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
   121a0:	add	x1, x1, #0x2a8
   121a4:	stp	x21, x22, [sp, #32]
   121a8:	str	wzr, [sp, #76]
   121ac:	bl	68e0 <PyArg_ParseTuple@plt>
   121b0:	cbz	w0, 12290 <PyFloat_FromString@plt+0xb800>
   121b4:	ldr	x19, [sp, #80]
   121b8:	ldr	x0, [x19, #8]
   121bc:	str	x23, [sp, #48]
   121c0:	adrp	x23, 5d000 <PyInit__decimal@@Base+0x42a80>
   121c4:	add	x21, x23, #0x320
   121c8:	add	x21, x21, #0x1a0
   121cc:	cmp	x0, x21
   121d0:	b.eq	12224 <PyFloat_FromString@plt+0xb794>  // b.none
   121d4:	mov	x1, x21
   121d8:	bl	69c0 <PyType_IsSubtype@plt>
   121dc:	cbnz	w0, 12224 <PyFloat_FromString@plt+0xb794>
   121e0:	ldr	x2, [x19, #8]
   121e4:	ldr	x0, [x2, #168]
   121e8:	tbnz	w0, #24, 1235c <PyFloat_FromString@plt+0xb8cc>
   121ec:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
   121f0:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
   121f4:	ldr	x2, [x2, #24]
   121f8:	add	x1, x1, #0x8
   121fc:	ldr	x0, [x0, #3936]
   12200:	mov	x21, #0x0                   	// #0
   12204:	ldr	x0, [x0]
   12208:	bl	6a10 <PyErr_Format@plt>
   1220c:	ldr	x23, [sp, #48]
   12210:	mov	x0, x21
   12214:	ldp	x19, x20, [sp, #16]
   12218:	ldp	x21, x22, [sp, #32]
   1221c:	ldp	x29, x30, [sp], #96
   12220:	ret
   12224:	ldr	x0, [x19]
   12228:	add	x0, x0, #0x1
   1222c:	str	x0, [x19]
   12230:	ldr	x22, [sp, #88]
   12234:	add	x21, x23, #0x320
   12238:	add	x21, x21, #0x1a0
   1223c:	ldr	x0, [x22, #8]
   12240:	cmp	x0, x21
   12244:	b.eq	122a8 <PyFloat_FromString@plt+0xb818>  // b.none
   12248:	mov	x1, x21
   1224c:	bl	69c0 <PyType_IsSubtype@plt>
   12250:	cbnz	w0, 122a8 <PyFloat_FromString@plt+0xb818>
   12254:	ldr	x2, [x22, #8]
   12258:	ldr	x0, [x2, #168]
   1225c:	tbnz	w0, #24, 12340 <PyFloat_FromString@plt+0xb8b0>
   12260:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
   12264:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
   12268:	ldr	x2, [x2, #24]
   1226c:	add	x1, x1, #0x8
   12270:	ldr	x0, [x0, #3936]
   12274:	ldr	x0, [x0]
   12278:	bl	6a10 <PyErr_Format@plt>
   1227c:	ldr	x0, [x19]
   12280:	sub	x0, x0, #0x1
   12284:	str	x0, [x19]
   12288:	cbz	x0, 123d0 <PyFloat_FromString@plt+0xb940>
   1228c:	ldr	x23, [sp, #48]
   12290:	mov	x21, #0x0                   	// #0
   12294:	mov	x0, x21
   12298:	ldp	x19, x20, [sp, #16]
   1229c:	ldp	x21, x22, [sp, #32]
   122a0:	ldp	x29, x30, [sp], #96
   122a4:	ret
   122a8:	ldr	x0, [x22]
   122ac:	add	x0, x0, #0x1
   122b0:	str	x0, [x22]
   122b4:	add	x0, x23, #0x320
   122b8:	add	x0, x0, #0x1a0
   122bc:	bl	6c60 <PyFloat_FromString@plt+0x1d0>
   122c0:	mov	x21, x0
   122c4:	cbz	x0, 1237c <PyFloat_FromString@plt+0xb8ec>
   122c8:	add	x0, x0, #0x18
   122cc:	add	x4, sp, #0x4c
   122d0:	add	x3, x20, #0x10
   122d4:	add	x2, x22, #0x18
   122d8:	add	x1, x19, #0x18
   122dc:	bl	31248 <PyInit__decimal@@Base+0x16cc8>
   122e0:	ldr	x0, [x19]
   122e4:	sub	x0, x0, #0x1
   122e8:	str	x0, [x19]
   122ec:	cbz	x0, 12334 <PyFloat_FromString@plt+0xb8a4>
   122f0:	ldr	x0, [x22]
   122f4:	sub	x0, x0, #0x1
   122f8:	str	x0, [x22]
   122fc:	cbz	x0, 12328 <PyFloat_FromString@plt+0xb898>
   12300:	ldr	w1, [sp, #76]
   12304:	mov	x0, x20
   12308:	bl	7f90 <PyFloat_FromString@plt+0x1500>
   1230c:	cbnz	w0, 123ac <PyFloat_FromString@plt+0xb91c>
   12310:	mov	x0, x21
   12314:	ldp	x19, x20, [sp, #16]
   12318:	ldp	x21, x22, [sp, #32]
   1231c:	ldr	x23, [sp, #48]
   12320:	ldp	x29, x30, [sp], #96
   12324:	ret
   12328:	mov	x0, x22
   1232c:	bl	65d0 <_Py_Dealloc@plt>
   12330:	b	12300 <PyFloat_FromString@plt+0xb870>
   12334:	mov	x0, x19
   12338:	bl	65d0 <_Py_Dealloc@plt>
   1233c:	b	122f0 <PyFloat_FromString@plt+0xb860>
   12340:	mov	x1, x22
   12344:	mov	x0, x21
   12348:	mov	x2, x20
   1234c:	bl	82f8 <PyFloat_FromString@plt+0x1868>
   12350:	mov	x22, x0
   12354:	cbnz	x0, 122b4 <PyFloat_FromString@plt+0xb824>
   12358:	b	1227c <PyFloat_FromString@plt+0xb7ec>
   1235c:	mov	x1, x19
   12360:	mov	x0, x21
   12364:	mov	x2, x20
   12368:	bl	82f8 <PyFloat_FromString@plt+0x1868>
   1236c:	mov	x19, x0
   12370:	cbnz	x0, 12230 <PyFloat_FromString@plt+0xb7a0>
   12374:	ldr	x23, [sp, #48]
   12378:	b	12290 <PyFloat_FromString@plt+0xb800>
   1237c:	ldr	x0, [x19]
   12380:	sub	x0, x0, #0x1
   12384:	str	x0, [x19]
   12388:	cbz	x0, 123e4 <PyFloat_FromString@plt+0xb954>
   1238c:	ldr	x0, [x22]
   12390:	sub	x0, x0, #0x1
   12394:	str	x0, [x22]
   12398:	cbnz	x0, 1228c <PyFloat_FromString@plt+0xb7fc>
   1239c:	mov	x0, x22
   123a0:	bl	65d0 <_Py_Dealloc@plt>
   123a4:	ldr	x23, [sp, #48]
   123a8:	b	12210 <PyFloat_FromString@plt+0xb780>
   123ac:	ldr	x0, [x21]
   123b0:	sub	x0, x0, #0x1
   123b4:	str	x0, [x21]
   123b8:	cbnz	x0, 1228c <PyFloat_FromString@plt+0xb7fc>
   123bc:	mov	x0, x21
   123c0:	mov	x21, #0x0                   	// #0
   123c4:	bl	65d0 <_Py_Dealloc@plt>
   123c8:	ldr	x23, [sp, #48]
   123cc:	b	12210 <PyFloat_FromString@plt+0xb780>
   123d0:	mov	x0, x19
   123d4:	mov	x21, #0x0                   	// #0
   123d8:	bl	65d0 <_Py_Dealloc@plt>
   123dc:	ldr	x23, [sp, #48]
   123e0:	b	12210 <PyFloat_FromString@plt+0xb780>
   123e4:	mov	x0, x19
   123e8:	bl	65d0 <_Py_Dealloc@plt>
   123ec:	b	1238c <PyFloat_FromString@plt+0xb8fc>
   123f0:	stp	x29, x30, [sp, #-96]!
   123f4:	mov	x29, sp
   123f8:	add	x3, sp, #0x58
   123fc:	add	x2, sp, #0x50
   12400:	stp	x19, x20, [sp, #16]
   12404:	mov	x20, x0
   12408:	mov	x0, x1
   1240c:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
   12410:	add	x1, x1, #0x2a8
   12414:	stp	x21, x22, [sp, #32]
   12418:	str	wzr, [sp, #76]
   1241c:	bl	68e0 <PyArg_ParseTuple@plt>
   12420:	cbz	w0, 12500 <PyFloat_FromString@plt+0xba70>
   12424:	ldr	x19, [sp, #80]
   12428:	ldr	x0, [x19, #8]
   1242c:	str	x23, [sp, #48]
   12430:	adrp	x23, 5d000 <PyInit__decimal@@Base+0x42a80>
   12434:	add	x21, x23, #0x320
   12438:	add	x21, x21, #0x1a0
   1243c:	cmp	x0, x21
   12440:	b.eq	12494 <PyFloat_FromString@plt+0xba04>  // b.none
   12444:	mov	x1, x21
   12448:	bl	69c0 <PyType_IsSubtype@plt>
   1244c:	cbnz	w0, 12494 <PyFloat_FromString@plt+0xba04>
   12450:	ldr	x2, [x19, #8]
   12454:	ldr	x0, [x2, #168]
   12458:	tbnz	w0, #24, 125cc <PyFloat_FromString@plt+0xbb3c>
   1245c:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
   12460:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
   12464:	ldr	x2, [x2, #24]
   12468:	add	x1, x1, #0x8
   1246c:	ldr	x0, [x0, #3936]
   12470:	mov	x21, #0x0                   	// #0
   12474:	ldr	x0, [x0]
   12478:	bl	6a10 <PyErr_Format@plt>
   1247c:	ldr	x23, [sp, #48]
   12480:	mov	x0, x21
   12484:	ldp	x19, x20, [sp, #16]
   12488:	ldp	x21, x22, [sp, #32]
   1248c:	ldp	x29, x30, [sp], #96
   12490:	ret
   12494:	ldr	x0, [x19]
   12498:	add	x0, x0, #0x1
   1249c:	str	x0, [x19]
   124a0:	ldr	x22, [sp, #88]
   124a4:	add	x21, x23, #0x320
   124a8:	add	x21, x21, #0x1a0
   124ac:	ldr	x0, [x22, #8]
   124b0:	cmp	x0, x21
   124b4:	b.eq	12518 <PyFloat_FromString@plt+0xba88>  // b.none
   124b8:	mov	x1, x21
   124bc:	bl	69c0 <PyType_IsSubtype@plt>
   124c0:	cbnz	w0, 12518 <PyFloat_FromString@plt+0xba88>
   124c4:	ldr	x2, [x22, #8]
   124c8:	ldr	x0, [x2, #168]
   124cc:	tbnz	w0, #24, 125b0 <PyFloat_FromString@plt+0xbb20>
   124d0:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
   124d4:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
   124d8:	ldr	x2, [x2, #24]
   124dc:	add	x1, x1, #0x8
   124e0:	ldr	x0, [x0, #3936]
   124e4:	ldr	x0, [x0]
   124e8:	bl	6a10 <PyErr_Format@plt>
   124ec:	ldr	x0, [x19]
   124f0:	sub	x0, x0, #0x1
   124f4:	str	x0, [x19]
   124f8:	cbz	x0, 12640 <PyFloat_FromString@plt+0xbbb0>
   124fc:	ldr	x23, [sp, #48]
   12500:	mov	x21, #0x0                   	// #0
   12504:	mov	x0, x21
   12508:	ldp	x19, x20, [sp, #16]
   1250c:	ldp	x21, x22, [sp, #32]
   12510:	ldp	x29, x30, [sp], #96
   12514:	ret
   12518:	ldr	x0, [x22]
   1251c:	add	x0, x0, #0x1
   12520:	str	x0, [x22]
   12524:	add	x0, x23, #0x320
   12528:	add	x0, x0, #0x1a0
   1252c:	bl	6c60 <PyFloat_FromString@plt+0x1d0>
   12530:	mov	x21, x0
   12534:	cbz	x0, 125ec <PyFloat_FromString@plt+0xbb5c>
   12538:	add	x0, x0, #0x18
   1253c:	add	x4, sp, #0x4c
   12540:	add	x3, x20, #0x10
   12544:	add	x2, x22, #0x18
   12548:	add	x1, x19, #0x18
   1254c:	bl	2d8f0 <PyInit__decimal@@Base+0x13370>
   12550:	ldr	x0, [x19]
   12554:	sub	x0, x0, #0x1
   12558:	str	x0, [x19]
   1255c:	cbz	x0, 125a4 <PyFloat_FromString@plt+0xbb14>
   12560:	ldr	x0, [x22]
   12564:	sub	x0, x0, #0x1
   12568:	str	x0, [x22]
   1256c:	cbz	x0, 12598 <PyFloat_FromString@plt+0xbb08>
   12570:	ldr	w1, [sp, #76]
   12574:	mov	x0, x20
   12578:	bl	7f90 <PyFloat_FromString@plt+0x1500>
   1257c:	cbnz	w0, 1261c <PyFloat_FromString@plt+0xbb8c>
   12580:	mov	x0, x21
   12584:	ldp	x19, x20, [sp, #16]
   12588:	ldp	x21, x22, [sp, #32]
   1258c:	ldr	x23, [sp, #48]
   12590:	ldp	x29, x30, [sp], #96
   12594:	ret
   12598:	mov	x0, x22
   1259c:	bl	65d0 <_Py_Dealloc@plt>
   125a0:	b	12570 <PyFloat_FromString@plt+0xbae0>
   125a4:	mov	x0, x19
   125a8:	bl	65d0 <_Py_Dealloc@plt>
   125ac:	b	12560 <PyFloat_FromString@plt+0xbad0>
   125b0:	mov	x1, x22
   125b4:	mov	x0, x21
   125b8:	mov	x2, x20
   125bc:	bl	82f8 <PyFloat_FromString@plt+0x1868>
   125c0:	mov	x22, x0
   125c4:	cbnz	x0, 12524 <PyFloat_FromString@plt+0xba94>
   125c8:	b	124ec <PyFloat_FromString@plt+0xba5c>
   125cc:	mov	x1, x19
   125d0:	mov	x0, x21
   125d4:	mov	x2, x20
   125d8:	bl	82f8 <PyFloat_FromString@plt+0x1868>
   125dc:	mov	x19, x0
   125e0:	cbnz	x0, 124a0 <PyFloat_FromString@plt+0xba10>
   125e4:	ldr	x23, [sp, #48]
   125e8:	b	12500 <PyFloat_FromString@plt+0xba70>
   125ec:	ldr	x0, [x19]
   125f0:	sub	x0, x0, #0x1
   125f4:	str	x0, [x19]
   125f8:	cbz	x0, 12654 <PyFloat_FromString@plt+0xbbc4>
   125fc:	ldr	x0, [x22]
   12600:	sub	x0, x0, #0x1
   12604:	str	x0, [x22]
   12608:	cbnz	x0, 124fc <PyFloat_FromString@plt+0xba6c>
   1260c:	mov	x0, x22
   12610:	bl	65d0 <_Py_Dealloc@plt>
   12614:	ldr	x23, [sp, #48]
   12618:	b	12480 <PyFloat_FromString@plt+0xb9f0>
   1261c:	ldr	x0, [x21]
   12620:	sub	x0, x0, #0x1
   12624:	str	x0, [x21]
   12628:	cbnz	x0, 124fc <PyFloat_FromString@plt+0xba6c>
   1262c:	mov	x0, x21
   12630:	mov	x21, #0x0                   	// #0
   12634:	bl	65d0 <_Py_Dealloc@plt>
   12638:	ldr	x23, [sp, #48]
   1263c:	b	12480 <PyFloat_FromString@plt+0xb9f0>
   12640:	mov	x0, x19
   12644:	mov	x21, #0x0                   	// #0
   12648:	bl	65d0 <_Py_Dealloc@plt>
   1264c:	ldr	x23, [sp, #48]
   12650:	b	12480 <PyFloat_FromString@plt+0xb9f0>
   12654:	mov	x0, x19
   12658:	bl	65d0 <_Py_Dealloc@plt>
   1265c:	b	125fc <PyFloat_FromString@plt+0xbb6c>
   12660:	stp	x29, x30, [sp, #-80]!
   12664:	adrp	x2, 5f000 <PyInit__decimal@@Base+0x44a80>
   12668:	mov	x29, sp
   1266c:	stp	x19, x20, [sp, #16]
   12670:	mov	x19, x0
   12674:	ldr	x0, [x2, #1808]
   12678:	add	x2, sp, #0x48
   1267c:	stp	x21, x22, [sp, #32]
   12680:	mov	x21, x1
   12684:	mov	x22, #0x0                   	// #0
   12688:	mov	x1, #0x0                   	// #0
   1268c:	str	wzr, [sp, #68]
   12690:	bl	6740 <PyContextVar_Get@plt>
   12694:	tbnz	w0, #31, 12700 <PyFloat_FromString@plt+0xbc70>
   12698:	ldr	x20, [sp, #72]
   1269c:	str	x23, [sp, #48]
   126a0:	cbz	x20, 12790 <PyFloat_FromString@plt+0xbd00>
   126a4:	ldr	x0, [x20]
   126a8:	sub	x0, x0, #0x1
   126ac:	str	x0, [x20]
   126b0:	cbz	x0, 12784 <PyFloat_FromString@plt+0xbcf4>
   126b4:	ldr	x0, [x19, #8]
   126b8:	adrp	x23, 5d000 <PyInit__decimal@@Base+0x42a80>
   126bc:	add	x22, x23, #0x320
   126c0:	add	x22, x22, #0x1a0
   126c4:	cmp	x0, x22
   126c8:	b.eq	12714 <PyFloat_FromString@plt+0xbc84>  // b.none
   126cc:	mov	x1, x22
   126d0:	bl	69c0 <PyType_IsSubtype@plt>
   126d4:	cbnz	w0, 12714 <PyFloat_FromString@plt+0xbc84>
   126d8:	ldr	x0, [x19, #8]
   126dc:	ldr	x0, [x0, #168]
   126e0:	tbnz	w0, #24, 12858 <PyFloat_FromString@plt+0xbdc8>
   126e4:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
   126e8:	ldr	x23, [sp, #48]
   126ec:	ldr	x0, [x0, #3912]
   126f0:	mov	x22, x0
   126f4:	ldr	x1, [x0]
   126f8:	add	x1, x1, #0x1
   126fc:	str	x1, [x0]
   12700:	mov	x0, x22
   12704:	ldp	x19, x20, [sp, #16]
   12708:	ldp	x21, x22, [sp, #32]
   1270c:	ldp	x29, x30, [sp], #80
   12710:	ret
   12714:	ldr	x0, [x19]
   12718:	add	x0, x0, #0x1
   1271c:	str	x0, [x19]
   12720:	ldr	x0, [x21, #8]
   12724:	add	x22, x23, #0x320
   12728:	add	x22, x22, #0x1a0
   1272c:	cmp	x0, x22
   12730:	b.eq	127b8 <PyFloat_FromString@plt+0xbd28>  // b.none
   12734:	mov	x1, x22
   12738:	bl	69c0 <PyType_IsSubtype@plt>
   1273c:	cbnz	w0, 127b8 <PyFloat_FromString@plt+0xbd28>
   12740:	ldr	x0, [x21, #8]
   12744:	ldr	x0, [x0, #168]
   12748:	tbnz	w0, #24, 12838 <PyFloat_FromString@plt+0xbda8>
   1274c:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
   12750:	ldr	x0, [x0, #3912]
   12754:	mov	x22, x0
   12758:	ldr	x1, [x0]
   1275c:	add	x1, x1, #0x1
   12760:	str	x1, [x0]
   12764:	ldr	x0, [x19]
   12768:	sub	x0, x0, #0x1
   1276c:	str	x0, [x19]
   12770:	cbnz	x0, 12820 <PyFloat_FromString@plt+0xbd90>
   12774:	mov	x0, x19
   12778:	bl	65d0 <_Py_Dealloc@plt>
   1277c:	ldr	x23, [sp, #48]
   12780:	b	12700 <PyFloat_FromString@plt+0xbc70>
   12784:	mov	x0, x20
   12788:	bl	65d0 <_Py_Dealloc@plt>
   1278c:	b	126b4 <PyFloat_FromString@plt+0xbc24>
   12790:	bl	7320 <PyFloat_FromString@plt+0x890>
   12794:	mov	x20, x0
   12798:	cbnz	x0, 126a4 <PyFloat_FromString@plt+0xbc14>
   1279c:	mov	x22, #0x0                   	// #0
   127a0:	mov	x0, x22
   127a4:	ldp	x19, x20, [sp, #16]
   127a8:	ldp	x21, x22, [sp, #32]
   127ac:	ldr	x23, [sp, #48]
   127b0:	ldp	x29, x30, [sp], #80
   127b4:	ret
   127b8:	ldr	x0, [x21]
   127bc:	add	x0, x0, #0x1
   127c0:	str	x0, [x21]
   127c4:	add	x0, x23, #0x320
   127c8:	add	x0, x0, #0x1a0
   127cc:	bl	6c60 <PyFloat_FromString@plt+0x1d0>
   127d0:	mov	x22, x0
   127d4:	cbz	x0, 1288c <PyFloat_FromString@plt+0xbdfc>
   127d8:	add	x0, x0, #0x18
   127dc:	add	x4, sp, #0x44
   127e0:	add	x3, x20, #0x10
   127e4:	add	x2, x21, #0x18
   127e8:	add	x1, x19, #0x18
   127ec:	bl	31248 <PyInit__decimal@@Base+0x16cc8>
   127f0:	ldr	x0, [x19]
   127f4:	sub	x0, x0, #0x1
   127f8:	str	x0, [x19]
   127fc:	cbz	x0, 12880 <PyFloat_FromString@plt+0xbdf0>
   12800:	ldr	x0, [x21]
   12804:	sub	x0, x0, #0x1
   12808:	str	x0, [x21]
   1280c:	cbz	x0, 12874 <PyFloat_FromString@plt+0xbde4>
   12810:	ldr	w1, [sp, #68]
   12814:	mov	x0, x20
   12818:	bl	7f90 <PyFloat_FromString@plt+0x1500>
   1281c:	cbnz	w0, 128bc <PyFloat_FromString@plt+0xbe2c>
   12820:	mov	x0, x22
   12824:	ldp	x19, x20, [sp, #16]
   12828:	ldp	x21, x22, [sp, #32]
   1282c:	ldr	x23, [sp, #48]
   12830:	ldp	x29, x30, [sp], #80
   12834:	ret
   12838:	mov	x1, x21
   1283c:	mov	x0, x22
   12840:	mov	x2, x20
   12844:	bl	82f8 <PyFloat_FromString@plt+0x1868>
   12848:	mov	x21, x0
   1284c:	cbnz	x0, 127c4 <PyFloat_FromString@plt+0xbd34>
   12850:	mov	x22, #0x0                   	// #0
   12854:	b	12764 <PyFloat_FromString@plt+0xbcd4>
   12858:	mov	x1, x19
   1285c:	mov	x0, x22
   12860:	mov	x2, x20
   12864:	bl	82f8 <PyFloat_FromString@plt+0x1868>
   12868:	mov	x19, x0
   1286c:	cbnz	x0, 12720 <PyFloat_FromString@plt+0xbc90>
   12870:	b	1279c <PyFloat_FromString@plt+0xbd0c>
   12874:	mov	x0, x21
   12878:	bl	65d0 <_Py_Dealloc@plt>
   1287c:	b	12810 <PyFloat_FromString@plt+0xbd80>
   12880:	mov	x0, x19
   12884:	bl	65d0 <_Py_Dealloc@plt>
   12888:	b	12800 <PyFloat_FromString@plt+0xbd70>
   1288c:	ldr	x0, [x19]
   12890:	sub	x0, x0, #0x1
   12894:	str	x0, [x19]
   12898:	cbz	x0, 128e0 <PyFloat_FromString@plt+0xbe50>
   1289c:	ldr	x0, [x21]
   128a0:	sub	x0, x0, #0x1
   128a4:	str	x0, [x21]
   128a8:	cbnz	x0, 1279c <PyFloat_FromString@plt+0xbd0c>
   128ac:	mov	x0, x21
   128b0:	bl	65d0 <_Py_Dealloc@plt>
   128b4:	ldr	x23, [sp, #48]
   128b8:	b	12700 <PyFloat_FromString@plt+0xbc70>
   128bc:	ldr	x0, [x22]
   128c0:	sub	x0, x0, #0x1
   128c4:	str	x0, [x22]
   128c8:	cbnz	x0, 1279c <PyFloat_FromString@plt+0xbd0c>
   128cc:	mov	x0, x22
   128d0:	mov	x22, #0x0                   	// #0
   128d4:	bl	65d0 <_Py_Dealloc@plt>
   128d8:	ldr	x23, [sp, #48]
   128dc:	b	12700 <PyFloat_FromString@plt+0xbc70>
   128e0:	mov	x0, x19
   128e4:	bl	65d0 <_Py_Dealloc@plt>
   128e8:	b	1289c <PyFloat_FromString@plt+0xbe0c>
   128ec:	nop
   128f0:	stp	x29, x30, [sp, #-80]!
   128f4:	adrp	x2, 5f000 <PyInit__decimal@@Base+0x44a80>
   128f8:	mov	x29, sp
   128fc:	stp	x19, x20, [sp, #16]
   12900:	mov	x19, x0
   12904:	ldr	x0, [x2, #1808]
   12908:	add	x2, sp, #0x48
   1290c:	stp	x21, x22, [sp, #32]
   12910:	mov	x21, x1
   12914:	mov	x22, #0x0                   	// #0
   12918:	mov	x1, #0x0                   	// #0
   1291c:	str	wzr, [sp, #68]
   12920:	bl	6740 <PyContextVar_Get@plt>
   12924:	tbnz	w0, #31, 12990 <PyFloat_FromString@plt+0xbf00>
   12928:	ldr	x20, [sp, #72]
   1292c:	str	x23, [sp, #48]
   12930:	cbz	x20, 12a20 <PyFloat_FromString@plt+0xbf90>
   12934:	ldr	x0, [x20]
   12938:	sub	x0, x0, #0x1
   1293c:	str	x0, [x20]
   12940:	cbz	x0, 12a14 <PyFloat_FromString@plt+0xbf84>
   12944:	ldr	x0, [x19, #8]
   12948:	adrp	x23, 5d000 <PyInit__decimal@@Base+0x42a80>
   1294c:	add	x22, x23, #0x320
   12950:	add	x22, x22, #0x1a0
   12954:	cmp	x0, x22
   12958:	b.eq	129a4 <PyFloat_FromString@plt+0xbf14>  // b.none
   1295c:	mov	x1, x22
   12960:	bl	69c0 <PyType_IsSubtype@plt>
   12964:	cbnz	w0, 129a4 <PyFloat_FromString@plt+0xbf14>
   12968:	ldr	x0, [x19, #8]
   1296c:	ldr	x0, [x0, #168]
   12970:	tbnz	w0, #24, 12ae8 <PyFloat_FromString@plt+0xc058>
   12974:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
   12978:	ldr	x23, [sp, #48]
   1297c:	ldr	x0, [x0, #3912]
   12980:	mov	x22, x0
   12984:	ldr	x1, [x0]
   12988:	add	x1, x1, #0x1
   1298c:	str	x1, [x0]
   12990:	mov	x0, x22
   12994:	ldp	x19, x20, [sp, #16]
   12998:	ldp	x21, x22, [sp, #32]
   1299c:	ldp	x29, x30, [sp], #80
   129a0:	ret
   129a4:	ldr	x0, [x19]
   129a8:	add	x0, x0, #0x1
   129ac:	str	x0, [x19]
   129b0:	ldr	x0, [x21, #8]
   129b4:	add	x22, x23, #0x320
   129b8:	add	x22, x22, #0x1a0
   129bc:	cmp	x0, x22
   129c0:	b.eq	12a48 <PyFloat_FromString@plt+0xbfb8>  // b.none
   129c4:	mov	x1, x22
   129c8:	bl	69c0 <PyType_IsSubtype@plt>
   129cc:	cbnz	w0, 12a48 <PyFloat_FromString@plt+0xbfb8>
   129d0:	ldr	x0, [x21, #8]
   129d4:	ldr	x0, [x0, #168]
   129d8:	tbnz	w0, #24, 12ac8 <PyFloat_FromString@plt+0xc038>
   129dc:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
   129e0:	ldr	x0, [x0, #3912]
   129e4:	mov	x22, x0
   129e8:	ldr	x1, [x0]
   129ec:	add	x1, x1, #0x1
   129f0:	str	x1, [x0]
   129f4:	ldr	x0, [x19]
   129f8:	sub	x0, x0, #0x1
   129fc:	str	x0, [x19]
   12a00:	cbnz	x0, 12ab0 <PyFloat_FromString@plt+0xc020>
   12a04:	mov	x0, x19
   12a08:	bl	65d0 <_Py_Dealloc@plt>
   12a0c:	ldr	x23, [sp, #48]
   12a10:	b	12990 <PyFloat_FromString@plt+0xbf00>
   12a14:	mov	x0, x20
   12a18:	bl	65d0 <_Py_Dealloc@plt>
   12a1c:	b	12944 <PyFloat_FromString@plt+0xbeb4>
   12a20:	bl	7320 <PyFloat_FromString@plt+0x890>
   12a24:	mov	x20, x0
   12a28:	cbnz	x0, 12934 <PyFloat_FromString@plt+0xbea4>
   12a2c:	mov	x22, #0x0                   	// #0
   12a30:	mov	x0, x22
   12a34:	ldp	x19, x20, [sp, #16]
   12a38:	ldp	x21, x22, [sp, #32]
   12a3c:	ldr	x23, [sp, #48]
   12a40:	ldp	x29, x30, [sp], #80
   12a44:	ret
   12a48:	ldr	x0, [x21]
   12a4c:	add	x0, x0, #0x1
   12a50:	str	x0, [x21]
   12a54:	add	x0, x23, #0x320
   12a58:	add	x0, x0, #0x1a0
   12a5c:	bl	6c60 <PyFloat_FromString@plt+0x1d0>
   12a60:	mov	x22, x0
   12a64:	cbz	x0, 12b1c <PyFloat_FromString@plt+0xc08c>
   12a68:	add	x0, x0, #0x18
   12a6c:	add	x4, sp, #0x44
   12a70:	add	x3, x20, #0x10
   12a74:	add	x2, x21, #0x18
   12a78:	add	x1, x19, #0x18
   12a7c:	bl	2e488 <PyInit__decimal@@Base+0x13f08>
   12a80:	ldr	x0, [x19]
   12a84:	sub	x0, x0, #0x1
   12a88:	str	x0, [x19]
   12a8c:	cbz	x0, 12b10 <PyFloat_FromString@plt+0xc080>
   12a90:	ldr	x0, [x21]
   12a94:	sub	x0, x0, #0x1
   12a98:	str	x0, [x21]
   12a9c:	cbz	x0, 12b04 <PyFloat_FromString@plt+0xc074>
   12aa0:	ldr	w1, [sp, #68]
   12aa4:	mov	x0, x20
   12aa8:	bl	7f90 <PyFloat_FromString@plt+0x1500>
   12aac:	cbnz	w0, 12b4c <PyFloat_FromString@plt+0xc0bc>
   12ab0:	mov	x0, x22
   12ab4:	ldp	x19, x20, [sp, #16]
   12ab8:	ldp	x21, x22, [sp, #32]
   12abc:	ldr	x23, [sp, #48]
   12ac0:	ldp	x29, x30, [sp], #80
   12ac4:	ret
   12ac8:	mov	x1, x21
   12acc:	mov	x0, x22
   12ad0:	mov	x2, x20
   12ad4:	bl	82f8 <PyFloat_FromString@plt+0x1868>
   12ad8:	mov	x21, x0
   12adc:	cbnz	x0, 12a54 <PyFloat_FromString@plt+0xbfc4>
   12ae0:	mov	x22, #0x0                   	// #0
   12ae4:	b	129f4 <PyFloat_FromString@plt+0xbf64>
   12ae8:	mov	x1, x19
   12aec:	mov	x0, x22
   12af0:	mov	x2, x20
   12af4:	bl	82f8 <PyFloat_FromString@plt+0x1868>
   12af8:	mov	x19, x0
   12afc:	cbnz	x0, 129b0 <PyFloat_FromString@plt+0xbf20>
   12b00:	b	12a2c <PyFloat_FromString@plt+0xbf9c>
   12b04:	mov	x0, x21
   12b08:	bl	65d0 <_Py_Dealloc@plt>
   12b0c:	b	12aa0 <PyFloat_FromString@plt+0xc010>
   12b10:	mov	x0, x19
   12b14:	bl	65d0 <_Py_Dealloc@plt>
   12b18:	b	12a90 <PyFloat_FromString@plt+0xc000>
   12b1c:	ldr	x0, [x19]
   12b20:	sub	x0, x0, #0x1
   12b24:	str	x0, [x19]
   12b28:	cbz	x0, 12b70 <PyFloat_FromString@plt+0xc0e0>
   12b2c:	ldr	x0, [x21]
   12b30:	sub	x0, x0, #0x1
   12b34:	str	x0, [x21]
   12b38:	cbnz	x0, 12a2c <PyFloat_FromString@plt+0xbf9c>
   12b3c:	mov	x0, x21
   12b40:	bl	65d0 <_Py_Dealloc@plt>
   12b44:	ldr	x23, [sp, #48]
   12b48:	b	12990 <PyFloat_FromString@plt+0xbf00>
   12b4c:	ldr	x0, [x22]
   12b50:	sub	x0, x0, #0x1
   12b54:	str	x0, [x22]
   12b58:	cbnz	x0, 12a2c <PyFloat_FromString@plt+0xbf9c>
   12b5c:	mov	x0, x22
   12b60:	mov	x22, #0x0                   	// #0
   12b64:	bl	65d0 <_Py_Dealloc@plt>
   12b68:	ldr	x23, [sp, #48]
   12b6c:	b	12990 <PyFloat_FromString@plt+0xbf00>
   12b70:	mov	x0, x19
   12b74:	bl	65d0 <_Py_Dealloc@plt>
   12b78:	b	12b2c <PyFloat_FromString@plt+0xc09c>
   12b7c:	nop
   12b80:	stp	x29, x30, [sp, #-80]!
   12b84:	adrp	x2, 5f000 <PyInit__decimal@@Base+0x44a80>
   12b88:	mov	x29, sp
   12b8c:	stp	x19, x20, [sp, #16]
   12b90:	mov	x19, x0
   12b94:	ldr	x0, [x2, #1808]
   12b98:	add	x2, sp, #0x48
   12b9c:	stp	x21, x22, [sp, #32]
   12ba0:	mov	x21, x1
   12ba4:	mov	x22, #0x0                   	// #0
   12ba8:	mov	x1, #0x0                   	// #0
   12bac:	str	wzr, [sp, #68]
   12bb0:	bl	6740 <PyContextVar_Get@plt>
   12bb4:	tbnz	w0, #31, 12c20 <PyFloat_FromString@plt+0xc190>
   12bb8:	ldr	x20, [sp, #72]
   12bbc:	str	x23, [sp, #48]
   12bc0:	cbz	x20, 12cb0 <PyFloat_FromString@plt+0xc220>
   12bc4:	ldr	x0, [x20]
   12bc8:	sub	x0, x0, #0x1
   12bcc:	str	x0, [x20]
   12bd0:	cbz	x0, 12ca4 <PyFloat_FromString@plt+0xc214>
   12bd4:	ldr	x0, [x19, #8]
   12bd8:	adrp	x23, 5d000 <PyInit__decimal@@Base+0x42a80>
   12bdc:	add	x22, x23, #0x320
   12be0:	add	x22, x22, #0x1a0
   12be4:	cmp	x0, x22
   12be8:	b.eq	12c34 <PyFloat_FromString@plt+0xc1a4>  // b.none
   12bec:	mov	x1, x22
   12bf0:	bl	69c0 <PyType_IsSubtype@plt>
   12bf4:	cbnz	w0, 12c34 <PyFloat_FromString@plt+0xc1a4>
   12bf8:	ldr	x0, [x19, #8]
   12bfc:	ldr	x0, [x0, #168]
   12c00:	tbnz	w0, #24, 12d78 <PyFloat_FromString@plt+0xc2e8>
   12c04:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
   12c08:	ldr	x23, [sp, #48]
   12c0c:	ldr	x0, [x0, #3912]
   12c10:	mov	x22, x0
   12c14:	ldr	x1, [x0]
   12c18:	add	x1, x1, #0x1
   12c1c:	str	x1, [x0]
   12c20:	mov	x0, x22
   12c24:	ldp	x19, x20, [sp, #16]
   12c28:	ldp	x21, x22, [sp, #32]
   12c2c:	ldp	x29, x30, [sp], #80
   12c30:	ret
   12c34:	ldr	x0, [x19]
   12c38:	add	x0, x0, #0x1
   12c3c:	str	x0, [x19]
   12c40:	ldr	x0, [x21, #8]
   12c44:	add	x22, x23, #0x320
   12c48:	add	x22, x22, #0x1a0
   12c4c:	cmp	x0, x22
   12c50:	b.eq	12cd8 <PyFloat_FromString@plt+0xc248>  // b.none
   12c54:	mov	x1, x22
   12c58:	bl	69c0 <PyType_IsSubtype@plt>
   12c5c:	cbnz	w0, 12cd8 <PyFloat_FromString@plt+0xc248>
   12c60:	ldr	x0, [x21, #8]
   12c64:	ldr	x0, [x0, #168]
   12c68:	tbnz	w0, #24, 12d58 <PyFloat_FromString@plt+0xc2c8>
   12c6c:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
   12c70:	ldr	x0, [x0, #3912]
   12c74:	mov	x22, x0
   12c78:	ldr	x1, [x0]
   12c7c:	add	x1, x1, #0x1
   12c80:	str	x1, [x0]
   12c84:	ldr	x0, [x19]
   12c88:	sub	x0, x0, #0x1
   12c8c:	str	x0, [x19]
   12c90:	cbnz	x0, 12d40 <PyFloat_FromString@plt+0xc2b0>
   12c94:	mov	x0, x19
   12c98:	bl	65d0 <_Py_Dealloc@plt>
   12c9c:	ldr	x23, [sp, #48]
   12ca0:	b	12c20 <PyFloat_FromString@plt+0xc190>
   12ca4:	mov	x0, x20
   12ca8:	bl	65d0 <_Py_Dealloc@plt>
   12cac:	b	12bd4 <PyFloat_FromString@plt+0xc144>
   12cb0:	bl	7320 <PyFloat_FromString@plt+0x890>
   12cb4:	mov	x20, x0
   12cb8:	cbnz	x0, 12bc4 <PyFloat_FromString@plt+0xc134>
   12cbc:	mov	x22, #0x0                   	// #0
   12cc0:	mov	x0, x22
   12cc4:	ldp	x19, x20, [sp, #16]
   12cc8:	ldp	x21, x22, [sp, #32]
   12ccc:	ldr	x23, [sp, #48]
   12cd0:	ldp	x29, x30, [sp], #80
   12cd4:	ret
   12cd8:	ldr	x0, [x21]
   12cdc:	add	x0, x0, #0x1
   12ce0:	str	x0, [x21]
   12ce4:	add	x0, x23, #0x320
   12ce8:	add	x0, x0, #0x1a0
   12cec:	bl	6c60 <PyFloat_FromString@plt+0x1d0>
   12cf0:	mov	x22, x0
   12cf4:	cbz	x0, 12dac <PyFloat_FromString@plt+0xc31c>
   12cf8:	add	x0, x0, #0x18
   12cfc:	add	x4, sp, #0x44
   12d00:	add	x3, x20, #0x10
   12d04:	add	x2, x21, #0x18
   12d08:	add	x1, x19, #0x18
   12d0c:	bl	31490 <PyInit__decimal@@Base+0x16f10>
   12d10:	ldr	x0, [x19]
   12d14:	sub	x0, x0, #0x1
   12d18:	str	x0, [x19]
   12d1c:	cbz	x0, 12da0 <PyFloat_FromString@plt+0xc310>
   12d20:	ldr	x0, [x21]
   12d24:	sub	x0, x0, #0x1
   12d28:	str	x0, [x21]
   12d2c:	cbz	x0, 12d94 <PyFloat_FromString@plt+0xc304>
   12d30:	ldr	w1, [sp, #68]
   12d34:	mov	x0, x20
   12d38:	bl	7f90 <PyFloat_FromString@plt+0x1500>
   12d3c:	cbnz	w0, 12ddc <PyFloat_FromString@plt+0xc34c>
   12d40:	mov	x0, x22
   12d44:	ldp	x19, x20, [sp, #16]
   12d48:	ldp	x21, x22, [sp, #32]
   12d4c:	ldr	x23, [sp, #48]
   12d50:	ldp	x29, x30, [sp], #80
   12d54:	ret
   12d58:	mov	x1, x21
   12d5c:	mov	x0, x22
   12d60:	mov	x2, x20
   12d64:	bl	82f8 <PyFloat_FromString@plt+0x1868>
   12d68:	mov	x21, x0
   12d6c:	cbnz	x0, 12ce4 <PyFloat_FromString@plt+0xc254>
   12d70:	mov	x22, #0x0                   	// #0
   12d74:	b	12c84 <PyFloat_FromString@plt+0xc1f4>
   12d78:	mov	x1, x19
   12d7c:	mov	x0, x22
   12d80:	mov	x2, x20
   12d84:	bl	82f8 <PyFloat_FromString@plt+0x1868>
   12d88:	mov	x19, x0
   12d8c:	cbnz	x0, 12c40 <PyFloat_FromString@plt+0xc1b0>
   12d90:	b	12cbc <PyFloat_FromString@plt+0xc22c>
   12d94:	mov	x0, x21
   12d98:	bl	65d0 <_Py_Dealloc@plt>
   12d9c:	b	12d30 <PyFloat_FromString@plt+0xc2a0>
   12da0:	mov	x0, x19
   12da4:	bl	65d0 <_Py_Dealloc@plt>
   12da8:	b	12d20 <PyFloat_FromString@plt+0xc290>
   12dac:	ldr	x0, [x19]
   12db0:	sub	x0, x0, #0x1
   12db4:	str	x0, [x19]
   12db8:	cbz	x0, 12e00 <PyFloat_FromString@plt+0xc370>
   12dbc:	ldr	x0, [x21]
   12dc0:	sub	x0, x0, #0x1
   12dc4:	str	x0, [x21]
   12dc8:	cbnz	x0, 12cbc <PyFloat_FromString@plt+0xc22c>
   12dcc:	mov	x0, x21
   12dd0:	bl	65d0 <_Py_Dealloc@plt>
   12dd4:	ldr	x23, [sp, #48]
   12dd8:	b	12c20 <PyFloat_FromString@plt+0xc190>
   12ddc:	ldr	x0, [x22]
   12de0:	sub	x0, x0, #0x1
   12de4:	str	x0, [x22]
   12de8:	cbnz	x0, 12cbc <PyFloat_FromString@plt+0xc22c>
   12dec:	mov	x0, x22
   12df0:	mov	x22, #0x0                   	// #0
   12df4:	bl	65d0 <_Py_Dealloc@plt>
   12df8:	ldr	x23, [sp, #48]
   12dfc:	b	12c20 <PyFloat_FromString@plt+0xc190>
   12e00:	mov	x0, x19
   12e04:	bl	65d0 <_Py_Dealloc@plt>
   12e08:	b	12dbc <PyFloat_FromString@plt+0xc32c>
   12e0c:	nop
   12e10:	stp	x29, x30, [sp, #-80]!
   12e14:	adrp	x2, 5f000 <PyInit__decimal@@Base+0x44a80>
   12e18:	mov	x29, sp
   12e1c:	stp	x19, x20, [sp, #16]
   12e20:	mov	x19, x0
   12e24:	ldr	x0, [x2, #1808]
   12e28:	add	x2, sp, #0x48
   12e2c:	stp	x21, x22, [sp, #32]
   12e30:	mov	x21, x1
   12e34:	mov	x22, #0x0                   	// #0
   12e38:	mov	x1, #0x0                   	// #0
   12e3c:	str	wzr, [sp, #68]
   12e40:	bl	6740 <PyContextVar_Get@plt>
   12e44:	tbnz	w0, #31, 12eb0 <PyFloat_FromString@plt+0xc420>
   12e48:	ldr	x20, [sp, #72]
   12e4c:	str	x23, [sp, #48]
   12e50:	cbz	x20, 12f40 <PyFloat_FromString@plt+0xc4b0>
   12e54:	ldr	x0, [x20]
   12e58:	sub	x0, x0, #0x1
   12e5c:	str	x0, [x20]
   12e60:	cbz	x0, 12f34 <PyFloat_FromString@plt+0xc4a4>
   12e64:	ldr	x0, [x19, #8]
   12e68:	adrp	x23, 5d000 <PyInit__decimal@@Base+0x42a80>
   12e6c:	add	x22, x23, #0x320
   12e70:	add	x22, x22, #0x1a0
   12e74:	cmp	x0, x22
   12e78:	b.eq	12ec4 <PyFloat_FromString@plt+0xc434>  // b.none
   12e7c:	mov	x1, x22
   12e80:	bl	69c0 <PyType_IsSubtype@plt>
   12e84:	cbnz	w0, 12ec4 <PyFloat_FromString@plt+0xc434>
   12e88:	ldr	x0, [x19, #8]
   12e8c:	ldr	x0, [x0, #168]
   12e90:	tbnz	w0, #24, 13008 <PyFloat_FromString@plt+0xc578>
   12e94:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
   12e98:	ldr	x23, [sp, #48]
   12e9c:	ldr	x0, [x0, #3912]
   12ea0:	mov	x22, x0
   12ea4:	ldr	x1, [x0]
   12ea8:	add	x1, x1, #0x1
   12eac:	str	x1, [x0]
   12eb0:	mov	x0, x22
   12eb4:	ldp	x19, x20, [sp, #16]
   12eb8:	ldp	x21, x22, [sp, #32]
   12ebc:	ldp	x29, x30, [sp], #80
   12ec0:	ret
   12ec4:	ldr	x0, [x19]
   12ec8:	add	x0, x0, #0x1
   12ecc:	str	x0, [x19]
   12ed0:	ldr	x0, [x21, #8]
   12ed4:	add	x22, x23, #0x320
   12ed8:	add	x22, x22, #0x1a0
   12edc:	cmp	x0, x22
   12ee0:	b.eq	12f68 <PyFloat_FromString@plt+0xc4d8>  // b.none
   12ee4:	mov	x1, x22
   12ee8:	bl	69c0 <PyType_IsSubtype@plt>
   12eec:	cbnz	w0, 12f68 <PyFloat_FromString@plt+0xc4d8>
   12ef0:	ldr	x0, [x21, #8]
   12ef4:	ldr	x0, [x0, #168]
   12ef8:	tbnz	w0, #24, 12fe8 <PyFloat_FromString@plt+0xc558>
   12efc:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
   12f00:	ldr	x0, [x0, #3912]
   12f04:	mov	x22, x0
   12f08:	ldr	x1, [x0]
   12f0c:	add	x1, x1, #0x1
   12f10:	str	x1, [x0]
   12f14:	ldr	x0, [x19]
   12f18:	sub	x0, x0, #0x1
   12f1c:	str	x0, [x19]
   12f20:	cbnz	x0, 12fd0 <PyFloat_FromString@plt+0xc540>
   12f24:	mov	x0, x19
   12f28:	bl	65d0 <_Py_Dealloc@plt>
   12f2c:	ldr	x23, [sp, #48]
   12f30:	b	12eb0 <PyFloat_FromString@plt+0xc420>
   12f34:	mov	x0, x20
   12f38:	bl	65d0 <_Py_Dealloc@plt>
   12f3c:	b	12e64 <PyFloat_FromString@plt+0xc3d4>
   12f40:	bl	7320 <PyFloat_FromString@plt+0x890>
   12f44:	mov	x20, x0
   12f48:	cbnz	x0, 12e54 <PyFloat_FromString@plt+0xc3c4>
   12f4c:	mov	x22, #0x0                   	// #0
   12f50:	mov	x0, x22
   12f54:	ldp	x19, x20, [sp, #16]
   12f58:	ldp	x21, x22, [sp, #32]
   12f5c:	ldr	x23, [sp, #48]
   12f60:	ldp	x29, x30, [sp], #80
   12f64:	ret
   12f68:	ldr	x0, [x21]
   12f6c:	add	x0, x0, #0x1
   12f70:	str	x0, [x21]
   12f74:	add	x0, x23, #0x320
   12f78:	add	x0, x0, #0x1a0
   12f7c:	bl	6c60 <PyFloat_FromString@plt+0x1d0>
   12f80:	mov	x22, x0
   12f84:	cbz	x0, 1303c <PyFloat_FromString@plt+0xc5ac>
   12f88:	add	x0, x0, #0x18
   12f8c:	add	x4, sp, #0x44
   12f90:	add	x3, x20, #0x10
   12f94:	add	x2, x21, #0x18
   12f98:	add	x1, x19, #0x18
   12f9c:	bl	36738 <PyInit__decimal@@Base+0x1c1b8>
   12fa0:	ldr	x0, [x19]
   12fa4:	sub	x0, x0, #0x1
   12fa8:	str	x0, [x19]
   12fac:	cbz	x0, 13030 <PyFloat_FromString@plt+0xc5a0>
   12fb0:	ldr	x0, [x21]
   12fb4:	sub	x0, x0, #0x1
   12fb8:	str	x0, [x21]
   12fbc:	cbz	x0, 13024 <PyFloat_FromString@plt+0xc594>
   12fc0:	ldr	w1, [sp, #68]
   12fc4:	mov	x0, x20
   12fc8:	bl	7f90 <PyFloat_FromString@plt+0x1500>
   12fcc:	cbnz	w0, 1306c <PyFloat_FromString@plt+0xc5dc>
   12fd0:	mov	x0, x22
   12fd4:	ldp	x19, x20, [sp, #16]
   12fd8:	ldp	x21, x22, [sp, #32]
   12fdc:	ldr	x23, [sp, #48]
   12fe0:	ldp	x29, x30, [sp], #80
   12fe4:	ret
   12fe8:	mov	x1, x21
   12fec:	mov	x0, x22
   12ff0:	mov	x2, x20
   12ff4:	bl	82f8 <PyFloat_FromString@plt+0x1868>
   12ff8:	mov	x21, x0
   12ffc:	cbnz	x0, 12f74 <PyFloat_FromString@plt+0xc4e4>
   13000:	mov	x22, #0x0                   	// #0
   13004:	b	12f14 <PyFloat_FromString@plt+0xc484>
   13008:	mov	x1, x19
   1300c:	mov	x0, x22
   13010:	mov	x2, x20
   13014:	bl	82f8 <PyFloat_FromString@plt+0x1868>
   13018:	mov	x19, x0
   1301c:	cbnz	x0, 12ed0 <PyFloat_FromString@plt+0xc440>
   13020:	b	12f4c <PyFloat_FromString@plt+0xc4bc>
   13024:	mov	x0, x21
   13028:	bl	65d0 <_Py_Dealloc@plt>
   1302c:	b	12fc0 <PyFloat_FromString@plt+0xc530>
   13030:	mov	x0, x19
   13034:	bl	65d0 <_Py_Dealloc@plt>
   13038:	b	12fb0 <PyFloat_FromString@plt+0xc520>
   1303c:	ldr	x0, [x19]
   13040:	sub	x0, x0, #0x1
   13044:	str	x0, [x19]
   13048:	cbz	x0, 13090 <PyFloat_FromString@plt+0xc600>
   1304c:	ldr	x0, [x21]
   13050:	sub	x0, x0, #0x1
   13054:	str	x0, [x21]
   13058:	cbnz	x0, 12f4c <PyFloat_FromString@plt+0xc4bc>
   1305c:	mov	x0, x21
   13060:	bl	65d0 <_Py_Dealloc@plt>
   13064:	ldr	x23, [sp, #48]
   13068:	b	12eb0 <PyFloat_FromString@plt+0xc420>
   1306c:	ldr	x0, [x22]
   13070:	sub	x0, x0, #0x1
   13074:	str	x0, [x22]
   13078:	cbnz	x0, 12f4c <PyFloat_FromString@plt+0xc4bc>
   1307c:	mov	x0, x22
   13080:	mov	x22, #0x0                   	// #0
   13084:	bl	65d0 <_Py_Dealloc@plt>
   13088:	ldr	x23, [sp, #48]
   1308c:	b	12eb0 <PyFloat_FromString@plt+0xc420>
   13090:	mov	x0, x19
   13094:	bl	65d0 <_Py_Dealloc@plt>
   13098:	b	1304c <PyFloat_FromString@plt+0xc5bc>
   1309c:	nop
   130a0:	stp	x29, x30, [sp, #-80]!
   130a4:	adrp	x2, 5f000 <PyInit__decimal@@Base+0x44a80>
   130a8:	mov	x29, sp
   130ac:	stp	x19, x20, [sp, #16]
   130b0:	mov	x19, x0
   130b4:	ldr	x0, [x2, #1808]
   130b8:	add	x2, sp, #0x48
   130bc:	stp	x21, x22, [sp, #32]
   130c0:	mov	x21, x1
   130c4:	mov	x22, #0x0                   	// #0
   130c8:	mov	x1, #0x0                   	// #0
   130cc:	str	wzr, [sp, #68]
   130d0:	bl	6740 <PyContextVar_Get@plt>
   130d4:	tbnz	w0, #31, 13140 <PyFloat_FromString@plt+0xc6b0>
   130d8:	ldr	x20, [sp, #72]
   130dc:	str	x23, [sp, #48]
   130e0:	cbz	x20, 131d0 <PyFloat_FromString@plt+0xc740>
   130e4:	ldr	x0, [x20]
   130e8:	sub	x0, x0, #0x1
   130ec:	str	x0, [x20]
   130f0:	cbz	x0, 131c4 <PyFloat_FromString@plt+0xc734>
   130f4:	ldr	x0, [x19, #8]
   130f8:	adrp	x23, 5d000 <PyInit__decimal@@Base+0x42a80>
   130fc:	add	x22, x23, #0x320
   13100:	add	x22, x22, #0x1a0
   13104:	cmp	x0, x22
   13108:	b.eq	13154 <PyFloat_FromString@plt+0xc6c4>  // b.none
   1310c:	mov	x1, x22
   13110:	bl	69c0 <PyType_IsSubtype@plt>
   13114:	cbnz	w0, 13154 <PyFloat_FromString@plt+0xc6c4>
   13118:	ldr	x0, [x19, #8]
   1311c:	ldr	x0, [x0, #168]
   13120:	tbnz	w0, #24, 13298 <PyFloat_FromString@plt+0xc808>
   13124:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
   13128:	ldr	x23, [sp, #48]
   1312c:	ldr	x0, [x0, #3912]
   13130:	mov	x22, x0
   13134:	ldr	x1, [x0]
   13138:	add	x1, x1, #0x1
   1313c:	str	x1, [x0]
   13140:	mov	x0, x22
   13144:	ldp	x19, x20, [sp, #16]
   13148:	ldp	x21, x22, [sp, #32]
   1314c:	ldp	x29, x30, [sp], #80
   13150:	ret
   13154:	ldr	x0, [x19]
   13158:	add	x0, x0, #0x1
   1315c:	str	x0, [x19]
   13160:	ldr	x0, [x21, #8]
   13164:	add	x22, x23, #0x320
   13168:	add	x22, x22, #0x1a0
   1316c:	cmp	x0, x22
   13170:	b.eq	131f8 <PyFloat_FromString@plt+0xc768>  // b.none
   13174:	mov	x1, x22
   13178:	bl	69c0 <PyType_IsSubtype@plt>
   1317c:	cbnz	w0, 131f8 <PyFloat_FromString@plt+0xc768>
   13180:	ldr	x0, [x21, #8]
   13184:	ldr	x0, [x0, #168]
   13188:	tbnz	w0, #24, 13278 <PyFloat_FromString@plt+0xc7e8>
   1318c:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
   13190:	ldr	x0, [x0, #3912]
   13194:	mov	x22, x0
   13198:	ldr	x1, [x0]
   1319c:	add	x1, x1, #0x1
   131a0:	str	x1, [x0]
   131a4:	ldr	x0, [x19]
   131a8:	sub	x0, x0, #0x1
   131ac:	str	x0, [x19]
   131b0:	cbnz	x0, 13260 <PyFloat_FromString@plt+0xc7d0>
   131b4:	mov	x0, x19
   131b8:	bl	65d0 <_Py_Dealloc@plt>
   131bc:	ldr	x23, [sp, #48]
   131c0:	b	13140 <PyFloat_FromString@plt+0xc6b0>
   131c4:	mov	x0, x20
   131c8:	bl	65d0 <_Py_Dealloc@plt>
   131cc:	b	130f4 <PyFloat_FromString@plt+0xc664>
   131d0:	bl	7320 <PyFloat_FromString@plt+0x890>
   131d4:	mov	x20, x0
   131d8:	cbnz	x0, 130e4 <PyFloat_FromString@plt+0xc654>
   131dc:	mov	x22, #0x0                   	// #0
   131e0:	mov	x0, x22
   131e4:	ldp	x19, x20, [sp, #16]
   131e8:	ldp	x21, x22, [sp, #32]
   131ec:	ldr	x23, [sp, #48]
   131f0:	ldp	x29, x30, [sp], #80
   131f4:	ret
   131f8:	ldr	x0, [x21]
   131fc:	add	x0, x0, #0x1
   13200:	str	x0, [x21]
   13204:	add	x0, x23, #0x320
   13208:	add	x0, x0, #0x1a0
   1320c:	bl	6c60 <PyFloat_FromString@plt+0x1d0>
   13210:	mov	x22, x0
   13214:	cbz	x0, 132cc <PyFloat_FromString@plt+0xc83c>
   13218:	add	x0, x0, #0x18
   1321c:	add	x4, sp, #0x44
   13220:	add	x3, x20, #0x10
   13224:	add	x2, x21, #0x18
   13228:	add	x1, x19, #0x18
   1322c:	bl	336b0 <PyInit__decimal@@Base+0x19130>
   13230:	ldr	x0, [x19]
   13234:	sub	x0, x0, #0x1
   13238:	str	x0, [x19]
   1323c:	cbz	x0, 132c0 <PyFloat_FromString@plt+0xc830>
   13240:	ldr	x0, [x21]
   13244:	sub	x0, x0, #0x1
   13248:	str	x0, [x21]
   1324c:	cbz	x0, 132b4 <PyFloat_FromString@plt+0xc824>
   13250:	ldr	w1, [sp, #68]
   13254:	mov	x0, x20
   13258:	bl	7f90 <PyFloat_FromString@plt+0x1500>
   1325c:	cbnz	w0, 132fc <PyFloat_FromString@plt+0xc86c>
   13260:	mov	x0, x22
   13264:	ldp	x19, x20, [sp, #16]
   13268:	ldp	x21, x22, [sp, #32]
   1326c:	ldr	x23, [sp, #48]
   13270:	ldp	x29, x30, [sp], #80
   13274:	ret
   13278:	mov	x1, x21
   1327c:	mov	x0, x22
   13280:	mov	x2, x20
   13284:	bl	82f8 <PyFloat_FromString@plt+0x1868>
   13288:	mov	x21, x0
   1328c:	cbnz	x0, 13204 <PyFloat_FromString@plt+0xc774>
   13290:	mov	x22, #0x0                   	// #0
   13294:	b	131a4 <PyFloat_FromString@plt+0xc714>
   13298:	mov	x1, x19
   1329c:	mov	x0, x22
   132a0:	mov	x2, x20
   132a4:	bl	82f8 <PyFloat_FromString@plt+0x1868>
   132a8:	mov	x19, x0
   132ac:	cbnz	x0, 13160 <PyFloat_FromString@plt+0xc6d0>
   132b0:	b	131dc <PyFloat_FromString@plt+0xc74c>
   132b4:	mov	x0, x21
   132b8:	bl	65d0 <_Py_Dealloc@plt>
   132bc:	b	13250 <PyFloat_FromString@plt+0xc7c0>
   132c0:	mov	x0, x19
   132c4:	bl	65d0 <_Py_Dealloc@plt>
   132c8:	b	13240 <PyFloat_FromString@plt+0xc7b0>
   132cc:	ldr	x0, [x19]
   132d0:	sub	x0, x0, #0x1
   132d4:	str	x0, [x19]
   132d8:	cbz	x0, 13320 <PyFloat_FromString@plt+0xc890>
   132dc:	ldr	x0, [x21]
   132e0:	sub	x0, x0, #0x1
   132e4:	str	x0, [x21]
   132e8:	cbnz	x0, 131dc <PyFloat_FromString@plt+0xc74c>
   132ec:	mov	x0, x21
   132f0:	bl	65d0 <_Py_Dealloc@plt>
   132f4:	ldr	x23, [sp, #48]
   132f8:	b	13140 <PyFloat_FromString@plt+0xc6b0>
   132fc:	ldr	x0, [x22]
   13300:	sub	x0, x0, #0x1
   13304:	str	x0, [x22]
   13308:	cbnz	x0, 131dc <PyFloat_FromString@plt+0xc74c>
   1330c:	mov	x0, x22
   13310:	mov	x22, #0x0                   	// #0
   13314:	bl	65d0 <_Py_Dealloc@plt>
   13318:	ldr	x23, [sp, #48]
   1331c:	b	13140 <PyFloat_FromString@plt+0xc6b0>
   13320:	mov	x0, x19
   13324:	bl	65d0 <_Py_Dealloc@plt>
   13328:	b	132dc <PyFloat_FromString@plt+0xc84c>
   1332c:	nop
   13330:	stp	x29, x30, [sp, #-80]!
   13334:	adrp	x2, 5f000 <PyInit__decimal@@Base+0x44a80>
   13338:	mov	x29, sp
   1333c:	stp	x19, x20, [sp, #16]
   13340:	mov	x19, x0
   13344:	ldr	x0, [x2, #1808]
   13348:	add	x2, sp, #0x48
   1334c:	stp	x21, x22, [sp, #32]
   13350:	mov	x21, x1
   13354:	mov	x22, #0x0                   	// #0
   13358:	mov	x1, #0x0                   	// #0
   1335c:	str	wzr, [sp, #68]
   13360:	bl	6740 <PyContextVar_Get@plt>
   13364:	tbnz	w0, #31, 133d0 <PyFloat_FromString@plt+0xc940>
   13368:	ldr	x20, [sp, #72]
   1336c:	str	x23, [sp, #48]
   13370:	cbz	x20, 13460 <PyFloat_FromString@plt+0xc9d0>
   13374:	ldr	x0, [x20]
   13378:	sub	x0, x0, #0x1
   1337c:	str	x0, [x20]
   13380:	cbz	x0, 13454 <PyFloat_FromString@plt+0xc9c4>
   13384:	ldr	x0, [x19, #8]
   13388:	adrp	x23, 5d000 <PyInit__decimal@@Base+0x42a80>
   1338c:	add	x22, x23, #0x320
   13390:	add	x22, x22, #0x1a0
   13394:	cmp	x0, x22
   13398:	b.eq	133e4 <PyFloat_FromString@plt+0xc954>  // b.none
   1339c:	mov	x1, x22
   133a0:	bl	69c0 <PyType_IsSubtype@plt>
   133a4:	cbnz	w0, 133e4 <PyFloat_FromString@plt+0xc954>
   133a8:	ldr	x0, [x19, #8]
   133ac:	ldr	x0, [x0, #168]
   133b0:	tbnz	w0, #24, 13528 <PyFloat_FromString@plt+0xca98>
   133b4:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
   133b8:	ldr	x23, [sp, #48]
   133bc:	ldr	x0, [x0, #3912]
   133c0:	mov	x22, x0
   133c4:	ldr	x1, [x0]
   133c8:	add	x1, x1, #0x1
   133cc:	str	x1, [x0]
   133d0:	mov	x0, x22
   133d4:	ldp	x19, x20, [sp, #16]
   133d8:	ldp	x21, x22, [sp, #32]
   133dc:	ldp	x29, x30, [sp], #80
   133e0:	ret
   133e4:	ldr	x0, [x19]
   133e8:	add	x0, x0, #0x1
   133ec:	str	x0, [x19]
   133f0:	ldr	x0, [x21, #8]
   133f4:	add	x22, x23, #0x320
   133f8:	add	x22, x22, #0x1a0
   133fc:	cmp	x0, x22
   13400:	b.eq	13488 <PyFloat_FromString@plt+0xc9f8>  // b.none
   13404:	mov	x1, x22
   13408:	bl	69c0 <PyType_IsSubtype@plt>
   1340c:	cbnz	w0, 13488 <PyFloat_FromString@plt+0xc9f8>
   13410:	ldr	x0, [x21, #8]
   13414:	ldr	x0, [x0, #168]
   13418:	tbnz	w0, #24, 13508 <PyFloat_FromString@plt+0xca78>
   1341c:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
   13420:	ldr	x0, [x0, #3912]
   13424:	mov	x22, x0
   13428:	ldr	x1, [x0]
   1342c:	add	x1, x1, #0x1
   13430:	str	x1, [x0]
   13434:	ldr	x0, [x19]
   13438:	sub	x0, x0, #0x1
   1343c:	str	x0, [x19]
   13440:	cbnz	x0, 134f0 <PyFloat_FromString@plt+0xca60>
   13444:	mov	x0, x19
   13448:	bl	65d0 <_Py_Dealloc@plt>
   1344c:	ldr	x23, [sp, #48]
   13450:	b	133d0 <PyFloat_FromString@plt+0xc940>
   13454:	mov	x0, x20
   13458:	bl	65d0 <_Py_Dealloc@plt>
   1345c:	b	13384 <PyFloat_FromString@plt+0xc8f4>
   13460:	bl	7320 <PyFloat_FromString@plt+0x890>
   13464:	mov	x20, x0
   13468:	cbnz	x0, 13374 <PyFloat_FromString@plt+0xc8e4>
   1346c:	mov	x22, #0x0                   	// #0
   13470:	mov	x0, x22
   13474:	ldp	x19, x20, [sp, #16]
   13478:	ldp	x21, x22, [sp, #32]
   1347c:	ldr	x23, [sp, #48]
   13480:	ldp	x29, x30, [sp], #80
   13484:	ret
   13488:	ldr	x0, [x21]
   1348c:	add	x0, x0, #0x1
   13490:	str	x0, [x21]
   13494:	add	x0, x23, #0x320
   13498:	add	x0, x0, #0x1a0
   1349c:	bl	6c60 <PyFloat_FromString@plt+0x1d0>
   134a0:	mov	x22, x0
   134a4:	cbz	x0, 1355c <PyFloat_FromString@plt+0xcacc>
   134a8:	add	x0, x0, #0x18
   134ac:	add	x4, sp, #0x44
   134b0:	add	x3, x20, #0x10
   134b4:	add	x2, x21, #0x18
   134b8:	add	x1, x19, #0x18
   134bc:	bl	2e5c0 <PyInit__decimal@@Base+0x14040>
   134c0:	ldr	x0, [x19]
   134c4:	sub	x0, x0, #0x1
   134c8:	str	x0, [x19]
   134cc:	cbz	x0, 13550 <PyFloat_FromString@plt+0xcac0>
   134d0:	ldr	x0, [x21]
   134d4:	sub	x0, x0, #0x1
   134d8:	str	x0, [x21]
   134dc:	cbz	x0, 13544 <PyFloat_FromString@plt+0xcab4>
   134e0:	ldr	w1, [sp, #68]
   134e4:	mov	x0, x20
   134e8:	bl	7f90 <PyFloat_FromString@plt+0x1500>
   134ec:	cbnz	w0, 1358c <PyFloat_FromString@plt+0xcafc>
   134f0:	mov	x0, x22
   134f4:	ldp	x19, x20, [sp, #16]
   134f8:	ldp	x21, x22, [sp, #32]
   134fc:	ldr	x23, [sp, #48]
   13500:	ldp	x29, x30, [sp], #80
   13504:	ret
   13508:	mov	x1, x21
   1350c:	mov	x0, x22
   13510:	mov	x2, x20
   13514:	bl	82f8 <PyFloat_FromString@plt+0x1868>
   13518:	mov	x21, x0
   1351c:	cbnz	x0, 13494 <PyFloat_FromString@plt+0xca04>
   13520:	mov	x22, #0x0                   	// #0
   13524:	b	13434 <PyFloat_FromString@plt+0xc9a4>
   13528:	mov	x1, x19
   1352c:	mov	x0, x22
   13530:	mov	x2, x20
   13534:	bl	82f8 <PyFloat_FromString@plt+0x1868>
   13538:	mov	x19, x0
   1353c:	cbnz	x0, 133f0 <PyFloat_FromString@plt+0xc960>
   13540:	b	1346c <PyFloat_FromString@plt+0xc9dc>
   13544:	mov	x0, x21
   13548:	bl	65d0 <_Py_Dealloc@plt>
   1354c:	b	134e0 <PyFloat_FromString@plt+0xca50>
   13550:	mov	x0, x19
   13554:	bl	65d0 <_Py_Dealloc@plt>
   13558:	b	134d0 <PyFloat_FromString@plt+0xca40>
   1355c:	ldr	x0, [x19]
   13560:	sub	x0, x0, #0x1
   13564:	str	x0, [x19]
   13568:	cbz	x0, 135b0 <PyFloat_FromString@plt+0xcb20>
   1356c:	ldr	x0, [x21]
   13570:	sub	x0, x0, #0x1
   13574:	str	x0, [x21]
   13578:	cbnz	x0, 1346c <PyFloat_FromString@plt+0xc9dc>
   1357c:	mov	x0, x21
   13580:	bl	65d0 <_Py_Dealloc@plt>
   13584:	ldr	x23, [sp, #48]
   13588:	b	133d0 <PyFloat_FromString@plt+0xc940>
   1358c:	ldr	x0, [x22]
   13590:	sub	x0, x0, #0x1
   13594:	str	x0, [x22]
   13598:	cbnz	x0, 1346c <PyFloat_FromString@plt+0xc9dc>
   1359c:	mov	x0, x22
   135a0:	mov	x22, #0x0                   	// #0
   135a4:	bl	65d0 <_Py_Dealloc@plt>
   135a8:	ldr	x23, [sp, #48]
   135ac:	b	133d0 <PyFloat_FromString@plt+0xc940>
   135b0:	mov	x0, x19
   135b4:	bl	65d0 <_Py_Dealloc@plt>
   135b8:	b	1356c <PyFloat_FromString@plt+0xcadc>
   135bc:	nop
   135c0:	stp	x29, x30, [sp, #-48]!
   135c4:	adrp	x3, 5d000 <PyInit__decimal@@Base+0x42a80>
   135c8:	add	x3, x3, #0x9a0
   135cc:	mov	x29, sp
   135d0:	stp	x19, x20, [sp, #16]
   135d4:	adrp	x19, 5c000 <PyInit__decimal@@Base+0x41a80>
   135d8:	mov	x20, x0
   135dc:	ldr	x19, [x19, #4008]
   135e0:	mov	x0, x1
   135e4:	add	x3, x3, #0x2d0
   135e8:	mov	x1, x2
   135ec:	add	x4, sp, #0x20
   135f0:	adrp	x2, 3b000 <PyInit__decimal@@Base+0x20a80>
   135f4:	add	x2, x2, #0xfd8
   135f8:	str	x19, [sp, #32]
   135fc:	bl	6520 <PyArg_ParseTupleAndKeywords@plt>
   13600:	cbz	w0, 13668 <PyFloat_FromString@plt+0xcbd8>
   13604:	ldr	x2, [sp, #32]
   13608:	cmp	x2, x19
   1360c:	b.eq	13678 <PyFloat_FromString@plt+0xcbe8>  // b.none
   13610:	ldr	x0, [x2, #8]
   13614:	adrp	x1, 5d000 <PyInit__decimal@@Base+0x42a80>
   13618:	add	x1, x1, #0x320
   1361c:	cmp	x0, x1
   13620:	b.eq	13630 <PyFloat_FromString@plt+0xcba0>  // b.none
   13624:	bl	69c0 <PyType_IsSubtype@plt>
   13628:	cbz	w0, 1364c <PyFloat_FromString@plt+0xcbbc>
   1362c:	ldr	x2, [sp, #32]
   13630:	add	x1, x2, #0x10
   13634:	add	x0, x20, #0x18
   13638:	bl	2ce90 <PyInit__decimal@@Base+0x12910>
   1363c:	bl	6960 <PyUnicode_FromString@plt>
   13640:	ldp	x19, x20, [sp, #16]
   13644:	ldp	x29, x30, [sp], #48
   13648:	ret
   1364c:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
   13650:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
   13654:	add	x1, x1, #0x88
   13658:	ldr	x0, [x0, #3936]
   1365c:	ldr	x0, [x0]
   13660:	bl	6650 <PyErr_SetString@plt>
   13664:	nop
   13668:	mov	x0, #0x0                   	// #0
   1366c:	ldp	x19, x20, [sp, #16]
   13670:	ldp	x29, x30, [sp], #48
   13674:	ret
   13678:	adrp	x0, 5f000 <PyInit__decimal@@Base+0x44a80>
   1367c:	add	x2, sp, #0x28
   13680:	mov	x1, #0x0                   	// #0
   13684:	ldr	x0, [x0, #1808]
   13688:	bl	6740 <PyContextVar_Get@plt>
   1368c:	tbnz	w0, #31, 13668 <PyFloat_FromString@plt+0xcbd8>
   13690:	ldr	x0, [sp, #40]
   13694:	cbz	x0, 136b8 <PyFloat_FromString@plt+0xcc28>
   13698:	str	x0, [sp, #32]
   1369c:	ldr	x1, [x0]
   136a0:	sub	x1, x1, #0x1
   136a4:	str	x1, [x0]
   136a8:	cbnz	x1, 1362c <PyFloat_FromString@plt+0xcb9c>
   136ac:	bl	65d0 <_Py_Dealloc@plt>
   136b0:	ldr	x2, [sp, #32]
   136b4:	b	13630 <PyFloat_FromString@plt+0xcba0>
   136b8:	bl	7320 <PyFloat_FromString@plt+0x890>
   136bc:	str	x0, [sp, #32]
   136c0:	cbnz	x0, 1369c <PyFloat_FromString@plt+0xcc0c>
   136c4:	mov	x0, #0x0                   	// #0
   136c8:	b	1366c <PyFloat_FromString@plt+0xcbdc>
   136cc:	nop
   136d0:	stp	x29, x30, [sp, #-128]!
   136d4:	adrp	x3, 5d000 <PyInit__decimal@@Base+0x42a80>
   136d8:	add	x3, x3, #0x9a0
   136dc:	mov	x29, sp
   136e0:	stp	x19, x20, [sp, #16]
   136e4:	adrp	x19, 5c000 <PyInit__decimal@@Base+0x41a80>
   136e8:	mov	x20, x0
   136ec:	ldr	x19, [x19, #4008]
   136f0:	mov	x0, x1
   136f4:	add	x3, x3, #0x2e0
   136f8:	mov	x1, x2
   136fc:	add	x5, sp, #0x48
   13700:	adrp	x2, 3c000 <PyInit__decimal@@Base+0x21a80>
   13704:	add	x4, sp, #0x40
   13708:	add	x2, x2, #0x2b0
   1370c:	stp	xzr, x19, [sp, #64]
   13710:	bl	6520 <PyArg_ParseTupleAndKeywords@plt>
   13714:	cbz	w0, 13874 <PyFloat_FromString@plt+0xcde4>
   13718:	stp	x21, x22, [sp, #32]
   1371c:	ldr	x21, [sp, #72]
   13720:	cmp	x21, x19
   13724:	b.eq	13918 <PyFloat_FromString@plt+0xce88>  // b.none
   13728:	ldr	x0, [x21, #8]
   1372c:	adrp	x1, 5d000 <PyInit__decimal@@Base+0x42a80>
   13730:	add	x1, x1, #0x320
   13734:	cmp	x0, x1
   13738:	b.eq	13748 <PyFloat_FromString@plt+0xccb8>  // b.none
   1373c:	bl	69c0 <PyType_IsSubtype@plt>
   13740:	cbz	w0, 139bc <PyFloat_FromString@plt+0xcf2c>
   13744:	ldr	x21, [sp, #72]
   13748:	ldr	x22, [sp, #64]
   1374c:	cbz	x22, 138ac <PyFloat_FromString@plt+0xce1c>
   13750:	ldr	x0, [x22, #8]
   13754:	adrp	x19, 5d000 <PyInit__decimal@@Base+0x42a80>
   13758:	add	x1, x19, #0x320
   1375c:	add	x1, x1, #0x1a0
   13760:	cmp	x0, x1
   13764:	b.eq	137cc <PyFloat_FromString@plt+0xcd3c>  // b.none
   13768:	bl	69c0 <PyType_IsSubtype@plt>
   1376c:	cbnz	w0, 137cc <PyFloat_FromString@plt+0xcd3c>
   13770:	ldr	x0, [x22, #8]
   13774:	ldr	x1, [x0, #168]
   13778:	tbnz	w1, #28, 13958 <PyFloat_FromString@plt+0xcec8>
   1377c:	tbnz	w1, #24, 139a0 <PyFloat_FromString@plt+0xcf10>
   13780:	tst	x1, #0x6000000
   13784:	b.ne	13824 <PyFloat_FromString@plt+0xcd94>  // b.any
   13788:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41a80>
   1378c:	ldr	x1, [x1, #3864]
   13790:	cmp	x0, x1
   13794:	b.eq	137a0 <PyFloat_FromString@plt+0xcd10>  // b.none
   13798:	bl	69c0 <PyType_IsSubtype@plt>
   1379c:	cbz	w0, 13a08 <PyFloat_FromString@plt+0xcf78>
   137a0:	mov	x0, x21
   137a4:	mov	w1, #0x400                 	// #1024
   137a8:	bl	7f90 <PyFloat_FromString@plt+0x1500>
   137ac:	cbnz	w0, 13870 <PyFloat_FromString@plt+0xcde0>
   137b0:	mov	x2, x21
   137b4:	mov	x1, x22
   137b8:	mov	x0, x20
   137bc:	bl	8430 <PyFloat_FromString@plt+0x19a0>
   137c0:	mov	x19, x0
   137c4:	ldp	x21, x22, [sp, #32]
   137c8:	b	13814 <PyFloat_FromString@plt+0xcd84>
   137cc:	add	x19, x19, #0x320
   137d0:	str	wzr, [sp, #80]
   137d4:	add	x19, x19, #0x1a0
   137d8:	cmp	x20, x19
   137dc:	b.eq	13888 <PyFloat_FromString@plt+0xcdf8>  // b.none
   137e0:	mov	x0, x20
   137e4:	bl	6c60 <PyFloat_FromString@plt+0x1d0>
   137e8:	mov	x19, x0
   137ec:	cbz	x0, 13900 <PyFloat_FromString@plt+0xce70>
   137f0:	add	x1, x22, #0x18
   137f4:	add	x2, sp, #0x50
   137f8:	add	x0, x0, #0x18
   137fc:	bl	28fe0 <PyInit__decimal@@Base+0xea60>
   13800:	ldr	w1, [sp, #80]
   13804:	mov	x0, x21
   13808:	bl	7f90 <PyFloat_FromString@plt+0x1500>
   1380c:	cbnz	w0, 138f0 <PyFloat_FromString@plt+0xce60>
   13810:	ldp	x21, x22, [sp, #32]
   13814:	mov	x0, x19
   13818:	ldp	x19, x20, [sp, #16]
   1381c:	ldp	x29, x30, [sp], #128
   13820:	ret
   13824:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41a80>
   13828:	mov	x0, x22
   1382c:	adrp	x2, 3b000 <PyInit__decimal@@Base+0x20a80>
   13830:	add	x2, x2, #0xfe0
   13834:	ldr	x1, [x1, #3936]
   13838:	ldr	x1, [x1]
   1383c:	bl	7078 <PyFloat_FromString@plt+0x5e8>
   13840:	mov	x19, x0
   13844:	cbz	x0, 13870 <PyFloat_FromString@plt+0xcde0>
   13848:	bl	76f8 <PyFloat_FromString@plt+0xc68>
   1384c:	mov	x22, x0
   13850:	ldr	x1, [x19]
   13854:	sub	x0, x1, #0x1
   13858:	str	x0, [x19]
   1385c:	cbnz	x0, 13868 <PyFloat_FromString@plt+0xcdd8>
   13860:	mov	x0, x19
   13864:	bl	65d0 <_Py_Dealloc@plt>
   13868:	cbnz	x22, 13970 <PyFloat_FromString@plt+0xcee0>
   1386c:	nop
   13870:	ldp	x21, x22, [sp, #32]
   13874:	mov	x19, #0x0                   	// #0
   13878:	mov	x0, x19
   1387c:	ldp	x19, x20, [sp, #16]
   13880:	ldp	x29, x30, [sp], #128
   13884:	ret
   13888:	ldr	x0, [x22, #8]
   1388c:	cmp	x0, x20
   13890:	b.ne	137e0 <PyFloat_FromString@plt+0xcd50>  // b.any
   13894:	ldr	x0, [x22]
   13898:	mov	x19, x22
   1389c:	add	x0, x0, #0x1
   138a0:	str	x0, [x22]
   138a4:	ldp	x21, x22, [sp, #32]
   138a8:	b	13814 <PyFloat_FromString@plt+0xcd84>
   138ac:	mov	x0, x20
   138b0:	str	wzr, [sp, #60]
   138b4:	bl	6c60 <PyFloat_FromString@plt+0x1d0>
   138b8:	mov	x19, x0
   138bc:	cbz	x0, 13900 <PyFloat_FromString@plt+0xce70>
   138c0:	add	x20, sp, #0x50
   138c4:	mov	x0, x20
   138c8:	bl	1d4d0 <PyInit__decimal@@Base+0x2f50>
   138cc:	add	x0, x19, #0x18
   138d0:	mov	x1, #0x0                   	// #0
   138d4:	mov	x2, x20
   138d8:	add	x3, sp, #0x3c
   138dc:	bl	2bba8 <PyInit__decimal@@Base+0x11628>
   138e0:	ldr	w1, [sp, #60]
   138e4:	mov	x0, x21
   138e8:	bl	7f90 <PyFloat_FromString@plt+0x1500>
   138ec:	cbz	w0, 13810 <PyFloat_FromString@plt+0xcd80>
   138f0:	ldr	x0, [x19]
   138f4:	sub	x0, x0, #0x1
   138f8:	str	x0, [x19]
   138fc:	cbz	x0, 139e0 <PyFloat_FromString@plt+0xcf50>
   13900:	mov	x19, #0x0                   	// #0
   13904:	mov	x0, x19
   13908:	ldp	x19, x20, [sp, #16]
   1390c:	ldp	x21, x22, [sp, #32]
   13910:	ldp	x29, x30, [sp], #128
   13914:	ret
   13918:	adrp	x0, 5f000 <PyInit__decimal@@Base+0x44a80>
   1391c:	add	x2, sp, #0x50
   13920:	mov	x1, #0x0                   	// #0
   13924:	ldr	x0, [x0, #1808]
   13928:	bl	6740 <PyContextVar_Get@plt>
   1392c:	tbnz	w0, #31, 13900 <PyFloat_FromString@plt+0xce70>
   13930:	ldr	x0, [sp, #80]
   13934:	cbz	x0, 139f4 <PyFloat_FromString@plt+0xcf64>
   13938:	str	x0, [sp, #72]
   1393c:	ldr	x1, [x0]
   13940:	sub	x1, x1, #0x1
   13944:	str	x1, [x0]
   13948:	cbnz	x1, 13744 <PyFloat_FromString@plt+0xccb4>
   1394c:	bl	65d0 <_Py_Dealloc@plt>
   13950:	ldr	x21, [sp, #72]
   13954:	b	13748 <PyFloat_FromString@plt+0xccb8>
   13958:	mov	x0, x22
   1395c:	mov	w2, #0x1                   	// #1
   13960:	mov	w1, w2
   13964:	bl	9f58 <PyFloat_FromString@plt+0x34c8>
   13968:	mov	x22, x0
   1396c:	cbz	x0, 13870 <PyFloat_FromString@plt+0xcde0>
   13970:	mov	x2, x21
   13974:	mov	x1, x22
   13978:	mov	x0, x20
   1397c:	bl	8af0 <PyFloat_FromString@plt+0x2060>
   13980:	mov	x19, x0
   13984:	mov	x0, x22
   13988:	bl	6560 <PyMem_Free@plt>
   1398c:	mov	x0, x19
   13990:	ldp	x19, x20, [sp, #16]
   13994:	ldp	x21, x22, [sp, #32]
   13998:	ldp	x29, x30, [sp], #128
   1399c:	ret
   139a0:	mov	x2, x21
   139a4:	mov	x1, x22
   139a8:	mov	x0, x20
   139ac:	bl	82f8 <PyFloat_FromString@plt+0x1868>
   139b0:	mov	x19, x0
   139b4:	ldp	x21, x22, [sp, #32]
   139b8:	b	13814 <PyFloat_FromString@plt+0xcd84>
   139bc:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
   139c0:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
   139c4:	mov	x19, #0x0                   	// #0
   139c8:	add	x1, x1, #0x88
   139cc:	ldr	x0, [x0, #3936]
   139d0:	ldr	x0, [x0]
   139d4:	bl	6650 <PyErr_SetString@plt>
   139d8:	ldp	x21, x22, [sp, #32]
   139dc:	b	13814 <PyFloat_FromString@plt+0xcd84>
   139e0:	mov	x0, x19
   139e4:	mov	x19, #0x0                   	// #0
   139e8:	bl	65d0 <_Py_Dealloc@plt>
   139ec:	ldp	x21, x22, [sp, #32]
   139f0:	b	13814 <PyFloat_FromString@plt+0xcd84>
   139f4:	bl	7320 <PyFloat_FromString@plt+0x890>
   139f8:	str	x0, [sp, #72]
   139fc:	cbnz	x0, 1393c <PyFloat_FromString@plt+0xceac>
   13a00:	ldp	x21, x22, [sp, #32]
   13a04:	b	13874 <PyFloat_FromString@plt+0xcde4>
   13a08:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
   13a0c:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
   13a10:	ldr	x2, [x22, #8]
   13a14:	add	x1, x1, #0x8
   13a18:	ldr	x0, [x0, #3936]
   13a1c:	mov	x19, #0x0                   	// #0
   13a20:	ldr	x2, [x2, #24]
   13a24:	ldr	x0, [x0]
   13a28:	bl	6a10 <PyErr_Format@plt>
   13a2c:	ldp	x21, x22, [sp, #32]
   13a30:	b	13814 <PyFloat_FromString@plt+0xcd84>
   13a34:	nop
   13a38:	stp	x29, x30, [sp, #-48]!
   13a3c:	adrp	x3, 5d000 <PyInit__decimal@@Base+0x42a80>
   13a40:	add	x3, x3, #0x9a0
   13a44:	mov	x29, sp
   13a48:	stp	x19, x20, [sp, #16]
   13a4c:	adrp	x19, 5c000 <PyInit__decimal@@Base+0x41a80>
   13a50:	mov	x20, x0
   13a54:	ldr	x19, [x19, #4008]
   13a58:	mov	x0, x1
   13a5c:	add	x3, x3, #0x2f8
   13a60:	mov	x1, x2
   13a64:	add	x4, sp, #0x20
   13a68:	adrp	x2, 3b000 <PyInit__decimal@@Base+0x20a80>
   13a6c:	add	x2, x2, #0xfd8
   13a70:	str	x19, [sp, #32]
   13a74:	bl	6520 <PyArg_ParseTupleAndKeywords@plt>
   13a78:	cbz	w0, 13b18 <PyFloat_FromString@plt+0xd088>
   13a7c:	ldr	x2, [sp, #32]
   13a80:	cmp	x2, x19
   13a84:	b.eq	13b28 <PyFloat_FromString@plt+0xd098>  // b.none
   13a88:	ldr	x0, [x2, #8]
   13a8c:	adrp	x1, 5d000 <PyInit__decimal@@Base+0x42a80>
   13a90:	add	x1, x1, #0x320
   13a94:	cmp	x0, x1
   13a98:	b.eq	13aa8 <PyFloat_FromString@plt+0xd018>  // b.none
   13a9c:	bl	69c0 <PyType_IsSubtype@plt>
   13aa0:	cbz	w0, 13b00 <PyFloat_FromString@plt+0xd070>
   13aa4:	ldr	x2, [sp, #32]
   13aa8:	add	x1, x2, #0x10
   13aac:	add	x0, x20, #0x18
   13ab0:	bl	28058 <PyInit__decimal@@Base+0xdad8>
   13ab4:	cbnz	w0, 13adc <PyFloat_FromString@plt+0xd04c>
   13ab8:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41a80>
   13abc:	ldp	x19, x20, [sp, #16]
   13ac0:	ldr	x1, [x1, #3976]
   13ac4:	mov	x0, x1
   13ac8:	ldr	x2, [x1]
   13acc:	add	x2, x2, #0x1
   13ad0:	str	x2, [x1]
   13ad4:	ldp	x29, x30, [sp], #48
   13ad8:	ret
   13adc:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41a80>
   13ae0:	ldp	x19, x20, [sp, #16]
   13ae4:	ldr	x1, [x1, #4024]
   13ae8:	mov	x0, x1
   13aec:	ldr	x2, [x1]
   13af0:	add	x2, x2, #0x1
   13af4:	str	x2, [x1]
   13af8:	ldp	x29, x30, [sp], #48
   13afc:	ret
   13b00:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
   13b04:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
   13b08:	add	x1, x1, #0x88
   13b0c:	ldr	x0, [x0, #3936]
   13b10:	ldr	x0, [x0]
   13b14:	bl	6650 <PyErr_SetString@plt>
   13b18:	mov	x0, #0x0                   	// #0
   13b1c:	ldp	x19, x20, [sp, #16]
   13b20:	ldp	x29, x30, [sp], #48
   13b24:	ret
   13b28:	adrp	x0, 5f000 <PyInit__decimal@@Base+0x44a80>
   13b2c:	add	x2, sp, #0x28
   13b30:	mov	x1, #0x0                   	// #0
   13b34:	ldr	x0, [x0, #1808]
   13b38:	bl	6740 <PyContextVar_Get@plt>
   13b3c:	tbnz	w0, #31, 13b18 <PyFloat_FromString@plt+0xd088>
   13b40:	ldr	x0, [sp, #40]
   13b44:	cbz	x0, 13b68 <PyFloat_FromString@plt+0xd0d8>
   13b48:	str	x0, [sp, #32]
   13b4c:	ldr	x1, [x0]
   13b50:	sub	x1, x1, #0x1
   13b54:	str	x1, [x0]
   13b58:	cbnz	x1, 13aa4 <PyFloat_FromString@plt+0xd014>
   13b5c:	bl	65d0 <_Py_Dealloc@plt>
   13b60:	ldr	x2, [sp, #32]
   13b64:	b	13aa8 <PyFloat_FromString@plt+0xd018>
   13b68:	bl	7320 <PyFloat_FromString@plt+0x890>
   13b6c:	str	x0, [sp, #32]
   13b70:	cbnz	x0, 13b4c <PyFloat_FromString@plt+0xd0bc>
   13b74:	mov	x0, #0x0                   	// #0
   13b78:	b	13b1c <PyFloat_FromString@plt+0xd08c>
   13b7c:	nop
   13b80:	stp	x29, x30, [sp, #-48]!
   13b84:	adrp	x3, 5d000 <PyInit__decimal@@Base+0x42a80>
   13b88:	add	x3, x3, #0x9a0
   13b8c:	mov	x29, sp
   13b90:	stp	x19, x20, [sp, #16]
   13b94:	adrp	x19, 5c000 <PyInit__decimal@@Base+0x41a80>
   13b98:	mov	x20, x0
   13b9c:	ldr	x19, [x19, #4008]
   13ba0:	mov	x0, x1
   13ba4:	add	x3, x3, #0x308
   13ba8:	mov	x1, x2
   13bac:	add	x4, sp, #0x20
   13bb0:	adrp	x2, 3b000 <PyInit__decimal@@Base+0x20a80>
   13bb4:	add	x2, x2, #0xfd8
   13bb8:	str	x19, [sp, #32]
   13bbc:	bl	6520 <PyArg_ParseTupleAndKeywords@plt>
   13bc0:	cbz	w0, 13c60 <PyFloat_FromString@plt+0xd1d0>
   13bc4:	ldr	x2, [sp, #32]
   13bc8:	cmp	x2, x19
   13bcc:	b.eq	13c70 <PyFloat_FromString@plt+0xd1e0>  // b.none
   13bd0:	ldr	x0, [x2, #8]
   13bd4:	adrp	x1, 5d000 <PyInit__decimal@@Base+0x42a80>
   13bd8:	add	x1, x1, #0x320
   13bdc:	cmp	x0, x1
   13be0:	b.eq	13bf0 <PyFloat_FromString@plt+0xd160>  // b.none
   13be4:	bl	69c0 <PyType_IsSubtype@plt>
   13be8:	cbz	w0, 13c48 <PyFloat_FromString@plt+0xd1b8>
   13bec:	ldr	x2, [sp, #32]
   13bf0:	add	x1, x2, #0x10
   13bf4:	add	x0, x20, #0x18
   13bf8:	bl	280a8 <PyInit__decimal@@Base+0xdb28>
   13bfc:	cbnz	w0, 13c24 <PyFloat_FromString@plt+0xd194>
   13c00:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41a80>
   13c04:	ldp	x19, x20, [sp, #16]
   13c08:	ldr	x1, [x1, #3976]
   13c0c:	mov	x0, x1
   13c10:	ldr	x2, [x1]
   13c14:	add	x2, x2, #0x1
   13c18:	str	x2, [x1]
   13c1c:	ldp	x29, x30, [sp], #48
   13c20:	ret
   13c24:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41a80>
   13c28:	ldp	x19, x20, [sp, #16]
   13c2c:	ldr	x1, [x1, #4024]
   13c30:	mov	x0, x1
   13c34:	ldr	x2, [x1]
   13c38:	add	x2, x2, #0x1
   13c3c:	str	x2, [x1]
   13c40:	ldp	x29, x30, [sp], #48
   13c44:	ret
   13c48:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
   13c4c:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
   13c50:	add	x1, x1, #0x88
   13c54:	ldr	x0, [x0, #3936]
   13c58:	ldr	x0, [x0]
   13c5c:	bl	6650 <PyErr_SetString@plt>
   13c60:	mov	x0, #0x0                   	// #0
   13c64:	ldp	x19, x20, [sp, #16]
   13c68:	ldp	x29, x30, [sp], #48
   13c6c:	ret
   13c70:	adrp	x0, 5f000 <PyInit__decimal@@Base+0x44a80>
   13c74:	add	x2, sp, #0x28
   13c78:	mov	x1, #0x0                   	// #0
   13c7c:	ldr	x0, [x0, #1808]
   13c80:	bl	6740 <PyContextVar_Get@plt>
   13c84:	tbnz	w0, #31, 13c60 <PyFloat_FromString@plt+0xd1d0>
   13c88:	ldr	x0, [sp, #40]
   13c8c:	cbz	x0, 13cb0 <PyFloat_FromString@plt+0xd220>
   13c90:	str	x0, [sp, #32]
   13c94:	ldr	x1, [x0]
   13c98:	sub	x1, x1, #0x1
   13c9c:	str	x1, [x0]
   13ca0:	cbnz	x1, 13bec <PyFloat_FromString@plt+0xd15c>
   13ca4:	bl	65d0 <_Py_Dealloc@plt>
   13ca8:	ldr	x2, [sp, #32]
   13cac:	b	13bf0 <PyFloat_FromString@plt+0xd160>
   13cb0:	bl	7320 <PyFloat_FromString@plt+0x890>
   13cb4:	str	x0, [sp, #32]
   13cb8:	cbnz	x0, 13c94 <PyFloat_FromString@plt+0xd204>
   13cbc:	mov	x0, #0x0                   	// #0
   13cc0:	b	13c64 <PyFloat_FromString@plt+0xd1d4>
   13cc4:	nop
   13cc8:	stp	x29, x30, [sp, #-48]!
   13ccc:	adrp	x3, 5d000 <PyInit__decimal@@Base+0x42a80>
   13cd0:	add	x3, x3, #0x9a0
   13cd4:	mov	x29, sp
   13cd8:	stp	x19, x20, [sp, #16]
   13cdc:	adrp	x19, 5c000 <PyInit__decimal@@Base+0x41a80>
   13ce0:	mov	x20, x0
   13ce4:	ldr	x19, [x19, #4008]
   13ce8:	mov	x0, x1
   13cec:	add	x3, x3, #0x318
   13cf0:	mov	x1, x2
   13cf4:	add	x4, sp, #0x20
   13cf8:	adrp	x2, 3b000 <PyInit__decimal@@Base+0x20a80>
   13cfc:	add	x2, x2, #0xfd8
   13d00:	str	x19, [sp, #32]
   13d04:	bl	6520 <PyArg_ParseTupleAndKeywords@plt>
   13d08:	cbz	w0, 13d88 <PyFloat_FromString@plt+0xd2f8>
   13d0c:	ldr	x2, [sp, #32]
   13d10:	cmp	x2, x19
   13d14:	b.eq	13d9c <PyFloat_FromString@plt+0xd30c>  // b.none
   13d18:	ldr	x0, [x2, #8]
   13d1c:	adrp	x1, 5d000 <PyInit__decimal@@Base+0x42a80>
   13d20:	add	x1, x1, #0x320
   13d24:	add	x19, sp, #0x28
   13d28:	cmp	x0, x1
   13d2c:	b.eq	13d40 <PyFloat_FromString@plt+0xd2b0>  // b.none
   13d30:	bl	69c0 <PyType_IsSubtype@plt>
   13d34:	cbz	w0, 13dfc <PyFloat_FromString@plt+0xd36c>
   13d38:	ldr	x2, [sp, #32]
   13d3c:	add	x19, sp, #0x28
   13d40:	ldr	w2, [x2, #80]
   13d44:	add	x1, x20, #0x18
   13d48:	mov	x0, x19
   13d4c:	bl	240b0 <PyInit__decimal@@Base+0x9b30>
   13d50:	mov	x1, x0
   13d54:	tbnz	x0, #63, 13d84 <PyFloat_FromString@plt+0xd2f4>
   13d58:	ldr	x0, [sp, #40]
   13d5c:	bl	70c0 <PyFloat_FromString@plt+0x630>
   13d60:	mov	x19, x0
   13d64:	adrp	x1, 5f000 <PyInit__decimal@@Base+0x44a80>
   13d68:	ldr	x0, [sp, #40]
   13d6c:	ldr	x1, [x1, #1704]
   13d70:	blr	x1
   13d74:	mov	x0, x19
   13d78:	ldp	x19, x20, [sp, #16]
   13d7c:	ldp	x29, x30, [sp], #48
   13d80:	ret
   13d84:	bl	65e0 <PyErr_NoMemory@plt>
   13d88:	mov	x19, #0x0                   	// #0
   13d8c:	mov	x0, x19
   13d90:	ldp	x19, x20, [sp, #16]
   13d94:	ldp	x29, x30, [sp], #48
   13d98:	ret
   13d9c:	adrp	x0, 5f000 <PyInit__decimal@@Base+0x44a80>
   13da0:	add	x19, sp, #0x28
   13da4:	mov	x2, x19
   13da8:	mov	x1, #0x0                   	// #0
   13dac:	ldr	x0, [x0, #1808]
   13db0:	bl	6740 <PyContextVar_Get@plt>
   13db4:	tbnz	w0, #31, 13d88 <PyFloat_FromString@plt+0xd2f8>
   13db8:	ldr	x0, [sp, #40]
   13dbc:	cbz	x0, 13de8 <PyFloat_FromString@plt+0xd358>
   13dc0:	str	x0, [sp, #32]
   13dc4:	ldr	x1, [x0]
   13dc8:	sub	x1, x1, #0x1
   13dcc:	str	x1, [x0]
   13dd0:	cbz	x1, 13ddc <PyFloat_FromString@plt+0xd34c>
   13dd4:	ldr	x2, [sp, #32]
   13dd8:	b	13d40 <PyFloat_FromString@plt+0xd2b0>
   13ddc:	bl	65d0 <_Py_Dealloc@plt>
   13de0:	ldr	x2, [sp, #32]
   13de4:	b	13d40 <PyFloat_FromString@plt+0xd2b0>
   13de8:	bl	7320 <PyFloat_FromString@plt+0x890>
   13dec:	str	x0, [sp, #32]
   13df0:	cbnz	x0, 13dc4 <PyFloat_FromString@plt+0xd334>
   13df4:	mov	x19, #0x0                   	// #0
   13df8:	b	13d8c <PyFloat_FromString@plt+0xd2fc>
   13dfc:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
   13e00:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
   13e04:	mov	x19, #0x0                   	// #0
   13e08:	add	x1, x1, #0x88
   13e0c:	ldr	x0, [x0, #3936]
   13e10:	ldr	x0, [x0]
   13e14:	bl	6650 <PyErr_SetString@plt>
   13e18:	b	13d74 <PyFloat_FromString@plt+0xd2e4>
   13e1c:	nop
   13e20:	stp	x29, x30, [sp, #-96]!
   13e24:	mov	x29, sp
   13e28:	add	x3, sp, #0x58
   13e2c:	add	x2, sp, #0x50
   13e30:	stp	x19, x20, [sp, #16]
   13e34:	stp	x21, x22, [sp, #32]
   13e38:	mov	x21, x0
   13e3c:	mov	x0, x1
   13e40:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
   13e44:	add	x1, x1, #0x2a8
   13e48:	str	wzr, [sp, #76]
   13e4c:	bl	68e0 <PyArg_ParseTuple@plt>
   13e50:	cbz	w0, 13f2c <PyFloat_FromString@plt+0xd49c>
   13e54:	ldr	x19, [sp, #80]
   13e58:	adrp	x20, 5d000 <PyInit__decimal@@Base+0x42a80>
   13e5c:	add	x22, x20, #0x320
   13e60:	add	x22, x22, #0x1a0
   13e64:	ldr	x0, [x19, #8]
   13e68:	cmp	x0, x22
   13e6c:	b.eq	13ebc <PyFloat_FromString@plt+0xd42c>  // b.none
   13e70:	mov	x1, x22
   13e74:	bl	69c0 <PyType_IsSubtype@plt>
   13e78:	cbnz	w0, 13ebc <PyFloat_FromString@plt+0xd42c>
   13e7c:	ldr	x2, [x19, #8]
   13e80:	ldr	x0, [x2, #168]
   13e84:	tbnz	w0, #24, 1407c <PyFloat_FromString@plt+0xd5ec>
   13e88:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
   13e8c:	mov	x19, #0x0                   	// #0
   13e90:	ldr	x2, [x2, #24]
   13e94:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
   13e98:	ldr	x0, [x0, #3936]
   13e9c:	add	x1, x1, #0x8
   13ea0:	ldr	x0, [x0]
   13ea4:	bl	6a10 <PyErr_Format@plt>
   13ea8:	mov	x0, x19
   13eac:	ldp	x19, x20, [sp, #16]
   13eb0:	ldp	x21, x22, [sp, #32]
   13eb4:	ldp	x29, x30, [sp], #96
   13eb8:	ret
   13ebc:	ldr	x0, [x19]
   13ec0:	str	x23, [sp, #48]
   13ec4:	add	x0, x0, #0x1
   13ec8:	str	x0, [x19]
   13ecc:	ldr	x22, [sp, #88]
   13ed0:	add	x23, x20, #0x320
   13ed4:	add	x23, x23, #0x1a0
   13ed8:	ldr	x0, [x22, #8]
   13edc:	cmp	x0, x23
   13ee0:	b.eq	13f44 <PyFloat_FromString@plt+0xd4b4>  // b.none
   13ee4:	mov	x1, x23
   13ee8:	bl	69c0 <PyType_IsSubtype@plt>
   13eec:	cbnz	w0, 13f44 <PyFloat_FromString@plt+0xd4b4>
   13ef0:	ldr	x2, [x22, #8]
   13ef4:	ldr	x0, [x2, #168]
   13ef8:	tbnz	w0, #24, 1402c <PyFloat_FromString@plt+0xd59c>
   13efc:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
   13f00:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
   13f04:	ldr	x2, [x2, #24]
   13f08:	add	x1, x1, #0x8
   13f0c:	ldr	x0, [x0, #3936]
   13f10:	ldr	x0, [x0]
   13f14:	bl	6a10 <PyErr_Format@plt>
   13f18:	ldr	x0, [x19]
   13f1c:	sub	x0, x0, #0x1
   13f20:	str	x0, [x19]
   13f24:	cbz	x0, 140ec <PyFloat_FromString@plt+0xd65c>
   13f28:	ldr	x23, [sp, #48]
   13f2c:	mov	x19, #0x0                   	// #0
   13f30:	mov	x0, x19
   13f34:	ldp	x19, x20, [sp, #16]
   13f38:	ldp	x21, x22, [sp, #32]
   13f3c:	ldp	x29, x30, [sp], #96
   13f40:	ret
   13f44:	ldr	x0, [x22]
   13f48:	add	x0, x0, #0x1
   13f4c:	str	x0, [x22]
   13f50:	add	x20, x20, #0x320
   13f54:	add	x20, x20, #0x1a0
   13f58:	mov	x0, x20
   13f5c:	bl	6c60 <PyFloat_FromString@plt+0x1d0>
   13f60:	mov	x23, x0
   13f64:	cbz	x0, 140b8 <PyFloat_FromString@plt+0xd628>
   13f68:	mov	x0, x20
   13f6c:	bl	6c60 <PyFloat_FromString@plt+0x1d0>
   13f70:	mov	x20, x0
   13f74:	cbz	x0, 14118 <PyFloat_FromString@plt+0xd688>
   13f78:	add	x1, x0, #0x18
   13f7c:	add	x5, sp, #0x4c
   13f80:	add	x0, x23, #0x18
   13f84:	add	x4, x21, #0x10
   13f88:	add	x3, x22, #0x18
   13f8c:	add	x2, x19, #0x18
   13f90:	bl	31270 <PyInit__decimal@@Base+0x16cf0>
   13f94:	ldr	x0, [x19]
   13f98:	sub	x0, x0, #0x1
   13f9c:	str	x0, [x19]
   13fa0:	cbz	x0, 14020 <PyFloat_FromString@plt+0xd590>
   13fa4:	ldr	x0, [x22]
   13fa8:	sub	x0, x0, #0x1
   13fac:	str	x0, [x22]
   13fb0:	cbz	x0, 14014 <PyFloat_FromString@plt+0xd584>
   13fb4:	ldr	w1, [sp, #76]
   13fb8:	mov	x0, x21
   13fbc:	bl	7f90 <PyFloat_FromString@plt+0x1500>
   13fc0:	cbnz	w0, 14048 <PyFloat_FromString@plt+0xd5b8>
   13fc4:	mov	x1, x23
   13fc8:	mov	x2, x20
   13fcc:	adrp	x0, 3c000 <PyInit__decimal@@Base+0x21a80>
   13fd0:	add	x0, x0, #0x2b8
   13fd4:	bl	67d0 <Py_BuildValue@plt>
   13fd8:	mov	x19, x0
   13fdc:	ldr	x1, [x20]
   13fe0:	sub	x0, x1, #0x1
   13fe4:	str	x0, [x20]
   13fe8:	cbz	x0, 140ac <PyFloat_FromString@plt+0xd61c>
   13fec:	ldr	x0, [x23]
   13ff0:	sub	x0, x0, #0x1
   13ff4:	str	x0, [x23]
   13ff8:	cbz	x0, 1409c <PyFloat_FromString@plt+0xd60c>
   13ffc:	mov	x0, x19
   14000:	ldp	x19, x20, [sp, #16]
   14004:	ldp	x21, x22, [sp, #32]
   14008:	ldr	x23, [sp, #48]
   1400c:	ldp	x29, x30, [sp], #96
   14010:	ret
   14014:	mov	x0, x22
   14018:	bl	65d0 <_Py_Dealloc@plt>
   1401c:	b	13fb4 <PyFloat_FromString@plt+0xd524>
   14020:	mov	x0, x19
   14024:	bl	65d0 <_Py_Dealloc@plt>
   14028:	b	13fa4 <PyFloat_FromString@plt+0xd514>
   1402c:	mov	x1, x22
   14030:	mov	x0, x23
   14034:	mov	x2, x21
   14038:	bl	82f8 <PyFloat_FromString@plt+0x1868>
   1403c:	mov	x22, x0
   14040:	cbnz	x0, 13f50 <PyFloat_FromString@plt+0xd4c0>
   14044:	b	13f18 <PyFloat_FromString@plt+0xd488>
   14048:	ldr	x0, [x20]
   1404c:	sub	x0, x0, #0x1
   14050:	str	x0, [x20]
   14054:	cbz	x0, 14100 <PyFloat_FromString@plt+0xd670>
   14058:	ldr	x0, [x23]
   1405c:	sub	x0, x0, #0x1
   14060:	str	x0, [x23]
   14064:	cbnz	x0, 13f28 <PyFloat_FromString@plt+0xd498>
   14068:	mov	x0, x23
   1406c:	mov	x19, #0x0                   	// #0
   14070:	bl	65d0 <_Py_Dealloc@plt>
   14074:	ldr	x23, [sp, #48]
   14078:	b	13f30 <PyFloat_FromString@plt+0xd4a0>
   1407c:	mov	x1, x19
   14080:	mov	x2, x21
   14084:	mov	x0, x22
   14088:	bl	82f8 <PyFloat_FromString@plt+0x1868>
   1408c:	mov	x19, x0
   14090:	cbz	x0, 13f2c <PyFloat_FromString@plt+0xd49c>
   14094:	str	x23, [sp, #48]
   14098:	b	13ecc <PyFloat_FromString@plt+0xd43c>
   1409c:	mov	x0, x23
   140a0:	bl	65d0 <_Py_Dealloc@plt>
   140a4:	ldr	x23, [sp, #48]
   140a8:	b	13f30 <PyFloat_FromString@plt+0xd4a0>
   140ac:	mov	x0, x20
   140b0:	bl	65d0 <_Py_Dealloc@plt>
   140b4:	b	13fec <PyFloat_FromString@plt+0xd55c>
   140b8:	ldr	x0, [x19]
   140bc:	sub	x0, x0, #0x1
   140c0:	str	x0, [x19]
   140c4:	cbz	x0, 1410c <PyFloat_FromString@plt+0xd67c>
   140c8:	ldr	x0, [x22]
   140cc:	sub	x0, x0, #0x1
   140d0:	str	x0, [x22]
   140d4:	cbnz	x0, 13f28 <PyFloat_FromString@plt+0xd498>
   140d8:	mov	x0, x22
   140dc:	mov	x19, #0x0                   	// #0
   140e0:	bl	65d0 <_Py_Dealloc@plt>
   140e4:	ldr	x23, [sp, #48]
   140e8:	b	13f30 <PyFloat_FromString@plt+0xd4a0>
   140ec:	mov	x0, x19
   140f0:	mov	x19, #0x0                   	// #0
   140f4:	bl	65d0 <_Py_Dealloc@plt>
   140f8:	ldr	x23, [sp, #48]
   140fc:	b	13f30 <PyFloat_FromString@plt+0xd4a0>
   14100:	mov	x0, x20
   14104:	bl	65d0 <_Py_Dealloc@plt>
   14108:	b	14058 <PyFloat_FromString@plt+0xd5c8>
   1410c:	mov	x0, x19
   14110:	bl	65d0 <_Py_Dealloc@plt>
   14114:	b	140c8 <PyFloat_FromString@plt+0xd638>
   14118:	ldr	x0, [x19]
   1411c:	sub	x0, x0, #0x1
   14120:	str	x0, [x19]
   14124:	cbz	x0, 14144 <PyFloat_FromString@plt+0xd6b4>
   14128:	ldr	x0, [x22]
   1412c:	sub	x0, x0, #0x1
   14130:	str	x0, [x22]
   14134:	cbnz	x0, 14058 <PyFloat_FromString@plt+0xd5c8>
   14138:	mov	x0, x22
   1413c:	bl	65d0 <_Py_Dealloc@plt>
   14140:	b	14058 <PyFloat_FromString@plt+0xd5c8>
   14144:	mov	x0, x19
   14148:	bl	65d0 <_Py_Dealloc@plt>
   1414c:	b	14128 <PyFloat_FromString@plt+0xd698>
   14150:	stp	x29, x30, [sp, #-80]!
   14154:	adrp	x2, 5f000 <PyInit__decimal@@Base+0x44a80>
   14158:	mov	x29, sp
   1415c:	stp	x19, x20, [sp, #16]
   14160:	mov	x19, x0
   14164:	mov	x20, #0x0                   	// #0
   14168:	ldr	x0, [x2, #1808]
   1416c:	add	x2, sp, #0x48
   14170:	stp	x21, x22, [sp, #32]
   14174:	mov	x21, x1
   14178:	mov	x1, #0x0                   	// #0
   1417c:	str	wzr, [sp, #68]
   14180:	bl	6740 <PyContextVar_Get@plt>
   14184:	tbnz	w0, #31, 141f0 <PyFloat_FromString@plt+0xd760>
   14188:	ldr	x20, [sp, #72]
   1418c:	str	x23, [sp, #48]
   14190:	cbz	x20, 14288 <PyFloat_FromString@plt+0xd7f8>
   14194:	ldr	x0, [x20]
   14198:	sub	x0, x0, #0x1
   1419c:	str	x0, [x20]
   141a0:	cbz	x0, 1427c <PyFloat_FromString@plt+0xd7ec>
   141a4:	ldr	x0, [x19, #8]
   141a8:	adrp	x23, 5d000 <PyInit__decimal@@Base+0x42a80>
   141ac:	add	x22, x23, #0x320
   141b0:	add	x22, x22, #0x1a0
   141b4:	cmp	x0, x22
   141b8:	b.eq	14204 <PyFloat_FromString@plt+0xd774>  // b.none
   141bc:	mov	x1, x22
   141c0:	bl	69c0 <PyType_IsSubtype@plt>
   141c4:	cbnz	w0, 14204 <PyFloat_FromString@plt+0xd774>
   141c8:	ldr	x0, [x19, #8]
   141cc:	ldr	x0, [x0, #168]
   141d0:	tbnz	w0, #24, 143a8 <PyFloat_FromString@plt+0xd918>
   141d4:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
   141d8:	ldr	x23, [sp, #48]
   141dc:	ldr	x0, [x0, #3912]
   141e0:	mov	x20, x0
   141e4:	ldr	x1, [x0]
   141e8:	add	x1, x1, #0x1
   141ec:	str	x1, [x0]
   141f0:	mov	x0, x20
   141f4:	ldp	x19, x20, [sp, #16]
   141f8:	ldp	x21, x22, [sp, #32]
   141fc:	ldp	x29, x30, [sp], #80
   14200:	ret
   14204:	ldr	x0, [x19]
   14208:	add	x0, x0, #0x1
   1420c:	str	x0, [x19]
   14210:	ldr	x0, [x21, #8]
   14214:	add	x22, x23, #0x320
   14218:	add	x22, x22, #0x1a0
   1421c:	cmp	x0, x22
   14220:	b.eq	142b0 <PyFloat_FromString@plt+0xd820>  // b.none
   14224:	mov	x1, x22
   14228:	bl	69c0 <PyType_IsSubtype@plt>
   1422c:	cbnz	w0, 142b0 <PyFloat_FromString@plt+0xd820>
   14230:	ldr	x0, [x21, #8]
   14234:	ldr	x0, [x0, #168]
   14238:	tbnz	w0, #24, 14388 <PyFloat_FromString@plt+0xd8f8>
   1423c:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
   14240:	ldr	x0, [x0, #3912]
   14244:	mov	x20, x0
   14248:	ldr	x1, [x0]
   1424c:	add	x1, x1, #0x1
   14250:	str	x1, [x0]
   14254:	ldr	x0, [x19]
   14258:	sub	x0, x0, #0x1
   1425c:	str	x0, [x19]
   14260:	cbz	x0, 14378 <PyFloat_FromString@plt+0xd8e8>
   14264:	mov	x0, x20
   14268:	ldp	x19, x20, [sp, #16]
   1426c:	ldp	x21, x22, [sp, #32]
   14270:	ldr	x23, [sp, #48]
   14274:	ldp	x29, x30, [sp], #80
   14278:	ret
   1427c:	mov	x0, x20
   14280:	bl	65d0 <_Py_Dealloc@plt>
   14284:	b	141a4 <PyFloat_FromString@plt+0xd714>
   14288:	bl	7320 <PyFloat_FromString@plt+0x890>
   1428c:	mov	x20, x0
   14290:	cbnz	x0, 14194 <PyFloat_FromString@plt+0xd704>
   14294:	mov	x20, #0x0                   	// #0
   14298:	mov	x0, x20
   1429c:	ldp	x19, x20, [sp, #16]
   142a0:	ldp	x21, x22, [sp, #32]
   142a4:	ldr	x23, [sp, #48]
   142a8:	ldp	x29, x30, [sp], #80
   142ac:	ret
   142b0:	ldr	x0, [x21]
   142b4:	add	x0, x0, #0x1
   142b8:	str	x0, [x21]
   142bc:	add	x23, x23, #0x320
   142c0:	add	x23, x23, #0x1a0
   142c4:	mov	x0, x23
   142c8:	bl	6c60 <PyFloat_FromString@plt+0x1d0>
   142cc:	mov	x22, x0
   142d0:	cbz	x0, 143dc <PyFloat_FromString@plt+0xd94c>
   142d4:	mov	x0, x23
   142d8:	bl	6c60 <PyFloat_FromString@plt+0x1d0>
   142dc:	mov	x23, x0
   142e0:	cbz	x0, 14450 <PyFloat_FromString@plt+0xd9c0>
   142e4:	add	x1, x0, #0x18
   142e8:	add	x5, sp, #0x44
   142ec:	add	x0, x22, #0x18
   142f0:	add	x4, x20, #0x10
   142f4:	add	x3, x21, #0x18
   142f8:	add	x2, x19, #0x18
   142fc:	bl	31270 <PyInit__decimal@@Base+0x16cf0>
   14300:	ldr	x0, [x19]
   14304:	sub	x0, x0, #0x1
   14308:	str	x0, [x19]
   1430c:	cbz	x0, 143d0 <PyFloat_FromString@plt+0xd940>
   14310:	ldr	x0, [x21]
   14314:	sub	x0, x0, #0x1
   14318:	str	x0, [x21]
   1431c:	cbz	x0, 143c4 <PyFloat_FromString@plt+0xd934>
   14320:	ldr	w1, [sp, #68]
   14324:	mov	x0, x20
   14328:	bl	7f90 <PyFloat_FromString@plt+0x1500>
   1432c:	cbnz	w0, 14410 <PyFloat_FromString@plt+0xd980>
   14330:	mov	x1, x22
   14334:	mov	x2, x23
   14338:	adrp	x0, 3c000 <PyInit__decimal@@Base+0x21a80>
   1433c:	add	x0, x0, #0x2b8
   14340:	bl	67d0 <Py_BuildValue@plt>
   14344:	mov	x20, x0
   14348:	ldr	x1, [x23]
   1434c:	sub	x0, x1, #0x1
   14350:	str	x0, [x23]
   14354:	cbz	x0, 14444 <PyFloat_FromString@plt+0xd9b4>
   14358:	ldr	x0, [x22]
   1435c:	sub	x0, x0, #0x1
   14360:	str	x0, [x22]
   14364:	cbnz	x0, 14264 <PyFloat_FromString@plt+0xd7d4>
   14368:	mov	x0, x22
   1436c:	bl	65d0 <_Py_Dealloc@plt>
   14370:	ldr	x23, [sp, #48]
   14374:	b	141f0 <PyFloat_FromString@plt+0xd760>
   14378:	mov	x0, x19
   1437c:	bl	65d0 <_Py_Dealloc@plt>
   14380:	ldr	x23, [sp, #48]
   14384:	b	141f0 <PyFloat_FromString@plt+0xd760>
   14388:	mov	x1, x21
   1438c:	mov	x0, x22
   14390:	mov	x2, x20
   14394:	bl	82f8 <PyFloat_FromString@plt+0x1868>
   14398:	mov	x21, x0
   1439c:	cbnz	x0, 142bc <PyFloat_FromString@plt+0xd82c>
   143a0:	mov	x20, #0x0                   	// #0
   143a4:	b	14254 <PyFloat_FromString@plt+0xd7c4>
   143a8:	mov	x1, x19
   143ac:	mov	x0, x22
   143b0:	mov	x2, x20
   143b4:	bl	82f8 <PyFloat_FromString@plt+0x1868>
   143b8:	mov	x19, x0
   143bc:	cbnz	x0, 14210 <PyFloat_FromString@plt+0xd780>
   143c0:	b	14294 <PyFloat_FromString@plt+0xd804>
   143c4:	mov	x0, x21
   143c8:	bl	65d0 <_Py_Dealloc@plt>
   143cc:	b	14320 <PyFloat_FromString@plt+0xd890>
   143d0:	mov	x0, x19
   143d4:	bl	65d0 <_Py_Dealloc@plt>
   143d8:	b	14310 <PyFloat_FromString@plt+0xd880>
   143dc:	ldr	x0, [x19]
   143e0:	sub	x0, x0, #0x1
   143e4:	str	x0, [x19]
   143e8:	cbz	x0, 14488 <PyFloat_FromString@plt+0xd9f8>
   143ec:	ldr	x0, [x21]
   143f0:	sub	x0, x0, #0x1
   143f4:	str	x0, [x21]
   143f8:	cbnz	x0, 14294 <PyFloat_FromString@plt+0xd804>
   143fc:	mov	x0, x21
   14400:	mov	x20, #0x0                   	// #0
   14404:	bl	65d0 <_Py_Dealloc@plt>
   14408:	ldr	x23, [sp, #48]
   1440c:	b	141f0 <PyFloat_FromString@plt+0xd760>
   14410:	ldr	x0, [x23]
   14414:	sub	x0, x0, #0x1
   14418:	str	x0, [x23]
   1441c:	cbz	x0, 1447c <PyFloat_FromString@plt+0xd9ec>
   14420:	ldr	x0, [x22]
   14424:	sub	x0, x0, #0x1
   14428:	str	x0, [x22]
   1442c:	cbnz	x0, 14294 <PyFloat_FromString@plt+0xd804>
   14430:	mov	x0, x22
   14434:	mov	x20, #0x0                   	// #0
   14438:	bl	65d0 <_Py_Dealloc@plt>
   1443c:	ldr	x23, [sp, #48]
   14440:	b	141f0 <PyFloat_FromString@plt+0xd760>
   14444:	mov	x0, x23
   14448:	bl	65d0 <_Py_Dealloc@plt>
   1444c:	b	14358 <PyFloat_FromString@plt+0xd8c8>
   14450:	ldr	x0, [x19]
   14454:	sub	x0, x0, #0x1
   14458:	str	x0, [x19]
   1445c:	cbz	x0, 14494 <PyFloat_FromString@plt+0xda04>
   14460:	ldr	x0, [x21]
   14464:	sub	x0, x0, #0x1
   14468:	str	x0, [x21]
   1446c:	cbnz	x0, 14420 <PyFloat_FromString@plt+0xd990>
   14470:	mov	x0, x21
   14474:	bl	65d0 <_Py_Dealloc@plt>
   14478:	b	14420 <PyFloat_FromString@plt+0xd990>
   1447c:	mov	x0, x23
   14480:	bl	65d0 <_Py_Dealloc@plt>
   14484:	b	14420 <PyFloat_FromString@plt+0xd990>
   14488:	mov	x0, x19
   1448c:	bl	65d0 <_Py_Dealloc@plt>
   14490:	b	143ec <PyFloat_FromString@plt+0xd95c>
   14494:	mov	x0, x19
   14498:	bl	65d0 <_Py_Dealloc@plt>
   1449c:	b	14460 <PyFloat_FromString@plt+0xd9d0>
   144a0:	stp	x29, x30, [sp, #-80]!
   144a4:	adrp	x3, 5f000 <PyInit__decimal@@Base+0x44a80>
   144a8:	mov	x29, sp
   144ac:	stp	x19, x20, [sp, #16]
   144b0:	mov	x19, x0
   144b4:	ldr	x0, [x3, #1808]
   144b8:	stp	x21, x22, [sp, #32]
   144bc:	mov	x21, x1
   144c0:	mov	x22, x2
   144c4:	mov	x1, #0x0                   	// #0
   144c8:	add	x2, sp, #0x48
   144cc:	stp	x23, x24, [sp, #48]
   144d0:	str	wzr, [sp, #68]
   144d4:	bl	6740 <PyContextVar_Get@plt>
   144d8:	tbnz	w0, #31, 145d8 <PyFloat_FromString@plt+0xdb48>
   144dc:	ldr	x20, [sp, #72]
   144e0:	cbz	x20, 145cc <PyFloat_FromString@plt+0xdb3c>
   144e4:	ldr	x1, [x20]
   144e8:	sub	x1, x1, #0x1
   144ec:	str	x1, [x20]
   144f0:	cbz	x1, 145c0 <PyFloat_FromString@plt+0xdb30>
   144f4:	ldr	x0, [x19, #8]
   144f8:	adrp	x24, 5d000 <PyInit__decimal@@Base+0x42a80>
   144fc:	add	x23, x24, #0x320
   14500:	add	x23, x23, #0x1a0
   14504:	cmp	x0, x23
   14508:	b.eq	14554 <PyFloat_FromString@plt+0xdac4>  // b.none
   1450c:	mov	x1, x23
   14510:	bl	69c0 <PyType_IsSubtype@plt>
   14514:	cbnz	w0, 14554 <PyFloat_FromString@plt+0xdac4>
   14518:	ldr	x0, [x19, #8]
   1451c:	ldr	x0, [x0, #168]
   14520:	tbnz	w0, #24, 1473c <PyFloat_FromString@plt+0xdcac>
   14524:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
   14528:	ldr	x0, [x0, #3912]
   1452c:	mov	x23, x0
   14530:	ldr	x1, [x0]
   14534:	add	x1, x1, #0x1
   14538:	str	x1, [x0]
   1453c:	mov	x0, x23
   14540:	ldp	x19, x20, [sp, #16]
   14544:	ldp	x21, x22, [sp, #32]
   14548:	ldp	x23, x24, [sp, #48]
   1454c:	ldp	x29, x30, [sp], #80
   14550:	ret
   14554:	ldr	x0, [x19]
   14558:	add	x0, x0, #0x1
   1455c:	str	x0, [x19]
   14560:	ldr	x0, [x21, #8]
   14564:	add	x23, x24, #0x320
   14568:	add	x23, x23, #0x1a0
   1456c:	cmp	x0, x23
   14570:	b.eq	145f4 <PyFloat_FromString@plt+0xdb64>  // b.none
   14574:	mov	x1, x23
   14578:	bl	69c0 <PyType_IsSubtype@plt>
   1457c:	cbnz	w0, 145f4 <PyFloat_FromString@plt+0xdb64>
   14580:	ldr	x0, [x21, #8]
   14584:	ldr	x0, [x0, #168]
   14588:	tbnz	w0, #24, 14680 <PyFloat_FromString@plt+0xdbf0>
   1458c:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
   14590:	ldr	x0, [x0, #3912]
   14594:	mov	x23, x0
   14598:	ldr	x1, [x0]
   1459c:	add	x1, x1, #0x1
   145a0:	str	x1, [x0]
   145a4:	ldr	x0, [x19]
   145a8:	sub	x0, x0, #0x1
   145ac:	str	x0, [x19]
   145b0:	cbnz	x0, 1453c <PyFloat_FromString@plt+0xdaac>
   145b4:	mov	x0, x19
   145b8:	bl	65d0 <_Py_Dealloc@plt>
   145bc:	b	1453c <PyFloat_FromString@plt+0xdaac>
   145c0:	mov	x0, x20
   145c4:	bl	65d0 <_Py_Dealloc@plt>
   145c8:	b	144f4 <PyFloat_FromString@plt+0xda64>
   145cc:	bl	7320 <PyFloat_FromString@plt+0x890>
   145d0:	mov	x20, x0
   145d4:	cbnz	x0, 144e4 <PyFloat_FromString@plt+0xda54>
   145d8:	mov	x23, #0x0                   	// #0
   145dc:	mov	x0, x23
   145e0:	ldp	x19, x20, [sp, #16]
   145e4:	ldp	x21, x22, [sp, #32]
   145e8:	ldp	x23, x24, [sp, #48]
   145ec:	ldp	x29, x30, [sp], #80
   145f0:	ret
   145f4:	ldr	x0, [x21]
   145f8:	add	x0, x0, #0x1
   145fc:	str	x0, [x21]
   14600:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
   14604:	ldr	x0, [x0, #4008]
   14608:	cmp	x22, x0
   1460c:	b.eq	1475c <PyFloat_FromString@plt+0xdccc>  // b.none
   14610:	ldr	x0, [x22, #8]
   14614:	add	x23, x24, #0x320
   14618:	add	x23, x23, #0x1a0
   1461c:	cmp	x0, x23
   14620:	b.eq	146a0 <PyFloat_FromString@plt+0xdc10>  // b.none
   14624:	mov	x1, x23
   14628:	bl	69c0 <PyType_IsSubtype@plt>
   1462c:	cbnz	w0, 146a0 <PyFloat_FromString@plt+0xdc10>
   14630:	ldr	x0, [x22, #8]
   14634:	ldr	x0, [x0, #168]
   14638:	tbnz	w0, #24, 147bc <PyFloat_FromString@plt+0xdd2c>
   1463c:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
   14640:	ldr	x0, [x0, #3912]
   14644:	mov	x23, x0
   14648:	ldr	x1, [x0]
   1464c:	add	x1, x1, #0x1
   14650:	str	x1, [x0]
   14654:	ldr	x0, [x19]
   14658:	sub	x0, x0, #0x1
   1465c:	str	x0, [x19]
   14660:	cbz	x0, 147a4 <PyFloat_FromString@plt+0xdd14>
   14664:	ldr	x0, [x21]
   14668:	sub	x0, x0, #0x1
   1466c:	str	x0, [x21]
   14670:	cbnz	x0, 1453c <PyFloat_FromString@plt+0xdaac>
   14674:	mov	x0, x21
   14678:	bl	65d0 <_Py_Dealloc@plt>
   1467c:	b	1453c <PyFloat_FromString@plt+0xdaac>
   14680:	mov	x1, x21
   14684:	mov	x0, x23
   14688:	mov	x2, x20
   1468c:	bl	82f8 <PyFloat_FromString@plt+0x1868>
   14690:	mov	x21, x0
   14694:	cbnz	x0, 14600 <PyFloat_FromString@plt+0xdb70>
   14698:	mov	x23, #0x0                   	// #0
   1469c:	b	145a4 <PyFloat_FromString@plt+0xdb14>
   146a0:	ldr	x0, [x22]
   146a4:	add	x0, x0, #0x1
   146a8:	str	x0, [x22]
   146ac:	add	x0, x24, #0x320
   146b0:	add	x0, x0, #0x1a0
   146b4:	bl	6c60 <PyFloat_FromString@plt+0x1d0>
   146b8:	mov	x23, x0
   146bc:	cbz	x0, 147e0 <PyFloat_FromString@plt+0xdd50>
   146c0:	add	x0, x23, #0x18
   146c4:	add	x5, sp, #0x44
   146c8:	add	x4, x20, #0x10
   146cc:	add	x3, x22, #0x18
   146d0:	add	x2, x21, #0x18
   146d4:	add	x1, x19, #0x18
   146d8:	bl	368e0 <PyInit__decimal@@Base+0x1c360>
   146dc:	ldr	x0, [x22]
   146e0:	sub	x0, x0, #0x1
   146e4:	str	x0, [x22]
   146e8:	cbz	x0, 147b0 <PyFloat_FromString@plt+0xdd20>
   146ec:	ldr	x0, [x19]
   146f0:	sub	x0, x0, #0x1
   146f4:	str	x0, [x19]
   146f8:	cbz	x0, 14798 <PyFloat_FromString@plt+0xdd08>
   146fc:	ldr	x0, [x21]
   14700:	sub	x0, x0, #0x1
   14704:	str	x0, [x21]
   14708:	cbz	x0, 1478c <PyFloat_FromString@plt+0xdcfc>
   1470c:	ldr	w1, [sp, #68]
   14710:	mov	x0, x20
   14714:	bl	7f90 <PyFloat_FromString@plt+0x1500>
   14718:	cbz	w0, 1453c <PyFloat_FromString@plt+0xdaac>
   1471c:	ldr	x0, [x23]
   14720:	sub	x0, x0, #0x1
   14724:	str	x0, [x23]
   14728:	cbnz	x0, 145d8 <PyFloat_FromString@plt+0xdb48>
   1472c:	mov	x0, x23
   14730:	mov	x23, #0x0                   	// #0
   14734:	bl	65d0 <_Py_Dealloc@plt>
   14738:	b	1453c <PyFloat_FromString@plt+0xdaac>
   1473c:	mov	x1, x19
   14740:	mov	x0, x23
   14744:	mov	x2, x20
   14748:	bl	82f8 <PyFloat_FromString@plt+0x1868>
   1474c:	mov	x19, x0
   14750:	cbnz	x0, 14560 <PyFloat_FromString@plt+0xdad0>
   14754:	mov	x23, #0x0                   	// #0
   14758:	b	145dc <PyFloat_FromString@plt+0xdb4c>
   1475c:	add	x0, x24, #0x320
   14760:	add	x0, x0, #0x1a0
   14764:	bl	6c60 <PyFloat_FromString@plt+0x1d0>
   14768:	mov	x23, x0
   1476c:	cbz	x0, 147dc <PyFloat_FromString@plt+0xdd4c>
   14770:	add	x4, sp, #0x44
   14774:	add	x3, x20, #0x10
   14778:	add	x2, x21, #0x18
   1477c:	add	x1, x19, #0x18
   14780:	add	x0, x0, #0x18
   14784:	bl	35920 <PyInit__decimal@@Base+0x1b3a0>
   14788:	b	146ec <PyFloat_FromString@plt+0xdc5c>
   1478c:	mov	x0, x21
   14790:	bl	65d0 <_Py_Dealloc@plt>
   14794:	b	1470c <PyFloat_FromString@plt+0xdc7c>
   14798:	mov	x0, x19
   1479c:	bl	65d0 <_Py_Dealloc@plt>
   147a0:	b	146fc <PyFloat_FromString@plt+0xdc6c>
   147a4:	mov	x0, x19
   147a8:	bl	65d0 <_Py_Dealloc@plt>
   147ac:	b	14664 <PyFloat_FromString@plt+0xdbd4>
   147b0:	mov	x0, x22
   147b4:	bl	65d0 <_Py_Dealloc@plt>
   147b8:	b	146ec <PyFloat_FromString@plt+0xdc5c>
   147bc:	mov	x1, x22
   147c0:	mov	x0, x23
   147c4:	mov	x2, x20
   147c8:	bl	82f8 <PyFloat_FromString@plt+0x1868>
   147cc:	mov	x22, x0
   147d0:	cbnz	x0, 146ac <PyFloat_FromString@plt+0xdc1c>
   147d4:	mov	x23, #0x0                   	// #0
   147d8:	b	14654 <PyFloat_FromString@plt+0xdbc4>
   147dc:	mov	x22, #0x0                   	// #0
   147e0:	ldr	x0, [x19]
   147e4:	sub	x0, x0, #0x1
   147e8:	str	x0, [x19]
   147ec:	cbz	x0, 14830 <PyFloat_FromString@plt+0xdda0>
   147f0:	ldr	x0, [x21]
   147f4:	sub	x0, x0, #0x1
   147f8:	str	x0, [x21]
   147fc:	cbz	x0, 14824 <PyFloat_FromString@plt+0xdd94>
   14800:	cbz	x22, 145d8 <PyFloat_FromString@plt+0xdb48>
   14804:	ldr	x0, [x22]
   14808:	sub	x0, x0, #0x1
   1480c:	str	x0, [x22]
   14810:	cbnz	x0, 145d8 <PyFloat_FromString@plt+0xdb48>
   14814:	mov	x0, x22
   14818:	mov	x23, #0x0                   	// #0
   1481c:	bl	65d0 <_Py_Dealloc@plt>
   14820:	b	1453c <PyFloat_FromString@plt+0xdaac>
   14824:	mov	x0, x21
   14828:	bl	65d0 <_Py_Dealloc@plt>
   1482c:	b	14800 <PyFloat_FromString@plt+0xdd70>
   14830:	mov	x0, x19
   14834:	bl	65d0 <_Py_Dealloc@plt>
   14838:	b	147f0 <PyFloat_FromString@plt+0xdd60>
   1483c:	nop
   14840:	stp	x29, x30, [sp, #-64]!
   14844:	adrp	x3, 5d000 <PyInit__decimal@@Base+0x42a80>
   14848:	add	x3, x3, #0x9a0
   1484c:	mov	x29, sp
   14850:	stp	x19, x20, [sp, #16]
   14854:	adrp	x19, 5c000 <PyInit__decimal@@Base+0x41a80>
   14858:	mov	x20, x0
   1485c:	ldr	x19, [x19, #4008]
   14860:	mov	x0, x1
   14864:	add	x3, x3, #0x328
   14868:	mov	x1, x2
   1486c:	add	x4, sp, #0x30
   14870:	adrp	x2, 3b000 <PyInit__decimal@@Base+0x20a80>
   14874:	add	x2, x2, #0xfd8
   14878:	str	wzr, [sp, #44]
   1487c:	str	x19, [sp, #48]
   14880:	bl	6520 <PyArg_ParseTupleAndKeywords@plt>
   14884:	cbz	w0, 14910 <PyFloat_FromString@plt+0xde80>
   14888:	ldr	x0, [sp, #48]
   1488c:	cmp	x0, x19
   14890:	b.eq	14924 <PyFloat_FromString@plt+0xde94>  // b.none
   14894:	ldr	x0, [x0, #8]
   14898:	adrp	x19, 5d000 <PyInit__decimal@@Base+0x42a80>
   1489c:	add	x1, x19, #0x320
   148a0:	cmp	x0, x1
   148a4:	b.eq	148b0 <PyFloat_FromString@plt+0xde20>  // b.none
   148a8:	bl	69c0 <PyType_IsSubtype@plt>
   148ac:	cbz	w0, 14974 <PyFloat_FromString@plt+0xdee4>
   148b0:	add	x19, x19, #0x320
   148b4:	add	x0, x19, #0x1a0
   148b8:	bl	6c60 <PyFloat_FromString@plt+0x1d0>
   148bc:	mov	x19, x0
   148c0:	cbz	x0, 14910 <PyFloat_FromString@plt+0xde80>
   148c4:	ldr	x2, [sp, #48]
   148c8:	add	x1, x20, #0x18
   148cc:	add	x0, x0, #0x18
   148d0:	add	x3, sp, #0x2c
   148d4:	add	x2, x2, #0x10
   148d8:	bl	2d348 <PyInit__decimal@@Base+0x12dc8>
   148dc:	ldr	w1, [sp, #44]
   148e0:	ldr	x0, [sp, #48]
   148e4:	bl	7f90 <PyFloat_FromString@plt+0x1500>
   148e8:	cbnz	w0, 148fc <PyFloat_FromString@plt+0xde6c>
   148ec:	mov	x0, x19
   148f0:	ldp	x19, x20, [sp, #16]
   148f4:	ldp	x29, x30, [sp], #64
   148f8:	ret
   148fc:	ldr	x0, [x19]
   14900:	sub	x0, x0, #0x1
   14904:	str	x0, [x19]
   14908:	cbz	x0, 14964 <PyFloat_FromString@plt+0xded4>
   1490c:	nop
   14910:	mov	x19, #0x0                   	// #0
   14914:	mov	x0, x19
   14918:	ldp	x19, x20, [sp, #16]
   1491c:	ldp	x29, x30, [sp], #64
   14920:	ret
   14924:	adrp	x0, 5f000 <PyInit__decimal@@Base+0x44a80>
   14928:	add	x2, sp, #0x38
   1492c:	mov	x1, #0x0                   	// #0
   14930:	ldr	x0, [x0, #1808]
   14934:	bl	6740 <PyContextVar_Get@plt>
   14938:	tbnz	w0, #31, 14910 <PyFloat_FromString@plt+0xde80>
   1493c:	ldr	x0, [sp, #56]
   14940:	cbz	x0, 14994 <PyFloat_FromString@plt+0xdf04>
   14944:	str	x0, [sp, #48]
   14948:	ldr	x1, [x0]
   1494c:	adrp	x19, 5d000 <PyInit__decimal@@Base+0x42a80>
   14950:	sub	x1, x1, #0x1
   14954:	str	x1, [x0]
   14958:	cbnz	x1, 148b0 <PyFloat_FromString@plt+0xde20>
   1495c:	bl	65d0 <_Py_Dealloc@plt>
   14960:	b	148b0 <PyFloat_FromString@plt+0xde20>
   14964:	mov	x0, x19
   14968:	mov	x19, #0x0                   	// #0
   1496c:	bl	65d0 <_Py_Dealloc@plt>
   14970:	b	148ec <PyFloat_FromString@plt+0xde5c>
   14974:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
   14978:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
   1497c:	mov	x19, #0x0                   	// #0
   14980:	add	x1, x1, #0x88
   14984:	ldr	x0, [x0, #3936]
   14988:	ldr	x0, [x0]
   1498c:	bl	6650 <PyErr_SetString@plt>
   14990:	b	148ec <PyFloat_FromString@plt+0xde5c>
   14994:	bl	7320 <PyFloat_FromString@plt+0x890>
   14998:	str	x0, [sp, #48]
   1499c:	cbnz	x0, 14948 <PyFloat_FromString@plt+0xdeb8>
   149a0:	mov	x19, #0x0                   	// #0
   149a4:	b	14914 <PyFloat_FromString@plt+0xde84>
   149a8:	stp	x29, x30, [sp, #-64]!
   149ac:	adrp	x3, 5d000 <PyInit__decimal@@Base+0x42a80>
   149b0:	add	x3, x3, #0x9a0
   149b4:	mov	x29, sp
   149b8:	stp	x19, x20, [sp, #16]
   149bc:	adrp	x19, 5c000 <PyInit__decimal@@Base+0x41a80>
   149c0:	mov	x20, x0
   149c4:	ldr	x19, [x19, #4008]
   149c8:	mov	x0, x1
   149cc:	add	x3, x3, #0x338
   149d0:	mov	x1, x2
   149d4:	add	x4, sp, #0x30
   149d8:	adrp	x2, 3b000 <PyInit__decimal@@Base+0x20a80>
   149dc:	add	x2, x2, #0xfd8
   149e0:	str	wzr, [sp, #44]
   149e4:	str	x19, [sp, #48]
   149e8:	bl	6520 <PyArg_ParseTupleAndKeywords@plt>
   149ec:	cbz	w0, 14a78 <PyFloat_FromString@plt+0xdfe8>
   149f0:	ldr	x0, [sp, #48]
   149f4:	cmp	x0, x19
   149f8:	b.eq	14a8c <PyFloat_FromString@plt+0xdffc>  // b.none
   149fc:	ldr	x0, [x0, #8]
   14a00:	adrp	x19, 5d000 <PyInit__decimal@@Base+0x42a80>
   14a04:	add	x1, x19, #0x320
   14a08:	cmp	x0, x1
   14a0c:	b.eq	14a18 <PyFloat_FromString@plt+0xdf88>  // b.none
   14a10:	bl	69c0 <PyType_IsSubtype@plt>
   14a14:	cbz	w0, 14adc <PyFloat_FromString@plt+0xe04c>
   14a18:	add	x19, x19, #0x320
   14a1c:	add	x0, x19, #0x1a0
   14a20:	bl	6c60 <PyFloat_FromString@plt+0x1d0>
   14a24:	mov	x19, x0
   14a28:	cbz	x0, 14a78 <PyFloat_FromString@plt+0xdfe8>
   14a2c:	ldr	x2, [sp, #48]
   14a30:	add	x1, x20, #0x18
   14a34:	add	x0, x0, #0x18
   14a38:	add	x3, sp, #0x2c
   14a3c:	add	x2, x2, #0x10
   14a40:	bl	2cfa0 <PyInit__decimal@@Base+0x12a20>
   14a44:	ldr	w1, [sp, #44]
   14a48:	ldr	x0, [sp, #48]
   14a4c:	bl	7f90 <PyFloat_FromString@plt+0x1500>
   14a50:	cbnz	w0, 14a64 <PyFloat_FromString@plt+0xdfd4>
   14a54:	mov	x0, x19
   14a58:	ldp	x19, x20, [sp, #16]
   14a5c:	ldp	x29, x30, [sp], #64
   14a60:	ret
   14a64:	ldr	x0, [x19]
   14a68:	sub	x0, x0, #0x1
   14a6c:	str	x0, [x19]
   14a70:	cbz	x0, 14acc <PyFloat_FromString@plt+0xe03c>
   14a74:	nop
   14a78:	mov	x19, #0x0                   	// #0
   14a7c:	mov	x0, x19
   14a80:	ldp	x19, x20, [sp, #16]
   14a84:	ldp	x29, x30, [sp], #64
   14a88:	ret
   14a8c:	adrp	x0, 5f000 <PyInit__decimal@@Base+0x44a80>
   14a90:	add	x2, sp, #0x38
   14a94:	mov	x1, #0x0                   	// #0
   14a98:	ldr	x0, [x0, #1808]
   14a9c:	bl	6740 <PyContextVar_Get@plt>
   14aa0:	tbnz	w0, #31, 14a78 <PyFloat_FromString@plt+0xdfe8>
   14aa4:	ldr	x0, [sp, #56]
   14aa8:	cbz	x0, 14afc <PyFloat_FromString@plt+0xe06c>
   14aac:	str	x0, [sp, #48]
   14ab0:	ldr	x1, [x0]
   14ab4:	adrp	x19, 5d000 <PyInit__decimal@@Base+0x42a80>
   14ab8:	sub	x1, x1, #0x1
   14abc:	str	x1, [x0]
   14ac0:	cbnz	x1, 14a18 <PyFloat_FromString@plt+0xdf88>
   14ac4:	bl	65d0 <_Py_Dealloc@plt>
   14ac8:	b	14a18 <PyFloat_FromString@plt+0xdf88>
   14acc:	mov	x0, x19
   14ad0:	mov	x19, #0x0                   	// #0
   14ad4:	bl	65d0 <_Py_Dealloc@plt>
   14ad8:	b	14a54 <PyFloat_FromString@plt+0xdfc4>
   14adc:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
   14ae0:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
   14ae4:	mov	x19, #0x0                   	// #0
   14ae8:	add	x1, x1, #0x88
   14aec:	ldr	x0, [x0, #3936]
   14af0:	ldr	x0, [x0]
   14af4:	bl	6650 <PyErr_SetString@plt>
   14af8:	b	14a54 <PyFloat_FromString@plt+0xdfc4>
   14afc:	bl	7320 <PyFloat_FromString@plt+0x890>
   14b00:	str	x0, [sp, #48]
   14b04:	cbnz	x0, 14ab0 <PyFloat_FromString@plt+0xe020>
   14b08:	mov	x19, #0x0                   	// #0
   14b0c:	b	14a7c <PyFloat_FromString@plt+0xdfec>
   14b10:	stp	x29, x30, [sp, #-64]!
   14b14:	adrp	x3, 5d000 <PyInit__decimal@@Base+0x42a80>
   14b18:	add	x3, x3, #0x9a0
   14b1c:	mov	x29, sp
   14b20:	stp	x19, x20, [sp, #16]
   14b24:	adrp	x19, 5c000 <PyInit__decimal@@Base+0x41a80>
   14b28:	mov	x20, x0
   14b2c:	ldr	x19, [x19, #4008]
   14b30:	mov	x0, x1
   14b34:	add	x3, x3, #0x348
   14b38:	mov	x1, x2
   14b3c:	add	x4, sp, #0x30
   14b40:	adrp	x2, 3b000 <PyInit__decimal@@Base+0x20a80>
   14b44:	add	x2, x2, #0xfd8
   14b48:	str	wzr, [sp, #44]
   14b4c:	str	x19, [sp, #48]
   14b50:	bl	6520 <PyArg_ParseTupleAndKeywords@plt>
   14b54:	cbz	w0, 14be0 <PyFloat_FromString@plt+0xe150>
   14b58:	ldr	x0, [sp, #48]
   14b5c:	cmp	x0, x19
   14b60:	b.eq	14bf4 <PyFloat_FromString@plt+0xe164>  // b.none
   14b64:	ldr	x0, [x0, #8]
   14b68:	adrp	x19, 5d000 <PyInit__decimal@@Base+0x42a80>
   14b6c:	add	x1, x19, #0x320
   14b70:	cmp	x0, x1
   14b74:	b.eq	14b80 <PyFloat_FromString@plt+0xe0f0>  // b.none
   14b78:	bl	69c0 <PyType_IsSubtype@plt>
   14b7c:	cbz	w0, 14c44 <PyFloat_FromString@plt+0xe1b4>
   14b80:	add	x19, x19, #0x320
   14b84:	add	x0, x19, #0x1a0
   14b88:	bl	6c60 <PyFloat_FromString@plt+0x1d0>
   14b8c:	mov	x19, x0
   14b90:	cbz	x0, 14be0 <PyFloat_FromString@plt+0xe150>
   14b94:	ldr	x2, [sp, #48]
   14b98:	add	x1, x20, #0x18
   14b9c:	add	x0, x0, #0x18
   14ba0:	add	x3, sp, #0x2c
   14ba4:	add	x2, x2, #0x10
   14ba8:	bl	32668 <PyInit__decimal@@Base+0x180e8>
   14bac:	ldr	w1, [sp, #44]
   14bb0:	ldr	x0, [sp, #48]
   14bb4:	bl	7f90 <PyFloat_FromString@plt+0x1500>
   14bb8:	cbnz	w0, 14bcc <PyFloat_FromString@plt+0xe13c>
   14bbc:	mov	x0, x19
   14bc0:	ldp	x19, x20, [sp, #16]
   14bc4:	ldp	x29, x30, [sp], #64
   14bc8:	ret
   14bcc:	ldr	x0, [x19]
   14bd0:	sub	x0, x0, #0x1
   14bd4:	str	x0, [x19]
   14bd8:	cbz	x0, 14c34 <PyFloat_FromString@plt+0xe1a4>
   14bdc:	nop
   14be0:	mov	x19, #0x0                   	// #0
   14be4:	mov	x0, x19
   14be8:	ldp	x19, x20, [sp, #16]
   14bec:	ldp	x29, x30, [sp], #64
   14bf0:	ret
   14bf4:	adrp	x0, 5f000 <PyInit__decimal@@Base+0x44a80>
   14bf8:	add	x2, sp, #0x38
   14bfc:	mov	x1, #0x0                   	// #0
   14c00:	ldr	x0, [x0, #1808]
   14c04:	bl	6740 <PyContextVar_Get@plt>
   14c08:	tbnz	w0, #31, 14be0 <PyFloat_FromString@plt+0xe150>
   14c0c:	ldr	x0, [sp, #56]
   14c10:	cbz	x0, 14c64 <PyFloat_FromString@plt+0xe1d4>
   14c14:	str	x0, [sp, #48]
   14c18:	ldr	x1, [x0]
   14c1c:	adrp	x19, 5d000 <PyInit__decimal@@Base+0x42a80>
   14c20:	sub	x1, x1, #0x1
   14c24:	str	x1, [x0]
   14c28:	cbnz	x1, 14b80 <PyFloat_FromString@plt+0xe0f0>
   14c2c:	bl	65d0 <_Py_Dealloc@plt>
   14c30:	b	14b80 <PyFloat_FromString@plt+0xe0f0>
   14c34:	mov	x0, x19
   14c38:	mov	x19, #0x0                   	// #0
   14c3c:	bl	65d0 <_Py_Dealloc@plt>
   14c40:	b	14bbc <PyFloat_FromString@plt+0xe12c>
   14c44:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
   14c48:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
   14c4c:	mov	x19, #0x0                   	// #0
   14c50:	add	x1, x1, #0x88
   14c54:	ldr	x0, [x0, #3936]
   14c58:	ldr	x0, [x0]
   14c5c:	bl	6650 <PyErr_SetString@plt>
   14c60:	b	14bbc <PyFloat_FromString@plt+0xe12c>
   14c64:	bl	7320 <PyFloat_FromString@plt+0x890>
   14c68:	str	x0, [sp, #48]
   14c6c:	cbnz	x0, 14c18 <PyFloat_FromString@plt+0xe188>
   14c70:	mov	x19, #0x0                   	// #0
   14c74:	b	14be4 <PyFloat_FromString@plt+0xe154>
   14c78:	stp	x29, x30, [sp, #-64]!
   14c7c:	adrp	x3, 5d000 <PyInit__decimal@@Base+0x42a80>
   14c80:	add	x3, x3, #0x9a0
   14c84:	mov	x29, sp
   14c88:	stp	x19, x20, [sp, #16]
   14c8c:	adrp	x19, 5c000 <PyInit__decimal@@Base+0x41a80>
   14c90:	mov	x20, x0
   14c94:	ldr	x19, [x19, #4008]
   14c98:	mov	x0, x1
   14c9c:	add	x3, x3, #0x358
   14ca0:	mov	x1, x2
   14ca4:	add	x4, sp, #0x30
   14ca8:	adrp	x2, 3b000 <PyInit__decimal@@Base+0x20a80>
   14cac:	add	x2, x2, #0xfd8
   14cb0:	str	wzr, [sp, #44]
   14cb4:	str	x19, [sp, #48]
   14cb8:	bl	6520 <PyArg_ParseTupleAndKeywords@plt>
   14cbc:	cbz	w0, 14d48 <PyFloat_FromString@plt+0xe2b8>
   14cc0:	ldr	x0, [sp, #48]
   14cc4:	cmp	x0, x19
   14cc8:	b.eq	14d5c <PyFloat_FromString@plt+0xe2cc>  // b.none
   14ccc:	ldr	x0, [x0, #8]
   14cd0:	adrp	x19, 5d000 <PyInit__decimal@@Base+0x42a80>
   14cd4:	add	x1, x19, #0x320
   14cd8:	cmp	x0, x1
   14cdc:	b.eq	14ce8 <PyFloat_FromString@plt+0xe258>  // b.none
   14ce0:	bl	69c0 <PyType_IsSubtype@plt>
   14ce4:	cbz	w0, 14dac <PyFloat_FromString@plt+0xe31c>
   14ce8:	add	x19, x19, #0x320
   14cec:	add	x0, x19, #0x1a0
   14cf0:	bl	6c60 <PyFloat_FromString@plt+0x1d0>
   14cf4:	mov	x19, x0
   14cf8:	cbz	x0, 14d48 <PyFloat_FromString@plt+0xe2b8>
   14cfc:	ldr	x2, [sp, #48]
   14d00:	add	x1, x20, #0x18
   14d04:	add	x0, x0, #0x18
   14d08:	add	x3, sp, #0x2c
   14d0c:	add	x2, x2, #0x10
   14d10:	bl	33e90 <PyInit__decimal@@Base+0x19910>
   14d14:	ldr	w1, [sp, #44]
   14d18:	ldr	x0, [sp, #48]
   14d1c:	bl	7f90 <PyFloat_FromString@plt+0x1500>
   14d20:	cbnz	w0, 14d34 <PyFloat_FromString@plt+0xe2a4>
   14d24:	mov	x0, x19
   14d28:	ldp	x19, x20, [sp, #16]
   14d2c:	ldp	x29, x30, [sp], #64
   14d30:	ret
   14d34:	ldr	x0, [x19]
   14d38:	sub	x0, x0, #0x1
   14d3c:	str	x0, [x19]
   14d40:	cbz	x0, 14d9c <PyFloat_FromString@plt+0xe30c>
   14d44:	nop
   14d48:	mov	x19, #0x0                   	// #0
   14d4c:	mov	x0, x19
   14d50:	ldp	x19, x20, [sp, #16]
   14d54:	ldp	x29, x30, [sp], #64
   14d58:	ret
   14d5c:	adrp	x0, 5f000 <PyInit__decimal@@Base+0x44a80>
   14d60:	add	x2, sp, #0x38
   14d64:	mov	x1, #0x0                   	// #0
   14d68:	ldr	x0, [x0, #1808]
   14d6c:	bl	6740 <PyContextVar_Get@plt>
   14d70:	tbnz	w0, #31, 14d48 <PyFloat_FromString@plt+0xe2b8>
   14d74:	ldr	x0, [sp, #56]
   14d78:	cbz	x0, 14dcc <PyFloat_FromString@plt+0xe33c>
   14d7c:	str	x0, [sp, #48]
   14d80:	ldr	x1, [x0]
   14d84:	adrp	x19, 5d000 <PyInit__decimal@@Base+0x42a80>
   14d88:	sub	x1, x1, #0x1
   14d8c:	str	x1, [x0]
   14d90:	cbnz	x1, 14ce8 <PyFloat_FromString@plt+0xe258>
   14d94:	bl	65d0 <_Py_Dealloc@plt>
   14d98:	b	14ce8 <PyFloat_FromString@plt+0xe258>
   14d9c:	mov	x0, x19
   14da0:	mov	x19, #0x0                   	// #0
   14da4:	bl	65d0 <_Py_Dealloc@plt>
   14da8:	b	14d24 <PyFloat_FromString@plt+0xe294>
   14dac:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
   14db0:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
   14db4:	mov	x19, #0x0                   	// #0
   14db8:	add	x1, x1, #0x88
   14dbc:	ldr	x0, [x0, #3936]
   14dc0:	ldr	x0, [x0]
   14dc4:	bl	6650 <PyErr_SetString@plt>
   14dc8:	b	14d24 <PyFloat_FromString@plt+0xe294>
   14dcc:	bl	7320 <PyFloat_FromString@plt+0x890>
   14dd0:	str	x0, [sp, #48]
   14dd4:	cbnz	x0, 14d80 <PyFloat_FromString@plt+0xe2f0>
   14dd8:	mov	x19, #0x0                   	// #0
   14ddc:	b	14d4c <PyFloat_FromString@plt+0xe2bc>
   14de0:	stp	x29, x30, [sp, #-64]!
   14de4:	adrp	x3, 5d000 <PyInit__decimal@@Base+0x42a80>
   14de8:	add	x3, x3, #0x9a0
   14dec:	mov	x29, sp
   14df0:	stp	x19, x20, [sp, #16]
   14df4:	adrp	x19, 5c000 <PyInit__decimal@@Base+0x41a80>
   14df8:	mov	x20, x0
   14dfc:	ldr	x19, [x19, #4008]
   14e00:	mov	x0, x1
   14e04:	add	x3, x3, #0x368
   14e08:	mov	x1, x2
   14e0c:	add	x4, sp, #0x30
   14e10:	adrp	x2, 3b000 <PyInit__decimal@@Base+0x20a80>
   14e14:	add	x2, x2, #0xfd8
   14e18:	str	wzr, [sp, #44]
   14e1c:	str	x19, [sp, #48]
   14e20:	bl	6520 <PyArg_ParseTupleAndKeywords@plt>
   14e24:	cbz	w0, 14eb0 <PyFloat_FromString@plt+0xe420>
   14e28:	ldr	x0, [sp, #48]
   14e2c:	cmp	x0, x19
   14e30:	b.eq	14ec4 <PyFloat_FromString@plt+0xe434>  // b.none
   14e34:	ldr	x0, [x0, #8]
   14e38:	adrp	x19, 5d000 <PyInit__decimal@@Base+0x42a80>
   14e3c:	add	x1, x19, #0x320
   14e40:	cmp	x0, x1
   14e44:	b.eq	14e50 <PyFloat_FromString@plt+0xe3c0>  // b.none
   14e48:	bl	69c0 <PyType_IsSubtype@plt>
   14e4c:	cbz	w0, 14f14 <PyFloat_FromString@plt+0xe484>
   14e50:	add	x19, x19, #0x320
   14e54:	add	x0, x19, #0x1a0
   14e58:	bl	6c60 <PyFloat_FromString@plt+0x1d0>
   14e5c:	mov	x19, x0
   14e60:	cbz	x0, 14eb0 <PyFloat_FromString@plt+0xe420>
   14e64:	ldr	x2, [sp, #48]
   14e68:	add	x1, x20, #0x18
   14e6c:	add	x0, x0, #0x18
   14e70:	add	x3, sp, #0x2c
   14e74:	add	x2, x2, #0x10
   14e78:	bl	348d8 <PyInit__decimal@@Base+0x1a358>
   14e7c:	ldr	w1, [sp, #44]
   14e80:	ldr	x0, [sp, #48]
   14e84:	bl	7f90 <PyFloat_FromString@plt+0x1500>
   14e88:	cbnz	w0, 14e9c <PyFloat_FromString@plt+0xe40c>
   14e8c:	mov	x0, x19
   14e90:	ldp	x19, x20, [sp, #16]
   14e94:	ldp	x29, x30, [sp], #64
   14e98:	ret
   14e9c:	ldr	x0, [x19]
   14ea0:	sub	x0, x0, #0x1
   14ea4:	str	x0, [x19]
   14ea8:	cbz	x0, 14f04 <PyFloat_FromString@plt+0xe474>
   14eac:	nop
   14eb0:	mov	x19, #0x0                   	// #0
   14eb4:	mov	x0, x19
   14eb8:	ldp	x19, x20, [sp, #16]
   14ebc:	ldp	x29, x30, [sp], #64
   14ec0:	ret
   14ec4:	adrp	x0, 5f000 <PyInit__decimal@@Base+0x44a80>
   14ec8:	add	x2, sp, #0x38
   14ecc:	mov	x1, #0x0                   	// #0
   14ed0:	ldr	x0, [x0, #1808]
   14ed4:	bl	6740 <PyContextVar_Get@plt>
   14ed8:	tbnz	w0, #31, 14eb0 <PyFloat_FromString@plt+0xe420>
   14edc:	ldr	x0, [sp, #56]
   14ee0:	cbz	x0, 14f34 <PyFloat_FromString@plt+0xe4a4>
   14ee4:	str	x0, [sp, #48]
   14ee8:	ldr	x1, [x0]
   14eec:	adrp	x19, 5d000 <PyInit__decimal@@Base+0x42a80>
   14ef0:	sub	x1, x1, #0x1
   14ef4:	str	x1, [x0]
   14ef8:	cbnz	x1, 14e50 <PyFloat_FromString@plt+0xe3c0>
   14efc:	bl	65d0 <_Py_Dealloc@plt>
   14f00:	b	14e50 <PyFloat_FromString@plt+0xe3c0>
   14f04:	mov	x0, x19
   14f08:	mov	x19, #0x0                   	// #0
   14f0c:	bl	65d0 <_Py_Dealloc@plt>
   14f10:	b	14e8c <PyFloat_FromString@plt+0xe3fc>
   14f14:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
   14f18:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
   14f1c:	mov	x19, #0x0                   	// #0
   14f20:	add	x1, x1, #0x88
   14f24:	ldr	x0, [x0, #3936]
   14f28:	ldr	x0, [x0]
   14f2c:	bl	6650 <PyErr_SetString@plt>
   14f30:	b	14e8c <PyFloat_FromString@plt+0xe3fc>
   14f34:	bl	7320 <PyFloat_FromString@plt+0x890>
   14f38:	str	x0, [sp, #48]
   14f3c:	cbnz	x0, 14ee8 <PyFloat_FromString@plt+0xe458>
   14f40:	mov	x19, #0x0                   	// #0
   14f44:	b	14eb4 <PyFloat_FromString@plt+0xe424>
   14f48:	stp	x29, x30, [sp, #-64]!
   14f4c:	adrp	x3, 5d000 <PyInit__decimal@@Base+0x42a80>
   14f50:	add	x3, x3, #0x9a0
   14f54:	mov	x29, sp
   14f58:	stp	x19, x20, [sp, #16]
   14f5c:	adrp	x19, 5c000 <PyInit__decimal@@Base+0x41a80>
   14f60:	mov	x20, x0
   14f64:	ldr	x19, [x19, #4008]
   14f68:	mov	x0, x1
   14f6c:	add	x3, x3, #0x378
   14f70:	mov	x1, x2
   14f74:	add	x4, sp, #0x30
   14f78:	adrp	x2, 3b000 <PyInit__decimal@@Base+0x20a80>
   14f7c:	add	x2, x2, #0xfd8
   14f80:	str	wzr, [sp, #44]
   14f84:	str	x19, [sp, #48]
   14f88:	bl	6520 <PyArg_ParseTupleAndKeywords@plt>
   14f8c:	cbz	w0, 15018 <PyFloat_FromString@plt+0xe588>
   14f90:	ldr	x0, [sp, #48]
   14f94:	cmp	x0, x19
   14f98:	b.eq	1502c <PyFloat_FromString@plt+0xe59c>  // b.none
   14f9c:	ldr	x0, [x0, #8]
   14fa0:	adrp	x19, 5d000 <PyInit__decimal@@Base+0x42a80>
   14fa4:	add	x1, x19, #0x320
   14fa8:	cmp	x0, x1
   14fac:	b.eq	14fb8 <PyFloat_FromString@plt+0xe528>  // b.none
   14fb0:	bl	69c0 <PyType_IsSubtype@plt>
   14fb4:	cbz	w0, 1507c <PyFloat_FromString@plt+0xe5ec>
   14fb8:	add	x19, x19, #0x320
   14fbc:	add	x0, x19, #0x1a0
   14fc0:	bl	6c60 <PyFloat_FromString@plt+0x1d0>
   14fc4:	mov	x19, x0
   14fc8:	cbz	x0, 15018 <PyFloat_FromString@plt+0xe588>
   14fcc:	ldr	x2, [sp, #48]
   14fd0:	add	x1, x20, #0x18
   14fd4:	add	x0, x0, #0x18
   14fd8:	add	x3, sp, #0x2c
   14fdc:	add	x2, x2, #0x10
   14fe0:	bl	354b8 <PyInit__decimal@@Base+0x1af38>
   14fe4:	ldr	w1, [sp, #44]
   14fe8:	ldr	x0, [sp, #48]
   14fec:	bl	7f90 <PyFloat_FromString@plt+0x1500>
   14ff0:	cbnz	w0, 15004 <PyFloat_FromString@plt+0xe574>
   14ff4:	mov	x0, x19
   14ff8:	ldp	x19, x20, [sp, #16]
   14ffc:	ldp	x29, x30, [sp], #64
   15000:	ret
   15004:	ldr	x0, [x19]
   15008:	sub	x0, x0, #0x1
   1500c:	str	x0, [x19]
   15010:	cbz	x0, 1506c <PyFloat_FromString@plt+0xe5dc>
   15014:	nop
   15018:	mov	x19, #0x0                   	// #0
   1501c:	mov	x0, x19
   15020:	ldp	x19, x20, [sp, #16]
   15024:	ldp	x29, x30, [sp], #64
   15028:	ret
   1502c:	adrp	x0, 5f000 <PyInit__decimal@@Base+0x44a80>
   15030:	add	x2, sp, #0x38
   15034:	mov	x1, #0x0                   	// #0
   15038:	ldr	x0, [x0, #1808]
   1503c:	bl	6740 <PyContextVar_Get@plt>
   15040:	tbnz	w0, #31, 15018 <PyFloat_FromString@plt+0xe588>
   15044:	ldr	x0, [sp, #56]
   15048:	cbz	x0, 1509c <PyFloat_FromString@plt+0xe60c>
   1504c:	str	x0, [sp, #48]
   15050:	ldr	x1, [x0]
   15054:	adrp	x19, 5d000 <PyInit__decimal@@Base+0x42a80>
   15058:	sub	x1, x1, #0x1
   1505c:	str	x1, [x0]
   15060:	cbnz	x1, 14fb8 <PyFloat_FromString@plt+0xe528>
   15064:	bl	65d0 <_Py_Dealloc@plt>
   15068:	b	14fb8 <PyFloat_FromString@plt+0xe528>
   1506c:	mov	x0, x19
   15070:	mov	x19, #0x0                   	// #0
   15074:	bl	65d0 <_Py_Dealloc@plt>
   15078:	b	14ff4 <PyFloat_FromString@plt+0xe564>
   1507c:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
   15080:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
   15084:	mov	x19, #0x0                   	// #0
   15088:	add	x1, x1, #0x88
   1508c:	ldr	x0, [x0, #3936]
   15090:	ldr	x0, [x0]
   15094:	bl	6650 <PyErr_SetString@plt>
   15098:	b	14ff4 <PyFloat_FromString@plt+0xe564>
   1509c:	bl	7320 <PyFloat_FromString@plt+0x890>
   150a0:	str	x0, [sp, #48]
   150a4:	cbnz	x0, 15050 <PyFloat_FromString@plt+0xe5c0>
   150a8:	mov	x19, #0x0                   	// #0
   150ac:	b	1501c <PyFloat_FromString@plt+0xe58c>
   150b0:	stp	x29, x30, [sp, #-64]!
   150b4:	adrp	x3, 5d000 <PyInit__decimal@@Base+0x42a80>
   150b8:	add	x3, x3, #0x9a0
   150bc:	mov	x29, sp
   150c0:	stp	x19, x20, [sp, #16]
   150c4:	adrp	x19, 5c000 <PyInit__decimal@@Base+0x41a80>
   150c8:	mov	x20, x0
   150cc:	ldr	x19, [x19, #4008]
   150d0:	mov	x0, x1
   150d4:	add	x3, x3, #0x388
   150d8:	mov	x1, x2
   150dc:	add	x4, sp, #0x30
   150e0:	adrp	x2, 3b000 <PyInit__decimal@@Base+0x20a80>
   150e4:	add	x2, x2, #0xfd8
   150e8:	str	wzr, [sp, #44]
   150ec:	str	x19, [sp, #48]
   150f0:	bl	6520 <PyArg_ParseTupleAndKeywords@plt>
   150f4:	cbz	w0, 15180 <PyFloat_FromString@plt+0xe6f0>
   150f8:	ldr	x0, [sp, #48]
   150fc:	cmp	x0, x19
   15100:	b.eq	15194 <PyFloat_FromString@plt+0xe704>  // b.none
   15104:	ldr	x0, [x0, #8]
   15108:	adrp	x19, 5d000 <PyInit__decimal@@Base+0x42a80>
   1510c:	add	x1, x19, #0x320
   15110:	cmp	x0, x1
   15114:	b.eq	15120 <PyFloat_FromString@plt+0xe690>  // b.none
   15118:	bl	69c0 <PyType_IsSubtype@plt>
   1511c:	cbz	w0, 151e4 <PyFloat_FromString@plt+0xe754>
   15120:	add	x19, x19, #0x320
   15124:	add	x0, x19, #0x1a0
   15128:	bl	6c60 <PyFloat_FromString@plt+0x1d0>
   1512c:	mov	x19, x0
   15130:	cbz	x0, 15180 <PyFloat_FromString@plt+0xe6f0>
   15134:	ldr	x2, [sp, #48]
   15138:	add	x1, x20, #0x18
   1513c:	add	x0, x0, #0x18
   15140:	add	x3, sp, #0x2c
   15144:	add	x2, x2, #0x10
   15148:	bl	35658 <PyInit__decimal@@Base+0x1b0d8>
   1514c:	ldr	w1, [sp, #44]
   15150:	ldr	x0, [sp, #48]
   15154:	bl	7f90 <PyFloat_FromString@plt+0x1500>
   15158:	cbnz	w0, 1516c <PyFloat_FromString@plt+0xe6dc>
   1515c:	mov	x0, x19
   15160:	ldp	x19, x20, [sp, #16]
   15164:	ldp	x29, x30, [sp], #64
   15168:	ret
   1516c:	ldr	x0, [x19]
   15170:	sub	x0, x0, #0x1
   15174:	str	x0, [x19]
   15178:	cbz	x0, 151d4 <PyFloat_FromString@plt+0xe744>
   1517c:	nop
   15180:	mov	x19, #0x0                   	// #0
   15184:	mov	x0, x19
   15188:	ldp	x19, x20, [sp, #16]
   1518c:	ldp	x29, x30, [sp], #64
   15190:	ret
   15194:	adrp	x0, 5f000 <PyInit__decimal@@Base+0x44a80>
   15198:	add	x2, sp, #0x38
   1519c:	mov	x1, #0x0                   	// #0
   151a0:	ldr	x0, [x0, #1808]
   151a4:	bl	6740 <PyContextVar_Get@plt>
   151a8:	tbnz	w0, #31, 15180 <PyFloat_FromString@plt+0xe6f0>
   151ac:	ldr	x0, [sp, #56]
   151b0:	cbz	x0, 15204 <PyFloat_FromString@plt+0xe774>
   151b4:	str	x0, [sp, #48]
   151b8:	ldr	x1, [x0]
   151bc:	adrp	x19, 5d000 <PyInit__decimal@@Base+0x42a80>
   151c0:	sub	x1, x1, #0x1
   151c4:	str	x1, [x0]
   151c8:	cbnz	x1, 15120 <PyFloat_FromString@plt+0xe690>
   151cc:	bl	65d0 <_Py_Dealloc@plt>
   151d0:	b	15120 <PyFloat_FromString@plt+0xe690>
   151d4:	mov	x0, x19
   151d8:	mov	x19, #0x0                   	// #0
   151dc:	bl	65d0 <_Py_Dealloc@plt>
   151e0:	b	1515c <PyFloat_FromString@plt+0xe6cc>
   151e4:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
   151e8:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
   151ec:	mov	x19, #0x0                   	// #0
   151f0:	add	x1, x1, #0x88
   151f4:	ldr	x0, [x0, #3936]
   151f8:	ldr	x0, [x0]
   151fc:	bl	6650 <PyErr_SetString@plt>
   15200:	b	1515c <PyFloat_FromString@plt+0xe6cc>
   15204:	bl	7320 <PyFloat_FromString@plt+0x890>
   15208:	str	x0, [sp, #48]
   1520c:	cbnz	x0, 151b8 <PyFloat_FromString@plt+0xe728>
   15210:	mov	x19, #0x0                   	// #0
   15214:	b	15184 <PyFloat_FromString@plt+0xe6f4>
   15218:	stp	x29, x30, [sp, #-64]!
   1521c:	adrp	x3, 5d000 <PyInit__decimal@@Base+0x42a80>
   15220:	add	x3, x3, #0x9a0
   15224:	mov	x29, sp
   15228:	stp	x19, x20, [sp, #16]
   1522c:	adrp	x19, 5c000 <PyInit__decimal@@Base+0x41a80>
   15230:	mov	x20, x0
   15234:	ldr	x19, [x19, #4008]
   15238:	mov	x0, x1
   1523c:	add	x3, x3, #0x398
   15240:	mov	x1, x2
   15244:	add	x4, sp, #0x30
   15248:	adrp	x2, 3b000 <PyInit__decimal@@Base+0x20a80>
   1524c:	add	x2, x2, #0xfd8
   15250:	str	wzr, [sp, #44]
   15254:	str	x19, [sp, #48]
   15258:	bl	6520 <PyArg_ParseTupleAndKeywords@plt>
   1525c:	cbz	w0, 152e8 <PyFloat_FromString@plt+0xe858>
   15260:	ldr	x0, [sp, #48]
   15264:	cmp	x0, x19
   15268:	b.eq	152fc <PyFloat_FromString@plt+0xe86c>  // b.none
   1526c:	ldr	x0, [x0, #8]
   15270:	adrp	x19, 5d000 <PyInit__decimal@@Base+0x42a80>
   15274:	add	x1, x19, #0x320
   15278:	cmp	x0, x1
   1527c:	b.eq	15288 <PyFloat_FromString@plt+0xe7f8>  // b.none
   15280:	bl	69c0 <PyType_IsSubtype@plt>
   15284:	cbz	w0, 1534c <PyFloat_FromString@plt+0xe8bc>
   15288:	add	x19, x19, #0x320
   1528c:	add	x0, x19, #0x1a0
   15290:	bl	6c60 <PyFloat_FromString@plt+0x1d0>
   15294:	mov	x19, x0
   15298:	cbz	x0, 152e8 <PyFloat_FromString@plt+0xe858>
   1529c:	ldr	x2, [sp, #48]
   152a0:	add	x1, x20, #0x18
   152a4:	add	x0, x0, #0x18
   152a8:	add	x3, sp, #0x2c
   152ac:	add	x2, x2, #0x10
   152b0:	bl	365a0 <PyInit__decimal@@Base+0x1c020>
   152b4:	ldr	w1, [sp, #44]
   152b8:	ldr	x0, [sp, #48]
   152bc:	bl	7f90 <PyFloat_FromString@plt+0x1500>
   152c0:	cbnz	w0, 152d4 <PyFloat_FromString@plt+0xe844>
   152c4:	mov	x0, x19
   152c8:	ldp	x19, x20, [sp, #16]
   152cc:	ldp	x29, x30, [sp], #64
   152d0:	ret
   152d4:	ldr	x0, [x19]
   152d8:	sub	x0, x0, #0x1
   152dc:	str	x0, [x19]
   152e0:	cbz	x0, 1533c <PyFloat_FromString@plt+0xe8ac>
   152e4:	nop
   152e8:	mov	x19, #0x0                   	// #0
   152ec:	mov	x0, x19
   152f0:	ldp	x19, x20, [sp, #16]
   152f4:	ldp	x29, x30, [sp], #64
   152f8:	ret
   152fc:	adrp	x0, 5f000 <PyInit__decimal@@Base+0x44a80>
   15300:	add	x2, sp, #0x38
   15304:	mov	x1, #0x0                   	// #0
   15308:	ldr	x0, [x0, #1808]
   1530c:	bl	6740 <PyContextVar_Get@plt>
   15310:	tbnz	w0, #31, 152e8 <PyFloat_FromString@plt+0xe858>
   15314:	ldr	x0, [sp, #56]
   15318:	cbz	x0, 1536c <PyFloat_FromString@plt+0xe8dc>
   1531c:	str	x0, [sp, #48]
   15320:	ldr	x1, [x0]
   15324:	adrp	x19, 5d000 <PyInit__decimal@@Base+0x42a80>
   15328:	sub	x1, x1, #0x1
   1532c:	str	x1, [x0]
   15330:	cbnz	x1, 15288 <PyFloat_FromString@plt+0xe7f8>
   15334:	bl	65d0 <_Py_Dealloc@plt>
   15338:	b	15288 <PyFloat_FromString@plt+0xe7f8>
   1533c:	mov	x0, x19
   15340:	mov	x19, #0x0                   	// #0
   15344:	bl	65d0 <_Py_Dealloc@plt>
   15348:	b	152c4 <PyFloat_FromString@plt+0xe834>
   1534c:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
   15350:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
   15354:	mov	x19, #0x0                   	// #0
   15358:	add	x1, x1, #0x88
   1535c:	ldr	x0, [x0, #3936]
   15360:	ldr	x0, [x0]
   15364:	bl	6650 <PyErr_SetString@plt>
   15368:	b	152c4 <PyFloat_FromString@plt+0xe834>
   1536c:	bl	7320 <PyFloat_FromString@plt+0x890>
   15370:	str	x0, [sp, #48]
   15374:	cbnz	x0, 15320 <PyFloat_FromString@plt+0xe890>
   15378:	mov	x19, #0x0                   	// #0
   1537c:	b	152ec <PyFloat_FromString@plt+0xe85c>
   15380:	stp	x29, x30, [sp, #-64]!
   15384:	adrp	x3, 5d000 <PyInit__decimal@@Base+0x42a80>
   15388:	add	x3, x3, #0x9a0
   1538c:	mov	x29, sp
   15390:	stp	x19, x20, [sp, #16]
   15394:	adrp	x19, 5c000 <PyInit__decimal@@Base+0x41a80>
   15398:	mov	x20, x0
   1539c:	ldr	x19, [x19, #4008]
   153a0:	mov	x0, x1
   153a4:	add	x3, x3, #0x3a8
   153a8:	mov	x1, x2
   153ac:	add	x4, sp, #0x30
   153b0:	adrp	x2, 3b000 <PyInit__decimal@@Base+0x20a80>
   153b4:	add	x2, x2, #0xfd8
   153b8:	str	wzr, [sp, #44]
   153bc:	str	x19, [sp, #48]
   153c0:	bl	6520 <PyArg_ParseTupleAndKeywords@plt>
   153c4:	cbz	w0, 15450 <PyFloat_FromString@plt+0xe9c0>
   153c8:	ldr	x0, [sp, #48]
   153cc:	cmp	x0, x19
   153d0:	b.eq	15464 <PyFloat_FromString@plt+0xe9d4>  // b.none
   153d4:	ldr	x0, [x0, #8]
   153d8:	adrp	x19, 5d000 <PyInit__decimal@@Base+0x42a80>
   153dc:	add	x1, x19, #0x320
   153e0:	cmp	x0, x1
   153e4:	b.eq	153f0 <PyFloat_FromString@plt+0xe960>  // b.none
   153e8:	bl	69c0 <PyType_IsSubtype@plt>
   153ec:	cbz	w0, 154b4 <PyFloat_FromString@plt+0xea24>
   153f0:	add	x19, x19, #0x320
   153f4:	add	x0, x19, #0x1a0
   153f8:	bl	6c60 <PyFloat_FromString@plt+0x1d0>
   153fc:	mov	x19, x0
   15400:	cbz	x0, 15450 <PyFloat_FromString@plt+0xe9c0>
   15404:	ldr	x2, [sp, #48]
   15408:	add	x1, x20, #0x18
   1540c:	add	x0, x0, #0x18
   15410:	add	x3, sp, #0x2c
   15414:	add	x2, x2, #0x10
   15418:	bl	377b8 <PyInit__decimal@@Base+0x1d238>
   1541c:	ldr	w1, [sp, #44]
   15420:	ldr	x0, [sp, #48]
   15424:	bl	7f90 <PyFloat_FromString@plt+0x1500>
   15428:	cbnz	w0, 1543c <PyFloat_FromString@plt+0xe9ac>
   1542c:	mov	x0, x19
   15430:	ldp	x19, x20, [sp, #16]
   15434:	ldp	x29, x30, [sp], #64
   15438:	ret
   1543c:	ldr	x0, [x19]
   15440:	sub	x0, x0, #0x1
   15444:	str	x0, [x19]
   15448:	cbz	x0, 154a4 <PyFloat_FromString@plt+0xea14>
   1544c:	nop
   15450:	mov	x19, #0x0                   	// #0
   15454:	mov	x0, x19
   15458:	ldp	x19, x20, [sp, #16]
   1545c:	ldp	x29, x30, [sp], #64
   15460:	ret
   15464:	adrp	x0, 5f000 <PyInit__decimal@@Base+0x44a80>
   15468:	add	x2, sp, #0x38
   1546c:	mov	x1, #0x0                   	// #0
   15470:	ldr	x0, [x0, #1808]
   15474:	bl	6740 <PyContextVar_Get@plt>
   15478:	tbnz	w0, #31, 15450 <PyFloat_FromString@plt+0xe9c0>
   1547c:	ldr	x0, [sp, #56]
   15480:	cbz	x0, 154d4 <PyFloat_FromString@plt+0xea44>
   15484:	str	x0, [sp, #48]
   15488:	ldr	x1, [x0]
   1548c:	adrp	x19, 5d000 <PyInit__decimal@@Base+0x42a80>
   15490:	sub	x1, x1, #0x1
   15494:	str	x1, [x0]
   15498:	cbnz	x1, 153f0 <PyFloat_FromString@plt+0xe960>
   1549c:	bl	65d0 <_Py_Dealloc@plt>
   154a0:	b	153f0 <PyFloat_FromString@plt+0xe960>
   154a4:	mov	x0, x19
   154a8:	mov	x19, #0x0                   	// #0
   154ac:	bl	65d0 <_Py_Dealloc@plt>
   154b0:	b	1542c <PyFloat_FromString@plt+0xe99c>
   154b4:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
   154b8:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
   154bc:	mov	x19, #0x0                   	// #0
   154c0:	add	x1, x1, #0x88
   154c4:	ldr	x0, [x0, #3936]
   154c8:	ldr	x0, [x0]
   154cc:	bl	6650 <PyErr_SetString@plt>
   154d0:	b	1542c <PyFloat_FromString@plt+0xe99c>
   154d4:	bl	7320 <PyFloat_FromString@plt+0x890>
   154d8:	str	x0, [sp, #48]
   154dc:	cbnz	x0, 15488 <PyFloat_FromString@plt+0xe9f8>
   154e0:	mov	x19, #0x0                   	// #0
   154e4:	b	15454 <PyFloat_FromString@plt+0xe9c4>
   154e8:	stp	x29, x30, [sp, #-96]!
   154ec:	mov	x29, sp
   154f0:	add	x4, sp, #0x58
   154f4:	add	x3, sp, #0x50
   154f8:	add	x2, sp, #0x48
   154fc:	stp	x19, x20, [sp, #16]
   15500:	mov	x20, x0
   15504:	mov	x0, x1
   15508:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
   1550c:	add	x1, x1, #0x2c0
   15510:	stp	x21, x22, [sp, #32]
   15514:	str	wzr, [sp, #68]
   15518:	bl	68e0 <PyArg_ParseTuple@plt>
   1551c:	cbz	w0, 15604 <PyFloat_FromString@plt+0xeb74>
   15520:	ldr	x19, [sp, #72]
   15524:	adrp	x22, 5d000 <PyInit__decimal@@Base+0x42a80>
   15528:	add	x21, x22, #0x320
   1552c:	add	x21, x21, #0x1a0
   15530:	ldr	x0, [x19, #8]
   15534:	cmp	x0, x21
   15538:	b.eq	1561c <PyFloat_FromString@plt+0xeb8c>  // b.none
   1553c:	mov	x1, x21
   15540:	bl	69c0 <PyType_IsSubtype@plt>
   15544:	cbnz	w0, 1561c <PyFloat_FromString@plt+0xeb8c>
   15548:	ldr	x2, [x19, #8]
   1554c:	ldr	x0, [x2, #168]
   15550:	tbnz	w0, #24, 1574c <PyFloat_FromString@plt+0xecbc>
   15554:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
   15558:	mov	x22, #0x0                   	// #0
   1555c:	ldr	x2, [x2, #24]
   15560:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
   15564:	ldr	x0, [x0, #3936]
   15568:	add	x1, x1, #0x8
   1556c:	ldr	x0, [x0]
   15570:	bl	6a10 <PyErr_Format@plt>
   15574:	mov	x0, x22
   15578:	ldp	x19, x20, [sp, #16]
   1557c:	ldp	x21, x22, [sp, #32]
   15580:	ldp	x29, x30, [sp], #96
   15584:	ret
   15588:	ldr	x0, [x21]
   1558c:	add	x0, x0, #0x1
   15590:	str	x0, [x21]
   15594:	ldr	x23, [sp, #88]
   15598:	add	x24, x22, #0x320
   1559c:	add	x24, x24, #0x1a0
   155a0:	ldr	x0, [x23, #8]
   155a4:	cmp	x0, x24
   155a8:	b.eq	1569c <PyFloat_FromString@plt+0xec0c>  // b.none
   155ac:	mov	x1, x24
   155b0:	bl	69c0 <PyType_IsSubtype@plt>
   155b4:	cbnz	w0, 1569c <PyFloat_FromString@plt+0xec0c>
   155b8:	ldr	x2, [x23, #8]
   155bc:	ldr	x0, [x2, #168]
   155c0:	tbnz	w0, #24, 15790 <PyFloat_FromString@plt+0xed00>
   155c4:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
   155c8:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
   155cc:	ldr	x2, [x2, #24]
   155d0:	add	x1, x1, #0x8
   155d4:	ldr	x0, [x0, #3936]
   155d8:	ldr	x0, [x0]
   155dc:	bl	6a10 <PyErr_Format@plt>
   155e0:	ldr	x0, [x19]
   155e4:	sub	x0, x0, #0x1
   155e8:	str	x0, [x19]
   155ec:	cbz	x0, 15824 <PyFloat_FromString@plt+0xed94>
   155f0:	ldr	x0, [x21]
   155f4:	sub	x0, x0, #0x1
   155f8:	str	x0, [x21]
   155fc:	cbz	x0, 157ac <PyFloat_FromString@plt+0xed1c>
   15600:	ldp	x23, x24, [sp, #48]
   15604:	mov	x22, #0x0                   	// #0
   15608:	mov	x0, x22
   1560c:	ldp	x19, x20, [sp, #16]
   15610:	ldp	x21, x22, [sp, #32]
   15614:	ldp	x29, x30, [sp], #96
   15618:	ret
   1561c:	ldr	x0, [x19]
   15620:	stp	x23, x24, [sp, #48]
   15624:	add	x0, x0, #0x1
   15628:	str	x0, [x19]
   1562c:	ldr	x21, [sp, #80]
   15630:	add	x23, x22, #0x320
   15634:	add	x23, x23, #0x1a0
   15638:	ldr	x0, [x21, #8]
   1563c:	cmp	x0, x23
   15640:	b.eq	15588 <PyFloat_FromString@plt+0xeaf8>  // b.none
   15644:	mov	x1, x23
   15648:	bl	69c0 <PyType_IsSubtype@plt>
   1564c:	cbnz	w0, 15588 <PyFloat_FromString@plt+0xeaf8>
   15650:	ldr	x2, [x21, #8]
   15654:	ldr	x0, [x2, #168]
   15658:	tbnz	w0, #24, 15730 <PyFloat_FromString@plt+0xeca0>
   1565c:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
   15660:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
   15664:	ldr	x2, [x2, #24]
   15668:	add	x1, x1, #0x8
   1566c:	ldr	x0, [x0, #3936]
   15670:	ldr	x0, [x0]
   15674:	bl	6a10 <PyErr_Format@plt>
   15678:	ldr	x0, [x19]
   1567c:	sub	x0, x0, #0x1
   15680:	str	x0, [x19]
   15684:	cbnz	x0, 15600 <PyFloat_FromString@plt+0xeb70>
   15688:	mov	x0, x19
   1568c:	mov	x22, #0x0                   	// #0
   15690:	bl	65d0 <_Py_Dealloc@plt>
   15694:	ldp	x23, x24, [sp, #48]
   15698:	b	15608 <PyFloat_FromString@plt+0xeb78>
   1569c:	ldr	x0, [x23]
   156a0:	add	x0, x0, #0x1
   156a4:	str	x0, [x23]
   156a8:	add	x22, x22, #0x320
   156ac:	add	x0, x22, #0x1a0
   156b0:	bl	6c60 <PyFloat_FromString@plt+0x1d0>
   156b4:	mov	x22, x0
   156b8:	cbz	x0, 157c0 <PyFloat_FromString@plt+0xed30>
   156bc:	add	x0, x0, #0x18
   156c0:	add	x5, sp, #0x44
   156c4:	add	x4, x20, #0x10
   156c8:	add	x3, x23, #0x18
   156cc:	add	x2, x21, #0x18
   156d0:	add	x1, x19, #0x18
   156d4:	bl	31d40 <PyInit__decimal@@Base+0x177c0>
   156d8:	ldr	x0, [x19]
   156dc:	sub	x0, x0, #0x1
   156e0:	str	x0, [x19]
   156e4:	cbz	x0, 15784 <PyFloat_FromString@plt+0xecf4>
   156e8:	ldr	x0, [x21]
   156ec:	sub	x0, x0, #0x1
   156f0:	str	x0, [x21]
   156f4:	cbz	x0, 15778 <PyFloat_FromString@plt+0xece8>
   156f8:	ldr	x0, [x23]
   156fc:	sub	x0, x0, #0x1
   15700:	str	x0, [x23]
   15704:	cbz	x0, 1576c <PyFloat_FromString@plt+0xecdc>
   15708:	ldr	w1, [sp, #68]
   1570c:	mov	x0, x20
   15710:	bl	7f90 <PyFloat_FromString@plt+0x1500>
   15714:	cbnz	w0, 15800 <PyFloat_FromString@plt+0xed70>
   15718:	mov	x0, x22
   1571c:	ldp	x19, x20, [sp, #16]
   15720:	ldp	x21, x22, [sp, #32]
   15724:	ldp	x23, x24, [sp, #48]
   15728:	ldp	x29, x30, [sp], #96
   1572c:	ret
   15730:	mov	x1, x21
   15734:	mov	x0, x23
   15738:	mov	x2, x20
   1573c:	bl	82f8 <PyFloat_FromString@plt+0x1868>
   15740:	mov	x21, x0
   15744:	cbnz	x0, 15594 <PyFloat_FromString@plt+0xeb04>
   15748:	b	15678 <PyFloat_FromString@plt+0xebe8>
   1574c:	mov	x1, x19
   15750:	mov	x0, x21
   15754:	mov	x2, x20
   15758:	bl	82f8 <PyFloat_FromString@plt+0x1868>
   1575c:	mov	x19, x0
   15760:	cbz	x0, 15604 <PyFloat_FromString@plt+0xeb74>
   15764:	stp	x23, x24, [sp, #48]
   15768:	b	1562c <PyFloat_FromString@plt+0xeb9c>
   1576c:	mov	x0, x23
   15770:	bl	65d0 <_Py_Dealloc@plt>
   15774:	b	15708 <PyFloat_FromString@plt+0xec78>
   15778:	mov	x0, x21
   1577c:	bl	65d0 <_Py_Dealloc@plt>
   15780:	b	156f8 <PyFloat_FromString@plt+0xec68>
   15784:	mov	x0, x19
   15788:	bl	65d0 <_Py_Dealloc@plt>
   1578c:	b	156e8 <PyFloat_FromString@plt+0xec58>
   15790:	mov	x1, x23
   15794:	mov	x0, x24
   15798:	mov	x2, x20
   1579c:	bl	82f8 <PyFloat_FromString@plt+0x1868>
   157a0:	mov	x23, x0
   157a4:	cbnz	x0, 156a8 <PyFloat_FromString@plt+0xec18>
   157a8:	b	155e0 <PyFloat_FromString@plt+0xeb50>
   157ac:	mov	x0, x21
   157b0:	mov	x22, #0x0                   	// #0
   157b4:	bl	65d0 <_Py_Dealloc@plt>
   157b8:	ldp	x23, x24, [sp, #48]
   157bc:	b	15608 <PyFloat_FromString@plt+0xeb78>
   157c0:	ldr	x0, [x19]
   157c4:	sub	x0, x0, #0x1
   157c8:	str	x0, [x19]
   157cc:	cbz	x0, 1583c <PyFloat_FromString@plt+0xedac>
   157d0:	ldr	x0, [x21]
   157d4:	sub	x0, x0, #0x1
   157d8:	str	x0, [x21]
   157dc:	cbz	x0, 15830 <PyFloat_FromString@plt+0xeda0>
   157e0:	ldr	x0, [x23]
   157e4:	sub	x0, x0, #0x1
   157e8:	str	x0, [x23]
   157ec:	cbnz	x0, 15600 <PyFloat_FromString@plt+0xeb70>
   157f0:	mov	x0, x23
   157f4:	bl	65d0 <_Py_Dealloc@plt>
   157f8:	ldp	x23, x24, [sp, #48]
   157fc:	b	15608 <PyFloat_FromString@plt+0xeb78>
   15800:	ldr	x0, [x22]
   15804:	sub	x0, x0, #0x1
   15808:	str	x0, [x22]
   1580c:	cbnz	x0, 15600 <PyFloat_FromString@plt+0xeb70>
   15810:	mov	x0, x22
   15814:	mov	x22, #0x0                   	// #0
   15818:	bl	65d0 <_Py_Dealloc@plt>
   1581c:	ldp	x23, x24, [sp, #48]
   15820:	b	15608 <PyFloat_FromString@plt+0xeb78>
   15824:	mov	x0, x19
   15828:	bl	65d0 <_Py_Dealloc@plt>
   1582c:	b	155f0 <PyFloat_FromString@plt+0xeb60>
   15830:	mov	x0, x21
   15834:	bl	65d0 <_Py_Dealloc@plt>
   15838:	b	157e0 <PyFloat_FromString@plt+0xed50>
   1583c:	mov	x0, x19
   15840:	bl	65d0 <_Py_Dealloc@plt>
   15844:	b	157d0 <PyFloat_FromString@plt+0xed40>
   15848:	stp	x29, x30, [sp, #-128]!
   1584c:	adrp	x3, 5d000 <PyInit__decimal@@Base+0x42a80>
   15850:	add	x3, x3, #0x9a0
   15854:	mov	x29, sp
   15858:	stp	x19, x20, [sp, #16]
   1585c:	adrp	x19, 5c000 <PyInit__decimal@@Base+0x41a80>
   15860:	add	x3, x3, #0x3b8
   15864:	ldr	x20, [x19, #4008]
   15868:	add	x5, sp, #0x48
   1586c:	add	x4, sp, #0x40
   15870:	str	x21, [sp, #32]
   15874:	mov	x21, x0
   15878:	mov	x0, x1
   1587c:	mov	x1, x2
   15880:	adrp	x2, 3c000 <PyInit__decimal@@Base+0x21a80>
   15884:	add	x2, x2, #0x2b0
   15888:	str	wzr, [sp, #60]
   1588c:	stp	x20, x20, [sp, #64]
   15890:	bl	6520 <PyArg_ParseTupleAndKeywords@plt>
   15894:	cbz	w0, 15970 <PyFloat_FromString@plt+0xeee0>
   15898:	ldr	x2, [sp, #72]
   1589c:	cmp	x2, x20
   158a0:	b.eq	15988 <PyFloat_FromString@plt+0xeef8>  // b.none
   158a4:	ldr	x0, [x2, #8]
   158a8:	adrp	x1, 5d000 <PyInit__decimal@@Base+0x42a80>
   158ac:	add	x1, x1, #0x320
   158b0:	add	x20, sp, #0x50
   158b4:	cmp	x0, x1
   158b8:	b.eq	158cc <PyFloat_FromString@plt+0xee3c>  // b.none
   158bc:	bl	69c0 <PyType_IsSubtype@plt>
   158c0:	cbz	w0, 15a18 <PyFloat_FromString@plt+0xef88>
   158c4:	ldr	x2, [sp, #72]
   158c8:	add	x20, sp, #0x50
   158cc:	add	x1, x2, #0x10
   158d0:	ldp	x2, x3, [x2, #16]
   158d4:	stp	x2, x3, [sp, #80]
   158d8:	ldp	x2, x3, [x1, #16]
   158dc:	stp	x2, x3, [sp, #96]
   158e0:	ldr	x19, [x19, #4008]
   158e4:	ldp	x2, x3, [x1, #32]
   158e8:	stp	x2, x3, [sp, #112]
   158ec:	ldr	x0, [sp, #64]
   158f0:	cmp	x0, x19
   158f4:	b.eq	15910 <PyFloat_FromString@plt+0xee80>  // b.none
   158f8:	bl	9178 <PyFloat_FromString@plt+0x26e8>
   158fc:	mov	w1, w0
   15900:	tbnz	w0, #31, 15970 <PyFloat_FromString@plt+0xeee0>
   15904:	mov	x0, x20
   15908:	bl	1d6d0 <PyInit__decimal@@Base+0x3150>
   1590c:	cbz	w0, 159c8 <PyFloat_FromString@plt+0xef38>
   15910:	adrp	x0, 5d000 <PyInit__decimal@@Base+0x42a80>
   15914:	add	x0, x0, #0x320
   15918:	add	x0, x0, #0x1a0
   1591c:	bl	6c60 <PyFloat_FromString@plt+0x1d0>
   15920:	mov	x19, x0
   15924:	cbz	x0, 15970 <PyFloat_FromString@plt+0xeee0>
   15928:	add	x1, x21, #0x18
   1592c:	add	x0, x0, #0x18
   15930:	mov	x2, x20
   15934:	add	x3, sp, #0x3c
   15938:	bl	37550 <PyInit__decimal@@Base+0x1cfd0>
   1593c:	ldr	w1, [sp, #60]
   15940:	ldr	x0, [sp, #72]
   15944:	bl	7f90 <PyFloat_FromString@plt+0x1500>
   15948:	cbnz	w0, 15960 <PyFloat_FromString@plt+0xeed0>
   1594c:	mov	x0, x19
   15950:	ldp	x19, x20, [sp, #16]
   15954:	ldr	x21, [sp, #32]
   15958:	ldp	x29, x30, [sp], #128
   1595c:	ret
   15960:	ldr	x0, [x19]
   15964:	sub	x0, x0, #0x1
   15968:	str	x0, [x19]
   1596c:	cbz	x0, 159e8 <PyFloat_FromString@plt+0xef58>
   15970:	mov	x19, #0x0                   	// #0
   15974:	mov	x0, x19
   15978:	ldp	x19, x20, [sp, #16]
   1597c:	ldr	x21, [sp, #32]
   15980:	ldp	x29, x30, [sp], #128
   15984:	ret
   15988:	adrp	x0, 5f000 <PyInit__decimal@@Base+0x44a80>
   1598c:	add	x20, sp, #0x50
   15990:	mov	x2, x20
   15994:	mov	x1, #0x0                   	// #0
   15998:	ldr	x0, [x0, #1808]
   1599c:	bl	6740 <PyContextVar_Get@plt>
   159a0:	tbnz	w0, #31, 15970 <PyFloat_FromString@plt+0xeee0>
   159a4:	ldr	x0, [sp, #80]
   159a8:	cbz	x0, 15a04 <PyFloat_FromString@plt+0xef74>
   159ac:	str	x0, [sp, #72]
   159b0:	ldr	x1, [x0]
   159b4:	sub	x1, x1, #0x1
   159b8:	str	x1, [x0]
   159bc:	cbz	x1, 159f8 <PyFloat_FromString@plt+0xef68>
   159c0:	ldr	x2, [sp, #72]
   159c4:	b	158cc <PyFloat_FromString@plt+0xee3c>
   159c8:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
   159cc:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
   159d0:	mov	x19, #0x0                   	// #0
   159d4:	add	x1, x1, #0x2c8
   159d8:	ldr	x0, [x0, #3920]
   159dc:	ldr	x0, [x0]
   159e0:	bl	6650 <PyErr_SetString@plt>
   159e4:	b	1594c <PyFloat_FromString@plt+0xeebc>
   159e8:	mov	x0, x19
   159ec:	mov	x19, #0x0                   	// #0
   159f0:	bl	65d0 <_Py_Dealloc@plt>
   159f4:	b	1594c <PyFloat_FromString@plt+0xeebc>
   159f8:	bl	65d0 <_Py_Dealloc@plt>
   159fc:	ldr	x2, [sp, #72]
   15a00:	b	158cc <PyFloat_FromString@plt+0xee3c>
   15a04:	bl	7320 <PyFloat_FromString@plt+0x890>
   15a08:	str	x0, [sp, #72]
   15a0c:	cbnz	x0, 159b0 <PyFloat_FromString@plt+0xef20>
   15a10:	mov	x19, #0x0                   	// #0
   15a14:	b	15974 <PyFloat_FromString@plt+0xeee4>
   15a18:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
   15a1c:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
   15a20:	mov	x19, #0x0                   	// #0
   15a24:	add	x1, x1, #0x88
   15a28:	ldr	x0, [x0, #3936]
   15a2c:	ldr	x0, [x0]
   15a30:	bl	6650 <PyErr_SetString@plt>
   15a34:	b	1594c <PyFloat_FromString@plt+0xeebc>
   15a38:	stp	x29, x30, [sp, #-128]!
   15a3c:	adrp	x3, 5d000 <PyInit__decimal@@Base+0x42a80>
   15a40:	add	x3, x3, #0x9a0
   15a44:	mov	x29, sp
   15a48:	stp	x19, x20, [sp, #16]
   15a4c:	adrp	x19, 5c000 <PyInit__decimal@@Base+0x41a80>
   15a50:	add	x3, x3, #0x3d0
   15a54:	ldr	x20, [x19, #4008]
   15a58:	add	x5, sp, #0x48
   15a5c:	add	x4, sp, #0x40
   15a60:	str	x21, [sp, #32]
   15a64:	mov	x21, x0
   15a68:	mov	x0, x1
   15a6c:	mov	x1, x2
   15a70:	adrp	x2, 3c000 <PyInit__decimal@@Base+0x21a80>
   15a74:	add	x2, x2, #0x2b0
   15a78:	str	wzr, [sp, #60]
   15a7c:	stp	x20, x20, [sp, #64]
   15a80:	bl	6520 <PyArg_ParseTupleAndKeywords@plt>
   15a84:	cbz	w0, 15b60 <PyFloat_FromString@plt+0xf0d0>
   15a88:	ldr	x2, [sp, #72]
   15a8c:	cmp	x2, x20
   15a90:	b.eq	15b78 <PyFloat_FromString@plt+0xf0e8>  // b.none
   15a94:	ldr	x0, [x2, #8]
   15a98:	adrp	x1, 5d000 <PyInit__decimal@@Base+0x42a80>
   15a9c:	add	x1, x1, #0x320
   15aa0:	add	x20, sp, #0x50
   15aa4:	cmp	x0, x1
   15aa8:	b.eq	15abc <PyFloat_FromString@plt+0xf02c>  // b.none
   15aac:	bl	69c0 <PyType_IsSubtype@plt>
   15ab0:	cbz	w0, 15c08 <PyFloat_FromString@plt+0xf178>
   15ab4:	ldr	x2, [sp, #72]
   15ab8:	add	x20, sp, #0x50
   15abc:	add	x1, x2, #0x10
   15ac0:	ldp	x2, x3, [x2, #16]
   15ac4:	stp	x2, x3, [sp, #80]
   15ac8:	ldp	x2, x3, [x1, #16]
   15acc:	stp	x2, x3, [sp, #96]
   15ad0:	ldr	x19, [x19, #4008]
   15ad4:	ldp	x2, x3, [x1, #32]
   15ad8:	stp	x2, x3, [sp, #112]
   15adc:	ldr	x0, [sp, #64]
   15ae0:	cmp	x0, x19
   15ae4:	b.eq	15b00 <PyFloat_FromString@plt+0xf070>  // b.none
   15ae8:	bl	9178 <PyFloat_FromString@plt+0x26e8>
   15aec:	mov	w1, w0
   15af0:	tbnz	w0, #31, 15b60 <PyFloat_FromString@plt+0xf0d0>
   15af4:	mov	x0, x20
   15af8:	bl	1d6d0 <PyInit__decimal@@Base+0x3150>
   15afc:	cbz	w0, 15bb8 <PyFloat_FromString@plt+0xf128>
   15b00:	adrp	x0, 5d000 <PyInit__decimal@@Base+0x42a80>
   15b04:	add	x0, x0, #0x320
   15b08:	add	x0, x0, #0x1a0
   15b0c:	bl	6c60 <PyFloat_FromString@plt+0x1d0>
   15b10:	mov	x19, x0
   15b14:	cbz	x0, 15b60 <PyFloat_FromString@plt+0xf0d0>
   15b18:	add	x1, x21, #0x18
   15b1c:	add	x0, x0, #0x18
   15b20:	mov	x2, x20
   15b24:	add	x3, sp, #0x3c
   15b28:	bl	37530 <PyInit__decimal@@Base+0x1cfb0>
   15b2c:	ldr	w1, [sp, #60]
   15b30:	ldr	x0, [sp, #72]
   15b34:	bl	7f90 <PyFloat_FromString@plt+0x1500>
   15b38:	cbnz	w0, 15b50 <PyFloat_FromString@plt+0xf0c0>
   15b3c:	mov	x0, x19
   15b40:	ldp	x19, x20, [sp, #16]
   15b44:	ldr	x21, [sp, #32]
   15b48:	ldp	x29, x30, [sp], #128
   15b4c:	ret
   15b50:	ldr	x0, [x19]
   15b54:	sub	x0, x0, #0x1
   15b58:	str	x0, [x19]
   15b5c:	cbz	x0, 15bd8 <PyFloat_FromString@plt+0xf148>
   15b60:	mov	x19, #0x0                   	// #0
   15b64:	mov	x0, x19
   15b68:	ldp	x19, x20, [sp, #16]
   15b6c:	ldr	x21, [sp, #32]
   15b70:	ldp	x29, x30, [sp], #128
   15b74:	ret
   15b78:	adrp	x0, 5f000 <PyInit__decimal@@Base+0x44a80>
   15b7c:	add	x20, sp, #0x50
   15b80:	mov	x2, x20
   15b84:	mov	x1, #0x0                   	// #0
   15b88:	ldr	x0, [x0, #1808]
   15b8c:	bl	6740 <PyContextVar_Get@plt>
   15b90:	tbnz	w0, #31, 15b60 <PyFloat_FromString@plt+0xf0d0>
   15b94:	ldr	x0, [sp, #80]
   15b98:	cbz	x0, 15bf4 <PyFloat_FromString@plt+0xf164>
   15b9c:	str	x0, [sp, #72]
   15ba0:	ldr	x1, [x0]
   15ba4:	sub	x1, x1, #0x1
   15ba8:	str	x1, [x0]
   15bac:	cbz	x1, 15be8 <PyFloat_FromString@plt+0xf158>
   15bb0:	ldr	x2, [sp, #72]
   15bb4:	b	15abc <PyFloat_FromString@plt+0xf02c>
   15bb8:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
   15bbc:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
   15bc0:	mov	x19, #0x0                   	// #0
   15bc4:	add	x1, x1, #0x2f0
   15bc8:	ldr	x0, [x0, #3920]
   15bcc:	ldr	x0, [x0]
   15bd0:	bl	6650 <PyErr_SetString@plt>
   15bd4:	b	15b3c <PyFloat_FromString@plt+0xf0ac>
   15bd8:	mov	x0, x19
   15bdc:	mov	x19, #0x0                   	// #0
   15be0:	bl	65d0 <_Py_Dealloc@plt>
   15be4:	b	15b3c <PyFloat_FromString@plt+0xf0ac>
   15be8:	bl	65d0 <_Py_Dealloc@plt>
   15bec:	ldr	x2, [sp, #72]
   15bf0:	b	15abc <PyFloat_FromString@plt+0xf02c>
   15bf4:	bl	7320 <PyFloat_FromString@plt+0x890>
   15bf8:	str	x0, [sp, #72]
   15bfc:	cbnz	x0, 15ba0 <PyFloat_FromString@plt+0xf110>
   15c00:	mov	x19, #0x0                   	// #0
   15c04:	b	15b64 <PyFloat_FromString@plt+0xf0d4>
   15c08:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
   15c0c:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
   15c10:	mov	x19, #0x0                   	// #0
   15c14:	add	x1, x1, #0x88
   15c18:	ldr	x0, [x0, #3936]
   15c1c:	ldr	x0, [x0]
   15c20:	bl	6650 <PyErr_SetString@plt>
   15c24:	b	15b3c <PyFloat_FromString@plt+0xf0ac>
   15c28:	stp	x29, x30, [sp, #-112]!
   15c2c:	adrp	x3, 5d000 <PyInit__decimal@@Base+0x42a80>
   15c30:	add	x3, x3, #0x9a0
   15c34:	mov	x29, sp
   15c38:	stp	x19, x20, [sp, #16]
   15c3c:	adrp	x20, 5c000 <PyInit__decimal@@Base+0x41a80>
   15c40:	mov	x19, x0
   15c44:	ldr	x20, [x20, #4008]
   15c48:	mov	x0, x1
   15c4c:	add	x3, x3, #0x3e8
   15c50:	mov	x1, x2
   15c54:	add	x6, sp, #0x60
   15c58:	adrp	x2, 3c000 <PyInit__decimal@@Base+0x21a80>
   15c5c:	add	x5, sp, #0x58
   15c60:	add	x2, x2, #0x318
   15c64:	add	x4, sp, #0x50
   15c68:	str	wzr, [sp, #76]
   15c6c:	str	x20, [sp, #96]
   15c70:	bl	6520 <PyArg_ParseTupleAndKeywords@plt>
   15c74:	cbz	w0, 15d8c <PyFloat_FromString@plt+0xf2fc>
   15c78:	stp	x21, x22, [sp, #32]
   15c7c:	ldr	x22, [sp, #96]
   15c80:	cmp	x22, x20
   15c84:	b.eq	15f0c <PyFloat_FromString@plt+0xf47c>  // b.none
   15c88:	ldr	x0, [x22, #8]
   15c8c:	adrp	x20, 5d000 <PyInit__decimal@@Base+0x42a80>
   15c90:	add	x1, x20, #0x320
   15c94:	cmp	x0, x1
   15c98:	b.eq	15ca8 <PyFloat_FromString@plt+0xf218>  // b.none
   15c9c:	bl	69c0 <PyType_IsSubtype@plt>
   15ca0:	cbz	w0, 16048 <PyFloat_FromString@plt+0xf5b8>
   15ca4:	ldr	x22, [sp, #96]
   15ca8:	add	x21, x20, #0x320
   15cac:	ldr	x0, [x19, #8]
   15cb0:	add	x21, x21, #0x1a0
   15cb4:	cmp	x0, x21
   15cb8:	b.eq	15da0 <PyFloat_FromString@plt+0xf310>  // b.none
   15cbc:	mov	x1, x21
   15cc0:	bl	69c0 <PyType_IsSubtype@plt>
   15cc4:	cbnz	w0, 15ebc <PyFloat_FromString@plt+0xf42c>
   15cc8:	ldr	x2, [x19, #8]
   15ccc:	ldr	x0, [x2, #168]
   15cd0:	tbnz	w0, #24, 15f4c <PyFloat_FromString@plt+0xf4bc>
   15cd4:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
   15cd8:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
   15cdc:	ldr	x2, [x2, #24]
   15ce0:	add	x1, x1, #0x8
   15ce4:	ldr	x0, [x0, #3936]
   15ce8:	mov	x20, #0x0                   	// #0
   15cec:	ldr	x0, [x0]
   15cf0:	bl	6a10 <PyErr_Format@plt>
   15cf4:	ldp	x21, x22, [sp, #32]
   15cf8:	mov	x0, x20
   15cfc:	ldp	x19, x20, [sp, #16]
   15d00:	ldp	x29, x30, [sp], #112
   15d04:	ret
   15d08:	ldr	x22, [sp, #96]
   15d0c:	ldr	x0, [x23]
   15d10:	add	x0, x0, #0x1
   15d14:	str	x0, [x23]
   15d18:	ldr	x24, [sp, #88]
   15d1c:	add	x21, x20, #0x320
   15d20:	add	x21, x21, #0x1a0
   15d24:	ldr	x0, [x24, #8]
   15d28:	cmp	x0, x21
   15d2c:	b.eq	15e24 <PyFloat_FromString@plt+0xf394>  // b.none
   15d30:	mov	x1, x21
   15d34:	bl	69c0 <PyType_IsSubtype@plt>
   15d38:	cbnz	w0, 15e24 <PyFloat_FromString@plt+0xf394>
   15d3c:	ldr	x2, [x24, #8]
   15d40:	ldr	x0, [x2, #168]
   15d44:	tbnz	w0, #24, 15f70 <PyFloat_FromString@plt+0xf4e0>
   15d48:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
   15d4c:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
   15d50:	ldr	x2, [x2, #24]
   15d54:	add	x1, x1, #0x8
   15d58:	ldr	x0, [x0, #3936]
   15d5c:	ldr	x0, [x0]
   15d60:	bl	6a10 <PyErr_Format@plt>
   15d64:	ldr	x0, [x19]
   15d68:	sub	x0, x0, #0x1
   15d6c:	str	x0, [x19]
   15d70:	cbz	x0, 1603c <PyFloat_FromString@plt+0xf5ac>
   15d74:	ldr	x0, [x23]
   15d78:	sub	x0, x0, #0x1
   15d7c:	str	x0, [x23]
   15d80:	cbz	x0, 16024 <PyFloat_FromString@plt+0xf594>
   15d84:	ldp	x21, x22, [sp, #32]
   15d88:	ldp	x23, x24, [sp, #48]
   15d8c:	mov	x20, #0x0                   	// #0
   15d90:	mov	x0, x20
   15d94:	ldp	x19, x20, [sp, #16]
   15d98:	ldp	x29, x30, [sp], #112
   15d9c:	ret
   15da0:	stp	x23, x24, [sp, #48]
   15da4:	ldr	x0, [x19]
   15da8:	add	x0, x0, #0x1
   15dac:	str	x0, [x19]
   15db0:	ldr	x23, [sp, #80]
   15db4:	add	x21, x20, #0x320
   15db8:	add	x21, x21, #0x1a0
   15dbc:	ldr	x0, [x23, #8]
   15dc0:	cmp	x0, x21
   15dc4:	b.eq	15d0c <PyFloat_FromString@plt+0xf27c>  // b.none
   15dc8:	mov	x1, x21
   15dcc:	bl	69c0 <PyType_IsSubtype@plt>
   15dd0:	cbnz	w0, 15d08 <PyFloat_FromString@plt+0xf278>
   15dd4:	ldr	x2, [x23, #8]
   15dd8:	ldr	x0, [x2, #168]
   15ddc:	tbnz	w0, #24, 15ec8 <PyFloat_FromString@plt+0xf438>
   15de0:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
   15de4:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
   15de8:	ldr	x2, [x2, #24]
   15dec:	add	x1, x1, #0x8
   15df0:	ldr	x0, [x0, #3936]
   15df4:	ldr	x0, [x0]
   15df8:	bl	6a10 <PyErr_Format@plt>
   15dfc:	ldr	x0, [x19]
   15e00:	sub	x0, x0, #0x1
   15e04:	str	x0, [x19]
   15e08:	cbnz	x0, 15d84 <PyFloat_FromString@plt+0xf2f4>
   15e0c:	mov	x0, x19
   15e10:	mov	x20, #0x0                   	// #0
   15e14:	bl	65d0 <_Py_Dealloc@plt>
   15e18:	ldp	x21, x22, [sp, #32]
   15e1c:	ldp	x23, x24, [sp, #48]
   15e20:	b	15cf8 <PyFloat_FromString@plt+0xf268>
   15e24:	ldr	x1, [x24]
   15e28:	add	x1, x1, #0x1
   15e2c:	str	x1, [x24]
   15e30:	add	x20, x20, #0x320
   15e34:	add	x0, x20, #0x1a0
   15e38:	bl	6c60 <PyFloat_FromString@plt+0x1d0>
   15e3c:	mov	x20, x0
   15e40:	cbz	x0, 15fc4 <PyFloat_FromString@plt+0xf534>
   15e44:	ldr	x4, [sp, #96]
   15e48:	add	x1, x19, #0x18
   15e4c:	add	x5, sp, #0x4c
   15e50:	add	x3, x24, #0x18
   15e54:	add	x2, x23, #0x18
   15e58:	add	x0, x0, #0x18
   15e5c:	add	x4, x4, #0x10
   15e60:	bl	31d40 <PyInit__decimal@@Base+0x177c0>
   15e64:	ldr	x1, [x19]
   15e68:	sub	x1, x1, #0x1
   15e6c:	str	x1, [x19]
   15e70:	cbz	x1, 15f00 <PyFloat_FromString@plt+0xf470>
   15e74:	ldr	x1, [x23]
   15e78:	sub	x1, x1, #0x1
   15e7c:	str	x1, [x23]
   15e80:	cbz	x1, 15ef4 <PyFloat_FromString@plt+0xf464>
   15e84:	ldr	x1, [x24]
   15e88:	sub	x1, x1, #0x1
   15e8c:	str	x1, [x24]
   15e90:	cbz	x1, 15ee8 <PyFloat_FromString@plt+0xf458>
   15e94:	ldr	w1, [sp, #76]
   15e98:	ldr	x0, [sp, #96]
   15e9c:	bl	7f90 <PyFloat_FromString@plt+0x1500>
   15ea0:	cbnz	w0, 15f8c <PyFloat_FromString@plt+0xf4fc>
   15ea4:	mov	x0, x20
   15ea8:	ldp	x19, x20, [sp, #16]
   15eac:	ldp	x21, x22, [sp, #32]
   15eb0:	ldp	x23, x24, [sp, #48]
   15eb4:	ldp	x29, x30, [sp], #112
   15eb8:	ret
   15ebc:	stp	x23, x24, [sp, #48]
   15ec0:	ldr	x22, [sp, #96]
   15ec4:	b	15da4 <PyFloat_FromString@plt+0xf314>
   15ec8:	mov	x1, x23
   15ecc:	mov	x2, x22
   15ed0:	mov	x0, x21
   15ed4:	bl	82f8 <PyFloat_FromString@plt+0x1868>
   15ed8:	mov	x23, x0
   15edc:	cbz	x0, 15dfc <PyFloat_FromString@plt+0xf36c>
   15ee0:	ldr	x22, [sp, #96]
   15ee4:	b	15d18 <PyFloat_FromString@plt+0xf288>
   15ee8:	mov	x0, x24
   15eec:	bl	65d0 <_Py_Dealloc@plt>
   15ef0:	b	15e94 <PyFloat_FromString@plt+0xf404>
   15ef4:	mov	x0, x23
   15ef8:	bl	65d0 <_Py_Dealloc@plt>
   15efc:	b	15e84 <PyFloat_FromString@plt+0xf3f4>
   15f00:	mov	x0, x19
   15f04:	bl	65d0 <_Py_Dealloc@plt>
   15f08:	b	15e74 <PyFloat_FromString@plt+0xf3e4>
   15f0c:	adrp	x0, 5f000 <PyInit__decimal@@Base+0x44a80>
   15f10:	add	x2, sp, #0x68
   15f14:	mov	x1, #0x0                   	// #0
   15f18:	ldr	x0, [x0, #1808]
   15f1c:	bl	6740 <PyContextVar_Get@plt>
   15f20:	tbnz	w0, #31, 1606c <PyFloat_FromString@plt+0xf5dc>
   15f24:	ldr	x0, [sp, #104]
   15f28:	cbz	x0, 16008 <PyFloat_FromString@plt+0xf578>
   15f2c:	str	x0, [sp, #96]
   15f30:	ldr	x1, [x0]
   15f34:	sub	x1, x1, #0x1
   15f38:	str	x1, [x0]
   15f3c:	cbz	x1, 15fb4 <PyFloat_FromString@plt+0xf524>
   15f40:	adrp	x20, 5d000 <PyInit__decimal@@Base+0x42a80>
   15f44:	ldr	x22, [sp, #96]
   15f48:	b	15ca8 <PyFloat_FromString@plt+0xf218>
   15f4c:	mov	x1, x19
   15f50:	mov	x2, x22
   15f54:	mov	x0, x21
   15f58:	bl	82f8 <PyFloat_FromString@plt+0x1868>
   15f5c:	mov	x19, x0
   15f60:	cbz	x0, 16018 <PyFloat_FromString@plt+0xf588>
   15f64:	stp	x23, x24, [sp, #48]
   15f68:	ldr	x22, [sp, #96]
   15f6c:	b	15db0 <PyFloat_FromString@plt+0xf320>
   15f70:	mov	x1, x24
   15f74:	mov	x2, x22
   15f78:	mov	x0, x21
   15f7c:	bl	82f8 <PyFloat_FromString@plt+0x1868>
   15f80:	mov	x24, x0
   15f84:	cbnz	x0, 15e30 <PyFloat_FromString@plt+0xf3a0>
   15f88:	b	15d64 <PyFloat_FromString@plt+0xf2d4>
   15f8c:	ldr	x0, [x20]
   15f90:	sub	x0, x0, #0x1
   15f94:	str	x0, [x20]
   15f98:	cbnz	x0, 15d84 <PyFloat_FromString@plt+0xf2f4>
   15f9c:	mov	x0, x20
   15fa0:	mov	x20, #0x0                   	// #0
   15fa4:	bl	65d0 <_Py_Dealloc@plt>
   15fa8:	ldp	x21, x22, [sp, #32]
   15fac:	ldp	x23, x24, [sp, #48]
   15fb0:	b	15cf8 <PyFloat_FromString@plt+0xf268>
   15fb4:	bl	65d0 <_Py_Dealloc@plt>
   15fb8:	adrp	x20, 5d000 <PyInit__decimal@@Base+0x42a80>
   15fbc:	ldr	x22, [sp, #96]
   15fc0:	b	15ca8 <PyFloat_FromString@plt+0xf218>
   15fc4:	ldr	x0, [x19]
   15fc8:	sub	x0, x0, #0x1
   15fcc:	str	x0, [x19]
   15fd0:	cbz	x0, 16084 <PyFloat_FromString@plt+0xf5f4>
   15fd4:	ldr	x0, [x23]
   15fd8:	sub	x0, x0, #0x1
   15fdc:	str	x0, [x23]
   15fe0:	cbz	x0, 16078 <PyFloat_FromString@plt+0xf5e8>
   15fe4:	ldr	x0, [x24]
   15fe8:	sub	x0, x0, #0x1
   15fec:	str	x0, [x24]
   15ff0:	cbnz	x0, 15d84 <PyFloat_FromString@plt+0xf2f4>
   15ff4:	mov	x0, x24
   15ff8:	bl	65d0 <_Py_Dealloc@plt>
   15ffc:	ldp	x21, x22, [sp, #32]
   16000:	ldp	x23, x24, [sp, #48]
   16004:	b	15cf8 <PyFloat_FromString@plt+0xf268>
   16008:	bl	7320 <PyFloat_FromString@plt+0x890>
   1600c:	str	x0, [sp, #96]
   16010:	cbnz	x0, 15f30 <PyFloat_FromString@plt+0xf4a0>
   16014:	nop
   16018:	mov	x20, #0x0                   	// #0
   1601c:	ldp	x21, x22, [sp, #32]
   16020:	b	15d90 <PyFloat_FromString@plt+0xf300>
   16024:	mov	x0, x23
   16028:	mov	x20, #0x0                   	// #0
   1602c:	bl	65d0 <_Py_Dealloc@plt>
   16030:	ldp	x21, x22, [sp, #32]
   16034:	ldp	x23, x24, [sp, #48]
   16038:	b	15cf8 <PyFloat_FromString@plt+0xf268>
   1603c:	mov	x0, x19
   16040:	bl	65d0 <_Py_Dealloc@plt>
   16044:	b	15d74 <PyFloat_FromString@plt+0xf2e4>
   16048:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
   1604c:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
   16050:	mov	x20, #0x0                   	// #0
   16054:	add	x1, x1, #0x88
   16058:	ldr	x0, [x0, #3936]
   1605c:	ldr	x0, [x0]
   16060:	bl	6650 <PyErr_SetString@plt>
   16064:	ldp	x21, x22, [sp, #32]
   16068:	b	15cf8 <PyFloat_FromString@plt+0xf268>
   1606c:	mov	x20, #0x0                   	// #0
   16070:	ldp	x21, x22, [sp, #32]
   16074:	b	15cf8 <PyFloat_FromString@plt+0xf268>
   16078:	mov	x0, x23
   1607c:	bl	65d0 <_Py_Dealloc@plt>
   16080:	b	15fe4 <PyFloat_FromString@plt+0xf554>
   16084:	mov	x0, x19
   16088:	bl	65d0 <_Py_Dealloc@plt>
   1608c:	b	15fd4 <PyFloat_FromString@plt+0xf544>
   16090:	stp	x29, x30, [sp, #-80]!
   16094:	adrp	x3, 5d000 <PyInit__decimal@@Base+0x42a80>
   16098:	add	x3, x3, #0x9a0
   1609c:	mov	x29, sp
   160a0:	stp	x19, x20, [sp, #16]
   160a4:	adrp	x20, 5c000 <PyInit__decimal@@Base+0x41a80>
   160a8:	mov	x19, x0
   160ac:	ldr	x20, [x20, #4008]
   160b0:	mov	x0, x1
   160b4:	add	x3, x3, #0x408
   160b8:	mov	x1, x2
   160bc:	add	x5, sp, #0x40
   160c0:	adrp	x2, 3c000 <PyInit__decimal@@Base+0x21a80>
   160c4:	add	x4, sp, #0x38
   160c8:	add	x2, x2, #0x168
   160cc:	str	x20, [sp, #64]
   160d0:	bl	6520 <PyArg_ParseTupleAndKeywords@plt>
   160d4:	cbz	w0, 161d8 <PyFloat_FromString@plt+0xf748>
   160d8:	stp	x21, x22, [sp, #32]
   160dc:	ldr	x22, [sp, #64]
   160e0:	cmp	x22, x20
   160e4:	b.eq	162e0 <PyFloat_FromString@plt+0xf850>  // b.none
   160e8:	ldr	x0, [x22, #8]
   160ec:	adrp	x20, 5d000 <PyInit__decimal@@Base+0x42a80>
   160f0:	add	x1, x20, #0x320
   160f4:	cmp	x0, x1
   160f8:	b.eq	16108 <PyFloat_FromString@plt+0xf678>  // b.none
   160fc:	bl	69c0 <PyType_IsSubtype@plt>
   16100:	cbz	w0, 16364 <PyFloat_FromString@plt+0xf8d4>
   16104:	ldr	x22, [sp, #64]
   16108:	add	x21, x20, #0x320
   1610c:	ldr	x0, [x19, #8]
   16110:	add	x21, x21, #0x1a0
   16114:	cmp	x0, x21
   16118:	b.eq	1616c <PyFloat_FromString@plt+0xf6dc>  // b.none
   1611c:	mov	x1, x21
   16120:	bl	69c0 <PyType_IsSubtype@plt>
   16124:	cbnz	w0, 16168 <PyFloat_FromString@plt+0xf6d8>
   16128:	ldr	x2, [x19, #8]
   1612c:	ldr	x0, [x2, #168]
   16130:	tbnz	w0, #24, 16320 <PyFloat_FromString@plt+0xf890>
   16134:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
   16138:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
   1613c:	ldr	x2, [x2, #24]
   16140:	add	x1, x1, #0x8
   16144:	ldr	x0, [x0, #3936]
   16148:	mov	x20, #0x0                   	// #0
   1614c:	ldr	x0, [x0]
   16150:	bl	6a10 <PyErr_Format@plt>
   16154:	ldp	x21, x22, [sp, #32]
   16158:	mov	x0, x20
   1615c:	ldp	x19, x20, [sp, #16]
   16160:	ldp	x29, x30, [sp], #80
   16164:	ret
   16168:	ldr	x22, [sp, #64]
   1616c:	ldr	x0, [x19]
   16170:	add	x0, x0, #0x1
   16174:	str	x0, [x19]
   16178:	ldr	x21, [sp, #56]
   1617c:	add	x20, x20, #0x320
   16180:	add	x20, x20, #0x1a0
   16184:	ldr	x0, [x21, #8]
   16188:	cmp	x0, x20
   1618c:	b.eq	161ec <PyFloat_FromString@plt+0xf75c>  // b.none
   16190:	mov	x1, x20
   16194:	bl	69c0 <PyType_IsSubtype@plt>
   16198:	cbnz	w0, 161ec <PyFloat_FromString@plt+0xf75c>
   1619c:	ldr	x2, [x21, #8]
   161a0:	ldr	x0, [x2, #168]
   161a4:	tbnz	w0, #24, 162b0 <PyFloat_FromString@plt+0xf820>
   161a8:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
   161ac:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
   161b0:	ldr	x2, [x2, #24]
   161b4:	add	x1, x1, #0x8
   161b8:	ldr	x0, [x0, #3936]
   161bc:	ldr	x0, [x0]
   161c0:	bl	6a10 <PyErr_Format@plt>
   161c4:	ldr	x0, [x19]
   161c8:	sub	x0, x0, #0x1
   161cc:	str	x0, [x19]
   161d0:	cbz	x0, 162cc <PyFloat_FromString@plt+0xf83c>
   161d4:	ldp	x21, x22, [sp, #32]
   161d8:	mov	x20, #0x0                   	// #0
   161dc:	mov	x0, x20
   161e0:	ldp	x19, x20, [sp, #16]
   161e4:	ldp	x29, x30, [sp], #80
   161e8:	ret
   161ec:	ldr	x0, [x21]
   161f0:	add	x0, x0, #0x1
   161f4:	str	x0, [x21]
   161f8:	add	x1, x21, #0x18
   161fc:	add	x0, x19, #0x18
   16200:	bl	37630 <PyInit__decimal@@Base+0x1d0b0>
   16204:	cbnz	w0, 16254 <PyFloat_FromString@plt+0xf7c4>
   16208:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
   1620c:	ldr	x0, [x0, #3976]
   16210:	mov	x20, x0
   16214:	ldr	x1, [x0]
   16218:	add	x1, x1, #0x1
   1621c:	str	x1, [x0]
   16220:	ldr	x0, [x19]
   16224:	sub	x0, x0, #0x1
   16228:	str	x0, [x19]
   1622c:	cbz	x0, 1627c <PyFloat_FromString@plt+0xf7ec>
   16230:	ldr	x0, [x21]
   16234:	sub	x0, x0, #0x1
   16238:	str	x0, [x21]
   1623c:	cbz	x0, 16294 <PyFloat_FromString@plt+0xf804>
   16240:	mov	x0, x20
   16244:	ldp	x19, x20, [sp, #16]
   16248:	ldp	x21, x22, [sp, #32]
   1624c:	ldp	x29, x30, [sp], #80
   16250:	ret
   16254:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
   16258:	ldr	x0, [x0, #4024]
   1625c:	mov	x20, x0
   16260:	ldr	x1, [x0]
   16264:	add	x1, x1, #0x1
   16268:	str	x1, [x0]
   1626c:	ldr	x0, [x19]
   16270:	sub	x0, x0, #0x1
   16274:	str	x0, [x19]
   16278:	cbnz	x0, 16230 <PyFloat_FromString@plt+0xf7a0>
   1627c:	mov	x0, x19
   16280:	bl	65d0 <_Py_Dealloc@plt>
   16284:	ldr	x0, [x21]
   16288:	sub	x0, x0, #0x1
   1628c:	str	x0, [x21]
   16290:	cbnz	x0, 16240 <PyFloat_FromString@plt+0xf7b0>
   16294:	mov	x0, x21
   16298:	bl	65d0 <_Py_Dealloc@plt>
   1629c:	mov	x0, x20
   162a0:	ldp	x19, x20, [sp, #16]
   162a4:	ldp	x21, x22, [sp, #32]
   162a8:	ldp	x29, x30, [sp], #80
   162ac:	ret
   162b0:	mov	x1, x21
   162b4:	mov	x2, x22
   162b8:	mov	x0, x20
   162bc:	bl	82f8 <PyFloat_FromString@plt+0x1868>
   162c0:	mov	x21, x0
   162c4:	cbnz	x0, 161f8 <PyFloat_FromString@plt+0xf768>
   162c8:	b	161c4 <PyFloat_FromString@plt+0xf734>
   162cc:	mov	x0, x19
   162d0:	mov	x20, #0x0                   	// #0
   162d4:	bl	65d0 <_Py_Dealloc@plt>
   162d8:	ldp	x21, x22, [sp, #32]
   162dc:	b	16158 <PyFloat_FromString@plt+0xf6c8>
   162e0:	adrp	x0, 5f000 <PyInit__decimal@@Base+0x44a80>
   162e4:	add	x2, sp, #0x48
   162e8:	mov	x1, #0x0                   	// #0
   162ec:	ldr	x0, [x0, #1808]
   162f0:	bl	6740 <PyContextVar_Get@plt>
   162f4:	tbnz	w0, #31, 16388 <PyFloat_FromString@plt+0xf8f8>
   162f8:	ldr	x0, [sp, #72]
   162fc:	cbz	x0, 16350 <PyFloat_FromString@plt+0xf8c0>
   16300:	str	x0, [sp, #64]
   16304:	ldr	x1, [x0]
   16308:	sub	x1, x1, #0x1
   1630c:	str	x1, [x0]
   16310:	cbz	x1, 16340 <PyFloat_FromString@plt+0xf8b0>
   16314:	adrp	x20, 5d000 <PyInit__decimal@@Base+0x42a80>
   16318:	ldr	x22, [sp, #64]
   1631c:	b	16108 <PyFloat_FromString@plt+0xf678>
   16320:	mov	x1, x19
   16324:	mov	x2, x22
   16328:	mov	x0, x21
   1632c:	bl	82f8 <PyFloat_FromString@plt+0x1868>
   16330:	mov	x19, x0
   16334:	cbz	x0, 161d4 <PyFloat_FromString@plt+0xf744>
   16338:	ldr	x22, [sp, #64]
   1633c:	b	16178 <PyFloat_FromString@plt+0xf6e8>
   16340:	bl	65d0 <_Py_Dealloc@plt>
   16344:	adrp	x20, 5d000 <PyInit__decimal@@Base+0x42a80>
   16348:	ldr	x22, [sp, #64]
   1634c:	b	16108 <PyFloat_FromString@plt+0xf678>
   16350:	bl	7320 <PyFloat_FromString@plt+0x890>
   16354:	str	x0, [sp, #64]
   16358:	cbnz	x0, 16304 <PyFloat_FromString@plt+0xf874>
   1635c:	ldp	x21, x22, [sp, #32]
   16360:	b	161d8 <PyFloat_FromString@plt+0xf748>
   16364:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
   16368:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
   1636c:	mov	x20, #0x0                   	// #0
   16370:	add	x1, x1, #0x88
   16374:	ldr	x0, [x0, #3936]
   16378:	ldr	x0, [x0]
   1637c:	bl	6650 <PyErr_SetString@plt>
   16380:	ldp	x21, x22, [sp, #32]
   16384:	b	16158 <PyFloat_FromString@plt+0xf6c8>
   16388:	mov	x20, #0x0                   	// #0
   1638c:	ldp	x21, x22, [sp, #32]
   16390:	b	16158 <PyFloat_FromString@plt+0xf6c8>
   16394:	nop
   16398:	stp	x29, x30, [sp, #-96]!
   1639c:	adrp	x3, 5d000 <PyInit__decimal@@Base+0x42a80>
   163a0:	add	x3, x3, #0x9a0
   163a4:	mov	x29, sp
   163a8:	stp	x19, x20, [sp, #16]
   163ac:	adrp	x20, 5c000 <PyInit__decimal@@Base+0x41a80>
   163b0:	mov	x19, x0
   163b4:	ldr	x20, [x20, #4008]
   163b8:	mov	x0, x1
   163bc:	add	x3, x3, #0x420
   163c0:	mov	x1, x2
   163c4:	add	x5, sp, #0x48
   163c8:	adrp	x2, 3c000 <PyInit__decimal@@Base+0x21a80>
   163cc:	add	x4, sp, #0x50
   163d0:	add	x2, x2, #0x168
   163d4:	str	x20, [sp, #72]
   163d8:	bl	6520 <PyArg_ParseTupleAndKeywords@plt>
   163dc:	cbz	w0, 16500 <PyFloat_FromString@plt+0xfa70>
   163e0:	str	x23, [sp, #48]
   163e4:	ldr	x23, [sp, #72]
   163e8:	cmp	x23, x20
   163ec:	b.eq	165b8 <PyFloat_FromString@plt+0xfb28>  // b.none
   163f0:	ldr	x0, [x23, #8]
   163f4:	adrp	x20, 5d000 <PyInit__decimal@@Base+0x42a80>
   163f8:	add	x1, x20, #0x320
   163fc:	cmp	x0, x1
   16400:	b.eq	16478 <PyFloat_FromString@plt+0xf9e8>  // b.none
   16404:	bl	69c0 <PyType_IsSubtype@plt>
   16408:	cbz	w0, 16694 <PyFloat_FromString@plt+0xfc04>
   1640c:	ldr	x23, [sp, #72]
   16410:	stp	x21, x22, [sp, #32]
   16414:	add	x21, x20, #0x320
   16418:	ldr	x0, [x19, #8]
   1641c:	add	x21, x21, #0x1a0
   16420:	cmp	x0, x21
   16424:	b.eq	16490 <PyFloat_FromString@plt+0xfa00>  // b.none
   16428:	mov	x1, x21
   1642c:	bl	69c0 <PyType_IsSubtype@plt>
   16430:	cbnz	w0, 165b0 <PyFloat_FromString@plt+0xfb20>
   16434:	ldr	x2, [x19, #8]
   16438:	ldr	x0, [x2, #168]
   1643c:	tbnz	w0, #24, 16644 <PyFloat_FromString@plt+0xfbb4>
   16440:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
   16444:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
   16448:	ldr	x2, [x2, #24]
   1644c:	add	x1, x1, #0x8
   16450:	ldr	x0, [x0, #3936]
   16454:	mov	x20, #0x0                   	// #0
   16458:	ldr	x0, [x0]
   1645c:	bl	6a10 <PyErr_Format@plt>
   16460:	ldp	x21, x22, [sp, #32]
   16464:	ldr	x23, [sp, #48]
   16468:	mov	x0, x20
   1646c:	ldp	x19, x20, [sp, #16]
   16470:	ldp	x29, x30, [sp], #96
   16474:	ret
   16478:	ldr	x0, [x19, #8]
   1647c:	stp	x21, x22, [sp, #32]
   16480:	add	x21, x20, #0x320
   16484:	add	x21, x21, #0x1a0
   16488:	cmp	x0, x21
   1648c:	b.ne	16428 <PyFloat_FromString@plt+0xf998>  // b.any
   16490:	ldr	x0, [x19]
   16494:	add	x0, x0, #0x1
   16498:	str	x0, [x19]
   1649c:	ldr	x22, [sp, #80]
   164a0:	add	x21, x20, #0x320
   164a4:	add	x21, x21, #0x1a0
   164a8:	ldr	x0, [x22, #8]
   164ac:	cmp	x0, x21
   164b0:	b.eq	16514 <PyFloat_FromString@plt+0xfa84>  // b.none
   164b4:	mov	x1, x21
   164b8:	bl	69c0 <PyType_IsSubtype@plt>
   164bc:	cbnz	w0, 16514 <PyFloat_FromString@plt+0xfa84>
   164c0:	ldr	x2, [x22, #8]
   164c4:	ldr	x0, [x2, #168]
   164c8:	tbnz	w0, #24, 1657c <PyFloat_FromString@plt+0xfaec>
   164cc:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
   164d0:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
   164d4:	ldr	x2, [x2, #24]
   164d8:	add	x1, x1, #0x8
   164dc:	ldr	x0, [x0, #3936]
   164e0:	ldr	x0, [x0]
   164e4:	bl	6a10 <PyErr_Format@plt>
   164e8:	ldr	x0, [x19]
   164ec:	sub	x0, x0, #0x1
   164f0:	str	x0, [x19]
   164f4:	cbz	x0, 16598 <PyFloat_FromString@plt+0xfb08>
   164f8:	ldp	x21, x22, [sp, #32]
   164fc:	ldr	x23, [sp, #48]
   16500:	mov	x20, #0x0                   	// #0
   16504:	mov	x0, x20
   16508:	ldp	x19, x20, [sp, #16]
   1650c:	ldp	x29, x30, [sp], #96
   16510:	ret
   16514:	ldr	x0, [x22]
   16518:	add	x0, x0, #0x1
   1651c:	str	x0, [x22]
   16520:	add	x20, x20, #0x320
   16524:	add	x0, x20, #0x1a0
   16528:	bl	6c60 <PyFloat_FromString@plt+0x1d0>
   1652c:	mov	x20, x0
   16530:	cbz	x0, 165fc <PyFloat_FromString@plt+0xfb6c>
   16534:	add	x2, x22, #0x18
   16538:	add	x1, x19, #0x18
   1653c:	add	x0, x0, #0x18
   16540:	bl	2a1c0 <PyInit__decimal@@Base+0xfc40>
   16544:	ldr	x0, [x19]
   16548:	sub	x0, x0, #0x1
   1654c:	str	x0, [x19]
   16550:	cbz	x0, 16664 <PyFloat_FromString@plt+0xfbd4>
   16554:	ldr	x0, [x22]
   16558:	sub	x0, x0, #0x1
   1655c:	str	x0, [x22]
   16560:	cbz	x0, 16624 <PyFloat_FromString@plt+0xfb94>
   16564:	mov	x0, x20
   16568:	ldp	x19, x20, [sp, #16]
   1656c:	ldp	x21, x22, [sp, #32]
   16570:	ldr	x23, [sp, #48]
   16574:	ldp	x29, x30, [sp], #96
   16578:	ret
   1657c:	mov	x1, x22
   16580:	mov	x2, x23
   16584:	mov	x0, x21
   16588:	bl	82f8 <PyFloat_FromString@plt+0x1868>
   1658c:	mov	x22, x0
   16590:	cbnz	x0, 16520 <PyFloat_FromString@plt+0xfa90>
   16594:	b	164e8 <PyFloat_FromString@plt+0xfa58>
   16598:	mov	x0, x19
   1659c:	mov	x20, #0x0                   	// #0
   165a0:	bl	65d0 <_Py_Dealloc@plt>
   165a4:	ldp	x21, x22, [sp, #32]
   165a8:	ldr	x23, [sp, #48]
   165ac:	b	16468 <PyFloat_FromString@plt+0xf9d8>
   165b0:	ldr	x23, [sp, #72]
   165b4:	b	16490 <PyFloat_FromString@plt+0xfa00>
   165b8:	adrp	x0, 5f000 <PyInit__decimal@@Base+0x44a80>
   165bc:	add	x2, sp, #0x58
   165c0:	mov	x1, #0x0                   	// #0
   165c4:	ldr	x0, [x0, #1808]
   165c8:	bl	6740 <PyContextVar_Get@plt>
   165cc:	tbnz	w0, #31, 166b8 <PyFloat_FromString@plt+0xfc28>
   165d0:	ldr	x0, [sp, #88]
   165d4:	cbz	x0, 16680 <PyFloat_FromString@plt+0xfbf0>
   165d8:	stp	x21, x22, [sp, #32]
   165dc:	str	x0, [sp, #72]
   165e0:	ldr	x1, [x0]
   165e4:	sub	x1, x1, #0x1
   165e8:	str	x1, [x0]
   165ec:	cbz	x1, 16670 <PyFloat_FromString@plt+0xfbe0>
   165f0:	adrp	x20, 5d000 <PyInit__decimal@@Base+0x42a80>
   165f4:	ldr	x23, [sp, #72]
   165f8:	b	16414 <PyFloat_FromString@plt+0xf984>
   165fc:	ldr	x0, [x19]
   16600:	sub	x0, x0, #0x1
   16604:	str	x0, [x19]
   16608:	cbnz	x0, 16614 <PyFloat_FromString@plt+0xfb84>
   1660c:	mov	x0, x19
   16610:	bl	65d0 <_Py_Dealloc@plt>
   16614:	ldr	x0, [x22]
   16618:	sub	x0, x0, #0x1
   1661c:	str	x0, [x22]
   16620:	cbnz	x0, 164f8 <PyFloat_FromString@plt+0xfa68>
   16624:	mov	x0, x22
   16628:	bl	65d0 <_Py_Dealloc@plt>
   1662c:	mov	x0, x20
   16630:	ldp	x19, x20, [sp, #16]
   16634:	ldp	x21, x22, [sp, #32]
   16638:	ldr	x23, [sp, #48]
   1663c:	ldp	x29, x30, [sp], #96
   16640:	ret
   16644:	mov	x1, x19
   16648:	mov	x2, x23
   1664c:	mov	x0, x21
   16650:	bl	82f8 <PyFloat_FromString@plt+0x1868>
   16654:	mov	x19, x0
   16658:	cbz	x0, 164f8 <PyFloat_FromString@plt+0xfa68>
   1665c:	ldr	x23, [sp, #72]
   16660:	b	1649c <PyFloat_FromString@plt+0xfa0c>
   16664:	mov	x0, x19
   16668:	bl	65d0 <_Py_Dealloc@plt>
   1666c:	b	16554 <PyFloat_FromString@plt+0xfac4>
   16670:	bl	65d0 <_Py_Dealloc@plt>
   16674:	adrp	x20, 5d000 <PyInit__decimal@@Base+0x42a80>
   16678:	ldr	x23, [sp, #72]
   1667c:	b	16414 <PyFloat_FromString@plt+0xf984>
   16680:	bl	7320 <PyFloat_FromString@plt+0x890>
   16684:	str	x0, [sp, #72]
   16688:	cbz	x0, 164fc <PyFloat_FromString@plt+0xfa6c>
   1668c:	stp	x21, x22, [sp, #32]
   16690:	b	165e0 <PyFloat_FromString@plt+0xfb50>
   16694:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
   16698:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
   1669c:	mov	x20, #0x0                   	// #0
   166a0:	add	x1, x1, #0x88
   166a4:	ldr	x0, [x0, #3936]
   166a8:	ldr	x0, [x0]
   166ac:	bl	6650 <PyErr_SetString@plt>
   166b0:	ldr	x23, [sp, #48]
   166b4:	b	16468 <PyFloat_FromString@plt+0xf9d8>
   166b8:	mov	x20, #0x0                   	// #0
   166bc:	ldr	x23, [sp, #48]
   166c0:	b	16468 <PyFloat_FromString@plt+0xf9d8>
   166c4:	nop
   166c8:	stp	x29, x30, [sp, #-96]!
   166cc:	adrp	x3, 5d000 <PyInit__decimal@@Base+0x42a80>
   166d0:	add	x3, x3, #0x9a0
   166d4:	mov	x29, sp
   166d8:	stp	x19, x20, [sp, #16]
   166dc:	adrp	x20, 5c000 <PyInit__decimal@@Base+0x41a80>
   166e0:	mov	x19, x0
   166e4:	ldr	x20, [x20, #4008]
   166e8:	mov	x0, x1
   166ec:	add	x3, x3, #0x438
   166f0:	mov	x1, x2
   166f4:	add	x5, sp, #0x48
   166f8:	adrp	x2, 3c000 <PyInit__decimal@@Base+0x21a80>
   166fc:	add	x4, sp, #0x50
   16700:	add	x2, x2, #0x168
   16704:	str	x20, [sp, #72]
   16708:	bl	6520 <PyArg_ParseTupleAndKeywords@plt>
   1670c:	cbz	w0, 16830 <PyFloat_FromString@plt+0xfda0>
   16710:	str	x23, [sp, #48]
   16714:	ldr	x23, [sp, #72]
   16718:	cmp	x23, x20
   1671c:	b.eq	168e8 <PyFloat_FromString@plt+0xfe58>  // b.none
   16720:	ldr	x0, [x23, #8]
   16724:	adrp	x20, 5d000 <PyInit__decimal@@Base+0x42a80>
   16728:	add	x1, x20, #0x320
   1672c:	cmp	x0, x1
   16730:	b.eq	167a8 <PyFloat_FromString@plt+0xfd18>  // b.none
   16734:	bl	69c0 <PyType_IsSubtype@plt>
   16738:	cbz	w0, 169c4 <PyFloat_FromString@plt+0xff34>
   1673c:	ldr	x23, [sp, #72]
   16740:	stp	x21, x22, [sp, #32]
   16744:	add	x21, x20, #0x320
   16748:	ldr	x0, [x19, #8]
   1674c:	add	x21, x21, #0x1a0
   16750:	cmp	x0, x21
   16754:	b.eq	167c0 <PyFloat_FromString@plt+0xfd30>  // b.none
   16758:	mov	x1, x21
   1675c:	bl	69c0 <PyType_IsSubtype@plt>
   16760:	cbnz	w0, 168e0 <PyFloat_FromString@plt+0xfe50>
   16764:	ldr	x2, [x19, #8]
   16768:	ldr	x0, [x2, #168]
   1676c:	tbnz	w0, #24, 16974 <PyFloat_FromString@plt+0xfee4>
   16770:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
   16774:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
   16778:	ldr	x2, [x2, #24]
   1677c:	add	x1, x1, #0x8
   16780:	ldr	x0, [x0, #3936]
   16784:	mov	x20, #0x0                   	// #0
   16788:	ldr	x0, [x0]
   1678c:	bl	6a10 <PyErr_Format@plt>
   16790:	ldp	x21, x22, [sp, #32]
   16794:	ldr	x23, [sp, #48]
   16798:	mov	x0, x20
   1679c:	ldp	x19, x20, [sp, #16]
   167a0:	ldp	x29, x30, [sp], #96
   167a4:	ret
   167a8:	ldr	x0, [x19, #8]
   167ac:	stp	x21, x22, [sp, #32]
   167b0:	add	x21, x20, #0x320
   167b4:	add	x21, x21, #0x1a0
   167b8:	cmp	x0, x21
   167bc:	b.ne	16758 <PyFloat_FromString@plt+0xfcc8>  // b.any
   167c0:	ldr	x0, [x19]
   167c4:	add	x0, x0, #0x1
   167c8:	str	x0, [x19]
   167cc:	ldr	x22, [sp, #80]
   167d0:	add	x21, x20, #0x320
   167d4:	add	x21, x21, #0x1a0
   167d8:	ldr	x0, [x22, #8]
   167dc:	cmp	x0, x21
   167e0:	b.eq	16844 <PyFloat_FromString@plt+0xfdb4>  // b.none
   167e4:	mov	x1, x21
   167e8:	bl	69c0 <PyType_IsSubtype@plt>
   167ec:	cbnz	w0, 16844 <PyFloat_FromString@plt+0xfdb4>
   167f0:	ldr	x2, [x22, #8]
   167f4:	ldr	x0, [x2, #168]
   167f8:	tbnz	w0, #24, 168ac <PyFloat_FromString@plt+0xfe1c>
   167fc:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
   16800:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
   16804:	ldr	x2, [x2, #24]
   16808:	add	x1, x1, #0x8
   1680c:	ldr	x0, [x0, #3936]
   16810:	ldr	x0, [x0]
   16814:	bl	6a10 <PyErr_Format@plt>
   16818:	ldr	x0, [x19]
   1681c:	sub	x0, x0, #0x1
   16820:	str	x0, [x19]
   16824:	cbz	x0, 168c8 <PyFloat_FromString@plt+0xfe38>
   16828:	ldp	x21, x22, [sp, #32]
   1682c:	ldr	x23, [sp, #48]
   16830:	mov	x20, #0x0                   	// #0
   16834:	mov	x0, x20
   16838:	ldp	x19, x20, [sp, #16]
   1683c:	ldp	x29, x30, [sp], #96
   16840:	ret
   16844:	ldr	x0, [x22]
   16848:	add	x0, x0, #0x1
   1684c:	str	x0, [x22]
   16850:	add	x20, x20, #0x320
   16854:	add	x0, x20, #0x1a0
   16858:	bl	6c60 <PyFloat_FromString@plt+0x1d0>
   1685c:	mov	x20, x0
   16860:	cbz	x0, 1692c <PyFloat_FromString@plt+0xfe9c>
   16864:	add	x2, x22, #0x18
   16868:	add	x1, x19, #0x18
   1686c:	add	x0, x0, #0x18
   16870:	bl	2a298 <PyInit__decimal@@Base+0xfd18>
   16874:	ldr	x0, [x19]
   16878:	sub	x0, x0, #0x1
   1687c:	str	x0, [x19]
   16880:	cbz	x0, 16994 <PyFloat_FromString@plt+0xff04>
   16884:	ldr	x0, [x22]
   16888:	sub	x0, x0, #0x1
   1688c:	str	x0, [x22]
   16890:	cbz	x0, 16954 <PyFloat_FromString@plt+0xfec4>
   16894:	mov	x0, x20
   16898:	ldp	x19, x20, [sp, #16]
   1689c:	ldp	x21, x22, [sp, #32]
   168a0:	ldr	x23, [sp, #48]
   168a4:	ldp	x29, x30, [sp], #96
   168a8:	ret
   168ac:	mov	x1, x22
   168b0:	mov	x2, x23
   168b4:	mov	x0, x21
   168b8:	bl	82f8 <PyFloat_FromString@plt+0x1868>
   168bc:	mov	x22, x0
   168c0:	cbnz	x0, 16850 <PyFloat_FromString@plt+0xfdc0>
   168c4:	b	16818 <PyFloat_FromString@plt+0xfd88>
   168c8:	mov	x0, x19
   168cc:	mov	x20, #0x0                   	// #0
   168d0:	bl	65d0 <_Py_Dealloc@plt>
   168d4:	ldp	x21, x22, [sp, #32]
   168d8:	ldr	x23, [sp, #48]
   168dc:	b	16798 <PyFloat_FromString@plt+0xfd08>
   168e0:	ldr	x23, [sp, #72]
   168e4:	b	167c0 <PyFloat_FromString@plt+0xfd30>
   168e8:	adrp	x0, 5f000 <PyInit__decimal@@Base+0x44a80>
   168ec:	add	x2, sp, #0x58
   168f0:	mov	x1, #0x0                   	// #0
   168f4:	ldr	x0, [x0, #1808]
   168f8:	bl	6740 <PyContextVar_Get@plt>
   168fc:	tbnz	w0, #31, 169e8 <PyFloat_FromString@plt+0xff58>
   16900:	ldr	x0, [sp, #88]
   16904:	cbz	x0, 169b0 <PyFloat_FromString@plt+0xff20>
   16908:	stp	x21, x22, [sp, #32]
   1690c:	str	x0, [sp, #72]
   16910:	ldr	x1, [x0]
   16914:	sub	x1, x1, #0x1
   16918:	str	x1, [x0]
   1691c:	cbz	x1, 169a0 <PyFloat_FromString@plt+0xff10>
   16920:	adrp	x20, 5d000 <PyInit__decimal@@Base+0x42a80>
   16924:	ldr	x23, [sp, #72]
   16928:	b	16744 <PyFloat_FromString@plt+0xfcb4>
   1692c:	ldr	x0, [x19]
   16930:	sub	x0, x0, #0x1
   16934:	str	x0, [x19]
   16938:	cbnz	x0, 16944 <PyFloat_FromString@plt+0xfeb4>
   1693c:	mov	x0, x19
   16940:	bl	65d0 <_Py_Dealloc@plt>
   16944:	ldr	x0, [x22]
   16948:	sub	x0, x0, #0x1
   1694c:	str	x0, [x22]
   16950:	cbnz	x0, 16828 <PyFloat_FromString@plt+0xfd98>
   16954:	mov	x0, x22
   16958:	bl	65d0 <_Py_Dealloc@plt>
   1695c:	mov	x0, x20
   16960:	ldp	x19, x20, [sp, #16]
   16964:	ldp	x21, x22, [sp, #32]
   16968:	ldr	x23, [sp, #48]
   1696c:	ldp	x29, x30, [sp], #96
   16970:	ret
   16974:	mov	x1, x19
   16978:	mov	x2, x23
   1697c:	mov	x0, x21
   16980:	bl	82f8 <PyFloat_FromString@plt+0x1868>
   16984:	mov	x19, x0
   16988:	cbz	x0, 16828 <PyFloat_FromString@plt+0xfd98>
   1698c:	ldr	x23, [sp, #72]
   16990:	b	167cc <PyFloat_FromString@plt+0xfd3c>
   16994:	mov	x0, x19
   16998:	bl	65d0 <_Py_Dealloc@plt>
   1699c:	b	16884 <PyFloat_FromString@plt+0xfdf4>
   169a0:	bl	65d0 <_Py_Dealloc@plt>
   169a4:	adrp	x20, 5d000 <PyInit__decimal@@Base+0x42a80>
   169a8:	ldr	x23, [sp, #72]
   169ac:	b	16744 <PyFloat_FromString@plt+0xfcb4>
   169b0:	bl	7320 <PyFloat_FromString@plt+0x890>
   169b4:	str	x0, [sp, #72]
   169b8:	cbz	x0, 1682c <PyFloat_FromString@plt+0xfd9c>
   169bc:	stp	x21, x22, [sp, #32]
   169c0:	b	16910 <PyFloat_FromString@plt+0xfe80>
   169c4:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
   169c8:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
   169cc:	mov	x20, #0x0                   	// #0
   169d0:	add	x1, x1, #0x88
   169d4:	ldr	x0, [x0, #3936]
   169d8:	ldr	x0, [x0]
   169dc:	bl	6650 <PyErr_SetString@plt>
   169e0:	ldr	x23, [sp, #48]
   169e4:	b	16798 <PyFloat_FromString@plt+0xfd08>
   169e8:	mov	x20, #0x0                   	// #0
   169ec:	ldr	x23, [sp, #48]
   169f0:	b	16798 <PyFloat_FromString@plt+0xfd08>
   169f4:	nop
   169f8:	stp	x29, x30, [sp, #-112]!
   169fc:	adrp	x3, 5d000 <PyInit__decimal@@Base+0x42a80>
   16a00:	add	x3, x3, #0x9a0
   16a04:	mov	x29, sp
   16a08:	stp	x23, x24, [sp, #48]
   16a0c:	adrp	x23, 5c000 <PyInit__decimal@@Base+0x41a80>
   16a10:	add	x3, x3, #0x450
   16a14:	ldr	x7, [x23, #4008]
   16a18:	add	x6, sp, #0x68
   16a1c:	add	x5, sp, #0x60
   16a20:	add	x4, sp, #0x58
   16a24:	stp	x19, x20, [sp, #16]
   16a28:	mov	x20, x0
   16a2c:	mov	x0, x1
   16a30:	mov	x1, x2
   16a34:	adrp	x2, 3c000 <PyInit__decimal@@Base+0x21a80>
   16a38:	add	x2, x2, #0x318
   16a3c:	stp	x21, x22, [sp, #32]
   16a40:	str	wzr, [sp, #84]
   16a44:	str	x7, [sp, #104]
   16a48:	bl	6520 <PyArg_ParseTupleAndKeywords@plt>
   16a4c:	cbz	w0, 16b48 <PyFloat_FromString@plt+0x100b8>
   16a50:	ldr	x19, [sp, #88]
   16a54:	adrp	x24, 5d000 <PyInit__decimal@@Base+0x42a80>
   16a58:	add	x21, x24, #0x320
   16a5c:	add	x21, x21, #0x1a0
   16a60:	ldr	x0, [x19, #8]
   16a64:	cmp	x0, x21
   16a68:	b.eq	16b64 <PyFloat_FromString@plt+0x100d4>  // b.none
   16a6c:	mov	x1, x21
   16a70:	bl	69c0 <PyType_IsSubtype@plt>
   16a74:	cbnz	w0, 16b64 <PyFloat_FromString@plt+0x100d4>
   16a78:	ldr	x2, [x19, #8]
   16a7c:	ldr	x0, [x2, #168]
   16a80:	tbnz	w0, #24, 16cc4 <PyFloat_FromString@plt+0x10234>
   16a84:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
   16a88:	mov	x21, #0x0                   	// #0
   16a8c:	ldr	x2, [x2, #24]
   16a90:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
   16a94:	ldr	x0, [x0, #3936]
   16a98:	add	x1, x1, #0x8
   16a9c:	ldr	x0, [x0]
   16aa0:	bl	6a10 <PyErr_Format@plt>
   16aa4:	mov	x0, x21
   16aa8:	ldp	x19, x20, [sp, #16]
   16aac:	ldp	x21, x22, [sp, #32]
   16ab0:	ldp	x23, x24, [sp, #48]
   16ab4:	ldp	x29, x30, [sp], #112
   16ab8:	ret
   16abc:	ldr	x0, [x22]
   16ac0:	str	x25, [sp, #64]
   16ac4:	add	x0, x0, #0x1
   16ac8:	str	x0, [x22]
   16acc:	ldr	x23, [x23, #4008]
   16ad0:	ldr	x25, [sp, #104]
   16ad4:	cmp	x25, x23
   16ad8:	b.eq	16c94 <PyFloat_FromString@plt+0x10204>  // b.none
   16adc:	ldr	x0, [x25, #8]
   16ae0:	add	x21, x24, #0x320
   16ae4:	add	x21, x21, #0x1a0
   16ae8:	cmp	x0, x21
   16aec:	b.eq	16bdc <PyFloat_FromString@plt+0x1014c>  // b.none
   16af0:	mov	x1, x21
   16af4:	bl	69c0 <PyType_IsSubtype@plt>
   16af8:	cbnz	w0, 16bdc <PyFloat_FromString@plt+0x1014c>
   16afc:	ldr	x2, [x25, #8]
   16b00:	ldr	x0, [x2, #168]
   16b04:	tbnz	w0, #24, 16d3c <PyFloat_FromString@plt+0x102ac>
   16b08:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
   16b0c:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
   16b10:	ldr	x2, [x2, #24]
   16b14:	add	x1, x1, #0x8
   16b18:	ldr	x0, [x0, #3936]
   16b1c:	ldr	x0, [x0]
   16b20:	bl	6a10 <PyErr_Format@plt>
   16b24:	ldr	x0, [x19]
   16b28:	sub	x0, x0, #0x1
   16b2c:	str	x0, [x19]
   16b30:	cbz	x0, 16d58 <PyFloat_FromString@plt+0x102c8>
   16b34:	ldr	x0, [x22]
   16b38:	sub	x0, x0, #0x1
   16b3c:	str	x0, [x22]
   16b40:	cbz	x0, 16d04 <PyFloat_FromString@plt+0x10274>
   16b44:	ldr	x25, [sp, #64]
   16b48:	mov	x21, #0x0                   	// #0
   16b4c:	mov	x0, x21
   16b50:	ldp	x19, x20, [sp, #16]
   16b54:	ldp	x21, x22, [sp, #32]
   16b58:	ldp	x23, x24, [sp, #48]
   16b5c:	ldp	x29, x30, [sp], #112
   16b60:	ret
   16b64:	ldr	x0, [x19]
   16b68:	add	x0, x0, #0x1
   16b6c:	str	x0, [x19]
   16b70:	ldr	x22, [sp, #96]
   16b74:	add	x21, x24, #0x320
   16b78:	add	x21, x21, #0x1a0
   16b7c:	ldr	x0, [x22, #8]
   16b80:	cmp	x0, x21
   16b84:	b.eq	16abc <PyFloat_FromString@plt+0x1002c>  // b.none
   16b88:	mov	x1, x21
   16b8c:	bl	69c0 <PyType_IsSubtype@plt>
   16b90:	cbnz	w0, 16abc <PyFloat_FromString@plt+0x1002c>
   16b94:	ldr	x2, [x22, #8]
   16b98:	ldr	x0, [x2, #168]
   16b9c:	tbnz	w0, #24, 16c74 <PyFloat_FromString@plt+0x101e4>
   16ba0:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
   16ba4:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
   16ba8:	ldr	x2, [x2, #24]
   16bac:	add	x1, x1, #0x8
   16bb0:	ldr	x0, [x0, #3936]
   16bb4:	ldr	x0, [x0]
   16bb8:	bl	6a10 <PyErr_Format@plt>
   16bbc:	ldr	x0, [x19]
   16bc0:	sub	x0, x0, #0x1
   16bc4:	str	x0, [x19]
   16bc8:	cbnz	x0, 16b48 <PyFloat_FromString@plt+0x100b8>
   16bcc:	mov	x0, x19
   16bd0:	mov	x21, #0x0                   	// #0
   16bd4:	bl	65d0 <_Py_Dealloc@plt>
   16bd8:	b	16b4c <PyFloat_FromString@plt+0x100bc>
   16bdc:	ldr	x0, [x25]
   16be0:	add	x0, x0, #0x1
   16be4:	str	x0, [x25]
   16be8:	add	x0, x24, #0x320
   16bec:	add	x0, x0, #0x1a0
   16bf0:	bl	6c60 <PyFloat_FromString@plt+0x1d0>
   16bf4:	mov	x21, x0
   16bf8:	cbz	x0, 16d68 <PyFloat_FromString@plt+0x102d8>
   16bfc:	add	x0, x21, #0x18
   16c00:	add	x5, sp, #0x54
   16c04:	add	x4, x20, #0x10
   16c08:	add	x3, x25, #0x18
   16c0c:	add	x2, x22, #0x18
   16c10:	add	x1, x19, #0x18
   16c14:	bl	368e0 <PyInit__decimal@@Base+0x1c360>
   16c18:	ldr	x0, [x25]
   16c1c:	sub	x0, x0, #0x1
   16c20:	str	x0, [x25]
   16c24:	cbz	x0, 16cf8 <PyFloat_FromString@plt+0x10268>
   16c28:	ldr	x0, [x19]
   16c2c:	sub	x0, x0, #0x1
   16c30:	str	x0, [x19]
   16c34:	cbz	x0, 16cec <PyFloat_FromString@plt+0x1025c>
   16c38:	ldr	x0, [x22]
   16c3c:	sub	x0, x0, #0x1
   16c40:	str	x0, [x22]
   16c44:	cbz	x0, 16ce0 <PyFloat_FromString@plt+0x10250>
   16c48:	ldr	w1, [sp, #84]
   16c4c:	mov	x0, x20
   16c50:	bl	7f90 <PyFloat_FromString@plt+0x1500>
   16c54:	cbnz	w0, 16d18 <PyFloat_FromString@plt+0x10288>
   16c58:	mov	x0, x21
   16c5c:	ldp	x19, x20, [sp, #16]
   16c60:	ldp	x21, x22, [sp, #32]
   16c64:	ldp	x23, x24, [sp, #48]
   16c68:	ldr	x25, [sp, #64]
   16c6c:	ldp	x29, x30, [sp], #112
   16c70:	ret
   16c74:	mov	x1, x22
   16c78:	mov	x0, x21
   16c7c:	mov	x2, x20
   16c80:	bl	82f8 <PyFloat_FromString@plt+0x1868>
   16c84:	mov	x22, x0
   16c88:	cbz	x0, 16bbc <PyFloat_FromString@plt+0x1012c>
   16c8c:	str	x25, [sp, #64]
   16c90:	b	16acc <PyFloat_FromString@plt+0x1003c>
   16c94:	add	x0, x24, #0x320
   16c98:	add	x0, x0, #0x1a0
   16c9c:	bl	6c60 <PyFloat_FromString@plt+0x1d0>
   16ca0:	mov	x21, x0
   16ca4:	cbz	x0, 16d64 <PyFloat_FromString@plt+0x102d4>
   16ca8:	add	x4, sp, #0x54
   16cac:	add	x3, x20, #0x10
   16cb0:	add	x2, x22, #0x18
   16cb4:	add	x1, x19, #0x18
   16cb8:	add	x0, x0, #0x18
   16cbc:	bl	35920 <PyInit__decimal@@Base+0x1b3a0>
   16cc0:	b	16c28 <PyFloat_FromString@plt+0x10198>
   16cc4:	mov	x1, x19
   16cc8:	mov	x0, x21
   16ccc:	mov	x2, x20
   16cd0:	bl	82f8 <PyFloat_FromString@plt+0x1868>
   16cd4:	mov	x19, x0
   16cd8:	cbnz	x0, 16b70 <PyFloat_FromString@plt+0x100e0>
   16cdc:	b	16b48 <PyFloat_FromString@plt+0x100b8>
   16ce0:	mov	x0, x22
   16ce4:	bl	65d0 <_Py_Dealloc@plt>
   16ce8:	b	16c48 <PyFloat_FromString@plt+0x101b8>
   16cec:	mov	x0, x19
   16cf0:	bl	65d0 <_Py_Dealloc@plt>
   16cf4:	b	16c38 <PyFloat_FromString@plt+0x101a8>
   16cf8:	mov	x0, x25
   16cfc:	bl	65d0 <_Py_Dealloc@plt>
   16d00:	b	16c28 <PyFloat_FromString@plt+0x10198>
   16d04:	mov	x0, x22
   16d08:	mov	x21, #0x0                   	// #0
   16d0c:	bl	65d0 <_Py_Dealloc@plt>
   16d10:	ldr	x25, [sp, #64]
   16d14:	b	16b4c <PyFloat_FromString@plt+0x100bc>
   16d18:	ldr	x0, [x21]
   16d1c:	sub	x0, x0, #0x1
   16d20:	str	x0, [x21]
   16d24:	cbnz	x0, 16b44 <PyFloat_FromString@plt+0x100b4>
   16d28:	mov	x0, x21
   16d2c:	mov	x21, #0x0                   	// #0
   16d30:	bl	65d0 <_Py_Dealloc@plt>
   16d34:	ldr	x25, [sp, #64]
   16d38:	b	16b4c <PyFloat_FromString@plt+0x100bc>
   16d3c:	mov	x1, x25
   16d40:	mov	x0, x21
   16d44:	mov	x2, x20
   16d48:	bl	82f8 <PyFloat_FromString@plt+0x1868>
   16d4c:	mov	x25, x0
   16d50:	cbnz	x0, 16be8 <PyFloat_FromString@plt+0x10158>
   16d54:	b	16b24 <PyFloat_FromString@plt+0x10094>
   16d58:	mov	x0, x19
   16d5c:	bl	65d0 <_Py_Dealloc@plt>
   16d60:	b	16b34 <PyFloat_FromString@plt+0x100a4>
   16d64:	mov	x25, #0x0                   	// #0
   16d68:	ldr	x0, [x19]
   16d6c:	sub	x0, x0, #0x1
   16d70:	str	x0, [x19]
   16d74:	cbz	x0, 16dbc <PyFloat_FromString@plt+0x1032c>
   16d78:	ldr	x0, [x22]
   16d7c:	sub	x0, x0, #0x1
   16d80:	str	x0, [x22]
   16d84:	cbz	x0, 16db0 <PyFloat_FromString@plt+0x10320>
   16d88:	cbz	x25, 16b44 <PyFloat_FromString@plt+0x100b4>
   16d8c:	ldr	x0, [x25]
   16d90:	sub	x0, x0, #0x1
   16d94:	str	x0, [x25]
   16d98:	cbnz	x0, 16b44 <PyFloat_FromString@plt+0x100b4>
   16d9c:	mov	x0, x25
   16da0:	mov	x21, #0x0                   	// #0
   16da4:	bl	65d0 <_Py_Dealloc@plt>
   16da8:	ldr	x25, [sp, #64]
   16dac:	b	16b4c <PyFloat_FromString@plt+0x100bc>
   16db0:	mov	x0, x22
   16db4:	bl	65d0 <_Py_Dealloc@plt>
   16db8:	b	16d88 <PyFloat_FromString@plt+0x102f8>
   16dbc:	mov	x0, x19
   16dc0:	bl	65d0 <_Py_Dealloc@plt>
   16dc4:	b	16d78 <PyFloat_FromString@plt+0x102e8>
   16dc8:	stp	x29, x30, [sp, #-96]!
   16dcc:	adrp	x3, 5d000 <PyInit__decimal@@Base+0x42a80>
   16dd0:	add	x3, x3, #0x9a0
   16dd4:	mov	x29, sp
   16dd8:	stp	x19, x20, [sp, #16]
   16ddc:	adrp	x20, 5c000 <PyInit__decimal@@Base+0x41a80>
   16de0:	mov	x19, x0
   16de4:	ldr	x20, [x20, #4008]
   16de8:	mov	x0, x1
   16dec:	add	x3, x3, #0x470
   16df0:	mov	x1, x2
   16df4:	add	x5, sp, #0x50
   16df8:	adrp	x2, 3c000 <PyInit__decimal@@Base+0x21a80>
   16dfc:	add	x4, sp, #0x48
   16e00:	add	x2, x2, #0x168
   16e04:	str	wzr, [sp, #68]
   16e08:	str	x20, [sp, #80]
   16e0c:	bl	6520 <PyArg_ParseTupleAndKeywords@plt>
   16e10:	cbz	w0, 16f34 <PyFloat_FromString@plt+0x104a4>
   16e14:	str	x23, [sp, #48]
   16e18:	ldr	x23, [sp, #80]
   16e1c:	cmp	x23, x20
   16e20:	b.eq	17000 <PyFloat_FromString@plt+0x10570>  // b.none
   16e24:	ldr	x0, [x23, #8]
   16e28:	adrp	x20, 5d000 <PyInit__decimal@@Base+0x42a80>
   16e2c:	add	x1, x20, #0x320
   16e30:	cmp	x0, x1
   16e34:	b.eq	16eac <PyFloat_FromString@plt+0x1041c>  // b.none
   16e38:	bl	69c0 <PyType_IsSubtype@plt>
   16e3c:	cbz	w0, 17108 <PyFloat_FromString@plt+0x10678>
   16e40:	ldr	x23, [sp, #80]
   16e44:	stp	x21, x22, [sp, #32]
   16e48:	add	x21, x20, #0x320
   16e4c:	ldr	x0, [x19, #8]
   16e50:	add	x21, x21, #0x1a0
   16e54:	cmp	x0, x21
   16e58:	b.eq	16ec4 <PyFloat_FromString@plt+0x10434>  // b.none
   16e5c:	mov	x1, x21
   16e60:	bl	69c0 <PyType_IsSubtype@plt>
   16e64:	cbnz	w0, 16ff8 <PyFloat_FromString@plt+0x10568>
   16e68:	ldr	x2, [x19, #8]
   16e6c:	ldr	x0, [x2, #168]
   16e70:	tbnz	w0, #24, 17044 <PyFloat_FromString@plt+0x105b4>
   16e74:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
   16e78:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
   16e7c:	ldr	x2, [x2, #24]
   16e80:	add	x1, x1, #0x8
   16e84:	ldr	x0, [x0, #3936]
   16e88:	mov	x20, #0x0                   	// #0
   16e8c:	ldr	x0, [x0]
   16e90:	bl	6a10 <PyErr_Format@plt>
   16e94:	ldp	x21, x22, [sp, #32]
   16e98:	ldr	x23, [sp, #48]
   16e9c:	mov	x0, x20
   16ea0:	ldp	x19, x20, [sp, #16]
   16ea4:	ldp	x29, x30, [sp], #96
   16ea8:	ret
   16eac:	ldr	x0, [x19, #8]
   16eb0:	stp	x21, x22, [sp, #32]
   16eb4:	add	x21, x20, #0x320
   16eb8:	add	x21, x21, #0x1a0
   16ebc:	cmp	x0, x21
   16ec0:	b.ne	16e5c <PyFloat_FromString@plt+0x103cc>  // b.any
   16ec4:	ldr	x0, [x19]
   16ec8:	add	x0, x0, #0x1
   16ecc:	str	x0, [x19]
   16ed0:	ldr	x22, [sp, #72]
   16ed4:	add	x21, x20, #0x320
   16ed8:	add	x21, x21, #0x1a0
   16edc:	ldr	x0, [x22, #8]
   16ee0:	cmp	x0, x21
   16ee4:	b.eq	16f48 <PyFloat_FromString@plt+0x104b8>  // b.none
   16ee8:	mov	x1, x21
   16eec:	bl	69c0 <PyType_IsSubtype@plt>
   16ef0:	cbnz	w0, 16f48 <PyFloat_FromString@plt+0x104b8>
   16ef4:	ldr	x2, [x22, #8]
   16ef8:	ldr	x0, [x2, #168]
   16efc:	tbnz	w0, #24, 16fc4 <PyFloat_FromString@plt+0x10534>
   16f00:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
   16f04:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
   16f08:	ldr	x2, [x2, #24]
   16f0c:	add	x1, x1, #0x8
   16f10:	ldr	x0, [x0, #3936]
   16f14:	ldr	x0, [x0]
   16f18:	bl	6a10 <PyErr_Format@plt>
   16f1c:	ldr	x0, [x19]
   16f20:	sub	x0, x0, #0x1
   16f24:	str	x0, [x19]
   16f28:	cbz	x0, 16fe0 <PyFloat_FromString@plt+0x10550>
   16f2c:	ldp	x21, x22, [sp, #32]
   16f30:	ldr	x23, [sp, #48]
   16f34:	mov	x20, #0x0                   	// #0
   16f38:	mov	x0, x20
   16f3c:	ldp	x19, x20, [sp, #16]
   16f40:	ldp	x29, x30, [sp], #96
   16f44:	ret
   16f48:	ldr	x0, [x22]
   16f4c:	add	x0, x0, #0x1
   16f50:	str	x0, [x22]
   16f54:	add	x20, x20, #0x320
   16f58:	add	x0, x20, #0x1a0
   16f5c:	bl	6c60 <PyFloat_FromString@plt+0x1d0>
   16f60:	mov	x20, x0
   16f64:	cbz	x0, 1707c <PyFloat_FromString@plt+0x105ec>
   16f68:	add	x3, sp, #0x44
   16f6c:	add	x2, x22, #0x18
   16f70:	add	x1, x19, #0x18
   16f74:	add	x0, x0, #0x18
   16f78:	bl	29e78 <PyInit__decimal@@Base+0xf8f8>
   16f7c:	ldr	x0, [x19]
   16f80:	sub	x0, x0, #0x1
   16f84:	str	x0, [x19]
   16f88:	cbz	x0, 17070 <PyFloat_FromString@plt+0x105e0>
   16f8c:	ldr	x0, [x22]
   16f90:	sub	x0, x0, #0x1
   16f94:	str	x0, [x22]
   16f98:	cbz	x0, 17064 <PyFloat_FromString@plt+0x105d4>
   16f9c:	ldr	w1, [sp, #68]
   16fa0:	ldr	x0, [sp, #80]
   16fa4:	bl	7f90 <PyFloat_FromString@plt+0x1500>
   16fa8:	cbnz	w0, 170b0 <PyFloat_FromString@plt+0x10620>
   16fac:	mov	x0, x20
   16fb0:	ldp	x19, x20, [sp, #16]
   16fb4:	ldp	x21, x22, [sp, #32]
   16fb8:	ldr	x23, [sp, #48]
   16fbc:	ldp	x29, x30, [sp], #96
   16fc0:	ret
   16fc4:	mov	x1, x22
   16fc8:	mov	x2, x23
   16fcc:	mov	x0, x21
   16fd0:	bl	82f8 <PyFloat_FromString@plt+0x1868>
   16fd4:	mov	x22, x0
   16fd8:	cbnz	x0, 16f54 <PyFloat_FromString@plt+0x104c4>
   16fdc:	b	16f1c <PyFloat_FromString@plt+0x1048c>
   16fe0:	mov	x0, x19
   16fe4:	mov	x20, #0x0                   	// #0
   16fe8:	bl	65d0 <_Py_Dealloc@plt>
   16fec:	ldp	x21, x22, [sp, #32]
   16ff0:	ldr	x23, [sp, #48]
   16ff4:	b	16e9c <PyFloat_FromString@plt+0x1040c>
   16ff8:	ldr	x23, [sp, #80]
   16ffc:	b	16ec4 <PyFloat_FromString@plt+0x10434>
   17000:	adrp	x0, 5f000 <PyInit__decimal@@Base+0x44a80>
   17004:	add	x2, sp, #0x58
   17008:	mov	x1, #0x0                   	// #0
   1700c:	ldr	x0, [x0, #1808]
   17010:	bl	6740 <PyContextVar_Get@plt>
   17014:	tbnz	w0, #31, 1712c <PyFloat_FromString@plt+0x1069c>
   17018:	ldr	x0, [sp, #88]
   1701c:	cbz	x0, 170f4 <PyFloat_FromString@plt+0x10664>
   17020:	stp	x21, x22, [sp, #32]
   17024:	str	x0, [sp, #80]
   17028:	ldr	x1, [x0]
   1702c:	sub	x1, x1, #0x1
   17030:	str	x1, [x0]
   17034:	cbz	x1, 170e4 <PyFloat_FromString@plt+0x10654>
   17038:	adrp	x20, 5d000 <PyInit__decimal@@Base+0x42a80>
   1703c:	ldr	x23, [sp, #80]
   17040:	b	16e48 <PyFloat_FromString@plt+0x103b8>
   17044:	mov	x1, x19
   17048:	mov	x2, x23
   1704c:	mov	x0, x21
   17050:	bl	82f8 <PyFloat_FromString@plt+0x1868>
   17054:	mov	x19, x0
   17058:	cbz	x0, 16f2c <PyFloat_FromString@plt+0x1049c>
   1705c:	ldr	x23, [sp, #80]
   17060:	b	16ed0 <PyFloat_FromString@plt+0x10440>
   17064:	mov	x0, x22
   17068:	bl	65d0 <_Py_Dealloc@plt>
   1706c:	b	16f9c <PyFloat_FromString@plt+0x1050c>
   17070:	mov	x0, x19
   17074:	bl	65d0 <_Py_Dealloc@plt>
   17078:	b	16f8c <PyFloat_FromString@plt+0x104fc>
   1707c:	ldr	x0, [x19]
   17080:	sub	x0, x0, #0x1
   17084:	str	x0, [x19]
   17088:	cbz	x0, 170d8 <PyFloat_FromString@plt+0x10648>
   1708c:	ldr	x0, [x22]
   17090:	sub	x0, x0, #0x1
   17094:	str	x0, [x22]
   17098:	cbnz	x0, 16f2c <PyFloat_FromString@plt+0x1049c>
   1709c:	mov	x0, x22
   170a0:	bl	65d0 <_Py_Dealloc@plt>
   170a4:	ldp	x21, x22, [sp, #32]
   170a8:	ldr	x23, [sp, #48]
   170ac:	b	16e9c <PyFloat_FromString@plt+0x1040c>
   170b0:	ldr	x0, [x20]
   170b4:	sub	x0, x0, #0x1
   170b8:	str	x0, [x20]
   170bc:	cbnz	x0, 16f2c <PyFloat_FromString@plt+0x1049c>
   170c0:	mov	x0, x20
   170c4:	mov	x20, #0x0                   	// #0
   170c8:	bl	65d0 <_Py_Dealloc@plt>
   170cc:	ldp	x21, x22, [sp, #32]
   170d0:	ldr	x23, [sp, #48]
   170d4:	b	16e9c <PyFloat_FromString@plt+0x1040c>
   170d8:	mov	x0, x19
   170dc:	bl	65d0 <_Py_Dealloc@plt>
   170e0:	b	1708c <PyFloat_FromString@plt+0x105fc>
   170e4:	bl	65d0 <_Py_Dealloc@plt>
   170e8:	adrp	x20, 5d000 <PyInit__decimal@@Base+0x42a80>
   170ec:	ldr	x23, [sp, #80]
   170f0:	b	16e48 <PyFloat_FromString@plt+0x103b8>
   170f4:	bl	7320 <PyFloat_FromString@plt+0x890>
   170f8:	str	x0, [sp, #80]
   170fc:	cbz	x0, 16f30 <PyFloat_FromString@plt+0x104a0>
   17100:	stp	x21, x22, [sp, #32]
   17104:	b	17028 <PyFloat_FromString@plt+0x10598>
   17108:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
   1710c:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
   17110:	mov	x20, #0x0                   	// #0
   17114:	add	x1, x1, #0x88
   17118:	ldr	x0, [x0, #3936]
   1711c:	ldr	x0, [x0]
   17120:	bl	6650 <PyErr_SetString@plt>
   17124:	ldr	x23, [sp, #48]
   17128:	b	16e9c <PyFloat_FromString@plt+0x1040c>
   1712c:	mov	x20, #0x0                   	// #0
   17130:	ldr	x23, [sp, #48]
   17134:	b	16e9c <PyFloat_FromString@plt+0x1040c>
   17138:	stp	x29, x30, [sp, #-112]!
   1713c:	adrp	x3, 5d000 <PyInit__decimal@@Base+0x42a80>
   17140:	add	x3, x3, #0x9a0
   17144:	mov	x29, sp
   17148:	stp	x19, x20, [sp, #16]
   1714c:	adrp	x20, 5c000 <PyInit__decimal@@Base+0x41a80>
   17150:	mov	x19, x0
   17154:	ldr	x20, [x20, #4008]
   17158:	mov	x0, x1
   1715c:	add	x3, x3, #0x488
   17160:	mov	x1, x2
   17164:	add	x5, sp, #0x60
   17168:	adrp	x2, 3c000 <PyInit__decimal@@Base+0x21a80>
   1716c:	add	x4, sp, #0x58
   17170:	add	x2, x2, #0x168
   17174:	str	wzr, [sp, #84]
   17178:	str	x20, [sp, #96]
   1717c:	bl	6520 <PyArg_ParseTupleAndKeywords@plt>
   17180:	cbz	w0, 172a4 <PyFloat_FromString@plt+0x10814>
   17184:	str	x23, [sp, #48]
   17188:	ldr	x23, [sp, #96]
   1718c:	cmp	x23, x20
   17190:	b.eq	1737c <PyFloat_FromString@plt+0x108ec>  // b.none
   17194:	ldr	x0, [x23, #8]
   17198:	adrp	x20, 5d000 <PyInit__decimal@@Base+0x42a80>
   1719c:	add	x1, x20, #0x320
   171a0:	cmp	x0, x1
   171a4:	b.eq	1721c <PyFloat_FromString@plt+0x1078c>  // b.none
   171a8:	bl	69c0 <PyType_IsSubtype@plt>
   171ac:	cbz	w0, 17484 <PyFloat_FromString@plt+0x109f4>
   171b0:	ldr	x23, [sp, #96]
   171b4:	stp	x21, x22, [sp, #32]
   171b8:	add	x21, x20, #0x320
   171bc:	ldr	x0, [x19, #8]
   171c0:	add	x21, x21, #0x1a0
   171c4:	cmp	x0, x21
   171c8:	b.eq	17234 <PyFloat_FromString@plt+0x107a4>  // b.none
   171cc:	mov	x1, x21
   171d0:	bl	69c0 <PyType_IsSubtype@plt>
   171d4:	cbnz	w0, 17374 <PyFloat_FromString@plt+0x108e4>
   171d8:	ldr	x2, [x19, #8]
   171dc:	ldr	x0, [x2, #168]
   171e0:	tbnz	w0, #24, 173c0 <PyFloat_FromString@plt+0x10930>
   171e4:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
   171e8:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
   171ec:	ldr	x2, [x2, #24]
   171f0:	add	x1, x1, #0x8
   171f4:	ldr	x0, [x0, #3936]
   171f8:	mov	x20, #0x0                   	// #0
   171fc:	ldr	x0, [x0]
   17200:	bl	6a10 <PyErr_Format@plt>
   17204:	ldp	x21, x22, [sp, #32]
   17208:	ldr	x23, [sp, #48]
   1720c:	mov	x0, x20
   17210:	ldp	x19, x20, [sp, #16]
   17214:	ldp	x29, x30, [sp], #112
   17218:	ret
   1721c:	ldr	x0, [x19, #8]
   17220:	stp	x21, x22, [sp, #32]
   17224:	add	x21, x20, #0x320
   17228:	add	x21, x21, #0x1a0
   1722c:	cmp	x0, x21
   17230:	b.ne	171cc <PyFloat_FromString@plt+0x1073c>  // b.any
   17234:	ldr	x0, [x19]
   17238:	add	x0, x0, #0x1
   1723c:	str	x0, [x19]
   17240:	ldr	x22, [sp, #88]
   17244:	add	x21, x20, #0x320
   17248:	add	x21, x21, #0x1a0
   1724c:	ldr	x0, [x22, #8]
   17250:	cmp	x0, x21
   17254:	b.eq	172b8 <PyFloat_FromString@plt+0x10828>  // b.none
   17258:	mov	x1, x21
   1725c:	bl	69c0 <PyType_IsSubtype@plt>
   17260:	cbnz	w0, 172b8 <PyFloat_FromString@plt+0x10828>
   17264:	ldr	x2, [x22, #8]
   17268:	ldr	x0, [x2, #168]
   1726c:	tbnz	w0, #24, 1733c <PyFloat_FromString@plt+0x108ac>
   17270:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
   17274:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
   17278:	ldr	x2, [x2, #24]
   1727c:	add	x1, x1, #0x8
   17280:	ldr	x0, [x0, #3936]
   17284:	ldr	x0, [x0]
   17288:	bl	6a10 <PyErr_Format@plt>
   1728c:	ldr	x0, [x19]
   17290:	sub	x0, x0, #0x1
   17294:	str	x0, [x19]
   17298:	cbz	x0, 1735c <PyFloat_FromString@plt+0x108cc>
   1729c:	ldp	x21, x22, [sp, #32]
   172a0:	ldr	x23, [sp, #48]
   172a4:	mov	x20, #0x0                   	// #0
   172a8:	mov	x0, x20
   172ac:	ldp	x19, x20, [sp, #16]
   172b0:	ldp	x29, x30, [sp], #112
   172b4:	ret
   172b8:	ldr	x0, [x22]
   172bc:	add	x0, x0, #0x1
   172c0:	str	x0, [x22]
   172c4:	add	x0, x20, #0x320
   172c8:	add	x0, x0, #0x1a0
   172cc:	bl	6c60 <PyFloat_FromString@plt+0x1d0>
   172d0:	mov	x20, x0
   172d4:	cbz	x0, 173f8 <PyFloat_FromString@plt+0x10968>
   172d8:	ldr	x3, [sp, #96]
   172dc:	add	x0, x0, #0x18
   172e0:	add	x4, sp, #0x54
   172e4:	add	x2, x22, #0x18
   172e8:	add	x1, x19, #0x18
   172ec:	add	x3, x3, #0x10
   172f0:	bl	35800 <PyInit__decimal@@Base+0x1b280>
   172f4:	ldr	x0, [x19]
   172f8:	sub	x0, x0, #0x1
   172fc:	str	x0, [x19]
   17300:	cbz	x0, 173ec <PyFloat_FromString@plt+0x1095c>
   17304:	ldr	x0, [x22]
   17308:	sub	x0, x0, #0x1
   1730c:	str	x0, [x22]
   17310:	cbz	x0, 173e0 <PyFloat_FromString@plt+0x10950>
   17314:	ldr	w1, [sp, #84]
   17318:	ldr	x0, [sp, #96]
   1731c:	bl	7f90 <PyFloat_FromString@plt+0x1500>
   17320:	cbnz	w0, 1742c <PyFloat_FromString@plt+0x1099c>
   17324:	mov	x0, x20
   17328:	ldp	x19, x20, [sp, #16]
   1732c:	ldp	x21, x22, [sp, #32]
   17330:	ldr	x23, [sp, #48]
   17334:	ldp	x29, x30, [sp], #112
   17338:	ret
   1733c:	mov	x1, x22
   17340:	mov	x2, x23
   17344:	mov	x0, x21
   17348:	bl	82f8 <PyFloat_FromString@plt+0x1868>
   1734c:	str	x0, [sp, #72]
   17350:	mov	x22, x0
   17354:	cbnz	x0, 172c4 <PyFloat_FromString@plt+0x10834>
   17358:	b	1728c <PyFloat_FromString@plt+0x107fc>
   1735c:	mov	x0, x19
   17360:	mov	x20, #0x0                   	// #0
   17364:	bl	65d0 <_Py_Dealloc@plt>
   17368:	ldp	x21, x22, [sp, #32]
   1736c:	ldr	x23, [sp, #48]
   17370:	b	1720c <PyFloat_FromString@plt+0x1077c>
   17374:	ldr	x23, [sp, #96]
   17378:	b	17234 <PyFloat_FromString@plt+0x107a4>
   1737c:	adrp	x0, 5f000 <PyInit__decimal@@Base+0x44a80>
   17380:	add	x2, sp, #0x68
   17384:	mov	x1, #0x0                   	// #0
   17388:	ldr	x0, [x0, #1808]
   1738c:	bl	6740 <PyContextVar_Get@plt>
   17390:	tbnz	w0, #31, 174a8 <PyFloat_FromString@plt+0x10a18>
   17394:	ldr	x0, [sp, #104]
   17398:	cbz	x0, 17470 <PyFloat_FromString@plt+0x109e0>
   1739c:	stp	x21, x22, [sp, #32]
   173a0:	str	x0, [sp, #96]
   173a4:	ldr	x1, [x0]
   173a8:	sub	x1, x1, #0x1
   173ac:	str	x1, [x0]
   173b0:	cbz	x1, 17460 <PyFloat_FromString@plt+0x109d0>
   173b4:	adrp	x20, 5d000 <PyInit__decimal@@Base+0x42a80>
   173b8:	ldr	x23, [sp, #96]
   173bc:	b	171b8 <PyFloat_FromString@plt+0x10728>
   173c0:	mov	x1, x19
   173c4:	mov	x2, x23
   173c8:	mov	x0, x21
   173cc:	bl	82f8 <PyFloat_FromString@plt+0x1868>
   173d0:	mov	x19, x0
   173d4:	cbz	x0, 1729c <PyFloat_FromString@plt+0x1080c>
   173d8:	ldr	x23, [sp, #96]
   173dc:	b	17240 <PyFloat_FromString@plt+0x107b0>
   173e0:	mov	x0, x22
   173e4:	bl	65d0 <_Py_Dealloc@plt>
   173e8:	b	17314 <PyFloat_FromString@plt+0x10884>
   173ec:	mov	x0, x19
   173f0:	bl	65d0 <_Py_Dealloc@plt>
   173f4:	b	17304 <PyFloat_FromString@plt+0x10874>
   173f8:	ldr	x0, [x19]
   173fc:	sub	x0, x0, #0x1
   17400:	str	x0, [x19]
   17404:	cbz	x0, 17454 <PyFloat_FromString@plt+0x109c4>
   17408:	ldr	x0, [x22]
   1740c:	sub	x0, x0, #0x1
   17410:	str	x0, [x22]
   17414:	cbnz	x0, 1729c <PyFloat_FromString@plt+0x1080c>
   17418:	mov	x0, x22
   1741c:	bl	65d0 <_Py_Dealloc@plt>
   17420:	ldp	x21, x22, [sp, #32]
   17424:	ldr	x23, [sp, #48]
   17428:	b	1720c <PyFloat_FromString@plt+0x1077c>
   1742c:	ldr	x0, [x20]
   17430:	sub	x0, x0, #0x1
   17434:	str	x0, [x20]
   17438:	cbnz	x0, 1729c <PyFloat_FromString@plt+0x1080c>
   1743c:	mov	x0, x20
   17440:	mov	x20, #0x0                   	// #0
   17444:	bl	65d0 <_Py_Dealloc@plt>
   17448:	ldp	x21, x22, [sp, #32]
   1744c:	ldr	x23, [sp, #48]
   17450:	b	1720c <PyFloat_FromString@plt+0x1077c>
   17454:	mov	x0, x19
   17458:	bl	65d0 <_Py_Dealloc@plt>
   1745c:	b	17408 <PyFloat_FromString@plt+0x10978>
   17460:	bl	65d0 <_Py_Dealloc@plt>
   17464:	adrp	x20, 5d000 <PyInit__decimal@@Base+0x42a80>
   17468:	ldr	x23, [sp, #96]
   1746c:	b	171b8 <PyFloat_FromString@plt+0x10728>
   17470:	bl	7320 <PyFloat_FromString@plt+0x890>
   17474:	str	x0, [sp, #96]
   17478:	cbz	x0, 172a0 <PyFloat_FromString@plt+0x10810>
   1747c:	stp	x21, x22, [sp, #32]
   17480:	b	173a4 <PyFloat_FromString@plt+0x10914>
   17484:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
   17488:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
   1748c:	mov	x20, #0x0                   	// #0
   17490:	add	x1, x1, #0x88
   17494:	ldr	x0, [x0, #3936]
   17498:	ldr	x0, [x0]
   1749c:	bl	6650 <PyErr_SetString@plt>
   174a0:	ldr	x23, [sp, #48]
   174a4:	b	1720c <PyFloat_FromString@plt+0x1077c>
   174a8:	mov	x20, #0x0                   	// #0
   174ac:	ldr	x23, [sp, #48]
   174b0:	b	1720c <PyFloat_FromString@plt+0x1077c>
   174b4:	nop
   174b8:	stp	x29, x30, [sp, #-96]!
   174bc:	adrp	x3, 5d000 <PyInit__decimal@@Base+0x42a80>
   174c0:	add	x3, x3, #0x9a0
   174c4:	mov	x29, sp
   174c8:	stp	x19, x20, [sp, #16]
   174cc:	adrp	x20, 5c000 <PyInit__decimal@@Base+0x41a80>
   174d0:	mov	x19, x0
   174d4:	ldr	x20, [x20, #4008]
   174d8:	mov	x0, x1
   174dc:	add	x3, x3, #0x4a0
   174e0:	mov	x1, x2
   174e4:	add	x5, sp, #0x50
   174e8:	adrp	x2, 3c000 <PyInit__decimal@@Base+0x21a80>
   174ec:	add	x4, sp, #0x48
   174f0:	add	x2, x2, #0x168
   174f4:	str	wzr, [sp, #68]
   174f8:	str	x20, [sp, #80]
   174fc:	bl	6520 <PyArg_ParseTupleAndKeywords@plt>
   17500:	cbz	w0, 17624 <PyFloat_FromString@plt+0x10b94>
   17504:	str	x23, [sp, #48]
   17508:	ldr	x23, [sp, #80]
   1750c:	cmp	x23, x20
   17510:	b.eq	176f8 <PyFloat_FromString@plt+0x10c68>  // b.none
   17514:	ldr	x0, [x23, #8]
   17518:	adrp	x20, 5d000 <PyInit__decimal@@Base+0x42a80>
   1751c:	add	x1, x20, #0x320
   17520:	cmp	x0, x1
   17524:	b.eq	1759c <PyFloat_FromString@plt+0x10b0c>  // b.none
   17528:	bl	69c0 <PyType_IsSubtype@plt>
   1752c:	cbz	w0, 17800 <PyFloat_FromString@plt+0x10d70>
   17530:	ldr	x23, [sp, #80]
   17534:	stp	x21, x22, [sp, #32]
   17538:	add	x21, x20, #0x320
   1753c:	ldr	x0, [x19, #8]
   17540:	add	x21, x21, #0x1a0
   17544:	cmp	x0, x21
   17548:	b.eq	175b4 <PyFloat_FromString@plt+0x10b24>  // b.none
   1754c:	mov	x1, x21
   17550:	bl	69c0 <PyType_IsSubtype@plt>
   17554:	cbnz	w0, 176f0 <PyFloat_FromString@plt+0x10c60>
   17558:	ldr	x2, [x19, #8]
   1755c:	ldr	x0, [x2, #168]
   17560:	tbnz	w0, #24, 1773c <PyFloat_FromString@plt+0x10cac>
   17564:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
   17568:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
   1756c:	ldr	x2, [x2, #24]
   17570:	add	x1, x1, #0x8
   17574:	ldr	x0, [x0, #3936]
   17578:	mov	x20, #0x0                   	// #0
   1757c:	ldr	x0, [x0]
   17580:	bl	6a10 <PyErr_Format@plt>
   17584:	ldp	x21, x22, [sp, #32]
   17588:	ldr	x23, [sp, #48]
   1758c:	mov	x0, x20
   17590:	ldp	x19, x20, [sp, #16]
   17594:	ldp	x29, x30, [sp], #96
   17598:	ret
   1759c:	ldr	x0, [x19, #8]
   175a0:	stp	x21, x22, [sp, #32]
   175a4:	add	x21, x20, #0x320
   175a8:	add	x21, x21, #0x1a0
   175ac:	cmp	x0, x21
   175b0:	b.ne	1754c <PyFloat_FromString@plt+0x10abc>  // b.any
   175b4:	ldr	x0, [x19]
   175b8:	add	x0, x0, #0x1
   175bc:	str	x0, [x19]
   175c0:	ldr	x22, [sp, #72]
   175c4:	add	x21, x20, #0x320
   175c8:	add	x21, x21, #0x1a0
   175cc:	ldr	x0, [x22, #8]
   175d0:	cmp	x0, x21
   175d4:	b.eq	17638 <PyFloat_FromString@plt+0x10ba8>  // b.none
   175d8:	mov	x1, x21
   175dc:	bl	69c0 <PyType_IsSubtype@plt>
   175e0:	cbnz	w0, 17638 <PyFloat_FromString@plt+0x10ba8>
   175e4:	ldr	x2, [x22, #8]
   175e8:	ldr	x0, [x2, #168]
   175ec:	tbnz	w0, #24, 176bc <PyFloat_FromString@plt+0x10c2c>
   175f0:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
   175f4:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
   175f8:	ldr	x2, [x2, #24]
   175fc:	add	x1, x1, #0x8
   17600:	ldr	x0, [x0, #3936]
   17604:	ldr	x0, [x0]
   17608:	bl	6a10 <PyErr_Format@plt>
   1760c:	ldr	x0, [x19]
   17610:	sub	x0, x0, #0x1
   17614:	str	x0, [x19]
   17618:	cbz	x0, 176d8 <PyFloat_FromString@plt+0x10c48>
   1761c:	ldp	x21, x22, [sp, #32]
   17620:	ldr	x23, [sp, #48]
   17624:	mov	x20, #0x0                   	// #0
   17628:	mov	x0, x20
   1762c:	ldp	x19, x20, [sp, #16]
   17630:	ldp	x29, x30, [sp], #96
   17634:	ret
   17638:	ldr	x0, [x22]
   1763c:	add	x0, x0, #0x1
   17640:	str	x0, [x22]
   17644:	add	x20, x20, #0x320
   17648:	add	x0, x20, #0x1a0
   1764c:	bl	6c60 <PyFloat_FromString@plt+0x1d0>
   17650:	mov	x20, x0
   17654:	cbz	x0, 17774 <PyFloat_FromString@plt+0x10ce4>
   17658:	ldr	x3, [sp, #80]
   1765c:	add	x4, sp, #0x44
   17660:	add	x2, x22, #0x18
   17664:	add	x1, x19, #0x18
   17668:	add	x0, x0, #0x18
   1766c:	add	x3, x3, #0x10
   17670:	bl	29f00 <PyInit__decimal@@Base+0xf980>
   17674:	ldr	x0, [x19]
   17678:	sub	x0, x0, #0x1
   1767c:	str	x0, [x19]
   17680:	cbz	x0, 17768 <PyFloat_FromString@plt+0x10cd8>
   17684:	ldr	x0, [x22]
   17688:	sub	x0, x0, #0x1
   1768c:	str	x0, [x22]
   17690:	cbz	x0, 1775c <PyFloat_FromString@plt+0x10ccc>
   17694:	ldr	w1, [sp, #68]
   17698:	ldr	x0, [sp, #80]
   1769c:	bl	7f90 <PyFloat_FromString@plt+0x1500>
   176a0:	cbnz	w0, 177a8 <PyFloat_FromString@plt+0x10d18>
   176a4:	mov	x0, x20
   176a8:	ldp	x19, x20, [sp, #16]
   176ac:	ldp	x21, x22, [sp, #32]
   176b0:	ldr	x23, [sp, #48]
   176b4:	ldp	x29, x30, [sp], #96
   176b8:	ret
   176bc:	mov	x1, x22
   176c0:	mov	x2, x23
   176c4:	mov	x0, x21
   176c8:	bl	82f8 <PyFloat_FromString@plt+0x1868>
   176cc:	mov	x22, x0
   176d0:	cbnz	x0, 17644 <PyFloat_FromString@plt+0x10bb4>
   176d4:	b	1760c <PyFloat_FromString@plt+0x10b7c>
   176d8:	mov	x0, x19
   176dc:	mov	x20, #0x0                   	// #0
   176e0:	bl	65d0 <_Py_Dealloc@plt>
   176e4:	ldp	x21, x22, [sp, #32]
   176e8:	ldr	x23, [sp, #48]
   176ec:	b	1758c <PyFloat_FromString@plt+0x10afc>
   176f0:	ldr	x23, [sp, #80]
   176f4:	b	175b4 <PyFloat_FromString@plt+0x10b24>
   176f8:	adrp	x0, 5f000 <PyInit__decimal@@Base+0x44a80>
   176fc:	add	x2, sp, #0x58
   17700:	mov	x1, #0x0                   	// #0
   17704:	ldr	x0, [x0, #1808]
   17708:	bl	6740 <PyContextVar_Get@plt>
   1770c:	tbnz	w0, #31, 17824 <PyFloat_FromString@plt+0x10d94>
   17710:	ldr	x0, [sp, #88]
   17714:	cbz	x0, 177ec <PyFloat_FromString@plt+0x10d5c>
   17718:	stp	x21, x22, [sp, #32]
   1771c:	str	x0, [sp, #80]
   17720:	ldr	x1, [x0]
   17724:	sub	x1, x1, #0x1
   17728:	str	x1, [x0]
   1772c:	cbz	x1, 177dc <PyFloat_FromString@plt+0x10d4c>
   17730:	adrp	x20, 5d000 <PyInit__decimal@@Base+0x42a80>
   17734:	ldr	x23, [sp, #80]
   17738:	b	17538 <PyFloat_FromString@plt+0x10aa8>
   1773c:	mov	x1, x19
   17740:	mov	x2, x23
   17744:	mov	x0, x21
   17748:	bl	82f8 <PyFloat_FromString@plt+0x1868>
   1774c:	mov	x19, x0
   17750:	cbz	x0, 1761c <PyFloat_FromString@plt+0x10b8c>
   17754:	ldr	x23, [sp, #80]
   17758:	b	175c0 <PyFloat_FromString@plt+0x10b30>
   1775c:	mov	x0, x22
   17760:	bl	65d0 <_Py_Dealloc@plt>
   17764:	b	17694 <PyFloat_FromString@plt+0x10c04>
   17768:	mov	x0, x19
   1776c:	bl	65d0 <_Py_Dealloc@plt>
   17770:	b	17684 <PyFloat_FromString@plt+0x10bf4>
   17774:	ldr	x0, [x19]
   17778:	sub	x0, x0, #0x1
   1777c:	str	x0, [x19]
   17780:	cbz	x0, 177d0 <PyFloat_FromString@plt+0x10d40>
   17784:	ldr	x0, [x22]
   17788:	sub	x0, x0, #0x1
   1778c:	str	x0, [x22]
   17790:	cbnz	x0, 1761c <PyFloat_FromString@plt+0x10b8c>
   17794:	mov	x0, x22
   17798:	bl	65d0 <_Py_Dealloc@plt>
   1779c:	ldp	x21, x22, [sp, #32]
   177a0:	ldr	x23, [sp, #48]
   177a4:	b	1758c <PyFloat_FromString@plt+0x10afc>
   177a8:	ldr	x0, [x20]
   177ac:	sub	x0, x0, #0x1
   177b0:	str	x0, [x20]
   177b4:	cbnz	x0, 1761c <PyFloat_FromString@plt+0x10b8c>
   177b8:	mov	x0, x20
   177bc:	mov	x20, #0x0                   	// #0
   177c0:	bl	65d0 <_Py_Dealloc@plt>
   177c4:	ldp	x21, x22, [sp, #32]
   177c8:	ldr	x23, [sp, #48]
   177cc:	b	1758c <PyFloat_FromString@plt+0x10afc>
   177d0:	mov	x0, x19
   177d4:	bl	65d0 <_Py_Dealloc@plt>
   177d8:	b	17784 <PyFloat_FromString@plt+0x10cf4>
   177dc:	bl	65d0 <_Py_Dealloc@plt>
   177e0:	adrp	x20, 5d000 <PyInit__decimal@@Base+0x42a80>
   177e4:	ldr	x23, [sp, #80]
   177e8:	b	17538 <PyFloat_FromString@plt+0x10aa8>
   177ec:	bl	7320 <PyFloat_FromString@plt+0x890>
   177f0:	str	x0, [sp, #80]
   177f4:	cbz	x0, 17620 <PyFloat_FromString@plt+0x10b90>
   177f8:	stp	x21, x22, [sp, #32]
   177fc:	b	17720 <PyFloat_FromString@plt+0x10c90>
   17800:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
   17804:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
   17808:	mov	x20, #0x0                   	// #0
   1780c:	add	x1, x1, #0x88
   17810:	ldr	x0, [x0, #3936]
   17814:	ldr	x0, [x0]
   17818:	bl	6650 <PyErr_SetString@plt>
   1781c:	ldr	x23, [sp, #48]
   17820:	b	1758c <PyFloat_FromString@plt+0x10afc>
   17824:	mov	x20, #0x0                   	// #0
   17828:	ldr	x23, [sp, #48]
   1782c:	b	1758c <PyFloat_FromString@plt+0x10afc>
   17830:	stp	x29, x30, [sp, #-96]!
   17834:	adrp	x3, 5d000 <PyInit__decimal@@Base+0x42a80>
   17838:	add	x3, x3, #0x9a0
   1783c:	mov	x29, sp
   17840:	stp	x19, x20, [sp, #16]
   17844:	adrp	x20, 5c000 <PyInit__decimal@@Base+0x41a80>
   17848:	mov	x19, x0
   1784c:	ldr	x20, [x20, #4008]
   17850:	mov	x0, x1
   17854:	add	x3, x3, #0x4b8
   17858:	mov	x1, x2
   1785c:	add	x5, sp, #0x50
   17860:	adrp	x2, 3c000 <PyInit__decimal@@Base+0x21a80>
   17864:	add	x4, sp, #0x48
   17868:	add	x2, x2, #0x168
   1786c:	str	wzr, [sp, #68]
   17870:	str	x20, [sp, #80]
   17874:	bl	6520 <PyArg_ParseTupleAndKeywords@plt>
   17878:	cbz	w0, 1799c <PyFloat_FromString@plt+0x10f0c>
   1787c:	str	x23, [sp, #48]
   17880:	ldr	x23, [sp, #80]
   17884:	cmp	x23, x20
   17888:	b.eq	17a70 <PyFloat_FromString@plt+0x10fe0>  // b.none
   1788c:	ldr	x0, [x23, #8]
   17890:	adrp	x20, 5d000 <PyInit__decimal@@Base+0x42a80>
   17894:	add	x1, x20, #0x320
   17898:	cmp	x0, x1
   1789c:	b.eq	17914 <PyFloat_FromString@plt+0x10e84>  // b.none
   178a0:	bl	69c0 <PyType_IsSubtype@plt>
   178a4:	cbz	w0, 17b78 <PyFloat_FromString@plt+0x110e8>
   178a8:	ldr	x23, [sp, #80]
   178ac:	stp	x21, x22, [sp, #32]
   178b0:	add	x21, x20, #0x320
   178b4:	ldr	x0, [x19, #8]
   178b8:	add	x21, x21, #0x1a0
   178bc:	cmp	x0, x21
   178c0:	b.eq	1792c <PyFloat_FromString@plt+0x10e9c>  // b.none
   178c4:	mov	x1, x21
   178c8:	bl	69c0 <PyType_IsSubtype@plt>
   178cc:	cbnz	w0, 17a68 <PyFloat_FromString@plt+0x10fd8>
   178d0:	ldr	x2, [x19, #8]
   178d4:	ldr	x0, [x2, #168]
   178d8:	tbnz	w0, #24, 17ab4 <PyFloat_FromString@plt+0x11024>
   178dc:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
   178e0:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
   178e4:	ldr	x2, [x2, #24]
   178e8:	add	x1, x1, #0x8
   178ec:	ldr	x0, [x0, #3936]
   178f0:	mov	x20, #0x0                   	// #0
   178f4:	ldr	x0, [x0]
   178f8:	bl	6a10 <PyErr_Format@plt>
   178fc:	ldp	x21, x22, [sp, #32]
   17900:	ldr	x23, [sp, #48]
   17904:	mov	x0, x20
   17908:	ldp	x19, x20, [sp, #16]
   1790c:	ldp	x29, x30, [sp], #96
   17910:	ret
   17914:	ldr	x0, [x19, #8]
   17918:	stp	x21, x22, [sp, #32]
   1791c:	add	x21, x20, #0x320
   17920:	add	x21, x21, #0x1a0
   17924:	cmp	x0, x21
   17928:	b.ne	178c4 <PyFloat_FromString@plt+0x10e34>  // b.any
   1792c:	ldr	x0, [x19]
   17930:	add	x0, x0, #0x1
   17934:	str	x0, [x19]
   17938:	ldr	x22, [sp, #72]
   1793c:	add	x21, x20, #0x320
   17940:	add	x21, x21, #0x1a0
   17944:	ldr	x0, [x22, #8]
   17948:	cmp	x0, x21
   1794c:	b.eq	179b0 <PyFloat_FromString@plt+0x10f20>  // b.none
   17950:	mov	x1, x21
   17954:	bl	69c0 <PyType_IsSubtype@plt>
   17958:	cbnz	w0, 179b0 <PyFloat_FromString@plt+0x10f20>
   1795c:	ldr	x2, [x22, #8]
   17960:	ldr	x0, [x2, #168]
   17964:	tbnz	w0, #24, 17a34 <PyFloat_FromString@plt+0x10fa4>
   17968:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
   1796c:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
   17970:	ldr	x2, [x2, #24]
   17974:	add	x1, x1, #0x8
   17978:	ldr	x0, [x0, #3936]
   1797c:	ldr	x0, [x0]
   17980:	bl	6a10 <PyErr_Format@plt>
   17984:	ldr	x0, [x19]
   17988:	sub	x0, x0, #0x1
   1798c:	str	x0, [x19]
   17990:	cbz	x0, 17a50 <PyFloat_FromString@plt+0x10fc0>
   17994:	ldp	x21, x22, [sp, #32]
   17998:	ldr	x23, [sp, #48]
   1799c:	mov	x20, #0x0                   	// #0
   179a0:	mov	x0, x20
   179a4:	ldp	x19, x20, [sp, #16]
   179a8:	ldp	x29, x30, [sp], #96
   179ac:	ret
   179b0:	ldr	x0, [x22]
   179b4:	add	x0, x0, #0x1
   179b8:	str	x0, [x22]
   179bc:	add	x20, x20, #0x320
   179c0:	add	x0, x20, #0x1a0
   179c4:	bl	6c60 <PyFloat_FromString@plt+0x1d0>
   179c8:	mov	x20, x0
   179cc:	cbz	x0, 17aec <PyFloat_FromString@plt+0x1105c>
   179d0:	ldr	x3, [sp, #80]
   179d4:	add	x0, x0, #0x18
   179d8:	add	x4, sp, #0x44
   179dc:	add	x2, x22, #0x18
   179e0:	add	x1, x19, #0x18
   179e4:	add	x3, x3, #0x10
   179e8:	bl	2dba8 <PyInit__decimal@@Base+0x13628>
   179ec:	ldr	x0, [x19]
   179f0:	sub	x0, x0, #0x1
   179f4:	str	x0, [x19]
   179f8:	cbz	x0, 17ae0 <PyFloat_FromString@plt+0x11050>
   179fc:	ldr	x0, [x22]
   17a00:	sub	x0, x0, #0x1
   17a04:	str	x0, [x22]
   17a08:	cbz	x0, 17ad4 <PyFloat_FromString@plt+0x11044>
   17a0c:	ldr	w1, [sp, #68]
   17a10:	ldr	x0, [sp, #80]
   17a14:	bl	7f90 <PyFloat_FromString@plt+0x1500>
   17a18:	cbnz	w0, 17b20 <PyFloat_FromString@plt+0x11090>
   17a1c:	mov	x0, x20
   17a20:	ldp	x19, x20, [sp, #16]
   17a24:	ldp	x21, x22, [sp, #32]
   17a28:	ldr	x23, [sp, #48]
   17a2c:	ldp	x29, x30, [sp], #96
   17a30:	ret
   17a34:	mov	x1, x22
   17a38:	mov	x2, x23
   17a3c:	mov	x0, x21
   17a40:	bl	82f8 <PyFloat_FromString@plt+0x1868>
   17a44:	mov	x22, x0
   17a48:	cbnz	x0, 179bc <PyFloat_FromString@plt+0x10f2c>
   17a4c:	b	17984 <PyFloat_FromString@plt+0x10ef4>
   17a50:	mov	x0, x19
   17a54:	mov	x20, #0x0                   	// #0
   17a58:	bl	65d0 <_Py_Dealloc@plt>
   17a5c:	ldp	x21, x22, [sp, #32]
   17a60:	ldr	x23, [sp, #48]
   17a64:	b	17904 <PyFloat_FromString@plt+0x10e74>
   17a68:	ldr	x23, [sp, #80]
   17a6c:	b	1792c <PyFloat_FromString@plt+0x10e9c>
   17a70:	adrp	x0, 5f000 <PyInit__decimal@@Base+0x44a80>
   17a74:	add	x2, sp, #0x58
   17a78:	mov	x1, #0x0                   	// #0
   17a7c:	ldr	x0, [x0, #1808]
   17a80:	bl	6740 <PyContextVar_Get@plt>
   17a84:	tbnz	w0, #31, 17b9c <PyFloat_FromString@plt+0x1110c>
   17a88:	ldr	x0, [sp, #88]
   17a8c:	cbz	x0, 17b64 <PyFloat_FromString@plt+0x110d4>
   17a90:	stp	x21, x22, [sp, #32]
   17a94:	str	x0, [sp, #80]
   17a98:	ldr	x1, [x0]
   17a9c:	sub	x1, x1, #0x1
   17aa0:	str	x1, [x0]
   17aa4:	cbz	x1, 17b54 <PyFloat_FromString@plt+0x110c4>
   17aa8:	adrp	x20, 5d000 <PyInit__decimal@@Base+0x42a80>
   17aac:	ldr	x23, [sp, #80]
   17ab0:	b	178b0 <PyFloat_FromString@plt+0x10e20>
   17ab4:	mov	x1, x19
   17ab8:	mov	x2, x23
   17abc:	mov	x0, x21
   17ac0:	bl	82f8 <PyFloat_FromString@plt+0x1868>
   17ac4:	mov	x19, x0
   17ac8:	cbz	x0, 17994 <PyFloat_FromString@plt+0x10f04>
   17acc:	ldr	x23, [sp, #80]
   17ad0:	b	17938 <PyFloat_FromString@plt+0x10ea8>
   17ad4:	mov	x0, x22
   17ad8:	bl	65d0 <_Py_Dealloc@plt>
   17adc:	b	17a0c <PyFloat_FromString@plt+0x10f7c>
   17ae0:	mov	x0, x19
   17ae4:	bl	65d0 <_Py_Dealloc@plt>
   17ae8:	b	179fc <PyFloat_FromString@plt+0x10f6c>
   17aec:	ldr	x0, [x19]
   17af0:	sub	x0, x0, #0x1
   17af4:	str	x0, [x19]
   17af8:	cbz	x0, 17b48 <PyFloat_FromString@plt+0x110b8>
   17afc:	ldr	x0, [x22]
   17b00:	sub	x0, x0, #0x1
   17b04:	str	x0, [x22]
   17b08:	cbnz	x0, 17994 <PyFloat_FromString@plt+0x10f04>
   17b0c:	mov	x0, x22
   17b10:	bl	65d0 <_Py_Dealloc@plt>
   17b14:	ldp	x21, x22, [sp, #32]
   17b18:	ldr	x23, [sp, #48]
   17b1c:	b	17904 <PyFloat_FromString@plt+0x10e74>
   17b20:	ldr	x0, [x20]
   17b24:	sub	x0, x0, #0x1
   17b28:	str	x0, [x20]
   17b2c:	cbnz	x0, 17994 <PyFloat_FromString@plt+0x10f04>
   17b30:	mov	x0, x20
   17b34:	mov	x20, #0x0                   	// #0
   17b38:	bl	65d0 <_Py_Dealloc@plt>
   17b3c:	ldp	x21, x22, [sp, #32]
   17b40:	ldr	x23, [sp, #48]
   17b44:	b	17904 <PyFloat_FromString@plt+0x10e74>
   17b48:	mov	x0, x19
   17b4c:	bl	65d0 <_Py_Dealloc@plt>
   17b50:	b	17afc <PyFloat_FromString@plt+0x1106c>
   17b54:	bl	65d0 <_Py_Dealloc@plt>
   17b58:	adrp	x20, 5d000 <PyInit__decimal@@Base+0x42a80>
   17b5c:	ldr	x23, [sp, #80]
   17b60:	b	178b0 <PyFloat_FromString@plt+0x10e20>
   17b64:	bl	7320 <PyFloat_FromString@plt+0x890>
   17b68:	str	x0, [sp, #80]
   17b6c:	cbz	x0, 17998 <PyFloat_FromString@plt+0x10f08>
   17b70:	stp	x21, x22, [sp, #32]
   17b74:	b	17a98 <PyFloat_FromString@plt+0x11008>
   17b78:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
   17b7c:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
   17b80:	mov	x20, #0x0                   	// #0
   17b84:	add	x1, x1, #0x88
   17b88:	ldr	x0, [x0, #3936]
   17b8c:	ldr	x0, [x0]
   17b90:	bl	6650 <PyErr_SetString@plt>
   17b94:	ldr	x23, [sp, #48]
   17b98:	b	17904 <PyFloat_FromString@plt+0x10e74>
   17b9c:	mov	x20, #0x0                   	// #0
   17ba0:	ldr	x23, [sp, #48]
   17ba4:	b	17904 <PyFloat_FromString@plt+0x10e74>
   17ba8:	stp	x29, x30, [sp, #-96]!
   17bac:	adrp	x3, 5d000 <PyInit__decimal@@Base+0x42a80>
   17bb0:	add	x3, x3, #0x9a0
   17bb4:	mov	x29, sp
   17bb8:	stp	x19, x20, [sp, #16]
   17bbc:	adrp	x20, 5c000 <PyInit__decimal@@Base+0x41a80>
   17bc0:	mov	x19, x0
   17bc4:	ldr	x20, [x20, #4008]
   17bc8:	mov	x0, x1
   17bcc:	add	x3, x3, #0x4d0
   17bd0:	mov	x1, x2
   17bd4:	add	x5, sp, #0x50
   17bd8:	adrp	x2, 3c000 <PyInit__decimal@@Base+0x21a80>
   17bdc:	add	x4, sp, #0x48
   17be0:	add	x2, x2, #0x168
   17be4:	str	wzr, [sp, #68]
   17be8:	str	x20, [sp, #80]
   17bec:	bl	6520 <PyArg_ParseTupleAndKeywords@plt>
   17bf0:	cbz	w0, 17d14 <PyFloat_FromString@plt+0x11284>
   17bf4:	str	x23, [sp, #48]
   17bf8:	ldr	x23, [sp, #80]
   17bfc:	cmp	x23, x20
   17c00:	b.eq	17de8 <PyFloat_FromString@plt+0x11358>  // b.none
   17c04:	ldr	x0, [x23, #8]
   17c08:	adrp	x20, 5d000 <PyInit__decimal@@Base+0x42a80>
   17c0c:	add	x1, x20, #0x320
   17c10:	cmp	x0, x1
   17c14:	b.eq	17c8c <PyFloat_FromString@plt+0x111fc>  // b.none
   17c18:	bl	69c0 <PyType_IsSubtype@plt>
   17c1c:	cbz	w0, 17ef0 <PyFloat_FromString@plt+0x11460>
   17c20:	ldr	x23, [sp, #80]
   17c24:	stp	x21, x22, [sp, #32]
   17c28:	add	x21, x20, #0x320
   17c2c:	ldr	x0, [x19, #8]
   17c30:	add	x21, x21, #0x1a0
   17c34:	cmp	x0, x21
   17c38:	b.eq	17ca4 <PyFloat_FromString@plt+0x11214>  // b.none
   17c3c:	mov	x1, x21
   17c40:	bl	69c0 <PyType_IsSubtype@plt>
   17c44:	cbnz	w0, 17de0 <PyFloat_FromString@plt+0x11350>
   17c48:	ldr	x2, [x19, #8]
   17c4c:	ldr	x0, [x2, #168]
   17c50:	tbnz	w0, #24, 17e2c <PyFloat_FromString@plt+0x1139c>
   17c54:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
   17c58:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
   17c5c:	ldr	x2, [x2, #24]
   17c60:	add	x1, x1, #0x8
   17c64:	ldr	x0, [x0, #3936]
   17c68:	mov	x20, #0x0                   	// #0
   17c6c:	ldr	x0, [x0]
   17c70:	bl	6a10 <PyErr_Format@plt>
   17c74:	ldp	x21, x22, [sp, #32]
   17c78:	ldr	x23, [sp, #48]
   17c7c:	mov	x0, x20
   17c80:	ldp	x19, x20, [sp, #16]
   17c84:	ldp	x29, x30, [sp], #96
   17c88:	ret
   17c8c:	ldr	x0, [x19, #8]
   17c90:	stp	x21, x22, [sp, #32]
   17c94:	add	x21, x20, #0x320
   17c98:	add	x21, x21, #0x1a0
   17c9c:	cmp	x0, x21
   17ca0:	b.ne	17c3c <PyFloat_FromString@plt+0x111ac>  // b.any
   17ca4:	ldr	x0, [x19]
   17ca8:	add	x0, x0, #0x1
   17cac:	str	x0, [x19]
   17cb0:	ldr	x22, [sp, #72]
   17cb4:	add	x21, x20, #0x320
   17cb8:	add	x21, x21, #0x1a0
   17cbc:	ldr	x0, [x22, #8]
   17cc0:	cmp	x0, x21
   17cc4:	b.eq	17d28 <PyFloat_FromString@plt+0x11298>  // b.none
   17cc8:	mov	x1, x21
   17ccc:	bl	69c0 <PyType_IsSubtype@plt>
   17cd0:	cbnz	w0, 17d28 <PyFloat_FromString@plt+0x11298>
   17cd4:	ldr	x2, [x22, #8]
   17cd8:	ldr	x0, [x2, #168]
   17cdc:	tbnz	w0, #24, 17dac <PyFloat_FromString@plt+0x1131c>
   17ce0:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
   17ce4:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
   17ce8:	ldr	x2, [x2, #24]
   17cec:	add	x1, x1, #0x8
   17cf0:	ldr	x0, [x0, #3936]
   17cf4:	ldr	x0, [x0]
   17cf8:	bl	6a10 <PyErr_Format@plt>
   17cfc:	ldr	x0, [x19]
   17d00:	sub	x0, x0, #0x1
   17d04:	str	x0, [x19]
   17d08:	cbz	x0, 17dc8 <PyFloat_FromString@plt+0x11338>
   17d0c:	ldp	x21, x22, [sp, #32]
   17d10:	ldr	x23, [sp, #48]
   17d14:	mov	x20, #0x0                   	// #0
   17d18:	mov	x0, x20
   17d1c:	ldp	x19, x20, [sp, #16]
   17d20:	ldp	x29, x30, [sp], #96
   17d24:	ret
   17d28:	ldr	x0, [x22]
   17d2c:	add	x0, x0, #0x1
   17d30:	str	x0, [x22]
   17d34:	add	x20, x20, #0x320
   17d38:	add	x0, x20, #0x1a0
   17d3c:	bl	6c60 <PyFloat_FromString@plt+0x1d0>
   17d40:	mov	x20, x0
   17d44:	cbz	x0, 17e64 <PyFloat_FromString@plt+0x113d4>
   17d48:	ldr	x3, [sp, #80]
   17d4c:	add	x0, x0, #0x18
   17d50:	add	x4, sp, #0x44
   17d54:	add	x2, x22, #0x18
   17d58:	add	x1, x19, #0x18
   17d5c:	add	x3, x3, #0x10
   17d60:	bl	33580 <PyInit__decimal@@Base+0x19000>
   17d64:	ldr	x0, [x19]
   17d68:	sub	x0, x0, #0x1
   17d6c:	str	x0, [x19]
   17d70:	cbz	x0, 17e58 <PyFloat_FromString@plt+0x113c8>
   17d74:	ldr	x0, [x22]
   17d78:	sub	x0, x0, #0x1
   17d7c:	str	x0, [x22]
   17d80:	cbz	x0, 17e4c <PyFloat_FromString@plt+0x113bc>
   17d84:	ldr	w1, [sp, #68]
   17d88:	ldr	x0, [sp, #80]
   17d8c:	bl	7f90 <PyFloat_FromString@plt+0x1500>
   17d90:	cbnz	w0, 17e98 <PyFloat_FromString@plt+0x11408>
   17d94:	mov	x0, x20
   17d98:	ldp	x19, x20, [sp, #16]
   17d9c:	ldp	x21, x22, [sp, #32]
   17da0:	ldr	x23, [sp, #48]
   17da4:	ldp	x29, x30, [sp], #96
   17da8:	ret
   17dac:	mov	x1, x22
   17db0:	mov	x2, x23
   17db4:	mov	x0, x21
   17db8:	bl	82f8 <PyFloat_FromString@plt+0x1868>
   17dbc:	mov	x22, x0
   17dc0:	cbnz	x0, 17d34 <PyFloat_FromString@plt+0x112a4>
   17dc4:	b	17cfc <PyFloat_FromString@plt+0x1126c>
   17dc8:	mov	x0, x19
   17dcc:	mov	x20, #0x0                   	// #0
   17dd0:	bl	65d0 <_Py_Dealloc@plt>
   17dd4:	ldp	x21, x22, [sp, #32]
   17dd8:	ldr	x23, [sp, #48]
   17ddc:	b	17c7c <PyFloat_FromString@plt+0x111ec>
   17de0:	ldr	x23, [sp, #80]
   17de4:	b	17ca4 <PyFloat_FromString@plt+0x11214>
   17de8:	adrp	x0, 5f000 <PyInit__decimal@@Base+0x44a80>
   17dec:	add	x2, sp, #0x58
   17df0:	mov	x1, #0x0                   	// #0
   17df4:	ldr	x0, [x0, #1808]
   17df8:	bl	6740 <PyContextVar_Get@plt>
   17dfc:	tbnz	w0, #31, 17f14 <PyFloat_FromString@plt+0x11484>
   17e00:	ldr	x0, [sp, #88]
   17e04:	cbz	x0, 17edc <PyFloat_FromString@plt+0x1144c>
   17e08:	stp	x21, x22, [sp, #32]
   17e0c:	str	x0, [sp, #80]
   17e10:	ldr	x1, [x0]
   17e14:	sub	x1, x1, #0x1
   17e18:	str	x1, [x0]
   17e1c:	cbz	x1, 17ecc <PyFloat_FromString@plt+0x1143c>
   17e20:	adrp	x20, 5d000 <PyInit__decimal@@Base+0x42a80>
   17e24:	ldr	x23, [sp, #80]
   17e28:	b	17c28 <PyFloat_FromString@plt+0x11198>
   17e2c:	mov	x1, x19
   17e30:	mov	x2, x23
   17e34:	mov	x0, x21
   17e38:	bl	82f8 <PyFloat_FromString@plt+0x1868>
   17e3c:	mov	x19, x0
   17e40:	cbz	x0, 17d0c <PyFloat_FromString@plt+0x1127c>
   17e44:	ldr	x23, [sp, #80]
   17e48:	b	17cb0 <PyFloat_FromString@plt+0x11220>
   17e4c:	mov	x0, x22
   17e50:	bl	65d0 <_Py_Dealloc@plt>
   17e54:	b	17d84 <PyFloat_FromString@plt+0x112f4>
   17e58:	mov	x0, x19
   17e5c:	bl	65d0 <_Py_Dealloc@plt>
   17e60:	b	17d74 <PyFloat_FromString@plt+0x112e4>
   17e64:	ldr	x0, [x19]
   17e68:	sub	x0, x0, #0x1
   17e6c:	str	x0, [x19]
   17e70:	cbz	x0, 17ec0 <PyFloat_FromString@plt+0x11430>
   17e74:	ldr	x0, [x22]
   17e78:	sub	x0, x0, #0x1
   17e7c:	str	x0, [x22]
   17e80:	cbnz	x0, 17d0c <PyFloat_FromString@plt+0x1127c>
   17e84:	mov	x0, x22
   17e88:	bl	65d0 <_Py_Dealloc@plt>
   17e8c:	ldp	x21, x22, [sp, #32]
   17e90:	ldr	x23, [sp, #48]
   17e94:	b	17c7c <PyFloat_FromString@plt+0x111ec>
   17e98:	ldr	x0, [x20]
   17e9c:	sub	x0, x0, #0x1
   17ea0:	str	x0, [x20]
   17ea4:	cbnz	x0, 17d0c <PyFloat_FromString@plt+0x1127c>
   17ea8:	mov	x0, x20
   17eac:	mov	x20, #0x0                   	// #0
   17eb0:	bl	65d0 <_Py_Dealloc@plt>
   17eb4:	ldp	x21, x22, [sp, #32]
   17eb8:	ldr	x23, [sp, #48]
   17ebc:	b	17c7c <PyFloat_FromString@plt+0x111ec>
   17ec0:	mov	x0, x19
   17ec4:	bl	65d0 <_Py_Dealloc@plt>
   17ec8:	b	17e74 <PyFloat_FromString@plt+0x113e4>
   17ecc:	bl	65d0 <_Py_Dealloc@plt>
   17ed0:	adrp	x20, 5d000 <PyInit__decimal@@Base+0x42a80>
   17ed4:	ldr	x23, [sp, #80]
   17ed8:	b	17c28 <PyFloat_FromString@plt+0x11198>
   17edc:	bl	7320 <PyFloat_FromString@plt+0x890>
   17ee0:	str	x0, [sp, #80]
   17ee4:	cbz	x0, 17d10 <PyFloat_FromString@plt+0x11280>
   17ee8:	stp	x21, x22, [sp, #32]
   17eec:	b	17e10 <PyFloat_FromString@plt+0x11380>
   17ef0:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
   17ef4:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
   17ef8:	mov	x20, #0x0                   	// #0
   17efc:	add	x1, x1, #0x88
   17f00:	ldr	x0, [x0, #3936]
   17f04:	ldr	x0, [x0]
   17f08:	bl	6650 <PyErr_SetString@plt>
   17f0c:	ldr	x23, [sp, #48]
   17f10:	b	17c7c <PyFloat_FromString@plt+0x111ec>
   17f14:	mov	x20, #0x0                   	// #0
   17f18:	ldr	x23, [sp, #48]
   17f1c:	b	17c7c <PyFloat_FromString@plt+0x111ec>
   17f20:	stp	x29, x30, [sp, #-96]!
   17f24:	adrp	x3, 5d000 <PyInit__decimal@@Base+0x42a80>
   17f28:	add	x3, x3, #0x9a0
   17f2c:	mov	x29, sp
   17f30:	stp	x19, x20, [sp, #16]
   17f34:	adrp	x20, 5c000 <PyInit__decimal@@Base+0x41a80>
   17f38:	mov	x19, x0
   17f3c:	ldr	x20, [x20, #4008]
   17f40:	mov	x0, x1
   17f44:	add	x3, x3, #0x4e8
   17f48:	mov	x1, x2
   17f4c:	add	x5, sp, #0x50
   17f50:	adrp	x2, 3c000 <PyInit__decimal@@Base+0x21a80>
   17f54:	add	x4, sp, #0x48
   17f58:	add	x2, x2, #0x168
   17f5c:	str	wzr, [sp, #68]
   17f60:	str	x20, [sp, #80]
   17f64:	bl	6520 <PyArg_ParseTupleAndKeywords@plt>
   17f68:	cbz	w0, 1808c <PyFloat_FromString@plt+0x115fc>
   17f6c:	str	x23, [sp, #48]
   17f70:	ldr	x23, [sp, #80]
   17f74:	cmp	x23, x20
   17f78:	b.eq	18160 <PyFloat_FromString@plt+0x116d0>  // b.none
   17f7c:	ldr	x0, [x23, #8]
   17f80:	adrp	x20, 5d000 <PyInit__decimal@@Base+0x42a80>
   17f84:	add	x1, x20, #0x320
   17f88:	cmp	x0, x1
   17f8c:	b.eq	18004 <PyFloat_FromString@plt+0x11574>  // b.none
   17f90:	bl	69c0 <PyType_IsSubtype@plt>
   17f94:	cbz	w0, 18268 <PyFloat_FromString@plt+0x117d8>
   17f98:	ldr	x23, [sp, #80]
   17f9c:	stp	x21, x22, [sp, #32]
   17fa0:	add	x21, x20, #0x320
   17fa4:	ldr	x0, [x19, #8]
   17fa8:	add	x21, x21, #0x1a0
   17fac:	cmp	x0, x21
   17fb0:	b.eq	1801c <PyFloat_FromString@plt+0x1158c>  // b.none
   17fb4:	mov	x1, x21
   17fb8:	bl	69c0 <PyType_IsSubtype@plt>
   17fbc:	cbnz	w0, 18158 <PyFloat_FromString@plt+0x116c8>
   17fc0:	ldr	x2, [x19, #8]
   17fc4:	ldr	x0, [x2, #168]
   17fc8:	tbnz	w0, #24, 181a4 <PyFloat_FromString@plt+0x11714>
   17fcc:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
   17fd0:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
   17fd4:	ldr	x2, [x2, #24]
   17fd8:	add	x1, x1, #0x8
   17fdc:	ldr	x0, [x0, #3936]
   17fe0:	mov	x20, #0x0                   	// #0
   17fe4:	ldr	x0, [x0]
   17fe8:	bl	6a10 <PyErr_Format@plt>
   17fec:	ldp	x21, x22, [sp, #32]
   17ff0:	ldr	x23, [sp, #48]
   17ff4:	mov	x0, x20
   17ff8:	ldp	x19, x20, [sp, #16]
   17ffc:	ldp	x29, x30, [sp], #96
   18000:	ret
   18004:	ldr	x0, [x19, #8]
   18008:	stp	x21, x22, [sp, #32]
   1800c:	add	x21, x20, #0x320
   18010:	add	x21, x21, #0x1a0
   18014:	cmp	x0, x21
   18018:	b.ne	17fb4 <PyFloat_FromString@plt+0x11524>  // b.any
   1801c:	ldr	x0, [x19]
   18020:	add	x0, x0, #0x1
   18024:	str	x0, [x19]
   18028:	ldr	x22, [sp, #72]
   1802c:	add	x21, x20, #0x320
   18030:	add	x21, x21, #0x1a0
   18034:	ldr	x0, [x22, #8]
   18038:	cmp	x0, x21
   1803c:	b.eq	180a0 <PyFloat_FromString@plt+0x11610>  // b.none
   18040:	mov	x1, x21
   18044:	bl	69c0 <PyType_IsSubtype@plt>
   18048:	cbnz	w0, 180a0 <PyFloat_FromString@plt+0x11610>
   1804c:	ldr	x2, [x22, #8]
   18050:	ldr	x0, [x2, #168]
   18054:	tbnz	w0, #24, 18124 <PyFloat_FromString@plt+0x11694>
   18058:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
   1805c:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
   18060:	ldr	x2, [x2, #24]
   18064:	add	x1, x1, #0x8
   18068:	ldr	x0, [x0, #3936]
   1806c:	ldr	x0, [x0]
   18070:	bl	6a10 <PyErr_Format@plt>
   18074:	ldr	x0, [x19]
   18078:	sub	x0, x0, #0x1
   1807c:	str	x0, [x19]
   18080:	cbz	x0, 18140 <PyFloat_FromString@plt+0x116b0>
   18084:	ldp	x21, x22, [sp, #32]
   18088:	ldr	x23, [sp, #48]
   1808c:	mov	x20, #0x0                   	// #0
   18090:	mov	x0, x20
   18094:	ldp	x19, x20, [sp, #16]
   18098:	ldp	x29, x30, [sp], #96
   1809c:	ret
   180a0:	ldr	x0, [x22]
   180a4:	add	x0, x0, #0x1
   180a8:	str	x0, [x22]
   180ac:	add	x20, x20, #0x320
   180b0:	add	x0, x20, #0x1a0
   180b4:	bl	6c60 <PyFloat_FromString@plt+0x1d0>
   180b8:	mov	x20, x0
   180bc:	cbz	x0, 181dc <PyFloat_FromString@plt+0x1174c>
   180c0:	ldr	x3, [sp, #80]
   180c4:	add	x0, x0, #0x18
   180c8:	add	x4, sp, #0x44
   180cc:	add	x2, x22, #0x18
   180d0:	add	x1, x19, #0x18
   180d4:	add	x3, x3, #0x10
   180d8:	bl	2d3e0 <PyInit__decimal@@Base+0x12e60>
   180dc:	ldr	x0, [x19]
   180e0:	sub	x0, x0, #0x1
   180e4:	str	x0, [x19]
   180e8:	cbz	x0, 181d0 <PyFloat_FromString@plt+0x11740>
   180ec:	ldr	x0, [x22]
   180f0:	sub	x0, x0, #0x1
   180f4:	str	x0, [x22]
   180f8:	cbz	x0, 181c4 <PyFloat_FromString@plt+0x11734>
   180fc:	ldr	w1, [sp, #68]
   18100:	ldr	x0, [sp, #80]
   18104:	bl	7f90 <PyFloat_FromString@plt+0x1500>
   18108:	cbnz	w0, 18210 <PyFloat_FromString@plt+0x11780>
   1810c:	mov	x0, x20
   18110:	ldp	x19, x20, [sp, #16]
   18114:	ldp	x21, x22, [sp, #32]
   18118:	ldr	x23, [sp, #48]
   1811c:	ldp	x29, x30, [sp], #96
   18120:	ret
   18124:	mov	x1, x22
   18128:	mov	x2, x23
   1812c:	mov	x0, x21
   18130:	bl	82f8 <PyFloat_FromString@plt+0x1868>
   18134:	mov	x22, x0
   18138:	cbnz	x0, 180ac <PyFloat_FromString@plt+0x1161c>
   1813c:	b	18074 <PyFloat_FromString@plt+0x115e4>
   18140:	mov	x0, x19
   18144:	mov	x20, #0x0                   	// #0
   18148:	bl	65d0 <_Py_Dealloc@plt>
   1814c:	ldp	x21, x22, [sp, #32]
   18150:	ldr	x23, [sp, #48]
   18154:	b	17ff4 <PyFloat_FromString@plt+0x11564>
   18158:	ldr	x23, [sp, #80]
   1815c:	b	1801c <PyFloat_FromString@plt+0x1158c>
   18160:	adrp	x0, 5f000 <PyInit__decimal@@Base+0x44a80>
   18164:	add	x2, sp, #0x58
   18168:	mov	x1, #0x0                   	// #0
   1816c:	ldr	x0, [x0, #1808]
   18170:	bl	6740 <PyContextVar_Get@plt>
   18174:	tbnz	w0, #31, 1828c <PyFloat_FromString@plt+0x117fc>
   18178:	ldr	x0, [sp, #88]
   1817c:	cbz	x0, 18254 <PyFloat_FromString@plt+0x117c4>
   18180:	stp	x21, x22, [sp, #32]
   18184:	str	x0, [sp, #80]
   18188:	ldr	x1, [x0]
   1818c:	sub	x1, x1, #0x1
   18190:	str	x1, [x0]
   18194:	cbz	x1, 18244 <PyFloat_FromString@plt+0x117b4>
   18198:	adrp	x20, 5d000 <PyInit__decimal@@Base+0x42a80>
   1819c:	ldr	x23, [sp, #80]
   181a0:	b	17fa0 <PyFloat_FromString@plt+0x11510>
   181a4:	mov	x1, x19
   181a8:	mov	x2, x23
   181ac:	mov	x0, x21
   181b0:	bl	82f8 <PyFloat_FromString@plt+0x1868>
   181b4:	mov	x19, x0
   181b8:	cbz	x0, 18084 <PyFloat_FromString@plt+0x115f4>
   181bc:	ldr	x23, [sp, #80]
   181c0:	b	18028 <PyFloat_FromString@plt+0x11598>
   181c4:	mov	x0, x22
   181c8:	bl	65d0 <_Py_Dealloc@plt>
   181cc:	b	180fc <PyFloat_FromString@plt+0x1166c>
   181d0:	mov	x0, x19
   181d4:	bl	65d0 <_Py_Dealloc@plt>
   181d8:	b	180ec <PyFloat_FromString@plt+0x1165c>
   181dc:	ldr	x0, [x19]
   181e0:	sub	x0, x0, #0x1
   181e4:	str	x0, [x19]
   181e8:	cbz	x0, 18238 <PyFloat_FromString@plt+0x117a8>
   181ec:	ldr	x0, [x22]
   181f0:	sub	x0, x0, #0x1
   181f4:	str	x0, [x22]
   181f8:	cbnz	x0, 18084 <PyFloat_FromString@plt+0x115f4>
   181fc:	mov	x0, x22
   18200:	bl	65d0 <_Py_Dealloc@plt>
   18204:	ldp	x21, x22, [sp, #32]
   18208:	ldr	x23, [sp, #48]
   1820c:	b	17ff4 <PyFloat_FromString@plt+0x11564>
   18210:	ldr	x0, [x20]
   18214:	sub	x0, x0, #0x1
   18218:	str	x0, [x20]
   1821c:	cbnz	x0, 18084 <PyFloat_FromString@plt+0x115f4>
   18220:	mov	x0, x20
   18224:	mov	x20, #0x0                   	// #0
   18228:	bl	65d0 <_Py_Dealloc@plt>
   1822c:	ldp	x21, x22, [sp, #32]
   18230:	ldr	x23, [sp, #48]
   18234:	b	17ff4 <PyFloat_FromString@plt+0x11564>
   18238:	mov	x0, x19
   1823c:	bl	65d0 <_Py_Dealloc@plt>
   18240:	b	181ec <PyFloat_FromString@plt+0x1175c>
   18244:	bl	65d0 <_Py_Dealloc@plt>
   18248:	adrp	x20, 5d000 <PyInit__decimal@@Base+0x42a80>
   1824c:	ldr	x23, [sp, #80]
   18250:	b	17fa0 <PyFloat_FromString@plt+0x11510>
   18254:	bl	7320 <PyFloat_FromString@plt+0x890>
   18258:	str	x0, [sp, #80]
   1825c:	cbz	x0, 18088 <PyFloat_FromString@plt+0x115f8>
   18260:	stp	x21, x22, [sp, #32]
   18264:	b	18188 <PyFloat_FromString@plt+0x116f8>
   18268:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
   1826c:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
   18270:	mov	x20, #0x0                   	// #0
   18274:	add	x1, x1, #0x88
   18278:	ldr	x0, [x0, #3936]
   1827c:	ldr	x0, [x0]
   18280:	bl	6650 <PyErr_SetString@plt>
   18284:	ldr	x23, [sp, #48]
   18288:	b	17ff4 <PyFloat_FromString@plt+0x11564>
   1828c:	mov	x20, #0x0                   	// #0
   18290:	ldr	x23, [sp, #48]
   18294:	b	17ff4 <PyFloat_FromString@plt+0x11564>
   18298:	stp	x29, x30, [sp, #-96]!
   1829c:	adrp	x3, 5d000 <PyInit__decimal@@Base+0x42a80>
   182a0:	add	x3, x3, #0x9a0
   182a4:	mov	x29, sp
   182a8:	stp	x19, x20, [sp, #16]
   182ac:	adrp	x20, 5c000 <PyInit__decimal@@Base+0x41a80>
   182b0:	mov	x19, x0
   182b4:	ldr	x20, [x20, #4008]
   182b8:	mov	x0, x1
   182bc:	add	x3, x3, #0x500
   182c0:	mov	x1, x2
   182c4:	add	x5, sp, #0x50
   182c8:	adrp	x2, 3c000 <PyInit__decimal@@Base+0x21a80>
   182cc:	add	x4, sp, #0x48
   182d0:	add	x2, x2, #0x168
   182d4:	str	wzr, [sp, #68]
   182d8:	str	x20, [sp, #80]
   182dc:	bl	6520 <PyArg_ParseTupleAndKeywords@plt>
   182e0:	cbz	w0, 18404 <PyFloat_FromString@plt+0x11974>
   182e4:	str	x23, [sp, #48]
   182e8:	ldr	x23, [sp, #80]
   182ec:	cmp	x23, x20
   182f0:	b.eq	184d8 <PyFloat_FromString@plt+0x11a48>  // b.none
   182f4:	ldr	x0, [x23, #8]
   182f8:	adrp	x20, 5d000 <PyInit__decimal@@Base+0x42a80>
   182fc:	add	x1, x20, #0x320
   18300:	cmp	x0, x1
   18304:	b.eq	1837c <PyFloat_FromString@plt+0x118ec>  // b.none
   18308:	bl	69c0 <PyType_IsSubtype@plt>
   1830c:	cbz	w0, 185e0 <PyFloat_FromString@plt+0x11b50>
   18310:	ldr	x23, [sp, #80]
   18314:	stp	x21, x22, [sp, #32]
   18318:	add	x21, x20, #0x320
   1831c:	ldr	x0, [x19, #8]
   18320:	add	x21, x21, #0x1a0
   18324:	cmp	x0, x21
   18328:	b.eq	18394 <PyFloat_FromString@plt+0x11904>  // b.none
   1832c:	mov	x1, x21
   18330:	bl	69c0 <PyType_IsSubtype@plt>
   18334:	cbnz	w0, 184d0 <PyFloat_FromString@plt+0x11a40>
   18338:	ldr	x2, [x19, #8]
   1833c:	ldr	x0, [x2, #168]
   18340:	tbnz	w0, #24, 1851c <PyFloat_FromString@plt+0x11a8c>
   18344:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
   18348:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
   1834c:	ldr	x2, [x2, #24]
   18350:	add	x1, x1, #0x8
   18354:	ldr	x0, [x0, #3936]
   18358:	mov	x20, #0x0                   	// #0
   1835c:	ldr	x0, [x0]
   18360:	bl	6a10 <PyErr_Format@plt>
   18364:	ldp	x21, x22, [sp, #32]
   18368:	ldr	x23, [sp, #48]
   1836c:	mov	x0, x20
   18370:	ldp	x19, x20, [sp, #16]
   18374:	ldp	x29, x30, [sp], #96
   18378:	ret
   1837c:	ldr	x0, [x19, #8]
   18380:	stp	x21, x22, [sp, #32]
   18384:	add	x21, x20, #0x320
   18388:	add	x21, x21, #0x1a0
   1838c:	cmp	x0, x21
   18390:	b.ne	1832c <PyFloat_FromString@plt+0x1189c>  // b.any
   18394:	ldr	x0, [x19]
   18398:	add	x0, x0, #0x1
   1839c:	str	x0, [x19]
   183a0:	ldr	x22, [sp, #72]
   183a4:	add	x21, x20, #0x320
   183a8:	add	x21, x21, #0x1a0
   183ac:	ldr	x0, [x22, #8]
   183b0:	cmp	x0, x21
   183b4:	b.eq	18418 <PyFloat_FromString@plt+0x11988>  // b.none
   183b8:	mov	x1, x21
   183bc:	bl	69c0 <PyType_IsSubtype@plt>
   183c0:	cbnz	w0, 18418 <PyFloat_FromString@plt+0x11988>
   183c4:	ldr	x2, [x22, #8]
   183c8:	ldr	x0, [x2, #168]
   183cc:	tbnz	w0, #24, 1849c <PyFloat_FromString@plt+0x11a0c>
   183d0:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
   183d4:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
   183d8:	ldr	x2, [x2, #24]
   183dc:	add	x1, x1, #0x8
   183e0:	ldr	x0, [x0, #3936]
   183e4:	ldr	x0, [x0]
   183e8:	bl	6a10 <PyErr_Format@plt>
   183ec:	ldr	x0, [x19]
   183f0:	sub	x0, x0, #0x1
   183f4:	str	x0, [x19]
   183f8:	cbz	x0, 184b8 <PyFloat_FromString@plt+0x11a28>
   183fc:	ldp	x21, x22, [sp, #32]
   18400:	ldr	x23, [sp, #48]
   18404:	mov	x20, #0x0                   	// #0
   18408:	mov	x0, x20
   1840c:	ldp	x19, x20, [sp, #16]
   18410:	ldp	x29, x30, [sp], #96
   18414:	ret
   18418:	ldr	x0, [x22]
   1841c:	add	x0, x0, #0x1
   18420:	str	x0, [x22]
   18424:	add	x20, x20, #0x320
   18428:	add	x0, x20, #0x1a0
   1842c:	bl	6c60 <PyFloat_FromString@plt+0x1d0>
   18430:	mov	x20, x0
   18434:	cbz	x0, 18554 <PyFloat_FromString@plt+0x11ac4>
   18438:	ldr	x3, [sp, #80]
   1843c:	add	x0, x0, #0x18
   18440:	add	x4, sp, #0x44
   18444:	add	x2, x22, #0x18
   18448:	add	x1, x19, #0x18
   1844c:	add	x3, x3, #0x10
   18450:	bl	2df78 <PyInit__decimal@@Base+0x139f8>
   18454:	ldr	x0, [x19]
   18458:	sub	x0, x0, #0x1
   1845c:	str	x0, [x19]
   18460:	cbz	x0, 18548 <PyFloat_FromString@plt+0x11ab8>
   18464:	ldr	x0, [x22]
   18468:	sub	x0, x0, #0x1
   1846c:	str	x0, [x22]
   18470:	cbz	x0, 1853c <PyFloat_FromString@plt+0x11aac>
   18474:	ldr	w1, [sp, #68]
   18478:	ldr	x0, [sp, #80]
   1847c:	bl	7f90 <PyFloat_FromString@plt+0x1500>
   18480:	cbnz	w0, 18588 <PyFloat_FromString@plt+0x11af8>
   18484:	mov	x0, x20
   18488:	ldp	x19, x20, [sp, #16]
   1848c:	ldp	x21, x22, [sp, #32]
   18490:	ldr	x23, [sp, #48]
   18494:	ldp	x29, x30, [sp], #96
   18498:	ret
   1849c:	mov	x1, x22
   184a0:	mov	x2, x23
   184a4:	mov	x0, x21
   184a8:	bl	82f8 <PyFloat_FromString@plt+0x1868>
   184ac:	mov	x22, x0
   184b0:	cbnz	x0, 18424 <PyFloat_FromString@plt+0x11994>
   184b4:	b	183ec <PyFloat_FromString@plt+0x1195c>
   184b8:	mov	x0, x19
   184bc:	mov	x20, #0x0                   	// #0
   184c0:	bl	65d0 <_Py_Dealloc@plt>
   184c4:	ldp	x21, x22, [sp, #32]
   184c8:	ldr	x23, [sp, #48]
   184cc:	b	1836c <PyFloat_FromString@plt+0x118dc>
   184d0:	ldr	x23, [sp, #80]
   184d4:	b	18394 <PyFloat_FromString@plt+0x11904>
   184d8:	adrp	x0, 5f000 <PyInit__decimal@@Base+0x44a80>
   184dc:	add	x2, sp, #0x58
   184e0:	mov	x1, #0x0                   	// #0
   184e4:	ldr	x0, [x0, #1808]
   184e8:	bl	6740 <PyContextVar_Get@plt>
   184ec:	tbnz	w0, #31, 18604 <PyFloat_FromString@plt+0x11b74>
   184f0:	ldr	x0, [sp, #88]
   184f4:	cbz	x0, 185cc <PyFloat_FromString@plt+0x11b3c>
   184f8:	stp	x21, x22, [sp, #32]
   184fc:	str	x0, [sp, #80]
   18500:	ldr	x1, [x0]
   18504:	sub	x1, x1, #0x1
   18508:	str	x1, [x0]
   1850c:	cbz	x1, 185bc <PyFloat_FromString@plt+0x11b2c>
   18510:	adrp	x20, 5d000 <PyInit__decimal@@Base+0x42a80>
   18514:	ldr	x23, [sp, #80]
   18518:	b	18318 <PyFloat_FromString@plt+0x11888>
   1851c:	mov	x1, x19
   18520:	mov	x2, x23
   18524:	mov	x0, x21
   18528:	bl	82f8 <PyFloat_FromString@plt+0x1868>
   1852c:	mov	x19, x0
   18530:	cbz	x0, 183fc <PyFloat_FromString@plt+0x1196c>
   18534:	ldr	x23, [sp, #80]
   18538:	b	183a0 <PyFloat_FromString@plt+0x11910>
   1853c:	mov	x0, x22
   18540:	bl	65d0 <_Py_Dealloc@plt>
   18544:	b	18474 <PyFloat_FromString@plt+0x119e4>
   18548:	mov	x0, x19
   1854c:	bl	65d0 <_Py_Dealloc@plt>
   18550:	b	18464 <PyFloat_FromString@plt+0x119d4>
   18554:	ldr	x0, [x19]
   18558:	sub	x0, x0, #0x1
   1855c:	str	x0, [x19]
   18560:	cbz	x0, 185b0 <PyFloat_FromString@plt+0x11b20>
   18564:	ldr	x0, [x22]
   18568:	sub	x0, x0, #0x1
   1856c:	str	x0, [x22]
   18570:	cbnz	x0, 183fc <PyFloat_FromString@plt+0x1196c>
   18574:	mov	x0, x22
   18578:	bl	65d0 <_Py_Dealloc@plt>
   1857c:	ldp	x21, x22, [sp, #32]
   18580:	ldr	x23, [sp, #48]
   18584:	b	1836c <PyFloat_FromString@plt+0x118dc>
   18588:	ldr	x0, [x20]
   1858c:	sub	x0, x0, #0x1
   18590:	str	x0, [x20]
   18594:	cbnz	x0, 183fc <PyFloat_FromString@plt+0x1196c>
   18598:	mov	x0, x20
   1859c:	mov	x20, #0x0                   	// #0
   185a0:	bl	65d0 <_Py_Dealloc@plt>
   185a4:	ldp	x21, x22, [sp, #32]
   185a8:	ldr	x23, [sp, #48]
   185ac:	b	1836c <PyFloat_FromString@plt+0x118dc>
   185b0:	mov	x0, x19
   185b4:	bl	65d0 <_Py_Dealloc@plt>
   185b8:	b	18564 <PyFloat_FromString@plt+0x11ad4>
   185bc:	bl	65d0 <_Py_Dealloc@plt>
   185c0:	adrp	x20, 5d000 <PyInit__decimal@@Base+0x42a80>
   185c4:	ldr	x23, [sp, #80]
   185c8:	b	18318 <PyFloat_FromString@plt+0x11888>
   185cc:	bl	7320 <PyFloat_FromString@plt+0x890>
   185d0:	str	x0, [sp, #80]
   185d4:	cbz	x0, 18400 <PyFloat_FromString@plt+0x11970>
   185d8:	stp	x21, x22, [sp, #32]
   185dc:	b	18500 <PyFloat_FromString@plt+0x11a70>
   185e0:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
   185e4:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
   185e8:	mov	x20, #0x0                   	// #0
   185ec:	add	x1, x1, #0x88
   185f0:	ldr	x0, [x0, #3936]
   185f4:	ldr	x0, [x0]
   185f8:	bl	6650 <PyErr_SetString@plt>
   185fc:	ldr	x23, [sp, #48]
   18600:	b	1836c <PyFloat_FromString@plt+0x118dc>
   18604:	mov	x20, #0x0                   	// #0
   18608:	ldr	x23, [sp, #48]
   1860c:	b	1836c <PyFloat_FromString@plt+0x118dc>
   18610:	stp	x29, x30, [sp, #-96]!
   18614:	adrp	x3, 5d000 <PyInit__decimal@@Base+0x42a80>
   18618:	add	x3, x3, #0x9a0
   1861c:	mov	x29, sp
   18620:	stp	x19, x20, [sp, #16]
   18624:	adrp	x20, 5c000 <PyInit__decimal@@Base+0x41a80>
   18628:	mov	x19, x0
   1862c:	ldr	x20, [x20, #4008]
   18630:	mov	x0, x1
   18634:	add	x3, x3, #0x518
   18638:	mov	x1, x2
   1863c:	add	x5, sp, #0x50
   18640:	adrp	x2, 3c000 <PyInit__decimal@@Base+0x21a80>
   18644:	add	x4, sp, #0x48
   18648:	add	x2, x2, #0x168
   1864c:	str	wzr, [sp, #68]
   18650:	str	x20, [sp, #80]
   18654:	bl	6520 <PyArg_ParseTupleAndKeywords@plt>
   18658:	cbz	w0, 1877c <PyFloat_FromString@plt+0x11cec>
   1865c:	str	x23, [sp, #48]
   18660:	ldr	x23, [sp, #80]
   18664:	cmp	x23, x20
   18668:	b.eq	18850 <PyFloat_FromString@plt+0x11dc0>  // b.none
   1866c:	ldr	x0, [x23, #8]
   18670:	adrp	x20, 5d000 <PyInit__decimal@@Base+0x42a80>
   18674:	add	x1, x20, #0x320
   18678:	cmp	x0, x1
   1867c:	b.eq	186f4 <PyFloat_FromString@plt+0x11c64>  // b.none
   18680:	bl	69c0 <PyType_IsSubtype@plt>
   18684:	cbz	w0, 18958 <PyFloat_FromString@plt+0x11ec8>
   18688:	ldr	x23, [sp, #80]
   1868c:	stp	x21, x22, [sp, #32]
   18690:	add	x21, x20, #0x320
   18694:	ldr	x0, [x19, #8]
   18698:	add	x21, x21, #0x1a0
   1869c:	cmp	x0, x21
   186a0:	b.eq	1870c <PyFloat_FromString@plt+0x11c7c>  // b.none
   186a4:	mov	x1, x21
   186a8:	bl	69c0 <PyType_IsSubtype@plt>
   186ac:	cbnz	w0, 18848 <PyFloat_FromString@plt+0x11db8>
   186b0:	ldr	x2, [x19, #8]
   186b4:	ldr	x0, [x2, #168]
   186b8:	tbnz	w0, #24, 18894 <PyFloat_FromString@plt+0x11e04>
   186bc:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
   186c0:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
   186c4:	ldr	x2, [x2, #24]
   186c8:	add	x1, x1, #0x8
   186cc:	ldr	x0, [x0, #3936]
   186d0:	mov	x20, #0x0                   	// #0
   186d4:	ldr	x0, [x0]
   186d8:	bl	6a10 <PyErr_Format@plt>
   186dc:	ldp	x21, x22, [sp, #32]
   186e0:	ldr	x23, [sp, #48]
   186e4:	mov	x0, x20
   186e8:	ldp	x19, x20, [sp, #16]
   186ec:	ldp	x29, x30, [sp], #96
   186f0:	ret
   186f4:	ldr	x0, [x19, #8]
   186f8:	stp	x21, x22, [sp, #32]
   186fc:	add	x21, x20, #0x320
   18700:	add	x21, x21, #0x1a0
   18704:	cmp	x0, x21
   18708:	b.ne	186a4 <PyFloat_FromString@plt+0x11c14>  // b.any
   1870c:	ldr	x0, [x19]
   18710:	add	x0, x0, #0x1
   18714:	str	x0, [x19]
   18718:	ldr	x22, [sp, #72]
   1871c:	add	x21, x20, #0x320
   18720:	add	x21, x21, #0x1a0
   18724:	ldr	x0, [x22, #8]
   18728:	cmp	x0, x21
   1872c:	b.eq	18790 <PyFloat_FromString@plt+0x11d00>  // b.none
   18730:	mov	x1, x21
   18734:	bl	69c0 <PyType_IsSubtype@plt>
   18738:	cbnz	w0, 18790 <PyFloat_FromString@plt+0x11d00>
   1873c:	ldr	x2, [x22, #8]
   18740:	ldr	x0, [x2, #168]
   18744:	tbnz	w0, #24, 18814 <PyFloat_FromString@plt+0x11d84>
   18748:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
   1874c:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
   18750:	ldr	x2, [x2, #24]
   18754:	add	x1, x1, #0x8
   18758:	ldr	x0, [x0, #3936]
   1875c:	ldr	x0, [x0]
   18760:	bl	6a10 <PyErr_Format@plt>
   18764:	ldr	x0, [x19]
   18768:	sub	x0, x0, #0x1
   1876c:	str	x0, [x19]
   18770:	cbz	x0, 18830 <PyFloat_FromString@plt+0x11da0>
   18774:	ldp	x21, x22, [sp, #32]
   18778:	ldr	x23, [sp, #48]
   1877c:	mov	x20, #0x0                   	// #0
   18780:	mov	x0, x20
   18784:	ldp	x19, x20, [sp, #16]
   18788:	ldp	x29, x30, [sp], #96
   1878c:	ret
   18790:	ldr	x0, [x22]
   18794:	add	x0, x0, #0x1
   18798:	str	x0, [x22]
   1879c:	add	x20, x20, #0x320
   187a0:	add	x0, x20, #0x1a0
   187a4:	bl	6c60 <PyFloat_FromString@plt+0x1d0>
   187a8:	mov	x20, x0
   187ac:	cbz	x0, 188cc <PyFloat_FromString@plt+0x11e3c>
   187b0:	ldr	x3, [sp, #80]
   187b4:	add	x0, x0, #0x18
   187b8:	add	x4, sp, #0x44
   187bc:	add	x2, x22, #0x18
   187c0:	add	x1, x19, #0x18
   187c4:	add	x3, x3, #0x10
   187c8:	bl	331f0 <PyInit__decimal@@Base+0x18c70>
   187cc:	ldr	x0, [x19]
   187d0:	sub	x0, x0, #0x1
   187d4:	str	x0, [x19]
   187d8:	cbz	x0, 188c0 <PyFloat_FromString@plt+0x11e30>
   187dc:	ldr	x0, [x22]
   187e0:	sub	x0, x0, #0x1
   187e4:	str	x0, [x22]
   187e8:	cbz	x0, 188b4 <PyFloat_FromString@plt+0x11e24>
   187ec:	ldr	w1, [sp, #68]
   187f0:	ldr	x0, [sp, #80]
   187f4:	bl	7f90 <PyFloat_FromString@plt+0x1500>
   187f8:	cbnz	w0, 18900 <PyFloat_FromString@plt+0x11e70>
   187fc:	mov	x0, x20
   18800:	ldp	x19, x20, [sp, #16]
   18804:	ldp	x21, x22, [sp, #32]
   18808:	ldr	x23, [sp, #48]
   1880c:	ldp	x29, x30, [sp], #96
   18810:	ret
   18814:	mov	x1, x22
   18818:	mov	x2, x23
   1881c:	mov	x0, x21
   18820:	bl	82f8 <PyFloat_FromString@plt+0x1868>
   18824:	mov	x22, x0
   18828:	cbnz	x0, 1879c <PyFloat_FromString@plt+0x11d0c>
   1882c:	b	18764 <PyFloat_FromString@plt+0x11cd4>
   18830:	mov	x0, x19
   18834:	mov	x20, #0x0                   	// #0
   18838:	bl	65d0 <_Py_Dealloc@plt>
   1883c:	ldp	x21, x22, [sp, #32]
   18840:	ldr	x23, [sp, #48]
   18844:	b	186e4 <PyFloat_FromString@plt+0x11c54>
   18848:	ldr	x23, [sp, #80]
   1884c:	b	1870c <PyFloat_FromString@plt+0x11c7c>
   18850:	adrp	x0, 5f000 <PyInit__decimal@@Base+0x44a80>
   18854:	add	x2, sp, #0x58
   18858:	mov	x1, #0x0                   	// #0
   1885c:	ldr	x0, [x0, #1808]
   18860:	bl	6740 <PyContextVar_Get@plt>
   18864:	tbnz	w0, #31, 1897c <PyFloat_FromString@plt+0x11eec>
   18868:	ldr	x0, [sp, #88]
   1886c:	cbz	x0, 18944 <PyFloat_FromString@plt+0x11eb4>
   18870:	stp	x21, x22, [sp, #32]
   18874:	str	x0, [sp, #80]
   18878:	ldr	x1, [x0]
   1887c:	sub	x1, x1, #0x1
   18880:	str	x1, [x0]
   18884:	cbz	x1, 18934 <PyFloat_FromString@plt+0x11ea4>
   18888:	adrp	x20, 5d000 <PyInit__decimal@@Base+0x42a80>
   1888c:	ldr	x23, [sp, #80]
   18890:	b	18690 <PyFloat_FromString@plt+0x11c00>
   18894:	mov	x1, x19
   18898:	mov	x2, x23
   1889c:	mov	x0, x21
   188a0:	bl	82f8 <PyFloat_FromString@plt+0x1868>
   188a4:	mov	x19, x0
   188a8:	cbz	x0, 18774 <PyFloat_FromString@plt+0x11ce4>
   188ac:	ldr	x23, [sp, #80]
   188b0:	b	18718 <PyFloat_FromString@plt+0x11c88>
   188b4:	mov	x0, x22
   188b8:	bl	65d0 <_Py_Dealloc@plt>
   188bc:	b	187ec <PyFloat_FromString@plt+0x11d5c>
   188c0:	mov	x0, x19
   188c4:	bl	65d0 <_Py_Dealloc@plt>
   188c8:	b	187dc <PyFloat_FromString@plt+0x11d4c>
   188cc:	ldr	x0, [x19]
   188d0:	sub	x0, x0, #0x1
   188d4:	str	x0, [x19]
   188d8:	cbz	x0, 18928 <PyFloat_FromString@plt+0x11e98>
   188dc:	ldr	x0, [x22]
   188e0:	sub	x0, x0, #0x1
   188e4:	str	x0, [x22]
   188e8:	cbnz	x0, 18774 <PyFloat_FromString@plt+0x11ce4>
   188ec:	mov	x0, x22
   188f0:	bl	65d0 <_Py_Dealloc@plt>
   188f4:	ldp	x21, x22, [sp, #32]
   188f8:	ldr	x23, [sp, #48]
   188fc:	b	186e4 <PyFloat_FromString@plt+0x11c54>
   18900:	ldr	x0, [x20]
   18904:	sub	x0, x0, #0x1
   18908:	str	x0, [x20]
   1890c:	cbnz	x0, 18774 <PyFloat_FromString@plt+0x11ce4>
   18910:	mov	x0, x20
   18914:	mov	x20, #0x0                   	// #0
   18918:	bl	65d0 <_Py_Dealloc@plt>
   1891c:	ldp	x21, x22, [sp, #32]
   18920:	ldr	x23, [sp, #48]
   18924:	b	186e4 <PyFloat_FromString@plt+0x11c54>
   18928:	mov	x0, x19
   1892c:	bl	65d0 <_Py_Dealloc@plt>
   18930:	b	188dc <PyFloat_FromString@plt+0x11e4c>
   18934:	bl	65d0 <_Py_Dealloc@plt>
   18938:	adrp	x20, 5d000 <PyInit__decimal@@Base+0x42a80>
   1893c:	ldr	x23, [sp, #80]
   18940:	b	18690 <PyFloat_FromString@plt+0x11c00>
   18944:	bl	7320 <PyFloat_FromString@plt+0x890>
   18948:	str	x0, [sp, #80]
   1894c:	cbz	x0, 18778 <PyFloat_FromString@plt+0x11ce8>
   18950:	stp	x21, x22, [sp, #32]
   18954:	b	18878 <PyFloat_FromString@plt+0x11de8>
   18958:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
   1895c:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
   18960:	mov	x20, #0x0                   	// #0
   18964:	add	x1, x1, #0x88
   18968:	ldr	x0, [x0, #3936]
   1896c:	ldr	x0, [x0]
   18970:	bl	6650 <PyErr_SetString@plt>
   18974:	ldr	x23, [sp, #48]
   18978:	b	186e4 <PyFloat_FromString@plt+0x11c54>
   1897c:	mov	x20, #0x0                   	// #0
   18980:	ldr	x23, [sp, #48]
   18984:	b	186e4 <PyFloat_FromString@plt+0x11c54>
   18988:	stp	x29, x30, [sp, #-96]!
   1898c:	adrp	x3, 5d000 <PyInit__decimal@@Base+0x42a80>
   18990:	add	x3, x3, #0x9a0
   18994:	mov	x29, sp
   18998:	stp	x19, x20, [sp, #16]
   1899c:	adrp	x20, 5c000 <PyInit__decimal@@Base+0x41a80>
   189a0:	mov	x19, x0
   189a4:	ldr	x20, [x20, #4008]
   189a8:	mov	x0, x1
   189ac:	add	x3, x3, #0x530
   189b0:	mov	x1, x2
   189b4:	add	x5, sp, #0x50
   189b8:	adrp	x2, 3c000 <PyInit__decimal@@Base+0x21a80>
   189bc:	add	x4, sp, #0x48
   189c0:	add	x2, x2, #0x168
   189c4:	str	wzr, [sp, #68]
   189c8:	str	x20, [sp, #80]
   189cc:	bl	6520 <PyArg_ParseTupleAndKeywords@plt>
   189d0:	cbz	w0, 18af4 <PyFloat_FromString@plt+0x12064>
   189d4:	str	x23, [sp, #48]
   189d8:	ldr	x23, [sp, #80]
   189dc:	cmp	x23, x20
   189e0:	b.eq	18bc8 <PyFloat_FromString@plt+0x12138>  // b.none
   189e4:	ldr	x0, [x23, #8]
   189e8:	adrp	x20, 5d000 <PyInit__decimal@@Base+0x42a80>
   189ec:	add	x1, x20, #0x320
   189f0:	cmp	x0, x1
   189f4:	b.eq	18a6c <PyFloat_FromString@plt+0x11fdc>  // b.none
   189f8:	bl	69c0 <PyType_IsSubtype@plt>
   189fc:	cbz	w0, 18cd0 <PyFloat_FromString@plt+0x12240>
   18a00:	ldr	x23, [sp, #80]
   18a04:	stp	x21, x22, [sp, #32]
   18a08:	add	x21, x20, #0x320
   18a0c:	ldr	x0, [x19, #8]
   18a10:	add	x21, x21, #0x1a0
   18a14:	cmp	x0, x21
   18a18:	b.eq	18a84 <PyFloat_FromString@plt+0x11ff4>  // b.none
   18a1c:	mov	x1, x21
   18a20:	bl	69c0 <PyType_IsSubtype@plt>
   18a24:	cbnz	w0, 18bc0 <PyFloat_FromString@plt+0x12130>
   18a28:	ldr	x2, [x19, #8]
   18a2c:	ldr	x0, [x2, #168]
   18a30:	tbnz	w0, #24, 18c0c <PyFloat_FromString@plt+0x1217c>
   18a34:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
   18a38:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
   18a3c:	ldr	x2, [x2, #24]
   18a40:	add	x1, x1, #0x8
   18a44:	ldr	x0, [x0, #3936]
   18a48:	mov	x20, #0x0                   	// #0
   18a4c:	ldr	x0, [x0]
   18a50:	bl	6a10 <PyErr_Format@plt>
   18a54:	ldp	x21, x22, [sp, #32]
   18a58:	ldr	x23, [sp, #48]
   18a5c:	mov	x0, x20
   18a60:	ldp	x19, x20, [sp, #16]
   18a64:	ldp	x29, x30, [sp], #96
   18a68:	ret
   18a6c:	ldr	x0, [x19, #8]
   18a70:	stp	x21, x22, [sp, #32]
   18a74:	add	x21, x20, #0x320
   18a78:	add	x21, x21, #0x1a0
   18a7c:	cmp	x0, x21
   18a80:	b.ne	18a1c <PyFloat_FromString@plt+0x11f8c>  // b.any
   18a84:	ldr	x0, [x19]
   18a88:	add	x0, x0, #0x1
   18a8c:	str	x0, [x19]
   18a90:	ldr	x22, [sp, #72]
   18a94:	add	x21, x20, #0x320
   18a98:	add	x21, x21, #0x1a0
   18a9c:	ldr	x0, [x22, #8]
   18aa0:	cmp	x0, x21
   18aa4:	b.eq	18b08 <PyFloat_FromString@plt+0x12078>  // b.none
   18aa8:	mov	x1, x21
   18aac:	bl	69c0 <PyType_IsSubtype@plt>
   18ab0:	cbnz	w0, 18b08 <PyFloat_FromString@plt+0x12078>
   18ab4:	ldr	x2, [x22, #8]
   18ab8:	ldr	x0, [x2, #168]
   18abc:	tbnz	w0, #24, 18b8c <PyFloat_FromString@plt+0x120fc>
   18ac0:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
   18ac4:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
   18ac8:	ldr	x2, [x2, #24]
   18acc:	add	x1, x1, #0x8
   18ad0:	ldr	x0, [x0, #3936]
   18ad4:	ldr	x0, [x0]
   18ad8:	bl	6a10 <PyErr_Format@plt>
   18adc:	ldr	x0, [x19]
   18ae0:	sub	x0, x0, #0x1
   18ae4:	str	x0, [x19]
   18ae8:	cbz	x0, 18ba8 <PyFloat_FromString@plt+0x12118>
   18aec:	ldp	x21, x22, [sp, #32]
   18af0:	ldr	x23, [sp, #48]
   18af4:	mov	x20, #0x0                   	// #0
   18af8:	mov	x0, x20
   18afc:	ldp	x19, x20, [sp, #16]
   18b00:	ldp	x29, x30, [sp], #96
   18b04:	ret
   18b08:	ldr	x0, [x22]
   18b0c:	add	x0, x0, #0x1
   18b10:	str	x0, [x22]
   18b14:	add	x20, x20, #0x320
   18b18:	add	x0, x20, #0x1a0
   18b1c:	bl	6c60 <PyFloat_FromString@plt+0x1d0>
   18b20:	mov	x20, x0
   18b24:	cbz	x0, 18c44 <PyFloat_FromString@plt+0x121b4>
   18b28:	ldr	x3, [sp, #80]
   18b2c:	add	x0, x0, #0x18
   18b30:	add	x4, sp, #0x44
   18b34:	add	x2, x22, #0x18
   18b38:	add	x1, x19, #0x18
   18b3c:	add	x3, x3, #0x10
   18b40:	bl	2c9b0 <PyInit__decimal@@Base+0x12430>
   18b44:	ldr	x0, [x19]
   18b48:	sub	x0, x0, #0x1
   18b4c:	str	x0, [x19]
   18b50:	cbz	x0, 18c38 <PyFloat_FromString@plt+0x121a8>
   18b54:	ldr	x0, [x22]
   18b58:	sub	x0, x0, #0x1
   18b5c:	str	x0, [x22]
   18b60:	cbz	x0, 18c2c <PyFloat_FromString@plt+0x1219c>
   18b64:	ldr	w1, [sp, #68]
   18b68:	ldr	x0, [sp, #80]
   18b6c:	bl	7f90 <PyFloat_FromString@plt+0x1500>
   18b70:	cbnz	w0, 18c78 <PyFloat_FromString@plt+0x121e8>
   18b74:	mov	x0, x20
   18b78:	ldp	x19, x20, [sp, #16]
   18b7c:	ldp	x21, x22, [sp, #32]
   18b80:	ldr	x23, [sp, #48]
   18b84:	ldp	x29, x30, [sp], #96
   18b88:	ret
   18b8c:	mov	x1, x22
   18b90:	mov	x2, x23
   18b94:	mov	x0, x21
   18b98:	bl	82f8 <PyFloat_FromString@plt+0x1868>
   18b9c:	mov	x22, x0
   18ba0:	cbnz	x0, 18b14 <PyFloat_FromString@plt+0x12084>
   18ba4:	b	18adc <PyFloat_FromString@plt+0x1204c>
   18ba8:	mov	x0, x19
   18bac:	mov	x20, #0x0                   	// #0
   18bb0:	bl	65d0 <_Py_Dealloc@plt>
   18bb4:	ldp	x21, x22, [sp, #32]
   18bb8:	ldr	x23, [sp, #48]
   18bbc:	b	18a5c <PyFloat_FromString@plt+0x11fcc>
   18bc0:	ldr	x23, [sp, #80]
   18bc4:	b	18a84 <PyFloat_FromString@plt+0x11ff4>
   18bc8:	adrp	x0, 5f000 <PyInit__decimal@@Base+0x44a80>
   18bcc:	add	x2, sp, #0x58
   18bd0:	mov	x1, #0x0                   	// #0
   18bd4:	ldr	x0, [x0, #1808]
   18bd8:	bl	6740 <PyContextVar_Get@plt>
   18bdc:	tbnz	w0, #31, 18cf4 <PyFloat_FromString@plt+0x12264>
   18be0:	ldr	x0, [sp, #88]
   18be4:	cbz	x0, 18cbc <PyFloat_FromString@plt+0x1222c>
   18be8:	stp	x21, x22, [sp, #32]
   18bec:	str	x0, [sp, #80]
   18bf0:	ldr	x1, [x0]
   18bf4:	sub	x1, x1, #0x1
   18bf8:	str	x1, [x0]
   18bfc:	cbz	x1, 18cac <PyFloat_FromString@plt+0x1221c>
   18c00:	adrp	x20, 5d000 <PyInit__decimal@@Base+0x42a80>
   18c04:	ldr	x23, [sp, #80]
   18c08:	b	18a08 <PyFloat_FromString@plt+0x11f78>
   18c0c:	mov	x1, x19
   18c10:	mov	x2, x23
   18c14:	mov	x0, x21
   18c18:	bl	82f8 <PyFloat_FromString@plt+0x1868>
   18c1c:	mov	x19, x0
   18c20:	cbz	x0, 18aec <PyFloat_FromString@plt+0x1205c>
   18c24:	ldr	x23, [sp, #80]
   18c28:	b	18a90 <PyFloat_FromString@plt+0x12000>
   18c2c:	mov	x0, x22
   18c30:	bl	65d0 <_Py_Dealloc@plt>
   18c34:	b	18b64 <PyFloat_FromString@plt+0x120d4>
   18c38:	mov	x0, x19
   18c3c:	bl	65d0 <_Py_Dealloc@plt>
   18c40:	b	18b54 <PyFloat_FromString@plt+0x120c4>
   18c44:	ldr	x0, [x19]
   18c48:	sub	x0, x0, #0x1
   18c4c:	str	x0, [x19]
   18c50:	cbz	x0, 18ca0 <PyFloat_FromString@plt+0x12210>
   18c54:	ldr	x0, [x22]
   18c58:	sub	x0, x0, #0x1
   18c5c:	str	x0, [x22]
   18c60:	cbnz	x0, 18aec <PyFloat_FromString@plt+0x1205c>
   18c64:	mov	x0, x22
   18c68:	bl	65d0 <_Py_Dealloc@plt>
   18c6c:	ldp	x21, x22, [sp, #32]
   18c70:	ldr	x23, [sp, #48]
   18c74:	b	18a5c <PyFloat_FromString@plt+0x11fcc>
   18c78:	ldr	x0, [x20]
   18c7c:	sub	x0, x0, #0x1
   18c80:	str	x0, [x20]
   18c84:	cbnz	x0, 18aec <PyFloat_FromString@plt+0x1205c>
   18c88:	mov	x0, x20
   18c8c:	mov	x20, #0x0                   	// #0
   18c90:	bl	65d0 <_Py_Dealloc@plt>
   18c94:	ldp	x21, x22, [sp, #32]
   18c98:	ldr	x23, [sp, #48]
   18c9c:	b	18a5c <PyFloat_FromString@plt+0x11fcc>
   18ca0:	mov	x0, x19
   18ca4:	bl	65d0 <_Py_Dealloc@plt>
   18ca8:	b	18c54 <PyFloat_FromString@plt+0x121c4>
   18cac:	bl	65d0 <_Py_Dealloc@plt>
   18cb0:	adrp	x20, 5d000 <PyInit__decimal@@Base+0x42a80>
   18cb4:	ldr	x23, [sp, #80]
   18cb8:	b	18a08 <PyFloat_FromString@plt+0x11f78>
   18cbc:	bl	7320 <PyFloat_FromString@plt+0x890>
   18cc0:	str	x0, [sp, #80]
   18cc4:	cbz	x0, 18af0 <PyFloat_FromString@plt+0x12060>
   18cc8:	stp	x21, x22, [sp, #32]
   18ccc:	b	18bf0 <PyFloat_FromString@plt+0x12160>
   18cd0:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
   18cd4:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
   18cd8:	mov	x20, #0x0                   	// #0
   18cdc:	add	x1, x1, #0x88
   18ce0:	ldr	x0, [x0, #3936]
   18ce4:	ldr	x0, [x0]
   18ce8:	bl	6650 <PyErr_SetString@plt>
   18cec:	ldr	x23, [sp, #48]
   18cf0:	b	18a5c <PyFloat_FromString@plt+0x11fcc>
   18cf4:	mov	x20, #0x0                   	// #0
   18cf8:	ldr	x23, [sp, #48]
   18cfc:	b	18a5c <PyFloat_FromString@plt+0x11fcc>
   18d00:	stp	x29, x30, [sp, #-96]!
   18d04:	adrp	x3, 5d000 <PyInit__decimal@@Base+0x42a80>
   18d08:	add	x3, x3, #0x9a0
   18d0c:	mov	x29, sp
   18d10:	stp	x19, x20, [sp, #16]
   18d14:	adrp	x20, 5c000 <PyInit__decimal@@Base+0x41a80>
   18d18:	mov	x19, x0
   18d1c:	ldr	x20, [x20, #4008]
   18d20:	mov	x0, x1
   18d24:	add	x3, x3, #0x548
   18d28:	mov	x1, x2
   18d2c:	add	x5, sp, #0x50
   18d30:	adrp	x2, 3c000 <PyInit__decimal@@Base+0x21a80>
   18d34:	add	x4, sp, #0x48
   18d38:	add	x2, x2, #0x168
   18d3c:	str	wzr, [sp, #68]
   18d40:	str	x20, [sp, #80]
   18d44:	bl	6520 <PyArg_ParseTupleAndKeywords@plt>
   18d48:	cbz	w0, 18e6c <PyFloat_FromString@plt+0x123dc>
   18d4c:	str	x23, [sp, #48]
   18d50:	ldr	x23, [sp, #80]
   18d54:	cmp	x23, x20
   18d58:	b.eq	18f40 <PyFloat_FromString@plt+0x124b0>  // b.none
   18d5c:	ldr	x0, [x23, #8]
   18d60:	adrp	x20, 5d000 <PyInit__decimal@@Base+0x42a80>
   18d64:	add	x1, x20, #0x320
   18d68:	cmp	x0, x1
   18d6c:	b.eq	18de4 <PyFloat_FromString@plt+0x12354>  // b.none
   18d70:	bl	69c0 <PyType_IsSubtype@plt>
   18d74:	cbz	w0, 19048 <PyFloat_FromString@plt+0x125b8>
   18d78:	ldr	x23, [sp, #80]
   18d7c:	stp	x21, x22, [sp, #32]
   18d80:	add	x21, x20, #0x320
   18d84:	ldr	x0, [x19, #8]
   18d88:	add	x21, x21, #0x1a0
   18d8c:	cmp	x0, x21
   18d90:	b.eq	18dfc <PyFloat_FromString@plt+0x1236c>  // b.none
   18d94:	mov	x1, x21
   18d98:	bl	69c0 <PyType_IsSubtype@plt>
   18d9c:	cbnz	w0, 18f38 <PyFloat_FromString@plt+0x124a8>
   18da0:	ldr	x2, [x19, #8]
   18da4:	ldr	x0, [x2, #168]
   18da8:	tbnz	w0, #24, 18f84 <PyFloat_FromString@plt+0x124f4>
   18dac:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
   18db0:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
   18db4:	ldr	x2, [x2, #24]
   18db8:	add	x1, x1, #0x8
   18dbc:	ldr	x0, [x0, #3936]
   18dc0:	mov	x20, #0x0                   	// #0
   18dc4:	ldr	x0, [x0]
   18dc8:	bl	6a10 <PyErr_Format@plt>
   18dcc:	ldp	x21, x22, [sp, #32]
   18dd0:	ldr	x23, [sp, #48]
   18dd4:	mov	x0, x20
   18dd8:	ldp	x19, x20, [sp, #16]
   18ddc:	ldp	x29, x30, [sp], #96
   18de0:	ret
   18de4:	ldr	x0, [x19, #8]
   18de8:	stp	x21, x22, [sp, #32]
   18dec:	add	x21, x20, #0x320
   18df0:	add	x21, x21, #0x1a0
   18df4:	cmp	x0, x21
   18df8:	b.ne	18d94 <PyFloat_FromString@plt+0x12304>  // b.any
   18dfc:	ldr	x0, [x19]
   18e00:	add	x0, x0, #0x1
   18e04:	str	x0, [x19]
   18e08:	ldr	x22, [sp, #72]
   18e0c:	add	x21, x20, #0x320
   18e10:	add	x21, x21, #0x1a0
   18e14:	ldr	x0, [x22, #8]
   18e18:	cmp	x0, x21
   18e1c:	b.eq	18e80 <PyFloat_FromString@plt+0x123f0>  // b.none
   18e20:	mov	x1, x21
   18e24:	bl	69c0 <PyType_IsSubtype@plt>
   18e28:	cbnz	w0, 18e80 <PyFloat_FromString@plt+0x123f0>
   18e2c:	ldr	x2, [x22, #8]
   18e30:	ldr	x0, [x2, #168]
   18e34:	tbnz	w0, #24, 18f04 <PyFloat_FromString@plt+0x12474>
   18e38:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
   18e3c:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
   18e40:	ldr	x2, [x2, #24]
   18e44:	add	x1, x1, #0x8
   18e48:	ldr	x0, [x0, #3936]
   18e4c:	ldr	x0, [x0]
   18e50:	bl	6a10 <PyErr_Format@plt>
   18e54:	ldr	x0, [x19]
   18e58:	sub	x0, x0, #0x1
   18e5c:	str	x0, [x19]
   18e60:	cbz	x0, 18f20 <PyFloat_FromString@plt+0x12490>
   18e64:	ldp	x21, x22, [sp, #32]
   18e68:	ldr	x23, [sp, #48]
   18e6c:	mov	x20, #0x0                   	// #0
   18e70:	mov	x0, x20
   18e74:	ldp	x19, x20, [sp, #16]
   18e78:	ldp	x29, x30, [sp], #96
   18e7c:	ret
   18e80:	ldr	x0, [x22]
   18e84:	add	x0, x0, #0x1
   18e88:	str	x0, [x22]
   18e8c:	add	x20, x20, #0x320
   18e90:	add	x0, x20, #0x1a0
   18e94:	bl	6c60 <PyFloat_FromString@plt+0x1d0>
   18e98:	mov	x20, x0
   18e9c:	cbz	x0, 18fbc <PyFloat_FromString@plt+0x1252c>
   18ea0:	ldr	x3, [sp, #80]
   18ea4:	add	x0, x0, #0x18
   18ea8:	add	x4, sp, #0x44
   18eac:	add	x2, x22, #0x18
   18eb0:	add	x1, x19, #0x18
   18eb4:	add	x3, x3, #0x10
   18eb8:	bl	2d8f0 <PyInit__decimal@@Base+0x13370>
   18ebc:	ldr	x0, [x19]
   18ec0:	sub	x0, x0, #0x1
   18ec4:	str	x0, [x19]
   18ec8:	cbz	x0, 18fb0 <PyFloat_FromString@plt+0x12520>
   18ecc:	ldr	x0, [x22]
   18ed0:	sub	x0, x0, #0x1
   18ed4:	str	x0, [x22]
   18ed8:	cbz	x0, 18fa4 <PyFloat_FromString@plt+0x12514>
   18edc:	ldr	w1, [sp, #68]
   18ee0:	ldr	x0, [sp, #80]
   18ee4:	bl	7f90 <PyFloat_FromString@plt+0x1500>
   18ee8:	cbnz	w0, 18ff0 <PyFloat_FromString@plt+0x12560>
   18eec:	mov	x0, x20
   18ef0:	ldp	x19, x20, [sp, #16]
   18ef4:	ldp	x21, x22, [sp, #32]
   18ef8:	ldr	x23, [sp, #48]
   18efc:	ldp	x29, x30, [sp], #96
   18f00:	ret
   18f04:	mov	x1, x22
   18f08:	mov	x2, x23
   18f0c:	mov	x0, x21
   18f10:	bl	82f8 <PyFloat_FromString@plt+0x1868>
   18f14:	mov	x22, x0
   18f18:	cbnz	x0, 18e8c <PyFloat_FromString@plt+0x123fc>
   18f1c:	b	18e54 <PyFloat_FromString@plt+0x123c4>
   18f20:	mov	x0, x19
   18f24:	mov	x20, #0x0                   	// #0
   18f28:	bl	65d0 <_Py_Dealloc@plt>
   18f2c:	ldp	x21, x22, [sp, #32]
   18f30:	ldr	x23, [sp, #48]
   18f34:	b	18dd4 <PyFloat_FromString@plt+0x12344>
   18f38:	ldr	x23, [sp, #80]
   18f3c:	b	18dfc <PyFloat_FromString@plt+0x1236c>
   18f40:	adrp	x0, 5f000 <PyInit__decimal@@Base+0x44a80>
   18f44:	add	x2, sp, #0x58
   18f48:	mov	x1, #0x0                   	// #0
   18f4c:	ldr	x0, [x0, #1808]
   18f50:	bl	6740 <PyContextVar_Get@plt>
   18f54:	tbnz	w0, #31, 1906c <PyFloat_FromString@plt+0x125dc>
   18f58:	ldr	x0, [sp, #88]
   18f5c:	cbz	x0, 19034 <PyFloat_FromString@plt+0x125a4>
   18f60:	stp	x21, x22, [sp, #32]
   18f64:	str	x0, [sp, #80]
   18f68:	ldr	x1, [x0]
   18f6c:	sub	x1, x1, #0x1
   18f70:	str	x1, [x0]
   18f74:	cbz	x1, 19024 <PyFloat_FromString@plt+0x12594>
   18f78:	adrp	x20, 5d000 <PyInit__decimal@@Base+0x42a80>
   18f7c:	ldr	x23, [sp, #80]
   18f80:	b	18d80 <PyFloat_FromString@plt+0x122f0>
   18f84:	mov	x1, x19
   18f88:	mov	x2, x23
   18f8c:	mov	x0, x21
   18f90:	bl	82f8 <PyFloat_FromString@plt+0x1868>
   18f94:	mov	x19, x0
   18f98:	cbz	x0, 18e64 <PyFloat_FromString@plt+0x123d4>
   18f9c:	ldr	x23, [sp, #80]
   18fa0:	b	18e08 <PyFloat_FromString@plt+0x12378>
   18fa4:	mov	x0, x22
   18fa8:	bl	65d0 <_Py_Dealloc@plt>
   18fac:	b	18edc <PyFloat_FromString@plt+0x1244c>
   18fb0:	mov	x0, x19
   18fb4:	bl	65d0 <_Py_Dealloc@plt>
   18fb8:	b	18ecc <PyFloat_FromString@plt+0x1243c>
   18fbc:	ldr	x0, [x19]
   18fc0:	sub	x0, x0, #0x1
   18fc4:	str	x0, [x19]
   18fc8:	cbz	x0, 19018 <PyFloat_FromString@plt+0x12588>
   18fcc:	ldr	x0, [x22]
   18fd0:	sub	x0, x0, #0x1
   18fd4:	str	x0, [x22]
   18fd8:	cbnz	x0, 18e64 <PyFloat_FromString@plt+0x123d4>
   18fdc:	mov	x0, x22
   18fe0:	bl	65d0 <_Py_Dealloc@plt>
   18fe4:	ldp	x21, x22, [sp, #32]
   18fe8:	ldr	x23, [sp, #48]
   18fec:	b	18dd4 <PyFloat_FromString@plt+0x12344>
   18ff0:	ldr	x0, [x20]
   18ff4:	sub	x0, x0, #0x1
   18ff8:	str	x0, [x20]
   18ffc:	cbnz	x0, 18e64 <PyFloat_FromString@plt+0x123d4>
   19000:	mov	x0, x20
   19004:	mov	x20, #0x0                   	// #0
   19008:	bl	65d0 <_Py_Dealloc@plt>
   1900c:	ldp	x21, x22, [sp, #32]
   19010:	ldr	x23, [sp, #48]
   19014:	b	18dd4 <PyFloat_FromString@plt+0x12344>
   19018:	mov	x0, x19
   1901c:	bl	65d0 <_Py_Dealloc@plt>
   19020:	b	18fcc <PyFloat_FromString@plt+0x1253c>
   19024:	bl	65d0 <_Py_Dealloc@plt>
   19028:	adrp	x20, 5d000 <PyInit__decimal@@Base+0x42a80>
   1902c:	ldr	x23, [sp, #80]
   19030:	b	18d80 <PyFloat_FromString@plt+0x122f0>
   19034:	bl	7320 <PyFloat_FromString@plt+0x890>
   19038:	str	x0, [sp, #80]
   1903c:	cbz	x0, 18e68 <PyFloat_FromString@plt+0x123d8>
   19040:	stp	x21, x22, [sp, #32]
   19044:	b	18f68 <PyFloat_FromString@plt+0x124d8>
   19048:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
   1904c:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
   19050:	mov	x20, #0x0                   	// #0
   19054:	add	x1, x1, #0x88
   19058:	ldr	x0, [x0, #3936]
   1905c:	ldr	x0, [x0]
   19060:	bl	6650 <PyErr_SetString@plt>
   19064:	ldr	x23, [sp, #48]
   19068:	b	18dd4 <PyFloat_FromString@plt+0x12344>
   1906c:	mov	x20, #0x0                   	// #0
   19070:	ldr	x23, [sp, #48]
   19074:	b	18dd4 <PyFloat_FromString@plt+0x12344>
   19078:	stp	x29, x30, [sp, #-96]!
   1907c:	adrp	x3, 5d000 <PyInit__decimal@@Base+0x42a80>
   19080:	add	x3, x3, #0x9a0
   19084:	mov	x29, sp
   19088:	stp	x19, x20, [sp, #16]
   1908c:	adrp	x20, 5c000 <PyInit__decimal@@Base+0x41a80>
   19090:	mov	x19, x0
   19094:	ldr	x20, [x20, #4008]
   19098:	mov	x0, x1
   1909c:	add	x3, x3, #0x560
   190a0:	mov	x1, x2
   190a4:	add	x5, sp, #0x50
   190a8:	adrp	x2, 3c000 <PyInit__decimal@@Base+0x21a80>
   190ac:	add	x4, sp, #0x48
   190b0:	add	x2, x2, #0x168
   190b4:	str	wzr, [sp, #68]
   190b8:	str	x20, [sp, #80]
   190bc:	bl	6520 <PyArg_ParseTupleAndKeywords@plt>
   190c0:	cbz	w0, 191e4 <PyFloat_FromString@plt+0x12754>
   190c4:	str	x23, [sp, #48]
   190c8:	ldr	x23, [sp, #80]
   190cc:	cmp	x23, x20
   190d0:	b.eq	192b8 <PyFloat_FromString@plt+0x12828>  // b.none
   190d4:	ldr	x0, [x23, #8]
   190d8:	adrp	x20, 5d000 <PyInit__decimal@@Base+0x42a80>
   190dc:	add	x1, x20, #0x320
   190e0:	cmp	x0, x1
   190e4:	b.eq	1915c <PyFloat_FromString@plt+0x126cc>  // b.none
   190e8:	bl	69c0 <PyType_IsSubtype@plt>
   190ec:	cbz	w0, 193c0 <PyFloat_FromString@plt+0x12930>
   190f0:	ldr	x23, [sp, #80]
   190f4:	stp	x21, x22, [sp, #32]
   190f8:	add	x21, x20, #0x320
   190fc:	ldr	x0, [x19, #8]
   19100:	add	x21, x21, #0x1a0
   19104:	cmp	x0, x21
   19108:	b.eq	19174 <PyFloat_FromString@plt+0x126e4>  // b.none
   1910c:	mov	x1, x21
   19110:	bl	69c0 <PyType_IsSubtype@plt>
   19114:	cbnz	w0, 192b0 <PyFloat_FromString@plt+0x12820>
   19118:	ldr	x2, [x19, #8]
   1911c:	ldr	x0, [x2, #168]
   19120:	tbnz	w0, #24, 192fc <PyFloat_FromString@plt+0x1286c>
   19124:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
   19128:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
   1912c:	ldr	x2, [x2, #24]
   19130:	add	x1, x1, #0x8
   19134:	ldr	x0, [x0, #3936]
   19138:	mov	x20, #0x0                   	// #0
   1913c:	ldr	x0, [x0]
   19140:	bl	6a10 <PyErr_Format@plt>
   19144:	ldp	x21, x22, [sp, #32]
   19148:	ldr	x23, [sp, #48]
   1914c:	mov	x0, x20
   19150:	ldp	x19, x20, [sp, #16]
   19154:	ldp	x29, x30, [sp], #96
   19158:	ret
   1915c:	ldr	x0, [x19, #8]
   19160:	stp	x21, x22, [sp, #32]
   19164:	add	x21, x20, #0x320
   19168:	add	x21, x21, #0x1a0
   1916c:	cmp	x0, x21
   19170:	b.ne	1910c <PyFloat_FromString@plt+0x1267c>  // b.any
   19174:	ldr	x0, [x19]
   19178:	add	x0, x0, #0x1
   1917c:	str	x0, [x19]
   19180:	ldr	x22, [sp, #72]
   19184:	add	x21, x20, #0x320
   19188:	add	x21, x21, #0x1a0
   1918c:	ldr	x0, [x22, #8]
   19190:	cmp	x0, x21
   19194:	b.eq	191f8 <PyFloat_FromString@plt+0x12768>  // b.none
   19198:	mov	x1, x21
   1919c:	bl	69c0 <PyType_IsSubtype@plt>
   191a0:	cbnz	w0, 191f8 <PyFloat_FromString@plt+0x12768>
   191a4:	ldr	x2, [x22, #8]
   191a8:	ldr	x0, [x2, #168]
   191ac:	tbnz	w0, #24, 1927c <PyFloat_FromString@plt+0x127ec>
   191b0:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
   191b4:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
   191b8:	ldr	x2, [x2, #24]
   191bc:	add	x1, x1, #0x8
   191c0:	ldr	x0, [x0, #3936]
   191c4:	ldr	x0, [x0]
   191c8:	bl	6a10 <PyErr_Format@plt>
   191cc:	ldr	x0, [x19]
   191d0:	sub	x0, x0, #0x1
   191d4:	str	x0, [x19]
   191d8:	cbz	x0, 19298 <PyFloat_FromString@plt+0x12808>
   191dc:	ldp	x21, x22, [sp, #32]
   191e0:	ldr	x23, [sp, #48]
   191e4:	mov	x20, #0x0                   	// #0
   191e8:	mov	x0, x20
   191ec:	ldp	x19, x20, [sp, #16]
   191f0:	ldp	x29, x30, [sp], #96
   191f4:	ret
   191f8:	ldr	x0, [x22]
   191fc:	add	x0, x0, #0x1
   19200:	str	x0, [x22]
   19204:	add	x20, x20, #0x320
   19208:	add	x0, x20, #0x1a0
   1920c:	bl	6c60 <PyFloat_FromString@plt+0x1d0>
   19210:	mov	x20, x0
   19214:	cbz	x0, 19334 <PyFloat_FromString@plt+0x128a4>
   19218:	ldr	x3, [sp, #80]
   1921c:	add	x0, x0, #0x18
   19220:	add	x4, sp, #0x44
   19224:	add	x2, x22, #0x18
   19228:	add	x1, x19, #0x18
   1922c:	add	x3, x3, #0x10
   19230:	bl	36fd0 <PyInit__decimal@@Base+0x1ca50>
   19234:	ldr	x0, [x19]
   19238:	sub	x0, x0, #0x1
   1923c:	str	x0, [x19]
   19240:	cbz	x0, 19328 <PyFloat_FromString@plt+0x12898>
   19244:	ldr	x0, [x22]
   19248:	sub	x0, x0, #0x1
   1924c:	str	x0, [x22]
   19250:	cbz	x0, 1931c <PyFloat_FromString@plt+0x1288c>
   19254:	ldr	w1, [sp, #68]
   19258:	ldr	x0, [sp, #80]
   1925c:	bl	7f90 <PyFloat_FromString@plt+0x1500>
   19260:	cbnz	w0, 19368 <PyFloat_FromString@plt+0x128d8>
   19264:	mov	x0, x20
   19268:	ldp	x19, x20, [sp, #16]
   1926c:	ldp	x21, x22, [sp, #32]
   19270:	ldr	x23, [sp, #48]
   19274:	ldp	x29, x30, [sp], #96
   19278:	ret
   1927c:	mov	x1, x22
   19280:	mov	x2, x23
   19284:	mov	x0, x21
   19288:	bl	82f8 <PyFloat_FromString@plt+0x1868>
   1928c:	mov	x22, x0
   19290:	cbnz	x0, 19204 <PyFloat_FromString@plt+0x12774>
   19294:	b	191cc <PyFloat_FromString@plt+0x1273c>
   19298:	mov	x0, x19
   1929c:	mov	x20, #0x0                   	// #0
   192a0:	bl	65d0 <_Py_Dealloc@plt>
   192a4:	ldp	x21, x22, [sp, #32]
   192a8:	ldr	x23, [sp, #48]
   192ac:	b	1914c <PyFloat_FromString@plt+0x126bc>
   192b0:	ldr	x23, [sp, #80]
   192b4:	b	19174 <PyFloat_FromString@plt+0x126e4>
   192b8:	adrp	x0, 5f000 <PyInit__decimal@@Base+0x44a80>
   192bc:	add	x2, sp, #0x58
   192c0:	mov	x1, #0x0                   	// #0
   192c4:	ldr	x0, [x0, #1808]
   192c8:	bl	6740 <PyContextVar_Get@plt>
   192cc:	tbnz	w0, #31, 193e4 <PyFloat_FromString@plt+0x12954>
   192d0:	ldr	x0, [sp, #88]
   192d4:	cbz	x0, 193ac <PyFloat_FromString@plt+0x1291c>
   192d8:	stp	x21, x22, [sp, #32]
   192dc:	str	x0, [sp, #80]
   192e0:	ldr	x1, [x0]
   192e4:	sub	x1, x1, #0x1
   192e8:	str	x1, [x0]
   192ec:	cbz	x1, 1939c <PyFloat_FromString@plt+0x1290c>
   192f0:	adrp	x20, 5d000 <PyInit__decimal@@Base+0x42a80>
   192f4:	ldr	x23, [sp, #80]
   192f8:	b	190f8 <PyFloat_FromString@plt+0x12668>
   192fc:	mov	x1, x19
   19300:	mov	x2, x23
   19304:	mov	x0, x21
   19308:	bl	82f8 <PyFloat_FromString@plt+0x1868>
   1930c:	mov	x19, x0
   19310:	cbz	x0, 191dc <PyFloat_FromString@plt+0x1274c>
   19314:	ldr	x23, [sp, #80]
   19318:	b	19180 <PyFloat_FromString@plt+0x126f0>
   1931c:	mov	x0, x22
   19320:	bl	65d0 <_Py_Dealloc@plt>
   19324:	b	19254 <PyFloat_FromString@plt+0x127c4>
   19328:	mov	x0, x19
   1932c:	bl	65d0 <_Py_Dealloc@plt>
   19330:	b	19244 <PyFloat_FromString@plt+0x127b4>
   19334:	ldr	x0, [x19]
   19338:	sub	x0, x0, #0x1
   1933c:	str	x0, [x19]
   19340:	cbz	x0, 19390 <PyFloat_FromString@plt+0x12900>
   19344:	ldr	x0, [x22]
   19348:	sub	x0, x0, #0x1
   1934c:	str	x0, [x22]
   19350:	cbnz	x0, 191dc <PyFloat_FromString@plt+0x1274c>
   19354:	mov	x0, x22
   19358:	bl	65d0 <_Py_Dealloc@plt>
   1935c:	ldp	x21, x22, [sp, #32]
   19360:	ldr	x23, [sp, #48]
   19364:	b	1914c <PyFloat_FromString@plt+0x126bc>
   19368:	ldr	x0, [x20]
   1936c:	sub	x0, x0, #0x1
   19370:	str	x0, [x20]
   19374:	cbnz	x0, 191dc <PyFloat_FromString@plt+0x1274c>
   19378:	mov	x0, x20
   1937c:	mov	x20, #0x0                   	// #0
   19380:	bl	65d0 <_Py_Dealloc@plt>
   19384:	ldp	x21, x22, [sp, #32]
   19388:	ldr	x23, [sp, #48]
   1938c:	b	1914c <PyFloat_FromString@plt+0x126bc>
   19390:	mov	x0, x19
   19394:	bl	65d0 <_Py_Dealloc@plt>
   19398:	b	19344 <PyFloat_FromString@plt+0x128b4>
   1939c:	bl	65d0 <_Py_Dealloc@plt>
   193a0:	adrp	x20, 5d000 <PyInit__decimal@@Base+0x42a80>
   193a4:	ldr	x23, [sp, #80]
   193a8:	b	190f8 <PyFloat_FromString@plt+0x12668>
   193ac:	bl	7320 <PyFloat_FromString@plt+0x890>
   193b0:	str	x0, [sp, #80]
   193b4:	cbz	x0, 191e0 <PyFloat_FromString@plt+0x12750>
   193b8:	stp	x21, x22, [sp, #32]
   193bc:	b	192e0 <PyFloat_FromString@plt+0x12850>
   193c0:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
   193c4:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
   193c8:	mov	x20, #0x0                   	// #0
   193cc:	add	x1, x1, #0x88
   193d0:	ldr	x0, [x0, #3936]
   193d4:	ldr	x0, [x0]
   193d8:	bl	6650 <PyErr_SetString@plt>
   193dc:	ldr	x23, [sp, #48]
   193e0:	b	1914c <PyFloat_FromString@plt+0x126bc>
   193e4:	mov	x20, #0x0                   	// #0
   193e8:	ldr	x23, [sp, #48]
   193ec:	b	1914c <PyFloat_FromString@plt+0x126bc>
   193f0:	stp	x29, x30, [sp, #-96]!
   193f4:	adrp	x3, 5d000 <PyInit__decimal@@Base+0x42a80>
   193f8:	add	x3, x3, #0x9a0
   193fc:	mov	x29, sp
   19400:	stp	x19, x20, [sp, #16]
   19404:	adrp	x20, 5c000 <PyInit__decimal@@Base+0x41a80>
   19408:	mov	x19, x0
   1940c:	ldr	x20, [x20, #4008]
   19410:	mov	x0, x1
   19414:	add	x3, x3, #0x578
   19418:	mov	x1, x2
   1941c:	add	x5, sp, #0x50
   19420:	adrp	x2, 3c000 <PyInit__decimal@@Base+0x21a80>
   19424:	add	x4, sp, #0x48
   19428:	add	x2, x2, #0x168
   1942c:	str	wzr, [sp, #68]
   19430:	str	x20, [sp, #80]
   19434:	bl	6520 <PyArg_ParseTupleAndKeywords@plt>
   19438:	cbz	w0, 1955c <PyFloat_FromString@plt+0x12acc>
   1943c:	str	x23, [sp, #48]
   19440:	ldr	x23, [sp, #80]
   19444:	cmp	x23, x20
   19448:	b.eq	19630 <PyFloat_FromString@plt+0x12ba0>  // b.none
   1944c:	ldr	x0, [x23, #8]
   19450:	adrp	x20, 5d000 <PyInit__decimal@@Base+0x42a80>
   19454:	add	x1, x20, #0x320
   19458:	cmp	x0, x1
   1945c:	b.eq	194d4 <PyFloat_FromString@plt+0x12a44>  // b.none
   19460:	bl	69c0 <PyType_IsSubtype@plt>
   19464:	cbz	w0, 19738 <PyFloat_FromString@plt+0x12ca8>
   19468:	ldr	x23, [sp, #80]
   1946c:	stp	x21, x22, [sp, #32]
   19470:	add	x21, x20, #0x320
   19474:	ldr	x0, [x19, #8]
   19478:	add	x21, x21, #0x1a0
   1947c:	cmp	x0, x21
   19480:	b.eq	194ec <PyFloat_FromString@plt+0x12a5c>  // b.none
   19484:	mov	x1, x21
   19488:	bl	69c0 <PyType_IsSubtype@plt>
   1948c:	cbnz	w0, 19628 <PyFloat_FromString@plt+0x12b98>
   19490:	ldr	x2, [x19, #8]
   19494:	ldr	x0, [x2, #168]
   19498:	tbnz	w0, #24, 19674 <PyFloat_FromString@plt+0x12be4>
   1949c:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
   194a0:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
   194a4:	ldr	x2, [x2, #24]
   194a8:	add	x1, x1, #0x8
   194ac:	ldr	x0, [x0, #3936]
   194b0:	mov	x20, #0x0                   	// #0
   194b4:	ldr	x0, [x0]
   194b8:	bl	6a10 <PyErr_Format@plt>
   194bc:	ldp	x21, x22, [sp, #32]
   194c0:	ldr	x23, [sp, #48]
   194c4:	mov	x0, x20
   194c8:	ldp	x19, x20, [sp, #16]
   194cc:	ldp	x29, x30, [sp], #96
   194d0:	ret
   194d4:	ldr	x0, [x19, #8]
   194d8:	stp	x21, x22, [sp, #32]
   194dc:	add	x21, x20, #0x320
   194e0:	add	x21, x21, #0x1a0
   194e4:	cmp	x0, x21
   194e8:	b.ne	19484 <PyFloat_FromString@plt+0x129f4>  // b.any
   194ec:	ldr	x0, [x19]
   194f0:	add	x0, x0, #0x1
   194f4:	str	x0, [x19]
   194f8:	ldr	x22, [sp, #72]
   194fc:	add	x21, x20, #0x320
   19500:	add	x21, x21, #0x1a0
   19504:	ldr	x0, [x22, #8]
   19508:	cmp	x0, x21
   1950c:	b.eq	19570 <PyFloat_FromString@plt+0x12ae0>  // b.none
   19510:	mov	x1, x21
   19514:	bl	69c0 <PyType_IsSubtype@plt>
   19518:	cbnz	w0, 19570 <PyFloat_FromString@plt+0x12ae0>
   1951c:	ldr	x2, [x22, #8]
   19520:	ldr	x0, [x2, #168]
   19524:	tbnz	w0, #24, 195f4 <PyFloat_FromString@plt+0x12b64>
   19528:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
   1952c:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
   19530:	ldr	x2, [x2, #24]
   19534:	add	x1, x1, #0x8
   19538:	ldr	x0, [x0, #3936]
   1953c:	ldr	x0, [x0]
   19540:	bl	6a10 <PyErr_Format@plt>
   19544:	ldr	x0, [x19]
   19548:	sub	x0, x0, #0x1
   1954c:	str	x0, [x19]
   19550:	cbz	x0, 19610 <PyFloat_FromString@plt+0x12b80>
   19554:	ldp	x21, x22, [sp, #32]
   19558:	ldr	x23, [sp, #48]
   1955c:	mov	x20, #0x0                   	// #0
   19560:	mov	x0, x20
   19564:	ldp	x19, x20, [sp, #16]
   19568:	ldp	x29, x30, [sp], #96
   1956c:	ret
   19570:	ldr	x0, [x22]
   19574:	add	x0, x0, #0x1
   19578:	str	x0, [x22]
   1957c:	add	x20, x20, #0x320
   19580:	add	x0, x20, #0x1a0
   19584:	bl	6c60 <PyFloat_FromString@plt+0x1d0>
   19588:	mov	x20, x0
   1958c:	cbz	x0, 196ac <PyFloat_FromString@plt+0x12c1c>
   19590:	ldr	x3, [sp, #80]
   19594:	add	x0, x0, #0x18
   19598:	add	x4, sp, #0x44
   1959c:	add	x2, x22, #0x18
   195a0:	add	x1, x19, #0x18
   195a4:	add	x3, x3, #0x10
   195a8:	bl	33450 <PyInit__decimal@@Base+0x18ed0>
   195ac:	ldr	x0, [x19]
   195b0:	sub	x0, x0, #0x1
   195b4:	str	x0, [x19]
   195b8:	cbz	x0, 196a0 <PyFloat_FromString@plt+0x12c10>
   195bc:	ldr	x0, [x22]
   195c0:	sub	x0, x0, #0x1
   195c4:	str	x0, [x22]
   195c8:	cbz	x0, 19694 <PyFloat_FromString@plt+0x12c04>
   195cc:	ldr	w1, [sp, #68]
   195d0:	ldr	x0, [sp, #80]
   195d4:	bl	7f90 <PyFloat_FromString@plt+0x1500>
   195d8:	cbnz	w0, 196e0 <PyFloat_FromString@plt+0x12c50>
   195dc:	mov	x0, x20
   195e0:	ldp	x19, x20, [sp, #16]
   195e4:	ldp	x21, x22, [sp, #32]
   195e8:	ldr	x23, [sp, #48]
   195ec:	ldp	x29, x30, [sp], #96
   195f0:	ret
   195f4:	mov	x1, x22
   195f8:	mov	x2, x23
   195fc:	mov	x0, x21
   19600:	bl	82f8 <PyFloat_FromString@plt+0x1868>
   19604:	mov	x22, x0
   19608:	cbnz	x0, 1957c <PyFloat_FromString@plt+0x12aec>
   1960c:	b	19544 <PyFloat_FromString@plt+0x12ab4>
   19610:	mov	x0, x19
   19614:	mov	x20, #0x0                   	// #0
   19618:	bl	65d0 <_Py_Dealloc@plt>
   1961c:	ldp	x21, x22, [sp, #32]
   19620:	ldr	x23, [sp, #48]
   19624:	b	194c4 <PyFloat_FromString@plt+0x12a34>
   19628:	ldr	x23, [sp, #80]
   1962c:	b	194ec <PyFloat_FromString@plt+0x12a5c>
   19630:	adrp	x0, 5f000 <PyInit__decimal@@Base+0x44a80>
   19634:	add	x2, sp, #0x58
   19638:	mov	x1, #0x0                   	// #0
   1963c:	ldr	x0, [x0, #1808]
   19640:	bl	6740 <PyContextVar_Get@plt>
   19644:	tbnz	w0, #31, 1975c <PyFloat_FromString@plt+0x12ccc>
   19648:	ldr	x0, [sp, #88]
   1964c:	cbz	x0, 19724 <PyFloat_FromString@plt+0x12c94>
   19650:	stp	x21, x22, [sp, #32]
   19654:	str	x0, [sp, #80]
   19658:	ldr	x1, [x0]
   1965c:	sub	x1, x1, #0x1
   19660:	str	x1, [x0]
   19664:	cbz	x1, 19714 <PyFloat_FromString@plt+0x12c84>
   19668:	adrp	x20, 5d000 <PyInit__decimal@@Base+0x42a80>
   1966c:	ldr	x23, [sp, #80]
   19670:	b	19470 <PyFloat_FromString@plt+0x129e0>
   19674:	mov	x1, x19
   19678:	mov	x2, x23
   1967c:	mov	x0, x21
   19680:	bl	82f8 <PyFloat_FromString@plt+0x1868>
   19684:	mov	x19, x0
   19688:	cbz	x0, 19554 <PyFloat_FromString@plt+0x12ac4>
   1968c:	ldr	x23, [sp, #80]
   19690:	b	194f8 <PyFloat_FromString@plt+0x12a68>
   19694:	mov	x0, x22
   19698:	bl	65d0 <_Py_Dealloc@plt>
   1969c:	b	195cc <PyFloat_FromString@plt+0x12b3c>
   196a0:	mov	x0, x19
   196a4:	bl	65d0 <_Py_Dealloc@plt>
   196a8:	b	195bc <PyFloat_FromString@plt+0x12b2c>
   196ac:	ldr	x0, [x19]
   196b0:	sub	x0, x0, #0x1
   196b4:	str	x0, [x19]
   196b8:	cbz	x0, 19708 <PyFloat_FromString@plt+0x12c78>
   196bc:	ldr	x0, [x22]
   196c0:	sub	x0, x0, #0x1
   196c4:	str	x0, [x22]
   196c8:	cbnz	x0, 19554 <PyFloat_FromString@plt+0x12ac4>
   196cc:	mov	x0, x22
   196d0:	bl	65d0 <_Py_Dealloc@plt>
   196d4:	ldp	x21, x22, [sp, #32]
   196d8:	ldr	x23, [sp, #48]
   196dc:	b	194c4 <PyFloat_FromString@plt+0x12a34>
   196e0:	ldr	x0, [x20]
   196e4:	sub	x0, x0, #0x1
   196e8:	str	x0, [x20]
   196ec:	cbnz	x0, 19554 <PyFloat_FromString@plt+0x12ac4>
   196f0:	mov	x0, x20
   196f4:	mov	x20, #0x0                   	// #0
   196f8:	bl	65d0 <_Py_Dealloc@plt>
   196fc:	ldp	x21, x22, [sp, #32]
   19700:	ldr	x23, [sp, #48]
   19704:	b	194c4 <PyFloat_FromString@plt+0x12a34>
   19708:	mov	x0, x19
   1970c:	bl	65d0 <_Py_Dealloc@plt>
   19710:	b	196bc <PyFloat_FromString@plt+0x12c2c>
   19714:	bl	65d0 <_Py_Dealloc@plt>
   19718:	adrp	x20, 5d000 <PyInit__decimal@@Base+0x42a80>
   1971c:	ldr	x23, [sp, #80]
   19720:	b	19470 <PyFloat_FromString@plt+0x129e0>
   19724:	bl	7320 <PyFloat_FromString@plt+0x890>
   19728:	str	x0, [sp, #80]
   1972c:	cbz	x0, 19558 <PyFloat_FromString@plt+0x12ac8>
   19730:	stp	x21, x22, [sp, #32]
   19734:	b	19658 <PyFloat_FromString@plt+0x12bc8>
   19738:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
   1973c:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
   19740:	mov	x20, #0x0                   	// #0
   19744:	add	x1, x1, #0x88
   19748:	ldr	x0, [x0, #3936]
   1974c:	ldr	x0, [x0]
   19750:	bl	6650 <PyErr_SetString@plt>
   19754:	ldr	x23, [sp, #48]
   19758:	b	194c4 <PyFloat_FromString@plt+0x12a34>
   1975c:	mov	x20, #0x0                   	// #0
   19760:	ldr	x23, [sp, #48]
   19764:	b	194c4 <PyFloat_FromString@plt+0x12a34>
   19768:	stp	x29, x30, [sp, #-96]!
   1976c:	adrp	x3, 5d000 <PyInit__decimal@@Base+0x42a80>
   19770:	add	x3, x3, #0x9a0
   19774:	mov	x29, sp
   19778:	stp	x19, x20, [sp, #16]
   1977c:	adrp	x20, 5c000 <PyInit__decimal@@Base+0x41a80>
   19780:	mov	x19, x0
   19784:	ldr	x20, [x20, #4008]
   19788:	mov	x0, x1
   1978c:	add	x3, x3, #0x590
   19790:	mov	x1, x2
   19794:	add	x5, sp, #0x50
   19798:	adrp	x2, 3c000 <PyInit__decimal@@Base+0x21a80>
   1979c:	add	x4, sp, #0x48
   197a0:	add	x2, x2, #0x168
   197a4:	str	wzr, [sp, #68]
   197a8:	str	x20, [sp, #80]
   197ac:	bl	6520 <PyArg_ParseTupleAndKeywords@plt>
   197b0:	cbz	w0, 198d4 <PyFloat_FromString@plt+0x12e44>
   197b4:	str	x23, [sp, #48]
   197b8:	ldr	x23, [sp, #80]
   197bc:	cmp	x23, x20
   197c0:	b.eq	199a8 <PyFloat_FromString@plt+0x12f18>  // b.none
   197c4:	ldr	x0, [x23, #8]
   197c8:	adrp	x20, 5d000 <PyInit__decimal@@Base+0x42a80>
   197cc:	add	x1, x20, #0x320
   197d0:	cmp	x0, x1
   197d4:	b.eq	1984c <PyFloat_FromString@plt+0x12dbc>  // b.none
   197d8:	bl	69c0 <PyType_IsSubtype@plt>
   197dc:	cbz	w0, 19ab0 <PyFloat_FromString@plt+0x13020>
   197e0:	ldr	x23, [sp, #80]
   197e4:	stp	x21, x22, [sp, #32]
   197e8:	add	x21, x20, #0x320
   197ec:	ldr	x0, [x19, #8]
   197f0:	add	x21, x21, #0x1a0
   197f4:	cmp	x0, x21
   197f8:	b.eq	19864 <PyFloat_FromString@plt+0x12dd4>  // b.none
   197fc:	mov	x1, x21
   19800:	bl	69c0 <PyType_IsSubtype@plt>
   19804:	cbnz	w0, 199a0 <PyFloat_FromString@plt+0x12f10>
   19808:	ldr	x2, [x19, #8]
   1980c:	ldr	x0, [x2, #168]
   19810:	tbnz	w0, #24, 199ec <PyFloat_FromString@plt+0x12f5c>
   19814:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
   19818:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
   1981c:	ldr	x2, [x2, #24]
   19820:	add	x1, x1, #0x8
   19824:	ldr	x0, [x0, #3936]
   19828:	mov	x20, #0x0                   	// #0
   1982c:	ldr	x0, [x0]
   19830:	bl	6a10 <PyErr_Format@plt>
   19834:	ldp	x21, x22, [sp, #32]
   19838:	ldr	x23, [sp, #48]
   1983c:	mov	x0, x20
   19840:	ldp	x19, x20, [sp, #16]
   19844:	ldp	x29, x30, [sp], #96
   19848:	ret
   1984c:	ldr	x0, [x19, #8]
   19850:	stp	x21, x22, [sp, #32]
   19854:	add	x21, x20, #0x320
   19858:	add	x21, x21, #0x1a0
   1985c:	cmp	x0, x21
   19860:	b.ne	197fc <PyFloat_FromString@plt+0x12d6c>  // b.any
   19864:	ldr	x0, [x19]
   19868:	add	x0, x0, #0x1
   1986c:	str	x0, [x19]
   19870:	ldr	x22, [sp, #72]
   19874:	add	x21, x20, #0x320
   19878:	add	x21, x21, #0x1a0
   1987c:	ldr	x0, [x22, #8]
   19880:	cmp	x0, x21
   19884:	b.eq	198e8 <PyFloat_FromString@plt+0x12e58>  // b.none
   19888:	mov	x1, x21
   1988c:	bl	69c0 <PyType_IsSubtype@plt>
   19890:	cbnz	w0, 198e8 <PyFloat_FromString@plt+0x12e58>
   19894:	ldr	x2, [x22, #8]
   19898:	ldr	x0, [x2, #168]
   1989c:	tbnz	w0, #24, 1996c <PyFloat_FromString@plt+0x12edc>
   198a0:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
   198a4:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
   198a8:	ldr	x2, [x2, #24]
   198ac:	add	x1, x1, #0x8
   198b0:	ldr	x0, [x0, #3936]
   198b4:	ldr	x0, [x0]
   198b8:	bl	6a10 <PyErr_Format@plt>
   198bc:	ldr	x0, [x19]
   198c0:	sub	x0, x0, #0x1
   198c4:	str	x0, [x19]
   198c8:	cbz	x0, 19988 <PyFloat_FromString@plt+0x12ef8>
   198cc:	ldp	x21, x22, [sp, #32]
   198d0:	ldr	x23, [sp, #48]
   198d4:	mov	x20, #0x0                   	// #0
   198d8:	mov	x0, x20
   198dc:	ldp	x19, x20, [sp, #16]
   198e0:	ldp	x29, x30, [sp], #96
   198e4:	ret
   198e8:	ldr	x0, [x22]
   198ec:	add	x0, x0, #0x1
   198f0:	str	x0, [x22]
   198f4:	add	x20, x20, #0x320
   198f8:	add	x0, x20, #0x1a0
   198fc:	bl	6c60 <PyFloat_FromString@plt+0x1d0>
   19900:	mov	x20, x0
   19904:	cbz	x0, 19a24 <PyFloat_FromString@plt+0x12f94>
   19908:	ldr	x3, [sp, #80]
   1990c:	add	x0, x0, #0x18
   19910:	add	x4, sp, #0x44
   19914:	add	x2, x22, #0x18
   19918:	add	x1, x19, #0x18
   1991c:	add	x3, x3, #0x10
   19920:	bl	33320 <PyInit__decimal@@Base+0x18da0>
   19924:	ldr	x0, [x19]
   19928:	sub	x0, x0, #0x1
   1992c:	str	x0, [x19]
   19930:	cbz	x0, 19a18 <PyFloat_FromString@plt+0x12f88>
   19934:	ldr	x0, [x22]
   19938:	sub	x0, x0, #0x1
   1993c:	str	x0, [x22]
   19940:	cbz	x0, 19a0c <PyFloat_FromString@plt+0x12f7c>
   19944:	ldr	w1, [sp, #68]
   19948:	ldr	x0, [sp, #80]
   1994c:	bl	7f90 <PyFloat_FromString@plt+0x1500>
   19950:	cbnz	w0, 19a58 <PyFloat_FromString@plt+0x12fc8>
   19954:	mov	x0, x20
   19958:	ldp	x19, x20, [sp, #16]
   1995c:	ldp	x21, x22, [sp, #32]
   19960:	ldr	x23, [sp, #48]
   19964:	ldp	x29, x30, [sp], #96
   19968:	ret
   1996c:	mov	x1, x22
   19970:	mov	x2, x23
   19974:	mov	x0, x21
   19978:	bl	82f8 <PyFloat_FromString@plt+0x1868>
   1997c:	mov	x22, x0
   19980:	cbnz	x0, 198f4 <PyFloat_FromString@plt+0x12e64>
   19984:	b	198bc <PyFloat_FromString@plt+0x12e2c>
   19988:	mov	x0, x19
   1998c:	mov	x20, #0x0                   	// #0
   19990:	bl	65d0 <_Py_Dealloc@plt>
   19994:	ldp	x21, x22, [sp, #32]
   19998:	ldr	x23, [sp, #48]
   1999c:	b	1983c <PyFloat_FromString@plt+0x12dac>
   199a0:	ldr	x23, [sp, #80]
   199a4:	b	19864 <PyFloat_FromString@plt+0x12dd4>
   199a8:	adrp	x0, 5f000 <PyInit__decimal@@Base+0x44a80>
   199ac:	add	x2, sp, #0x58
   199b0:	mov	x1, #0x0                   	// #0
   199b4:	ldr	x0, [x0, #1808]
   199b8:	bl	6740 <PyContextVar_Get@plt>
   199bc:	tbnz	w0, #31, 19ad4 <PyFloat_FromString@plt+0x13044>
   199c0:	ldr	x0, [sp, #88]
   199c4:	cbz	x0, 19a9c <PyFloat_FromString@plt+0x1300c>
   199c8:	stp	x21, x22, [sp, #32]
   199cc:	str	x0, [sp, #80]
   199d0:	ldr	x1, [x0]
   199d4:	sub	x1, x1, #0x1
   199d8:	str	x1, [x0]
   199dc:	cbz	x1, 19a8c <PyFloat_FromString@plt+0x12ffc>
   199e0:	adrp	x20, 5d000 <PyInit__decimal@@Base+0x42a80>
   199e4:	ldr	x23, [sp, #80]
   199e8:	b	197e8 <PyFloat_FromString@plt+0x12d58>
   199ec:	mov	x1, x19
   199f0:	mov	x2, x23
   199f4:	mov	x0, x21
   199f8:	bl	82f8 <PyFloat_FromString@plt+0x1868>
   199fc:	mov	x19, x0
   19a00:	cbz	x0, 198cc <PyFloat_FromString@plt+0x12e3c>
   19a04:	ldr	x23, [sp, #80]
   19a08:	b	19870 <PyFloat_FromString@plt+0x12de0>
   19a0c:	mov	x0, x22
   19a10:	bl	65d0 <_Py_Dealloc@plt>
   19a14:	b	19944 <PyFloat_FromString@plt+0x12eb4>
   19a18:	mov	x0, x19
   19a1c:	bl	65d0 <_Py_Dealloc@plt>
   19a20:	b	19934 <PyFloat_FromString@plt+0x12ea4>
   19a24:	ldr	x0, [x19]
   19a28:	sub	x0, x0, #0x1
   19a2c:	str	x0, [x19]
   19a30:	cbz	x0, 19a80 <PyFloat_FromString@plt+0x12ff0>
   19a34:	ldr	x0, [x22]
   19a38:	sub	x0, x0, #0x1
   19a3c:	str	x0, [x22]
   19a40:	cbnz	x0, 198cc <PyFloat_FromString@plt+0x12e3c>
   19a44:	mov	x0, x22
   19a48:	bl	65d0 <_Py_Dealloc@plt>
   19a4c:	ldp	x21, x22, [sp, #32]
   19a50:	ldr	x23, [sp, #48]
   19a54:	b	1983c <PyFloat_FromString@plt+0x12dac>
   19a58:	ldr	x0, [x20]
   19a5c:	sub	x0, x0, #0x1
   19a60:	str	x0, [x20]
   19a64:	cbnz	x0, 198cc <PyFloat_FromString@plt+0x12e3c>
   19a68:	mov	x0, x20
   19a6c:	mov	x20, #0x0                   	// #0
   19a70:	bl	65d0 <_Py_Dealloc@plt>
   19a74:	ldp	x21, x22, [sp, #32]
   19a78:	ldr	x23, [sp, #48]
   19a7c:	b	1983c <PyFloat_FromString@plt+0x12dac>
   19a80:	mov	x0, x19
   19a84:	bl	65d0 <_Py_Dealloc@plt>
   19a88:	b	19a34 <PyFloat_FromString@plt+0x12fa4>
   19a8c:	bl	65d0 <_Py_Dealloc@plt>
   19a90:	adrp	x20, 5d000 <PyInit__decimal@@Base+0x42a80>
   19a94:	ldr	x23, [sp, #80]
   19a98:	b	197e8 <PyFloat_FromString@plt+0x12d58>
   19a9c:	bl	7320 <PyFloat_FromString@plt+0x890>
   19aa0:	str	x0, [sp, #80]
   19aa4:	cbz	x0, 198d0 <PyFloat_FromString@plt+0x12e40>
   19aa8:	stp	x21, x22, [sp, #32]
   19aac:	b	199d0 <PyFloat_FromString@plt+0x12f40>
   19ab0:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
   19ab4:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
   19ab8:	mov	x20, #0x0                   	// #0
   19abc:	add	x1, x1, #0x88
   19ac0:	ldr	x0, [x0, #3936]
   19ac4:	ldr	x0, [x0]
   19ac8:	bl	6650 <PyErr_SetString@plt>
   19acc:	ldr	x23, [sp, #48]
   19ad0:	b	1983c <PyFloat_FromString@plt+0x12dac>
   19ad4:	mov	x20, #0x0                   	// #0
   19ad8:	ldr	x23, [sp, #48]
   19adc:	b	1983c <PyFloat_FromString@plt+0x12dac>
   19ae0:	stp	x29, x30, [sp, #-96]!
   19ae4:	adrp	x3, 5d000 <PyInit__decimal@@Base+0x42a80>
   19ae8:	add	x3, x3, #0x9a0
   19aec:	mov	x29, sp
   19af0:	stp	x19, x20, [sp, #16]
   19af4:	adrp	x20, 5c000 <PyInit__decimal@@Base+0x41a80>
   19af8:	mov	x19, x0
   19afc:	ldr	x20, [x20, #4008]
   19b00:	mov	x0, x1
   19b04:	add	x3, x3, #0x5a8
   19b08:	mov	x1, x2
   19b0c:	add	x5, sp, #0x50
   19b10:	adrp	x2, 3c000 <PyInit__decimal@@Base+0x21a80>
   19b14:	add	x4, sp, #0x48
   19b18:	add	x2, x2, #0x168
   19b1c:	str	wzr, [sp, #68]
   19b20:	str	x20, [sp, #80]
   19b24:	bl	6520 <PyArg_ParseTupleAndKeywords@plt>
   19b28:	cbz	w0, 19c4c <PyFloat_FromString@plt+0x131bc>
   19b2c:	str	x23, [sp, #48]
   19b30:	ldr	x23, [sp, #80]
   19b34:	cmp	x23, x20
   19b38:	b.eq	19d20 <PyFloat_FromString@plt+0x13290>  // b.none
   19b3c:	ldr	x0, [x23, #8]
   19b40:	adrp	x20, 5d000 <PyInit__decimal@@Base+0x42a80>
   19b44:	add	x1, x20, #0x320
   19b48:	cmp	x0, x1
   19b4c:	b.eq	19bc4 <PyFloat_FromString@plt+0x13134>  // b.none
   19b50:	bl	69c0 <PyType_IsSubtype@plt>
   19b54:	cbz	w0, 19e28 <PyFloat_FromString@plt+0x13398>
   19b58:	ldr	x23, [sp, #80]
   19b5c:	stp	x21, x22, [sp, #32]
   19b60:	add	x21, x20, #0x320
   19b64:	ldr	x0, [x19, #8]
   19b68:	add	x21, x21, #0x1a0
   19b6c:	cmp	x0, x21
   19b70:	b.eq	19bdc <PyFloat_FromString@plt+0x1314c>  // b.none
   19b74:	mov	x1, x21
   19b78:	bl	69c0 <PyType_IsSubtype@plt>
   19b7c:	cbnz	w0, 19d18 <PyFloat_FromString@plt+0x13288>
   19b80:	ldr	x2, [x19, #8]
   19b84:	ldr	x0, [x2, #168]
   19b88:	tbnz	w0, #24, 19d64 <PyFloat_FromString@plt+0x132d4>
   19b8c:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
   19b90:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
   19b94:	ldr	x2, [x2, #24]
   19b98:	add	x1, x1, #0x8
   19b9c:	ldr	x0, [x0, #3936]
   19ba0:	mov	x20, #0x0                   	// #0
   19ba4:	ldr	x0, [x0]
   19ba8:	bl	6a10 <PyErr_Format@plt>
   19bac:	ldp	x21, x22, [sp, #32]
   19bb0:	ldr	x23, [sp, #48]
   19bb4:	mov	x0, x20
   19bb8:	ldp	x19, x20, [sp, #16]
   19bbc:	ldp	x29, x30, [sp], #96
   19bc0:	ret
   19bc4:	ldr	x0, [x19, #8]
   19bc8:	stp	x21, x22, [sp, #32]
   19bcc:	add	x21, x20, #0x320
   19bd0:	add	x21, x21, #0x1a0
   19bd4:	cmp	x0, x21
   19bd8:	b.ne	19b74 <PyFloat_FromString@plt+0x130e4>  // b.any
   19bdc:	ldr	x0, [x19]
   19be0:	add	x0, x0, #0x1
   19be4:	str	x0, [x19]
   19be8:	ldr	x22, [sp, #72]
   19bec:	add	x21, x20, #0x320
   19bf0:	add	x21, x21, #0x1a0
   19bf4:	ldr	x0, [x22, #8]
   19bf8:	cmp	x0, x21
   19bfc:	b.eq	19c60 <PyFloat_FromString@plt+0x131d0>  // b.none
   19c00:	mov	x1, x21
   19c04:	bl	69c0 <PyType_IsSubtype@plt>
   19c08:	cbnz	w0, 19c60 <PyFloat_FromString@plt+0x131d0>
   19c0c:	ldr	x2, [x22, #8]
   19c10:	ldr	x0, [x2, #168]
   19c14:	tbnz	w0, #24, 19ce4 <PyFloat_FromString@plt+0x13254>
   19c18:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
   19c1c:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
   19c20:	ldr	x2, [x2, #24]
   19c24:	add	x1, x1, #0x8
   19c28:	ldr	x0, [x0, #3936]
   19c2c:	ldr	x0, [x0]
   19c30:	bl	6a10 <PyErr_Format@plt>
   19c34:	ldr	x0, [x19]
   19c38:	sub	x0, x0, #0x1
   19c3c:	str	x0, [x19]
   19c40:	cbz	x0, 19d00 <PyFloat_FromString@plt+0x13270>
   19c44:	ldp	x21, x22, [sp, #32]
   19c48:	ldr	x23, [sp, #48]
   19c4c:	mov	x20, #0x0                   	// #0
   19c50:	mov	x0, x20
   19c54:	ldp	x19, x20, [sp, #16]
   19c58:	ldp	x29, x30, [sp], #96
   19c5c:	ret
   19c60:	ldr	x0, [x22]
   19c64:	add	x0, x0, #0x1
   19c68:	str	x0, [x22]
   19c6c:	add	x20, x20, #0x320
   19c70:	add	x0, x20, #0x1a0
   19c74:	bl	6c60 <PyFloat_FromString@plt+0x1d0>
   19c78:	mov	x20, x0
   19c7c:	cbz	x0, 19d9c <PyFloat_FromString@plt+0x1330c>
   19c80:	ldr	x3, [sp, #80]
   19c84:	add	x0, x0, #0x18
   19c88:	add	x4, sp, #0x44
   19c8c:	add	x2, x22, #0x18
   19c90:	add	x1, x19, #0x18
   19c94:	add	x3, x3, #0x10
   19c98:	bl	2de28 <PyInit__decimal@@Base+0x138a8>
   19c9c:	ldr	x0, [x19]
   19ca0:	sub	x0, x0, #0x1
   19ca4:	str	x0, [x19]
   19ca8:	cbz	x0, 19d90 <PyFloat_FromString@plt+0x13300>
   19cac:	ldr	x0, [x22]
   19cb0:	sub	x0, x0, #0x1
   19cb4:	str	x0, [x22]
   19cb8:	cbz	x0, 19d84 <PyFloat_FromString@plt+0x132f4>
   19cbc:	ldr	w1, [sp, #68]
   19cc0:	ldr	x0, [sp, #80]
   19cc4:	bl	7f90 <PyFloat_FromString@plt+0x1500>
   19cc8:	cbnz	w0, 19dd0 <PyFloat_FromString@plt+0x13340>
   19ccc:	mov	x0, x20
   19cd0:	ldp	x19, x20, [sp, #16]
   19cd4:	ldp	x21, x22, [sp, #32]
   19cd8:	ldr	x23, [sp, #48]
   19cdc:	ldp	x29, x30, [sp], #96
   19ce0:	ret
   19ce4:	mov	x1, x22
   19ce8:	mov	x2, x23
   19cec:	mov	x0, x21
   19cf0:	bl	82f8 <PyFloat_FromString@plt+0x1868>
   19cf4:	mov	x22, x0
   19cf8:	cbnz	x0, 19c6c <PyFloat_FromString@plt+0x131dc>
   19cfc:	b	19c34 <PyFloat_FromString@plt+0x131a4>
   19d00:	mov	x0, x19
   19d04:	mov	x20, #0x0                   	// #0
   19d08:	bl	65d0 <_Py_Dealloc@plt>
   19d0c:	ldp	x21, x22, [sp, #32]
   19d10:	ldr	x23, [sp, #48]
   19d14:	b	19bb4 <PyFloat_FromString@plt+0x13124>
   19d18:	ldr	x23, [sp, #80]
   19d1c:	b	19bdc <PyFloat_FromString@plt+0x1314c>
   19d20:	adrp	x0, 5f000 <PyInit__decimal@@Base+0x44a80>
   19d24:	add	x2, sp, #0x58
   19d28:	mov	x1, #0x0                   	// #0
   19d2c:	ldr	x0, [x0, #1808]
   19d30:	bl	6740 <PyContextVar_Get@plt>
   19d34:	tbnz	w0, #31, 19e4c <PyFloat_FromString@plt+0x133bc>
   19d38:	ldr	x0, [sp, #88]
   19d3c:	cbz	x0, 19e14 <PyFloat_FromString@plt+0x13384>
   19d40:	stp	x21, x22, [sp, #32]
   19d44:	str	x0, [sp, #80]
   19d48:	ldr	x1, [x0]
   19d4c:	sub	x1, x1, #0x1
   19d50:	str	x1, [x0]
   19d54:	cbz	x1, 19e04 <PyFloat_FromString@plt+0x13374>
   19d58:	adrp	x20, 5d000 <PyInit__decimal@@Base+0x42a80>
   19d5c:	ldr	x23, [sp, #80]
   19d60:	b	19b60 <PyFloat_FromString@plt+0x130d0>
   19d64:	mov	x1, x19
   19d68:	mov	x2, x23
   19d6c:	mov	x0, x21
   19d70:	bl	82f8 <PyFloat_FromString@plt+0x1868>
   19d74:	mov	x19, x0
   19d78:	cbz	x0, 19c44 <PyFloat_FromString@plt+0x131b4>
   19d7c:	ldr	x23, [sp, #80]
   19d80:	b	19be8 <PyFloat_FromString@plt+0x13158>
   19d84:	mov	x0, x22
   19d88:	bl	65d0 <_Py_Dealloc@plt>
   19d8c:	b	19cbc <PyFloat_FromString@plt+0x1322c>
   19d90:	mov	x0, x19
   19d94:	bl	65d0 <_Py_Dealloc@plt>
   19d98:	b	19cac <PyFloat_FromString@plt+0x1321c>
   19d9c:	ldr	x0, [x19]
   19da0:	sub	x0, x0, #0x1
   19da4:	str	x0, [x19]
   19da8:	cbz	x0, 19df8 <PyFloat_FromString@plt+0x13368>
   19dac:	ldr	x0, [x22]
   19db0:	sub	x0, x0, #0x1
   19db4:	str	x0, [x22]
   19db8:	cbnz	x0, 19c44 <PyFloat_FromString@plt+0x131b4>
   19dbc:	mov	x0, x22
   19dc0:	bl	65d0 <_Py_Dealloc@plt>
   19dc4:	ldp	x21, x22, [sp, #32]
   19dc8:	ldr	x23, [sp, #48]
   19dcc:	b	19bb4 <PyFloat_FromString@plt+0x13124>
   19dd0:	ldr	x0, [x20]
   19dd4:	sub	x0, x0, #0x1
   19dd8:	str	x0, [x20]
   19ddc:	cbnz	x0, 19c44 <PyFloat_FromString@plt+0x131b4>
   19de0:	mov	x0, x20
   19de4:	mov	x20, #0x0                   	// #0
   19de8:	bl	65d0 <_Py_Dealloc@plt>
   19dec:	ldp	x21, x22, [sp, #32]
   19df0:	ldr	x23, [sp, #48]
   19df4:	b	19bb4 <PyFloat_FromString@plt+0x13124>
   19df8:	mov	x0, x19
   19dfc:	bl	65d0 <_Py_Dealloc@plt>
   19e00:	b	19dac <PyFloat_FromString@plt+0x1331c>
   19e04:	bl	65d0 <_Py_Dealloc@plt>
   19e08:	adrp	x20, 5d000 <PyInit__decimal@@Base+0x42a80>
   19e0c:	ldr	x23, [sp, #80]
   19e10:	b	19b60 <PyFloat_FromString@plt+0x130d0>
   19e14:	bl	7320 <PyFloat_FromString@plt+0x890>
   19e18:	str	x0, [sp, #80]
   19e1c:	cbz	x0, 19c48 <PyFloat_FromString@plt+0x131b8>
   19e20:	stp	x21, x22, [sp, #32]
   19e24:	b	19d48 <PyFloat_FromString@plt+0x132b8>
   19e28:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
   19e2c:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
   19e30:	mov	x20, #0x0                   	// #0
   19e34:	add	x1, x1, #0x88
   19e38:	ldr	x0, [x0, #3936]
   19e3c:	ldr	x0, [x0]
   19e40:	bl	6650 <PyErr_SetString@plt>
   19e44:	ldr	x23, [sp, #48]
   19e48:	b	19bb4 <PyFloat_FromString@plt+0x13124>
   19e4c:	mov	x20, #0x0                   	// #0
   19e50:	ldr	x23, [sp, #48]
   19e54:	b	19bb4 <PyFloat_FromString@plt+0x13124>
   19e58:	stp	x29, x30, [sp, #-96]!
   19e5c:	adrp	x3, 5d000 <PyInit__decimal@@Base+0x42a80>
   19e60:	add	x3, x3, #0x9a0
   19e64:	mov	x29, sp
   19e68:	stp	x19, x20, [sp, #16]
   19e6c:	adrp	x20, 5c000 <PyInit__decimal@@Base+0x41a80>
   19e70:	mov	x19, x0
   19e74:	ldr	x20, [x20, #4008]
   19e78:	mov	x0, x1
   19e7c:	add	x3, x3, #0x5c0
   19e80:	mov	x1, x2
   19e84:	add	x5, sp, #0x50
   19e88:	adrp	x2, 3c000 <PyInit__decimal@@Base+0x21a80>
   19e8c:	add	x4, sp, #0x48
   19e90:	add	x2, x2, #0x168
   19e94:	str	wzr, [sp, #68]
   19e98:	str	x20, [sp, #80]
   19e9c:	bl	6520 <PyArg_ParseTupleAndKeywords@plt>
   19ea0:	cbz	w0, 19fc4 <PyFloat_FromString@plt+0x13534>
   19ea4:	str	x23, [sp, #48]
   19ea8:	ldr	x23, [sp, #80]
   19eac:	cmp	x23, x20
   19eb0:	b.eq	1a098 <PyFloat_FromString@plt+0x13608>  // b.none
   19eb4:	ldr	x0, [x23, #8]
   19eb8:	adrp	x20, 5d000 <PyInit__decimal@@Base+0x42a80>
   19ebc:	add	x1, x20, #0x320
   19ec0:	cmp	x0, x1
   19ec4:	b.eq	19f3c <PyFloat_FromString@plt+0x134ac>  // b.none
   19ec8:	bl	69c0 <PyType_IsSubtype@plt>
   19ecc:	cbz	w0, 1a1a0 <PyFloat_FromString@plt+0x13710>
   19ed0:	ldr	x23, [sp, #80]
   19ed4:	stp	x21, x22, [sp, #32]
   19ed8:	add	x21, x20, #0x320
   19edc:	ldr	x0, [x19, #8]
   19ee0:	add	x21, x21, #0x1a0
   19ee4:	cmp	x0, x21
   19ee8:	b.eq	19f54 <PyFloat_FromString@plt+0x134c4>  // b.none
   19eec:	mov	x1, x21
   19ef0:	bl	69c0 <PyType_IsSubtype@plt>
   19ef4:	cbnz	w0, 1a090 <PyFloat_FromString@plt+0x13600>
   19ef8:	ldr	x2, [x19, #8]
   19efc:	ldr	x0, [x2, #168]
   19f00:	tbnz	w0, #24, 1a0dc <PyFloat_FromString@plt+0x1364c>
   19f04:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
   19f08:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
   19f0c:	ldr	x2, [x2, #24]
   19f10:	add	x1, x1, #0x8
   19f14:	ldr	x0, [x0, #3936]
   19f18:	mov	x20, #0x0                   	// #0
   19f1c:	ldr	x0, [x0]
   19f20:	bl	6a10 <PyErr_Format@plt>
   19f24:	ldp	x21, x22, [sp, #32]
   19f28:	ldr	x23, [sp, #48]
   19f2c:	mov	x0, x20
   19f30:	ldp	x19, x20, [sp, #16]
   19f34:	ldp	x29, x30, [sp], #96
   19f38:	ret
   19f3c:	ldr	x0, [x19, #8]
   19f40:	stp	x21, x22, [sp, #32]
   19f44:	add	x21, x20, #0x320
   19f48:	add	x21, x21, #0x1a0
   19f4c:	cmp	x0, x21
   19f50:	b.ne	19eec <PyFloat_FromString@plt+0x1345c>  // b.any
   19f54:	ldr	x0, [x19]
   19f58:	add	x0, x0, #0x1
   19f5c:	str	x0, [x19]
   19f60:	ldr	x22, [sp, #72]
   19f64:	add	x21, x20, #0x320
   19f68:	add	x21, x21, #0x1a0
   19f6c:	ldr	x0, [x22, #8]
   19f70:	cmp	x0, x21
   19f74:	b.eq	19fd8 <PyFloat_FromString@plt+0x13548>  // b.none
   19f78:	mov	x1, x21
   19f7c:	bl	69c0 <PyType_IsSubtype@plt>
   19f80:	cbnz	w0, 19fd8 <PyFloat_FromString@plt+0x13548>
   19f84:	ldr	x2, [x22, #8]
   19f88:	ldr	x0, [x2, #168]
   19f8c:	tbnz	w0, #24, 1a05c <PyFloat_FromString@plt+0x135cc>
   19f90:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
   19f94:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
   19f98:	ldr	x2, [x2, #24]
   19f9c:	add	x1, x1, #0x8
   19fa0:	ldr	x0, [x0, #3936]
   19fa4:	ldr	x0, [x0]
   19fa8:	bl	6a10 <PyErr_Format@plt>
   19fac:	ldr	x0, [x19]
   19fb0:	sub	x0, x0, #0x1
   19fb4:	str	x0, [x19]
   19fb8:	cbz	x0, 1a078 <PyFloat_FromString@plt+0x135e8>
   19fbc:	ldp	x21, x22, [sp, #32]
   19fc0:	ldr	x23, [sp, #48]
   19fc4:	mov	x20, #0x0                   	// #0
   19fc8:	mov	x0, x20
   19fcc:	ldp	x19, x20, [sp, #16]
   19fd0:	ldp	x29, x30, [sp], #96
   19fd4:	ret
   19fd8:	ldr	x0, [x22]
   19fdc:	add	x0, x0, #0x1
   19fe0:	str	x0, [x22]
   19fe4:	add	x20, x20, #0x320
   19fe8:	add	x0, x20, #0x1a0
   19fec:	bl	6c60 <PyFloat_FromString@plt+0x1d0>
   19ff0:	mov	x20, x0
   19ff4:	cbz	x0, 1a114 <PyFloat_FromString@plt+0x13684>
   19ff8:	ldr	x3, [sp, #80]
   19ffc:	add	x4, sp, #0x44
   1a000:	add	x2, x22, #0x18
   1a004:	add	x1, x19, #0x18
   1a008:	add	x0, x0, #0x18
   1a00c:	add	x3, x3, #0x10
   1a010:	bl	29fa0 <PyInit__decimal@@Base+0xfa20>
   1a014:	ldr	x0, [x19]
   1a018:	sub	x0, x0, #0x1
   1a01c:	str	x0, [x19]
   1a020:	cbz	x0, 1a108 <PyFloat_FromString@plt+0x13678>
   1a024:	ldr	x0, [x22]
   1a028:	sub	x0, x0, #0x1
   1a02c:	str	x0, [x22]
   1a030:	cbz	x0, 1a0fc <PyFloat_FromString@plt+0x1366c>
   1a034:	ldr	w1, [sp, #68]
   1a038:	ldr	x0, [sp, #80]
   1a03c:	bl	7f90 <PyFloat_FromString@plt+0x1500>
   1a040:	cbnz	w0, 1a148 <PyFloat_FromString@plt+0x136b8>
   1a044:	mov	x0, x20
   1a048:	ldp	x19, x20, [sp, #16]
   1a04c:	ldp	x21, x22, [sp, #32]
   1a050:	ldr	x23, [sp, #48]
   1a054:	ldp	x29, x30, [sp], #96
   1a058:	ret
   1a05c:	mov	x1, x22
   1a060:	mov	x2, x23
   1a064:	mov	x0, x21
   1a068:	bl	82f8 <PyFloat_FromString@plt+0x1868>
   1a06c:	mov	x22, x0
   1a070:	cbnz	x0, 19fe4 <PyFloat_FromString@plt+0x13554>
   1a074:	b	19fac <PyFloat_FromString@plt+0x1351c>
   1a078:	mov	x0, x19
   1a07c:	mov	x20, #0x0                   	// #0
   1a080:	bl	65d0 <_Py_Dealloc@plt>
   1a084:	ldp	x21, x22, [sp, #32]
   1a088:	ldr	x23, [sp, #48]
   1a08c:	b	19f2c <PyFloat_FromString@plt+0x1349c>
   1a090:	ldr	x23, [sp, #80]
   1a094:	b	19f54 <PyFloat_FromString@plt+0x134c4>
   1a098:	adrp	x0, 5f000 <PyInit__decimal@@Base+0x44a80>
   1a09c:	add	x2, sp, #0x58
   1a0a0:	mov	x1, #0x0                   	// #0
   1a0a4:	ldr	x0, [x0, #1808]
   1a0a8:	bl	6740 <PyContextVar_Get@plt>
   1a0ac:	tbnz	w0, #31, 1a1c4 <PyFloat_FromString@plt+0x13734>
   1a0b0:	ldr	x0, [sp, #88]
   1a0b4:	cbz	x0, 1a18c <PyFloat_FromString@plt+0x136fc>
   1a0b8:	stp	x21, x22, [sp, #32]
   1a0bc:	str	x0, [sp, #80]
   1a0c0:	ldr	x1, [x0]
   1a0c4:	sub	x1, x1, #0x1
   1a0c8:	str	x1, [x0]
   1a0cc:	cbz	x1, 1a17c <PyFloat_FromString@plt+0x136ec>
   1a0d0:	adrp	x20, 5d000 <PyInit__decimal@@Base+0x42a80>
   1a0d4:	ldr	x23, [sp, #80]
   1a0d8:	b	19ed8 <PyFloat_FromString@plt+0x13448>
   1a0dc:	mov	x1, x19
   1a0e0:	mov	x2, x23
   1a0e4:	mov	x0, x21
   1a0e8:	bl	82f8 <PyFloat_FromString@plt+0x1868>
   1a0ec:	mov	x19, x0
   1a0f0:	cbz	x0, 19fbc <PyFloat_FromString@plt+0x1352c>
   1a0f4:	ldr	x23, [sp, #80]
   1a0f8:	b	19f60 <PyFloat_FromString@plt+0x134d0>
   1a0fc:	mov	x0, x22
   1a100:	bl	65d0 <_Py_Dealloc@plt>
   1a104:	b	1a034 <PyFloat_FromString@plt+0x135a4>
   1a108:	mov	x0, x19
   1a10c:	bl	65d0 <_Py_Dealloc@plt>
   1a110:	b	1a024 <PyFloat_FromString@plt+0x13594>
   1a114:	ldr	x0, [x19]
   1a118:	sub	x0, x0, #0x1
   1a11c:	str	x0, [x19]
   1a120:	cbz	x0, 1a170 <PyFloat_FromString@plt+0x136e0>
   1a124:	ldr	x0, [x22]
   1a128:	sub	x0, x0, #0x1
   1a12c:	str	x0, [x22]
   1a130:	cbnz	x0, 19fbc <PyFloat_FromString@plt+0x1352c>
   1a134:	mov	x0, x22
   1a138:	bl	65d0 <_Py_Dealloc@plt>
   1a13c:	ldp	x21, x22, [sp, #32]
   1a140:	ldr	x23, [sp, #48]
   1a144:	b	19f2c <PyFloat_FromString@plt+0x1349c>
   1a148:	ldr	x0, [x20]
   1a14c:	sub	x0, x0, #0x1
   1a150:	str	x0, [x20]
   1a154:	cbnz	x0, 19fbc <PyFloat_FromString@plt+0x1352c>
   1a158:	mov	x0, x20
   1a15c:	mov	x20, #0x0                   	// #0
   1a160:	bl	65d0 <_Py_Dealloc@plt>
   1a164:	ldp	x21, x22, [sp, #32]
   1a168:	ldr	x23, [sp, #48]
   1a16c:	b	19f2c <PyFloat_FromString@plt+0x1349c>
   1a170:	mov	x0, x19
   1a174:	bl	65d0 <_Py_Dealloc@plt>
   1a178:	b	1a124 <PyFloat_FromString@plt+0x13694>
   1a17c:	bl	65d0 <_Py_Dealloc@plt>
   1a180:	adrp	x20, 5d000 <PyInit__decimal@@Base+0x42a80>
   1a184:	ldr	x23, [sp, #80]
   1a188:	b	19ed8 <PyFloat_FromString@plt+0x13448>
   1a18c:	bl	7320 <PyFloat_FromString@plt+0x890>
   1a190:	str	x0, [sp, #80]
   1a194:	cbz	x0, 19fc0 <PyFloat_FromString@plt+0x13530>
   1a198:	stp	x21, x22, [sp, #32]
   1a19c:	b	1a0c0 <PyFloat_FromString@plt+0x13630>
   1a1a0:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
   1a1a4:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
   1a1a8:	mov	x20, #0x0                   	// #0
   1a1ac:	add	x1, x1, #0x88
   1a1b0:	ldr	x0, [x0, #3936]
   1a1b4:	ldr	x0, [x0]
   1a1b8:	bl	6650 <PyErr_SetString@plt>
   1a1bc:	ldr	x23, [sp, #48]
   1a1c0:	b	19f2c <PyFloat_FromString@plt+0x1349c>
   1a1c4:	mov	x20, #0x0                   	// #0
   1a1c8:	ldr	x23, [sp, #48]
   1a1cc:	b	19f2c <PyFloat_FromString@plt+0x1349c>
   1a1d0:	stp	x29, x30, [sp, #-144]!
   1a1d4:	adrp	x3, 5d000 <PyInit__decimal@@Base+0x42a80>
   1a1d8:	add	x3, x3, #0x9a0
   1a1dc:	mov	x29, sp
   1a1e0:	stp	x21, x22, [sp, #32]
   1a1e4:	adrp	x21, 5c000 <PyInit__decimal@@Base+0x41a80>
   1a1e8:	add	x3, x3, #0x5d8
   1a1ec:	ldr	x22, [x21, #4008]
   1a1f0:	add	x6, sp, #0x50
   1a1f4:	add	x5, sp, #0x48
   1a1f8:	add	x4, sp, #0x58
   1a1fc:	stp	x19, x20, [sp, #16]
   1a200:	mov	x19, x0
   1a204:	mov	x0, x1
   1a208:	mov	x1, x2
   1a20c:	adrp	x2, 3c000 <PyInit__decimal@@Base+0x21a80>
   1a210:	add	x2, x2, #0x320
   1a214:	str	wzr, [sp, #68]
   1a218:	stp	x22, x22, [sp, #72]
   1a21c:	bl	6520 <PyArg_ParseTupleAndKeywords@plt>
   1a220:	cbz	w0, 1a378 <PyFloat_FromString@plt+0x138e8>
   1a224:	ldr	x20, [sp, #80]
   1a228:	cmp	x20, x22
   1a22c:	b.eq	1a450 <PyFloat_FromString@plt+0x139c0>  // b.none
   1a230:	ldr	x0, [x20, #8]
   1a234:	adrp	x1, 5d000 <PyInit__decimal@@Base+0x42a80>
   1a238:	add	x1, x1, #0x320
   1a23c:	add	x22, sp, #0x60
   1a240:	cmp	x0, x1
   1a244:	b.eq	1a258 <PyFloat_FromString@plt+0x137c8>  // b.none
   1a248:	bl	69c0 <PyType_IsSubtype@plt>
   1a24c:	cbz	w0, 1a550 <PyFloat_FromString@plt+0x13ac0>
   1a250:	ldr	x20, [sp, #80]
   1a254:	add	x22, sp, #0x60
   1a258:	ldp	x2, x3, [x20, #16]
   1a25c:	stp	x2, x3, [sp, #96]
   1a260:	ldp	x2, x3, [x20, #32]
   1a264:	stp	x2, x3, [sp, #112]
   1a268:	ldr	x21, [x21, #4008]
   1a26c:	ldp	x2, x3, [x20, #48]
   1a270:	stp	x2, x3, [sp, #128]
   1a274:	ldr	x0, [sp, #72]
   1a278:	cmp	x0, x21
   1a27c:	b.eq	1a410 <PyFloat_FromString@plt+0x13980>  // b.none
   1a280:	bl	9178 <PyFloat_FromString@plt+0x26e8>
   1a284:	mov	w1, w0
   1a288:	tbnz	w0, #31, 1a378 <PyFloat_FromString@plt+0x138e8>
   1a28c:	mov	x0, x22
   1a290:	bl	1d6d0 <PyInit__decimal@@Base+0x3150>
   1a294:	cbz	w0, 1a520 <PyFloat_FromString@plt+0x13a90>
   1a298:	ldr	x20, [sp, #80]
   1a29c:	stp	x23, x24, [sp, #48]
   1a2a0:	adrp	x24, 5d000 <PyInit__decimal@@Base+0x42a80>
   1a2a4:	ldr	x0, [x19, #8]
   1a2a8:	add	x21, x24, #0x320
   1a2ac:	add	x21, x21, #0x1a0
   1a2b0:	cmp	x0, x21
   1a2b4:	b.eq	1a30c <PyFloat_FromString@plt+0x1387c>  // b.none
   1a2b8:	mov	x1, x21
   1a2bc:	bl	69c0 <PyType_IsSubtype@plt>
   1a2c0:	cbnz	w0, 1a308 <PyFloat_FromString@plt+0x13878>
   1a2c4:	ldr	x2, [x19, #8]
   1a2c8:	ldr	x0, [x2, #168]
   1a2cc:	tbnz	w0, #24, 1a418 <PyFloat_FromString@plt+0x13988>
   1a2d0:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
   1a2d4:	mov	x20, #0x0                   	// #0
   1a2d8:	ldr	x2, [x2, #24]
   1a2dc:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
   1a2e0:	ldr	x0, [x0, #3936]
   1a2e4:	add	x1, x1, #0x8
   1a2e8:	ldr	x0, [x0]
   1a2ec:	bl	6a10 <PyErr_Format@plt>
   1a2f0:	mov	x0, x20
   1a2f4:	ldp	x19, x20, [sp, #16]
   1a2f8:	ldp	x21, x22, [sp, #32]
   1a2fc:	ldp	x23, x24, [sp, #48]
   1a300:	ldp	x29, x30, [sp], #144
   1a304:	ret
   1a308:	ldr	x20, [sp, #80]
   1a30c:	ldr	x0, [x19]
   1a310:	add	x0, x0, #0x1
   1a314:	str	x0, [x19]
   1a318:	ldr	x23, [sp, #88]
   1a31c:	add	x21, x24, #0x320
   1a320:	add	x21, x21, #0x1a0
   1a324:	ldr	x0, [x23, #8]
   1a328:	cmp	x0, x21
   1a32c:	b.eq	1a390 <PyFloat_FromString@plt+0x13900>  // b.none
   1a330:	mov	x1, x21
   1a334:	bl	69c0 <PyType_IsSubtype@plt>
   1a338:	cbnz	w0, 1a390 <PyFloat_FromString@plt+0x13900>
   1a33c:	ldr	x2, [x23, #8]
   1a340:	ldr	x0, [x2, #168]
   1a344:	tbnz	w0, #24, 1a490 <PyFloat_FromString@plt+0x13a00>
   1a348:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
   1a34c:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
   1a350:	ldr	x2, [x2, #24]
   1a354:	add	x1, x1, #0x8
   1a358:	ldr	x0, [x0, #3936]
   1a35c:	ldr	x0, [x0]
   1a360:	bl	6a10 <PyErr_Format@plt>
   1a364:	ldr	x0, [x19]
   1a368:	sub	x0, x0, #0x1
   1a36c:	str	x0, [x19]
   1a370:	cbz	x0, 1a4ac <PyFloat_FromString@plt+0x13a1c>
   1a374:	ldp	x23, x24, [sp, #48]
   1a378:	mov	x20, #0x0                   	// #0
   1a37c:	mov	x0, x20
   1a380:	ldp	x19, x20, [sp, #16]
   1a384:	ldp	x21, x22, [sp, #32]
   1a388:	ldp	x29, x30, [sp], #144
   1a38c:	ret
   1a390:	ldr	x0, [x23]
   1a394:	add	x0, x0, #0x1
   1a398:	str	x0, [x23]
   1a39c:	add	x0, x24, #0x320
   1a3a0:	add	x0, x0, #0x1a0
   1a3a4:	bl	6c60 <PyFloat_FromString@plt+0x1d0>
   1a3a8:	mov	x20, x0
   1a3ac:	cbz	x0, 1a4c0 <PyFloat_FromString@plt+0x13a30>
   1a3b0:	add	x0, x0, #0x18
   1a3b4:	mov	x3, x22
   1a3b8:	add	x4, sp, #0x44
   1a3bc:	add	x2, x23, #0x18
   1a3c0:	add	x1, x19, #0x18
   1a3c4:	bl	360e0 <PyInit__decimal@@Base+0x1bb60>
   1a3c8:	ldr	x0, [x19]
   1a3cc:	sub	x0, x0, #0x1
   1a3d0:	str	x0, [x19]
   1a3d4:	cbz	x0, 1a444 <PyFloat_FromString@plt+0x139b4>
   1a3d8:	ldr	x0, [x23]
   1a3dc:	sub	x0, x0, #0x1
   1a3e0:	str	x0, [x23]
   1a3e4:	cbz	x0, 1a438 <PyFloat_FromString@plt+0x139a8>
   1a3e8:	ldr	w1, [sp, #68]
   1a3ec:	ldr	x0, [sp, #80]
   1a3f0:	bl	7f90 <PyFloat_FromString@plt+0x1500>
   1a3f4:	cbnz	w0, 1a4f0 <PyFloat_FromString@plt+0x13a60>
   1a3f8:	mov	x0, x20
   1a3fc:	ldp	x19, x20, [sp, #16]
   1a400:	ldp	x21, x22, [sp, #32]
   1a404:	ldp	x23, x24, [sp, #48]
   1a408:	ldp	x29, x30, [sp], #144
   1a40c:	ret
   1a410:	stp	x23, x24, [sp, #48]
   1a414:	b	1a2a0 <PyFloat_FromString@plt+0x13810>
   1a418:	mov	x1, x19
   1a41c:	mov	x2, x20
   1a420:	mov	x0, x21
   1a424:	bl	82f8 <PyFloat_FromString@plt+0x1868>
   1a428:	mov	x19, x0
   1a42c:	cbz	x0, 1a374 <PyFloat_FromString@plt+0x138e4>
   1a430:	ldr	x20, [sp, #80]
   1a434:	b	1a318 <PyFloat_FromString@plt+0x13888>
   1a438:	mov	x0, x23
   1a43c:	bl	65d0 <_Py_Dealloc@plt>
   1a440:	b	1a3e8 <PyFloat_FromString@plt+0x13958>
   1a444:	mov	x0, x19
   1a448:	bl	65d0 <_Py_Dealloc@plt>
   1a44c:	b	1a3d8 <PyFloat_FromString@plt+0x13948>
   1a450:	adrp	x0, 5f000 <PyInit__decimal@@Base+0x44a80>
   1a454:	add	x22, sp, #0x60
   1a458:	mov	x2, x22
   1a45c:	mov	x1, #0x0                   	// #0
   1a460:	ldr	x0, [x0, #1808]
   1a464:	bl	6740 <PyContextVar_Get@plt>
   1a468:	tbnz	w0, #31, 1a378 <PyFloat_FromString@plt+0x138e8>
   1a46c:	ldr	x0, [sp, #96]
   1a470:	cbz	x0, 1a540 <PyFloat_FromString@plt+0x13ab0>
   1a474:	str	x0, [sp, #80]
   1a478:	ldr	x1, [x0]
   1a47c:	sub	x1, x1, #0x1
   1a480:	str	x1, [x0]
   1a484:	cbz	x1, 1a514 <PyFloat_FromString@plt+0x13a84>
   1a488:	ldr	x20, [sp, #80]
   1a48c:	b	1a258 <PyFloat_FromString@plt+0x137c8>
   1a490:	mov	x1, x23
   1a494:	mov	x2, x20
   1a498:	mov	x0, x21
   1a49c:	bl	82f8 <PyFloat_FromString@plt+0x1868>
   1a4a0:	mov	x23, x0
   1a4a4:	cbnz	x0, 1a39c <PyFloat_FromString@plt+0x1390c>
   1a4a8:	b	1a364 <PyFloat_FromString@plt+0x138d4>
   1a4ac:	mov	x0, x19
   1a4b0:	mov	x20, #0x0                   	// #0
   1a4b4:	bl	65d0 <_Py_Dealloc@plt>
   1a4b8:	ldp	x23, x24, [sp, #48]
   1a4bc:	b	1a37c <PyFloat_FromString@plt+0x138ec>
   1a4c0:	ldr	x0, [x19]
   1a4c4:	sub	x0, x0, #0x1
   1a4c8:	str	x0, [x19]
   1a4cc:	cbz	x0, 1a570 <PyFloat_FromString@plt+0x13ae0>
   1a4d0:	ldr	x0, [x23]
   1a4d4:	sub	x0, x0, #0x1
   1a4d8:	str	x0, [x23]
   1a4dc:	cbnz	x0, 1a374 <PyFloat_FromString@plt+0x138e4>
   1a4e0:	mov	x0, x23
   1a4e4:	bl	65d0 <_Py_Dealloc@plt>
   1a4e8:	ldp	x23, x24, [sp, #48]
   1a4ec:	b	1a37c <PyFloat_FromString@plt+0x138ec>
   1a4f0:	ldr	x0, [x20]
   1a4f4:	sub	x0, x0, #0x1
   1a4f8:	str	x0, [x20]
   1a4fc:	cbnz	x0, 1a374 <PyFloat_FromString@plt+0x138e4>
   1a500:	mov	x0, x20
   1a504:	mov	x20, #0x0                   	// #0
   1a508:	bl	65d0 <_Py_Dealloc@plt>
   1a50c:	ldp	x23, x24, [sp, #48]
   1a510:	b	1a37c <PyFloat_FromString@plt+0x138ec>
   1a514:	bl	65d0 <_Py_Dealloc@plt>
   1a518:	ldr	x20, [sp, #80]
   1a51c:	b	1a258 <PyFloat_FromString@plt+0x137c8>
   1a520:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
   1a524:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
   1a528:	mov	x20, #0x0                   	// #0
   1a52c:	add	x1, x1, #0x328
   1a530:	ldr	x0, [x0, #3920]
   1a534:	ldr	x0, [x0]
   1a538:	bl	6650 <PyErr_SetString@plt>
   1a53c:	b	1a37c <PyFloat_FromString@plt+0x138ec>
   1a540:	bl	7320 <PyFloat_FromString@plt+0x890>
   1a544:	str	x0, [sp, #80]
   1a548:	cbnz	x0, 1a478 <PyFloat_FromString@plt+0x139e8>
   1a54c:	b	1a378 <PyFloat_FromString@plt+0x138e8>
   1a550:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
   1a554:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
   1a558:	mov	x20, #0x0                   	// #0
   1a55c:	add	x1, x1, #0x88
   1a560:	ldr	x0, [x0, #3936]
   1a564:	ldr	x0, [x0]
   1a568:	bl	6650 <PyErr_SetString@plt>
   1a56c:	b	1a37c <PyFloat_FromString@plt+0x138ec>
   1a570:	mov	x0, x19
   1a574:	bl	65d0 <_Py_Dealloc@plt>
   1a578:	b	1a4d0 <PyFloat_FromString@plt+0x13a40>
   1a57c:	nop

000000000001a580 <PyInit__decimal@@Base>:
   1a580:	stp	x29, x30, [sp, #-176]!
   1a584:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41a80>
   1a588:	adrp	x2, 5c000 <PyInit__decimal@@Base+0x41a80>
   1a58c:	mov	x29, sp
   1a590:	adrp	x5, 5f000 <PyInit__decimal@@Base+0x44a80>
   1a594:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
   1a598:	ldr	x1, [x1, #3888]
   1a59c:	adrp	x6, 5f000 <PyInit__decimal@@Base+0x44a80>
   1a5a0:	ldr	x2, [x2, #4064]
   1a5a4:	str	x1, [x5, #1704]
   1a5a8:	ldr	x0, [x0, #3944]
   1a5ac:	adrp	x1, 25000 <PyInit__decimal@@Base+0xaa80>
   1a5b0:	add	x1, x1, #0x200
   1a5b4:	adrp	x7, 5f000 <PyInit__decimal@@Base+0x44a80>
   1a5b8:	adrp	x4, 5f000 <PyInit__decimal@@Base+0x44a80>
   1a5bc:	adrp	x3, 5f000 <PyInit__decimal@@Base+0x44a80>
   1a5c0:	stp	x19, x20, [sp, #16]
   1a5c4:	adrp	x19, 5f000 <PyInit__decimal@@Base+0x44a80>
   1a5c8:	add	x20, x19, #0x6c0
   1a5cc:	str	x0, [x6, #1696]
   1a5d0:	adrp	x0, 6000 <memcpy@plt-0x470>
   1a5d4:	add	x0, x0, #0xb78
   1a5d8:	str	x1, [x3, #1688]
   1a5dc:	str	x0, [x4, #1424]
   1a5e0:	mov	x0, #0x4                   	// #4
   1a5e4:	str	x2, [x7, #1680]
   1a5e8:	stp	x21, x22, [sp, #32]
   1a5ec:	stp	x23, x24, [sp, #48]
   1a5f0:	stp	x27, x28, [sp, #80]
   1a5f4:	bl	1d350 <PyInit__decimal@@Base+0x2dd0>
   1a5f8:	mov	x1, #0x0                   	// #0
   1a5fc:	adrp	x0, 3c000 <PyInit__decimal@@Base+0x21a80>
   1a600:	add	x0, x0, #0x350
   1a604:	bl	6760 <PyContextVar_New@plt>
   1a608:	str	x0, [x20, #80]
   1a60c:	cbz	x0, 1ab20 <PyInit__decimal@@Base+0x5a0>
   1a610:	adrp	x21, 5c000 <PyInit__decimal@@Base+0x41a80>
   1a614:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
   1a618:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
   1a61c:	add	x1, x1, #0x360
   1a620:	ldr	x21, [x21, #4040]
   1a624:	ldr	x0, [x0, #3864]
   1a628:	ldr	x2, [x21, #96]
   1a62c:	ldr	x3, [x0, #96]
   1a630:	ldr	x4, [x2, #16]
   1a634:	str	x4, [x20, #160]
   1a638:	ldr	x4, [x2, #40]
   1a63c:	str	x4, [x20, #152]
   1a640:	ldr	x3, [x3, #64]
   1a644:	str	x3, [x20, #120]
   1a648:	ldr	x2, [x2, #232]
   1a64c:	str	x2, [x20, #168]
   1a650:	ldr	x0, [x0, #232]
   1a654:	bl	9848 <PyFloat_FromString@plt+0x2db8>
   1a658:	str	x0, [x20, #128]
   1a65c:	cbz	x0, 1ab20 <PyInit__decimal@@Base+0x5a0>
   1a660:	ldr	x0, [x21, #232]
   1a664:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
   1a668:	add	x1, x1, #0x378
   1a66c:	bl	9848 <PyFloat_FromString@plt+0x2db8>
   1a670:	str	x0, [x20, #136]
   1a674:	cbz	x0, 1ab20 <PyInit__decimal@@Base+0x5a0>
   1a678:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41a80>
   1a67c:	adrp	x21, 5d000 <PyInit__decimal@@Base+0x42a80>
   1a680:	add	x20, x21, #0x320
   1a684:	ldr	x1, [x1, #4032]
   1a688:	add	x22, x20, #0x1a0
   1a68c:	add	x24, x20, #0x340
   1a690:	add	x23, x20, #0x4e0
   1a694:	mov	x0, x22
   1a698:	str	x1, [x20, #256]
   1a69c:	str	x1, [x20, #672]
   1a6a0:	str	x1, [x20, #1088]
   1a6a4:	str	x1, [x20, #1504]
   1a6a8:	bl	66c0 <PyType_Ready@plt>
   1a6ac:	tbnz	w0, #31, 1ab20 <PyInit__decimal@@Base+0x5a0>
   1a6b0:	mov	x0, x20
   1a6b4:	bl	66c0 <PyType_Ready@plt>
   1a6b8:	tbnz	w0, #31, 1ab20 <PyInit__decimal@@Base+0x5a0>
   1a6bc:	mov	x0, x23
   1a6c0:	bl	66c0 <PyType_Ready@plt>
   1a6c4:	tbnz	w0, #31, 1ab20 <PyInit__decimal@@Base+0x5a0>
   1a6c8:	mov	x0, x24
   1a6cc:	bl	66c0 <PyType_Ready@plt>
   1a6d0:	tbnz	w0, #31, 1ab20 <PyInit__decimal@@Base+0x5a0>
   1a6d4:	stp	x25, x26, [sp, #64]
   1a6d8:	adrp	x25, 3c000 <PyInit__decimal@@Base+0x21a80>
   1a6dc:	add	x0, x25, #0x388
   1a6e0:	bl	6960 <PyUnicode_FromString@plt>
   1a6e4:	mov	x23, x0
   1a6e8:	cbz	x0, 1ab18 <PyInit__decimal@@Base+0x598>
   1a6ec:	mov	x2, x0
   1a6f0:	adrp	x26, 3c000 <PyInit__decimal@@Base+0x21a80>
   1a6f4:	ldr	x0, [x20, #680]
   1a6f8:	add	x22, x26, #0x390
   1a6fc:	mov	x1, x22
   1a700:	bl	64c0 <PyDict_SetItemString@plt>
   1a704:	tbnz	w0, #31, 1ad24 <PyInit__decimal@@Base+0x7a4>
   1a708:	ldr	x0, [x20, #264]
   1a70c:	mov	x1, x22
   1a710:	mov	x2, x23
   1a714:	bl	64c0 <PyDict_SetItemString@plt>
   1a718:	tbnz	w0, #31, 1ad24 <PyInit__decimal@@Base+0x7a4>
   1a71c:	ldr	x0, [x23]
   1a720:	sub	x0, x0, #0x1
   1a724:	str	x0, [x23]
   1a728:	cbz	x0, 1ad80 <PyInit__decimal@@Base+0x800>
   1a72c:	adrp	x0, 3c000 <PyInit__decimal@@Base+0x21a80>
   1a730:	add	x0, x0, #0x3a0
   1a734:	bl	6830 <PyImport_ImportModule@plt>
   1a738:	mov	x20, x0
   1a73c:	cbz	x0, 1ab18 <PyInit__decimal@@Base+0x598>
   1a740:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
   1a744:	add	x1, x1, #0x3a8
   1a748:	bl	6580 <PyObject_GetAttrString@plt>
   1a74c:	mov	x22, x0
   1a750:	cbz	x0, 1acfc <PyInit__decimal@@Base+0x77c>
   1a754:	add	x3, x21, #0x320
   1a758:	adrp	x2, 3c000 <PyInit__decimal@@Base+0x21a80>
   1a75c:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
   1a760:	add	x3, x3, #0x1a0
   1a764:	add	x2, x2, #0x3b0
   1a768:	add	x1, x1, #0x3b8
   1a76c:	bl	6550 <PyObject_CallMethod@plt>
   1a770:	cbz	x0, 1ad8c <PyInit__decimal@@Base+0x80c>
   1a774:	ldr	x2, [x0]
   1a778:	sub	x2, x2, #0x1
   1a77c:	str	x2, [x0]
   1a780:	cbz	x2, 1adfc <PyInit__decimal@@Base+0x87c>
   1a784:	mov	x0, x20
   1a788:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
   1a78c:	add	x1, x1, #0x3c8
   1a790:	bl	6580 <PyObject_GetAttrString@plt>
   1a794:	add	x1, x19, #0x6c0
   1a798:	str	x0, [x1, #144]
   1a79c:	cbz	x0, 1ad8c <PyInit__decimal@@Base+0x80c>
   1a7a0:	ldr	x0, [x20]
   1a7a4:	sub	x0, x0, #0x1
   1a7a8:	str	x0, [x20]
   1a7ac:	cbz	x0, 1ae10 <PyInit__decimal@@Base+0x890>
   1a7b0:	ldr	x0, [x22]
   1a7b4:	sub	x0, x0, #0x1
   1a7b8:	str	x0, [x22]
   1a7bc:	cbz	x0, 1ae04 <PyInit__decimal@@Base+0x884>
   1a7c0:	adrp	x0, 3c000 <PyInit__decimal@@Base+0x21a80>
   1a7c4:	add	x0, x0, #0x3d8
   1a7c8:	bl	6830 <PyImport_ImportModule@plt>
   1a7cc:	mov	x22, x0
   1a7d0:	cbz	x0, 1ab18 <PyInit__decimal@@Base+0x598>
   1a7d4:	add	x20, x19, #0x6c0
   1a7d8:	adrp	x4, 3c000 <PyInit__decimal@@Base+0x21a80>
   1a7dc:	adrp	x24, 3c000 <PyInit__decimal@@Base+0x21a80>
   1a7e0:	add	x4, x4, #0x3e8
   1a7e4:	add	x3, x24, #0x400
   1a7e8:	adrp	x2, 3c000 <PyInit__decimal@@Base+0x21a80>
   1a7ec:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
   1a7f0:	add	x2, x2, #0x410
   1a7f4:	add	x1, x1, #0x418
   1a7f8:	bl	6550 <PyObject_CallMethod@plt>
   1a7fc:	str	x0, [x20, #104]
   1a800:	cbz	x0, 1adc8 <PyInit__decimal@@Base+0x848>
   1a804:	add	x0, x25, #0x388
   1a808:	bl	6960 <PyUnicode_FromString@plt>
   1a80c:	mov	x23, x0
   1a810:	cbz	x0, 1adc8 <PyInit__decimal@@Base+0x848>
   1a814:	mov	x2, x0
   1a818:	add	x1, x26, #0x390
   1a81c:	ldr	x0, [x20, #104]
   1a820:	ldr	x0, [x0, #264]
   1a824:	bl	64c0 <PyDict_SetItemString@plt>
   1a828:	tbnz	w0, #31, 1ae1c <PyInit__decimal@@Base+0x89c>
   1a82c:	ldr	x0, [x23]
   1a830:	sub	x0, x0, #0x1
   1a834:	str	x0, [x23]
   1a838:	cbz	x0, 1ae28 <PyInit__decimal@@Base+0x8a8>
   1a83c:	adrp	x0, 3c000 <PyInit__decimal@@Base+0x21a80>
   1a840:	add	x0, x0, #0x428
   1a844:	bl	6830 <PyImport_ImportModule@plt>
   1a848:	mov	x23, x0
   1a84c:	cbz	x0, 1adc8 <PyInit__decimal@@Base+0x848>
   1a850:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
   1a854:	add	x1, x1, #0x438
   1a858:	bl	6580 <PyObject_GetAttrString@plt>
   1a85c:	mov	x20, x0
   1a860:	cbz	x0, 1add0 <PyInit__decimal@@Base+0x850>
   1a864:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
   1a868:	add	x3, x21, #0x320
   1a86c:	add	x3, x3, #0x4e0
   1a870:	mov	x4, x20
   1a874:	ldr	x0, [x0, #4000]
   1a878:	adrp	x2, 3c000 <PyInit__decimal@@Base+0x21a80>
   1a87c:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
   1a880:	add	x2, x2, #0x448
   1a884:	add	x1, x1, #0x458
   1a888:	bl	6790 <PyObject_CallFunction@plt>
   1a88c:	add	x1, x19, #0x6c0
   1a890:	str	x0, [x1, #112]
   1a894:	cbz	x0, 1add0 <PyInit__decimal@@Base+0x850>
   1a898:	ldr	x0, [x22]
   1a89c:	sub	x0, x0, #0x1
   1a8a0:	str	x0, [x22]
   1a8a4:	cbz	x0, 1ae54 <PyInit__decimal@@Base+0x8d4>
   1a8a8:	ldr	x0, [x23]
   1a8ac:	sub	x0, x0, #0x1
   1a8b0:	str	x0, [x23]
   1a8b4:	cbz	x0, 1ae48 <PyInit__decimal@@Base+0x8c8>
   1a8b8:	ldr	x0, [x20]
   1a8bc:	sub	x0, x0, #0x1
   1a8c0:	str	x0, [x20]
   1a8c4:	cbz	x0, 1ae3c <PyInit__decimal@@Base+0x8bc>
   1a8c8:	adrp	x26, 5d000 <PyInit__decimal@@Base+0x42a80>
   1a8cc:	add	x22, x26, #0x9a0
   1a8d0:	add	x0, x22, #0x648
   1a8d4:	mov	w1, #0x3f5                 	// #1013
   1a8d8:	bl	67f0 <PyModule_Create2@plt>
   1a8dc:	mov	x28, x0
   1a8e0:	cbz	x0, 1ab18 <PyInit__decimal@@Base+0x598>
   1a8e4:	add	x20, x21, #0x320
   1a8e8:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
   1a8ec:	add	x2, x20, #0x1a0
   1a8f0:	add	x1, x1, #0xbf8
   1a8f4:	ldr	x3, [x20, #416]
   1a8f8:	add	x3, x3, #0x1
   1a8fc:	str	x3, [x20, #416]
   1a900:	bl	6990 <PyModule_AddObject@plt>
   1a904:	tbnz	w0, #31, 1ae34 <PyInit__decimal@@Base+0x8b4>
   1a908:	ldr	x3, [x21, #800]
   1a90c:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
   1a910:	mov	x2, x20
   1a914:	mov	x0, x28
   1a918:	add	x3, x3, #0x1
   1a91c:	add	x1, x1, #0xbe8
   1a920:	str	x3, [x21, #800]
   1a924:	bl	6990 <PyModule_AddObject@plt>
   1a928:	tbnz	w0, #31, 1ae34 <PyInit__decimal@@Base+0x8b4>
   1a92c:	add	x20, x19, #0x6c0
   1a930:	add	x1, x24, #0x400
   1a934:	mov	x0, x28
   1a938:	ldr	x2, [x20, #104]
   1a93c:	ldr	x3, [x2]
   1a940:	add	x3, x3, #0x1
   1a944:	str	x3, [x2]
   1a948:	bl	6990 <PyModule_AddObject@plt>
   1a94c:	tbnz	w0, #31, 1ae34 <PyInit__decimal@@Base+0x8b4>
   1a950:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41a80>
   1a954:	mov	x2, #0x0                   	// #0
   1a958:	adrp	x0, 3c000 <PyInit__decimal@@Base+0x21a80>
   1a95c:	add	x0, x0, #0x460
   1a960:	ldr	x1, [x1, #3960]
   1a964:	ldr	x1, [x1]
   1a968:	bl	6710 <PyErr_NewException@plt>
   1a96c:	str	x0, [x20, #192]
   1a970:	mov	x2, x0
   1a974:	cbz	x0, 1ae34 <PyInit__decimal@@Base+0x8b4>
   1a978:	ldr	x3, [x2]
   1a97c:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
   1a980:	mov	x0, x28
   1a984:	add	x1, x1, #0x468
   1a988:	add	x3, x3, #0x1
   1a98c:	str	x3, [x2]
   1a990:	bl	6990 <PyModule_AddObject@plt>
   1a994:	tbnz	w0, #31, 1ae34 <PyInit__decimal@@Base+0x8b4>
   1a998:	mov	x0, #0x9                   	// #9
   1a99c:	bl	67a0 <PyTuple_New@plt>
   1a9a0:	str	x0, [x19, #1728]
   1a9a4:	cbz	x0, 1ae34 <PyInit__decimal@@Base+0x8b4>
   1a9a8:	adrp	x27, 5c000 <PyInit__decimal@@Base+0x41a80>
   1a9ac:	adrp	x25, 5c000 <PyInit__decimal@@Base+0x41a80>
   1a9b0:	mov	x23, x22
   1a9b4:	mov	w24, #0x8                   	// #8
   1a9b8:	ldr	x27, [x27, #4016]
   1a9bc:	ldr	x25, [x25, #3936]
   1a9c0:	ldr	w0, [x22, #272]
   1a9c4:	cmp	w0, #0x800
   1a9c8:	b.eq	1ae84 <PyInit__decimal@@Base+0x904>  // b.none
   1a9cc:	b.hi	1ae60 <PyInit__decimal@@Base+0x8e0>  // b.pmore
   1a9d0:	cmp	w0, #0x4
   1a9d4:	b.eq	1aeb4 <PyInit__decimal@@Base+0x934>  // b.none
   1a9d8:	cmp	w0, #0x400
   1a9dc:	b.ne	1ae9c <PyInit__decimal@@Base+0x91c>  // b.any
   1a9e0:	add	x1, x19, #0x6c0
   1a9e4:	mov	x0, #0x2                   	// #2
   1a9e8:	ldr	x2, [x25]
   1a9ec:	ldr	x1, [x1, #192]
   1a9f0:	bl	6a60 <PyTuple_Pack@plt>
   1a9f4:	mov	x20, x0
   1a9f8:	cbz	x20, 1ae34 <PyInit__decimal@@Base+0x8b4>
   1a9fc:	ldr	x0, [x22, #264]
   1aa00:	mov	x1, x20
   1aa04:	mov	x2, #0x0                   	// #0
   1aa08:	bl	6710 <PyErr_NewException@plt>
   1aa0c:	str	x0, [x22, #280]
   1aa10:	cbz	x0, 1ae34 <PyInit__decimal@@Base+0x8b4>
   1aa14:	ldr	x0, [x20]
   1aa18:	sub	x0, x0, #0x1
   1aa1c:	str	x0, [x20]
   1aa20:	cbz	x0, 1b14c <PyInit__decimal@@Base+0xbcc>
   1aa24:	ldr	x2, [x22, #280]
   1aa28:	mov	x0, x28
   1aa2c:	ldr	x1, [x22, #256]
   1aa30:	ldr	x3, [x2]
   1aa34:	add	x3, x3, #0x1
   1aa38:	str	x3, [x2]
   1aa3c:	bl	6990 <PyModule_AddObject@plt>
   1aa40:	tbnz	w0, #31, 1ae34 <PyInit__decimal@@Base+0x8b4>
   1aa44:	ldr	x1, [x22, #280]
   1aa48:	sub	x22, x22, #0x20
   1aa4c:	ldr	x0, [x19, #1728]
   1aa50:	ldr	x2, [x1]
   1aa54:	add	x0, x0, w24, sxtw #3
   1aa58:	sub	w24, w24, #0x1
   1aa5c:	add	x2, x2, #0x1
   1aa60:	str	x2, [x1]
   1aa64:	cmn	w24, #0x1
   1aa68:	str	x1, [x0, #24]
   1aa6c:	b.ne	1a9c0 <PyInit__decimal@@Base+0x440>  // b.any
   1aa70:	add	x0, x26, #0x9a0
   1aa74:	adrp	x22, 5c000 <PyInit__decimal@@Base+0x41a80>
   1aa78:	add	x24, x0, #0x1d8
   1aa7c:	mov	x23, x0
   1aa80:	ldr	x22, [x22, #4016]
   1aa84:	ldr	x1, [x0, #24]
   1aa88:	str	x1, [x0, #464]
   1aa8c:	b	1aae8 <PyInit__decimal@@Base+0x568>
   1aa90:	bl	6a60 <PyTuple_Pack@plt>
   1aa94:	mov	x20, x0
   1aa98:	mov	x1, x20
   1aa9c:	mov	x2, #0x0                   	// #0
   1aaa0:	cbz	x20, 1ae34 <PyInit__decimal@@Base+0x8b4>
   1aaa4:	ldr	x0, [x24, #8]
   1aaa8:	bl	6710 <PyErr_NewException@plt>
   1aaac:	str	x0, [x24, #24]
   1aab0:	cbz	x0, 1ae34 <PyInit__decimal@@Base+0x8b4>
   1aab4:	ldr	x0, [x20]
   1aab8:	sub	x0, x0, #0x1
   1aabc:	str	x0, [x20]
   1aac0:	cbz	x0, 1aed0 <PyInit__decimal@@Base+0x950>
   1aac4:	ldr	x2, [x24, #24]
   1aac8:	mov	x0, x28
   1aacc:	ldr	x1, [x24]
   1aad0:	add	x24, x24, #0x20
   1aad4:	ldr	x3, [x2]
   1aad8:	add	x3, x3, #0x1
   1aadc:	str	x3, [x2]
   1aae0:	bl	6990 <PyModule_AddObject@plt>
   1aae4:	tbnz	w0, #31, 1ae34 <PyInit__decimal@@Base+0x8b4>
   1aae8:	ldr	x20, [x24]
   1aaec:	mov	x0, #0x1                   	// #1
   1aaf0:	cbz	x20, 1aedc <PyInit__decimal@@Base+0x95c>
   1aaf4:	ldr	w2, [x24, #16]
   1aaf8:	ldr	x1, [x23, #24]
   1aafc:	cmp	w2, #0x10
   1ab00:	b.ne	1aa90 <PyInit__decimal@@Base+0x510>  // b.any
   1ab04:	ldr	x2, [x22]
   1ab08:	mov	x0, #0x2                   	// #2
   1ab0c:	bl	6a60 <PyTuple_Pack@plt>
   1ab10:	mov	x20, x0
   1ab14:	b	1aa98 <PyInit__decimal@@Base+0x518>
   1ab18:	ldp	x25, x26, [sp, #64]
   1ab1c:	nop
   1ab20:	mov	x28, #0x0                   	// #0
   1ab24:	add	x2, x19, #0x6c0
   1ab28:	ldr	x0, [x2, #144]
   1ab2c:	cbz	x0, 1ab90 <PyInit__decimal@@Base+0x610>
   1ab30:	ldr	x1, [x0]
   1ab34:	str	xzr, [x2, #144]
   1ab38:	sub	x1, x1, #0x1
   1ab3c:	str	x1, [x0]
   1ab40:	cbnz	x1, 1ab90 <PyInit__decimal@@Base+0x610>
   1ab44:	mov	x20, #0x0                   	// #0
   1ab48:	mov	x22, #0x0                   	// #0
   1ab4c:	mov	x23, #0x0                   	// #0
   1ab50:	bl	65d0 <_Py_Dealloc@plt>
   1ab54:	cbz	x22, 1ab68 <PyInit__decimal@@Base+0x5e8>
   1ab58:	ldr	x0, [x22]
   1ab5c:	sub	x0, x0, #0x1
   1ab60:	str	x0, [x22]
   1ab64:	cbz	x0, 1acf0 <PyInit__decimal@@Base+0x770>
   1ab68:	cbz	x23, 1ab7c <PyInit__decimal@@Base+0x5fc>
   1ab6c:	ldr	x0, [x23]
   1ab70:	sub	x0, x0, #0x1
   1ab74:	str	x0, [x23]
   1ab78:	cbz	x0, 1ace4 <PyInit__decimal@@Base+0x764>
   1ab7c:	cbz	x20, 1ab90 <PyInit__decimal@@Base+0x610>
   1ab80:	ldr	x0, [x20]
   1ab84:	sub	x0, x0, #0x1
   1ab88:	str	x0, [x20]
   1ab8c:	cbz	x0, 1acd8 <PyInit__decimal@@Base+0x758>
   1ab90:	ldr	x0, [x19, #1728]
   1ab94:	cbz	x0, 1abac <PyInit__decimal@@Base+0x62c>
   1ab98:	ldr	x1, [x0]
   1ab9c:	str	xzr, [x19, #1728]
   1aba0:	sub	x1, x1, #0x1
   1aba4:	str	x1, [x0]
   1aba8:	cbz	x1, 1acd0 <PyInit__decimal@@Base+0x750>
   1abac:	add	x2, x19, #0x6c0
   1abb0:	ldr	x0, [x2, #104]
   1abb4:	cbz	x0, 1abcc <PyInit__decimal@@Base+0x64c>
   1abb8:	ldr	x1, [x0]
   1abbc:	str	xzr, [x2, #104]
   1abc0:	sub	x1, x1, #0x1
   1abc4:	str	x1, [x0]
   1abc8:	cbz	x1, 1acc8 <PyInit__decimal@@Base+0x748>
   1abcc:	add	x2, x19, #0x6c0
   1abd0:	ldr	x0, [x2, #72]
   1abd4:	cbz	x0, 1abec <PyInit__decimal@@Base+0x66c>
   1abd8:	ldr	x1, [x0]
   1abdc:	str	xzr, [x2, #72]
   1abe0:	sub	x1, x1, #0x1
   1abe4:	str	x1, [x0]
   1abe8:	cbz	x1, 1acc0 <PyInit__decimal@@Base+0x740>
   1abec:	add	x2, x19, #0x6c0
   1abf0:	ldr	x0, [x2, #88]
   1abf4:	cbz	x0, 1ac0c <PyInit__decimal@@Base+0x68c>
   1abf8:	ldr	x1, [x0]
   1abfc:	str	xzr, [x2, #88]
   1ac00:	sub	x1, x1, #0x1
   1ac04:	str	x1, [x0]
   1ac08:	cbz	x1, 1acb8 <PyInit__decimal@@Base+0x738>
   1ac0c:	add	x2, x19, #0x6c0
   1ac10:	ldr	x0, [x2, #96]
   1ac14:	cbz	x0, 1ac2c <PyInit__decimal@@Base+0x6ac>
   1ac18:	ldr	x1, [x0]
   1ac1c:	str	xzr, [x2, #96]
   1ac20:	sub	x1, x1, #0x1
   1ac24:	str	x1, [x0]
   1ac28:	cbz	x1, 1acb0 <PyInit__decimal@@Base+0x730>
   1ac2c:	add	x19, x19, #0x6c0
   1ac30:	ldr	x0, [x19, #80]
   1ac34:	cbz	x0, 1ac4c <PyInit__decimal@@Base+0x6cc>
   1ac38:	ldr	x1, [x0]
   1ac3c:	str	xzr, [x19, #80]
   1ac40:	sub	x1, x1, #0x1
   1ac44:	str	x1, [x0]
   1ac48:	cbz	x1, 1aca8 <PyInit__decimal@@Base+0x728>
   1ac4c:	cbz	x28, 1ac60 <PyInit__decimal@@Base+0x6e0>
   1ac50:	ldr	x0, [x28]
   1ac54:	sub	x0, x0, #0x1
   1ac58:	str	x0, [x28]
   1ac5c:	cbz	x0, 1ac80 <PyInit__decimal@@Base+0x700>
   1ac60:	mov	x28, #0x0                   	// #0
   1ac64:	mov	x0, x28
   1ac68:	ldp	x19, x20, [sp, #16]
   1ac6c:	ldp	x21, x22, [sp, #32]
   1ac70:	ldp	x23, x24, [sp, #48]
   1ac74:	ldp	x27, x28, [sp, #80]
   1ac78:	ldp	x29, x30, [sp], #176
   1ac7c:	ret
   1ac80:	mov	x0, x28
   1ac84:	mov	x28, #0x0                   	// #0
   1ac88:	bl	65d0 <_Py_Dealloc@plt>
   1ac8c:	mov	x0, x28
   1ac90:	ldp	x19, x20, [sp, #16]
   1ac94:	ldp	x21, x22, [sp, #32]
   1ac98:	ldp	x23, x24, [sp, #48]
   1ac9c:	ldp	x27, x28, [sp, #80]
   1aca0:	ldp	x29, x30, [sp], #176
   1aca4:	ret
   1aca8:	bl	65d0 <_Py_Dealloc@plt>
   1acac:	b	1ac4c <PyInit__decimal@@Base+0x6cc>
   1acb0:	bl	65d0 <_Py_Dealloc@plt>
   1acb4:	b	1ac2c <PyInit__decimal@@Base+0x6ac>
   1acb8:	bl	65d0 <_Py_Dealloc@plt>
   1acbc:	b	1ac0c <PyInit__decimal@@Base+0x68c>
   1acc0:	bl	65d0 <_Py_Dealloc@plt>
   1acc4:	b	1abec <PyInit__decimal@@Base+0x66c>
   1acc8:	bl	65d0 <_Py_Dealloc@plt>
   1accc:	b	1abcc <PyInit__decimal@@Base+0x64c>
   1acd0:	bl	65d0 <_Py_Dealloc@plt>
   1acd4:	b	1abac <PyInit__decimal@@Base+0x62c>
   1acd8:	mov	x0, x20
   1acdc:	bl	65d0 <_Py_Dealloc@plt>
   1ace0:	b	1ab90 <PyInit__decimal@@Base+0x610>
   1ace4:	mov	x0, x23
   1ace8:	bl	65d0 <_Py_Dealloc@plt>
   1acec:	b	1ab7c <PyInit__decimal@@Base+0x5fc>
   1acf0:	mov	x0, x22
   1acf4:	bl	65d0 <_Py_Dealloc@plt>
   1acf8:	b	1ab68 <PyInit__decimal@@Base+0x5e8>
   1acfc:	ldr	x1, [x20]
   1ad00:	sub	x1, x1, #0x1
   1ad04:	str	x1, [x20]
   1ad08:	cbz	x1, 1ad18 <PyInit__decimal@@Base+0x798>
   1ad0c:	mov	x28, #0x0                   	// #0
   1ad10:	ldp	x25, x26, [sp, #64]
   1ad14:	b	1ab24 <PyInit__decimal@@Base+0x5a4>
   1ad18:	mov	x0, x20
   1ad1c:	bl	65d0 <_Py_Dealloc@plt>
   1ad20:	b	1ad0c <PyInit__decimal@@Base+0x78c>
   1ad24:	mov	x20, #0x0                   	// #0
   1ad28:	mov	x28, #0x0                   	// #0
   1ad2c:	ldr	x1, [x23]
   1ad30:	sub	x1, x1, #0x1
   1ad34:	str	x1, [x23]
   1ad38:	cbz	x1, 1ad74 <PyInit__decimal@@Base+0x7f4>
   1ad3c:	add	x2, x19, #0x6c0
   1ad40:	ldr	x0, [x2, #144]
   1ad44:	cbz	x0, 1ad5c <PyInit__decimal@@Base+0x7dc>
   1ad48:	ldr	x1, [x0]
   1ad4c:	str	xzr, [x2, #144]
   1ad50:	sub	x1, x1, #0x1
   1ad54:	str	x1, [x0]
   1ad58:	cbz	x1, 1b168 <PyInit__decimal@@Base+0xbe8>
   1ad5c:	cbz	x20, 1b17c <PyInit__decimal@@Base+0xbfc>
   1ad60:	mov	x22, x20
   1ad64:	mov	x23, #0x0                   	// #0
   1ad68:	mov	x20, #0x0                   	// #0
   1ad6c:	ldp	x25, x26, [sp, #64]
   1ad70:	b	1ab58 <PyInit__decimal@@Base+0x5d8>
   1ad74:	mov	x0, x23
   1ad78:	bl	65d0 <_Py_Dealloc@plt>
   1ad7c:	b	1ad3c <PyInit__decimal@@Base+0x7bc>
   1ad80:	mov	x0, x23
   1ad84:	bl	65d0 <_Py_Dealloc@plt>
   1ad88:	b	1a72c <PyInit__decimal@@Base+0x1ac>
   1ad8c:	ldr	x0, [x20]
   1ad90:	sub	x0, x0, #0x1
   1ad94:	str	x0, [x20]
   1ad98:	cbnz	x0, 1ada4 <PyInit__decimal@@Base+0x824>
   1ad9c:	mov	x0, x20
   1ada0:	bl	65d0 <_Py_Dealloc@plt>
   1ada4:	ldr	x0, [x22]
   1ada8:	sub	x0, x0, #0x1
   1adac:	str	x0, [x22]
   1adb0:	cbnz	x0, 1ad0c <PyInit__decimal@@Base+0x78c>
   1adb4:	mov	x0, x22
   1adb8:	mov	x28, #0x0                   	// #0
   1adbc:	bl	65d0 <_Py_Dealloc@plt>
   1adc0:	ldp	x25, x26, [sp, #64]
   1adc4:	b	1ab24 <PyInit__decimal@@Base+0x5a4>
   1adc8:	mov	x20, #0x0                   	// #0
   1adcc:	mov	x23, #0x0                   	// #0
   1add0:	add	x1, x19, #0x6c0
   1add4:	ldr	x28, [x1, #144]
   1add8:	cbz	x28, 1adf4 <PyInit__decimal@@Base+0x874>
   1addc:	ldr	x0, [x28]
   1ade0:	str	xzr, [x1, #144]
   1ade4:	sub	x0, x0, #0x1
   1ade8:	str	x0, [x28]
   1adec:	cbz	x0, 1b158 <PyInit__decimal@@Base+0xbd8>
   1adf0:	mov	x28, #0x0                   	// #0
   1adf4:	ldp	x25, x26, [sp, #64]
   1adf8:	b	1ab58 <PyInit__decimal@@Base+0x5d8>
   1adfc:	bl	65d0 <_Py_Dealloc@plt>
   1ae00:	b	1a784 <PyInit__decimal@@Base+0x204>
   1ae04:	mov	x0, x22
   1ae08:	bl	65d0 <_Py_Dealloc@plt>
   1ae0c:	b	1a7c0 <PyInit__decimal@@Base+0x240>
   1ae10:	mov	x0, x20
   1ae14:	bl	65d0 <_Py_Dealloc@plt>
   1ae18:	b	1a7b0 <PyInit__decimal@@Base+0x230>
   1ae1c:	mov	x20, x22
   1ae20:	mov	x28, #0x0                   	// #0
   1ae24:	b	1ad2c <PyInit__decimal@@Base+0x7ac>
   1ae28:	mov	x0, x23
   1ae2c:	bl	65d0 <_Py_Dealloc@plt>
   1ae30:	b	1a83c <PyInit__decimal@@Base+0x2bc>
   1ae34:	ldp	x25, x26, [sp, #64]
   1ae38:	b	1ab24 <PyInit__decimal@@Base+0x5a4>
   1ae3c:	mov	x0, x20
   1ae40:	bl	65d0 <_Py_Dealloc@plt>
   1ae44:	b	1a8c8 <PyInit__decimal@@Base+0x348>
   1ae48:	mov	x0, x23
   1ae4c:	bl	65d0 <_Py_Dealloc@plt>
   1ae50:	b	1a8b8 <PyInit__decimal@@Base+0x338>
   1ae54:	mov	x0, x22
   1ae58:	bl	65d0 <_Py_Dealloc@plt>
   1ae5c:	b	1a8a8 <PyInit__decimal@@Base+0x328>
   1ae60:	cmp	w0, #0x4, lsl #12
   1ae64:	b.ne	1ae9c <PyInit__decimal@@Base+0x91c>  // b.any
   1ae68:	ldr	x3, [x23, #184]
   1ae6c:	mov	x0, #0x3                   	// #3
   1ae70:	ldr	x1, [x23, #216]
   1ae74:	ldr	x2, [x23, #248]
   1ae78:	bl	6a60 <PyTuple_Pack@plt>
   1ae7c:	mov	x20, x0
   1ae80:	b	1a9f8 <PyInit__decimal@@Base+0x478>
   1ae84:	ldr	x1, [x23, #216]
   1ae88:	mov	x0, #0x2                   	// #2
   1ae8c:	ldr	x2, [x23, #248]
   1ae90:	bl	6a60 <PyTuple_Pack@plt>
   1ae94:	mov	x20, x0
   1ae98:	b	1a9f8 <PyInit__decimal@@Base+0x478>
   1ae9c:	add	x1, x19, #0x6c0
   1aea0:	mov	x0, #0x1                   	// #1
   1aea4:	ldr	x1, [x1, #192]
   1aea8:	bl	6a60 <PyTuple_Pack@plt>
   1aeac:	mov	x20, x0
   1aeb0:	b	1a9f8 <PyInit__decimal@@Base+0x478>
   1aeb4:	add	x1, x19, #0x6c0
   1aeb8:	mov	x0, #0x2                   	// #2
   1aebc:	ldr	x2, [x27]
   1aec0:	ldr	x1, [x1, #192]
   1aec4:	bl	6a60 <PyTuple_Pack@plt>
   1aec8:	mov	x20, x0
   1aecc:	b	1a9f8 <PyInit__decimal@@Base+0x478>
   1aed0:	mov	x0, x20
   1aed4:	bl	65d0 <_Py_Dealloc@plt>
   1aed8:	b	1aac4 <PyInit__decimal@@Base+0x544>
   1aedc:	add	x27, x19, #0x6c0
   1aee0:	add	x21, x21, #0x320
   1aee4:	mov	x0, x21
   1aee8:	mov	x1, #0x0                   	// #0
   1aeec:	bl	6840 <PyObject_CallObject@plt>
   1aef0:	mov	x2, x0
   1aef4:	str	x0, [x27, #72]
   1aef8:	cbz	x0, 1ae34 <PyInit__decimal@@Base+0x8b4>
   1aefc:	ldr	x3, [x2]
   1af00:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
   1af04:	mov	x0, x28
   1af08:	add	x1, x1, #0x480
   1af0c:	add	x3, x3, #0x1
   1af10:	str	x3, [x2]
   1af14:	bl	6990 <PyModule_AddObject@plt>
   1af18:	tbnz	w0, #31, 1ae34 <PyInit__decimal@@Base+0x8b4>
   1af1c:	adrp	x2, 5c000 <PyInit__decimal@@Base+0x41a80>
   1af20:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
   1af24:	mov	x0, x28
   1af28:	add	x1, x1, #0x490
   1af2c:	ldr	x2, [x2, #4024]
   1af30:	ldr	x3, [x2]
   1af34:	add	x3, x3, #0x1
   1af38:	str	x3, [x2]
   1af3c:	bl	6990 <PyModule_AddObject@plt>
   1af40:	tbnz	w0, #31, 1ae34 <PyInit__decimal@@Base+0x8b4>
   1af44:	mov	x0, x21
   1af48:	mov	x1, #0x0                   	// #0
   1af4c:	bl	6840 <PyObject_CallObject@plt>
   1af50:	str	x0, [x27, #88]
   1af54:	mov	x2, x0
   1af58:	cbz	x0, 1ae34 <PyInit__decimal@@Base+0x8b4>
   1af5c:	adrp	x0, 3c000 <PyInit__decimal@@Base+0x21a80>
   1af60:	add	x0, x0, #0xc00
   1af64:	mov	x1, #0x9                   	// #9
   1af68:	mov	w8, #0x4bbf                	// #19391
   1af6c:	mov	w3, #0x4                   	// #4
   1af70:	mov	w23, #0x1                   	// #1
   1af74:	ldp	x6, x7, [x0]
   1af78:	stp	x6, x7, [sp, #128]
   1af7c:	add	x22, sp, #0x80
   1af80:	ldp	x10, x11, [x0, #16]
   1af84:	str	x1, [sp, #128]
   1af88:	stp	x10, x11, [sp, #144]
   1af8c:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
   1af90:	add	x1, x1, #0x4a0
   1af94:	ldp	x24, x25, [x0, #32]
   1af98:	str	w8, [sp, #152]
   1af9c:	stp	x24, x25, [sp, #160]
   1afa0:	mov	x0, x28
   1afa4:	str	w3, [sp, #164]
   1afa8:	ldp	x8, x9, [sp, #128]
   1afac:	stp	x8, x9, [x2, #16]
   1afb0:	ldp	x8, x9, [sp, #144]
   1afb4:	stp	x8, x9, [x2, #32]
   1afb8:	ldr	x5, [x2]
   1afbc:	str	w23, [x2, #80]
   1afc0:	ldp	x8, x9, [sp, #160]
   1afc4:	add	x5, x5, #0x1
   1afc8:	str	x5, [x2]
   1afcc:	stp	x8, x9, [x2, #48]
   1afd0:	stp	x6, x7, [sp, #96]
   1afd4:	stp	x10, x11, [sp, #112]
   1afd8:	bl	6990 <PyModule_AddObject@plt>
   1afdc:	tbnz	w0, #31, 1ae34 <PyInit__decimal@@Base+0x8b4>
   1afe0:	mov	x0, x21
   1afe4:	mov	x1, #0x0                   	// #0
   1afe8:	bl	6840 <PyObject_CallObject@plt>
   1afec:	str	x0, [x27, #96]
   1aff0:	mov	x2, x0
   1aff4:	cbz	x0, 1ae34 <PyInit__decimal@@Base+0x8b4>
   1aff8:	ldp	x6, x7, [sp, #96]
   1affc:	stp	x6, x7, [x22]
   1b000:	mov	x0, #0x9                   	// #9
   1b004:	str	x0, [sp, #128]
   1b008:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
   1b00c:	ldp	x10, x11, [sp, #112]
   1b010:	stp	x10, x11, [x22, #16]
   1b014:	add	x1, x1, #0x4b0
   1b018:	str	wzr, [sp, #152]
   1b01c:	mov	x0, x28
   1b020:	ldr	x5, [x2]
   1b024:	stp	x24, x25, [x2, #48]
   1b028:	ldp	x8, x9, [x22]
   1b02c:	stp	x8, x9, [x2, #16]
   1b030:	add	x3, x5, #0x1
   1b034:	ldp	x8, x9, [x22, #16]
   1b038:	str	x3, [x2]
   1b03c:	stp	x8, x9, [x2, #32]
   1b040:	str	w23, [x2, #80]
   1b044:	stp	x24, x25, [x22, #32]
   1b048:	bl	6990 <PyModule_AddObject@plt>
   1b04c:	tbnz	w0, #31, 1ae34 <PyInit__decimal@@Base+0x8b4>
   1b050:	add	x21, x26, #0x9a0
   1b054:	add	x21, x21, #0x5f8
   1b058:	b	1b084 <PyInit__decimal@@Base+0xb04>
   1b05c:	ldr	x0, [x21, #8]
   1b060:	bl	66a0 <PyLong_FromSsize_t@plt>
   1b064:	mov	x23, x0
   1b068:	cbz	x0, 1ae34 <PyInit__decimal@@Base+0x8b4>
   1b06c:	ldr	x1, [x21]
   1b070:	mov	x2, x0
   1b074:	add	x21, x21, #0x10
   1b078:	mov	x0, x28
   1b07c:	bl	6990 <PyModule_AddObject@plt>
   1b080:	tbnz	w0, #31, 1ad2c <PyInit__decimal@@Base+0x7ac>
   1b084:	ldr	x0, [x21]
   1b088:	cbnz	x0, 1b05c <PyInit__decimal@@Base+0xadc>
   1b08c:	add	x20, x19, #0x6c0
   1b090:	add	x20, x20, #0xb0
   1b094:	b	1b0a8 <PyInit__decimal@@Base+0xb28>
   1b098:	ldrsw	x2, [x20, #8]
   1b09c:	add	x20, x20, #0x10
   1b0a0:	bl	6500 <PyModule_AddIntConstant@plt>
   1b0a4:	tbnz	w0, #31, 1ae34 <PyInit__decimal@@Base+0x8b4>
   1b0a8:	ldr	x1, [x20]
   1b0ac:	mov	x0, x28
   1b0b0:	cbnz	x1, 1b098 <PyInit__decimal@@Base+0xb18>
   1b0b4:	add	x21, x19, #0x6c0
   1b0b8:	adrp	x20, 5f000 <PyInit__decimal@@Base+0x44a80>
   1b0bc:	add	x21, x21, #0x8
   1b0c0:	add	x20, x20, #0x548
   1b0c4:	mov	x22, #0x0                   	// #0
   1b0c8:	ldr	x0, [x20]
   1b0cc:	bl	6980 <PyUnicode_InternFromString@plt>
   1b0d0:	str	x0, [x22, x21]
   1b0d4:	mov	x3, x0
   1b0d8:	add	x22, x22, #0x8
   1b0dc:	mov	x2, x0
   1b0e0:	cbz	x0, 1ae34 <PyInit__decimal@@Base+0x8b4>
   1b0e4:	ldr	x5, [x3]
   1b0e8:	mov	x0, x28
   1b0ec:	ldr	x1, [x20]
   1b0f0:	add	x5, x5, #0x1
   1b0f4:	str	x5, [x3]
   1b0f8:	add	x20, x20, #0x8
   1b0fc:	bl	6990 <PyModule_AddObject@plt>
   1b100:	tbnz	w0, #31, 1ae34 <PyInit__decimal@@Base+0x8b4>
   1b104:	cmp	x22, #0x40
   1b108:	b.ne	1b0c8 <PyInit__decimal@@Base+0xb48>  // b.any
   1b10c:	adrp	x2, 3c000 <PyInit__decimal@@Base+0x21a80>
   1b110:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
   1b114:	add	x2, x2, #0x4c0
   1b118:	add	x1, x1, #0x4c8
   1b11c:	mov	x0, x28
   1b120:	bl	6970 <PyModule_AddStringConstant@plt>
   1b124:	tbnz	w0, #31, 1ae34 <PyInit__decimal@@Base+0x8b4>
   1b128:	bl	27b10 <PyInit__decimal@@Base+0xd590>
   1b12c:	mov	x2, x0
   1b130:	adrp	x1, 3c000 <PyInit__decimal@@Base+0x21a80>
   1b134:	mov	x0, x28
   1b138:	add	x1, x1, #0x4d8
   1b13c:	bl	6970 <PyModule_AddStringConstant@plt>
   1b140:	ldp	x25, x26, [sp, #64]
   1b144:	tbz	w0, #31, 1ac64 <PyInit__decimal@@Base+0x6e4>
   1b148:	b	1ab24 <PyInit__decimal@@Base+0x5a4>
   1b14c:	mov	x0, x20
   1b150:	bl	65d0 <_Py_Dealloc@plt>
   1b154:	b	1aa24 <PyInit__decimal@@Base+0x4a4>
   1b158:	mov	x0, x28
   1b15c:	mov	x28, #0x0                   	// #0
   1b160:	ldp	x25, x26, [sp, #64]
   1b164:	b	1ab50 <PyInit__decimal@@Base+0x5d0>
   1b168:	mov	x22, x20
   1b16c:	mov	x23, #0x0                   	// #0
   1b170:	mov	x20, #0x0                   	// #0
   1b174:	ldp	x25, x26, [sp, #64]
   1b178:	b	1ab50 <PyInit__decimal@@Base+0x5d0>
   1b17c:	ldp	x25, x26, [sp, #64]
   1b180:	b	1ab90 <PyInit__decimal@@Base+0x610>
   1b184:	nop
   1b188:	mov	x8, x0
   1b18c:	cbz	x4, 1b26c <PyInit__decimal@@Base+0xcec>
   1b190:	mov	x11, #0xffffffff89e7ffff    	// #-1981284353
   1b194:	mov	x10, #0x76180000            	// #1981284352
   1b198:	movk	x11, #0x2304, lsl #32
   1b19c:	movk	x10, #0xdcfb, lsl #32
   1b1a0:	mov	x6, #0x0                   	// #0
   1b1a4:	mov	x0, #0x0                   	// #0
   1b1a8:	movk	x11, #0x8ac7, lsl #48
   1b1ac:	movk	x10, #0x7538, lsl #48
   1b1b0:	ldr	x7, [x1, x6, lsl #3]
   1b1b4:	ldr	x5, [x2, x6, lsl #3]
   1b1b8:	add	x5, x7, x5
   1b1bc:	add	x5, x5, x0
   1b1c0:	cmp	x7, x5
   1b1c4:	add	x9, x5, x10
   1b1c8:	cset	w7, hi  // hi = pmore
   1b1cc:	cmp	x5, x11
   1b1d0:	cset	w0, hi  // hi = pmore
   1b1d4:	orr	w7, w7, w0
   1b1d8:	cmp	w7, #0x0
   1b1dc:	and	x0, x7, #0xff
   1b1e0:	csel	x5, x9, x5, ne  // ne = any
   1b1e4:	str	x5, [x8, x6, lsl #3]
   1b1e8:	add	x6, x6, #0x1
   1b1ec:	cmp	x4, x6
   1b1f0:	b.ne	1b1b0 <PyInit__decimal@@Base+0xc30>  // b.any
   1b1f4:	cmp	w7, #0x0
   1b1f8:	ccmp	x3, x6, #0x0, ne  // ne = any
   1b1fc:	b.ls	1b230 <PyInit__decimal@@Base+0xcb0>  // b.plast
   1b200:	mov	x0, #0x89e80000            	// #2313682944
   1b204:	movk	x0, #0x2304, lsl #32
   1b208:	movk	x0, #0x8ac7, lsl #48
   1b20c:	nop
   1b210:	ldr	x2, [x1, x6, lsl #3]
   1b214:	add	x2, x2, #0x1
   1b218:	cmp	x2, x0
   1b21c:	cset	w5, eq  // eq = none
   1b220:	b.eq	1b250 <PyInit__decimal@@Base+0xcd0>  // b.none
   1b224:	add	x4, x6, #0x1
   1b228:	str	x2, [x8, x6, lsl #3]
   1b22c:	and	x0, x5, #0xff
   1b230:	cmp	x3, x4
   1b234:	b.ls	1b24c <PyInit__decimal@@Base+0xccc>  // b.plast
   1b238:	ldr	x2, [x1, x4, lsl #3]
   1b23c:	str	x2, [x8, x4, lsl #3]
   1b240:	add	x4, x4, #0x1
   1b244:	cmp	x3, x4
   1b248:	b.ne	1b238 <PyInit__decimal@@Base+0xcb8>  // b.any
   1b24c:	ret
   1b250:	str	xzr, [x8, x6, lsl #3]
   1b254:	cmp	w5, #0x0
   1b258:	add	x6, x6, #0x1
   1b25c:	ccmp	x3, x6, #0x0, ne  // ne = any
   1b260:	b.hi	1b210 <PyInit__decimal@@Base+0xc90>  // b.pmore
   1b264:	mov	x4, x6
   1b268:	b	1b22c <PyInit__decimal@@Base+0xcac>
   1b26c:	mov	x0, #0x0                   	// #0
   1b270:	b	1b230 <PyInit__decimal@@Base+0xcb0>
   1b274:	nop
   1b278:	cbz	x2, 1b30c <PyInit__decimal@@Base+0xd8c>
   1b27c:	mov	x9, #0xffffffff89e7ffff    	// #-1981284353
   1b280:	mov	x8, #0x76180000            	// #1981284352
   1b284:	movk	x9, #0x2304, lsl #32
   1b288:	movk	x8, #0xdcfb, lsl #32
   1b28c:	mov	x4, #0x0                   	// #0
   1b290:	mov	x6, #0x0                   	// #0
   1b294:	movk	x9, #0x8ac7, lsl #48
   1b298:	movk	x8, #0x7538, lsl #48
   1b29c:	nop
   1b2a0:	ldr	x5, [x0, x4, lsl #3]
   1b2a4:	ldr	x3, [x1, x4, lsl #3]
   1b2a8:	add	x3, x5, x3
   1b2ac:	add	x3, x3, x6
   1b2b0:	cmp	x5, x3
   1b2b4:	add	x7, x3, x8
   1b2b8:	cset	w5, hi  // hi = pmore
   1b2bc:	cmp	x3, x9
   1b2c0:	cset	w6, hi  // hi = pmore
   1b2c4:	orr	w5, w5, w6
   1b2c8:	cmp	w5, #0x0
   1b2cc:	and	x6, x5, #0xff
   1b2d0:	csel	x3, x7, x3, ne  // ne = any
   1b2d4:	str	x3, [x0, x4, lsl #3]
   1b2d8:	add	x4, x4, #0x1
   1b2dc:	cmp	x2, x4
   1b2e0:	b.ne	1b2a0 <PyInit__decimal@@Base+0xd20>  // b.any
   1b2e4:	cbz	w5, 1b30c <PyInit__decimal@@Base+0xd8c>
   1b2e8:	add	x1, x0, x2, lsl #3
   1b2ec:	mov	x2, #0x89e80000            	// #2313682944
   1b2f0:	movk	x2, #0x2304, lsl #32
   1b2f4:	movk	x2, #0x8ac7, lsl #48
   1b2f8:	ldr	x0, [x1]
   1b2fc:	add	x0, x0, #0x1
   1b300:	cmp	x0, x2
   1b304:	b.eq	1b310 <PyInit__decimal@@Base+0xd90>  // b.none
   1b308:	str	x0, [x1]
   1b30c:	ret
   1b310:	str	xzr, [x1], #8
   1b314:	b	1b2f8 <PyInit__decimal@@Base+0xd78>
   1b318:	mov	x4, x0
   1b31c:	mov	x3, #0xffffffff89e7ffff    	// #-1981284353
   1b320:	ldr	x0, [x0]
   1b324:	movk	x3, #0x2304, lsl #32
   1b328:	movk	x3, #0x8ac7, lsl #48
   1b32c:	adds	x2, x0, x2
   1b330:	ccmp	x2, x3, #0x2, cc  // cc = lo, ul, last
   1b334:	b.hi	1b344 <PyInit__decimal@@Base+0xdc4>  // b.pmore
   1b338:	mov	x0, #0x0                   	// #0
   1b33c:	str	x2, [x4]
   1b340:	ret
   1b344:	mov	x0, #0x76180000            	// #1981284352
   1b348:	cmp	x1, #0x1
   1b34c:	movk	x0, #0xdcfb, lsl #32
   1b350:	movk	x0, #0x7538, lsl #48
   1b354:	add	x0, x2, x0
   1b358:	str	x0, [x4]
   1b35c:	b.ls	1b3ac <PyInit__decimal@@Base+0xe2c>  // b.plast
   1b360:	mov	x5, #0x89e80000            	// #2313682944
   1b364:	mov	x3, #0x1                   	// #1
   1b368:	movk	x5, #0x2304, lsl #32
   1b36c:	movk	x5, #0x8ac7, lsl #48
   1b370:	ldr	x2, [x4, x3, lsl #3]
   1b374:	add	x2, x2, #0x1
   1b378:	cmp	x2, x5
   1b37c:	cset	w0, eq  // eq = none
   1b380:	b.eq	1b390 <PyInit__decimal@@Base+0xe10>  // b.none
   1b384:	and	x0, x0, #0xff
   1b388:	str	x2, [x4, x3, lsl #3]
   1b38c:	ret
   1b390:	str	xzr, [x4, x3, lsl #3]
   1b394:	cmp	w0, #0x0
   1b398:	add	x3, x3, #0x1
   1b39c:	ccmp	x1, x3, #0x0, ne  // ne = any
   1b3a0:	b.hi	1b370 <PyInit__decimal@@Base+0xdf0>  // b.pmore
   1b3a4:	and	x0, x0, #0xff
   1b3a8:	b	1b38c <PyInit__decimal@@Base+0xe0c>
   1b3ac:	mov	x0, #0x1                   	// #1
   1b3b0:	ret
   1b3b4:	nop
   1b3b8:	cbz	x1, 1b40c <PyInit__decimal@@Base+0xe8c>
   1b3bc:	mov	x5, #0x89e80000            	// #2313682944
   1b3c0:	mov	x3, #0x0                   	// #0
   1b3c4:	movk	x5, #0x2304, lsl #32
   1b3c8:	movk	x5, #0x8ac7, lsl #48
   1b3cc:	nop
   1b3d0:	ldr	x2, [x0, x3, lsl #3]
   1b3d4:	add	x2, x2, #0x1
   1b3d8:	cmp	x2, x5
   1b3dc:	cset	w4, eq  // eq = none
   1b3e0:	b.eq	1b3f0 <PyInit__decimal@@Base+0xe70>  // b.none
   1b3e4:	str	x2, [x0, x3, lsl #3]
   1b3e8:	and	x0, x4, #0xff
   1b3ec:	ret
   1b3f0:	str	xzr, [x0, x3, lsl #3]
   1b3f4:	cmp	w4, #0x0
   1b3f8:	add	x3, x3, #0x1
   1b3fc:	ccmp	x1, x3, #0x0, ne  // ne = any
   1b400:	b.hi	1b3d0 <PyInit__decimal@@Base+0xe50>  // b.pmore
   1b404:	and	x0, x4, #0xff
   1b408:	b	1b3ec <PyInit__decimal@@Base+0xe6c>
   1b40c:	mov	x0, #0x1                   	// #1
   1b410:	ret
   1b414:	nop
   1b418:	cbz	x4, 1b49c <PyInit__decimal@@Base+0xf1c>
   1b41c:	mov	x11, #0x89e80000            	// #2313682944
   1b420:	mov	x5, #0x0                   	// #0
   1b424:	movk	x11, #0x2304, lsl #32
   1b428:	mov	x7, #0x0                   	// #0
   1b42c:	movk	x11, #0x8ac7, lsl #48
   1b430:	ldr	x8, [x1, x5, lsl #3]
   1b434:	ldr	x6, [x2, x5, lsl #3]
   1b438:	sub	x7, x8, x7
   1b43c:	sub	x6, x7, x6
   1b440:	cmp	x8, x6
   1b444:	add	x9, x6, x11
   1b448:	csel	x6, x9, x6, cc  // cc = lo, ul, last
   1b44c:	str	x6, [x0, x5, lsl #3]
   1b450:	add	x5, x5, #0x1
   1b454:	cset	w10, cc  // cc = lo, ul, last
   1b458:	cset	x7, cc  // cc = lo, ul, last
   1b45c:	cmp	x4, x5
   1b460:	b.ne	1b430 <PyInit__decimal@@Base+0xeb0>  // b.any
   1b464:	cmp	w10, #0x0
   1b468:	ccmp	x3, x5, #0x0, ne  // ne = any
   1b46c:	b.ls	1b49c <PyInit__decimal@@Base+0xf1c>  // b.plast
   1b470:	mov	x6, #0xffffffff89e7ffff    	// #-1981284353
   1b474:	movk	x6, #0x2304, lsl #32
   1b478:	movk	x6, #0x8ac7, lsl #48
   1b47c:	nop
   1b480:	ldr	x2, [x1, x5, lsl #3]
   1b484:	cmp	x2, #0x0
   1b488:	cset	w4, eq  // eq = none
   1b48c:	cbz	x2, 1b4c0 <PyInit__decimal@@Base+0xf40>
   1b490:	add	x4, x5, #0x1
   1b494:	sub	x2, x2, #0x1
   1b498:	str	x2, [x0, x5, lsl #3]
   1b49c:	cmp	x3, x4
   1b4a0:	b.ls	1b4bc <PyInit__decimal@@Base+0xf3c>  // b.plast
   1b4a4:	nop
   1b4a8:	ldr	x2, [x1, x4, lsl #3]
   1b4ac:	str	x2, [x0, x4, lsl #3]
   1b4b0:	add	x4, x4, #0x1
   1b4b4:	cmp	x3, x4
   1b4b8:	b.ne	1b4a8 <PyInit__decimal@@Base+0xf28>  // b.any
   1b4bc:	ret
   1b4c0:	str	x6, [x0, x5, lsl #3]
   1b4c4:	cmp	w4, #0x0
   1b4c8:	add	x5, x5, #0x1
   1b4cc:	ccmp	x3, x5, #0x0, ne  // ne = any
   1b4d0:	b.hi	1b480 <PyInit__decimal@@Base+0xf00>  // b.pmore
   1b4d4:	mov	x4, x5
   1b4d8:	b	1b49c <PyInit__decimal@@Base+0xf1c>
   1b4dc:	nop
   1b4e0:	cbz	x2, 1b550 <PyInit__decimal@@Base+0xfd0>
   1b4e4:	mov	x8, #0x89e80000            	// #2313682944
   1b4e8:	mov	x4, #0x0                   	// #0
   1b4ec:	movk	x8, #0x2304, lsl #32
   1b4f0:	mov	x5, #0x0                   	// #0
   1b4f4:	movk	x8, #0x8ac7, lsl #48
   1b4f8:	ldr	x6, [x0, x4, lsl #3]
   1b4fc:	ldr	x3, [x1, x4, lsl #3]
   1b500:	sub	x5, x6, x5
   1b504:	sub	x3, x5, x3
   1b508:	cmp	x6, x3
   1b50c:	add	x7, x3, x8
   1b510:	csel	x7, x7, x3, cc  // cc = lo, ul, last
   1b514:	str	x7, [x0, x4, lsl #3]
   1b518:	add	x4, x4, #0x1
   1b51c:	cset	x5, cc  // cc = lo, ul, last
   1b520:	cmp	x2, x4
   1b524:	b.ne	1b4f8 <PyInit__decimal@@Base+0xf78>  // b.any
   1b528:	cmp	x6, x3
   1b52c:	b.cs	1b550 <PyInit__decimal@@Base+0xfd0>  // b.hs, b.nlast
   1b530:	add	x0, x0, x2, lsl #3
   1b534:	mov	x2, #0xffffffff89e7ffff    	// #-1981284353
   1b538:	movk	x2, #0x2304, lsl #32
   1b53c:	movk	x2, #0x8ac7, lsl #48
   1b540:	ldr	x1, [x0]
   1b544:	cbz	x1, 1b554 <PyInit__decimal@@Base+0xfd4>
   1b548:	sub	x1, x1, #0x1
   1b54c:	str	x1, [x0]
   1b550:	ret
   1b554:	str	x2, [x0], #8
   1b558:	b	1b540 <PyInit__decimal@@Base+0xfc0>
   1b55c:	nop
   1b560:	mov	x4, #0x0                   	// #0
   1b564:	cbz	x2, 1b608 <PyInit__decimal@@Base+0x1088>
   1b568:	ldr	x6, [x1]
   1b56c:	adrp	x4, 42000 <PyInit__decimal@@Base+0x27a80>
   1b570:	mov	x10, #0x89e80000            	// #2313682944
   1b574:	mov	x13, #0x76180000            	// #1981284352
   1b578:	movk	x10, #0x2304, lsl #32
   1b57c:	movk	x13, #0xdcfb, lsl #32
   1b580:	umulh	x5, x3, x6
   1b584:	mov	x9, #0x0                   	// #0
   1b588:	ldr	x11, [x4, #712]
   1b58c:	mul	x6, x3, x6
   1b590:	movk	x10, #0x8ac7, lsl #48
   1b594:	movk	x13, #0x7538, lsl #48
   1b598:	b	1b5b0 <PyInit__decimal@@Base+0x1030>
   1b59c:	ldr	x5, [x1, x9, lsl #3]
   1b5a0:	mul	x6, x3, x5
   1b5a4:	umulh	x5, x3, x5
   1b5a8:	adds	x6, x6, x4
   1b5ac:	cinc	x5, x5, cs  // cs = hs, nlast
   1b5b0:	and	x8, x10, x6, asr #63
   1b5b4:	add	x7, x5, x6, lsr #63
   1b5b8:	add	x8, x8, x6
   1b5bc:	add	x12, x5, x13
   1b5c0:	umulh	x4, x7, x11
   1b5c4:	madd	x7, x7, x11, x8
   1b5c8:	cmp	x8, x7
   1b5cc:	cinc	x4, x4, hi  // hi = pmore
   1b5d0:	add	x5, x5, x4
   1b5d4:	mvn	x4, x5
   1b5d8:	mul	x7, x4, x10
   1b5dc:	umulh	x5, x4, x10
   1b5e0:	adds	x7, x7, x6
   1b5e4:	adc	x6, x5, x12
   1b5e8:	and	x5, x6, x10
   1b5ec:	sub	x4, x6, x4
   1b5f0:	add	x7, x5, x7
   1b5f4:	str	x7, [x0, x9, lsl #3]
   1b5f8:	add	x9, x9, #0x1
   1b5fc:	cmp	x2, x9
   1b600:	b.ne	1b59c <PyInit__decimal@@Base+0x101c>  // b.any
   1b604:	add	x0, x0, x2, lsl #3
   1b608:	str	x4, [x0]
   1b60c:	ret
   1b610:	cbz	x4, 1b6dc <PyInit__decimal@@Base+0x115c>
   1b614:	adrp	x5, 42000 <PyInit__decimal@@Base+0x27a80>
   1b618:	mov	x10, #0x89e80000            	// #2313682944
   1b61c:	mov	x15, #0x76180000            	// #1981284352
   1b620:	movk	x10, #0x2304, lsl #32
   1b624:	ldr	x13, [x5, #712]
   1b628:	movk	x15, #0xdcfb, lsl #32
   1b62c:	mov	x12, x0
   1b630:	mov	x14, #0x0                   	// #0
   1b634:	movk	x10, #0x8ac7, lsl #48
   1b638:	movk	x15, #0x7538, lsl #48
   1b63c:	nop
   1b640:	mov	x7, #0x0                   	// #0
   1b644:	mov	x8, #0x0                   	// #0
   1b648:	cbz	x3, 1b6e0 <PyInit__decimal@@Base+0x1160>
   1b64c:	nop
   1b650:	ldr	x6, [x1, x8, lsl #3]
   1b654:	ldr	x5, [x2, x14, lsl #3]
   1b658:	ldr	x0, [x12, x8, lsl #3]
   1b65c:	mul	x9, x6, x5
   1b660:	umulh	x6, x6, x5
   1b664:	adds	x0, x0, x9
   1b668:	cinc	x5, x6, cs  // cs = hs, nlast
   1b66c:	adds	x0, x0, x7
   1b670:	cinc	x5, x5, cs  // cs = hs, nlast
   1b674:	and	x9, x10, x0, asr #63
   1b678:	add	x6, x5, x0, lsr #63
   1b67c:	add	x9, x9, x0
   1b680:	add	x16, x5, x15
   1b684:	umulh	x11, x6, x13
   1b688:	madd	x6, x6, x13, x9
   1b68c:	cmp	x9, x6
   1b690:	cinc	x6, x11, hi  // hi = pmore
   1b694:	add	x5, x5, x6
   1b698:	mvn	x5, x5
   1b69c:	mul	x6, x5, x10
   1b6a0:	umulh	x7, x5, x10
   1b6a4:	adds	x0, x0, x6
   1b6a8:	adc	x7, x7, x16
   1b6ac:	and	x6, x7, x10
   1b6b0:	sub	x7, x7, x5
   1b6b4:	add	x0, x6, x0
   1b6b8:	str	x0, [x12, x8, lsl #3]
   1b6bc:	add	x8, x8, #0x1
   1b6c0:	cmp	x3, x8
   1b6c4:	b.ne	1b650 <PyInit__decimal@@Base+0x10d0>  // b.any
   1b6c8:	str	x7, [x12, x3, lsl #3]
   1b6cc:	add	x14, x14, #0x1
   1b6d0:	cmp	x4, x14
   1b6d4:	add	x12, x12, #0x8
   1b6d8:	b.ne	1b640 <PyInit__decimal@@Base+0x10c0>  // b.any
   1b6dc:	ret
   1b6e0:	mov	x7, x3
   1b6e4:	str	x7, [x12, x3, lsl #3]
   1b6e8:	add	x14, x14, #0x1
   1b6ec:	add	x12, x12, #0x8
   1b6f0:	cmp	x4, x14
   1b6f4:	b.ne	1b640 <PyInit__decimal@@Base+0x10c0>  // b.any
   1b6f8:	b	1b6dc <PyInit__decimal@@Base+0x115c>
   1b6fc:	nop
   1b700:	cbz	x2, 1b7a8 <PyInit__decimal@@Base+0x1228>
   1b704:	stp	x29, x30, [sp, #-80]!
   1b708:	mov	x29, sp
   1b70c:	stp	x23, x24, [sp, #48]
   1b710:	sub	x23, x2, #0x1
   1b714:	neg	x2, x2, lsl #3
   1b718:	str	x25, [sp, #64]
   1b71c:	mov	x25, x1
   1b720:	add	x2, x2, x23, lsl #3
   1b724:	stp	x21, x22, [sp, #32]
   1b728:	mov	x21, #0x89e80000            	// #2313682944
   1b72c:	add	x2, x2, #0x8
   1b730:	movk	x21, #0x2304, lsl #32
   1b734:	add	x22, x0, x2
   1b738:	mov	x24, x3
   1b73c:	movk	x21, #0x8ac7, lsl #48
   1b740:	mov	x1, #0x0                   	// #0
   1b744:	stp	x19, x20, [sp, #16]
   1b748:	mov	x20, #0x0                   	// #0
   1b74c:	ldr	x0, [x25, x23, lsl #3]
   1b750:	b	1b768 <PyInit__decimal@@Base+0x11e8>
   1b754:	ldr	x4, [x25, x23, lsl #3]
   1b758:	mul	x19, x0, x21
   1b75c:	umulh	x1, x0, x21
   1b760:	adds	x0, x4, x19
   1b764:	cinc	x1, x1, cs  // cs = hs, nlast
   1b768:	adds	x19, x20, x0
   1b76c:	mov	x2, x24
   1b770:	mov	x0, x19
   1b774:	mov	x3, #0x0                   	// #0
   1b778:	bl	3b538 <PyInit__decimal@@Base+0x20fb8>
   1b77c:	str	x0, [x22, x23, lsl #3]
   1b780:	sub	x23, x23, #0x1
   1b784:	msub	x0, x24, x0, x19
   1b788:	cmn	x23, #0x1
   1b78c:	b.ne	1b754 <PyInit__decimal@@Base+0x11d4>  // b.any
   1b790:	ldp	x19, x20, [sp, #16]
   1b794:	ldp	x21, x22, [sp, #32]
   1b798:	ldp	x23, x24, [sp, #48]
   1b79c:	ldr	x25, [sp, #64]
   1b7a0:	ldp	x29, x30, [sp], #80
   1b7a4:	ret
   1b7a8:	mov	x0, #0x0                   	// #0
   1b7ac:	ret
   1b7b0:	sub	sp, sp, #0x4b0
   1b7b4:	cmp	x4, x5
   1b7b8:	stp	x29, x30, [sp]
   1b7bc:	mov	x29, sp
   1b7c0:	stp	x19, x20, [sp, #16]
   1b7c4:	stp	x21, x22, [sp, #32]
   1b7c8:	stp	x23, x24, [sp, #48]
   1b7cc:	str	x0, [sp, #120]
   1b7d0:	str	x1, [sp, #160]
   1b7d4:	b.cc	1bbb8 <PyInit__decimal@@Base+0x1638>  // b.lo, b.ul, b.last
   1b7d8:	lsl	x0, x5, #3
   1b7dc:	str	x0, [sp, #112]
   1b7e0:	sub	x19, x0, #0x8
   1b7e4:	add	x0, sp, #0xb0
   1b7e8:	str	x0, [sp, #136]
   1b7ec:	mov	x23, #0x89e80000            	// #2313682944
   1b7f0:	movk	x23, #0x2304, lsl #32
   1b7f4:	stp	x27, x28, [sp, #80]
   1b7f8:	movk	x23, #0x8ac7, lsl #48
   1b7fc:	ldr	x0, [x3, x19]
   1b800:	mov	x22, x4
   1b804:	mov	x24, x5
   1b808:	mov	x28, x2
   1b80c:	add	x0, x0, #0x1
   1b810:	mov	x27, x3
   1b814:	cmp	x4, #0x3f
   1b818:	sub	x20, x4, x5
   1b81c:	udiv	x0, x23, x0
   1b820:	str	x0, [sp, #152]
   1b824:	b.hi	1bb54 <PyInit__decimal@@Base+0x15d4>  // b.pmore
   1b828:	stp	x25, x26, [sp, #64]
   1b82c:	cmp	x24, #0x3f
   1b830:	b.hi	1bae8 <PyInit__decimal@@Base+0x1568>  // b.pmore
   1b834:	add	x0, sp, #0x2b0
   1b838:	str	x0, [sp, #168]
   1b83c:	mov	x26, x0
   1b840:	ldr	x0, [sp, #136]
   1b844:	mov	x1, x28
   1b848:	ldr	x3, [sp, #152]
   1b84c:	mov	x2, x22
   1b850:	bl	1b560 <PyInit__decimal@@Base+0xfe0>
   1b854:	mov	x2, x24
   1b858:	mov	x1, x27
   1b85c:	mov	x0, x26
   1b860:	bl	1b560 <PyInit__decimal@@Base+0xfe0>
   1b864:	cmn	x20, #0x1
   1b868:	b.eq	1ba6c <PyInit__decimal@@Base+0x14ec>  // b.none
   1b86c:	add	x1, x26, x19
   1b870:	str	x1, [sp, #128]
   1b874:	ldr	x1, [sp, #136]
   1b878:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27a80>
   1b87c:	mov	x27, #0x89e80000            	// #2313682944
   1b880:	mov	x28, #0xffffffff89e7ffff    	// #-1981284353
   1b884:	mov	x23, #0x76180000            	// #1981284352
   1b888:	movk	x27, #0x2304, lsl #32
   1b88c:	movk	x28, #0x2304, lsl #32
   1b890:	movk	x23, #0xdcfb, lsl #32
   1b894:	add	x22, x1, x22, lsl #3
   1b898:	add	x19, x1, x20, lsl #3
   1b89c:	ldr	x25, [x0, #712]
   1b8a0:	movk	x27, #0x8ac7, lsl #48
   1b8a4:	add	x0, x24, #0x1
   1b8a8:	movk	x28, #0x8ac7, lsl #48
   1b8ac:	movk	x23, #0x7538, lsl #48
   1b8b0:	str	x0, [sp, #144]
   1b8b4:	nop
   1b8b8:	ldr	x0, [sp, #128]
   1b8bc:	mov	x3, #0x0                   	// #0
   1b8c0:	ldr	x5, [x22]
   1b8c4:	mov	x1, #0x0                   	// #0
   1b8c8:	ldr	x21, [x0]
   1b8cc:	mov	x0, x5
   1b8d0:	str	x5, [sp, #96]
   1b8d4:	mov	x2, x21
   1b8d8:	bl	3b538 <PyInit__decimal@@Base+0x20fb8>
   1b8dc:	ldr	x5, [sp, #96]
   1b8e0:	mov	x4, x0
   1b8e4:	ldur	x1, [x22, #-8]
   1b8e8:	mov	x3, #0x0                   	// #0
   1b8ec:	msub	x5, x21, x4, x5
   1b8f0:	mov	x2, x21
   1b8f4:	mul	x0, x5, x27
   1b8f8:	umulh	x5, x5, x27
   1b8fc:	adds	x1, x0, x1
   1b900:	mov	x14, x1
   1b904:	cinc	x1, x5, cs  // cs = hs, nlast
   1b908:	mov	x0, x14
   1b90c:	stp	x14, x4, [sp, #96]
   1b910:	bl	3b538 <PyInit__decimal@@Base+0x20fb8>
   1b914:	ldp	x14, x4, [sp, #96]
   1b918:	ldr	x1, [sp, #112]
   1b91c:	add	x13, x26, x1
   1b920:	madd	x3, x4, x27, x0
   1b924:	msub	x1, x21, x0, x14
   1b928:	b	1b93c <PyInit__decimal@@Base+0x13bc>
   1b92c:	adds	x1, x21, x1
   1b930:	sub	x3, x3, #0x1
   1b934:	ccmp	x1, x28, #0x2, cc  // cc = lo, ul, last
   1b938:	b.hi	1b9b0 <PyInit__decimal@@Base+0x1430>  // b.pmore
   1b93c:	cmp	x3, x28
   1b940:	b.hi	1b92c <PyInit__decimal@@Base+0x13ac>  // b.pmore
   1b944:	ldur	x0, [x13, #-16]
   1b948:	mul	x5, x3, x0
   1b94c:	umulh	x0, x3, x0
   1b950:	and	x15, x27, x5, asr #63
   1b954:	add	x14, x0, x23
   1b958:	add	x15, x15, x5
   1b95c:	add	x12, x0, x5, lsr #63
   1b960:	madd	x16, x12, x25, x15
   1b964:	umulh	x12, x12, x25
   1b968:	cmp	x15, x16
   1b96c:	cinc	x12, x12, hi  // hi = pmore
   1b970:	add	x0, x0, x12
   1b974:	mvn	x0, x0
   1b978:	mul	x15, x0, x27
   1b97c:	umulh	x12, x0, x27
   1b980:	adds	x5, x5, x15
   1b984:	adc	x12, x12, x14
   1b988:	sub	x0, x12, x0
   1b98c:	cmp	x1, x0
   1b990:	b.cc	1b92c <PyInit__decimal@@Base+0x13ac>  // b.lo, b.ul, b.last
   1b994:	b.ne	1b9b0 <PyInit__decimal@@Base+0x1430>  // b.any
   1b998:	ldur	x0, [x22, #-16]
   1b99c:	and	x12, x12, x27
   1b9a0:	add	x5, x12, x5
   1b9a4:	cmp	x0, x5
   1b9a8:	b.cc	1b92c <PyInit__decimal@@Base+0x13ac>  // b.lo, b.ul, b.last
   1b9ac:	nop
   1b9b0:	ldr	x2, [x26]
   1b9b4:	mov	x5, #0x0                   	// #0
   1b9b8:	umulh	x0, x2, x3
   1b9bc:	mul	x2, x2, x3
   1b9c0:	b	1b9dc <PyInit__decimal@@Base+0x145c>
   1b9c4:	ldr	x1, [x26, x13, lsl #3]
   1b9c8:	mov	x5, x13
   1b9cc:	mul	x0, x1, x3
   1b9d0:	umulh	x1, x1, x3
   1b9d4:	adds	x2, x2, x0
   1b9d8:	cinc	x0, x1, cs  // cs = hs, nlast
   1b9dc:	and	x16, x27, x2, asr #63
   1b9e0:	add	x13, x0, x2, lsr #63
   1b9e4:	add	x16, x16, x2
   1b9e8:	add	x14, x0, x23
   1b9ec:	ldr	x12, [x19, x5, lsl #3]
   1b9f0:	umulh	x1, x13, x25
   1b9f4:	madd	x15, x13, x25, x16
   1b9f8:	add	x13, x5, #0x1
   1b9fc:	cmp	x16, x15
   1ba00:	cinc	x1, x1, hi  // hi = pmore
   1ba04:	add	x1, x1, x0
   1ba08:	mvn	x1, x1
   1ba0c:	mul	x0, x1, x27
   1ba10:	umulh	x15, x1, x27
   1ba14:	adds	x2, x2, x0
   1ba18:	adc	x0, x15, x14
   1ba1c:	sub	x2, x12, x2
   1ba20:	and	x14, x0, x27
   1ba24:	sub	x1, x0, x1
   1ba28:	sub	x2, x2, x14
   1ba2c:	cmp	x12, x2
   1ba30:	sub	x14, x2, x23
   1ba34:	csel	x2, x14, x2, cc  // cc = lo, ul, last
   1ba38:	str	x2, [x19, x5, lsl #3]
   1ba3c:	cset	x0, cc  // cc = lo, ul, last
   1ba40:	cmp	x24, x5
   1ba44:	add	x2, x0, x1
   1ba48:	b.ne	1b9c4 <PyInit__decimal@@Base+0x1444>  // b.any
   1ba4c:	cbnz	x2, 1bb08 <PyInit__decimal@@Base+0x1588>
   1ba50:	ldr	x0, [sp, #120]
   1ba54:	str	x3, [x0, x20, lsl #3]
   1ba58:	sub	x20, x20, #0x1
   1ba5c:	sub	x22, x22, #0x8
   1ba60:	cmn	x20, #0x1
   1ba64:	sub	x19, x19, #0x8
   1ba68:	b.ne	1b8b8 <PyInit__decimal@@Base+0x1338>  // b.any
   1ba6c:	ldr	x0, [sp, #160]
   1ba70:	cbz	x0, 1bb30 <PyInit__decimal@@Base+0x15b0>
   1ba74:	ldp	x3, x0, [sp, #152]
   1ba78:	mov	x2, x24
   1ba7c:	ldr	x1, [sp, #136]
   1ba80:	mov	w19, #0x0                   	// #0
   1ba84:	bl	1b700 <PyInit__decimal@@Base+0x1180>
   1ba88:	ldr	x2, [sp, #136]
   1ba8c:	add	x0, sp, #0xb0
   1ba90:	cmp	x2, x0
   1ba94:	b.eq	1baa8 <PyInit__decimal@@Base+0x1528>  // b.none
   1ba98:	adrp	x1, 5f000 <PyInit__decimal@@Base+0x44a80>
   1ba9c:	mov	x0, x2
   1baa0:	ldr	x1, [x1, #1704]
   1baa4:	blr	x1
   1baa8:	ldr	x0, [sp, #168]
   1baac:	cmp	x26, x0
   1bab0:	b.eq	1bb70 <PyInit__decimal@@Base+0x15f0>  // b.none
   1bab4:	adrp	x1, 5f000 <PyInit__decimal@@Base+0x44a80>
   1bab8:	mov	x0, x26
   1babc:	ldr	x1, [x1, #1704]
   1bac0:	blr	x1
   1bac4:	ldp	x25, x26, [sp, #64]
   1bac8:	mov	w0, w19
   1bacc:	ldp	x29, x30, [sp]
   1bad0:	ldp	x19, x20, [sp, #16]
   1bad4:	ldp	x21, x22, [sp, #32]
   1bad8:	ldp	x23, x24, [sp, #48]
   1badc:	ldp	x27, x28, [sp, #80]
   1bae0:	add	sp, sp, #0x4b0
   1bae4:	ret
   1bae8:	add	x0, x24, #0x1
   1baec:	mov	x1, #0x8                   	// #8
   1baf0:	bl	25260 <PyInit__decimal@@Base+0xace0>
   1baf4:	mov	x26, x0
   1baf8:	cbz	x0, 1bb9c <PyInit__decimal@@Base+0x161c>
   1bafc:	add	x0, sp, #0x2b0
   1bb00:	str	x0, [sp, #168]
   1bb04:	b	1b840 <PyInit__decimal@@Base+0x12c0>
   1bb08:	ldr	x0, [sp, #120]
   1bb0c:	sub	x3, x3, #0x1
   1bb10:	mov	x4, x24
   1bb14:	mov	x2, x26
   1bb18:	mov	x1, x19
   1bb1c:	str	x3, [x0, x20, lsl #3]
   1bb20:	mov	x0, x19
   1bb24:	ldr	x3, [sp, #144]
   1bb28:	bl	1b188 <PyInit__decimal@@Base+0xc08>
   1bb2c:	b	1ba58 <PyInit__decimal@@Base+0x14d8>
   1bb30:	mov	x4, x24
   1bb34:	b	1bb44 <PyInit__decimal@@Base+0x15c4>
   1bb38:	ldr	x0, [sp, #136]
   1bb3c:	ldr	x0, [x0, x4, lsl #3]
   1bb40:	cbnz	x0, 1bb94 <PyInit__decimal@@Base+0x1614>
   1bb44:	subs	x4, x4, #0x1
   1bb48:	b.pl	1bb38 <PyInit__decimal@@Base+0x15b8>  // b.nfrst
   1bb4c:	mov	w19, #0x0                   	// #0
   1bb50:	b	1ba88 <PyInit__decimal@@Base+0x1508>
   1bb54:	add	x0, x4, #0x1
   1bb58:	mov	x1, #0x8                   	// #8
   1bb5c:	bl	25260 <PyInit__decimal@@Base+0xace0>
   1bb60:	str	x0, [sp, #136]
   1bb64:	cbnz	x0, 1b828 <PyInit__decimal@@Base+0x12a8>
   1bb68:	mov	w19, #0xffffffff            	// #-1
   1bb6c:	b	1bac8 <PyInit__decimal@@Base+0x1548>
   1bb70:	mov	w0, w19
   1bb74:	ldp	x29, x30, [sp]
   1bb78:	ldp	x19, x20, [sp, #16]
   1bb7c:	ldp	x21, x22, [sp, #32]
   1bb80:	ldp	x23, x24, [sp, #48]
   1bb84:	ldp	x25, x26, [sp, #64]
   1bb88:	ldp	x27, x28, [sp, #80]
   1bb8c:	add	sp, sp, #0x4b0
   1bb90:	ret
   1bb94:	mov	w19, #0x1                   	// #1
   1bb98:	b	1ba88 <PyInit__decimal@@Base+0x1508>
   1bb9c:	adrp	x1, 5f000 <PyInit__decimal@@Base+0x44a80>
   1bba0:	mov	w19, #0xffffffff            	// #-1
   1bba4:	ldr	x0, [sp, #136]
   1bba8:	ldr	x1, [x1, #1704]
   1bbac:	blr	x1
   1bbb0:	ldp	x25, x26, [sp, #64]
   1bbb4:	b	1bac8 <PyInit__decimal@@Base+0x1548>
   1bbb8:	adrp	x19, 5c000 <PyInit__decimal@@Base+0x41a80>
   1bbbc:	mov	w3, #0x25c                 	// #604
   1bbc0:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27a80>
   1bbc4:	adrp	x1, 42000 <PyInit__decimal@@Base+0x27a80>
   1bbc8:	ldr	x19, [x19, #3904]
   1bbcc:	add	x2, x2, #0x198
   1bbd0:	add	x1, x1, #0x1d8
   1bbd4:	stp	x25, x26, [sp, #64]
   1bbd8:	ldr	x0, [x19]
   1bbdc:	stp	x27, x28, [sp, #80]
   1bbe0:	bl	6a70 <fprintf@plt>
   1bbe4:	ldr	x3, [x19]
   1bbe8:	mov	x2, #0x29                  	// #41
   1bbec:	mov	x1, #0x1                   	// #1
   1bbf0:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27a80>
   1bbf4:	add	x0, x0, #0x1e8
   1bbf8:	bl	6930 <fwrite@plt>
   1bbfc:	ldr	x1, [x19]
   1bc00:	mov	w0, #0xa                   	// #10
   1bc04:	bl	65b0 <fputc@plt>
   1bc08:	bl	67c0 <abort@plt>
   1bc0c:	nop
   1bc10:	mov	x5, #0x435f                	// #17247
   1bc14:	mov	x7, x1
   1bc18:	movk	x5, #0xd79, lsl #16
   1bc1c:	sub	x8, x3, #0x1
   1bc20:	movk	x5, #0x35e5, lsl #32
   1bc24:	movk	x5, #0xd794, lsl #48
   1bc28:	umulh	x5, x4, x5
   1bc2c:	lsr	x1, x5, #4
   1bc30:	add	x5, x1, x1, lsl #2
   1bc34:	lsl	x5, x5, #2
   1bc38:	sub	x5, x5, x1
   1bc3c:	subs	x4, x4, x5
   1bc40:	b.ne	1bc68 <PyInit__decimal@@Base+0x16e8>  // b.any
   1bc44:	cmn	x8, #0x1
   1bc48:	add	x3, x0, x1, lsl #3
   1bc4c:	b.eq	1bc64 <PyInit__decimal@@Base+0x16e4>  // b.none
   1bc50:	ldr	x2, [x7, x8, lsl #3]
   1bc54:	str	x2, [x3, x8, lsl #3]
   1bc58:	sub	x8, x8, #0x1
   1bc5c:	cmn	x8, #0x1
   1bc60:	b.ne	1bc50 <PyInit__decimal@@Base+0x16d0>  // b.any
   1bc64:	b	281a0 <PyInit__decimal@@Base+0xdc20>
   1bc68:	adrp	x9, 42000 <PyInit__decimal@@Base+0x27a80>
   1bc6c:	add	x9, x9, #0x2d0
   1bc70:	mov	x5, #0x13                  	// #19
   1bc74:	sub	x5, x5, x4
   1bc78:	cmp	x5, #0x9
   1bc7c:	sub	x10, x2, #0x1
   1bc80:	sub	x6, x3, #0x2
   1bc84:	ldr	x12, [x7, x8, lsl #3]
   1bc88:	ldr	x9, [x9, x4, lsl #3]
   1bc8c:	b.hi	1bef0 <PyInit__decimal@@Base+0x1970>  // b.pmore
   1bc90:	cmp	x5, #0x4
   1bc94:	b.hi	1c184 <PyInit__decimal@@Base+0x1c04>  // b.pmore
   1bc98:	cmp	x5, #0x3
   1bc9c:	b.eq	1c3d8 <PyInit__decimal@@Base+0x1e58>  // b.none
   1bca0:	cmp	x5, #0x4
   1bca4:	b.eq	1c3b4 <PyInit__decimal@@Base+0x1e34>  // b.none
   1bca8:	cmp	x5, #0x2
   1bcac:	b.eq	1c388 <PyInit__decimal@@Base+0x1e08>  // b.none
   1bcb0:	mov	x8, #0xcccccccccccccccc    	// #-3689348814741910324
   1bcb4:	movk	x8, #0xcccd
   1bcb8:	umulh	x8, x12, x8
   1bcbc:	lsr	x8, x8, #3
   1bcc0:	add	x4, x8, x8, lsl #2
   1bcc4:	sub	x4, x12, x4, lsl #1
   1bcc8:	cbz	x8, 1bcd4 <PyInit__decimal@@Base+0x1754>
   1bccc:	str	x8, [x0, x10, lsl #3]
   1bcd0:	sub	x10, x2, #0x2
   1bcd4:	cmn	x6, #0x1
   1bcd8:	b.eq	1c278 <PyInit__decimal@@Base+0x1cf8>  // b.none
   1bcdc:	stp	x29, x30, [sp, #-96]!
   1bce0:	neg	x3, x3, lsl #3
   1bce4:	mov	x30, #0xd5bf                	// #54719
   1bce8:	mov	x29, sp
   1bcec:	mov	x18, #0xcefd                	// #52989
   1bcf0:	mov	x17, #0x5a53                	// #23123
   1bcf4:	mov	x16, #0x34db                	// #13531
   1bcf8:	mov	x15, #0x42bd                	// #17085
   1bcfc:	mov	x14, #0x7843                	// #30787
   1bd00:	mov	x13, #0xf7cf                	// #63439
   1bd04:	mov	x12, #0x594b                	// #22859
   1bd08:	mov	x11, #0xf5c3                	// #62915
   1bd0c:	stp	x19, x20, [sp, #16]
   1bd10:	mov	x20, #0x2233                	// #8755
   1bd14:	add	x3, x3, x10, lsl #3
   1bd18:	stp	x21, x22, [sp, #32]
   1bd1c:	mov	x22, #0xaaff                	// #43775
   1bd20:	movk	x22, #0xcb24, lsl #16
   1bd24:	stp	x23, x24, [sp, #48]
   1bd28:	mov	x24, #0xcd81                	// #52609
   1bd2c:	movk	x24, #0x5095, lsl #16
   1bd30:	stp	x25, x26, [sp, #64]
   1bd34:	mov	x26, #0x385                 	// #901
   1bd38:	movk	x26, #0x92ed, lsl #16
   1bd3c:	mov	x25, #0xa000                	// #40960
   1bd40:	mov	x23, #0x4000                	// #16384
   1bd44:	mov	x21, #0xe800                	// #59392
   1bd48:	movk	x20, #0x5bd4, lsl #16
   1bd4c:	mov	x19, #0x1000                	// #4096
   1bd50:	movk	x30, #0xbded, lsl #16
   1bd54:	movk	x18, #0x8461, lsl #16
   1bd58:	movk	x17, #0xa09b, lsl #16
   1bd5c:	movk	x16, #0xd7b6, lsl #16
   1bd60:	movk	x15, #0xe57a, lsl #16
   1bd64:	movk	x14, #0x71b4, lsl #16
   1bd68:	movk	x13, #0xe353, lsl #16
   1bd6c:	movk	x12, #0x3886, lsl #16
   1bd70:	movk	x11, #0x5c28, lsl #16
   1bd74:	stp	x27, x28, [sp, #80]
   1bd78:	mov	x28, #0x1b53                	// #6995
   1bd7c:	mov	x27, #0x5d8a0000            	// #1569325056
   1bd80:	add	x8, x3, #0x10
   1bd84:	movk	x28, #0xd519, lsl #16
   1bd88:	movk	x27, #0x4578, lsl #32
   1bd8c:	movk	x26, #0x84d0, lsl #32
   1bd90:	movk	x25, #0x4e72, lsl #16
   1bd94:	movk	x24, #0x4dc3, lsl #32
   1bd98:	movk	x23, #0x107a, lsl #16
   1bd9c:	movk	x22, #0xff0b, lsl #32
   1bda0:	movk	x21, #0x4876, lsl #16
   1bda4:	movk	x20, #0x3302, lsl #32
   1bda8:	movk	x19, #0xd4a5, lsl #16
   1bdac:	movk	x30, #0xfece, lsl #32
   1bdb0:	movk	x18, #0x7711, lsl #32
   1bdb4:	movk	x17, #0xb82f, lsl #32
   1bdb8:	movk	x16, #0xde82, lsl #32
   1bdbc:	movk	x15, #0x94d5, lsl #32
   1bdc0:	movk	x14, #0x5ac4, lsl #32
   1bdc4:	movk	x13, #0x9ba5, lsl #32
   1bdc8:	movk	x12, #0xc5d6, lsl #32
   1bdcc:	movk	x11, #0xc28f, lsl #32
   1bdd0:	add	x8, x0, x8
   1bdd4:	movk	x28, #0x5c3b, lsl #32
   1bdd8:	movk	x27, #0x163, lsl #48
   1bddc:	movk	x26, #0x384b, lsl #48
   1bde0:	movk	x25, #0x918, lsl #32
   1bde4:	movk	x24, #0xb42, lsl #48
   1bde8:	movk	x23, #0x5af3, lsl #32
   1bdec:	movk	x22, #0xafeb, lsl #48
   1bdf0:	movk	x21, #0x17, lsl #32
   1bdf4:	movk	x20, #0x232f, lsl #48
   1bdf8:	movk	x19, #0xe8, lsl #32
   1bdfc:	movk	x30, #0xdbe6, lsl #48
   1be00:	movk	x18, #0xabcc, lsl #48
   1be04:	movk	x17, #0x44, lsl #48
   1be08:	movk	x16, #0x431b, lsl #48
   1be0c:	movk	x15, #0xd6bf, lsl #48
   1be10:	movk	x14, #0xa7c, lsl #48
   1be14:	movk	x13, #0x20c4, lsl #48
   1be18:	movk	x12, #0x346d, lsl #48
   1be1c:	movk	x11, #0x28f5, lsl #48
   1be20:	b	1be78 <PyInit__decimal@@Base+0x18f8>
   1be24:	cmp	x5, #0x4
   1be28:	b.hi	1bf44 <PyInit__decimal@@Base+0x19c4>  // b.pmore
   1be2c:	cmp	x5, #0x3
   1be30:	b.eq	1c028 <PyInit__decimal@@Base+0x1aa8>  // b.none
   1be34:	cmp	x5, #0x4
   1be38:	b.eq	1c014 <PyInit__decimal@@Base+0x1a94>  // b.none
   1be3c:	cmp	x5, #0x2
   1be40:	b.eq	1bff8 <PyInit__decimal@@Base+0x1a78>  // b.none
   1be44:	mov	x2, #0xcccccccccccccccc    	// #-3689348814741910324
   1be48:	movk	x2, #0xcccd
   1be4c:	umulh	x2, x3, x2
   1be50:	lsr	x2, x2, #3
   1be54:	add	x10, x2, x2, lsl #2
   1be58:	sub	x3, x3, x10, lsl #1
   1be5c:	nop
   1be60:	madd	x2, x9, x4, x2
   1be64:	str	x2, [x8, x6, lsl #3]
   1be68:	sub	x6, x6, #0x1
   1be6c:	cmn	x6, #0x1
   1be70:	b.eq	1becc <PyInit__decimal@@Base+0x194c>  // b.none
   1be74:	mov	x4, x3
   1be78:	cmp	x5, #0x9
   1be7c:	ldr	x3, [x7, x6, lsl #3]
   1be80:	b.ls	1be24 <PyInit__decimal@@Base+0x18a4>  // b.plast
   1be84:	cmp	x5, #0xe
   1be88:	b.hi	1bf7c <PyInit__decimal@@Base+0x19fc>  // b.pmore
   1be8c:	cmp	x5, #0xd
   1be90:	b.eq	1bfe8 <PyInit__decimal@@Base+0x1a68>  // b.none
   1be94:	cmp	x5, #0xe
   1be98:	b.eq	1bfd8 <PyInit__decimal@@Base+0x1a58>  // b.none
   1be9c:	cmp	x5, #0xb
   1bea0:	b.eq	1bfc8 <PyInit__decimal@@Base+0x1a48>  // b.none
   1bea4:	cmp	x5, #0xc
   1bea8:	b.ne	1c048 <PyInit__decimal@@Base+0x1ac8>  // b.any
   1beac:	umulh	x2, x3, x20
   1beb0:	lsr	x2, x2, #37
   1beb4:	msub	x3, x2, x19, x3
   1beb8:	madd	x2, x9, x4, x2
   1bebc:	str	x2, [x8, x6, lsl #3]
   1bec0:	sub	x6, x6, #0x1
   1bec4:	cmn	x6, #0x1
   1bec8:	b.ne	1be74 <PyInit__decimal@@Base+0x18f4>  // b.any
   1becc:	ldp	x19, x20, [sp, #16]
   1bed0:	mul	x10, x9, x3
   1bed4:	ldp	x21, x22, [sp, #32]
   1bed8:	str	x10, [x0, x1, lsl #3]
   1bedc:	ldp	x23, x24, [sp, #48]
   1bee0:	ldp	x25, x26, [sp, #64]
   1bee4:	ldp	x27, x28, [sp, #80]
   1bee8:	ldp	x29, x30, [sp], #96
   1beec:	b	281a0 <PyInit__decimal@@Base+0xdc20>
   1bef0:	cmp	x5, #0xe
   1bef4:	b.hi	1c138 <PyInit__decimal@@Base+0x1bb8>  // b.pmore
   1bef8:	cmp	x5, #0xd
   1befc:	b.eq	1c284 <PyInit__decimal@@Base+0x1d04>  // b.none
   1bf00:	cmp	x5, #0xe
   1bf04:	b.eq	1c2dc <PyInit__decimal@@Base+0x1d5c>  // b.none
   1bf08:	cmp	x5, #0xb
   1bf0c:	b.eq	1c1cc <PyInit__decimal@@Base+0x1c4c>  // b.none
   1bf10:	cmp	x5, #0xc
   1bf14:	b.ne	1c35c <PyInit__decimal@@Base+0x1ddc>  // b.any
   1bf18:	mov	x8, #0x2233                	// #8755
   1bf1c:	mov	x4, #0x1000                	// #4096
   1bf20:	movk	x8, #0x5bd4, lsl #16
   1bf24:	movk	x4, #0xd4a5, lsl #16
   1bf28:	movk	x8, #0x3302, lsl #32
   1bf2c:	movk	x4, #0xe8, lsl #32
   1bf30:	movk	x8, #0x232f, lsl #48
   1bf34:	umulh	x8, x12, x8
   1bf38:	lsr	x8, x8, #37
   1bf3c:	msub	x4, x8, x4, x12
   1bf40:	b	1bcc8 <PyInit__decimal@@Base+0x1748>
   1bf44:	cmp	x5, #0x8
   1bf48:	b.eq	1c0b4 <PyInit__decimal@@Base+0x1b34>  // b.none
   1bf4c:	cmp	x5, #0x9
   1bf50:	b.eq	1c098 <PyInit__decimal@@Base+0x1b18>  // b.none
   1bf54:	cmp	x5, #0x6
   1bf58:	b.eq	1c080 <PyInit__decimal@@Base+0x1b00>  // b.none
   1bf5c:	cmp	x5, #0x7
   1bf60:	b.ne	1c064 <PyInit__decimal@@Base+0x1ae4>  // b.any
   1bf64:	umulh	x2, x3, x15
   1bf68:	mov	x10, #0x9680                	// #38528
   1bf6c:	movk	x10, #0x98, lsl #16
   1bf70:	lsr	x2, x2, #23
   1bf74:	msub	x3, x2, x10, x3
   1bf78:	b	1be60 <PyInit__decimal@@Base+0x18e0>
   1bf7c:	cmp	x5, #0x11
   1bf80:	b.eq	1c124 <PyInit__decimal@@Base+0x1ba4>  // b.none
   1bf84:	cmp	x5, #0x12
   1bf88:	b.eq	1c0f8 <PyInit__decimal@@Base+0x1b78>  // b.none
   1bf8c:	cmp	x5, #0x10
   1bf90:	b.eq	1c0cc <PyInit__decimal@@Base+0x1b4c>  // b.none
   1bf94:	mov	x10, #0xeac3                	// #60099
   1bf98:	lsr	x2, x3, #15
   1bf9c:	movk	x10, #0xf3dc, lsl #16
   1bfa0:	movk	x10, #0x4075, lsl #32
   1bfa4:	movk	x10, #0x2, lsl #48
   1bfa8:	umulh	x2, x2, x10
   1bfac:	mov	x10, #0x8000                	// #32768
   1bfb0:	movk	x10, #0xa4c6, lsl #16
   1bfb4:	movk	x10, #0x8d7e, lsl #32
   1bfb8:	lsr	x2, x2, #20
   1bfbc:	movk	x10, #0x3, lsl #48
   1bfc0:	msub	x3, x2, x10, x3
   1bfc4:	b	1be60 <PyInit__decimal@@Base+0x18e0>
   1bfc8:	umulh	x2, x3, x22
   1bfcc:	lsr	x2, x2, #36
   1bfd0:	msub	x3, x2, x21, x3
   1bfd4:	b	1be60 <PyInit__decimal@@Base+0x18e0>
   1bfd8:	umulh	x2, x3, x24
   1bfdc:	lsr	x2, x2, #42
   1bfe0:	msub	x3, x2, x23, x3
   1bfe4:	b	1be60 <PyInit__decimal@@Base+0x18e0>
   1bfe8:	umulh	x2, x3, x26
   1bfec:	lsr	x2, x2, #41
   1bff0:	msub	x3, x2, x25, x3
   1bff4:	b	1be60 <PyInit__decimal@@Base+0x18e0>
   1bff8:	lsr	x2, x3, #2
   1bffc:	umulh	x2, x2, x11
   1c000:	lsr	x2, x2, #2
   1c004:	add	x10, x2, x2, lsl #1
   1c008:	add	x10, x2, x10, lsl #3
   1c00c:	sub	x3, x3, x10, lsl #2
   1c010:	b	1be60 <PyInit__decimal@@Base+0x18e0>
   1c014:	umulh	x2, x3, x12
   1c018:	mov	x10, #0x2710                	// #10000
   1c01c:	lsr	x2, x2, #11
   1c020:	msub	x3, x2, x10, x3
   1c024:	b	1be60 <PyInit__decimal@@Base+0x18e0>
   1c028:	lsr	x2, x3, #3
   1c02c:	umulh	x2, x2, x13
   1c030:	lsr	x2, x2, #4
   1c034:	lsl	x10, x2, #5
   1c038:	sub	x10, x10, x2
   1c03c:	add	x10, x2, x10, lsl #2
   1c040:	sub	x3, x3, x10, lsl #3
   1c044:	b	1be60 <PyInit__decimal@@Base+0x18e0>
   1c048:	umulh	x2, x3, x30
   1c04c:	mov	x10, #0xe400                	// #58368
   1c050:	movk	x10, #0x540b, lsl #16
   1c054:	movk	x10, #0x2, lsl #32
   1c058:	lsr	x2, x2, #33
   1c05c:	msub	x3, x2, x10, x3
   1c060:	b	1be60 <PyInit__decimal@@Base+0x18e0>
   1c064:	lsr	x2, x3, #5
   1c068:	mov	x10, #0x86a0                	// #34464
   1c06c:	movk	x10, #0x1, lsl #16
   1c070:	umulh	x2, x2, x14
   1c074:	lsr	x2, x2, #7
   1c078:	msub	x3, x2, x10, x3
   1c07c:	b	1be60 <PyInit__decimal@@Base+0x18e0>
   1c080:	umulh	x2, x3, x16
   1c084:	mov	x10, #0x4240                	// #16960
   1c088:	movk	x10, #0xf, lsl #16
   1c08c:	lsr	x2, x2, #18
   1c090:	msub	x3, x2, x10, x3
   1c094:	b	1be60 <PyInit__decimal@@Base+0x18e0>
   1c098:	lsr	x2, x3, #9
   1c09c:	mov	x10, #0xca00                	// #51712
   1c0a0:	movk	x10, #0x3b9a, lsl #16
   1c0a4:	umulh	x2, x2, x17
   1c0a8:	lsr	x2, x2, #11
   1c0ac:	msub	x3, x2, x10, x3
   1c0b0:	b	1be60 <PyInit__decimal@@Base+0x18e0>
   1c0b4:	umulh	x2, x3, x18
   1c0b8:	mov	x10, #0xe100                	// #57600
   1c0bc:	movk	x10, #0x5f5, lsl #16
   1c0c0:	lsr	x2, x2, #26
   1c0c4:	msub	x3, x2, x10, x3
   1c0c8:	b	1be60 <PyInit__decimal@@Base+0x18e0>
   1c0cc:	mov	x2, #0x7857                	// #30807
   1c0d0:	mov	x10, #0x6fc10000            	// #1874919424
   1c0d4:	movk	x2, #0xb113, lsl #16
   1c0d8:	movk	x10, #0x86f2, lsl #32
   1c0dc:	movk	x2, #0x652f, lsl #32
   1c0e0:	movk	x10, #0x23, lsl #48
   1c0e4:	movk	x2, #0x39a5, lsl #48
   1c0e8:	umulh	x2, x3, x2
   1c0ec:	lsr	x2, x2, #51
   1c0f0:	msub	x3, x2, x10, x3
   1c0f4:	b	1be60 <PyInit__decimal@@Base+0x18e0>
   1c0f8:	mov	x10, #0x490f                	// #18703
   1c0fc:	lsr	x2, x3, #18
   1c100:	movk	x10, #0x7747, lsl #16
   1c104:	movk	x10, #0x49c9, lsl #32
   1c108:	umulh	x2, x2, x10
   1c10c:	mov	x10, #0xa7640000            	// #2808348672
   1c110:	movk	x10, #0xb6b3, lsl #32
   1c114:	movk	x10, #0xde0, lsl #48
   1c118:	lsr	x2, x2, #24
   1c11c:	msub	x3, x2, x10, x3
   1c120:	b	1be60 <PyInit__decimal@@Base+0x18e0>
   1c124:	lsr	x2, x3, #17
   1c128:	umulh	x2, x2, x28
   1c12c:	lsr	x2, x2, #22
   1c130:	msub	x3, x2, x27, x3
   1c134:	b	1be60 <PyInit__decimal@@Base+0x18e0>
   1c138:	cmp	x5, #0x11
   1c13c:	b.eq	1c408 <PyInit__decimal@@Base+0x1e88>  // b.none
   1c140:	cmp	x5, #0x12
   1c144:	b.eq	1c24c <PyInit__decimal@@Base+0x1ccc>  // b.none
   1c148:	cmp	x5, #0x10
   1c14c:	b.eq	1c220 <PyInit__decimal@@Base+0x1ca0>  // b.none
   1c150:	mov	x11, #0xeac3                	// #60099
   1c154:	lsr	x8, x12, #15
   1c158:	movk	x11, #0xf3dc, lsl #16
   1c15c:	mov	x4, #0x8000                	// #32768
   1c160:	movk	x11, #0x4075, lsl #32
   1c164:	movk	x4, #0xa4c6, lsl #16
   1c168:	movk	x11, #0x2, lsl #48
   1c16c:	movk	x4, #0x8d7e, lsl #32
   1c170:	movk	x4, #0x3, lsl #48
   1c174:	umulh	x8, x8, x11
   1c178:	lsr	x8, x8, #20
   1c17c:	msub	x4, x8, x4, x12
   1c180:	b	1bcc8 <PyInit__decimal@@Base+0x1748>
   1c184:	cmp	x5, #0x8
   1c188:	b.eq	1c334 <PyInit__decimal@@Base+0x1db4>  // b.none
   1c18c:	cmp	x5, #0x9
   1c190:	b.eq	1c308 <PyInit__decimal@@Base+0x1d88>  // b.none
   1c194:	cmp	x5, #0x6
   1c198:	b.eq	1c1f8 <PyInit__decimal@@Base+0x1c78>  // b.none
   1c19c:	cmp	x5, #0x7
   1c1a0:	b.ne	1c2b0 <PyInit__decimal@@Base+0x1d30>  // b.any
   1c1a4:	mov	x8, #0x42bd                	// #17085
   1c1a8:	mov	x4, #0x9680                	// #38528
   1c1ac:	movk	x8, #0xe57a, lsl #16
   1c1b0:	movk	x4, #0x98, lsl #16
   1c1b4:	movk	x8, #0x94d5, lsl #32
   1c1b8:	movk	x8, #0xd6bf, lsl #48
   1c1bc:	umulh	x8, x12, x8
   1c1c0:	lsr	x8, x8, #23
   1c1c4:	msub	x4, x8, x4, x12
   1c1c8:	b	1bcc8 <PyInit__decimal@@Base+0x1748>
   1c1cc:	mov	x8, #0xaaff                	// #43775
   1c1d0:	mov	x4, #0xe800                	// #59392
   1c1d4:	movk	x8, #0xcb24, lsl #16
   1c1d8:	movk	x4, #0x4876, lsl #16
   1c1dc:	movk	x8, #0xff0b, lsl #32
   1c1e0:	movk	x4, #0x17, lsl #32
   1c1e4:	movk	x8, #0xafeb, lsl #48
   1c1e8:	umulh	x8, x12, x8
   1c1ec:	lsr	x8, x8, #36
   1c1f0:	msub	x4, x8, x4, x12
   1c1f4:	b	1bcc8 <PyInit__decimal@@Base+0x1748>
   1c1f8:	mov	x8, #0x34db                	// #13531
   1c1fc:	mov	x4, #0x4240                	// #16960
   1c200:	movk	x8, #0xd7b6, lsl #16
   1c204:	movk	x4, #0xf, lsl #16
   1c208:	movk	x8, #0xde82, lsl #32
   1c20c:	movk	x8, #0x431b, lsl #48
   1c210:	umulh	x8, x12, x8
   1c214:	lsr	x8, x8, #18
   1c218:	msub	x4, x8, x4, x12
   1c21c:	b	1bcc8 <PyInit__decimal@@Base+0x1748>
   1c220:	mov	x8, #0x7857                	// #30807
   1c224:	mov	x4, #0x6fc10000            	// #1874919424
   1c228:	movk	x8, #0xb113, lsl #16
   1c22c:	movk	x4, #0x86f2, lsl #32
   1c230:	movk	x8, #0x652f, lsl #32
   1c234:	movk	x4, #0x23, lsl #48
   1c238:	movk	x8, #0x39a5, lsl #48
   1c23c:	umulh	x8, x12, x8
   1c240:	lsr	x8, x8, #51
   1c244:	msub	x4, x8, x4, x12
   1c248:	b	1bcc8 <PyInit__decimal@@Base+0x1748>
   1c24c:	mov	x11, #0x490f                	// #18703
   1c250:	lsr	x8, x12, #18
   1c254:	movk	x11, #0x7747, lsl #16
   1c258:	mov	x4, #0xa7640000            	// #2808348672
   1c25c:	movk	x11, #0x49c9, lsl #32
   1c260:	movk	x4, #0xb6b3, lsl #32
   1c264:	movk	x4, #0xde0, lsl #48
   1c268:	umulh	x8, x8, x11
   1c26c:	lsr	x8, x8, #24
   1c270:	msub	x4, x8, x4, x12
   1c274:	b	1bcc8 <PyInit__decimal@@Base+0x1748>
   1c278:	mul	x10, x9, x4
   1c27c:	str	x10, [x0, x1, lsl #3]
   1c280:	b	281a0 <PyInit__decimal@@Base+0xdc20>
   1c284:	mov	x8, #0x385                 	// #901
   1c288:	mov	x4, #0xa000                	// #40960
   1c28c:	movk	x8, #0x92ed, lsl #16
   1c290:	movk	x4, #0x4e72, lsl #16
   1c294:	movk	x8, #0x84d0, lsl #32
   1c298:	movk	x4, #0x918, lsl #32
   1c29c:	movk	x8, #0x384b, lsl #48
   1c2a0:	umulh	x8, x12, x8
   1c2a4:	lsr	x8, x8, #41
   1c2a8:	msub	x4, x8, x4, x12
   1c2ac:	b	1bcc8 <PyInit__decimal@@Base+0x1748>
   1c2b0:	mov	x11, #0x7843                	// #30787
   1c2b4:	lsr	x8, x12, #5
   1c2b8:	movk	x11, #0x71b4, lsl #16
   1c2bc:	mov	x4, #0x86a0                	// #34464
   1c2c0:	movk	x11, #0x5ac4, lsl #32
   1c2c4:	movk	x4, #0x1, lsl #16
   1c2c8:	movk	x11, #0xa7c, lsl #48
   1c2cc:	umulh	x8, x8, x11
   1c2d0:	lsr	x8, x8, #7
   1c2d4:	msub	x4, x8, x4, x12
   1c2d8:	b	1bcc8 <PyInit__decimal@@Base+0x1748>
   1c2dc:	mov	x8, #0xcd81                	// #52609
   1c2e0:	mov	x4, #0x4000                	// #16384
   1c2e4:	movk	x8, #0x5095, lsl #16
   1c2e8:	movk	x4, #0x107a, lsl #16
   1c2ec:	movk	x8, #0x4dc3, lsl #32
   1c2f0:	movk	x4, #0x5af3, lsl #32
   1c2f4:	movk	x8, #0xb42, lsl #48
   1c2f8:	umulh	x8, x12, x8
   1c2fc:	lsr	x8, x8, #42
   1c300:	msub	x4, x8, x4, x12
   1c304:	b	1bcc8 <PyInit__decimal@@Base+0x1748>
   1c308:	mov	x11, #0x5a53                	// #23123
   1c30c:	lsr	x8, x12, #9
   1c310:	movk	x11, #0xa09b, lsl #16
   1c314:	mov	x4, #0xca00                	// #51712
   1c318:	movk	x11, #0xb82f, lsl #32
   1c31c:	movk	x4, #0x3b9a, lsl #16
   1c320:	movk	x11, #0x44, lsl #48
   1c324:	umulh	x8, x8, x11
   1c328:	lsr	x8, x8, #11
   1c32c:	msub	x4, x8, x4, x12
   1c330:	b	1bcc8 <PyInit__decimal@@Base+0x1748>
   1c334:	mov	x8, #0xcefd                	// #52989
   1c338:	mov	x4, #0xe100                	// #57600
   1c33c:	movk	x8, #0x8461, lsl #16
   1c340:	movk	x4, #0x5f5, lsl #16
   1c344:	movk	x8, #0x7711, lsl #32
   1c348:	movk	x8, #0xabcc, lsl #48
   1c34c:	umulh	x8, x12, x8
   1c350:	lsr	x8, x8, #26
   1c354:	msub	x4, x8, x4, x12
   1c358:	b	1bcc8 <PyInit__decimal@@Base+0x1748>
   1c35c:	mov	x8, #0xd5bf                	// #54719
   1c360:	mov	x4, #0xe400                	// #58368
   1c364:	movk	x8, #0xbded, lsl #16
   1c368:	movk	x4, #0x540b, lsl #16
   1c36c:	movk	x8, #0xfece, lsl #32
   1c370:	movk	x4, #0x2, lsl #32
   1c374:	movk	x8, #0xdbe6, lsl #48
   1c378:	umulh	x8, x12, x8
   1c37c:	lsr	x8, x8, #33
   1c380:	msub	x4, x8, x4, x12
   1c384:	b	1bcc8 <PyInit__decimal@@Base+0x1748>
   1c388:	mov	x4, #0xf5c3                	// #62915
   1c38c:	lsr	x8, x12, #2
   1c390:	movk	x4, #0x5c28, lsl #16
   1c394:	movk	x4, #0xc28f, lsl #32
   1c398:	movk	x4, #0x28f5, lsl #48
   1c39c:	umulh	x8, x8, x4
   1c3a0:	lsr	x8, x8, #2
   1c3a4:	add	x4, x8, x8, lsl #1
   1c3a8:	add	x4, x8, x4, lsl #3
   1c3ac:	sub	x4, x12, x4, lsl #2
   1c3b0:	b	1bcc8 <PyInit__decimal@@Base+0x1748>
   1c3b4:	mov	x8, #0x594b                	// #22859
   1c3b8:	mov	x4, #0x2710                	// #10000
   1c3bc:	movk	x8, #0x3886, lsl #16
   1c3c0:	movk	x8, #0xc5d6, lsl #32
   1c3c4:	movk	x8, #0x346d, lsl #48
   1c3c8:	umulh	x8, x12, x8
   1c3cc:	lsr	x8, x8, #11
   1c3d0:	msub	x4, x8, x4, x12
   1c3d4:	b	1bcc8 <PyInit__decimal@@Base+0x1748>
   1c3d8:	mov	x4, #0xf7cf                	// #63439
   1c3dc:	lsr	x8, x12, #3
   1c3e0:	movk	x4, #0xe353, lsl #16
   1c3e4:	movk	x4, #0x9ba5, lsl #32
   1c3e8:	movk	x4, #0x20c4, lsl #48
   1c3ec:	umulh	x8, x8, x4
   1c3f0:	lsr	x8, x8, #4
   1c3f4:	lsl	x11, x8, #5
   1c3f8:	sub	x11, x11, x8
   1c3fc:	add	x11, x8, x11, lsl #2
   1c400:	sub	x4, x12, x11, lsl #3
   1c404:	b	1bcc8 <PyInit__decimal@@Base+0x1748>
   1c408:	mov	x11, #0x1b53                	// #6995
   1c40c:	lsr	x8, x12, #17
   1c410:	movk	x11, #0xd519, lsl #16
   1c414:	mov	x4, #0x5d8a0000            	// #1569325056
   1c418:	movk	x11, #0x5c3b, lsl #32
   1c41c:	movk	x4, #0x4578, lsl #32
   1c420:	movk	x4, #0x163, lsl #48
   1c424:	umulh	x8, x8, x11
   1c428:	lsr	x8, x8, #22
   1c42c:	msub	x4, x8, x4, x12
   1c430:	b	1bcc8 <PyInit__decimal@@Base+0x1748>
   1c434:	nop
   1c438:	mov	x8, #0x435f                	// #17247
   1c43c:	mov	x9, x0
   1c440:	movk	x8, #0xd79, lsl #16
   1c444:	movk	x8, #0x35e5, lsl #32
   1c448:	movk	x8, #0xd794, lsl #48
   1c44c:	umulh	x8, x3, x8
   1c450:	lsr	x8, x8, #4
   1c454:	add	x4, x8, x8, lsl #2
   1c458:	lsl	x4, x4, #2
   1c45c:	sub	x4, x4, x8
   1c460:	subs	x4, x3, x4
   1c464:	b.ne	1c534 <PyInit__decimal@@Base+0x1fb4>  // b.any
   1c468:	cmp	x3, #0x12
   1c46c:	b.hi	1c4b4 <PyInit__decimal@@Base+0x1f34>  // b.pmore
   1c470:	subs	x2, x2, x8
   1c474:	mov	x10, #0x0                   	// #0
   1c478:	mov	x0, #0x0                   	// #0
   1c47c:	b.eq	1c85c <PyInit__decimal@@Base+0x22dc>  // b.none
   1c480:	lsl	x3, x8, #3
   1c484:	mov	x10, #0x0                   	// #0
   1c488:	mov	x0, #0x0                   	// #0
   1c48c:	mov	w11, #0x1                   	// #1
   1c490:	add	x1, x1, x3
   1c494:	nop
   1c498:	ldr	x3, [x1, x4, lsl #3]
   1c49c:	str	x3, [x9, x4, lsl #3]
   1c4a0:	add	x4, x4, #0x1
   1c4a4:	cmp	x4, x2
   1c4a8:	b.ne	1c498 <PyInit__decimal@@Base+0x1f18>  // b.any
   1c4ac:	cbnz	w11, 1c85c <PyInit__decimal@@Base+0x22dc>
   1c4b0:	ret
   1c4b4:	lsl	x3, x8, #3
   1c4b8:	mov	x7, #0x490f                	// #18703
   1c4bc:	add	x0, x1, x3
   1c4c0:	movk	x7, #0x7747, lsl #16
   1c4c4:	movk	x7, #0x49c9, lsl #32
   1c4c8:	mov	x10, #0xa7640000            	// #2808348672
   1c4cc:	movk	x10, #0xb6b3, lsl #32
   1c4d0:	mov	x6, #0xffffffffa763ffff    	// #-1486618625
   1c4d4:	ldur	x5, [x0, #-8]
   1c4d8:	movk	x10, #0xde0, lsl #48
   1c4dc:	movk	x6, #0xb6b3, lsl #32
   1c4e0:	movk	x6, #0xde0, lsl #48
   1c4e4:	lsr	x0, x5, #18
   1c4e8:	umulh	x0, x0, x7
   1c4ec:	lsr	x0, x0, #24
   1c4f0:	cmp	x0, #0x5
   1c4f4:	cset	w11, eq  // eq = none
   1c4f8:	cmp	x5, x6
   1c4fc:	msub	x10, x0, x10, x5
   1c500:	cset	w5, ls  // ls = plast
   1c504:	orr	w11, w11, w5
   1c508:	cbnz	x10, 1c524 <PyInit__decimal@@Base+0x1fa4>
   1c50c:	sub	x5, x8, #0x1
   1c510:	b	1c51c <PyInit__decimal@@Base+0x1f9c>
   1c514:	ldr	x6, [x1, x5, lsl #3]
   1c518:	cbnz	x6, 1c964 <PyInit__decimal@@Base+0x23e4>
   1c51c:	subs	x5, x5, #0x1
   1c520:	b.pl	1c514 <PyInit__decimal@@Base+0x1f94>  // b.nfrst
   1c524:	subs	x2, x2, x8
   1c528:	b.ne	1c490 <PyInit__decimal@@Base+0x1f10>  // b.any
   1c52c:	cbz	w11, 1c4b0 <PyInit__decimal@@Base+0x1f30>
   1c530:	b	1c85c <PyInit__decimal@@Base+0x22dc>
   1c534:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27a80>
   1c538:	mov	x5, #0x13                  	// #19
   1c53c:	add	x0, x0, #0x2d0
   1c540:	sub	x5, x5, x4
   1c544:	cmp	x4, #0x9
   1c548:	ldr	x10, [x1, x8, lsl #3]
   1c54c:	ldr	x11, [x0, x5, lsl #3]
   1c550:	b.hi	1c7dc <PyInit__decimal@@Base+0x225c>  // b.pmore
   1c554:	cmp	x4, #0x4
   1c558:	b.hi	1c868 <PyInit__decimal@@Base+0x22e8>  // b.pmore
   1c55c:	cmp	x4, #0x3
   1c560:	b.eq	1ce20 <PyInit__decimal@@Base+0x28a0>  // b.none
   1c564:	cmp	x4, #0x4
   1c568:	b.eq	1cdcc <PyInit__decimal@@Base+0x284c>  // b.none
   1c56c:	cmp	x4, #0x2
   1c570:	b.eq	1cf70 <PyInit__decimal@@Base+0x29f0>  // b.none
   1c574:	mov	x5, #0xcccccccccccccccc    	// #-3689348814741910324
   1c578:	cmp	x4, #0x3
   1c57c:	movk	x5, #0xcccd
   1c580:	sub	x6, x4, #0x1
   1c584:	umulh	x5, x10, x5
   1c588:	lsr	x5, x5, #3
   1c58c:	add	x0, x5, x5, lsl #2
   1c590:	sub	x0, x10, x0, lsl #1
   1c594:	b.eq	1d0b8 <PyInit__decimal@@Base+0x2b38>  // b.none
   1c598:	cmp	x6, #0x1
   1c59c:	b.eq	1d0c0 <PyInit__decimal@@Base+0x2b40>  // b.none
   1c5a0:	cmp	x3, #0x12
   1c5a4:	mov	x10, #0x0                   	// #0
   1c5a8:	b.ls	1c5d0 <PyInit__decimal@@Base+0x2050>  // b.plast
   1c5ac:	mov	x3, x8
   1c5b0:	b	1c5bc <PyInit__decimal@@Base+0x203c>
   1c5b4:	ldr	x6, [x1, x3, lsl #3]
   1c5b8:	cbnz	x6, 1ccec <PyInit__decimal@@Base+0x276c>
   1c5bc:	sub	x3, x3, #0x1
   1c5c0:	cmn	x3, #0x1
   1c5c4:	b.ne	1c5b4 <PyInit__decimal@@Base+0x2034>  // b.any
   1c5c8:	mov	x10, #0x0                   	// #0
   1c5cc:	nop
   1c5d0:	add	x7, x8, #0x1
   1c5d4:	cmp	x2, x7
   1c5d8:	b.ls	1ccf4 <PyInit__decimal@@Base+0x2774>  // b.plast
   1c5dc:	stp	x29, x30, [sp, #-96]!
   1c5e0:	mov	x18, #0x34db                	// #13531
   1c5e4:	mov	x30, #0x5a53                	// #23123
   1c5e8:	mov	x29, sp
   1c5ec:	mov	x17, #0x42bd                	// #17085
   1c5f0:	mov	x16, #0x7843                	// #30787
   1c5f4:	mov	x15, #0xf7cf                	// #63439
   1c5f8:	mov	x14, #0x594b                	// #22859
   1c5fc:	stp	x19, x20, [sp, #16]
   1c600:	mov	x20, #0xd5bf                	// #54719
   1c604:	mov	x19, #0xcefd                	// #52989
   1c608:	stp	x21, x22, [sp, #32]
   1c60c:	mov	x22, #0x2233                	// #8755
   1c610:	movk	x22, #0x5bd4, lsl #16
   1c614:	stp	x23, x24, [sp, #48]
   1c618:	mov	x24, #0xaaff                	// #43775
   1c61c:	movk	x24, #0xcb24, lsl #16
   1c620:	stp	x25, x26, [sp, #64]
   1c624:	mov	x26, #0xcd81                	// #52609
   1c628:	movk	x26, #0x5095, lsl #16
   1c62c:	stp	x27, x28, [sp, #80]
   1c630:	mov	x28, #0x385                 	// #901
   1c634:	movk	x28, #0x92ed, lsl #16
   1c638:	mov	x27, #0xa000                	// #40960
   1c63c:	mov	x25, #0x4000                	// #16384
   1c640:	mov	x23, #0xe800                	// #59392
   1c644:	mov	x21, #0x1000                	// #4096
   1c648:	movk	x20, #0xbded, lsl #16
   1c64c:	movk	x19, #0x8461, lsl #16
   1c650:	movk	x30, #0xa09b, lsl #16
   1c654:	movk	x18, #0xd7b6, lsl #16
   1c658:	movk	x17, #0xe57a, lsl #16
   1c65c:	movk	x16, #0x71b4, lsl #16
   1c660:	movk	x15, #0xe353, lsl #16
   1c664:	movk	x14, #0x3886, lsl #16
   1c668:	movk	x28, #0x84d0, lsl #32
   1c66c:	movk	x27, #0x4e72, lsl #16
   1c670:	movk	x26, #0x4dc3, lsl #32
   1c674:	movk	x25, #0x107a, lsl #16
   1c678:	movk	x24, #0xff0b, lsl #32
   1c67c:	movk	x23, #0x4876, lsl #16
   1c680:	movk	x22, #0x3302, lsl #32
   1c684:	movk	x21, #0xd4a5, lsl #16
   1c688:	movk	x20, #0xfece, lsl #32
   1c68c:	movk	x19, #0x7711, lsl #32
   1c690:	movk	x30, #0xb82f, lsl #32
   1c694:	movk	x18, #0xde82, lsl #32
   1c698:	movk	x17, #0x94d5, lsl #32
   1c69c:	movk	x16, #0x5ac4, lsl #32
   1c6a0:	movk	x15, #0x9ba5, lsl #32
   1c6a4:	movk	x14, #0xc5d6, lsl #32
   1c6a8:	sub	x12, x9, x7, lsl #3
   1c6ac:	movk	x28, #0x384b, lsl #48
   1c6b0:	movk	x27, #0x918, lsl #32
   1c6b4:	movk	x26, #0xb42, lsl #48
   1c6b8:	movk	x25, #0x5af3, lsl #32
   1c6bc:	movk	x24, #0xafeb, lsl #48
   1c6c0:	movk	x23, #0x17, lsl #32
   1c6c4:	movk	x22, #0x232f, lsl #48
   1c6c8:	movk	x21, #0xe8, lsl #32
   1c6cc:	movk	x20, #0xdbe6, lsl #48
   1c6d0:	movk	x19, #0xabcc, lsl #48
   1c6d4:	movk	x30, #0x44, lsl #48
   1c6d8:	movk	x18, #0x431b, lsl #48
   1c6dc:	movk	x17, #0xd6bf, lsl #48
   1c6e0:	movk	x16, #0xa7c, lsl #48
   1c6e4:	movk	x15, #0x20c4, lsl #48
   1c6e8:	movk	x14, #0x346d, lsl #48
   1c6ec:	b	1c744 <PyInit__decimal@@Base+0x21c4>
   1c6f0:	cmp	x4, #0x4
   1c6f4:	b.hi	1cb1c <PyInit__decimal@@Base+0x259c>  // b.pmore
   1c6f8:	cmp	x4, #0x3
   1c6fc:	b.eq	1cbe0 <PyInit__decimal@@Base+0x2660>  // b.none
   1c700:	cmp	x4, #0x4
   1c704:	b.eq	1cb80 <PyInit__decimal@@Base+0x2600>  // b.none
   1c708:	cmp	x4, #0x2
   1c70c:	b.eq	1cb54 <PyInit__decimal@@Base+0x25d4>  // b.none
   1c710:	mov	x6, #0xcccccccccccccccc    	// #-3689348814741910324
   1c714:	movk	x6, #0xcccd
   1c718:	umulh	x6, x3, x6
   1c71c:	lsr	x6, x6, #3
   1c720:	add	x13, x6, x6, lsl #2
   1c724:	sub	x3, x3, x13, lsl #1
   1c728:	madd	x3, x11, x3, x5
   1c72c:	add	x13, x7, #0x1
   1c730:	str	x3, [x12, x7, lsl #3]
   1c734:	cmp	x2, x13
   1c738:	b.eq	1c798 <PyInit__decimal@@Base+0x2218>  // b.none
   1c73c:	mov	x5, x6
   1c740:	mov	x7, x13
   1c744:	cmp	x4, #0x9
   1c748:	ldr	x3, [x1, x7, lsl #3]
   1c74c:	b.ls	1c6f0 <PyInit__decimal@@Base+0x2170>  // b.plast
   1c750:	cmp	x4, #0xe
   1c754:	b.hi	1cad0 <PyInit__decimal@@Base+0x2550>  // b.pmore
   1c758:	cmp	x4, #0xd
   1c75c:	b.eq	1cb94 <PyInit__decimal@@Base+0x2614>  // b.none
   1c760:	cmp	x4, #0xe
   1c764:	b.eq	1cbb4 <PyInit__decimal@@Base+0x2634>  // b.none
   1c768:	cmp	x4, #0xb
   1c76c:	b.eq	1cba4 <PyInit__decimal@@Base+0x2624>  // b.none
   1c770:	cmp	x4, #0xc
   1c774:	b.ne	1cbc4 <PyInit__decimal@@Base+0x2644>  // b.any
   1c778:	umulh	x6, x3, x22
   1c77c:	add	x13, x7, #0x1
   1c780:	cmp	x2, x13
   1c784:	lsr	x6, x6, #37
   1c788:	msub	x3, x6, x21, x3
   1c78c:	madd	x3, x11, x3, x5
   1c790:	str	x3, [x12, x7, lsl #3]
   1c794:	b.ne	1c73c <PyInit__decimal@@Base+0x21bc>  // b.any
   1c798:	cmp	x0, #0x0
   1c79c:	sub	x7, x7, x8
   1c7a0:	cset	w11, eq  // eq = none
   1c7a4:	cmp	x0, #0x5
   1c7a8:	csinc	w11, w11, wzr, ne  // ne = any
   1c7ac:	cbz	x6, 1c7b4 <PyInit__decimal@@Base+0x2234>
   1c7b0:	str	x6, [x9, x7, lsl #3]
   1c7b4:	cbz	w11, 1c7c0 <PyInit__decimal@@Base+0x2240>
   1c7b8:	cmp	x10, #0x0
   1c7bc:	cinc	x0, x0, ne  // ne = any
   1c7c0:	ldp	x19, x20, [sp, #16]
   1c7c4:	ldp	x21, x22, [sp, #32]
   1c7c8:	ldp	x23, x24, [sp, #48]
   1c7cc:	ldp	x25, x26, [sp, #64]
   1c7d0:	ldp	x27, x28, [sp, #80]
   1c7d4:	ldp	x29, x30, [sp], #96
   1c7d8:	ret
   1c7dc:	cmp	x4, #0xe
   1c7e0:	b.hi	1c8d8 <PyInit__decimal@@Base+0x2358>  // b.pmore
   1c7e4:	cmp	x4, #0xd
   1c7e8:	b.eq	1ce7c <PyInit__decimal@@Base+0x28fc>  // b.none
   1c7ec:	cmp	x4, #0xe
   1c7f0:	b.eq	1cd74 <PyInit__decimal@@Base+0x27f4>  // b.none
   1c7f4:	cmp	x4, #0xb
   1c7f8:	b.eq	1c9c0 <PyInit__decimal@@Base+0x2440>  // b.none
   1c7fc:	cmp	x4, #0xc
   1c800:	b.ne	1d028 <PyInit__decimal@@Base+0x2aa8>  // b.any
   1c804:	mov	x5, #0x2233                	// #8755
   1c808:	mov	x0, #0x1000                	// #4096
   1c80c:	movk	x5, #0x5bd4, lsl #16
   1c810:	movk	x0, #0xd4a5, lsl #16
   1c814:	movk	x5, #0x3302, lsl #32
   1c818:	movk	x0, #0xe8, lsl #32
   1c81c:	movk	x5, #0x232f, lsl #48
   1c820:	umulh	x5, x10, x5
   1c824:	lsr	x5, x5, #37
   1c828:	msub	x10, x5, x0, x10
   1c82c:	mov	x0, #0xaaff                	// #43775
   1c830:	mov	x6, #0xe800                	// #59392
   1c834:	movk	x0, #0xcb24, lsl #16
   1c838:	movk	x6, #0x4876, lsl #16
   1c83c:	movk	x0, #0xff0b, lsl #32
   1c840:	movk	x6, #0x17, lsl #32
   1c844:	movk	x0, #0xafeb, lsl #48
   1c848:	umulh	x0, x10, x0
   1c84c:	lsr	x0, x0, #36
   1c850:	msub	x10, x0, x6, x10
   1c854:	cbnz	x10, 1c5d0 <PyInit__decimal@@Base+0x2050>
   1c858:	b	1c5a0 <PyInit__decimal@@Base+0x2020>
   1c85c:	cmp	x10, #0x0
   1c860:	cinc	x0, x0, ne  // ne = any
   1c864:	ret
   1c868:	cmp	x4, #0x8
   1c86c:	b.eq	1cee8 <PyInit__decimal@@Base+0x2968>  // b.none
   1c870:	cmp	x4, #0x9
   1c874:	b.eq	1cfd4 <PyInit__decimal@@Base+0x2a54>  // b.none
   1c878:	cmp	x4, #0x6
   1c87c:	b.eq	1c96c <PyInit__decimal@@Base+0x23ec>  // b.none
   1c880:	cmp	x4, #0x7
   1c884:	b.ne	1cd18 <PyInit__decimal@@Base+0x2798>  // b.any
   1c888:	mov	x5, #0x42bd                	// #17085
   1c88c:	mov	x0, #0x9680                	// #38528
   1c890:	movk	x5, #0xe57a, lsl #16
   1c894:	movk	x0, #0x98, lsl #16
   1c898:	movk	x5, #0x94d5, lsl #32
   1c89c:	movk	x5, #0xd6bf, lsl #48
   1c8a0:	umulh	x5, x10, x5
   1c8a4:	lsr	x5, x5, #23
   1c8a8:	msub	x10, x5, x0, x10
   1c8ac:	mov	x0, #0x34db                	// #13531
   1c8b0:	mov	x6, #0x4240                	// #16960
   1c8b4:	movk	x0, #0xd7b6, lsl #16
   1c8b8:	movk	x6, #0xf, lsl #16
   1c8bc:	movk	x0, #0xde82, lsl #32
   1c8c0:	movk	x0, #0x431b, lsl #48
   1c8c4:	umulh	x0, x10, x0
   1c8c8:	lsr	x0, x0, #18
   1c8cc:	msub	x10, x0, x6, x10
   1c8d0:	cbnz	x10, 1c5d0 <PyInit__decimal@@Base+0x2050>
   1c8d4:	b	1c5a0 <PyInit__decimal@@Base+0x2020>
   1c8d8:	cmp	x4, #0x11
   1c8dc:	b.eq	1d08c <PyInit__decimal@@Base+0x2b0c>  // b.none
   1c8e0:	cmp	x4, #0x12
   1c8e4:	b.eq	1ca78 <PyInit__decimal@@Base+0x24f8>  // b.none
   1c8e8:	cmp	x4, #0x10
   1c8ec:	b.eq	1ca18 <PyInit__decimal@@Base+0x2498>  // b.none
   1c8f0:	mov	x7, #0xeac3                	// #60099
   1c8f4:	lsr	x5, x10, #15
   1c8f8:	movk	x7, #0xf3dc, lsl #16
   1c8fc:	mov	x6, #0x8000                	// #32768
   1c900:	movk	x7, #0x4075, lsl #32
   1c904:	movk	x6, #0xa4c6, lsl #16
   1c908:	movk	x7, #0x2, lsl #48
   1c90c:	movk	x6, #0x8d7e, lsl #32
   1c910:	movk	x6, #0x3, lsl #48
   1c914:	sub	x0, x4, #0x1
   1c918:	umulh	x5, x5, x7
   1c91c:	cmp	x0, #0xe
   1c920:	lsr	x5, x5, #20
   1c924:	msub	x10, x5, x6, x10
   1c928:	b.ls	1cf38 <PyInit__decimal@@Base+0x29b8>  // b.plast
   1c92c:	cmp	x0, #0x10
   1c930:	b.ne	1ca40 <PyInit__decimal@@Base+0x24c0>  // b.any
   1c934:	mov	x0, #0x7857                	// #30807
   1c938:	mov	x6, #0x6fc10000            	// #1874919424
   1c93c:	movk	x0, #0xb113, lsl #16
   1c940:	movk	x6, #0x86f2, lsl #32
   1c944:	movk	x0, #0x652f, lsl #32
   1c948:	movk	x6, #0x23, lsl #48
   1c94c:	movk	x0, #0x39a5, lsl #48
   1c950:	umulh	x0, x10, x0
   1c954:	lsr	x0, x0, #51
   1c958:	msub	x10, x0, x6, x10
   1c95c:	cbnz	x10, 1c5d0 <PyInit__decimal@@Base+0x2050>
   1c960:	b	1c5a0 <PyInit__decimal@@Base+0x2020>
   1c964:	mov	x10, #0x1                   	// #1
   1c968:	b	1c524 <PyInit__decimal@@Base+0x1fa4>
   1c96c:	mov	x5, #0x34db                	// #13531
   1c970:	mov	x0, #0x4240                	// #16960
   1c974:	movk	x5, #0xd7b6, lsl #16
   1c978:	movk	x0, #0xf, lsl #16
   1c97c:	movk	x5, #0xde82, lsl #32
   1c980:	movk	x5, #0x431b, lsl #48
   1c984:	umulh	x5, x10, x5
   1c988:	lsr	x5, x5, #18
   1c98c:	msub	x10, x5, x0, x10
   1c990:	mov	x7, #0x7843                	// #30787
   1c994:	lsr	x0, x10, #5
   1c998:	movk	x7, #0x71b4, lsl #16
   1c99c:	mov	x6, #0x86a0                	// #34464
   1c9a0:	movk	x7, #0x5ac4, lsl #32
   1c9a4:	movk	x6, #0x1, lsl #16
   1c9a8:	movk	x7, #0xa7c, lsl #48
   1c9ac:	umulh	x0, x0, x7
   1c9b0:	lsr	x0, x0, #7
   1c9b4:	msub	x10, x0, x6, x10
   1c9b8:	cbnz	x10, 1c5d0 <PyInit__decimal@@Base+0x2050>
   1c9bc:	b	1c5a0 <PyInit__decimal@@Base+0x2020>
   1c9c0:	mov	x5, #0xaaff                	// #43775
   1c9c4:	mov	x0, #0xe800                	// #59392
   1c9c8:	movk	x5, #0xcb24, lsl #16
   1c9cc:	movk	x0, #0x4876, lsl #16
   1c9d0:	movk	x5, #0xff0b, lsl #32
   1c9d4:	movk	x0, #0x17, lsl #32
   1c9d8:	movk	x5, #0xafeb, lsl #48
   1c9dc:	umulh	x5, x10, x5
   1c9e0:	lsr	x5, x5, #36
   1c9e4:	msub	x10, x5, x0, x10
   1c9e8:	mov	x0, #0xd5bf                	// #54719
   1c9ec:	mov	x6, #0xe400                	// #58368
   1c9f0:	movk	x0, #0xbded, lsl #16
   1c9f4:	movk	x6, #0x540b, lsl #16
   1c9f8:	movk	x0, #0xfece, lsl #32
   1c9fc:	movk	x6, #0x2, lsl #32
   1ca00:	movk	x0, #0xdbe6, lsl #48
   1ca04:	umulh	x0, x10, x0
   1ca08:	lsr	x0, x0, #33
   1ca0c:	msub	x10, x0, x6, x10
   1ca10:	cbnz	x10, 1c5d0 <PyInit__decimal@@Base+0x2050>
   1ca14:	b	1c5a0 <PyInit__decimal@@Base+0x2020>
   1ca18:	mov	x5, #0x7857                	// #30807
   1ca1c:	mov	x0, #0x6fc10000            	// #1874919424
   1ca20:	movk	x5, #0xb113, lsl #16
   1ca24:	movk	x0, #0x86f2, lsl #32
   1ca28:	movk	x5, #0x652f, lsl #32
   1ca2c:	movk	x0, #0x23, lsl #48
   1ca30:	movk	x5, #0x39a5, lsl #48
   1ca34:	umulh	x5, x10, x5
   1ca38:	lsr	x5, x5, #51
   1ca3c:	msub	x10, x5, x0, x10
   1ca40:	mov	x7, #0xeac3                	// #60099
   1ca44:	lsr	x0, x10, #15
   1ca48:	movk	x7, #0xf3dc, lsl #16
   1ca4c:	mov	x6, #0x8000                	// #32768
   1ca50:	movk	x7, #0x4075, lsl #32
   1ca54:	movk	x6, #0xa4c6, lsl #16
   1ca58:	movk	x7, #0x2, lsl #48
   1ca5c:	movk	x6, #0x8d7e, lsl #32
   1ca60:	movk	x6, #0x3, lsl #48
   1ca64:	umulh	x0, x0, x7
   1ca68:	lsr	x0, x0, #20
   1ca6c:	msub	x10, x0, x6, x10
   1ca70:	cbnz	x10, 1c5d0 <PyInit__decimal@@Base+0x2050>
   1ca74:	b	1c5a0 <PyInit__decimal@@Base+0x2020>
   1ca78:	mov	x12, #0x490f                	// #18703
   1ca7c:	lsr	x5, x10, #18
   1ca80:	movk	x12, #0x7747, lsl #16
   1ca84:	mov	x0, #0xa7640000            	// #2808348672
   1ca88:	movk	x12, #0x49c9, lsl #32
   1ca8c:	movk	x0, #0xb6b3, lsl #32
   1ca90:	movk	x0, #0xde0, lsl #48
   1ca94:	mov	x7, #0x1b53                	// #6995
   1ca98:	umulh	x5, x5, x12
   1ca9c:	movk	x7, #0xd519, lsl #16
   1caa0:	movk	x7, #0x5c3b, lsl #32
   1caa4:	mov	x6, #0x5d8a0000            	// #1569325056
   1caa8:	movk	x6, #0x4578, lsl #32
   1caac:	lsr	x5, x5, #24
   1cab0:	movk	x6, #0x163, lsl #48
   1cab4:	msub	x10, x5, x0, x10
   1cab8:	lsr	x0, x10, #17
   1cabc:	umulh	x0, x0, x7
   1cac0:	lsr	x0, x0, #22
   1cac4:	msub	x10, x0, x6, x10
   1cac8:	cbnz	x10, 1c5d0 <PyInit__decimal@@Base+0x2050>
   1cacc:	b	1c5a0 <PyInit__decimal@@Base+0x2020>
   1cad0:	cmp	x4, #0x11
   1cad4:	b.eq	1ccc0 <PyInit__decimal@@Base+0x2740>  // b.none
   1cad8:	cmp	x4, #0x12
   1cadc:	b.eq	1cc94 <PyInit__decimal@@Base+0x2714>  // b.none
   1cae0:	cmp	x4, #0x10
   1cae4:	b.eq	1cc68 <PyInit__decimal@@Base+0x26e8>  // b.none
   1cae8:	mov	x13, #0xeac3                	// #60099
   1caec:	lsr	x6, x3, #15
   1caf0:	movk	x13, #0xf3dc, lsl #16
   1caf4:	movk	x13, #0x4075, lsl #32
   1caf8:	movk	x13, #0x2, lsl #48
   1cafc:	umulh	x6, x6, x13
   1cb00:	mov	x13, #0x8000                	// #32768
   1cb04:	movk	x13, #0xa4c6, lsl #16
   1cb08:	movk	x13, #0x8d7e, lsl #32
   1cb0c:	lsr	x6, x6, #20
   1cb10:	movk	x13, #0x3, lsl #48
   1cb14:	msub	x3, x6, x13, x3
   1cb18:	b	1c728 <PyInit__decimal@@Base+0x21a8>
   1cb1c:	cmp	x4, #0x8
   1cb20:	b.eq	1cc50 <PyInit__decimal@@Base+0x26d0>  // b.none
   1cb24:	cmp	x4, #0x9
   1cb28:	b.eq	1cc34 <PyInit__decimal@@Base+0x26b4>  // b.none
   1cb2c:	cmp	x4, #0x6
   1cb30:	b.eq	1cc1c <PyInit__decimal@@Base+0x269c>  // b.none
   1cb34:	cmp	x4, #0x7
   1cb38:	b.ne	1cc00 <PyInit__decimal@@Base+0x2680>  // b.any
   1cb3c:	umulh	x6, x3, x17
   1cb40:	mov	x13, #0x9680                	// #38528
   1cb44:	movk	x13, #0x98, lsl #16
   1cb48:	lsr	x6, x6, #23
   1cb4c:	msub	x3, x6, x13, x3
   1cb50:	b	1c728 <PyInit__decimal@@Base+0x21a8>
   1cb54:	mov	x13, #0xf5c3                	// #62915
   1cb58:	lsr	x6, x3, #2
   1cb5c:	movk	x13, #0x5c28, lsl #16
   1cb60:	movk	x13, #0xc28f, lsl #32
   1cb64:	movk	x13, #0x28f5, lsl #48
   1cb68:	umulh	x6, x6, x13
   1cb6c:	lsr	x6, x6, #2
   1cb70:	add	x13, x6, x6, lsl #1
   1cb74:	add	x13, x6, x13, lsl #3
   1cb78:	sub	x3, x3, x13, lsl #2
   1cb7c:	b	1c728 <PyInit__decimal@@Base+0x21a8>
   1cb80:	umulh	x6, x3, x14
   1cb84:	mov	x13, #0x2710                	// #10000
   1cb88:	lsr	x6, x6, #11
   1cb8c:	msub	x3, x6, x13, x3
   1cb90:	b	1c728 <PyInit__decimal@@Base+0x21a8>
   1cb94:	umulh	x6, x3, x28
   1cb98:	lsr	x6, x6, #41
   1cb9c:	msub	x3, x6, x27, x3
   1cba0:	b	1c728 <PyInit__decimal@@Base+0x21a8>
   1cba4:	umulh	x6, x3, x24
   1cba8:	lsr	x6, x6, #36
   1cbac:	msub	x3, x6, x23, x3
   1cbb0:	b	1c728 <PyInit__decimal@@Base+0x21a8>
   1cbb4:	umulh	x6, x3, x26
   1cbb8:	lsr	x6, x6, #42
   1cbbc:	msub	x3, x6, x25, x3
   1cbc0:	b	1c728 <PyInit__decimal@@Base+0x21a8>
   1cbc4:	umulh	x6, x3, x20
   1cbc8:	mov	x13, #0xe400                	// #58368
   1cbcc:	movk	x13, #0x540b, lsl #16
   1cbd0:	movk	x13, #0x2, lsl #32
   1cbd4:	lsr	x6, x6, #33
   1cbd8:	msub	x3, x6, x13, x3
   1cbdc:	b	1c728 <PyInit__decimal@@Base+0x21a8>
   1cbe0:	lsr	x6, x3, #3
   1cbe4:	umulh	x6, x6, x15
   1cbe8:	lsr	x6, x6, #4
   1cbec:	lsl	x13, x6, #5
   1cbf0:	sub	x13, x13, x6
   1cbf4:	add	x13, x6, x13, lsl #2
   1cbf8:	sub	x3, x3, x13, lsl #3
   1cbfc:	b	1c728 <PyInit__decimal@@Base+0x21a8>
   1cc00:	lsr	x6, x3, #5
   1cc04:	mov	x13, #0x86a0                	// #34464
   1cc08:	movk	x13, #0x1, lsl #16
   1cc0c:	umulh	x6, x6, x16
   1cc10:	lsr	x6, x6, #7
   1cc14:	msub	x3, x6, x13, x3
   1cc18:	b	1c728 <PyInit__decimal@@Base+0x21a8>
   1cc1c:	umulh	x6, x3, x18
   1cc20:	mov	x13, #0x4240                	// #16960
   1cc24:	movk	x13, #0xf, lsl #16
   1cc28:	lsr	x6, x6, #18
   1cc2c:	msub	x3, x6, x13, x3
   1cc30:	b	1c728 <PyInit__decimal@@Base+0x21a8>
   1cc34:	lsr	x6, x3, #9
   1cc38:	mov	x13, #0xca00                	// #51712
   1cc3c:	movk	x13, #0x3b9a, lsl #16
   1cc40:	umulh	x6, x6, x30
   1cc44:	lsr	x6, x6, #11
   1cc48:	msub	x3, x6, x13, x3
   1cc4c:	b	1c728 <PyInit__decimal@@Base+0x21a8>
   1cc50:	umulh	x6, x3, x19
   1cc54:	mov	x13, #0xe100                	// #57600
   1cc58:	movk	x13, #0x5f5, lsl #16
   1cc5c:	lsr	x6, x6, #26
   1cc60:	msub	x3, x6, x13, x3
   1cc64:	b	1c728 <PyInit__decimal@@Base+0x21a8>
   1cc68:	mov	x6, #0x7857                	// #30807
   1cc6c:	mov	x13, #0x6fc10000            	// #1874919424
   1cc70:	movk	x6, #0xb113, lsl #16
   1cc74:	movk	x13, #0x86f2, lsl #32
   1cc78:	movk	x6, #0x652f, lsl #32
   1cc7c:	movk	x13, #0x23, lsl #48
   1cc80:	movk	x6, #0x39a5, lsl #48
   1cc84:	umulh	x6, x3, x6
   1cc88:	lsr	x6, x6, #51
   1cc8c:	msub	x3, x6, x13, x3
   1cc90:	b	1c728 <PyInit__decimal@@Base+0x21a8>
   1cc94:	mov	x13, #0x490f                	// #18703
   1cc98:	lsr	x6, x3, #18
   1cc9c:	movk	x13, #0x7747, lsl #16
   1cca0:	movk	x13, #0x49c9, lsl #32
   1cca4:	umulh	x6, x6, x13
   1cca8:	mov	x13, #0xa7640000            	// #2808348672
   1ccac:	movk	x13, #0xb6b3, lsl #32
   1ccb0:	movk	x13, #0xde0, lsl #48
   1ccb4:	lsr	x6, x6, #24
   1ccb8:	msub	x3, x6, x13, x3
   1ccbc:	b	1c728 <PyInit__decimal@@Base+0x21a8>
   1ccc0:	mov	x13, #0x1b53                	// #6995
   1ccc4:	lsr	x6, x3, #17
   1ccc8:	movk	x13, #0xd519, lsl #16
   1cccc:	movk	x13, #0x5c3b, lsl #32
   1ccd0:	umulh	x6, x6, x13
   1ccd4:	mov	x13, #0x5d8a0000            	// #1569325056
   1ccd8:	movk	x13, #0x4578, lsl #32
   1ccdc:	movk	x13, #0x163, lsl #48
   1cce0:	lsr	x6, x6, #22
   1cce4:	msub	x3, x6, x13, x3
   1cce8:	b	1c728 <PyInit__decimal@@Base+0x21a8>
   1ccec:	mov	x10, #0x1                   	// #1
   1ccf0:	b	1c5d0 <PyInit__decimal@@Base+0x2050>
   1ccf4:	cmp	x0, #0x0
   1ccf8:	mov	x7, #0x0                   	// #0
   1ccfc:	cset	w11, eq  // eq = none
   1cd00:	cmp	x0, #0x5
   1cd04:	csinc	w11, w11, wzr, ne  // ne = any
   1cd08:	cbz	x5, 1c4ac <PyInit__decimal@@Base+0x1f2c>
   1cd0c:	str	x5, [x9, x7, lsl #3]
   1cd10:	cbz	w11, 1c4b0 <PyInit__decimal@@Base+0x1f30>
   1cd14:	b	1c85c <PyInit__decimal@@Base+0x22dc>
   1cd18:	mov	x7, #0x7843                	// #30787
   1cd1c:	lsr	x5, x10, #5
   1cd20:	movk	x7, #0x71b4, lsl #16
   1cd24:	mov	x6, #0x86a0                	// #34464
   1cd28:	movk	x7, #0x5ac4, lsl #32
   1cd2c:	movk	x6, #0x1, lsl #16
   1cd30:	movk	x7, #0xa7c, lsl #48
   1cd34:	cmp	x4, #0x5
   1cd38:	sub	x0, x4, #0x1
   1cd3c:	umulh	x5, x5, x7
   1cd40:	lsr	x5, x5, #7
   1cd44:	msub	x10, x5, x6, x10
   1cd48:	b.ne	1ced4 <PyInit__decimal@@Base+0x2954>  // b.any
   1cd4c:	mov	x0, #0x594b                	// #22859
   1cd50:	mov	x6, #0x2710                	// #10000
   1cd54:	movk	x0, #0x3886, lsl #16
   1cd58:	movk	x0, #0xc5d6, lsl #32
   1cd5c:	movk	x0, #0x346d, lsl #48
   1cd60:	umulh	x0, x10, x0
   1cd64:	lsr	x0, x0, #11
   1cd68:	msub	x10, x0, x6, x10
   1cd6c:	cbnz	x10, 1c5d0 <PyInit__decimal@@Base+0x2050>
   1cd70:	b	1c5a0 <PyInit__decimal@@Base+0x2020>
   1cd74:	mov	x5, #0xcd81                	// #52609
   1cd78:	mov	x0, #0x4000                	// #16384
   1cd7c:	movk	x5, #0x5095, lsl #16
   1cd80:	movk	x0, #0x107a, lsl #16
   1cd84:	movk	x5, #0x4dc3, lsl #32
   1cd88:	movk	x0, #0x5af3, lsl #32
   1cd8c:	movk	x5, #0xb42, lsl #48
   1cd90:	umulh	x5, x10, x5
   1cd94:	lsr	x5, x5, #42
   1cd98:	msub	x10, x5, x0, x10
   1cd9c:	mov	x0, #0x385                 	// #901
   1cda0:	mov	x6, #0xa000                	// #40960
   1cda4:	movk	x0, #0x92ed, lsl #16
   1cda8:	movk	x6, #0x4e72, lsl #16
   1cdac:	movk	x0, #0x84d0, lsl #32
   1cdb0:	movk	x6, #0x918, lsl #32
   1cdb4:	movk	x0, #0x384b, lsl #48
   1cdb8:	umulh	x0, x10, x0
   1cdbc:	lsr	x0, x0, #41
   1cdc0:	msub	x10, x0, x6, x10
   1cdc4:	cbnz	x10, 1c5d0 <PyInit__decimal@@Base+0x2050>
   1cdc8:	b	1c5a0 <PyInit__decimal@@Base+0x2020>
   1cdcc:	mov	x5, #0x594b                	// #22859
   1cdd0:	mov	x6, #0x2710                	// #10000
   1cdd4:	movk	x5, #0x3886, lsl #16
   1cdd8:	mov	x7, #0xf7cf                	// #63439
   1cddc:	movk	x5, #0xc5d6, lsl #32
   1cde0:	movk	x7, #0xe353, lsl #16
   1cde4:	movk	x5, #0x346d, lsl #48
   1cde8:	movk	x7, #0x9ba5, lsl #32
   1cdec:	movk	x7, #0x20c4, lsl #48
   1cdf0:	umulh	x5, x10, x5
   1cdf4:	lsr	x5, x5, #11
   1cdf8:	msub	x6, x5, x6, x10
   1cdfc:	lsr	x0, x6, #3
   1ce00:	umulh	x0, x0, x7
   1ce04:	lsr	x0, x0, #4
   1ce08:	lsl	x10, x0, #5
   1ce0c:	sub	x10, x10, x0
   1ce10:	add	x10, x0, x10, lsl #2
   1ce14:	sub	x10, x6, x10, lsl #3
   1ce18:	cbnz	x10, 1c5d0 <PyInit__decimal@@Base+0x2050>
   1ce1c:	b	1c5a0 <PyInit__decimal@@Base+0x2020>
   1ce20:	mov	x0, #0xf7cf                	// #63439
   1ce24:	lsr	x5, x10, #3
   1ce28:	movk	x0, #0xe353, lsl #16
   1ce2c:	movk	x0, #0x9ba5, lsl #32
   1ce30:	movk	x0, #0x20c4, lsl #48
   1ce34:	umulh	x5, x5, x0
   1ce38:	lsr	x5, x5, #4
   1ce3c:	lsl	x0, x5, #5
   1ce40:	sub	x0, x0, x5
   1ce44:	add	x0, x5, x0, lsl #2
   1ce48:	sub	x10, x10, x0, lsl #3
   1ce4c:	mov	x6, #0xf5c3                	// #62915
   1ce50:	lsr	x0, x10, #2
   1ce54:	movk	x6, #0x5c28, lsl #16
   1ce58:	movk	x6, #0xc28f, lsl #32
   1ce5c:	movk	x6, #0x28f5, lsl #48
   1ce60:	umulh	x0, x0, x6
   1ce64:	lsr	x0, x0, #2
   1ce68:	add	x6, x0, x0, lsl #1
   1ce6c:	add	x6, x0, x6, lsl #3
   1ce70:	sub	x10, x10, x6, lsl #2
   1ce74:	cbnz	x10, 1c5d0 <PyInit__decimal@@Base+0x2050>
   1ce78:	b	1c5a0 <PyInit__decimal@@Base+0x2020>
   1ce7c:	mov	x5, #0x385                 	// #901
   1ce80:	mov	x0, #0xa000                	// #40960
   1ce84:	movk	x5, #0x92ed, lsl #16
   1ce88:	movk	x0, #0x4e72, lsl #16
   1ce8c:	movk	x5, #0x84d0, lsl #32
   1ce90:	movk	x0, #0x918, lsl #32
   1ce94:	movk	x5, #0x384b, lsl #48
   1ce98:	umulh	x5, x10, x5
   1ce9c:	lsr	x5, x5, #41
   1cea0:	msub	x10, x5, x0, x10
   1cea4:	mov	x0, #0x2233                	// #8755
   1cea8:	mov	x6, #0x1000                	// #4096
   1ceac:	movk	x0, #0x5bd4, lsl #16
   1ceb0:	movk	x6, #0xd4a5, lsl #16
   1ceb4:	movk	x0, #0x3302, lsl #32
   1ceb8:	movk	x6, #0xe8, lsl #32
   1cebc:	movk	x0, #0x232f, lsl #48
   1cec0:	umulh	x0, x10, x0
   1cec4:	lsr	x0, x0, #37
   1cec8:	msub	x10, x0, x6, x10
   1cecc:	cbnz	x10, 1c5d0 <PyInit__decimal@@Base+0x2050>
   1ced0:	b	1c5a0 <PyInit__decimal@@Base+0x2020>
   1ced4:	cmp	x0, #0x7
   1ced8:	b.eq	1cf0c <PyInit__decimal@@Base+0x298c>  // b.none
   1cedc:	cmp	x0, #0x6
   1cee0:	b.eq	1c8ac <PyInit__decimal@@Base+0x232c>  // b.none
   1cee4:	b	1c990 <PyInit__decimal@@Base+0x2410>
   1cee8:	mov	x5, #0xcefd                	// #52989
   1ceec:	mov	x0, #0xe100                	// #57600
   1cef0:	movk	x5, #0x8461, lsl #16
   1cef4:	movk	x0, #0x5f5, lsl #16
   1cef8:	movk	x5, #0x7711, lsl #32
   1cefc:	movk	x5, #0xabcc, lsl #48
   1cf00:	umulh	x5, x10, x5
   1cf04:	lsr	x5, x5, #26
   1cf08:	msub	x10, x5, x0, x10
   1cf0c:	mov	x0, #0x42bd                	// #17085
   1cf10:	mov	x6, #0x9680                	// #38528
   1cf14:	movk	x0, #0xe57a, lsl #16
   1cf18:	movk	x6, #0x98, lsl #16
   1cf1c:	movk	x0, #0x94d5, lsl #32
   1cf20:	movk	x0, #0xd6bf, lsl #48
   1cf24:	umulh	x0, x10, x0
   1cf28:	lsr	x0, x0, #23
   1cf2c:	msub	x10, x0, x6, x10
   1cf30:	cbnz	x10, 1c5d0 <PyInit__decimal@@Base+0x2050>
   1cf34:	b	1c5a0 <PyInit__decimal@@Base+0x2020>
   1cf38:	cmp	x0, #0xe
   1cf3c:	b.ne	1cfb8 <PyInit__decimal@@Base+0x2a38>  // b.any
   1cf40:	mov	x0, #0xcd81                	// #52609
   1cf44:	mov	x6, #0x4000                	// #16384
   1cf48:	movk	x0, #0x5095, lsl #16
   1cf4c:	movk	x6, #0x107a, lsl #16
   1cf50:	movk	x0, #0x4dc3, lsl #32
   1cf54:	movk	x6, #0x5af3, lsl #32
   1cf58:	movk	x0, #0xb42, lsl #48
   1cf5c:	umulh	x0, x10, x0
   1cf60:	lsr	x0, x0, #42
   1cf64:	msub	x10, x0, x6, x10
   1cf68:	cbnz	x10, 1c5d0 <PyInit__decimal@@Base+0x2050>
   1cf6c:	b	1c5a0 <PyInit__decimal@@Base+0x2020>
   1cf70:	mov	x0, #0xf5c3                	// #62915
   1cf74:	lsr	x5, x10, #2
   1cf78:	movk	x0, #0x5c28, lsl #16
   1cf7c:	movk	x0, #0xc28f, lsl #32
   1cf80:	movk	x0, #0x28f5, lsl #48
   1cf84:	umulh	x5, x5, x0
   1cf88:	lsr	x5, x5, #2
   1cf8c:	add	x0, x5, x5, lsl #1
   1cf90:	add	x0, x5, x0, lsl #3
   1cf94:	sub	x10, x10, x0, lsl #2
   1cf98:	mov	x0, #0xcccccccccccccccc    	// #-3689348814741910324
   1cf9c:	movk	x0, #0xcccd
   1cfa0:	umulh	x0, x10, x0
   1cfa4:	lsr	x0, x0, #3
   1cfa8:	add	x6, x0, x0, lsl #2
   1cfac:	sub	x10, x10, x6, lsl #1
   1cfb0:	cbnz	x10, 1c5d0 <PyInit__decimal@@Base+0x2050>
   1cfb4:	b	1c5a0 <PyInit__decimal@@Base+0x2020>
   1cfb8:	cmp	x0, #0xc
   1cfbc:	b.eq	1cea4 <PyInit__decimal@@Base+0x2924>  // b.none
   1cfc0:	cmp	x0, #0xd
   1cfc4:	b.eq	1cd9c <PyInit__decimal@@Base+0x281c>  // b.none
   1cfc8:	cmp	x0, #0xb
   1cfcc:	b.eq	1c82c <PyInit__decimal@@Base+0x22ac>  // b.none
   1cfd0:	b	1c9e8 <PyInit__decimal@@Base+0x2468>
   1cfd4:	mov	x12, #0x5a53                	// #23123
   1cfd8:	lsr	x5, x10, #9
   1cfdc:	movk	x12, #0xa09b, lsl #16
   1cfe0:	mov	x0, #0xca00                	// #51712
   1cfe4:	movk	x12, #0xb82f, lsl #32
   1cfe8:	movk	x0, #0x3b9a, lsl #16
   1cfec:	movk	x12, #0x44, lsl #48
   1cff0:	mov	x6, #0xcefd                	// #52989
   1cff4:	movk	x6, #0x8461, lsl #16
   1cff8:	mov	x7, #0xe100                	// #57600
   1cffc:	umulh	x5, x5, x12
   1d000:	movk	x6, #0x7711, lsl #32
   1d004:	movk	x6, #0xabcc, lsl #48
   1d008:	movk	x7, #0x5f5, lsl #16
   1d00c:	lsr	x5, x5, #11
   1d010:	msub	x10, x5, x0, x10
   1d014:	umulh	x0, x10, x6
   1d018:	lsr	x0, x0, #26
   1d01c:	msub	x10, x0, x7, x10
   1d020:	cbnz	x10, 1c5d0 <PyInit__decimal@@Base+0x2050>
   1d024:	b	1c5a0 <PyInit__decimal@@Base+0x2020>
   1d028:	mov	x5, #0xd5bf                	// #54719
   1d02c:	mov	x6, #0xe400                	// #58368
   1d030:	movk	x5, #0xbded, lsl #16
   1d034:	movk	x6, #0x540b, lsl #16
   1d038:	movk	x5, #0xfece, lsl #32
   1d03c:	movk	x6, #0x2, lsl #32
   1d040:	movk	x5, #0xdbe6, lsl #48
   1d044:	cmp	x4, #0xa
   1d048:	sub	x0, x4, #0x1
   1d04c:	umulh	x5, x10, x5
   1d050:	lsr	x5, x5, #33
   1d054:	msub	x10, x5, x6, x10
   1d058:	b.ne	1cf38 <PyInit__decimal@@Base+0x29b8>  // b.any
   1d05c:	mov	x7, #0x5a53                	// #23123
   1d060:	lsr	x0, x10, #9
   1d064:	movk	x7, #0xa09b, lsl #16
   1d068:	mov	x6, #0xca00                	// #51712
   1d06c:	movk	x7, #0xb82f, lsl #32
   1d070:	movk	x6, #0x3b9a, lsl #16
   1d074:	movk	x7, #0x44, lsl #48
   1d078:	umulh	x0, x0, x7
   1d07c:	lsr	x0, x0, #11
   1d080:	msub	x10, x0, x6, x10
   1d084:	cbnz	x10, 1c5d0 <PyInit__decimal@@Base+0x2050>
   1d088:	b	1c5a0 <PyInit__decimal@@Base+0x2020>
   1d08c:	mov	x6, #0x1b53                	// #6995
   1d090:	lsr	x5, x10, #17
   1d094:	movk	x6, #0xd519, lsl #16
   1d098:	mov	x0, #0x5d8a0000            	// #1569325056
   1d09c:	movk	x6, #0x5c3b, lsl #32
   1d0a0:	movk	x0, #0x4578, lsl #32
   1d0a4:	movk	x0, #0x163, lsl #48
   1d0a8:	umulh	x5, x5, x6
   1d0ac:	lsr	x5, x5, #22
   1d0b0:	msub	x10, x5, x0, x10
   1d0b4:	b	1c934 <PyInit__decimal@@Base+0x23b4>
   1d0b8:	mov	x10, x0
   1d0bc:	b	1ce4c <PyInit__decimal@@Base+0x28cc>
   1d0c0:	mov	x10, x0
   1d0c4:	b	1cf98 <PyInit__decimal@@Base+0x2a18>
   1d0c8:	mov	x5, x0
   1d0cc:	ldr	x0, [x0]
   1d0d0:	adds	x2, x0, x2
   1d0d4:	ccmp	x2, x3, #0x2, cc  // cc = lo, ul, last
   1d0d8:	b.cs	1d0e8 <PyInit__decimal@@Base+0x2b68>  // b.hs, b.nlast
   1d0dc:	mov	x0, #0x0                   	// #0
   1d0e0:	str	x2, [x5]
   1d0e4:	ret
   1d0e8:	sub	x0, x2, x3
   1d0ec:	str	x0, [x5]
   1d0f0:	cmp	x1, #0x1
   1d0f4:	b.ls	1d13c <PyInit__decimal@@Base+0x2bbc>  // b.plast
   1d0f8:	mov	x4, #0x1                   	// #1
   1d0fc:	nop
   1d100:	ldr	x2, [x5, x4, lsl #3]
   1d104:	add	x2, x2, #0x1
   1d108:	cmp	x3, x2
   1d10c:	cset	w0, eq  // eq = none
   1d110:	b.eq	1d120 <PyInit__decimal@@Base+0x2ba0>  // b.none
   1d114:	and	x0, x0, #0xff
   1d118:	str	x2, [x5, x4, lsl #3]
   1d11c:	ret
   1d120:	str	xzr, [x5, x4, lsl #3]
   1d124:	cmp	w0, #0x0
   1d128:	add	x4, x4, #0x1
   1d12c:	ccmp	x1, x4, #0x0, ne  // ne = any
   1d130:	b.hi	1d100 <PyInit__decimal@@Base+0x2b80>  // b.pmore
   1d134:	and	x0, x0, #0xff
   1d138:	b	1d11c <PyInit__decimal@@Base+0x2b9c>
   1d13c:	mov	x0, #0x1                   	// #1
   1d140:	ret
   1d144:	nop
   1d148:	mov	x13, x0
   1d14c:	mov	x0, #0x0                   	// #0
   1d150:	cbz	x2, 1d1f0 <PyInit__decimal@@Base+0x2c70>
   1d154:	ldr	x4, [x1]
   1d158:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27a80>
   1d15c:	mov	x10, #0x89e80000            	// #2313682944
   1d160:	mov	x14, #0x76180000            	// #1981284352
   1d164:	movk	x10, #0x2304, lsl #32
   1d168:	movk	x14, #0xdcfb, lsl #32
   1d16c:	ldr	x11, [x0, #712]
   1d170:	umulh	x5, x3, x4
   1d174:	mul	x0, x3, x4
   1d178:	mov	x9, #0x0                   	// #0
   1d17c:	movk	x10, #0x8ac7, lsl #48
   1d180:	movk	x14, #0x7538, lsl #48
   1d184:	b	1d19c <PyInit__decimal@@Base+0x2c1c>
   1d188:	ldr	x5, [x1, x9, lsl #3]
   1d18c:	mul	x6, x3, x5
   1d190:	umulh	x5, x3, x5
   1d194:	adds	x0, x6, x0
   1d198:	cinc	x5, x5, cs  // cs = hs, nlast
   1d19c:	and	x8, x10, x0, asr #63
   1d1a0:	add	x7, x5, x0, lsr #63
   1d1a4:	add	x8, x8, x0
   1d1a8:	add	x12, x5, x14
   1d1ac:	umulh	x4, x7, x11
   1d1b0:	madd	x7, x7, x11, x8
   1d1b4:	cmp	x8, x7
   1d1b8:	cinc	x4, x4, hi  // hi = pmore
   1d1bc:	add	x5, x5, x4
   1d1c0:	mvn	x4, x5
   1d1c4:	mul	x5, x4, x10
   1d1c8:	umulh	x6, x4, x10
   1d1cc:	adds	x5, x5, x0
   1d1d0:	adc	x6, x6, x12
   1d1d4:	and	x7, x6, x10
   1d1d8:	sub	x0, x6, x4
   1d1dc:	add	x5, x7, x5
   1d1e0:	str	x5, [x13, x9, lsl #3]
   1d1e4:	add	x9, x9, #0x1
   1d1e8:	cmp	x2, x9
   1d1ec:	b.ne	1d188 <PyInit__decimal@@Base+0x2c08>  // b.any
   1d1f0:	ret
   1d1f4:	nop
   1d1f8:	cbz	x2, 1d294 <PyInit__decimal@@Base+0x2d14>
   1d1fc:	stp	x29, x30, [sp, #-80]!
   1d200:	mov	x29, sp
   1d204:	ldr	x5, [x1]
   1d208:	stp	x19, x20, [sp, #16]
   1d20c:	mov	x20, #0x0                   	// #0
   1d210:	stp	x21, x22, [sp, #32]
   1d214:	mov	x22, x0
   1d218:	mov	x21, x2
   1d21c:	stp	x23, x24, [sp, #48]
   1d220:	mov	x24, x4
   1d224:	mov	x23, #0x0                   	// #0
   1d228:	stp	x25, x26, [sp, #64]
   1d22c:	mov	x26, x1
   1d230:	mov	x25, x3
   1d234:	umulh	x1, x3, x5
   1d238:	mul	x5, x3, x5
   1d23c:	b	1d254 <PyInit__decimal@@Base+0x2cd4>
   1d240:	ldr	x6, [x26, x23, lsl #3]
   1d244:	mul	x5, x25, x6
   1d248:	umulh	x6, x25, x6
   1d24c:	adds	x5, x5, x0
   1d250:	cinc	x1, x6, cs  // cs = hs, nlast
   1d254:	adds	x19, x20, x5
   1d258:	mov	x2, x24
   1d25c:	mov	x0, x19
   1d260:	mov	x3, #0x0                   	// #0
   1d264:	bl	3b538 <PyInit__decimal@@Base+0x20fb8>
   1d268:	msub	x19, x24, x0, x19
   1d26c:	str	x19, [x22, x23, lsl #3]
   1d270:	add	x23, x23, #0x1
   1d274:	cmp	x21, x23
   1d278:	b.ne	1d240 <PyInit__decimal@@Base+0x2cc0>  // b.any
   1d27c:	ldp	x19, x20, [sp, #16]
   1d280:	ldp	x21, x22, [sp, #32]
   1d284:	ldp	x23, x24, [sp, #48]
   1d288:	ldp	x25, x26, [sp, #64]
   1d28c:	ldp	x29, x30, [sp], #80
   1d290:	ret
   1d294:	mov	x1, #0x0                   	// #0
   1d298:	mov	x0, x1
   1d29c:	ret
   1d2a0:	cbz	x2, 1d340 <PyInit__decimal@@Base+0x2dc0>
   1d2a4:	stp	x29, x30, [sp, #-80]!
   1d2a8:	mov	x29, sp
   1d2ac:	stp	x23, x24, [sp, #48]
   1d2b0:	sub	x23, x2, #0x1
   1d2b4:	neg	x2, x2, lsl #3
   1d2b8:	str	x25, [sp, #64]
   1d2bc:	mov	x25, x1
   1d2c0:	add	x2, x2, x23, lsl #3
   1d2c4:	mov	x24, x3
   1d2c8:	add	x2, x2, #0x8
   1d2cc:	mov	x1, #0x0                   	// #0
   1d2d0:	stp	x19, x20, [sp, #16]
   1d2d4:	mov	x20, #0x0                   	// #0
   1d2d8:	stp	x21, x22, [sp, #32]
   1d2dc:	add	x22, x0, x2
   1d2e0:	mov	x21, x4
   1d2e4:	ldr	x0, [x25, x23, lsl #3]
   1d2e8:	b	1d300 <PyInit__decimal@@Base+0x2d80>
   1d2ec:	ldr	x5, [x25, x23, lsl #3]
   1d2f0:	mul	x19, x21, x0
   1d2f4:	umulh	x1, x21, x0
   1d2f8:	adds	x0, x5, x19
   1d2fc:	cinc	x1, x1, cs  // cs = hs, nlast
   1d300:	adds	x19, x20, x0
   1d304:	mov	x2, x24
   1d308:	mov	x0, x19
   1d30c:	mov	x3, #0x0                   	// #0
   1d310:	bl	3b538 <PyInit__decimal@@Base+0x20fb8>
   1d314:	str	x0, [x22, x23, lsl #3]
   1d318:	sub	x23, x23, #0x1
   1d31c:	msub	x0, x24, x0, x19
   1d320:	cmn	x23, #0x1
   1d324:	b.ne	1d2ec <PyInit__decimal@@Base+0x2d6c>  // b.any
   1d328:	ldp	x19, x20, [sp, #16]
   1d32c:	ldp	x21, x22, [sp, #32]
   1d330:	ldp	x23, x24, [sp, #48]
   1d334:	ldr	x25, [sp, #64]
   1d338:	ldp	x29, x30, [sp], #80
   1d33c:	ret
   1d340:	mov	x0, #0x0                   	// #0
   1d344:	ret
   1d348:	mov	w0, #0x8                   	// #8
   1d34c:	b	6510 <raise@plt>
   1d350:	stp	x29, x30, [sp, #-32]!
   1d354:	adrp	x1, 5f000 <PyInit__decimal@@Base+0x44a80>
   1d358:	mov	x29, sp
   1d35c:	ldr	w2, [x1, #1928]
   1d360:	cbnz	w2, 1d388 <PyInit__decimal@@Base+0x2e08>
   1d364:	sub	x2, x0, #0x2
   1d368:	cmp	x2, #0x3e
   1d36c:	b.hi	1d3dc <PyInit__decimal@@Base+0x2e5c>  // b.pmore
   1d370:	adrp	x2, 5f000 <PyInit__decimal@@Base+0x44a80>
   1d374:	mov	w3, #0x1                   	// #1
   1d378:	ldp	x29, x30, [sp], #32
   1d37c:	str	w3, [x1, #1928]
   1d380:	str	x0, [x2, #1672]
   1d384:	ret
   1d388:	str	x19, [sp, #16]
   1d38c:	adrp	x19, 5c000 <PyInit__decimal@@Base+0x41a80>
   1d390:	mov	w3, #0x36                  	// #54
   1d394:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27a80>
   1d398:	ldr	x19, [x19, #3904]
   1d39c:	add	x2, x2, #0x5c0
   1d3a0:	adrp	x1, 42000 <PyInit__decimal@@Base+0x27a80>
   1d3a4:	add	x1, x1, #0x600
   1d3a8:	ldr	x0, [x19]
   1d3ac:	bl	6a70 <fprintf@plt>
   1d3b0:	ldr	x3, [x19]
   1d3b4:	mov	x2, #0x44                  	// #68
   1d3b8:	mov	x1, #0x1                   	// #1
   1d3bc:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27a80>
   1d3c0:	add	x0, x0, #0x618
   1d3c4:	bl	6930 <fwrite@plt>
   1d3c8:	ldr	x1, [x19]
   1d3cc:	mov	w0, #0xa                   	// #10
   1d3d0:	ldr	x19, [sp, #16]
   1d3d4:	ldp	x29, x30, [sp], #32
   1d3d8:	b	65b0 <fputc@plt>
   1d3dc:	str	x19, [sp, #16]
   1d3e0:	adrp	x19, 5c000 <PyInit__decimal@@Base+0x41a80>
   1d3e4:	mov	w3, #0x3b                  	// #59
   1d3e8:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27a80>
   1d3ec:	ldr	x19, [x19, #3904]
   1d3f0:	add	x2, x2, #0x5c0
   1d3f4:	adrp	x1, 42000 <PyInit__decimal@@Base+0x27a80>
   1d3f8:	add	x1, x1, #0x1d8
   1d3fc:	ldr	x0, [x19]
   1d400:	bl	6a70 <fprintf@plt>
   1d404:	ldr	x3, [x19]
   1d408:	mov	x2, #0x1e                  	// #30
   1d40c:	mov	x1, #0x1                   	// #1
   1d410:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27a80>
   1d414:	add	x0, x0, #0x660
   1d418:	bl	6930 <fwrite@plt>
   1d41c:	ldr	x1, [x19]
   1d420:	mov	w0, #0xa                   	// #10
   1d424:	bl	65b0 <fputc@plt>
   1d428:	bl	67c0 <abort@plt>
   1d42c:	nop
   1d430:	mov	x7, #0x1                   	// #1
   1d434:	mov	x3, #0xffffffffa763ffff    	// #-1486618625
   1d438:	movk	x7, #0x589c, lsl #16
   1d43c:	movk	x3, #0xb6b3, lsl #32
   1d440:	movk	x7, #0x494c, lsl #32
   1d444:	movk	x3, #0xde0, lsl #48
   1d448:	mov	x8, #0x26                  	// #38
   1d44c:	movk	x7, #0xf21f, lsl #48
   1d450:	mov	x6, #0x4bbe                	// #19390
   1d454:	mov	x5, #0x400000000           	// #17179869184
   1d458:	mov	x4, #0x100000000           	// #4294967296
   1d45c:	stp	x8, x3, [x0]
   1d460:	sub	x8, x1, #0x1
   1d464:	stp	x7, x6, [x0, #16]
   1d468:	mov	x2, x0
   1d46c:	cmp	x8, x3
   1d470:	stp	x5, x4, [x0, #32]
   1d474:	b.cs	1d4b8 <PyInit__decimal@@Base+0x2f38>  // b.hs, b.nlast
   1d478:	mov	x0, #0x9436                	// #37942
   1d47c:	add	x3, x1, #0x12
   1d480:	movk	x0, #0x50d7, lsl #16
   1d484:	mov	x4, #0x40                  	// #64
   1d488:	movk	x0, #0x435e, lsl #32
   1d48c:	str	x1, [x2]
   1d490:	movk	x0, #0xd79, lsl #48
   1d494:	mov	x1, #0x2                   	// #2
   1d498:	smulh	x0, x3, x0
   1d49c:	sub	x3, x0, x3, asr #63
   1d4a0:	lsl	x0, x3, #1
   1d4a4:	cmp	x0, x4
   1d4a8:	csel	x0, x0, x4, le
   1d4ac:	cmp	x0, x1
   1d4b0:	csel	x0, x0, x1, ge  // ge = tcont
   1d4b4:	b	1d350 <PyInit__decimal@@Base+0x2dd0>
   1d4b8:	adrp	x1, 5f000 <PyInit__decimal@@Base+0x44a80>
   1d4bc:	mov	x3, #0x8000000080          	// #549755814016
   1d4c0:	stur	x3, [x0, #28]
   1d4c4:	ldr	x1, [x1, #1424]
   1d4c8:	mov	x16, x1
   1d4cc:	br	x16
   1d4d0:	mov	x5, #0x1                   	// #1
   1d4d4:	mov	x1, #0xffffffffa763ffff    	// #-1486618625
   1d4d8:	movk	x5, #0x589c, lsl #16
   1d4dc:	movk	x1, #0xb6b3, lsl #32
   1d4e0:	movk	x5, #0x494c, lsl #32
   1d4e4:	mov	x4, #0x4bbe                	// #19390
   1d4e8:	movk	x5, #0xf21f, lsl #48
   1d4ec:	mov	x3, #0x600000000           	// #25769803776
   1d4f0:	mov	x2, #0x100000000           	// #4294967296
   1d4f4:	movk	x1, #0xde0, lsl #48
   1d4f8:	stp	x1, x1, [x0]
   1d4fc:	stp	x5, x4, [x0, #16]
   1d500:	stp	x3, x2, [x0, #32]
   1d504:	ret
   1d508:	mov	x4, #0x1                   	// #1
   1d50c:	mov	x5, #0xffffffffa763ffff    	// #-1486618625
   1d510:	movk	x4, #0x589c, lsl #16
   1d514:	movk	x5, #0xb6b3, lsl #32
   1d518:	movk	x4, #0x494c, lsl #32
   1d51c:	mov	x6, #0x26                  	// #38
   1d520:	movk	x5, #0xde0, lsl #48
   1d524:	movk	x4, #0xf21f, lsl #48
   1d528:	mov	x3, #0x4bbe                	// #19390
   1d52c:	mov	x2, #0x400000000           	// #17179869184
   1d530:	mov	x1, #0x100000000           	// #4294967296
   1d534:	stp	x6, x5, [x0]
   1d538:	stp	x4, x3, [x0, #16]
   1d53c:	stp	x2, x1, [x0, #32]
   1d540:	ret
   1d544:	nop
   1d548:	mov	x4, #0x1                   	// #1
   1d54c:	mov	x5, #0xffffffffa763ffff    	// #-1486618625
   1d550:	movk	x4, #0x589c, lsl #16
   1d554:	movk	x5, #0xb6b3, lsl #32
   1d558:	movk	x4, #0x494c, lsl #32
   1d55c:	mov	x6, #0x9                   	// #9
   1d560:	movk	x5, #0xde0, lsl #48
   1d564:	movk	x4, #0xf21f, lsl #48
   1d568:	mov	x3, #0x4bbf                	// #19391
   1d56c:	mov	x2, #0x400000000           	// #17179869184
   1d570:	mov	x1, #0x100000000           	// #4294967296
   1d574:	stp	x6, x5, [x0]
   1d578:	stp	x4, x3, [x0, #16]
   1d57c:	stp	x2, x1, [x0, #32]
   1d580:	ret
   1d584:	nop
   1d588:	mov	x3, x0
   1d58c:	sub	w0, w1, #0x1
   1d590:	cmp	w0, #0x1ff
   1d594:	b.hi	1d5f8 <PyInit__decimal@@Base+0x3078>  // b.pmore
   1d598:	tst	x1, #0x1f
   1d59c:	b.ne	1d5f8 <PyInit__decimal@@Base+0x3078>  // b.any
   1d5a0:	cmp	w1, #0x0
   1d5a4:	add	w2, w1, #0x1f
   1d5a8:	csel	w2, w2, w1, lt  // lt = tstop
   1d5ac:	add	w0, w1, #0xf
   1d5b0:	csel	w1, w0, w1, lt  // lt = tstop
   1d5b4:	mov	x4, #0x3                   	// #3
   1d5b8:	asr	w2, w2, #5
   1d5bc:	mov	x5, #0x1                   	// #1
   1d5c0:	asr	w1, w1, #4
   1d5c4:	mov	x7, #0x600000000           	// #25769803776
   1d5c8:	add	w2, w2, w2, lsl #3
   1d5cc:	add	w1, w1, #0x3
   1d5d0:	sub	w2, w2, #0x2
   1d5d4:	mov	x6, #0x100000001           	// #4294967297
   1d5d8:	lsl	x1, x4, x1
   1d5dc:	mov	w0, #0x0                   	// #0
   1d5e0:	sxtw	x2, w2
   1d5e4:	sub	x4, x5, x1
   1d5e8:	stp	x2, x1, [x3]
   1d5ec:	stp	x4, xzr, [x3, #16]
   1d5f0:	stp	x7, x6, [x3, #32]
   1d5f4:	ret
   1d5f8:	mov	w0, #0xffffffff            	// #-1
   1d5fc:	ret
   1d600:	ldr	x0, [x0]
   1d604:	ret
   1d608:	ldr	x0, [x0, #8]
   1d60c:	ret
   1d610:	ldr	x0, [x0, #16]
   1d614:	ret
   1d618:	ldr	w0, [x0, #36]
   1d61c:	ret
   1d620:	ldr	w0, [x0, #24]
   1d624:	ret
   1d628:	ldr	w0, [x0, #28]
   1d62c:	ret
   1d630:	ldr	w0, [x0, #40]
   1d634:	ret
   1d638:	ldr	w0, [x0, #44]
   1d63c:	ret
   1d640:	mov	x2, x0
   1d644:	mov	x0, #0xffffffffa763ffff    	// #-1486618625
   1d648:	sub	x3, x1, #0x1
   1d64c:	movk	x0, #0xb6b3, lsl #32
   1d650:	movk	x0, #0xde0, lsl #48
   1d654:	cmp	x3, x0
   1d658:	b.cs	1d668 <PyInit__decimal@@Base+0x30e8>  // b.hs, b.nlast
   1d65c:	mov	w0, #0x1                   	// #1
   1d660:	str	x1, [x2]
   1d664:	ret
   1d668:	mov	w0, #0x0                   	// #0
   1d66c:	ret
   1d670:	mov	x2, x0
   1d674:	mov	x0, #0xffffffffa763ffff    	// #-1486618625
   1d678:	movk	x0, #0xb6b3, lsl #32
   1d67c:	movk	x0, #0xde0, lsl #48
   1d680:	cmp	x1, x0
   1d684:	b.hi	1d694 <PyInit__decimal@@Base+0x3114>  // b.pmore
   1d688:	mov	w0, #0x1                   	// #1
   1d68c:	str	x1, [x2, #8]
   1d690:	ret
   1d694:	mov	w0, #0x0                   	// #0
   1d698:	ret
   1d69c:	nop
   1d6a0:	mov	x3, #0xffffffffa763ffff    	// #-1486618625
   1d6a4:	mov	x2, x0
   1d6a8:	movk	x3, #0xb6b3, lsl #32
   1d6ac:	mov	w0, #0x0                   	// #0
   1d6b0:	movk	x3, #0xde0, lsl #48
   1d6b4:	add	x4, x1, x3
   1d6b8:	cmp	x4, x3
   1d6bc:	b.hi	1d6c8 <PyInit__decimal@@Base+0x3148>  // b.pmore
   1d6c0:	mov	w0, #0x1                   	// #1
   1d6c4:	str	x1, [x2, #16]
   1d6c8:	ret
   1d6cc:	nop
   1d6d0:	mov	x2, x0
   1d6d4:	cmp	w1, #0x8
   1d6d8:	mov	w0, #0x0                   	// #0
   1d6dc:	b.hi	1d6e8 <PyInit__decimal@@Base+0x3168>  // b.pmore
   1d6e0:	mov	w0, #0x1                   	// #1
   1d6e4:	str	w1, [x2, #36]
   1d6e8:	ret
   1d6ec:	nop
   1d6f0:	mov	x2, x0
   1d6f4:	mov	w0, #0x7fff                	// #32767
   1d6f8:	cmp	w1, w0
   1d6fc:	b.hi	1d70c <PyInit__decimal@@Base+0x318c>  // b.pmore
   1d700:	mov	w0, #0x1                   	// #1
   1d704:	str	w1, [x2, #24]
   1d708:	ret
   1d70c:	mov	w0, #0x0                   	// #0
   1d710:	ret
   1d714:	nop
   1d718:	mov	x2, x0
   1d71c:	mov	w0, #0x7fff                	// #32767
   1d720:	cmp	w1, w0
   1d724:	b.hi	1d734 <PyInit__decimal@@Base+0x31b4>  // b.pmore
   1d728:	mov	w0, #0x1                   	// #1
   1d72c:	str	w1, [x2, #28]
   1d730:	ret
   1d734:	mov	w0, #0x0                   	// #0
   1d738:	ret
   1d73c:	nop
   1d740:	mov	x2, x0
   1d744:	cmp	w1, #0x1
   1d748:	mov	w0, #0x0                   	// #0
   1d74c:	b.hi	1d758 <PyInit__decimal@@Base+0x31d8>  // b.pmore
   1d750:	mov	w0, #0x1                   	// #1
   1d754:	str	w1, [x2, #40]
   1d758:	ret
   1d75c:	nop
   1d760:	mov	x2, x0
   1d764:	cmp	w1, #0x1
   1d768:	mov	w0, #0x0                   	// #0
   1d76c:	b.hi	1d778 <PyInit__decimal@@Base+0x31f8>  // b.pmore
   1d770:	mov	w0, #0x1                   	// #1
   1d774:	str	w1, [x2, #44]
   1d778:	ret
   1d77c:	nop
   1d780:	ldp	w4, w3, [x0, #24]
   1d784:	orr	w3, w3, w1
   1d788:	str	w3, [x0, #28]
   1d78c:	ands	w1, w1, w4
   1d790:	b.eq	1d7a8 <PyInit__decimal@@Base+0x3228>  // b.none
   1d794:	adrp	x3, 5f000 <PyInit__decimal@@Base+0x44a80>
   1d798:	str	w1, [x0, #32]
   1d79c:	ldr	x1, [x3, #1424]
   1d7a0:	mov	x16, x1
   1d7a4:	br	x16
   1d7a8:	ret
   1d7ac:	nop
   1d7b0:	stp	x29, x30, [sp, #-80]!
   1d7b4:	adrp	x4, 42000 <PyInit__decimal@@Base+0x27a80>
   1d7b8:	mov	x29, sp
   1d7bc:	stp	x23, x24, [sp, #48]
   1d7c0:	mov	w23, w3
   1d7c4:	add	x3, x4, #0x5a8
   1d7c8:	stp	x19, x20, [sp, #16]
   1d7cc:	mov	x24, x2
   1d7d0:	mov	x20, x0
   1d7d4:	ldr	x19, [x3, w23, sxtw #3]
   1d7d8:	stp	x21, x22, [sp, #32]
   1d7dc:	mov	x22, x1
   1d7e0:	stp	x25, x26, [sp, #64]
   1d7e4:	subs	x2, x19, #0x2
   1d7e8:	b.eq	1da20 <PyInit__decimal@@Base+0x34a0>  // b.none
   1d7ec:	and	x3, x19, #0x100000000
   1d7f0:	mov	x4, x24
   1d7f4:	and	x6, x19, #0x400000000
   1d7f8:	mov	x25, #0x1                   	// #1
   1d7fc:	b	1d8e8 <PyInit__decimal@@Base+0x3368>
   1d800:	mul	x0, x25, x4
   1d804:	umulh	x4, x25, x4
   1d808:	subs	x1, x0, x4
   1d80c:	cmp	x0, x4
   1d810:	cset	x9, cc  // cc = lo, ul, last
   1d814:	cbnz	x3, 1d94c <PyInit__decimal@@Base+0x33cc>
   1d818:	cbz	x6, 1d9bc <PyInit__decimal@@Base+0x343c>
   1d81c:	lsr	x8, x4, #30
   1d820:	lsl	x4, x4, #34
   1d824:	adds	x4, x4, x1
   1d828:	sub	x8, x8, x9
   1d82c:	cinc	x8, x8, cs  // cs = hs, nlast
   1d830:	sub	x0, x7, x5
   1d834:	subs	x9, x4, x8
   1d838:	cmp	x4, x8
   1d83c:	lsr	x1, x8, #30
   1d840:	lsl	x8, x8, #34
   1d844:	sbc	x1, x1, xzr
   1d848:	adds	x8, x9, x8
   1d84c:	cinc	x1, x1, cs  // cs = hs, nlast
   1d850:	subs	x25, x8, x1
   1d854:	cmp	x8, x1
   1d858:	lsr	x8, x1, #30
   1d85c:	lsl	x1, x1, #34
   1d860:	sbc	x8, x8, xzr
   1d864:	adds	x1, x25, x1
   1d868:	cinc	x8, x8, cs  // cs = hs, nlast
   1d86c:	sub	x4, x1, x19
   1d870:	cmp	x8, #0x0
   1d874:	ccmp	x19, x1, #0x0, eq  // eq = none
   1d878:	csel	x25, x4, x1, ls  // ls = plast
   1d87c:	cmp	x0, x7
   1d880:	lsr	x1, x5, #30
   1d884:	cset	x4, hi  // hi = pmore
   1d888:	lsl	x5, x5, #34
   1d88c:	adds	x0, x0, x5
   1d890:	sub	x1, x1, x4
   1d894:	cinc	x1, x1, cs  // cs = hs, nlast
   1d898:	subs	x4, x0, x1
   1d89c:	cmp	x0, x1
   1d8a0:	lsr	x0, x1, #30
   1d8a4:	lsl	x1, x1, #34
   1d8a8:	sbc	x0, x0, xzr
   1d8ac:	adds	x1, x4, x1
   1d8b0:	cinc	x0, x0, cs  // cs = hs, nlast
   1d8b4:	subs	x4, x1, x0
   1d8b8:	cmp	x1, x0
   1d8bc:	lsr	x1, x0, #30
   1d8c0:	lsl	x0, x0, #34
   1d8c4:	sbc	x1, x1, xzr
   1d8c8:	adds	x0, x4, x0
   1d8cc:	cinc	x1, x1, cs  // cs = hs, nlast
   1d8d0:	sub	x5, x0, x19
   1d8d4:	cmp	x1, #0x0
   1d8d8:	lsr	x2, x2, #1
   1d8dc:	ccmp	x19, x0, #0x0, eq  // eq = none
   1d8e0:	csel	x4, x5, x0, ls  // ls = plast
   1d8e4:	cbz	x2, 1da28 <PyInit__decimal@@Base+0x34a8>
   1d8e8:	mul	x7, x4, x4
   1d8ec:	umulh	x5, x4, x4
   1d8f0:	tbnz	w2, #0, 1d800 <PyInit__decimal@@Base+0x3280>
   1d8f4:	cbnz	x3, 1d98c <PyInit__decimal@@Base+0x340c>
   1d8f8:	sub	x0, x7, x5
   1d8fc:	cbnz	x6, 1d87c <PyInit__decimal@@Base+0x32fc>
   1d900:	cmp	x0, x7
   1d904:	lsr	x1, x5, #24
   1d908:	cset	x4, hi  // hi = pmore
   1d90c:	lsl	x5, x5, #40
   1d910:	adds	x5, x0, x5
   1d914:	sub	x1, x1, x4
   1d918:	cinc	x1, x1, cs  // cs = hs, nlast
   1d91c:	subs	x4, x5, x1
   1d920:	cmp	x5, x1
   1d924:	lsr	x0, x1, #24
   1d928:	lsl	x1, x1, #40
   1d92c:	sbc	x0, x0, xzr
   1d930:	adds	x1, x4, x1
   1d934:	cinc	x0, x0, cs  // cs = hs, nlast
   1d938:	subs	x4, x1, x0
   1d93c:	cmp	x1, x0
   1d940:	lsr	x1, x0, #24
   1d944:	lsl	x0, x0, #40
   1d948:	b	1d8c4 <PyInit__decimal@@Base+0x3344>
   1d94c:	lsr	x0, x4, #32
   1d950:	lsl	x4, x4, #32
   1d954:	adds	x4, x4, x1
   1d958:	sub	x0, x0, x9
   1d95c:	cinc	x0, x0, cs  // cs = hs, nlast
   1d960:	subs	x25, x4, x0
   1d964:	cmp	x4, x0
   1d968:	lsr	x1, x0, #32
   1d96c:	lsl	x0, x0, #32
   1d970:	sbc	x1, x1, xzr
   1d974:	adds	x0, x25, x0
   1d978:	cinc	x1, x1, cs  // cs = hs, nlast
   1d97c:	sub	x4, x0, x19
   1d980:	cmp	x1, #0x0
   1d984:	ccmp	x19, x0, #0x0, eq  // eq = none
   1d988:	csel	x25, x4, x0, ls  // ls = plast
   1d98c:	subs	x1, x7, x5
   1d990:	lsr	x0, x5, #32
   1d994:	cmp	x7, x5
   1d998:	lsl	x5, x5, #32
   1d99c:	sbc	x0, x0, xzr
   1d9a0:	adds	x5, x1, x5
   1d9a4:	cinc	x0, x0, cs  // cs = hs, nlast
   1d9a8:	subs	x4, x5, x0
   1d9ac:	cmp	x5, x0
   1d9b0:	lsr	x1, x0, #32
   1d9b4:	lsl	x0, x0, #32
   1d9b8:	b	1d8c4 <PyInit__decimal@@Base+0x3344>
   1d9bc:	lsr	x8, x4, #24
   1d9c0:	lsl	x4, x4, #40
   1d9c4:	adds	x4, x4, x1
   1d9c8:	sub	x8, x8, x9
   1d9cc:	cinc	x8, x8, cs  // cs = hs, nlast
   1d9d0:	sub	x0, x7, x5
   1d9d4:	subs	x9, x4, x8
   1d9d8:	cmp	x4, x8
   1d9dc:	lsr	x1, x8, #24
   1d9e0:	lsl	x8, x8, #40
   1d9e4:	sbc	x1, x1, xzr
   1d9e8:	adds	x8, x9, x8
   1d9ec:	cinc	x1, x1, cs  // cs = hs, nlast
   1d9f0:	subs	x25, x8, x1
   1d9f4:	cmp	x8, x1
   1d9f8:	lsr	x8, x1, #24
   1d9fc:	lsl	x1, x1, #40
   1da00:	sbc	x8, x8, xzr
   1da04:	adds	x1, x25, x1
   1da08:	cinc	x8, x8, cs  // cs = hs, nlast
   1da0c:	sub	x4, x1, x19
   1da10:	cmp	x8, #0x0
   1da14:	ccmp	x19, x1, #0x0, eq  // eq = none
   1da18:	csel	x25, x4, x1, ls  // ls = plast
   1da1c:	b	1d900 <PyInit__decimal@@Base+0x3380>
   1da20:	mov	x25, #0x1                   	// #1
   1da24:	nop
   1da28:	cbnz	x24, 1dc44 <PyInit__decimal@@Base+0x36c4>
   1da2c:	adrp	x21, 20000 <PyInit__decimal@@Base+0x5a80>
   1da30:	adrp	x26, 1f000 <PyInit__decimal@@Base+0x4a80>
   1da34:	add	x21, x21, #0x6e0
   1da38:	add	x26, x26, #0x938
   1da3c:	mov	w2, w23
   1da40:	mov	x1, x24
   1da44:	mov	x0, x20
   1da48:	blr	x26
   1da4c:	cbz	w0, 1dc28 <PyInit__decimal@@Base+0x36a8>
   1da50:	mov	w2, w23
   1da54:	mov	x1, x24
   1da58:	mov	x0, x22
   1da5c:	blr	x26
   1da60:	cbz	w0, 1dc28 <PyInit__decimal@@Base+0x36a8>
   1da64:	subs	x6, x24, #0x1
   1da68:	b.eq	1dc0c <PyInit__decimal@@Base+0x368c>  // b.none
   1da6c:	and	x26, x19, #0x100000000
   1da70:	add	x4, x20, #0x8
   1da74:	add	x7, x22, #0x8
   1da78:	and	x8, x19, #0x400000000
   1da7c:	mov	x0, #0x0                   	// #0
   1da80:	b	1db64 <PyInit__decimal@@Base+0x35e4>
   1da84:	cbz	x8, 1dc6c <PyInit__decimal@@Base+0x36ec>
   1da88:	lsr	x3, x5, #30
   1da8c:	lsl	x5, x5, #34
   1da90:	adds	x5, x5, x10
   1da94:	sub	x3, x3, x11
   1da98:	cinc	x3, x3, cs  // cs = hs, nlast
   1da9c:	mul	x11, x9, x1
   1daa0:	subs	x10, x5, x3
   1daa4:	umulh	x1, x9, x1
   1daa8:	cmp	x5, x3
   1daac:	lsr	x2, x3, #30
   1dab0:	lsl	x3, x3, #34
   1dab4:	sbc	x2, x2, xzr
   1dab8:	adds	x10, x10, x3
   1dabc:	lsl	x12, x1, #34
   1dac0:	cinc	x2, x2, cs  // cs = hs, nlast
   1dac4:	lsr	x3, x1, #30
   1dac8:	subs	x5, x10, x2
   1dacc:	cmp	x10, x2
   1dad0:	lsr	x9, x2, #30
   1dad4:	lsl	x2, x2, #34
   1dad8:	sbc	x9, x9, xzr
   1dadc:	adds	x2, x5, x2
   1dae0:	cinc	x9, x9, cs  // cs = hs, nlast
   1dae4:	sub	x5, x2, x19
   1dae8:	cmp	x9, #0x0
   1daec:	ccmp	x19, x2, #0x0, eq  // eq = none
   1daf0:	csel	x5, x5, x2, ls  // ls = plast
   1daf4:	subs	x2, x11, x1
   1daf8:	cmp	x11, x1
   1dafc:	sbc	x3, x3, xzr
   1db00:	adds	x1, x2, x12
   1db04:	cinc	x3, x3, cs  // cs = hs, nlast
   1db08:	subs	x2, x1, x3
   1db0c:	cmp	x1, x3
   1db10:	lsr	x1, x3, #30
   1db14:	lsl	x3, x3, #34
   1db18:	sbc	x1, x1, xzr
   1db1c:	adds	x3, x2, x3
   1db20:	cinc	x1, x1, cs  // cs = hs, nlast
   1db24:	subs	x2, x3, x1
   1db28:	cmp	x3, x1
   1db2c:	lsr	x3, x1, #30
   1db30:	lsl	x1, x1, #34
   1db34:	sbc	x3, x3, xzr
   1db38:	adds	x2, x2, x1
   1db3c:	cinc	x3, x3, cs  // cs = hs, nlast
   1db40:	sub	x1, x2, x19
   1db44:	cmp	x3, #0x0
   1db48:	str	x5, [x20, x0, lsl #3]
   1db4c:	ccmp	x19, x2, #0x0, eq  // eq = none
   1db50:	csel	x1, x1, x2, ls  // ls = plast
   1db54:	str	x1, [x4, x0, lsl #3]
   1db58:	add	x0, x0, #0x2
   1db5c:	cmp	x0, x6
   1db60:	b.cs	1dd1c <PyInit__decimal@@Base+0x379c>  // b.hs, b.nlast
   1db64:	ldr	x5, [x20, x0, lsl #3]
   1db68:	ldr	x3, [x22, x0, lsl #3]
   1db6c:	ldr	x9, [x4, x0, lsl #3]
   1db70:	mul	x2, x5, x3
   1db74:	umulh	x5, x5, x3
   1db78:	ldr	x1, [x7, x0, lsl #3]
   1db7c:	subs	x10, x2, x5
   1db80:	cmp	x2, x5
   1db84:	cset	x11, cc  // cc = lo, ul, last
   1db88:	cbz	x26, 1da84 <PyInit__decimal@@Base+0x3504>
   1db8c:	lsr	x2, x5, #32
   1db90:	lsl	x5, x5, #32
   1db94:	adds	x5, x5, x10
   1db98:	sub	x2, x2, x11
   1db9c:	cinc	x2, x2, cs  // cs = hs, nlast
   1dba0:	mul	x10, x9, x1
   1dba4:	subs	x3, x5, x2
   1dba8:	umulh	x1, x9, x1
   1dbac:	cmp	x5, x2
   1dbb0:	lsr	x9, x2, #32
   1dbb4:	lsl	x2, x2, #32
   1dbb8:	sbc	x9, x9, xzr
   1dbbc:	adds	x5, x3, x2
   1dbc0:	lsr	x2, x1, #32
   1dbc4:	cinc	x9, x9, cs  // cs = hs, nlast
   1dbc8:	sub	x3, x5, x19
   1dbcc:	cmp	x9, #0x0
   1dbd0:	lsl	x9, x1, #32
   1dbd4:	ccmp	x19, x5, #0x0, eq  // eq = none
   1dbd8:	csel	x5, x3, x5, ls  // ls = plast
   1dbdc:	subs	x3, x10, x1
   1dbe0:	cmp	x10, x1
   1dbe4:	sbc	x2, x2, xzr
   1dbe8:	adds	x3, x3, x9
   1dbec:	cinc	x2, x2, cs  // cs = hs, nlast
   1dbf0:	subs	x1, x3, x2
   1dbf4:	cmp	x3, x2
   1dbf8:	lsr	x3, x2, #32
   1dbfc:	lsl	x2, x2, #32
   1dc00:	sbc	x3, x3, xzr
   1dc04:	adds	x2, x1, x2
   1dc08:	b	1db3c <PyInit__decimal@@Base+0x35bc>
   1dc0c:	mov	w2, w23
   1dc10:	mov	x0, x20
   1dc14:	mov	x1, #0x1                   	// #1
   1dc18:	and	x26, x19, #0x100000000
   1dc1c:	mov	x24, #0xfffffffffffffffe    	// #-2
   1dc20:	blr	x21
   1dc24:	cbnz	w0, 1dd38 <PyInit__decimal@@Base+0x37b8>
   1dc28:	mov	w0, #0x0                   	// #0
   1dc2c:	ldp	x19, x20, [sp, #16]
   1dc30:	ldp	x21, x22, [sp, #32]
   1dc34:	ldp	x23, x24, [sp, #48]
   1dc38:	ldp	x25, x26, [sp, #64]
   1dc3c:	ldp	x29, x30, [sp], #80
   1dc40:	ret
   1dc44:	sub	x0, x24, #0x1
   1dc48:	tst	x0, x24
   1dc4c:	b.ne	1da2c <PyInit__decimal@@Base+0x34ac>  // b.any
   1dc50:	cmp	x24, #0x1, lsl #12
   1dc54:	b.ls	1e1e8 <PyInit__decimal@@Base+0x3c68>  // b.plast
   1dc58:	adrp	x21, 39000 <PyInit__decimal@@Base+0x1ea80>
   1dc5c:	adrp	x26, 39000 <PyInit__decimal@@Base+0x1ea80>
   1dc60:	add	x21, x21, #0xfc0
   1dc64:	add	x26, x26, #0x578
   1dc68:	b	1da3c <PyInit__decimal@@Base+0x34bc>
   1dc6c:	lsr	x3, x5, #24
   1dc70:	lsl	x5, x5, #40
   1dc74:	adds	x5, x5, x10
   1dc78:	sub	x3, x3, x11
   1dc7c:	cinc	x3, x3, cs  // cs = hs, nlast
   1dc80:	mul	x11, x1, x9
   1dc84:	subs	x10, x5, x3
   1dc88:	umulh	x1, x1, x9
   1dc8c:	cmp	x5, x3
   1dc90:	lsr	x2, x3, #24
   1dc94:	lsl	x3, x3, #40
   1dc98:	sbc	x2, x2, xzr
   1dc9c:	adds	x9, x10, x3
   1dca0:	lsr	x3, x1, #24
   1dca4:	cinc	x2, x2, cs  // cs = hs, nlast
   1dca8:	lsl	x10, x1, #40
   1dcac:	subs	x5, x9, x2
   1dcb0:	cmp	x9, x2
   1dcb4:	lsr	x9, x2, #24
   1dcb8:	lsl	x2, x2, #40
   1dcbc:	sbc	x9, x9, xzr
   1dcc0:	adds	x2, x5, x2
   1dcc4:	cinc	x9, x9, cs  // cs = hs, nlast
   1dcc8:	sub	x5, x2, x19
   1dccc:	cmp	x9, #0x0
   1dcd0:	ccmp	x19, x2, #0x0, eq  // eq = none
   1dcd4:	csel	x5, x5, x2, ls  // ls = plast
   1dcd8:	subs	x2, x11, x1
   1dcdc:	cmp	x11, x1
   1dce0:	sbc	x3, x3, xzr
   1dce4:	adds	x1, x2, x10
   1dce8:	cinc	x3, x3, cs  // cs = hs, nlast
   1dcec:	subs	x2, x1, x3
   1dcf0:	cmp	x1, x3
   1dcf4:	lsr	x1, x3, #24
   1dcf8:	lsl	x3, x3, #40
   1dcfc:	sbc	x1, x1, xzr
   1dd00:	adds	x3, x2, x3
   1dd04:	cinc	x1, x1, cs  // cs = hs, nlast
   1dd08:	subs	x2, x3, x1
   1dd0c:	cmp	x3, x1
   1dd10:	lsr	x3, x1, #24
   1dd14:	lsl	x1, x1, #40
   1dd18:	b	1db34 <PyInit__decimal@@Base+0x35b4>
   1dd1c:	mov	w2, w23
   1dd20:	mov	x1, x24
   1dd24:	mov	x0, x20
   1dd28:	blr	x21
   1dd2c:	cbz	w0, 1dc28 <PyInit__decimal@@Base+0x36a8>
   1dd30:	subs	x24, x24, #0x3
   1dd34:	b.eq	1e1cc <PyInit__decimal@@Base+0x3c4c>  // b.none
   1dd38:	and	x2, x19, #0x400000000
   1dd3c:	mov	x6, #0x0                   	// #0
   1dd40:	b	1df00 <PyInit__decimal@@Base+0x3980>
   1dd44:	cbz	x2, 1e044 <PyInit__decimal@@Base+0x3ac4>
   1dd48:	lsr	x5, x1, #30
   1dd4c:	lsl	x1, x1, #34
   1dd50:	adds	x1, x1, x7
   1dd54:	sub	x5, x5, x8
   1dd58:	cinc	x5, x5, cs  // cs = hs, nlast
   1dd5c:	mul	x9, x3, x25
   1dd60:	subs	x8, x1, x5
   1dd64:	umulh	x3, x3, x25
   1dd68:	cmp	x1, x5
   1dd6c:	lsr	x1, x5, #30
   1dd70:	lsl	x5, x5, #34
   1dd74:	sbc	x1, x1, xzr
   1dd78:	adds	x8, x8, x5
   1dd7c:	lsl	x11, x3, #34
   1dd80:	cinc	x1, x1, cs  // cs = hs, nlast
   1dd84:	lsr	x7, x3, #30
   1dd88:	subs	x5, x8, x1
   1dd8c:	mul	x13, x4, x25
   1dd90:	cmp	x8, x1
   1dd94:	lsr	x8, x1, #30
   1dd98:	lsl	x1, x1, #34
   1dd9c:	sbc	x8, x8, xzr
   1dda0:	adds	x1, x5, x1
   1dda4:	umulh	x4, x4, x25
   1dda8:	cinc	x8, x8, cs  // cs = hs, nlast
   1ddac:	sub	x5, x1, x19
   1ddb0:	cmp	x8, #0x0
   1ddb4:	mul	x10, x0, x25
   1ddb8:	ccmp	x19, x1, #0x0, eq  // eq = none
   1ddbc:	lsr	x8, x4, #30
   1ddc0:	csel	x5, x5, x1, ls  // ls = plast
   1ddc4:	subs	x1, x9, x3
   1ddc8:	cmp	x9, x3
   1ddcc:	lsl	x14, x4, #34
   1ddd0:	sbc	x7, x7, xzr
   1ddd4:	adds	x1, x1, x11
   1ddd8:	cinc	x7, x7, cs  // cs = hs, nlast
   1dddc:	umulh	x0, x0, x25
   1dde0:	subs	x11, x1, x7
   1dde4:	cmp	x1, x7
   1dde8:	lsr	x1, x7, #30
   1ddec:	lsl	x7, x7, #34
   1ddf0:	sbc	x1, x1, xzr
   1ddf4:	adds	x11, x11, x7
   1ddf8:	lsl	x12, x0, #34
   1ddfc:	cinc	x1, x1, cs  // cs = hs, nlast
   1de00:	lsr	x7, x0, #30
   1de04:	subs	x9, x11, x1
   1de08:	cmp	x11, x1
   1de0c:	lsr	x11, x1, #30
   1de10:	lsl	x1, x1, #34
   1de14:	sbc	x11, x11, xzr
   1de18:	adds	x1, x9, x1
   1de1c:	cinc	x11, x11, cs  // cs = hs, nlast
   1de20:	sub	x9, x1, x19
   1de24:	cmp	x11, #0x0
   1de28:	ccmp	x19, x1, #0x0, eq  // eq = none
   1de2c:	csel	x9, x9, x1, ls  // ls = plast
   1de30:	subs	x3, x13, x4
   1de34:	cmp	x13, x4
   1de38:	sbc	x8, x8, xzr
   1de3c:	adds	x3, x3, x14
   1de40:	cinc	x8, x8, cs  // cs = hs, nlast
   1de44:	subs	x1, x3, x8
   1de48:	cmp	x3, x8
   1de4c:	lsr	x3, x8, #30
   1de50:	lsl	x8, x8, #34
   1de54:	sbc	x3, x3, xzr
   1de58:	adds	x8, x1, x8
   1de5c:	cinc	x3, x3, cs  // cs = hs, nlast
   1de60:	subs	x1, x8, x3
   1de64:	cmp	x8, x3
   1de68:	lsr	x4, x3, #30
   1de6c:	lsl	x3, x3, #34
   1de70:	sbc	x4, x4, xzr
   1de74:	adds	x3, x1, x3
   1de78:	cinc	x4, x4, cs  // cs = hs, nlast
   1de7c:	sub	x1, x3, x19
   1de80:	cmp	x4, #0x0
   1de84:	ccmp	x19, x3, #0x0, eq  // eq = none
   1de88:	csel	x3, x1, x3, ls  // ls = plast
   1de8c:	subs	x1, x10, x0
   1de90:	cmp	x10, x0
   1de94:	sbc	x7, x7, xzr
   1de98:	adds	x0, x1, x12
   1de9c:	cinc	x7, x7, cs  // cs = hs, nlast
   1dea0:	subs	x1, x0, x7
   1dea4:	cmp	x0, x7
   1dea8:	lsr	x0, x7, #30
   1deac:	lsl	x7, x7, #34
   1deb0:	sbc	x0, x0, xzr
   1deb4:	adds	x7, x1, x7
   1deb8:	cinc	x0, x0, cs  // cs = hs, nlast
   1debc:	subs	x1, x7, x0
   1dec0:	cmp	x7, x0
   1dec4:	lsr	x4, x0, #30
   1dec8:	lsl	x0, x0, #34
   1decc:	sbc	x4, x4, xzr
   1ded0:	adds	x1, x1, x0
   1ded4:	cinc	x4, x4, cs  // cs = hs, nlast
   1ded8:	sub	x0, x1, x19
   1dedc:	cmp	x4, #0x0
   1dee0:	stp	x5, x9, [x20]
   1dee4:	ccmp	x19, x1, #0x0, eq  // eq = none
   1dee8:	csel	x0, x0, x1, ls  // ls = plast
   1deec:	stp	x3, x0, [x20, #16]
   1def0:	add	x6, x6, #0x4
   1def4:	cmp	x6, x24
   1def8:	add	x20, x20, #0x20
   1defc:	b.cs	1e1cc <PyInit__decimal@@Base+0x3c4c>  // b.hs, b.nlast
   1df00:	ldp	x1, x3, [x20]
   1df04:	ldr	x4, [x20, #16]
   1df08:	mul	x0, x25, x1
   1df0c:	umulh	x1, x25, x1
   1df10:	subs	x7, x0, x1
   1df14:	cmp	x0, x1
   1df18:	cset	x8, cc  // cc = lo, ul, last
   1df1c:	ldr	x0, [x20, #24]
   1df20:	cbz	x26, 1dd44 <PyInit__decimal@@Base+0x37c4>
   1df24:	lsr	x5, x1, #32
   1df28:	lsl	x1, x1, #32
   1df2c:	adds	x1, x1, x7
   1df30:	sub	x5, x5, x8
   1df34:	cinc	x5, x5, cs  // cs = hs, nlast
   1df38:	mul	x9, x3, x25
   1df3c:	subs	x7, x1, x5
   1df40:	umulh	x3, x3, x25
   1df44:	cmp	x1, x5
   1df48:	lsr	x8, x5, #32
   1df4c:	lsl	x5, x5, #32
   1df50:	sbc	x8, x8, xzr
   1df54:	adds	x5, x7, x5
   1df58:	lsr	x1, x3, #32
   1df5c:	cinc	x8, x8, cs  // cs = hs, nlast
   1df60:	sub	x7, x5, x19
   1df64:	cmp	x8, #0x0
   1df68:	lsl	x8, x3, #32
   1df6c:	ccmp	x19, x5, #0x0, eq  // eq = none
   1df70:	mul	x11, x4, x25
   1df74:	csel	x5, x7, x5, ls  // ls = plast
   1df78:	subs	x7, x9, x3
   1df7c:	cmp	x9, x3
   1df80:	umulh	x4, x4, x25
   1df84:	sbc	x1, x1, xzr
   1df88:	adds	x7, x7, x8
   1df8c:	cinc	x1, x1, cs  // cs = hs, nlast
   1df90:	mul	x10, x0, x25
   1df94:	subs	x9, x7, x1
   1df98:	lsr	x3, x4, #32
   1df9c:	cmp	x7, x1
   1dfa0:	lsr	x7, x1, #32
   1dfa4:	lsl	x1, x1, #32
   1dfa8:	sbc	x7, x7, xzr
   1dfac:	adds	x1, x9, x1
   1dfb0:	lsl	x12, x4, #32
   1dfb4:	cinc	x7, x7, cs  // cs = hs, nlast
   1dfb8:	sub	x9, x1, x19
   1dfbc:	cmp	x7, #0x0
   1dfc0:	umulh	x0, x0, x25
   1dfc4:	ccmp	x19, x1, #0x0, eq  // eq = none
   1dfc8:	csel	x9, x9, x1, ls  // ls = plast
   1dfcc:	subs	x8, x11, x4
   1dfd0:	cmp	x11, x4
   1dfd4:	lsr	x1, x0, #32
   1dfd8:	sbc	x3, x3, xzr
   1dfdc:	adds	x8, x8, x12
   1dfe0:	cinc	x3, x3, cs  // cs = hs, nlast
   1dfe4:	lsl	x11, x0, #32
   1dfe8:	subs	x7, x8, x3
   1dfec:	cmp	x8, x3
   1dff0:	lsr	x8, x3, #32
   1dff4:	lsl	x3, x3, #32
   1dff8:	sbc	x8, x8, xzr
   1dffc:	adds	x3, x7, x3
   1e000:	cinc	x8, x8, cs  // cs = hs, nlast
   1e004:	sub	x4, x3, x19
   1e008:	cmp	x8, #0x0
   1e00c:	ccmp	x19, x3, #0x0, eq  // eq = none
   1e010:	csel	x3, x4, x3, ls  // ls = plast
   1e014:	subs	x4, x10, x0
   1e018:	cmp	x10, x0
   1e01c:	sbc	x1, x1, xzr
   1e020:	adds	x4, x4, x11
   1e024:	cinc	x1, x1, cs  // cs = hs, nlast
   1e028:	subs	x0, x4, x1
   1e02c:	cmp	x4, x1
   1e030:	lsr	x4, x1, #32
   1e034:	lsl	x1, x1, #32
   1e038:	sbc	x4, x4, xzr
   1e03c:	adds	x1, x0, x1
   1e040:	b	1ded4 <PyInit__decimal@@Base+0x3954>
   1e044:	lsr	x5, x1, #24
   1e048:	lsl	x1, x1, #40
   1e04c:	adds	x1, x1, x7
   1e050:	sub	x5, x5, x8
   1e054:	cinc	x5, x5, cs  // cs = hs, nlast
   1e058:	mul	x9, x3, x25
   1e05c:	subs	x8, x1, x5
   1e060:	umulh	x3, x3, x25
   1e064:	cmp	x1, x5
   1e068:	lsr	x1, x5, #24
   1e06c:	lsl	x5, x5, #40
   1e070:	sbc	x1, x1, xzr
   1e074:	adds	x8, x8, x5
   1e078:	lsl	x11, x3, #40
   1e07c:	cinc	x1, x1, cs  // cs = hs, nlast
   1e080:	lsr	x7, x3, #24
   1e084:	subs	x5, x8, x1
   1e088:	mul	x13, x4, x25
   1e08c:	cmp	x8, x1
   1e090:	lsr	x8, x1, #24
   1e094:	lsl	x1, x1, #40
   1e098:	sbc	x8, x8, xzr
   1e09c:	adds	x1, x5, x1
   1e0a0:	umulh	x4, x4, x25
   1e0a4:	cinc	x8, x8, cs  // cs = hs, nlast
   1e0a8:	sub	x5, x1, x19
   1e0ac:	cmp	x8, #0x0
   1e0b0:	mul	x10, x0, x25
   1e0b4:	ccmp	x19, x1, #0x0, eq  // eq = none
   1e0b8:	lsr	x8, x4, #24
   1e0bc:	csel	x5, x5, x1, ls  // ls = plast
   1e0c0:	subs	x1, x9, x3
   1e0c4:	cmp	x9, x3
   1e0c8:	lsl	x14, x4, #40
   1e0cc:	sbc	x7, x7, xzr
   1e0d0:	adds	x1, x1, x11
   1e0d4:	cinc	x7, x7, cs  // cs = hs, nlast
   1e0d8:	umulh	x0, x0, x25
   1e0dc:	subs	x11, x1, x7
   1e0e0:	cmp	x1, x7
   1e0e4:	lsr	x1, x7, #24
   1e0e8:	lsl	x7, x7, #40
   1e0ec:	sbc	x1, x1, xzr
   1e0f0:	adds	x11, x11, x7
   1e0f4:	lsl	x12, x0, #40
   1e0f8:	cinc	x1, x1, cs  // cs = hs, nlast
   1e0fc:	lsr	x7, x0, #24
   1e100:	subs	x9, x11, x1
   1e104:	cmp	x11, x1
   1e108:	lsr	x11, x1, #24
   1e10c:	lsl	x1, x1, #40
   1e110:	sbc	x11, x11, xzr
   1e114:	adds	x1, x9, x1
   1e118:	cinc	x11, x11, cs  // cs = hs, nlast
   1e11c:	sub	x9, x1, x19
   1e120:	cmp	x11, #0x0
   1e124:	ccmp	x19, x1, #0x0, eq  // eq = none
   1e128:	csel	x9, x9, x1, ls  // ls = plast
   1e12c:	subs	x3, x13, x4
   1e130:	cmp	x13, x4
   1e134:	sbc	x8, x8, xzr
   1e138:	adds	x3, x3, x14
   1e13c:	cinc	x8, x8, cs  // cs = hs, nlast
   1e140:	subs	x1, x3, x8
   1e144:	cmp	x3, x8
   1e148:	lsr	x3, x8, #24
   1e14c:	lsl	x8, x8, #40
   1e150:	sbc	x3, x3, xzr
   1e154:	adds	x8, x1, x8
   1e158:	cinc	x3, x3, cs  // cs = hs, nlast
   1e15c:	subs	x1, x8, x3
   1e160:	cmp	x8, x3
   1e164:	lsr	x4, x3, #24
   1e168:	lsl	x3, x3, #40
   1e16c:	sbc	x4, x4, xzr
   1e170:	adds	x3, x1, x3
   1e174:	cinc	x4, x4, cs  // cs = hs, nlast
   1e178:	sub	x1, x3, x19
   1e17c:	cmp	x4, #0x0
   1e180:	ccmp	x19, x3, #0x0, eq  // eq = none
   1e184:	csel	x3, x1, x3, ls  // ls = plast
   1e188:	subs	x1, x10, x0
   1e18c:	cmp	x10, x0
   1e190:	sbc	x7, x7, xzr
   1e194:	adds	x0, x1, x12
   1e198:	cinc	x7, x7, cs  // cs = hs, nlast
   1e19c:	subs	x1, x0, x7
   1e1a0:	cmp	x0, x7
   1e1a4:	lsr	x0, x7, #24
   1e1a8:	lsl	x7, x7, #40
   1e1ac:	sbc	x0, x0, xzr
   1e1b0:	adds	x7, x1, x7
   1e1b4:	cinc	x0, x0, cs  // cs = hs, nlast
   1e1b8:	subs	x1, x7, x0
   1e1bc:	cmp	x7, x0
   1e1c0:	lsr	x4, x0, #24
   1e1c4:	lsl	x0, x0, #40
   1e1c8:	b	1decc <PyInit__decimal@@Base+0x394c>
   1e1cc:	mov	w0, #0x1                   	// #1
   1e1d0:	ldp	x19, x20, [sp, #16]
   1e1d4:	ldp	x21, x22, [sp, #32]
   1e1d8:	ldp	x23, x24, [sp, #48]
   1e1dc:	ldp	x25, x26, [sp, #64]
   1e1e0:	ldp	x29, x30, [sp], #80
   1e1e4:	ret
   1e1e8:	adrp	x21, 1f000 <PyInit__decimal@@Base+0x4a80>
   1e1ec:	adrp	x26, 1f000 <PyInit__decimal@@Base+0x4a80>
   1e1f0:	add	x21, x21, #0x8c0
   1e1f4:	add	x26, x26, #0x848
   1e1f8:	b	1da3c <PyInit__decimal@@Base+0x34bc>
   1e1fc:	nop
   1e200:	stp	x29, x30, [sp, #-80]!
   1e204:	adrp	x3, 42000 <PyInit__decimal@@Base+0x27a80>
   1e208:	mov	x29, sp
   1e20c:	stp	x23, x24, [sp, #48]
   1e210:	mov	w23, w2
   1e214:	add	x2, x3, #0x5a8
   1e218:	stp	x19, x20, [sp, #16]
   1e21c:	mov	x20, x0
   1e220:	ldr	x19, [x2, w23, sxtw #3]
   1e224:	stp	x21, x22, [sp, #32]
   1e228:	mov	x22, x1
   1e22c:	stp	x25, x26, [sp, #64]
   1e230:	subs	x2, x19, #0x2
   1e234:	b.eq	1e46c <PyInit__decimal@@Base+0x3eec>  // b.none
   1e238:	and	x5, x19, #0x100000000
   1e23c:	mov	x3, x1
   1e240:	and	x6, x19, #0x400000000
   1e244:	mov	x21, #0x1                   	// #1
   1e248:	b	1e334 <PyInit__decimal@@Base+0x3db4>
   1e24c:	mul	x0, x21, x3
   1e250:	umulh	x3, x21, x3
   1e254:	subs	x8, x0, x3
   1e258:	cmp	x0, x3
   1e25c:	cset	x9, cc  // cc = lo, ul, last
   1e260:	cbnz	x5, 1e398 <PyInit__decimal@@Base+0x3e18>
   1e264:	cbz	x6, 1e408 <PyInit__decimal@@Base+0x3e88>
   1e268:	lsr	x7, x3, #30
   1e26c:	lsl	x3, x3, #34
   1e270:	adds	x3, x3, x8
   1e274:	sub	x7, x7, x9
   1e278:	cinc	x7, x7, cs  // cs = hs, nlast
   1e27c:	sub	x8, x1, x4
   1e280:	subs	x9, x3, x7
   1e284:	cmp	x3, x7
   1e288:	lsr	x0, x7, #30
   1e28c:	lsl	x7, x7, #34
   1e290:	sbc	x0, x0, xzr
   1e294:	adds	x7, x9, x7
   1e298:	cinc	x0, x0, cs  // cs = hs, nlast
   1e29c:	subs	x21, x7, x0
   1e2a0:	cmp	x7, x0
   1e2a4:	lsr	x7, x0, #30
   1e2a8:	lsl	x0, x0, #34
   1e2ac:	sbc	x7, x7, xzr
   1e2b0:	adds	x0, x21, x0
   1e2b4:	cinc	x7, x7, cs  // cs = hs, nlast
   1e2b8:	sub	x3, x0, x19
   1e2bc:	cmp	x7, #0x0
   1e2c0:	ccmp	x19, x0, #0x0, eq  // eq = none
   1e2c4:	csel	x21, x3, x0, ls  // ls = plast
   1e2c8:	cmp	x8, x1
   1e2cc:	lsl	x0, x4, #34
   1e2d0:	cset	x3, hi  // hi = pmore
   1e2d4:	lsr	x1, x4, #30
   1e2d8:	sub	x1, x1, x3
   1e2dc:	adds	x4, x8, x0
   1e2e0:	cinc	x1, x1, cs  // cs = hs, nlast
   1e2e4:	subs	x3, x4, x1
   1e2e8:	cmp	x4, x1
   1e2ec:	lsr	x0, x1, #30
   1e2f0:	lsl	x1, x1, #34
   1e2f4:	sbc	x0, x0, xzr
   1e2f8:	adds	x1, x3, x1
   1e2fc:	cinc	x0, x0, cs  // cs = hs, nlast
   1e300:	subs	x3, x1, x0
   1e304:	cmp	x1, x0
   1e308:	lsr	x1, x0, #30
   1e30c:	lsl	x0, x0, #34
   1e310:	sbc	x1, x1, xzr
   1e314:	adds	x0, x3, x0
   1e318:	cinc	x1, x1, cs  // cs = hs, nlast
   1e31c:	sub	x4, x0, x19
   1e320:	cmp	x1, #0x0
   1e324:	lsr	x2, x2, #1
   1e328:	ccmp	x19, x0, #0x0, eq  // eq = none
   1e32c:	csel	x3, x4, x0, ls  // ls = plast
   1e330:	cbz	x2, 1e470 <PyInit__decimal@@Base+0x3ef0>
   1e334:	mul	x1, x3, x3
   1e338:	umulh	x4, x3, x3
   1e33c:	tbnz	w2, #0, 1e24c <PyInit__decimal@@Base+0x3ccc>
   1e340:	cbnz	x5, 1e3d8 <PyInit__decimal@@Base+0x3e58>
   1e344:	sub	x8, x1, x4
   1e348:	cbnz	x6, 1e2c8 <PyInit__decimal@@Base+0x3d48>
   1e34c:	cmp	x8, x1
   1e350:	lsr	x1, x4, #24
   1e354:	cset	x0, hi  // hi = pmore
   1e358:	lsl	x4, x4, #40
   1e35c:	adds	x4, x8, x4
   1e360:	sub	x1, x1, x0
   1e364:	cinc	x1, x1, cs  // cs = hs, nlast
   1e368:	subs	x3, x4, x1
   1e36c:	cmp	x4, x1
   1e370:	lsr	x0, x1, #24
   1e374:	lsl	x1, x1, #40
   1e378:	sbc	x0, x0, xzr
   1e37c:	adds	x1, x3, x1
   1e380:	cinc	x0, x0, cs  // cs = hs, nlast
   1e384:	subs	x3, x1, x0
   1e388:	cmp	x1, x0
   1e38c:	lsr	x1, x0, #24
   1e390:	lsl	x0, x0, #40
   1e394:	b	1e310 <PyInit__decimal@@Base+0x3d90>
   1e398:	lsr	x0, x3, #32
   1e39c:	lsl	x3, x3, #32
   1e3a0:	adds	x3, x3, x8
   1e3a4:	sub	x0, x0, x9
   1e3a8:	cinc	x0, x0, cs  // cs = hs, nlast
   1e3ac:	subs	x21, x3, x0
   1e3b0:	cmp	x3, x0
   1e3b4:	lsr	x7, x0, #32
   1e3b8:	lsl	x0, x0, #32
   1e3bc:	sbc	x7, x7, xzr
   1e3c0:	adds	x0, x21, x0
   1e3c4:	cinc	x7, x7, cs  // cs = hs, nlast
   1e3c8:	sub	x3, x0, x19
   1e3cc:	cmp	x7, #0x0
   1e3d0:	ccmp	x19, x0, #0x0, eq  // eq = none
   1e3d4:	csel	x21, x3, x0, ls  // ls = plast
   1e3d8:	subs	x3, x1, x4
   1e3dc:	lsr	x0, x4, #32
   1e3e0:	cmp	x1, x4
   1e3e4:	lsl	x4, x4, #32
   1e3e8:	sbc	x0, x0, xzr
   1e3ec:	adds	x4, x3, x4
   1e3f0:	cinc	x0, x0, cs  // cs = hs, nlast
   1e3f4:	subs	x3, x4, x0
   1e3f8:	cmp	x4, x0
   1e3fc:	lsr	x1, x0, #32
   1e400:	lsl	x0, x0, #32
   1e404:	b	1e310 <PyInit__decimal@@Base+0x3d90>
   1e408:	lsr	x7, x3, #24
   1e40c:	lsl	x3, x3, #40
   1e410:	adds	x3, x3, x8
   1e414:	sub	x7, x7, x9
   1e418:	cinc	x7, x7, cs  // cs = hs, nlast
   1e41c:	sub	x8, x1, x4
   1e420:	subs	x9, x3, x7
   1e424:	cmp	x3, x7
   1e428:	lsr	x0, x7, #24
   1e42c:	lsl	x7, x7, #40
   1e430:	sbc	x0, x0, xzr
   1e434:	adds	x7, x9, x7
   1e438:	cinc	x0, x0, cs  // cs = hs, nlast
   1e43c:	subs	x21, x7, x0
   1e440:	cmp	x7, x0
   1e444:	lsr	x7, x0, #24
   1e448:	lsl	x0, x0, #40
   1e44c:	sbc	x7, x7, xzr
   1e450:	adds	x0, x21, x0
   1e454:	cinc	x7, x7, cs  // cs = hs, nlast
   1e458:	sub	x3, x0, x19
   1e45c:	cmp	x7, #0x0
   1e460:	ccmp	x19, x0, #0x0, eq  // eq = none
   1e464:	csel	x21, x3, x0, ls  // ls = plast
   1e468:	b	1e34c <PyInit__decimal@@Base+0x3dcc>
   1e46c:	mov	x21, #0x1                   	// #1
   1e470:	cbnz	x22, 1e628 <PyInit__decimal@@Base+0x40a8>
   1e474:	mov	w2, w23
   1e478:	mov	x0, x20
   1e47c:	mov	x1, #0x0                   	// #0
   1e480:	bl	1f938 <PyInit__decimal@@Base+0x53b8>
   1e484:	cbz	w0, 1e680 <PyInit__decimal@@Base+0x4100>
   1e488:	adrp	x26, 20000 <PyInit__decimal@@Base+0x5a80>
   1e48c:	add	x26, x26, #0x6e0
   1e490:	mov	x25, #0xffffffffffffffff    	// #-1
   1e494:	and	x24, x19, #0x100000000
   1e498:	add	x5, x20, #0x8
   1e49c:	and	x6, x19, #0x400000000
   1e4a0:	mov	x1, #0x0                   	// #0
   1e4a4:	b	1e588 <PyInit__decimal@@Base+0x4008>
   1e4a8:	cbz	x6, 1e69c <PyInit__decimal@@Base+0x411c>
   1e4ac:	lsr	x3, x4, #30
   1e4b0:	lsl	x4, x4, #34
   1e4b4:	adds	x4, x4, x7
   1e4b8:	sub	x3, x3, x8
   1e4bc:	cinc	x3, x3, cs  // cs = hs, nlast
   1e4c0:	mul	x8, x0, x0
   1e4c4:	subs	x7, x4, x3
   1e4c8:	umulh	x0, x0, x0
   1e4cc:	cmp	x4, x3
   1e4d0:	lsr	x2, x3, #30
   1e4d4:	lsl	x3, x3, #34
   1e4d8:	sbc	x2, x2, xzr
   1e4dc:	adds	x7, x7, x3
   1e4e0:	lsl	x9, x0, #34
   1e4e4:	cinc	x2, x2, cs  // cs = hs, nlast
   1e4e8:	lsr	x3, x0, #30
   1e4ec:	subs	x4, x7, x2
   1e4f0:	cmp	x7, x2
   1e4f4:	lsr	x7, x2, #30
   1e4f8:	lsl	x2, x2, #34
   1e4fc:	sbc	x7, x7, xzr
   1e500:	adds	x2, x4, x2
   1e504:	cinc	x7, x7, cs  // cs = hs, nlast
   1e508:	sub	x4, x2, x19
   1e50c:	cmp	x7, #0x0
   1e510:	ccmp	x19, x2, #0x0, eq  // eq = none
   1e514:	csel	x4, x4, x2, ls  // ls = plast
   1e518:	subs	x2, x8, x0
   1e51c:	cmp	x8, x0
   1e520:	sbc	x3, x3, xzr
   1e524:	adds	x0, x2, x9
   1e528:	cinc	x3, x3, cs  // cs = hs, nlast
   1e52c:	subs	x2, x0, x3
   1e530:	cmp	x0, x3
   1e534:	lsr	x0, x3, #30
   1e538:	lsl	x3, x3, #34
   1e53c:	sbc	x0, x0, xzr
   1e540:	adds	x3, x2, x3
   1e544:	cinc	x0, x0, cs  // cs = hs, nlast
   1e548:	subs	x2, x3, x0
   1e54c:	cmp	x3, x0
   1e550:	lsr	x3, x0, #30
   1e554:	lsl	x0, x0, #34
   1e558:	sbc	x3, x3, xzr
   1e55c:	adds	x2, x2, x0
   1e560:	cinc	x3, x3, cs  // cs = hs, nlast
   1e564:	sub	x0, x2, x19
   1e568:	cmp	x3, #0x0
   1e56c:	str	x4, [x20, x1, lsl #3]
   1e570:	ccmp	x19, x2, #0x0, eq  // eq = none
   1e574:	csel	x0, x0, x2, ls  // ls = plast
   1e578:	str	x0, [x5, x1, lsl #3]
   1e57c:	add	x1, x1, #0x2
   1e580:	cmp	x1, x25
   1e584:	b.cs	1e74c <PyInit__decimal@@Base+0x41cc>  // b.hs, b.nlast
   1e588:	ldr	x4, [x20, x1, lsl #3]
   1e58c:	ldr	x0, [x5, x1, lsl #3]
   1e590:	mul	x2, x4, x4
   1e594:	umulh	x4, x4, x4
   1e598:	subs	x7, x2, x4
   1e59c:	cmp	x2, x4
   1e5a0:	cset	x8, cc  // cc = lo, ul, last
   1e5a4:	cbz	x24, 1e4a8 <PyInit__decimal@@Base+0x3f28>
   1e5a8:	lsr	x2, x4, #32
   1e5ac:	lsl	x4, x4, #32
   1e5b0:	adds	x4, x4, x7
   1e5b4:	sub	x2, x2, x8
   1e5b8:	cinc	x2, x2, cs  // cs = hs, nlast
   1e5bc:	mul	x8, x0, x0
   1e5c0:	subs	x3, x4, x2
   1e5c4:	umulh	x0, x0, x0
   1e5c8:	cmp	x4, x2
   1e5cc:	lsr	x7, x2, #32
   1e5d0:	lsl	x2, x2, #32
   1e5d4:	sbc	x7, x7, xzr
   1e5d8:	adds	x4, x3, x2
   1e5dc:	lsr	x2, x0, #32
   1e5e0:	cinc	x7, x7, cs  // cs = hs, nlast
   1e5e4:	sub	x3, x4, x19
   1e5e8:	cmp	x7, #0x0
   1e5ec:	lsl	x7, x0, #32
   1e5f0:	ccmp	x19, x4, #0x0, eq  // eq = none
   1e5f4:	csel	x4, x3, x4, ls  // ls = plast
   1e5f8:	subs	x3, x8, x0
   1e5fc:	cmp	x8, x0
   1e600:	sbc	x2, x2, xzr
   1e604:	adds	x3, x3, x7
   1e608:	cinc	x2, x2, cs  // cs = hs, nlast
   1e60c:	subs	x0, x3, x2
   1e610:	cmp	x3, x2
   1e614:	lsr	x3, x2, #32
   1e618:	lsl	x2, x2, #32
   1e61c:	sbc	x3, x3, xzr
   1e620:	adds	x2, x0, x2
   1e624:	b	1e560 <PyInit__decimal@@Base+0x3fe0>
   1e628:	sub	x25, x22, #0x1
   1e62c:	tst	x22, x25
   1e630:	b.ne	1ec18 <PyInit__decimal@@Base+0x4698>  // b.any
   1e634:	cmp	x22, #0x1, lsl #12
   1e638:	b.hi	1ec38 <PyInit__decimal@@Base+0x46b8>  // b.pmore
   1e63c:	adrp	x26, 1f000 <PyInit__decimal@@Base+0x4a80>
   1e640:	adrp	x3, 1f000 <PyInit__decimal@@Base+0x4a80>
   1e644:	add	x26, x26, #0x8c0
   1e648:	add	x3, x3, #0x848
   1e64c:	mov	w2, w23
   1e650:	mov	x1, x22
   1e654:	mov	x0, x20
   1e658:	blr	x3
   1e65c:	cbz	w0, 1e680 <PyInit__decimal@@Base+0x4100>
   1e660:	cbnz	x25, 1e494 <PyInit__decimal@@Base+0x3f14>
   1e664:	mov	w2, w23
   1e668:	mov	x0, x20
   1e66c:	mov	x1, #0x1                   	// #1
   1e670:	and	x24, x19, #0x100000000
   1e674:	mov	x22, #0xfffffffffffffffe    	// #-2
   1e678:	blr	x26
   1e67c:	cbnz	w0, 1e768 <PyInit__decimal@@Base+0x41e8>
   1e680:	mov	w0, #0x0                   	// #0
   1e684:	ldp	x19, x20, [sp, #16]
   1e688:	ldp	x21, x22, [sp, #32]
   1e68c:	ldp	x23, x24, [sp, #48]
   1e690:	ldp	x25, x26, [sp, #64]
   1e694:	ldp	x29, x30, [sp], #80
   1e698:	ret
   1e69c:	lsr	x3, x4, #24
   1e6a0:	lsl	x4, x4, #40
   1e6a4:	adds	x4, x4, x7
   1e6a8:	sub	x3, x3, x8
   1e6ac:	cinc	x3, x3, cs  // cs = hs, nlast
   1e6b0:	mul	x8, x0, x0
   1e6b4:	subs	x7, x4, x3
   1e6b8:	umulh	x0, x0, x0
   1e6bc:	cmp	x4, x3
   1e6c0:	lsr	x2, x3, #24
   1e6c4:	lsl	x3, x3, #40
   1e6c8:	sbc	x2, x2, xzr
   1e6cc:	adds	x7, x7, x3
   1e6d0:	lsl	x9, x0, #40
   1e6d4:	cinc	x2, x2, cs  // cs = hs, nlast
   1e6d8:	lsr	x3, x0, #24
   1e6dc:	subs	x4, x7, x2
   1e6e0:	cmp	x7, x2
   1e6e4:	lsr	x7, x2, #24
   1e6e8:	lsl	x2, x2, #40
   1e6ec:	sbc	x7, x7, xzr
   1e6f0:	adds	x2, x4, x2
   1e6f4:	cinc	x7, x7, cs  // cs = hs, nlast
   1e6f8:	sub	x4, x2, x19
   1e6fc:	cmp	x7, #0x0
   1e700:	ccmp	x19, x2, #0x0, eq  // eq = none
   1e704:	csel	x4, x4, x2, ls  // ls = plast
   1e708:	subs	x2, x8, x0
   1e70c:	cmp	x8, x0
   1e710:	sbc	x3, x3, xzr
   1e714:	adds	x0, x2, x9
   1e718:	cinc	x3, x3, cs  // cs = hs, nlast
   1e71c:	subs	x2, x0, x3
   1e720:	cmp	x0, x3
   1e724:	lsr	x0, x3, #24
   1e728:	lsl	x3, x3, #40
   1e72c:	sbc	x0, x0, xzr
   1e730:	adds	x3, x2, x3
   1e734:	cinc	x0, x0, cs  // cs = hs, nlast
   1e738:	subs	x2, x3, x0
   1e73c:	cmp	x3, x0
   1e740:	lsr	x3, x0, #24
   1e744:	lsl	x0, x0, #40
   1e748:	b	1e558 <PyInit__decimal@@Base+0x3fd8>
   1e74c:	mov	w2, w23
   1e750:	mov	x1, x22
   1e754:	mov	x0, x20
   1e758:	blr	x26
   1e75c:	cbz	w0, 1e680 <PyInit__decimal@@Base+0x4100>
   1e760:	subs	x22, x22, #0x3
   1e764:	b.eq	1ebfc <PyInit__decimal@@Base+0x467c>  // b.none
   1e768:	and	x6, x19, #0x400000000
   1e76c:	mov	x5, #0x0                   	// #0
   1e770:	b	1e930 <PyInit__decimal@@Base+0x43b0>
   1e774:	cbz	x6, 1ea74 <PyInit__decimal@@Base+0x44f4>
   1e778:	lsr	x4, x1, #30
   1e77c:	lsl	x1, x1, #34
   1e780:	adds	x1, x1, x8
   1e784:	sub	x4, x4, x9
   1e788:	cinc	x4, x4, cs  // cs = hs, nlast
   1e78c:	mul	x11, x3, x21
   1e790:	subs	x8, x1, x4
   1e794:	umulh	x3, x3, x21
   1e798:	cmp	x1, x4
   1e79c:	lsr	x7, x4, #30
   1e7a0:	lsl	x4, x4, #34
   1e7a4:	sbc	x7, x7, xzr
   1e7a8:	adds	x4, x8, x4
   1e7ac:	lsr	x1, x3, #30
   1e7b0:	cinc	x7, x7, cs  // cs = hs, nlast
   1e7b4:	lsl	x14, x3, #34
   1e7b8:	subs	x8, x4, x7
   1e7bc:	mul	x12, x2, x21
   1e7c0:	cmp	x4, x7
   1e7c4:	lsr	x9, x7, #30
   1e7c8:	lsl	x7, x7, #34
   1e7cc:	sbc	x9, x9, xzr
   1e7d0:	adds	x7, x8, x7
   1e7d4:	umulh	x2, x2, x21
   1e7d8:	cinc	x9, x9, cs  // cs = hs, nlast
   1e7dc:	sub	x8, x7, x19
   1e7e0:	cmp	x9, #0x0
   1e7e4:	mul	x10, x0, x21
   1e7e8:	ccmp	x19, x7, #0x0, eq  // eq = none
   1e7ec:	lsr	x9, x2, #30
   1e7f0:	csel	x8, x8, x7, ls  // ls = plast
   1e7f4:	subs	x4, x11, x3
   1e7f8:	cmp	x11, x3
   1e7fc:	lsl	x13, x2, #34
   1e800:	sbc	x1, x1, xzr
   1e804:	adds	x4, x4, x14
   1e808:	cinc	x1, x1, cs  // cs = hs, nlast
   1e80c:	umulh	x0, x0, x21
   1e810:	subs	x3, x4, x1
   1e814:	cmp	x4, x1
   1e818:	lsr	x4, x1, #30
   1e81c:	lsl	x1, x1, #34
   1e820:	sbc	x4, x4, xzr
   1e824:	adds	x3, x3, x1
   1e828:	lsl	x11, x0, #34
   1e82c:	cinc	x4, x4, cs  // cs = hs, nlast
   1e830:	lsr	x1, x0, #30
   1e834:	subs	x7, x3, x4
   1e838:	cmp	x3, x4
   1e83c:	lsr	x3, x4, #30
   1e840:	lsl	x4, x4, #34
   1e844:	sbc	x3, x3, xzr
   1e848:	adds	x4, x7, x4
   1e84c:	cinc	x3, x3, cs  // cs = hs, nlast
   1e850:	sub	x7, x4, x19
   1e854:	cmp	x3, #0x0
   1e858:	ccmp	x19, x4, #0x0, eq  // eq = none
   1e85c:	csel	x4, x7, x4, ls  // ls = plast
   1e860:	subs	x3, x12, x2
   1e864:	cmp	x12, x2
   1e868:	sbc	x9, x9, xzr
   1e86c:	adds	x2, x3, x13
   1e870:	cinc	x9, x9, cs  // cs = hs, nlast
   1e874:	subs	x7, x2, x9
   1e878:	cmp	x2, x9
   1e87c:	lsl	x3, x9, #34
   1e880:	lsr	x2, x9, #30
   1e884:	sbc	x2, x2, xzr
   1e888:	adds	x7, x7, x3
   1e88c:	cinc	x2, x2, cs  // cs = hs, nlast
   1e890:	subs	x3, x7, x2
   1e894:	cmp	x7, x2
   1e898:	lsr	x7, x2, #30
   1e89c:	lsl	x2, x2, #34
   1e8a0:	sbc	x7, x7, xzr
   1e8a4:	adds	x2, x3, x2
   1e8a8:	cinc	x7, x7, cs  // cs = hs, nlast
   1e8ac:	sub	x3, x2, x19
   1e8b0:	cmp	x7, #0x0
   1e8b4:	ccmp	x19, x2, #0x0, eq  // eq = none
   1e8b8:	csel	x3, x3, x2, ls  // ls = plast
   1e8bc:	subs	x2, x10, x0
   1e8c0:	cmp	x10, x0
   1e8c4:	sbc	x1, x1, xzr
   1e8c8:	adds	x0, x2, x11
   1e8cc:	cinc	x1, x1, cs  // cs = hs, nlast
   1e8d0:	subs	x2, x0, x1
   1e8d4:	cmp	x0, x1
   1e8d8:	lsr	x0, x1, #30
   1e8dc:	lsl	x1, x1, #34
   1e8e0:	sbc	x0, x0, xzr
   1e8e4:	adds	x1, x2, x1
   1e8e8:	cinc	x0, x0, cs  // cs = hs, nlast
   1e8ec:	subs	x2, x1, x0
   1e8f0:	cmp	x1, x0
   1e8f4:	lsr	x1, x0, #30
   1e8f8:	lsl	x0, x0, #34
   1e8fc:	sbc	x1, x1, xzr
   1e900:	adds	x2, x2, x0
   1e904:	cinc	x1, x1, cs  // cs = hs, nlast
   1e908:	sub	x0, x2, x19
   1e90c:	cmp	x1, #0x0
   1e910:	stp	x8, x4, [x20]
   1e914:	ccmp	x19, x2, #0x0, eq  // eq = none
   1e918:	csel	x0, x0, x2, ls  // ls = plast
   1e91c:	stp	x3, x0, [x20, #16]
   1e920:	add	x5, x5, #0x4
   1e924:	cmp	x5, x22
   1e928:	add	x20, x20, #0x20
   1e92c:	b.cs	1ebfc <PyInit__decimal@@Base+0x467c>  // b.hs, b.nlast
   1e930:	ldp	x1, x3, [x20]
   1e934:	ldr	x2, [x20, #16]
   1e938:	mul	x0, x21, x1
   1e93c:	umulh	x1, x21, x1
   1e940:	subs	x8, x0, x1
   1e944:	cmp	x0, x1
   1e948:	cset	x9, cc  // cc = lo, ul, last
   1e94c:	ldr	x0, [x20, #24]
   1e950:	cbz	x24, 1e774 <PyInit__decimal@@Base+0x41f4>
   1e954:	lsr	x4, x1, #32
   1e958:	lsl	x1, x1, #32
   1e95c:	adds	x1, x1, x8
   1e960:	sub	x4, x4, x9
   1e964:	cinc	x4, x4, cs  // cs = hs, nlast
   1e968:	mul	x9, x3, x21
   1e96c:	subs	x8, x1, x4
   1e970:	umulh	x3, x3, x21
   1e974:	cmp	x1, x4
   1e978:	lsr	x1, x4, #32
   1e97c:	lsl	x4, x4, #32
   1e980:	sbc	x1, x1, xzr
   1e984:	adds	x7, x8, x4
   1e988:	lsl	x10, x3, #32
   1e98c:	cinc	x1, x1, cs  // cs = hs, nlast
   1e990:	sub	x8, x7, x19
   1e994:	cmp	x1, #0x0
   1e998:	lsr	x4, x3, #32
   1e99c:	ccmp	x19, x7, #0x0, eq  // eq = none
   1e9a0:	mul	x11, x2, x21
   1e9a4:	csel	x8, x8, x7, ls  // ls = plast
   1e9a8:	subs	x1, x9, x3
   1e9ac:	cmp	x9, x3
   1e9b0:	umulh	x2, x2, x21
   1e9b4:	sbc	x4, x4, xzr
   1e9b8:	adds	x1, x1, x10
   1e9bc:	cinc	x4, x4, cs  // cs = hs, nlast
   1e9c0:	mul	x10, x0, x21
   1e9c4:	subs	x7, x1, x4
   1e9c8:	lsr	x3, x2, #32
   1e9cc:	cmp	x1, x4
   1e9d0:	lsr	x1, x4, #32
   1e9d4:	lsl	x4, x4, #32
   1e9d8:	sbc	x1, x1, xzr
   1e9dc:	adds	x4, x7, x4
   1e9e0:	lsl	x12, x2, #32
   1e9e4:	cinc	x1, x1, cs  // cs = hs, nlast
   1e9e8:	sub	x7, x4, x19
   1e9ec:	cmp	x1, #0x0
   1e9f0:	umulh	x0, x0, x21
   1e9f4:	ccmp	x19, x4, #0x0, eq  // eq = none
   1e9f8:	csel	x4, x7, x4, ls  // ls = plast
   1e9fc:	subs	x9, x11, x2
   1ea00:	cmp	x11, x2
   1ea04:	lsr	x2, x0, #32
   1ea08:	sbc	x3, x3, xzr
   1ea0c:	adds	x9, x9, x12
   1ea10:	cinc	x3, x3, cs  // cs = hs, nlast
   1ea14:	lsl	x11, x0, #32
   1ea18:	subs	x7, x9, x3
   1ea1c:	cmp	x9, x3
   1ea20:	lsr	x9, x3, #32
   1ea24:	lsl	x3, x3, #32
   1ea28:	sbc	x9, x9, xzr
   1ea2c:	adds	x3, x7, x3
   1ea30:	cinc	x9, x9, cs  // cs = hs, nlast
   1ea34:	sub	x1, x3, x19
   1ea38:	cmp	x9, #0x0
   1ea3c:	ccmp	x19, x3, #0x0, eq  // eq = none
   1ea40:	csel	x3, x1, x3, ls  // ls = plast
   1ea44:	subs	x1, x10, x0
   1ea48:	cmp	x10, x0
   1ea4c:	sbc	x2, x2, xzr
   1ea50:	adds	x1, x1, x11
   1ea54:	cinc	x2, x2, cs  // cs = hs, nlast
   1ea58:	subs	x0, x1, x2
   1ea5c:	cmp	x1, x2
   1ea60:	lsr	x1, x2, #32
   1ea64:	lsl	x2, x2, #32
   1ea68:	sbc	x1, x1, xzr
   1ea6c:	adds	x2, x0, x2
   1ea70:	b	1e904 <PyInit__decimal@@Base+0x4384>
   1ea74:	lsr	x7, x1, #24
   1ea78:	lsl	x1, x1, #40
   1ea7c:	adds	x1, x1, x8
   1ea80:	sub	x7, x7, x9
   1ea84:	cinc	x7, x7, cs  // cs = hs, nlast
   1ea88:	mul	x11, x3, x21
   1ea8c:	subs	x8, x1, x7
   1ea90:	umulh	x3, x3, x21
   1ea94:	cmp	x1, x7
   1ea98:	lsr	x4, x7, #24
   1ea9c:	lsl	x7, x7, #40
   1eaa0:	sbc	x4, x4, xzr
   1eaa4:	adds	x7, x8, x7
   1eaa8:	lsr	x1, x3, #24
   1eaac:	cinc	x4, x4, cs  // cs = hs, nlast
   1eab0:	lsl	x14, x3, #40
   1eab4:	subs	x8, x7, x4
   1eab8:	mul	x12, x2, x21
   1eabc:	cmp	x7, x4
   1eac0:	lsr	x7, x4, #24
   1eac4:	lsl	x4, x4, #40
   1eac8:	sbc	x7, x7, xzr
   1eacc:	adds	x4, x8, x4
   1ead0:	umulh	x2, x2, x21
   1ead4:	cinc	x7, x7, cs  // cs = hs, nlast
   1ead8:	sub	x8, x4, x19
   1eadc:	cmp	x7, #0x0
   1eae0:	mul	x10, x0, x21
   1eae4:	ccmp	x19, x4, #0x0, eq  // eq = none
   1eae8:	lsr	x9, x2, #24
   1eaec:	csel	x8, x8, x4, ls  // ls = plast
   1eaf0:	subs	x4, x11, x3
   1eaf4:	cmp	x11, x3
   1eaf8:	lsl	x13, x2, #40
   1eafc:	sbc	x1, x1, xzr
   1eb00:	adds	x4, x4, x14
   1eb04:	cinc	x1, x1, cs  // cs = hs, nlast
   1eb08:	umulh	x0, x0, x21
   1eb0c:	subs	x3, x4, x1
   1eb10:	cmp	x4, x1
   1eb14:	lsr	x7, x1, #24
   1eb18:	lsl	x1, x1, #40
   1eb1c:	sbc	x7, x7, xzr
   1eb20:	adds	x3, x3, x1
   1eb24:	lsl	x11, x0, #40
   1eb28:	cinc	x7, x7, cs  // cs = hs, nlast
   1eb2c:	lsr	x1, x0, #24
   1eb30:	subs	x4, x3, x7
   1eb34:	cmp	x3, x7
   1eb38:	lsr	x3, x7, #24
   1eb3c:	lsl	x7, x7, #40
   1eb40:	sbc	x3, x3, xzr
   1eb44:	adds	x7, x4, x7
   1eb48:	cinc	x3, x3, cs  // cs = hs, nlast
   1eb4c:	sub	x4, x7, x19
   1eb50:	cmp	x3, #0x0
   1eb54:	ccmp	x19, x7, #0x0, eq  // eq = none
   1eb58:	csel	x4, x4, x7, ls  // ls = plast
   1eb5c:	subs	x3, x12, x2
   1eb60:	cmp	x12, x2
   1eb64:	sbc	x9, x9, xzr
   1eb68:	adds	x2, x3, x13
   1eb6c:	cinc	x9, x9, cs  // cs = hs, nlast
   1eb70:	subs	x7, x2, x9
   1eb74:	cmp	x2, x9
   1eb78:	lsl	x3, x9, #40
   1eb7c:	lsr	x2, x9, #24
   1eb80:	sbc	x2, x2, xzr
   1eb84:	adds	x7, x7, x3
   1eb88:	cinc	x2, x2, cs  // cs = hs, nlast
   1eb8c:	subs	x3, x7, x2
   1eb90:	cmp	x7, x2
   1eb94:	lsr	x7, x2, #24
   1eb98:	lsl	x2, x2, #40
   1eb9c:	sbc	x7, x7, xzr
   1eba0:	adds	x2, x3, x2
   1eba4:	cinc	x7, x7, cs  // cs = hs, nlast
   1eba8:	sub	x3, x2, x19
   1ebac:	cmp	x7, #0x0
   1ebb0:	ccmp	x19, x2, #0x0, eq  // eq = none
   1ebb4:	csel	x3, x3, x2, ls  // ls = plast
   1ebb8:	subs	x2, x10, x0
   1ebbc:	cmp	x10, x0
   1ebc0:	sbc	x1, x1, xzr
   1ebc4:	adds	x0, x2, x11
   1ebc8:	cinc	x1, x1, cs  // cs = hs, nlast
   1ebcc:	subs	x2, x0, x1
   1ebd0:	cmp	x0, x1
   1ebd4:	lsr	x0, x1, #24
   1ebd8:	lsl	x1, x1, #40
   1ebdc:	sbc	x0, x0, xzr
   1ebe0:	adds	x1, x2, x1
   1ebe4:	cinc	x0, x0, cs  // cs = hs, nlast
   1ebe8:	subs	x2, x1, x0
   1ebec:	cmp	x1, x0
   1ebf0:	lsr	x1, x0, #24
   1ebf4:	lsl	x0, x0, #40
   1ebf8:	b	1e8fc <PyInit__decimal@@Base+0x437c>
   1ebfc:	mov	w0, #0x1                   	// #1
   1ec00:	ldp	x19, x20, [sp, #16]
   1ec04:	ldp	x21, x22, [sp, #32]
   1ec08:	ldp	x23, x24, [sp, #48]
   1ec0c:	ldp	x25, x26, [sp, #64]
   1ec10:	ldp	x29, x30, [sp], #80
   1ec14:	ret
   1ec18:	mov	w2, w23
   1ec1c:	mov	x1, x22
   1ec20:	mov	x0, x20
   1ec24:	bl	1f938 <PyInit__decimal@@Base+0x53b8>
   1ec28:	cbz	w0, 1e680 <PyInit__decimal@@Base+0x4100>
   1ec2c:	adrp	x26, 20000 <PyInit__decimal@@Base+0x5a80>
   1ec30:	add	x26, x26, #0x6e0
   1ec34:	b	1e494 <PyInit__decimal@@Base+0x3f14>
   1ec38:	adrp	x26, 39000 <PyInit__decimal@@Base+0x1ea80>
   1ec3c:	adrp	x3, 39000 <PyInit__decimal@@Base+0x1ea80>
   1ec40:	add	x26, x26, #0xfc0
   1ec44:	add	x3, x3, #0x578
   1ec48:	b	1e64c <PyInit__decimal@@Base+0x40cc>
   1ec4c:	nop
   1ec50:	stp	x29, x30, [sp, #-224]!
   1ec54:	adrp	x4, 42000 <PyInit__decimal@@Base+0x27a80>
   1ec58:	mov	x29, sp
   1ec5c:	stp	x1, x2, [sp, #136]
   1ec60:	ldr	x1, [x4, #1448]
   1ec64:	str	x1, [sp, #128]
   1ec68:	str	x3, [sp, #152]
   1ec6c:	cbz	x3, 1f09c <PyInit__decimal@@Base+0x4b1c>
   1ec70:	stp	x23, x24, [sp, #48]
   1ec74:	mov	x23, x0
   1ec78:	add	x0, x4, #0x5a8
   1ec7c:	stp	x25, x26, [sp, #64]
   1ec80:	adrp	x4, 42000 <PyInit__decimal@@Base+0x27a80>
   1ec84:	adrp	x3, 42000 <PyInit__decimal@@Base+0x27a80>
   1ec88:	stp	x27, x28, [sp, #80]
   1ec8c:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27a80>
   1ec90:	adrp	x1, 42000 <PyInit__decimal@@Base+0x27a80>
   1ec94:	ldp	x27, x26, [x0, #8]
   1ec98:	stp	x21, x22, [sp, #32]
   1ec9c:	mov	x21, #0x89e80000            	// #2313682944
   1eca0:	mov	x25, #0x0                   	// #0
   1eca4:	mov	x24, #0x0                   	// #0
   1eca8:	movk	x21, #0x2304, lsl #32
   1ecac:	mov	x22, #0x0                   	// #0
   1ecb0:	movk	x21, #0x8ac7, lsl #48
   1ecb4:	stp	x19, x20, [sp, #16]
   1ecb8:	and	x0, x27, #0x100000000
   1ecbc:	str	x0, [sp, #192]
   1ecc0:	mov	x20, #0x0                   	// #0
   1ecc4:	ldr	x0, [x4, #1416]
   1ecc8:	str	x0, [sp, #160]
   1eccc:	and	x0, x27, #0x400000000
   1ecd0:	str	x0, [sp, #208]
   1ecd4:	ldr	x0, [x3, #1408]
   1ecd8:	str	x0, [sp, #168]
   1ecdc:	and	x0, x26, #0x100000000
   1ece0:	str	x0, [sp, #200]
   1ece4:	ldr	x0, [x2, #1400]
   1ece8:	str	x0, [sp, #176]
   1ecec:	and	x0, x26, #0x400000000
   1ecf0:	str	x0, [sp, #216]
   1ecf4:	ldr	x0, [x1, #1392]
   1ecf8:	str	x0, [sp, #184]
   1ecfc:	mov	x0, x23
   1ed00:	mov	x19, #0x0                   	// #0
   1ed04:	mov	x23, x24
   1ed08:	mov	x24, x27
   1ed0c:	mov	x27, x26
   1ed10:	mov	x26, x25
   1ed14:	mov	x25, x0
   1ed18:	b	1ef24 <PyInit__decimal@@Base+0x49a4>
   1ed1c:	ldr	x1, [sp, #208]
   1ed20:	cbz	x1, 1f000 <PyInit__decimal@@Base+0x4a80>
   1ed24:	lsr	x1, x0, #30
   1ed28:	lsl	x0, x0, #34
   1ed2c:	adds	x0, x0, x2
   1ed30:	sub	x1, x1, x3
   1ed34:	cinc	x1, x1, cs  // cs = hs, nlast
   1ed38:	subs	x2, x0, x1
   1ed3c:	cmp	x0, x1
   1ed40:	lsr	x0, x1, #30
   1ed44:	lsl	x1, x1, #34
   1ed48:	sbc	x0, x0, xzr
   1ed4c:	adds	x1, x2, x1
   1ed50:	cinc	x0, x0, cs  // cs = hs, nlast
   1ed54:	subs	x5, x1, x0
   1ed58:	cmp	x1, x0
   1ed5c:	lsr	x1, x0, #30
   1ed60:	lsl	x0, x0, #34
   1ed64:	sbc	x1, x1, xzr
   1ed68:	adds	x0, x5, x0
   1ed6c:	cinc	x1, x1, cs  // cs = hs, nlast
   1ed70:	sub	x5, x0, x24
   1ed74:	cmp	x1, #0x0
   1ed78:	ccmp	x24, x0, #0x0, eq  // eq = none
   1ed7c:	csel	x5, x5, x0, ls  // ls = plast
   1ed80:	ldr	x1, [sp, #128]
   1ed84:	mov	x2, x27
   1ed88:	mov	x3, #0x0                   	// #0
   1ed8c:	str	x10, [sp, #120]
   1ed90:	mul	x0, x5, x1
   1ed94:	umulh	x5, x5, x1
   1ed98:	adds	x28, x4, x0
   1ed9c:	cinc	x5, x5, cs  // cs = hs, nlast
   1eda0:	adds	x11, x19, x28
   1eda4:	mov	x0, x11
   1eda8:	stp	x5, x11, [sp, #104]
   1edac:	udiv	x1, x5, x27
   1edb0:	msub	x1, x1, x27, x5
   1edb4:	bl	3b538 <PyInit__decimal@@Base+0x20fb8>
   1edb8:	mul	x0, x27, x0
   1edbc:	ldp	x5, x11, [sp, #104]
   1edc0:	ldr	x10, [sp, #120]
   1edc4:	ldr	x2, [sp, #168]
   1edc8:	sub	x1, x10, x11
   1edcc:	sub	x11, x11, x0
   1edd0:	add	x1, x1, x0
   1edd4:	cmp	x10, x11
   1edd8:	add	x0, x1, x27
   1eddc:	csel	x1, x0, x1, cc  // cc = lo, ul, last
   1ede0:	mul	x0, x1, x2
   1ede4:	umulh	x1, x1, x2
   1ede8:	subs	x3, x0, x1
   1edec:	cmp	x0, x1
   1edf0:	ldr	x0, [sp, #200]
   1edf4:	cset	x10, cc  // cc = lo, ul, last
   1edf8:	cbnz	x0, 1efbc <PyInit__decimal@@Base+0x4a3c>
   1edfc:	ldr	x0, [sp, #216]
   1ee00:	cbz	x0, 1f044 <PyInit__decimal@@Base+0x4ac4>
   1ee04:	lsr	x0, x1, #30
   1ee08:	lsl	x1, x1, #34
   1ee0c:	adds	x1, x1, x3
   1ee10:	sub	x0, x0, x10
   1ee14:	cinc	x0, x0, cs  // cs = hs, nlast
   1ee18:	subs	x2, x1, x0
   1ee1c:	cmp	x1, x0
   1ee20:	lsr	x1, x0, #30
   1ee24:	lsl	x0, x0, #34
   1ee28:	sbc	x1, x1, xzr
   1ee2c:	adds	x2, x2, x0
   1ee30:	cinc	x1, x1, cs  // cs = hs, nlast
   1ee34:	subs	x0, x2, x1
   1ee38:	cmp	x2, x1
   1ee3c:	lsr	x2, x1, #30
   1ee40:	lsl	x1, x1, #34
   1ee44:	sbc	x2, x2, xzr
   1ee48:	adds	x1, x0, x1
   1ee4c:	cinc	x2, x2, cs  // cs = hs, nlast
   1ee50:	sub	x0, x1, x27
   1ee54:	cmp	x2, #0x0
   1ee58:	ccmp	x27, x1, #0x0, eq  // eq = none
   1ee5c:	csel	x0, x0, x1, ls  // ls = plast
   1ee60:	ldp	x4, x1, [sp, #176]
   1ee64:	mul	x3, x0, x1
   1ee68:	umulh	x2, x4, x0
   1ee6c:	umulh	x1, x0, x1
   1ee70:	mul	x0, x4, x0
   1ee74:	adds	x2, x2, x3
   1ee78:	adc	x3, x22, x1
   1ee7c:	mov	x22, #0x0                   	// #0
   1ee80:	adds	x4, x28, x0
   1ee84:	adc	x2, x5, x2
   1ee88:	adds	x28, x4, x26
   1ee8c:	cinc	x0, x2, cs  // cs = hs, nlast
   1ee90:	adds	x20, x20, x0
   1ee94:	mov	x0, #0xffffffff89e7ffff    	// #-1981284353
   1ee98:	cset	x1, cs  // cs = hs, nlast
   1ee9c:	cmp	x2, x5
   1eea0:	cinc	x1, x1, cc  // cc = lo, ul, last
   1eea4:	movk	x0, #0x2304, lsl #32
   1eea8:	add	x1, x1, x3
   1eeac:	movk	x0, #0x8ac7, lsl #48
   1eeb0:	cmp	x1, x0
   1eeb4:	b.ls	1eec8 <PyInit__decimal@@Base+0x4948>  // b.plast
   1eeb8:	cmp	x1, x21
   1eebc:	mov	x22, #0x1                   	// #1
   1eec0:	cset	x0, cs  // cs = hs, nlast
   1eec4:	msub	x1, x0, x21, x1
   1eec8:	adds	x26, x19, x20
   1eecc:	mov	x2, #0x89e80000            	// #2313682944
   1eed0:	movk	x2, #0x2304, lsl #32
   1eed4:	mov	x0, x26
   1eed8:	movk	x2, #0x8ac7, lsl #48
   1eedc:	mov	x3, #0x0                   	// #0
   1eee0:	bl	3b538 <PyInit__decimal@@Base+0x20fb8>
   1eee4:	mov	x20, x0
   1eee8:	adds	x28, x19, x28
   1eeec:	mov	x2, #0x89e80000            	// #2313682944
   1eef0:	movk	x2, #0x2304, lsl #32
   1eef4:	mov	x0, x28
   1eef8:	msub	x1, x20, x21, x26
   1eefc:	movk	x2, #0x8ac7, lsl #48
   1ef00:	mov	x3, #0x0                   	// #0
   1ef04:	bl	3b538 <PyInit__decimal@@Base+0x20fb8>
   1ef08:	msub	x10, x0, x21, x28
   1ef0c:	mov	x26, x0
   1ef10:	str	x10, [x25, x23, lsl #3]
   1ef14:	ldr	x0, [sp, #152]
   1ef18:	add	x23, x23, #0x1
   1ef1c:	cmp	x0, x23
   1ef20:	b.eq	1f088 <PyInit__decimal@@Base+0x4b08>  // b.none
   1ef24:	ldr	x0, [sp, #136]
   1ef28:	ldr	x4, [x25, x23, lsl #3]
   1ef2c:	ldr	x1, [x0, x23, lsl #3]
   1ef30:	sub	x2, x4, x24
   1ef34:	subs	x0, x1, x24
   1ef38:	csel	x1, x0, x1, cs  // cs = hs, nlast
   1ef3c:	cmp	x4, x24
   1ef40:	csel	x2, x2, x4, cs  // cs = hs, nlast
   1ef44:	subs	x0, x1, x2
   1ef48:	add	x1, x0, x24
   1ef4c:	csel	x0, x1, x0, cc  // cc = lo, ul, last
   1ef50:	ldr	x1, [sp, #144]
   1ef54:	ldr	x2, [sp, #160]
   1ef58:	ldr	x10, [x1, x23, lsl #3]
   1ef5c:	mul	x1, x0, x2
   1ef60:	umulh	x0, x0, x2
   1ef64:	subs	x2, x1, x0
   1ef68:	cmp	x1, x0
   1ef6c:	ldr	x1, [sp, #192]
   1ef70:	cset	x3, cc  // cc = lo, ul, last
   1ef74:	cbz	x1, 1ed1c <PyInit__decimal@@Base+0x479c>
   1ef78:	lsr	x1, x0, #32
   1ef7c:	lsl	x0, x0, #32
   1ef80:	adds	x0, x0, x2
   1ef84:	sub	x1, x1, x3
   1ef88:	cinc	x1, x1, cs  // cs = hs, nlast
   1ef8c:	subs	x5, x0, x1
   1ef90:	cmp	x0, x1
   1ef94:	lsr	x0, x1, #32
   1ef98:	lsl	x1, x1, #32
   1ef9c:	sbc	x0, x0, xzr
   1efa0:	adds	x1, x5, x1
   1efa4:	cinc	x0, x0, cs  // cs = hs, nlast
   1efa8:	sub	x5, x1, x24
   1efac:	cmp	x0, #0x0
   1efb0:	ccmp	x24, x1, #0x0, eq  // eq = none
   1efb4:	csel	x5, x5, x1, ls  // ls = plast
   1efb8:	b	1ed80 <PyInit__decimal@@Base+0x4800>
   1efbc:	lsr	x2, x1, #32
   1efc0:	lsl	x1, x1, #32
   1efc4:	adds	x1, x1, x3
   1efc8:	sub	x2, x2, x10
   1efcc:	cinc	x2, x2, cs  // cs = hs, nlast
   1efd0:	subs	x0, x1, x2
   1efd4:	cmp	x1, x2
   1efd8:	lsr	x1, x2, #32
   1efdc:	lsl	x2, x2, #32
   1efe0:	sbc	x1, x1, xzr
   1efe4:	adds	x2, x0, x2
   1efe8:	cinc	x1, x1, cs  // cs = hs, nlast
   1efec:	sub	x0, x2, x27
   1eff0:	cmp	x1, #0x0
   1eff4:	ccmp	x27, x2, #0x0, eq  // eq = none
   1eff8:	csel	x0, x0, x2, ls  // ls = plast
   1effc:	b	1ee60 <PyInit__decimal@@Base+0x48e0>
   1f000:	lsr	x1, x0, #24
   1f004:	lsl	x0, x0, #40
   1f008:	adds	x0, x0, x2
   1f00c:	sub	x1, x1, x3
   1f010:	cinc	x1, x1, cs  // cs = hs, nlast
   1f014:	subs	x2, x0, x1
   1f018:	cmp	x0, x1
   1f01c:	lsr	x0, x1, #24
   1f020:	lsl	x1, x1, #40
   1f024:	sbc	x0, x0, xzr
   1f028:	adds	x1, x2, x1
   1f02c:	cinc	x0, x0, cs  // cs = hs, nlast
   1f030:	subs	x5, x1, x0
   1f034:	cmp	x1, x0
   1f038:	lsr	x1, x0, #24
   1f03c:	lsl	x0, x0, #40
   1f040:	b	1ed64 <PyInit__decimal@@Base+0x47e4>
   1f044:	lsr	x0, x1, #24
   1f048:	lsl	x1, x1, #40
   1f04c:	adds	x1, x1, x3
   1f050:	sub	x0, x0, x10
   1f054:	cinc	x0, x0, cs  // cs = hs, nlast
   1f058:	subs	x2, x1, x0
   1f05c:	cmp	x1, x0
   1f060:	lsr	x1, x0, #24
   1f064:	lsl	x0, x0, #40
   1f068:	sbc	x1, x1, xzr
   1f06c:	adds	x2, x2, x0
   1f070:	cinc	x1, x1, cs  // cs = hs, nlast
   1f074:	subs	x0, x2, x1
   1f078:	cmp	x2, x1
   1f07c:	lsr	x2, x1, #24
   1f080:	lsl	x1, x1, #40
   1f084:	b	1ee44 <PyInit__decimal@@Base+0x48c4>
   1f088:	ldp	x19, x20, [sp, #16]
   1f08c:	ldp	x21, x22, [sp, #32]
   1f090:	ldp	x23, x24, [sp, #48]
   1f094:	ldp	x25, x26, [sp, #64]
   1f098:	ldp	x27, x28, [sp, #80]
   1f09c:	ldp	x29, x30, [sp], #224
   1f0a0:	ret
   1f0a4:	nop
   1f0a8:	stp	x29, x30, [sp, #-80]!
   1f0ac:	mov	x13, x1
   1f0b0:	cmp	xzr, x1, lsr #1
   1f0b4:	mov	x29, sp
   1f0b8:	stp	x21, x22, [sp, #32]
   1f0bc:	mov	x22, x2
   1f0c0:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27a80>
   1f0c4:	add	x2, x2, #0x5a8
   1f0c8:	mov	x17, x0
   1f0cc:	ldrsw	x1, [x22]
   1f0d0:	ldr	x1, [x2, x1, lsl #3]
   1f0d4:	b.eq	1f3a0 <PyInit__decimal@@Base+0x4e20>  // b.none
   1f0d8:	lsr	x9, x13, #1
   1f0dc:	and	x15, x1, #0x100000000
   1f0e0:	add	x12, x22, #0x18
   1f0e4:	add	x11, x22, #0x20
   1f0e8:	lsl	x10, x9, #3
   1f0ec:	add	x21, x0, #0x8
   1f0f0:	add	x7, x0, x10
   1f0f4:	and	x14, x1, #0x400000000
   1f0f8:	mov	x2, #0x0                   	// #0
   1f0fc:	stp	x19, x20, [sp, #16]
   1f100:	b	1f1e4 <PyInit__decimal@@Base+0x4c64>
   1f104:	cbz	x14, 1f2e4 <PyInit__decimal@@Base+0x4d64>
   1f108:	lsr	x3, x0, #30
   1f10c:	lsl	x0, x0, #34
   1f110:	adds	x0, x0, x4
   1f114:	sub	x3, x3, x8
   1f118:	cinc	x3, x3, cs  // cs = hs, nlast
   1f11c:	mul	x16, x5, x6
   1f120:	subs	x8, x0, x3
   1f124:	umulh	x5, x5, x6
   1f128:	cmp	x0, x3
   1f12c:	lsr	x0, x3, #30
   1f130:	lsl	x3, x3, #34
   1f134:	sbc	x0, x0, xzr
   1f138:	adds	x8, x8, x3
   1f13c:	lsl	x18, x5, #34
   1f140:	cinc	x0, x0, cs  // cs = hs, nlast
   1f144:	lsr	x3, x5, #30
   1f148:	subs	x4, x8, x0
   1f14c:	cmp	x8, x0
   1f150:	lsr	x6, x0, #30
   1f154:	lsl	x0, x0, #34
   1f158:	sbc	x6, x6, xzr
   1f15c:	adds	x0, x4, x0
   1f160:	cinc	x6, x6, cs  // cs = hs, nlast
   1f164:	sub	x4, x0, x1
   1f168:	cmp	x6, #0x0
   1f16c:	ccmp	x1, x0, #0x0, eq  // eq = none
   1f170:	csel	x4, x4, x0, ls  // ls = plast
   1f174:	subs	x0, x16, x5
   1f178:	cmp	x16, x5
   1f17c:	sbc	x3, x3, xzr
   1f180:	adds	x0, x0, x18
   1f184:	cinc	x3, x3, cs  // cs = hs, nlast
   1f188:	subs	x5, x0, x3
   1f18c:	cmp	x0, x3
   1f190:	lsr	x0, x3, #30
   1f194:	lsl	x3, x3, #34
   1f198:	sbc	x0, x0, xzr
   1f19c:	adds	x5, x5, x3
   1f1a0:	cinc	x0, x0, cs  // cs = hs, nlast
   1f1a4:	subs	x3, x5, x0
   1f1a8:	cmp	x5, x0
   1f1ac:	lsr	x5, x0, #30
   1f1b0:	lsl	x0, x0, #34
   1f1b4:	sbc	x5, x5, xzr
   1f1b8:	adds	x3, x3, x0
   1f1bc:	cinc	x5, x5, cs  // cs = hs, nlast
   1f1c0:	sub	x0, x3, x1
   1f1c4:	cmp	x5, #0x0
   1f1c8:	add	x2, x2, #0x2
   1f1cc:	ccmp	x1, x3, #0x0, eq  // eq = none
   1f1d0:	csel	x0, x0, x3, ls  // ls = plast
   1f1d4:	stp	x4, x0, [x7]
   1f1d8:	cmp	x9, x2
   1f1dc:	add	x7, x7, #0x10
   1f1e0:	b.ls	1f484 <PyInit__decimal@@Base+0x4f04>  // b.plast
   1f1e4:	ldr	x5, [x17, x2, lsl #3]
   1f1e8:	ldr	x3, [x7]
   1f1ec:	ldr	x8, [x21, x2, lsl #3]
   1f1f0:	adds	x4, x3, x5
   1f1f4:	sub	x6, x4, x1
   1f1f8:	sub	x0, x5, x3
   1f1fc:	csel	x4, x6, x4, cs  // cs = hs, nlast
   1f200:	add	x16, x0, x1
   1f204:	ldr	x6, [x7, #8]
   1f208:	cmp	x1, x4
   1f20c:	sub	x18, x4, x1
   1f210:	csel	x4, x18, x4, ls  // ls = plast
   1f214:	cmp	x3, x5
   1f218:	ldr	x18, [x12, x2, lsl #3]
   1f21c:	csel	x0, x16, x0, hi  // hi = pmore
   1f220:	adds	x16, x6, x8
   1f224:	sub	x5, x8, x6
   1f228:	sub	x3, x16, x1
   1f22c:	add	x19, x5, x1
   1f230:	csel	x3, x3, x16, cs  // cs = hs, nlast
   1f234:	mul	x16, x0, x18
   1f238:	cmp	x1, x3
   1f23c:	umulh	x0, x0, x18
   1f240:	sub	x20, x3, x1
   1f244:	csel	x3, x20, x3, ls  // ls = plast
   1f248:	cmp	x6, x8
   1f24c:	ldr	x6, [x11, x2, lsl #3]
   1f250:	str	x4, [x17, x2, lsl #3]
   1f254:	csel	x5, x19, x5, hi  // hi = pmore
   1f258:	subs	x4, x16, x0
   1f25c:	str	x3, [x21, x2, lsl #3]
   1f260:	cmp	x16, x0
   1f264:	cset	x8, cc  // cc = lo, ul, last
   1f268:	cbz	x15, 1f104 <PyInit__decimal@@Base+0x4b84>
   1f26c:	lsr	x3, x0, #32
   1f270:	lsl	x0, x0, #32
   1f274:	adds	x0, x0, x4
   1f278:	sub	x3, x3, x8
   1f27c:	cinc	x3, x3, cs  // cs = hs, nlast
   1f280:	mul	x8, x5, x6
   1f284:	subs	x4, x0, x3
   1f288:	umulh	x5, x5, x6
   1f28c:	cmp	x0, x3
   1f290:	lsr	x6, x3, #32
   1f294:	lsl	x3, x3, #32
   1f298:	sbc	x6, x6, xzr
   1f29c:	adds	x3, x4, x3
   1f2a0:	lsr	x0, x5, #32
   1f2a4:	cinc	x6, x6, cs  // cs = hs, nlast
   1f2a8:	sub	x4, x3, x1
   1f2ac:	cmp	x6, #0x0
   1f2b0:	lsl	x6, x5, #32
   1f2b4:	ccmp	x1, x3, #0x0, eq  // eq = none
   1f2b8:	csel	x4, x4, x3, ls  // ls = plast
   1f2bc:	subs	x3, x8, x5
   1f2c0:	cmp	x8, x5
   1f2c4:	sbc	x0, x0, xzr
   1f2c8:	adds	x5, x3, x6
   1f2cc:	cinc	x0, x0, cs  // cs = hs, nlast
   1f2d0:	subs	x3, x5, x0
   1f2d4:	cmp	x5, x0
   1f2d8:	lsr	x5, x0, #32
   1f2dc:	lsl	x0, x0, #32
   1f2e0:	b	1f1b4 <PyInit__decimal@@Base+0x4c34>
   1f2e4:	lsr	x3, x0, #24
   1f2e8:	lsl	x0, x0, #40
   1f2ec:	adds	x0, x0, x4
   1f2f0:	sub	x3, x3, x8
   1f2f4:	cinc	x3, x3, cs  // cs = hs, nlast
   1f2f8:	mul	x8, x5, x6
   1f2fc:	subs	x4, x0, x3
   1f300:	umulh	x5, x5, x6
   1f304:	cmp	x0, x3
   1f308:	lsr	x0, x3, #24
   1f30c:	lsl	x3, x3, #40
   1f310:	sbc	x0, x0, xzr
   1f314:	adds	x6, x4, x3
   1f318:	lsl	x16, x5, #40
   1f31c:	cinc	x0, x0, cs  // cs = hs, nlast
   1f320:	lsr	x3, x5, #24
   1f324:	subs	x4, x6, x0
   1f328:	cmp	x6, x0
   1f32c:	lsr	x6, x0, #24
   1f330:	lsl	x0, x0, #40
   1f334:	sbc	x6, x6, xzr
   1f338:	adds	x0, x4, x0
   1f33c:	cinc	x6, x6, cs  // cs = hs, nlast
   1f340:	sub	x4, x0, x1
   1f344:	cmp	x6, #0x0
   1f348:	ccmp	x1, x0, #0x0, eq  // eq = none
   1f34c:	csel	x4, x4, x0, ls  // ls = plast
   1f350:	subs	x0, x8, x5
   1f354:	cmp	x8, x5
   1f358:	sbc	x3, x3, xzr
   1f35c:	adds	x0, x0, x16
   1f360:	cinc	x3, x3, cs  // cs = hs, nlast
   1f364:	subs	x5, x0, x3
   1f368:	cmp	x0, x3
   1f36c:	lsr	x0, x3, #24
   1f370:	lsl	x3, x3, #40
   1f374:	sbc	x0, x0, xzr
   1f378:	adds	x5, x5, x3
   1f37c:	cinc	x0, x0, cs  // cs = hs, nlast
   1f380:	subs	x3, x5, x0
   1f384:	cmp	x5, x0
   1f388:	lsr	x5, x0, #24
   1f38c:	lsl	x0, x0, #40
   1f390:	b	1f1b4 <PyInit__decimal@@Base+0x4c34>
   1f394:	ldp	x19, x20, [sp, #16]
   1f398:	ldp	x23, x24, [sp, #48]
   1f39c:	ldp	x25, x26, [sp, #64]
   1f3a0:	mov	x3, #0x0                   	// #0
   1f3a4:	mov	x2, #0x0                   	// #0
   1f3a8:	add	x2, x2, #0x1
   1f3ac:	cbnz	w2, 1f424 <PyInit__decimal@@Base+0x4ea4>
   1f3b0:	lsr	x1, x2, #32
   1f3b4:	mov	w0, #0x3f                  	// #63
   1f3b8:	tst	w1, #0xffff
   1f3bc:	b.eq	1f434 <PyInit__decimal@@Base+0x4eb4>  // b.none
   1f3c0:	sub	w0, w0, #0x10
   1f3c4:	tst	w1, #0xff
   1f3c8:	b.eq	1f440 <PyInit__decimal@@Base+0x4ec0>  // b.none
   1f3cc:	sub	w0, w0, #0x8
   1f3d0:	tst	x1, #0xf
   1f3d4:	b.eq	1f44c <PyInit__decimal@@Base+0x4ecc>  // b.none
   1f3d8:	sub	w0, w0, #0x4
   1f3dc:	tst	x1, #0x3
   1f3e0:	b.eq	1f458 <PyInit__decimal@@Base+0x4ed8>  // b.none
   1f3e4:	tst	x1, #0x1
   1f3e8:	sub	w0, w0, #0x2
   1f3ec:	cinc	w0, w0, eq  // eq = none
   1f3f0:	cmp	x13, x2
   1f3f4:	lsr	x0, x13, x0
   1f3f8:	sub	x0, x13, x0
   1f3fc:	eor	x3, x3, x0
   1f400:	b.ls	1f478 <PyInit__decimal@@Base+0x4ef8>  // b.plast
   1f404:	cmp	x2, x3
   1f408:	b.cs	1f3a8 <PyInit__decimal@@Base+0x4e28>  // b.hs, b.nlast
   1f40c:	ldr	x1, [x17, x3, lsl #3]
   1f410:	ldr	x0, [x17, x2, lsl #3]
   1f414:	str	x1, [x17, x2, lsl #3]
   1f418:	str	x0, [x17, x3, lsl #3]
   1f41c:	add	x2, x2, #0x1
   1f420:	cbz	w2, 1f3b0 <PyInit__decimal@@Base+0x4e30>
   1f424:	mov	x1, x2
   1f428:	mov	w0, #0x1f                  	// #31
   1f42c:	tst	w1, #0xffff
   1f430:	b.ne	1f3c0 <PyInit__decimal@@Base+0x4e40>  // b.any
   1f434:	lsr	x1, x1, #16
   1f438:	tst	w1, #0xff
   1f43c:	b.ne	1f3cc <PyInit__decimal@@Base+0x4e4c>  // b.any
   1f440:	lsr	x1, x1, #8
   1f444:	tst	x1, #0xf
   1f448:	b.ne	1f3d8 <PyInit__decimal@@Base+0x4e58>  // b.any
   1f44c:	lsr	x1, x1, #4
   1f450:	tst	x1, #0x3
   1f454:	b.ne	1f3e4 <PyInit__decimal@@Base+0x4e64>  // b.any
   1f458:	lsr	x1, x1, #2
   1f45c:	tst	x1, #0x1
   1f460:	cinc	w0, w0, eq  // eq = none
   1f464:	cmp	x13, x2
   1f468:	lsr	x0, x13, x0
   1f46c:	sub	x0, x13, x0
   1f470:	eor	x3, x3, x0
   1f474:	b.hi	1f404 <PyInit__decimal@@Base+0x4e84>  // b.pmore
   1f478:	ldp	x21, x22, [sp, #32]
   1f47c:	ldp	x29, x30, [sp], #80
   1f480:	ret
   1f484:	cmp	x9, #0x1
   1f488:	b.eq	1f83c <PyInit__decimal@@Base+0x52bc>  // b.none
   1f48c:	and	x16, x1, #0x400000000
   1f490:	stp	x23, x24, [sp, #48]
   1f494:	mov	x23, #0x2                   	// #2
   1f498:	stp	x25, x26, [sp, #64]
   1f49c:	nop
   1f4a0:	lsr	x19, x9, #1
   1f4a4:	add	x8, x19, x9
   1f4a8:	lsl	x14, x9, #1
   1f4ac:	lsl	x18, x19, #3
   1f4b0:	add	x12, x17, x10
   1f4b4:	add	x8, x17, x8, lsl #3
   1f4b8:	add	x11, x17, x18
   1f4bc:	mov	x0, #0x0                   	// #0
   1f4c0:	ldr	x7, [x17, x0, lsl #3]
   1f4c4:	ldr	x2, [x11, x0, lsl #3]
   1f4c8:	ldr	x6, [x12, x0, lsl #3]
   1f4cc:	adds	x4, x2, x7
   1f4d0:	sub	x3, x4, x1
   1f4d4:	sub	x5, x7, x2
   1f4d8:	csel	x3, x3, x4, cs  // cs = hs, nlast
   1f4dc:	add	x20, x5, x1
   1f4e0:	ldr	x4, [x8, x0, lsl #3]
   1f4e4:	cmp	x1, x3
   1f4e8:	sub	x24, x3, x1
   1f4ec:	csel	x3, x24, x3, ls  // ls = plast
   1f4f0:	cmp	x2, x7
   1f4f4:	csel	x5, x20, x5, hi  // hi = pmore
   1f4f8:	adds	x7, x4, x6
   1f4fc:	sub	x2, x7, x1
   1f500:	str	x3, [x17, x0, lsl #3]
   1f504:	csel	x2, x2, x7, cs  // cs = hs, nlast
   1f508:	sub	x3, x6, x4
   1f50c:	cmp	x1, x2
   1f510:	sub	x7, x2, x1
   1f514:	csel	x2, x7, x2, ls  // ls = plast
   1f518:	str	x2, [x12, x0, lsl #3]
   1f51c:	cmp	x4, x6
   1f520:	add	x2, x3, x1
   1f524:	str	x5, [x11, x0, lsl #3]
   1f528:	csel	x3, x2, x3, hi  // hi = pmore
   1f52c:	str	x3, [x8, x0, lsl #3]
   1f530:	add	x0, x0, x14
   1f534:	cmp	x13, x0
   1f538:	b.hi	1f4c0 <PyInit__decimal@@Base+0x4f40>  // b.pmore
   1f53c:	cmp	x19, #0x1
   1f540:	b.eq	1f394 <PyInit__decimal@@Base+0x4e14>  // b.none
   1f544:	add	x9, x9, #0x1
   1f548:	add	x11, x18, #0x8
   1f54c:	add	x9, x9, x19
   1f550:	add	x10, x10, #0x8
   1f554:	lsl	x20, x23, #3
   1f558:	add	x11, x17, x11
   1f55c:	add	x9, x17, x9, lsl #3
   1f560:	add	x10, x17, x10
   1f564:	add	x30, x22, x20
   1f568:	mov	x12, x21
   1f56c:	mov	x18, #0x1                   	// #1
   1f570:	mov	x3, #0x0                   	// #0
   1f574:	ldr	x8, [x30, #24]
   1f578:	b	1f65c <PyInit__decimal@@Base+0x50dc>
   1f57c:	cbz	x16, 1f75c <PyInit__decimal@@Base+0x51dc>
   1f580:	lsr	x4, x0, #30
   1f584:	lsl	x0, x0, #34
   1f588:	adds	x0, x0, x5
   1f58c:	sub	x4, x4, x6
   1f590:	cinc	x4, x4, cs  // cs = hs, nlast
   1f594:	mul	x6, x2, x8
   1f598:	subs	x7, x0, x4
   1f59c:	umulh	x2, x2, x8
   1f5a0:	cmp	x0, x4
   1f5a4:	lsr	x0, x4, #30
   1f5a8:	lsl	x4, x4, #34
   1f5ac:	sbc	x0, x0, xzr
   1f5b0:	adds	x7, x7, x4
   1f5b4:	lsr	x5, x2, #30
   1f5b8:	cinc	x0, x0, cs  // cs = hs, nlast
   1f5bc:	lsl	x24, x2, #34
   1f5c0:	subs	x4, x7, x0
   1f5c4:	cmp	x7, x0
   1f5c8:	lsr	x7, x0, #30
   1f5cc:	lsl	x0, x0, #34
   1f5d0:	sbc	x7, x7, xzr
   1f5d4:	adds	x0, x4, x0
   1f5d8:	cinc	x7, x7, cs  // cs = hs, nlast
   1f5dc:	sub	x4, x0, x1
   1f5e0:	cmp	x7, #0x0
   1f5e4:	ccmp	x1, x0, #0x0, eq  // eq = none
   1f5e8:	csel	x4, x4, x0, ls  // ls = plast
   1f5ec:	subs	x0, x6, x2
   1f5f0:	cmp	x6, x2
   1f5f4:	sbc	x5, x5, xzr
   1f5f8:	adds	x2, x0, x24
   1f5fc:	cinc	x5, x5, cs  // cs = hs, nlast
   1f600:	subs	x0, x2, x5
   1f604:	cmp	x2, x5
   1f608:	lsr	x2, x5, #30
   1f60c:	lsl	x5, x5, #34
   1f610:	sbc	x2, x2, xzr
   1f614:	adds	x5, x0, x5
   1f618:	cinc	x2, x2, cs  // cs = hs, nlast
   1f61c:	subs	x0, x5, x2
   1f620:	cmp	x5, x2
   1f624:	lsr	x5, x2, #30
   1f628:	lsl	x2, x2, #34
   1f62c:	sbc	x5, x5, xzr
   1f630:	adds	x2, x0, x2
   1f634:	cinc	x5, x5, cs  // cs = hs, nlast
   1f638:	sub	x0, x2, x1
   1f63c:	cmp	x5, #0x0
   1f640:	str	x4, [x11, x3, lsl #3]
   1f644:	ccmp	x1, x2, #0x0, eq  // eq = none
   1f648:	csel	x0, x0, x2, ls  // ls = plast
   1f64c:	str	x0, [x9, x3, lsl #3]
   1f650:	add	x3, x3, x14
   1f654:	cmp	x13, x3
   1f658:	b.ls	1f80c <PyInit__decimal@@Base+0x528c>  // b.plast
   1f65c:	ldr	x4, [x12, x3, lsl #3]
   1f660:	ldr	x2, [x11, x3, lsl #3]
   1f664:	ldr	x7, [x10, x3, lsl #3]
   1f668:	adds	x5, x2, x4
   1f66c:	sub	x6, x5, x1
   1f670:	sub	x0, x4, x2
   1f674:	csel	x5, x6, x5, cs  // cs = hs, nlast
   1f678:	add	x24, x0, x1
   1f67c:	ldr	x6, [x9, x3, lsl #3]
   1f680:	cmp	x1, x5
   1f684:	sub	x25, x5, x1
   1f688:	csel	x5, x25, x5, ls  // ls = plast
   1f68c:	cmp	x2, x4
   1f690:	csel	x0, x24, x0, hi  // hi = pmore
   1f694:	adds	x24, x6, x7
   1f698:	sub	x4, x24, x1
   1f69c:	sub	x2, x7, x6
   1f6a0:	csel	x4, x4, x24, cs  // cs = hs, nlast
   1f6a4:	add	x25, x2, x1
   1f6a8:	mul	x24, x0, x8
   1f6ac:	cmp	x1, x4
   1f6b0:	umulh	x0, x0, x8
   1f6b4:	sub	x26, x4, x1
   1f6b8:	csel	x4, x26, x4, ls  // ls = plast
   1f6bc:	cmp	x6, x7
   1f6c0:	str	x5, [x12, x3, lsl #3]
   1f6c4:	csel	x2, x25, x2, hi  // hi = pmore
   1f6c8:	subs	x5, x24, x0
   1f6cc:	str	x4, [x10, x3, lsl #3]
   1f6d0:	cmp	x24, x0
   1f6d4:	cset	x6, cc  // cc = lo, ul, last
   1f6d8:	cbz	x15, 1f57c <PyInit__decimal@@Base+0x4ffc>
   1f6dc:	lsr	x4, x0, #32
   1f6e0:	lsl	x0, x0, #32
   1f6e4:	adds	x0, x0, x5
   1f6e8:	sub	x4, x4, x6
   1f6ec:	cinc	x4, x4, cs  // cs = hs, nlast
   1f6f0:	mul	x7, x2, x8
   1f6f4:	subs	x6, x0, x4
   1f6f8:	umulh	x2, x2, x8
   1f6fc:	cmp	x0, x4
   1f700:	lsr	x5, x4, #32
   1f704:	lsl	x4, x4, #32
   1f708:	sbc	x5, x5, xzr
   1f70c:	adds	x4, x6, x4
   1f710:	lsr	x0, x2, #32
   1f714:	cinc	x5, x5, cs  // cs = hs, nlast
   1f718:	sub	x24, x4, x1
   1f71c:	cmp	x5, #0x0
   1f720:	lsl	x6, x2, #32
   1f724:	ccmp	x1, x4, #0x0, eq  // eq = none
   1f728:	csel	x4, x24, x4, ls  // ls = plast
   1f72c:	subs	x5, x7, x2
   1f730:	cmp	x7, x2
   1f734:	sbc	x0, x0, xzr
   1f738:	adds	x5, x5, x6
   1f73c:	cinc	x0, x0, cs  // cs = hs, nlast
   1f740:	subs	x2, x5, x0
   1f744:	cmp	x5, x0
   1f748:	lsr	x5, x0, #32
   1f74c:	lsl	x0, x0, #32
   1f750:	sbc	x5, x5, xzr
   1f754:	adds	x2, x2, x0
   1f758:	b	1f634 <PyInit__decimal@@Base+0x50b4>
   1f75c:	lsr	x4, x0, #24
   1f760:	lsl	x0, x0, #40
   1f764:	adds	x0, x0, x5
   1f768:	sub	x4, x4, x6
   1f76c:	cinc	x4, x4, cs  // cs = hs, nlast
   1f770:	mul	x6, x2, x8
   1f774:	subs	x7, x0, x4
   1f778:	umulh	x2, x2, x8
   1f77c:	cmp	x0, x4
   1f780:	lsr	x0, x4, #24
   1f784:	lsl	x4, x4, #40
   1f788:	sbc	x0, x0, xzr
   1f78c:	adds	x7, x7, x4
   1f790:	lsr	x5, x2, #24
   1f794:	cinc	x0, x0, cs  // cs = hs, nlast
   1f798:	lsl	x24, x2, #40
   1f79c:	subs	x4, x7, x0
   1f7a0:	cmp	x7, x0
   1f7a4:	lsr	x7, x0, #24
   1f7a8:	lsl	x0, x0, #40
   1f7ac:	sbc	x7, x7, xzr
   1f7b0:	adds	x0, x4, x0
   1f7b4:	cinc	x7, x7, cs  // cs = hs, nlast
   1f7b8:	sub	x4, x0, x1
   1f7bc:	cmp	x7, #0x0
   1f7c0:	ccmp	x1, x0, #0x0, eq  // eq = none
   1f7c4:	csel	x4, x4, x0, ls  // ls = plast
   1f7c8:	subs	x0, x6, x2
   1f7cc:	cmp	x6, x2
   1f7d0:	sbc	x5, x5, xzr
   1f7d4:	adds	x0, x0, x24
   1f7d8:	cinc	x5, x5, cs  // cs = hs, nlast
   1f7dc:	subs	x6, x0, x5
   1f7e0:	cmp	x0, x5
   1f7e4:	lsl	x2, x5, #40
   1f7e8:	lsr	x0, x5, #24
   1f7ec:	sbc	x0, x0, xzr
   1f7f0:	adds	x5, x6, x2
   1f7f4:	cinc	x0, x0, cs  // cs = hs, nlast
   1f7f8:	subs	x2, x5, x0
   1f7fc:	cmp	x5, x0
   1f800:	lsr	x5, x0, #24
   1f804:	lsl	x0, x0, #40
   1f808:	b	1f750 <PyInit__decimal@@Base+0x51d0>
   1f80c:	add	x18, x18, #0x1
   1f810:	add	x30, x30, x20
   1f814:	cmp	x19, x18
   1f818:	add	x11, x11, #0x8
   1f81c:	add	x9, x9, #0x8
   1f820:	add	x10, x10, #0x8
   1f824:	add	x12, x12, #0x8
   1f828:	b.ne	1f570 <PyInit__decimal@@Base+0x4ff0>  // b.any
   1f82c:	mov	x9, x19
   1f830:	lsl	x23, x23, #1
   1f834:	lsl	x10, x19, #3
   1f838:	b	1f4a0 <PyInit__decimal@@Base+0x4f20>
   1f83c:	ldp	x19, x20, [sp, #16]
   1f840:	b	1f3a0 <PyInit__decimal@@Base+0x4e20>
   1f844:	nop
   1f848:	stp	x29, x30, [sp, #-48]!
   1f84c:	mov	x29, sp
   1f850:	stp	x19, x20, [sp, #16]
   1f854:	mov	x20, x1
   1f858:	str	x21, [sp, #32]
   1f85c:	mov	x21, x0
   1f860:	mov	x0, x1
   1f864:	mov	w1, #0xffffffff            	// #-1
   1f868:	bl	39120 <PyInit__decimal@@Base+0x1eba0>
   1f86c:	cbz	x0, 1f8a8 <PyInit__decimal@@Base+0x5328>
   1f870:	mov	x19, x0
   1f874:	mov	x1, x20
   1f878:	mov	x2, x19
   1f87c:	mov	x0, x21
   1f880:	bl	1f0a8 <PyInit__decimal@@Base+0x4b28>
   1f884:	adrp	x1, 5f000 <PyInit__decimal@@Base+0x44a80>
   1f888:	mov	x0, x19
   1f88c:	ldr	x1, [x1, #1704]
   1f890:	blr	x1
   1f894:	mov	w0, #0x1                   	// #1
   1f898:	ldp	x19, x20, [sp, #16]
   1f89c:	ldr	x21, [sp, #32]
   1f8a0:	ldp	x29, x30, [sp], #48
   1f8a4:	ret
   1f8a8:	mov	w0, #0x0                   	// #0
   1f8ac:	ldp	x19, x20, [sp, #16]
   1f8b0:	ldr	x21, [sp, #32]
   1f8b4:	ldp	x29, x30, [sp], #48
   1f8b8:	ret
   1f8bc:	nop
   1f8c0:	stp	x29, x30, [sp, #-48]!
   1f8c4:	mov	x29, sp
   1f8c8:	stp	x19, x20, [sp, #16]
   1f8cc:	mov	x20, x1
   1f8d0:	str	x21, [sp, #32]
   1f8d4:	mov	x21, x0
   1f8d8:	mov	x0, x1
   1f8dc:	mov	w1, #0x1                   	// #1
   1f8e0:	bl	39120 <PyInit__decimal@@Base+0x1eba0>
   1f8e4:	cbz	x0, 1f920 <PyInit__decimal@@Base+0x53a0>
   1f8e8:	mov	x19, x0
   1f8ec:	mov	x1, x20
   1f8f0:	mov	x2, x19
   1f8f4:	mov	x0, x21
   1f8f8:	bl	1f0a8 <PyInit__decimal@@Base+0x4b28>
   1f8fc:	adrp	x1, 5f000 <PyInit__decimal@@Base+0x44a80>
   1f900:	mov	x0, x19
   1f904:	ldr	x1, [x1, #1704]
   1f908:	blr	x1
   1f90c:	mov	w0, #0x1                   	// #1
   1f910:	ldp	x19, x20, [sp, #16]
   1f914:	ldr	x21, [sp, #32]
   1f918:	ldp	x29, x30, [sp], #48
   1f91c:	ret
   1f920:	mov	w0, #0x0                   	// #0
   1f924:	ldp	x19, x20, [sp, #16]
   1f928:	ldr	x21, [sp, #32]
   1f92c:	ldp	x29, x30, [sp], #48
   1f930:	ret
   1f934:	nop
   1f938:	stp	x29, x30, [sp, #-128]!
   1f93c:	adrp	x3, 42000 <PyInit__decimal@@Base+0x27a80>
   1f940:	add	x3, x3, #0x5a8
   1f944:	mov	x29, sp
   1f948:	stp	x23, x24, [sp, #48]
   1f94c:	mov	x24, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
   1f950:	movk	x24, #0xaaab
   1f954:	stp	x19, x20, [sp, #16]
   1f958:	mov	w20, w2
   1f95c:	umulh	x24, x1, x24
   1f960:	mov	x23, x0
   1f964:	add	x0, sp, #0x68
   1f968:	ldr	x19, [x3, w20, sxtw #3]
   1f96c:	lsr	x24, x24, #1
   1f970:	stp	x21, x22, [sp, #32]
   1f974:	lsl	x21, x24, #3
   1f978:	stp	x25, x26, [sp, #64]
   1f97c:	mov	x25, x1
   1f980:	mov	w1, #0xffffffff            	// #-1
   1f984:	str	x27, [sp, #80]
   1f988:	bl	392e0 <PyInit__decimal@@Base+0x1ed60>
   1f98c:	add	x8, x23, x21
   1f990:	and	x22, x19, #0x100000000
   1f994:	cmp	x23, x8
   1f998:	add	x9, x8, x21
   1f99c:	b.cs	1fe74 <PyInit__decimal@@Base+0x58f4>  // b.hs, b.nlast
   1f9a0:	mvn	x10, x23
   1f9a4:	and	x7, x19, #0x400000000
   1f9a8:	add	x10, x8, x10
   1f9ac:	mov	x2, #0x0                   	// #0
   1f9b0:	ldp	x6, x5, [sp, #112]
   1f9b4:	lsr	x10, x10, #3
   1f9b8:	b	1fc00 <PyInit__decimal@@Base+0x5680>
   1f9bc:	cbz	x7, 1fd64 <PyInit__decimal@@Base+0x57e4>
   1f9c0:	lsr	x13, x4, #30
   1f9c4:	lsl	x4, x4, #34
   1f9c8:	adds	x4, x4, x14
   1f9cc:	sub	x13, x13, x15
   1f9d0:	cinc	x13, x13, cs  // cs = hs, nlast
   1f9d4:	subs	x14, x4, x13
   1f9d8:	cmp	x4, x13
   1f9dc:	lsr	x11, x13, #30
   1f9e0:	lsl	x13, x13, #34
   1f9e4:	sbc	x11, x11, xzr
   1f9e8:	adds	x13, x14, x13
   1f9ec:	cinc	x11, x11, cs  // cs = hs, nlast
   1f9f0:	subs	x4, x13, x11
   1f9f4:	cmp	x13, x11
   1f9f8:	lsr	x13, x11, #30
   1f9fc:	lsl	x11, x11, #34
   1fa00:	sbc	x13, x13, xzr
   1fa04:	adds	x11, x4, x11
   1fa08:	cinc	x13, x13, cs  // cs = hs, nlast
   1fa0c:	sub	x4, x11, x19
   1fa10:	cmp	x13, #0x0
   1fa14:	ccmp	x19, x11, #0x0, eq  // eq = none
   1fa18:	csel	x4, x4, x11, ls  // ls = plast
   1fa1c:	adds	x4, x12, x4
   1fa20:	mul	x13, x0, x5
   1fa24:	sub	x14, x4, x19
   1fa28:	umulh	x11, x0, x5
   1fa2c:	csel	x4, x14, x4, cs  // cs = hs, nlast
   1fa30:	cmp	x19, x4
   1fa34:	sub	x14, x4, x19
   1fa38:	csel	x4, x14, x4, ls  // ls = plast
   1fa3c:	subs	x15, x13, x11
   1fa40:	cmp	x13, x11
   1fa44:	cset	x16, cc  // cc = lo, ul, last
   1fa48:	cbnz	x22, 1fd20 <PyInit__decimal@@Base+0x57a0>
   1fa4c:	cbz	x7, 1fe30 <PyInit__decimal@@Base+0x58b0>
   1fa50:	lsr	x14, x11, #30
   1fa54:	lsl	x11, x11, #34
   1fa58:	adds	x11, x11, x15
   1fa5c:	sub	x14, x14, x16
   1fa60:	cinc	x14, x14, cs  // cs = hs, nlast
   1fa64:	subs	x15, x11, x14
   1fa68:	cmp	x11, x14
   1fa6c:	lsr	x13, x14, #30
   1fa70:	lsl	x14, x14, #34
   1fa74:	sbc	x13, x13, xzr
   1fa78:	adds	x14, x15, x14
   1fa7c:	cinc	x13, x13, cs  // cs = hs, nlast
   1fa80:	subs	x11, x14, x13
   1fa84:	cmp	x14, x13
   1fa88:	lsr	x14, x13, #30
   1fa8c:	lsl	x13, x13, #34
   1fa90:	sbc	x14, x14, xzr
   1fa94:	adds	x13, x11, x13
   1fa98:	cinc	x14, x14, cs  // cs = hs, nlast
   1fa9c:	sub	x11, x13, x19
   1faa0:	cmp	x14, #0x0
   1faa4:	ccmp	x19, x13, #0x0, eq  // eq = none
   1faa8:	csel	x11, x11, x13, ls  // ls = plast
   1faac:	adds	x4, x4, x11
   1fab0:	mul	x11, x1, x5
   1fab4:	sub	x13, x4, x19
   1fab8:	umulh	x1, x1, x5
   1fabc:	csel	x4, x13, x4, cs  // cs = hs, nlast
   1fac0:	cmp	x19, x4
   1fac4:	sub	x13, x4, x19
   1fac8:	csel	x4, x13, x4, ls  // ls = plast
   1facc:	subs	x14, x11, x1
   1fad0:	cmp	x11, x1
   1fad4:	cset	x15, cc  // cc = lo, ul, last
   1fad8:	cbnz	x22, 1fcdc <PyInit__decimal@@Base+0x575c>
   1fadc:	cbz	x7, 1fdec <PyInit__decimal@@Base+0x586c>
   1fae0:	lsr	x13, x1, #30
   1fae4:	lsl	x1, x1, #34
   1fae8:	adds	x1, x1, x14
   1faec:	sub	x13, x13, x15
   1faf0:	cinc	x13, x13, cs  // cs = hs, nlast
   1faf4:	subs	x14, x1, x13
   1faf8:	cmp	x1, x13
   1fafc:	lsr	x11, x13, #30
   1fb00:	lsl	x13, x13, #34
   1fb04:	sbc	x11, x11, xzr
   1fb08:	adds	x13, x14, x13
   1fb0c:	cinc	x11, x11, cs  // cs = hs, nlast
   1fb10:	subs	x1, x13, x11
   1fb14:	cmp	x13, x11
   1fb18:	lsr	x13, x11, #30
   1fb1c:	lsl	x11, x11, #34
   1fb20:	sbc	x13, x13, xzr
   1fb24:	adds	x11, x1, x11
   1fb28:	cinc	x13, x13, cs  // cs = hs, nlast
   1fb2c:	sub	x1, x11, x19
   1fb30:	cmp	x13, #0x0
   1fb34:	ccmp	x19, x11, #0x0, eq  // eq = none
   1fb38:	csel	x1, x1, x11, ls  // ls = plast
   1fb3c:	adds	x12, x12, x1
   1fb40:	mul	x1, x6, x0
   1fb44:	sub	x11, x12, x19
   1fb48:	umulh	x0, x6, x0
   1fb4c:	csel	x12, x11, x12, cs  // cs = hs, nlast
   1fb50:	cmp	x19, x12
   1fb54:	sub	x11, x12, x19
   1fb58:	csel	x12, x11, x12, ls  // ls = plast
   1fb5c:	subs	x13, x1, x0
   1fb60:	cmp	x1, x0
   1fb64:	cset	x14, cc  // cc = lo, ul, last
   1fb68:	cbnz	x22, 1fc98 <PyInit__decimal@@Base+0x5718>
   1fb6c:	cbz	x7, 1fda8 <PyInit__decimal@@Base+0x5828>
   1fb70:	lsr	x11, x0, #30
   1fb74:	lsl	x0, x0, #34
   1fb78:	adds	x0, x0, x13
   1fb7c:	sub	x11, x11, x14
   1fb80:	cinc	x11, x11, cs  // cs = hs, nlast
   1fb84:	subs	x13, x0, x11
   1fb88:	cmp	x0, x11
   1fb8c:	lsr	x1, x11, #30
   1fb90:	lsl	x11, x11, #34
   1fb94:	sbc	x1, x1, xzr
   1fb98:	adds	x11, x13, x11
   1fb9c:	cinc	x1, x1, cs  // cs = hs, nlast
   1fba0:	subs	x0, x11, x1
   1fba4:	cmp	x11, x1
   1fba8:	lsr	x11, x1, #30
   1fbac:	lsl	x1, x1, #34
   1fbb0:	sbc	x11, x11, xzr
   1fbb4:	adds	x1, x0, x1
   1fbb8:	cinc	x11, x11, cs  // cs = hs, nlast
   1fbbc:	sub	x0, x1, x19
   1fbc0:	cmp	x11, #0x0
   1fbc4:	ccmp	x19, x1, #0x0, eq  // eq = none
   1fbc8:	csel	x0, x0, x1, ls  // ls = plast
   1fbcc:	adds	x12, x12, x0
   1fbd0:	add	x1, x2, #0x1
   1fbd4:	sub	x0, x12, x19
   1fbd8:	csel	x12, x0, x12, cs  // cs = hs, nlast
   1fbdc:	cmp	x19, x12
   1fbe0:	sub	x0, x12, x19
   1fbe4:	csel	x12, x0, x12, ls  // ls = plast
   1fbe8:	str	x12, [x9, x2, lsl #3]
   1fbec:	str	x4, [x8, x2, lsl #3]
   1fbf0:	cmp	x10, x2
   1fbf4:	str	x3, [x23, x2, lsl #3]
   1fbf8:	b.eq	1fe74 <PyInit__decimal@@Base+0x58f4>  // b.none
   1fbfc:	mov	x2, x1
   1fc00:	ldr	x1, [x8, x2, lsl #3]
   1fc04:	ldr	x12, [x23, x2, lsl #3]
   1fc08:	ldr	x0, [x9, x2, lsl #3]
   1fc0c:	adds	x4, x12, x1
   1fc10:	sub	x3, x4, x19
   1fc14:	mul	x11, x1, x6
   1fc18:	csel	x3, x3, x4, cs  // cs = hs, nlast
   1fc1c:	umulh	x4, x1, x6
   1fc20:	cmp	x19, x3
   1fc24:	sub	x13, x3, x19
   1fc28:	csel	x3, x13, x3, ls  // ls = plast
   1fc2c:	adds	x3, x0, x3
   1fc30:	sub	x13, x3, x19
   1fc34:	csel	x3, x13, x3, cs  // cs = hs, nlast
   1fc38:	cmp	x19, x3
   1fc3c:	sub	x13, x3, x19
   1fc40:	csel	x3, x13, x3, ls  // ls = plast
   1fc44:	subs	x14, x11, x4
   1fc48:	cmp	x11, x4
   1fc4c:	cset	x15, cc  // cc = lo, ul, last
   1fc50:	cbz	x22, 1f9bc <PyInit__decimal@@Base+0x543c>
   1fc54:	lsr	x11, x4, #32
   1fc58:	lsl	x4, x4, #32
   1fc5c:	adds	x4, x4, x14
   1fc60:	sub	x11, x11, x15
   1fc64:	cinc	x11, x11, cs  // cs = hs, nlast
   1fc68:	subs	x13, x4, x11
   1fc6c:	cmp	x4, x11
   1fc70:	lsr	x14, x11, #32
   1fc74:	lsl	x11, x11, #32
   1fc78:	sbc	x14, x14, xzr
   1fc7c:	adds	x11, x13, x11
   1fc80:	cinc	x14, x14, cs  // cs = hs, nlast
   1fc84:	sub	x4, x11, x19
   1fc88:	cmp	x14, #0x0
   1fc8c:	ccmp	x19, x11, #0x0, eq  // eq = none
   1fc90:	csel	x4, x4, x11, ls  // ls = plast
   1fc94:	b	1fa1c <PyInit__decimal@@Base+0x549c>
   1fc98:	lsr	x1, x0, #32
   1fc9c:	lsl	x0, x0, #32
   1fca0:	adds	x0, x0, x13
   1fca4:	sub	x1, x1, x14
   1fca8:	cinc	x1, x1, cs  // cs = hs, nlast
   1fcac:	subs	x11, x0, x1
   1fcb0:	cmp	x0, x1
   1fcb4:	lsr	x13, x1, #32
   1fcb8:	lsl	x1, x1, #32
   1fcbc:	sbc	x13, x13, xzr
   1fcc0:	adds	x1, x11, x1
   1fcc4:	cinc	x13, x13, cs  // cs = hs, nlast
   1fcc8:	sub	x0, x1, x19
   1fccc:	cmp	x13, #0x0
   1fcd0:	ccmp	x19, x1, #0x0, eq  // eq = none
   1fcd4:	csel	x0, x0, x1, ls  // ls = plast
   1fcd8:	b	1fbcc <PyInit__decimal@@Base+0x564c>
   1fcdc:	lsr	x11, x1, #32
   1fce0:	lsl	x1, x1, #32
   1fce4:	adds	x1, x1, x14
   1fce8:	sub	x11, x11, x15
   1fcec:	cinc	x11, x11, cs  // cs = hs, nlast
   1fcf0:	subs	x13, x1, x11
   1fcf4:	cmp	x1, x11
   1fcf8:	lsr	x14, x11, #32
   1fcfc:	lsl	x11, x11, #32
   1fd00:	sbc	x14, x14, xzr
   1fd04:	adds	x11, x13, x11
   1fd08:	cinc	x14, x14, cs  // cs = hs, nlast
   1fd0c:	sub	x1, x11, x19
   1fd10:	cmp	x14, #0x0
   1fd14:	ccmp	x19, x11, #0x0, eq  // eq = none
   1fd18:	csel	x1, x1, x11, ls  // ls = plast
   1fd1c:	b	1fb3c <PyInit__decimal@@Base+0x55bc>
   1fd20:	lsr	x13, x11, #32
   1fd24:	lsl	x11, x11, #32
   1fd28:	adds	x11, x11, x15
   1fd2c:	sub	x13, x13, x16
   1fd30:	cinc	x13, x13, cs  // cs = hs, nlast
   1fd34:	subs	x14, x11, x13
   1fd38:	cmp	x11, x13
   1fd3c:	lsr	x15, x13, #32
   1fd40:	lsl	x13, x13, #32
   1fd44:	sbc	x15, x15, xzr
   1fd48:	adds	x13, x14, x13
   1fd4c:	cinc	x15, x15, cs  // cs = hs, nlast
   1fd50:	sub	x11, x13, x19
   1fd54:	cmp	x15, #0x0
   1fd58:	ccmp	x19, x13, #0x0, eq  // eq = none
   1fd5c:	csel	x11, x11, x13, ls  // ls = plast
   1fd60:	b	1faac <PyInit__decimal@@Base+0x552c>
   1fd64:	lsr	x13, x4, #24
   1fd68:	lsl	x4, x4, #40
   1fd6c:	adds	x4, x4, x14
   1fd70:	sub	x13, x13, x15
   1fd74:	cinc	x13, x13, cs  // cs = hs, nlast
   1fd78:	subs	x14, x4, x13
   1fd7c:	cmp	x4, x13
   1fd80:	lsr	x11, x13, #24
   1fd84:	lsl	x13, x13, #40
   1fd88:	sbc	x11, x11, xzr
   1fd8c:	adds	x13, x14, x13
   1fd90:	cinc	x11, x11, cs  // cs = hs, nlast
   1fd94:	subs	x4, x13, x11
   1fd98:	cmp	x13, x11
   1fd9c:	lsr	x13, x11, #24
   1fda0:	lsl	x11, x11, #40
   1fda4:	b	1fa00 <PyInit__decimal@@Base+0x5480>
   1fda8:	lsr	x11, x0, #24
   1fdac:	lsl	x0, x0, #40
   1fdb0:	adds	x0, x0, x13
   1fdb4:	sub	x11, x11, x14
   1fdb8:	cinc	x11, x11, cs  // cs = hs, nlast
   1fdbc:	subs	x13, x0, x11
   1fdc0:	cmp	x0, x11
   1fdc4:	lsr	x1, x11, #24
   1fdc8:	lsl	x11, x11, #40
   1fdcc:	sbc	x1, x1, xzr
   1fdd0:	adds	x11, x13, x11
   1fdd4:	cinc	x1, x1, cs  // cs = hs, nlast
   1fdd8:	subs	x0, x11, x1
   1fddc:	cmp	x11, x1
   1fde0:	lsr	x11, x1, #24
   1fde4:	lsl	x1, x1, #40
   1fde8:	b	1fbb0 <PyInit__decimal@@Base+0x5630>
   1fdec:	lsr	x13, x1, #24
   1fdf0:	lsl	x1, x1, #40
   1fdf4:	adds	x1, x1, x14
   1fdf8:	sub	x13, x13, x15
   1fdfc:	cinc	x13, x13, cs  // cs = hs, nlast
   1fe00:	subs	x14, x1, x13
   1fe04:	cmp	x1, x13
   1fe08:	lsr	x11, x13, #24
   1fe0c:	lsl	x13, x13, #40
   1fe10:	sbc	x11, x11, xzr
   1fe14:	adds	x13, x14, x13
   1fe18:	cinc	x11, x11, cs  // cs = hs, nlast
   1fe1c:	subs	x1, x13, x11
   1fe20:	cmp	x13, x11
   1fe24:	lsr	x13, x11, #24
   1fe28:	lsl	x11, x11, #40
   1fe2c:	b	1fb20 <PyInit__decimal@@Base+0x55a0>
   1fe30:	lsr	x14, x11, #24
   1fe34:	lsl	x11, x11, #40
   1fe38:	adds	x11, x11, x15
   1fe3c:	sub	x14, x14, x16
   1fe40:	cinc	x14, x14, cs  // cs = hs, nlast
   1fe44:	subs	x15, x11, x14
   1fe48:	cmp	x11, x14
   1fe4c:	lsr	x13, x14, #24
   1fe50:	lsl	x14, x14, #40
   1fe54:	sbc	x13, x13, xzr
   1fe58:	adds	x14, x15, x14
   1fe5c:	cinc	x13, x13, cs  // cs = hs, nlast
   1fe60:	subs	x11, x14, x13
   1fe64:	cmp	x14, x13
   1fe68:	lsr	x14, x13, #24
   1fe6c:	lsl	x13, x13, #40
   1fe70:	b	1fa90 <PyInit__decimal@@Base+0x5510>
   1fe74:	mov	w1, #0xffffffff            	// #-1
   1fe78:	mov	w2, w20
   1fe7c:	mov	x0, x25
   1fe80:	bl	38c40 <PyInit__decimal@@Base+0x1e6c0>
   1fe84:	sub	x6, x24, #0x2
   1fe88:	mov	x5, x24
   1fe8c:	and	x6, x6, #0xfffffffffffffffe
   1fe90:	and	x1, x19, #0x400000000
   1fe94:	add	x8, x23, #0x10
   1fe98:	mov	x7, #0x1                   	// #1
   1fe9c:	mov	x3, x0
   1fea0:	mov	x4, x7
   1fea4:	mov	x2, #0x1                   	// #1
   1fea8:	b	1ff9c <PyInit__decimal@@Base+0x5a1c>
   1feac:	mul	x12, x2, x3
   1feb0:	umulh	x2, x2, x3
   1feb4:	subs	x3, x12, x2
   1feb8:	cbnz	x22, 203bc <PyInit__decimal@@Base+0x5e3c>
   1febc:	cmp	x12, x2
   1fec0:	cset	x12, cc  // cc = lo, ul, last
   1fec4:	cbz	x1, 20404 <PyInit__decimal@@Base+0x5e84>
   1fec8:	lsr	x10, x2, #30
   1fecc:	lsl	x2, x2, #34
   1fed0:	adds	x2, x2, x3
   1fed4:	sub	x10, x10, x12
   1fed8:	cinc	x10, x10, cs  // cs = hs, nlast
   1fedc:	subs	x12, x2, x10
   1fee0:	cmp	x2, x10
   1fee4:	lsr	x3, x10, #30
   1fee8:	lsl	x10, x10, #34
   1feec:	sbc	x3, x3, xzr
   1fef0:	adds	x10, x12, x10
   1fef4:	cinc	x3, x3, cs  // cs = hs, nlast
   1fef8:	subs	x2, x10, x3
   1fefc:	cmp	x10, x3
   1ff00:	lsr	x10, x3, #30
   1ff04:	lsl	x3, x3, #34
   1ff08:	sbc	x10, x10, xzr
   1ff0c:	adds	x3, x2, x3
   1ff10:	cinc	x10, x10, cs  // cs = hs, nlast
   1ff14:	sub	x2, x3, x19
   1ff18:	cmp	x10, #0x0
   1ff1c:	ccmp	x19, x3, #0x0, eq  // eq = none
   1ff20:	csel	x2, x2, x3, ls  // ls = plast
   1ff24:	subs	x10, x11, x9
   1ff28:	cmp	x11, x9
   1ff2c:	cset	x11, cc  // cc = lo, ul, last
   1ff30:	cbz	x1, 20378 <PyInit__decimal@@Base+0x5df8>
   1ff34:	lsr	x3, x9, #30
   1ff38:	lsl	x9, x9, #34
   1ff3c:	adds	x9, x9, x10
   1ff40:	sub	x3, x3, x11
   1ff44:	cinc	x3, x3, cs  // cs = hs, nlast
   1ff48:	subs	x10, x9, x3
   1ff4c:	cmp	x9, x3
   1ff50:	lsr	x9, x3, #30
   1ff54:	lsl	x3, x3, #34
   1ff58:	sbc	x9, x9, xzr
   1ff5c:	adds	x10, x10, x3
   1ff60:	cinc	x9, x9, cs  // cs = hs, nlast
   1ff64:	subs	x3, x10, x9
   1ff68:	cmp	x10, x9
   1ff6c:	lsr	x10, x9, #30
   1ff70:	lsl	x9, x9, #34
   1ff74:	sbc	x10, x10, xzr
   1ff78:	adds	x9, x3, x9
   1ff7c:	cinc	x10, x10, cs  // cs = hs, nlast
   1ff80:	sub	x3, x9, x19
   1ff84:	cmp	x10, #0x0
   1ff88:	ccmp	x19, x9, #0x0, eq  // eq = none
   1ff8c:	csel	x3, x3, x9, ls  // ls = plast
   1ff90:	cmp	x4, #0x1
   1ff94:	b.eq	20000 <PyInit__decimal@@Base+0x5a80>  // b.none
   1ff98:	mov	x4, #0x1                   	// #1
   1ff9c:	mul	x11, x3, x3
   1ffa0:	cmp	x4, #0x1
   1ffa4:	umulh	x9, x3, x3
   1ffa8:	b.eq	1feac <PyInit__decimal@@Base+0x592c>  // b.none
   1ffac:	cbz	x22, 1ff24 <PyInit__decimal@@Base+0x59a4>
   1ffb0:	subs	x3, x11, x9
   1ffb4:	lsr	x10, x9, #32
   1ffb8:	cmp	x11, x9
   1ffbc:	lsl	x9, x9, #32
   1ffc0:	sbc	x10, x10, xzr
   1ffc4:	adds	x9, x3, x9
   1ffc8:	cinc	x10, x10, cs  // cs = hs, nlast
   1ffcc:	subs	x3, x9, x10
   1ffd0:	cmp	x9, x10
   1ffd4:	lsr	x9, x10, #32
   1ffd8:	lsl	x10, x10, #32
   1ffdc:	sbc	x9, x9, xzr
   1ffe0:	adds	x10, x3, x10
   1ffe4:	cinc	x9, x9, cs  // cs = hs, nlast
   1ffe8:	sub	x3, x10, x19
   1ffec:	cmp	x9, #0x0
   1fff0:	ccmp	x19, x10, #0x0, eq  // eq = none
   1fff4:	csel	x3, x3, x10, ls  // ls = plast
   1fff8:	cmp	x4, #0x1
   1fffc:	b.ne	1ff98 <PyInit__decimal@@Base+0x5a18>  // b.any
   20000:	mul	x9, x2, x2
   20004:	umulh	x3, x2, x2
   20008:	subs	x10, x9, x3
   2000c:	cmp	x9, x3
   20010:	cset	x11, cc  // cc = lo, ul, last
   20014:	cbnz	x22, 20654 <PyInit__decimal@@Base+0x60d4>
   20018:	cbz	x1, 20698 <PyInit__decimal@@Base+0x6118>
   2001c:	lsr	x9, x3, #30
   20020:	lsl	x3, x3, #34
   20024:	adds	x3, x3, x10
   20028:	sub	x9, x9, x11
   2002c:	cinc	x9, x9, cs  // cs = hs, nlast
   20030:	subs	x10, x3, x9
   20034:	cmp	x3, x9
   20038:	lsr	x3, x9, #30
   2003c:	lsl	x9, x9, #34
   20040:	sbc	x3, x3, xzr
   20044:	adds	x9, x10, x9
   20048:	cinc	x3, x3, cs  // cs = hs, nlast
   2004c:	subs	x11, x9, x3
   20050:	cmp	x9, x3
   20054:	lsr	x9, x3, #30
   20058:	lsl	x3, x3, #34
   2005c:	sbc	x9, x9, xzr
   20060:	adds	x3, x11, x3
   20064:	cinc	x9, x9, cs  // cs = hs, nlast
   20068:	sub	x11, x3, x19
   2006c:	cmp	x9, #0x0
   20070:	ccmp	x19, x3, #0x0, eq  // eq = none
   20074:	csel	x11, x11, x3, ls  // ls = plast
   20078:	cmp	x24, #0x1
   2007c:	b.eq	205f8 <PyInit__decimal@@Base+0x6078>  // b.none
   20080:	add	x12, x5, x6
   20084:	add	x10, x23, x5, lsl #3
   20088:	add	x12, x8, x12, lsl #3
   2008c:	b	20244 <PyInit__decimal@@Base+0x5cc4>
   20090:	cbz	x1, 20448 <PyInit__decimal@@Base+0x5ec8>
   20094:	lsr	x13, x3, #30
   20098:	lsl	x3, x3, #34
   2009c:	adds	x3, x3, x14
   200a0:	sub	x13, x13, x15
   200a4:	cinc	x13, x13, cs  // cs = hs, nlast
   200a8:	mul	x15, x9, x2
   200ac:	subs	x17, x3, x13
   200b0:	umulh	x9, x9, x2
   200b4:	cmp	x3, x13
   200b8:	lsr	x14, x13, #30
   200bc:	lsl	x13, x13, #34
   200c0:	sbc	x14, x14, xzr
   200c4:	adds	x17, x17, x13
   200c8:	lsl	x16, x9, #34
   200cc:	cinc	x14, x14, cs  // cs = hs, nlast
   200d0:	lsr	x3, x9, #30
   200d4:	subs	x13, x17, x14
   200d8:	mul	x26, x4, x11
   200dc:	cmp	x17, x14
   200e0:	lsr	x17, x14, #30
   200e4:	lsl	x14, x14, #34
   200e8:	sbc	x17, x17, xzr
   200ec:	adds	x13, x13, x14
   200f0:	umulh	x4, x4, x11
   200f4:	cinc	x17, x17, cs  // cs = hs, nlast
   200f8:	sub	x18, x13, x19
   200fc:	cmp	x17, #0x0
   20100:	mul	x17, x2, x11
   20104:	ccmp	x19, x13, #0x0, eq  // eq = none
   20108:	lsr	x14, x4, #30
   2010c:	csel	x13, x18, x13, ls  // ls = plast
   20110:	subs	x18, x15, x9
   20114:	cmp	x15, x9
   20118:	lsl	x30, x4, #34
   2011c:	sbc	x3, x3, xzr
   20120:	adds	x15, x18, x16
   20124:	cinc	x3, x3, cs  // cs = hs, nlast
   20128:	umulh	x2, x2, x11
   2012c:	subs	x9, x15, x3
   20130:	cmp	x15, x3
   20134:	lsr	x16, x3, #30
   20138:	lsl	x3, x3, #34
   2013c:	sbc	x16, x16, xzr
   20140:	adds	x3, x9, x3
   20144:	lsl	x18, x2, #34
   20148:	cinc	x16, x16, cs  // cs = hs, nlast
   2014c:	lsr	x9, x2, #30
   20150:	subs	x15, x3, x16
   20154:	cmp	x3, x16
   20158:	lsr	x27, x16, #30
   2015c:	lsl	x16, x16, #34
   20160:	sbc	x27, x27, xzr
   20164:	adds	x16, x15, x16
   20168:	cinc	x27, x27, cs  // cs = hs, nlast
   2016c:	sub	x15, x16, x19
   20170:	cmp	x27, #0x0
   20174:	ccmp	x19, x16, #0x0, eq  // eq = none
   20178:	csel	x15, x15, x16, ls  // ls = plast
   2017c:	subs	x3, x26, x4
   20180:	cmp	x26, x4
   20184:	sbc	x14, x14, xzr
   20188:	adds	x30, x3, x30
   2018c:	cinc	x14, x14, cs  // cs = hs, nlast
   20190:	subs	x4, x30, x14
   20194:	cmp	x30, x14
   20198:	lsr	x3, x14, #30
   2019c:	lsl	x14, x14, #34
   201a0:	sbc	x3, x3, xzr
   201a4:	adds	x14, x4, x14
   201a8:	cinc	x3, x3, cs  // cs = hs, nlast
   201ac:	subs	x4, x14, x3
   201b0:	cmp	x14, x3
   201b4:	lsr	x14, x3, #30
   201b8:	lsl	x3, x3, #34
   201bc:	sbc	x14, x14, xzr
   201c0:	adds	x3, x4, x3
   201c4:	cinc	x14, x14, cs  // cs = hs, nlast
   201c8:	sub	x4, x3, x19
   201cc:	cmp	x14, #0x0
   201d0:	ccmp	x19, x3, #0x0, eq  // eq = none
   201d4:	csel	x4, x4, x3, ls  // ls = plast
   201d8:	subs	x3, x17, x2
   201dc:	cmp	x17, x2
   201e0:	sbc	x9, x9, xzr
   201e4:	adds	x18, x3, x18
   201e8:	cinc	x9, x9, cs  // cs = hs, nlast
   201ec:	subs	x2, x18, x9
   201f0:	cmp	x18, x9
   201f4:	lsr	x3, x9, #30
   201f8:	lsl	x9, x9, #34
   201fc:	sbc	x3, x3, xzr
   20200:	adds	x9, x2, x9
   20204:	cinc	x3, x3, cs  // cs = hs, nlast
   20208:	subs	x2, x9, x3
   2020c:	cmp	x9, x3
   20210:	lsr	x9, x3, #30
   20214:	lsl	x3, x3, #34
   20218:	sbc	x9, x9, xzr
   2021c:	adds	x3, x2, x3
   20220:	cinc	x9, x9, cs  // cs = hs, nlast
   20224:	stp	x13, x15, [x10]
   20228:	cmp	x9, #0x0
   2022c:	ccmp	x19, x3, #0x0, eq  // eq = none
   20230:	sub	x2, x3, x19
   20234:	add	x10, x10, #0x10
   20238:	csel	x2, x2, x3, ls  // ls = plast
   2023c:	cmp	x12, x10
   20240:	b.eq	205f8 <PyInit__decimal@@Base+0x6078>  // b.none
   20244:	ldp	x3, x9, [x10]
   20248:	mul	x13, x4, x3
   2024c:	umulh	x3, x4, x3
   20250:	subs	x14, x13, x3
   20254:	cmp	x13, x3
   20258:	cset	x15, cc  // cc = lo, ul, last
   2025c:	cbz	x22, 20090 <PyInit__decimal@@Base+0x5b10>
   20260:	lsr	x13, x3, #32
   20264:	lsl	x3, x3, #32
   20268:	adds	x3, x3, x14
   2026c:	sub	x13, x13, x15
   20270:	cinc	x13, x13, cs  // cs = hs, nlast
   20274:	mul	x15, x9, x2
   20278:	subs	x14, x3, x13
   2027c:	umulh	x9, x9, x2
   20280:	cmp	x3, x13
   20284:	lsr	x16, x13, #32
   20288:	lsl	x13, x13, #32
   2028c:	sbc	x16, x16, xzr
   20290:	adds	x13, x14, x13
   20294:	lsr	x3, x9, #32
   20298:	cinc	x16, x16, cs  // cs = hs, nlast
   2029c:	sub	x14, x13, x19
   202a0:	cmp	x16, #0x0
   202a4:	lsl	x16, x9, #32
   202a8:	ccmp	x19, x13, #0x0, eq  // eq = none
   202ac:	mul	x17, x4, x11
   202b0:	csel	x13, x14, x13, ls  // ls = plast
   202b4:	subs	x14, x15, x9
   202b8:	cmp	x15, x9
   202bc:	umulh	x4, x4, x11
   202c0:	sbc	x3, x3, xzr
   202c4:	adds	x14, x14, x16
   202c8:	cinc	x3, x3, cs  // cs = hs, nlast
   202cc:	mul	x16, x11, x2
   202d0:	subs	x15, x14, x3
   202d4:	lsr	x9, x4, #32
   202d8:	cmp	x14, x3
   202dc:	lsr	x18, x3, #32
   202e0:	lsl	x3, x3, #32
   202e4:	sbc	x18, x18, xzr
   202e8:	adds	x3, x15, x3
   202ec:	lsl	x26, x4, #32
   202f0:	cinc	x18, x18, cs  // cs = hs, nlast
   202f4:	sub	x15, x3, x19
   202f8:	cmp	x18, #0x0
   202fc:	umulh	x2, x11, x2
   20300:	ccmp	x19, x3, #0x0, eq  // eq = none
   20304:	csel	x15, x15, x3, ls  // ls = plast
   20308:	subs	x14, x17, x4
   2030c:	cmp	x17, x4
   20310:	lsr	x3, x2, #32
   20314:	sbc	x9, x9, xzr
   20318:	adds	x14, x14, x26
   2031c:	cinc	x9, x9, cs  // cs = hs, nlast
   20320:	lsl	x17, x2, #32
   20324:	subs	x4, x14, x9
   20328:	cmp	x14, x9
   2032c:	lsr	x14, x9, #32
   20330:	lsl	x9, x9, #32
   20334:	sbc	x14, x14, xzr
   20338:	adds	x9, x4, x9
   2033c:	cinc	x14, x14, cs  // cs = hs, nlast
   20340:	sub	x4, x9, x19
   20344:	cmp	x14, #0x0
   20348:	ccmp	x19, x9, #0x0, eq  // eq = none
   2034c:	csel	x4, x4, x9, ls  // ls = plast
   20350:	subs	x9, x16, x2
   20354:	cmp	x16, x2
   20358:	sbc	x3, x3, xzr
   2035c:	adds	x9, x9, x17
   20360:	cinc	x3, x3, cs  // cs = hs, nlast
   20364:	subs	x2, x9, x3
   20368:	cmp	x9, x3
   2036c:	lsr	x9, x3, #32
   20370:	lsl	x3, x3, #32
   20374:	b	20218 <PyInit__decimal@@Base+0x5c98>
   20378:	lsr	x3, x9, #24
   2037c:	lsl	x9, x9, #40
   20380:	adds	x9, x9, x10
   20384:	sub	x3, x3, x11
   20388:	cinc	x3, x3, cs  // cs = hs, nlast
   2038c:	subs	x10, x9, x3
   20390:	cmp	x9, x3
   20394:	lsr	x9, x3, #24
   20398:	lsl	x3, x3, #40
   2039c:	sbc	x9, x9, xzr
   203a0:	adds	x10, x10, x3
   203a4:	cinc	x9, x9, cs  // cs = hs, nlast
   203a8:	subs	x3, x10, x9
   203ac:	cmp	x10, x9
   203b0:	lsr	x10, x9, #24
   203b4:	lsl	x9, x9, #40
   203b8:	b	1ff74 <PyInit__decimal@@Base+0x59f4>
   203bc:	cmp	x12, x2
   203c0:	lsr	x10, x2, #32
   203c4:	lsl	x2, x2, #32
   203c8:	sbc	x10, x10, xzr
   203cc:	adds	x3, x3, x2
   203d0:	cinc	x10, x10, cs  // cs = hs, nlast
   203d4:	subs	x2, x3, x10
   203d8:	cmp	x3, x10
   203dc:	lsr	x3, x10, #32
   203e0:	lsl	x10, x10, #32
   203e4:	sbc	x3, x3, xzr
   203e8:	adds	x10, x2, x10
   203ec:	cinc	x3, x3, cs  // cs = hs, nlast
   203f0:	sub	x2, x10, x19
   203f4:	cmp	x3, #0x0
   203f8:	ccmp	x19, x10, #0x0, eq  // eq = none
   203fc:	csel	x2, x2, x10, ls  // ls = plast
   20400:	b	1ffb0 <PyInit__decimal@@Base+0x5a30>
   20404:	lsr	x10, x2, #24
   20408:	lsl	x2, x2, #40
   2040c:	adds	x2, x2, x3
   20410:	sub	x10, x10, x12
   20414:	cinc	x10, x10, cs  // cs = hs, nlast
   20418:	subs	x12, x2, x10
   2041c:	cmp	x2, x10
   20420:	lsr	x3, x10, #24
   20424:	lsl	x10, x10, #40
   20428:	sbc	x3, x3, xzr
   2042c:	adds	x10, x12, x10
   20430:	cinc	x3, x3, cs  // cs = hs, nlast
   20434:	subs	x2, x10, x3
   20438:	cmp	x10, x3
   2043c:	lsr	x10, x3, #24
   20440:	lsl	x3, x3, #40
   20444:	b	1ff08 <PyInit__decimal@@Base+0x5988>
   20448:	lsr	x13, x3, #24
   2044c:	lsl	x3, x3, #40
   20450:	adds	x3, x3, x14
   20454:	sub	x13, x13, x15
   20458:	cinc	x13, x13, cs  // cs = hs, nlast
   2045c:	mul	x15, x2, x9
   20460:	subs	x16, x3, x13
   20464:	umulh	x9, x2, x9
   20468:	cmp	x3, x13
   2046c:	lsr	x14, x13, #24
   20470:	lsl	x13, x13, #40
   20474:	sbc	x14, x14, xzr
   20478:	adds	x16, x16, x13
   2047c:	lsr	x3, x9, #24
   20480:	cinc	x14, x14, cs  // cs = hs, nlast
   20484:	lsl	x30, x9, #40
   20488:	subs	x13, x16, x14
   2048c:	mul	x18, x4, x11
   20490:	cmp	x16, x14
   20494:	lsr	x16, x14, #24
   20498:	lsl	x14, x14, #40
   2049c:	sbc	x16, x16, xzr
   204a0:	adds	x14, x13, x14
   204a4:	umulh	x4, x4, x11
   204a8:	cinc	x16, x16, cs  // cs = hs, nlast
   204ac:	sub	x13, x14, x19
   204b0:	cmp	x16, #0x0
   204b4:	mul	x17, x2, x11
   204b8:	ccmp	x19, x14, #0x0, eq  // eq = none
   204bc:	lsr	x16, x4, #24
   204c0:	csel	x13, x13, x14, ls  // ls = plast
   204c4:	subs	x14, x15, x9
   204c8:	cmp	x15, x9
   204cc:	lsl	x26, x4, #40
   204d0:	sbc	x3, x3, xzr
   204d4:	adds	x9, x14, x30
   204d8:	cinc	x3, x3, cs  // cs = hs, nlast
   204dc:	umulh	x2, x2, x11
   204e0:	subs	x14, x9, x3
   204e4:	cmp	x9, x3
   204e8:	lsr	x9, x3, #24
   204ec:	lsl	x3, x3, #40
   204f0:	sbc	x9, x9, xzr
   204f4:	adds	x3, x14, x3
   204f8:	lsl	x30, x2, #40
   204fc:	cinc	x9, x9, cs  // cs = hs, nlast
   20500:	lsr	x14, x2, #24
   20504:	subs	x15, x3, x9
   20508:	cmp	x3, x9
   2050c:	lsr	x27, x9, #24
   20510:	lsl	x9, x9, #40
   20514:	sbc	x27, x27, xzr
   20518:	adds	x9, x15, x9
   2051c:	cinc	x27, x27, cs  // cs = hs, nlast
   20520:	sub	x15, x9, x19
   20524:	cmp	x27, #0x0
   20528:	ccmp	x19, x9, #0x0, eq  // eq = none
   2052c:	csel	x15, x15, x9, ls  // ls = plast
   20530:	subs	x3, x18, x4
   20534:	cmp	x18, x4
   20538:	stp	x13, x15, [x10]
   2053c:	sbc	x16, x16, xzr
   20540:	adds	x26, x3, x26
   20544:	add	x10, x10, #0x10
   20548:	cinc	x16, x16, cs  // cs = hs, nlast
   2054c:	subs	x3, x26, x16
   20550:	cmp	x26, x16
   20554:	lsr	x9, x16, #24
   20558:	lsl	x16, x16, #40
   2055c:	sbc	x9, x9, xzr
   20560:	adds	x16, x3, x16
   20564:	cinc	x9, x9, cs  // cs = hs, nlast
   20568:	subs	x4, x16, x9
   2056c:	cmp	x16, x9
   20570:	lsr	x3, x9, #24
   20574:	lsl	x9, x9, #40
   20578:	sbc	x3, x3, xzr
   2057c:	adds	x9, x4, x9
   20580:	cinc	x3, x3, cs  // cs = hs, nlast
   20584:	sub	x4, x9, x19
   20588:	cmp	x3, #0x0
   2058c:	ccmp	x19, x9, #0x0, eq  // eq = none
   20590:	csel	x4, x4, x9, ls  // ls = plast
   20594:	subs	x3, x17, x2
   20598:	cmp	x17, x2
   2059c:	sbc	x14, x14, xzr
   205a0:	adds	x30, x3, x30
   205a4:	cinc	x14, x14, cs  // cs = hs, nlast
   205a8:	subs	x2, x30, x14
   205ac:	cmp	x30, x14
   205b0:	lsr	x9, x14, #24
   205b4:	lsl	x14, x14, #40
   205b8:	sbc	x9, x9, xzr
   205bc:	adds	x14, x2, x14
   205c0:	cinc	x9, x9, cs  // cs = hs, nlast
   205c4:	subs	x2, x14, x9
   205c8:	cmp	x14, x9
   205cc:	lsr	x3, x9, #24
   205d0:	lsl	x9, x9, #40
   205d4:	sbc	x3, x3, xzr
   205d8:	adds	x9, x2, x9
   205dc:	cinc	x3, x3, cs  // cs = hs, nlast
   205e0:	sub	x2, x9, x19
   205e4:	cmp	x3, #0x0
   205e8:	ccmp	x19, x9, #0x0, eq  // eq = none
   205ec:	csel	x2, x2, x9, ls  // ls = plast
   205f0:	cmp	x12, x10
   205f4:	b.ne	20244 <PyInit__decimal@@Base+0x5cc4>  // b.any
   205f8:	add	x5, x5, x24
   205fc:	cmp	x7, #0x2
   20600:	b.eq	2060c <PyInit__decimal@@Base+0x608c>  // b.none
   20604:	mov	x7, #0x2                   	// #2
   20608:	b	1fe9c <PyInit__decimal@@Base+0x591c>
   2060c:	add	x25, x23, x25, lsl #3
   20610:	b	2062c <PyInit__decimal@@Base+0x60ac>
   20614:	mov	x0, x23
   20618:	mov	w2, w20
   2061c:	mov	x1, x24
   20620:	add	x23, x23, x21
   20624:	bl	39578 <PyInit__decimal@@Base+0x1eff8>
   20628:	cbz	w0, 20638 <PyInit__decimal@@Base+0x60b8>
   2062c:	cmp	x23, x25
   20630:	b.cc	20614 <PyInit__decimal@@Base+0x6094>  // b.lo, b.ul, b.last
   20634:	mov	w0, #0x1                   	// #1
   20638:	ldp	x19, x20, [sp, #16]
   2063c:	ldp	x21, x22, [sp, #32]
   20640:	ldp	x23, x24, [sp, #48]
   20644:	ldp	x25, x26, [sp, #64]
   20648:	ldr	x27, [sp, #80]
   2064c:	ldp	x29, x30, [sp], #128
   20650:	ret
   20654:	lsr	x9, x3, #32
   20658:	lsl	x3, x3, #32
   2065c:	adds	x3, x3, x10
   20660:	sub	x9, x9, x11
   20664:	cinc	x9, x9, cs  // cs = hs, nlast
   20668:	subs	x11, x3, x9
   2066c:	cmp	x3, x9
   20670:	lsr	x3, x9, #32
   20674:	lsl	x9, x9, #32
   20678:	sbc	x3, x3, xzr
   2067c:	adds	x9, x11, x9
   20680:	cinc	x3, x3, cs  // cs = hs, nlast
   20684:	sub	x11, x9, x19
   20688:	cmp	x3, #0x0
   2068c:	ccmp	x19, x9, #0x0, eq  // eq = none
   20690:	csel	x11, x11, x9, ls  // ls = plast
   20694:	b	20078 <PyInit__decimal@@Base+0x5af8>
   20698:	lsr	x9, x3, #24
   2069c:	lsl	x3, x3, #40
   206a0:	adds	x3, x3, x10
   206a4:	sub	x9, x9, x11
   206a8:	cinc	x9, x9, cs  // cs = hs, nlast
   206ac:	subs	x10, x3, x9
   206b0:	cmp	x3, x9
   206b4:	lsr	x3, x9, #24
   206b8:	lsl	x9, x9, #40
   206bc:	sbc	x3, x3, xzr
   206c0:	adds	x9, x10, x9
   206c4:	cinc	x3, x3, cs  // cs = hs, nlast
   206c8:	subs	x11, x9, x3
   206cc:	cmp	x9, x3
   206d0:	lsr	x9, x3, #24
   206d4:	lsl	x3, x3, #40
   206d8:	b	2005c <PyInit__decimal@@Base+0x5adc>
   206dc:	nop
   206e0:	stp	x29, x30, [sp, #-112]!
   206e4:	mov	x29, sp
   206e8:	stp	x23, x24, [sp, #48]
   206ec:	mov	x24, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
   206f0:	movk	x24, #0xaaab
   206f4:	stp	x19, x20, [sp, #16]
   206f8:	add	x23, x0, x1, lsl #3
   206fc:	umulh	x24, x1, x24
   20700:	stp	x21, x22, [sp, #32]
   20704:	mov	x19, x0
   20708:	mov	x22, x1
   2070c:	lsr	x24, x24, #1
   20710:	str	x25, [sp, #64]
   20714:	mov	x21, x0
   20718:	cmp	x0, x23
   2071c:	lsl	x20, x24, #3
   20720:	mov	w25, w2
   20724:	b.cc	20734 <PyInit__decimal@@Base+0x61b4>  // b.lo, b.ul, b.last
   20728:	b	20764 <PyInit__decimal@@Base+0x61e4>
   2072c:	cmp	x19, x23
   20730:	b.cs	20764 <PyInit__decimal@@Base+0x61e4>  // b.hs, b.nlast
   20734:	mov	x0, x19
   20738:	mov	w2, w25
   2073c:	mov	x1, x24
   20740:	add	x19, x19, x20
   20744:	bl	39fc0 <PyInit__decimal@@Base+0x1fa40>
   20748:	cbnz	w0, 2072c <PyInit__decimal@@Base+0x61ac>
   2074c:	ldp	x19, x20, [sp, #16]
   20750:	ldp	x21, x22, [sp, #32]
   20754:	ldp	x23, x24, [sp, #48]
   20758:	ldr	x25, [sp, #64]
   2075c:	ldp	x29, x30, [sp], #112
   20760:	ret
   20764:	adrp	x3, 42000 <PyInit__decimal@@Base+0x27a80>
   20768:	add	x3, x3, #0x5a8
   2076c:	mov	w2, w25
   20770:	mov	x0, x22
   20774:	mov	w1, #0x1                   	// #1
   20778:	ldr	x19, [x3, w25, sxtw #3]
   2077c:	bl	38c40 <PyInit__decimal@@Base+0x1e6c0>
   20780:	mov	x5, x24
   20784:	mov	x6, #0x1                   	// #1
   20788:	and	x23, x19, #0x100000000
   2078c:	and	x2, x19, #0x400000000
   20790:	mov	x3, x0
   20794:	mov	x4, x6
   20798:	mov	x1, #0x1                   	// #1
   2079c:	b	20890 <PyInit__decimal@@Base+0x6310>
   207a0:	mul	x10, x1, x3
   207a4:	umulh	x1, x1, x3
   207a8:	subs	x3, x10, x1
   207ac:	cbnz	x23, 20cb0 <PyInit__decimal@@Base+0x6730>
   207b0:	cmp	x10, x1
   207b4:	cset	x10, cc  // cc = lo, ul, last
   207b8:	cbz	x2, 20cf8 <PyInit__decimal@@Base+0x6778>
   207bc:	lsr	x8, x1, #30
   207c0:	lsl	x1, x1, #34
   207c4:	adds	x1, x1, x3
   207c8:	sub	x8, x8, x10
   207cc:	cinc	x8, x8, cs  // cs = hs, nlast
   207d0:	subs	x10, x1, x8
   207d4:	cmp	x1, x8
   207d8:	lsr	x3, x8, #30
   207dc:	lsl	x8, x8, #34
   207e0:	sbc	x3, x3, xzr
   207e4:	adds	x8, x10, x8
   207e8:	cinc	x3, x3, cs  // cs = hs, nlast
   207ec:	subs	x1, x8, x3
   207f0:	cmp	x8, x3
   207f4:	lsr	x8, x3, #30
   207f8:	lsl	x3, x3, #34
   207fc:	sbc	x8, x8, xzr
   20800:	adds	x3, x1, x3
   20804:	cinc	x8, x8, cs  // cs = hs, nlast
   20808:	sub	x1, x3, x19
   2080c:	cmp	x8, #0x0
   20810:	ccmp	x19, x3, #0x0, eq  // eq = none
   20814:	csel	x1, x1, x3, ls  // ls = plast
   20818:	subs	x8, x9, x7
   2081c:	cmp	x9, x7
   20820:	cset	x9, cc  // cc = lo, ul, last
   20824:	cbz	x2, 20c6c <PyInit__decimal@@Base+0x66ec>
   20828:	lsr	x3, x7, #30
   2082c:	lsl	x7, x7, #34
   20830:	adds	x7, x7, x8
   20834:	sub	x3, x3, x9
   20838:	cinc	x3, x3, cs  // cs = hs, nlast
   2083c:	subs	x8, x7, x3
   20840:	cmp	x7, x3
   20844:	lsr	x7, x3, #30
   20848:	lsl	x3, x3, #34
   2084c:	sbc	x7, x7, xzr
   20850:	adds	x8, x8, x3
   20854:	cinc	x7, x7, cs  // cs = hs, nlast
   20858:	subs	x3, x8, x7
   2085c:	cmp	x8, x7
   20860:	lsr	x8, x7, #30
   20864:	lsl	x7, x7, #34
   20868:	sbc	x8, x8, xzr
   2086c:	adds	x7, x3, x7
   20870:	cinc	x8, x8, cs  // cs = hs, nlast
   20874:	sub	x3, x7, x19
   20878:	cmp	x8, #0x0
   2087c:	ccmp	x19, x7, #0x0, eq  // eq = none
   20880:	csel	x3, x3, x7, ls  // ls = plast
   20884:	cmp	x4, #0x1
   20888:	b.eq	208f4 <PyInit__decimal@@Base+0x6374>  // b.none
   2088c:	mov	x4, #0x1                   	// #1
   20890:	mul	x9, x3, x3
   20894:	cmp	x4, #0x1
   20898:	umulh	x7, x3, x3
   2089c:	b.eq	207a0 <PyInit__decimal@@Base+0x6220>  // b.none
   208a0:	cbz	x23, 20818 <PyInit__decimal@@Base+0x6298>
   208a4:	subs	x3, x9, x7
   208a8:	lsr	x8, x7, #32
   208ac:	cmp	x9, x7
   208b0:	lsl	x7, x7, #32
   208b4:	sbc	x8, x8, xzr
   208b8:	adds	x7, x3, x7
   208bc:	cinc	x8, x8, cs  // cs = hs, nlast
   208c0:	subs	x3, x7, x8
   208c4:	cmp	x7, x8
   208c8:	lsr	x7, x8, #32
   208cc:	lsl	x8, x8, #32
   208d0:	sbc	x7, x7, xzr
   208d4:	adds	x8, x3, x8
   208d8:	cinc	x7, x7, cs  // cs = hs, nlast
   208dc:	sub	x3, x8, x19
   208e0:	cmp	x7, #0x0
   208e4:	ccmp	x19, x8, #0x0, eq  // eq = none
   208e8:	csel	x3, x3, x8, ls  // ls = plast
   208ec:	cmp	x4, #0x1
   208f0:	b.ne	2088c <PyInit__decimal@@Base+0x630c>  // b.any
   208f4:	mul	x7, x1, x1
   208f8:	umulh	x3, x1, x1
   208fc:	subs	x8, x7, x3
   20900:	cmp	x7, x3
   20904:	cset	x9, cc  // cc = lo, ul, last
   20908:	cbnz	x23, 21458 <PyInit__decimal@@Base+0x6ed8>
   2090c:	cbnz	x2, 20d3c <PyInit__decimal@@Base+0x67bc>
   20910:	lsr	x7, x3, #24
   20914:	lsl	x3, x3, #40
   20918:	adds	x3, x3, x8
   2091c:	sub	x7, x7, x9
   20920:	cinc	x7, x7, cs  // cs = hs, nlast
   20924:	subs	x8, x3, x7
   20928:	cmp	x3, x7
   2092c:	lsr	x3, x7, #24
   20930:	lsl	x7, x7, #40
   20934:	sbc	x3, x3, xzr
   20938:	adds	x7, x8, x7
   2093c:	cinc	x3, x3, cs  // cs = hs, nlast
   20940:	subs	x9, x7, x3
   20944:	cmp	x7, x3
   20948:	lsr	x7, x3, #24
   2094c:	lsl	x3, x3, #40
   20950:	sbc	x7, x7, xzr
   20954:	adds	x3, x9, x3
   20958:	cinc	x7, x7, cs  // cs = hs, nlast
   2095c:	sub	x9, x3, x19
   20960:	cmp	x7, #0x0
   20964:	ccmp	x19, x3, #0x0, eq  // eq = none
   20968:	csel	x9, x9, x3, ls  // ls = plast
   2096c:	cmp	x22, #0x2
   20970:	add	x8, x21, x5, lsl #3
   20974:	mov	x10, #0x0                   	// #0
   20978:	b.hi	20b38 <PyInit__decimal@@Base+0x65b8>  // b.pmore
   2097c:	b	20f34 <PyInit__decimal@@Base+0x69b4>
   20980:	cbz	x2, 20d80 <PyInit__decimal@@Base+0x6800>
   20984:	lsr	x11, x3, #30
   20988:	lsl	x3, x3, #34
   2098c:	adds	x3, x3, x12
   20990:	sub	x11, x11, x13
   20994:	cinc	x11, x11, cs  // cs = hs, nlast
   20998:	mul	x14, x7, x1
   2099c:	subs	x13, x3, x11
   209a0:	umulh	x7, x7, x1
   209a4:	cmp	x3, x11
   209a8:	lsr	x12, x11, #30
   209ac:	lsl	x11, x11, #34
   209b0:	sbc	x12, x12, xzr
   209b4:	adds	x13, x13, x11
   209b8:	lsl	x16, x7, #34
   209bc:	cinc	x12, x12, cs  // cs = hs, nlast
   209c0:	lsr	x3, x7, #30
   209c4:	subs	x11, x13, x12
   209c8:	mul	x17, x4, x9
   209cc:	cmp	x13, x12
   209d0:	lsr	x13, x12, #30
   209d4:	lsl	x12, x12, #34
   209d8:	sbc	x13, x13, xzr
   209dc:	adds	x11, x11, x12
   209e0:	umulh	x4, x4, x9
   209e4:	cinc	x13, x13, cs  // cs = hs, nlast
   209e8:	sub	x18, x11, x19
   209ec:	cmp	x13, #0x0
   209f0:	mul	x15, x9, x1
   209f4:	ccmp	x19, x11, #0x0, eq  // eq = none
   209f8:	lsr	x12, x4, #30
   209fc:	csel	x11, x18, x11, ls  // ls = plast
   20a00:	subs	x13, x14, x7
   20a04:	cmp	x14, x7
   20a08:	lsl	x18, x4, #34
   20a0c:	sbc	x3, x3, xzr
   20a10:	adds	x13, x13, x16
   20a14:	cinc	x3, x3, cs  // cs = hs, nlast
   20a18:	umulh	x1, x9, x1
   20a1c:	subs	x7, x13, x3
   20a20:	cmp	x13, x3
   20a24:	lsr	x13, x3, #30
   20a28:	lsl	x3, x3, #34
   20a2c:	sbc	x13, x13, xzr
   20a30:	adds	x3, x7, x3
   20a34:	lsl	x16, x1, #34
   20a38:	cinc	x13, x13, cs  // cs = hs, nlast
   20a3c:	lsr	x7, x1, #30
   20a40:	subs	x14, x3, x13
   20a44:	cmp	x3, x13
   20a48:	lsr	x30, x13, #30
   20a4c:	lsl	x13, x13, #34
   20a50:	sbc	x30, x30, xzr
   20a54:	adds	x13, x14, x13
   20a58:	cinc	x30, x30, cs  // cs = hs, nlast
   20a5c:	sub	x14, x13, x19
   20a60:	cmp	x30, #0x0
   20a64:	ccmp	x19, x13, #0x0, eq  // eq = none
   20a68:	csel	x14, x14, x13, ls  // ls = plast
   20a6c:	subs	x3, x17, x4
   20a70:	cmp	x17, x4
   20a74:	sbc	x12, x12, xzr
   20a78:	adds	x3, x3, x18
   20a7c:	cinc	x12, x12, cs  // cs = hs, nlast
   20a80:	subs	x4, x3, x12
   20a84:	cmp	x3, x12
   20a88:	lsr	x3, x12, #30
   20a8c:	lsl	x12, x12, #34
   20a90:	sbc	x3, x3, xzr
   20a94:	adds	x12, x4, x12
   20a98:	cinc	x3, x3, cs  // cs = hs, nlast
   20a9c:	subs	x4, x12, x3
   20aa0:	cmp	x12, x3
   20aa4:	lsr	x12, x3, #30
   20aa8:	lsl	x3, x3, #34
   20aac:	sbc	x12, x12, xzr
   20ab0:	adds	x3, x4, x3
   20ab4:	cinc	x12, x12, cs  // cs = hs, nlast
   20ab8:	sub	x4, x3, x19
   20abc:	cmp	x12, #0x0
   20ac0:	ccmp	x19, x3, #0x0, eq  // eq = none
   20ac4:	csel	x4, x4, x3, ls  // ls = plast
   20ac8:	subs	x3, x15, x1
   20acc:	cmp	x15, x1
   20ad0:	sbc	x7, x7, xzr
   20ad4:	adds	x3, x3, x16
   20ad8:	cinc	x7, x7, cs  // cs = hs, nlast
   20adc:	subs	x1, x3, x7
   20ae0:	cmp	x3, x7
   20ae4:	lsr	x3, x7, #30
   20ae8:	lsl	x7, x7, #34
   20aec:	sbc	x3, x3, xzr
   20af0:	adds	x7, x1, x7
   20af4:	cinc	x3, x3, cs  // cs = hs, nlast
   20af8:	subs	x1, x7, x3
   20afc:	cmp	x7, x3
   20b00:	lsr	x7, x3, #30
   20b04:	lsl	x3, x3, #34
   20b08:	sbc	x7, x7, xzr
   20b0c:	adds	x3, x1, x3
   20b10:	cinc	x7, x7, cs  // cs = hs, nlast
   20b14:	stp	x11, x14, [x8]
   20b18:	cmp	x7, #0x0
   20b1c:	ccmp	x19, x3, #0x0, eq  // eq = none
   20b20:	sub	x1, x3, x19
   20b24:	add	x10, x10, #0x2
   20b28:	csel	x1, x1, x3, ls  // ls = plast
   20b2c:	add	x8, x8, #0x10
   20b30:	cmp	x24, x10
   20b34:	b.ls	20f34 <PyInit__decimal@@Base+0x69b4>  // b.plast
   20b38:	ldp	x3, x7, [x8]
   20b3c:	mul	x11, x4, x3
   20b40:	umulh	x3, x4, x3
   20b44:	subs	x12, x11, x3
   20b48:	cmp	x11, x3
   20b4c:	cset	x13, cc  // cc = lo, ul, last
   20b50:	cbz	x23, 20980 <PyInit__decimal@@Base+0x6400>
   20b54:	lsr	x11, x3, #32
   20b58:	lsl	x3, x3, #32
   20b5c:	adds	x3, x3, x12
   20b60:	sub	x11, x11, x13
   20b64:	cinc	x11, x11, cs  // cs = hs, nlast
   20b68:	mul	x14, x7, x1
   20b6c:	subs	x12, x3, x11
   20b70:	umulh	x7, x7, x1
   20b74:	cmp	x3, x11
   20b78:	lsr	x13, x11, #32
   20b7c:	lsl	x11, x11, #32
   20b80:	sbc	x13, x13, xzr
   20b84:	adds	x11, x12, x11
   20b88:	lsr	x3, x7, #32
   20b8c:	cinc	x13, x13, cs  // cs = hs, nlast
   20b90:	sub	x12, x11, x19
   20b94:	cmp	x13, #0x0
   20b98:	lsl	x13, x7, #32
   20b9c:	ccmp	x19, x11, #0x0, eq  // eq = none
   20ba0:	mul	x15, x4, x9
   20ba4:	csel	x11, x12, x11, ls  // ls = plast
   20ba8:	subs	x12, x14, x7
   20bac:	cmp	x14, x7
   20bb0:	umulh	x4, x4, x9
   20bb4:	sbc	x3, x3, xzr
   20bb8:	adds	x12, x12, x13
   20bbc:	cinc	x3, x3, cs  // cs = hs, nlast
   20bc0:	mul	x13, x9, x1
   20bc4:	subs	x14, x12, x3
   20bc8:	lsr	x7, x4, #32
   20bcc:	cmp	x12, x3
   20bd0:	lsr	x16, x3, #32
   20bd4:	lsl	x3, x3, #32
   20bd8:	sbc	x16, x16, xzr
   20bdc:	adds	x3, x14, x3
   20be0:	lsl	x17, x4, #32
   20be4:	cinc	x16, x16, cs  // cs = hs, nlast
   20be8:	sub	x14, x3, x19
   20bec:	cmp	x16, #0x0
   20bf0:	umulh	x1, x9, x1
   20bf4:	ccmp	x19, x3, #0x0, eq  // eq = none
   20bf8:	csel	x14, x14, x3, ls  // ls = plast
   20bfc:	subs	x12, x15, x4
   20c00:	cmp	x15, x4
   20c04:	lsr	x3, x1, #32
   20c08:	sbc	x7, x7, xzr
   20c0c:	adds	x12, x12, x17
   20c10:	cinc	x7, x7, cs  // cs = hs, nlast
   20c14:	lsl	x15, x1, #32
   20c18:	subs	x4, x12, x7
   20c1c:	cmp	x12, x7
   20c20:	lsr	x12, x7, #32
   20c24:	lsl	x7, x7, #32
   20c28:	sbc	x12, x12, xzr
   20c2c:	adds	x7, x4, x7
   20c30:	cinc	x12, x12, cs  // cs = hs, nlast
   20c34:	sub	x4, x7, x19
   20c38:	cmp	x12, #0x0
   20c3c:	ccmp	x19, x7, #0x0, eq  // eq = none
   20c40:	csel	x4, x4, x7, ls  // ls = plast
   20c44:	subs	x7, x13, x1
   20c48:	cmp	x13, x1
   20c4c:	sbc	x3, x3, xzr
   20c50:	adds	x7, x7, x15
   20c54:	cinc	x3, x3, cs  // cs = hs, nlast
   20c58:	subs	x1, x7, x3
   20c5c:	cmp	x7, x3
   20c60:	lsr	x7, x3, #32
   20c64:	lsl	x3, x3, #32
   20c68:	b	20b08 <PyInit__decimal@@Base+0x6588>
   20c6c:	lsr	x3, x7, #24
   20c70:	lsl	x7, x7, #40
   20c74:	adds	x7, x7, x8
   20c78:	sub	x3, x3, x9
   20c7c:	cinc	x3, x3, cs  // cs = hs, nlast
   20c80:	subs	x8, x7, x3
   20c84:	cmp	x7, x3
   20c88:	lsr	x7, x3, #24
   20c8c:	lsl	x3, x3, #40
   20c90:	sbc	x7, x7, xzr
   20c94:	adds	x8, x8, x3
   20c98:	cinc	x7, x7, cs  // cs = hs, nlast
   20c9c:	subs	x3, x8, x7
   20ca0:	cmp	x8, x7
   20ca4:	lsr	x8, x7, #24
   20ca8:	lsl	x7, x7, #40
   20cac:	b	20868 <PyInit__decimal@@Base+0x62e8>
   20cb0:	cmp	x10, x1
   20cb4:	lsr	x8, x1, #32
   20cb8:	lsl	x1, x1, #32
   20cbc:	sbc	x8, x8, xzr
   20cc0:	adds	x3, x3, x1
   20cc4:	cinc	x8, x8, cs  // cs = hs, nlast
   20cc8:	subs	x1, x3, x8
   20ccc:	cmp	x3, x8
   20cd0:	lsr	x3, x8, #32
   20cd4:	lsl	x8, x8, #32
   20cd8:	sbc	x3, x3, xzr
   20cdc:	adds	x8, x1, x8
   20ce0:	cinc	x3, x3, cs  // cs = hs, nlast
   20ce4:	sub	x1, x8, x19
   20ce8:	cmp	x3, #0x0
   20cec:	ccmp	x19, x8, #0x0, eq  // eq = none
   20cf0:	csel	x1, x1, x8, ls  // ls = plast
   20cf4:	b	208a4 <PyInit__decimal@@Base+0x6324>
   20cf8:	lsr	x8, x1, #24
   20cfc:	lsl	x1, x1, #40
   20d00:	adds	x1, x1, x3
   20d04:	sub	x8, x8, x10
   20d08:	cinc	x8, x8, cs  // cs = hs, nlast
   20d0c:	subs	x10, x1, x8
   20d10:	cmp	x1, x8
   20d14:	lsr	x3, x8, #24
   20d18:	lsl	x8, x8, #40
   20d1c:	sbc	x3, x3, xzr
   20d20:	adds	x8, x10, x8
   20d24:	cinc	x3, x3, cs  // cs = hs, nlast
   20d28:	subs	x1, x8, x3
   20d2c:	cmp	x8, x3
   20d30:	lsr	x8, x3, #24
   20d34:	lsl	x3, x3, #40
   20d38:	b	207fc <PyInit__decimal@@Base+0x627c>
   20d3c:	lsr	x7, x3, #30
   20d40:	lsl	x3, x3, #34
   20d44:	adds	x3, x3, x8
   20d48:	sub	x7, x7, x9
   20d4c:	cinc	x7, x7, cs  // cs = hs, nlast
   20d50:	subs	x8, x3, x7
   20d54:	cmp	x3, x7
   20d58:	lsr	x3, x7, #30
   20d5c:	lsl	x7, x7, #34
   20d60:	sbc	x3, x3, xzr
   20d64:	adds	x7, x8, x7
   20d68:	cinc	x3, x3, cs  // cs = hs, nlast
   20d6c:	subs	x9, x7, x3
   20d70:	cmp	x7, x3
   20d74:	lsr	x7, x3, #30
   20d78:	lsl	x3, x3, #34
   20d7c:	b	20950 <PyInit__decimal@@Base+0x63d0>
   20d80:	lsr	x11, x3, #24
   20d84:	lsl	x3, x3, #40
   20d88:	adds	x3, x3, x12
   20d8c:	sub	x11, x11, x13
   20d90:	cinc	x11, x11, cs  // cs = hs, nlast
   20d94:	mul	x14, x1, x7
   20d98:	subs	x13, x3, x11
   20d9c:	umulh	x7, x1, x7
   20da0:	cmp	x3, x11
   20da4:	lsr	x3, x11, #24
   20da8:	lsl	x11, x11, #40
   20dac:	sbc	x3, x3, xzr
   20db0:	adds	x13, x13, x11
   20db4:	lsl	x16, x7, #40
   20db8:	cinc	x3, x3, cs  // cs = hs, nlast
   20dbc:	lsr	x12, x7, #24
   20dc0:	subs	x11, x13, x3
   20dc4:	mul	x17, x9, x4
   20dc8:	cmp	x13, x3
   20dcc:	lsr	x13, x3, #24
   20dd0:	lsl	x3, x3, #40
   20dd4:	sbc	x13, x13, xzr
   20dd8:	adds	x3, x11, x3
   20ddc:	umulh	x4, x9, x4
   20de0:	cinc	x13, x13, cs  // cs = hs, nlast
   20de4:	sub	x11, x3, x19
   20de8:	cmp	x13, #0x0
   20dec:	mul	x15, x9, x1
   20df0:	ccmp	x19, x3, #0x0, eq  // eq = none
   20df4:	lsr	x13, x4, #24
   20df8:	csel	x11, x11, x3, ls  // ls = plast
   20dfc:	subs	x3, x14, x7
   20e00:	cmp	x14, x7
   20e04:	lsl	x7, x4, #40
   20e08:	sbc	x12, x12, xzr
   20e0c:	adds	x3, x3, x16
   20e10:	cinc	x12, x12, cs  // cs = hs, nlast
   20e14:	umulh	x1, x9, x1
   20e18:	subs	x18, x3, x12
   20e1c:	add	x10, x10, #0x2
   20e20:	cmp	x3, x12
   20e24:	lsr	x3, x12, #24
   20e28:	lsl	x12, x12, #40
   20e2c:	sbc	x3, x3, xzr
   20e30:	adds	x18, x18, x12
   20e34:	lsl	x16, x1, #40
   20e38:	cinc	x3, x3, cs  // cs = hs, nlast
   20e3c:	lsr	x12, x1, #24
   20e40:	subs	x14, x18, x3
   20e44:	cmp	x18, x3
   20e48:	lsr	x18, x3, #24
   20e4c:	lsl	x3, x3, #40
   20e50:	sbc	x18, x18, xzr
   20e54:	adds	x3, x14, x3
   20e58:	cinc	x18, x18, cs  // cs = hs, nlast
   20e5c:	sub	x14, x3, x19
   20e60:	cmp	x18, #0x0
   20e64:	ccmp	x19, x3, #0x0, eq  // eq = none
   20e68:	csel	x14, x14, x3, ls  // ls = plast
   20e6c:	subs	x3, x17, x4
   20e70:	cmp	x17, x4
   20e74:	stp	x11, x14, [x8]
   20e78:	sbc	x13, x13, xzr
   20e7c:	adds	x4, x3, x7
   20e80:	add	x8, x8, #0x10
   20e84:	cinc	x13, x13, cs  // cs = hs, nlast
   20e88:	subs	x3, x4, x13
   20e8c:	cmp	x4, x13
   20e90:	lsr	x7, x13, #24
   20e94:	lsl	x13, x13, #40
   20e98:	sbc	x7, x7, xzr
   20e9c:	adds	x13, x3, x13
   20ea0:	cinc	x7, x7, cs  // cs = hs, nlast
   20ea4:	subs	x4, x13, x7
   20ea8:	cmp	x13, x7
   20eac:	lsr	x3, x7, #24
   20eb0:	lsl	x7, x7, #40
   20eb4:	sbc	x3, x3, xzr
   20eb8:	adds	x7, x4, x7
   20ebc:	cinc	x3, x3, cs  // cs = hs, nlast
   20ec0:	sub	x4, x7, x19
   20ec4:	cmp	x3, #0x0
   20ec8:	ccmp	x19, x7, #0x0, eq  // eq = none
   20ecc:	csel	x4, x4, x7, ls  // ls = plast
   20ed0:	subs	x3, x15, x1
   20ed4:	cmp	x15, x1
   20ed8:	sbc	x12, x12, xzr
   20edc:	adds	x3, x3, x16
   20ee0:	cinc	x12, x12, cs  // cs = hs, nlast
   20ee4:	subs	x1, x3, x12
   20ee8:	cmp	x3, x12
   20eec:	lsr	x7, x12, #24
   20ef0:	lsl	x12, x12, #40
   20ef4:	sbc	x7, x7, xzr
   20ef8:	adds	x12, x1, x12
   20efc:	cinc	x7, x7, cs  // cs = hs, nlast
   20f00:	subs	x1, x12, x7
   20f04:	cmp	x12, x7
   20f08:	lsr	x3, x7, #24
   20f0c:	lsl	x7, x7, #40
   20f10:	sbc	x3, x3, xzr
   20f14:	adds	x7, x1, x7
   20f18:	cinc	x3, x3, cs  // cs = hs, nlast
   20f1c:	sub	x1, x7, x19
   20f20:	cmp	x3, #0x0
   20f24:	ccmp	x19, x7, #0x0, eq  // eq = none
   20f28:	csel	x1, x1, x7, ls  // ls = plast
   20f2c:	cmp	x24, x10
   20f30:	b.hi	20b38 <PyInit__decimal@@Base+0x65b8>  // b.pmore
   20f34:	add	x5, x5, x24
   20f38:	cmp	x6, #0x2
   20f3c:	b.eq	20f48 <PyInit__decimal@@Base+0x69c8>  // b.none
   20f40:	mov	x6, #0x2                   	// #2
   20f44:	b	20790 <PyInit__decimal@@Base+0x6210>
   20f48:	mov	w2, w25
   20f4c:	add	x0, sp, #0x58
   20f50:	mov	w1, #0x1                   	// #1
   20f54:	bl	392e0 <PyInit__decimal@@Base+0x1ed60>
   20f58:	add	x8, x21, x20
   20f5c:	add	x20, x8, x20
   20f60:	cmp	x21, x8
   20f64:	b.cs	2143c <PyInit__decimal@@Base+0x6ebc>  // b.hs, b.nlast
   20f68:	mvn	x9, x21
   20f6c:	and	x7, x19, #0x400000000
   20f70:	add	x9, x8, x9
   20f74:	mov	x3, #0x0                   	// #0
   20f78:	ldp	x6, x5, [sp, #96]
   20f7c:	lsr	x9, x9, #3
   20f80:	b	211c8 <PyInit__decimal@@Base+0x6c48>
   20f84:	cbz	x7, 21370 <PyInit__decimal@@Base+0x6df0>
   20f88:	lsr	x11, x2, #30
   20f8c:	lsl	x2, x2, #34
   20f90:	adds	x2, x2, x13
   20f94:	sub	x11, x11, x14
   20f98:	cinc	x11, x11, cs  // cs = hs, nlast
   20f9c:	subs	x12, x2, x11
   20fa0:	cmp	x2, x11
   20fa4:	lsr	x2, x11, #30
   20fa8:	lsl	x11, x11, #34
   20fac:	sbc	x2, x2, xzr
   20fb0:	adds	x12, x12, x11
   20fb4:	cinc	x2, x2, cs  // cs = hs, nlast
   20fb8:	subs	x11, x12, x2
   20fbc:	cmp	x12, x2
   20fc0:	lsr	x12, x2, #30
   20fc4:	lsl	x2, x2, #34
   20fc8:	sbc	x12, x12, xzr
   20fcc:	adds	x2, x11, x2
   20fd0:	cinc	x12, x12, cs  // cs = hs, nlast
   20fd4:	sub	x11, x2, x19
   20fd8:	cmp	x12, #0x0
   20fdc:	ccmp	x19, x2, #0x0, eq  // eq = none
   20fe0:	csel	x11, x11, x2, ls  // ls = plast
   20fe4:	adds	x11, x10, x11
   20fe8:	mul	x12, x0, x5
   20fec:	sub	x13, x11, x19
   20ff0:	umulh	x2, x0, x5
   20ff4:	csel	x11, x13, x11, cs  // cs = hs, nlast
   20ff8:	cmp	x19, x11
   20ffc:	sub	x13, x11, x19
   21000:	csel	x11, x13, x11, ls  // ls = plast
   21004:	subs	x14, x12, x2
   21008:	cmp	x12, x2
   2100c:	cset	x15, cc  // cc = lo, ul, last
   21010:	cbnz	x23, 212e8 <PyInit__decimal@@Base+0x6d68>
   21014:	cbz	x7, 2132c <PyInit__decimal@@Base+0x6dac>
   21018:	lsr	x13, x2, #30
   2101c:	lsl	x2, x2, #34
   21020:	adds	x2, x2, x14
   21024:	sub	x13, x13, x15
   21028:	cinc	x13, x13, cs  // cs = hs, nlast
   2102c:	subs	x14, x2, x13
   21030:	cmp	x2, x13
   21034:	lsr	x12, x13, #30
   21038:	lsl	x13, x13, #34
   2103c:	sbc	x12, x12, xzr
   21040:	adds	x13, x14, x13
   21044:	cinc	x12, x12, cs  // cs = hs, nlast
   21048:	subs	x2, x13, x12
   2104c:	cmp	x13, x12
   21050:	lsr	x13, x12, #30
   21054:	lsl	x12, x12, #34
   21058:	sbc	x13, x13, xzr
   2105c:	adds	x12, x2, x12
   21060:	cinc	x13, x13, cs  // cs = hs, nlast
   21064:	sub	x2, x12, x19
   21068:	cmp	x13, #0x0
   2106c:	ccmp	x19, x12, #0x0, eq  // eq = none
   21070:	csel	x2, x2, x12, ls  // ls = plast
   21074:	adds	x2, x11, x2
   21078:	mul	x11, x1, x5
   2107c:	sub	x12, x2, x19
   21080:	umulh	x1, x1, x5
   21084:	csel	x2, x12, x2, cs  // cs = hs, nlast
   21088:	cmp	x19, x2
   2108c:	sub	x12, x2, x19
   21090:	csel	x2, x12, x2, ls  // ls = plast
   21094:	subs	x13, x11, x1
   21098:	cmp	x11, x1
   2109c:	cset	x14, cc  // cc = lo, ul, last
   210a0:	cbnz	x23, 212a4 <PyInit__decimal@@Base+0x6d24>
   210a4:	cbz	x7, 213b4 <PyInit__decimal@@Base+0x6e34>
   210a8:	lsr	x12, x1, #30
   210ac:	lsl	x1, x1, #34
   210b0:	adds	x1, x1, x13
   210b4:	sub	x12, x12, x14
   210b8:	cinc	x12, x12, cs  // cs = hs, nlast
   210bc:	subs	x13, x1, x12
   210c0:	cmp	x1, x12
   210c4:	lsr	x11, x12, #30
   210c8:	lsl	x12, x12, #34
   210cc:	sbc	x11, x11, xzr
   210d0:	adds	x12, x13, x12
   210d4:	cinc	x11, x11, cs  // cs = hs, nlast
   210d8:	subs	x1, x12, x11
   210dc:	cmp	x12, x11
   210e0:	lsr	x12, x11, #30
   210e4:	lsl	x11, x11, #34
   210e8:	sbc	x12, x12, xzr
   210ec:	adds	x11, x1, x11
   210f0:	cinc	x12, x12, cs  // cs = hs, nlast
   210f4:	sub	x1, x11, x19
   210f8:	cmp	x12, #0x0
   210fc:	ccmp	x19, x11, #0x0, eq  // eq = none
   21100:	csel	x1, x1, x11, ls  // ls = plast
   21104:	adds	x10, x10, x1
   21108:	mul	x1, x6, x0
   2110c:	sub	x11, x10, x19
   21110:	umulh	x0, x6, x0
   21114:	csel	x10, x11, x10, cs  // cs = hs, nlast
   21118:	cmp	x19, x10
   2111c:	sub	x11, x10, x19
   21120:	csel	x10, x11, x10, ls  // ls = plast
   21124:	subs	x12, x1, x0
   21128:	cmp	x1, x0
   2112c:	cset	x13, cc  // cc = lo, ul, last
   21130:	cbnz	x23, 21260 <PyInit__decimal@@Base+0x6ce0>
   21134:	cbz	x7, 213f8 <PyInit__decimal@@Base+0x6e78>
   21138:	lsr	x11, x0, #30
   2113c:	lsl	x0, x0, #34
   21140:	adds	x0, x0, x12
   21144:	sub	x11, x11, x13
   21148:	cinc	x11, x11, cs  // cs = hs, nlast
   2114c:	subs	x12, x0, x11
   21150:	cmp	x0, x11
   21154:	lsr	x1, x11, #30
   21158:	lsl	x11, x11, #34
   2115c:	sbc	x1, x1, xzr
   21160:	adds	x11, x12, x11
   21164:	cinc	x1, x1, cs  // cs = hs, nlast
   21168:	subs	x0, x11, x1
   2116c:	cmp	x11, x1
   21170:	lsr	x11, x1, #30
   21174:	lsl	x1, x1, #34
   21178:	sbc	x11, x11, xzr
   2117c:	adds	x1, x0, x1
   21180:	cinc	x11, x11, cs  // cs = hs, nlast
   21184:	sub	x0, x1, x19
   21188:	cmp	x11, #0x0
   2118c:	ccmp	x19, x1, #0x0, eq  // eq = none
   21190:	csel	x0, x0, x1, ls  // ls = plast
   21194:	adds	x10, x10, x0
   21198:	add	x1, x3, #0x1
   2119c:	sub	x0, x10, x19
   211a0:	csel	x10, x0, x10, cs  // cs = hs, nlast
   211a4:	cmp	x19, x10
   211a8:	sub	x0, x10, x19
   211ac:	csel	x10, x0, x10, ls  // ls = plast
   211b0:	str	x10, [x20, x3, lsl #3]
   211b4:	str	x2, [x8, x3, lsl #3]
   211b8:	cmp	x9, x3
   211bc:	str	x4, [x21, x3, lsl #3]
   211c0:	b.eq	2143c <PyInit__decimal@@Base+0x6ebc>  // b.none
   211c4:	mov	x3, x1
   211c8:	ldr	x1, [x8, x3, lsl #3]
   211cc:	ldr	x10, [x21, x3, lsl #3]
   211d0:	ldr	x0, [x20, x3, lsl #3]
   211d4:	adds	x2, x10, x1
   211d8:	sub	x4, x2, x19
   211dc:	mul	x11, x1, x6
   211e0:	csel	x4, x4, x2, cs  // cs = hs, nlast
   211e4:	umulh	x2, x1, x6
   211e8:	cmp	x19, x4
   211ec:	sub	x12, x4, x19
   211f0:	csel	x4, x12, x4, ls  // ls = plast
   211f4:	adds	x4, x0, x4
   211f8:	sub	x12, x4, x19
   211fc:	csel	x4, x12, x4, cs  // cs = hs, nlast
   21200:	cmp	x19, x4
   21204:	sub	x12, x4, x19
   21208:	csel	x4, x12, x4, ls  // ls = plast
   2120c:	subs	x13, x11, x2
   21210:	cmp	x11, x2
   21214:	cset	x14, cc  // cc = lo, ul, last
   21218:	cbz	x23, 20f84 <PyInit__decimal@@Base+0x6a04>
   2121c:	lsr	x12, x2, #32
   21220:	lsl	x2, x2, #32
   21224:	adds	x2, x2, x13
   21228:	sub	x12, x12, x14
   2122c:	cinc	x12, x12, cs  // cs = hs, nlast
   21230:	subs	x11, x2, x12
   21234:	cmp	x2, x12
   21238:	lsr	x2, x12, #32
   2123c:	lsl	x12, x12, #32
   21240:	sbc	x2, x2, xzr
   21244:	adds	x12, x11, x12
   21248:	cinc	x2, x2, cs  // cs = hs, nlast
   2124c:	sub	x11, x12, x19
   21250:	cmp	x2, #0x0
   21254:	ccmp	x19, x12, #0x0, eq  // eq = none
   21258:	csel	x11, x11, x12, ls  // ls = plast
   2125c:	b	20fe4 <PyInit__decimal@@Base+0x6a64>
   21260:	lsr	x1, x0, #32
   21264:	lsl	x0, x0, #32
   21268:	adds	x0, x0, x12
   2126c:	sub	x1, x1, x13
   21270:	cinc	x1, x1, cs  // cs = hs, nlast
   21274:	subs	x11, x0, x1
   21278:	cmp	x0, x1
   2127c:	lsr	x12, x1, #32
   21280:	lsl	x1, x1, #32
   21284:	sbc	x12, x12, xzr
   21288:	adds	x1, x11, x1
   2128c:	cinc	x12, x12, cs  // cs = hs, nlast
   21290:	sub	x0, x1, x19
   21294:	cmp	x12, #0x0
   21298:	ccmp	x19, x1, #0x0, eq  // eq = none
   2129c:	csel	x0, x0, x1, ls  // ls = plast
   212a0:	b	21194 <PyInit__decimal@@Base+0x6c14>
   212a4:	lsr	x11, x1, #32
   212a8:	lsl	x1, x1, #32
   212ac:	adds	x1, x1, x13
   212b0:	sub	x11, x11, x14
   212b4:	cinc	x11, x11, cs  // cs = hs, nlast
   212b8:	subs	x12, x1, x11
   212bc:	cmp	x1, x11
   212c0:	lsr	x13, x11, #32
   212c4:	lsl	x11, x11, #32
   212c8:	sbc	x13, x13, xzr
   212cc:	adds	x11, x12, x11
   212d0:	cinc	x13, x13, cs  // cs = hs, nlast
   212d4:	sub	x1, x11, x19
   212d8:	cmp	x13, #0x0
   212dc:	ccmp	x19, x11, #0x0, eq  // eq = none
   212e0:	csel	x1, x1, x11, ls  // ls = plast
   212e4:	b	21104 <PyInit__decimal@@Base+0x6b84>
   212e8:	lsr	x12, x2, #32
   212ec:	lsl	x2, x2, #32
   212f0:	adds	x2, x2, x14
   212f4:	sub	x12, x12, x15
   212f8:	cinc	x12, x12, cs  // cs = hs, nlast
   212fc:	subs	x13, x2, x12
   21300:	cmp	x2, x12
   21304:	lsr	x14, x12, #32
   21308:	lsl	x12, x12, #32
   2130c:	sbc	x14, x14, xzr
   21310:	adds	x12, x13, x12
   21314:	cinc	x14, x14, cs  // cs = hs, nlast
   21318:	sub	x2, x12, x19
   2131c:	cmp	x14, #0x0
   21320:	ccmp	x19, x12, #0x0, eq  // eq = none
   21324:	csel	x2, x2, x12, ls  // ls = plast
   21328:	b	21074 <PyInit__decimal@@Base+0x6af4>
   2132c:	lsr	x13, x2, #24
   21330:	lsl	x2, x2, #40
   21334:	adds	x2, x2, x14
   21338:	sub	x13, x13, x15
   2133c:	cinc	x13, x13, cs  // cs = hs, nlast
   21340:	subs	x14, x2, x13
   21344:	cmp	x2, x13
   21348:	lsr	x12, x13, #24
   2134c:	lsl	x13, x13, #40
   21350:	sbc	x12, x12, xzr
   21354:	adds	x13, x14, x13
   21358:	cinc	x12, x12, cs  // cs = hs, nlast
   2135c:	subs	x2, x13, x12
   21360:	cmp	x13, x12
   21364:	lsr	x13, x12, #24
   21368:	lsl	x12, x12, #40
   2136c:	b	21058 <PyInit__decimal@@Base+0x6ad8>
   21370:	lsr	x11, x2, #24
   21374:	lsl	x2, x2, #40
   21378:	adds	x2, x2, x13
   2137c:	sub	x11, x11, x14
   21380:	cinc	x11, x11, cs  // cs = hs, nlast
   21384:	subs	x12, x2, x11
   21388:	cmp	x2, x11
   2138c:	lsr	x2, x11, #24
   21390:	lsl	x11, x11, #40
   21394:	sbc	x2, x2, xzr
   21398:	adds	x12, x12, x11
   2139c:	cinc	x2, x2, cs  // cs = hs, nlast
   213a0:	subs	x11, x12, x2
   213a4:	cmp	x12, x2
   213a8:	lsr	x12, x2, #24
   213ac:	lsl	x2, x2, #40
   213b0:	b	20fc8 <PyInit__decimal@@Base+0x6a48>
   213b4:	lsr	x12, x1, #24
   213b8:	lsl	x1, x1, #40
   213bc:	adds	x1, x1, x13
   213c0:	sub	x12, x12, x14
   213c4:	cinc	x12, x12, cs  // cs = hs, nlast
   213c8:	subs	x13, x1, x12
   213cc:	cmp	x1, x12
   213d0:	lsr	x11, x12, #24
   213d4:	lsl	x12, x12, #40
   213d8:	sbc	x11, x11, xzr
   213dc:	adds	x12, x13, x12
   213e0:	cinc	x11, x11, cs  // cs = hs, nlast
   213e4:	subs	x1, x12, x11
   213e8:	cmp	x12, x11
   213ec:	lsr	x12, x11, #24
   213f0:	lsl	x11, x11, #40
   213f4:	b	210e8 <PyInit__decimal@@Base+0x6b68>
   213f8:	lsr	x11, x0, #24
   213fc:	lsl	x0, x0, #40
   21400:	adds	x0, x0, x12
   21404:	sub	x11, x11, x13
   21408:	cinc	x11, x11, cs  // cs = hs, nlast
   2140c:	subs	x12, x0, x11
   21410:	cmp	x0, x11
   21414:	lsr	x1, x11, #24
   21418:	lsl	x11, x11, #40
   2141c:	sbc	x1, x1, xzr
   21420:	adds	x11, x12, x11
   21424:	cinc	x1, x1, cs  // cs = hs, nlast
   21428:	subs	x0, x11, x1
   2142c:	cmp	x11, x1
   21430:	lsr	x11, x1, #24
   21434:	lsl	x1, x1, #40
   21438:	b	21178 <PyInit__decimal@@Base+0x6bf8>
   2143c:	mov	w0, #0x1                   	// #1
   21440:	ldp	x19, x20, [sp, #16]
   21444:	ldp	x21, x22, [sp, #32]
   21448:	ldp	x23, x24, [sp, #48]
   2144c:	ldr	x25, [sp, #64]
   21450:	ldp	x29, x30, [sp], #112
   21454:	ret
   21458:	lsr	x7, x3, #32
   2145c:	lsl	x3, x3, #32
   21460:	adds	x3, x3, x8
   21464:	sub	x7, x7, x9
   21468:	cinc	x7, x7, cs  // cs = hs, nlast
   2146c:	subs	x9, x3, x7
   21470:	cmp	x3, x7
   21474:	lsr	x3, x7, #32
   21478:	lsl	x7, x7, #32
   2147c:	sbc	x3, x3, xzr
   21480:	adds	x7, x9, x7
   21484:	cinc	x3, x3, cs  // cs = hs, nlast
   21488:	sub	x9, x7, x19
   2148c:	cmp	x3, #0x0
   21490:	ccmp	x19, x7, #0x0, eq  // eq = none
   21494:	csel	x9, x9, x7, ls  // ls = plast
   21498:	b	2096c <PyInit__decimal@@Base+0x63ec>
   2149c:	nop
   214a0:	sub	w2, w2, #0x2
   214a4:	mov	x4, x0
   214a8:	cmp	w2, #0x12
   214ac:	add	x15, x0, #0x1
   214b0:	b.ls	214d4 <PyInit__decimal@@Base+0x6f54>  // b.plast
   214b4:	mov	x0, x15
   214b8:	mov	x2, x4
   214bc:	cmp	x4, x3
   214c0:	b.eq	21b1c <PyInit__decimal@@Base+0x759c>  // b.none
   214c4:	add	w1, w1, #0x30
   214c8:	strb	w1, [x2]
   214cc:	strb	wzr, [x2, #1]
   214d0:	ret
   214d4:	stp	x29, x30, [sp, #-64]!
   214d8:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27a80>
   214dc:	add	x0, x0, #0x680
   214e0:	mov	x29, sp
   214e4:	stp	x19, x20, [sp, #16]
   214e8:	stp	x21, x22, [sp, #32]
   214ec:	ldrh	w0, [x0, w2, uxtw #1]
   214f0:	adr	x2, 214fc <PyInit__decimal@@Base+0x6f7c>
   214f4:	add	x0, x2, w0, sxth #2
   214f8:	br	x0
   214fc:	stp	x23, x24, [sp, #48]
   21500:	cmp	x4, x3
   21504:	add	x21, x4, #0x2
   21508:	add	x20, x4, #0x3
   2150c:	add	x19, x4, #0x4
   21510:	add	x30, x4, #0x5
   21514:	add	x18, x4, #0x6
   21518:	add	x17, x4, #0x7
   2151c:	add	x16, x4, #0x8
   21520:	add	x14, x4, #0x9
   21524:	add	x13, x4, #0xa
   21528:	add	x12, x4, #0xb
   2152c:	add	x11, x4, #0xc
   21530:	add	x10, x4, #0xd
   21534:	add	x9, x4, #0xe
   21538:	add	x8, x4, #0xf
   2153c:	add	x7, x4, #0x10
   21540:	add	x6, x4, #0x11
   21544:	add	x5, x4, #0x12
   21548:	add	x2, x4, #0x13
   2154c:	add	x0, x4, #0x14
   21550:	b.eq	220ac <PyInit__decimal@@Base+0x7b2c>  // b.none
   21554:	mov	x23, #0x89e80000            	// #2313682944
   21558:	movk	x23, #0x2304, lsl #32
   2155c:	movk	x23, #0x8ac7, lsl #48
   21560:	cmp	x1, x23
   21564:	cset	x24, cs  // cs = hs, nlast
   21568:	cset	w22, cs  // cs = hs, nlast
   2156c:	add	w22, w22, #0x30
   21570:	strb	w22, [x4]
   21574:	msub	x1, x24, x23, x1
   21578:	cmp	x15, x3
   2157c:	b.eq	22168 <PyInit__decimal@@Base+0x7be8>  // b.none
   21580:	mov	x23, #0x490f                	// #18703
   21584:	lsr	x4, x1, #18
   21588:	movk	x23, #0x7747, lsl #16
   2158c:	mov	x22, #0xa7640000            	// #2808348672
   21590:	movk	x23, #0x49c9, lsl #32
   21594:	movk	x22, #0xb6b3, lsl #32
   21598:	movk	x22, #0xde0, lsl #48
   2159c:	umulh	x4, x4, x23
   215a0:	lsr	x4, x4, #24
   215a4:	add	w23, w4, #0x30
   215a8:	strb	w23, [x15]
   215ac:	ldp	x23, x24, [sp, #48]
   215b0:	msub	x1, x4, x22, x1
   215b4:	cmp	x21, x3
   215b8:	b.eq	22110 <PyInit__decimal@@Base+0x7b90>  // b.none
   215bc:	mov	x22, #0x1b53                	// #6995
   215c0:	lsr	x4, x1, #17
   215c4:	movk	x22, #0xd519, lsl #16
   215c8:	mov	x15, #0x5d8a0000            	// #1569325056
   215cc:	movk	x22, #0x5c3b, lsl #32
   215d0:	movk	x15, #0x4578, lsl #32
   215d4:	movk	x15, #0x163, lsl #48
   215d8:	umulh	x4, x4, x22
   215dc:	lsr	x4, x4, #22
   215e0:	add	w22, w4, #0x30
   215e4:	strb	w22, [x21]
   215e8:	msub	x1, x4, x15, x1
   215ec:	cmp	x20, x3
   215f0:	b.eq	21cd0 <PyInit__decimal@@Base+0x7750>  // b.none
   215f4:	mov	x4, #0x7857                	// #30807
   215f8:	mov	x15, #0x6fc10000            	// #1874919424
   215fc:	movk	x4, #0xb113, lsl #16
   21600:	movk	x15, #0x86f2, lsl #32
   21604:	movk	x4, #0x652f, lsl #32
   21608:	movk	x15, #0x23, lsl #48
   2160c:	movk	x4, #0x39a5, lsl #48
   21610:	umulh	x4, x1, x4
   21614:	lsr	x4, x4, #51
   21618:	add	w21, w4, #0x30
   2161c:	strb	w21, [x20]
   21620:	msub	x1, x4, x15, x1
   21624:	cmp	x19, x3
   21628:	b.eq	21c80 <PyInit__decimal@@Base+0x7700>  // b.none
   2162c:	mov	x20, #0xeac3                	// #60099
   21630:	lsr	x4, x1, #15
   21634:	movk	x20, #0xf3dc, lsl #16
   21638:	mov	x15, #0x8000                	// #32768
   2163c:	movk	x20, #0x4075, lsl #32
   21640:	movk	x15, #0xa4c6, lsl #16
   21644:	movk	x20, #0x2, lsl #48
   21648:	movk	x15, #0x8d7e, lsl #32
   2164c:	movk	x15, #0x3, lsl #48
   21650:	umulh	x4, x4, x20
   21654:	lsr	x4, x4, #20
   21658:	add	w20, w4, #0x30
   2165c:	strb	w20, [x19]
   21660:	msub	x1, x4, x15, x1
   21664:	cmp	x30, x3
   21668:	b.eq	21c34 <PyInit__decimal@@Base+0x76b4>  // b.none
   2166c:	mov	x4, #0xcd81                	// #52609
   21670:	mov	x15, #0x4000                	// #16384
   21674:	movk	x4, #0x5095, lsl #16
   21678:	movk	x15, #0x107a, lsl #16
   2167c:	movk	x4, #0x4dc3, lsl #32
   21680:	movk	x15, #0x5af3, lsl #32
   21684:	movk	x4, #0xb42, lsl #48
   21688:	umulh	x4, x1, x4
   2168c:	lsr	x4, x4, #42
   21690:	add	w19, w4, #0x30
   21694:	strb	w19, [x30]
   21698:	msub	x1, x4, x15, x1
   2169c:	cmp	x18, x3
   216a0:	b.eq	21bec <PyInit__decimal@@Base+0x766c>  // b.none
   216a4:	mov	x4, #0x385                 	// #901
   216a8:	mov	x15, #0xa000                	// #40960
   216ac:	movk	x4, #0x92ed, lsl #16
   216b0:	movk	x15, #0x4e72, lsl #16
   216b4:	movk	x4, #0x84d0, lsl #32
   216b8:	movk	x15, #0x918, lsl #32
   216bc:	movk	x4, #0x384b, lsl #48
   216c0:	umulh	x4, x1, x4
   216c4:	lsr	x4, x4, #41
   216c8:	add	w19, w4, #0x30
   216cc:	strb	w19, [x18]
   216d0:	msub	x1, x4, x15, x1
   216d4:	cmp	x17, x3
   216d8:	b.eq	21ba8 <PyInit__decimal@@Base+0x7628>  // b.none
   216dc:	mov	x4, #0x2233                	// #8755
   216e0:	mov	x15, #0x1000                	// #4096
   216e4:	movk	x4, #0x5bd4, lsl #16
   216e8:	movk	x15, #0xd4a5, lsl #16
   216ec:	movk	x4, #0x3302, lsl #32
   216f0:	movk	x15, #0xe8, lsl #32
   216f4:	movk	x4, #0x232f, lsl #48
   216f8:	umulh	x4, x1, x4
   216fc:	lsr	x4, x4, #37
   21700:	add	w18, w4, #0x30
   21704:	strb	w18, [x17]
   21708:	msub	x1, x4, x15, x1
   2170c:	cmp	x16, x3
   21710:	b.eq	21b68 <PyInit__decimal@@Base+0x75e8>  // b.none
   21714:	mov	x4, #0xaaff                	// #43775
   21718:	mov	x15, #0xe800                	// #59392
   2171c:	movk	x4, #0xcb24, lsl #16
   21720:	movk	x15, #0x4876, lsl #16
   21724:	movk	x4, #0xff0b, lsl #32
   21728:	movk	x15, #0x17, lsl #32
   2172c:	movk	x4, #0xafeb, lsl #48
   21730:	umulh	x4, x1, x4
   21734:	lsr	x4, x4, #36
   21738:	add	w17, w4, #0x30
   2173c:	strb	w17, [x16]
   21740:	msub	x1, x4, x15, x1
   21744:	cmp	x14, x3
   21748:	b.eq	21ae0 <PyInit__decimal@@Base+0x7560>  // b.none
   2174c:	mov	x4, #0xd5bf                	// #54719
   21750:	mov	x15, #0xe400                	// #58368
   21754:	movk	x4, #0xbded, lsl #16
   21758:	movk	x15, #0x540b, lsl #16
   2175c:	movk	x4, #0xfece, lsl #32
   21760:	movk	x15, #0x2, lsl #32
   21764:	movk	x4, #0xdbe6, lsl #48
   21768:	umulh	x4, x1, x4
   2176c:	lsr	x4, x4, #33
   21770:	add	w16, w4, #0x30
   21774:	strb	w16, [x14]
   21778:	msub	x1, x4, x15, x1
   2177c:	cmp	x13, x3
   21780:	b.eq	21aa8 <PyInit__decimal@@Base+0x7528>  // b.none
   21784:	mov	x15, #0x5a53                	// #23123
   21788:	lsr	x4, x1, #9
   2178c:	movk	x15, #0xa09b, lsl #16
   21790:	mov	x14, #0xca00                	// #51712
   21794:	movk	x15, #0xb82f, lsl #32
   21798:	movk	x14, #0x3b9a, lsl #16
   2179c:	movk	x15, #0x44, lsl #48
   217a0:	umulh	x4, x4, x15
   217a4:	lsr	x4, x4, #11
   217a8:	add	w15, w4, #0x30
   217ac:	strb	w15, [x13]
   217b0:	msub	x1, x4, x14, x1
   217b4:	cmp	x12, x3
   217b8:	b.eq	21a74 <PyInit__decimal@@Base+0x74f4>  // b.none
   217bc:	mov	x4, #0xcefd                	// #52989
   217c0:	mov	x13, #0xe100                	// #57600
   217c4:	movk	x4, #0x8461, lsl #16
   217c8:	movk	x13, #0x5f5, lsl #16
   217cc:	movk	x4, #0x7711, lsl #32
   217d0:	movk	x4, #0xabcc, lsl #48
   217d4:	umulh	x4, x1, x4
   217d8:	lsr	x4, x4, #26
   217dc:	add	w14, w4, #0x30
   217e0:	strb	w14, [x12]
   217e4:	msub	x1, x4, x13, x1
   217e8:	cmp	x11, x3
   217ec:	b.eq	21a44 <PyInit__decimal@@Base+0x74c4>  // b.none
   217f0:	mov	x4, #0x42bd                	// #17085
   217f4:	mov	x12, #0x9680                	// #38528
   217f8:	movk	x4, #0xe57a, lsl #16
   217fc:	movk	x12, #0x98, lsl #16
   21800:	movk	x4, #0x94d5, lsl #32
   21804:	movk	x4, #0xd6bf, lsl #48
   21808:	umulh	x4, x1, x4
   2180c:	lsr	x4, x4, #23
   21810:	add	w13, w4, #0x30
   21814:	strb	w13, [x11]
   21818:	msub	x1, x4, x12, x1
   2181c:	cmp	x10, x3
   21820:	b.eq	21a18 <PyInit__decimal@@Base+0x7498>  // b.none
   21824:	mov	x4, #0x34db                	// #13531
   21828:	mov	x11, #0x4240                	// #16960
   2182c:	movk	x4, #0xd7b6, lsl #16
   21830:	movk	x11, #0xf, lsl #16
   21834:	movk	x4, #0xde82, lsl #32
   21838:	movk	x4, #0x431b, lsl #48
   2183c:	umulh	x4, x1, x4
   21840:	lsr	x4, x4, #18
   21844:	add	w12, w4, #0x30
   21848:	strb	w12, [x10]
   2184c:	msub	x1, x4, x11, x1
   21850:	cmp	x9, x3
   21854:	b.eq	219f0 <PyInit__decimal@@Base+0x7470>  // b.none
   21858:	mov	x11, #0x7843                	// #30787
   2185c:	lsr	x4, x1, #5
   21860:	movk	x11, #0x71b4, lsl #16
   21864:	mov	x10, #0x86a0                	// #34464
   21868:	movk	x11, #0x5ac4, lsl #32
   2186c:	movk	x10, #0x1, lsl #16
   21870:	movk	x11, #0xa7c, lsl #48
   21874:	umulh	x4, x4, x11
   21878:	lsr	x4, x4, #7
   2187c:	add	w11, w4, #0x30
   21880:	strb	w11, [x9]
   21884:	msub	x1, x4, x10, x1
   21888:	cmp	x8, x3
   2188c:	b.eq	219cc <PyInit__decimal@@Base+0x744c>  // b.none
   21890:	mov	x4, #0x594b                	// #22859
   21894:	mov	x9, #0x2710                	// #10000
   21898:	movk	x4, #0x3886, lsl #16
   2189c:	movk	x4, #0xc5d6, lsl #32
   218a0:	movk	x4, #0x346d, lsl #48
   218a4:	umulh	x4, x1, x4
   218a8:	lsr	x4, x4, #11
   218ac:	add	w10, w4, #0x30
   218b0:	strb	w10, [x8]
   218b4:	msub	x1, x4, x9, x1
   218b8:	cmp	x7, x3
   218bc:	b.eq	219ac <PyInit__decimal@@Base+0x742c>  // b.none
   218c0:	mov	x8, #0xf7cf                	// #63439
   218c4:	lsr	x4, x1, #3
   218c8:	movk	x8, #0xe353, lsl #16
   218cc:	movk	x8, #0x9ba5, lsl #32
   218d0:	movk	x8, #0x20c4, lsl #48
   218d4:	umulh	x4, x4, x8
   218d8:	lsr	x4, x4, #4
   218dc:	add	w8, w4, #0x30
   218e0:	strb	w8, [x7]
   218e4:	lsl	x7, x4, #5
   218e8:	sub	x7, x7, x4
   218ec:	add	x4, x4, x7, lsl #2
   218f0:	sub	x1, x1, x4, lsl #3
   218f4:	cmp	x6, x3
   218f8:	b.eq	21990 <PyInit__decimal@@Base+0x7410>  // b.none
   218fc:	mov	x7, #0xf5c3                	// #62915
   21900:	lsr	x4, x1, #2
   21904:	movk	x7, #0x5c28, lsl #16
   21908:	movk	x7, #0xc28f, lsl #32
   2190c:	movk	x7, #0x28f5, lsl #48
   21910:	umulh	x4, x4, x7
   21914:	lsr	x4, x4, #2
   21918:	add	w7, w4, #0x30
   2191c:	strb	w7, [x6]
   21920:	add	x6, x4, x4, lsl #1
   21924:	add	x4, x4, x6, lsl #3
   21928:	sub	x1, x1, x4, lsl #2
   2192c:	cmp	x5, x3
   21930:	b.eq	21978 <PyInit__decimal@@Base+0x73f8>  // b.none
   21934:	mov	x4, #0xcccccccccccccccc    	// #-3689348814741910324
   21938:	cmp	x2, x3
   2193c:	movk	x4, #0xcccd
   21940:	umulh	x4, x1, x4
   21944:	lsr	x4, x4, #3
   21948:	add	w6, w4, #0x30
   2194c:	strb	w6, [x5]
   21950:	add	x4, x4, x4, lsl #2
   21954:	sub	x1, x1, x4, lsl #1
   21958:	b.eq	21b3c <PyInit__decimal@@Base+0x75bc>  // b.none
   2195c:	add	w1, w1, #0x30
   21960:	strb	w1, [x2]
   21964:	strb	wzr, [x2, #1]
   21968:	ldp	x19, x20, [sp, #16]
   2196c:	ldp	x21, x22, [sp, #32]
   21970:	ldp	x29, x30, [sp], #64
   21974:	ret
   21978:	mov	w4, #0x2e                  	// #46
   2197c:	strb	w4, [x5]
   21980:	mov	x5, x2
   21984:	mov	x2, x0
   21988:	add	x0, x0, #0x1
   2198c:	b	21934 <PyInit__decimal@@Base+0x73b4>
   21990:	mov	w4, #0x2e                  	// #46
   21994:	strb	w4, [x6]
   21998:	mov	x6, x5
   2199c:	mov	x5, x2
   219a0:	mov	x2, x0
   219a4:	add	x0, x0, #0x1
   219a8:	b	218fc <PyInit__decimal@@Base+0x737c>
   219ac:	mov	w4, #0x2e                  	// #46
   219b0:	strb	w4, [x7]
   219b4:	mov	x7, x6
   219b8:	mov	x6, x5
   219bc:	mov	x5, x2
   219c0:	mov	x2, x0
   219c4:	add	x0, x0, #0x1
   219c8:	b	218c0 <PyInit__decimal@@Base+0x7340>
   219cc:	mov	w4, #0x2e                  	// #46
   219d0:	strb	w4, [x8]
   219d4:	mov	x8, x7
   219d8:	mov	x7, x6
   219dc:	mov	x6, x5
   219e0:	mov	x5, x2
   219e4:	mov	x2, x0
   219e8:	add	x0, x0, #0x1
   219ec:	b	21890 <PyInit__decimal@@Base+0x7310>
   219f0:	mov	w4, #0x2e                  	// #46
   219f4:	strb	w4, [x9]
   219f8:	mov	x9, x8
   219fc:	mov	x8, x7
   21a00:	mov	x7, x6
   21a04:	mov	x6, x5
   21a08:	mov	x5, x2
   21a0c:	mov	x2, x0
   21a10:	add	x0, x0, #0x1
   21a14:	b	21858 <PyInit__decimal@@Base+0x72d8>
   21a18:	mov	w4, #0x2e                  	// #46
   21a1c:	strb	w4, [x10]
   21a20:	mov	x10, x9
   21a24:	mov	x9, x8
   21a28:	mov	x8, x7
   21a2c:	mov	x7, x6
   21a30:	mov	x6, x5
   21a34:	mov	x5, x2
   21a38:	mov	x2, x0
   21a3c:	add	x0, x0, #0x1
   21a40:	b	21824 <PyInit__decimal@@Base+0x72a4>
   21a44:	mov	w4, #0x2e                  	// #46
   21a48:	strb	w4, [x11]
   21a4c:	mov	x11, x10
   21a50:	mov	x10, x9
   21a54:	mov	x9, x8
   21a58:	mov	x8, x7
   21a5c:	mov	x7, x6
   21a60:	mov	x6, x5
   21a64:	mov	x5, x2
   21a68:	mov	x2, x0
   21a6c:	add	x0, x0, #0x1
   21a70:	b	217f0 <PyInit__decimal@@Base+0x7270>
   21a74:	mov	w4, #0x2e                  	// #46
   21a78:	strb	w4, [x12]
   21a7c:	mov	x12, x11
   21a80:	mov	x11, x10
   21a84:	mov	x10, x9
   21a88:	mov	x9, x8
   21a8c:	mov	x8, x7
   21a90:	mov	x7, x6
   21a94:	mov	x6, x5
   21a98:	mov	x5, x2
   21a9c:	mov	x2, x0
   21aa0:	add	x0, x0, #0x1
   21aa4:	b	217bc <PyInit__decimal@@Base+0x723c>
   21aa8:	mov	w4, #0x2e                  	// #46
   21aac:	strb	w4, [x13]
   21ab0:	mov	x13, x12
   21ab4:	mov	x12, x11
   21ab8:	mov	x11, x10
   21abc:	mov	x10, x9
   21ac0:	mov	x9, x8
   21ac4:	mov	x8, x7
   21ac8:	mov	x7, x6
   21acc:	mov	x6, x5
   21ad0:	mov	x5, x2
   21ad4:	mov	x2, x0
   21ad8:	add	x0, x0, #0x1
   21adc:	b	21784 <PyInit__decimal@@Base+0x7204>
   21ae0:	mov	w4, #0x2e                  	// #46
   21ae4:	strb	w4, [x14]
   21ae8:	mov	x14, x13
   21aec:	mov	x13, x12
   21af0:	mov	x12, x11
   21af4:	mov	x11, x10
   21af8:	mov	x10, x9
   21afc:	mov	x9, x8
   21b00:	mov	x8, x7
   21b04:	mov	x7, x6
   21b08:	mov	x6, x5
   21b0c:	mov	x5, x2
   21b10:	mov	x2, x0
   21b14:	add	x0, x0, #0x1
   21b18:	b	2174c <PyInit__decimal@@Base+0x71cc>
   21b1c:	mov	x2, x15
   21b20:	mov	w3, #0x2e                  	// #46
   21b24:	strb	w3, [x4]
   21b28:	add	w1, w1, #0x30
   21b2c:	add	x0, x15, #0x1
   21b30:	strb	w1, [x2]
   21b34:	strb	wzr, [x2, #1]
   21b38:	ret
   21b3c:	mov	w3, #0x2e                  	// #46
   21b40:	strb	w3, [x2]
   21b44:	mov	x2, x0
   21b48:	add	w1, w1, #0x30
   21b4c:	add	x0, x0, #0x1
   21b50:	strb	w1, [x2]
   21b54:	strb	wzr, [x2, #1]
   21b58:	ldp	x19, x20, [sp, #16]
   21b5c:	ldp	x21, x22, [sp, #32]
   21b60:	ldp	x29, x30, [sp], #64
   21b64:	ret
   21b68:	mov	w4, #0x2e                  	// #46
   21b6c:	strb	w4, [x16]
   21b70:	mov	x16, x14
   21b74:	mov	x14, x13
   21b78:	mov	x13, x12
   21b7c:	mov	x12, x11
   21b80:	mov	x11, x10
   21b84:	mov	x10, x9
   21b88:	mov	x9, x8
   21b8c:	mov	x8, x7
   21b90:	mov	x7, x6
   21b94:	mov	x6, x5
   21b98:	mov	x5, x2
   21b9c:	mov	x2, x0
   21ba0:	add	x0, x0, #0x1
   21ba4:	b	21714 <PyInit__decimal@@Base+0x7194>
   21ba8:	mov	w4, #0x2e                  	// #46
   21bac:	strb	w4, [x17]
   21bb0:	mov	x17, x16
   21bb4:	mov	x16, x14
   21bb8:	mov	x14, x13
   21bbc:	mov	x13, x12
   21bc0:	mov	x12, x11
   21bc4:	mov	x11, x10
   21bc8:	mov	x10, x9
   21bcc:	mov	x9, x8
   21bd0:	mov	x8, x7
   21bd4:	mov	x7, x6
   21bd8:	mov	x6, x5
   21bdc:	mov	x5, x2
   21be0:	mov	x2, x0
   21be4:	add	x0, x0, #0x1
   21be8:	b	216dc <PyInit__decimal@@Base+0x715c>
   21bec:	mov	w4, #0x2e                  	// #46
   21bf0:	strb	w4, [x18]
   21bf4:	mov	x18, x17
   21bf8:	mov	x17, x16
   21bfc:	mov	x16, x14
   21c00:	mov	x14, x13
   21c04:	mov	x13, x12
   21c08:	mov	x12, x11
   21c0c:	mov	x11, x10
   21c10:	mov	x10, x9
   21c14:	mov	x9, x8
   21c18:	mov	x8, x7
   21c1c:	mov	x7, x6
   21c20:	mov	x6, x5
   21c24:	mov	x5, x2
   21c28:	mov	x2, x0
   21c2c:	add	x0, x0, #0x1
   21c30:	b	216a4 <PyInit__decimal@@Base+0x7124>
   21c34:	mov	w4, #0x2e                  	// #46
   21c38:	strb	w4, [x30]
   21c3c:	mov	x30, x18
   21c40:	mov	x18, x17
   21c44:	mov	x17, x16
   21c48:	mov	x16, x14
   21c4c:	mov	x14, x13
   21c50:	mov	x13, x12
   21c54:	mov	x12, x11
   21c58:	mov	x11, x10
   21c5c:	mov	x10, x9
   21c60:	mov	x9, x8
   21c64:	mov	x8, x7
   21c68:	mov	x7, x6
   21c6c:	mov	x6, x5
   21c70:	mov	x5, x2
   21c74:	mov	x2, x0
   21c78:	add	x0, x0, #0x1
   21c7c:	b	2166c <PyInit__decimal@@Base+0x70ec>
   21c80:	mov	w4, #0x2e                  	// #46
   21c84:	strb	w4, [x19]
   21c88:	mov	x19, x30
   21c8c:	mov	x30, x18
   21c90:	mov	x18, x17
   21c94:	mov	x17, x16
   21c98:	mov	x16, x14
   21c9c:	mov	x14, x13
   21ca0:	mov	x13, x12
   21ca4:	mov	x12, x11
   21ca8:	mov	x11, x10
   21cac:	mov	x10, x9
   21cb0:	mov	x9, x8
   21cb4:	mov	x8, x7
   21cb8:	mov	x7, x6
   21cbc:	mov	x6, x5
   21cc0:	mov	x5, x2
   21cc4:	mov	x2, x0
   21cc8:	add	x0, x0, #0x1
   21ccc:	b	2162c <PyInit__decimal@@Base+0x70ac>
   21cd0:	mov	w4, #0x2e                  	// #46
   21cd4:	strb	w4, [x20]
   21cd8:	mov	x20, x19
   21cdc:	mov	x19, x30
   21ce0:	mov	x30, x18
   21ce4:	mov	x18, x17
   21ce8:	mov	x17, x16
   21cec:	mov	x16, x14
   21cf0:	mov	x14, x13
   21cf4:	mov	x13, x12
   21cf8:	mov	x12, x11
   21cfc:	mov	x11, x10
   21d00:	mov	x10, x9
   21d04:	mov	x9, x8
   21d08:	mov	x8, x7
   21d0c:	mov	x7, x6
   21d10:	mov	x6, x5
   21d14:	mov	x5, x2
   21d18:	mov	x2, x0
   21d1c:	add	x0, x0, #0x1
   21d20:	b	215f4 <PyInit__decimal@@Base+0x7074>
   21d24:	mov	x21, x15
   21d28:	add	x20, x4, #0x2
   21d2c:	add	x19, x4, #0x3
   21d30:	add	x30, x4, #0x4
   21d34:	add	x18, x4, #0x5
   21d38:	add	x17, x4, #0x6
   21d3c:	add	x16, x4, #0x7
   21d40:	add	x14, x4, #0x8
   21d44:	add	x13, x4, #0x9
   21d48:	add	x12, x4, #0xa
   21d4c:	add	x11, x4, #0xb
   21d50:	add	x10, x4, #0xc
   21d54:	add	x9, x4, #0xd
   21d58:	add	x8, x4, #0xe
   21d5c:	add	x7, x4, #0xf
   21d60:	add	x6, x4, #0x10
   21d64:	add	x5, x4, #0x11
   21d68:	add	x2, x4, #0x12
   21d6c:	add	x0, x4, #0x13
   21d70:	mov	x15, x4
   21d74:	stp	x23, x24, [sp, #48]
   21d78:	b	21578 <PyInit__decimal@@Base+0x6ff8>
   21d7c:	mov	x20, x15
   21d80:	add	x19, x4, #0x2
   21d84:	add	x30, x4, #0x3
   21d88:	add	x18, x4, #0x4
   21d8c:	add	x17, x4, #0x5
   21d90:	add	x16, x4, #0x6
   21d94:	add	x14, x4, #0x7
   21d98:	add	x13, x4, #0x8
   21d9c:	add	x12, x4, #0x9
   21da0:	add	x11, x4, #0xa
   21da4:	add	x10, x4, #0xb
   21da8:	add	x9, x4, #0xc
   21dac:	add	x8, x4, #0xd
   21db0:	add	x7, x4, #0xe
   21db4:	add	x6, x4, #0xf
   21db8:	add	x5, x4, #0x10
   21dbc:	add	x2, x4, #0x11
   21dc0:	add	x0, x4, #0x12
   21dc4:	mov	x21, x4
   21dc8:	b	215b4 <PyInit__decimal@@Base+0x7034>
   21dcc:	mov	x19, x15
   21dd0:	add	x30, x4, #0x2
   21dd4:	add	x18, x4, #0x3
   21dd8:	add	x17, x4, #0x4
   21ddc:	add	x16, x4, #0x5
   21de0:	add	x14, x4, #0x6
   21de4:	add	x13, x4, #0x7
   21de8:	add	x12, x4, #0x8
   21dec:	add	x11, x4, #0x9
   21df0:	add	x10, x4, #0xa
   21df4:	add	x9, x4, #0xb
   21df8:	add	x8, x4, #0xc
   21dfc:	add	x7, x4, #0xd
   21e00:	add	x6, x4, #0xe
   21e04:	add	x5, x4, #0xf
   21e08:	add	x2, x4, #0x10
   21e0c:	add	x0, x4, #0x11
   21e10:	mov	x20, x4
   21e14:	b	215ec <PyInit__decimal@@Base+0x706c>
   21e18:	mov	x30, x15
   21e1c:	add	x18, x4, #0x2
   21e20:	add	x17, x4, #0x3
   21e24:	add	x16, x4, #0x4
   21e28:	add	x14, x4, #0x5
   21e2c:	add	x13, x4, #0x6
   21e30:	add	x12, x4, #0x7
   21e34:	add	x11, x4, #0x8
   21e38:	add	x10, x4, #0x9
   21e3c:	add	x9, x4, #0xa
   21e40:	add	x8, x4, #0xb
   21e44:	add	x7, x4, #0xc
   21e48:	add	x6, x4, #0xd
   21e4c:	add	x5, x4, #0xe
   21e50:	add	x2, x4, #0xf
   21e54:	add	x0, x4, #0x10
   21e58:	mov	x19, x4
   21e5c:	b	21624 <PyInit__decimal@@Base+0x70a4>
   21e60:	mov	x18, x15
   21e64:	add	x17, x4, #0x2
   21e68:	add	x16, x4, #0x3
   21e6c:	add	x14, x4, #0x4
   21e70:	add	x13, x4, #0x5
   21e74:	add	x12, x4, #0x6
   21e78:	add	x11, x4, #0x7
   21e7c:	add	x10, x4, #0x8
   21e80:	add	x9, x4, #0x9
   21e84:	add	x8, x4, #0xa
   21e88:	add	x7, x4, #0xb
   21e8c:	add	x6, x4, #0xc
   21e90:	add	x5, x4, #0xd
   21e94:	add	x2, x4, #0xe
   21e98:	add	x0, x4, #0xf
   21e9c:	mov	x30, x4
   21ea0:	b	21664 <PyInit__decimal@@Base+0x70e4>
   21ea4:	mov	x17, x15
   21ea8:	add	x16, x4, #0x2
   21eac:	add	x14, x4, #0x3
   21eb0:	add	x13, x4, #0x4
   21eb4:	add	x12, x4, #0x5
   21eb8:	add	x11, x4, #0x6
   21ebc:	add	x10, x4, #0x7
   21ec0:	add	x9, x4, #0x8
   21ec4:	add	x8, x4, #0x9
   21ec8:	add	x7, x4, #0xa
   21ecc:	add	x6, x4, #0xb
   21ed0:	add	x5, x4, #0xc
   21ed4:	add	x2, x4, #0xd
   21ed8:	add	x0, x4, #0xe
   21edc:	mov	x18, x4
   21ee0:	b	2169c <PyInit__decimal@@Base+0x711c>
   21ee4:	mov	x16, x15
   21ee8:	add	x14, x4, #0x2
   21eec:	add	x13, x4, #0x3
   21ef0:	add	x12, x4, #0x4
   21ef4:	add	x11, x4, #0x5
   21ef8:	add	x10, x4, #0x6
   21efc:	add	x9, x4, #0x7
   21f00:	add	x8, x4, #0x8
   21f04:	add	x7, x4, #0x9
   21f08:	add	x6, x4, #0xa
   21f0c:	add	x5, x4, #0xb
   21f10:	add	x2, x4, #0xc
   21f14:	add	x0, x4, #0xd
   21f18:	mov	x17, x4
   21f1c:	b	216d4 <PyInit__decimal@@Base+0x7154>
   21f20:	mov	x14, x15
   21f24:	add	x13, x4, #0x2
   21f28:	add	x12, x4, #0x3
   21f2c:	add	x11, x4, #0x4
   21f30:	add	x10, x4, #0x5
   21f34:	add	x9, x4, #0x6
   21f38:	add	x8, x4, #0x7
   21f3c:	add	x7, x4, #0x8
   21f40:	add	x6, x4, #0x9
   21f44:	add	x5, x4, #0xa
   21f48:	add	x2, x4, #0xb
   21f4c:	add	x0, x4, #0xc
   21f50:	mov	x16, x4
   21f54:	b	2170c <PyInit__decimal@@Base+0x718c>
   21f58:	mov	x13, x15
   21f5c:	add	x12, x4, #0x2
   21f60:	add	x11, x4, #0x3
   21f64:	add	x10, x4, #0x4
   21f68:	add	x9, x4, #0x5
   21f6c:	add	x8, x4, #0x6
   21f70:	add	x7, x4, #0x7
   21f74:	add	x6, x4, #0x8
   21f78:	add	x5, x4, #0x9
   21f7c:	add	x2, x4, #0xa
   21f80:	add	x0, x4, #0xb
   21f84:	mov	x14, x4
   21f88:	b	21744 <PyInit__decimal@@Base+0x71c4>
   21f8c:	mov	x12, x15
   21f90:	add	x11, x4, #0x2
   21f94:	add	x10, x4, #0x3
   21f98:	add	x9, x4, #0x4
   21f9c:	add	x8, x4, #0x5
   21fa0:	add	x7, x4, #0x6
   21fa4:	add	x6, x4, #0x7
   21fa8:	add	x5, x4, #0x8
   21fac:	add	x2, x4, #0x9
   21fb0:	add	x0, x4, #0xa
   21fb4:	mov	x13, x4
   21fb8:	b	2177c <PyInit__decimal@@Base+0x71fc>
   21fbc:	mov	x11, x15
   21fc0:	add	x10, x4, #0x2
   21fc4:	add	x9, x4, #0x3
   21fc8:	add	x8, x4, #0x4
   21fcc:	add	x7, x4, #0x5
   21fd0:	add	x6, x4, #0x6
   21fd4:	add	x5, x4, #0x7
   21fd8:	add	x2, x4, #0x8
   21fdc:	add	x0, x4, #0x9
   21fe0:	mov	x12, x4
   21fe4:	b	217b4 <PyInit__decimal@@Base+0x7234>
   21fe8:	mov	x10, x15
   21fec:	add	x9, x4, #0x2
   21ff0:	add	x8, x4, #0x3
   21ff4:	add	x7, x4, #0x4
   21ff8:	add	x6, x4, #0x5
   21ffc:	add	x5, x4, #0x6
   22000:	add	x2, x4, #0x7
   22004:	add	x0, x4, #0x8
   22008:	mov	x11, x4
   2200c:	b	217e8 <PyInit__decimal@@Base+0x7268>
   22010:	mov	x9, x15
   22014:	add	x8, x4, #0x2
   22018:	add	x7, x4, #0x3
   2201c:	add	x6, x4, #0x4
   22020:	add	x5, x4, #0x5
   22024:	add	x2, x4, #0x6
   22028:	add	x0, x4, #0x7
   2202c:	mov	x10, x4
   22030:	b	2181c <PyInit__decimal@@Base+0x729c>
   22034:	mov	x8, x15
   22038:	add	x7, x4, #0x2
   2203c:	add	x6, x4, #0x3
   22040:	add	x5, x4, #0x4
   22044:	add	x2, x4, #0x5
   22048:	add	x0, x4, #0x6
   2204c:	mov	x9, x4
   22050:	b	21850 <PyInit__decimal@@Base+0x72d0>
   22054:	mov	x7, x15
   22058:	add	x6, x4, #0x2
   2205c:	add	x5, x4, #0x3
   22060:	add	x2, x4, #0x4
   22064:	add	x0, x4, #0x5
   22068:	mov	x8, x4
   2206c:	b	21888 <PyInit__decimal@@Base+0x7308>
   22070:	mov	x6, x15
   22074:	add	x5, x4, #0x2
   22078:	add	x2, x4, #0x3
   2207c:	add	x0, x4, #0x4
   22080:	mov	x7, x4
   22084:	b	218b8 <PyInit__decimal@@Base+0x7338>
   22088:	mov	x5, x15
   2208c:	add	x2, x4, #0x2
   22090:	add	x0, x4, #0x3
   22094:	mov	x6, x4
   22098:	b	218f4 <PyInit__decimal@@Base+0x7374>
   2209c:	mov	x2, x15
   220a0:	add	x0, x4, #0x2
   220a4:	mov	x5, x4
   220a8:	b	2192c <PyInit__decimal@@Base+0x73ac>
   220ac:	mov	x22, x4
   220b0:	mov	w23, #0x2e                  	// #46
   220b4:	mov	x4, x15
   220b8:	mov	x15, x21
   220bc:	mov	x21, x20
   220c0:	mov	x20, x19
   220c4:	strb	w23, [x22], #21
   220c8:	mov	x19, x30
   220cc:	mov	x30, x18
   220d0:	mov	x18, x17
   220d4:	mov	x17, x16
   220d8:	mov	x16, x14
   220dc:	mov	x14, x13
   220e0:	mov	x13, x12
   220e4:	mov	x12, x11
   220e8:	mov	x11, x10
   220ec:	mov	x10, x9
   220f0:	mov	x9, x8
   220f4:	mov	x8, x7
   220f8:	mov	x7, x6
   220fc:	mov	x6, x5
   22100:	mov	x5, x2
   22104:	mov	x2, x0
   22108:	mov	x0, x22
   2210c:	b	21554 <PyInit__decimal@@Base+0x6fd4>
   22110:	mov	w4, #0x2e                  	// #46
   22114:	strb	w4, [x21]
   22118:	mov	x21, x20
   2211c:	mov	x20, x19
   22120:	mov	x19, x30
   22124:	mov	x30, x18
   22128:	mov	x18, x17
   2212c:	mov	x17, x16
   22130:	mov	x16, x14
   22134:	mov	x14, x13
   22138:	mov	x13, x12
   2213c:	mov	x12, x11
   22140:	mov	x11, x10
   22144:	mov	x10, x9
   22148:	mov	x9, x8
   2214c:	mov	x8, x7
   22150:	mov	x7, x6
   22154:	mov	x6, x5
   22158:	mov	x5, x2
   2215c:	mov	x2, x0
   22160:	add	x0, x0, #0x1
   22164:	b	215bc <PyInit__decimal@@Base+0x703c>
   22168:	mov	w4, #0x2e                  	// #46
   2216c:	strb	w4, [x15]
   22170:	mov	x15, x21
   22174:	mov	x21, x20
   22178:	mov	x20, x19
   2217c:	mov	x19, x30
   22180:	mov	x30, x18
   22184:	mov	x18, x17
   22188:	mov	x17, x16
   2218c:	mov	x16, x14
   22190:	mov	x14, x13
   22194:	mov	x13, x12
   22198:	mov	x12, x11
   2219c:	mov	x11, x10
   221a0:	mov	x10, x9
   221a4:	mov	x9, x8
   221a8:	mov	x8, x7
   221ac:	mov	x7, x6
   221b0:	mov	x6, x5
   221b4:	mov	x5, x2
   221b8:	mov	x2, x0
   221bc:	add	x0, x0, #0x1
   221c0:	b	21580 <PyInit__decimal@@Base+0x7000>
   221c4:	nop
   221c8:	stp	x29, x30, [sp, #-48]!
   221cc:	mov	x29, sp
   221d0:	stp	x19, x20, [sp, #16]
   221d4:	mov	x20, x0
   221d8:	str	x21, [sp, #32]
   221dc:	mov	x21, x1
   221e0:	ldrb	w19, [x0]
   221e4:	cmp	w19, #0x30
   221e8:	b.ne	221fc <PyInit__decimal@@Base+0x7c7c>  // b.any
   221ec:	nop
   221f0:	ldrb	w19, [x20, #1]!
   221f4:	cmp	w19, #0x30
   221f8:	b.eq	221f0 <PyInit__decimal@@Base+0x7c70>  // b.none
   221fc:	bl	6880 <__ctype_b_loc@plt>
   22200:	mov	x2, x20
   22204:	ldr	x3, [x0]
   22208:	b	22210 <PyInit__decimal@@Base+0x7c90>
   2220c:	ldrb	w19, [x2, #1]!
   22210:	ubfiz	x19, x19, #1, #8
   22214:	ldrh	w0, [x3, x19]
   22218:	tbnz	w0, #11, 2220c <PyInit__decimal@@Base+0x7c8c>
   2221c:	str	x2, [x21]
   22220:	ldr	x21, [sp, #32]
   22224:	ldrb	w0, [x2]
   22228:	cmp	w0, #0x0
   2222c:	csel	x0, x20, xzr, eq  // eq = none
   22230:	ldp	x19, x20, [sp, #16]
   22234:	ldp	x29, x30, [sp], #48
   22238:	ret
   2223c:	nop
   22240:	stp	x29, x30, [sp, #-112]!
   22244:	cmp	x1, #0x0
   22248:	mov	x29, sp
   2224c:	stp	x21, x22, [sp, #32]
   22250:	mov	x22, x0
   22254:	cset	x21, ne  // ne = any
   22258:	ldr	x0, [x7, #32]
   2225c:	stp	x19, x20, [sp, #16]
   22260:	mov	x20, x4
   22264:	stp	x23, x24, [sp, #48]
   22268:	mov	x24, x7
   2226c:	mov	x23, x3
   22270:	stp	x25, x26, [sp, #64]
   22274:	mov	x25, x1
   22278:	stp	x27, x28, [sp, #80]
   2227c:	mov	x28, x6
   22280:	stp	x2, x5, [sp, #96]
   22284:	bl	64d0 <strlen@plt>
   22288:	mov	x1, x28
   2228c:	ldr	x19, [x22]
   22290:	stp	x28, x28, [x22]
   22294:	mov	x26, x0
   22298:	ldr	x27, [x22, #24]
   2229c:	sub	x19, x19, x28
   222a0:	str	x19, [x22, #16]
   222a4:	cbz	x27, 22528 <PyInit__decimal@@Base+0x7fa8>
   222a8:	subs	x2, x28, #0x1
   222ac:	b.mi	22550 <PyInit__decimal@@Base+0x7fd0>  // b.first
   222b0:	ldr	x5, [sp, #104]
   222b4:	add	x6, x27, x19
   222b8:	ldrb	w1, [x5, x2]
   222bc:	strb	w1, [x6, x2]
   222c0:	sub	x2, x2, #0x1
   222c4:	cmn	x2, #0x1
   222c8:	b.ne	222b8 <PyInit__decimal@@Base+0x7d38>  // b.any
   222cc:	ldr	x27, [x22, #24]
   222d0:	cbz	x20, 2249c <PyInit__decimal@@Base+0x7f1c>
   222d4:	mov	x0, x20
   222d8:	bl	64d0 <strlen@plt>
   222dc:	ldp	x1, x3, [x22]
   222e0:	cmp	x0, #0x0
   222e4:	ldr	x5, [x22, #16]
   222e8:	sub	x5, x5, x0
   222ec:	str	x5, [x22, #16]
   222f0:	cinc	x3, x3, ne  // ne = any
   222f4:	add	x1, x0, x1
   222f8:	stp	x1, x3, [x22]
   222fc:	cbz	x27, 2232c <PyInit__decimal@@Base+0x7dac>
   22300:	sub	x2, x0, #0x1
   22304:	cbz	x0, 2232c <PyInit__decimal@@Base+0x7dac>
   22308:	add	x5, x27, x5
   2230c:	nop
   22310:	ldrb	w0, [x20, x2]
   22314:	strb	w0, [x5, x2]
   22318:	sub	x2, x2, #0x1
   2231c:	cmn	x2, #0x1
   22320:	b.ne	22310 <PyInit__decimal@@Base+0x7d90>  // b.any
   22324:	ldp	x1, x3, [x22]
   22328:	ldp	x5, x27, [x22, #16]
   2232c:	mov	w8, #0x0                   	// #0
   22330:	ldr	x7, [x24, #40]
   22334:	mov	w6, #0x30                  	// #48
   22338:	ldrb	w2, [x7]
   2233c:	and	x0, x2, #0xff
   22340:	sub	w2, w2, #0x1
   22344:	mov	x9, #0x0                   	// #0
   22348:	and	w2, w2, #0xff
   2234c:	cmp	w2, #0xfd
   22350:	ccmp	x23, x0, #0x1, ls  // ls = plast
   22354:	b.ge	22448 <PyInit__decimal@@Base+0x7ec8>  // b.tcont
   22358:	add	x1, x23, x1
   2235c:	add	x0, x23, x3
   22360:	sub	x5, x5, x23
   22364:	stp	x1, x0, [x22]
   22368:	str	x5, [x22, #16]
   2236c:	cbz	w8, 22468 <PyInit__decimal@@Base+0x7ee8>
   22370:	cbz	x27, 22394 <PyInit__decimal@@Base+0x7e14>
   22374:	subs	x2, x23, #0x1
   22378:	b.mi	22394 <PyInit__decimal@@Base+0x7e14>  // b.first
   2237c:	add	x4, x27, x5
   22380:	strb	w6, [x4, x2]
   22384:	sub	x2, x2, #0x1
   22388:	cmn	x2, #0x1
   2238c:	b.ne	22380 <PyInit__decimal@@Base+0x7e00>  // b.any
   22390:	ldr	x27, [x22, #24]
   22394:	cbnz	x9, 224a8 <PyInit__decimal@@Base+0x7f28>
   22398:	ldrb	w0, [x24, #17]
   2239c:	cmp	w0, #0x7a
   223a0:	b.ne	223b8 <PyInit__decimal@@Base+0x7e38>  // b.any
   223a4:	ldr	x3, [x22, #8]
   223a8:	ldr	x5, [x24]
   223ac:	add	x4, x3, x21
   223b0:	cmp	x4, x5
   223b4:	b.lt	22410 <PyInit__decimal@@Base+0x7e90>  // b.tstop
   223b8:	cbz	x25, 223e8 <PyInit__decimal@@Base+0x7e68>
   223bc:	ldp	x2, x1, [x22]
   223c0:	ldr	x0, [x22, #16]
   223c4:	sub	x0, x0, #0x1
   223c8:	str	x0, [x22, #16]
   223cc:	add	x2, x2, #0x1
   223d0:	add	x1, x1, #0x1
   223d4:	stp	x2, x1, [x22]
   223d8:	cbz	x27, 223f4 <PyInit__decimal@@Base+0x7e74>
   223dc:	ldrb	w1, [x25]
   223e0:	strb	w1, [x27, x0]
   223e4:	ldr	x27, [x22, #24]
   223e8:	cbz	x27, 223f4 <PyInit__decimal@@Base+0x7e74>
   223ec:	ldr	x0, [x22]
   223f0:	strb	wzr, [x27, x0]
   223f4:	ldp	x19, x20, [sp, #16]
   223f8:	ldp	x21, x22, [sp, #32]
   223fc:	ldp	x23, x24, [sp, #48]
   22400:	ldp	x25, x26, [sp, #64]
   22404:	ldp	x27, x28, [sp, #80]
   22408:	ldp	x29, x30, [sp], #112
   2240c:	ret
   22410:	ldrb	w2, [x7]
   22414:	mov	w8, #0x1                   	// #1
   22418:	mov	x9, #0x0                   	// #0
   2241c:	and	x0, x2, #0xff
   22420:	sub	w2, w2, #0x1
   22424:	and	w2, w2, #0xff
   22428:	sub	x0, x0, x23
   2242c:	cmp	w2, #0xfd
   22430:	sub	x23, x5, x4
   22434:	ccmp	x23, x0, #0x1, ls  // ls = plast
   22438:	ldr	x1, [x22]
   2243c:	ldr	x5, [x22, #16]
   22440:	b.lt	22358 <PyInit__decimal@@Base+0x7dd8>  // b.tstop
   22444:	nop
   22448:	sub	x9, x23, x0
   2244c:	mov	x23, x0
   22450:	add	x1, x23, x1
   22454:	add	x0, x23, x3
   22458:	sub	x5, x5, x23
   2245c:	stp	x1, x0, [x22]
   22460:	str	x5, [x22, #16]
   22464:	cbnz	w8, 22370 <PyInit__decimal@@Base+0x7df0>
   22468:	cbz	x27, 22394 <PyInit__decimal@@Base+0x7e14>
   2246c:	subs	x2, x23, #0x1
   22470:	b.mi	22394 <PyInit__decimal@@Base+0x7e14>  // b.first
   22474:	ldr	x0, [sp, #96]
   22478:	add	x4, x27, x5
   2247c:	add	x0, x0, x9
   22480:	ldrb	w1, [x0, x2]
   22484:	strb	w1, [x4, x2]
   22488:	sub	x2, x2, #0x1
   2248c:	cmn	x2, #0x1
   22490:	b.ne	22480 <PyInit__decimal@@Base+0x7f00>  // b.any
   22494:	ldr	x27, [x22, #24]
   22498:	b	22394 <PyInit__decimal@@Base+0x7e14>
   2249c:	ldr	x1, [x22]
   224a0:	ldp	x3, x5, [x22, #8]
   224a4:	b	2232c <PyInit__decimal@@Base+0x7dac>
   224a8:	ldp	x1, x3, [x22]
   224ac:	ldr	x5, [x22, #16]
   224b0:	cbz	x26, 22504 <PyInit__decimal@@Base+0x7f84>
   224b4:	cmp	x9, #0x1
   224b8:	add	x1, x1, x26
   224bc:	add	x3, x3, #0x1
   224c0:	sub	x5, x5, x26
   224c4:	cset	x0, gt
   224c8:	ldr	x4, [x24, #32]
   224cc:	stp	x1, x3, [x22]
   224d0:	and	x0, x0, x8
   224d4:	str	x5, [x22, #16]
   224d8:	sub	x9, x9, x0
   224dc:	cbz	x27, 22504 <PyInit__decimal@@Base+0x7f84>
   224e0:	add	x5, x27, x5
   224e4:	sub	x2, x26, #0x1
   224e8:	ldrb	w0, [x4, x2]
   224ec:	strb	w0, [x5, x2]
   224f0:	sub	x2, x2, #0x1
   224f4:	cmn	x2, #0x1
   224f8:	b.ne	224e8 <PyInit__decimal@@Base+0x7f68>  // b.any
   224fc:	ldp	x1, x3, [x22]
   22500:	ldp	x5, x27, [x22, #16]
   22504:	ldrb	w2, [x7]
   22508:	cbz	w2, 2251c <PyInit__decimal@@Base+0x7f9c>
   2250c:	ldrb	w0, [x7, #1]
   22510:	cbz	w0, 2251c <PyInit__decimal@@Base+0x7f9c>
   22514:	add	x7, x7, #0x1
   22518:	mov	w2, w0
   2251c:	mov	x23, x9
   22520:	and	x0, x2, #0xff
   22524:	b	22340 <PyInit__decimal@@Base+0x7dc0>
   22528:	cbz	x20, 224a0 <PyInit__decimal@@Base+0x7f20>
   2252c:	mov	x0, x20
   22530:	bl	64d0 <strlen@plt>
   22534:	cmp	x0, #0x0
   22538:	sub	x5, x19, x0
   2253c:	add	x1, x0, x28
   22540:	cinc	x3, x28, ne  // ne = any
   22544:	stp	x1, x3, [x22]
   22548:	str	x5, [x22, #16]
   2254c:	b	2232c <PyInit__decimal@@Base+0x7dac>
   22550:	cbz	x20, 224a0 <PyInit__decimal@@Base+0x7f20>
   22554:	mov	x0, x20
   22558:	bl	64d0 <strlen@plt>
   2255c:	cmp	x0, #0x0
   22560:	sub	x5, x19, x0
   22564:	cinc	x3, x28, ne  // ne = any
   22568:	add	x1, x0, x28
   2256c:	stp	x1, x3, [x22]
   22570:	str	x5, [x22, #16]
   22574:	b	22300 <PyInit__decimal@@Base+0x7d80>
   22578:	stp	x29, x30, [sp, #-144]!
   2257c:	mov	x29, sp
   22580:	stp	x19, x20, [sp, #16]
   22584:	mov	x20, x1
   22588:	stp	x23, x24, [sp, #48]
   2258c:	mov	x23, x3
   22590:	str	w2, [sp, #104]
   22594:	str	x0, [sp, #120]
   22598:	mov	x0, x1
   2259c:	bl	27ff8 <PyInit__decimal@@Base+0xda78>
   225a0:	cbnz	w0, 22b40 <PyInit__decimal@@Base+0x85c0>
   225a4:	ldr	w2, [sp, #104]
   225a8:	ldr	x1, [x20, #8]
   225ac:	and	w0, w2, #0x8
   225b0:	str	w0, [sp, #140]
   225b4:	ldr	x0, [x20, #16]
   225b8:	add	x3, x0, x1
   225bc:	str	x3, [sp, #128]
   225c0:	tbz	w2, #3, 22ac8 <PyInit__decimal@@Base+0x8548>
   225c4:	cmp	x23, x0
   225c8:	add	x2, x0, #0x2
   225cc:	sub	x2, x2, x23
   225d0:	csel	x0, x23, x0, ge  // ge = tcont
   225d4:	cmp	x23, #0x0
   225d8:	mov	x1, #0x1                   	// #1
   225dc:	csel	x0, x2, x0, le
   225e0:	add	x0, x0, #0x1a
   225e4:	bl	25260 <PyInit__decimal@@Base+0xace0>
   225e8:	str	x0, [sp, #112]
   225ec:	mov	x19, x0
   225f0:	cbz	x0, 239fc <PyInit__decimal@@Base+0x947c>
   225f4:	mov	x0, x20
   225f8:	stp	x21, x22, [sp, #32]
   225fc:	bl	27fa8 <PyInit__decimal@@Base+0xda28>
   22600:	cbz	w0, 22b18 <PyInit__decimal@@Base+0x8598>
   22604:	mov	w0, #0x2d                  	// #45
   22608:	strb	w0, [x19], #1
   2260c:	cmp	x23, #0x0
   22610:	b.le	22f80 <PyInit__decimal@@Base+0x8a00>
   22614:	ldr	x0, [x20, #16]
   22618:	cmp	x0, x23
   2261c:	mov	x0, x20
   22620:	b.le	2341c <PyInit__decimal@@Base+0x8e9c>
   22624:	bl	27c98 <PyInit__decimal@@Base+0xd718>
   22628:	add	x21, x19, x23
   2262c:	mov	x22, x0
   22630:	bl	27b20 <PyInit__decimal@@Base+0xd5a0>
   22634:	mov	x3, x21
   22638:	mov	w2, w0
   2263c:	mov	x1, x22
   22640:	mov	x0, x19
   22644:	bl	214a0 <PyInit__decimal@@Base+0x6f20>
   22648:	mov	x19, x0
   2264c:	ldr	x2, [x20, #24]
   22650:	subs	x2, x2, #0x2
   22654:	b.mi	23370 <PyInit__decimal@@Base+0x8df0>  // b.first
   22658:	mov	x16, #0x7857                	// #30807
   2265c:	mov	x14, #0xeac3                	// #60099
   22660:	mov	x13, #0x8000                	// #32768
   22664:	mov	x12, #0xcd81                	// #52609
   22668:	mov	x10, #0x385                 	// #901
   2266c:	mov	x8, #0x2233                	// #8755
   22670:	mov	x6, #0xaaff                	// #43775
   22674:	mov	x4, #0xd5bf                	// #54719
   22678:	mov	x3, #0x5a53                	// #23123
   2267c:	mov	x30, #0x42bd                	// #17085
   22680:	stp	x27, x28, [sp, #80]
   22684:	mov	x27, #0xcefd                	// #52989
   22688:	mov	x22, #0xa7640000            	// #2808348672
   2268c:	mov	x18, #0x1b53                	// #6995
   22690:	mov	x17, #0x5d8a0000            	// #1569325056
   22694:	movk	x16, #0xb113, lsl #16
   22698:	mov	x15, #0x6fc10000            	// #1874919424
   2269c:	movk	x14, #0xf3dc, lsl #16
   226a0:	movk	x13, #0xa4c6, lsl #16
   226a4:	movk	x12, #0x5095, lsl #16
   226a8:	mov	x11, #0x4000                	// #16384
   226ac:	movk	x10, #0x92ed, lsl #16
   226b0:	mov	x9, #0xa000                	// #40960
   226b4:	movk	x8, #0x5bd4, lsl #16
   226b8:	mov	x7, #0x1000                	// #4096
   226bc:	movk	x6, #0xcb24, lsl #16
   226c0:	mov	x5, #0xe800                	// #59392
   226c4:	movk	x4, #0xbded, lsl #16
   226c8:	movk	x3, #0xa09b, lsl #16
   226cc:	movk	x27, #0x8461, lsl #16
   226d0:	movk	x30, #0xe57a, lsl #16
   226d4:	movk	x22, #0xb6b3, lsl #32
   226d8:	movk	x18, #0xd519, lsl #16
   226dc:	movk	x17, #0x4578, lsl #32
   226e0:	movk	x16, #0x652f, lsl #32
   226e4:	movk	x15, #0x86f2, lsl #32
   226e8:	movk	x14, #0x4075, lsl #32
   226ec:	movk	x13, #0x8d7e, lsl #32
   226f0:	movk	x12, #0x4dc3, lsl #32
   226f4:	movk	x11, #0x107a, lsl #16
   226f8:	movk	x10, #0x84d0, lsl #32
   226fc:	movk	x9, #0x4e72, lsl #16
   22700:	movk	x8, #0x3302, lsl #32
   22704:	movk	x7, #0xd4a5, lsl #16
   22708:	movk	x6, #0xff0b, lsl #32
   2270c:	movk	x5, #0x4876, lsl #16
   22710:	movk	x4, #0xfece, lsl #32
   22714:	movk	x3, #0xb82f, lsl #32
   22718:	movk	x27, #0x7711, lsl #32
   2271c:	movk	x30, #0x94d5, lsl #32
   22720:	movk	x22, #0xde0, lsl #48
   22724:	movk	x18, #0x5c3b, lsl #32
   22728:	movk	x17, #0x163, lsl #48
   2272c:	movk	x16, #0x39a5, lsl #48
   22730:	movk	x15, #0x23, lsl #48
   22734:	movk	x14, #0x2, lsl #48
   22738:	movk	x13, #0x3, lsl #48
   2273c:	movk	x12, #0xb42, lsl #48
   22740:	movk	x11, #0x5af3, lsl #32
   22744:	movk	x10, #0x384b, lsl #48
   22748:	movk	x9, #0x918, lsl #32
   2274c:	movk	x8, #0x232f, lsl #48
   22750:	movk	x7, #0xe8, lsl #32
   22754:	movk	x6, #0xafeb, lsl #48
   22758:	movk	x5, #0x17, lsl #32
   2275c:	movk	x4, #0xdbe6, lsl #48
   22760:	movk	x3, #0x44, lsl #48
   22764:	movk	x27, #0xabcc, lsl #48
   22768:	movk	x30, #0xd6bf, lsl #48
   2276c:	stp	x25, x26, [sp, #64]
   22770:	b	22a9c <PyInit__decimal@@Base+0x851c>
   22774:	mov	x25, #0x490f                	// #18703
   22778:	lsr	x1, x0, #18
   2277c:	movk	x25, #0x7747, lsl #16
   22780:	cmp	x21, x24
   22784:	movk	x25, #0x49c9, lsl #32
   22788:	umulh	x1, x1, x25
   2278c:	lsr	x1, x1, #24
   22790:	add	w25, w1, #0x30
   22794:	strb	w25, [x19]
   22798:	msub	x0, x1, x22, x0
   2279c:	b.eq	23904 <PyInit__decimal@@Base+0x9384>  // b.none
   227a0:	lsr	x1, x0, #17
   227a4:	mov	x19, x24
   227a8:	umulh	x1, x1, x18
   227ac:	lsr	x1, x1, #22
   227b0:	add	w25, w1, #0x30
   227b4:	strb	w25, [x19], #1
   227b8:	msub	x1, x1, x17, x0
   227bc:	cmp	x21, x19
   227c0:	b.eq	238f4 <PyInit__decimal@@Base+0x9374>  // b.none
   227c4:	umulh	x0, x1, x16
   227c8:	mov	x24, x19
   227cc:	lsr	x0, x0, #51
   227d0:	add	w25, w0, #0x30
   227d4:	strb	w25, [x24], #1
   227d8:	msub	x1, x0, x15, x1
   227dc:	cmp	x21, x24
   227e0:	b.eq	238e4 <PyInit__decimal@@Base+0x9364>  // b.none
   227e4:	lsr	x0, x1, #15
   227e8:	mov	x19, x24
   227ec:	umulh	x0, x0, x14
   227f0:	lsr	x0, x0, #20
   227f4:	add	w25, w0, #0x30
   227f8:	strb	w25, [x19], #1
   227fc:	msub	x0, x0, x13, x1
   22800:	cmp	x21, x19
   22804:	b.eq	238d4 <PyInit__decimal@@Base+0x9354>  // b.none
   22808:	umulh	x1, x0, x12
   2280c:	mov	x24, x19
   22810:	lsr	x1, x1, #42
   22814:	add	w25, w1, #0x30
   22818:	strb	w25, [x24], #1
   2281c:	msub	x0, x1, x11, x0
   22820:	cmp	x21, x24
   22824:	b.eq	238c4 <PyInit__decimal@@Base+0x9344>  // b.none
   22828:	umulh	x1, x0, x10
   2282c:	mov	x19, x24
   22830:	lsr	x1, x1, #41
   22834:	add	w25, w1, #0x30
   22838:	strb	w25, [x19], #1
   2283c:	msub	x1, x1, x9, x0
   22840:	cmp	x21, x19
   22844:	b.eq	238b4 <PyInit__decimal@@Base+0x9334>  // b.none
   22848:	umulh	x0, x1, x8
   2284c:	mov	x24, x19
   22850:	lsr	x0, x0, #37
   22854:	add	w25, w0, #0x30
   22858:	strb	w25, [x24], #1
   2285c:	msub	x0, x0, x7, x1
   22860:	cmp	x21, x24
   22864:	b.eq	238a4 <PyInit__decimal@@Base+0x9324>  // b.none
   22868:	umulh	x1, x0, x6
   2286c:	mov	x19, x24
   22870:	lsr	x1, x1, #36
   22874:	add	w25, w1, #0x30
   22878:	strb	w25, [x19], #1
   2287c:	msub	x0, x1, x5, x0
   22880:	cmp	x21, x19
   22884:	b.eq	23894 <PyInit__decimal@@Base+0x9314>  // b.none
   22888:	umulh	x1, x0, x4
   2288c:	mov	x24, x19
   22890:	mov	x25, #0xe400                	// #58368
   22894:	movk	x25, #0x540b, lsl #16
   22898:	lsr	x1, x1, #33
   2289c:	movk	x25, #0x2, lsl #32
   228a0:	add	w26, w1, #0x30
   228a4:	strb	w26, [x24], #1
   228a8:	msub	x1, x1, x25, x0
   228ac:	cmp	x21, x24
   228b0:	b.eq	23884 <PyInit__decimal@@Base+0x9304>  // b.none
   228b4:	lsr	x0, x1, #9
   228b8:	mov	x19, x24
   228bc:	mov	x25, #0xca00                	// #51712
   228c0:	movk	x25, #0x3b9a, lsl #16
   228c4:	umulh	x0, x0, x3
   228c8:	lsr	x0, x0, #11
   228cc:	add	w26, w0, #0x30
   228d0:	strb	w26, [x19], #1
   228d4:	msub	x0, x0, x25, x1
   228d8:	cmp	x21, x19
   228dc:	b.eq	23874 <PyInit__decimal@@Base+0x92f4>  // b.none
   228e0:	umulh	x24, x0, x27
   228e4:	mov	x26, x19
   228e8:	mov	x1, #0xe100                	// #57600
   228ec:	movk	x1, #0x5f5, lsl #16
   228f0:	lsr	x24, x24, #26
   228f4:	add	w25, w24, #0x30
   228f8:	strb	w25, [x26], #1
   228fc:	msub	x0, x24, x1, x0
   22900:	cmp	x21, x26
   22904:	b.eq	23864 <PyInit__decimal@@Base+0x92e4>  // b.none
   22908:	umulh	x1, x0, x30
   2290c:	mov	x25, x26
   22910:	mov	x24, #0x9680                	// #38528
   22914:	movk	x24, #0x98, lsl #16
   22918:	lsr	x1, x1, #23
   2291c:	add	w19, w1, #0x30
   22920:	strb	w19, [x25], #1
   22924:	msub	x24, x1, x24, x0
   22928:	cmp	x21, x25
   2292c:	b.eq	23854 <PyInit__decimal@@Base+0x92d4>  // b.none
   22930:	mov	x0, #0x34db                	// #13531
   22934:	mov	x19, x25
   22938:	movk	x0, #0xd7b6, lsl #16
   2293c:	mov	x1, #0x4240                	// #16960
   22940:	movk	x0, #0xde82, lsl #32
   22944:	movk	x1, #0xf, lsl #16
   22948:	movk	x0, #0x431b, lsl #48
   2294c:	umulh	x0, x24, x0
   22950:	lsr	x0, x0, #18
   22954:	add	w26, w0, #0x30
   22958:	strb	w26, [x19], #1
   2295c:	msub	x1, x0, x1, x24
   22960:	cmp	x21, x19
   22964:	b.eq	23844 <PyInit__decimal@@Base+0x92c4>  // b.none
   22968:	mov	x26, #0x7843                	// #30787
   2296c:	lsr	x0, x1, #5
   22970:	movk	x26, #0x71b4, lsl #16
   22974:	mov	x25, x19
   22978:	movk	x26, #0x5ac4, lsl #32
   2297c:	mov	x24, #0x86a0                	// #34464
   22980:	movk	x26, #0xa7c, lsl #48
   22984:	movk	x24, #0x1, lsl #16
   22988:	umulh	x0, x0, x26
   2298c:	lsr	x0, x0, #7
   22990:	add	w26, w0, #0x30
   22994:	strb	w26, [x25], #1
   22998:	msub	x0, x0, x24, x1
   2299c:	cmp	x21, x25
   229a0:	b.eq	23834 <PyInit__decimal@@Base+0x92b4>  // b.none
   229a4:	mov	x1, #0x594b                	// #22859
   229a8:	mov	x19, x25
   229ac:	movk	x1, #0x3886, lsl #16
   229b0:	movk	x1, #0xc5d6, lsl #32
   229b4:	movk	x1, #0x346d, lsl #48
   229b8:	umulh	x24, x0, x1
   229bc:	mov	x1, #0x2710                	// #10000
   229c0:	lsr	x24, x24, #11
   229c4:	add	w26, w24, #0x30
   229c8:	strb	w26, [x19], #1
   229cc:	msub	x0, x24, x1, x0
   229d0:	cmp	x21, x19
   229d4:	b.eq	23824 <PyInit__decimal@@Base+0x92a4>  // b.none
   229d8:	mov	x24, #0xf7cf                	// #63439
   229dc:	lsr	x1, x0, #3
   229e0:	movk	x24, #0xe353, lsl #16
   229e4:	mov	x25, x19
   229e8:	movk	x24, #0x9ba5, lsl #32
   229ec:	movk	x24, #0x20c4, lsl #48
   229f0:	umulh	x1, x1, x24
   229f4:	lsr	x1, x1, #4
   229f8:	add	w26, w1, #0x30
   229fc:	strb	w26, [x25], #1
   22a00:	lsl	x24, x1, #5
   22a04:	sub	x24, x24, x1
   22a08:	cmp	x21, x25
   22a0c:	add	x1, x1, x24, lsl #2
   22a10:	sub	x0, x0, x1, lsl #3
   22a14:	b.eq	23814 <PyInit__decimal@@Base+0x9294>  // b.none
   22a18:	mov	x24, #0xf5c3                	// #62915
   22a1c:	lsr	x1, x0, #2
   22a20:	movk	x24, #0x5c28, lsl #16
   22a24:	mov	x19, x25
   22a28:	movk	x24, #0xc28f, lsl #32
   22a2c:	movk	x24, #0x28f5, lsl #48
   22a30:	umulh	x1, x1, x24
   22a34:	lsr	x1, x1, #2
   22a38:	add	w26, w1, #0x30
   22a3c:	strb	w26, [x19], #1
   22a40:	add	x24, x1, x1, lsl #1
   22a44:	cmp	x21, x19
   22a48:	add	x1, x1, x24, lsl #3
   22a4c:	sub	x24, x0, x1, lsl #2
   22a50:	b.eq	23804 <PyInit__decimal@@Base+0x9284>  // b.none
   22a54:	mov	x0, #0xcccccccccccccccc    	// #-3689348814741910324
   22a58:	mov	x1, x19
   22a5c:	movk	x0, #0xcccd
   22a60:	umulh	x0, x24, x0
   22a64:	lsr	x0, x0, #3
   22a68:	add	w25, w0, #0x30
   22a6c:	strb	w25, [x1], #1
   22a70:	add	x0, x0, x0, lsl #2
   22a74:	cmp	x21, x1
   22a78:	sub	x0, x24, x0, lsl #1
   22a7c:	b.eq	237f4 <PyInit__decimal@@Base+0x9274>  // b.none
   22a80:	mov	x19, x1
   22a84:	add	w0, w0, #0x30
   22a88:	sub	x2, x2, #0x1
   22a8c:	cmn	x2, #0x1
   22a90:	strb	w0, [x19], #1
   22a94:	strb	wzr, [x1, #1]
   22a98:	b.eq	23410 <PyInit__decimal@@Base+0x8e90>  // b.none
   22a9c:	ldr	x0, [x20, #40]
   22aa0:	cmp	x21, x19
   22aa4:	add	x24, x19, #0x1
   22aa8:	ldr	x0, [x0, x2, lsl #3]
   22aac:	b.ne	22774 <PyInit__decimal@@Base+0x81f4>  // b.any
   22ab0:	mov	x1, x21
   22ab4:	mov	w25, #0x2e                  	// #46
   22ab8:	mov	x19, x24
   22abc:	strb	w25, [x1], #2
   22ac0:	mov	x24, x1
   22ac4:	b	22774 <PyInit__decimal@@Base+0x81f4>
   22ac8:	tbnz	w2, #4, 22b38 <PyInit__decimal@@Base+0x85b8>
   22acc:	cmp	x1, #0x0
   22ad0:	ccmn	x3, #0x5, #0x1, le
   22ad4:	b.ge	22b38 <PyInit__decimal@@Base+0x85b8>  // b.tcont
   22ad8:	tbz	w2, #2, 225c4 <PyInit__decimal@@Base+0x8044>
   22adc:	mov	x0, x20
   22ae0:	bl	28008 <PyInit__decimal@@Base+0xda88>
   22ae4:	cbz	w0, 239c8 <PyInit__decimal@@Base+0x9448>
   22ae8:	ldp	x2, x0, [x20, #8]
   22aec:	mov	x1, #0x5555555555555555    	// #6148914691236517205
   22af0:	movk	x1, #0x5556
   22af4:	add	x2, x2, #0x2
   22af8:	smulh	x1, x2, x1
   22afc:	sub	x1, x1, x2, asr #63
   22b00:	add	x1, x1, x1, lsl #1
   22b04:	subs	x1, x2, x1
   22b08:	add	x2, x1, #0x3
   22b0c:	csel	x1, x2, x1, mi  // mi = first
   22b10:	sub	x23, x1, #0x1
   22b14:	b	225c4 <PyInit__decimal@@Base+0x8044>
   22b18:	ldr	x0, [sp, #104]
   22b1c:	tbnz	w0, #6, 237cc <PyInit__decimal@@Base+0x924c>
   22b20:	ldp	x1, x0, [sp, #104]
   22b24:	mov	x19, x0
   22b28:	tbz	w1, #7, 2260c <PyInit__decimal@@Base+0x808c>
   22b2c:	mov	w0, #0x2b                  	// #43
   22b30:	strb	w0, [x19], #1
   22b34:	b	2260c <PyInit__decimal@@Base+0x808c>
   22b38:	ldr	x23, [sp, #128]
   22b3c:	b	225c4 <PyInit__decimal@@Base+0x8044>
   22b40:	mov	x0, x20
   22b44:	bl	27f98 <PyInit__decimal@@Base+0xda18>
   22b48:	mov	w1, w0
   22b4c:	mov	x0, #0xb                   	// #11
   22b50:	cbz	w1, 22b68 <PyInit__decimal@@Base+0x85e8>
   22b54:	ldr	x1, [x20, #24]
   22b58:	cmp	x1, #0x0
   22b5c:	b.le	22b68 <PyInit__decimal@@Base+0x85e8>
   22b60:	ldr	x0, [x20, #16]
   22b64:	add	x0, x0, #0xb
   22b68:	mov	x1, #0x1                   	// #1
   22b6c:	bl	25260 <PyInit__decimal@@Base+0xace0>
   22b70:	str	x0, [sp, #112]
   22b74:	cbz	x0, 239fc <PyInit__decimal@@Base+0x947c>
   22b78:	mov	x0, x20
   22b7c:	stp	x21, x22, [sp, #32]
   22b80:	bl	27fa8 <PyInit__decimal@@Base+0xda28>
   22b84:	cbz	w0, 237dc <PyInit__decimal@@Base+0x925c>
   22b88:	ldr	x21, [sp, #112]
   22b8c:	mov	w0, #0x2d                  	// #45
   22b90:	strb	w0, [x21], #1
   22b94:	mov	x0, x20
   22b98:	bl	27f98 <PyInit__decimal@@Base+0xda18>
   22b9c:	cbz	w0, 23958 <PyInit__decimal@@Base+0x93d8>
   22ba0:	mov	x0, x20
   22ba4:	bl	27fc8 <PyInit__decimal@@Base+0xda48>
   22ba8:	cbz	w0, 2399c <PyInit__decimal@@Base+0x941c>
   22bac:	mov	x19, x21
   22bb0:	mov	w0, #0x614e                	// #24910
   22bb4:	movk	w0, #0x4e, lsl #16
   22bb8:	str	w0, [x19], #3
   22bbc:	ldr	x0, [x20, #24]
   22bc0:	cmp	x0, #0x0
   22bc4:	b.le	233d4 <PyInit__decimal@@Base+0x8e54>
   22bc8:	mov	x0, x20
   22bcc:	bl	27c98 <PyInit__decimal@@Base+0xd718>
   22bd0:	mov	x21, x0
   22bd4:	bl	27b20 <PyInit__decimal@@Base+0xd5a0>
   22bd8:	mov	x1, x21
   22bdc:	mov	w2, w0
   22be0:	mov	x3, #0x0                   	// #0
   22be4:	mov	x0, x19
   22be8:	bl	214a0 <PyInit__decimal@@Base+0x6f20>
   22bec:	mov	x19, x0
   22bf0:	ldr	x4, [x20, #24]
   22bf4:	subs	x4, x4, #0x2
   22bf8:	b.mi	233d4 <PyInit__decimal@@Base+0x8e54>  // b.first
   22bfc:	mov	x23, #0x7857                	// #30807
   22c00:	mov	x21, #0xeac3                	// #60099
   22c04:	mov	x18, #0x8000                	// #32768
   22c08:	mov	x17, #0xcd81                	// #52609
   22c0c:	mov	x15, #0x385                 	// #901
   22c10:	mov	x13, #0x2233                	// #8755
   22c14:	stp	x27, x28, [sp, #80]
   22c18:	mov	x28, #0xaaff                	// #43775
   22c1c:	mov	x27, #0x490f                	// #18703
   22c20:	mov	x24, #0x5d8a0000            	// #1569325056
   22c24:	movk	x23, #0xb113, lsl #16
   22c28:	mov	x22, #0x6fc10000            	// #1874919424
   22c2c:	movk	x21, #0xf3dc, lsl #16
   22c30:	movk	x18, #0xa4c6, lsl #16
   22c34:	movk	x17, #0x5095, lsl #16
   22c38:	mov	x16, #0x4000                	// #16384
   22c3c:	movk	x15, #0x92ed, lsl #16
   22c40:	mov	x14, #0xa000                	// #40960
   22c44:	movk	x13, #0x5bd4, lsl #16
   22c48:	mov	x12, #0x1000                	// #4096
   22c4c:	movk	x28, #0xcb24, lsl #16
   22c50:	mov	x30, #0xe800                	// #59392
   22c54:	stp	x25, x26, [sp, #64]
   22c58:	mov	x26, #0xa7640000            	// #2808348672
   22c5c:	mov	x25, #0x1b53                	// #6995
   22c60:	movk	x27, #0x7747, lsl #16
   22c64:	movk	x26, #0xb6b3, lsl #32
   22c68:	movk	x25, #0xd519, lsl #16
   22c6c:	movk	x24, #0x4578, lsl #32
   22c70:	movk	x23, #0x652f, lsl #32
   22c74:	movk	x22, #0x86f2, lsl #32
   22c78:	movk	x21, #0x4075, lsl #32
   22c7c:	movk	x18, #0x8d7e, lsl #32
   22c80:	movk	x17, #0x4dc3, lsl #32
   22c84:	movk	x16, #0x107a, lsl #16
   22c88:	movk	x15, #0x84d0, lsl #32
   22c8c:	movk	x14, #0x4e72, lsl #16
   22c90:	movk	x13, #0x3302, lsl #32
   22c94:	movk	x12, #0xd4a5, lsl #16
   22c98:	movk	x28, #0xff0b, lsl #32
   22c9c:	movk	x30, #0x4876, lsl #16
   22ca0:	movk	x27, #0x49c9, lsl #32
   22ca4:	movk	x26, #0xde0, lsl #48
   22ca8:	movk	x25, #0x5c3b, lsl #32
   22cac:	movk	x24, #0x163, lsl #48
   22cb0:	movk	x23, #0x39a5, lsl #48
   22cb4:	movk	x22, #0x23, lsl #48
   22cb8:	movk	x21, #0x2, lsl #48
   22cbc:	movk	x18, #0x3, lsl #48
   22cc0:	movk	x17, #0xb42, lsl #48
   22cc4:	movk	x16, #0x5af3, lsl #32
   22cc8:	movk	x15, #0x384b, lsl #48
   22ccc:	movk	x14, #0x918, lsl #32
   22cd0:	movk	x13, #0x232f, lsl #48
   22cd4:	movk	x12, #0xe8, lsl #32
   22cd8:	movk	x28, #0xafeb, lsl #48
   22cdc:	movk	x30, #0x17, lsl #32
   22ce0:	b	22f6c <PyInit__decimal@@Base+0x89ec>
   22ce4:	lsr	x1, x0, #18
   22ce8:	mov	x3, #0xe400                	// #58368
   22cec:	movk	x3, #0x540b, lsl #16
   22cf0:	mov	x10, #0xca00                	// #51712
   22cf4:	movk	x3, #0x2, lsl #32
   22cf8:	movk	x10, #0x3b9a, lsl #16
   22cfc:	umulh	x1, x1, x27
   22d00:	mov	x9, #0xe100                	// #57600
   22d04:	movk	x9, #0x5f5, lsl #16
   22d08:	mov	x8, #0x9680                	// #38528
   22d0c:	movk	x8, #0x98, lsl #16
   22d10:	mov	x7, #0x4240                	// #16960
   22d14:	lsr	x1, x1, #24
   22d18:	movk	x7, #0xf, lsl #16
   22d1c:	add	w11, w1, #0x30
   22d20:	strb	w11, [x19]
   22d24:	mov	x6, #0x86a0                	// #34464
   22d28:	mov	x5, #0x2710                	// #10000
   22d2c:	msub	x0, x1, x26, x0
   22d30:	movk	x6, #0x1, lsl #16
   22d34:	mov	x2, #0xcccccccccccccccc    	// #-3689348814741910324
   22d38:	add	x19, x19, #0x13
   22d3c:	movk	x2, #0xcccd
   22d40:	sub	x4, x4, #0x1
   22d44:	lsr	x1, x0, #17
   22d48:	cmn	x4, #0x1
   22d4c:	umulh	x1, x1, x25
   22d50:	lsr	x1, x1, #22
   22d54:	msub	x0, x1, x24, x0
   22d58:	add	w1, w1, #0x30
   22d5c:	sturb	w1, [x19, #-18]
   22d60:	umulh	x1, x0, x23
   22d64:	lsr	x1, x1, #51
   22d68:	msub	x0, x1, x22, x0
   22d6c:	add	w1, w1, #0x30
   22d70:	sturb	w1, [x19, #-17]
   22d74:	lsr	x11, x0, #15
   22d78:	umulh	x11, x11, x21
   22d7c:	lsr	x11, x11, #20
   22d80:	msub	x0, x11, x18, x0
   22d84:	add	w11, w11, #0x30
   22d88:	sturb	w11, [x19, #-16]
   22d8c:	umulh	x1, x0, x17
   22d90:	lsr	x1, x1, #42
   22d94:	msub	x0, x1, x16, x0
   22d98:	add	w1, w1, #0x30
   22d9c:	sturb	w1, [x19, #-15]
   22da0:	umulh	x11, x0, x15
   22da4:	lsr	x11, x11, #41
   22da8:	msub	x0, x11, x14, x0
   22dac:	add	w11, w11, #0x30
   22db0:	sturb	w11, [x19, #-14]
   22db4:	umulh	x11, x0, x13
   22db8:	lsr	x11, x11, #37
   22dbc:	msub	x1, x11, x12, x0
   22dc0:	add	w11, w11, #0x30
   22dc4:	sturb	w11, [x19, #-13]
   22dc8:	umulh	x11, x1, x28
   22dcc:	lsr	x11, x11, #36
   22dd0:	msub	x0, x11, x30, x1
   22dd4:	mov	x1, #0xd5bf                	// #54719
   22dd8:	movk	x1, #0xbded, lsl #16
   22ddc:	add	w11, w11, #0x30
   22de0:	movk	x1, #0xfece, lsl #32
   22de4:	sturb	w11, [x19, #-12]
   22de8:	movk	x1, #0xdbe6, lsl #48
   22dec:	umulh	x1, x0, x1
   22df0:	lsr	x1, x1, #33
   22df4:	msub	x0, x1, x3, x0
   22df8:	add	w1, w1, #0x30
   22dfc:	sturb	w1, [x19, #-11]
   22e00:	mov	x1, #0x5a53                	// #23123
   22e04:	movk	x1, #0xa09b, lsl #16
   22e08:	lsr	x3, x0, #9
   22e0c:	movk	x1, #0xb82f, lsl #32
   22e10:	movk	x1, #0x44, lsl #48
   22e14:	umulh	x3, x3, x1
   22e18:	mov	x1, #0xcefd                	// #52989
   22e1c:	movk	x1, #0x8461, lsl #16
   22e20:	movk	x1, #0x7711, lsl #32
   22e24:	lsr	x3, x3, #11
   22e28:	movk	x1, #0xabcc, lsl #48
   22e2c:	msub	x0, x3, x10, x0
   22e30:	add	w3, w3, #0x30
   22e34:	sturb	w3, [x19, #-10]
   22e38:	umulh	x1, x0, x1
   22e3c:	lsr	x1, x1, #26
   22e40:	msub	x9, x1, x9, x0
   22e44:	mov	x0, #0x42bd                	// #17085
   22e48:	movk	x0, #0xe57a, lsl #16
   22e4c:	add	w1, w1, #0x30
   22e50:	movk	x0, #0x94d5, lsl #32
   22e54:	sturb	w1, [x19, #-9]
   22e58:	movk	x0, #0xd6bf, lsl #48
   22e5c:	umulh	x1, x9, x0
   22e60:	mov	x0, #0x34db                	// #13531
   22e64:	movk	x0, #0xd7b6, lsl #16
   22e68:	movk	x0, #0xde82, lsl #32
   22e6c:	lsr	x1, x1, #23
   22e70:	movk	x0, #0x431b, lsl #48
   22e74:	msub	x8, x1, x8, x9
   22e78:	add	w1, w1, #0x30
   22e7c:	sturb	w1, [x19, #-8]
   22e80:	mov	x1, #0x7843                	// #30787
   22e84:	movk	x1, #0x71b4, lsl #16
   22e88:	movk	x1, #0x5ac4, lsl #32
   22e8c:	umulh	x0, x8, x0
   22e90:	movk	x1, #0xa7c, lsl #48
   22e94:	lsr	x0, x0, #18
   22e98:	msub	x7, x0, x7, x8
   22e9c:	add	w0, w0, #0x30
   22ea0:	sturb	w0, [x19, #-7]
   22ea4:	lsr	x0, x7, #5
   22ea8:	umulh	x0, x0, x1
   22eac:	lsr	x0, x0, #7
   22eb0:	msub	x6, x0, x6, x7
   22eb4:	add	w0, w0, #0x30
   22eb8:	sturb	w0, [x19, #-6]
   22ebc:	mov	x0, #0x594b                	// #22859
   22ec0:	movk	x0, #0x3886, lsl #16
   22ec4:	movk	x0, #0xc5d6, lsl #32
   22ec8:	movk	x0, #0x346d, lsl #48
   22ecc:	umulh	x1, x6, x0
   22ed0:	lsr	x1, x1, #11
   22ed4:	add	w0, w1, #0x30
   22ed8:	sturb	w0, [x19, #-5]
   22edc:	mov	x0, #0xf7cf                	// #63439
   22ee0:	msub	x5, x1, x5, x6
   22ee4:	movk	x0, #0xe353, lsl #16
   22ee8:	movk	x0, #0x9ba5, lsl #32
   22eec:	movk	x0, #0x20c4, lsl #48
   22ef0:	lsr	x1, x5, #3
   22ef4:	umulh	x1, x1, x0
   22ef8:	lsr	x0, x1, #4
   22efc:	add	w3, w0, #0x30
   22f00:	sturb	w3, [x19, #-4]
   22f04:	lsl	x1, x0, #5
   22f08:	mov	x3, #0xf5c3                	// #62915
   22f0c:	sub	x1, x1, x0
   22f10:	movk	x3, #0x5c28, lsl #16
   22f14:	movk	x3, #0xc28f, lsl #32
   22f18:	add	x1, x0, x1, lsl #2
   22f1c:	movk	x3, #0x28f5, lsl #48
   22f20:	sub	x1, x5, x1, lsl #3
   22f24:	lsr	x0, x1, #2
   22f28:	umulh	x0, x0, x3
   22f2c:	lsr	x0, x0, #2
   22f30:	add	w5, w0, #0x30
   22f34:	sturb	w5, [x19, #-3]
   22f38:	add	x3, x0, x0, lsl #1
   22f3c:	add	x0, x0, x3, lsl #3
   22f40:	sub	x1, x1, x0, lsl #2
   22f44:	umulh	x0, x1, x2
   22f48:	lsr	x0, x0, #3
   22f4c:	add	w2, w0, #0x30
   22f50:	sturb	w2, [x19, #-2]
   22f54:	add	x0, x0, x0, lsl #2
   22f58:	strb	wzr, [x19]
   22f5c:	sub	x0, x1, x0, lsl #1
   22f60:	add	w0, w0, #0x30
   22f64:	sturb	w0, [x19, #-1]
   22f68:	b.eq	239bc <PyInit__decimal@@Base+0x943c>  // b.none
   22f6c:	ldr	x0, [x20, #40]
   22f70:	ldr	x0, [x0, x4, lsl #3]
   22f74:	cbnz	x19, 22ce4 <PyInit__decimal@@Base+0x8764>
   22f78:	strb	wzr, [x19]
   22f7c:	brk	#0x3e8
   22f80:	mov	x21, x19
   22f84:	mov	w0, #0x2e30                	// #11824
   22f88:	neg	x2, x23
   22f8c:	cmp	x2, #0x0
   22f90:	strh	w0, [x21], #2
   22f94:	b.le	22fb8 <PyInit__decimal@@Base+0x8a38>
   22f98:	sub	x19, x19, x23
   22f9c:	mov	x0, x21
   22fa0:	add	x19, x19, #0x2
   22fa4:	mov	w1, #0x30                  	// #48
   22fa8:	strb	w1, [x0], #1
   22fac:	cmp	x0, x19
   22fb0:	b.ne	22fa8 <PyInit__decimal@@Base+0x8a28>  // b.any
   22fb4:	add	x21, x21, x2
   22fb8:	mov	x0, x20
   22fbc:	bl	27c98 <PyInit__decimal@@Base+0xd718>
   22fc0:	mov	x19, x0
   22fc4:	bl	27b20 <PyInit__decimal@@Base+0xd5a0>
   22fc8:	mov	x1, x19
   22fcc:	mov	w2, w0
   22fd0:	mov	x3, #0x0                   	// #0
   22fd4:	mov	x0, x21
   22fd8:	bl	214a0 <PyInit__decimal@@Base+0x6f20>
   22fdc:	mov	x19, x0
   22fe0:	ldr	x1, [x20, #24]
   22fe4:	subs	x1, x1, #0x2
   22fe8:	b.mi	23370 <PyInit__decimal@@Base+0x8df0>  // b.first
   22fec:	mov	x24, #0x7857                	// #30807
   22ff0:	mov	x22, #0xeac3                	// #60099
   22ff4:	mov	x21, #0x8000                	// #32768
   22ff8:	mov	x30, #0xcd81                	// #52609
   22ffc:	mov	x17, #0x385                 	// #901
   23000:	mov	x15, #0x2233                	// #8755
   23004:	mov	x13, #0xaaff                	// #43775
   23008:	mov	x12, #0xf5c3                	// #62915
   2300c:	movk	x24, #0xb113, lsl #16
   23010:	movk	x22, #0xf3dc, lsl #16
   23014:	movk	x21, #0xa4c6, lsl #16
   23018:	movk	x30, #0x5095, lsl #16
   2301c:	mov	x18, #0x4000                	// #16384
   23020:	movk	x17, #0x92ed, lsl #16
   23024:	mov	x16, #0xa000                	// #40960
   23028:	movk	x15, #0x5bd4, lsl #16
   2302c:	mov	x14, #0x1000                	// #4096
   23030:	movk	x13, #0xcb24, lsl #16
   23034:	movk	x12, #0x5c28, lsl #16
   23038:	stp	x25, x26, [sp, #64]
   2303c:	mov	x26, #0x1b53                	// #6995
   23040:	mov	x25, #0x5d8a0000            	// #1569325056
   23044:	stp	x27, x28, [sp, #80]
   23048:	mov	x28, #0x490f                	// #18703
   2304c:	mov	x27, #0xa7640000            	// #2808348672
   23050:	movk	x28, #0x7747, lsl #16
   23054:	movk	x27, #0xb6b3, lsl #32
   23058:	movk	x26, #0xd519, lsl #16
   2305c:	movk	x25, #0x4578, lsl #32
   23060:	movk	x24, #0x652f, lsl #32
   23064:	movk	x22, #0x4075, lsl #32
   23068:	movk	x21, #0x8d7e, lsl #32
   2306c:	movk	x30, #0x4dc3, lsl #32
   23070:	movk	x18, #0x107a, lsl #16
   23074:	movk	x17, #0x84d0, lsl #32
   23078:	movk	x16, #0x4e72, lsl #16
   2307c:	movk	x15, #0x3302, lsl #32
   23080:	movk	x14, #0xd4a5, lsl #16
   23084:	movk	x13, #0xff0b, lsl #32
   23088:	movk	x12, #0xc28f, lsl #32
   2308c:	movk	x28, #0x49c9, lsl #32
   23090:	movk	x27, #0xde0, lsl #48
   23094:	movk	x26, #0x5c3b, lsl #32
   23098:	movk	x25, #0x163, lsl #48
   2309c:	movk	x24, #0x39a5, lsl #48
   230a0:	movk	x22, #0x2, lsl #48
   230a4:	movk	x21, #0x3, lsl #48
   230a8:	movk	x30, #0xb42, lsl #48
   230ac:	movk	x18, #0x5af3, lsl #32
   230b0:	movk	x17, #0x384b, lsl #48
   230b4:	movk	x16, #0x918, lsl #32
   230b8:	movk	x15, #0x232f, lsl #48
   230bc:	movk	x14, #0xe8, lsl #32
   230c0:	movk	x13, #0xafeb, lsl #48
   230c4:	movk	x12, #0x28f5, lsl #48
   230c8:	b	2335c <PyInit__decimal@@Base+0x8ddc>
   230cc:	lsr	x2, x0, #18
   230d0:	mov	x4, #0xe400                	// #58368
   230d4:	movk	x4, #0x540b, lsl #16
   230d8:	mov	x10, #0xca00                	// #51712
   230dc:	movk	x4, #0x2, lsl #32
   230e0:	movk	x10, #0x3b9a, lsl #16
   230e4:	umulh	x2, x2, x28
   230e8:	mov	x9, #0xe100                	// #57600
   230ec:	movk	x9, #0x5f5, lsl #16
   230f0:	mov	x8, #0x9680                	// #38528
   230f4:	movk	x8, #0x98, lsl #16
   230f8:	mov	x7, #0x4240                	// #16960
   230fc:	lsr	x2, x2, #24
   23100:	movk	x7, #0xf, lsl #16
   23104:	mov	x6, #0x86a0                	// #34464
   23108:	mov	x5, #0x2710                	// #10000
   2310c:	movk	x6, #0x1, lsl #16
   23110:	mov	x3, #0xcccccccccccccccc    	// #-3689348814741910324
   23114:	msub	x0, x2, x27, x0
   23118:	add	w2, w2, #0x30
   2311c:	strb	w2, [x19]
   23120:	movk	x3, #0xcccd
   23124:	add	x19, x19, #0x13
   23128:	sub	x1, x1, #0x1
   2312c:	lsr	x11, x0, #17
   23130:	cmn	x1, #0x1
   23134:	umulh	x11, x11, x26
   23138:	lsr	x11, x11, #22
   2313c:	msub	x0, x11, x25, x0
   23140:	add	w11, w11, #0x30
   23144:	sturb	w11, [x19, #-18]
   23148:	mov	x11, #0x6fc10000            	// #1874919424
   2314c:	movk	x11, #0x86f2, lsl #32
   23150:	movk	x11, #0x23, lsl #48
   23154:	umulh	x2, x0, x24
   23158:	lsr	x2, x2, #51
   2315c:	msub	x0, x2, x11, x0
   23160:	add	w2, w2, #0x30
   23164:	sturb	w2, [x19, #-17]
   23168:	lsr	x11, x0, #15
   2316c:	umulh	x11, x11, x22
   23170:	lsr	x11, x11, #20
   23174:	msub	x0, x11, x21, x0
   23178:	add	w11, w11, #0x30
   2317c:	sturb	w11, [x19, #-16]
   23180:	umulh	x2, x0, x30
   23184:	lsr	x2, x2, #42
   23188:	msub	x0, x2, x18, x0
   2318c:	add	w2, w2, #0x30
   23190:	sturb	w2, [x19, #-15]
   23194:	umulh	x11, x0, x17
   23198:	lsr	x11, x11, #41
   2319c:	msub	x0, x11, x16, x0
   231a0:	add	w11, w11, #0x30
   231a4:	sturb	w11, [x19, #-14]
   231a8:	umulh	x11, x0, x15
   231ac:	lsr	x11, x11, #37
   231b0:	msub	x2, x11, x14, x0
   231b4:	add	w11, w11, #0x30
   231b8:	sturb	w11, [x19, #-13]
   231bc:	mov	x0, #0xe800                	// #59392
   231c0:	movk	x0, #0x4876, lsl #16
   231c4:	movk	x0, #0x17, lsl #32
   231c8:	umulh	x11, x2, x13
   231cc:	lsr	x11, x11, #36
   231d0:	msub	x0, x11, x0, x2
   231d4:	mov	x2, #0xd5bf                	// #54719
   231d8:	movk	x2, #0xbded, lsl #16
   231dc:	add	w11, w11, #0x30
   231e0:	movk	x2, #0xfece, lsl #32
   231e4:	sturb	w11, [x19, #-12]
   231e8:	movk	x2, #0xdbe6, lsl #48
   231ec:	umulh	x2, x0, x2
   231f0:	lsr	x2, x2, #33
   231f4:	msub	x0, x2, x4, x0
   231f8:	add	w2, w2, #0x30
   231fc:	sturb	w2, [x19, #-11]
   23200:	mov	x2, #0x5a53                	// #23123
   23204:	movk	x2, #0xa09b, lsl #16
   23208:	lsr	x4, x0, #9
   2320c:	movk	x2, #0xb82f, lsl #32
   23210:	movk	x2, #0x44, lsl #48
   23214:	umulh	x4, x4, x2
   23218:	mov	x2, #0xcefd                	// #52989
   2321c:	movk	x2, #0x8461, lsl #16
   23220:	movk	x2, #0x7711, lsl #32
   23224:	lsr	x4, x4, #11
   23228:	movk	x2, #0xabcc, lsl #48
   2322c:	msub	x0, x4, x10, x0
   23230:	add	w4, w4, #0x30
   23234:	sturb	w4, [x19, #-10]
   23238:	umulh	x2, x0, x2
   2323c:	lsr	x2, x2, #26
   23240:	msub	x9, x2, x9, x0
   23244:	mov	x0, #0x42bd                	// #17085
   23248:	movk	x0, #0xe57a, lsl #16
   2324c:	add	w2, w2, #0x30
   23250:	movk	x0, #0x94d5, lsl #32
   23254:	sturb	w2, [x19, #-9]
   23258:	movk	x0, #0xd6bf, lsl #48
   2325c:	umulh	x2, x9, x0
   23260:	mov	x0, #0x34db                	// #13531
   23264:	movk	x0, #0xd7b6, lsl #16
   23268:	movk	x0, #0xde82, lsl #32
   2326c:	lsr	x2, x2, #23
   23270:	movk	x0, #0x431b, lsl #48
   23274:	msub	x8, x2, x8, x9
   23278:	add	w2, w2, #0x30
   2327c:	sturb	w2, [x19, #-8]
   23280:	umulh	x4, x8, x0
   23284:	mov	x0, #0x7843                	// #30787
   23288:	movk	x0, #0x71b4, lsl #16
   2328c:	movk	x0, #0x5ac4, lsl #32
   23290:	lsr	x4, x4, #18
   23294:	movk	x0, #0xa7c, lsl #48
   23298:	msub	x7, x4, x7, x8
   2329c:	add	w4, w4, #0x30
   232a0:	sturb	w4, [x19, #-7]
   232a4:	lsr	x4, x7, #5
   232a8:	umulh	x4, x4, x0
   232ac:	mov	x0, #0x594b                	// #22859
   232b0:	movk	x0, #0x3886, lsl #16
   232b4:	movk	x0, #0xc5d6, lsl #32
   232b8:	lsr	x4, x4, #7
   232bc:	movk	x0, #0x346d, lsl #48
   232c0:	msub	x6, x4, x6, x7
   232c4:	add	w4, w4, #0x30
   232c8:	sturb	w4, [x19, #-6]
   232cc:	umulh	x2, x6, x0
   232d0:	lsr	x2, x2, #11
   232d4:	add	w0, w2, #0x30
   232d8:	sturb	w0, [x19, #-5]
   232dc:	mov	x0, #0xf7cf                	// #63439
   232e0:	msub	x5, x2, x5, x6
   232e4:	movk	x0, #0xe353, lsl #16
   232e8:	movk	x0, #0x9ba5, lsl #32
   232ec:	movk	x0, #0x20c4, lsl #48
   232f0:	lsr	x2, x5, #3
   232f4:	umulh	x2, x2, x0
   232f8:	lsr	x0, x2, #4
   232fc:	add	w4, w0, #0x30
   23300:	sturb	w4, [x19, #-4]
   23304:	lsl	x2, x0, #5
   23308:	sub	x2, x2, x0
   2330c:	add	x2, x0, x2, lsl #2
   23310:	sub	x2, x5, x2, lsl #3
   23314:	lsr	x0, x2, #2
   23318:	umulh	x0, x0, x12
   2331c:	lsr	x0, x0, #2
   23320:	add	w5, w0, #0x30
   23324:	sturb	w5, [x19, #-3]
   23328:	add	x4, x0, x0, lsl #1
   2332c:	add	x0, x0, x4, lsl #3
   23330:	sub	x2, x2, x0, lsl #2
   23334:	umulh	x0, x2, x3
   23338:	lsr	x0, x0, #3
   2333c:	add	w3, w0, #0x30
   23340:	sturb	w3, [x19, #-2]
   23344:	add	x0, x0, x0, lsl #2
   23348:	strb	wzr, [x19]
   2334c:	sub	x0, x2, x0, lsl #1
   23350:	add	w0, w0, #0x30
   23354:	sturb	w0, [x19, #-1]
   23358:	b.eq	23410 <PyInit__decimal@@Base+0x8e90>  // b.none
   2335c:	ldr	x0, [x20, #40]
   23360:	ldr	x0, [x0, x1, lsl #3]
   23364:	cbnz	x19, 230cc <PyInit__decimal@@Base+0x8b4c>
   23368:	b	22f78 <PyInit__decimal@@Base+0x89f8>
   2336c:	mov	x19, x0
   23370:	ldr	w0, [sp, #140]
   23374:	ldr	x2, [sp, #128]
   23378:	cmp	w0, #0x0
   2337c:	ccmp	x23, x2, #0x0, eq  // eq = none
   23380:	b.eq	233d4 <PyInit__decimal@@Base+0x8e54>  // b.none
   23384:	ldr	x0, [sp, #104]
   23388:	mov	w1, #0x65                  	// #101
   2338c:	tst	x0, #0x1
   23390:	mov	w0, #0x45                  	// #69
   23394:	csel	w0, w0, w1, ne  // ne = any
   23398:	strb	w0, [x19]
   2339c:	subs	x20, x2, x23
   233a0:	mov	w0, #0x2b                  	// #43
   233a4:	b.pl	233b0 <PyInit__decimal@@Base+0x8e30>  // b.nfrst
   233a8:	sub	x20, x23, x2
   233ac:	mov	w0, #0x2d                  	// #45
   233b0:	strb	w0, [x19, #1]
   233b4:	mov	x0, x20
   233b8:	bl	27b20 <PyInit__decimal@@Base+0xd5a0>
   233bc:	mov	w2, w0
   233c0:	mov	x1, x20
   233c4:	add	x0, x19, #0x2
   233c8:	mov	x3, #0x0                   	// #0
   233cc:	bl	214a0 <PyInit__decimal@@Base+0x6f20>
   233d0:	mov	x19, x0
   233d4:	ldr	x0, [sp, #104]
   233d8:	tbz	w0, #5, 233ec <PyInit__decimal@@Base+0x8e6c>
   233dc:	mov	x0, x19
   233e0:	mov	w1, #0x25                  	// #37
   233e4:	strb	w1, [x0], #1
   233e8:	mov	x19, x0
   233ec:	ldp	x1, x2, [sp, #112]
   233f0:	strb	wzr, [x19]
   233f4:	ldp	x21, x22, [sp, #32]
   233f8:	sub	x0, x19, x1
   233fc:	str	x1, [x2]
   23400:	ldp	x19, x20, [sp, #16]
   23404:	ldp	x23, x24, [sp, #48]
   23408:	ldp	x29, x30, [sp], #144
   2340c:	ret
   23410:	ldp	x25, x26, [sp, #64]
   23414:	ldp	x27, x28, [sp, #80]
   23418:	b	23370 <PyInit__decimal@@Base+0x8df0>
   2341c:	bl	27c98 <PyInit__decimal@@Base+0xd718>
   23420:	mov	x21, x0
   23424:	bl	27b20 <PyInit__decimal@@Base+0xd5a0>
   23428:	mov	w2, w0
   2342c:	mov	x1, x21
   23430:	mov	x0, x19
   23434:	mov	x3, #0x0                   	// #0
   23438:	bl	214a0 <PyInit__decimal@@Base+0x6f20>
   2343c:	ldr	x5, [x20, #24]
   23440:	subs	x5, x5, #0x2
   23444:	b.mi	2391c <PyInit__decimal@@Base+0x939c>  // b.first
   23448:	mov	x24, #0x7857                	// #30807
   2344c:	mov	x22, #0xeac3                	// #60099
   23450:	mov	x21, #0x8000                	// #32768
   23454:	mov	x19, #0xcd81                	// #52609
   23458:	mov	x17, #0x385                 	// #901
   2345c:	mov	x15, #0x2233                	// #8755
   23460:	mov	x13, #0xaaff                	// #43775
   23464:	movk	x24, #0xb113, lsl #16
   23468:	movk	x22, #0xf3dc, lsl #16
   2346c:	movk	x21, #0xa4c6, lsl #16
   23470:	movk	x19, #0x5095, lsl #16
   23474:	mov	x18, #0x4000                	// #16384
   23478:	movk	x17, #0x92ed, lsl #16
   2347c:	mov	x16, #0xa000                	// #40960
   23480:	movk	x15, #0x5bd4, lsl #16
   23484:	mov	x14, #0x1000                	// #4096
   23488:	movk	x13, #0xcb24, lsl #16
   2348c:	mov	x30, #0xe800                	// #59392
   23490:	stp	x25, x26, [sp, #64]
   23494:	mov	x26, #0x1b53                	// #6995
   23498:	mov	x25, #0x5d8a0000            	// #1569325056
   2349c:	stp	x27, x28, [sp, #80]
   234a0:	mov	x28, #0x490f                	// #18703
   234a4:	mov	x27, #0xa7640000            	// #2808348672
   234a8:	movk	x28, #0x7747, lsl #16
   234ac:	movk	x27, #0xb6b3, lsl #32
   234b0:	movk	x26, #0xd519, lsl #16
   234b4:	movk	x25, #0x4578, lsl #32
   234b8:	movk	x24, #0x652f, lsl #32
   234bc:	movk	x22, #0x4075, lsl #32
   234c0:	movk	x21, #0x8d7e, lsl #32
   234c4:	movk	x19, #0x4dc3, lsl #32
   234c8:	movk	x18, #0x107a, lsl #16
   234cc:	movk	x17, #0x84d0, lsl #32
   234d0:	movk	x16, #0x4e72, lsl #16
   234d4:	movk	x15, #0x3302, lsl #32
   234d8:	movk	x14, #0xd4a5, lsl #16
   234dc:	movk	x13, #0xff0b, lsl #32
   234e0:	movk	x30, #0x4876, lsl #16
   234e4:	movk	x28, #0x49c9, lsl #32
   234e8:	movk	x27, #0xde0, lsl #48
   234ec:	movk	x26, #0x5c3b, lsl #32
   234f0:	movk	x25, #0x163, lsl #48
   234f4:	movk	x24, #0x39a5, lsl #48
   234f8:	movk	x22, #0x2, lsl #48
   234fc:	movk	x21, #0x3, lsl #48
   23500:	movk	x19, #0xb42, lsl #48
   23504:	movk	x18, #0x5af3, lsl #32
   23508:	movk	x17, #0x384b, lsl #48
   2350c:	movk	x16, #0x918, lsl #32
   23510:	movk	x15, #0x232f, lsl #48
   23514:	movk	x14, #0xe8, lsl #32
   23518:	movk	x13, #0xafeb, lsl #48
   2351c:	movk	x30, #0x17, lsl #32
   23520:	b	237b8 <PyInit__decimal@@Base+0x9238>
   23524:	lsr	x2, x1, #18
   23528:	mov	x4, #0xe400                	// #58368
   2352c:	movk	x4, #0x540b, lsl #16
   23530:	mov	x11, #0xca00                	// #51712
   23534:	movk	x4, #0x2, lsl #32
   23538:	movk	x11, #0x3b9a, lsl #16
   2353c:	umulh	x2, x2, x28
   23540:	mov	x10, #0xe100                	// #57600
   23544:	movk	x10, #0x5f5, lsl #16
   23548:	mov	x9, #0x9680                	// #38528
   2354c:	movk	x9, #0x98, lsl #16
   23550:	mov	x8, #0x4240                	// #16960
   23554:	lsr	x2, x2, #24
   23558:	movk	x8, #0xf, lsl #16
   2355c:	mov	x7, #0x86a0                	// #34464
   23560:	mov	x6, #0x2710                	// #10000
   23564:	movk	x7, #0x1, lsl #16
   23568:	mov	x3, #0xcccccccccccccccc    	// #-3689348814741910324
   2356c:	msub	x1, x2, x27, x1
   23570:	add	w2, w2, #0x30
   23574:	strb	w2, [x0]
   23578:	movk	x3, #0xcccd
   2357c:	add	x0, x0, #0x13
   23580:	sub	x5, x5, #0x1
   23584:	lsr	x12, x1, #17
   23588:	cmn	x5, #0x1
   2358c:	umulh	x12, x12, x26
   23590:	lsr	x12, x12, #22
   23594:	msub	x1, x12, x25, x1
   23598:	add	w12, w12, #0x30
   2359c:	sturb	w12, [x0, #-18]
   235a0:	mov	x12, #0x6fc10000            	// #1874919424
   235a4:	movk	x12, #0x86f2, lsl #32
   235a8:	movk	x12, #0x23, lsl #48
   235ac:	umulh	x2, x1, x24
   235b0:	lsr	x2, x2, #51
   235b4:	msub	x1, x2, x12, x1
   235b8:	add	w2, w2, #0x30
   235bc:	sturb	w2, [x0, #-17]
   235c0:	lsr	x12, x1, #15
   235c4:	umulh	x12, x12, x22
   235c8:	lsr	x12, x12, #20
   235cc:	msub	x1, x12, x21, x1
   235d0:	add	w12, w12, #0x30
   235d4:	sturb	w12, [x0, #-16]
   235d8:	umulh	x2, x1, x19
   235dc:	lsr	x2, x2, #42
   235e0:	msub	x1, x2, x18, x1
   235e4:	add	w2, w2, #0x30
   235e8:	sturb	w2, [x0, #-15]
   235ec:	umulh	x12, x1, x17
   235f0:	lsr	x12, x12, #41
   235f4:	msub	x1, x12, x16, x1
   235f8:	add	w12, w12, #0x30
   235fc:	sturb	w12, [x0, #-14]
   23600:	umulh	x12, x1, x15
   23604:	lsr	x12, x12, #37
   23608:	msub	x2, x12, x14, x1
   2360c:	add	w12, w12, #0x30
   23610:	sturb	w12, [x0, #-13]
   23614:	umulh	x12, x2, x13
   23618:	lsr	x12, x12, #36
   2361c:	msub	x1, x12, x30, x2
   23620:	mov	x2, #0xd5bf                	// #54719
   23624:	movk	x2, #0xbded, lsl #16
   23628:	add	w12, w12, #0x30
   2362c:	movk	x2, #0xfece, lsl #32
   23630:	sturb	w12, [x0, #-12]
   23634:	movk	x2, #0xdbe6, lsl #48
   23638:	umulh	x2, x1, x2
   2363c:	lsr	x2, x2, #33
   23640:	msub	x1, x2, x4, x1
   23644:	add	w2, w2, #0x30
   23648:	sturb	w2, [x0, #-11]
   2364c:	mov	x2, #0x5a53                	// #23123
   23650:	movk	x2, #0xa09b, lsl #16
   23654:	lsr	x4, x1, #9
   23658:	movk	x2, #0xb82f, lsl #32
   2365c:	movk	x2, #0x44, lsl #48
   23660:	umulh	x4, x4, x2
   23664:	mov	x2, #0xcefd                	// #52989
   23668:	movk	x2, #0x8461, lsl #16
   2366c:	movk	x2, #0x7711, lsl #32
   23670:	lsr	x4, x4, #11
   23674:	movk	x2, #0xabcc, lsl #48
   23678:	msub	x1, x4, x11, x1
   2367c:	add	w4, w4, #0x30
   23680:	sturb	w4, [x0, #-10]
   23684:	umulh	x2, x1, x2
   23688:	lsr	x2, x2, #26
   2368c:	msub	x10, x2, x10, x1
   23690:	mov	x1, #0x42bd                	// #17085
   23694:	movk	x1, #0xe57a, lsl #16
   23698:	add	w2, w2, #0x30
   2369c:	movk	x1, #0x94d5, lsl #32
   236a0:	sturb	w2, [x0, #-9]
   236a4:	movk	x1, #0xd6bf, lsl #48
   236a8:	umulh	x2, x10, x1
   236ac:	mov	x1, #0x34db                	// #13531
   236b0:	movk	x1, #0xd7b6, lsl #16
   236b4:	movk	x1, #0xde82, lsl #32
   236b8:	lsr	x2, x2, #23
   236bc:	movk	x1, #0x431b, lsl #48
   236c0:	msub	x9, x2, x9, x10
   236c4:	add	w2, w2, #0x30
   236c8:	sturb	w2, [x0, #-8]
   236cc:	umulh	x4, x9, x1
   236d0:	mov	x1, #0x7843                	// #30787
   236d4:	movk	x1, #0x71b4, lsl #16
   236d8:	movk	x1, #0x5ac4, lsl #32
   236dc:	lsr	x4, x4, #18
   236e0:	movk	x1, #0xa7c, lsl #48
   236e4:	msub	x8, x4, x8, x9
   236e8:	add	w4, w4, #0x30
   236ec:	sturb	w4, [x0, #-7]
   236f0:	lsr	x4, x8, #5
   236f4:	umulh	x4, x4, x1
   236f8:	mov	x1, #0x594b                	// #22859
   236fc:	movk	x1, #0x3886, lsl #16
   23700:	movk	x1, #0xc5d6, lsl #32
   23704:	lsr	x4, x4, #7
   23708:	movk	x1, #0x346d, lsl #48
   2370c:	msub	x7, x4, x7, x8
   23710:	add	w4, w4, #0x30
   23714:	sturb	w4, [x0, #-6]
   23718:	umulh	x2, x7, x1
   2371c:	lsr	x2, x2, #11
   23720:	add	w1, w2, #0x30
   23724:	sturb	w1, [x0, #-5]
   23728:	mov	x1, #0xf7cf                	// #63439
   2372c:	msub	x6, x2, x6, x7
   23730:	movk	x1, #0xe353, lsl #16
   23734:	movk	x1, #0x9ba5, lsl #32
   23738:	movk	x1, #0x20c4, lsl #48
   2373c:	lsr	x2, x6, #3
   23740:	umulh	x2, x2, x1
   23744:	lsr	x1, x2, #4
   23748:	add	w4, w1, #0x30
   2374c:	sturb	w4, [x0, #-4]
   23750:	lsl	x2, x1, #5
   23754:	mov	x4, #0xf5c3                	// #62915
   23758:	sub	x2, x2, x1
   2375c:	movk	x4, #0x5c28, lsl #16
   23760:	movk	x4, #0xc28f, lsl #32
   23764:	add	x2, x1, x2, lsl #2
   23768:	movk	x4, #0x28f5, lsl #48
   2376c:	sub	x2, x6, x2, lsl #3
   23770:	lsr	x1, x2, #2
   23774:	umulh	x1, x1, x4
   23778:	lsr	x1, x1, #2
   2377c:	add	w6, w1, #0x30
   23780:	sturb	w6, [x0, #-3]
   23784:	add	x4, x1, x1, lsl #1
   23788:	add	x1, x1, x4, lsl #3
   2378c:	sub	x2, x2, x1, lsl #2
   23790:	umulh	x1, x2, x3
   23794:	lsr	x1, x1, #3
   23798:	add	w3, w1, #0x30
   2379c:	sturb	w3, [x0, #-2]
   237a0:	add	x1, x1, x1, lsl #2
   237a4:	strb	wzr, [x0]
   237a8:	sub	x1, x2, x1, lsl #1
   237ac:	add	w1, w1, #0x30
   237b0:	sturb	w1, [x0, #-1]
   237b4:	b.eq	23914 <PyInit__decimal@@Base+0x9394>  // b.none
   237b8:	ldr	x1, [x20, #40]
   237bc:	ldr	x1, [x1, x5, lsl #3]
   237c0:	cbnz	x0, 23524 <PyInit__decimal@@Base+0x8fa4>
   237c4:	strb	wzr, [x0]
   237c8:	brk	#0x3e8
   237cc:	ldr	x19, [sp, #112]
   237d0:	mov	w0, #0x20                  	// #32
   237d4:	strb	w0, [x19], #1
   237d8:	b	2260c <PyInit__decimal@@Base+0x808c>
   237dc:	ldr	x0, [sp, #104]
   237e0:	tbz	w0, #6, 23984 <PyInit__decimal@@Base+0x9404>
   237e4:	ldr	x21, [sp, #112]
   237e8:	mov	w0, #0x20                  	// #32
   237ec:	strb	w0, [x21], #1
   237f0:	b	22b94 <PyInit__decimal@@Base+0x8614>
   237f4:	mov	w24, #0x2e                  	// #46
   237f8:	add	x1, x19, #0x2
   237fc:	strb	w24, [x19, #1]
   23800:	b	22a80 <PyInit__decimal@@Base+0x8500>
   23804:	mov	w0, #0x2e                  	// #46
   23808:	add	x19, x25, #0x2
   2380c:	strb	w0, [x25, #1]
   23810:	b	22a54 <PyInit__decimal@@Base+0x84d4>
   23814:	mov	w1, #0x2e                  	// #46
   23818:	add	x25, x19, #0x2
   2381c:	strb	w1, [x19, #1]
   23820:	b	22a18 <PyInit__decimal@@Base+0x8498>
   23824:	mov	w1, #0x2e                  	// #46
   23828:	add	x19, x25, #0x2
   2382c:	strb	w1, [x25, #1]
   23830:	b	229d8 <PyInit__decimal@@Base+0x8458>
   23834:	mov	w1, #0x2e                  	// #46
   23838:	add	x25, x19, #0x2
   2383c:	strb	w1, [x19, #1]
   23840:	b	229a4 <PyInit__decimal@@Base+0x8424>
   23844:	mov	w0, #0x2e                  	// #46
   23848:	add	x19, x25, #0x2
   2384c:	strb	w0, [x25, #1]
   23850:	b	22968 <PyInit__decimal@@Base+0x83e8>
   23854:	mov	w0, #0x2e                  	// #46
   23858:	add	x25, x26, #0x2
   2385c:	strb	w0, [x26, #1]
   23860:	b	22930 <PyInit__decimal@@Base+0x83b0>
   23864:	mov	w1, #0x2e                  	// #46
   23868:	add	x26, x19, #0x2
   2386c:	strb	w1, [x19, #1]
   23870:	b	22908 <PyInit__decimal@@Base+0x8388>
   23874:	mov	w1, #0x2e                  	// #46
   23878:	add	x19, x24, #0x2
   2387c:	strb	w1, [x24, #1]
   23880:	b	228e0 <PyInit__decimal@@Base+0x8360>
   23884:	mov	w0, #0x2e                  	// #46
   23888:	add	x24, x19, #0x2
   2388c:	strb	w0, [x19, #1]
   23890:	b	228b4 <PyInit__decimal@@Base+0x8334>
   23894:	mov	w1, #0x2e                  	// #46
   23898:	add	x19, x24, #0x2
   2389c:	strb	w1, [x24, #1]
   238a0:	b	22888 <PyInit__decimal@@Base+0x8308>
   238a4:	mov	w1, #0x2e                  	// #46
   238a8:	add	x24, x19, #0x2
   238ac:	strb	w1, [x19, #1]
   238b0:	b	22868 <PyInit__decimal@@Base+0x82e8>
   238b4:	mov	w0, #0x2e                  	// #46
   238b8:	add	x19, x24, #0x2
   238bc:	strb	w0, [x24, #1]
   238c0:	b	22848 <PyInit__decimal@@Base+0x82c8>
   238c4:	mov	w1, #0x2e                  	// #46
   238c8:	add	x24, x19, #0x2
   238cc:	strb	w1, [x19, #1]
   238d0:	b	22828 <PyInit__decimal@@Base+0x82a8>
   238d4:	mov	w1, #0x2e                  	// #46
   238d8:	add	x19, x24, #0x2
   238dc:	strb	w1, [x24, #1]
   238e0:	b	22808 <PyInit__decimal@@Base+0x8288>
   238e4:	mov	w0, #0x2e                  	// #46
   238e8:	add	x24, x19, #0x2
   238ec:	strb	w0, [x19, #1]
   238f0:	b	227e4 <PyInit__decimal@@Base+0x8264>
   238f4:	mov	w0, #0x2e                  	// #46
   238f8:	add	x19, x24, #0x2
   238fc:	strb	w0, [x24, #1]
   23900:	b	227c4 <PyInit__decimal@@Base+0x8244>
   23904:	mov	w1, #0x2e                  	// #46
   23908:	add	x24, x19, #0x2
   2390c:	strb	w1, [x19, #1]
   23910:	b	227a0 <PyInit__decimal@@Base+0x8220>
   23914:	ldp	x25, x26, [sp, #64]
   23918:	ldp	x27, x28, [sp, #80]
   2391c:	ldr	x1, [x20, #16]
   23920:	sub	x1, x23, x1
   23924:	cmp	x1, #0x0
   23928:	b.le	2336c <PyInit__decimal@@Base+0x8dec>
   2392c:	add	x4, x0, #0x1
   23930:	mov	x1, #0x0                   	// #0
   23934:	mov	w3, #0x30                  	// #48
   23938:	strb	w3, [x0, x1]
   2393c:	add	x19, x4, x1
   23940:	add	x1, x1, #0x1
   23944:	ldr	x2, [x20, #16]
   23948:	sub	x2, x23, x2
   2394c:	cmp	x2, x1
   23950:	b.gt	23938 <PyInit__decimal@@Base+0x93b8>
   23954:	b	23370 <PyInit__decimal@@Base+0x8df0>
   23958:	mov	x0, x20
   2395c:	bl	27f88 <PyInit__decimal@@Base+0xda08>
   23960:	cbz	w0, 23a0c <PyInit__decimal@@Base+0x948c>
   23964:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27a80>
   23968:	add	x0, x0, #0x6a8
   2396c:	mov	x19, x21
   23970:	ldr	x1, [x0]
   23974:	str	x1, [x21]
   23978:	ldrb	w0, [x0, #8]
   2397c:	strb	w0, [x19, #8]!
   23980:	b	233d4 <PyInit__decimal@@Base+0x8e54>
   23984:	ldp	x1, x0, [sp, #104]
   23988:	mov	x21, x0
   2398c:	tbz	w1, #7, 22b94 <PyInit__decimal@@Base+0x8614>
   23990:	mov	w0, #0x2b                  	// #43
   23994:	strb	w0, [x21], #1
   23998:	b	22b94 <PyInit__decimal@@Base+0x8614>
   2399c:	adrp	x0, 3b000 <PyInit__decimal@@Base+0x20a80>
   239a0:	add	x0, x0, #0xa38
   239a4:	mov	x19, x21
   239a8:	ldr	w1, [x0]
   239ac:	ldrb	w0, [x0, #4]
   239b0:	str	w1, [x21]
   239b4:	strb	w0, [x19, #4]!
   239b8:	b	22bbc <PyInit__decimal@@Base+0x863c>
   239bc:	ldp	x25, x26, [sp, #64]
   239c0:	ldp	x27, x28, [sp, #80]
   239c4:	b	233d4 <PyInit__decimal@@Base+0x8e54>
   239c8:	ldr	x0, [sp, #128]
   239cc:	mov	x1, #0x5555555555555555    	// #6148914691236517205
   239d0:	movk	x1, #0x5556
   239d4:	sub	x2, x0, #0x1
   239d8:	ldr	x0, [x20, #16]
   239dc:	smulh	x1, x2, x1
   239e0:	sub	x1, x1, x2, asr #63
   239e4:	add	x1, x1, x1, lsl #1
   239e8:	subs	x1, x2, x1
   239ec:	add	x2, x1, #0x3
   239f0:	csel	x1, x2, x1, mi  // mi = first
   239f4:	add	x23, x23, x1
   239f8:	b	225c4 <PyInit__decimal@@Base+0x8044>
   239fc:	ldr	x1, [sp, #120]
   23a00:	mov	x0, #0xffffffffffffffff    	// #-1
   23a04:	str	xzr, [x1]
   23a08:	b	23400 <PyInit__decimal@@Base+0x8e80>
   23a0c:	stp	x25, x26, [sp, #64]
   23a10:	stp	x27, x28, [sp, #80]
   23a14:	bl	67c0 <abort@plt>
   23a18:	stp	x29, x30, [sp, #-96]!
   23a1c:	mov	x29, sp
   23a20:	stp	x19, x20, [sp, #16]
   23a24:	mov	x20, x0
   23a28:	mov	x19, x1
   23a2c:	mov	w1, #0x0                   	// #0
   23a30:	stp	x21, x22, [sp, #32]
   23a34:	mov	x22, x2
   23a38:	mov	x21, x3
   23a3c:	stp	x23, x24, [sp, #48]
   23a40:	bl	28768 <PyInit__decimal@@Base+0xe1e8>
   23a44:	str	xzr, [x20, #8]
   23a48:	str	xzr, [x20, #24]
   23a4c:	ldrb	w23, [x19]
   23a50:	cmp	w23, #0x2b
   23a54:	b.eq	23ac4 <PyInit__decimal@@Base+0x9544>  // b.none
   23a58:	cmp	w23, #0x2d
   23a5c:	mov	w1, #0x0                   	// #0
   23a60:	b.eq	23c0c <PyInit__decimal@@Base+0x968c>  // b.none
   23a64:	cmp	w23, #0x6e
   23a68:	b.eq	23a74 <PyInit__decimal@@Base+0x94f4>  // b.none
   23a6c:	cmp	w23, #0x4e
   23a70:	b.ne	23c24 <PyInit__decimal@@Base+0x96a4>  // b.any
   23a74:	ldrb	w0, [x19, #1]
   23a78:	cmp	w0, #0x61
   23a7c:	b.eq	23a88 <PyInit__decimal@@Base+0x9508>  // b.none
   23a80:	cmp	w0, #0x41
   23a84:	b.ne	23c24 <PyInit__decimal@@Base+0x96a4>  // b.any
   23a88:	ldrb	w0, [x19, #2]
   23a8c:	cmp	w0, #0x6e
   23a90:	b.eq	23a9c <PyInit__decimal@@Base+0x951c>  // b.none
   23a94:	cmp	w0, #0x4e
   23a98:	b.ne	23c24 <PyInit__decimal@@Base+0x96a4>  // b.any
   23a9c:	mov	x0, x20
   23aa0:	mov	w2, #0x4                   	// #4
   23aa4:	bl	28cd8 <PyInit__decimal@@Base+0xe758>
   23aa8:	ldrb	w0, [x19, #3]
   23aac:	cbnz	w0, 23ad4 <PyInit__decimal@@Base+0x9554>
   23ab0:	ldp	x19, x20, [sp, #16]
   23ab4:	ldp	x21, x22, [sp, #32]
   23ab8:	ldp	x23, x24, [sp, #48]
   23abc:	ldp	x29, x30, [sp], #96
   23ac0:	ret
   23ac4:	ldrb	w23, [x19, #1]
   23ac8:	mov	w1, #0x0                   	// #0
   23acc:	add	x19, x19, #0x1
   23ad0:	b	23a64 <PyInit__decimal@@Base+0x94e4>
   23ad4:	add	x0, x19, #0x3
   23ad8:	add	x1, sp, #0x50
   23adc:	stp	x25, x26, [sp, #64]
   23ae0:	bl	221c8 <PyInit__decimal@@Base+0x7c48>
   23ae4:	mov	x25, x0
   23ae8:	cbz	x0, 23bcc <PyInit__decimal@@Base+0x964c>
   23aec:	ldrb	w0, [x25]
   23af0:	cbz	w0, 23bf4 <PyInit__decimal@@Base+0x9674>
   23af4:	ldr	x1, [x22]
   23af8:	mov	x26, #0x0                   	// #0
   23afc:	ldr	x0, [sp, #80]
   23b00:	ldrsw	x2, [x22, #40]
   23b04:	sub	x0, x0, x25
   23b08:	sub	x1, x1, x2
   23b0c:	cmp	x1, x0
   23b10:	b.cc	23bcc <PyInit__decimal@@Base+0x964c>  // b.lo, b.ul, b.last
   23b14:	mov	x23, #0x9436                	// #37942
   23b18:	movk	x23, #0x50d7, lsl #16
   23b1c:	movk	x23, #0x435e, lsl #32
   23b20:	movk	x23, #0xd79, lsl #48
   23b24:	smulh	x23, x0, x23
   23b28:	sub	x23, x23, x0, asr #63
   23b2c:	add	x19, x23, x23, lsl #2
   23b30:	lsl	x19, x19, #2
   23b34:	sub	x19, x19, x23
   23b38:	subs	x19, x0, x19
   23b3c:	cinc	x23, x23, ne  // ne = any
   23b40:	cbz	x23, 23bcc <PyInit__decimal@@Base+0x964c>
   23b44:	mov	x2, x21
   23b48:	mov	x1, x23
   23b4c:	mov	x0, x20
   23b50:	bl	28218 <PyInit__decimal@@Base+0xdc98>
   23b54:	cbz	w0, 23f20 <PyInit__decimal@@Base+0x99a0>
   23b58:	str	x23, [x20, #24]
   23b5c:	cmp	x19, #0x0
   23b60:	sub	x5, x23, #0x1
   23b64:	ldr	x6, [x20, #40]
   23b68:	b.le	23f44 <PyInit__decimal@@Base+0x99c4>
   23b6c:	add	x4, x6, x5, lsl #3
   23b70:	add	x7, x26, #0x2
   23b74:	mov	x0, #0x0                   	// #0
   23b78:	mov	w2, #0x0                   	// #0
   23b7c:	str	xzr, [x6, x5, lsl #3]
   23b80:	b	23bb0 <PyInit__decimal@@Base+0x9630>
   23b84:	mov	x1, x25
   23b88:	mov	x25, x3
   23b8c:	ldrb	w1, [x1]
   23b90:	add	x0, x0, x0, lsl #2
   23b94:	add	w2, w2, #0x1
   23b98:	sub	w1, w1, #0x30
   23b9c:	lsl	x0, x0, #1
   23ba0:	cmp	w2, w19
   23ba4:	add	x0, x0, w1, sxtw
   23ba8:	str	x0, [x4]
   23bac:	b.ge	23f38 <PyInit__decimal@@Base+0x99b8>  // b.tcont
   23bb0:	add	x1, x25, #0x1
   23bb4:	cmp	x26, x25
   23bb8:	mov	x3, x1
   23bbc:	b.ne	23b84 <PyInit__decimal@@Base+0x9604>  // b.any
   23bc0:	mov	x25, x7
   23bc4:	b	23b8c <PyInit__decimal@@Base+0x960c>
   23bc8:	str	x19, [sp, #80]
   23bcc:	mov	x2, x21
   23bd0:	mov	x0, x20
   23bd4:	mov	w1, #0x2                   	// #2
   23bd8:	bl	28d68 <PyInit__decimal@@Base+0xe7e8>
   23bdc:	ldp	x19, x20, [sp, #16]
   23be0:	ldp	x21, x22, [sp, #32]
   23be4:	ldp	x23, x24, [sp, #48]
   23be8:	ldp	x25, x26, [sp, #64]
   23bec:	ldp	x29, x30, [sp], #96
   23bf0:	ret
   23bf4:	ldp	x19, x20, [sp, #16]
   23bf8:	ldp	x21, x22, [sp, #32]
   23bfc:	ldp	x23, x24, [sp, #48]
   23c00:	ldp	x25, x26, [sp, #64]
   23c04:	ldp	x29, x30, [sp], #96
   23c08:	ret
   23c0c:	mov	x0, x20
   23c10:	bl	286c0 <PyInit__decimal@@Base+0xe140>
   23c14:	add	x19, x19, #0x1
   23c18:	ldrb	w23, [x19]
   23c1c:	mov	w1, #0x1                   	// #1
   23c20:	b	23a64 <PyInit__decimal@@Base+0x94e4>
   23c24:	adrp	x5, 42000 <PyInit__decimal@@Base+0x27a80>
   23c28:	adrp	x3, 42000 <PyInit__decimal@@Base+0x27a80>
   23c2c:	mov	w0, w23
   23c30:	add	x5, x5, #0x6b8
   23c34:	add	x3, x3, #0x6c0
   23c38:	mov	x4, #0x0                   	// #0
   23c3c:	mov	w2, #0x73                  	// #115
   23c40:	stp	x25, x26, [sp, #64]
   23c44:	b	23c50 <PyInit__decimal@@Base+0x96d0>
   23c48:	ldrb	w0, [x19, x4]
   23c4c:	ldrb	w2, [x4, x3]
   23c50:	cmp	w2, w0
   23c54:	b.eq	23c64 <PyInit__decimal@@Base+0x96e4>  // b.none
   23c58:	ldrb	w2, [x4, x5]
   23c5c:	cmp	w2, w0
   23c60:	b.ne	23c9c <PyInit__decimal@@Base+0x971c>  // b.any
   23c64:	add	x4, x4, #0x1
   23c68:	cmp	x4, #0x4
   23c6c:	b.ne	23c48 <PyInit__decimal@@Base+0x96c8>  // b.any
   23c70:	mov	x0, x20
   23c74:	mov	w2, #0x8                   	// #8
   23c78:	bl	28cd8 <PyInit__decimal@@Base+0xe758>
   23c7c:	ldrb	w0, [x19, #4]
   23c80:	cbz	w0, 23bf4 <PyInit__decimal@@Base+0x9674>
   23c84:	add	x0, x19, #0x4
   23c88:	add	x1, sp, #0x50
   23c8c:	bl	221c8 <PyInit__decimal@@Base+0x7c48>
   23c90:	mov	x25, x0
   23c94:	cbnz	x0, 23aec <PyInit__decimal@@Base+0x956c>
   23c98:	b	23bcc <PyInit__decimal@@Base+0x964c>
   23c9c:	cmp	w23, #0x69
   23ca0:	b.eq	23cac <PyInit__decimal@@Base+0x972c>  // b.none
   23ca4:	cmp	w23, #0x49
   23ca8:	b.ne	23d48 <PyInit__decimal@@Base+0x97c8>  // b.any
   23cac:	ldrb	w0, [x19, #1]
   23cb0:	cmp	w0, #0x6e
   23cb4:	b.eq	23cc0 <PyInit__decimal@@Base+0x9740>  // b.none
   23cb8:	cmp	w0, #0x4e
   23cbc:	b.ne	23d48 <PyInit__decimal@@Base+0x97c8>  // b.any
   23cc0:	ldrb	w0, [x19, #2]
   23cc4:	cmp	w0, #0x66
   23cc8:	b.eq	23cd4 <PyInit__decimal@@Base+0x9754>  // b.none
   23ccc:	cmp	w0, #0x46
   23cd0:	b.ne	23d48 <PyInit__decimal@@Base+0x97c8>  // b.any
   23cd4:	ldrb	w2, [x19, #3]
   23cd8:	cbz	w2, 23d24 <PyInit__decimal@@Base+0x97a4>
   23cdc:	adrp	x5, 42000 <PyInit__decimal@@Base+0x27a80>
   23ce0:	adrp	x4, 42000 <PyInit__decimal@@Base+0x27a80>
   23ce4:	add	x19, x19, #0x4
   23ce8:	add	x5, x5, #0x6c8
   23cec:	add	x4, x4, #0x6d1
   23cf0:	mov	x0, #0x0                   	// #0
   23cf4:	mov	w3, #0x69                  	// #105
   23cf8:	b	23d08 <PyInit__decimal@@Base+0x9788>
   23cfc:	ldrb	w2, [x19, x0]
   23d00:	ldrb	w3, [x0, x4]
   23d04:	add	x0, x0, #0x1
   23d08:	cmp	w2, w3
   23d0c:	b.eq	23d1c <PyInit__decimal@@Base+0x979c>  // b.none
   23d10:	ldrb	w3, [x0, x5]
   23d14:	cmp	w3, w2
   23d18:	b.ne	23bcc <PyInit__decimal@@Base+0x964c>  // b.any
   23d1c:	cmp	x0, #0x5
   23d20:	b.ne	23cfc <PyInit__decimal@@Base+0x977c>  // b.any
   23d24:	mov	x0, x20
   23d28:	mov	w2, #0x2                   	// #2
   23d2c:	bl	28cd8 <PyInit__decimal@@Base+0xe758>
   23d30:	ldp	x19, x20, [sp, #16]
   23d34:	ldp	x21, x22, [sp, #32]
   23d38:	ldp	x23, x24, [sp, #48]
   23d3c:	ldp	x25, x26, [sp, #64]
   23d40:	ldp	x29, x30, [sp], #96
   23d44:	ret
   23d48:	mov	x24, #0x0                   	// #0
   23d4c:	mov	x26, #0x0                   	// #0
   23d50:	mov	x25, #0x0                   	// #0
   23d54:	cbz	w23, 23bc8 <PyInit__decimal@@Base+0x9648>
   23d58:	and	w1, w23, #0xffffffdf
   23d5c:	and	w1, w1, #0xff
   23d60:	cmp	w1, #0x45
   23d64:	b.eq	23e60 <PyInit__decimal@@Base+0x98e0>  // b.none
   23d68:	cmp	w23, #0x2e
   23d6c:	b.eq	23e48 <PyInit__decimal@@Base+0x98c8>  // b.none
   23d70:	bl	6880 <__ctype_b_loc@plt>
   23d74:	ldr	x2, [x0]
   23d78:	ubfiz	x1, x23, #1, #8
   23d7c:	ldrh	w0, [x2, x1]
   23d80:	tbz	w0, #11, 23bcc <PyInit__decimal@@Base+0x964c>
   23d84:	mov	x0, x19
   23d88:	ldrb	w1, [x0, #1]!
   23d8c:	cbz	x25, 23e8c <PyInit__decimal@@Base+0x990c>
   23d90:	mov	x19, x0
   23d94:	mov	w23, w1
   23d98:	cbnz	w23, 23d58 <PyInit__decimal@@Base+0x97d8>
   23d9c:	str	x19, [sp, #80]
   23da0:	cbz	x25, 23bcc <PyInit__decimal@@Base+0x964c>
   23da4:	cbz	x24, 23dec <PyInit__decimal@@Base+0x986c>
   23da8:	str	x24, [sp, #80]
   23dac:	bl	6a20 <__errno_location@plt>
   23db0:	mov	x19, x0
   23db4:	add	x1, sp, #0x58
   23db8:	add	x0, x24, #0x1
   23dbc:	mov	w2, #0xa                   	// #10
   23dc0:	str	wzr, [x19]
   23dc4:	bl	6540 <strtoll@plt>
   23dc8:	ldr	w1, [x19]
   23dcc:	cbnz	w1, 23ef8 <PyInit__decimal@@Base+0x9978>
   23dd0:	ldrb	w1, [x24, #1]
   23dd4:	cbz	w1, 24010 <PyInit__decimal@@Base+0x9a90>
   23dd8:	ldr	x1, [sp, #88]
   23ddc:	ldrb	w1, [x1]
   23de0:	cbnz	w1, 24010 <PyInit__decimal@@Base+0x9a90>
   23de4:	ldr	x19, [sp, #80]
   23de8:	str	x0, [x20, #8]
   23dec:	sub	x0, x19, x25
   23df0:	cbz	x26, 23eb4 <PyInit__decimal@@Base+0x9934>
   23df4:	sub	x19, x19, x26
   23df8:	mov	x3, #0xffffffffa763ffff    	// #-1486618625
   23dfc:	cmp	x25, x26
   23e00:	sub	x2, x19, #0x1
   23e04:	movk	x3, #0xb6b3, lsl #32
   23e08:	sbc	x0, x0, xzr
   23e0c:	movk	x3, #0xde0, lsl #48
   23e10:	cmp	x2, x3
   23e14:	b.hi	23bcc <PyInit__decimal@@Base+0x964c>  // b.pmore
   23e18:	ldr	x1, [x20, #8]
   23e1c:	mov	x4, #0x7fffffffffffffff    	// #9223372036854775807
   23e20:	add	x19, x19, x4
   23e24:	cmp	x1, x19
   23e28:	b.ge	23eac <PyInit__decimal@@Base+0x992c>  // b.tcont
   23e2c:	mov	x1, #0x8000000000000000    	// #-9223372036854775808
   23e30:	str	x1, [x20, #8]
   23e34:	cmp	x0, x3
   23e38:	b.hi	23bcc <PyInit__decimal@@Base+0x964c>  // b.pmore
   23e3c:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
   23e40:	str	x1, [x20, #8]
   23e44:	b	23b14 <PyInit__decimal@@Base+0x9594>
   23e48:	orr	x24, x24, x26
   23e4c:	cbnz	x24, 23bcc <PyInit__decimal@@Base+0x964c>
   23e50:	mov	x26, x19
   23e54:	ldrb	w23, [x19, #1]!
   23e58:	cbnz	w23, 23d58 <PyInit__decimal@@Base+0x97d8>
   23e5c:	b	23d9c <PyInit__decimal@@Base+0x981c>
   23e60:	cbnz	x24, 23bcc <PyInit__decimal@@Base+0x964c>
   23e64:	mov	x0, x19
   23e68:	mov	w1, #0xfd                  	// #253
   23e6c:	mov	x24, x19
   23e70:	ldrb	w23, [x0, #1]!
   23e74:	sub	w2, w23, #0x2b
   23e78:	tst	w2, w1
   23e7c:	b.ne	23ea0 <PyInit__decimal@@Base+0x9920>  // b.any
   23e80:	ldrb	w23, [x19, #2]!
   23e84:	cbnz	w23, 23d58 <PyInit__decimal@@Base+0x97d8>
   23e88:	b	23d9c <PyInit__decimal@@Base+0x981c>
   23e8c:	cbnz	x24, 23d90 <PyInit__decimal@@Base+0x9810>
   23e90:	cmp	w23, #0x30
   23e94:	b.eq	23fe0 <PyInit__decimal@@Base+0x9a60>  // b.none
   23e98:	mov	x25, x19
   23e9c:	mov	w23, w1
   23ea0:	mov	x19, x0
   23ea4:	cbnz	w23, 23d58 <PyInit__decimal@@Base+0x97d8>
   23ea8:	b	23d9c <PyInit__decimal@@Base+0x981c>
   23eac:	sub	x1, x1, x2
   23eb0:	str	x1, [x20, #8]
   23eb4:	mov	x1, #0xffffffffa763ffff    	// #-1486618625
   23eb8:	movk	x1, #0xb6b3, lsl #32
   23ebc:	movk	x1, #0xde0, lsl #48
   23ec0:	cmp	x0, x1
   23ec4:	b.hi	23bcc <PyInit__decimal@@Base+0x964c>  // b.pmore
   23ec8:	mov	x1, #0x1                   	// #1
   23ecc:	ldr	x2, [x20, #8]
   23ed0:	movk	x1, #0x4ec8, lsl #16
   23ed4:	movk	x1, #0x6d67, lsl #32
   23ed8:	movk	x1, #0x1bc1, lsl #48
   23edc:	cmp	x2, x1
   23ee0:	b.gt	23e40 <PyInit__decimal@@Base+0x98c0>
   23ee4:	mov	x1, #0x8000000000000000    	// #-9223372036854775808
   23ee8:	cmp	x2, x1
   23eec:	b.ne	23b14 <PyInit__decimal@@Base+0x9594>  // b.any
   23ef0:	mov	x1, #0x8000000000000001    	// #-9223372036854775807
   23ef4:	b	23e40 <PyInit__decimal@@Base+0x98c0>
   23ef8:	str	x0, [x20, #8]
   23efc:	cmp	w1, #0x22
   23f00:	b.ne	23bcc <PyInit__decimal@@Base+0x964c>  // b.any
   23f04:	mov	x1, #0x7fffffffffffffff    	// #9223372036854775807
   23f08:	cmp	x0, x1
   23f0c:	mov	x1, #0x8000000000000000    	// #-9223372036854775808
   23f10:	ccmp	x0, x1, #0x4, ne  // ne = any
   23f14:	b.ne	23bcc <PyInit__decimal@@Base+0x964c>  // b.any
   23f18:	ldr	x19, [sp, #80]
   23f1c:	b	23dec <PyInit__decimal@@Base+0x986c>
   23f20:	mov	x2, x21
   23f24:	mov	x0, x20
   23f28:	mov	w1, #0x200                 	// #512
   23f2c:	bl	28d68 <PyInit__decimal@@Base+0xe7e8>
   23f30:	ldp	x25, x26, [sp, #64]
   23f34:	b	23ab0 <PyInit__decimal@@Base+0x9530>
   23f38:	cmp	x23, #0x1
   23f3c:	sub	x5, x23, #0x2
   23f40:	b.eq	23fc0 <PyInit__decimal@@Base+0x9a40>  // b.none
   23f44:	add	x0, x26, #0x2
   23f48:	mov	w3, #0x13                  	// #19
   23f4c:	mov	x1, #0x0                   	// #0
   23f50:	str	xzr, [x6, x5, lsl #3]
   23f54:	b	23f80 <PyInit__decimal@@Base+0x9a00>
   23f58:	mov	x2, x25
   23f5c:	mov	x25, x4
   23f60:	add	x1, x1, x1, lsl #2
   23f64:	subs	w3, w3, #0x1
   23f68:	ldrb	w4, [x2]
   23f6c:	lsl	x1, x1, #1
   23f70:	sub	w4, w4, #0x30
   23f74:	add	x1, x1, w4, sxtw
   23f78:	str	x1, [x6, x5, lsl #3]
   23f7c:	b.eq	23fb4 <PyInit__decimal@@Base+0x9a34>  // b.none
   23f80:	add	x2, x25, #0x1
   23f84:	cmp	x26, x25
   23f88:	mov	x4, x2
   23f8c:	b.ne	23f58 <PyInit__decimal@@Base+0x99d8>  // b.any
   23f90:	ldrb	w4, [x2]
   23f94:	add	x1, x1, x1, lsl #2
   23f98:	mov	x25, x0
   23f9c:	subs	w3, w3, #0x1
   23fa0:	sub	w4, w4, #0x30
   23fa4:	lsl	x1, x1, #1
   23fa8:	add	x1, x1, w4, sxtw
   23fac:	str	x1, [x6, x5, lsl #3]
   23fb0:	b.ne	23f80 <PyInit__decimal@@Base+0x9a00>  // b.any
   23fb4:	sub	x5, x5, #0x1
   23fb8:	cmn	x5, #0x1
   23fbc:	b.ne	23f48 <PyInit__decimal@@Base+0x99c8>  // b.any
   23fc0:	mov	x0, x20
   23fc4:	bl	28498 <PyInit__decimal@@Base+0xdf18>
   23fc8:	mov	x2, x21
   23fcc:	mov	x1, x22
   23fd0:	mov	x0, x20
   23fd4:	bl	2b110 <PyInit__decimal@@Base+0x10b90>
   23fd8:	ldp	x25, x26, [sp, #64]
   23fdc:	b	23ab0 <PyInit__decimal@@Base+0x9530>
   23fe0:	ubfiz	x3, x1, #1, #8
   23fe4:	ldrh	w3, [x2, x3]
   23fe8:	tbnz	w3, #11, 24020 <PyInit__decimal@@Base+0x9aa0>
   23fec:	cmp	w1, #0x2e
   23ff0:	b.ne	23e98 <PyInit__decimal@@Base+0x9918>  // b.any
   23ff4:	ldrb	w3, [x19, #2]
   23ff8:	mov	w23, w1
   23ffc:	ldrh	w1, [x2, x3, lsl #1]
   24000:	tst	x1, #0x800
   24004:	csel	x25, x19, xzr, eq  // eq = none
   24008:	mov	x19, x0
   2400c:	b	23d58 <PyInit__decimal@@Base+0x97d8>
   24010:	mov	w1, #0x16                  	// #22
   24014:	str	w1, [x19]
   24018:	str	x0, [x20, #8]
   2401c:	b	23bcc <PyInit__decimal@@Base+0x964c>
   24020:	mov	x19, x0
   24024:	mov	w23, w1
   24028:	mov	x25, x24
   2402c:	cbnz	w23, 23d58 <PyInit__decimal@@Base+0x97d8>
   24030:	b	23d9c <PyInit__decimal@@Base+0x981c>
   24034:	nop
   24038:	cmp	w1, #0x0
   2403c:	stp	x29, x30, [sp, #-32]!
   24040:	cset	w2, ne  // ne = any
   24044:	mov	x29, sp
   24048:	mov	x1, x0
   2404c:	orr	w2, w2, #0x2
   24050:	add	x0, sp, #0x18
   24054:	mov	x3, #0x1                   	// #1
   24058:	bl	22578 <PyInit__decimal@@Base+0x7ff8>
   2405c:	ldr	x0, [sp, #24]
   24060:	ldp	x29, x30, [sp], #32
   24064:	ret
   24068:	cmp	w1, #0x0
   2406c:	stp	x29, x30, [sp, #-32]!
   24070:	cset	w2, ne  // ne = any
   24074:	mov	x29, sp
   24078:	mov	x1, x0
   2407c:	orr	w2, w2, #0x4
   24080:	add	x0, sp, #0x18
   24084:	mov	x3, #0x1                   	// #1
   24088:	bl	22578 <PyInit__decimal@@Base+0x7ff8>
   2408c:	ldr	x0, [sp, #24]
   24090:	ldp	x29, x30, [sp], #32
   24094:	ret
   24098:	cmp	w2, #0x0
   2409c:	mov	x3, #0x1                   	// #1
   240a0:	cset	w2, ne  // ne = any
   240a4:	orr	w2, w2, #0x2
   240a8:	b	22578 <PyInit__decimal@@Base+0x7ff8>
   240ac:	nop
   240b0:	cmp	w2, #0x0
   240b4:	mov	x3, #0x1                   	// #1
   240b8:	cset	w2, ne  // ne = any
   240bc:	orr	w2, w2, #0x4
   240c0:	b	22578 <PyInit__decimal@@Base+0x7ff8>
   240c4:	nop
   240c8:	stp	x29, x30, [sp, #-32]!
   240cc:	mov	x29, sp
   240d0:	str	x19, [sp, #16]
   240d4:	mov	x19, x0
   240d8:	ldr	x0, [x0, #24]
   240dc:	bl	64d0 <strlen@plt>
   240e0:	sub	x0, x0, #0x1
   240e4:	cmp	x0, #0x3
   240e8:	b.hi	24108 <PyInit__decimal@@Base+0x9b88>  // b.pmore
   240ec:	ldr	x0, [x19, #32]
   240f0:	bl	64d0 <strlen@plt>
   240f4:	cmp	x0, #0x4
   240f8:	csetm	w0, hi  // hi = pmore
   240fc:	ldr	x19, [sp, #16]
   24100:	ldp	x29, x30, [sp], #32
   24104:	ret
   24108:	mov	w0, #0xffffffff            	// #-1
   2410c:	b	240fc <PyInit__decimal@@Base+0x9b7c>
   24110:	stp	x29, x30, [sp, #-80]!
   24114:	cmp	w2, #0x0
   24118:	mov	x4, #0xffffffffffffffff    	// #-1
   2411c:	mov	x29, sp
   24120:	stp	x19, x20, [sp, #16]
   24124:	mov	x19, x0
   24128:	mov	w0, #0x67                  	// #103
   2412c:	mov	w2, #0x47                  	// #71
   24130:	mov	w3, #0x2d3e                	// #11582
   24134:	csel	w2, w2, w0, ne  // ne = any
   24138:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27a80>
   2413c:	add	x0, x0, #0x610
   24140:	stp	xzr, x4, [x19]
   24144:	strb	w2, [x19, #16]
   24148:	sturh	w3, [x19, #17]
   2414c:	stp	x0, x0, [x19, #24]
   24150:	str	x0, [x19, #40]
   24154:	str	x1, [sp, #72]
   24158:	ldrb	w0, [x1]
   2415c:	cbz	w0, 24318 <PyInit__decimal@@Base+0x9d98>
   24160:	tbz	w0, #7, 241c0 <PyInit__decimal@@Base+0x9c40>
   24164:	add	w2, w0, #0x3e
   24168:	add	x4, x19, #0x13
   2416c:	and	w2, w2, #0xff
   24170:	cmp	w2, #0x1d
   24174:	b.ls	243cc <PyInit__decimal@@Base+0x9e4c>  // b.plast
   24178:	cmp	w0, #0xe0
   2417c:	b.eq	244c4 <PyInit__decimal@@Base+0x9f44>  // b.none
   24180:	cmp	w0, #0xec
   24184:	b.ls	24458 <PyInit__decimal@@Base+0x9ed8>  // b.plast
   24188:	cmp	w0, #0xed
   2418c:	b.eq	244e0 <PyInit__decimal@@Base+0x9f60>  // b.none
   24190:	cmp	w0, #0xef
   24194:	b.ls	24458 <PyInit__decimal@@Base+0x9ed8>  // b.plast
   24198:	cmp	w0, #0xf0
   2419c:	b.eq	2457c <PyInit__decimal@@Base+0x9ffc>  // b.none
   241a0:	cmp	w0, #0xf3
   241a4:	b.ls	2458c <PyInit__decimal@@Base+0xa00c>  // b.plast
   241a8:	cmp	w0, #0xf4
   241ac:	b.ne	243e4 <PyInit__decimal@@Base+0x9e64>  // b.any
   241b0:	mov	w2, #0x4                   	// #4
   241b4:	mov	w5, #0x8f                  	// #143
   241b8:	mov	w3, #0x80                  	// #128
   241bc:	b	24464 <PyInit__decimal@@Base+0x9ee4>
   241c0:	stp	x21, x22, [sp, #32]
   241c4:	mov	w2, #0x1                   	// #1
   241c8:	strb	w0, [x19, #19]
   241cc:	strb	wzr, [x19, #20]
   241d0:	ldrb	w0, [x1]
   241d4:	cbz	w0, 242e0 <PyInit__decimal@@Base+0x9d60>
   241d8:	ldrb	w3, [x1, w2, sxtw]
   241dc:	add	x2, x1, w2, sxtw
   241e0:	sub	w0, w3, #0x3c
   241e4:	cmp	w3, #0x5e
   241e8:	and	w0, w0, #0xff
   241ec:	ccmp	w0, #0x2, #0x0, ne  // ne = any
   241f0:	b.hi	242e0 <PyInit__decimal@@Base+0x9d60>  // b.pmore
   241f4:	strb	w3, [x19, #17]
   241f8:	mov	w4, #0x1                   	// #1
   241fc:	add	x3, x2, #0x1
   24200:	str	x3, [sp, #72]
   24204:	ldrb	w20, [x2, #1]
   24208:	sub	w0, w20, #0x2b
   2420c:	cmp	w20, #0x20
   24210:	and	w0, w0, #0xfffffffd
   24214:	mov	x21, x3
   24218:	and	w0, w0, #0xff
   2421c:	ccmp	w0, #0x0, #0x4, ne  // ne = any
   24220:	b.ne	24238 <PyInit__decimal@@Base+0x9cb8>  // b.any
   24224:	ldrb	w0, [x3]
   24228:	add	x21, x3, #0x1
   2422c:	strb	w0, [x19, #18]
   24230:	str	x21, [sp, #72]
   24234:	ldrb	w20, [x3, #1]
   24238:	cmp	w20, #0x30
   2423c:	b.eq	24328 <PyInit__decimal@@Base+0x9da8>  // b.none
   24240:	bl	6880 <__ctype_b_loc@plt>
   24244:	mov	x22, x0
   24248:	ubfiz	x0, x20, #1, #8
   2424c:	ldr	x1, [x22]
   24250:	ldrh	w0, [x1, x0]
   24254:	tbnz	w0, #11, 24390 <PyInit__decimal@@Base+0x9e10>
   24258:	cmp	w20, #0x2c
   2425c:	b.ne	24290 <PyInit__decimal@@Base+0x9d10>  // b.any
   24260:	add	x3, x21, #0x1
   24264:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27a80>
   24268:	adrp	x1, 42000 <PyInit__decimal@@Base+0x27a80>
   2426c:	add	x2, x2, #0x6d8
   24270:	add	x1, x1, #0x6e0
   24274:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27a80>
   24278:	add	x0, x0, #0x6e8
   2427c:	stp	x2, x1, [x19, #24]
   24280:	str	x0, [x19, #40]
   24284:	str	x3, [sp, #72]
   24288:	ldrb	w20, [x21, #1]
   2428c:	mov	x21, x3
   24290:	cmp	w20, #0x2e
   24294:	b.eq	243f8 <PyInit__decimal@@Base+0x9e78>  // b.none
   24298:	and	w0, w20, #0xffffffdf
   2429c:	cmp	w20, #0x25
   242a0:	and	w0, w0, #0xff
   242a4:	sub	w1, w0, #0x45
   242a8:	and	w1, w1, #0xff
   242ac:	ccmp	w1, #0x2, #0x0, ne  // ne = any
   242b0:	b.hi	244f0 <PyInit__decimal@@Base+0x9f70>  // b.pmore
   242b4:	add	x0, x21, #0x1
   242b8:	str	x0, [sp, #72]
   242bc:	ldrb	w0, [x21]
   242c0:	strb	w0, [x19, #16]
   242c4:	ldrb	w20, [x21, #1]
   242c8:	cmp	w20, #0x0
   242cc:	cset	w0, eq  // eq = none
   242d0:	ldp	x19, x20, [sp, #16]
   242d4:	ldp	x21, x22, [sp, #32]
   242d8:	ldp	x29, x30, [sp], #80
   242dc:	ret
   242e0:	mov	w0, #0x20                  	// #32
   242e4:	sturh	w0, [x19, #19]
   242e8:	ldrb	w20, [x1]
   242ec:	sub	w0, w20, #0x3c
   242f0:	cmp	w20, #0x5e
   242f4:	and	w0, w0, #0xff
   242f8:	ccmp	w0, #0x2, #0x0, ne  // ne = any
   242fc:	b.hi	2444c <PyInit__decimal@@Base+0x9ecc>  // b.pmore
   24300:	strb	w20, [x19, #17]
   24304:	add	x3, x1, #0x1
   24308:	mov	w4, #0x1                   	// #1
   2430c:	str	x3, [sp, #72]
   24310:	ldrb	w20, [x1, #1]
   24314:	b	24208 <PyInit__decimal@@Base+0x9c88>
   24318:	stp	x21, x22, [sp, #32]
   2431c:	mov	w2, #0x0                   	// #0
   24320:	strb	wzr, [x19, #19]
   24324:	b	241d0 <PyInit__decimal@@Base+0x9c50>
   24328:	cbnz	w4, 24374 <PyInit__decimal@@Base+0x9df4>
   2432c:	str	x23, [sp, #48]
   24330:	mov	w0, #0x7a                  	// #122
   24334:	add	x23, x21, #0x1
   24338:	strb	w0, [x19, #17]
   2433c:	str	x23, [sp, #72]
   24340:	ldrb	w0, [x21]
   24344:	strb	w0, [x19, #19]
   24348:	strb	wzr, [x19, #20]
   2434c:	bl	6880 <__ctype_b_loc@plt>
   24350:	mov	x22, x0
   24354:	ldrb	w20, [x21, #1]
   24358:	ldr	x1, [x22]
   2435c:	ubfiz	x0, x20, #1, #8
   24360:	ldrh	w0, [x1, x0]
   24364:	tbz	w0, #11, 244d4 <PyInit__decimal@@Base+0x9f54>
   24368:	cmp	w20, #0x30
   2436c:	b.ne	24388 <PyInit__decimal@@Base+0x9e08>  // b.any
   24370:	ldr	x23, [sp, #48]
   24374:	mov	w0, #0x0                   	// #0
   24378:	ldp	x19, x20, [sp, #16]
   2437c:	ldp	x21, x22, [sp, #32]
   24380:	ldp	x29, x30, [sp], #80
   24384:	ret
   24388:	mov	x21, x23
   2438c:	ldr	x23, [sp, #48]
   24390:	bl	6a20 <__errno_location@plt>
   24394:	mov	x20, x0
   24398:	add	x1, sp, #0x48
   2439c:	mov	x0, x21
   243a0:	mov	w2, #0xa                   	// #10
   243a4:	str	wzr, [x20]
   243a8:	bl	6540 <strtoll@plt>
   243ac:	ldr	w1, [x20]
   243b0:	str	x0, [x19]
   243b4:	cmp	w1, #0x22
   243b8:	ccmp	w1, #0x16, #0x4, ne  // ne = any
   243bc:	b.eq	24374 <PyInit__decimal@@Base+0x9df4>  // b.none
   243c0:	ldr	x21, [sp, #72]
   243c4:	ldrb	w20, [x21]
   243c8:	b	24258 <PyInit__decimal@@Base+0x9cd8>
   243cc:	strb	w0, [x19, #19]
   243d0:	ldrb	w3, [x1, #1]
   243d4:	sub	w0, w3, #0x80
   243d8:	and	w0, w0, #0xff
   243dc:	cmp	w0, #0x3f
   243e0:	b.ls	24554 <PyInit__decimal@@Base+0x9fd4>  // b.plast
   243e4:	strb	wzr, [x19, #19]
   243e8:	mov	w0, #0x0                   	// #0
   243ec:	ldp	x19, x20, [sp, #16]
   243f0:	ldp	x29, x30, [sp], #80
   243f4:	ret
   243f8:	add	x20, x21, #0x1
   243fc:	str	x20, [sp, #72]
   24400:	ldr	x0, [x22]
   24404:	ldrb	w1, [x21, #1]
   24408:	ldrh	w0, [x0, x1, lsl #1]
   2440c:	tbz	w0, #11, 24374 <PyInit__decimal@@Base+0x9df4>
   24410:	bl	6a20 <__errno_location@plt>
   24414:	mov	x21, x0
   24418:	add	x1, sp, #0x48
   2441c:	mov	x0, x20
   24420:	mov	w2, #0xa                   	// #10
   24424:	str	wzr, [x21]
   24428:	bl	6540 <strtoll@plt>
   2442c:	ldr	w1, [x21]
   24430:	str	x0, [x19, #8]
   24434:	cmp	w1, #0x22
   24438:	ccmp	w1, #0x16, #0x4, ne  // ne = any
   2443c:	b.eq	24374 <PyInit__decimal@@Base+0x9df4>  // b.none
   24440:	ldr	x21, [sp, #72]
   24444:	ldrb	w20, [x21]
   24448:	b	24298 <PyInit__decimal@@Base+0x9d18>
   2444c:	mov	x3, x1
   24450:	mov	w4, #0x0                   	// #0
   24454:	b	24208 <PyInit__decimal@@Base+0x9c88>
   24458:	mov	w2, #0x3                   	// #3
   2445c:	mov	w5, #0xbf                  	// #191
   24460:	mov	w3, #0x80                  	// #128
   24464:	strb	w0, [x19, #19]
   24468:	ldrb	w0, [x1, #1]
   2446c:	cmp	w0, w5
   24470:	ccmp	w0, w3, #0x0, ls  // ls = plast
   24474:	b.cc	243e4 <PyInit__decimal@@Base+0x9e64>  // b.lo, b.ul, b.last
   24478:	strb	w0, [x19, #20]
   2447c:	ldrb	w3, [x1, #2]
   24480:	sub	w0, w3, #0x80
   24484:	and	w0, w0, #0xff
   24488:	cmp	w0, #0x3f
   2448c:	b.hi	243e4 <PyInit__decimal@@Base+0x9e64>  // b.pmore
   24490:	strb	w3, [x19, #21]
   24494:	cmp	w2, #0x4
   24498:	b.ne	2456c <PyInit__decimal@@Base+0x9fec>  // b.any
   2449c:	ldrb	w3, [x1, #3]
   244a0:	sub	w0, w3, #0x80
   244a4:	and	w0, w0, #0xff
   244a8:	cmp	w0, #0x3f
   244ac:	b.hi	243e4 <PyInit__decimal@@Base+0x9e64>  // b.pmore
   244b0:	sxtw	x0, w2
   244b4:	stp	x21, x22, [sp, #32]
   244b8:	strb	w3, [x19, #22]
   244bc:	strb	wzr, [x4, x0]
   244c0:	b	241d0 <PyInit__decimal@@Base+0x9c50>
   244c4:	mov	w2, #0x3                   	// #3
   244c8:	mov	w5, #0xbf                  	// #191
   244cc:	mov	w3, #0xa0                  	// #160
   244d0:	b	24464 <PyInit__decimal@@Base+0x9ee4>
   244d4:	mov	x21, x23
   244d8:	ldr	x23, [sp, #48]
   244dc:	b	24258 <PyInit__decimal@@Base+0x9cd8>
   244e0:	mov	w2, #0x3                   	// #3
   244e4:	mov	w5, #0x9f                  	// #159
   244e8:	mov	w3, #0x80                  	// #128
   244ec:	b	24464 <PyInit__decimal@@Base+0x9ee4>
   244f0:	cmp	w0, #0x4e
   244f4:	b.ne	242c8 <PyInit__decimal@@Base+0x9d48>  // b.any
   244f8:	ldr	x0, [x19, #32]
   244fc:	ldrb	w0, [x0]
   24500:	cbnz	w0, 24374 <PyInit__decimal@@Base+0x9df4>
   24504:	add	x0, x21, #0x1
   24508:	str	x0, [sp, #72]
   2450c:	mov	w1, #0x67                  	// #103
   24510:	mov	w0, #0x47                  	// #71
   24514:	ldrb	w2, [x21]
   24518:	cmp	w2, #0x4e
   2451c:	csel	w0, w0, w1, eq  // eq = none
   24520:	strb	w0, [x19, #16]
   24524:	bl	6630 <localeconv@plt>
   24528:	mov	x1, x0
   2452c:	mov	x0, x19
   24530:	ldr	x2, [x1]
   24534:	str	x2, [x19, #24]
   24538:	ldp	x2, x1, [x1, #8]
   2453c:	stp	x2, x1, [x19, #32]
   24540:	bl	240c8 <PyInit__decimal@@Base+0x9b48>
   24544:	tbnz	w0, #31, 24374 <PyInit__decimal@@Base+0x9df4>
   24548:	ldr	x0, [sp, #72]
   2454c:	ldrb	w20, [x0]
   24550:	b	242c8 <PyInit__decimal@@Base+0x9d48>
   24554:	mov	x0, #0x2                   	// #2
   24558:	stp	x21, x22, [sp, #32]
   2455c:	mov	w2, w0
   24560:	strb	w3, [x19, #20]
   24564:	strb	wzr, [x4, x0]
   24568:	b	241d0 <PyInit__decimal@@Base+0x9c50>
   2456c:	mov	x0, #0x3                   	// #3
   24570:	stp	x21, x22, [sp, #32]
   24574:	strb	wzr, [x4, x0]
   24578:	b	241d0 <PyInit__decimal@@Base+0x9c50>
   2457c:	mov	w2, #0x4                   	// #4
   24580:	mov	w5, #0xbf                  	// #191
   24584:	mov	w3, #0x90                  	// #144
   24588:	b	24464 <PyInit__decimal@@Base+0x9ee4>
   2458c:	mov	w2, #0x4                   	// #4
   24590:	mov	w5, #0xbf                  	// #191
   24594:	mov	w3, #0x80                  	// #128
   24598:	b	24464 <PyInit__decimal@@Base+0x9ee4>
   2459c:	nop
   245a0:	sub	sp, sp, #0x300
   245a4:	mov	w4, #0x30                  	// #48
   245a8:	mov	x5, #0x40                  	// #64
   245ac:	stp	x29, x30, [sp]
   245b0:	mov	x29, sp
   245b4:	stp	x19, x20, [sp, #16]
   245b8:	mov	x19, x1
   245bc:	add	x1, sp, #0x100
   245c0:	strb	w4, [sp, #160]
   245c4:	ldr	x4, [x19]
   245c8:	stp	x21, x22, [sp, #32]
   245cc:	mov	x21, x0
   245d0:	mov	x0, #0xffffffffa763ffff    	// #-1486618625
   245d4:	stp	xzr, xzr, [sp, #168]
   245d8:	movk	x0, #0xb6b3, lsl #32
   245dc:	stp	xzr, x5, [sp, #184]
   245e0:	movk	x0, #0xde0, lsl #48
   245e4:	ldrb	w20, [x19, #16]
   245e8:	str	x1, [sp, #200]
   245ec:	mov	x22, x3
   245f0:	cmp	x4, x0
   245f4:	b.gt	24a94 <PyInit__decimal@@Base+0xa514>
   245f8:	stp	x23, x24, [sp, #48]
   245fc:	mov	x24, x2
   24600:	stp	x25, x26, [sp, #64]
   24604:	bl	6880 <__ctype_b_loc@plt>
   24608:	mov	x23, x0
   2460c:	ubfiz	x0, x20, #1, #8
   24610:	mov	w25, w20
   24614:	mov	w26, #0x0                   	// #0
   24618:	ldr	x1, [x23]
   2461c:	ldrh	w0, [x1, x0]
   24620:	tbnz	w0, #8, 247cc <PyInit__decimal@@Base+0xa24c>
   24624:	ldrb	w0, [x19, #18]
   24628:	cmp	w0, #0x20
   2462c:	b.eq	247ec <PyInit__decimal@@Base+0xa26c>  // b.none
   24630:	cmp	w0, #0x2b
   24634:	orr	w0, w26, #0x80
   24638:	csel	w26, w0, w26, eq  // eq = none
   2463c:	mov	x0, x21
   24640:	bl	27ff8 <PyInit__decimal@@Base+0xda78>
   24644:	cbnz	w0, 2471c <PyInit__decimal@@Base+0xa19c>
   24648:	str	wzr, [sp, #208]
   2464c:	cmp	w20, #0x66
   24650:	b.eq	24ac8 <PyInit__decimal@@Base+0xa548>  // b.none
   24654:	b.hi	24814 <PyInit__decimal@@Base+0xa294>  // b.pmore
   24658:	cmp	w20, #0x25
   2465c:	b.ne	247f4 <PyInit__decimal@@Base+0xa274>  // b.any
   24660:	add	x20, sp, #0xa0
   24664:	mov	x1, x21
   24668:	orr	w26, w26, #0x20
   2466c:	mov	x0, x20
   24670:	mov	x2, x22
   24674:	bl	28fe0 <PyInit__decimal@@Base+0xea60>
   24678:	cbz	w0, 246fc <PyInit__decimal@@Base+0xa17c>
   2467c:	ldr	x0, [sp, #168]
   24680:	mov	x21, x20
   24684:	add	x0, x0, #0x2
   24688:	str	x0, [sp, #168]
   2468c:	ldr	x2, [x19, #8]
   24690:	orr	w26, w26, #0x10
   24694:	tbnz	x2, #63, 246c8 <PyInit__decimal@@Base+0xa148>
   24698:	mov	x0, #0xffffffffa763ffff    	// #-1486618625
   2469c:	movk	x0, #0xb6b3, lsl #32
   246a0:	movk	x0, #0xde0, lsl #48
   246a4:	cmp	x2, x0
   246a8:	b.gt	24cc0 <PyInit__decimal@@Base+0xa740>
   246ac:	mov	x1, x21
   246b0:	neg	x2, x2
   246b4:	mov	x21, x20
   246b8:	add	x4, sp, #0xd0
   246bc:	mov	x3, x24
   246c0:	mov	x0, x20
   246c4:	bl	374b0 <PyInit__decimal@@Base+0x1cf30>
   246c8:	mov	x0, x21
   246cc:	mov	x25, #0x1                   	// #1
   246d0:	bl	28008 <PyInit__decimal@@Base+0xda88>
   246d4:	cbnz	w0, 24ae0 <PyInit__decimal@@Base+0xa560>
   246d8:	ldr	w0, [sp, #208]
   246dc:	mov	w1, #0x3be                 	// #958
   246e0:	ands	w0, w0, w1
   246e4:	b.eq	24764 <PyInit__decimal@@Base+0xa1e4>  // b.none
   246e8:	ldr	w1, [x22]
   246ec:	orr	w0, w1, w0
   246f0:	str	w0, [x22]
   246f4:	mov	x0, x20
   246f8:	bl	281b8 <PyInit__decimal@@Base+0xdc38>
   246fc:	mov	x0, #0x0                   	// #0
   24700:	ldp	x29, x30, [sp]
   24704:	ldp	x19, x20, [sp, #16]
   24708:	ldp	x21, x22, [sp, #32]
   2470c:	ldp	x23, x24, [sp, #48]
   24710:	ldp	x25, x26, [sp, #64]
   24714:	add	sp, sp, #0x300
   24718:	ret
   2471c:	ldrb	w0, [x19, #17]
   24720:	cmp	w0, #0x7a
   24724:	b.ne	24754 <PyInit__decimal@@Base+0xa1d4>  // b.any
   24728:	ldp	x0, x1, [x19, #16]
   2472c:	stp	x0, x1, [sp, #224]
   24730:	mov	w2, #0x20                  	// #32
   24734:	ldp	x4, x5, [x19]
   24738:	mov	w3, #0x3e                  	// #62
   2473c:	ldp	x0, x1, [x19, #32]
   24740:	add	x19, sp, #0xd0
   24744:	stp	x4, x5, [sp, #208]
   24748:	strb	w3, [sp, #225]
   2474c:	sturh	w2, [sp, #227]
   24750:	stp	x0, x1, [sp, #240]
   24754:	cmp	w20, #0x25
   24758:	b.eq	24ab8 <PyInit__decimal@@Base+0xa538>  // b.none
   2475c:	add	x20, sp, #0xa0
   24760:	mov	x25, #0x1                   	// #1
   24764:	add	x24, sp, #0x80
   24768:	mov	x3, x25
   2476c:	mov	w2, w26
   24770:	add	x0, x24, #0x18
   24774:	mov	x1, x21
   24778:	bl	22578 <PyInit__decimal@@Base+0x7ff8>
   2477c:	stp	x0, x0, [sp, #128]
   24780:	tbnz	x0, #63, 24ad0 <PyInit__decimal@@Base+0xa550>
   24784:	ldr	x0, [x19, #24]
   24788:	ldrb	w0, [x0]
   2478c:	cbnz	w0, 2483c <PyInit__decimal@@Base+0xa2bc>
   24790:	ldr	x21, [x19]
   24794:	cbz	x21, 247a4 <PyInit__decimal@@Base+0xa224>
   24798:	ldr	x25, [sp, #136]
   2479c:	cmp	x21, x25
   247a0:	b.gt	24968 <PyInit__decimal@@Base+0xa3e8>
   247a4:	mov	x0, x20
   247a8:	bl	281b8 <PyInit__decimal@@Base+0xdc38>
   247ac:	ldp	x29, x30, [sp]
   247b0:	ldp	x19, x20, [sp, #16]
   247b4:	ldp	x21, x22, [sp, #32]
   247b8:	ldp	x23, x24, [sp, #48]
   247bc:	ldp	x25, x26, [sp, #64]
   247c0:	ldr	x0, [sp, #152]
   247c4:	add	sp, sp, #0x300
   247c8:	ret
   247cc:	bl	6600 <__ctype_tolower_loc@plt>
   247d0:	mov	w26, #0x1                   	// #1
   247d4:	ldr	x0, [x0]
   247d8:	ldr	w20, [x0, x25, lsl #2]
   247dc:	ldrb	w0, [x19, #18]
   247e0:	and	w20, w20, #0xff
   247e4:	cmp	w0, #0x20
   247e8:	b.ne	24630 <PyInit__decimal@@Base+0xa0b0>  // b.any
   247ec:	orr	w26, w26, #0x40
   247f0:	b	2463c <PyInit__decimal@@Base+0xa0bc>
   247f4:	cmp	w20, #0x65
   247f8:	b.ne	24dac <PyInit__decimal@@Base+0xa82c>  // b.any
   247fc:	ldr	x0, [x19, #8]
   24800:	orr	w26, w26, #0x8
   24804:	tbz	x0, #63, 24b0c <PyInit__decimal@@Base+0xa58c>
   24808:	add	x20, sp, #0xa0
   2480c:	mov	x25, #0x1                   	// #1
   24810:	b	24764 <PyInit__decimal@@Base+0xa1e4>
   24814:	stp	x27, x28, [sp, #80]
   24818:	cmp	w20, #0x67
   2481c:	b.ne	24db0 <PyInit__decimal@@Base+0xa830>  // b.any
   24820:	ldr	x27, [x19, #8]
   24824:	orr	w26, w26, #0x2
   24828:	tbz	x27, #63, 24b44 <PyInit__decimal@@Base+0xa5c4>
   2482c:	add	x20, sp, #0xa0
   24830:	mov	x25, #0x1                   	// #1
   24834:	ldp	x27, x28, [sp, #80]
   24838:	b	24764 <PyInit__decimal@@Base+0xa1e4>
   2483c:	mov	x0, x21
   24840:	bl	27ff8 <PyInit__decimal@@Base+0xda78>
   24844:	cbnz	w0, 24790 <PyInit__decimal@@Base+0xa210>
   24848:	mov	x0, #0x23                  	// #35
   2484c:	ldr	x1, [sp, #136]
   24850:	movk	x0, #0xa764, lsl #16
   24854:	movk	x0, #0xb6b3, lsl #32
   24858:	movk	x0, #0xde0, lsl #48
   2485c:	cmp	x1, x0
   24860:	ldr	x26, [sp, #152]
   24864:	b.gt	24cf0 <PyInit__decimal@@Base+0xa770>
   24868:	mov	x25, x26
   2486c:	stp	x27, x28, [sp, #80]
   24870:	ldrb	w1, [x25], #1
   24874:	sub	w0, w1, #0x2b
   24878:	cmp	w1, #0x20
   2487c:	and	w0, w0, #0xfffffffd
   24880:	and	w0, w0, #0xff
   24884:	ccmp	w0, #0x0, #0x4, ne  // ne = any
   24888:	b.ne	24bcc <PyInit__decimal@@Base+0xa64c>  // b.any
   2488c:	add	x21, x26, #0x2
   24890:	mov	x27, x26
   24894:	ldrb	w0, [x25, #1]
   24898:	ldr	x3, [x23]
   2489c:	ubfiz	x1, x0, #1, #8
   248a0:	ldrh	w1, [x3, x1]
   248a4:	tbz	w1, #11, 24d80 <PyInit__decimal@@Base+0xa800>
   248a8:	ldrb	w0, [x21, #1]!
   248ac:	ubfiz	x1, x0, #1, #8
   248b0:	ldrh	w1, [x3, x1]
   248b4:	tbnz	w1, #11, 248a8 <PyInit__decimal@@Base+0xa328>
   248b8:	sub	x28, x21, x25
   248bc:	cmp	w0, #0x2e
   248c0:	ldr	x23, [sp, #128]
   248c4:	b.eq	24d10 <PyInit__decimal@@Base+0xa790>  // b.none
   248c8:	sub	x6, x21, x26
   248cc:	sub	x23, x23, x6
   248d0:	ldr	x0, [x19, #32]
   248d4:	ldrb	w0, [x0]
   248d8:	cbz	w0, 24d44 <PyInit__decimal@@Base+0xa7c4>
   248dc:	ldr	x0, [x19, #40]
   248e0:	ldrb	w0, [x0]
   248e4:	cbz	w0, 24d44 <PyInit__decimal@@Base+0xa7c4>
   248e8:	mov	x4, #0x0                   	// #0
   248ec:	mov	x7, x19
   248f0:	mov	x6, x23
   248f4:	mov	x5, x21
   248f8:	mov	x3, x28
   248fc:	mov	x2, x25
   24900:	mov	x1, x27
   24904:	mov	x0, x24
   24908:	str	x4, [sp, #104]
   2490c:	str	xzr, [sp, #152]
   24910:	bl	22240 <PyInit__decimal@@Base+0x7cc0>
   24914:	ldr	x0, [sp, #128]
   24918:	mov	x1, #0x1                   	// #1
   2491c:	add	x0, x0, x1
   24920:	bl	25260 <PyInit__decimal@@Base+0xace0>
   24924:	str	x0, [sp, #152]
   24928:	ldr	x4, [sp, #104]
   2492c:	cbz	x0, 24d4c <PyInit__decimal@@Base+0xa7cc>
   24930:	mov	x3, x28
   24934:	mov	x1, x27
   24938:	mov	x6, x23
   2493c:	mov	x5, x21
   24940:	mov	x2, x25
   24944:	mov	x0, x24
   24948:	mov	x7, x19
   2494c:	bl	22240 <PyInit__decimal@@Base+0x7cc0>
   24950:	adrp	x1, 5f000 <PyInit__decimal@@Base+0x44a80>
   24954:	mov	x0, x26
   24958:	ldr	x1, [x1, #1704]
   2495c:	blr	x1
   24960:	ldp	x27, x28, [sp, #80]
   24964:	b	24790 <PyInit__decimal@@Base+0xa210>
   24968:	sub	x25, x21, x25
   2496c:	add	x24, x19, #0x13
   24970:	mov	x0, x24
   24974:	stp	x27, x28, [sp, #80]
   24978:	strb	wzr, [sp, #127]
   2497c:	bl	64d0 <strlen@plt>
   24980:	mul	x21, x0, x25
   24984:	mov	x23, x0
   24988:	ldr	x1, [sp, #128]
   2498c:	add	x3, sp, #0x7f
   24990:	ldr	x0, [sp, #152]
   24994:	add	x1, x1, #0x1
   24998:	ldrb	w28, [x19, #17]
   2499c:	add	x1, x1, x21
   249a0:	mov	x2, #0x1                   	// #1
   249a4:	bl	252a8 <PyInit__decimal@@Base+0xad28>
   249a8:	str	x0, [sp, #152]
   249ac:	ldrb	w1, [sp, #127]
   249b0:	mov	x19, x0
   249b4:	cbnz	w1, 24cd0 <PyInit__decimal@@Base+0xa750>
   249b8:	cmp	w28, #0x7a
   249bc:	mov	x26, x25
   249c0:	ldr	x27, [sp, #128]
   249c4:	b.eq	24be4 <PyInit__decimal@@Base+0xa664>  // b.none
   249c8:	cmp	w28, #0x3c
   249cc:	b.eq	24a40 <PyInit__decimal@@Base+0xa4c0>  // b.none
   249d0:	sub	w0, w28, #0x3d
   249d4:	and	w0, w0, #0xff
   249d8:	cmp	w0, #0x1
   249dc:	b.ls	24bdc <PyInit__decimal@@Base+0xa65c>  // b.plast
   249e0:	add	x22, x25, x25, lsr #63
   249e4:	mov	x2, x27
   249e8:	mov	x1, x19
   249ec:	asr	x22, x22, #1
   249f0:	sub	x26, x25, x22
   249f4:	mul	x3, x23, x22
   249f8:	add	x0, x19, x3
   249fc:	add	x27, x27, x3
   24a00:	bl	6490 <memmove@plt>
   24a04:	cbz	x22, 24a3c <PyInit__decimal@@Base+0xa4bc>
   24a08:	mov	x1, x19
   24a0c:	mov	x4, #0x0                   	// #0
   24a10:	mov	x2, #0x0                   	// #0
   24a14:	cbz	x23, 24a2c <PyInit__decimal@@Base+0xa4ac>
   24a18:	ldrb	w3, [x24, x2]
   24a1c:	strb	w3, [x1, x2]
   24a20:	add	x2, x2, #0x1
   24a24:	cmp	x23, x2
   24a28:	b.ne	24a18 <PyInit__decimal@@Base+0xa498>  // b.any
   24a2c:	add	x4, x4, #0x1
   24a30:	add	x1, x1, x23
   24a34:	cmp	x4, x22
   24a38:	b.cc	24a10 <PyInit__decimal@@Base+0xa490>  // b.lo, b.ul, b.last
   24a3c:	cbz	x26, 24a74 <PyInit__decimal@@Base+0xa4f4>
   24a40:	add	x2, x19, x27
   24a44:	mov	x4, #0x0                   	// #0
   24a48:	mov	x1, #0x0                   	// #0
   24a4c:	cbz	x23, 24a64 <PyInit__decimal@@Base+0xa4e4>
   24a50:	ldrb	w3, [x24, x1]
   24a54:	strb	w3, [x2, x1]
   24a58:	add	x1, x1, #0x1
   24a5c:	cmp	x23, x1
   24a60:	b.ne	24a50 <PyInit__decimal@@Base+0xa4d0>  // b.any
   24a64:	add	x4, x4, #0x1
   24a68:	add	x2, x2, x23
   24a6c:	cmp	x4, x26
   24a70:	b.ne	24a48 <PyInit__decimal@@Base+0xa4c8>  // b.any
   24a74:	ldp	x0, x1, [sp, #128]
   24a78:	add	x21, x21, x0
   24a7c:	add	x25, x1, x25
   24a80:	ldr	x0, [sp, #152]
   24a84:	stp	x21, x25, [sp, #128]
   24a88:	strb	wzr, [x0, x21]
   24a8c:	ldp	x27, x28, [sp, #80]
   24a90:	b	247a4 <PyInit__decimal@@Base+0xa224>
   24a94:	ldr	w1, [x3]
   24a98:	mov	x0, #0x0                   	// #0
   24a9c:	ldp	x29, x30, [sp]
   24aa0:	orr	w1, w1, #0x100
   24aa4:	str	w1, [x3]
   24aa8:	ldp	x19, x20, [sp, #16]
   24aac:	ldp	x21, x22, [sp, #32]
   24ab0:	add	sp, sp, #0x300
   24ab4:	ret
   24ab8:	orr	w26, w26, #0x20
   24abc:	add	x20, sp, #0xa0
   24ac0:	mov	x25, #0x1                   	// #1
   24ac4:	b	24764 <PyInit__decimal@@Base+0xa1e4>
   24ac8:	add	x20, sp, #0xa0
   24acc:	b	2468c <PyInit__decimal@@Base+0xa10c>
   24ad0:	ldr	w0, [x22]
   24ad4:	orr	w0, w0, #0x200
   24ad8:	str	w0, [x22]
   24adc:	b	246f4 <PyInit__decimal@@Base+0xa174>
   24ae0:	ldr	x0, [x21, #8]
   24ae4:	cmp	x0, #0x0
   24ae8:	b.le	246d8 <PyInit__decimal@@Base+0xa158>
   24aec:	mov	x1, x21
   24af0:	mov	x3, x24
   24af4:	mov	x21, x20
   24af8:	add	x4, sp, #0xd0
   24afc:	mov	x0, x20
   24b00:	mov	x2, #0x0                   	// #0
   24b04:	bl	374b0 <PyInit__decimal@@Base+0x1cf30>
   24b08:	b	246d8 <PyInit__decimal@@Base+0xa158>
   24b0c:	mov	x1, #0xffffffffa763ffff    	// #-1486618625
   24b10:	add	x20, sp, #0xa0
   24b14:	movk	x1, #0xb6b3, lsl #32
   24b18:	movk	x1, #0xde0, lsl #48
   24b1c:	cmp	x0, x1
   24b20:	b.gt	24cc0 <PyInit__decimal@@Base+0xa740>
   24b24:	mov	x0, x21
   24b28:	bl	28008 <PyInit__decimal@@Base+0xda88>
   24b2c:	cbz	w0, 24c28 <PyInit__decimal@@Base+0xa6a8>
   24b30:	ldr	x0, [x19, #8]
   24b34:	mov	x25, #0x1                   	// #1
   24b38:	add	x20, sp, #0xa0
   24b3c:	sub	x25, x25, x0
   24b40:	b	246d8 <PyInit__decimal@@Base+0xa158>
   24b44:	mov	x0, #0xffffffffa763ffff    	// #-1486618625
   24b48:	movk	x0, #0xb6b3, lsl #32
   24b4c:	movk	x0, #0xde0, lsl #48
   24b50:	cmp	x27, x0
   24b54:	b.gt	24cb4 <PyInit__decimal@@Base+0xa734>
   24b58:	ldr	x0, [x21, #16]
   24b5c:	cbz	x27, 24d28 <PyInit__decimal@@Base+0xa7a8>
   24b60:	cmp	x0, x27
   24b64:	b.le	2482c <PyInit__decimal@@Base+0xa2ac>
   24b68:	ldr	x28, [x21, #8]
   24b6c:	add	x0, x0, x28
   24b70:	sub	x28, x0, x27
   24b74:	mov	x0, x21
   24b78:	bl	27ff8 <PyInit__decimal@@Base+0xda78>
   24b7c:	cbnz	w0, 24d5c <PyInit__decimal@@Base+0xa7dc>
   24b80:	mov	x0, x21
   24b84:	bl	28008 <PyInit__decimal@@Base+0xda88>
   24b88:	cbnz	w0, 24d5c <PyInit__decimal@@Base+0xa7dc>
   24b8c:	add	x20, sp, #0xa0
   24b90:	add	x4, sp, #0xd0
   24b94:	mov	x1, x21
   24b98:	mov	x0, x20
   24b9c:	mov	x3, x24
   24ba0:	mov	x2, x28
   24ba4:	str	x4, [sp, #104]
   24ba8:	bl	374f0 <PyInit__decimal@@Base+0x1cf70>
   24bac:	ldr	x0, [sp, #176]
   24bb0:	mov	x21, x20
   24bb4:	mov	x25, #0x1                   	// #1
   24bb8:	cmp	x0, x27
   24bbc:	ldr	x4, [sp, #104]
   24bc0:	b.gt	24c98 <PyInit__decimal@@Base+0xa718>
   24bc4:	ldp	x27, x28, [sp, #80]
   24bc8:	b	246d8 <PyInit__decimal@@Base+0xa158>
   24bcc:	mov	x21, x25
   24bd0:	mov	x27, #0x0                   	// #0
   24bd4:	mov	x25, x26
   24bd8:	b	24894 <PyInit__decimal@@Base+0xa314>
   24bdc:	cmp	w28, #0x3d
   24be0:	b.ne	24c08 <PyInit__decimal@@Base+0xa688>  // b.any
   24be4:	ldrb	w1, [x19]
   24be8:	sub	w0, w1, #0x2b
   24bec:	cmp	w1, #0x20
   24bf0:	and	w0, w0, #0xfffffffd
   24bf4:	and	w0, w0, #0xff
   24bf8:	ccmp	w0, #0x0, #0x4, ne  // ne = any
   24bfc:	b.ne	24c08 <PyInit__decimal@@Base+0xa688>  // b.any
   24c00:	add	x19, x19, #0x1
   24c04:	sub	x27, x27, #0x1
   24c08:	mov	x2, x27
   24c0c:	mov	x1, x19
   24c10:	add	x0, x19, x21
   24c14:	add	x27, x27, x21
   24c18:	mov	x22, x25
   24c1c:	mov	x26, #0x0                   	// #0
   24c20:	bl	6490 <memmove@plt>
   24c24:	b	24a08 <PyInit__decimal@@Base+0xa488>
   24c28:	stp	x27, x28, [sp, #80]
   24c2c:	ldr	x27, [x19, #8]
   24c30:	add	x27, x27, #0x1
   24c34:	cmp	x27, #0x0
   24c38:	b.le	24d88 <PyInit__decimal@@Base+0xa808>
   24c3c:	mov	x0, x21
   24c40:	ldp	x20, x28, [x21, #8]
   24c44:	bl	27ff8 <PyInit__decimal@@Base+0xda78>
   24c48:	cbnz	w0, 24d5c <PyInit__decimal@@Base+0xa7dc>
   24c4c:	mov	x0, x21
   24c50:	bl	28008 <PyInit__decimal@@Base+0xda88>
   24c54:	cbnz	w0, 24d5c <PyInit__decimal@@Base+0xa7dc>
   24c58:	add	x20, x20, x28
   24c5c:	add	x4, sp, #0xd0
   24c60:	sub	x28, x20, x27
   24c64:	add	x20, sp, #0xa0
   24c68:	mov	x1, x21
   24c6c:	mov	x0, x20
   24c70:	mov	x2, x28
   24c74:	mov	x3, x24
   24c78:	str	x4, [sp, #104]
   24c7c:	bl	374f0 <PyInit__decimal@@Base+0x1cf70>
   24c80:	ldr	x0, [sp, #176]
   24c84:	mov	x21, x20
   24c88:	mov	x25, #0x1                   	// #1
   24c8c:	cmp	x27, x0
   24c90:	ldr	x4, [sp, #104]
   24c94:	b.ge	24bc4 <PyInit__decimal@@Base+0xa644>  // b.tcont
   24c98:	add	x2, x28, x25
   24c9c:	mov	x3, x24
   24ca0:	mov	x1, x21
   24ca4:	mov	x0, x21
   24ca8:	bl	374f0 <PyInit__decimal@@Base+0x1cf70>
   24cac:	ldp	x27, x28, [sp, #80]
   24cb0:	b	246d8 <PyInit__decimal@@Base+0xa158>
   24cb4:	ldp	x27, x28, [sp, #80]
   24cb8:	add	x20, sp, #0xa0
   24cbc:	nop
   24cc0:	ldr	w0, [x22]
   24cc4:	orr	w0, w0, #0x100
   24cc8:	str	w0, [x22]
   24ccc:	b	246f4 <PyInit__decimal@@Base+0xa174>
   24cd0:	ldr	w1, [x22]
   24cd4:	adrp	x2, 5f000 <PyInit__decimal@@Base+0x44a80>
   24cd8:	ldr	x2, [x2, #1704]
   24cdc:	orr	w1, w1, #0x200
   24ce0:	str	w1, [x22]
   24ce4:	blr	x2
   24ce8:	ldp	x27, x28, [sp, #80]
   24cec:	b	246f4 <PyInit__decimal@@Base+0xa174>
   24cf0:	adrp	x2, 5f000 <PyInit__decimal@@Base+0x44a80>
   24cf4:	ldr	w1, [x22]
   24cf8:	mov	x0, x26
   24cfc:	ldr	x2, [x2, #1704]
   24d00:	orr	w1, w1, #0x100
   24d04:	str	w1, [x22]
   24d08:	blr	x2
   24d0c:	b	246f4 <PyInit__decimal@@Base+0xa174>
   24d10:	ldr	x4, [x19, #24]
   24d14:	add	x21, x21, #0x1
   24d18:	sub	x0, x21, x26
   24d1c:	sub	x23, x23, x0
   24d20:	cbnz	x4, 248ec <PyInit__decimal@@Base+0xa36c>
   24d24:	b	248d0 <PyInit__decimal@@Base+0xa350>
   24d28:	cmp	x0, #0x1
   24d2c:	b.le	2482c <PyInit__decimal@@Base+0xa2ac>
   24d30:	ldr	x28, [x21, #8]
   24d34:	mov	x27, #0x1                   	// #1
   24d38:	add	x0, x0, x28
   24d3c:	sub	x28, x0, #0x1
   24d40:	b	24b74 <PyInit__decimal@@Base+0xa5f4>
   24d44:	ldp	x27, x28, [sp, #80]
   24d48:	b	24790 <PyInit__decimal@@Base+0xa210>
   24d4c:	ldr	w1, [x22]
   24d50:	mov	x0, x26
   24d54:	adrp	x2, 5f000 <PyInit__decimal@@Base+0x44a80>
   24d58:	b	24cd8 <PyInit__decimal@@Base+0xa758>
   24d5c:	add	x20, sp, #0xa0
   24d60:	mov	x1, x21
   24d64:	mov	x0, x20
   24d68:	add	x2, sp, #0xd0
   24d6c:	mov	x21, x20
   24d70:	bl	28fe0 <PyInit__decimal@@Base+0xea60>
   24d74:	mov	x25, #0x1                   	// #1
   24d78:	ldp	x27, x28, [sp, #80]
   24d7c:	b	246d8 <PyInit__decimal@@Base+0xa158>
   24d80:	mov	x28, #0x1                   	// #1
   24d84:	b	248bc <PyInit__decimal@@Base+0xa33c>
   24d88:	add	x20, sp, #0xa0
   24d8c:	add	x2, sp, #0xd0
   24d90:	mov	x0, x20
   24d94:	mov	w1, #0x100                 	// #256
   24d98:	mov	x21, x20
   24d9c:	bl	28d68 <PyInit__decimal@@Base+0xe7e8>
   24da0:	mov	x25, #0x1                   	// #1
   24da4:	ldp	x27, x28, [sp, #80]
   24da8:	b	246d8 <PyInit__decimal@@Base+0xa158>
   24dac:	stp	x27, x28, [sp, #80]
   24db0:	bl	67c0 <abort@plt>
   24db4:	nop
   24db8:	stp	x29, x30, [sp, #-96]!
   24dbc:	mov	x29, sp
   24dc0:	stp	x21, x22, [sp, #32]
   24dc4:	add	x22, sp, #0x30
   24dc8:	mov	x21, x2
   24dcc:	mov	w2, #0x1                   	// #1
   24dd0:	stp	x19, x20, [sp, #16]
   24dd4:	mov	x20, x0
   24dd8:	mov	x19, x3
   24ddc:	mov	x0, x22
   24de0:	bl	24110 <PyInit__decimal@@Base+0x9b90>
   24de4:	cbz	w0, 24e0c <PyInit__decimal@@Base+0xa88c>
   24de8:	mov	x3, x19
   24dec:	mov	x2, x21
   24df0:	mov	x1, x22
   24df4:	mov	x0, x20
   24df8:	bl	245a0 <PyInit__decimal@@Base+0xa020>
   24dfc:	ldp	x19, x20, [sp, #16]
   24e00:	ldp	x21, x22, [sp, #32]
   24e04:	ldp	x29, x30, [sp], #96
   24e08:	ret
   24e0c:	ldr	w1, [x19]
   24e10:	mov	x0, #0x0                   	// #0
   24e14:	ldp	x21, x22, [sp, #32]
   24e18:	orr	w1, w1, #0x100
   24e1c:	str	w1, [x19]
   24e20:	ldp	x19, x20, [sp, #16]
   24e24:	ldp	x29, x30, [sp], #96
   24e28:	ret
   24e2c:	nop
   24e30:	stp	x29, x30, [sp, #-80]!
   24e34:	mov	x29, sp
   24e38:	stp	x19, x20, [sp, #16]
   24e3c:	mov	w20, w1
   24e40:	mov	x19, #0x0                   	// #0
   24e44:	stp	x21, x22, [sp, #32]
   24e48:	mov	w22, w2
   24e4c:	mov	x21, x0
   24e50:	stp	x23, x24, [sp, #48]
   24e54:	mov	x23, x0
   24e58:	mov	w24, #0x1                   	// #1
   24e5c:	stp	x25, x26, [sp, #64]
   24e60:	adrp	x25, 5f000 <PyInit__decimal@@Base+0x44a80>
   24e64:	adrp	x26, 42000 <PyInit__decimal@@Base+0x27a80>
   24e68:	add	x25, x25, #0x598
   24e6c:	add	x26, x26, #0x6f0
   24e70:	strb	wzr, [x0]
   24e74:	b	24e84 <PyInit__decimal@@Base+0xa904>
   24e78:	add	x19, x19, #0x1
   24e7c:	cmp	x19, #0xf
   24e80:	b.eq	24ed4 <PyInit__decimal@@Base+0xa954>  // b.none
   24e84:	lsl	w3, w24, w19
   24e88:	tst	w3, w22
   24e8c:	b.eq	24e78 <PyInit__decimal@@Base+0xa8f8>  // b.none
   24e90:	ldr	x3, [x25, x19, lsl #3]
   24e94:	sxtw	x1, w20
   24e98:	mov	x0, x21
   24e9c:	mov	x2, x26
   24ea0:	bl	6610 <snprintf@plt>
   24ea4:	cmp	w0, #0x0
   24ea8:	ccmp	w0, w20, #0x0, ge  // ge = tcont
   24eac:	add	x21, x21, w0, sxtw
   24eb0:	sub	w20, w20, w0
   24eb4:	b.lt	24e78 <PyInit__decimal@@Base+0xa8f8>  // b.tstop
   24eb8:	mov	w0, #0xffffffff            	// #-1
   24ebc:	ldp	x19, x20, [sp, #16]
   24ec0:	ldp	x21, x22, [sp, #32]
   24ec4:	ldp	x23, x24, [sp, #48]
   24ec8:	ldp	x25, x26, [sp, #64]
   24ecc:	ldp	x29, x30, [sp], #80
   24ed0:	ret
   24ed4:	cmp	x21, x23
   24ed8:	mov	w0, #0x0                   	// #0
   24edc:	b.eq	24ee8 <PyInit__decimal@@Base+0xa968>  // b.none
   24ee0:	strb	wzr, [x21, #-1]!
   24ee4:	sub	w0, w21, w23
   24ee8:	ldp	x19, x20, [sp, #16]
   24eec:	ldp	x21, x22, [sp, #32]
   24ef0:	ldp	x23, x24, [sp, #48]
   24ef4:	ldp	x25, x26, [sp, #64]
   24ef8:	ldp	x29, x30, [sp], #80
   24efc:	ret
   24f00:	stp	x29, x30, [sp, #-96]!
   24f04:	mov	x29, sp
   24f08:	stp	x23, x24, [sp, #48]
   24f0c:	mov	x23, x0
   24f10:	mov	w24, w2
   24f14:	stp	x19, x20, [sp, #16]
   24f18:	mov	x19, #0x0                   	// #0
   24f1c:	stp	x21, x22, [sp, #32]
   24f20:	mov	x22, x0
   24f24:	adrp	x0, 5f000 <PyInit__decimal@@Base+0x44a80>
   24f28:	stp	x25, x26, [sp, #64]
   24f2c:	mov	x26, x3
   24f30:	mov	w3, #0x5b                  	// #91
   24f34:	str	x27, [sp, #80]
   24f38:	cmp	x26, #0x0
   24f3c:	strh	w3, [x23], #1
   24f40:	add	x0, x0, #0x598
   24f44:	adrp	x27, 42000 <PyInit__decimal@@Base+0x27a80>
   24f48:	sub	w21, w1, #0x1
   24f4c:	csel	x26, x0, x26, eq  // eq = none
   24f50:	mov	x20, x23
   24f54:	add	x27, x27, #0x6f8
   24f58:	mov	w25, #0x1                   	// #1
   24f5c:	b	24f6c <PyInit__decimal@@Base+0xa9ec>
   24f60:	add	x19, x19, #0x1
   24f64:	cmp	x19, #0xf
   24f68:	b.eq	24fc0 <PyInit__decimal@@Base+0xaa40>  // b.none
   24f6c:	lsl	w4, w25, w19
   24f70:	tst	w4, w24
   24f74:	b.eq	24f60 <PyInit__decimal@@Base+0xa9e0>  // b.none
   24f78:	ldr	x3, [x26, x19, lsl #3]
   24f7c:	sxtw	x1, w21
   24f80:	mov	x0, x20
   24f84:	mov	x2, x27
   24f88:	bl	6610 <snprintf@plt>
   24f8c:	cmp	w0, #0x0
   24f90:	ccmp	w0, w21, #0x0, ge  // ge = tcont
   24f94:	add	x20, x20, w0, sxtw
   24f98:	sub	w21, w21, w0
   24f9c:	b.lt	24f60 <PyInit__decimal@@Base+0xa9e0>  // b.tstop
   24fa0:	mov	w0, #0xffffffff            	// #-1
   24fa4:	ldp	x19, x20, [sp, #16]
   24fa8:	ldp	x21, x22, [sp, #32]
   24fac:	ldp	x23, x24, [sp, #48]
   24fb0:	ldp	x25, x26, [sp, #64]
   24fb4:	ldr	x27, [sp, #80]
   24fb8:	ldp	x29, x30, [sp], #96
   24fbc:	ret
   24fc0:	cmp	x20, x23
   24fc4:	sub	x20, x20, #0x2
   24fc8:	csel	x20, x20, x23, ne  // ne = any
   24fcc:	mov	w0, #0x5d                  	// #93
   24fd0:	strh	w0, [x20], #1
   24fd4:	sub	w0, w20, w22
   24fd8:	ldp	x19, x20, [sp, #16]
   24fdc:	ldp	x21, x22, [sp, #32]
   24fe0:	ldp	x23, x24, [sp, #48]
   24fe4:	ldp	x25, x26, [sp, #64]
   24fe8:	ldr	x27, [sp, #80]
   24fec:	ldp	x29, x30, [sp], #96
   24ff0:	ret
   24ff4:	nop
   24ff8:	stp	x29, x30, [sp, #-112]!
   24ffc:	adrp	x5, 42000 <PyInit__decimal@@Base+0x27a80>
   25000:	mov	x29, sp
   25004:	stp	x23, x24, [sp, #48]
   25008:	mov	x23, x0
   2500c:	add	x24, x5, #0x6f8
   25010:	stp	x19, x20, [sp, #16]
   25014:	mov	x20, x3
   25018:	mov	w3, #0x5b                  	// #91
   2501c:	stp	x21, x22, [sp, #32]
   25020:	cmp	x20, #0x0
   25024:	mov	x19, #0x0                   	// #0
   25028:	stp	x25, x26, [sp, #64]
   2502c:	mov	w25, w2
   25030:	mov	w21, #0x0                   	// #0
   25034:	stp	x27, x28, [sp, #80]
   25038:	sub	w27, w1, #0x1
   2503c:	mov	w28, #0x1                   	// #1
   25040:	strh	w3, [x23], #1
   25044:	mov	w22, #0x3ba                 	// #954
   25048:	str	x0, [sp, #104]
   2504c:	adrp	x0, 5f000 <PyInit__decimal@@Base+0x44a80>
   25050:	add	x0, x0, #0x598
   25054:	mov	x26, x23
   25058:	add	x0, x0, #0x78
   2505c:	csel	x20, x0, x20, eq  // eq = none
   25060:	lsl	w4, w28, w19
   25064:	ands	w4, w4, w25
   25068:	b.eq	250a4 <PyInit__decimal@@Base+0xab24>  // b.none
   2506c:	sxtw	x1, w27
   25070:	mov	x0, x26
   25074:	mov	x2, x24
   25078:	tst	w4, w22
   2507c:	b.eq	25088 <PyInit__decimal@@Base+0xab08>  // b.none
   25080:	cbnz	w21, 250a4 <PyInit__decimal@@Base+0xab24>
   25084:	mov	w21, #0x1                   	// #1
   25088:	ldr	x3, [x20, x19, lsl #3]
   2508c:	bl	6610 <snprintf@plt>
   25090:	cmp	w0, #0x0
   25094:	ccmp	w0, w27, #0x0, ge  // ge = tcont
   25098:	add	x26, x26, w0, sxtw
   2509c:	sub	w27, w27, w0
   250a0:	b.ge	250e8 <PyInit__decimal@@Base+0xab68>  // b.tcont
   250a4:	add	x19, x19, #0x1
   250a8:	cmp	x19, #0xf
   250ac:	b.ne	25060 <PyInit__decimal@@Base+0xaae0>  // b.any
   250b0:	cmp	x26, x23
   250b4:	sub	x26, x26, #0x2
   250b8:	csel	x23, x26, x23, ne  // ne = any
   250bc:	mov	w0, #0x5d                  	// #93
   250c0:	strh	w0, [x23], #1
   250c4:	ldr	w0, [sp, #104]
   250c8:	ldp	x19, x20, [sp, #16]
   250cc:	sub	w0, w23, w0
   250d0:	ldp	x21, x22, [sp, #32]
   250d4:	ldp	x23, x24, [sp, #48]
   250d8:	ldp	x25, x26, [sp, #64]
   250dc:	ldp	x27, x28, [sp, #80]
   250e0:	ldp	x29, x30, [sp], #112
   250e4:	ret
   250e8:	mov	w0, #0xffffffff            	// #-1
   250ec:	ldp	x19, x20, [sp, #16]
   250f0:	ldp	x21, x22, [sp, #32]
   250f4:	ldp	x23, x24, [sp, #48]
   250f8:	ldp	x25, x26, [sp, #64]
   250fc:	ldp	x27, x28, [sp, #80]
   25100:	ldp	x29, x30, [sp], #112
   25104:	ret
   25108:	stp	x29, x30, [sp, #-48]!
   2510c:	mov	x3, #0x1                   	// #1
   25110:	mov	w2, #0x3                   	// #3
   25114:	mov	x29, sp
   25118:	stp	x19, x20, [sp, #16]
   2511c:	mov	x19, x0
   25120:	add	x0, sp, #0x28
   25124:	bl	22578 <PyInit__decimal@@Base+0x7ff8>
   25128:	ldr	x20, [sp, #40]
   2512c:	cbz	x20, 25160 <PyInit__decimal@@Base+0xabe0>
   25130:	mov	x2, x20
   25134:	mov	x0, x19
   25138:	adrp	x1, 42000 <PyInit__decimal@@Base+0x27a80>
   2513c:	add	x1, x1, #0x700
   25140:	bl	6a70 <fprintf@plt>
   25144:	adrp	x1, 5f000 <PyInit__decimal@@Base+0x44a80>
   25148:	mov	x0, x20
   2514c:	ldr	x1, [x1, #1704]
   25150:	blr	x1
   25154:	ldp	x19, x20, [sp, #16]
   25158:	ldp	x29, x30, [sp], #48
   2515c:	ret
   25160:	mov	x3, x19
   25164:	mov	x2, #0x19                  	// #25
   25168:	mov	x1, #0x1                   	// #1
   2516c:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27a80>
   25170:	add	x0, x0, #0x708
   25174:	bl	6930 <fwrite@plt>
   25178:	ldp	x19, x20, [sp, #16]
   2517c:	ldp	x29, x30, [sp], #48
   25180:	ret
   25184:	nop
   25188:	stp	x29, x30, [sp, #-48]!
   2518c:	mov	x1, x0
   25190:	mov	x3, #0x1                   	// #1
   25194:	mov	x29, sp
   25198:	add	x0, sp, #0x28
   2519c:	mov	w2, #0x3                   	// #3
   251a0:	str	x19, [sp, #16]
   251a4:	bl	22578 <PyInit__decimal@@Base+0x7ff8>
   251a8:	ldr	x19, [sp, #40]
   251ac:	cbz	x19, 251d4 <PyInit__decimal@@Base+0xac54>
   251b0:	mov	x0, x19
   251b4:	bl	6810 <puts@plt>
   251b8:	adrp	x1, 5f000 <PyInit__decimal@@Base+0x44a80>
   251bc:	mov	x0, x19
   251c0:	ldr	x1, [x1, #1704]
   251c4:	blr	x1
   251c8:	ldr	x19, [sp, #16]
   251cc:	ldp	x29, x30, [sp], #48
   251d0:	ret
   251d4:	adrp	x3, 5c000 <PyInit__decimal@@Base+0x41a80>
   251d8:	mov	x2, #0x19                  	// #25
   251dc:	mov	x1, #0x1                   	// #1
   251e0:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27a80>
   251e4:	ldr	x3, [x3, #3904]
   251e8:	add	x0, x0, #0x708
   251ec:	ldr	x3, [x3]
   251f0:	bl	6930 <fwrite@plt>
   251f4:	ldr	x19, [sp, #16]
   251f8:	ldp	x29, x30, [sp], #48
   251fc:	ret
   25200:	stp	x29, x30, [sp, #-32]!
   25204:	umulh	x2, x0, x1
   25208:	mov	x29, sp
   2520c:	stp	x19, x20, [sp, #16]
   25210:	mul	x19, x0, x1
   25214:	cbnz	x2, 2524c <PyInit__decimal@@Base+0xaccc>
   25218:	adrp	x1, 5f000 <PyInit__decimal@@Base+0x44a80>
   2521c:	mov	x0, x19
   25220:	ldr	x1, [x1, #1680]
   25224:	blr	x1
   25228:	mov	x20, x0
   2522c:	cbz	x0, 2523c <PyInit__decimal@@Base+0xacbc>
   25230:	mov	x2, x19
   25234:	mov	w1, #0x0                   	// #0
   25238:	bl	6670 <memset@plt>
   2523c:	mov	x0, x20
   25240:	ldp	x19, x20, [sp, #16]
   25244:	ldp	x29, x30, [sp], #32
   25248:	ret
   2524c:	mov	x20, #0x0                   	// #0
   25250:	mov	x0, x20
   25254:	ldp	x19, x20, [sp, #16]
   25258:	ldp	x29, x30, [sp], #32
   2525c:	ret
   25260:	umulh	x2, x0, x1
   25264:	mul	x0, x0, x1
   25268:	cbnz	x2, 2527c <PyInit__decimal@@Base+0xacfc>
   2526c:	adrp	x1, 5f000 <PyInit__decimal@@Base+0x44a80>
   25270:	ldr	x1, [x1, #1680]
   25274:	mov	x16, x1
   25278:	br	x16
   2527c:	mov	x0, #0x0                   	// #0
   25280:	ret
   25284:	nop
   25288:	umulh	x2, x0, x1
   2528c:	cbnz	x2, 252a0 <PyInit__decimal@@Base+0xad20>
   25290:	adrp	x2, 5f000 <PyInit__decimal@@Base+0x44a80>
   25294:	ldr	x2, [x2, #1688]
   25298:	mov	x16, x2
   2529c:	br	x16
   252a0:	mov	x0, #0x0                   	// #0
   252a4:	ret
   252a8:	stp	x29, x30, [sp, #-32]!
   252ac:	mov	x29, sp
   252b0:	stp	x19, x20, [sp, #16]
   252b4:	mov	x20, x3
   252b8:	umulh	x3, x1, x2
   252bc:	mov	x19, x0
   252c0:	mul	x1, x1, x2
   252c4:	cbnz	x3, 252e4 <PyInit__decimal@@Base+0xad64>
   252c8:	adrp	x2, 5f000 <PyInit__decimal@@Base+0x44a80>
   252cc:	ldr	x2, [x2, #1696]
   252d0:	blr	x2
   252d4:	cbz	x0, 252e4 <PyInit__decimal@@Base+0xad64>
   252d8:	ldp	x19, x20, [sp, #16]
   252dc:	ldp	x29, x30, [sp], #32
   252e0:	ret
   252e4:	mov	w1, #0x1                   	// #1
   252e8:	strb	w1, [x20]
   252ec:	mov	x0, x19
   252f0:	ldp	x19, x20, [sp, #16]
   252f4:	ldp	x29, x30, [sp], #32
   252f8:	ret
   252fc:	nop
   25300:	sub	sp, sp, #0x10
   25304:	umulh	x3, x1, x2
   25308:	mul	x1, x1, x2
   2530c:	str	x2, [sp, #8]
   25310:	cbnz	x3, 25330 <PyInit__decimal@@Base+0xadb0>
   25314:	adds	x0, x0, x1
   25318:	b.cs	25330 <PyInit__decimal@@Base+0xadb0>  // b.hs, b.nlast
   2531c:	adrp	x1, 5f000 <PyInit__decimal@@Base+0x44a80>
   25320:	ldr	x1, [x1, #1680]
   25324:	add	sp, sp, #0x10
   25328:	mov	x16, x1
   2532c:	br	x16
   25330:	mov	x0, #0x0                   	// #0
   25334:	add	sp, sp, #0x10
   25338:	ret
   2533c:	nop
   25340:	stp	x29, x30, [sp, #-48]!
   25344:	adrp	x1, 5f000 <PyInit__decimal@@Base+0x44a80>
   25348:	mov	x29, sp
   2534c:	ldr	x1, [x1, #1672]
   25350:	str	x21, [sp, #32]
   25354:	adrp	x21, 5f000 <PyInit__decimal@@Base+0x44a80>
   25358:	stp	x19, x20, [sp, #16]
   2535c:	mov	x20, x0
   25360:	ldr	x2, [x21, #1680]
   25364:	cmp	x1, x20
   25368:	csel	x20, x1, x20, ge  // ge = tcont
   2536c:	mov	x0, #0x30                  	// #48
   25370:	blr	x2
   25374:	mov	x19, x0
   25378:	cbz	x0, 253a4 <PyInit__decimal@@Base+0xae24>
   2537c:	cmp	xzr, x20, lsr #61
   25380:	lsl	x0, x20, #3
   25384:	b.ne	253b8 <PyInit__decimal@@Base+0xae38>  // b.any
   25388:	ldr	x1, [x21, #1680]
   2538c:	blr	x1
   25390:	str	x0, [x19, #40]
   25394:	cbz	x0, 253bc <PyInit__decimal@@Base+0xae3c>
   25398:	strb	wzr, [x19]
   2539c:	stp	xzr, xzr, [x19, #8]
   253a0:	stp	xzr, x20, [x19, #24]
   253a4:	mov	x0, x19
   253a8:	ldp	x19, x20, [sp, #16]
   253ac:	ldr	x21, [sp, #32]
   253b0:	ldp	x29, x30, [sp], #48
   253b4:	ret
   253b8:	str	xzr, [x19, #40]
   253bc:	add	x21, x21, #0x690
   253c0:	mov	x0, x19
   253c4:	mov	x19, #0x0                   	// #0
   253c8:	ldr	x1, [x21, #24]
   253cc:	blr	x1
   253d0:	b	253a4 <PyInit__decimal@@Base+0xae24>
   253d4:	nop
   253d8:	adrp	x0, 5f000 <PyInit__decimal@@Base+0x44a80>
   253dc:	ldr	x0, [x0, #1672]
   253e0:	b	25340 <PyInit__decimal@@Base+0xadc0>
   253e4:	nop
   253e8:	stp	x29, x30, [sp, #-32]!
   253ec:	adrp	x1, 5f000 <PyInit__decimal@@Base+0x44a80>
   253f0:	mov	x29, sp
   253f4:	stp	x19, x20, [sp, #16]
   253f8:	mov	x20, x0
   253fc:	ldr	x0, [x1, #1672]
   25400:	bl	25340 <PyInit__decimal@@Base+0xadc0>
   25404:	mov	x19, x0
   25408:	cbz	x0, 2541c <PyInit__decimal@@Base+0xae9c>
   2540c:	mov	x0, x19
   25410:	ldp	x19, x20, [sp, #16]
   25414:	ldp	x29, x30, [sp], #32
   25418:	ret
   2541c:	mov	x0, x20
   25420:	mov	w1, #0x200                 	// #512
   25424:	bl	1d780 <PyInit__decimal@@Base+0x3200>
   25428:	mov	x0, x19
   2542c:	ldp	x19, x20, [sp, #16]
   25430:	ldp	x29, x30, [sp], #32
   25434:	ret
   25438:	stp	x29, x30, [sp, #-48]!
   2543c:	cmp	xzr, x1, lsr #61
   25440:	mov	x29, sp
   25444:	stp	x19, x20, [sp, #16]
   25448:	mov	x19, x0
   2544c:	stp	x21, x22, [sp, #32]
   25450:	mov	x22, x2
   25454:	ldr	x21, [x0, #40]
   25458:	b.ne	254a8 <PyInit__decimal@@Base+0xaf28>  // b.any
   2545c:	lsl	x0, x1, #3
   25460:	mov	x20, x1
   25464:	adrp	x1, 5f000 <PyInit__decimal@@Base+0x44a80>
   25468:	ldr	x1, [x1, #1680]
   2546c:	blr	x1
   25470:	str	x0, [x19, #40]
   25474:	cbz	x0, 254a8 <PyInit__decimal@@Base+0xaf28>
   25478:	ldr	x2, [x19, #32]
   2547c:	mov	x1, x21
   25480:	lsl	x2, x2, #3
   25484:	bl	6470 <memcpy@plt>
   25488:	str	x20, [x19, #32]
   2548c:	mov	x0, x19
   25490:	bl	28700 <PyInit__decimal@@Base+0xe180>
   25494:	mov	w0, #0x1                   	// #1
   25498:	ldp	x19, x20, [sp, #16]
   2549c:	ldp	x21, x22, [sp, #32]
   254a0:	ldp	x29, x30, [sp], #48
   254a4:	ret
   254a8:	str	x21, [x19, #40]
   254ac:	mov	x0, x19
   254b0:	bl	28690 <PyInit__decimal@@Base+0xe110>
   254b4:	mov	x0, x19
   254b8:	bl	286d0 <PyInit__decimal@@Base+0xe150>
   254bc:	ldr	w1, [x22]
   254c0:	mov	w0, #0x0                   	// #0
   254c4:	stp	xzr, xzr, [x19, #8]
   254c8:	orr	w1, w1, #0x200
   254cc:	str	xzr, [x19, #24]
   254d0:	str	w1, [x22]
   254d4:	ldp	x19, x20, [sp, #16]
   254d8:	ldp	x21, x22, [sp, #32]
   254dc:	ldp	x29, x30, [sp], #48
   254e0:	ret
   254e4:	nop
   254e8:	stp	x29, x30, [sp, #-48]!
   254ec:	cmp	xzr, x1, lsr #61
   254f0:	mov	x29, sp
   254f4:	stp	x19, x20, [sp, #16]
   254f8:	mov	x19, x0
   254fc:	stp	x21, x22, [sp, #32]
   25500:	mov	x21, x2
   25504:	ldr	x22, [x0, #40]
   25508:	b.ne	2554c <PyInit__decimal@@Base+0xafcc>  // b.any
   2550c:	adrp	x3, 5f000 <PyInit__decimal@@Base+0x44a80>
   25510:	mov	x20, x1
   25514:	mov	x0, x20
   25518:	mov	x1, #0x8                   	// #8
   2551c:	ldr	x2, [x3, #1688]
   25520:	blr	x2
   25524:	str	x0, [x19, #40]
   25528:	cbz	x0, 2554c <PyInit__decimal@@Base+0xafcc>
   2552c:	str	x20, [x19, #32]
   25530:	mov	x0, x19
   25534:	bl	28700 <PyInit__decimal@@Base+0xe180>
   25538:	mov	w0, #0x1                   	// #1
   2553c:	ldp	x19, x20, [sp, #16]
   25540:	ldp	x21, x22, [sp, #32]
   25544:	ldp	x29, x30, [sp], #48
   25548:	ret
   2554c:	str	x22, [x19, #40]
   25550:	mov	x0, x19
   25554:	bl	28690 <PyInit__decimal@@Base+0xe110>
   25558:	mov	x0, x19
   2555c:	bl	286d0 <PyInit__decimal@@Base+0xe150>
   25560:	ldr	w1, [x21]
   25564:	mov	w0, #0x0                   	// #0
   25568:	stp	xzr, xzr, [x19, #8]
   2556c:	orr	w1, w1, #0x200
   25570:	str	xzr, [x19, #24]
   25574:	str	w1, [x21]
   25578:	ldp	x19, x20, [sp, #16]
   2557c:	ldp	x21, x22, [sp, #32]
   25580:	ldp	x29, x30, [sp], #48
   25584:	ret
   25588:	stp	x29, x30, [sp, #-64]!
   2558c:	cmp	xzr, x1, lsr #61
   25590:	mov	x29, sp
   25594:	stp	x19, x20, [sp, #16]
   25598:	mov	x19, x1
   2559c:	mov	x20, x0
   255a0:	stp	x21, x22, [sp, #32]
   255a4:	mov	x21, x2
   255a8:	str	x2, [sp, #56]
   255ac:	b.ne	255ec <PyInit__decimal@@Base+0xb06c>  // b.any
   255b0:	adrp	x0, 5f000 <PyInit__decimal@@Base+0x44a80>
   255b4:	lsl	x1, x1, #3
   255b8:	ldr	x22, [x20, #40]
   255bc:	ldr	x2, [x0, #1696]
   255c0:	mov	x0, x22
   255c4:	blr	x2
   255c8:	mov	x1, x0
   255cc:	cbz	x0, 255e8 <PyInit__decimal@@Base+0xb068>
   255d0:	mov	w0, #0x1                   	// #1
   255d4:	stp	x19, x1, [x20, #32]
   255d8:	ldp	x19, x20, [sp, #16]
   255dc:	ldp	x21, x22, [sp, #32]
   255e0:	ldp	x29, x30, [sp], #64
   255e4:	ret
   255e8:	str	x22, [x20, #40]
   255ec:	ldr	x1, [x20, #32]
   255f0:	mov	w0, #0x1                   	// #1
   255f4:	cmp	x1, x19
   255f8:	b.ge	255d8 <PyInit__decimal@@Base+0xb058>  // b.tcont
   255fc:	mov	x0, x20
   25600:	bl	28690 <PyInit__decimal@@Base+0xe110>
   25604:	mov	x0, x20
   25608:	bl	286d0 <PyInit__decimal@@Base+0xe150>
   2560c:	ldr	w1, [x21]
   25610:	mov	w0, #0x0                   	// #0
   25614:	stp	xzr, xzr, [x20, #8]
   25618:	orr	w1, w1, #0x200
   2561c:	str	xzr, [x20, #24]
   25620:	str	w1, [x21]
   25624:	ldp	x19, x20, [sp, #16]
   25628:	ldp	x21, x22, [sp, #32]
   2562c:	ldp	x29, x30, [sp], #64
   25630:	ret
   25634:	nop
   25638:	ldr	x3, [x0, #24]
   2563c:	ldr	x4, [x0, #40]
   25640:	add	x1, x4, x3, lsl #3
   25644:	ldur	x1, [x1, #-8]
   25648:	cbz	x1, 256d0 <PyInit__decimal@@Base+0xb150>
   2564c:	cmp	x3, #0x0
   25650:	mov	x2, #0x0                   	// #0
   25654:	b.gt	25668 <PyInit__decimal@@Base+0xb0e8>
   25658:	b	256bc <PyInit__decimal@@Base+0xb13c>
   2565c:	add	x2, x2, #0x1
   25660:	cmp	x3, x2
   25664:	b.eq	256d8 <PyInit__decimal@@Base+0xb158>  // b.none
   25668:	ldr	x1, [x4, x2, lsl #3]
   2566c:	cbz	x1, 2565c <PyInit__decimal@@Base+0xb0dc>
   25670:	mov	x4, #0xcccccccccccccccc    	// #-3689348814741910324
   25674:	add	x3, x2, x2, lsl #2
   25678:	movk	x4, #0xcccd
   2567c:	mov	x5, #0x9999999999999999    	// #-7378697629483820647
   25680:	lsl	x3, x3, #2
   25684:	movk	x5, #0x1999, lsl #48
   25688:	mul	x6, x1, x4
   2568c:	sub	x2, x3, x2
   25690:	ror	x3, x6, #1
   25694:	cmp	x3, x5
   25698:	b.hi	256bc <PyInit__decimal@@Base+0xb13c>  // b.pmore
   2569c:	nop
   256a0:	umulh	x1, x1, x4
   256a4:	add	x2, x2, #0x1
   256a8:	lsr	x1, x1, #3
   256ac:	mul	x3, x1, x4
   256b0:	ror	x3, x3, #1
   256b4:	cmp	x3, x5
   256b8:	b.ls	256a0 <PyInit__decimal@@Base+0xb120>  // b.plast
   256bc:	ldr	x0, [x0, #8]
   256c0:	add	x0, x2, x0
   256c4:	mvn	x0, x0
   256c8:	lsr	x0, x0, #63
   256cc:	ret
   256d0:	mov	w0, #0x1                   	// #1
   256d4:	ret
   256d8:	ldr	x0, [x0, #8]
   256dc:	mov	x2, #0x0                   	// #0
   256e0:	add	x0, x2, x0
   256e4:	mvn	x0, x0
   256e8:	lsr	x0, x0, #63
   256ec:	b	256cc <PyInit__decimal@@Base+0xb14c>
   256f0:	stp	x29, x30, [sp, #-144]!
   256f4:	cmp	x4, #0x10
   256f8:	mov	x29, sp
   256fc:	stp	x23, x24, [sp, #48]
   25700:	mov	x24, x4
   25704:	stp	x25, x26, [sp, #64]
   25708:	mov	x25, x5
   2570c:	b.ls	259b0 <PyInit__decimal@@Base+0xb430>  // b.plast
   25710:	add	x23, x4, #0x1
   25714:	stp	x19, x20, [sp, #16]
   25718:	mov	x19, x3
   2571c:	lsr	x26, x23, #1
   25720:	stp	x21, x22, [sp, #32]
   25724:	mov	x20, x2
   25728:	stp	x27, x28, [sp, #80]
   2572c:	lsl	x28, x26, #3
   25730:	mov	x21, x0
   25734:	mov	x27, x1
   25738:	sub	x24, x4, x26
   2573c:	cmp	x26, x5
   25740:	add	x6, x1, x28
   25744:	add	x22, x0, x28
   25748:	b.cc	257fc <PyInit__decimal@@Base+0xb27c>  // b.lo, b.ul, b.last
   2574c:	cmp	x5, x24
   25750:	b.ls	25974 <PyInit__decimal@@Base+0xb3f4>  // b.plast
   25754:	lsl	x1, x5, #1
   25758:	mov	x4, #0x0                   	// #0
   2575c:	add	x3, x1, #0x1
   25760:	str	xzr, [x19, x4, lsl #3]
   25764:	cmp	x1, x4
   25768:	add	x4, x4, #0x1
   2576c:	b.ne	25760 <PyInit__decimal@@Base+0xb1e0>  // b.any
   25770:	add	x3, x19, x3, lsl #3
   25774:	mov	x2, x6
   25778:	mov	x5, x24
   2577c:	mov	x4, x25
   25780:	mov	x1, x20
   25784:	mov	x0, x19
   25788:	bl	256f0 <PyInit__decimal@@Base+0xb170>
   2578c:	mov	x0, x22
   25790:	add	x2, x25, x24
   25794:	mov	x1, x19
   25798:	bl	1b278 <PyInit__decimal@@Base+0xcf8>
   2579c:	and	x0, x23, #0xfffffffffffffffe
   257a0:	orr	x3, x23, #0x1
   257a4:	mov	x4, #0x0                   	// #0
   257a8:	str	xzr, [x19, x4, lsl #3]
   257ac:	cmp	x0, x4
   257b0:	add	x4, x4, #0x1
   257b4:	b.ne	257a8 <PyInit__decimal@@Base+0xb228>  // b.any
   257b8:	add	x3, x19, x3, lsl #3
   257bc:	mov	x2, x20
   257c0:	mov	x1, x27
   257c4:	mov	x5, x25
   257c8:	mov	x4, x26
   257cc:	mov	x0, x19
   257d0:	bl	256f0 <PyInit__decimal@@Base+0xb170>
   257d4:	add	x2, x26, x25
   257d8:	mov	x1, x19
   257dc:	mov	x0, x21
   257e0:	ldp	x19, x20, [sp, #16]
   257e4:	ldp	x21, x22, [sp, #32]
   257e8:	ldp	x23, x24, [sp, #48]
   257ec:	ldp	x25, x26, [sp, #64]
   257f0:	ldp	x27, x28, [sp, #80]
   257f4:	ldp	x29, x30, [sp], #144
   257f8:	b	1b278 <PyInit__decimal@@Base+0xcf8>
   257fc:	sub	x25, x5, x26
   25800:	mov	x0, x3
   25804:	mov	x2, x28
   25808:	str	x6, [sp, #104]
   2580c:	bl	6470 <memcpy@plt>
   25810:	str	xzr, [x19, x26, lsl #3]
   25814:	ldr	x6, [sp, #104]
   25818:	mov	x2, x24
   2581c:	mov	x0, x19
   25820:	str	x6, [sp, #136]
   25824:	mov	x1, x6
   25828:	bl	1b278 <PyInit__decimal@@Base+0xcf8>
   2582c:	add	x4, x28, #0x8
   25830:	lsl	x3, x26, #4
   25834:	add	x4, x19, x4
   25838:	mov	x2, x28
   2583c:	mov	x0, x4
   25840:	mov	x1, x20
   25844:	str	x3, [sp, #104]
   25848:	bl	6470 <memcpy@plt>
   2584c:	ldr	x3, [sp, #104]
   25850:	add	x7, x20, x28
   25854:	add	x5, x26, #0x1
   25858:	mov	x2, x25
   2585c:	add	x1, x19, x3
   25860:	stp	x5, x7, [sp, #104]
   25864:	stp	x0, x3, [sp, #120]
   25868:	str	xzr, [x1, #8]
   2586c:	mov	x1, x7
   25870:	bl	1b278 <PyInit__decimal@@Base+0xcf8>
   25874:	ldp	x4, x3, [sp, #120]
   25878:	mov	x1, x19
   2587c:	ldr	x5, [sp, #104]
   25880:	mov	x0, x22
   25884:	add	x3, x3, #0x10
   25888:	mov	x2, x4
   2588c:	add	x3, x19, x3
   25890:	mov	x4, x5
   25894:	bl	256f0 <PyInit__decimal@@Base+0xb170>
   25898:	lsl	x1, x24, #1
   2589c:	mov	x4, #0x0                   	// #0
   258a0:	ldr	x7, [sp, #112]
   258a4:	add	x3, x1, #0x1
   258a8:	ldr	x6, [sp, #136]
   258ac:	nop
   258b0:	str	xzr, [x19, x4, lsl #3]
   258b4:	cmp	x1, x4
   258b8:	add	x4, x4, #0x1
   258bc:	b.ne	258b0 <PyInit__decimal@@Base+0xb330>  // b.any
   258c0:	mov	x4, x24
   258c4:	add	x3, x19, x3, lsl #3
   258c8:	mov	x5, x25
   258cc:	mov	x2, x7
   258d0:	mov	x1, x6
   258d4:	add	x25, x25, x24
   258d8:	mov	x0, x19
   258dc:	bl	256f0 <PyInit__decimal@@Base+0xb170>
   258e0:	add	x0, x22, x28
   258e4:	mov	x2, x25
   258e8:	mov	x1, x19
   258ec:	bl	1b278 <PyInit__decimal@@Base+0xcf8>
   258f0:	mov	x2, x25
   258f4:	mov	x1, x19
   258f8:	mov	x0, x22
   258fc:	bl	1b4e0 <PyInit__decimal@@Base+0xf60>
   25900:	and	x24, x23, #0xfffffffffffffffe
   25904:	orr	x3, x23, #0x1
   25908:	mov	x4, #0x0                   	// #0
   2590c:	nop
   25910:	str	xzr, [x19, x4, lsl #3]
   25914:	cmp	x24, x4
   25918:	add	x4, x4, #0x1
   2591c:	b.ne	25910 <PyInit__decimal@@Base+0xb390>  // b.any
   25920:	add	x3, x19, x3, lsl #3
   25924:	mov	x5, x26
   25928:	mov	x4, x26
   2592c:	mov	x2, x20
   25930:	mov	x1, x27
   25934:	mov	x0, x19
   25938:	bl	256f0 <PyInit__decimal@@Base+0xb170>
   2593c:	mov	x2, x24
   25940:	mov	x1, x19
   25944:	mov	x0, x21
   25948:	bl	1b278 <PyInit__decimal@@Base+0xcf8>
   2594c:	mov	x2, x24
   25950:	mov	x1, x19
   25954:	mov	x0, x22
   25958:	ldp	x19, x20, [sp, #16]
   2595c:	ldp	x21, x22, [sp, #32]
   25960:	ldp	x23, x24, [sp, #48]
   25964:	ldp	x25, x26, [sp, #64]
   25968:	ldp	x27, x28, [sp, #80]
   2596c:	ldp	x29, x30, [sp], #144
   25970:	b	1b4e0 <PyInit__decimal@@Base+0xf60>
   25974:	lsl	x1, x24, #1
   25978:	mov	x4, #0x0                   	// #0
   2597c:	add	x3, x1, #0x1
   25980:	str	xzr, [x19, x4, lsl #3]
   25984:	cmp	x1, x4
   25988:	add	x4, x4, #0x1
   2598c:	b.ne	25980 <PyInit__decimal@@Base+0xb400>  // b.any
   25990:	add	x3, x19, x3, lsl #3
   25994:	mov	x1, x6
   25998:	mov	x5, x25
   2599c:	mov	x4, x24
   259a0:	mov	x2, x20
   259a4:	mov	x0, x19
   259a8:	bl	256f0 <PyInit__decimal@@Base+0xb170>
   259ac:	b	2578c <PyInit__decimal@@Base+0xb20c>
   259b0:	mov	x3, x24
   259b4:	mov	x4, x5
   259b8:	ldp	x23, x24, [sp, #48]
   259bc:	ldp	x25, x26, [sp, #64]
   259c0:	ldp	x29, x30, [sp], #144
   259c4:	b	1b610 <PyInit__decimal@@Base+0x1090>
   259c8:	stp	x29, x30, [sp, #-32]!
   259cc:	mov	w3, #0x253                 	// #595
   259d0:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27a80>
   259d4:	mov	x29, sp
   259d8:	str	x19, [sp, #16]
   259dc:	adrp	x19, 5c000 <PyInit__decimal@@Base+0x41a80>
   259e0:	add	x2, x2, #0x198
   259e4:	adrp	x1, 42000 <PyInit__decimal@@Base+0x27a80>
   259e8:	ldr	x19, [x19, #3904]
   259ec:	add	x1, x1, #0x1d8
   259f0:	ldr	x0, [x19]
   259f4:	bl	6a70 <fprintf@plt>
   259f8:	ldr	x3, [x19]
   259fc:	mov	x2, #0x29                  	// #41
   25a00:	mov	x1, #0x1                   	// #1
   25a04:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27a80>
   25a08:	add	x0, x0, #0x7f8
   25a0c:	bl	6930 <fwrite@plt>
   25a10:	ldr	x1, [x19]
   25a14:	mov	w0, #0xa                   	// #10
   25a18:	bl	65b0 <fputc@plt>
   25a1c:	bl	67c0 <abort@plt>
   25a20:	stp	x29, x30, [sp, #-32]!
   25a24:	mov	w3, #0x26c                 	// #620
   25a28:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27a80>
   25a2c:	mov	x29, sp
   25a30:	str	x19, [sp, #16]
   25a34:	adrp	x19, 5c000 <PyInit__decimal@@Base+0x41a80>
   25a38:	add	x2, x2, #0x198
   25a3c:	adrp	x1, 42000 <PyInit__decimal@@Base+0x27a80>
   25a40:	ldr	x19, [x19, #3904]
   25a44:	add	x1, x1, #0x1d8
   25a48:	ldr	x0, [x19]
   25a4c:	bl	6a70 <fprintf@plt>
   25a50:	ldr	x3, [x19]
   25a54:	mov	x2, #0x29                  	// #41
   25a58:	mov	x1, #0x1                   	// #1
   25a5c:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27a80>
   25a60:	add	x0, x0, #0x828
   25a64:	bl	6930 <fwrite@plt>
   25a68:	ldr	x1, [x19]
   25a6c:	mov	w0, #0xa                   	// #10
   25a70:	bl	65b0 <fputc@plt>
   25a74:	bl	67c0 <abort@plt>
   25a78:	stp	x29, x30, [sp, #-32]!
   25a7c:	add	x0, x0, #0x1
   25a80:	mov	x29, sp
   25a84:	str	x19, [sp, #16]
   25a88:	lsr	x0, x0, #1
   25a8c:	add	x0, x0, #0x1
   25a90:	tbnz	x0, #63, 25ac4 <PyInit__decimal@@Base+0xb544>
   25a94:	lsl	x19, x0, #1
   25a98:	cmp	x0, x1
   25a9c:	b.ls	25ab4 <PyInit__decimal@@Base+0xb534>  // b.plast
   25aa0:	bl	25a78 <PyInit__decimal@@Base+0xb4f8>
   25aa4:	mvn	x1, x0
   25aa8:	cmp	x19, x1
   25aac:	b.hi	25ac8 <PyInit__decimal@@Base+0xb548>  // b.pmore
   25ab0:	add	x19, x19, x0
   25ab4:	mov	x0, x19
   25ab8:	ldr	x19, [sp, #16]
   25abc:	ldp	x29, x30, [sp], #32
   25ac0:	ret
   25ac4:	bl	25a20 <PyInit__decimal@@Base+0xb4a0>
   25ac8:	bl	259c8 <PyInit__decimal@@Base+0xb448>
   25acc:	nop
   25ad0:	stp	x29, x30, [sp, #-96]!
   25ad4:	mov	x29, sp
   25ad8:	stp	x19, x20, [sp, #16]
   25adc:	mov	x20, x2
   25ae0:	mvn	x2, x3
   25ae4:	stp	x21, x22, [sp, #32]
   25ae8:	cmp	x20, x2
   25aec:	stp	x23, x24, [sp, #48]
   25af0:	stp	x25, x26, [sp, #64]
   25af4:	b.hi	25ec8 <PyInit__decimal@@Base+0xb948>  // b.pmore
   25af8:	add	x6, x20, x3
   25afc:	str	x6, [x4]
   25b00:	mov	x21, x3
   25b04:	mov	x22, x0
   25b08:	mov	x24, x1
   25b0c:	mov	x23, x4
   25b10:	cmp	xzr, x6, lsr #32
   25b14:	lsr	x5, x6, #32
   25b18:	mov	w19, #0x20                  	// #32
   25b1c:	b.ne	25b28 <PyInit__decimal@@Base+0xb5a8>  // b.any
   25b20:	mov	x5, x6
   25b24:	mov	w19, #0x0                   	// #0
   25b28:	cmp	xzr, x5, lsr #16
   25b2c:	lsr	x0, x5, #16
   25b30:	b.eq	25b3c <PyInit__decimal@@Base+0xb5bc>  // b.none
   25b34:	add	w19, w19, #0x10
   25b38:	mov	x5, x0
   25b3c:	cmp	xzr, x5, lsr #8
   25b40:	lsr	x0, x5, #8
   25b44:	b.eq	25b50 <PyInit__decimal@@Base+0xb5d0>  // b.none
   25b48:	add	w19, w19, #0x8
   25b4c:	mov	x5, x0
   25b50:	cmp	xzr, x5, lsr #4
   25b54:	lsr	x0, x5, #4
   25b58:	b.eq	25b64 <PyInit__decimal@@Base+0xb5e4>  // b.none
   25b5c:	add	w19, w19, #0x4
   25b60:	mov	x5, x0
   25b64:	cmp	xzr, x5, lsr #2
   25b68:	lsr	x0, x5, #2
   25b6c:	b.ne	25d50 <PyInit__decimal@@Base+0xb7d0>  // b.any
   25b70:	sub	w0, w19, #0x1
   25b74:	cmp	xzr, x5, lsr #1
   25b78:	add	w5, w0, w5
   25b7c:	csinc	w19, w5, w19, eq  // eq = none
   25b80:	cmp	x6, #0x400
   25b84:	b.ls	25d70 <PyInit__decimal@@Base+0xb7f0>  // b.plast
   25b88:	mov	x0, #0x100000000           	// #4294967296
   25b8c:	cmp	x6, x0
   25b90:	b.hi	25db8 <PyInit__decimal@@Base+0xb838>  // b.pmore
   25b94:	mov	x0, #0x1                   	// #1
   25b98:	lsl	x19, x0, x19
   25b9c:	cmp	x6, x19
   25ba0:	b.eq	25bb8 <PyInit__decimal@@Base+0xb638>  // b.none
   25ba4:	lsr	x0, x19, #1
   25ba8:	add	x19, x19, x0
   25bac:	cmp	x6, x19
   25bb0:	b.ls	25dd4 <PyInit__decimal@@Base+0xb854>  // b.plast
   25bb4:	add	x19, x19, x0
   25bb8:	mov	x0, x19
   25bbc:	mov	x1, #0x8                   	// #8
   25bc0:	bl	25288 <PyInit__decimal@@Base+0xad08>
   25bc4:	mov	x25, x0
   25bc8:	cbz	x0, 25d98 <PyInit__decimal@@Base+0xb818>
   25bcc:	mov	x0, x19
   25bd0:	mov	x1, #0x8                   	// #8
   25bd4:	bl	25288 <PyInit__decimal@@Base+0xad08>
   25bd8:	mov	x26, x0
   25bdc:	cbz	x0, 25e5c <PyInit__decimal@@Base+0xb8dc>
   25be0:	mov	x0, x19
   25be4:	mov	x1, #0x8                   	// #8
   25be8:	stp	x27, x28, [sp, #80]
   25bec:	bl	25288 <PyInit__decimal@@Base+0xad08>
   25bf0:	mov	x27, x0
   25bf4:	cbz	x0, 25ed0 <PyInit__decimal@@Base+0xb950>
   25bf8:	lsl	x20, x20, #3
   25bfc:	mov	x1, x22
   25c00:	mov	x2, x20
   25c04:	mov	x0, x25
   25c08:	bl	6470 <memcpy@plt>
   25c0c:	mov	x2, x20
   25c10:	mov	x1, x22
   25c14:	mov	x0, x26
   25c18:	bl	6470 <memcpy@plt>
   25c1c:	mov	x2, x20
   25c20:	mov	x1, x22
   25c24:	mov	x0, x27
   25c28:	bl	6470 <memcpy@plt>
   25c2c:	cmp	x22, x24
   25c30:	b.eq	25e10 <PyInit__decimal@@Base+0xb890>  // b.none
   25c34:	mov	x0, x19
   25c38:	mov	x1, #0x8                   	// #8
   25c3c:	bl	25288 <PyInit__decimal@@Base+0xad08>
   25c40:	mov	x22, x0
   25c44:	cbz	x0, 25e54 <PyInit__decimal@@Base+0xb8d4>
   25c48:	lsl	x28, x21, #3
   25c4c:	mov	x1, x24
   25c50:	mov	x2, x28
   25c54:	bl	6470 <memcpy@plt>
   25c58:	mov	x2, x19
   25c5c:	mov	x1, x22
   25c60:	mov	x0, x25
   25c64:	mov	w3, #0x0                   	// #0
   25c68:	bl	1d7b0 <PyInit__decimal@@Base+0x3230>
   25c6c:	cbz	w0, 25de0 <PyInit__decimal@@Base+0xb860>
   25c70:	mov	x2, x28
   25c74:	mov	x1, x24
   25c78:	mov	x0, x22
   25c7c:	bl	6470 <memcpy@plt>
   25c80:	cmp	x19, x21
   25c84:	b.eq	25e8c <PyInit__decimal@@Base+0xb90c>  // b.none
   25c88:	add	x20, x22, x28
   25c8c:	add	x21, x22, x19, lsl #3
   25c90:	mov	x1, x20
   25c94:	nop
   25c98:	str	xzr, [x1], #8
   25c9c:	cmp	x21, x1
   25ca0:	b.ne	25c98 <PyInit__decimal@@Base+0xb718>  // b.any
   25ca4:	mov	x2, x19
   25ca8:	mov	x1, x22
   25cac:	mov	x0, x26
   25cb0:	mov	w3, #0x1                   	// #1
   25cb4:	bl	1d7b0 <PyInit__decimal@@Base+0x3230>
   25cb8:	cbz	w0, 25de0 <PyInit__decimal@@Base+0xb860>
   25cbc:	mov	x2, x28
   25cc0:	mov	x1, x24
   25cc4:	mov	x0, x22
   25cc8:	bl	6470 <memcpy@plt>
   25ccc:	nop
   25cd0:	str	xzr, [x20], #8
   25cd4:	cmp	x20, x21
   25cd8:	b.ne	25cd0 <PyInit__decimal@@Base+0xb750>  // b.any
   25cdc:	mov	x2, x19
   25ce0:	mov	x1, x22
   25ce4:	mov	x0, x27
   25ce8:	mov	w3, #0x2                   	// #2
   25cec:	adrp	x19, 5f000 <PyInit__decimal@@Base+0x44a80>
   25cf0:	bl	1d7b0 <PyInit__decimal@@Base+0x3230>
   25cf4:	cbz	w0, 25eb8 <PyInit__decimal@@Base+0xb938>
   25cf8:	ldr	x1, [x19, #1704]
   25cfc:	mov	x0, x22
   25d00:	blr	x1
   25d04:	ldr	x3, [x23]
   25d08:	mov	x1, x26
   25d0c:	mov	x0, x25
   25d10:	mov	x2, x27
   25d14:	bl	1ec50 <PyInit__decimal@@Base+0x46d0>
   25d18:	ldr	x1, [x19, #1704]
   25d1c:	mov	x0, x26
   25d20:	blr	x1
   25d24:	ldr	x1, [x19, #1704]
   25d28:	mov	x0, x27
   25d2c:	blr	x1
   25d30:	mov	x0, x25
   25d34:	ldp	x19, x20, [sp, #16]
   25d38:	ldp	x21, x22, [sp, #32]
   25d3c:	ldp	x23, x24, [sp, #48]
   25d40:	ldp	x25, x26, [sp, #64]
   25d44:	ldp	x27, x28, [sp, #80]
   25d48:	ldp	x29, x30, [sp], #96
   25d4c:	ret
   25d50:	mov	x5, x0
   25d54:	add	w19, w19, #0x2
   25d58:	sub	w0, w19, #0x1
   25d5c:	cmp	xzr, x5, lsr #1
   25d60:	add	w5, w0, w5
   25d64:	csinc	w19, w5, w19, eq  // eq = none
   25d68:	cmp	x6, #0x400
   25d6c:	b.hi	25b88 <PyInit__decimal@@Base+0xb608>  // b.pmore
   25d70:	mov	x0, #0x1                   	// #1
   25d74:	mov	x1, #0x8                   	// #8
   25d78:	lsl	x19, x0, x19
   25d7c:	cmp	x6, x19
   25d80:	lsl	x0, x19, #1
   25d84:	csel	x19, x0, x19, ne  // ne = any
   25d88:	mov	x0, x19
   25d8c:	bl	25288 <PyInit__decimal@@Base+0xad08>
   25d90:	mov	x25, x0
   25d94:	cbnz	x0, 25bcc <PyInit__decimal@@Base+0xb64c>
   25d98:	mov	x25, #0x0                   	// #0
   25d9c:	mov	x0, x25
   25da0:	ldp	x19, x20, [sp, #16]
   25da4:	ldp	x21, x22, [sp, #32]
   25da8:	ldp	x23, x24, [sp, #48]
   25dac:	ldp	x25, x26, [sp, #64]
   25db0:	ldp	x29, x30, [sp], #96
   25db4:	ret
   25db8:	mov	x19, #0x180000000           	// #6442450944
   25dbc:	cmp	x6, x19
   25dc0:	b.ls	25bb8 <PyInit__decimal@@Base+0xb638>  // b.plast
   25dc4:	mov	x19, #0x300000000           	// #12884901888
   25dc8:	cmp	x6, x19
   25dcc:	b.ls	25bb8 <PyInit__decimal@@Base+0xb638>  // b.plast
   25dd0:	b	25d98 <PyInit__decimal@@Base+0xb818>
   25dd4:	cmn	x19, #0x1
   25dd8:	b.ne	25bb8 <PyInit__decimal@@Base+0xb638>  // b.any
   25ddc:	b	25d98 <PyInit__decimal@@Base+0xb818>
   25de0:	adrp	x19, 5f000 <PyInit__decimal@@Base+0x44a80>
   25de4:	mov	x0, x22
   25de8:	ldr	x1, [x19, #1704]
   25dec:	blr	x1
   25df0:	ldr	x1, [x19, #1704]
   25df4:	mov	x0, x25
   25df8:	mov	x25, #0x0                   	// #0
   25dfc:	blr	x1
   25e00:	ldr	x1, [x19, #1704]
   25e04:	mov	x0, x26
   25e08:	blr	x1
   25e0c:	b	25d24 <PyInit__decimal@@Base+0xb7a4>
   25e10:	mov	x1, x19
   25e14:	mov	x0, x25
   25e18:	mov	w2, #0x0                   	// #0
   25e1c:	bl	1e200 <PyInit__decimal@@Base+0x3c80>
   25e20:	cbz	w0, 25e54 <PyInit__decimal@@Base+0xb8d4>
   25e24:	mov	x1, x19
   25e28:	mov	x0, x26
   25e2c:	mov	w2, #0x1                   	// #1
   25e30:	bl	1e200 <PyInit__decimal@@Base+0x3c80>
   25e34:	cbz	w0, 25e54 <PyInit__decimal@@Base+0xb8d4>
   25e38:	mov	x1, x19
   25e3c:	mov	x0, x27
   25e40:	mov	w2, #0x2                   	// #2
   25e44:	adrp	x19, 5f000 <PyInit__decimal@@Base+0x44a80>
   25e48:	bl	1e200 <PyInit__decimal@@Base+0x3c80>
   25e4c:	cbnz	w0, 25d04 <PyInit__decimal@@Base+0xb784>
   25e50:	b	25df0 <PyInit__decimal@@Base+0xb870>
   25e54:	adrp	x19, 5f000 <PyInit__decimal@@Base+0x44a80>
   25e58:	b	25df0 <PyInit__decimal@@Base+0xb870>
   25e5c:	adrp	x1, 5f000 <PyInit__decimal@@Base+0x44a80>
   25e60:	mov	x0, x25
   25e64:	mov	x25, #0x0                   	// #0
   25e68:	ldr	x1, [x1, #1704]
   25e6c:	blr	x1
   25e70:	mov	x0, x25
   25e74:	ldp	x19, x20, [sp, #16]
   25e78:	ldp	x21, x22, [sp, #32]
   25e7c:	ldp	x23, x24, [sp, #48]
   25e80:	ldp	x25, x26, [sp, #64]
   25e84:	ldp	x29, x30, [sp], #96
   25e88:	ret
   25e8c:	mov	x2, x19
   25e90:	mov	x1, x22
   25e94:	mov	x0, x26
   25e98:	mov	w3, #0x1                   	// #1
   25e9c:	bl	1d7b0 <PyInit__decimal@@Base+0x3230>
   25ea0:	cbz	w0, 25de0 <PyInit__decimal@@Base+0xb860>
   25ea4:	mov	x2, x28
   25ea8:	mov	x1, x24
   25eac:	mov	x0, x22
   25eb0:	bl	6470 <memcpy@plt>
   25eb4:	b	25cdc <PyInit__decimal@@Base+0xb75c>
   25eb8:	ldr	x1, [x19, #1704]
   25ebc:	mov	x0, x22
   25ec0:	blr	x1
   25ec4:	b	25df0 <PyInit__decimal@@Base+0xb870>
   25ec8:	stp	x27, x28, [sp, #80]
   25ecc:	bl	259c8 <PyInit__decimal@@Base+0xb448>
   25ed0:	adrp	x19, 5f000 <PyInit__decimal@@Base+0x44a80>
   25ed4:	mov	x0, x25
   25ed8:	mov	x25, #0x0                   	// #0
   25edc:	ldr	x1, [x19, #1704]
   25ee0:	blr	x1
   25ee4:	ldr	x1, [x19, #1704]
   25ee8:	mov	x0, x26
   25eec:	blr	x1
   25ef0:	ldp	x27, x28, [sp, #80]
   25ef4:	b	25d9c <PyInit__decimal@@Base+0xb81c>
   25ef8:	stp	x29, x30, [sp, #-160]!
   25efc:	mov	x29, sp
   25f00:	stp	x19, x20, [sp, #16]
   25f04:	mov	x19, x3
   25f08:	mov	x20, x4
   25f0c:	stp	x21, x22, [sp, #32]
   25f10:	mov	x3, #0x180000000           	// #6442450944
   25f14:	mov	x21, x5
   25f18:	stp	x25, x26, [sp, #64]
   25f1c:	mov	x22, x0
   25f20:	mov	x25, x2
   25f24:	cmp	x4, x3
   25f28:	mov	x26, x1
   25f2c:	b.hi	25f98 <PyInit__decimal@@Base+0xba18>  // b.pmore
   25f30:	cmp	x5, #0xc0
   25f34:	b.ls	26070 <PyInit__decimal@@Base+0xbaf0>  // b.plast
   25f38:	mov	x1, x2
   25f3c:	mov	x0, x26
   25f40:	add	x4, sp, #0x98
   25f44:	mov	x3, x5
   25f48:	mov	x2, x20
   25f4c:	bl	25ad0 <PyInit__decimal@@Base+0xb550>
   25f50:	mov	x19, x0
   25f54:	mov	w0, #0x0                   	// #0
   25f58:	cbz	x19, 25f84 <PyInit__decimal@@Base+0xba04>
   25f5c:	add	x2, x20, x21
   25f60:	mov	x1, x19
   25f64:	mov	x0, x22
   25f68:	lsl	x2, x2, #3
   25f6c:	bl	6470 <memcpy@plt>
   25f70:	adrp	x1, 5f000 <PyInit__decimal@@Base+0x44a80>
   25f74:	mov	x0, x19
   25f78:	ldr	x1, [x1, #1704]
   25f7c:	blr	x1
   25f80:	mov	w0, #0x1                   	// #1
   25f84:	ldp	x19, x20, [sp, #16]
   25f88:	ldp	x21, x22, [sp, #32]
   25f8c:	ldp	x25, x26, [sp, #64]
   25f90:	ldp	x29, x30, [sp], #160
   25f94:	ret
   25f98:	stp	x23, x24, [sp, #48]
   25f9c:	add	x23, x4, #0x1
   25fa0:	stp	x27, x28, [sp, #80]
   25fa4:	lsr	x27, x23, #1
   25fa8:	sub	x20, x4, x27
   25fac:	lsl	x24, x27, #3
   25fb0:	cmp	x27, x5
   25fb4:	add	x6, x1, x24
   25fb8:	b.cc	260dc <PyInit__decimal@@Base+0xbb5c>  // b.lo, b.ul, b.last
   25fbc:	cmp	x5, x20
   25fc0:	b.ls	26098 <PyInit__decimal@@Base+0xbb18>  // b.plast
   25fc4:	lsl	x1, x5, #1
   25fc8:	mov	x4, #0x0                   	// #0
   25fcc:	add	x3, x1, #0x1
   25fd0:	str	xzr, [x19, x4, lsl #3]
   25fd4:	cmp	x1, x4
   25fd8:	add	x4, x4, #0x1
   25fdc:	b.ne	25fd0 <PyInit__decimal@@Base+0xba50>  // b.any
   25fe0:	add	x3, x19, x3, lsl #3
   25fe4:	mov	x2, x6
   25fe8:	mov	x5, x20
   25fec:	mov	x4, x21
   25ff0:	mov	x1, x25
   25ff4:	mov	x0, x19
   25ff8:	bl	25ef8 <PyInit__decimal@@Base+0xb978>
   25ffc:	cbz	w0, 26050 <PyInit__decimal@@Base+0xbad0>
   26000:	add	x2, x21, x20
   26004:	add	x0, x22, x24
   26008:	mov	x1, x19
   2600c:	bl	1b278 <PyInit__decimal@@Base+0xcf8>
   26010:	and	x5, x23, #0xfffffffffffffffe
   26014:	orr	x3, x23, #0x1
   26018:	mov	x4, #0x0                   	// #0
   2601c:	nop
   26020:	str	xzr, [x19, x4, lsl #3]
   26024:	cmp	x5, x4
   26028:	add	x4, x4, #0x1
   2602c:	b.ne	26020 <PyInit__decimal@@Base+0xbaa0>  // b.any
   26030:	add	x3, x19, x3, lsl #3
   26034:	mov	x2, x25
   26038:	mov	x1, x26
   2603c:	mov	x5, x21
   26040:	mov	x4, x27
   26044:	mov	x0, x19
   26048:	bl	25ef8 <PyInit__decimal@@Base+0xb978>
   2604c:	cbnz	w0, 26250 <PyInit__decimal@@Base+0xbcd0>
   26050:	mov	w0, #0x0                   	// #0
   26054:	ldp	x19, x20, [sp, #16]
   26058:	ldp	x21, x22, [sp, #32]
   2605c:	ldp	x23, x24, [sp, #48]
   26060:	ldp	x25, x26, [sp, #64]
   26064:	ldp	x27, x28, [sp, #80]
   26068:	ldp	x29, x30, [sp], #160
   2606c:	ret
   26070:	mov	x2, x1
   26074:	mov	x3, x5
   26078:	mov	x1, x25
   2607c:	bl	1b610 <PyInit__decimal@@Base+0x1090>
   26080:	mov	w0, #0x1                   	// #1
   26084:	ldp	x19, x20, [sp, #16]
   26088:	ldp	x21, x22, [sp, #32]
   2608c:	ldp	x25, x26, [sp, #64]
   26090:	ldp	x29, x30, [sp], #160
   26094:	ret
   26098:	lsl	x1, x20, #1
   2609c:	mov	x4, #0x0                   	// #0
   260a0:	add	x3, x1, #0x1
   260a4:	nop
   260a8:	str	xzr, [x19, x4, lsl #3]
   260ac:	cmp	x1, x4
   260b0:	add	x4, x4, #0x1
   260b4:	b.ne	260a8 <PyInit__decimal@@Base+0xbb28>  // b.any
   260b8:	add	x3, x19, x3, lsl #3
   260bc:	mov	x1, x6
   260c0:	mov	x5, x21
   260c4:	mov	x4, x20
   260c8:	mov	x2, x25
   260cc:	mov	x0, x19
   260d0:	bl	25ef8 <PyInit__decimal@@Base+0xb978>
   260d4:	cbnz	w0, 26000 <PyInit__decimal@@Base+0xba80>
   260d8:	b	26050 <PyInit__decimal@@Base+0xbad0>
   260dc:	sub	x21, x5, x27
   260e0:	mov	x2, x24
   260e4:	mov	x0, x19
   260e8:	str	x6, [sp, #104]
   260ec:	bl	6470 <memcpy@plt>
   260f0:	str	xzr, [x19, x27, lsl #3]
   260f4:	ldr	x6, [sp, #104]
   260f8:	mov	x2, x20
   260fc:	mov	x0, x19
   26100:	str	x6, [sp, #136]
   26104:	mov	x1, x6
   26108:	lsl	x28, x27, #4
   2610c:	bl	1b278 <PyInit__decimal@@Base+0xcf8>
   26110:	add	x4, x24, #0x8
   26114:	mov	x2, x24
   26118:	add	x4, x19, x4
   2611c:	mov	x1, x25
   26120:	mov	x0, x4
   26124:	bl	6470 <memcpy@plt>
   26128:	add	x1, x19, x28
   2612c:	mov	x3, x28
   26130:	add	x8, x25, x24
   26134:	add	x5, x27, #0x1
   26138:	mov	x2, x21
   2613c:	stp	x5, x0, [sp, #104]
   26140:	add	x28, x22, x24
   26144:	str	xzr, [x1, #8]
   26148:	mov	x1, x8
   2614c:	stp	x3, x8, [sp, #120]
   26150:	bl	1b278 <PyInit__decimal@@Base+0xcf8>
   26154:	ldp	x5, x4, [sp, #104]
   26158:	mov	x0, x28
   2615c:	ldr	x3, [sp, #120]
   26160:	mov	x1, x19
   26164:	add	x3, x3, #0x10
   26168:	mov	x2, x4
   2616c:	add	x3, x19, x3
   26170:	mov	x4, x5
   26174:	bl	25ef8 <PyInit__decimal@@Base+0xb978>
   26178:	cbz	w0, 26050 <PyInit__decimal@@Base+0xbad0>
   2617c:	ldp	x8, x6, [sp, #128]
   26180:	lsl	x2, x20, #1
   26184:	add	x3, x2, #0x1
   26188:	mov	x0, #0x0                   	// #0
   2618c:	nop
   26190:	str	xzr, [x19, x0, lsl #3]
   26194:	cmp	x2, x0
   26198:	add	x0, x0, #0x1
   2619c:	b.ne	26190 <PyInit__decimal@@Base+0xbc10>  // b.any
   261a0:	add	x3, x19, x3, lsl #3
   261a4:	mov	x2, x8
   261a8:	mov	x1, x6
   261ac:	mov	x5, x21
   261b0:	mov	x4, x20
   261b4:	mov	x0, x19
   261b8:	bl	25ef8 <PyInit__decimal@@Base+0xb978>
   261bc:	cbz	w0, 26050 <PyInit__decimal@@Base+0xbad0>
   261c0:	add	x20, x21, x20
   261c4:	add	x0, x28, x24
   261c8:	mov	x2, x20
   261cc:	mov	x1, x19
   261d0:	bl	1b278 <PyInit__decimal@@Base+0xcf8>
   261d4:	and	x21, x23, #0xfffffffffffffffe
   261d8:	mov	x0, x28
   261dc:	mov	x2, x20
   261e0:	mov	x1, x19
   261e4:	bl	1b4e0 <PyInit__decimal@@Base+0xf60>
   261e8:	orr	x3, x23, #0x1
   261ec:	mov	x0, #0x0                   	// #0
   261f0:	str	xzr, [x19, x0, lsl #3]
   261f4:	cmp	x21, x0
   261f8:	add	x0, x0, #0x1
   261fc:	b.ne	261f0 <PyInit__decimal@@Base+0xbc70>  // b.any
   26200:	add	x3, x19, x3, lsl #3
   26204:	mov	x2, x25
   26208:	mov	x1, x26
   2620c:	mov	x5, x27
   26210:	mov	x4, x27
   26214:	mov	x0, x19
   26218:	bl	25ef8 <PyInit__decimal@@Base+0xb978>
   2621c:	cbz	w0, 26050 <PyInit__decimal@@Base+0xbad0>
   26220:	mov	x0, x22
   26224:	mov	x2, x21
   26228:	mov	x1, x19
   2622c:	bl	1b278 <PyInit__decimal@@Base+0xcf8>
   26230:	mov	x0, x28
   26234:	mov	x2, x21
   26238:	mov	x1, x19
   2623c:	bl	1b4e0 <PyInit__decimal@@Base+0xf60>
   26240:	mov	w0, #0x1                   	// #1
   26244:	ldp	x23, x24, [sp, #48]
   26248:	ldp	x27, x28, [sp, #80]
   2624c:	b	25f84 <PyInit__decimal@@Base+0xba04>
   26250:	add	x2, x27, x21
   26254:	mov	x0, x22
   26258:	mov	x1, x19
   2625c:	bl	1b278 <PyInit__decimal@@Base+0xcf8>
   26260:	mov	w0, #0x1                   	// #1
   26264:	ldp	x23, x24, [sp, #48]
   26268:	ldp	x27, x28, [sp, #80]
   2626c:	b	25f84 <PyInit__decimal@@Base+0xba04>
   26270:	mov	x5, #0x435f                	// #17247
   26274:	movk	x5, #0xd79, lsl #16
   26278:	movk	x5, #0x35e5, lsl #32
   2627c:	movk	x5, #0xd794, lsl #48
   26280:	umulh	x5, x4, x5
   26284:	lsr	x5, x5, #4
   26288:	add	x6, x5, x5, lsl #2
   2628c:	add	x7, x0, x5, lsl #3
   26290:	lsl	x6, x6, #2
   26294:	sub	x6, x6, x5
   26298:	subs	x8, x4, x6
   2629c:	b.eq	262b4 <PyInit__decimal@@Base+0xbd34>  // b.none
   262a0:	b	262e0 <PyInit__decimal@@Base+0xbd60>
   262a4:	ldr	x4, [x7, x3, lsl #3]
   262a8:	ldr	x2, [x1, x3, lsl #3]
   262ac:	cmp	x4, x2
   262b0:	b.ne	262d4 <PyInit__decimal@@Base+0xbd54>  // b.any
   262b4:	sub	x3, x3, #0x1
   262b8:	cmn	x3, #0x1
   262bc:	b.ne	262a4 <PyInit__decimal@@Base+0xbd24>  // b.any
   262c0:	b	26554 <PyInit__decimal@@Base+0xbfd4>
   262c4:	ldr	x1, [x0, x5, lsl #3]
   262c8:	mul	x10, x9, x4
   262cc:	cmp	x1, x10
   262d0:	b.eq	26554 <PyInit__decimal@@Base+0xbfd4>  // b.none
   262d4:	mov	w0, #0xffffffff            	// #-1
   262d8:	cneg	w0, w0, cs  // cs = hs, nlast
   262dc:	ret
   262e0:	sub	x4, x3, #0x1
   262e4:	mov	x6, #0x13                  	// #19
   262e8:	sub	x6, x6, x8
   262ec:	sub	x10, x2, #0x1
   262f0:	cmp	x6, #0x9
   262f4:	ldr	x4, [x1, x4, lsl #3]
   262f8:	b.hi	26568 <PyInit__decimal@@Base+0xbfe8>  // b.pmore
   262fc:	cmp	x6, #0x4
   26300:	b.hi	26818 <PyInit__decimal@@Base+0xc298>  // b.pmore
   26304:	cmp	x6, #0x3
   26308:	b.eq	26a74 <PyInit__decimal@@Base+0xc4f4>  // b.none
   2630c:	cmp	x6, #0x4
   26310:	b.eq	26a50 <PyInit__decimal@@Base+0xc4d0>  // b.none
   26314:	cmp	x6, #0x2
   26318:	b.eq	26ad0 <PyInit__decimal@@Base+0xc550>  // b.none
   2631c:	mov	x7, #0xcccccccccccccccc    	// #-3689348814741910324
   26320:	movk	x7, #0xcccd
   26324:	umulh	x7, x4, x7
   26328:	lsr	x7, x7, #3
   2632c:	add	x9, x7, x7, lsl #2
   26330:	sub	x4, x4, x9, lsl #1
   26334:	nop
   26338:	cbz	x7, 2634c <PyInit__decimal@@Base+0xbdcc>
   2633c:	ldr	x9, [x0, x10, lsl #3]
   26340:	cmp	x9, x7
   26344:	b.ne	262d4 <PyInit__decimal@@Base+0xbd54>  // b.any
   26348:	sub	x10, x2, #0x2
   2634c:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27a80>
   26350:	add	x2, x2, #0x2d0
   26354:	cmp	x3, #0x1
   26358:	sub	x7, x3, #0x2
   2635c:	ldr	x9, [x2, x8, lsl #3]
   26360:	b.eq	262c4 <PyInit__decimal@@Base+0xbd44>  // b.none
   26364:	stp	x29, x30, [sp, #-96]!
   26368:	neg	x3, x3, lsl #3
   2636c:	mov	x30, #0xd5bf                	// #54719
   26370:	mov	x29, sp
   26374:	mov	x18, #0xcefd                	// #52989
   26378:	mov	x17, #0x5a53                	// #23123
   2637c:	mov	x16, #0x34db                	// #13531
   26380:	mov	x15, #0x42bd                	// #17085
   26384:	mov	x14, #0x7843                	// #30787
   26388:	mov	x13, #0xf7cf                	// #63439
   2638c:	mov	x12, #0x594b                	// #22859
   26390:	mov	x11, #0xf5c3                	// #62915
   26394:	stp	x19, x20, [sp, #16]
   26398:	mov	x20, #0x2233                	// #8755
   2639c:	add	x3, x3, x10, lsl #3
   263a0:	stp	x21, x22, [sp, #32]
   263a4:	mov	x22, #0xaaff                	// #43775
   263a8:	movk	x22, #0xcb24, lsl #16
   263ac:	stp	x23, x24, [sp, #48]
   263b0:	mov	x24, #0xcd81                	// #52609
   263b4:	movk	x24, #0x5095, lsl #16
   263b8:	stp	x25, x26, [sp, #64]
   263bc:	mov	x26, #0x385                 	// #901
   263c0:	movk	x26, #0x92ed, lsl #16
   263c4:	mov	x25, #0xa000                	// #40960
   263c8:	mov	x23, #0x4000                	// #16384
   263cc:	mov	x21, #0xe800                	// #59392
   263d0:	movk	x20, #0x5bd4, lsl #16
   263d4:	mov	x19, #0x1000                	// #4096
   263d8:	movk	x30, #0xbded, lsl #16
   263dc:	movk	x18, #0x8461, lsl #16
   263e0:	movk	x17, #0xa09b, lsl #16
   263e4:	movk	x16, #0xd7b6, lsl #16
   263e8:	movk	x15, #0xe57a, lsl #16
   263ec:	movk	x14, #0x71b4, lsl #16
   263f0:	movk	x13, #0xe353, lsl #16
   263f4:	movk	x12, #0x3886, lsl #16
   263f8:	movk	x11, #0x5c28, lsl #16
   263fc:	stp	x27, x28, [sp, #80]
   26400:	mov	x28, #0x1b53                	// #6995
   26404:	mov	x27, #0x5d8a0000            	// #1569325056
   26408:	add	x8, x3, #0x10
   2640c:	movk	x28, #0xd519, lsl #16
   26410:	movk	x27, #0x4578, lsl #32
   26414:	movk	x26, #0x84d0, lsl #32
   26418:	movk	x25, #0x4e72, lsl #16
   2641c:	movk	x24, #0x4dc3, lsl #32
   26420:	movk	x23, #0x107a, lsl #16
   26424:	movk	x22, #0xff0b, lsl #32
   26428:	movk	x21, #0x4876, lsl #16
   2642c:	movk	x20, #0x3302, lsl #32
   26430:	movk	x19, #0xd4a5, lsl #16
   26434:	movk	x30, #0xfece, lsl #32
   26438:	movk	x18, #0x7711, lsl #32
   2643c:	movk	x17, #0xb82f, lsl #32
   26440:	movk	x16, #0xde82, lsl #32
   26444:	movk	x15, #0x94d5, lsl #32
   26448:	movk	x14, #0x5ac4, lsl #32
   2644c:	movk	x13, #0x9ba5, lsl #32
   26450:	movk	x12, #0xc5d6, lsl #32
   26454:	movk	x11, #0xc28f, lsl #32
   26458:	add	x8, x0, x8
   2645c:	movk	x28, #0x5c3b, lsl #32
   26460:	movk	x27, #0x163, lsl #48
   26464:	movk	x26, #0x384b, lsl #48
   26468:	movk	x25, #0x918, lsl #32
   2646c:	movk	x24, #0xb42, lsl #48
   26470:	movk	x23, #0x5af3, lsl #32
   26474:	movk	x22, #0xafeb, lsl #48
   26478:	movk	x21, #0x17, lsl #32
   2647c:	movk	x20, #0x232f, lsl #48
   26480:	movk	x19, #0xe8, lsl #32
   26484:	movk	x30, #0xdbe6, lsl #48
   26488:	movk	x18, #0xabcc, lsl #48
   2648c:	movk	x17, #0x44, lsl #48
   26490:	movk	x16, #0x431b, lsl #48
   26494:	movk	x15, #0xd6bf, lsl #48
   26498:	movk	x14, #0xa7c, lsl #48
   2649c:	movk	x13, #0x20c4, lsl #48
   264a0:	movk	x12, #0x346d, lsl #48
   264a4:	movk	x11, #0x28f5, lsl #48
   264a8:	b	26508 <PyInit__decimal@@Base+0xbf88>
   264ac:	cmp	x6, #0x4
   264b0:	b.hi	265bc <PyInit__decimal@@Base+0xc03c>  // b.pmore
   264b4:	cmp	x6, #0x3
   264b8:	b.eq	26728 <PyInit__decimal@@Base+0xc1a8>  // b.none
   264bc:	cmp	x6, #0x4
   264c0:	b.eq	26714 <PyInit__decimal@@Base+0xc194>  // b.none
   264c4:	cmp	x6, #0x2
   264c8:	b.eq	266f8 <PyInit__decimal@@Base+0xc178>  // b.none
   264cc:	mov	x2, #0xcccccccccccccccc    	// #-3689348814741910324
   264d0:	movk	x2, #0xcccd
   264d4:	umulh	x2, x3, x2
   264d8:	lsr	x2, x2, #3
   264dc:	add	x10, x2, x2, lsl #2
   264e0:	sub	x3, x3, x10, lsl #1
   264e4:	nop
   264e8:	ldr	x10, [x8, x7, lsl #3]
   264ec:	madd	x2, x9, x4, x2
   264f0:	cmp	x10, x2
   264f4:	b.ne	26650 <PyInit__decimal@@Base+0xc0d0>  // b.any
   264f8:	sub	x7, x7, #0x1
   264fc:	cmn	x7, #0x1
   26500:	b.eq	26640 <PyInit__decimal@@Base+0xc0c0>  // b.none
   26504:	mov	x4, x3
   26508:	cmp	x6, #0x9
   2650c:	ldr	x3, [x1, x7, lsl #3]
   26510:	b.ls	264ac <PyInit__decimal@@Base+0xbf2c>  // b.plast
   26514:	cmp	x6, #0xe
   26518:	b.hi	265f4 <PyInit__decimal@@Base+0xc074>  // b.pmore
   2651c:	cmp	x6, #0xd
   26520:	b.eq	266c8 <PyInit__decimal@@Base+0xc148>  // b.none
   26524:	cmp	x6, #0xe
   26528:	b.eq	266e8 <PyInit__decimal@@Base+0xc168>  // b.none
   2652c:	cmp	x6, #0xb
   26530:	b.eq	266d8 <PyInit__decimal@@Base+0xc158>  // b.none
   26534:	cmp	x6, #0xc
   26538:	b.ne	26748 <PyInit__decimal@@Base+0xc1c8>  // b.any
   2653c:	umulh	x2, x3, x20
   26540:	lsr	x2, x2, #37
   26544:	msub	x3, x2, x19, x3
   26548:	b	264e8 <PyInit__decimal@@Base+0xbf68>
   2654c:	ldr	x1, [x0, x5, lsl #3]
   26550:	cbnz	x1, 26b28 <PyInit__decimal@@Base+0xc5a8>
   26554:	sub	x5, x5, #0x1
   26558:	cmn	x5, #0x1
   2655c:	b.ne	2654c <PyInit__decimal@@Base+0xbfcc>  // b.any
   26560:	mov	w0, #0x0                   	// #0
   26564:	ret
   26568:	cmp	x6, #0xe
   2656c:	b.hi	267cc <PyInit__decimal@@Base+0xc24c>  // b.pmore
   26570:	cmp	x6, #0xd
   26574:	b.eq	269d0 <PyInit__decimal@@Base+0xc450>  // b.none
   26578:	cmp	x6, #0xe
   2657c:	b.eq	26978 <PyInit__decimal@@Base+0xc3f8>  // b.none
   26580:	cmp	x6, #0xb
   26584:	b.eq	268cc <PyInit__decimal@@Base+0xc34c>  // b.none
   26588:	cmp	x6, #0xc
   2658c:	b.ne	26aa4 <PyInit__decimal@@Base+0xc524>  // b.any
   26590:	mov	x7, #0x2233                	// #8755
   26594:	mov	x9, #0x1000                	// #4096
   26598:	movk	x7, #0x5bd4, lsl #16
   2659c:	movk	x9, #0xd4a5, lsl #16
   265a0:	movk	x7, #0x3302, lsl #32
   265a4:	movk	x9, #0xe8, lsl #32
   265a8:	movk	x7, #0x232f, lsl #48
   265ac:	umulh	x7, x4, x7
   265b0:	lsr	x7, x7, #37
   265b4:	msub	x4, x7, x9, x4
   265b8:	b	26338 <PyInit__decimal@@Base+0xbdb8>
   265bc:	cmp	x6, #0x8
   265c0:	b.eq	267b4 <PyInit__decimal@@Base+0xc234>  // b.none
   265c4:	cmp	x6, #0x9
   265c8:	b.eq	26798 <PyInit__decimal@@Base+0xc218>  // b.none
   265cc:	cmp	x6, #0x6
   265d0:	b.eq	26780 <PyInit__decimal@@Base+0xc200>  // b.none
   265d4:	cmp	x6, #0x7
   265d8:	b.ne	26764 <PyInit__decimal@@Base+0xc1e4>  // b.any
   265dc:	umulh	x2, x3, x15
   265e0:	mov	x10, #0x9680                	// #38528
   265e4:	movk	x10, #0x98, lsl #16
   265e8:	lsr	x2, x2, #23
   265ec:	msub	x3, x2, x10, x3
   265f0:	b	264e8 <PyInit__decimal@@Base+0xbf68>
   265f4:	cmp	x6, #0x11
   265f8:	b.eq	268b8 <PyInit__decimal@@Base+0xc338>  // b.none
   265fc:	cmp	x6, #0x12
   26600:	b.eq	2688c <PyInit__decimal@@Base+0xc30c>  // b.none
   26604:	cmp	x6, #0x10
   26608:	b.eq	26860 <PyInit__decimal@@Base+0xc2e0>  // b.none
   2660c:	mov	x10, #0xeac3                	// #60099
   26610:	lsr	x2, x3, #15
   26614:	movk	x10, #0xf3dc, lsl #16
   26618:	movk	x10, #0x4075, lsl #32
   2661c:	movk	x10, #0x2, lsl #48
   26620:	umulh	x2, x2, x10
   26624:	mov	x10, #0x8000                	// #32768
   26628:	movk	x10, #0xa4c6, lsl #16
   2662c:	movk	x10, #0x8d7e, lsl #32
   26630:	lsr	x2, x2, #20
   26634:	movk	x10, #0x3, lsl #48
   26638:	msub	x3, x2, x10, x3
   2663c:	b	264e8 <PyInit__decimal@@Base+0xbf68>
   26640:	ldr	x1, [x0, x5, lsl #3]
   26644:	mul	x10, x9, x3
   26648:	cmp	x1, x10
   2664c:	b.eq	2667c <PyInit__decimal@@Base+0xc0fc>  // b.none
   26650:	mov	w0, #0xffffffff            	// #-1
   26654:	cneg	w0, w0, cs  // cs = hs, nlast
   26658:	ldp	x19, x20, [sp, #16]
   2665c:	ldp	x21, x22, [sp, #32]
   26660:	ldp	x23, x24, [sp, #48]
   26664:	ldp	x25, x26, [sp, #64]
   26668:	ldp	x27, x28, [sp, #80]
   2666c:	ldp	x29, x30, [sp], #96
   26670:	ret
   26674:	ldr	x1, [x0, x5, lsl #3]
   26678:	cbnz	x1, 266a8 <PyInit__decimal@@Base+0xc128>
   2667c:	sub	x5, x5, #0x1
   26680:	cmn	x5, #0x1
   26684:	b.ne	26674 <PyInit__decimal@@Base+0xc0f4>  // b.any
   26688:	mov	w0, #0x0                   	// #0
   2668c:	ldp	x19, x20, [sp, #16]
   26690:	ldp	x21, x22, [sp, #32]
   26694:	ldp	x23, x24, [sp, #48]
   26698:	ldp	x25, x26, [sp, #64]
   2669c:	ldp	x27, x28, [sp, #80]
   266a0:	ldp	x29, x30, [sp], #96
   266a4:	ret
   266a8:	mov	w0, #0x1                   	// #1
   266ac:	ldp	x19, x20, [sp, #16]
   266b0:	ldp	x21, x22, [sp, #32]
   266b4:	ldp	x23, x24, [sp, #48]
   266b8:	ldp	x25, x26, [sp, #64]
   266bc:	ldp	x27, x28, [sp, #80]
   266c0:	ldp	x29, x30, [sp], #96
   266c4:	ret
   266c8:	umulh	x2, x3, x26
   266cc:	lsr	x2, x2, #41
   266d0:	msub	x3, x2, x25, x3
   266d4:	b	264e8 <PyInit__decimal@@Base+0xbf68>
   266d8:	umulh	x2, x3, x22
   266dc:	lsr	x2, x2, #36
   266e0:	msub	x3, x2, x21, x3
   266e4:	b	264e8 <PyInit__decimal@@Base+0xbf68>
   266e8:	umulh	x2, x3, x24
   266ec:	lsr	x2, x2, #42
   266f0:	msub	x3, x2, x23, x3
   266f4:	b	264e8 <PyInit__decimal@@Base+0xbf68>
   266f8:	lsr	x2, x3, #2
   266fc:	umulh	x2, x2, x11
   26700:	lsr	x2, x2, #2
   26704:	add	x10, x2, x2, lsl #1
   26708:	add	x10, x2, x10, lsl #3
   2670c:	sub	x3, x3, x10, lsl #2
   26710:	b	264e8 <PyInit__decimal@@Base+0xbf68>
   26714:	umulh	x2, x3, x12
   26718:	mov	x10, #0x2710                	// #10000
   2671c:	lsr	x2, x2, #11
   26720:	msub	x3, x2, x10, x3
   26724:	b	264e8 <PyInit__decimal@@Base+0xbf68>
   26728:	lsr	x2, x3, #3
   2672c:	umulh	x2, x2, x13
   26730:	lsr	x2, x2, #4
   26734:	lsl	x10, x2, #5
   26738:	sub	x10, x10, x2
   2673c:	add	x10, x2, x10, lsl #2
   26740:	sub	x3, x3, x10, lsl #3
   26744:	b	264e8 <PyInit__decimal@@Base+0xbf68>
   26748:	umulh	x2, x3, x30
   2674c:	mov	x10, #0xe400                	// #58368
   26750:	movk	x10, #0x540b, lsl #16
   26754:	movk	x10, #0x2, lsl #32
   26758:	lsr	x2, x2, #33
   2675c:	msub	x3, x2, x10, x3
   26760:	b	264e8 <PyInit__decimal@@Base+0xbf68>
   26764:	lsr	x2, x3, #5
   26768:	mov	x10, #0x86a0                	// #34464
   2676c:	movk	x10, #0x1, lsl #16
   26770:	umulh	x2, x2, x14
   26774:	lsr	x2, x2, #7
   26778:	msub	x3, x2, x10, x3
   2677c:	b	264e8 <PyInit__decimal@@Base+0xbf68>
   26780:	umulh	x2, x3, x16
   26784:	mov	x10, #0x4240                	// #16960
   26788:	movk	x10, #0xf, lsl #16
   2678c:	lsr	x2, x2, #18
   26790:	msub	x3, x2, x10, x3
   26794:	b	264e8 <PyInit__decimal@@Base+0xbf68>
   26798:	lsr	x2, x3, #9
   2679c:	mov	x10, #0xca00                	// #51712
   267a0:	movk	x10, #0x3b9a, lsl #16
   267a4:	umulh	x2, x2, x17
   267a8:	lsr	x2, x2, #11
   267ac:	msub	x3, x2, x10, x3
   267b0:	b	264e8 <PyInit__decimal@@Base+0xbf68>
   267b4:	umulh	x2, x3, x18
   267b8:	mov	x10, #0xe100                	// #57600
   267bc:	movk	x10, #0x5f5, lsl #16
   267c0:	lsr	x2, x2, #26
   267c4:	msub	x3, x2, x10, x3
   267c8:	b	264e8 <PyInit__decimal@@Base+0xbf68>
   267cc:	cmp	x6, #0x11
   267d0:	b.eq	26afc <PyInit__decimal@@Base+0xc57c>  // b.none
   267d4:	cmp	x6, #0x12
   267d8:	b.eq	2694c <PyInit__decimal@@Base+0xc3cc>  // b.none
   267dc:	cmp	x6, #0x10
   267e0:	b.eq	26920 <PyInit__decimal@@Base+0xc3a0>  // b.none
   267e4:	mov	x11, #0xeac3                	// #60099
   267e8:	lsr	x7, x4, #15
   267ec:	movk	x11, #0xf3dc, lsl #16
   267f0:	mov	x9, #0x8000                	// #32768
   267f4:	movk	x11, #0x4075, lsl #32
   267f8:	movk	x9, #0xa4c6, lsl #16
   267fc:	movk	x11, #0x2, lsl #48
   26800:	movk	x9, #0x8d7e, lsl #32
   26804:	movk	x9, #0x3, lsl #48
   26808:	umulh	x7, x7, x11
   2680c:	lsr	x7, x7, #20
   26810:	msub	x4, x7, x9, x4
   26814:	b	26338 <PyInit__decimal@@Base+0xbdb8>
   26818:	cmp	x6, #0x8
   2681c:	b.eq	26a28 <PyInit__decimal@@Base+0xc4a8>  // b.none
   26820:	cmp	x6, #0x9
   26824:	b.eq	269fc <PyInit__decimal@@Base+0xc47c>  // b.none
   26828:	cmp	x6, #0x6
   2682c:	b.eq	268f8 <PyInit__decimal@@Base+0xc378>  // b.none
   26830:	cmp	x6, #0x7
   26834:	b.ne	269a4 <PyInit__decimal@@Base+0xc424>  // b.any
   26838:	mov	x7, #0x42bd                	// #17085
   2683c:	mov	x9, #0x9680                	// #38528
   26840:	movk	x7, #0xe57a, lsl #16
   26844:	movk	x9, #0x98, lsl #16
   26848:	movk	x7, #0x94d5, lsl #32
   2684c:	movk	x7, #0xd6bf, lsl #48
   26850:	umulh	x7, x4, x7
   26854:	lsr	x7, x7, #23
   26858:	msub	x4, x7, x9, x4
   2685c:	b	26338 <PyInit__decimal@@Base+0xbdb8>
   26860:	mov	x2, #0x7857                	// #30807
   26864:	mov	x10, #0x6fc10000            	// #1874919424
   26868:	movk	x2, #0xb113, lsl #16
   2686c:	movk	x10, #0x86f2, lsl #32
   26870:	movk	x2, #0x652f, lsl #32
   26874:	movk	x10, #0x23, lsl #48
   26878:	movk	x2, #0x39a5, lsl #48
   2687c:	umulh	x2, x3, x2
   26880:	lsr	x2, x2, #51
   26884:	msub	x3, x2, x10, x3
   26888:	b	264e8 <PyInit__decimal@@Base+0xbf68>
   2688c:	mov	x10, #0x490f                	// #18703
   26890:	lsr	x2, x3, #18
   26894:	movk	x10, #0x7747, lsl #16
   26898:	movk	x10, #0x49c9, lsl #32
   2689c:	umulh	x2, x2, x10
   268a0:	mov	x10, #0xa7640000            	// #2808348672
   268a4:	movk	x10, #0xb6b3, lsl #32
   268a8:	movk	x10, #0xde0, lsl #48
   268ac:	lsr	x2, x2, #24
   268b0:	msub	x3, x2, x10, x3
   268b4:	b	264e8 <PyInit__decimal@@Base+0xbf68>
   268b8:	lsr	x2, x3, #17
   268bc:	umulh	x2, x2, x28
   268c0:	lsr	x2, x2, #22
   268c4:	msub	x3, x2, x27, x3
   268c8:	b	264e8 <PyInit__decimal@@Base+0xbf68>
   268cc:	mov	x7, #0xaaff                	// #43775
   268d0:	mov	x9, #0xe800                	// #59392
   268d4:	movk	x7, #0xcb24, lsl #16
   268d8:	movk	x9, #0x4876, lsl #16
   268dc:	movk	x7, #0xff0b, lsl #32
   268e0:	movk	x9, #0x17, lsl #32
   268e4:	movk	x7, #0xafeb, lsl #48
   268e8:	umulh	x7, x4, x7
   268ec:	lsr	x7, x7, #36
   268f0:	msub	x4, x7, x9, x4
   268f4:	b	26338 <PyInit__decimal@@Base+0xbdb8>
   268f8:	mov	x7, #0x34db                	// #13531
   268fc:	mov	x9, #0x4240                	// #16960
   26900:	movk	x7, #0xd7b6, lsl #16
   26904:	movk	x9, #0xf, lsl #16
   26908:	movk	x7, #0xde82, lsl #32
   2690c:	movk	x7, #0x431b, lsl #48
   26910:	umulh	x7, x4, x7
   26914:	lsr	x7, x7, #18
   26918:	msub	x4, x7, x9, x4
   2691c:	b	26338 <PyInit__decimal@@Base+0xbdb8>
   26920:	mov	x7, #0x7857                	// #30807
   26924:	mov	x9, #0x6fc10000            	// #1874919424
   26928:	movk	x7, #0xb113, lsl #16
   2692c:	movk	x9, #0x86f2, lsl #32
   26930:	movk	x7, #0x652f, lsl #32
   26934:	movk	x9, #0x23, lsl #48
   26938:	movk	x7, #0x39a5, lsl #48
   2693c:	umulh	x7, x4, x7
   26940:	lsr	x7, x7, #51
   26944:	msub	x4, x7, x9, x4
   26948:	b	26338 <PyInit__decimal@@Base+0xbdb8>
   2694c:	mov	x11, #0x490f                	// #18703
   26950:	lsr	x7, x4, #18
   26954:	movk	x11, #0x7747, lsl #16
   26958:	mov	x9, #0xa7640000            	// #2808348672
   2695c:	movk	x11, #0x49c9, lsl #32
   26960:	movk	x9, #0xb6b3, lsl #32
   26964:	movk	x9, #0xde0, lsl #48
   26968:	umulh	x7, x7, x11
   2696c:	lsr	x7, x7, #24
   26970:	msub	x4, x7, x9, x4
   26974:	b	26338 <PyInit__decimal@@Base+0xbdb8>
   26978:	mov	x7, #0xcd81                	// #52609
   2697c:	mov	x9, #0x4000                	// #16384
   26980:	movk	x7, #0x5095, lsl #16
   26984:	movk	x9, #0x107a, lsl #16
   26988:	movk	x7, #0x4dc3, lsl #32
   2698c:	movk	x9, #0x5af3, lsl #32
   26990:	movk	x7, #0xb42, lsl #48
   26994:	umulh	x7, x4, x7
   26998:	lsr	x7, x7, #42
   2699c:	msub	x4, x7, x9, x4
   269a0:	b	26338 <PyInit__decimal@@Base+0xbdb8>
   269a4:	mov	x11, #0x7843                	// #30787
   269a8:	lsr	x7, x4, #5
   269ac:	movk	x11, #0x71b4, lsl #16
   269b0:	mov	x9, #0x86a0                	// #34464
   269b4:	movk	x11, #0x5ac4, lsl #32
   269b8:	movk	x9, #0x1, lsl #16
   269bc:	movk	x11, #0xa7c, lsl #48
   269c0:	umulh	x7, x7, x11
   269c4:	lsr	x7, x7, #7
   269c8:	msub	x4, x7, x9, x4
   269cc:	b	26338 <PyInit__decimal@@Base+0xbdb8>
   269d0:	mov	x7, #0x385                 	// #901
   269d4:	mov	x9, #0xa000                	// #40960
   269d8:	movk	x7, #0x92ed, lsl #16
   269dc:	movk	x9, #0x4e72, lsl #16
   269e0:	movk	x7, #0x84d0, lsl #32
   269e4:	movk	x9, #0x918, lsl #32
   269e8:	movk	x7, #0x384b, lsl #48
   269ec:	umulh	x7, x4, x7
   269f0:	lsr	x7, x7, #41
   269f4:	msub	x4, x7, x9, x4
   269f8:	b	26338 <PyInit__decimal@@Base+0xbdb8>
   269fc:	mov	x11, #0x5a53                	// #23123
   26a00:	lsr	x7, x4, #9
   26a04:	movk	x11, #0xa09b, lsl #16
   26a08:	mov	x9, #0xca00                	// #51712
   26a0c:	movk	x11, #0xb82f, lsl #32
   26a10:	movk	x9, #0x3b9a, lsl #16
   26a14:	movk	x11, #0x44, lsl #48
   26a18:	umulh	x7, x7, x11
   26a1c:	lsr	x7, x7, #11
   26a20:	msub	x4, x7, x9, x4
   26a24:	b	26338 <PyInit__decimal@@Base+0xbdb8>
   26a28:	mov	x7, #0xcefd                	// #52989
   26a2c:	mov	x9, #0xe100                	// #57600
   26a30:	movk	x7, #0x8461, lsl #16
   26a34:	movk	x9, #0x5f5, lsl #16
   26a38:	movk	x7, #0x7711, lsl #32
   26a3c:	movk	x7, #0xabcc, lsl #48
   26a40:	umulh	x7, x4, x7
   26a44:	lsr	x7, x7, #26
   26a48:	msub	x4, x7, x9, x4
   26a4c:	b	26338 <PyInit__decimal@@Base+0xbdb8>
   26a50:	mov	x7, #0x594b                	// #22859
   26a54:	mov	x9, #0x2710                	// #10000
   26a58:	movk	x7, #0x3886, lsl #16
   26a5c:	movk	x7, #0xc5d6, lsl #32
   26a60:	movk	x7, #0x346d, lsl #48
   26a64:	umulh	x7, x4, x7
   26a68:	lsr	x7, x7, #11
   26a6c:	msub	x4, x7, x9, x4
   26a70:	b	26338 <PyInit__decimal@@Base+0xbdb8>
   26a74:	mov	x9, #0xf7cf                	// #63439
   26a78:	lsr	x7, x4, #3
   26a7c:	movk	x9, #0xe353, lsl #16
   26a80:	movk	x9, #0x9ba5, lsl #32
   26a84:	movk	x9, #0x20c4, lsl #48
   26a88:	umulh	x7, x7, x9
   26a8c:	lsr	x7, x7, #4
   26a90:	lsl	x9, x7, #5
   26a94:	sub	x9, x9, x7
   26a98:	add	x9, x7, x9, lsl #2
   26a9c:	sub	x4, x4, x9, lsl #3
   26aa0:	b	26338 <PyInit__decimal@@Base+0xbdb8>
   26aa4:	mov	x7, #0xd5bf                	// #54719
   26aa8:	mov	x9, #0xe400                	// #58368
   26aac:	movk	x7, #0xbded, lsl #16
   26ab0:	movk	x9, #0x540b, lsl #16
   26ab4:	movk	x7, #0xfece, lsl #32
   26ab8:	movk	x9, #0x2, lsl #32
   26abc:	movk	x7, #0xdbe6, lsl #48
   26ac0:	umulh	x7, x4, x7
   26ac4:	lsr	x7, x7, #33
   26ac8:	msub	x4, x7, x9, x4
   26acc:	b	26338 <PyInit__decimal@@Base+0xbdb8>
   26ad0:	mov	x9, #0xf5c3                	// #62915
   26ad4:	lsr	x7, x4, #2
   26ad8:	movk	x9, #0x5c28, lsl #16
   26adc:	movk	x9, #0xc28f, lsl #32
   26ae0:	movk	x9, #0x28f5, lsl #48
   26ae4:	umulh	x7, x7, x9
   26ae8:	lsr	x7, x7, #2
   26aec:	add	x9, x7, x7, lsl #1
   26af0:	add	x9, x7, x9, lsl #3
   26af4:	sub	x4, x4, x9, lsl #2
   26af8:	b	26338 <PyInit__decimal@@Base+0xbdb8>
   26afc:	mov	x11, #0x1b53                	// #6995
   26b00:	lsr	x7, x4, #17
   26b04:	movk	x11, #0xd519, lsl #16
   26b08:	mov	x9, #0x5d8a0000            	// #1569325056
   26b0c:	movk	x11, #0x5c3b, lsl #32
   26b10:	movk	x9, #0x4578, lsl #32
   26b14:	movk	x9, #0x163, lsl #48
   26b18:	umulh	x7, x7, x11
   26b1c:	lsr	x7, x7, #22
   26b20:	msub	x4, x7, x9, x4
   26b24:	b	26338 <PyInit__decimal@@Base+0xbdb8>
   26b28:	mov	w0, #0x1                   	// #1
   26b2c:	ret
   26b30:	ldr	x3, [x0, #8]
   26b34:	ldr	x6, [x1, #8]
   26b38:	ldr	x5, [x0, #24]
   26b3c:	cmp	x3, x6
   26b40:	b.eq	26b94 <PyInit__decimal@@Base+0xc614>  // b.none
   26b44:	sub	x4, x3, x6
   26b48:	cmp	x4, #0x0
   26b4c:	ldr	x2, [x1, #24]
   26b50:	ldr	x7, [x0, #40]
   26b54:	ldr	x0, [x1, #40]
   26b58:	b.le	26b7c <PyInit__decimal@@Base+0xc5fc>
   26b5c:	stp	x29, x30, [sp, #-16]!
   26b60:	mov	x3, x5
   26b64:	mov	x1, x7
   26b68:	mov	x29, sp
   26b6c:	bl	26270 <PyInit__decimal@@Base+0xbcf0>
   26b70:	neg	w0, w0
   26b74:	ldp	x29, x30, [sp], #16
   26b78:	ret
   26b7c:	sub	x4, x6, x3
   26b80:	mov	x1, x0
   26b84:	mov	x3, x2
   26b88:	mov	x0, x7
   26b8c:	mov	x2, x5
   26b90:	b	26270 <PyInit__decimal@@Base+0xbcf0>
   26b94:	subs	x2, x5, #0x1
   26b98:	b.mi	26bd0 <PyInit__decimal@@Base+0xc650>  // b.first
   26b9c:	ldr	x4, [x0, #40]
   26ba0:	ldr	x3, [x1, #40]
   26ba4:	b	26bb0 <PyInit__decimal@@Base+0xc630>
   26ba8:	cmn	x2, #0x1
   26bac:	b.eq	26bd0 <PyInit__decimal@@Base+0xc650>  // b.none
   26bb0:	ldr	x1, [x4, x2, lsl #3]
   26bb4:	ldr	x0, [x3, x2, lsl #3]
   26bb8:	sub	x2, x2, #0x1
   26bbc:	cmp	x1, x0
   26bc0:	b.eq	26ba8 <PyInit__decimal@@Base+0xc628>  // b.none
   26bc4:	mov	w0, #0x1                   	// #1
   26bc8:	cneg	w0, w0, cc  // cc = lo, ul, last
   26bcc:	ret
   26bd0:	mov	w0, #0x0                   	// #0
   26bd4:	ret
   26bd8:	cmp	x0, x1
   26bdc:	b.eq	26c6c <PyInit__decimal@@Base+0xc6ec>  // b.none
   26be0:	ldrb	w5, [x0]
   26be4:	ldrb	w4, [x1]
   26be8:	and	w4, w4, #0x2
   26bec:	tbnz	w5, #1, 26c24 <PyInit__decimal@@Base+0xc6a4>
   26bf0:	cbnz	w4, 26c78 <PyInit__decimal@@Base+0xc6f8>
   26bf4:	ldr	x5, [x0, #24]
   26bf8:	ldr	x6, [x0, #40]
   26bfc:	ldr	x4, [x1, #24]
   26c00:	add	x5, x6, x5, lsl #3
   26c04:	ldr	x6, [x1, #40]
   26c08:	ldur	x5, [x5, #-8]
   26c0c:	add	x4, x6, x4, lsl #3
   26c10:	ldur	x4, [x4, #-8]
   26c14:	cbnz	x5, 26c30 <PyInit__decimal@@Base+0xc6b0>
   26c18:	cmp	x4, #0x0
   26c1c:	csetm	w0, ne  // ne = any
   26c20:	ret
   26c24:	cmp	w4, #0x0
   26c28:	cset	w0, eq  // eq = none
   26c2c:	ret
   26c30:	cbz	x4, 26c64 <PyInit__decimal@@Base+0xc6e4>
   26c34:	ldp	x5, x3, [x0, #8]
   26c38:	ldp	x4, x2, [x1, #8]
   26c3c:	add	x3, x5, x3
   26c40:	sub	x5, x3, #0x1
   26c44:	add	x2, x4, x2
   26c48:	cmp	x3, x2
   26c4c:	sub	x2, x2, #0x1
   26c50:	b.eq	26c74 <PyInit__decimal@@Base+0xc6f4>  // b.none
   26c54:	cmp	x5, x2
   26c58:	mov	w0, #0xffffffff            	// #-1
   26c5c:	cneg	w0, w0, ge  // ge = tcont
   26c60:	ret
   26c64:	mov	w0, #0x1                   	// #1
   26c68:	ret
   26c6c:	mov	w0, #0x0                   	// #0
   26c70:	ret
   26c74:	b	26b30 <PyInit__decimal@@Base+0xc5b0>
   26c78:	mov	w0, #0xffffffff            	// #-1
   26c7c:	ret
   26c80:	cmp	x0, x1
   26c84:	b.eq	26d54 <PyInit__decimal@@Base+0xc7d4>  // b.none
   26c88:	ldrb	w5, [x0]
   26c8c:	ldrb	w4, [x1]
   26c90:	and	w6, w4, #0x2
   26c94:	tbnz	w5, #1, 26d20 <PyInit__decimal@@Base+0xc7a0>
   26c98:	cbnz	w6, 26d5c <PyInit__decimal@@Base+0xc7dc>
   26c9c:	ldr	x7, [x0, #24]
   26ca0:	ldr	x8, [x0, #40]
   26ca4:	ldr	x6, [x1, #24]
   26ca8:	add	x7, x8, x7, lsl #3
   26cac:	ldr	x8, [x1, #40]
   26cb0:	ldur	x7, [x7, #-8]
   26cb4:	add	x6, x8, x6, lsl #3
   26cb8:	ldur	x6, [x6, #-8]
   26cbc:	cbz	x7, 26d40 <PyInit__decimal@@Base+0xc7c0>
   26cc0:	and	w5, w5, #0x1
   26cc4:	cbz	x6, 26d70 <PyInit__decimal@@Base+0xc7f0>
   26cc8:	and	w4, w4, #0x1
   26ccc:	cmp	w4, w5
   26cd0:	b.ne	26d68 <PyInit__decimal@@Base+0xc7e8>  // b.any
   26cd4:	stp	x29, x30, [sp, #-32]!
   26cd8:	neg	w4, w4
   26cdc:	mov	x29, sp
   26ce0:	ldp	x6, x3, [x0, #8]
   26ce4:	str	x19, [sp, #16]
   26ce8:	ldp	x5, x2, [x1, #8]
   26cec:	lsl	w19, w4, #1
   26cf0:	add	x3, x6, x3
   26cf4:	sub	x4, x3, #0x1
   26cf8:	add	x2, x5, x2
   26cfc:	cmp	x2, x3
   26d00:	sub	x2, x2, #0x1
   26d04:	b.eq	26d80 <PyInit__decimal@@Base+0xc800>  // b.none
   26d08:	cmp	x2, x4
   26d0c:	add	w4, w19, #0x1
   26d10:	csinv	w0, w4, w19, le
   26d14:	ldr	x19, [sp, #16]
   26d18:	ldp	x29, x30, [sp], #32
   26d1c:	ret
   26d20:	and	w5, w5, #0x1
   26d24:	and	w4, w4, #0x1
   26d28:	neg	w0, w5
   26d2c:	sub	w4, w4, w5
   26d30:	cmp	w6, #0x0
   26d34:	lsl	w5, w0, #1
   26d38:	csinc	w0, w4, w5, ne  // ne = any
   26d3c:	ret
   26d40:	sbfx	x4, x4, #0, #1
   26d44:	cmp	x6, #0x0
   26d48:	mvn	w4, w4, lsl #1
   26d4c:	csel	w0, w4, wzr, ne  // ne = any
   26d50:	ret
   26d54:	mov	w0, #0x0                   	// #0
   26d58:	ret
   26d5c:	sbfx	x4, x4, #0, #1
   26d60:	mvn	w0, w4, lsl #1
   26d64:	ret
   26d68:	sub	w0, w4, w5
   26d6c:	ret
   26d70:	neg	w4, w5
   26d74:	lsl	w4, w4, #1
   26d78:	add	w0, w4, #0x1
   26d7c:	ret
   26d80:	bl	26b30 <PyInit__decimal@@Base+0xc5b0>
   26d84:	madd	w0, w19, w0, w0
   26d88:	b	26d14 <PyInit__decimal@@Base+0xc794>
   26d8c:	nop
   26d90:	stp	x29, x30, [sp, #-80]!
   26d94:	mov	x29, sp
   26d98:	stp	x19, x20, [sp, #16]
   26d9c:	mov	x19, x0
   26da0:	mov	x20, x2
   26da4:	stp	x21, x22, [sp, #32]
   26da8:	mov	x21, x3
   26dac:	and	w22, w1, #0xff
   26db0:	ldrb	w4, [x0]
   26db4:	ldr	x0, [x0, #40]
   26db8:	tbnz	w4, #5, 26dd8 <PyInit__decimal@@Base+0xc858>
   26dbc:	ldr	x2, [x19, #32]
   26dc0:	str	x23, [sp, #48]
   26dc4:	adrp	x23, 5f000 <PyInit__decimal@@Base+0x44a80>
   26dc8:	ldr	x1, [x23, #1672]
   26dcc:	cmp	x2, x1
   26dd0:	b.gt	26f10 <PyInit__decimal@@Base+0xc990>
   26dd4:	ldr	x23, [sp, #48]
   26dd8:	mov	x6, #0x89e80000            	// #2313682944
   26ddc:	movk	x6, #0x2304, lsl #32
   26de0:	and	w4, w4, #0xfffffff0
   26de4:	movk	x6, #0x8ac7, lsl #48
   26de8:	cmp	x20, x6
   26dec:	cset	x5, cs  // cs = hs, nlast
   26df0:	orr	w4, w22, w4
   26df4:	add	x1, x5, #0x1
   26df8:	strb	w4, [x19]
   26dfc:	str	x21, [x19, #8]
   26e00:	adrp	x4, 42000 <PyInit__decimal@@Base+0x27a80>
   26e04:	msub	x6, x5, x6, x20
   26e08:	add	x2, x0, x1, lsl #3
   26e0c:	add	x3, x4, #0x2d0
   26e10:	stp	x6, x5, [x0]
   26e14:	str	x1, [x19, #24]
   26e18:	ldr	x1, [x3, #72]
   26e1c:	ldur	x0, [x2, #-8]
   26e20:	cmp	x0, x1
   26e24:	b.cs	26e84 <PyInit__decimal@@Base+0xc904>  // b.hs, b.nlast
   26e28:	ldr	x1, [x3, #32]
   26e2c:	cmp	x0, x1
   26e30:	b.cs	26e54 <PyInit__decimal@@Base+0xc8d4>  // b.hs, b.nlast
   26e34:	ldr	x1, [x3, #16]
   26e38:	cmp	x0, x1
   26e3c:	b.cs	26f40 <PyInit__decimal@@Base+0xc9c0>  // b.hs, b.nlast
   26e40:	ldr	x1, [x3, #8]
   26e44:	cmp	x0, x1
   26e48:	cset	x2, cs  // cs = hs, nlast
   26e4c:	add	x2, x2, #0x1
   26e50:	b	26ebc <PyInit__decimal@@Base+0xc93c>
   26e54:	ldr	x1, [x3, #48]
   26e58:	cmp	x0, x1
   26e5c:	b.cc	26f7c <PyInit__decimal@@Base+0xc9fc>  // b.lo, b.ul, b.last
   26e60:	ldr	x1, [x3, #64]
   26e64:	mov	x2, #0x9                   	// #9
   26e68:	cmp	x0, x1
   26e6c:	b.cs	26ebc <PyInit__decimal@@Base+0xc93c>  // b.hs, b.nlast
   26e70:	ldr	x1, [x3, #56]
   26e74:	cmp	x0, x1
   26e78:	cset	x2, cs  // cs = hs, nlast
   26e7c:	add	x2, x2, #0x7
   26e80:	b	26ebc <PyInit__decimal@@Base+0xc93c>
   26e84:	ldr	x1, [x3, #112]
   26e88:	cmp	x0, x1
   26e8c:	b.cs	26ee4 <PyInit__decimal@@Base+0xc964>  // b.hs, b.nlast
   26e90:	ldr	x1, [x3, #88]
   26e94:	cmp	x0, x1
   26e98:	b.cc	26f68 <PyInit__decimal@@Base+0xc9e8>  // b.lo, b.ul, b.last
   26e9c:	ldr	x1, [x3, #104]
   26ea0:	mov	x2, #0xe                   	// #14
   26ea4:	cmp	x0, x1
   26ea8:	b.cs	26ebc <PyInit__decimal@@Base+0xc93c>  // b.hs, b.nlast
   26eac:	ldr	x1, [x3, #96]
   26eb0:	cmp	x0, x1
   26eb4:	cset	x2, cs  // cs = hs, nlast
   26eb8:	add	x2, x2, #0xc
   26ebc:	lsl	x1, x5, #2
   26ec0:	add	x1, x1, x5
   26ec4:	ldp	x21, x22, [sp, #32]
   26ec8:	lsl	x1, x1, #2
   26ecc:	sub	x1, x1, x5
   26ed0:	add	x1, x1, x2
   26ed4:	str	x1, [x19, #16]
   26ed8:	ldp	x19, x20, [sp, #16]
   26edc:	ldp	x29, x30, [sp], #80
   26ee0:	ret
   26ee4:	ldr	x1, [x3, #144]
   26ee8:	cmp	x0, x1
   26eec:	b.cs	26f54 <PyInit__decimal@@Base+0xc9d4>  // b.hs, b.nlast
   26ef0:	ldr	x1, [x3, #128]
   26ef4:	cmp	x0, x1
   26ef8:	b.cs	26f90 <PyInit__decimal@@Base+0xca10>  // b.hs, b.nlast
   26efc:	ldr	x1, [x3, #120]
   26f00:	cmp	x0, x1
   26f04:	cset	x2, cs  // cs = hs, nlast
   26f08:	add	x2, x2, #0xf
   26f0c:	b	26ebc <PyInit__decimal@@Base+0xc93c>
   26f10:	add	x3, sp, #0x4f
   26f14:	mov	x2, #0x8                   	// #8
   26f18:	strb	wzr, [sp, #79]
   26f1c:	bl	252a8 <PyInit__decimal@@Base+0xad28>
   26f20:	ldrb	w1, [sp, #79]
   26f24:	str	x0, [x19, #40]
   26f28:	cbnz	w1, 26f34 <PyInit__decimal@@Base+0xc9b4>
   26f2c:	ldr	x1, [x23, #1672]
   26f30:	str	x1, [x19, #32]
   26f34:	ldrb	w4, [x19]
   26f38:	ldr	x23, [sp, #48]
   26f3c:	b	26dd8 <PyInit__decimal@@Base+0xc858>
   26f40:	ldr	x1, [x3, #24]
   26f44:	cmp	x0, x1
   26f48:	cset	x2, cs  // cs = hs, nlast
   26f4c:	add	x2, x2, #0x3
   26f50:	b	26ebc <PyInit__decimal@@Base+0xc93c>
   26f54:	ldr	x1, [x3, #152]
   26f58:	cmp	x0, x1
   26f5c:	cset	x2, cs  // cs = hs, nlast
   26f60:	add	x2, x2, #0x13
   26f64:	b	26ebc <PyInit__decimal@@Base+0xc93c>
   26f68:	ldr	x1, [x3, #80]
   26f6c:	cmp	x0, x1
   26f70:	cset	x2, cs  // cs = hs, nlast
   26f74:	add	x2, x2, #0xa
   26f78:	b	26ebc <PyInit__decimal@@Base+0xc93c>
   26f7c:	ldr	x1, [x3, #40]
   26f80:	cmp	x0, x1
   26f84:	cset	x2, cs  // cs = hs, nlast
   26f88:	add	x2, x2, #0x5
   26f8c:	b	26ebc <PyInit__decimal@@Base+0xc93c>
   26f90:	ldr	x1, [x3, #136]
   26f94:	cmp	x0, x1
   26f98:	cset	x2, cs  // cs = hs, nlast
   26f9c:	add	x2, x2, #0x11
   26fa0:	b	26ebc <PyInit__decimal@@Base+0xc93c>
   26fa4:	nop
   26fa8:	mov	x3, x0
   26fac:	cbz	w2, 27038 <PyInit__decimal@@Base+0xcab8>
   26fb0:	add	x0, x0, x1, lsl #3
   26fb4:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27a80>
   26fb8:	add	x2, x2, #0x2d0
   26fbc:	ldur	x0, [x0, #-8]
   26fc0:	ldr	x4, [x2, #72]
   26fc4:	cmp	x0, x4
   26fc8:	b.cs	27048 <PyInit__decimal@@Base+0xcac8>  // b.hs, b.nlast
   26fcc:	ldr	x4, [x2, #32]
   26fd0:	cmp	x0, x4
   26fd4:	b.cc	270b8 <PyInit__decimal@@Base+0xcb38>  // b.lo, b.ul, b.last
   26fd8:	ldr	x4, [x2, #48]
   26fdc:	cmp	x0, x4
   26fe0:	b.cc	27354 <PyInit__decimal@@Base+0xcdd4>  // b.lo, b.ul, b.last
   26fe4:	ldr	x4, [x2, #64]
   26fe8:	cmp	x0, x4
   26fec:	b.cs	273c0 <PyInit__decimal@@Base+0xce40>  // b.hs, b.nlast
   26ff0:	ldr	x2, [x2, #56]
   26ff4:	cmp	x0, x2
   26ff8:	b.cs	27320 <PyInit__decimal@@Base+0xcda0>  // b.hs, b.nlast
   26ffc:	mov	x5, #0x34db                	// #13531
   27000:	mov	x2, #0x4240                	// #16960
   27004:	movk	x5, #0xd7b6, lsl #16
   27008:	movk	x2, #0xf, lsl #16
   2700c:	movk	x5, #0xde82, lsl #32
   27010:	movk	x5, #0x431b, lsl #48
   27014:	umulh	x5, x0, x5
   27018:	lsr	x5, x5, #18
   2701c:	cmp	x5, #0x5
   27020:	cset	w4, eq  // eq = none
   27024:	msub	x2, x5, x2, x0
   27028:	mov	x0, x5
   2702c:	b	27168 <PyInit__decimal@@Base+0xcbe8>
   27030:	ldr	x2, [x3, x1, lsl #3]
   27034:	cbnz	x2, 270b0 <PyInit__decimal@@Base+0xcb30>
   27038:	subs	x1, x1, #0x1
   2703c:	b.pl	27030 <PyInit__decimal@@Base+0xcab0>  // b.nfrst
   27040:	mov	x0, #0x0                   	// #0
   27044:	ret
   27048:	ldr	x4, [x2, #112]
   2704c:	cmp	x0, x4
   27050:	b.cs	2710c <PyInit__decimal@@Base+0xcb8c>  // b.hs, b.nlast
   27054:	ldr	x4, [x2, #88]
   27058:	cmp	x0, x4
   2705c:	b.cc	27390 <PyInit__decimal@@Base+0xce10>  // b.lo, b.ul, b.last
   27060:	ldr	x4, [x2, #104]
   27064:	cmp	x0, x4
   27068:	b.cs	27464 <PyInit__decimal@@Base+0xcee4>  // b.hs, b.nlast
   2706c:	ldr	x2, [x2, #96]
   27070:	cmp	x0, x2
   27074:	b.cs	272e8 <PyInit__decimal@@Base+0xcd68>  // b.hs, b.nlast
   27078:	mov	x5, #0xaaff                	// #43775
   2707c:	mov	x2, #0xe800                	// #59392
   27080:	movk	x5, #0xcb24, lsl #16
   27084:	movk	x2, #0x4876, lsl #16
   27088:	movk	x5, #0xff0b, lsl #32
   2708c:	movk	x2, #0x17, lsl #32
   27090:	movk	x5, #0xafeb, lsl #48
   27094:	umulh	x5, x0, x5
   27098:	lsr	x5, x5, #36
   2709c:	cmp	x5, #0x5
   270a0:	cset	w4, eq  // eq = none
   270a4:	msub	x2, x5, x2, x0
   270a8:	mov	x0, x5
   270ac:	b	27168 <PyInit__decimal@@Base+0xcbe8>
   270b0:	mov	x0, #0x1                   	// #1
   270b4:	ret
   270b8:	ldr	x4, [x2, #16]
   270bc:	cmp	x0, x4
   270c0:	b.cs	2718c <PyInit__decimal@@Base+0xcc0c>  // b.hs, b.nlast
   270c4:	ldr	x2, [x2, #8]
   270c8:	cmp	x0, x2
   270cc:	b.cs	27260 <PyInit__decimal@@Base+0xcce0>  // b.hs, b.nlast
   270d0:	cmp	x0, #0x5
   270d4:	mov	x2, #0x0                   	// #0
   270d8:	cset	w4, eq  // eq = none
   270dc:	cmp	x1, #0x1
   270e0:	b.le	27174 <PyInit__decimal@@Base+0xcbf4>
   270e4:	nop
   270e8:	sub	x1, x1, #0x2
   270ec:	b	270f4 <PyInit__decimal@@Base+0xcb74>
   270f0:	b.eq	27174 <PyInit__decimal@@Base+0xcbf4>  // b.none
   270f4:	ldr	x2, [x3, x1, lsl #3]
   270f8:	sub	x1, x1, #0x1
   270fc:	cmn	x1, #0x1
   27100:	cbz	x2, 270f0 <PyInit__decimal@@Base+0xcb70>
   27104:	mov	x2, #0x1                   	// #1
   27108:	b	27174 <PyInit__decimal@@Base+0xcbf4>
   2710c:	ldr	x4, [x2, #144]
   27110:	cmp	x0, x4
   27114:	b.cs	271d0 <PyInit__decimal@@Base+0xcc50>  // b.hs, b.nlast
   27118:	ldr	x4, [x2, #128]
   2711c:	cmp	x0, x4
   27120:	b.cc	27214 <PyInit__decimal@@Base+0xcc94>  // b.lo, b.ul, b.last
   27124:	ldr	x2, [x2, #136]
   27128:	cmp	x0, x2
   2712c:	b.cs	274d4 <PyInit__decimal@@Base+0xcf54>  // b.hs, b.nlast
   27130:	mov	x5, #0x7857                	// #30807
   27134:	mov	x2, #0x6fc10000            	// #1874919424
   27138:	movk	x5, #0xb113, lsl #16
   2713c:	movk	x2, #0x86f2, lsl #32
   27140:	movk	x5, #0x652f, lsl #32
   27144:	movk	x2, #0x23, lsl #48
   27148:	movk	x5, #0x39a5, lsl #48
   2714c:	umulh	x5, x0, x5
   27150:	lsr	x5, x5, #51
   27154:	cmp	x5, #0x5
   27158:	cset	w4, eq  // eq = none
   2715c:	msub	x2, x5, x2, x0
   27160:	mov	x0, x5
   27164:	nop
   27168:	cmp	x2, #0x0
   2716c:	ccmp	x1, #0x1, #0x4, eq  // eq = none
   27170:	b.gt	270e8 <PyInit__decimal@@Base+0xcb68>
   27174:	cmp	x0, #0x0
   27178:	ccmp	w4, #0x0, #0x0, ne  // ne = any
   2717c:	b.eq	27044 <PyInit__decimal@@Base+0xcac4>  // b.none
   27180:	cmp	x2, #0x0
   27184:	cinc	x0, x0, ne  // ne = any
   27188:	ret
   2718c:	ldr	x2, [x2, #24]
   27190:	cmp	x0, x2
   27194:	b.cs	27288 <PyInit__decimal@@Base+0xcd08>  // b.hs, b.nlast
   27198:	mov	x2, #0xf5c3                	// #62915
   2719c:	lsr	x5, x0, #2
   271a0:	movk	x2, #0x5c28, lsl #16
   271a4:	movk	x2, #0xc28f, lsl #32
   271a8:	movk	x2, #0x28f5, lsl #48
   271ac:	umulh	x5, x5, x2
   271b0:	lsr	x5, x5, #2
   271b4:	cmp	x5, #0x5
   271b8:	add	x2, x5, x5, lsl #1
   271bc:	cset	w4, eq  // eq = none
   271c0:	add	x2, x5, x2, lsl #3
   271c4:	sub	x2, x0, x2, lsl #2
   271c8:	mov	x0, x5
   271cc:	b	27168 <PyInit__decimal@@Base+0xcbe8>
   271d0:	ldr	x2, [x2, #152]
   271d4:	cmp	x0, x2
   271d8:	b.cs	272c4 <PyInit__decimal@@Base+0xcd44>  // b.hs, b.nlast
   271dc:	mov	x4, #0x490f                	// #18703
   271e0:	lsr	x5, x0, #18
   271e4:	movk	x4, #0x7747, lsl #16
   271e8:	mov	x2, #0xa7640000            	// #2808348672
   271ec:	movk	x4, #0x49c9, lsl #32
   271f0:	movk	x2, #0xb6b3, lsl #32
   271f4:	movk	x2, #0xde0, lsl #48
   271f8:	umulh	x5, x5, x4
   271fc:	lsr	x5, x5, #24
   27200:	cmp	x5, #0x5
   27204:	cset	w4, eq  // eq = none
   27208:	msub	x2, x5, x2, x0
   2720c:	mov	x0, x5
   27210:	b	27168 <PyInit__decimal@@Base+0xcbe8>
   27214:	ldr	x2, [x2, #120]
   27218:	cmp	x0, x2
   2721c:	b.cc	2742c <PyInit__decimal@@Base+0xceac>  // b.lo, b.ul, b.last
   27220:	mov	x4, #0xeac3                	// #60099
   27224:	lsr	x5, x0, #15
   27228:	movk	x4, #0xf3dc, lsl #16
   2722c:	mov	x2, #0x8000                	// #32768
   27230:	movk	x4, #0x4075, lsl #32
   27234:	movk	x2, #0xa4c6, lsl #16
   27238:	movk	x4, #0x2, lsl #48
   2723c:	movk	x2, #0x8d7e, lsl #32
   27240:	movk	x2, #0x3, lsl #48
   27244:	umulh	x5, x5, x4
   27248:	lsr	x5, x5, #20
   2724c:	cmp	x5, #0x5
   27250:	cset	w4, eq  // eq = none
   27254:	msub	x2, x5, x2, x0
   27258:	mov	x0, x5
   2725c:	b	27168 <PyInit__decimal@@Base+0xcbe8>
   27260:	mov	x5, #0xcccccccccccccccc    	// #-3689348814741910324
   27264:	movk	x5, #0xcccd
   27268:	umulh	x5, x0, x5
   2726c:	lsr	x5, x5, #3
   27270:	cmp	x5, #0x5
   27274:	add	x2, x5, x5, lsl #2
   27278:	cset	w4, eq  // eq = none
   2727c:	sub	x2, x0, x2, lsl #1
   27280:	mov	x0, x5
   27284:	b	27168 <PyInit__decimal@@Base+0xcbe8>
   27288:	mov	x2, #0xf7cf                	// #63439
   2728c:	lsr	x5, x0, #3
   27290:	movk	x2, #0xe353, lsl #16
   27294:	movk	x2, #0x9ba5, lsl #32
   27298:	movk	x2, #0x20c4, lsl #48
   2729c:	umulh	x5, x5, x2
   272a0:	lsr	x5, x5, #4
   272a4:	cmp	x5, #0x5
   272a8:	lsl	x2, x5, #5
   272ac:	cset	w4, eq  // eq = none
   272b0:	sub	x2, x2, x5
   272b4:	add	x2, x5, x2, lsl #2
   272b8:	sub	x2, x0, x2, lsl #3
   272bc:	mov	x0, x5
   272c0:	b	27168 <PyInit__decimal@@Base+0xcbe8>
   272c4:	mov	x2, #0x89e80000            	// #2313682944
   272c8:	mov	w4, #0x0                   	// #0
   272cc:	movk	x2, #0x2304, lsl #32
   272d0:	movk	x2, #0x8ac7, lsl #48
   272d4:	cmp	x0, x2
   272d8:	cset	x5, cs  // cs = hs, nlast
   272dc:	msub	x2, x5, x2, x0
   272e0:	mov	x0, x5
   272e4:	b	27168 <PyInit__decimal@@Base+0xcbe8>
   272e8:	mov	x5, #0x2233                	// #8755
   272ec:	mov	x2, #0x1000                	// #4096
   272f0:	movk	x5, #0x5bd4, lsl #16
   272f4:	movk	x2, #0xd4a5, lsl #16
   272f8:	movk	x5, #0x3302, lsl #32
   272fc:	movk	x2, #0xe8, lsl #32
   27300:	movk	x5, #0x232f, lsl #48
   27304:	umulh	x5, x0, x5
   27308:	lsr	x5, x5, #37
   2730c:	cmp	x5, #0x5
   27310:	cset	w4, eq  // eq = none
   27314:	msub	x2, x5, x2, x0
   27318:	mov	x0, x5
   2731c:	b	27168 <PyInit__decimal@@Base+0xcbe8>
   27320:	mov	x5, #0x42bd                	// #17085
   27324:	mov	x2, #0x9680                	// #38528
   27328:	movk	x5, #0xe57a, lsl #16
   2732c:	movk	x2, #0x98, lsl #16
   27330:	movk	x5, #0x94d5, lsl #32
   27334:	movk	x5, #0xd6bf, lsl #48
   27338:	umulh	x5, x0, x5
   2733c:	lsr	x5, x5, #23
   27340:	cmp	x5, #0x5
   27344:	cset	w4, eq  // eq = none
   27348:	msub	x2, x5, x2, x0
   2734c:	mov	x0, x5
   27350:	b	27168 <PyInit__decimal@@Base+0xcbe8>
   27354:	ldr	x2, [x2, #40]
   27358:	cmp	x0, x2
   2735c:	b.cs	2749c <PyInit__decimal@@Base+0xcf1c>  // b.hs, b.nlast
   27360:	mov	x5, #0x594b                	// #22859
   27364:	mov	x2, #0x2710                	// #10000
   27368:	movk	x5, #0x3886, lsl #16
   2736c:	movk	x5, #0xc5d6, lsl #32
   27370:	movk	x5, #0x346d, lsl #48
   27374:	umulh	x5, x0, x5
   27378:	lsr	x5, x5, #11
   2737c:	cmp	x5, #0x5
   27380:	cset	w4, eq  // eq = none
   27384:	msub	x2, x5, x2, x0
   27388:	mov	x0, x5
   2738c:	b	27168 <PyInit__decimal@@Base+0xcbe8>
   27390:	ldr	x2, [x2, #80]
   27394:	cmp	x0, x2
   27398:	b.cs	273f4 <PyInit__decimal@@Base+0xce74>  // b.hs, b.nlast
   2739c:	mov	x4, #0x5a53                	// #23123
   273a0:	lsr	x5, x0, #9
   273a4:	movk	x4, #0xa09b, lsl #16
   273a8:	mov	x2, #0xca00                	// #51712
   273ac:	movk	x4, #0xb82f, lsl #32
   273b0:	movk	x2, #0x3b9a, lsl #16
   273b4:	movk	x4, #0x44, lsl #48
   273b8:	umulh	x5, x5, x4
   273bc:	b	27378 <PyInit__decimal@@Base+0xcdf8>
   273c0:	mov	x5, #0xcefd                	// #52989
   273c4:	mov	x2, #0xe100                	// #57600
   273c8:	movk	x5, #0x8461, lsl #16
   273cc:	movk	x2, #0x5f5, lsl #16
   273d0:	movk	x5, #0x7711, lsl #32
   273d4:	movk	x5, #0xabcc, lsl #48
   273d8:	umulh	x5, x0, x5
   273dc:	lsr	x5, x5, #26
   273e0:	cmp	x5, #0x5
   273e4:	cset	w4, eq  // eq = none
   273e8:	msub	x2, x5, x2, x0
   273ec:	mov	x0, x5
   273f0:	b	27168 <PyInit__decimal@@Base+0xcbe8>
   273f4:	mov	x5, #0xd5bf                	// #54719
   273f8:	mov	x2, #0xe400                	// #58368
   273fc:	movk	x5, #0xbded, lsl #16
   27400:	movk	x2, #0x540b, lsl #16
   27404:	movk	x5, #0xfece, lsl #32
   27408:	movk	x2, #0x2, lsl #32
   2740c:	movk	x5, #0xdbe6, lsl #48
   27410:	umulh	x5, x0, x5
   27414:	lsr	x5, x5, #33
   27418:	cmp	x5, #0x5
   2741c:	cset	w4, eq  // eq = none
   27420:	msub	x2, x5, x2, x0
   27424:	mov	x0, x5
   27428:	b	27168 <PyInit__decimal@@Base+0xcbe8>
   2742c:	mov	x5, #0xcd81                	// #52609
   27430:	mov	x2, #0x4000                	// #16384
   27434:	movk	x5, #0x5095, lsl #16
   27438:	movk	x2, #0x107a, lsl #16
   2743c:	movk	x5, #0x4dc3, lsl #32
   27440:	movk	x2, #0x5af3, lsl #32
   27444:	movk	x5, #0xb42, lsl #48
   27448:	umulh	x5, x0, x5
   2744c:	lsr	x5, x5, #42
   27450:	cmp	x5, #0x5
   27454:	cset	w4, eq  // eq = none
   27458:	msub	x2, x5, x2, x0
   2745c:	mov	x0, x5
   27460:	b	27168 <PyInit__decimal@@Base+0xcbe8>
   27464:	mov	x5, #0x385                 	// #901
   27468:	mov	x2, #0xa000                	// #40960
   2746c:	movk	x5, #0x92ed, lsl #16
   27470:	movk	x2, #0x4e72, lsl #16
   27474:	movk	x5, #0x84d0, lsl #32
   27478:	movk	x2, #0x918, lsl #32
   2747c:	movk	x5, #0x384b, lsl #48
   27480:	umulh	x5, x0, x5
   27484:	lsr	x5, x5, #41
   27488:	cmp	x5, #0x5
   2748c:	cset	w4, eq  // eq = none
   27490:	msub	x2, x5, x2, x0
   27494:	mov	x0, x5
   27498:	b	27168 <PyInit__decimal@@Base+0xcbe8>
   2749c:	mov	x4, #0x7843                	// #30787
   274a0:	lsr	x5, x0, #5
   274a4:	movk	x4, #0x71b4, lsl #16
   274a8:	mov	x2, #0x86a0                	// #34464
   274ac:	movk	x4, #0x5ac4, lsl #32
   274b0:	movk	x2, #0x1, lsl #16
   274b4:	movk	x4, #0xa7c, lsl #48
   274b8:	umulh	x5, x5, x4
   274bc:	lsr	x5, x5, #7
   274c0:	cmp	x5, #0x5
   274c4:	cset	w4, eq  // eq = none
   274c8:	msub	x2, x5, x2, x0
   274cc:	mov	x0, x5
   274d0:	b	27168 <PyInit__decimal@@Base+0xcbe8>
   274d4:	mov	x4, #0x1b53                	// #6995
   274d8:	lsr	x5, x0, #17
   274dc:	movk	x4, #0xd519, lsl #16
   274e0:	mov	x2, #0x5d8a0000            	// #1569325056
   274e4:	movk	x4, #0x5c3b, lsl #32
   274e8:	movk	x2, #0x4578, lsl #32
   274ec:	movk	x2, #0x163, lsl #48
   274f0:	umulh	x5, x5, x4
   274f4:	lsr	x5, x5, #22
   274f8:	cmp	x5, #0x5
   274fc:	cset	w4, eq  // eq = none
   27500:	msub	x2, x5, x2, x0
   27504:	mov	x0, x5
   27508:	b	27168 <PyInit__decimal@@Base+0xcbe8>
   2750c:	nop
   27510:	stp	x29, x30, [sp, #-80]!
   27514:	mov	x29, sp
   27518:	stp	x21, x22, [sp, #32]
   2751c:	mov	x21, x0
   27520:	ldr	x0, [x0, #24]
   27524:	cmp	x0, #0x0
   27528:	b.le	2753c <PyInit__decimal@@Base+0xcfbc>
   2752c:	ldr	x1, [x1]
   27530:	ldr	x0, [x21, #16]
   27534:	cmp	x0, x1
   27538:	b.gt	2757c <PyInit__decimal@@Base+0xcffc>
   2753c:	ldrb	w0, [x21]
   27540:	tst	w0, #0xe
   27544:	b.ne	27570 <PyInit__decimal@@Base+0xcff0>  // b.any
   27548:	ldr	x1, [x21, #24]
   2754c:	ldr	x2, [x21, #40]
   27550:	add	x1, x2, x1, lsl #3
   27554:	ldur	x1, [x1, #-8]
   27558:	cbnz	x1, 27570 <PyInit__decimal@@Base+0xcff0>
   2755c:	ldr	x3, [x21, #8]
   27560:	and	w1, w0, #0x1
   27564:	mov	x2, #0x0                   	// #0
   27568:	mov	x0, x21
   2756c:	bl	26d90 <PyInit__decimal@@Base+0xc810>
   27570:	ldp	x21, x22, [sp, #32]
   27574:	ldp	x29, x30, [sp], #80
   27578:	ret
   2757c:	mov	x0, #0x9436                	// #37942
   27580:	stp	x19, x20, [sp, #16]
   27584:	movk	x0, #0x50d7, lsl #16
   27588:	movk	x0, #0x435e, lsl #32
   2758c:	movk	x0, #0xd79, lsl #48
   27590:	ldr	x2, [x21, #40]
   27594:	smulh	x0, x1, x0
   27598:	str	x23, [sp, #48]
   2759c:	sub	x0, x0, x1, asr #63
   275a0:	add	x3, x0, x0, lsl #2
   275a4:	lsl	x3, x3, #2
   275a8:	sub	x3, x3, x0
   275ac:	subs	x1, x1, x3
   275b0:	b.ne	27668 <PyInit__decimal@@Base+0xd0e8>  // b.any
   275b4:	lsl	x20, x0, #3
   275b8:	sub	x4, x0, #0x1
   275bc:	sub	x20, x20, #0x8
   275c0:	mov	x19, x0
   275c4:	adrp	x23, 42000 <PyInit__decimal@@Base+0x27a80>
   275c8:	cmp	x19, #0x1
   275cc:	b.le	277f0 <PyInit__decimal@@Base+0xd270>
   275d0:	lsl	x20, x19, #3
   275d4:	sub	x20, x20, #0x8
   275d8:	b	275e4 <PyInit__decimal@@Base+0xd064>
   275dc:	sub	x20, x20, #0x8
   275e0:	b.eq	276d0 <PyInit__decimal@@Base+0xd150>  // b.none
   275e4:	ldr	x0, [x2, x20]
   275e8:	mov	x22, x19
   275ec:	sub	x19, x19, #0x1
   275f0:	cmp	x19, #0x1
   275f4:	cbz	x0, 275dc <PyInit__decimal@@Base+0xd05c>
   275f8:	adrp	x1, 5f000 <PyInit__decimal@@Base+0x44a80>
   275fc:	ldrb	w0, [x21]
   27600:	ldr	x3, [x21, #32]
   27604:	ldr	x1, [x1, #1672]
   27608:	cmp	x1, x22
   2760c:	csel	x1, x1, x22, ge  // ge = tcont
   27610:	cmp	x1, x3
   27614:	b.eq	27624 <PyInit__decimal@@Base+0xd0a4>  // b.none
   27618:	tbz	w0, #5, 276e0 <PyInit__decimal@@Base+0xd160>
   2761c:	cmp	x1, x3
   27620:	b.gt	27774 <PyInit__decimal@@Base+0xd1f4>
   27624:	add	x1, x23, #0x2d0
   27628:	str	x22, [x21, #24]
   2762c:	ldr	x2, [x2, x20]
   27630:	ldr	x3, [x1, #72]
   27634:	cmp	x2, x3
   27638:	b.cs	27694 <PyInit__decimal@@Base+0xd114>  // b.hs, b.nlast
   2763c:	ldr	x3, [x1, #32]
   27640:	cmp	x2, x3
   27644:	b.cs	276f8 <PyInit__decimal@@Base+0xd178>  // b.hs, b.nlast
   27648:	ldr	x3, [x1, #16]
   2764c:	cmp	x2, x3
   27650:	b.cs	2778c <PyInit__decimal@@Base+0xd20c>  // b.hs, b.nlast
   27654:	ldr	x1, [x1, #8]
   27658:	cmp	x2, x1
   2765c:	cset	x3, cs  // cs = hs, nlast
   27660:	add	x3, x3, #0x1
   27664:	b	27728 <PyInit__decimal@@Base+0xd1a8>
   27668:	lsl	x20, x0, #3
   2766c:	adrp	x23, 42000 <PyInit__decimal@@Base+0x27a80>
   27670:	add	x5, x23, #0x2d0
   27674:	add	x19, x0, #0x1
   27678:	mov	x4, x0
   2767c:	ldr	x3, [x2, x20]
   27680:	ldr	x1, [x5, x1, lsl #3]
   27684:	udiv	x0, x3, x1
   27688:	msub	x0, x0, x1, x3
   2768c:	str	x0, [x2, x20]
   27690:	b	275c8 <PyInit__decimal@@Base+0xd048>
   27694:	ldr	x3, [x1, #112]
   27698:	cmp	x2, x3
   2769c:	b.cs	27748 <PyInit__decimal@@Base+0xd1c8>  // b.hs, b.nlast
   276a0:	ldr	x3, [x1, #88]
   276a4:	cmp	x2, x3
   276a8:	b.cc	277c8 <PyInit__decimal@@Base+0xd248>  // b.lo, b.ul, b.last
   276ac:	ldr	x4, [x1, #104]
   276b0:	mov	x3, #0xe                   	// #14
   276b4:	cmp	x2, x4
   276b8:	b.cs	27728 <PyInit__decimal@@Base+0xd1a8>  // b.hs, b.nlast
   276bc:	ldr	x1, [x1, #96]
   276c0:	cmp	x2, x1
   276c4:	cset	x3, cs  // cs = hs, nlast
   276c8:	add	x3, x3, #0xc
   276cc:	b	27728 <PyInit__decimal@@Base+0xd1a8>
   276d0:	mov	x22, x19
   276d4:	mov	x20, #0x0                   	// #0
   276d8:	mov	x19, #0x0                   	// #0
   276dc:	b	275f8 <PyInit__decimal@@Base+0xd078>
   276e0:	add	x2, sp, #0x4c
   276e4:	mov	x0, x21
   276e8:	bl	25588 <PyInit__decimal@@Base+0xb008>
   276ec:	ldrb	w0, [x21]
   276f0:	ldr	x2, [x21, #40]
   276f4:	b	27624 <PyInit__decimal@@Base+0xd0a4>
   276f8:	ldr	x3, [x1, #48]
   276fc:	cmp	x2, x3
   27700:	b.cc	277b4 <PyInit__decimal@@Base+0xd234>  // b.lo, b.ul, b.last
   27704:	ldr	x4, [x1, #64]
   27708:	mov	x3, #0x9                   	// #9
   2770c:	cmp	x2, x4
   27710:	b.cs	27728 <PyInit__decimal@@Base+0xd1a8>  // b.hs, b.nlast
   27714:	ldr	x1, [x1, #56]
   27718:	cmp	x2, x1
   2771c:	cset	x3, cs  // cs = hs, nlast
   27720:	add	x3, x3, #0x7
   27724:	nop
   27728:	add	x1, x19, x19, lsl #2
   2772c:	ldr	x23, [sp, #48]
   27730:	lsl	x1, x1, #2
   27734:	sub	x19, x1, x19
   27738:	add	x19, x19, x3
   2773c:	str	x19, [x21, #16]
   27740:	ldp	x19, x20, [sp, #16]
   27744:	b	27540 <PyInit__decimal@@Base+0xcfc0>
   27748:	ldr	x3, [x1, #144]
   2774c:	cmp	x2, x3
   27750:	b.cs	277a0 <PyInit__decimal@@Base+0xd220>  // b.hs, b.nlast
   27754:	ldr	x3, [x1, #128]
   27758:	cmp	x2, x3
   2775c:	b.cs	277dc <PyInit__decimal@@Base+0xd25c>  // b.hs, b.nlast
   27760:	ldr	x1, [x1, #120]
   27764:	cmp	x2, x1
   27768:	cset	x3, cs  // cs = hs, nlast
   2776c:	add	x3, x3, #0xf
   27770:	b	27728 <PyInit__decimal@@Base+0xd1a8>
   27774:	add	x2, sp, #0x4c
   27778:	mov	x0, x21
   2777c:	bl	25438 <PyInit__decimal@@Base+0xaeb8>
   27780:	ldrb	w0, [x21]
   27784:	ldr	x2, [x21, #40]
   27788:	b	27624 <PyInit__decimal@@Base+0xd0a4>
   2778c:	ldr	x1, [x1, #24]
   27790:	cmp	x2, x1
   27794:	cset	x3, cs  // cs = hs, nlast
   27798:	add	x3, x3, #0x3
   2779c:	b	27728 <PyInit__decimal@@Base+0xd1a8>
   277a0:	ldr	x1, [x1, #152]
   277a4:	cmp	x2, x1
   277a8:	cset	x3, cs  // cs = hs, nlast
   277ac:	add	x3, x3, #0x13
   277b0:	b	27728 <PyInit__decimal@@Base+0xd1a8>
   277b4:	ldr	x1, [x1, #40]
   277b8:	cmp	x2, x1
   277bc:	cset	x3, cs  // cs = hs, nlast
   277c0:	add	x3, x3, #0x5
   277c4:	b	27728 <PyInit__decimal@@Base+0xd1a8>
   277c8:	ldr	x1, [x1, #80]
   277cc:	cmp	x2, x1
   277d0:	cset	x3, cs  // cs = hs, nlast
   277d4:	add	x3, x3, #0xa
   277d8:	b	27728 <PyInit__decimal@@Base+0xd1a8>
   277dc:	ldr	x1, [x1, #136]
   277e0:	cmp	x2, x1
   277e4:	cset	x3, cs  // cs = hs, nlast
   277e8:	add	x3, x3, #0x11
   277ec:	b	27728 <PyInit__decimal@@Base+0xd1a8>
   277f0:	mov	x22, x19
   277f4:	mov	x19, x4
   277f8:	b	275f8 <PyInit__decimal@@Base+0xd078>
   277fc:	nop
   27800:	stp	x29, x30, [sp, #-80]!
   27804:	mov	x29, sp
   27808:	stp	x19, x20, [sp, #16]
   2780c:	mov	x20, x0
   27810:	ldr	x0, [x0, #24]
   27814:	cmp	x0, #0x0
   27818:	b.le	2797c <PyInit__decimal@@Base+0xd3fc>
   2781c:	ldr	x0, [x20, #16]
   27820:	sub	x1, x1, w2, sxtw
   27824:	cmp	x1, x0
   27828:	b.ge	2797c <PyInit__decimal@@Base+0xd3fc>  // b.tcont
   2782c:	cbz	x1, 27930 <PyInit__decimal@@Base+0xd3b0>
   27830:	mov	x0, #0x9436                	// #37942
   27834:	stp	x21, x22, [sp, #32]
   27838:	movk	x0, #0x50d7, lsl #16
   2783c:	movk	x0, #0x435e, lsl #32
   27840:	movk	x0, #0xd79, lsl #48
   27844:	ldr	x2, [x20, #40]
   27848:	smulh	x0, x1, x0
   2784c:	str	x23, [sp, #48]
   27850:	sub	x0, x0, x1, asr #63
   27854:	add	x3, x0, x0, lsl #2
   27858:	lsl	x3, x3, #2
   2785c:	sub	x3, x3, x0
   27860:	subs	x1, x1, x3
   27864:	b.ne	27988 <PyInit__decimal@@Base+0xd408>  // b.any
   27868:	lsl	x21, x0, #3
   2786c:	sub	x4, x0, #0x1
   27870:	sub	x21, x21, #0x8
   27874:	mov	x19, x0
   27878:	adrp	x23, 42000 <PyInit__decimal@@Base+0x27a80>
   2787c:	cmp	x19, #0x1
   27880:	b.le	27b00 <PyInit__decimal@@Base+0xd580>
   27884:	lsl	x21, x19, #3
   27888:	sub	x21, x21, #0x8
   2788c:	b	27898 <PyInit__decimal@@Base+0xd318>
   27890:	sub	x21, x21, #0x8
   27894:	b.eq	27a14 <PyInit__decimal@@Base+0xd494>  // b.none
   27898:	ldr	x0, [x2, x21]
   2789c:	mov	x22, x19
   278a0:	sub	x19, x19, #0x1
   278a4:	cmp	x19, #0x1
   278a8:	cbz	x0, 27890 <PyInit__decimal@@Base+0xd310>
   278ac:	adrp	x1, 5f000 <PyInit__decimal@@Base+0x44a80>
   278b0:	ldr	x0, [x20, #32]
   278b4:	ldr	x1, [x1, #1672]
   278b8:	cmp	x1, x22
   278bc:	csel	x1, x1, x22, ge  // ge = tcont
   278c0:	cmp	x1, x0
   278c4:	b.eq	278d8 <PyInit__decimal@@Base+0xd358>  // b.none
   278c8:	ldrb	w3, [x20]
   278cc:	tbz	w3, #5, 27a74 <PyInit__decimal@@Base+0xd4f4>
   278d0:	cmp	x1, x0
   278d4:	b.gt	27a88 <PyInit__decimal@@Base+0xd508>
   278d8:	add	x0, x23, #0x2d0
   278dc:	str	x22, [x20, #24]
   278e0:	add	x3, x2, x21
   278e4:	ldr	x1, [x2, x21]
   278e8:	ldr	x2, [x0, #72]
   278ec:	cmp	x1, x2
   278f0:	b.cs	279b4 <PyInit__decimal@@Base+0xd434>  // b.hs, b.nlast
   278f4:	ldr	x2, [x0, #32]
   278f8:	cmp	x1, x2
   278fc:	b.cc	27a54 <PyInit__decimal@@Base+0xd4d4>  // b.lo, b.ul, b.last
   27900:	ldr	x2, [x0, #48]
   27904:	cmp	x1, x2
   27908:	b.cc	27ad8 <PyInit__decimal@@Base+0xd558>  // b.lo, b.ul, b.last
   2790c:	ldr	x4, [x0, #64]
   27910:	mov	x2, #0x9                   	// #9
   27914:	cmp	x1, x4
   27918:	b.cs	279e8 <PyInit__decimal@@Base+0xd468>  // b.hs, b.nlast
   2791c:	ldr	x0, [x0, #56]
   27920:	cmp	x1, x0
   27924:	cset	x2, cs  // cs = hs, nlast
   27928:	add	x2, x2, #0x7
   2792c:	b	279e8 <PyInit__decimal@@Base+0xd468>
   27930:	ldrb	w0, [x20]
   27934:	tbnz	w0, #5, 27978 <PyInit__decimal@@Base+0xd3f8>
   27938:	adrp	x19, 5f000 <PyInit__decimal@@Base+0x44a80>
   2793c:	ldr	x0, [x20, #32]
   27940:	ldr	x1, [x19, #1672]
   27944:	cmp	x0, x1
   27948:	b.le	27978 <PyInit__decimal@@Base+0xd3f8>
   2794c:	ldr	x0, [x20, #40]
   27950:	add	x3, sp, #0x4c
   27954:	mov	x2, #0x8                   	// #8
   27958:	strb	wzr, [sp, #76]
   2795c:	bl	252a8 <PyInit__decimal@@Base+0xad28>
   27960:	str	x0, [x20, #40]
   27964:	ldrb	w1, [sp, #76]
   27968:	cbnz	w1, 27978 <PyInit__decimal@@Base+0xd3f8>
   2796c:	ldr	x0, [x19, #1672]
   27970:	str	x0, [x20, #32]
   27974:	nop
   27978:	stp	xzr, xzr, [x20, #16]
   2797c:	ldp	x19, x20, [sp, #16]
   27980:	ldp	x29, x30, [sp], #80
   27984:	ret
   27988:	lsl	x21, x0, #3
   2798c:	adrp	x23, 42000 <PyInit__decimal@@Base+0x27a80>
   27990:	add	x5, x23, #0x2d0
   27994:	add	x19, x0, #0x1
   27998:	mov	x4, x0
   2799c:	ldr	x3, [x2, x21]
   279a0:	ldr	x1, [x5, x1, lsl #3]
   279a4:	udiv	x0, x3, x1
   279a8:	msub	x0, x0, x1, x3
   279ac:	str	x0, [x2, x21]
   279b0:	b	2787c <PyInit__decimal@@Base+0xd2fc>
   279b4:	ldr	x2, [x0, #112]
   279b8:	cmp	x1, x2
   279bc:	b.cc	27a24 <PyInit__decimal@@Base+0xd4a4>  // b.lo, b.ul, b.last
   279c0:	ldr	x2, [x0, #144]
   279c4:	cmp	x1, x2
   279c8:	b.cs	27ab0 <PyInit__decimal@@Base+0xd530>  // b.hs, b.nlast
   279cc:	ldr	x2, [x0, #128]
   279d0:	cmp	x1, x2
   279d4:	b.cs	27aec <PyInit__decimal@@Base+0xd56c>  // b.hs, b.nlast
   279d8:	ldr	x0, [x0, #120]
   279dc:	cmp	x1, x0
   279e0:	cset	x2, cs  // cs = hs, nlast
   279e4:	add	x2, x2, #0xf
   279e8:	add	x0, x19, x19, lsl #2
   279ec:	ldp	x21, x22, [sp, #32]
   279f0:	lsl	x0, x0, #2
   279f4:	sub	x19, x0, x19
   279f8:	add	x19, x19, x2
   279fc:	ldr	x23, [sp, #48]
   27a00:	str	x19, [x20, #16]
   27a04:	ldr	x0, [x3]
   27a08:	cbnz	x0, 2797c <PyInit__decimal@@Base+0xd3fc>
   27a0c:	stp	xzr, xzr, [x20, #16]
   27a10:	b	2797c <PyInit__decimal@@Base+0xd3fc>
   27a14:	mov	x22, x19
   27a18:	mov	x21, #0x0                   	// #0
   27a1c:	mov	x19, #0x0                   	// #0
   27a20:	b	278ac <PyInit__decimal@@Base+0xd32c>
   27a24:	ldr	x2, [x0, #88]
   27a28:	cmp	x1, x2
   27a2c:	b.cc	27ac4 <PyInit__decimal@@Base+0xd544>  // b.lo, b.ul, b.last
   27a30:	ldr	x4, [x0, #104]
   27a34:	mov	x2, #0xe                   	// #14
   27a38:	cmp	x1, x4
   27a3c:	b.cs	279e8 <PyInit__decimal@@Base+0xd468>  // b.hs, b.nlast
   27a40:	ldr	x0, [x0, #96]
   27a44:	cmp	x1, x0
   27a48:	cset	x2, cs  // cs = hs, nlast
   27a4c:	add	x2, x2, #0xc
   27a50:	b	279e8 <PyInit__decimal@@Base+0xd468>
   27a54:	ldr	x2, [x0, #16]
   27a58:	cmp	x1, x2
   27a5c:	b.cs	27a9c <PyInit__decimal@@Base+0xd51c>  // b.hs, b.nlast
   27a60:	ldr	x0, [x0, #8]
   27a64:	cmp	x1, x0
   27a68:	cset	x2, cs  // cs = hs, nlast
   27a6c:	add	x2, x2, #0x1
   27a70:	b	279e8 <PyInit__decimal@@Base+0xd468>
   27a74:	add	x2, sp, #0x4c
   27a78:	mov	x0, x20
   27a7c:	bl	25588 <PyInit__decimal@@Base+0xb008>
   27a80:	ldr	x2, [x20, #40]
   27a84:	b	278d8 <PyInit__decimal@@Base+0xd358>
   27a88:	add	x2, sp, #0x4c
   27a8c:	mov	x0, x20
   27a90:	bl	25438 <PyInit__decimal@@Base+0xaeb8>
   27a94:	ldr	x2, [x20, #40]
   27a98:	b	278d8 <PyInit__decimal@@Base+0xd358>
   27a9c:	ldr	x0, [x0, #24]
   27aa0:	cmp	x1, x0
   27aa4:	cset	x2, cs  // cs = hs, nlast
   27aa8:	add	x2, x2, #0x3
   27aac:	b	279e8 <PyInit__decimal@@Base+0xd468>
   27ab0:	ldr	x0, [x0, #152]
   27ab4:	cmp	x1, x0
   27ab8:	cset	x2, cs  // cs = hs, nlast
   27abc:	add	x2, x2, #0x13
   27ac0:	b	279e8 <PyInit__decimal@@Base+0xd468>
   27ac4:	ldr	x0, [x0, #80]
   27ac8:	cmp	x1, x0
   27acc:	cset	x2, cs  // cs = hs, nlast
   27ad0:	add	x2, x2, #0xa
   27ad4:	b	279e8 <PyInit__decimal@@Base+0xd468>
   27ad8:	ldr	x0, [x0, #40]
   27adc:	cmp	x1, x0
   27ae0:	cset	x2, cs  // cs = hs, nlast
   27ae4:	add	x2, x2, #0x5
   27ae8:	b	279e8 <PyInit__decimal@@Base+0xd468>
   27aec:	ldr	x0, [x0, #136]
   27af0:	cmp	x1, x0
   27af4:	cset	x2, cs  // cs = hs, nlast
   27af8:	add	x2, x2, #0x11
   27afc:	b	279e8 <PyInit__decimal@@Base+0xd468>
   27b00:	mov	x22, x19
   27b04:	mov	x19, x4
   27b08:	b	278ac <PyInit__decimal@@Base+0xd32c>
   27b0c:	nop
   27b10:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27a80>
   27b14:	add	x0, x0, #0x858
   27b18:	ret
   27b1c:	nop
   27b20:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27a80>
   27b24:	add	x2, x2, #0x2d0
   27b28:	mov	x1, x0
   27b2c:	ldr	x0, [x2, #72]
   27b30:	cmp	x0, x1
   27b34:	b.ls	27b64 <PyInit__decimal@@Base+0xd5e4>  // b.plast
   27b38:	ldr	x0, [x2, #32]
   27b3c:	cmp	x0, x1
   27b40:	b.ls	27bcc <PyInit__decimal@@Base+0xd64c>  // b.plast
   27b44:	ldr	x0, [x2, #16]
   27b48:	cmp	x0, x1
   27b4c:	b.ls	27c10 <PyInit__decimal@@Base+0xd690>  // b.plast
   27b50:	ldr	x0, [x2, #8]
   27b54:	cmp	x0, x1
   27b58:	cset	w0, ls  // ls = plast
   27b5c:	add	w0, w0, #0x1
   27b60:	ret
   27b64:	ldr	x0, [x2, #112]
   27b68:	cmp	x0, x1
   27b6c:	b.ls	27ba0 <PyInit__decimal@@Base+0xd620>  // b.plast
   27b70:	ldr	x0, [x2, #88]
   27b74:	cmp	x0, x1
   27b78:	b.hi	27c24 <PyInit__decimal@@Base+0xd6a4>  // b.pmore
   27b7c:	ldr	x3, [x2, #104]
   27b80:	mov	w0, #0xe                   	// #14
   27b84:	cmp	x3, x1
   27b88:	b.ls	27b60 <PyInit__decimal@@Base+0xd5e0>  // b.plast
   27b8c:	ldr	x0, [x2, #96]
   27b90:	cmp	x0, x1
   27b94:	cset	w0, ls  // ls = plast
   27b98:	add	w0, w0, #0xc
   27b9c:	ret
   27ba0:	ldr	x0, [x2, #144]
   27ba4:	cmp	x0, x1
   27ba8:	b.ls	27bfc <PyInit__decimal@@Base+0xd67c>  // b.plast
   27bac:	ldr	x0, [x2, #128]
   27bb0:	cmp	x0, x1
   27bb4:	b.ls	27c4c <PyInit__decimal@@Base+0xd6cc>  // b.plast
   27bb8:	ldr	x0, [x2, #120]
   27bbc:	cmp	x0, x1
   27bc0:	cset	w0, ls  // ls = plast
   27bc4:	add	w0, w0, #0xf
   27bc8:	ret
   27bcc:	ldr	x0, [x2, #48]
   27bd0:	cmp	x0, x1
   27bd4:	b.hi	27c38 <PyInit__decimal@@Base+0xd6b8>  // b.pmore
   27bd8:	ldr	x3, [x2, #64]
   27bdc:	mov	w0, #0x9                   	// #9
   27be0:	cmp	x3, x1
   27be4:	b.ls	27b60 <PyInit__decimal@@Base+0xd5e0>  // b.plast
   27be8:	ldr	x0, [x2, #56]
   27bec:	cmp	x0, x1
   27bf0:	cset	w0, ls  // ls = plast
   27bf4:	add	w0, w0, #0x7
   27bf8:	ret
   27bfc:	ldr	x0, [x2, #152]
   27c00:	cmp	x0, x1
   27c04:	cset	w0, ls  // ls = plast
   27c08:	add	w0, w0, #0x13
   27c0c:	ret
   27c10:	ldr	x0, [x2, #24]
   27c14:	cmp	x0, x1
   27c18:	cset	w0, ls  // ls = plast
   27c1c:	add	w0, w0, #0x3
   27c20:	ret
   27c24:	ldr	x0, [x2, #80]
   27c28:	cmp	x0, x1
   27c2c:	cset	w0, ls  // ls = plast
   27c30:	add	w0, w0, #0xa
   27c34:	ret
   27c38:	ldr	x0, [x2, #40]
   27c3c:	cmp	x0, x1
   27c40:	cset	w0, ls  // ls = plast
   27c44:	add	w0, w0, #0x5
   27c48:	ret
   27c4c:	ldr	x0, [x2, #136]
   27c50:	cmp	x0, x1
   27c54:	cset	w0, ls  // ls = plast
   27c58:	add	w0, w0, #0x11
   27c5c:	ret
   27c60:	ldp	x1, x0, [x0, #8]
   27c64:	add	x0, x1, x0
   27c68:	sub	x0, x0, #0x1
   27c6c:	ret
   27c70:	ldr	x1, [x0, #16]
   27c74:	ldr	x2, [x0]
   27c78:	add	x0, x1, #0x1
   27c7c:	sub	x0, x0, x2
   27c80:	ret
   27c84:	nop
   27c88:	ldp	x2, x1, [x0]
   27c8c:	add	x0, x1, #0x1
   27c90:	sub	x0, x0, x2
   27c94:	ret
   27c98:	ldr	x1, [x0, #24]
   27c9c:	ldr	x0, [x0, #40]
   27ca0:	add	x0, x0, x1, lsl #3
   27ca4:	ldur	x0, [x0, #-8]
   27ca8:	ret
   27cac:	nop
   27cb0:	adrp	x3, 42000 <PyInit__decimal@@Base+0x27a80>
   27cb4:	add	x2, x3, #0x2d0
   27cb8:	ldr	x1, [x2, #72]
   27cbc:	cmp	x0, x1
   27cc0:	b.cs	27d20 <PyInit__decimal@@Base+0xd7a0>  // b.hs, b.nlast
   27cc4:	ldr	x1, [x2, #32]
   27cc8:	cmp	x0, x1
   27ccc:	b.cs	27cf4 <PyInit__decimal@@Base+0xd774>  // b.hs, b.nlast
   27cd0:	ldr	x1, [x2, #16]
   27cd4:	cmp	x0, x1
   27cd8:	b.cs	27d80 <PyInit__decimal@@Base+0xd800>  // b.hs, b.nlast
   27cdc:	ldr	x1, [x2, #8]
   27ce0:	ldr	x2, [x3, #720]
   27ce4:	cmp	x0, x1
   27ce8:	csel	x1, x2, x1, cc  // cc = lo, ul, last
   27cec:	udiv	x0, x0, x1
   27cf0:	ret
   27cf4:	ldr	x3, [x2, #48]
   27cf8:	cmp	x0, x3
   27cfc:	b.cc	27db8 <PyInit__decimal@@Base+0xd838>  // b.lo, b.ul, b.last
   27d00:	ldr	x1, [x2, #64]
   27d04:	cmp	x0, x1
   27d08:	b.cs	27d50 <PyInit__decimal@@Base+0xd7d0>  // b.hs, b.nlast
   27d0c:	ldr	x1, [x2, #56]
   27d10:	cmp	x0, x1
   27d14:	csel	x1, x1, x3, cs  // cs = hs, nlast
   27d18:	udiv	x0, x0, x1
   27d1c:	ret
   27d20:	ldr	x3, [x2, #112]
   27d24:	cmp	x0, x3
   27d28:	b.cs	27d58 <PyInit__decimal@@Base+0xd7d8>  // b.hs, b.nlast
   27d2c:	ldr	x3, [x2, #88]
   27d30:	cmp	x0, x3
   27d34:	b.cc	27da8 <PyInit__decimal@@Base+0xd828>  // b.lo, b.ul, b.last
   27d38:	ldr	x1, [x2, #104]
   27d3c:	cmp	x0, x1
   27d40:	b.cs	27d50 <PyInit__decimal@@Base+0xd7d0>  // b.hs, b.nlast
   27d44:	ldr	x1, [x2, #96]
   27d48:	cmp	x0, x1
   27d4c:	csel	x1, x1, x3, cs  // cs = hs, nlast
   27d50:	udiv	x0, x0, x1
   27d54:	ret
   27d58:	ldr	x1, [x2, #144]
   27d5c:	cmp	x0, x1
   27d60:	b.cs	27d94 <PyInit__decimal@@Base+0xd814>  // b.hs, b.nlast
   27d64:	ldr	x1, [x2, #128]
   27d68:	cmp	x0, x1
   27d6c:	b.cs	27dc8 <PyInit__decimal@@Base+0xd848>  // b.hs, b.nlast
   27d70:	ldr	x1, [x2, #120]
   27d74:	cmp	x0, x1
   27d78:	csel	x1, x1, x3, cs  // cs = hs, nlast
   27d7c:	b	27d50 <PyInit__decimal@@Base+0xd7d0>
   27d80:	ldr	x2, [x2, #24]
   27d84:	cmp	x0, x2
   27d88:	csel	x1, x1, x2, cc  // cc = lo, ul, last
   27d8c:	udiv	x0, x0, x1
   27d90:	ret
   27d94:	ldr	x2, [x2, #152]
   27d98:	cmp	x0, x2
   27d9c:	csel	x1, x1, x2, cc  // cc = lo, ul, last
   27da0:	udiv	x0, x0, x1
   27da4:	ret
   27da8:	ldr	x2, [x2, #80]
   27dac:	cmp	x0, x2
   27db0:	csel	x1, x1, x2, cc  // cc = lo, ul, last
   27db4:	b	27d50 <PyInit__decimal@@Base+0xd7d0>
   27db8:	ldr	x2, [x2, #40]
   27dbc:	cmp	x0, x2
   27dc0:	csel	x1, x1, x2, cc  // cc = lo, ul, last
   27dc4:	b	27d50 <PyInit__decimal@@Base+0xd7d0>
   27dc8:	ldr	x2, [x2, #136]
   27dcc:	cmp	x0, x2
   27dd0:	csel	x1, x1, x2, cc  // cc = lo, ul, last
   27dd4:	b	27d50 <PyInit__decimal@@Base+0xd7d0>
   27dd8:	mov	x1, #0xcccccccccccccccc    	// #-3689348814741910324
   27ddc:	movk	x1, #0xcccd
   27de0:	umulh	x1, x0, x1
   27de4:	lsr	x1, x1, #3
   27de8:	add	x1, x1, x1, lsl #2
   27dec:	sub	x0, x0, x1, lsl #1
   27df0:	ret
   27df4:	nop
   27df8:	mov	x1, #0x9436                	// #37942
   27dfc:	movk	x1, #0x50d7, lsl #16
   27e00:	movk	x1, #0x435e, lsl #32
   27e04:	movk	x1, #0xd79, lsl #48
   27e08:	smulh	x1, x0, x1
   27e0c:	sub	x1, x1, x0, asr #63
   27e10:	add	x2, x1, x1, lsl #2
   27e14:	lsl	x2, x2, #2
   27e18:	sub	x2, x2, x1
   27e1c:	cmp	x0, x2
   27e20:	cinc	x0, x1, ne  // ne = any
   27e24:	ret
   27e28:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27a80>
   27e2c:	add	x2, x2, #0x2d0
   27e30:	cmp	x0, #0x0
   27e34:	cneg	x1, x0, lt  // lt = tstop
   27e38:	ldr	x3, [x2, #72]
   27e3c:	cmp	x1, x3
   27e40:	b.cs	27ea0 <PyInit__decimal@@Base+0xd920>  // b.hs, b.nlast
   27e44:	ldr	x0, [x2, #32]
   27e48:	cmp	x1, x0
   27e4c:	b.cs	27e70 <PyInit__decimal@@Base+0xd8f0>  // b.hs, b.nlast
   27e50:	ldr	x0, [x2, #16]
   27e54:	cmp	x1, x0
   27e58:	b.cs	27f08 <PyInit__decimal@@Base+0xd988>  // b.hs, b.nlast
   27e5c:	ldr	x0, [x2, #8]
   27e60:	cmp	x1, x0
   27e64:	cset	w0, cs  // cs = hs, nlast
   27e68:	add	w0, w0, #0x1
   27e6c:	ret
   27e70:	ldr	x0, [x2, #48]
   27e74:	cmp	x1, x0
   27e78:	b.cc	27f30 <PyInit__decimal@@Base+0xd9b0>  // b.lo, b.ul, b.last
   27e7c:	ldr	x3, [x2, #64]
   27e80:	mov	w0, #0x9                   	// #9
   27e84:	cmp	x1, x3
   27e88:	b.cs	27e6c <PyInit__decimal@@Base+0xd8ec>  // b.hs, b.nlast
   27e8c:	ldr	x0, [x2, #56]
   27e90:	cmp	x1, x0
   27e94:	cset	w0, cs  // cs = hs, nlast
   27e98:	add	w0, w0, #0x7
   27e9c:	ret
   27ea0:	ldr	x0, [x2, #112]
   27ea4:	cmp	x1, x0
   27ea8:	b.cs	27edc <PyInit__decimal@@Base+0xd95c>  // b.hs, b.nlast
   27eac:	ldr	x0, [x2, #88]
   27eb0:	cmp	x1, x0
   27eb4:	b.cc	27f44 <PyInit__decimal@@Base+0xd9c4>  // b.lo, b.ul, b.last
   27eb8:	ldr	x3, [x2, #104]
   27ebc:	mov	w0, #0xe                   	// #14
   27ec0:	cmp	x1, x3
   27ec4:	b.cs	27e6c <PyInit__decimal@@Base+0xd8ec>  // b.hs, b.nlast
   27ec8:	ldr	x0, [x2, #96]
   27ecc:	cmp	x1, x0
   27ed0:	cset	w0, cs  // cs = hs, nlast
   27ed4:	add	w0, w0, #0xc
   27ed8:	ret
   27edc:	ldr	x0, [x2, #144]
   27ee0:	cmp	x1, x0
   27ee4:	b.cs	27f1c <PyInit__decimal@@Base+0xd99c>  // b.hs, b.nlast
   27ee8:	ldr	x0, [x2, #128]
   27eec:	cmp	x1, x0
   27ef0:	b.cs	27f58 <PyInit__decimal@@Base+0xd9d8>  // b.hs, b.nlast
   27ef4:	ldr	x0, [x2, #120]
   27ef8:	cmp	x1, x0
   27efc:	cset	w0, cs  // cs = hs, nlast
   27f00:	add	w0, w0, #0xf
   27f04:	ret
   27f08:	ldr	x0, [x2, #24]
   27f0c:	cmp	x1, x0
   27f10:	cset	w0, cs  // cs = hs, nlast
   27f14:	add	w0, w0, #0x3
   27f18:	ret
   27f1c:	ldr	x0, [x2, #152]
   27f20:	cmp	x1, x0
   27f24:	cset	w0, cs  // cs = hs, nlast
   27f28:	add	w0, w0, #0x13
   27f2c:	ret
   27f30:	ldr	x0, [x2, #40]
   27f34:	cmp	x1, x0
   27f38:	cset	w0, cs  // cs = hs, nlast
   27f3c:	add	w0, w0, #0x5
   27f40:	ret
   27f44:	ldr	x0, [x2, #80]
   27f48:	cmp	x1, x0
   27f4c:	cset	w0, cs  // cs = hs, nlast
   27f50:	add	w0, w0, #0xa
   27f54:	ret
   27f58:	ldr	x0, [x2, #136]
   27f5c:	cmp	x1, x0
   27f60:	cset	w0, cs  // cs = hs, nlast
   27f64:	add	w0, w0, #0x11
   27f68:	ret
   27f6c:	nop
   27f70:	mov	w0, #0x1                   	// #1
   27f74:	ret
   27f78:	ldrb	w0, [x0]
   27f7c:	tst	w0, #0xe
   27f80:	cset	w0, eq  // eq = none
   27f84:	ret
   27f88:	ldrb	w0, [x0]
   27f8c:	and	w0, w0, #0x2
   27f90:	ret
   27f94:	nop
   27f98:	ldrb	w0, [x0]
   27f9c:	and	w0, w0, #0xc
   27fa0:	ret
   27fa4:	nop
   27fa8:	ldrb	w0, [x0]
   27fac:	and	w0, w0, #0x1
   27fb0:	ret
   27fb4:	nop
   27fb8:	ldrb	w0, [x0]
   27fbc:	mvn	w0, w0
   27fc0:	and	w0, w0, #0x1
   27fc4:	ret
   27fc8:	ldrb	w0, [x0]
   27fcc:	and	w0, w0, #0x4
   27fd0:	ret
   27fd4:	nop
   27fd8:	ldrb	w0, [x0]
   27fdc:	and	w0, w0, #0x1
   27fe0:	ret
   27fe4:	nop
   27fe8:	ldrb	w0, [x0]
   27fec:	and	w0, w0, #0x8
   27ff0:	ret
   27ff4:	nop
   27ff8:	ldrb	w0, [x0]
   27ffc:	and	w0, w0, #0xe
   28000:	ret
   28004:	nop
   28008:	ldrb	w1, [x0]
   2800c:	tst	w1, #0xe
   28010:	b.ne	28030 <PyInit__decimal@@Base+0xdab0>  // b.any
   28014:	ldr	x1, [x0, #24]
   28018:	ldr	x0, [x0, #40]
   2801c:	add	x0, x0, x1, lsl #3
   28020:	ldur	x0, [x0, #-8]
   28024:	cmp	x0, #0x0
   28028:	cset	w0, eq  // eq = none
   2802c:	ret
   28030:	mov	w0, #0x0                   	// #0
   28034:	ret
   28038:	ldr	x1, [x0, #24]
   2803c:	ldr	x0, [x0, #40]
   28040:	add	x0, x0, x1, lsl #3
   28044:	ldur	x0, [x0, #-8]
   28048:	cmp	x0, #0x0
   2804c:	cset	w0, eq  // eq = none
   28050:	ret
   28054:	nop
   28058:	mov	x2, x0
   2805c:	ldrb	w0, [x0]
   28060:	tst	w0, #0xe
   28064:	b.ne	2809c <PyInit__decimal@@Base+0xdb1c>  // b.any
   28068:	ldr	x3, [x2, #24]
   2806c:	mov	w0, #0x0                   	// #0
   28070:	ldr	x4, [x2, #40]
   28074:	add	x3, x4, x3, lsl #3
   28078:	ldur	x3, [x3, #-8]
   2807c:	cbz	x3, 28098 <PyInit__decimal@@Base+0xdb18>
   28080:	ldp	x0, x2, [x2, #8]
   28084:	ldr	x1, [x1, #16]
   28088:	add	x0, x0, x2
   2808c:	sub	x0, x0, #0x1
   28090:	cmp	x0, x1
   28094:	cset	w0, ge  // ge = tcont
   28098:	ret
   2809c:	mov	w0, #0x0                   	// #0
   280a0:	ret
   280a4:	nop
   280a8:	mov	x2, x0
   280ac:	ldrb	w0, [x0]
   280b0:	tst	w0, #0xe
   280b4:	b.ne	280ec <PyInit__decimal@@Base+0xdb6c>  // b.any
   280b8:	ldr	x3, [x2, #24]
   280bc:	mov	w0, #0x0                   	// #0
   280c0:	ldr	x4, [x2, #40]
   280c4:	add	x3, x4, x3, lsl #3
   280c8:	ldur	x3, [x3, #-8]
   280cc:	cbz	x3, 280e8 <PyInit__decimal@@Base+0xdb68>
   280d0:	ldp	x0, x2, [x2, #8]
   280d4:	ldr	x1, [x1, #16]
   280d8:	add	x0, x0, x2
   280dc:	sub	x0, x0, #0x1
   280e0:	cmp	x0, x1
   280e4:	cset	w0, lt  // lt = tstop
   280e8:	ret
   280ec:	mov	w0, #0x0                   	// #0
   280f0:	ret
   280f4:	nop
   280f8:	and	w0, w0, #0x1
   280fc:	ret
   28100:	ldr	x0, [x0, #40]
   28104:	ldr	x0, [x0]
   28108:	and	w0, w0, #0x1
   2810c:	ret
   28110:	ldrb	w0, [x0]
   28114:	and	w0, w0, #0x1
   28118:	ret
   2811c:	nop
   28120:	ldrb	w0, [x0]
   28124:	sbfx	x0, x0, #0, #1
   28128:	lsl	w0, w0, #1
   2812c:	add	w0, w0, #0x1
   28130:	ret
   28134:	nop
   28138:	mov	x0, #0xa                   	// #10
   2813c:	ret
   28140:	ldrb	w0, [x0]
   28144:	eor	x0, x0, #0x10
   28148:	ubfx	w0, w0, #4, #1
   2814c:	ret
   28150:	ldrb	w0, [x0]
   28154:	and	w0, w0, #0x10
   28158:	ret
   2815c:	nop
   28160:	ldrb	w0, [x0]
   28164:	tst	w0, #0xe0
   28168:	cset	w0, eq  // eq = none
   2816c:	ret
   28170:	ldrb	w0, [x0]
   28174:	and	w0, w0, #0x20
   28178:	ret
   2817c:	nop
   28180:	ldrb	w0, [x0]
   28184:	and	w0, w0, #0x40
   28188:	ret
   2818c:	nop
   28190:	ldrb	w0, [x0]
   28194:	and	w0, w0, #0x80
   28198:	ret
   2819c:	nop
   281a0:	cbz	x1, 281b4 <PyInit__decimal@@Base+0xdc34>
   281a4:	add	x1, x0, x1, lsl #3
   281a8:	str	xzr, [x0], #8
   281ac:	cmp	x0, x1
   281b0:	b.ne	281a8 <PyInit__decimal@@Base+0xdc28>  // b.any
   281b4:	ret
   281b8:	stp	x29, x30, [sp, #-32]!
   281bc:	mov	x29, sp
   281c0:	str	x19, [sp, #16]
   281c4:	mov	x19, x0
   281c8:	ldrb	w0, [x0]
   281cc:	tst	w0, #0xe0
   281d0:	b.ne	281e8 <PyInit__decimal@@Base+0xdc68>  // b.any
   281d4:	adrp	x1, 5f000 <PyInit__decimal@@Base+0x44a80>
   281d8:	ldr	x0, [x19, #40]
   281dc:	ldr	x1, [x1, #1704]
   281e0:	blr	x1
   281e4:	ldrb	w0, [x19]
   281e8:	tbnz	w0, #4, 28208 <PyInit__decimal@@Base+0xdc88>
   281ec:	mov	x0, x19
   281f0:	adrp	x1, 5f000 <PyInit__decimal@@Base+0x44a80>
   281f4:	ldr	x19, [sp, #16]
   281f8:	ldp	x29, x30, [sp], #32
   281fc:	ldr	x1, [x1, #1704]
   28200:	mov	x16, x1
   28204:	br	x16
   28208:	ldr	x19, [sp, #16]
   2820c:	ldp	x29, x30, [sp], #32
   28210:	ret
   28214:	nop
   28218:	adrp	x3, 5f000 <PyInit__decimal@@Base+0x44a80>
   2821c:	ldr	x5, [x0, #32]
   28220:	ldr	x3, [x3, #1672]
   28224:	cmp	x3, x1
   28228:	csel	x1, x3, x1, ge  // ge = tcont
   2822c:	cmp	x5, x1
   28230:	b.eq	28244 <PyInit__decimal@@Base+0xdcc4>  // b.none
   28234:	ldrb	w3, [x0]
   28238:	tbz	w3, #5, 2824c <PyInit__decimal@@Base+0xdccc>
   2823c:	cmp	x5, x1
   28240:	b.lt	28250 <PyInit__decimal@@Base+0xdcd0>  // b.tstop
   28244:	mov	w0, #0x1                   	// #1
   28248:	ret
   2824c:	b	25588 <PyInit__decimal@@Base+0xb008>
   28250:	b	25438 <PyInit__decimal@@Base+0xaeb8>
   28254:	nop
   28258:	stp	x29, x30, [sp, #-32]!
   2825c:	adrp	x3, 5f000 <PyInit__decimal@@Base+0x44a80>
   28260:	mov	x29, sp
   28264:	ldr	x3, [x3, #1672]
   28268:	stp	x19, x20, [sp, #16]
   2826c:	mov	x20, x0
   28270:	ldr	x4, [x0, #32]
   28274:	cmp	x3, x1
   28278:	csel	x19, x3, x1, ge  // ge = tcont
   2827c:	cmp	x4, x19
   28280:	b.eq	28294 <PyInit__decimal@@Base+0xdd14>  // b.none
   28284:	ldrb	w1, [x0]
   28288:	tbz	w1, #5, 282bc <PyInit__decimal@@Base+0xdd3c>
   2828c:	cmp	x4, x19
   28290:	b.lt	282cc <PyInit__decimal@@Base+0xdd4c>  // b.tstop
   28294:	ldr	x0, [x20, #40]
   28298:	add	x2, x0, x19, lsl #3
   2829c:	cbz	x19, 282ac <PyInit__decimal@@Base+0xdd2c>
   282a0:	str	xzr, [x0], #8
   282a4:	cmp	x0, x2
   282a8:	b.ne	282a0 <PyInit__decimal@@Base+0xdd20>  // b.any
   282ac:	mov	w0, #0x1                   	// #1
   282b0:	ldp	x19, x20, [sp, #16]
   282b4:	ldp	x29, x30, [sp], #32
   282b8:	ret
   282bc:	mov	x1, x19
   282c0:	bl	25588 <PyInit__decimal@@Base+0xb008>
   282c4:	cbnz	w0, 28294 <PyInit__decimal@@Base+0xdd14>
   282c8:	b	282b0 <PyInit__decimal@@Base+0xdd30>
   282cc:	mov	x1, x19
   282d0:	ldp	x19, x20, [sp, #16]
   282d4:	ldp	x29, x30, [sp], #32
   282d8:	b	254e8 <PyInit__decimal@@Base+0xaf68>
   282dc:	nop
   282e0:	stp	x29, x30, [sp, #-48]!
   282e4:	mov	x29, sp
   282e8:	stp	x19, x20, [sp, #16]
   282ec:	mov	x19, x0
   282f0:	ldrb	w0, [x0]
   282f4:	tbnz	w0, #5, 2830c <PyInit__decimal@@Base+0xdd8c>
   282f8:	adrp	x20, 5f000 <PyInit__decimal@@Base+0x44a80>
   282fc:	ldr	x0, [x19, #32]
   28300:	ldr	x1, [x20, #1672]
   28304:	cmp	x0, x1
   28308:	b.gt	28318 <PyInit__decimal@@Base+0xdd98>
   2830c:	ldp	x19, x20, [sp, #16]
   28310:	ldp	x29, x30, [sp], #48
   28314:	ret
   28318:	ldr	x0, [x19, #40]
   2831c:	add	x3, sp, #0x2f
   28320:	mov	x2, #0x8                   	// #8
   28324:	strb	wzr, [sp, #47]
   28328:	bl	252a8 <PyInit__decimal@@Base+0xad28>
   2832c:	str	x0, [x19, #40]
   28330:	ldrb	w1, [sp, #47]
   28334:	cbnz	w1, 2830c <PyInit__decimal@@Base+0xdd8c>
   28338:	ldr	x0, [x20, #1672]
   2833c:	str	x0, [x19, #32]
   28340:	b	2830c <PyInit__decimal@@Base+0xdd8c>
   28344:	nop
   28348:	stp	x29, x30, [sp, #-48]!
   2834c:	adrp	x3, 5f000 <PyInit__decimal@@Base+0x44a80>
   28350:	mov	x29, sp
   28354:	ldr	x3, [x3, #1672]
   28358:	stp	x19, x20, [sp, #16]
   2835c:	ldr	x5, [x0, #32]
   28360:	cmp	x3, x1
   28364:	str	wzr, [sp, #44]
   28368:	csel	x1, x3, x1, ge  // ge = tcont
   2836c:	cmp	x1, x5
   28370:	b.eq	28388 <PyInit__decimal@@Base+0xde08>  // b.none
   28374:	mov	x20, x2
   28378:	ldrb	w2, [x0]
   2837c:	tbz	w2, #5, 2839c <PyInit__decimal@@Base+0xde1c>
   28380:	cmp	x1, x5
   28384:	b.gt	283bc <PyInit__decimal@@Base+0xde3c>
   28388:	mov	w19, #0x1                   	// #1
   2838c:	mov	w0, w19
   28390:	ldp	x19, x20, [sp, #16]
   28394:	ldp	x29, x30, [sp], #48
   28398:	ret
   2839c:	add	x2, sp, #0x2c
   283a0:	bl	25588 <PyInit__decimal@@Base+0xb008>
   283a4:	mov	w19, w0
   283a8:	cbnz	w19, 28388 <PyInit__decimal@@Base+0xde08>
   283ac:	ldr	w1, [sp, #44]
   283b0:	mov	x0, x20
   283b4:	bl	1d780 <PyInit__decimal@@Base+0x3200>
   283b8:	b	2838c <PyInit__decimal@@Base+0xde0c>
   283bc:	add	x2, sp, #0x2c
   283c0:	bl	25438 <PyInit__decimal@@Base+0xaeb8>
   283c4:	mov	w19, w0
   283c8:	cbnz	w19, 28388 <PyInit__decimal@@Base+0xde08>
   283cc:	b	283ac <PyInit__decimal@@Base+0xde2c>
   283d0:	stp	x29, x30, [sp, #-64]!
   283d4:	adrp	x3, 5f000 <PyInit__decimal@@Base+0x44a80>
   283d8:	mov	x29, sp
   283dc:	ldr	x3, [x3, #1672]
   283e0:	stp	x19, x20, [sp, #16]
   283e4:	mov	x20, x0
   283e8:	ldr	x4, [x0, #32]
   283ec:	cmp	x3, x1
   283f0:	str	wzr, [sp, #60]
   283f4:	csel	x19, x3, x1, ge  // ge = tcont
   283f8:	cmp	x19, x4
   283fc:	b.eq	2841c <PyInit__decimal@@Base+0xde9c>  // b.none
   28400:	str	x21, [sp, #32]
   28404:	mov	x21, x2
   28408:	ldrb	w1, [x0]
   2840c:	tbz	w1, #5, 28444 <PyInit__decimal@@Base+0xdec4>
   28410:	cmp	x19, x4
   28414:	b.gt	2845c <PyInit__decimal@@Base+0xdedc>
   28418:	ldr	x21, [sp, #32]
   2841c:	ldr	x0, [x20, #40]
   28420:	add	x1, x0, x19, lsl #3
   28424:	cbz	x19, 28434 <PyInit__decimal@@Base+0xdeb4>
   28428:	str	xzr, [x0], #8
   2842c:	cmp	x0, x1
   28430:	b.ne	28428 <PyInit__decimal@@Base+0xdea8>  // b.any
   28434:	mov	w0, #0x1                   	// #1
   28438:	ldp	x19, x20, [sp, #16]
   2843c:	ldp	x29, x30, [sp], #64
   28440:	ret
   28444:	add	x2, sp, #0x3c
   28448:	mov	x1, x19
   2844c:	bl	25588 <PyInit__decimal@@Base+0xb008>
   28450:	cbz	w0, 2846c <PyInit__decimal@@Base+0xdeec>
   28454:	ldr	x21, [sp, #32]
   28458:	b	2841c <PyInit__decimal@@Base+0xde9c>
   2845c:	mov	x1, x19
   28460:	add	x2, sp, #0x3c
   28464:	bl	254e8 <PyInit__decimal@@Base+0xaf68>
   28468:	cbnz	w0, 2848c <PyInit__decimal@@Base+0xdf0c>
   2846c:	ldr	w1, [sp, #60]
   28470:	mov	x0, x21
   28474:	bl	1d780 <PyInit__decimal@@Base+0x3200>
   28478:	mov	w0, #0x0                   	// #0
   2847c:	ldp	x19, x20, [sp, #16]
   28480:	ldr	x21, [sp, #32]
   28484:	ldp	x29, x30, [sp], #64
   28488:	ret
   2848c:	ldr	x21, [sp, #32]
   28490:	b	28434 <PyInit__decimal@@Base+0xdeb4>
   28494:	nop
   28498:	ldr	x2, [x0, #24]
   2849c:	adrp	x1, 42000 <PyInit__decimal@@Base+0x27a80>
   284a0:	ldr	x3, [x0, #40]
   284a4:	add	x1, x1, #0x2d0
   284a8:	add	x3, x3, x2, lsl #3
   284ac:	ldr	x4, [x1, #72]
   284b0:	ldur	x3, [x3, #-8]
   284b4:	cmp	x4, x3
   284b8:	b.ls	28540 <PyInit__decimal@@Base+0xdfc0>  // b.plast
   284bc:	ldr	x4, [x1, #32]
   284c0:	cmp	x4, x3
   284c4:	b.ls	284fc <PyInit__decimal@@Base+0xdf7c>  // b.plast
   284c8:	ldr	x4, [x1, #16]
   284cc:	cmp	x4, x3
   284d0:	b.ls	285bc <PyInit__decimal@@Base+0xe03c>  // b.plast
   284d4:	ldr	x1, [x1, #8]
   284d8:	cmp	x1, x3
   284dc:	sub	x1, x2, #0x1
   284e0:	cset	x4, ls  // ls = plast
   284e4:	add	x2, x1, x1, lsl #2
   284e8:	add	x4, x4, #0x1
   284ec:	add	x2, x4, x2, lsl #2
   284f0:	sub	x1, x2, x1
   284f4:	str	x1, [x0, #16]
   284f8:	ret
   284fc:	ldr	x4, [x1, #48]
   28500:	cmp	x4, x3
   28504:	b.hi	28620 <PyInit__decimal@@Base+0xe0a0>  // b.pmore
   28508:	ldr	x5, [x1, #64]
   2850c:	mov	x4, #0x9                   	// #9
   28510:	cmp	x5, x3
   28514:	b.ls	28578 <PyInit__decimal@@Base+0xdff8>  // b.plast
   28518:	ldr	x1, [x1, #56]
   2851c:	cmp	x1, x3
   28520:	sub	x1, x2, #0x1
   28524:	cset	x4, ls  // ls = plast
   28528:	add	x2, x1, x1, lsl #2
   2852c:	add	x4, x4, #0x7
   28530:	add	x2, x4, x2, lsl #2
   28534:	sub	x1, x2, x1
   28538:	str	x1, [x0, #16]
   2853c:	ret
   28540:	ldr	x4, [x1, #112]
   28544:	cmp	x4, x3
   28548:	b.ls	28590 <PyInit__decimal@@Base+0xe010>  // b.plast
   2854c:	ldr	x4, [x1, #88]
   28550:	cmp	x4, x3
   28554:	b.hi	2860c <PyInit__decimal@@Base+0xe08c>  // b.pmore
   28558:	ldr	x5, [x1, #104]
   2855c:	mov	x4, #0xe                   	// #14
   28560:	cmp	x5, x3
   28564:	b.ls	28578 <PyInit__decimal@@Base+0xdff8>  // b.plast
   28568:	ldr	x1, [x1, #96]
   2856c:	cmp	x1, x3
   28570:	cset	x4, ls  // ls = plast
   28574:	add	x4, x4, #0xc
   28578:	sub	x1, x2, #0x1
   2857c:	add	x2, x1, x1, lsl #2
   28580:	add	x2, x4, x2, lsl #2
   28584:	sub	x1, x2, x1
   28588:	str	x1, [x0, #16]
   2858c:	ret
   28590:	ldr	x4, [x1, #144]
   28594:	cmp	x4, x3
   28598:	b.ls	285e4 <PyInit__decimal@@Base+0xe064>  // b.plast
   2859c:	ldr	x4, [x1, #128]
   285a0:	cmp	x4, x3
   285a4:	b.ls	28634 <PyInit__decimal@@Base+0xe0b4>  // b.plast
   285a8:	ldr	x1, [x1, #120]
   285ac:	cmp	x1, x3
   285b0:	cset	x4, ls  // ls = plast
   285b4:	add	x4, x4, #0xf
   285b8:	b	28578 <PyInit__decimal@@Base+0xdff8>
   285bc:	ldr	x1, [x1, #24]
   285c0:	cmp	x1, x3
   285c4:	sub	x1, x2, #0x1
   285c8:	cset	x4, ls  // ls = plast
   285cc:	add	x2, x1, x1, lsl #2
   285d0:	add	x4, x4, #0x3
   285d4:	add	x2, x4, x2, lsl #2
   285d8:	sub	x1, x2, x1
   285dc:	str	x1, [x0, #16]
   285e0:	ret
   285e4:	ldr	x1, [x1, #152]
   285e8:	cmp	x1, x3
   285ec:	sub	x1, x2, #0x1
   285f0:	cset	x4, ls  // ls = plast
   285f4:	add	x2, x1, x1, lsl #2
   285f8:	add	x4, x4, #0x13
   285fc:	add	x2, x4, x2, lsl #2
   28600:	sub	x1, x2, x1
   28604:	str	x1, [x0, #16]
   28608:	ret
   2860c:	ldr	x1, [x1, #80]
   28610:	cmp	x1, x3
   28614:	cset	x4, ls  // ls = plast
   28618:	add	x4, x4, #0xa
   2861c:	b	28578 <PyInit__decimal@@Base+0xdff8>
   28620:	ldr	x1, [x1, #40]
   28624:	cmp	x1, x3
   28628:	cset	x4, ls  // ls = plast
   2862c:	add	x4, x4, #0x5
   28630:	b	28578 <PyInit__decimal@@Base+0xdff8>
   28634:	ldr	x1, [x1, #136]
   28638:	cmp	x1, x3
   2863c:	cset	x4, ls  // ls = plast
   28640:	add	x4, x4, #0x11
   28644:	b	28578 <PyInit__decimal@@Base+0xdff8>
   28648:	ldrb	w2, [x0]
   2864c:	and	w2, w2, #0xfffffffe
   28650:	orr	w1, w1, w2
   28654:	strb	w1, [x0]
   28658:	ret
   2865c:	nop
   28660:	ldrb	w2, [x1]
   28664:	ldrb	w1, [x0]
   28668:	bfxil	w1, w2, #0, #1
   2866c:	strb	w1, [x0]
   28670:	ret
   28674:	nop
   28678:	ldrb	w1, [x0]
   2867c:	and	w1, w1, #0xfffffff1
   28680:	orr	w1, w1, #0x2
   28684:	strb	w1, [x0]
   28688:	ret
   2868c:	nop
   28690:	ldrb	w1, [x0]
   28694:	and	w1, w1, #0xfffffff1
   28698:	orr	w1, w1, #0x4
   2869c:	strb	w1, [x0]
   286a0:	ret
   286a4:	nop
   286a8:	ldrb	w1, [x0]
   286ac:	and	w1, w1, #0xfffffff1
   286b0:	orr	w1, w1, #0x8
   286b4:	strb	w1, [x0]
   286b8:	ret
   286bc:	nop
   286c0:	ldrb	w1, [x0]
   286c4:	orr	w1, w1, #0x1
   286c8:	strb	w1, [x0]
   286cc:	ret
   286d0:	ldrb	w1, [x0]
   286d4:	and	w1, w1, #0xfffffffe
   286d8:	strb	w1, [x0]
   286dc:	ret
   286e0:	ldrb	w1, [x0]
   286e4:	and	w1, w1, #0xffffffef
   286e8:	strb	w1, [x0]
   286ec:	ret
   286f0:	ldrb	w1, [x0]
   286f4:	orr	w1, w1, #0x10
   286f8:	strb	w1, [x0]
   286fc:	ret
   28700:	ldrb	w1, [x0]
   28704:	and	w1, w1, #0x1f
   28708:	strb	w1, [x0]
   2870c:	ret
   28710:	ldrb	w1, [x0]
   28714:	and	w1, w1, #0x1f
   28718:	orr	w1, w1, #0x20
   2871c:	strb	w1, [x0]
   28720:	ret
   28724:	nop
   28728:	ldrb	w1, [x0]
   2872c:	and	w1, w1, #0x1f
   28730:	orr	w1, w1, #0x40
   28734:	strb	w1, [x0]
   28738:	ret
   2873c:	nop
   28740:	ldrb	w1, [x0]
   28744:	and	w1, w1, #0x1f
   28748:	orr	w1, w1, #0xffffff80
   2874c:	strb	w1, [x0]
   28750:	ret
   28754:	nop
   28758:	ldrb	w1, [x0]
   2875c:	and	w1, w1, #0xfffffff0
   28760:	strb	w1, [x0]
   28764:	ret
   28768:	ldrb	w2, [x0]
   2876c:	and	w2, w2, #0xfffffff0
   28770:	orr	w1, w1, w2
   28774:	strb	w1, [x0]
   28778:	ret
   2877c:	nop
   28780:	ldrb	w2, [x1]
   28784:	ldrb	w1, [x0]
   28788:	bfxil	w1, w2, #0, #4
   2878c:	strb	w1, [x0]
   28790:	ret
   28794:	nop
   28798:	stp	x29, x30, [sp, #-48]!
   2879c:	mov	x29, sp
   287a0:	stp	x19, x20, [sp, #16]
   287a4:	mov	x19, x0
   287a8:	ldrb	w1, [x0]
   287ac:	ldr	x0, [x0, #40]
   287b0:	tbnz	w1, #5, 287c8 <PyInit__decimal@@Base+0xe248>
   287b4:	adrp	x20, 5f000 <PyInit__decimal@@Base+0x44a80>
   287b8:	ldr	x2, [x19, #32]
   287bc:	ldr	x1, [x20, #1672]
   287c0:	cmp	x2, x1
   287c4:	b.gt	287e0 <PyInit__decimal@@Base+0xe260>
   287c8:	mov	x1, #0x1                   	// #1
   287cc:	stp	x1, x1, [x19, #16]
   287d0:	ldp	x19, x20, [sp, #16]
   287d4:	str	xzr, [x0]
   287d8:	ldp	x29, x30, [sp], #48
   287dc:	ret
   287e0:	add	x3, sp, #0x2f
   287e4:	mov	x2, #0x8                   	// #8
   287e8:	strb	wzr, [sp, #47]
   287ec:	bl	252a8 <PyInit__decimal@@Base+0xad28>
   287f0:	ldrb	w1, [sp, #47]
   287f4:	str	x0, [x19, #40]
   287f8:	cbnz	w1, 287c8 <PyInit__decimal@@Base+0xe248>
   287fc:	ldr	x1, [x20, #1672]
   28800:	str	x1, [x19, #32]
   28804:	b	287c8 <PyInit__decimal@@Base+0xe248>
   28808:	stp	x29, x30, [sp, #-144]!
   2880c:	mov	x29, sp
   28810:	stp	x21, x22, [sp, #32]
   28814:	stp	x23, x24, [sp, #48]
   28818:	mov	x23, x2
   2881c:	ldrb	w22, [x1]
   28820:	tst	w22, #0xe
   28824:	b.ne	28930 <PyInit__decimal@@Base+0xe3b0>  // b.any
   28828:	stp	x19, x20, [sp, #16]
   2882c:	mov	w3, w0
   28830:	mov	x19, x1
   28834:	ldr	x20, [x1, #24]
   28838:	ldr	x7, [x1, #40]
   2883c:	mov	x10, x20
   28840:	lsl	x24, x20, #3
   28844:	sub	x21, x24, #0x8
   28848:	add	x9, x7, x21
   2884c:	ldr	x0, [x7, x21]
   28850:	cbnz	x0, 28868 <PyInit__decimal@@Base+0xe2e8>
   28854:	ldp	x19, x20, [sp, #16]
   28858:	ldp	x21, x22, [sp, #32]
   2885c:	ldp	x23, x24, [sp, #48]
   28860:	ldp	x29, x30, [sp], #144
   28864:	ret
   28868:	cbnz	w3, 28928 <PyInit__decimal@@Base+0xe3a8>
   2886c:	stp	x25, x26, [sp, #64]
   28870:	ldp	x8, x25, [x19, #8]
   28874:	add	x11, x25, x8
   28878:	cmp	x11, #0x14
   2887c:	b.gt	28900 <PyInit__decimal@@Base+0xe380>
   28880:	tbnz	x8, #63, 28950 <PyInit__decimal@@Base+0xe3d0>
   28884:	mov	x3, #0x435f                	// #17247
   28888:	mov	x2, #0x13                  	// #19
   2888c:	movk	x3, #0xd79, lsl #16
   28890:	movk	x3, #0x35e5, lsl #32
   28894:	movk	x3, #0xd794, lsl #48
   28898:	umulh	x3, x25, x3
   2889c:	lsr	x3, x3, #4
   288a0:	add	x1, x3, x3, lsl #2
   288a4:	lsl	x1, x1, #2
   288a8:	sub	x3, x1, x3
   288ac:	subs	x3, x25, x3
   288b0:	csel	x3, x3, x2, ne  // ne = any
   288b4:	cmp	x20, #0x1
   288b8:	b.le	289fc <PyInit__decimal@@Base+0xe47c>
   288bc:	sub	x4, x3, #0x1
   288c0:	add	x7, x7, x24
   288c4:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27a80>
   288c8:	add	x2, x2, #0x2d0
   288cc:	mov	x1, #0x14                  	// #20
   288d0:	sub	x3, x1, x3
   288d4:	ldur	x1, [x7, #-16]
   288d8:	ldr	x4, [x2, x4, lsl #3]
   288dc:	ldr	x2, [x2, x3, lsl #3]
   288e0:	udiv	x3, x1, x4
   288e4:	mul	x1, x0, x2
   288e8:	umulh	x2, x0, x2
   288ec:	adds	x0, x1, x3
   288f0:	cset	x1, cs  // cs = hs, nlast
   288f4:	cmp	x2, #0x0
   288f8:	ccmp	x1, #0x0, #0x0, eq  // eq = none
   288fc:	b.eq	289fc <PyInit__decimal@@Base+0xe47c>  // b.none
   28900:	ldr	w1, [x23]
   28904:	mov	x0, #0xffffffffffffffff    	// #-1
   28908:	ldp	x19, x20, [sp, #16]
   2890c:	orr	w1, w1, #0x100
   28910:	ldp	x25, x26, [sp, #64]
   28914:	str	w1, [x23]
   28918:	ldp	x21, x22, [sp, #32]
   2891c:	ldp	x23, x24, [sp, #48]
   28920:	ldp	x29, x30, [sp], #144
   28924:	ret
   28928:	tbz	w22, #0, 2886c <PyInit__decimal@@Base+0xe2ec>
   2892c:	ldp	x19, x20, [sp, #16]
   28930:	mov	x0, #0xffffffffffffffff    	// #-1
   28934:	ldr	w1, [x23]
   28938:	ldp	x21, x22, [sp, #32]
   2893c:	orr	w1, w1, #0x100
   28940:	str	w1, [x23]
   28944:	ldp	x23, x24, [sp, #48]
   28948:	ldp	x29, x30, [sp], #144
   2894c:	ret
   28950:	mov	x0, x19
   28954:	bl	25638 <PyInit__decimal@@Base+0xb0b8>
   28958:	cbz	w0, 28900 <PyInit__decimal@@Base+0xe380>
   2895c:	mov	x0, #0x2                   	// #2
   28960:	add	x4, sp, #0x50
   28964:	mov	w1, #0x30                  	// #48
   28968:	strb	w1, [sp, #96]
   2896c:	stp	x0, x4, [sp, #128]
   28970:	ldr	x0, [x9]
   28974:	cbz	x0, 28a4c <PyInit__decimal@@Base+0xe4cc>
   28978:	neg	x3, x8
   2897c:	cmp	x25, x3
   28980:	b.le	28a38 <PyInit__decimal@@Base+0xe4b8>
   28984:	mov	x20, #0x9436                	// #37942
   28988:	mov	x0, x4
   2898c:	movk	x20, #0x50d7, lsl #16
   28990:	add	x26, sp, #0x60
   28994:	movk	x20, #0x435e, lsl #32
   28998:	mov	x2, x10
   2899c:	movk	x20, #0xd79, lsl #48
   289a0:	mov	x1, x7
   289a4:	str	x11, [sp, #112]
   289a8:	smulh	x20, x11, x20
   289ac:	sub	x20, x20, x11, asr #63
   289b0:	add	x4, x20, x20, lsl #2
   289b4:	lsl	x4, x4, #2
   289b8:	sub	x4, x4, x20
   289bc:	cmp	x11, x4
   289c0:	cinc	x20, x20, ne  // ne = any
   289c4:	bl	1c438 <PyInit__decimal@@Base+0x1eb8>
   289c8:	str	x20, [sp, #120]
   289cc:	ldrb	w0, [sp, #96]
   289d0:	lsl	x24, x20, #3
   289d4:	ldrb	w1, [x19]
   289d8:	sub	x21, x24, #0x8
   289dc:	ldr	x25, [sp, #112]
   289e0:	ldr	x7, [sp, #136]
   289e4:	bfxil	w0, w1, #0, #4
   289e8:	strb	w0, [sp, #96]
   289ec:	str	xzr, [sp, #104]
   289f0:	mov	x19, x26
   289f4:	ldr	x0, [x7, x21]
   289f8:	b	28884 <PyInit__decimal@@Base+0xe304>
   289fc:	ldr	x1, [x19, #8]
   28a00:	cmp	x1, #0x0
   28a04:	b.le	28a20 <PyInit__decimal@@Base+0xe4a0>
   28a08:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27a80>
   28a0c:	add	x2, x2, #0x2d0
   28a10:	ldr	x1, [x2, x1, lsl #3]
   28a14:	umulh	x2, x0, x1
   28a18:	mul	x0, x0, x1
   28a1c:	cbnz	x2, 28900 <PyInit__decimal@@Base+0xe380>
   28a20:	ldp	x19, x20, [sp, #16]
   28a24:	ldp	x21, x22, [sp, #32]
   28a28:	ldp	x23, x24, [sp, #48]
   28a2c:	ldp	x25, x26, [sp, #64]
   28a30:	ldp	x29, x30, [sp], #144
   28a34:	ret
   28a38:	add	x26, sp, #0x60
   28a3c:	mov	x0, x26
   28a40:	bl	28798 <PyInit__decimal@@Base+0xe218>
   28a44:	ldr	x20, [sp, #120]
   28a48:	b	289cc <PyInit__decimal@@Base+0xe44c>
   28a4c:	and	w22, w22, #0xf
   28a50:	mov	x1, x7
   28a54:	mov	x2, x24
   28a58:	mov	x0, x4
   28a5c:	orr	w22, w22, #0x30
   28a60:	bl	6470 <memcpy@plt>
   28a64:	add	x26, sp, #0x60
   28a68:	mov	x7, x0
   28a6c:	strb	w22, [sp, #96]
   28a70:	stp	x25, x20, [sp, #112]
   28a74:	b	289ec <PyInit__decimal@@Base+0xe46c>
   28a78:	stp	x29, x30, [sp, #-48]!
   28a7c:	mov	x3, #0x9436                	// #37942
   28a80:	movk	x3, #0x50d7, lsl #16
   28a84:	mov	x29, sp
   28a88:	stp	x21, x22, [sp, #32]
   28a8c:	mov	x21, x1
   28a90:	movk	x3, #0x435e, lsl #32
   28a94:	stp	x19, x20, [sp, #16]
   28a98:	mov	x20, x0
   28a9c:	movk	x3, #0xd79, lsl #48
   28aa0:	ldr	x6, [x0, #32]
   28aa4:	adrp	x1, 5f000 <PyInit__decimal@@Base+0x44a80>
   28aa8:	ldr	x0, [x21]
   28aac:	ldr	x5, [x1, #1672]
   28ab0:	smulh	x3, x0, x3
   28ab4:	sub	x3, x3, x0, asr #63
   28ab8:	add	x4, x3, x3, lsl #2
   28abc:	lsl	x4, x4, #2
   28ac0:	sub	x4, x4, x3
   28ac4:	subs	x19, x0, x4
   28ac8:	b.eq	28b58 <PyInit__decimal@@Base+0xe5d8>  // b.none
   28acc:	add	x22, x3, #0x1
   28ad0:	cmp	x22, x5
   28ad4:	csel	x1, x22, x5, ge  // ge = tcont
   28ad8:	cmp	x1, x6
   28adc:	b.eq	28af4 <PyInit__decimal@@Base+0xe574>  // b.none
   28ae0:	ldrb	w3, [x20]
   28ae4:	tbz	w3, #5, 28b78 <PyInit__decimal@@Base+0xe5f8>
   28ae8:	cmp	x1, x6
   28aec:	b.gt	28b8c <PyInit__decimal@@Base+0xe60c>
   28af0:	sub	x3, x22, #0x1
   28af4:	stp	x0, x22, [x20, #16]
   28af8:	cmp	x19, #0x0
   28afc:	mov	x1, x3
   28b00:	b.le	28b20 <PyInit__decimal@@Base+0xe5a0>
   28b04:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27a80>
   28b08:	add	x0, x0, #0x2d0
   28b0c:	ldr	x2, [x20, #40]
   28b10:	sub	x1, x22, #0x2
   28b14:	ldr	x0, [x0, x19, lsl #3]
   28b18:	sub	x0, x0, #0x1
   28b1c:	str	x0, [x2, x3, lsl #3]
   28b20:	tbnz	x1, #63, 28b48 <PyInit__decimal@@Base+0xe5c8>
   28b24:	mov	x0, #0xffffffff89e7ffff    	// #-1981284353
   28b28:	ldr	x2, [x20, #40]
   28b2c:	movk	x0, #0x2304, lsl #32
   28b30:	movk	x0, #0x8ac7, lsl #48
   28b34:	nop
   28b38:	str	x0, [x2, x1, lsl #3]
   28b3c:	sub	x1, x1, #0x1
   28b40:	cmn	x1, #0x1
   28b44:	b.ne	28b38 <PyInit__decimal@@Base+0xe5b8>  // b.any
   28b48:	ldp	x19, x20, [sp, #16]
   28b4c:	ldp	x21, x22, [sp, #32]
   28b50:	ldp	x29, x30, [sp], #48
   28b54:	ret
   28b58:	cmp	x3, x5
   28b5c:	mov	x22, x3
   28b60:	csel	x1, x3, x5, ge  // ge = tcont
   28b64:	cmp	x1, x6
   28b68:	b.ne	28ae0 <PyInit__decimal@@Base+0xe560>  // b.any
   28b6c:	sub	x1, x3, #0x1
   28b70:	stp	x0, x3, [x20, #16]
   28b74:	b	28b20 <PyInit__decimal@@Base+0xe5a0>
   28b78:	mov	x0, x20
   28b7c:	bl	25588 <PyInit__decimal@@Base+0xb008>
   28b80:	cbz	w0, 28b48 <PyInit__decimal@@Base+0xe5c8>
   28b84:	ldr	x0, [x21]
   28b88:	b	28af0 <PyInit__decimal@@Base+0xe570>
   28b8c:	mov	x0, x20
   28b90:	bl	25438 <PyInit__decimal@@Base+0xaeb8>
   28b94:	b	28b80 <PyInit__decimal@@Base+0xe600>
   28b98:	ldr	x2, [x0, #24]
   28b9c:	cmp	x2, #0x0
   28ba0:	b.le	28c10 <PyInit__decimal@@Base+0xe690>
   28ba4:	ldr	x3, [x0, #40]
   28ba8:	mov	x0, #0x0                   	// #0
   28bac:	b	28bbc <PyInit__decimal@@Base+0xe63c>
   28bb0:	add	x0, x0, #0x1
   28bb4:	cmp	x0, x2
   28bb8:	b.eq	28c10 <PyInit__decimal@@Base+0xe690>  // b.none
   28bbc:	ldr	x1, [x3, x0, lsl #3]
   28bc0:	cbz	x1, 28bb0 <PyInit__decimal@@Base+0xe630>
   28bc4:	mov	x3, #0xcccccccccccccccc    	// #-3689348814741910324
   28bc8:	add	x2, x0, x0, lsl #2
   28bcc:	movk	x3, #0xcccd
   28bd0:	mov	x4, #0x9999999999999999    	// #-7378697629483820647
   28bd4:	lsl	x2, x2, #2
   28bd8:	movk	x4, #0x1999, lsl #48
   28bdc:	mul	x5, x1, x3
   28be0:	sub	x0, x2, x0
   28be4:	ror	x2, x5, #1
   28be8:	cmp	x2, x4
   28bec:	b.hi	28c0c <PyInit__decimal@@Base+0xe68c>  // b.pmore
   28bf0:	umulh	x1, x1, x3
   28bf4:	add	x0, x0, #0x1
   28bf8:	lsr	x1, x1, #3
   28bfc:	mul	x2, x1, x3
   28c00:	ror	x2, x2, #1
   28c04:	cmp	x2, x4
   28c08:	b.ls	28bf0 <PyInit__decimal@@Base+0xe670>  // b.plast
   28c0c:	ret
   28c10:	mov	x0, #0x0                   	// #0
   28c14:	ret
   28c18:	ldrb	w1, [x0]
   28c1c:	tst	w1, #0xe
   28c20:	b.eq	28c2c <PyInit__decimal@@Base+0xe6ac>  // b.none
   28c24:	mov	w0, #0x0                   	// #0
   28c28:	ret
   28c2c:	b	25638 <PyInit__decimal@@Base+0xb0b8>
   28c30:	ldr	x1, [x0, #24]
   28c34:	ldr	x2, [x0, #40]
   28c38:	add	x1, x2, x1, lsl #3
   28c3c:	ldur	x1, [x1, #-8]
   28c40:	cbz	x1, 28c64 <PyInit__decimal@@Base+0xe6e4>
   28c44:	ldr	x0, [x0, #8]
   28c48:	cmp	x0, #0x0
   28c4c:	b.lt	28c6c <PyInit__decimal@@Base+0xe6ec>  // b.tstop
   28c50:	mov	w0, #0x0                   	// #0
   28c54:	b.ne	28c60 <PyInit__decimal@@Base+0xe6e0>  // b.any
   28c58:	ldr	x0, [x2]
   28c5c:	and	w0, w0, #0x1
   28c60:	ret
   28c64:	mov	w0, #0x0                   	// #0
   28c68:	ret
   28c6c:	mov	x3, #0x435f                	// #17247
   28c70:	neg	x1, x0
   28c74:	movk	x3, #0xd79, lsl #16
   28c78:	adrp	x5, 42000 <PyInit__decimal@@Base+0x27a80>
   28c7c:	movk	x3, #0x35e5, lsl #32
   28c80:	add	x5, x5, #0x2d0
   28c84:	movk	x3, #0xd794, lsl #48
   28c88:	umulh	x3, x1, x3
   28c8c:	lsr	x3, x3, #4
   28c90:	add	x4, x3, x3, lsl #2
   28c94:	ldr	x0, [x2, x3, lsl #3]
   28c98:	lsl	x2, x4, #2
   28c9c:	sub	x3, x2, x3
   28ca0:	sub	x1, x1, x3
   28ca4:	ldr	x1, [x5, x1, lsl #3]
   28ca8:	udiv	x0, x0, x1
   28cac:	and	w0, w0, #0x1
   28cb0:	ret
   28cb4:	nop
   28cb8:	stp	x29, x30, [sp, #-16]!
   28cbc:	mov	x29, sp
   28cc0:	bl	28c30 <PyInit__decimal@@Base+0xe6b0>
   28cc4:	cmp	w0, #0x0
   28cc8:	cset	w0, eq  // eq = none
   28ccc:	ldp	x29, x30, [sp], #16
   28cd0:	ret
   28cd4:	nop
   28cd8:	stp	x29, x30, [sp, #-64]!
   28cdc:	mov	x29, sp
   28ce0:	stp	x19, x20, [sp, #16]
   28ce4:	mov	x19, x0
   28ce8:	and	w20, w1, #0xff
   28cec:	stp	x21, x22, [sp, #32]
   28cf0:	and	w21, w2, #0xff
   28cf4:	ldrb	w0, [x0]
   28cf8:	tbnz	w0, #5, 28d10 <PyInit__decimal@@Base+0xe790>
   28cfc:	adrp	x22, 5f000 <PyInit__decimal@@Base+0x44a80>
   28d00:	ldr	x2, [x19, #32]
   28d04:	ldr	x1, [x22, #1672]
   28d08:	cmp	x2, x1
   28d0c:	b.gt	28d38 <PyInit__decimal@@Base+0xe7b8>
   28d10:	orr	w20, w20, w21
   28d14:	and	w0, w0, #0xfffffff0
   28d18:	orr	w0, w0, w20
   28d1c:	strb	w0, [x19]
   28d20:	ldp	x21, x22, [sp, #32]
   28d24:	stp	xzr, xzr, [x19, #8]
   28d28:	str	xzr, [x19, #24]
   28d2c:	ldp	x19, x20, [sp, #16]
   28d30:	ldp	x29, x30, [sp], #64
   28d34:	ret
   28d38:	ldr	x0, [x19, #40]
   28d3c:	add	x3, sp, #0x3f
   28d40:	mov	x2, #0x8                   	// #8
   28d44:	strb	wzr, [sp, #63]
   28d48:	bl	252a8 <PyInit__decimal@@Base+0xad28>
   28d4c:	str	x0, [x19, #40]
   28d50:	ldrb	w1, [sp, #63]
   28d54:	cbnz	w1, 28d60 <PyInit__decimal@@Base+0xe7e0>
   28d58:	ldr	x0, [x22, #1672]
   28d5c:	str	x0, [x19, #32]
   28d60:	ldrb	w0, [x19]
   28d64:	b	28d10 <PyInit__decimal@@Base+0xe790>
   28d68:	stp	x29, x30, [sp, #-64]!
   28d6c:	mov	x29, sp
   28d70:	stp	x19, x20, [sp, #16]
   28d74:	mov	x19, x0
   28d78:	mov	x20, x2
   28d7c:	stp	x21, x22, [sp, #32]
   28d80:	mov	w21, w1
   28d84:	ldrb	w0, [x0]
   28d88:	tbnz	w0, #5, 28da0 <PyInit__decimal@@Base+0xe820>
   28d8c:	adrp	x22, 5f000 <PyInit__decimal@@Base+0x44a80>
   28d90:	ldr	x2, [x19, #32]
   28d94:	ldr	x1, [x22, #1672]
   28d98:	cmp	x2, x1
   28d9c:	b.gt	28dd0 <PyInit__decimal@@Base+0xe850>
   28da0:	and	w0, w0, #0xfffffff0
   28da4:	orr	w0, w0, #0x4
   28da8:	strb	w0, [x19]
   28dac:	ldr	w0, [x20]
   28db0:	orr	w1, w0, w21
   28db4:	ldp	x21, x22, [sp, #32]
   28db8:	stp	xzr, xzr, [x19, #8]
   28dbc:	str	xzr, [x19, #24]
   28dc0:	str	w1, [x20]
   28dc4:	ldp	x19, x20, [sp, #16]
   28dc8:	ldp	x29, x30, [sp], #64
   28dcc:	ret
   28dd0:	ldr	x0, [x19, #40]
   28dd4:	add	x3, sp, #0x3f
   28dd8:	mov	x2, #0x8                   	// #8
   28ddc:	strb	wzr, [sp, #63]
   28de0:	bl	252a8 <PyInit__decimal@@Base+0xad28>
   28de4:	str	x0, [x19, #40]
   28de8:	ldrb	w1, [sp, #63]
   28dec:	cbnz	w1, 28df8 <PyInit__decimal@@Base+0xe878>
   28df0:	ldr	x0, [x22, #1672]
   28df4:	str	x0, [x19, #32]
   28df8:	ldrb	w0, [x19]
   28dfc:	b	28da0 <PyInit__decimal@@Base+0xe820>
   28e00:	tst	w1, #0x2
   28e04:	and	w3, w3, #0xff
   28e08:	and	w1, w1, #0xff
   28e0c:	mov	x5, x0
   28e10:	b.eq	28e34 <PyInit__decimal@@Base+0xe8b4>  // b.none
   28e14:	and	w1, w1, #0x1
   28e18:	cmp	w1, w3
   28e1c:	b.eq	28e28 <PyInit__decimal@@Base+0xe8a8>  // b.none
   28e20:	ldrb	w2, [x2]
   28e24:	tbnz	w2, #1, 28e40 <PyInit__decimal@@Base+0xe8c0>
   28e28:	mov	x0, x5
   28e2c:	mov	w2, #0x2                   	// #2
   28e30:	b	28cd8 <PyInit__decimal@@Base+0xe758>
   28e34:	mov	w1, w3
   28e38:	mov	w2, #0x2                   	// #2
   28e3c:	b	28cd8 <PyInit__decimal@@Base+0xe758>
   28e40:	mov	x2, x4
   28e44:	mov	w1, #0x100                 	// #256
   28e48:	b	28d68 <PyInit__decimal@@Base+0xe7e8>
   28e4c:	nop
   28e50:	mov	x2, x1
   28e54:	mov	x1, x0
   28e58:	mov	w0, #0x1                   	// #1
   28e5c:	b	28808 <PyInit__decimal@@Base+0xe288>
   28e60:	mov	x2, x1
   28e64:	mov	x1, x0
   28e68:	mov	w0, #0x0                   	// #0
   28e6c:	b	28808 <PyInit__decimal@@Base+0xe288>
   28e70:	stp	x29, x30, [sp, #-32]!
   28e74:	mov	x2, x1
   28e78:	mov	x29, sp
   28e7c:	stp	x19, x20, [sp, #16]
   28e80:	mov	x19, x1
   28e84:	mov	x20, x0
   28e88:	mov	x1, x0
   28e8c:	mov	w0, #0x0                   	// #0
   28e90:	bl	28808 <PyInit__decimal@@Base+0xe288>
   28e94:	ldr	w2, [x19]
   28e98:	tbnz	w2, #8, 28ee4 <PyInit__decimal@@Base+0xe964>
   28e9c:	ldrb	w1, [x20]
   28ea0:	tbz	x0, #63, 28ed0 <PyInit__decimal@@Base+0xe950>
   28ea4:	and	w1, w1, #0x1
   28ea8:	mov	x3, #0x8000000000000000    	// #-9223372036854775808
   28eac:	cmp	x0, x3
   28eb0:	csel	w1, w1, wzr, eq  // eq = none
   28eb4:	cbnz	w1, 28ef4 <PyInit__decimal@@Base+0xe974>
   28eb8:	orr	w2, w2, #0x100
   28ebc:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
   28ec0:	str	w2, [x19]
   28ec4:	ldp	x19, x20, [sp, #16]
   28ec8:	ldp	x29, x30, [sp], #32
   28ecc:	ret
   28ed0:	tst	x1, #0x1
   28ed4:	cneg	x0, x0, ne  // ne = any
   28ed8:	ldp	x19, x20, [sp, #16]
   28edc:	ldp	x29, x30, [sp], #32
   28ee0:	ret
   28ee4:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
   28ee8:	ldp	x19, x20, [sp, #16]
   28eec:	ldp	x29, x30, [sp], #32
   28ef0:	ret
   28ef4:	mov	x0, x3
   28ef8:	b	28ec4 <PyInit__decimal@@Base+0xe944>
   28efc:	nop
   28f00:	b	28e50 <PyInit__decimal@@Base+0xe8d0>
   28f04:	nop
   28f08:	b	28e70 <PyInit__decimal@@Base+0xe8f0>
   28f0c:	nop
   28f10:	stp	x29, x30, [sp, #-32]!
   28f14:	mov	x29, sp
   28f18:	str	x19, [sp, #16]
   28f1c:	mov	x19, x1
   28f20:	mov	x2, x19
   28f24:	mov	x1, x0
   28f28:	mov	w0, #0x1                   	// #1
   28f2c:	bl	28808 <PyInit__decimal@@Base+0xe288>
   28f30:	ldr	w2, [x19]
   28f34:	tbnz	w2, #8, 28f50 <PyInit__decimal@@Base+0xe9d0>
   28f38:	mov	x3, #0xffffffff            	// #4294967295
   28f3c:	cmp	x0, x3
   28f40:	b.hi	28f60 <PyInit__decimal@@Base+0xe9e0>  // b.pmore
   28f44:	ldr	x19, [sp, #16]
   28f48:	ldp	x29, x30, [sp], #32
   28f4c:	ret
   28f50:	mov	w0, #0xffffffff            	// #-1
   28f54:	ldr	x19, [sp, #16]
   28f58:	ldp	x29, x30, [sp], #32
   28f5c:	ret
   28f60:	orr	w2, w2, #0x100
   28f64:	str	w2, [x19]
   28f68:	mov	w0, #0xffffffff            	// #-1
   28f6c:	ldr	x19, [sp, #16]
   28f70:	ldp	x29, x30, [sp], #32
   28f74:	ret
   28f78:	stp	x29, x30, [sp, #-32]!
   28f7c:	mov	x29, sp
   28f80:	str	x19, [sp, #16]
   28f84:	mov	x19, x1
   28f88:	bl	28e70 <PyInit__decimal@@Base+0xe8f0>
   28f8c:	ldr	w2, [x19]
   28f90:	tbnz	w2, #8, 28fb4 <PyInit__decimal@@Base+0xea34>
   28f94:	mov	x1, #0x80000000            	// #2147483648
   28f98:	add	x1, x0, x1
   28f9c:	mov	x3, #0xffffffff            	// #4294967295
   28fa0:	cmp	x1, x3
   28fa4:	b.hi	28fc4 <PyInit__decimal@@Base+0xea44>  // b.pmore
   28fa8:	ldr	x19, [sp, #16]
   28fac:	ldp	x29, x30, [sp], #32
   28fb0:	ret
   28fb4:	mov	w0, #0x7fffffff            	// #2147483647
   28fb8:	ldr	x19, [sp, #16]
   28fbc:	ldp	x29, x30, [sp], #32
   28fc0:	ret
   28fc4:	orr	w2, w2, #0x100
   28fc8:	str	w2, [x19]
   28fcc:	mov	w0, #0x7fffffff            	// #2147483647
   28fd0:	ldr	x19, [sp, #16]
   28fd4:	ldp	x29, x30, [sp], #32
   28fd8:	ret
   28fdc:	nop
   28fe0:	cmp	x0, x1
   28fe4:	b.eq	29090 <PyInit__decimal@@Base+0xeb10>  // b.none
   28fe8:	stp	x29, x30, [sp, #-32]!
   28fec:	mov	x29, sp
   28ff0:	stp	x19, x20, [sp, #16]
   28ff4:	mov	x20, x1
   28ff8:	adrp	x1, 5f000 <PyInit__decimal@@Base+0x44a80>
   28ffc:	ldr	x5, [x0, #32]
   29000:	mov	x19, x0
   29004:	ldr	x1, [x1, #1672]
   29008:	ldr	x4, [x20, #24]
   2900c:	ldrb	w3, [x0]
   29010:	cmp	x1, x4
   29014:	csel	x1, x1, x4, ge  // ge = tcont
   29018:	cmp	x1, x5
   2901c:	b.eq	2902c <PyInit__decimal@@Base+0xeaac>  // b.none
   29020:	tbz	w3, #5, 29074 <PyInit__decimal@@Base+0xeaf4>
   29024:	cmp	x1, x5
   29028:	b.gt	29088 <PyInit__decimal@@Base+0xeb08>
   2902c:	ldrb	w1, [x20]
   29030:	and	w3, w3, #0xfffffff0
   29034:	ldr	x0, [x19, #40]
   29038:	and	w1, w1, #0xf
   2903c:	orr	w1, w1, w3
   29040:	strb	w1, [x19]
   29044:	ldp	x1, x2, [x20, #8]
   29048:	str	x4, [x19, #24]
   2904c:	str	x1, [x19, #8]
   29050:	ldr	x1, [x20, #40]
   29054:	str	x2, [x19, #16]
   29058:	ldr	x2, [x20, #24]
   2905c:	lsl	x2, x2, #3
   29060:	bl	6470 <memcpy@plt>
   29064:	mov	w0, #0x1                   	// #1
   29068:	ldp	x19, x20, [sp, #16]
   2906c:	ldp	x29, x30, [sp], #32
   29070:	ret
   29074:	bl	25588 <PyInit__decimal@@Base+0xb008>
   29078:	cbz	w0, 29068 <PyInit__decimal@@Base+0xeae8>
   2907c:	ldrb	w3, [x19]
   29080:	ldr	x4, [x20, #24]
   29084:	b	2902c <PyInit__decimal@@Base+0xeaac>
   29088:	bl	25438 <PyInit__decimal@@Base+0xaeb8>
   2908c:	b	29078 <PyInit__decimal@@Base+0xeaf8>
   29090:	mov	w0, #0x1                   	// #1
   29094:	ret
   29098:	ldrb	w4, [x1]
   2909c:	tst	w4, #0xc
   290a0:	b.ne	290ac <PyInit__decimal@@Base+0xeb2c>  // b.any
   290a4:	mov	w0, #0x0                   	// #0
   290a8:	ret
   290ac:	stp	x29, x30, [sp, #-32]!
   290b0:	ubfx	x4, x4, #3, #1
   290b4:	mov	x29, sp
   290b8:	ldr	w5, [x3]
   290bc:	stp	x19, x20, [sp, #16]
   290c0:	mov	x19, x0
   290c4:	mov	x20, x2
   290c8:	orr	w4, w5, w4, lsl #8
   290cc:	str	w4, [x3]
   290d0:	mov	x2, x3
   290d4:	bl	28fe0 <PyInit__decimal@@Base+0xea60>
   290d8:	ldrb	w1, [x19]
   290dc:	mov	x0, x19
   290e0:	and	w1, w1, #0xfffffff1
   290e4:	orr	w1, w1, #0x4
   290e8:	strb	w1, [x19]
   290ec:	ldr	w2, [x20, #40]
   290f0:	ldr	x1, [x20]
   290f4:	bl	27800 <PyInit__decimal@@Base+0xd280>
   290f8:	mov	w0, #0x1                   	// #1
   290fc:	ldp	x19, x20, [sp, #16]
   29100:	ldp	x29, x30, [sp], #32
   29104:	ret
   29108:	stp	x29, x30, [sp, #-32]!
   2910c:	mov	x5, x2
   29110:	mov	x29, sp
   29114:	stp	x19, x20, [sp, #16]
   29118:	mov	x19, x0
   2911c:	mov	x20, x3
   29120:	ldrb	w0, [x1]
   29124:	ldrb	w2, [x2]
   29128:	orr	w3, w0, w2
   2912c:	tst	w3, #0xc
   29130:	b.ne	29144 <PyInit__decimal@@Base+0xebc4>  // b.any
   29134:	mov	w0, #0x0                   	// #0
   29138:	ldp	x19, x20, [sp, #16]
   2913c:	ldp	x29, x30, [sp], #32
   29140:	ret
   29144:	tbnz	w0, #3, 29198 <PyInit__decimal@@Base+0xec18>
   29148:	tbz	w2, #3, 291a8 <PyInit__decimal@@Base+0xec28>
   2914c:	ldr	w0, [x4]
   29150:	mov	x1, x5
   29154:	orr	w0, w0, #0x100
   29158:	str	w0, [x4]
   2915c:	mov	x2, x4
   29160:	mov	x0, x19
   29164:	bl	28fe0 <PyInit__decimal@@Base+0xea60>
   29168:	ldrb	w1, [x19]
   2916c:	mov	x0, x19
   29170:	and	w1, w1, #0xfffffff1
   29174:	orr	w1, w1, #0x4
   29178:	strb	w1, [x19]
   2917c:	ldr	w2, [x20, #40]
   29180:	ldr	x1, [x20]
   29184:	bl	27800 <PyInit__decimal@@Base+0xd280>
   29188:	mov	w0, #0x1                   	// #1
   2918c:	ldp	x19, x20, [sp, #16]
   29190:	ldp	x29, x30, [sp], #32
   29194:	ret
   29198:	ldr	w0, [x4]
   2919c:	orr	w0, w0, #0x100
   291a0:	str	w0, [x4]
   291a4:	b	2915c <PyInit__decimal@@Base+0xebdc>
   291a8:	tst	x0, #0x4
   291ac:	csel	x1, x1, x5, ne  // ne = any
   291b0:	b	2915c <PyInit__decimal@@Base+0xebdc>
   291b4:	nop
   291b8:	sub	sp, sp, #0x2a0
   291bc:	stp	x29, x30, [sp]
   291c0:	mov	x29, sp
   291c4:	stp	x19, x20, [sp, #16]
   291c8:	mov	x19, x0
   291cc:	mov	x20, x1
   291d0:	stp	x21, x22, [sp, #32]
   291d4:	mov	x21, x4
   291d8:	stp	x25, x26, [sp, #64]
   291dc:	mov	x25, x2
   291e0:	ldrb	w0, [x1]
   291e4:	tst	w0, #0xe
   291e8:	b.ne	291f8 <PyInit__decimal@@Base+0xec78>  // b.any
   291ec:	ldrb	w0, [x2]
   291f0:	tst	w0, #0xe
   291f4:	b.eq	29228 <PyInit__decimal@@Base+0xeca8>  // b.none
   291f8:	mov	x4, x21
   291fc:	mov	x2, x25
   29200:	mov	x1, x20
   29204:	mov	x0, x19
   29208:	bl	29108 <PyInit__decimal@@Base+0xeb88>
   2920c:	cbz	w0, 293d4 <PyInit__decimal@@Base+0xee54>
   29210:	ldp	x29, x30, [sp]
   29214:	ldp	x19, x20, [sp, #16]
   29218:	ldp	x21, x22, [sp, #32]
   2921c:	ldp	x25, x26, [sp, #64]
   29220:	add	sp, sp, #0x2a0
   29224:	ret
   29228:	stp	x23, x24, [sp, #48]
   2922c:	stp	x27, x28, [sp, #80]
   29230:	ldr	x24, [x2, #24]
   29234:	ldr	x27, [x1, #24]
   29238:	cmp	x24, x27
   2923c:	b.gt	2940c <PyInit__decimal@@Base+0xee8c>
   29240:	mov	x0, x24
   29244:	mov	x23, x2
   29248:	mov	x24, x27
   2924c:	mov	x22, x1
   29250:	mov	x27, x0
   29254:	add	x8, x24, x27
   29258:	str	x8, [sp, #152]
   2925c:	cmp	x24, #0x1
   29260:	b.eq	29840 <PyInit__decimal@@Base+0xf2c0>  // b.none
   29264:	cmp	x8, #0x40
   29268:	b.hi	29480 <PyInit__decimal@@Base+0xef00>  // b.pmore
   2926c:	cmp	x24, #0x2
   29270:	ldr	x5, [x22, #40]
   29274:	ldr	x1, [x23, #40]
   29278:	b.eq	29a6c <PyInit__decimal@@Base+0xf4ec>  // b.none
   2927c:	add	x0, sp, #0xa0
   29280:	mov	x6, #0x1                   	// #1
   29284:	cbz	x8, 2929c <PyInit__decimal@@Base+0xed1c>
   29288:	add	x7, x0, x6, lsl #3
   2928c:	cmp	x8, x6
   29290:	add	x6, x6, #0x1
   29294:	stur	xzr, [x7, #-8]
   29298:	b.ne	29288 <PyInit__decimal@@Base+0xed08>  // b.any
   2929c:	cmp	x27, #0x1
   292a0:	b.eq	29828 <PyInit__decimal@@Base+0xf2a8>  // b.none
   292a4:	mov	x4, x24
   292a8:	mov	x3, x27
   292ac:	mov	x2, x5
   292b0:	bl	1b610 <PyInit__decimal@@Base+0x1090>
   292b4:	ldr	x8, [sp, #152]
   292b8:	adrp	x24, 5f000 <PyInit__decimal@@Base+0x44a80>
   292bc:	ldr	x0, [x19, #32]
   292c0:	ldr	x1, [x24, #1672]
   292c4:	cmp	x1, x8
   292c8:	csel	x1, x1, x8, ge  // ge = tcont
   292cc:	cmp	x1, x0
   292d0:	b.eq	292e4 <PyInit__decimal@@Base+0xed64>  // b.none
   292d4:	ldrb	w2, [x19]
   292d8:	tbz	w2, #5, 298d8 <PyInit__decimal@@Base+0xf358>
   292dc:	cmp	x1, x0
   292e0:	b.gt	29c1c <PyInit__decimal@@Base+0xf69c>
   292e4:	add	x2, sp, #0xa0
   292e8:	mov	x1, #0x0                   	// #0
   292ec:	ldr	x26, [x19, #40]
   292f0:	cbz	x8, 29c40 <PyInit__decimal@@Base+0xf6c0>
   292f4:	nop
   292f8:	ldr	x0, [x2], #8
   292fc:	str	x0, [x26, x1, lsl #3]
   29300:	add	x1, x1, #0x1
   29304:	ldr	x3, [sp, #152]
   29308:	cmp	x3, x1
   2930c:	b.hi	292f8 <PyInit__decimal@@Base+0xed78>  // b.pmore
   29310:	ldrb	w0, [x19]
   29314:	ldr	x5, [x19, #32]
   29318:	and	w0, w0, #0xfffffff0
   2931c:	ldrb	w1, [x20]
   29320:	cmp	x3, #0x1
   29324:	ldrb	w4, [x25]
   29328:	eor	w4, w4, w1
   2932c:	and	w4, w4, #0x1
   29330:	orr	w4, w4, w0
   29334:	strb	w4, [x19]
   29338:	ldr	x0, [x22, #8]
   2933c:	ldr	x1, [x23, #8]
   29340:	add	x0, x0, x1
   29344:	str	x0, [x19, #8]
   29348:	b.le	29368 <PyInit__decimal@@Base+0xede8>
   2934c:	sub	x2, x26, #0x8
   29350:	b	29360 <PyInit__decimal@@Base+0xede0>
   29354:	sub	x3, x3, #0x1
   29358:	cmp	x3, #0x1
   2935c:	b.eq	29368 <PyInit__decimal@@Base+0xede8>  // b.none
   29360:	ldr	x1, [x2, x3, lsl #3]
   29364:	cbz	x1, 29354 <PyInit__decimal@@Base+0xedd4>
   29368:	ldr	x1, [x24, #1672]
   2936c:	str	x3, [x19, #24]
   29370:	cmp	x1, x3
   29374:	csel	x1, x1, x3, ge  // ge = tcont
   29378:	cmp	x1, x5
   2937c:	b.eq	2938c <PyInit__decimal@@Base+0xee0c>  // b.none
   29380:	tbz	w4, #5, 29688 <PyInit__decimal@@Base+0xf108>
   29384:	cmp	x1, x5
   29388:	b.gt	2972c <PyInit__decimal@@Base+0xf1ac>
   2938c:	add	x26, x26, x3, lsl #3
   29390:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27a80>
   29394:	add	x0, x0, #0x2d0
   29398:	ldur	x1, [x26, #-8]
   2939c:	ldr	x2, [x0, #72]
   293a0:	cmp	x1, x2
   293a4:	b.cs	2964c <PyInit__decimal@@Base+0xf0cc>  // b.hs, b.nlast
   293a8:	ldr	x2, [x0, #32]
   293ac:	cmp	x1, x2
   293b0:	b.cs	296a0 <PyInit__decimal@@Base+0xf120>  // b.hs, b.nlast
   293b4:	ldr	x2, [x0, #16]
   293b8:	cmp	x1, x2
   293bc:	b.cs	29744 <PyInit__decimal@@Base+0xf1c4>  // b.hs, b.nlast
   293c0:	ldr	x0, [x0, #8]
   293c4:	cmp	x1, x0
   293c8:	cset	x2, cs  // cs = hs, nlast
   293cc:	add	x2, x2, #0x1
   293d0:	b	296cc <PyInit__decimal@@Base+0xf14c>
   293d4:	ldrb	w1, [x20]
   293d8:	tbnz	w1, #1, 29418 <PyInit__decimal@@Base+0xee98>
   293dc:	tst	w1, #0xe
   293e0:	b.ne	29450 <PyInit__decimal@@Base+0xeed0>  // b.any
   293e4:	ldr	x0, [x20, #24]
   293e8:	ldr	x2, [x20, #40]
   293ec:	add	x0, x2, x0, lsl #3
   293f0:	ldur	x0, [x0, #-8]
   293f4:	cbnz	x0, 29450 <PyInit__decimal@@Base+0xeed0>
   293f8:	mov	x2, x21
   293fc:	mov	x0, x19
   29400:	mov	w1, #0x100                 	// #256
   29404:	bl	28d68 <PyInit__decimal@@Base+0xe7e8>
   29408:	b	29210 <PyInit__decimal@@Base+0xec90>
   2940c:	mov	x23, x1
   29410:	mov	x22, x2
   29414:	b	29254 <PyInit__decimal@@Base+0xecd4>
   29418:	ldrb	w0, [x25]
   2941c:	tst	w0, #0xe
   29420:	b.ne	29438 <PyInit__decimal@@Base+0xeeb8>  // b.any
   29424:	ldr	x2, [x25, #24]
   29428:	ldr	x3, [x25, #40]
   2942c:	add	x2, x3, x2, lsl #3
   29430:	ldur	x2, [x2, #-8]
   29434:	cbz	x2, 293f8 <PyInit__decimal@@Base+0xee78>
   29438:	eor	w1, w1, w0
   2943c:	mov	w2, #0x2                   	// #2
   29440:	mov	x0, x19
   29444:	and	w1, w1, #0x1
   29448:	bl	28cd8 <PyInit__decimal@@Base+0xe758>
   2944c:	b	29210 <PyInit__decimal@@Base+0xec90>
   29450:	ldrb	w3, [x25]
   29454:	mov	x0, x19
   29458:	mov	w2, #0x2                   	// #2
   2945c:	eor	w1, w1, w3
   29460:	and	w1, w1, #0x1
   29464:	bl	28cd8 <PyInit__decimal@@Base+0xe758>
   29468:	ldp	x29, x30, [sp]
   2946c:	ldp	x19, x20, [sp, #16]
   29470:	ldp	x21, x22, [sp, #32]
   29474:	ldp	x25, x26, [sp, #64]
   29478:	add	sp, sp, #0x2a0
   2947c:	ret
   29480:	cmp	x27, #0x100
   29484:	b.le	297f0 <PyInit__decimal@@Base+0xf270>
   29488:	cmp	x8, #0x400
   2948c:	ldr	x6, [x22, #40]
   29490:	ldr	x7, [x23, #40]
   29494:	b.ls	298f0 <PyInit__decimal@@Base+0xf370>  // b.plast
   29498:	mov	x0, #0x300000000           	// #12884901888
   2949c:	cmp	x8, x0
   294a0:	b.ls	2976c <PyInit__decimal@@Base+0xf1ec>  // b.plast
   294a4:	stp	x6, x7, [sp, #96]
   294a8:	mvn	x0, x27
   294ac:	cmp	x0, x24
   294b0:	b.cc	29d94 <PyInit__decimal@@Base+0xf814>  // b.lo, b.ul, b.last
   294b4:	cmn	x8, #0x1
   294b8:	b.eq	29d94 <PyInit__decimal@@Base+0xf814>  // b.none
   294bc:	add	x28, x24, #0x1
   294c0:	add	x0, x8, #0x1
   294c4:	lsr	x28, x28, #1
   294c8:	add	x2, x28, #0x1
   294cc:	lsl	x3, x2, #1
   294d0:	stp	x3, x2, [sp, #112]
   294d4:	lsr	x1, x2, #63
   294d8:	adds	x4, x3, x2
   294dc:	cinc	x1, x1, cs  // cs = hs, nlast
   294e0:	cbnz	x1, 29d90 <PyInit__decimal@@Base+0xf810>
   294e4:	cmp	x0, x4
   294e8:	mov	x1, #0x8                   	// #8
   294ec:	csel	x0, x0, x4, cs  // cs = hs, nlast
   294f0:	str	x0, [sp, #152]
   294f4:	bl	25288 <PyInit__decimal@@Base+0xad08>
   294f8:	mov	x26, x0
   294fc:	cbz	x0, 29630 <PyInit__decimal@@Base+0xf0b0>
   29500:	mov	x0, #0x180000000           	// #6442450944
   29504:	cmp	x24, x0
   29508:	ldp	x6, x7, [sp, #96]
   2950c:	b.ls	295fc <PyInit__decimal@@Base+0xf07c>  // b.plast
   29510:	ldp	x3, x2, [sp, #112]
   29514:	mov	x1, x0
   29518:	cmp	x2, x1
   2951c:	mov	x0, x3
   29520:	b.ls	29cac <PyInit__decimal@@Base+0xf72c>  // b.plast
   29524:	add	x0, x28, #0x2
   29528:	lsr	x0, x0, #1
   2952c:	add	x28, x0, #0x1
   29530:	cmp	x28, x1
   29534:	lsl	x28, x28, #1
   29538:	b.ls	295e8 <PyInit__decimal@@Base+0xf068>  // b.plast
   2953c:	add	x0, x0, #0x2
   29540:	lsr	x0, x0, #1
   29544:	add	x2, x0, #0x1
   29548:	cmp	x2, x1
   2954c:	lsl	x4, x2, #1
   29550:	b.ls	29d68 <PyInit__decimal@@Base+0xf7e8>  // b.plast
   29554:	add	x0, x0, #0x2
   29558:	lsr	x0, x0, #1
   2955c:	add	x2, x0, #0x1
   29560:	cmp	x2, x1
   29564:	lsl	x2, x2, #1
   29568:	b.ls	29d78 <PyInit__decimal@@Base+0xf7f8>  // b.plast
   2956c:	add	x0, x0, #0x2
   29570:	lsr	x0, x0, #1
   29574:	add	x0, x0, #0x1
   29578:	cmp	x0, x1
   2957c:	lsl	x5, x0, #1
   29580:	b.ls	29d88 <PyInit__decimal@@Base+0xf808>  // b.plast
   29584:	stp	x4, x6, [sp, #96]
   29588:	stp	x7, x2, [sp, #112]
   2958c:	stp	x5, x3, [sp, #128]
   29590:	bl	25a78 <PyInit__decimal@@Base+0xb4f8>
   29594:	mvn	x1, x0
   29598:	ldr	x5, [sp, #128]
   2959c:	cmp	x5, x1
   295a0:	b.hi	29d94 <PyInit__decimal@@Base+0xf814>  // b.pmore
   295a4:	ldr	x2, [sp, #120]
   295a8:	add	x5, x5, x0
   295ac:	mvn	x0, x5
   295b0:	cmp	x2, x0
   295b4:	b.hi	29d94 <PyInit__decimal@@Base+0xf814>  // b.pmore
   295b8:	ldp	x4, x6, [sp, #96]
   295bc:	add	x2, x2, x5
   295c0:	mvn	x0, x2
   295c4:	ldr	x7, [sp, #112]
   295c8:	ldr	x3, [sp, #136]
   295cc:	cmp	x4, x0
   295d0:	b.hi	29d94 <PyInit__decimal@@Base+0xf814>  // b.pmore
   295d4:	add	x2, x4, x2
   295d8:	mvn	x0, x2
   295dc:	cmp	x28, x0
   295e0:	b.hi	29d94 <PyInit__decimal@@Base+0xf814>  // b.pmore
   295e4:	add	x28, x28, x2
   295e8:	mvn	x0, x28
   295ec:	cmp	x3, x0
   295f0:	b.hi	29d94 <PyInit__decimal@@Base+0xf814>  // b.pmore
   295f4:	adds	x0, x3, x28
   295f8:	b.ne	29cac <PyInit__decimal@@Base+0xf72c>  // b.any
   295fc:	mov	x5, x27
   29600:	mov	x4, x24
   29604:	mov	x2, x7
   29608:	mov	x1, x6
   2960c:	mov	x0, x26
   29610:	mov	x3, #0x0                   	// #0
   29614:	bl	25ef8 <PyInit__decimal@@Base+0xb978>
   29618:	cbnz	w0, 2978c <PyInit__decimal@@Base+0xf20c>
   2961c:	adrp	x1, 5f000 <PyInit__decimal@@Base+0x44a80>
   29620:	mov	x0, x26
   29624:	ldr	x1, [x1, #1704]
   29628:	blr	x1
   2962c:	nop
   29630:	mov	x2, x21
   29634:	mov	x0, x19
   29638:	mov	w1, #0x200                 	// #512
   2963c:	bl	28d68 <PyInit__decimal@@Base+0xe7e8>
   29640:	ldp	x23, x24, [sp, #48]
   29644:	ldp	x27, x28, [sp, #80]
   29648:	b	29210 <PyInit__decimal@@Base+0xec90>
   2964c:	ldr	x2, [x0, #112]
   29650:	cmp	x1, x2
   29654:	b.cs	29700 <PyInit__decimal@@Base+0xf180>  // b.hs, b.nlast
   29658:	ldr	x2, [x0, #88]
   2965c:	cmp	x1, x2
   29660:	b.cc	297c8 <PyInit__decimal@@Base+0xf248>  // b.lo, b.ul, b.last
   29664:	ldr	x4, [x0, #104]
   29668:	mov	x2, #0xe                   	// #14
   2966c:	cmp	x1, x4
   29670:	b.cs	296cc <PyInit__decimal@@Base+0xf14c>  // b.hs, b.nlast
   29674:	ldr	x0, [x0, #96]
   29678:	cmp	x1, x0
   2967c:	cset	x2, cs  // cs = hs, nlast
   29680:	add	x2, x2, #0xc
   29684:	b	296cc <PyInit__decimal@@Base+0xf14c>
   29688:	mov	x2, x21
   2968c:	mov	x0, x19
   29690:	bl	25588 <PyInit__decimal@@Base+0xb008>
   29694:	ldr	x3, [x19, #24]
   29698:	ldr	x26, [x19, #40]
   2969c:	b	2938c <PyInit__decimal@@Base+0xee0c>
   296a0:	ldr	x2, [x0, #48]
   296a4:	cmp	x1, x2
   296a8:	b.cc	297dc <PyInit__decimal@@Base+0xf25c>  // b.lo, b.ul, b.last
   296ac:	ldr	x4, [x0, #64]
   296b0:	mov	x2, #0x9                   	// #9
   296b4:	cmp	x1, x4
   296b8:	b.cs	296cc <PyInit__decimal@@Base+0xf14c>  // b.hs, b.nlast
   296bc:	ldr	x0, [x0, #56]
   296c0:	cmp	x1, x0
   296c4:	cset	x2, cs  // cs = hs, nlast
   296c8:	add	x2, x2, #0x7
   296cc:	sub	x3, x3, #0x1
   296d0:	ldp	x23, x24, [sp, #48]
   296d4:	add	x0, x3, x3, lsl #2
   296d8:	ldp	x27, x28, [sp, #80]
   296dc:	add	x0, x2, x0, lsl #2
   296e0:	sub	x3, x0, x3
   296e4:	str	x3, [x19, #16]
   296e8:	ldp	x29, x30, [sp]
   296ec:	ldp	x19, x20, [sp, #16]
   296f0:	ldp	x21, x22, [sp, #32]
   296f4:	ldp	x25, x26, [sp, #64]
   296f8:	add	sp, sp, #0x2a0
   296fc:	ret
   29700:	ldr	x2, [x0, #144]
   29704:	cmp	x1, x2
   29708:	b.cs	29758 <PyInit__decimal@@Base+0xf1d8>  // b.hs, b.nlast
   2970c:	ldr	x2, [x0, #128]
   29710:	cmp	x1, x2
   29714:	b.cs	29c2c <PyInit__decimal@@Base+0xf6ac>  // b.hs, b.nlast
   29718:	ldr	x0, [x0, #120]
   2971c:	cmp	x1, x0
   29720:	cset	x2, cs  // cs = hs, nlast
   29724:	add	x2, x2, #0xf
   29728:	b	296cc <PyInit__decimal@@Base+0xf14c>
   2972c:	mov	x2, x21
   29730:	mov	x0, x19
   29734:	bl	25438 <PyInit__decimal@@Base+0xaeb8>
   29738:	ldr	x3, [x19, #24]
   2973c:	ldr	x26, [x19, #40]
   29740:	b	2938c <PyInit__decimal@@Base+0xee0c>
   29744:	ldr	x0, [x0, #24]
   29748:	cmp	x1, x0
   2974c:	cset	x2, cs  // cs = hs, nlast
   29750:	add	x2, x2, #0x3
   29754:	b	296cc <PyInit__decimal@@Base+0xf14c>
   29758:	ldr	x0, [x0, #152]
   2975c:	cmp	x1, x0
   29760:	cset	x2, cs  // cs = hs, nlast
   29764:	add	x2, x2, #0x13
   29768:	b	296cc <PyInit__decimal@@Base+0xf14c>
   2976c:	mov	x3, x27
   29770:	mov	x2, x24
   29774:	mov	x1, x7
   29778:	mov	x0, x6
   2977c:	add	x4, sp, #0x98
   29780:	bl	25ad0 <PyInit__decimal@@Base+0xb550>
   29784:	mov	x26, x0
   29788:	cbz	x0, 29630 <PyInit__decimal@@Base+0xf0b0>
   2978c:	ldrb	w0, [x19]
   29790:	tst	w0, #0xe0
   29794:	b.ne	297ac <PyInit__decimal@@Base+0xf22c>  // b.any
   29798:	adrp	x1, 5f000 <PyInit__decimal@@Base+0x44a80>
   2979c:	ldr	x0, [x19, #40]
   297a0:	ldr	x1, [x1, #1704]
   297a4:	blr	x1
   297a8:	ldrb	w0, [x19]
   297ac:	ldr	x3, [sp, #152]
   297b0:	and	w0, w0, #0x1f
   297b4:	adrp	x24, 5f000 <PyInit__decimal@@Base+0x44a80>
   297b8:	strb	w0, [x19]
   297bc:	mov	x5, x3
   297c0:	stp	x3, x26, [x19, #32]
   297c4:	b	29318 <PyInit__decimal@@Base+0xed98>
   297c8:	ldr	x0, [x0, #80]
   297cc:	cmp	x1, x0
   297d0:	cset	x2, cs  // cs = hs, nlast
   297d4:	add	x2, x2, #0xa
   297d8:	b	296cc <PyInit__decimal@@Base+0xf14c>
   297dc:	ldr	x0, [x0, #40]
   297e0:	cmp	x1, x0
   297e4:	cset	x2, cs  // cs = hs, nlast
   297e8:	add	x2, x2, #0x5
   297ec:	b	296cc <PyInit__decimal@@Base+0xf14c>
   297f0:	mov	x0, x8
   297f4:	mov	x1, #0x8                   	// #8
   297f8:	bl	25288 <PyInit__decimal@@Base+0xad08>
   297fc:	mov	x26, x0
   29800:	cbz	x0, 29630 <PyInit__decimal@@Base+0xf0b0>
   29804:	ldr	x3, [x23, #24]
   29808:	ldr	x4, [x22, #24]
   2980c:	cmp	x3, #0x1
   29810:	ldr	x5, [x22, #40]
   29814:	ldr	x1, [x23, #40]
   29818:	b.eq	29c7c <PyInit__decimal@@Base+0xf6fc>  // b.none
   2981c:	mov	x2, x5
   29820:	bl	1b610 <PyInit__decimal@@Base+0x1090>
   29824:	b	2978c <PyInit__decimal@@Base+0xf20c>
   29828:	ldr	x3, [x1]
   2982c:	mov	x2, x24
   29830:	mov	x1, x5
   29834:	bl	1b560 <PyInit__decimal@@Base+0xfe0>
   29838:	ldr	x8, [sp, #152]
   2983c:	b	292b8 <PyInit__decimal@@Base+0xed38>
   29840:	ldr	x0, [x22, #40]
   29844:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27a80>
   29848:	ldr	x3, [x23, #40]
   2984c:	mov	x1, #0x89e80000            	// #2313682944
   29850:	ldr	x0, [x0]
   29854:	movk	x1, #0x2304, lsl #32
   29858:	ldr	x3, [x3]
   2985c:	movk	x1, #0x8ac7, lsl #48
   29860:	ldr	x6, [x2, #712]
   29864:	mov	x5, #0x76180000            	// #1981284352
   29868:	mul	x2, x0, x3
   2986c:	movk	x5, #0xdcfb, lsl #32
   29870:	umulh	x0, x0, x3
   29874:	movk	x5, #0x7538, lsl #48
   29878:	ldr	x26, [x19, #40]
   2987c:	and	x4, x1, x2, asr #63
   29880:	add	x4, x4, x2
   29884:	add	x3, x0, x2, lsr #63
   29888:	add	x5, x0, x5
   2988c:	adrp	x24, 5f000 <PyInit__decimal@@Base+0x44a80>
   29890:	madd	x7, x3, x6, x4
   29894:	umulh	x3, x3, x6
   29898:	cmp	x4, x7
   2989c:	cinc	x3, x3, hi  // hi = pmore
   298a0:	add	x0, x0, x3
   298a4:	mvn	x0, x0
   298a8:	mul	x4, x0, x1
   298ac:	umulh	x3, x0, x1
   298b0:	adds	x2, x2, x4
   298b4:	adc	x3, x3, x5
   298b8:	and	x1, x3, x1
   298bc:	sub	x3, x3, x0
   298c0:	add	x0, x1, x2
   298c4:	stp	x0, x3, [x26]
   298c8:	ldrb	w0, [x19]
   298cc:	ldr	x5, [x19, #32]
   298d0:	ldr	x3, [sp, #152]
   298d4:	b	29318 <PyInit__decimal@@Base+0xed98>
   298d8:	mov	x2, x21
   298dc:	mov	x0, x19
   298e0:	bl	25588 <PyInit__decimal@@Base+0xb008>
   298e4:	cbz	w0, 29a60 <PyInit__decimal@@Base+0xf4e0>
   298e8:	ldr	x8, [sp, #152]
   298ec:	b	292e4 <PyInit__decimal@@Base+0xed64>
   298f0:	mvn	x0, x27
   298f4:	cmp	x0, x24
   298f8:	b.cc	29d94 <PyInit__decimal@@Base+0xf814>  // b.lo, b.ul, b.last
   298fc:	cmn	x8, #0x1
   29900:	b.eq	29d94 <PyInit__decimal@@Base+0xf814>  // b.none
   29904:	add	x28, x24, #0x1
   29908:	add	x0, x8, #0x1
   2990c:	lsr	x28, x28, #1
   29910:	add	x2, x28, #0x1
   29914:	lsl	x3, x2, #1
   29918:	lsr	x1, x2, #63
   2991c:	adds	x4, x3, x2
   29920:	cinc	x1, x1, cs  // cs = hs, nlast
   29924:	cbnz	x1, 29d90 <PyInit__decimal@@Base+0xf810>
   29928:	cmp	x0, x4
   2992c:	mov	x1, #0x8                   	// #8
   29930:	csel	x0, x0, x4, cs  // cs = hs, nlast
   29934:	stp	x6, x7, [sp, #96]
   29938:	stp	x2, x3, [sp, #112]
   2993c:	str	x0, [sp, #152]
   29940:	bl	25288 <PyInit__decimal@@Base+0xad08>
   29944:	mov	x26, x0
   29948:	cbz	x0, 29630 <PyInit__decimal@@Base+0xf0b0>
   2994c:	cmp	x24, #0x10
   29950:	ldp	x6, x7, [sp, #96]
   29954:	b.ls	29c90 <PyInit__decimal@@Base+0xf710>  // b.plast
   29958:	ldp	x2, x3, [sp, #112]
   2995c:	cmp	x2, #0x10
   29960:	mov	x0, x3
   29964:	b.ls	29d04 <PyInit__decimal@@Base+0xf784>  // b.plast
   29968:	add	x0, x28, #0x2
   2996c:	lsr	x0, x0, #1
   29970:	add	x28, x0, #0x1
   29974:	cmp	x28, #0x10
   29978:	lsl	x28, x28, #1
   2997c:	b.ls	29a2c <PyInit__decimal@@Base+0xf4ac>  // b.plast
   29980:	add	x0, x0, #0x2
   29984:	lsr	x0, x0, #1
   29988:	add	x1, x0, #0x1
   2998c:	cmp	x1, #0x10
   29990:	lsl	x5, x1, #1
   29994:	b.ls	29d60 <PyInit__decimal@@Base+0xf7e0>  // b.plast
   29998:	add	x0, x0, #0x2
   2999c:	lsr	x0, x0, #1
   299a0:	add	x2, x0, #0x1
   299a4:	cmp	x2, #0x10
   299a8:	lsl	x2, x2, #1
   299ac:	b.ls	29d70 <PyInit__decimal@@Base+0xf7f0>  // b.plast
   299b0:	add	x0, x0, #0x2
   299b4:	lsr	x0, x0, #1
   299b8:	add	x0, x0, #0x1
   299bc:	cmp	x0, #0x10
   299c0:	lsl	x4, x0, #1
   299c4:	b.ls	29d80 <PyInit__decimal@@Base+0xf800>  // b.plast
   299c8:	mov	x1, #0x10                  	// #16
   299cc:	stp	x5, x6, [sp, #96]
   299d0:	str	x7, [sp, #112]
   299d4:	stp	x2, x4, [sp, #128]
   299d8:	bl	25a78 <PyInit__decimal@@Base+0xb4f8>
   299dc:	mvn	x1, x0
   299e0:	ldr	x4, [sp, #136]
   299e4:	cmp	x4, x1
   299e8:	b.hi	29d94 <PyInit__decimal@@Base+0xf814>  // b.pmore
   299ec:	ldr	x2, [sp, #128]
   299f0:	add	x4, x4, x0
   299f4:	mvn	x0, x4
   299f8:	cmp	x2, x0
   299fc:	b.hi	29d94 <PyInit__decimal@@Base+0xf814>  // b.pmore
   29a00:	ldp	x5, x6, [sp, #96]
   29a04:	add	x2, x2, x4
   29a08:	mvn	x0, x2
   29a0c:	ldp	x7, x3, [sp, #112]
   29a10:	cmp	x5, x0
   29a14:	b.hi	29d94 <PyInit__decimal@@Base+0xf814>  // b.pmore
   29a18:	add	x2, x5, x2
   29a1c:	mvn	x0, x2
   29a20:	cmp	x28, x0
   29a24:	b.hi	29d94 <PyInit__decimal@@Base+0xf814>  // b.pmore
   29a28:	add	x28, x28, x2
   29a2c:	mvn	x0, x28
   29a30:	cmp	x3, x0
   29a34:	b.hi	29d94 <PyInit__decimal@@Base+0xf814>  // b.pmore
   29a38:	adds	x0, x3, x28
   29a3c:	b.ne	29d04 <PyInit__decimal@@Base+0xf784>  // b.any
   29a40:	mov	x5, x27
   29a44:	mov	x4, x24
   29a48:	mov	x2, x7
   29a4c:	mov	x1, x6
   29a50:	mov	x0, x26
   29a54:	mov	x3, #0x0                   	// #0
   29a58:	bl	256f0 <PyInit__decimal@@Base+0xb170>
   29a5c:	b	2978c <PyInit__decimal@@Base+0xf20c>
   29a60:	ldp	x23, x24, [sp, #48]
   29a64:	ldp	x27, x28, [sp, #80]
   29a68:	b	29210 <PyInit__decimal@@Base+0xec90>
   29a6c:	ldr	x3, [x1]
   29a70:	mov	x0, #0x89e80000            	// #2313682944
   29a74:	ldr	x2, [x5]
   29a78:	adrp	x4, 42000 <PyInit__decimal@@Base+0x27a80>
   29a7c:	movk	x0, #0x2304, lsl #32
   29a80:	mov	x6, #0x76180000            	// #1981284352
   29a84:	movk	x0, #0x8ac7, lsl #48
   29a88:	movk	x6, #0xdcfb, lsl #32
   29a8c:	mul	x7, x2, x3
   29a90:	movk	x6, #0x7538, lsl #48
   29a94:	umulh	x2, x2, x3
   29a98:	ldr	x4, [x4, #712]
   29a9c:	and	x9, x0, x7, asr #63
   29aa0:	add	x9, x9, x7
   29aa4:	add	x3, x2, x7, lsr #63
   29aa8:	add	x10, x2, x6
   29aac:	madd	x11, x3, x4, x9
   29ab0:	umulh	x3, x3, x4
   29ab4:	cmp	x9, x11
   29ab8:	cinc	x3, x3, hi  // hi = pmore
   29abc:	add	x2, x2, x3
   29ac0:	mvn	x2, x2
   29ac4:	mul	x9, x2, x0
   29ac8:	umulh	x3, x2, x0
   29acc:	adds	x9, x7, x9
   29ad0:	adc	x3, x3, x10
   29ad4:	and	x10, x3, x0
   29ad8:	sub	x7, x3, x2
   29adc:	add	x9, x10, x9
   29ae0:	stp	x9, x7, [sp, #160]
   29ae4:	ldr	x9, [x1]
   29ae8:	ldr	x2, [x5, #8]
   29aec:	mul	x3, x2, x9
   29af0:	umulh	x2, x2, x9
   29af4:	adds	x3, x3, x7
   29af8:	cinc	x2, x2, cs  // cs = hs, nlast
   29afc:	and	x9, x0, x3, asr #63
   29b00:	add	x7, x2, x3, lsr #63
   29b04:	add	x9, x9, x3
   29b08:	add	x11, x2, x6
   29b0c:	umulh	x10, x7, x4
   29b10:	madd	x7, x7, x4, x9
   29b14:	cmp	x9, x7
   29b18:	cinc	x7, x10, hi  // hi = pmore
   29b1c:	add	x2, x2, x7
   29b20:	mvn	x2, x2
   29b24:	mul	x9, x2, x0
   29b28:	umulh	x7, x2, x0
   29b2c:	adds	x3, x3, x9
   29b30:	adc	x7, x7, x11
   29b34:	cmp	x27, #0x1
   29b38:	and	x9, x7, x0
   29b3c:	sub	x7, x7, x2
   29b40:	add	x9, x9, x3
   29b44:	stp	x9, x7, [sp, #168]
   29b48:	b.eq	292b8 <PyInit__decimal@@Base+0xed38>  // b.none
   29b4c:	ldr	x2, [x5]
   29b50:	ldr	x10, [x1, #8]
   29b54:	mul	x3, x2, x10
   29b58:	umulh	x2, x2, x10
   29b5c:	adds	x3, x3, x9
   29b60:	cinc	x2, x2, cs  // cs = hs, nlast
   29b64:	and	x10, x0, x3, asr #63
   29b68:	add	x9, x2, x3, lsr #63
   29b6c:	add	x10, x10, x3
   29b70:	add	x12, x2, x6
   29b74:	umulh	x11, x9, x4
   29b78:	madd	x9, x9, x4, x10
   29b7c:	cmp	x10, x9
   29b80:	cinc	x9, x11, hi  // hi = pmore
   29b84:	add	x2, x2, x9
   29b88:	mvn	x2, x2
   29b8c:	mul	x10, x2, x0
   29b90:	umulh	x9, x2, x0
   29b94:	adds	x3, x3, x10
   29b98:	adc	x9, x9, x12
   29b9c:	and	x10, x9, x0
   29ba0:	sub	x9, x9, x2
   29ba4:	add	x3, x10, x3
   29ba8:	str	x3, [sp, #168]
   29bac:	str	x9, [sp, #184]
   29bb0:	ldr	x3, [x1, #8]
   29bb4:	ldr	x2, [x5, #8]
   29bb8:	mul	x1, x2, x3
   29bbc:	umulh	x2, x2, x3
   29bc0:	adds	x1, x1, x7
   29bc4:	cinc	x2, x2, cs  // cs = hs, nlast
   29bc8:	adds	x1, x1, x9
   29bcc:	cinc	x2, x2, cs  // cs = hs, nlast
   29bd0:	and	x5, x0, x1, asr #63
   29bd4:	add	x3, x2, x1, lsr #63
   29bd8:	add	x5, x5, x1
   29bdc:	add	x6, x2, x6
   29be0:	umulh	x7, x3, x4
   29be4:	madd	x3, x3, x4, x5
   29be8:	cmp	x5, x3
   29bec:	cinc	x3, x7, hi  // hi = pmore
   29bf0:	add	x2, x2, x3
   29bf4:	mvn	x2, x2
   29bf8:	mul	x4, x2, x0
   29bfc:	umulh	x3, x2, x0
   29c00:	adds	x1, x1, x4
   29c04:	adc	x6, x3, x6
   29c08:	and	x0, x6, x0
   29c0c:	sub	x6, x6, x2
   29c10:	add	x0, x0, x1
   29c14:	stp	x0, x6, [sp, #176]
   29c18:	b	292b8 <PyInit__decimal@@Base+0xed38>
   29c1c:	mov	x2, x21
   29c20:	mov	x0, x19
   29c24:	bl	25438 <PyInit__decimal@@Base+0xaeb8>
   29c28:	b	298e4 <PyInit__decimal@@Base+0xf364>
   29c2c:	ldr	x0, [x0, #136]
   29c30:	cmp	x1, x0
   29c34:	cset	x2, cs  // cs = hs, nlast
   29c38:	add	x2, x2, #0x11
   29c3c:	b	296cc <PyInit__decimal@@Base+0xf14c>
   29c40:	ldrb	w1, [x25]
   29c44:	mov	x3, #0x0                   	// #0
   29c48:	ldrb	w0, [x20]
   29c4c:	ldrb	w4, [x19]
   29c50:	eor	w0, w0, w1
   29c54:	and	w0, w0, #0x1
   29c58:	and	w4, w4, #0xf0
   29c5c:	orr	w4, w4, w0
   29c60:	strb	w4, [x19]
   29c64:	ldr	x5, [x19, #32]
   29c68:	ldr	x1, [x22, #8]
   29c6c:	ldr	x0, [x23, #8]
   29c70:	add	x0, x0, x1
   29c74:	str	x0, [x19, #8]
   29c78:	b	29368 <PyInit__decimal@@Base+0xede8>
   29c7c:	ldr	x3, [x1]
   29c80:	mov	x2, x4
   29c84:	mov	x1, x5
   29c88:	bl	1b560 <PyInit__decimal@@Base+0xfe0>
   29c8c:	b	2978c <PyInit__decimal@@Base+0xf20c>
   29c90:	mov	x5, x27
   29c94:	mov	x4, x24
   29c98:	mov	x2, x7
   29c9c:	mov	x1, x6
   29ca0:	mov	x3, #0x0                   	// #0
   29ca4:	bl	256f0 <PyInit__decimal@@Base+0xb170>
   29ca8:	b	2978c <PyInit__decimal@@Base+0xf20c>
   29cac:	mov	x1, #0x8                   	// #8
   29cb0:	stp	x6, x7, [sp, #96]
   29cb4:	bl	25288 <PyInit__decimal@@Base+0xad08>
   29cb8:	mov	x28, x0
   29cbc:	ldp	x6, x7, [sp, #96]
   29cc0:	cbz	x0, 2961c <PyInit__decimal@@Base+0xf09c>
   29cc4:	mov	x3, x0
   29cc8:	mov	x5, x27
   29ccc:	mov	x4, x24
   29cd0:	mov	x2, x7
   29cd4:	mov	x1, x6
   29cd8:	mov	x0, x26
   29cdc:	bl	25ef8 <PyInit__decimal@@Base+0xb978>
   29ce0:	cbnz	w0, 29d4c <PyInit__decimal@@Base+0xf7cc>
   29ce4:	adrp	x20, 5f000 <PyInit__decimal@@Base+0x44a80>
   29ce8:	mov	x0, x26
   29cec:	ldr	x1, [x20, #1704]
   29cf0:	blr	x1
   29cf4:	ldr	x1, [x20, #1704]
   29cf8:	mov	x0, x28
   29cfc:	blr	x1
   29d00:	b	29630 <PyInit__decimal@@Base+0xf0b0>
   29d04:	mov	x1, #0x8                   	// #8
   29d08:	stp	x6, x7, [sp, #96]
   29d0c:	bl	25288 <PyInit__decimal@@Base+0xad08>
   29d10:	mov	x28, x0
   29d14:	ldp	x6, x7, [sp, #96]
   29d18:	cbz	x0, 2961c <PyInit__decimal@@Base+0xf09c>
   29d1c:	mov	x1, x6
   29d20:	mov	x3, x0
   29d24:	mov	x5, x27
   29d28:	mov	x0, x26
   29d2c:	mov	x4, x24
   29d30:	mov	x2, x7
   29d34:	bl	256f0 <PyInit__decimal@@Base+0xb170>
   29d38:	adrp	x1, 5f000 <PyInit__decimal@@Base+0x44a80>
   29d3c:	mov	x0, x28
   29d40:	ldr	x1, [x1, #1704]
   29d44:	blr	x1
   29d48:	b	2978c <PyInit__decimal@@Base+0xf20c>
   29d4c:	adrp	x1, 5f000 <PyInit__decimal@@Base+0x44a80>
   29d50:	mov	x0, x28
   29d54:	ldr	x1, [x1, #1704]
   29d58:	blr	x1
   29d5c:	b	2978c <PyInit__decimal@@Base+0xf20c>
   29d60:	add	x28, x28, x5
   29d64:	b	29a2c <PyInit__decimal@@Base+0xf4ac>
   29d68:	add	x28, x28, x4
   29d6c:	b	295e8 <PyInit__decimal@@Base+0xf068>
   29d70:	add	x2, x5, x2
   29d74:	b	29a28 <PyInit__decimal@@Base+0xf4a8>
   29d78:	add	x2, x4, x2
   29d7c:	b	295e4 <PyInit__decimal@@Base+0xf064>
   29d80:	add	x2, x2, x4
   29d84:	b	29a18 <PyInit__decimal@@Base+0xf498>
   29d88:	add	x2, x2, x5
   29d8c:	b	295d4 <PyInit__decimal@@Base+0xf054>
   29d90:	bl	25a20 <PyInit__decimal@@Base+0xb4a0>
   29d94:	bl	259c8 <PyInit__decimal@@Base+0xb448>
   29d98:	stp	x29, x30, [sp, #-32]!
   29d9c:	mov	x29, sp
   29da0:	stp	x19, x20, [sp, #16]
   29da4:	mov	x20, x0
   29da8:	ldr	x0, [x0, #24]
   29dac:	bl	25340 <PyInit__decimal@@Base+0xadc0>
   29db0:	mov	x19, x0
   29db4:	cbz	x0, 29df4 <PyInit__decimal@@Base+0xf874>
   29db8:	ldr	x2, [x20, #24]
   29dbc:	ldr	x1, [x20, #40]
   29dc0:	ldr	x0, [x0, #40]
   29dc4:	lsl	x2, x2, #3
   29dc8:	bl	6470 <memcpy@plt>
   29dcc:	ldrb	w1, [x20]
   29dd0:	ldrb	w0, [x19]
   29dd4:	bfxil	w0, w1, #0, #4
   29dd8:	strb	w0, [x19]
   29ddc:	ldr	x0, [x20, #8]
   29de0:	str	x0, [x19, #8]
   29de4:	ldr	x0, [x20, #16]
   29de8:	str	x0, [x19, #16]
   29dec:	ldr	x0, [x20, #24]
   29df0:	str	x0, [x19, #24]
   29df4:	mov	x0, x19
   29df8:	ldp	x19, x20, [sp, #16]
   29dfc:	ldp	x29, x30, [sp], #32
   29e00:	ret
   29e04:	nop
   29e08:	stp	x29, x30, [sp, #-32]!
   29e0c:	mov	x29, sp
   29e10:	str	x19, [sp, #16]
   29e14:	mov	x19, x0
   29e18:	bl	28fe0 <PyInit__decimal@@Base+0xea60>
   29e1c:	cbz	w0, 29e30 <PyInit__decimal@@Base+0xf8b0>
   29e20:	ldrb	w1, [x19]
   29e24:	mov	w0, #0x1                   	// #1
   29e28:	and	w1, w1, #0xfffffffe
   29e2c:	strb	w1, [x19]
   29e30:	ldr	x19, [sp, #16]
   29e34:	ldp	x29, x30, [sp], #32
   29e38:	ret
   29e3c:	nop
   29e40:	stp	x29, x30, [sp, #-32]!
   29e44:	mov	x29, sp
   29e48:	str	x19, [sp, #16]
   29e4c:	mov	x19, x0
   29e50:	bl	28fe0 <PyInit__decimal@@Base+0xea60>
   29e54:	cbz	w0, 29e68 <PyInit__decimal@@Base+0xf8e8>
   29e58:	ldrb	w1, [x19]
   29e5c:	mov	w0, #0x1                   	// #1
   29e60:	eor	w1, w1, w0
   29e64:	strb	w1, [x19]
   29e68:	ldr	x19, [sp, #16]
   29e6c:	ldp	x29, x30, [sp], #32
   29e70:	ret
   29e74:	nop
   29e78:	stp	x29, x30, [sp, #-32]!
   29e7c:	mov	x4, x2
   29e80:	mov	x2, x3
   29e84:	mov	x29, sp
   29e88:	stp	x19, x20, [sp, #16]
   29e8c:	mov	x19, x0
   29e90:	ldrb	w20, [x4]
   29e94:	bl	28fe0 <PyInit__decimal@@Base+0xea60>
   29e98:	cbz	w0, 29eac <PyInit__decimal@@Base+0xf92c>
   29e9c:	ldrb	w1, [x19]
   29ea0:	mov	w0, #0x1                   	// #1
   29ea4:	bfxil	w1, w20, #0, #1
   29ea8:	strb	w1, [x19]
   29eac:	ldp	x19, x20, [sp, #16]
   29eb0:	ldp	x29, x30, [sp], #32
   29eb4:	ret
   29eb8:	ldrb	w3, [x0]
   29ebc:	tst	w3, #0xe
   29ec0:	b.ne	29ed0 <PyInit__decimal@@Base+0xf950>  // b.any
   29ec4:	ldrb	w4, [x1]
   29ec8:	tst	w4, #0xe
   29ecc:	b.eq	29ee4 <PyInit__decimal@@Base+0xf964>  // b.none
   29ed0:	tst	w3, #0xc
   29ed4:	b.ne	29ee8 <PyInit__decimal@@Base+0xf968>  // b.any
   29ed8:	ldrb	w3, [x1]
   29edc:	tst	w3, #0xc
   29ee0:	b.ne	29ee8 <PyInit__decimal@@Base+0xf968>  // b.any
   29ee4:	b	26c80 <PyInit__decimal@@Base+0xc700>
   29ee8:	ldr	w0, [x2]
   29eec:	orr	w0, w0, #0x100
   29ef0:	str	w0, [x2]
   29ef4:	mov	w0, #0x7fffffff            	// #2147483647
   29ef8:	ret
   29efc:	nop
   29f00:	stp	x29, x30, [sp, #-48]!
   29f04:	mov	x29, sp
   29f08:	stp	x19, x20, [sp, #16]
   29f0c:	mov	x19, x1
   29f10:	mov	x20, x2
   29f14:	str	x21, [sp, #32]
   29f18:	mov	x21, x0
   29f1c:	ldrb	w0, [x1]
   29f20:	tst	w0, #0xe
   29f24:	b.ne	29f70 <PyInit__decimal@@Base+0xf9f0>  // b.any
   29f28:	ldrb	w0, [x2]
   29f2c:	tst	w0, #0xe
   29f30:	b.ne	29f70 <PyInit__decimal@@Base+0xf9f0>  // b.any
   29f34:	mov	x1, x20
   29f38:	mov	x0, x19
   29f3c:	bl	26c80 <PyInit__decimal@@Base+0xc700>
   29f40:	mov	w19, w0
   29f44:	cmp	w19, #0x0
   29f48:	mov	x0, x21
   29f4c:	lsr	w1, w19, #31
   29f50:	cset	x2, ne  // ne = any
   29f54:	mov	x3, #0x0                   	// #0
   29f58:	bl	26d90 <PyInit__decimal@@Base+0xc810>
   29f5c:	mov	w0, w19
   29f60:	ldp	x19, x20, [sp, #16]
   29f64:	ldr	x21, [sp, #32]
   29f68:	ldp	x29, x30, [sp], #48
   29f6c:	ret
   29f70:	mov	x2, x20
   29f74:	mov	x1, x19
   29f78:	mov	x0, x21
   29f7c:	bl	29108 <PyInit__decimal@@Base+0xeb88>
   29f80:	cbz	w0, 29f34 <PyInit__decimal@@Base+0xf9b4>
   29f84:	mov	w19, #0x7fffffff            	// #2147483647
   29f88:	mov	w0, w19
   29f8c:	ldp	x19, x20, [sp, #16]
   29f90:	ldr	x21, [sp, #32]
   29f94:	ldp	x29, x30, [sp], #48
   29f98:	ret
   29f9c:	nop
   29fa0:	stp	x29, x30, [sp, #-48]!
   29fa4:	mov	x29, sp
   29fa8:	stp	x19, x20, [sp, #16]
   29fac:	mov	x19, x1
   29fb0:	mov	x20, x2
   29fb4:	stp	x21, x22, [sp, #32]
   29fb8:	mov	x21, x0
   29fbc:	mov	x22, x4
   29fc0:	ldrb	w0, [x1]
   29fc4:	tst	w0, #0xe
   29fc8:	b.ne	2a014 <PyInit__decimal@@Base+0xfa94>  // b.any
   29fcc:	ldrb	w0, [x2]
   29fd0:	tst	w0, #0xe
   29fd4:	b.ne	2a014 <PyInit__decimal@@Base+0xfa94>  // b.any
   29fd8:	mov	x1, x20
   29fdc:	mov	x0, x19
   29fe0:	bl	26c80 <PyInit__decimal@@Base+0xc700>
   29fe4:	mov	w19, w0
   29fe8:	cmp	w19, #0x0
   29fec:	mov	x0, x21
   29ff0:	lsr	w1, w19, #31
   29ff4:	cset	x2, ne  // ne = any
   29ff8:	mov	x3, #0x0                   	// #0
   29ffc:	bl	26d90 <PyInit__decimal@@Base+0xc810>
   2a000:	mov	w0, w19
   2a004:	ldp	x19, x20, [sp, #16]
   2a008:	ldp	x21, x22, [sp, #32]
   2a00c:	ldp	x29, x30, [sp], #48
   2a010:	ret
   2a014:	mov	x4, x22
   2a018:	mov	x2, x20
   2a01c:	mov	x1, x19
   2a020:	mov	x0, x21
   2a024:	bl	29108 <PyInit__decimal@@Base+0xeb88>
   2a028:	cbz	w0, 29fd8 <PyInit__decimal@@Base+0xfa58>
   2a02c:	ldr	w0, [x22]
   2a030:	mov	w19, #0x7fffffff            	// #2147483647
   2a034:	orr	w0, w0, #0x100
   2a038:	str	w0, [x22]
   2a03c:	mov	w0, w19
   2a040:	ldp	x19, x20, [sp, #16]
   2a044:	ldp	x21, x22, [sp, #32]
   2a048:	ldp	x29, x30, [sp], #48
   2a04c:	ret
   2a050:	stp	x29, x30, [sp, #-144]!
   2a054:	mov	x29, sp
   2a058:	stp	x19, x20, [sp, #16]
   2a05c:	ldrb	w4, [x0]
   2a060:	ldrb	w3, [x1]
   2a064:	and	w19, w4, #0x1
   2a068:	and	w2, w3, #0x1
   2a06c:	sub	w20, w2, w19
   2a070:	cmp	w2, w19
   2a074:	b.ne	2a0bc <PyInit__decimal@@Base+0xfb3c>  // b.any
   2a078:	neg	w2, w2
   2a07c:	stp	x21, x22, [sp, #32]
   2a080:	tst	w4, #0xc
   2a084:	lsl	w19, w2, #1
   2a088:	mov	x22, x0
   2a08c:	mov	x21, x1
   2a090:	and	w5, w3, #0xc
   2a094:	add	w20, w19, #0x1
   2a098:	b.eq	2a0cc <PyInit__decimal@@Base+0xfb4c>  // b.none
   2a09c:	cbz	w5, 2a0e8 <PyInit__decimal@@Base+0xfb68>
   2a0a0:	ubfx	x0, x4, #2, #1
   2a0a4:	ubfx	x1, x3, #2, #1
   2a0a8:	cmp	w0, w1
   2a0ac:	b.eq	2a130 <PyInit__decimal@@Base+0xfbb0>  // b.none
   2a0b0:	sub	w0, w0, w1
   2a0b4:	ldp	x21, x22, [sp, #32]
   2a0b8:	mul	w20, w20, w0
   2a0bc:	mov	w0, w20
   2a0c0:	ldp	x19, x20, [sp, #16]
   2a0c4:	ldp	x29, x30, [sp], #144
   2a0c8:	ret
   2a0cc:	cbz	w5, 2a0fc <PyInit__decimal@@Base+0xfb7c>
   2a0d0:	mvn	w20, w19
   2a0d4:	mov	w0, w20
   2a0d8:	ldp	x19, x20, [sp, #16]
   2a0dc:	ldp	x21, x22, [sp, #32]
   2a0e0:	ldp	x29, x30, [sp], #144
   2a0e4:	ret
   2a0e8:	mov	w0, w20
   2a0ec:	ldp	x19, x20, [sp, #16]
   2a0f0:	ldp	x21, x22, [sp, #32]
   2a0f4:	ldp	x29, x30, [sp], #144
   2a0f8:	ret
   2a0fc:	bl	26bd8 <PyInit__decimal@@Base+0xc658>
   2a100:	cbnz	w0, 2a124 <PyInit__decimal@@Base+0xfba4>
   2a104:	ldr	x0, [x21, #8]
   2a108:	mov	w2, #0x0                   	// #0
   2a10c:	ldr	x1, [x22, #8]
   2a110:	ldp	x21, x22, [sp, #32]
   2a114:	cmp	x1, x0
   2a118:	csinv	w19, w20, w19, ge  // ge = tcont
   2a11c:	csel	w20, w19, w2, ne  // ne = any
   2a120:	b	2a0bc <PyInit__decimal@@Base+0xfb3c>
   2a124:	mul	w20, w20, w0
   2a128:	ldp	x21, x22, [sp, #32]
   2a12c:	b	2a0bc <PyInit__decimal@@Base+0xfb3c>
   2a130:	ldr	x5, [x22, #24]
   2a134:	ldr	x6, [x21, #24]
   2a138:	cmp	x5, #0x0
   2a13c:	b.le	2a148 <PyInit__decimal@@Base+0xfbc8>
   2a140:	cmp	x6, #0x0
   2a144:	b.gt	2a168 <PyInit__decimal@@Base+0xfbe8>
   2a148:	cmp	x5, #0x0
   2a14c:	cset	w0, gt
   2a150:	cmp	x6, #0x0
   2a154:	cset	w1, gt
   2a158:	sub	w0, w0, w1
   2a15c:	ldp	x21, x22, [sp, #32]
   2a160:	mul	w20, w20, w0
   2a164:	b	2a0bc <PyInit__decimal@@Base+0xfb3c>
   2a168:	and	w4, w4, #0x1f
   2a16c:	and	w2, w3, #0x1f
   2a170:	orr	w3, w4, #0x40
   2a174:	strb	w3, [sp, #48]
   2a178:	ldp	x9, x8, [x22, #32]
   2a17c:	orr	w2, w2, #0x40
   2a180:	ldp	x4, x3, [x21, #32]
   2a184:	add	x1, sp, #0x60
   2a188:	ldr	x7, [x21, #16]
   2a18c:	add	x0, sp, #0x30
   2a190:	ldr	x10, [x22, #16]
   2a194:	stp	xzr, x10, [sp, #56]
   2a198:	stp	x5, x9, [sp, #72]
   2a19c:	str	x8, [sp, #88]
   2a1a0:	strb	w2, [sp, #96]
   2a1a4:	stp	xzr, x7, [sp, #104]
   2a1a8:	stp	x6, x4, [sp, #120]
   2a1ac:	str	x3, [sp, #136]
   2a1b0:	bl	26bd8 <PyInit__decimal@@Base+0xc658>
   2a1b4:	mul	w20, w20, w0
   2a1b8:	ldp	x21, x22, [sp, #32]
   2a1bc:	b	2a0bc <PyInit__decimal@@Base+0xfb3c>
   2a1c0:	stp	x29, x30, [sp, #-32]!
   2a1c4:	mov	x29, sp
   2a1c8:	stp	x19, x20, [sp, #16]
   2a1cc:	mov	x20, x0
   2a1d0:	mov	x0, x1
   2a1d4:	mov	x1, x2
   2a1d8:	bl	2a050 <PyInit__decimal@@Base+0xfad0>
   2a1dc:	mov	w19, w0
   2a1e0:	mov	x3, #0x0                   	// #0
   2a1e4:	cmp	w19, #0x0
   2a1e8:	mov	x0, x20
   2a1ec:	lsr	w1, w19, #31
   2a1f0:	cset	x2, ne  // ne = any
   2a1f4:	bl	26d90 <PyInit__decimal@@Base+0xc810>
   2a1f8:	mov	w0, w19
   2a1fc:	ldp	x19, x20, [sp, #16]
   2a200:	ldp	x29, x30, [sp], #32
   2a204:	ret
   2a208:	mov	x3, x0
   2a20c:	stp	x29, x30, [sp, #-112]!
   2a210:	mov	x2, x1
   2a214:	mov	x29, sp
   2a218:	ldrb	w5, [x3]
   2a21c:	add	x1, sp, #0x40
   2a220:	ldrb	w4, [x2]
   2a224:	add	x0, sp, #0x10
   2a228:	and	w5, w5, #0x1e
   2a22c:	orr	w5, w5, #0x40
   2a230:	and	w4, w4, #0x1e
   2a234:	strb	w5, [sp, #16]
   2a238:	orr	w4, w4, #0x40
   2a23c:	ldp	x6, x5, [x3, #8]
   2a240:	stp	x6, x5, [sp, #24]
   2a244:	strb	w4, [sp, #64]
   2a248:	ldr	x5, [x3, #24]
   2a24c:	str	x5, [sp, #40]
   2a250:	ldr	x4, [x3, #32]
   2a254:	str	x4, [sp, #48]
   2a258:	ldr	x7, [x2, #8]
   2a25c:	str	x7, [sp, #72]
   2a260:	ldr	x6, [x2, #16]
   2a264:	str	x6, [sp, #80]
   2a268:	ldr	x5, [x2, #24]
   2a26c:	str	x5, [sp, #88]
   2a270:	ldr	x4, [x2, #32]
   2a274:	str	x4, [sp, #96]
   2a278:	ldr	x3, [x3, #40]
   2a27c:	str	x3, [sp, #56]
   2a280:	ldr	x2, [x2, #40]
   2a284:	str	x2, [sp, #104]
   2a288:	bl	2a050 <PyInit__decimal@@Base+0xfad0>
   2a28c:	ldp	x29, x30, [sp], #112
   2a290:	ret
   2a294:	nop
   2a298:	stp	x29, x30, [sp, #-32]!
   2a29c:	mov	x29, sp
   2a2a0:	stp	x19, x20, [sp, #16]
   2a2a4:	mov	x20, x0
   2a2a8:	mov	x0, x1
   2a2ac:	mov	x1, x2
   2a2b0:	bl	2a208 <PyInit__decimal@@Base+0xfc88>
   2a2b4:	mov	w19, w0
   2a2b8:	mov	x3, #0x0                   	// #0
   2a2bc:	cmp	w19, #0x0
   2a2c0:	mov	x0, x20
   2a2c4:	lsr	w1, w19, #31
   2a2c8:	cset	x2, ne  // ne = any
   2a2cc:	bl	26d90 <PyInit__decimal@@Base+0xc810>
   2a2d0:	mov	w0, w19
   2a2d4:	ldp	x19, x20, [sp, #16]
   2a2d8:	ldp	x29, x30, [sp], #32
   2a2dc:	ret
   2a2e0:	stp	x29, x30, [sp, #-48]!
   2a2e4:	mov	x29, sp
   2a2e8:	stp	x21, x22, [sp, #32]
   2a2ec:	mov	x22, x2
   2a2f0:	mov	x2, x3
   2a2f4:	ldr	x3, [x1, #24]
   2a2f8:	ldr	x8, [x1, #40]
   2a2fc:	add	x5, x8, x3, lsl #3
   2a300:	ldur	x5, [x5, #-8]
   2a304:	cmp	x5, #0x0
   2a308:	ccmp	x22, #0x0, #0x4, ne  // ne = any
   2a30c:	b.eq	2a3c4 <PyInit__decimal@@Base+0xfe44>  // b.none
   2a310:	stp	x19, x20, [sp, #16]
   2a314:	mov	x20, x1
   2a318:	mov	x19, #0x9436                	// #37942
   2a31c:	movk	x19, #0x50d7, lsl #16
   2a320:	adrp	x1, 5f000 <PyInit__decimal@@Base+0x44a80>
   2a324:	ldr	x6, [x20, #16]
   2a328:	movk	x19, #0x435e, lsl #32
   2a32c:	movk	x19, #0xd79, lsl #48
   2a330:	mov	x21, x0
   2a334:	add	x6, x22, x6
   2a338:	ldr	x7, [x1, #1672]
   2a33c:	smulh	x19, x6, x19
   2a340:	ldr	x4, [x0, #32]
   2a344:	sub	x19, x19, x6, asr #63
   2a348:	add	x5, x19, x19, lsl #2
   2a34c:	lsl	x5, x5, #2
   2a350:	sub	x5, x5, x19
   2a354:	cmp	x6, x5
   2a358:	cinc	x19, x19, ne  // ne = any
   2a35c:	cmp	x7, x19
   2a360:	csel	x1, x7, x19, ge  // ge = tcont
   2a364:	cmp	x1, x4
   2a368:	b.eq	2a37c <PyInit__decimal@@Base+0xfdfc>  // b.none
   2a36c:	ldrb	w5, [x0]
   2a370:	tbz	w5, #5, 2a3e4 <PyInit__decimal@@Base+0xfe64>
   2a374:	cmp	x1, x4
   2a378:	b.gt	2a3d0 <PyInit__decimal@@Base+0xfe50>
   2a37c:	ldr	x0, [x21, #40]
   2a380:	mov	x1, x8
   2a384:	mov	x2, x19
   2a388:	mov	x4, x22
   2a38c:	bl	1bc10 <PyInit__decimal@@Base+0x1690>
   2a390:	ldrb	w2, [x20]
   2a394:	mov	w0, #0x1                   	// #1
   2a398:	ldrb	w1, [x21]
   2a39c:	bfxil	w1, w2, #0, #4
   2a3a0:	strb	w1, [x21]
   2a3a4:	ldp	x1, x2, [x20, #8]
   2a3a8:	str	x19, [x21, #24]
   2a3ac:	add	x2, x2, x22
   2a3b0:	stp	x1, x2, [x21, #8]
   2a3b4:	ldp	x19, x20, [sp, #16]
   2a3b8:	ldp	x21, x22, [sp, #32]
   2a3bc:	ldp	x29, x30, [sp], #48
   2a3c0:	ret
   2a3c4:	ldp	x21, x22, [sp, #32]
   2a3c8:	ldp	x29, x30, [sp], #48
   2a3cc:	b	28fe0 <PyInit__decimal@@Base+0xea60>
   2a3d0:	bl	25438 <PyInit__decimal@@Base+0xaeb8>
   2a3d4:	cbz	w0, 2a3b4 <PyInit__decimal@@Base+0xfe34>
   2a3d8:	ldr	x3, [x20, #24]
   2a3dc:	ldr	x8, [x20, #40]
   2a3e0:	b	2a37c <PyInit__decimal@@Base+0xfdfc>
   2a3e4:	bl	25588 <PyInit__decimal@@Base+0xb008>
   2a3e8:	b	2a3d4 <PyInit__decimal@@Base+0xfe54>
   2a3ec:	nop
   2a3f0:	sub	sp, sp, #0x2d0
   2a3f4:	mov	w11, #0x30                  	// #48
   2a3f8:	add	x7, sp, #0xd0
   2a3fc:	mov	x10, #0x40                  	// #64
   2a400:	mov	w9, #0xffffff90            	// #-112
   2a404:	stp	x29, x30, [sp]
   2a408:	mov	x29, sp
   2a40c:	ldr	x8, [x2, #8]
   2a410:	stp	x27, x28, [sp, #80]
   2a414:	mov	x27, x1
   2a418:	ldr	x1, [x1, #8]
   2a41c:	stp	x19, x20, [sp, #16]
   2a420:	mov	x19, x2
   2a424:	add	x2, sp, #0x68
   2a428:	stp	x21, x22, [sp, #32]
   2a42c:	mov	x22, #0x1                   	// #1
   2a430:	stp	x23, x24, [sp, #48]
   2a434:	mov	x21, x0
   2a438:	mov	x24, x6
   2a43c:	stp	x25, x26, [sp, #64]
   2a440:	and	w23, w3, #0xff
   2a444:	mov	x25, x5
   2a448:	str	x22, [sp, #104]
   2a44c:	cmp	x1, x8
   2a450:	strb	w11, [sp, #112]
   2a454:	stp	xzr, xzr, [sp, #120]
   2a458:	stp	xzr, x10, [sp, #136]
   2a45c:	str	x7, [sp, #152]
   2a460:	strb	w9, [sp, #160]
   2a464:	stp	xzr, x22, [sp, #168]
   2a468:	stp	x22, x22, [sp, #184]
   2a46c:	str	x2, [sp, #200]
   2a470:	b.eq	2a768 <PyInit__decimal@@Base+0x101e8>  // b.none
   2a474:	mov	x26, x27
   2a478:	b.ge	2a688 <PyInit__decimal@@Base+0x10108>  // b.tcont
   2a47c:	ldr	x20, [x19, #24]
   2a480:	ldr	x0, [x19, #40]
   2a484:	add	x0, x0, x20, lsl #3
   2a488:	ldur	x0, [x0, #-8]
   2a48c:	cbz	x0, 2a4ec <PyInit__decimal@@Base+0xff6c>
   2a490:	ldp	x2, x6, [x19, #8]
   2a494:	sub	x0, x1, #0x1
   2a498:	ldr	x5, [x4]
   2a49c:	ldr	x7, [x26, #16]
   2a4a0:	mvn	x3, x5
   2a4a4:	sub	x4, x2, #0x1
   2a4a8:	add	x3, x3, x6
   2a4ac:	cmp	x6, x5
   2a4b0:	add	x3, x4, x3
   2a4b4:	csel	x4, x3, x4, le
   2a4b8:	add	x0, x0, x7
   2a4bc:	cmp	x0, x4
   2a4c0:	b.lt	2a834 <PyInit__decimal@@Base+0x102b4>  // b.tstop
   2a4c4:	add	x20, sp, #0x70
   2a4c8:	sub	x2, x2, x1
   2a4cc:	mov	x0, x20
   2a4d0:	mov	x1, x19
   2a4d4:	mov	x3, x24
   2a4d8:	bl	2a2e0 <PyInit__decimal@@Base+0xfd60>
   2a4dc:	cbz	w0, 2a980 <PyInit__decimal@@Base+0x10400>
   2a4e0:	mov	x19, x20
   2a4e4:	ldr	x1, [x26, #8]
   2a4e8:	ldr	x20, [sp, #136]
   2a4ec:	ldr	x0, [x26, #24]
   2a4f0:	str	x1, [x21, #8]
   2a4f4:	cmp	x0, x20
   2a4f8:	b.gt	2a650 <PyInit__decimal@@Base+0x100d0>
   2a4fc:	adrp	x28, 5f000 <PyInit__decimal@@Base+0x44a80>
   2a500:	ldr	x0, [x21, #32]
   2a504:	ldr	x1, [x28, #1672]
   2a508:	cmp	x1, x20
   2a50c:	csel	x1, x1, x20, ge  // ge = tcont
   2a510:	cmp	x1, x0
   2a514:	b.eq	2a680 <PyInit__decimal@@Base+0x10100>  // b.none
   2a518:	ldrb	w2, [x21]
   2a51c:	tbz	w2, #5, 2a6b0 <PyInit__decimal@@Base+0x10130>
   2a520:	cmp	x1, x0
   2a524:	mov	x8, x20
   2a528:	b.gt	2a898 <PyInit__decimal@@Base+0x10318>
   2a52c:	ldrb	w0, [x27]
   2a530:	mov	x3, x8
   2a534:	ldr	x9, [x26, #24]
   2a538:	and	w0, w0, #0x1
   2a53c:	cmp	w0, w23
   2a540:	mov	x4, x9
   2a544:	ldr	x1, [x19, #40]
   2a548:	ldr	x0, [x21, #40]
   2a54c:	ldr	x2, [x26, #40]
   2a550:	b.eq	2a8a8 <PyInit__decimal@@Base+0x10328>  // b.none
   2a554:	cmp	x8, x9
   2a558:	b.eq	2a79c <PyInit__decimal@@Base+0x1021c>  // b.none
   2a55c:	bl	1b418 <PyInit__decimal@@Base+0xe98>
   2a560:	ldr	x19, [x19, #24]
   2a564:	ldr	x2, [x21, #40]
   2a568:	cmp	x19, #0x1
   2a56c:	lsl	x20, x19, #3
   2a570:	sub	x20, x20, #0x8
   2a574:	b.gt	2a584 <PyInit__decimal@@Base+0x10004>
   2a578:	b	2a9e4 <PyInit__decimal@@Base+0x10464>
   2a57c:	sub	x20, x20, #0x8
   2a580:	b.eq	2a78c <PyInit__decimal@@Base+0x1020c>  // b.none
   2a584:	ldr	x0, [x2, x20]
   2a588:	mov	x26, x19
   2a58c:	sub	x19, x19, #0x1
   2a590:	cmp	x19, #0x1
   2a594:	cbz	x0, 2a57c <PyInit__decimal@@Base+0xfffc>
   2a598:	ldr	x1, [x28, #1672]
   2a59c:	ldr	x3, [x21, #32]
   2a5a0:	cmp	x1, x26
   2a5a4:	csel	x1, x1, x26, ge  // ge = tcont
   2a5a8:	ldrb	w0, [x21]
   2a5ac:	cmp	x1, x3
   2a5b0:	b.eq	2a5c0 <PyInit__decimal@@Base+0x10040>  // b.none
   2a5b4:	tbz	w0, #5, 2a880 <PyInit__decimal@@Base+0x10300>
   2a5b8:	cmp	x1, x3
   2a5bc:	b.gt	2a8e4 <PyInit__decimal@@Base+0x10364>
   2a5c0:	str	x26, [x21, #24]
   2a5c4:	tbnz	w22, #0, 2a5d0 <PyInit__decimal@@Base+0x10050>
   2a5c8:	ldrb	w23, [x27]
   2a5cc:	and	w23, w23, #0x1
   2a5d0:	and	w0, w0, #0xfffffff0
   2a5d4:	add	x3, x2, x20
   2a5d8:	orr	w23, w23, w0
   2a5dc:	strb	w23, [x21]
   2a5e0:	ldr	x1, [x2, x20]
   2a5e4:	cbnz	x1, 2a600 <PyInit__decimal@@Base+0x10080>
   2a5e8:	and	w23, w23, #0xfe
   2a5ec:	strb	w23, [x21]
   2a5f0:	ldr	w0, [x25]
   2a5f4:	cmp	w0, #0x3
   2a5f8:	b.eq	2a874 <PyInit__decimal@@Base+0x102f4>  // b.none
   2a5fc:	ldr	x1, [x3]
   2a600:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27a80>
   2a604:	add	x0, x0, #0x2d0
   2a608:	ldr	x2, [x0, #72]
   2a60c:	cmp	x2, x1
   2a610:	b.ls	2a6c8 <PyInit__decimal@@Base+0x10148>  // b.plast
   2a614:	ldr	x2, [x0, #32]
   2a618:	cmp	x2, x1
   2a61c:	b.hi	2a814 <PyInit__decimal@@Base+0x10294>  // b.pmore
   2a620:	ldr	x2, [x0, #48]
   2a624:	cmp	x2, x1
   2a628:	b.hi	2a994 <PyInit__decimal@@Base+0x10414>  // b.pmore
   2a62c:	ldr	x3, [x0, #64]
   2a630:	mov	x2, #0x9                   	// #9
   2a634:	cmp	x3, x1
   2a638:	b.ls	2a700 <PyInit__decimal@@Base+0x10180>  // b.plast
   2a63c:	ldr	x0, [x0, #56]
   2a640:	cmp	x0, x1
   2a644:	cset	x2, ls  // ls = plast
   2a648:	add	x2, x2, #0x7
   2a64c:	b	2a700 <PyInit__decimal@@Base+0x10180>
   2a650:	adrp	x28, 5f000 <PyInit__decimal@@Base+0x44a80>
   2a654:	mov	x1, x19
   2a658:	mov	x19, x26
   2a65c:	mov	x26, x1
   2a660:	ldr	x1, [x28, #1672]
   2a664:	mov	x20, x0
   2a668:	ldr	x0, [x21, #32]
   2a66c:	cmp	x1, x20
   2a670:	csel	x1, x1, x20, ge  // ge = tcont
   2a674:	add	w22, w22, #0x1
   2a678:	cmp	x1, x0
   2a67c:	b.ne	2a518 <PyInit__decimal@@Base+0xff98>  // b.any
   2a680:	mov	x8, x20
   2a684:	b	2a52c <PyInit__decimal@@Base+0xffac>
   2a688:	mov	x26, x19
   2a68c:	mov	x19, x27
   2a690:	mov	x1, x8
   2a694:	mov	w22, #0x0                   	// #0
   2a698:	ldr	x20, [x19, #24]
   2a69c:	ldr	x0, [x19, #40]
   2a6a0:	add	x0, x0, x20, lsl #3
   2a6a4:	ldur	x0, [x0, #-8]
   2a6a8:	cbz	x0, 2a4ec <PyInit__decimal@@Base+0xff6c>
   2a6ac:	b	2a490 <PyInit__decimal@@Base+0xff10>
   2a6b0:	mov	x2, x24
   2a6b4:	mov	x0, x21
   2a6b8:	bl	25588 <PyInit__decimal@@Base+0xb008>
   2a6bc:	cbz	w0, 2a714 <PyInit__decimal@@Base+0x10194>
   2a6c0:	ldr	x8, [x19, #24]
   2a6c4:	b	2a52c <PyInit__decimal@@Base+0xffac>
   2a6c8:	ldr	x2, [x0, #112]
   2a6cc:	cmp	x2, x1
   2a6d0:	b.ls	2a7e8 <PyInit__decimal@@Base+0x10268>  // b.plast
   2a6d4:	ldr	x2, [x0, #88]
   2a6d8:	cmp	x2, x1
   2a6dc:	b.hi	2a9a8 <PyInit__decimal@@Base+0x10428>  // b.pmore
   2a6e0:	ldr	x3, [x0, #104]
   2a6e4:	mov	x2, #0xe                   	// #14
   2a6e8:	cmp	x3, x1
   2a6ec:	b.ls	2a700 <PyInit__decimal@@Base+0x10180>  // b.plast
   2a6f0:	ldr	x0, [x0, #96]
   2a6f4:	cmp	x0, x1
   2a6f8:	cset	x2, ls  // ls = plast
   2a6fc:	add	x2, x2, #0xc
   2a700:	add	x0, x19, x19, lsl #2
   2a704:	lsl	x0, x0, #2
   2a708:	sub	x19, x0, x19
   2a70c:	add	x19, x19, x2
   2a710:	str	x19, [x21, #16]
   2a714:	ldrb	w0, [sp, #112]
   2a718:	tst	w0, #0xe0
   2a71c:	b.ne	2a734 <PyInit__decimal@@Base+0x101b4>  // b.any
   2a720:	adrp	x1, 5f000 <PyInit__decimal@@Base+0x44a80>
   2a724:	ldr	x0, [sp, #152]
   2a728:	ldr	x1, [x1, #1704]
   2a72c:	blr	x1
   2a730:	ldrb	w0, [sp, #112]
   2a734:	tbnz	w0, #4, 2a748 <PyInit__decimal@@Base+0x101c8>
   2a738:	adrp	x1, 5f000 <PyInit__decimal@@Base+0x44a80>
   2a73c:	add	x0, sp, #0x70
   2a740:	ldr	x1, [x1, #1704]
   2a744:	blr	x1
   2a748:	ldp	x29, x30, [sp]
   2a74c:	ldp	x19, x20, [sp, #16]
   2a750:	ldp	x21, x22, [sp, #32]
   2a754:	ldp	x23, x24, [sp, #48]
   2a758:	ldp	x25, x26, [sp, #64]
   2a75c:	ldp	x27, x28, [sp, #80]
   2a760:	add	sp, sp, #0x2d0
   2a764:	ret
   2a768:	mov	x26, x19
   2a76c:	mov	w22, #0x0                   	// #0
   2a770:	ldr	x20, [x27, #24]
   2a774:	mov	x19, x27
   2a778:	ldr	x0, [x26, #24]
   2a77c:	str	x1, [x21, #8]
   2a780:	cmp	x0, x20
   2a784:	b.le	2a4fc <PyInit__decimal@@Base+0xff7c>
   2a788:	b	2a650 <PyInit__decimal@@Base+0x100d0>
   2a78c:	mov	x26, x19
   2a790:	mov	x20, #0x0                   	// #0
   2a794:	mov	x19, #0x0                   	// #0
   2a798:	b	2a598 <PyInit__decimal@@Base+0x10018>
   2a79c:	subs	x5, x8, #0x1
   2a7a0:	b.pl	2a7b0 <PyInit__decimal@@Base+0x10230>  // b.nfrst
   2a7a4:	b	2a55c <PyInit__decimal@@Base+0xffdc>
   2a7a8:	cmn	x5, #0x1
   2a7ac:	b.eq	2a55c <PyInit__decimal@@Base+0xffdc>  // b.none
   2a7b0:	ldr	x7, [x1, x5, lsl #3]
   2a7b4:	ldr	x6, [x2, x5, lsl #3]
   2a7b8:	sub	x5, x5, #0x1
   2a7bc:	cmp	x7, x6
   2a7c0:	b.eq	2a7a8 <PyInit__decimal@@Base+0x10228>  // b.none
   2a7c4:	b.cs	2a55c <PyInit__decimal@@Base+0xffdc>  // b.hs, b.nlast
   2a7c8:	mov	x4, x1
   2a7cc:	add	w22, w22, #0x1
   2a7d0:	mov	x1, x2
   2a7d4:	mov	x3, x9
   2a7d8:	mov	x2, x4
   2a7dc:	mov	x19, x26
   2a7e0:	mov	x4, x8
   2a7e4:	b	2a55c <PyInit__decimal@@Base+0xffdc>
   2a7e8:	ldr	x2, [x0, #144]
   2a7ec:	cmp	x2, x1
   2a7f0:	b.ls	2a910 <PyInit__decimal@@Base+0x10390>  // b.plast
   2a7f4:	ldr	x2, [x0, #128]
   2a7f8:	cmp	x2, x1
   2a7fc:	b.ls	2a9bc <PyInit__decimal@@Base+0x1043c>  // b.plast
   2a800:	ldr	x0, [x0, #120]
   2a804:	cmp	x0, x1
   2a808:	cset	x2, ls  // ls = plast
   2a80c:	add	x2, x2, #0xf
   2a810:	b	2a700 <PyInit__decimal@@Base+0x10180>
   2a814:	ldr	x2, [x0, #16]
   2a818:	cmp	x2, x1
   2a81c:	b.ls	2a8fc <PyInit__decimal@@Base+0x1037c>  // b.plast
   2a820:	ldr	x0, [x0, #8]
   2a824:	cmp	x0, x1
   2a828:	cset	x2, ls  // ls = plast
   2a82c:	add	x2, x2, #0x1
   2a830:	b	2a700 <PyInit__decimal@@Base+0x10180>
   2a834:	ldr	x3, [x26, #24]
   2a838:	mov	w5, #0xffffff90            	// #-112
   2a83c:	ldr	x6, [x26, #40]
   2a840:	mov	x1, x4
   2a844:	ldrb	w0, [x26]
   2a848:	add	x26, sp, #0xa0
   2a84c:	str	x4, [sp, #168]
   2a850:	add	x3, x6, x3, lsl #3
   2a854:	and	w0, w0, #0xf
   2a858:	orr	w0, w0, w5
   2a85c:	strb	w0, [sp, #160]
   2a860:	ldur	x0, [x3, #-8]
   2a864:	cmp	x0, #0x0
   2a868:	cset	x0, ne  // ne = any
   2a86c:	str	x0, [sp, #104]
   2a870:	b	2a4c4 <PyInit__decimal@@Base+0xff44>
   2a874:	orr	w23, w23, #0x1
   2a878:	strb	w23, [x21]
   2a87c:	b	2a5fc <PyInit__decimal@@Base+0x1007c>
   2a880:	mov	x2, x24
   2a884:	mov	x0, x21
   2a888:	bl	25588 <PyInit__decimal@@Base+0xb008>
   2a88c:	ldrb	w0, [x21]
   2a890:	ldr	x2, [x21, #40]
   2a894:	b	2a5c0 <PyInit__decimal@@Base+0x10040>
   2a898:	mov	x2, x24
   2a89c:	mov	x0, x21
   2a8a0:	bl	25438 <PyInit__decimal@@Base+0xaeb8>
   2a8a4:	b	2a6bc <PyInit__decimal@@Base+0x1013c>
   2a8a8:	bl	1b188 <PyInit__decimal@@Base+0xc08>
   2a8ac:	mov	x22, x0
   2a8b0:	cbnz	x0, 2a924 <PyInit__decimal@@Base+0x103a4>
   2a8b4:	ldr	x1, [x21, #40]
   2a8b8:	lsl	x0, x20, #3
   2a8bc:	sub	x0, x0, #0x8
   2a8c0:	sub	x19, x20, #0x1
   2a8c4:	add	x1, x1, x0
   2a8c8:	ldrb	w0, [x21]
   2a8cc:	str	x20, [x21, #24]
   2a8d0:	and	w0, w0, #0xfffffff0
   2a8d4:	orr	w23, w23, w0
   2a8d8:	strb	w23, [x21]
   2a8dc:	ldr	x1, [x1]
   2a8e0:	b	2a600 <PyInit__decimal@@Base+0x10080>
   2a8e4:	mov	x2, x24
   2a8e8:	mov	x0, x21
   2a8ec:	bl	25438 <PyInit__decimal@@Base+0xaeb8>
   2a8f0:	ldrb	w0, [x21]
   2a8f4:	ldr	x2, [x21, #40]
   2a8f8:	b	2a5c0 <PyInit__decimal@@Base+0x10040>
   2a8fc:	ldr	x0, [x0, #24]
   2a900:	cmp	x0, x1
   2a904:	cset	x2, ls  // ls = plast
   2a908:	add	x2, x2, #0x3
   2a90c:	b	2a700 <PyInit__decimal@@Base+0x10180>
   2a910:	ldr	x0, [x0, #152]
   2a914:	cmp	x0, x1
   2a918:	cset	x2, ls  // ls = plast
   2a91c:	add	x2, x2, #0x13
   2a920:	b	2a700 <PyInit__decimal@@Base+0x10180>
   2a924:	ldr	x19, [x19, #24]
   2a928:	ldr	x0, [x28, #1672]
   2a92c:	add	x20, x19, #0x1
   2a930:	ldr	x2, [x21, #32]
   2a934:	cmp	x0, x20
   2a938:	csel	x1, x0, x20, ge  // ge = tcont
   2a93c:	cmp	x1, x2
   2a940:	b.eq	2a968 <PyInit__decimal@@Base+0x103e8>  // b.none
   2a944:	ldrb	w0, [x21]
   2a948:	tbz	w0, #5, 2a9d0 <PyInit__decimal@@Base+0x10450>
   2a94c:	cmp	x1, x2
   2a950:	b.le	2a968 <PyInit__decimal@@Base+0x103e8>
   2a954:	mov	x2, x24
   2a958:	mov	x0, x21
   2a95c:	bl	25438 <PyInit__decimal@@Base+0xaeb8>
   2a960:	cbz	w0, 2a714 <PyInit__decimal@@Base+0x10194>
   2a964:	nop
   2a968:	lsl	x0, x20, #3
   2a96c:	ldr	x2, [x21, #40]
   2a970:	sub	x0, x0, #0x8
   2a974:	add	x1, x2, x0
   2a978:	str	x22, [x2, x0]
   2a97c:	b	2a8c8 <PyInit__decimal@@Base+0x10348>
   2a980:	mov	x2, x24
   2a984:	mov	x0, x21
   2a988:	mov	w1, #0x200                 	// #512
   2a98c:	bl	28d68 <PyInit__decimal@@Base+0xe7e8>
   2a990:	b	2a714 <PyInit__decimal@@Base+0x10194>
   2a994:	ldr	x0, [x0, #40]
   2a998:	cmp	x0, x1
   2a99c:	cset	x2, ls  // ls = plast
   2a9a0:	add	x2, x2, #0x5
   2a9a4:	b	2a700 <PyInit__decimal@@Base+0x10180>
   2a9a8:	ldr	x0, [x0, #80]
   2a9ac:	cmp	x0, x1
   2a9b0:	cset	x2, ls  // ls = plast
   2a9b4:	add	x2, x2, #0xa
   2a9b8:	b	2a700 <PyInit__decimal@@Base+0x10180>
   2a9bc:	ldr	x0, [x0, #136]
   2a9c0:	cmp	x0, x1
   2a9c4:	cset	x2, ls  // ls = plast
   2a9c8:	add	x2, x2, #0x11
   2a9cc:	b	2a700 <PyInit__decimal@@Base+0x10180>
   2a9d0:	mov	x2, x24
   2a9d4:	mov	x0, x21
   2a9d8:	bl	25588 <PyInit__decimal@@Base+0xb008>
   2a9dc:	cbnz	w0, 2a968 <PyInit__decimal@@Base+0x103e8>
   2a9e0:	b	2a714 <PyInit__decimal@@Base+0x10194>
   2a9e4:	mov	x26, x19
   2a9e8:	sub	x19, x19, #0x1
   2a9ec:	b	2a598 <PyInit__decimal@@Base+0x10018>
   2a9f0:	ldrb	w3, [x0]
   2a9f4:	tst	w3, #0xe
   2a9f8:	b.ne	2aa50 <PyInit__decimal@@Base+0x104d0>  // b.any
   2a9fc:	stp	x29, x30, [sp, #-48]!
   2aa00:	mov	x29, sp
   2aa04:	ldr	x3, [x0, #24]
   2aa08:	stp	x19, x20, [sp, #16]
   2aa0c:	mov	x19, x0
   2aa10:	ldr	x4, [x0, #40]
   2aa14:	add	x3, x4, x3, lsl #3
   2aa18:	ldur	x3, [x3, #-8]
   2aa1c:	cbnz	x3, 2aa2c <PyInit__decimal@@Base+0x104ac>
   2aa20:	ldp	x19, x20, [sp, #16]
   2aa24:	ldp	x29, x30, [sp], #48
   2aa28:	ret
   2aa2c:	ldr	x20, [x0, #16]
   2aa30:	str	x21, [sp, #32]
   2aa34:	ldr	x21, [x1]
   2aa38:	cmp	x20, x21
   2aa3c:	b.lt	2aa54 <PyInit__decimal@@Base+0x104d4>  // b.tstop
   2aa40:	ldp	x19, x20, [sp, #16]
   2aa44:	ldr	x21, [sp, #32]
   2aa48:	ldp	x29, x30, [sp], #48
   2aa4c:	ret
   2aa50:	ret
   2aa54:	mov	x3, x2
   2aa58:	mov	x1, x0
   2aa5c:	sub	x2, x21, x20
   2aa60:	bl	2a2e0 <PyInit__decimal@@Base+0xfd60>
   2aa64:	ldr	x0, [x19, #8]
   2aa68:	add	x20, x20, x0
   2aa6c:	sub	x20, x20, x21
   2aa70:	ldr	x21, [sp, #32]
   2aa74:	str	x20, [x19, #8]
   2aa78:	b	2aa20 <PyInit__decimal@@Base+0x104a0>
   2aa7c:	nop
   2aa80:	stp	x29, x30, [sp, #-64]!
   2aa84:	mov	x29, sp
   2aa88:	stp	x19, x20, [sp, #16]
   2aa8c:	mov	x20, x1
   2aa90:	mov	x19, x0
   2aa94:	ldr	x1, [x0, #24]
   2aa98:	ldr	x0, [x0, #40]
   2aa9c:	add	x2, x0, x1, lsl #3
   2aaa0:	ldur	x2, [x2, #-8]
   2aaa4:	str	x21, [sp, #32]
   2aaa8:	mov	x21, #0x0                   	// #0
   2aaac:	cmp	x2, #0x0
   2aab0:	ccmp	x20, #0x0, #0x4, ne  // ne = any
   2aab4:	b.ne	2aacc <PyInit__decimal@@Base+0x1054c>  // b.any
   2aab8:	mov	x0, x21
   2aabc:	ldp	x19, x20, [sp, #16]
   2aac0:	ldr	x21, [sp, #32]
   2aac4:	ldp	x29, x30, [sp], #64
   2aac8:	ret
   2aacc:	ldr	x2, [x19, #16]
   2aad0:	cmp	x2, x20
   2aad4:	b.gt	2ab00 <PyInit__decimal@@Base+0x10580>
   2aad8:	cset	w2, eq  // eq = none
   2aadc:	bl	26fa8 <PyInit__decimal@@Base+0xca28>
   2aae0:	mov	x21, x0
   2aae4:	mov	x0, x19
   2aae8:	bl	28798 <PyInit__decimal@@Base+0xe218>
   2aaec:	mov	x0, x21
   2aaf0:	ldp	x19, x20, [sp, #16]
   2aaf4:	ldr	x21, [sp, #32]
   2aaf8:	ldp	x29, x30, [sp], #64
   2aafc:	ret
   2ab00:	mov	x2, x1
   2ab04:	mov	x3, x20
   2ab08:	mov	x1, x0
   2ab0c:	bl	1c438 <PyInit__decimal@@Base+0x1eb8>
   2ab10:	ldr	x3, [x19, #16]
   2ab14:	mov	x2, #0x9436                	// #37942
   2ab18:	movk	x2, #0x50d7, lsl #16
   2ab1c:	mov	x21, x0
   2ab20:	sub	x3, x3, x20
   2ab24:	movk	x2, #0x435e, lsl #32
   2ab28:	movk	x2, #0xd79, lsl #48
   2ab2c:	adrp	x1, 5f000 <PyInit__decimal@@Base+0x44a80>
   2ab30:	ldr	x4, [x19, #32]
   2ab34:	smulh	x2, x3, x2
   2ab38:	ldr	x1, [x1, #1672]
   2ab3c:	str	x3, [x19, #16]
   2ab40:	sub	x20, x2, x3, asr #63
   2ab44:	add	x0, x20, x20, lsl #2
   2ab48:	lsl	x0, x0, #2
   2ab4c:	sub	x0, x0, x20
   2ab50:	cmp	x3, x0
   2ab54:	cinc	x20, x20, ne  // ne = any
   2ab58:	cmp	x1, x20
   2ab5c:	csel	x1, x1, x20, ge  // ge = tcont
   2ab60:	cmp	x1, x4
   2ab64:	b.eq	2ab78 <PyInit__decimal@@Base+0x105f8>  // b.none
   2ab68:	ldrb	w0, [x19]
   2ab6c:	tbz	w0, #5, 2ab90 <PyInit__decimal@@Base+0x10610>
   2ab70:	cmp	x1, x4
   2ab74:	b.gt	2aba4 <PyInit__decimal@@Base+0x10624>
   2ab78:	str	x20, [x19, #24]
   2ab7c:	mov	x0, x21
   2ab80:	ldp	x19, x20, [sp, #16]
   2ab84:	ldr	x21, [sp, #32]
   2ab88:	ldp	x29, x30, [sp], #64
   2ab8c:	ret
   2ab90:	add	x2, sp, #0x3c
   2ab94:	mov	x0, x19
   2ab98:	bl	25588 <PyInit__decimal@@Base+0xb008>
   2ab9c:	str	x20, [x19, #24]
   2aba0:	b	2ab7c <PyInit__decimal@@Base+0x105fc>
   2aba4:	add	x2, sp, #0x3c
   2aba8:	mov	x0, x19
   2abac:	bl	25438 <PyInit__decimal@@Base+0xaeb8>
   2abb0:	str	x20, [x19, #24]
   2abb4:	b	2ab7c <PyInit__decimal@@Base+0x105fc>
   2abb8:	stp	x29, x30, [sp, #-64]!
   2abbc:	mov	x29, sp
   2abc0:	stp	x21, x22, [sp, #32]
   2abc4:	ldp	x22, x21, [x0, #8]
   2abc8:	stp	x19, x20, [sp, #16]
   2abcc:	mov	x20, x1
   2abd0:	ldr	x1, [x1, #8]
   2abd4:	stp	x23, x24, [sp, #48]
   2abd8:	mov	x19, x0
   2abdc:	add	x21, x22, x21
   2abe0:	mov	x23, x2
   2abe4:	sub	x21, x21, #0x1
   2abe8:	cmp	x1, x21
   2abec:	b.ge	2ac84 <PyInit__decimal@@Base+0x10704>  // b.tcont
   2abf0:	ldr	x4, [x0, #24]
   2abf4:	ldr	x2, [x0, #40]
   2abf8:	add	x4, x2, x4, lsl #3
   2abfc:	ldur	x2, [x4, #-8]
   2ac00:	cbz	x2, 2ad84 <PyInit__decimal@@Base+0x10804>
   2ac04:	ldr	w1, [x20, #36]
   2ac08:	cmp	w1, #0x3
   2ac0c:	b.eq	2ae3c <PyInit__decimal@@Base+0x108bc>  // b.none
   2ac10:	b.gt	2ad50 <PyInit__decimal@@Base+0x107d0>
   2ac14:	cmp	w1, #0x2
   2ac18:	b.ne	2ac54 <PyInit__decimal@@Base+0x106d4>  // b.any
   2ac1c:	ldrb	w2, [x0]
   2ac20:	tbnz	w2, #0, 2ac60 <PyInit__decimal@@Base+0x106e0>
   2ac24:	mov	w2, w1
   2ac28:	mov	w1, #0x0                   	// #0
   2ac2c:	bl	28cd8 <PyInit__decimal@@Base+0xe758>
   2ac30:	ldr	w0, [x23]
   2ac34:	mov	w1, #0x1840                	// #6208
   2ac38:	orr	w0, w0, w1
   2ac3c:	str	w0, [x23]
   2ac40:	ldp	x19, x20, [sp, #16]
   2ac44:	ldp	x21, x22, [sp, #32]
   2ac48:	ldp	x23, x24, [sp, #48]
   2ac4c:	ldp	x29, x30, [sp], #64
   2ac50:	ret
   2ac54:	cbz	w1, 2ad64 <PyInit__decimal@@Base+0x107e4>
   2ac58:	cmp	w1, #0x1
   2ac5c:	b.ne	2ad80 <PyInit__decimal@@Base+0x10800>  // b.any
   2ac60:	mov	x1, x20
   2ac64:	mov	x0, x19
   2ac68:	mov	x2, x23
   2ac6c:	bl	28a78 <PyInit__decimal@@Base+0xe4f8>
   2ac70:	ldp	x1, x0, [x20]
   2ac74:	add	x0, x0, #0x1
   2ac78:	sub	x0, x0, x1
   2ac7c:	str	x0, [x19, #8]
   2ac80:	b	2ac30 <PyInit__decimal@@Base+0x106b0>
   2ac84:	ldr	w2, [x20, #40]
   2ac88:	cbz	w2, 2aca0 <PyInit__decimal@@Base+0x10720>
   2ac8c:	ldr	x2, [x20]
   2ac90:	add	x1, x1, #0x1
   2ac94:	sub	x24, x1, x2
   2ac98:	cmp	x22, x24
   2ac9c:	b.gt	2adc8 <PyInit__decimal@@Base+0x10848>
   2aca0:	ldr	x0, [x20, #16]
   2aca4:	cmp	x0, x21
   2aca8:	b.le	2ac40 <PyInit__decimal@@Base+0x106c0>
   2acac:	ldr	x1, [x19, #24]
   2acb0:	add	x0, x0, #0x1
   2acb4:	ldr	x2, [x19, #40]
   2acb8:	ldr	x21, [x20]
   2acbc:	add	x1, x2, x1, lsl #3
   2acc0:	sub	x21, x0, x21
   2acc4:	ldur	x0, [x1, #-8]
   2acc8:	cbz	x0, 2ae2c <PyInit__decimal@@Base+0x108ac>
   2accc:	ldr	w0, [x23]
   2acd0:	cmp	x22, x21
   2acd4:	orr	w0, w0, #0x2000
   2acd8:	str	w0, [x23]
   2acdc:	b.ge	2ac40 <PyInit__decimal@@Base+0x106c0>  // b.tcont
   2ace0:	sub	x1, x21, x22
   2ace4:	mov	x0, x19
   2ace8:	bl	2aa80 <PyInit__decimal@@Base+0x10500>
   2acec:	mov	x22, x0
   2acf0:	ldr	w1, [x20, #36]
   2acf4:	sxtw	x0, w0
   2acf8:	str	x21, [x19, #8]
   2acfc:	cmp	w1, #0x4
   2ad00:	b.eq	2ae54 <PyInit__decimal@@Base+0x108d4>  // b.none
   2ad04:	b.gt	2af40 <PyInit__decimal@@Base+0x109c0>
   2ad08:	cmp	w1, #0x2
   2ad0c:	b.eq	2b004 <PyInit__decimal@@Base+0x10a84>  // b.none
   2ad10:	cmp	w1, #0x3
   2ad14:	b.ne	2af2c <PyInit__decimal@@Base+0x109ac>  // b.any
   2ad18:	cbz	x0, 2af9c <PyInit__decimal@@Base+0x10a1c>
   2ad1c:	ldrb	w1, [x19]
   2ad20:	and	w1, w1, #0x1
   2ad24:	ldr	x0, [x19, #40]
   2ad28:	cbnz	w1, 2ae64 <PyInit__decimal@@Base+0x108e4>
   2ad2c:	ldr	w1, [x23]
   2ad30:	ldr	x2, [x19, #24]
   2ad34:	mov	w3, #0x5040                	// #20544
   2ad38:	orr	w1, w1, w3
   2ad3c:	add	x2, x0, x2, lsl #3
   2ad40:	ldur	x0, [x2, #-8]
   2ad44:	str	w1, [x23]
   2ad48:	cbnz	x0, 2ac40 <PyInit__decimal@@Base+0x106c0>
   2ad4c:	b	2ada0 <PyInit__decimal@@Base+0x10820>
   2ad50:	cmp	w1, #0x7
   2ad54:	b.eq	2ac60 <PyInit__decimal@@Base+0x106e0>  // b.none
   2ad58:	b.le	2ad7c <PyInit__decimal@@Base+0x107fc>
   2ad5c:	cmp	w1, #0x8
   2ad60:	b.ne	2ad80 <PyInit__decimal@@Base+0x10800>  // b.any
   2ad64:	ldrb	w1, [x19]
   2ad68:	mov	x0, x19
   2ad6c:	mov	w2, #0x2                   	// #2
   2ad70:	and	w1, w1, #0x1
   2ad74:	bl	28cd8 <PyInit__decimal@@Base+0xe758>
   2ad78:	b	2ac30 <PyInit__decimal@@Base+0x106b0>
   2ad7c:	b.ne	2ad64 <PyInit__decimal@@Base+0x107e4>  // b.any
   2ad80:	bl	67c0 <abort@plt>
   2ad84:	ldr	w0, [x20, #40]
   2ad88:	str	x1, [x19, #8]
   2ad8c:	cbz	w0, 2ada0 <PyInit__decimal@@Base+0x10820>
   2ad90:	ldr	x0, [x20]
   2ad94:	add	x1, x1, #0x1
   2ad98:	sub	x1, x1, x0
   2ad9c:	str	x1, [x19, #8]
   2ada0:	mov	x0, x19
   2ada4:	bl	28798 <PyInit__decimal@@Base+0xe218>
   2ada8:	ldr	w0, [x23]
   2adac:	ldp	x19, x20, [sp, #16]
   2adb0:	orr	w0, w0, #0x1
   2adb4:	str	w0, [x23]
   2adb8:	ldp	x21, x22, [sp, #32]
   2adbc:	ldp	x23, x24, [sp, #48]
   2adc0:	ldp	x29, x30, [sp], #64
   2adc4:	ret
   2adc8:	add	x2, x22, x2
   2adcc:	mov	x3, x23
   2add0:	sub	x2, x2, x1
   2add4:	mov	x1, x0
   2add8:	bl	2a2e0 <PyInit__decimal@@Base+0xfd60>
   2addc:	cbz	w0, 2ac40 <PyInit__decimal@@Base+0x106c0>
   2ade0:	ldr	x0, [x19, #24]
   2ade4:	sub	x22, x24, x22
   2ade8:	ldr	x1, [x19, #40]
   2adec:	ldr	x24, [x19, #8]
   2adf0:	add	x0, x1, x0, lsl #3
   2adf4:	ldr	w1, [x23]
   2adf8:	add	x22, x24, x22
   2adfc:	str	x22, [x19, #8]
   2ae00:	orr	w2, w1, #0x1
   2ae04:	ldur	x0, [x0, #-8]
   2ae08:	str	w2, [x23]
   2ae0c:	cbz	x0, 2ac40 <PyInit__decimal@@Base+0x106c0>
   2ae10:	ldr	x0, [x20, #16]
   2ae14:	cmp	x0, x21
   2ae18:	b.le	2ac40 <PyInit__decimal@@Base+0x106c0>
   2ae1c:	mov	w0, #0x2001                	// #8193
   2ae20:	orr	w1, w1, w0
   2ae24:	str	w1, [x23]
   2ae28:	b	2ac40 <PyInit__decimal@@Base+0x106c0>
   2ae2c:	cmp	x22, x21
   2ae30:	b.ge	2ac40 <PyInit__decimal@@Base+0x106c0>  // b.tcont
   2ae34:	str	x21, [x19, #8]
   2ae38:	b	2ada0 <PyInit__decimal@@Base+0x10820>
   2ae3c:	ldrb	w1, [x0]
   2ae40:	tbz	w1, #0, 2ac60 <PyInit__decimal@@Base+0x106e0>
   2ae44:	mov	w2, #0x2                   	// #2
   2ae48:	mov	w1, #0x1                   	// #1
   2ae4c:	bl	28cd8 <PyInit__decimal@@Base+0xe758>
   2ae50:	b	2ac30 <PyInit__decimal@@Base+0x106b0>
   2ae54:	cmp	x0, #0x4
   2ae58:	cset	w0, hi  // hi = pmore
   2ae5c:	cbz	w0, 2af14 <PyInit__decimal@@Base+0x10994>
   2ae60:	ldr	x0, [x19, #40]
   2ae64:	ldr	x1, [x19, #24]
   2ae68:	bl	1b3b8 <PyInit__decimal@@Base+0xe38>
   2ae6c:	cbz	x0, 2b018 <PyInit__decimal@@Base+0x10a98>
   2ae70:	ldp	x2, x3, [x19, #24]
   2ae74:	adrp	x0, 5f000 <PyInit__decimal@@Base+0x44a80>
   2ae78:	ldr	x1, [x0, #1672]
   2ae7c:	add	x0, x2, #0x1
   2ae80:	cmp	x0, x1
   2ae84:	csel	x1, x0, x1, ge  // ge = tcont
   2ae88:	cmp	x1, x3
   2ae8c:	b.eq	2aea0 <PyInit__decimal@@Base+0x10920>  // b.none
   2ae90:	ldrb	w0, [x19]
   2ae94:	tbz	w0, #5, 2b084 <PyInit__decimal@@Base+0x10b04>
   2ae98:	cmp	x1, x3
   2ae9c:	b.gt	2b09c <PyInit__decimal@@Base+0x10b1c>
   2aea0:	ldr	x1, [x19, #40]
   2aea4:	mov	x0, #0x1                   	// #1
   2aea8:	str	x0, [x1, x2, lsl #3]
   2aeac:	ldr	x3, [x19, #24]
   2aeb0:	add	x0, x3, x0
   2aeb4:	str	x0, [x19, #24]
   2aeb8:	add	x1, x1, x0, lsl #3
   2aebc:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27a80>
   2aec0:	add	x0, x0, #0x2d0
   2aec4:	ldur	x2, [x1, #-8]
   2aec8:	ldr	x1, [x0, #72]
   2aecc:	cmp	x2, x1
   2aed0:	b.cs	2afac <PyInit__decimal@@Base+0x10a2c>  // b.hs, b.nlast
   2aed4:	ldr	x1, [x0, #32]
   2aed8:	cmp	x2, x1
   2aedc:	b.cs	2b028 <PyInit__decimal@@Base+0x10aa8>  // b.hs, b.nlast
   2aee0:	ldr	x1, [x0, #16]
   2aee4:	cmp	x2, x1
   2aee8:	b.cs	2b0c0 <PyInit__decimal@@Base+0x10b40>  // b.hs, b.nlast
   2aeec:	ldr	x0, [x0, #8]
   2aef0:	cmp	x2, x0
   2aef4:	cset	w0, cs  // cs = hs, nlast
   2aef8:	add	w1, w0, #0x1
   2aefc:	nop
   2af00:	add	x0, x3, x3, lsl #2
   2af04:	lsl	x0, x0, #2
   2af08:	sub	x0, x0, x3
   2af0c:	add	x0, x0, w1, sxtw
   2af10:	str	x0, [x19, #16]
   2af14:	ldr	w1, [x23]
   2af18:	orr	w0, w1, #0x1000
   2af1c:	str	w0, [x23]
   2af20:	cbz	w22, 2ac40 <PyInit__decimal@@Base+0x106c0>
   2af24:	ldr	x0, [x19, #40]
   2af28:	b	2ad30 <PyInit__decimal@@Base+0x107b0>
   2af2c:	cmp	x0, #0x0
   2af30:	cset	w0, ne  // ne = any
   2af34:	cbnz	w1, 2af14 <PyInit__decimal@@Base+0x10994>
   2af38:	cbz	w0, 2af14 <PyInit__decimal@@Base+0x10994>
   2af3c:	b	2ae60 <PyInit__decimal@@Base+0x108e0>
   2af40:	cmp	w1, #0x6
   2af44:	b.eq	2afe8 <PyInit__decimal@@Base+0x10a68>  // b.none
   2af48:	cmp	w1, #0x7
   2af4c:	b.ne	2af84 <PyInit__decimal@@Base+0x10a04>  // b.any
   2af50:	cbz	x0, 2af9c <PyInit__decimal@@Base+0x10a1c>
   2af54:	ldr	x0, [x19, #40]
   2af58:	mov	x1, #0xcccccccccccccccc    	// #-3689348814741910324
   2af5c:	movk	x1, #0xcccd
   2af60:	ldr	x2, [x0]
   2af64:	umulh	x1, x2, x1
   2af68:	lsr	x1, x1, #3
   2af6c:	add	x1, x1, x1, lsl #2
   2af70:	sub	x1, x2, x1, lsl #1
   2af74:	cmp	w1, #0x0
   2af78:	ccmp	w1, #0x5, #0x4, ne  // ne = any
   2af7c:	b.eq	2ae64 <PyInit__decimal@@Base+0x108e4>  // b.none
   2af80:	b	2ad2c <PyInit__decimal@@Base+0x107ac>
   2af84:	cmp	x0, #0x5
   2af88:	cset	w0, hi  // hi = pmore
   2af8c:	cmp	w1, #0x5
   2af90:	b.ne	2af14 <PyInit__decimal@@Base+0x10994>  // b.any
   2af94:	cbz	w0, 2af14 <PyInit__decimal@@Base+0x10994>
   2af98:	b	2ae60 <PyInit__decimal@@Base+0x108e0>
   2af9c:	ldr	w0, [x23]
   2afa0:	orr	w0, w0, #0x1000
   2afa4:	str	w0, [x23]
   2afa8:	b	2ac40 <PyInit__decimal@@Base+0x106c0>
   2afac:	ldr	x1, [x0, #112]
   2afb0:	cmp	x2, x1
   2afb4:	b.cs	2b058 <PyInit__decimal@@Base+0x10ad8>  // b.hs, b.nlast
   2afb8:	ldr	x1, [x0, #88]
   2afbc:	cmp	x2, x1
   2afc0:	b.cc	2b0d4 <PyInit__decimal@@Base+0x10b54>  // b.lo, b.ul, b.last
   2afc4:	ldr	x4, [x0, #104]
   2afc8:	mov	w1, #0xe                   	// #14
   2afcc:	cmp	x2, x4
   2afd0:	b.cs	2af00 <PyInit__decimal@@Base+0x10980>  // b.hs, b.nlast
   2afd4:	ldr	x0, [x0, #96]
   2afd8:	cmp	x2, x0
   2afdc:	cset	w0, cs  // cs = hs, nlast
   2afe0:	add	w1, w0, #0xc
   2afe4:	b	2af00 <PyInit__decimal@@Base+0x10980>
   2afe8:	cmp	x0, #0x5
   2afec:	b.hi	2ae60 <PyInit__decimal@@Base+0x108e0>  // b.pmore
   2aff0:	b.ne	2af14 <PyInit__decimal@@Base+0x10994>  // b.any
   2aff4:	ldr	x0, [x19, #40]
   2aff8:	ldr	x1, [x0]
   2affc:	tbz	w1, #0, 2ad2c <PyInit__decimal@@Base+0x107ac>
   2b000:	b	2ae64 <PyInit__decimal@@Base+0x108e4>
   2b004:	cbz	x0, 2af9c <PyInit__decimal@@Base+0x10a1c>
   2b008:	ldrb	w1, [x19]
   2b00c:	mvn	w1, w1
   2b010:	and	w1, w1, #0x1
   2b014:	b	2ad24 <PyInit__decimal@@Base+0x107a4>
   2b018:	ldr	x0, [x19, #24]
   2b01c:	ldr	x1, [x19, #40]
   2b020:	sub	x3, x0, #0x1
   2b024:	b	2aeb8 <PyInit__decimal@@Base+0x10938>
   2b028:	ldr	x1, [x0, #48]
   2b02c:	cmp	x2, x1
   2b030:	b.cc	2b0e8 <PyInit__decimal@@Base+0x10b68>  // b.lo, b.ul, b.last
   2b034:	ldr	x4, [x0, #64]
   2b038:	mov	w1, #0x9                   	// #9
   2b03c:	cmp	x2, x4
   2b040:	b.cs	2af00 <PyInit__decimal@@Base+0x10980>  // b.hs, b.nlast
   2b044:	ldr	x0, [x0, #56]
   2b048:	cmp	x2, x0
   2b04c:	cset	w0, cs  // cs = hs, nlast
   2b050:	add	w1, w0, #0x7
   2b054:	b	2af00 <PyInit__decimal@@Base+0x10980>
   2b058:	ldr	x1, [x0, #144]
   2b05c:	cmp	x2, x1
   2b060:	b.cs	2b0ac <PyInit__decimal@@Base+0x10b2c>  // b.hs, b.nlast
   2b064:	ldr	x1, [x0, #128]
   2b068:	cmp	x2, x1
   2b06c:	b.cs	2b0fc <PyInit__decimal@@Base+0x10b7c>  // b.hs, b.nlast
   2b070:	ldr	x0, [x0, #120]
   2b074:	cmp	x2, x0
   2b078:	cset	w0, cs  // cs = hs, nlast
   2b07c:	add	w1, w0, #0xf
   2b080:	b	2af00 <PyInit__decimal@@Base+0x10980>
   2b084:	mov	x2, x23
   2b088:	mov	x0, x19
   2b08c:	bl	25588 <PyInit__decimal@@Base+0xb008>
   2b090:	cbz	w0, 2af14 <PyInit__decimal@@Base+0x10994>
   2b094:	ldr	x2, [x19, #24]
   2b098:	b	2aea0 <PyInit__decimal@@Base+0x10920>
   2b09c:	mov	x2, x23
   2b0a0:	mov	x0, x19
   2b0a4:	bl	25438 <PyInit__decimal@@Base+0xaeb8>
   2b0a8:	b	2b090 <PyInit__decimal@@Base+0x10b10>
   2b0ac:	ldr	x0, [x0, #152]
   2b0b0:	cmp	x2, x0
   2b0b4:	cset	w0, cs  // cs = hs, nlast
   2b0b8:	add	w1, w0, #0x13
   2b0bc:	b	2af00 <PyInit__decimal@@Base+0x10980>
   2b0c0:	ldr	x0, [x0, #24]
   2b0c4:	cmp	x2, x0
   2b0c8:	cset	w0, cs  // cs = hs, nlast
   2b0cc:	add	w1, w0, #0x3
   2b0d0:	b	2af00 <PyInit__decimal@@Base+0x10980>
   2b0d4:	ldr	x0, [x0, #80]
   2b0d8:	cmp	x2, x0
   2b0dc:	cset	w0, cs  // cs = hs, nlast
   2b0e0:	add	w1, w0, #0xa
   2b0e4:	b	2af00 <PyInit__decimal@@Base+0x10980>
   2b0e8:	ldr	x0, [x0, #40]
   2b0ec:	cmp	x2, x0
   2b0f0:	cset	w0, cs  // cs = hs, nlast
   2b0f4:	add	w1, w0, #0x5
   2b0f8:	b	2af00 <PyInit__decimal@@Base+0x10980>
   2b0fc:	ldr	x0, [x0, #136]
   2b100:	cmp	x2, x0
   2b104:	cset	w0, cs  // cs = hs, nlast
   2b108:	add	w1, w0, #0x11
   2b10c:	b	2af00 <PyInit__decimal@@Base+0x10980>
   2b110:	stp	x29, x30, [sp, #-64]!
   2b114:	mov	x29, sp
   2b118:	stp	x19, x20, [sp, #16]
   2b11c:	mov	x20, x1
   2b120:	ldrb	w1, [x0]
   2b124:	tst	w1, #0xe
   2b128:	b.eq	2b140 <PyInit__decimal@@Base+0x10bc0>  // b.none
   2b12c:	tst	w1, #0xc
   2b130:	b.ne	2b244 <PyInit__decimal@@Base+0x10cc4>  // b.any
   2b134:	ldp	x19, x20, [sp, #16]
   2b138:	ldp	x29, x30, [sp], #64
   2b13c:	ret
   2b140:	stp	x23, x24, [sp, #48]
   2b144:	mov	x19, x0
   2b148:	ldp	x23, x3, [x0, #8]
   2b14c:	stp	x21, x22, [sp, #32]
   2b150:	mov	x21, x2
   2b154:	ldr	x2, [x20, #8]
   2b158:	add	x22, x23, x3
   2b15c:	sub	x22, x22, #0x1
   2b160:	cmp	x22, x2
   2b164:	b.le	2b1d0 <PyInit__decimal@@Base+0x10c50>
   2b168:	ldr	x3, [x0, #24]
   2b16c:	ldr	x4, [x0, #40]
   2b170:	add	x3, x4, x3, lsl #3
   2b174:	ldur	x3, [x3, #-8]
   2b178:	cbz	x3, 2b258 <PyInit__decimal@@Base+0x10cd8>
   2b17c:	ldr	w2, [x20, #36]
   2b180:	cmp	w2, #0x3
   2b184:	b.eq	2b684 <PyInit__decimal@@Base+0x11104>  // b.none
   2b188:	b.gt	2b320 <PyInit__decimal@@Base+0x10da0>
   2b18c:	cmp	w2, #0x2
   2b190:	b.ne	2b310 <PyInit__decimal@@Base+0x10d90>  // b.any
   2b194:	tbz	w1, #0, 2b4ac <PyInit__decimal@@Base+0x10f2c>
   2b198:	mov	x1, x20
   2b19c:	mov	x0, x19
   2b1a0:	mov	x2, x21
   2b1a4:	bl	28a78 <PyInit__decimal@@Base+0xe4f8>
   2b1a8:	ldp	x1, x0, [x20]
   2b1ac:	add	x0, x0, #0x1
   2b1b0:	sub	x0, x0, x1
   2b1b4:	str	x0, [x19, #8]
   2b1b8:	ldr	w0, [x21]
   2b1bc:	mov	w1, #0x1840                	// #6208
   2b1c0:	orr	w0, w0, w1
   2b1c4:	str	w0, [x21]
   2b1c8:	ldrb	w1, [x19]
   2b1cc:	b	2b28c <PyInit__decimal@@Base+0x10d0c>
   2b1d0:	ldr	w4, [x20, #40]
   2b1d4:	ldr	x1, [x20]
   2b1d8:	cbz	w4, 2b1ec <PyInit__decimal@@Base+0x10c6c>
   2b1dc:	add	x2, x2, #0x1
   2b1e0:	sub	x24, x2, x1
   2b1e4:	cmp	x23, x24
   2b1e8:	b.gt	2b3d4 <PyInit__decimal@@Base+0x10e54>
   2b1ec:	ldr	x0, [x20, #16]
   2b1f0:	cmp	x22, x0
   2b1f4:	b.ge	2b228 <PyInit__decimal@@Base+0x10ca8>  // b.tcont
   2b1f8:	ldr	x2, [x19, #24]
   2b1fc:	add	x0, x0, #0x1
   2b200:	ldr	x4, [x19, #40]
   2b204:	sub	x22, x0, x1
   2b208:	add	x0, x4, x2, lsl #3
   2b20c:	ldur	x0, [x0, #-8]
   2b210:	cbz	x0, 2b698 <PyInit__decimal@@Base+0x11118>
   2b214:	ldr	w0, [x21]
   2b218:	cmp	x23, x22
   2b21c:	orr	w0, w0, #0x2000
   2b220:	str	w0, [x21]
   2b224:	b.lt	2b43c <PyInit__decimal@@Base+0x10ebc>  // b.tstop
   2b228:	cmp	x1, x3
   2b22c:	b.lt	2b2a4 <PyInit__decimal@@Base+0x10d24>  // b.tstop
   2b230:	ldp	x19, x20, [sp, #16]
   2b234:	ldp	x21, x22, [sp, #32]
   2b238:	ldp	x23, x24, [sp, #48]
   2b23c:	ldp	x29, x30, [sp], #64
   2b240:	ret
   2b244:	ldr	w2, [x20, #40]
   2b248:	ldr	x1, [x20]
   2b24c:	ldp	x19, x20, [sp, #16]
   2b250:	ldp	x29, x30, [sp], #64
   2b254:	b	27800 <PyInit__decimal@@Base+0xd280>
   2b258:	ldr	w0, [x20, #40]
   2b25c:	str	x2, [x19, #8]
   2b260:	cbz	w0, 2b274 <PyInit__decimal@@Base+0x10cf4>
   2b264:	ldr	x0, [x20]
   2b268:	add	x2, x2, #0x1
   2b26c:	sub	x2, x2, x0
   2b270:	str	x2, [x19, #8]
   2b274:	mov	x0, x19
   2b278:	bl	28798 <PyInit__decimal@@Base+0xe218>
   2b27c:	ldr	w0, [x21]
   2b280:	orr	w0, w0, #0x1
   2b284:	str	w0, [x21]
   2b288:	ldrb	w1, [x19]
   2b28c:	tst	w1, #0xe
   2b290:	b.ne	2b230 <PyInit__decimal@@Base+0x10cb0>  // b.any
   2b294:	ldr	x1, [x20]
   2b298:	ldr	x3, [x19, #16]
   2b29c:	cmp	x1, x3
   2b2a0:	b.ge	2b230 <PyInit__decimal@@Base+0x10cb0>  // b.tcont
   2b2a4:	sub	x22, x3, x1
   2b2a8:	mov	x0, x19
   2b2ac:	mov	x1, x22
   2b2b0:	bl	2aa80 <PyInit__decimal@@Base+0x10500>
   2b2b4:	ldr	x3, [x19, #8]
   2b2b8:	mov	x23, x0
   2b2bc:	ldr	w1, [x20, #36]
   2b2c0:	add	x3, x3, x22
   2b2c4:	str	x3, [x19, #8]
   2b2c8:	cmp	w1, #0x4
   2b2cc:	b.eq	2b6ec <PyInit__decimal@@Base+0x1116c>  // b.none
   2b2d0:	b.gt	2b350 <PyInit__decimal@@Base+0x10dd0>
   2b2d4:	cmp	w1, #0x2
   2b2d8:	b.eq	2b6d4 <PyInit__decimal@@Base+0x11154>  // b.none
   2b2dc:	cmp	w1, #0x3
   2b2e0:	b.ne	2b398 <PyInit__decimal@@Base+0x10e18>  // b.any
   2b2e4:	cbz	x0, 2b568 <PyInit__decimal@@Base+0x10fe8>
   2b2e8:	ldrb	w0, [x19]
   2b2ec:	and	w0, w0, #0x1
   2b2f0:	cbnz	w0, 2b4b8 <PyInit__decimal@@Base+0x10f38>
   2b2f4:	ldr	w0, [x21]
   2b2f8:	mov	w1, #0x1040                	// #4160
   2b2fc:	orr	w0, w0, w1
   2b300:	ldp	x23, x24, [sp, #48]
   2b304:	str	w0, [x21]
   2b308:	ldp	x21, x22, [sp, #32]
   2b30c:	b	2b134 <PyInit__decimal@@Base+0x10bb4>
   2b310:	cbz	w2, 2b334 <PyInit__decimal@@Base+0x10db4>
   2b314:	cmp	w2, #0x1
   2b318:	b.eq	2b198 <PyInit__decimal@@Base+0x10c18>  // b.none
   2b31c:	bl	67c0 <abort@plt>
   2b320:	cmp	w2, #0x7
   2b324:	b.eq	2b198 <PyInit__decimal@@Base+0x10c18>  // b.none
   2b328:	b.le	2b348 <PyInit__decimal@@Base+0x10dc8>
   2b32c:	cmp	w2, #0x8
   2b330:	b.ne	2b31c <PyInit__decimal@@Base+0x10d9c>  // b.any
   2b334:	and	w1, w1, #0x1
   2b338:	mov	x0, x19
   2b33c:	mov	w2, #0x2                   	// #2
   2b340:	bl	28cd8 <PyInit__decimal@@Base+0xe758>
   2b344:	b	2b1b8 <PyInit__decimal@@Base+0x10c38>
   2b348:	b.ne	2b334 <PyInit__decimal@@Base+0x10db4>  // b.any
   2b34c:	bl	67c0 <abort@plt>
   2b350:	cmp	w1, #0x6
   2b354:	b.eq	2b6fc <PyInit__decimal@@Base+0x1117c>  // b.none
   2b358:	cmp	w1, #0x7
   2b35c:	b.ne	2b3bc <PyInit__decimal@@Base+0x10e3c>  // b.any
   2b360:	ldr	x0, [x19, #40]
   2b364:	ldr	x2, [x0]
   2b368:	cbz	x23, 2b568 <PyInit__decimal@@Base+0x10fe8>
   2b36c:	mov	x1, #0xcccccccccccccccc    	// #-3689348814741910324
   2b370:	movk	x1, #0xcccd
   2b374:	umulh	x1, x2, x1
   2b378:	lsr	x1, x1, #3
   2b37c:	add	x1, x1, x1, lsl #2
   2b380:	sub	x1, x2, x1, lsl #1
   2b384:	cmp	w1, #0x0
   2b388:	ccmp	w1, #0x5, #0x4, ne  // ne = any
   2b38c:	b.eq	2b4bc <PyInit__decimal@@Base+0x10f3c>  // b.none
   2b390:	ldr	w0, [x21]
   2b394:	b	2b2f8 <PyInit__decimal@@Base+0x10d78>
   2b398:	cmp	x0, #0x0
   2b39c:	cset	w0, ne  // ne = any
   2b3a0:	cbnz	w1, 2b3a8 <PyInit__decimal@@Base+0x10e28>
   2b3a4:	cbnz	w0, 2b4b8 <PyInit__decimal@@Base+0x10f38>
   2b3a8:	ldr	w0, [x21]
   2b3ac:	orr	w1, w0, #0x1000
   2b3b0:	str	w1, [x21]
   2b3b4:	cbnz	x23, 2b2f8 <PyInit__decimal@@Base+0x10d78>
   2b3b8:	b	2b230 <PyInit__decimal@@Base+0x10cb0>
   2b3bc:	cmp	x0, #0x5
   2b3c0:	cset	w0, hi  // hi = pmore
   2b3c4:	cmp	w1, #0x5
   2b3c8:	b.ne	2b3a8 <PyInit__decimal@@Base+0x10e28>  // b.any
   2b3cc:	cbz	w0, 2b3a8 <PyInit__decimal@@Base+0x10e28>
   2b3d0:	b	2b4b8 <PyInit__decimal@@Base+0x10f38>
   2b3d4:	add	x1, x23, x1
   2b3d8:	mov	x3, x21
   2b3dc:	sub	x2, x1, x2
   2b3e0:	mov	x1, x0
   2b3e4:	bl	2a2e0 <PyInit__decimal@@Base+0xfd60>
   2b3e8:	cbz	w0, 2b288 <PyInit__decimal@@Base+0x10d08>
   2b3ec:	ldr	x0, [x19, #24]
   2b3f0:	sub	x23, x24, x23
   2b3f4:	ldr	x2, [x19, #40]
   2b3f8:	ldr	x1, [x19, #8]
   2b3fc:	add	x0, x2, x0, lsl #3
   2b400:	ldr	w2, [x21]
   2b404:	add	x23, x1, x23
   2b408:	str	x23, [x19, #8]
   2b40c:	orr	w1, w2, #0x1
   2b410:	ldur	x0, [x0, #-8]
   2b414:	str	w1, [x21]
   2b418:	ldrb	w1, [x19]
   2b41c:	cbz	x0, 2b28c <PyInit__decimal@@Base+0x10d0c>
   2b420:	ldr	x0, [x20, #16]
   2b424:	cmp	x22, x0
   2b428:	b.ge	2b28c <PyInit__decimal@@Base+0x10d0c>  // b.tcont
   2b42c:	mov	w0, #0x2001                	// #8193
   2b430:	orr	w2, w2, w0
   2b434:	str	w2, [x21]
   2b438:	b	2b28c <PyInit__decimal@@Base+0x10d0c>
   2b43c:	sub	x1, x22, x23
   2b440:	mov	x0, x19
   2b444:	bl	2aa80 <PyInit__decimal@@Base+0x10500>
   2b448:	mov	x23, x0
   2b44c:	ldr	w1, [x20, #36]
   2b450:	sxtw	x0, w0
   2b454:	str	x22, [x19, #8]
   2b458:	cmp	w1, #0x4
   2b45c:	b.eq	2b850 <PyInit__decimal@@Base+0x112d0>  // b.none
   2b460:	b.gt	2b580 <PyInit__decimal@@Base+0x11000>
   2b464:	cmp	w1, #0x2
   2b468:	b.eq	2b88c <PyInit__decimal@@Base+0x1130c>  // b.none
   2b46c:	cmp	w1, #0x3
   2b470:	b.ne	2b6a8 <PyInit__decimal@@Base+0x11128>  // b.any
   2b474:	ldrb	w1, [x19]
   2b478:	cbz	x0, 2b860 <PyInit__decimal@@Base+0x112e0>
   2b47c:	and	w1, w1, #0x1
   2b480:	cbnz	w1, 2b5c0 <PyInit__decimal@@Base+0x11040>
   2b484:	ldr	w0, [x21]
   2b488:	ldr	x1, [x19, #24]
   2b48c:	mov	w3, #0x5040                	// #20544
   2b490:	ldr	x2, [x19, #40]
   2b494:	orr	w0, w0, w3
   2b498:	str	w0, [x21]
   2b49c:	add	x0, x2, x1, lsl #3
   2b4a0:	ldur	x0, [x0, #-8]
   2b4a4:	cbnz	x0, 2b288 <PyInit__decimal@@Base+0x10d08>
   2b4a8:	b	2b274 <PyInit__decimal@@Base+0x10cf4>
   2b4ac:	mov	w1, #0x0                   	// #0
   2b4b0:	bl	28cd8 <PyInit__decimal@@Base+0xe758>
   2b4b4:	b	2b1b8 <PyInit__decimal@@Base+0x10c38>
   2b4b8:	ldr	x0, [x19, #40]
   2b4bc:	ldr	x1, [x19, #24]
   2b4c0:	bl	1b3b8 <PyInit__decimal@@Base+0xe38>
   2b4c4:	cbnz	x0, 2b71c <PyInit__decimal@@Base+0x1119c>
   2b4c8:	ldr	x0, [x19, #24]
   2b4cc:	adrp	x1, 42000 <PyInit__decimal@@Base+0x27a80>
   2b4d0:	ldr	x2, [x19, #40]
   2b4d4:	add	x1, x1, #0x2d0
   2b4d8:	add	x2, x2, x0, lsl #3
   2b4dc:	ldr	x3, [x1, #72]
   2b4e0:	ldur	x2, [x2, #-8]
   2b4e4:	cmp	x2, x3
   2b4e8:	b.cs	2b754 <PyInit__decimal@@Base+0x111d4>  // b.hs, b.nlast
   2b4ec:	ldr	x3, [x1, #32]
   2b4f0:	cmp	x2, x3
   2b4f4:	b.cs	2b790 <PyInit__decimal@@Base+0x11210>  // b.hs, b.nlast
   2b4f8:	ldr	x3, [x1, #16]
   2b4fc:	cmp	x2, x3
   2b500:	b.cs	2b828 <PyInit__decimal@@Base+0x112a8>  // b.hs, b.nlast
   2b504:	ldr	x1, [x1, #8]
   2b508:	cmp	x2, x1
   2b50c:	cset	x3, cs  // cs = hs, nlast
   2b510:	add	x3, x3, #0x1
   2b514:	nop
   2b518:	sub	x1, x0, #0x1
   2b51c:	ldr	x2, [x20]
   2b520:	add	x0, x1, x1, lsl #2
   2b524:	add	x0, x3, x0, lsl #2
   2b528:	sub	x0, x0, x1
   2b52c:	str	x0, [x19, #16]
   2b530:	cmp	x2, x0
   2b534:	b.ge	2b3a8 <PyInit__decimal@@Base+0x10e28>  // b.tcont
   2b538:	mov	x0, x19
   2b53c:	mov	x1, #0x1                   	// #1
   2b540:	bl	2aa80 <PyInit__decimal@@Base+0x10500>
   2b544:	ldr	x0, [x19, #8]
   2b548:	mov	x1, x20
   2b54c:	ldr	x2, [x20]
   2b550:	add	x0, x0, #0x1
   2b554:	stp	x0, x2, [x19, #8]
   2b558:	mov	x0, x19
   2b55c:	mov	x2, x21
   2b560:	bl	2abb8 <PyInit__decimal@@Base+0x10638>
   2b564:	b	2b3a8 <PyInit__decimal@@Base+0x10e28>
   2b568:	ldr	w0, [x21]
   2b56c:	ldp	x23, x24, [sp, #48]
   2b570:	orr	w0, w0, #0x1000
   2b574:	str	w0, [x21]
   2b578:	ldp	x21, x22, [sp, #32]
   2b57c:	b	2b134 <PyInit__decimal@@Base+0x10bb4>
   2b580:	cmp	w1, #0x6
   2b584:	b.eq	2b870 <PyInit__decimal@@Base+0x112f0>  // b.none
   2b588:	cmp	w1, #0x7
   2b58c:	b.ne	2b6bc <PyInit__decimal@@Base+0x1113c>  // b.any
   2b590:	ldr	x1, [x19, #40]
   2b594:	ldr	x1, [x1]
   2b598:	cbz	x0, 2b94c <PyInit__decimal@@Base+0x113cc>
   2b59c:	mov	x0, #0xcccccccccccccccc    	// #-3689348814741910324
   2b5a0:	movk	x0, #0xcccd
   2b5a4:	umulh	x0, x1, x0
   2b5a8:	lsr	x0, x0, #3
   2b5ac:	add	x0, x0, x0, lsl #2
   2b5b0:	sub	x0, x1, x0, lsl #1
   2b5b4:	cmp	w0, #0x0
   2b5b8:	ccmp	w0, #0x5, #0x4, ne  // ne = any
   2b5bc:	b.ne	2b484 <PyInit__decimal@@Base+0x10f04>  // b.any
   2b5c0:	ldr	x1, [x19, #24]
   2b5c4:	ldr	x0, [x19, #40]
   2b5c8:	bl	1b3b8 <PyInit__decimal@@Base+0xe38>
   2b5cc:	cbz	x0, 2b8a4 <PyInit__decimal@@Base+0x11324>
   2b5d0:	ldp	x0, x3, [x19, #24]
   2b5d4:	adrp	x1, 5f000 <PyInit__decimal@@Base+0x44a80>
   2b5d8:	ldr	x2, [x1, #1672]
   2b5dc:	add	x1, x0, #0x1
   2b5e0:	cmp	x1, x2
   2b5e4:	csel	x1, x1, x2, ge  // ge = tcont
   2b5e8:	cmp	x1, x3
   2b5ec:	b.eq	2b600 <PyInit__decimal@@Base+0x11080>  // b.none
   2b5f0:	ldrb	w2, [x19]
   2b5f4:	tbz	w2, #5, 2b960 <PyInit__decimal@@Base+0x113e0>
   2b5f8:	cmp	x1, x3
   2b5fc:	b.gt	2b978 <PyInit__decimal@@Base+0x113f8>
   2b600:	ldr	x1, [x19, #40]
   2b604:	mov	x2, #0x1                   	// #1
   2b608:	str	x2, [x1, x0, lsl #3]
   2b60c:	ldr	x3, [x19, #24]
   2b610:	add	x0, x3, x2
   2b614:	str	x0, [x19, #24]
   2b618:	add	x0, x1, x0, lsl #3
   2b61c:	adrp	x1, 42000 <PyInit__decimal@@Base+0x27a80>
   2b620:	add	x1, x1, #0x2d0
   2b624:	ldur	x2, [x0, #-8]
   2b628:	ldr	x0, [x1, #72]
   2b62c:	cmp	x2, x0
   2b630:	b.cs	2b7ec <PyInit__decimal@@Base+0x1126c>  // b.hs, b.nlast
   2b634:	ldr	x0, [x1, #32]
   2b638:	cmp	x2, x0
   2b63c:	b.cs	2b908 <PyInit__decimal@@Base+0x11388>  // b.hs, b.nlast
   2b640:	ldr	x0, [x1, #16]
   2b644:	cmp	x2, x0
   2b648:	b.cs	2b988 <PyInit__decimal@@Base+0x11408>  // b.hs, b.nlast
   2b64c:	ldr	x0, [x1, #8]
   2b650:	cmp	x2, x0
   2b654:	cset	w0, cs  // cs = hs, nlast
   2b658:	add	w0, w0, #0x1
   2b65c:	add	x1, x3, x3, lsl #2
   2b660:	lsl	x1, x1, #2
   2b664:	sub	x1, x1, x3
   2b668:	add	x0, x1, w0, sxtw
   2b66c:	str	x0, [x19, #16]
   2b670:	ldr	w0, [x21]
   2b674:	orr	w1, w0, #0x1000
   2b678:	str	w1, [x21]
   2b67c:	cbnz	w23, 2b488 <PyInit__decimal@@Base+0x10f08>
   2b680:	b	2b288 <PyInit__decimal@@Base+0x10d08>
   2b684:	tbz	w1, #0, 2b198 <PyInit__decimal@@Base+0x10c18>
   2b688:	mov	w2, #0x2                   	// #2
   2b68c:	mov	w1, #0x1                   	// #1
   2b690:	bl	28cd8 <PyInit__decimal@@Base+0xe758>
   2b694:	b	2b1b8 <PyInit__decimal@@Base+0x10c38>
   2b698:	cmp	x23, x22
   2b69c:	b.ge	2b228 <PyInit__decimal@@Base+0x10ca8>  // b.tcont
   2b6a0:	str	x22, [x19, #8]
   2b6a4:	b	2b274 <PyInit__decimal@@Base+0x10cf4>
   2b6a8:	cmp	x0, #0x0
   2b6ac:	cset	w0, ne  // ne = any
   2b6b0:	cbnz	w1, 2b670 <PyInit__decimal@@Base+0x110f0>
   2b6b4:	cbz	w0, 2b670 <PyInit__decimal@@Base+0x110f0>
   2b6b8:	b	2b5c0 <PyInit__decimal@@Base+0x11040>
   2b6bc:	cmp	x0, #0x5
   2b6c0:	cset	w0, hi  // hi = pmore
   2b6c4:	cmp	w1, #0x5
   2b6c8:	b.ne	2b670 <PyInit__decimal@@Base+0x110f0>  // b.any
   2b6cc:	cbz	w0, 2b670 <PyInit__decimal@@Base+0x110f0>
   2b6d0:	b	2b5c0 <PyInit__decimal@@Base+0x11040>
   2b6d4:	cbz	x0, 2b568 <PyInit__decimal@@Base+0x10fe8>
   2b6d8:	ldrb	w0, [x19]
   2b6dc:	mvn	w0, w0
   2b6e0:	and	w0, w0, #0x1
   2b6e4:	cbz	w0, 2b2f4 <PyInit__decimal@@Base+0x10d74>
   2b6e8:	b	2b4b8 <PyInit__decimal@@Base+0x10f38>
   2b6ec:	cmp	x0, #0x4
   2b6f0:	cset	w0, hi  // hi = pmore
   2b6f4:	cbz	w0, 2b3a8 <PyInit__decimal@@Base+0x10e28>
   2b6f8:	b	2b4b8 <PyInit__decimal@@Base+0x10f38>
   2b6fc:	cmp	x0, #0x5
   2b700:	b.hi	2b4b8 <PyInit__decimal@@Base+0x10f38>  // b.pmore
   2b704:	b.ne	2b3a8 <PyInit__decimal@@Base+0x10e28>  // b.any
   2b708:	ldr	x0, [x19, #40]
   2b70c:	ldr	x1, [x0]
   2b710:	tbnz	w1, #0, 2b4bc <PyInit__decimal@@Base+0x10f3c>
   2b714:	ldr	w0, [x21]
   2b718:	b	2b2f8 <PyInit__decimal@@Base+0x10d78>
   2b71c:	ldr	x3, [x19, #24]
   2b720:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27a80>
   2b724:	ldr	x2, [x19, #40]
   2b728:	mov	x1, x20
   2b72c:	ldr	x4, [x0, #864]
   2b730:	mov	x0, x19
   2b734:	add	x3, x2, x3, lsl #3
   2b738:	mov	x2, x21
   2b73c:	stur	x4, [x3, #-8]
   2b740:	ldr	x3, [x19, #8]
   2b744:	add	x3, x3, #0x1
   2b748:	str	x3, [x19, #8]
   2b74c:	bl	2abb8 <PyInit__decimal@@Base+0x10638>
   2b750:	b	2b3a8 <PyInit__decimal@@Base+0x10e28>
   2b754:	ldr	x3, [x1, #112]
   2b758:	cmp	x2, x3
   2b75c:	b.cs	2b7c0 <PyInit__decimal@@Base+0x11240>  // b.hs, b.nlast
   2b760:	ldr	x3, [x1, #88]
   2b764:	cmp	x2, x3
   2b768:	b.cc	2b8b4 <PyInit__decimal@@Base+0x11334>  // b.lo, b.ul, b.last
   2b76c:	ldr	x4, [x1, #104]
   2b770:	mov	x3, #0xe                   	// #14
   2b774:	cmp	x2, x4
   2b778:	b.cs	2b518 <PyInit__decimal@@Base+0x10f98>  // b.hs, b.nlast
   2b77c:	ldr	x1, [x1, #96]
   2b780:	cmp	x2, x1
   2b784:	cset	x3, cs  // cs = hs, nlast
   2b788:	add	x3, x3, #0xc
   2b78c:	b	2b518 <PyInit__decimal@@Base+0x10f98>
   2b790:	ldr	x3, [x1, #48]
   2b794:	cmp	x2, x3
   2b798:	b.cc	2b8c8 <PyInit__decimal@@Base+0x11348>  // b.lo, b.ul, b.last
   2b79c:	ldr	x4, [x1, #64]
   2b7a0:	mov	x3, #0x9                   	// #9
   2b7a4:	cmp	x2, x4
   2b7a8:	b.cs	2b518 <PyInit__decimal@@Base+0x10f98>  // b.hs, b.nlast
   2b7ac:	ldr	x1, [x1, #56]
   2b7b0:	cmp	x2, x1
   2b7b4:	cset	x3, cs  // cs = hs, nlast
   2b7b8:	add	x3, x3, #0x7
   2b7bc:	b	2b518 <PyInit__decimal@@Base+0x10f98>
   2b7c0:	ldr	x3, [x1, #144]
   2b7c4:	cmp	x2, x3
   2b7c8:	b.cs	2b83c <PyInit__decimal@@Base+0x112bc>  // b.hs, b.nlast
   2b7cc:	ldr	x3, [x1, #128]
   2b7d0:	cmp	x2, x3
   2b7d4:	b.cs	2b938 <PyInit__decimal@@Base+0x113b8>  // b.hs, b.nlast
   2b7d8:	ldr	x1, [x1, #120]
   2b7dc:	cmp	x2, x1
   2b7e0:	cset	x3, cs  // cs = hs, nlast
   2b7e4:	add	x3, x3, #0xf
   2b7e8:	b	2b518 <PyInit__decimal@@Base+0x10f98>
   2b7ec:	ldr	x0, [x1, #112]
   2b7f0:	cmp	x2, x0
   2b7f4:	b.cs	2b8dc <PyInit__decimal@@Base+0x1135c>  // b.hs, b.nlast
   2b7f8:	ldr	x0, [x1, #88]
   2b7fc:	cmp	x2, x0
   2b800:	b.cc	2b9c4 <PyInit__decimal@@Base+0x11444>  // b.lo, b.ul, b.last
   2b804:	ldr	x4, [x1, #104]
   2b808:	mov	w0, #0xe                   	// #14
   2b80c:	cmp	x2, x4
   2b810:	b.cs	2b65c <PyInit__decimal@@Base+0x110dc>  // b.hs, b.nlast
   2b814:	ldr	x0, [x1, #96]
   2b818:	cmp	x2, x0
   2b81c:	cset	w0, cs  // cs = hs, nlast
   2b820:	add	w0, w0, #0xc
   2b824:	b	2b65c <PyInit__decimal@@Base+0x110dc>
   2b828:	ldr	x1, [x1, #24]
   2b82c:	cmp	x2, x1
   2b830:	cset	x3, cs  // cs = hs, nlast
   2b834:	add	x3, x3, #0x3
   2b838:	b	2b518 <PyInit__decimal@@Base+0x10f98>
   2b83c:	ldr	x1, [x1, #152]
   2b840:	cmp	x2, x1
   2b844:	cset	x3, cs  // cs = hs, nlast
   2b848:	add	x3, x3, #0x13
   2b84c:	b	2b518 <PyInit__decimal@@Base+0x10f98>
   2b850:	cmp	x0, #0x4
   2b854:	cset	w0, hi  // hi = pmore
   2b858:	cbz	w0, 2b670 <PyInit__decimal@@Base+0x110f0>
   2b85c:	b	2b5c0 <PyInit__decimal@@Base+0x11040>
   2b860:	ldr	w0, [x21]
   2b864:	orr	w0, w0, #0x1000
   2b868:	str	w0, [x21]
   2b86c:	b	2b28c <PyInit__decimal@@Base+0x10d0c>
   2b870:	cmp	x0, #0x5
   2b874:	b.hi	2b5c0 <PyInit__decimal@@Base+0x11040>  // b.pmore
   2b878:	b.ne	2b670 <PyInit__decimal@@Base+0x110f0>  // b.any
   2b87c:	ldr	x0, [x19, #40]
   2b880:	ldr	x0, [x0]
   2b884:	tbz	w0, #0, 2b484 <PyInit__decimal@@Base+0x10f04>
   2b888:	b	2b5c0 <PyInit__decimal@@Base+0x11040>
   2b88c:	ldrb	w1, [x19]
   2b890:	cbz	x0, 2b860 <PyInit__decimal@@Base+0x112e0>
   2b894:	mvn	w1, w1
   2b898:	and	w1, w1, #0x1
   2b89c:	cbz	w1, 2b484 <PyInit__decimal@@Base+0x10f04>
   2b8a0:	b	2b5c0 <PyInit__decimal@@Base+0x11040>
   2b8a4:	ldr	x0, [x19, #24]
   2b8a8:	ldr	x1, [x19, #40]
   2b8ac:	sub	x3, x0, #0x1
   2b8b0:	b	2b618 <PyInit__decimal@@Base+0x11098>
   2b8b4:	ldr	x1, [x1, #80]
   2b8b8:	cmp	x2, x1
   2b8bc:	cset	x3, cs  // cs = hs, nlast
   2b8c0:	add	x3, x3, #0xa
   2b8c4:	b	2b518 <PyInit__decimal@@Base+0x10f98>
   2b8c8:	ldr	x1, [x1, #40]
   2b8cc:	cmp	x2, x1
   2b8d0:	cset	x3, cs  // cs = hs, nlast
   2b8d4:	add	x3, x3, #0x5
   2b8d8:	b	2b518 <PyInit__decimal@@Base+0x10f98>
   2b8dc:	ldr	x0, [x1, #144]
   2b8e0:	cmp	x2, x0
   2b8e4:	b.cs	2b99c <PyInit__decimal@@Base+0x1141c>  // b.hs, b.nlast
   2b8e8:	ldr	x0, [x1, #128]
   2b8ec:	cmp	x2, x0
   2b8f0:	b.cs	2b9d8 <PyInit__decimal@@Base+0x11458>  // b.hs, b.nlast
   2b8f4:	ldr	x0, [x1, #120]
   2b8f8:	cmp	x2, x0
   2b8fc:	cset	w0, cs  // cs = hs, nlast
   2b900:	add	w0, w0, #0xf
   2b904:	b	2b65c <PyInit__decimal@@Base+0x110dc>
   2b908:	ldr	x0, [x1, #48]
   2b90c:	cmp	x2, x0
   2b910:	b.cc	2b9b0 <PyInit__decimal@@Base+0x11430>  // b.lo, b.ul, b.last
   2b914:	ldr	x4, [x1, #64]
   2b918:	mov	w0, #0x9                   	// #9
   2b91c:	cmp	x2, x4
   2b920:	b.cs	2b65c <PyInit__decimal@@Base+0x110dc>  // b.hs, b.nlast
   2b924:	ldr	x0, [x1, #56]
   2b928:	cmp	x2, x0
   2b92c:	cset	w0, cs  // cs = hs, nlast
   2b930:	add	w0, w0, #0x7
   2b934:	b	2b65c <PyInit__decimal@@Base+0x110dc>
   2b938:	ldr	x1, [x1, #136]
   2b93c:	cmp	x2, x1
   2b940:	cset	x3, cs  // cs = hs, nlast
   2b944:	add	x3, x3, #0x11
   2b948:	b	2b518 <PyInit__decimal@@Base+0x10f98>
   2b94c:	ldr	w0, [x21]
   2b950:	orr	w0, w0, #0x1000
   2b954:	str	w0, [x21]
   2b958:	ldrb	w1, [x19]
   2b95c:	b	2b28c <PyInit__decimal@@Base+0x10d0c>
   2b960:	mov	x2, x21
   2b964:	mov	x0, x19
   2b968:	bl	25588 <PyInit__decimal@@Base+0xb008>
   2b96c:	cbz	w0, 2b670 <PyInit__decimal@@Base+0x110f0>
   2b970:	ldr	x0, [x19, #24]
   2b974:	b	2b600 <PyInit__decimal@@Base+0x11080>
   2b978:	mov	x2, x21
   2b97c:	mov	x0, x19
   2b980:	bl	25438 <PyInit__decimal@@Base+0xaeb8>
   2b984:	b	2b96c <PyInit__decimal@@Base+0x113ec>
   2b988:	ldr	x0, [x1, #24]
   2b98c:	cmp	x2, x0
   2b990:	cset	w0, cs  // cs = hs, nlast
   2b994:	add	w0, w0, #0x3
   2b998:	b	2b65c <PyInit__decimal@@Base+0x110dc>
   2b99c:	ldr	x0, [x1, #152]
   2b9a0:	cmp	x2, x0
   2b9a4:	cset	w0, cs  // cs = hs, nlast
   2b9a8:	add	w0, w0, #0x13
   2b9ac:	b	2b65c <PyInit__decimal@@Base+0x110dc>
   2b9b0:	ldr	x0, [x1, #40]
   2b9b4:	cmp	x2, x0
   2b9b8:	cset	w0, cs  // cs = hs, nlast
   2b9bc:	add	w0, w0, #0x5
   2b9c0:	b	2b65c <PyInit__decimal@@Base+0x110dc>
   2b9c4:	ldr	x0, [x1, #80]
   2b9c8:	cmp	x2, x0
   2b9cc:	cset	w0, cs  // cs = hs, nlast
   2b9d0:	add	w0, w0, #0xa
   2b9d4:	b	2b65c <PyInit__decimal@@Base+0x110dc>
   2b9d8:	ldr	x0, [x1, #136]
   2b9dc:	cmp	x2, x0
   2b9e0:	cset	w0, cs  // cs = hs, nlast
   2b9e4:	add	w0, w0, #0x11
   2b9e8:	b	2b65c <PyInit__decimal@@Base+0x110dc>
   2b9ec:	nop
   2b9f0:	mov	x5, x1
   2b9f4:	mov	w6, #0x0                   	// #0
   2b9f8:	mov	x1, x2
   2b9fc:	mov	x2, x3
   2ba00:	tbnz	x5, #63, 2bae4 <PyInit__decimal@@Base+0x11564>
   2ba04:	ldrb	w8, [x0]
   2ba08:	adrp	x4, 42000 <PyInit__decimal@@Base+0x27a80>
   2ba0c:	ldr	x7, [x0, #40]
   2ba10:	and	w8, w8, #0xfffffff0
   2ba14:	orr	w6, w6, w8
   2ba18:	strb	w6, [x0]
   2ba1c:	str	xzr, [x0, #8]
   2ba20:	add	x4, x4, #0x2d0
   2ba24:	stp	x5, xzr, [x7]
   2ba28:	mov	x5, #0x1                   	// #1
   2ba2c:	str	x5, [x0, #24]
   2ba30:	ldr	x6, [x4, #72]
   2ba34:	ldr	x5, [x7]
   2ba38:	cmp	x5, x6
   2ba3c:	b.cs	2baa4 <PyInit__decimal@@Base+0x11524>  // b.hs, b.nlast
   2ba40:	ldr	x3, [x4, #32]
   2ba44:	cmp	x5, x3
   2ba48:	b.cs	2ba70 <PyInit__decimal@@Base+0x114f0>  // b.hs, b.nlast
   2ba4c:	ldr	x3, [x4, #16]
   2ba50:	cmp	x5, x3
   2ba54:	b.cs	2bb28 <PyInit__decimal@@Base+0x115a8>  // b.hs, b.nlast
   2ba58:	ldr	x3, [x4, #8]
   2ba5c:	cmp	x5, x3
   2ba60:	cset	x6, cs  // cs = hs, nlast
   2ba64:	add	x6, x6, #0x1
   2ba68:	str	x6, [x0, #16]
   2ba6c:	b	2b110 <PyInit__decimal@@Base+0x10b90>
   2ba70:	ldr	x3, [x4, #48]
   2ba74:	cmp	x5, x3
   2ba78:	b.cc	2bb6c <PyInit__decimal@@Base+0x115ec>  // b.lo, b.ul, b.last
   2ba7c:	ldr	x3, [x4, #64]
   2ba80:	mov	x6, #0x9                   	// #9
   2ba84:	cmp	x5, x3
   2ba88:	b.cs	2badc <PyInit__decimal@@Base+0x1155c>  // b.hs, b.nlast
   2ba8c:	ldr	x3, [x4, #56]
   2ba90:	cmp	x5, x3
   2ba94:	cset	x6, cs  // cs = hs, nlast
   2ba98:	add	x6, x6, #0x7
   2ba9c:	str	x6, [x0, #16]
   2baa0:	b	2b110 <PyInit__decimal@@Base+0x10b90>
   2baa4:	ldr	x3, [x4, #112]
   2baa8:	cmp	x5, x3
   2baac:	b.cs	2bafc <PyInit__decimal@@Base+0x1157c>  // b.hs, b.nlast
   2bab0:	ldr	x3, [x4, #88]
   2bab4:	cmp	x5, x3
   2bab8:	b.cc	2bb58 <PyInit__decimal@@Base+0x115d8>  // b.lo, b.ul, b.last
   2babc:	ldr	x3, [x4, #104]
   2bac0:	mov	x6, #0xe                   	// #14
   2bac4:	cmp	x5, x3
   2bac8:	b.cs	2badc <PyInit__decimal@@Base+0x1155c>  // b.hs, b.nlast
   2bacc:	ldr	x3, [x4, #96]
   2bad0:	cmp	x5, x3
   2bad4:	cset	x6, cs  // cs = hs, nlast
   2bad8:	add	x6, x6, #0xc
   2badc:	str	x6, [x0, #16]
   2bae0:	b	2b110 <PyInit__decimal@@Base+0x10b90>
   2bae4:	mov	x3, #0x8000000000000000    	// #-9223372036854775808
   2bae8:	mov	w6, #0x1                   	// #1
   2baec:	cmp	x5, x3
   2baf0:	b.eq	2ba04 <PyInit__decimal@@Base+0x11484>  // b.none
   2baf4:	neg	x5, x5
   2baf8:	b	2ba04 <PyInit__decimal@@Base+0x11484>
   2bafc:	ldr	x3, [x4, #144]
   2bb00:	cmp	x5, x3
   2bb04:	b.cs	2bb40 <PyInit__decimal@@Base+0x115c0>  // b.hs, b.nlast
   2bb08:	ldr	x3, [x4, #128]
   2bb0c:	cmp	x5, x3
   2bb10:	b.cs	2bb80 <PyInit__decimal@@Base+0x11600>  // b.hs, b.nlast
   2bb14:	ldr	x3, [x4, #120]
   2bb18:	cmp	x5, x3
   2bb1c:	cset	x6, cs  // cs = hs, nlast
   2bb20:	add	x6, x6, #0xf
   2bb24:	b	2badc <PyInit__decimal@@Base+0x1155c>
   2bb28:	ldr	x3, [x4, #24]
   2bb2c:	cmp	x5, x3
   2bb30:	cset	x6, cs  // cs = hs, nlast
   2bb34:	add	x6, x6, #0x3
   2bb38:	str	x6, [x0, #16]
   2bb3c:	b	2b110 <PyInit__decimal@@Base+0x10b90>
   2bb40:	ldr	x3, [x4, #152]
   2bb44:	cmp	x5, x3
   2bb48:	cset	x6, cs  // cs = hs, nlast
   2bb4c:	add	x6, x6, #0x13
   2bb50:	str	x6, [x0, #16]
   2bb54:	b	2b110 <PyInit__decimal@@Base+0x10b90>
   2bb58:	ldr	x3, [x4, #80]
   2bb5c:	cmp	x5, x3
   2bb60:	cset	x6, cs  // cs = hs, nlast
   2bb64:	add	x6, x6, #0xa
   2bb68:	b	2badc <PyInit__decimal@@Base+0x1155c>
   2bb6c:	ldr	x3, [x4, #40]
   2bb70:	cmp	x5, x3
   2bb74:	cset	x6, cs  // cs = hs, nlast
   2bb78:	add	x6, x6, #0x5
   2bb7c:	b	2badc <PyInit__decimal@@Base+0x1155c>
   2bb80:	ldr	x3, [x4, #136]
   2bb84:	cmp	x5, x3
   2bb88:	cset	x6, cs  // cs = hs, nlast
   2bb8c:	add	x6, x6, #0x11
   2bb90:	b	2badc <PyInit__decimal@@Base+0x1155c>
   2bb94:	nop
   2bb98:	sxtw	x1, w1
   2bb9c:	b	2b9f0 <PyInit__decimal@@Base+0x11470>
   2bba0:	b	2b9f0 <PyInit__decimal@@Base+0x11470>
   2bba4:	nop
   2bba8:	stp	x29, x30, [sp, #-80]!
   2bbac:	mov	x29, sp
   2bbb0:	stp	x19, x20, [sp, #16]
   2bbb4:	mov	x19, x0
   2bbb8:	mov	x20, x1
   2bbbc:	stp	x21, x22, [sp, #32]
   2bbc0:	mov	x21, x2
   2bbc4:	mov	x22, x3
   2bbc8:	ldrb	w0, [x0]
   2bbcc:	tbnz	w0, #5, 2bbec <PyInit__decimal@@Base+0x1166c>
   2bbd0:	ldr	x0, [x19, #32]
   2bbd4:	str	x23, [sp, #48]
   2bbd8:	adrp	x23, 5f000 <PyInit__decimal@@Base+0x44a80>
   2bbdc:	ldr	x1, [x23, #1672]
   2bbe0:	cmp	x0, x1
   2bbe4:	b.gt	2bc10 <PyInit__decimal@@Base+0x11690>
   2bbe8:	ldr	x23, [sp, #48]
   2bbec:	mov	x3, x22
   2bbf0:	mov	x2, x21
   2bbf4:	mov	x1, x20
   2bbf8:	mov	x0, x19
   2bbfc:	bl	2b9f0 <PyInit__decimal@@Base+0x11470>
   2bc00:	ldp	x19, x20, [sp, #16]
   2bc04:	ldp	x21, x22, [sp, #32]
   2bc08:	ldp	x29, x30, [sp], #80
   2bc0c:	ret
   2bc10:	ldr	x0, [x19, #40]
   2bc14:	add	x3, sp, #0x4f
   2bc18:	mov	x2, #0x8                   	// #8
   2bc1c:	strb	wzr, [sp, #79]
   2bc20:	bl	252a8 <PyInit__decimal@@Base+0xad28>
   2bc24:	str	x0, [x19, #40]
   2bc28:	ldrb	w1, [sp, #79]
   2bc2c:	cbnz	w1, 2bbe8 <PyInit__decimal@@Base+0x11668>
   2bc30:	ldr	x0, [x23, #1672]
   2bc34:	ldr	x23, [sp, #48]
   2bc38:	str	x0, [x19, #32]
   2bc3c:	b	2bbec <PyInit__decimal@@Base+0x1166c>
   2bc40:	sxtw	x1, w1
   2bc44:	b	2bba8 <PyInit__decimal@@Base+0x11628>
   2bc48:	b	2bba8 <PyInit__decimal@@Base+0x11628>
   2bc4c:	nop
   2bc50:	mov	x6, #0x89e80000            	// #2313682944
   2bc54:	ldrb	w8, [x0]
   2bc58:	movk	x6, #0x2304, lsl #32
   2bc5c:	str	xzr, [x0, #8]
   2bc60:	movk	x6, #0x8ac7, lsl #48
   2bc64:	cmp	x1, x6
   2bc68:	cset	x5, cs  // cs = hs, nlast
   2bc6c:	adrp	x4, 42000 <PyInit__decimal@@Base+0x27a80>
   2bc70:	ldr	x7, [x0, #40]
   2bc74:	add	x9, x5, #0x1
   2bc78:	msub	x6, x5, x6, x1
   2bc7c:	and	w1, w8, #0xfffffff0
   2bc80:	strb	w1, [x0]
   2bc84:	add	x4, x4, #0x2d0
   2bc88:	add	x8, x7, x9, lsl #3
   2bc8c:	stp	x6, x5, [x7]
   2bc90:	mov	x1, x2
   2bc94:	str	x9, [x0, #24]
   2bc98:	mov	x2, x3
   2bc9c:	ldr	x7, [x4, #72]
   2bca0:	ldur	x6, [x8, #-8]
   2bca4:	cmp	x6, x7
   2bca8:	b.cs	2bd38 <PyInit__decimal@@Base+0x117b8>  // b.hs, b.nlast
   2bcac:	ldr	x3, [x4, #32]
   2bcb0:	cmp	x6, x3
   2bcb4:	b.cs	2bcf0 <PyInit__decimal@@Base+0x11770>  // b.hs, b.nlast
   2bcb8:	ldr	x3, [x4, #16]
   2bcbc:	cmp	x6, x3
   2bcc0:	b.cs	2bdb8 <PyInit__decimal@@Base+0x11838>  // b.hs, b.nlast
   2bcc4:	ldr	x3, [x4, #8]
   2bcc8:	lsl	x4, x5, #2
   2bccc:	cmp	x6, x3
   2bcd0:	add	x3, x4, x5
   2bcd4:	cset	x7, cs  // cs = hs, nlast
   2bcd8:	lsl	x3, x3, #2
   2bcdc:	add	x7, x7, #0x1
   2bce0:	sub	x3, x3, x5
   2bce4:	add	x3, x3, x7
   2bce8:	str	x3, [x0, #16]
   2bcec:	b	2b110 <PyInit__decimal@@Base+0x10b90>
   2bcf0:	ldr	x3, [x4, #48]
   2bcf4:	cmp	x6, x3
   2bcf8:	b.cc	2be24 <PyInit__decimal@@Base+0x118a4>  // b.lo, b.ul, b.last
   2bcfc:	ldr	x3, [x4, #64]
   2bd00:	mov	x7, #0x9                   	// #9
   2bd04:	cmp	x6, x3
   2bd08:	b.cs	2bd70 <PyInit__decimal@@Base+0x117f0>  // b.hs, b.nlast
   2bd0c:	ldr	x3, [x4, #56]
   2bd10:	lsl	x4, x5, #2
   2bd14:	cmp	x6, x3
   2bd18:	add	x3, x4, x5
   2bd1c:	cset	x7, cs  // cs = hs, nlast
   2bd20:	lsl	x3, x3, #2
   2bd24:	add	x7, x7, #0x7
   2bd28:	sub	x3, x3, x5
   2bd2c:	add	x3, x3, x7
   2bd30:	str	x3, [x0, #16]
   2bd34:	b	2b110 <PyInit__decimal@@Base+0x10b90>
   2bd38:	ldr	x3, [x4, #112]
   2bd3c:	cmp	x6, x3
   2bd40:	b.cs	2bd8c <PyInit__decimal@@Base+0x1180c>  // b.hs, b.nlast
   2bd44:	ldr	x3, [x4, #88]
   2bd48:	cmp	x6, x3
   2bd4c:	b.cc	2be10 <PyInit__decimal@@Base+0x11890>  // b.lo, b.ul, b.last
   2bd50:	ldr	x3, [x4, #104]
   2bd54:	mov	x7, #0xe                   	// #14
   2bd58:	cmp	x6, x3
   2bd5c:	b.cs	2bd70 <PyInit__decimal@@Base+0x117f0>  // b.hs, b.nlast
   2bd60:	ldr	x3, [x4, #96]
   2bd64:	cmp	x6, x3
   2bd68:	cset	x7, cs  // cs = hs, nlast
   2bd6c:	add	x7, x7, #0xc
   2bd70:	lsl	x4, x5, #2
   2bd74:	add	x3, x4, x5
   2bd78:	lsl	x3, x3, #2
   2bd7c:	sub	x3, x3, x5
   2bd80:	add	x3, x3, x7
   2bd84:	str	x3, [x0, #16]
   2bd88:	b	2b110 <PyInit__decimal@@Base+0x10b90>
   2bd8c:	ldr	x3, [x4, #144]
   2bd90:	cmp	x6, x3
   2bd94:	b.cs	2bde4 <PyInit__decimal@@Base+0x11864>  // b.hs, b.nlast
   2bd98:	ldr	x3, [x4, #128]
   2bd9c:	cmp	x6, x3
   2bda0:	b.cs	2be38 <PyInit__decimal@@Base+0x118b8>  // b.hs, b.nlast
   2bda4:	ldr	x3, [x4, #120]
   2bda8:	cmp	x6, x3
   2bdac:	cset	x7, cs  // cs = hs, nlast
   2bdb0:	add	x7, x7, #0xf
   2bdb4:	b	2bd70 <PyInit__decimal@@Base+0x117f0>
   2bdb8:	ldr	x3, [x4, #24]
   2bdbc:	lsl	x4, x5, #2
   2bdc0:	cmp	x6, x3
   2bdc4:	add	x3, x4, x5
   2bdc8:	cset	x7, cs  // cs = hs, nlast
   2bdcc:	lsl	x3, x3, #2
   2bdd0:	add	x7, x7, #0x3
   2bdd4:	sub	x3, x3, x5
   2bdd8:	add	x3, x3, x7
   2bddc:	str	x3, [x0, #16]
   2bde0:	b	2b110 <PyInit__decimal@@Base+0x10b90>
   2bde4:	ldr	x3, [x4, #152]
   2bde8:	lsl	x4, x5, #2
   2bdec:	cmp	x6, x3
   2bdf0:	add	x3, x4, x5
   2bdf4:	cset	x7, cs  // cs = hs, nlast
   2bdf8:	lsl	x3, x3, #2
   2bdfc:	add	x7, x7, #0x13
   2be00:	sub	x3, x3, x5
   2be04:	add	x3, x3, x7
   2be08:	str	x3, [x0, #16]
   2be0c:	b	2b110 <PyInit__decimal@@Base+0x10b90>
   2be10:	ldr	x3, [x4, #80]
   2be14:	cmp	x6, x3
   2be18:	cset	x7, cs  // cs = hs, nlast
   2be1c:	add	x7, x7, #0xa
   2be20:	b	2bd70 <PyInit__decimal@@Base+0x117f0>
   2be24:	ldr	x3, [x4, #40]
   2be28:	cmp	x6, x3
   2be2c:	cset	x7, cs  // cs = hs, nlast
   2be30:	add	x7, x7, #0x5
   2be34:	b	2bd70 <PyInit__decimal@@Base+0x117f0>
   2be38:	ldr	x3, [x4, #136]
   2be3c:	cmp	x6, x3
   2be40:	cset	x7, cs  // cs = hs, nlast
   2be44:	add	x7, x7, #0x11
   2be48:	b	2bd70 <PyInit__decimal@@Base+0x117f0>
   2be4c:	nop
   2be50:	mov	w1, w1
   2be54:	b	2bc50 <PyInit__decimal@@Base+0x116d0>
   2be58:	b	2bc50 <PyInit__decimal@@Base+0x116d0>
   2be5c:	nop
   2be60:	stp	x29, x30, [sp, #-48]!
   2be64:	mov	x29, sp
   2be68:	stp	x19, x20, [sp, #16]
   2be6c:	mov	x20, x2
   2be70:	mov	x19, x0
   2be74:	mov	x2, x1
   2be78:	mov	w1, #0x0                   	// #0
   2be7c:	str	x21, [sp, #32]
   2be80:	mov	x21, x3
   2be84:	mov	x3, #0x0                   	// #0
   2be88:	bl	26d90 <PyInit__decimal@@Base+0xc810>
   2be8c:	mov	x2, x21
   2be90:	mov	x1, x20
   2be94:	mov	x0, x19
   2be98:	ldp	x19, x20, [sp, #16]
   2be9c:	ldr	x21, [sp, #32]
   2bea0:	ldp	x29, x30, [sp], #48
   2bea4:	b	2b110 <PyInit__decimal@@Base+0x10b90>
   2bea8:	b	2be60 <PyInit__decimal@@Base+0x118e0>
   2beac:	nop
   2beb0:	stp	x29, x30, [sp, #-48]!
   2beb4:	mov	x29, sp
   2beb8:	stp	x19, x20, [sp, #16]
   2bebc:	mov	x20, x2
   2bec0:	mov	x19, x0
   2bec4:	mov	w2, w1
   2bec8:	mov	w1, #0x0                   	// #0
   2becc:	str	x21, [sp, #32]
   2bed0:	mov	x21, x3
   2bed4:	mov	x3, #0x0                   	// #0
   2bed8:	bl	26d90 <PyInit__decimal@@Base+0xc810>
   2bedc:	mov	x2, x21
   2bee0:	mov	x1, x20
   2bee4:	mov	x0, x19
   2bee8:	ldp	x19, x20, [sp, #16]
   2beec:	ldr	x21, [sp, #32]
   2bef0:	ldp	x29, x30, [sp], #48
   2bef4:	b	2b110 <PyInit__decimal@@Base+0x10b90>
   2bef8:	stp	x29, x30, [sp, #-64]!
   2befc:	mov	x29, sp
   2bf00:	stp	x19, x20, [sp, #16]
   2bf04:	add	x20, sp, #0x3c
   2bf08:	mov	x19, x4
   2bf0c:	mov	x4, x20
   2bf10:	stp	x21, x22, [sp, #32]
   2bf14:	mov	x22, x3
   2bf18:	mov	x21, x0
   2bf1c:	str	wzr, [sp, #60]
   2bf20:	bl	291b8 <PyInit__decimal@@Base+0xec38>
   2bf24:	mov	x2, x20
   2bf28:	mov	x1, x22
   2bf2c:	mov	x0, x21
   2bf30:	bl	2b110 <PyInit__decimal@@Base+0x10b90>
   2bf34:	ldr	w0, [x19]
   2bf38:	mov	w2, #0x1041                	// #4161
   2bf3c:	ldr	w1, [sp, #60]
   2bf40:	orr	w0, w0, w1
   2bf44:	str	w0, [x19]
   2bf48:	tst	w1, w2
   2bf4c:	b.ne	2bf60 <PyInit__decimal@@Base+0x119e0>  // b.any
   2bf50:	ldp	x19, x20, [sp, #16]
   2bf54:	ldp	x21, x22, [sp, #32]
   2bf58:	ldp	x29, x30, [sp], #64
   2bf5c:	ret
   2bf60:	mov	x2, x19
   2bf64:	mov	x0, x21
   2bf68:	mov	w1, #0x100                 	// #256
   2bf6c:	bl	28d68 <PyInit__decimal@@Base+0xe7e8>
   2bf70:	ldp	x19, x20, [sp, #16]
   2bf74:	ldp	x21, x22, [sp, #32]
   2bf78:	ldp	x29, x30, [sp], #64
   2bf7c:	ret
   2bf80:	stp	x29, x30, [sp, #-64]!
   2bf84:	mov	x29, sp
   2bf88:	stp	x21, x22, [sp, #32]
   2bf8c:	mov	x21, x2
   2bf90:	ldr	x2, [x1, #24]
   2bf94:	stp	x23, x24, [sp, #48]
   2bf98:	mov	x24, x3
   2bf9c:	ldr	x4, [x1, #40]
   2bfa0:	add	x5, x4, x2, lsl #3
   2bfa4:	ldur	x5, [x5, #-8]
   2bfa8:	cmp	x5, #0x0
   2bfac:	ccmp	x21, #0x0, #0x4, ne  // ne = any
   2bfb0:	b.ne	2bfd8 <PyInit__decimal@@Base+0x11a58>  // b.any
   2bfb4:	mov	x2, x3
   2bfb8:	bl	28fe0 <PyInit__decimal@@Base+0xea60>
   2bfbc:	cmp	w0, #0x0
   2bfc0:	csetm	x23, eq  // eq = none
   2bfc4:	mov	x0, x23
   2bfc8:	ldp	x21, x22, [sp, #32]
   2bfcc:	ldp	x23, x24, [sp, #48]
   2bfd0:	ldp	x29, x30, [sp], #64
   2bfd4:	ret
   2bfd8:	stp	x19, x20, [sp, #16]
   2bfdc:	mov	x19, x1
   2bfe0:	mov	x20, x0
   2bfe4:	ldr	x1, [x1, #16]
   2bfe8:	cmp	x1, x21
   2bfec:	b.le	2c0a8 <PyInit__decimal@@Base+0x11b28>
   2bff0:	mov	x22, #0x9436                	// #37942
   2bff4:	sub	x1, x1, x21
   2bff8:	movk	x22, #0x50d7, lsl #16
   2bffc:	str	x1, [x0, #16]
   2c000:	movk	x22, #0x435e, lsl #32
   2c004:	movk	x22, #0xd79, lsl #48
   2c008:	smulh	x22, x1, x22
   2c00c:	sub	x22, x22, x1, asr #63
   2c010:	add	x3, x22, x22, lsl #2
   2c014:	lsl	x3, x3, #2
   2c018:	sub	x3, x3, x22
   2c01c:	cmp	x1, x3
   2c020:	cinc	x22, x22, ne  // ne = any
   2c024:	cmp	x19, x0
   2c028:	b.eq	2c0cc <PyInit__decimal@@Base+0x11b4c>  // b.none
   2c02c:	adrp	x1, 5f000 <PyInit__decimal@@Base+0x44a80>
   2c030:	ldr	x3, [x0, #32]
   2c034:	ldr	x1, [x1, #1672]
   2c038:	cmp	x1, x22
   2c03c:	csel	x1, x1, x22, ge  // ge = tcont
   2c040:	cmp	x1, x3
   2c044:	b.eq	2c058 <PyInit__decimal@@Base+0x11ad8>  // b.none
   2c048:	ldrb	w5, [x0]
   2c04c:	tbz	w5, #5, 2c120 <PyInit__decimal@@Base+0x11ba0>
   2c050:	cmp	x1, x3
   2c054:	b.gt	2c13c <PyInit__decimal@@Base+0x11bbc>
   2c058:	ldr	x0, [x20, #40]
   2c05c:	mov	x3, x21
   2c060:	mov	x1, x4
   2c064:	bl	1c438 <PyInit__decimal@@Base+0x1eb8>
   2c068:	mov	x23, x0
   2c06c:	ldrb	w2, [x20]
   2c070:	str	x22, [x20, #24]
   2c074:	ldrb	w0, [x19]
   2c078:	and	w2, w2, #0xfffffff0
   2c07c:	and	w0, w0, #0xf
   2c080:	orr	w0, w0, w2
   2c084:	strb	w0, [x20]
   2c088:	ldr	x0, [x19, #8]
   2c08c:	str	x0, [x20, #8]
   2c090:	mov	x0, x23
   2c094:	ldp	x19, x20, [sp, #16]
   2c098:	ldp	x21, x22, [sp, #32]
   2c09c:	ldp	x23, x24, [sp, #48]
   2c0a0:	ldp	x29, x30, [sp], #64
   2c0a4:	ret
   2c0a8:	mov	x1, x2
   2c0ac:	cset	w2, eq  // eq = none
   2c0b0:	mov	x0, x4
   2c0b4:	bl	26fa8 <PyInit__decimal@@Base+0xca28>
   2c0b8:	mov	x23, x0
   2c0bc:	mov	x0, x20
   2c0c0:	bl	28798 <PyInit__decimal@@Base+0xe218>
   2c0c4:	ldrb	w2, [x20]
   2c0c8:	b	2c074 <PyInit__decimal@@Base+0x11af4>
   2c0cc:	ldr	x0, [x19, #40]
   2c0d0:	mov	x1, x4
   2c0d4:	mov	x3, x21
   2c0d8:	bl	1c438 <PyInit__decimal@@Base+0x1eb8>
   2c0dc:	mov	x23, x0
   2c0e0:	adrp	x1, 5f000 <PyInit__decimal@@Base+0x44a80>
   2c0e4:	ldrb	w2, [x19]
   2c0e8:	ldr	x0, [x19, #32]
   2c0ec:	ldr	x1, [x1, #1672]
   2c0f0:	cmp	x1, x22
   2c0f4:	csel	x1, x1, x22, ge  // ge = tcont
   2c0f8:	cmp	x1, x0
   2c0fc:	b.eq	2c070 <PyInit__decimal@@Base+0x11af0>  // b.none
   2c100:	tbz	w2, #5, 2c150 <PyInit__decimal@@Base+0x11bd0>
   2c104:	cmp	x1, x0
   2c108:	b.le	2c070 <PyInit__decimal@@Base+0x11af0>
   2c10c:	mov	x2, x24
   2c110:	mov	x0, x19
   2c114:	bl	25438 <PyInit__decimal@@Base+0xaeb8>
   2c118:	ldrb	w2, [x19]
   2c11c:	b	2c070 <PyInit__decimal@@Base+0x11af0>
   2c120:	mov	x2, x24
   2c124:	bl	25588 <PyInit__decimal@@Base+0xb008>
   2c128:	mov	x23, #0xffffffffffffffff    	// #-1
   2c12c:	cbz	w0, 2c148 <PyInit__decimal@@Base+0x11bc8>
   2c130:	ldr	x2, [x19, #24]
   2c134:	ldr	x4, [x19, #40]
   2c138:	b	2c058 <PyInit__decimal@@Base+0x11ad8>
   2c13c:	mov	x2, x24
   2c140:	bl	25438 <PyInit__decimal@@Base+0xaeb8>
   2c144:	b	2c128 <PyInit__decimal@@Base+0x11ba8>
   2c148:	ldp	x19, x20, [sp, #16]
   2c14c:	b	2bfc4 <PyInit__decimal@@Base+0x11a44>
   2c150:	mov	x2, x24
   2c154:	mov	x0, x19
   2c158:	bl	25588 <PyInit__decimal@@Base+0xb008>
   2c15c:	ldrb	w2, [x19]
   2c160:	b	2c070 <PyInit__decimal@@Base+0x11af0>
   2c164:	nop
   2c168:	stp	x29, x30, [sp, #-64]!
   2c16c:	mov	x29, sp
   2c170:	stp	x21, x22, [sp, #32]
   2c174:	mov	x21, x4
   2c178:	ldrb	w6, [x1]
   2c17c:	tst	w6, #0xe
   2c180:	b.ne	2c24c <PyInit__decimal@@Base+0x11ccc>  // b.any
   2c184:	mov	x22, x3
   2c188:	stp	x19, x20, [sp, #16]
   2c18c:	mov	x19, x2
   2c190:	ldr	x2, [x1, #24]
   2c194:	ldr	x3, [x1, #40]
   2c198:	add	x2, x3, x2, lsl #3
   2c19c:	ldur	x2, [x2, #-8]
   2c1a0:	cbz	x2, 2c234 <PyInit__decimal@@Base+0x11cb4>
   2c1a4:	ldr	x3, [x1, #8]
   2c1a8:	mov	x20, x0
   2c1ac:	subs	x2, x3, x19
   2c1b0:	b.mi	2c274 <PyInit__decimal@@Base+0x11cf4>  // b.first
   2c1b4:	ldr	x3, [x1, #16]
   2c1b8:	mov	x4, #0xa7640000            	// #2808348672
   2c1bc:	movk	x4, #0xb6b3, lsl #32
   2c1c0:	add	x3, x2, x3
   2c1c4:	movk	x4, #0xde0, lsl #48
   2c1c8:	cmp	x3, x4
   2c1cc:	b.gt	2c25c <PyInit__decimal@@Base+0x11cdc>
   2c1d0:	mov	x3, x21
   2c1d4:	bl	2a2e0 <PyInit__decimal@@Base+0xfd60>
   2c1d8:	cbz	w0, 2c224 <PyInit__decimal@@Base+0x11ca4>
   2c1dc:	ldrb	w0, [x20]
   2c1e0:	str	x19, [x20, #8]
   2c1e4:	tst	w0, #0xe
   2c1e8:	b.ne	2c224 <PyInit__decimal@@Base+0x11ca4>  // b.any
   2c1ec:	ldr	x0, [x20, #24]
   2c1f0:	ldr	x1, [x20, #40]
   2c1f4:	add	x0, x1, x0, lsl #3
   2c1f8:	ldur	x0, [x0, #-8]
   2c1fc:	cbz	x0, 2c224 <PyInit__decimal@@Base+0x11ca4>
   2c200:	ldp	x0, x2, [x20, #8]
   2c204:	ldr	x1, [x22, #16]
   2c208:	add	x0, x0, x2
   2c20c:	sub	x0, x0, #0x1
   2c210:	cmp	x0, x1
   2c214:	b.ge	2c224 <PyInit__decimal@@Base+0x11ca4>  // b.tcont
   2c218:	ldr	w0, [x21]
   2c21c:	orr	w0, w0, #0x2000
   2c220:	str	w0, [x21]
   2c224:	ldp	x19, x20, [sp, #16]
   2c228:	ldp	x21, x22, [sp, #32]
   2c22c:	ldp	x29, x30, [sp], #64
   2c230:	ret
   2c234:	mov	x3, x19
   2c238:	and	w1, w6, #0x1
   2c23c:	ldp	x19, x20, [sp, #16]
   2c240:	ldp	x21, x22, [sp, #32]
   2c244:	ldp	x29, x30, [sp], #64
   2c248:	b	26d90 <PyInit__decimal@@Base+0xc810>
   2c24c:	ldp	x21, x22, [sp, #32]
   2c250:	mov	x2, x4
   2c254:	ldp	x29, x30, [sp], #64
   2c258:	b	28fe0 <PyInit__decimal@@Base+0xea60>
   2c25c:	mov	x2, x21
   2c260:	mov	w1, #0x100                 	// #256
   2c264:	ldp	x19, x20, [sp, #16]
   2c268:	ldp	x21, x22, [sp, #32]
   2c26c:	ldp	x29, x30, [sp], #64
   2c270:	b	28d68 <PyInit__decimal@@Base+0xe7e8>
   2c274:	sub	x2, x19, x3
   2c278:	mov	x3, x4
   2c27c:	str	x23, [sp, #48]
   2c280:	bl	2bf80 <PyInit__decimal@@Base+0x11a00>
   2c284:	mov	x23, x0
   2c288:	cmn	x0, #0x1
   2c28c:	b.eq	2c458 <PyInit__decimal@@Base+0x11ed8>  // b.none
   2c290:	ldr	w0, [x22, #36]
   2c294:	str	x19, [x20, #8]
   2c298:	cmp	w0, #0x4
   2c29c:	b.eq	2c4a4 <PyInit__decimal@@Base+0x11f24>  // b.none
   2c2a0:	b.gt	2c2d0 <PyInit__decimal@@Base+0x11d50>
   2c2a4:	cmp	w0, #0x2
   2c2a8:	b.eq	2c3f4 <PyInit__decimal@@Base+0x11e74>  // b.none
   2c2ac:	cmp	w0, #0x3
   2c2b0:	b.ne	2c3e0 <PyInit__decimal@@Base+0x11e60>  // b.any
   2c2b4:	ldrb	w0, [x20]
   2c2b8:	cbz	x23, 2c444 <PyInit__decimal@@Base+0x11ec4>
   2c2bc:	and	w0, w0, #0x1
   2c2c0:	cbnz	w0, 2c328 <PyInit__decimal@@Base+0x11da8>
   2c2c4:	ldrb	w0, [x20]
   2c2c8:	ldr	w1, [x21]
   2c2cc:	b	2c42c <PyInit__decimal@@Base+0x11eac>
   2c2d0:	cmp	w0, #0x6
   2c2d4:	b.eq	2c408 <PyInit__decimal@@Base+0x11e88>  // b.none
   2c2d8:	cmp	w0, #0x7
   2c2dc:	b.ne	2c314 <PyInit__decimal@@Base+0x11d94>  // b.any
   2c2e0:	ldr	x0, [x20, #40]
   2c2e4:	ldr	x2, [x0]
   2c2e8:	cbz	x23, 2c440 <PyInit__decimal@@Base+0x11ec0>
   2c2ec:	mov	x1, #0xcccccccccccccccc    	// #-3689348814741910324
   2c2f0:	movk	x1, #0xcccd
   2c2f4:	umulh	x1, x2, x1
   2c2f8:	lsr	x1, x1, #3
   2c2fc:	add	x1, x1, x1, lsl #2
   2c300:	sub	x1, x2, x1, lsl #1
   2c304:	cmp	w1, #0x0
   2c308:	ccmp	w1, #0x5, #0x4, ne  // ne = any
   2c30c:	b.eq	2c32c <PyInit__decimal@@Base+0x11dac>  // b.none
   2c310:	b	2c2c4 <PyInit__decimal@@Base+0x11d44>
   2c314:	cmp	x23, #0x5
   2c318:	cset	w1, hi  // hi = pmore
   2c31c:	cmp	w0, #0x5
   2c320:	b.ne	2c418 <PyInit__decimal@@Base+0x11e98>  // b.any
   2c324:	cbz	w1, 2c418 <PyInit__decimal@@Base+0x11e98>
   2c328:	ldr	x0, [x20, #40]
   2c32c:	ldr	x1, [x20, #24]
   2c330:	bl	1b3b8 <PyInit__decimal@@Base+0xe38>
   2c334:	cbz	x0, 2c4b4 <PyInit__decimal@@Base+0x11f34>
   2c338:	ldp	x2, x3, [x20, #24]
   2c33c:	adrp	x0, 5f000 <PyInit__decimal@@Base+0x44a80>
   2c340:	ldr	x1, [x0, #1672]
   2c344:	add	x0, x2, #0x1
   2c348:	cmp	x0, x1
   2c34c:	csel	x1, x0, x1, ge  // ge = tcont
   2c350:	cmp	x1, x3
   2c354:	b.eq	2c368 <PyInit__decimal@@Base+0x11de8>  // b.none
   2c358:	ldrb	w0, [x20]
   2c35c:	tbz	w0, #5, 2c520 <PyInit__decimal@@Base+0x11fa0>
   2c360:	cmp	x1, x3
   2c364:	b.gt	2c538 <PyInit__decimal@@Base+0x11fb8>
   2c368:	ldr	x1, [x20, #40]
   2c36c:	mov	x0, #0x1                   	// #1
   2c370:	str	x0, [x1, x2, lsl #3]
   2c374:	ldr	x2, [x20, #24]
   2c378:	add	x0, x2, x0
   2c37c:	str	x0, [x20, #24]
   2c380:	add	x1, x1, x0, lsl #3
   2c384:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27a80>
   2c388:	add	x0, x0, #0x2d0
   2c38c:	ldur	x1, [x1, #-8]
   2c390:	ldr	x3, [x0, #72]
   2c394:	cmp	x1, x3
   2c398:	b.cs	2c468 <PyInit__decimal@@Base+0x11ee8>  // b.hs, b.nlast
   2c39c:	ldr	x3, [x0, #32]
   2c3a0:	cmp	x1, x3
   2c3a4:	b.cs	2c4c4 <PyInit__decimal@@Base+0x11f44>  // b.hs, b.nlast
   2c3a8:	ldr	x3, [x0, #16]
   2c3ac:	cmp	x1, x3
   2c3b0:	b.cs	2c55c <PyInit__decimal@@Base+0x11fdc>  // b.hs, b.nlast
   2c3b4:	ldr	x0, [x0, #8]
   2c3b8:	cmp	x1, x0
   2c3bc:	cset	x3, cs  // cs = hs, nlast
   2c3c0:	add	x3, x3, #0x1
   2c3c4:	nop
   2c3c8:	add	x0, x2, x2, lsl #2
   2c3cc:	lsl	x0, x0, #2
   2c3d0:	sub	x0, x0, x2
   2c3d4:	add	x0, x0, x3
   2c3d8:	str	x0, [x20, #16]
   2c3dc:	b	2c418 <PyInit__decimal@@Base+0x11e98>
   2c3e0:	cmp	x23, #0x0
   2c3e4:	cset	w1, ne  // ne = any
   2c3e8:	cbnz	w0, 2c418 <PyInit__decimal@@Base+0x11e98>
   2c3ec:	cbz	w1, 2c418 <PyInit__decimal@@Base+0x11e98>
   2c3f0:	b	2c328 <PyInit__decimal@@Base+0x11da8>
   2c3f4:	ldrb	w0, [x20]
   2c3f8:	cbz	x23, 2c444 <PyInit__decimal@@Base+0x11ec4>
   2c3fc:	mvn	w0, w0
   2c400:	and	w0, w0, #0x1
   2c404:	b	2c2c0 <PyInit__decimal@@Base+0x11d40>
   2c408:	cmp	x23, #0x5
   2c40c:	b.hi	2c328 <PyInit__decimal@@Base+0x11da8>  // b.pmore
   2c410:	b.eq	2c598 <PyInit__decimal@@Base+0x12018>  // b.none
   2c414:	nop
   2c418:	ldr	w1, [x21]
   2c41c:	orr	w0, w1, #0x1000
   2c420:	str	w0, [x21]
   2c424:	ldrb	w0, [x20]
   2c428:	cbz	x23, 2c460 <PyInit__decimal@@Base+0x11ee0>
   2c42c:	mov	w2, #0x1040                	// #4160
   2c430:	orr	w1, w1, w2
   2c434:	ldr	x23, [sp, #48]
   2c438:	str	w1, [x21]
   2c43c:	b	2c1e4 <PyInit__decimal@@Base+0x11c64>
   2c440:	ldrb	w0, [x20]
   2c444:	ldr	w1, [x21]
   2c448:	ldr	x23, [sp, #48]
   2c44c:	orr	w1, w1, #0x1000
   2c450:	str	w1, [x21]
   2c454:	b	2c1e4 <PyInit__decimal@@Base+0x11c64>
   2c458:	ldr	x23, [sp, #48]
   2c45c:	b	2c224 <PyInit__decimal@@Base+0x11ca4>
   2c460:	ldr	x23, [sp, #48]
   2c464:	b	2c1e4 <PyInit__decimal@@Base+0x11c64>
   2c468:	ldr	x3, [x0, #112]
   2c46c:	cmp	x1, x3
   2c470:	b.cs	2c4f4 <PyInit__decimal@@Base+0x11f74>  // b.hs, b.nlast
   2c474:	ldr	x3, [x0, #88]
   2c478:	cmp	x1, x3
   2c47c:	b.cc	2c570 <PyInit__decimal@@Base+0x11ff0>  // b.lo, b.ul, b.last
   2c480:	ldr	x4, [x0, #104]
   2c484:	mov	x3, #0xe                   	// #14
   2c488:	cmp	x1, x4
   2c48c:	b.cs	2c3c8 <PyInit__decimal@@Base+0x11e48>  // b.hs, b.nlast
   2c490:	ldr	x0, [x0, #96]
   2c494:	cmp	x1, x0
   2c498:	cset	x3, cs  // cs = hs, nlast
   2c49c:	add	x3, x3, #0xc
   2c4a0:	b	2c3c8 <PyInit__decimal@@Base+0x11e48>
   2c4a4:	cmp	x23, #0x4
   2c4a8:	cset	w1, hi  // hi = pmore
   2c4ac:	cbz	w1, 2c418 <PyInit__decimal@@Base+0x11e98>
   2c4b0:	b	2c328 <PyInit__decimal@@Base+0x11da8>
   2c4b4:	ldr	x0, [x20, #24]
   2c4b8:	ldr	x1, [x20, #40]
   2c4bc:	sub	x2, x0, #0x1
   2c4c0:	b	2c380 <PyInit__decimal@@Base+0x11e00>
   2c4c4:	ldr	x3, [x0, #48]
   2c4c8:	cmp	x1, x3
   2c4cc:	b.cc	2c584 <PyInit__decimal@@Base+0x12004>  // b.lo, b.ul, b.last
   2c4d0:	ldr	x4, [x0, #64]
   2c4d4:	mov	x3, #0x9                   	// #9
   2c4d8:	cmp	x1, x4
   2c4dc:	b.cs	2c3c8 <PyInit__decimal@@Base+0x11e48>  // b.hs, b.nlast
   2c4e0:	ldr	x0, [x0, #56]
   2c4e4:	cmp	x1, x0
   2c4e8:	cset	x3, cs  // cs = hs, nlast
   2c4ec:	add	x3, x3, #0x7
   2c4f0:	b	2c3c8 <PyInit__decimal@@Base+0x11e48>
   2c4f4:	ldr	x3, [x0, #144]
   2c4f8:	cmp	x1, x3
   2c4fc:	b.cs	2c548 <PyInit__decimal@@Base+0x11fc8>  // b.hs, b.nlast
   2c500:	ldr	x3, [x0, #128]
   2c504:	cmp	x1, x3
   2c508:	b.cs	2c5a8 <PyInit__decimal@@Base+0x12028>  // b.hs, b.nlast
   2c50c:	ldr	x0, [x0, #120]
   2c510:	cmp	x1, x0
   2c514:	cset	x3, cs  // cs = hs, nlast
   2c518:	add	x3, x3, #0xf
   2c51c:	b	2c3c8 <PyInit__decimal@@Base+0x11e48>
   2c520:	mov	x2, x21
   2c524:	mov	x0, x20
   2c528:	bl	25588 <PyInit__decimal@@Base+0xb008>
   2c52c:	cbz	w0, 2c418 <PyInit__decimal@@Base+0x11e98>
   2c530:	ldr	x2, [x20, #24]
   2c534:	b	2c368 <PyInit__decimal@@Base+0x11de8>
   2c538:	mov	x2, x21
   2c53c:	mov	x0, x20
   2c540:	bl	25438 <PyInit__decimal@@Base+0xaeb8>
   2c544:	b	2c52c <PyInit__decimal@@Base+0x11fac>
   2c548:	ldr	x0, [x0, #152]
   2c54c:	cmp	x1, x0
   2c550:	cset	x3, cs  // cs = hs, nlast
   2c554:	add	x3, x3, #0x13
   2c558:	b	2c3c8 <PyInit__decimal@@Base+0x11e48>
   2c55c:	ldr	x0, [x0, #24]
   2c560:	cmp	x1, x0
   2c564:	cset	x3, cs  // cs = hs, nlast
   2c568:	add	x3, x3, #0x3
   2c56c:	b	2c3c8 <PyInit__decimal@@Base+0x11e48>
   2c570:	ldr	x0, [x0, #80]
   2c574:	cmp	x1, x0
   2c578:	cset	x3, cs  // cs = hs, nlast
   2c57c:	add	x3, x3, #0xa
   2c580:	b	2c3c8 <PyInit__decimal@@Base+0x11e48>
   2c584:	ldr	x0, [x0, #40]
   2c588:	cmp	x1, x0
   2c58c:	cset	x3, cs  // cs = hs, nlast
   2c590:	add	x3, x3, #0x5
   2c594:	b	2c3c8 <PyInit__decimal@@Base+0x11e48>
   2c598:	ldr	x0, [x20, #40]
   2c59c:	ldr	x0, [x0]
   2c5a0:	and	w0, w0, #0x1
   2c5a4:	b	2c2c0 <PyInit__decimal@@Base+0x11d40>
   2c5a8:	ldr	x0, [x0, #136]
   2c5ac:	cmp	x1, x0
   2c5b0:	cset	x3, cs  // cs = hs, nlast
   2c5b4:	add	x3, x3, #0x11
   2c5b8:	b	2c3c8 <PyInit__decimal@@Base+0x11e48>
   2c5bc:	nop
   2c5c0:	stp	x29, x30, [sp, #-64]!
   2c5c4:	mov	x29, sp
   2c5c8:	stp	x19, x20, [sp, #16]
   2c5cc:	mov	x20, x1
   2c5d0:	mov	x19, x2
   2c5d4:	stp	x21, x22, [sp, #32]
   2c5d8:	mov	x22, x3
   2c5dc:	mov	x21, x4
   2c5e0:	ldrb	w1, [x2]
   2c5e4:	tst	w1, #0xe
   2c5e8:	b.ne	2c650 <PyInit__decimal@@Base+0x120d0>  // b.any
   2c5ec:	ldr	x2, [x2, #8]
   2c5f0:	tbz	x2, #63, 2c668 <PyInit__decimal@@Base+0x120e8>
   2c5f4:	ldr	x3, [x19, #40]
   2c5f8:	str	x23, [sp, #48]
   2c5fc:	mov	w23, w0
   2c600:	ldr	x0, [x19, #24]
   2c604:	add	x0, x3, x0, lsl #3
   2c608:	ldur	x0, [x0, #-8]
   2c60c:	cbz	x0, 2c72c <PyInit__decimal@@Base+0x121ac>
   2c610:	mov	x1, x19
   2c614:	neg	x2, x2
   2c618:	mov	x3, x4
   2c61c:	mov	x0, x20
   2c620:	bl	2bf80 <PyInit__decimal@@Base+0x11a00>
   2c624:	mov	x19, x0
   2c628:	cmn	x0, #0x1
   2c62c:	b.eq	2c63c <PyInit__decimal@@Base+0x120bc>  // b.none
   2c630:	str	xzr, [x20, #8]
   2c634:	cmp	w23, #0x2
   2c638:	b.ne	2c684 <PyInit__decimal@@Base+0x12104>  // b.any
   2c63c:	ldr	x23, [sp, #48]
   2c640:	ldp	x19, x20, [sp, #16]
   2c644:	ldp	x21, x22, [sp, #32]
   2c648:	ldp	x29, x30, [sp], #64
   2c64c:	ret
   2c650:	mov	x2, x3
   2c654:	mov	x1, x19
   2c658:	mov	x3, x4
   2c65c:	mov	x0, x20
   2c660:	bl	29098 <PyInit__decimal@@Base+0xeb18>
   2c664:	cbnz	w0, 2c640 <PyInit__decimal@@Base+0x120c0>
   2c668:	mov	x2, x21
   2c66c:	mov	x1, x19
   2c670:	mov	x0, x20
   2c674:	ldp	x19, x20, [sp, #16]
   2c678:	ldp	x21, x22, [sp, #32]
   2c67c:	ldp	x29, x30, [sp], #64
   2c680:	b	28fe0 <PyInit__decimal@@Base+0xea60>
   2c684:	ldr	w0, [x22, #36]
   2c688:	cmp	w0, #0x4
   2c68c:	b.eq	2c8a8 <PyInit__decimal@@Base+0x12328>  // b.none
   2c690:	b.gt	2c6e0 <PyInit__decimal@@Base+0x12160>
   2c694:	cmp	w0, #0x2
   2c698:	b.eq	2c77c <PyInit__decimal@@Base+0x121fc>  // b.none
   2c69c:	cmp	w0, #0x3
   2c6a0:	b.ne	2c768 <PyInit__decimal@@Base+0x121e8>  // b.any
   2c6a4:	cbz	x19, 2c6b8 <PyInit__decimal@@Base+0x12138>
   2c6a8:	ldrb	w1, [x20]
   2c6ac:	and	w1, w1, #0x1
   2c6b0:	cbnz	w1, 2c7b0 <PyInit__decimal@@Base+0x12230>
   2c6b4:	nop
   2c6b8:	cbnz	w23, 2c63c <PyInit__decimal@@Base+0x120bc>
   2c6bc:	ldr	w0, [x21]
   2c6c0:	orr	w1, w0, #0x1000
   2c6c4:	str	w1, [x21]
   2c6c8:	cbz	x19, 2c63c <PyInit__decimal@@Base+0x120bc>
   2c6cc:	mov	w1, #0x1040                	// #4160
   2c6d0:	orr	w0, w0, w1
   2c6d4:	ldr	x23, [sp, #48]
   2c6d8:	str	w0, [x21]
   2c6dc:	b	2c640 <PyInit__decimal@@Base+0x120c0>
   2c6e0:	cmp	w0, #0x6
   2c6e4:	b.eq	2c794 <PyInit__decimal@@Base+0x12214>  // b.none
   2c6e8:	cmp	w0, #0x7
   2c6ec:	b.ne	2c750 <PyInit__decimal@@Base+0x121d0>  // b.any
   2c6f0:	cbz	x19, 2c6b8 <PyInit__decimal@@Base+0x12138>
   2c6f4:	ldr	x0, [x20, #40]
   2c6f8:	mov	x1, #0xcccccccccccccccc    	// #-3689348814741910324
   2c6fc:	movk	x1, #0xcccd
   2c700:	ldr	x2, [x0]
   2c704:	umulh	x1, x2, x1
   2c708:	lsr	x1, x1, #3
   2c70c:	add	x1, x1, x1, lsl #2
   2c710:	sub	x1, x2, x1, lsl #1
   2c714:	cmp	w1, #0x0
   2c718:	ccmp	w1, #0x5, #0x4, ne  // ne = any
   2c71c:	b.eq	2c7b4 <PyInit__decimal@@Base+0x12234>  // b.none
   2c720:	cbnz	w23, 2c63c <PyInit__decimal@@Base+0x120bc>
   2c724:	ldr	w0, [x21]
   2c728:	b	2c6cc <PyInit__decimal@@Base+0x1214c>
   2c72c:	mov	x0, x20
   2c730:	and	w1, w1, #0x1
   2c734:	ldp	x19, x20, [sp, #16]
   2c738:	mov	x3, #0x0                   	// #0
   2c73c:	ldp	x21, x22, [sp, #32]
   2c740:	mov	x2, #0x0                   	// #0
   2c744:	ldr	x23, [sp, #48]
   2c748:	ldp	x29, x30, [sp], #64
   2c74c:	b	26d90 <PyInit__decimal@@Base+0xc810>
   2c750:	cmp	x19, #0x5
   2c754:	cset	w1, hi  // hi = pmore
   2c758:	cmp	w0, #0x5
   2c75c:	b.ne	2c6b8 <PyInit__decimal@@Base+0x12138>  // b.any
   2c760:	cbz	w1, 2c6b8 <PyInit__decimal@@Base+0x12138>
   2c764:	b	2c7b0 <PyInit__decimal@@Base+0x12230>
   2c768:	cmp	x19, #0x0
   2c76c:	cset	w1, ne  // ne = any
   2c770:	cbnz	w0, 2c6b8 <PyInit__decimal@@Base+0x12138>
   2c774:	cbz	w1, 2c6b8 <PyInit__decimal@@Base+0x12138>
   2c778:	b	2c7b0 <PyInit__decimal@@Base+0x12230>
   2c77c:	cbz	x19, 2c6b8 <PyInit__decimal@@Base+0x12138>
   2c780:	ldrb	w1, [x20]
   2c784:	mvn	w1, w1
   2c788:	and	w1, w1, #0x1
   2c78c:	cbz	w1, 2c6b8 <PyInit__decimal@@Base+0x12138>
   2c790:	b	2c7b0 <PyInit__decimal@@Base+0x12230>
   2c794:	cmp	x19, #0x5
   2c798:	b.hi	2c7b0 <PyInit__decimal@@Base+0x12230>  // b.pmore
   2c79c:	b.ne	2c6b8 <PyInit__decimal@@Base+0x12138>  // b.any
   2c7a0:	ldr	x0, [x20, #40]
   2c7a4:	ldr	x1, [x0]
   2c7a8:	and	w1, w1, #0x1
   2c7ac:	cbz	w1, 2c6b8 <PyInit__decimal@@Base+0x12138>
   2c7b0:	ldr	x0, [x20, #40]
   2c7b4:	ldr	x1, [x20, #24]
   2c7b8:	bl	1b3b8 <PyInit__decimal@@Base+0xe38>
   2c7bc:	cbz	x0, 2c8b8 <PyInit__decimal@@Base+0x12338>
   2c7c0:	ldp	x2, x3, [x20, #24]
   2c7c4:	adrp	x0, 5f000 <PyInit__decimal@@Base+0x44a80>
   2c7c8:	ldr	x1, [x0, #1672]
   2c7cc:	add	x0, x2, #0x1
   2c7d0:	cmp	x0, x1
   2c7d4:	csel	x1, x0, x1, ge  // ge = tcont
   2c7d8:	cmp	x1, x3
   2c7dc:	b.eq	2c7f0 <PyInit__decimal@@Base+0x12270>  // b.none
   2c7e0:	ldrb	w0, [x20]
   2c7e4:	tbz	w0, #5, 2c924 <PyInit__decimal@@Base+0x123a4>
   2c7e8:	cmp	x1, x3
   2c7ec:	b.gt	2c93c <PyInit__decimal@@Base+0x123bc>
   2c7f0:	ldr	x1, [x20, #40]
   2c7f4:	mov	x0, #0x1                   	// #1
   2c7f8:	str	x0, [x1, x2, lsl #3]
   2c7fc:	ldr	x2, [x20, #24]
   2c800:	add	x0, x2, x0
   2c804:	str	x0, [x20, #24]
   2c808:	add	x1, x1, x0, lsl #3
   2c80c:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27a80>
   2c810:	add	x0, x0, #0x2d0
   2c814:	ldur	x1, [x1, #-8]
   2c818:	ldr	x3, [x0, #72]
   2c81c:	cmp	x1, x3
   2c820:	b.cs	2c86c <PyInit__decimal@@Base+0x122ec>  // b.hs, b.nlast
   2c824:	ldr	x3, [x0, #32]
   2c828:	cmp	x1, x3
   2c82c:	b.cs	2c8c8 <PyInit__decimal@@Base+0x12348>  // b.hs, b.nlast
   2c830:	ldr	x3, [x0, #16]
   2c834:	cmp	x1, x3
   2c838:	b.cs	2c94c <PyInit__decimal@@Base+0x123cc>  // b.hs, b.nlast
   2c83c:	ldr	x0, [x0, #8]
   2c840:	cmp	x1, x0
   2c844:	cset	x3, cs  // cs = hs, nlast
   2c848:	add	x3, x3, #0x1
   2c84c:	nop
   2c850:	add	x0, x2, x2, lsl #2
   2c854:	lsl	x0, x0, #2
   2c858:	sub	x0, x0, x2
   2c85c:	add	x0, x0, x3
   2c860:	str	x0, [x20, #16]
   2c864:	cbz	w23, 2c6bc <PyInit__decimal@@Base+0x1213c>
   2c868:	b	2c63c <PyInit__decimal@@Base+0x120bc>
   2c86c:	ldr	x3, [x0, #112]
   2c870:	cmp	x1, x3
   2c874:	b.cs	2c8f8 <PyInit__decimal@@Base+0x12378>  // b.hs, b.nlast
   2c878:	ldr	x3, [x0, #88]
   2c87c:	cmp	x1, x3
   2c880:	b.cc	2c974 <PyInit__decimal@@Base+0x123f4>  // b.lo, b.ul, b.last
   2c884:	ldr	x4, [x0, #104]
   2c888:	mov	x3, #0xe                   	// #14
   2c88c:	cmp	x1, x4
   2c890:	b.cs	2c850 <PyInit__decimal@@Base+0x122d0>  // b.hs, b.nlast
   2c894:	ldr	x0, [x0, #96]
   2c898:	cmp	x1, x0
   2c89c:	cset	x3, cs  // cs = hs, nlast
   2c8a0:	add	x3, x3, #0xc
   2c8a4:	b	2c850 <PyInit__decimal@@Base+0x122d0>
   2c8a8:	cmp	x19, #0x4
   2c8ac:	cset	w1, hi  // hi = pmore
   2c8b0:	cbz	w1, 2c6b8 <PyInit__decimal@@Base+0x12138>
   2c8b4:	b	2c7b0 <PyInit__decimal@@Base+0x12230>
   2c8b8:	ldr	x0, [x20, #24]
   2c8bc:	ldr	x1, [x20, #40]
   2c8c0:	sub	x2, x0, #0x1
   2c8c4:	b	2c808 <PyInit__decimal@@Base+0x12288>
   2c8c8:	ldr	x3, [x0, #48]
   2c8cc:	cmp	x1, x3
   2c8d0:	b.cc	2c988 <PyInit__decimal@@Base+0x12408>  // b.lo, b.ul, b.last
   2c8d4:	ldr	x4, [x0, #64]
   2c8d8:	mov	x3, #0x9                   	// #9
   2c8dc:	cmp	x1, x4
   2c8e0:	b.cs	2c850 <PyInit__decimal@@Base+0x122d0>  // b.hs, b.nlast
   2c8e4:	ldr	x0, [x0, #56]
   2c8e8:	cmp	x1, x0
   2c8ec:	cset	x3, cs  // cs = hs, nlast
   2c8f0:	add	x3, x3, #0x7
   2c8f4:	b	2c850 <PyInit__decimal@@Base+0x122d0>
   2c8f8:	ldr	x3, [x0, #144]
   2c8fc:	cmp	x1, x3
   2c900:	b.cs	2c960 <PyInit__decimal@@Base+0x123e0>  // b.hs, b.nlast
   2c904:	ldr	x3, [x0, #128]
   2c908:	cmp	x1, x3
   2c90c:	b.cs	2c99c <PyInit__decimal@@Base+0x1241c>  // b.hs, b.nlast
   2c910:	ldr	x0, [x0, #120]
   2c914:	cmp	x1, x0
   2c918:	cset	x3, cs  // cs = hs, nlast
   2c91c:	add	x3, x3, #0xf
   2c920:	b	2c850 <PyInit__decimal@@Base+0x122d0>
   2c924:	mov	x2, x21
   2c928:	mov	x0, x20
   2c92c:	bl	25588 <PyInit__decimal@@Base+0xb008>
   2c930:	cbz	w0, 2c6b8 <PyInit__decimal@@Base+0x12138>
   2c934:	ldr	x2, [x20, #24]
   2c938:	b	2c7f0 <PyInit__decimal@@Base+0x12270>
   2c93c:	mov	x2, x21
   2c940:	mov	x0, x20
   2c944:	bl	25438 <PyInit__decimal@@Base+0xaeb8>
   2c948:	b	2c930 <PyInit__decimal@@Base+0x123b0>
   2c94c:	ldr	x0, [x0, #24]
   2c950:	cmp	x1, x0
   2c954:	cset	x3, cs  // cs = hs, nlast
   2c958:	add	x3, x3, #0x3
   2c95c:	b	2c850 <PyInit__decimal@@Base+0x122d0>
   2c960:	ldr	x0, [x0, #152]
   2c964:	cmp	x1, x0
   2c968:	cset	x3, cs  // cs = hs, nlast
   2c96c:	add	x3, x3, #0x13
   2c970:	b	2c850 <PyInit__decimal@@Base+0x122d0>
   2c974:	ldr	x0, [x0, #80]
   2c978:	cmp	x1, x0
   2c97c:	cset	x3, cs  // cs = hs, nlast
   2c980:	add	x3, x3, #0xa
   2c984:	b	2c850 <PyInit__decimal@@Base+0x122d0>
   2c988:	ldr	x0, [x0, #40]
   2c98c:	cmp	x1, x0
   2c990:	cset	x3, cs  // cs = hs, nlast
   2c994:	add	x3, x3, #0x5
   2c998:	b	2c850 <PyInit__decimal@@Base+0x122d0>
   2c99c:	ldr	x0, [x0, #136]
   2c9a0:	cmp	x1, x0
   2c9a4:	cset	x3, cs  // cs = hs, nlast
   2c9a8:	add	x3, x3, #0x11
   2c9ac:	b	2c850 <PyInit__decimal@@Base+0x122d0>
   2c9b0:	stp	x29, x30, [sp, #-80]!
   2c9b4:	mov	x6, x2
   2c9b8:	mov	x2, x4
   2c9bc:	mov	x29, sp
   2c9c0:	stp	x19, x20, [sp, #16]
   2c9c4:	mov	x20, x0
   2c9c8:	ldrb	w5, [x1]
   2c9cc:	tst	w5, #0xe
   2c9d0:	b.ne	2c9ec <PyInit__decimal@@Base+0x1246c>  // b.any
   2c9d4:	ldrb	w7, [x6]
   2c9d8:	orr	w5, w7, w5
   2c9dc:	and	w7, w7, #0xe
   2c9e0:	and	w5, w5, #0x1
   2c9e4:	orr	w5, w5, w7
   2c9e8:	cbz	w5, 2ca00 <PyInit__decimal@@Base+0x12480>
   2c9ec:	mov	x0, x20
   2c9f0:	mov	w1, #0x100                 	// #256
   2c9f4:	ldp	x19, x20, [sp, #16]
   2c9f8:	ldp	x29, x30, [sp], #80
   2c9fc:	b	28d68 <PyInit__decimal@@Base+0xe7e8>
   2ca00:	ldr	x4, [x1, #8]
   2ca04:	cbnz	x4, 2c9ec <PyInit__decimal@@Base+0x1246c>
   2ca08:	stp	x21, x22, [sp, #32]
   2ca0c:	ldr	x21, [x6, #8]
   2ca10:	cbnz	x21, 2cc8c <PyInit__decimal@@Base+0x1270c>
   2ca14:	ldr	x5, [x1, #16]
   2ca18:	adrp	x22, 5f000 <PyInit__decimal@@Base+0x44a80>
   2ca1c:	ldr	x7, [x6, #16]
   2ca20:	ldr	x4, [x22, #1672]
   2ca24:	cmp	x7, x5
   2ca28:	ldr	x5, [x0, #32]
   2ca2c:	str	x23, [sp, #48]
   2ca30:	csel	x23, x1, x6, le
   2ca34:	csel	x19, x6, x1, le
   2ca38:	ldr	x1, [x23, #24]
   2ca3c:	cmp	x1, x4
   2ca40:	csel	x1, x1, x4, ge  // ge = tcont
   2ca44:	cmp	x1, x5
   2ca48:	b.eq	2ca5c <PyInit__decimal@@Base+0x124dc>  // b.none
   2ca4c:	ldrb	w4, [x0]
   2ca50:	tbz	w4, #5, 2ccb8 <PyInit__decimal@@Base+0x12738>
   2ca54:	cmp	x1, x5
   2ca58:	b.gt	2cc94 <PyInit__decimal@@Base+0x12714>
   2ca5c:	ldr	x0, [x19, #24]
   2ca60:	mov	x10, #0xcccccccccccccccc    	// #-3689348814741910324
   2ca64:	adrp	x12, 42000 <PyInit__decimal@@Base+0x27a80>
   2ca68:	movk	x10, #0xcccd
   2ca6c:	sub	x0, x0, #0x1
   2ca70:	cmp	x0, #0x0
   2ca74:	ldr	x14, [x19, #40]
   2ca78:	ldr	x13, [x23, #40]
   2ca7c:	b.le	2ccc8 <PyInit__decimal@@Base+0x12748>
   2ca80:	add	x6, x12, #0x2d0
   2ca84:	lsl	x15, x21, #3
   2ca88:	add	x11, x6, #0x98
   2ca8c:	mov	x4, #0x0                   	// #0
   2ca90:	ldr	x8, [x14, x21, lsl #3]
   2ca94:	ldr	x7, [x13, x21, lsl #3]
   2ca98:	b	2cab8 <PyInit__decimal@@Base+0x12538>
   2ca9c:	tst	x5, x1
   2caa0:	b.eq	2caac <PyInit__decimal@@Base+0x1252c>  // b.none
   2caa4:	ldr	x0, [x6]
   2caa8:	add	x4, x4, x0
   2caac:	add	x6, x6, #0x8
   2cab0:	cmp	x11, x6
   2cab4:	b.eq	2cb08 <PyInit__decimal@@Base+0x12588>  // b.none
   2cab8:	umulh	x9, x8, x10
   2cabc:	umulh	x0, x7, x10
   2cac0:	lsr	x5, x9, #3
   2cac4:	lsr	x1, x0, #3
   2cac8:	add	x5, x5, x5, lsl #2
   2cacc:	add	x1, x1, x1, lsl #2
   2cad0:	sub	x5, x8, x5, lsl #1
   2cad4:	lsr	x8, x9, #3
   2cad8:	sub	x1, x7, x1, lsl #1
   2cadc:	cmp	x5, #0x1
   2cae0:	ccmp	x1, #0x1, #0x2, ls  // ls = plast
   2cae4:	lsr	x7, x0, #3
   2cae8:	b.ls	2ca9c <PyInit__decimal@@Base+0x1251c>  // b.plast
   2caec:	mov	x0, x20
   2caf0:	mov	w1, #0x100                 	// #256
   2caf4:	ldp	x19, x20, [sp, #16]
   2caf8:	ldp	x21, x22, [sp, #32]
   2cafc:	ldr	x23, [sp, #48]
   2cb00:	ldp	x29, x30, [sp], #80
   2cb04:	b	28d68 <PyInit__decimal@@Base+0xe7e8>
   2cb08:	ldr	x0, [x20, #40]
   2cb0c:	add	x21, x21, #0x1
   2cb10:	str	x4, [x0, x15]
   2cb14:	ldr	x0, [x19, #24]
   2cb18:	sub	x0, x0, #0x1
   2cb1c:	cmp	x0, x21
   2cb20:	b.gt	2ca80 <PyInit__decimal@@Base+0x12500>
   2cb24:	lsl	x15, x21, #3
   2cb28:	add	x14, x14, x15
   2cb2c:	add	x1, x13, x15
   2cb30:	add	x12, x12, #0x2d0
   2cb34:	ldr	x5, [x14]
   2cb38:	ldr	x0, [x12, #72]
   2cb3c:	ldr	x6, [x1]
   2cb40:	cmp	x5, x0
   2cb44:	b.cs	2ccd4 <PyInit__decimal@@Base+0x12754>  // b.hs, b.nlast
   2cb48:	ldr	x0, [x12, #32]
   2cb4c:	cmp	x5, x0
   2cb50:	b.cs	2cd10 <PyInit__decimal@@Base+0x12790>  // b.hs, b.nlast
   2cb54:	ldr	x0, [x12, #16]
   2cb58:	cmp	x5, x0
   2cb5c:	b.cs	2ce00 <PyInit__decimal@@Base+0x12880>  // b.hs, b.nlast
   2cb60:	ldr	x0, [x12, #8]
   2cb64:	cmp	x5, x0
   2cb68:	cset	w0, cs  // cs = hs, nlast
   2cb6c:	add	w0, w0, #0x1
   2cb70:	sub	w0, w0, #0x1
   2cb74:	adrp	x14, 42000 <PyInit__decimal@@Base+0x27a80>
   2cb78:	mov	x10, #0xcccccccccccccccc    	// #-3689348814741910324
   2cb7c:	add	x11, x0, #0x2
   2cb80:	add	x14, x14, #0x2c8
   2cb84:	mov	x4, #0x1                   	// #1
   2cb88:	mov	x12, #0x0                   	// #0
   2cb8c:	movk	x10, #0xcccd
   2cb90:	umulh	x8, x5, x10
   2cb94:	mov	w9, w4
   2cb98:	umulh	x7, x6, x10
   2cb9c:	lsr	x1, x8, #3
   2cba0:	lsr	x0, x7, #3
   2cba4:	add	x1, x1, x1, lsl #2
   2cba8:	add	x0, x0, x0, lsl #2
   2cbac:	sub	x1, x5, x1, lsl #1
   2cbb0:	lsr	x5, x8, #3
   2cbb4:	sub	x0, x6, x0, lsl #1
   2cbb8:	cmp	x1, #0x1
   2cbbc:	ccmp	x0, #0x1, #0x2, ls  // ls = plast
   2cbc0:	lsr	x6, x7, #3
   2cbc4:	b.hi	2caec <PyInit__decimal@@Base+0x1256c>  // b.pmore
   2cbc8:	tst	x1, x0
   2cbcc:	b.eq	2cbd8 <PyInit__decimal@@Base+0x12658>  // b.none
   2cbd0:	ldr	x0, [x14, x4, lsl #3]
   2cbd4:	add	x12, x12, x0
   2cbd8:	add	x4, x4, #0x1
   2cbdc:	cmp	x11, x4
   2cbe0:	b.ne	2cb90 <PyInit__decimal@@Base+0x12610>  // b.any
   2cbe4:	ldr	x7, [x20, #40]
   2cbe8:	cmp	w9, #0x12
   2cbec:	str	x12, [x7, x15]
   2cbf0:	b.gt	2cc40 <PyInit__decimal@@Base+0x126c0>
   2cbf4:	mov	x5, #0xcccccccccccccccc    	// #-3689348814741910324
   2cbf8:	movk	x5, #0xcccd
   2cbfc:	umulh	x1, x6, x5
   2cc00:	lsr	x1, x1, #3
   2cc04:	add	x0, x1, x1, lsl #2
   2cc08:	sub	x6, x6, x0, lsl #1
   2cc0c:	cmp	x6, #0x1
   2cc10:	b.ls	2cc30 <PyInit__decimal@@Base+0x126b0>  // b.plast
   2cc14:	b	2caec <PyInit__decimal@@Base+0x1256c>
   2cc18:	lsr	x0, x4, #3
   2cc1c:	add	x0, x0, x0, lsl #2
   2cc20:	sub	x0, x1, x0, lsl #1
   2cc24:	lsr	x1, x4, #3
   2cc28:	cmp	x0, #0x1
   2cc2c:	b.hi	2caec <PyInit__decimal@@Base+0x1256c>  // b.pmore
   2cc30:	add	w9, w9, #0x1
   2cc34:	umulh	x4, x1, x5
   2cc38:	cmp	w9, #0x13
   2cc3c:	b.ne	2cc18 <PyInit__decimal@@Base+0x12698>  // b.any
   2cc40:	ldr	x8, [x23, #24]
   2cc44:	add	x21, x21, #0x1
   2cc48:	cmp	x21, x8
   2cc4c:	b.ge	2cd78 <PyInit__decimal@@Base+0x127f8>  // b.tcont
   2cc50:	mov	x6, #0xcccccccccccccccc    	// #-3689348814741910324
   2cc54:	movk	x6, #0xcccd
   2cc58:	mov	w5, #0x13                  	// #19
   2cc5c:	ldr	x1, [x13, x21, lsl #3]
   2cc60:	b	2cc6c <PyInit__decimal@@Base+0x126ec>
   2cc64:	subs	w5, w5, #0x1
   2cc68:	b.eq	2cd6c <PyInit__decimal@@Base+0x127ec>  // b.none
   2cc6c:	umulh	x4, x1, x6
   2cc70:	lsr	x0, x4, #3
   2cc74:	add	x0, x0, x0, lsl #2
   2cc78:	sub	x0, x1, x0, lsl #1
   2cc7c:	lsr	x1, x4, #3
   2cc80:	cmp	x0, #0x1
   2cc84:	b.ls	2cc64 <PyInit__decimal@@Base+0x126e4>  // b.plast
   2cc88:	b	2caec <PyInit__decimal@@Base+0x1256c>
   2cc8c:	ldp	x21, x22, [sp, #32]
   2cc90:	b	2c9ec <PyInit__decimal@@Base+0x1246c>
   2cc94:	stp	x2, x3, [sp, #64]
   2cc98:	bl	25438 <PyInit__decimal@@Base+0xaeb8>
   2cc9c:	ldp	x2, x3, [sp, #64]
   2cca0:	cbnz	w0, 2ca5c <PyInit__decimal@@Base+0x124dc>
   2cca4:	ldp	x19, x20, [sp, #16]
   2cca8:	ldp	x21, x22, [sp, #32]
   2ccac:	ldr	x23, [sp, #48]
   2ccb0:	ldp	x29, x30, [sp], #80
   2ccb4:	ret
   2ccb8:	stp	x2, x3, [sp, #64]
   2ccbc:	bl	25588 <PyInit__decimal@@Base+0xb008>
   2ccc0:	ldp	x2, x3, [sp, #64]
   2ccc4:	b	2cca0 <PyInit__decimal@@Base+0x12720>
   2ccc8:	mov	x1, x13
   2cccc:	mov	x15, #0x0                   	// #0
   2ccd0:	b	2cb30 <PyInit__decimal@@Base+0x125b0>
   2ccd4:	ldr	x0, [x12, #112]
   2ccd8:	cmp	x5, x0
   2ccdc:	b.cs	2cd40 <PyInit__decimal@@Base+0x127c0>  // b.hs, b.nlast
   2cce0:	ldr	x0, [x12, #88]
   2cce4:	cmp	x5, x0
   2cce8:	b.cc	2ce28 <PyInit__decimal@@Base+0x128a8>  // b.lo, b.ul, b.last
   2ccec:	ldr	x1, [x12, #104]
   2ccf0:	mov	w0, #0xe                   	// #14
   2ccf4:	cmp	x5, x1
   2ccf8:	b.cs	2cb70 <PyInit__decimal@@Base+0x125f0>  // b.hs, b.nlast
   2ccfc:	ldr	x0, [x12, #96]
   2cd00:	cmp	x5, x0
   2cd04:	cset	w0, cs  // cs = hs, nlast
   2cd08:	add	w0, w0, #0xc
   2cd0c:	b	2cb70 <PyInit__decimal@@Base+0x125f0>
   2cd10:	ldr	x0, [x12, #48]
   2cd14:	cmp	x5, x0
   2cd18:	b.cc	2ce3c <PyInit__decimal@@Base+0x128bc>  // b.lo, b.ul, b.last
   2cd1c:	ldr	x1, [x12, #64]
   2cd20:	mov	w0, #0x9                   	// #9
   2cd24:	cmp	x5, x1
   2cd28:	b.cs	2cb70 <PyInit__decimal@@Base+0x125f0>  // b.hs, b.nlast
   2cd2c:	ldr	x0, [x12, #56]
   2cd30:	cmp	x5, x0
   2cd34:	cset	w0, cs  // cs = hs, nlast
   2cd38:	add	w0, w0, #0x7
   2cd3c:	b	2cb70 <PyInit__decimal@@Base+0x125f0>
   2cd40:	ldr	x0, [x12, #144]
   2cd44:	cmp	x5, x0
   2cd48:	b.cs	2ce14 <PyInit__decimal@@Base+0x12894>  // b.hs, b.nlast
   2cd4c:	ldr	x0, [x12, #128]
   2cd50:	cmp	x5, x0
   2cd54:	b.cs	2ce50 <PyInit__decimal@@Base+0x128d0>  // b.hs, b.nlast
   2cd58:	ldr	x0, [x12, #120]
   2cd5c:	cmp	x5, x0
   2cd60:	cset	w0, cs  // cs = hs, nlast
   2cd64:	add	w0, w0, #0xf
   2cd68:	b	2cb70 <PyInit__decimal@@Base+0x125f0>
   2cd6c:	add	x21, x21, #0x1
   2cd70:	cmp	x21, x8
   2cd74:	b.lt	2cc58 <PyInit__decimal@@Base+0x126d8>  // b.tstop
   2cd78:	ldrb	w5, [x20]
   2cd7c:	and	w0, w5, #0xfffffff0
   2cd80:	strb	w0, [x20]
   2cd84:	ldr	x0, [x19, #24]
   2cd88:	str	xzr, [x20, #8]
   2cd8c:	cmp	x0, #0x1
   2cd90:	b.le	2cdb0 <PyInit__decimal@@Base+0x12830>
   2cd94:	sub	x7, x7, #0x8
   2cd98:	b	2cda8 <PyInit__decimal@@Base+0x12828>
   2cd9c:	sub	x0, x0, #0x1
   2cda0:	cmp	x0, #0x1
   2cda4:	b.eq	2cdb0 <PyInit__decimal@@Base+0x12830>  // b.none
   2cda8:	ldr	x1, [x7, x0, lsl #3]
   2cdac:	cbz	x1, 2cd9c <PyInit__decimal@@Base+0x1281c>
   2cdb0:	ldr	x1, [x22, #1672]
   2cdb4:	str	x0, [x20, #24]
   2cdb8:	ldr	x4, [x20, #32]
   2cdbc:	cmp	x1, x0
   2cdc0:	csel	x1, x1, x0, ge  // ge = tcont
   2cdc4:	cmp	x1, x4
   2cdc8:	b.eq	2cdd8 <PyInit__decimal@@Base+0x12858>  // b.none
   2cdcc:	tbz	w5, #5, 2ce78 <PyInit__decimal@@Base+0x128f8>
   2cdd0:	cmp	x1, x4
   2cdd4:	b.gt	2ce64 <PyInit__decimal@@Base+0x128e4>
   2cdd8:	mov	x0, x20
   2cddc:	str	x3, [sp, #64]
   2cde0:	bl	28498 <PyInit__decimal@@Base+0xdf18>
   2cde4:	ldp	x19, x20, [sp, #16]
   2cde8:	ldp	x21, x22, [sp, #32]
   2cdec:	ldr	x23, [sp, #48]
   2cdf0:	ldr	x3, [sp, #64]
   2cdf4:	ldp	x29, x30, [sp], #80
   2cdf8:	mov	x1, x3
   2cdfc:	b	27510 <PyInit__decimal@@Base+0xcf90>
   2ce00:	ldr	x0, [x12, #24]
   2ce04:	cmp	x5, x0
   2ce08:	cset	w0, cs  // cs = hs, nlast
   2ce0c:	add	w0, w0, #0x3
   2ce10:	b	2cb70 <PyInit__decimal@@Base+0x125f0>
   2ce14:	ldr	x0, [x12, #152]
   2ce18:	cmp	x5, x0
   2ce1c:	cset	w0, cs  // cs = hs, nlast
   2ce20:	add	w0, w0, #0x13
   2ce24:	b	2cb70 <PyInit__decimal@@Base+0x125f0>
   2ce28:	ldr	x0, [x12, #80]
   2ce2c:	cmp	x5, x0
   2ce30:	cset	w0, cs  // cs = hs, nlast
   2ce34:	add	w0, w0, #0xa
   2ce38:	b	2cb70 <PyInit__decimal@@Base+0x125f0>
   2ce3c:	ldr	x0, [x12, #40]
   2ce40:	cmp	x5, x0
   2ce44:	cset	w0, cs  // cs = hs, nlast
   2ce48:	add	w0, w0, #0x5
   2ce4c:	b	2cb70 <PyInit__decimal@@Base+0x125f0>
   2ce50:	ldr	x0, [x12, #136]
   2ce54:	cmp	x5, x0
   2ce58:	cset	w0, cs  // cs = hs, nlast
   2ce5c:	add	w0, w0, #0x11
   2ce60:	b	2cb70 <PyInit__decimal@@Base+0x125f0>
   2ce64:	mov	x0, x20
   2ce68:	str	x3, [sp, #64]
   2ce6c:	bl	25438 <PyInit__decimal@@Base+0xaeb8>
   2ce70:	ldr	x3, [sp, #64]
   2ce74:	b	2cdd8 <PyInit__decimal@@Base+0x12858>
   2ce78:	mov	x0, x20
   2ce7c:	str	x3, [sp, #64]
   2ce80:	bl	25588 <PyInit__decimal@@Base+0xb008>
   2ce84:	ldr	x3, [sp, #64]
   2ce88:	b	2cdd8 <PyInit__decimal@@Base+0x12858>
   2ce8c:	nop
   2ce90:	ldrb	w2, [x0]
   2ce94:	tst	w2, #0xc
   2ce98:	b.eq	2ceb8 <PyInit__decimal@@Base+0x12938>  // b.none
   2ce9c:	tst	x2, #0x4
   2cea0:	adrp	x1, 3b000 <PyInit__decimal@@Base+0x20a80>
   2cea4:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27a80>
   2cea8:	add	x1, x1, #0xa38
   2ceac:	add	x0, x0, #0x888
   2ceb0:	csel	x0, x0, x1, ne  // ne = any
   2ceb4:	ret
   2ceb8:	and	w3, w2, #0x2
   2cebc:	tbnz	w2, #0, 2ceec <PyInit__decimal@@Base+0x1296c>
   2cec0:	cbnz	w3, 2cf18 <PyInit__decimal@@Base+0x12998>
   2cec4:	tst	w2, #0xe
   2cec8:	b.ne	2cf88 <PyInit__decimal@@Base+0x12a08>  // b.any
   2cecc:	ldr	x2, [x0, #24]
   2ced0:	ldr	x3, [x0, #40]
   2ced4:	add	x2, x3, x2, lsl #3
   2ced8:	ldur	x2, [x2, #-8]
   2cedc:	cbnz	x2, 2cf30 <PyInit__decimal@@Base+0x129b0>
   2cee0:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27a80>
   2cee4:	add	x0, x0, #0x8a0
   2cee8:	ret
   2ceec:	cbnz	w3, 2cf24 <PyInit__decimal@@Base+0x129a4>
   2cef0:	tst	w2, #0xe
   2cef4:	b.ne	2cf94 <PyInit__decimal@@Base+0x12a14>  // b.any
   2cef8:	ldr	x2, [x0, #24]
   2cefc:	ldr	x3, [x0, #40]
   2cf00:	add	x2, x3, x2, lsl #3
   2cf04:	ldur	x2, [x2, #-8]
   2cf08:	cbnz	x2, 2cf5c <PyInit__decimal@@Base+0x129dc>
   2cf0c:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27a80>
   2cf10:	add	x0, x0, #0x8a8
   2cf14:	ret
   2cf18:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27a80>
   2cf1c:	add	x0, x0, #0x8b0
   2cf20:	ret
   2cf24:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27a80>
   2cf28:	add	x0, x0, #0x860
   2cf2c:	ret
   2cf30:	ldp	x2, x0, [x0, #8]
   2cf34:	adrp	x3, 42000 <PyInit__decimal@@Base+0x27a80>
   2cf38:	ldr	x4, [x1, #16]
   2cf3c:	add	x3, x3, #0x880
   2cf40:	add	x1, x2, x0
   2cf44:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27a80>
   2cf48:	sub	x1, x1, #0x1
   2cf4c:	add	x0, x0, #0x890
   2cf50:	cmp	x1, x4
   2cf54:	csel	x0, x0, x3, lt  // lt = tstop
   2cf58:	ret
   2cf5c:	ldp	x2, x0, [x0, #8]
   2cf60:	adrp	x3, 42000 <PyInit__decimal@@Base+0x27a80>
   2cf64:	ldr	x4, [x1, #16]
   2cf68:	add	x3, x3, #0x8c0
   2cf6c:	add	x1, x2, x0
   2cf70:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27a80>
   2cf74:	sub	x1, x1, #0x1
   2cf78:	add	x0, x0, #0x870
   2cf7c:	cmp	x1, x4
   2cf80:	csel	x0, x0, x3, lt  // lt = tstop
   2cf84:	ret
   2cf88:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27a80>
   2cf8c:	add	x0, x0, #0x890
   2cf90:	ret
   2cf94:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27a80>
   2cf98:	add	x0, x0, #0x870
   2cf9c:	ret
   2cfa0:	stp	x29, x30, [sp, #-96]!
   2cfa4:	mov	x29, sp
   2cfa8:	stp	x21, x22, [sp, #32]
   2cfac:	mov	x21, x2
   2cfb0:	mov	x22, x0
   2cfb4:	ldrb	w4, [x1]
   2cfb8:	mov	x2, x3
   2cfbc:	tst	x4, #0xf
   2cfc0:	b.ne	2d0e4 <PyInit__decimal@@Base+0x12b64>  // b.any
   2cfc4:	stp	x23, x24, [sp, #48]
   2cfc8:	ldr	x23, [x1, #8]
   2cfcc:	stp	x19, x20, [sp, #16]
   2cfd0:	mov	x20, x1
   2cfd4:	cbnz	x23, 2d1dc <PyInit__decimal@@Base+0x12c5c>
   2cfd8:	ldr	x4, [x1, #16]
   2cfdc:	mov	x19, #0x9436                	// #37942
   2cfe0:	ldr	x1, [x21]
   2cfe4:	movk	x19, #0x50d7, lsl #16
   2cfe8:	movk	x19, #0x435e, lsl #32
   2cfec:	adrp	x24, 5f000 <PyInit__decimal@@Base+0x44a80>
   2cff0:	cmp	x4, x1
   2cff4:	movk	x19, #0xd79, lsl #48
   2cff8:	csel	x4, x4, x1, ge  // ge = tcont
   2cffc:	ldr	x6, [x24, #1672]
   2d000:	smulh	x19, x4, x19
   2d004:	ldr	x3, [x0, #32]
   2d008:	sub	x19, x19, x4, asr #63
   2d00c:	add	x5, x19, x19, lsl #2
   2d010:	lsl	x5, x5, #2
   2d014:	sub	x5, x5, x19
   2d018:	cmp	x4, x5
   2d01c:	cinc	x19, x19, ne  // ne = any
   2d020:	cmp	x6, x19
   2d024:	csel	x1, x6, x19, ge  // ge = tcont
   2d028:	cmp	x1, x3
   2d02c:	b.eq	2d064 <PyInit__decimal@@Base+0x12ae4>  // b.none
   2d030:	ldrb	w4, [x0]
   2d034:	tbz	w4, #5, 2d1f8 <PyInit__decimal@@Base+0x12c78>
   2d038:	cmp	x1, x3
   2d03c:	b.le	2d064 <PyInit__decimal@@Base+0x12ae4>
   2d040:	str	x2, [sp, #88]
   2d044:	bl	25438 <PyInit__decimal@@Base+0xaeb8>
   2d048:	ldr	x2, [sp, #88]
   2d04c:	cbnz	w0, 2d064 <PyInit__decimal@@Base+0x12ae4>
   2d050:	ldp	x19, x20, [sp, #16]
   2d054:	ldp	x21, x22, [sp, #32]
   2d058:	ldp	x23, x24, [sp, #48]
   2d05c:	ldp	x29, x30, [sp], #96
   2d060:	ret
   2d064:	str	x25, [sp, #64]
   2d068:	mov	x9, #0xcccccccccccccccc    	// #-3689348814741910324
   2d06c:	cmp	x19, #0x0
   2d070:	movk	x9, #0xcccd
   2d074:	adrp	x25, 42000 <PyInit__decimal@@Base+0x27a80>
   2d078:	b.le	2d208 <PyInit__decimal@@Base+0x12c88>
   2d07c:	ldr	x0, [x20, #24]
   2d080:	mov	x6, #0x0                   	// #0
   2d084:	cmp	x0, x23
   2d088:	b.le	2d094 <PyInit__decimal@@Base+0x12b14>
   2d08c:	ldr	x0, [x20, #40]
   2d090:	ldr	x6, [x0, x23, lsl #3]
   2d094:	add	x5, x25, #0x2d0
   2d098:	add	x10, x5, #0x98
   2d09c:	mov	x8, #0x0                   	// #0
   2d0a0:	b	2d0bc <PyInit__decimal@@Base+0x12b3c>
   2d0a4:	cbnz	x4, 2d0b0 <PyInit__decimal@@Base+0x12b30>
   2d0a8:	ldr	x4, [x5]
   2d0ac:	add	x8, x8, x4
   2d0b0:	add	x5, x5, #0x8
   2d0b4:	cmp	x10, x5
   2d0b8:	b.eq	2d0f8 <PyInit__decimal@@Base+0x12b78>  // b.none
   2d0bc:	umulh	x7, x6, x9
   2d0c0:	lsr	x4, x7, #3
   2d0c4:	add	x4, x4, x4, lsl #2
   2d0c8:	sub	x4, x6, x4, lsl #1
   2d0cc:	lsr	x6, x7, #3
   2d0d0:	cmp	x4, #0x1
   2d0d4:	b.ls	2d0a4 <PyInit__decimal@@Base+0x12b24>  // b.plast
   2d0d8:	ldp	x19, x20, [sp, #16]
   2d0dc:	ldp	x23, x24, [sp, #48]
   2d0e0:	ldr	x25, [sp, #64]
   2d0e4:	mov	x0, x22
   2d0e8:	ldp	x21, x22, [sp, #32]
   2d0ec:	mov	w1, #0x100                 	// #256
   2d0f0:	ldp	x29, x30, [sp], #96
   2d0f4:	b	28d68 <PyInit__decimal@@Base+0xe7e8>
   2d0f8:	ldr	x0, [x22, #40]
   2d0fc:	str	x8, [x0, x23, lsl #3]
   2d100:	add	x23, x23, #0x1
   2d104:	cmp	x19, x23
   2d108:	b.ne	2d07c <PyInit__decimal@@Base+0x12afc>  // b.any
   2d10c:	ldrb	w4, [x22]
   2d110:	cmp	x19, #0x1
   2d114:	str	xzr, [x22, #8]
   2d118:	and	w1, w4, #0xfffffff0
   2d11c:	strb	w1, [x22]
   2d120:	b.eq	2d140 <PyInit__decimal@@Base+0x12bc0>  // b.none
   2d124:	sub	x3, x0, #0x8
   2d128:	b	2d138 <PyInit__decimal@@Base+0x12bb8>
   2d12c:	sub	x19, x19, #0x1
   2d130:	cmp	x19, #0x1
   2d134:	b.eq	2d140 <PyInit__decimal@@Base+0x12bc0>  // b.none
   2d138:	ldr	x1, [x3, x19, lsl #3]
   2d13c:	cbz	x1, 2d12c <PyInit__decimal@@Base+0x12bac>
   2d140:	ldr	x1, [x24, #1672]
   2d144:	str	x19, [x22, #24]
   2d148:	ldr	x3, [x22, #32]
   2d14c:	cmp	x1, x19
   2d150:	csel	x1, x1, x19, ge  // ge = tcont
   2d154:	cmp	x1, x3
   2d158:	b.eq	2d168 <PyInit__decimal@@Base+0x12be8>  // b.none
   2d15c:	tbz	w4, #5, 2d25c <PyInit__decimal@@Base+0x12cdc>
   2d160:	cmp	x1, x3
   2d164:	b.gt	2d2cc <PyInit__decimal@@Base+0x12d4c>
   2d168:	add	x0, x0, x19, lsl #3
   2d16c:	add	x25, x25, #0x2d0
   2d170:	ldur	x0, [x0, #-8]
   2d174:	ldr	x1, [x25, #72]
   2d178:	cmp	x0, x1
   2d17c:	b.cs	2d220 <PyInit__decimal@@Base+0x12ca0>  // b.hs, b.nlast
   2d180:	ldr	x1, [x25, #32]
   2d184:	cmp	x0, x1
   2d188:	b.cs	2d270 <PyInit__decimal@@Base+0x12cf0>  // b.hs, b.nlast
   2d18c:	ldr	x1, [x25, #16]
   2d190:	cmp	x0, x1
   2d194:	b.cs	2d2e0 <PyInit__decimal@@Base+0x12d60>  // b.hs, b.nlast
   2d198:	ldr	x1, [x25, #8]
   2d19c:	cmp	x0, x1
   2d1a0:	cset	x3, cs  // cs = hs, nlast
   2d1a4:	add	x3, x3, #0x1
   2d1a8:	sub	x19, x19, #0x1
   2d1ac:	mov	x1, x21
   2d1b0:	ldp	x23, x24, [sp, #48]
   2d1b4:	add	x2, x19, x19, lsl #2
   2d1b8:	ldr	x25, [sp, #64]
   2d1bc:	add	x2, x3, x2, lsl #2
   2d1c0:	sub	x19, x2, x19
   2d1c4:	str	x19, [x22, #16]
   2d1c8:	mov	x0, x22
   2d1cc:	ldp	x19, x20, [sp, #16]
   2d1d0:	ldp	x21, x22, [sp, #32]
   2d1d4:	ldp	x29, x30, [sp], #96
   2d1d8:	b	27510 <PyInit__decimal@@Base+0xcf90>
   2d1dc:	mov	x0, x22
   2d1e0:	mov	w1, #0x100                 	// #256
   2d1e4:	ldp	x19, x20, [sp, #16]
   2d1e8:	ldp	x21, x22, [sp, #32]
   2d1ec:	ldp	x23, x24, [sp, #48]
   2d1f0:	ldp	x29, x30, [sp], #96
   2d1f4:	b	28d68 <PyInit__decimal@@Base+0xe7e8>
   2d1f8:	str	x2, [sp, #88]
   2d1fc:	bl	25588 <PyInit__decimal@@Base+0xb008>
   2d200:	ldr	x2, [sp, #88]
   2d204:	b	2d04c <PyInit__decimal@@Base+0x12acc>
   2d208:	ldrb	w4, [x22]
   2d20c:	str	xzr, [x22, #8]
   2d210:	and	w0, w4, #0xfffffff0
   2d214:	strb	w0, [x22]
   2d218:	ldr	x0, [x22, #40]
   2d21c:	b	2d140 <PyInit__decimal@@Base+0x12bc0>
   2d220:	ldr	x1, [x25, #112]
   2d224:	cmp	x0, x1
   2d228:	b.cs	2d2a0 <PyInit__decimal@@Base+0x12d20>  // b.hs, b.nlast
   2d22c:	ldr	x1, [x25, #88]
   2d230:	cmp	x0, x1
   2d234:	b.cc	2d308 <PyInit__decimal@@Base+0x12d88>  // b.lo, b.ul, b.last
   2d238:	ldr	x1, [x25, #104]
   2d23c:	mov	x3, #0xe                   	// #14
   2d240:	cmp	x0, x1
   2d244:	b.cs	2d1a8 <PyInit__decimal@@Base+0x12c28>  // b.hs, b.nlast
   2d248:	ldr	x1, [x25, #96]
   2d24c:	cmp	x0, x1
   2d250:	cset	x3, cs  // cs = hs, nlast
   2d254:	add	x3, x3, #0xc
   2d258:	b	2d1a8 <PyInit__decimal@@Base+0x12c28>
   2d25c:	mov	x0, x22
   2d260:	bl	25588 <PyInit__decimal@@Base+0xb008>
   2d264:	ldr	x19, [x22, #24]
   2d268:	ldr	x0, [x22, #40]
   2d26c:	b	2d168 <PyInit__decimal@@Base+0x12be8>
   2d270:	ldr	x1, [x25, #48]
   2d274:	cmp	x0, x1
   2d278:	b.cc	2d31c <PyInit__decimal@@Base+0x12d9c>  // b.lo, b.ul, b.last
   2d27c:	ldr	x1, [x25, #64]
   2d280:	mov	x3, #0x9                   	// #9
   2d284:	cmp	x0, x1
   2d288:	b.cs	2d1a8 <PyInit__decimal@@Base+0x12c28>  // b.hs, b.nlast
   2d28c:	ldr	x1, [x25, #56]
   2d290:	cmp	x0, x1
   2d294:	cset	x3, cs  // cs = hs, nlast
   2d298:	add	x3, x3, #0x7
   2d29c:	b	2d1a8 <PyInit__decimal@@Base+0x12c28>
   2d2a0:	ldr	x1, [x25, #144]
   2d2a4:	cmp	x0, x1
   2d2a8:	b.cs	2d2f4 <PyInit__decimal@@Base+0x12d74>  // b.hs, b.nlast
   2d2ac:	ldr	x1, [x25, #128]
   2d2b0:	cmp	x0, x1
   2d2b4:	b.cs	2d330 <PyInit__decimal@@Base+0x12db0>  // b.hs, b.nlast
   2d2b8:	ldr	x1, [x25, #120]
   2d2bc:	cmp	x0, x1
   2d2c0:	cset	x3, cs  // cs = hs, nlast
   2d2c4:	add	x3, x3, #0xf
   2d2c8:	b	2d1a8 <PyInit__decimal@@Base+0x12c28>
   2d2cc:	mov	x0, x22
   2d2d0:	bl	25438 <PyInit__decimal@@Base+0xaeb8>
   2d2d4:	ldr	x19, [x22, #24]
   2d2d8:	ldr	x0, [x22, #40]
   2d2dc:	b	2d168 <PyInit__decimal@@Base+0x12be8>
   2d2e0:	ldr	x1, [x25, #24]
   2d2e4:	cmp	x0, x1
   2d2e8:	cset	x3, cs  // cs = hs, nlast
   2d2ec:	add	x3, x3, #0x3
   2d2f0:	b	2d1a8 <PyInit__decimal@@Base+0x12c28>
   2d2f4:	ldr	x1, [x25, #152]
   2d2f8:	cmp	x0, x1
   2d2fc:	cset	x3, cs  // cs = hs, nlast
   2d300:	add	x3, x3, #0x13
   2d304:	b	2d1a8 <PyInit__decimal@@Base+0x12c28>
   2d308:	ldr	x1, [x25, #80]
   2d30c:	cmp	x0, x1
   2d310:	cset	x3, cs  // cs = hs, nlast
   2d314:	add	x3, x3, #0xa
   2d318:	b	2d1a8 <PyInit__decimal@@Base+0x12c28>
   2d31c:	ldr	x1, [x25, #40]
   2d320:	cmp	x0, x1
   2d324:	cset	x3, cs  // cs = hs, nlast
   2d328:	add	x3, x3, #0x5
   2d32c:	b	2d1a8 <PyInit__decimal@@Base+0x12c28>
   2d330:	ldr	x1, [x25, #136]
   2d334:	cmp	x0, x1
   2d338:	cset	x3, cs  // cs = hs, nlast
   2d33c:	add	x3, x3, #0x11
   2d340:	b	2d1a8 <PyInit__decimal@@Base+0x12c28>
   2d344:	nop
   2d348:	stp	x29, x30, [sp, #-32]!
   2d34c:	mov	x29, sp
   2d350:	ldrb	w5, [x1]
   2d354:	tst	w5, #0xe
   2d358:	b.ne	2d3b4 <PyInit__decimal@@Base+0x12e34>  // b.any
   2d35c:	mov	x4, x1
   2d360:	ldr	x1, [x1, #24]
   2d364:	ldr	x5, [x4, #40]
   2d368:	add	x1, x5, x1, lsl #3
   2d36c:	ldur	x1, [x1, #-8]
   2d370:	cbnz	x1, 2d3a0 <PyInit__decimal@@Base+0x12e20>
   2d374:	stp	x19, x20, [sp, #16]
   2d378:	mov	x19, x3
   2d37c:	mov	w2, #0x2                   	// #2
   2d380:	mov	w1, #0x1                   	// #1
   2d384:	bl	28cd8 <PyInit__decimal@@Base+0xe758>
   2d388:	ldr	w0, [x19]
   2d38c:	orr	w0, w0, #0x4
   2d390:	str	w0, [x19]
   2d394:	ldp	x19, x20, [sp, #16]
   2d398:	ldp	x29, x30, [sp], #32
   2d39c:	ret
   2d3a0:	ldp	x1, x4, [x4, #8]
   2d3a4:	ldp	x29, x30, [sp], #32
   2d3a8:	add	x1, x1, x4
   2d3ac:	sub	x1, x1, #0x1
   2d3b0:	b	2bba8 <PyInit__decimal@@Base+0x11628>
   2d3b4:	stp	x19, x20, [sp, #16]
   2d3b8:	mov	x20, x0
   2d3bc:	bl	29098 <PyInit__decimal@@Base+0xeb18>
   2d3c0:	cbnz	w0, 2d394 <PyInit__decimal@@Base+0x12e14>
   2d3c4:	mov	x0, x20
   2d3c8:	mov	w2, #0x2                   	// #2
   2d3cc:	ldp	x19, x20, [sp, #16]
   2d3d0:	mov	w1, #0x0                   	// #0
   2d3d4:	ldp	x29, x30, [sp], #32
   2d3d8:	b	28cd8 <PyInit__decimal@@Base+0xe758>
   2d3dc:	nop
   2d3e0:	stp	x29, x30, [sp, #-80]!
   2d3e4:	mov	x6, x2
   2d3e8:	mov	x2, x4
   2d3ec:	mov	x29, sp
   2d3f0:	stp	x19, x20, [sp, #16]
   2d3f4:	mov	x20, x0
   2d3f8:	ldrb	w5, [x1]
   2d3fc:	tst	w5, #0xe
   2d400:	b.ne	2d41c <PyInit__decimal@@Base+0x12e9c>  // b.any
   2d404:	ldrb	w7, [x6]
   2d408:	orr	w5, w7, w5
   2d40c:	and	w7, w7, #0xe
   2d410:	and	w5, w5, #0x1
   2d414:	orr	w5, w5, w7
   2d418:	cbz	w5, 2d430 <PyInit__decimal@@Base+0x12eb0>
   2d41c:	mov	x0, x20
   2d420:	mov	w1, #0x100                 	// #256
   2d424:	ldp	x19, x20, [sp, #16]
   2d428:	ldp	x29, x30, [sp], #80
   2d42c:	b	28d68 <PyInit__decimal@@Base+0xe7e8>
   2d430:	ldr	x4, [x1, #8]
   2d434:	cbnz	x4, 2d41c <PyInit__decimal@@Base+0x12e9c>
   2d438:	stp	x21, x22, [sp, #32]
   2d43c:	ldr	x21, [x6, #8]
   2d440:	cbnz	x21, 2d6ec <PyInit__decimal@@Base+0x1316c>
   2d444:	ldr	x5, [x1, #16]
   2d448:	ldr	x7, [x6, #16]
   2d44c:	cmp	x7, x5
   2d450:	csel	x22, x1, x6, le
   2d454:	csel	x19, x6, x1, le
   2d458:	ldr	x5, [x0, #32]
   2d45c:	ldr	x1, [x22, #24]
   2d460:	str	x23, [sp, #48]
   2d464:	adrp	x23, 5f000 <PyInit__decimal@@Base+0x44a80>
   2d468:	ldr	x4, [x23, #1672]
   2d46c:	cmp	x1, x4
   2d470:	csel	x1, x1, x4, ge  // ge = tcont
   2d474:	cmp	x1, x5
   2d478:	b.eq	2d48c <PyInit__decimal@@Base+0x12f0c>  // b.none
   2d47c:	ldrb	w4, [x0]
   2d480:	tbz	w4, #5, 2d718 <PyInit__decimal@@Base+0x13198>
   2d484:	cmp	x1, x5
   2d488:	b.gt	2d6f4 <PyInit__decimal@@Base+0x13174>
   2d48c:	ldr	x0, [x19, #24]
   2d490:	mov	x10, #0xcccccccccccccccc    	// #-3689348814741910324
   2d494:	adrp	x12, 42000 <PyInit__decimal@@Base+0x27a80>
   2d498:	movk	x10, #0xcccd
   2d49c:	sub	x0, x0, #0x1
   2d4a0:	cmp	x0, #0x0
   2d4a4:	ldr	x14, [x19, #40]
   2d4a8:	ldr	x13, [x22, #40]
   2d4ac:	b.le	2d728 <PyInit__decimal@@Base+0x131a8>
   2d4b0:	add	x6, x12, #0x2d0
   2d4b4:	lsl	x15, x21, #3
   2d4b8:	add	x11, x6, #0x98
   2d4bc:	mov	x4, #0x0                   	// #0
   2d4c0:	ldr	x8, [x14, x21, lsl #3]
   2d4c4:	ldr	x7, [x13, x21, lsl #3]
   2d4c8:	b	2d4e8 <PyInit__decimal@@Base+0x12f68>
   2d4cc:	orr	x1, x1, x5
   2d4d0:	cbz	x1, 2d4dc <PyInit__decimal@@Base+0x12f5c>
   2d4d4:	ldr	x0, [x6]
   2d4d8:	add	x4, x4, x0
   2d4dc:	add	x6, x6, #0x8
   2d4e0:	cmp	x11, x6
   2d4e4:	b.eq	2d538 <PyInit__decimal@@Base+0x12fb8>  // b.none
   2d4e8:	umulh	x9, x8, x10
   2d4ec:	umulh	x0, x7, x10
   2d4f0:	lsr	x1, x9, #3
   2d4f4:	lsr	x5, x0, #3
   2d4f8:	add	x1, x1, x1, lsl #2
   2d4fc:	add	x5, x5, x5, lsl #2
   2d500:	sub	x1, x8, x1, lsl #1
   2d504:	lsr	x8, x9, #3
   2d508:	sub	x5, x7, x5, lsl #1
   2d50c:	cmp	x1, #0x1
   2d510:	ccmp	x5, #0x1, #0x2, ls  // ls = plast
   2d514:	lsr	x7, x0, #3
   2d518:	b.ls	2d4cc <PyInit__decimal@@Base+0x12f4c>  // b.plast
   2d51c:	mov	x0, x20
   2d520:	mov	w1, #0x100                 	// #256
   2d524:	ldp	x19, x20, [sp, #16]
   2d528:	ldp	x21, x22, [sp, #32]
   2d52c:	ldr	x23, [sp, #48]
   2d530:	ldp	x29, x30, [sp], #80
   2d534:	b	28d68 <PyInit__decimal@@Base+0xe7e8>
   2d538:	ldr	x0, [x20, #40]
   2d53c:	add	x21, x21, #0x1
   2d540:	str	x4, [x0, x15]
   2d544:	ldr	x0, [x19, #24]
   2d548:	sub	x0, x0, #0x1
   2d54c:	cmp	x0, x21
   2d550:	b.gt	2d4b0 <PyInit__decimal@@Base+0x12f30>
   2d554:	lsl	x15, x21, #3
   2d558:	add	x14, x14, x15
   2d55c:	add	x5, x13, x15
   2d560:	add	x1, x12, #0x2d0
   2d564:	ldr	x4, [x14]
   2d568:	ldr	x0, [x1, #72]
   2d56c:	ldr	x6, [x5]
   2d570:	cmp	x4, x0
   2d574:	b.cs	2d734 <PyInit__decimal@@Base+0x131b4>  // b.hs, b.nlast
   2d578:	ldr	x0, [x1, #32]
   2d57c:	cmp	x4, x0
   2d580:	b.cs	2d770 <PyInit__decimal@@Base+0x131f0>  // b.hs, b.nlast
   2d584:	ldr	x0, [x1, #16]
   2d588:	cmp	x4, x0
   2d58c:	b.cs	2d864 <PyInit__decimal@@Base+0x132e4>  // b.hs, b.nlast
   2d590:	ldr	x0, [x1, #8]
   2d594:	cmp	x4, x0
   2d598:	cset	w0, cs  // cs = hs, nlast
   2d59c:	add	w0, w0, #0x1
   2d5a0:	sub	w0, w0, #0x1
   2d5a4:	mov	x11, #0xcccccccccccccccc    	// #-3689348814741910324
   2d5a8:	adrp	x17, 42000 <PyInit__decimal@@Base+0x27a80>
   2d5ac:	add	x16, x0, #0x2
   2d5b0:	add	x17, x17, #0x2c8
   2d5b4:	mov	x5, #0x1                   	// #1
   2d5b8:	mov	x14, #0x0                   	// #0
   2d5bc:	movk	x11, #0xcccd
   2d5c0:	b	2d5c8 <PyInit__decimal@@Base+0x13048>
   2d5c4:	mov	x5, x10
   2d5c8:	umulh	x9, x4, x11
   2d5cc:	add	x10, x5, #0x1
   2d5d0:	umulh	x8, x6, x11
   2d5d4:	mov	w7, w5
   2d5d8:	lsr	x0, x9, #3
   2d5dc:	lsr	x1, x8, #3
   2d5e0:	add	x0, x0, x0, lsl #2
   2d5e4:	add	x1, x1, x1, lsl #2
   2d5e8:	sub	x0, x4, x0, lsl #1
   2d5ec:	lsr	x4, x9, #3
   2d5f0:	sub	x1, x6, x1, lsl #1
   2d5f4:	cmp	x0, #0x1
   2d5f8:	ccmp	x1, #0x1, #0x2, ls  // ls = plast
   2d5fc:	lsr	x6, x8, #3
   2d600:	b.hi	2d51c <PyInit__decimal@@Base+0x12f9c>  // b.pmore
   2d604:	orr	x0, x0, x1
   2d608:	cbz	x0, 2d614 <PyInit__decimal@@Base+0x13094>
   2d60c:	ldr	x0, [x17, x5, lsl #3]
   2d610:	add	x14, x14, x0
   2d614:	cmp	x16, x10
   2d618:	b.ne	2d5c4 <PyInit__decimal@@Base+0x13044>  // b.any
   2d61c:	cmp	w7, #0x12
   2d620:	b.gt	2d694 <PyInit__decimal@@Base+0x13114>
   2d624:	mov	x4, #0xcccccccccccccccc    	// #-3689348814741910324
   2d628:	movk	x4, #0xcccd
   2d62c:	umulh	x8, x6, x4
   2d630:	lsr	x0, x8, #3
   2d634:	mov	x8, x0
   2d638:	add	x0, x0, x0, lsl #2
   2d63c:	sub	x0, x6, x0, lsl #1
   2d640:	cmp	x0, #0x1
   2d644:	b.hi	2d51c <PyInit__decimal@@Base+0x12f9c>  // b.pmore
   2d648:	sxtw	x1, w7
   2d64c:	mov	w6, #0x12                  	// #18
   2d650:	sub	w5, w6, w5
   2d654:	add	x12, x12, #0x2d0
   2d658:	mov	x7, x4
   2d65c:	add	x6, x5, x1
   2d660:	b	2d678 <PyInit__decimal@@Base+0x130f8>
   2d664:	add	x0, x0, x0, lsl #2
   2d668:	sub	x0, x8, x0, lsl #1
   2d66c:	lsr	x8, x5, #3
   2d670:	cmp	x0, #0x1
   2d674:	b.hi	2d51c <PyInit__decimal@@Base+0x12f9c>  // b.pmore
   2d678:	ldr	x4, [x12, x1, lsl #3]
   2d67c:	umulh	x5, x8, x7
   2d680:	cmp	x6, x1
   2d684:	add	x1, x1, #0x1
   2d688:	madd	x14, x0, x4, x14
   2d68c:	lsr	x0, x5, #3
   2d690:	b.ne	2d664 <PyInit__decimal@@Base+0x130e4>  // b.any
   2d694:	ldr	x7, [x20, #40]
   2d698:	add	x21, x21, #0x1
   2d69c:	str	x14, [x7, x15]
   2d6a0:	ldr	x0, [x22, #24]
   2d6a4:	cmp	x21, x0
   2d6a8:	b.ge	2d7e0 <PyInit__decimal@@Base+0x13260>  // b.tcont
   2d6ac:	mov	x6, #0xcccccccccccccccc    	// #-3689348814741910324
   2d6b0:	movk	x6, #0xcccd
   2d6b4:	ldr	x8, [x13, x21, lsl #3]
   2d6b8:	mov	w5, #0x13                  	// #19
   2d6bc:	mov	x1, x8
   2d6c0:	b	2d6cc <PyInit__decimal@@Base+0x1314c>
   2d6c4:	subs	w5, w5, #0x1
   2d6c8:	b.eq	2d7cc <PyInit__decimal@@Base+0x1324c>  // b.none
   2d6cc:	umulh	x4, x1, x6
   2d6d0:	lsr	x0, x4, #3
   2d6d4:	add	x0, x0, x0, lsl #2
   2d6d8:	sub	x0, x1, x0, lsl #1
   2d6dc:	lsr	x1, x4, #3
   2d6e0:	cmp	x0, #0x1
   2d6e4:	b.ls	2d6c4 <PyInit__decimal@@Base+0x13144>  // b.plast
   2d6e8:	b	2d51c <PyInit__decimal@@Base+0x12f9c>
   2d6ec:	ldp	x21, x22, [sp, #32]
   2d6f0:	b	2d41c <PyInit__decimal@@Base+0x12e9c>
   2d6f4:	stp	x2, x3, [sp, #64]
   2d6f8:	bl	25438 <PyInit__decimal@@Base+0xaeb8>
   2d6fc:	ldp	x2, x3, [sp, #64]
   2d700:	cbnz	w0, 2d48c <PyInit__decimal@@Base+0x12f0c>
   2d704:	ldp	x19, x20, [sp, #16]
   2d708:	ldp	x21, x22, [sp, #32]
   2d70c:	ldr	x23, [sp, #48]
   2d710:	ldp	x29, x30, [sp], #80
   2d714:	ret
   2d718:	stp	x2, x3, [sp, #64]
   2d71c:	bl	25588 <PyInit__decimal@@Base+0xb008>
   2d720:	ldp	x2, x3, [sp, #64]
   2d724:	b	2d700 <PyInit__decimal@@Base+0x13180>
   2d728:	mov	x5, x13
   2d72c:	mov	x15, #0x0                   	// #0
   2d730:	b	2d560 <PyInit__decimal@@Base+0x12fe0>
   2d734:	ldr	x0, [x1, #112]
   2d738:	cmp	x4, x0
   2d73c:	b.cs	2d7a0 <PyInit__decimal@@Base+0x13220>  // b.hs, b.nlast
   2d740:	ldr	x0, [x1, #88]
   2d744:	cmp	x4, x0
   2d748:	b.cc	2d88c <PyInit__decimal@@Base+0x1330c>  // b.lo, b.ul, b.last
   2d74c:	ldr	x5, [x1, #104]
   2d750:	mov	w0, #0xe                   	// #14
   2d754:	cmp	x4, x5
   2d758:	b.cs	2d5a0 <PyInit__decimal@@Base+0x13020>  // b.hs, b.nlast
   2d75c:	ldr	x0, [x1, #96]
   2d760:	cmp	x4, x0
   2d764:	cset	w0, cs  // cs = hs, nlast
   2d768:	add	w0, w0, #0xc
   2d76c:	b	2d5a0 <PyInit__decimal@@Base+0x13020>
   2d770:	ldr	x0, [x1, #48]
   2d774:	cmp	x4, x0
   2d778:	b.cc	2d8a0 <PyInit__decimal@@Base+0x13320>  // b.lo, b.ul, b.last
   2d77c:	ldr	x5, [x1, #64]
   2d780:	mov	w0, #0x9                   	// #9
   2d784:	cmp	x4, x5
   2d788:	b.cs	2d5a0 <PyInit__decimal@@Base+0x13020>  // b.hs, b.nlast
   2d78c:	ldr	x0, [x1, #56]
   2d790:	cmp	x4, x0
   2d794:	cset	w0, cs  // cs = hs, nlast
   2d798:	add	w0, w0, #0x7
   2d79c:	b	2d5a0 <PyInit__decimal@@Base+0x13020>
   2d7a0:	ldr	x0, [x1, #144]
   2d7a4:	cmp	x4, x0
   2d7a8:	b.cs	2d878 <PyInit__decimal@@Base+0x132f8>  // b.hs, b.nlast
   2d7ac:	ldr	x0, [x1, #128]
   2d7b0:	cmp	x4, x0
   2d7b4:	b.cs	2d8b4 <PyInit__decimal@@Base+0x13334>  // b.hs, b.nlast
   2d7b8:	ldr	x0, [x1, #120]
   2d7bc:	cmp	x4, x0
   2d7c0:	cset	w0, cs  // cs = hs, nlast
   2d7c4:	add	w0, w0, #0xf
   2d7c8:	b	2d5a0 <PyInit__decimal@@Base+0x13020>
   2d7cc:	str	x8, [x7, x21, lsl #3]
   2d7d0:	add	x21, x21, #0x1
   2d7d4:	ldr	x0, [x22, #24]
   2d7d8:	cmp	x0, x21
   2d7dc:	b.gt	2d6b4 <PyInit__decimal@@Base+0x13134>
   2d7e0:	ldrb	w5, [x20]
   2d7e4:	cmp	x0, #0x1
   2d7e8:	str	xzr, [x20, #8]
   2d7ec:	and	w1, w5, #0xfffffff0
   2d7f0:	strb	w1, [x20]
   2d7f4:	b.le	2d814 <PyInit__decimal@@Base+0x13294>
   2d7f8:	sub	x7, x7, #0x8
   2d7fc:	b	2d80c <PyInit__decimal@@Base+0x1328c>
   2d800:	sub	x0, x0, #0x1
   2d804:	cmp	x0, #0x1
   2d808:	b.eq	2d814 <PyInit__decimal@@Base+0x13294>  // b.none
   2d80c:	ldr	x1, [x7, x0, lsl #3]
   2d810:	cbz	x1, 2d800 <PyInit__decimal@@Base+0x13280>
   2d814:	ldr	x1, [x23, #1672]
   2d818:	str	x0, [x20, #24]
   2d81c:	ldr	x4, [x20, #32]
   2d820:	cmp	x1, x0
   2d824:	csel	x1, x1, x0, ge  // ge = tcont
   2d828:	cmp	x1, x4
   2d82c:	b.eq	2d83c <PyInit__decimal@@Base+0x132bc>  // b.none
   2d830:	tbz	w5, #5, 2d8dc <PyInit__decimal@@Base+0x1335c>
   2d834:	cmp	x1, x4
   2d838:	b.gt	2d8c8 <PyInit__decimal@@Base+0x13348>
   2d83c:	mov	x0, x20
   2d840:	str	x3, [sp, #64]
   2d844:	bl	28498 <PyInit__decimal@@Base+0xdf18>
   2d848:	ldp	x19, x20, [sp, #16]
   2d84c:	ldp	x21, x22, [sp, #32]
   2d850:	ldr	x23, [sp, #48]
   2d854:	ldr	x3, [sp, #64]
   2d858:	ldp	x29, x30, [sp], #80
   2d85c:	mov	x1, x3
   2d860:	b	27510 <PyInit__decimal@@Base+0xcf90>
   2d864:	ldr	x0, [x1, #24]
   2d868:	cmp	x4, x0
   2d86c:	cset	w0, cs  // cs = hs, nlast
   2d870:	add	w0, w0, #0x3
   2d874:	b	2d5a0 <PyInit__decimal@@Base+0x13020>
   2d878:	ldr	x0, [x1, #152]
   2d87c:	cmp	x4, x0
   2d880:	cset	w0, cs  // cs = hs, nlast
   2d884:	add	w0, w0, #0x13
   2d888:	b	2d5a0 <PyInit__decimal@@Base+0x13020>
   2d88c:	ldr	x0, [x1, #80]
   2d890:	cmp	x4, x0
   2d894:	cset	w0, cs  // cs = hs, nlast
   2d898:	add	w0, w0, #0xa
   2d89c:	b	2d5a0 <PyInit__decimal@@Base+0x13020>
   2d8a0:	ldr	x0, [x1, #40]
   2d8a4:	cmp	x4, x0
   2d8a8:	cset	w0, cs  // cs = hs, nlast
   2d8ac:	add	w0, w0, #0x5
   2d8b0:	b	2d5a0 <PyInit__decimal@@Base+0x13020>
   2d8b4:	ldr	x0, [x1, #136]
   2d8b8:	cmp	x4, x0
   2d8bc:	cset	w0, cs  // cs = hs, nlast
   2d8c0:	add	w0, w0, #0x11
   2d8c4:	b	2d5a0 <PyInit__decimal@@Base+0x13020>
   2d8c8:	mov	x0, x20
   2d8cc:	str	x3, [sp, #64]
   2d8d0:	bl	25438 <PyInit__decimal@@Base+0xaeb8>
   2d8d4:	ldr	x3, [sp, #64]
   2d8d8:	b	2d83c <PyInit__decimal@@Base+0x132bc>
   2d8dc:	mov	x0, x20
   2d8e0:	str	x3, [sp, #64]
   2d8e4:	bl	25588 <PyInit__decimal@@Base+0xb008>
   2d8e8:	ldr	x3, [sp, #64]
   2d8ec:	b	2d83c <PyInit__decimal@@Base+0x132bc>
   2d8f0:	sub	sp, sp, #0x6f0
   2d8f4:	mov	w8, #0x30                  	// #48
   2d8f8:	mov	x7, #0x40                  	// #64
   2d8fc:	add	x10, sp, #0xf0
   2d900:	add	x9, sp, #0x2f0
   2d904:	add	x5, sp, #0x4f0
   2d908:	stp	x29, x30, [sp]
   2d90c:	mov	x29, sp
   2d910:	stp	x19, x20, [sp, #16]
   2d914:	mov	x20, x1
   2d918:	mov	x19, x2
   2d91c:	stp	x21, x22, [sp, #32]
   2d920:	mov	x22, x0
   2d924:	mov	x21, x4
   2d928:	stp	x23, x24, [sp, #48]
   2d92c:	mov	x23, x3
   2d930:	ldrb	w1, [x1]
   2d934:	str	wzr, [sp, #92]
   2d938:	strb	w8, [sp, #96]
   2d93c:	tst	w1, #0xe
   2d940:	stp	xzr, xzr, [sp, #104]
   2d944:	stp	xzr, x7, [sp, #120]
   2d948:	str	x10, [sp, #136]
   2d94c:	strb	w8, [sp, #144]
   2d950:	stp	xzr, xzr, [sp, #152]
   2d954:	stp	xzr, x7, [sp, #168]
   2d958:	str	x9, [sp, #184]
   2d95c:	strb	w8, [sp, #192]
   2d960:	stp	xzr, xzr, [sp, #200]
   2d964:	stp	xzr, x7, [sp, #216]
   2d968:	str	x5, [sp, #232]
   2d96c:	b.ne	2d9b4 <PyInit__decimal@@Base+0x13434>  // b.any
   2d970:	ldrb	w0, [x2]
   2d974:	tst	w0, #0xe
   2d978:	b.ne	2d9b4 <PyInit__decimal@@Base+0x13434>  // b.any
   2d97c:	ldr	x0, [x19, #8]
   2d980:	cbnz	x0, 2d98c <PyInit__decimal@@Base+0x1340c>
   2d984:	ldrb	w0, [x19]
   2d988:	tbz	w0, #1, 2d9e8 <PyInit__decimal@@Base+0x13468>
   2d98c:	mov	x2, x21
   2d990:	mov	x0, x22
   2d994:	mov	w1, #0x100                 	// #256
   2d998:	bl	28d68 <PyInit__decimal@@Base+0xe7e8>
   2d99c:	ldp	x29, x30, [sp]
   2d9a0:	ldp	x19, x20, [sp, #16]
   2d9a4:	ldp	x21, x22, [sp, #32]
   2d9a8:	ldp	x23, x24, [sp, #48]
   2d9ac:	add	sp, sp, #0x6f0
   2d9b0:	ret
   2d9b4:	mov	x4, x21
   2d9b8:	mov	x3, x23
   2d9bc:	mov	x2, x19
   2d9c0:	mov	x1, x20
   2d9c4:	mov	x0, x22
   2d9c8:	bl	29108 <PyInit__decimal@@Base+0xeb88>
   2d9cc:	cbz	w0, 2d97c <PyInit__decimal@@Base+0x133fc>
   2d9d0:	ldp	x29, x30, [sp]
   2d9d4:	ldp	x19, x20, [sp, #16]
   2d9d8:	ldp	x21, x22, [sp, #32]
   2d9dc:	ldp	x23, x24, [sp, #48]
   2d9e0:	add	sp, sp, #0x6f0
   2d9e4:	ret
   2d9e8:	mov	x0, x19
   2d9ec:	add	x1, sp, #0x5c
   2d9f0:	bl	28e70 <PyInit__decimal@@Base+0xe8f0>
   2d9f4:	mov	x19, x0
   2d9f8:	ldr	w1, [sp, #92]
   2d9fc:	tbnz	w1, #8, 2d98c <PyInit__decimal@@Base+0x1340c>
   2da00:	ldr	x0, [x23]
   2da04:	cmp	x0, x19
   2da08:	b.lt	2d98c <PyInit__decimal@@Base+0x1340c>  // b.tstop
   2da0c:	neg	x1, x0
   2da10:	cmp	x1, x19
   2da14:	b.gt	2d98c <PyInit__decimal@@Base+0x1340c>
   2da18:	ldrb	w1, [x20]
   2da1c:	tbnz	w1, #1, 2db94 <PyInit__decimal@@Base+0x13614>
   2da20:	str	x25, [sp, #64]
   2da24:	sub	x25, x0, x19
   2da28:	tbz	x19, #63, 2da34 <PyInit__decimal@@Base+0x134b4>
   2da2c:	neg	x25, x19
   2da30:	add	x19, x0, x19
   2da34:	ldr	x1, [x20, #16]
   2da38:	cmp	x0, x1
   2da3c:	b.ge	2da68 <PyInit__decimal@@Base+0x134e8>  // b.tcont
   2da40:	add	x24, sp, #0x60
   2da44:	mov	x1, x20
   2da48:	mov	x0, x24
   2da4c:	mov	x2, x21
   2da50:	bl	28fe0 <PyInit__decimal@@Base+0xea60>
   2da54:	cbz	w0, 2dad8 <PyInit__decimal@@Base+0x13558>
   2da58:	mov	x20, x24
   2da5c:	mov	x1, x23
   2da60:	mov	x0, x24
   2da64:	bl	27510 <PyInit__decimal@@Base+0xcf90>
   2da68:	add	x24, sp, #0x90
   2da6c:	mov	x2, x19
   2da70:	mov	x0, x24
   2da74:	mov	x3, x21
   2da78:	mov	x1, x20
   2da7c:	bl	2a2e0 <PyInit__decimal@@Base+0xfd60>
   2da80:	cbz	w0, 2dad8 <PyInit__decimal@@Base+0x13558>
   2da84:	mov	x1, x23
   2da88:	mov	x0, x24
   2da8c:	add	x19, sp, #0xc0
   2da90:	bl	27510 <PyInit__decimal@@Base+0xcf90>
   2da94:	mov	x2, x25
   2da98:	mov	x1, x20
   2da9c:	mov	x0, x19
   2daa0:	mov	x3, x21
   2daa4:	bl	2bf80 <PyInit__decimal@@Base+0x11a00>
   2daa8:	cmn	x0, #0x1
   2daac:	b.eq	2dad8 <PyInit__decimal@@Base+0x13558>  // b.none
   2dab0:	ldrb	w3, [sp, #192]
   2dab4:	mov	x6, x21
   2dab8:	mov	x2, x19
   2dabc:	mov	x1, x24
   2dac0:	mov	x0, x22
   2dac4:	and	w3, w3, #0x1
   2dac8:	add	x5, x23, #0x24
   2dacc:	mov	x4, x23
   2dad0:	bl	2a3f0 <PyInit__decimal@@Base+0xfe70>
   2dad4:	b	2dae8 <PyInit__decimal@@Base+0x13568>
   2dad8:	mov	x2, x21
   2dadc:	mov	x0, x22
   2dae0:	mov	w1, #0x200                 	// #512
   2dae4:	bl	28d68 <PyInit__decimal@@Base+0xe7e8>
   2dae8:	ldrb	w0, [sp, #96]
   2daec:	tst	w0, #0xe0
   2daf0:	b.ne	2db08 <PyInit__decimal@@Base+0x13588>  // b.any
   2daf4:	adrp	x1, 5f000 <PyInit__decimal@@Base+0x44a80>
   2daf8:	ldr	x0, [sp, #136]
   2dafc:	ldr	x1, [x1, #1704]
   2db00:	blr	x1
   2db04:	ldrb	w0, [sp, #96]
   2db08:	tbnz	w0, #4, 2db1c <PyInit__decimal@@Base+0x1359c>
   2db0c:	adrp	x1, 5f000 <PyInit__decimal@@Base+0x44a80>
   2db10:	add	x0, sp, #0x60
   2db14:	ldr	x1, [x1, #1704]
   2db18:	blr	x1
   2db1c:	ldrb	w0, [sp, #144]
   2db20:	tst	w0, #0xe0
   2db24:	b.ne	2db3c <PyInit__decimal@@Base+0x135bc>  // b.any
   2db28:	adrp	x1, 5f000 <PyInit__decimal@@Base+0x44a80>
   2db2c:	ldr	x0, [sp, #184]
   2db30:	ldr	x1, [x1, #1704]
   2db34:	blr	x1
   2db38:	ldrb	w0, [sp, #144]
   2db3c:	tbnz	w0, #4, 2db50 <PyInit__decimal@@Base+0x135d0>
   2db40:	adrp	x1, 5f000 <PyInit__decimal@@Base+0x44a80>
   2db44:	add	x0, sp, #0x90
   2db48:	ldr	x1, [x1, #1704]
   2db4c:	blr	x1
   2db50:	ldrb	w0, [sp, #192]
   2db54:	tst	w0, #0xe0
   2db58:	b.ne	2db70 <PyInit__decimal@@Base+0x135f0>  // b.any
   2db5c:	adrp	x1, 5f000 <PyInit__decimal@@Base+0x44a80>
   2db60:	ldr	x0, [sp, #232]
   2db64:	ldr	x1, [x1, #1704]
   2db68:	blr	x1
   2db6c:	ldrb	w0, [sp, #192]
   2db70:	tbnz	w0, #4, 2db8c <PyInit__decimal@@Base+0x1360c>
   2db74:	adrp	x1, 5f000 <PyInit__decimal@@Base+0x44a80>
   2db78:	add	x0, sp, #0xc0
   2db7c:	ldr	x1, [x1, #1704]
   2db80:	blr	x1
   2db84:	ldr	x25, [sp, #64]
   2db88:	b	2d99c <PyInit__decimal@@Base+0x1341c>
   2db8c:	ldr	x25, [sp, #64]
   2db90:	b	2d99c <PyInit__decimal@@Base+0x1341c>
   2db94:	mov	x2, x21
   2db98:	mov	x1, x20
   2db9c:	mov	x0, x22
   2dba0:	bl	28fe0 <PyInit__decimal@@Base+0xea60>
   2dba4:	b	2d99c <PyInit__decimal@@Base+0x1341c>
   2dba8:	stp	x29, x30, [sp, #-80]!
   2dbac:	mov	x29, sp
   2dbb0:	stp	x19, x20, [sp, #16]
   2dbb4:	mov	x20, x1
   2dbb8:	mov	x19, x2
   2dbbc:	stp	x21, x22, [sp, #32]
   2dbc0:	mov	x21, x0
   2dbc4:	mov	x22, x4
   2dbc8:	str	x23, [sp, #48]
   2dbcc:	mov	x23, x3
   2dbd0:	str	wzr, [sp, #76]
   2dbd4:	ldrb	w5, [x1]
   2dbd8:	tst	w5, #0xe
   2dbdc:	b.ne	2dc20 <PyInit__decimal@@Base+0x136a0>  // b.any
   2dbe0:	ldrb	w0, [x2]
   2dbe4:	tst	w0, #0xe
   2dbe8:	b.ne	2dc20 <PyInit__decimal@@Base+0x136a0>  // b.any
   2dbec:	ldr	x0, [x19, #8]
   2dbf0:	cbnz	x0, 2dbfc <PyInit__decimal@@Base+0x1367c>
   2dbf4:	ldrb	w0, [x19]
   2dbf8:	tbz	w0, #1, 2dc50 <PyInit__decimal@@Base+0x136d0>
   2dbfc:	mov	x2, x22
   2dc00:	mov	x0, x21
   2dc04:	mov	w1, #0x100                 	// #256
   2dc08:	bl	28d68 <PyInit__decimal@@Base+0xe7e8>
   2dc0c:	ldp	x19, x20, [sp, #16]
   2dc10:	ldp	x21, x22, [sp, #32]
   2dc14:	ldr	x23, [sp, #48]
   2dc18:	ldp	x29, x30, [sp], #80
   2dc1c:	ret
   2dc20:	mov	x4, x22
   2dc24:	mov	x3, x23
   2dc28:	mov	x2, x19
   2dc2c:	mov	x1, x20
   2dc30:	mov	x0, x21
   2dc34:	bl	29108 <PyInit__decimal@@Base+0xeb88>
   2dc38:	cbz	w0, 2dbec <PyInit__decimal@@Base+0x1366c>
   2dc3c:	ldp	x19, x20, [sp, #16]
   2dc40:	ldp	x21, x22, [sp, #32]
   2dc44:	ldr	x23, [sp, #48]
   2dc48:	ldp	x29, x30, [sp], #80
   2dc4c:	ret
   2dc50:	mov	x1, x19
   2dc54:	add	x2, sp, #0x4c
   2dc58:	mov	w0, #0x0                   	// #0
   2dc5c:	bl	28808 <PyInit__decimal@@Base+0xe288>
   2dc60:	mov	x4, x0
   2dc64:	ldp	x1, x0, [x23]
   2dc68:	add	x0, x0, x1
   2dc6c:	cmp	x4, x0, lsl #1
   2dc70:	b.hi	2dbfc <PyInit__decimal@@Base+0x1367c>  // b.pmore
   2dc74:	ldr	w0, [sp, #76]
   2dc78:	tbnz	w0, #8, 2dbfc <PyInit__decimal@@Base+0x1367c>
   2dc7c:	ldrb	w0, [x20]
   2dc80:	tbnz	w0, #1, 2dd04 <PyInit__decimal@@Base+0x13784>
   2dc84:	ldrb	w3, [x19]
   2dc88:	mov	x5, #0x1                   	// #1
   2dc8c:	ldr	x19, [x20, #8]
   2dc90:	movk	x5, #0x4ec8, lsl #16
   2dc94:	sbfx	x3, x3, #0, #1
   2dc98:	movk	x5, #0x6d67, lsl #32
   2dc9c:	movk	x5, #0x1bc1, lsl #48
   2dca0:	mov	x1, x20
   2dca4:	lsl	w3, w3, #1
   2dca8:	mov	x2, x22
   2dcac:	add	w3, w3, #0x1
   2dcb0:	mov	x0, x21
   2dcb4:	sxtw	x3, w3
   2dcb8:	madd	x19, x3, x4, x19
   2dcbc:	cmp	x19, x5
   2dcc0:	csel	x19, x19, x5, le
   2dcc4:	bl	28fe0 <PyInit__decimal@@Base+0xea60>
   2dcc8:	mov	x0, #0xffffffff626fffff    	// #-2643460097
   2dccc:	mov	x2, x22
   2dcd0:	movk	x0, #0x2531, lsl #32
   2dcd4:	mov	x1, x23
   2dcd8:	movk	x0, #0xc87d, lsl #48
   2dcdc:	cmp	x19, x0
   2dce0:	csel	x19, x19, x0, ge  // ge = tcont
   2dce4:	str	x19, [x21, #8]
   2dce8:	mov	x0, x21
   2dcec:	bl	2b110 <PyInit__decimal@@Base+0x10b90>
   2dcf0:	ldp	x19, x20, [sp, #16]
   2dcf4:	ldp	x21, x22, [sp, #32]
   2dcf8:	ldr	x23, [sp, #48]
   2dcfc:	ldp	x29, x30, [sp], #80
   2dd00:	ret
   2dd04:	mov	x2, x22
   2dd08:	mov	x1, x20
   2dd0c:	mov	x0, x21
   2dd10:	bl	28fe0 <PyInit__decimal@@Base+0xea60>
   2dd14:	b	2dc0c <PyInit__decimal@@Base+0x1368c>
   2dd18:	stp	x29, x30, [sp, #-64]!
   2dd1c:	mov	x29, sp
   2dd20:	stp	x19, x20, [sp, #16]
   2dd24:	mov	x20, x3
   2dd28:	stp	x21, x22, [sp, #32]
   2dd2c:	mov	x22, x4
   2dd30:	str	x23, [sp, #48]
   2dd34:	mov	x23, x0
   2dd38:	ldrb	w3, [x1]
   2dd3c:	tst	w3, #0xe
   2dd40:	b.ne	2ddb8 <PyInit__decimal@@Base+0x13838>  // b.any
   2dd44:	mov	x19, x2
   2dd48:	ldr	x3, [x20]
   2dd4c:	tbnz	x2, #63, 2dd78 <PyInit__decimal@@Base+0x137f8>
   2dd50:	cmp	x2, x3
   2dd54:	b.le	2dde0 <PyInit__decimal@@Base+0x13860>
   2dd58:	mov	x2, x22
   2dd5c:	mov	x0, x23
   2dd60:	ldp	x19, x20, [sp, #16]
   2dd64:	mov	w1, #0x100                 	// #256
   2dd68:	ldp	x21, x22, [sp, #32]
   2dd6c:	ldr	x23, [sp, #48]
   2dd70:	ldp	x29, x30, [sp], #64
   2dd74:	b	28d68 <PyInit__decimal@@Base+0xe7e8>
   2dd78:	neg	x3, x3
   2dd7c:	cmp	x3, x2
   2dd80:	b.gt	2dd58 <PyInit__decimal@@Base+0x137d8>
   2dd84:	mov	x2, x4
   2dd88:	bl	28fe0 <PyInit__decimal@@Base+0xea60>
   2dd8c:	cbz	w0, 2ddcc <PyInit__decimal@@Base+0x1384c>
   2dd90:	mov	x1, x20
   2dd94:	mov	x0, x23
   2dd98:	bl	27510 <PyInit__decimal@@Base+0xcf90>
   2dd9c:	neg	x1, x19
   2dda0:	mov	x0, x23
   2dda4:	ldp	x19, x20, [sp, #16]
   2dda8:	ldp	x21, x22, [sp, #32]
   2ddac:	ldr	x23, [sp, #48]
   2ddb0:	ldp	x29, x30, [sp], #64
   2ddb4:	b	2aa80 <PyInit__decimal@@Base+0x10500>
   2ddb8:	mov	x21, x1
   2ddbc:	mov	x2, x20
   2ddc0:	mov	x3, x4
   2ddc4:	bl	29098 <PyInit__decimal@@Base+0xeb18>
   2ddc8:	cbz	w0, 2de04 <PyInit__decimal@@Base+0x13884>
   2ddcc:	ldp	x19, x20, [sp, #16]
   2ddd0:	ldp	x21, x22, [sp, #32]
   2ddd4:	ldr	x23, [sp, #48]
   2ddd8:	ldp	x29, x30, [sp], #64
   2dddc:	ret
   2dde0:	mov	x3, x4
   2dde4:	bl	2a2e0 <PyInit__decimal@@Base+0xfd60>
   2dde8:	mov	x1, x20
   2ddec:	mov	x0, x23
   2ddf0:	ldp	x19, x20, [sp, #16]
   2ddf4:	ldp	x21, x22, [sp, #32]
   2ddf8:	ldr	x23, [sp, #48]
   2ddfc:	ldp	x29, x30, [sp], #64
   2de00:	b	27510 <PyInit__decimal@@Base+0xcf90>
   2de04:	mov	x2, x22
   2de08:	mov	x1, x21
   2de0c:	mov	x0, x23
   2de10:	ldp	x19, x20, [sp, #16]
   2de14:	ldp	x21, x22, [sp, #32]
   2de18:	ldr	x23, [sp, #48]
   2de1c:	ldp	x29, x30, [sp], #64
   2de20:	b	28fe0 <PyInit__decimal@@Base+0xea60>
   2de24:	nop
   2de28:	stp	x29, x30, [sp, #-80]!
   2de2c:	mov	x29, sp
   2de30:	stp	x19, x20, [sp, #16]
   2de34:	mov	x20, x1
   2de38:	mov	x19, x2
   2de3c:	stp	x21, x22, [sp, #32]
   2de40:	mov	x21, x0
   2de44:	mov	x22, x4
   2de48:	str	x23, [sp, #48]
   2de4c:	mov	x23, x3
   2de50:	str	wzr, [sp, #76]
   2de54:	ldrb	w0, [x1]
   2de58:	tst	w0, #0xe
   2de5c:	b.ne	2dea0 <PyInit__decimal@@Base+0x13920>  // b.any
   2de60:	ldrb	w0, [x2]
   2de64:	tst	w0, #0xe
   2de68:	b.ne	2dea0 <PyInit__decimal@@Base+0x13920>  // b.any
   2de6c:	ldr	x0, [x19, #8]
   2de70:	cbnz	x0, 2de7c <PyInit__decimal@@Base+0x138fc>
   2de74:	ldrb	w0, [x19]
   2de78:	tbz	w0, #1, 2ded0 <PyInit__decimal@@Base+0x13950>
   2de7c:	mov	x2, x22
   2de80:	mov	x0, x21
   2de84:	mov	w1, #0x100                 	// #256
   2de88:	bl	28d68 <PyInit__decimal@@Base+0xe7e8>
   2de8c:	ldp	x19, x20, [sp, #16]
   2de90:	ldp	x21, x22, [sp, #32]
   2de94:	ldr	x23, [sp, #48]
   2de98:	ldp	x29, x30, [sp], #80
   2de9c:	ret
   2dea0:	mov	x4, x22
   2dea4:	mov	x3, x23
   2dea8:	mov	x2, x19
   2deac:	mov	x1, x20
   2deb0:	mov	x0, x21
   2deb4:	bl	29108 <PyInit__decimal@@Base+0xeb88>
   2deb8:	cbz	w0, 2de6c <PyInit__decimal@@Base+0x138ec>
   2debc:	ldp	x19, x20, [sp, #16]
   2dec0:	ldp	x21, x22, [sp, #32]
   2dec4:	ldr	x23, [sp, #48]
   2dec8:	ldp	x29, x30, [sp], #80
   2decc:	ret
   2ded0:	mov	x0, x19
   2ded4:	add	x1, sp, #0x4c
   2ded8:	bl	28e70 <PyInit__decimal@@Base+0xe8f0>
   2dedc:	mov	x19, x0
   2dee0:	ldr	w1, [sp, #76]
   2dee4:	tbnz	w1, #8, 2de7c <PyInit__decimal@@Base+0x138fc>
   2dee8:	ldr	x0, [x23]
   2deec:	cmp	x0, x19
   2def0:	b.lt	2de7c <PyInit__decimal@@Base+0x138fc>  // b.tstop
   2def4:	neg	x0, x0
   2def8:	cmp	x0, x19
   2defc:	b.gt	2de7c <PyInit__decimal@@Base+0x138fc>
   2df00:	ldrb	w0, [x20]
   2df04:	tbnz	w0, #1, 2df60 <PyInit__decimal@@Base+0x139e0>
   2df08:	tbnz	x19, #63, 2df30 <PyInit__decimal@@Base+0x139b0>
   2df0c:	mov	x3, x22
   2df10:	mov	x2, x19
   2df14:	mov	x1, x20
   2df18:	mov	x0, x21
   2df1c:	bl	2a2e0 <PyInit__decimal@@Base+0xfd60>
   2df20:	mov	x1, x23
   2df24:	mov	x0, x21
   2df28:	bl	27510 <PyInit__decimal@@Base+0xcf90>
   2df2c:	b	2de8c <PyInit__decimal@@Base+0x1390c>
   2df30:	mov	x2, x22
   2df34:	mov	x1, x20
   2df38:	mov	x0, x21
   2df3c:	bl	28fe0 <PyInit__decimal@@Base+0xea60>
   2df40:	cbz	w0, 2de8c <PyInit__decimal@@Base+0x1390c>
   2df44:	mov	x1, x23
   2df48:	mov	x0, x21
   2df4c:	bl	27510 <PyInit__decimal@@Base+0xcf90>
   2df50:	neg	x1, x19
   2df54:	mov	x0, x21
   2df58:	bl	2aa80 <PyInit__decimal@@Base+0x10500>
   2df5c:	b	2de8c <PyInit__decimal@@Base+0x1390c>
   2df60:	mov	x2, x22
   2df64:	mov	x1, x20
   2df68:	mov	x0, x21
   2df6c:	bl	28fe0 <PyInit__decimal@@Base+0xea60>
   2df70:	b	2de8c <PyInit__decimal@@Base+0x1390c>
   2df74:	nop
   2df78:	stp	x29, x30, [sp, #-80]!
   2df7c:	mov	x6, x2
   2df80:	mov	x2, x4
   2df84:	mov	x29, sp
   2df88:	stp	x19, x20, [sp, #16]
   2df8c:	mov	x20, x0
   2df90:	ldrb	w5, [x1]
   2df94:	tst	w5, #0xe
   2df98:	b.ne	2dfb4 <PyInit__decimal@@Base+0x13a34>  // b.any
   2df9c:	ldrb	w7, [x6]
   2dfa0:	orr	w5, w7, w5
   2dfa4:	and	w7, w7, #0xe
   2dfa8:	and	w5, w5, #0x1
   2dfac:	orr	w5, w5, w7
   2dfb0:	cbz	w5, 2dfc8 <PyInit__decimal@@Base+0x13a48>
   2dfb4:	mov	x0, x20
   2dfb8:	mov	w1, #0x100                 	// #256
   2dfbc:	ldp	x19, x20, [sp, #16]
   2dfc0:	ldp	x29, x30, [sp], #80
   2dfc4:	b	28d68 <PyInit__decimal@@Base+0xe7e8>
   2dfc8:	ldr	x4, [x1, #8]
   2dfcc:	cbnz	x4, 2dfb4 <PyInit__decimal@@Base+0x13a34>
   2dfd0:	stp	x21, x22, [sp, #32]
   2dfd4:	ldr	x21, [x6, #8]
   2dfd8:	cbnz	x21, 2e280 <PyInit__decimal@@Base+0x13d00>
   2dfdc:	ldr	x5, [x1, #16]
   2dfe0:	ldr	x7, [x6, #16]
   2dfe4:	cmp	x7, x5
   2dfe8:	csel	x22, x1, x6, le
   2dfec:	csel	x19, x6, x1, le
   2dff0:	ldr	x5, [x0, #32]
   2dff4:	ldr	x1, [x22, #24]
   2dff8:	str	x23, [sp, #48]
   2dffc:	adrp	x23, 5f000 <PyInit__decimal@@Base+0x44a80>
   2e000:	ldr	x4, [x23, #1672]
   2e004:	cmp	x1, x4
   2e008:	csel	x1, x1, x4, ge  // ge = tcont
   2e00c:	cmp	x1, x5
   2e010:	b.eq	2e024 <PyInit__decimal@@Base+0x13aa4>  // b.none
   2e014:	ldrb	w4, [x0]
   2e018:	tbz	w4, #5, 2e2ac <PyInit__decimal@@Base+0x13d2c>
   2e01c:	cmp	x1, x5
   2e020:	b.gt	2e288 <PyInit__decimal@@Base+0x13d08>
   2e024:	ldr	x0, [x19, #24]
   2e028:	mov	x10, #0xcccccccccccccccc    	// #-3689348814741910324
   2e02c:	adrp	x12, 42000 <PyInit__decimal@@Base+0x27a80>
   2e030:	movk	x10, #0xcccd
   2e034:	sub	x0, x0, #0x1
   2e038:	cmp	x0, #0x0
   2e03c:	ldr	x14, [x19, #40]
   2e040:	ldr	x13, [x22, #40]
   2e044:	b.le	2e2bc <PyInit__decimal@@Base+0x13d3c>
   2e048:	add	x6, x12, #0x2d0
   2e04c:	lsl	x15, x21, #3
   2e050:	add	x11, x6, #0x98
   2e054:	mov	x4, #0x0                   	// #0
   2e058:	ldr	x8, [x14, x21, lsl #3]
   2e05c:	ldr	x7, [x13, x21, lsl #3]
   2e060:	b	2e080 <PyInit__decimal@@Base+0x13b00>
   2e064:	cmp	x5, x1
   2e068:	b.eq	2e074 <PyInit__decimal@@Base+0x13af4>  // b.none
   2e06c:	ldr	x0, [x6]
   2e070:	add	x4, x4, x0
   2e074:	add	x6, x6, #0x8
   2e078:	cmp	x11, x6
   2e07c:	b.eq	2e0d0 <PyInit__decimal@@Base+0x13b50>  // b.none
   2e080:	umulh	x9, x8, x10
   2e084:	umulh	x0, x7, x10
   2e088:	lsr	x5, x9, #3
   2e08c:	lsr	x1, x0, #3
   2e090:	add	x5, x5, x5, lsl #2
   2e094:	add	x1, x1, x1, lsl #2
   2e098:	sub	x5, x8, x5, lsl #1
   2e09c:	lsr	x8, x9, #3
   2e0a0:	sub	x1, x7, x1, lsl #1
   2e0a4:	cmp	x5, #0x1
   2e0a8:	ccmp	x1, #0x1, #0x2, ls  // ls = plast
   2e0ac:	lsr	x7, x0, #3
   2e0b0:	b.ls	2e064 <PyInit__decimal@@Base+0x13ae4>  // b.plast
   2e0b4:	mov	x0, x20
   2e0b8:	mov	w1, #0x100                 	// #256
   2e0bc:	ldp	x19, x20, [sp, #16]
   2e0c0:	ldp	x21, x22, [sp, #32]
   2e0c4:	ldr	x23, [sp, #48]
   2e0c8:	ldp	x29, x30, [sp], #80
   2e0cc:	b	28d68 <PyInit__decimal@@Base+0xe7e8>
   2e0d0:	ldr	x0, [x20, #40]
   2e0d4:	add	x21, x21, #0x1
   2e0d8:	str	x4, [x0, x15]
   2e0dc:	ldr	x0, [x19, #24]
   2e0e0:	sub	x0, x0, #0x1
   2e0e4:	cmp	x0, x21
   2e0e8:	b.gt	2e048 <PyInit__decimal@@Base+0x13ac8>
   2e0ec:	lsl	x16, x21, #3
   2e0f0:	add	x14, x14, x16
   2e0f4:	add	x4, x13, x16
   2e0f8:	add	x1, x12, #0x2d0
   2e0fc:	ldr	x5, [x14]
   2e100:	ldr	x0, [x1, #72]
   2e104:	ldr	x6, [x4]
   2e108:	cmp	x5, x0
   2e10c:	b.cs	2e2c8 <PyInit__decimal@@Base+0x13d48>  // b.hs, b.nlast
   2e110:	ldr	x0, [x1, #32]
   2e114:	cmp	x5, x0
   2e118:	b.cs	2e304 <PyInit__decimal@@Base+0x13d84>  // b.hs, b.nlast
   2e11c:	ldr	x0, [x1, #16]
   2e120:	cmp	x5, x0
   2e124:	b.cs	2e3f8 <PyInit__decimal@@Base+0x13e78>  // b.hs, b.nlast
   2e128:	ldr	x0, [x1, #8]
   2e12c:	cmp	x5, x0
   2e130:	cset	w0, cs  // cs = hs, nlast
   2e134:	add	w0, w0, #0x1
   2e138:	sub	w0, w0, #0x1
   2e13c:	mov	x14, #0xcccccccccccccccc    	// #-3689348814741910324
   2e140:	adrp	x17, 42000 <PyInit__decimal@@Base+0x27a80>
   2e144:	add	x15, x0, #0x2
   2e148:	add	x17, x17, #0x2c8
   2e14c:	mov	x4, #0x1                   	// #1
   2e150:	mov	x11, #0x0                   	// #0
   2e154:	movk	x14, #0xcccd
   2e158:	b	2e160 <PyInit__decimal@@Base+0x13be0>
   2e15c:	mov	x4, x10
   2e160:	umulh	x9, x5, x14
   2e164:	add	x10, x4, #0x1
   2e168:	umulh	x8, x6, x14
   2e16c:	mov	w7, w4
   2e170:	lsr	x1, x9, #3
   2e174:	lsr	x0, x8, #3
   2e178:	add	x1, x1, x1, lsl #2
   2e17c:	add	x0, x0, x0, lsl #2
   2e180:	sub	x1, x5, x1, lsl #1
   2e184:	lsr	x5, x9, #3
   2e188:	sub	x0, x6, x0, lsl #1
   2e18c:	cmp	x1, #0x1
   2e190:	ccmp	x0, #0x1, #0x2, ls  // ls = plast
   2e194:	lsr	x6, x8, #3
   2e198:	b.hi	2e0b4 <PyInit__decimal@@Base+0x13b34>  // b.pmore
   2e19c:	cmp	x1, x0
   2e1a0:	b.eq	2e1ac <PyInit__decimal@@Base+0x13c2c>  // b.none
   2e1a4:	ldr	x0, [x17, x4, lsl #3]
   2e1a8:	add	x11, x11, x0
   2e1ac:	cmp	x15, x10
   2e1b0:	b.ne	2e15c <PyInit__decimal@@Base+0x13bdc>  // b.any
   2e1b4:	cmp	w7, #0x12
   2e1b8:	b.gt	2e228 <PyInit__decimal@@Base+0x13ca8>
   2e1bc:	mov	x8, #0xcccccccccccccccc    	// #-3689348814741910324
   2e1c0:	movk	x8, #0xcccd
   2e1c4:	umulh	x5, x6, x8
   2e1c8:	lsr	x0, x5, #3
   2e1cc:	mov	x5, x0
   2e1d0:	add	x0, x0, x0, lsl #2
   2e1d4:	sub	x0, x6, x0, lsl #1
   2e1d8:	cmp	x0, #0x1
   2e1dc:	b.hi	2e0b4 <PyInit__decimal@@Base+0x13b34>  // b.pmore
   2e1e0:	sxtw	x1, w7
   2e1e4:	mov	w7, #0x12                  	// #18
   2e1e8:	sub	w4, w7, w4
   2e1ec:	add	x12, x12, #0x2d0
   2e1f0:	add	x7, x4, x1
   2e1f4:	b	2e20c <PyInit__decimal@@Base+0x13c8c>
   2e1f8:	add	x0, x0, x0, lsl #2
   2e1fc:	sub	x0, x5, x0, lsl #1
   2e200:	lsr	x5, x6, #3
   2e204:	cmp	x0, #0x1
   2e208:	b.hi	2e0b4 <PyInit__decimal@@Base+0x13b34>  // b.pmore
   2e20c:	ldr	x4, [x12, x1, lsl #3]
   2e210:	umulh	x6, x5, x8
   2e214:	cmp	x7, x1
   2e218:	add	x1, x1, #0x1
   2e21c:	madd	x11, x0, x4, x11
   2e220:	lsr	x0, x6, #3
   2e224:	b.ne	2e1f8 <PyInit__decimal@@Base+0x13c78>  // b.any
   2e228:	ldr	x7, [x20, #40]
   2e22c:	add	x21, x21, #0x1
   2e230:	str	x11, [x7, x16]
   2e234:	ldr	x0, [x22, #24]
   2e238:	cmp	x21, x0
   2e23c:	b.ge	2e374 <PyInit__decimal@@Base+0x13df4>  // b.tcont
   2e240:	mov	x6, #0xcccccccccccccccc    	// #-3689348814741910324
   2e244:	movk	x6, #0xcccd
   2e248:	ldr	x8, [x13, x21, lsl #3]
   2e24c:	mov	w5, #0x13                  	// #19
   2e250:	mov	x1, x8
   2e254:	b	2e260 <PyInit__decimal@@Base+0x13ce0>
   2e258:	subs	w5, w5, #0x1
   2e25c:	b.eq	2e360 <PyInit__decimal@@Base+0x13de0>  // b.none
   2e260:	umulh	x4, x1, x6
   2e264:	lsr	x0, x4, #3
   2e268:	add	x0, x0, x0, lsl #2
   2e26c:	sub	x0, x1, x0, lsl #1
   2e270:	lsr	x1, x4, #3
   2e274:	cmp	x0, #0x1
   2e278:	b.ls	2e258 <PyInit__decimal@@Base+0x13cd8>  // b.plast
   2e27c:	b	2e0b4 <PyInit__decimal@@Base+0x13b34>
   2e280:	ldp	x21, x22, [sp, #32]
   2e284:	b	2dfb4 <PyInit__decimal@@Base+0x13a34>
   2e288:	stp	x2, x3, [sp, #64]
   2e28c:	bl	25438 <PyInit__decimal@@Base+0xaeb8>
   2e290:	ldp	x2, x3, [sp, #64]
   2e294:	cbnz	w0, 2e024 <PyInit__decimal@@Base+0x13aa4>
   2e298:	ldp	x19, x20, [sp, #16]
   2e29c:	ldp	x21, x22, [sp, #32]
   2e2a0:	ldr	x23, [sp, #48]
   2e2a4:	ldp	x29, x30, [sp], #80
   2e2a8:	ret
   2e2ac:	stp	x2, x3, [sp, #64]
   2e2b0:	bl	25588 <PyInit__decimal@@Base+0xb008>
   2e2b4:	ldp	x2, x3, [sp, #64]
   2e2b8:	b	2e294 <PyInit__decimal@@Base+0x13d14>
   2e2bc:	mov	x4, x13
   2e2c0:	mov	x16, #0x0                   	// #0
   2e2c4:	b	2e0f8 <PyInit__decimal@@Base+0x13b78>
   2e2c8:	ldr	x0, [x1, #112]
   2e2cc:	cmp	x5, x0
   2e2d0:	b.cs	2e334 <PyInit__decimal@@Base+0x13db4>  // b.hs, b.nlast
   2e2d4:	ldr	x0, [x1, #88]
   2e2d8:	cmp	x5, x0
   2e2dc:	b.cc	2e420 <PyInit__decimal@@Base+0x13ea0>  // b.lo, b.ul, b.last
   2e2e0:	ldr	x4, [x1, #104]
   2e2e4:	mov	w0, #0xe                   	// #14
   2e2e8:	cmp	x5, x4
   2e2ec:	b.cs	2e138 <PyInit__decimal@@Base+0x13bb8>  // b.hs, b.nlast
   2e2f0:	ldr	x0, [x1, #96]
   2e2f4:	cmp	x5, x0
   2e2f8:	cset	w0, cs  // cs = hs, nlast
   2e2fc:	add	w0, w0, #0xc
   2e300:	b	2e138 <PyInit__decimal@@Base+0x13bb8>
   2e304:	ldr	x0, [x1, #48]
   2e308:	cmp	x5, x0
   2e30c:	b.cc	2e434 <PyInit__decimal@@Base+0x13eb4>  // b.lo, b.ul, b.last
   2e310:	ldr	x4, [x1, #64]
   2e314:	mov	w0, #0x9                   	// #9
   2e318:	cmp	x5, x4
   2e31c:	b.cs	2e138 <PyInit__decimal@@Base+0x13bb8>  // b.hs, b.nlast
   2e320:	ldr	x0, [x1, #56]
   2e324:	cmp	x5, x0
   2e328:	cset	w0, cs  // cs = hs, nlast
   2e32c:	add	w0, w0, #0x7
   2e330:	b	2e138 <PyInit__decimal@@Base+0x13bb8>
   2e334:	ldr	x0, [x1, #144]
   2e338:	cmp	x5, x0
   2e33c:	b.cs	2e40c <PyInit__decimal@@Base+0x13e8c>  // b.hs, b.nlast
   2e340:	ldr	x0, [x1, #128]
   2e344:	cmp	x5, x0
   2e348:	b.cs	2e448 <PyInit__decimal@@Base+0x13ec8>  // b.hs, b.nlast
   2e34c:	ldr	x0, [x1, #120]
   2e350:	cmp	x5, x0
   2e354:	cset	w0, cs  // cs = hs, nlast
   2e358:	add	w0, w0, #0xf
   2e35c:	b	2e138 <PyInit__decimal@@Base+0x13bb8>
   2e360:	str	x8, [x7, x21, lsl #3]
   2e364:	add	x21, x21, #0x1
   2e368:	ldr	x0, [x22, #24]
   2e36c:	cmp	x0, x21
   2e370:	b.gt	2e248 <PyInit__decimal@@Base+0x13cc8>
   2e374:	ldrb	w5, [x20]
   2e378:	cmp	x0, #0x1
   2e37c:	str	xzr, [x20, #8]
   2e380:	and	w1, w5, #0xfffffff0
   2e384:	strb	w1, [x20]
   2e388:	b.le	2e3a8 <PyInit__decimal@@Base+0x13e28>
   2e38c:	sub	x7, x7, #0x8
   2e390:	b	2e3a0 <PyInit__decimal@@Base+0x13e20>
   2e394:	sub	x0, x0, #0x1
   2e398:	cmp	x0, #0x1
   2e39c:	b.eq	2e3a8 <PyInit__decimal@@Base+0x13e28>  // b.none
   2e3a0:	ldr	x1, [x7, x0, lsl #3]
   2e3a4:	cbz	x1, 2e394 <PyInit__decimal@@Base+0x13e14>
   2e3a8:	ldr	x1, [x23, #1672]
   2e3ac:	str	x0, [x20, #24]
   2e3b0:	ldr	x4, [x20, #32]
   2e3b4:	cmp	x1, x0
   2e3b8:	csel	x1, x1, x0, ge  // ge = tcont
   2e3bc:	cmp	x1, x4
   2e3c0:	b.eq	2e3d0 <PyInit__decimal@@Base+0x13e50>  // b.none
   2e3c4:	tbz	w5, #5, 2e470 <PyInit__decimal@@Base+0x13ef0>
   2e3c8:	cmp	x1, x4
   2e3cc:	b.gt	2e45c <PyInit__decimal@@Base+0x13edc>
   2e3d0:	mov	x0, x20
   2e3d4:	str	x3, [sp, #64]
   2e3d8:	bl	28498 <PyInit__decimal@@Base+0xdf18>
   2e3dc:	ldp	x19, x20, [sp, #16]
   2e3e0:	ldp	x21, x22, [sp, #32]
   2e3e4:	ldr	x23, [sp, #48]
   2e3e8:	ldr	x3, [sp, #64]
   2e3ec:	ldp	x29, x30, [sp], #80
   2e3f0:	mov	x1, x3
   2e3f4:	b	27510 <PyInit__decimal@@Base+0xcf90>
   2e3f8:	ldr	x0, [x1, #24]
   2e3fc:	cmp	x5, x0
   2e400:	cset	w0, cs  // cs = hs, nlast
   2e404:	add	w0, w0, #0x3
   2e408:	b	2e138 <PyInit__decimal@@Base+0x13bb8>
   2e40c:	ldr	x0, [x1, #152]
   2e410:	cmp	x5, x0
   2e414:	cset	w0, cs  // cs = hs, nlast
   2e418:	add	w0, w0, #0x13
   2e41c:	b	2e138 <PyInit__decimal@@Base+0x13bb8>
   2e420:	ldr	x0, [x1, #80]
   2e424:	cmp	x5, x0
   2e428:	cset	w0, cs  // cs = hs, nlast
   2e42c:	add	w0, w0, #0xa
   2e430:	b	2e138 <PyInit__decimal@@Base+0x13bb8>
   2e434:	ldr	x0, [x1, #40]
   2e438:	cmp	x5, x0
   2e43c:	cset	w0, cs  // cs = hs, nlast
   2e440:	add	w0, w0, #0x5
   2e444:	b	2e138 <PyInit__decimal@@Base+0x13bb8>
   2e448:	ldr	x0, [x1, #136]
   2e44c:	cmp	x5, x0
   2e450:	cset	w0, cs  // cs = hs, nlast
   2e454:	add	w0, w0, #0x11
   2e458:	b	2e138 <PyInit__decimal@@Base+0x13bb8>
   2e45c:	mov	x0, x20
   2e460:	str	x3, [sp, #64]
   2e464:	bl	25438 <PyInit__decimal@@Base+0xaeb8>
   2e468:	ldr	x3, [sp, #64]
   2e46c:	b	2e3d0 <PyInit__decimal@@Base+0x13e50>
   2e470:	mov	x0, x20
   2e474:	str	x3, [sp, #64]
   2e478:	bl	25588 <PyInit__decimal@@Base+0xb008>
   2e47c:	ldr	x3, [sp, #64]
   2e480:	b	2e3d0 <PyInit__decimal@@Base+0x13e50>
   2e484:	nop
   2e488:	stp	x29, x30, [sp, #-64]!
   2e48c:	mov	x29, sp
   2e490:	stp	x19, x20, [sp, #16]
   2e494:	mov	x19, x1
   2e498:	mov	x20, x2
   2e49c:	stp	x21, x22, [sp, #32]
   2e4a0:	mov	x22, x3
   2e4a4:	mov	x21, x4
   2e4a8:	str	x23, [sp, #48]
   2e4ac:	mov	x23, x0
   2e4b0:	ldrb	w3, [x1]
   2e4b4:	tst	w3, #0xe
   2e4b8:	b.ne	2e4c8 <PyInit__decimal@@Base+0x13f48>  // b.any
   2e4bc:	ldrb	w3, [x2]
   2e4c0:	tst	w3, #0xe
   2e4c4:	b.eq	2e4f8 <PyInit__decimal@@Base+0x13f78>  // b.none
   2e4c8:	mov	x3, x22
   2e4cc:	mov	x4, x21
   2e4d0:	mov	x2, x20
   2e4d4:	mov	x1, x19
   2e4d8:	mov	x0, x23
   2e4dc:	bl	29108 <PyInit__decimal@@Base+0xeb88>
   2e4e0:	cbz	w0, 2e52c <PyInit__decimal@@Base+0x13fac>
   2e4e4:	ldp	x19, x20, [sp, #16]
   2e4e8:	ldp	x21, x22, [sp, #32]
   2e4ec:	ldr	x23, [sp, #48]
   2e4f0:	ldp	x29, x30, [sp], #64
   2e4f4:	ret
   2e4f8:	mov	x6, x4
   2e4fc:	add	x5, x22, #0x24
   2e500:	mov	x4, x22
   2e504:	and	w3, w3, #0x1
   2e508:	bl	2a3f0 <PyInit__decimal@@Base+0xfe70>
   2e50c:	mov	x2, x21
   2e510:	mov	x1, x22
   2e514:	mov	x0, x23
   2e518:	ldp	x19, x20, [sp, #16]
   2e51c:	ldp	x21, x22, [sp, #32]
   2e520:	ldr	x23, [sp, #48]
   2e524:	ldp	x29, x30, [sp], #64
   2e528:	b	2b110 <PyInit__decimal@@Base+0x10b90>
   2e52c:	ldrb	w3, [x20]
   2e530:	mov	x4, x21
   2e534:	ldrb	w1, [x19]
   2e538:	mov	x0, x23
   2e53c:	mov	x2, x20
   2e540:	and	w3, w3, #0x1
   2e544:	ldp	x19, x20, [sp, #16]
   2e548:	ldp	x21, x22, [sp, #32]
   2e54c:	ldr	x23, [sp, #48]
   2e550:	ldp	x29, x30, [sp], #64
   2e554:	b	28e00 <PyInit__decimal@@Base+0xe880>
   2e558:	stp	x29, x30, [sp, #-48]!
   2e55c:	mov	x29, sp
   2e560:	stp	x19, x20, [sp, #16]
   2e564:	mov	x19, x4
   2e568:	mov	x20, x0
   2e56c:	add	x4, sp, #0x2c
   2e570:	str	wzr, [sp, #44]
   2e574:	bl	2e488 <PyInit__decimal@@Base+0x13f08>
   2e578:	ldr	w1, [x19]
   2e57c:	mov	w2, #0x1041                	// #4161
   2e580:	ldr	w0, [sp, #44]
   2e584:	orr	w1, w1, w0
   2e588:	str	w1, [x19]
   2e58c:	tst	w0, w2
   2e590:	b.ne	2e5a0 <PyInit__decimal@@Base+0x14020>  // b.any
   2e594:	ldp	x19, x20, [sp, #16]
   2e598:	ldp	x29, x30, [sp], #48
   2e59c:	ret
   2e5a0:	mov	x2, x19
   2e5a4:	mov	x0, x20
   2e5a8:	mov	w1, #0x100                 	// #256
   2e5ac:	bl	28d68 <PyInit__decimal@@Base+0xe7e8>
   2e5b0:	ldp	x19, x20, [sp, #16]
   2e5b4:	ldp	x29, x30, [sp], #48
   2e5b8:	ret
   2e5bc:	nop
   2e5c0:	stp	x29, x30, [sp, #-64]!
   2e5c4:	mov	x29, sp
   2e5c8:	stp	x19, x20, [sp, #16]
   2e5cc:	mov	x19, x1
   2e5d0:	mov	x20, x2
   2e5d4:	stp	x21, x22, [sp, #32]
   2e5d8:	mov	x22, x3
   2e5dc:	mov	x21, x4
   2e5e0:	str	x23, [sp, #48]
   2e5e4:	mov	x23, x0
   2e5e8:	ldrb	w3, [x1]
   2e5ec:	tst	w3, #0xe
   2e5f0:	b.ne	2e600 <PyInit__decimal@@Base+0x14080>  // b.any
   2e5f4:	ldrb	w3, [x2]
   2e5f8:	tst	w3, #0xe
   2e5fc:	b.eq	2e630 <PyInit__decimal@@Base+0x140b0>  // b.none
   2e600:	mov	x3, x22
   2e604:	mov	x4, x21
   2e608:	mov	x2, x20
   2e60c:	mov	x1, x19
   2e610:	mov	x0, x23
   2e614:	bl	29108 <PyInit__decimal@@Base+0xeb88>
   2e618:	cbz	w0, 2e668 <PyInit__decimal@@Base+0x140e8>
   2e61c:	ldp	x19, x20, [sp, #16]
   2e620:	ldp	x21, x22, [sp, #32]
   2e624:	ldr	x23, [sp, #48]
   2e628:	ldp	x29, x30, [sp], #64
   2e62c:	ret
   2e630:	mvn	w3, w3
   2e634:	mov	x6, x4
   2e638:	add	x5, x22, #0x24
   2e63c:	mov	x4, x22
   2e640:	and	w3, w3, #0x1
   2e644:	bl	2a3f0 <PyInit__decimal@@Base+0xfe70>
   2e648:	mov	x2, x21
   2e64c:	mov	x1, x22
   2e650:	mov	x0, x23
   2e654:	ldp	x19, x20, [sp, #16]
   2e658:	ldp	x21, x22, [sp, #32]
   2e65c:	ldr	x23, [sp, #48]
   2e660:	ldp	x29, x30, [sp], #64
   2e664:	b	2b110 <PyInit__decimal@@Base+0x10b90>
   2e668:	ldrb	w3, [x20]
   2e66c:	mov	x4, x21
   2e670:	ldrb	w1, [x19]
   2e674:	mov	x0, x23
   2e678:	mov	x2, x20
   2e67c:	mvn	w3, w3
   2e680:	ldp	x19, x20, [sp, #16]
   2e684:	and	w3, w3, #0x1
   2e688:	ldp	x21, x22, [sp, #32]
   2e68c:	ldr	x23, [sp, #48]
   2e690:	ldp	x29, x30, [sp], #64
   2e694:	b	28e00 <PyInit__decimal@@Base+0xe880>
   2e698:	stp	x29, x30, [sp, #-48]!
   2e69c:	mov	x29, sp
   2e6a0:	stp	x19, x20, [sp, #16]
   2e6a4:	mov	x19, x4
   2e6a8:	mov	x20, x0
   2e6ac:	add	x4, sp, #0x2c
   2e6b0:	str	wzr, [sp, #44]
   2e6b4:	bl	2e5c0 <PyInit__decimal@@Base+0x14040>
   2e6b8:	ldr	w1, [x19]
   2e6bc:	mov	w2, #0x1041                	// #4161
   2e6c0:	ldr	w0, [sp, #44]
   2e6c4:	orr	w1, w1, w0
   2e6c8:	str	w1, [x19]
   2e6cc:	tst	w0, w2
   2e6d0:	b.ne	2e6e0 <PyInit__decimal@@Base+0x14160>  // b.any
   2e6d4:	ldp	x19, x20, [sp, #16]
   2e6d8:	ldp	x29, x30, [sp], #48
   2e6dc:	ret
   2e6e0:	mov	x2, x19
   2e6e4:	mov	x0, x20
   2e6e8:	mov	w1, #0x100                 	// #256
   2e6ec:	bl	28d68 <PyInit__decimal@@Base+0xe7e8>
   2e6f0:	ldp	x19, x20, [sp, #16]
   2e6f4:	ldp	x29, x30, [sp], #48
   2e6f8:	ret
   2e6fc:	nop
   2e700:	sub	sp, sp, #0x7b0
   2e704:	mov	x4, #0x435f                	// #17247
   2e708:	movk	x4, #0xd79, lsl #16
   2e70c:	mov	w14, #0x30                  	// #48
   2e710:	movk	x4, #0x35e5, lsl #32
   2e714:	mov	x7, #0x2                   	// #2
   2e718:	stp	x29, x30, [sp]
   2e71c:	mov	x29, sp
   2e720:	movk	x4, #0xd794, lsl #48
   2e724:	ldp	x18, x11, [x1, #16]
   2e728:	stp	x19, x20, [sp, #16]
   2e72c:	mov	w17, #0x50                  	// #80
   2e730:	stp	x21, x22, [sp, #32]
   2e734:	mov	x13, #0x40                  	// #64
   2e738:	add	x9, sp, #0x1b0
   2e73c:	stp	x23, x24, [sp, #48]
   2e740:	adrp	x24, 42000 <PyInit__decimal@@Base+0x27a80>
   2e744:	umulh	x4, x18, x4
   2e748:	stp	x25, x26, [sp, #64]
   2e74c:	add	x12, x24, #0x2d0
   2e750:	neg	x6, x18
   2e754:	stp	x27, x28, [sp, #80]
   2e758:	lsr	x4, x4, #4
   2e75c:	add	x8, sp, #0x3b0
   2e760:	ldrb	w5, [x1]
   2e764:	mov	w15, #0xffffff90            	// #-112
   2e768:	ldp	x16, x10, [x1, #32]
   2e76c:	str	x2, [sp, #96]
   2e770:	str	w5, [sp, #108]
   2e774:	add	x5, x4, x4, lsl #2
   2e778:	str	x18, [sp, #120]
   2e77c:	mov	x20, x0
   2e780:	str	x7, [sp, #136]
   2e784:	lsl	x5, x5, #2
   2e788:	strb	w17, [sp, #240]
   2e78c:	mov	x7, #0x1                   	// #1
   2e790:	stp	x6, x18, [sp, #248]
   2e794:	add	x6, sp, #0x88
   2e798:	sub	x4, x5, x4
   2e79c:	stp	x11, x16, [sp, #264]
   2e7a0:	lsl	x5, x11, #3
   2e7a4:	mov	x19, x3
   2e7a8:	str	x10, [sp, #280]
   2e7ac:	subs	x4, x18, x4
   2e7b0:	strb	w14, [sp, #288]
   2e7b4:	sub	x0, x5, #0x8
   2e7b8:	stp	xzr, xzr, [sp, #296]
   2e7bc:	stp	xzr, x13, [sp, #312]
   2e7c0:	ldr	x1, [x1, #8]
   2e7c4:	str	x1, [sp, #112]
   2e7c8:	ldr	x23, [x12, #136]
   2e7cc:	str	x9, [sp, #328]
   2e7d0:	strb	w14, [sp, #336]
   2e7d4:	stp	xzr, xzr, [sp, #344]
   2e7d8:	stp	xzr, x13, [sp, #360]
   2e7dc:	str	x8, [sp, #376]
   2e7e0:	strb	w15, [sp, #384]
   2e7e4:	str	xzr, [sp, #392]
   2e7e8:	stp	x7, x7, [sp, #400]
   2e7ec:	stp	x7, x6, [sp, #416]
   2e7f0:	str	xzr, [sp, #1456]
   2e7f4:	str	x23, [sp, #1464]
   2e7f8:	b.ne	2e848 <PyInit__decimal@@Base+0x142c8>  // b.any
   2e7fc:	ldr	x1, [x24, #720]
   2e800:	ldr	x3, [x10, x0]
   2e804:	udiv	x3, x3, x1
   2e808:	add	x0, x24, #0x2d0
   2e80c:	ldr	x25, [x0, #72]
   2e810:	cmp	x25, x3
   2e814:	b.ls	2e884 <PyInit__decimal@@Base+0x14304>  // b.plast
   2e818:	ldr	x1, [x0, #32]
   2e81c:	cmp	x1, x3
   2e820:	b.ls	2eae8 <PyInit__decimal@@Base+0x14568>  // b.plast
   2e824:	ldr	x1, [x0, #16]
   2e828:	cmp	x1, x3
   2e82c:	b.ls	2eb40 <PyInit__decimal@@Base+0x145c0>  // b.plast
   2e830:	ldr	x1, [x0, #8]
   2e834:	mov	x22, x23
   2e838:	cmp	x1, x3
   2e83c:	b.ls	2e8b8 <PyInit__decimal@@Base+0x14338>  // b.plast
   2e840:	ldr	x22, [x0, #144]
   2e844:	b	2e8b8 <PyInit__decimal@@Base+0x14338>
   2e848:	cmp	x11, #0x1
   2e84c:	ldr	x3, [x10, x0]
   2e850:	b.le	2e808 <PyInit__decimal@@Base+0x14288>
   2e854:	add	x10, x10, x5
   2e858:	mov	x1, #0x13                  	// #19
   2e85c:	ldr	x2, [x12, x4, lsl #3]
   2e860:	sub	x4, x1, x4
   2e864:	ldur	x0, [x10, #-16]
   2e868:	ldr	x1, [x12, x4, lsl #3]
   2e86c:	udiv	x0, x0, x2
   2e870:	madd	x3, x3, x1, x0
   2e874:	add	x0, x24, #0x2d0
   2e878:	ldr	x25, [x0, #72]
   2e87c:	cmp	x25, x3
   2e880:	b.hi	2e818 <PyInit__decimal@@Base+0x14298>  // b.pmore
   2e884:	ldr	x1, [x0, #112]
   2e888:	cmp	x1, x3
   2e88c:	b.ls	2eb14 <PyInit__decimal@@Base+0x14594>  // b.plast
   2e890:	ldr	x1, [x0, #88]
   2e894:	cmp	x1, x3
   2e898:	b.hi	2eb7c <PyInit__decimal@@Base+0x145fc>  // b.pmore
   2e89c:	ldr	x1, [x0, #104]
   2e8a0:	cmp	x1, x3
   2e8a4:	b.ls	2eda4 <PyInit__decimal@@Base+0x14824>  // b.plast
   2e8a8:	ldr	x1, [x0, #96]
   2e8ac:	cmp	x1, x3
   2e8b0:	b.hi	2edb4 <PyInit__decimal@@Base+0x14834>  // b.pmore
   2e8b4:	ldr	x22, [x0, #48]
   2e8b8:	adrp	x1, 5f000 <PyInit__decimal@@Base+0x44a80>
   2e8bc:	ldr	x0, [x20, #32]
   2e8c0:	mov	x2, #0x2                   	// #2
   2e8c4:	ldr	x1, [x1, #1672]
   2e8c8:	mul	x22, x3, x22
   2e8cc:	cmp	x1, x2
   2e8d0:	csel	x1, x1, x2, ge  // ge = tcont
   2e8d4:	cmp	x1, x0
   2e8d8:	b.eq	2e8ec <PyInit__decimal@@Base+0x1436c>  // b.none
   2e8dc:	ldrb	w2, [x20]
   2e8e0:	tbz	w2, #5, 2eca8 <PyInit__decimal@@Base+0x14728>
   2e8e4:	cmp	x1, x0
   2e8e8:	b.gt	2ed14 <PyInit__decimal@@Base+0x14794>
   2e8ec:	ldr	x0, [x20, #40]
   2e8f0:	add	x21, sp, #0x5b0
   2e8f4:	mov	x1, x21
   2e8f8:	mov	x2, #0x2                   	// #2
   2e8fc:	mov	x3, x22
   2e900:	bl	1b700 <PyInit__decimal@@Base+0x1180>
   2e904:	ldrb	w0, [x20]
   2e908:	mov	x2, #0xffffffffffffffef    	// #-17
   2e90c:	ldr	x1, [x20, #40]
   2e910:	and	w0, w0, #0xfffffff0
   2e914:	strb	w0, [x20]
   2e918:	str	x2, [x20, #8]
   2e91c:	ldr	x0, [x1, #8]
   2e920:	cbz	x0, 2ec9c <PyInit__decimal@@Base+0x1471c>
   2e924:	add	x1, x1, #0x8
   2e928:	mov	x2, #0x13                  	// #19
   2e92c:	mov	x0, #0x2                   	// #2
   2e930:	str	x0, [x20, #24]
   2e934:	add	x24, x24, #0x2d0
   2e938:	ldr	x1, [x1]
   2e93c:	cmp	x25, x1
   2e940:	b.ls	2ec60 <PyInit__decimal@@Base+0x146e0>  // b.plast
   2e944:	ldr	x0, [x24, #32]
   2e948:	cmp	x1, x0
   2e94c:	b.cs	2ecb8 <PyInit__decimal@@Base+0x14738>  // b.hs, b.nlast
   2e950:	ldr	x0, [x24, #16]
   2e954:	cmp	x1, x0
   2e958:	b.cs	2ed24 <PyInit__decimal@@Base+0x147a4>  // b.hs, b.nlast
   2e95c:	ldr	x0, [x24, #8]
   2e960:	cmp	x1, x0
   2e964:	cset	x0, cs  // cs = hs, nlast
   2e968:	add	x0, x0, #0x1
   2e96c:	nop
   2e970:	add	x0, x0, x2
   2e974:	str	x0, [x20, #16]
   2e978:	add	x25, sp, #0x90
   2e97c:	add	x24, sp, #0xc0
   2e980:	mov	x0, x25
   2e984:	bl	1d4d0 <PyInit__decimal@@Base+0x2f50>
   2e988:	mov	x0, x24
   2e98c:	bl	1d4d0 <PyInit__decimal@@Base+0x2f50>
   2e990:	ldr	x0, [sp, #96]
   2e994:	mov	x2, #0x63                  	// #99
   2e998:	mov	x4, #0xff9d                	// #65437
   2e99c:	movk	x2, #0xa764, lsl #16
   2e9a0:	movk	x4, #0x589b, lsl #16
   2e9a4:	movk	x2, #0xb6b3, lsl #32
   2e9a8:	ldr	x0, [x0]
   2e9ac:	movk	x4, #0x494c, lsl #32
   2e9b0:	mov	w3, #0x8                   	// #8
   2e9b4:	movk	x2, #0xde0, lsl #48
   2e9b8:	movk	x4, #0xf21f, lsl #48
   2e9bc:	stp	x2, x4, [sp, #152]
   2e9c0:	add	x0, x0, #0x2
   2e9c4:	str	w3, [sp, #180]
   2e9c8:	cmp	x0, #0x10
   2e9cc:	stp	x2, x2, [sp, #192]
   2e9d0:	mov	w1, #0x0                   	// #0
   2e9d4:	str	x4, [sp, #208]
   2e9d8:	str	w3, [sp, #228]
   2e9dc:	b.le	2eb94 <PyInit__decimal@@Base+0x14614>
   2e9e0:	add	x0, x0, #0x1
   2e9e4:	mov	w28, w1
   2e9e8:	cmp	x0, #0x21
   2e9ec:	add	w1, w1, #0x1
   2e9f0:	add	x0, x0, x0, lsr #63
   2e9f4:	add	x23, x21, w28, sxtw #3
   2e9f8:	asr	x0, x0, #1
   2e9fc:	str	x0, [x21, w28, sxtw #3]
   2ea00:	b.gt	2e9e0 <PyInit__decimal@@Base+0x14460>
   2ea04:	tbnz	w28, #31, 2eb94 <PyInit__decimal@@Base+0x14614>
   2ea08:	add	x22, sp, #0x120
   2ea0c:	add	x26, sp, #0xf0
   2ea10:	add	x21, sp, #0x150
   2ea14:	add	x27, sp, #0x180
   2ea18:	b	2ea98 <PyInit__decimal@@Base+0x14518>
   2ea1c:	sub	x2, x7, x6
   2ea20:	bl	2bf80 <PyInit__decimal@@Base+0x11a00>
   2ea24:	ldr	x6, [sp, #144]
   2ea28:	mov	x4, x19
   2ea2c:	mov	x3, x25
   2ea30:	mov	x2, x22
   2ea34:	mov	x1, x21
   2ea38:	mov	x0, x21
   2ea3c:	neg	x6, x6
   2ea40:	str	x6, [sp, #344]
   2ea44:	bl	291b8 <PyInit__decimal@@Base+0xec38>
   2ea48:	sub	w28, w28, #0x1
   2ea4c:	mov	x2, x19
   2ea50:	mov	x1, x25
   2ea54:	mov	x0, x21
   2ea58:	bl	2b110 <PyInit__decimal@@Base+0x10b90>
   2ea5c:	mov	x4, x19
   2ea60:	mov	x3, x24
   2ea64:	mov	x2, x27
   2ea68:	mov	x1, x20
   2ea6c:	mov	x0, x22
   2ea70:	bl	2bef8 <PyInit__decimal@@Base+0x11978>
   2ea74:	mov	x4, x19
   2ea78:	mov	x3, x24
   2ea7c:	mov	x2, x21
   2ea80:	mov	x1, x22
   2ea84:	mov	x0, x20
   2ea88:	bl	2e698 <PyInit__decimal@@Base+0x14118>
   2ea8c:	sub	x23, x23, #0x8
   2ea90:	cmn	w28, #0x1
   2ea94:	b.eq	2eb94 <PyInit__decimal@@Base+0x14614>  // b.none
   2ea98:	mov	x4, x19
   2ea9c:	mov	x3, x24
   2eaa0:	mov	x2, x20
   2eaa4:	mov	x1, x20
   2eaa8:	mov	x0, x22
   2eaac:	bl	2bef8 <PyInit__decimal@@Base+0x11978>
   2eab0:	ldr	x6, [x23]
   2eab4:	mov	x3, x19
   2eab8:	ldr	x7, [sp, #256]
   2eabc:	mov	x1, x26
   2eac0:	lsl	x6, x6, #1
   2eac4:	mov	x0, x21
   2eac8:	add	x6, x6, #0x5
   2eacc:	str	x6, [sp, #144]
   2ead0:	mov	x4, x19
   2ead4:	mov	x2, x22
   2ead8:	cmp	x6, x7
   2eadc:	b.lt	2ea1c <PyInit__decimal@@Base+0x1449c>  // b.tstop
   2eae0:	mov	x3, x25
   2eae4:	b	2ea44 <PyInit__decimal@@Base+0x144c4>
   2eae8:	ldr	x1, [x0, #48]
   2eaec:	cmp	x1, x3
   2eaf0:	b.hi	2eb68 <PyInit__decimal@@Base+0x145e8>  // b.pmore
   2eaf4:	ldr	x1, [x0, #64]
   2eaf8:	cmp	x1, x3
   2eafc:	b.ls	2edac <PyInit__decimal@@Base+0x1482c>  // b.plast
   2eb00:	ldr	x1, [x0, #56]
   2eb04:	cmp	x1, x3
   2eb08:	b.hi	2edbc <PyInit__decimal@@Base+0x1483c>  // b.pmore
   2eb0c:	ldr	x22, [x0, #88]
   2eb10:	b	2e8b8 <PyInit__decimal@@Base+0x14338>
   2eb14:	ldr	x1, [x0, #144]
   2eb18:	cmp	x1, x3
   2eb1c:	b.ls	2eb54 <PyInit__decimal@@Base+0x145d4>  // b.plast
   2eb20:	ldr	x1, [x0, #128]
   2eb24:	cmp	x1, x3
   2eb28:	b.ls	2ed94 <PyInit__decimal@@Base+0x14814>  // b.plast
   2eb2c:	ldr	x1, [x0, #120]
   2eb30:	cmp	x1, x3
   2eb34:	b.ls	2edcc <PyInit__decimal@@Base+0x1484c>  // b.plast
   2eb38:	ldr	x22, [x0, #32]
   2eb3c:	b	2e8b8 <PyInit__decimal@@Base+0x14338>
   2eb40:	ldr	x1, [x0, #24]
   2eb44:	cmp	x1, x3
   2eb48:	b.hi	2ed8c <PyInit__decimal@@Base+0x1480c>  // b.pmore
   2eb4c:	ldr	x22, [x0, #120]
   2eb50:	b	2e8b8 <PyInit__decimal@@Base+0x14338>
   2eb54:	ldr	x1, [x0, #152]
   2eb58:	cmp	x1, x3
   2eb5c:	b.hi	2ed84 <PyInit__decimal@@Base+0x14804>  // b.pmore
   2eb60:	ldur	x22, [x0, #-8]
   2eb64:	b	2e8b8 <PyInit__decimal@@Base+0x14338>
   2eb68:	ldr	x1, [x0, #40]
   2eb6c:	cmp	x1, x3
   2eb70:	b.ls	2edc4 <PyInit__decimal@@Base+0x14844>  // b.plast
   2eb74:	ldr	x22, [x0, #112]
   2eb78:	b	2e8b8 <PyInit__decimal@@Base+0x14338>
   2eb7c:	ldr	x1, [x0, #80]
   2eb80:	mov	x22, x25
   2eb84:	cmp	x1, x3
   2eb88:	b.hi	2e8b8 <PyInit__decimal@@Base+0x14338>  // b.pmore
   2eb8c:	ldr	x22, [x0, #64]
   2eb90:	b	2e8b8 <PyInit__decimal@@Base+0x14338>
   2eb94:	ldrb	w1, [x20]
   2eb98:	tst	w1, #0xe
   2eb9c:	b.ne	2ebc8 <PyInit__decimal@@Base+0x14648>  // b.any
   2eba0:	ldp	x0, x3, [sp, #112]
   2eba4:	and	w1, w1, #0xfffffff0
   2eba8:	ldr	x2, [x20, #8]
   2ebac:	add	x28, x0, x3
   2ebb0:	ldr	w0, [sp, #108]
   2ebb4:	sub	x28, x2, x28
   2ebb8:	str	x28, [x20, #8]
   2ebbc:	and	w0, w0, #0x1
   2ebc0:	orr	w0, w0, w1
   2ebc4:	strb	w0, [x20]
   2ebc8:	ldrb	w0, [sp, #288]
   2ebcc:	tst	w0, #0xe0
   2ebd0:	b.ne	2ebe8 <PyInit__decimal@@Base+0x14668>  // b.any
   2ebd4:	adrp	x1, 5f000 <PyInit__decimal@@Base+0x44a80>
   2ebd8:	ldr	x0, [sp, #328]
   2ebdc:	ldr	x1, [x1, #1704]
   2ebe0:	blr	x1
   2ebe4:	ldrb	w0, [sp, #288]
   2ebe8:	tbnz	w0, #4, 2ebfc <PyInit__decimal@@Base+0x1467c>
   2ebec:	adrp	x1, 5f000 <PyInit__decimal@@Base+0x44a80>
   2ebf0:	add	x0, sp, #0x120
   2ebf4:	ldr	x1, [x1, #1704]
   2ebf8:	blr	x1
   2ebfc:	ldrb	w0, [sp, #336]
   2ec00:	tst	w0, #0xe0
   2ec04:	b.ne	2ec1c <PyInit__decimal@@Base+0x1469c>  // b.any
   2ec08:	adrp	x1, 5f000 <PyInit__decimal@@Base+0x44a80>
   2ec0c:	ldr	x0, [sp, #376]
   2ec10:	ldr	x1, [x1, #1704]
   2ec14:	blr	x1
   2ec18:	ldrb	w0, [sp, #336]
   2ec1c:	tbnz	w0, #4, 2ec30 <PyInit__decimal@@Base+0x146b0>
   2ec20:	adrp	x1, 5f000 <PyInit__decimal@@Base+0x44a80>
   2ec24:	add	x0, sp, #0x150
   2ec28:	ldr	x1, [x1, #1704]
   2ec2c:	blr	x1
   2ec30:	ldr	x1, [sp, #96]
   2ec34:	mov	x2, x19
   2ec38:	mov	x0, x20
   2ec3c:	bl	2b110 <PyInit__decimal@@Base+0x10b90>
   2ec40:	ldp	x29, x30, [sp]
   2ec44:	ldp	x19, x20, [sp, #16]
   2ec48:	ldp	x21, x22, [sp, #32]
   2ec4c:	ldp	x23, x24, [sp, #48]
   2ec50:	ldp	x25, x26, [sp, #64]
   2ec54:	ldp	x27, x28, [sp, #80]
   2ec58:	add	sp, sp, #0x7b0
   2ec5c:	ret
   2ec60:	ldr	x0, [x24, #112]
   2ec64:	cmp	x1, x0
   2ec68:	b.cs	2ece8 <PyInit__decimal@@Base+0x14768>  // b.hs, b.nlast
   2ec6c:	ldr	x0, [x24, #88]
   2ec70:	cmp	x1, x0
   2ec74:	b.cc	2ed4c <PyInit__decimal@@Base+0x147cc>  // b.lo, b.ul, b.last
   2ec78:	ldr	x3, [x24, #104]
   2ec7c:	mov	x0, #0xe                   	// #14
   2ec80:	cmp	x1, x3
   2ec84:	b.cs	2e970 <PyInit__decimal@@Base+0x143f0>  // b.hs, b.nlast
   2ec88:	ldr	x0, [x24, #96]
   2ec8c:	cmp	x1, x0
   2ec90:	cset	x0, cs  // cs = hs, nlast
   2ec94:	add	x0, x0, #0xc
   2ec98:	b	2e970 <PyInit__decimal@@Base+0x143f0>
   2ec9c:	mov	x2, #0x0                   	// #0
   2eca0:	mov	x0, #0x1                   	// #1
   2eca4:	b	2e930 <PyInit__decimal@@Base+0x143b0>
   2eca8:	mov	x2, x19
   2ecac:	mov	x0, x20
   2ecb0:	bl	25588 <PyInit__decimal@@Base+0xb008>
   2ecb4:	b	2e8ec <PyInit__decimal@@Base+0x1436c>
   2ecb8:	ldr	x0, [x24, #48]
   2ecbc:	cmp	x1, x0
   2ecc0:	b.cc	2ed60 <PyInit__decimal@@Base+0x147e0>  // b.lo, b.ul, b.last
   2ecc4:	ldr	x3, [x24, #64]
   2ecc8:	mov	x0, #0x9                   	// #9
   2eccc:	cmp	x1, x3
   2ecd0:	b.cs	2e970 <PyInit__decimal@@Base+0x143f0>  // b.hs, b.nlast
   2ecd4:	ldr	x0, [x24, #56]
   2ecd8:	cmp	x1, x0
   2ecdc:	cset	x0, cs  // cs = hs, nlast
   2ece0:	add	x0, x0, #0x7
   2ece4:	b	2e970 <PyInit__decimal@@Base+0x143f0>
   2ece8:	ldr	x0, [x24, #144]
   2ecec:	cmp	x1, x0
   2ecf0:	b.cs	2ed38 <PyInit__decimal@@Base+0x147b8>  // b.hs, b.nlast
   2ecf4:	ldr	x0, [x24, #128]
   2ecf8:	cmp	x1, x0
   2ecfc:	b.cs	2ed74 <PyInit__decimal@@Base+0x147f4>  // b.hs, b.nlast
   2ed00:	ldr	x0, [x24, #120]
   2ed04:	cmp	x1, x0
   2ed08:	cset	x0, cs  // cs = hs, nlast
   2ed0c:	add	x0, x0, #0xf
   2ed10:	b	2e970 <PyInit__decimal@@Base+0x143f0>
   2ed14:	mov	x2, x19
   2ed18:	mov	x0, x20
   2ed1c:	bl	25438 <PyInit__decimal@@Base+0xaeb8>
   2ed20:	b	2e8ec <PyInit__decimal@@Base+0x1436c>
   2ed24:	ldr	x0, [x24, #24]
   2ed28:	cmp	x1, x0
   2ed2c:	cset	x0, cs  // cs = hs, nlast
   2ed30:	add	x0, x0, #0x3
   2ed34:	b	2e970 <PyInit__decimal@@Base+0x143f0>
   2ed38:	ldr	x0, [x24, #152]
   2ed3c:	cmp	x1, x0
   2ed40:	cset	x0, cs  // cs = hs, nlast
   2ed44:	add	x0, x0, #0x13
   2ed48:	b	2e970 <PyInit__decimal@@Base+0x143f0>
   2ed4c:	ldr	x0, [x24, #80]
   2ed50:	cmp	x1, x0
   2ed54:	cset	x0, cs  // cs = hs, nlast
   2ed58:	add	x0, x0, #0xa
   2ed5c:	b	2e970 <PyInit__decimal@@Base+0x143f0>
   2ed60:	ldr	x0, [x24, #40]
   2ed64:	cmp	x1, x0
   2ed68:	cset	x0, cs  // cs = hs, nlast
   2ed6c:	add	x0, x0, #0x5
   2ed70:	b	2e970 <PyInit__decimal@@Base+0x143f0>
   2ed74:	cmp	x23, x1
   2ed78:	cset	x0, ls  // ls = plast
   2ed7c:	add	x0, x0, #0x11
   2ed80:	b	2e970 <PyInit__decimal@@Base+0x143f0>
   2ed84:	ldr	x22, [x24, #720]
   2ed88:	b	2e8b8 <PyInit__decimal@@Base+0x14338>
   2ed8c:	ldr	x22, [x0, #128]
   2ed90:	b	2e8b8 <PyInit__decimal@@Base+0x14338>
   2ed94:	cmp	x23, x3
   2ed98:	b.ls	2edd4 <PyInit__decimal@@Base+0x14854>  // b.plast
   2ed9c:	ldr	x22, [x0, #16]
   2eda0:	b	2e8b8 <PyInit__decimal@@Base+0x14338>
   2eda4:	ldr	x22, [x0, #40]
   2eda8:	b	2e8b8 <PyInit__decimal@@Base+0x14338>
   2edac:	ldr	x22, [x0, #80]
   2edb0:	b	2e8b8 <PyInit__decimal@@Base+0x14338>
   2edb4:	ldr	x22, [x0, #56]
   2edb8:	b	2e8b8 <PyInit__decimal@@Base+0x14338>
   2edbc:	ldr	x22, [x0, #96]
   2edc0:	b	2e8b8 <PyInit__decimal@@Base+0x14338>
   2edc4:	ldr	x22, [x0, #104]
   2edc8:	b	2e8b8 <PyInit__decimal@@Base+0x14338>
   2edcc:	ldr	x22, [x0, #24]
   2edd0:	b	2e8b8 <PyInit__decimal@@Base+0x14338>
   2edd4:	ldr	x22, [x0, #8]
   2edd8:	b	2e8b8 <PyInit__decimal@@Base+0x14338>
   2eddc:	nop
   2ede0:	stp	x29, x30, [sp, #-256]!
   2ede4:	mov	x29, sp
   2ede8:	stp	x19, x20, [sp, #16]
   2edec:	mov	x20, x0
   2edf0:	stp	x21, x22, [sp, #32]
   2edf4:	mov	x21, x1
   2edf8:	mov	x22, x4
   2edfc:	stp	x23, x24, [sp, #48]
   2ee00:	mov	x24, x3
   2ee04:	stp	x25, x26, [sp, #64]
   2ee08:	mov	x25, x2
   2ee0c:	cmp	x0, x25
   2ee10:	ldrb	w2, [x2]
   2ee14:	ccmp	x20, x3, #0x4, ne  // ne = any
   2ee18:	ldrb	w0, [x3]
   2ee1c:	and	w2, w2, #0x1e
   2ee20:	orr	w2, w2, #0x40
   2ee24:	and	w0, w0, #0x1e
   2ee28:	strb	w2, [sp, #160]
   2ee2c:	orr	w0, w0, #0x40
   2ee30:	ldr	x5, [x3, #16]
   2ee34:	strb	w0, [sp, #208]
   2ee38:	ldp	x3, x2, [x25, #16]
   2ee3c:	stp	xzr, x3, [sp, #168]
   2ee40:	str	x2, [sp, #184]
   2ee44:	ldr	x3, [x24, #24]
   2ee48:	stp	xzr, x5, [sp, #216]
   2ee4c:	ldr	x2, [x25, #32]
   2ee50:	str	x2, [sp, #192]
   2ee54:	ldr	x0, [x25, #40]
   2ee58:	str	x0, [sp, #200]
   2ee5c:	str	x3, [sp, #232]
   2ee60:	ldr	x2, [x24, #32]
   2ee64:	ldr	x0, [x24, #40]
   2ee68:	stp	x2, x0, [sp, #240]
   2ee6c:	b.eq	2efc0 <PyInit__decimal@@Base+0x14a40>  // b.none
   2ee70:	mov	x19, x20
   2ee74:	stp	x27, x28, [sp, #80]
   2ee78:	cmp	x21, x25
   2ee7c:	ccmp	x21, x24, #0x4, ne  // ne = any
   2ee80:	b.eq	2ef90 <PyInit__decimal@@Base+0x14a10>  // b.none
   2ee84:	mov	x28, x21
   2ee88:	add	x23, sp, #0x70
   2ee8c:	mov	x0, x23
   2ee90:	bl	1d4d0 <PyInit__decimal@@Base+0x2f50>
   2ee94:	ldr	x2, [x25, #16]
   2ee98:	mov	x1, #0xffffffffa763ffff    	// #-1486618625
   2ee9c:	ldr	x0, [x24, #16]
   2eea0:	movk	x1, #0xb6b3, lsl #32
   2eea4:	movk	x1, #0xde0, lsl #48
   2eea8:	sub	x0, x2, x0
   2eeac:	add	x0, x0, #0x4
   2eeb0:	str	x0, [sp, #112]
   2eeb4:	cmp	x0, x1
   2eeb8:	ccmp	x2, x1, #0x0, le
   2eebc:	b.le	2efd4 <PyInit__decimal@@Base+0x14a54>
   2eec0:	ldr	w0, [x22]
   2eec4:	orr	w0, w0, #0x8
   2eec8:	str	w0, [x22]
   2eecc:	cmp	x28, x21
   2eed0:	cset	w23, ne  // ne = any
   2eed4:	cmp	x28, #0x0
   2eed8:	csel	w23, w23, wzr, ne  // ne = any
   2eedc:	cmp	x19, #0x0
   2eee0:	ccmp	x19, x20, #0x4, ne  // ne = any
   2eee4:	b.eq	2ef1c <PyInit__decimal@@Base+0x1499c>  // b.none
   2eee8:	ldrb	w0, [x19]
   2eeec:	tst	w0, #0xe0
   2eef0:	b.ne	2ef08 <PyInit__decimal@@Base+0x14988>  // b.any
   2eef4:	adrp	x1, 5f000 <PyInit__decimal@@Base+0x44a80>
   2eef8:	ldr	x0, [x19, #40]
   2eefc:	ldr	x1, [x1, #1704]
   2ef00:	blr	x1
   2ef04:	ldrb	w0, [x19]
   2ef08:	tbnz	w0, #4, 2ef1c <PyInit__decimal@@Base+0x1499c>
   2ef0c:	adrp	x1, 5f000 <PyInit__decimal@@Base+0x44a80>
   2ef10:	mov	x0, x19
   2ef14:	ldr	x1, [x1, #1704]
   2ef18:	blr	x1
   2ef1c:	cbz	w23, 2efb8 <PyInit__decimal@@Base+0x14a38>
   2ef20:	ldrb	w0, [x28]
   2ef24:	tst	w0, #0xe0
   2ef28:	b.ne	2ef40 <PyInit__decimal@@Base+0x149c0>  // b.any
   2ef2c:	adrp	x1, 5f000 <PyInit__decimal@@Base+0x44a80>
   2ef30:	ldr	x0, [x28, #40]
   2ef34:	ldr	x1, [x1, #1704]
   2ef38:	blr	x1
   2ef3c:	ldrb	w0, [x28]
   2ef40:	tbnz	w0, #4, 2efb8 <PyInit__decimal@@Base+0x14a38>
   2ef44:	adrp	x1, 5f000 <PyInit__decimal@@Base+0x44a80>
   2ef48:	mov	x0, x28
   2ef4c:	ldr	x1, [x1, #1704]
   2ef50:	blr	x1
   2ef54:	ldp	x27, x28, [sp, #80]
   2ef58:	mov	x0, x20
   2ef5c:	mov	w2, #0x4                   	// #4
   2ef60:	mov	w1, #0x0                   	// #0
   2ef64:	bl	28cd8 <PyInit__decimal@@Base+0xe758>
   2ef68:	mov	x0, x21
   2ef6c:	mov	w2, #0x4                   	// #4
   2ef70:	mov	w1, #0x0                   	// #0
   2ef74:	bl	28cd8 <PyInit__decimal@@Base+0xe758>
   2ef78:	ldp	x19, x20, [sp, #16]
   2ef7c:	ldp	x21, x22, [sp, #32]
   2ef80:	ldp	x23, x24, [sp, #48]
   2ef84:	ldp	x25, x26, [sp, #64]
   2ef88:	ldp	x29, x30, [sp], #256
   2ef8c:	ret
   2ef90:	bl	253d8 <PyInit__decimal@@Base+0xae58>
   2ef94:	mov	x28, x0
   2ef98:	cbnz	x0, 2ee88 <PyInit__decimal@@Base+0x14908>
   2ef9c:	ldr	w0, [x22]
   2efa0:	cmp	x19, #0x0
   2efa4:	ccmp	x19, x20, #0x4, ne  // ne = any
   2efa8:	mov	w23, #0x0                   	// #0
   2efac:	orr	w0, w0, #0x200
   2efb0:	str	w0, [x22]
   2efb4:	b.ne	2eee8 <PyInit__decimal@@Base+0x14968>  // b.any
   2efb8:	ldp	x27, x28, [sp, #80]
   2efbc:	b	2ef58 <PyInit__decimal@@Base+0x149d8>
   2efc0:	bl	253d8 <PyInit__decimal@@Base+0xae58>
   2efc4:	mov	x19, x0
   2efc8:	cbz	x0, 2f1cc <PyInit__decimal@@Base+0x14c4c>
   2efcc:	stp	x27, x28, [sp, #80]
   2efd0:	b	2ee78 <PyInit__decimal@@Base+0x148f8>
   2efd4:	add	x24, x23, #0x1c
   2efd8:	add	x27, sp, #0xd0
   2efdc:	mov	x3, x24
   2efe0:	mov	x1, x27
   2efe4:	mov	x2, x23
   2efe8:	mov	x0, x28
   2efec:	add	x26, sp, #0xa0
   2eff0:	bl	2e700 <PyInit__decimal@@Base+0x14180>
   2eff4:	mov	x4, x24
   2eff8:	mov	x1, x26
   2effc:	mov	x3, x23
   2f000:	mov	x2, x28
   2f004:	mov	x0, x19
   2f008:	bl	291b8 <PyInit__decimal@@Base+0xec38>
   2f00c:	mov	x4, x24
   2f010:	mov	x3, x23
   2f014:	mov	x2, x19
   2f018:	mov	x1, x19
   2f01c:	mov	w0, #0x2                   	// #2
   2f020:	bl	2c5c0 <PyInit__decimal@@Base+0x12040>
   2f024:	ldr	x6, [sp, #176]
   2f028:	mov	x8, #0x2                   	// #2
   2f02c:	mov	x7, #0xfffe                	// #65534
   2f030:	movk	x8, #0xa764, lsl #16
   2f034:	movk	x7, #0x589b, lsl #16
   2f038:	add	x6, x6, #0x3
   2f03c:	movk	x8, #0xb6b3, lsl #32
   2f040:	movk	x7, #0x494c, lsl #32
   2f044:	movk	x8, #0xde0, lsl #48
   2f048:	movk	x7, #0xf21f, lsl #48
   2f04c:	mov	x4, x24
   2f050:	mov	x1, x27
   2f054:	mov	x3, x23
   2f058:	mov	x2, x19
   2f05c:	mov	x0, x28
   2f060:	stp	x6, x8, [sp, #112]
   2f064:	mov	w25, #0x4                   	// #4
   2f068:	str	x7, [sp, #128]
   2f06c:	bl	291b8 <PyInit__decimal@@Base+0xec38>
   2f070:	mov	x0, x28
   2f074:	mov	x4, x24
   2f078:	mov	x3, x23
   2f07c:	mov	x2, x28
   2f080:	mov	x1, x26
   2f084:	bl	2e698 <PyInit__decimal@@Base+0x14118>
   2f088:	ldrb	w0, [x19]
   2f08c:	tst	w0, #0xe
   2f090:	b.ne	2f128 <PyInit__decimal@@Base+0x14ba8>  // b.any
   2f094:	adrp	x26, 5c000 <PyInit__decimal@@Base+0x41a80>
   2f098:	add	x26, x26, #0xc58
   2f09c:	add	x0, x26, #0x60
   2f0a0:	str	x0, [sp, #96]
   2f0a4:	add	x0, x26, #0x30
   2f0a8:	str	x0, [sp, #104]
   2f0ac:	ldrb	w2, [x28]
   2f0b0:	mov	x1, x28
   2f0b4:	mov	x0, x26
   2f0b8:	tst	w2, #0xe
   2f0bc:	b.ne	2f128 <PyInit__decimal@@Base+0x14ba8>  // b.any
   2f0c0:	subs	w25, w25, #0x1
   2f0c4:	b.eq	2f174 <PyInit__decimal@@Base+0x14bf4>  // b.none
   2f0c8:	bl	26c80 <PyInit__decimal@@Base+0xc700>
   2f0cc:	mov	w2, w0
   2f0d0:	mov	x1, x27
   2f0d4:	mov	x0, x28
   2f0d8:	cmp	w2, #0x1
   2f0dc:	b.eq	2f144 <PyInit__decimal@@Base+0x14bc4>  // b.none
   2f0e0:	bl	26c80 <PyInit__decimal@@Base+0xc700>
   2f0e4:	cmn	w0, #0x1
   2f0e8:	b.eq	2f1dc <PyInit__decimal@@Base+0x14c5c>  // b.none
   2f0ec:	mov	x4, x24
   2f0f0:	mov	x3, x23
   2f0f4:	mov	x2, x27
   2f0f8:	mov	x1, x28
   2f0fc:	mov	x0, x28
   2f100:	bl	2e698 <PyInit__decimal@@Base+0x14118>
   2f104:	ldr	x2, [sp, #96]
   2f108:	mov	x4, x24
   2f10c:	mov	x3, x23
   2f110:	mov	x1, x19
   2f114:	mov	x0, x19
   2f118:	bl	2e558 <PyInit__decimal@@Base+0x13fd8>
   2f11c:	ldrb	w0, [x19]
   2f120:	tst	w0, #0xe
   2f124:	b.eq	2f0ac <PyInit__decimal@@Base+0x14b2c>  // b.none
   2f128:	ldr	w1, [sp, #140]
   2f12c:	mov	w2, #0x3be                 	// #958
   2f130:	ldr	w0, [x22]
   2f134:	and	w1, w1, w2
   2f138:	orr	w0, w0, w1
   2f13c:	str	w0, [x22]
   2f140:	b	2eecc <PyInit__decimal@@Base+0x1494c>
   2f144:	mov	x4, x24
   2f148:	mov	x3, x23
   2f14c:	mov	x2, x27
   2f150:	mov	x1, x28
   2f154:	bl	2e558 <PyInit__decimal@@Base+0x13fd8>
   2f158:	ldr	x2, [sp, #104]
   2f15c:	mov	x4, x24
   2f160:	mov	x3, x23
   2f164:	mov	x1, x19
   2f168:	mov	x0, x19
   2f16c:	bl	2e558 <PyInit__decimal@@Base+0x13fd8>
   2f170:	b	2f11c <PyInit__decimal@@Base+0x14b9c>
   2f174:	adrp	x23, 5c000 <PyInit__decimal@@Base+0x41a80>
   2f178:	mov	w3, #0x1d0b                	// #7435
   2f17c:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27a80>
   2f180:	adrp	x1, 42000 <PyInit__decimal@@Base+0x27a80>
   2f184:	ldr	x23, [x23, #3904]
   2f188:	add	x2, x2, #0x8c8
   2f18c:	add	x1, x1, #0x600
   2f190:	ldr	x0, [x23]
   2f194:	bl	6a70 <fprintf@plt>
   2f198:	ldr	x3, [x23]
   2f19c:	mov	x2, #0x3c                  	// #60
   2f1a0:	mov	x1, #0x1                   	// #1
   2f1a4:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27a80>
   2f1a8:	add	x0, x0, #0x908
   2f1ac:	bl	6930 <fwrite@plt>
   2f1b0:	ldr	x1, [x23]
   2f1b4:	mov	w0, #0xa                   	// #10
   2f1b8:	bl	65b0 <fputc@plt>
   2f1bc:	ldr	w0, [x22]
   2f1c0:	orr	w0, w0, #0x100
   2f1c4:	str	w0, [x22]
   2f1c8:	b	2eecc <PyInit__decimal@@Base+0x1494c>
   2f1cc:	ldr	w0, [x22]
   2f1d0:	orr	w0, w0, #0x200
   2f1d4:	str	w0, [x22]
   2f1d8:	b	2ef58 <PyInit__decimal@@Base+0x149d8>
   2f1dc:	cmp	x19, x20
   2f1e0:	b.eq	2f234 <PyInit__decimal@@Base+0x14cb4>  // b.none
   2f1e4:	mov	x2, x22
   2f1e8:	mov	x1, x19
   2f1ec:	mov	x0, x20
   2f1f0:	bl	28fe0 <PyInit__decimal@@Base+0xea60>
   2f1f4:	cmp	x28, x21
   2f1f8:	cset	w23, ne  // ne = any
   2f1fc:	cbz	w0, 2eee8 <PyInit__decimal@@Base+0x14968>
   2f200:	ldrb	w0, [x19]
   2f204:	tst	w0, #0xe0
   2f208:	b.ne	2f220 <PyInit__decimal@@Base+0x14ca0>  // b.any
   2f20c:	adrp	x1, 5f000 <PyInit__decimal@@Base+0x44a80>
   2f210:	ldr	x0, [x19, #40]
   2f214:	ldr	x1, [x1, #1704]
   2f218:	blr	x1
   2f21c:	ldrb	w0, [x19]
   2f220:	tbnz	w0, #4, 2f234 <PyInit__decimal@@Base+0x14cb4>
   2f224:	adrp	x1, 5f000 <PyInit__decimal@@Base+0x44a80>
   2f228:	mov	x0, x19
   2f22c:	ldr	x1, [x1, #1704]
   2f230:	blr	x1
   2f234:	cmp	x28, x21
   2f238:	b.eq	2f284 <PyInit__decimal@@Base+0x14d04>  // b.none
   2f23c:	mov	x2, x22
   2f240:	mov	x1, x28
   2f244:	mov	x0, x21
   2f248:	bl	28fe0 <PyInit__decimal@@Base+0xea60>
   2f24c:	cbz	w0, 2f2a4 <PyInit__decimal@@Base+0x14d24>
   2f250:	ldrb	w0, [x28]
   2f254:	tst	w0, #0xe0
   2f258:	b.ne	2f270 <PyInit__decimal@@Base+0x14cf0>  // b.any
   2f25c:	adrp	x1, 5f000 <PyInit__decimal@@Base+0x44a80>
   2f260:	ldr	x0, [x28, #40]
   2f264:	ldr	x1, [x1, #1704]
   2f268:	blr	x1
   2f26c:	ldrb	w0, [x28]
   2f270:	tbnz	w0, #4, 2f284 <PyInit__decimal@@Base+0x14d04>
   2f274:	adrp	x1, 5f000 <PyInit__decimal@@Base+0x44a80>
   2f278:	mov	x0, x28
   2f27c:	ldr	x1, [x1, #1704]
   2f280:	blr	x1
   2f284:	ldr	w1, [sp, #140]
   2f288:	mov	w2, #0x3be                 	// #958
   2f28c:	ldr	w0, [x22]
   2f290:	and	w1, w1, w2
   2f294:	orr	w0, w0, w1
   2f298:	ldp	x27, x28, [sp, #80]
   2f29c:	str	w0, [x22]
   2f2a0:	b	2ef78 <PyInit__decimal@@Base+0x149f8>
   2f2a4:	cmp	x19, x20
   2f2a8:	mov	w23, #0x1                   	// #1
   2f2ac:	b.ne	2eee8 <PyInit__decimal@@Base+0x14968>  // b.any
   2f2b0:	b	2ef20 <PyInit__decimal@@Base+0x149a0>
   2f2b4:	nop
   2f2b8:	sub	sp, sp, #0x4d0
   2f2bc:	mov	w7, #0x30                  	// #48
   2f2c0:	add	x6, sp, #0xd0
   2f2c4:	stp	x29, x30, [sp]
   2f2c8:	mov	x29, sp
   2f2cc:	stp	x19, x20, [sp, #16]
   2f2d0:	mov	x19, x3
   2f2d4:	mov	x3, #0x40                  	// #64
   2f2d8:	stp	x21, x22, [sp, #32]
   2f2dc:	mov	x21, x1
   2f2e0:	mov	x22, x5
   2f2e4:	stp	x23, x24, [sp, #48]
   2f2e8:	mov	x24, x2
   2f2ec:	mov	x23, x4
   2f2f0:	stp	x25, x26, [sp, #64]
   2f2f4:	ldrb	w25, [x2]
   2f2f8:	ldrb	w26, [x19]
   2f2fc:	strb	w7, [sp, #112]
   2f300:	stp	xzr, xzr, [sp, #120]
   2f304:	orr	w7, w25, w26
   2f308:	tst	w7, #0xe
   2f30c:	stp	xzr, x3, [sp, #136]
   2f310:	str	x6, [sp, #152]
   2f314:	b.eq	2f374 <PyInit__decimal@@Base+0x14df4>  // b.none
   2f318:	mov	x4, x5
   2f31c:	mov	x3, x23
   2f320:	mov	x2, x19
   2f324:	mov	x1, x24
   2f328:	mov	x0, x21
   2f32c:	bl	29108 <PyInit__decimal@@Base+0xeb88>
   2f330:	cbz	w0, 2f350 <PyInit__decimal@@Base+0x14dd0>
   2f334:	ldp	x29, x30, [sp]
   2f338:	ldp	x19, x20, [sp, #16]
   2f33c:	ldp	x21, x22, [sp, #32]
   2f340:	ldp	x23, x24, [sp, #48]
   2f344:	ldp	x25, x26, [sp, #64]
   2f348:	add	sp, sp, #0x4d0
   2f34c:	ret
   2f350:	ldrb	w1, [x24]
   2f354:	ldrb	w0, [x19]
   2f358:	tbz	w1, #1, 2f570 <PyInit__decimal@@Base+0x14ff0>
   2f35c:	tbz	w0, #1, 2f660 <PyInit__decimal@@Base+0x150e0>
   2f360:	mov	x2, x22
   2f364:	mov	x0, x21
   2f368:	mov	w1, #0x100                 	// #256
   2f36c:	bl	28d68 <PyInit__decimal@@Base+0xe7e8>
   2f370:	b	2f334 <PyInit__decimal@@Base+0x14db4>
   2f374:	ldr	x5, [x19, #24]
   2f378:	stp	x27, x28, [sp, #80]
   2f37c:	mov	w28, w0
   2f380:	ldr	x1, [x19, #40]
   2f384:	ldr	x20, [x2, #24]
   2f388:	add	x1, x1, x5, lsl #3
   2f38c:	ldr	x0, [x2, #40]
   2f390:	ldur	x1, [x1, #-8]
   2f394:	add	x0, x0, x20, lsl #3
   2f398:	ldur	x0, [x0, #-8]
   2f39c:	cbz	x1, 2f5a4 <PyInit__decimal@@Base+0x15024>
   2f3a0:	ldr	x1, [x19, #8]
   2f3a4:	ldr	x2, [x2, #8]
   2f3a8:	sub	x1, x2, x1
   2f3ac:	str	x1, [sp, #96]
   2f3b0:	cbz	x0, 2f784 <PyInit__decimal@@Base+0x15204>
   2f3b4:	ldr	x1, [x4]
   2f3b8:	ldr	x2, [x19, #16]
   2f3bc:	ldr	x0, [x24, #16]
   2f3c0:	add	x2, x2, x1
   2f3c4:	sub	x2, x2, x0
   2f3c8:	add	x27, x2, #0x1
   2f3cc:	cmp	x27, #0x0
   2f3d0:	b.gt	2f678 <PyInit__decimal@@Base+0x150f8>
   2f3d4:	b.ne	2f5c0 <PyInit__decimal@@Base+0x15040>  // b.any
   2f3d8:	cmp	x24, x21
   2f3dc:	cset	w0, ne  // ne = any
   2f3e0:	add	x20, x20, #0x1
   2f3e4:	cmp	w0, #0x0
   2f3e8:	sub	x20, x20, x5
   2f3ec:	ccmp	x19, x21, #0x4, ne  // ne = any
   2f3f0:	b.ne	2f608 <PyInit__decimal@@Base+0x15088>  // b.any
   2f3f4:	cmp	x19, x21
   2f3f8:	b.eq	2f7dc <PyInit__decimal@@Base+0x1525c>  // b.none
   2f3fc:	cmp	x5, #0x1
   2f400:	b.eq	2f910 <PyInit__decimal@@Base+0x15390>  // b.none
   2f404:	cmp	x5, #0x400
   2f408:	b.gt	2f6b0 <PyInit__decimal@@Base+0x15130>
   2f40c:	ldr	x4, [x24, #24]
   2f410:	mov	x1, #0x0                   	// #0
   2f414:	ldr	x3, [x19, #40]
   2f418:	ldr	x0, [x21, #40]
   2f41c:	ldr	x2, [x24, #40]
   2f420:	bl	1b7b0 <PyInit__decimal@@Base+0x1230>
   2f424:	tbnz	w0, #31, 2f644 <PyInit__decimal@@Base+0x150c4>
   2f428:	sxtw	x4, w0
   2f42c:	lsl	x19, x20, #3
   2f430:	cmp	x20, #0x1
   2f434:	sub	x19, x19, #0x8
   2f438:	ldr	x2, [x21, #40]
   2f43c:	b.gt	2f44c <PyInit__decimal@@Base+0x14ecc>
   2f440:	b	2fa38 <PyInit__decimal@@Base+0x154b8>
   2f444:	sub	x19, x19, #0x8
   2f448:	b.eq	2f900 <PyInit__decimal@@Base+0x15380>  // b.none
   2f44c:	ldr	x1, [x2, x19]
   2f450:	mov	x24, x20
   2f454:	sub	x20, x20, #0x1
   2f458:	cmp	x20, #0x1
   2f45c:	cbz	x1, 2f444 <PyInit__decimal@@Base+0x14ec4>
   2f460:	adrp	x1, 5f000 <PyInit__decimal@@Base+0x44a80>
   2f464:	ldrb	w0, [x21]
   2f468:	ldr	x3, [x21, #32]
   2f46c:	ldr	x1, [x1, #1672]
   2f470:	cmp	x1, x24
   2f474:	csel	x1, x1, x24, ge  // ge = tcont
   2f478:	cmp	x1, x3
   2f47c:	b.eq	2f48c <PyInit__decimal@@Base+0x14f0c>  // b.none
   2f480:	tbz	w0, #5, 2f930 <PyInit__decimal@@Base+0x153b0>
   2f484:	cmp	x1, x3
   2f488:	b.gt	2f9ac <PyInit__decimal@@Base+0x1542c>
   2f48c:	eor	w3, w25, w26
   2f490:	and	w0, w0, #0xfffffff0
   2f494:	and	w3, w3, #0x1
   2f498:	adrp	x1, 42000 <PyInit__decimal@@Base+0x27a80>
   2f49c:	add	x1, x1, #0x2d0
   2f4a0:	orr	w3, w3, w0
   2f4a4:	strb	w3, [x21]
   2f4a8:	str	x24, [x21, #24]
   2f4ac:	ldr	x3, [x1, #72]
   2f4b0:	ldr	x0, [x2, x19]
   2f4b4:	cmp	x0, x3
   2f4b8:	b.cs	2f8c4 <PyInit__decimal@@Base+0x15344>  // b.hs, b.nlast
   2f4bc:	ldr	x3, [x1, #32]
   2f4c0:	cmp	x0, x3
   2f4c4:	b.cs	2f950 <PyInit__decimal@@Base+0x153d0>  // b.hs, b.nlast
   2f4c8:	ldr	x3, [x1, #16]
   2f4cc:	cmp	x0, x3
   2f4d0:	b.cs	2f9e8 <PyInit__decimal@@Base+0x15468>  // b.hs, b.nlast
   2f4d4:	ldr	x1, [x1, #8]
   2f4d8:	cmp	x0, x1
   2f4dc:	cset	x3, cs  // cs = hs, nlast
   2f4e0:	add	x3, x3, #0x1
   2f4e4:	nop
   2f4e8:	add	x1, x20, x20, lsl #2
   2f4ec:	ldr	x0, [sp, #96]
   2f4f0:	lsl	x1, x1, #2
   2f4f4:	sub	x20, x1, x20
   2f4f8:	add	x20, x20, x3
   2f4fc:	str	x20, [x21, #16]
   2f500:	sub	x26, x0, x27
   2f504:	cbz	x4, 2f830 <PyInit__decimal@@Base+0x152b0>
   2f508:	ldr	x1, [x2]
   2f50c:	mov	x0, #0xcccccccccccccccc    	// #-3689348814741910324
   2f510:	movk	x0, #0xcccd
   2f514:	umulh	x0, x1, x0
   2f518:	lsr	x0, x0, #3
   2f51c:	add	x0, x0, x0, lsl #2
   2f520:	subs	x0, x1, x0, lsl #1
   2f524:	ccmp	x0, #0x5, #0x4, ne  // ne = any
   2f528:	b.ne	2f534 <PyInit__decimal@@Base+0x14fb4>  // b.any
   2f52c:	add	x1, x1, #0x1
   2f530:	str	x1, [x2]
   2f534:	str	x26, [x21, #8]
   2f538:	ldrb	w0, [sp, #112]
   2f53c:	tst	w0, #0xe0
   2f540:	b.ne	2f558 <PyInit__decimal@@Base+0x14fd8>  // b.any
   2f544:	adrp	x1, 5f000 <PyInit__decimal@@Base+0x44a80>
   2f548:	ldr	x0, [sp, #152]
   2f54c:	ldr	x1, [x1, #1704]
   2f550:	blr	x1
   2f554:	ldrb	w0, [sp, #112]
   2f558:	tbnz	w0, #4, 2f79c <PyInit__decimal@@Base+0x1521c>
   2f55c:	adrp	x1, 5f000 <PyInit__decimal@@Base+0x44a80>
   2f560:	add	x0, sp, #0x70
   2f564:	ldr	x1, [x1, #1704]
   2f568:	blr	x1
   2f56c:	b	2f79c <PyInit__decimal@@Base+0x1521c>
   2f570:	ldr	x2, [x23, #16]
   2f574:	eor	w1, w1, w0
   2f578:	ldr	x3, [x23]
   2f57c:	add	x2, x2, #0x1
   2f580:	mov	x0, x21
   2f584:	and	w1, w1, #0x1
   2f588:	sub	x3, x2, x3
   2f58c:	mov	x2, #0x0                   	// #0
   2f590:	bl	26d90 <PyInit__decimal@@Base+0xc810>
   2f594:	ldr	w0, [x22]
   2f598:	orr	w0, w0, #0x1
   2f59c:	str	w0, [x22]
   2f5a0:	b	2f334 <PyInit__decimal@@Base+0x14db4>
   2f5a4:	cbnz	x0, 2f75c <PyInit__decimal@@Base+0x151dc>
   2f5a8:	mov	x2, x22
   2f5ac:	mov	x0, x21
   2f5b0:	mov	w1, #0x10                  	// #16
   2f5b4:	bl	28d68 <PyInit__decimal@@Base+0xe7e8>
   2f5b8:	ldp	x27, x28, [sp, #80]
   2f5bc:	b	2f334 <PyInit__decimal@@Base+0x14db4>
   2f5c0:	add	x4, sp, #0x70
   2f5c4:	mvn	x2, x2
   2f5c8:	mov	x0, x4
   2f5cc:	mov	x1, x19
   2f5d0:	mov	x3, x22
   2f5d4:	str	x4, [sp, #104]
   2f5d8:	bl	2a2e0 <PyInit__decimal@@Base+0xfd60>
   2f5dc:	ldr	x4, [sp, #104]
   2f5e0:	cbz	w0, 2f644 <PyInit__decimal@@Base+0x150c4>
   2f5e4:	ldr	x5, [sp, #136]
   2f5e8:	mov	x20, #0x1                   	// #1
   2f5ec:	ldr	x0, [x24, #24]
   2f5f0:	sub	x20, x20, x5
   2f5f4:	mov	x19, x4
   2f5f8:	cmp	x24, x21
   2f5fc:	add	x20, x20, x0
   2f600:	b.eq	2f3fc <PyInit__decimal@@Base+0x14e7c>  // b.none
   2f604:	nop
   2f608:	adrp	x1, 5f000 <PyInit__decimal@@Base+0x44a80>
   2f60c:	ldr	x0, [x21, #32]
   2f610:	ldr	x1, [x1, #1672]
   2f614:	cmp	x1, x20
   2f618:	csel	x1, x1, x20, ge  // ge = tcont
   2f61c:	cmp	x1, x0
   2f620:	b.eq	2f658 <PyInit__decimal@@Base+0x150d8>  // b.none
   2f624:	ldrb	w2, [x21]
   2f628:	tbz	w2, #5, 2f7cc <PyInit__decimal@@Base+0x1524c>
   2f62c:	cmp	x1, x0
   2f630:	b.le	2f658 <PyInit__decimal@@Base+0x150d8>
   2f634:	mov	x2, x22
   2f638:	mov	x0, x21
   2f63c:	bl	25438 <PyInit__decimal@@Base+0xaeb8>
   2f640:	cbnz	w0, 2f658 <PyInit__decimal@@Base+0x150d8>
   2f644:	mov	x2, x22
   2f648:	mov	x0, x21
   2f64c:	mov	w1, #0x200                 	// #512
   2f650:	bl	28d68 <PyInit__decimal@@Base+0xe7e8>
   2f654:	b	2f538 <PyInit__decimal@@Base+0x14fb8>
   2f658:	ldr	x5, [x19, #24]
   2f65c:	b	2f3fc <PyInit__decimal@@Base+0x14e7c>
   2f660:	eor	w1, w1, w0
   2f664:	mov	w2, #0x2                   	// #2
   2f668:	mov	x0, x21
   2f66c:	and	w1, w1, #0x1
   2f670:	bl	28cd8 <PyInit__decimal@@Base+0xe758>
   2f674:	b	2f334 <PyInit__decimal@@Base+0x14db4>
   2f678:	add	x4, sp, #0x70
   2f67c:	mov	x1, x24
   2f680:	mov	x0, x4
   2f684:	mov	x3, x22
   2f688:	mov	x2, x27
   2f68c:	str	x4, [sp, #104]
   2f690:	bl	2a2e0 <PyInit__decimal@@Base+0xfd60>
   2f694:	ldr	x4, [sp, #104]
   2f698:	cbz	w0, 2f644 <PyInit__decimal@@Base+0x150c4>
   2f69c:	mov	x24, x4
   2f6a0:	mov	w0, #0x1                   	// #1
   2f6a4:	ldr	x5, [x19, #24]
   2f6a8:	ldr	x20, [sp, #136]
   2f6ac:	b	2f3e0 <PyInit__decimal@@Base+0x14e60>
   2f6b0:	add	x5, sp, #0x2d0
   2f6b4:	mov	w7, #0x30                  	// #48
   2f6b8:	mov	x6, #0x40                  	// #64
   2f6bc:	add	x20, sp, #0xa0
   2f6c0:	mov	x0, x21
   2f6c4:	mov	x3, x19
   2f6c8:	mov	x2, x24
   2f6cc:	mov	x1, x20
   2f6d0:	mov	x4, x22
   2f6d4:	strb	w7, [sp, #160]
   2f6d8:	stp	xzr, xzr, [sp, #168]
   2f6dc:	stp	xzr, x6, [sp, #184]
   2f6e0:	str	x5, [sp, #200]
   2f6e4:	bl	2ede0 <PyInit__decimal@@Base+0x14860>
   2f6e8:	ldrb	w0, [x21]
   2f6ec:	tst	w0, #0xe
   2f6f0:	b.ne	2f7e8 <PyInit__decimal@@Base+0x15268>  // b.any
   2f6f4:	ldrb	w1, [sp, #160]
   2f6f8:	tst	w1, #0xe
   2f6fc:	b.ne	2f7e8 <PyInit__decimal@@Base+0x15268>  // b.any
   2f700:	ldr	x2, [sp, #184]
   2f704:	ldr	x0, [sp, #200]
   2f708:	add	x2, x0, x2, lsl #3
   2f70c:	ldur	x2, [x2, #-8]
   2f710:	cmp	x2, #0x0
   2f714:	cset	x4, ne  // ne = any
   2f718:	tst	w1, #0xe0
   2f71c:	b.ne	2f738 <PyInit__decimal@@Base+0x151b8>  // b.any
   2f720:	adrp	x1, 5f000 <PyInit__decimal@@Base+0x44a80>
   2f724:	str	x4, [sp, #104]
   2f728:	ldr	x1, [x1, #1704]
   2f72c:	blr	x1
   2f730:	ldrb	w1, [sp, #160]
   2f734:	ldr	x4, [sp, #104]
   2f738:	tbnz	w1, #4, 2f754 <PyInit__decimal@@Base+0x151d4>
   2f73c:	adrp	x1, 5f000 <PyInit__decimal@@Base+0x44a80>
   2f740:	mov	x0, x20
   2f744:	str	x4, [sp, #104]
   2f748:	ldr	x1, [x1, #1704]
   2f74c:	blr	x1
   2f750:	ldr	x4, [sp, #104]
   2f754:	ldr	x20, [x21, #24]
   2f758:	b	2f42c <PyInit__decimal@@Base+0x14eac>
   2f75c:	eor	w1, w25, w26
   2f760:	mov	x0, x21
   2f764:	and	w1, w1, #0x1
   2f768:	mov	w2, #0x2                   	// #2
   2f76c:	bl	28cd8 <PyInit__decimal@@Base+0xe758>
   2f770:	ldr	w0, [x22]
   2f774:	ldp	x27, x28, [sp, #80]
   2f778:	orr	w0, w0, #0x4
   2f77c:	str	w0, [x22]
   2f780:	b	2f334 <PyInit__decimal@@Base+0x14db4>
   2f784:	mov	x3, x1
   2f788:	eor	w1, w25, w26
   2f78c:	and	w1, w1, #0x1
   2f790:	mov	x0, x21
   2f794:	mov	x2, #0x0                   	// #0
   2f798:	bl	26d90 <PyInit__decimal@@Base+0xc810>
   2f79c:	mov	x2, x22
   2f7a0:	mov	x1, x23
   2f7a4:	mov	x0, x21
   2f7a8:	bl	2b110 <PyInit__decimal@@Base+0x10b90>
   2f7ac:	ldp	x29, x30, [sp]
   2f7b0:	ldp	x19, x20, [sp, #16]
   2f7b4:	ldp	x21, x22, [sp, #32]
   2f7b8:	ldp	x23, x24, [sp, #48]
   2f7bc:	ldp	x25, x26, [sp, #64]
   2f7c0:	ldp	x27, x28, [sp, #80]
   2f7c4:	add	sp, sp, #0x4d0
   2f7c8:	ret
   2f7cc:	mov	x2, x22
   2f7d0:	mov	x0, x21
   2f7d4:	bl	25588 <PyInit__decimal@@Base+0xb008>
   2f7d8:	b	2f640 <PyInit__decimal@@Base+0x150c0>
   2f7dc:	cmp	x20, x5
   2f7e0:	b.le	2f3fc <PyInit__decimal@@Base+0x14e7c>
   2f7e4:	b	2f608 <PyInit__decimal@@Base+0x15088>
   2f7e8:	mov	x0, x21
   2f7ec:	mov	w2, #0x4                   	// #4
   2f7f0:	mov	w1, #0x0                   	// #0
   2f7f4:	bl	28cd8 <PyInit__decimal@@Base+0xe758>
   2f7f8:	ldrb	w0, [sp, #160]
   2f7fc:	tst	w0, #0xe0
   2f800:	b.ne	2f818 <PyInit__decimal@@Base+0x15298>  // b.any
   2f804:	adrp	x1, 5f000 <PyInit__decimal@@Base+0x44a80>
   2f808:	ldr	x0, [sp, #200]
   2f80c:	ldr	x1, [x1, #1704]
   2f810:	blr	x1
   2f814:	ldrb	w0, [sp, #160]
   2f818:	tbnz	w0, #4, 2f538 <PyInit__decimal@@Base+0x14fb8>
   2f81c:	adrp	x1, 5f000 <PyInit__decimal@@Base+0x44a80>
   2f820:	mov	x0, x20
   2f824:	ldr	x1, [x1, #1704]
   2f828:	blr	x1
   2f82c:	b	2f538 <PyInit__decimal@@Base+0x14fb8>
   2f830:	cmp	x27, #0x0
   2f834:	cset	w0, gt
   2f838:	tst	w28, w0
   2f83c:	b.eq	2f534 <PyInit__decimal@@Base+0x14fb4>  // b.none
   2f840:	cmp	x24, #0x0
   2f844:	b.le	2f9cc <PyInit__decimal@@Base+0x1544c>
   2f848:	mov	x1, #0x0                   	// #0
   2f84c:	b	2f85c <PyInit__decimal@@Base+0x152dc>
   2f850:	add	x1, x1, #0x1
   2f854:	cmp	x1, x24
   2f858:	b.eq	2f9cc <PyInit__decimal@@Base+0x1544c>  // b.none
   2f85c:	ldr	x0, [x2, x1, lsl #3]
   2f860:	cbz	x0, 2f850 <PyInit__decimal@@Base+0x152d0>
   2f864:	mov	x3, #0xcccccccccccccccc    	// #-3689348814741910324
   2f868:	add	x2, x1, x1, lsl #2
   2f86c:	movk	x3, #0xcccd
   2f870:	mov	x4, #0x9999999999999999    	// #-7378697629483820647
   2f874:	lsl	x2, x2, #2
   2f878:	movk	x4, #0x1999, lsl #48
   2f87c:	mul	x5, x0, x3
   2f880:	sub	x2, x2, x1
   2f884:	ror	x1, x5, #1
   2f888:	cmp	x1, x4
   2f88c:	b.hi	2f8ac <PyInit__decimal@@Base+0x1532c>  // b.pmore
   2f890:	umulh	x0, x0, x3
   2f894:	add	x2, x2, #0x1
   2f898:	lsr	x0, x0, #3
   2f89c:	mul	x1, x0, x3
   2f8a0:	ror	x1, x1, #1
   2f8a4:	cmp	x1, x4
   2f8a8:	b.ls	2f890 <PyInit__decimal@@Base+0x15310>  // b.plast
   2f8ac:	cmp	x27, x2
   2f8b0:	mov	x0, x21
   2f8b4:	csel	x1, x27, x2, le
   2f8b8:	add	x26, x26, x1
   2f8bc:	bl	2aa80 <PyInit__decimal@@Base+0x10500>
   2f8c0:	b	2f534 <PyInit__decimal@@Base+0x14fb4>
   2f8c4:	ldr	x3, [x1, #112]
   2f8c8:	cmp	x0, x3
   2f8cc:	b.cs	2f980 <PyInit__decimal@@Base+0x15400>  // b.hs, b.nlast
   2f8d0:	ldr	x3, [x1, #88]
   2f8d4:	cmp	x0, x3
   2f8d8:	b.cc	2f9fc <PyInit__decimal@@Base+0x1547c>  // b.lo, b.ul, b.last
   2f8dc:	ldr	x5, [x1, #104]
   2f8e0:	mov	x3, #0xe                   	// #14
   2f8e4:	cmp	x0, x5
   2f8e8:	b.cs	2f4e8 <PyInit__decimal@@Base+0x14f68>  // b.hs, b.nlast
   2f8ec:	ldr	x1, [x1, #96]
   2f8f0:	cmp	x0, x1
   2f8f4:	cset	x3, cs  // cs = hs, nlast
   2f8f8:	add	x3, x3, #0xc
   2f8fc:	b	2f4e8 <PyInit__decimal@@Base+0x14f68>
   2f900:	mov	x24, x20
   2f904:	mov	x19, #0x0                   	// #0
   2f908:	mov	x20, #0x0                   	// #0
   2f90c:	b	2f460 <PyInit__decimal@@Base+0x14ee0>
   2f910:	ldr	x0, [x19, #40]
   2f914:	ldr	x2, [x24, #24]
   2f918:	ldr	x3, [x0]
   2f91c:	ldr	x1, [x24, #40]
   2f920:	ldr	x0, [x21, #40]
   2f924:	bl	1b700 <PyInit__decimal@@Base+0x1180>
   2f928:	mov	x4, x0
   2f92c:	b	2f42c <PyInit__decimal@@Base+0x14eac>
   2f930:	mov	x2, x22
   2f934:	mov	x0, x21
   2f938:	str	x4, [sp, #104]
   2f93c:	bl	25588 <PyInit__decimal@@Base+0xb008>
   2f940:	ldrb	w0, [x21]
   2f944:	ldr	x2, [x21, #40]
   2f948:	ldr	x4, [sp, #104]
   2f94c:	b	2f48c <PyInit__decimal@@Base+0x14f0c>
   2f950:	ldr	x3, [x1, #48]
   2f954:	cmp	x0, x3
   2f958:	b.cc	2fa10 <PyInit__decimal@@Base+0x15490>  // b.lo, b.ul, b.last
   2f95c:	ldr	x5, [x1, #64]
   2f960:	mov	x3, #0x9                   	// #9
   2f964:	cmp	x0, x5
   2f968:	b.cs	2f4e8 <PyInit__decimal@@Base+0x14f68>  // b.hs, b.nlast
   2f96c:	ldr	x1, [x1, #56]
   2f970:	cmp	x0, x1
   2f974:	cset	x3, cs  // cs = hs, nlast
   2f978:	add	x3, x3, #0x7
   2f97c:	b	2f4e8 <PyInit__decimal@@Base+0x14f68>
   2f980:	ldr	x3, [x1, #144]
   2f984:	cmp	x0, x3
   2f988:	b.cs	2f9d4 <PyInit__decimal@@Base+0x15454>  // b.hs, b.nlast
   2f98c:	ldr	x3, [x1, #128]
   2f990:	cmp	x0, x3
   2f994:	b.cs	2fa24 <PyInit__decimal@@Base+0x154a4>  // b.hs, b.nlast
   2f998:	ldr	x1, [x1, #120]
   2f99c:	cmp	x0, x1
   2f9a0:	cset	x3, cs  // cs = hs, nlast
   2f9a4:	add	x3, x3, #0xf
   2f9a8:	b	2f4e8 <PyInit__decimal@@Base+0x14f68>
   2f9ac:	mov	x2, x22
   2f9b0:	mov	x0, x21
   2f9b4:	str	x4, [sp, #104]
   2f9b8:	bl	25438 <PyInit__decimal@@Base+0xaeb8>
   2f9bc:	ldrb	w0, [x21]
   2f9c0:	ldr	x2, [x21, #40]
   2f9c4:	ldr	x4, [sp, #104]
   2f9c8:	b	2f48c <PyInit__decimal@@Base+0x14f0c>
   2f9cc:	mov	x2, #0x0                   	// #0
   2f9d0:	b	2f8ac <PyInit__decimal@@Base+0x1532c>
   2f9d4:	ldr	x1, [x1, #152]
   2f9d8:	cmp	x0, x1
   2f9dc:	cset	x3, cs  // cs = hs, nlast
   2f9e0:	add	x3, x3, #0x13
   2f9e4:	b	2f4e8 <PyInit__decimal@@Base+0x14f68>
   2f9e8:	ldr	x1, [x1, #24]
   2f9ec:	cmp	x0, x1
   2f9f0:	cset	x3, cs  // cs = hs, nlast
   2f9f4:	add	x3, x3, #0x3
   2f9f8:	b	2f4e8 <PyInit__decimal@@Base+0x14f68>
   2f9fc:	ldr	x1, [x1, #80]
   2fa00:	cmp	x0, x1
   2fa04:	cset	x3, cs  // cs = hs, nlast
   2fa08:	add	x3, x3, #0xa
   2fa0c:	b	2f4e8 <PyInit__decimal@@Base+0x14f68>
   2fa10:	ldr	x1, [x1, #40]
   2fa14:	cmp	x0, x1
   2fa18:	cset	x3, cs  // cs = hs, nlast
   2fa1c:	add	x3, x3, #0x5
   2fa20:	b	2f4e8 <PyInit__decimal@@Base+0x14f68>
   2fa24:	ldr	x1, [x1, #136]
   2fa28:	cmp	x0, x1
   2fa2c:	cset	x3, cs  // cs = hs, nlast
   2fa30:	add	x3, x3, #0x11
   2fa34:	b	2f4e8 <PyInit__decimal@@Base+0x14f68>
   2fa38:	mov	x24, x20
   2fa3c:	sub	x20, x20, #0x1
   2fa40:	b	2f460 <PyInit__decimal@@Base+0x14ee0>
   2fa44:	nop
   2fa48:	sub	sp, sp, #0x2a0
   2fa4c:	mov	x6, #0x40                  	// #64
   2fa50:	stp	x29, x30, [sp]
   2fa54:	mov	x29, sp
   2fa58:	stp	x19, x20, [sp, #16]
   2fa5c:	mov	x19, x2
   2fa60:	mov	w2, #0x30                  	// #48
   2fa64:	strb	w2, [sp, #112]
   2fa68:	mov	x20, x3
   2fa6c:	ldr	x9, [x19, #24]
   2fa70:	stp	xzr, xzr, [sp, #120]
   2fa74:	add	x3, sp, #0xa0
   2fa78:	ldr	x2, [x19, #40]
   2fa7c:	stp	xzr, x6, [sp, #136]
   2fa80:	stp	x21, x22, [sp, #32]
   2fa84:	mov	x22, x1
   2fa88:	add	x2, x2, x9, lsl #3
   2fa8c:	stp	x23, x24, [sp, #48]
   2fa90:	mov	x23, x0
   2fa94:	stp	x25, x26, [sp, #64]
   2fa98:	mov	x26, x5
   2fa9c:	stp	x27, x28, [sp, #80]
   2faa0:	ldur	x2, [x2, #-8]
   2faa4:	str	x3, [sp, #152]
   2faa8:	ldr	x7, [x20, #8]
   2faac:	ldr	x6, [x19, #8]
   2fab0:	ldrb	w28, [x19]
   2fab4:	ldrb	w24, [x20]
   2fab8:	cmp	x6, x7
   2fabc:	csel	x25, x6, x7, le
   2fac0:	eor	w24, w28, w24
   2fac4:	and	w24, w24, #0x1
   2fac8:	cbz	x2, 2fdc8 <PyInit__decimal@@Base+0x15848>
   2facc:	ldr	x0, [x19, #16]
   2fad0:	ldr	x1, [x20, #16]
   2fad4:	add	x0, x6, x0
   2fad8:	add	x1, x7, x1
   2fadc:	subs	x0, x0, x1
   2fae0:	b.mi	2fd78 <PyInit__decimal@@Base+0x157f8>  // b.first
   2fae4:	ldr	x1, [x4]
   2fae8:	mov	x8, x4
   2faec:	cmp	x0, x1
   2faf0:	b.gt	2fe90 <PyInit__decimal@@Base+0x15910>
   2faf4:	cmp	x6, x7
   2faf8:	b.eq	2fe70 <PyInit__decimal@@Base+0x158f0>  // b.none
   2fafc:	str	x4, [sp, #104]
   2fb00:	sub	x2, x6, x7
   2fb04:	add	x27, sp, #0x70
   2fb08:	cmp	x2, #0x0
   2fb0c:	b.le	2fea0 <PyInit__decimal@@Base+0x15920>
   2fb10:	mov	x1, x19
   2fb14:	mov	x0, x27
   2fb18:	mov	x3, x5
   2fb1c:	bl	2a2e0 <PyInit__decimal@@Base+0xfd60>
   2fb20:	ldr	x8, [sp, #104]
   2fb24:	cbz	w0, 2fddc <PyInit__decimal@@Base+0x1585c>
   2fb28:	ldr	x21, [sp, #136]
   2fb2c:	mov	x19, x27
   2fb30:	ldr	x0, [x20, #24]
   2fb34:	add	x21, x21, #0x1
   2fb38:	sub	x21, x21, x0
   2fb3c:	cmp	x0, x21
   2fb40:	ccmp	x20, x23, #0x0, gt
   2fb44:	b.eq	2fb74 <PyInit__decimal@@Base+0x155f4>  // b.none
   2fb48:	adrp	x1, 5f000 <PyInit__decimal@@Base+0x44a80>
   2fb4c:	ldr	x0, [x23, #32]
   2fb50:	ldr	x1, [x1, #1672]
   2fb54:	cmp	x1, x21
   2fb58:	csel	x1, x1, x21, ge  // ge = tcont
   2fb5c:	cmp	x1, x0
   2fb60:	b.eq	2fb74 <PyInit__decimal@@Base+0x155f4>  // b.none
   2fb64:	ldrb	w2, [x23]
   2fb68:	tbz	w2, #5, 3004c <PyInit__decimal@@Base+0x15acc>
   2fb6c:	cmp	x1, x0
   2fb70:	b.gt	30110 <PyInit__decimal@@Base+0x15b90>
   2fb74:	cmp	x22, x19
   2fb78:	ldr	x27, [x20, #24]
   2fb7c:	b.eq	2fee4 <PyInit__decimal@@Base+0x15964>  // b.none
   2fb80:	adrp	x1, 5f000 <PyInit__decimal@@Base+0x44a80>
   2fb84:	ldr	x0, [x22, #32]
   2fb88:	ldr	x1, [x1, #1672]
   2fb8c:	cmp	x1, x27
   2fb90:	csel	x1, x1, x27, ge  // ge = tcont
   2fb94:	cmp	x1, x0
   2fb98:	b.eq	2fef0 <PyInit__decimal@@Base+0x15970>  // b.none
   2fb9c:	ldrb	w2, [x22]
   2fba0:	tbz	w2, #5, 2fff0 <PyInit__decimal@@Base+0x15a70>
   2fba4:	cmp	x1, x0
   2fba8:	mov	x5, x27
   2fbac:	b.gt	300f8 <PyInit__decimal@@Base+0x15b78>
   2fbb0:	cmp	x5, #0x1
   2fbb4:	b.eq	2fef8 <PyInit__decimal@@Base+0x15978>  // b.none
   2fbb8:	str	x8, [sp, #104]
   2fbbc:	cmp	x5, #0x400
   2fbc0:	b.gt	2ff34 <PyInit__decimal@@Base+0x159b4>
   2fbc4:	ldr	x4, [x19, #24]
   2fbc8:	ldr	x2, [x19, #40]
   2fbcc:	ldr	x3, [x20, #40]
   2fbd0:	ldr	x1, [x22, #40]
   2fbd4:	ldr	x0, [x23, #40]
   2fbd8:	bl	1b7b0 <PyInit__decimal@@Base+0x1230>
   2fbdc:	cmn	w0, #0x1
   2fbe0:	b.eq	2ff94 <PyInit__decimal@@Base+0x15a14>  // b.none
   2fbe4:	ldrb	w2, [x23]
   2fbe8:	ldr	x0, [x23, #40]
   2fbec:	ldr	x8, [sp, #104]
   2fbf0:	lsl	x19, x21, #3
   2fbf4:	cmp	x21, #0x1
   2fbf8:	sub	x19, x19, #0x8
   2fbfc:	b.gt	2fc0c <PyInit__decimal@@Base+0x1568c>
   2fc00:	b	302a8 <PyInit__decimal@@Base+0x15d28>
   2fc04:	sub	x19, x19, #0x8
   2fc08:	b.eq	2ffe0 <PyInit__decimal@@Base+0x15a60>  // b.none
   2fc0c:	ldr	x1, [x0, x19]
   2fc10:	mov	x20, x21
   2fc14:	sub	x21, x21, #0x1
   2fc18:	cmp	x21, #0x1
   2fc1c:	cbz	x1, 2fc04 <PyInit__decimal@@Base+0x15684>
   2fc20:	adrp	x4, 5f000 <PyInit__decimal@@Base+0x44a80>
   2fc24:	ldr	x3, [x23, #32]
   2fc28:	ldr	x1, [x4, #1672]
   2fc2c:	cmp	x1, x20
   2fc30:	csel	x1, x1, x20, ge  // ge = tcont
   2fc34:	cmp	x1, x3
   2fc38:	b.eq	2fc48 <PyInit__decimal@@Base+0x156c8>  // b.none
   2fc3c:	tbz	w2, #5, 30078 <PyInit__decimal@@Base+0x15af8>
   2fc40:	cmp	x1, x3
   2fc44:	b.gt	3012c <PyInit__decimal@@Base+0x15bac>
   2fc48:	adrp	x3, 42000 <PyInit__decimal@@Base+0x27a80>
   2fc4c:	add	x6, x3, #0x2d0
   2fc50:	str	x20, [x23, #24]
   2fc54:	ldr	x1, [x0, x19]
   2fc58:	ldr	x5, [x6, #72]
   2fc5c:	cmp	x1, x5
   2fc60:	b.cs	2ffa4 <PyInit__decimal@@Base+0x15a24>  // b.hs, b.nlast
   2fc64:	ldr	x0, [x6, #32]
   2fc68:	cmp	x1, x0
   2fc6c:	b.cs	300c8 <PyInit__decimal@@Base+0x15b48>  // b.hs, b.nlast
   2fc70:	ldr	x0, [x6, #16]
   2fc74:	cmp	x1, x0
   2fc78:	b.cs	301d0 <PyInit__decimal@@Base+0x15c50>  // b.hs, b.nlast
   2fc7c:	ldr	x0, [x6, #8]
   2fc80:	cmp	x1, x0
   2fc84:	cset	x7, cs  // cs = hs, nlast
   2fc88:	add	x7, x7, #0x1
   2fc8c:	nop
   2fc90:	add	x0, x21, x21, lsl #2
   2fc94:	and	w2, w2, #0xfffffff0
   2fc98:	orr	w24, w24, w2
   2fc9c:	strb	w24, [x23]
   2fca0:	add	x0, x7, x0, lsl #2
   2fca4:	sub	x21, x0, x21
   2fca8:	stp	xzr, x21, [x23, #8]
   2fcac:	ldr	x0, [x8]
   2fcb0:	cmp	x0, x21
   2fcb4:	b.lt	2fe90 <PyInit__decimal@@Base+0x15910>  // b.tstop
   2fcb8:	lsl	x19, x27, #3
   2fcbc:	cmp	x27, #0x1
   2fcc0:	sub	x19, x19, #0x8
   2fcc4:	ldr	x2, [x22, #40]
   2fcc8:	b.gt	2fcd8 <PyInit__decimal@@Base+0x15758>
   2fccc:	b	302c8 <PyInit__decimal@@Base+0x15d48>
   2fcd0:	sub	x19, x19, #0x8
   2fcd4:	b.eq	30068 <PyInit__decimal@@Base+0x15ae8>  // b.none
   2fcd8:	ldr	x0, [x2, x19]
   2fcdc:	mov	x20, x27
   2fce0:	sub	x27, x27, #0x1
   2fce4:	cmp	x27, #0x1
   2fce8:	cbz	x0, 2fcd0 <PyInit__decimal@@Base+0x15750>
   2fcec:	ldr	x1, [x4, #1672]
   2fcf0:	ldr	x0, [x22, #32]
   2fcf4:	cmp	x1, x20
   2fcf8:	csel	x1, x1, x20, ge  // ge = tcont
   2fcfc:	ldrb	w4, [x22]
   2fd00:	cmp	x1, x0
   2fd04:	b.eq	2fd14 <PyInit__decimal@@Base+0x15794>  // b.none
   2fd08:	tbz	w4, #5, 30150 <PyInit__decimal@@Base+0x15bd0>
   2fd0c:	cmp	x1, x0
   2fd10:	b.gt	301f8 <PyInit__decimal@@Base+0x15c78>
   2fd14:	str	x20, [x22, #24]
   2fd18:	add	x3, x3, #0x2d0
   2fd1c:	ldr	x0, [x2, x19]
   2fd20:	cmp	x5, x0
   2fd24:	b.ls	30010 <PyInit__decimal@@Base+0x15a90>  // b.plast
   2fd28:	ldr	x1, [x3, #32]
   2fd2c:	cmp	x0, x1
   2fd30:	b.cs	30174 <PyInit__decimal@@Base+0x15bf4>  // b.hs, b.nlast
   2fd34:	ldr	x1, [x3, #16]
   2fd38:	cmp	x0, x1
   2fd3c:	b.cs	30244 <PyInit__decimal@@Base+0x15cc4>  // b.hs, b.nlast
   2fd40:	ldr	x1, [x3, #8]
   2fd44:	cmp	x0, x1
   2fd48:	cset	x1, cs  // cs = hs, nlast
   2fd4c:	add	x1, x1, #0x1
   2fd50:	add	x0, x27, x27, lsl #2
   2fd54:	and	w28, w28, #0x1
   2fd58:	and	w4, w4, #0xfffffff0
   2fd5c:	lsl	x0, x0, #2
   2fd60:	orr	w4, w28, w4
   2fd64:	sub	x27, x0, x27
   2fd68:	strb	w4, [x22]
   2fd6c:	add	x27, x27, x1
   2fd70:	stp	x25, x27, [x22, #8]
   2fd74:	b	2fdfc <PyInit__decimal@@Base+0x1587c>
   2fd78:	cmp	x6, x7
   2fd7c:	b.gt	2fe50 <PyInit__decimal@@Base+0x158d0>
   2fd80:	mov	x2, x5
   2fd84:	mov	x1, x19
   2fd88:	mov	x0, x22
   2fd8c:	bl	28fe0 <PyInit__decimal@@Base+0xea60>
   2fd90:	cbz	w0, 2fddc <PyInit__decimal@@Base+0x1585c>
   2fd94:	mov	w1, w24
   2fd98:	mov	x0, x23
   2fd9c:	mov	x3, #0x0                   	// #0
   2fda0:	mov	x2, #0x0                   	// #0
   2fda4:	bl	26d90 <PyInit__decimal@@Base+0xc810>
   2fda8:	ldp	x29, x30, [sp]
   2fdac:	ldp	x19, x20, [sp, #16]
   2fdb0:	ldp	x21, x22, [sp, #32]
   2fdb4:	ldp	x23, x24, [sp, #48]
   2fdb8:	ldp	x25, x26, [sp, #64]
   2fdbc:	ldp	x27, x28, [sp, #80]
   2fdc0:	add	sp, sp, #0x2a0
   2fdc4:	ret
   2fdc8:	mov	x2, x5
   2fdcc:	mov	x1, x19
   2fdd0:	mov	x0, x22
   2fdd4:	bl	28fe0 <PyInit__decimal@@Base+0xea60>
   2fdd8:	cbnz	w0, 2fe68 <PyInit__decimal@@Base+0x158e8>
   2fddc:	mov	x0, x23
   2fde0:	mov	w2, #0x4                   	// #4
   2fde4:	mov	w1, #0x0                   	// #0
   2fde8:	bl	28cd8 <PyInit__decimal@@Base+0xe758>
   2fdec:	mov	x0, x22
   2fdf0:	mov	w2, #0x4                   	// #4
   2fdf4:	mov	w1, #0x0                   	// #0
   2fdf8:	bl	28cd8 <PyInit__decimal@@Base+0xe758>
   2fdfc:	ldrb	w0, [sp, #112]
   2fe00:	tst	w0, #0xe0
   2fe04:	b.ne	2fe1c <PyInit__decimal@@Base+0x1589c>  // b.any
   2fe08:	adrp	x1, 5f000 <PyInit__decimal@@Base+0x44a80>
   2fe0c:	ldr	x0, [sp, #152]
   2fe10:	ldr	x1, [x1, #1704]
   2fe14:	blr	x1
   2fe18:	ldrb	w0, [sp, #112]
   2fe1c:	tbnz	w0, #4, 2fe30 <PyInit__decimal@@Base+0x158b0>
   2fe20:	adrp	x1, 5f000 <PyInit__decimal@@Base+0x44a80>
   2fe24:	add	x0, sp, #0x70
   2fe28:	ldr	x1, [x1, #1704]
   2fe2c:	blr	x1
   2fe30:	ldp	x29, x30, [sp]
   2fe34:	ldp	x19, x20, [sp, #16]
   2fe38:	ldp	x21, x22, [sp, #32]
   2fe3c:	ldp	x23, x24, [sp, #48]
   2fe40:	ldp	x25, x26, [sp, #64]
   2fe44:	ldp	x27, x28, [sp, #80]
   2fe48:	add	sp, sp, #0x2a0
   2fe4c:	ret
   2fe50:	mov	x3, x5
   2fe54:	sub	x2, x6, x7
   2fe58:	mov	x1, x19
   2fe5c:	mov	x0, x22
   2fe60:	bl	2a2e0 <PyInit__decimal@@Base+0xfd60>
   2fe64:	cbz	w0, 2fddc <PyInit__decimal@@Base+0x1585c>
   2fe68:	str	x25, [x22, #8]
   2fe6c:	b	2fd94 <PyInit__decimal@@Base+0x15814>
   2fe70:	ldr	x0, [x20, #24]
   2fe74:	cmp	x19, x23
   2fe78:	sub	x21, x9, x0
   2fe7c:	add	x21, x21, #0x1
   2fe80:	b.ne	2fb3c <PyInit__decimal@@Base+0x155bc>  // b.any
   2fe84:	cmp	x9, x21
   2fe88:	b.gt	2fb74 <PyInit__decimal@@Base+0x155f4>
   2fe8c:	b	2fb3c <PyInit__decimal@@Base+0x155bc>
   2fe90:	ldr	w0, [x26]
   2fe94:	orr	w0, w0, #0x8
   2fe98:	str	w0, [x26]
   2fe9c:	b	2fddc <PyInit__decimal@@Base+0x1585c>
   2fea0:	sub	x2, x7, x6
   2fea4:	mov	x1, x20
   2fea8:	mov	x0, x27
   2feac:	mov	x3, x5
   2feb0:	bl	2a2e0 <PyInit__decimal@@Base+0xfd60>
   2feb4:	ldr	x8, [sp, #104]
   2feb8:	cbz	w0, 2fddc <PyInit__decimal@@Base+0x1585c>
   2febc:	ldr	x0, [x19, #24]
   2fec0:	mov	x20, x27
   2fec4:	ldr	x21, [sp, #136]
   2fec8:	cmp	x19, x23
   2fecc:	sub	x21, x0, x21
   2fed0:	add	x21, x21, #0x1
   2fed4:	b.ne	2fb48 <PyInit__decimal@@Base+0x155c8>  // b.any
   2fed8:	cmp	x21, x0
   2fedc:	b.ge	2fb48 <PyInit__decimal@@Base+0x155c8>  // b.tcont
   2fee0:	b	2fb74 <PyInit__decimal@@Base+0x155f4>
   2fee4:	ldr	x0, [x22, #24]
   2fee8:	cmp	x27, x0
   2feec:	b.ge	2fb80 <PyInit__decimal@@Base+0x15600>  // b.tcont
   2fef0:	mov	x5, x27
   2fef4:	b	2fbb0 <PyInit__decimal@@Base+0x15630>
   2fef8:	ldr	x0, [x20, #40]
   2fefc:	ldr	x2, [x19, #24]
   2ff00:	ldr	x3, [x0]
   2ff04:	cmp	x2, #0x1
   2ff08:	ldr	x1, [x19, #40]
   2ff0c:	ldr	x0, [x23, #40]
   2ff10:	ldr	x19, [x22, #40]
   2ff14:	b.ne	2ff78 <PyInit__decimal@@Base+0x159f8>  // b.any
   2ff18:	ldr	x2, [x1]
   2ff1c:	udiv	x1, x2, x3
   2ff20:	msub	x3, x1, x3, x2
   2ff24:	str	x1, [x0]
   2ff28:	str	x3, [x19]
   2ff2c:	ldrb	w2, [x23]
   2ff30:	b	2fbf0 <PyInit__decimal@@Base+0x15670>
   2ff34:	mov	x2, x19
   2ff38:	mov	x3, x20
   2ff3c:	mov	x4, x26
   2ff40:	mov	x1, x22
   2ff44:	mov	x0, x23
   2ff48:	bl	2ede0 <PyInit__decimal@@Base+0x14860>
   2ff4c:	ldrb	w2, [x23]
   2ff50:	tst	w2, #0xe
   2ff54:	b.ne	2fddc <PyInit__decimal@@Base+0x1585c>  // b.any
   2ff58:	ldrb	w0, [x22]
   2ff5c:	tst	w0, #0xe
   2ff60:	b.ne	2fddc <PyInit__decimal@@Base+0x1585c>  // b.any
   2ff64:	ldr	x27, [x22, #24]
   2ff68:	ldr	x21, [x23, #24]
   2ff6c:	ldr	x0, [x23, #40]
   2ff70:	ldr	x8, [sp, #104]
   2ff74:	b	2fbf0 <PyInit__decimal@@Base+0x15670>
   2ff78:	str	x8, [sp, #104]
   2ff7c:	bl	1b700 <PyInit__decimal@@Base+0x1180>
   2ff80:	str	x0, [x19]
   2ff84:	ldr	x0, [x23, #40]
   2ff88:	ldrb	w2, [x23]
   2ff8c:	ldr	x8, [sp, #104]
   2ff90:	b	2fbf0 <PyInit__decimal@@Base+0x15670>
   2ff94:	ldr	w0, [x26]
   2ff98:	orr	w0, w0, #0x200
   2ff9c:	str	w0, [x26]
   2ffa0:	b	2fddc <PyInit__decimal@@Base+0x1585c>
   2ffa4:	ldr	x0, [x6, #112]
   2ffa8:	cmp	x1, x0
   2ffac:	b.cs	3009c <PyInit__decimal@@Base+0x15b1c>  // b.hs, b.nlast
   2ffb0:	ldr	x0, [x6, #88]
   2ffb4:	cmp	x1, x0
   2ffb8:	b.cc	30230 <PyInit__decimal@@Base+0x15cb0>  // b.lo, b.ul, b.last
   2ffbc:	ldr	x0, [x6, #104]
   2ffc0:	mov	x7, #0xe                   	// #14
   2ffc4:	cmp	x1, x0
   2ffc8:	b.cs	2fc90 <PyInit__decimal@@Base+0x15710>  // b.hs, b.nlast
   2ffcc:	ldr	x0, [x6, #96]
   2ffd0:	cmp	x1, x0
   2ffd4:	cset	x7, cs  // cs = hs, nlast
   2ffd8:	add	x7, x7, #0xc
   2ffdc:	b	2fc90 <PyInit__decimal@@Base+0x15710>
   2ffe0:	mov	x20, x21
   2ffe4:	mov	x19, #0x0                   	// #0
   2ffe8:	mov	x21, #0x0                   	// #0
   2ffec:	b	2fc20 <PyInit__decimal@@Base+0x156a0>
   2fff0:	mov	x2, x26
   2fff4:	mov	x0, x22
   2fff8:	str	x8, [sp, #104]
   2fffc:	bl	25588 <PyInit__decimal@@Base+0xb008>
   30000:	ldr	x8, [sp, #104]
   30004:	cbz	w0, 2fddc <PyInit__decimal@@Base+0x1585c>
   30008:	ldr	x5, [x20, #24]
   3000c:	b	2fbb0 <PyInit__decimal@@Base+0x15630>
   30010:	ldr	x1, [x3, #112]
   30014:	cmp	x0, x1
   30018:	b.cs	301a4 <PyInit__decimal@@Base+0x15c24>  // b.hs, b.nlast
   3001c:	ldr	x1, [x3, #88]
   30020:	cmp	x0, x1
   30024:	b.cc	30280 <PyInit__decimal@@Base+0x15d00>  // b.lo, b.ul, b.last
   30028:	ldr	x2, [x3, #104]
   3002c:	mov	x1, #0xe                   	// #14
   30030:	cmp	x0, x2
   30034:	b.cs	2fd50 <PyInit__decimal@@Base+0x157d0>  // b.hs, b.nlast
   30038:	ldr	x1, [x3, #96]
   3003c:	cmp	x0, x1
   30040:	cset	x1, cs  // cs = hs, nlast
   30044:	add	x1, x1, #0xc
   30048:	b	2fd50 <PyInit__decimal@@Base+0x157d0>
   3004c:	mov	x2, x26
   30050:	mov	x0, x23
   30054:	str	x8, [sp, #104]
   30058:	bl	25588 <PyInit__decimal@@Base+0xb008>
   3005c:	ldr	x8, [sp, #104]
   30060:	cbnz	w0, 2fb74 <PyInit__decimal@@Base+0x155f4>
   30064:	b	2fddc <PyInit__decimal@@Base+0x1585c>
   30068:	mov	x20, x27
   3006c:	mov	x19, #0x0                   	// #0
   30070:	mov	x27, #0x0                   	// #0
   30074:	b	2fcec <PyInit__decimal@@Base+0x1576c>
   30078:	mov	x2, x26
   3007c:	mov	x0, x23
   30080:	str	x8, [sp, #104]
   30084:	bl	25588 <PyInit__decimal@@Base+0xb008>
   30088:	ldrb	w2, [x23]
   3008c:	adrp	x4, 5f000 <PyInit__decimal@@Base+0x44a80>
   30090:	ldr	x0, [x23, #40]
   30094:	ldr	x8, [sp, #104]
   30098:	b	2fc48 <PyInit__decimal@@Base+0x156c8>
   3009c:	ldr	x0, [x6, #144]
   300a0:	cmp	x1, x0
   300a4:	b.cs	301e4 <PyInit__decimal@@Base+0x15c64>  // b.hs, b.nlast
   300a8:	ldr	x0, [x6, #128]
   300ac:	cmp	x1, x0
   300b0:	b.cs	3026c <PyInit__decimal@@Base+0x15cec>  // b.hs, b.nlast
   300b4:	ldr	x0, [x6, #120]
   300b8:	cmp	x1, x0
   300bc:	cset	x7, cs  // cs = hs, nlast
   300c0:	add	x7, x7, #0xf
   300c4:	b	2fc90 <PyInit__decimal@@Base+0x15710>
   300c8:	ldr	x0, [x6, #48]
   300cc:	cmp	x1, x0
   300d0:	b.cc	3021c <PyInit__decimal@@Base+0x15c9c>  // b.lo, b.ul, b.last
   300d4:	ldr	x0, [x6, #64]
   300d8:	mov	x7, #0x9                   	// #9
   300dc:	cmp	x1, x0
   300e0:	b.cs	2fc90 <PyInit__decimal@@Base+0x15710>  // b.hs, b.nlast
   300e4:	ldr	x0, [x6, #56]
   300e8:	cmp	x1, x0
   300ec:	cset	x7, cs  // cs = hs, nlast
   300f0:	add	x7, x7, #0x7
   300f4:	b	2fc90 <PyInit__decimal@@Base+0x15710>
   300f8:	mov	x2, x26
   300fc:	mov	x0, x22
   30100:	str	x8, [sp, #104]
   30104:	bl	25438 <PyInit__decimal@@Base+0xaeb8>
   30108:	ldr	x8, [sp, #104]
   3010c:	b	30004 <PyInit__decimal@@Base+0x15a84>
   30110:	mov	x2, x26
   30114:	mov	x0, x23
   30118:	str	x8, [sp, #104]
   3011c:	bl	25438 <PyInit__decimal@@Base+0xaeb8>
   30120:	ldr	x8, [sp, #104]
   30124:	cbnz	w0, 2fb74 <PyInit__decimal@@Base+0x155f4>
   30128:	b	2fddc <PyInit__decimal@@Base+0x1585c>
   3012c:	mov	x2, x26
   30130:	mov	x0, x23
   30134:	str	x8, [sp, #104]
   30138:	bl	25438 <PyInit__decimal@@Base+0xaeb8>
   3013c:	ldrb	w2, [x23]
   30140:	adrp	x4, 5f000 <PyInit__decimal@@Base+0x44a80>
   30144:	ldr	x0, [x23, #40]
   30148:	ldr	x8, [sp, #104]
   3014c:	b	2fc48 <PyInit__decimal@@Base+0x156c8>
   30150:	mov	x2, x26
   30154:	mov	x0, x22
   30158:	str	x5, [sp, #104]
   3015c:	bl	25588 <PyInit__decimal@@Base+0xb008>
   30160:	ldrb	w4, [x22]
   30164:	adrp	x3, 42000 <PyInit__decimal@@Base+0x27a80>
   30168:	ldr	x2, [x22, #40]
   3016c:	ldr	x5, [sp, #104]
   30170:	b	2fd14 <PyInit__decimal@@Base+0x15794>
   30174:	ldr	x1, [x3, #48]
   30178:	cmp	x0, x1
   3017c:	b.cc	30294 <PyInit__decimal@@Base+0x15d14>  // b.lo, b.ul, b.last
   30180:	ldr	x2, [x3, #64]
   30184:	mov	x1, #0x9                   	// #9
   30188:	cmp	x0, x2
   3018c:	b.cs	2fd50 <PyInit__decimal@@Base+0x157d0>  // b.hs, b.nlast
   30190:	ldr	x1, [x3, #56]
   30194:	cmp	x0, x1
   30198:	cset	x1, cs  // cs = hs, nlast
   3019c:	add	x1, x1, #0x7
   301a0:	b	2fd50 <PyInit__decimal@@Base+0x157d0>
   301a4:	ldr	x1, [x3, #144]
   301a8:	cmp	x0, x1
   301ac:	b.cs	30258 <PyInit__decimal@@Base+0x15cd8>  // b.hs, b.nlast
   301b0:	ldr	x1, [x3, #128]
   301b4:	cmp	x0, x1
   301b8:	b.cs	302b4 <PyInit__decimal@@Base+0x15d34>  // b.hs, b.nlast
   301bc:	ldr	x1, [x3, #120]
   301c0:	cmp	x0, x1
   301c4:	cset	x1, cs  // cs = hs, nlast
   301c8:	add	x1, x1, #0xf
   301cc:	b	2fd50 <PyInit__decimal@@Base+0x157d0>
   301d0:	ldr	x0, [x6, #24]
   301d4:	cmp	x1, x0
   301d8:	cset	x7, cs  // cs = hs, nlast
   301dc:	add	x7, x7, #0x3
   301e0:	b	2fc90 <PyInit__decimal@@Base+0x15710>
   301e4:	ldr	x0, [x6, #152]
   301e8:	cmp	x1, x0
   301ec:	cset	x7, cs  // cs = hs, nlast
   301f0:	add	x7, x7, #0x13
   301f4:	b	2fc90 <PyInit__decimal@@Base+0x15710>
   301f8:	mov	x2, x26
   301fc:	mov	x0, x22
   30200:	str	x5, [sp, #104]
   30204:	bl	25438 <PyInit__decimal@@Base+0xaeb8>
   30208:	ldrb	w4, [x22]
   3020c:	adrp	x3, 42000 <PyInit__decimal@@Base+0x27a80>
   30210:	ldr	x2, [x22, #40]
   30214:	ldr	x5, [sp, #104]
   30218:	b	2fd14 <PyInit__decimal@@Base+0x15794>
   3021c:	ldr	x0, [x6, #40]
   30220:	cmp	x1, x0
   30224:	cset	x7, cs  // cs = hs, nlast
   30228:	add	x7, x7, #0x5
   3022c:	b	2fc90 <PyInit__decimal@@Base+0x15710>
   30230:	ldr	x0, [x6, #80]
   30234:	cmp	x1, x0
   30238:	cset	x7, cs  // cs = hs, nlast
   3023c:	add	x7, x7, #0xa
   30240:	b	2fc90 <PyInit__decimal@@Base+0x15710>
   30244:	ldr	x1, [x3, #24]
   30248:	cmp	x0, x1
   3024c:	cset	x1, cs  // cs = hs, nlast
   30250:	add	x1, x1, #0x3
   30254:	b	2fd50 <PyInit__decimal@@Base+0x157d0>
   30258:	ldr	x1, [x3, #152]
   3025c:	cmp	x0, x1
   30260:	cset	x1, cs  // cs = hs, nlast
   30264:	add	x1, x1, #0x13
   30268:	b	2fd50 <PyInit__decimal@@Base+0x157d0>
   3026c:	ldr	x0, [x6, #136]
   30270:	cmp	x1, x0
   30274:	cset	x7, cs  // cs = hs, nlast
   30278:	add	x7, x7, #0x11
   3027c:	b	2fc90 <PyInit__decimal@@Base+0x15710>
   30280:	ldr	x1, [x3, #80]
   30284:	cmp	x0, x1
   30288:	cset	x1, cs  // cs = hs, nlast
   3028c:	add	x1, x1, #0xa
   30290:	b	2fd50 <PyInit__decimal@@Base+0x157d0>
   30294:	ldr	x1, [x3, #40]
   30298:	cmp	x0, x1
   3029c:	cset	x1, cs  // cs = hs, nlast
   302a0:	add	x1, x1, #0x5
   302a4:	b	2fd50 <PyInit__decimal@@Base+0x157d0>
   302a8:	mov	x20, x21
   302ac:	sub	x21, x21, #0x1
   302b0:	b	2fc20 <PyInit__decimal@@Base+0x156a0>
   302b4:	ldr	x1, [x3, #136]
   302b8:	cmp	x0, x1
   302bc:	cset	x1, cs  // cs = hs, nlast
   302c0:	add	x1, x1, #0x11
   302c4:	b	2fd50 <PyInit__decimal@@Base+0x157d0>
   302c8:	mov	x20, x27
   302cc:	sub	x27, x27, #0x1
   302d0:	b	2fcec <PyInit__decimal@@Base+0x1576c>
   302d4:	nop
   302d8:	sub	sp, sp, #0x2a0
   302dc:	mov	w2, #0x30                  	// #48
   302e0:	mov	x4, #0x40                  	// #64
   302e4:	stp	x29, x30, [sp]
   302e8:	mov	x29, sp
   302ec:	stp	x19, x20, [sp, #16]
   302f0:	mov	x19, x0
   302f4:	add	x0, sp, #0xa0
   302f8:	strb	w2, [sp, #112]
   302fc:	ldp	x3, x2, [x19, #8]
   30300:	stp	xzr, xzr, [sp, #120]
   30304:	stp	xzr, x4, [sp, #136]
   30308:	str	x0, [sp, #152]
   3030c:	add	x2, x2, x3
   30310:	sub	x20, x2, #0x1
   30314:	cmp	x20, #0x0
   30318:	b.gt	30400 <PyInit__decimal@@Base+0x15e80>
   3031c:	cmn	x20, #0x1
   30320:	b.lt	303bc <PyInit__decimal@@Base+0x15e3c>  // b.tstop
   30324:	stp	x21, x22, [sp, #32]
   30328:	add	x22, sp, #0x40
   3032c:	mov	x21, x1
   30330:	mov	x0, x22
   30334:	str	x23, [sp, #48]
   30338:	bl	1d4d0 <PyInit__decimal@@Base+0x2f50>
   3033c:	add	x23, sp, #0x70
   30340:	adrp	x2, 5c000 <PyInit__decimal@@Base+0x41a80>
   30344:	add	x2, x2, #0xc58
   30348:	mov	x0, x23
   3034c:	mov	x3, x22
   30350:	mov	x4, x21
   30354:	mov	x1, x19
   30358:	add	x2, x2, #0x60
   3035c:	bl	2e5c0 <PyInit__decimal@@Base+0x14040>
   30360:	ldrb	w0, [sp, #112]
   30364:	tst	w0, #0xe
   30368:	b.ne	30524 <PyInit__decimal@@Base+0x15fa4>  // b.any
   3036c:	ldp	x19, x1, [sp, #120]
   30370:	tst	w0, #0xe0
   30374:	add	x19, x19, x1
   30378:	b.ne	30390 <PyInit__decimal@@Base+0x15e10>  // b.any
   3037c:	adrp	x1, 5f000 <PyInit__decimal@@Base+0x44a80>
   30380:	ldr	x0, [sp, #152]
   30384:	ldr	x1, [x1, #1704]
   30388:	blr	x1
   3038c:	ldrb	w0, [sp, #112]
   30390:	tbz	w0, #4, 304b4 <PyInit__decimal@@Base+0x15f34>
   30394:	ldp	x21, x22, [sp, #32]
   30398:	cmp	x20, #0x0
   3039c:	cinc	x19, x19, ne  // ne = any
   303a0:	ldr	x23, [sp, #48]
   303a4:	sub	x19, x19, #0x3
   303a8:	mov	x0, x19
   303ac:	ldp	x29, x30, [sp]
   303b0:	ldp	x19, x20, [sp, #16]
   303b4:	add	sp, sp, #0x2a0
   303b8:	ret
   303bc:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27a80>
   303c0:	add	x0, x0, #0x2d0
   303c4:	cmp	x2, #0x0
   303c8:	cneg	x2, x2, lt  // lt = tstop
   303cc:	ldr	x1, [x0, #72]
   303d0:	cmp	x2, x1
   303d4:	b.cs	30478 <PyInit__decimal@@Base+0x15ef8>  // b.hs, b.nlast
   303d8:	ldr	x1, [x0, #32]
   303dc:	cmp	x2, x1
   303e0:	b.cs	30564 <PyInit__decimal@@Base+0x15fe4>  // b.hs, b.nlast
   303e4:	ldr	x1, [x0, #16]
   303e8:	cmp	x2, x1
   303ec:	b.cs	305f4 <PyInit__decimal@@Base+0x16074>  // b.hs, b.nlast
   303f0:	ldr	x0, [x0, #8]
   303f4:	cmp	x2, x0
   303f8:	cset	x19, cs  // cs = hs, nlast
   303fc:	b	303a8 <PyInit__decimal@@Base+0x15e28>
   30400:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27a80>
   30404:	add	x0, x0, #0x2d0
   30408:	ldr	x1, [x0, #72]
   3040c:	cmp	x20, x1
   30410:	b.cs	3043c <PyInit__decimal@@Base+0x15ebc>  // b.hs, b.nlast
   30414:	ldr	x1, [x0, #32]
   30418:	cmp	x20, x1
   3041c:	b.cs	304f4 <PyInit__decimal@@Base+0x15f74>  // b.hs, b.nlast
   30420:	ldr	x1, [x0, #16]
   30424:	cmp	x20, x1
   30428:	b.cs	305e0 <PyInit__decimal@@Base+0x16060>  // b.hs, b.nlast
   3042c:	ldr	x0, [x0, #8]
   30430:	cmp	x20, x0
   30434:	cset	x19, cs  // cs = hs, nlast
   30438:	b	303a8 <PyInit__decimal@@Base+0x15e28>
   3043c:	ldr	x1, [x0, #112]
   30440:	cmp	x20, x1
   30444:	b.cs	304c8 <PyInit__decimal@@Base+0x15f48>  // b.hs, b.nlast
   30448:	ldr	x1, [x0, #88]
   3044c:	cmp	x20, x1
   30450:	b.cc	3066c <PyInit__decimal@@Base+0x160ec>  // b.lo, b.ul, b.last
   30454:	ldr	x1, [x0, #104]
   30458:	mov	x19, #0xd                   	// #13
   3045c:	cmp	x20, x1
   30460:	b.cs	303a8 <PyInit__decimal@@Base+0x15e28>  // b.hs, b.nlast
   30464:	ldr	x0, [x0, #96]
   30468:	cmp	x20, x0
   3046c:	cset	x19, cs  // cs = hs, nlast
   30470:	add	x19, x19, #0xb
   30474:	b	303a8 <PyInit__decimal@@Base+0x15e28>
   30478:	ldr	x1, [x0, #112]
   3047c:	cmp	x2, x1
   30480:	b.cs	30594 <PyInit__decimal@@Base+0x16014>  // b.hs, b.nlast
   30484:	ldr	x1, [x0, #88]
   30488:	cmp	x2, x1
   3048c:	b.cc	30630 <PyInit__decimal@@Base+0x160b0>  // b.lo, b.ul, b.last
   30490:	ldr	x1, [x0, #104]
   30494:	mov	x19, #0xd                   	// #13
   30498:	cmp	x2, x1
   3049c:	b.cs	303a8 <PyInit__decimal@@Base+0x15e28>  // b.hs, b.nlast
   304a0:	ldr	x0, [x0, #96]
   304a4:	cmp	x2, x0
   304a8:	cset	x19, cs  // cs = hs, nlast
   304ac:	add	x19, x19, #0xb
   304b0:	b	303a8 <PyInit__decimal@@Base+0x15e28>
   304b4:	adrp	x1, 5f000 <PyInit__decimal@@Base+0x44a80>
   304b8:	mov	x0, x23
   304bc:	ldr	x1, [x1, #1704]
   304c0:	blr	x1
   304c4:	b	30394 <PyInit__decimal@@Base+0x15e14>
   304c8:	ldr	x1, [x0, #144]
   304cc:	cmp	x20, x1
   304d0:	b.cs	305cc <PyInit__decimal@@Base+0x1604c>  // b.hs, b.nlast
   304d4:	ldr	x1, [x0, #128]
   304d8:	cmp	x20, x1
   304dc:	b.cs	3061c <PyInit__decimal@@Base+0x1609c>  // b.hs, b.nlast
   304e0:	ldr	x0, [x0, #120]
   304e4:	cmp	x20, x0
   304e8:	cset	x19, cs  // cs = hs, nlast
   304ec:	add	x19, x19, #0xe
   304f0:	b	303a8 <PyInit__decimal@@Base+0x15e28>
   304f4:	ldr	x1, [x0, #48]
   304f8:	cmp	x20, x1
   304fc:	b.cc	30658 <PyInit__decimal@@Base+0x160d8>  // b.lo, b.ul, b.last
   30500:	ldr	x1, [x0, #64]
   30504:	mov	x19, #0x8                   	// #8
   30508:	cmp	x20, x1
   3050c:	b.cs	303a8 <PyInit__decimal@@Base+0x15e28>  // b.hs, b.nlast
   30510:	ldr	x0, [x0, #56]
   30514:	cmp	x20, x0
   30518:	cset	x19, cs  // cs = hs, nlast
   3051c:	add	x19, x19, #0x6
   30520:	b	303a8 <PyInit__decimal@@Base+0x15e28>
   30524:	tst	w0, #0xe0
   30528:	b.ne	30540 <PyInit__decimal@@Base+0x15fc0>  // b.any
   3052c:	adrp	x1, 5f000 <PyInit__decimal@@Base+0x44a80>
   30530:	ldr	x0, [sp, #152]
   30534:	ldr	x1, [x1, #1704]
   30538:	blr	x1
   3053c:	ldrb	w0, [sp, #112]
   30540:	mov	x19, #0x7fffffffffffffff    	// #9223372036854775807
   30544:	tbnz	w0, #4, 305c0 <PyInit__decimal@@Base+0x16040>
   30548:	adrp	x1, 5f000 <PyInit__decimal@@Base+0x44a80>
   3054c:	mov	x0, x23
   30550:	ldr	x1, [x1, #1704]
   30554:	blr	x1
   30558:	ldp	x21, x22, [sp, #32]
   3055c:	ldr	x23, [sp, #48]
   30560:	b	303a8 <PyInit__decimal@@Base+0x15e28>
   30564:	ldr	x1, [x0, #48]
   30568:	cmp	x2, x1
   3056c:	b.cc	30644 <PyInit__decimal@@Base+0x160c4>  // b.lo, b.ul, b.last
   30570:	ldr	x1, [x0, #64]
   30574:	mov	x19, #0x8                   	// #8
   30578:	cmp	x2, x1
   3057c:	b.cs	303a8 <PyInit__decimal@@Base+0x15e28>  // b.hs, b.nlast
   30580:	ldr	x0, [x0, #56]
   30584:	cmp	x2, x0
   30588:	cset	x19, cs  // cs = hs, nlast
   3058c:	add	x19, x19, #0x6
   30590:	b	303a8 <PyInit__decimal@@Base+0x15e28>
   30594:	ldr	x1, [x0, #144]
   30598:	cmp	x2, x1
   3059c:	b.cs	30608 <PyInit__decimal@@Base+0x16088>  // b.hs, b.nlast
   305a0:	ldr	x1, [x0, #128]
   305a4:	cmp	x2, x1
   305a8:	b.cs	30680 <PyInit__decimal@@Base+0x16100>  // b.hs, b.nlast
   305ac:	ldr	x0, [x0, #120]
   305b0:	cmp	x2, x0
   305b4:	cset	x19, cs  // cs = hs, nlast
   305b8:	add	x19, x19, #0xe
   305bc:	b	303a8 <PyInit__decimal@@Base+0x15e28>
   305c0:	ldp	x21, x22, [sp, #32]
   305c4:	ldr	x23, [sp, #48]
   305c8:	b	303a8 <PyInit__decimal@@Base+0x15e28>
   305cc:	ldr	x0, [x0, #152]
   305d0:	cmp	x20, x0
   305d4:	cset	x19, cs  // cs = hs, nlast
   305d8:	add	x19, x19, #0x12
   305dc:	b	303a8 <PyInit__decimal@@Base+0x15e28>
   305e0:	ldr	x0, [x0, #24]
   305e4:	cmp	x20, x0
   305e8:	cset	x19, cs  // cs = hs, nlast
   305ec:	add	x19, x19, #0x2
   305f0:	b	303a8 <PyInit__decimal@@Base+0x15e28>
   305f4:	ldr	x0, [x0, #24]
   305f8:	cmp	x2, x0
   305fc:	cset	x19, cs  // cs = hs, nlast
   30600:	add	x19, x19, #0x2
   30604:	b	303a8 <PyInit__decimal@@Base+0x15e28>
   30608:	ldr	x0, [x0, #152]
   3060c:	cmp	x2, x0
   30610:	cset	x19, cs  // cs = hs, nlast
   30614:	add	x19, x19, #0x12
   30618:	b	303a8 <PyInit__decimal@@Base+0x15e28>
   3061c:	ldr	x0, [x0, #136]
   30620:	cmp	x20, x0
   30624:	cset	x19, cs  // cs = hs, nlast
   30628:	add	x19, x19, #0x10
   3062c:	b	303a8 <PyInit__decimal@@Base+0x15e28>
   30630:	ldr	x0, [x0, #80]
   30634:	cmp	x2, x0
   30638:	cset	x19, cs  // cs = hs, nlast
   3063c:	add	x19, x19, #0x9
   30640:	b	303a8 <PyInit__decimal@@Base+0x15e28>
   30644:	ldr	x0, [x0, #40]
   30648:	cmp	x2, x0
   3064c:	cset	x19, cs  // cs = hs, nlast
   30650:	add	x19, x19, #0x4
   30654:	b	303a8 <PyInit__decimal@@Base+0x15e28>
   30658:	ldr	x0, [x0, #40]
   3065c:	cmp	x20, x0
   30660:	cset	x19, cs  // cs = hs, nlast
   30664:	add	x19, x19, #0x4
   30668:	b	303a8 <PyInit__decimal@@Base+0x15e28>
   3066c:	ldr	x0, [x0, #80]
   30670:	cmp	x20, x0
   30674:	cset	x19, cs  // cs = hs, nlast
   30678:	add	x19, x19, #0x9
   3067c:	b	303a8 <PyInit__decimal@@Base+0x15e28>
   30680:	ldr	x0, [x0, #136]
   30684:	cmp	x2, x0
   30688:	cset	x19, cs  // cs = hs, nlast
   3068c:	add	x19, x19, #0x10
   30690:	b	303a8 <PyInit__decimal@@Base+0x15e28>
   30694:	nop
   30698:	sub	sp, sp, #0x800
   3069c:	mov	w6, #0x50                  	// #80
   306a0:	mov	w14, #0x30                  	// #48
   306a4:	mov	x13, #0x40                  	// #64
   306a8:	add	x7, sp, #0x200
   306ac:	mov	x5, #0x5                   	// #5
   306b0:	stp	x29, x30, [sp]
   306b4:	mov	x29, sp
   306b8:	mov	w12, #0xffffff90            	// #-112
   306bc:	ldp	x18, x8, [x1, #8]
   306c0:	stp	x19, x20, [sp, #16]
   306c4:	mov	x19, x1
   306c8:	stp	x25, x26, [sp, #64]
   306cc:	add	x11, sp, #0x400
   306d0:	cmp	x1, x0
   306d4:	stp	x27, x28, [sp, #80]
   306d8:	mov	x16, #0xffffffffffffffff    	// #-1
   306dc:	mov	x15, #0x3                   	// #3
   306e0:	ldrb	w4, [x1]
   306e4:	mov	x28, x0
   306e8:	ldp	x10, x17, [x1, #24]
   306ec:	and	w4, w4, #0xf
   306f0:	ldr	x9, [x19, #40]
   306f4:	orr	w4, w4, w6
   306f8:	stp	x18, x3, [sp, #120]
   306fc:	mov	x1, #0x1                   	// #1
   30700:	add	x6, sp, #0xa0
   30704:	str	wzr, [sp, #156]
   30708:	mov	x20, x2
   3070c:	str	x5, [sp, #160]
   30710:	strb	w4, [sp, #272]
   30714:	add	x4, sp, #0xa8
   30718:	stp	x18, x8, [sp, #280]
   3071c:	stp	x10, x17, [sp, #296]
   30720:	str	x9, [sp, #312]
   30724:	strb	w14, [sp, #320]
   30728:	stp	xzr, xzr, [sp, #328]
   3072c:	stp	xzr, x13, [sp, #344]
   30730:	str	x7, [sp, #360]
   30734:	strb	w14, [sp, #368]
   30738:	stp	xzr, xzr, [sp, #376]
   3073c:	str	x15, [sp, #168]
   30740:	stp	xzr, x13, [sp, #392]
   30744:	str	x11, [sp, #408]
   30748:	strb	w12, [sp, #416]
   3074c:	stp	x16, x1, [sp, #424]
   30750:	stp	x1, x1, [sp, #440]
   30754:	str	x6, [sp, #456]
   30758:	strb	w12, [sp, #464]
   3075c:	stp	xzr, x1, [sp, #472]
   30760:	stp	x1, x1, [sp, #488]
   30764:	str	x4, [sp, #504]
   30768:	b.eq	30e28 <PyInit__decimal@@Base+0x168a8>  // b.none
   3076c:	add	x0, sp, #0x110
   30770:	stp	x21, x22, [sp, #32]
   30774:	mov	x25, x0
   30778:	ldr	x2, [sp, #120]
   3077c:	stp	x23, x24, [sp, #48]
   30780:	str	x0, [sp, #136]
   30784:	mov	x0, #0x435f                	// #17247
   30788:	add	x2, x2, x8
   3078c:	movk	x0, #0xd79, lsl #16
   30790:	movk	x0, #0x35e5, lsl #32
   30794:	movk	x0, #0xd794, lsl #48
   30798:	umulh	x0, x8, x0
   3079c:	lsr	x0, x0, #4
   307a0:	add	x1, x0, x0, lsl #2
   307a4:	lsl	x1, x1, #2
   307a8:	sub	x0, x1, x0
   307ac:	sub	x0, x8, x0
   307b0:	tbnz	w2, #0, 30884 <PyInit__decimal@@Base+0x16304>
   307b4:	cmp	x8, #0x8
   307b8:	add	x1, x9, x10, lsl #3
   307bc:	mov	x2, #0x2                   	// #2
   307c0:	mov	x3, #0x8                   	// #8
   307c4:	csel	x3, x8, x3, le
   307c8:	sub	x8, x2, x8
   307cc:	cmp	x0, #0x0
   307d0:	str	x8, [x25, #8]
   307d4:	mov	x6, #0x13                  	// #19
   307d8:	csel	x0, x0, x6, ne  // ne = any
   307dc:	and	x4, x3, #0xffffffff
   307e0:	cmp	x0, w3, uxtw
   307e4:	ldur	x2, [x1, #-8]
   307e8:	b.cc	309b4 <PyInit__decimal@@Base+0x16434>  // b.lo, b.ul, b.last
   307ec:	sub	x0, x0, x4
   307f0:	adrp	x21, 42000 <PyInit__decimal@@Base+0x27a80>
   307f4:	add	x1, x21, #0x2d0
   307f8:	ldr	x0, [x1, x0, lsl #3]
   307fc:	udiv	x2, x2, x0
   30800:	cmp	w3, #0x7
   30804:	b.gt	3081c <PyInit__decimal@@Base+0x1629c>
   30808:	add	x0, x21, #0x2d0
   3080c:	mov	w1, #0x8                   	// #8
   30810:	sub	w3, w1, w3
   30814:	ldr	x0, [x0, w3, sxtw #3]
   30818:	mul	x2, x2, x0
   3081c:	ldr	x0, [x19, #8]
   30820:	mov	x3, #0x2710                	// #10000
   30824:	mov	x4, #0x3e8                 	// #1000
   30828:	sub	x0, x0, x8
   3082c:	add	x0, x0, x0, lsr #63
   30830:	asr	x0, x0, #1
   30834:	str	x0, [sp, #112]
   30838:	add	x19, x4, x3
   3083c:	orr	x0, x19, #0x1
   30840:	lsr	x19, x19, #1
   30844:	mul	x1, x19, x19
   30848:	add	x0, x0, x1
   3084c:	cmp	x1, x2
   30850:	b.hi	3087c <PyInit__decimal@@Base+0x162fc>  // b.pmore
   30854:	cmp	x0, x2
   30858:	b.hi	308f0 <PyInit__decimal@@Base+0x16370>  // b.pmore
   3085c:	add	x4, x19, #0x1
   30860:	add	x19, x4, x3
   30864:	orr	x0, x19, #0x1
   30868:	lsr	x19, x19, #1
   3086c:	mul	x1, x19, x19
   30870:	add	x0, x0, x1
   30874:	cmp	x1, x2
   30878:	b.ls	30854 <PyInit__decimal@@Base+0x162d4>  // b.plast
   3087c:	sub	x3, x19, #0x1
   30880:	b	30838 <PyInit__decimal@@Base+0x162b8>
   30884:	cmp	x8, #0x7
   30888:	add	x1, x9, x10, lsl #3
   3088c:	mov	x2, #0x1                   	// #1
   30890:	mov	x3, #0x7                   	// #7
   30894:	csel	x3, x8, x3, le
   30898:	sub	x8, x2, x8
   3089c:	cmp	x0, #0x0
   308a0:	str	x8, [x25, #8]
   308a4:	mov	x6, #0x13                  	// #19
   308a8:	csel	x0, x0, x6, ne  // ne = any
   308ac:	and	x4, x3, #0xffffffff
   308b0:	cmp	x0, w3, uxtw
   308b4:	ldur	x2, [x1, #-8]
   308b8:	b.cc	30bbc <PyInit__decimal@@Base+0x1663c>  // b.lo, b.ul, b.last
   308bc:	sub	x0, x0, x4
   308c0:	adrp	x21, 42000 <PyInit__decimal@@Base+0x27a80>
   308c4:	add	x1, x21, #0x2d0
   308c8:	ldr	x0, [x1, x0, lsl #3]
   308cc:	udiv	x2, x2, x0
   308d0:	cmp	w3, #0x6
   308d4:	b.gt	3081c <PyInit__decimal@@Base+0x1629c>
   308d8:	add	x0, x21, #0x2d0
   308dc:	mov	w1, #0x7                   	// #7
   308e0:	sub	w3, w1, w3
   308e4:	ldr	x0, [x0, w3, sxtw #3]
   308e8:	mul	x2, x2, x0
   308ec:	b	3081c <PyInit__decimal@@Base+0x1629c>
   308f0:	ldrb	w2, [x28]
   308f4:	ldr	x0, [x28, #40]
   308f8:	tbnz	w2, #5, 30910 <PyInit__decimal@@Base+0x16390>
   308fc:	adrp	x22, 5f000 <PyInit__decimal@@Base+0x44a80>
   30900:	ldr	x3, [x28, #32]
   30904:	ldr	x1, [x22, #1672]
   30908:	cmp	x3, x1
   3090c:	b.gt	30e54 <PyInit__decimal@@Base+0x168d4>
   30910:	mov	x3, #0xca00                	// #51712
   30914:	and	w2, w2, #0xfffffff0
   30918:	movk	x3, #0x3b9a, lsl #16
   3091c:	strb	w2, [x28]
   30920:	add	x1, x21, #0x2d0
   30924:	mov	x4, #0xfffffffffffffffa    	// #-6
   30928:	udiv	x19, x3, x19
   3092c:	mov	x3, #0x1                   	// #1
   30930:	ldr	x2, [x1, #72]
   30934:	str	x19, [x0]
   30938:	str	x4, [x28, #8]
   3093c:	str	x3, [x28, #24]
   30940:	ldr	x0, [x0]
   30944:	cmp	x0, x2
   30948:	b.cs	30978 <PyInit__decimal@@Base+0x163f8>  // b.hs, b.nlast
   3094c:	ldr	x2, [x1, #32]
   30950:	cmp	x0, x2
   30954:	b.cs	309e8 <PyInit__decimal@@Base+0x16468>  // b.hs, b.nlast
   30958:	ldr	x2, [x1, #16]
   3095c:	cmp	x0, x2
   30960:	b.cs	30c30 <PyInit__decimal@@Base+0x166b0>  // b.hs, b.nlast
   30964:	ldr	x1, [x1, #8]
   30968:	cmp	x0, x1
   3096c:	cset	x2, cs  // cs = hs, nlast
   30970:	add	x2, x2, x3
   30974:	b	30a18 <PyInit__decimal@@Base+0x16498>
   30978:	ldr	x2, [x1, #112]
   3097c:	cmp	x0, x2
   30980:	b.cs	30bf0 <PyInit__decimal@@Base+0x16670>  // b.hs, b.nlast
   30984:	ldr	x2, [x1, #88]
   30988:	cmp	x0, x2
   3098c:	b.cc	30c44 <PyInit__decimal@@Base+0x166c4>  // b.lo, b.ul, b.last
   30990:	ldr	x3, [x1, #104]
   30994:	mov	x2, #0xe                   	// #14
   30998:	cmp	x0, x3
   3099c:	b.cs	30a18 <PyInit__decimal@@Base+0x16498>  // b.hs, b.nlast
   309a0:	ldr	x1, [x1, #96]
   309a4:	cmp	x0, x1
   309a8:	cset	x2, cs  // cs = hs, nlast
   309ac:	add	x2, x2, #0xc
   309b0:	b	30a18 <PyInit__decimal@@Base+0x16498>
   309b4:	cmp	x10, #0x1
   309b8:	adrp	x21, 42000 <PyInit__decimal@@Base+0x27a80>
   309bc:	b.le	30800 <PyInit__decimal@@Base+0x16280>
   309c0:	sub	x6, x6, x4
   309c4:	add	x7, x21, #0x2d0
   309c8:	add	x6, x6, x0
   309cc:	sub	x0, x4, x0
   309d0:	ldur	x4, [x1, #-16]
   309d4:	ldr	x6, [x7, x6, lsl #3]
   309d8:	ldr	x1, [x7, x0, lsl #3]
   309dc:	udiv	x0, x4, x6
   309e0:	madd	x2, x2, x1, x0
   309e4:	b	30800 <PyInit__decimal@@Base+0x16280>
   309e8:	ldr	x2, [x1, #48]
   309ec:	cmp	x0, x2
   309f0:	b.cc	30c58 <PyInit__decimal@@Base+0x166d8>  // b.lo, b.ul, b.last
   309f4:	ldr	x3, [x1, #64]
   309f8:	mov	x2, #0x9                   	// #9
   309fc:	cmp	x0, x3
   30a00:	b.cs	30a18 <PyInit__decimal@@Base+0x16498>  // b.hs, b.nlast
   30a04:	ldr	x1, [x1, #56]
   30a08:	cmp	x0, x1
   30a0c:	cset	x2, cs  // cs = hs, nlast
   30a10:	add	x2, x2, #0x7
   30a14:	nop
   30a18:	str	x2, [x28, #16]
   30a1c:	add	x21, sp, #0xe0
   30a20:	mov	x0, x21
   30a24:	add	x23, sp, #0xb0
   30a28:	bl	1d4d0 <PyInit__decimal@@Base+0x2f50>
   30a2c:	mov	x0, x23
   30a30:	bl	1d4d0 <PyInit__decimal@@Base+0x2f50>
   30a34:	ldr	x1, [x20]
   30a38:	mov	w0, #0x8                   	// #8
   30a3c:	str	w0, [sp, #212]
   30a40:	add	x1, x1, #0x1
   30a44:	cmp	x1, #0x3
   30a48:	b.le	30c6c <PyInit__decimal@@Base+0x166ec>
   30a4c:	add	x2, sp, #0x600
   30a50:	mov	w0, #0x0                   	// #0
   30a54:	nop
   30a58:	add	x1, x1, #0x3
   30a5c:	mov	w20, w0
   30a60:	cmp	x1, #0x7
   30a64:	add	w0, w0, #0x1
   30a68:	add	x1, x1, x1, lsr #63
   30a6c:	add	x22, x2, w20, sxtw #3
   30a70:	asr	x1, x1, #1
   30a74:	str	x1, [x2, w20, sxtw #3]
   30a78:	b.gt	30a58 <PyInit__decimal@@Base+0x164d8>
   30a7c:	tbnz	w20, #31, 30c6c <PyInit__decimal@@Base+0x166ec>
   30a80:	add	x0, sp, #0x1a0
   30a84:	add	x19, sp, #0x9c
   30a88:	add	x24, sp, #0x140
   30a8c:	add	x26, sp, #0x170
   30a90:	add	x27, sp, #0x1d0
   30a94:	str	x0, [sp, #96]
   30a98:	b	30b58 <PyInit__decimal@@Base+0x165d8>
   30a9c:	mov	x2, x9
   30aa0:	str	x9, [sp, #104]
   30aa4:	bl	2bf80 <PyInit__decimal@@Base+0x11a00>
   30aa8:	ldr	x9, [sp, #104]
   30aac:	mov	x4, x19
   30ab0:	ldr	x7, [sp, #376]
   30ab4:	mov	x3, x23
   30ab8:	mov	x2, x24
   30abc:	mov	x1, x26
   30ac0:	mov	x0, x26
   30ac4:	add	x9, x7, x9
   30ac8:	str	x9, [sp, #376]
   30acc:	bl	291b8 <PyInit__decimal@@Base+0xec38>
   30ad0:	sub	w20, w20, #0x1
   30ad4:	mov	x2, x19
   30ad8:	mov	x1, x23
   30adc:	mov	x0, x26
   30ae0:	bl	2b110 <PyInit__decimal@@Base+0x10b90>
   30ae4:	mov	x4, x19
   30ae8:	mov	x3, x21
   30aec:	mov	x2, x26
   30af0:	mov	x1, x27
   30af4:	mov	x0, x26
   30af8:	bl	2e5c0 <PyInit__decimal@@Base+0x14040>
   30afc:	mov	x4, x19
   30b00:	mov	x3, x23
   30b04:	mov	x2, x26
   30b08:	mov	x1, x28
   30b0c:	mov	x0, x28
   30b10:	bl	291b8 <PyInit__decimal@@Base+0xec38>
   30b14:	mov	x2, x19
   30b18:	mov	x1, x23
   30b1c:	mov	x0, x28
   30b20:	bl	2b110 <PyInit__decimal@@Base+0x10b90>
   30b24:	ldr	x2, [sp, #96]
   30b28:	mov	x4, x19
   30b2c:	mov	x3, x21
   30b30:	mov	x1, x28
   30b34:	mov	x0, x28
   30b38:	sub	x22, x22, #0x8
   30b3c:	bl	291b8 <PyInit__decimal@@Base+0xec38>
   30b40:	mov	x2, x19
   30b44:	mov	x1, x21
   30b48:	mov	x0, x28
   30b4c:	bl	2b110 <PyInit__decimal@@Base+0x10b90>
   30b50:	cmn	w20, #0x1
   30b54:	b.eq	30c6c <PyInit__decimal@@Base+0x166ec>  // b.none
   30b58:	ldr	x7, [x22]
   30b5c:	mov	x4, x19
   30b60:	mov	x3, x21
   30b64:	mov	x2, x28
   30b68:	add	x7, x7, #0x1
   30b6c:	mov	x1, x28
   30b70:	mov	x0, x24
   30b74:	lsl	x7, x7, #1
   30b78:	str	x7, [sp, #176]
   30b7c:	bl	291b8 <PyInit__decimal@@Base+0xec38>
   30b80:	mov	x2, x19
   30b84:	mov	x1, x21
   30b88:	mov	x0, x24
   30b8c:	bl	2b110 <PyInit__decimal@@Base+0x10b90>
   30b90:	ldr	x8, [x25, #16]
   30b94:	mov	x3, x19
   30b98:	ldr	x7, [sp, #176]
   30b9c:	mov	x1, x25
   30ba0:	mov	x0, x26
   30ba4:	mov	x4, x19
   30ba8:	mov	x2, x24
   30bac:	subs	x9, x8, x7
   30bb0:	b.gt	30a9c <PyInit__decimal@@Base+0x1651c>
   30bb4:	mov	x3, x23
   30bb8:	b	30acc <PyInit__decimal@@Base+0x1654c>
   30bbc:	cmp	x10, #0x1
   30bc0:	adrp	x21, 42000 <PyInit__decimal@@Base+0x27a80>
   30bc4:	b.le	308d0 <PyInit__decimal@@Base+0x16350>
   30bc8:	sub	x6, x6, x4
   30bcc:	add	x7, x21, #0x2d0
   30bd0:	add	x6, x6, x0
   30bd4:	sub	x0, x4, x0
   30bd8:	ldur	x4, [x1, #-16]
   30bdc:	ldr	x6, [x7, x6, lsl #3]
   30be0:	ldr	x1, [x7, x0, lsl #3]
   30be4:	udiv	x0, x4, x6
   30be8:	madd	x2, x2, x1, x0
   30bec:	b	308d0 <PyInit__decimal@@Base+0x16350>
   30bf0:	ldr	x2, [x1, #144]
   30bf4:	cmp	x0, x2
   30bf8:	b.cs	30c1c <PyInit__decimal@@Base+0x1669c>  // b.hs, b.nlast
   30bfc:	ldr	x2, [x1, #128]
   30c00:	cmp	x0, x2
   30c04:	b.cs	30e80 <PyInit__decimal@@Base+0x16900>  // b.hs, b.nlast
   30c08:	ldr	x1, [x1, #120]
   30c0c:	cmp	x0, x1
   30c10:	cset	x2, cs  // cs = hs, nlast
   30c14:	add	x2, x2, #0xf
   30c18:	b	30a18 <PyInit__decimal@@Base+0x16498>
   30c1c:	ldr	x1, [x1, #152]
   30c20:	cmp	x0, x1
   30c24:	cset	x2, cs  // cs = hs, nlast
   30c28:	add	x2, x2, #0x13
   30c2c:	b	30a18 <PyInit__decimal@@Base+0x16498>
   30c30:	ldr	x1, [x1, #24]
   30c34:	cmp	x0, x1
   30c38:	cset	x2, cs  // cs = hs, nlast
   30c3c:	add	x2, x2, #0x3
   30c40:	b	30a18 <PyInit__decimal@@Base+0x16498>
   30c44:	ldr	x1, [x1, #80]
   30c48:	cmp	x0, x1
   30c4c:	cset	x2, cs  // cs = hs, nlast
   30c50:	add	x2, x2, #0xa
   30c54:	b	30a18 <PyInit__decimal@@Base+0x16498>
   30c58:	ldr	x1, [x1, #40]
   30c5c:	cmp	x0, x1
   30c60:	cset	x2, cs  // cs = hs, nlast
   30c64:	add	x2, x2, #0x5
   30c68:	b	30a18 <PyInit__decimal@@Base+0x16498>
   30c6c:	ldr	x6, [x28, #8]
   30c70:	ldr	x0, [sp, #112]
   30c74:	ldr	x2, [x28, #24]
   30c78:	sub	x0, x6, x0
   30c7c:	str	x0, [x28, #8]
   30c80:	cmp	x2, #0x0
   30c84:	b.le	30d3c <PyInit__decimal@@Base+0x167bc>
   30c88:	mov	x1, #0x0                   	// #0
   30c8c:	ldr	x3, [x28, #40]
   30c90:	b	30ca0 <PyInit__decimal@@Base+0x16720>
   30c94:	add	x1, x1, #0x1
   30c98:	cmp	x2, x1
   30c9c:	b.eq	30d3c <PyInit__decimal@@Base+0x167bc>  // b.none
   30ca0:	ldr	x0, [x3, x1, lsl #3]
   30ca4:	cbz	x0, 30c94 <PyInit__decimal@@Base+0x16714>
   30ca8:	mov	x3, #0xcccccccccccccccc    	// #-3689348814741910324
   30cac:	add	x19, x1, x1, lsl #2
   30cb0:	movk	x3, #0xcccd
   30cb4:	mov	x4, #0x9999999999999999    	// #-7378697629483820647
   30cb8:	lsl	x19, x19, #2
   30cbc:	movk	x4, #0x1999, lsl #48
   30cc0:	mul	x2, x0, x3
   30cc4:	sub	x1, x19, x1
   30cc8:	ror	x2, x2, #1
   30ccc:	cmp	x2, x4
   30cd0:	b.hi	30cf4 <PyInit__decimal@@Base+0x16774>  // b.pmore
   30cd4:	nop
   30cd8:	umulh	x0, x0, x3
   30cdc:	add	x1, x1, #0x1
   30ce0:	lsr	x0, x0, #3
   30ce4:	mul	x2, x0, x3
   30ce8:	ror	x2, x2, #1
   30cec:	cmp	x2, x4
   30cf0:	b.ls	30cd8 <PyInit__decimal@@Base+0x16758>  // b.plast
   30cf4:	ldr	x0, [sp, #120]
   30cf8:	and	x0, x0, #0xfffffffffffffffe
   30cfc:	neg	x0, x0
   30d00:	add	x0, x0, x0, lsr #63
   30d04:	asr	x19, x0, #1
   30d08:	ldr	x0, [sp, #112]
   30d0c:	sub	x19, x19, x6
   30d10:	add	x19, x19, x0
   30d14:	cmp	x19, x1
   30d18:	csel	x19, x19, x1, le
   30d1c:	cmp	x19, #0x0
   30d20:	b.le	30d3c <PyInit__decimal@@Base+0x167bc>
   30d24:	mov	x1, x19
   30d28:	mov	x0, x28
   30d2c:	bl	2aa80 <PyInit__decimal@@Base+0x10500>
   30d30:	ldr	x0, [x28, #8]
   30d34:	add	x19, x0, x19
   30d38:	str	x19, [x28, #8]
   30d3c:	ldrb	w0, [sp, #320]
   30d40:	tst	w0, #0xe0
   30d44:	b.ne	30d5c <PyInit__decimal@@Base+0x167dc>  // b.any
   30d48:	adrp	x1, 5f000 <PyInit__decimal@@Base+0x44a80>
   30d4c:	ldr	x0, [sp, #360]
   30d50:	ldr	x1, [x1, #1704]
   30d54:	blr	x1
   30d58:	ldrb	w0, [sp, #320]
   30d5c:	tbnz	w0, #4, 30d70 <PyInit__decimal@@Base+0x167f0>
   30d60:	adrp	x1, 5f000 <PyInit__decimal@@Base+0x44a80>
   30d64:	add	x0, sp, #0x140
   30d68:	ldr	x1, [x1, #1704]
   30d6c:	blr	x1
   30d70:	ldrb	w0, [sp, #368]
   30d74:	tst	w0, #0xe0
   30d78:	b.ne	30d90 <PyInit__decimal@@Base+0x16810>  // b.any
   30d7c:	adrp	x1, 5f000 <PyInit__decimal@@Base+0x44a80>
   30d80:	ldr	x0, [sp, #408]
   30d84:	ldr	x1, [x1, #1704]
   30d88:	blr	x1
   30d8c:	ldrb	w0, [sp, #368]
   30d90:	tbnz	w0, #4, 30da4 <PyInit__decimal@@Base+0x16824>
   30d94:	adrp	x1, 5f000 <PyInit__decimal@@Base+0x44a80>
   30d98:	add	x0, sp, #0x170
   30d9c:	ldr	x1, [x1, #1704]
   30da0:	blr	x1
   30da4:	ldr	x0, [sp, #136]
   30da8:	cmp	x25, x0
   30dac:	b.eq	30de4 <PyInit__decimal@@Base+0x16864>  // b.none
   30db0:	ldrb	w0, [x25]
   30db4:	tst	w0, #0xe0
   30db8:	b.ne	30dd0 <PyInit__decimal@@Base+0x16850>  // b.any
   30dbc:	adrp	x1, 5f000 <PyInit__decimal@@Base+0x44a80>
   30dc0:	ldr	x0, [x25, #40]
   30dc4:	ldr	x1, [x1, #1704]
   30dc8:	blr	x1
   30dcc:	ldrb	w0, [x25]
   30dd0:	tbnz	w0, #4, 30de4 <PyInit__decimal@@Base+0x16864>
   30dd4:	adrp	x1, 5f000 <PyInit__decimal@@Base+0x44a80>
   30dd8:	mov	x0, x25
   30ddc:	ldr	x1, [x1, #1704]
   30de0:	blr	x1
   30de4:	ldr	x4, [sp, #128]
   30de8:	mov	w3, #0x3be                 	// #958
   30dec:	ldr	w0, [sp, #156]
   30df0:	mov	w1, #0x1040                	// #4160
   30df4:	ldp	x21, x22, [sp, #32]
   30df8:	and	w0, w0, w3
   30dfc:	ldr	w2, [x4]
   30e00:	ldp	x23, x24, [sp, #48]
   30e04:	orr	w0, w0, w2
   30e08:	orr	w0, w0, w1
   30e0c:	str	w0, [x4]
   30e10:	ldp	x29, x30, [sp]
   30e14:	ldp	x19, x20, [sp, #16]
   30e18:	ldp	x25, x26, [sp, #64]
   30e1c:	ldp	x27, x28, [sp, #80]
   30e20:	add	sp, sp, #0x800
   30e24:	ret
   30e28:	bl	29d98 <PyInit__decimal@@Base+0xf818>
   30e2c:	mov	x25, x0
   30e30:	cbz	x0, 30e94 <PyInit__decimal@@Base+0x16914>
   30e34:	add	x0, sp, #0x110
   30e38:	stp	x21, x22, [sp, #32]
   30e3c:	stp	x23, x24, [sp, #48]
   30e40:	str	x0, [sp, #136]
   30e44:	ldp	x2, x8, [x25, #8]
   30e48:	ldr	x10, [x25, #24]
   30e4c:	ldr	x9, [x25, #40]
   30e50:	b	30784 <PyInit__decimal@@Base+0x16204>
   30e54:	add	x3, sp, #0x600
   30e58:	mov	x2, #0x8                   	// #8
   30e5c:	strb	wzr, [sp, #1536]
   30e60:	bl	252a8 <PyInit__decimal@@Base+0xad28>
   30e64:	ldrb	w1, [sp, #1536]
   30e68:	str	x0, [x28, #40]
   30e6c:	cbnz	w1, 30e78 <PyInit__decimal@@Base+0x168f8>
   30e70:	ldr	x1, [x22, #1672]
   30e74:	str	x1, [x28, #32]
   30e78:	ldrb	w2, [x28]
   30e7c:	b	30910 <PyInit__decimal@@Base+0x16390>
   30e80:	ldr	x1, [x1, #136]
   30e84:	cmp	x0, x1
   30e88:	cset	x2, cs  // cs = hs, nlast
   30e8c:	add	x2, x2, #0x11
   30e90:	b	30a18 <PyInit__decimal@@Base+0x16498>
   30e94:	ldr	x2, [sp, #128]
   30e98:	mov	x0, x19
   30e9c:	mov	w1, #0x200                 	// #512
   30ea0:	bl	28d68 <PyInit__decimal@@Base+0xe7e8>
   30ea4:	b	30e10 <PyInit__decimal@@Base+0x16890>
   30ea8:	sub	sp, sp, #0x2b0
   30eac:	stp	x29, x30, [sp]
   30eb0:	mov	x29, sp
   30eb4:	stp	x21, x22, [sp, #32]
   30eb8:	mov	x22, x1
   30ebc:	add	x1, sp, #0xb0
   30ec0:	stp	x23, x24, [sp, #48]
   30ec4:	mov	x24, x2
   30ec8:	mov	x23, x3
   30ecc:	mov	x2, #0x40                  	// #64
   30ed0:	mov	w3, #0x30                  	// #48
   30ed4:	stp	x19, x20, [sp, #16]
   30ed8:	add	x20, sp, #0x50
   30edc:	mov	x19, x4
   30ee0:	mov	x21, x0
   30ee4:	mov	x0, x20
   30ee8:	str	x25, [sp, #64]
   30eec:	add	x25, sp, #0x80
   30ef0:	strb	w3, [sp, #128]
   30ef4:	stp	xzr, xzr, [sp, #136]
   30ef8:	stp	xzr, x2, [sp, #152]
   30efc:	str	x1, [sp, #168]
   30f00:	bl	1d4d0 <PyInit__decimal@@Base+0x2f50>
   30f04:	mov	x1, x24
   30f08:	mov	x2, x20
   30f0c:	mov	x3, x19
   30f10:	mov	x0, x25
   30f14:	bl	2b9f0 <PyInit__decimal@@Base+0x11470>
   30f18:	mov	x0, x21
   30f1c:	mov	x4, x19
   30f20:	mov	x3, x23
   30f24:	mov	x2, x25
   30f28:	mov	x1, x22
   30f2c:	bl	2e488 <PyInit__decimal@@Base+0x13f08>
   30f30:	ldrb	w0, [sp, #128]
   30f34:	tst	w0, #0xe0
   30f38:	b.ne	30f50 <PyInit__decimal@@Base+0x169d0>  // b.any
   30f3c:	adrp	x1, 5f000 <PyInit__decimal@@Base+0x44a80>
   30f40:	ldr	x0, [sp, #168]
   30f44:	ldr	x1, [x1, #1704]
   30f48:	blr	x1
   30f4c:	ldrb	w0, [sp, #128]
   30f50:	tbnz	w0, #4, 30f64 <PyInit__decimal@@Base+0x169e4>
   30f54:	adrp	x1, 5f000 <PyInit__decimal@@Base+0x44a80>
   30f58:	mov	x0, x25
   30f5c:	ldr	x1, [x1, #1704]
   30f60:	blr	x1
   30f64:	ldp	x29, x30, [sp]
   30f68:	ldp	x19, x20, [sp, #16]
   30f6c:	ldp	x21, x22, [sp, #32]
   30f70:	ldp	x23, x24, [sp, #48]
   30f74:	ldr	x25, [sp, #64]
   30f78:	add	sp, sp, #0x2b0
   30f7c:	ret
   30f80:	sub	sp, sp, #0x2b0
   30f84:	stp	x29, x30, [sp]
   30f88:	mov	x29, sp
   30f8c:	stp	x21, x22, [sp, #32]
   30f90:	mov	x22, x1
   30f94:	add	x1, sp, #0xb0
   30f98:	stp	x23, x24, [sp, #48]
   30f9c:	mov	x24, x2
   30fa0:	mov	x23, x3
   30fa4:	mov	x2, #0x40                  	// #64
   30fa8:	mov	w3, #0x30                  	// #48
   30fac:	stp	x19, x20, [sp, #16]
   30fb0:	add	x20, sp, #0x50
   30fb4:	mov	x19, x4
   30fb8:	mov	x21, x0
   30fbc:	mov	x0, x20
   30fc0:	str	x25, [sp, #64]
   30fc4:	add	x25, sp, #0x80
   30fc8:	strb	w3, [sp, #128]
   30fcc:	stp	xzr, xzr, [sp, #136]
   30fd0:	stp	xzr, x2, [sp, #152]
   30fd4:	str	x1, [sp, #168]
   30fd8:	bl	1d4d0 <PyInit__decimal@@Base+0x2f50>
   30fdc:	mov	x1, x24
   30fe0:	mov	x2, x20
   30fe4:	mov	x3, x19
   30fe8:	mov	x0, x25
   30fec:	bl	2bc50 <PyInit__decimal@@Base+0x116d0>
   30ff0:	mov	x0, x21
   30ff4:	mov	x4, x19
   30ff8:	mov	x3, x23
   30ffc:	mov	x2, x25
   31000:	mov	x1, x22
   31004:	bl	2e488 <PyInit__decimal@@Base+0x13f08>
   31008:	ldrb	w0, [sp, #128]
   3100c:	tst	w0, #0xe0
   31010:	b.ne	31028 <PyInit__decimal@@Base+0x16aa8>  // b.any
   31014:	adrp	x1, 5f000 <PyInit__decimal@@Base+0x44a80>
   31018:	ldr	x0, [sp, #168]
   3101c:	ldr	x1, [x1, #1704]
   31020:	blr	x1
   31024:	ldrb	w0, [sp, #128]
   31028:	tbnz	w0, #4, 3103c <PyInit__decimal@@Base+0x16abc>
   3102c:	adrp	x1, 5f000 <PyInit__decimal@@Base+0x44a80>
   31030:	mov	x0, x25
   31034:	ldr	x1, [x1, #1704]
   31038:	blr	x1
   3103c:	ldp	x29, x30, [sp]
   31040:	ldp	x19, x20, [sp, #16]
   31044:	ldp	x21, x22, [sp, #32]
   31048:	ldp	x23, x24, [sp, #48]
   3104c:	ldr	x25, [sp, #64]
   31050:	add	sp, sp, #0x2b0
   31054:	ret
   31058:	sub	sp, sp, #0x2b0
   3105c:	stp	x29, x30, [sp]
   31060:	mov	x29, sp
   31064:	stp	x21, x22, [sp, #32]
   31068:	mov	x22, x1
   3106c:	add	x1, sp, #0xb0
   31070:	stp	x23, x24, [sp, #48]
   31074:	mov	x24, x2
   31078:	mov	x23, x3
   3107c:	mov	x2, #0x40                  	// #64
   31080:	mov	w3, #0x30                  	// #48
   31084:	stp	x19, x20, [sp, #16]
   31088:	add	x20, sp, #0x50
   3108c:	mov	x19, x4
   31090:	mov	x21, x0
   31094:	mov	x0, x20
   31098:	str	x25, [sp, #64]
   3109c:	add	x25, sp, #0x80
   310a0:	strb	w3, [sp, #128]
   310a4:	stp	xzr, xzr, [sp, #136]
   310a8:	stp	xzr, x2, [sp, #152]
   310ac:	str	x1, [sp, #168]
   310b0:	bl	1d4d0 <PyInit__decimal@@Base+0x2f50>
   310b4:	mov	x1, x24
   310b8:	mov	x2, x20
   310bc:	mov	x3, x19
   310c0:	mov	x0, x25
   310c4:	bl	2b9f0 <PyInit__decimal@@Base+0x11470>
   310c8:	mov	x0, x21
   310cc:	mov	x4, x19
   310d0:	mov	x3, x23
   310d4:	mov	x2, x25
   310d8:	mov	x1, x22
   310dc:	bl	2e5c0 <PyInit__decimal@@Base+0x14040>
   310e0:	ldrb	w0, [sp, #128]
   310e4:	tst	w0, #0xe0
   310e8:	b.ne	31100 <PyInit__decimal@@Base+0x16b80>  // b.any
   310ec:	adrp	x1, 5f000 <PyInit__decimal@@Base+0x44a80>
   310f0:	ldr	x0, [sp, #168]
   310f4:	ldr	x1, [x1, #1704]
   310f8:	blr	x1
   310fc:	ldrb	w0, [sp, #128]
   31100:	tbnz	w0, #4, 31114 <PyInit__decimal@@Base+0x16b94>
   31104:	adrp	x1, 5f000 <PyInit__decimal@@Base+0x44a80>
   31108:	mov	x0, x25
   3110c:	ldr	x1, [x1, #1704]
   31110:	blr	x1
   31114:	ldp	x29, x30, [sp]
   31118:	ldp	x19, x20, [sp, #16]
   3111c:	ldp	x21, x22, [sp, #32]
   31120:	ldp	x23, x24, [sp, #48]
   31124:	ldr	x25, [sp, #64]
   31128:	add	sp, sp, #0x2b0
   3112c:	ret
   31130:	sub	sp, sp, #0x2b0
   31134:	stp	x29, x30, [sp]
   31138:	mov	x29, sp
   3113c:	stp	x21, x22, [sp, #32]
   31140:	mov	x22, x1
   31144:	add	x1, sp, #0xb0
   31148:	stp	x23, x24, [sp, #48]
   3114c:	mov	x24, x2
   31150:	mov	x23, x3
   31154:	mov	x2, #0x40                  	// #64
   31158:	mov	w3, #0x30                  	// #48
   3115c:	stp	x19, x20, [sp, #16]
   31160:	add	x20, sp, #0x50
   31164:	mov	x19, x4
   31168:	mov	x21, x0
   3116c:	mov	x0, x20
   31170:	str	x25, [sp, #64]
   31174:	add	x25, sp, #0x80
   31178:	strb	w3, [sp, #128]
   3117c:	stp	xzr, xzr, [sp, #136]
   31180:	stp	xzr, x2, [sp, #152]
   31184:	str	x1, [sp, #168]
   31188:	bl	1d4d0 <PyInit__decimal@@Base+0x2f50>
   3118c:	mov	x1, x24
   31190:	mov	x2, x20
   31194:	mov	x3, x19
   31198:	mov	x0, x25
   3119c:	bl	2bc50 <PyInit__decimal@@Base+0x116d0>
   311a0:	mov	x0, x21
   311a4:	mov	x4, x19
   311a8:	mov	x3, x23
   311ac:	mov	x2, x25
   311b0:	mov	x1, x22
   311b4:	bl	2e5c0 <PyInit__decimal@@Base+0x14040>
   311b8:	ldrb	w0, [sp, #128]
   311bc:	tst	w0, #0xe0
   311c0:	b.ne	311d8 <PyInit__decimal@@Base+0x16c58>  // b.any
   311c4:	adrp	x1, 5f000 <PyInit__decimal@@Base+0x44a80>
   311c8:	ldr	x0, [sp, #168]
   311cc:	ldr	x1, [x1, #1704]
   311d0:	blr	x1
   311d4:	ldrb	w0, [sp, #128]
   311d8:	tbnz	w0, #4, 311ec <PyInit__decimal@@Base+0x16c6c>
   311dc:	adrp	x1, 5f000 <PyInit__decimal@@Base+0x44a80>
   311e0:	mov	x0, x25
   311e4:	ldr	x1, [x1, #1704]
   311e8:	blr	x1
   311ec:	ldp	x29, x30, [sp]
   311f0:	ldp	x19, x20, [sp, #16]
   311f4:	ldp	x21, x22, [sp, #32]
   311f8:	ldp	x23, x24, [sp, #48]
   311fc:	ldr	x25, [sp, #64]
   31200:	add	sp, sp, #0x2b0
   31204:	ret
   31208:	sxtw	x2, w2
   3120c:	b	30ea8 <PyInit__decimal@@Base+0x16928>
   31210:	mov	w2, w2
   31214:	b	30f80 <PyInit__decimal@@Base+0x16a00>
   31218:	b	30ea8 <PyInit__decimal@@Base+0x16928>
   3121c:	nop
   31220:	b	30f80 <PyInit__decimal@@Base+0x16a00>
   31224:	nop
   31228:	sxtw	x2, w2
   3122c:	b	31058 <PyInit__decimal@@Base+0x16ad8>
   31230:	mov	w2, w2
   31234:	b	31130 <PyInit__decimal@@Base+0x16bb0>
   31238:	b	31058 <PyInit__decimal@@Base+0x16ad8>
   3123c:	nop
   31240:	b	31130 <PyInit__decimal@@Base+0x16bb0>
   31244:	nop
   31248:	mov	x7, x1
   3124c:	mov	x5, x2
   31250:	mov	x6, x3
   31254:	mov	x1, x0
   31258:	mov	x3, x5
   3125c:	mov	x2, x7
   31260:	mov	x5, x4
   31264:	mov	w0, #0x1                   	// #1
   31268:	mov	x4, x6
   3126c:	b	2f2b8 <PyInit__decimal@@Base+0x14d38>
   31270:	stp	x29, x30, [sp, #-80]!
   31274:	mov	x29, sp
   31278:	stp	x19, x20, [sp, #16]
   3127c:	mov	x19, x2
   31280:	mov	x20, x3
   31284:	stp	x21, x22, [sp, #32]
   31288:	mov	x22, x1
   3128c:	mov	x21, x5
   31290:	stp	x23, x24, [sp, #48]
   31294:	mov	x24, x0
   31298:	mov	x23, x4
   3129c:	str	x25, [sp, #64]
   312a0:	ldrb	w6, [x2]
   312a4:	ldrb	w7, [x3]
   312a8:	eor	w8, w6, w7
   312ac:	orr	w6, w6, w7
   312b0:	and	w25, w8, #0x1
   312b4:	tst	w6, #0xe
   312b8:	b.eq	31320 <PyInit__decimal@@Base+0x16da0>  // b.none
   312bc:	mov	x4, x5
   312c0:	mov	x3, x23
   312c4:	mov	x2, x20
   312c8:	mov	x1, x19
   312cc:	bl	29108 <PyInit__decimal@@Base+0xeb88>
   312d0:	cbnz	w0, 31424 <PyInit__decimal@@Base+0x16ea4>
   312d4:	ldrb	w1, [x19]
   312d8:	ldrb	w0, [x20]
   312dc:	and	w0, w0, #0x2
   312e0:	tbnz	w1, #1, 31370 <PyInit__decimal@@Base+0x16df0>
   312e4:	cbz	w0, 3148c <PyInit__decimal@@Base+0x16f0c>
   312e8:	mov	x2, x21
   312ec:	mov	x1, x19
   312f0:	mov	x0, x22
   312f4:	bl	28fe0 <PyInit__decimal@@Base+0xea60>
   312f8:	mov	x2, x21
   312fc:	cbnz	w0, 313b8 <PyInit__decimal@@Base+0x16e38>
   31300:	mov	x0, x24
   31304:	mov	w1, #0x200                 	// #512
   31308:	ldp	x19, x20, [sp, #16]
   3130c:	ldp	x21, x22, [sp, #32]
   31310:	ldp	x23, x24, [sp, #48]
   31314:	ldr	x25, [sp, #64]
   31318:	ldp	x29, x30, [sp], #80
   3131c:	b	28d68 <PyInit__decimal@@Base+0xe7e8>
   31320:	ldr	x6, [x3, #24]
   31324:	ldr	x7, [x3, #40]
   31328:	add	x6, x7, x6, lsl #3
   3132c:	ldur	x6, [x6, #-8]
   31330:	cbnz	x6, 313ec <PyInit__decimal@@Base+0x16e6c>
   31334:	ldr	x1, [x2, #24]
   31338:	ldr	x2, [x2, #40]
   3133c:	add	x1, x2, x1, lsl #3
   31340:	ldur	x1, [x1, #-8]
   31344:	cbnz	x1, 3145c <PyInit__decimal@@Base+0x16edc>
   31348:	mov	w2, #0x4                   	// #4
   3134c:	bl	28cd8 <PyInit__decimal@@Base+0xe758>
   31350:	mov	x0, x22
   31354:	mov	w2, #0x4                   	// #4
   31358:	mov	w1, #0x0                   	// #0
   3135c:	bl	28cd8 <PyInit__decimal@@Base+0xe758>
   31360:	ldr	w0, [x21]
   31364:	orr	w0, w0, #0x10
   31368:	str	w0, [x21]
   3136c:	b	313a0 <PyInit__decimal@@Base+0x16e20>
   31370:	cbz	w0, 31448 <PyInit__decimal@@Base+0x16ec8>
   31374:	mov	x0, x24
   31378:	mov	w2, #0x4                   	// #4
   3137c:	mov	w1, #0x0                   	// #0
   31380:	bl	28cd8 <PyInit__decimal@@Base+0xe758>
   31384:	mov	x0, x22
   31388:	mov	w2, #0x4                   	// #4
   3138c:	mov	w1, #0x0                   	// #0
   31390:	bl	28cd8 <PyInit__decimal@@Base+0xe758>
   31394:	ldr	w0, [x21]
   31398:	orr	w0, w0, #0x100
   3139c:	str	w0, [x21]
   313a0:	ldp	x19, x20, [sp, #16]
   313a4:	ldp	x21, x22, [sp, #32]
   313a8:	ldp	x23, x24, [sp, #48]
   313ac:	ldr	x25, [sp, #64]
   313b0:	ldp	x29, x30, [sp], #80
   313b4:	ret
   313b8:	mov	x1, x23
   313bc:	mov	x0, x22
   313c0:	bl	2b110 <PyInit__decimal@@Base+0x10b90>
   313c4:	mov	w1, w25
   313c8:	mov	x0, x24
   313cc:	ldp	x19, x20, [sp, #16]
   313d0:	mov	x3, #0x0                   	// #0
   313d4:	ldp	x21, x22, [sp, #32]
   313d8:	mov	x2, #0x0                   	// #0
   313dc:	ldp	x23, x24, [sp, #48]
   313e0:	ldr	x25, [sp, #64]
   313e4:	ldp	x29, x30, [sp], #80
   313e8:	b	26d90 <PyInit__decimal@@Base+0xc810>
   313ec:	bl	2fa48 <PyInit__decimal@@Base+0x154c8>
   313f0:	mov	x2, x21
   313f4:	mov	x1, x23
   313f8:	mov	x0, x24
   313fc:	bl	2b110 <PyInit__decimal@@Base+0x10b90>
   31400:	mov	x2, x21
   31404:	mov	x1, x23
   31408:	mov	x0, x22
   3140c:	ldp	x19, x20, [sp, #16]
   31410:	ldp	x21, x22, [sp, #32]
   31414:	ldp	x23, x24, [sp, #48]
   31418:	ldr	x25, [sp, #64]
   3141c:	ldp	x29, x30, [sp], #80
   31420:	b	2b110 <PyInit__decimal@@Base+0x10b90>
   31424:	mov	x2, x21
   31428:	mov	x1, x24
   3142c:	mov	x0, x22
   31430:	ldp	x19, x20, [sp, #16]
   31434:	ldp	x21, x22, [sp, #32]
   31438:	ldp	x23, x24, [sp, #48]
   3143c:	ldr	x25, [sp, #64]
   31440:	ldp	x29, x30, [sp], #80
   31444:	b	28fe0 <PyInit__decimal@@Base+0xea60>
   31448:	mov	w1, w25
   3144c:	mov	x0, x24
   31450:	mov	w2, #0x2                   	// #2
   31454:	bl	28cd8 <PyInit__decimal@@Base+0xe758>
   31458:	b	31384 <PyInit__decimal@@Base+0x16e04>
   3145c:	mov	w1, w25
   31460:	mov	w2, #0x2                   	// #2
   31464:	bl	28cd8 <PyInit__decimal@@Base+0xe758>
   31468:	mov	x0, x22
   3146c:	mov	w1, #0x0                   	// #0
   31470:	mov	w2, #0x4                   	// #4
   31474:	bl	28cd8 <PyInit__decimal@@Base+0xe758>
   31478:	ldr	w0, [x21]
   3147c:	mov	w1, #0x104                 	// #260
   31480:	orr	w0, w0, w1
   31484:	str	w0, [x21]
   31488:	b	313a0 <PyInit__decimal@@Base+0x16e20>
   3148c:	bl	67c0 <abort@plt>
   31490:	sub	sp, sp, #0x270
   31494:	mov	w5, #0x30                  	// #48
   31498:	add	x7, sp, #0x70
   3149c:	mov	x9, #0x40                  	// #64
   314a0:	stp	x29, x30, [sp]
   314a4:	mov	x29, sp
   314a8:	stp	x19, x20, [sp, #16]
   314ac:	mov	x19, x2
   314b0:	stp	x21, x22, [sp, #32]
   314b4:	mov	x21, x0
   314b8:	stp	x23, x24, [sp, #48]
   314bc:	mov	x23, x1
   314c0:	mov	x24, x4
   314c4:	ldrb	w6, [x1]
   314c8:	ldrb	w8, [x2]
   314cc:	strb	w5, [sp, #64]
   314d0:	stp	xzr, xzr, [sp, #72]
   314d4:	eor	w5, w6, w8
   314d8:	orr	w6, w6, w8
   314dc:	stp	xzr, x9, [sp, #88]
   314e0:	and	w22, w5, #0x1
   314e4:	tst	w6, #0xe
   314e8:	str	x7, [sp, #104]
   314ec:	b.eq	31534 <PyInit__decimal@@Base+0x16fb4>  // b.none
   314f0:	bl	29108 <PyInit__decimal@@Base+0xeb88>
   314f4:	cbnz	w0, 3151c <PyInit__decimal@@Base+0x16f9c>
   314f8:	ldrb	w1, [x23]
   314fc:	ldrb	w0, [x19]
   31500:	and	w0, w0, #0x2
   31504:	tbz	w1, #1, 3156c <PyInit__decimal@@Base+0x16fec>
   31508:	cbnz	w0, 31634 <PyInit__decimal@@Base+0x170b4>
   3150c:	mov	w1, w22
   31510:	mov	x0, x21
   31514:	mov	w2, #0x2                   	// #2
   31518:	bl	28cd8 <PyInit__decimal@@Base+0xe758>
   3151c:	ldp	x29, x30, [sp]
   31520:	ldp	x19, x20, [sp, #16]
   31524:	ldp	x21, x22, [sp, #32]
   31528:	ldp	x23, x24, [sp, #48]
   3152c:	add	sp, sp, #0x270
   31530:	ret
   31534:	ldr	x1, [x2, #24]
   31538:	ldr	x2, [x2, #40]
   3153c:	add	x1, x2, x1, lsl #3
   31540:	ldur	x1, [x1, #-8]
   31544:	cbnz	x1, 3159c <PyInit__decimal@@Base+0x1701c>
   31548:	ldr	x1, [x23, #24]
   3154c:	ldr	x2, [x23, #40]
   31550:	add	x1, x2, x1, lsl #3
   31554:	ldur	x1, [x1, #-8]
   31558:	cbnz	x1, 31618 <PyInit__decimal@@Base+0x17098>
   3155c:	mov	x2, x4
   31560:	mov	w1, #0x10                  	// #16
   31564:	bl	28d68 <PyInit__decimal@@Base+0xe7e8>
   31568:	b	3151c <PyInit__decimal@@Base+0x16f9c>
   3156c:	cbz	w0, 31648 <PyInit__decimal@@Base+0x170c8>
   31570:	mov	w1, w22
   31574:	mov	x0, x21
   31578:	mov	x3, #0x0                   	// #0
   3157c:	mov	x2, #0x0                   	// #0
   31580:	bl	26d90 <PyInit__decimal@@Base+0xc810>
   31584:	ldp	x29, x30, [sp]
   31588:	ldp	x19, x20, [sp, #16]
   3158c:	ldp	x21, x22, [sp, #32]
   31590:	ldp	x23, x24, [sp, #48]
   31594:	add	sp, sp, #0x270
   31598:	ret
   3159c:	mov	x20, x3
   315a0:	add	x22, sp, #0x40
   315a4:	mov	x5, x4
   315a8:	mov	x3, x19
   315ac:	mov	x2, x23
   315b0:	mov	x1, x22
   315b4:	mov	x4, x20
   315b8:	bl	2fa48 <PyInit__decimal@@Base+0x154c8>
   315bc:	ldrb	w0, [sp, #64]
   315c0:	tst	w0, #0xe0
   315c4:	b.ne	315dc <PyInit__decimal@@Base+0x1705c>  // b.any
   315c8:	adrp	x1, 5f000 <PyInit__decimal@@Base+0x44a80>
   315cc:	ldr	x0, [sp, #104]
   315d0:	ldr	x1, [x1, #1704]
   315d4:	blr	x1
   315d8:	ldrb	w0, [sp, #64]
   315dc:	tbnz	w0, #4, 315f0 <PyInit__decimal@@Base+0x17070>
   315e0:	adrp	x1, 5f000 <PyInit__decimal@@Base+0x44a80>
   315e4:	mov	x0, x22
   315e8:	ldr	x1, [x1, #1704]
   315ec:	blr	x1
   315f0:	mov	x2, x24
   315f4:	mov	x1, x20
   315f8:	mov	x0, x21
   315fc:	bl	2b110 <PyInit__decimal@@Base+0x10b90>
   31600:	ldp	x29, x30, [sp]
   31604:	ldp	x19, x20, [sp, #16]
   31608:	ldp	x21, x22, [sp, #32]
   3160c:	ldp	x23, x24, [sp, #48]
   31610:	add	sp, sp, #0x270
   31614:	ret
   31618:	mov	w1, w22
   3161c:	mov	w2, #0x2                   	// #2
   31620:	bl	28cd8 <PyInit__decimal@@Base+0xe758>
   31624:	ldr	w0, [x24]
   31628:	orr	w0, w0, #0x4
   3162c:	str	w0, [x24]
   31630:	b	3151c <PyInit__decimal@@Base+0x16f9c>
   31634:	mov	x2, x24
   31638:	mov	x0, x21
   3163c:	mov	w1, #0x100                 	// #256
   31640:	bl	28d68 <PyInit__decimal@@Base+0xe7e8>
   31644:	b	3151c <PyInit__decimal@@Base+0x16f9c>
   31648:	bl	67c0 <abort@plt>
   3164c:	nop
   31650:	sub	sp, sp, #0x560
   31654:	mov	w8, #0x30                  	// #48
   31658:	mov	x7, #0x40                  	// #64
   3165c:	add	x6, sp, #0x160
   31660:	mov	x11, #0x600000000           	// #25769803776
   31664:	stp	x29, x30, [sp]
   31668:	mov	x29, sp
   3166c:	ldp	x10, x13, [x4]
   31670:	stp	x21, x22, [sp, #32]
   31674:	mov	x22, x2
   31678:	stp	x19, x20, [sp, #16]
   3167c:	mov	x20, x4
   31680:	add	x2, sp, #0x360
   31684:	ldr	x12, [x4, #16]
   31688:	stp	x23, x24, [sp, #48]
   3168c:	mov	x19, x0
   31690:	ldp	x9, x4, [x22, #8]
   31694:	stp	x25, x26, [sp, #64]
   31698:	mov	x23, x5
   3169c:	stp	x12, xzr, [sp, #128]
   316a0:	and	w25, w3, #0xff
   316a4:	str	x11, [sp, #144]
   316a8:	add	x4, x4, x9
   316ac:	ldrb	w9, [x22]
   316b0:	add	x4, x4, x10
   316b4:	ldr	w10, [x20, #44]
   316b8:	add	x14, x4, #0x2
   316bc:	stp	x14, x13, [sp, #112]
   316c0:	stp	wzr, w10, [sp, #152]
   316c4:	strb	w8, [sp, #160]
   316c8:	stp	xzr, xzr, [sp, #168]
   316cc:	stp	xzr, x7, [sp, #184]
   316d0:	str	x6, [sp, #200]
   316d4:	strb	w8, [sp, #208]
   316d8:	stp	xzr, xzr, [sp, #216]
   316dc:	stp	xzr, x7, [sp, #232]
   316e0:	str	x2, [sp, #248]
   316e4:	tbz	w9, #0, 31880 <PyInit__decimal@@Base+0x17300>
   316e8:	add	x6, x4, #0x3
   316ec:	add	x21, sp, #0x70
   316f0:	add	x24, sp, #0xa0
   316f4:	adrp	x2, 5c000 <PyInit__decimal@@Base+0x41a80>
   316f8:	add	x2, x2, #0xc58
   316fc:	mov	x3, x1
   31700:	mov	w0, #0x1                   	// #1
   31704:	mov	x1, x24
   31708:	add	x2, x2, #0x60
   3170c:	mov	x4, x21
   31710:	str	x6, [sp, #112]
   31714:	bl	2f2b8 <PyInit__decimal@@Base+0x14d38>
   31718:	ldr	w1, [x23]
   3171c:	mov	w0, #0x3be                 	// #958
   31720:	tst	w1, w0
   31724:	b.ne	31a08 <PyInit__decimal@@Base+0x17488>  // b.any
   31728:	mov	x1, x22
   3172c:	add	x2, x21, #0x1c
   31730:	mov	w0, #0x0                   	// #0
   31734:	bl	28808 <PyInit__decimal@@Base+0xe288>
   31738:	ldr	w1, [sp, #140]
   3173c:	mov	x26, x0
   31740:	tbz	w1, #8, 318b4 <PyInit__decimal@@Base+0x17334>
   31744:	add	x26, sp, #0xd0
   31748:	mov	x2, x23
   3174c:	mov	x0, x26
   31750:	mov	x1, x22
   31754:	bl	28fe0 <PyInit__decimal@@Base+0xea60>
   31758:	cbz	w0, 31a08 <PyInit__decimal@@Base+0x17488>
   3175c:	add	x1, sp, #0x68
   31760:	mov	x2, #0x1                   	// #1
   31764:	mov	x4, #0x2                   	// #2
   31768:	mov	w3, #0xffffff90            	// #-112
   3176c:	stp	x27, x28, [sp, #80]
   31770:	add	x27, sp, #0x100
   31774:	mov	x0, x27
   31778:	str	wzr, [sp, #100]
   3177c:	add	x22, sp, #0x64
   31780:	str	x4, [sp, #104]
   31784:	add	x28, sp, #0x130
   31788:	strb	w3, [sp, #304]
   3178c:	stp	xzr, x2, [sp, #312]
   31790:	stp	x2, x2, [sp, #328]
   31794:	str	x1, [sp, #344]
   31798:	bl	1d4d0 <PyInit__decimal@@Base+0x2f50>
   3179c:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41a80>
   317a0:	add	x1, x1, #0xc58
   317a4:	add	x1, x1, #0x60
   317a8:	mov	x2, x23
   317ac:	mov	x0, x19
   317b0:	bl	28fe0 <PyInit__decimal@@Base+0xea60>
   317b4:	ldrb	w1, [sp, #208]
   317b8:	tst	w1, #0xe
   317bc:	b.ne	31a38 <PyInit__decimal@@Base+0x174b8>  // b.any
   317c0:	ldr	x0, [sp, #232]
   317c4:	ldr	x1, [sp, #248]
   317c8:	add	x0, x1, x0, lsl #3
   317cc:	ldur	x0, [x0, #-8]
   317d0:	cbnz	x0, 31a38 <PyInit__decimal@@Base+0x174b8>
   317d4:	ldrb	w1, [x19]
   317d8:	and	w1, w1, #0xfffffffe
   317dc:	orr	w1, w25, w1
   317e0:	strb	w1, [x19]
   317e4:	ldp	x27, x28, [sp, #80]
   317e8:	tbnz	w1, #1, 319e4 <PyInit__decimal@@Base+0x17464>
   317ec:	ldrb	w0, [sp, #160]
   317f0:	tst	w0, #0xe0
   317f4:	b.ne	3180c <PyInit__decimal@@Base+0x1728c>  // b.any
   317f8:	adrp	x1, 5f000 <PyInit__decimal@@Base+0x44a80>
   317fc:	ldr	x0, [sp, #200]
   31800:	ldr	x1, [x1, #1704]
   31804:	blr	x1
   31808:	ldrb	w0, [sp, #160]
   3180c:	tbnz	w0, #4, 31820 <PyInit__decimal@@Base+0x172a0>
   31810:	adrp	x1, 5f000 <PyInit__decimal@@Base+0x44a80>
   31814:	mov	x0, x24
   31818:	ldr	x1, [x1, #1704]
   3181c:	blr	x1
   31820:	ldrb	w0, [sp, #208]
   31824:	tst	w0, #0xe0
   31828:	b.ne	31840 <PyInit__decimal@@Base+0x172c0>  // b.any
   3182c:	adrp	x1, 5f000 <PyInit__decimal@@Base+0x44a80>
   31830:	ldr	x0, [sp, #248]
   31834:	ldr	x1, [x1, #1704]
   31838:	blr	x1
   3183c:	ldrb	w0, [sp, #208]
   31840:	tbnz	w0, #4, 31854 <PyInit__decimal@@Base+0x172d4>
   31844:	adrp	x1, 5f000 <PyInit__decimal@@Base+0x44a80>
   31848:	add	x0, sp, #0xd0
   3184c:	ldr	x1, [x1, #1704]
   31850:	blr	x1
   31854:	mov	x2, x23
   31858:	mov	x1, x20
   3185c:	mov	x0, x19
   31860:	bl	2b110 <PyInit__decimal@@Base+0x10b90>
   31864:	ldp	x29, x30, [sp]
   31868:	ldp	x19, x20, [sp, #16]
   3186c:	ldp	x21, x22, [sp, #32]
   31870:	ldp	x23, x24, [sp, #48]
   31874:	ldp	x25, x26, [sp, #64]
   31878:	add	sp, sp, #0x560
   3187c:	ret
   31880:	add	x24, sp, #0xa0
   31884:	mov	x2, x5
   31888:	mov	x0, x24
   3188c:	bl	28fe0 <PyInit__decimal@@Base+0xea60>
   31890:	cbz	w0, 31a08 <PyInit__decimal@@Base+0x17488>
   31894:	add	x21, sp, #0x70
   31898:	mov	x1, x22
   3189c:	add	x2, x21, #0x1c
   318a0:	mov	w0, #0x0                   	// #0
   318a4:	bl	28808 <PyInit__decimal@@Base+0xe288>
   318a8:	mov	x26, x0
   318ac:	ldr	w1, [sp, #140]
   318b0:	tbnz	w1, #8, 31744 <PyInit__decimal@@Base+0x171c4>
   318b4:	str	wzr, [sp, #304]
   318b8:	cbz	x0, 31a1c <PyInit__decimal@@Base+0x1749c>
   318bc:	mov	x2, x23
   318c0:	mov	x1, x24
   318c4:	mov	x0, x19
   318c8:	bl	28fe0 <PyInit__decimal@@Base+0xea60>
   318cc:	cbz	w0, 31a30 <PyInit__decimal@@Base+0x174b0>
   318d0:	cmp	xzr, x26, lsr #32
   318d4:	lsr	x0, x26, #32
   318d8:	mov	w1, #0x20                  	// #32
   318dc:	b.ne	318e8 <PyInit__decimal@@Base+0x17368>  // b.any
   318e0:	mov	x0, x26
   318e4:	mov	w1, #0x0                   	// #0
   318e8:	cmp	xzr, x0, lsr #16
   318ec:	lsr	x2, x0, #16
   318f0:	b.eq	318fc <PyInit__decimal@@Base+0x1737c>  // b.none
   318f4:	add	w1, w1, #0x10
   318f8:	mov	x0, x2
   318fc:	cmp	xzr, x0, lsr #8
   31900:	lsr	x2, x0, #8
   31904:	b.eq	31910 <PyInit__decimal@@Base+0x17390>  // b.none
   31908:	add	w1, w1, #0x8
   3190c:	mov	x0, x2
   31910:	cmp	xzr, x0, lsr #4
   31914:	lsr	x2, x0, #4
   31918:	b.eq	31924 <PyInit__decimal@@Base+0x173a4>  // b.none
   3191c:	add	w1, w1, #0x4
   31920:	mov	x0, x2
   31924:	cmp	xzr, x0, lsr #2
   31928:	lsr	x2, x0, #2
   3192c:	b.eq	31938 <PyInit__decimal@@Base+0x173b8>  // b.none
   31930:	add	w1, w1, #0x2
   31934:	mov	x0, x2
   31938:	cmp	xzr, x0, lsr #1
   3193c:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27a80>
   31940:	cinc	w1, w1, ne  // ne = any
   31944:	add	x0, x0, #0x370
   31948:	ldr	x22, [x0, w1, sxtw #3]
   3194c:	cmp	xzr, x22, lsr #1
   31950:	lsr	x22, x22, #1
   31954:	b.eq	31b50 <PyInit__decimal@@Base+0x175d0>  // b.none
   31958:	stp	x27, x28, [sp, #80]
   3195c:	add	x27, sp, #0x130
   31960:	mov	x4, x27
   31964:	mov	x3, x21
   31968:	mov	x2, x19
   3196c:	mov	x1, x19
   31970:	mov	x0, x19
   31974:	bl	291b8 <PyInit__decimal@@Base+0xec38>
   31978:	mov	x2, x27
   3197c:	mov	x1, x21
   31980:	mov	x0, x19
   31984:	bl	2b110 <PyInit__decimal@@Base+0x10b90>
   31988:	tst	x26, x22
   3198c:	b.ne	31b1c <PyInit__decimal@@Base+0x1759c>  // b.any
   31990:	ldrb	w1, [x19]
   31994:	lsr	x22, x22, #1
   31998:	tst	w1, #0xe
   3199c:	b.ne	319c0 <PyInit__decimal@@Base+0x17440>  // b.any
   319a0:	ldr	x0, [x19, #24]
   319a4:	ldr	x2, [x19, #40]
   319a8:	add	x0, x2, x0, lsl #3
   319ac:	ldur	x0, [x0, #-8]
   319b0:	cbnz	x0, 319bc <PyInit__decimal@@Base+0x1743c>
   319b4:	ldr	w0, [sp, #304]
   319b8:	tbnz	w0, #0, 31b48 <PyInit__decimal@@Base+0x175c8>
   319bc:	cbnz	x22, 31960 <PyInit__decimal@@Base+0x173e0>
   319c0:	ldp	x27, x28, [sp, #80]
   319c4:	ldr	w0, [sp, #304]
   319c8:	ldr	w2, [x23]
   319cc:	and	w1, w1, #0xfffffffe
   319d0:	orr	w1, w25, w1
   319d4:	orr	w0, w2, w0
   319d8:	str	w0, [x23]
   319dc:	strb	w1, [x19]
   319e0:	tbz	w1, #1, 317ec <PyInit__decimal@@Base+0x1726c>
   319e4:	mov	x3, #0x1                   	// #1
   319e8:	mov	w1, w25
   319ec:	movk	x3, #0x4ec8, lsl #16
   319f0:	mov	x0, x19
   319f4:	movk	x3, #0x6d67, lsl #32
   319f8:	mov	x2, #0x1                   	// #1
   319fc:	movk	x3, #0x1bc1, lsl #48
   31a00:	bl	26d90 <PyInit__decimal@@Base+0xc810>
   31a04:	b	317ec <PyInit__decimal@@Base+0x1726c>
   31a08:	mov	x0, x19
   31a0c:	mov	w2, #0x4                   	// #4
   31a10:	mov	w1, #0x0                   	// #0
   31a14:	bl	28cd8 <PyInit__decimal@@Base+0xe758>
   31a18:	b	317ec <PyInit__decimal@@Base+0x1726c>
   31a1c:	mov	w1, w25
   31a20:	mov	x0, x19
   31a24:	mov	x3, #0x0                   	// #0
   31a28:	mov	x2, #0x1                   	// #1
   31a2c:	bl	26d90 <PyInit__decimal@@Base+0xc810>
   31a30:	ldrb	w1, [x19]
   31a34:	b	317e8 <PyInit__decimal@@Base+0x17268>
   31a38:	mov	x0, x26
   31a3c:	bl	28c30 <PyInit__decimal@@Base+0xe6b0>
   31a40:	mov	x4, x22
   31a44:	mov	w5, w0
   31a48:	mov	x3, x21
   31a4c:	mov	x2, x24
   31a50:	mov	x1, x19
   31a54:	mov	x0, x19
   31a58:	cbz	w5, 31aa4 <PyInit__decimal@@Base+0x17524>
   31a5c:	bl	291b8 <PyInit__decimal@@Base+0xec38>
   31a60:	mov	x2, x22
   31a64:	mov	x1, x21
   31a68:	mov	x0, x19
   31a6c:	bl	2b110 <PyInit__decimal@@Base+0x10b90>
   31a70:	ldr	w0, [x23]
   31a74:	ldr	w2, [sp, #100]
   31a78:	orr	w0, w0, w2
   31a7c:	str	w0, [x23]
   31a80:	ldrb	w1, [x19]
   31a84:	tst	w1, #0xe
   31a88:	b.ne	317d8 <PyInit__decimal@@Base+0x17258>  // b.any
   31a8c:	ldr	x0, [x19, #24]
   31a90:	ldr	x3, [x19, #40]
   31a94:	add	x0, x3, x0, lsl #3
   31a98:	ldur	x0, [x0, #-8]
   31a9c:	cbnz	x0, 31aa4 <PyInit__decimal@@Base+0x17524>
   31aa0:	tbnz	w2, #0, 317d8 <PyInit__decimal@@Base+0x17258>
   31aa4:	mov	x4, x22
   31aa8:	mov	x3, x21
   31aac:	mov	x2, x24
   31ab0:	mov	x1, x24
   31ab4:	mov	x0, x24
   31ab8:	bl	291b8 <PyInit__decimal@@Base+0xec38>
   31abc:	mov	x2, x22
   31ac0:	mov	x1, x21
   31ac4:	mov	x0, x24
   31ac8:	bl	2b110 <PyInit__decimal@@Base+0x10b90>
   31acc:	mov	x1, x26
   31ad0:	mov	x0, x26
   31ad4:	mov	x4, x22
   31ad8:	mov	x3, x27
   31adc:	mov	x2, x28
   31ae0:	bl	31490 <PyInit__decimal@@Base+0x16f10>
   31ae4:	ldrb	w1, [sp, #208]
   31ae8:	ldrb	w0, [sp, #160]
   31aec:	orr	w0, w1, w0
   31af0:	tst	w0, #0xc
   31af4:	b.eq	317b8 <PyInit__decimal@@Base+0x17238>  // b.none
   31af8:	ldr	w3, [sp, #100]
   31afc:	mov	x2, x23
   31b00:	mov	x0, x19
   31b04:	mov	w1, #0x3be                 	// #958
   31b08:	and	w1, w3, w1
   31b0c:	bl	28d68 <PyInit__decimal@@Base+0xe7e8>
   31b10:	ldrb	w1, [x19]
   31b14:	ldp	x27, x28, [sp, #80]
   31b18:	b	317e8 <PyInit__decimal@@Base+0x17268>
   31b1c:	mov	x4, x27
   31b20:	mov	x3, x21
   31b24:	mov	x2, x24
   31b28:	mov	x1, x19
   31b2c:	mov	x0, x19
   31b30:	bl	291b8 <PyInit__decimal@@Base+0xec38>
   31b34:	mov	x2, x27
   31b38:	mov	x1, x21
   31b3c:	mov	x0, x19
   31b40:	bl	2b110 <PyInit__decimal@@Base+0x10b90>
   31b44:	b	31990 <PyInit__decimal@@Base+0x17410>
   31b48:	ldp	x27, x28, [sp, #80]
   31b4c:	b	319c8 <PyInit__decimal@@Base+0x17448>
   31b50:	ldrb	w1, [x19]
   31b54:	ldr	w0, [sp, #304]
   31b58:	b	319c8 <PyInit__decimal@@Base+0x17448>
   31b5c:	nop
   31b60:	sub	sp, sp, #0x2b0
   31b64:	stp	x29, x30, [sp]
   31b68:	mov	x29, sp
   31b6c:	stp	x21, x22, [sp, #32]
   31b70:	mov	x22, x1
   31b74:	add	x1, sp, #0xb0
   31b78:	stp	x23, x24, [sp, #48]
   31b7c:	mov	x24, x2
   31b80:	mov	x23, x3
   31b84:	mov	x2, #0x40                  	// #64
   31b88:	mov	w3, #0x30                  	// #48
   31b8c:	stp	x19, x20, [sp, #16]
   31b90:	add	x20, sp, #0x50
   31b94:	mov	x19, x4
   31b98:	mov	x21, x0
   31b9c:	mov	x0, x20
   31ba0:	str	x25, [sp, #64]
   31ba4:	add	x25, sp, #0x80
   31ba8:	strb	w3, [sp, #128]
   31bac:	stp	xzr, xzr, [sp, #136]
   31bb0:	stp	xzr, x2, [sp, #152]
   31bb4:	str	x1, [sp, #168]
   31bb8:	bl	1d4d0 <PyInit__decimal@@Base+0x2f50>
   31bbc:	mov	x1, x24
   31bc0:	mov	x2, x20
   31bc4:	mov	x3, x19
   31bc8:	mov	x0, x25
   31bcc:	bl	2b9f0 <PyInit__decimal@@Base+0x11470>
   31bd0:	mov	w0, #0x1                   	// #1
   31bd4:	mov	x5, x19
   31bd8:	mov	x4, x23
   31bdc:	mov	x3, x25
   31be0:	mov	x2, x22
   31be4:	mov	x1, x21
   31be8:	bl	2f2b8 <PyInit__decimal@@Base+0x14d38>
   31bec:	ldrb	w0, [sp, #128]
   31bf0:	tst	w0, #0xe0
   31bf4:	b.ne	31c0c <PyInit__decimal@@Base+0x1768c>  // b.any
   31bf8:	adrp	x1, 5f000 <PyInit__decimal@@Base+0x44a80>
   31bfc:	ldr	x0, [sp, #168]
   31c00:	ldr	x1, [x1, #1704]
   31c04:	blr	x1
   31c08:	ldrb	w0, [sp, #128]
   31c0c:	tbnz	w0, #4, 31c20 <PyInit__decimal@@Base+0x176a0>
   31c10:	adrp	x1, 5f000 <PyInit__decimal@@Base+0x44a80>
   31c14:	mov	x0, x25
   31c18:	ldr	x1, [x1, #1704]
   31c1c:	blr	x1
   31c20:	ldp	x29, x30, [sp]
   31c24:	ldp	x19, x20, [sp, #16]
   31c28:	ldp	x21, x22, [sp, #32]
   31c2c:	ldp	x23, x24, [sp, #48]
   31c30:	ldr	x25, [sp, #64]
   31c34:	add	sp, sp, #0x2b0
   31c38:	ret
   31c3c:	nop
   31c40:	sub	sp, sp, #0x2b0
   31c44:	stp	x29, x30, [sp]
   31c48:	mov	x29, sp
   31c4c:	stp	x21, x22, [sp, #32]
   31c50:	mov	x22, x1
   31c54:	add	x1, sp, #0xb0
   31c58:	stp	x23, x24, [sp, #48]
   31c5c:	mov	x24, x2
   31c60:	mov	x23, x3
   31c64:	mov	x2, #0x40                  	// #64
   31c68:	mov	w3, #0x30                  	// #48
   31c6c:	stp	x19, x20, [sp, #16]
   31c70:	add	x20, sp, #0x50
   31c74:	mov	x19, x4
   31c78:	mov	x21, x0
   31c7c:	mov	x0, x20
   31c80:	str	x25, [sp, #64]
   31c84:	add	x25, sp, #0x80
   31c88:	strb	w3, [sp, #128]
   31c8c:	stp	xzr, xzr, [sp, #136]
   31c90:	stp	xzr, x2, [sp, #152]
   31c94:	str	x1, [sp, #168]
   31c98:	bl	1d4d0 <PyInit__decimal@@Base+0x2f50>
   31c9c:	mov	x1, x24
   31ca0:	mov	x2, x20
   31ca4:	mov	x3, x19
   31ca8:	mov	x0, x25
   31cac:	bl	2bc50 <PyInit__decimal@@Base+0x116d0>
   31cb0:	mov	w0, #0x1                   	// #1
   31cb4:	mov	x5, x19
   31cb8:	mov	x4, x23
   31cbc:	mov	x3, x25
   31cc0:	mov	x2, x22
   31cc4:	mov	x1, x21
   31cc8:	bl	2f2b8 <PyInit__decimal@@Base+0x14d38>
   31ccc:	ldrb	w0, [sp, #128]
   31cd0:	tst	w0, #0xe0
   31cd4:	b.ne	31cec <PyInit__decimal@@Base+0x1776c>  // b.any
   31cd8:	adrp	x1, 5f000 <PyInit__decimal@@Base+0x44a80>
   31cdc:	ldr	x0, [sp, #168]
   31ce0:	ldr	x1, [x1, #1704]
   31ce4:	blr	x1
   31ce8:	ldrb	w0, [sp, #128]
   31cec:	tbnz	w0, #4, 31d00 <PyInit__decimal@@Base+0x17780>
   31cf0:	adrp	x1, 5f000 <PyInit__decimal@@Base+0x44a80>
   31cf4:	mov	x0, x25
   31cf8:	ldr	x1, [x1, #1704]
   31cfc:	blr	x1
   31d00:	ldp	x29, x30, [sp]
   31d04:	ldp	x19, x20, [sp, #16]
   31d08:	ldp	x21, x22, [sp, #32]
   31d0c:	ldp	x23, x24, [sp, #48]
   31d10:	ldr	x25, [sp, #64]
   31d14:	add	sp, sp, #0x2b0
   31d18:	ret
   31d1c:	nop
   31d20:	sxtw	x2, w2
   31d24:	b	31b60 <PyInit__decimal@@Base+0x175e0>
   31d28:	mov	w2, w2
   31d2c:	b	31c40 <PyInit__decimal@@Base+0x176c0>
   31d30:	b	31b60 <PyInit__decimal@@Base+0x175e0>
   31d34:	nop
   31d38:	b	31c40 <PyInit__decimal@@Base+0x176c0>
   31d3c:	nop
   31d40:	stp	x29, x30, [sp, #-96]!
   31d44:	cmp	x0, x3
   31d48:	mov	x29, sp
   31d4c:	stp	x19, x20, [sp, #16]
   31d50:	mov	x20, x0
   31d54:	mov	x19, x5
   31d58:	stp	x21, x22, [sp, #32]
   31d5c:	mov	x22, x4
   31d60:	stp	x23, x24, [sp, #48]
   31d64:	str	wzr, [sp, #92]
   31d68:	b.eq	31dc4 <PyInit__decimal@@Base+0x17844>  // b.none
   31d6c:	add	x23, sp, #0x5c
   31d70:	mov	x21, x3
   31d74:	mov	x3, x4
   31d78:	mov	x4, x23
   31d7c:	bl	291b8 <PyInit__decimal@@Base+0xec38>
   31d80:	ldr	w1, [sp, #92]
   31d84:	tbnz	w1, #8, 31da4 <PyInit__decimal@@Base+0x17824>
   31d88:	mov	x1, x20
   31d8c:	mov	x4, x23
   31d90:	mov	x3, x22
   31d94:	mov	x2, x21
   31d98:	mov	x0, x20
   31d9c:	bl	2e488 <PyInit__decimal@@Base+0x13f08>
   31da0:	ldr	w1, [sp, #92]
   31da4:	ldr	w0, [x19]
   31da8:	orr	w0, w0, w1
   31dac:	str	w0, [x19]
   31db0:	ldp	x19, x20, [sp, #16]
   31db4:	ldp	x21, x22, [sp, #32]
   31db8:	ldp	x23, x24, [sp, #48]
   31dbc:	ldp	x29, x30, [sp], #96
   31dc0:	ret
   31dc4:	mov	x23, x1
   31dc8:	mov	x24, x2
   31dcc:	bl	29d98 <PyInit__decimal@@Base+0xf818>
   31dd0:	mov	x21, x0
   31dd4:	cbz	x0, 31e40 <PyInit__decimal@@Base+0x178c0>
   31dd8:	str	x25, [sp, #64]
   31ddc:	add	x25, sp, #0x5c
   31de0:	mov	x0, x20
   31de4:	mov	x2, x24
   31de8:	mov	x1, x23
   31dec:	mov	x3, x22
   31df0:	mov	x4, x25
   31df4:	bl	291b8 <PyInit__decimal@@Base+0xec38>
   31df8:	ldr	w0, [sp, #92]
   31dfc:	tbz	w0, #8, 31e54 <PyInit__decimal@@Base+0x178d4>
   31e00:	ldrb	w0, [x21]
   31e04:	tst	w0, #0xe0
   31e08:	b.ne	31e20 <PyInit__decimal@@Base+0x178a0>  // b.any
   31e0c:	adrp	x1, 5f000 <PyInit__decimal@@Base+0x44a80>
   31e10:	ldr	x0, [x21, #40]
   31e14:	ldr	x1, [x1, #1704]
   31e18:	blr	x1
   31e1c:	ldrb	w0, [x21]
   31e20:	tbnz	w0, #4, 31e34 <PyInit__decimal@@Base+0x178b4>
   31e24:	adrp	x1, 5f000 <PyInit__decimal@@Base+0x44a80>
   31e28:	mov	x0, x21
   31e2c:	ldr	x1, [x1, #1704]
   31e30:	blr	x1
   31e34:	ldr	w1, [sp, #92]
   31e38:	ldr	x25, [sp, #64]
   31e3c:	b	31da4 <PyInit__decimal@@Base+0x17824>
   31e40:	mov	x2, x19
   31e44:	mov	x0, x20
   31e48:	mov	w1, #0x200                 	// #512
   31e4c:	bl	28d68 <PyInit__decimal@@Base+0xe7e8>
   31e50:	b	31db0 <PyInit__decimal@@Base+0x17830>
   31e54:	mov	x4, x25
   31e58:	mov	x3, x22
   31e5c:	mov	x2, x21
   31e60:	mov	x1, x20
   31e64:	mov	x0, x20
   31e68:	bl	2e488 <PyInit__decimal@@Base+0x13f08>
   31e6c:	b	31e00 <PyInit__decimal@@Base+0x17880>
   31e70:	sub	sp, sp, #0x580
   31e74:	mov	w6, #0x30                  	// #48
   31e78:	mov	x7, #0x40                  	// #64
   31e7c:	mov	w10, #0xffffff90            	// #-112
   31e80:	add	x5, sp, #0x180
   31e84:	add	x4, sp, #0x380
   31e88:	stp	x29, x30, [sp]
   31e8c:	mov	x29, sp
   31e90:	ldr	x9, [x1, #24]
   31e94:	stp	x23, x24, [sp, #48]
   31e98:	mov	x24, #0x1                   	// #1
   31e9c:	ldr	x8, [x1, #40]
   31ea0:	str	x24, [sp, #128]
   31ea4:	strb	w6, [sp, #144]
   31ea8:	stp	xzr, xzr, [sp, #152]
   31eac:	add	x11, x8, x9, lsl #3
   31eb0:	stp	xzr, x7, [sp, #168]
   31eb4:	strb	w6, [sp, #192]
   31eb8:	stp	xzr, xzr, [sp, #200]
   31ebc:	stp	xzr, x7, [sp, #216]
   31ec0:	strb	w10, [sp, #240]
   31ec4:	stp	xzr, x24, [sp, #248]
   31ec8:	stp	x24, x24, [sp, #264]
   31ecc:	stp	x25, x26, [sp, #64]
   31ed0:	mov	x25, x2
   31ed4:	ldur	x2, [x11, #-8]
   31ed8:	stp	x21, x22, [sp, #32]
   31edc:	mov	x22, x1
   31ee0:	add	x1, sp, #0x80
   31ee4:	str	x5, [sp, #184]
   31ee8:	str	x4, [sp, #232]
   31eec:	str	x1, [sp, #280]
   31ef0:	cbz	x2, 322e8 <PyInit__decimal@@Base+0x17d68>
   31ef4:	stp	x19, x20, [sp, #16]
   31ef8:	mov	x19, x3
   31efc:	ldp	x4, x3, [x22, #8]
   31f00:	ldrb	w1, [x22]
   31f04:	add	x21, x3, x4
   31f08:	cmp	x21, #0x13
   31f0c:	b.le	31f4c <PyInit__decimal@@Base+0x179cc>
   31f10:	tbnz	w1, #0, 322a0 <PyInit__decimal@@Base+0x17d20>
   31f14:	mov	w1, #0x0                   	// #0
   31f18:	mov	w2, #0x2                   	// #2
   31f1c:	bl	28cd8 <PyInit__decimal@@Base+0xe758>
   31f20:	ldr	w0, [x19]
   31f24:	mov	w1, #0x1840                	// #6208
   31f28:	orr	w0, w0, w1
   31f2c:	str	w0, [x19]
   31f30:	ldp	x19, x20, [sp, #16]
   31f34:	ldp	x29, x30, [sp]
   31f38:	ldp	x21, x22, [sp, #32]
   31f3c:	ldp	x23, x24, [sp, #48]
   31f40:	ldp	x25, x26, [sp, #64]
   31f44:	add	sp, sp, #0x580
   31f48:	ret
   31f4c:	ldr	x7, [x25]
   31f50:	and	w1, w1, #0xe
   31f54:	ldr	x11, [x22, #32]
   31f58:	add	x5, sp, #0x88
   31f5c:	mvn	x7, x7
   31f60:	mov	w2, #0x50                  	// #80
   31f64:	orr	w2, w1, w2
   31f68:	mov	x12, #0x9                   	// #9
   31f6c:	add	x23, sp, #0x120
   31f70:	add	x20, sp, #0x150
   31f74:	mov	x1, x23
   31f78:	stp	x27, x28, [sp, #80]
   31f7c:	mov	x28, x0
   31f80:	mov	x0, x20
   31f84:	str	x12, [sp, #136]
   31f88:	strb	w10, [sp, #288]
   31f8c:	stp	x7, x24, [sp, #296]
   31f90:	stp	x24, x24, [sp, #312]
   31f94:	str	x5, [sp, #328]
   31f98:	strb	w2, [sp, #336]
   31f9c:	stp	x4, x3, [sp, #344]
   31fa0:	stp	x9, x11, [sp, #360]
   31fa4:	str	x8, [sp, #376]
   31fa8:	bl	26c80 <PyInit__decimal@@Base+0xc700>
   31fac:	cmp	w0, #0x0
   31fb0:	b.le	32310 <PyInit__decimal@@Base+0x17d90>
   31fb4:	cmp	x21, #0x0
   31fb8:	mov	x0, x20
   31fbc:	csel	x21, x21, xzr, ge  // ge = tcont
   31fc0:	str	x21, [sp, #120]
   31fc4:	bl	1d4d0 <PyInit__decimal@@Base+0x2f50>
   31fc8:	ldr	x3, [x25]
   31fcc:	mov	x4, #0xa                   	// #10
   31fd0:	mov	w5, #0x6                   	// #6
   31fd4:	mov	x1, x22
   31fd8:	add	x3, x3, #0x2
   31fdc:	mov	x2, x19
   31fe0:	add	x3, x3, x21
   31fe4:	mov	x0, x28
   31fe8:	cmp	x3, x4
   31fec:	str	w5, [sp, #372]
   31ff0:	csel	x3, x3, x4, ge  // ge = tcont
   31ff4:	str	x3, [sp, #336]
   31ff8:	bl	28fe0 <PyInit__decimal@@Base+0xea60>
   31ffc:	cbz	w0, 32280 <PyInit__decimal@@Base+0x17d00>
   32000:	ldr	x1, [x28, #8]
   32004:	mov	x2, #0x10000000000000      	// #4503599627370496
   32008:	ldr	x3, [sp, #120]
   3200c:	ldr	x0, [sp, #336]
   32010:	sub	x1, x1, x3
   32014:	str	x1, [x28, #8]
   32018:	cmp	x0, x2
   3201c:	b.gt	32368 <PyInit__decimal@@Base+0x17de8>
   32020:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27a80>
   32024:	add	x3, x2, #0x2d0
   32028:	ldr	x2, [x3, #72]
   3202c:	str	x2, [sp, #112]
   32030:	cmp	x0, x2
   32034:	b.cc	32340 <PyInit__decimal@@Base+0x17dc0>  // b.lo, b.ul, b.last
   32038:	ldr	x2, [x3, #112]
   3203c:	cmp	x0, x2
   32040:	b.cs	325d4 <PyInit__decimal@@Base+0x18054>  // b.hs, b.nlast
   32044:	ldr	x2, [x3, #88]
   32048:	cmp	x0, x2
   3204c:	b.cc	32628 <PyInit__decimal@@Base+0x180a8>  // b.lo, b.ul, b.last
   32050:	ldr	x4, [x3, #104]
   32054:	mov	x2, #0xd                   	// #13
   32058:	cmp	x0, x4
   3205c:	b.cs	32070 <PyInit__decimal@@Base+0x17af0>  // b.hs, b.nlast
   32060:	ldr	x2, [x3, #96]
   32064:	cmp	x0, x2
   32068:	cset	x2, cs  // cs = hs, nlast
   3206c:	add	x2, x2, #0xb
   32070:	scvtf	d0, x0
   32074:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27a80>
   32078:	adrp	x3, 42000 <PyInit__decimal@@Base+0x27a80>
   3207c:	mov	x8, #0x3                   	// #3
   32080:	ldr	d2, [x0, #2376]
   32084:	ldr	x0, [x28, #16]
   32088:	fmul	d0, d0, d2
   3208c:	ldr	d1, [x3, #2384]
   32090:	add	x1, x1, x0
   32094:	mov	x3, #0x7fffffffffffffff    	// #9223372036854775807
   32098:	sub	x2, x2, x1
   3209c:	fsub	d0, d0, d1
   320a0:	scvtf	d1, x2
   320a4:	fdiv	d0, d0, d1
   320a8:	fcvtps	x0, d0
   320ac:	cmp	x0, x8
   320b0:	csel	x27, x0, x8, ge  // ge = tcont
   320b4:	cmp	x0, x3
   320b8:	b.eq	32368 <PyInit__decimal@@Base+0x17de8>  // b.none
   320bc:	add	x22, sp, #0xc0
   320c0:	mov	x3, #0x0                   	// #0
   320c4:	mov	x0, x22
   320c8:	mov	x2, #0x1                   	// #1
   320cc:	mov	w1, #0x0                   	// #0
   320d0:	bl	26d90 <PyInit__decimal@@Base+0xc810>
   320d4:	add	x0, sp, #0xf0
   320d8:	adrp	x25, 5c000 <PyInit__decimal@@Base+0x41a80>
   320dc:	add	x25, x25, #0xc58
   320e0:	sub	x27, x27, #0x1
   320e4:	add	x25, x25, #0x60
   320e8:	add	x24, sp, #0x90
   320ec:	add	x21, x20, #0x1c
   320f0:	str	x0, [sp, #104]
   320f4:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27a80>
   320f8:	add	x26, x0, #0x2d0
   320fc:	b	3217c <PyInit__decimal@@Base+0x17bfc>
   32100:	ldr	x2, [x26, #32]
   32104:	cmp	x1, x2
   32108:	b.cs	323b0 <PyInit__decimal@@Base+0x17e30>  // b.hs, b.nlast
   3210c:	ldr	x2, [x26, #16]
   32110:	cmp	x1, x2
   32114:	b.cs	323e0 <PyInit__decimal@@Base+0x17e60>  // b.hs, b.nlast
   32118:	ldr	x2, [x26, #8]
   3211c:	cmp	x1, x2
   32120:	cset	x10, cs  // cs = hs, nlast
   32124:	add	x10, x10, #0x1
   32128:	sub	x0, x0, #0x1
   3212c:	mov	x5, x21
   32130:	ldr	x3, [sp, #104]
   32134:	add	x7, x0, x0, lsl #2
   32138:	mov	x4, x20
   3213c:	mov	x2, x28
   32140:	add	x7, x10, x7, lsl #2
   32144:	mov	x1, x24
   32148:	sub	x0, x7, x0
   3214c:	str	x0, [sp, #256]
   32150:	mov	w0, #0x1                   	// #1
   32154:	bl	2f2b8 <PyInit__decimal@@Base+0x14d38>
   32158:	mov	x5, x21
   3215c:	mov	x4, x20
   32160:	mov	x3, x25
   32164:	mov	x2, x24
   32168:	mov	x1, x22
   3216c:	mov	x0, x22
   32170:	bl	31d40 <PyInit__decimal@@Base+0x177c0>
   32174:	subs	x27, x27, #0x1
   32178:	b.eq	32408 <PyInit__decimal@@Base+0x17e88>  // b.none
   3217c:	ldr	x1, [sp, #280]
   32180:	ldr	x2, [sp, #112]
   32184:	str	x27, [x1]
   32188:	ldr	x0, [sp, #264]
   3218c:	add	x1, x1, x0, lsl #3
   32190:	ldur	x1, [x1, #-8]
   32194:	cmp	x2, x1
   32198:	b.hi	32100 <PyInit__decimal@@Base+0x17b80>  // b.pmore
   3219c:	ldr	x2, [x26, #112]
   321a0:	cmp	x1, x2
   321a4:	b.cs	32384 <PyInit__decimal@@Base+0x17e04>  // b.hs, b.nlast
   321a8:	ldr	x2, [x26, #88]
   321ac:	cmp	x1, x2
   321b0:	b.cc	32550 <PyInit__decimal@@Base+0x17fd0>  // b.lo, b.ul, b.last
   321b4:	ldr	x2, [x26, #104]
   321b8:	mov	x10, #0xe                   	// #14
   321bc:	cmp	x1, x2
   321c0:	b.cs	32128 <PyInit__decimal@@Base+0x17ba8>  // b.hs, b.nlast
   321c4:	ldr	x2, [x26, #96]
   321c8:	cmp	x1, x2
   321cc:	cset	x10, cs  // cs = hs, nlast
   321d0:	add	x10, x10, #0xc
   321d4:	b	32128 <PyInit__decimal@@Base+0x17ba8>
   321d8:	ldrb	w1, [x28]
   321dc:	nop
   321e0:	ldr	w0, [sp, #288]
   321e4:	ldr	w2, [x19]
   321e8:	and	w1, w1, #0xfffffffe
   321ec:	orr	w0, w2, w0
   321f0:	str	w0, [x19]
   321f4:	strb	w1, [x28]
   321f8:	ldrb	w0, [sp, #144]
   321fc:	tst	w0, #0xe0
   32200:	b.ne	32218 <PyInit__decimal@@Base+0x17c98>  // b.any
   32204:	adrp	x1, 5f000 <PyInit__decimal@@Base+0x44a80>
   32208:	ldr	x0, [sp, #184]
   3220c:	ldr	x1, [x1, #1704]
   32210:	blr	x1
   32214:	ldrb	w0, [sp, #144]
   32218:	tbnz	w0, #4, 3222c <PyInit__decimal@@Base+0x17cac>
   3221c:	adrp	x1, 5f000 <PyInit__decimal@@Base+0x44a80>
   32220:	mov	x0, x24
   32224:	ldr	x1, [x1, #1704]
   32228:	blr	x1
   3222c:	ldrb	w0, [sp, #192]
   32230:	tst	w0, #0xe0
   32234:	b.ne	3224c <PyInit__decimal@@Base+0x17ccc>  // b.any
   32238:	adrp	x1, 5f000 <PyInit__decimal@@Base+0x44a80>
   3223c:	ldr	x0, [sp, #232]
   32240:	ldr	x1, [x1, #1704]
   32244:	blr	x1
   32248:	ldrb	w0, [sp, #192]
   3224c:	tbnz	w0, #4, 32260 <PyInit__decimal@@Base+0x17ce0>
   32250:	adrp	x1, 5f000 <PyInit__decimal@@Base+0x44a80>
   32254:	mov	x0, x22
   32258:	ldr	x1, [x1, #1704]
   3225c:	blr	x1
   32260:	ldr	w0, [sp, #364]
   32264:	mov	w3, #0x3be                 	// #958
   32268:	ldr	w2, [x19]
   3226c:	mov	w1, #0x1040                	// #4160
   32270:	and	w0, w0, w3
   32274:	orr	w0, w0, w2
   32278:	orr	w0, w0, w1
   3227c:	str	w0, [x19]
   32280:	ldp	x29, x30, [sp]
   32284:	ldp	x19, x20, [sp, #16]
   32288:	ldp	x21, x22, [sp, #32]
   3228c:	ldp	x23, x24, [sp, #48]
   32290:	ldp	x25, x26, [sp, #64]
   32294:	ldp	x27, x28, [sp, #80]
   32298:	add	sp, sp, #0x580
   3229c:	ret
   322a0:	ldr	x4, [x25]
   322a4:	mov	x2, #0x0                   	// #0
   322a8:	ldr	x3, [x25, #16]
   322ac:	mov	w1, #0x0                   	// #0
   322b0:	add	x3, x3, #0x1
   322b4:	sub	x3, x3, x4
   322b8:	bl	26d90 <PyInit__decimal@@Base+0xc810>
   322bc:	ldr	w0, [x19]
   322c0:	mov	w1, #0x7041                	// #28737
   322c4:	ldp	x29, x30, [sp]
   322c8:	orr	w0, w0, w1
   322cc:	str	w0, [x19]
   322d0:	ldp	x19, x20, [sp, #16]
   322d4:	ldp	x21, x22, [sp, #32]
   322d8:	ldp	x23, x24, [sp, #48]
   322dc:	ldp	x25, x26, [sp, #64]
   322e0:	add	sp, sp, #0x580
   322e4:	ret
   322e8:	mov	x2, x24
   322ec:	mov	x3, #0x0                   	// #0
   322f0:	mov	w1, #0x0                   	// #0
   322f4:	bl	26d90 <PyInit__decimal@@Base+0xc810>
   322f8:	ldp	x29, x30, [sp]
   322fc:	ldp	x21, x22, [sp, #32]
   32300:	ldp	x23, x24, [sp, #48]
   32304:	ldp	x25, x26, [sp, #64]
   32308:	add	sp, sp, #0x580
   3230c:	ret
   32310:	mov	x0, x28
   32314:	mov	w1, #0x0                   	// #0
   32318:	mov	x2, x24
   3231c:	mov	x3, #0x0                   	// #0
   32320:	bl	26d90 <PyInit__decimal@@Base+0xc810>
   32324:	ldr	w0, [x19]
   32328:	mov	w1, #0x1040                	// #4160
   3232c:	ldp	x27, x28, [sp, #80]
   32330:	orr	w0, w0, w1
   32334:	str	w0, [x19]
   32338:	ldp	x19, x20, [sp, #16]
   3233c:	b	31f34 <PyInit__decimal@@Base+0x179b4>
   32340:	ldr	x2, [x3, #32]
   32344:	cmp	x0, x2
   32348:	b.cs	325a4 <PyInit__decimal@@Base+0x18024>  // b.hs, b.nlast
   3234c:	ldr	x2, [x3, #16]
   32350:	cmp	x0, x2
   32354:	b.cs	32600 <PyInit__decimal@@Base+0x18080>  // b.hs, b.nlast
   32358:	ldr	x2, [x3, #8]
   3235c:	cmp	x0, x2
   32360:	cset	x2, cs  // cs = hs, nlast
   32364:	b	32070 <PyInit__decimal@@Base+0x17af0>
   32368:	mov	x2, x19
   3236c:	mov	x0, x28
   32370:	mov	w1, #0x100                 	// #256
   32374:	bl	28d68 <PyInit__decimal@@Base+0xe7e8>
   32378:	ldp	x19, x20, [sp, #16]
   3237c:	ldp	x27, x28, [sp, #80]
   32380:	b	31f34 <PyInit__decimal@@Base+0x179b4>
   32384:	ldr	x2, [x26, #144]
   32388:	cmp	x1, x2
   3238c:	b.cs	323f4 <PyInit__decimal@@Base+0x17e74>  // b.hs, b.nlast
   32390:	ldr	x2, [x26, #128]
   32394:	cmp	x1, x2
   32398:	b.cs	32578 <PyInit__decimal@@Base+0x17ff8>  // b.hs, b.nlast
   3239c:	ldr	x2, [x26, #120]
   323a0:	cmp	x1, x2
   323a4:	cset	x10, cs  // cs = hs, nlast
   323a8:	add	x10, x10, #0xf
   323ac:	b	32128 <PyInit__decimal@@Base+0x17ba8>
   323b0:	ldr	x2, [x26, #48]
   323b4:	cmp	x1, x2
   323b8:	b.cc	32564 <PyInit__decimal@@Base+0x17fe4>  // b.lo, b.ul, b.last
   323bc:	ldr	x2, [x26, #64]
   323c0:	mov	x10, #0x9                   	// #9
   323c4:	cmp	x1, x2
   323c8:	b.cs	32128 <PyInit__decimal@@Base+0x17ba8>  // b.hs, b.nlast
   323cc:	ldr	x2, [x26, #56]
   323d0:	cmp	x1, x2
   323d4:	cset	x10, cs  // cs = hs, nlast
   323d8:	add	x10, x10, #0x7
   323dc:	b	32128 <PyInit__decimal@@Base+0x17ba8>
   323e0:	ldr	x2, [x26, #24]
   323e4:	cmp	x1, x2
   323e8:	cset	x10, cs  // cs = hs, nlast
   323ec:	add	x10, x10, #0x3
   323f0:	b	32128 <PyInit__decimal@@Base+0x17ba8>
   323f4:	ldr	x2, [x26, #152]
   323f8:	cmp	x1, x2
   323fc:	cset	x10, cs  // cs = hs, nlast
   32400:	add	x10, x10, #0x13
   32404:	b	32128 <PyInit__decimal@@Base+0x17ba8>
   32408:	ldr	x1, [sp, #120]
   3240c:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27a80>
   32410:	add	x0, x0, #0x2d0
   32414:	str	wzr, [sp, #288]
   32418:	ldr	x25, [x0, x1, lsl #3]
   3241c:	cbz	x25, 3258c <PyInit__decimal@@Base+0x1800c>
   32420:	mov	x2, x19
   32424:	mov	x1, x22
   32428:	mov	x0, x28
   3242c:	bl	28fe0 <PyInit__decimal@@Base+0xea60>
   32430:	cbz	w0, 321f8 <PyInit__decimal@@Base+0x17c78>
   32434:	cmp	xzr, x25, lsr #32
   32438:	lsr	x0, x25, #32
   3243c:	mov	w1, #0x20                  	// #32
   32440:	b.ne	3244c <PyInit__decimal@@Base+0x17ecc>  // b.any
   32444:	mov	x0, x25
   32448:	mov	w1, #0x0                   	// #0
   3244c:	cmp	xzr, x0, lsr #16
   32450:	lsr	x2, x0, #16
   32454:	b.eq	32460 <PyInit__decimal@@Base+0x17ee0>  // b.none
   32458:	add	w1, w1, #0x10
   3245c:	mov	x0, x2
   32460:	cmp	xzr, x0, lsr #8
   32464:	lsr	x2, x0, #8
   32468:	b.eq	32474 <PyInit__decimal@@Base+0x17ef4>  // b.none
   3246c:	add	w1, w1, #0x8
   32470:	mov	x0, x2
   32474:	cmp	xzr, x0, lsr #4
   32478:	lsr	x2, x0, #4
   3247c:	b.eq	32488 <PyInit__decimal@@Base+0x17f08>  // b.none
   32480:	add	w1, w1, #0x4
   32484:	mov	x0, x2
   32488:	cmp	xzr, x0, lsr #2
   3248c:	lsr	x2, x0, #2
   32490:	b.eq	3249c <PyInit__decimal@@Base+0x17f1c>  // b.none
   32494:	add	w1, w1, #0x2
   32498:	mov	x0, x2
   3249c:	cmp	xzr, x0, lsr #1
   324a0:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27a80>
   324a4:	cinc	w1, w1, ne  // ne = any
   324a8:	add	x0, x0, #0x370
   324ac:	ldr	x21, [x0, w1, sxtw #3]
   324b0:	cmp	xzr, x21, lsr #1
   324b4:	lsr	x21, x21, #1
   324b8:	b.eq	321d8 <PyInit__decimal@@Base+0x17c58>  // b.none
   324bc:	nop
   324c0:	mov	x4, x23
   324c4:	mov	x3, x20
   324c8:	mov	x2, x28
   324cc:	mov	x1, x28
   324d0:	mov	x0, x28
   324d4:	bl	291b8 <PyInit__decimal@@Base+0xec38>
   324d8:	mov	x2, x23
   324dc:	mov	x1, x20
   324e0:	mov	x0, x28
   324e4:	bl	2b110 <PyInit__decimal@@Base+0x10b90>
   324e8:	tst	x25, x21
   324ec:	b.ne	32524 <PyInit__decimal@@Base+0x17fa4>  // b.any
   324f0:	ldrb	w1, [x28]
   324f4:	lsr	x21, x21, #1
   324f8:	tst	w1, #0xe
   324fc:	b.ne	321e0 <PyInit__decimal@@Base+0x17c60>  // b.any
   32500:	ldr	x0, [x28, #24]
   32504:	ldr	x2, [x28, #40]
   32508:	add	x0, x2, x0, lsl #3
   3250c:	ldur	x0, [x0, #-8]
   32510:	cbnz	x0, 3251c <PyInit__decimal@@Base+0x17f9c>
   32514:	ldr	w0, [sp, #288]
   32518:	tbnz	w0, #0, 321e4 <PyInit__decimal@@Base+0x17c64>
   3251c:	cbnz	x21, 324c0 <PyInit__decimal@@Base+0x17f40>
   32520:	b	321e0 <PyInit__decimal@@Base+0x17c60>
   32524:	mov	x4, x23
   32528:	mov	x3, x20
   3252c:	mov	x2, x22
   32530:	mov	x1, x28
   32534:	mov	x0, x28
   32538:	bl	291b8 <PyInit__decimal@@Base+0xec38>
   3253c:	mov	x2, x23
   32540:	mov	x1, x20
   32544:	mov	x0, x28
   32548:	bl	2b110 <PyInit__decimal@@Base+0x10b90>
   3254c:	b	324f0 <PyInit__decimal@@Base+0x17f70>
   32550:	ldr	x2, [x26, #80]
   32554:	cmp	x1, x2
   32558:	cset	x10, cs  // cs = hs, nlast
   3255c:	add	x10, x10, #0xa
   32560:	b	32128 <PyInit__decimal@@Base+0x17ba8>
   32564:	ldr	x2, [x26, #40]
   32568:	cmp	x1, x2
   3256c:	cset	x10, cs  // cs = hs, nlast
   32570:	add	x10, x10, #0x5
   32574:	b	32128 <PyInit__decimal@@Base+0x17ba8>
   32578:	ldr	x2, [x26, #136]
   3257c:	cmp	x1, x2
   32580:	cset	x10, cs  // cs = hs, nlast
   32584:	add	x10, x10, #0x11
   32588:	b	32128 <PyInit__decimal@@Base+0x17ba8>
   3258c:	mov	x0, x28
   32590:	mov	x3, #0x0                   	// #0
   32594:	mov	x2, #0x1                   	// #1
   32598:	mov	w1, #0x0                   	// #0
   3259c:	bl	26d90 <PyInit__decimal@@Base+0xc810>
   325a0:	b	321f8 <PyInit__decimal@@Base+0x17c78>
   325a4:	ldr	x2, [x3, #48]
   325a8:	cmp	x0, x2
   325ac:	b.cc	3263c <PyInit__decimal@@Base+0x180bc>  // b.lo, b.ul, b.last
   325b0:	ldr	x4, [x3, #64]
   325b4:	mov	x2, #0x8                   	// #8
   325b8:	cmp	x0, x4
   325bc:	b.cs	32070 <PyInit__decimal@@Base+0x17af0>  // b.hs, b.nlast
   325c0:	ldr	x2, [x3, #56]
   325c4:	cmp	x0, x2
   325c8:	cset	x2, cs  // cs = hs, nlast
   325cc:	add	x2, x2, #0x6
   325d0:	b	32070 <PyInit__decimal@@Base+0x17af0>
   325d4:	ldr	x2, [x3, #144]
   325d8:	cmp	x0, x2
   325dc:	b.cs	32614 <PyInit__decimal@@Base+0x18094>  // b.hs, b.nlast
   325e0:	ldr	x2, [x3, #128]
   325e4:	cmp	x0, x2
   325e8:	b.cs	32650 <PyInit__decimal@@Base+0x180d0>  // b.hs, b.nlast
   325ec:	ldr	x2, [x3, #120]
   325f0:	cmp	x0, x2
   325f4:	cset	x2, cs  // cs = hs, nlast
   325f8:	add	x2, x2, #0xe
   325fc:	b	32070 <PyInit__decimal@@Base+0x17af0>
   32600:	ldr	x2, [x3, #24]
   32604:	cmp	x0, x2
   32608:	cset	x2, cs  // cs = hs, nlast
   3260c:	add	x2, x2, #0x2
   32610:	b	32070 <PyInit__decimal@@Base+0x17af0>
   32614:	ldr	x2, [x3, #152]
   32618:	cmp	x0, x2
   3261c:	cset	x2, cs  // cs = hs, nlast
   32620:	add	x2, x2, #0x12
   32624:	b	32070 <PyInit__decimal@@Base+0x17af0>
   32628:	ldr	x2, [x3, #80]
   3262c:	cmp	x0, x2
   32630:	cset	x2, cs  // cs = hs, nlast
   32634:	add	x2, x2, #0x9
   32638:	b	32070 <PyInit__decimal@@Base+0x17af0>
   3263c:	ldr	x2, [x3, #40]
   32640:	cmp	x0, x2
   32644:	cset	x2, cs  // cs = hs, nlast
   32648:	add	x2, x2, #0x4
   3264c:	b	32070 <PyInit__decimal@@Base+0x17af0>
   32650:	ldr	x2, [x3, #136]
   32654:	cmp	x0, x2
   32658:	cset	x2, cs  // cs = hs, nlast
   3265c:	add	x2, x2, #0x10
   32660:	b	32070 <PyInit__decimal@@Base+0x17af0>
   32664:	nop
   32668:	sub	sp, sp, #0x980
   3266c:	stp	x29, x30, [sp]
   32670:	mov	x29, sp
   32674:	stp	x21, x22, [sp, #32]
   32678:	mov	x22, x1
   3267c:	stp	x25, x26, [sp, #64]
   32680:	mov	x25, x0
   32684:	ldrb	w4, [x1]
   32688:	tst	w4, #0xe
   3268c:	b.ne	32ad8 <PyInit__decimal@@Base+0x18558>  // b.any
   32690:	stp	x23, x24, [sp, #48]
   32694:	mov	x23, x2
   32698:	ldr	x2, [x1, #24]
   3269c:	ldr	x4, [x1, #40]
   326a0:	add	x2, x4, x2, lsl #3
   326a4:	ldur	x2, [x2, #-8]
   326a8:	cbz	x2, 32bfc <PyInit__decimal@@Base+0x1867c>
   326ac:	ldr	w2, [x23, #44]
   326b0:	mov	w4, #0x6                   	// #6
   326b4:	ldp	x6, x7, [x23, #32]
   326b8:	stp	x6, x7, [sp, #176]
   326bc:	ldp	x8, x9, [x23]
   326c0:	stp	x19, x20, [sp, #16]
   326c4:	mov	x19, x3
   326c8:	ldp	x6, x7, [x23, #16]
   326cc:	stp	x8, x9, [sp, #144]
   326d0:	add	x20, sp, #0x90
   326d4:	stp	x6, x7, [sp, #160]
   326d8:	str	w4, [sp, #180]
   326dc:	cbz	w2, 32b3c <PyInit__decimal@@Base+0x185bc>
   326e0:	mov	w2, #0x30                  	// #48
   326e4:	mov	x0, #0x40                  	// #64
   326e8:	add	x7, sp, #0x180
   326ec:	add	x6, sp, #0x380
   326f0:	add	x4, sp, #0x580
   326f4:	add	x3, sp, #0x780
   326f8:	strb	w2, [sp, #192]
   326fc:	cmp	x1, x25
   32700:	stp	xzr, xzr, [sp, #200]
   32704:	stp	xzr, x0, [sp, #216]
   32708:	str	x7, [sp, #232]
   3270c:	strb	w2, [sp, #240]
   32710:	stp	xzr, xzr, [sp, #248]
   32714:	stp	xzr, x0, [sp, #264]
   32718:	str	x6, [sp, #280]
   3271c:	strb	w2, [sp, #288]
   32720:	stp	xzr, xzr, [sp, #296]
   32724:	stp	xzr, x0, [sp, #312]
   32728:	str	x4, [sp, #328]
   3272c:	strb	w2, [sp, #336]
   32730:	stp	xzr, xzr, [sp, #344]
   32734:	stp	xzr, x0, [sp, #360]
   32738:	str	x3, [sp, #376]
   3273c:	b.eq	32c38 <PyInit__decimal@@Base+0x186b8>  // b.none
   32740:	stp	x27, x28, [sp, #80]
   32744:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27a80>
   32748:	add	x0, x0, #0x2d0
   3274c:	add	x24, sp, #0x120
   32750:	ldr	x1, [x23]
   32754:	mov	x21, x0
   32758:	ldr	x0, [x0, #72]
   3275c:	str	x0, [sp, #112]
   32760:	add	x0, x1, #0x3
   32764:	add	x28, sp, #0xc0
   32768:	add	x27, sp, #0xf0
   3276c:	add	x26, x20, #0x1c
   32770:	str	x0, [sp, #104]
   32774:	add	x0, sp, #0x8c
   32778:	str	x0, [sp, #120]
   3277c:	str	wzr, [sp, #184]
   32780:	b	3282c <PyInit__decimal@@Base+0x182ac>
   32784:	ldr	x1, [x21, #32]
   32788:	cmp	x0, x1
   3278c:	b.cs	3290c <PyInit__decimal@@Base+0x1838c>  // b.hs, b.nlast
   32790:	ldr	x1, [x21, #16]
   32794:	cmp	x0, x1
   32798:	b.cs	3293c <PyInit__decimal@@Base+0x183bc>  // b.hs, b.nlast
   3279c:	ldr	x1, [x21, #8]
   327a0:	cmp	x0, x1
   327a4:	cset	x7, cs  // cs = hs, nlast
   327a8:	add	x7, x7, #0x1
   327ac:	nop
   327b0:	ldr	x8, [x23]
   327b4:	mov	x4, x26
   327b8:	mov	x3, x20
   327bc:	mov	x2, x24
   327c0:	mov	x1, x25
   327c4:	mov	x0, x28
   327c8:	str	x8, [sp, #144]
   327cc:	str	x7, [sp, #304]
   327d0:	bl	2e488 <PyInit__decimal@@Base+0x13f08>
   327d4:	mov	x0, x27
   327d8:	mov	x4, x26
   327dc:	mov	x3, x20
   327e0:	mov	x2, x24
   327e4:	mov	x1, x25
   327e8:	bl	2e5c0 <PyInit__decimal@@Base+0x14040>
   327ec:	ldrb	w0, [x25]
   327f0:	tst	w0, #0xe
   327f4:	b.ne	32964 <PyInit__decimal@@Base+0x183e4>  // b.any
   327f8:	ldr	x0, [x25, #24]
   327fc:	ldr	x1, [x25, #40]
   32800:	add	x0, x1, x0, lsl #3
   32804:	ldur	x0, [x0, #-8]
   32808:	cbz	x0, 32964 <PyInit__decimal@@Base+0x183e4>
   3280c:	mov	x2, x19
   32810:	mov	x1, x27
   32814:	mov	x0, x28
   32818:	bl	29eb8 <PyInit__decimal@@Base+0xf938>
   3281c:	cbz	w0, 32964 <PyInit__decimal@@Base+0x183e4>
   32820:	ldr	x0, [sp, #104]
   32824:	add	x0, x0, #0x13
   32828:	str	x0, [sp, #104]
   3282c:	ldr	x4, [sp, #104]
   32830:	mov	x2, x20
   32834:	ldr	x3, [sp, #120]
   32838:	mov	x1, x22
   3283c:	mov	x0, x25
   32840:	str	wzr, [sp, #140]
   32844:	str	x4, [sp, #144]
   32848:	bl	31e70 <PyInit__decimal@@Base+0x178f0>
   3284c:	ldp	x1, x0, [x25, #8]
   32850:	ldr	x3, [sp, #144]
   32854:	ldr	w7, [sp, #140]
   32858:	ldr	x2, [sp, #328]
   3285c:	add	x0, x1, x0
   32860:	ldrb	w4, [sp, #288]
   32864:	sub	x0, x0, x3
   32868:	ldr	w3, [x19]
   3286c:	tst	x7, #0x4000
   32870:	csel	x1, x0, x1, eq  // eq = none
   32874:	and	w4, w4, #0xfffffff0
   32878:	orr	w0, w3, w7
   3287c:	str	w0, [x19]
   32880:	strb	w4, [sp, #288]
   32884:	mov	x0, #0x1                   	// #1
   32888:	str	x1, [sp, #296]
   3288c:	stp	x0, xzr, [x2]
   32890:	str	x0, [sp, #312]
   32894:	ldr	x1, [sp, #112]
   32898:	ldr	x0, [x2]
   3289c:	cmp	x0, x1
   328a0:	b.cc	32784 <PyInit__decimal@@Base+0x18204>  // b.lo, b.ul, b.last
   328a4:	ldr	x1, [x21, #112]
   328a8:	cmp	x0, x1
   328ac:	b.cs	328e0 <PyInit__decimal@@Base+0x18360>  // b.hs, b.nlast
   328b0:	ldr	x1, [x21, #88]
   328b4:	cmp	x0, x1
   328b8:	b.cc	32b00 <PyInit__decimal@@Base+0x18580>  // b.lo, b.ul, b.last
   328bc:	ldr	x1, [x21, #104]
   328c0:	mov	x7, #0xe                   	// #14
   328c4:	cmp	x0, x1
   328c8:	b.cs	327b0 <PyInit__decimal@@Base+0x18230>  // b.hs, b.nlast
   328cc:	ldr	x1, [x21, #96]
   328d0:	cmp	x0, x1
   328d4:	cset	x7, cs  // cs = hs, nlast
   328d8:	add	x7, x7, #0xc
   328dc:	b	327b0 <PyInit__decimal@@Base+0x18230>
   328e0:	ldr	x1, [x21, #144]
   328e4:	cmp	x0, x1
   328e8:	b.cs	32950 <PyInit__decimal@@Base+0x183d0>  // b.hs, b.nlast
   328ec:	ldr	x1, [x21, #128]
   328f0:	cmp	x0, x1
   328f4:	b.cs	32b28 <PyInit__decimal@@Base+0x185a8>  // b.hs, b.nlast
   328f8:	ldr	x1, [x21, #120]
   328fc:	cmp	x0, x1
   32900:	cset	x7, cs  // cs = hs, nlast
   32904:	add	x7, x7, #0xf
   32908:	b	327b0 <PyInit__decimal@@Base+0x18230>
   3290c:	ldr	x1, [x21, #48]
   32910:	cmp	x0, x1
   32914:	b.cc	32b14 <PyInit__decimal@@Base+0x18594>  // b.lo, b.ul, b.last
   32918:	ldr	x1, [x21, #64]
   3291c:	mov	x7, #0x9                   	// #9
   32920:	cmp	x0, x1
   32924:	b.cs	327b0 <PyInit__decimal@@Base+0x18230>  // b.hs, b.nlast
   32928:	ldr	x1, [x21, #56]
   3292c:	cmp	x0, x1
   32930:	cset	x7, cs  // cs = hs, nlast
   32934:	add	x7, x7, #0x7
   32938:	b	327b0 <PyInit__decimal@@Base+0x18230>
   3293c:	ldr	x1, [x21, #24]
   32940:	cmp	x0, x1
   32944:	cset	x7, cs  // cs = hs, nlast
   32948:	add	x7, x7, #0x3
   3294c:	b	327b0 <PyInit__decimal@@Base+0x18230>
   32950:	ldr	x1, [x21, #152]
   32954:	cmp	x0, x1
   32958:	cset	x7, cs  // cs = hs, nlast
   3295c:	add	x7, x7, #0x13
   32960:	b	327b0 <PyInit__decimal@@Base+0x18230>
   32964:	ldr	w3, [x23, #40]
   32968:	mov	x2, x19
   3296c:	mov	x1, x20
   32970:	mov	x0, x25
   32974:	str	w3, [sp, #184]
   32978:	bl	2a9f0 <PyInit__decimal@@Base+0x10470>
   3297c:	ldp	x2, x0, [x25, #8]
   32980:	ldr	x1, [sp, #160]
   32984:	add	x0, x2, x0
   32988:	sub	x0, x0, #0x1
   3298c:	cmp	x1, x0
   32990:	b.le	329d8 <PyInit__decimal@@Base+0x18458>
   32994:	ldrb	w0, [x25]
   32998:	tst	w0, #0xe
   3299c:	b.ne	329b4 <PyInit__decimal@@Base+0x18434>  // b.any
   329a0:	ldr	x0, [x25, #24]
   329a4:	ldr	x3, [x25, #40]
   329a8:	add	x0, x3, x0, lsl #3
   329ac:	ldur	x0, [x0, #-8]
   329b0:	cbz	x0, 329d8 <PyInit__decimal@@Base+0x18458>
   329b4:	ldr	x0, [sp, #144]
   329b8:	add	x1, x1, #0x1
   329bc:	sub	x1, x1, x0
   329c0:	cmp	x2, x1
   329c4:	b.ge	329d8 <PyInit__decimal@@Base+0x18458>  // b.tcont
   329c8:	ldr	w0, [x19]
   329cc:	orr	w0, w0, #0x4000
   329d0:	str	w0, [x19]
   329d4:	nop
   329d8:	mov	x0, x25
   329dc:	mov	x2, x19
   329e0:	mov	x1, x20
   329e4:	bl	2b110 <PyInit__decimal@@Base+0x10b90>
   329e8:	ldrb	w0, [sp, #192]
   329ec:	tst	w0, #0xe0
   329f0:	b.ne	32a08 <PyInit__decimal@@Base+0x18488>  // b.any
   329f4:	adrp	x1, 5f000 <PyInit__decimal@@Base+0x44a80>
   329f8:	ldr	x0, [sp, #232]
   329fc:	ldr	x1, [x1, #1704]
   32a00:	blr	x1
   32a04:	ldrb	w0, [sp, #192]
   32a08:	tbnz	w0, #4, 32a1c <PyInit__decimal@@Base+0x1849c>
   32a0c:	adrp	x1, 5f000 <PyInit__decimal@@Base+0x44a80>
   32a10:	mov	x0, x28
   32a14:	ldr	x1, [x1, #1704]
   32a18:	blr	x1
   32a1c:	ldrb	w0, [sp, #240]
   32a20:	tst	w0, #0xe0
   32a24:	b.ne	32a3c <PyInit__decimal@@Base+0x184bc>  // b.any
   32a28:	adrp	x1, 5f000 <PyInit__decimal@@Base+0x44a80>
   32a2c:	ldr	x0, [sp, #280]
   32a30:	ldr	x1, [x1, #1704]
   32a34:	blr	x1
   32a38:	ldrb	w0, [sp, #240]
   32a3c:	tbnz	w0, #4, 32a50 <PyInit__decimal@@Base+0x184d0>
   32a40:	adrp	x1, 5f000 <PyInit__decimal@@Base+0x44a80>
   32a44:	mov	x0, x27
   32a48:	ldr	x1, [x1, #1704]
   32a4c:	blr	x1
   32a50:	ldrb	w0, [sp, #288]
   32a54:	tst	w0, #0xe0
   32a58:	b.ne	32a70 <PyInit__decimal@@Base+0x184f0>  // b.any
   32a5c:	adrp	x1, 5f000 <PyInit__decimal@@Base+0x44a80>
   32a60:	ldr	x0, [sp, #328]
   32a64:	ldr	x1, [x1, #1704]
   32a68:	blr	x1
   32a6c:	ldrb	w0, [sp, #288]
   32a70:	tbnz	w0, #4, 32a84 <PyInit__decimal@@Base+0x18504>
   32a74:	adrp	x1, 5f000 <PyInit__decimal@@Base+0x44a80>
   32a78:	mov	x0, x24
   32a7c:	ldr	x1, [x1, #1704]
   32a80:	blr	x1
   32a84:	ldrb	w0, [sp, #336]
   32a88:	tst	w0, #0xe0
   32a8c:	b.ne	32aa4 <PyInit__decimal@@Base+0x18524>  // b.any
   32a90:	adrp	x1, 5f000 <PyInit__decimal@@Base+0x44a80>
   32a94:	ldr	x0, [sp, #376]
   32a98:	ldr	x1, [x1, #1704]
   32a9c:	blr	x1
   32aa0:	ldrb	w0, [sp, #336]
   32aa4:	tbnz	w0, #4, 32bb8 <PyInit__decimal@@Base+0x18638>
   32aa8:	adrp	x1, 5f000 <PyInit__decimal@@Base+0x44a80>
   32aac:	add	x0, sp, #0x150
   32ab0:	ldr	x1, [x1, #1704]
   32ab4:	blr	x1
   32ab8:	ldp	x19, x20, [sp, #16]
   32abc:	ldp	x23, x24, [sp, #48]
   32ac0:	ldp	x27, x28, [sp, #80]
   32ac4:	ldp	x29, x30, [sp]
   32ac8:	ldp	x21, x22, [sp, #32]
   32acc:	ldp	x25, x26, [sp, #64]
   32ad0:	add	sp, sp, #0x980
   32ad4:	ret
   32ad8:	bl	29098 <PyInit__decimal@@Base+0xeb18>
   32adc:	cbnz	w0, 32ac4 <PyInit__decimal@@Base+0x18544>
   32ae0:	ldrb	w0, [x22]
   32ae4:	tbz	w0, #0, 32c24 <PyInit__decimal@@Base+0x186a4>
   32ae8:	mov	x0, x25
   32aec:	mov	x3, #0x0                   	// #0
   32af0:	mov	x2, #0x0                   	// #0
   32af4:	mov	w1, #0x0                   	// #0
   32af8:	bl	26d90 <PyInit__decimal@@Base+0xc810>
   32afc:	b	32ac4 <PyInit__decimal@@Base+0x18544>
   32b00:	ldr	x1, [x21, #80]
   32b04:	cmp	x0, x1
   32b08:	cset	x7, cs  // cs = hs, nlast
   32b0c:	add	x7, x7, #0xa
   32b10:	b	327b0 <PyInit__decimal@@Base+0x18230>
   32b14:	ldr	x1, [x21, #40]
   32b18:	cmp	x0, x1
   32b1c:	cset	x7, cs  // cs = hs, nlast
   32b20:	add	x7, x7, #0x5
   32b24:	b	327b0 <PyInit__decimal@@Base+0x18230>
   32b28:	ldr	x1, [x21, #136]
   32b2c:	cmp	x0, x1
   32b30:	cset	x7, cs  // cs = hs, nlast
   32b34:	add	x7, x7, #0x11
   32b38:	b	327b0 <PyInit__decimal@@Base+0x18230>
   32b3c:	mov	x2, x20
   32b40:	bl	31e70 <PyInit__decimal@@Base+0x178f0>
   32b44:	mov	x2, x19
   32b48:	mov	x1, x20
   32b4c:	mov	x0, x25
   32b50:	bl	2a9f0 <PyInit__decimal@@Base+0x10470>
   32b54:	ldp	x2, x0, [x25, #8]
   32b58:	ldr	x1, [sp, #160]
   32b5c:	add	x0, x2, x0
   32b60:	sub	x0, x0, #0x1
   32b64:	cmp	x1, x0
   32b68:	b.le	32b8c <PyInit__decimal@@Base+0x1860c>
   32b6c:	ldrb	w0, [x25]
   32b70:	tst	w0, #0xe
   32b74:	b.ne	32bd8 <PyInit__decimal@@Base+0x18658>  // b.any
   32b78:	ldr	x0, [x25, #24]
   32b7c:	ldr	x3, [x25, #40]
   32b80:	add	x0, x3, x0, lsl #3
   32b84:	ldur	x0, [x0, #-8]
   32b88:	cbnz	x0, 32bd8 <PyInit__decimal@@Base+0x18658>
   32b8c:	mov	x2, x19
   32b90:	mov	x1, x20
   32b94:	mov	x0, x25
   32b98:	bl	2b110 <PyInit__decimal@@Base+0x10b90>
   32b9c:	ldp	x29, x30, [sp]
   32ba0:	ldp	x19, x20, [sp, #16]
   32ba4:	ldp	x21, x22, [sp, #32]
   32ba8:	ldp	x23, x24, [sp, #48]
   32bac:	ldp	x25, x26, [sp, #64]
   32bb0:	add	sp, sp, #0x980
   32bb4:	ret
   32bb8:	ldp	x29, x30, [sp]
   32bbc:	ldp	x19, x20, [sp, #16]
   32bc0:	ldp	x21, x22, [sp, #32]
   32bc4:	ldp	x23, x24, [sp, #48]
   32bc8:	ldp	x25, x26, [sp, #64]
   32bcc:	ldp	x27, x28, [sp, #80]
   32bd0:	add	sp, sp, #0x980
   32bd4:	ret
   32bd8:	ldr	x3, [sp, #144]
   32bdc:	add	x0, x1, #0x1
   32be0:	sub	x0, x0, x3
   32be4:	cmp	x2, x0
   32be8:	b.ge	32b8c <PyInit__decimal@@Base+0x1860c>  // b.tcont
   32bec:	ldr	w0, [x19]
   32bf0:	orr	w0, w0, #0x4000
   32bf4:	str	w0, [x19]
   32bf8:	b	32b8c <PyInit__decimal@@Base+0x1860c>
   32bfc:	mov	x3, #0x0                   	// #0
   32c00:	mov	x2, #0x1                   	// #1
   32c04:	mov	w1, #0x0                   	// #0
   32c08:	bl	26d90 <PyInit__decimal@@Base+0xc810>
   32c0c:	ldp	x29, x30, [sp]
   32c10:	ldp	x21, x22, [sp, #32]
   32c14:	ldp	x23, x24, [sp, #48]
   32c18:	ldp	x25, x26, [sp, #64]
   32c1c:	add	sp, sp, #0x980
   32c20:	ret
   32c24:	mov	x0, x25
   32c28:	mov	w2, #0x2                   	// #2
   32c2c:	mov	w1, #0x0                   	// #0
   32c30:	bl	28cd8 <PyInit__decimal@@Base+0xe758>
   32c34:	b	32ac4 <PyInit__decimal@@Base+0x18544>
   32c38:	add	x21, sp, #0x150
   32c3c:	mov	x2, x19
   32c40:	mov	x0, x21
   32c44:	bl	28fe0 <PyInit__decimal@@Base+0xea60>
   32c48:	cbz	w0, 32c58 <PyInit__decimal@@Base+0x186d8>
   32c4c:	mov	x22, x21
   32c50:	stp	x27, x28, [sp, #80]
   32c54:	b	32744 <PyInit__decimal@@Base+0x181c4>
   32c58:	mov	x2, x19
   32c5c:	mov	x0, x22
   32c60:	mov	w1, #0x200                 	// #512
   32c64:	bl	28d68 <PyInit__decimal@@Base+0xe7e8>
   32c68:	ldp	x19, x20, [sp, #16]
   32c6c:	ldp	x23, x24, [sp, #48]
   32c70:	b	32ac4 <PyInit__decimal@@Base+0x18544>
   32c74:	nop
   32c78:	sub	sp, sp, #0x530
   32c7c:	mov	x3, #0x4c0                 	// #1216
   32c80:	add	x5, sp, #0x130
   32c84:	subs	x3, x3, x1
   32c88:	add	x4, sp, #0x68
   32c8c:	mov	w9, #0x30                  	// #48
   32c90:	stp	x29, x30, [sp]
   32c94:	mov	x8, #0x40                  	// #64
   32c98:	mov	x29, sp
   32c9c:	mov	x10, #0xa                   	// #10
   32ca0:	mov	w7, #0xffffff90            	// #-112
   32ca4:	mov	x6, #0x2                   	// #2
   32ca8:	stp	x21, x22, [sp, #32]
   32cac:	mov	x22, x2
   32cb0:	mov	x21, #0x1                   	// #1
   32cb4:	stp	x25, x26, [sp, #64]
   32cb8:	mov	x25, x1
   32cbc:	adrp	x26, 5c000 <PyInit__decimal@@Base+0x41a80>
   32cc0:	add	x1, x26, #0xc58
   32cc4:	csel	x2, x3, xzr, pl  // pl = nfrst
   32cc8:	add	x1, x1, #0x90
   32ccc:	mov	x3, x22
   32cd0:	stp	x19, x20, [sp, #16]
   32cd4:	mov	x19, x0
   32cd8:	str	x10, [sp, #104]
   32cdc:	strb	w9, [sp, #208]
   32ce0:	stp	xzr, xzr, [sp, #216]
   32ce4:	stp	xzr, x8, [sp, #232]
   32ce8:	str	x5, [sp, #248]
   32cec:	strb	w7, [sp, #256]
   32cf0:	stp	xzr, x6, [sp, #264]
   32cf4:	stp	x21, x21, [sp, #280]
   32cf8:	str	x4, [sp, #296]
   32cfc:	bl	2bf80 <PyInit__decimal@@Base+0x11a00>
   32d00:	cmn	x0, #0x1
   32d04:	b.eq	32f98 <PyInit__decimal@@Base+0x18a18>  // b.none
   32d08:	ldr	x1, [x19, #16]
   32d0c:	stp	x23, x24, [sp, #48]
   32d10:	add	x24, sp, #0xa0
   32d14:	sub	x1, x21, x1
   32d18:	str	x1, [x19, #8]
   32d1c:	mov	x20, x0
   32d20:	mov	x0, x24
   32d24:	bl	1d4d0 <PyInit__decimal@@Base+0x2f50>
   32d28:	cmp	x25, #0x4bf
   32d2c:	b.le	32ec0 <PyInit__decimal@@Base+0x18940>
   32d30:	add	x23, sp, #0x70
   32d34:	mov	x0, x23
   32d38:	bl	1d4d0 <PyInit__decimal@@Base+0x2f50>
   32d3c:	ldr	x2, [x19, #8]
   32d40:	mov	w0, #0x8                   	// #8
   32d44:	str	w0, [sp, #148]
   32d48:	add	x3, x25, #0x2
   32d4c:	neg	x2, x2
   32d50:	cmp	x3, x2
   32d54:	b.le	32e58 <PyInit__decimal@@Base+0x188d8>
   32d58:	add	x1, sp, #0x330
   32d5c:	mov	w0, #0x0                   	// #0
   32d60:	stp	x27, x28, [sp, #80]
   32d64:	nop
   32d68:	add	x3, x3, #0x2
   32d6c:	mov	w20, w0
   32d70:	add	w0, w0, #0x1
   32d74:	add	x3, x3, x3, lsr #63
   32d78:	add	x28, x1, w20, sxtw #3
   32d7c:	asr	x3, x3, #1
   32d80:	str	x3, [x1, w20, sxtw #3]
   32d84:	cmp	x2, x3
   32d88:	b.lt	32d68 <PyInit__decimal@@Base+0x187e8>  // b.tstop
   32d8c:	tbnz	w20, #31, 32e54 <PyInit__decimal@@Base+0x188d4>
   32d90:	add	x26, x26, #0xc58
   32d94:	ldrb	w0, [x19]
   32d98:	add	x26, x26, #0x60
   32d9c:	add	x21, sp, #0xd0
   32da0:	add	x27, sp, #0x100
   32da4:	b	32db0 <PyInit__decimal@@Base+0x18830>
   32da8:	cmn	w20, #0x1
   32dac:	b.eq	32e54 <PyInit__decimal@@Base+0x188d4>  // b.none
   32db0:	ldr	x4, [x28]
   32db4:	eor	w0, w0, #0x1
   32db8:	strb	w0, [x19]
   32dbc:	mov	x3, x22
   32dc0:	mov	x2, x23
   32dc4:	mov	x1, x19
   32dc8:	lsl	x4, x4, #1
   32dcc:	mov	x0, x21
   32dd0:	add	x4, x4, #0x3
   32dd4:	str	x4, [sp, #112]
   32dd8:	sub	w20, w20, #0x1
   32ddc:	sub	x28, x28, #0x8
   32de0:	bl	31e70 <PyInit__decimal@@Base+0x178f0>
   32de4:	ldrb	w0, [x19]
   32de8:	mov	x4, x22
   32dec:	mov	x3, x23
   32df0:	mov	x2, x21
   32df4:	eor	w0, w0, #0x1
   32df8:	strb	w0, [x19]
   32dfc:	mov	x1, x27
   32e00:	mov	x0, x21
   32e04:	bl	291b8 <PyInit__decimal@@Base+0xec38>
   32e08:	mov	x2, x22
   32e0c:	mov	x1, x23
   32e10:	mov	x0, x21
   32e14:	bl	2b110 <PyInit__decimal@@Base+0x10b90>
   32e18:	mov	x4, x22
   32e1c:	mov	x3, x24
   32e20:	mov	x2, x26
   32e24:	mov	x1, x21
   32e28:	mov	x0, x21
   32e2c:	bl	2e5c0 <PyInit__decimal@@Base+0x14040>
   32e30:	mov	x0, x19
   32e34:	mov	x4, x22
   32e38:	mov	x3, x24
   32e3c:	mov	x2, x21
   32e40:	mov	x1, x19
   32e44:	bl	2e488 <PyInit__decimal@@Base+0x13f08>
   32e48:	ldrb	w0, [x19]
   32e4c:	tst	w0, #0xe
   32e50:	b.eq	32da8 <PyInit__decimal@@Base+0x18828>  // b.none
   32e54:	ldp	x27, x28, [sp, #80]
   32e58:	ldrb	w0, [sp, #208]
   32e5c:	tst	w0, #0xe0
   32e60:	b.ne	32e78 <PyInit__decimal@@Base+0x188f8>  // b.any
   32e64:	adrp	x1, 5f000 <PyInit__decimal@@Base+0x44a80>
   32e68:	ldr	x0, [sp, #248]
   32e6c:	ldr	x1, [x1, #1704]
   32e70:	blr	x1
   32e74:	ldrb	w0, [sp, #208]
   32e78:	tbz	w0, #4, 32eac <PyInit__decimal@@Base+0x1892c>
   32e7c:	mov	x2, x22
   32e80:	mov	x1, x24
   32e84:	mov	x0, x19
   32e88:	str	x25, [sp, #160]
   32e8c:	bl	2b110 <PyInit__decimal@@Base+0x10b90>
   32e90:	ldp	x29, x30, [sp]
   32e94:	ldp	x19, x20, [sp, #16]
   32e98:	ldp	x21, x22, [sp, #32]
   32e9c:	ldp	x23, x24, [sp, #48]
   32ea0:	ldp	x25, x26, [sp, #64]
   32ea4:	add	sp, sp, #0x530
   32ea8:	ret
   32eac:	adrp	x1, 5f000 <PyInit__decimal@@Base+0x44a80>
   32eb0:	add	x0, sp, #0xd0
   32eb4:	ldr	x1, [x1, #1704]
   32eb8:	blr	x1
   32ebc:	b	32e7c <PyInit__decimal@@Base+0x188fc>
   32ec0:	ldr	w0, [sp, #196]
   32ec4:	str	x25, [sp, #160]
   32ec8:	cmp	w0, #0x4
   32ecc:	b.eq	330fc <PyInit__decimal@@Base+0x18b7c>  // b.none
   32ed0:	b.gt	32f28 <PyInit__decimal@@Base+0x189a8>
   32ed4:	cmp	w0, #0x2
   32ed8:	b.eq	33098 <PyInit__decimal@@Base+0x18b18>  // b.none
   32edc:	cmp	w0, #0x3
   32ee0:	b.ne	32f84 <PyInit__decimal@@Base+0x18a04>  // b.any
   32ee4:	cbz	x20, 32efc <PyInit__decimal@@Base+0x1897c>
   32ee8:	ldrb	w0, [x19]
   32eec:	mvn	w0, w0
   32ef0:	and	w0, w0, #0x1
   32ef4:	sub	w21, w21, w0
   32ef8:	cbnz	w21, 32fc0 <PyInit__decimal@@Base+0x18a40>
   32efc:	ldr	w0, [x22]
   32f00:	mov	w1, #0x1040                	// #4160
   32f04:	ldp	x23, x24, [sp, #48]
   32f08:	orr	w0, w0, w1
   32f0c:	str	w0, [x22]
   32f10:	ldp	x29, x30, [sp]
   32f14:	ldp	x19, x20, [sp, #16]
   32f18:	ldp	x21, x22, [sp, #32]
   32f1c:	ldp	x25, x26, [sp, #64]
   32f20:	add	sp, sp, #0x530
   32f24:	ret
   32f28:	cmp	w0, #0x6
   32f2c:	b.eq	330b0 <PyInit__decimal@@Base+0x18b30>  // b.none
   32f30:	cmp	w0, #0x7
   32f34:	b.ne	32f6c <PyInit__decimal@@Base+0x189ec>  // b.any
   32f38:	cbz	x20, 32efc <PyInit__decimal@@Base+0x1897c>
   32f3c:	ldr	x0, [x19, #40]
   32f40:	mov	x1, #0xcccccccccccccccc    	// #-3689348814741910324
   32f44:	movk	x1, #0xcccd
   32f48:	ldr	x2, [x0]
   32f4c:	umulh	x1, x2, x1
   32f50:	lsr	x1, x1, #3
   32f54:	add	x1, x1, x1, lsl #2
   32f58:	sub	x1, x2, x1, lsl #1
   32f5c:	cmp	w1, #0x0
   32f60:	ccmp	w1, #0x5, #0x4, ne  // ne = any
   32f64:	b.eq	32fc4 <PyInit__decimal@@Base+0x18a44>  // b.none
   32f68:	b	32efc <PyInit__decimal@@Base+0x1897c>
   32f6c:	cmp	x20, #0x5
   32f70:	cset	w21, hi  // hi = pmore
   32f74:	cmp	w0, #0x5
   32f78:	b.ne	32efc <PyInit__decimal@@Base+0x1897c>  // b.any
   32f7c:	cbz	w21, 32efc <PyInit__decimal@@Base+0x1897c>
   32f80:	b	32fc0 <PyInit__decimal@@Base+0x18a40>
   32f84:	cmp	x20, #0x0
   32f88:	cset	w21, ne  // ne = any
   32f8c:	cbnz	w0, 32efc <PyInit__decimal@@Base+0x1897c>
   32f90:	cbz	w21, 32efc <PyInit__decimal@@Base+0x1897c>
   32f94:	b	32fc0 <PyInit__decimal@@Base+0x18a40>
   32f98:	mov	x2, x22
   32f9c:	mov	x0, x19
   32fa0:	mov	w1, #0x200                 	// #512
   32fa4:	bl	28d68 <PyInit__decimal@@Base+0xe7e8>
   32fa8:	ldp	x29, x30, [sp]
   32fac:	ldp	x19, x20, [sp, #16]
   32fb0:	ldp	x21, x22, [sp, #32]
   32fb4:	ldp	x25, x26, [sp, #64]
   32fb8:	add	sp, sp, #0x530
   32fbc:	ret
   32fc0:	ldr	x0, [x19, #40]
   32fc4:	ldr	x1, [x19, #24]
   32fc8:	bl	1b3b8 <PyInit__decimal@@Base+0xe38>
   32fcc:	cbz	x0, 3310c <PyInit__decimal@@Base+0x18b8c>
   32fd0:	ldp	x2, x3, [x19, #24]
   32fd4:	adrp	x0, 5f000 <PyInit__decimal@@Base+0x44a80>
   32fd8:	ldr	x1, [x0, #1672]
   32fdc:	add	x0, x2, #0x1
   32fe0:	cmp	x0, x1
   32fe4:	csel	x1, x0, x1, ge  // ge = tcont
   32fe8:	cmp	x1, x3
   32fec:	b.eq	33014 <PyInit__decimal@@Base+0x18a94>  // b.none
   32ff0:	ldrb	w0, [x19]
   32ff4:	tbz	w0, #5, 33178 <PyInit__decimal@@Base+0x18bf8>
   32ff8:	cmp	x1, x3
   32ffc:	b.le	33014 <PyInit__decimal@@Base+0x18a94>
   33000:	mov	x2, x22
   33004:	mov	x0, x19
   33008:	bl	25438 <PyInit__decimal@@Base+0xaeb8>
   3300c:	cbz	w0, 32efc <PyInit__decimal@@Base+0x1897c>
   33010:	ldr	x2, [x19, #24]
   33014:	mov	x0, #0x1                   	// #1
   33018:	ldr	x1, [x19, #40]
   3301c:	str	x0, [x1, x2, lsl #3]
   33020:	ldr	x2, [x19, #24]
   33024:	add	x0, x2, x0
   33028:	str	x0, [x19, #24]
   3302c:	add	x1, x1, x0, lsl #3
   33030:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27a80>
   33034:	add	x0, x0, #0x2d0
   33038:	ldur	x1, [x1, #-8]
   3303c:	ldr	x3, [x0, #72]
   33040:	cmp	x1, x3
   33044:	b.cc	330d0 <PyInit__decimal@@Base+0x18b50>  // b.lo, b.ul, b.last
   33048:	ldr	x3, [x0, #112]
   3304c:	cmp	x1, x3
   33050:	b.cs	3314c <PyInit__decimal@@Base+0x18bcc>  // b.hs, b.nlast
   33054:	ldr	x3, [x0, #88]
   33058:	cmp	x1, x3
   3305c:	b.cc	331c4 <PyInit__decimal@@Base+0x18c44>  // b.lo, b.ul, b.last
   33060:	ldr	x4, [x0, #104]
   33064:	mov	x3, #0xe                   	// #14
   33068:	cmp	x1, x4
   3306c:	b.cs	33080 <PyInit__decimal@@Base+0x18b00>  // b.hs, b.nlast
   33070:	ldr	x0, [x0, #96]
   33074:	cmp	x1, x0
   33078:	cset	x3, cs  // cs = hs, nlast
   3307c:	add	x3, x3, #0xc
   33080:	add	x0, x2, x2, lsl #2
   33084:	lsl	x0, x0, #2
   33088:	sub	x0, x0, x2
   3308c:	add	x0, x0, x3
   33090:	str	x0, [x19, #16]
   33094:	b	32efc <PyInit__decimal@@Base+0x1897c>
   33098:	cbz	x20, 32efc <PyInit__decimal@@Base+0x1897c>
   3309c:	ldrb	w0, [x19]
   330a0:	and	w0, w0, #0x1
   330a4:	sub	w21, w21, w0
   330a8:	cbz	w21, 32efc <PyInit__decimal@@Base+0x1897c>
   330ac:	b	32fc0 <PyInit__decimal@@Base+0x18a40>
   330b0:	cmp	x20, #0x5
   330b4:	b.hi	32fc0 <PyInit__decimal@@Base+0x18a40>  // b.pmore
   330b8:	b.ne	32efc <PyInit__decimal@@Base+0x1897c>  // b.any
   330bc:	ldr	x0, [x19, #40]
   330c0:	ldr	x21, [x0]
   330c4:	and	w21, w21, #0x1
   330c8:	cbz	w21, 32efc <PyInit__decimal@@Base+0x1897c>
   330cc:	b	32fc0 <PyInit__decimal@@Base+0x18a40>
   330d0:	ldr	x3, [x0, #32]
   330d4:	cmp	x1, x3
   330d8:	b.cs	3311c <PyInit__decimal@@Base+0x18b9c>  // b.hs, b.nlast
   330dc:	ldr	x3, [x0, #16]
   330e0:	cmp	x1, x3
   330e4:	b.cs	33188 <PyInit__decimal@@Base+0x18c08>  // b.hs, b.nlast
   330e8:	ldr	x0, [x0, #8]
   330ec:	cmp	x1, x0
   330f0:	cset	x3, cs  // cs = hs, nlast
   330f4:	add	x3, x3, #0x1
   330f8:	b	33080 <PyInit__decimal@@Base+0x18b00>
   330fc:	cmp	x20, #0x4
   33100:	cset	w21, hi  // hi = pmore
   33104:	cbz	w21, 32efc <PyInit__decimal@@Base+0x1897c>
   33108:	b	32fc0 <PyInit__decimal@@Base+0x18a40>
   3310c:	ldr	x0, [x19, #24]
   33110:	ldr	x1, [x19, #40]
   33114:	sub	x2, x0, #0x1
   33118:	b	3302c <PyInit__decimal@@Base+0x18aac>
   3311c:	ldr	x3, [x0, #48]
   33120:	cmp	x1, x3
   33124:	b.cc	331b0 <PyInit__decimal@@Base+0x18c30>  // b.lo, b.ul, b.last
   33128:	ldr	x4, [x0, #64]
   3312c:	mov	x3, #0x9                   	// #9
   33130:	cmp	x1, x4
   33134:	b.cs	33080 <PyInit__decimal@@Base+0x18b00>  // b.hs, b.nlast
   33138:	ldr	x0, [x0, #56]
   3313c:	cmp	x1, x0
   33140:	cset	x3, cs  // cs = hs, nlast
   33144:	add	x3, x3, #0x7
   33148:	b	33080 <PyInit__decimal@@Base+0x18b00>
   3314c:	ldr	x3, [x0, #144]
   33150:	cmp	x1, x3
   33154:	b.cs	3319c <PyInit__decimal@@Base+0x18c1c>  // b.hs, b.nlast
   33158:	ldr	x3, [x0, #128]
   3315c:	cmp	x1, x3
   33160:	b.cs	331d8 <PyInit__decimal@@Base+0x18c58>  // b.hs, b.nlast
   33164:	ldr	x0, [x0, #120]
   33168:	cmp	x1, x0
   3316c:	cset	x3, cs  // cs = hs, nlast
   33170:	add	x3, x3, #0xf
   33174:	b	33080 <PyInit__decimal@@Base+0x18b00>
   33178:	mov	x2, x22
   3317c:	mov	x0, x19
   33180:	bl	25588 <PyInit__decimal@@Base+0xb008>
   33184:	b	3300c <PyInit__decimal@@Base+0x18a8c>
   33188:	ldr	x0, [x0, #24]
   3318c:	cmp	x1, x0
   33190:	cset	x3, cs  // cs = hs, nlast
   33194:	add	x3, x3, #0x3
   33198:	b	33080 <PyInit__decimal@@Base+0x18b00>
   3319c:	ldr	x0, [x0, #152]
   331a0:	cmp	x1, x0
   331a4:	cset	x3, cs  // cs = hs, nlast
   331a8:	add	x3, x3, #0x13
   331ac:	b	33080 <PyInit__decimal@@Base+0x18b00>
   331b0:	ldr	x0, [x0, #40]
   331b4:	cmp	x1, x0
   331b8:	cset	x3, cs  // cs = hs, nlast
   331bc:	add	x3, x3, #0x5
   331c0:	b	33080 <PyInit__decimal@@Base+0x18b00>
   331c4:	ldr	x0, [x0, #80]
   331c8:	cmp	x1, x0
   331cc:	cset	x3, cs  // cs = hs, nlast
   331d0:	add	x3, x3, #0xa
   331d4:	b	33080 <PyInit__decimal@@Base+0x18b00>
   331d8:	ldr	x0, [x0, #136]
   331dc:	cmp	x1, x0
   331e0:	cset	x3, cs  // cs = hs, nlast
   331e4:	add	x3, x3, #0x11
   331e8:	b	33080 <PyInit__decimal@@Base+0x18b00>
   331ec:	nop
   331f0:	stp	x29, x30, [sp, #-64]!
   331f4:	mov	x29, sp
   331f8:	stp	x19, x20, [sp, #16]
   331fc:	mov	x19, x1
   33200:	mov	x20, x2
   33204:	stp	x21, x22, [sp, #32]
   33208:	mov	x21, x0
   3320c:	mov	x22, x4
   33210:	str	x23, [sp, #48]
   33214:	mov	x23, x3
   33218:	ldrb	w0, [x1]
   3321c:	ldrb	w1, [x2]
   33220:	tbz	w0, #2, 3322c <PyInit__decimal@@Base+0x18cac>
   33224:	tst	w1, #0xc
   33228:	b.eq	332c8 <PyInit__decimal@@Base+0x18d48>  // b.none
   3322c:	tbz	w1, #2, 33238 <PyInit__decimal@@Base+0x18cb8>
   33230:	tst	w0, #0xc
   33234:	b.eq	33298 <PyInit__decimal@@Base+0x18d18>  // b.none
   33238:	mov	x4, x22
   3323c:	mov	x3, x23
   33240:	mov	x2, x20
   33244:	mov	x1, x19
   33248:	mov	x0, x21
   3324c:	bl	29108 <PyInit__decimal@@Base+0xeb88>
   33250:	cbz	w0, 33268 <PyInit__decimal@@Base+0x18ce8>
   33254:	ldp	x19, x20, [sp, #16]
   33258:	ldp	x21, x22, [sp, #32]
   3325c:	ldr	x23, [sp, #48]
   33260:	ldp	x29, x30, [sp], #64
   33264:	ret
   33268:	mov	x1, x20
   3326c:	mov	x0, x19
   33270:	bl	26c80 <PyInit__decimal@@Base+0xc700>
   33274:	cbnz	w0, 33294 <PyInit__decimal@@Base+0x18d14>
   33278:	ldrb	w1, [x19]
   3327c:	ldrb	w0, [x20]
   33280:	and	w1, w1, #0x1
   33284:	and	w0, w0, #0x1
   33288:	cmp	w1, w0
   3328c:	b.eq	332f8 <PyInit__decimal@@Base+0x18d78>  // b.none
   33290:	sub	w0, w0, w1
   33294:	tbnz	w0, #31, 332c8 <PyInit__decimal@@Base+0x18d48>
   33298:	mov	x1, x19
   3329c:	mov	x2, x22
   332a0:	mov	x0, x21
   332a4:	bl	28fe0 <PyInit__decimal@@Base+0xea60>
   332a8:	mov	x2, x22
   332ac:	mov	x1, x23
   332b0:	mov	x0, x21
   332b4:	ldp	x19, x20, [sp, #16]
   332b8:	ldp	x21, x22, [sp, #32]
   332bc:	ldr	x23, [sp, #48]
   332c0:	ldp	x29, x30, [sp], #64
   332c4:	b	2b110 <PyInit__decimal@@Base+0x10b90>
   332c8:	mov	x1, x20
   332cc:	mov	x2, x22
   332d0:	mov	x0, x21
   332d4:	bl	28fe0 <PyInit__decimal@@Base+0xea60>
   332d8:	mov	x2, x22
   332dc:	mov	x1, x23
   332e0:	mov	x0, x21
   332e4:	ldp	x19, x20, [sp, #16]
   332e8:	ldp	x21, x22, [sp, #32]
   332ec:	ldr	x23, [sp, #48]
   332f0:	ldp	x29, x30, [sp], #64
   332f4:	b	2b110 <PyInit__decimal@@Base+0x10b90>
   332f8:	ldr	x3, [x19, #8]
   332fc:	neg	w0, w1
   33300:	ldr	x2, [x20, #8]
   33304:	lsl	w1, w0, #1
   33308:	mov	w0, #0x1                   	// #1
   3330c:	cmp	x3, x2
   33310:	cneg	w0, w0, lt  // lt = tstop
   33314:	madd	w0, w1, w0, w0
   33318:	tbz	w0, #31, 33298 <PyInit__decimal@@Base+0x18d18>
   3331c:	b	332c8 <PyInit__decimal@@Base+0x18d48>
   33320:	stp	x29, x30, [sp, #-64]!
   33324:	mov	x29, sp
   33328:	stp	x19, x20, [sp, #16]
   3332c:	mov	x19, x1
   33330:	mov	x20, x2
   33334:	stp	x21, x22, [sp, #32]
   33338:	mov	x21, x0
   3333c:	mov	x22, x4
   33340:	str	x23, [sp, #48]
   33344:	mov	x23, x3
   33348:	ldrb	w0, [x1]
   3334c:	ldrb	w1, [x2]
   33350:	tbz	w0, #2, 3335c <PyInit__decimal@@Base+0x18ddc>
   33354:	tst	w1, #0xc
   33358:	b.eq	333f8 <PyInit__decimal@@Base+0x18e78>  // b.none
   3335c:	tbz	w1, #2, 33368 <PyInit__decimal@@Base+0x18de8>
   33360:	tst	w0, #0xc
   33364:	b.eq	333c8 <PyInit__decimal@@Base+0x18e48>  // b.none
   33368:	mov	x4, x22
   3336c:	mov	x3, x23
   33370:	mov	x2, x20
   33374:	mov	x1, x19
   33378:	mov	x0, x21
   3337c:	bl	29108 <PyInit__decimal@@Base+0xeb88>
   33380:	cbz	w0, 33398 <PyInit__decimal@@Base+0x18e18>
   33384:	ldp	x19, x20, [sp, #16]
   33388:	ldp	x21, x22, [sp, #32]
   3338c:	ldr	x23, [sp, #48]
   33390:	ldp	x29, x30, [sp], #64
   33394:	ret
   33398:	mov	x1, x20
   3339c:	mov	x0, x19
   333a0:	bl	26bd8 <PyInit__decimal@@Base+0xc658>
   333a4:	cbnz	w0, 333c4 <PyInit__decimal@@Base+0x18e44>
   333a8:	ldrb	w1, [x19]
   333ac:	ldrb	w0, [x20]
   333b0:	and	w1, w1, #0x1
   333b4:	and	w0, w0, #0x1
   333b8:	cmp	w1, w0
   333bc:	b.eq	33428 <PyInit__decimal@@Base+0x18ea8>  // b.none
   333c0:	sub	w0, w0, w1
   333c4:	tbnz	w0, #31, 333f8 <PyInit__decimal@@Base+0x18e78>
   333c8:	mov	x1, x19
   333cc:	mov	x2, x22
   333d0:	mov	x0, x21
   333d4:	bl	28fe0 <PyInit__decimal@@Base+0xea60>
   333d8:	mov	x2, x22
   333dc:	mov	x1, x23
   333e0:	mov	x0, x21
   333e4:	ldp	x19, x20, [sp, #16]
   333e8:	ldp	x21, x22, [sp, #32]
   333ec:	ldr	x23, [sp, #48]
   333f0:	ldp	x29, x30, [sp], #64
   333f4:	b	2b110 <PyInit__decimal@@Base+0x10b90>
   333f8:	mov	x1, x20
   333fc:	mov	x2, x22
   33400:	mov	x0, x21
   33404:	bl	28fe0 <PyInit__decimal@@Base+0xea60>
   33408:	mov	x2, x22
   3340c:	mov	x1, x23
   33410:	mov	x0, x21
   33414:	ldp	x19, x20, [sp, #16]
   33418:	ldp	x21, x22, [sp, #32]
   3341c:	ldr	x23, [sp, #48]
   33420:	ldp	x29, x30, [sp], #64
   33424:	b	2b110 <PyInit__decimal@@Base+0x10b90>
   33428:	ldr	x3, [x19, #8]
   3342c:	neg	w0, w1
   33430:	ldr	x2, [x20, #8]
   33434:	lsl	w1, w0, #1
   33438:	mov	w0, #0x1                   	// #1
   3343c:	cmp	x3, x2
   33440:	cneg	w0, w0, lt  // lt = tstop
   33444:	madd	w0, w1, w0, w0
   33448:	tbz	w0, #31, 333c8 <PyInit__decimal@@Base+0x18e48>
   3344c:	b	333f8 <PyInit__decimal@@Base+0x18e78>
   33450:	stp	x29, x30, [sp, #-64]!
   33454:	mov	x29, sp
   33458:	stp	x19, x20, [sp, #16]
   3345c:	mov	x20, x1
   33460:	mov	x19, x2
   33464:	stp	x21, x22, [sp, #32]
   33468:	mov	x21, x0
   3346c:	mov	x22, x4
   33470:	str	x23, [sp, #48]
   33474:	mov	x23, x3
   33478:	ldrb	w0, [x1]
   3347c:	ldrb	w1, [x2]
   33480:	tbz	w0, #2, 3348c <PyInit__decimal@@Base+0x18f0c>
   33484:	tst	w1, #0xc
   33488:	b.eq	334f8 <PyInit__decimal@@Base+0x18f78>  // b.none
   3348c:	tbz	w1, #2, 33498 <PyInit__decimal@@Base+0x18f18>
   33490:	tst	w0, #0xc
   33494:	b.eq	33528 <PyInit__decimal@@Base+0x18fa8>  // b.none
   33498:	mov	x4, x22
   3349c:	mov	x3, x23
   334a0:	mov	x2, x19
   334a4:	mov	x1, x20
   334a8:	mov	x0, x21
   334ac:	bl	29108 <PyInit__decimal@@Base+0xeb88>
   334b0:	cbz	w0, 334c8 <PyInit__decimal@@Base+0x18f48>
   334b4:	ldp	x19, x20, [sp, #16]
   334b8:	ldp	x21, x22, [sp, #32]
   334bc:	ldr	x23, [sp, #48]
   334c0:	ldp	x29, x30, [sp], #64
   334c4:	ret
   334c8:	mov	x1, x19
   334cc:	mov	x0, x20
   334d0:	bl	26c80 <PyInit__decimal@@Base+0xc700>
   334d4:	cbnz	w0, 334f4 <PyInit__decimal@@Base+0x18f74>
   334d8:	ldrb	w1, [x20]
   334dc:	ldrb	w0, [x19]
   334e0:	and	w1, w1, #0x1
   334e4:	and	w0, w0, #0x1
   334e8:	cmp	w1, w0
   334ec:	b.eq	33558 <PyInit__decimal@@Base+0x18fd8>  // b.none
   334f0:	sub	w0, w0, w1
   334f4:	tbnz	w0, #31, 33528 <PyInit__decimal@@Base+0x18fa8>
   334f8:	mov	x1, x19
   334fc:	mov	x2, x22
   33500:	mov	x0, x21
   33504:	bl	28fe0 <PyInit__decimal@@Base+0xea60>
   33508:	mov	x2, x22
   3350c:	mov	x1, x23
   33510:	mov	x0, x21
   33514:	ldp	x19, x20, [sp, #16]
   33518:	ldp	x21, x22, [sp, #32]
   3351c:	ldr	x23, [sp, #48]
   33520:	ldp	x29, x30, [sp], #64
   33524:	b	2b110 <PyInit__decimal@@Base+0x10b90>
   33528:	mov	x1, x20
   3352c:	mov	x2, x22
   33530:	mov	x0, x21
   33534:	bl	28fe0 <PyInit__decimal@@Base+0xea60>
   33538:	mov	x2, x22
   3353c:	mov	x1, x23
   33540:	mov	x0, x21
   33544:	ldp	x19, x20, [sp, #16]
   33548:	ldp	x21, x22, [sp, #32]
   3354c:	ldr	x23, [sp, #48]
   33550:	ldp	x29, x30, [sp], #64
   33554:	b	2b110 <PyInit__decimal@@Base+0x10b90>
   33558:	ldr	x2, [x19, #8]
   3355c:	neg	w0, w1
   33560:	ldr	x3, [x20, #8]
   33564:	lsl	w1, w0, #1
   33568:	mov	w0, #0x1                   	// #1
   3356c:	cmp	x3, x2
   33570:	cneg	w0, w0, lt  // lt = tstop
   33574:	madd	w0, w1, w0, w0
   33578:	tbz	w0, #31, 334f8 <PyInit__decimal@@Base+0x18f78>
   3357c:	b	33528 <PyInit__decimal@@Base+0x18fa8>
   33580:	stp	x29, x30, [sp, #-64]!
   33584:	mov	x29, sp
   33588:	stp	x19, x20, [sp, #16]
   3358c:	mov	x20, x1
   33590:	mov	x19, x2
   33594:	stp	x21, x22, [sp, #32]
   33598:	mov	x21, x0
   3359c:	mov	x22, x4
   335a0:	str	x23, [sp, #48]
   335a4:	mov	x23, x3
   335a8:	ldrb	w0, [x1]
   335ac:	ldrb	w1, [x2]
   335b0:	tbz	w0, #2, 335bc <PyInit__decimal@@Base+0x1903c>
   335b4:	tst	w1, #0xc
   335b8:	b.eq	33628 <PyInit__decimal@@Base+0x190a8>  // b.none
   335bc:	tbz	w1, #2, 335c8 <PyInit__decimal@@Base+0x19048>
   335c0:	tst	w0, #0xc
   335c4:	b.eq	33658 <PyInit__decimal@@Base+0x190d8>  // b.none
   335c8:	mov	x4, x22
   335cc:	mov	x3, x23
   335d0:	mov	x2, x19
   335d4:	mov	x1, x20
   335d8:	mov	x0, x21
   335dc:	bl	29108 <PyInit__decimal@@Base+0xeb88>
   335e0:	cbz	w0, 335f8 <PyInit__decimal@@Base+0x19078>
   335e4:	ldp	x19, x20, [sp, #16]
   335e8:	ldp	x21, x22, [sp, #32]
   335ec:	ldr	x23, [sp, #48]
   335f0:	ldp	x29, x30, [sp], #64
   335f4:	ret
   335f8:	mov	x1, x19
   335fc:	mov	x0, x20
   33600:	bl	26bd8 <PyInit__decimal@@Base+0xc658>
   33604:	cbnz	w0, 33624 <PyInit__decimal@@Base+0x190a4>
   33608:	ldrb	w1, [x20]
   3360c:	ldrb	w0, [x19]
   33610:	and	w1, w1, #0x1
   33614:	and	w0, w0, #0x1
   33618:	cmp	w1, w0
   3361c:	b.eq	33688 <PyInit__decimal@@Base+0x19108>  // b.none
   33620:	sub	w0, w0, w1
   33624:	tbnz	w0, #31, 33658 <PyInit__decimal@@Base+0x190d8>
   33628:	mov	x1, x19
   3362c:	mov	x2, x22
   33630:	mov	x0, x21
   33634:	bl	28fe0 <PyInit__decimal@@Base+0xea60>
   33638:	mov	x2, x22
   3363c:	mov	x1, x23
   33640:	mov	x0, x21
   33644:	ldp	x19, x20, [sp, #16]
   33648:	ldp	x21, x22, [sp, #32]
   3364c:	ldr	x23, [sp, #48]
   33650:	ldp	x29, x30, [sp], #64
   33654:	b	2b110 <PyInit__decimal@@Base+0x10b90>
   33658:	mov	x1, x20
   3365c:	mov	x2, x22
   33660:	mov	x0, x21
   33664:	bl	28fe0 <PyInit__decimal@@Base+0xea60>
   33668:	mov	x2, x22
   3366c:	mov	x1, x23
   33670:	mov	x0, x21
   33674:	ldp	x19, x20, [sp, #16]
   33678:	ldp	x21, x22, [sp, #32]
   3367c:	ldr	x23, [sp, #48]
   33680:	ldp	x29, x30, [sp], #64
   33684:	b	2b110 <PyInit__decimal@@Base+0x10b90>
   33688:	ldr	x2, [x19, #8]
   3368c:	neg	w0, w1
   33690:	ldr	x3, [x20, #8]
   33694:	lsl	w1, w0, #1
   33698:	mov	w0, #0x1                   	// #1
   3369c:	cmp	x3, x2
   336a0:	cneg	w0, w0, lt  // lt = tstop
   336a4:	madd	w0, w1, w0, w0
   336a8:	tbz	w0, #31, 33628 <PyInit__decimal@@Base+0x190a8>
   336ac:	b	33658 <PyInit__decimal@@Base+0x190d8>
   336b0:	stp	x29, x30, [sp, #-48]!
   336b4:	mov	x29, sp
   336b8:	stp	x19, x20, [sp, #16]
   336bc:	mov	x20, x3
   336c0:	mov	x19, x0
   336c4:	str	x21, [sp, #32]
   336c8:	mov	x21, x4
   336cc:	bl	291b8 <PyInit__decimal@@Base+0xec38>
   336d0:	mov	x2, x21
   336d4:	mov	x1, x20
   336d8:	mov	x0, x19
   336dc:	ldp	x19, x20, [sp, #16]
   336e0:	ldr	x21, [sp, #32]
   336e4:	ldp	x29, x30, [sp], #48
   336e8:	b	2b110 <PyInit__decimal@@Base+0x10b90>
   336ec:	nop
   336f0:	sub	sp, sp, #0x2b0
   336f4:	stp	x29, x30, [sp]
   336f8:	mov	x29, sp
   336fc:	stp	x23, x24, [sp, #48]
   33700:	mov	x23, x1
   33704:	add	x1, sp, #0xb0
   33708:	mov	x24, x2
   3370c:	mov	x2, #0x40                  	// #64
   33710:	stp	x21, x22, [sp, #32]
   33714:	mov	x21, x3
   33718:	mov	w3, #0x30                  	// #48
   3371c:	add	x22, sp, #0x50
   33720:	stp	x19, x20, [sp, #16]
   33724:	mov	x19, x4
   33728:	mov	x20, x0
   3372c:	mov	x0, x22
   33730:	str	x25, [sp, #64]
   33734:	add	x25, sp, #0x80
   33738:	strb	w3, [sp, #128]
   3373c:	stp	xzr, xzr, [sp, #136]
   33740:	stp	xzr, x2, [sp, #152]
   33744:	str	x1, [sp, #168]
   33748:	bl	1d4d0 <PyInit__decimal@@Base+0x2f50>
   3374c:	mov	x1, x24
   33750:	mov	x2, x22
   33754:	mov	x3, x19
   33758:	mov	x0, x25
   3375c:	bl	2b9f0 <PyInit__decimal@@Base+0x11470>
   33760:	mov	x4, x19
   33764:	mov	x3, x21
   33768:	mov	x2, x25
   3376c:	mov	x1, x23
   33770:	mov	x0, x20
   33774:	bl	291b8 <PyInit__decimal@@Base+0xec38>
   33778:	mov	x0, x20
   3377c:	mov	x2, x19
   33780:	mov	x1, x21
   33784:	bl	2b110 <PyInit__decimal@@Base+0x10b90>
   33788:	ldrb	w0, [sp, #128]
   3378c:	tst	w0, #0xe0
   33790:	b.ne	337a8 <PyInit__decimal@@Base+0x19228>  // b.any
   33794:	adrp	x1, 5f000 <PyInit__decimal@@Base+0x44a80>
   33798:	ldr	x0, [sp, #168]
   3379c:	ldr	x1, [x1, #1704]
   337a0:	blr	x1
   337a4:	ldrb	w0, [sp, #128]
   337a8:	tbnz	w0, #4, 337bc <PyInit__decimal@@Base+0x1923c>
   337ac:	adrp	x1, 5f000 <PyInit__decimal@@Base+0x44a80>
   337b0:	mov	x0, x25
   337b4:	ldr	x1, [x1, #1704]
   337b8:	blr	x1
   337bc:	ldp	x29, x30, [sp]
   337c0:	ldp	x19, x20, [sp, #16]
   337c4:	ldp	x21, x22, [sp, #32]
   337c8:	ldp	x23, x24, [sp, #48]
   337cc:	ldr	x25, [sp, #64]
   337d0:	add	sp, sp, #0x2b0
   337d4:	ret
   337d8:	sub	sp, sp, #0x970
   337dc:	mov	w5, #0x30                  	// #48
   337e0:	add	x7, sp, #0x170
   337e4:	add	x6, sp, #0x370
   337e8:	stp	x29, x30, [sp]
   337ec:	mov	x29, sp
   337f0:	stp	x27, x28, [sp, #80]
   337f4:	mov	x28, x3
   337f8:	add	x3, sp, #0x570
   337fc:	stp	x19, x20, [sp, #16]
   33800:	mov	x20, x4
   33804:	mov	x19, x0
   33808:	stp	x25, x26, [sp, #64]
   3380c:	mov	x26, x2
   33810:	mov	x2, x4
   33814:	mov	x4, #0x40                  	// #64
   33818:	stp	x23, x24, [sp, #48]
   3381c:	add	x23, sp, #0xe0
   33820:	mov	x0, x23
   33824:	stp	x21, x22, [sp, #32]
   33828:	mov	x22, x1
   3382c:	strb	w5, [sp, #224]
   33830:	stp	xzr, xzr, [sp, #232]
   33834:	stp	xzr, x4, [sp, #248]
   33838:	str	x7, [sp, #264]
   3383c:	strb	w5, [sp, #272]
   33840:	stp	xzr, xzr, [sp, #280]
   33844:	stp	xzr, x4, [sp, #296]
   33848:	str	x6, [sp, #312]
   3384c:	strb	w5, [sp, #320]
   33850:	stp	xzr, xzr, [sp, #328]
   33854:	stp	xzr, x4, [sp, #344]
   33858:	str	x3, [sp, #360]
   3385c:	bl	28fe0 <PyInit__decimal@@Base+0xea60>
   33860:	cbz	w0, 33b78 <PyInit__decimal@@Base+0x195f8>
   33864:	ldp	x2, x4, [sp, #240]
   33868:	mov	x0, #0x435f                	// #17247
   3386c:	movk	x0, #0xd79, lsl #16
   33870:	movk	x0, #0x35e5, lsl #32
   33874:	movk	x0, #0xd794, lsl #48
   33878:	ldr	x1, [sp, #264]
   3387c:	umulh	x0, x2, x0
   33880:	lsr	x0, x0, #4
   33884:	add	x1, x1, x4, lsl #3
   33888:	add	x3, x0, x0, lsl #2
   3388c:	ldur	x27, [x1, #-8]
   33890:	lsl	x3, x3, #2
   33894:	sub	x0, x3, x0
   33898:	subs	x0, x2, x0
   3389c:	b.ne	33b28 <PyInit__decimal@@Base+0x195a8>  // b.any
   338a0:	mov	x0, #0x10                  	// #16
   338a4:	adrp	x21, 42000 <PyInit__decimal@@Base+0x27a80>
   338a8:	add	x1, x21, #0x2d0
   338ac:	ldr	x0, [x1, x0, lsl #3]
   338b0:	udiv	x27, x27, x0
   338b4:	cmp	x27, #0x9
   338b8:	b.hi	33b6c <PyInit__decimal@@Base+0x195ec>  // b.pmore
   338bc:	add	x27, x27, x27, lsl #2
   338c0:	lsl	x27, x27, #1
   338c4:	add	x27, x27, x27, lsl #2
   338c8:	lsl	x27, x27, #1
   338cc:	ldrb	w2, [x19]
   338d0:	sub	x24, x27, #0x64
   338d4:	ldp	x25, x22, [x22, #8]
   338d8:	ldr	x0, [x19, #40]
   338dc:	tbnz	w2, #5, 338f4 <PyInit__decimal@@Base+0x19374>
   338e0:	adrp	x4, 5f000 <PyInit__decimal@@Base+0x44a80>
   338e4:	ldr	x3, [x19, #32]
   338e8:	ldr	x1, [x4, #1672]
   338ec:	cmp	x3, x1
   338f0:	b.gt	33ddc <PyInit__decimal@@Base+0x1985c>
   338f4:	adrp	x3, 42000 <PyInit__decimal@@Base+0x27a80>
   338f8:	add	x3, x3, #0x960
   338fc:	and	w2, w2, #0xfffffff0
   33900:	strb	w2, [x19]
   33904:	add	x1, x21, #0x2d0
   33908:	mov	x2, #0x1                   	// #1
   3390c:	ldrh	w4, [x3, x24, lsl #1]
   33910:	mov	x3, #0xfffffffffffffffd    	// #-3
   33914:	str	x4, [x0]
   33918:	str	x3, [x19, #8]
   3391c:	str	x2, [x19, #24]
   33920:	ldr	x2, [x1, #72]
   33924:	ldr	x0, [x0]
   33928:	cmp	x0, x2
   3392c:	b.cs	33c54 <PyInit__decimal@@Base+0x196d4>  // b.hs, b.nlast
   33930:	ldr	x2, [x1, #32]
   33934:	cmp	x0, x2
   33938:	b.cc	33c90 <PyInit__decimal@@Base+0x19710>  // b.lo, b.ul, b.last
   3393c:	ldr	x2, [x1, #48]
   33940:	cmp	x0, x2
   33944:	b.cc	33e50 <PyInit__decimal@@Base+0x198d0>  // b.lo, b.ul, b.last
   33948:	ldr	x3, [x1, #64]
   3394c:	mov	x2, #0x9                   	// #9
   33950:	cmp	x0, x3
   33954:	b.cs	33968 <PyInit__decimal@@Base+0x193e8>  // b.hs, b.nlast
   33958:	ldr	x1, [x1, #56]
   3395c:	cmp	x0, x1
   33960:	cset	x2, cs  // cs = hs, nlast
   33964:	add	x2, x2, #0x7
   33968:	add	x0, x22, x25
   3396c:	str	x2, [x19, #16]
   33970:	str	x0, [sp, #120]
   33974:	cmp	x24, #0x190
   33978:	b.hi	33d24 <PyInit__decimal@@Base+0x197a4>  // b.pmore
   3397c:	sub	x0, x0, #0x1
   33980:	str	x0, [sp, #120]
   33984:	mov	x0, #0x1                   	// #1
   33988:	sub	x22, x0, x22
   3398c:	str	x22, [sp, #232]
   33990:	add	x22, sp, #0xb0
   33994:	add	x21, sp, #0x80
   33998:	mov	x0, x22
   3399c:	bl	1d4d0 <PyInit__decimal@@Base+0x2f50>
   339a0:	mov	x0, x21
   339a4:	bl	1d4d0 <PyInit__decimal@@Base+0x2f50>
   339a8:	ldr	x24, [x26]
   339ac:	mov	w0, #0x8                   	// #8
   339b0:	str	w0, [sp, #164]
   339b4:	add	x0, x24, #0x2
   339b8:	str	x0, [sp, #112]
   339bc:	ldr	x0, [sp, #120]
   339c0:	add	x24, sp, #0x140
   339c4:	cbnz	x0, 339d8 <PyInit__decimal@@Base+0x19458>
   339c8:	sub	x27, x27, #0x74
   339cc:	add	x24, sp, #0x140
   339d0:	cmp	x27, #0x30f
   339d4:	b.hi	33d3c <PyInit__decimal@@Base+0x197bc>  // b.pmore
   339d8:	ldr	x0, [sp, #112]
   339dc:	cmp	x0, #0x2
   339e0:	b.le	33cdc <PyInit__decimal@@Base+0x1975c>
   339e4:	ldr	x1, [sp, #112]
   339e8:	add	x2, sp, #0x770
   339ec:	mov	w0, #0x0                   	// #0
   339f0:	add	x1, x1, #0x2
   339f4:	mov	w25, w0
   339f8:	cmp	x1, #0x5
   339fc:	add	w0, w0, #0x1
   33a00:	add	x1, x1, x1, lsr #63
   33a04:	add	x26, x2, w25, sxtw #3
   33a08:	asr	x1, x1, #1
   33a0c:	str	x1, [x2, w25, sxtw #3]
   33a10:	b.gt	339f0 <PyInit__decimal@@Base+0x19470>
   33a14:	tbnz	w25, #31, 33cdc <PyInit__decimal@@Base+0x1975c>
   33a18:	adrp	x27, 5c000 <PyInit__decimal@@Base+0x41a80>
   33a1c:	add	x27, x27, #0xc58
   33a20:	ldrb	w0, [x19]
   33a24:	add	x27, x27, #0x60
   33a28:	add	x28, sp, #0x110
   33a2c:	b	33ac0 <PyInit__decimal@@Base+0x19540>
   33a30:	mov	x2, x9
   33a34:	str	x9, [sp, #104]
   33a38:	bl	2bf80 <PyInit__decimal@@Base+0x11a00>
   33a3c:	ldr	x9, [sp, #104]
   33a40:	mov	x4, x20
   33a44:	ldr	x6, [sp, #280]
   33a48:	mov	x3, x21
   33a4c:	mov	x2, x24
   33a50:	mov	x1, x28
   33a54:	mov	x0, x24
   33a58:	add	x9, x6, x9
   33a5c:	str	x9, [sp, #280]
   33a60:	bl	291b8 <PyInit__decimal@@Base+0xec38>
   33a64:	sub	w25, w25, #0x1
   33a68:	mov	x2, x20
   33a6c:	mov	x1, x21
   33a70:	mov	x0, x24
   33a74:	bl	2b110 <PyInit__decimal@@Base+0x10b90>
   33a78:	mov	x4, x20
   33a7c:	mov	x3, x22
   33a80:	mov	x2, x27
   33a84:	mov	x1, x24
   33a88:	mov	x0, x24
   33a8c:	bl	2e5c0 <PyInit__decimal@@Base+0x14040>
   33a90:	mov	x0, x19
   33a94:	mov	x4, x20
   33a98:	mov	x3, x22
   33a9c:	mov	x2, x24
   33aa0:	mov	x1, x19
   33aa4:	bl	2e488 <PyInit__decimal@@Base+0x13f08>
   33aa8:	ldrb	w0, [x19]
   33aac:	sub	x26, x26, #0x8
   33ab0:	tst	w0, #0xe
   33ab4:	b.ne	33cdc <PyInit__decimal@@Base+0x1975c>  // b.any
   33ab8:	cmn	w25, #0x1
   33abc:	b.eq	33cdc <PyInit__decimal@@Base+0x1975c>  // b.none
   33ac0:	ldr	x4, [x26]
   33ac4:	eor	w0, w0, #0x1
   33ac8:	strb	w0, [x19]
   33acc:	mov	x3, x20
   33ad0:	mov	x2, x21
   33ad4:	mov	x1, x19
   33ad8:	lsl	x4, x4, #1
   33adc:	mov	x0, x24
   33ae0:	add	x4, x4, #0x3
   33ae4:	str	x4, [sp, #128]
   33ae8:	bl	31e70 <PyInit__decimal@@Base+0x178f0>
   33aec:	ldrb	w2, [x19]
   33af0:	mov	x3, x20
   33af4:	ldr	x6, [sp, #128]
   33af8:	eor	w2, w2, #0x1
   33afc:	ldr	x8, [sp, #240]
   33b00:	strb	w2, [x19]
   33b04:	mov	x1, x23
   33b08:	mov	x0, x28
   33b0c:	mov	x4, x20
   33b10:	mov	x2, x24
   33b14:	subs	x9, x8, x6
   33b18:	b.gt	33a30 <PyInit__decimal@@Base+0x194b0>
   33b1c:	mov	x3, x21
   33b20:	mov	x0, x24
   33b24:	b	33a60 <PyInit__decimal@@Base+0x194e0>
   33b28:	cmp	x0, #0x2
   33b2c:	b.hi	33e34 <PyInit__decimal@@Base+0x198b4>  // b.pmore
   33b30:	cmp	x4, #0x1
   33b34:	adrp	x21, 42000 <PyInit__decimal@@Base+0x27a80>
   33b38:	b.le	338b4 <PyInit__decimal@@Base+0x19334>
   33b3c:	add	x2, x21, #0x2d0
   33b40:	add	x5, x0, #0x10
   33b44:	ldur	x3, [x1, #-16]
   33b48:	mov	x1, x2
   33b4c:	ldr	x2, [x2, x5, lsl #3]
   33b50:	mov	x4, #0x3                   	// #3
   33b54:	sub	x0, x4, x0
   33b58:	udiv	x2, x3, x2
   33b5c:	ldr	x0, [x1, x0, lsl #3]
   33b60:	madd	x27, x27, x0, x2
   33b64:	cmp	x27, #0x9
   33b68:	b.ls	338bc <PyInit__decimal@@Base+0x1933c>  // b.plast
   33b6c:	cmp	x27, #0x63
   33b70:	b.hi	338cc <PyInit__decimal@@Base+0x1934c>  // b.pmore
   33b74:	b	338c4 <PyInit__decimal@@Base+0x19344>
   33b78:	mov	x0, x19
   33b7c:	mov	x2, x20
   33b80:	mov	w1, #0x200                 	// #512
   33b84:	bl	28d68 <PyInit__decimal@@Base+0xe7e8>
   33b88:	ldr	w0, [x20]
   33b8c:	mov	w2, #0x1040                	// #4160
   33b90:	ldrb	w1, [sp, #224]
   33b94:	orr	w0, w0, w2
   33b98:	str	w0, [x20]
   33b9c:	tst	w1, #0xe0
   33ba0:	b.ne	33bb8 <PyInit__decimal@@Base+0x19638>  // b.any
   33ba4:	adrp	x1, 5f000 <PyInit__decimal@@Base+0x44a80>
   33ba8:	ldr	x0, [sp, #264]
   33bac:	ldr	x1, [x1, #1704]
   33bb0:	blr	x1
   33bb4:	ldrb	w1, [sp, #224]
   33bb8:	tbnz	w1, #4, 33bcc <PyInit__decimal@@Base+0x1964c>
   33bbc:	adrp	x1, 5f000 <PyInit__decimal@@Base+0x44a80>
   33bc0:	mov	x0, x23
   33bc4:	ldr	x1, [x1, #1704]
   33bc8:	blr	x1
   33bcc:	ldrb	w0, [sp, #272]
   33bd0:	tst	w0, #0xe0
   33bd4:	b.ne	33bec <PyInit__decimal@@Base+0x1966c>  // b.any
   33bd8:	adrp	x1, 5f000 <PyInit__decimal@@Base+0x44a80>
   33bdc:	ldr	x0, [sp, #312]
   33be0:	ldr	x1, [x1, #1704]
   33be4:	blr	x1
   33be8:	ldrb	w0, [sp, #272]
   33bec:	tbnz	w0, #4, 33c00 <PyInit__decimal@@Base+0x19680>
   33bf0:	adrp	x1, 5f000 <PyInit__decimal@@Base+0x44a80>
   33bf4:	add	x0, sp, #0x110
   33bf8:	ldr	x1, [x1, #1704]
   33bfc:	blr	x1
   33c00:	ldrb	w0, [sp, #320]
   33c04:	tst	w0, #0xe0
   33c08:	b.ne	33c20 <PyInit__decimal@@Base+0x196a0>  // b.any
   33c0c:	adrp	x1, 5f000 <PyInit__decimal@@Base+0x44a80>
   33c10:	ldr	x0, [sp, #360]
   33c14:	ldr	x1, [x1, #1704]
   33c18:	blr	x1
   33c1c:	ldrb	w0, [sp, #320]
   33c20:	tbnz	w0, #4, 33c34 <PyInit__decimal@@Base+0x196b4>
   33c24:	adrp	x1, 5f000 <PyInit__decimal@@Base+0x44a80>
   33c28:	add	x0, sp, #0x140
   33c2c:	ldr	x1, [x1, #1704]
   33c30:	blr	x1
   33c34:	ldp	x29, x30, [sp]
   33c38:	ldp	x19, x20, [sp, #16]
   33c3c:	ldp	x21, x22, [sp, #32]
   33c40:	ldp	x23, x24, [sp, #48]
   33c44:	ldp	x25, x26, [sp, #64]
   33c48:	ldp	x27, x28, [sp, #80]
   33c4c:	add	sp, sp, #0x970
   33c50:	ret
   33c54:	ldr	x2, [x1, #112]
   33c58:	cmp	x0, x2
   33c5c:	b.cs	33cb0 <PyInit__decimal@@Base+0x19730>  // b.hs, b.nlast
   33c60:	ldr	x2, [x1, #88]
   33c64:	cmp	x0, x2
   33c68:	b.cc	33e3c <PyInit__decimal@@Base+0x198bc>  // b.lo, b.ul, b.last
   33c6c:	ldr	x3, [x1, #104]
   33c70:	mov	x2, #0xe                   	// #14
   33c74:	cmp	x0, x3
   33c78:	b.cs	33968 <PyInit__decimal@@Base+0x193e8>  // b.hs, b.nlast
   33c7c:	ldr	x1, [x1, #96]
   33c80:	cmp	x0, x1
   33c84:	cset	x2, cs  // cs = hs, nlast
   33c88:	add	x2, x2, #0xc
   33c8c:	b	33968 <PyInit__decimal@@Base+0x193e8>
   33c90:	ldr	x2, [x1, #16]
   33c94:	cmp	x0, x2
   33c98:	b.cs	33e0c <PyInit__decimal@@Base+0x1988c>  // b.hs, b.nlast
   33c9c:	ldr	x1, [x1, #8]
   33ca0:	cmp	x0, x1
   33ca4:	cset	x2, cs  // cs = hs, nlast
   33ca8:	add	x2, x2, #0x1
   33cac:	b	33968 <PyInit__decimal@@Base+0x193e8>
   33cb0:	ldr	x2, [x1, #144]
   33cb4:	cmp	x0, x2
   33cb8:	b.cs	33e20 <PyInit__decimal@@Base+0x198a0>  // b.hs, b.nlast
   33cbc:	ldr	x2, [x1, #128]
   33cc0:	cmp	x0, x2
   33cc4:	b.cs	33e64 <PyInit__decimal@@Base+0x198e4>  // b.hs, b.nlast
   33cc8:	ldr	x1, [x1, #120]
   33ccc:	cmp	x0, x1
   33cd0:	cset	x2, cs  // cs = hs, nlast
   33cd4:	add	x2, x2, #0xf
   33cd8:	b	33968 <PyInit__decimal@@Base+0x193e8>
   33cdc:	ldr	x0, [sp, #112]
   33ce0:	mov	x2, x20
   33ce4:	add	x1, x0, #0x1
   33ce8:	mov	x0, x23
   33cec:	bl	32c78 <PyInit__decimal@@Base+0x186f8>
   33cf0:	ldr	x2, [sp, #120]
   33cf4:	mov	x4, x20
   33cf8:	mov	x3, x22
   33cfc:	mov	x1, x23
   33d00:	mov	x0, x24
   33d04:	bl	336f0 <PyInit__decimal@@Base+0x19170>
   33d08:	mov	x4, x20
   33d0c:	mov	x3, x22
   33d10:	mov	x2, x19
   33d14:	mov	x1, x24
   33d18:	mov	x0, x19
   33d1c:	bl	2e488 <PyInit__decimal@@Base+0x13f08>
   33d20:	b	33b88 <PyInit__decimal@@Base+0x19608>
   33d24:	ldrb	w0, [x19]
   33d28:	neg	x22, x22
   33d2c:	str	x22, [sp, #232]
   33d30:	orr	w0, w0, #0x1
   33d34:	strb	w0, [x19]
   33d38:	b	33990 <PyInit__decimal@@Base+0x19410>
   33d3c:	adrp	x27, 5c000 <PyInit__decimal@@Base+0x41a80>
   33d40:	add	x27, x27, #0xc58
   33d44:	add	x27, x27, #0x60
   33d48:	mov	x0, x23
   33d4c:	mov	x1, x27
   33d50:	bl	26c80 <PyInit__decimal@@Base+0xc700>
   33d54:	mov	x2, x27
   33d58:	mov	x1, x23
   33d5c:	mov	w27, w0
   33d60:	add	x6, x22, #0x1c
   33d64:	mov	x0, x24
   33d68:	add	x5, x22, #0x24
   33d6c:	mov	x4, x22
   33d70:	mov	w3, #0x1                   	// #1
   33d74:	bl	2a3f0 <PyInit__decimal@@Base+0xfe70>
   33d78:	ldr	w1, [sp, #204]
   33d7c:	mov	w0, #0x3be                 	// #958
   33d80:	tst	w1, w0
   33d84:	b.ne	33b78 <PyInit__decimal@@Base+0x195f8>  // b.any
   33d88:	ldr	x1, [sp, #328]
   33d8c:	tbz	w27, #31, 33d98 <PyInit__decimal@@Base+0x19818>
   33d90:	add	x1, x1, #0x1
   33d94:	str	x1, [sp, #328]
   33d98:	ldr	x0, [sp, #336]
   33d9c:	ldr	x3, [x28]
   33da0:	sub	x2, x0, #0x1
   33da4:	ldr	x0, [x26]
   33da8:	add	x4, x2, x1
   33dac:	sub	x3, x3, x0
   33db0:	add	x0, x3, #0x1
   33db4:	cmp	x4, x0
   33db8:	b.lt	33e78 <PyInit__decimal@@Base+0x198f8>  // b.tstop
   33dbc:	sub	x0, x1, #0x1
   33dc0:	str	x0, [sp, #328]
   33dc4:	ldr	x1, [sp, #112]
   33dc8:	adds	x0, x0, x2
   33dcc:	sub	x0, x1, x0
   33dd0:	csel	x0, x0, x1, mi  // mi = first
   33dd4:	str	x0, [sp, #112]
   33dd8:	b	339d8 <PyInit__decimal@@Base+0x19458>
   33ddc:	add	x3, sp, #0x770
   33de0:	mov	x2, #0x8                   	// #8
   33de4:	strb	wzr, [sp, #1904]
   33de8:	bl	252a8 <PyInit__decimal@@Base+0xad28>
   33dec:	ldrb	w1, [sp, #1904]
   33df0:	str	x0, [x19, #40]
   33df4:	cbnz	w1, 33e04 <PyInit__decimal@@Base+0x19884>
   33df8:	adrp	x4, 5f000 <PyInit__decimal@@Base+0x44a80>
   33dfc:	ldr	x1, [x4, #1672]
   33e00:	str	x1, [x19, #32]
   33e04:	ldrb	w2, [x19]
   33e08:	b	338f4 <PyInit__decimal@@Base+0x19374>
   33e0c:	ldr	x1, [x1, #24]
   33e10:	cmp	x0, x1
   33e14:	cset	x2, cs  // cs = hs, nlast
   33e18:	add	x2, x2, #0x3
   33e1c:	b	33968 <PyInit__decimal@@Base+0x193e8>
   33e20:	ldr	x1, [x1, #152]
   33e24:	cmp	x0, x1
   33e28:	cset	x2, cs  // cs = hs, nlast
   33e2c:	add	x2, x2, #0x13
   33e30:	b	33968 <PyInit__decimal@@Base+0x193e8>
   33e34:	sub	x0, x0, #0x3
   33e38:	b	338a4 <PyInit__decimal@@Base+0x19324>
   33e3c:	ldr	x1, [x1, #80]
   33e40:	cmp	x0, x1
   33e44:	cset	x2, cs  // cs = hs, nlast
   33e48:	add	x2, x2, #0xa
   33e4c:	b	33968 <PyInit__decimal@@Base+0x193e8>
   33e50:	ldr	x1, [x1, #40]
   33e54:	cmp	x0, x1
   33e58:	cset	x2, cs  // cs = hs, nlast
   33e5c:	add	x2, x2, #0x5
   33e60:	b	33968 <PyInit__decimal@@Base+0x193e8>
   33e64:	ldr	x1, [x1, #136]
   33e68:	cmp	x0, x1
   33e6c:	cset	x2, cs  // cs = hs, nlast
   33e70:	add	x2, x2, #0x11
   33e74:	b	33968 <PyInit__decimal@@Base+0x193e8>
   33e78:	lsr	w1, w27, #31
   33e7c:	mov	x0, x19
   33e80:	mov	x2, #0x1                   	// #1
   33e84:	bl	26d90 <PyInit__decimal@@Base+0xc810>
   33e88:	b	33b88 <PyInit__decimal@@Base+0x19608>
   33e8c:	nop
   33e90:	sub	sp, sp, #0x970
   33e94:	stp	x29, x30, [sp]
   33e98:	mov	x29, sp
   33e9c:	stp	x19, x20, [sp, #16]
   33ea0:	mov	x19, x1
   33ea4:	mov	x20, x3
   33ea8:	stp	x25, x26, [sp, #64]
   33eac:	mov	x25, x0
   33eb0:	ldrb	w4, [x1]
   33eb4:	tst	w4, #0xe
   33eb8:	b.ne	33f54 <PyInit__decimal@@Base+0x199d4>  // b.any
   33ebc:	stp	x21, x22, [sp, #32]
   33ec0:	mov	x21, x2
   33ec4:	ldr	x1, [x1, #24]
   33ec8:	ldr	x2, [x19, #40]
   33ecc:	add	x1, x2, x1, lsl #3
   33ed0:	ldur	x1, [x1, #-8]
   33ed4:	cbz	x1, 33ff0 <PyInit__decimal@@Base+0x19a70>
   33ed8:	tbnz	w4, #0, 33f88 <PyInit__decimal@@Base+0x19a08>
   33edc:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41a80>
   33ee0:	add	x1, x1, #0xc58
   33ee4:	add	x1, x1, #0x60
   33ee8:	mov	x0, x19
   33eec:	bl	26c80 <PyInit__decimal@@Base+0xc700>
   33ef0:	cbz	w0, 34014 <PyInit__decimal@@Base+0x19a94>
   33ef4:	ldp	x0, x1, [x19, #8]
   33ef8:	stp	x23, x24, [sp, #48]
   33efc:	adrp	x24, 42000 <PyInit__decimal@@Base+0x27a80>
   33f00:	add	x2, x24, #0x2d0
   33f04:	add	x0, x0, x1
   33f08:	subs	x1, x0, #0x1
   33f0c:	csneg	x0, x1, x0, pl  // pl = nfrst
   33f10:	ldr	x3, [x2, #72]
   33f14:	lsl	x0, x0, #1
   33f18:	cmp	x0, #0x0
   33f1c:	str	x3, [sp, #112]
   33f20:	cneg	x0, x0, lt  // lt = tstop
   33f24:	cmp	x0, x3
   33f28:	b.cs	33f90 <PyInit__decimal@@Base+0x19a10>  // b.hs, b.nlast
   33f2c:	ldr	x3, [x2, #32]
   33f30:	cmp	x0, x3
   33f34:	b.cs	34030 <PyInit__decimal@@Base+0x19ab0>  // b.hs, b.nlast
   33f38:	ldr	x3, [x2, #16]
   33f3c:	cmp	x0, x3
   33f40:	b.cs	3429c <PyInit__decimal@@Base+0x19d1c>  // b.hs, b.nlast
   33f44:	ldr	x2, [x2, #8]
   33f48:	cmp	x0, x2
   33f4c:	cset	x3, cs  // cs = hs, nlast
   33f50:	b	34060 <PyInit__decimal@@Base+0x19ae0>
   33f54:	bl	29098 <PyInit__decimal@@Base+0xeb18>
   33f58:	cbnz	w0, 33f74 <PyInit__decimal@@Base+0x199f4>
   33f5c:	ldrb	w0, [x19]
   33f60:	tbz	w0, #0, 33fcc <PyInit__decimal@@Base+0x19a4c>
   33f64:	mov	x2, x20
   33f68:	mov	x0, x25
   33f6c:	mov	w1, #0x100                 	// #256
   33f70:	bl	28d68 <PyInit__decimal@@Base+0xe7e8>
   33f74:	ldp	x29, x30, [sp]
   33f78:	ldp	x19, x20, [sp, #16]
   33f7c:	ldp	x25, x26, [sp, #64]
   33f80:	add	sp, sp, #0x970
   33f84:	ret
   33f88:	ldp	x21, x22, [sp, #32]
   33f8c:	b	33f64 <PyInit__decimal@@Base+0x199e4>
   33f90:	ldr	x3, [x2, #112]
   33f94:	cmp	x0, x3
   33f98:	b.cs	34270 <PyInit__decimal@@Base+0x19cf0>  // b.hs, b.nlast
   33f9c:	ldr	x3, [x2, #88]
   33fa0:	cmp	x0, x3
   33fa4:	b.cc	342c4 <PyInit__decimal@@Base+0x19d44>  // b.lo, b.ul, b.last
   33fa8:	ldr	x4, [x2, #104]
   33fac:	mov	x3, #0xd                   	// #13
   33fb0:	cmp	x0, x4
   33fb4:	b.cs	34060 <PyInit__decimal@@Base+0x19ae0>  // b.hs, b.nlast
   33fb8:	ldr	x2, [x2, #96]
   33fbc:	cmp	x0, x2
   33fc0:	cset	x3, cs  // cs = hs, nlast
   33fc4:	add	x3, x3, #0xb
   33fc8:	b	34060 <PyInit__decimal@@Base+0x19ae0>
   33fcc:	mov	x0, x25
   33fd0:	mov	w2, #0x2                   	// #2
   33fd4:	mov	w1, #0x0                   	// #0
   33fd8:	bl	28cd8 <PyInit__decimal@@Base+0xe758>
   33fdc:	ldp	x29, x30, [sp]
   33fe0:	ldp	x19, x20, [sp, #16]
   33fe4:	ldp	x25, x26, [sp, #64]
   33fe8:	add	sp, sp, #0x970
   33fec:	ret
   33ff0:	mov	w2, #0x2                   	// #2
   33ff4:	mov	w1, #0x1                   	// #1
   33ff8:	bl	28cd8 <PyInit__decimal@@Base+0xe758>
   33ffc:	ldp	x29, x30, [sp]
   34000:	ldp	x19, x20, [sp, #16]
   34004:	ldp	x21, x22, [sp, #32]
   34008:	ldp	x25, x26, [sp, #64]
   3400c:	add	sp, sp, #0x970
   34010:	ret
   34014:	mov	x0, x25
   34018:	mov	x3, #0x0                   	// #0
   3401c:	mov	x2, #0x0                   	// #0
   34020:	mov	w1, #0x0                   	// #0
   34024:	bl	26d90 <PyInit__decimal@@Base+0xc810>
   34028:	ldp	x21, x22, [sp, #32]
   3402c:	b	33f74 <PyInit__decimal@@Base+0x199f4>
   34030:	ldr	x3, [x2, #48]
   34034:	cmp	x0, x3
   34038:	b.cc	342d8 <PyInit__decimal@@Base+0x19d58>  // b.lo, b.ul, b.last
   3403c:	ldr	x4, [x2, #64]
   34040:	mov	x3, #0x8                   	// #8
   34044:	cmp	x0, x4
   34048:	b.cs	34060 <PyInit__decimal@@Base+0x19ae0>  // b.hs, b.nlast
   3404c:	ldr	x2, [x2, #56]
   34050:	cmp	x0, x2
   34054:	cset	x3, cs  // cs = hs, nlast
   34058:	add	x3, x3, #0x6
   3405c:	nop
   34060:	ldr	x0, [x21, #8]
   34064:	cmp	x0, x3
   34068:	b.lt	3459c <PyInit__decimal@@Base+0x1a01c>  // b.tstop
   3406c:	ldr	w4, [x21, #44]
   34070:	mov	w6, #0x6                   	// #6
   34074:	ldp	x0, x1, [x21, #32]
   34078:	stp	x0, x1, [sp, #160]
   3407c:	add	x22, sp, #0x80
   34080:	ldp	x2, x3, [x21]
   34084:	stp	x2, x3, [sp, #128]
   34088:	ldp	x0, x1, [x21, #16]
   3408c:	stp	x0, x1, [sp, #144]
   34090:	str	w6, [sp, #164]
   34094:	cbz	w4, 344fc <PyInit__decimal@@Base+0x19f7c>
   34098:	mov	w1, #0x30                  	// #48
   3409c:	mov	x0, #0x40                  	// #64
   340a0:	add	x6, sp, #0x170
   340a4:	add	x4, sp, #0x370
   340a8:	add	x3, sp, #0x570
   340ac:	add	x2, sp, #0x770
   340b0:	strb	w1, [sp, #176]
   340b4:	cmp	x19, x25
   340b8:	stp	xzr, xzr, [sp, #184]
   340bc:	stp	xzr, x0, [sp, #200]
   340c0:	str	x6, [sp, #216]
   340c4:	strb	w1, [sp, #224]
   340c8:	stp	xzr, xzr, [sp, #232]
   340cc:	stp	xzr, x0, [sp, #248]
   340d0:	str	x4, [sp, #264]
   340d4:	strb	w1, [sp, #272]
   340d8:	stp	xzr, xzr, [sp, #280]
   340dc:	stp	xzr, x0, [sp, #296]
   340e0:	str	x3, [sp, #312]
   340e4:	strb	w1, [sp, #320]
   340e8:	stp	xzr, xzr, [sp, #328]
   340ec:	stp	xzr, x0, [sp, #344]
   340f0:	str	x2, [sp, #360]
   340f4:	b.eq	345c8 <PyInit__decimal@@Base+0x1a048>  // b.none
   340f8:	stp	x27, x28, [sp, #80]
   340fc:	add	x23, x24, #0x2d0
   34100:	ldr	x0, [x21]
   34104:	add	x24, sp, #0x110
   34108:	add	x28, sp, #0xb0
   3410c:	add	x27, sp, #0xe0
   34110:	add	x0, x0, #0x3
   34114:	add	x26, x22, #0x1c
   34118:	str	x0, [sp, #104]
   3411c:	add	x0, x22, #0x10
   34120:	str	x0, [sp, #120]
   34124:	str	wzr, [sp, #168]
   34128:	b	341d4 <PyInit__decimal@@Base+0x19c54>
   3412c:	ldr	x1, [x23, #32]
   34130:	cmp	x0, x1
   34134:	b.cs	34318 <PyInit__decimal@@Base+0x19d98>  // b.hs, b.nlast
   34138:	ldr	x1, [x23, #16]
   3413c:	cmp	x0, x1
   34140:	b.cs	34348 <PyInit__decimal@@Base+0x19dc8>  // b.hs, b.nlast
   34144:	ldr	x1, [x23, #8]
   34148:	cmp	x0, x1
   3414c:	cset	x6, cs  // cs = hs, nlast
   34150:	add	x6, x6, #0x1
   34154:	nop
   34158:	ldr	x8, [x21]
   3415c:	mov	x4, x26
   34160:	mov	x3, x22
   34164:	mov	x2, x24
   34168:	mov	x1, x25
   3416c:	mov	x0, x28
   34170:	str	x8, [sp, #128]
   34174:	str	x6, [sp, #288]
   34178:	bl	2e488 <PyInit__decimal@@Base+0x13f08>
   3417c:	mov	x0, x27
   34180:	mov	x4, x26
   34184:	mov	x3, x22
   34188:	mov	x2, x24
   3418c:	mov	x1, x25
   34190:	bl	2e5c0 <PyInit__decimal@@Base+0x14040>
   34194:	ldrb	w0, [x25]
   34198:	tst	w0, #0xe
   3419c:	b.ne	34370 <PyInit__decimal@@Base+0x19df0>  // b.any
   341a0:	ldr	x0, [x25, #24]
   341a4:	ldr	x1, [x25, #40]
   341a8:	add	x0, x1, x0, lsl #3
   341ac:	ldur	x0, [x0, #-8]
   341b0:	cbz	x0, 34370 <PyInit__decimal@@Base+0x19df0>
   341b4:	mov	x2, x20
   341b8:	mov	x1, x27
   341bc:	mov	x0, x28
   341c0:	bl	29eb8 <PyInit__decimal@@Base+0xf938>
   341c4:	cbz	w0, 34370 <PyInit__decimal@@Base+0x19df0>
   341c8:	ldr	x0, [sp, #104]
   341cc:	add	x0, x0, #0x13
   341d0:	str	x0, [sp, #104]
   341d4:	ldr	x5, [sp, #104]
   341d8:	mov	x2, x22
   341dc:	ldr	x3, [sp, #120]
   341e0:	mov	x1, x19
   341e4:	mov	x0, x25
   341e8:	mov	x4, x20
   341ec:	str	x5, [sp, #128]
   341f0:	bl	337d8 <PyInit__decimal@@Base+0x19258>
   341f4:	ldp	x0, x3, [x25, #8]
   341f8:	ldrb	w1, [sp, #272]
   341fc:	ldr	x2, [sp, #128]
   34200:	and	w1, w1, #0xfffffff0
   34204:	strb	w1, [sp, #272]
   34208:	ldr	x1, [sp, #312]
   3420c:	add	x0, x0, x3
   34210:	sub	x0, x0, x2
   34214:	str	x0, [sp, #280]
   34218:	mov	x0, #0x1                   	// #1
   3421c:	stp	x0, xzr, [x1]
   34220:	str	x0, [sp, #296]
   34224:	ldr	x0, [x1]
   34228:	ldr	x1, [sp, #112]
   3422c:	cmp	x1, x0
   34230:	b.hi	3412c <PyInit__decimal@@Base+0x19bac>  // b.pmore
   34234:	ldr	x1, [x23, #112]
   34238:	cmp	x0, x1
   3423c:	b.cs	342ec <PyInit__decimal@@Base+0x19d6c>  // b.hs, b.nlast
   34240:	ldr	x1, [x23, #88]
   34244:	cmp	x0, x1
   34248:	b.cc	344c0 <PyInit__decimal@@Base+0x19f40>  // b.lo, b.ul, b.last
   3424c:	ldr	x1, [x23, #104]
   34250:	mov	x6, #0xe                   	// #14
   34254:	cmp	x0, x1
   34258:	b.cs	34158 <PyInit__decimal@@Base+0x19bd8>  // b.hs, b.nlast
   3425c:	ldr	x1, [x23, #96]
   34260:	cmp	x0, x1
   34264:	cset	x6, cs  // cs = hs, nlast
   34268:	add	x6, x6, #0xc
   3426c:	b	34158 <PyInit__decimal@@Base+0x19bd8>
   34270:	ldr	x3, [x2, #144]
   34274:	cmp	x0, x3
   34278:	b.cs	342b0 <PyInit__decimal@@Base+0x19d30>  // b.hs, b.nlast
   3427c:	ldr	x3, [x2, #128]
   34280:	cmp	x0, x3
   34284:	b.cs	345ec <PyInit__decimal@@Base+0x1a06c>  // b.hs, b.nlast
   34288:	ldr	x2, [x2, #120]
   3428c:	cmp	x0, x2
   34290:	cset	x3, cs  // cs = hs, nlast
   34294:	add	x3, x3, #0xe
   34298:	b	34060 <PyInit__decimal@@Base+0x19ae0>
   3429c:	ldr	x2, [x2, #24]
   342a0:	cmp	x0, x2
   342a4:	cset	x3, cs  // cs = hs, nlast
   342a8:	add	x3, x3, #0x2
   342ac:	b	34060 <PyInit__decimal@@Base+0x19ae0>
   342b0:	ldr	x2, [x2, #152]
   342b4:	cmp	x0, x2
   342b8:	cset	x3, cs  // cs = hs, nlast
   342bc:	add	x3, x3, #0x12
   342c0:	b	34060 <PyInit__decimal@@Base+0x19ae0>
   342c4:	ldr	x2, [x2, #80]
   342c8:	cmp	x0, x2
   342cc:	cset	x3, cs  // cs = hs, nlast
   342d0:	add	x3, x3, #0x9
   342d4:	b	34060 <PyInit__decimal@@Base+0x19ae0>
   342d8:	ldr	x2, [x2, #40]
   342dc:	cmp	x0, x2
   342e0:	cset	x3, cs  // cs = hs, nlast
   342e4:	add	x3, x3, #0x4
   342e8:	b	34060 <PyInit__decimal@@Base+0x19ae0>
   342ec:	ldr	x1, [x23, #144]
   342f0:	cmp	x0, x1
   342f4:	b.cs	3435c <PyInit__decimal@@Base+0x19ddc>  // b.hs, b.nlast
   342f8:	ldr	x1, [x23, #128]
   342fc:	cmp	x0, x1
   34300:	b.cs	344e8 <PyInit__decimal@@Base+0x19f68>  // b.hs, b.nlast
   34304:	ldr	x1, [x23, #120]
   34308:	cmp	x0, x1
   3430c:	cset	x6, cs  // cs = hs, nlast
   34310:	add	x6, x6, #0xf
   34314:	b	34158 <PyInit__decimal@@Base+0x19bd8>
   34318:	ldr	x1, [x23, #48]
   3431c:	cmp	x0, x1
   34320:	b.cc	344d4 <PyInit__decimal@@Base+0x19f54>  // b.lo, b.ul, b.last
   34324:	ldr	x1, [x23, #64]
   34328:	mov	x6, #0x9                   	// #9
   3432c:	cmp	x0, x1
   34330:	b.cs	34158 <PyInit__decimal@@Base+0x19bd8>  // b.hs, b.nlast
   34334:	ldr	x1, [x23, #56]
   34338:	cmp	x0, x1
   3433c:	cset	x6, cs  // cs = hs, nlast
   34340:	add	x6, x6, #0x7
   34344:	b	34158 <PyInit__decimal@@Base+0x19bd8>
   34348:	ldr	x1, [x23, #24]
   3434c:	cmp	x0, x1
   34350:	cset	x6, cs  // cs = hs, nlast
   34354:	add	x6, x6, #0x3
   34358:	b	34158 <PyInit__decimal@@Base+0x19bd8>
   3435c:	ldr	x1, [x23, #152]
   34360:	cmp	x0, x1
   34364:	cset	x6, cs  // cs = hs, nlast
   34368:	add	x6, x6, #0x13
   3436c:	b	34158 <PyInit__decimal@@Base+0x19bd8>
   34370:	ldp	x2, x0, [x25, #8]
   34374:	ldr	w3, [x21, #40]
   34378:	ldr	x1, [sp, #144]
   3437c:	str	w3, [sp, #168]
   34380:	add	x0, x2, x0
   34384:	sub	x0, x0, #0x1
   34388:	cmp	x1, x0
   3438c:	b.le	343d0 <PyInit__decimal@@Base+0x19e50>
   34390:	ldrb	w0, [x25]
   34394:	tst	w0, #0xe
   34398:	b.ne	343b0 <PyInit__decimal@@Base+0x19e30>  // b.any
   3439c:	ldr	x0, [x25, #24]
   343a0:	ldr	x3, [x25, #40]
   343a4:	add	x0, x3, x0, lsl #3
   343a8:	ldur	x0, [x0, #-8]
   343ac:	cbz	x0, 343d0 <PyInit__decimal@@Base+0x19e50>
   343b0:	ldr	x0, [sp, #128]
   343b4:	add	x1, x1, #0x1
   343b8:	sub	x1, x1, x0
   343bc:	cmp	x2, x1
   343c0:	b.ge	343d0 <PyInit__decimal@@Base+0x19e50>  // b.tcont
   343c4:	ldr	w0, [x20]
   343c8:	orr	w0, w0, #0x4000
   343cc:	str	w0, [x20]
   343d0:	mov	x0, x25
   343d4:	mov	x2, x20
   343d8:	mov	x1, x22
   343dc:	bl	2b110 <PyInit__decimal@@Base+0x10b90>
   343e0:	ldrb	w0, [sp, #176]
   343e4:	tst	w0, #0xe0
   343e8:	b.ne	34400 <PyInit__decimal@@Base+0x19e80>  // b.any
   343ec:	adrp	x1, 5f000 <PyInit__decimal@@Base+0x44a80>
   343f0:	ldr	x0, [sp, #216]
   343f4:	ldr	x1, [x1, #1704]
   343f8:	blr	x1
   343fc:	ldrb	w0, [sp, #176]
   34400:	tbnz	w0, #4, 34414 <PyInit__decimal@@Base+0x19e94>
   34404:	adrp	x1, 5f000 <PyInit__decimal@@Base+0x44a80>
   34408:	mov	x0, x28
   3440c:	ldr	x1, [x1, #1704]
   34410:	blr	x1
   34414:	ldrb	w0, [sp, #224]
   34418:	tst	w0, #0xe0
   3441c:	b.ne	34434 <PyInit__decimal@@Base+0x19eb4>  // b.any
   34420:	adrp	x1, 5f000 <PyInit__decimal@@Base+0x44a80>
   34424:	ldr	x0, [sp, #264]
   34428:	ldr	x1, [x1, #1704]
   3442c:	blr	x1
   34430:	ldrb	w0, [sp, #224]
   34434:	tbnz	w0, #4, 34448 <PyInit__decimal@@Base+0x19ec8>
   34438:	adrp	x1, 5f000 <PyInit__decimal@@Base+0x44a80>
   3443c:	mov	x0, x27
   34440:	ldr	x1, [x1, #1704]
   34444:	blr	x1
   34448:	ldrb	w0, [sp, #272]
   3444c:	tst	w0, #0xe0
   34450:	b.ne	34468 <PyInit__decimal@@Base+0x19ee8>  // b.any
   34454:	adrp	x1, 5f000 <PyInit__decimal@@Base+0x44a80>
   34458:	ldr	x0, [sp, #312]
   3445c:	ldr	x1, [x1, #1704]
   34460:	blr	x1
   34464:	ldrb	w0, [sp, #272]
   34468:	tbnz	w0, #4, 3447c <PyInit__decimal@@Base+0x19efc>
   3446c:	adrp	x1, 5f000 <PyInit__decimal@@Base+0x44a80>
   34470:	mov	x0, x24
   34474:	ldr	x1, [x1, #1704]
   34478:	blr	x1
   3447c:	ldrb	w0, [sp, #320]
   34480:	tst	w0, #0xe0
   34484:	b.ne	3449c <PyInit__decimal@@Base+0x19f1c>  // b.any
   34488:	adrp	x1, 5f000 <PyInit__decimal@@Base+0x44a80>
   3448c:	ldr	x0, [sp, #360]
   34490:	ldr	x1, [x1, #1704]
   34494:	blr	x1
   34498:	ldrb	w0, [sp, #320]
   3449c:	tbnz	w0, #4, 3458c <PyInit__decimal@@Base+0x1a00c>
   344a0:	adrp	x1, 5f000 <PyInit__decimal@@Base+0x44a80>
   344a4:	add	x0, sp, #0x140
   344a8:	ldr	x1, [x1, #1704]
   344ac:	blr	x1
   344b0:	ldp	x21, x22, [sp, #32]
   344b4:	ldp	x23, x24, [sp, #48]
   344b8:	ldp	x27, x28, [sp, #80]
   344bc:	b	33f74 <PyInit__decimal@@Base+0x199f4>
   344c0:	ldr	x1, [x23, #80]
   344c4:	cmp	x0, x1
   344c8:	cset	x6, cs  // cs = hs, nlast
   344cc:	add	x6, x6, #0xa
   344d0:	b	34158 <PyInit__decimal@@Base+0x19bd8>
   344d4:	ldr	x1, [x23, #40]
   344d8:	cmp	x0, x1
   344dc:	cset	x6, cs  // cs = hs, nlast
   344e0:	add	x6, x6, #0x5
   344e4:	b	34158 <PyInit__decimal@@Base+0x19bd8>
   344e8:	ldr	x1, [x23, #136]
   344ec:	cmp	x0, x1
   344f0:	cset	x6, cs  // cs = hs, nlast
   344f4:	add	x6, x6, #0x11
   344f8:	b	34158 <PyInit__decimal@@Base+0x19bd8>
   344fc:	mov	x1, x19
   34500:	mov	x2, x22
   34504:	mov	x0, x25
   34508:	mov	x4, x20
   3450c:	add	x3, x22, #0x10
   34510:	bl	337d8 <PyInit__decimal@@Base+0x19258>
   34514:	ldp	x2, x0, [x25, #8]
   34518:	ldr	x1, [sp, #144]
   3451c:	add	x0, x2, x0
   34520:	sub	x0, x0, #0x1
   34524:	cmp	x1, x0
   34528:	b.le	34570 <PyInit__decimal@@Base+0x19ff0>
   3452c:	ldrb	w0, [x25]
   34530:	tst	w0, #0xe
   34534:	b.ne	3454c <PyInit__decimal@@Base+0x19fcc>  // b.any
   34538:	ldr	x0, [x25, #24]
   3453c:	ldr	x3, [x25, #40]
   34540:	add	x0, x3, x0, lsl #3
   34544:	ldur	x0, [x0, #-8]
   34548:	cbz	x0, 34570 <PyInit__decimal@@Base+0x19ff0>
   3454c:	ldr	x3, [sp, #128]
   34550:	add	x0, x1, #0x1
   34554:	sub	x0, x0, x3
   34558:	cmp	x2, x0
   3455c:	b.ge	34570 <PyInit__decimal@@Base+0x19ff0>  // b.tcont
   34560:	ldr	w0, [x20]
   34564:	orr	w0, w0, #0x4000
   34568:	str	w0, [x20]
   3456c:	nop
   34570:	mov	x1, x22
   34574:	mov	x2, x20
   34578:	mov	x0, x25
   3457c:	bl	2b110 <PyInit__decimal@@Base+0x10b90>
   34580:	ldp	x21, x22, [sp, #32]
   34584:	ldp	x23, x24, [sp, #48]
   34588:	b	33f74 <PyInit__decimal@@Base+0x199f4>
   3458c:	ldp	x21, x22, [sp, #32]
   34590:	ldp	x23, x24, [sp, #48]
   34594:	ldp	x27, x28, [sp, #80]
   34598:	b	33f74 <PyInit__decimal@@Base+0x199f4>
   3459c:	ldr	w2, [x20]
   345a0:	mov	w3, #0x1840                	// #6208
   345a4:	lsr	x1, x1, #63
   345a8:	mov	x0, x25
   345ac:	orr	w2, w2, w3
   345b0:	str	w2, [x20]
   345b4:	mov	w2, #0x2                   	// #2
   345b8:	bl	28cd8 <PyInit__decimal@@Base+0xe758>
   345bc:	ldp	x21, x22, [sp, #32]
   345c0:	ldp	x23, x24, [sp, #48]
   345c4:	b	33f74 <PyInit__decimal@@Base+0x199f4>
   345c8:	add	x23, sp, #0x140
   345cc:	mov	x2, x20
   345d0:	mov	x0, x23
   345d4:	mov	x1, x19
   345d8:	bl	28fe0 <PyInit__decimal@@Base+0xea60>
   345dc:	cbz	w0, 34600 <PyInit__decimal@@Base+0x1a080>
   345e0:	mov	x19, x23
   345e4:	stp	x27, x28, [sp, #80]
   345e8:	b	340fc <PyInit__decimal@@Base+0x19b7c>
   345ec:	ldr	x2, [x2, #136]
   345f0:	cmp	x0, x2
   345f4:	cset	x3, cs  // cs = hs, nlast
   345f8:	add	x3, x3, #0x10
   345fc:	b	34060 <PyInit__decimal@@Base+0x19ae0>
   34600:	mov	x2, x20
   34604:	mov	x0, x19
   34608:	mov	w1, #0x200                 	// #512
   3460c:	bl	28d68 <PyInit__decimal@@Base+0xe7e8>
   34610:	ldp	x21, x22, [sp, #32]
   34614:	ldp	x23, x24, [sp, #48]
   34618:	b	33f74 <PyInit__decimal@@Base+0x199f4>
   3461c:	nop
   34620:	sub	sp, sp, #0x2b0
   34624:	stp	x29, x30, [sp]
   34628:	mov	x29, sp
   3462c:	stp	x19, x20, [sp, #16]
   34630:	mov	x20, x5
   34634:	mov	x19, x0
   34638:	stp	x21, x22, [sp, #32]
   3463c:	mov	x22, x1
   34640:	mov	x1, x2
   34644:	mov	x2, x5
   34648:	add	x5, sp, #0xb0
   3464c:	stp	x23, x24, [sp, #48]
   34650:	mov	x24, x4
   34654:	mov	w4, #0x30                  	// #48
   34658:	str	x25, [sp, #64]
   3465c:	mov	x25, x3
   34660:	mov	x3, #0x40                  	// #64
   34664:	add	x23, sp, #0x80
   34668:	mov	x0, x23
   3466c:	strb	w4, [sp, #128]
   34670:	stp	xzr, xzr, [sp, #136]
   34674:	str	xzr, [sp, #152]
   34678:	str	x3, [sp, #160]
   3467c:	str	x5, [sp, #168]
   34680:	bl	28fe0 <PyInit__decimal@@Base+0xea60>
   34684:	cbz	w0, 34784 <PyInit__decimal@@Base+0x1a204>
   34688:	add	x21, sp, #0x50
   3468c:	mov	x0, x21
   34690:	bl	1d4d0 <PyInit__decimal@@Base+0x2f50>
   34694:	ldr	x0, [x25]
   34698:	mov	w6, #0x6                   	// #6
   3469c:	ldr	x5, [x22, #16]
   346a0:	add	x25, x21, #0x1c
   346a4:	ldr	w4, [x24]
   346a8:	mov	x1, x22
   346ac:	cmp	x0, x5
   346b0:	mov	x2, x21
   346b4:	csel	x0, x0, x5, ge  // ge = tcont
   346b8:	mov	x3, x25
   346bc:	add	x5, x0, #0x17
   346c0:	mov	x0, x19
   346c4:	str	x5, [sp, #80]
   346c8:	str	w6, [sp, #116]
   346cc:	str	w4, [sp, #124]
   346d0:	bl	33e90 <PyInit__decimal@@Base+0x19910>
   346d4:	mov	x4, x25
   346d8:	mov	x3, x21
   346dc:	mov	x2, x23
   346e0:	mov	x1, x19
   346e4:	mov	x0, x19
   346e8:	bl	291b8 <PyInit__decimal@@Base+0xec38>
   346ec:	mov	x2, x25
   346f0:	mov	x1, x21
   346f4:	mov	x0, x19
   346f8:	bl	2b110 <PyInit__decimal@@Base+0x10b90>
   346fc:	mov	x0, x19
   34700:	mov	x3, x20
   34704:	mov	x2, x21
   34708:	mov	x1, x19
   3470c:	bl	32668 <PyInit__decimal@@Base+0x180e8>
   34710:	ldrb	w0, [sp, #128]
   34714:	tst	w0, #0xe0
   34718:	b.ne	34730 <PyInit__decimal@@Base+0x1a1b0>  // b.any
   3471c:	adrp	x1, 5f000 <PyInit__decimal@@Base+0x44a80>
   34720:	ldr	x0, [sp, #168]
   34724:	ldr	x1, [x1, #1704]
   34728:	blr	x1
   3472c:	ldrb	w0, [sp, #128]
   34730:	tbz	w0, #4, 34770 <PyInit__decimal@@Base+0x1a1f0>
   34734:	ldr	w0, [sp, #108]
   34738:	mov	w3, #0x3be                 	// #958
   3473c:	ldr	w2, [x20]
   34740:	mov	w1, #0x1040                	// #4160
   34744:	and	w0, w0, w3
   34748:	orr	w0, w0, w2
   3474c:	orr	w0, w0, w1
   34750:	str	w0, [x20]
   34754:	ldp	x29, x30, [sp]
   34758:	ldp	x19, x20, [sp, #16]
   3475c:	ldp	x21, x22, [sp, #32]
   34760:	ldp	x23, x24, [sp, #48]
   34764:	ldr	x25, [sp, #64]
   34768:	add	sp, sp, #0x2b0
   3476c:	ret
   34770:	adrp	x1, 5f000 <PyInit__decimal@@Base+0x44a80>
   34774:	mov	x0, x23
   34778:	ldr	x1, [x1, #1704]
   3477c:	blr	x1
   34780:	b	34734 <PyInit__decimal@@Base+0x1a1b4>
   34784:	mov	x2, x20
   34788:	mov	x0, x19
   3478c:	mov	w1, #0x200                 	// #512
   34790:	bl	28d68 <PyInit__decimal@@Base+0xe7e8>
   34794:	ldp	x29, x30, [sp]
   34798:	ldp	x19, x20, [sp, #16]
   3479c:	ldp	x21, x22, [sp, #32]
   347a0:	ldp	x23, x24, [sp, #48]
   347a4:	ldr	x25, [sp, #64]
   347a8:	add	sp, sp, #0x2b0
   347ac:	ret
   347b0:	sub	sp, sp, #0x2b0
   347b4:	stp	x29, x30, [sp]
   347b8:	mov	x29, sp
   347bc:	stp	x21, x22, [sp, #32]
   347c0:	mov	x21, x1
   347c4:	add	x1, sp, #0xb0
   347c8:	stp	x19, x20, [sp, #16]
   347cc:	mov	x20, x3
   347d0:	mov	w3, #0x30                  	// #48
   347d4:	stp	x23, x24, [sp, #48]
   347d8:	mov	x23, x2
   347dc:	mov	x2, #0x40                  	// #64
   347e0:	str	x25, [sp, #64]
   347e4:	add	x25, sp, #0x50
   347e8:	mov	x19, x4
   347ec:	mov	w22, w0
   347f0:	mov	x0, x25
   347f4:	strb	w3, [sp, #128]
   347f8:	stp	xzr, xzr, [sp, #136]
   347fc:	add	x24, sp, #0x80
   34800:	stp	xzr, x2, [sp, #152]
   34804:	str	x1, [sp, #168]
   34808:	bl	1d4d0 <PyInit__decimal@@Base+0x2f50>
   3480c:	ldr	x5, [x20]
   34810:	mov	x1, x23
   34814:	mov	x4, x19
   34818:	mov	x0, x21
   3481c:	add	x5, x5, #0x3
   34820:	add	x3, x25, #0x10
   34824:	mov	x2, x25
   34828:	str	x5, [sp, #80]
   3482c:	bl	337d8 <PyInit__decimal@@Base+0x19258>
   34830:	ldr	x1, [sp, #80]
   34834:	mov	x2, x19
   34838:	mov	x0, x24
   3483c:	bl	32c78 <PyInit__decimal@@Base+0x186f8>
   34840:	cmp	w22, #0x1
   34844:	b.ne	34868 <PyInit__decimal@@Base+0x1a2e8>  // b.any
   34848:	ldp	x0, x1, [x20, #32]
   3484c:	stp	x0, x1, [sp, #112]
   34850:	ldp	x2, x3, [x20]
   34854:	stp	x2, x3, [sp, #80]
   34858:	mov	w0, #0x6                   	// #6
   3485c:	ldp	x2, x3, [x20, #16]
   34860:	stp	x2, x3, [sp, #96]
   34864:	str	w0, [sp, #116]
   34868:	mov	w0, #0x0                   	// #0
   3486c:	mov	x5, x19
   34870:	mov	x4, x25
   34874:	mov	x3, x24
   34878:	mov	x2, x21
   3487c:	mov	x1, x21
   34880:	bl	2f2b8 <PyInit__decimal@@Base+0x14d38>
   34884:	ldrb	w0, [sp, #128]
   34888:	tst	w0, #0xe0
   3488c:	b.ne	348a4 <PyInit__decimal@@Base+0x1a324>  // b.any
   34890:	adrp	x1, 5f000 <PyInit__decimal@@Base+0x44a80>
   34894:	ldr	x0, [sp, #168]
   34898:	ldr	x1, [x1, #1704]
   3489c:	blr	x1
   348a0:	ldrb	w0, [sp, #128]
   348a4:	tbnz	w0, #4, 348b8 <PyInit__decimal@@Base+0x1a338>
   348a8:	adrp	x1, 5f000 <PyInit__decimal@@Base+0x44a80>
   348ac:	mov	x0, x24
   348b0:	ldr	x1, [x1, #1704]
   348b4:	blr	x1
   348b8:	ldp	x29, x30, [sp]
   348bc:	ldp	x19, x20, [sp, #16]
   348c0:	ldp	x21, x22, [sp, #32]
   348c4:	ldp	x23, x24, [sp, #48]
   348c8:	ldr	x25, [sp, #64]
   348cc:	add	sp, sp, #0x2b0
   348d0:	ret
   348d4:	nop
   348d8:	sub	sp, sp, #0x960
   348dc:	mov	w7, #0x6                   	// #6
   348e0:	stp	x29, x30, [sp]
   348e4:	mov	x29, sp
   348e8:	ldp	x8, x9, [x2, #32]
   348ec:	stp	x19, x20, [sp, #16]
   348f0:	mov	x19, x1
   348f4:	stp	x27, x28, [sp, #80]
   348f8:	mov	x20, x3
   348fc:	mov	x28, x0
   34900:	stp	x8, x9, [sp, #144]
   34904:	ldrb	w4, [x1]
   34908:	ldp	x8, x9, [x2]
   3490c:	stp	x8, x9, [sp, #112]
   34910:	tst	w4, #0xe
   34914:	ldp	x8, x9, [x2, #16]
   34918:	stp	x8, x9, [sp, #128]
   3491c:	str	w7, [sp, #148]
   34920:	b.ne	349e0 <PyInit__decimal@@Base+0x1a460>  // b.any
   34924:	stp	x23, x24, [sp, #48]
   34928:	mov	x24, x2
   3492c:	ldr	x2, [x1, #24]
   34930:	ldr	x8, [x1, #40]
   34934:	add	x1, x8, x2, lsl #3
   34938:	ldur	x3, [x1, #-8]
   3493c:	cbz	x3, 34b68 <PyInit__decimal@@Base+0x1a5e8>
   34940:	and	w1, w4, #0x1
   34944:	tbnz	w4, #0, 34a6c <PyInit__decimal@@Base+0x1a4ec>
   34948:	adrp	x23, 42000 <PyInit__decimal@@Base+0x27a80>
   3494c:	add	x4, x23, #0x2d0
   34950:	ldr	x0, [x4, #72]
   34954:	str	x0, [sp, #104]
   34958:	cmp	x3, x0
   3495c:	b.cs	34a14 <PyInit__decimal@@Base+0x1a494>  // b.hs, b.nlast
   34960:	ldr	x0, [x4, #32]
   34964:	cmp	x3, x0
   34968:	b.cs	34a74 <PyInit__decimal@@Base+0x1a4f4>  // b.hs, b.nlast
   3496c:	ldr	x0, [x4, #16]
   34970:	cmp	x3, x0
   34974:	b.cs	34ddc <PyInit__decimal@@Base+0x1a85c>  // b.hs, b.nlast
   34978:	ldr	x0, [x4, #8]
   3497c:	ldr	x4, [x23, #720]
   34980:	cmp	x3, x0
   34984:	csel	x0, x4, x0, cc  // cc = lo, ul, last
   34988:	cmp	x3, x0
   3498c:	b.eq	34ac4 <PyInit__decimal@@Base+0x1a544>  // b.none
   34990:	ldp	x0, x1, [x19, #8]
   34994:	ldr	x2, [sp, #104]
   34998:	add	x0, x0, x1
   3499c:	subs	x1, x0, #0x1
   349a0:	csel	x0, x0, x1, mi  // mi = first
   349a4:	cmp	x0, #0x0
   349a8:	cneg	x0, x0, lt  // lt = tstop
   349ac:	cmp	x2, x0
   349b0:	b.ls	34b28 <PyInit__decimal@@Base+0x1a5a8>  // b.plast
   349b4:	add	x3, x23, #0x2d0
   349b8:	ldr	x2, [x3, #32]
   349bc:	cmp	x0, x2
   349c0:	b.cs	34b8c <PyInit__decimal@@Base+0x1a60c>  // b.hs, b.nlast
   349c4:	ldr	x2, [x3, #16]
   349c8:	cmp	x0, x2
   349cc:	b.cs	34e00 <PyInit__decimal@@Base+0x1a880>  // b.hs, b.nlast
   349d0:	ldr	x2, [x3, #8]
   349d4:	cmp	x0, x2
   349d8:	cset	x2, cs  // cs = hs, nlast
   349dc:	b	34bb8 <PyInit__decimal@@Base+0x1a638>
   349e0:	bl	29098 <PyInit__decimal@@Base+0xeb18>
   349e4:	cbnz	w0, 34a00 <PyInit__decimal@@Base+0x1a480>
   349e8:	ldrb	w0, [x19]
   349ec:	tbz	w0, #0, 34a48 <PyInit__decimal@@Base+0x1a4c8>
   349f0:	mov	x2, x20
   349f4:	mov	x0, x28
   349f8:	mov	w1, #0x100                 	// #256
   349fc:	bl	28d68 <PyInit__decimal@@Base+0xe7e8>
   34a00:	ldp	x29, x30, [sp]
   34a04:	ldp	x19, x20, [sp, #16]
   34a08:	ldp	x27, x28, [sp, #80]
   34a0c:	add	sp, sp, #0x960
   34a10:	ret
   34a14:	ldr	x7, [x4, #112]
   34a18:	cmp	x3, x7
   34a1c:	b.cs	34a9c <PyInit__decimal@@Base+0x1a51c>  // b.hs, b.nlast
   34a20:	ldr	x7, [x4, #88]
   34a24:	cmp	x3, x7
   34a28:	b.cc	35124 <PyInit__decimal@@Base+0x1aba4>  // b.lo, b.ul, b.last
   34a2c:	ldr	x0, [x4, #104]
   34a30:	cmp	x3, x0
   34a34:	b.cs	34988 <PyInit__decimal@@Base+0x1a408>  // b.hs, b.nlast
   34a38:	ldr	x0, [x4, #96]
   34a3c:	cmp	x3, x0
   34a40:	csel	x0, x0, x7, cs  // cs = hs, nlast
   34a44:	b	34988 <PyInit__decimal@@Base+0x1a408>
   34a48:	mov	x0, x28
   34a4c:	mov	w2, #0x2                   	// #2
   34a50:	mov	w1, #0x0                   	// #0
   34a54:	bl	28cd8 <PyInit__decimal@@Base+0xe758>
   34a58:	ldp	x29, x30, [sp]
   34a5c:	ldp	x19, x20, [sp, #16]
   34a60:	ldp	x27, x28, [sp, #80]
   34a64:	add	sp, sp, #0x960
   34a68:	ret
   34a6c:	ldp	x23, x24, [sp, #48]
   34a70:	b	349f0 <PyInit__decimal@@Base+0x1a470>
   34a74:	ldr	x7, [x4, #48]
   34a78:	cmp	x3, x7
   34a7c:	b.cc	35114 <PyInit__decimal@@Base+0x1ab94>  // b.lo, b.ul, b.last
   34a80:	ldr	x0, [x4, #64]
   34a84:	cmp	x3, x0
   34a88:	b.cs	34988 <PyInit__decimal@@Base+0x1a408>  // b.hs, b.nlast
   34a8c:	ldr	x0, [x4, #56]
   34a90:	cmp	x3, x0
   34a94:	csel	x0, x0, x7, cs  // cs = hs, nlast
   34a98:	b	34988 <PyInit__decimal@@Base+0x1a408>
   34a9c:	ldr	x0, [x4, #144]
   34aa0:	cmp	x3, x0
   34aa4:	b.cs	34dcc <PyInit__decimal@@Base+0x1a84c>  // b.hs, b.nlast
   34aa8:	ldr	x0, [x4, #128]
   34aac:	cmp	x3, x0
   34ab0:	b.cs	34e14 <PyInit__decimal@@Base+0x1a894>  // b.hs, b.nlast
   34ab4:	ldr	x0, [x4, #120]
   34ab8:	cmp	x3, x0
   34abc:	csel	x0, x0, x7, cs  // cs = hs, nlast
   34ac0:	b	34988 <PyInit__decimal@@Base+0x1a408>
   34ac4:	sub	x0, x2, #0x1
   34ac8:	b	34ad4 <PyInit__decimal@@Base+0x1a554>
   34acc:	ldr	x2, [x8, x0, lsl #3]
   34ad0:	cbnz	x2, 34990 <PyInit__decimal@@Base+0x1a410>
   34ad4:	subs	x0, x0, #0x1
   34ad8:	b.pl	34acc <PyInit__decimal@@Base+0x1a54c>  // b.nfrst
   34adc:	ldp	x0, x2, [x19, #8]
   34ae0:	add	x0, x0, x2
   34ae4:	subs	x2, x0, #0x1
   34ae8:	b.pl	34af4 <PyInit__decimal@@Base+0x1a574>  // b.nfrst
   34aec:	mov	x1, #0x1                   	// #1
   34af0:	sub	x2, x1, x0
   34af4:	mov	x3, #0x0                   	// #0
   34af8:	mov	x0, x28
   34afc:	bl	26d90 <PyInit__decimal@@Base+0xc810>
   34b00:	mov	x2, x20
   34b04:	mov	x0, x28
   34b08:	add	x1, sp, #0x70
   34b0c:	bl	2b110 <PyInit__decimal@@Base+0x10b90>
   34b10:	ldp	x29, x30, [sp]
   34b14:	ldp	x19, x20, [sp, #16]
   34b18:	ldp	x23, x24, [sp, #48]
   34b1c:	ldp	x27, x28, [sp, #80]
   34b20:	add	sp, sp, #0x960
   34b24:	ret
   34b28:	add	x3, x23, #0x2d0
   34b2c:	ldr	x2, [x3, #112]
   34b30:	cmp	x0, x2
   34b34:	b.cs	34da0 <PyInit__decimal@@Base+0x1a820>  // b.hs, b.nlast
   34b38:	ldr	x2, [x3, #88]
   34b3c:	cmp	x0, x2
   34b40:	b.cc	34e24 <PyInit__decimal@@Base+0x1a8a4>  // b.lo, b.ul, b.last
   34b44:	ldr	x4, [x3, #104]
   34b48:	mov	x2, #0xd                   	// #13
   34b4c:	cmp	x0, x4
   34b50:	b.cs	34bb8 <PyInit__decimal@@Base+0x1a638>  // b.hs, b.nlast
   34b54:	ldr	x2, [x3, #96]
   34b58:	cmp	x0, x2
   34b5c:	cset	x2, cs  // cs = hs, nlast
   34b60:	add	x2, x2, #0xb
   34b64:	b	34bb8 <PyInit__decimal@@Base+0x1a638>
   34b68:	mov	w2, #0x2                   	// #2
   34b6c:	mov	w1, #0x1                   	// #1
   34b70:	bl	28cd8 <PyInit__decimal@@Base+0xe758>
   34b74:	ldp	x29, x30, [sp]
   34b78:	ldp	x19, x20, [sp, #16]
   34b7c:	ldp	x23, x24, [sp, #48]
   34b80:	ldp	x27, x28, [sp, #80]
   34b84:	add	sp, sp, #0x960
   34b88:	ret
   34b8c:	ldr	x2, [x3, #48]
   34b90:	cmp	x0, x2
   34b94:	b.cc	34e38 <PyInit__decimal@@Base+0x1a8b8>  // b.lo, b.ul, b.last
   34b98:	ldr	x4, [x3, #64]
   34b9c:	mov	x2, #0x8                   	// #8
   34ba0:	cmp	x0, x4
   34ba4:	b.cs	34bb8 <PyInit__decimal@@Base+0x1a638>  // b.hs, b.nlast
   34ba8:	ldr	x2, [x3, #56]
   34bac:	cmp	x0, x2
   34bb0:	cset	x2, cs  // cs = hs, nlast
   34bb4:	add	x2, x2, #0x6
   34bb8:	ldr	x0, [x24, #8]
   34bbc:	cmp	x0, x2
   34bc0:	b.lt	350ec <PyInit__decimal@@Base+0x1ab6c>  // b.tstop
   34bc4:	ldr	w0, [x24, #44]
   34bc8:	cbz	w0, 3505c <PyInit__decimal@@Base+0x1aadc>
   34bcc:	mov	w1, #0x30                  	// #48
   34bd0:	mov	x0, #0x40                  	// #64
   34bd4:	add	x7, sp, #0x160
   34bd8:	add	x4, sp, #0x360
   34bdc:	add	x3, sp, #0x560
   34be0:	add	x2, sp, #0x760
   34be4:	stp	x21, x22, [sp, #32]
   34be8:	cmp	x19, x28
   34bec:	strb	w1, [sp, #160]
   34bf0:	stp	xzr, xzr, [sp, #168]
   34bf4:	stp	xzr, x0, [sp, #184]
   34bf8:	str	x7, [sp, #200]
   34bfc:	strb	w1, [sp, #208]
   34c00:	stp	xzr, xzr, [sp, #216]
   34c04:	stp	xzr, x0, [sp, #232]
   34c08:	str	x4, [sp, #248]
   34c0c:	strb	w1, [sp, #256]
   34c10:	stp	xzr, xzr, [sp, #264]
   34c14:	stp	xzr, x0, [sp, #280]
   34c18:	str	x3, [sp, #296]
   34c1c:	strb	w1, [sp, #304]
   34c20:	stp	xzr, xzr, [sp, #312]
   34c24:	stp	xzr, x0, [sp, #328]
   34c28:	str	x2, [sp, #344]
   34c2c:	b.eq	35138 <PyInit__decimal@@Base+0x1abb8>  // b.none
   34c30:	stp	x25, x26, [sp, #64]
   34c34:	add	x21, sp, #0x70
   34c38:	ldr	x0, [x24]
   34c3c:	add	x22, x23, #0x2d0
   34c40:	add	x25, x21, #0x1c
   34c44:	add	x23, sp, #0x100
   34c48:	add	x0, x0, #0x3
   34c4c:	add	x27, sp, #0xa0
   34c50:	add	x26, sp, #0xd0
   34c54:	str	x0, [sp, #96]
   34c58:	str	wzr, [sp, #152]
   34c5c:	b	34d04 <PyInit__decimal@@Base+0x1a784>
   34c60:	ldr	x1, [x22, #32]
   34c64:	cmp	x0, x1
   34c68:	b.cs	34e4c <PyInit__decimal@@Base+0x1a8cc>  // b.hs, b.nlast
   34c6c:	ldr	x1, [x22, #16]
   34c70:	cmp	x0, x1
   34c74:	b.cs	34ea8 <PyInit__decimal@@Base+0x1a928>  // b.hs, b.nlast
   34c78:	ldr	x1, [x22, #8]
   34c7c:	cmp	x0, x1
   34c80:	cset	x8, cs  // cs = hs, nlast
   34c84:	add	x8, x8, #0x1
   34c88:	ldr	x9, [x24]
   34c8c:	mov	x4, x25
   34c90:	mov	x3, x21
   34c94:	mov	x2, x23
   34c98:	mov	x1, x28
   34c9c:	mov	x0, x27
   34ca0:	str	x9, [sp, #112]
   34ca4:	str	x8, [sp, #272]
   34ca8:	bl	2e488 <PyInit__decimal@@Base+0x13f08>
   34cac:	mov	x0, x26
   34cb0:	mov	x4, x25
   34cb4:	mov	x3, x21
   34cb8:	mov	x2, x23
   34cbc:	mov	x1, x28
   34cc0:	bl	2e5c0 <PyInit__decimal@@Base+0x14040>
   34cc4:	ldrb	w0, [x28]
   34cc8:	tst	w0, #0xe
   34ccc:	b.ne	34ed0 <PyInit__decimal@@Base+0x1a950>  // b.any
   34cd0:	ldr	x0, [x28, #24]
   34cd4:	ldr	x1, [x28, #40]
   34cd8:	add	x0, x1, x0, lsl #3
   34cdc:	ldur	x0, [x0, #-8]
   34ce0:	cbz	x0, 34ed0 <PyInit__decimal@@Base+0x1a950>
   34ce4:	mov	x2, x20
   34ce8:	mov	x1, x26
   34cec:	mov	x0, x27
   34cf0:	bl	29eb8 <PyInit__decimal@@Base+0xf938>
   34cf4:	cbz	w0, 34ed0 <PyInit__decimal@@Base+0x1a950>
   34cf8:	ldr	x0, [sp, #96]
   34cfc:	add	x0, x0, #0x13
   34d00:	str	x0, [sp, #96]
   34d04:	ldr	x5, [sp, #96]
   34d08:	mov	x3, x21
   34d0c:	mov	x2, x19
   34d10:	mov	x1, x28
   34d14:	mov	w0, #0x0                   	// #0
   34d18:	mov	x4, x20
   34d1c:	str	x5, [sp, #112]
   34d20:	bl	347b0 <PyInit__decimal@@Base+0x1a230>
   34d24:	ldp	x0, x3, [x28, #8]
   34d28:	ldrb	w1, [sp, #256]
   34d2c:	ldr	x2, [sp, #112]
   34d30:	and	w1, w1, #0xfffffff0
   34d34:	strb	w1, [sp, #256]
   34d38:	ldr	x1, [sp, #296]
   34d3c:	add	x0, x0, x3
   34d40:	sub	x0, x0, x2
   34d44:	str	x0, [sp, #264]
   34d48:	mov	x0, #0x1                   	// #1
   34d4c:	stp	x0, xzr, [x1]
   34d50:	str	x0, [sp, #280]
   34d54:	ldr	x0, [x1]
   34d58:	ldr	x1, [sp, #104]
   34d5c:	cmp	x1, x0
   34d60:	b.hi	34c60 <PyInit__decimal@@Base+0x1a6e0>  // b.pmore
   34d64:	ldr	x1, [x22, #112]
   34d68:	cmp	x0, x1
   34d6c:	b.cs	34e7c <PyInit__decimal@@Base+0x1a8fc>  // b.hs, b.nlast
   34d70:	ldr	x1, [x22, #88]
   34d74:	cmp	x0, x1
   34d78:	b.cc	35020 <PyInit__decimal@@Base+0x1aaa0>  // b.lo, b.ul, b.last
   34d7c:	ldr	x1, [x22, #104]
   34d80:	mov	x8, #0xe                   	// #14
   34d84:	cmp	x0, x1
   34d88:	b.cs	34c88 <PyInit__decimal@@Base+0x1a708>  // b.hs, b.nlast
   34d8c:	ldr	x1, [x22, #96]
   34d90:	cmp	x0, x1
   34d94:	cset	x8, cs  // cs = hs, nlast
   34d98:	add	x8, x8, #0xc
   34d9c:	b	34c88 <PyInit__decimal@@Base+0x1a708>
   34da0:	ldr	x2, [x3, #144]
   34da4:	cmp	x0, x2
   34da8:	b.cs	34dec <PyInit__decimal@@Base+0x1a86c>  // b.hs, b.nlast
   34dac:	ldr	x2, [x3, #128]
   34db0:	cmp	x0, x2
   34db4:	b.cs	3515c <PyInit__decimal@@Base+0x1abdc>  // b.hs, b.nlast
   34db8:	ldr	x2, [x3, #120]
   34dbc:	cmp	x0, x2
   34dc0:	cset	x2, cs  // cs = hs, nlast
   34dc4:	add	x2, x2, #0xe
   34dc8:	b	34bb8 <PyInit__decimal@@Base+0x1a638>
   34dcc:	ldr	x4, [x4, #152]
   34dd0:	cmp	x3, x4
   34dd4:	csel	x0, x0, x4, cc  // cc = lo, ul, last
   34dd8:	b	34988 <PyInit__decimal@@Base+0x1a408>
   34ddc:	ldr	x4, [x4, #24]
   34de0:	cmp	x3, x4
   34de4:	csel	x0, x0, x4, cc  // cc = lo, ul, last
   34de8:	b	34988 <PyInit__decimal@@Base+0x1a408>
   34dec:	ldr	x2, [x3, #152]
   34df0:	cmp	x0, x2
   34df4:	cset	x2, cs  // cs = hs, nlast
   34df8:	add	x2, x2, #0x12
   34dfc:	b	34bb8 <PyInit__decimal@@Base+0x1a638>
   34e00:	ldr	x2, [x3, #24]
   34e04:	cmp	x0, x2
   34e08:	cset	x2, cs  // cs = hs, nlast
   34e0c:	add	x2, x2, #0x2
   34e10:	b	34bb8 <PyInit__decimal@@Base+0x1a638>
   34e14:	ldr	x4, [x4, #136]
   34e18:	cmp	x3, x4
   34e1c:	csel	x0, x0, x4, cc  // cc = lo, ul, last
   34e20:	b	34988 <PyInit__decimal@@Base+0x1a408>
   34e24:	ldr	x2, [x3, #80]
   34e28:	cmp	x0, x2
   34e2c:	cset	x2, cs  // cs = hs, nlast
   34e30:	add	x2, x2, #0x9
   34e34:	b	34bb8 <PyInit__decimal@@Base+0x1a638>
   34e38:	ldr	x2, [x3, #40]
   34e3c:	cmp	x0, x2
   34e40:	cset	x2, cs  // cs = hs, nlast
   34e44:	add	x2, x2, #0x4
   34e48:	b	34bb8 <PyInit__decimal@@Base+0x1a638>
   34e4c:	ldr	x1, [x22, #48]
   34e50:	cmp	x0, x1
   34e54:	b.cc	35034 <PyInit__decimal@@Base+0x1aab4>  // b.lo, b.ul, b.last
   34e58:	ldr	x1, [x22, #64]
   34e5c:	mov	x8, #0x9                   	// #9
   34e60:	cmp	x0, x1
   34e64:	b.cs	34c88 <PyInit__decimal@@Base+0x1a708>  // b.hs, b.nlast
   34e68:	ldr	x1, [x22, #56]
   34e6c:	cmp	x0, x1
   34e70:	cset	x8, cs  // cs = hs, nlast
   34e74:	add	x8, x8, #0x7
   34e78:	b	34c88 <PyInit__decimal@@Base+0x1a708>
   34e7c:	ldr	x1, [x22, #144]
   34e80:	cmp	x0, x1
   34e84:	b.cs	34ebc <PyInit__decimal@@Base+0x1a93c>  // b.hs, b.nlast
   34e88:	ldr	x1, [x22, #128]
   34e8c:	cmp	x0, x1
   34e90:	b.cs	35048 <PyInit__decimal@@Base+0x1aac8>  // b.hs, b.nlast
   34e94:	ldr	x1, [x22, #120]
   34e98:	cmp	x0, x1
   34e9c:	cset	x8, cs  // cs = hs, nlast
   34ea0:	add	x8, x8, #0xf
   34ea4:	b	34c88 <PyInit__decimal@@Base+0x1a708>
   34ea8:	ldr	x1, [x22, #24]
   34eac:	cmp	x0, x1
   34eb0:	cset	x8, cs  // cs = hs, nlast
   34eb4:	add	x8, x8, #0x3
   34eb8:	b	34c88 <PyInit__decimal@@Base+0x1a708>
   34ebc:	ldr	x1, [x22, #152]
   34ec0:	cmp	x0, x1
   34ec4:	cset	x8, cs  // cs = hs, nlast
   34ec8:	add	x8, x8, #0x13
   34ecc:	b	34c88 <PyInit__decimal@@Base+0x1a708>
   34ed0:	ldp	x2, x0, [x28, #8]
   34ed4:	ldr	w3, [x24, #40]
   34ed8:	ldr	x1, [sp, #128]
   34edc:	str	w3, [sp, #152]
   34ee0:	add	x0, x2, x0
   34ee4:	sub	x0, x0, #0x1
   34ee8:	cmp	x1, x0
   34eec:	b.le	34f30 <PyInit__decimal@@Base+0x1a9b0>
   34ef0:	ldrb	w0, [x28]
   34ef4:	tst	w0, #0xe
   34ef8:	b.ne	34f10 <PyInit__decimal@@Base+0x1a990>  // b.any
   34efc:	ldr	x0, [x28, #24]
   34f00:	ldr	x3, [x28, #40]
   34f04:	add	x0, x3, x0, lsl #3
   34f08:	ldur	x0, [x0, #-8]
   34f0c:	cbz	x0, 34f30 <PyInit__decimal@@Base+0x1a9b0>
   34f10:	ldr	x0, [sp, #112]
   34f14:	add	x1, x1, #0x1
   34f18:	sub	x1, x1, x0
   34f1c:	cmp	x2, x1
   34f20:	b.ge	34f30 <PyInit__decimal@@Base+0x1a9b0>  // b.tcont
   34f24:	ldr	w0, [x20]
   34f28:	orr	w0, w0, #0x4000
   34f2c:	str	w0, [x20]
   34f30:	mov	x0, x28
   34f34:	mov	x2, x20
   34f38:	mov	x1, x21
   34f3c:	bl	2b110 <PyInit__decimal@@Base+0x10b90>
   34f40:	ldrb	w0, [sp, #160]
   34f44:	tst	w0, #0xe0
   34f48:	b.ne	34f60 <PyInit__decimal@@Base+0x1a9e0>  // b.any
   34f4c:	adrp	x1, 5f000 <PyInit__decimal@@Base+0x44a80>
   34f50:	ldr	x0, [sp, #200]
   34f54:	ldr	x1, [x1, #1704]
   34f58:	blr	x1
   34f5c:	ldrb	w0, [sp, #160]
   34f60:	tbnz	w0, #4, 34f74 <PyInit__decimal@@Base+0x1a9f4>
   34f64:	adrp	x1, 5f000 <PyInit__decimal@@Base+0x44a80>
   34f68:	mov	x0, x27
   34f6c:	ldr	x1, [x1, #1704]
   34f70:	blr	x1
   34f74:	ldrb	w0, [sp, #208]
   34f78:	tst	w0, #0xe0
   34f7c:	b.ne	34f94 <PyInit__decimal@@Base+0x1aa14>  // b.any
   34f80:	adrp	x1, 5f000 <PyInit__decimal@@Base+0x44a80>
   34f84:	ldr	x0, [sp, #248]
   34f88:	ldr	x1, [x1, #1704]
   34f8c:	blr	x1
   34f90:	ldrb	w0, [sp, #208]
   34f94:	tbnz	w0, #4, 34fa8 <PyInit__decimal@@Base+0x1aa28>
   34f98:	adrp	x1, 5f000 <PyInit__decimal@@Base+0x44a80>
   34f9c:	mov	x0, x26
   34fa0:	ldr	x1, [x1, #1704]
   34fa4:	blr	x1
   34fa8:	ldrb	w0, [sp, #256]
   34fac:	tst	w0, #0xe0
   34fb0:	b.ne	34fc8 <PyInit__decimal@@Base+0x1aa48>  // b.any
   34fb4:	adrp	x1, 5f000 <PyInit__decimal@@Base+0x44a80>
   34fb8:	ldr	x0, [sp, #296]
   34fbc:	ldr	x1, [x1, #1704]
   34fc0:	blr	x1
   34fc4:	ldrb	w0, [sp, #256]
   34fc8:	tbnz	w0, #4, 34fdc <PyInit__decimal@@Base+0x1aa5c>
   34fcc:	adrp	x1, 5f000 <PyInit__decimal@@Base+0x44a80>
   34fd0:	mov	x0, x23
   34fd4:	ldr	x1, [x1, #1704]
   34fd8:	blr	x1
   34fdc:	ldrb	w0, [sp, #304]
   34fe0:	tst	w0, #0xe0
   34fe4:	b.ne	34ffc <PyInit__decimal@@Base+0x1aa7c>  // b.any
   34fe8:	adrp	x1, 5f000 <PyInit__decimal@@Base+0x44a80>
   34fec:	ldr	x0, [sp, #344]
   34ff0:	ldr	x1, [x1, #1704]
   34ff4:	blr	x1
   34ff8:	ldrb	w0, [sp, #304]
   34ffc:	tbnz	w0, #4, 350d4 <PyInit__decimal@@Base+0x1ab54>
   35000:	adrp	x1, 5f000 <PyInit__decimal@@Base+0x44a80>
   35004:	add	x0, sp, #0x130
   35008:	ldr	x1, [x1, #1704]
   3500c:	blr	x1
   35010:	ldp	x21, x22, [sp, #32]
   35014:	ldp	x23, x24, [sp, #48]
   35018:	ldp	x25, x26, [sp, #64]
   3501c:	b	34a00 <PyInit__decimal@@Base+0x1a480>
   35020:	ldr	x1, [x22, #80]
   35024:	cmp	x0, x1
   35028:	cset	x8, cs  // cs = hs, nlast
   3502c:	add	x8, x8, #0xa
   35030:	b	34c88 <PyInit__decimal@@Base+0x1a708>
   35034:	ldr	x1, [x22, #40]
   35038:	cmp	x0, x1
   3503c:	cset	x8, cs  // cs = hs, nlast
   35040:	add	x8, x8, #0x5
   35044:	b	34c88 <PyInit__decimal@@Base+0x1a708>
   35048:	ldr	x1, [x22, #136]
   3504c:	cmp	x0, x1
   35050:	cset	x8, cs  // cs = hs, nlast
   35054:	add	x8, x8, #0x11
   35058:	b	34c88 <PyInit__decimal@@Base+0x1a708>
   3505c:	mov	x2, x19
   35060:	mov	x1, x28
   35064:	mov	w0, #0x1                   	// #1
   35068:	mov	x4, x20
   3506c:	add	x3, sp, #0x70
   35070:	bl	347b0 <PyInit__decimal@@Base+0x1a230>
   35074:	ldp	x2, x0, [x28, #8]
   35078:	ldr	x1, [sp, #128]
   3507c:	add	x0, x2, x0
   35080:	sub	x0, x0, #0x1
   35084:	cmp	x1, x0
   35088:	b.le	350e4 <PyInit__decimal@@Base+0x1ab64>
   3508c:	ldrb	w0, [x28]
   35090:	tst	w0, #0xe
   35094:	b.ne	350ac <PyInit__decimal@@Base+0x1ab2c>  // b.any
   35098:	ldr	x0, [x28, #24]
   3509c:	ldr	x3, [x28, #40]
   350a0:	add	x0, x3, x0, lsl #3
   350a4:	ldur	x0, [x0, #-8]
   350a8:	cbz	x0, 350e4 <PyInit__decimal@@Base+0x1ab64>
   350ac:	ldr	x3, [sp, #112]
   350b0:	add	x0, x1, #0x1
   350b4:	sub	x0, x0, x3
   350b8:	cmp	x2, x0
   350bc:	b.ge	350e4 <PyInit__decimal@@Base+0x1ab64>  // b.tcont
   350c0:	ldr	w0, [x20]
   350c4:	ldp	x23, x24, [sp, #48]
   350c8:	orr	w0, w0, #0x4000
   350cc:	str	w0, [x20]
   350d0:	b	34a00 <PyInit__decimal@@Base+0x1a480>
   350d4:	ldp	x21, x22, [sp, #32]
   350d8:	ldp	x23, x24, [sp, #48]
   350dc:	ldp	x25, x26, [sp, #64]
   350e0:	b	34a00 <PyInit__decimal@@Base+0x1a480>
   350e4:	ldp	x23, x24, [sp, #48]
   350e8:	b	34a00 <PyInit__decimal@@Base+0x1a480>
   350ec:	ldr	w2, [x20]
   350f0:	mov	w3, #0x1840                	// #6208
   350f4:	lsr	x1, x1, #63
   350f8:	mov	x0, x28
   350fc:	orr	w2, w2, w3
   35100:	str	w2, [x20]
   35104:	mov	w2, #0x2                   	// #2
   35108:	bl	28cd8 <PyInit__decimal@@Base+0xe758>
   3510c:	ldp	x23, x24, [sp, #48]
   35110:	b	34a00 <PyInit__decimal@@Base+0x1a480>
   35114:	ldr	x4, [x4, #40]
   35118:	cmp	x3, x4
   3511c:	csel	x0, x0, x4, cc  // cc = lo, ul, last
   35120:	b	34988 <PyInit__decimal@@Base+0x1a408>
   35124:	ldr	x0, [x4, #80]
   35128:	ldr	x4, [sp, #104]
   3512c:	cmp	x3, x0
   35130:	csel	x0, x0, x4, cs  // cs = hs, nlast
   35134:	b	34988 <PyInit__decimal@@Base+0x1a408>
   35138:	add	x21, sp, #0x130
   3513c:	mov	x2, x20
   35140:	mov	x0, x21
   35144:	mov	x1, x19
   35148:	bl	28fe0 <PyInit__decimal@@Base+0xea60>
   3514c:	cbz	w0, 35170 <PyInit__decimal@@Base+0x1abf0>
   35150:	mov	x19, x21
   35154:	stp	x25, x26, [sp, #64]
   35158:	b	34c34 <PyInit__decimal@@Base+0x1a6b4>
   3515c:	ldr	x2, [x3, #136]
   35160:	cmp	x0, x2
   35164:	cset	x2, cs  // cs = hs, nlast
   35168:	add	x2, x2, #0x10
   3516c:	b	34bb8 <PyInit__decimal@@Base+0x1a638>
   35170:	mov	x2, x20
   35174:	mov	x0, x19
   35178:	mov	w1, #0x200                 	// #512
   3517c:	bl	28d68 <PyInit__decimal@@Base+0xe7e8>
   35180:	ldp	x21, x22, [sp, #32]
   35184:	ldp	x23, x24, [sp, #48]
   35188:	b	34a00 <PyInit__decimal@@Base+0x1a480>
   3518c:	nop
   35190:	sub	sp, sp, #0x2b0
   35194:	stp	x29, x30, [sp]
   35198:	mov	x29, sp
   3519c:	stp	x23, x24, [sp, #48]
   351a0:	mov	x23, x1
   351a4:	add	x1, sp, #0xb0
   351a8:	mov	x24, x2
   351ac:	mov	x2, #0x40                  	// #64
   351b0:	stp	x21, x22, [sp, #32]
   351b4:	mov	x21, x3
   351b8:	mov	w3, #0x30                  	// #48
   351bc:	add	x22, sp, #0x50
   351c0:	stp	x19, x20, [sp, #16]
   351c4:	mov	x19, x4
   351c8:	mov	x20, x0
   351cc:	mov	x0, x22
   351d0:	str	x25, [sp, #64]
   351d4:	add	x25, sp, #0x80
   351d8:	strb	w3, [sp, #128]
   351dc:	stp	xzr, xzr, [sp, #136]
   351e0:	stp	xzr, x2, [sp, #152]
   351e4:	str	x1, [sp, #168]
   351e8:	bl	1d4d0 <PyInit__decimal@@Base+0x2f50>
   351ec:	mov	x1, x24
   351f0:	mov	x2, x22
   351f4:	mov	x3, x19
   351f8:	mov	x0, x25
   351fc:	bl	2bc50 <PyInit__decimal@@Base+0x116d0>
   35200:	mov	x4, x19
   35204:	mov	x3, x21
   35208:	mov	x2, x25
   3520c:	mov	x1, x23
   35210:	mov	x0, x20
   35214:	bl	291b8 <PyInit__decimal@@Base+0xec38>
   35218:	mov	x0, x20
   3521c:	mov	x2, x19
   35220:	mov	x1, x21
   35224:	bl	2b110 <PyInit__decimal@@Base+0x10b90>
   35228:	ldrb	w0, [sp, #128]
   3522c:	tst	w0, #0xe0
   35230:	b.ne	35248 <PyInit__decimal@@Base+0x1acc8>  // b.any
   35234:	adrp	x1, 5f000 <PyInit__decimal@@Base+0x44a80>
   35238:	ldr	x0, [sp, #168]
   3523c:	ldr	x1, [x1, #1704]
   35240:	blr	x1
   35244:	ldrb	w0, [sp, #128]
   35248:	tbnz	w0, #4, 3525c <PyInit__decimal@@Base+0x1acdc>
   3524c:	adrp	x1, 5f000 <PyInit__decimal@@Base+0x44a80>
   35250:	mov	x0, x25
   35254:	ldr	x1, [x1, #1704]
   35258:	blr	x1
   3525c:	ldp	x29, x30, [sp]
   35260:	ldp	x19, x20, [sp, #16]
   35264:	ldp	x21, x22, [sp, #32]
   35268:	ldp	x23, x24, [sp, #48]
   3526c:	ldr	x25, [sp, #64]
   35270:	add	sp, sp, #0x2b0
   35274:	ret
   35278:	sxtw	x2, w2
   3527c:	b	336f0 <PyInit__decimal@@Base+0x19170>
   35280:	mov	w2, w2
   35284:	b	35190 <PyInit__decimal@@Base+0x1ac10>
   35288:	b	336f0 <PyInit__decimal@@Base+0x19170>
   3528c:	nop
   35290:	b	35190 <PyInit__decimal@@Base+0x1ac10>
   35294:	nop
   35298:	stp	x29, x30, [sp, #-48]!
   3529c:	mov	x29, sp
   352a0:	stp	x19, x20, [sp, #16]
   352a4:	mov	x19, x1
   352a8:	mov	x20, x0
   352ac:	stp	x21, x22, [sp, #32]
   352b0:	mov	x22, x2
   352b4:	mov	x21, x3
   352b8:	ldrb	w4, [x1]
   352bc:	tst	w4, #0xe
   352c0:	b.ne	35344 <PyInit__decimal@@Base+0x1adc4>  // b.any
   352c4:	ldr	x0, [x19, #24]
   352c8:	ldr	x1, [x19, #40]
   352cc:	add	x0, x1, x0, lsl #3
   352d0:	ldur	x0, [x0, #-8]
   352d4:	cbz	x0, 35314 <PyInit__decimal@@Base+0x1ad94>
   352d8:	mov	x1, x19
   352dc:	mov	x2, x21
   352e0:	mov	x0, x20
   352e4:	bl	28fe0 <PyInit__decimal@@Base+0xea60>
   352e8:	cbz	w0, 352f8 <PyInit__decimal@@Base+0x1ad78>
   352ec:	ldrb	w0, [x20]
   352f0:	eor	w0, w0, #0x1
   352f4:	strb	w0, [x20]
   352f8:	mov	x2, x21
   352fc:	mov	x1, x22
   35300:	mov	x0, x20
   35304:	ldp	x19, x20, [sp, #16]
   35308:	ldp	x21, x22, [sp, #32]
   3530c:	ldp	x29, x30, [sp], #48
   35310:	b	2b110 <PyInit__decimal@@Base+0x10b90>
   35314:	ldr	w0, [x22, #36]
   35318:	cmp	w0, #0x3
   3531c:	b.eq	352d8 <PyInit__decimal@@Base+0x1ad58>  // b.none
   35320:	mov	x1, x19
   35324:	mov	x2, x21
   35328:	mov	x0, x20
   3532c:	bl	28fe0 <PyInit__decimal@@Base+0xea60>
   35330:	cbz	w0, 352f8 <PyInit__decimal@@Base+0x1ad78>
   35334:	ldrb	w0, [x20]
   35338:	and	w0, w0, #0xfffffffe
   3533c:	strb	w0, [x20]
   35340:	b	352f8 <PyInit__decimal@@Base+0x1ad78>
   35344:	bl	29098 <PyInit__decimal@@Base+0xeb18>
   35348:	cbnz	w0, 3535c <PyInit__decimal@@Base+0x1addc>
   3534c:	ldrb	w0, [x19]
   35350:	tst	w0, #0xe
   35354:	b.ne	352d8 <PyInit__decimal@@Base+0x1ad58>  // b.any
   35358:	b	352c4 <PyInit__decimal@@Base+0x1ad44>
   3535c:	ldp	x19, x20, [sp, #16]
   35360:	ldp	x21, x22, [sp, #32]
   35364:	ldp	x29, x30, [sp], #48
   35368:	ret
   3536c:	nop
   35370:	stp	x29, x30, [sp, #-48]!
   35374:	mov	x29, sp
   35378:	stp	x19, x20, [sp, #16]
   3537c:	mov	x19, x1
   35380:	mov	x20, x0
   35384:	stp	x21, x22, [sp, #32]
   35388:	mov	x22, x2
   3538c:	mov	x21, x3
   35390:	ldrb	w4, [x1]
   35394:	tst	w4, #0xe
   35398:	b.ne	3540c <PyInit__decimal@@Base+0x1ae8c>  // b.any
   3539c:	ldr	x0, [x19, #24]
   353a0:	ldr	x1, [x19, #40]
   353a4:	add	x0, x1, x0, lsl #3
   353a8:	ldur	x0, [x0, #-8]
   353ac:	cbz	x0, 353dc <PyInit__decimal@@Base+0x1ae5c>
   353b0:	mov	x1, x19
   353b4:	mov	x2, x21
   353b8:	mov	x0, x20
   353bc:	bl	28fe0 <PyInit__decimal@@Base+0xea60>
   353c0:	mov	x2, x21
   353c4:	mov	x1, x22
   353c8:	mov	x0, x20
   353cc:	ldp	x19, x20, [sp, #16]
   353d0:	ldp	x21, x22, [sp, #32]
   353d4:	ldp	x29, x30, [sp], #48
   353d8:	b	2b110 <PyInit__decimal@@Base+0x10b90>
   353dc:	ldr	w0, [x22, #36]
   353e0:	cmp	w0, #0x3
   353e4:	b.eq	353b0 <PyInit__decimal@@Base+0x1ae30>  // b.none
   353e8:	mov	x1, x19
   353ec:	mov	x2, x21
   353f0:	mov	x0, x20
   353f4:	bl	28fe0 <PyInit__decimal@@Base+0xea60>
   353f8:	cbz	w0, 353c0 <PyInit__decimal@@Base+0x1ae40>
   353fc:	ldrb	w0, [x20]
   35400:	and	w0, w0, #0xfffffffe
   35404:	strb	w0, [x20]
   35408:	b	353c0 <PyInit__decimal@@Base+0x1ae40>
   3540c:	bl	29098 <PyInit__decimal@@Base+0xeb18>
   35410:	cbnz	w0, 35424 <PyInit__decimal@@Base+0x1aea4>
   35414:	ldrb	w0, [x19]
   35418:	tst	w0, #0xe
   3541c:	b.ne	353b0 <PyInit__decimal@@Base+0x1ae30>  // b.any
   35420:	b	3539c <PyInit__decimal@@Base+0x1ae1c>
   35424:	ldp	x19, x20, [sp, #16]
   35428:	ldp	x21, x22, [sp, #32]
   3542c:	ldp	x29, x30, [sp], #48
   35430:	ret
   35434:	nop
   35438:	stp	x29, x30, [sp, #-48]!
   3543c:	mov	x29, sp
   35440:	stp	x19, x20, [sp, #16]
   35444:	mov	x19, x1
   35448:	mov	x20, x0
   3544c:	stp	x21, x22, [sp, #32]
   35450:	mov	x21, x2
   35454:	mov	x22, x3
   35458:	ldrb	w4, [x1]
   3545c:	tst	w4, #0xe
   35460:	b.ne	35498 <PyInit__decimal@@Base+0x1af18>  // b.any
   35464:	mov	x3, x22
   35468:	mov	x2, x21
   3546c:	mov	x1, x19
   35470:	mov	x0, x20
   35474:	tbz	w4, #0, 35488 <PyInit__decimal@@Base+0x1af08>
   35478:	ldp	x19, x20, [sp, #16]
   3547c:	ldp	x21, x22, [sp, #32]
   35480:	ldp	x29, x30, [sp], #48
   35484:	b	35298 <PyInit__decimal@@Base+0x1ad18>
   35488:	ldp	x19, x20, [sp, #16]
   3548c:	ldp	x21, x22, [sp, #32]
   35490:	ldp	x29, x30, [sp], #48
   35494:	b	35370 <PyInit__decimal@@Base+0x1adf0>
   35498:	bl	29098 <PyInit__decimal@@Base+0xeb18>
   3549c:	cbnz	w0, 354a8 <PyInit__decimal@@Base+0x1af28>
   354a0:	ldrb	w4, [x19]
   354a4:	b	35464 <PyInit__decimal@@Base+0x1aee4>
   354a8:	ldp	x19, x20, [sp, #16]
   354ac:	ldp	x21, x22, [sp, #32]
   354b0:	ldp	x29, x30, [sp], #48
   354b4:	ret
   354b8:	stp	x29, x30, [sp, #-176]!
   354bc:	mov	w6, #0xffffff90            	// #-112
   354c0:	mov	x4, #0x1                   	// #1
   354c4:	mov	x29, sp
   354c8:	strb	w6, [sp, #128]
   354cc:	add	x5, sp, #0x48
   354d0:	ldr	x7, [x2]
   354d4:	stp	x19, x20, [sp, #16]
   354d8:	mov	x19, x2
   354dc:	ldr	x6, [x2, #16]
   354e0:	stp	x21, x22, [sp, #32]
   354e4:	mov	x20, x1
   354e8:	sub	x8, x6, x7
   354ec:	str	x4, [sp, #72]
   354f0:	stp	x8, x4, [sp, #136]
   354f4:	mov	x21, x0
   354f8:	mov	x22, x3
   354fc:	stp	x4, x4, [sp, #152]
   35500:	ldrb	w4, [x1]
   35504:	str	x5, [sp, #168]
   35508:	tst	w4, #0xe
   3550c:	b.eq	35558 <PyInit__decimal@@Base+0x1afd8>  // b.none
   35510:	bl	29098 <PyInit__decimal@@Base+0xeb18>
   35514:	cbnz	w0, 35548 <PyInit__decimal@@Base+0x1afc8>
   35518:	ldrb	w0, [x20]
   3551c:	tbnz	w0, #0, 35634 <PyInit__decimal@@Base+0x1b0b4>
   35520:	ldrb	w3, [x21]
   35524:	mov	x0, x21
   35528:	mov	x2, x22
   3552c:	mov	x1, x19
   35530:	and	w3, w3, #0xfffffff0
   35534:	strb	w3, [x21]
   35538:	bl	28a78 <PyInit__decimal@@Base+0xe4f8>
   3553c:	ldrb	w0, [x21]
   35540:	tst	w0, #0xc
   35544:	b.eq	35614 <PyInit__decimal@@Base+0x1b094>  // b.none
   35548:	ldp	x19, x20, [sp, #16]
   3554c:	ldp	x21, x22, [sp, #32]
   35550:	ldp	x29, x30, [sp], #176
   35554:	ret
   35558:	mov	x2, x3
   3555c:	mov	x4, #0x300000000           	// #12884901888
   35560:	ldr	x5, [x19, #8]
   35564:	stp	x7, x5, [sp, #80]
   35568:	ldr	x3, [x19, #40]
   3556c:	stp	x6, xzr, [sp, #96]
   35570:	stp	x4, x3, [sp, #112]
   35574:	bl	28fe0 <PyInit__decimal@@Base+0xea60>
   35578:	cbz	w0, 35548 <PyInit__decimal@@Base+0x1afc8>
   3557c:	add	x19, sp, #0x50
   35580:	str	x23, [sp, #48]
   35584:	add	x23, x19, #0x1c
   35588:	mov	x0, x21
   3558c:	mov	x1, x19
   35590:	mov	x2, x23
   35594:	bl	2b110 <PyInit__decimal@@Base+0x10b90>
   35598:	ldr	w0, [sp, #108]
   3559c:	tst	w0, #0x3fe
   355a0:	b.eq	355cc <PyInit__decimal@@Base+0x1b04c>  // b.none
   355a4:	ldr	w1, [x22]
   355a8:	mov	w2, #0x3be                 	// #958
   355ac:	and	w0, w0, w2
   355b0:	orr	w0, w1, w0
   355b4:	ldr	x23, [sp, #48]
   355b8:	str	w0, [x22]
   355bc:	ldp	x19, x20, [sp, #16]
   355c0:	ldp	x21, x22, [sp, #32]
   355c4:	ldp	x29, x30, [sp], #176
   355c8:	ret
   355cc:	mov	x4, x23
   355d0:	mov	x3, x19
   355d4:	mov	x1, x20
   355d8:	mov	x0, x21
   355dc:	add	x2, sp, #0x80
   355e0:	str	wzr, [sp, #108]
   355e4:	bl	2e5c0 <PyInit__decimal@@Base+0x14040>
   355e8:	ldr	w1, [sp, #108]
   355ec:	mov	w2, #0x3be                 	// #958
   355f0:	ldr	w0, [x22]
   355f4:	and	w1, w1, w2
   355f8:	orr	w0, w0, w1
   355fc:	ldr	x23, [sp, #48]
   35600:	str	w0, [x22]
   35604:	ldp	x19, x20, [sp, #16]
   35608:	ldp	x21, x22, [sp, #32]
   3560c:	ldp	x29, x30, [sp], #176
   35610:	ret
   35614:	ldp	x1, x0, [x19]
   35618:	ldp	x19, x20, [sp, #16]
   3561c:	add	x0, x0, #0x1
   35620:	sub	x0, x0, x1
   35624:	str	x0, [x21, #8]
   35628:	ldp	x21, x22, [sp, #32]
   3562c:	ldp	x29, x30, [sp], #176
   35630:	ret
   35634:	mov	x2, x22
   35638:	mov	x1, x20
   3563c:	mov	x0, x21
   35640:	bl	28fe0 <PyInit__decimal@@Base+0xea60>
   35644:	ldp	x19, x20, [sp, #16]
   35648:	ldp	x21, x22, [sp, #32]
   3564c:	ldp	x29, x30, [sp], #176
   35650:	ret
   35654:	nop
   35658:	stp	x29, x30, [sp, #-176]!
   3565c:	mov	w6, #0xffffff90            	// #-112
   35660:	mov	x4, #0x1                   	// #1
   35664:	mov	x29, sp
   35668:	strb	w6, [sp, #128]
   3566c:	add	x5, sp, #0x48
   35670:	ldr	x7, [x2]
   35674:	stp	x19, x20, [sp, #16]
   35678:	mov	x19, x2
   3567c:	ldr	x6, [x2, #16]
   35680:	stp	x21, x22, [sp, #32]
   35684:	mov	x20, x1
   35688:	sub	x8, x6, x7
   3568c:	str	x4, [sp, #72]
   35690:	stp	x8, x4, [sp, #136]
   35694:	mov	x22, x0
   35698:	mov	x21, x3
   3569c:	stp	x4, x4, [sp, #152]
   356a0:	ldrb	w4, [x1]
   356a4:	str	x5, [sp, #168]
   356a8:	tst	w4, #0xe
   356ac:	b.eq	356f8 <PyInit__decimal@@Base+0x1b178>  // b.none
   356b0:	bl	29098 <PyInit__decimal@@Base+0xeb18>
   356b4:	cbnz	w0, 356e8 <PyInit__decimal@@Base+0x1b168>
   356b8:	ldrb	w0, [x20]
   356bc:	tbz	w0, #0, 357e0 <PyInit__decimal@@Base+0x1b260>
   356c0:	ldrb	w3, [x22]
   356c4:	mov	x0, x22
   356c8:	mov	x2, x21
   356cc:	mov	x1, x19
   356d0:	and	w3, w3, #0xfffffff0
   356d4:	strb	w3, [x22]
   356d8:	bl	28a78 <PyInit__decimal@@Base+0xe4f8>
   356dc:	ldrb	w0, [x22]
   356e0:	tst	w0, #0xc
   356e4:	b.eq	357b4 <PyInit__decimal@@Base+0x1b234>  // b.none
   356e8:	ldp	x19, x20, [sp, #16]
   356ec:	ldp	x21, x22, [sp, #32]
   356f0:	ldp	x29, x30, [sp], #176
   356f4:	ret
   356f8:	mov	x2, x3
   356fc:	mov	x4, #0x200000000           	// #8589934592
   35700:	ldr	x5, [x19, #8]
   35704:	stp	x7, x5, [sp, #80]
   35708:	ldr	x3, [x19, #40]
   3570c:	stp	x6, xzr, [sp, #96]
   35710:	stp	x4, x3, [sp, #112]
   35714:	bl	28fe0 <PyInit__decimal@@Base+0xea60>
   35718:	cbz	w0, 356e8 <PyInit__decimal@@Base+0x1b168>
   3571c:	add	x19, sp, #0x50
   35720:	str	x23, [sp, #48]
   35724:	add	x23, x19, #0x1c
   35728:	mov	x0, x22
   3572c:	mov	x1, x19
   35730:	mov	x2, x23
   35734:	bl	2b110 <PyInit__decimal@@Base+0x10b90>
   35738:	ldr	w0, [sp, #108]
   3573c:	tst	w0, #0x3fe
   35740:	b.eq	3576c <PyInit__decimal@@Base+0x1b1ec>  // b.none
   35744:	ldr	w1, [x21]
   35748:	mov	w2, #0x3be                 	// #958
   3574c:	and	w0, w0, w2
   35750:	orr	w0, w1, w0
   35754:	ldr	x23, [sp, #48]
   35758:	str	w0, [x21]
   3575c:	ldp	x19, x20, [sp, #16]
   35760:	ldp	x21, x22, [sp, #32]
   35764:	ldp	x29, x30, [sp], #176
   35768:	ret
   3576c:	mov	x4, x23
   35770:	mov	x3, x19
   35774:	mov	x1, x20
   35778:	mov	x0, x22
   3577c:	add	x2, sp, #0x80
   35780:	str	wzr, [sp, #108]
   35784:	bl	2e488 <PyInit__decimal@@Base+0x13f08>
   35788:	ldr	w1, [sp, #108]
   3578c:	mov	w2, #0x3be                 	// #958
   35790:	ldr	w0, [x21]
   35794:	and	w1, w1, w2
   35798:	orr	w0, w0, w1
   3579c:	ldr	x23, [sp, #48]
   357a0:	str	w0, [x21]
   357a4:	ldp	x19, x20, [sp, #16]
   357a8:	ldp	x21, x22, [sp, #32]
   357ac:	ldp	x29, x30, [sp], #176
   357b0:	ret
   357b4:	and	w0, w0, #0xfffffff0
   357b8:	orr	w0, w0, #0x1
   357bc:	strb	w0, [x22]
   357c0:	ldp	x1, x0, [x19]
   357c4:	ldp	x19, x20, [sp, #16]
   357c8:	add	x0, x0, #0x1
   357cc:	sub	x0, x0, x1
   357d0:	str	x0, [x22, #8]
   357d4:	ldp	x21, x22, [sp, #32]
   357d8:	ldp	x29, x30, [sp], #176
   357dc:	ret
   357e0:	mov	x2, x21
   357e4:	mov	x1, x20
   357e8:	mov	x0, x22
   357ec:	bl	28fe0 <PyInit__decimal@@Base+0xea60>
   357f0:	ldp	x19, x20, [sp, #16]
   357f4:	ldp	x21, x22, [sp, #32]
   357f8:	ldp	x29, x30, [sp], #176
   357fc:	ret
   35800:	stp	x29, x30, [sp, #-64]!
   35804:	mov	x29, sp
   35808:	stp	x19, x20, [sp, #16]
   3580c:	mov	x19, x0
   35810:	mov	x20, x4
   35814:	stp	x21, x22, [sp, #32]
   35818:	mov	x22, x1
   3581c:	mov	x21, x2
   35820:	str	x23, [sp, #48]
   35824:	mov	x23, x3
   35828:	bl	29108 <PyInit__decimal@@Base+0xeb88>
   3582c:	cbz	w0, 35844 <PyInit__decimal@@Base+0x1b2c4>
   35830:	ldp	x19, x20, [sp, #16]
   35834:	ldp	x21, x22, [sp, #32]
   35838:	ldr	x23, [sp, #48]
   3583c:	ldp	x29, x30, [sp], #64
   35840:	ret
   35844:	mov	x1, x21
   35848:	mov	x0, x22
   3584c:	bl	26c80 <PyInit__decimal@@Base+0xc700>
   35850:	cmp	w0, #0x0
   35854:	cbz	w0, 358f8 <PyInit__decimal@@Base+0x1b378>
   35858:	mov	x1, x22
   3585c:	mov	x3, x20
   35860:	mov	x2, x23
   35864:	mov	x0, x19
   35868:	b.lt	358f0 <PyInit__decimal@@Base+0x1b370>  // b.tstop
   3586c:	bl	354b8 <PyInit__decimal@@Base+0x1af38>
   35870:	ldrb	w1, [x19]
   35874:	tbnz	w1, #1, 358cc <PyInit__decimal@@Base+0x1b34c>
   35878:	ldp	x0, x3, [x19, #8]
   3587c:	ldr	x2, [x23, #16]
   35880:	add	x0, x0, x3
   35884:	sub	x0, x0, #0x1
   35888:	cmp	x2, x0
   3588c:	b.le	35830 <PyInit__decimal@@Base+0x1b2b0>
   35890:	ldr	w2, [x20]
   35894:	mov	w0, #0x7040                	// #28736
   35898:	tst	w1, #0xe
   3589c:	orr	w0, w2, w0
   358a0:	str	w0, [x20]
   358a4:	b.ne	35830 <PyInit__decimal@@Base+0x1b2b0>  // b.any
   358a8:	ldr	x0, [x19, #24]
   358ac:	ldr	x1, [x19, #40]
   358b0:	add	x0, x1, x0, lsl #3
   358b4:	ldur	x0, [x0, #-8]
   358b8:	cbnz	x0, 35830 <PyInit__decimal@@Base+0x1b2b0>
   358bc:	mov	w0, #0x7041                	// #28737
   358c0:	orr	w2, w2, w0
   358c4:	str	w2, [x20]
   358c8:	b	35830 <PyInit__decimal@@Base+0x1b2b0>
   358cc:	ldr	w0, [x20]
   358d0:	mov	w1, #0x1840                	// #6208
   358d4:	ldp	x21, x22, [sp, #32]
   358d8:	orr	w0, w0, w1
   358dc:	str	w0, [x20]
   358e0:	ldp	x19, x20, [sp, #16]
   358e4:	ldr	x23, [sp, #48]
   358e8:	ldp	x29, x30, [sp], #64
   358ec:	ret
   358f0:	bl	35658 <PyInit__decimal@@Base+0x1b0d8>
   358f4:	b	35870 <PyInit__decimal@@Base+0x1b2f0>
   358f8:	ldrb	w21, [x21]
   358fc:	mov	x2, x20
   35900:	mov	x1, x22
   35904:	mov	x0, x19
   35908:	bl	28fe0 <PyInit__decimal@@Base+0xea60>
   3590c:	cbz	w0, 35830 <PyInit__decimal@@Base+0x1b2b0>
   35910:	ldrb	w0, [x19]
   35914:	bfxil	w0, w21, #0, #1
   35918:	strb	w0, [x19]
   3591c:	b	35830 <PyInit__decimal@@Base+0x1b2b0>
   35920:	stp	x29, x30, [sp, #-144]!
   35924:	mov	x29, sp
   35928:	stp	x19, x20, [sp, #16]
   3592c:	mov	x19, x1
   35930:	mov	x20, x2
   35934:	stp	x21, x22, [sp, #32]
   35938:	stp	x23, x24, [sp, #48]
   3593c:	mov	x23, x0
   35940:	mov	x24, x4
   35944:	stp	x25, x26, [sp, #64]
   35948:	mov	x25, x3
   3594c:	stp	x27, x28, [sp, #80]
   35950:	ldrb	w22, [x1]
   35954:	tst	w22, #0xe
   35958:	b.ne	35968 <PyInit__decimal@@Base+0x1b3e8>  // b.any
   3595c:	ldrb	w26, [x2]
   35960:	ands	w7, w26, #0xe
   35964:	b.eq	35af0 <PyInit__decimal@@Base+0x1b570>  // b.none
   35968:	mov	x4, x24
   3596c:	mov	x3, x25
   35970:	mov	x2, x20
   35974:	mov	x1, x19
   35978:	mov	x0, x23
   3597c:	bl	29108 <PyInit__decimal@@Base+0xeb88>
   35980:	mov	w21, w0
   35984:	cbnz	w0, 35ad4 <PyInit__decimal@@Base+0x1b554>
   35988:	ldrb	w26, [x20]
   3598c:	mov	w27, #0x0                   	// #0
   35990:	ldrb	w22, [x19]
   35994:	ands	w8, w26, #0xe
   35998:	and	w7, w22, #0xe
   3599c:	b.eq	35c7c <PyInit__decimal@@Base+0x1b6fc>  // b.none
   359a0:	cbz	w7, 35b24 <PyInit__decimal@@Base+0x1b5a4>
   359a4:	tbz	w22, #0, 35b6c <PyInit__decimal@@Base+0x1b5ec>
   359a8:	cbz	w21, 35c14 <PyInit__decimal@@Base+0x1b694>
   359ac:	tbnz	w26, #1, 35c14 <PyInit__decimal@@Base+0x1b694>
   359b0:	tbnz	w22, #1, 35bc8 <PyInit__decimal@@Base+0x1b648>
   359b4:	cbnz	w8, 359cc <PyInit__decimal@@Base+0x1b44c>
   359b8:	ldr	x0, [x20, #24]
   359bc:	ldr	x1, [x20, #40]
   359c0:	add	x0, x1, x0, lsl #3
   359c4:	ldur	x0, [x0, #-8]
   359c8:	cbz	x0, 35be0 <PyInit__decimal@@Base+0x1b660>
   359cc:	adrp	x28, 5c000 <PyInit__decimal@@Base+0x41a80>
   359d0:	add	x1, x28, #0xc58
   359d4:	add	x1, x1, #0x60
   359d8:	mov	x0, x19
   359dc:	str	wzr, [sp, #96]
   359e0:	bl	26bd8 <PyInit__decimal@@Base+0xc658>
   359e4:	cbz	w0, 35d30 <PyInit__decimal@@Base+0x1b7b0>
   359e8:	ldp	x26, x1, [x20, #8]
   359ec:	mov	w0, #0x50                  	// #80
   359f0:	ldp	x6, x5, [x19, #8]
   359f4:	and	w22, w22, #0xe
   359f8:	ldp	x4, x3, [x19, #24]
   359fc:	orr	w22, w22, w0
   35a00:	ldr	x2, [x19, #40]
   35a04:	add	x26, x26, x1
   35a08:	add	x0, sp, #0x60
   35a0c:	mov	x1, x24
   35a10:	strb	w22, [sp, #96]
   35a14:	sub	x26, x26, #0x1
   35a18:	stp	x6, x5, [sp, #104]
   35a1c:	stp	x4, x3, [sp, #120]
   35a20:	str	x2, [sp, #136]
   35a24:	bl	302d8 <PyInit__decimal@@Base+0x15d58>
   35a28:	mov	x1, #0x7fffffffffffffff    	// #9223372036854775807
   35a2c:	cmp	x0, x1
   35a30:	b.eq	35f74 <PyInit__decimal@@Base+0x1b9f4>  // b.none
   35a34:	ldp	x1, x4, [sp, #104]
   35a38:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27a80>
   35a3c:	ldrb	w3, [x20]
   35a40:	add	x2, x2, #0x2d0
   35a44:	and	w3, w3, #0x1
   35a48:	add	x1, x1, x4
   35a4c:	sub	x1, x1, #0x1
   35a50:	ldr	x4, [x2, #72]
   35a54:	lsr	x1, x1, #63
   35a58:	cmp	w3, w1
   35a5c:	b.eq	35ca4 <PyInit__decimal@@Base+0x1b724>  // b.none
   35a60:	ldr	x3, [x25]
   35a64:	ldr	x1, [x25, #16]
   35a68:	sub	x3, x1, x3
   35a6c:	adds	x1, x3, #0x1
   35a70:	cneg	x1, x1, mi  // mi = first
   35a74:	cmp	x4, x1
   35a78:	b.ls	35ea0 <PyInit__decimal@@Base+0x1b920>  // b.plast
   35a7c:	ldr	x4, [x2, #32]
   35a80:	cmp	x1, x4
   35a84:	b.cs	35f18 <PyInit__decimal@@Base+0x1b998>  // b.hs, b.nlast
   35a88:	ldr	x4, [x2, #16]
   35a8c:	cmp	x1, x4
   35a90:	b.cs	36018 <PyInit__decimal@@Base+0x1ba98>  // b.hs, b.nlast
   35a94:	ldr	x2, [x2, #8]
   35a98:	cmp	x1, x2
   35a9c:	cset	x4, cs  // cs = hs, nlast
   35aa0:	add	x4, x4, #0x1
   35aa4:	nop
   35aa8:	add	x26, x26, x0
   35aac:	cmp	x26, x4
   35ab0:	b.gt	35d20 <PyInit__decimal@@Base+0x1b7a0>
   35ab4:	cbz	w21, 35e1c <PyInit__decimal@@Base+0x1b89c>
   35ab8:	mov	x5, x24
   35abc:	mov	x4, x25
   35ac0:	mov	w3, w27
   35ac4:	mov	x2, x20
   35ac8:	mov	x1, x19
   35acc:	mov	x0, x23
   35ad0:	bl	31650 <PyInit__decimal@@Base+0x170d0>
   35ad4:	ldp	x19, x20, [sp, #16]
   35ad8:	ldp	x21, x22, [sp, #32]
   35adc:	ldp	x23, x24, [sp, #48]
   35ae0:	ldp	x25, x26, [sp, #64]
   35ae4:	ldp	x27, x28, [sp, #80]
   35ae8:	ldp	x29, x30, [sp], #144
   35aec:	ret
   35af0:	mov	x0, x2
   35af4:	bl	25638 <PyInit__decimal@@Base+0xb0b8>
   35af8:	mov	w21, w0
   35afc:	cbz	w0, 35ba8 <PyInit__decimal@@Base+0x1b628>
   35b00:	and	w27, w22, #0x1
   35b04:	tbz	w22, #0, 35b18 <PyInit__decimal@@Base+0x1b598>
   35b08:	mov	x0, x20
   35b0c:	bl	28c30 <PyInit__decimal@@Base+0xe6b0>
   35b10:	cmp	w0, #0x0
   35b14:	cset	w27, ne  // ne = any
   35b18:	mov	w8, #0x0                   	// #0
   35b1c:	mov	w21, #0x1                   	// #1
   35b20:	cbnz	w7, 359a4 <PyInit__decimal@@Base+0x1b424>
   35b24:	ldr	x0, [x19, #24]
   35b28:	ldr	x1, [x19, #40]
   35b2c:	add	x0, x1, x0, lsl #3
   35b30:	ldur	x0, [x0, #-8]
   35b34:	cbnz	x0, 359a4 <PyInit__decimal@@Base+0x1b424>
   35b38:	cbz	w8, 35bf8 <PyInit__decimal@@Base+0x1b678>
   35b3c:	mov	w1, w27
   35b40:	mov	x0, x23
   35b44:	tbz	w26, #0, 35c4c <PyInit__decimal@@Base+0x1b6cc>
   35b48:	mov	w2, #0x2                   	// #2
   35b4c:	bl	28cd8 <PyInit__decimal@@Base+0xe758>
   35b50:	ldp	x19, x20, [sp, #16]
   35b54:	ldp	x21, x22, [sp, #32]
   35b58:	ldp	x23, x24, [sp, #48]
   35b5c:	ldp	x25, x26, [sp, #64]
   35b60:	ldp	x27, x28, [sp, #80]
   35b64:	ldp	x29, x30, [sp], #144
   35b68:	ret
   35b6c:	tbz	w26, #1, 359b0 <PyInit__decimal@@Base+0x1b430>
   35b70:	adrp	x20, 5c000 <PyInit__decimal@@Base+0x41a80>
   35b74:	add	x20, x20, #0xc58
   35b78:	add	x20, x20, #0x60
   35b7c:	mov	x0, x19
   35b80:	mov	x1, x20
   35b84:	bl	26c80 <PyInit__decimal@@Base+0xc700>
   35b88:	cbz	w0, 35d80 <PyInit__decimal@@Base+0x1b800>
   35b8c:	sbfx	x26, x26, #0, #1
   35b90:	lsl	w26, w26, #1
   35b94:	madd	w0, w26, w0, w0
   35b98:	tbnz	w0, #31, 35c98 <PyInit__decimal@@Base+0x1b718>
   35b9c:	mov	w1, w27
   35ba0:	mov	x0, x23
   35ba4:	b	35b48 <PyInit__decimal@@Base+0x1b5c8>
   35ba8:	ldr	x0, [x19, #24]
   35bac:	ldr	x1, [x19, #40]
   35bb0:	add	x0, x1, x0, lsl #3
   35bb4:	ldur	x0, [x0, #-8]
   35bb8:	cbz	x0, 35c00 <PyInit__decimal@@Base+0x1b680>
   35bbc:	mov	w8, #0x0                   	// #0
   35bc0:	mov	w27, #0x0                   	// #0
   35bc4:	b	359a4 <PyInit__decimal@@Base+0x1b424>
   35bc8:	cbnz	w8, 35c40 <PyInit__decimal@@Base+0x1b6c0>
   35bcc:	ldr	x0, [x20, #24]
   35bd0:	ldr	x1, [x20, #40]
   35bd4:	add	x0, x1, x0, lsl #3
   35bd8:	ldur	x0, [x0, #-8]
   35bdc:	cbnz	x0, 35c40 <PyInit__decimal@@Base+0x1b6c0>
   35be0:	mov	w1, w27
   35be4:	mov	x0, x23
   35be8:	mov	x3, #0x0                   	// #0
   35bec:	mov	x2, #0x1                   	// #1
   35bf0:	bl	26d90 <PyInit__decimal@@Base+0xc810>
   35bf4:	b	35ad4 <PyInit__decimal@@Base+0x1b554>
   35bf8:	mov	w7, w27
   35bfc:	nop
   35c00:	ldr	x0, [x20, #24]
   35c04:	ldr	x1, [x20, #40]
   35c08:	add	x0, x1, x0, lsl #3
   35c0c:	ldur	x0, [x0, #-8]
   35c10:	cbnz	x0, 35c74 <PyInit__decimal@@Base+0x1b6f4>
   35c14:	mov	x2, x24
   35c18:	mov	x0, x23
   35c1c:	mov	w1, #0x100                 	// #256
   35c20:	bl	28d68 <PyInit__decimal@@Base+0xe7e8>
   35c24:	ldp	x19, x20, [sp, #16]
   35c28:	ldp	x21, x22, [sp, #32]
   35c2c:	ldp	x23, x24, [sp, #48]
   35c30:	ldp	x25, x26, [sp, #64]
   35c34:	ldp	x27, x28, [sp, #80]
   35c38:	ldp	x29, x30, [sp], #144
   35c3c:	ret
   35c40:	mov	w1, w27
   35c44:	mov	x0, x23
   35c48:	tbz	w26, #0, 35b48 <PyInit__decimal@@Base+0x1b5c8>
   35c4c:	mov	x3, #0x0                   	// #0
   35c50:	mov	x2, #0x0                   	// #0
   35c54:	bl	26d90 <PyInit__decimal@@Base+0xc810>
   35c58:	ldp	x19, x20, [sp, #16]
   35c5c:	ldp	x21, x22, [sp, #32]
   35c60:	ldp	x23, x24, [sp, #48]
   35c64:	ldp	x25, x26, [sp, #64]
   35c68:	ldp	x27, x28, [sp, #80]
   35c6c:	ldp	x29, x30, [sp], #144
   35c70:	ret
   35c74:	mov	w27, w7
   35c78:	b	35b3c <PyInit__decimal@@Base+0x1b5bc>
   35c7c:	mov	x0, x20
   35c80:	bl	25638 <PyInit__decimal@@Base+0xb0b8>
   35c84:	mov	w27, w8
   35c88:	mov	w21, w0
   35c8c:	cbnz	w0, 35b00 <PyInit__decimal@@Base+0x1b580>
   35c90:	cbnz	w7, 359a4 <PyInit__decimal@@Base+0x1b424>
   35c94:	b	35b24 <PyInit__decimal@@Base+0x1b5a4>
   35c98:	mov	w1, w27
   35c9c:	mov	x0, x23
   35ca0:	b	35c4c <PyInit__decimal@@Base+0x1b6cc>
   35ca4:	ldr	x1, [x25, #8]
   35ca8:	cmp	x1, #0x0
   35cac:	cneg	x1, x1, lt  // lt = tstop
   35cb0:	cmp	x4, x1
   35cb4:	b.ls	35edc <PyInit__decimal@@Base+0x1b95c>  // b.plast
   35cb8:	ldr	x3, [x2, #32]
   35cbc:	cmp	x1, x3
   35cc0:	b.cs	35fbc <PyInit__decimal@@Base+0x1ba3c>  // b.hs, b.nlast
   35cc4:	ldr	x3, [x2, #16]
   35cc8:	cmp	x1, x3
   35ccc:	b.cs	3607c <PyInit__decimal@@Base+0x1bafc>  // b.hs, b.nlast
   35cd0:	ldr	x2, [x2, #8]
   35cd4:	cmp	x1, x2
   35cd8:	cset	x3, cs  // cs = hs, nlast
   35cdc:	add	x3, x3, #0x1
   35ce0:	add	x0, x26, x0
   35ce4:	cmp	x0, x3
   35ce8:	b.le	35ab4 <PyInit__decimal@@Base+0x1b534>
   35cec:	mov	x3, #0x1                   	// #1
   35cf0:	mov	w1, w27
   35cf4:	movk	x3, #0x4ec8, lsl #16
   35cf8:	mov	x2, #0x1                   	// #1
   35cfc:	movk	x3, #0x6d67, lsl #32
   35d00:	mov	x0, x23
   35d04:	movk	x3, #0x1bc1, lsl #48
   35d08:	bl	26d90 <PyInit__decimal@@Base+0xc810>
   35d0c:	mov	x2, x24
   35d10:	mov	x1, x25
   35d14:	mov	x0, x23
   35d18:	bl	2b110 <PyInit__decimal@@Base+0x10b90>
   35d1c:	b	35ad4 <PyInit__decimal@@Base+0x1b554>
   35d20:	mov	w1, w27
   35d24:	mov	x0, x23
   35d28:	mov	x2, #0x1                   	// #1
   35d2c:	b	35d08 <PyInit__decimal@@Base+0x1b788>
   35d30:	mov	x0, x20
   35d34:	bl	25638 <PyInit__decimal@@Base+0xb0b8>
   35d38:	cbz	w0, 35dc8 <PyInit__decimal@@Base+0x1b848>
   35d3c:	tbnz	w26, #0, 35be0 <PyInit__decimal@@Base+0x1b660>
   35d40:	ldr	x2, [x19, #8]
   35d44:	add	x19, sp, #0x60
   35d48:	mov	x1, x20
   35d4c:	mov	x0, x23
   35d50:	mov	x3, x25
   35d54:	mov	x4, x19
   35d58:	neg	x2, x2
   35d5c:	bl	336f0 <PyInit__decimal@@Base+0x19170>
   35d60:	ldr	w0, [sp, #96]
   35d64:	mov	w1, #0x3be                 	// #958
   35d68:	ands	w0, w0, w1
   35d6c:	b.eq	35f88 <PyInit__decimal@@Base+0x1ba08>  // b.none
   35d70:	ldr	w1, [x24]
   35d74:	orr	w0, w1, w0
   35d78:	str	w0, [x24]
   35d7c:	b	35ad4 <PyInit__decimal@@Base+0x1b554>
   35d80:	ldr	x19, [x25]
   35d84:	mov	x1, x20
   35d88:	mov	x3, x24
   35d8c:	mov	x0, x23
   35d90:	sub	x2, x19, #0x1
   35d94:	bl	2a2e0 <PyInit__decimal@@Base+0xfd60>
   35d98:	ldrb	w0, [x23]
   35d9c:	mov	x1, #0x1                   	// #1
   35da0:	sub	x1, x1, x19
   35da4:	and	w0, w0, #0xfffffff0
   35da8:	orr	w27, w27, w0
   35dac:	strb	w27, [x23]
   35db0:	ldr	w0, [x24]
   35db4:	str	x1, [x23, #8]
   35db8:	mov	w1, #0x1040                	// #4160
   35dbc:	orr	w0, w0, w1
   35dc0:	str	w0, [x24]
   35dc4:	b	35ad4 <PyInit__decimal@@Base+0x1b554>
   35dc8:	tbnz	w22, #0, 359e8 <PyInit__decimal@@Base+0x1b468>
   35dcc:	ldr	x19, [x25]
   35dd0:	mov	w1, #0x1040                	// #4160
   35dd4:	ldr	w0, [x24]
   35dd8:	sub	x19, x19, #0x1
   35ddc:	orr	w0, w0, w1
   35de0:	str	w0, [x24]
   35de4:	add	x1, x28, #0xc58
   35de8:	mov	x3, x24
   35dec:	add	x1, x1, #0x60
   35df0:	mov	x2, x19
   35df4:	mov	x0, x23
   35df8:	bl	2a2e0 <PyInit__decimal@@Base+0xfd60>
   35dfc:	cbz	w0, 35ad4 <PyInit__decimal@@Base+0x1b554>
   35e00:	ldrb	w0, [x23]
   35e04:	neg	x19, x19
   35e08:	str	x19, [x23, #8]
   35e0c:	and	w0, w0, #0xfffffff0
   35e10:	orr	w27, w27, w0
   35e14:	strb	w27, [x23]
   35e18:	b	35ad4 <PyInit__decimal@@Base+0x1b554>
   35e1c:	mov	x2, x20
   35e20:	mov	x1, x19
   35e24:	mov	x5, x24
   35e28:	add	x4, x25, #0x2c
   35e2c:	mov	x3, x25
   35e30:	mov	x0, x23
   35e34:	bl	34620 <PyInit__decimal@@Base+0x1a0a0>
   35e38:	ldrb	w20, [x23]
   35e3c:	tst	w20, #0xe
   35e40:	b.eq	35e5c <PyInit__decimal@@Base+0x1b8dc>  // b.none
   35e44:	tbz	w20, #1, 35d0c <PyInit__decimal@@Base+0x1b78c>
   35e48:	mov	x3, #0x1                   	// #1
   35e4c:	mov	w1, #0x0                   	// #0
   35e50:	mov	x2, x3
   35e54:	movk	x3, #0x4ec8, lsl #16
   35e58:	b	35cfc <PyInit__decimal@@Base+0x1b77c>
   35e5c:	add	x19, x28, #0xc58
   35e60:	mov	x0, x23
   35e64:	add	x19, x19, #0x60
   35e68:	mov	x1, x19
   35e6c:	bl	26c80 <PyInit__decimal@@Base+0xc700>
   35e70:	cbnz	w0, 35e44 <PyInit__decimal@@Base+0x1b8c4>
   35e74:	ldr	x21, [x25]
   35e78:	mov	x1, x19
   35e7c:	mov	x3, x24
   35e80:	mov	x0, x23
   35e84:	sub	x2, x21, #0x1
   35e88:	bl	2a2e0 <PyInit__decimal@@Base+0xfd60>
   35e8c:	mov	x0, #0x1                   	// #1
   35e90:	ldrb	w20, [x23]
   35e94:	sub	x0, x0, x21
   35e98:	str	x0, [x23, #8]
   35e9c:	b	35e44 <PyInit__decimal@@Base+0x1b8c4>
   35ea0:	ldr	x4, [x2, #112]
   35ea4:	cmp	x1, x4
   35ea8:	b.cs	35f48 <PyInit__decimal@@Base+0x1b9c8>  // b.hs, b.nlast
   35eac:	ldr	x4, [x2, #88]
   35eb0:	cmp	x1, x4
   35eb4:	b.cc	36040 <PyInit__decimal@@Base+0x1bac0>  // b.lo, b.ul, b.last
   35eb8:	ldr	x5, [x2, #104]
   35ebc:	mov	x4, #0xe                   	// #14
   35ec0:	cmp	x1, x5
   35ec4:	b.cs	35aa8 <PyInit__decimal@@Base+0x1b528>  // b.hs, b.nlast
   35ec8:	ldr	x2, [x2, #96]
   35ecc:	cmp	x1, x2
   35ed0:	cset	x4, cs  // cs = hs, nlast
   35ed4:	add	x4, x4, #0xc
   35ed8:	b	35aa8 <PyInit__decimal@@Base+0x1b528>
   35edc:	ldr	x3, [x2, #112]
   35ee0:	cmp	x1, x3
   35ee4:	b.cs	35fec <PyInit__decimal@@Base+0x1ba6c>  // b.hs, b.nlast
   35ee8:	ldr	x3, [x2, #88]
   35eec:	cmp	x1, x3
   35ef0:	b.cc	360a4 <PyInit__decimal@@Base+0x1bb24>  // b.lo, b.ul, b.last
   35ef4:	ldr	x4, [x2, #104]
   35ef8:	mov	x3, #0xe                   	// #14
   35efc:	cmp	x1, x4
   35f00:	b.cs	35ce0 <PyInit__decimal@@Base+0x1b760>  // b.hs, b.nlast
   35f04:	ldr	x2, [x2, #96]
   35f08:	cmp	x1, x2
   35f0c:	cset	x3, cs  // cs = hs, nlast
   35f10:	add	x3, x3, #0xc
   35f14:	b	35ce0 <PyInit__decimal@@Base+0x1b760>
   35f18:	ldr	x4, [x2, #48]
   35f1c:	cmp	x1, x4
   35f20:	b.cc	36054 <PyInit__decimal@@Base+0x1bad4>  // b.lo, b.ul, b.last
   35f24:	ldr	x5, [x2, #64]
   35f28:	mov	x4, #0x9                   	// #9
   35f2c:	cmp	x1, x5
   35f30:	b.cs	35aa8 <PyInit__decimal@@Base+0x1b528>  // b.hs, b.nlast
   35f34:	ldr	x2, [x2, #56]
   35f38:	cmp	x1, x2
   35f3c:	cset	x4, cs  // cs = hs, nlast
   35f40:	add	x4, x4, #0x7
   35f44:	b	35aa8 <PyInit__decimal@@Base+0x1b528>
   35f48:	ldr	x4, [x2, #144]
   35f4c:	cmp	x1, x4
   35f50:	b.cs	3602c <PyInit__decimal@@Base+0x1baac>  // b.hs, b.nlast
   35f54:	ldr	x4, [x2, #128]
   35f58:	cmp	x1, x4
   35f5c:	b.cs	36090 <PyInit__decimal@@Base+0x1bb10>  // b.hs, b.nlast
   35f60:	ldr	x2, [x2, #120]
   35f64:	cmp	x1, x2
   35f68:	cset	x4, cs  // cs = hs, nlast
   35f6c:	add	x4, x4, #0xf
   35f70:	b	35aa8 <PyInit__decimal@@Base+0x1b528>
   35f74:	mov	x2, x24
   35f78:	mov	x0, x23
   35f7c:	mov	w1, #0x200                 	// #512
   35f80:	bl	28d68 <PyInit__decimal@@Base+0xe7e8>
   35f84:	b	35ad4 <PyInit__decimal@@Base+0x1b554>
   35f88:	mov	x1, x19
   35f8c:	mov	x0, x23
   35f90:	bl	28e70 <PyInit__decimal@@Base+0xe8f0>
   35f94:	mov	x19, x0
   35f98:	ldr	x1, [x25]
   35f9c:	sub	x0, x1, #0x1
   35fa0:	cmp	x19, x0
   35fa4:	b.le	35de4 <PyInit__decimal@@Base+0x1b864>
   35fa8:	ldr	w1, [x24]
   35fac:	mov	x19, x0
   35fb0:	orr	w0, w1, #0x1000
   35fb4:	str	w0, [x24]
   35fb8:	b	35de4 <PyInit__decimal@@Base+0x1b864>
   35fbc:	ldr	x3, [x2, #48]
   35fc0:	cmp	x1, x3
   35fc4:	b.cc	360b8 <PyInit__decimal@@Base+0x1bb38>  // b.lo, b.ul, b.last
   35fc8:	ldr	x4, [x2, #64]
   35fcc:	mov	x3, #0x9                   	// #9
   35fd0:	cmp	x1, x4
   35fd4:	b.cs	35ce0 <PyInit__decimal@@Base+0x1b760>  // b.hs, b.nlast
   35fd8:	ldr	x2, [x2, #56]
   35fdc:	cmp	x1, x2
   35fe0:	cset	x3, cs  // cs = hs, nlast
   35fe4:	add	x3, x3, #0x7
   35fe8:	b	35ce0 <PyInit__decimal@@Base+0x1b760>
   35fec:	ldr	x3, [x2, #144]
   35ff0:	cmp	x1, x3
   35ff4:	b.cs	36068 <PyInit__decimal@@Base+0x1bae8>  // b.hs, b.nlast
   35ff8:	ldr	x3, [x2, #128]
   35ffc:	cmp	x1, x3
   36000:	b.cs	360cc <PyInit__decimal@@Base+0x1bb4c>  // b.hs, b.nlast
   36004:	ldr	x2, [x2, #120]
   36008:	cmp	x1, x2
   3600c:	cset	x3, cs  // cs = hs, nlast
   36010:	add	x3, x3, #0xf
   36014:	b	35ce0 <PyInit__decimal@@Base+0x1b760>
   36018:	ldr	x2, [x2, #24]
   3601c:	cmp	x1, x2
   36020:	cset	x4, cs  // cs = hs, nlast
   36024:	add	x4, x4, #0x3
   36028:	b	35aa8 <PyInit__decimal@@Base+0x1b528>
   3602c:	ldr	x2, [x2, #152]
   36030:	cmp	x1, x2
   36034:	cset	x4, cs  // cs = hs, nlast
   36038:	add	x4, x4, #0x13
   3603c:	b	35aa8 <PyInit__decimal@@Base+0x1b528>
   36040:	ldr	x2, [x2, #80]
   36044:	cmp	x1, x2
   36048:	cset	x4, cs  // cs = hs, nlast
   3604c:	add	x4, x4, #0xa
   36050:	b	35aa8 <PyInit__decimal@@Base+0x1b528>
   36054:	ldr	x2, [x2, #40]
   36058:	cmp	x1, x2
   3605c:	cset	x4, cs  // cs = hs, nlast
   36060:	add	x4, x4, #0x5
   36064:	b	35aa8 <PyInit__decimal@@Base+0x1b528>
   36068:	ldr	x2, [x2, #152]
   3606c:	cmp	x1, x2
   36070:	cset	x3, cs  // cs = hs, nlast
   36074:	add	x3, x3, #0x13
   36078:	b	35ce0 <PyInit__decimal@@Base+0x1b760>
   3607c:	ldr	x2, [x2, #24]
   36080:	cmp	x1, x2
   36084:	cset	x3, cs  // cs = hs, nlast
   36088:	add	x3, x3, #0x3
   3608c:	b	35ce0 <PyInit__decimal@@Base+0x1b760>
   36090:	ldr	x2, [x2, #136]
   36094:	cmp	x1, x2
   36098:	cset	x4, cs  // cs = hs, nlast
   3609c:	add	x4, x4, #0x11
   360a0:	b	35aa8 <PyInit__decimal@@Base+0x1b528>
   360a4:	ldr	x2, [x2, #80]
   360a8:	cmp	x1, x2
   360ac:	cset	x3, cs  // cs = hs, nlast
   360b0:	add	x3, x3, #0xa
   360b4:	b	35ce0 <PyInit__decimal@@Base+0x1b760>
   360b8:	ldr	x2, [x2, #40]
   360bc:	cmp	x1, x2
   360c0:	cset	x3, cs  // cs = hs, nlast
   360c4:	add	x3, x3, #0x5
   360c8:	b	35ce0 <PyInit__decimal@@Base+0x1b760>
   360cc:	ldr	x2, [x2, #136]
   360d0:	cmp	x1, x2
   360d4:	cset	x3, cs  // cs = hs, nlast
   360d8:	add	x3, x3, #0x11
   360dc:	b	35ce0 <PyInit__decimal@@Base+0x1b760>
   360e0:	stp	x29, x30, [sp, #-64]!
   360e4:	mov	x29, sp
   360e8:	stp	x19, x20, [sp, #16]
   360ec:	mov	x19, x1
   360f0:	mov	x20, x2
   360f4:	stp	x21, x22, [sp, #32]
   360f8:	mov	x21, x3
   360fc:	mov	x22, x0
   36100:	str	x23, [sp, #48]
   36104:	mov	x23, x4
   36108:	ldrb	w5, [x1]
   3610c:	tst	w5, #0xe
   36110:	b.ne	36188 <PyInit__decimal@@Base+0x1bc08>  // b.any
   36114:	ldrb	w2, [x2]
   36118:	tst	w2, #0xe
   3611c:	b.ne	36188 <PyInit__decimal@@Base+0x1bc08>  // b.any
   36120:	ldr	x20, [x20, #8]
   36124:	ldr	x2, [x3, #8]
   36128:	cmp	x2, x20
   3612c:	b.lt	361b4 <PyInit__decimal@@Base+0x1bc34>  // b.tstop
   36130:	ldr	x2, [x21, #16]
   36134:	ldr	x3, [x3]
   36138:	add	x2, x2, #0x1
   3613c:	sub	x2, x2, x3
   36140:	cmp	x20, x2
   36144:	b.lt	361b4 <PyInit__decimal@@Base+0x1bc34>  // b.tstop
   36148:	ldr	x2, [x1, #24]
   3614c:	ldr	x4, [x1, #40]
   36150:	add	x2, x4, x2, lsl #3
   36154:	ldur	x2, [x2, #-8]
   36158:	cbnz	x2, 36208 <PyInit__decimal@@Base+0x1bc88>
   3615c:	and	w1, w5, #0x1
   36160:	mov	x3, x20
   36164:	bl	26d90 <PyInit__decimal@@Base+0xc810>
   36168:	mov	x2, x23
   3616c:	mov	x1, x21
   36170:	mov	x0, x22
   36174:	ldp	x19, x20, [sp, #16]
   36178:	ldp	x21, x22, [sp, #32]
   3617c:	ldr	x23, [sp, #48]
   36180:	ldp	x29, x30, [sp], #64
   36184:	b	2b110 <PyInit__decimal@@Base+0x10b90>
   36188:	mov	x3, x21
   3618c:	mov	x4, x23
   36190:	mov	x2, x20
   36194:	mov	x1, x19
   36198:	mov	x0, x22
   3619c:	bl	29108 <PyInit__decimal@@Base+0xeb88>
   361a0:	cbnz	w0, 361d4 <PyInit__decimal@@Base+0x1bc54>
   361a4:	ldrb	w0, [x19]
   361a8:	tbz	w0, #1, 361b4 <PyInit__decimal@@Base+0x1bc34>
   361ac:	ldrb	w0, [x20]
   361b0:	tbnz	w0, #1, 361e8 <PyInit__decimal@@Base+0x1bc68>
   361b4:	mov	x2, x23
   361b8:	mov	x0, x22
   361bc:	ldp	x19, x20, [sp, #16]
   361c0:	mov	w1, #0x100                 	// #256
   361c4:	ldp	x21, x22, [sp, #32]
   361c8:	ldr	x23, [sp, #48]
   361cc:	ldp	x29, x30, [sp], #64
   361d0:	b	28d68 <PyInit__decimal@@Base+0xe7e8>
   361d4:	ldp	x19, x20, [sp, #16]
   361d8:	ldp	x21, x22, [sp, #32]
   361dc:	ldr	x23, [sp, #48]
   361e0:	ldp	x29, x30, [sp], #64
   361e4:	ret
   361e8:	mov	x2, x23
   361ec:	mov	x1, x19
   361f0:	mov	x0, x22
   361f4:	ldp	x19, x20, [sp, #16]
   361f8:	ldp	x21, x22, [sp, #32]
   361fc:	ldr	x23, [sp, #48]
   36200:	ldp	x29, x30, [sp], #64
   36204:	b	28fe0 <PyInit__decimal@@Base+0xea60>
   36208:	ldp	x5, x4, [x1, #8]
   3620c:	sub	x2, x5, x20
   36210:	add	x4, x2, x4
   36214:	cmp	x4, x3
   36218:	b.gt	361b4 <PyInit__decimal@@Base+0x1bc34>
   3621c:	tbnz	x2, #63, 36280 <PyInit__decimal@@Base+0x1bd00>
   36220:	mov	x3, x23
   36224:	bl	2a2e0 <PyInit__decimal@@Base+0xfd60>
   36228:	cbz	w0, 361d4 <PyInit__decimal@@Base+0x1bc54>
   3622c:	ldr	x1, [x22, #16]
   36230:	mov	w3, #0x0                   	// #0
   36234:	str	x20, [x22, #8]
   36238:	ldr	x0, [x21, #8]
   3623c:	add	x20, x1, x20
   36240:	sub	x20, x20, #0x1
   36244:	cmp	x0, x20
   36248:	b.lt	361b4 <PyInit__decimal@@Base+0x1bc34>  // b.tstop
   3624c:	ldr	x0, [x21, #16]
   36250:	ldr	x1, [x21]
   36254:	add	x0, x0, #0x1
   36258:	sub	x0, x0, x1
   3625c:	cmp	x20, x0
   36260:	b.lt	361b4 <PyInit__decimal@@Base+0x1bc34>  // b.tstop
   36264:	ldr	w4, [x23]
   36268:	mov	x1, x21
   3626c:	mov	x0, x22
   36270:	mov	x2, x23
   36274:	orr	w3, w4, w3
   36278:	str	w3, [x23]
   3627c:	b	36174 <PyInit__decimal@@Base+0x1bbf4>
   36280:	sub	x2, x20, x5
   36284:	mov	x3, x23
   36288:	bl	2bf80 <PyInit__decimal@@Base+0x11a00>
   3628c:	mov	x19, x0
   36290:	cmn	x0, #0x1
   36294:	b.eq	361d4 <PyInit__decimal@@Base+0x1bc54>  // b.none
   36298:	ldr	w0, [x21, #36]
   3629c:	str	x20, [x22, #8]
   362a0:	cmp	w0, #0x4
   362a4:	b.eq	3648c <PyInit__decimal@@Base+0x1bf0c>  // b.none
   362a8:	b.gt	363d4 <PyInit__decimal@@Base+0x1be54>
   362ac:	cmp	w0, #0x2
   362b0:	b.eq	36478 <PyInit__decimal@@Base+0x1bef8>  // b.none
   362b4:	cmp	w0, #0x3
   362b8:	b.ne	362d8 <PyInit__decimal@@Base+0x1bd58>  // b.any
   362bc:	cbz	x19, 36418 <PyInit__decimal@@Base+0x1be98>
   362c0:	ldrb	w0, [x22]
   362c4:	and	w0, w0, #0x1
   362c8:	cbnz	w0, 362e8 <PyInit__decimal@@Base+0x1bd68>
   362cc:	mov	w3, #0x1040                	// #4160
   362d0:	ldr	x1, [x22, #16]
   362d4:	b	36238 <PyInit__decimal@@Base+0x1bcb8>
   362d8:	cmp	x19, #0x0
   362dc:	cset	w1, ne  // ne = any
   362e0:	cbnz	w0, 363cc <PyInit__decimal@@Base+0x1be4c>
   362e4:	cbz	w1, 363cc <PyInit__decimal@@Base+0x1be4c>
   362e8:	ldr	x1, [x22, #24]
   362ec:	ldr	x0, [x22, #40]
   362f0:	bl	1b3b8 <PyInit__decimal@@Base+0xe38>
   362f4:	cbz	x0, 36498 <PyInit__decimal@@Base+0x1bf18>
   362f8:	ldp	x0, x3, [x22, #24]
   362fc:	adrp	x1, 5f000 <PyInit__decimal@@Base+0x44a80>
   36300:	ldr	x2, [x1, #1672]
   36304:	add	x1, x0, #0x1
   36308:	cmp	x1, x2
   3630c:	csel	x1, x1, x2, ge  // ge = tcont
   36310:	cmp	x1, x3
   36314:	b.eq	36328 <PyInit__decimal@@Base+0x1bda8>  // b.none
   36318:	ldrb	w2, [x22]
   3631c:	tbz	w2, #5, 36500 <PyInit__decimal@@Base+0x1bf80>
   36320:	cmp	x1, x3
   36324:	b.gt	3652c <PyInit__decimal@@Base+0x1bfac>
   36328:	ldr	x1, [x22, #40]
   3632c:	mov	x2, #0x1                   	// #1
   36330:	str	x2, [x1, x0, lsl #3]
   36334:	ldr	x2, [x22, #24]
   36338:	add	x0, x2, #0x1
   3633c:	str	x0, [x22, #24]
   36340:	add	x1, x1, x0, lsl #3
   36344:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27a80>
   36348:	add	x0, x0, #0x2d0
   3634c:	ldur	x1, [x1, #-8]
   36350:	ldr	x3, [x0, #72]
   36354:	cmp	x1, x3
   36358:	b.cs	36424 <PyInit__decimal@@Base+0x1bea4>  // b.hs, b.nlast
   3635c:	ldr	x3, [x0, #32]
   36360:	cmp	x1, x3
   36364:	b.cs	364d4 <PyInit__decimal@@Base+0x1bf54>  // b.hs, b.nlast
   36368:	ldr	x3, [x0, #16]
   3636c:	cmp	x1, x3
   36370:	b.cs	36518 <PyInit__decimal@@Base+0x1bf98>  // b.hs, b.nlast
   36374:	ldr	x0, [x0, #8]
   36378:	cmp	x1, x0
   3637c:	cset	w1, cs  // cs = hs, nlast
   36380:	add	w1, w1, #0x1
   36384:	add	x0, x2, x2, lsl #2
   36388:	ldr	x3, [x21]
   3638c:	lsl	x0, x0, #2
   36390:	sub	x0, x0, x2
   36394:	add	x1, x0, w1, sxtw
   36398:	str	x1, [x22, #16]
   3639c:	cmp	x3, x1
   363a0:	b.lt	361b4 <PyInit__decimal@@Base+0x1bc34>  // b.tstop
   363a4:	ldr	x20, [x22, #8]
   363a8:	cmp	x19, #0x0
   363ac:	mov	w3, #0x1000                	// #4096
   363b0:	mov	w0, #0x1040                	// #4160
   363b4:	csel	w3, w3, w0, eq  // eq = none
   363b8:	b	36238 <PyInit__decimal@@Base+0x1bcb8>
   363bc:	cmp	x19, #0x5
   363c0:	cset	w1, hi  // hi = pmore
   363c4:	cmp	w0, #0x5
   363c8:	b.eq	362e4 <PyInit__decimal@@Base+0x1bd64>  // b.none
   363cc:	ldr	x1, [x22, #16]
   363d0:	b	363a8 <PyInit__decimal@@Base+0x1be28>
   363d4:	cmp	w0, #0x6
   363d8:	b.eq	3645c <PyInit__decimal@@Base+0x1bedc>  // b.none
   363dc:	cmp	w0, #0x7
   363e0:	b.ne	363bc <PyInit__decimal@@Base+0x1be3c>  // b.any
   363e4:	cbz	x19, 36418 <PyInit__decimal@@Base+0x1be98>
   363e8:	ldr	x1, [x22, #40]
   363ec:	mov	x0, #0xcccccccccccccccc    	// #-3689348814741910324
   363f0:	movk	x0, #0xcccd
   363f4:	ldr	x1, [x1]
   363f8:	umulh	x0, x1, x0
   363fc:	lsr	x0, x0, #3
   36400:	add	x0, x0, x0, lsl #2
   36404:	sub	x0, x1, x0, lsl #1
   36408:	cmp	w0, #0x0
   3640c:	ccmp	w0, #0x5, #0x4, ne  // ne = any
   36410:	b.eq	362e8 <PyInit__decimal@@Base+0x1bd68>  // b.none
   36414:	b	362cc <PyInit__decimal@@Base+0x1bd4c>
   36418:	mov	w3, #0x1000                	// #4096
   3641c:	ldr	x1, [x22, #16]
   36420:	b	36238 <PyInit__decimal@@Base+0x1bcb8>
   36424:	ldr	x3, [x0, #112]
   36428:	cmp	x1, x3
   3642c:	b.cs	364a8 <PyInit__decimal@@Base+0x1bf28>  // b.hs, b.nlast
   36430:	ldr	x3, [x0, #88]
   36434:	cmp	x1, x3
   36438:	b.cc	36550 <PyInit__decimal@@Base+0x1bfd0>  // b.lo, b.ul, b.last
   3643c:	ldr	x3, [x0, #104]
   36440:	cmp	x1, x3
   36444:	b.cs	36594 <PyInit__decimal@@Base+0x1c014>  // b.hs, b.nlast
   36448:	ldr	x0, [x0, #96]
   3644c:	cmp	x1, x0
   36450:	cset	w1, cs  // cs = hs, nlast
   36454:	add	w1, w1, #0xc
   36458:	b	36384 <PyInit__decimal@@Base+0x1be04>
   3645c:	cmp	x19, #0x5
   36460:	b.hi	362e8 <PyInit__decimal@@Base+0x1bd68>  // b.pmore
   36464:	b.ne	363cc <PyInit__decimal@@Base+0x1be4c>  // b.any
   36468:	ldr	x0, [x22, #40]
   3646c:	ldr	x0, [x0]
   36470:	and	w0, w0, #0x1
   36474:	b	362c8 <PyInit__decimal@@Base+0x1bd48>
   36478:	cbz	x19, 36418 <PyInit__decimal@@Base+0x1be98>
   3647c:	ldrb	w0, [x22]
   36480:	mvn	w0, w0
   36484:	and	w0, w0, #0x1
   36488:	b	362c8 <PyInit__decimal@@Base+0x1bd48>
   3648c:	cmp	x19, #0x4
   36490:	cset	w1, hi  // hi = pmore
   36494:	b	362e4 <PyInit__decimal@@Base+0x1bd64>
   36498:	ldr	x0, [x22, #24]
   3649c:	ldr	x1, [x22, #40]
   364a0:	sub	x2, x0, #0x1
   364a4:	b	36340 <PyInit__decimal@@Base+0x1bdc0>
   364a8:	ldr	x3, [x0, #144]
   364ac:	cmp	x1, x3
   364b0:	b.cs	3653c <PyInit__decimal@@Base+0x1bfbc>  // b.hs, b.nlast
   364b4:	ldr	x3, [x0, #128]
   364b8:	cmp	x1, x3
   364bc:	b.cs	36580 <PyInit__decimal@@Base+0x1c000>  // b.hs, b.nlast
   364c0:	ldr	x0, [x0, #120]
   364c4:	cmp	x1, x0
   364c8:	cset	w1, cs  // cs = hs, nlast
   364cc:	add	w1, w1, #0xf
   364d0:	b	36384 <PyInit__decimal@@Base+0x1be04>
   364d4:	ldr	x3, [x0, #48]
   364d8:	cmp	x1, x3
   364dc:	b.cc	36564 <PyInit__decimal@@Base+0x1bfe4>  // b.lo, b.ul, b.last
   364e0:	ldr	x3, [x0, #64]
   364e4:	cmp	x1, x3
   364e8:	b.cs	36578 <PyInit__decimal@@Base+0x1bff8>  // b.hs, b.nlast
   364ec:	ldr	x0, [x0, #56]
   364f0:	cmp	x1, x0
   364f4:	cset	w1, cs  // cs = hs, nlast
   364f8:	add	w1, w1, #0x7
   364fc:	b	36384 <PyInit__decimal@@Base+0x1be04>
   36500:	mov	x2, x23
   36504:	mov	x0, x22
   36508:	bl	25588 <PyInit__decimal@@Base+0xb008>
   3650c:	cbz	w0, 361d4 <PyInit__decimal@@Base+0x1bc54>
   36510:	ldr	x0, [x22, #24]
   36514:	b	36328 <PyInit__decimal@@Base+0x1bda8>
   36518:	ldr	x0, [x0, #24]
   3651c:	cmp	x1, x0
   36520:	cset	w1, cs  // cs = hs, nlast
   36524:	add	w1, w1, #0x3
   36528:	b	36384 <PyInit__decimal@@Base+0x1be04>
   3652c:	mov	x2, x23
   36530:	mov	x0, x22
   36534:	bl	25438 <PyInit__decimal@@Base+0xaeb8>
   36538:	b	3650c <PyInit__decimal@@Base+0x1bf8c>
   3653c:	ldr	x0, [x0, #152]
   36540:	cmp	x1, x0
   36544:	cset	w1, cs  // cs = hs, nlast
   36548:	add	w1, w1, #0x13
   3654c:	b	36384 <PyInit__decimal@@Base+0x1be04>
   36550:	ldr	x0, [x0, #80]
   36554:	cmp	x1, x0
   36558:	cset	w1, cs  // cs = hs, nlast
   3655c:	add	w1, w1, #0xa
   36560:	b	36384 <PyInit__decimal@@Base+0x1be04>
   36564:	ldr	x0, [x0, #40]
   36568:	cmp	x1, x0
   3656c:	cset	w1, cs  // cs = hs, nlast
   36570:	add	w1, w1, #0x5
   36574:	b	36384 <PyInit__decimal@@Base+0x1be04>
   36578:	mov	w1, #0x9                   	// #9
   3657c:	b	36384 <PyInit__decimal@@Base+0x1be04>
   36580:	ldr	x0, [x0, #136]
   36584:	cmp	x1, x0
   36588:	cset	w1, cs  // cs = hs, nlast
   3658c:	add	w1, w1, #0x11
   36590:	b	36384 <PyInit__decimal@@Base+0x1be04>
   36594:	mov	w1, #0xe                   	// #14
   36598:	b	36384 <PyInit__decimal@@Base+0x1be04>
   3659c:	nop
   365a0:	stp	x29, x30, [sp, #-64]!
   365a4:	mov	x29, sp
   365a8:	stp	x19, x20, [sp, #16]
   365ac:	mov	x19, x0
   365b0:	stp	x21, x22, [sp, #32]
   365b4:	mov	x21, x3
   365b8:	ldrb	w22, [x1]
   365bc:	tst	w22, #0xe
   365c0:	b.eq	365e0 <PyInit__decimal@@Base+0x1c060>  // b.none
   365c4:	mov	x20, x1
   365c8:	bl	29098 <PyInit__decimal@@Base+0xeb18>
   365cc:	cbz	w0, 366f0 <PyInit__decimal@@Base+0x1c170>
   365d0:	ldp	x19, x20, [sp, #16]
   365d4:	ldp	x21, x22, [sp, #32]
   365d8:	ldp	x29, x30, [sp], #64
   365dc:	ret
   365e0:	str	x23, [sp, #48]
   365e4:	mov	x23, x2
   365e8:	mov	x2, x3
   365ec:	bl	28fe0 <PyInit__decimal@@Base+0xea60>
   365f0:	cbz	w0, 366dc <PyInit__decimal@@Base+0x1c15c>
   365f4:	mov	x0, x19
   365f8:	mov	x2, x21
   365fc:	mov	x1, x23
   36600:	bl	2b110 <PyInit__decimal@@Base+0x10b90>
   36604:	ldrb	w0, [x19]
   36608:	tst	w0, #0xe
   3660c:	b.ne	366dc <PyInit__decimal@@Base+0x1c15c>  // b.any
   36610:	ldr	x2, [x19, #24]
   36614:	ldr	x3, [x19, #40]
   36618:	add	x0, x3, x2, lsl #3
   3661c:	ldur	x0, [x0, #-8]
   36620:	cbz	x0, 3670c <PyInit__decimal@@Base+0x1c18c>
   36624:	cmp	x2, #0x0
   36628:	mov	x1, #0x0                   	// #0
   3662c:	b.gt	36640 <PyInit__decimal@@Base+0x1c0c0>
   36630:	b	36694 <PyInit__decimal@@Base+0x1c114>
   36634:	add	x1, x1, #0x1
   36638:	cmp	x2, x1
   3663c:	b.eq	36730 <PyInit__decimal@@Base+0x1c1b0>  // b.none
   36640:	ldr	x0, [x3, x1, lsl #3]
   36644:	cbz	x0, 36634 <PyInit__decimal@@Base+0x1c0b4>
   36648:	mov	x3, #0xcccccccccccccccc    	// #-3689348814741910324
   3664c:	add	x2, x1, x1, lsl #2
   36650:	movk	x3, #0xcccd
   36654:	mov	x4, #0x9999999999999999    	// #-7378697629483820647
   36658:	lsl	x2, x2, #2
   3665c:	movk	x4, #0x1999, lsl #48
   36660:	mul	x5, x0, x3
   36664:	sub	x1, x2, x1
   36668:	ror	x2, x5, #1
   3666c:	cmp	x2, x4
   36670:	b.hi	36694 <PyInit__decimal@@Base+0x1c114>  // b.pmore
   36674:	nop
   36678:	umulh	x0, x0, x3
   3667c:	add	x1, x1, #0x1
   36680:	lsr	x0, x0, #3
   36684:	mul	x2, x0, x3
   36688:	ror	x2, x2, #1
   3668c:	cmp	x2, x4
   36690:	b.ls	36678 <PyInit__decimal@@Base+0x1c0f8>  // b.plast
   36694:	ldr	w0, [x23, #40]
   36698:	ldr	x20, [x23, #8]
   3669c:	cbz	w0, 366ac <PyInit__decimal@@Base+0x1c12c>
   366a0:	ldr	x0, [x23]
   366a4:	add	x20, x20, #0x1
   366a8:	sub	x20, x20, x0
   366ac:	ldr	x2, [x19, #8]
   366b0:	mov	x0, x19
   366b4:	sub	x20, x20, x2
   366b8:	cmp	x20, x1
   366bc:	csel	x20, x20, x1, le
   366c0:	mov	x1, x20
   366c4:	bl	2aa80 <PyInit__decimal@@Base+0x10500>
   366c8:	ldr	x1, [x19, #8]
   366cc:	ldr	x23, [sp, #48]
   366d0:	add	x1, x1, x20
   366d4:	str	x1, [x19, #8]
   366d8:	b	365d0 <PyInit__decimal@@Base+0x1c050>
   366dc:	ldp	x19, x20, [sp, #16]
   366e0:	ldp	x21, x22, [sp, #32]
   366e4:	ldr	x23, [sp, #48]
   366e8:	ldp	x29, x30, [sp], #64
   366ec:	ret
   366f0:	mov	x2, x21
   366f4:	mov	x1, x20
   366f8:	mov	x0, x19
   366fc:	ldp	x19, x20, [sp, #16]
   36700:	ldp	x21, x22, [sp, #32]
   36704:	ldp	x29, x30, [sp], #64
   36708:	b	28fe0 <PyInit__decimal@@Base+0xea60>
   3670c:	and	w1, w22, #0x1
   36710:	mov	x0, x19
   36714:	ldp	x19, x20, [sp, #16]
   36718:	mov	x3, #0x0                   	// #0
   3671c:	ldp	x21, x22, [sp, #32]
   36720:	mov	x2, #0x0                   	// #0
   36724:	ldr	x23, [sp, #48]
   36728:	ldp	x29, x30, [sp], #64
   3672c:	b	26d90 <PyInit__decimal@@Base+0xc810>
   36730:	mov	x1, #0x0                   	// #0
   36734:	b	36694 <PyInit__decimal@@Base+0x1c114>
   36738:	sub	sp, sp, #0x270
   3673c:	mov	w6, #0x30                  	// #48
   36740:	mov	x5, #0x40                  	// #64
   36744:	stp	x29, x30, [sp]
   36748:	mov	x29, sp
   3674c:	stp	x19, x20, [sp, #16]
   36750:	mov	x19, x1
   36754:	add	x1, sp, #0x70
   36758:	stp	x21, x22, [sp, #32]
   3675c:	mov	x20, x2
   36760:	mov	x21, x4
   36764:	stp	x23, x24, [sp, #48]
   36768:	mov	x22, x0
   3676c:	mov	x23, x3
   36770:	strb	w6, [sp, #64]
   36774:	stp	xzr, xzr, [sp, #72]
   36778:	stp	xzr, x5, [sp, #88]
   3677c:	str	x1, [sp, #104]
   36780:	ldrb	w1, [x19]
   36784:	tst	w1, #0xe
   36788:	b.ne	36798 <PyInit__decimal@@Base+0x1c218>  // b.any
   3678c:	ldrb	w1, [x2]
   36790:	tst	w1, #0xe
   36794:	b.eq	367fc <PyInit__decimal@@Base+0x1c27c>  // b.none
   36798:	mov	x4, x21
   3679c:	mov	x3, x23
   367a0:	mov	x2, x20
   367a4:	mov	x1, x19
   367a8:	mov	x0, x22
   367ac:	bl	29108 <PyInit__decimal@@Base+0xeb88>
   367b0:	cbnz	w0, 367e4 <PyInit__decimal@@Base+0x1c264>
   367b4:	ldrb	w0, [x19]
   367b8:	tbnz	w0, #1, 36834 <PyInit__decimal@@Base+0x1c2b4>
   367bc:	ldrb	w0, [x20]
   367c0:	tbz	w0, #1, 368d8 <PyInit__decimal@@Base+0x1c358>
   367c4:	mov	x1, x19
   367c8:	mov	x2, x21
   367cc:	mov	x0, x22
   367d0:	bl	28fe0 <PyInit__decimal@@Base+0xea60>
   367d4:	mov	x2, x21
   367d8:	mov	x1, x23
   367dc:	mov	x0, x22
   367e0:	bl	2b110 <PyInit__decimal@@Base+0x10b90>
   367e4:	ldp	x29, x30, [sp]
   367e8:	ldp	x19, x20, [sp, #16]
   367ec:	ldp	x21, x22, [sp, #32]
   367f0:	ldp	x23, x24, [sp, #48]
   367f4:	add	sp, sp, #0x270
   367f8:	ret
   367fc:	ldr	x1, [x2, #24]
   36800:	ldr	x2, [x2, #40]
   36804:	add	x1, x2, x1, lsl #3
   36808:	ldur	x1, [x1, #-8]
   3680c:	cbnz	x1, 3685c <PyInit__decimal@@Base+0x1c2dc>
   36810:	ldr	x1, [x19, #24]
   36814:	ldr	x2, [x19, #40]
   36818:	add	x1, x2, x1, lsl #3
   3681c:	ldur	x1, [x1, #-8]
   36820:	cbnz	x1, 36834 <PyInit__decimal@@Base+0x1c2b4>
   36824:	mov	x2, x4
   36828:	mov	w1, #0x10                  	// #16
   3682c:	bl	28d68 <PyInit__decimal@@Base+0xe7e8>
   36830:	b	367e4 <PyInit__decimal@@Base+0x1c264>
   36834:	mov	x2, x21
   36838:	mov	x0, x22
   3683c:	mov	w1, #0x100                 	// #256
   36840:	bl	28d68 <PyInit__decimal@@Base+0xe7e8>
   36844:	ldp	x29, x30, [sp]
   36848:	ldp	x19, x20, [sp, #16]
   3684c:	ldp	x21, x22, [sp, #32]
   36850:	ldp	x23, x24, [sp, #48]
   36854:	add	sp, sp, #0x270
   36858:	ret
   3685c:	add	x24, sp, #0x40
   36860:	mov	x5, x4
   36864:	mov	x0, x24
   36868:	mov	x3, x20
   3686c:	mov	x2, x19
   36870:	mov	x4, x23
   36874:	mov	x1, x22
   36878:	bl	2fa48 <PyInit__decimal@@Base+0x154c8>
   3687c:	ldrb	w0, [sp, #64]
   36880:	tst	w0, #0xe0
   36884:	b.ne	3689c <PyInit__decimal@@Base+0x1c31c>  // b.any
   36888:	adrp	x1, 5f000 <PyInit__decimal@@Base+0x44a80>
   3688c:	ldr	x0, [sp, #104]
   36890:	ldr	x1, [x1, #1704]
   36894:	blr	x1
   36898:	ldrb	w0, [sp, #64]
   3689c:	tbnz	w0, #4, 368b0 <PyInit__decimal@@Base+0x1c330>
   368a0:	adrp	x1, 5f000 <PyInit__decimal@@Base+0x44a80>
   368a4:	mov	x0, x24
   368a8:	ldr	x1, [x1, #1704]
   368ac:	blr	x1
   368b0:	mov	x2, x21
   368b4:	mov	x1, x23
   368b8:	mov	x0, x22
   368bc:	bl	2b110 <PyInit__decimal@@Base+0x10b90>
   368c0:	ldp	x29, x30, [sp]
   368c4:	ldp	x19, x20, [sp, #16]
   368c8:	ldp	x21, x22, [sp, #32]
   368cc:	ldp	x23, x24, [sp, #48]
   368d0:	add	sp, sp, #0x270
   368d4:	ret
   368d8:	bl	67c0 <abort@plt>
   368dc:	nop
   368e0:	sub	sp, sp, #0xa20
   368e4:	mov	w7, #0x30                  	// #48
   368e8:	mov	x6, #0x40                  	// #64
   368ec:	add	x11, sp, #0x220
   368f0:	add	x10, sp, #0x420
   368f4:	add	x9, sp, #0x620
   368f8:	stp	x29, x30, [sp]
   368fc:	mov	x29, sp
   36900:	mov	x8, #0x2                   	// #2
   36904:	mov	w13, #0xffffff90            	// #-112
   36908:	stp	x19, x20, [sp, #16]
   3690c:	mov	x20, x2
   36910:	mov	x19, x1
   36914:	stp	x21, x22, [sp, #32]
   36918:	mov	x21, x3
   3691c:	mov	x2, #0x1                   	// #1
   36920:	stp	x25, x26, [sp, #64]
   36924:	add	x3, sp, #0x820
   36928:	mov	x22, x4
   3692c:	stp	x27, x28, [sp, #80]
   36930:	mov	x28, x0
   36934:	mov	x25, x5
   36938:	ldrb	w12, [x1]
   3693c:	add	x1, sp, #0x98
   36940:	str	x8, [sp, #152]
   36944:	strb	w7, [sp, #208]
   36948:	stp	xzr, xzr, [sp, #216]
   3694c:	stp	xzr, x6, [sp, #232]
   36950:	str	x11, [sp, #248]
   36954:	strb	w7, [sp, #256]
   36958:	stp	xzr, xzr, [sp, #264]
   3695c:	stp	xzr, x6, [sp, #280]
   36960:	str	x10, [sp, #296]
   36964:	strb	w7, [sp, #304]
   36968:	stp	xzr, xzr, [sp, #312]
   3696c:	stp	xzr, x6, [sp, #328]
   36970:	str	x9, [sp, #344]
   36974:	strb	w7, [sp, #352]
   36978:	stp	xzr, xzr, [sp, #360]
   3697c:	ldrb	w7, [x20]
   36980:	str	x1, [sp, #440]
   36984:	ldrb	w1, [x21]
   36988:	stp	xzr, x6, [sp, #376]
   3698c:	orr	w0, w7, w1
   36990:	str	x3, [sp, #392]
   36994:	orr	w0, w12, w0
   36998:	strb	w13, [sp, #400]
   3699c:	tst	w0, #0xe
   369a0:	stp	xzr, x2, [sp, #408]
   369a4:	stp	x2, x2, [sp, #424]
   369a8:	b.eq	36a54 <PyInit__decimal@@Base+0x1c4d4>  // b.none
   369ac:	tst	w0, #0xc
   369b0:	b.ne	369e0 <PyInit__decimal@@Base+0x1c460>  // b.any
   369b4:	mov	x2, x25
   369b8:	mov	x0, x28
   369bc:	mov	w1, #0x100                 	// #256
   369c0:	bl	28d68 <PyInit__decimal@@Base+0xe7e8>
   369c4:	ldp	x29, x30, [sp]
   369c8:	ldp	x19, x20, [sp, #16]
   369cc:	ldp	x21, x22, [sp, #32]
   369d0:	ldp	x25, x26, [sp, #64]
   369d4:	ldp	x27, x28, [sp, #80]
   369d8:	add	sp, sp, #0xa20
   369dc:	ret
   369e0:	tbnz	w12, #3, 36a44 <PyInit__decimal@@Base+0x1c4c4>
   369e4:	tbz	w7, #3, 36b18 <PyInit__decimal@@Base+0x1c598>
   369e8:	ldr	w0, [x5]
   369ec:	mov	x19, x20
   369f0:	orr	w0, w0, #0x100
   369f4:	str	w0, [x5]
   369f8:	mov	x2, x25
   369fc:	mov	x1, x19
   36a00:	mov	x0, x28
   36a04:	bl	28fe0 <PyInit__decimal@@Base+0xea60>
   36a08:	ldrb	w1, [x28]
   36a0c:	mov	x0, x28
   36a10:	and	w1, w1, #0xfffffff1
   36a14:	orr	w1, w1, #0x4
   36a18:	strb	w1, [x28]
   36a1c:	ldr	w2, [x22, #40]
   36a20:	ldr	x1, [x22]
   36a24:	bl	27800 <PyInit__decimal@@Base+0xd280>
   36a28:	ldp	x29, x30, [sp]
   36a2c:	ldp	x19, x20, [sp, #16]
   36a30:	ldp	x21, x22, [sp, #32]
   36a34:	ldp	x25, x26, [sp, #64]
   36a38:	ldp	x27, x28, [sp, #80]
   36a3c:	add	sp, sp, #0xa20
   36a40:	ret
   36a44:	ldr	w0, [x5]
   36a48:	orr	w0, w0, #0x100
   36a4c:	str	w0, [x5]
   36a50:	b	369f8 <PyInit__decimal@@Base+0x1c478>
   36a54:	mov	x0, x19
   36a58:	bl	25638 <PyInit__decimal@@Base+0xb0b8>
   36a5c:	cbz	w0, 369b4 <PyInit__decimal@@Base+0x1c434>
   36a60:	mov	x0, x20
   36a64:	bl	25638 <PyInit__decimal@@Base+0xb0b8>
   36a68:	cbz	w0, 369b4 <PyInit__decimal@@Base+0x1c434>
   36a6c:	mov	x0, x21
   36a70:	bl	25638 <PyInit__decimal@@Base+0xb0b8>
   36a74:	cbz	w0, 369b4 <PyInit__decimal@@Base+0x1c434>
   36a78:	ldr	x0, [x21, #24]
   36a7c:	ldr	x1, [x21, #40]
   36a80:	add	x0, x1, x0, lsl #3
   36a84:	ldur	x0, [x0, #-8]
   36a88:	cbz	x0, 369b4 <PyInit__decimal@@Base+0x1c434>
   36a8c:	ldp	x2, x0, [x21, #8]
   36a90:	ldr	x1, [x22]
   36a94:	add	x0, x0, x2
   36a98:	cmp	x0, x1
   36a9c:	b.gt	369b4 <PyInit__decimal@@Base+0x1c434>
   36aa0:	stp	x23, x24, [sp, #48]
   36aa4:	and	w24, w12, #0x1
   36aa8:	tbz	w12, #0, 36abc <PyInit__decimal@@Base+0x1c53c>
   36aac:	mov	x0, x20
   36ab0:	bl	28c30 <PyInit__decimal@@Base+0xe6b0>
   36ab4:	cmp	w0, #0x0
   36ab8:	cset	w24, ne  // ne = any
   36abc:	ldr	x0, [x20, #24]
   36ac0:	ldr	x1, [x20, #40]
   36ac4:	add	x0, x1, x0, lsl #3
   36ac8:	ldur	x0, [x0, #-8]
   36acc:	cbnz	x0, 36b40 <PyInit__decimal@@Base+0x1c5c0>
   36ad0:	ldr	x0, [x19, #24]
   36ad4:	ldr	x1, [x19, #40]
   36ad8:	add	x0, x1, x0, lsl #3
   36adc:	ldur	x0, [x0, #-8]
   36ae0:	cbz	x0, 36e98 <PyInit__decimal@@Base+0x1c918>
   36ae4:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41a80>
   36ae8:	add	x1, x1, #0xc58
   36aec:	add	x1, x1, #0x60
   36af0:	mov	x0, x21
   36af4:	bl	26bd8 <PyInit__decimal@@Base+0xc658>
   36af8:	cmp	w0, #0x0
   36afc:	mov	w1, w24
   36b00:	mov	x0, x28
   36b04:	cset	x2, ne  // ne = any
   36b08:	mov	x3, #0x0                   	// #0
   36b0c:	bl	26d90 <PyInit__decimal@@Base+0xc810>
   36b10:	ldp	x23, x24, [sp, #48]
   36b14:	b	369c4 <PyInit__decimal@@Base+0x1c444>
   36b18:	tbnz	w1, #3, 36b2c <PyInit__decimal@@Base+0x1c5ac>
   36b1c:	tbnz	w12, #2, 369f8 <PyInit__decimal@@Base+0x1c478>
   36b20:	tst	x7, #0x4
   36b24:	csel	x19, x21, x20, eq  // eq = none
   36b28:	b	369f8 <PyInit__decimal@@Base+0x1c478>
   36b2c:	ldr	w0, [x5]
   36b30:	mov	x19, x21
   36b34:	orr	w0, w0, #0x100
   36b38:	str	w0, [x5]
   36b3c:	b	369f8 <PyInit__decimal@@Base+0x1c478>
   36b40:	tbnz	w7, #0, 36e98 <PyInit__decimal@@Base+0x1c918>
   36b44:	ldr	x0, [x19, #24]
   36b48:	ldr	x1, [x19, #40]
   36b4c:	add	x0, x1, x0, lsl #3
   36b50:	ldur	x0, [x0, #-8]
   36b54:	cbz	x0, 36ea0 <PyInit__decimal@@Base+0x1c920>
   36b58:	add	x23, sp, #0xa0
   36b5c:	add	x22, sp, #0x130
   36b60:	mov	x0, x23
   36b64:	bl	1d4d0 <PyInit__decimal@@Base+0x2f50>
   36b68:	mov	x1, x21
   36b6c:	mov	x0, x22
   36b70:	add	x4, x23, #0x1c
   36b74:	mov	x3, x23
   36b78:	mov	x2, #0x0                   	// #0
   36b7c:	bl	2c168 <PyInit__decimal@@Base+0x11be8>
   36b80:	ldr	w0, [sp, #188]
   36b84:	mov	w1, #0x3be                 	// #958
   36b88:	ands	w1, w0, w1
   36b8c:	b.ne	36ec4 <PyInit__decimal@@Base+0x1c944>  // b.any
   36b90:	ldrb	w7, [sp, #304]
   36b94:	add	x26, sp, #0xd0
   36b98:	mov	x2, x19
   36b9c:	mov	x1, x26
   36ba0:	and	w7, w7, #0xfffffffe
   36ba4:	add	x19, sp, #0x100
   36ba8:	mov	x4, x25
   36bac:	mov	x3, x23
   36bb0:	mov	w0, #0x1                   	// #1
   36bb4:	str	x19, [sp, #136]
   36bb8:	str	wzr, [sp, #188]
   36bbc:	strb	w7, [sp, #304]
   36bc0:	bl	2c5c0 <PyInit__decimal@@Base+0x12040>
   36bc4:	ldrb	w7, [sp, #208]
   36bc8:	mov	x2, x20
   36bcc:	mov	x1, x19
   36bd0:	mov	x4, x25
   36bd4:	and	w7, w7, #0xfffffffe
   36bd8:	mov	x3, x23
   36bdc:	mov	w0, #0x1                   	// #1
   36be0:	strb	w7, [sp, #208]
   36be4:	ldr	x19, [sp, #216]
   36be8:	str	xzr, [sp, #216]
   36bec:	bl	2c5c0 <PyInit__decimal@@Base+0x12040>
   36bf0:	ldr	x20, [sp, #264]
   36bf4:	mov	x4, x25
   36bf8:	mov	x1, x26
   36bfc:	mov	x0, x26
   36c00:	mov	x3, x23
   36c04:	mov	x2, x22
   36c08:	str	x20, [sp, #112]
   36c0c:	str	xzr, [sp, #264]
   36c10:	bl	36738 <PyInit__decimal@@Base+0x1c1b8>
   36c14:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
   36c18:	add	x27, x0, #0xc58
   36c1c:	add	x27, x27, #0x60
   36c20:	mov	x2, x19
   36c24:	mov	x1, x27
   36c28:	mov	x3, x25
   36c2c:	mov	x0, x28
   36c30:	bl	2a2e0 <PyInit__decimal@@Base+0xfd60>
   36c34:	mov	x4, x25
   36c38:	mov	x3, x23
   36c3c:	mov	x2, x22
   36c40:	mov	x1, x28
   36c44:	mov	x0, x28
   36c48:	bl	36738 <PyInit__decimal@@Base+0x1c1b8>
   36c4c:	mov	x4, x25
   36c50:	mov	x3, x23
   36c54:	mov	x2, x28
   36c58:	mov	x1, x26
   36c5c:	mov	x0, x26
   36c60:	bl	2bef8 <PyInit__decimal@@Base+0x11978>
   36c64:	mov	x2, x22
   36c68:	mov	x1, x26
   36c6c:	mov	x0, x26
   36c70:	mov	x4, x25
   36c74:	mov	x3, x23
   36c78:	bl	36738 <PyInit__decimal@@Base+0x1c1b8>
   36c7c:	ldrb	w0, [sp, #208]
   36c80:	ldrb	w2, [sp, #256]
   36c84:	ldrb	w1, [sp, #304]
   36c88:	orr	w0, w0, w2
   36c8c:	orr	w0, w0, w1
   36c90:	tst	w0, #0xe
   36c94:	b.ne	36db0 <PyInit__decimal@@Base+0x1c830>  // b.any
   36c98:	cmp	x20, #0x0
   36c9c:	b.le	36ed4 <PyInit__decimal@@Base+0x1c954>
   36ca0:	add	x20, sp, #0x1f0
   36ca4:	add	x21, sp, #0x160
   36ca8:	add	x0, sp, #0x1c0
   36cac:	str	xzr, [sp, #104]
   36cb0:	stp	x27, x0, [sp, #120]
   36cb4:	mov	x0, x20
   36cb8:	bl	1d4d0 <PyInit__decimal@@Base+0x2f50>
   36cbc:	mov	w19, #0x4                   	// #4
   36cc0:	ldr	x1, [sp, #120]
   36cc4:	mov	x2, x25
   36cc8:	mov	x0, x21
   36ccc:	mov	x27, #0xa                   	// #10
   36cd0:	bl	28fe0 <PyInit__decimal@@Base+0xea60>
   36cd4:	nop
   36cd8:	mov	x4, x25
   36cdc:	mov	x3, x20
   36ce0:	mov	x2, x26
   36ce4:	mov	x1, x26
   36ce8:	mov	x0, x26
   36cec:	bl	2bef8 <PyInit__decimal@@Base+0x11978>
   36cf0:	mov	x4, x25
   36cf4:	mov	x3, x20
   36cf8:	mov	x2, x22
   36cfc:	mov	x1, x26
   36d00:	mov	x0, x26
   36d04:	bl	36738 <PyInit__decimal@@Base+0x1c1b8>
   36d08:	lsr	x27, x27, #1
   36d0c:	subs	w19, w19, #0x1
   36d10:	b.eq	36d4c <PyInit__decimal@@Base+0x1c7cc>  // b.none
   36d14:	tbz	w27, #0, 36cd8 <PyInit__decimal@@Base+0x1c758>
   36d18:	mov	x4, x25
   36d1c:	mov	x3, x20
   36d20:	mov	x2, x26
   36d24:	mov	x1, x21
   36d28:	mov	x0, x21
   36d2c:	bl	2bef8 <PyInit__decimal@@Base+0x11978>
   36d30:	mov	x4, x25
   36d34:	mov	x3, x20
   36d38:	mov	x2, x22
   36d3c:	mov	x1, x21
   36d40:	mov	x0, x21
   36d44:	bl	36738 <PyInit__decimal@@Base+0x1c1b8>
   36d48:	b	36cd8 <PyInit__decimal@@Base+0x1c758>
   36d4c:	ldr	x0, [sp, #104]
   36d50:	ldp	x10, x11, [x21]
   36d54:	add	x2, x0, #0x1
   36d58:	ldp	x0, x1, [x26]
   36d5c:	stp	x0, x1, [x21]
   36d60:	ldr	x0, [sp, #112]
   36d64:	str	x2, [sp, #104]
   36d68:	ldr	x4, [sp, #128]
   36d6c:	cmp	x0, x2
   36d70:	ldp	x2, x3, [x21, #16]
   36d74:	stp	x10, x11, [x26]
   36d78:	stp	x10, x11, [x4]
   36d7c:	stp	x2, x3, [x4, #16]
   36d80:	ldp	x10, x11, [x26, #16]
   36d84:	stp	x2, x3, [x26, #16]
   36d88:	ldp	x0, x1, [x21, #32]
   36d8c:	stp	x10, x11, [x21, #16]
   36d90:	ldp	x2, x3, [x26, #32]
   36d94:	stp	x0, x1, [x4, #32]
   36d98:	stp	x0, x1, [x26, #32]
   36d9c:	stp	x2, x3, [x21, #32]
   36da0:	b.ne	36cb4 <PyInit__decimal@@Base+0x1c734>  // b.any
   36da4:	ldrb	w0, [sp, #208]
   36da8:	tst	w0, #0xe
   36dac:	b.eq	36ed4 <PyInit__decimal@@Base+0x1c954>  // b.none
   36db0:	mov	x0, x28
   36db4:	mov	w2, #0x4                   	// #4
   36db8:	mov	w1, #0x0                   	// #0
   36dbc:	bl	28cd8 <PyInit__decimal@@Base+0xe758>
   36dc0:	ldrb	w0, [sp, #208]
   36dc4:	tst	w0, #0xe0
   36dc8:	b.ne	36de0 <PyInit__decimal@@Base+0x1c860>  // b.any
   36dcc:	adrp	x1, 5f000 <PyInit__decimal@@Base+0x44a80>
   36dd0:	ldr	x0, [sp, #248]
   36dd4:	ldr	x1, [x1, #1704]
   36dd8:	blr	x1
   36ddc:	ldrb	w0, [sp, #208]
   36de0:	tbnz	w0, #4, 36df4 <PyInit__decimal@@Base+0x1c874>
   36de4:	adrp	x1, 5f000 <PyInit__decimal@@Base+0x44a80>
   36de8:	add	x0, sp, #0xd0
   36dec:	ldr	x1, [x1, #1704]
   36df0:	blr	x1
   36df4:	ldrb	w0, [sp, #256]
   36df8:	tst	w0, #0xe0
   36dfc:	b.ne	36e14 <PyInit__decimal@@Base+0x1c894>  // b.any
   36e00:	adrp	x1, 5f000 <PyInit__decimal@@Base+0x44a80>
   36e04:	ldr	x0, [sp, #296]
   36e08:	ldr	x1, [x1, #1704]
   36e0c:	blr	x1
   36e10:	ldrb	w0, [sp, #256]
   36e14:	tbnz	w0, #4, 36e28 <PyInit__decimal@@Base+0x1c8a8>
   36e18:	adrp	x1, 5f000 <PyInit__decimal@@Base+0x44a80>
   36e1c:	add	x0, sp, #0x100
   36e20:	ldr	x1, [x1, #1704]
   36e24:	blr	x1
   36e28:	ldrb	w0, [sp, #304]
   36e2c:	tst	w0, #0xe0
   36e30:	b.ne	36e48 <PyInit__decimal@@Base+0x1c8c8>  // b.any
   36e34:	adrp	x1, 5f000 <PyInit__decimal@@Base+0x44a80>
   36e38:	ldr	x0, [sp, #344]
   36e3c:	ldr	x1, [x1, #1704]
   36e40:	blr	x1
   36e44:	ldrb	w0, [sp, #304]
   36e48:	tbnz	w0, #4, 36e5c <PyInit__decimal@@Base+0x1c8dc>
   36e4c:	adrp	x1, 5f000 <PyInit__decimal@@Base+0x44a80>
   36e50:	mov	x0, x22
   36e54:	ldr	x1, [x1, #1704]
   36e58:	blr	x1
   36e5c:	ldrb	w0, [sp, #352]
   36e60:	tst	w0, #0xe0
   36e64:	b.ne	36e7c <PyInit__decimal@@Base+0x1c8fc>  // b.any
   36e68:	adrp	x1, 5f000 <PyInit__decimal@@Base+0x44a80>
   36e6c:	ldr	x0, [sp, #392]
   36e70:	ldr	x1, [x1, #1704]
   36e74:	blr	x1
   36e78:	ldrb	w0, [sp, #352]
   36e7c:	tbnz	w0, #4, 36ebc <PyInit__decimal@@Base+0x1c93c>
   36e80:	adrp	x1, 5f000 <PyInit__decimal@@Base+0x44a80>
   36e84:	add	x0, sp, #0x160
   36e88:	ldr	x1, [x1, #1704]
   36e8c:	blr	x1
   36e90:	ldp	x23, x24, [sp, #48]
   36e94:	b	369c4 <PyInit__decimal@@Base+0x1c444>
   36e98:	ldp	x23, x24, [sp, #48]
   36e9c:	b	369b4 <PyInit__decimal@@Base+0x1c434>
   36ea0:	mov	w1, w24
   36ea4:	mov	x0, x28
   36ea8:	mov	x3, #0x0                   	// #0
   36eac:	mov	x2, #0x0                   	// #0
   36eb0:	bl	26d90 <PyInit__decimal@@Base+0xc810>
   36eb4:	ldp	x23, x24, [sp, #48]
   36eb8:	b	369c4 <PyInit__decimal@@Base+0x1c444>
   36ebc:	ldp	x23, x24, [sp, #48]
   36ec0:	b	369c4 <PyInit__decimal@@Base+0x1c444>
   36ec4:	mov	x2, x25
   36ec8:	mov	x0, x28
   36ecc:	bl	28d68 <PyInit__decimal@@Base+0xe7e8>
   36ed0:	b	36dc0 <PyInit__decimal@@Base+0x1c840>
   36ed4:	adrp	x0, 5c000 <PyInit__decimal@@Base+0x41a80>
   36ed8:	add	x1, x0, #0xc58
   36edc:	mov	x2, x25
   36ee0:	add	x1, x1, #0x60
   36ee4:	mov	x0, x28
   36ee8:	add	x19, sp, #0x190
   36eec:	bl	28fe0 <PyInit__decimal@@Base+0xea60>
   36ef0:	ldrb	w0, [sp, #256]
   36ef4:	tst	w0, #0xe
   36ef8:	b.ne	36db0 <PyInit__decimal@@Base+0x1c830>  // b.any
   36efc:	ldr	x0, [sp, #280]
   36f00:	ldr	x1, [sp, #296]
   36f04:	add	x0, x1, x0, lsl #3
   36f08:	ldur	x0, [x0, #-8]
   36f0c:	cbnz	x0, 36f40 <PyInit__decimal@@Base+0x1c9c0>
   36f10:	ldrb	w0, [sp, #208]
   36f14:	ldrb	w1, [sp, #304]
   36f18:	orr	w0, w0, w1
   36f1c:	tst	w0, #0xe
   36f20:	b.ne	36db0 <PyInit__decimal@@Base+0x1c830>  // b.any
   36f24:	ldrb	w0, [x28]
   36f28:	tst	w0, #0xe
   36f2c:	b.ne	36db0 <PyInit__decimal@@Base+0x1c830>  // b.any
   36f30:	and	w0, w0, #0xfffffffe
   36f34:	orr	w24, w24, w0
   36f38:	strb	w24, [x28]
   36f3c:	b	36dc0 <PyInit__decimal@@Base+0x1c840>
   36f40:	ldr	x0, [sp, #136]
   36f44:	bl	28c30 <PyInit__decimal@@Base+0xe6b0>
   36f48:	cbnz	w0, 36f98 <PyInit__decimal@@Base+0x1ca18>
   36f4c:	mov	x4, x25
   36f50:	mov	x3, x23
   36f54:	mov	x2, x26
   36f58:	mov	x1, x26
   36f5c:	mov	x0, x26
   36f60:	bl	2bef8 <PyInit__decimal@@Base+0x11978>
   36f64:	mov	x4, x25
   36f68:	mov	x3, x23
   36f6c:	mov	x2, x22
   36f70:	mov	x1, x26
   36f74:	mov	x0, x26
   36f78:	bl	36738 <PyInit__decimal@@Base+0x1c1b8>
   36f7c:	ldr	x0, [sp, #136]
   36f80:	mov	x4, x25
   36f84:	mov	x3, x23
   36f88:	mov	x2, x19
   36f8c:	mov	x1, x0
   36f90:	bl	31490 <PyInit__decimal@@Base+0x16f10>
   36f94:	b	36ef0 <PyInit__decimal@@Base+0x1c970>
   36f98:	mov	x4, x25
   36f9c:	mov	x3, x23
   36fa0:	mov	x2, x26
   36fa4:	mov	x1, x28
   36fa8:	mov	x0, x28
   36fac:	bl	2bef8 <PyInit__decimal@@Base+0x11978>
   36fb0:	mov	x4, x25
   36fb4:	mov	x3, x23
   36fb8:	mov	x2, x22
   36fbc:	mov	x1, x28
   36fc0:	mov	x0, x28
   36fc4:	bl	36738 <PyInit__decimal@@Base+0x1c1b8>
   36fc8:	b	36f4c <PyInit__decimal@@Base+0x1c9cc>
   36fcc:	nop
   36fd0:	sub	sp, sp, #0x4f0
   36fd4:	mov	w9, #0x30                  	// #48
   36fd8:	mov	x8, #0x40                  	// #64
   36fdc:	add	x7, sp, #0xf0
   36fe0:	add	x6, sp, #0x2f0
   36fe4:	stp	x29, x30, [sp]
   36fe8:	mov	x29, sp
   36fec:	stp	x19, x20, [sp, #16]
   36ff0:	mov	x19, x2
   36ff4:	mov	x20, x0
   36ff8:	stp	x21, x22, [sp, #32]
   36ffc:	mov	x22, x3
   37000:	mov	x21, x4
   37004:	stp	x23, x24, [sp, #48]
   37008:	mov	x23, x1
   3700c:	ldrb	w2, [x1]
   37010:	strb	w9, [sp, #144]
   37014:	stp	xzr, xzr, [sp, #152]
   37018:	tst	w2, #0xe
   3701c:	stp	xzr, x8, [sp, #168]
   37020:	str	x7, [sp, #184]
   37024:	strb	w9, [sp, #192]
   37028:	stp	xzr, xzr, [sp, #200]
   3702c:	stp	xzr, x8, [sp, #216]
   37030:	str	x6, [sp, #232]
   37034:	b.ne	37160 <PyInit__decimal@@Base+0x1cbe0>  // b.any
   37038:	ldrb	w1, [x19]
   3703c:	tst	w1, #0xe
   37040:	b.ne	37160 <PyInit__decimal@@Base+0x1cbe0>  // b.any
   37044:	ldr	x1, [x19, #24]
   37048:	ldr	x2, [x19, #40]
   3704c:	add	x1, x2, x1, lsl #3
   37050:	ldur	x1, [x1, #-8]
   37054:	cbz	x1, 3720c <PyInit__decimal@@Base+0x1cc8c>
   37058:	cmp	x19, x0
   3705c:	b.eq	371ec <PyInit__decimal@@Base+0x1cc6c>  // b.none
   37060:	add	x24, sp, #0xc0
   37064:	mov	x5, x21
   37068:	mov	x0, x24
   3706c:	mov	x4, x22
   37070:	mov	x3, x19
   37074:	mov	x2, x23
   37078:	mov	x1, x20
   3707c:	bl	2fa48 <PyInit__decimal@@Base+0x154c8>
   37080:	ldrb	w0, [sp, #192]
   37084:	tst	w0, #0xc
   37088:	b.ne	370d0 <PyInit__decimal@@Base+0x1cb50>  // b.any
   3708c:	ldrb	w0, [x20]
   37090:	tst	w0, #0xc
   37094:	b.ne	370d0 <PyInit__decimal@@Base+0x1cb50>  // b.any
   37098:	ldr	x0, [x20, #24]
   3709c:	ldr	x1, [x20, #40]
   370a0:	add	x0, x1, x0, lsl #3
   370a4:	ldur	x0, [x0, #-8]
   370a8:	cbz	x0, 370d0 <PyInit__decimal@@Base+0x1cb50>
   370ac:	ldp	x0, x3, [x19, #8]
   370b0:	ldp	x1, x2, [x20, #8]
   370b4:	add	x0, x0, x3
   370b8:	add	x1, x1, x2
   370bc:	sub	x0, x0, x1
   370c0:	add	x0, x0, #0x1
   370c4:	cmp	x0, #0x2
   370c8:	b.ls	37230 <PyInit__decimal@@Base+0x1ccb0>  // b.plast
   370cc:	nop
   370d0:	ldrb	w0, [sp, #144]
   370d4:	tst	w0, #0xe0
   370d8:	b.ne	370f0 <PyInit__decimal@@Base+0x1cb70>  // b.any
   370dc:	adrp	x1, 5f000 <PyInit__decimal@@Base+0x44a80>
   370e0:	ldr	x0, [sp, #184]
   370e4:	ldr	x1, [x1, #1704]
   370e8:	blr	x1
   370ec:	ldrb	w0, [sp, #144]
   370f0:	tbnz	w0, #4, 37104 <PyInit__decimal@@Base+0x1cb84>
   370f4:	adrp	x1, 5f000 <PyInit__decimal@@Base+0x44a80>
   370f8:	add	x0, sp, #0x90
   370fc:	ldr	x1, [x1, #1704]
   37100:	blr	x1
   37104:	ldrb	w0, [sp, #192]
   37108:	tst	w0, #0xe0
   3710c:	b.ne	37124 <PyInit__decimal@@Base+0x1cba4>  // b.any
   37110:	adrp	x1, 5f000 <PyInit__decimal@@Base+0x44a80>
   37114:	ldr	x0, [sp, #232]
   37118:	ldr	x1, [x1, #1704]
   3711c:	blr	x1
   37120:	ldrb	w0, [sp, #192]
   37124:	tbnz	w0, #4, 37138 <PyInit__decimal@@Base+0x1cbb8>
   37128:	adrp	x1, 5f000 <PyInit__decimal@@Base+0x44a80>
   3712c:	mov	x0, x24
   37130:	ldr	x1, [x1, #1704]
   37134:	blr	x1
   37138:	mov	x2, x21
   3713c:	mov	x1, x22
   37140:	mov	x0, x20
   37144:	bl	2b110 <PyInit__decimal@@Base+0x10b90>
   37148:	ldp	x29, x30, [sp]
   3714c:	ldp	x19, x20, [sp, #16]
   37150:	ldp	x21, x22, [sp, #32]
   37154:	ldp	x23, x24, [sp, #48]
   37158:	add	sp, sp, #0x4f0
   3715c:	ret
   37160:	mov	x4, x21
   37164:	mov	x3, x22
   37168:	mov	x2, x19
   3716c:	mov	x1, x23
   37170:	mov	x0, x20
   37174:	bl	29108 <PyInit__decimal@@Base+0xeb88>
   37178:	cbnz	w0, 37148 <PyInit__decimal@@Base+0x1cbc8>
   3717c:	ldrb	w0, [x23]
   37180:	tbnz	w0, #1, 371c4 <PyInit__decimal@@Base+0x1cc44>
   37184:	ldrb	w0, [x19]
   37188:	tbz	w0, #1, 374a0 <PyInit__decimal@@Base+0x1cf20>
   3718c:	mov	x1, x23
   37190:	mov	x2, x21
   37194:	mov	x0, x20
   37198:	bl	28fe0 <PyInit__decimal@@Base+0xea60>
   3719c:	mov	x2, x21
   371a0:	mov	x1, x22
   371a4:	mov	x0, x20
   371a8:	bl	2b110 <PyInit__decimal@@Base+0x10b90>
   371ac:	ldp	x29, x30, [sp]
   371b0:	ldp	x19, x20, [sp, #16]
   371b4:	ldp	x21, x22, [sp, #32]
   371b8:	ldp	x23, x24, [sp, #48]
   371bc:	add	sp, sp, #0x4f0
   371c0:	ret
   371c4:	mov	x2, x21
   371c8:	mov	x0, x20
   371cc:	mov	w1, #0x100                 	// #256
   371d0:	bl	28d68 <PyInit__decimal@@Base+0xe7e8>
   371d4:	ldp	x29, x30, [sp]
   371d8:	ldp	x19, x20, [sp, #16]
   371dc:	ldp	x21, x22, [sp, #32]
   371e0:	ldp	x23, x24, [sp, #48]
   371e4:	add	sp, sp, #0x4f0
   371e8:	ret
   371ec:	add	x24, sp, #0x90
   371f0:	mov	x2, x4
   371f4:	mov	x0, x24
   371f8:	mov	x1, x19
   371fc:	bl	28fe0 <PyInit__decimal@@Base+0xea60>
   37200:	cbz	w0, 37320 <PyInit__decimal@@Base+0x1cda0>
   37204:	mov	x19, x24
   37208:	b	37060 <PyInit__decimal@@Base+0x1cae0>
   3720c:	ldr	x1, [x23, #24]
   37210:	ldr	x2, [x23, #40]
   37214:	add	x1, x2, x1, lsl #3
   37218:	ldur	x1, [x1, #-8]
   3721c:	cbnz	x1, 371c4 <PyInit__decimal@@Base+0x1cc44>
   37220:	mov	x2, x4
   37224:	mov	w1, #0x10                  	// #16
   37228:	bl	28d68 <PyInit__decimal@@Base+0xe7e8>
   3722c:	b	37148 <PyInit__decimal@@Base+0x1cbc8>
   37230:	ldr	x0, [sp, #216]
   37234:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27a80>
   37238:	ldr	x3, [sp, #232]
   3723c:	add	x2, x2, #0x2d0
   37240:	stp	x25, x26, [sp, #64]
   37244:	add	x4, x3, x0, lsl #3
   37248:	stp	x27, x28, [sp, #80]
   3724c:	ldr	x1, [x2, #72]
   37250:	ldur	x4, [x4, #-8]
   37254:	cmp	x4, x1
   37258:	b.cs	37364 <PyInit__decimal@@Base+0x1cde4>  // b.hs, b.nlast
   3725c:	ldr	x5, [x2, #32]
   37260:	cmp	x4, x5
   37264:	b.cs	373dc <PyInit__decimal@@Base+0x1ce5c>  // b.hs, b.nlast
   37268:	ldr	x6, [x2, #16]
   3726c:	cmp	x4, x6
   37270:	b.cs	37434 <PyInit__decimal@@Base+0x1ceb4>  // b.hs, b.nlast
   37274:	ldr	x1, [x2, #8]
   37278:	cmp	x4, x1
   3727c:	csel	x1, x1, x6, cc  // cc = lo, ul, last
   37280:	sub	x1, x1, #0x1
   37284:	mov	w26, #0x0                   	// #0
   37288:	cmp	x4, x1
   3728c:	b.eq	37334 <PyInit__decimal@@Base+0x1cdb4>  // b.none
   37290:	mov	x0, x24
   37294:	add	x25, sp, #0x60
   37298:	bl	28c30 <PyInit__decimal@@Base+0xe6b0>
   3729c:	mov	w27, w0
   372a0:	mov	x0, x25
   372a4:	ldr	x28, [sp, #208]
   372a8:	bl	1d4d0 <PyInit__decimal@@Base+0x2f50>
   372ac:	ldrb	w1, [x19]
   372b0:	mov	x2, x19
   372b4:	ldrb	w0, [x23]
   372b8:	and	w3, w1, #0x1
   372bc:	and	w0, w0, #0x1
   372c0:	cmp	w3, w0
   372c4:	b.ne	372d0 <PyInit__decimal@@Base+0x1cd50>  // b.any
   372c8:	mvn	w1, w1
   372cc:	and	w3, w1, #0x1
   372d0:	mov	x1, x20
   372d4:	mov	x0, x24
   372d8:	add	x6, x25, #0x1c
   372dc:	add	x5, x25, #0x24
   372e0:	mov	x4, x25
   372e4:	bl	2a3f0 <PyInit__decimal@@Base+0xfe70>
   372e8:	ldr	w0, [sp, #124]
   372ec:	mov	w1, #0x3be                 	// #958
   372f0:	ands	w1, w0, w1
   372f4:	b.ne	373c4 <PyInit__decimal@@Base+0x1ce44>  // b.any
   372f8:	mov	x1, x20
   372fc:	mov	x0, x24
   37300:	bl	26bd8 <PyInit__decimal@@Base+0xc658>
   37304:	cmp	w0, #0x0
   37308:	b.lt	37398 <PyInit__decimal@@Base+0x1ce18>  // b.tstop
   3730c:	ccmp	w27, #0x0, #0x4, eq  // eq = none
   37310:	b.ne	37398 <PyInit__decimal@@Base+0x1ce18>  // b.any
   37314:	ldp	x25, x26, [sp, #64]
   37318:	ldp	x27, x28, [sp, #80]
   3731c:	b	370d0 <PyInit__decimal@@Base+0x1cb50>
   37320:	mov	x2, x21
   37324:	mov	x0, x19
   37328:	mov	w1, #0x200                 	// #512
   3732c:	bl	28d68 <PyInit__decimal@@Base+0xe7e8>
   37330:	b	37148 <PyInit__decimal@@Base+0x1cbc8>
   37334:	mov	x2, #0xffffffff89e7ffff    	// #-1981284353
   37338:	sub	x0, x0, #0x1
   3733c:	movk	x2, #0x2304, lsl #32
   37340:	movk	x2, #0x8ac7, lsl #48
   37344:	b	37354 <PyInit__decimal@@Base+0x1cdd4>
   37348:	ldr	x1, [x3, x0, lsl #3]
   3734c:	cmp	x1, x2
   37350:	b.ne	3742c <PyInit__decimal@@Base+0x1ceac>  // b.any
   37354:	subs	x0, x0, #0x1
   37358:	b.pl	37348 <PyInit__decimal@@Base+0x1cdc8>  // b.nfrst
   3735c:	mov	w26, #0x1                   	// #1
   37360:	b	37290 <PyInit__decimal@@Base+0x1cd10>
   37364:	ldr	x1, [x2, #112]
   37368:	cmp	x4, x1
   3736c:	b.cs	37404 <PyInit__decimal@@Base+0x1ce84>  // b.hs, b.nlast
   37370:	ldr	x5, [x2, #88]
   37374:	cmp	x4, x5
   37378:	b.cc	37458 <PyInit__decimal@@Base+0x1ced8>  // b.lo, b.ul, b.last
   3737c:	ldr	x5, [x2, #104]
   37380:	cmp	x4, x5
   37384:	b.cs	37280 <PyInit__decimal@@Base+0x1cd00>  // b.hs, b.nlast
   37388:	ldr	x1, [x2, #96]
   3738c:	cmp	x4, x1
   37390:	csel	x1, x1, x5, cc  // cc = lo, ul, last
   37394:	b	37280 <PyInit__decimal@@Base+0x1cd00>
   37398:	mov	x2, x21
   3739c:	cbz	w26, 373ac <PyInit__decimal@@Base+0x1ce2c>
   373a0:	ldr	x0, [x22]
   373a4:	cmp	x0, x28
   373a8:	b.eq	37488 <PyInit__decimal@@Base+0x1cf08>  // b.none
   373ac:	mov	x1, x24
   373b0:	mov	x0, x20
   373b4:	bl	28fe0 <PyInit__decimal@@Base+0xea60>
   373b8:	ldp	x25, x26, [sp, #64]
   373bc:	ldp	x27, x28, [sp, #80]
   373c0:	b	370d0 <PyInit__decimal@@Base+0x1cb50>
   373c4:	mov	x2, x21
   373c8:	mov	x0, x20
   373cc:	bl	28d68 <PyInit__decimal@@Base+0xe7e8>
   373d0:	ldp	x25, x26, [sp, #64]
   373d4:	ldp	x27, x28, [sp, #80]
   373d8:	b	370d0 <PyInit__decimal@@Base+0x1cb50>
   373dc:	ldr	x5, [x2, #48]
   373e0:	cmp	x4, x5
   373e4:	b.cc	37468 <PyInit__decimal@@Base+0x1cee8>  // b.lo, b.ul, b.last
   373e8:	ldr	x5, [x2, #64]
   373ec:	cmp	x4, x5
   373f0:	b.cs	37280 <PyInit__decimal@@Base+0x1cd00>  // b.hs, b.nlast
   373f4:	ldr	x1, [x2, #56]
   373f8:	cmp	x4, x1
   373fc:	csel	x1, x1, x5, cc  // cc = lo, ul, last
   37400:	b	37280 <PyInit__decimal@@Base+0x1cd00>
   37404:	ldr	x5, [x2, #144]
   37408:	cmp	x4, x5
   3740c:	b.cs	37444 <PyInit__decimal@@Base+0x1cec4>  // b.hs, b.nlast
   37410:	ldr	x6, [x2, #128]
   37414:	cmp	x4, x6
   37418:	b.cs	37478 <PyInit__decimal@@Base+0x1cef8>  // b.hs, b.nlast
   3741c:	ldr	x1, [x2, #120]
   37420:	cmp	x4, x1
   37424:	csel	x1, x1, x6, cc  // cc = lo, ul, last
   37428:	b	37280 <PyInit__decimal@@Base+0x1cd00>
   3742c:	mov	w26, #0x0                   	// #0
   37430:	b	37290 <PyInit__decimal@@Base+0x1cd10>
   37434:	ldr	x1, [x2, #24]
   37438:	cmp	x4, x1
   3743c:	csel	x1, x1, x5, cc  // cc = lo, ul, last
   37440:	b	37280 <PyInit__decimal@@Base+0x1cd00>
   37444:	ldr	x1, [x2, #152]
   37448:	cmp	x4, x1
   3744c:	b.cc	37280 <PyInit__decimal@@Base+0x1cd00>  // b.lo, b.ul, b.last
   37450:	ldr	x1, [x2, #160]
   37454:	b	37280 <PyInit__decimal@@Base+0x1cd00>
   37458:	ldr	x1, [x2, #80]
   3745c:	cmp	x4, x1
   37460:	csel	x1, x1, x5, cc  // cc = lo, ul, last
   37464:	b	37280 <PyInit__decimal@@Base+0x1cd00>
   37468:	ldr	x1, [x2, #40]
   3746c:	cmp	x4, x1
   37470:	csel	x1, x1, x5, cc  // cc = lo, ul, last
   37474:	b	37280 <PyInit__decimal@@Base+0x1cd00>
   37478:	ldr	x1, [x2, #136]
   3747c:	cmp	x4, x1
   37480:	csel	x1, x1, x5, cc  // cc = lo, ul, last
   37484:	b	37280 <PyInit__decimal@@Base+0x1cd00>
   37488:	mov	x0, x20
   3748c:	mov	w1, #0x8                   	// #8
   37490:	bl	28d68 <PyInit__decimal@@Base+0xe7e8>
   37494:	ldp	x25, x26, [sp, #64]
   37498:	ldp	x27, x28, [sp, #80]
   3749c:	b	370d0 <PyInit__decimal@@Base+0x1cb50>
   374a0:	stp	x25, x26, [sp, #64]
   374a4:	stp	x27, x28, [sp, #80]
   374a8:	bl	67c0 <abort@plt>
   374ac:	nop
   374b0:	mov	x5, #0xfffd                	// #65533
   374b4:	mov	x7, #0xfffd                	// #65533
   374b8:	movk	x5, #0x4ec7, lsl #16
   374bc:	movk	x7, #0xf62b, lsl #16
   374c0:	movk	x5, #0x6d67, lsl #32
   374c4:	movk	x7, #0x241a, lsl #32
   374c8:	movk	x5, #0x1bc1, lsl #48
   374cc:	add	x5, x2, x5
   374d0:	movk	x7, #0x29a2, lsl #48
   374d4:	cmp	x5, x7
   374d8:	b.hi	374e0 <PyInit__decimal@@Base+0x1cf60>  // b.pmore
   374dc:	b	2c168 <PyInit__decimal@@Base+0x11be8>
   374e0:	mov	x2, x4
   374e4:	mov	w1, #0x100                 	// #256
   374e8:	b	28d68 <PyInit__decimal@@Base+0xe7e8>
   374ec:	nop
   374f0:	mov	x5, #0xfffc                	// #65532
   374f4:	mov	x7, #0xfffc                	// #65532
   374f8:	movk	x5, #0xf62b, lsl #16
   374fc:	movk	x7, #0x9d8f, lsl #16
   37500:	movk	x5, #0x241a, lsl #32
   37504:	movk	x7, #0xdace, lsl #32
   37508:	movk	x5, #0x29a2, lsl #48
   3750c:	add	x5, x2, x5
   37510:	movk	x7, #0x3782, lsl #48
   37514:	cmp	x5, x7
   37518:	b.hi	37520 <PyInit__decimal@@Base+0x1cfa0>  // b.pmore
   3751c:	b	2c168 <PyInit__decimal@@Base+0x11be8>
   37520:	mov	x2, x4
   37524:	mov	w1, #0x100                 	// #256
   37528:	b	28d68 <PyInit__decimal@@Base+0xe7e8>
   3752c:	nop
   37530:	mov	x4, x1
   37534:	mov	x5, x2
   37538:	mov	x1, x0
   3753c:	mov	x2, x4
   37540:	mov	w0, #0x0                   	// #0
   37544:	mov	x4, x3
   37548:	mov	x3, x5
   3754c:	b	2c5c0 <PyInit__decimal@@Base+0x12040>
   37550:	mov	x4, x1
   37554:	mov	x5, x2
   37558:	mov	x1, x0
   3755c:	mov	x2, x4
   37560:	mov	w0, #0x1                   	// #1
   37564:	mov	x4, x3
   37568:	mov	x3, x5
   3756c:	b	2c5c0 <PyInit__decimal@@Base+0x12040>
   37570:	mov	x4, x1
   37574:	mov	x5, x2
   37578:	mov	x1, x0
   3757c:	mov	x2, x4
   37580:	mov	w0, #0x2                   	// #2
   37584:	mov	x4, x3
   37588:	mov	x3, x5
   3758c:	b	2c5c0 <PyInit__decimal@@Base+0x12040>
   37590:	mov	x5, x2
   37594:	stp	x29, x30, [sp, #-64]!
   37598:	mov	x2, x1
   3759c:	mov	x29, sp
   375a0:	ldp	x10, x11, [x5]
   375a4:	mov	x1, x0
   375a8:	ldp	x8, x9, [x5, #16]
   375ac:	mov	x4, x3
   375b0:	ldp	x6, x7, [x5, #32]
   375b4:	stp	x6, x7, [sp, #48]
   375b8:	add	x3, sp, #0x10
   375bc:	mov	w0, #0x1                   	// #1
   375c0:	stp	x10, x11, [sp, #16]
   375c4:	mov	w6, #0x3                   	// #3
   375c8:	stp	x8, x9, [sp, #32]
   375cc:	str	w6, [sp, #52]
   375d0:	bl	2c5c0 <PyInit__decimal@@Base+0x12040>
   375d4:	ldp	x29, x30, [sp], #64
   375d8:	ret
   375dc:	nop
   375e0:	mov	x5, x2
   375e4:	stp	x29, x30, [sp, #-64]!
   375e8:	mov	x2, x1
   375ec:	mov	x29, sp
   375f0:	ldp	x10, x11, [x5]
   375f4:	mov	x1, x0
   375f8:	ldp	x8, x9, [x5, #16]
   375fc:	mov	x4, x3
   37600:	ldp	x6, x7, [x5, #32]
   37604:	stp	x6, x7, [sp, #48]
   37608:	add	x3, sp, #0x10
   3760c:	mov	w0, #0x1                   	// #1
   37610:	stp	x10, x11, [sp, #16]
   37614:	mov	w6, #0x2                   	// #2
   37618:	stp	x8, x9, [sp, #32]
   3761c:	str	w6, [sp, #52]
   37620:	bl	2c5c0 <PyInit__decimal@@Base+0x12040>
   37624:	ldp	x29, x30, [sp], #64
   37628:	ret
   3762c:	nop
   37630:	ldrb	w2, [x0]
   37634:	tst	w2, #0xe
   37638:	b.ne	3765c <PyInit__decimal@@Base+0x1d0dc>  // b.any
   3763c:	ldrb	w3, [x1]
   37640:	tst	w3, #0xe
   37644:	b.ne	3765c <PyInit__decimal@@Base+0x1d0dc>  // b.any
   37648:	ldr	x2, [x0, #8]
   3764c:	ldr	x0, [x1, #8]
   37650:	cmp	x2, x0
   37654:	cset	w0, eq  // eq = none
   37658:	ret
   3765c:	tst	w2, #0xc
   37660:	b.ne	37678 <PyInit__decimal@@Base+0x1d0f8>  // b.any
   37664:	mov	w0, #0x0                   	// #0
   37668:	tbz	w2, #1, 37658 <PyInit__decimal@@Base+0x1d0d8>
   3766c:	ldrb	w0, [x1]
   37670:	ubfx	x0, x0, #1, #1
   37674:	ret
   37678:	ldrb	w3, [x1]
   3767c:	mov	w0, #0x1                   	// #1
   37680:	tst	w3, #0xc
   37684:	b.eq	37664 <PyInit__decimal@@Base+0x1d0e4>  // b.none
   37688:	ret
   3768c:	nop
   37690:	stp	x29, x30, [sp, #-96]!
   37694:	mov	x29, sp
   37698:	stp	x19, x20, [sp, #16]
   3769c:	mov	x19, x1
   376a0:	mov	x20, x3
   376a4:	stp	x21, x22, [sp, #32]
   376a8:	mov	x22, x0
   376ac:	mov	x21, x2
   376b0:	ldrb	w4, [x1]
   376b4:	tst	w4, #0xe
   376b8:	b.ne	3774c <PyInit__decimal@@Base+0x1d1cc>  // b.any
   376bc:	ldr	x2, [x1, #24]
   376c0:	and	w4, w4, #0x1
   376c4:	ldr	x5, [x1, #40]
   376c8:	add	x2, x5, x2, lsl #3
   376cc:	ldur	x2, [x2, #-8]
   376d0:	cbz	x2, 37724 <PyInit__decimal@@Base+0x1d1a4>
   376d4:	cbnz	w4, 3775c <PyInit__decimal@@Base+0x1d1dc>
   376d8:	ldp	x2, x8, [x21]
   376dc:	ldp	x6, x7, [x21, #16]
   376e0:	stp	x6, x7, [sp, #64]
   376e4:	ldp	x4, x5, [x21, #32]
   376e8:	stp	x4, x5, [sp, #80]
   376ec:	add	x4, x2, #0x2
   376f0:	add	x2, sp, #0x30
   376f4:	mov	w5, #0x6                   	// #6
   376f8:	stp	x4, x8, [sp, #48]
   376fc:	str	w5, [sp, #84]
   37700:	bl	30698 <PyInit__decimal@@Base+0x16118>
   37704:	mov	x2, x20
   37708:	mov	x1, x21
   3770c:	mov	x0, x22
   37710:	bl	2b110 <PyInit__decimal@@Base+0x10b90>
   37714:	ldp	x19, x20, [sp, #16]
   37718:	ldp	x21, x22, [sp, #32]
   3771c:	ldp	x29, x30, [sp], #96
   37720:	ret
   37724:	mov	w1, w4
   37728:	mov	w2, #0x2                   	// #2
   3772c:	bl	28cd8 <PyInit__decimal@@Base+0xe758>
   37730:	ldr	w0, [x20]
   37734:	ldp	x21, x22, [sp, #32]
   37738:	orr	w0, w0, #0x4
   3773c:	str	w0, [x20]
   37740:	ldp	x19, x20, [sp, #16]
   37744:	ldp	x29, x30, [sp], #96
   37748:	ret
   3774c:	bl	29098 <PyInit__decimal@@Base+0xeb18>
   37750:	cbnz	w0, 37714 <PyInit__decimal@@Base+0x1d194>
   37754:	ldrb	w0, [x19]
   37758:	tbz	w0, #0, 3777c <PyInit__decimal@@Base+0x1d1fc>
   3775c:	mov	x2, x20
   37760:	mov	x0, x22
   37764:	mov	w1, #0x100                 	// #256
   37768:	bl	28d68 <PyInit__decimal@@Base+0xe7e8>
   3776c:	ldp	x19, x20, [sp, #16]
   37770:	ldp	x21, x22, [sp, #32]
   37774:	ldp	x29, x30, [sp], #96
   37778:	ret
   3777c:	ldr	x4, [x21]
   37780:	mov	x0, x22
   37784:	ldr	x3, [x21, #16]
   37788:	mov	x2, #0x0                   	// #0
   3778c:	mov	w1, #0x0                   	// #0
   37790:	add	x3, x3, #0x1
   37794:	sub	x3, x3, x4
   37798:	bl	26d90 <PyInit__decimal@@Base+0xc810>
   3779c:	ldr	w0, [x20]
   377a0:	ldp	x21, x22, [sp, #32]
   377a4:	orr	w0, w0, #0x1
   377a8:	str	w0, [x20]
   377ac:	ldp	x19, x20, [sp, #16]
   377b0:	ldp	x29, x30, [sp], #96
   377b4:	ret
   377b8:	sub	sp, sp, #0x780
   377bc:	mov	w9, #0x30                  	// #48
   377c0:	mov	x8, #0x40                  	// #64
   377c4:	add	x11, sp, #0x180
   377c8:	add	x10, sp, #0x380
   377cc:	add	x7, sp, #0x580
   377d0:	stp	x29, x30, [sp]
   377d4:	mov	x29, sp
   377d8:	mov	w12, #0xffffff90            	// #-112
   377dc:	add	x5, sp, #0x88
   377e0:	stp	x19, x20, [sp, #16]
   377e4:	mov	x19, x3
   377e8:	stp	x21, x22, [sp, #32]
   377ec:	mov	x21, #0x2                   	// #2
   377f0:	stp	x23, x24, [sp, #48]
   377f4:	mov	x24, #0x1                   	// #1
   377f8:	mov	x23, x1
   377fc:	stp	x27, x28, [sp, #80]
   37800:	mov	x28, x0
   37804:	str	x21, [sp, #136]
   37808:	strb	w9, [sp, #192]
   3780c:	stp	xzr, xzr, [sp, #200]
   37810:	ldrb	w4, [x1]
   37814:	stp	xzr, x8, [sp, #216]
   37818:	tst	w4, #0xe
   3781c:	str	x11, [sp, #232]
   37820:	strb	w9, [sp, #240]
   37824:	stp	xzr, xzr, [sp, #248]
   37828:	stp	xzr, x8, [sp, #264]
   3782c:	str	x10, [sp, #280]
   37830:	strb	w9, [sp, #288]
   37834:	stp	xzr, xzr, [sp, #296]
   37838:	stp	xzr, x8, [sp, #312]
   3783c:	str	x7, [sp, #328]
   37840:	strb	w12, [sp, #336]
   37844:	stp	xzr, x24, [sp, #344]
   37848:	stp	x24, x24, [sp, #360]
   3784c:	str	x5, [sp, #376]
   37850:	b.ne	37a08 <PyInit__decimal@@Base+0x1d488>  // b.any
   37854:	mov	x20, x2
   37858:	and	w1, w4, #0x1
   3785c:	ldr	x2, [x23, #24]
   37860:	ldr	x3, [x23, #40]
   37864:	ldr	x22, [x23, #8]
   37868:	add	x2, x3, x2, lsl #3
   3786c:	asr	x22, x22, #1
   37870:	ldur	x2, [x2, #-8]
   37874:	cbnz	x2, 378ac <PyInit__decimal@@Base+0x1d32c>
   37878:	mov	x3, x22
   3787c:	bl	26d90 <PyInit__decimal@@Base+0xc810>
   37880:	mov	x2, x19
   37884:	mov	x1, x20
   37888:	mov	x0, x28
   3788c:	bl	2b110 <PyInit__decimal@@Base+0x10b90>
   37890:	ldp	x29, x30, [sp]
   37894:	ldp	x19, x20, [sp, #16]
   37898:	ldp	x21, x22, [sp, #32]
   3789c:	ldp	x23, x24, [sp, #48]
   378a0:	ldp	x27, x28, [sp, #80]
   378a4:	add	sp, sp, #0x780
   378a8:	ret
   378ac:	cbnz	w1, 37a18 <PyInit__decimal@@Base+0x1d498>
   378b0:	add	x21, sp, #0x90
   378b4:	stp	x25, x26, [sp, #64]
   378b8:	mov	x0, x21
   378bc:	add	x25, sp, #0xc0
   378c0:	bl	1d4d0 <PyInit__decimal@@Base+0x2f50>
   378c4:	mov	x0, x25
   378c8:	mov	x2, x19
   378cc:	mov	x1, x23
   378d0:	ldr	x26, [x20]
   378d4:	bl	28fe0 <PyInit__decimal@@Base+0xea60>
   378d8:	cbz	w0, 37a70 <PyInit__decimal@@Base+0x1d4f0>
   378dc:	ldr	x0, [x23, #8]
   378e0:	str	xzr, [sp, #200]
   378e4:	tbnz	w0, #0, 37b8c <PyInit__decimal@@Base+0x1d60c>
   378e8:	ldr	x23, [x23, #16]
   378ec:	add	x23, x23, #0x1
   378f0:	asr	x23, x23, #1
   378f4:	add	x26, x26, #0x1
   378f8:	subs	x0, x26, x23
   378fc:	str	x0, [sp, #96]
   37900:	b.mi	37b6c <PyInit__decimal@@Base+0x1d5ec>  // b.first
   37904:	lsl	x2, x0, #1
   37908:	mov	x3, x19
   3790c:	mov	x1, x25
   37910:	mov	x0, x25
   37914:	bl	2a2e0 <PyInit__decimal@@Base+0xfd60>
   37918:	cbz	w0, 37a70 <PyInit__decimal@@Base+0x1d4f0>
   3791c:	mov	w0, #0x1                   	// #1
   37920:	str	w0, [sp, #116]
   37924:	sub	x4, x23, x26
   37928:	str	x4, [sp, #120]
   3792c:	add	x4, x4, x22
   37930:	adrp	x1, 5c000 <PyInit__decimal@@Base+0x41a80>
   37934:	add	x1, x1, #0xc58
   37938:	mov	x2, x26
   3793c:	add	x1, x1, #0x60
   37940:	mov	x3, x19
   37944:	mov	x0, x28
   37948:	str	x4, [sp, #104]
   3794c:	bl	2a2e0 <PyInit__decimal@@Base+0xfd60>
   37950:	cbz	w0, 37a70 <PyInit__decimal@@Base+0x1d4f0>
   37954:	add	x26, sp, #0x120
   37958:	add	x23, sp, #0xf0
   3795c:	add	x24, x21, #0x1c
   37960:	add	x27, sp, #0x150
   37964:	b	379b8 <PyInit__decimal@@Base+0x1d438>
   37968:	bl	26c80 <PyInit__decimal@@Base+0xc700>
   3796c:	mov	w5, w0
   37970:	mov	x4, x24
   37974:	mov	x3, x21
   37978:	mov	x2, x23
   3797c:	mov	x1, x28
   37980:	mov	x0, x28
   37984:	cmp	w5, #0x0
   37988:	b.le	37bd0 <PyInit__decimal@@Base+0x1d650>
   3798c:	bl	2e558 <PyInit__decimal@@Base+0x13fd8>
   37990:	ldrb	w0, [x28]
   37994:	mov	x5, x24
   37998:	mov	x4, x21
   3799c:	tst	w0, #0xe
   379a0:	b.ne	37bb4 <PyInit__decimal@@Base+0x1d634>  // b.any
   379a4:	mov	x3, x27
   379a8:	mov	x2, x28
   379ac:	mov	x1, x26
   379b0:	mov	x0, x28
   379b4:	bl	2fa48 <PyInit__decimal@@Base+0x154c8>
   379b8:	mov	x3, x28
   379bc:	mov	x2, x25
   379c0:	mov	x1, x26
   379c4:	mov	x0, x23
   379c8:	mov	x5, x24
   379cc:	mov	x4, x21
   379d0:	bl	2fa48 <PyInit__decimal@@Base+0x154c8>
   379d4:	ldrb	w3, [sp, #240]
   379d8:	mov	x1, x23
   379dc:	ldrb	w2, [x28]
   379e0:	mov	x0, x28
   379e4:	orr	w2, w2, w3
   379e8:	tst	w2, #0xe
   379ec:	b.eq	37968 <PyInit__decimal@@Base+0x1d3e8>  // b.none
   379f0:	ldr	w3, [sp, #172]
   379f4:	mov	x2, x19
   379f8:	mov	w1, #0x3be                 	// #958
   379fc:	and	w1, w3, w1
   37a00:	bl	28d68 <PyInit__decimal@@Base+0xe7e8>
   37a04:	b	37a80 <PyInit__decimal@@Base+0x1d500>
   37a08:	bl	29098 <PyInit__decimal@@Base+0xeb18>
   37a0c:	cbnz	w0, 37890 <PyInit__decimal@@Base+0x1d310>
   37a10:	ldrb	w0, [x23]
   37a14:	tbz	w0, #0, 37a44 <PyInit__decimal@@Base+0x1d4c4>
   37a18:	mov	x2, x19
   37a1c:	mov	x0, x28
   37a20:	mov	w1, #0x100                 	// #256
   37a24:	bl	28d68 <PyInit__decimal@@Base+0xe7e8>
   37a28:	ldp	x29, x30, [sp]
   37a2c:	ldp	x19, x20, [sp, #16]
   37a30:	ldp	x21, x22, [sp, #32]
   37a34:	ldp	x23, x24, [sp, #48]
   37a38:	ldp	x27, x28, [sp, #80]
   37a3c:	add	sp, sp, #0x780
   37a40:	ret
   37a44:	mov	w2, w21
   37a48:	mov	x0, x28
   37a4c:	mov	w1, #0x0                   	// #0
   37a50:	bl	28cd8 <PyInit__decimal@@Base+0xe758>
   37a54:	ldp	x29, x30, [sp]
   37a58:	ldp	x19, x20, [sp, #16]
   37a5c:	ldp	x21, x22, [sp, #32]
   37a60:	ldp	x23, x24, [sp, #48]
   37a64:	ldp	x27, x28, [sp, #80]
   37a68:	add	sp, sp, #0x780
   37a6c:	ret
   37a70:	mov	x2, x19
   37a74:	mov	x0, x28
   37a78:	mov	w1, #0x200                 	// #512
   37a7c:	bl	28d68 <PyInit__decimal@@Base+0xe7e8>
   37a80:	ldrb	w0, [sp, #192]
   37a84:	tst	w0, #0xe0
   37a88:	b.ne	37aa0 <PyInit__decimal@@Base+0x1d520>  // b.any
   37a8c:	adrp	x1, 5f000 <PyInit__decimal@@Base+0x44a80>
   37a90:	ldr	x0, [sp, #232]
   37a94:	ldr	x1, [x1, #1704]
   37a98:	blr	x1
   37a9c:	ldrb	w0, [sp, #192]
   37aa0:	tbnz	w0, #4, 37ab4 <PyInit__decimal@@Base+0x1d534>
   37aa4:	adrp	x1, 5f000 <PyInit__decimal@@Base+0x44a80>
   37aa8:	mov	x0, x25
   37aac:	ldr	x1, [x1, #1704]
   37ab0:	blr	x1
   37ab4:	ldrb	w0, [sp, #240]
   37ab8:	tst	w0, #0xe0
   37abc:	b.ne	37ad4 <PyInit__decimal@@Base+0x1d554>  // b.any
   37ac0:	adrp	x1, 5f000 <PyInit__decimal@@Base+0x44a80>
   37ac4:	ldr	x0, [sp, #280]
   37ac8:	ldr	x1, [x1, #1704]
   37acc:	blr	x1
   37ad0:	ldrb	w0, [sp, #240]
   37ad4:	tbnz	w0, #4, 37ae8 <PyInit__decimal@@Base+0x1d568>
   37ad8:	adrp	x1, 5f000 <PyInit__decimal@@Base+0x44a80>
   37adc:	add	x0, sp, #0xf0
   37ae0:	ldr	x1, [x1, #1704]
   37ae4:	blr	x1
   37ae8:	ldrb	w0, [sp, #288]
   37aec:	tst	w0, #0xe0
   37af0:	b.ne	37b08 <PyInit__decimal@@Base+0x1d588>  // b.any
   37af4:	adrp	x1, 5f000 <PyInit__decimal@@Base+0x44a80>
   37af8:	ldr	x0, [sp, #328]
   37afc:	ldr	x1, [x1, #1704]
   37b00:	blr	x1
   37b04:	ldrb	w0, [sp, #288]
   37b08:	tbnz	w0, #4, 37b1c <PyInit__decimal@@Base+0x1d59c>
   37b0c:	adrp	x1, 5f000 <PyInit__decimal@@Base+0x44a80>
   37b10:	add	x0, sp, #0x120
   37b14:	ldr	x1, [x1, #1704]
   37b18:	blr	x1
   37b1c:	ldp	x8, x9, [x20]
   37b20:	mov	w3, #0x6                   	// #6
   37b24:	ldp	x4, x5, [x20, #16]
   37b28:	mov	x2, x19
   37b2c:	ldp	x0, x1, [x20, #32]
   37b30:	stp	x0, x1, [sp, #176]
   37b34:	mov	x1, x21
   37b38:	mov	x0, x28
   37b3c:	stp	x8, x9, [sp, #144]
   37b40:	stp	x4, x5, [sp, #160]
   37b44:	str	w3, [sp, #180]
   37b48:	bl	2b110 <PyInit__decimal@@Base+0x10b90>
   37b4c:	ldp	x29, x30, [sp]
   37b50:	ldp	x19, x20, [sp, #16]
   37b54:	ldp	x21, x22, [sp, #32]
   37b58:	ldp	x23, x24, [sp, #48]
   37b5c:	ldp	x25, x26, [sp, #64]
   37b60:	ldp	x27, x28, [sp, #80]
   37b64:	add	sp, sp, #0x780
   37b68:	ret
   37b6c:	ldr	x0, [sp, #96]
   37b70:	neg	x1, x0, lsl #1
   37b74:	mov	x0, x25
   37b78:	bl	2aa80 <PyInit__decimal@@Base+0x10500>
   37b7c:	cmp	x0, #0x0
   37b80:	cset	w0, eq  // eq = none
   37b84:	str	w0, [sp, #116]
   37b88:	b	37924 <PyInit__decimal@@Base+0x1d3a4>
   37b8c:	mov	x2, x24
   37b90:	mov	x3, x19
   37b94:	mov	x1, x25
   37b98:	mov	x0, x25
   37b9c:	bl	2a2e0 <PyInit__decimal@@Base+0xfd60>
   37ba0:	cbz	w0, 37a70 <PyInit__decimal@@Base+0x1d4f0>
   37ba4:	ldr	x23, [x23, #16]
   37ba8:	asr	x23, x23, #1
   37bac:	add	x23, x23, #0x1
   37bb0:	b	378f4 <PyInit__decimal@@Base+0x1d374>
   37bb4:	ldr	w3, [sp, #172]
   37bb8:	mov	x2, x19
   37bbc:	mov	x0, x28
   37bc0:	mov	w1, #0x3be                 	// #958
   37bc4:	and	w1, w3, w1
   37bc8:	bl	28d68 <PyInit__decimal@@Base+0xe7e8>
   37bcc:	b	37a80 <PyInit__decimal@@Base+0x1d500>
   37bd0:	ldr	w0, [sp, #116]
   37bd4:	cbnz	w0, 37c18 <PyInit__decimal@@Base+0x1d698>
   37bd8:	ldr	x2, [x28, #40]
   37bdc:	mov	x0, #0xcccccccccccccccc    	// #-3689348814741910324
   37be0:	movk	x0, #0xcccd
   37be4:	ldr	x1, [x2]
   37be8:	umulh	x0, x1, x0
   37bec:	lsr	x0, x0, #3
   37bf0:	add	x0, x0, x0, lsl #2
   37bf4:	sub	x0, x1, x0, lsl #1
   37bf8:	cmp	w0, #0x0
   37bfc:	ccmp	w0, #0x5, #0x4, ne  // ne = any
   37c00:	b.ne	37c0c <PyInit__decimal@@Base+0x1d68c>  // b.any
   37c04:	add	x1, x1, #0x1
   37c08:	str	x1, [x2]
   37c0c:	ldr	x0, [sp, #104]
   37c10:	str	x0, [x28, #8]
   37c14:	b	37a80 <PyInit__decimal@@Base+0x1d500>
   37c18:	mov	x0, x26
   37c1c:	mov	x2, x28
   37c20:	bl	2bef8 <PyInit__decimal@@Base+0x11978>
   37c24:	ldrb	w0, [sp, #288]
   37c28:	tst	w0, #0xe
   37c2c:	b.ne	37bb4 <PyInit__decimal@@Base+0x1d634>  // b.any
   37c30:	mov	x0, x26
   37c34:	mov	x1, x25
   37c38:	bl	26c80 <PyInit__decimal@@Base+0xc700>
   37c3c:	cbnz	w0, 37bd8 <PyInit__decimal@@Base+0x1d658>
   37c40:	ldr	x0, [sp, #96]
   37c44:	tbnz	x0, #63, 37c5c <PyInit__decimal@@Base+0x1d6dc>
   37c48:	mov	x1, x0
   37c4c:	mov	x0, x28
   37c50:	str	x22, [sp, #104]
   37c54:	bl	2aa80 <PyInit__decimal@@Base+0x10500>
   37c58:	b	37c0c <PyInit__decimal@@Base+0x1d68c>
   37c5c:	ldr	x2, [sp, #120]
   37c60:	mov	x3, x19
   37c64:	mov	x1, x28
   37c68:	mov	x0, x28
   37c6c:	bl	2a2e0 <PyInit__decimal@@Base+0xfd60>
   37c70:	cbz	w0, 37a70 <PyInit__decimal@@Base+0x1d4f0>
   37c74:	str	x22, [sp, #104]
   37c78:	b	37c0c <PyInit__decimal@@Base+0x1d68c>
   37c7c:	nop
   37c80:	mov	x2, x0
   37c84:	ldrb	w0, [x0]
   37c88:	tst	w0, #0xe
   37c8c:	b.ne	37cac <PyInit__decimal@@Base+0x1d72c>  // b.any
   37c90:	ldr	x3, [x2, #24]
   37c94:	mov	x0, #0x1                   	// #1
   37c98:	ldr	x4, [x2, #40]
   37c9c:	add	x3, x4, x3, lsl #3
   37ca0:	ldur	x3, [x3, #-8]
   37ca4:	cbnz	x3, 37cac <PyInit__decimal@@Base+0x1d72c>
   37ca8:	ret
   37cac:	stp	x29, x30, [sp, #-32]!
   37cb0:	mov	x0, #0xbcfe                	// #48382
   37cb4:	movk	x0, #0xa84f, lsl #16
   37cb8:	mov	x29, sp
   37cbc:	ldr	x3, [x2, #8]
   37cc0:	str	x19, [sp, #16]
   37cc4:	ldr	x19, [x2, #16]
   37cc8:	movk	x0, #0xa209, lsl #32
   37ccc:	movk	x0, #0x9, lsl #48
   37cd0:	add	x19, x19, x3
   37cd4:	cmp	x19, x0
   37cd8:	b.hi	37d10 <PyInit__decimal@@Base+0x1d790>  // b.pmore
   37cdc:	ucvtf	d0, w1
   37ce0:	bl	6620 <log10@plt>
   37ce4:	scvtf	d1, x19
   37ce8:	mov	x0, #0x43f0000000000000    	// #4895412794951729152
   37cec:	fmov	d2, x0
   37cf0:	fdiv	d0, d1, d0
   37cf4:	fcmpe	d0, d2
   37cf8:	b.gt	37d10 <PyInit__decimal@@Base+0x1d790>
   37cfc:	fcvtzu	x0, d0
   37d00:	ldr	x19, [sp, #16]
   37d04:	ldp	x29, x30, [sp], #32
   37d08:	add	x0, x0, #0x1
   37d0c:	ret
   37d10:	mov	x0, #0xffffffffffffffff    	// #-1
   37d14:	ldr	x19, [sp, #16]
   37d18:	ldp	x29, x30, [sp], #32
   37d1c:	ret
   37d20:	sub	sp, sp, #0x2b0
   37d24:	mov	w6, #0x30                  	// #48
   37d28:	add	x5, sp, #0xb0
   37d2c:	stp	x29, x30, [sp]
   37d30:	mov	x29, sp
   37d34:	stp	x19, x20, [sp, #16]
   37d38:	mov	x19, x3
   37d3c:	mov	x3, #0x40                  	// #64
   37d40:	stp	x23, x24, [sp, #48]
   37d44:	mov	x24, x4
   37d48:	stp	x27, x28, [sp, #80]
   37d4c:	strb	w6, [sp, #128]
   37d50:	stp	xzr, xzr, [sp, #136]
   37d54:	stp	xzr, x3, [sp, #152]
   37d58:	str	x5, [sp, #168]
   37d5c:	ldrb	w5, [x19]
   37d60:	tst	w5, #0xe
   37d64:	b.ne	37ec0 <PyInit__decimal@@Base+0x1d940>  // b.any
   37d68:	mov	x20, x0
   37d6c:	mov	x23, x1
   37d70:	mov	x0, x19
   37d74:	stp	x25, x26, [sp, #64]
   37d78:	mov	w25, w2
   37d7c:	bl	25638 <PyInit__decimal@@Base+0xb0b8>
   37d80:	cbz	w0, 37ebc <PyInit__decimal@@Base+0x1d93c>
   37d84:	ldr	x0, [x20]
   37d88:	str	wzr, [sp, #108]
   37d8c:	cbz	x0, 37f18 <PyInit__decimal@@Base+0x1d998>
   37d90:	ldr	x0, [x19, #24]
   37d94:	ldr	x1, [x19, #40]
   37d98:	add	x0, x1, x0, lsl #3
   37d9c:	ldur	x0, [x0, #-8]
   37da0:	cbz	x0, 37eec <PyInit__decimal@@Base+0x1d96c>
   37da4:	ldr	x2, [x19, #8]
   37da8:	tbnz	x2, #63, 37f5c <PyInit__decimal@@Base+0x1d9dc>
   37dac:	mov	x1, x19
   37db0:	mov	x3, x24
   37db4:	add	x0, sp, #0x80
   37db8:	bl	2a2e0 <PyInit__decimal@@Base+0xfd60>
   37dbc:	cbz	w0, 37f78 <PyInit__decimal@@Base+0x1d9f8>
   37dc0:	stp	x21, x22, [sp, #32]
   37dc4:	add	x28, sp, #0x7f
   37dc8:	mov	x21, #0x0                   	// #0
   37dcc:	ldr	x22, [sp, #168]
   37dd0:	ldr	x19, [sp, #152]
   37dd4:	sub	x26, x22, #0x8
   37dd8:	cmp	x23, x21
   37ddc:	add	x27, x21, #0x1
   37de0:	b.hi	37e0c <PyInit__decimal@@Base+0x1d88c>  // b.pmore
   37de4:	ldr	x0, [x20]
   37de8:	mov	x1, x27
   37dec:	mov	x3, x28
   37df0:	mov	x2, #0x2                   	// #2
   37df4:	strb	wzr, [sp, #127]
   37df8:	bl	252a8 <PyInit__decimal@@Base+0xad28>
   37dfc:	str	x0, [x20]
   37e00:	ldrb	w1, [sp, #127]
   37e04:	cbnz	w1, 37fc8 <PyInit__decimal@@Base+0x1da48>
   37e08:	mov	x23, x27
   37e0c:	mov	x1, x22
   37e10:	mov	x3, x25
   37e14:	mov	x2, x19
   37e18:	mov	x0, x22
   37e1c:	bl	1b700 <PyInit__decimal@@Base+0x1180>
   37e20:	ldr	x1, [x20]
   37e24:	cmp	x19, #0x1
   37e28:	strh	w0, [x1, x21, lsl #1]
   37e2c:	b.gt	37e40 <PyInit__decimal@@Base+0x1d8c0>
   37e30:	b	37e50 <PyInit__decimal@@Base+0x1d8d0>
   37e34:	sub	x19, x19, #0x1
   37e38:	cmp	x19, #0x1
   37e3c:	b.eq	37e50 <PyInit__decimal@@Base+0x1d8d0>  // b.none
   37e40:	ldr	x0, [x26, x19, lsl #3]
   37e44:	cbz	x0, 37e34 <PyInit__decimal@@Base+0x1d8b4>
   37e48:	mov	x21, x27
   37e4c:	b	37dd8 <PyInit__decimal@@Base+0x1d858>
   37e50:	add	x0, x22, x19, lsl #3
   37e54:	ldur	x0, [x0, #-8]
   37e58:	cbnz	x0, 37e48 <PyInit__decimal@@Base+0x1d8c8>
   37e5c:	cmn	x27, #0x1
   37e60:	ldp	x21, x22, [sp, #32]
   37e64:	b.eq	37f78 <PyInit__decimal@@Base+0x1d9f8>  // b.none
   37e68:	ldrb	w0, [sp, #128]
   37e6c:	tst	w0, #0xe0
   37e70:	b.ne	37e88 <PyInit__decimal@@Base+0x1d908>  // b.any
   37e74:	adrp	x1, 5f000 <PyInit__decimal@@Base+0x44a80>
   37e78:	ldr	x0, [sp, #168]
   37e7c:	ldr	x1, [x1, #1704]
   37e80:	blr	x1
   37e84:	ldrb	w0, [sp, #128]
   37e88:	tbnz	w0, #4, 37fa8 <PyInit__decimal@@Base+0x1da28>
   37e8c:	adrp	x1, 5f000 <PyInit__decimal@@Base+0x44a80>
   37e90:	add	x0, sp, #0x80
   37e94:	ldr	x1, [x1, #1704]
   37e98:	blr	x1
   37e9c:	mov	x0, x27
   37ea0:	ldp	x29, x30, [sp]
   37ea4:	ldp	x19, x20, [sp, #16]
   37ea8:	ldp	x23, x24, [sp, #48]
   37eac:	ldp	x25, x26, [sp, #64]
   37eb0:	ldp	x27, x28, [sp, #80]
   37eb4:	add	sp, sp, #0x2b0
   37eb8:	ret
   37ebc:	ldp	x25, x26, [sp, #64]
   37ec0:	mov	x27, #0xffffffffffffffff    	// #-1
   37ec4:	ldr	w0, [x24]
   37ec8:	orr	w0, w0, #0x100
   37ecc:	str	w0, [x24]
   37ed0:	mov	x0, x27
   37ed4:	ldp	x29, x30, [sp]
   37ed8:	ldp	x19, x20, [sp, #16]
   37edc:	ldp	x23, x24, [sp, #48]
   37ee0:	ldp	x27, x28, [sp, #80]
   37ee4:	add	sp, sp, #0x2b0
   37ee8:	ret
   37eec:	ldr	x0, [x20]
   37ef0:	mov	x27, #0x1                   	// #1
   37ef4:	ldp	x25, x26, [sp, #64]
   37ef8:	strh	wzr, [x0]
   37efc:	mov	x0, x27
   37f00:	ldp	x29, x30, [sp]
   37f04:	ldp	x19, x20, [sp, #16]
   37f08:	ldp	x23, x24, [sp, #48]
   37f0c:	ldp	x27, x28, [sp, #80]
   37f10:	add	sp, sp, #0x2b0
   37f14:	ret
   37f18:	mov	w1, w25
   37f1c:	mov	x0, x19
   37f20:	bl	37c80 <PyInit__decimal@@Base+0x1d700>
   37f24:	mov	x23, x0
   37f28:	cmn	x0, #0x1
   37f2c:	b.eq	37fd0 <PyInit__decimal@@Base+0x1da50>  // b.none
   37f30:	mov	x1, #0x2                   	// #2
   37f34:	bl	25260 <PyInit__decimal@@Base+0xace0>
   37f38:	str	x0, [x20]
   37f3c:	cbz	x0, 37f94 <PyInit__decimal@@Base+0x1da14>
   37f40:	ldrb	w0, [x19]
   37f44:	mov	w1, #0x1                   	// #1
   37f48:	str	w1, [sp, #108]
   37f4c:	tst	w0, #0xe
   37f50:	b.eq	37d90 <PyInit__decimal@@Base+0x1d810>  // b.none
   37f54:	ldr	x2, [x19, #8]
   37f58:	tbz	x2, #63, 37dac <PyInit__decimal@@Base+0x1d82c>
   37f5c:	neg	x2, x2
   37f60:	mov	x1, x19
   37f64:	mov	x3, x24
   37f68:	add	x0, sp, #0x80
   37f6c:	bl	2bf80 <PyInit__decimal@@Base+0x11a00>
   37f70:	cmn	x0, #0x1
   37f74:	b.ne	37dc0 <PyInit__decimal@@Base+0x1d840>  // b.any
   37f78:	ldr	w0, [sp, #108]
   37f7c:	cbz	w0, 37f94 <PyInit__decimal@@Base+0x1da14>
   37f80:	adrp	x1, 5f000 <PyInit__decimal@@Base+0x44a80>
   37f84:	ldr	x0, [x20]
   37f88:	ldr	x1, [x1, #1704]
   37f8c:	blr	x1
   37f90:	str	xzr, [x20]
   37f94:	ldr	w0, [x24]
   37f98:	mov	x27, #0xffffffffffffffff    	// #-1
   37f9c:	orr	w0, w0, #0x200
   37fa0:	str	w0, [x24]
   37fa4:	b	37e68 <PyInit__decimal@@Base+0x1d8e8>
   37fa8:	mov	x0, x27
   37fac:	ldp	x29, x30, [sp]
   37fb0:	ldp	x19, x20, [sp, #16]
   37fb4:	ldp	x23, x24, [sp, #48]
   37fb8:	ldp	x25, x26, [sp, #64]
   37fbc:	ldp	x27, x28, [sp, #80]
   37fc0:	add	sp, sp, #0x2b0
   37fc4:	ret
   37fc8:	ldp	x21, x22, [sp, #32]
   37fcc:	b	37f78 <PyInit__decimal@@Base+0x1d9f8>
   37fd0:	mov	x27, x0
   37fd4:	ldr	w0, [x24]
   37fd8:	ldp	x25, x26, [sp, #64]
   37fdc:	orr	w0, w0, #0x100
   37fe0:	str	w0, [x24]
   37fe4:	b	37ed0 <PyInit__decimal@@Base+0x1d950>
   37fe8:	sub	sp, sp, #0x2b0
   37fec:	mov	w6, #0x30                  	// #48
   37ff0:	mov	x5, #0x40                  	// #64
   37ff4:	stp	x29, x30, [sp]
   37ff8:	mov	x29, sp
   37ffc:	stp	x19, x20, [sp, #16]
   38000:	mov	x19, x3
   38004:	add	x3, sp, #0xb0
   38008:	stp	x21, x22, [sp, #32]
   3800c:	mov	x22, x4
   38010:	stp	x27, x28, [sp, #80]
   38014:	strb	w6, [sp, #128]
   38018:	stp	xzr, xzr, [sp, #136]
   3801c:	stp	xzr, x5, [sp, #152]
   38020:	str	x3, [sp, #168]
   38024:	ldrb	w3, [x19]
   38028:	tst	w3, #0xe
   3802c:	b.ne	38194 <PyInit__decimal@@Base+0x1dc14>  // b.any
   38030:	mov	x20, x0
   38034:	mov	x21, x1
   38038:	mov	x0, x19
   3803c:	stp	x23, x24, [sp, #48]
   38040:	mov	w23, w2
   38044:	bl	25638 <PyInit__decimal@@Base+0xb0b8>
   38048:	cbz	w0, 38190 <PyInit__decimal@@Base+0x1dc10>
   3804c:	ldr	x0, [x20]
   38050:	str	wzr, [sp, #108]
   38054:	cbz	x0, 381ec <PyInit__decimal@@Base+0x1dc6c>
   38058:	ldr	x0, [x19, #24]
   3805c:	ldr	x1, [x19, #40]
   38060:	add	x0, x1, x0, lsl #3
   38064:	ldur	x0, [x0, #-8]
   38068:	cbz	x0, 381c0 <PyInit__decimal@@Base+0x1dc40>
   3806c:	ldr	x2, [x19, #8]
   38070:	tbnz	x2, #63, 38230 <PyInit__decimal@@Base+0x1dcb0>
   38074:	mov	x1, x19
   38078:	mov	x3, x22
   3807c:	add	x0, sp, #0x80
   38080:	bl	2a2e0 <PyInit__decimal@@Base+0xfd60>
   38084:	cbz	w0, 38250 <PyInit__decimal@@Base+0x1dcd0>
   38088:	stp	x25, x26, [sp, #64]
   3808c:	add	x28, sp, #0x7f
   38090:	mov	x24, #0x0                   	// #0
   38094:	ldr	x25, [sp, #168]
   38098:	ldr	x19, [sp, #152]
   3809c:	sub	x26, x25, #0x8
   380a0:	cmp	x21, x24
   380a4:	add	x27, x24, #0x1
   380a8:	b.hi	380d4 <PyInit__decimal@@Base+0x1db54>  // b.pmore
   380ac:	ldr	x0, [x20]
   380b0:	mov	x1, x27
   380b4:	mov	x3, x28
   380b8:	mov	x2, #0x4                   	// #4
   380bc:	strb	wzr, [sp, #127]
   380c0:	bl	252a8 <PyInit__decimal@@Base+0xad28>
   380c4:	str	x0, [x20]
   380c8:	ldrb	w1, [sp, #127]
   380cc:	cbnz	w1, 382a0 <PyInit__decimal@@Base+0x1dd20>
   380d0:	mov	x21, x27
   380d4:	mov	x4, #0x89e80000            	// #2313682944
   380d8:	mov	x1, x25
   380dc:	movk	x4, #0x2304, lsl #32
   380e0:	mov	x3, x23
   380e4:	mov	x2, x19
   380e8:	mov	x0, x25
   380ec:	movk	x4, #0x8ac7, lsl #48
   380f0:	bl	1d2a0 <PyInit__decimal@@Base+0x2d20>
   380f4:	ldr	x1, [x20]
   380f8:	cmp	x19, #0x1
   380fc:	str	w0, [x1, x24, lsl #2]
   38100:	b.gt	38114 <PyInit__decimal@@Base+0x1db94>
   38104:	b	38124 <PyInit__decimal@@Base+0x1dba4>
   38108:	sub	x19, x19, #0x1
   3810c:	cmp	x19, #0x1
   38110:	b.eq	38124 <PyInit__decimal@@Base+0x1dba4>  // b.none
   38114:	ldr	x0, [x26, x19, lsl #3]
   38118:	cbz	x0, 38108 <PyInit__decimal@@Base+0x1db88>
   3811c:	mov	x24, x27
   38120:	b	380a0 <PyInit__decimal@@Base+0x1db20>
   38124:	add	x0, x25, x19, lsl #3
   38128:	ldur	x0, [x0, #-8]
   3812c:	cbnz	x0, 3811c <PyInit__decimal@@Base+0x1db9c>
   38130:	cmn	x27, #0x1
   38134:	ldp	x25, x26, [sp, #64]
   38138:	b.eq	38250 <PyInit__decimal@@Base+0x1dcd0>  // b.none
   3813c:	ldrb	w0, [sp, #128]
   38140:	tst	w0, #0xe0
   38144:	b.ne	3815c <PyInit__decimal@@Base+0x1dbdc>  // b.any
   38148:	adrp	x1, 5f000 <PyInit__decimal@@Base+0x44a80>
   3814c:	ldr	x0, [sp, #168]
   38150:	ldr	x1, [x1, #1704]
   38154:	blr	x1
   38158:	ldrb	w0, [sp, #128]
   3815c:	tbnz	w0, #4, 38280 <PyInit__decimal@@Base+0x1dd00>
   38160:	adrp	x1, 5f000 <PyInit__decimal@@Base+0x44a80>
   38164:	add	x0, sp, #0x80
   38168:	ldr	x1, [x1, #1704]
   3816c:	blr	x1
   38170:	mov	x0, x27
   38174:	ldp	x29, x30, [sp]
   38178:	ldp	x19, x20, [sp, #16]
   3817c:	ldp	x21, x22, [sp, #32]
   38180:	ldp	x23, x24, [sp, #48]
   38184:	ldp	x27, x28, [sp, #80]
   38188:	add	sp, sp, #0x2b0
   3818c:	ret
   38190:	ldp	x23, x24, [sp, #48]
   38194:	mov	x27, #0xffffffffffffffff    	// #-1
   38198:	ldr	w0, [x22]
   3819c:	orr	w0, w0, #0x100
   381a0:	str	w0, [x22]
   381a4:	mov	x0, x27
   381a8:	ldp	x29, x30, [sp]
   381ac:	ldp	x19, x20, [sp, #16]
   381b0:	ldp	x21, x22, [sp, #32]
   381b4:	ldp	x27, x28, [sp, #80]
   381b8:	add	sp, sp, #0x2b0
   381bc:	ret
   381c0:	ldr	x0, [x20]
   381c4:	mov	x27, #0x1                   	// #1
   381c8:	ldp	x23, x24, [sp, #48]
   381cc:	str	wzr, [x0]
   381d0:	mov	x0, x27
   381d4:	ldp	x29, x30, [sp]
   381d8:	ldp	x19, x20, [sp, #16]
   381dc:	ldp	x21, x22, [sp, #32]
   381e0:	ldp	x27, x28, [sp, #80]
   381e4:	add	sp, sp, #0x2b0
   381e8:	ret
   381ec:	mov	w1, w23
   381f0:	mov	x0, x19
   381f4:	bl	37c80 <PyInit__decimal@@Base+0x1d700>
   381f8:	mov	x21, x0
   381fc:	cmn	x0, #0x1
   38200:	b.eq	382a8 <PyInit__decimal@@Base+0x1dd28>  // b.none
   38204:	mov	x1, #0x4                   	// #4
   38208:	bl	25260 <PyInit__decimal@@Base+0xace0>
   3820c:	str	x0, [x20]
   38210:	cbz	x0, 3826c <PyInit__decimal@@Base+0x1dcec>
   38214:	ldrb	w0, [x19]
   38218:	mov	w1, #0x1                   	// #1
   3821c:	str	w1, [sp, #108]
   38220:	tst	w0, #0xe
   38224:	b.eq	38058 <PyInit__decimal@@Base+0x1dad8>  // b.none
   38228:	ldr	x2, [x19, #8]
   3822c:	tbz	x2, #63, 38074 <PyInit__decimal@@Base+0x1daf4>
   38230:	neg	x2, x2
   38234:	mov	x1, x19
   38238:	mov	x3, x22
   3823c:	add	x0, sp, #0x80
   38240:	bl	2bf80 <PyInit__decimal@@Base+0x11a00>
   38244:	cmn	x0, #0x1
   38248:	b.ne	38088 <PyInit__decimal@@Base+0x1db08>  // b.any
   3824c:	nop
   38250:	ldr	w0, [sp, #108]
   38254:	cbz	w0, 3826c <PyInit__decimal@@Base+0x1dcec>
   38258:	adrp	x1, 5f000 <PyInit__decimal@@Base+0x44a80>
   3825c:	ldr	x0, [x20]
   38260:	ldr	x1, [x1, #1704]
   38264:	blr	x1
   38268:	str	xzr, [x20]
   3826c:	ldr	w0, [x22]
   38270:	mov	x27, #0xffffffffffffffff    	// #-1
   38274:	orr	w0, w0, #0x200
   38278:	str	w0, [x22]
   3827c:	b	3813c <PyInit__decimal@@Base+0x1dbbc>
   38280:	mov	x0, x27
   38284:	ldp	x29, x30, [sp]
   38288:	ldp	x19, x20, [sp, #16]
   3828c:	ldp	x21, x22, [sp, #32]
   38290:	ldp	x23, x24, [sp, #48]
   38294:	ldp	x27, x28, [sp, #80]
   38298:	add	sp, sp, #0x2b0
   3829c:	ret
   382a0:	ldp	x25, x26, [sp, #64]
   382a4:	b	38250 <PyInit__decimal@@Base+0x1dcd0>
   382a8:	mov	x27, x0
   382ac:	ldr	w0, [x22]
   382b0:	ldp	x23, x24, [sp, #48]
   382b4:	orr	w0, w0, #0x100
   382b8:	str	w0, [x22]
   382bc:	b	381a4 <PyInit__decimal@@Base+0x1dc24>
   382c0:	stp	x29, x30, [sp, #-112]!
   382c4:	mov	x29, sp
   382c8:	stp	x23, x24, [sp, #48]
   382cc:	mov	x23, x6
   382d0:	stp	x25, x26, [sp, #64]
   382d4:	mov	x25, x0
   382d8:	and	w0, w3, #0xff
   382dc:	str	w0, [sp, #100]
   382e0:	mov	x0, #0x20000000000000      	// #9007199254740992
   382e4:	str	x5, [sp, #104]
   382e8:	cmp	x2, x0
   382ec:	b.hi	384b0 <PyInit__decimal@@Base+0x1df30>  // b.pmore
   382f0:	stp	x27, x28, [sp, #80]
   382f4:	mov	w28, w4
   382f8:	ucvtf	d0, w28
   382fc:	stp	x19, x20, [sp, #16]
   38300:	mov	x20, x2
   38304:	mov	x19, x1
   38308:	bl	6620 <log10@plt>
   3830c:	fmov	d1, #1.900000000000000000e+01
   38310:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27a80>
   38314:	fdiv	d1, d0, d1
   38318:	scvtf	d0, x20
   3831c:	ldr	d2, [x0, #2392]
   38320:	fmul	d0, d0, d1
   38324:	fcmpe	d0, d2
   38328:	b.ge	384a8 <PyInit__decimal@@Base+0x1df28>  // b.tcont
   3832c:	fcvtzs	x27, d0
   38330:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
   38334:	add	x27, x27, #0x1
   38338:	cmp	x27, x0
   3833c:	b.eq	384a8 <PyInit__decimal@@Base+0x1df28>  // b.none
   38340:	mov	x0, x20
   38344:	mov	x1, #0x8                   	// #8
   38348:	stp	x21, x22, [sp, #32]
   3834c:	bl	25260 <PyInit__decimal@@Base+0xace0>
   38350:	mov	x22, x0
   38354:	cbz	x0, 3874c <PyInit__decimal@@Base+0x1e1cc>
   38358:	mov	x3, #0x0                   	// #0
   3835c:	cbz	x20, 3871c <PyInit__decimal@@Base+0x1e19c>
   38360:	ldrh	w0, [x19, x3, lsl #1]
   38364:	str	x0, [x22, x3, lsl #3]
   38368:	add	x3, x3, #0x1
   3836c:	cmp	x20, x3
   38370:	b.ne	38360 <PyInit__decimal@@Base+0x1dde0>  // b.any
   38374:	adrp	x24, 5f000 <PyInit__decimal@@Base+0x44a80>
   38378:	ldr	x0, [x25, #32]
   3837c:	ldr	x1, [x24, #1672]
   38380:	cmp	x1, x27
   38384:	csel	x1, x1, x27, ge  // ge = tcont
   38388:	cmp	x1, x0
   3838c:	b.eq	383b0 <PyInit__decimal@@Base+0x1de30>  // b.none
   38390:	ldrb	w2, [x25]
   38394:	tbz	w2, #5, 3867c <PyInit__decimal@@Base+0x1e0fc>
   38398:	cmp	x0, x1
   3839c:	b.ge	383b0 <PyInit__decimal@@Base+0x1de30>  // b.tcont
   383a0:	mov	x2, x23
   383a4:	mov	x0, x25
   383a8:	bl	25438 <PyInit__decimal@@Base+0xaeb8>
   383ac:	cbz	w0, 385ec <PyInit__decimal@@Base+0x1e06c>
   383b0:	subs	x0, x20, #0x1
   383b4:	mov	x19, #0x1                   	// #1
   383b8:	ldr	x1, [x25, #40]
   383bc:	sub	x20, x20, #0x2
   383c0:	ldr	x0, [x22, x0, lsl #3]
   383c4:	str	x0, [x1]
   383c8:	mov	x0, #0x0                   	// #0
   383cc:	b.eq	384f4 <PyInit__decimal@@Base+0x1df74>  // b.none
   383d0:	mov	x19, #0x1                   	// #1
   383d4:	b	38484 <PyInit__decimal@@Base+0x1df04>
   383d8:	cmp	x27, x19
   383dc:	add	x21, x19, #0x1
   383e0:	b.gt	38410 <PyInit__decimal@@Base+0x1de90>
   383e4:	ldr	x1, [x24, #1672]
   383e8:	ldr	x0, [x25, #32]
   383ec:	cmp	x1, x21
   383f0:	csel	x1, x1, x21, ge  // ge = tcont
   383f4:	cmp	x1, x0
   383f8:	b.eq	38564 <PyInit__decimal@@Base+0x1dfe4>  // b.none
   383fc:	ldrb	w2, [x25]
   38400:	tbz	w2, #5, 38554 <PyInit__decimal@@Base+0x1dfd4>
   38404:	cmp	x1, x0
   38408:	mov	x27, x21
   3840c:	b.gt	38618 <PyInit__decimal@@Base+0x1e098>
   38410:	ldr	x0, [x25, #40]
   38414:	str	x26, [x0, x19, lsl #3]
   38418:	mov	x19, x21
   3841c:	ldr	x2, [x22, x20, lsl #3]
   38420:	mov	x1, x21
   38424:	bl	1b318 <PyInit__decimal@@Base+0xd98>
   38428:	mov	x26, x0
   3842c:	cbz	x0, 38474 <PyInit__decimal@@Base+0x1def4>
   38430:	cmp	x19, x27
   38434:	add	x19, x19, #0x1
   38438:	b.lt	38468 <PyInit__decimal@@Base+0x1dee8>  // b.tstop
   3843c:	ldr	x1, [x24, #1672]
   38440:	ldr	x0, [x25, #32]
   38444:	cmp	x1, x19
   38448:	csel	x1, x1, x19, ge  // ge = tcont
   3844c:	cmp	x1, x0
   38450:	b.eq	3857c <PyInit__decimal@@Base+0x1dffc>  // b.none
   38454:	ldrb	w2, [x25]
   38458:	tbz	w2, #5, 3856c <PyInit__decimal@@Base+0x1dfec>
   3845c:	cmp	x1, x0
   38460:	mov	x27, x19
   38464:	b.gt	3862c <PyInit__decimal@@Base+0x1e0ac>
   38468:	ldr	x0, [x25, #40]
   3846c:	str	x26, [x0, x21, lsl #3]
   38470:	mov	x21, x19
   38474:	sub	x20, x20, #0x1
   38478:	cmn	x20, #0x1
   3847c:	b.eq	384cc <PyInit__decimal@@Base+0x1df4c>  // b.none
   38480:	ldr	x1, [x25, #40]
   38484:	mov	x3, x28
   38488:	mov	x2, x19
   3848c:	mov	x0, x1
   38490:	mov	x21, x19
   38494:	bl	1d148 <PyInit__decimal@@Base+0x2bc8>
   38498:	mov	x26, x0
   3849c:	cbnz	x0, 383d8 <PyInit__decimal@@Base+0x1de58>
   384a0:	ldr	x0, [x25, #40]
   384a4:	b	3841c <PyInit__decimal@@Base+0x1de9c>
   384a8:	ldp	x19, x20, [sp, #16]
   384ac:	ldp	x27, x28, [sp, #80]
   384b0:	mov	x2, x23
   384b4:	mov	x0, x25
   384b8:	mov	w1, #0x100                 	// #256
   384bc:	ldp	x23, x24, [sp, #48]
   384c0:	ldp	x25, x26, [sp, #64]
   384c4:	ldp	x29, x30, [sp], #112
   384c8:	b	28d68 <PyInit__decimal@@Base+0xe7e8>
   384cc:	cmn	x21, #0x1
   384d0:	b.eq	385ec <PyInit__decimal@@Base+0x1e06c>  // b.none
   384d4:	sub	x2, x19, #0x1
   384d8:	lsl	x21, x21, #3
   384dc:	ldr	x0, [x25, #40]
   384e0:	add	x3, x2, x2, lsl #2
   384e4:	sub	x1, x21, #0x8
   384e8:	lsl	x3, x3, #2
   384ec:	add	x1, x0, x1
   384f0:	sub	x0, x3, x2
   384f4:	ldrb	w3, [x25]
   384f8:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27a80>
   384fc:	ldr	w4, [sp, #100]
   38500:	add	x2, x2, #0x2d0
   38504:	and	w3, w3, #0xf0
   38508:	str	xzr, [x25, #8]
   3850c:	orr	w26, w3, w4
   38510:	strb	w26, [x25]
   38514:	str	x19, [x25, #24]
   38518:	ldr	x3, [x2, #72]
   3851c:	ldr	x1, [x1]
   38520:	cmp	x1, x3
   38524:	b.cs	38640 <PyInit__decimal@@Base+0x1e0c0>  // b.hs, b.nlast
   38528:	ldr	x3, [x2, #32]
   3852c:	cmp	x1, x3
   38530:	b.cs	38584 <PyInit__decimal@@Base+0x1e004>  // b.hs, b.nlast
   38534:	ldr	x3, [x2, #16]
   38538:	cmp	x1, x3
   3853c:	b.cs	386d0 <PyInit__decimal@@Base+0x1e150>  // b.hs, b.nlast
   38540:	ldr	x2, [x2, #8]
   38544:	cmp	x1, x2
   38548:	cset	x3, cs  // cs = hs, nlast
   3854c:	add	x3, x3, #0x1
   38550:	b	385b0 <PyInit__decimal@@Base+0x1e030>
   38554:	mov	x2, x23
   38558:	mov	x0, x25
   3855c:	bl	25588 <PyInit__decimal@@Base+0xb008>
   38560:	cbz	w0, 385ec <PyInit__decimal@@Base+0x1e06c>
   38564:	mov	x27, x21
   38568:	b	38410 <PyInit__decimal@@Base+0x1de90>
   3856c:	mov	x2, x23
   38570:	mov	x0, x25
   38574:	bl	25588 <PyInit__decimal@@Base+0xb008>
   38578:	cbz	w0, 385ec <PyInit__decimal@@Base+0x1e06c>
   3857c:	mov	x27, x19
   38580:	b	38468 <PyInit__decimal@@Base+0x1dee8>
   38584:	ldr	x3, [x2, #48]
   38588:	cmp	x1, x3
   3858c:	b.cc	386e4 <PyInit__decimal@@Base+0x1e164>  // b.lo, b.ul, b.last
   38590:	ldr	x4, [x2, #64]
   38594:	mov	x3, #0x9                   	// #9
   38598:	cmp	x1, x4
   3859c:	b.cs	385b0 <PyInit__decimal@@Base+0x1e030>  // b.hs, b.nlast
   385a0:	ldr	x2, [x2, #56]
   385a4:	cmp	x1, x2
   385a8:	cset	x3, cs  // cs = hs, nlast
   385ac:	add	x3, x3, #0x7
   385b0:	ldr	x1, [x24, #1672]
   385b4:	add	x0, x0, x3
   385b8:	ldr	x2, [x25, #32]
   385bc:	cmp	x1, x19
   385c0:	str	x0, [x25, #16]
   385c4:	csel	x1, x1, x19, ge  // ge = tcont
   385c8:	cmp	x1, x2
   385cc:	b.eq	385dc <PyInit__decimal@@Base+0x1e05c>  // b.none
   385d0:	tbz	w26, #5, 3870c <PyInit__decimal@@Base+0x1e18c>
   385d4:	cmp	x1, x2
   385d8:	b.gt	38768 <PyInit__decimal@@Base+0x1e1e8>
   385dc:	ldr	x1, [sp, #104]
   385e0:	mov	x2, x23
   385e4:	mov	x0, x25
   385e8:	bl	2b110 <PyInit__decimal@@Base+0x10b90>
   385ec:	adrp	x1, 5f000 <PyInit__decimal@@Base+0x44a80>
   385f0:	mov	x0, x22
   385f4:	ldp	x19, x20, [sp, #16]
   385f8:	ldr	x1, [x1, #1704]
   385fc:	ldp	x21, x22, [sp, #32]
   38600:	mov	x16, x1
   38604:	ldp	x23, x24, [sp, #48]
   38608:	ldp	x25, x26, [sp, #64]
   3860c:	ldp	x27, x28, [sp, #80]
   38610:	ldp	x29, x30, [sp], #112
   38614:	br	x16
   38618:	mov	x2, x23
   3861c:	mov	x0, x25
   38620:	bl	25438 <PyInit__decimal@@Base+0xaeb8>
   38624:	cbnz	w0, 38564 <PyInit__decimal@@Base+0x1dfe4>
   38628:	b	385ec <PyInit__decimal@@Base+0x1e06c>
   3862c:	mov	x2, x23
   38630:	mov	x0, x25
   38634:	bl	25438 <PyInit__decimal@@Base+0xaeb8>
   38638:	cbnz	w0, 3857c <PyInit__decimal@@Base+0x1dffc>
   3863c:	b	385ec <PyInit__decimal@@Base+0x1e06c>
   38640:	ldr	x3, [x2, #112]
   38644:	cmp	x1, x3
   38648:	b.cs	38690 <PyInit__decimal@@Base+0x1e110>  // b.hs, b.nlast
   3864c:	ldr	x3, [x2, #88]
   38650:	cmp	x1, x3
   38654:	b.cc	386f8 <PyInit__decimal@@Base+0x1e178>  // b.lo, b.ul, b.last
   38658:	ldr	x4, [x2, #104]
   3865c:	mov	x3, #0xe                   	// #14
   38660:	cmp	x1, x4
   38664:	b.cs	385b0 <PyInit__decimal@@Base+0x1e030>  // b.hs, b.nlast
   38668:	ldr	x2, [x2, #96]
   3866c:	cmp	x1, x2
   38670:	cset	x3, cs  // cs = hs, nlast
   38674:	add	x3, x3, #0xc
   38678:	b	385b0 <PyInit__decimal@@Base+0x1e030>
   3867c:	mov	x2, x23
   38680:	mov	x0, x25
   38684:	bl	25588 <PyInit__decimal@@Base+0xb008>
   38688:	cbnz	w0, 383b0 <PyInit__decimal@@Base+0x1de30>
   3868c:	b	385ec <PyInit__decimal@@Base+0x1e06c>
   38690:	ldr	x3, [x2, #144]
   38694:	cmp	x1, x3
   38698:	b.cs	386bc <PyInit__decimal@@Base+0x1e13c>  // b.hs, b.nlast
   3869c:	ldr	x3, [x2, #128]
   386a0:	cmp	x1, x3
   386a4:	b.cs	38778 <PyInit__decimal@@Base+0x1e1f8>  // b.hs, b.nlast
   386a8:	ldr	x2, [x2, #120]
   386ac:	cmp	x1, x2
   386b0:	cset	x3, cs  // cs = hs, nlast
   386b4:	add	x3, x3, #0xf
   386b8:	b	385b0 <PyInit__decimal@@Base+0x1e030>
   386bc:	ldr	x2, [x2, #152]
   386c0:	cmp	x1, x2
   386c4:	cset	x3, cs  // cs = hs, nlast
   386c8:	add	x3, x3, #0x13
   386cc:	b	385b0 <PyInit__decimal@@Base+0x1e030>
   386d0:	ldr	x2, [x2, #24]
   386d4:	cmp	x1, x2
   386d8:	cset	x3, cs  // cs = hs, nlast
   386dc:	add	x3, x3, #0x3
   386e0:	b	385b0 <PyInit__decimal@@Base+0x1e030>
   386e4:	ldr	x2, [x2, #40]
   386e8:	cmp	x1, x2
   386ec:	cset	x3, cs  // cs = hs, nlast
   386f0:	add	x3, x3, #0x5
   386f4:	b	385b0 <PyInit__decimal@@Base+0x1e030>
   386f8:	ldr	x2, [x2, #80]
   386fc:	cmp	x1, x2
   38700:	cset	x3, cs  // cs = hs, nlast
   38704:	add	x3, x3, #0xa
   38708:	b	385b0 <PyInit__decimal@@Base+0x1e030>
   3870c:	mov	x2, x23
   38710:	mov	x0, x25
   38714:	bl	25588 <PyInit__decimal@@Base+0xb008>
   38718:	b	385dc <PyInit__decimal@@Base+0x1e05c>
   3871c:	adrp	x24, 5f000 <PyInit__decimal@@Base+0x44a80>
   38720:	ldr	x0, [x25, #32]
   38724:	ldr	x1, [x24, #1672]
   38728:	cmp	x1, x27
   3872c:	csel	x1, x1, x27, ge  // ge = tcont
   38730:	cmp	x0, x1
   38734:	b.ne	38390 <PyInit__decimal@@Base+0x1de10>  // b.any
   38738:	ldr	x1, [x25, #40]
   3873c:	mov	x20, #0xfffffffffffffffe    	// #-2
   38740:	ldur	x0, [x22, #-8]
   38744:	str	x0, [x1]
   38748:	b	383d0 <PyInit__decimal@@Base+0x1de50>
   3874c:	mov	x2, x23
   38750:	mov	x0, x25
   38754:	mov	w1, #0x200                 	// #512
   38758:	ldp	x19, x20, [sp, #16]
   3875c:	ldp	x21, x22, [sp, #32]
   38760:	ldp	x27, x28, [sp, #80]
   38764:	b	384bc <PyInit__decimal@@Base+0x1df3c>
   38768:	mov	x2, x23
   3876c:	mov	x0, x25
   38770:	bl	25438 <PyInit__decimal@@Base+0xaeb8>
   38774:	b	385dc <PyInit__decimal@@Base+0x1e05c>
   38778:	ldr	x2, [x2, #136]
   3877c:	cmp	x1, x2
   38780:	cset	x3, cs  // cs = hs, nlast
   38784:	add	x3, x3, #0x11
   38788:	b	385b0 <PyInit__decimal@@Base+0x1e030>
   3878c:	nop
   38790:	stp	x29, x30, [sp, #-128]!
   38794:	mov	x29, sp
   38798:	stp	x21, x22, [sp, #32]
   3879c:	mov	x22, x6
   387a0:	stp	x25, x26, [sp, #64]
   387a4:	mov	x26, x0
   387a8:	and	w0, w3, #0xff
   387ac:	str	w0, [sp, #108]
   387b0:	mov	x0, #0x20000000000000      	// #9007199254740992
   387b4:	str	x5, [sp, #112]
   387b8:	cmp	x2, x0
   387bc:	b.hi	38968 <PyInit__decimal@@Base+0x1e3e8>  // b.pmore
   387c0:	ucvtf	d0, w4
   387c4:	mov	x21, x2
   387c8:	stp	x23, x24, [sp, #48]
   387cc:	mov	x24, x1
   387d0:	mov	w23, w4
   387d4:	bl	6620 <log10@plt>
   387d8:	fmov	d1, #1.900000000000000000e+01
   387dc:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27a80>
   387e0:	fdiv	d1, d0, d1
   387e4:	scvtf	d0, x21
   387e8:	ldr	d2, [x0, #2392]
   387ec:	fmul	d0, d0, d1
   387f0:	fcmpe	d0, d2
   387f4:	b.ge	38984 <PyInit__decimal@@Base+0x1e404>  // b.tcont
   387f8:	stp	x19, x20, [sp, #16]
   387fc:	fcvtzs	x20, d0
   38800:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
   38804:	stp	x27, x28, [sp, #80]
   38808:	add	x20, x20, #0x1
   3880c:	cmp	x20, x0
   38810:	b.eq	3895c <PyInit__decimal@@Base+0x1e3dc>  // b.none
   38814:	adrp	x25, 5f000 <PyInit__decimal@@Base+0x44a80>
   38818:	ldr	x0, [x26, #32]
   3881c:	ldr	x1, [x25, #1672]
   38820:	cmp	x1, x20
   38824:	csel	x1, x1, x20, ge  // ge = tcont
   38828:	cmp	x1, x0
   3882c:	b.eq	38840 <PyInit__decimal@@Base+0x1e2c0>  // b.none
   38830:	ldrb	w2, [x26]
   38834:	tbz	w2, #5, 38afc <PyInit__decimal@@Base+0x1e57c>
   38838:	cmp	x1, x0
   3883c:	b.gt	38ad0 <PyInit__decimal@@Base+0x1e550>
   38840:	mov	w1, w23
   38844:	sub	x0, x21, #0x1
   38848:	str	x1, [sp, #96]
   3884c:	mov	x27, #0x89e80000            	// #2313682944
   38850:	ldr	x1, [x26, #40]
   38854:	movk	x27, #0x2304, lsl #32
   38858:	ldr	w0, [x24, x0, lsl #2]
   3885c:	cmp	x21, #0x1
   38860:	mov	x19, #0x1                   	// #1
   38864:	sub	x21, x21, #0x2
   38868:	str	x0, [x1]
   3886c:	movk	x27, #0x8ac7, lsl #48
   38870:	mov	x0, #0x0                   	// #0
   38874:	b.ne	38934 <PyInit__decimal@@Base+0x1e3b4>  // b.any
   38878:	b	38a34 <PyInit__decimal@@Base+0x1e4b4>
   3887c:	cmp	x20, x19
   38880:	add	x28, x19, #0x1
   38884:	b.gt	388b8 <PyInit__decimal@@Base+0x1e338>
   38888:	ldr	x1, [x25, #1672]
   3888c:	ldr	x0, [x26, #32]
   38890:	cmp	x1, x28
   38894:	csel	x1, x1, x28, ge  // ge = tcont
   38898:	cmp	x1, x0
   3889c:	b.eq	389d4 <PyInit__decimal@@Base+0x1e454>  // b.none
   388a0:	ldrb	w2, [x26]
   388a4:	tbz	w2, #5, 389c4 <PyInit__decimal@@Base+0x1e444>
   388a8:	cmp	x1, x0
   388ac:	mov	x20, x28
   388b0:	b.gt	389dc <PyInit__decimal@@Base+0x1e45c>
   388b4:	nop
   388b8:	ldr	x0, [x26, #40]
   388bc:	str	x23, [x0, x19, lsl #3]
   388c0:	mov	x19, x28
   388c4:	ldr	w2, [x24, x21, lsl #2]
   388c8:	mov	x3, x27
   388cc:	mov	x1, x28
   388d0:	bl	1d0c8 <PyInit__decimal@@Base+0x2b48>
   388d4:	mov	x3, x0
   388d8:	cbz	x0, 38924 <PyInit__decimal@@Base+0x1e3a4>
   388dc:	cmp	x19, x20
   388e0:	add	x19, x19, #0x1
   388e4:	b.lt	38918 <PyInit__decimal@@Base+0x1e398>  // b.tstop
   388e8:	ldr	x1, [x25, #1672]
   388ec:	ldr	x0, [x26, #32]
   388f0:	cmp	x1, x19
   388f4:	csel	x1, x1, x19, ge  // ge = tcont
   388f8:	cmp	x1, x0
   388fc:	b.eq	389bc <PyInit__decimal@@Base+0x1e43c>  // b.none
   38900:	ldrb	w2, [x26]
   38904:	tbz	w2, #5, 389a4 <PyInit__decimal@@Base+0x1e424>
   38908:	cmp	x1, x0
   3890c:	mov	x20, x19
   38910:	b.gt	389f0 <PyInit__decimal@@Base+0x1e470>
   38914:	nop
   38918:	ldr	x0, [x26, #40]
   3891c:	str	x3, [x0, x28, lsl #3]
   38920:	mov	x28, x19
   38924:	sub	x21, x21, #0x1
   38928:	cmn	x21, #0x1
   3892c:	b.eq	38a0c <PyInit__decimal@@Base+0x1e48c>  // b.none
   38930:	ldr	x1, [x26, #40]
   38934:	mov	x4, x27
   38938:	ldr	x3, [sp, #96]
   3893c:	mov	x2, x19
   38940:	mov	x0, x1
   38944:	mov	x28, x19
   38948:	bl	1d1f8 <PyInit__decimal@@Base+0x2c78>
   3894c:	mov	x23, x0
   38950:	cbnz	x0, 3887c <PyInit__decimal@@Base+0x1e2fc>
   38954:	ldr	x0, [x26, #40]
   38958:	b	388c4 <PyInit__decimal@@Base+0x1e344>
   3895c:	ldp	x19, x20, [sp, #16]
   38960:	ldp	x23, x24, [sp, #48]
   38964:	ldp	x27, x28, [sp, #80]
   38968:	mov	x2, x22
   3896c:	mov	x0, x26
   38970:	mov	w1, #0x100                 	// #256
   38974:	ldp	x21, x22, [sp, #32]
   38978:	ldp	x25, x26, [sp, #64]
   3897c:	ldp	x29, x30, [sp], #128
   38980:	b	28d68 <PyInit__decimal@@Base+0xe7e8>
   38984:	mov	x2, x22
   38988:	mov	x0, x26
   3898c:	ldp	x21, x22, [sp, #32]
   38990:	mov	w1, #0x100                 	// #256
   38994:	ldp	x23, x24, [sp, #48]
   38998:	ldp	x25, x26, [sp, #64]
   3899c:	ldp	x29, x30, [sp], #128
   389a0:	b	28d68 <PyInit__decimal@@Base+0xe7e8>
   389a4:	mov	x2, x22
   389a8:	mov	x0, x26
   389ac:	str	x3, [sp, #120]
   389b0:	bl	25588 <PyInit__decimal@@Base+0xb008>
   389b4:	ldr	x3, [sp, #120]
   389b8:	cbz	w0, 38ae0 <PyInit__decimal@@Base+0x1e560>
   389bc:	mov	x20, x19
   389c0:	b	38918 <PyInit__decimal@@Base+0x1e398>
   389c4:	mov	x2, x22
   389c8:	mov	x0, x26
   389cc:	bl	25588 <PyInit__decimal@@Base+0xb008>
   389d0:	cbz	w0, 38ae0 <PyInit__decimal@@Base+0x1e560>
   389d4:	mov	x20, x28
   389d8:	b	388b8 <PyInit__decimal@@Base+0x1e338>
   389dc:	mov	x2, x22
   389e0:	mov	x0, x26
   389e4:	bl	25438 <PyInit__decimal@@Base+0xaeb8>
   389e8:	cbnz	w0, 389d4 <PyInit__decimal@@Base+0x1e454>
   389ec:	b	38ae0 <PyInit__decimal@@Base+0x1e560>
   389f0:	mov	x2, x22
   389f4:	mov	x0, x26
   389f8:	str	x3, [sp, #120]
   389fc:	bl	25438 <PyInit__decimal@@Base+0xaeb8>
   38a00:	ldr	x3, [sp, #120]
   38a04:	cbnz	w0, 389bc <PyInit__decimal@@Base+0x1e43c>
   38a08:	b	38ae0 <PyInit__decimal@@Base+0x1e560>
   38a0c:	cmn	x28, #0x1
   38a10:	b.eq	38ae0 <PyInit__decimal@@Base+0x1e560>  // b.none
   38a14:	sub	x2, x19, #0x1
   38a18:	lsl	x4, x28, #3
   38a1c:	ldr	x1, [x26, #40]
   38a20:	add	x0, x2, x2, lsl #2
   38a24:	sub	x4, x4, #0x8
   38a28:	lsl	x0, x0, #2
   38a2c:	add	x1, x1, x4
   38a30:	sub	x0, x0, x2
   38a34:	ldrb	w3, [x26]
   38a38:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27a80>
   38a3c:	ldr	w4, [sp, #108]
   38a40:	add	x2, x2, #0x2d0
   38a44:	and	w3, w3, #0xf0
   38a48:	str	xzr, [x26, #8]
   38a4c:	orr	w28, w3, w4
   38a50:	strb	w28, [x26]
   38a54:	str	x19, [x26, #24]
   38a58:	ldr	x3, [x2, #72]
   38a5c:	ldr	x1, [x1]
   38a60:	cmp	x1, x3
   38a64:	b.cs	38a94 <PyInit__decimal@@Base+0x1e514>  // b.hs, b.nlast
   38a68:	ldr	x3, [x2, #32]
   38a6c:	cmp	x1, x3
   38a70:	b.cs	38b38 <PyInit__decimal@@Base+0x1e5b8>  // b.hs, b.nlast
   38a74:	ldr	x3, [x2, #16]
   38a78:	cmp	x1, x3
   38a7c:	b.cs	38bd0 <PyInit__decimal@@Base+0x1e650>  // b.hs, b.nlast
   38a80:	ldr	x2, [x2, #8]
   38a84:	cmp	x1, x2
   38a88:	cset	x3, cs  // cs = hs, nlast
   38a8c:	add	x3, x3, #0x1
   38a90:	b	38b68 <PyInit__decimal@@Base+0x1e5e8>
   38a94:	ldr	x3, [x2, #112]
   38a98:	cmp	x1, x3
   38a9c:	b.cs	38b0c <PyInit__decimal@@Base+0x1e58c>  // b.hs, b.nlast
   38aa0:	ldr	x3, [x2, #88]
   38aa4:	cmp	x1, x3
   38aa8:	b.cc	38bf8 <PyInit__decimal@@Base+0x1e678>  // b.lo, b.ul, b.last
   38aac:	ldr	x4, [x2, #104]
   38ab0:	mov	x3, #0xe                   	// #14
   38ab4:	cmp	x1, x4
   38ab8:	b.cs	38b68 <PyInit__decimal@@Base+0x1e5e8>  // b.hs, b.nlast
   38abc:	ldr	x2, [x2, #96]
   38ac0:	cmp	x1, x2
   38ac4:	cset	x3, cs  // cs = hs, nlast
   38ac8:	add	x3, x3, #0xc
   38acc:	b	38b68 <PyInit__decimal@@Base+0x1e5e8>
   38ad0:	mov	x2, x22
   38ad4:	mov	x0, x26
   38ad8:	bl	25438 <PyInit__decimal@@Base+0xaeb8>
   38adc:	cbnz	w0, 38840 <PyInit__decimal@@Base+0x1e2c0>
   38ae0:	ldp	x19, x20, [sp, #16]
   38ae4:	ldp	x21, x22, [sp, #32]
   38ae8:	ldp	x23, x24, [sp, #48]
   38aec:	ldp	x25, x26, [sp, #64]
   38af0:	ldp	x27, x28, [sp, #80]
   38af4:	ldp	x29, x30, [sp], #128
   38af8:	ret
   38afc:	mov	x2, x22
   38b00:	mov	x0, x26
   38b04:	bl	25588 <PyInit__decimal@@Base+0xb008>
   38b08:	b	38adc <PyInit__decimal@@Base+0x1e55c>
   38b0c:	ldr	x3, [x2, #144]
   38b10:	cmp	x1, x3
   38b14:	b.cs	38bbc <PyInit__decimal@@Base+0x1e63c>  // b.hs, b.nlast
   38b18:	ldr	x3, [x2, #128]
   38b1c:	cmp	x1, x3
   38b20:	b.cs	38c2c <PyInit__decimal@@Base+0x1e6ac>  // b.hs, b.nlast
   38b24:	ldr	x2, [x2, #120]
   38b28:	cmp	x1, x2
   38b2c:	cset	x3, cs  // cs = hs, nlast
   38b30:	add	x3, x3, #0xf
   38b34:	b	38b68 <PyInit__decimal@@Base+0x1e5e8>
   38b38:	ldr	x3, [x2, #48]
   38b3c:	cmp	x1, x3
   38b40:	b.cc	38be4 <PyInit__decimal@@Base+0x1e664>  // b.lo, b.ul, b.last
   38b44:	ldr	x4, [x2, #64]
   38b48:	mov	x3, #0x9                   	// #9
   38b4c:	cmp	x1, x4
   38b50:	b.cs	38b68 <PyInit__decimal@@Base+0x1e5e8>  // b.hs, b.nlast
   38b54:	ldr	x2, [x2, #56]
   38b58:	cmp	x1, x2
   38b5c:	cset	x3, cs  // cs = hs, nlast
   38b60:	add	x3, x3, #0x7
   38b64:	nop
   38b68:	ldr	x1, [x25, #1672]
   38b6c:	add	x0, x0, x3
   38b70:	ldr	x2, [x26, #32]
   38b74:	cmp	x1, x19
   38b78:	str	x0, [x26, #16]
   38b7c:	csel	x1, x1, x19, ge  // ge = tcont
   38b80:	cmp	x1, x2
   38b84:	b.eq	38b94 <PyInit__decimal@@Base+0x1e614>  // b.none
   38b88:	tbz	w28, #5, 38c0c <PyInit__decimal@@Base+0x1e68c>
   38b8c:	cmp	x1, x2
   38b90:	b.gt	38c1c <PyInit__decimal@@Base+0x1e69c>
   38b94:	mov	x2, x22
   38b98:	mov	x0, x26
   38b9c:	ldp	x19, x20, [sp, #16]
   38ba0:	ldp	x21, x22, [sp, #32]
   38ba4:	ldp	x23, x24, [sp, #48]
   38ba8:	ldp	x25, x26, [sp, #64]
   38bac:	ldp	x27, x28, [sp, #80]
   38bb0:	ldr	x1, [sp, #112]
   38bb4:	ldp	x29, x30, [sp], #128
   38bb8:	b	2b110 <PyInit__decimal@@Base+0x10b90>
   38bbc:	ldr	x2, [x2, #152]
   38bc0:	cmp	x1, x2
   38bc4:	cset	x3, cs  // cs = hs, nlast
   38bc8:	add	x3, x3, #0x13
   38bcc:	b	38b68 <PyInit__decimal@@Base+0x1e5e8>
   38bd0:	ldr	x2, [x2, #24]
   38bd4:	cmp	x1, x2
   38bd8:	cset	x3, cs  // cs = hs, nlast
   38bdc:	add	x3, x3, #0x3
   38be0:	b	38b68 <PyInit__decimal@@Base+0x1e5e8>
   38be4:	ldr	x2, [x2, #40]
   38be8:	cmp	x1, x2
   38bec:	cset	x3, cs  // cs = hs, nlast
   38bf0:	add	x3, x3, #0x5
   38bf4:	b	38b68 <PyInit__decimal@@Base+0x1e5e8>
   38bf8:	ldr	x2, [x2, #80]
   38bfc:	cmp	x1, x2
   38c00:	cset	x3, cs  // cs = hs, nlast
   38c04:	add	x3, x3, #0xa
   38c08:	b	38b68 <PyInit__decimal@@Base+0x1e5e8>
   38c0c:	mov	x2, x22
   38c10:	mov	x0, x26
   38c14:	bl	25588 <PyInit__decimal@@Base+0xb008>
   38c18:	b	38b94 <PyInit__decimal@@Base+0x1e614>
   38c1c:	mov	x2, x22
   38c20:	mov	x0, x26
   38c24:	bl	25438 <PyInit__decimal@@Base+0xaeb8>
   38c28:	b	38b94 <PyInit__decimal@@Base+0x1e614>
   38c2c:	ldr	x2, [x2, #136]
   38c30:	cmp	x1, x2
   38c34:	cset	x3, cs  // cs = hs, nlast
   38c38:	add	x3, x3, #0x11
   38c3c:	b	38b68 <PyInit__decimal@@Base+0x1e5e8>
   38c40:	sxtw	x2, w2
   38c44:	adrp	x3, 42000 <PyInit__decimal@@Base+0x27a80>
   38c48:	add	x3, x3, #0x5a8
   38c4c:	adrp	x4, 42000 <PyInit__decimal@@Base+0x27a80>
   38c50:	add	x4, x4, #0x590
   38c54:	cmn	w1, #0x1
   38c58:	ldr	x3, [x3, x2, lsl #3]
   38c5c:	ldr	x1, [x4, x2, lsl #3]
   38c60:	sub	x2, x3, #0x1
   38c64:	udiv	x5, x2, x0
   38c68:	b.eq	38ec8 <PyInit__decimal@@Base+0x1e948>  // b.none
   38c6c:	cmp	x2, x0
   38c70:	and	x7, x3, #0x100000000
   38c74:	and	x6, x3, #0x400000000
   38c78:	mov	x0, #0x1                   	// #1
   38c7c:	b.cs	38d6c <PyInit__decimal@@Base+0x1e7ec>  // b.hs, b.nlast
   38c80:	b	38dd4 <PyInit__decimal@@Base+0x1e854>
   38c84:	mul	x4, x0, x1
   38c88:	umulh	x1, x0, x1
   38c8c:	subs	x8, x4, x1
   38c90:	cmp	x4, x1
   38c94:	cset	x10, cc  // cc = lo, ul, last
   38c98:	cbnz	x7, 38dd8 <PyInit__decimal@@Base+0x1e858>
   38c9c:	cbz	x6, 38e64 <PyInit__decimal@@Base+0x1e8e4>
   38ca0:	lsr	x0, x1, #30
   38ca4:	lsl	x1, x1, #34
   38ca8:	adds	x1, x1, x8
   38cac:	sub	x0, x0, x10
   38cb0:	cinc	x0, x0, cs  // cs = hs, nlast
   38cb4:	sub	x8, x9, x2
   38cb8:	subs	x10, x1, x0
   38cbc:	cmp	x1, x0
   38cc0:	lsr	x4, x0, #30
   38cc4:	lsl	x0, x0, #34
   38cc8:	sbc	x4, x4, xzr
   38ccc:	adds	x1, x10, x0
   38cd0:	cinc	x4, x4, cs  // cs = hs, nlast
   38cd4:	subs	x0, x1, x4
   38cd8:	cmp	x1, x4
   38cdc:	lsr	x10, x4, #30
   38ce0:	lsl	x4, x4, #34
   38ce4:	sbc	x10, x10, xzr
   38ce8:	adds	x4, x0, x4
   38cec:	cinc	x10, x10, cs  // cs = hs, nlast
   38cf0:	sub	x1, x4, x3
   38cf4:	cmp	x10, #0x0
   38cf8:	ccmp	x3, x4, #0x0, eq  // eq = none
   38cfc:	csel	x0, x1, x4, ls  // ls = plast
   38d00:	cmp	x8, x9
   38d04:	lsr	x1, x2, #30
   38d08:	cset	x4, hi  // hi = pmore
   38d0c:	lsl	x2, x2, #34
   38d10:	adds	x2, x2, x8
   38d14:	sub	x1, x1, x4
   38d18:	cinc	x1, x1, cs  // cs = hs, nlast
   38d1c:	subs	x4, x2, x1
   38d20:	cmp	x2, x1
   38d24:	lsr	x2, x1, #30
   38d28:	lsl	x1, x1, #34
   38d2c:	sbc	x2, x2, xzr
   38d30:	adds	x4, x4, x1
   38d34:	cinc	x2, x2, cs  // cs = hs, nlast
   38d38:	subs	x1, x4, x2
   38d3c:	cmp	x4, x2
   38d40:	lsr	x4, x2, #30
   38d44:	lsl	x2, x2, #34
   38d48:	sbc	x4, x4, xzr
   38d4c:	adds	x1, x1, x2
   38d50:	cinc	x4, x4, cs  // cs = hs, nlast
   38d54:	sub	x2, x1, x3
   38d58:	cmp	x4, #0x0
   38d5c:	ccmp	x3, x1, #0x0, eq  // eq = none
   38d60:	csel	x1, x2, x1, ls  // ls = plast
   38d64:	lsr	x5, x5, #1
   38d68:	cbz	x5, 38dd4 <PyInit__decimal@@Base+0x1e854>
   38d6c:	mul	x9, x1, x1
   38d70:	umulh	x2, x1, x1
   38d74:	tbnz	w5, #0, 38c84 <PyInit__decimal@@Base+0x1e704>
   38d78:	cbnz	x7, 38e18 <PyInit__decimal@@Base+0x1e898>
   38d7c:	sub	x8, x9, x2
   38d80:	cbnz	x6, 38d00 <PyInit__decimal@@Base+0x1e780>
   38d84:	cmp	x8, x9
   38d88:	lsr	x1, x2, #24
   38d8c:	cset	x4, hi  // hi = pmore
   38d90:	lsl	x2, x2, #40
   38d94:	adds	x2, x2, x8
   38d98:	sub	x1, x1, x4
   38d9c:	cinc	x1, x1, cs  // cs = hs, nlast
   38da0:	subs	x4, x2, x1
   38da4:	cmp	x2, x1
   38da8:	lsr	x2, x1, #24
   38dac:	lsl	x1, x1, #40
   38db0:	sbc	x2, x2, xzr
   38db4:	adds	x4, x4, x1
   38db8:	cinc	x2, x2, cs  // cs = hs, nlast
   38dbc:	subs	x1, x4, x2
   38dc0:	cmp	x4, x2
   38dc4:	lsr	x4, x2, #24
   38dc8:	lsl	x2, x2, #40
   38dcc:	b	38d48 <PyInit__decimal@@Base+0x1e7c8>
   38dd0:	mov	x0, #0x1                   	// #1
   38dd4:	ret
   38dd8:	lsr	x4, x1, #32
   38ddc:	lsl	x1, x1, #32
   38de0:	adds	x1, x1, x8
   38de4:	sub	x4, x4, x10
   38de8:	cinc	x4, x4, cs  // cs = hs, nlast
   38dec:	subs	x0, x1, x4
   38df0:	cmp	x1, x4
   38df4:	lsr	x8, x4, #32
   38df8:	lsl	x4, x4, #32
   38dfc:	sbc	x8, x8, xzr
   38e00:	adds	x4, x0, x4
   38e04:	cinc	x8, x8, cs  // cs = hs, nlast
   38e08:	sub	x1, x4, x3
   38e0c:	cmp	x8, #0x0
   38e10:	ccmp	x3, x4, #0x0, eq  // eq = none
   38e14:	csel	x0, x1, x4, ls  // ls = plast
   38e18:	subs	x1, x9, x2
   38e1c:	lsr	x4, x2, #32
   38e20:	cmp	x9, x2
   38e24:	lsl	x2, x2, #32
   38e28:	sbc	x4, x4, xzr
   38e2c:	adds	x2, x1, x2
   38e30:	cinc	x4, x4, cs  // cs = hs, nlast
   38e34:	subs	x1, x2, x4
   38e38:	cmp	x2, x4
   38e3c:	lsr	x8, x4, #32
   38e40:	lsl	x4, x4, #32
   38e44:	sbc	x8, x8, xzr
   38e48:	adds	x4, x1, x4
   38e4c:	cinc	x8, x8, cs  // cs = hs, nlast
   38e50:	sub	x2, x4, x3
   38e54:	cmp	x8, #0x0
   38e58:	ccmp	x3, x4, #0x0, eq  // eq = none
   38e5c:	csel	x1, x2, x4, ls  // ls = plast
   38e60:	b	38d64 <PyInit__decimal@@Base+0x1e7e4>
   38e64:	lsr	x0, x1, #24
   38e68:	lsl	x1, x1, #40
   38e6c:	adds	x1, x1, x8
   38e70:	sub	x0, x0, x10
   38e74:	cinc	x0, x0, cs  // cs = hs, nlast
   38e78:	sub	x8, x9, x2
   38e7c:	subs	x10, x1, x0
   38e80:	cmp	x1, x0
   38e84:	lsr	x4, x0, #24
   38e88:	lsl	x0, x0, #40
   38e8c:	sbc	x4, x4, xzr
   38e90:	adds	x1, x10, x0
   38e94:	cinc	x4, x4, cs  // cs = hs, nlast
   38e98:	subs	x0, x1, x4
   38e9c:	cmp	x1, x4
   38ea0:	lsr	x10, x4, #24
   38ea4:	lsl	x4, x4, #40
   38ea8:	sbc	x10, x10, xzr
   38eac:	adds	x4, x0, x4
   38eb0:	cinc	x10, x10, cs  // cs = hs, nlast
   38eb4:	sub	x1, x4, x3
   38eb8:	cmp	x10, #0x0
   38ebc:	ccmp	x3, x4, #0x0, eq  // eq = none
   38ec0:	csel	x0, x1, x4, ls  // ls = plast
   38ec4:	b	38d84 <PyInit__decimal@@Base+0x1e804>
   38ec8:	subs	x5, x2, x5
   38ecc:	b.eq	38dd0 <PyInit__decimal@@Base+0x1e850>  // b.none
   38ed0:	and	x6, x3, #0x100000000
   38ed4:	and	x7, x3, #0x400000000
   38ed8:	mov	x0, #0x1                   	// #1
   38edc:	b	38fc8 <PyInit__decimal@@Base+0x1ea48>
   38ee0:	mul	x4, x0, x1
   38ee4:	umulh	x1, x0, x1
   38ee8:	subs	x9, x4, x1
   38eec:	cmp	x4, x1
   38ef0:	cset	x10, cc  // cc = lo, ul, last
   38ef4:	cbnz	x6, 3902c <PyInit__decimal@@Base+0x1eaac>
   38ef8:	cbz	x7, 390b8 <PyInit__decimal@@Base+0x1eb38>
   38efc:	lsr	x0, x1, #30
   38f00:	lsl	x1, x1, #34
   38f04:	adds	x1, x1, x9
   38f08:	sub	x0, x0, x10
   38f0c:	cinc	x0, x0, cs  // cs = hs, nlast
   38f10:	sub	x4, x8, x2
   38f14:	subs	x10, x1, x0
   38f18:	cmp	x1, x0
   38f1c:	lsr	x9, x0, #30
   38f20:	lsl	x0, x0, #34
   38f24:	sbc	x9, x9, xzr
   38f28:	adds	x1, x10, x0
   38f2c:	cinc	x9, x9, cs  // cs = hs, nlast
   38f30:	subs	x0, x1, x9
   38f34:	cmp	x1, x9
   38f38:	lsr	x10, x9, #30
   38f3c:	lsl	x9, x9, #34
   38f40:	sbc	x10, x10, xzr
   38f44:	adds	x9, x0, x9
   38f48:	cinc	x10, x10, cs  // cs = hs, nlast
   38f4c:	sub	x1, x9, x3
   38f50:	cmp	x10, #0x0
   38f54:	ccmp	x3, x9, #0x0, eq  // eq = none
   38f58:	csel	x0, x1, x9, ls  // ls = plast
   38f5c:	cmp	x4, x8
   38f60:	lsr	x1, x2, #30
   38f64:	cset	x8, hi  // hi = pmore
   38f68:	lsl	x2, x2, #34
   38f6c:	adds	x2, x2, x4
   38f70:	sub	x1, x1, x8
   38f74:	cinc	x1, x1, cs  // cs = hs, nlast
   38f78:	subs	x4, x2, x1
   38f7c:	cmp	x2, x1
   38f80:	lsr	x2, x1, #30
   38f84:	lsl	x1, x1, #34
   38f88:	sbc	x2, x2, xzr
   38f8c:	adds	x4, x4, x1
   38f90:	cinc	x2, x2, cs  // cs = hs, nlast
   38f94:	subs	x1, x4, x2
   38f98:	cmp	x4, x2
   38f9c:	lsr	x4, x2, #30
   38fa0:	lsl	x2, x2, #34
   38fa4:	sbc	x4, x4, xzr
   38fa8:	adds	x1, x1, x2
   38fac:	cinc	x4, x4, cs  // cs = hs, nlast
   38fb0:	sub	x2, x1, x3
   38fb4:	cmp	x4, #0x0
   38fb8:	ccmp	x3, x1, #0x0, eq  // eq = none
   38fbc:	csel	x1, x2, x1, ls  // ls = plast
   38fc0:	lsr	x5, x5, #1
   38fc4:	cbz	x5, 38dd4 <PyInit__decimal@@Base+0x1e854>
   38fc8:	mul	x8, x1, x1
   38fcc:	umulh	x2, x1, x1
   38fd0:	tbnz	w5, #0, 38ee0 <PyInit__decimal@@Base+0x1e960>
   38fd4:	cbnz	x6, 3906c <PyInit__decimal@@Base+0x1eaec>
   38fd8:	sub	x4, x8, x2
   38fdc:	cbnz	x7, 38f5c <PyInit__decimal@@Base+0x1e9dc>
   38fe0:	cmp	x4, x8
   38fe4:	lsr	x1, x2, #24
   38fe8:	cset	x8, hi  // hi = pmore
   38fec:	lsl	x2, x2, #40
   38ff0:	adds	x2, x2, x4
   38ff4:	sub	x1, x1, x8
   38ff8:	cinc	x1, x1, cs  // cs = hs, nlast
   38ffc:	subs	x4, x2, x1
   39000:	cmp	x2, x1
   39004:	lsr	x2, x1, #24
   39008:	lsl	x1, x1, #40
   3900c:	sbc	x2, x2, xzr
   39010:	adds	x4, x4, x1
   39014:	cinc	x2, x2, cs  // cs = hs, nlast
   39018:	subs	x1, x4, x2
   3901c:	cmp	x4, x2
   39020:	lsr	x4, x2, #24
   39024:	lsl	x2, x2, #40
   39028:	b	38fa4 <PyInit__decimal@@Base+0x1ea24>
   3902c:	lsr	x4, x1, #32
   39030:	lsl	x1, x1, #32
   39034:	adds	x1, x1, x9
   39038:	sub	x4, x4, x10
   3903c:	cinc	x4, x4, cs  // cs = hs, nlast
   39040:	subs	x0, x1, x4
   39044:	cmp	x1, x4
   39048:	lsr	x9, x4, #32
   3904c:	lsl	x4, x4, #32
   39050:	sbc	x9, x9, xzr
   39054:	adds	x4, x0, x4
   39058:	cinc	x9, x9, cs  // cs = hs, nlast
   3905c:	sub	x1, x4, x3
   39060:	cmp	x9, #0x0
   39064:	ccmp	x3, x4, #0x0, eq  // eq = none
   39068:	csel	x0, x1, x4, ls  // ls = plast
   3906c:	subs	x1, x8, x2
   39070:	lsr	x4, x2, #32
   39074:	cmp	x8, x2
   39078:	lsl	x2, x2, #32
   3907c:	sbc	x4, x4, xzr
   39080:	adds	x2, x1, x2
   39084:	cinc	x4, x4, cs  // cs = hs, nlast
   39088:	subs	x1, x2, x4
   3908c:	cmp	x2, x4
   39090:	lsr	x8, x4, #32
   39094:	lsl	x4, x4, #32
   39098:	sbc	x8, x8, xzr
   3909c:	adds	x4, x1, x4
   390a0:	cinc	x8, x8, cs  // cs = hs, nlast
   390a4:	sub	x2, x4, x3
   390a8:	cmp	x8, #0x0
   390ac:	ccmp	x3, x4, #0x0, eq  // eq = none
   390b0:	csel	x1, x2, x4, ls  // ls = plast
   390b4:	b	38fc0 <PyInit__decimal@@Base+0x1ea40>
   390b8:	lsr	x0, x1, #24
   390bc:	lsl	x1, x1, #40
   390c0:	adds	x1, x1, x9
   390c4:	sub	x0, x0, x10
   390c8:	cinc	x0, x0, cs  // cs = hs, nlast
   390cc:	sub	x4, x8, x2
   390d0:	subs	x10, x1, x0
   390d4:	cmp	x1, x0
   390d8:	lsr	x9, x0, #24
   390dc:	lsl	x0, x0, #40
   390e0:	sbc	x9, x9, xzr
   390e4:	adds	x1, x10, x0
   390e8:	cinc	x9, x9, cs  // cs = hs, nlast
   390ec:	subs	x0, x1, x9
   390f0:	cmp	x1, x9
   390f4:	lsr	x10, x9, #24
   390f8:	lsl	x9, x9, #40
   390fc:	sbc	x10, x10, xzr
   39100:	adds	x9, x0, x9
   39104:	cinc	x10, x10, cs  // cs = hs, nlast
   39108:	sub	x1, x9, x3
   3910c:	cmp	x10, #0x0
   39110:	ccmp	x3, x9, #0x0, eq  // eq = none
   39114:	csel	x0, x1, x9, ls  // ls = plast
   39118:	b	38fe0 <PyInit__decimal@@Base+0x1ea60>
   3911c:	nop
   39120:	stp	x29, x30, [sp, #-48]!
   39124:	mov	x29, sp
   39128:	stp	x19, x20, [sp, #16]
   3912c:	lsr	x19, x0, #1
   39130:	mov	w20, w2
   39134:	mov	x2, #0x8                   	// #8
   39138:	stp	x21, x22, [sp, #32]
   3913c:	mov	x21, x0
   39140:	mov	w22, w1
   39144:	mov	x0, #0x18                  	// #24
   39148:	mov	x1, x19
   3914c:	bl	25300 <PyInit__decimal@@Base+0xad80>
   39150:	mov	x12, x0
   39154:	cbz	x0, 3929c <PyInit__decimal@@Base+0x1ed1c>
   39158:	adrp	x3, 42000 <PyInit__decimal@@Base+0x27a80>
   3915c:	add	x3, x3, #0x5a8
   39160:	mov	w1, w22
   39164:	mov	x0, x21
   39168:	mov	w2, w20
   3916c:	ldr	x11, [x3, w20, sxtw #3]
   39170:	bl	38c40 <PyInit__decimal@@Base+0x1e6c0>
   39174:	str	w20, [x12]
   39178:	stp	x11, x0, [x12, #8]
   3917c:	cbz	x19, 3929c <PyInit__decimal@@Base+0x1ed1c>
   39180:	and	x9, x11, #0x100000000
   39184:	add	x8, x12, #0x18
   39188:	and	x10, x11, #0x400000000
   3918c:	mov	x7, #0x0                   	// #0
   39190:	mov	x1, #0x1                   	// #1
   39194:	b	39234 <PyInit__decimal@@Base+0x1ecb4>
   39198:	lsr	x3, x1, #24
   3919c:	lsl	x4, x1, #40
   391a0:	adds	x4, x4, x2
   391a4:	sub	x3, x3, x13
   391a8:	cinc	x3, x3, cs  // cs = hs, nlast
   391ac:	lsr	x5, x1, #30
   391b0:	subs	x6, x4, x3
   391b4:	lsl	x1, x1, #34
   391b8:	cmp	x4, x3
   391bc:	lsr	x4, x3, #24
   391c0:	lsl	x3, x3, #40
   391c4:	sbc	x4, x4, xzr
   391c8:	adds	x3, x6, x3
   391cc:	sub	x5, x5, x13
   391d0:	cinc	x4, x4, cs  // cs = hs, nlast
   391d4:	cbz	x10, 392b0 <PyInit__decimal@@Base+0x1ed30>
   391d8:	adds	x1, x1, x2
   391dc:	cinc	x5, x5, cs  // cs = hs, nlast
   391e0:	subs	x3, x1, x5
   391e4:	cmp	x1, x5
   391e8:	lsr	x2, x5, #30
   391ec:	lsl	x5, x5, #34
   391f0:	sbc	x2, x2, xzr
   391f4:	adds	x5, x3, x5
   391f8:	cinc	x2, x2, cs  // cs = hs, nlast
   391fc:	subs	x1, x5, x2
   39200:	cmp	x5, x2
   39204:	lsr	x3, x2, #30
   39208:	lsl	x2, x2, #34
   3920c:	sbc	x3, x3, xzr
   39210:	adds	x2, x1, x2
   39214:	cinc	x3, x3, cs  // cs = hs, nlast
   39218:	sub	x1, x2, x11
   3921c:	cmp	x3, #0x0
   39220:	ccmp	x11, x2, #0x0, eq  // eq = none
   39224:	csel	x1, x1, x2, ls  // ls = plast
   39228:	add	x7, x7, #0x1
   3922c:	cmp	x19, x7
   39230:	b.eq	3929c <PyInit__decimal@@Base+0x1ed1c>  // b.none
   39234:	mul	x3, x1, x0
   39238:	str	x1, [x8, x7, lsl #3]
   3923c:	umulh	x1, x1, x0
   39240:	subs	x2, x3, x1
   39244:	cmp	x3, x1
   39248:	cset	x13, cc  // cc = lo, ul, last
   3924c:	cbz	x9, 39198 <PyInit__decimal@@Base+0x1ec18>
   39250:	lsr	x3, x1, #32
   39254:	lsl	x1, x1, #32
   39258:	adds	x2, x1, x2
   3925c:	sub	x3, x3, x13
   39260:	cinc	x3, x3, cs  // cs = hs, nlast
   39264:	add	x7, x7, #0x1
   39268:	subs	x1, x2, x3
   3926c:	cmp	x2, x3
   39270:	lsr	x2, x3, #32
   39274:	lsl	x3, x3, #32
   39278:	sbc	x2, x2, xzr
   3927c:	adds	x3, x1, x3
   39280:	cinc	x2, x2, cs  // cs = hs, nlast
   39284:	sub	x1, x3, x11
   39288:	cmp	x2, #0x0
   3928c:	ccmp	x11, x3, #0x0, eq  // eq = none
   39290:	csel	x1, x1, x3, ls  // ls = plast
   39294:	cmp	x19, x7
   39298:	b.ne	39234 <PyInit__decimal@@Base+0x1ecb4>  // b.any
   3929c:	mov	x0, x12
   392a0:	ldp	x19, x20, [sp, #16]
   392a4:	ldp	x21, x22, [sp, #32]
   392a8:	ldp	x29, x30, [sp], #48
   392ac:	ret
   392b0:	subs	x1, x3, x4
   392b4:	lsr	x2, x4, #24
   392b8:	cmp	x3, x4
   392bc:	lsl	x4, x4, #40
   392c0:	sbc	x2, x2, xzr
   392c4:	adds	x4, x1, x4
   392c8:	cinc	x2, x2, cs  // cs = hs, nlast
   392cc:	sub	x1, x4, x11
   392d0:	cmp	x2, #0x0
   392d4:	ccmp	x11, x4, #0x0, eq  // eq = none
   392d8:	csel	x1, x1, x4, ls  // ls = plast
   392dc:	b	39228 <PyInit__decimal@@Base+0x1eca8>
   392e0:	adrp	x3, 42000 <PyInit__decimal@@Base+0x27a80>
   392e4:	add	x3, x3, #0x5a8
   392e8:	stp	x29, x30, [sp, #-16]!
   392ec:	mov	x12, x0
   392f0:	mov	x0, #0x3                   	// #3
   392f4:	mov	x29, sp
   392f8:	ldr	x11, [x3, w2, sxtw #3]
   392fc:	bl	38c40 <PyInit__decimal@@Base+0x1e6c0>
   39300:	and	x6, x11, #0x100000000
   39304:	mov	x3, #0x1                   	// #1
   39308:	and	x5, x11, #0x400000000
   3930c:	mov	x1, x3
   39310:	mov	w4, #0x2                   	// #2
   39314:	mov	x2, #0x2                   	// #2
   39318:	stp	x3, x0, [x12]
   3931c:	b	39410 <PyInit__decimal@@Base+0x1ee90>
   39320:	mul	x3, x1, x0
   39324:	umulh	x1, x1, x0
   39328:	subs	x0, x3, x1
   3932c:	cmp	x3, x1
   39330:	cset	x8, cc  // cc = lo, ul, last
   39334:	cbnz	x6, 39484 <PyInit__decimal@@Base+0x1ef04>
   39338:	cbz	x5, 39510 <PyInit__decimal@@Base+0x1ef90>
   3933c:	lsr	x7, x1, #30
   39340:	lsl	x1, x1, #34
   39344:	adds	x1, x1, x0
   39348:	sub	x7, x7, x8
   3934c:	cinc	x7, x7, cs  // cs = hs, nlast
   39350:	sub	x8, x9, x2
   39354:	subs	x0, x1, x7
   39358:	cmp	x1, x7
   3935c:	lsr	x3, x7, #30
   39360:	lsl	x7, x7, #34
   39364:	sbc	x3, x3, xzr
   39368:	adds	x7, x0, x7
   3936c:	cinc	x3, x3, cs  // cs = hs, nlast
   39370:	subs	x1, x7, x3
   39374:	cmp	x7, x3
   39378:	lsr	x7, x3, #30
   3937c:	lsl	x3, x3, #34
   39380:	sbc	x7, x7, xzr
   39384:	adds	x3, x1, x3
   39388:	cinc	x7, x7, cs  // cs = hs, nlast
   3938c:	sub	x1, x3, x11
   39390:	cmp	x7, #0x0
   39394:	ccmp	x11, x3, #0x0, eq  // eq = none
   39398:	csel	x1, x1, x3, ls  // ls = plast
   3939c:	cmp	x8, x9
   393a0:	lsr	x0, x2, #30
   393a4:	cset	x3, hi  // hi = pmore
   393a8:	lsl	x2, x2, #34
   393ac:	adds	x2, x2, x8
   393b0:	sub	x0, x0, x3
   393b4:	cinc	x0, x0, cs  // cs = hs, nlast
   393b8:	subs	x3, x2, x0
   393bc:	cmp	x2, x0
   393c0:	lsr	x2, x0, #30
   393c4:	lsl	x0, x0, #34
   393c8:	sbc	x2, x2, xzr
   393cc:	adds	x3, x3, x0
   393d0:	cinc	x2, x2, cs  // cs = hs, nlast
   393d4:	subs	x0, x3, x2
   393d8:	cmp	x3, x2
   393dc:	lsr	x3, x2, #30
   393e0:	lsl	x2, x2, #34
   393e4:	sbc	x3, x3, xzr
   393e8:	adds	x0, x0, x2
   393ec:	cinc	x3, x3, cs  // cs = hs, nlast
   393f0:	sub	x2, x0, x11
   393f4:	cmp	x3, #0x0
   393f8:	ccmp	x11, x0, #0x0, eq  // eq = none
   393fc:	csel	x0, x2, x0, ls  // ls = plast
   39400:	cmp	w4, #0x1
   39404:	mov	x2, #0x1                   	// #1
   39408:	b.eq	39478 <PyInit__decimal@@Base+0x1eef8>  // b.none
   3940c:	mov	w4, w2
   39410:	cmp	x2, #0x1
   39414:	mul	x9, x0, x0
   39418:	umulh	x2, x0, x0
   3941c:	b.eq	39320 <PyInit__decimal@@Base+0x1eda0>  // b.none
   39420:	cbnz	x6, 394c4 <PyInit__decimal@@Base+0x1ef44>
   39424:	sub	x8, x9, x2
   39428:	cbnz	x5, 3939c <PyInit__decimal@@Base+0x1ee1c>
   3942c:	cmp	x8, x9
   39430:	lsr	x3, x2, #24
   39434:	cset	x0, hi  // hi = pmore
   39438:	lsl	x2, x2, #40
   3943c:	adds	x2, x2, x8
   39440:	sub	x3, x3, x0
   39444:	cinc	x3, x3, cs  // cs = hs, nlast
   39448:	subs	x0, x2, x3
   3944c:	cmp	x2, x3
   39450:	lsr	x2, x3, #24
   39454:	lsl	x3, x3, #40
   39458:	sbc	x2, x2, xzr
   3945c:	adds	x3, x0, x3
   39460:	cinc	x2, x2, cs  // cs = hs, nlast
   39464:	subs	x0, x3, x2
   39468:	cmp	x3, x2
   3946c:	lsr	x3, x2, #24
   39470:	lsl	x2, x2, #40
   39474:	b	393e4 <PyInit__decimal@@Base+0x1ee64>
   39478:	str	x1, [x12, #16]
   3947c:	ldp	x29, x30, [sp], #16
   39480:	ret
   39484:	lsr	x3, x1, #32
   39488:	lsl	x1, x1, #32
   3948c:	adds	x1, x1, x0
   39490:	sub	x3, x3, x8
   39494:	cinc	x3, x3, cs  // cs = hs, nlast
   39498:	subs	x0, x1, x3
   3949c:	cmp	x1, x3
   394a0:	lsr	x7, x3, #32
   394a4:	lsl	x3, x3, #32
   394a8:	sbc	x7, x7, xzr
   394ac:	adds	x3, x0, x3
   394b0:	cinc	x7, x7, cs  // cs = hs, nlast
   394b4:	sub	x1, x3, x11
   394b8:	cmp	x7, #0x0
   394bc:	ccmp	x11, x3, #0x0, eq  // eq = none
   394c0:	csel	x1, x1, x3, ls  // ls = plast
   394c4:	subs	x0, x9, x2
   394c8:	lsr	x3, x2, #32
   394cc:	cmp	x9, x2
   394d0:	lsl	x2, x2, #32
   394d4:	sbc	x3, x3, xzr
   394d8:	adds	x2, x0, x2
   394dc:	cinc	x3, x3, cs  // cs = hs, nlast
   394e0:	subs	x0, x2, x3
   394e4:	cmp	x2, x3
   394e8:	lsr	x7, x3, #32
   394ec:	lsl	x3, x3, #32
   394f0:	sbc	x7, x7, xzr
   394f4:	adds	x3, x0, x3
   394f8:	cinc	x7, x7, cs  // cs = hs, nlast
   394fc:	sub	x2, x3, x11
   39500:	cmp	x7, #0x0
   39504:	ccmp	x11, x3, #0x0, eq  // eq = none
   39508:	csel	x0, x2, x3, ls  // ls = plast
   3950c:	b	39400 <PyInit__decimal@@Base+0x1ee80>
   39510:	lsr	x7, x1, #24
   39514:	lsl	x1, x1, #40
   39518:	adds	x1, x1, x0
   3951c:	sub	x7, x7, x8
   39520:	cinc	x7, x7, cs  // cs = hs, nlast
   39524:	sub	x8, x9, x2
   39528:	subs	x0, x1, x7
   3952c:	cmp	x1, x7
   39530:	lsr	x3, x7, #24
   39534:	lsl	x7, x7, #40
   39538:	sbc	x3, x3, xzr
   3953c:	adds	x7, x0, x7
   39540:	cinc	x3, x3, cs  // cs = hs, nlast
   39544:	subs	x1, x7, x3
   39548:	cmp	x7, x3
   3954c:	lsr	x7, x3, #24
   39550:	lsl	x3, x3, #40
   39554:	sbc	x7, x7, xzr
   39558:	adds	x3, x1, x3
   3955c:	cinc	x7, x7, cs  // cs = hs, nlast
   39560:	sub	x1, x3, x11
   39564:	cmp	x7, #0x0
   39568:	ccmp	x11, x3, #0x0, eq  // eq = none
   3956c:	csel	x1, x1, x3, ls  // ls = plast
   39570:	b	3942c <PyInit__decimal@@Base+0x1eeac>
   39574:	nop
   39578:	stp	x29, x30, [sp, #-112]!
   3957c:	cmp	xzr, x1, lsr #32
   39580:	mov	x29, sp
   39584:	stp	x19, x20, [sp, #16]
   39588:	mov	x19, x0
   3958c:	stp	x21, x22, [sp, #32]
   39590:	stp	x23, x24, [sp, #48]
   39594:	mov	w24, w2
   39598:	stp	x25, x26, [sp, #64]
   3959c:	mov	x26, x1
   395a0:	stp	x27, x28, [sp, #80]
   395a4:	b.eq	39664 <PyInit__decimal@@Base+0x1f0e4>  // b.none
   395a8:	lsr	x0, x1, #32
   395ac:	mov	w28, #0x20                  	// #32
   395b0:	cmp	xzr, x0, lsr #16
   395b4:	lsr	x1, x0, #16
   395b8:	b.eq	395c4 <PyInit__decimal@@Base+0x1f044>  // b.none
   395bc:	add	w28, w28, #0x10
   395c0:	mov	x0, x1
   395c4:	cmp	xzr, x0, lsr #8
   395c8:	lsr	x1, x0, #8
   395cc:	b.eq	395d8 <PyInit__decimal@@Base+0x1f058>  // b.none
   395d0:	add	w28, w28, #0x8
   395d4:	mov	x0, x1
   395d8:	cmp	xzr, x0, lsr #4
   395dc:	lsr	x1, x0, #4
   395e0:	b.eq	395ec <PyInit__decimal@@Base+0x1f06c>  // b.none
   395e4:	add	w28, w28, #0x4
   395e8:	mov	x0, x1
   395ec:	cmp	xzr, x0, lsr #2
   395f0:	lsr	x1, x0, #2
   395f4:	b.eq	39600 <PyInit__decimal@@Base+0x1f080>  // b.none
   395f8:	add	w28, w28, #0x2
   395fc:	mov	x0, x1
   39600:	sub	w1, w28, #0x1
   39604:	cmp	xzr, x0, lsr #1
   39608:	add	w0, w1, w0
   3960c:	mov	x27, #0x1                   	// #1
   39610:	csinc	w28, w0, w28, eq  // eq = none
   39614:	mov	x0, x19
   39618:	sxtw	x21, w28
   3961c:	lsr	x21, x21, #1
   39620:	str	w21, [sp, #108]
   39624:	sub	w28, w28, w21
   39628:	lsl	x22, x27, x21
   3962c:	mov	x2, x22
   39630:	lsl	x27, x27, x28
   39634:	mov	x1, x27
   39638:	bl	3b0e8 <PyInit__decimal@@Base+0x20b68>
   3963c:	cbnz	w0, 39670 <PyInit__decimal@@Base+0x1f0f0>
   39640:	mov	w28, #0x0                   	// #0
   39644:	mov	w0, w28
   39648:	ldp	x19, x20, [sp, #16]
   3964c:	ldp	x21, x22, [sp, #32]
   39650:	ldp	x23, x24, [sp, #48]
   39654:	ldp	x25, x26, [sp, #64]
   39658:	ldp	x27, x28, [sp, #80]
   3965c:	ldp	x29, x30, [sp], #112
   39660:	ret
   39664:	mov	x0, x1
   39668:	mov	w28, #0x0                   	// #0
   3966c:	b	395b0 <PyInit__decimal@@Base+0x1f030>
   39670:	mov	w2, w24
   39674:	mov	x0, x27
   39678:	mov	w1, #0xffffffff            	// #-1
   3967c:	bl	39120 <PyInit__decimal@@Base+0x1eba0>
   39680:	mov	x20, x0
   39684:	cbz	x0, 39640 <PyInit__decimal@@Base+0x1f0c0>
   39688:	add	x23, x19, x26, lsl #3
   3968c:	cmp	x19, x23
   39690:	b.cs	396bc <PyInit__decimal@@Base+0x1f13c>  // b.hs, b.nlast
   39694:	mov	x0, #0x8                   	// #8
   39698:	mov	x25, x19
   3969c:	lsl	x28, x0, x28
   396a0:	mov	x0, x25
   396a4:	mov	x2, x20
   396a8:	mov	x1, x27
   396ac:	add	x25, x25, x28
   396b0:	bl	1f0a8 <PyInit__decimal@@Base+0x4b28>
   396b4:	cmp	x25, x23
   396b8:	b.cc	396a0 <PyInit__decimal@@Base+0x1f120>  // b.lo, b.ul, b.last
   396bc:	mov	x2, x27
   396c0:	mov	x1, x22
   396c4:	mov	x0, x19
   396c8:	bl	3b0e8 <PyInit__decimal@@Base+0x20b68>
   396cc:	mov	w28, w0
   396d0:	cbnz	w0, 39704 <PyInit__decimal@@Base+0x1f184>
   396d4:	adrp	x1, 5f000 <PyInit__decimal@@Base+0x44a80>
   396d8:	mov	x0, x20
   396dc:	ldr	x1, [x1, #1704]
   396e0:	blr	x1
   396e4:	mov	w0, w28
   396e8:	ldp	x19, x20, [sp, #16]
   396ec:	ldp	x21, x22, [sp, #32]
   396f0:	ldp	x23, x24, [sp, #48]
   396f4:	ldp	x25, x26, [sp, #64]
   396f8:	ldp	x27, x28, [sp, #80]
   396fc:	ldp	x29, x30, [sp], #112
   39700:	ret
   39704:	adrp	x3, 42000 <PyInit__decimal@@Base+0x27a80>
   39708:	add	x3, x3, #0x5a8
   3970c:	mov	x0, x26
   39710:	mov	w2, w24
   39714:	mov	w1, #0xffffffff            	// #-1
   39718:	ldr	x26, [x3, w24, sxtw #3]
   3971c:	bl	38c40 <PyInit__decimal@@Base+0x1e6c0>
   39720:	cmp	x27, #0x1
   39724:	b.ls	39ea8 <PyInit__decimal@@Base+0x1f928>  // b.plast
   39728:	sub	x6, x22, #0x1
   3972c:	and	x3, x26, #0x100000000
   39730:	and	x6, x6, #0xfffffffffffffffe
   39734:	and	x4, x26, #0x400000000
   39738:	add	x7, x19, #0x10
   3973c:	mov	x5, #0x1                   	// #1
   39740:	mov	x1, x0
   39744:	mov	x9, x5
   39748:	mov	x2, #0x1                   	// #1
   3974c:	b	3983c <PyInit__decimal@@Base+0x1f2bc>
   39750:	mul	x12, x2, x1
   39754:	umulh	x2, x2, x1
   39758:	subs	x1, x12, x2
   3975c:	cbnz	x3, 39c60 <PyInit__decimal@@Base+0x1f6e0>
   39760:	cmp	x12, x2
   39764:	cset	x12, cc  // cc = lo, ul, last
   39768:	cbz	x4, 39ca8 <PyInit__decimal@@Base+0x1f728>
   3976c:	lsr	x10, x2, #30
   39770:	lsl	x2, x2, #34
   39774:	adds	x1, x2, x1
   39778:	sub	x10, x10, x12
   3977c:	cinc	x10, x10, cs  // cs = hs, nlast
   39780:	subs	x2, x1, x10
   39784:	cmp	x1, x10
   39788:	lsr	x1, x10, #30
   3978c:	lsl	x10, x10, #34
   39790:	sbc	x1, x1, xzr
   39794:	adds	x10, x2, x10
   39798:	cinc	x1, x1, cs  // cs = hs, nlast
   3979c:	subs	x2, x10, x1
   397a0:	cmp	x10, x1
   397a4:	lsr	x10, x1, #30
   397a8:	lsl	x1, x1, #34
   397ac:	sbc	x10, x10, xzr
   397b0:	adds	x1, x2, x1
   397b4:	cinc	x10, x10, cs  // cs = hs, nlast
   397b8:	sub	x2, x1, x26
   397bc:	cmp	x10, #0x0
   397c0:	ccmp	x26, x1, #0x0, eq  // eq = none
   397c4:	csel	x2, x2, x1, ls  // ls = plast
   397c8:	subs	x10, x11, x8
   397cc:	cmp	x11, x8
   397d0:	cset	x11, cc  // cc = lo, ul, last
   397d4:	cbz	x4, 39c1c <PyInit__decimal@@Base+0x1f69c>
   397d8:	lsr	x1, x8, #30
   397dc:	lsl	x8, x8, #34
   397e0:	adds	x8, x8, x10
   397e4:	sub	x1, x1, x11
   397e8:	cinc	x1, x1, cs  // cs = hs, nlast
   397ec:	subs	x10, x8, x1
   397f0:	cmp	x8, x1
   397f4:	lsr	x8, x1, #30
   397f8:	lsl	x1, x1, #34
   397fc:	sbc	x8, x8, xzr
   39800:	adds	x10, x10, x1
   39804:	cinc	x8, x8, cs  // cs = hs, nlast
   39808:	subs	x1, x10, x8
   3980c:	cmp	x10, x8
   39810:	lsr	x10, x8, #30
   39814:	lsl	x8, x8, #34
   39818:	sbc	x10, x10, xzr
   3981c:	adds	x8, x1, x8
   39820:	cinc	x10, x10, cs  // cs = hs, nlast
   39824:	sub	x1, x8, x26
   39828:	cmp	x10, #0x0
   3982c:	lsr	x9, x9, #1
   39830:	ccmp	x26, x8, #0x0, eq  // eq = none
   39834:	csel	x1, x1, x8, ls  // ls = plast
   39838:	cbz	x9, 3989c <PyInit__decimal@@Base+0x1f31c>
   3983c:	mul	x11, x1, x1
   39840:	umulh	x8, x1, x1
   39844:	tbnz	w9, #0, 39750 <PyInit__decimal@@Base+0x1f1d0>
   39848:	cbz	x3, 397c8 <PyInit__decimal@@Base+0x1f248>
   3984c:	subs	x1, x11, x8
   39850:	lsr	x10, x8, #32
   39854:	cmp	x11, x8
   39858:	lsl	x8, x8, #32
   3985c:	sbc	x10, x10, xzr
   39860:	adds	x8, x1, x8
   39864:	cinc	x10, x10, cs  // cs = hs, nlast
   39868:	lsr	x9, x9, #1
   3986c:	subs	x1, x8, x10
   39870:	cmp	x8, x10
   39874:	lsr	x8, x10, #32
   39878:	lsl	x10, x10, #32
   3987c:	sbc	x8, x8, xzr
   39880:	adds	x10, x1, x10
   39884:	cinc	x8, x8, cs  // cs = hs, nlast
   39888:	sub	x1, x10, x26
   3988c:	cmp	x8, #0x0
   39890:	ccmp	x26, x10, #0x0, eq  // eq = none
   39894:	csel	x1, x1, x10, ls  // ls = plast
   39898:	cbnz	x9, 3983c <PyInit__decimal@@Base+0x1f2bc>
   3989c:	mul	x8, x2, x2
   398a0:	umulh	x1, x2, x2
   398a4:	subs	x9, x8, x1
   398a8:	cmp	x8, x1
   398ac:	cset	x10, cc  // cc = lo, ul, last
   398b0:	cbnz	x3, 39f34 <PyInit__decimal@@Base+0x1f9b4>
   398b4:	cbz	x4, 39f78 <PyInit__decimal@@Base+0x1f9f8>
   398b8:	lsr	x8, x1, #30
   398bc:	lsl	x1, x1, #34
   398c0:	adds	x1, x1, x9
   398c4:	sub	x8, x8, x10
   398c8:	cinc	x8, x8, cs  // cs = hs, nlast
   398cc:	subs	x9, x1, x8
   398d0:	cmp	x1, x8
   398d4:	lsr	x1, x8, #30
   398d8:	lsl	x8, x8, #34
   398dc:	sbc	x1, x1, xzr
   398e0:	adds	x8, x9, x8
   398e4:	cinc	x1, x1, cs  // cs = hs, nlast
   398e8:	subs	x11, x8, x1
   398ec:	cmp	x8, x1
   398f0:	lsr	x8, x1, #30
   398f4:	lsl	x1, x1, #34
   398f8:	sbc	x8, x8, xzr
   398fc:	adds	x1, x11, x1
   39900:	cinc	x8, x8, cs  // cs = hs, nlast
   39904:	sub	x11, x1, x26
   39908:	cmp	x8, #0x0
   3990c:	ccmp	x26, x1, #0x0, eq  // eq = none
   39910:	csel	x11, x11, x1, ls  // ls = plast
   39914:	cbz	x22, 39e9c <PyInit__decimal@@Base+0x1f91c>
   39918:	ldrb	w1, [sp, #108]
   3991c:	mov	x8, #0x1                   	// #1
   39920:	lsl	x10, x5, x1
   39924:	add	x12, x10, x6
   39928:	add	x10, x19, x10, lsl #3
   3992c:	add	x12, x7, x12, lsl #3
   39930:	b	39ae8 <PyInit__decimal@@Base+0x1f568>
   39934:	cbz	x4, 39cec <PyInit__decimal@@Base+0x1f76c>
   39938:	lsr	x13, x1, #30
   3993c:	lsl	x1, x1, #34
   39940:	adds	x1, x1, x14
   39944:	sub	x13, x13, x15
   39948:	cinc	x13, x13, cs  // cs = hs, nlast
   3994c:	mul	x14, x2, x9
   39950:	subs	x15, x1, x13
   39954:	umulh	x9, x2, x9
   39958:	cmp	x1, x13
   3995c:	lsr	x16, x13, #30
   39960:	lsl	x13, x13, #34
   39964:	sbc	x16, x16, xzr
   39968:	adds	x13, x15, x13
   3996c:	lsr	x1, x9, #30
   39970:	cinc	x16, x16, cs  // cs = hs, nlast
   39974:	lsl	x15, x9, #34
   39978:	subs	x28, x13, x16
   3997c:	mul	x18, x8, x11
   39980:	cmp	x13, x16
   39984:	lsr	x17, x16, #30
   39988:	lsl	x16, x16, #34
   3998c:	sbc	x17, x17, xzr
   39990:	adds	x16, x28, x16
   39994:	umulh	x8, x8, x11
   39998:	cinc	x17, x17, cs  // cs = hs, nlast
   3999c:	sub	x13, x16, x26
   399a0:	cmp	x17, #0x0
   399a4:	mul	x17, x2, x11
   399a8:	ccmp	x26, x16, #0x0, eq  // eq = none
   399ac:	lsl	x30, x8, #34
   399b0:	csel	x13, x13, x16, ls  // ls = plast
   399b4:	subs	x16, x14, x9
   399b8:	cmp	x14, x9
   399bc:	lsr	x14, x8, #30
   399c0:	sbc	x1, x1, xzr
   399c4:	adds	x15, x16, x15
   399c8:	cinc	x1, x1, cs  // cs = hs, nlast
   399cc:	umulh	x2, x2, x11
   399d0:	subs	x28, x15, x1
   399d4:	cmp	x15, x1
   399d8:	lsr	x16, x1, #30
   399dc:	lsl	x1, x1, #34
   399e0:	sbc	x16, x16, xzr
   399e4:	adds	x1, x28, x1
   399e8:	lsr	x9, x2, #30
   399ec:	cinc	x16, x16, cs  // cs = hs, nlast
   399f0:	lsl	x28, x2, #34
   399f4:	subs	x15, x1, x16
   399f8:	cmp	x1, x16
   399fc:	lsr	x1, x16, #30
   39a00:	lsl	x16, x16, #34
   39a04:	sbc	x1, x1, xzr
   39a08:	adds	x16, x15, x16
   39a0c:	cinc	x1, x1, cs  // cs = hs, nlast
   39a10:	sub	x15, x16, x26
   39a14:	cmp	x1, #0x0
   39a18:	ccmp	x26, x16, #0x0, eq  // eq = none
   39a1c:	csel	x15, x15, x16, ls  // ls = plast
   39a20:	subs	x1, x18, x8
   39a24:	cmp	x18, x8
   39a28:	sbc	x14, x14, xzr
   39a2c:	adds	x30, x1, x30
   39a30:	cinc	x14, x14, cs  // cs = hs, nlast
   39a34:	subs	x8, x30, x14
   39a38:	cmp	x30, x14
   39a3c:	lsr	x1, x14, #30
   39a40:	lsl	x14, x14, #34
   39a44:	sbc	x1, x1, xzr
   39a48:	adds	x14, x8, x14
   39a4c:	cinc	x1, x1, cs  // cs = hs, nlast
   39a50:	subs	x8, x14, x1
   39a54:	cmp	x14, x1
   39a58:	lsr	x14, x1, #30
   39a5c:	lsl	x1, x1, #34
   39a60:	sbc	x14, x14, xzr
   39a64:	adds	x1, x8, x1
   39a68:	cinc	x14, x14, cs  // cs = hs, nlast
   39a6c:	sub	x8, x1, x26
   39a70:	cmp	x14, #0x0
   39a74:	ccmp	x26, x1, #0x0, eq  // eq = none
   39a78:	csel	x8, x8, x1, ls  // ls = plast
   39a7c:	subs	x1, x17, x2
   39a80:	cmp	x17, x2
   39a84:	sbc	x9, x9, xzr
   39a88:	adds	x28, x1, x28
   39a8c:	cinc	x9, x9, cs  // cs = hs, nlast
   39a90:	subs	x2, x28, x9
   39a94:	cmp	x28, x9
   39a98:	lsr	x1, x9, #30
   39a9c:	lsl	x9, x9, #34
   39aa0:	sbc	x1, x1, xzr
   39aa4:	adds	x9, x2, x9
   39aa8:	cinc	x1, x1, cs  // cs = hs, nlast
   39aac:	subs	x2, x9, x1
   39ab0:	cmp	x9, x1
   39ab4:	lsr	x9, x1, #30
   39ab8:	lsl	x1, x1, #34
   39abc:	sbc	x9, x9, xzr
   39ac0:	adds	x1, x2, x1
   39ac4:	cinc	x9, x9, cs  // cs = hs, nlast
   39ac8:	stp	x13, x15, [x10]
   39acc:	cmp	x9, #0x0
   39ad0:	ccmp	x26, x1, #0x0, eq  // eq = none
   39ad4:	sub	x2, x1, x26
   39ad8:	add	x10, x10, #0x10
   39adc:	csel	x2, x2, x1, ls  // ls = plast
   39ae0:	cmp	x10, x12
   39ae4:	b.eq	39e9c <PyInit__decimal@@Base+0x1f91c>  // b.none
   39ae8:	ldp	x1, x9, [x10]
   39aec:	mul	x13, x8, x1
   39af0:	umulh	x1, x8, x1
   39af4:	subs	x14, x13, x1
   39af8:	cmp	x13, x1
   39afc:	cset	x15, cc  // cc = lo, ul, last
   39b00:	cbz	x3, 39934 <PyInit__decimal@@Base+0x1f3b4>
   39b04:	lsr	x13, x1, #32
   39b08:	lsl	x1, x1, #32
   39b0c:	adds	x1, x1, x14
   39b10:	sub	x13, x13, x15
   39b14:	cinc	x13, x13, cs  // cs = hs, nlast
   39b18:	mul	x14, x9, x2
   39b1c:	subs	x15, x1, x13
   39b20:	umulh	x9, x9, x2
   39b24:	cmp	x1, x13
   39b28:	lsr	x16, x13, #32
   39b2c:	lsl	x13, x13, #32
   39b30:	sbc	x16, x16, xzr
   39b34:	adds	x13, x15, x13
   39b38:	lsr	x1, x9, #32
   39b3c:	cinc	x16, x16, cs  // cs = hs, nlast
   39b40:	sub	x17, x13, x26
   39b44:	cmp	x16, #0x0
   39b48:	lsl	x15, x9, #32
   39b4c:	ccmp	x26, x13, #0x0, eq  // eq = none
   39b50:	mul	x16, x8, x11
   39b54:	csel	x13, x17, x13, ls  // ls = plast
   39b58:	subs	x17, x14, x9
   39b5c:	cmp	x14, x9
   39b60:	umulh	x8, x8, x11
   39b64:	sbc	x1, x1, xzr
   39b68:	adds	x17, x17, x15
   39b6c:	cinc	x1, x1, cs  // cs = hs, nlast
   39b70:	mul	x14, x11, x2
   39b74:	subs	x15, x17, x1
   39b78:	lsr	x9, x8, #32
   39b7c:	cmp	x17, x1
   39b80:	lsr	x17, x1, #32
   39b84:	lsl	x1, x1, #32
   39b88:	sbc	x17, x17, xzr
   39b8c:	adds	x1, x15, x1
   39b90:	lsl	x18, x8, #32
   39b94:	cinc	x17, x17, cs  // cs = hs, nlast
   39b98:	sub	x15, x1, x26
   39b9c:	cmp	x17, #0x0
   39ba0:	umulh	x2, x11, x2
   39ba4:	ccmp	x26, x1, #0x0, eq  // eq = none
   39ba8:	csel	x15, x15, x1, ls  // ls = plast
   39bac:	subs	x17, x16, x8
   39bb0:	cmp	x16, x8
   39bb4:	lsr	x1, x2, #32
   39bb8:	sbc	x9, x9, xzr
   39bbc:	adds	x17, x17, x18
   39bc0:	cinc	x9, x9, cs  // cs = hs, nlast
   39bc4:	lsl	x16, x2, #32
   39bc8:	subs	x8, x17, x9
   39bcc:	cmp	x17, x9
   39bd0:	lsr	x17, x9, #32
   39bd4:	lsl	x9, x9, #32
   39bd8:	sbc	x17, x17, xzr
   39bdc:	adds	x9, x8, x9
   39be0:	cinc	x17, x17, cs  // cs = hs, nlast
   39be4:	sub	x8, x9, x26
   39be8:	cmp	x17, #0x0
   39bec:	ccmp	x26, x9, #0x0, eq  // eq = none
   39bf0:	csel	x8, x8, x9, ls  // ls = plast
   39bf4:	subs	x9, x14, x2
   39bf8:	cmp	x14, x2
   39bfc:	sbc	x1, x1, xzr
   39c00:	adds	x9, x9, x16
   39c04:	cinc	x1, x1, cs  // cs = hs, nlast
   39c08:	subs	x2, x9, x1
   39c0c:	cmp	x9, x1
   39c10:	lsr	x9, x1, #32
   39c14:	lsl	x1, x1, #32
   39c18:	b	39abc <PyInit__decimal@@Base+0x1f53c>
   39c1c:	lsr	x1, x8, #24
   39c20:	lsl	x8, x8, #40
   39c24:	adds	x8, x8, x10
   39c28:	sub	x1, x1, x11
   39c2c:	cinc	x1, x1, cs  // cs = hs, nlast
   39c30:	subs	x10, x8, x1
   39c34:	cmp	x8, x1
   39c38:	lsr	x8, x1, #24
   39c3c:	lsl	x1, x1, #40
   39c40:	sbc	x8, x8, xzr
   39c44:	adds	x10, x10, x1
   39c48:	cinc	x8, x8, cs  // cs = hs, nlast
   39c4c:	subs	x1, x10, x8
   39c50:	cmp	x10, x8
   39c54:	lsr	x10, x8, #24
   39c58:	lsl	x8, x8, #40
   39c5c:	b	39818 <PyInit__decimal@@Base+0x1f298>
   39c60:	cmp	x12, x2
   39c64:	lsr	x10, x2, #32
   39c68:	lsl	x2, x2, #32
   39c6c:	sbc	x10, x10, xzr
   39c70:	adds	x1, x1, x2
   39c74:	cinc	x10, x10, cs  // cs = hs, nlast
   39c78:	subs	x2, x1, x10
   39c7c:	cmp	x1, x10
   39c80:	lsr	x1, x10, #32
   39c84:	lsl	x10, x10, #32
   39c88:	sbc	x1, x1, xzr
   39c8c:	adds	x10, x2, x10
   39c90:	cinc	x1, x1, cs  // cs = hs, nlast
   39c94:	sub	x2, x10, x26
   39c98:	cmp	x1, #0x0
   39c9c:	ccmp	x26, x10, #0x0, eq  // eq = none
   39ca0:	csel	x2, x2, x10, ls  // ls = plast
   39ca4:	b	3984c <PyInit__decimal@@Base+0x1f2cc>
   39ca8:	lsr	x10, x2, #24
   39cac:	lsl	x2, x2, #40
   39cb0:	adds	x1, x2, x1
   39cb4:	sub	x10, x10, x12
   39cb8:	cinc	x10, x10, cs  // cs = hs, nlast
   39cbc:	subs	x2, x1, x10
   39cc0:	cmp	x1, x10
   39cc4:	lsr	x1, x10, #24
   39cc8:	lsl	x10, x10, #40
   39ccc:	sbc	x1, x1, xzr
   39cd0:	adds	x10, x2, x10
   39cd4:	cinc	x1, x1, cs  // cs = hs, nlast
   39cd8:	subs	x2, x10, x1
   39cdc:	cmp	x10, x1
   39ce0:	lsr	x10, x1, #24
   39ce4:	lsl	x1, x1, #40
   39ce8:	b	397ac <PyInit__decimal@@Base+0x1f22c>
   39cec:	lsr	x13, x1, #24
   39cf0:	lsl	x1, x1, #40
   39cf4:	adds	x1, x1, x14
   39cf8:	sub	x13, x13, x15
   39cfc:	cinc	x13, x13, cs  // cs = hs, nlast
   39d00:	mul	x14, x9, x2
   39d04:	subs	x15, x1, x13
   39d08:	umulh	x9, x9, x2
   39d0c:	cmp	x1, x13
   39d10:	lsr	x16, x13, #24
   39d14:	lsl	x13, x13, #40
   39d18:	sbc	x16, x16, xzr
   39d1c:	adds	x13, x15, x13
   39d20:	lsr	x1, x9, #24
   39d24:	cinc	x16, x16, cs  // cs = hs, nlast
   39d28:	lsl	x15, x9, #40
   39d2c:	subs	x28, x13, x16
   39d30:	mul	x18, x11, x8
   39d34:	cmp	x13, x16
   39d38:	lsr	x17, x16, #24
   39d3c:	lsl	x16, x16, #40
   39d40:	sbc	x17, x17, xzr
   39d44:	adds	x16, x28, x16
   39d48:	umulh	x8, x11, x8
   39d4c:	cinc	x17, x17, cs  // cs = hs, nlast
   39d50:	sub	x13, x16, x26
   39d54:	cmp	x17, #0x0
   39d58:	mul	x17, x11, x2
   39d5c:	ccmp	x26, x16, #0x0, eq  // eq = none
   39d60:	lsl	x28, x8, #40
   39d64:	csel	x13, x13, x16, ls  // ls = plast
   39d68:	subs	x16, x14, x9
   39d6c:	cmp	x14, x9
   39d70:	lsr	x9, x8, #24
   39d74:	sbc	x1, x1, xzr
   39d78:	adds	x15, x16, x15
   39d7c:	cinc	x1, x1, cs  // cs = hs, nlast
   39d80:	umulh	x2, x11, x2
   39d84:	subs	x30, x15, x1
   39d88:	cmp	x15, x1
   39d8c:	lsr	x16, x1, #24
   39d90:	lsl	x1, x1, #40
   39d94:	sbc	x16, x16, xzr
   39d98:	adds	x1, x30, x1
   39d9c:	lsr	x14, x2, #24
   39da0:	cinc	x16, x16, cs  // cs = hs, nlast
   39da4:	lsl	x30, x2, #40
   39da8:	subs	x15, x1, x16
   39dac:	cmp	x1, x16
   39db0:	lsr	x1, x16, #24
   39db4:	lsl	x16, x16, #40
   39db8:	sbc	x1, x1, xzr
   39dbc:	adds	x16, x15, x16
   39dc0:	cinc	x1, x1, cs  // cs = hs, nlast
   39dc4:	sub	x15, x16, x26
   39dc8:	cmp	x1, #0x0
   39dcc:	ccmp	x26, x16, #0x0, eq  // eq = none
   39dd0:	csel	x15, x15, x16, ls  // ls = plast
   39dd4:	subs	x1, x18, x8
   39dd8:	cmp	x18, x8
   39ddc:	stp	x13, x15, [x10]
   39de0:	sbc	x9, x9, xzr
   39de4:	adds	x28, x1, x28
   39de8:	add	x10, x10, #0x10
   39dec:	cinc	x9, x9, cs  // cs = hs, nlast
   39df0:	subs	x8, x28, x9
   39df4:	cmp	x28, x9
   39df8:	lsr	x1, x9, #24
   39dfc:	lsl	x9, x9, #40
   39e00:	sbc	x1, x1, xzr
   39e04:	adds	x9, x8, x9
   39e08:	cinc	x1, x1, cs  // cs = hs, nlast
   39e0c:	subs	x8, x9, x1
   39e10:	cmp	x9, x1
   39e14:	lsr	x9, x1, #24
   39e18:	lsl	x1, x1, #40
   39e1c:	sbc	x9, x9, xzr
   39e20:	adds	x1, x8, x1
   39e24:	cinc	x9, x9, cs  // cs = hs, nlast
   39e28:	sub	x8, x1, x26
   39e2c:	cmp	x9, #0x0
   39e30:	ccmp	x26, x1, #0x0, eq  // eq = none
   39e34:	csel	x8, x8, x1, ls  // ls = plast
   39e38:	subs	x1, x17, x2
   39e3c:	cmp	x17, x2
   39e40:	sbc	x14, x14, xzr
   39e44:	adds	x30, x1, x30
   39e48:	cinc	x14, x14, cs  // cs = hs, nlast
   39e4c:	subs	x1, x30, x14
   39e50:	cmp	x30, x14
   39e54:	lsr	x9, x14, #24
   39e58:	lsl	x14, x14, #40
   39e5c:	sbc	x9, x9, xzr
   39e60:	adds	x14, x1, x14
   39e64:	cinc	x9, x9, cs  // cs = hs, nlast
   39e68:	subs	x2, x14, x9
   39e6c:	cmp	x14, x9
   39e70:	lsr	x1, x9, #24
   39e74:	lsl	x9, x9, #40
   39e78:	sbc	x1, x1, xzr
   39e7c:	adds	x9, x2, x9
   39e80:	cinc	x1, x1, cs  // cs = hs, nlast
   39e84:	sub	x2, x9, x26
   39e88:	cmp	x1, #0x0
   39e8c:	ccmp	x26, x9, #0x0, eq  // eq = none
   39e90:	csel	x2, x2, x9, ls  // ls = plast
   39e94:	cmp	x10, x12
   39e98:	b.ne	39ae8 <PyInit__decimal@@Base+0x1f568>  // b.any
   39e9c:	add	x5, x5, #0x1
   39ea0:	cmp	x27, x5
   39ea4:	b.ne	39740 <PyInit__decimal@@Base+0x1f1c0>  // b.any
   39ea8:	cmp	x22, x27
   39eac:	adrp	x25, 5f000 <PyInit__decimal@@Base+0x44a80>
   39eb0:	b.eq	39ed8 <PyInit__decimal@@Base+0x1f958>  // b.none
   39eb4:	ldr	x1, [x25, #1704]
   39eb8:	mov	x0, x20
   39ebc:	blr	x1
   39ec0:	mov	w2, w24
   39ec4:	mov	x0, x22
   39ec8:	mov	w1, #0xffffffff            	// #-1
   39ecc:	bl	39120 <PyInit__decimal@@Base+0x1eba0>
   39ed0:	mov	x20, x0
   39ed4:	cbz	x0, 39640 <PyInit__decimal@@Base+0x1f0c0>
   39ed8:	mov	x0, #0x8                   	// #8
   39edc:	cmp	x19, x23
   39ee0:	lsl	x21, x0, x21
   39ee4:	b.cs	39f04 <PyInit__decimal@@Base+0x1f984>  // b.hs, b.nlast
   39ee8:	mov	x0, x19
   39eec:	mov	x2, x20
   39ef0:	mov	x1, x22
   39ef4:	add	x19, x19, x21
   39ef8:	bl	1f0a8 <PyInit__decimal@@Base+0x4b28>
   39efc:	cmp	x19, x23
   39f00:	b.cc	39ee8 <PyInit__decimal@@Base+0x1f968>  // b.lo, b.ul, b.last
   39f04:	ldr	x1, [x25, #1704]
   39f08:	mov	x0, x20
   39f0c:	mov	w28, #0x1                   	// #1
   39f10:	blr	x1
   39f14:	mov	w0, w28
   39f18:	ldp	x19, x20, [sp, #16]
   39f1c:	ldp	x21, x22, [sp, #32]
   39f20:	ldp	x23, x24, [sp, #48]
   39f24:	ldp	x25, x26, [sp, #64]
   39f28:	ldp	x27, x28, [sp, #80]
   39f2c:	ldp	x29, x30, [sp], #112
   39f30:	ret
   39f34:	lsr	x8, x1, #32
   39f38:	lsl	x1, x1, #32
   39f3c:	adds	x1, x1, x9
   39f40:	sub	x8, x8, x10
   39f44:	cinc	x8, x8, cs  // cs = hs, nlast
   39f48:	subs	x11, x1, x8
   39f4c:	cmp	x1, x8
   39f50:	lsr	x1, x8, #32
   39f54:	lsl	x8, x8, #32
   39f58:	sbc	x1, x1, xzr
   39f5c:	adds	x8, x11, x8
   39f60:	cinc	x1, x1, cs  // cs = hs, nlast
   39f64:	sub	x11, x8, x26
   39f68:	cmp	x1, #0x0
   39f6c:	ccmp	x26, x8, #0x0, eq  // eq = none
   39f70:	csel	x11, x11, x8, ls  // ls = plast
   39f74:	b	39914 <PyInit__decimal@@Base+0x1f394>
   39f78:	lsr	x8, x1, #24
   39f7c:	lsl	x1, x1, #40
   39f80:	adds	x1, x1, x9
   39f84:	sub	x8, x8, x10
   39f88:	cinc	x8, x8, cs  // cs = hs, nlast
   39f8c:	subs	x9, x1, x8
   39f90:	cmp	x1, x8
   39f94:	lsr	x1, x8, #24
   39f98:	lsl	x8, x8, #40
   39f9c:	sbc	x1, x1, xzr
   39fa0:	adds	x8, x9, x8
   39fa4:	cinc	x1, x1, cs  // cs = hs, nlast
   39fa8:	subs	x11, x8, x1
   39fac:	cmp	x8, x1
   39fb0:	lsr	x8, x1, #24
   39fb4:	lsl	x1, x1, #40
   39fb8:	b	398f8 <PyInit__decimal@@Base+0x1f378>
   39fbc:	nop
   39fc0:	stp	x29, x30, [sp, #-112]!
   39fc4:	cmp	xzr, x1, lsr #32
   39fc8:	mov	x29, sp
   39fcc:	stp	x19, x20, [sp, #16]
   39fd0:	stp	x21, x22, [sp, #32]
   39fd4:	mov	x22, x0
   39fd8:	stp	x23, x24, [sp, #48]
   39fdc:	stp	x25, x26, [sp, #64]
   39fe0:	mov	w26, w2
   39fe4:	stp	x27, x28, [sp, #80]
   39fe8:	mov	x28, x1
   39fec:	b.eq	3a9c0 <PyInit__decimal@@Base+0x20440>  // b.none
   39ff0:	lsr	x0, x1, #32
   39ff4:	mov	w1, #0x20                  	// #32
   39ff8:	cmp	xzr, x0, lsr #16
   39ffc:	lsr	x2, x0, #16
   3a000:	b.eq	3a00c <PyInit__decimal@@Base+0x1fa8c>  // b.none
   3a004:	add	w1, w1, #0x10
   3a008:	mov	x0, x2
   3a00c:	cmp	xzr, x0, lsr #8
   3a010:	lsr	x2, x0, #8
   3a014:	b.eq	3a020 <PyInit__decimal@@Base+0x1faa0>  // b.none
   3a018:	add	w1, w1, #0x8
   3a01c:	mov	x0, x2
   3a020:	cmp	xzr, x0, lsr #4
   3a024:	lsr	x2, x0, #4
   3a028:	b.eq	3a034 <PyInit__decimal@@Base+0x1fab4>  // b.none
   3a02c:	add	w1, w1, #0x4
   3a030:	mov	x0, x2
   3a034:	cmp	xzr, x0, lsr #2
   3a038:	lsr	x2, x0, #2
   3a03c:	b.eq	3a048 <PyInit__decimal@@Base+0x1fac8>  // b.none
   3a040:	add	w1, w1, #0x2
   3a044:	mov	x0, x2
   3a048:	sub	w24, w1, #0x1
   3a04c:	cmp	xzr, x0, lsr #1
   3a050:	add	w24, w24, w0
   3a054:	mov	x19, #0x1                   	// #1
   3a058:	csinc	w24, w24, w1, eq  // eq = none
   3a05c:	mov	w2, w26
   3a060:	mov	w1, w19
   3a064:	sxtw	x27, w24
   3a068:	lsr	x27, x27, #1
   3a06c:	sub	w0, w24, w27
   3a070:	mov	w25, w27
   3a074:	mov	w3, w0
   3a078:	lsl	x20, x19, x27
   3a07c:	mov	x0, x20
   3a080:	str	w3, [sp, #108]
   3a084:	lsl	x19, x19, x3
   3a088:	bl	39120 <PyInit__decimal@@Base+0x1eba0>
   3a08c:	mov	x21, x0
   3a090:	cbz	x0, 3a9fc <PyInit__decimal@@Base+0x2047c>
   3a094:	add	x23, x22, x28, lsl #3
   3a098:	cmp	x22, x23
   3a09c:	b.cs	3a0cc <PyInit__decimal@@Base+0x1fb4c>  // b.hs, b.nlast
   3a0a0:	mov	x0, #0x8                   	// #8
   3a0a4:	mov	x24, x22
   3a0a8:	lsl	x27, x0, x27
   3a0ac:	nop
   3a0b0:	mov	x0, x24
   3a0b4:	mov	x2, x21
   3a0b8:	mov	x1, x20
   3a0bc:	add	x24, x24, x27
   3a0c0:	bl	1f0a8 <PyInit__decimal@@Base+0x4b28>
   3a0c4:	cmp	x24, x23
   3a0c8:	b.cc	3a0b0 <PyInit__decimal@@Base+0x1fb30>  // b.lo, b.ul, b.last
   3a0cc:	adrp	x3, 42000 <PyInit__decimal@@Base+0x27a80>
   3a0d0:	add	x3, x3, #0x5a8
   3a0d4:	mov	x0, x28
   3a0d8:	mov	w2, w26
   3a0dc:	mov	w1, #0x1                   	// #1
   3a0e0:	ldr	x27, [x3, w26, sxtw #3]
   3a0e4:	bl	38c40 <PyInit__decimal@@Base+0x1e6c0>
   3a0e8:	str	x0, [sp, #96]
   3a0ec:	cmp	x19, #0x1
   3a0f0:	mov	x6, x0
   3a0f4:	b.ls	3a874 <PyInit__decimal@@Base+0x202f4>  // b.plast
   3a0f8:	sub	x5, x20, #0x1
   3a0fc:	and	x2, x27, #0x100000000
   3a100:	and	x5, x5, #0xfffffffffffffffe
   3a104:	and	x3, x27, #0x400000000
   3a108:	add	x7, x22, #0x10
   3a10c:	mov	x4, #0x1                   	// #1
   3a110:	mov	x1, x6
   3a114:	mov	x9, x4
   3a118:	mov	x0, #0x1                   	// #1
   3a11c:	b	3a20c <PyInit__decimal@@Base+0x1fc8c>
   3a120:	mul	x12, x0, x1
   3a124:	umulh	x0, x0, x1
   3a128:	subs	x1, x12, x0
   3a12c:	cbnz	x2, 3a62c <PyInit__decimal@@Base+0x200ac>
   3a130:	cmp	x12, x0
   3a134:	cset	x12, cc  // cc = lo, ul, last
   3a138:	cbz	x3, 3a674 <PyInit__decimal@@Base+0x200f4>
   3a13c:	lsr	x10, x0, #30
   3a140:	lsl	x0, x0, #34
   3a144:	adds	x0, x0, x1
   3a148:	sub	x10, x10, x12
   3a14c:	cinc	x10, x10, cs  // cs = hs, nlast
   3a150:	subs	x12, x0, x10
   3a154:	cmp	x0, x10
   3a158:	lsr	x1, x10, #30
   3a15c:	lsl	x10, x10, #34
   3a160:	sbc	x1, x1, xzr
   3a164:	adds	x10, x12, x10
   3a168:	cinc	x1, x1, cs  // cs = hs, nlast
   3a16c:	subs	x0, x10, x1
   3a170:	cmp	x10, x1
   3a174:	lsr	x10, x1, #30
   3a178:	lsl	x1, x1, #34
   3a17c:	sbc	x10, x10, xzr
   3a180:	adds	x1, x0, x1
   3a184:	cinc	x10, x10, cs  // cs = hs, nlast
   3a188:	sub	x0, x1, x27
   3a18c:	cmp	x10, #0x0
   3a190:	ccmp	x27, x1, #0x0, eq  // eq = none
   3a194:	csel	x0, x0, x1, ls  // ls = plast
   3a198:	subs	x10, x11, x8
   3a19c:	cmp	x11, x8
   3a1a0:	cset	x11, cc  // cc = lo, ul, last
   3a1a4:	cbz	x3, 3a5e8 <PyInit__decimal@@Base+0x20068>
   3a1a8:	lsr	x1, x8, #30
   3a1ac:	lsl	x8, x8, #34
   3a1b0:	adds	x8, x8, x10
   3a1b4:	sub	x1, x1, x11
   3a1b8:	cinc	x1, x1, cs  // cs = hs, nlast
   3a1bc:	subs	x10, x8, x1
   3a1c0:	cmp	x8, x1
   3a1c4:	lsr	x8, x1, #30
   3a1c8:	lsl	x1, x1, #34
   3a1cc:	sbc	x8, x8, xzr
   3a1d0:	adds	x10, x10, x1
   3a1d4:	cinc	x8, x8, cs  // cs = hs, nlast
   3a1d8:	subs	x1, x10, x8
   3a1dc:	cmp	x10, x8
   3a1e0:	lsr	x10, x8, #30
   3a1e4:	lsl	x8, x8, #34
   3a1e8:	sbc	x10, x10, xzr
   3a1ec:	adds	x8, x1, x8
   3a1f0:	cinc	x10, x10, cs  // cs = hs, nlast
   3a1f4:	sub	x1, x8, x27
   3a1f8:	cmp	x10, #0x0
   3a1fc:	lsr	x9, x9, #1
   3a200:	ccmp	x27, x8, #0x0, eq  // eq = none
   3a204:	csel	x1, x1, x8, ls  // ls = plast
   3a208:	cbz	x9, 3a26c <PyInit__decimal@@Base+0x1fcec>
   3a20c:	mul	x11, x1, x1
   3a210:	umulh	x8, x1, x1
   3a214:	tbnz	w9, #0, 3a120 <PyInit__decimal@@Base+0x1fba0>
   3a218:	cbz	x2, 3a198 <PyInit__decimal@@Base+0x1fc18>
   3a21c:	subs	x1, x11, x8
   3a220:	lsr	x10, x8, #32
   3a224:	cmp	x11, x8
   3a228:	lsl	x8, x8, #32
   3a22c:	sbc	x10, x10, xzr
   3a230:	adds	x8, x1, x8
   3a234:	cinc	x10, x10, cs  // cs = hs, nlast
   3a238:	lsr	x9, x9, #1
   3a23c:	subs	x1, x8, x10
   3a240:	cmp	x8, x10
   3a244:	lsr	x8, x10, #32
   3a248:	lsl	x10, x10, #32
   3a24c:	sbc	x8, x8, xzr
   3a250:	adds	x10, x1, x10
   3a254:	cinc	x8, x8, cs  // cs = hs, nlast
   3a258:	sub	x1, x10, x27
   3a25c:	cmp	x8, #0x0
   3a260:	ccmp	x27, x10, #0x0, eq  // eq = none
   3a264:	csel	x1, x1, x10, ls  // ls = plast
   3a268:	cbnz	x9, 3a20c <PyInit__decimal@@Base+0x1fc8c>
   3a26c:	mul	x8, x0, x0
   3a270:	umulh	x1, x0, x0
   3a274:	subs	x9, x8, x1
   3a278:	cmp	x8, x1
   3a27c:	cset	x10, cc  // cc = lo, ul, last
   3a280:	cbnz	x2, 3a938 <PyInit__decimal@@Base+0x203b8>
   3a284:	cbz	x3, 3a97c <PyInit__decimal@@Base+0x203fc>
   3a288:	lsr	x8, x1, #30
   3a28c:	lsl	x1, x1, #34
   3a290:	adds	x1, x1, x9
   3a294:	sub	x8, x8, x10
   3a298:	cinc	x8, x8, cs  // cs = hs, nlast
   3a29c:	subs	x9, x1, x8
   3a2a0:	cmp	x1, x8
   3a2a4:	lsr	x1, x8, #30
   3a2a8:	lsl	x8, x8, #34
   3a2ac:	sbc	x1, x1, xzr
   3a2b0:	adds	x8, x9, x8
   3a2b4:	cinc	x1, x1, cs  // cs = hs, nlast
   3a2b8:	subs	x11, x8, x1
   3a2bc:	cmp	x8, x1
   3a2c0:	lsr	x8, x1, #30
   3a2c4:	lsl	x1, x1, #34
   3a2c8:	sbc	x8, x8, xzr
   3a2cc:	adds	x1, x11, x1
   3a2d0:	cinc	x8, x8, cs  // cs = hs, nlast
   3a2d4:	sub	x11, x1, x27
   3a2d8:	cmp	x8, #0x0
   3a2dc:	ccmp	x27, x1, #0x0, eq  // eq = none
   3a2e0:	csel	x11, x11, x1, ls  // ls = plast
   3a2e4:	cbz	x20, 3a868 <PyInit__decimal@@Base+0x202e8>
   3a2e8:	lsl	x10, x4, x25
   3a2ec:	add	x12, x10, x5
   3a2f0:	mov	x8, #0x1                   	// #1
   3a2f4:	add	x10, x22, x10, lsl #3
   3a2f8:	add	x12, x7, x12, lsl #3
   3a2fc:	b	3a4b4 <PyInit__decimal@@Base+0x1ff34>
   3a300:	cbz	x3, 3a6b8 <PyInit__decimal@@Base+0x20138>
   3a304:	lsr	x13, x1, #30
   3a308:	lsl	x1, x1, #34
   3a30c:	adds	x1, x1, x14
   3a310:	sub	x13, x13, x15
   3a314:	cinc	x13, x13, cs  // cs = hs, nlast
   3a318:	mul	x15, x9, x0
   3a31c:	subs	x17, x1, x13
   3a320:	umulh	x9, x9, x0
   3a324:	cmp	x1, x13
   3a328:	lsr	x14, x13, #30
   3a32c:	lsl	x13, x13, #34
   3a330:	sbc	x14, x14, xzr
   3a334:	adds	x17, x17, x13
   3a338:	lsr	x1, x9, #30
   3a33c:	cinc	x14, x14, cs  // cs = hs, nlast
   3a340:	lsl	x16, x9, #34
   3a344:	subs	x13, x17, x14
   3a348:	mul	x28, x11, x8
   3a34c:	cmp	x17, x14
   3a350:	lsr	x17, x14, #30
   3a354:	lsl	x14, x14, #34
   3a358:	sbc	x17, x17, xzr
   3a35c:	adds	x13, x13, x14
   3a360:	umulh	x8, x11, x8
   3a364:	cinc	x17, x17, cs  // cs = hs, nlast
   3a368:	sub	x18, x13, x27
   3a36c:	cmp	x17, #0x0
   3a370:	mul	x17, x11, x0
   3a374:	ccmp	x27, x13, #0x0, eq  // eq = none
   3a378:	lsr	x14, x8, #30
   3a37c:	csel	x13, x18, x13, ls  // ls = plast
   3a380:	subs	x18, x15, x9
   3a384:	cmp	x15, x9
   3a388:	lsl	x30, x8, #34
   3a38c:	sbc	x1, x1, xzr
   3a390:	adds	x16, x18, x16
   3a394:	cinc	x1, x1, cs  // cs = hs, nlast
   3a398:	umulh	x0, x11, x0
   3a39c:	subs	x9, x16, x1
   3a3a0:	cmp	x16, x1
   3a3a4:	lsr	x16, x1, #30
   3a3a8:	lsl	x1, x1, #34
   3a3ac:	sbc	x16, x16, xzr
   3a3b0:	adds	x1, x9, x1
   3a3b4:	lsl	x18, x0, #34
   3a3b8:	cinc	x16, x16, cs  // cs = hs, nlast
   3a3bc:	lsr	x9, x0, #30
   3a3c0:	subs	x15, x1, x16
   3a3c4:	cmp	x1, x16
   3a3c8:	lsr	x1, x16, #30
   3a3cc:	lsl	x16, x16, #34
   3a3d0:	sbc	x1, x1, xzr
   3a3d4:	adds	x16, x15, x16
   3a3d8:	cinc	x1, x1, cs  // cs = hs, nlast
   3a3dc:	sub	x15, x16, x27
   3a3e0:	cmp	x1, #0x0
   3a3e4:	ccmp	x27, x16, #0x0, eq  // eq = none
   3a3e8:	csel	x15, x15, x16, ls  // ls = plast
   3a3ec:	subs	x1, x28, x8
   3a3f0:	cmp	x28, x8
   3a3f4:	sbc	x14, x14, xzr
   3a3f8:	adds	x30, x1, x30
   3a3fc:	cinc	x14, x14, cs  // cs = hs, nlast
   3a400:	subs	x8, x30, x14
   3a404:	cmp	x30, x14
   3a408:	lsr	x1, x14, #30
   3a40c:	lsl	x14, x14, #34
   3a410:	sbc	x1, x1, xzr
   3a414:	adds	x14, x8, x14
   3a418:	cinc	x1, x1, cs  // cs = hs, nlast
   3a41c:	subs	x8, x14, x1
   3a420:	cmp	x14, x1
   3a424:	lsr	x14, x1, #30
   3a428:	lsl	x1, x1, #34
   3a42c:	sbc	x14, x14, xzr
   3a430:	adds	x1, x8, x1
   3a434:	cinc	x14, x14, cs  // cs = hs, nlast
   3a438:	sub	x8, x1, x27
   3a43c:	cmp	x14, #0x0
   3a440:	ccmp	x27, x1, #0x0, eq  // eq = none
   3a444:	csel	x8, x8, x1, ls  // ls = plast
   3a448:	subs	x1, x17, x0
   3a44c:	cmp	x17, x0
   3a450:	sbc	x9, x9, xzr
   3a454:	adds	x18, x1, x18
   3a458:	cinc	x9, x9, cs  // cs = hs, nlast
   3a45c:	subs	x0, x18, x9
   3a460:	cmp	x18, x9
   3a464:	lsr	x1, x9, #30
   3a468:	lsl	x9, x9, #34
   3a46c:	sbc	x1, x1, xzr
   3a470:	adds	x9, x0, x9
   3a474:	cinc	x1, x1, cs  // cs = hs, nlast
   3a478:	subs	x0, x9, x1
   3a47c:	cmp	x9, x1
   3a480:	lsr	x9, x1, #30
   3a484:	lsl	x1, x1, #34
   3a488:	sbc	x9, x9, xzr
   3a48c:	adds	x1, x0, x1
   3a490:	cinc	x9, x9, cs  // cs = hs, nlast
   3a494:	stp	x13, x15, [x10]
   3a498:	cmp	x9, #0x0
   3a49c:	ccmp	x27, x1, #0x0, eq  // eq = none
   3a4a0:	sub	x0, x1, x27
   3a4a4:	add	x10, x10, #0x10
   3a4a8:	csel	x0, x0, x1, ls  // ls = plast
   3a4ac:	cmp	x10, x12
   3a4b0:	b.eq	3a868 <PyInit__decimal@@Base+0x202e8>  // b.none
   3a4b4:	ldp	x1, x9, [x10]
   3a4b8:	mul	x13, x8, x1
   3a4bc:	umulh	x1, x8, x1
   3a4c0:	subs	x14, x13, x1
   3a4c4:	cmp	x13, x1
   3a4c8:	cset	x15, cc  // cc = lo, ul, last
   3a4cc:	cbz	x2, 3a300 <PyInit__decimal@@Base+0x1fd80>
   3a4d0:	lsr	x13, x1, #32
   3a4d4:	lsl	x1, x1, #32
   3a4d8:	adds	x1, x1, x14
   3a4dc:	sub	x13, x13, x15
   3a4e0:	cinc	x13, x13, cs  // cs = hs, nlast
   3a4e4:	mul	x14, x9, x0
   3a4e8:	subs	x15, x1, x13
   3a4ec:	umulh	x9, x9, x0
   3a4f0:	cmp	x1, x13
   3a4f4:	lsr	x16, x13, #32
   3a4f8:	lsl	x13, x13, #32
   3a4fc:	sbc	x16, x16, xzr
   3a500:	adds	x13, x15, x13
   3a504:	lsr	x1, x9, #32
   3a508:	cinc	x16, x16, cs  // cs = hs, nlast
   3a50c:	sub	x17, x13, x27
   3a510:	cmp	x16, #0x0
   3a514:	lsl	x15, x9, #32
   3a518:	ccmp	x27, x13, #0x0, eq  // eq = none
   3a51c:	mul	x16, x8, x11
   3a520:	csel	x13, x17, x13, ls  // ls = plast
   3a524:	subs	x17, x14, x9
   3a528:	cmp	x14, x9
   3a52c:	umulh	x8, x8, x11
   3a530:	sbc	x1, x1, xzr
   3a534:	adds	x17, x17, x15
   3a538:	cinc	x1, x1, cs  // cs = hs, nlast
   3a53c:	mul	x14, x11, x0
   3a540:	subs	x15, x17, x1
   3a544:	lsr	x9, x8, #32
   3a548:	cmp	x17, x1
   3a54c:	lsr	x17, x1, #32
   3a550:	lsl	x1, x1, #32
   3a554:	sbc	x17, x17, xzr
   3a558:	adds	x1, x15, x1
   3a55c:	lsl	x18, x8, #32
   3a560:	cinc	x17, x17, cs  // cs = hs, nlast
   3a564:	sub	x15, x1, x27
   3a568:	cmp	x17, #0x0
   3a56c:	umulh	x0, x11, x0
   3a570:	ccmp	x27, x1, #0x0, eq  // eq = none
   3a574:	csel	x15, x15, x1, ls  // ls = plast
   3a578:	subs	x17, x16, x8
   3a57c:	cmp	x16, x8
   3a580:	lsr	x1, x0, #32
   3a584:	sbc	x9, x9, xzr
   3a588:	adds	x17, x17, x18
   3a58c:	cinc	x9, x9, cs  // cs = hs, nlast
   3a590:	lsl	x16, x0, #32
   3a594:	subs	x8, x17, x9
   3a598:	cmp	x17, x9
   3a59c:	lsr	x17, x9, #32
   3a5a0:	lsl	x9, x9, #32
   3a5a4:	sbc	x17, x17, xzr
   3a5a8:	adds	x9, x8, x9
   3a5ac:	cinc	x17, x17, cs  // cs = hs, nlast
   3a5b0:	sub	x8, x9, x27
   3a5b4:	cmp	x17, #0x0
   3a5b8:	ccmp	x27, x9, #0x0, eq  // eq = none
   3a5bc:	csel	x8, x8, x9, ls  // ls = plast
   3a5c0:	subs	x9, x14, x0
   3a5c4:	cmp	x14, x0
   3a5c8:	sbc	x1, x1, xzr
   3a5cc:	adds	x9, x9, x16
   3a5d0:	cinc	x1, x1, cs  // cs = hs, nlast
   3a5d4:	subs	x0, x9, x1
   3a5d8:	cmp	x9, x1
   3a5dc:	lsr	x9, x1, #32
   3a5e0:	lsl	x1, x1, #32
   3a5e4:	b	3a488 <PyInit__decimal@@Base+0x1ff08>
   3a5e8:	lsr	x1, x8, #24
   3a5ec:	lsl	x8, x8, #40
   3a5f0:	adds	x8, x8, x10
   3a5f4:	sub	x1, x1, x11
   3a5f8:	cinc	x1, x1, cs  // cs = hs, nlast
   3a5fc:	subs	x10, x8, x1
   3a600:	cmp	x8, x1
   3a604:	lsr	x8, x1, #24
   3a608:	lsl	x1, x1, #40
   3a60c:	sbc	x8, x8, xzr
   3a610:	adds	x10, x10, x1
   3a614:	cinc	x8, x8, cs  // cs = hs, nlast
   3a618:	subs	x1, x10, x8
   3a61c:	cmp	x10, x8
   3a620:	lsr	x10, x8, #24
   3a624:	lsl	x8, x8, #40
   3a628:	b	3a1e8 <PyInit__decimal@@Base+0x1fc68>
   3a62c:	cmp	x12, x0
   3a630:	lsr	x10, x0, #32
   3a634:	lsl	x0, x0, #32
   3a638:	sbc	x10, x10, xzr
   3a63c:	adds	x1, x1, x0
   3a640:	cinc	x10, x10, cs  // cs = hs, nlast
   3a644:	subs	x0, x1, x10
   3a648:	cmp	x1, x10
   3a64c:	lsr	x1, x10, #32
   3a650:	lsl	x10, x10, #32
   3a654:	sbc	x1, x1, xzr
   3a658:	adds	x10, x0, x10
   3a65c:	cinc	x1, x1, cs  // cs = hs, nlast
   3a660:	sub	x0, x10, x27
   3a664:	cmp	x1, #0x0
   3a668:	ccmp	x27, x10, #0x0, eq  // eq = none
   3a66c:	csel	x0, x0, x10, ls  // ls = plast
   3a670:	b	3a21c <PyInit__decimal@@Base+0x1fc9c>
   3a674:	lsr	x10, x0, #24
   3a678:	lsl	x0, x0, #40
   3a67c:	adds	x0, x0, x1
   3a680:	sub	x10, x10, x12
   3a684:	cinc	x10, x10, cs  // cs = hs, nlast
   3a688:	subs	x12, x0, x10
   3a68c:	cmp	x0, x10
   3a690:	lsr	x1, x10, #24
   3a694:	lsl	x10, x10, #40
   3a698:	sbc	x1, x1, xzr
   3a69c:	adds	x10, x12, x10
   3a6a0:	cinc	x1, x1, cs  // cs = hs, nlast
   3a6a4:	subs	x0, x10, x1
   3a6a8:	cmp	x10, x1
   3a6ac:	lsr	x10, x1, #24
   3a6b0:	lsl	x1, x1, #40
   3a6b4:	b	3a17c <PyInit__decimal@@Base+0x1fbfc>
   3a6b8:	lsr	x13, x1, #24
   3a6bc:	lsl	x1, x1, #40
   3a6c0:	adds	x1, x1, x14
   3a6c4:	sub	x13, x13, x15
   3a6c8:	cinc	x13, x13, cs  // cs = hs, nlast
   3a6cc:	mul	x14, x0, x9
   3a6d0:	subs	x17, x1, x13
   3a6d4:	umulh	x9, x0, x9
   3a6d8:	cmp	x1, x13
   3a6dc:	lsr	x16, x13, #24
   3a6e0:	lsl	x13, x13, #40
   3a6e4:	sbc	x16, x16, xzr
   3a6e8:	adds	x17, x17, x13
   3a6ec:	lsr	x1, x9, #24
   3a6f0:	cinc	x16, x16, cs  // cs = hs, nlast
   3a6f4:	lsl	x15, x9, #40
   3a6f8:	subs	x13, x17, x16
   3a6fc:	mul	x30, x8, x11
   3a700:	cmp	x17, x16
   3a704:	lsr	x17, x16, #24
   3a708:	lsl	x16, x16, #40
   3a70c:	sbc	x17, x17, xzr
   3a710:	adds	x13, x13, x16
   3a714:	umulh	x8, x8, x11
   3a718:	cinc	x17, x17, cs  // cs = hs, nlast
   3a71c:	sub	x18, x13, x27
   3a720:	cmp	x17, #0x0
   3a724:	mul	x17, x0, x11
   3a728:	ccmp	x27, x13, #0x0, eq  // eq = none
   3a72c:	lsr	x16, x8, #24
   3a730:	csel	x13, x18, x13, ls  // ls = plast
   3a734:	subs	x18, x14, x9
   3a738:	cmp	x14, x9
   3a73c:	lsl	x28, x8, #40
   3a740:	sbc	x1, x1, xzr
   3a744:	adds	x15, x18, x15
   3a748:	cinc	x1, x1, cs  // cs = hs, nlast
   3a74c:	umulh	x0, x0, x11
   3a750:	subs	x14, x15, x1
   3a754:	cmp	x15, x1
   3a758:	lsr	x9, x1, #24
   3a75c:	lsl	x1, x1, #40
   3a760:	sbc	x9, x9, xzr
   3a764:	adds	x1, x14, x1
   3a768:	lsl	x18, x0, #40
   3a76c:	cinc	x9, x9, cs  // cs = hs, nlast
   3a770:	lsr	x14, x0, #24
   3a774:	subs	x15, x1, x9
   3a778:	cmp	x1, x9
   3a77c:	lsr	x1, x9, #24
   3a780:	lsl	x9, x9, #40
   3a784:	sbc	x1, x1, xzr
   3a788:	adds	x9, x15, x9
   3a78c:	cinc	x1, x1, cs  // cs = hs, nlast
   3a790:	sub	x15, x9, x27
   3a794:	cmp	x1, #0x0
   3a798:	ccmp	x27, x9, #0x0, eq  // eq = none
   3a79c:	csel	x15, x15, x9, ls  // ls = plast
   3a7a0:	subs	x1, x30, x8
   3a7a4:	cmp	x30, x8
   3a7a8:	stp	x13, x15, [x10]
   3a7ac:	sbc	x16, x16, xzr
   3a7b0:	adds	x28, x1, x28
   3a7b4:	add	x10, x10, #0x10
   3a7b8:	cinc	x16, x16, cs  // cs = hs, nlast
   3a7bc:	subs	x8, x28, x16
   3a7c0:	cmp	x28, x16
   3a7c4:	lsr	x1, x16, #24
   3a7c8:	lsl	x16, x16, #40
   3a7cc:	sbc	x1, x1, xzr
   3a7d0:	adds	x16, x8, x16
   3a7d4:	cinc	x1, x1, cs  // cs = hs, nlast
   3a7d8:	subs	x8, x16, x1
   3a7dc:	cmp	x16, x1
   3a7e0:	lsr	x9, x1, #24
   3a7e4:	lsl	x1, x1, #40
   3a7e8:	sbc	x9, x9, xzr
   3a7ec:	adds	x1, x8, x1
   3a7f0:	cinc	x9, x9, cs  // cs = hs, nlast
   3a7f4:	sub	x8, x1, x27
   3a7f8:	cmp	x9, #0x0
   3a7fc:	ccmp	x27, x1, #0x0, eq  // eq = none
   3a800:	csel	x8, x8, x1, ls  // ls = plast
   3a804:	subs	x1, x17, x0
   3a808:	cmp	x17, x0
   3a80c:	sbc	x14, x14, xzr
   3a810:	adds	x18, x1, x18
   3a814:	cinc	x14, x14, cs  // cs = hs, nlast
   3a818:	subs	x0, x18, x14
   3a81c:	cmp	x18, x14
   3a820:	lsr	x9, x14, #24
   3a824:	lsl	x14, x14, #40
   3a828:	sbc	x9, x9, xzr
   3a82c:	adds	x14, x0, x14
   3a830:	cinc	x9, x9, cs  // cs = hs, nlast
   3a834:	subs	x0, x14, x9
   3a838:	cmp	x14, x9
   3a83c:	lsr	x1, x9, #24
   3a840:	lsl	x9, x9, #40
   3a844:	sbc	x1, x1, xzr
   3a848:	adds	x9, x0, x9
   3a84c:	cinc	x1, x1, cs  // cs = hs, nlast
   3a850:	sub	x0, x9, x27
   3a854:	cmp	x1, #0x0
   3a858:	ccmp	x27, x9, #0x0, eq  // eq = none
   3a85c:	csel	x0, x0, x9, ls  // ls = plast
   3a860:	cmp	x10, x12
   3a864:	b.ne	3a4b4 <PyInit__decimal@@Base+0x1ff34>  // b.any
   3a868:	add	x4, x4, #0x1
   3a86c:	cmp	x19, x4
   3a870:	b.ne	3a110 <PyInit__decimal@@Base+0x1fb90>  // b.any
   3a874:	mov	x2, x20
   3a878:	mov	x1, x19
   3a87c:	mov	x0, x22
   3a880:	bl	3b0e8 <PyInit__decimal@@Base+0x20b68>
   3a884:	str	w0, [sp, #96]
   3a888:	mov	w25, w0
   3a88c:	cbz	w25, 3a9cc <PyInit__decimal@@Base+0x2044c>
   3a890:	cmp	x20, x19
   3a894:	adrp	x27, 5f000 <PyInit__decimal@@Base+0x44a80>
   3a898:	b.eq	3a8c0 <PyInit__decimal@@Base+0x20340>  // b.none
   3a89c:	ldr	x1, [x27, #1704]
   3a8a0:	mov	x0, x21
   3a8a4:	blr	x1
   3a8a8:	mov	w2, w26
   3a8ac:	mov	x0, x19
   3a8b0:	mov	w1, #0x1                   	// #1
   3a8b4:	bl	39120 <PyInit__decimal@@Base+0x1eba0>
   3a8b8:	mov	x21, x0
   3a8bc:	cbz	x0, 3a9fc <PyInit__decimal@@Base+0x2047c>
   3a8c0:	cmp	x22, x23
   3a8c4:	b.cs	3a8f4 <PyInit__decimal@@Base+0x20374>  // b.hs, b.nlast
   3a8c8:	ldrb	w1, [sp, #108]
   3a8cc:	mov	x0, #0x8                   	// #8
   3a8d0:	mov	x25, x22
   3a8d4:	lsl	x24, x0, x1
   3a8d8:	mov	x0, x25
   3a8dc:	mov	x2, x21
   3a8e0:	mov	x1, x19
   3a8e4:	add	x25, x25, x24
   3a8e8:	bl	1f0a8 <PyInit__decimal@@Base+0x4b28>
   3a8ec:	cmp	x25, x23
   3a8f0:	b.cc	3a8d8 <PyInit__decimal@@Base+0x20358>  // b.lo, b.ul, b.last
   3a8f4:	ldr	x1, [x27, #1704]
   3a8f8:	mov	x0, x21
   3a8fc:	blr	x1
   3a900:	mov	x2, x19
   3a904:	mov	x1, x20
   3a908:	mov	x0, x22
   3a90c:	bl	3b0e8 <PyInit__decimal@@Base+0x20b68>
   3a910:	cmp	w0, #0x0
   3a914:	cset	w25, ne  // ne = any
   3a918:	mov	w0, w25
   3a91c:	ldp	x19, x20, [sp, #16]
   3a920:	ldp	x21, x22, [sp, #32]
   3a924:	ldp	x23, x24, [sp, #48]
   3a928:	ldp	x25, x26, [sp, #64]
   3a92c:	ldp	x27, x28, [sp, #80]
   3a930:	ldp	x29, x30, [sp], #112
   3a934:	ret
   3a938:	lsr	x8, x1, #32
   3a93c:	lsl	x1, x1, #32
   3a940:	adds	x1, x1, x9
   3a944:	sub	x8, x8, x10
   3a948:	cinc	x8, x8, cs  // cs = hs, nlast
   3a94c:	subs	x11, x1, x8
   3a950:	cmp	x1, x8
   3a954:	lsr	x1, x8, #32
   3a958:	lsl	x8, x8, #32
   3a95c:	sbc	x1, x1, xzr
   3a960:	adds	x8, x11, x8
   3a964:	cinc	x1, x1, cs  // cs = hs, nlast
   3a968:	sub	x11, x8, x27
   3a96c:	cmp	x1, #0x0
   3a970:	ccmp	x27, x8, #0x0, eq  // eq = none
   3a974:	csel	x11, x11, x8, ls  // ls = plast
   3a978:	b	3a2e4 <PyInit__decimal@@Base+0x1fd64>
   3a97c:	lsr	x8, x1, #24
   3a980:	lsl	x1, x1, #40
   3a984:	adds	x1, x1, x9
   3a988:	sub	x8, x8, x10
   3a98c:	cinc	x8, x8, cs  // cs = hs, nlast
   3a990:	subs	x9, x1, x8
   3a994:	cmp	x1, x8
   3a998:	lsr	x1, x8, #24
   3a99c:	lsl	x8, x8, #40
   3a9a0:	sbc	x1, x1, xzr
   3a9a4:	adds	x8, x9, x8
   3a9a8:	cinc	x1, x1, cs  // cs = hs, nlast
   3a9ac:	subs	x11, x8, x1
   3a9b0:	cmp	x8, x1
   3a9b4:	lsr	x8, x1, #24
   3a9b8:	lsl	x1, x1, #40
   3a9bc:	b	3a2c8 <PyInit__decimal@@Base+0x1fd48>
   3a9c0:	mov	x0, x1
   3a9c4:	mov	w1, #0x0                   	// #0
   3a9c8:	b	39ff8 <PyInit__decimal@@Base+0x1fa78>
   3a9cc:	adrp	x1, 5f000 <PyInit__decimal@@Base+0x44a80>
   3a9d0:	mov	x0, x21
   3a9d4:	ldr	x1, [x1, #1704]
   3a9d8:	blr	x1
   3a9dc:	mov	w0, w25
   3a9e0:	ldp	x19, x20, [sp, #16]
   3a9e4:	ldp	x21, x22, [sp, #32]
   3a9e8:	ldp	x23, x24, [sp, #48]
   3a9ec:	ldp	x25, x26, [sp, #64]
   3a9f0:	ldp	x27, x28, [sp, #80]
   3a9f4:	ldp	x29, x30, [sp], #112
   3a9f8:	ret
   3a9fc:	mov	w25, #0x0                   	// #0
   3aa00:	mov	w0, w25
   3aa04:	ldp	x19, x20, [sp, #16]
   3aa08:	ldp	x21, x22, [sp, #32]
   3aa0c:	ldp	x23, x24, [sp, #48]
   3aa10:	ldp	x25, x26, [sp, #64]
   3aa14:	ldp	x27, x28, [sp, #80]
   3aa18:	ldp	x29, x30, [sp], #112
   3aa1c:	ret
   3aa20:	sub	sp, sp, #0xf0
   3aa24:	cmp	w3, #0x0
   3aa28:	sub	sp, sp, #0x10, lsl #12
   3aa2c:	stp	x29, x30, [sp]
   3aa30:	mov	x29, sp
   3aa34:	stp	x0, x2, [sp, #112]
   3aa38:	mov	x2, #0x2                   	// #2
   3aa3c:	stp	x19, x20, [sp, #16]
   3aa40:	mov	x19, x1
   3aa44:	str	x1, [sp, #208]
   3aa48:	lsr	x1, x1, #3
   3aa4c:	add	x0, x1, #0x1
   3aa50:	mov	x1, #0x8                   	// #8
   3aa54:	stp	x25, x26, [sp, #64]
   3aa58:	csel	x25, x19, x2, eq  // eq = none
   3aa5c:	bl	25288 <PyInit__decimal@@Base+0xad08>
   3aa60:	cbz	x0, 3ace4 <PyInit__decimal@@Base+0x20764>
   3aa64:	stp	x27, x28, [sp, #80]
   3aa68:	mov	x28, x0
   3aa6c:	cbz	x19, 3aca8 <PyInit__decimal@@Base+0x20728>
   3aa70:	ldr	x1, [sp, #120]
   3aa74:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27a80>
   3aa78:	add	x0, x0, #0x370
   3aa7c:	str	x0, [sp, #128]
   3aa80:	mov	x27, #0x1                   	// #1
   3aa84:	stp	x21, x22, [sp, #32]
   3aa88:	lsr	x0, x1, #1
   3aa8c:	str	x0, [sp, #152]
   3aa90:	lsl	x0, x1, #1
   3aa94:	str	x0, [sp, #216]
   3aa98:	mov	x0, #0x80f0                	// #33008
   3aa9c:	add	x0, sp, x0
   3aaa0:	stp	x23, x24, [sp, #48]
   3aaa4:	sub	x24, x1, #0x1
   3aaa8:	str	x1, [sp, #200]
   3aaac:	str	x0, [sp, #224]
   3aab0:	add	x0, sp, #0xf0
   3aab4:	str	x0, [sp, #232]
   3aab8:	b	3aadc <PyInit__decimal@@Base+0x2055c>
   3aabc:	ldr	x0, [sp, #200]
   3aac0:	add	x27, x27, #0x2
   3aac4:	ldr	x1, [sp, #216]
   3aac8:	add	x0, x0, x1
   3aacc:	str	x0, [sp, #200]
   3aad0:	ldr	x0, [sp, #208]
   3aad4:	cmp	x0, x27
   3aad8:	b.cc	3aca0 <PyInit__decimal@@Base+0x20720>  // b.lo, b.ul, b.last
   3aadc:	lsr	x0, x27, #6
   3aae0:	and	x1, x27, #0x3f
   3aae4:	add	x2, x28, x0, lsl #3
   3aae8:	str	x2, [sp, #160]
   3aaec:	ldr	x2, [sp, #128]
   3aaf0:	ldr	x0, [x28, x0, lsl #3]
   3aaf4:	ldr	x1, [x2, x1, lsl #3]
   3aaf8:	str	x1, [sp, #168]
   3aafc:	ands	x0, x1, x0
   3ab00:	str	x0, [sp, #136]
   3ab04:	b.ne	3aabc <PyInit__decimal@@Base+0x2053c>  // b.any
   3ab08:	ldr	x1, [sp, #152]
   3ab0c:	cbz	x1, 3aabc <PyInit__decimal@@Base+0x2053c>
   3ab10:	mul	x2, x25, x27
   3ab14:	str	x27, [sp, #104]
   3ab18:	ldr	x0, [sp, #200]
   3ab1c:	str	x2, [sp, #184]
   3ab20:	umulh	x2, x25, x27
   3ab24:	str	x2, [sp, #192]
   3ab28:	ldr	x2, [sp, #112]
   3ab2c:	lsr	x0, x0, #1
   3ab30:	ldp	x20, x19, [sp, #224]
   3ab34:	add	x1, x0, x1
   3ab38:	add	x0, x2, x0, lsl #3
   3ab3c:	str	x0, [sp, #144]
   3ab40:	add	x0, x2, x1, lsl #3
   3ab44:	str	x0, [sp, #176]
   3ab48:	ldp	x0, x1, [sp, #136]
   3ab4c:	ldr	x2, [sp, #176]
   3ab50:	sub	x21, x2, x1
   3ab54:	add	x0, x0, #0x1, lsl #12
   3ab58:	ldr	x2, [sp, #152]
   3ab5c:	lsl	x23, x0, #3
   3ab60:	str	x0, [sp, #136]
   3ab64:	sub	x23, x23, #0x8, lsl #12
   3ab68:	cmp	x0, x2
   3ab6c:	mov	x2, #0x8000                	// #32768
   3ab70:	csel	x21, x21, x2, cs  // cs = hs, nlast
   3ab74:	mov	x0, x19
   3ab78:	mov	x2, x21
   3ab7c:	bl	6470 <memcpy@plt>
   3ab80:	ldp	x22, x1, [sp, #184]
   3ab84:	mov	x2, x24
   3ab88:	mov	x3, #0x0                   	// #0
   3ab8c:	mov	x0, x22
   3ab90:	bl	3b538 <PyInit__decimal@@Base+0x20fb8>
   3ab94:	msub	x26, x24, x0, x22
   3ab98:	mov	x1, x19
   3ab9c:	ldp	x0, x2, [sp, #104]
   3aba0:	cmp	x26, x0
   3aba4:	ldr	x0, [sp, #120]
   3aba8:	mul	x0, x0, x26
   3abac:	lsr	x0, x0, #1
   3abb0:	add	x0, x2, x0, lsl #3
   3abb4:	b.ne	3abc4 <PyInit__decimal@@Base+0x20644>  // b.any
   3abb8:	b	3acd8 <PyInit__decimal@@Base+0x20758>
   3abbc:	mov	x20, x19
   3abc0:	mov	x19, x22
   3abc4:	add	x22, x0, x23
   3abc8:	mov	x2, x21
   3abcc:	mov	x1, x22
   3abd0:	mov	x0, x20
   3abd4:	bl	6470 <memcpy@plt>
   3abd8:	mul	x27, x25, x26
   3abdc:	mov	x2, x21
   3abe0:	mov	x1, x19
   3abe4:	mov	x0, x22
   3abe8:	bl	6470 <memcpy@plt>
   3abec:	ldr	x4, [sp, #128]
   3abf0:	lsr	x5, x26, #6
   3abf4:	and	x0, x26, #0x3f
   3abf8:	umulh	x1, x25, x26
   3abfc:	mov	x2, x24
   3ac00:	mov	x22, x20
   3ac04:	ldr	x3, [x28, x5, lsl #3]
   3ac08:	ldr	x6, [x4, x0, lsl #3]
   3ac0c:	mov	x0, x27
   3ac10:	orr	x3, x3, x6
   3ac14:	str	x3, [x28, x5, lsl #3]
   3ac18:	mov	x3, #0x0                   	// #0
   3ac1c:	bl	3b538 <PyInit__decimal@@Base+0x20fb8>
   3ac20:	msub	x26, x24, x0, x27
   3ac24:	ldp	x0, x1, [sp, #104]
   3ac28:	cmp	x26, x0
   3ac2c:	ldr	x0, [sp, #120]
   3ac30:	mul	x0, x0, x26
   3ac34:	lsr	x0, x0, #1
   3ac38:	add	x0, x1, x0, lsl #3
   3ac3c:	b.ne	3abbc <PyInit__decimal@@Base+0x2063c>  // b.any
   3ac40:	mov	x2, x21
   3ac44:	mov	x1, x20
   3ac48:	add	x0, x0, x23
   3ac4c:	bl	6470 <memcpy@plt>
   3ac50:	ldp	x2, x3, [sp, #144]
   3ac54:	ldr	x1, [sp, #160]
   3ac58:	add	x2, x2, #0x8, lsl #12
   3ac5c:	str	x2, [sp, #144]
   3ac60:	ldr	x2, [sp, #136]
   3ac64:	ldr	x0, [x1]
   3ac68:	cmp	x2, x3
   3ac6c:	ldr	x2, [sp, #168]
   3ac70:	orr	x0, x0, x2
   3ac74:	str	x0, [x1]
   3ac78:	b.cc	3ab48 <PyInit__decimal@@Base+0x205c8>  // b.lo, b.ul, b.last
   3ac7c:	ldr	x0, [sp, #200]
   3ac80:	ldr	x1, [sp, #216]
   3ac84:	ldr	x27, [sp, #104]
   3ac88:	add	x0, x0, x1
   3ac8c:	str	x0, [sp, #200]
   3ac90:	ldr	x0, [sp, #208]
   3ac94:	add	x27, x27, #0x2
   3ac98:	cmp	x0, x27
   3ac9c:	b.cs	3aadc <PyInit__decimal@@Base+0x2055c>  // b.hs, b.nlast
   3aca0:	ldp	x21, x22, [sp, #32]
   3aca4:	ldp	x23, x24, [sp, #48]
   3aca8:	adrp	x1, 5f000 <PyInit__decimal@@Base+0x44a80>
   3acac:	mov	x0, x28
   3acb0:	ldr	x1, [x1, #1704]
   3acb4:	blr	x1
   3acb8:	ldp	x29, x30, [sp]
   3acbc:	mov	w0, #0x1                   	// #1
   3acc0:	ldp	x19, x20, [sp, #16]
   3acc4:	ldp	x25, x26, [sp, #64]
   3acc8:	ldp	x27, x28, [sp, #80]
   3accc:	add	sp, sp, #0xf0
   3acd0:	add	sp, sp, #0x10, lsl #12
   3acd4:	ret
   3acd8:	mov	x19, x20
   3acdc:	mov	x20, x1
   3ace0:	b	3ac40 <PyInit__decimal@@Base+0x206c0>
   3ace4:	ldp	x29, x30, [sp]
   3ace8:	mov	w0, #0x0                   	// #0
   3acec:	ldp	x19, x20, [sp, #16]
   3acf0:	ldp	x25, x26, [sp, #64]
   3acf4:	add	sp, sp, #0xf0
   3acf8:	add	sp, sp, #0x10, lsl #12
   3acfc:	ret
   3ad00:	stp	x29, x30, [sp, #-32]!
   3ad04:	mov	w3, #0x26c                 	// #620
   3ad08:	adrp	x2, 42000 <PyInit__decimal@@Base+0x27a80>
   3ad0c:	mov	x29, sp
   3ad10:	str	x19, [sp, #16]
   3ad14:	adrp	x19, 5c000 <PyInit__decimal@@Base+0x41a80>
   3ad18:	add	x2, x2, #0x198
   3ad1c:	adrp	x1, 42000 <PyInit__decimal@@Base+0x27a80>
   3ad20:	ldr	x19, [x19, #3904]
   3ad24:	add	x1, x1, #0x1d8
   3ad28:	ldr	x0, [x19]
   3ad2c:	bl	6a70 <fprintf@plt>
   3ad30:	ldr	x3, [x19]
   3ad34:	mov	x2, #0x29                  	// #41
   3ad38:	mov	x1, #0x1                   	// #1
   3ad3c:	adrp	x0, 42000 <PyInit__decimal@@Base+0x27a80>
   3ad40:	add	x0, x0, #0x828
   3ad44:	bl	6930 <fwrite@plt>
   3ad48:	ldr	x1, [x19]
   3ad4c:	mov	w0, #0xa                   	// #10
   3ad50:	bl	65b0 <fputc@plt>
   3ad54:	bl	67c0 <abort@plt>
   3ad58:	sub	sp, sp, #0xc0
   3ad5c:	cmp	x1, #0x80
   3ad60:	sub	sp, sp, #0x40, lsl #12
   3ad64:	stp	x29, x30, [sp]
   3ad68:	mov	x29, sp
   3ad6c:	stp	x23, x24, [sp, #48]
   3ad70:	str	x1, [sp, #144]
   3ad74:	b.ls	3b070 <PyInit__decimal@@Base+0x20af0>  // b.plast
   3ad78:	mov	x23, x1
   3ad7c:	stp	x19, x20, [sp, #16]
   3ad80:	stp	x21, x22, [sp, #32]
   3ad84:	stp	x25, x26, [sp, #64]
   3ad88:	stp	x27, x28, [sp, #80]
   3ad8c:	nop
   3ad90:	lsr	x23, x23, #1
   3ad94:	cmp	x23, #0x80
   3ad98:	b.hi	3ad90 <PyInit__decimal@@Base+0x20810>  // b.pmore
   3ad9c:	ldr	x1, [sp, #144]
   3ada0:	mov	x3, x0
   3ada4:	lsl	x28, x23, #3
   3ada8:	add	x2, sp, #0x20, lsl #12
   3adac:	add	x2, x2, #0xc0
   3adb0:	add	x25, x28, #0x8
   3adb4:	lsl	x20, x1, #3
   3adb8:	add	x1, sp, #0xc0
   3adbc:	add	x0, x20, #0x8
   3adc0:	sub	x24, x28, #0x8
   3adc4:	stp	x1, x2, [sp, #112]
   3adc8:	mul	x4, x20, x23
   3adcc:	mul	x0, x0, x23
   3add0:	stp	xzr, x3, [sp, #128]
   3add4:	stp	x3, x0, [sp, #176]
   3add8:	add	x0, x1, x28
   3addc:	str	x4, [sp, #152]
   3ade0:	str	x0, [sp, #160]
   3ade4:	add	x0, x2, x28
   3ade8:	str	x0, [sp, #168]
   3adec:	nop
   3adf0:	ldr	x0, [sp, #176]
   3adf4:	str	x0, [sp, #104]
   3adf8:	ldr	x0, [sp, #128]
   3adfc:	str	x0, [sp, #96]
   3ae00:	ldr	x0, [sp, #96]
   3ae04:	mov	x22, #0x0                   	// #0
   3ae08:	ldr	x1, [sp, #136]
   3ae0c:	ldr	x3, [sp, #112]
   3ae10:	add	x21, x1, x0, lsl #3
   3ae14:	mov	x26, x21
   3ae18:	mov	x1, x26
   3ae1c:	mov	x0, x3
   3ae20:	mov	x19, x22
   3ae24:	mov	x2, x28
   3ae28:	add	x22, x22, #0x1
   3ae2c:	bl	6470 <memcpy@plt>
   3ae30:	add	x26, x26, x20
   3ae34:	cmp	x23, x22
   3ae38:	add	x3, x0, x28
   3ae3c:	b.ne	3ae18 <PyInit__decimal@@Base+0x20898>  // b.any
   3ae40:	ldr	x0, [sp, #112]
   3ae44:	ldr	x5, [sp, #160]
   3ae48:	add	x4, x0, #0x8
   3ae4c:	mov	x0, #0x0                   	// #0
   3ae50:	cmp	x19, x0
   3ae54:	add	x3, x0, #0x1
   3ae58:	b.eq	3ae9c <PyInit__decimal@@Base+0x2091c>  // b.none
   3ae5c:	nop
   3ae60:	add	x1, x24, x4
   3ae64:	mov	x0, x4
   3ae68:	ldr	x7, [x1]
   3ae6c:	ldr	x6, [x0]
   3ae70:	str	x7, [x0], #8
   3ae74:	str	x6, [x1]
   3ae78:	add	x1, x1, x28
   3ae7c:	cmp	x0, x5
   3ae80:	b.ne	3ae68 <PyInit__decimal@@Base+0x208e8>  // b.any
   3ae84:	mov	x0, x3
   3ae88:	add	x4, x4, x25
   3ae8c:	add	x5, x5, x28
   3ae90:	cmp	x19, x0
   3ae94:	add	x3, x0, #0x1
   3ae98:	b.ne	3ae60 <PyInit__decimal@@Base+0x208e0>  // b.any
   3ae9c:	ldr	x1, [sp, #96]
   3aea0:	ldr	x0, [sp, #128]
   3aea4:	cmp	x0, x1
   3aea8:	b.eq	3b01c <PyInit__decimal@@Base+0x20a9c>  // b.none
   3aeac:	ldr	x26, [sp, #104]
   3aeb0:	mov	x27, #0x0                   	// #0
   3aeb4:	ldr	x3, [sp, #120]
   3aeb8:	mov	x22, x26
   3aebc:	nop
   3aec0:	mov	x1, x26
   3aec4:	mov	x0, x3
   3aec8:	mov	x19, x27
   3aecc:	mov	x2, x28
   3aed0:	add	x27, x27, #0x1
   3aed4:	bl	6470 <memcpy@plt>
   3aed8:	add	x26, x26, x20
   3aedc:	cmp	x23, x27
   3aee0:	add	x3, x0, x28
   3aee4:	b.ne	3aec0 <PyInit__decimal@@Base+0x20940>  // b.any
   3aee8:	ldr	x0, [sp, #120]
   3aeec:	ldr	x5, [sp, #168]
   3aef0:	add	x4, x0, #0x8
   3aef4:	mov	x0, #0x0                   	// #0
   3aef8:	cmp	x19, x0
   3aefc:	add	x3, x0, #0x1
   3af00:	b.eq	3af44 <PyInit__decimal@@Base+0x209c4>  // b.none
   3af04:	nop
   3af08:	add	x1, x24, x4
   3af0c:	mov	x0, x4
   3af10:	ldr	x7, [x1]
   3af14:	ldr	x6, [x0]
   3af18:	str	x7, [x0], #8
   3af1c:	str	x6, [x1]
   3af20:	add	x1, x1, x28
   3af24:	cmp	x5, x0
   3af28:	b.ne	3af10 <PyInit__decimal@@Base+0x20990>  // b.any
   3af2c:	mov	x0, x3
   3af30:	add	x4, x4, x25
   3af34:	add	x5, x5, x28
   3af38:	cmp	x19, x0
   3af3c:	add	x3, x0, #0x1
   3af40:	b.ne	3af08 <PyInit__decimal@@Base+0x20988>  // b.any
   3af44:	ldr	x27, [sp, #112]
   3af48:	mov	x26, #0x0                   	// #0
   3af4c:	nop
   3af50:	mov	x1, x27
   3af54:	mov	x0, x22
   3af58:	mov	x2, x28
   3af5c:	bl	6470 <memcpy@plt>
   3af60:	cmp	x26, x19
   3af64:	add	x27, x27, x28
   3af68:	add	x22, x22, x20
   3af6c:	add	x26, x26, #0x1
   3af70:	b.ne	3af50 <PyInit__decimal@@Base+0x209d0>  // b.any
   3af74:	ldr	x26, [sp, #120]
   3af78:	mov	x22, #0x0                   	// #0
   3af7c:	nop
   3af80:	mov	x1, x26
   3af84:	mov	x0, x21
   3af88:	mov	x2, x28
   3af8c:	bl	6470 <memcpy@plt>
   3af90:	cmp	x22, x19
   3af94:	add	x26, x26, x28
   3af98:	add	x21, x21, x20
   3af9c:	add	x22, x22, #0x1
   3afa0:	b.ne	3af80 <PyInit__decimal@@Base+0x20a00>  // b.any
   3afa4:	ldp	x0, x1, [sp, #96]
   3afa8:	ldr	x2, [sp, #152]
   3afac:	add	x1, x1, x2
   3afb0:	add	x0, x0, x23
   3afb4:	stp	x0, x1, [sp, #96]
   3afb8:	ldr	x1, [sp, #144]
   3afbc:	cmp	x1, x0
   3afc0:	b.hi	3ae00 <PyInit__decimal@@Base+0x20880>  // b.pmore
   3afc4:	ldp	x1, x2, [sp, #176]
   3afc8:	ldr	x0, [sp, #128]
   3afcc:	add	x0, x0, x23
   3afd0:	str	x0, [sp, #128]
   3afd4:	add	x1, x1, x2
   3afd8:	str	x1, [sp, #176]
   3afdc:	ldr	x1, [sp, #144]
   3afe0:	cmp	x1, x0
   3afe4:	ldr	x0, [sp, #136]
   3afe8:	ldr	x1, [sp, #152]
   3afec:	add	x0, x0, x1
   3aff0:	str	x0, [sp, #136]
   3aff4:	b.hi	3adf0 <PyInit__decimal@@Base+0x20870>  // b.pmore
   3aff8:	ldp	x19, x20, [sp, #16]
   3affc:	ldp	x21, x22, [sp, #32]
   3b000:	ldp	x25, x26, [sp, #64]
   3b004:	ldp	x27, x28, [sp, #80]
   3b008:	ldp	x29, x30, [sp]
   3b00c:	ldp	x23, x24, [sp, #48]
   3b010:	add	sp, sp, #0xc0
   3b014:	add	sp, sp, #0x40, lsl #12
   3b018:	ret
   3b01c:	ldr	x26, [sp, #112]
   3b020:	mov	x22, #0x0                   	// #0
   3b024:	nop
   3b028:	mov	x1, x26
   3b02c:	mov	x0, x21
   3b030:	mov	x2, x28
   3b034:	bl	6470 <memcpy@plt>
   3b038:	cmp	x19, x22
   3b03c:	add	x26, x26, x28
   3b040:	add	x21, x21, x20
   3b044:	add	x22, x22, #0x1
   3b048:	b.ne	3b028 <PyInit__decimal@@Base+0x20aa8>  // b.any
   3b04c:	ldp	x0, x1, [sp, #96]
   3b050:	ldr	x2, [sp, #152]
   3b054:	add	x1, x1, x2
   3b058:	add	x0, x0, x23
   3b05c:	stp	x0, x1, [sp, #96]
   3b060:	ldr	x1, [sp, #144]
   3b064:	cmp	x1, x0
   3b068:	b.hi	3ae00 <PyInit__decimal@@Base+0x20880>  // b.pmore
   3b06c:	b	3afc4 <PyInit__decimal@@Base+0x20a44>
   3b070:	ldr	x1, [sp, #144]
   3b074:	cbz	x1, 3b008 <PyInit__decimal@@Base+0x20a88>
   3b078:	mov	x23, x1
   3b07c:	stp	x19, x20, [sp, #16]
   3b080:	stp	x21, x22, [sp, #32]
   3b084:	stp	x25, x26, [sp, #64]
   3b088:	stp	x27, x28, [sp, #80]
   3b08c:	b	3ad9c <PyInit__decimal@@Base+0x2081c>
   3b090:	cbz	x2, 3b0e4 <PyInit__decimal@@Base+0x20b64>
   3b094:	lsl	x8, x2, #3
   3b098:	mov	x7, x3
   3b09c:	mov	x10, #0x0                   	// #0
   3b0a0:	mov	x9, #0x0                   	// #0
   3b0a4:	nop
   3b0a8:	cbz	x3, 3b0d0 <PyInit__decimal@@Base+0x20b50>
   3b0ac:	add	x5, x0, x9, lsl #3
   3b0b0:	mov	x4, x10
   3b0b4:	nop
   3b0b8:	ldr	x6, [x1, x4, lsl #3]
   3b0bc:	str	x6, [x5]
   3b0c0:	add	x4, x4, #0x1
   3b0c4:	add	x5, x5, x8
   3b0c8:	cmp	x4, x7
   3b0cc:	b.ne	3b0b8 <PyInit__decimal@@Base+0x20b38>  // b.any
   3b0d0:	add	x9, x9, #0x1
   3b0d4:	add	x10, x10, x3
   3b0d8:	cmp	x2, x9
   3b0dc:	add	x7, x7, x3
   3b0e0:	b.ne	3b0a8 <PyInit__decimal@@Base+0x20b28>  // b.any
   3b0e4:	ret
   3b0e8:	stp	x29, x30, [sp, #-48]!
   3b0ec:	umulh	x3, x1, x2
   3b0f0:	mov	x29, sp
   3b0f4:	stp	x19, x20, [sp, #16]
   3b0f8:	stp	x21, x22, [sp, #32]
   3b0fc:	mul	x22, x1, x2
   3b100:	cbnz	x3, 3b1b8 <PyInit__decimal@@Base+0x20c38>
   3b104:	mov	x20, x1
   3b108:	mov	x19, x2
   3b10c:	cmp	x1, x2
   3b110:	b.eq	3b1a0 <PyInit__decimal@@Base+0x20c20>  // b.none
   3b114:	lsl	x3, x1, #1
   3b118:	tbnz	x1, #63, 3b1b8 <PyInit__decimal@@Base+0x20c38>
   3b11c:	mov	x21, x0
   3b120:	cmp	x2, x3
   3b124:	b.eq	3b17c <PyInit__decimal@@Base+0x20bfc>  // b.none
   3b128:	lsl	x1, x2, #1
   3b12c:	tbnz	x2, #63, 3b1b8 <PyInit__decimal@@Base+0x20c38>
   3b130:	cmp	x20, x1
   3b134:	b.ne	3b1bc <PyInit__decimal@@Base+0x20c3c>  // b.any
   3b138:	mov	x1, x2
   3b13c:	bl	3ad58 <PyInit__decimal@@Base+0x207d8>
   3b140:	lsr	x0, x22, #1
   3b144:	mov	x1, x19
   3b148:	add	x0, x21, x0, lsl #3
   3b14c:	bl	3ad58 <PyInit__decimal@@Base+0x207d8>
   3b150:	mov	x2, x20
   3b154:	mov	x1, x19
   3b158:	mov	x0, x21
   3b15c:	mov	w3, #0x1                   	// #1
   3b160:	bl	3aa20 <PyInit__decimal@@Base+0x204a0>
   3b164:	cmp	w0, #0x0
   3b168:	cset	w0, ne  // ne = any
   3b16c:	ldp	x19, x20, [sp, #16]
   3b170:	ldp	x21, x22, [sp, #32]
   3b174:	ldp	x29, x30, [sp], #48
   3b178:	ret
   3b17c:	mov	w3, #0x0                   	// #0
   3b180:	bl	3aa20 <PyInit__decimal@@Base+0x204a0>
   3b184:	cbz	w0, 3b16c <PyInit__decimal@@Base+0x20bec>
   3b188:	mov	x1, x20
   3b18c:	mov	x0, x21
   3b190:	bl	3ad58 <PyInit__decimal@@Base+0x207d8>
   3b194:	lsr	x0, x22, #1
   3b198:	mov	x1, x20
   3b19c:	add	x0, x21, x0, lsl #3
   3b1a0:	bl	3ad58 <PyInit__decimal@@Base+0x207d8>
   3b1a4:	mov	w0, #0x1                   	// #1
   3b1a8:	ldp	x19, x20, [sp, #16]
   3b1ac:	ldp	x21, x22, [sp, #32]
   3b1b0:	ldp	x29, x30, [sp], #48
   3b1b4:	ret
   3b1b8:	bl	3ad00 <PyInit__decimal@@Base+0x20780>
   3b1bc:	bl	67c0 <abort@plt>
   3b1c0:	mov	x6, #0x0                   	// #0
   3b1c4:	tbnz	x1, #63, 3b2a4 <PyInit__decimal@@Base+0x20d24>
   3b1c8:	tbz	x3, #63, 3b1d8 <PyInit__decimal@@Base+0x20c58>
   3b1cc:	negs	x2, x2
   3b1d0:	mvn	x6, x6
   3b1d4:	ngc	x3, x3
   3b1d8:	mov	x4, x2
   3b1dc:	mov	x7, x0
   3b1e0:	mov	x5, x1
   3b1e4:	cbnz	x3, 3b290 <PyInit__decimal@@Base+0x20d10>
   3b1e8:	cmp	x2, x1
   3b1ec:	b.ls	3b3b4 <PyInit__decimal@@Base+0x20e34>  // b.plast
   3b1f0:	clz	x0, x2
   3b1f4:	cbz	x0, 3b210 <PyInit__decimal@@Base+0x20c90>
   3b1f8:	neg	w1, w0
   3b1fc:	lsl	x3, x5, x0
   3b200:	lsl	x4, x2, x0
   3b204:	lsr	x5, x7, x1
   3b208:	orr	x5, x5, x3
   3b20c:	lsl	x7, x7, x0
   3b210:	lsr	x2, x4, #32
   3b214:	and	x8, x4, #0xffffffff
   3b218:	udiv	x3, x5, x2
   3b21c:	mov	x0, x3
   3b220:	msub	x3, x3, x2, x5
   3b224:	mul	x5, x8, x0
   3b228:	extr	x1, x3, x7, #32
   3b22c:	cmp	x5, x1
   3b230:	b.ls	3b244 <PyInit__decimal@@Base+0x20cc4>  // b.plast
   3b234:	adds	x1, x4, x1
   3b238:	ccmp	x5, x1, #0x0, cc  // cc = lo, ul, last
   3b23c:	b.hi	3b528 <PyInit__decimal@@Base+0x20fa8>  // b.pmore
   3b240:	sub	x0, x0, #0x1
   3b244:	sub	x1, x1, x5
   3b248:	udiv	x5, x1, x2
   3b24c:	msub	x1, x5, x2, x1
   3b250:	mov	x2, x7
   3b254:	mul	x8, x8, x5
   3b258:	mov	x3, x5
   3b25c:	bfi	x2, x1, #32, #32
   3b260:	cmp	x8, x2
   3b264:	b.ls	3b278 <PyInit__decimal@@Base+0x20cf8>  // b.plast
   3b268:	adds	x2, x4, x2
   3b26c:	ccmp	x8, x2, #0x0, cc  // cc = lo, ul, last
   3b270:	cinc	x3, x5, ls  // ls = plast
   3b274:	sub	x3, x3, #0x2
   3b278:	orr	x0, x3, x0, lsl #32
   3b27c:	mov	x1, #0x0                   	// #0
   3b280:	cbz	x6, 3b28c <PyInit__decimal@@Base+0x20d0c>
   3b284:	negs	x0, x0
   3b288:	ngc	x1, x1
   3b28c:	ret
   3b290:	cmp	x3, x1
   3b294:	b.ls	3b2b4 <PyInit__decimal@@Base+0x20d34>  // b.plast
   3b298:	mov	x1, #0x0                   	// #0
   3b29c:	mov	x0, #0x0                   	// #0
   3b2a0:	b	3b280 <PyInit__decimal@@Base+0x20d00>
   3b2a4:	negs	x0, x0
   3b2a8:	mov	x6, #0xffffffffffffffff    	// #-1
   3b2ac:	ngc	x1, x1
   3b2b0:	b	3b1c8 <PyInit__decimal@@Base+0x20c48>
   3b2b4:	clz	x8, x3
   3b2b8:	cbz	x8, 3b4d0 <PyInit__decimal@@Base+0x20f50>
   3b2bc:	mov	x4, #0x40                  	// #64
   3b2c0:	sub	x4, x4, x8
   3b2c4:	lsl	x3, x3, x8
   3b2c8:	lsr	x5, x2, x4
   3b2cc:	orr	x3, x5, x3
   3b2d0:	lsr	x7, x1, x4
   3b2d4:	and	x9, x3, #0xffffffff
   3b2d8:	lsr	x11, x3, #32
   3b2dc:	lsl	x1, x1, x8
   3b2e0:	lsr	x4, x0, x4
   3b2e4:	orr	x4, x4, x1
   3b2e8:	lsl	x2, x2, x8
   3b2ec:	udiv	x5, x7, x11
   3b2f0:	mov	x1, x5
   3b2f4:	msub	x5, x5, x11, x7
   3b2f8:	mul	x7, x9, x1
   3b2fc:	extr	x5, x5, x4, #32
   3b300:	cmp	x7, x5
   3b304:	b.ls	3b318 <PyInit__decimal@@Base+0x20d98>  // b.plast
   3b308:	adds	x5, x3, x5
   3b30c:	ccmp	x7, x5, #0x0, cc  // cc = lo, ul, last
   3b310:	b.hi	3b510 <PyInit__decimal@@Base+0x20f90>  // b.pmore
   3b314:	sub	x1, x1, #0x1
   3b318:	sub	x7, x5, x7
   3b31c:	udiv	x10, x7, x11
   3b320:	msub	x7, x10, x11, x7
   3b324:	mov	x5, x10
   3b328:	mul	x9, x9, x10
   3b32c:	bfi	x4, x7, #32, #32
   3b330:	cmp	x9, x4
   3b334:	b.ls	3b348 <PyInit__decimal@@Base+0x20dc8>  // b.plast
   3b338:	adds	x4, x3, x4
   3b33c:	ccmp	x9, x4, #0x0, cc  // cc = lo, ul, last
   3b340:	b.hi	3b4f8 <PyInit__decimal@@Base+0x20f78>  // b.pmore
   3b344:	sub	x5, x10, #0x1
   3b348:	orr	x1, x5, x1, lsl #32
   3b34c:	and	x10, x2, #0xffffffff
   3b350:	mov	w5, w5
   3b354:	lsr	x2, x2, #32
   3b358:	lsr	x7, x1, #32
   3b35c:	sub	x4, x4, x9
   3b360:	mov	x11, #0x100000000           	// #4294967296
   3b364:	mul	x12, x5, x10
   3b368:	mul	x9, x7, x10
   3b36c:	madd	x5, x5, x2, x9
   3b370:	mul	x2, x7, x2
   3b374:	add	x3, x5, x12, lsr #32
   3b378:	add	x5, x2, x11
   3b37c:	cmp	x9, x3
   3b380:	csel	x2, x5, x2, hi  // hi = pmore
   3b384:	add	x2, x2, x3, lsr #32
   3b388:	cmp	x4, x2
   3b38c:	b.cc	3b3a8 <PyInit__decimal@@Base+0x20e28>  // b.lo, b.ul, b.last
   3b390:	and	x12, x12, #0xffffffff
   3b394:	lsl	x0, x0, x8
   3b398:	add	x3, x12, x3, lsl #32
   3b39c:	cmp	x0, x3
   3b3a0:	ccmp	x4, x2, #0x0, cc  // cc = lo, ul, last
   3b3a4:	b.ne	3b4e0 <PyInit__decimal@@Base+0x20f60>  // b.any
   3b3a8:	sub	x0, x1, #0x1
   3b3ac:	mov	x1, #0x0                   	// #0
   3b3b0:	b	3b280 <PyInit__decimal@@Base+0x20d00>
   3b3b4:	cbnz	x2, 3b3c0 <PyInit__decimal@@Base+0x20e40>
   3b3b8:	mov	x2, #0x1                   	// #1
   3b3bc:	udiv	x4, x2, x3
   3b3c0:	clz	x8, x4
   3b3c4:	cbnz	x8, 3b440 <PyInit__decimal@@Base+0x20ec0>
   3b3c8:	lsr	x11, x4, #32
   3b3cc:	and	x10, x4, #0xffffffff
   3b3d0:	sub	x3, x1, x4
   3b3d4:	mov	x1, #0x1                   	// #1
   3b3d8:	udiv	x5, x3, x11
   3b3dc:	mov	x0, x5
   3b3e0:	msub	x5, x5, x11, x3
   3b3e4:	mul	x2, x0, x10
   3b3e8:	extr	x3, x5, x7, #32
   3b3ec:	cmp	x2, x3
   3b3f0:	b.ls	3b404 <PyInit__decimal@@Base+0x20e84>  // b.plast
   3b3f4:	adds	x3, x4, x3
   3b3f8:	ccmp	x2, x3, #0x0, cc  // cc = lo, ul, last
   3b3fc:	b.hi	3b51c <PyInit__decimal@@Base+0x20f9c>  // b.pmore
   3b400:	sub	x0, x0, #0x1
   3b404:	sub	x3, x3, x2
   3b408:	mov	x2, x7
   3b40c:	udiv	x9, x3, x11
   3b410:	msub	x3, x9, x11, x3
   3b414:	mov	x8, x9
   3b418:	mul	x5, x9, x10
   3b41c:	bfi	x2, x3, #32, #32
   3b420:	cmp	x5, x2
   3b424:	b.ls	3b438 <PyInit__decimal@@Base+0x20eb8>  // b.plast
   3b428:	adds	x2, x4, x2
   3b42c:	ccmp	x5, x2, #0x0, cc  // cc = lo, ul, last
   3b430:	cinc	x8, x9, ls  // ls = plast
   3b434:	sub	x8, x8, #0x2
   3b438:	orr	x0, x8, x0, lsl #32
   3b43c:	b	3b280 <PyInit__decimal@@Base+0x20d00>
   3b440:	lsl	x4, x4, x8
   3b444:	mov	x2, #0x40                  	// #64
   3b448:	sub	x2, x2, x8
   3b44c:	lsr	x11, x4, #32
   3b450:	lsl	x3, x1, x8
   3b454:	and	x10, x4, #0xffffffff
   3b458:	lsr	x1, x1, x2
   3b45c:	lsr	x5, x0, x2
   3b460:	orr	x5, x5, x3
   3b464:	udiv	x2, x1, x11
   3b468:	lsl	x7, x0, x8
   3b46c:	msub	x1, x2, x11, x1
   3b470:	mov	x0, x2
   3b474:	mul	x2, x10, x2
   3b478:	extr	x1, x1, x5, #32
   3b47c:	cmp	x2, x1
   3b480:	b.ls	3b494 <PyInit__decimal@@Base+0x20f14>  // b.plast
   3b484:	adds	x1, x4, x1
   3b488:	ccmp	x2, x1, #0x0, cc  // cc = lo, ul, last
   3b48c:	b.hi	3b4ec <PyInit__decimal@@Base+0x20f6c>  // b.pmore
   3b490:	sub	x0, x0, #0x1
   3b494:	sub	x1, x1, x2
   3b498:	udiv	x2, x1, x11
   3b49c:	msub	x1, x2, x11, x1
   3b4a0:	mov	x8, x2
   3b4a4:	mul	x3, x10, x2
   3b4a8:	bfi	x5, x1, #32, #32
   3b4ac:	cmp	x3, x5
   3b4b0:	b.ls	3b4c4 <PyInit__decimal@@Base+0x20f44>  // b.plast
   3b4b4:	adds	x5, x4, x5
   3b4b8:	ccmp	x3, x5, #0x0, cc  // cc = lo, ul, last
   3b4bc:	b.hi	3b504 <PyInit__decimal@@Base+0x20f84>  // b.pmore
   3b4c0:	sub	x8, x2, #0x1
   3b4c4:	sub	x3, x5, x3
   3b4c8:	orr	x1, x8, x0, lsl #32
   3b4cc:	b	3b3d8 <PyInit__decimal@@Base+0x20e58>
   3b4d0:	ccmp	x2, x0, #0x0, cs  // cs = hs, nlast
   3b4d4:	mov	x1, #0x0                   	// #0
   3b4d8:	cset	x0, ls  // ls = plast
   3b4dc:	b	3b280 <PyInit__decimal@@Base+0x20d00>
   3b4e0:	mov	x0, x1
   3b4e4:	mov	x1, #0x0                   	// #0
   3b4e8:	b	3b280 <PyInit__decimal@@Base+0x20d00>
   3b4ec:	sub	x0, x0, #0x2
   3b4f0:	add	x1, x1, x4
   3b4f4:	b	3b494 <PyInit__decimal@@Base+0x20f14>
   3b4f8:	sub	x5, x10, #0x2
   3b4fc:	add	x4, x4, x3
   3b500:	b	3b348 <PyInit__decimal@@Base+0x20dc8>
   3b504:	sub	x8, x2, #0x2
   3b508:	add	x5, x5, x4
   3b50c:	b	3b4c4 <PyInit__decimal@@Base+0x20f44>
   3b510:	sub	x1, x1, #0x2
   3b514:	add	x5, x5, x3
   3b518:	b	3b318 <PyInit__decimal@@Base+0x20d98>
   3b51c:	sub	x0, x0, #0x2
   3b520:	add	x3, x3, x4
   3b524:	b	3b404 <PyInit__decimal@@Base+0x20e84>
   3b528:	sub	x0, x0, #0x2
   3b52c:	add	x1, x1, x4
   3b530:	b	3b244 <PyInit__decimal@@Base+0x20cc4>
   3b534:	nop
   3b538:	mov	x4, x2
   3b53c:	mov	x5, x0
   3b540:	mov	x6, x1
   3b544:	cbnz	x3, 3b5e0 <PyInit__decimal@@Base+0x21060>
   3b548:	cmp	x2, x1
   3b54c:	b.ls	3b6f4 <PyInit__decimal@@Base+0x21174>  // b.plast
   3b550:	clz	x0, x2
   3b554:	cbz	x0, 3b570 <PyInit__decimal@@Base+0x20ff0>
   3b558:	neg	w1, w0
   3b55c:	lsl	x2, x6, x0
   3b560:	lsl	x4, x4, x0
   3b564:	lsr	x6, x5, x1
   3b568:	orr	x6, x6, x2
   3b56c:	lsl	x5, x5, x0
   3b570:	lsr	x3, x4, #32
   3b574:	and	x7, x4, #0xffffffff
   3b578:	udiv	x2, x6, x3
   3b57c:	mov	x0, x2
   3b580:	msub	x2, x2, x3, x6
   3b584:	mul	x6, x7, x0
   3b588:	extr	x1, x2, x5, #32
   3b58c:	cmp	x6, x1
   3b590:	b.ls	3b5a4 <PyInit__decimal@@Base+0x21024>  // b.plast
   3b594:	adds	x1, x4, x1
   3b598:	ccmp	x6, x1, #0x0, cc  // cc = lo, ul, last
   3b59c:	b.hi	3b864 <PyInit__decimal@@Base+0x212e4>  // b.pmore
   3b5a0:	sub	x0, x0, #0x1
   3b5a4:	sub	x1, x1, x6
   3b5a8:	udiv	x6, x1, x3
   3b5ac:	msub	x1, x6, x3, x1
   3b5b0:	mov	x2, x6
   3b5b4:	mul	x7, x7, x6
   3b5b8:	bfi	x5, x1, #32, #32
   3b5bc:	cmp	x7, x5
   3b5c0:	b.ls	3b5d4 <PyInit__decimal@@Base+0x21054>  // b.plast
   3b5c4:	adds	x5, x4, x5
   3b5c8:	ccmp	x7, x5, #0x0, cc  // cc = lo, ul, last
   3b5cc:	cinc	x2, x6, ls  // ls = plast
   3b5d0:	sub	x2, x2, #0x2
   3b5d4:	orr	x0, x2, x0, lsl #32
   3b5d8:	mov	x1, #0x0                   	// #0
   3b5dc:	ret
   3b5e0:	cmp	x3, x1
   3b5e4:	b.ls	3b5f4 <PyInit__decimal@@Base+0x21074>  // b.plast
   3b5e8:	mov	x1, #0x0                   	// #0
   3b5ec:	mov	x0, #0x0                   	// #0
   3b5f0:	ret
   3b5f4:	clz	x7, x3
   3b5f8:	cbz	x7, 3b80c <PyInit__decimal@@Base+0x2128c>
   3b5fc:	mov	x4, #0x40                  	// #64
   3b600:	sub	x4, x4, x7
   3b604:	lsl	x3, x3, x7
   3b608:	lsr	x5, x2, x4
   3b60c:	orr	x3, x5, x3
   3b610:	lsr	x6, x1, x4
   3b614:	and	x8, x3, #0xffffffff
   3b618:	lsr	x10, x3, #32
   3b61c:	lsr	x4, x0, x4
   3b620:	lsl	x1, x1, x7
   3b624:	orr	x1, x4, x1
   3b628:	lsl	x2, x2, x7
   3b62c:	udiv	x5, x6, x10
   3b630:	mov	x4, x5
   3b634:	msub	x5, x5, x10, x6
   3b638:	mul	x6, x8, x4
   3b63c:	extr	x5, x5, x1, #32
   3b640:	cmp	x6, x5
   3b644:	b.ls	3b658 <PyInit__decimal@@Base+0x210d8>  // b.plast
   3b648:	adds	x5, x3, x5
   3b64c:	ccmp	x6, x5, #0x0, cc  // cc = lo, ul, last
   3b650:	b.hi	3b84c <PyInit__decimal@@Base+0x212cc>  // b.pmore
   3b654:	sub	x4, x4, #0x1
   3b658:	sub	x6, x5, x6
   3b65c:	udiv	x9, x6, x10
   3b660:	msub	x6, x9, x10, x6
   3b664:	mov	x5, x9
   3b668:	mul	x8, x8, x9
   3b66c:	bfi	x1, x6, #32, #32
   3b670:	cmp	x8, x1
   3b674:	b.ls	3b688 <PyInit__decimal@@Base+0x21108>  // b.plast
   3b678:	adds	x1, x3, x1
   3b67c:	ccmp	x8, x1, #0x0, cc  // cc = lo, ul, last
   3b680:	b.hi	3b834 <PyInit__decimal@@Base+0x212b4>  // b.pmore
   3b684:	sub	x5, x9, #0x1
   3b688:	orr	x4, x5, x4, lsl #32
   3b68c:	and	x9, x2, #0xffffffff
   3b690:	mov	w5, w5
   3b694:	lsr	x2, x2, #32
   3b698:	lsr	x6, x4, #32
   3b69c:	sub	x1, x1, x8
   3b6a0:	mov	x10, #0x100000000           	// #4294967296
   3b6a4:	mul	x11, x5, x9
   3b6a8:	mul	x8, x6, x9
   3b6ac:	madd	x5, x5, x2, x8
   3b6b0:	mul	x2, x6, x2
   3b6b4:	add	x3, x5, x11, lsr #32
   3b6b8:	add	x5, x2, x10
   3b6bc:	cmp	x8, x3
   3b6c0:	csel	x2, x5, x2, hi  // hi = pmore
   3b6c4:	add	x2, x2, x3, lsr #32
   3b6c8:	cmp	x1, x2
   3b6cc:	b.cc	3b6e8 <PyInit__decimal@@Base+0x21168>  // b.lo, b.ul, b.last
   3b6d0:	and	x11, x11, #0xffffffff
   3b6d4:	lsl	x0, x0, x7
   3b6d8:	add	x3, x11, x3, lsl #32
   3b6dc:	cmp	x0, x3
   3b6e0:	ccmp	x1, x2, #0x0, cc  // cc = lo, ul, last
   3b6e4:	b.ne	3b81c <PyInit__decimal@@Base+0x2129c>  // b.any
   3b6e8:	sub	x0, x4, #0x1
   3b6ec:	mov	x1, #0x0                   	// #0
   3b6f0:	ret
   3b6f4:	cbnz	x2, 3b700 <PyInit__decimal@@Base+0x21180>
   3b6f8:	mov	x2, #0x1                   	// #1
   3b6fc:	udiv	x4, x2, x4
   3b700:	clz	x8, x4
   3b704:	cbnz	x8, 3b77c <PyInit__decimal@@Base+0x211fc>
   3b708:	lsr	x6, x4, #32
   3b70c:	and	x7, x4, #0xffffffff
   3b710:	sub	x2, x1, x4
   3b714:	mov	x1, #0x1                   	// #1
   3b718:	udiv	x3, x2, x6
   3b71c:	mov	x0, x3
   3b720:	msub	x3, x3, x6, x2
   3b724:	mul	x8, x0, x7
   3b728:	extr	x2, x3, x5, #32
   3b72c:	cmp	x8, x2
   3b730:	b.ls	3b744 <PyInit__decimal@@Base+0x211c4>  // b.plast
   3b734:	adds	x2, x4, x2
   3b738:	ccmp	x8, x2, #0x0, cc  // cc = lo, ul, last
   3b73c:	b.hi	3b858 <PyInit__decimal@@Base+0x212d8>  // b.pmore
   3b740:	sub	x0, x0, #0x1
   3b744:	sub	x2, x2, x8
   3b748:	udiv	x8, x2, x6
   3b74c:	msub	x2, x8, x6, x2
   3b750:	mov	x3, x8
   3b754:	mul	x7, x8, x7
   3b758:	bfi	x5, x2, #32, #32
   3b75c:	cmp	x7, x5
   3b760:	b.ls	3b774 <PyInit__decimal@@Base+0x211f4>  // b.plast
   3b764:	adds	x4, x4, x5
   3b768:	ccmp	x7, x4, #0x0, cc  // cc = lo, ul, last
   3b76c:	cinc	x3, x8, ls  // ls = plast
   3b770:	sub	x3, x3, #0x2
   3b774:	orr	x0, x3, x0, lsl #32
   3b778:	ret
   3b77c:	lsl	x4, x4, x8
   3b780:	mov	x3, #0x40                  	// #64
   3b784:	sub	x3, x3, x8
   3b788:	lsr	x6, x4, #32
   3b78c:	lsl	x2, x1, x8
   3b790:	and	x7, x4, #0xffffffff
   3b794:	lsr	x1, x1, x3
   3b798:	lsr	x3, x0, x3
   3b79c:	orr	x3, x3, x2
   3b7a0:	udiv	x2, x1, x6
   3b7a4:	lsl	x5, x0, x8
   3b7a8:	msub	x1, x2, x6, x1
   3b7ac:	mov	x0, x2
   3b7b0:	mul	x2, x7, x2
   3b7b4:	extr	x1, x1, x3, #32
   3b7b8:	cmp	x2, x1
   3b7bc:	b.ls	3b7d0 <PyInit__decimal@@Base+0x21250>  // b.plast
   3b7c0:	adds	x1, x4, x1
   3b7c4:	ccmp	x2, x1, #0x0, cc  // cc = lo, ul, last
   3b7c8:	b.hi	3b828 <PyInit__decimal@@Base+0x212a8>  // b.pmore
   3b7cc:	sub	x0, x0, #0x1
   3b7d0:	sub	x1, x1, x2
   3b7d4:	udiv	x2, x1, x6
   3b7d8:	msub	x1, x2, x6, x1
   3b7dc:	mov	x8, x2
   3b7e0:	mul	x2, x7, x2
   3b7e4:	bfi	x3, x1, #32, #32
   3b7e8:	cmp	x2, x3
   3b7ec:	b.ls	3b800 <PyInit__decimal@@Base+0x21280>  // b.plast
   3b7f0:	adds	x3, x4, x3
   3b7f4:	ccmp	x2, x3, #0x0, cc  // cc = lo, ul, last
   3b7f8:	b.hi	3b840 <PyInit__decimal@@Base+0x212c0>  // b.pmore
   3b7fc:	sub	x8, x8, #0x1
   3b800:	sub	x2, x3, x2
   3b804:	orr	x1, x8, x0, lsl #32
   3b808:	b	3b718 <PyInit__decimal@@Base+0x21198>
   3b80c:	ccmp	x2, x0, #0x0, cs  // cs = hs, nlast
   3b810:	mov	x1, #0x0                   	// #0
   3b814:	cset	x0, ls  // ls = plast
   3b818:	ret
   3b81c:	mov	x0, x4
   3b820:	mov	x1, #0x0                   	// #0
   3b824:	ret
   3b828:	sub	x0, x0, #0x2
   3b82c:	add	x1, x1, x4
   3b830:	b	3b7d0 <PyInit__decimal@@Base+0x21250>
   3b834:	sub	x5, x9, #0x2
   3b838:	add	x1, x1, x3
   3b83c:	b	3b688 <PyInit__decimal@@Base+0x21108>
   3b840:	sub	x8, x8, #0x2
   3b844:	add	x3, x3, x4
   3b848:	b	3b800 <PyInit__decimal@@Base+0x21280>
   3b84c:	sub	x4, x4, #0x2
   3b850:	add	x5, x5, x3
   3b854:	b	3b658 <PyInit__decimal@@Base+0x210d8>
   3b858:	sub	x0, x0, #0x2
   3b85c:	add	x2, x2, x4
   3b860:	b	3b744 <PyInit__decimal@@Base+0x211c4>
   3b864:	sub	x0, x0, #0x2
   3b868:	add	x1, x1, x4
   3b86c:	b	3b5a4 <PyInit__decimal@@Base+0x21024>

Disassembly of section .fini:

000000000003b870 <.fini>:
   3b870:	stp	x29, x30, [sp, #-16]!
   3b874:	mov	x29, sp
   3b878:	ldp	x29, x30, [sp], #16
   3b87c:	ret
