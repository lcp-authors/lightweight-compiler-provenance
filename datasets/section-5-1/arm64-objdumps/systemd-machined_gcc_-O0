
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//systemd-machined_gcc_-O0:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000404d90 <_init>:
  404d90:	stp	x29, x30, [sp, #-16]!
  404d94:	mov	x29, sp
  404d98:	bl	405c90 <call_weak_fn>
  404d9c:	ldp	x29, x30, [sp], #16
  404da0:	ret

Disassembly of section .plt:

0000000000404db0 <.plt>:
  404db0:	stp	x16, x30, [sp, #-16]!
  404db4:	adrp	x16, 431000 <machine_vtable+0x4a0>
  404db8:	ldr	x17, [x16, #2040]
  404dbc:	add	x16, x16, #0x7f8
  404dc0:	br	x17
  404dc4:	nop
  404dc8:	nop
  404dcc:	nop

0000000000404dd0 <internal_hashmap_remove@plt>:
  404dd0:	adrp	x16, 431000 <machine_vtable+0x4a0>
  404dd4:	ldr	x17, [x16, #2048]
  404dd8:	add	x16, x16, #0x800
  404ddc:	br	x17

0000000000404de0 <safe_fgetc@plt>:
  404de0:	adrp	x16, 431000 <machine_vtable+0x4a0>
  404de4:	ldr	x17, [x16, #2056]
  404de8:	add	x16, x16, #0x808
  404dec:	br	x17

0000000000404df0 <image_unref@plt>:
  404df0:	adrp	x16, 431000 <machine_vtable+0x4a0>
  404df4:	ldr	x17, [x16, #2064]
  404df8:	add	x16, x16, #0x810
  404dfc:	br	x17

0000000000404e00 <sd_bus_creds_get_pid@plt>:
  404e00:	adrp	x16, 431000 <machine_vtable+0x4a0>
  404e04:	ldr	x17, [x16, #2072]
  404e08:	add	x16, x16, #0x818
  404e0c:	br	x17

0000000000404e10 <unit_name_escape@plt>:
  404e10:	adrp	x16, 431000 <machine_vtable+0x4a0>
  404e14:	ldr	x17, [x16, #2080]
  404e18:	add	x16, x16, #0x820
  404e1c:	br	x17

0000000000404e20 <safe_fclose@plt>:
  404e20:	adrp	x16, 431000 <machine_vtable+0x4a0>
  404e24:	ldr	x17, [x16, #2088]
  404e28:	add	x16, x16, #0x828
  404e2c:	br	x17

0000000000404e30 <kill@plt>:
  404e30:	adrp	x16, 431000 <machine_vtable+0x4a0>
  404e34:	ldr	x17, [x16, #2096]
  404e38:	add	x16, x16, #0x830
  404e3c:	br	x17

0000000000404e40 <sd_bus_message_read_strv@plt>:
  404e40:	adrp	x16, 431000 <machine_vtable+0x4a0>
  404e44:	ldr	x17, [x16, #2104]
  404e48:	add	x16, x16, #0x838
  404e4c:	br	x17

0000000000404e50 <read_line_full@plt>:
  404e50:	adrp	x16, 431000 <machine_vtable+0x4a0>
  404e54:	ldr	x17, [x16, #2112]
  404e58:	add	x16, x16, #0x840
  404e5c:	br	x17

0000000000404e60 <bus_label_escape@plt>:
  404e60:	adrp	x16, 431000 <machine_vtable+0x4a0>
  404e64:	ldr	x17, [x16, #2120]
  404e68:	add	x16, x16, #0x848
  404e6c:	br	x17

0000000000404e70 <bus_error_message@plt>:
  404e70:	adrp	x16, 431000 <machine_vtable+0x4a0>
  404e74:	ldr	x17, [x16, #2128]
  404e78:	add	x16, x16, #0x850
  404e7c:	br	x17

0000000000404e80 <unit_dbus_path_from_name@plt>:
  404e80:	adrp	x16, 431000 <machine_vtable+0x4a0>
  404e84:	ldr	x17, [x16, #2136]
  404e88:	add	x16, x16, #0x858
  404e8c:	br	x17

0000000000404e90 <mkdir_errno_wrapper@plt>:
  404e90:	adrp	x16, 431000 <machine_vtable+0x4a0>
  404e94:	ldr	x17, [x16, #2144]
  404e98:	add	x16, x16, #0x860
  404e9c:	br	x17

0000000000404ea0 <sd_bus_message_new_method_call@plt>:
  404ea0:	adrp	x16, 431000 <machine_vtable+0x4a0>
  404ea4:	ldr	x17, [x16, #2152]
  404ea8:	add	x16, x16, #0x868
  404eac:	br	x17

0000000000404eb0 <sd_bus_error_is_set@plt>:
  404eb0:	adrp	x16, 431000 <machine_vtable+0x4a0>
  404eb4:	ldr	x17, [x16, #2160]
  404eb8:	add	x16, x16, #0x870
  404ebc:	br	x17

0000000000404ec0 <dual_timestamp_get@plt>:
  404ec0:	adrp	x16, 431000 <machine_vtable+0x4a0>
  404ec4:	ldr	x17, [x16, #2168]
  404ec8:	add	x16, x16, #0x878
  404ecc:	br	x17

0000000000404ed0 <unlink@plt>:
  404ed0:	adrp	x16, 431000 <machine_vtable+0x4a0>
  404ed4:	ldr	x17, [x16, #2176]
  404ed8:	add	x16, x16, #0x880
  404edc:	br	x17

0000000000404ee0 <internal_hashmap_free@plt>:
  404ee0:	adrp	x16, 431000 <machine_vtable+0x4a0>
  404ee4:	ldr	x17, [x16, #2184]
  404ee8:	add	x16, x16, #0x888
  404eec:	br	x17

0000000000404ef0 <image_find@plt>:
  404ef0:	adrp	x16, 431000 <machine_vtable+0x4a0>
  404ef4:	ldr	x17, [x16, #2192]
  404ef8:	add	x16, x16, #0x890
  404efc:	br	x17

0000000000404f00 <sd_bus_reply_method_return@plt>:
  404f00:	adrp	x16, 431000 <machine_vtable+0x4a0>
  404f04:	ldr	x17, [x16, #2200]
  404f08:	add	x16, x16, #0x898
  404f0c:	br	x17

0000000000404f10 <local_addresses@plt>:
  404f10:	adrp	x16, 431000 <machine_vtable+0x4a0>
  404f14:	ldr	x17, [x16, #2208]
  404f18:	add	x16, x16, #0x8a0
  404f1c:	br	x17

0000000000404f20 <strcmp_ptr@plt>:
  404f20:	adrp	x16, 431000 <machine_vtable+0x4a0>
  404f24:	ldr	x17, [x16, #2216]
  404f28:	add	x16, x16, #0x8a8
  404f2c:	br	x17

0000000000404f30 <fchmod@plt>:
  404f30:	adrp	x16, 431000 <machine_vtable+0x4a0>
  404f34:	ldr	x17, [x16, #2224]
  404f38:	add	x16, x16, #0x8b0
  404f3c:	br	x17

0000000000404f40 <setns@plt>:
  404f40:	adrp	x16, 431000 <machine_vtable+0x4a0>
  404f44:	ldr	x17, [x16, #2232]
  404f48:	add	x16, x16, #0x8b8
  404f4c:	br	x17

0000000000404f50 <stpcpy@plt>:
  404f50:	adrp	x16, 431000 <machine_vtable+0x4a0>
  404f54:	ldr	x17, [x16, #2240]
  404f58:	add	x16, x16, #0x8c0
  404f5c:	br	x17

0000000000404f60 <sd_event_add_child@plt>:
  404f60:	adrp	x16, 431000 <machine_vtable+0x4a0>
  404f64:	ldr	x17, [x16, #2248]
  404f68:	add	x16, x16, #0x8c8
  404f6c:	br	x17

0000000000404f70 <__libc_start_main@plt>:
  404f70:	adrp	x16, 431000 <machine_vtable+0x4a0>
  404f74:	ldr	x17, [x16, #2256]
  404f78:	add	x16, x16, #0x8d0
  404f7c:	br	x17

0000000000404f80 <send_one_fd_iov_sa@plt>:
  404f80:	adrp	x16, 431000 <machine_vtable+0x4a0>
  404f84:	ldr	x17, [x16, #2264]
  404f88:	add	x16, x16, #0x8d8
  404f8c:	br	x17

0000000000404f90 <sd_event_set_watchdog@plt>:
  404f90:	adrp	x16, 431000 <machine_vtable+0x4a0>
  404f94:	ldr	x17, [x16, #2272]
  404f98:	add	x16, x16, #0x8e0
  404f9c:	br	x17

0000000000404fa0 <fdopen@plt>:
  404fa0:	adrp	x16, 431000 <machine_vtable+0x4a0>
  404fa4:	ldr	x17, [x16, #2280]
  404fa8:	add	x16, x16, #0x8e8
  404fac:	br	x17

0000000000404fb0 <lseek64@plt>:
  404fb0:	adrp	x16, 431000 <machine_vtable+0x4a0>
  404fb4:	ldr	x17, [x16, #2288]
  404fb8:	add	x16, x16, #0x8f0
  404fbc:	br	x17

0000000000404fc0 <load_os_release_pairs@plt>:
  404fc0:	adrp	x16, 431000 <machine_vtable+0x4a0>
  404fc4:	ldr	x17, [x16, #2296]
  404fc8:	add	x16, x16, #0x8f8
  404fcc:	br	x17

0000000000404fd0 <sd_bus_message_unref@plt>:
  404fd0:	adrp	x16, 431000 <machine_vtable+0x4a0>
  404fd4:	ldr	x17, [x16, #2304]
  404fd8:	add	x16, x16, #0x900
  404fdc:	br	x17

0000000000404fe0 <sd_bus_message_enter_container@plt>:
  404fe0:	adrp	x16, 431000 <machine_vtable+0x4a0>
  404fe4:	ldr	x17, [x16, #2312]
  404fe8:	add	x16, x16, #0x908
  404fec:	br	x17

0000000000404ff0 <sd_id128_from_string@plt>:
  404ff0:	adrp	x16, 431000 <machine_vtable+0x4a0>
  404ff4:	ldr	x17, [x16, #2320]
  404ff8:	add	x16, x16, #0x910
  404ffc:	br	x17

0000000000405000 <sd_bus_request_name_async@plt>:
  405000:	adrp	x16, 431000 <machine_vtable+0x4a0>
  405004:	ldr	x17, [x16, #2328]
  405008:	add	x16, x16, #0x918
  40500c:	br	x17

0000000000405010 <sd_bus_creds_unref@plt>:
  405010:	adrp	x16, 431000 <machine_vtable+0x4a0>
  405014:	ldr	x17, [x16, #2336]
  405018:	add	x16, x16, #0x920
  40501c:	br	x17

0000000000405020 <dirname@plt>:
  405020:	adrp	x16, 431000 <machine_vtable+0x4a0>
  405024:	ldr	x17, [x16, #2344]
  405028:	add	x16, x16, #0x928
  40502c:	br	x17

0000000000405030 <sd_bus_close_unref@plt>:
  405030:	adrp	x16, 431000 <machine_vtable+0x4a0>
  405034:	ldr	x17, [x16, #2352]
  405038:	add	x16, x16, #0x930
  40503c:	br	x17

0000000000405040 <fileno@plt>:
  405040:	adrp	x16, 431000 <machine_vtable+0x4a0>
  405044:	ldr	x17, [x16, #2360]
  405048:	add	x16, x16, #0x938
  40504c:	br	x17

0000000000405050 <__gmon_start__@plt>:
  405050:	adrp	x16, 431000 <machine_vtable+0x4a0>
  405054:	ldr	x17, [x16, #2368]
  405058:	add	x16, x16, #0x940
  40505c:	br	x17

0000000000405060 <cescape@plt>:
  405060:	adrp	x16, 431000 <machine_vtable+0x4a0>
  405064:	ldr	x17, [x16, #2376]
  405068:	add	x16, x16, #0x948
  40506c:	br	x17

0000000000405070 <sd_bus_error_set_errnof@plt>:
  405070:	adrp	x16, 431000 <machine_vtable+0x4a0>
  405074:	ldr	x17, [x16, #2384]
  405078:	add	x16, x16, #0x950
  40507c:	br	x17

0000000000405080 <chase_symlinks@plt>:
  405080:	adrp	x16, 431000 <machine_vtable+0x4a0>
  405084:	ldr	x17, [x16, #2392]
  405088:	add	x16, x16, #0x958
  40508c:	br	x17

0000000000405090 <rename@plt>:
  405090:	adrp	x16, 431000 <machine_vtable+0x4a0>
  405094:	ldr	x17, [x16, #2400]
  405098:	add	x16, x16, #0x960
  40509c:	br	x17

00000000004050a0 <polkit_agent_close@plt>:
  4050a0:	adrp	x16, 431000 <machine_vtable+0x4a0>
  4050a4:	ldr	x17, [x16, #2408]
  4050a8:	add	x16, x16, #0x968
  4050ac:	br	x17

00000000004050b0 <sd_event_default@plt>:
  4050b0:	adrp	x16, 431000 <machine_vtable+0x4a0>
  4050b4:	ldr	x17, [x16, #2416]
  4050b8:	add	x16, x16, #0x970
  4050bc:	br	x17

00000000004050c0 <bus_event_loop_with_idle@plt>:
  4050c0:	adrp	x16, 431000 <machine_vtable+0x4a0>
  4050c4:	ldr	x17, [x16, #2424]
  4050c8:	add	x16, x16, #0x978
  4050cc:	br	x17

00000000004050d0 <sd_bus_message_new_method_return@plt>:
  4050d0:	adrp	x16, 431000 <machine_vtable+0x4a0>
  4050d4:	ldr	x17, [x16, #2432]
  4050d8:	add	x16, x16, #0x980
  4050dc:	br	x17

00000000004050e0 <free_and_strdup@plt>:
  4050e0:	adrp	x16, 431000 <machine_vtable+0x4a0>
  4050e4:	ldr	x17, [x16, #2440]
  4050e8:	add	x16, x16, #0x988
  4050ec:	br	x17

00000000004050f0 <hidden_or_backup_file@plt>:
  4050f0:	adrp	x16, 431000 <machine_vtable+0x4a0>
  4050f4:	ldr	x17, [x16, #2448]
  4050f8:	add	x16, x16, #0x990
  4050fc:	br	x17

0000000000405100 <bus_verify_polkit_async_registry_free@plt>:
  405100:	adrp	x16, 431000 <machine_vtable+0x4a0>
  405104:	ldr	x17, [x16, #2456]
  405108:	add	x16, x16, #0x998
  40510c:	br	x17

0000000000405110 <snprintf@plt>:
  405110:	adrp	x16, 431000 <machine_vtable+0x4a0>
  405114:	ldr	x17, [x16, #2464]
  405118:	add	x16, x16, #0x9a0
  40511c:	br	x17

0000000000405120 <path_equal@plt>:
  405120:	adrp	x16, 431000 <machine_vtable+0x4a0>
  405124:	ldr	x17, [x16, #2472]
  405128:	add	x16, x16, #0x9a8
  40512c:	br	x17

0000000000405130 <namespace_open@plt>:
  405130:	adrp	x16, 431000 <machine_vtable+0x4a0>
  405134:	ldr	x17, [x16, #2480]
  405138:	add	x16, x16, #0x9b0
  40513c:	br	x17

0000000000405140 <sd_bus_message_open_container@plt>:
  405140:	adrp	x16, 431000 <machine_vtable+0x4a0>
  405144:	ldr	x17, [x16, #2488]
  405148:	add	x16, x16, #0x9b8
  40514c:	br	x17

0000000000405150 <sd_bus_message_append_array@plt>:
  405150:	adrp	x16, 431000 <machine_vtable+0x4a0>
  405154:	ldr	x17, [x16, #2496]
  405158:	add	x16, x16, #0x9c0
  40515c:	br	x17

0000000000405160 <getpid_cached@plt>:
  405160:	adrp	x16, 431000 <machine_vtable+0x4a0>
  405164:	ldr	x17, [x16, #2504]
  405168:	add	x16, x16, #0x9c8
  40516c:	br	x17

0000000000405170 <fprintf@plt>:
  405170:	adrp	x16, 431000 <machine_vtable+0x4a0>
  405174:	ldr	x17, [x16, #2512]
  405178:	add	x16, x16, #0x9d0
  40517c:	br	x17

0000000000405180 <sd_bus_message_get_member@plt>:
  405180:	adrp	x16, 431000 <machine_vtable+0x4a0>
  405184:	ldr	x17, [x16, #2520]
  405188:	add	x16, x16, #0x9d8
  40518c:	br	x17

0000000000405190 <memcpy@plt>:
  405190:	adrp	x16, 431000 <machine_vtable+0x4a0>
  405194:	ldr	x17, [x16, #2528]
  405198:	add	x16, x16, #0x9e0
  40519c:	br	x17

00000000004051a0 <openpt_allocate@plt>:
  4051a0:	adrp	x16, 431000 <machine_vtable+0x4a0>
  4051a4:	ldr	x17, [x16, #2536]
  4051a8:	add	x16, x16, #0x9e8
  4051ac:	br	x17

00000000004051b0 <image_type_to_string@plt>:
  4051b0:	adrp	x16, 431000 <machine_vtable+0x4a0>
  4051b4:	ldr	x17, [x16, #2544]
  4051b8:	add	x16, x16, #0x9f0
  4051bc:	br	x17

00000000004051c0 <fread@plt>:
  4051c0:	adrp	x16, 431000 <machine_vtable+0x4a0>
  4051c4:	ldr	x17, [x16, #2552]
  4051c8:	add	x16, x16, #0x9f8
  4051cc:	br	x17

00000000004051d0 <sd_event_source_unref@plt>:
  4051d0:	adrp	x16, 431000 <machine_vtable+0x4a0>
  4051d4:	ldr	x17, [x16, #2560]
  4051d8:	add	x16, x16, #0xa00
  4051dc:	br	x17

00000000004051e0 <symlink@plt>:
  4051e0:	adrp	x16, 431000 <machine_vtable+0x4a0>
  4051e4:	ldr	x17, [x16, #2568]
  4051e8:	add	x16, x16, #0xa08
  4051ec:	br	x17

00000000004051f0 <sd_bus_message_append@plt>:
  4051f0:	adrp	x16, 431000 <machine_vtable+0x4a0>
  4051f4:	ldr	x17, [x16, #2576]
  4051f8:	add	x16, x16, #0xa10
  4051fc:	br	x17

0000000000405200 <hostname_is_valid@plt>:
  405200:	adrp	x16, 431000 <machine_vtable+0x4a0>
  405204:	ldr	x17, [x16, #2584]
  405208:	add	x16, x16, #0xa18
  40520c:	br	x17

0000000000405210 <dual_timestamp_from_boottime_or_monotonic@plt>:
  405210:	adrp	x16, 431000 <machine_vtable+0x4a0>
  405214:	ldr	x17, [x16, #2592]
  405218:	add	x16, x16, #0xa20
  40521c:	br	x17

0000000000405220 <log_setup_service@plt>:
  405220:	adrp	x16, 431000 <machine_vtable+0x4a0>
  405224:	ldr	x17, [x16, #2600]
  405228:	add	x16, x16, #0xa28
  40522c:	br	x17

0000000000405230 <strjoin_real@plt>:
  405230:	adrp	x16, 431000 <machine_vtable+0x4a0>
  405234:	ldr	x17, [x16, #2608]
  405238:	add	x16, x16, #0xa30
  40523c:	br	x17

0000000000405240 <safe_close@plt>:
  405240:	adrp	x16, 431000 <machine_vtable+0x4a0>
  405244:	ldr	x17, [x16, #2616]
  405248:	add	x16, x16, #0xa38
  40524c:	br	x17

0000000000405250 <strv_env_is_valid@plt>:
  405250:	adrp	x16, 431000 <machine_vtable+0x4a0>
  405254:	ldr	x17, [x16, #2624]
  405258:	add	x16, x16, #0xa40
  40525c:	br	x17

0000000000405260 <image_read_only@plt>:
  405260:	adrp	x16, 431000 <machine_vtable+0x4a0>
  405264:	ldr	x17, [x16, #2632]
  405268:	add	x16, x16, #0xa48
  40526c:	br	x17

0000000000405270 <safe_close_pair@plt>:
  405270:	adrp	x16, 431000 <machine_vtable+0x4a0>
  405274:	ldr	x17, [x16, #2640]
  405278:	add	x16, x16, #0xa50
  40527c:	br	x17

0000000000405280 <sigkill_wait@plt>:
  405280:	adrp	x16, 431000 <machine_vtable+0x4a0>
  405284:	ldr	x17, [x16, #2648]
  405288:	add	x16, x16, #0xa58
  40528c:	br	x17

0000000000405290 <open_parent@plt>:
  405290:	adrp	x16, 431000 <machine_vtable+0x4a0>
  405294:	ldr	x17, [x16, #2656]
  405298:	add	x16, x16, #0xa60
  40529c:	br	x17

00000000004052a0 <log_assert_failed_realm@plt>:
  4052a0:	adrp	x16, 431000 <machine_vtable+0x4a0>
  4052a4:	ldr	x17, [x16, #2664]
  4052a8:	add	x16, x16, #0xa68
  4052ac:	br	x17

00000000004052b0 <sd_bus_message_read@plt>:
  4052b0:	adrp	x16, 431000 <machine_vtable+0x4a0>
  4052b4:	ldr	x17, [x16, #2672]
  4052b8:	add	x16, x16, #0xa70
  4052bc:	br	x17

00000000004052c0 <faccessat@plt>:
  4052c0:	adrp	x16, 431000 <machine_vtable+0x4a0>
  4052c4:	ldr	x17, [x16, #2680]
  4052c8:	add	x16, x16, #0xa78
  4052cc:	br	x17

00000000004052d0 <readdir64@plt>:
  4052d0:	adrp	x16, 431000 <machine_vtable+0x4a0>
  4052d4:	ldr	x17, [x16, #2688]
  4052d8:	add	x16, x16, #0xa80
  4052dc:	br	x17

00000000004052e0 <sd_bus_get_property@plt>:
  4052e0:	adrp	x16, 431000 <machine_vtable+0x4a0>
  4052e4:	ldr	x17, [x16, #2696]
  4052e8:	add	x16, x16, #0xa88
  4052ec:	br	x17

00000000004052f0 <strstr@plt>:
  4052f0:	adrp	x16, 431000 <machine_vtable+0x4a0>
  4052f4:	ldr	x17, [x16, #2704]
  4052f8:	add	x16, x16, #0xa90
  4052fc:	br	x17

0000000000405300 <_exit@plt>:
  405300:	adrp	x16, 431000 <machine_vtable+0x4a0>
  405304:	ldr	x17, [x16, #2712]
  405308:	add	x16, x16, #0xa98
  40530c:	br	x17

0000000000405310 <sd_event_source_set_enabled@plt>:
  405310:	adrp	x16, 431000 <machine_vtable+0x4a0>
  405314:	ldr	x17, [x16, #2720]
  405318:	add	x16, x16, #0xaa0
  40531c:	br	x17

0000000000405320 <umask@plt>:
  405320:	adrp	x16, 431000 <machine_vtable+0x4a0>
  405324:	ldr	x17, [x16, #2728]
  405328:	add	x16, x16, #0xaa8
  40532c:	br	x17

0000000000405330 <sd_bus_attach_event@plt>:
  405330:	adrp	x16, 431000 <machine_vtable+0x4a0>
  405334:	ldr	x17, [x16, #2736]
  405338:	add	x16, x16, #0xab0
  40533c:	br	x17

0000000000405340 <path_is_absolute@plt>:
  405340:	adrp	x16, 431000 <machine_vtable+0x4a0>
  405344:	ldr	x17, [x16, #2744]
  405348:	add	x16, x16, #0xab8
  40534c:	br	x17

0000000000405350 <fputc@plt>:
  405350:	adrp	x16, 431000 <machine_vtable+0x4a0>
  405354:	ldr	x17, [x16, #2752]
  405358:	add	x16, x16, #0xac0
  40535c:	br	x17

0000000000405360 <closedir@plt>:
  405360:	adrp	x16, 431000 <machine_vtable+0x4a0>
  405364:	ldr	x17, [x16, #2760]
  405368:	add	x16, x16, #0xac8
  40536c:	br	x17

0000000000405370 <strncmp@plt>:
  405370:	adrp	x16, 431000 <machine_vtable+0x4a0>
  405374:	ldr	x17, [x16, #2768]
  405378:	add	x16, x16, #0xad0
  40537c:	br	x17

0000000000405380 <path_is_normalized@plt>:
  405380:	adrp	x16, 431000 <machine_vtable+0x4a0>
  405384:	ldr	x17, [x16, #2776]
  405388:	add	x16, x16, #0xad8
  40538c:	br	x17

0000000000405390 <sigprocmask_many@plt>:
  405390:	adrp	x16, 431000 <machine_vtable+0x4a0>
  405394:	ldr	x17, [x16, #2784]
  405398:	add	x16, x16, #0xae0
  40539c:	br	x17

00000000004053a0 <abort@plt>:
  4053a0:	adrp	x16, 431000 <machine_vtable+0x4a0>
  4053a4:	ldr	x17, [x16, #2792]
  4053a8:	add	x16, x16, #0xae8
  4053ac:	br	x17

00000000004053b0 <greedy_realloc@plt>:
  4053b0:	adrp	x16, 431000 <machine_vtable+0x4a0>
  4053b4:	ldr	x17, [x16, #2800]
  4053b8:	add	x16, x16, #0xaf0
  4053bc:	br	x17

00000000004053c0 <namespace_fork@plt>:
  4053c0:	adrp	x16, 431000 <machine_vtable+0x4a0>
  4053c4:	ldr	x17, [x16, #2808]
  4053c8:	add	x16, x16, #0xaf8
  4053cc:	br	x17

00000000004053d0 <__isoc99_fscanf@plt>:
  4053d0:	adrp	x16, 431000 <machine_vtable+0x4a0>
  4053d4:	ldr	x17, [x16, #2816]
  4053d8:	add	x16, x16, #0xb00
  4053dc:	br	x17

00000000004053e0 <memdup@plt>:
  4053e0:	adrp	x16, 431000 <machine_vtable+0x4a0>
  4053e4:	ldr	x17, [x16, #2824]
  4053e8:	add	x16, x16, #0xb08
  4053ec:	br	x17

00000000004053f0 <open_tmpfile_unlinkable@plt>:
  4053f0:	adrp	x16, 431000 <machine_vtable+0x4a0>
  4053f4:	ldr	x17, [x16, #2832]
  4053f8:	add	x16, x16, #0xb10
  4053fc:	br	x17

0000000000405400 <strv_new_internal@plt>:
  405400:	adrp	x16, 431000 <machine_vtable+0x4a0>
  405404:	ldr	x17, [x16, #2840]
  405408:	add	x16, x16, #0xb18
  40540c:	br	x17

0000000000405410 <sd_bus_match_signal_async@plt>:
  405410:	adrp	x16, 431000 <machine_vtable+0x4a0>
  405414:	ldr	x17, [x16, #2848]
  405418:	add	x16, x16, #0xb20
  40541c:	br	x17

0000000000405420 <uid_is_valid@plt>:
  405420:	adrp	x16, 431000 <machine_vtable+0x4a0>
  405424:	ldr	x17, [x16, #2856]
  405428:	add	x16, x16, #0xb28
  40542c:	br	x17

0000000000405430 <internal_hashmap_get@plt>:
  405430:	adrp	x16, 431000 <machine_vtable+0x4a0>
  405434:	ldr	x17, [x16, #2864]
  405438:	add	x16, x16, #0xb30
  40543c:	br	x17

0000000000405440 <rmdir@plt>:
  405440:	adrp	x16, 431000 <machine_vtable+0x4a0>
  405444:	ldr	x17, [x16, #2872]
  405448:	add	x16, x16, #0xb38
  40544c:	br	x17

0000000000405450 <fopen_temporary@plt>:
  405450:	adrp	x16, 431000 <machine_vtable+0x4a0>
  405454:	ldr	x17, [x16, #2880]
  405458:	add	x16, x16, #0xb40
  40545c:	br	x17

0000000000405460 <ferror@plt>:
  405460:	adrp	x16, 431000 <machine_vtable+0x4a0>
  405464:	ldr	x17, [x16, #2888]
  405468:	add	x16, x16, #0xb48
  40546c:	br	x17

0000000000405470 <openpt_allocate_in_namespace@plt>:
  405470:	adrp	x16, 431000 <machine_vtable+0x4a0>
  405474:	ldr	x17, [x16, #2896]
  405478:	add	x16, x16, #0xb50
  40547c:	br	x17

0000000000405480 <strv_consume@plt>:
  405480:	adrp	x16, 431000 <machine_vtable+0x4a0>
  405484:	ldr	x17, [x16, #2904]
  405488:	add	x16, x16, #0xb58
  40548c:	br	x17

0000000000405490 <parse_pid@plt>:
  405490:	adrp	x16, 431000 <machine_vtable+0x4a0>
  405494:	ldr	x17, [x16, #2912]
  405498:	add	x16, x16, #0xb60
  40549c:	br	x17

00000000004054a0 <path_startswith@plt>:
  4054a0:	adrp	x16, 431000 <machine_vtable+0x4a0>
  4054a4:	ldr	x17, [x16, #2920]
  4054a8:	add	x16, x16, #0xb68
  4054ac:	br	x17

00000000004054b0 <writev@plt>:
  4054b0:	adrp	x16, 431000 <machine_vtable+0x4a0>
  4054b4:	ldr	x17, [x16, #2928]
  4054b8:	add	x16, x16, #0xb70
  4054bc:	br	x17

00000000004054c0 <touch@plt>:
  4054c0:	adrp	x16, 431000 <machine_vtable+0x4a0>
  4054c4:	ldr	x17, [x16, #2936]
  4054c8:	add	x16, x16, #0xb78
  4054cc:	br	x17

00000000004054d0 <__errno_location@plt>:
  4054d0:	adrp	x16, 431000 <machine_vtable+0x4a0>
  4054d4:	ldr	x17, [x16, #2944]
  4054d8:	add	x16, x16, #0xb80
  4054dc:	br	x17

00000000004054e0 <strv_free@plt>:
  4054e0:	adrp	x16, 431000 <machine_vtable+0x4a0>
  4054e4:	ldr	x17, [x16, #2952]
  4054e8:	add	x16, x16, #0xb88
  4054ec:	br	x17

00000000004054f0 <wait_for_terminate_and_check@plt>:
  4054f0:	adrp	x16, 431000 <machine_vtable+0x4a0>
  4054f4:	ldr	x17, [x16, #2960]
  4054f8:	add	x16, x16, #0xb90
  4054fc:	br	x17

0000000000405500 <sd_event_add_defer@plt>:
  405500:	adrp	x16, 431000 <machine_vtable+0x4a0>
  405504:	ldr	x17, [x16, #2968]
  405508:	add	x16, x16, #0xb98
  40550c:	br	x17

0000000000405510 <read@plt>:
  405510:	adrp	x16, 431000 <machine_vtable+0x4a0>
  405514:	ldr	x17, [x16, #2976]
  405518:	add	x16, x16, #0xba0
  40551c:	br	x17

0000000000405520 <image_name_is_valid@plt>:
  405520:	adrp	x16, 431000 <machine_vtable+0x4a0>
  405524:	ldr	x17, [x16, #2984]
  405528:	add	x16, x16, #0xba8
  40552c:	br	x17

0000000000405530 <unit_name_from_dbus_path@plt>:
  405530:	adrp	x16, 431000 <machine_vtable+0x4a0>
  405534:	ldr	x17, [x16, #2992]
  405538:	add	x16, x16, #0xbb0
  40553c:	br	x17

0000000000405540 <parse_env_file_sentinel@plt>:
  405540:	adrp	x16, 431000 <machine_vtable+0x4a0>
  405544:	ldr	x17, [x16, #3000]
  405548:	add	x16, x16, #0xbb8
  40554c:	br	x17

0000000000405550 <sd_event_source_set_priority@plt>:
  405550:	adrp	x16, 431000 <machine_vtable+0x4a0>
  405554:	ldr	x17, [x16, #3008]
  405558:	add	x16, x16, #0xbc0
  40555c:	br	x17

0000000000405560 <sd_bus_emit_signal@plt>:
  405560:	adrp	x16, 431000 <machine_vtable+0x4a0>
  405564:	ldr	x17, [x16, #3016]
  405568:	add	x16, x16, #0xbc8
  40556c:	br	x17

0000000000405570 <sd_bus_add_object_vtable@plt>:
  405570:	adrp	x16, 431000 <machine_vtable+0x4a0>
  405574:	ldr	x17, [x16, #3024]
  405578:	add	x16, x16, #0xbd0
  40557c:	br	x17

0000000000405580 <sd_bus_start@plt>:
  405580:	adrp	x16, 431000 <machine_vtable+0x4a0>
  405584:	ldr	x17, [x16, #3032]
  405588:	add	x16, x16, #0xbd8
  40558c:	br	x17

0000000000405590 <__lxstat64@plt>:
  405590:	adrp	x16, 431000 <machine_vtable+0x4a0>
  405594:	ldr	x17, [x16, #3040]
  405598:	add	x16, x16, #0xbe0
  40559c:	br	x17

00000000004055a0 <copy_tree_at_full@plt>:
  4055a0:	adrp	x16, 431000 <machine_vtable+0x4a0>
  4055a4:	ldr	x17, [x16, #3048]
  4055a8:	add	x16, x16, #0xbe8
  4055ac:	br	x17

00000000004055b0 <mkdir_safe_label@plt>:
  4055b0:	adrp	x16, 431000 <machine_vtable+0x4a0>
  4055b4:	ldr	x17, [x16, #3056]
  4055b8:	add	x16, x16, #0xbf0
  4055bc:	br	x17

00000000004055c0 <sd_bus_get_current_message@plt>:
  4055c0:	adrp	x16, 431000 <machine_vtable+0x4a0>
  4055c4:	ldr	x17, [x16, #3064]
  4055c8:	add	x16, x16, #0xbf8
  4055cc:	br	x17

00000000004055d0 <sd_bus_error_setf@plt>:
  4055d0:	adrp	x16, 431000 <machine_vtable+0x4a0>
  4055d4:	ldr	x17, [x16, #3072]
  4055d8:	add	x16, x16, #0xc00
  4055dc:	br	x17

00000000004055e0 <internal_hashmap_new@plt>:
  4055e0:	adrp	x16, 431000 <machine_vtable+0x4a0>
  4055e4:	ldr	x17, [x16, #3080]
  4055e8:	add	x16, x16, #0xc08
  4055ec:	br	x17

00000000004055f0 <__stack_chk_fail@plt>:
  4055f0:	adrp	x16, 431000 <machine_vtable+0x4a0>
  4055f4:	ldr	x17, [x16, #3088]
  4055f8:	add	x16, x16, #0xc10
  4055fc:	br	x17

0000000000405600 <sd_bus_send@plt>:
  405600:	adrp	x16, 431000 <machine_vtable+0x4a0>
  405604:	ldr	x17, [x16, #3096]
  405608:	add	x16, x16, #0xc18
  40560c:	br	x17

0000000000405610 <basename@plt>:
  405610:	adrp	x16, 431000 <machine_vtable+0x4a0>
  405614:	ldr	x17, [x16, #3104]
  405618:	add	x16, x16, #0xc20
  40561c:	br	x17

0000000000405620 <write@plt>:
  405620:	adrp	x16, 431000 <machine_vtable+0x4a0>
  405624:	ldr	x17, [x16, #3112]
  405628:	add	x16, x16, #0xc28
  40562c:	br	x17

0000000000405630 <path_join_internal@plt>:
  405630:	adrp	x16, 431000 <machine_vtable+0x4a0>
  405634:	ldr	x17, [x16, #3120]
  405638:	add	x16, x16, #0xc30
  40563c:	br	x17

0000000000405640 <socketpair@plt>:
  405640:	adrp	x16, 431000 <machine_vtable+0x4a0>
  405644:	ldr	x17, [x16, #3128]
  405648:	add	x16, x16, #0xc38
  40564c:	br	x17

0000000000405650 <btrfs_qgroup_set_limit@plt>:
  405650:	adrp	x16, 431000 <machine_vtable+0x4a0>
  405654:	ldr	x17, [x16, #3136]
  405658:	add	x16, x16, #0xc40
  40565c:	br	x17

0000000000405660 <sd_bus_message_copy@plt>:
  405660:	adrp	x16, 431000 <machine_vtable+0x4a0>
  405664:	ldr	x17, [x16, #3144]
  405668:	add	x16, x16, #0xc48
  40566c:	br	x17

0000000000405670 <ask_password_agent_close@plt>:
  405670:	adrp	x16, 431000 <machine_vtable+0x4a0>
  405674:	ldr	x17, [x16, #3152]
  405678:	add	x16, x16, #0xc50
  40567c:	br	x17

0000000000405680 <ftruncate64@plt>:
  405680:	adrp	x16, 431000 <machine_vtable+0x4a0>
  405684:	ldr	x17, [x16, #3160]
  405688:	add	x16, x16, #0xc58
  40568c:	br	x17

0000000000405690 <pager_close@plt>:
  405690:	adrp	x16, 431000 <machine_vtable+0x4a0>
  405694:	ldr	x17, [x16, #3168]
  405698:	add	x16, x16, #0xc60
  40569c:	br	x17

00000000004056a0 <internal_hashmap_remove_value@plt>:
  4056a0:	adrp	x16, 431000 <machine_vtable+0x4a0>
  4056a4:	ldr	x17, [x16, #3176]
  4056a8:	add	x16, x16, #0xc68
  4056ac:	br	x17

00000000004056b0 <feof@plt>:
  4056b0:	adrp	x16, 431000 <machine_vtable+0x4a0>
  4056b4:	ldr	x17, [x16, #3184]
  4056b8:	add	x16, x16, #0xc70
  4056bc:	br	x17

00000000004056c0 <sd_bus_error_free@plt>:
  4056c0:	adrp	x16, 431000 <machine_vtable+0x4a0>
  4056c4:	ldr	x17, [x16, #3192]
  4056c8:	add	x16, x16, #0xc78
  4056cc:	br	x17

00000000004056d0 <sd_bus_call@plt>:
  4056d0:	adrp	x16, 431000 <machine_vtable+0x4a0>
  4056d4:	ldr	x17, [x16, #3200]
  4056d8:	add	x16, x16, #0xc80
  4056dc:	br	x17

00000000004056e0 <strv_find@plt>:
  4056e0:	adrp	x16, 431000 <machine_vtable+0x4a0>
  4056e4:	ldr	x17, [x16, #3208]
  4056e8:	add	x16, x16, #0xc88
  4056ec:	br	x17

00000000004056f0 <sd_id128_get_machine@plt>:
  4056f0:	adrp	x16, 431000 <machine_vtable+0x4a0>
  4056f4:	ldr	x17, [x16, #3216]
  4056f8:	add	x16, x16, #0xc90
  4056fc:	br	x17

0000000000405700 <sd_notify@plt>:
  405700:	adrp	x16, 431000 <machine_vtable+0x4a0>
  405704:	ldr	x17, [x16, #3224]
  405708:	add	x16, x16, #0xc98
  40570c:	br	x17

0000000000405710 <log_struct_internal@plt>:
  405710:	adrp	x16, 431000 <machine_vtable+0x4a0>
  405714:	ldr	x17, [x16, #3232]
  405718:	add	x16, x16, #0xca0
  40571c:	br	x17

0000000000405720 <mkdir_label@plt>:
  405720:	adrp	x16, 431000 <machine_vtable+0x4a0>
  405724:	ldr	x17, [x16, #3240]
  405728:	add	x16, x16, #0xca8
  40572c:	br	x17

0000000000405730 <open_terminal@plt>:
  405730:	adrp	x16, 431000 <machine_vtable+0x4a0>
  405734:	ldr	x17, [x16, #3248]
  405738:	add	x16, x16, #0xcb0
  40573c:	br	x17

0000000000405740 <internal_hashmap_size@plt>:
  405740:	adrp	x16, 431000 <machine_vtable+0x4a0>
  405744:	ldr	x17, [x16, #3256]
  405748:	add	x16, x16, #0xcb8
  40574c:	br	x17

0000000000405750 <log_internal_realm@plt>:
  405750:	adrp	x16, 431000 <machine_vtable+0x4a0>
  405754:	ldr	x17, [x16, #3264]
  405758:	add	x16, x16, #0xcc0
  40575c:	br	x17

0000000000405760 <sd_bus_default_system@plt>:
  405760:	adrp	x16, 431000 <machine_vtable+0x4a0>
  405764:	ldr	x17, [x16, #3272]
  405768:	add	x16, x16, #0xcc8
  40576c:	br	x17

0000000000405770 <sd_bus_flush_close_unref@plt>:
  405770:	adrp	x16, 431000 <machine_vtable+0x4a0>
  405774:	ldr	x17, [x16, #3280]
  405778:	add	x16, x16, #0xcd0
  40577c:	br	x17

0000000000405780 <pipe2@plt>:
  405780:	adrp	x16, 431000 <machine_vtable+0x4a0>
  405784:	ldr	x17, [x16, #3288]
  405788:	add	x16, x16, #0xcd8
  40578c:	br	x17

0000000000405790 <string_hash_func@plt>:
  405790:	adrp	x16, 431000 <machine_vtable+0x4a0>
  405794:	ldr	x17, [x16, #3296]
  405798:	add	x16, x16, #0xce0
  40579c:	br	x17

00000000004057a0 <sd_bus_add_fallback_vtable@plt>:
  4057a0:	adrp	x16, 431000 <machine_vtable+0x4a0>
  4057a4:	ldr	x17, [x16, #3304]
  4057a8:	add	x16, x16, #0xce8
  4057ac:	br	x17

00000000004057b0 <internal_hashmap_clear@plt>:
  4057b0:	adrp	x16, 431000 <machine_vtable+0x4a0>
  4057b4:	ldr	x17, [x16, #3312]
  4057b8:	add	x16, x16, #0xcf0
  4057bc:	br	x17

00000000004057c0 <hashmap_put@plt>:
  4057c0:	adrp	x16, 431000 <machine_vtable+0x4a0>
  4057c4:	ldr	x17, [x16, #3320]
  4057c8:	add	x16, x16, #0xcf8
  4057cc:	br	x17

00000000004057d0 <fclose@plt>:
  4057d0:	adrp	x16, 431000 <machine_vtable+0x4a0>
  4057d4:	ldr	x17, [x16, #3328]
  4057d8:	add	x16, x16, #0xd00
  4057dc:	br	x17

00000000004057e0 <bus_property_get_bool@plt>:
  4057e0:	adrp	x16, 431000 <machine_vtable+0x4a0>
  4057e4:	ldr	x17, [x16, #3336]
  4057e8:	add	x16, x16, #0xd08
  4057ec:	br	x17

00000000004057f0 <image_clone@plt>:
  4057f0:	adrp	x16, 431000 <machine_vtable+0x4a0>
  4057f4:	ldr	x17, [x16, #3344]
  4057f8:	add	x16, x16, #0xd10
  4057fc:	br	x17

0000000000405800 <sigchld_code_to_string@plt>:
  405800:	adrp	x16, 431000 <machine_vtable+0x4a0>
  405804:	ldr	x17, [x16, #3352]
  405808:	add	x16, x16, #0xd18
  40580c:	br	x17

0000000000405810 <sd_bus_reply_method_error@plt>:
  405810:	adrp	x16, 431000 <machine_vtable+0x4a0>
  405814:	ldr	x17, [x16, #3360]
  405818:	add	x16, x16, #0xd20
  40581c:	br	x17

0000000000405820 <string_table_lookup@plt>:
  405820:	adrp	x16, 431000 <machine_vtable+0x4a0>
  405824:	ldr	x17, [x16, #3368]
  405828:	add	x16, x16, #0xd28
  40582c:	br	x17

0000000000405830 <nscd_flush_cache@plt>:
  405830:	adrp	x16, 431000 <machine_vtable+0x4a0>
  405834:	ldr	x17, [x16, #3376]
  405838:	add	x16, x16, #0xd30
  40583c:	br	x17

0000000000405840 <strcmp@plt>:
  405840:	adrp	x16, 431000 <machine_vtable+0x4a0>
  405844:	ldr	x17, [x16, #3384]
  405848:	add	x16, x16, #0xd38
  40584c:	br	x17

0000000000405850 <recvmsg@plt>:
  405850:	adrp	x16, 431000 <machine_vtable+0x4a0>
  405854:	ldr	x17, [x16, #3392]
  405858:	add	x16, x16, #0xd40
  40585c:	br	x17

0000000000405860 <extract_first_word@plt>:
  405860:	adrp	x16, 431000 <machine_vtable+0x4a0>
  405864:	ldr	x17, [x16, #3400]
  405868:	add	x16, x16, #0xd48
  40586c:	br	x17

0000000000405870 <opendir@plt>:
  405870:	adrp	x16, 431000 <machine_vtable+0x4a0>
  405874:	ldr	x17, [x16, #3408]
  405878:	add	x16, x16, #0xd50
  40587c:	br	x17

0000000000405880 <internal_hashmap_iterate@plt>:
  405880:	adrp	x16, 431000 <machine_vtable+0x4a0>
  405884:	ldr	x17, [x16, #3416]
  405888:	add	x16, x16, #0xd58
  40588c:	br	x17

0000000000405890 <strdup@plt>:
  405890:	adrp	x16, 431000 <machine_vtable+0x4a0>
  405894:	ldr	x17, [x16, #3424]
  405898:	add	x16, x16, #0xd60
  40589c:	br	x17

00000000004058a0 <calloc@plt>:
  4058a0:	adrp	x16, 431000 <machine_vtable+0x4a0>
  4058a4:	ldr	x17, [x16, #3432]
  4058a8:	add	x16, x16, #0xd68
  4058ac:	br	x17

00000000004058b0 <sd_bus_new@plt>:
  4058b0:	adrp	x16, 431000 <machine_vtable+0x4a0>
  4058b4:	ldr	x17, [x16, #3440]
  4058b8:	add	x16, x16, #0xd70
  4058bc:	br	x17

00000000004058c0 <sd_bus_error_has_name@plt>:
  4058c0:	adrp	x16, 431000 <machine_vtable+0x4a0>
  4058c4:	ldr	x17, [x16, #3448]
  4058c8:	add	x16, x16, #0xd78
  4058cc:	br	x17

00000000004058d0 <mkostemp_safe@plt>:
  4058d0:	adrp	x16, 431000 <machine_vtable+0x4a0>
  4058d4:	ldr	x17, [x16, #3456]
  4058d8:	add	x16, x16, #0xd80
  4058dc:	br	x17

00000000004058e0 <safe_fork_full@plt>:
  4058e0:	adrp	x16, 431000 <machine_vtable+0x4a0>
  4058e4:	ldr	x17, [x16, #3464]
  4058e8:	add	x16, x16, #0xd88
  4058ec:	br	x17

00000000004058f0 <open_terminal_in_namespace@plt>:
  4058f0:	adrp	x16, 431000 <machine_vtable+0x4a0>
  4058f4:	ldr	x17, [x16, #3472]
  4058f8:	add	x16, x16, #0xd90
  4058fc:	br	x17

0000000000405900 <umount@plt>:
  405900:	adrp	x16, 431000 <machine_vtable+0x4a0>
  405904:	ldr	x17, [x16, #3480]
  405908:	add	x16, x16, #0xd98
  40590c:	br	x17

0000000000405910 <deserialize_usec@plt>:
  405910:	adrp	x16, 431000 <machine_vtable+0x4a0>
  405914:	ldr	x17, [x16, #3488]
  405918:	add	x16, x16, #0xda0
  40591c:	br	x17

0000000000405920 <log_set_facility@plt>:
  405920:	adrp	x16, 431000 <machine_vtable+0x4a0>
  405924:	ldr	x17, [x16, #3496]
  405928:	add	x16, x16, #0xda8
  40592c:	br	x17

0000000000405930 <btrfs_subvol_get_subtree_quota_fd@plt>:
  405930:	adrp	x16, 431000 <machine_vtable+0x4a0>
  405934:	ldr	x17, [x16, #3504]
  405938:	add	x16, x16, #0xdb0
  40593c:	br	x17

0000000000405940 <bus_label_unescape_n@plt>:
  405940:	adrp	x16, 431000 <machine_vtable+0x4a0>
  405944:	ldr	x17, [x16, #3512]
  405948:	add	x16, x16, #0xdb8
  40594c:	br	x17

0000000000405950 <asprintf@plt>:
  405950:	adrp	x16, 431000 <machine_vtable+0x4a0>
  405954:	ldr	x17, [x16, #3520]
  405958:	add	x16, x16, #0xdc0
  40595c:	br	x17

0000000000405960 <sd_bus_message_append_strv@plt>:
  405960:	adrp	x16, 431000 <machine_vtable+0x4a0>
  405964:	ldr	x17, [x16, #3528]
  405968:	add	x16, x16, #0xdc8
  40596c:	br	x17

0000000000405970 <bus_property_get_id128@plt>:
  405970:	adrp	x16, 431000 <machine_vtable+0x4a0>
  405974:	ldr	x17, [x16, #3536]
  405978:	add	x16, x16, #0xdd0
  40597c:	br	x17

0000000000405980 <btrfs_subvol_set_subtree_quota_limit@plt>:
  405980:	adrp	x16, 431000 <machine_vtable+0x4a0>
  405984:	ldr	x17, [x16, #3544]
  405988:	add	x16, x16, #0xdd8
  40598c:	br	x17

0000000000405990 <bus_reply_pair_array@plt>:
  405990:	adrp	x16, 431000 <machine_vtable+0x4a0>
  405994:	ldr	x17, [x16, #3552]
  405998:	add	x16, x16, #0xde0
  40599c:	br	x17

00000000004059a0 <cg_pid_get_unit@plt>:
  4059a0:	adrp	x16, 431000 <machine_vtable+0x4a0>
  4059a4:	ldr	x17, [x16, #3560]
  4059a8:	add	x16, x16, #0xde8
  4059ac:	br	x17

00000000004059b0 <mkdtemp@plt>:
  4059b0:	adrp	x16, 431000 <machine_vtable+0x4a0>
  4059b4:	ldr	x17, [x16, #3568]
  4059b8:	add	x16, x16, #0xdf0
  4059bc:	br	x17

00000000004059c0 <sd_bus_add_node_enumerator@plt>:
  4059c0:	adrp	x16, 431000 <machine_vtable+0x4a0>
  4059c4:	ldr	x17, [x16, #3576]
  4059c8:	add	x16, x16, #0xdf8
  4059cc:	br	x17

00000000004059d0 <mount@plt>:
  4059d0:	adrp	x16, 431000 <machine_vtable+0x4a0>
  4059d4:	ldr	x17, [x16, #3584]
  4059d8:	add	x16, x16, #0xe00
  4059dc:	br	x17

00000000004059e0 <free@plt>:
  4059e0:	adrp	x16, 431000 <machine_vtable+0x4a0>
  4059e4:	ldr	x17, [x16, #3592]
  4059e8:	add	x16, x16, #0xe08
  4059ec:	br	x17

00000000004059f0 <image_set_limit@plt>:
  4059f0:	adrp	x16, 431000 <machine_vtable+0x4a0>
  4059f4:	ldr	x17, [x16, #3600]
  4059f8:	add	x16, x16, #0xe10
  4059fc:	br	x17

0000000000405a00 <copy_bytes_full@plt>:
  405a00:	adrp	x16, 431000 <machine_vtable+0x4a0>
  405a04:	ldr	x17, [x16, #3608]
  405a08:	add	x16, x16, #0xe18
  405a0c:	br	x17

0000000000405a10 <open_os_release@plt>:
  405a10:	adrp	x16, 431000 <machine_vtable+0x4a0>
  405a14:	ldr	x17, [x16, #3616]
  405a18:	add	x16, x16, #0xe20
  405a1c:	br	x17

0000000000405a20 <setup_machine_directory@plt>:
  405a20:	adrp	x16, 431000 <machine_vtable+0x4a0>
  405a24:	ldr	x17, [x16, #3624]
  405a28:	add	x16, x16, #0xe28
  405a2c:	br	x17

0000000000405a30 <sprintf@plt>:
  405a30:	adrp	x16, 431000 <machine_vtable+0x4a0>
  405a34:	ldr	x17, [x16, #3632]
  405a38:	add	x16, x16, #0xe30
  405a3c:	br	x17

0000000000405a40 <internal_hashmap_ensure_allocated@plt>:
  405a40:	adrp	x16, 431000 <machine_vtable+0x4a0>
  405a44:	ldr	x17, [x16, #3640]
  405a48:	add	x16, x16, #0xe38
  405a4c:	br	x17

0000000000405a50 <readlink_malloc@plt>:
  405a50:	adrp	x16, 431000 <machine_vtable+0x4a0>
  405a54:	ldr	x17, [x16, #3648]
  405a58:	add	x16, x16, #0xe40
  405a5c:	br	x17

0000000000405a60 <fwrite@plt>:
  405a60:	adrp	x16, 431000 <machine_vtable+0x4a0>
  405a64:	ldr	x17, [x16, #3656]
  405a68:	add	x16, x16, #0xe48
  405a6c:	br	x17

0000000000405a70 <image_remove@plt>:
  405a70:	adrp	x16, 431000 <machine_vtable+0x4a0>
  405a74:	ldr	x17, [x16, #3664]
  405a78:	add	x16, x16, #0xe50
  405a7c:	br	x17

0000000000405a80 <sd_event_unref@plt>:
  405a80:	adrp	x16, 431000 <machine_vtable+0x4a0>
  405a84:	ldr	x17, [x16, #3672]
  405a88:	add	x16, x16, #0xe58
  405a8c:	br	x17

0000000000405a90 <sd_bus_message_get_path@plt>:
  405a90:	adrp	x16, 431000 <machine_vtable+0x4a0>
  405a94:	ldr	x17, [x16, #3680]
  405a98:	add	x16, x16, #0xe60
  405a9c:	br	x17

0000000000405aa0 <mac_selinux_finish@plt>:
  405aa0:	adrp	x16, 431000 <machine_vtable+0x4a0>
  405aa4:	ldr	x17, [x16, #3688]
  405aa8:	add	x16, x16, #0xe68
  405aac:	br	x17

0000000000405ab0 <mkdir_p@plt>:
  405ab0:	adrp	x16, 431000 <machine_vtable+0x4a0>
  405ab4:	ldr	x17, [x16, #3696]
  405ab8:	add	x16, x16, #0xe70
  405abc:	br	x17

0000000000405ac0 <dirent_is_file@plt>:
  405ac0:	adrp	x16, 431000 <machine_vtable+0x4a0>
  405ac4:	ldr	x17, [x16, #3704]
  405ac8:	add	x16, x16, #0xe78
  405acc:	br	x17

0000000000405ad0 <image_read_metadata@plt>:
  405ad0:	adrp	x16, 431000 <machine_vtable+0x4a0>
  405ad4:	ldr	x17, [x16, #3712]
  405ad8:	add	x16, x16, #0xe80
  405adc:	br	x17

0000000000405ae0 <parse_ifindex@plt>:
  405ae0:	adrp	x16, 431000 <machine_vtable+0x4a0>
  405ae4:	ldr	x17, [x16, #3720]
  405ae8:	add	x16, x16, #0xe88
  405aec:	br	x17

0000000000405af0 <image_discover@plt>:
  405af0:	adrp	x16, 431000 <machine_vtable+0x4a0>
  405af4:	ldr	x17, [x16, #3728]
  405af8:	add	x16, x16, #0xe90
  405afc:	br	x17

0000000000405b00 <receive_one_fd@plt>:
  405b00:	adrp	x16, 431000 <machine_vtable+0x4a0>
  405b04:	ldr	x17, [x16, #3736]
  405b08:	add	x16, x16, #0xe98
  405b0c:	br	x17

0000000000405b10 <sd_event_add_signal@plt>:
  405b10:	adrp	x16, 431000 <machine_vtable+0x4a0>
  405b14:	ldr	x17, [x16, #3744]
  405b18:	add	x16, x16, #0xea0
  405b1c:	br	x17

0000000000405b20 <sd_bus_call_method@plt>:
  405b20:	adrp	x16, 431000 <machine_vtable+0x4a0>
  405b24:	ldr	x17, [x16, #3752]
  405b28:	add	x16, x16, #0xea8
  405b2c:	br	x17

0000000000405b30 <open64@plt>:
  405b30:	adrp	x16, 431000 <machine_vtable+0x4a0>
  405b34:	ldr	x17, [x16, #3760]
  405b38:	add	x16, x16, #0xeb0
  405b3c:	br	x17

0000000000405b40 <sd_bus_error_set_errno@plt>:
  405b40:	adrp	x16, 431000 <machine_vtable+0x4a0>
  405b44:	ldr	x17, [x16, #3768]
  405b48:	add	x16, x16, #0xeb8
  405b4c:	br	x17

0000000000405b50 <strlen@plt>:
  405b50:	adrp	x16, 431000 <machine_vtable+0x4a0>
  405b54:	ldr	x17, [x16, #3776]
  405b58:	add	x16, x16, #0xec0
  405b5c:	br	x17

0000000000405b60 <mkdir_parents@plt>:
  405b60:	adrp	x16, 431000 <machine_vtable+0x4a0>
  405b64:	ldr	x17, [x16, #3784]
  405b68:	add	x16, x16, #0xec8
  405b6c:	br	x17

0000000000405b70 <sd_bus_message_read_array@plt>:
  405b70:	adrp	x16, 431000 <machine_vtable+0x4a0>
  405b74:	ldr	x17, [x16, #3792]
  405b78:	add	x16, x16, #0xed0
  405b7c:	br	x17

0000000000405b80 <sd_bus_message_ref@plt>:
  405b80:	adrp	x16, 431000 <machine_vtable+0x4a0>
  405b84:	ldr	x17, [x16, #3800]
  405b88:	add	x16, x16, #0xed8
  405b8c:	br	x17

0000000000405b90 <fopen64@plt>:
  405b90:	adrp	x16, 431000 <machine_vtable+0x4a0>
  405b94:	ldr	x17, [x16, #3808]
  405b98:	add	x16, x16, #0xee0
  405b9c:	br	x17

0000000000405ba0 <log_oom_internal@plt>:
  405ba0:	adrp	x16, 431000 <machine_vtable+0x4a0>
  405ba4:	ldr	x17, [x16, #3816]
  405ba8:	add	x16, x16, #0xee8
  405bac:	br	x17

0000000000405bb0 <bus_verify_polkit_async@plt>:
  405bb0:	adrp	x16, 431000 <machine_vtable+0x4a0>
  405bb4:	ldr	x17, [x16, #3824]
  405bb8:	add	x16, x16, #0xef0
  405bbc:	br	x17

0000000000405bc0 <fflush_and_check@plt>:
  405bc0:	adrp	x16, 431000 <machine_vtable+0x4a0>
  405bc4:	ldr	x17, [x16, #3832]
  405bc8:	add	x16, x16, #0xef8
  405bcc:	br	x17

0000000000405bd0 <load_env_file_pairs@plt>:
  405bd0:	adrp	x16, 431000 <machine_vtable+0x4a0>
  405bd4:	ldr	x17, [x16, #3840]
  405bd8:	add	x16, x16, #0xf00
  405bdc:	br	x17

0000000000405be0 <image_rename@plt>:
  405be0:	adrp	x16, 431000 <machine_vtable+0x4a0>
  405be4:	ldr	x17, [x16, #3848]
  405be8:	add	x16, x16, #0xf08
  405bec:	br	x17

0000000000405bf0 <sd_bus_call_method_async@plt>:
  405bf0:	adrp	x16, 431000 <machine_vtable+0x4a0>
  405bf4:	ldr	x17, [x16, #3856]
  405bf8:	add	x16, x16, #0xf10
  405bfc:	br	x17

0000000000405c00 <sd_event_source_set_description@plt>:
  405c00:	adrp	x16, 431000 <machine_vtable+0x4a0>
  405c04:	ldr	x17, [x16, #3864]
  405c08:	add	x16, x16, #0xf18
  405c0c:	br	x17

0000000000405c10 <sd_bus_query_sender_creds@plt>:
  405c10:	adrp	x16, 431000 <machine_vtable+0x4a0>
  405c14:	ldr	x17, [x16, #3872]
  405c18:	add	x16, x16, #0xf20
  405c1c:	br	x17

0000000000405c20 <log_get_max_level_realm@plt>:
  405c20:	adrp	x16, 431000 <machine_vtable+0x4a0>
  405c24:	ldr	x17, [x16, #3880]
  405c28:	add	x16, x16, #0xf28
  405c2c:	br	x17

0000000000405c30 <sd_bus_message_close_container@plt>:
  405c30:	adrp	x16, 431000 <machine_vtable+0x4a0>
  405c34:	ldr	x17, [x16, #3888]
  405c38:	add	x16, x16, #0xf30
  405c3c:	br	x17

Disassembly of section .text:

0000000000405c40 <_start>:
  405c40:	mov	x29, #0x0                   	// #0
  405c44:	mov	x30, #0x0                   	// #0
  405c48:	mov	x5, x0
  405c4c:	ldr	x1, [sp]
  405c50:	add	x2, sp, #0x8
  405c54:	mov	x6, sp
  405c58:	movz	x0, #0x0, lsl #48
  405c5c:	movk	x0, #0x0, lsl #32
  405c60:	movk	x0, #0x40, lsl #16
  405c64:	movk	x0, #0x7c44
  405c68:	movz	x3, #0x0, lsl #48
  405c6c:	movk	x3, #0x0, lsl #32
  405c70:	movk	x3, #0x41, lsl #16
  405c74:	movk	x3, #0x8f68
  405c78:	movz	x4, #0x0, lsl #48
  405c7c:	movk	x4, #0x0, lsl #32
  405c80:	movk	x4, #0x41, lsl #16
  405c84:	movk	x4, #0x8fe8
  405c88:	bl	404f70 <__libc_start_main@plt>
  405c8c:	bl	4053a0 <abort@plt>

0000000000405c90 <call_weak_fn>:
  405c90:	adrp	x0, 431000 <machine_vtable+0x4a0>
  405c94:	ldr	x0, [x0, #3920]
  405c98:	cbz	x0, 405ca0 <call_weak_fn+0x10>
  405c9c:	b	405050 <__gmon_start__@plt>
  405ca0:	ret

0000000000405ca4 <deregister_tm_clones>:
  405ca4:	stp	x29, x30, [sp, #-32]!
  405ca8:	mov	x29, sp
  405cac:	adrp	x0, 432000 <_GLOBAL_OFFSET_TABLE_+0xc8>
  405cb0:	add	x0, x0, #0x38
  405cb4:	str	x0, [sp, #24]
  405cb8:	ldr	x0, [sp, #24]
  405cbc:	str	x0, [sp, #24]
  405cc0:	ldr	x1, [sp, #24]
  405cc4:	adrp	x0, 432000 <_GLOBAL_OFFSET_TABLE_+0xc8>
  405cc8:	add	x0, x0, #0x38
  405ccc:	cmp	x1, x0
  405cd0:	b.eq	405d0c <deregister_tm_clones+0x68>  // b.none
  405cd4:	adrp	x0, 419000 <_fini>
  405cd8:	add	x0, x0, #0x10
  405cdc:	ldr	x0, [x0]
  405ce0:	str	x0, [sp, #16]
  405ce4:	ldr	x0, [sp, #16]
  405ce8:	str	x0, [sp, #16]
  405cec:	ldr	x0, [sp, #16]
  405cf0:	cmp	x0, #0x0
  405cf4:	b.eq	405d10 <deregister_tm_clones+0x6c>  // b.none
  405cf8:	ldr	x1, [sp, #16]
  405cfc:	adrp	x0, 432000 <_GLOBAL_OFFSET_TABLE_+0xc8>
  405d00:	add	x0, x0, #0x38
  405d04:	blr	x1
  405d08:	b	405d10 <deregister_tm_clones+0x6c>
  405d0c:	nop
  405d10:	ldp	x29, x30, [sp], #32
  405d14:	ret

0000000000405d18 <register_tm_clones>:
  405d18:	stp	x29, x30, [sp, #-48]!
  405d1c:	mov	x29, sp
  405d20:	adrp	x0, 432000 <_GLOBAL_OFFSET_TABLE_+0xc8>
  405d24:	add	x0, x0, #0x38
  405d28:	str	x0, [sp, #40]
  405d2c:	ldr	x0, [sp, #40]
  405d30:	str	x0, [sp, #40]
  405d34:	ldr	x1, [sp, #40]
  405d38:	adrp	x0, 432000 <_GLOBAL_OFFSET_TABLE_+0xc8>
  405d3c:	add	x0, x0, #0x38
  405d40:	sub	x0, x1, x0
  405d44:	asr	x0, x0, #3
  405d48:	lsr	x1, x0, #63
  405d4c:	add	x0, x1, x0
  405d50:	asr	x0, x0, #1
  405d54:	str	x0, [sp, #32]
  405d58:	ldr	x0, [sp, #32]
  405d5c:	cmp	x0, #0x0
  405d60:	b.eq	405da0 <register_tm_clones+0x88>  // b.none
  405d64:	adrp	x0, 419000 <_fini>
  405d68:	add	x0, x0, #0x18
  405d6c:	ldr	x0, [x0]
  405d70:	str	x0, [sp, #24]
  405d74:	ldr	x0, [sp, #24]
  405d78:	str	x0, [sp, #24]
  405d7c:	ldr	x0, [sp, #24]
  405d80:	cmp	x0, #0x0
  405d84:	b.eq	405da4 <register_tm_clones+0x8c>  // b.none
  405d88:	ldr	x2, [sp, #24]
  405d8c:	ldr	x1, [sp, #32]
  405d90:	adrp	x0, 432000 <_GLOBAL_OFFSET_TABLE_+0xc8>
  405d94:	add	x0, x0, #0x38
  405d98:	blr	x2
  405d9c:	b	405da4 <register_tm_clones+0x8c>
  405da0:	nop
  405da4:	ldp	x29, x30, [sp], #48
  405da8:	ret

0000000000405dac <__do_global_dtors_aux>:
  405dac:	stp	x29, x30, [sp, #-16]!
  405db0:	mov	x29, sp
  405db4:	adrp	x0, 432000 <_GLOBAL_OFFSET_TABLE_+0xc8>
  405db8:	add	x0, x0, #0x44
  405dbc:	ldrb	w0, [x0]
  405dc0:	and	x0, x0, #0xff
  405dc4:	cmp	x0, #0x0
  405dc8:	b.ne	405de4 <__do_global_dtors_aux+0x38>  // b.any
  405dcc:	bl	405ca4 <deregister_tm_clones>
  405dd0:	adrp	x0, 432000 <_GLOBAL_OFFSET_TABLE_+0xc8>
  405dd4:	add	x0, x0, #0x44
  405dd8:	mov	w1, #0x1                   	// #1
  405ddc:	strb	w1, [x0]
  405de0:	b	405de8 <__do_global_dtors_aux+0x3c>
  405de4:	nop
  405de8:	ldp	x29, x30, [sp], #16
  405dec:	ret

0000000000405df0 <frame_dummy>:
  405df0:	stp	x29, x30, [sp, #-16]!
  405df4:	mov	x29, sp
  405df8:	bl	405d18 <register_tm_clones>
  405dfc:	nop
  405e00:	ldp	x29, x30, [sp], #16
  405e04:	ret

0000000000405e08 <ALIGN_TO>:
  405e08:	sub	sp, sp, #0x10
  405e0c:	str	x0, [sp, #8]
  405e10:	str	x1, [sp]
  405e14:	ldr	x1, [sp, #8]
  405e18:	ldr	x0, [sp]
  405e1c:	add	x0, x1, x0
  405e20:	sub	x1, x0, #0x1
  405e24:	ldr	x0, [sp]
  405e28:	neg	x0, x0
  405e2c:	and	x0, x1, x0
  405e30:	add	sp, sp, #0x10
  405e34:	ret

0000000000405e38 <mfree>:
  405e38:	stp	x29, x30, [sp, #-32]!
  405e3c:	mov	x29, sp
  405e40:	str	x0, [sp, #24]
  405e44:	ldr	x0, [sp, #24]
  405e48:	bl	4059e0 <free@plt>
  405e4c:	mov	x0, #0x0                   	// #0
  405e50:	ldp	x29, x30, [sp], #32
  405e54:	ret

0000000000405e58 <freep>:
  405e58:	stp	x29, x30, [sp, #-32]!
  405e5c:	mov	x29, sp
  405e60:	str	x0, [sp, #24]
  405e64:	ldr	x0, [sp, #24]
  405e68:	ldr	x0, [x0]
  405e6c:	bl	4059e0 <free@plt>
  405e70:	nop
  405e74:	ldp	x29, x30, [sp], #32
  405e78:	ret

0000000000405e7c <save_argc_argv>:
  405e7c:	sub	sp, sp, #0x10
  405e80:	str	w0, [sp, #12]
  405e84:	str	x1, [sp]
  405e88:	adrp	x0, 432000 <_GLOBAL_OFFSET_TABLE_+0xc8>
  405e8c:	add	x0, x0, #0x40
  405e90:	ldr	w1, [sp, #12]
  405e94:	str	w1, [x0]
  405e98:	adrp	x0, 432000 <_GLOBAL_OFFSET_TABLE_+0xc8>
  405e9c:	add	x0, x0, #0x38
  405ea0:	ldr	x1, [sp]
  405ea4:	str	x1, [x0]
  405ea8:	nop
  405eac:	add	sp, sp, #0x10
  405eb0:	ret

0000000000405eb4 <hashmap_free>:
  405eb4:	stp	x29, x30, [sp, #-32]!
  405eb8:	mov	x29, sp
  405ebc:	str	x0, [sp, #24]
  405ec0:	mov	x2, #0x0                   	// #0
  405ec4:	mov	x1, #0x0                   	// #0
  405ec8:	ldr	x0, [sp, #24]
  405ecc:	bl	404ee0 <internal_hashmap_free@plt>
  405ed0:	ldp	x29, x30, [sp], #32
  405ed4:	ret

0000000000405ed8 <hashmap_size>:
  405ed8:	stp	x29, x30, [sp, #-32]!
  405edc:	mov	x29, sp
  405ee0:	str	x0, [sp, #24]
  405ee4:	ldr	x0, [sp, #24]
  405ee8:	bl	405740 <internal_hashmap_size@plt>
  405eec:	ldp	x29, x30, [sp], #32
  405ef0:	ret

0000000000405ef4 <hashmap_isempty>:
  405ef4:	stp	x29, x30, [sp, #-32]!
  405ef8:	mov	x29, sp
  405efc:	str	x0, [sp, #24]
  405f00:	ldr	x0, [sp, #24]
  405f04:	bl	405ed8 <hashmap_size>
  405f08:	cmp	w0, #0x0
  405f0c:	cset	w0, eq  // eq = none
  405f10:	and	w0, w0, #0xff
  405f14:	ldp	x29, x30, [sp], #32
  405f18:	ret

0000000000405f1c <hashmap_iterate>:
  405f1c:	stp	x29, x30, [sp, #-48]!
  405f20:	mov	x29, sp
  405f24:	str	x0, [sp, #40]
  405f28:	str	x1, [sp, #32]
  405f2c:	str	x2, [sp, #24]
  405f30:	str	x3, [sp, #16]
  405f34:	ldr	x3, [sp, #16]
  405f38:	ldr	x2, [sp, #24]
  405f3c:	ldr	x1, [sp, #32]
  405f40:	ldr	x0, [sp, #40]
  405f44:	bl	405880 <internal_hashmap_iterate@plt>
  405f48:	and	w0, w0, #0xff
  405f4c:	ldp	x29, x30, [sp], #48
  405f50:	ret

0000000000405f54 <startswith>:
  405f54:	stp	x29, x30, [sp, #-48]!
  405f58:	mov	x29, sp
  405f5c:	str	x0, [sp, #24]
  405f60:	str	x1, [sp, #16]
  405f64:	ldr	x0, [sp, #16]
  405f68:	bl	405b50 <strlen@plt>
  405f6c:	str	x0, [sp, #40]
  405f70:	ldr	x2, [sp, #40]
  405f74:	ldr	x1, [sp, #16]
  405f78:	ldr	x0, [sp, #24]
  405f7c:	bl	405370 <strncmp@plt>
  405f80:	cmp	w0, #0x0
  405f84:	b.ne	405f98 <startswith+0x44>  // b.any
  405f88:	ldr	x1, [sp, #24]
  405f8c:	ldr	x0, [sp, #40]
  405f90:	add	x0, x1, x0
  405f94:	b	405f9c <startswith+0x48>
  405f98:	mov	x0, #0x0                   	// #0
  405f9c:	ldp	x29, x30, [sp], #48
  405fa0:	ret

0000000000405fa4 <closedirp>:
  405fa4:	stp	x29, x30, [sp, #-32]!
  405fa8:	mov	x29, sp
  405fac:	str	x0, [sp, #24]
  405fb0:	ldr	x0, [sp, #24]
  405fb4:	ldr	x0, [x0]
  405fb8:	cmp	x0, #0x0
  405fbc:	b.eq	405fcc <closedirp+0x28>  // b.none
  405fc0:	ldr	x0, [sp, #24]
  405fc4:	ldr	x0, [x0]
  405fc8:	bl	405360 <closedir@plt>
  405fcc:	nop
  405fd0:	ldp	x29, x30, [sp], #32
  405fd4:	ret

0000000000405fd8 <static_destruct>:
  405fd8:	stp	x29, x30, [sp, #-32]!
  405fdc:	mov	x29, sp
  405fe0:	adrp	x0, 419000 <_fini>
  405fe4:	add	x0, x0, #0x6b8
  405fe8:	ldr	x0, [x0]
  405fec:	cmp	x0, #0x0
  405ff0:	b.eq	406054 <static_destruct+0x7c>  // b.none
  405ff4:	adrp	x0, 419000 <_fini>
  405ff8:	add	x0, x0, #0x6b8
  405ffc:	ldr	x0, [x0]
  406000:	mov	x1, #0x8                   	// #8
  406004:	bl	405e08 <ALIGN_TO>
  406008:	str	x0, [sp, #24]
  40600c:	b	406038 <static_destruct+0x60>
  406010:	ldr	x0, [sp, #24]
  406014:	ldr	x1, [x0, #8]
  406018:	ldr	x0, [sp, #24]
  40601c:	ldr	x0, [x0]
  406020:	blr	x1
  406024:	ldr	x0, [sp, #24]
  406028:	add	x0, x0, #0x10
  40602c:	mov	x1, #0x8                   	// #8
  406030:	bl	405e08 <ALIGN_TO>
  406034:	str	x0, [sp, #24]
  406038:	ldr	x1, [sp, #24]
  40603c:	adrp	x0, 419000 <_fini>
  406040:	add	x0, x0, #0x6c0
  406044:	ldr	x0, [x0]
  406048:	cmp	x1, x0
  40604c:	b.cc	406010 <static_destruct+0x38>  // b.lo, b.ul, b.last
  406050:	b	406058 <static_destruct+0x80>
  406054:	nop
  406058:	ldp	x29, x30, [sp], #32
  40605c:	ret

0000000000406060 <manager_unrefp>:
  406060:	stp	x29, x30, [sp, #-32]!
  406064:	mov	x29, sp
  406068:	str	x0, [sp, #24]
  40606c:	ldr	x0, [sp, #24]
  406070:	ldr	x0, [x0]
  406074:	cmp	x0, #0x0
  406078:	b.eq	406088 <manager_unrefp+0x28>  // b.none
  40607c:	ldr	x0, [sp, #24]
  406080:	ldr	x0, [x0]
  406084:	bl	4062ac <manager_unref>
  406088:	nop
  40608c:	ldp	x29, x30, [sp], #32
  406090:	ret

0000000000406094 <__unique_prefix_static_free_wrapper1>:
  406094:	stp	x29, x30, [sp, #-48]!
  406098:	mov	x29, sp
  40609c:	str	x0, [sp, #24]
  4060a0:	ldr	x0, [sp, #24]
  4060a4:	str	x0, [sp, #40]
  4060a8:	ldr	x0, [sp, #40]
  4060ac:	bl	40810c <machine_free>
  4060b0:	nop
  4060b4:	ldp	x29, x30, [sp], #48
  4060b8:	ret

00000000004060bc <manager_new>:
  4060bc:	stp	x29, x30, [sp, #-80]!
  4060c0:	mov	x29, sp
  4060c4:	str	x19, [sp, #16]
  4060c8:	str	x0, [sp, #40]
  4060cc:	adrp	x0, 430000 <__FRAME_END__+0x10c5c>
  4060d0:	add	x0, x0, #0x198
  4060d4:	ldr	x1, [x0]
  4060d8:	str	x1, [sp, #72]
  4060dc:	mov	x1, #0x0                   	// #0
  4060e0:	str	xzr, [sp, #56]
  4060e4:	ldr	x0, [sp, #40]
  4060e8:	cmp	x0, #0x0
  4060ec:	cset	w0, eq  // eq = none
  4060f0:	and	w0, w0, #0xff
  4060f4:	and	x0, x0, #0xff
  4060f8:	cmp	x0, #0x0
  4060fc:	b.eq	406128 <manager_new+0x6c>  // b.none
  406100:	adrp	x0, 419000 <_fini>
  406104:	add	x1, x0, #0x43
  406108:	adrp	x0, 419000 <_fini>
  40610c:	add	x4, x0, #0x6c8
  406110:	mov	w3, #0x24                  	// #36
  406114:	mov	x2, x1
  406118:	adrp	x0, 419000 <_fini>
  40611c:	add	x1, x0, #0x60
  406120:	mov	w0, #0x0                   	// #0
  406124:	bl	4052a0 <log_assert_failed_realm@plt>
  406128:	mov	x1, #0x68                  	// #104
  40612c:	mov	x0, #0x1                   	// #1
  406130:	bl	4058a0 <calloc@plt>
  406134:	str	x0, [sp, #56]
  406138:	ldr	x0, [sp, #56]
  40613c:	cmp	x0, #0x0
  406140:	b.ne	40614c <manager_new+0x90>  // b.any
  406144:	mov	w19, #0xfffffff4            	// #-12
  406148:	b	406270 <manager_new+0x1b4>
  40614c:	ldr	x19, [sp, #56]
  406150:	adrp	x0, 419000 <_fini>
  406154:	add	x0, x0, #0x20
  406158:	bl	4055e0 <internal_hashmap_new@plt>
  40615c:	str	x0, [x19, #16]
  406160:	ldr	x19, [sp, #56]
  406164:	adrp	x0, 430000 <__FRAME_END__+0x10c5c>
  406168:	add	x0, x0, #0x1a0
  40616c:	bl	4055e0 <internal_hashmap_new@plt>
  406170:	str	x0, [x19, #24]
  406174:	ldr	x19, [sp, #56]
  406178:	mov	x0, #0x0                   	// #0
  40617c:	bl	4055e0 <internal_hashmap_new@plt>
  406180:	str	x0, [x19, #32]
  406184:	ldr	x0, [sp, #56]
  406188:	ldr	x0, [x0, #16]
  40618c:	cmp	x0, #0x0
  406190:	b.eq	4061b4 <manager_new+0xf8>  // b.none
  406194:	ldr	x0, [sp, #56]
  406198:	ldr	x0, [x0, #24]
  40619c:	cmp	x0, #0x0
  4061a0:	b.eq	4061b4 <manager_new+0xf8>  // b.none
  4061a4:	ldr	x0, [sp, #56]
  4061a8:	ldr	x0, [x0, #32]
  4061ac:	cmp	x0, #0x0
  4061b0:	b.ne	4061bc <manager_new+0x100>  // b.any
  4061b4:	mov	w19, #0xfffffff4            	// #-12
  4061b8:	b	406270 <manager_new+0x1b4>
  4061bc:	ldr	x0, [sp, #56]
  4061c0:	bl	4050b0 <sd_event_default@plt>
  4061c4:	str	w0, [sp, #52]
  4061c8:	ldr	w0, [sp, #52]
  4061cc:	cmp	w0, #0x0
  4061d0:	b.ge	4061dc <manager_new+0x120>  // b.tcont
  4061d4:	ldr	w19, [sp, #52]
  4061d8:	b	406270 <manager_new+0x1b4>
  4061dc:	ldr	x0, [sp, #56]
  4061e0:	ldr	x0, [x0]
  4061e4:	mov	x4, #0x0                   	// #0
  4061e8:	mov	x3, #0x0                   	// #0
  4061ec:	mov	w2, #0x2                   	// #2
  4061f0:	mov	x1, #0x0                   	// #0
  4061f4:	bl	405b10 <sd_event_add_signal@plt>
  4061f8:	str	w0, [sp, #52]
  4061fc:	ldr	w0, [sp, #52]
  406200:	cmp	w0, #0x0
  406204:	b.ge	406210 <manager_new+0x154>  // b.tcont
  406208:	ldr	w19, [sp, #52]
  40620c:	b	406270 <manager_new+0x1b4>
  406210:	ldr	x0, [sp, #56]
  406214:	ldr	x0, [x0]
  406218:	mov	x4, #0x0                   	// #0
  40621c:	mov	x3, #0x0                   	// #0
  406220:	mov	w2, #0xf                   	// #15
  406224:	mov	x1, #0x0                   	// #0
  406228:	bl	405b10 <sd_event_add_signal@plt>
  40622c:	str	w0, [sp, #52]
  406230:	ldr	w0, [sp, #52]
  406234:	cmp	w0, #0x0
  406238:	b.ge	406244 <manager_new+0x188>  // b.tcont
  40623c:	ldr	w19, [sp, #52]
  406240:	b	406270 <manager_new+0x1b4>
  406244:	ldr	x0, [sp, #56]
  406248:	ldr	x0, [x0]
  40624c:	mov	w1, #0x1                   	// #1
  406250:	bl	404f90 <sd_event_set_watchdog@plt>
  406254:	ldr	x0, [sp, #56]
  406258:	str	x0, [sp, #64]
  40625c:	str	xzr, [sp, #56]
  406260:	ldr	x1, [sp, #64]
  406264:	ldr	x0, [sp, #40]
  406268:	str	x1, [x0]
  40626c:	mov	w19, #0x0                   	// #0
  406270:	add	x0, sp, #0x38
  406274:	bl	406060 <manager_unrefp>
  406278:	mov	w1, w19
  40627c:	adrp	x0, 430000 <__FRAME_END__+0x10c5c>
  406280:	add	x0, x0, #0x198
  406284:	ldr	x2, [sp, #72]
  406288:	ldr	x0, [x0]
  40628c:	eor	x0, x2, x0
  406290:	cmp	x0, #0x0
  406294:	b.eq	40629c <manager_new+0x1e0>  // b.none
  406298:	bl	4055f0 <__stack_chk_fail@plt>
  40629c:	mov	w0, w1
  4062a0:	ldr	x19, [sp, #16]
  4062a4:	ldp	x29, x30, [sp], #80
  4062a8:	ret

00000000004062ac <manager_unref>:
  4062ac:	stp	x29, x30, [sp, #-32]!
  4062b0:	mov	x29, sp
  4062b4:	str	x0, [sp, #24]
  4062b8:	ldr	x0, [sp, #24]
  4062bc:	cmp	x0, #0x0
  4062c0:	b.ne	4062d8 <manager_unref+0x2c>  // b.any
  4062c4:	mov	x0, #0x0                   	// #0
  4062c8:	b	4063a4 <manager_unref+0xf8>
  4062cc:	ldr	x0, [sp, #24]
  4062d0:	ldr	x0, [x0, #80]
  4062d4:	bl	418c80 <operation_free>
  4062d8:	ldr	x0, [sp, #24]
  4062dc:	ldr	x0, [x0, #80]
  4062e0:	cmp	x0, #0x0
  4062e4:	b.ne	4062cc <manager_unref+0x20>  // b.any
  4062e8:	ldr	x0, [sp, #24]
  4062ec:	ldr	w0, [x0, #88]
  4062f0:	cmp	w0, #0x0
  4062f4:	cset	w0, ne  // ne = any
  4062f8:	and	w0, w0, #0xff
  4062fc:	and	x0, x0, #0xff
  406300:	cmp	x0, #0x0
  406304:	b.eq	406330 <manager_unref+0x84>  // b.none
  406308:	adrp	x0, 419000 <_fini>
  40630c:	add	x1, x0, #0x43
  406310:	adrp	x0, 419000 <_fini>
  406314:	add	x4, x0, #0x6d8
  406318:	mov	w3, #0x4a                  	// #74
  40631c:	mov	x2, x1
  406320:	adrp	x0, 419000 <_fini>
  406324:	add	x1, x0, #0x68
  406328:	mov	w0, #0x0                   	// #0
  40632c:	bl	4052a0 <log_assert_failed_realm@plt>
  406330:	ldr	x0, [sp, #24]
  406334:	ldr	x0, [x0, #16]
  406338:	bl	405eb4 <hashmap_free>
  40633c:	ldr	x0, [sp, #24]
  406340:	ldr	x0, [x0, #24]
  406344:	bl	405eb4 <hashmap_free>
  406348:	ldr	x0, [sp, #24]
  40634c:	ldr	x0, [x0, #32]
  406350:	bl	405eb4 <hashmap_free>
  406354:	ldr	x0, [sp, #24]
  406358:	ldr	x0, [x0, #48]
  40635c:	bl	405eb4 <hashmap_free>
  406360:	ldr	x0, [sp, #24]
  406364:	ldr	x0, [x0, #56]
  406368:	bl	4051d0 <sd_event_source_unref@plt>
  40636c:	ldr	x0, [sp, #24]
  406370:	ldr	x0, [x0, #96]
  406374:	bl	4051d0 <sd_event_source_unref@plt>
  406378:	ldr	x0, [sp, #24]
  40637c:	ldr	x0, [x0, #40]
  406380:	bl	405100 <bus_verify_polkit_async_registry_free@plt>
  406384:	ldr	x0, [sp, #24]
  406388:	ldr	x0, [x0, #8]
  40638c:	bl	405770 <sd_bus_flush_close_unref@plt>
  406390:	ldr	x0, [sp, #24]
  406394:	ldr	x0, [x0]
  406398:	bl	405a80 <sd_event_unref@plt>
  40639c:	ldr	x0, [sp, #24]
  4063a0:	bl	405e38 <mfree>
  4063a4:	ldp	x29, x30, [sp], #32
  4063a8:	ret

00000000004063ac <manager_add_host_machine>:
  4063ac:	stp	x29, x30, [sp, #-128]!
  4063b0:	mov	x29, sp
  4063b4:	str	x19, [sp, #16]
  4063b8:	str	x0, [sp, #40]
  4063bc:	adrp	x0, 430000 <__FRAME_END__+0x10c5c>
  4063c0:	add	x0, x0, #0x198
  4063c4:	ldr	x1, [x0]
  4063c8:	str	x1, [sp, #120]
  4063cc:	mov	x1, #0x0                   	// #0
  4063d0:	str	xzr, [sp, #64]
  4063d4:	str	xzr, [sp, #72]
  4063d8:	ldr	x0, [sp, #40]
  4063dc:	ldr	x0, [x0, #72]
  4063e0:	cmp	x0, #0x0
  4063e4:	b.eq	4063f0 <manager_add_host_machine+0x44>  // b.none
  4063e8:	mov	w19, #0x0                   	// #0
  4063ec:	b	4065c4 <manager_add_host_machine+0x218>
  4063f0:	add	x0, sp, #0x68
  4063f4:	bl	4056f0 <sd_id128_get_machine@plt>
  4063f8:	str	w0, [sp, #48]
  4063fc:	ldr	w0, [sp, #48]
  406400:	cmp	w0, #0x0
  406404:	b.ge	406494 <manager_add_host_machine+0xe8>  // b.tcont
  406408:	mov	w0, #0x3                   	// #3
  40640c:	str	w0, [sp, #52]
  406410:	ldr	w0, [sp, #48]
  406414:	str	w0, [sp, #56]
  406418:	str	wzr, [sp, #60]
  40641c:	ldr	w0, [sp, #60]
  406420:	bl	405c20 <log_get_max_level_realm@plt>
  406424:	mov	w1, w0
  406428:	ldr	w0, [sp, #52]
  40642c:	and	w0, w0, #0x7
  406430:	cmp	w1, w0
  406434:	b.lt	40647c <manager_add_host_machine+0xd0>  // b.tstop
  406438:	ldr	w0, [sp, #60]
  40643c:	lsl	w1, w0, #10
  406440:	ldr	w0, [sp, #52]
  406444:	orr	w6, w1, w0
  406448:	adrp	x0, 419000 <_fini>
  40644c:	add	x1, x0, #0x43
  406450:	adrp	x0, 419000 <_fini>
  406454:	add	x5, x0, #0x80
  406458:	adrp	x0, 419000 <_fini>
  40645c:	add	x4, x0, #0x6e8
  406460:	mov	w3, #0x67                  	// #103
  406464:	mov	x2, x1
  406468:	ldr	w1, [sp, #56]
  40646c:	mov	w0, w6
  406470:	bl	405750 <log_internal_realm@plt>
  406474:	mov	w19, w0
  406478:	b	4065c4 <manager_add_host_machine+0x218>
  40647c:	ldr	w0, [sp, #56]
  406480:	cmp	w0, #0x0
  406484:	cneg	w0, w0, lt  // lt = tstop
  406488:	and	w0, w0, #0xff
  40648c:	neg	w19, w0
  406490:	b	4065c4 <manager_add_host_machine+0x218>
  406494:	adrp	x0, 419000 <_fini>
  406498:	add	x0, x0, #0xa0
  40649c:	bl	405890 <strdup@plt>
  4064a0:	str	x0, [sp, #64]
  4064a4:	ldr	x0, [sp, #64]
  4064a8:	cmp	x0, #0x0
  4064ac:	b.ne	4064d4 <manager_add_host_machine+0x128>  // b.any
  4064b0:	adrp	x0, 419000 <_fini>
  4064b4:	add	x1, x0, #0x43
  4064b8:	adrp	x0, 419000 <_fini>
  4064bc:	add	x3, x0, #0x6e8
  4064c0:	mov	w2, #0x6b                  	// #107
  4064c4:	mov	w0, #0x0                   	// #0
  4064c8:	bl	405ba0 <log_oom_internal@plt>
  4064cc:	mov	w19, w0
  4064d0:	b	4065c4 <manager_add_host_machine+0x218>
  4064d4:	adrp	x0, 419000 <_fini>
  4064d8:	add	x0, x0, #0xa8
  4064dc:	bl	405890 <strdup@plt>
  4064e0:	str	x0, [sp, #72]
  4064e4:	ldr	x0, [sp, #72]
  4064e8:	cmp	x0, #0x0
  4064ec:	b.ne	406514 <manager_add_host_machine+0x168>  // b.any
  4064f0:	adrp	x0, 419000 <_fini>
  4064f4:	add	x1, x0, #0x43
  4064f8:	adrp	x0, 419000 <_fini>
  4064fc:	add	x3, x0, #0x6e8
  406500:	mov	w2, #0x6f                  	// #111
  406504:	mov	w0, #0x0                   	// #0
  406508:	bl	405ba0 <log_oom_internal@plt>
  40650c:	mov	w19, w0
  406510:	b	4065c4 <manager_add_host_machine+0x218>
  406514:	adrp	x0, 419000 <_fini>
  406518:	add	x2, x0, #0xb0
  40651c:	mov	w1, #0x2                   	// #2
  406520:	ldr	x0, [sp, #40]
  406524:	bl	407f1c <machine_new>
  406528:	str	x0, [sp, #80]
  40652c:	ldr	x0, [sp, #80]
  406530:	cmp	x0, #0x0
  406534:	b.ne	40655c <manager_add_host_machine+0x1b0>  // b.any
  406538:	adrp	x0, 419000 <_fini>
  40653c:	add	x1, x0, #0x43
  406540:	adrp	x0, 419000 <_fini>
  406544:	add	x3, x0, #0x6e8
  406548:	mov	w2, #0x73                  	// #115
  40654c:	mov	w0, #0x0                   	// #0
  406550:	bl	405ba0 <log_oom_internal@plt>
  406554:	mov	w19, w0
  406558:	b	4065c4 <manager_add_host_machine+0x218>
  40655c:	ldr	x0, [sp, #80]
  406560:	mov	w1, #0x1                   	// #1
  406564:	str	w1, [x0, #80]
  406568:	ldr	x2, [sp, #80]
  40656c:	ldp	x0, x1, [sp, #104]
  406570:	stp	x0, x1, [x2, #16]
  406574:	ldr	x0, [sp, #64]
  406578:	str	x0, [sp, #88]
  40657c:	str	xzr, [sp, #64]
  406580:	ldr	x1, [sp, #88]
  406584:	ldr	x0, [sp, #80]
  406588:	str	x1, [x0, #56]
  40658c:	ldr	x0, [sp, #72]
  406590:	str	x0, [sp, #96]
  406594:	str	xzr, [sp, #72]
  406598:	ldr	x1, [sp, #96]
  40659c:	ldr	x0, [sp, #80]
  4065a0:	str	x1, [x0, #64]
  4065a4:	ldr	x0, [sp, #80]
  4065a8:	add	x0, x0, #0x58
  4065ac:	mov	x1, #0x0                   	// #0
  4065b0:	bl	405210 <dual_timestamp_from_boottime_or_monotonic@plt>
  4065b4:	ldr	x0, [sp, #40]
  4065b8:	ldr	x1, [sp, #80]
  4065bc:	str	x1, [x0, #72]
  4065c0:	mov	w19, #0x0                   	// #0
  4065c4:	add	x0, sp, #0x48
  4065c8:	bl	405e58 <freep>
  4065cc:	add	x0, sp, #0x40
  4065d0:	bl	405e58 <freep>
  4065d4:	mov	w1, w19
  4065d8:	adrp	x0, 430000 <__FRAME_END__+0x10c5c>
  4065dc:	add	x0, x0, #0x198
  4065e0:	ldr	x2, [sp, #120]
  4065e4:	ldr	x0, [x0]
  4065e8:	eor	x0, x2, x0
  4065ec:	cmp	x0, #0x0
  4065f0:	b.eq	4065f8 <manager_add_host_machine+0x24c>  // b.none
  4065f4:	bl	4055f0 <__stack_chk_fail@plt>
  4065f8:	mov	w0, w1
  4065fc:	ldr	x19, [sp, #16]
  406600:	ldp	x29, x30, [sp], #128
  406604:	ret

0000000000406608 <manager_enumerate_machines>:
  406608:	stp	x29, x30, [sp, #-112]!
  40660c:	mov	x29, sp
  406610:	str	x19, [sp, #16]
  406614:	str	x0, [sp, #40]
  406618:	adrp	x0, 430000 <__FRAME_END__+0x10c5c>
  40661c:	add	x0, x0, #0x198
  406620:	ldr	x1, [x0]
  406624:	str	x1, [sp, #104]
  406628:	mov	x1, #0x0                   	// #0
  40662c:	str	xzr, [sp, #80]
  406630:	str	wzr, [sp, #48]
  406634:	ldr	x0, [sp, #40]
  406638:	cmp	x0, #0x0
  40663c:	cset	w0, eq  // eq = none
  406640:	and	w0, w0, #0xff
  406644:	and	x0, x0, #0xff
  406648:	cmp	x0, #0x0
  40664c:	b.eq	406678 <manager_enumerate_machines+0x70>  // b.none
  406650:	adrp	x0, 419000 <_fini>
  406654:	add	x1, x0, #0x43
  406658:	adrp	x0, 419000 <_fini>
  40665c:	add	x4, x0, #0x708
  406660:	mov	w3, #0x87                  	// #135
  406664:	mov	x2, x1
  406668:	adrp	x0, 419000 <_fini>
  40666c:	add	x1, x0, #0xb8
  406670:	mov	w0, #0x0                   	// #0
  406674:	bl	4052a0 <log_assert_failed_realm@plt>
  406678:	ldr	x0, [sp, #40]
  40667c:	bl	4063ac <manager_add_host_machine>
  406680:	str	w0, [sp, #48]
  406684:	ldr	w0, [sp, #48]
  406688:	cmp	w0, #0x0
  40668c:	b.ge	406698 <manager_enumerate_machines+0x90>  // b.tcont
  406690:	ldr	w19, [sp, #48]
  406694:	b	406940 <manager_enumerate_machines+0x338>
  406698:	adrp	x0, 419000 <_fini>
  40669c:	add	x0, x0, #0xc0
  4066a0:	bl	405870 <opendir@plt>
  4066a4:	str	x0, [sp, #80]
  4066a8:	ldr	x0, [sp, #80]
  4066ac:	cmp	x0, #0x0
  4066b0:	b.ne	40675c <manager_enumerate_machines+0x154>  // b.any
  4066b4:	bl	4054d0 <__errno_location@plt>
  4066b8:	ldr	w0, [x0]
  4066bc:	cmp	w0, #0x2
  4066c0:	b.ne	4066cc <manager_enumerate_machines+0xc4>  // b.any
  4066c4:	mov	w19, #0x0                   	// #0
  4066c8:	b	406940 <manager_enumerate_machines+0x338>
  4066cc:	mov	w0, #0x3                   	// #3
  4066d0:	str	w0, [sp, #68]
  4066d4:	bl	4054d0 <__errno_location@plt>
  4066d8:	ldr	w0, [x0]
  4066dc:	str	w0, [sp, #72]
  4066e0:	str	wzr, [sp, #76]
  4066e4:	ldr	w0, [sp, #76]
  4066e8:	bl	405c20 <log_get_max_level_realm@plt>
  4066ec:	mov	w1, w0
  4066f0:	ldr	w0, [sp, #68]
  4066f4:	and	w0, w0, #0x7
  4066f8:	cmp	w1, w0
  4066fc:	b.lt	406744 <manager_enumerate_machines+0x13c>  // b.tstop
  406700:	ldr	w0, [sp, #76]
  406704:	lsl	w1, w0, #10
  406708:	ldr	w0, [sp, #68]
  40670c:	orr	w6, w1, w0
  406710:	adrp	x0, 419000 <_fini>
  406714:	add	x1, x0, #0x43
  406718:	adrp	x0, 419000 <_fini>
  40671c:	add	x5, x0, #0xd8
  406720:	adrp	x0, 419000 <_fini>
  406724:	add	x4, x0, #0x728
  406728:	mov	w3, #0x93                  	// #147
  40672c:	mov	x2, x1
  406730:	ldr	w1, [sp, #72]
  406734:	mov	w0, w6
  406738:	bl	405750 <log_internal_realm@plt>
  40673c:	mov	w19, w0
  406740:	b	406940 <manager_enumerate_machines+0x338>
  406744:	ldr	w0, [sp, #72]
  406748:	cmp	w0, #0x0
  40674c:	cneg	w0, w0, lt  // lt = tstop
  406750:	and	w0, w0, #0xff
  406754:	neg	w19, w0
  406758:	b	406940 <manager_enumerate_machines+0x338>
  40675c:	bl	4054d0 <__errno_location@plt>
  406760:	str	wzr, [x0]
  406764:	ldr	x0, [sp, #80]
  406768:	bl	4052d0 <readdir64@plt>
  40676c:	str	x0, [sp, #96]
  406770:	ldr	x0, [sp, #96]
  406774:	cmp	x0, #0x0
  406778:	b.ne	40679c <manager_enumerate_machines+0x194>  // b.any
  40677c:	bl	4054d0 <__errno_location@plt>
  406780:	ldr	w0, [x0]
  406784:	cmp	w0, #0x0
  406788:	b.le	406938 <manager_enumerate_machines+0x330>
  40678c:	bl	4054d0 <__errno_location@plt>
  406790:	ldr	w0, [x0]
  406794:	neg	w19, w0
  406798:	b	406940 <manager_enumerate_machines+0x338>
  40679c:	ldr	x0, [sp, #96]
  4067a0:	add	x0, x0, #0x13
  4067a4:	bl	4050f0 <hidden_or_backup_file@plt>
  4067a8:	and	w0, w0, #0xff
  4067ac:	cmp	w0, #0x0
  4067b0:	b.ne	406904 <manager_enumerate_machines+0x2fc>  // b.any
  4067b4:	ldr	x0, [sp, #96]
  4067b8:	bl	405ac0 <dirent_is_file@plt>
  4067bc:	and	w0, w0, #0xff
  4067c0:	eor	w0, w0, #0x1
  4067c4:	and	w0, w0, #0xff
  4067c8:	cmp	w0, #0x0
  4067cc:	b.ne	40690c <manager_enumerate_machines+0x304>  // b.any
  4067d0:	ldr	x0, [sp, #96]
  4067d4:	add	x2, x0, #0x13
  4067d8:	adrp	x0, 419000 <_fini>
  4067dc:	add	x1, x0, #0x108
  4067e0:	mov	x0, x2
  4067e4:	bl	405f54 <startswith>
  4067e8:	cmp	x0, #0x0
  4067ec:	b.ne	406914 <manager_enumerate_machines+0x30c>  // b.any
  4067f0:	ldr	x0, [sp, #96]
  4067f4:	add	x0, x0, #0x13
  4067f8:	mov	w1, #0x0                   	// #0
  4067fc:	bl	405200 <hostname_is_valid@plt>
  406800:	and	w0, w0, #0xff
  406804:	eor	w0, w0, #0x1
  406808:	and	w0, w0, #0xff
  40680c:	cmp	w0, #0x0
  406810:	b.ne	40691c <manager_enumerate_machines+0x314>  // b.any
  406814:	ldr	x0, [sp, #96]
  406818:	add	x0, x0, #0x13
  40681c:	add	x1, sp, #0x58
  406820:	mov	x2, x1
  406824:	mov	x1, x0
  406828:	ldr	x0, [sp, #40]
  40682c:	bl	41059c <manager_add_machine>
  406830:	str	w0, [sp, #52]
  406834:	ldr	w0, [sp, #52]
  406838:	cmp	w0, #0x0
  40683c:	b.ge	4068d8 <manager_enumerate_machines+0x2d0>  // b.tcont
  406840:	mov	w0, #0x3                   	// #3
  406844:	str	w0, [sp, #56]
  406848:	ldr	w0, [sp, #52]
  40684c:	str	w0, [sp, #60]
  406850:	str	wzr, [sp, #64]
  406854:	ldr	w0, [sp, #64]
  406858:	bl	405c20 <log_get_max_level_realm@plt>
  40685c:	mov	w1, w0
  406860:	ldr	w0, [sp, #56]
  406864:	and	w0, w0, #0x7
  406868:	cmp	w1, w0
  40686c:	b.lt	4068bc <manager_enumerate_machines+0x2b4>  // b.tstop
  406870:	ldr	w0, [sp, #64]
  406874:	lsl	w1, w0, #10
  406878:	ldr	w0, [sp, #56]
  40687c:	orr	w7, w1, w0
  406880:	adrp	x0, 419000 <_fini>
  406884:	add	x1, x0, #0x43
  406888:	ldr	x0, [sp, #96]
  40688c:	add	x0, x0, #0x13
  406890:	mov	x6, x0
  406894:	adrp	x0, 419000 <_fini>
  406898:	add	x5, x0, #0x110
  40689c:	adrp	x0, 419000 <_fini>
  4068a0:	add	x4, x0, #0x728
  4068a4:	mov	w3, #0xa6                  	// #166
  4068a8:	mov	x2, x1
  4068ac:	ldr	w1, [sp, #60]
  4068b0:	mov	w0, w7
  4068b4:	bl	405750 <log_internal_realm@plt>
  4068b8:	b	4068d0 <manager_enumerate_machines+0x2c8>
  4068bc:	ldr	w0, [sp, #60]
  4068c0:	cmp	w0, #0x0
  4068c4:	cneg	w0, w0, lt  // lt = tstop
  4068c8:	and	w0, w0, #0xff
  4068cc:	neg	w0, w0
  4068d0:	str	w0, [sp, #48]
  4068d4:	b	406920 <manager_enumerate_machines+0x318>
  4068d8:	ldr	x0, [sp, #88]
  4068dc:	bl	40a2fc <machine_add_to_gc_queue>
  4068e0:	ldr	x0, [sp, #88]
  4068e4:	bl	408e28 <machine_load>
  4068e8:	str	w0, [sp, #52]
  4068ec:	ldr	w0, [sp, #52]
  4068f0:	cmp	w0, #0x0
  4068f4:	b.ge	406920 <manager_enumerate_machines+0x318>  // b.tcont
  4068f8:	ldr	w0, [sp, #52]
  4068fc:	str	w0, [sp, #48]
  406900:	b	406920 <manager_enumerate_machines+0x318>
  406904:	nop
  406908:	b	406920 <manager_enumerate_machines+0x318>
  40690c:	nop
  406910:	b	406920 <manager_enumerate_machines+0x318>
  406914:	nop
  406918:	b	406920 <manager_enumerate_machines+0x318>
  40691c:	nop
  406920:	bl	4054d0 <__errno_location@plt>
  406924:	str	wzr, [x0]
  406928:	ldr	x0, [sp, #80]
  40692c:	bl	4052d0 <readdir64@plt>
  406930:	str	x0, [sp, #96]
  406934:	b	406770 <manager_enumerate_machines+0x168>
  406938:	nop
  40693c:	ldr	w19, [sp, #48]
  406940:	add	x0, sp, #0x50
  406944:	bl	405fa4 <closedirp>
  406948:	mov	w1, w19
  40694c:	adrp	x0, 430000 <__FRAME_END__+0x10c5c>
  406950:	add	x0, x0, #0x198
  406954:	ldr	x2, [sp, #104]
  406958:	ldr	x0, [x0]
  40695c:	eor	x0, x2, x0
  406960:	cmp	x0, #0x0
  406964:	b.eq	40696c <manager_enumerate_machines+0x364>  // b.none
  406968:	bl	4055f0 <__stack_chk_fail@plt>
  40696c:	mov	w0, w1
  406970:	ldr	x19, [sp, #16]
  406974:	ldp	x29, x30, [sp], #112
  406978:	ret

000000000040697c <manager_connect_bus>:
  40697c:	sub	sp, sp, #0xd0
  406980:	stp	x29, x30, [sp, #16]
  406984:	add	x29, sp, #0x10
  406988:	str	x0, [sp, #40]
  40698c:	ldr	x0, [sp, #40]
  406990:	cmp	x0, #0x0
  406994:	cset	w0, eq  // eq = none
  406998:	and	w0, w0, #0xff
  40699c:	and	x0, x0, #0xff
  4069a0:	cmp	x0, #0x0
  4069a4:	b.eq	4069d0 <manager_connect_bus+0x54>  // b.none
  4069a8:	adrp	x0, 419000 <_fini>
  4069ac:	add	x1, x0, #0x43
  4069b0:	adrp	x0, 419000 <_fini>
  4069b4:	add	x4, x0, #0x748
  4069b8:	mov	w3, #0xb7                  	// #183
  4069bc:	mov	x2, x1
  4069c0:	adrp	x0, 419000 <_fini>
  4069c4:	add	x1, x0, #0xb8
  4069c8:	mov	w0, #0x0                   	// #0
  4069cc:	bl	4052a0 <log_assert_failed_realm@plt>
  4069d0:	ldr	x0, [sp, #40]
  4069d4:	ldr	x0, [x0, #8]
  4069d8:	cmp	x0, #0x0
  4069dc:	cset	w0, ne  // ne = any
  4069e0:	and	w0, w0, #0xff
  4069e4:	and	x0, x0, #0xff
  4069e8:	cmp	x0, #0x0
  4069ec:	b.eq	406a18 <manager_connect_bus+0x9c>  // b.none
  4069f0:	adrp	x0, 419000 <_fini>
  4069f4:	add	x1, x0, #0x43
  4069f8:	adrp	x0, 419000 <_fini>
  4069fc:	add	x4, x0, #0x748
  406a00:	mov	w3, #0xb8                  	// #184
  406a04:	mov	x2, x1
  406a08:	adrp	x0, 419000 <_fini>
  406a0c:	add	x1, x0, #0x140
  406a10:	mov	w0, #0x0                   	// #0
  406a14:	bl	4052a0 <log_assert_failed_realm@plt>
  406a18:	ldr	x0, [sp, #40]
  406a1c:	add	x0, x0, #0x8
  406a20:	bl	405760 <sd_bus_default_system@plt>
  406a24:	str	w0, [sp, #48]
  406a28:	ldr	w0, [sp, #48]
  406a2c:	cmp	w0, #0x0
  406a30:	b.ge	406abc <manager_connect_bus+0x140>  // b.tcont
  406a34:	mov	w0, #0x3                   	// #3
  406a38:	str	w0, [sp, #196]
  406a3c:	ldr	w0, [sp, #48]
  406a40:	str	w0, [sp, #200]
  406a44:	str	wzr, [sp, #204]
  406a48:	ldr	w0, [sp, #204]
  406a4c:	bl	405c20 <log_get_max_level_realm@plt>
  406a50:	mov	w1, w0
  406a54:	ldr	w0, [sp, #196]
  406a58:	and	w0, w0, #0x7
  406a5c:	cmp	w1, w0
  406a60:	b.lt	406aa4 <manager_connect_bus+0x128>  // b.tstop
  406a64:	ldr	w0, [sp, #204]
  406a68:	lsl	w1, w0, #10
  406a6c:	ldr	w0, [sp, #196]
  406a70:	orr	w6, w1, w0
  406a74:	adrp	x0, 419000 <_fini>
  406a78:	add	x1, x0, #0x43
  406a7c:	adrp	x0, 419000 <_fini>
  406a80:	add	x5, x0, #0x148
  406a84:	adrp	x0, 419000 <_fini>
  406a88:	add	x4, x0, #0x760
  406a8c:	mov	w3, #0xbc                  	// #188
  406a90:	mov	x2, x1
  406a94:	ldr	w1, [sp, #200]
  406a98:	mov	w0, w6
  406a9c:	bl	405750 <log_internal_realm@plt>
  406aa0:	b	407474 <manager_connect_bus+0xaf8>
  406aa4:	ldr	w0, [sp, #200]
  406aa8:	cmp	w0, #0x0
  406aac:	cneg	w0, w0, lt  // lt = tstop
  406ab0:	and	w0, w0, #0xff
  406ab4:	neg	w0, w0
  406ab8:	b	407474 <manager_connect_bus+0xaf8>
  406abc:	ldr	x0, [sp, #40]
  406ac0:	ldr	x6, [x0, #8]
  406ac4:	ldr	x5, [sp, #40]
  406ac8:	adrp	x0, 430000 <__FRAME_END__+0x10c5c>
  406acc:	add	x4, x0, #0x1c0
  406ad0:	adrp	x0, 419000 <_fini>
  406ad4:	add	x3, x0, #0x170
  406ad8:	adrp	x0, 419000 <_fini>
  406adc:	add	x2, x0, #0x198
  406ae0:	mov	x1, #0x0                   	// #0
  406ae4:	mov	x0, x6
  406ae8:	bl	405570 <sd_bus_add_object_vtable@plt>
  406aec:	str	w0, [sp, #48]
  406af0:	ldr	w0, [sp, #48]
  406af4:	cmp	w0, #0x0
  406af8:	b.ge	406b84 <manager_connect_bus+0x208>  // b.tcont
  406afc:	mov	w0, #0x3                   	// #3
  406b00:	str	w0, [sp, #184]
  406b04:	ldr	w0, [sp, #48]
  406b08:	str	w0, [sp, #188]
  406b0c:	str	wzr, [sp, #192]
  406b10:	ldr	w0, [sp, #192]
  406b14:	bl	405c20 <log_get_max_level_realm@plt>
  406b18:	mov	w1, w0
  406b1c:	ldr	w0, [sp, #184]
  406b20:	and	w0, w0, #0x7
  406b24:	cmp	w1, w0
  406b28:	b.lt	406b6c <manager_connect_bus+0x1f0>  // b.tstop
  406b2c:	ldr	w0, [sp, #192]
  406b30:	lsl	w1, w0, #10
  406b34:	ldr	w0, [sp, #184]
  406b38:	orr	w6, w1, w0
  406b3c:	adrp	x0, 419000 <_fini>
  406b40:	add	x1, x0, #0x43
  406b44:	adrp	x0, 419000 <_fini>
  406b48:	add	x5, x0, #0x1b8
  406b4c:	adrp	x0, 419000 <_fini>
  406b50:	add	x4, x0, #0x760
  406b54:	mov	w3, #0xc0                  	// #192
  406b58:	mov	x2, x1
  406b5c:	ldr	w1, [sp, #188]
  406b60:	mov	w0, w6
  406b64:	bl	405750 <log_internal_realm@plt>
  406b68:	b	407474 <manager_connect_bus+0xaf8>
  406b6c:	ldr	w0, [sp, #188]
  406b70:	cmp	w0, #0x0
  406b74:	cneg	w0, w0, lt  // lt = tstop
  406b78:	and	w0, w0, #0xff
  406b7c:	neg	w0, w0
  406b80:	b	407474 <manager_connect_bus+0xaf8>
  406b84:	ldr	x0, [sp, #40]
  406b88:	ldr	x7, [x0, #8]
  406b8c:	ldr	x6, [sp, #40]
  406b90:	adrp	x0, 416000 <bus_machine_method_open_root_directory+0x474>
  406b94:	add	x5, x0, #0x1dc
  406b98:	adrp	x0, 430000 <__FRAME_END__+0x10c5c>
  406b9c:	add	x4, x0, #0xb60
  406ba0:	adrp	x0, 419000 <_fini>
  406ba4:	add	x3, x0, #0x1e0
  406ba8:	adrp	x0, 419000 <_fini>
  406bac:	add	x2, x0, #0x208
  406bb0:	mov	x1, #0x0                   	// #0
  406bb4:	mov	x0, x7
  406bb8:	bl	4057a0 <sd_bus_add_fallback_vtable@plt>
  406bbc:	str	w0, [sp, #48]
  406bc0:	ldr	w0, [sp, #48]
  406bc4:	cmp	w0, #0x0
  406bc8:	b.ge	406c54 <manager_connect_bus+0x2d8>  // b.tcont
  406bcc:	mov	w0, #0x3                   	// #3
  406bd0:	str	w0, [sp, #172]
  406bd4:	ldr	w0, [sp, #48]
  406bd8:	str	w0, [sp, #176]
  406bdc:	str	wzr, [sp, #180]
  406be0:	ldr	w0, [sp, #180]
  406be4:	bl	405c20 <log_get_max_level_realm@plt>
  406be8:	mov	w1, w0
  406bec:	ldr	w0, [sp, #172]
  406bf0:	and	w0, w0, #0x7
  406bf4:	cmp	w1, w0
  406bf8:	b.lt	406c3c <manager_connect_bus+0x2c0>  // b.tstop
  406bfc:	ldr	w0, [sp, #180]
  406c00:	lsl	w1, w0, #10
  406c04:	ldr	w0, [sp, #172]
  406c08:	orr	w6, w1, w0
  406c0c:	adrp	x0, 419000 <_fini>
  406c10:	add	x1, x0, #0x43
  406c14:	adrp	x0, 419000 <_fini>
  406c18:	add	x5, x0, #0x230
  406c1c:	adrp	x0, 419000 <_fini>
  406c20:	add	x4, x0, #0x760
  406c24:	mov	w3, #0xc4                  	// #196
  406c28:	mov	x2, x1
  406c2c:	ldr	w1, [sp, #176]
  406c30:	mov	w0, w6
  406c34:	bl	405750 <log_internal_realm@plt>
  406c38:	b	407474 <manager_connect_bus+0xaf8>
  406c3c:	ldr	w0, [sp, #176]
  406c40:	cmp	w0, #0x0
  406c44:	cneg	w0, w0, lt  // lt = tstop
  406c48:	and	w0, w0, #0xff
  406c4c:	neg	w0, w0
  406c50:	b	407474 <manager_connect_bus+0xaf8>
  406c54:	ldr	x0, [sp, #40]
  406c58:	ldr	x5, [x0, #8]
  406c5c:	ldr	x4, [sp, #40]
  406c60:	adrp	x0, 416000 <bus_machine_method_open_root_directory+0x474>
  406c64:	add	x3, x0, #0x614
  406c68:	adrp	x0, 419000 <_fini>
  406c6c:	add	x2, x0, #0x208
  406c70:	mov	x1, #0x0                   	// #0
  406c74:	mov	x0, x5
  406c78:	bl	4059c0 <sd_bus_add_node_enumerator@plt>
  406c7c:	str	w0, [sp, #48]
  406c80:	ldr	w0, [sp, #48]
  406c84:	cmp	w0, #0x0
  406c88:	b.ge	406d14 <manager_connect_bus+0x398>  // b.tcont
  406c8c:	mov	w0, #0x3                   	// #3
  406c90:	str	w0, [sp, #160]
  406c94:	ldr	w0, [sp, #48]
  406c98:	str	w0, [sp, #164]
  406c9c:	str	wzr, [sp, #168]
  406ca0:	ldr	w0, [sp, #168]
  406ca4:	bl	405c20 <log_get_max_level_realm@plt>
  406ca8:	mov	w1, w0
  406cac:	ldr	w0, [sp, #160]
  406cb0:	and	w0, w0, #0x7
  406cb4:	cmp	w1, w0
  406cb8:	b.lt	406cfc <manager_connect_bus+0x380>  // b.tstop
  406cbc:	ldr	w0, [sp, #168]
  406cc0:	lsl	w1, w0, #10
  406cc4:	ldr	w0, [sp, #160]
  406cc8:	orr	w6, w1, w0
  406ccc:	adrp	x0, 419000 <_fini>
  406cd0:	add	x1, x0, #0x43
  406cd4:	adrp	x0, 419000 <_fini>
  406cd8:	add	x5, x0, #0x258
  406cdc:	adrp	x0, 419000 <_fini>
  406ce0:	add	x4, x0, #0x760
  406ce4:	mov	w3, #0xc8                  	// #200
  406ce8:	mov	x2, x1
  406cec:	ldr	w1, [sp, #164]
  406cf0:	mov	w0, w6
  406cf4:	bl	405750 <log_internal_realm@plt>
  406cf8:	b	407474 <manager_connect_bus+0xaf8>
  406cfc:	ldr	w0, [sp, #164]
  406d00:	cmp	w0, #0x0
  406d04:	cneg	w0, w0, lt  // lt = tstop
  406d08:	and	w0, w0, #0xff
  406d0c:	neg	w0, w0
  406d10:	b	407474 <manager_connect_bus+0xaf8>
  406d14:	ldr	x0, [sp, #40]
  406d18:	ldr	x7, [x0, #8]
  406d1c:	ldr	x6, [sp, #40]
  406d20:	adrp	x0, 417000 <bus_image_method_remove+0x174>
  406d24:	add	x5, x0, #0xdd8
  406d28:	adrp	x0, 431000 <machine_vtable+0x4a0>
  406d2c:	add	x4, x0, #0x110
  406d30:	adrp	x0, 419000 <_fini>
  406d34:	add	x3, x0, #0x280
  406d38:	adrp	x0, 419000 <_fini>
  406d3c:	add	x2, x0, #0x2a0
  406d40:	mov	x1, #0x0                   	// #0
  406d44:	mov	x0, x7
  406d48:	bl	4057a0 <sd_bus_add_fallback_vtable@plt>
  406d4c:	str	w0, [sp, #48]
  406d50:	ldr	w0, [sp, #48]
  406d54:	cmp	w0, #0x0
  406d58:	b.ge	406de4 <manager_connect_bus+0x468>  // b.tcont
  406d5c:	mov	w0, #0x3                   	// #3
  406d60:	str	w0, [sp, #148]
  406d64:	ldr	w0, [sp, #48]
  406d68:	str	w0, [sp, #152]
  406d6c:	str	wzr, [sp, #156]
  406d70:	ldr	w0, [sp, #156]
  406d74:	bl	405c20 <log_get_max_level_realm@plt>
  406d78:	mov	w1, w0
  406d7c:	ldr	w0, [sp, #148]
  406d80:	and	w0, w0, #0x7
  406d84:	cmp	w1, w0
  406d88:	b.lt	406dcc <manager_connect_bus+0x450>  // b.tstop
  406d8c:	ldr	w0, [sp, #156]
  406d90:	lsl	w1, w0, #10
  406d94:	ldr	w0, [sp, #148]
  406d98:	orr	w6, w1, w0
  406d9c:	adrp	x0, 419000 <_fini>
  406da0:	add	x1, x0, #0x43
  406da4:	adrp	x0, 419000 <_fini>
  406da8:	add	x5, x0, #0x2c0
  406dac:	adrp	x0, 419000 <_fini>
  406db0:	add	x4, x0, #0x760
  406db4:	mov	w3, #0xcc                  	// #204
  406db8:	mov	x2, x1
  406dbc:	ldr	w1, [sp, #152]
  406dc0:	mov	w0, w6
  406dc4:	bl	405750 <log_internal_realm@plt>
  406dc8:	b	407474 <manager_connect_bus+0xaf8>
  406dcc:	ldr	w0, [sp, #152]
  406dd0:	cmp	w0, #0x0
  406dd4:	cneg	w0, w0, lt  // lt = tstop
  406dd8:	and	w0, w0, #0xff
  406ddc:	neg	w0, w0
  406de0:	b	407474 <manager_connect_bus+0xaf8>
  406de4:	ldr	x0, [sp, #40]
  406de8:	ldr	x5, [x0, #8]
  406dec:	ldr	x4, [sp, #40]
  406df0:	adrp	x0, 418000 <image_object_find+0x228>
  406df4:	add	x3, x0, #0x23c
  406df8:	adrp	x0, 419000 <_fini>
  406dfc:	add	x2, x0, #0x2a0
  406e00:	mov	x1, #0x0                   	// #0
  406e04:	mov	x0, x5
  406e08:	bl	4059c0 <sd_bus_add_node_enumerator@plt>
  406e0c:	str	w0, [sp, #48]
  406e10:	ldr	w0, [sp, #48]
  406e14:	cmp	w0, #0x0
  406e18:	b.ge	406ea4 <manager_connect_bus+0x528>  // b.tcont
  406e1c:	mov	w0, #0x3                   	// #3
  406e20:	str	w0, [sp, #136]
  406e24:	ldr	w0, [sp, #48]
  406e28:	str	w0, [sp, #140]
  406e2c:	str	wzr, [sp, #144]
  406e30:	ldr	w0, [sp, #144]
  406e34:	bl	405c20 <log_get_max_level_realm@plt>
  406e38:	mov	w1, w0
  406e3c:	ldr	w0, [sp, #136]
  406e40:	and	w0, w0, #0x7
  406e44:	cmp	w1, w0
  406e48:	b.lt	406e8c <manager_connect_bus+0x510>  // b.tstop
  406e4c:	ldr	w0, [sp, #144]
  406e50:	lsl	w1, w0, #10
  406e54:	ldr	w0, [sp, #136]
  406e58:	orr	w6, w1, w0
  406e5c:	adrp	x0, 419000 <_fini>
  406e60:	add	x1, x0, #0x43
  406e64:	adrp	x0, 419000 <_fini>
  406e68:	add	x5, x0, #0x2e8
  406e6c:	adrp	x0, 419000 <_fini>
  406e70:	add	x4, x0, #0x760
  406e74:	mov	w3, #0xd0                  	// #208
  406e78:	mov	x2, x1
  406e7c:	ldr	w1, [sp, #140]
  406e80:	mov	w0, w6
  406e84:	bl	405750 <log_internal_realm@plt>
  406e88:	b	407474 <manager_connect_bus+0xaf8>
  406e8c:	ldr	w0, [sp, #140]
  406e90:	cmp	w0, #0x0
  406e94:	cneg	w0, w0, lt  // lt = tstop
  406e98:	and	w0, w0, #0xff
  406e9c:	neg	w0, w0
  406ea0:	b	407474 <manager_connect_bus+0xaf8>
  406ea4:	ldr	x0, [sp, #40]
  406ea8:	ldr	x8, [x0, #8]
  406eac:	ldr	x0, [sp, #40]
  406eb0:	str	x0, [sp]
  406eb4:	mov	x7, #0x0                   	// #0
  406eb8:	adrp	x0, 40f000 <method_map_to_machine_group+0x198>
  406ebc:	add	x6, x0, #0x2e4
  406ec0:	adrp	x0, 419000 <_fini>
  406ec4:	add	x5, x0, #0x310
  406ec8:	adrp	x0, 419000 <_fini>
  406ecc:	add	x4, x0, #0x320
  406ed0:	adrp	x0, 419000 <_fini>
  406ed4:	add	x3, x0, #0x348
  406ed8:	adrp	x0, 419000 <_fini>
  406edc:	add	x2, x0, #0x368
  406ee0:	mov	x1, #0x0                   	// #0
  406ee4:	mov	x0, x8
  406ee8:	bl	405410 <sd_bus_match_signal_async@plt>
  406eec:	str	w0, [sp, #48]
  406ef0:	ldr	w0, [sp, #48]
  406ef4:	cmp	w0, #0x0
  406ef8:	b.ge	406f84 <manager_connect_bus+0x608>  // b.tcont
  406efc:	mov	w0, #0x3                   	// #3
  406f00:	str	w0, [sp, #124]
  406f04:	ldr	w0, [sp, #48]
  406f08:	str	w0, [sp, #128]
  406f0c:	str	wzr, [sp, #132]
  406f10:	ldr	w0, [sp, #132]
  406f14:	bl	405c20 <log_get_max_level_realm@plt>
  406f18:	mov	w1, w0
  406f1c:	ldr	w0, [sp, #124]
  406f20:	and	w0, w0, #0x7
  406f24:	cmp	w1, w0
  406f28:	b.lt	406f6c <manager_connect_bus+0x5f0>  // b.tstop
  406f2c:	ldr	w0, [sp, #132]
  406f30:	lsl	w1, w0, #10
  406f34:	ldr	w0, [sp, #124]
  406f38:	orr	w6, w1, w0
  406f3c:	adrp	x0, 419000 <_fini>
  406f40:	add	x1, x0, #0x43
  406f44:	adrp	x0, 419000 <_fini>
  406f48:	add	x5, x0, #0x388
  406f4c:	adrp	x0, 419000 <_fini>
  406f50:	add	x4, x0, #0x760
  406f54:	mov	w3, #0xdb                  	// #219
  406f58:	mov	x2, x1
  406f5c:	ldr	w1, [sp, #128]
  406f60:	mov	w0, w6
  406f64:	bl	405750 <log_internal_realm@plt>
  406f68:	b	407474 <manager_connect_bus+0xaf8>
  406f6c:	ldr	w0, [sp, #128]
  406f70:	cmp	w0, #0x0
  406f74:	cneg	w0, w0, lt  // lt = tstop
  406f78:	and	w0, w0, #0xff
  406f7c:	neg	w0, w0
  406f80:	b	407474 <manager_connect_bus+0xaf8>
  406f84:	ldr	x0, [sp, #40]
  406f88:	ldr	x8, [x0, #8]
  406f8c:	ldr	x0, [sp, #40]
  406f90:	str	x0, [sp]
  406f94:	mov	x7, #0x0                   	// #0
  406f98:	adrp	x0, 40f000 <method_map_to_machine_group+0x198>
  406f9c:	add	x6, x0, #0x740
  406fa0:	adrp	x0, 419000 <_fini>
  406fa4:	add	x5, x0, #0x3b0
  406fa8:	adrp	x0, 419000 <_fini>
  406fac:	add	x4, x0, #0x320
  406fb0:	adrp	x0, 419000 <_fini>
  406fb4:	add	x3, x0, #0x348
  406fb8:	adrp	x0, 419000 <_fini>
  406fbc:	add	x2, x0, #0x368
  406fc0:	mov	x1, #0x0                   	// #0
  406fc4:	mov	x0, x8
  406fc8:	bl	405410 <sd_bus_match_signal_async@plt>
  406fcc:	str	w0, [sp, #48]
  406fd0:	ldr	w0, [sp, #48]
  406fd4:	cmp	w0, #0x0
  406fd8:	b.ge	407064 <manager_connect_bus+0x6e8>  // b.tcont
  406fdc:	mov	w0, #0x3                   	// #3
  406fe0:	str	w0, [sp, #112]
  406fe4:	ldr	w0, [sp, #48]
  406fe8:	str	w0, [sp, #116]
  406fec:	str	wzr, [sp, #120]
  406ff0:	ldr	w0, [sp, #120]
  406ff4:	bl	405c20 <log_get_max_level_realm@plt>
  406ff8:	mov	w1, w0
  406ffc:	ldr	w0, [sp, #112]
  407000:	and	w0, w0, #0x7
  407004:	cmp	w1, w0
  407008:	b.lt	40704c <manager_connect_bus+0x6d0>  // b.tstop
  40700c:	ldr	w0, [sp, #120]
  407010:	lsl	w1, w0, #10
  407014:	ldr	w0, [sp, #112]
  407018:	orr	w6, w1, w0
  40701c:	adrp	x0, 419000 <_fini>
  407020:	add	x1, x0, #0x43
  407024:	adrp	x0, 419000 <_fini>
  407028:	add	x5, x0, #0x3c0
  40702c:	adrp	x0, 419000 <_fini>
  407030:	add	x4, x0, #0x760
  407034:	mov	w3, #0xe6                  	// #230
  407038:	mov	x2, x1
  40703c:	ldr	w1, [sp, #116]
  407040:	mov	w0, w6
  407044:	bl	405750 <log_internal_realm@plt>
  407048:	b	407474 <manager_connect_bus+0xaf8>
  40704c:	ldr	w0, [sp, #116]
  407050:	cmp	w0, #0x0
  407054:	cneg	w0, w0, lt  // lt = tstop
  407058:	and	w0, w0, #0xff
  40705c:	neg	w0, w0
  407060:	b	407474 <manager_connect_bus+0xaf8>
  407064:	ldr	x0, [sp, #40]
  407068:	ldr	x8, [x0, #8]
  40706c:	ldr	x0, [sp, #40]
  407070:	str	x0, [sp]
  407074:	mov	x7, #0x0                   	// #0
  407078:	adrp	x0, 40f000 <method_map_to_machine_group+0x198>
  40707c:	add	x6, x0, #0x598
  407080:	adrp	x0, 419000 <_fini>
  407084:	add	x5, x0, #0x3f0
  407088:	adrp	x0, 419000 <_fini>
  40708c:	add	x4, x0, #0x408
  407090:	mov	x3, #0x0                   	// #0
  407094:	adrp	x0, 419000 <_fini>
  407098:	add	x2, x0, #0x368
  40709c:	mov	x1, #0x0                   	// #0
  4070a0:	mov	x0, x8
  4070a4:	bl	405410 <sd_bus_match_signal_async@plt>
  4070a8:	str	w0, [sp, #48]
  4070ac:	ldr	w0, [sp, #48]
  4070b0:	cmp	w0, #0x0
  4070b4:	b.ge	407140 <manager_connect_bus+0x7c4>  // b.tcont
  4070b8:	mov	w0, #0x3                   	// #3
  4070bc:	str	w0, [sp, #100]
  4070c0:	ldr	w0, [sp, #48]
  4070c4:	str	w0, [sp, #104]
  4070c8:	str	wzr, [sp, #108]
  4070cc:	ldr	w0, [sp, #108]
  4070d0:	bl	405c20 <log_get_max_level_realm@plt>
  4070d4:	mov	w1, w0
  4070d8:	ldr	w0, [sp, #100]
  4070dc:	and	w0, w0, #0x7
  4070e0:	cmp	w1, w0
  4070e4:	b.lt	407128 <manager_connect_bus+0x7ac>  // b.tstop
  4070e8:	ldr	w0, [sp, #108]
  4070ec:	lsl	w1, w0, #10
  4070f0:	ldr	w0, [sp, #100]
  4070f4:	orr	w6, w1, w0
  4070f8:	adrp	x0, 419000 <_fini>
  4070fc:	add	x1, x0, #0x43
  407100:	adrp	x0, 419000 <_fini>
  407104:	add	x5, x0, #0x428
  407108:	adrp	x0, 419000 <_fini>
  40710c:	add	x4, x0, #0x760
  407110:	mov	w3, #0xf1                  	// #241
  407114:	mov	x2, x1
  407118:	ldr	w1, [sp, #104]
  40711c:	mov	w0, w6
  407120:	bl	405750 <log_internal_realm@plt>
  407124:	b	407474 <manager_connect_bus+0xaf8>
  407128:	ldr	w0, [sp, #104]
  40712c:	cmp	w0, #0x0
  407130:	cneg	w0, w0, lt  // lt = tstop
  407134:	and	w0, w0, #0xff
  407138:	neg	w0, w0
  40713c:	b	407474 <manager_connect_bus+0xaf8>
  407140:	ldr	x0, [sp, #40]
  407144:	ldr	x8, [x0, #8]
  407148:	ldr	x0, [sp, #40]
  40714c:	str	x0, [sp]
  407150:	mov	x7, #0x0                   	// #0
  407154:	adrp	x0, 40f000 <method_map_to_machine_group+0x198>
  407158:	add	x6, x0, #0x90c
  40715c:	adrp	x0, 419000 <_fini>
  407160:	add	x5, x0, #0x460
  407164:	adrp	x0, 419000 <_fini>
  407168:	add	x4, x0, #0x320
  40716c:	adrp	x0, 419000 <_fini>
  407170:	add	x3, x0, #0x348
  407174:	adrp	x0, 419000 <_fini>
  407178:	add	x2, x0, #0x368
  40717c:	mov	x1, #0x0                   	// #0
  407180:	mov	x0, x8
  407184:	bl	405410 <sd_bus_match_signal_async@plt>
  407188:	str	w0, [sp, #48]
  40718c:	ldr	w0, [sp, #48]
  407190:	cmp	w0, #0x0
  407194:	b.ge	407220 <manager_connect_bus+0x8a4>  // b.tcont
  407198:	mov	w0, #0x3                   	// #3
  40719c:	str	w0, [sp, #88]
  4071a0:	ldr	w0, [sp, #48]
  4071a4:	str	w0, [sp, #92]
  4071a8:	str	wzr, [sp, #96]
  4071ac:	ldr	w0, [sp, #96]
  4071b0:	bl	405c20 <log_get_max_level_realm@plt>
  4071b4:	mov	w1, w0
  4071b8:	ldr	w0, [sp, #88]
  4071bc:	and	w0, w0, #0x7
  4071c0:	cmp	w1, w0
  4071c4:	b.lt	407208 <manager_connect_bus+0x88c>  // b.tstop
  4071c8:	ldr	w0, [sp, #96]
  4071cc:	lsl	w1, w0, #10
  4071d0:	ldr	w0, [sp, #88]
  4071d4:	orr	w6, w1, w0
  4071d8:	adrp	x0, 419000 <_fini>
  4071dc:	add	x1, x0, #0x43
  4071e0:	adrp	x0, 419000 <_fini>
  4071e4:	add	x5, x0, #0x470
  4071e8:	adrp	x0, 419000 <_fini>
  4071ec:	add	x4, x0, #0x760
  4071f0:	mov	w3, #0xfc                  	// #252
  4071f4:	mov	x2, x1
  4071f8:	ldr	w1, [sp, #92]
  4071fc:	mov	w0, w6
  407200:	bl	405750 <log_internal_realm@plt>
  407204:	b	407474 <manager_connect_bus+0xaf8>
  407208:	ldr	w0, [sp, #92]
  40720c:	cmp	w0, #0x0
  407210:	cneg	w0, w0, lt  // lt = tstop
  407214:	and	w0, w0, #0xff
  407218:	neg	w0, w0
  40721c:	b	407474 <manager_connect_bus+0xaf8>
  407220:	ldr	x0, [sp, #40]
  407224:	ldr	x8, [x0, #8]
  407228:	str	xzr, [sp]
  40722c:	mov	x7, #0x0                   	// #0
  407230:	mov	x6, #0x0                   	// #0
  407234:	adrp	x0, 419000 <_fini>
  407238:	add	x5, x0, #0x4a0
  40723c:	adrp	x0, 419000 <_fini>
  407240:	add	x4, x0, #0x320
  407244:	adrp	x0, 419000 <_fini>
  407248:	add	x3, x0, #0x348
  40724c:	adrp	x0, 419000 <_fini>
  407250:	add	x2, x0, #0x368
  407254:	mov	x1, #0x0                   	// #0
  407258:	mov	x0, x8
  40725c:	bl	405bf0 <sd_bus_call_method_async@plt>
  407260:	str	w0, [sp, #48]
  407264:	ldr	w0, [sp, #48]
  407268:	cmp	w0, #0x0
  40726c:	b.ge	4072f8 <manager_connect_bus+0x97c>  // b.tcont
  407270:	mov	w0, #0x3                   	// #3
  407274:	str	w0, [sp, #76]
  407278:	ldr	w0, [sp, #48]
  40727c:	str	w0, [sp, #80]
  407280:	str	wzr, [sp, #84]
  407284:	ldr	w0, [sp, #84]
  407288:	bl	405c20 <log_get_max_level_realm@plt>
  40728c:	mov	w1, w0
  407290:	ldr	w0, [sp, #76]
  407294:	and	w0, w0, #0x7
  407298:	cmp	w1, w0
  40729c:	b.lt	4072e0 <manager_connect_bus+0x964>  // b.tstop
  4072a0:	ldr	w0, [sp, #84]
  4072a4:	lsl	w1, w0, #10
  4072a8:	ldr	w0, [sp, #76]
  4072ac:	orr	w6, w1, w0
  4072b0:	adrp	x0, 419000 <_fini>
  4072b4:	add	x1, x0, #0x43
  4072b8:	adrp	x0, 419000 <_fini>
  4072bc:	add	x5, x0, #0x4b0
  4072c0:	adrp	x0, 419000 <_fini>
  4072c4:	add	x4, x0, #0x760
  4072c8:	mov	w3, #0x108                 	// #264
  4072cc:	mov	x2, x1
  4072d0:	ldr	w1, [sp, #80]
  4072d4:	mov	w0, w6
  4072d8:	bl	405750 <log_internal_realm@plt>
  4072dc:	b	407474 <manager_connect_bus+0xaf8>
  4072e0:	ldr	w0, [sp, #80]
  4072e4:	cmp	w0, #0x0
  4072e8:	cneg	w0, w0, lt  // lt = tstop
  4072ec:	and	w0, w0, #0xff
  4072f0:	neg	w0, w0
  4072f4:	b	407474 <manager_connect_bus+0xaf8>
  4072f8:	ldr	x0, [sp, #40]
  4072fc:	ldr	x6, [x0, #8]
  407300:	mov	x5, #0x0                   	// #0
  407304:	mov	x4, #0x0                   	// #0
  407308:	mov	x3, #0x0                   	// #0
  40730c:	adrp	x0, 419000 <_fini>
  407310:	add	x2, x0, #0x4d8
  407314:	mov	x1, #0x0                   	// #0
  407318:	mov	x0, x6
  40731c:	bl	405000 <sd_bus_request_name_async@plt>
  407320:	str	w0, [sp, #48]
  407324:	ldr	w0, [sp, #48]
  407328:	cmp	w0, #0x0
  40732c:	b.ge	4073b8 <manager_connect_bus+0xa3c>  // b.tcont
  407330:	mov	w0, #0x3                   	// #3
  407334:	str	w0, [sp, #64]
  407338:	ldr	w0, [sp, #48]
  40733c:	str	w0, [sp, #68]
  407340:	str	wzr, [sp, #72]
  407344:	ldr	w0, [sp, #72]
  407348:	bl	405c20 <log_get_max_level_realm@plt>
  40734c:	mov	w1, w0
  407350:	ldr	w0, [sp, #64]
  407354:	and	w0, w0, #0x7
  407358:	cmp	w1, w0
  40735c:	b.lt	4073a0 <manager_connect_bus+0xa24>  // b.tstop
  407360:	ldr	w0, [sp, #72]
  407364:	lsl	w1, w0, #10
  407368:	ldr	w0, [sp, #64]
  40736c:	orr	w6, w1, w0
  407370:	adrp	x0, 419000 <_fini>
  407374:	add	x1, x0, #0x43
  407378:	adrp	x0, 419000 <_fini>
  40737c:	add	x5, x0, #0x4f8
  407380:	adrp	x0, 419000 <_fini>
  407384:	add	x4, x0, #0x760
  407388:	mov	w3, #0x10c                 	// #268
  40738c:	mov	x2, x1
  407390:	ldr	w1, [sp, #68]
  407394:	mov	w0, w6
  407398:	bl	405750 <log_internal_realm@plt>
  40739c:	b	407474 <manager_connect_bus+0xaf8>
  4073a0:	ldr	w0, [sp, #68]
  4073a4:	cmp	w0, #0x0
  4073a8:	cneg	w0, w0, lt  // lt = tstop
  4073ac:	and	w0, w0, #0xff
  4073b0:	neg	w0, w0
  4073b4:	b	407474 <manager_connect_bus+0xaf8>
  4073b8:	ldr	x0, [sp, #40]
  4073bc:	ldr	x3, [x0, #8]
  4073c0:	ldr	x0, [sp, #40]
  4073c4:	ldr	x0, [x0]
  4073c8:	mov	w2, #0x0                   	// #0
  4073cc:	mov	x1, x0
  4073d0:	mov	x0, x3
  4073d4:	bl	405330 <sd_bus_attach_event@plt>
  4073d8:	str	w0, [sp, #48]
  4073dc:	ldr	w0, [sp, #48]
  4073e0:	cmp	w0, #0x0
  4073e4:	b.ge	407470 <manager_connect_bus+0xaf4>  // b.tcont
  4073e8:	mov	w0, #0x3                   	// #3
  4073ec:	str	w0, [sp, #52]
  4073f0:	ldr	w0, [sp, #48]
  4073f4:	str	w0, [sp, #56]
  4073f8:	str	wzr, [sp, #60]
  4073fc:	ldr	w0, [sp, #60]
  407400:	bl	405c20 <log_get_max_level_realm@plt>
  407404:	mov	w1, w0
  407408:	ldr	w0, [sp, #52]
  40740c:	and	w0, w0, #0x7
  407410:	cmp	w1, w0
  407414:	b.lt	407458 <manager_connect_bus+0xadc>  // b.tstop
  407418:	ldr	w0, [sp, #60]
  40741c:	lsl	w1, w0, #10
  407420:	ldr	w0, [sp, #52]
  407424:	orr	w6, w1, w0
  407428:	adrp	x0, 419000 <_fini>
  40742c:	add	x1, x0, #0x43
  407430:	adrp	x0, 419000 <_fini>
  407434:	add	x5, x0, #0x518
  407438:	adrp	x0, 419000 <_fini>
  40743c:	add	x4, x0, #0x760
  407440:	mov	w3, #0x110                 	// #272
  407444:	mov	x2, x1
  407448:	ldr	w1, [sp, #56]
  40744c:	mov	w0, w6
  407450:	bl	405750 <log_internal_realm@plt>
  407454:	b	407474 <manager_connect_bus+0xaf8>
  407458:	ldr	w0, [sp, #56]
  40745c:	cmp	w0, #0x0
  407460:	cneg	w0, w0, lt  // lt = tstop
  407464:	and	w0, w0, #0xff
  407468:	neg	w0, w0
  40746c:	b	407474 <manager_connect_bus+0xaf8>
  407470:	mov	w0, #0x0                   	// #0
  407474:	ldp	x29, x30, [sp, #16]
  407478:	add	sp, sp, #0xd0
  40747c:	ret

0000000000407480 <manager_gc>:
  407480:	stp	x29, x30, [sp, #-64]!
  407484:	mov	x29, sp
  407488:	str	x0, [sp, #24]
  40748c:	strb	w1, [sp, #23]
  407490:	ldr	x0, [sp, #24]
  407494:	cmp	x0, #0x0
  407498:	cset	w0, eq  // eq = none
  40749c:	and	w0, w0, #0xff
  4074a0:	and	x0, x0, #0xff
  4074a4:	cmp	x0, #0x0
  4074a8:	b.eq	407654 <manager_gc+0x1d4>  // b.none
  4074ac:	adrp	x0, 419000 <_fini>
  4074b0:	add	x1, x0, #0x43
  4074b4:	adrp	x0, 419000 <_fini>
  4074b8:	add	x4, x0, #0x778
  4074bc:	mov	w3, #0x118                 	// #280
  4074c0:	mov	x2, x1
  4074c4:	adrp	x0, 419000 <_fini>
  4074c8:	add	x1, x0, #0xb8
  4074cc:	mov	w0, #0x0                   	// #0
  4074d0:	bl	4052a0 <log_assert_failed_realm@plt>
  4074d4:	ldr	x0, [sp, #24]
  4074d8:	add	x0, x0, #0x40
  4074dc:	str	x0, [sp, #48]
  4074e0:	ldr	x0, [sp, #40]
  4074e4:	str	x0, [sp, #56]
  4074e8:	ldr	x0, [sp, #56]
  4074ec:	cmp	x0, #0x0
  4074f0:	cset	w0, eq  // eq = none
  4074f4:	and	w0, w0, #0xff
  4074f8:	and	x0, x0, #0xff
  4074fc:	cmp	x0, #0x0
  407500:	b.eq	40752c <manager_gc+0xac>  // b.none
  407504:	adrp	x0, 419000 <_fini>
  407508:	add	x1, x0, #0x43
  40750c:	adrp	x0, 419000 <_fini>
  407510:	add	x4, x0, #0x778
  407514:	mov	w3, #0x11b                 	// #283
  407518:	mov	x2, x1
  40751c:	adrp	x0, 419000 <_fini>
  407520:	add	x1, x0, #0x540
  407524:	mov	w0, #0x0                   	// #0
  407528:	bl	4052a0 <log_assert_failed_realm@plt>
  40752c:	ldr	x0, [sp, #56]
  407530:	ldr	x0, [x0, #144]
  407534:	cmp	x0, #0x0
  407538:	b.eq	407550 <manager_gc+0xd0>  // b.none
  40753c:	ldr	x0, [sp, #56]
  407540:	ldr	x0, [x0, #144]
  407544:	ldr	x1, [sp, #56]
  407548:	ldr	x1, [x1, #152]
  40754c:	str	x1, [x0, #152]
  407550:	ldr	x0, [sp, #56]
  407554:	ldr	x0, [x0, #152]
  407558:	cmp	x0, #0x0
  40755c:	b.eq	407578 <manager_gc+0xf8>  // b.none
  407560:	ldr	x0, [sp, #56]
  407564:	ldr	x0, [x0, #152]
  407568:	ldr	x1, [sp, #56]
  40756c:	ldr	x1, [x1, #144]
  407570:	str	x1, [x0, #144]
  407574:	b	4075d4 <manager_gc+0x154>
  407578:	ldr	x0, [sp, #48]
  40757c:	ldr	x0, [x0]
  407580:	ldr	x1, [sp, #56]
  407584:	cmp	x1, x0
  407588:	cset	w0, ne  // ne = any
  40758c:	and	w0, w0, #0xff
  407590:	and	x0, x0, #0xff
  407594:	cmp	x0, #0x0
  407598:	b.eq	4075c4 <manager_gc+0x144>  // b.none
  40759c:	adrp	x0, 419000 <_fini>
  4075a0:	add	x1, x0, #0x43
  4075a4:	adrp	x0, 419000 <_fini>
  4075a8:	add	x4, x0, #0x778
  4075ac:	mov	w3, #0x11b                 	// #283
  4075b0:	mov	x2, x1
  4075b4:	adrp	x0, 419000 <_fini>
  4075b8:	add	x1, x0, #0x548
  4075bc:	mov	w0, #0x0                   	// #0
  4075c0:	bl	4052a0 <log_assert_failed_realm@plt>
  4075c4:	ldr	x0, [sp, #56]
  4075c8:	ldr	x1, [x0, #144]
  4075cc:	ldr	x0, [sp, #48]
  4075d0:	str	x1, [x0]
  4075d4:	ldr	x0, [sp, #56]
  4075d8:	str	xzr, [x0, #152]
  4075dc:	ldr	x0, [sp, #56]
  4075e0:	ldr	x1, [x0, #152]
  4075e4:	ldr	x0, [sp, #56]
  4075e8:	str	x1, [x0, #144]
  4075ec:	ldr	x0, [sp, #40]
  4075f0:	ldrb	w1, [x0, #104]
  4075f4:	and	w1, w1, #0xfffffffe
  4075f8:	strb	w1, [x0, #104]
  4075fc:	ldrb	w1, [sp, #23]
  407600:	ldr	x0, [sp, #40]
  407604:	bl	40a1d8 <machine_may_gc>
  407608:	and	w0, w0, #0xff
  40760c:	cmp	w0, #0x0
  407610:	b.eq	40762c <manager_gc+0x1ac>  // b.none
  407614:	ldr	x0, [sp, #40]
  407618:	bl	40a424 <machine_get_state>
  40761c:	cmp	w0, #0x2
  407620:	b.eq	40762c <manager_gc+0x1ac>  // b.none
  407624:	ldr	x0, [sp, #40]
  407628:	bl	409e6c <machine_stop>
  40762c:	ldrb	w1, [sp, #23]
  407630:	ldr	x0, [sp, #40]
  407634:	bl	40a1d8 <machine_may_gc>
  407638:	and	w0, w0, #0xff
  40763c:	cmp	w0, #0x0
  407640:	b.eq	407654 <manager_gc+0x1d4>  // b.none
  407644:	ldr	x0, [sp, #40]
  407648:	bl	40a098 <machine_finalize>
  40764c:	ldr	x0, [sp, #40]
  407650:	bl	40810c <machine_free>
  407654:	ldr	x0, [sp, #24]
  407658:	ldr	x0, [x0, #64]
  40765c:	str	x0, [sp, #40]
  407660:	ldr	x0, [sp, #40]
  407664:	cmp	x0, #0x0
  407668:	b.ne	4074d4 <manager_gc+0x54>  // b.any
  40766c:	nop
  407670:	nop
  407674:	ldp	x29, x30, [sp], #64
  407678:	ret

000000000040767c <manager_startup>:
  40767c:	stp	x29, x30, [sp, #-80]!
  407680:	mov	x29, sp
  407684:	str	x0, [sp, #24]
  407688:	adrp	x0, 430000 <__FRAME_END__+0x10c5c>
  40768c:	add	x0, x0, #0x198
  407690:	ldr	x1, [x0]
  407694:	str	x1, [sp, #72]
  407698:	mov	x1, #0x0                   	// #0
  40769c:	ldr	x0, [sp, #24]
  4076a0:	cmp	x0, #0x0
  4076a4:	cset	w0, eq  // eq = none
  4076a8:	and	w0, w0, #0xff
  4076ac:	and	x0, x0, #0xff
  4076b0:	cmp	x0, #0x0
  4076b4:	b.eq	4076e0 <manager_startup+0x64>  // b.none
  4076b8:	adrp	x0, 419000 <_fini>
  4076bc:	add	x1, x0, #0x43
  4076c0:	adrp	x0, 419000 <_fini>
  4076c4:	add	x4, x0, #0x788
  4076c8:	mov	w3, #0x132                 	// #306
  4076cc:	mov	x2, x1
  4076d0:	adrp	x0, 419000 <_fini>
  4076d4:	add	x1, x0, #0xb8
  4076d8:	mov	w0, #0x0                   	// #0
  4076dc:	bl	4052a0 <log_assert_failed_realm@plt>
  4076e0:	ldr	x0, [sp, #24]
  4076e4:	bl	40697c <manager_connect_bus>
  4076e8:	str	w0, [sp, #44]
  4076ec:	ldr	w0, [sp, #44]
  4076f0:	cmp	w0, #0x0
  4076f4:	b.ge	407700 <manager_startup+0x84>  // b.tcont
  4076f8:	ldr	w0, [sp, #44]
  4076fc:	b	40775c <manager_startup+0xe0>
  407700:	ldr	x0, [sp, #24]
  407704:	bl	406608 <manager_enumerate_machines>
  407708:	mov	w1, #0x0                   	// #0
  40770c:	ldr	x0, [sp, #24]
  407710:	bl	407480 <manager_gc>
  407714:	mov	w0, #0xfffffffe            	// #-2
  407718:	str	w0, [sp, #56]
  40771c:	str	xzr, [sp, #64]
  407720:	b	407734 <manager_startup+0xb8>
  407724:	ldr	x0, [sp, #48]
  407728:	mov	x2, #0x0                   	// #0
  40772c:	mov	x1, #0x0                   	// #0
  407730:	bl	409c68 <machine_start>
  407734:	ldr	x0, [sp, #24]
  407738:	ldr	x0, [x0, #16]
  40773c:	add	x2, sp, #0x30
  407740:	add	x1, sp, #0x38
  407744:	mov	x3, #0x0                   	// #0
  407748:	bl	405f1c <hashmap_iterate>
  40774c:	and	w0, w0, #0xff
  407750:	cmp	w0, #0x0
  407754:	b.ne	407724 <manager_startup+0xa8>  // b.any
  407758:	mov	w0, #0x0                   	// #0
  40775c:	mov	w1, w0
  407760:	adrp	x0, 430000 <__FRAME_END__+0x10c5c>
  407764:	add	x0, x0, #0x198
  407768:	ldr	x2, [sp, #72]
  40776c:	ldr	x0, [x0]
  407770:	eor	x0, x2, x0
  407774:	cmp	x0, #0x0
  407778:	b.eq	407780 <manager_startup+0x104>  // b.none
  40777c:	bl	4055f0 <__stack_chk_fail@plt>
  407780:	mov	w0, w1
  407784:	ldp	x29, x30, [sp], #80
  407788:	ret

000000000040778c <check_idle>:
  40778c:	stp	x29, x30, [sp, #-48]!
  407790:	mov	x29, sp
  407794:	str	x0, [sp, #24]
  407798:	ldr	x0, [sp, #24]
  40779c:	str	x0, [sp, #40]
  4077a0:	ldr	x0, [sp, #40]
  4077a4:	ldr	x0, [x0, #80]
  4077a8:	cmp	x0, #0x0
  4077ac:	b.eq	4077b8 <check_idle+0x2c>  // b.none
  4077b0:	mov	w0, #0x0                   	// #0
  4077b4:	b	4077d4 <check_idle+0x48>
  4077b8:	mov	w1, #0x1                   	// #1
  4077bc:	ldr	x0, [sp, #40]
  4077c0:	bl	407480 <manager_gc>
  4077c4:	ldr	x0, [sp, #40]
  4077c8:	ldr	x0, [x0, #16]
  4077cc:	bl	405ef4 <hashmap_isempty>
  4077d0:	and	w0, w0, #0xff
  4077d4:	ldp	x29, x30, [sp], #48
  4077d8:	ret

00000000004077dc <manager_run>:
  4077dc:	stp	x29, x30, [sp, #-32]!
  4077e0:	mov	x29, sp
  4077e4:	str	x0, [sp, #24]
  4077e8:	ldr	x0, [sp, #24]
  4077ec:	cmp	x0, #0x0
  4077f0:	cset	w0, eq  // eq = none
  4077f4:	and	w0, w0, #0xff
  4077f8:	and	x0, x0, #0xff
  4077fc:	cmp	x0, #0x0
  407800:	b.eq	40782c <manager_run+0x50>  // b.none
  407804:	adrp	x0, 419000 <_fini>
  407808:	add	x1, x0, #0x43
  40780c:	adrp	x0, 419000 <_fini>
  407810:	add	x4, x0, #0x798
  407814:	mov	w3, #0x152                 	// #338
  407818:	mov	x2, x1
  40781c:	adrp	x0, 419000 <_fini>
  407820:	add	x1, x0, #0xb8
  407824:	mov	w0, #0x0                   	// #0
  407828:	bl	4052a0 <log_assert_failed_realm@plt>
  40782c:	ldr	x0, [sp, #24]
  407830:	ldr	x6, [x0]
  407834:	ldr	x0, [sp, #24]
  407838:	ldr	x1, [x0, #8]
  40783c:	ldr	x5, [sp, #24]
  407840:	adrp	x0, 407000 <manager_connect_bus+0x684>
  407844:	add	x4, x0, #0x78c
  407848:	mov	x3, #0xc380                	// #50048
  40784c:	movk	x3, #0x1c9, lsl #16
  407850:	adrp	x0, 419000 <_fini>
  407854:	add	x2, x0, #0x4d8
  407858:	mov	x0, x6
  40785c:	bl	4050c0 <bus_event_loop_with_idle@plt>
  407860:	ldp	x29, x30, [sp], #32
  407864:	ret

0000000000407868 <run>:
  407868:	stp	x29, x30, [sp, #-128]!
  40786c:	mov	x29, sp
  407870:	stp	x19, x20, [sp, #16]
  407874:	str	w0, [sp, #44]
  407878:	str	x1, [sp, #32]
  40787c:	adrp	x0, 430000 <__FRAME_END__+0x10c5c>
  407880:	add	x0, x0, #0x198
  407884:	ldr	x1, [x0]
  407888:	str	x1, [sp, #120]
  40788c:	mov	x1, #0x0                   	// #0
  407890:	str	xzr, [sp, #112]
  407894:	mov	w0, #0x20                  	// #32
  407898:	bl	405920 <log_set_facility@plt>
  40789c:	bl	405220 <log_setup_service@plt>
  4078a0:	mov	w0, #0x12                  	// #18
  4078a4:	bl	405320 <umask@plt>
  4078a8:	ldr	w0, [sp, #44]
  4078ac:	cmp	w0, #0x1
  4078b0:	b.eq	407930 <run+0xc8>  // b.none
  4078b4:	mov	w0, #0x3                   	// #3
  4078b8:	str	w0, [sp, #100]
  4078bc:	str	wzr, [sp, #104]
  4078c0:	str	wzr, [sp, #108]
  4078c4:	ldr	w0, [sp, #108]
  4078c8:	bl	405c20 <log_get_max_level_realm@plt>
  4078cc:	mov	w1, w0
  4078d0:	ldr	w0, [sp, #100]
  4078d4:	and	w0, w0, #0x7
  4078d8:	cmp	w1, w0
  4078dc:	b.lt	407920 <run+0xb8>  // b.tstop
  4078e0:	ldr	w0, [sp, #108]
  4078e4:	lsl	w1, w0, #10
  4078e8:	ldr	w0, [sp, #100]
  4078ec:	orr	w6, w1, w0
  4078f0:	adrp	x0, 419000 <_fini>
  4078f4:	add	x1, x0, #0x43
  4078f8:	adrp	x0, 419000 <_fini>
  4078fc:	add	x5, x0, #0x558
  407900:	adrp	x0, 419000 <_fini>
  407904:	add	x4, x0, #0x7a8
  407908:	mov	w3, #0x166                 	// #358
  40790c:	mov	x2, x1
  407910:	ldr	w1, [sp, #104]
  407914:	mov	w0, w6
  407918:	bl	405750 <log_internal_realm@plt>
  40791c:	b	407928 <run+0xc0>
  407920:	ldr	w0, [sp, #104]
  407924:	cmp	w0, #0x0
  407928:	mov	w19, #0xffffffea            	// #-22
  40792c:	b	407c08 <run+0x3a0>
  407930:	mov	w1, #0x1ed                 	// #493
  407934:	adrp	x0, 419000 <_fini>
  407938:	add	x0, x0, #0xc0
  40793c:	bl	405720 <mkdir_label@plt>
  407940:	mov	w5, #0xffffffff            	// #-1
  407944:	mov	w4, #0x2                   	// #2
  407948:	mov	w3, #0xf                   	// #15
  40794c:	mov	w2, #0x11                  	// #17
  407950:	mov	x1, #0x0                   	// #0
  407954:	mov	w0, #0x0                   	// #0
  407958:	bl	405390 <sigprocmask_many@plt>
  40795c:	lsr	w0, w0, #31
  407960:	and	w0, w0, #0xff
  407964:	and	x0, x0, #0xff
  407968:	cmp	x0, #0x0
  40796c:	b.eq	407998 <run+0x130>  // b.none
  407970:	adrp	x0, 419000 <_fini>
  407974:	add	x1, x0, #0x43
  407978:	adrp	x0, 419000 <_fini>
  40797c:	add	x4, x0, #0x7b0
  407980:	mov	w3, #0x16f                 	// #367
  407984:	mov	x2, x1
  407988:	adrp	x0, 419000 <_fini>
  40798c:	add	x1, x0, #0x580
  407990:	mov	w0, #0x0                   	// #0
  407994:	bl	4052a0 <log_assert_failed_realm@plt>
  407998:	add	x0, sp, #0x70
  40799c:	bl	4060bc <manager_new>
  4079a0:	str	w0, [sp, #48]
  4079a4:	ldr	w0, [sp, #48]
  4079a8:	cmp	w0, #0x0
  4079ac:	b.ge	407a3c <run+0x1d4>  // b.tcont
  4079b0:	mov	w0, #0x3                   	// #3
  4079b4:	str	w0, [sp, #88]
  4079b8:	ldr	w0, [sp, #48]
  4079bc:	str	w0, [sp, #92]
  4079c0:	str	wzr, [sp, #96]
  4079c4:	ldr	w0, [sp, #96]
  4079c8:	bl	405c20 <log_get_max_level_realm@plt>
  4079cc:	mov	w1, w0
  4079d0:	ldr	w0, [sp, #88]
  4079d4:	and	w0, w0, #0x7
  4079d8:	cmp	w1, w0
  4079dc:	b.lt	407a24 <run+0x1bc>  // b.tstop
  4079e0:	ldr	w0, [sp, #96]
  4079e4:	lsl	w1, w0, #10
  4079e8:	ldr	w0, [sp, #88]
  4079ec:	orr	w6, w1, w0
  4079f0:	adrp	x0, 419000 <_fini>
  4079f4:	add	x1, x0, #0x43
  4079f8:	adrp	x0, 419000 <_fini>
  4079fc:	add	x5, x0, #0x5c8
  407a00:	adrp	x0, 419000 <_fini>
  407a04:	add	x4, x0, #0x7a8
  407a08:	mov	w3, #0x173                 	// #371
  407a0c:	mov	x2, x1
  407a10:	ldr	w1, [sp, #92]
  407a14:	mov	w0, w6
  407a18:	bl	405750 <log_internal_realm@plt>
  407a1c:	mov	w19, w0
  407a20:	b	407c08 <run+0x3a0>
  407a24:	ldr	w0, [sp, #92]
  407a28:	cmp	w0, #0x0
  407a2c:	cneg	w0, w0, lt  // lt = tstop
  407a30:	and	w0, w0, #0xff
  407a34:	neg	w19, w0
  407a38:	b	407c08 <run+0x3a0>
  407a3c:	ldr	x0, [sp, #112]
  407a40:	bl	40767c <manager_startup>
  407a44:	str	w0, [sp, #48]
  407a48:	ldr	w0, [sp, #48]
  407a4c:	cmp	w0, #0x0
  407a50:	b.ge	407ae0 <run+0x278>  // b.tcont
  407a54:	mov	w0, #0x3                   	// #3
  407a58:	str	w0, [sp, #76]
  407a5c:	ldr	w0, [sp, #48]
  407a60:	str	w0, [sp, #80]
  407a64:	str	wzr, [sp, #84]
  407a68:	ldr	w0, [sp, #84]
  407a6c:	bl	405c20 <log_get_max_level_realm@plt>
  407a70:	mov	w1, w0
  407a74:	ldr	w0, [sp, #76]
  407a78:	and	w0, w0, #0x7
  407a7c:	cmp	w1, w0
  407a80:	b.lt	407ac8 <run+0x260>  // b.tstop
  407a84:	ldr	w0, [sp, #84]
  407a88:	lsl	w1, w0, #10
  407a8c:	ldr	w0, [sp, #76]
  407a90:	orr	w6, w1, w0
  407a94:	adrp	x0, 419000 <_fini>
  407a98:	add	x1, x0, #0x43
  407a9c:	adrp	x0, 419000 <_fini>
  407aa0:	add	x5, x0, #0x5f0
  407aa4:	adrp	x0, 419000 <_fini>
  407aa8:	add	x4, x0, #0x7a8
  407aac:	mov	w3, #0x177                 	// #375
  407ab0:	mov	x2, x1
  407ab4:	ldr	w1, [sp, #80]
  407ab8:	mov	w0, w6
  407abc:	bl	405750 <log_internal_realm@plt>
  407ac0:	mov	w19, w0
  407ac4:	b	407c08 <run+0x3a0>
  407ac8:	ldr	w0, [sp, #80]
  407acc:	cmp	w0, #0x0
  407ad0:	cneg	w0, w0, lt  // lt = tstop
  407ad4:	and	w0, w0, #0xff
  407ad8:	neg	w19, w0
  407adc:	b	407c08 <run+0x3a0>
  407ae0:	mov	w0, #0x7                   	// #7
  407ae4:	str	w0, [sp, #52]
  407ae8:	str	wzr, [sp, #56]
  407aec:	str	wzr, [sp, #60]
  407af0:	ldr	w0, [sp, #60]
  407af4:	bl	405c20 <log_get_max_level_realm@plt>
  407af8:	mov	w1, w0
  407afc:	ldr	w0, [sp, #52]
  407b00:	and	w0, w0, #0x7
  407b04:	cmp	w1, w0
  407b08:	b.lt	407b54 <run+0x2ec>  // b.tstop
  407b0c:	ldr	w0, [sp, #60]
  407b10:	lsl	w1, w0, #10
  407b14:	ldr	w0, [sp, #52]
  407b18:	orr	w19, w1, w0
  407b1c:	adrp	x0, 419000 <_fini>
  407b20:	add	x20, x0, #0x43
  407b24:	bl	405160 <getpid_cached@plt>
  407b28:	mov	w6, w0
  407b2c:	adrp	x0, 419000 <_fini>
  407b30:	add	x5, x0, #0x618
  407b34:	adrp	x0, 419000 <_fini>
  407b38:	add	x4, x0, #0x7a8
  407b3c:	mov	w3, #0x179                 	// #377
  407b40:	mov	x2, x20
  407b44:	ldr	w1, [sp, #56]
  407b48:	mov	w0, w19
  407b4c:	bl	405750 <log_internal_realm@plt>
  407b50:	b	407b5c <run+0x2f4>
  407b54:	ldr	w0, [sp, #56]
  407b58:	cmp	w0, #0x0
  407b5c:	adrp	x0, 419000 <_fini>
  407b60:	add	x1, x0, #0x640
  407b64:	mov	w0, #0x0                   	// #0
  407b68:	bl	405700 <sd_notify@plt>
  407b6c:	ldr	x0, [sp, #112]
  407b70:	bl	4077dc <manager_run>
  407b74:	str	w0, [sp, #48]
  407b78:	mov	w0, #0x7                   	// #7
  407b7c:	str	w0, [sp, #64]
  407b80:	str	wzr, [sp, #68]
  407b84:	str	wzr, [sp, #72]
  407b88:	ldr	w0, [sp, #72]
  407b8c:	bl	405c20 <log_get_max_level_realm@plt>
  407b90:	mov	w1, w0
  407b94:	ldr	w0, [sp, #64]
  407b98:	and	w0, w0, #0x7
  407b9c:	cmp	w1, w0
  407ba0:	b.lt	407bec <run+0x384>  // b.tstop
  407ba4:	ldr	w0, [sp, #72]
  407ba8:	lsl	w1, w0, #10
  407bac:	ldr	w0, [sp, #64]
  407bb0:	orr	w19, w1, w0
  407bb4:	adrp	x0, 419000 <_fini>
  407bb8:	add	x20, x0, #0x43
  407bbc:	bl	405160 <getpid_cached@plt>
  407bc0:	mov	w6, w0
  407bc4:	adrp	x0, 419000 <_fini>
  407bc8:	add	x5, x0, #0x668
  407bcc:	adrp	x0, 419000 <_fini>
  407bd0:	add	x4, x0, #0x7a8
  407bd4:	mov	w3, #0x180                 	// #384
  407bd8:	mov	x2, x20
  407bdc:	ldr	w1, [sp, #68]
  407be0:	mov	w0, w19
  407be4:	bl	405750 <log_internal_realm@plt>
  407be8:	b	407bf4 <run+0x38c>
  407bec:	ldr	w0, [sp, #68]
  407bf0:	cmp	w0, #0x0
  407bf4:	adrp	x0, 419000 <_fini>
  407bf8:	add	x1, x0, #0x690
  407bfc:	mov	w0, #0x0                   	// #0
  407c00:	bl	405700 <sd_notify@plt>
  407c04:	ldr	w19, [sp, #48]
  407c08:	add	x0, sp, #0x70
  407c0c:	bl	406060 <manager_unrefp>
  407c10:	mov	w1, w19
  407c14:	adrp	x0, 430000 <__FRAME_END__+0x10c5c>
  407c18:	add	x0, x0, #0x198
  407c1c:	ldr	x2, [sp, #120]
  407c20:	ldr	x0, [x0]
  407c24:	eor	x0, x2, x0
  407c28:	cmp	x0, #0x0
  407c2c:	b.eq	407c34 <run+0x3cc>  // b.none
  407c30:	bl	4055f0 <__stack_chk_fail@plt>
  407c34:	mov	w0, w1
  407c38:	ldp	x19, x20, [sp, #16]
  407c3c:	ldp	x29, x30, [sp], #128
  407c40:	ret

0000000000407c44 <main>:
  407c44:	stp	x29, x30, [sp, #-48]!
  407c48:	mov	x29, sp
  407c4c:	str	w0, [sp, #28]
  407c50:	str	x1, [sp, #16]
  407c54:	ldr	x1, [sp, #16]
  407c58:	ldr	w0, [sp, #28]
  407c5c:	bl	405e7c <save_argc_argv>
  407c60:	ldr	x1, [sp, #16]
  407c64:	ldr	w0, [sp, #28]
  407c68:	bl	407868 <run>
  407c6c:	str	w0, [sp, #44]
  407c70:	bl	405670 <ask_password_agent_close@plt>
  407c74:	bl	4050a0 <polkit_agent_close@plt>
  407c78:	bl	405690 <pager_close@plt>
  407c7c:	bl	405aa0 <mac_selinux_finish@plt>
  407c80:	bl	405fd8 <static_destruct>
  407c84:	ldr	w0, [sp, #44]
  407c88:	lsr	w0, w0, #31
  407c8c:	ldp	x29, x30, [sp], #48
  407c90:	ret

0000000000407c94 <sd_id128_is_null>:
  407c94:	sub	sp, sp, #0x10
  407c98:	stp	x0, x1, [sp]
  407c9c:	ldr	x0, [sp]
  407ca0:	cmp	x0, #0x0
  407ca4:	b.ne	407cbc <sd_id128_is_null+0x28>  // b.any
  407ca8:	ldr	x0, [sp, #8]
  407cac:	cmp	x0, #0x0
  407cb0:	b.ne	407cbc <sd_id128_is_null+0x28>  // b.any
  407cb4:	mov	w0, #0x1                   	// #1
  407cb8:	b	407cc0 <sd_id128_is_null+0x2c>
  407cbc:	mov	w0, #0x0                   	// #0
  407cc0:	add	sp, sp, #0x10
  407cc4:	ret

0000000000407cc8 <mfree>:
  407cc8:	stp	x29, x30, [sp, #-32]!
  407ccc:	mov	x29, sp
  407cd0:	str	x0, [sp, #24]
  407cd4:	ldr	x0, [sp, #24]
  407cd8:	bl	4059e0 <free@plt>
  407cdc:	mov	x0, #0x0                   	// #0
  407ce0:	ldp	x29, x30, [sp], #32
  407ce4:	ret

0000000000407ce8 <freep>:
  407ce8:	stp	x29, x30, [sp, #-32]!
  407cec:	mov	x29, sp
  407cf0:	str	x0, [sp, #24]
  407cf4:	ldr	x0, [sp, #24]
  407cf8:	ldr	x0, [x0]
  407cfc:	bl	4059e0 <free@plt>
  407d00:	nop
  407d04:	ldp	x29, x30, [sp], #32
  407d08:	ret

0000000000407d0c <size_multiply_overflow>:
  407d0c:	sub	sp, sp, #0x10
  407d10:	str	x0, [sp, #8]
  407d14:	str	x1, [sp]
  407d18:	ldr	x0, [sp]
  407d1c:	cmp	x0, #0x0
  407d20:	cset	w0, ne  // ne = any
  407d24:	and	w0, w0, #0xff
  407d28:	and	x0, x0, #0xff
  407d2c:	cmp	x0, #0x0
  407d30:	b.eq	407d74 <size_multiply_overflow+0x68>  // b.none
  407d34:	mov	x2, #0x0                   	// #0
  407d38:	ldr	x1, [sp, #8]
  407d3c:	ldr	x0, [sp]
  407d40:	umulh	x0, x1, x0
  407d44:	cmp	x0, #0x0
  407d48:	b.eq	407d50 <size_multiply_overflow+0x44>  // b.none
  407d4c:	mov	x2, #0x1                   	// #1
  407d50:	mov	x0, x2
  407d54:	cmp	x0, #0x0
  407d58:	cset	w0, ne  // ne = any
  407d5c:	and	w0, w0, #0xff
  407d60:	and	x0, x0, #0xff
  407d64:	cmp	x0, #0x0
  407d68:	b.eq	407d74 <size_multiply_overflow+0x68>  // b.none
  407d6c:	mov	w0, #0x1                   	// #1
  407d70:	b	407d78 <size_multiply_overflow+0x6c>
  407d74:	mov	w0, #0x0                   	// #0
  407d78:	and	w0, w0, #0x1
  407d7c:	and	w0, w0, #0xff
  407d80:	add	sp, sp, #0x10
  407d84:	ret

0000000000407d88 <sd_bus_message_unrefp>:
  407d88:	stp	x29, x30, [sp, #-32]!
  407d8c:	mov	x29, sp
  407d90:	str	x0, [sp, #24]
  407d94:	ldr	x0, [sp, #24]
  407d98:	ldr	x0, [x0]
  407d9c:	cmp	x0, #0x0
  407da0:	b.eq	407db0 <sd_bus_message_unrefp+0x28>  // b.none
  407da4:	ldr	x0, [sp, #24]
  407da8:	ldr	x0, [x0]
  407dac:	bl	404fd0 <sd_bus_message_unref@plt>
  407db0:	nop
  407db4:	ldp	x29, x30, [sp], #32
  407db8:	ret

0000000000407dbc <hashmap_remove>:
  407dbc:	stp	x29, x30, [sp, #-32]!
  407dc0:	mov	x29, sp
  407dc4:	str	x0, [sp, #24]
  407dc8:	str	x1, [sp, #16]
  407dcc:	ldr	x1, [sp, #16]
  407dd0:	ldr	x0, [sp, #24]
  407dd4:	bl	404dd0 <internal_hashmap_remove@plt>
  407dd8:	ldp	x29, x30, [sp], #32
  407ddc:	ret

0000000000407de0 <hashmap_remove_value>:
  407de0:	stp	x29, x30, [sp, #-48]!
  407de4:	mov	x29, sp
  407de8:	str	x0, [sp, #40]
  407dec:	str	x1, [sp, #32]
  407df0:	str	x2, [sp, #24]
  407df4:	ldr	x2, [sp, #24]
  407df8:	ldr	x1, [sp, #32]
  407dfc:	ldr	x0, [sp, #40]
  407e00:	bl	4056a0 <internal_hashmap_remove_value@plt>
  407e04:	ldp	x29, x30, [sp], #48
  407e08:	ret

0000000000407e0c <timestamp_is_set>:
  407e0c:	sub	sp, sp, #0x10
  407e10:	str	x0, [sp, #8]
  407e14:	ldr	x0, [sp, #8]
  407e18:	cmp	x0, #0x0
  407e1c:	b.eq	407e34 <timestamp_is_set+0x28>  // b.none
  407e20:	ldr	x0, [sp, #8]
  407e24:	cmn	x0, #0x1
  407e28:	b.eq	407e34 <timestamp_is_set+0x28>  // b.none
  407e2c:	mov	w0, #0x1                   	// #1
  407e30:	b	407e38 <timestamp_is_set+0x2c>
  407e34:	mov	w0, #0x0                   	// #0
  407e38:	and	w0, w0, #0x1
  407e3c:	and	w0, w0, #0xff
  407e40:	add	sp, sp, #0x10
  407e44:	ret

0000000000407e48 <dual_timestamp_is_set>:
  407e48:	stp	x29, x30, [sp, #-32]!
  407e4c:	mov	x29, sp
  407e50:	str	x0, [sp, #24]
  407e54:	ldr	x0, [sp, #24]
  407e58:	ldr	x0, [x0]
  407e5c:	bl	407e0c <timestamp_is_set>
  407e60:	and	w0, w0, #0xff
  407e64:	cmp	w0, #0x0
  407e68:	b.ne	407e84 <dual_timestamp_is_set+0x3c>  // b.any
  407e6c:	ldr	x0, [sp, #24]
  407e70:	ldr	x0, [x0, #8]
  407e74:	bl	407e0c <timestamp_is_set>
  407e78:	and	w0, w0, #0xff
  407e7c:	cmp	w0, #0x0
  407e80:	b.eq	407e8c <dual_timestamp_is_set+0x44>  // b.none
  407e84:	mov	w0, #0x1                   	// #1
  407e88:	b	407e90 <dual_timestamp_is_set+0x48>
  407e8c:	mov	w0, #0x0                   	// #0
  407e90:	and	w0, w0, #0x1
  407e94:	and	w0, w0, #0xff
  407e98:	ldp	x29, x30, [sp], #32
  407e9c:	ret

0000000000407ea0 <errno_or_else>:
  407ea0:	stp	x29, x30, [sp, #-32]!
  407ea4:	mov	x29, sp
  407ea8:	str	w0, [sp, #28]
  407eac:	bl	4054d0 <__errno_location@plt>
  407eb0:	ldr	w0, [x0]
  407eb4:	cmp	w0, #0x0
  407eb8:	b.le	407ecc <errno_or_else+0x2c>
  407ebc:	bl	4054d0 <__errno_location@plt>
  407ec0:	ldr	w0, [x0]
  407ec4:	neg	w0, w0
  407ec8:	b	407edc <errno_or_else+0x3c>
  407ecc:	ldr	w0, [sp, #28]
  407ed0:	cmp	w0, #0x0
  407ed4:	cneg	w0, w0, lt  // lt = tstop
  407ed8:	neg	w0, w0
  407edc:	ldp	x29, x30, [sp], #32
  407ee0:	ret

0000000000407ee4 <fclosep>:
  407ee4:	stp	x29, x30, [sp, #-32]!
  407ee8:	mov	x29, sp
  407eec:	str	x0, [sp, #24]
  407ef0:	ldr	x0, [sp, #24]
  407ef4:	ldr	x0, [x0]
  407ef8:	bl	404e20 <safe_fclose@plt>
  407efc:	nop
  407f00:	ldp	x29, x30, [sp], #32
  407f04:	ret

0000000000407f08 <PID_TO_PTR>:
  407f08:	sub	sp, sp, #0x10
  407f0c:	str	w0, [sp, #12]
  407f10:	ldrsw	x0, [sp, #12]
  407f14:	add	sp, sp, #0x10
  407f18:	ret

0000000000407f1c <machine_new>:
  407f1c:	stp	x29, x30, [sp, #-64]!
  407f20:	mov	x29, sp
  407f24:	str	x0, [sp, #40]
  407f28:	str	w1, [sp, #36]
  407f2c:	str	x2, [sp, #24]
  407f30:	ldr	x0, [sp, #40]
  407f34:	cmp	x0, #0x0
  407f38:	cset	w0, eq  // eq = none
  407f3c:	and	w0, w0, #0xff
  407f40:	and	x0, x0, #0xff
  407f44:	cmp	x0, #0x0
  407f48:	b.eq	407f74 <machine_new+0x58>  // b.none
  407f4c:	adrp	x0, 419000 <_fini>
  407f50:	add	x1, x0, #0x7bb
  407f54:	adrp	x0, 419000 <_fini>
  407f58:	add	x4, x0, #0xe78
  407f5c:	mov	w3, #0x27                  	// #39
  407f60:	mov	x2, x1
  407f64:	adrp	x0, 419000 <_fini>
  407f68:	add	x1, x0, #0x7d8
  407f6c:	mov	w0, #0x0                   	// #0
  407f70:	bl	4052a0 <log_assert_failed_realm@plt>
  407f74:	ldr	w0, [sp, #36]
  407f78:	cmp	w0, #0x2
  407f7c:	cset	w0, gt
  407f80:	and	w0, w0, #0xff
  407f84:	and	x0, x0, #0xff
  407f88:	cmp	x0, #0x0
  407f8c:	b.eq	407fb8 <machine_new+0x9c>  // b.none
  407f90:	adrp	x0, 419000 <_fini>
  407f94:	add	x1, x0, #0x7bb
  407f98:	adrp	x0, 419000 <_fini>
  407f9c:	add	x4, x0, #0xe78
  407fa0:	mov	w3, #0x28                  	// #40
  407fa4:	mov	x2, x1
  407fa8:	adrp	x0, 419000 <_fini>
  407fac:	add	x1, x0, #0x7e0
  407fb0:	mov	w0, #0x0                   	// #0
  407fb4:	bl	4052a0 <log_assert_failed_realm@plt>
  407fb8:	ldr	x0, [sp, #24]
  407fbc:	cmp	x0, #0x0
  407fc0:	cset	w0, eq  // eq = none
  407fc4:	and	w0, w0, #0xff
  407fc8:	and	x0, x0, #0xff
  407fcc:	cmp	x0, #0x0
  407fd0:	b.eq	407ffc <machine_new+0xe0>  // b.none
  407fd4:	adrp	x0, 419000 <_fini>
  407fd8:	add	x1, x0, #0x7bb
  407fdc:	adrp	x0, 419000 <_fini>
  407fe0:	add	x4, x0, #0xe78
  407fe4:	mov	w3, #0x29                  	// #41
  407fe8:	mov	x2, x1
  407fec:	adrp	x0, 419000 <_fini>
  407ff0:	add	x1, x0, #0x800
  407ff4:	mov	w0, #0x0                   	// #0
  407ff8:	bl	4052a0 <log_assert_failed_realm@plt>
  407ffc:	mov	x1, #0xa0                  	// #160
  408000:	mov	x0, #0x1                   	// #1
  408004:	bl	4058a0 <calloc@plt>
  408008:	str	x0, [sp, #56]
  40800c:	ldr	x0, [sp, #56]
  408010:	cmp	x0, #0x0
  408014:	b.ne	408020 <machine_new+0x104>  // b.any
  408018:	mov	x0, #0x0                   	// #0
  40801c:	b	408104 <machine_new+0x1e8>
  408020:	ldr	x0, [sp, #24]
  408024:	bl	405890 <strdup@plt>
  408028:	mov	x1, x0
  40802c:	ldr	x0, [sp, #56]
  408030:	str	x1, [x0, #8]
  408034:	ldr	x0, [sp, #56]
  408038:	ldr	x0, [x0, #8]
  40803c:	cmp	x0, #0x0
  408040:	b.eq	4080d0 <machine_new+0x1b4>  // b.none
  408044:	ldr	w0, [sp, #36]
  408048:	cmp	w0, #0x2
  40804c:	b.eq	408088 <machine_new+0x16c>  // b.none
  408050:	ldr	x0, [sp, #56]
  408054:	ldr	x0, [x0, #8]
  408058:	mov	x2, #0xffffffffffffffff    	// #-1
  40805c:	mov	x1, x0
  408060:	adrp	x0, 419000 <_fini>
  408064:	add	x0, x0, #0x808
  408068:	bl	405630 <path_join_internal@plt>
  40806c:	mov	x1, x0
  408070:	ldr	x0, [sp, #56]
  408074:	str	x1, [x0, #40]
  408078:	ldr	x0, [sp, #56]
  40807c:	ldr	x0, [x0, #40]
  408080:	cmp	x0, #0x0
  408084:	b.eq	4080d8 <machine_new+0x1bc>  // b.none
  408088:	ldr	x0, [sp, #56]
  40808c:	ldr	w1, [sp, #36]
  408090:	str	w1, [x0, #32]
  408094:	ldr	x0, [sp, #40]
  408098:	ldr	x3, [x0, #16]
  40809c:	ldr	x0, [sp, #56]
  4080a0:	ldr	x0, [x0, #8]
  4080a4:	ldr	x2, [sp, #56]
  4080a8:	mov	x1, x0
  4080ac:	mov	x0, x3
  4080b0:	bl	4057c0 <hashmap_put@plt>
  4080b4:	cmp	w0, #0x0
  4080b8:	b.lt	4080e0 <machine_new+0x1c4>  // b.tstop
  4080bc:	ldr	x0, [sp, #56]
  4080c0:	ldr	x1, [sp, #40]
  4080c4:	str	x1, [x0]
  4080c8:	ldr	x0, [sp, #56]
  4080cc:	b	408104 <machine_new+0x1e8>
  4080d0:	nop
  4080d4:	b	4080e4 <machine_new+0x1c8>
  4080d8:	nop
  4080dc:	b	4080e4 <machine_new+0x1c8>
  4080e0:	nop
  4080e4:	ldr	x0, [sp, #56]
  4080e8:	ldr	x0, [x0, #40]
  4080ec:	bl	4059e0 <free@plt>
  4080f0:	ldr	x0, [sp, #56]
  4080f4:	ldr	x0, [x0, #8]
  4080f8:	bl	4059e0 <free@plt>
  4080fc:	ldr	x0, [sp, #56]
  408100:	bl	407cc8 <mfree>
  408104:	ldp	x29, x30, [sp], #64
  408108:	ret

000000000040810c <machine_free>:
  40810c:	stp	x29, x30, [sp, #-64]!
  408110:	mov	x29, sp
  408114:	str	x19, [sp, #16]
  408118:	str	x0, [sp, #40]
  40811c:	ldr	x0, [sp, #40]
  408120:	cmp	x0, #0x0
  408124:	b.ne	40813c <machine_free+0x30>  // b.any
  408128:	mov	x0, #0x0                   	// #0
  40812c:	b	408360 <machine_free+0x254>
  408130:	ldr	x0, [sp, #40]
  408134:	ldr	x0, [x0, #136]
  408138:	bl	418c80 <operation_free>
  40813c:	ldr	x0, [sp, #40]
  408140:	ldr	x0, [x0, #136]
  408144:	cmp	x0, #0x0
  408148:	b.ne	408130 <machine_free+0x24>  // b.any
  40814c:	ldr	x0, [sp, #40]
  408150:	ldrb	w0, [x0, #104]
  408154:	and	w0, w0, #0x1
  408158:	and	w0, w0, #0xff
  40815c:	cmp	w0, #0x0
  408160:	b.eq	408280 <machine_free+0x174>  // b.none
  408164:	ldr	x0, [sp, #40]
  408168:	ldr	x0, [x0]
  40816c:	add	x0, x0, #0x40
  408170:	str	x0, [sp, #48]
  408174:	ldr	x0, [sp, #40]
  408178:	str	x0, [sp, #56]
  40817c:	ldr	x0, [sp, #56]
  408180:	cmp	x0, #0x0
  408184:	cset	w0, eq  // eq = none
  408188:	and	w0, w0, #0xff
  40818c:	and	x0, x0, #0xff
  408190:	cmp	x0, #0x0
  408194:	b.eq	4081c0 <machine_free+0xb4>  // b.none
  408198:	adrp	x0, 419000 <_fini>
  40819c:	add	x1, x0, #0x7bb
  4081a0:	adrp	x0, 419000 <_fini>
  4081a4:	add	x4, x0, #0xe88
  4081a8:	mov	w3, #0x54                  	// #84
  4081ac:	mov	x2, x1
  4081b0:	adrp	x0, 419000 <_fini>
  4081b4:	add	x1, x0, #0x820
  4081b8:	mov	w0, #0x0                   	// #0
  4081bc:	bl	4052a0 <log_assert_failed_realm@plt>
  4081c0:	ldr	x0, [sp, #56]
  4081c4:	ldr	x0, [x0, #144]
  4081c8:	cmp	x0, #0x0
  4081cc:	b.eq	4081e4 <machine_free+0xd8>  // b.none
  4081d0:	ldr	x0, [sp, #56]
  4081d4:	ldr	x0, [x0, #144]
  4081d8:	ldr	x1, [sp, #56]
  4081dc:	ldr	x1, [x1, #152]
  4081e0:	str	x1, [x0, #152]
  4081e4:	ldr	x0, [sp, #56]
  4081e8:	ldr	x0, [x0, #152]
  4081ec:	cmp	x0, #0x0
  4081f0:	b.eq	40820c <machine_free+0x100>  // b.none
  4081f4:	ldr	x0, [sp, #56]
  4081f8:	ldr	x0, [x0, #152]
  4081fc:	ldr	x1, [sp, #56]
  408200:	ldr	x1, [x1, #144]
  408204:	str	x1, [x0, #144]
  408208:	b	408268 <machine_free+0x15c>
  40820c:	ldr	x0, [sp, #48]
  408210:	ldr	x0, [x0]
  408214:	ldr	x1, [sp, #56]
  408218:	cmp	x1, x0
  40821c:	cset	w0, ne  // ne = any
  408220:	and	w0, w0, #0xff
  408224:	and	x0, x0, #0xff
  408228:	cmp	x0, #0x0
  40822c:	b.eq	408258 <machine_free+0x14c>  // b.none
  408230:	adrp	x0, 419000 <_fini>
  408234:	add	x1, x0, #0x7bb
  408238:	adrp	x0, 419000 <_fini>
  40823c:	add	x4, x0, #0xe88
  408240:	mov	w3, #0x54                  	// #84
  408244:	mov	x2, x1
  408248:	adrp	x0, 419000 <_fini>
  40824c:	add	x1, x0, #0x828
  408250:	mov	w0, #0x0                   	// #0
  408254:	bl	4052a0 <log_assert_failed_realm@plt>
  408258:	ldr	x0, [sp, #56]
  40825c:	ldr	x1, [x0, #144]
  408260:	ldr	x0, [sp, #48]
  408264:	str	x1, [x0]
  408268:	ldr	x0, [sp, #56]
  40826c:	str	xzr, [x0, #152]
  408270:	ldr	x0, [sp, #56]
  408274:	ldr	x1, [x0, #152]
  408278:	ldr	x0, [sp, #56]
  40827c:	str	x1, [x0, #144]
  408280:	ldr	x0, [sp, #40]
  408284:	bl	40a75c <machine_release_unit>
  408288:	ldr	x0, [sp, #40]
  40828c:	ldr	x0, [x0, #72]
  408290:	bl	4059e0 <free@plt>
  408294:	ldr	x0, [sp, #40]
  408298:	ldr	x0, [x0]
  40829c:	ldr	x2, [x0, #16]
  4082a0:	ldr	x0, [sp, #40]
  4082a4:	ldr	x0, [x0, #8]
  4082a8:	mov	x1, x0
  4082ac:	mov	x0, x2
  4082b0:	bl	407dbc <hashmap_remove>
  4082b4:	ldr	x0, [sp, #40]
  4082b8:	ldr	x0, [x0]
  4082bc:	ldr	x0, [x0, #72]
  4082c0:	ldr	x1, [sp, #40]
  4082c4:	cmp	x1, x0
  4082c8:	b.ne	4082d8 <machine_free+0x1cc>  // b.any
  4082cc:	ldr	x0, [sp, #40]
  4082d0:	ldr	x0, [x0]
  4082d4:	str	xzr, [x0, #72]
  4082d8:	ldr	x0, [sp, #40]
  4082dc:	ldr	w0, [x0, #80]
  4082e0:	cmp	w0, #0x0
  4082e4:	b.le	408310 <machine_free+0x204>
  4082e8:	ldr	x0, [sp, #40]
  4082ec:	ldr	x0, [x0]
  4082f0:	ldr	x19, [x0, #32]
  4082f4:	ldr	x0, [sp, #40]
  4082f8:	ldr	w0, [x0, #80]
  4082fc:	bl	407f08 <PID_TO_PTR>
  408300:	ldr	x2, [sp, #40]
  408304:	mov	x1, x0
  408308:	mov	x0, x19
  40830c:	bl	407de0 <hashmap_remove_value>
  408310:	ldr	x0, [sp, #40]
  408314:	ldr	x0, [x0, #112]
  408318:	bl	404fd0 <sd_bus_message_unref@plt>
  40831c:	ldr	x0, [sp, #40]
  408320:	ldr	x0, [x0, #8]
  408324:	bl	4059e0 <free@plt>
  408328:	ldr	x0, [sp, #40]
  40832c:	ldr	x0, [x0, #40]
  408330:	bl	4059e0 <free@plt>
  408334:	ldr	x0, [sp, #40]
  408338:	ldr	x0, [x0, #48]
  40833c:	bl	4059e0 <free@plt>
  408340:	ldr	x0, [sp, #40]
  408344:	ldr	x0, [x0, #56]
  408348:	bl	4059e0 <free@plt>
  40834c:	ldr	x0, [sp, #40]
  408350:	ldr	x0, [x0, #120]
  408354:	bl	4059e0 <free@plt>
  408358:	ldr	x0, [sp, #40]
  40835c:	bl	407cc8 <mfree>
  408360:	ldr	x19, [sp, #16]
  408364:	ldp	x29, x30, [sp], #64
  408368:	ret

000000000040836c <machine_save>:
  40836c:	stp	x29, x30, [sp, #-176]!
  408370:	mov	x29, sp
  408374:	str	x19, [sp, #16]
  408378:	sub	sp, sp, #0x50
  40837c:	str	x0, [x29, #40]
  408380:	adrp	x0, 431000 <machine_vtable+0x4a0>
  408384:	ldr	x0, [x0, #3952]
  408388:	ldr	x1, [x0]
  40838c:	str	x1, [x29, #168]
  408390:	mov	x1, #0x0                   	// #0
  408394:	str	xzr, [x29, #72]
  408398:	str	xzr, [x29, #80]
  40839c:	ldr	x0, [x29, #40]
  4083a0:	cmp	x0, #0x0
  4083a4:	cset	w0, eq  // eq = none
  4083a8:	and	w0, w0, #0xff
  4083ac:	and	x0, x0, #0xff
  4083b0:	cmp	x0, #0x0
  4083b4:	b.eq	4083e0 <machine_save+0x74>  // b.none
  4083b8:	adrp	x0, 419000 <_fini>
  4083bc:	add	x1, x0, #0x7bb
  4083c0:	adrp	x0, 419000 <_fini>
  4083c4:	add	x4, x0, #0xe98
  4083c8:	mov	w3, #0x71                  	// #113
  4083cc:	mov	x2, x1
  4083d0:	adrp	x0, 419000 <_fini>
  4083d4:	add	x1, x0, #0x838
  4083d8:	mov	w0, #0x0                   	// #0
  4083dc:	bl	4052a0 <log_assert_failed_realm@plt>
  4083e0:	ldr	x0, [x29, #40]
  4083e4:	ldr	x0, [x0, #40]
  4083e8:	cmp	x0, #0x0
  4083ec:	b.ne	4083f8 <machine_save+0x8c>  // b.any
  4083f0:	mov	w19, #0x0                   	// #0
  4083f4:	b	408b74 <machine_save+0x808>
  4083f8:	ldr	x0, [x29, #40]
  4083fc:	ldrb	w0, [x0, #104]
  408400:	ubfx	x0, x0, #1, #1
  408404:	and	w0, w0, #0xff
  408408:	eor	w0, w0, #0x1
  40840c:	and	w0, w0, #0xff
  408410:	cmp	w0, #0x0
  408414:	b.eq	408420 <machine_save+0xb4>  // b.none
  408418:	mov	w19, #0x0                   	// #0
  40841c:	b	408b74 <machine_save+0x808>
  408420:	mov	w4, #0x2                   	// #2
  408424:	mov	w3, #0x0                   	// #0
  408428:	mov	w2, #0x0                   	// #0
  40842c:	mov	w1, #0x1ed                 	// #493
  408430:	adrp	x0, 419000 <_fini>
  408434:	add	x0, x0, #0x808
  408438:	bl	4055b0 <mkdir_safe_label@plt>
  40843c:	str	w0, [x29, #56]
  408440:	ldr	w0, [x29, #56]
  408444:	cmp	w0, #0x0
  408448:	b.lt	408aa8 <machine_save+0x73c>  // b.tstop
  40844c:	ldr	x0, [x29, #40]
  408450:	ldr	x0, [x0, #40]
  408454:	add	x2, x29, #0x48
  408458:	add	x1, x29, #0x50
  40845c:	bl	405450 <fopen_temporary@plt>
  408460:	str	w0, [x29, #56]
  408464:	ldr	w0, [x29, #56]
  408468:	cmp	w0, #0x0
  40846c:	b.lt	408ab0 <machine_save+0x744>  // b.tstop
  408470:	ldr	x0, [x29, #80]
  408474:	bl	405040 <fileno@plt>
  408478:	mov	w1, #0x1a4                 	// #420
  40847c:	bl	404f30 <fchmod@plt>
  408480:	ldr	x3, [x29, #80]
  408484:	ldr	x0, [x29, #40]
  408488:	ldr	x0, [x0, #8]
  40848c:	mov	x2, x0
  408490:	adrp	x0, 419000 <_fini>
  408494:	add	x1, x0, #0x840
  408498:	mov	x0, x3
  40849c:	bl	405170 <fprintf@plt>
  4084a0:	ldr	x0, [x29, #40]
  4084a4:	ldr	x0, [x0, #64]
  4084a8:	cmp	x0, #0x0
  4084ac:	b.eq	40850c <machine_save+0x1a0>  // b.none
  4084b0:	ldr	x0, [x29, #40]
  4084b4:	ldr	x0, [x0, #64]
  4084b8:	bl	405060 <cescape@plt>
  4084bc:	str	x0, [x29, #88]
  4084c0:	ldr	x0, [x29, #88]
  4084c4:	cmp	x0, #0x0
  4084c8:	b.ne	4084dc <machine_save+0x170>  // b.any
  4084cc:	mov	w0, #0xfffffff4            	// #-12
  4084d0:	str	w0, [x29, #56]
  4084d4:	mov	w19, #0x0                   	// #0
  4084d8:	b	4084fc <machine_save+0x190>
  4084dc:	ldr	x3, [x29, #80]
  4084e0:	ldr	x0, [x29, #88]
  4084e4:	mov	x2, x0
  4084e8:	adrp	x0, 419000 <_fini>
  4084ec:	add	x1, x0, #0x870
  4084f0:	mov	x0, x3
  4084f4:	bl	405170 <fprintf@plt>
  4084f8:	mov	w19, #0x1                   	// #1
  4084fc:	add	x0, x29, #0x58
  408500:	bl	407ce8 <freep>
  408504:	cmp	w19, #0x1
  408508:	b.ne	408abc <machine_save+0x750>  // b.any
  40850c:	ldr	x0, [x29, #40]
  408510:	ldr	x0, [x0, #72]
  408514:	cmp	x0, #0x0
  408518:	b.eq	40853c <machine_save+0x1d0>  // b.none
  40851c:	ldr	x3, [x29, #80]
  408520:	ldr	x0, [x29, #40]
  408524:	ldr	x0, [x0, #72]
  408528:	mov	x2, x0
  40852c:	adrp	x0, 419000 <_fini>
  408530:	add	x1, x0, #0x880
  408534:	mov	x0, x3
  408538:	bl	405170 <fprintf@plt>
  40853c:	ldr	x0, [x29, #40]
  408540:	ldr	x0, [x0, #48]
  408544:	cmp	x0, #0x0
  408548:	b.eq	4085a8 <machine_save+0x23c>  // b.none
  40854c:	ldr	x0, [x29, #40]
  408550:	ldr	x0, [x0, #48]
  408554:	bl	405060 <cescape@plt>
  408558:	str	x0, [x29, #88]
  40855c:	ldr	x0, [x29, #88]
  408560:	cmp	x0, #0x0
  408564:	b.ne	408578 <machine_save+0x20c>  // b.any
  408568:	mov	w0, #0xfffffff4            	// #-12
  40856c:	str	w0, [x29, #56]
  408570:	mov	w19, #0x0                   	// #0
  408574:	b	408598 <machine_save+0x22c>
  408578:	ldr	x3, [x29, #80]
  40857c:	ldr	x0, [x29, #88]
  408580:	mov	x2, x0
  408584:	adrp	x0, 419000 <_fini>
  408588:	add	x1, x0, #0x890
  40858c:	mov	x0, x3
  408590:	bl	405170 <fprintf@plt>
  408594:	mov	w19, #0x1                   	// #1
  408598:	add	x0, x29, #0x58
  40859c:	bl	407ce8 <freep>
  4085a0:	cmp	w19, #0x1
  4085a4:	b.ne	408abc <machine_save+0x750>  // b.any
  4085a8:	ldr	x0, [x29, #40]
  4085ac:	ldr	x0, [x0, #56]
  4085b0:	cmp	x0, #0x0
  4085b4:	b.eq	408614 <machine_save+0x2a8>  // b.none
  4085b8:	ldr	x0, [x29, #40]
  4085bc:	ldr	x0, [x0, #56]
  4085c0:	bl	405060 <cescape@plt>
  4085c4:	str	x0, [x29, #88]
  4085c8:	ldr	x0, [x29, #88]
  4085cc:	cmp	x0, #0x0
  4085d0:	b.ne	4085e4 <machine_save+0x278>  // b.any
  4085d4:	mov	w0, #0xfffffff4            	// #-12
  4085d8:	str	w0, [x29, #56]
  4085dc:	mov	w19, #0x0                   	// #0
  4085e0:	b	408604 <machine_save+0x298>
  4085e4:	ldr	x3, [x29, #80]
  4085e8:	ldr	x0, [x29, #88]
  4085ec:	mov	x2, x0
  4085f0:	adrp	x0, 419000 <_fini>
  4085f4:	add	x1, x0, #0x8a0
  4085f8:	mov	x0, x3
  4085fc:	bl	405170 <fprintf@plt>
  408600:	mov	w19, #0x1                   	// #1
  408604:	add	x0, x29, #0x58
  408608:	bl	407ce8 <freep>
  40860c:	cmp	w19, #0x1
  408610:	b.ne	408abc <machine_save+0x750>  // b.any
  408614:	ldr	x0, [x29, #40]
  408618:	ldp	x0, x1, [x0, #16]
  40861c:	bl	407c94 <sd_id128_is_null>
  408620:	cmp	w0, #0x0
  408624:	b.ne	408738 <machine_save+0x3cc>  // b.any
  408628:	ldr	x8, [x29, #80]
  40862c:	ldr	x0, [x29, #40]
  408630:	ldrb	w0, [x0, #16]
  408634:	mov	w11, w0
  408638:	ldr	x0, [x29, #40]
  40863c:	ldrb	w0, [x0, #17]
  408640:	mov	w12, w0
  408644:	ldr	x0, [x29, #40]
  408648:	ldrb	w0, [x0, #18]
  40864c:	mov	w13, w0
  408650:	ldr	x0, [x29, #40]
  408654:	ldrb	w0, [x0, #19]
  408658:	mov	w14, w0
  40865c:	ldr	x0, [x29, #40]
  408660:	ldrb	w0, [x0, #20]
  408664:	mov	w15, w0
  408668:	ldr	x0, [x29, #40]
  40866c:	ldrb	w0, [x0, #21]
  408670:	mov	w16, w0
  408674:	ldr	x0, [x29, #40]
  408678:	ldrb	w0, [x0, #22]
  40867c:	mov	w1, w0
  408680:	ldr	x0, [x29, #40]
  408684:	ldrb	w0, [x0, #23]
  408688:	mov	w2, w0
  40868c:	ldr	x0, [x29, #40]
  408690:	ldrb	w0, [x0, #24]
  408694:	mov	w3, w0
  408698:	ldr	x0, [x29, #40]
  40869c:	ldrb	w0, [x0, #25]
  4086a0:	mov	w4, w0
  4086a4:	ldr	x0, [x29, #40]
  4086a8:	ldrb	w0, [x0, #26]
  4086ac:	mov	w5, w0
  4086b0:	ldr	x0, [x29, #40]
  4086b4:	ldrb	w0, [x0, #27]
  4086b8:	mov	w6, w0
  4086bc:	ldr	x0, [x29, #40]
  4086c0:	ldrb	w0, [x0, #28]
  4086c4:	mov	w7, w0
  4086c8:	ldr	x0, [x29, #40]
  4086cc:	ldrb	w0, [x0, #29]
  4086d0:	mov	w9, w0
  4086d4:	ldr	x0, [x29, #40]
  4086d8:	ldrb	w0, [x0, #30]
  4086dc:	mov	w10, w0
  4086e0:	ldr	x0, [x29, #40]
  4086e4:	ldrb	w0, [x0, #31]
  4086e8:	str	w0, [sp, #72]
  4086ec:	str	w10, [sp, #64]
  4086f0:	str	w9, [sp, #56]
  4086f4:	str	w7, [sp, #48]
  4086f8:	str	w6, [sp, #40]
  4086fc:	str	w5, [sp, #32]
  408700:	str	w4, [sp, #24]
  408704:	str	w3, [sp, #16]
  408708:	str	w2, [sp, #8]
  40870c:	str	w1, [sp]
  408710:	mov	w7, w16
  408714:	mov	w6, w15
  408718:	mov	w5, w14
  40871c:	mov	w4, w13
  408720:	mov	w3, w12
  408724:	mov	w2, w11
  408728:	adrp	x0, 419000 <_fini>
  40872c:	add	x1, x0, #0x8b0
  408730:	mov	x0, x8
  408734:	bl	405170 <fprintf@plt>
  408738:	ldr	x0, [x29, #40]
  40873c:	ldr	w0, [x0, #80]
  408740:	cmp	w0, #0x0
  408744:	b.eq	408768 <machine_save+0x3fc>  // b.none
  408748:	ldr	x3, [x29, #80]
  40874c:	ldr	x0, [x29, #40]
  408750:	ldr	w0, [x0, #80]
  408754:	mov	w2, w0
  408758:	adrp	x0, 419000 <_fini>
  40875c:	add	x1, x0, #0x8f8
  408760:	mov	x0, x3
  408764:	bl	405170 <fprintf@plt>
  408768:	ldr	x0, [x29, #40]
  40876c:	ldr	w0, [x0, #32]
  408770:	cmn	w0, #0x1
  408774:	b.eq	40879c <machine_save+0x430>  // b.none
  408778:	ldr	x19, [x29, #80]
  40877c:	ldr	x0, [x29, #40]
  408780:	ldr	w0, [x0, #32]
  408784:	bl	40ad84 <machine_class_to_string>
  408788:	mov	x2, x0
  40878c:	adrp	x0, 419000 <_fini>
  408790:	add	x1, x0, #0x908
  408794:	mov	x0, x19
  408798:	bl	405170 <fprintf@plt>
  40879c:	ldr	x0, [x29, #40]
  4087a0:	add	x0, x0, #0x58
  4087a4:	bl	407e48 <dual_timestamp_is_set>
  4087a8:	and	w0, w0, #0xff
  4087ac:	cmp	w0, #0x0
  4087b0:	b.eq	4087e0 <machine_save+0x474>  // b.none
  4087b4:	ldr	x4, [x29, #80]
  4087b8:	ldr	x0, [x29, #40]
  4087bc:	ldr	x1, [x0, #88]
  4087c0:	ldr	x0, [x29, #40]
  4087c4:	ldr	x0, [x0, #96]
  4087c8:	mov	x3, x0
  4087cc:	mov	x2, x1
  4087d0:	adrp	x0, 419000 <_fini>
  4087d4:	add	x1, x0, #0x918
  4087d8:	mov	x0, x4
  4087dc:	bl	405170 <fprintf@plt>
  4087e0:	ldr	x0, [x29, #40]
  4087e4:	ldr	x0, [x0, #128]
  4087e8:	cmp	x0, #0x0
  4087ec:	b.eq	408890 <machine_save+0x524>  // b.none
  4087f0:	ldr	x0, [x29, #80]
  4087f4:	mov	x3, x0
  4087f8:	mov	x2, #0x6                   	// #6
  4087fc:	mov	x1, #0x1                   	// #1
  408800:	adrp	x0, 419000 <_fini>
  408804:	add	x0, x0, #0x938
  408808:	bl	405a60 <fwrite@plt>
  40880c:	str	xzr, [x29, #96]
  408810:	b	40886c <machine_save+0x500>
  408814:	ldr	x0, [x29, #96]
  408818:	cmp	x0, #0x0
  40881c:	b.eq	408830 <machine_save+0x4c4>  // b.none
  408820:	ldr	x0, [x29, #80]
  408824:	mov	x1, x0
  408828:	mov	w0, #0x20                  	// #32
  40882c:	bl	405350 <fputc@plt>
  408830:	ldr	x3, [x29, #80]
  408834:	ldr	x0, [x29, #40]
  408838:	ldr	x1, [x0, #120]
  40883c:	ldr	x0, [x29, #96]
  408840:	lsl	x0, x0, #2
  408844:	add	x0, x1, x0
  408848:	ldr	w0, [x0]
  40884c:	mov	w2, w0
  408850:	adrp	x0, 419000 <_fini>
  408854:	add	x1, x0, #0x940
  408858:	mov	x0, x3
  40885c:	bl	405170 <fprintf@plt>
  408860:	ldr	x0, [x29, #96]
  408864:	add	x0, x0, #0x1
  408868:	str	x0, [x29, #96]
  40886c:	ldr	x0, [x29, #40]
  408870:	ldr	x0, [x0, #128]
  408874:	ldr	x1, [x29, #96]
  408878:	cmp	x1, x0
  40887c:	b.cc	408814 <machine_save+0x4a8>  // b.lo, b.ul, b.last
  408880:	ldr	x0, [x29, #80]
  408884:	mov	x1, x0
  408888:	mov	w0, #0xa                   	// #10
  40888c:	bl	405350 <fputc@plt>
  408890:	ldr	x0, [x29, #80]
  408894:	bl	405bc0 <fflush_and_check@plt>
  408898:	str	w0, [x29, #56]
  40889c:	ldr	w0, [x29, #56]
  4088a0:	cmp	w0, #0x0
  4088a4:	b.lt	408ab8 <machine_save+0x74c>  // b.tstop
  4088a8:	ldr	x2, [x29, #72]
  4088ac:	ldr	x0, [x29, #40]
  4088b0:	ldr	x0, [x0, #40]
  4088b4:	mov	x1, x0
  4088b8:	mov	x0, x2
  4088bc:	bl	405090 <rename@plt>
  4088c0:	cmp	w0, #0x0
  4088c4:	b.ge	4088dc <machine_save+0x570>  // b.tcont
  4088c8:	bl	4054d0 <__errno_location@plt>
  4088cc:	ldr	w0, [x0]
  4088d0:	neg	w0, w0
  4088d4:	str	w0, [x29, #56]
  4088d8:	b	408abc <machine_save+0x750>
  4088dc:	ldr	x0, [x29, #40]
  4088e0:	ldr	x0, [x0, #64]
  4088e4:	cmp	x0, #0x0
  4088e8:	b.eq	408aa0 <machine_save+0x734>  // b.none
  4088ec:	adrp	x0, 419000 <_fini>
  4088f0:	add	x0, x0, #0x948
  4088f4:	str	x0, [x29, #152]
  4088f8:	ldr	x0, [x29, #40]
  4088fc:	ldr	x0, [x0, #64]
  408900:	str	x0, [x29, #160]
  408904:	str	xzr, [x29, #112]
  408908:	str	xzr, [x29, #120]
  40890c:	b	408940 <machine_save+0x5d4>
  408910:	ldr	x0, [x29, #120]
  408914:	lsl	x0, x0, #3
  408918:	add	x1, x29, #0x98
  40891c:	ldr	x0, [x1, x0]
  408920:	bl	405b50 <strlen@plt>
  408924:	mov	x1, x0
  408928:	ldr	x0, [x29, #112]
  40892c:	add	x0, x0, x1
  408930:	str	x0, [x29, #112]
  408934:	ldr	x0, [x29, #120]
  408938:	add	x0, x0, #0x1
  40893c:	str	x0, [x29, #120]
  408940:	ldr	x0, [x29, #120]
  408944:	cmp	x0, #0x1
  408948:	b.hi	408964 <machine_save+0x5f8>  // b.pmore
  40894c:	ldr	x0, [x29, #120]
  408950:	lsl	x0, x0, #3
  408954:	add	x1, x29, #0x98
  408958:	ldr	x0, [x1, x0]
  40895c:	cmp	x0, #0x0
  408960:	b.ne	408910 <machine_save+0x5a4>  // b.any
  408964:	ldr	x0, [x29, #112]
  408968:	add	x0, x0, #0x1
  40896c:	str	x0, [x29, #128]
  408970:	ldr	x1, [x29, #128]
  408974:	mov	x0, #0x1                   	// #1
  408978:	bl	407d0c <size_multiply_overflow>
  40897c:	and	w0, w0, #0xff
  408980:	and	x0, x0, #0xff
  408984:	cmp	x0, #0x0
  408988:	b.eq	4089b4 <machine_save+0x648>  // b.none
  40898c:	adrp	x0, 419000 <_fini>
  408990:	add	x1, x0, #0x7bb
  408994:	adrp	x0, 419000 <_fini>
  408998:	add	x4, x0, #0xe98
  40899c:	mov	w3, #0xdb                  	// #219
  4089a0:	mov	x2, x1
  4089a4:	adrp	x0, 419000 <_fini>
  4089a8:	add	x1, x0, #0x968
  4089ac:	mov	w0, #0x0                   	// #0
  4089b0:	bl	4052a0 <log_assert_failed_realm@plt>
  4089b4:	ldr	x0, [x29, #128]
  4089b8:	cmp	x0, #0x400, lsl #12
  4089bc:	cset	w0, hi  // hi = pmore
  4089c0:	and	w0, w0, #0xff
  4089c4:	and	x0, x0, #0xff
  4089c8:	cmp	x0, #0x0
  4089cc:	b.eq	4089f8 <machine_save+0x68c>  // b.none
  4089d0:	adrp	x0, 419000 <_fini>
  4089d4:	add	x1, x0, #0x7bb
  4089d8:	adrp	x0, 419000 <_fini>
  4089dc:	add	x4, x0, #0xe98
  4089e0:	mov	w3, #0xdb                  	// #219
  4089e4:	mov	x2, x1
  4089e8:	adrp	x0, 419000 <_fini>
  4089ec:	add	x1, x0, #0x998
  4089f0:	mov	w0, #0x0                   	// #0
  4089f4:	bl	4052a0 <log_assert_failed_realm@plt>
  4089f8:	ldr	x0, [x29, #128]
  4089fc:	add	x0, x0, #0xf
  408a00:	lsr	x0, x0, #4
  408a04:	lsl	x0, x0, #4
  408a08:	sub	sp, sp, x0
  408a0c:	add	x0, sp, #0x50
  408a10:	add	x0, x0, #0xf
  408a14:	lsr	x0, x0, #4
  408a18:	lsl	x0, x0, #4
  408a1c:	str	x0, [x29, #136]
  408a20:	ldr	x0, [x29, #136]
  408a24:	str	x0, [x29, #104]
  408a28:	str	xzr, [x29, #120]
  408a2c:	b	408a5c <machine_save+0x6f0>
  408a30:	ldr	x0, [x29, #120]
  408a34:	lsl	x0, x0, #3
  408a38:	add	x1, x29, #0x98
  408a3c:	ldr	x0, [x1, x0]
  408a40:	mov	x1, x0
  408a44:	ldr	x0, [x29, #104]
  408a48:	bl	404f50 <stpcpy@plt>
  408a4c:	str	x0, [x29, #104]
  408a50:	ldr	x0, [x29, #120]
  408a54:	add	x0, x0, #0x1
  408a58:	str	x0, [x29, #120]
  408a5c:	ldr	x0, [x29, #120]
  408a60:	cmp	x0, #0x1
  408a64:	b.hi	408a80 <machine_save+0x714>  // b.pmore
  408a68:	ldr	x0, [x29, #120]
  408a6c:	lsl	x0, x0, #3
  408a70:	add	x1, x29, #0x98
  408a74:	ldr	x0, [x1, x0]
  408a78:	cmp	x0, #0x0
  408a7c:	b.ne	408a30 <machine_save+0x6c4>  // b.any
  408a80:	ldr	x0, [x29, #104]
  408a84:	strb	wzr, [x0]
  408a88:	ldr	x0, [x29, #136]
  408a8c:	str	x0, [x29, #144]
  408a90:	ldr	x0, [x29, #40]
  408a94:	ldr	x0, [x0, #8]
  408a98:	ldr	x1, [x29, #144]
  408a9c:	bl	4051e0 <symlink@plt>
  408aa0:	mov	w19, #0x0                   	// #0
  408aa4:	b	408b74 <machine_save+0x808>
  408aa8:	nop
  408aac:	b	408abc <machine_save+0x750>
  408ab0:	nop
  408ab4:	b	408abc <machine_save+0x750>
  408ab8:	nop
  408abc:	ldr	x0, [x29, #40]
  408ac0:	ldr	x0, [x0, #40]
  408ac4:	bl	404ed0 <unlink@plt>
  408ac8:	ldr	x0, [x29, #72]
  408acc:	cmp	x0, #0x0
  408ad0:	b.eq	408adc <machine_save+0x770>  // b.none
  408ad4:	ldr	x0, [x29, #72]
  408ad8:	bl	404ed0 <unlink@plt>
  408adc:	mov	w0, #0x3                   	// #3
  408ae0:	str	w0, [x29, #60]
  408ae4:	ldr	w0, [x29, #56]
  408ae8:	str	w0, [x29, #64]
  408aec:	str	wzr, [x29, #68]
  408af0:	ldr	w0, [x29, #68]
  408af4:	bl	405c20 <log_get_max_level_realm@plt>
  408af8:	mov	w1, w0
  408afc:	ldr	w0, [x29, #60]
  408b00:	and	w0, w0, #0x7
  408b04:	cmp	w1, w0
  408b08:	b.lt	408b5c <machine_save+0x7f0>  // b.tstop
  408b0c:	ldr	w0, [x29, #68]
  408b10:	lsl	w1, w0, #10
  408b14:	ldr	w0, [x29, #60]
  408b18:	orr	w7, w1, w0
  408b1c:	adrp	x0, 419000 <_fini>
  408b20:	add	x1, x0, #0x7bb
  408b24:	ldr	x0, [x29, #40]
  408b28:	ldr	x0, [x0, #40]
  408b2c:	mov	x6, x0
  408b30:	adrp	x0, 419000 <_fini>
  408b34:	add	x5, x0, #0x9b8
  408b38:	adrp	x0, 419000 <_fini>
  408b3c:	add	x4, x0, #0xea8
  408b40:	mov	w3, #0xe7                  	// #231
  408b44:	mov	x2, x1
  408b48:	ldr	w1, [x29, #64]
  408b4c:	mov	w0, w7
  408b50:	bl	405750 <log_internal_realm@plt>
  408b54:	mov	w19, w0
  408b58:	b	408b70 <machine_save+0x804>
  408b5c:	ldr	w0, [x29, #64]
  408b60:	cmp	w0, #0x0
  408b64:	cneg	w0, w0, lt  // lt = tstop
  408b68:	and	w0, w0, #0xff
  408b6c:	neg	w19, w0
  408b70:	nop
  408b74:	add	x0, x29, #0x50
  408b78:	bl	407ee4 <fclosep>
  408b7c:	add	x0, x29, #0x48
  408b80:	bl	407ce8 <freep>
  408b84:	mov	w1, w19
  408b88:	adrp	x0, 431000 <machine_vtable+0x4a0>
  408b8c:	ldr	x0, [x0, #3952]
  408b90:	ldr	x2, [x29, #168]
  408b94:	ldr	x0, [x0]
  408b98:	eor	x0, x2, x0
  408b9c:	cmp	x0, #0x0
  408ba0:	b.eq	408ba8 <machine_save+0x83c>  // b.none
  408ba4:	bl	4055f0 <__stack_chk_fail@plt>
  408ba8:	mov	w0, w1
  408bac:	mov	sp, x29
  408bb0:	ldr	x19, [sp, #16]
  408bb4:	ldp	x29, x30, [sp], #176
  408bb8:	ret

0000000000408bbc <machine_unlink>:
  408bbc:	stp	x29, x30, [sp, #-112]!
  408bc0:	mov	x29, sp
  408bc4:	str	x0, [x29, #24]
  408bc8:	adrp	x0, 431000 <machine_vtable+0x4a0>
  408bcc:	ldr	x0, [x0, #3952]
  408bd0:	ldr	x1, [x0]
  408bd4:	str	x1, [x29, #104]
  408bd8:	mov	x1, #0x0                   	// #0
  408bdc:	ldr	x0, [x29, #24]
  408be0:	cmp	x0, #0x0
  408be4:	cset	w0, eq  // eq = none
  408be8:	and	w0, w0, #0xff
  408bec:	and	x0, x0, #0xff
  408bf0:	cmp	x0, #0x0
  408bf4:	b.eq	408c20 <machine_unlink+0x64>  // b.none
  408bf8:	adrp	x0, 419000 <_fini>
  408bfc:	add	x1, x0, #0x7bb
  408c00:	adrp	x0, 419000 <_fini>
  408c04:	add	x4, x0, #0xeb8
  408c08:	mov	w3, #0xeb                  	// #235
  408c0c:	mov	x2, x1
  408c10:	adrp	x0, 419000 <_fini>
  408c14:	add	x1, x0, #0x838
  408c18:	mov	w0, #0x0                   	// #0
  408c1c:	bl	4052a0 <log_assert_failed_realm@plt>
  408c20:	ldr	x0, [x29, #24]
  408c24:	ldr	x0, [x0, #64]
  408c28:	cmp	x0, #0x0
  408c2c:	b.eq	408ddc <machine_unlink+0x220>  // b.none
  408c30:	adrp	x0, 419000 <_fini>
  408c34:	add	x0, x0, #0x948
  408c38:	str	x0, [x29, #88]
  408c3c:	ldr	x0, [x29, #24]
  408c40:	ldr	x0, [x0, #64]
  408c44:	str	x0, [x29, #96]
  408c48:	str	xzr, [x29, #48]
  408c4c:	str	xzr, [x29, #56]
  408c50:	b	408c84 <machine_unlink+0xc8>
  408c54:	ldr	x0, [x29, #56]
  408c58:	lsl	x0, x0, #3
  408c5c:	add	x1, x29, #0x58
  408c60:	ldr	x0, [x1, x0]
  408c64:	bl	405b50 <strlen@plt>
  408c68:	mov	x1, x0
  408c6c:	ldr	x0, [x29, #48]
  408c70:	add	x0, x0, x1
  408c74:	str	x0, [x29, #48]
  408c78:	ldr	x0, [x29, #56]
  408c7c:	add	x0, x0, #0x1
  408c80:	str	x0, [x29, #56]
  408c84:	ldr	x0, [x29, #56]
  408c88:	cmp	x0, #0x1
  408c8c:	b.hi	408ca8 <machine_unlink+0xec>  // b.pmore
  408c90:	ldr	x0, [x29, #56]
  408c94:	lsl	x0, x0, #3
  408c98:	add	x1, x29, #0x58
  408c9c:	ldr	x0, [x1, x0]
  408ca0:	cmp	x0, #0x0
  408ca4:	b.ne	408c54 <machine_unlink+0x98>  // b.any
  408ca8:	ldr	x0, [x29, #48]
  408cac:	add	x0, x0, #0x1
  408cb0:	str	x0, [x29, #64]
  408cb4:	ldr	x1, [x29, #64]
  408cb8:	mov	x0, #0x1                   	// #1
  408cbc:	bl	407d0c <size_multiply_overflow>
  408cc0:	and	w0, w0, #0xff
  408cc4:	and	x0, x0, #0xff
  408cc8:	cmp	x0, #0x0
  408ccc:	b.eq	408cf8 <machine_unlink+0x13c>  // b.none
  408cd0:	adrp	x0, 419000 <_fini>
  408cd4:	add	x1, x0, #0x7bb
  408cd8:	adrp	x0, 419000 <_fini>
  408cdc:	add	x4, x0, #0xeb8
  408ce0:	mov	w3, #0xf0                  	// #240
  408ce4:	mov	x2, x1
  408ce8:	adrp	x0, 419000 <_fini>
  408cec:	add	x1, x0, #0x968
  408cf0:	mov	w0, #0x0                   	// #0
  408cf4:	bl	4052a0 <log_assert_failed_realm@plt>
  408cf8:	ldr	x0, [x29, #64]
  408cfc:	cmp	x0, #0x400, lsl #12
  408d00:	cset	w0, hi  // hi = pmore
  408d04:	and	w0, w0, #0xff
  408d08:	and	x0, x0, #0xff
  408d0c:	cmp	x0, #0x0
  408d10:	b.eq	408d3c <machine_unlink+0x180>  // b.none
  408d14:	adrp	x0, 419000 <_fini>
  408d18:	add	x1, x0, #0x7bb
  408d1c:	adrp	x0, 419000 <_fini>
  408d20:	add	x4, x0, #0xeb8
  408d24:	mov	w3, #0xf0                  	// #240
  408d28:	mov	x2, x1
  408d2c:	adrp	x0, 419000 <_fini>
  408d30:	add	x1, x0, #0x998
  408d34:	mov	w0, #0x0                   	// #0
  408d38:	bl	4052a0 <log_assert_failed_realm@plt>
  408d3c:	ldr	x0, [x29, #64]
  408d40:	add	x0, x0, #0xf
  408d44:	lsr	x0, x0, #4
  408d48:	lsl	x0, x0, #4
  408d4c:	sub	sp, sp, x0
  408d50:	mov	x0, sp
  408d54:	add	x0, x0, #0xf
  408d58:	lsr	x0, x0, #4
  408d5c:	lsl	x0, x0, #4
  408d60:	str	x0, [x29, #72]
  408d64:	ldr	x0, [x29, #72]
  408d68:	str	x0, [x29, #40]
  408d6c:	str	xzr, [x29, #56]
  408d70:	b	408da0 <machine_unlink+0x1e4>
  408d74:	ldr	x0, [x29, #56]
  408d78:	lsl	x0, x0, #3
  408d7c:	add	x1, x29, #0x58
  408d80:	ldr	x0, [x1, x0]
  408d84:	mov	x1, x0
  408d88:	ldr	x0, [x29, #40]
  408d8c:	bl	404f50 <stpcpy@plt>
  408d90:	str	x0, [x29, #40]
  408d94:	ldr	x0, [x29, #56]
  408d98:	add	x0, x0, #0x1
  408d9c:	str	x0, [x29, #56]
  408da0:	ldr	x0, [x29, #56]
  408da4:	cmp	x0, #0x1
  408da8:	b.hi	408dc4 <machine_unlink+0x208>  // b.pmore
  408dac:	ldr	x0, [x29, #56]
  408db0:	lsl	x0, x0, #3
  408db4:	add	x1, x29, #0x58
  408db8:	ldr	x0, [x1, x0]
  408dbc:	cmp	x0, #0x0
  408dc0:	b.ne	408d74 <machine_unlink+0x1b8>  // b.any
  408dc4:	ldr	x0, [x29, #40]
  408dc8:	strb	wzr, [x0]
  408dcc:	ldr	x0, [x29, #72]
  408dd0:	str	x0, [x29, #80]
  408dd4:	ldr	x0, [x29, #80]
  408dd8:	bl	404ed0 <unlink@plt>
  408ddc:	ldr	x0, [x29, #24]
  408de0:	ldr	x0, [x0, #40]
  408de4:	cmp	x0, #0x0
  408de8:	b.eq	408df8 <machine_unlink+0x23c>  // b.none
  408dec:	ldr	x0, [x29, #24]
  408df0:	ldr	x0, [x0, #40]
  408df4:	bl	404ed0 <unlink@plt>
  408df8:	nop
  408dfc:	adrp	x0, 431000 <machine_vtable+0x4a0>
  408e00:	ldr	x0, [x0, #3952]
  408e04:	ldr	x1, [x29, #104]
  408e08:	ldr	x0, [x0]
  408e0c:	eor	x0, x1, x0
  408e10:	cmp	x0, #0x0
  408e14:	b.eq	408e1c <machine_unlink+0x260>  // b.none
  408e18:	bl	4055f0 <__stack_chk_fail@plt>
  408e1c:	mov	sp, x29
  408e20:	ldp	x29, x30, [sp], #112
  408e24:	ret

0000000000408e28 <machine_load>:
  408e28:	sub	sp, sp, #0x140
  408e2c:	stp	x29, x30, [sp, #128]
  408e30:	add	x29, sp, #0x80
  408e34:	stp	x19, x20, [sp, #144]
  408e38:	str	x0, [sp, #168]
  408e3c:	adrp	x0, 431000 <machine_vtable+0x4a0>
  408e40:	ldr	x0, [x0, #3952]
  408e44:	ldr	x1, [x0]
  408e48:	str	x1, [sp, #312]
  408e4c:	mov	x1, #0x0                   	// #0
  408e50:	str	xzr, [sp, #224]
  408e54:	str	xzr, [sp, #232]
  408e58:	str	xzr, [sp, #240]
  408e5c:	str	xzr, [sp, #248]
  408e60:	str	xzr, [sp, #256]
  408e64:	str	xzr, [sp, #264]
  408e68:	ldr	x0, [sp, #168]
  408e6c:	cmp	x0, #0x0
  408e70:	cset	w0, eq  // eq = none
  408e74:	and	w0, w0, #0xff
  408e78:	and	x0, x0, #0xff
  408e7c:	cmp	x0, #0x0
  408e80:	b.eq	408eac <machine_load+0x84>  // b.none
  408e84:	adrp	x0, 419000 <_fini>
  408e88:	add	x1, x0, #0x7bb
  408e8c:	adrp	x0, 419000 <_fini>
  408e90:	add	x4, x0, #0xec8
  408e94:	mov	w3, #0xfc                  	// #252
  408e98:	mov	x2, x1
  408e9c:	adrp	x0, 419000 <_fini>
  408ea0:	add	x1, x0, #0x838
  408ea4:	mov	w0, #0x0                   	// #0
  408ea8:	bl	4052a0 <log_assert_failed_realm@plt>
  408eac:	ldr	x0, [sp, #168]
  408eb0:	ldr	x0, [x0, #40]
  408eb4:	cmp	x0, #0x0
  408eb8:	b.ne	408ec4 <machine_load+0x9c>  // b.any
  408ebc:	mov	w20, #0x0                   	// #0
  408ec0:	b	409328 <machine_load+0x500>
  408ec4:	ldr	x0, [sp, #168]
  408ec8:	ldr	x8, [x0, #40]
  408ecc:	ldr	x0, [sp, #168]
  408ed0:	add	x2, x0, #0x40
  408ed4:	ldr	x0, [sp, #168]
  408ed8:	add	x3, x0, #0x48
  408edc:	ldr	x0, [sp, #168]
  408ee0:	add	x4, x0, #0x30
  408ee4:	ldr	x0, [sp, #168]
  408ee8:	add	x0, x0, #0x38
  408eec:	str	xzr, [sp, #112]
  408ef0:	add	x1, sp, #0x108
  408ef4:	str	x1, [sp, #104]
  408ef8:	adrp	x1, 419000 <_fini>
  408efc:	add	x1, x1, #0xa00
  408f00:	str	x1, [sp, #96]
  408f04:	add	x1, sp, #0xe8
  408f08:	str	x1, [sp, #88]
  408f0c:	adrp	x1, 419000 <_fini>
  408f10:	add	x1, x1, #0xa08
  408f14:	str	x1, [sp, #80]
  408f18:	add	x1, sp, #0xe0
  408f1c:	str	x1, [sp, #72]
  408f20:	adrp	x1, 419000 <_fini>
  408f24:	add	x1, x1, #0xa18
  408f28:	str	x1, [sp, #64]
  408f2c:	add	x1, sp, #0x100
  408f30:	str	x1, [sp, #56]
  408f34:	adrp	x1, 419000 <_fini>
  408f38:	add	x1, x1, #0xa28
  408f3c:	str	x1, [sp, #48]
  408f40:	add	x1, sp, #0xf8
  408f44:	str	x1, [sp, #40]
  408f48:	adrp	x1, 419000 <_fini>
  408f4c:	add	x1, x1, #0xa30
  408f50:	str	x1, [sp, #32]
  408f54:	add	x1, sp, #0xf0
  408f58:	str	x1, [sp, #24]
  408f5c:	adrp	x1, 419000 <_fini>
  408f60:	add	x1, x1, #0xa38
  408f64:	str	x1, [sp, #16]
  408f68:	str	x0, [sp, #8]
  408f6c:	adrp	x0, 419000 <_fini>
  408f70:	add	x0, x0, #0xa40
  408f74:	str	x0, [sp]
  408f78:	mov	x7, x4
  408f7c:	adrp	x0, 419000 <_fini>
  408f80:	add	x6, x0, #0x9e0
  408f84:	mov	x5, x3
  408f88:	adrp	x0, 419000 <_fini>
  408f8c:	add	x4, x0, #0x9e8
  408f90:	mov	x3, x2
  408f94:	adrp	x0, 419000 <_fini>
  408f98:	add	x2, x0, #0x9f8
  408f9c:	mov	x1, x8
  408fa0:	mov	x0, #0x0                   	// #0
  408fa4:	bl	405540 <parse_env_file_sentinel@plt>
  408fa8:	str	w0, [sp, #192]
  408fac:	ldr	w0, [sp, #192]
  408fb0:	cmp	w0, #0x0
  408fb4:	b.ge	409064 <machine_load+0x23c>  // b.tcont
  408fb8:	ldr	w0, [sp, #192]
  408fbc:	cmn	w0, #0x2
  408fc0:	b.ne	408fcc <machine_load+0x1a4>  // b.any
  408fc4:	mov	w20, #0x0                   	// #0
  408fc8:	b	409328 <machine_load+0x500>
  408fcc:	mov	w0, #0x3                   	// #3
  408fd0:	str	w0, [sp, #212]
  408fd4:	ldr	w0, [sp, #192]
  408fd8:	str	w0, [sp, #216]
  408fdc:	str	wzr, [sp, #220]
  408fe0:	ldr	w0, [sp, #220]
  408fe4:	bl	405c20 <log_get_max_level_realm@plt>
  408fe8:	mov	w1, w0
  408fec:	ldr	w0, [sp, #212]
  408ff0:	and	w0, w0, #0x7
  408ff4:	cmp	w1, w0
  408ff8:	b.lt	40904c <machine_load+0x224>  // b.tstop
  408ffc:	ldr	w0, [sp, #220]
  409000:	lsl	w1, w0, #10
  409004:	ldr	w0, [sp, #212]
  409008:	orr	w7, w1, w0
  40900c:	adrp	x0, 419000 <_fini>
  409010:	add	x1, x0, #0x7bb
  409014:	ldr	x0, [sp, #168]
  409018:	ldr	x0, [x0, #40]
  40901c:	mov	x6, x0
  409020:	adrp	x0, 419000 <_fini>
  409024:	add	x5, x0, #0xa48
  409028:	adrp	x0, 419000 <_fini>
  40902c:	add	x4, x0, #0xed8
  409030:	mov	w3, #0x110                 	// #272
  409034:	mov	x2, x1
  409038:	ldr	w1, [sp, #216]
  40903c:	mov	w0, w7
  409040:	bl	405750 <log_internal_realm@plt>
  409044:	mov	w20, w0
  409048:	b	409328 <machine_load+0x500>
  40904c:	ldr	w0, [sp, #216]
  409050:	cmp	w0, #0x0
  409054:	cneg	w0, w0, lt  // lt = tstop
  409058:	and	w0, w0, #0xff
  40905c:	neg	w20, w0
  409060:	b	409328 <machine_load+0x500>
  409064:	ldr	x0, [sp, #240]
  409068:	cmp	x0, #0x0
  40906c:	b.eq	409088 <machine_load+0x260>  // b.none
  409070:	ldr	x2, [sp, #240]
  409074:	ldr	x0, [sp, #168]
  409078:	add	x0, x0, #0x10
  40907c:	mov	x1, x0
  409080:	mov	x0, x2
  409084:	bl	404ff0 <sd_id128_from_string@plt>
  409088:	ldr	x0, [sp, #248]
  40908c:	cmp	x0, #0x0
  409090:	b.eq	4090ac <machine_load+0x284>  // b.none
  409094:	ldr	x2, [sp, #248]
  409098:	ldr	x0, [sp, #168]
  40909c:	add	x0, x0, #0x50
  4090a0:	mov	x1, x0
  4090a4:	mov	x0, x2
  4090a8:	bl	405490 <parse_pid@plt>
  4090ac:	ldr	x0, [sp, #256]
  4090b0:	cmp	x0, #0x0
  4090b4:	b.eq	4090dc <machine_load+0x2b4>  // b.none
  4090b8:	ldr	x0, [sp, #256]
  4090bc:	bl	40adc4 <machine_class_from_string>
  4090c0:	str	w0, [sp, #196]
  4090c4:	ldr	w0, [sp, #196]
  4090c8:	cmp	w0, #0x0
  4090cc:	b.lt	4090dc <machine_load+0x2b4>  // b.tstop
  4090d0:	ldr	x0, [sp, #168]
  4090d4:	ldr	w1, [sp, #196]
  4090d8:	str	w1, [x0, #32]
  4090dc:	ldr	x0, [sp, #224]
  4090e0:	cmp	x0, #0x0
  4090e4:	b.eq	409100 <machine_load+0x2d8>  // b.none
  4090e8:	ldr	x2, [sp, #224]
  4090ec:	ldr	x0, [sp, #168]
  4090f0:	add	x0, x0, #0x58
  4090f4:	mov	x1, x0
  4090f8:	mov	x0, x2
  4090fc:	bl	405910 <deserialize_usec@plt>
  409100:	ldr	x0, [sp, #232]
  409104:	cmp	x0, #0x0
  409108:	b.eq	409124 <machine_load+0x2fc>  // b.none
  40910c:	ldr	x2, [sp, #232]
  409110:	ldr	x0, [sp, #168]
  409114:	add	x0, x0, #0x60
  409118:	mov	x1, x0
  40911c:	mov	x0, x2
  409120:	bl	405910 <deserialize_usec@plt>
  409124:	ldr	x0, [sp, #264]
  409128:	cmp	x0, #0x0
  40912c:	b.eq	409324 <machine_load+0x4fc>  // b.none
  409130:	str	xzr, [sp, #272]
  409134:	str	xzr, [sp, #304]
  409138:	str	xzr, [sp, #288]
  40913c:	ldr	x0, [sp, #264]
  409140:	str	x0, [sp, #280]
  409144:	str	xzr, [sp, #296]
  409148:	add	x1, sp, #0x128
  40914c:	add	x0, sp, #0x118
  409150:	mov	w3, #0x0                   	// #0
  409154:	mov	x2, #0x0                   	// #0
  409158:	bl	405860 <extract_first_word@plt>
  40915c:	str	w0, [sp, #192]
  409160:	ldr	w0, [sp, #192]
  409164:	cmp	w0, #0x0
  409168:	b.ne	409174 <machine_load+0x34c>  // b.any
  40916c:	mov	w19, #0x0                   	// #0
  409170:	b	4092cc <machine_load+0x4a4>
  409174:	ldr	w0, [sp, #192]
  409178:	cmn	w0, #0xc
  40917c:	b.ne	4091a8 <machine_load+0x380>  // b.any
  409180:	adrp	x0, 419000 <_fini>
  409184:	add	x1, x0, #0x7bb
  409188:	adrp	x0, 419000 <_fini>
  40918c:	add	x3, x0, #0xed8
  409190:	mov	w2, #0x134                 	// #308
  409194:	mov	w0, #0x0                   	// #0
  409198:	bl	405ba0 <log_oom_internal@plt>
  40919c:	mov	w20, w0
  4091a0:	mov	w19, #0x1                   	// #1
  4091a4:	b	4092cc <machine_load+0x4a4>
  4091a8:	ldr	w0, [sp, #192]
  4091ac:	cmp	w0, #0x0
  4091b0:	b.ge	40923c <machine_load+0x414>  // b.tcont
  4091b4:	mov	w0, #0x4                   	// #4
  4091b8:	str	w0, [sp, #200]
  4091bc:	ldr	w0, [sp, #192]
  4091c0:	str	w0, [sp, #204]
  4091c4:	str	wzr, [sp, #208]
  4091c8:	ldr	w0, [sp, #208]
  4091cc:	bl	405c20 <log_get_max_level_realm@plt>
  4091d0:	mov	w1, w0
  4091d4:	ldr	w0, [sp, #200]
  4091d8:	and	w0, w0, #0x7
  4091dc:	cmp	w1, w0
  4091e0:	b.lt	40922c <machine_load+0x404>  // b.tstop
  4091e4:	ldr	w0, [sp, #208]
  4091e8:	lsl	w1, w0, #10
  4091ec:	ldr	w0, [sp, #200]
  4091f0:	orr	w7, w1, w0
  4091f4:	adrp	x0, 419000 <_fini>
  4091f8:	add	x1, x0, #0x7bb
  4091fc:	ldr	x0, [sp, #264]
  409200:	mov	x6, x0
  409204:	adrp	x0, 419000 <_fini>
  409208:	add	x5, x0, #0xa60
  40920c:	adrp	x0, 419000 <_fini>
  409210:	add	x4, x0, #0xed8
  409214:	mov	w3, #0x136                 	// #310
  409218:	mov	x2, x1
  40921c:	ldr	w1, [sp, #204]
  409220:	mov	w0, w7
  409224:	bl	405750 <log_internal_realm@plt>
  409228:	b	409234 <machine_load+0x40c>
  40922c:	ldr	w0, [sp, #204]
  409230:	cmp	w0, #0x0
  409234:	mov	w19, #0x0                   	// #0
  409238:	b	4092cc <machine_load+0x4a4>
  40923c:	ldr	x0, [sp, #296]
  409240:	add	x1, sp, #0xbc
  409244:	bl	405ae0 <parse_ifindex@plt>
  409248:	cmp	w0, #0x0
  40924c:	b.ge	409258 <machine_load+0x430>  // b.tcont
  409250:	mov	w19, #0x2                   	// #2
  409254:	b	4092cc <machine_load+0x4a4>
  409258:	ldr	x0, [sp, #304]
  40925c:	add	x2, x0, #0x1
  409260:	add	x1, sp, #0x110
  409264:	add	x0, sp, #0x120
  409268:	mov	x3, #0x4                   	// #4
  40926c:	bl	4053b0 <greedy_realloc@plt>
  409270:	cmp	x0, #0x0
  409274:	b.ne	4092a8 <machine_load+0x480>  // b.any
  409278:	ldr	x0, [sp, #288]
  40927c:	bl	4059e0 <free@plt>
  409280:	adrp	x0, 419000 <_fini>
  409284:	add	x1, x0, #0x7bb
  409288:	adrp	x0, 419000 <_fini>
  40928c:	add	x3, x0, #0xed8
  409290:	mov	w2, #0x13f                 	// #319
  409294:	mov	w0, #0x0                   	// #0
  409298:	bl	405ba0 <log_oom_internal@plt>
  40929c:	mov	w20, w0
  4092a0:	mov	w19, #0x1                   	// #1
  4092a4:	b	4092cc <machine_load+0x4a4>
  4092a8:	ldr	x1, [sp, #288]
  4092ac:	ldr	x0, [sp, #304]
  4092b0:	add	x2, x0, #0x1
  4092b4:	str	x2, [sp, #304]
  4092b8:	lsl	x0, x0, #2
  4092bc:	add	x0, x1, x0
  4092c0:	ldr	w1, [sp, #188]
  4092c4:	str	w1, [x0]
  4092c8:	mov	w19, #0x3                   	// #3
  4092cc:	add	x0, sp, #0x128
  4092d0:	bl	407ce8 <freep>
  4092d4:	cmp	w19, #0x3
  4092d8:	b.eq	409320 <machine_load+0x4f8>  // b.none
  4092dc:	cmp	w19, #0x3
  4092e0:	b.gt	409144 <machine_load+0x31c>
  4092e4:	cmp	w19, #0x0
  4092e8:	b.eq	4092f8 <machine_load+0x4d0>  // b.none
  4092ec:	cmp	w19, #0x1
  4092f0:	b.eq	409328 <machine_load+0x500>  // b.none
  4092f4:	b	409320 <machine_load+0x4f8>
  4092f8:	ldr	x0, [sp, #168]
  4092fc:	ldr	x0, [x0, #120]
  409300:	bl	4059e0 <free@plt>
  409304:	ldr	x1, [sp, #288]
  409308:	ldr	x0, [sp, #168]
  40930c:	str	x1, [x0, #120]
  409310:	ldr	x0, [sp, #168]
  409314:	ldr	x1, [sp, #304]
  409318:	str	x1, [x0, #128]
  40931c:	b	409324 <machine_load+0x4fc>
  409320:	b	409144 <machine_load+0x31c>
  409324:	ldr	w20, [sp, #192]
  409328:	add	x0, sp, #0x108
  40932c:	bl	407ce8 <freep>
  409330:	add	x0, sp, #0x100
  409334:	bl	407ce8 <freep>
  409338:	add	x0, sp, #0xf8
  40933c:	bl	407ce8 <freep>
  409340:	add	x0, sp, #0xf0
  409344:	bl	407ce8 <freep>
  409348:	add	x0, sp, #0xe8
  40934c:	bl	407ce8 <freep>
  409350:	add	x0, sp, #0xe0
  409354:	bl	407ce8 <freep>
  409358:	mov	w1, w20
  40935c:	adrp	x0, 431000 <machine_vtable+0x4a0>
  409360:	ldr	x0, [x0, #3952]
  409364:	ldr	x2, [sp, #312]
  409368:	ldr	x0, [x0]
  40936c:	eor	x0, x2, x0
  409370:	cmp	x0, #0x0
  409374:	b.eq	40937c <machine_load+0x554>  // b.none
  409378:	bl	4055f0 <__stack_chk_fail@plt>
  40937c:	mov	w0, w1
  409380:	ldp	x19, x20, [sp, #144]
  409384:	ldp	x29, x30, [sp, #128]
  409388:	add	sp, sp, #0x140
  40938c:	ret

0000000000409390 <machine_start_scope>:
  409390:	stp	x29, x30, [sp, #-192]!
  409394:	mov	x29, sp
  409398:	str	x19, [sp, #16]
  40939c:	sub	sp, sp, #0x50
  4093a0:	str	x0, [x29, #56]
  4093a4:	str	x1, [x29, #48]
  4093a8:	str	x2, [x29, #40]
  4093ac:	adrp	x0, 431000 <machine_vtable+0x4a0>
  4093b0:	ldr	x0, [x0, #3952]
  4093b4:	ldr	x1, [x0]
  4093b8:	str	x1, [x29, #184]
  4093bc:	mov	x1, #0x0                   	// #0
  4093c0:	str	xzr, [x29, #72]
  4093c4:	str	xzr, [x29, #80]
  4093c8:	str	xzr, [x29, #88]
  4093cc:	str	xzr, [x29, #96]
  4093d0:	ldr	x0, [x29, #56]
  4093d4:	cmp	x0, #0x0
  4093d8:	cset	w0, eq  // eq = none
  4093dc:	and	w0, w0, #0xff
  4093e0:	and	x0, x0, #0xff
  4093e4:	cmp	x0, #0x0
  4093e8:	b.eq	409414 <machine_start_scope+0x84>  // b.none
  4093ec:	adrp	x0, 419000 <_fini>
  4093f0:	add	x1, x0, #0x7bb
  4093f4:	adrp	x0, 419000 <_fini>
  4093f8:	add	x4, x0, #0xee8
  4093fc:	mov	w3, #0x157                 	// #343
  409400:	mov	x2, x1
  409404:	adrp	x0, 419000 <_fini>
  409408:	add	x1, x0, #0xa80
  40940c:	mov	w0, #0x0                   	// #0
  409410:	bl	4052a0 <log_assert_failed_realm@plt>
  409414:	ldr	x0, [x29, #56]
  409418:	ldr	w0, [x0, #80]
  40941c:	cmp	w0, #0x0
  409420:	cset	w0, le
  409424:	and	w0, w0, #0xff
  409428:	and	x0, x0, #0xff
  40942c:	cmp	x0, #0x0
  409430:	b.eq	40945c <machine_start_scope+0xcc>  // b.none
  409434:	adrp	x0, 419000 <_fini>
  409438:	add	x1, x0, #0x7bb
  40943c:	adrp	x0, 419000 <_fini>
  409440:	add	x4, x0, #0xee8
  409444:	mov	w3, #0x158                 	// #344
  409448:	mov	x2, x1
  40944c:	adrp	x0, 419000 <_fini>
  409450:	add	x1, x0, #0xa88
  409454:	mov	w0, #0x0                   	// #0
  409458:	bl	4052a0 <log_assert_failed_realm@plt>
  40945c:	ldr	x0, [x29, #56]
  409460:	ldr	x0, [x0, #64]
  409464:	cmp	x0, #0x0
  409468:	cset	w0, ne  // ne = any
  40946c:	and	w0, w0, #0xff
  409470:	and	x0, x0, #0xff
  409474:	cmp	x0, #0x0
  409478:	b.eq	4094a4 <machine_start_scope+0x114>  // b.none
  40947c:	adrp	x0, 419000 <_fini>
  409480:	add	x1, x0, #0x7bb
  409484:	adrp	x0, 419000 <_fini>
  409488:	add	x4, x0, #0xee8
  40948c:	mov	w3, #0x159                 	// #345
  409490:	mov	x2, x1
  409494:	adrp	x0, 419000 <_fini>
  409498:	add	x1, x0, #0xaa0
  40949c:	mov	w0, #0x0                   	// #0
  4094a0:	bl	4052a0 <log_assert_failed_realm@plt>
  4094a4:	ldr	x0, [x29, #56]
  4094a8:	ldr	x0, [x0, #8]
  4094ac:	bl	404e10 <unit_name_escape@plt>
  4094b0:	str	x0, [x29, #88]
  4094b4:	ldr	x0, [x29, #88]
  4094b8:	cmp	x0, #0x0
  4094bc:	b.ne	4094e4 <machine_start_scope+0x154>  // b.any
  4094c0:	adrp	x0, 419000 <_fini>
  4094c4:	add	x1, x0, #0x7bb
  4094c8:	adrp	x0, 419000 <_fini>
  4094cc:	add	x3, x0, #0xf00
  4094d0:	mov	w2, #0x15d                 	// #349
  4094d4:	mov	w0, #0x0                   	// #0
  4094d8:	bl	405ba0 <log_oom_internal@plt>
  4094dc:	mov	w19, w0
  4094e0:	b	409a28 <machine_start_scope+0x698>
  4094e4:	ldr	x1, [x29, #88]
  4094e8:	mov	x3, #0x0                   	// #0
  4094ec:	adrp	x0, 419000 <_fini>
  4094f0:	add	x2, x0, #0xab0
  4094f4:	adrp	x0, 419000 <_fini>
  4094f8:	add	x0, x0, #0xab8
  4094fc:	bl	405230 <strjoin_real@plt>
  409500:	str	x0, [x29, #96]
  409504:	ldr	x0, [x29, #96]
  409508:	cmp	x0, #0x0
  40950c:	b.ne	409534 <machine_start_scope+0x1a4>  // b.any
  409510:	adrp	x0, 419000 <_fini>
  409514:	add	x1, x0, #0x7bb
  409518:	adrp	x0, 419000 <_fini>
  40951c:	add	x3, x0, #0xf00
  409520:	mov	w2, #0x161                 	// #353
  409524:	mov	w0, #0x0                   	// #0
  409528:	bl	405ba0 <log_oom_internal@plt>
  40952c:	mov	w19, w0
  409530:	b	409a28 <machine_start_scope+0x698>
  409534:	ldr	x0, [x29, #56]
  409538:	ldr	x0, [x0]
  40953c:	ldr	x6, [x0, #8]
  409540:	add	x1, x29, #0x48
  409544:	adrp	x0, 419000 <_fini>
  409548:	add	x5, x0, #0xac8
  40954c:	adrp	x0, 419000 <_fini>
  409550:	add	x4, x0, #0xae0
  409554:	adrp	x0, 419000 <_fini>
  409558:	add	x3, x0, #0xb08
  40955c:	adrp	x0, 419000 <_fini>
  409560:	add	x2, x0, #0xb28
  409564:	mov	x0, x6
  409568:	bl	404ea0 <sd_bus_message_new_method_call@plt>
  40956c:	str	w0, [x29, #68]
  409570:	ldr	w0, [x29, #68]
  409574:	cmp	w0, #0x0
  409578:	b.ge	409584 <machine_start_scope+0x1f4>  // b.tcont
  40957c:	ldr	w19, [x29, #68]
  409580:	b	409a28 <machine_start_scope+0x698>
  409584:	ldr	x4, [x29, #72]
  409588:	ldr	x1, [x29, #96]
  40958c:	adrp	x0, 419000 <_fini>
  409590:	add	x3, x0, #0xb48
  409594:	mov	x2, x1
  409598:	adrp	x0, 419000 <_fini>
  40959c:	add	x1, x0, #0xb50
  4095a0:	mov	x0, x4
  4095a4:	bl	4051f0 <sd_bus_message_append@plt>
  4095a8:	str	w0, [x29, #68]
  4095ac:	ldr	w0, [x29, #68]
  4095b0:	cmp	w0, #0x0
  4095b4:	b.ge	4095c0 <machine_start_scope+0x230>  // b.tcont
  4095b8:	ldr	w19, [x29, #68]
  4095bc:	b	409a28 <machine_start_scope+0x698>
  4095c0:	ldr	x3, [x29, #72]
  4095c4:	adrp	x0, 419000 <_fini>
  4095c8:	add	x2, x0, #0xb58
  4095cc:	mov	w1, #0x61                  	// #97
  4095d0:	mov	x0, x3
  4095d4:	bl	405140 <sd_bus_message_open_container@plt>
  4095d8:	str	w0, [x29, #68]
  4095dc:	ldr	w0, [x29, #68]
  4095e0:	cmp	w0, #0x0
  4095e4:	b.ge	4095f0 <machine_start_scope+0x260>  // b.tcont
  4095e8:	ldr	w19, [x29, #68]
  4095ec:	b	409a28 <machine_start_scope+0x698>
  4095f0:	ldr	x5, [x29, #72]
  4095f4:	adrp	x0, 419000 <_fini>
  4095f8:	add	x4, x0, #0xb60
  4095fc:	adrp	x0, 419000 <_fini>
  409600:	add	x3, x0, #0xb70
  409604:	adrp	x0, 419000 <_fini>
  409608:	add	x2, x0, #0xb78
  40960c:	adrp	x0, 419000 <_fini>
  409610:	add	x1, x0, #0xb58
  409614:	mov	x0, x5
  409618:	bl	4051f0 <sd_bus_message_append@plt>
  40961c:	str	w0, [x29, #68]
  409620:	ldr	w0, [x29, #68]
  409624:	cmp	w0, #0x0
  409628:	b.ge	409634 <machine_start_scope+0x2a4>  // b.tcont
  40962c:	ldr	w19, [x29, #68]
  409630:	b	409a28 <machine_start_scope+0x698>
  409634:	ldr	x0, [x29, #56]
  409638:	ldr	w0, [x0, #32]
  40963c:	cmp	w0, #0x1
  409640:	b.ne	409650 <machine_start_scope+0x2c0>  // b.any
  409644:	adrp	x0, 419000 <_fini>
  409648:	add	x0, x0, #0xb80
  40964c:	b	409658 <machine_start_scope+0x2c8>
  409650:	adrp	x0, 419000 <_fini>
  409654:	add	x0, x0, #0xb98
  409658:	str	x0, [x29, #168]
  40965c:	ldr	x0, [x29, #56]
  409660:	ldr	x0, [x0, #8]
  409664:	str	x0, [x29, #176]
  409668:	str	xzr, [x29, #120]
  40966c:	str	xzr, [x29, #128]
  409670:	b	4096a4 <machine_start_scope+0x314>
  409674:	ldr	x0, [x29, #128]
  409678:	lsl	x0, x0, #3
  40967c:	add	x1, x29, #0xa8
  409680:	ldr	x0, [x1, x0]
  409684:	bl	405b50 <strlen@plt>
  409688:	mov	x1, x0
  40968c:	ldr	x0, [x29, #120]
  409690:	add	x0, x0, x1
  409694:	str	x0, [x29, #120]
  409698:	ldr	x0, [x29, #128]
  40969c:	add	x0, x0, #0x1
  4096a0:	str	x0, [x29, #128]
  4096a4:	ldr	x0, [x29, #128]
  4096a8:	cmp	x0, #0x1
  4096ac:	b.hi	4096c8 <machine_start_scope+0x338>  // b.pmore
  4096b0:	ldr	x0, [x29, #128]
  4096b4:	lsl	x0, x0, #3
  4096b8:	add	x1, x29, #0xa8
  4096bc:	ldr	x0, [x1, x0]
  4096c0:	cmp	x0, #0x0
  4096c4:	b.ne	409674 <machine_start_scope+0x2e4>  // b.any
  4096c8:	ldr	x0, [x29, #120]
  4096cc:	add	x0, x0, #0x1
  4096d0:	str	x0, [x29, #136]
  4096d4:	ldr	x1, [x29, #136]
  4096d8:	mov	x0, #0x1                   	// #1
  4096dc:	bl	407d0c <size_multiply_overflow>
  4096e0:	and	w0, w0, #0xff
  4096e4:	and	x0, x0, #0xff
  4096e8:	cmp	x0, #0x0
  4096ec:	b.eq	409718 <machine_start_scope+0x388>  // b.none
  4096f0:	adrp	x0, 419000 <_fini>
  4096f4:	add	x1, x0, #0x7bb
  4096f8:	adrp	x0, 419000 <_fini>
  4096fc:	add	x4, x0, #0xee8
  409700:	mov	w3, #0x179                 	// #377
  409704:	mov	x2, x1
  409708:	adrp	x0, 419000 <_fini>
  40970c:	add	x1, x0, #0x968
  409710:	mov	w0, #0x0                   	// #0
  409714:	bl	4052a0 <log_assert_failed_realm@plt>
  409718:	ldr	x0, [x29, #136]
  40971c:	cmp	x0, #0x400, lsl #12
  409720:	cset	w0, hi  // hi = pmore
  409724:	and	w0, w0, #0xff
  409728:	and	x0, x0, #0xff
  40972c:	cmp	x0, #0x0
  409730:	b.eq	40975c <machine_start_scope+0x3cc>  // b.none
  409734:	adrp	x0, 419000 <_fini>
  409738:	add	x1, x0, #0x7bb
  40973c:	adrp	x0, 419000 <_fini>
  409740:	add	x4, x0, #0xee8
  409744:	mov	w3, #0x179                 	// #377
  409748:	mov	x2, x1
  40974c:	adrp	x0, 419000 <_fini>
  409750:	add	x1, x0, #0x998
  409754:	mov	w0, #0x0                   	// #0
  409758:	bl	4052a0 <log_assert_failed_realm@plt>
  40975c:	ldr	x0, [x29, #136]
  409760:	add	x0, x0, #0xf
  409764:	lsr	x0, x0, #4
  409768:	lsl	x0, x0, #4
  40976c:	sub	sp, sp, x0
  409770:	add	x0, sp, #0x50
  409774:	add	x0, x0, #0xf
  409778:	lsr	x0, x0, #4
  40977c:	lsl	x0, x0, #4
  409780:	str	x0, [x29, #144]
  409784:	ldr	x0, [x29, #144]
  409788:	str	x0, [x29, #112]
  40978c:	str	xzr, [x29, #128]
  409790:	b	4097c0 <machine_start_scope+0x430>
  409794:	ldr	x0, [x29, #128]
  409798:	lsl	x0, x0, #3
  40979c:	add	x1, x29, #0xa8
  4097a0:	ldr	x0, [x1, x0]
  4097a4:	mov	x1, x0
  4097a8:	ldr	x0, [x29, #112]
  4097ac:	bl	404f50 <stpcpy@plt>
  4097b0:	str	x0, [x29, #112]
  4097b4:	ldr	x0, [x29, #128]
  4097b8:	add	x0, x0, #0x1
  4097bc:	str	x0, [x29, #128]
  4097c0:	ldr	x0, [x29, #128]
  4097c4:	cmp	x0, #0x1
  4097c8:	b.hi	4097e4 <machine_start_scope+0x454>  // b.pmore
  4097cc:	ldr	x0, [x29, #128]
  4097d0:	lsl	x0, x0, #3
  4097d4:	add	x1, x29, #0xa8
  4097d8:	ldr	x0, [x1, x0]
  4097dc:	cmp	x0, #0x0
  4097e0:	b.ne	409794 <machine_start_scope+0x404>  // b.any
  4097e4:	ldr	x0, [x29, #112]
  4097e8:	strb	wzr, [x0]
  4097ec:	ldr	x0, [x29, #144]
  4097f0:	str	x0, [x29, #152]
  4097f4:	ldr	x5, [x29, #72]
  4097f8:	ldr	x4, [x29, #152]
  4097fc:	adrp	x0, 419000 <_fini>
  409800:	add	x3, x0, #0xb70
  409804:	adrp	x0, 419000 <_fini>
  409808:	add	x2, x0, #0xba8
  40980c:	adrp	x0, 419000 <_fini>
  409810:	add	x1, x0, #0xb58
  409814:	mov	x0, x5
  409818:	bl	4051f0 <sd_bus_message_append@plt>
  40981c:	str	w0, [x29, #68]
  409820:	ldr	w0, [x29, #68]
  409824:	cmp	w0, #0x0
  409828:	b.ge	409834 <machine_start_scope+0x4a4>  // b.tcont
  40982c:	ldr	w19, [x29, #68]
  409830:	b	409a28 <machine_start_scope+0x698>
  409834:	ldr	x8, [x29, #72]
  409838:	ldr	x0, [x29, #56]
  40983c:	ldr	w1, [x0, #80]
  409840:	mov	x0, #0x4000                	// #16384
  409844:	str	x0, [sp, #72]
  409848:	adrp	x0, 419000 <_fini>
  40984c:	add	x0, x0, #0xbf8
  409850:	str	x0, [sp, #64]
  409854:	adrp	x0, 419000 <_fini>
  409858:	add	x0, x0, #0xc00
  40985c:	str	x0, [sp, #56]
  409860:	mov	w0, #0x1                   	// #1
  409864:	str	w0, [sp, #48]
  409868:	adrp	x0, 419000 <_fini>
  40986c:	add	x0, x0, #0xbb8
  409870:	str	x0, [sp, #40]
  409874:	adrp	x0, 419000 <_fini>
  409878:	add	x0, x0, #0xc10
  40987c:	str	x0, [sp, #32]
  409880:	adrp	x0, 419000 <_fini>
  409884:	add	x0, x0, #0xc18
  409888:	str	x0, [sp, #24]
  40988c:	adrp	x0, 419000 <_fini>
  409890:	add	x0, x0, #0xb70
  409894:	str	x0, [sp, #16]
  409898:	adrp	x0, 419000 <_fini>
  40989c:	add	x0, x0, #0xc30
  4098a0:	str	x0, [sp, #8]
  4098a4:	mov	w0, #0x1                   	// #1
  4098a8:	str	w0, [sp]
  4098ac:	adrp	x0, 419000 <_fini>
  4098b0:	add	x7, x0, #0xbb8
  4098b4:	adrp	x0, 419000 <_fini>
  4098b8:	add	x6, x0, #0xbc0
  4098bc:	mov	w5, w1
  4098c0:	mov	w4, #0x1                   	// #1
  4098c4:	adrp	x0, 419000 <_fini>
  4098c8:	add	x3, x0, #0xbd0
  4098cc:	adrp	x0, 419000 <_fini>
  4098d0:	add	x2, x0, #0xbd8
  4098d4:	adrp	x0, 419000 <_fini>
  4098d8:	add	x1, x0, #0xbe0
  4098dc:	mov	x0, x8
  4098e0:	bl	4051f0 <sd_bus_message_append@plt>
  4098e4:	str	w0, [x29, #68]
  4098e8:	ldr	w0, [x29, #68]
  4098ec:	cmp	w0, #0x0
  4098f0:	b.ge	4098fc <machine_start_scope+0x56c>  // b.tcont
  4098f4:	ldr	w19, [x29, #68]
  4098f8:	b	409a28 <machine_start_scope+0x698>
  4098fc:	ldr	x0, [x29, #48]
  409900:	cmp	x0, #0x0
  409904:	b.eq	409930 <machine_start_scope+0x5a0>  // b.none
  409908:	ldr	x0, [x29, #72]
  40990c:	mov	w2, #0x1                   	// #1
  409910:	ldr	x1, [x29, #48]
  409914:	bl	405660 <sd_bus_message_copy@plt>
  409918:	str	w0, [x29, #68]
  40991c:	ldr	w0, [x29, #68]
  409920:	cmp	w0, #0x0
  409924:	b.ge	409930 <machine_start_scope+0x5a0>  // b.tcont
  409928:	ldr	w19, [x29, #68]
  40992c:	b	409a28 <machine_start_scope+0x698>
  409930:	ldr	x0, [x29, #72]
  409934:	bl	405c30 <sd_bus_message_close_container@plt>
  409938:	str	w0, [x29, #68]
  40993c:	ldr	w0, [x29, #68]
  409940:	cmp	w0, #0x0
  409944:	b.ge	409950 <machine_start_scope+0x5c0>  // b.tcont
  409948:	ldr	w19, [x29, #68]
  40994c:	b	409a28 <machine_start_scope+0x698>
  409950:	ldr	x3, [x29, #72]
  409954:	mov	w2, #0x0                   	// #0
  409958:	adrp	x0, 419000 <_fini>
  40995c:	add	x1, x0, #0xc40
  409960:	mov	x0, x3
  409964:	bl	4051f0 <sd_bus_message_append@plt>
  409968:	str	w0, [x29, #68]
  40996c:	ldr	w0, [x29, #68]
  409970:	cmp	w0, #0x0
  409974:	b.ge	409980 <machine_start_scope+0x5f0>  // b.tcont
  409978:	ldr	w19, [x29, #68]
  40997c:	b	409a28 <machine_start_scope+0x698>
  409980:	ldr	x0, [x29, #72]
  409984:	add	x1, x29, #0x50
  409988:	mov	x4, x1
  40998c:	ldr	x3, [x29, #40]
  409990:	mov	x2, #0x0                   	// #0
  409994:	mov	x1, x0
  409998:	mov	x0, #0x0                   	// #0
  40999c:	bl	4056d0 <sd_bus_call@plt>
  4099a0:	str	w0, [x29, #68]
  4099a4:	ldr	w0, [x29, #68]
  4099a8:	cmp	w0, #0x0
  4099ac:	b.ge	4099b8 <machine_start_scope+0x628>  // b.tcont
  4099b0:	ldr	w19, [x29, #68]
  4099b4:	b	409a28 <machine_start_scope+0x698>
  4099b8:	ldr	x0, [x29, #96]
  4099bc:	str	x0, [x29, #160]
  4099c0:	str	xzr, [x29, #96]
  4099c4:	ldr	x1, [x29, #160]
  4099c8:	ldr	x0, [x29, #56]
  4099cc:	str	x1, [x0, #64]
  4099d0:	ldr	x0, [x29, #56]
  4099d4:	ldrb	w1, [x0, #104]
  4099d8:	orr	w1, w1, #0x8
  4099dc:	strb	w1, [x0, #104]
  4099e0:	ldr	x3, [x29, #80]
  4099e4:	add	x0, x29, #0x68
  4099e8:	mov	x2, x0
  4099ec:	adrp	x0, 419000 <_fini>
  4099f0:	add	x1, x0, #0xc50
  4099f4:	mov	x0, x3
  4099f8:	bl	4052b0 <sd_bus_message_read@plt>
  4099fc:	str	w0, [x29, #68]
  409a00:	ldr	w0, [x29, #68]
  409a04:	cmp	w0, #0x0
  409a08:	b.ge	409a14 <machine_start_scope+0x684>  // b.tcont
  409a0c:	ldr	w19, [x29, #68]
  409a10:	b	409a28 <machine_start_scope+0x698>
  409a14:	ldr	x0, [x29, #56]
  409a18:	add	x0, x0, #0x48
  409a1c:	ldr	x1, [x29, #104]
  409a20:	bl	4050e0 <free_and_strdup@plt>
  409a24:	mov	w19, w0
  409a28:	add	x0, x29, #0x60
  409a2c:	bl	407ce8 <freep>
  409a30:	add	x0, x29, #0x58
  409a34:	bl	407ce8 <freep>
  409a38:	add	x0, x29, #0x50
  409a3c:	bl	407d88 <sd_bus_message_unrefp>
  409a40:	add	x0, x29, #0x48
  409a44:	bl	407d88 <sd_bus_message_unrefp>
  409a48:	mov	w1, w19
  409a4c:	adrp	x0, 431000 <machine_vtable+0x4a0>
  409a50:	ldr	x0, [x0, #3952]
  409a54:	ldr	x2, [x29, #184]
  409a58:	ldr	x0, [x0]
  409a5c:	eor	x0, x2, x0
  409a60:	cmp	x0, #0x0
  409a64:	b.eq	409a6c <machine_start_scope+0x6dc>  // b.none
  409a68:	bl	4055f0 <__stack_chk_fail@plt>
  409a6c:	mov	w0, w1
  409a70:	mov	sp, x29
  409a74:	ldr	x19, [sp, #16]
  409a78:	ldp	x29, x30, [sp], #192
  409a7c:	ret

0000000000409a80 <machine_ensure_scope>:
  409a80:	stp	x29, x30, [sp, #-80]!
  409a84:	mov	x29, sp
  409a88:	stp	x19, x20, [sp, #16]
  409a8c:	str	x0, [sp, #56]
  409a90:	str	x1, [sp, #48]
  409a94:	str	x2, [sp, #40]
  409a98:	ldr	x0, [sp, #56]
  409a9c:	cmp	x0, #0x0
  409aa0:	cset	w0, eq  // eq = none
  409aa4:	and	w0, w0, #0xff
  409aa8:	and	x0, x0, #0xff
  409aac:	cmp	x0, #0x0
  409ab0:	b.eq	409adc <machine_ensure_scope+0x5c>  // b.none
  409ab4:	adrp	x0, 419000 <_fini>
  409ab8:	add	x1, x0, #0x7bb
  409abc:	adrp	x0, 419000 <_fini>
  409ac0:	add	x4, x0, #0xf18
  409ac4:	mov	w3, #0x1a7                 	// #423
  409ac8:	mov	x2, x1
  409acc:	adrp	x0, 419000 <_fini>
  409ad0:	add	x1, x0, #0x838
  409ad4:	mov	w0, #0x0                   	// #0
  409ad8:	bl	4052a0 <log_assert_failed_realm@plt>
  409adc:	ldr	x0, [sp, #56]
  409ae0:	ldr	w0, [x0, #32]
  409ae4:	cmp	w0, #0x2
  409ae8:	cset	w0, eq  // eq = none
  409aec:	and	w0, w0, #0xff
  409af0:	and	x0, x0, #0xff
  409af4:	cmp	x0, #0x0
  409af8:	b.eq	409b24 <machine_ensure_scope+0xa4>  // b.none
  409afc:	adrp	x0, 419000 <_fini>
  409b00:	add	x1, x0, #0x7bb
  409b04:	adrp	x0, 419000 <_fini>
  409b08:	add	x4, x0, #0xf18
  409b0c:	mov	w3, #0x1a8                 	// #424
  409b10:	mov	x2, x1
  409b14:	adrp	x0, 419000 <_fini>
  409b18:	add	x1, x0, #0xc58
  409b1c:	mov	w0, #0x0                   	// #0
  409b20:	bl	4052a0 <log_assert_failed_realm@plt>
  409b24:	ldr	x0, [sp, #56]
  409b28:	ldr	x0, [x0, #64]
  409b2c:	cmp	x0, #0x0
  409b30:	b.ne	409bec <machine_ensure_scope+0x16c>  // b.any
  409b34:	ldr	x2, [sp, #40]
  409b38:	ldr	x1, [sp, #48]
  409b3c:	ldr	x0, [sp, #56]
  409b40:	bl	409390 <machine_start_scope>
  409b44:	str	w0, [sp, #64]
  409b48:	ldr	w0, [sp, #64]
  409b4c:	cmp	w0, #0x0
  409b50:	b.ge	409bec <machine_ensure_scope+0x16c>  // b.tcont
  409b54:	mov	w0, #0x3                   	// #3
  409b58:	str	w0, [sp, #68]
  409b5c:	ldr	w0, [sp, #64]
  409b60:	str	w0, [sp, #72]
  409b64:	str	wzr, [sp, #76]
  409b68:	ldr	w0, [sp, #76]
  409b6c:	bl	405c20 <log_get_max_level_realm@plt>
  409b70:	mov	w1, w0
  409b74:	ldr	w0, [sp, #68]
  409b78:	and	w0, w0, #0x7
  409b7c:	cmp	w1, w0
  409b80:	b.lt	409bd4 <machine_ensure_scope+0x154>  // b.tstop
  409b84:	ldr	w0, [sp, #76]
  409b88:	lsl	w1, w0, #10
  409b8c:	ldr	w0, [sp, #68]
  409b90:	orr	w19, w1, w0
  409b94:	adrp	x0, 419000 <_fini>
  409b98:	add	x20, x0, #0x7bb
  409b9c:	ldr	w1, [sp, #64]
  409ba0:	ldr	x0, [sp, #40]
  409ba4:	bl	404e70 <bus_error_message@plt>
  409ba8:	mov	x6, x0
  409bac:	adrp	x0, 419000 <_fini>
  409bb0:	add	x5, x0, #0xc78
  409bb4:	adrp	x0, 419000 <_fini>
  409bb8:	add	x4, x0, #0xf30
  409bbc:	mov	w3, #0x1ad                 	// #429
  409bc0:	mov	x2, x20
  409bc4:	ldr	w1, [sp, #72]
  409bc8:	mov	w0, w19
  409bcc:	bl	405750 <log_internal_realm@plt>
  409bd0:	b	409c5c <machine_ensure_scope+0x1dc>
  409bd4:	ldr	w0, [sp, #72]
  409bd8:	cmp	w0, #0x0
  409bdc:	cneg	w0, w0, lt  // lt = tstop
  409be0:	and	w0, w0, #0xff
  409be4:	neg	w0, w0
  409be8:	b	409c5c <machine_ensure_scope+0x1dc>
  409bec:	ldr	x0, [sp, #56]
  409bf0:	ldr	x0, [x0, #64]
  409bf4:	cmp	x0, #0x0
  409bf8:	cset	w0, eq  // eq = none
  409bfc:	and	w0, w0, #0xff
  409c00:	and	x0, x0, #0xff
  409c04:	cmp	x0, #0x0
  409c08:	b.eq	409c34 <machine_ensure_scope+0x1b4>  // b.none
  409c0c:	adrp	x0, 419000 <_fini>
  409c10:	add	x1, x0, #0x7bb
  409c14:	adrp	x0, 419000 <_fini>
  409c18:	add	x4, x0, #0xf18
  409c1c:	mov	w3, #0x1b0                 	// #432
  409c20:	mov	x2, x1
  409c24:	adrp	x0, 419000 <_fini>
  409c28:	add	x1, x0, #0xca0
  409c2c:	mov	w0, #0x0                   	// #0
  409c30:	bl	4052a0 <log_assert_failed_realm@plt>
  409c34:	ldr	x0, [sp, #56]
  409c38:	ldr	x0, [x0]
  409c3c:	ldr	x3, [x0, #24]
  409c40:	ldr	x0, [sp, #56]
  409c44:	ldr	x0, [x0, #64]
  409c48:	ldr	x2, [sp, #56]
  409c4c:	mov	x1, x0
  409c50:	mov	x0, x3
  409c54:	bl	4057c0 <hashmap_put@plt>
  409c58:	mov	w0, #0x0                   	// #0
  409c5c:	ldp	x19, x20, [sp, #16]
  409c60:	ldp	x29, x30, [sp], #80
  409c64:	ret

0000000000409c68 <machine_start>:
  409c68:	sub	sp, sp, #0x80
  409c6c:	stp	x29, x30, [sp, #48]
  409c70:	add	x29, sp, #0x30
  409c74:	str	x19, [sp, #64]
  409c78:	str	x0, [sp, #104]
  409c7c:	str	x1, [sp, #96]
  409c80:	str	x2, [sp, #88]
  409c84:	ldr	x0, [sp, #104]
  409c88:	cmp	x0, #0x0
  409c8c:	cset	w0, eq  // eq = none
  409c90:	and	w0, w0, #0xff
  409c94:	and	x0, x0, #0xff
  409c98:	cmp	x0, #0x0
  409c9c:	b.eq	409cc8 <machine_start+0x60>  // b.none
  409ca0:	adrp	x0, 419000 <_fini>
  409ca4:	add	x1, x0, #0x7bb
  409ca8:	adrp	x0, 419000 <_fini>
  409cac:	add	x4, x0, #0xf48
  409cb0:	mov	w3, #0x1b9                 	// #441
  409cb4:	mov	x2, x1
  409cb8:	adrp	x0, 419000 <_fini>
  409cbc:	add	x1, x0, #0x838
  409cc0:	mov	w0, #0x0                   	// #0
  409cc4:	bl	4052a0 <log_assert_failed_realm@plt>
  409cc8:	strb	wzr, [sp, #123]
  409ccc:	ldr	x0, [sp, #104]
  409cd0:	ldr	w0, [x0, #32]
  409cd4:	cmp	w0, #0x1
  409cd8:	b.hi	409ce4 <machine_start+0x7c>  // b.pmore
  409cdc:	mov	w0, #0x1                   	// #1
  409ce0:	strb	w0, [sp, #123]
  409ce4:	nop
  409ce8:	ldrb	w0, [sp, #123]
  409cec:	eor	w0, w0, #0x1
  409cf0:	and	w0, w0, #0xff
  409cf4:	cmp	w0, #0x0
  409cf8:	b.eq	409d04 <machine_start+0x9c>  // b.none
  409cfc:	mov	w0, #0xffffffa1            	// #-95
  409d00:	b	409e5c <machine_start+0x1f4>
  409d04:	ldr	x0, [sp, #104]
  409d08:	ldrb	w0, [x0, #104]
  409d0c:	and	w0, w0, #0x2
  409d10:	and	w0, w0, #0xff
  409d14:	cmp	w0, #0x0
  409d18:	b.eq	409d24 <machine_start+0xbc>  // b.none
  409d1c:	mov	w0, #0x0                   	// #0
  409d20:	b	409e5c <machine_start+0x1f4>
  409d24:	ldr	x0, [sp, #104]
  409d28:	ldr	x0, [x0]
  409d2c:	ldr	x19, [x0, #32]
  409d30:	ldr	x0, [sp, #104]
  409d34:	ldr	w0, [x0, #80]
  409d38:	bl	407f08 <PID_TO_PTR>
  409d3c:	ldr	x2, [sp, #104]
  409d40:	mov	x1, x0
  409d44:	mov	x0, x19
  409d48:	bl	4057c0 <hashmap_put@plt>
  409d4c:	str	w0, [sp, #124]
  409d50:	ldr	w0, [sp, #124]
  409d54:	cmp	w0, #0x0
  409d58:	b.ge	409d64 <machine_start+0xfc>  // b.tcont
  409d5c:	ldr	w0, [sp, #124]
  409d60:	b	409e5c <machine_start+0x1f4>
  409d64:	ldr	x2, [sp, #88]
  409d68:	ldr	x1, [sp, #96]
  409d6c:	ldr	x0, [sp, #104]
  409d70:	bl	409a80 <machine_ensure_scope>
  409d74:	str	w0, [sp, #124]
  409d78:	ldr	w0, [sp, #124]
  409d7c:	cmp	w0, #0x0
  409d80:	b.ge	409d8c <machine_start+0x124>  // b.tcont
  409d84:	ldr	w0, [sp, #124]
  409d88:	b	409e5c <machine_start+0x1f4>
  409d8c:	adrp	x0, 419000 <_fini>
  409d90:	add	x2, x0, #0x7bb
  409d94:	ldr	x0, [sp, #104]
  409d98:	ldr	x3, [x0, #8]
  409d9c:	ldr	x0, [sp, #104]
  409da0:	ldr	w0, [x0, #80]
  409da4:	ldr	x1, [sp, #104]
  409da8:	ldr	x1, [x1, #8]
  409dac:	str	xzr, [sp, #32]
  409db0:	str	x1, [sp, #24]
  409db4:	adrp	x1, 419000 <_fini>
  409db8:	add	x1, x1, #0xce0
  409dbc:	str	x1, [sp, #16]
  409dc0:	str	w0, [sp, #8]
  409dc4:	adrp	x0, 419000 <_fini>
  409dc8:	add	x0, x0, #0xcf8
  409dcc:	str	x0, [sp]
  409dd0:	mov	x7, x3
  409dd4:	adrp	x0, 419000 <_fini>
  409dd8:	add	x6, x0, #0xca8
  409ddc:	adrp	x0, 419000 <_fini>
  409de0:	add	x5, x0, #0xcb0
  409de4:	adrp	x0, 419000 <_fini>
  409de8:	add	x4, x0, #0xf58
  409dec:	mov	w3, #0x1ca                 	// #458
  409df0:	mov	w1, #0x0                   	// #0
  409df4:	mov	w0, #0x6                   	// #6
  409df8:	bl	405710 <log_struct_internal@plt>
  409dfc:	ldr	x0, [sp, #104]
  409e00:	add	x0, x0, #0x58
  409e04:	bl	407e48 <dual_timestamp_is_set>
  409e08:	and	w0, w0, #0xff
  409e0c:	eor	w0, w0, #0x1
  409e10:	and	w0, w0, #0xff
  409e14:	cmp	w0, #0x0
  409e18:	b.eq	409e28 <machine_start+0x1c0>  // b.none
  409e1c:	ldr	x0, [sp, #104]
  409e20:	add	x0, x0, #0x58
  409e24:	bl	404ec0 <dual_timestamp_get@plt>
  409e28:	ldr	x0, [sp, #104]
  409e2c:	ldrb	w1, [x0, #104]
  409e30:	orr	w1, w1, #0x2
  409e34:	strb	w1, [x0, #104]
  409e38:	ldr	x0, [sp, #104]
  409e3c:	bl	40836c <machine_save>
  409e40:	mov	w1, #0x1                   	// #1
  409e44:	ldr	x0, [sp, #104]
  409e48:	bl	4167f8 <machine_send_signal>
  409e4c:	ldr	x0, [sp, #104]
  409e50:	ldr	x0, [x0]
  409e54:	bl	41071c <manager_enqueue_nscd_cache_flush>
  409e58:	mov	w0, #0x0                   	// #0
  409e5c:	ldr	x19, [sp, #64]
  409e60:	ldp	x29, x30, [sp, #48]
  409e64:	add	sp, sp, #0x80
  409e68:	ret

0000000000409e6c <machine_stop>:
  409e6c:	stp	x29, x30, [sp, #-112]!
  409e70:	mov	x29, sp
  409e74:	stp	x19, x20, [sp, #16]
  409e78:	str	x0, [sp, #40]
  409e7c:	adrp	x0, 431000 <machine_vtable+0x4a0>
  409e80:	ldr	x0, [x0, #3952]
  409e84:	ldr	x1, [x0]
  409e88:	str	x1, [sp, #104]
  409e8c:	mov	x1, #0x0                   	// #0
  409e90:	ldr	x0, [sp, #40]
  409e94:	cmp	x0, #0x0
  409e98:	cset	w0, eq  // eq = none
  409e9c:	and	w0, w0, #0xff
  409ea0:	and	x0, x0, #0xff
  409ea4:	cmp	x0, #0x0
  409ea8:	b.eq	409ed4 <machine_stop+0x68>  // b.none
  409eac:	adrp	x0, 419000 <_fini>
  409eb0:	add	x1, x0, #0x7bb
  409eb4:	adrp	x0, 419000 <_fini>
  409eb8:	add	x4, x0, #0xf68
  409ebc:	mov	w3, #0x1e1                 	// #481
  409ec0:	mov	x2, x1
  409ec4:	adrp	x0, 419000 <_fini>
  409ec8:	add	x1, x0, #0x838
  409ecc:	mov	w0, #0x0                   	// #0
  409ed0:	bl	4052a0 <log_assert_failed_realm@plt>
  409ed4:	strb	wzr, [sp, #55]
  409ed8:	ldr	x0, [sp, #40]
  409edc:	ldr	w0, [x0, #32]
  409ee0:	cmp	w0, #0x1
  409ee4:	b.hi	409ef0 <machine_stop+0x84>  // b.pmore
  409ee8:	mov	w0, #0x1                   	// #1
  409eec:	strb	w0, [sp, #55]
  409ef0:	nop
  409ef4:	ldrb	w0, [sp, #55]
  409ef8:	eor	w0, w0, #0x1
  409efc:	and	w0, w0, #0xff
  409f00:	cmp	w0, #0x0
  409f04:	b.eq	409f10 <machine_stop+0xa4>  // b.none
  409f08:	mov	w19, #0xffffffa1            	// #-95
  409f0c:	b	40a064 <machine_stop+0x1f8>
  409f10:	ldr	x0, [sp, #40]
  409f14:	ldr	x0, [x0, #64]
  409f18:	cmp	x0, #0x0
  409f1c:	b.eq	40a03c <machine_stop+0x1d0>  // b.none
  409f20:	str	xzr, [sp, #80]
  409f24:	str	xzr, [sp, #88]
  409f28:	str	wzr, [sp, #96]
  409f2c:	str	xzr, [sp, #72]
  409f30:	ldr	x0, [sp, #40]
  409f34:	ldr	x4, [x0]
  409f38:	ldr	x0, [sp, #40]
  409f3c:	ldr	x0, [x0, #64]
  409f40:	add	x2, sp, #0x48
  409f44:	add	x1, sp, #0x50
  409f48:	mov	x3, x2
  409f4c:	mov	x2, x1
  409f50:	mov	x1, x0
  409f54:	mov	x0, x4
  409f58:	bl	40fc58 <manager_stop_unit>
  409f5c:	str	w0, [sp, #56]
  409f60:	ldr	w0, [sp, #56]
  409f64:	cmp	w0, #0x0
  409f68:	b.ge	40a00c <machine_stop+0x1a0>  // b.tcont
  409f6c:	mov	w0, #0x3                   	// #3
  409f70:	str	w0, [sp, #60]
  409f74:	ldr	w0, [sp, #56]
  409f78:	str	w0, [sp, #64]
  409f7c:	str	wzr, [sp, #68]
  409f80:	ldr	w0, [sp, #68]
  409f84:	bl	405c20 <log_get_max_level_realm@plt>
  409f88:	mov	w1, w0
  409f8c:	ldr	w0, [sp, #60]
  409f90:	and	w0, w0, #0x7
  409f94:	cmp	w1, w0
  409f98:	b.lt	409ff0 <machine_stop+0x184>  // b.tstop
  409f9c:	ldr	w0, [sp, #68]
  409fa0:	lsl	w1, w0, #10
  409fa4:	ldr	w0, [sp, #60]
  409fa8:	orr	w19, w1, w0
  409fac:	adrp	x0, 419000 <_fini>
  409fb0:	add	x20, x0, #0x7bb
  409fb4:	add	x0, sp, #0x50
  409fb8:	ldr	w1, [sp, #56]
  409fbc:	bl	404e70 <bus_error_message@plt>
  409fc0:	mov	x6, x0
  409fc4:	adrp	x0, 419000 <_fini>
  409fc8:	add	x5, x0, #0xd08
  409fcc:	adrp	x0, 419000 <_fini>
  409fd0:	add	x4, x0, #0xf78
  409fd4:	mov	w3, #0x1ec                 	// #492
  409fd8:	mov	x2, x20
  409fdc:	ldr	w1, [sp, #64]
  409fe0:	mov	w0, w19
  409fe4:	bl	405750 <log_internal_realm@plt>
  409fe8:	mov	w19, w0
  409fec:	b	40a004 <machine_stop+0x198>
  409ff0:	ldr	w0, [sp, #64]
  409ff4:	cmp	w0, #0x0
  409ff8:	cneg	w0, w0, lt  // lt = tstop
  409ffc:	and	w0, w0, #0xff
  40a000:	neg	w19, w0
  40a004:	mov	w20, #0x0                   	// #0
  40a008:	b	40a02c <machine_stop+0x1c0>
  40a00c:	ldr	x0, [sp, #40]
  40a010:	ldr	x0, [x0, #72]
  40a014:	bl	4059e0 <free@plt>
  40a018:	ldr	x1, [sp, #72]
  40a01c:	ldr	x0, [sp, #40]
  40a020:	str	x1, [x0, #72]
  40a024:	str	xzr, [sp, #72]
  40a028:	mov	w20, #0x1                   	// #1
  40a02c:	add	x0, sp, #0x50
  40a030:	bl	4056c0 <sd_bus_error_free@plt>
  40a034:	cmp	w20, #0x1
  40a038:	b.ne	40a064 <machine_stop+0x1f8>  // b.any
  40a03c:	ldr	x0, [sp, #40]
  40a040:	ldrb	w1, [x0, #104]
  40a044:	orr	w1, w1, #0x4
  40a048:	strb	w1, [x0, #104]
  40a04c:	ldr	x0, [sp, #40]
  40a050:	bl	40836c <machine_save>
  40a054:	ldr	x0, [sp, #40]
  40a058:	ldr	x0, [x0]
  40a05c:	bl	41071c <manager_enqueue_nscd_cache_flush>
  40a060:	mov	w19, #0x0                   	// #0
  40a064:	mov	w1, w19
  40a068:	adrp	x0, 431000 <machine_vtable+0x4a0>
  40a06c:	ldr	x0, [x0, #3952]
  40a070:	ldr	x2, [sp, #104]
  40a074:	ldr	x0, [x0]
  40a078:	eor	x0, x2, x0
  40a07c:	cmp	x0, #0x0
  40a080:	b.eq	40a088 <machine_stop+0x21c>  // b.none
  40a084:	bl	4055f0 <__stack_chk_fail@plt>
  40a088:	mov	w0, w1
  40a08c:	ldp	x19, x20, [sp, #16]
  40a090:	ldp	x29, x30, [sp], #112
  40a094:	ret

000000000040a098 <machine_finalize>:
  40a098:	sub	sp, sp, #0x50
  40a09c:	stp	x29, x30, [sp, #48]
  40a0a0:	add	x29, sp, #0x30
  40a0a4:	str	x0, [sp, #72]
  40a0a8:	ldr	x0, [sp, #72]
  40a0ac:	cmp	x0, #0x0
  40a0b0:	cset	w0, eq  // eq = none
  40a0b4:	and	w0, w0, #0xff
  40a0b8:	and	x0, x0, #0xff
  40a0bc:	cmp	x0, #0x0
  40a0c0:	b.eq	40a0ec <machine_finalize+0x54>  // b.none
  40a0c4:	adrp	x0, 419000 <_fini>
  40a0c8:	add	x1, x0, #0x7bb
  40a0cc:	adrp	x0, 419000 <_fini>
  40a0d0:	add	x4, x0, #0xf88
  40a0d4:	mov	w3, #0x1fa                 	// #506
  40a0d8:	mov	x2, x1
  40a0dc:	adrp	x0, 419000 <_fini>
  40a0e0:	add	x1, x0, #0x838
  40a0e4:	mov	w0, #0x0                   	// #0
  40a0e8:	bl	4052a0 <log_assert_failed_realm@plt>
  40a0ec:	ldr	x0, [sp, #72]
  40a0f0:	ldrb	w0, [x0, #104]
  40a0f4:	and	w0, w0, #0x2
  40a0f8:	and	w0, w0, #0xff
  40a0fc:	cmp	w0, #0x0
  40a100:	b.eq	40a184 <machine_finalize+0xec>  // b.none
  40a104:	adrp	x0, 419000 <_fini>
  40a108:	add	x2, x0, #0x7bb
  40a10c:	ldr	x0, [sp, #72]
  40a110:	ldr	x3, [x0, #8]
  40a114:	ldr	x0, [sp, #72]
  40a118:	ldr	w0, [x0, #80]
  40a11c:	ldr	x1, [sp, #72]
  40a120:	ldr	x1, [x1, #8]
  40a124:	str	xzr, [sp, #32]
  40a128:	str	x1, [sp, #24]
  40a12c:	adrp	x1, 419000 <_fini>
  40a130:	add	x1, x1, #0xd60
  40a134:	str	x1, [sp, #16]
  40a138:	str	w0, [sp, #8]
  40a13c:	adrp	x0, 419000 <_fini>
  40a140:	add	x0, x0, #0xcf8
  40a144:	str	x0, [sp]
  40a148:	mov	x7, x3
  40a14c:	adrp	x0, 419000 <_fini>
  40a150:	add	x6, x0, #0xca8
  40a154:	adrp	x0, 419000 <_fini>
  40a158:	add	x5, x0, #0xd30
  40a15c:	adrp	x0, 419000 <_fini>
  40a160:	add	x4, x0, #0xfa0
  40a164:	mov	w3, #0x1fd                 	// #509
  40a168:	mov	w1, #0x0                   	// #0
  40a16c:	mov	w0, #0x6                   	// #6
  40a170:	bl	405710 <log_struct_internal@plt>
  40a174:	ldr	x0, [sp, #72]
  40a178:	ldrb	w1, [x0, #104]
  40a17c:	orr	w1, w1, #0x4
  40a180:	strb	w1, [x0, #104]
  40a184:	ldr	x0, [sp, #72]
  40a188:	bl	408bbc <machine_unlink>
  40a18c:	ldr	x0, [sp, #72]
  40a190:	bl	40a2fc <machine_add_to_gc_queue>
  40a194:	ldr	x0, [sp, #72]
  40a198:	ldrb	w0, [x0, #104]
  40a19c:	and	w0, w0, #0x2
  40a1a0:	and	w0, w0, #0xff
  40a1a4:	cmp	w0, #0x0
  40a1a8:	b.eq	40a1c8 <machine_finalize+0x130>  // b.none
  40a1ac:	mov	w1, #0x0                   	// #0
  40a1b0:	ldr	x0, [sp, #72]
  40a1b4:	bl	4167f8 <machine_send_signal>
  40a1b8:	ldr	x0, [sp, #72]
  40a1bc:	ldrb	w1, [x0, #104]
  40a1c0:	and	w1, w1, #0xfffffffd
  40a1c4:	strb	w1, [x0, #104]
  40a1c8:	mov	w0, #0x0                   	// #0
  40a1cc:	ldp	x29, x30, [sp, #48]
  40a1d0:	add	sp, sp, #0x50
  40a1d4:	ret

000000000040a1d8 <machine_may_gc>:
  40a1d8:	stp	x29, x30, [sp, #-32]!
  40a1dc:	mov	x29, sp
  40a1e0:	str	x0, [sp, #24]
  40a1e4:	strb	w1, [sp, #23]
  40a1e8:	ldr	x0, [sp, #24]
  40a1ec:	cmp	x0, #0x0
  40a1f0:	cset	w0, eq  // eq = none
  40a1f4:	and	w0, w0, #0xff
  40a1f8:	and	x0, x0, #0xff
  40a1fc:	cmp	x0, #0x0
  40a200:	b.eq	40a22c <machine_may_gc+0x54>  // b.none
  40a204:	adrp	x0, 419000 <_fini>
  40a208:	add	x1, x0, #0x7bb
  40a20c:	adrp	x0, 419000 <_fini>
  40a210:	add	x4, x0, #0xfb8
  40a214:	mov	w3, #0x212                 	// #530
  40a218:	mov	x2, x1
  40a21c:	adrp	x0, 419000 <_fini>
  40a220:	add	x1, x0, #0x838
  40a224:	mov	w0, #0x0                   	// #0
  40a228:	bl	4052a0 <log_assert_failed_realm@plt>
  40a22c:	ldr	x0, [sp, #24]
  40a230:	ldr	w0, [x0, #32]
  40a234:	cmp	w0, #0x2
  40a238:	b.ne	40a244 <machine_may_gc+0x6c>  // b.any
  40a23c:	mov	w0, #0x0                   	// #0
  40a240:	b	40a2f4 <machine_may_gc+0x11c>
  40a244:	ldrb	w0, [sp, #23]
  40a248:	cmp	w0, #0x0
  40a24c:	b.eq	40a278 <machine_may_gc+0xa0>  // b.none
  40a250:	ldr	x0, [sp, #24]
  40a254:	ldrb	w0, [x0, #104]
  40a258:	ubfx	x0, x0, #1, #1
  40a25c:	and	w0, w0, #0xff
  40a260:	eor	w0, w0, #0x1
  40a264:	and	w0, w0, #0xff
  40a268:	cmp	w0, #0x0
  40a26c:	b.eq	40a278 <machine_may_gc+0xa0>  // b.none
  40a270:	mov	w0, #0x1                   	// #1
  40a274:	b	40a2f4 <machine_may_gc+0x11c>
  40a278:	ldr	x0, [sp, #24]
  40a27c:	ldr	x0, [x0, #72]
  40a280:	cmp	x0, #0x0
  40a284:	b.eq	40a2b4 <machine_may_gc+0xdc>  // b.none
  40a288:	ldr	x0, [sp, #24]
  40a28c:	ldr	x2, [x0]
  40a290:	ldr	x0, [sp, #24]
  40a294:	ldr	x0, [x0, #72]
  40a298:	mov	x1, x0
  40a29c:	mov	x0, x2
  40a2a0:	bl	410218 <manager_job_is_active>
  40a2a4:	cmp	w0, #0x0
  40a2a8:	b.eq	40a2b4 <machine_may_gc+0xdc>  // b.none
  40a2ac:	mov	w0, #0x0                   	// #0
  40a2b0:	b	40a2f4 <machine_may_gc+0x11c>
  40a2b4:	ldr	x0, [sp, #24]
  40a2b8:	ldr	x0, [x0, #64]
  40a2bc:	cmp	x0, #0x0
  40a2c0:	b.eq	40a2f0 <machine_may_gc+0x118>  // b.none
  40a2c4:	ldr	x0, [sp, #24]
  40a2c8:	ldr	x2, [x0]
  40a2cc:	ldr	x0, [sp, #24]
  40a2d0:	ldr	x0, [x0, #64]
  40a2d4:	mov	x1, x0
  40a2d8:	mov	x0, x2
  40a2dc:	bl	40ff98 <manager_unit_is_active>
  40a2e0:	cmp	w0, #0x0
  40a2e4:	b.eq	40a2f0 <machine_may_gc+0x118>  // b.none
  40a2e8:	mov	w0, #0x0                   	// #0
  40a2ec:	b	40a2f4 <machine_may_gc+0x11c>
  40a2f0:	mov	w0, #0x1                   	// #1
  40a2f4:	ldp	x29, x30, [sp], #32
  40a2f8:	ret

000000000040a2fc <machine_add_to_gc_queue>:
  40a2fc:	stp	x29, x30, [sp, #-48]!
  40a300:	mov	x29, sp
  40a304:	str	x0, [sp, #24]
  40a308:	ldr	x0, [sp, #24]
  40a30c:	cmp	x0, #0x0
  40a310:	cset	w0, eq  // eq = none
  40a314:	and	w0, w0, #0xff
  40a318:	and	x0, x0, #0xff
  40a31c:	cmp	x0, #0x0
  40a320:	b.eq	40a34c <machine_add_to_gc_queue+0x50>  // b.none
  40a324:	adrp	x0, 419000 <_fini>
  40a328:	add	x1, x0, #0x7bb
  40a32c:	adrp	x0, 419000 <_fini>
  40a330:	add	x4, x0, #0xfc8
  40a334:	mov	w3, #0x224                 	// #548
  40a338:	mov	x2, x1
  40a33c:	adrp	x0, 419000 <_fini>
  40a340:	add	x1, x0, #0x838
  40a344:	mov	w0, #0x0                   	// #0
  40a348:	bl	4052a0 <log_assert_failed_realm@plt>
  40a34c:	ldr	x0, [sp, #24]
  40a350:	ldrb	w0, [x0, #104]
  40a354:	and	w0, w0, #0x1
  40a358:	and	w0, w0, #0xff
  40a35c:	cmp	w0, #0x0
  40a360:	b.ne	40a418 <machine_add_to_gc_queue+0x11c>  // b.any
  40a364:	ldr	x0, [sp, #24]
  40a368:	ldr	x0, [x0]
  40a36c:	add	x0, x0, #0x40
  40a370:	str	x0, [sp, #32]
  40a374:	ldr	x0, [sp, #24]
  40a378:	str	x0, [sp, #40]
  40a37c:	ldr	x0, [sp, #40]
  40a380:	cmp	x0, #0x0
  40a384:	cset	w0, eq  // eq = none
  40a388:	and	w0, w0, #0xff
  40a38c:	and	x0, x0, #0xff
  40a390:	cmp	x0, #0x0
  40a394:	b.eq	40a3c0 <machine_add_to_gc_queue+0xc4>  // b.none
  40a398:	adrp	x0, 419000 <_fini>
  40a39c:	add	x1, x0, #0x7bb
  40a3a0:	adrp	x0, 419000 <_fini>
  40a3a4:	add	x4, x0, #0xfc8
  40a3a8:	mov	w3, #0x229                 	// #553
  40a3ac:	mov	x2, x1
  40a3b0:	adrp	x0, 419000 <_fini>
  40a3b4:	add	x1, x0, #0x820
  40a3b8:	mov	w0, #0x0                   	// #0
  40a3bc:	bl	4052a0 <log_assert_failed_realm@plt>
  40a3c0:	ldr	x0, [sp, #32]
  40a3c4:	ldr	x1, [x0]
  40a3c8:	ldr	x0, [sp, #40]
  40a3cc:	str	x1, [x0, #144]
  40a3d0:	ldr	x0, [sp, #40]
  40a3d4:	ldr	x0, [x0, #144]
  40a3d8:	cmp	x0, #0x0
  40a3dc:	b.eq	40a3f0 <machine_add_to_gc_queue+0xf4>  // b.none
  40a3e0:	ldr	x0, [sp, #40]
  40a3e4:	ldr	x0, [x0, #144]
  40a3e8:	ldr	x1, [sp, #40]
  40a3ec:	str	x1, [x0, #152]
  40a3f0:	ldr	x0, [sp, #40]
  40a3f4:	str	xzr, [x0, #152]
  40a3f8:	ldr	x0, [sp, #32]
  40a3fc:	ldr	x1, [sp, #40]
  40a400:	str	x1, [x0]
  40a404:	ldr	x0, [sp, #24]
  40a408:	ldrb	w1, [x0, #104]
  40a40c:	orr	w1, w1, #0x1
  40a410:	strb	w1, [x0, #104]
  40a414:	b	40a41c <machine_add_to_gc_queue+0x120>
  40a418:	nop
  40a41c:	ldp	x29, x30, [sp], #48
  40a420:	ret

000000000040a424 <machine_get_state>:
  40a424:	stp	x29, x30, [sp, #-32]!
  40a428:	mov	x29, sp
  40a42c:	str	x0, [sp, #24]
  40a430:	ldr	x0, [sp, #24]
  40a434:	cmp	x0, #0x0
  40a438:	cset	w0, eq  // eq = none
  40a43c:	and	w0, w0, #0xff
  40a440:	and	x0, x0, #0xff
  40a444:	cmp	x0, #0x0
  40a448:	b.eq	40a474 <machine_get_state+0x50>  // b.none
  40a44c:	adrp	x0, 419000 <_fini>
  40a450:	add	x1, x0, #0x7bb
  40a454:	adrp	x0, 419000 <_fini>
  40a458:	add	x4, x0, #0xfe0
  40a45c:	mov	w3, #0x22e                 	// #558
  40a460:	mov	x2, x1
  40a464:	adrp	x0, 419000 <_fini>
  40a468:	add	x1, x0, #0xb70
  40a46c:	mov	w0, #0x0                   	// #0
  40a470:	bl	4052a0 <log_assert_failed_realm@plt>
  40a474:	ldr	x0, [sp, #24]
  40a478:	ldr	w0, [x0, #32]
  40a47c:	cmp	w0, #0x2
  40a480:	b.ne	40a48c <machine_get_state+0x68>  // b.any
  40a484:	mov	w0, #0x1                   	// #1
  40a488:	b	40a4c8 <machine_get_state+0xa4>
  40a48c:	ldr	x0, [sp, #24]
  40a490:	ldrb	w0, [x0, #104]
  40a494:	and	w0, w0, #0x4
  40a498:	and	w0, w0, #0xff
  40a49c:	cmp	w0, #0x0
  40a4a0:	b.eq	40a4ac <machine_get_state+0x88>  // b.none
  40a4a4:	mov	w0, #0x2                   	// #2
  40a4a8:	b	40a4c8 <machine_get_state+0xa4>
  40a4ac:	ldr	x0, [sp, #24]
  40a4b0:	ldr	x0, [x0, #72]
  40a4b4:	cmp	x0, #0x0
  40a4b8:	b.eq	40a4c4 <machine_get_state+0xa0>  // b.none
  40a4bc:	mov	w0, #0x0                   	// #0
  40a4c0:	b	40a4c8 <machine_get_state+0xa4>
  40a4c4:	mov	w0, #0x1                   	// #1
  40a4c8:	ldp	x29, x30, [sp], #32
  40a4cc:	ret

000000000040a4d0 <machine_kill>:
  40a4d0:	stp	x29, x30, [sp, #-48]!
  40a4d4:	mov	x29, sp
  40a4d8:	str	x0, [sp, #24]
  40a4dc:	str	w1, [sp, #20]
  40a4e0:	str	w2, [sp, #16]
  40a4e4:	ldr	x0, [sp, #24]
  40a4e8:	cmp	x0, #0x0
  40a4ec:	cset	w0, eq  // eq = none
  40a4f0:	and	w0, w0, #0xff
  40a4f4:	and	x0, x0, #0xff
  40a4f8:	cmp	x0, #0x0
  40a4fc:	b.eq	40a528 <machine_kill+0x58>  // b.none
  40a500:	adrp	x0, 419000 <_fini>
  40a504:	add	x1, x0, #0x7bb
  40a508:	adrp	x0, 419000 <_fini>
  40a50c:	add	x4, x0, #0xff8
  40a510:	mov	w3, #0x23d                 	// #573
  40a514:	mov	x2, x1
  40a518:	adrp	x0, 419000 <_fini>
  40a51c:	add	x1, x0, #0x838
  40a520:	mov	w0, #0x0                   	// #0
  40a524:	bl	4052a0 <log_assert_failed_realm@plt>
  40a528:	strb	wzr, [sp, #47]
  40a52c:	ldr	x0, [sp, #24]
  40a530:	ldr	w0, [x0, #32]
  40a534:	cmp	w0, #0x1
  40a538:	b.hi	40a544 <machine_kill+0x74>  // b.pmore
  40a53c:	mov	w0, #0x1                   	// #1
  40a540:	strb	w0, [sp, #47]
  40a544:	nop
  40a548:	ldrb	w0, [sp, #47]
  40a54c:	eor	w0, w0, #0x1
  40a550:	and	w0, w0, #0xff
  40a554:	cmp	w0, #0x0
  40a558:	b.eq	40a564 <machine_kill+0x94>  // b.none
  40a55c:	mov	w0, #0xffffffa1            	// #-95
  40a560:	b	40a5dc <machine_kill+0x10c>
  40a564:	ldr	x0, [sp, #24]
  40a568:	ldr	x0, [x0, #64]
  40a56c:	cmp	x0, #0x0
  40a570:	b.ne	40a57c <machine_kill+0xac>  // b.any
  40a574:	mov	w0, #0xfffffffd            	// #-3
  40a578:	b	40a5dc <machine_kill+0x10c>
  40a57c:	ldr	w0, [sp, #20]
  40a580:	cmp	w0, #0x0
  40a584:	b.ne	40a5b8 <machine_kill+0xe8>  // b.any
  40a588:	ldr	x0, [sp, #24]
  40a58c:	ldr	w0, [x0, #80]
  40a590:	ldr	w1, [sp, #16]
  40a594:	bl	404e30 <kill@plt>
  40a598:	cmp	w0, #0x0
  40a59c:	b.ge	40a5b0 <machine_kill+0xe0>  // b.tcont
  40a5a0:	bl	4054d0 <__errno_location@plt>
  40a5a4:	ldr	w0, [x0]
  40a5a8:	neg	w0, w0
  40a5ac:	b	40a5dc <machine_kill+0x10c>
  40a5b0:	mov	w0, #0x0                   	// #0
  40a5b4:	b	40a5dc <machine_kill+0x10c>
  40a5b8:	ldr	x0, [sp, #24]
  40a5bc:	ldr	x4, [x0]
  40a5c0:	ldr	x0, [sp, #24]
  40a5c4:	ldr	x0, [x0, #64]
  40a5c8:	mov	x3, #0x0                   	// #0
  40a5cc:	ldr	w2, [sp, #16]
  40a5d0:	mov	x1, x0
  40a5d4:	mov	x0, x4
  40a5d8:	bl	40fe8c <manager_kill_unit>
  40a5dc:	ldp	x29, x30, [sp], #48
  40a5e0:	ret

000000000040a5e4 <machine_openpt>:
  40a5e4:	stp	x29, x30, [sp, #-48]!
  40a5e8:	mov	x29, sp
  40a5ec:	str	x0, [sp, #40]
  40a5f0:	str	w1, [sp, #36]
  40a5f4:	str	x2, [sp, #24]
  40a5f8:	ldr	x0, [sp, #40]
  40a5fc:	cmp	x0, #0x0
  40a600:	cset	w0, eq  // eq = none
  40a604:	and	w0, w0, #0xff
  40a608:	and	x0, x0, #0xff
  40a60c:	cmp	x0, #0x0
  40a610:	b.eq	40a63c <machine_openpt+0x58>  // b.none
  40a614:	adrp	x0, 419000 <_fini>
  40a618:	add	x1, x0, #0x7bb
  40a61c:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40a620:	add	x4, x0, #0x8
  40a624:	mov	w3, #0x253                 	// #595
  40a628:	mov	x2, x1
  40a62c:	adrp	x0, 419000 <_fini>
  40a630:	add	x1, x0, #0x838
  40a634:	mov	w0, #0x0                   	// #0
  40a638:	bl	4052a0 <log_assert_failed_realm@plt>
  40a63c:	ldr	x0, [sp, #40]
  40a640:	ldr	w0, [x0, #32]
  40a644:	cmp	w0, #0x0
  40a648:	b.eq	40a664 <machine_openpt+0x80>  // b.none
  40a64c:	cmp	w0, #0x2
  40a650:	b.ne	40a694 <machine_openpt+0xb0>  // b.any
  40a654:	ldr	x1, [sp, #24]
  40a658:	ldr	w0, [sp, #36]
  40a65c:	bl	4051a0 <openpt_allocate@plt>
  40a660:	b	40a698 <machine_openpt+0xb4>
  40a664:	ldr	x0, [sp, #40]
  40a668:	ldr	w0, [x0, #80]
  40a66c:	cmp	w0, #0x0
  40a670:	b.gt	40a67c <machine_openpt+0x98>
  40a674:	mov	w0, #0xffffffea            	// #-22
  40a678:	b	40a698 <machine_openpt+0xb4>
  40a67c:	ldr	x0, [sp, #40]
  40a680:	ldr	w0, [x0, #80]
  40a684:	ldr	x2, [sp, #24]
  40a688:	ldr	w1, [sp, #36]
  40a68c:	bl	405470 <openpt_allocate_in_namespace@plt>
  40a690:	b	40a698 <machine_openpt+0xb4>
  40a694:	mov	w0, #0xffffffa1            	// #-95
  40a698:	ldp	x29, x30, [sp], #48
  40a69c:	ret

000000000040a6a0 <machine_open_terminal>:
  40a6a0:	stp	x29, x30, [sp, #-48]!
  40a6a4:	mov	x29, sp
  40a6a8:	str	x0, [sp, #40]
  40a6ac:	str	x1, [sp, #32]
  40a6b0:	str	w2, [sp, #28]
  40a6b4:	ldr	x0, [sp, #40]
  40a6b8:	cmp	x0, #0x0
  40a6bc:	cset	w0, eq  // eq = none
  40a6c0:	and	w0, w0, #0xff
  40a6c4:	and	x0, x0, #0xff
  40a6c8:	cmp	x0, #0x0
  40a6cc:	b.eq	40a6f8 <machine_open_terminal+0x58>  // b.none
  40a6d0:	adrp	x0, 419000 <_fini>
  40a6d4:	add	x1, x0, #0x7bb
  40a6d8:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40a6dc:	add	x4, x0, #0x18
  40a6e0:	mov	w3, #0x267                 	// #615
  40a6e4:	mov	x2, x1
  40a6e8:	adrp	x0, 419000 <_fini>
  40a6ec:	add	x1, x0, #0x838
  40a6f0:	mov	w0, #0x0                   	// #0
  40a6f4:	bl	4052a0 <log_assert_failed_realm@plt>
  40a6f8:	ldr	x0, [sp, #40]
  40a6fc:	ldr	w0, [x0, #32]
  40a700:	cmp	w0, #0x0
  40a704:	b.eq	40a720 <machine_open_terminal+0x80>  // b.none
  40a708:	cmp	w0, #0x2
  40a70c:	b.ne	40a750 <machine_open_terminal+0xb0>  // b.any
  40a710:	ldr	w1, [sp, #28]
  40a714:	ldr	x0, [sp, #32]
  40a718:	bl	405730 <open_terminal@plt>
  40a71c:	b	40a754 <machine_open_terminal+0xb4>
  40a720:	ldr	x0, [sp, #40]
  40a724:	ldr	w0, [x0, #80]
  40a728:	cmp	w0, #0x0
  40a72c:	b.gt	40a738 <machine_open_terminal+0x98>
  40a730:	mov	w0, #0xffffffea            	// #-22
  40a734:	b	40a754 <machine_open_terminal+0xb4>
  40a738:	ldr	x0, [sp, #40]
  40a73c:	ldr	w0, [x0, #80]
  40a740:	ldr	w2, [sp, #28]
  40a744:	ldr	x1, [sp, #32]
  40a748:	bl	4058f0 <open_terminal_in_namespace@plt>
  40a74c:	b	40a754 <machine_open_terminal+0xb4>
  40a750:	mov	w0, #0xffffffa1            	// #-95
  40a754:	ldp	x29, x30, [sp], #48
  40a758:	ret

000000000040a75c <machine_release_unit>:
  40a75c:	stp	x29, x30, [sp, #-96]!
  40a760:	mov	x29, sp
  40a764:	stp	x19, x20, [sp, #16]
  40a768:	str	x0, [sp, #40]
  40a76c:	adrp	x0, 431000 <machine_vtable+0x4a0>
  40a770:	ldr	x0, [x0, #3952]
  40a774:	ldr	x1, [x0]
  40a778:	str	x1, [sp, #88]
  40a77c:	mov	x1, #0x0                   	// #0
  40a780:	ldr	x0, [sp, #40]
  40a784:	cmp	x0, #0x0
  40a788:	cset	w0, eq  // eq = none
  40a78c:	and	w0, w0, #0xff
  40a790:	and	x0, x0, #0xff
  40a794:	cmp	x0, #0x0
  40a798:	b.eq	40a7c4 <machine_release_unit+0x68>  // b.none
  40a79c:	adrp	x0, 419000 <_fini>
  40a7a0:	add	x1, x0, #0x7bb
  40a7a4:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40a7a8:	add	x4, x0, #0x30
  40a7ac:	mov	w3, #0x27a                 	// #634
  40a7b0:	mov	x2, x1
  40a7b4:	adrp	x0, 419000 <_fini>
  40a7b8:	add	x1, x0, #0x838
  40a7bc:	mov	w0, #0x0                   	// #0
  40a7c0:	bl	4052a0 <log_assert_failed_realm@plt>
  40a7c4:	ldr	x0, [sp, #40]
  40a7c8:	ldr	x0, [x0, #64]
  40a7cc:	cmp	x0, #0x0
  40a7d0:	b.eq	40a908 <machine_release_unit+0x1ac>  // b.none
  40a7d4:	ldr	x0, [sp, #40]
  40a7d8:	ldrb	w0, [x0, #104]
  40a7dc:	and	w0, w0, #0x8
  40a7e0:	and	w0, w0, #0xff
  40a7e4:	cmp	w0, #0x0
  40a7e8:	b.eq	40a8cc <machine_release_unit+0x170>  // b.none
  40a7ec:	str	xzr, [sp, #64]
  40a7f0:	str	xzr, [sp, #72]
  40a7f4:	str	wzr, [sp, #80]
  40a7f8:	ldr	x0, [sp, #40]
  40a7fc:	ldr	x3, [x0]
  40a800:	ldr	x0, [sp, #40]
  40a804:	ldr	x0, [x0, #64]
  40a808:	add	x1, sp, #0x40
  40a80c:	mov	x2, x1
  40a810:	mov	x1, x0
  40a814:	mov	x0, x3
  40a818:	bl	40fb64 <manager_unref_unit>
  40a81c:	str	w0, [sp, #48]
  40a820:	ldr	w0, [sp, #48]
  40a824:	cmp	w0, #0x0
  40a828:	b.ge	40a8b4 <machine_release_unit+0x158>  // b.tcont
  40a82c:	mov	w0, #0x4                   	// #4
  40a830:	str	w0, [sp, #52]
  40a834:	ldr	w0, [sp, #48]
  40a838:	str	w0, [sp, #56]
  40a83c:	str	wzr, [sp, #60]
  40a840:	ldr	w0, [sp, #60]
  40a844:	bl	405c20 <log_get_max_level_realm@plt>
  40a848:	mov	w1, w0
  40a84c:	ldr	w0, [sp, #52]
  40a850:	and	w0, w0, #0x7
  40a854:	cmp	w1, w0
  40a858:	b.lt	40a8ac <machine_release_unit+0x150>  // b.tstop
  40a85c:	ldr	w0, [sp, #60]
  40a860:	lsl	w1, w0, #10
  40a864:	ldr	w0, [sp, #52]
  40a868:	orr	w19, w1, w0
  40a86c:	adrp	x0, 419000 <_fini>
  40a870:	add	x20, x0, #0x7bb
  40a874:	add	x0, sp, #0x40
  40a878:	ldr	w1, [sp, #48]
  40a87c:	bl	404e70 <bus_error_message@plt>
  40a880:	mov	x6, x0
  40a884:	adrp	x0, 419000 <_fini>
  40a888:	add	x5, x0, #0xd80
  40a88c:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40a890:	add	x4, x0, #0x48
  40a894:	mov	w3, #0x285                 	// #645
  40a898:	mov	x2, x20
  40a89c:	ldr	w1, [sp, #56]
  40a8a0:	mov	w0, w19
  40a8a4:	bl	405750 <log_internal_realm@plt>
  40a8a8:	b	40a8b4 <machine_release_unit+0x158>
  40a8ac:	ldr	w0, [sp, #56]
  40a8b0:	cmp	w0, #0x0
  40a8b4:	ldr	x0, [sp, #40]
  40a8b8:	ldrb	w1, [x0, #104]
  40a8bc:	and	w1, w1, #0xfffffff7
  40a8c0:	strb	w1, [x0, #104]
  40a8c4:	add	x0, sp, #0x40
  40a8c8:	bl	4056c0 <sd_bus_error_free@plt>
  40a8cc:	ldr	x0, [sp, #40]
  40a8d0:	ldr	x0, [x0]
  40a8d4:	ldr	x2, [x0, #24]
  40a8d8:	ldr	x0, [sp, #40]
  40a8dc:	ldr	x0, [x0, #64]
  40a8e0:	mov	x1, x0
  40a8e4:	mov	x0, x2
  40a8e8:	bl	407dbc <hashmap_remove>
  40a8ec:	ldr	x0, [sp, #40]
  40a8f0:	ldr	x0, [x0, #64]
  40a8f4:	bl	407cc8 <mfree>
  40a8f8:	mov	x1, x0
  40a8fc:	ldr	x0, [sp, #40]
  40a900:	str	x1, [x0, #64]
  40a904:	b	40a90c <machine_release_unit+0x1b0>
  40a908:	nop
  40a90c:	adrp	x0, 431000 <machine_vtable+0x4a0>
  40a910:	ldr	x0, [x0, #3952]
  40a914:	ldr	x1, [sp, #88]
  40a918:	ldr	x0, [x0]
  40a91c:	eor	x0, x1, x0
  40a920:	cmp	x0, #0x0
  40a924:	b.eq	40a92c <machine_release_unit+0x1d0>  // b.none
  40a928:	bl	4055f0 <__stack_chk_fail@plt>
  40a92c:	ldp	x19, x20, [sp, #16]
  40a930:	ldp	x29, x30, [sp], #96
  40a934:	ret

000000000040a938 <machine_get_uid_shift>:
  40a938:	stp	x29, x30, [sp, #-128]!
  40a93c:	mov	x29, sp
  40a940:	str	x19, [sp, #16]
  40a944:	str	x0, [sp, #40]
  40a948:	str	x1, [sp, #32]
  40a94c:	adrp	x0, 431000 <machine_vtable+0x4a0>
  40a950:	ldr	x0, [x0, #3952]
  40a954:	ldr	x1, [x0]
  40a958:	str	x1, [sp, #120]
  40a95c:	mov	x1, #0x0                   	// #0
  40a960:	str	xzr, [sp, #80]
  40a964:	ldr	x0, [sp, #40]
  40a968:	cmp	x0, #0x0
  40a96c:	cset	w0, eq  // eq = none
  40a970:	and	w0, w0, #0xff
  40a974:	and	x0, x0, #0xff
  40a978:	cmp	x0, #0x0
  40a97c:	b.eq	40a9a8 <machine_get_uid_shift+0x70>  // b.none
  40a980:	adrp	x0, 419000 <_fini>
  40a984:	add	x1, x0, #0x7bb
  40a988:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40a98c:	add	x4, x0, #0x60
  40a990:	mov	w3, #0x296                 	// #662
  40a994:	mov	x2, x1
  40a998:	adrp	x0, 419000 <_fini>
  40a99c:	add	x1, x0, #0x838
  40a9a0:	mov	w0, #0x0                   	// #0
  40a9a4:	bl	4052a0 <log_assert_failed_realm@plt>
  40a9a8:	ldr	x0, [sp, #32]
  40a9ac:	cmp	x0, #0x0
  40a9b0:	cset	w0, eq  // eq = none
  40a9b4:	and	w0, w0, #0xff
  40a9b8:	and	x0, x0, #0xff
  40a9bc:	cmp	x0, #0x0
  40a9c0:	b.eq	40a9ec <machine_get_uid_shift+0xb4>  // b.none
  40a9c4:	adrp	x0, 419000 <_fini>
  40a9c8:	add	x1, x0, #0x7bb
  40a9cc:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40a9d0:	add	x4, x0, #0x60
  40a9d4:	mov	w3, #0x297                 	// #663
  40a9d8:	mov	x2, x1
  40a9dc:	adrp	x0, 419000 <_fini>
  40a9e0:	add	x1, x0, #0xdb8
  40a9e4:	mov	w0, #0x0                   	// #0
  40a9e8:	bl	4052a0 <log_assert_failed_realm@plt>
  40a9ec:	ldr	x0, [sp, #40]
  40a9f0:	ldr	w0, [x0, #32]
  40a9f4:	cmp	w0, #0x2
  40a9f8:	b.ne	40aa0c <machine_get_uid_shift+0xd4>  // b.any
  40a9fc:	ldr	x0, [sp, #32]
  40aa00:	str	wzr, [x0]
  40aa04:	mov	w19, #0x0                   	// #0
  40aa08:	b	40ad48 <machine_get_uid_shift+0x410>
  40aa0c:	ldr	x0, [sp, #40]
  40aa10:	ldr	w0, [x0, #32]
  40aa14:	cmp	w0, #0x0
  40aa18:	b.eq	40aa24 <machine_get_uid_shift+0xec>  // b.none
  40aa1c:	mov	w19, #0xffffffa1            	// #-95
  40aa20:	b	40ad48 <machine_get_uid_shift+0x410>
  40aa24:	ldr	x0, [sp, #40]
  40aa28:	ldr	w0, [x0, #80]
  40aa2c:	add	x4, sp, #0x58
  40aa30:	mov	w3, w0
  40aa34:	adrp	x0, 419000 <_fini>
  40aa38:	add	x2, x0, #0xdc0
  40aa3c:	mov	x1, #0x1b                  	// #27
  40aa40:	mov	x0, x4
  40aa44:	bl	405110 <snprintf@plt>
  40aa48:	cmp	w0, #0x1a
  40aa4c:	cset	w0, hi  // hi = pmore
  40aa50:	and	w0, w0, #0xff
  40aa54:	and	x0, x0, #0xff
  40aa58:	cmp	x0, #0x0
  40aa5c:	b.eq	40aa88 <machine_get_uid_shift+0x150>  // b.none
  40aa60:	adrp	x0, 419000 <_fini>
  40aa64:	add	x1, x0, #0x7bb
  40aa68:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40aa6c:	add	x4, x0, #0x60
  40aa70:	mov	w3, #0x2a7                 	// #679
  40aa74:	mov	x2, x1
  40aa78:	adrp	x0, 419000 <_fini>
  40aa7c:	add	x1, x0, #0xdd8
  40aa80:	mov	w0, #0x0                   	// #0
  40aa84:	bl	4052a0 <log_assert_failed_realm@plt>
  40aa88:	add	x2, sp, #0x58
  40aa8c:	adrp	x0, 419000 <_fini>
  40aa90:	add	x1, x0, #0xe00
  40aa94:	mov	x0, x2
  40aa98:	bl	405b90 <fopen64@plt>
  40aa9c:	str	x0, [sp, #80]
  40aaa0:	ldr	x0, [sp, #80]
  40aaa4:	cmp	x0, #0x0
  40aaa8:	b.ne	40aadc <machine_get_uid_shift+0x1a4>  // b.any
  40aaac:	bl	4054d0 <__errno_location@plt>
  40aab0:	ldr	w0, [x0]
  40aab4:	cmp	w0, #0x2
  40aab8:	b.ne	40aacc <machine_get_uid_shift+0x194>  // b.any
  40aabc:	ldr	x0, [sp, #32]
  40aac0:	str	wzr, [x0]
  40aac4:	mov	w19, #0x0                   	// #0
  40aac8:	b	40ad48 <machine_get_uid_shift+0x410>
  40aacc:	bl	4054d0 <__errno_location@plt>
  40aad0:	ldr	w0, [x0]
  40aad4:	neg	w19, w0
  40aad8:	b	40ad48 <machine_get_uid_shift+0x410>
  40aadc:	bl	4054d0 <__errno_location@plt>
  40aae0:	str	wzr, [x0]
  40aae4:	ldr	x5, [sp, #80]
  40aae8:	add	x2, sp, #0x38
  40aaec:	add	x1, sp, #0x34
  40aaf0:	add	x0, sp, #0x30
  40aaf4:	mov	x4, x2
  40aaf8:	mov	x3, x1
  40aafc:	mov	x2, x0
  40ab00:	adrp	x0, 419000 <_fini>
  40ab04:	add	x1, x0, #0xe08
  40ab08:	mov	x0, x5
  40ab0c:	bl	4053d0 <__isoc99_fscanf@plt>
  40ab10:	str	w0, [sp, #72]
  40ab14:	ldr	w0, [sp, #72]
  40ab18:	cmp	w0, #0x3
  40ab1c:	b.eq	40ab48 <machine_get_uid_shift+0x210>  // b.none
  40ab20:	ldr	x0, [sp, #80]
  40ab24:	bl	405460 <ferror@plt>
  40ab28:	cmp	w0, #0x0
  40ab2c:	b.eq	40ab40 <machine_get_uid_shift+0x208>  // b.none
  40ab30:	mov	w0, #0x5                   	// #5
  40ab34:	bl	407ea0 <errno_or_else>
  40ab38:	mov	w19, w0
  40ab3c:	b	40ad48 <machine_get_uid_shift+0x410>
  40ab40:	mov	w19, #0xffffffb6            	// #-74
  40ab44:	b	40ad48 <machine_get_uid_shift+0x410>
  40ab48:	ldr	w0, [sp, #48]
  40ab4c:	cmp	w0, #0x0
  40ab50:	b.eq	40ab5c <machine_get_uid_shift+0x224>  // b.none
  40ab54:	mov	w19, #0xfffffffa            	// #-6
  40ab58:	b	40ad48 <machine_get_uid_shift+0x410>
  40ab5c:	ldr	w1, [sp, #56]
  40ab60:	mov	w0, #0xfffd                	// #65533
  40ab64:	cmp	w1, w0
  40ab68:	b.hi	40ab74 <machine_get_uid_shift+0x23c>  // b.pmore
  40ab6c:	mov	w19, #0xfffffffa            	// #-6
  40ab70:	b	40ad48 <machine_get_uid_shift+0x410>
  40ab74:	ldr	x0, [sp, #80]
  40ab78:	mov	x1, #0x0                   	// #0
  40ab7c:	bl	404de0 <safe_fgetc@plt>
  40ab80:	str	w0, [sp, #76]
  40ab84:	ldr	w0, [sp, #76]
  40ab88:	cmp	w0, #0x0
  40ab8c:	b.ge	40ab98 <machine_get_uid_shift+0x260>  // b.tcont
  40ab90:	ldr	w19, [sp, #76]
  40ab94:	b	40ad48 <machine_get_uid_shift+0x410>
  40ab98:	ldr	w0, [sp, #76]
  40ab9c:	cmp	w0, #0x0
  40aba0:	b.eq	40abac <machine_get_uid_shift+0x274>  // b.none
  40aba4:	mov	w19, #0xfffffffa            	// #-6
  40aba8:	b	40ad48 <machine_get_uid_shift+0x410>
  40abac:	ldr	x0, [sp, #80]
  40abb0:	bl	4057d0 <fclose@plt>
  40abb4:	ldr	x0, [sp, #40]
  40abb8:	ldr	w0, [x0, #80]
  40abbc:	add	x4, sp, #0x58
  40abc0:	mov	w3, w0
  40abc4:	adrp	x0, 419000 <_fini>
  40abc8:	add	x2, x0, #0xe18
  40abcc:	mov	x1, #0x1b                  	// #27
  40abd0:	mov	x0, x4
  40abd4:	bl	405110 <snprintf@plt>
  40abd8:	cmp	w0, #0x1a
  40abdc:	cset	w0, hi  // hi = pmore
  40abe0:	and	w0, w0, #0xff
  40abe4:	and	x0, x0, #0xff
  40abe8:	cmp	x0, #0x0
  40abec:	b.eq	40ac18 <machine_get_uid_shift+0x2e0>  // b.none
  40abf0:	adrp	x0, 419000 <_fini>
  40abf4:	add	x1, x0, #0x7bb
  40abf8:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40abfc:	add	x4, x0, #0x60
  40ac00:	mov	w3, #0x2cd                 	// #717
  40ac04:	mov	x2, x1
  40ac08:	adrp	x0, 419000 <_fini>
  40ac0c:	add	x1, x0, #0xdd8
  40ac10:	mov	w0, #0x0                   	// #0
  40ac14:	bl	4052a0 <log_assert_failed_realm@plt>
  40ac18:	add	x2, sp, #0x58
  40ac1c:	adrp	x0, 419000 <_fini>
  40ac20:	add	x1, x0, #0xe00
  40ac24:	mov	x0, x2
  40ac28:	bl	405b90 <fopen64@plt>
  40ac2c:	str	x0, [sp, #80]
  40ac30:	ldr	x0, [sp, #80]
  40ac34:	cmp	x0, #0x0
  40ac38:	b.ne	40ac4c <machine_get_uid_shift+0x314>  // b.any
  40ac3c:	bl	4054d0 <__errno_location@plt>
  40ac40:	ldr	w0, [x0]
  40ac44:	neg	w19, w0
  40ac48:	b	40ad48 <machine_get_uid_shift+0x410>
  40ac4c:	bl	4054d0 <__errno_location@plt>
  40ac50:	str	wzr, [x0]
  40ac54:	ldr	x5, [sp, #80]
  40ac58:	add	x2, sp, #0x44
  40ac5c:	add	x1, sp, #0x40
  40ac60:	add	x0, sp, #0x3c
  40ac64:	mov	x4, x2
  40ac68:	mov	x3, x1
  40ac6c:	mov	x2, x0
  40ac70:	adrp	x0, 419000 <_fini>
  40ac74:	add	x1, x0, #0xe08
  40ac78:	mov	x0, x5
  40ac7c:	bl	4053d0 <__isoc99_fscanf@plt>
  40ac80:	str	w0, [sp, #72]
  40ac84:	ldr	w0, [sp, #72]
  40ac88:	cmp	w0, #0x3
  40ac8c:	b.eq	40acb8 <machine_get_uid_shift+0x380>  // b.none
  40ac90:	ldr	x0, [sp, #80]
  40ac94:	bl	405460 <ferror@plt>
  40ac98:	cmp	w0, #0x0
  40ac9c:	b.eq	40acb0 <machine_get_uid_shift+0x378>  // b.none
  40aca0:	mov	w0, #0x5                   	// #5
  40aca4:	bl	407ea0 <errno_or_else>
  40aca8:	mov	w19, w0
  40acac:	b	40ad48 <machine_get_uid_shift+0x410>
  40acb0:	mov	w19, #0xffffffb6            	// #-74
  40acb4:	b	40ad48 <machine_get_uid_shift+0x410>
  40acb8:	ldr	x0, [sp, #80]
  40acbc:	mov	x1, #0x0                   	// #0
  40acc0:	bl	404de0 <safe_fgetc@plt>
  40acc4:	str	w0, [sp, #76]
  40acc8:	ldr	w0, [sp, #76]
  40accc:	cmp	w0, #0x0
  40acd0:	b.ge	40acdc <machine_get_uid_shift+0x3a4>  // b.tcont
  40acd4:	ldr	w19, [sp, #76]
  40acd8:	b	40ad48 <machine_get_uid_shift+0x410>
  40acdc:	ldr	w0, [sp, #76]
  40ace0:	cmp	w0, #0x0
  40ace4:	b.eq	40acf0 <machine_get_uid_shift+0x3b8>  // b.none
  40ace8:	mov	w19, #0xfffffffa            	// #-6
  40acec:	b	40ad48 <machine_get_uid_shift+0x410>
  40acf0:	ldr	w1, [sp, #48]
  40acf4:	ldr	w0, [sp, #60]
  40acf8:	cmp	w1, w0
  40acfc:	b.eq	40ad08 <machine_get_uid_shift+0x3d0>  // b.none
  40ad00:	mov	w19, #0xfffffffa            	// #-6
  40ad04:	b	40ad48 <machine_get_uid_shift+0x410>
  40ad08:	ldr	w1, [sp, #52]
  40ad0c:	ldr	w0, [sp, #64]
  40ad10:	cmp	w1, w0
  40ad14:	b.eq	40ad20 <machine_get_uid_shift+0x3e8>  // b.none
  40ad18:	mov	w19, #0xfffffffa            	// #-6
  40ad1c:	b	40ad48 <machine_get_uid_shift+0x410>
  40ad20:	ldr	w1, [sp, #56]
  40ad24:	ldr	w0, [sp, #68]
  40ad28:	cmp	w1, w0
  40ad2c:	b.eq	40ad38 <machine_get_uid_shift+0x400>  // b.none
  40ad30:	mov	w19, #0xfffffffa            	// #-6
  40ad34:	b	40ad48 <machine_get_uid_shift+0x410>
  40ad38:	ldr	w1, [sp, #52]
  40ad3c:	ldr	x0, [sp, #32]
  40ad40:	str	w1, [x0]
  40ad44:	mov	w19, #0x0                   	// #0
  40ad48:	add	x0, sp, #0x50
  40ad4c:	bl	407ee4 <fclosep>
  40ad50:	mov	w1, w19
  40ad54:	adrp	x0, 431000 <machine_vtable+0x4a0>
  40ad58:	ldr	x0, [x0, #3952]
  40ad5c:	ldr	x2, [sp, #120]
  40ad60:	ldr	x0, [x0]
  40ad64:	eor	x0, x2, x0
  40ad68:	cmp	x0, #0x0
  40ad6c:	b.eq	40ad74 <machine_get_uid_shift+0x43c>  // b.none
  40ad70:	bl	4055f0 <__stack_chk_fail@plt>
  40ad74:	mov	w0, w1
  40ad78:	ldr	x19, [sp, #16]
  40ad7c:	ldp	x29, x30, [sp], #128
  40ad80:	ret

000000000040ad84 <machine_class_to_string>:
  40ad84:	sub	sp, sp, #0x10
  40ad88:	str	w0, [sp, #12]
  40ad8c:	ldr	w0, [sp, #12]
  40ad90:	cmp	w0, #0x0
  40ad94:	b.lt	40ada4 <machine_class_to_string+0x20>  // b.tstop
  40ad98:	ldr	w0, [sp, #12]
  40ad9c:	cmp	w0, #0x2
  40ada0:	b.le	40adac <machine_class_to_string+0x28>
  40ada4:	mov	x0, #0x0                   	// #0
  40ada8:	b	40adbc <machine_class_to_string+0x38>
  40adac:	adrp	x0, 430000 <__FRAME_END__+0x10c5c>
  40adb0:	add	x0, x0, #0x158
  40adb4:	ldrsw	x1, [sp, #12]
  40adb8:	ldr	x0, [x0, x1, lsl #3]
  40adbc:	add	sp, sp, #0x10
  40adc0:	ret

000000000040adc4 <machine_class_from_string>:
  40adc4:	stp	x29, x30, [sp, #-32]!
  40adc8:	mov	x29, sp
  40adcc:	str	x0, [sp, #24]
  40add0:	ldr	x2, [sp, #24]
  40add4:	mov	x1, #0x3                   	// #3
  40add8:	adrp	x0, 430000 <__FRAME_END__+0x10c5c>
  40addc:	add	x0, x0, #0x158
  40ade0:	bl	405820 <string_table_lookup@plt>
  40ade4:	ldp	x29, x30, [sp], #32
  40ade8:	ret

000000000040adec <machine_state_to_string>:
  40adec:	sub	sp, sp, #0x10
  40adf0:	str	w0, [sp, #12]
  40adf4:	ldr	w0, [sp, #12]
  40adf8:	cmp	w0, #0x0
  40adfc:	b.lt	40ae0c <machine_state_to_string+0x20>  // b.tstop
  40ae00:	ldr	w0, [sp, #12]
  40ae04:	cmp	w0, #0x2
  40ae08:	b.le	40ae14 <machine_state_to_string+0x28>
  40ae0c:	mov	x0, #0x0                   	// #0
  40ae10:	b	40ae24 <machine_state_to_string+0x38>
  40ae14:	adrp	x0, 430000 <__FRAME_END__+0x10c5c>
  40ae18:	add	x0, x0, #0x170
  40ae1c:	ldrsw	x1, [sp, #12]
  40ae20:	ldr	x0, [x0, x1, lsl #3]
  40ae24:	add	sp, sp, #0x10
  40ae28:	ret

000000000040ae2c <kill_who_from_string>:
  40ae2c:	stp	x29, x30, [sp, #-32]!
  40ae30:	mov	x29, sp
  40ae34:	str	x0, [sp, #24]
  40ae38:	ldr	x2, [sp, #24]
  40ae3c:	mov	x1, #0x2                   	// #2
  40ae40:	adrp	x0, 430000 <__FRAME_END__+0x10c5c>
  40ae44:	add	x0, x0, #0x188
  40ae48:	bl	405820 <string_table_lookup@plt>
  40ae4c:	ldp	x29, x30, [sp], #32
  40ae50:	ret

000000000040ae54 <mfree>:
  40ae54:	stp	x29, x30, [sp, #-32]!
  40ae58:	mov	x29, sp
  40ae5c:	str	x0, [sp, #24]
  40ae60:	ldr	x0, [sp, #24]
  40ae64:	bl	4059e0 <free@plt>
  40ae68:	mov	x0, #0x0                   	// #0
  40ae6c:	ldp	x29, x30, [sp], #32
  40ae70:	ret

000000000040ae74 <freep>:
  40ae74:	stp	x29, x30, [sp, #-32]!
  40ae78:	mov	x29, sp
  40ae7c:	str	x0, [sp, #24]
  40ae80:	ldr	x0, [sp, #24]
  40ae84:	ldr	x0, [x0]
  40ae88:	bl	4059e0 <free@plt>
  40ae8c:	nop
  40ae90:	ldp	x29, x30, [sp], #32
  40ae94:	ret

000000000040ae98 <size_multiply_overflow>:
  40ae98:	sub	sp, sp, #0x10
  40ae9c:	str	x0, [sp, #8]
  40aea0:	str	x1, [sp]
  40aea4:	ldr	x0, [sp]
  40aea8:	cmp	x0, #0x0
  40aeac:	cset	w0, ne  // ne = any
  40aeb0:	and	w0, w0, #0xff
  40aeb4:	and	x0, x0, #0xff
  40aeb8:	cmp	x0, #0x0
  40aebc:	b.eq	40af00 <size_multiply_overflow+0x68>  // b.none
  40aec0:	mov	x2, #0x0                   	// #0
  40aec4:	ldr	x1, [sp, #8]
  40aec8:	ldr	x0, [sp]
  40aecc:	umulh	x0, x1, x0
  40aed0:	cmp	x0, #0x0
  40aed4:	b.eq	40aedc <size_multiply_overflow+0x44>  // b.none
  40aed8:	mov	x2, #0x1                   	// #1
  40aedc:	mov	x0, x2
  40aee0:	cmp	x0, #0x0
  40aee4:	cset	w0, ne  // ne = any
  40aee8:	and	w0, w0, #0xff
  40aeec:	and	x0, x0, #0xff
  40aef0:	cmp	x0, #0x0
  40aef4:	b.eq	40af00 <size_multiply_overflow+0x68>  // b.none
  40aef8:	mov	w0, #0x1                   	// #1
  40aefc:	b	40af04 <size_multiply_overflow+0x6c>
  40af00:	mov	w0, #0x0                   	// #0
  40af04:	and	w0, w0, #0x1
  40af08:	and	w0, w0, #0xff
  40af0c:	add	sp, sp, #0x10
  40af10:	ret

000000000040af14 <sd_bus_message_unrefp>:
  40af14:	stp	x29, x30, [sp, #-32]!
  40af18:	mov	x29, sp
  40af1c:	str	x0, [sp, #24]
  40af20:	ldr	x0, [sp, #24]
  40af24:	ldr	x0, [x0]
  40af28:	cmp	x0, #0x0
  40af2c:	b.eq	40af3c <sd_bus_message_unrefp+0x28>  // b.none
  40af30:	ldr	x0, [sp, #24]
  40af34:	ldr	x0, [x0]
  40af38:	bl	404fd0 <sd_bus_message_unref@plt>
  40af3c:	nop
  40af40:	ldp	x29, x30, [sp], #32
  40af44:	ret

000000000040af48 <sd_bus_creds_unrefp>:
  40af48:	stp	x29, x30, [sp, #-32]!
  40af4c:	mov	x29, sp
  40af50:	str	x0, [sp, #24]
  40af54:	ldr	x0, [sp, #24]
  40af58:	ldr	x0, [x0]
  40af5c:	cmp	x0, #0x0
  40af60:	b.eq	40af70 <sd_bus_creds_unrefp+0x28>  // b.none
  40af64:	ldr	x0, [sp, #24]
  40af68:	ldr	x0, [x0]
  40af6c:	bl	405010 <sd_bus_creds_unref@plt>
  40af70:	nop
  40af74:	ldp	x29, x30, [sp], #32
  40af78:	ret

000000000040af7c <hashmap_free>:
  40af7c:	stp	x29, x30, [sp, #-32]!
  40af80:	mov	x29, sp
  40af84:	str	x0, [sp, #24]
  40af88:	mov	x2, #0x0                   	// #0
  40af8c:	mov	x1, #0x0                   	// #0
  40af90:	ldr	x0, [sp, #24]
  40af94:	bl	404ee0 <internal_hashmap_free@plt>
  40af98:	ldp	x29, x30, [sp], #32
  40af9c:	ret

000000000040afa0 <hashmap_get>:
  40afa0:	stp	x29, x30, [sp, #-32]!
  40afa4:	mov	x29, sp
  40afa8:	str	x0, [sp, #24]
  40afac:	str	x1, [sp, #16]
  40afb0:	ldr	x1, [sp, #16]
  40afb4:	ldr	x0, [sp, #24]
  40afb8:	bl	405430 <internal_hashmap_get@plt>
  40afbc:	ldp	x29, x30, [sp], #32
  40afc0:	ret

000000000040afc4 <hashmap_iterate>:
  40afc4:	stp	x29, x30, [sp, #-48]!
  40afc8:	mov	x29, sp
  40afcc:	str	x0, [sp, #40]
  40afd0:	str	x1, [sp, #32]
  40afd4:	str	x2, [sp, #24]
  40afd8:	str	x3, [sp, #16]
  40afdc:	ldr	x3, [sp, #16]
  40afe0:	ldr	x2, [sp, #24]
  40afe4:	ldr	x1, [sp, #32]
  40afe8:	ldr	x0, [sp, #40]
  40afec:	bl	405880 <internal_hashmap_iterate@plt>
  40aff0:	and	w0, w0, #0xff
  40aff4:	ldp	x29, x30, [sp], #48
  40aff8:	ret

000000000040affc <hashmap_freep>:
  40affc:	stp	x29, x30, [sp, #-32]!
  40b000:	mov	x29, sp
  40b004:	str	x0, [sp, #24]
  40b008:	ldr	x0, [sp, #24]
  40b00c:	ldr	x0, [x0]
  40b010:	cmp	x0, #0x0
  40b014:	b.eq	40b024 <hashmap_freep+0x28>  // b.none
  40b018:	ldr	x0, [sp, #24]
  40b01c:	ldr	x0, [x0]
  40b020:	bl	40af7c <hashmap_free>
  40b024:	nop
  40b028:	ldp	x29, x30, [sp], #32
  40b02c:	ret

000000000040b030 <streq_ptr>:
  40b030:	stp	x29, x30, [sp, #-32]!
  40b034:	mov	x29, sp
  40b038:	str	x0, [sp, #24]
  40b03c:	str	x1, [sp, #16]
  40b040:	ldr	x1, [sp, #16]
  40b044:	ldr	x0, [sp, #24]
  40b048:	bl	404f20 <strcmp_ptr@plt>
  40b04c:	cmp	w0, #0x0
  40b050:	cset	w0, eq  // eq = none
  40b054:	and	w0, w0, #0xff
  40b058:	ldp	x29, x30, [sp], #32
  40b05c:	ret

000000000040b060 <strempty>:
  40b060:	sub	sp, sp, #0x10
  40b064:	str	x0, [sp, #8]
  40b068:	ldr	x0, [sp, #8]
  40b06c:	cmp	x0, #0x0
  40b070:	b.ne	40b07c <strempty+0x1c>  // b.any
  40b074:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40b078:	add	x0, x0, #0x90
  40b07c:	add	sp, sp, #0x10
  40b080:	ret

000000000040b084 <isempty>:
  40b084:	sub	sp, sp, #0x10
  40b088:	str	x0, [sp, #8]
  40b08c:	ldr	x0, [sp, #8]
  40b090:	cmp	x0, #0x0
  40b094:	b.eq	40b0a8 <isempty+0x24>  // b.none
  40b098:	ldr	x0, [sp, #8]
  40b09c:	ldrb	w0, [x0]
  40b0a0:	cmp	w0, #0x0
  40b0a4:	b.ne	40b0b0 <isempty+0x2c>  // b.any
  40b0a8:	mov	w0, #0x1                   	// #1
  40b0ac:	b	40b0b4 <isempty+0x30>
  40b0b0:	mov	w0, #0x0                   	// #0
  40b0b4:	and	w0, w0, #0x1
  40b0b8:	and	w0, w0, #0xff
  40b0bc:	add	sp, sp, #0x10
  40b0c0:	ret

000000000040b0c4 <errno_or_else>:
  40b0c4:	stp	x29, x30, [sp, #-32]!
  40b0c8:	mov	x29, sp
  40b0cc:	str	w0, [sp, #28]
  40b0d0:	bl	4054d0 <__errno_location@plt>
  40b0d4:	ldr	w0, [x0]
  40b0d8:	cmp	w0, #0x0
  40b0dc:	b.le	40b0f0 <errno_or_else+0x2c>
  40b0e0:	bl	4054d0 <__errno_location@plt>
  40b0e4:	ldr	w0, [x0]
  40b0e8:	neg	w0, w0
  40b0ec:	b	40b100 <errno_or_else+0x3c>
  40b0f0:	ldr	w0, [sp, #28]
  40b0f4:	cmp	w0, #0x0
  40b0f8:	cneg	w0, w0, lt  // lt = tstop
  40b0fc:	neg	w0, w0
  40b100:	ldp	x29, x30, [sp], #32
  40b104:	ret

000000000040b108 <closep>:
  40b108:	stp	x29, x30, [sp, #-32]!
  40b10c:	mov	x29, sp
  40b110:	str	x0, [sp, #24]
  40b114:	ldr	x0, [sp, #24]
  40b118:	ldr	w0, [x0]
  40b11c:	bl	405240 <safe_close@plt>
  40b120:	nop
  40b124:	ldp	x29, x30, [sp], #32
  40b128:	ret

000000000040b12c <close_pairp>:
  40b12c:	stp	x29, x30, [sp, #-32]!
  40b130:	mov	x29, sp
  40b134:	str	x0, [sp, #24]
  40b138:	ldr	x0, [sp, #24]
  40b13c:	bl	405270 <safe_close_pair@plt>
  40b140:	nop
  40b144:	ldp	x29, x30, [sp], #32
  40b148:	ret

000000000040b14c <fclosep>:
  40b14c:	stp	x29, x30, [sp, #-32]!
  40b150:	mov	x29, sp
  40b154:	str	x0, [sp, #24]
  40b158:	ldr	x0, [sp, #24]
  40b15c:	ldr	x0, [x0]
  40b160:	bl	404e20 <safe_fclose@plt>
  40b164:	nop
  40b168:	ldp	x29, x30, [sp], #32
  40b16c:	ret

000000000040b170 <read_nul_string>:
  40b170:	stp	x29, x30, [sp, #-48]!
  40b174:	mov	x29, sp
  40b178:	str	x0, [sp, #40]
  40b17c:	str	x1, [sp, #32]
  40b180:	str	x2, [sp, #24]
  40b184:	ldr	x3, [sp, #24]
  40b188:	mov	w2, #0x1                   	// #1
  40b18c:	ldr	x1, [sp, #32]
  40b190:	ldr	x0, [sp, #40]
  40b194:	bl	404e50 <read_line_full@plt>
  40b198:	ldp	x29, x30, [sp], #48
  40b19c:	ret

000000000040b1a0 <FILE_SIZE_VALID>:
  40b1a0:	sub	sp, sp, #0x10
  40b1a4:	str	x0, [sp, #8]
  40b1a8:	ldr	x0, [sp, #8]
  40b1ac:	mvn	x0, x0
  40b1b0:	lsr	x0, x0, #63
  40b1b4:	and	w0, w0, #0xff
  40b1b8:	add	sp, sp, #0x10
  40b1bc:	ret

000000000040b1c0 <FILE_SIZE_VALID_OR_INFINITY>:
  40b1c0:	stp	x29, x30, [sp, #-32]!
  40b1c4:	mov	x29, sp
  40b1c8:	str	x0, [sp, #24]
  40b1cc:	ldr	x0, [sp, #24]
  40b1d0:	cmn	x0, #0x1
  40b1d4:	b.ne	40b1e0 <FILE_SIZE_VALID_OR_INFINITY+0x20>  // b.any
  40b1d8:	mov	w0, #0x1                   	// #1
  40b1dc:	b	40b1ec <FILE_SIZE_VALID_OR_INFINITY+0x2c>
  40b1e0:	ldr	x0, [sp, #24]
  40b1e4:	bl	40b1a0 <FILE_SIZE_VALID>
  40b1e8:	and	w0, w0, #0xff
  40b1ec:	ldp	x29, x30, [sp], #32
  40b1f0:	ret

000000000040b1f4 <image_unrefp>:
  40b1f4:	stp	x29, x30, [sp, #-32]!
  40b1f8:	mov	x29, sp
  40b1fc:	str	x0, [sp, #24]
  40b200:	ldr	x0, [sp, #24]
  40b204:	ldr	x0, [x0]
  40b208:	cmp	x0, #0x0
  40b20c:	b.eq	40b21c <image_unrefp+0x28>  // b.none
  40b210:	ldr	x0, [sp, #24]
  40b214:	ldr	x0, [x0]
  40b218:	bl	404df0 <image_unref@plt>
  40b21c:	nop
  40b220:	ldp	x29, x30, [sp], #32
  40b224:	ret

000000000040b228 <IMAGE_IS_HIDDEN>:
  40b228:	stp	x29, x30, [sp, #-32]!
  40b22c:	mov	x29, sp
  40b230:	str	x0, [sp, #24]
  40b234:	ldr	x0, [sp, #24]
  40b238:	cmp	x0, #0x0
  40b23c:	cset	w0, eq  // eq = none
  40b240:	and	w0, w0, #0xff
  40b244:	and	x0, x0, #0xff
  40b248:	cmp	x0, #0x0
  40b24c:	b.eq	40b278 <IMAGE_IS_HIDDEN+0x50>  // b.none
  40b250:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40b254:	add	x1, x0, #0x9b
  40b258:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  40b25c:	add	x4, x0, #0x198
  40b260:	mov	w3, #0x59                  	// #89
  40b264:	mov	x2, x1
  40b268:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40b26c:	add	x1, x0, #0xb8
  40b270:	mov	w0, #0x0                   	// #0
  40b274:	bl	4052a0 <log_assert_failed_realm@plt>
  40b278:	ldr	x0, [sp, #24]
  40b27c:	ldr	x0, [x0, #8]
  40b280:	cmp	x0, #0x0
  40b284:	b.eq	40b2a4 <IMAGE_IS_HIDDEN+0x7c>  // b.none
  40b288:	ldr	x0, [sp, #24]
  40b28c:	ldr	x0, [x0, #8]
  40b290:	ldrb	w0, [x0]
  40b294:	cmp	w0, #0x2e
  40b298:	b.ne	40b2a4 <IMAGE_IS_HIDDEN+0x7c>  // b.any
  40b29c:	mov	w0, #0x1                   	// #1
  40b2a0:	b	40b2a8 <IMAGE_IS_HIDDEN+0x80>
  40b2a4:	mov	w0, #0x0                   	// #0
  40b2a8:	and	w0, w0, #0x1
  40b2ac:	and	w0, w0, #0xff
  40b2b0:	ldp	x29, x30, [sp], #32
  40b2b4:	ret

000000000040b2b8 <IMAGE_IS_VENDOR>:
  40b2b8:	stp	x29, x30, [sp, #-32]!
  40b2bc:	mov	x29, sp
  40b2c0:	str	x0, [sp, #24]
  40b2c4:	ldr	x0, [sp, #24]
  40b2c8:	cmp	x0, #0x0
  40b2cc:	cset	w0, eq  // eq = none
  40b2d0:	and	w0, w0, #0xff
  40b2d4:	and	x0, x0, #0xff
  40b2d8:	cmp	x0, #0x0
  40b2dc:	b.eq	40b308 <IMAGE_IS_VENDOR+0x50>  // b.none
  40b2e0:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40b2e4:	add	x1, x0, #0x9b
  40b2e8:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  40b2ec:	add	x4, x0, #0x178
  40b2f0:	mov	w3, #0x5f                  	// #95
  40b2f4:	mov	x2, x1
  40b2f8:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40b2fc:	add	x1, x0, #0xb8
  40b300:	mov	w0, #0x0                   	// #0
  40b304:	bl	4052a0 <log_assert_failed_realm@plt>
  40b308:	ldr	x0, [sp, #24]
  40b30c:	ldr	x0, [x0, #16]
  40b310:	cmp	x0, #0x0
  40b314:	b.eq	40b340 <IMAGE_IS_VENDOR+0x88>  // b.none
  40b318:	ldr	x0, [sp, #24]
  40b31c:	ldr	x2, [x0, #16]
  40b320:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40b324:	add	x1, x0, #0xc0
  40b328:	mov	x0, x2
  40b32c:	bl	4054a0 <path_startswith@plt>
  40b330:	cmp	x0, #0x0
  40b334:	b.eq	40b340 <IMAGE_IS_VENDOR+0x88>  // b.none
  40b338:	mov	w0, #0x1                   	// #1
  40b33c:	b	40b344 <IMAGE_IS_VENDOR+0x8c>
  40b340:	mov	w0, #0x0                   	// #0
  40b344:	and	w0, w0, #0x1
  40b348:	and	w0, w0, #0xff
  40b34c:	ldp	x29, x30, [sp], #32
  40b350:	ret

000000000040b354 <IMAGE_IS_HOST>:
  40b354:	stp	x29, x30, [sp, #-32]!
  40b358:	mov	x29, sp
  40b35c:	str	x0, [sp, #24]
  40b360:	ldr	x0, [sp, #24]
  40b364:	cmp	x0, #0x0
  40b368:	cset	w0, eq  // eq = none
  40b36c:	and	w0, w0, #0xff
  40b370:	and	x0, x0, #0xff
  40b374:	cmp	x0, #0x0
  40b378:	b.eq	40b3a4 <IMAGE_IS_HOST+0x50>  // b.none
  40b37c:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40b380:	add	x1, x0, #0x9b
  40b384:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  40b388:	add	x4, x0, #0x188
  40b38c:	mov	w3, #0x65                  	// #101
  40b390:	mov	x2, x1
  40b394:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40b398:	add	x1, x0, #0xb8
  40b39c:	mov	w0, #0x0                   	// #0
  40b3a0:	bl	4052a0 <log_assert_failed_realm@plt>
  40b3a4:	ldr	x0, [sp, #24]
  40b3a8:	ldr	x0, [x0, #8]
  40b3ac:	cmp	x0, #0x0
  40b3b0:	b.eq	40b3dc <IMAGE_IS_HOST+0x88>  // b.none
  40b3b4:	ldr	x0, [sp, #24]
  40b3b8:	ldr	x2, [x0, #8]
  40b3bc:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40b3c0:	add	x1, x0, #0xc8
  40b3c4:	mov	x0, x2
  40b3c8:	bl	405840 <strcmp@plt>
  40b3cc:	cmp	w0, #0x0
  40b3d0:	b.ne	40b3dc <IMAGE_IS_HOST+0x88>  // b.any
  40b3d4:	mov	w0, #0x1                   	// #1
  40b3d8:	b	40b41c <IMAGE_IS_HOST+0xc8>
  40b3dc:	ldr	x0, [sp, #24]
  40b3e0:	ldr	x0, [x0, #16]
  40b3e4:	cmp	x0, #0x0
  40b3e8:	b.eq	40b418 <IMAGE_IS_HOST+0xc4>  // b.none
  40b3ec:	ldr	x0, [sp, #24]
  40b3f0:	ldr	x2, [x0, #16]
  40b3f4:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40b3f8:	add	x1, x0, #0xd0
  40b3fc:	mov	x0, x2
  40b400:	bl	405120 <path_equal@plt>
  40b404:	and	w0, w0, #0xff
  40b408:	cmp	w0, #0x0
  40b40c:	b.eq	40b418 <IMAGE_IS_HOST+0xc4>  // b.none
  40b410:	mov	w0, #0x1                   	// #1
  40b414:	b	40b41c <IMAGE_IS_HOST+0xc8>
  40b418:	mov	w0, #0x0                   	// #0
  40b41c:	ldp	x29, x30, [sp], #32
  40b420:	ret

000000000040b424 <PID_TO_PTR>:
  40b424:	sub	sp, sp, #0x10
  40b428:	str	w0, [sp, #12]
  40b42c:	ldrsw	x0, [sp, #12]
  40b430:	add	sp, sp, #0x10
  40b434:	ret

000000000040b438 <safe_fork>:
  40b438:	stp	x29, x30, [sp, #-48]!
  40b43c:	mov	x29, sp
  40b440:	str	x0, [sp, #40]
  40b444:	str	w1, [sp, #36]
  40b448:	str	x2, [sp, #24]
  40b44c:	ldr	x4, [sp, #24]
  40b450:	ldr	w3, [sp, #36]
  40b454:	mov	x2, #0x0                   	// #0
  40b458:	mov	x1, #0x0                   	// #0
  40b45c:	ldr	x0, [sp, #40]
  40b460:	bl	4058e0 <safe_fork_full@plt>
  40b464:	ldp	x29, x30, [sp], #48
  40b468:	ret

000000000040b46c <gid_is_valid>:
  40b46c:	stp	x29, x30, [sp, #-32]!
  40b470:	mov	x29, sp
  40b474:	str	w0, [sp, #28]
  40b478:	ldr	w0, [sp, #28]
  40b47c:	bl	405420 <uid_is_valid@plt>
  40b480:	and	w0, w0, #0xff
  40b484:	ldp	x29, x30, [sp], #32
  40b488:	ret

000000000040b48c <property_get_pool_path>:
  40b48c:	stp	x29, x30, [sp, #-80]!
  40b490:	mov	x29, sp
  40b494:	str	x0, [sp, #72]
  40b498:	str	x1, [sp, #64]
  40b49c:	str	x2, [sp, #56]
  40b4a0:	str	x3, [sp, #48]
  40b4a4:	str	x4, [sp, #40]
  40b4a8:	str	x5, [sp, #32]
  40b4ac:	str	x6, [sp, #24]
  40b4b0:	ldr	x0, [sp, #72]
  40b4b4:	cmp	x0, #0x0
  40b4b8:	cset	w0, eq  // eq = none
  40b4bc:	and	w0, w0, #0xff
  40b4c0:	and	x0, x0, #0xff
  40b4c4:	cmp	x0, #0x0
  40b4c8:	b.eq	40b4f4 <property_get_pool_path+0x68>  // b.none
  40b4cc:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40b4d0:	add	x1, x0, #0xdb
  40b4d4:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40b4d8:	add	x4, x0, #0xfd8
  40b4dc:	mov	w3, #0x21                  	// #33
  40b4e0:	mov	x2, x1
  40b4e4:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40b4e8:	add	x1, x0, #0xf8
  40b4ec:	mov	w0, #0x0                   	// #0
  40b4f0:	bl	4052a0 <log_assert_failed_realm@plt>
  40b4f4:	ldr	x0, [sp, #40]
  40b4f8:	cmp	x0, #0x0
  40b4fc:	cset	w0, eq  // eq = none
  40b500:	and	w0, w0, #0xff
  40b504:	and	x0, x0, #0xff
  40b508:	cmp	x0, #0x0
  40b50c:	b.eq	40b538 <property_get_pool_path+0xac>  // b.none
  40b510:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40b514:	add	x1, x0, #0xdb
  40b518:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40b51c:	add	x4, x0, #0xfd8
  40b520:	mov	w3, #0x21                  	// #33
  40b524:	mov	x2, x1
  40b528:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40b52c:	add	x1, x0, #0x100
  40b530:	mov	w0, #0x0                   	// #0
  40b534:	bl	4052a0 <log_assert_failed_realm@plt>
  40b538:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40b53c:	add	x2, x0, #0x108
  40b540:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40b544:	add	x1, x0, #0x120
  40b548:	ldr	x0, [sp, #40]
  40b54c:	bl	4051f0 <sd_bus_message_append@plt>
  40b550:	ldp	x29, x30, [sp], #80
  40b554:	ret

000000000040b558 <property_get_pool_usage>:
  40b558:	stp	x29, x30, [sp, #-160]!
  40b55c:	mov	x29, sp
  40b560:	str	x19, [sp, #16]
  40b564:	str	x0, [sp, #88]
  40b568:	str	x1, [sp, #80]
  40b56c:	str	x2, [sp, #72]
  40b570:	str	x3, [sp, #64]
  40b574:	str	x4, [sp, #56]
  40b578:	str	x5, [sp, #48]
  40b57c:	str	x6, [sp, #40]
  40b580:	adrp	x0, 431000 <machine_vtable+0x4a0>
  40b584:	ldr	x0, [x0, #3952]
  40b588:	ldr	x1, [x0]
  40b58c:	str	x1, [sp, #152]
  40b590:	mov	x1, #0x0                   	// #0
  40b594:	mov	w0, #0xffffffff            	// #-1
  40b598:	str	w0, [sp, #108]
  40b59c:	mov	x0, #0xffffffffffffffff    	// #-1
  40b5a0:	str	x0, [sp, #112]
  40b5a4:	ldr	x0, [sp, #88]
  40b5a8:	cmp	x0, #0x0
  40b5ac:	cset	w0, eq  // eq = none
  40b5b0:	and	w0, w0, #0xff
  40b5b4:	and	x0, x0, #0xff
  40b5b8:	cmp	x0, #0x0
  40b5bc:	b.eq	40b5e8 <property_get_pool_usage+0x90>  // b.none
  40b5c0:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40b5c4:	add	x1, x0, #0xdb
  40b5c8:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40b5cc:	add	x4, x0, #0xff0
  40b5d0:	mov	w3, #0x2f                  	// #47
  40b5d4:	mov	x2, x1
  40b5d8:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40b5dc:	add	x1, x0, #0xf8
  40b5e0:	mov	w0, #0x0                   	// #0
  40b5e4:	bl	4052a0 <log_assert_failed_realm@plt>
  40b5e8:	ldr	x0, [sp, #56]
  40b5ec:	cmp	x0, #0x0
  40b5f0:	cset	w0, eq  // eq = none
  40b5f4:	and	w0, w0, #0xff
  40b5f8:	and	x0, x0, #0xff
  40b5fc:	cmp	x0, #0x0
  40b600:	b.eq	40b62c <property_get_pool_usage+0xd4>  // b.none
  40b604:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40b608:	add	x1, x0, #0xdb
  40b60c:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40b610:	add	x4, x0, #0xff0
  40b614:	mov	w3, #0x30                  	// #48
  40b618:	mov	x2, x1
  40b61c:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40b620:	add	x1, x0, #0x100
  40b624:	mov	w0, #0x0                   	// #0
  40b628:	bl	4052a0 <log_assert_failed_realm@plt>
  40b62c:	mov	w1, #0x4000                	// #16384
  40b630:	movk	w1, #0x8, lsl #16
  40b634:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40b638:	add	x0, x0, #0x108
  40b63c:	bl	405b30 <open64@plt>
  40b640:	str	w0, [sp, #108]
  40b644:	ldr	w0, [sp, #108]
  40b648:	cmp	w0, #0x0
  40b64c:	b.lt	40b674 <property_get_pool_usage+0x11c>  // b.tstop
  40b650:	ldr	w0, [sp, #108]
  40b654:	add	x1, sp, #0x78
  40b658:	mov	x2, x1
  40b65c:	mov	x1, #0x0                   	// #0
  40b660:	bl	405930 <btrfs_subvol_get_subtree_quota_fd@plt>
  40b664:	cmp	w0, #0x0
  40b668:	b.lt	40b674 <property_get_pool_usage+0x11c>  // b.tstop
  40b66c:	ldr	x0, [sp, #120]
  40b670:	str	x0, [sp, #112]
  40b674:	ldr	x2, [sp, #112]
  40b678:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40b67c:	add	x1, x0, #0x128
  40b680:	ldr	x0, [sp, #56]
  40b684:	bl	4051f0 <sd_bus_message_append@plt>
  40b688:	mov	w19, w0
  40b68c:	add	x0, sp, #0x6c
  40b690:	bl	40b108 <closep>
  40b694:	mov	w1, w19
  40b698:	adrp	x0, 431000 <machine_vtable+0x4a0>
  40b69c:	ldr	x0, [x0, #3952]
  40b6a0:	ldr	x2, [sp, #152]
  40b6a4:	ldr	x0, [x0]
  40b6a8:	eor	x0, x2, x0
  40b6ac:	cmp	x0, #0x0
  40b6b0:	b.eq	40b6b8 <property_get_pool_usage+0x160>  // b.none
  40b6b4:	bl	4055f0 <__stack_chk_fail@plt>
  40b6b8:	mov	w0, w1
  40b6bc:	ldr	x19, [sp, #16]
  40b6c0:	ldp	x29, x30, [sp], #160
  40b6c4:	ret

000000000040b6c8 <property_get_pool_limit>:
  40b6c8:	stp	x29, x30, [sp, #-160]!
  40b6cc:	mov	x29, sp
  40b6d0:	str	x19, [sp, #16]
  40b6d4:	str	x0, [sp, #88]
  40b6d8:	str	x1, [sp, #80]
  40b6dc:	str	x2, [sp, #72]
  40b6e0:	str	x3, [sp, #64]
  40b6e4:	str	x4, [sp, #56]
  40b6e8:	str	x5, [sp, #48]
  40b6ec:	str	x6, [sp, #40]
  40b6f0:	adrp	x0, 431000 <machine_vtable+0x4a0>
  40b6f4:	ldr	x0, [x0, #3952]
  40b6f8:	ldr	x1, [x0]
  40b6fc:	str	x1, [sp, #152]
  40b700:	mov	x1, #0x0                   	// #0
  40b704:	mov	w0, #0xffffffff            	// #-1
  40b708:	str	w0, [sp, #108]
  40b70c:	mov	x0, #0xffffffffffffffff    	// #-1
  40b710:	str	x0, [sp, #112]
  40b714:	ldr	x0, [sp, #88]
  40b718:	cmp	x0, #0x0
  40b71c:	cset	w0, eq  // eq = none
  40b720:	and	w0, w0, #0xff
  40b724:	and	x0, x0, #0xff
  40b728:	cmp	x0, #0x0
  40b72c:	b.eq	40b758 <property_get_pool_limit+0x90>  // b.none
  40b730:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40b734:	add	x1, x0, #0xdb
  40b738:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  40b73c:	add	x4, x0, #0x8
  40b740:	mov	w3, #0x49                  	// #73
  40b744:	mov	x2, x1
  40b748:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40b74c:	add	x1, x0, #0xf8
  40b750:	mov	w0, #0x0                   	// #0
  40b754:	bl	4052a0 <log_assert_failed_realm@plt>
  40b758:	ldr	x0, [sp, #56]
  40b75c:	cmp	x0, #0x0
  40b760:	cset	w0, eq  // eq = none
  40b764:	and	w0, w0, #0xff
  40b768:	and	x0, x0, #0xff
  40b76c:	cmp	x0, #0x0
  40b770:	b.eq	40b79c <property_get_pool_limit+0xd4>  // b.none
  40b774:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40b778:	add	x1, x0, #0xdb
  40b77c:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  40b780:	add	x4, x0, #0x8
  40b784:	mov	w3, #0x4a                  	// #74
  40b788:	mov	x2, x1
  40b78c:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40b790:	add	x1, x0, #0x100
  40b794:	mov	w0, #0x0                   	// #0
  40b798:	bl	4052a0 <log_assert_failed_realm@plt>
  40b79c:	mov	w1, #0x4000                	// #16384
  40b7a0:	movk	w1, #0x8, lsl #16
  40b7a4:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40b7a8:	add	x0, x0, #0x108
  40b7ac:	bl	405b30 <open64@plt>
  40b7b0:	str	w0, [sp, #108]
  40b7b4:	ldr	w0, [sp, #108]
  40b7b8:	cmp	w0, #0x0
  40b7bc:	b.lt	40b7e4 <property_get_pool_limit+0x11c>  // b.tstop
  40b7c0:	ldr	w0, [sp, #108]
  40b7c4:	add	x1, sp, #0x78
  40b7c8:	mov	x2, x1
  40b7cc:	mov	x1, #0x0                   	// #0
  40b7d0:	bl	405930 <btrfs_subvol_get_subtree_quota_fd@plt>
  40b7d4:	cmp	w0, #0x0
  40b7d8:	b.lt	40b7e4 <property_get_pool_limit+0x11c>  // b.tstop
  40b7dc:	ldr	x0, [sp, #136]
  40b7e0:	str	x0, [sp, #112]
  40b7e4:	ldr	x2, [sp, #112]
  40b7e8:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40b7ec:	add	x1, x0, #0x128
  40b7f0:	ldr	x0, [sp, #56]
  40b7f4:	bl	4051f0 <sd_bus_message_append@plt>
  40b7f8:	mov	w19, w0
  40b7fc:	add	x0, sp, #0x6c
  40b800:	bl	40b108 <closep>
  40b804:	mov	w1, w19
  40b808:	adrp	x0, 431000 <machine_vtable+0x4a0>
  40b80c:	ldr	x0, [x0, #3952]
  40b810:	ldr	x2, [sp, #152]
  40b814:	ldr	x0, [x0]
  40b818:	eor	x0, x2, x0
  40b81c:	cmp	x0, #0x0
  40b820:	b.eq	40b828 <property_get_pool_limit+0x160>  // b.none
  40b824:	bl	4055f0 <__stack_chk_fail@plt>
  40b828:	mov	w0, w1
  40b82c:	ldr	x19, [sp, #16]
  40b830:	ldp	x29, x30, [sp], #160
  40b834:	ret

000000000040b838 <method_get_machine>:
  40b838:	stp	x29, x30, [sp, #-112]!
  40b83c:	mov	x29, sp
  40b840:	str	x19, [sp, #16]
  40b844:	str	x0, [sp, #56]
  40b848:	str	x1, [sp, #48]
  40b84c:	str	x2, [sp, #40]
  40b850:	adrp	x0, 431000 <machine_vtable+0x4a0>
  40b854:	ldr	x0, [x0, #3952]
  40b858:	ldr	x1, [x0]
  40b85c:	str	x1, [sp, #104]
  40b860:	mov	x1, #0x0                   	// #0
  40b864:	str	xzr, [sp, #72]
  40b868:	ldr	x0, [sp, #48]
  40b86c:	str	x0, [sp, #88]
  40b870:	ldr	x0, [sp, #56]
  40b874:	cmp	x0, #0x0
  40b878:	cset	w0, eq  // eq = none
  40b87c:	and	w0, w0, #0xff
  40b880:	and	x0, x0, #0xff
  40b884:	cmp	x0, #0x0
  40b888:	b.eq	40b8b4 <method_get_machine+0x7c>  // b.none
  40b88c:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40b890:	add	x1, x0, #0xdb
  40b894:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  40b898:	add	x4, x0, #0x20
  40b89c:	mov	w3, #0x5e                  	// #94
  40b8a0:	mov	x2, x1
  40b8a4:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40b8a8:	add	x1, x0, #0x130
  40b8ac:	mov	w0, #0x0                   	// #0
  40b8b0:	bl	4052a0 <log_assert_failed_realm@plt>
  40b8b4:	ldr	x0, [sp, #88]
  40b8b8:	cmp	x0, #0x0
  40b8bc:	cset	w0, eq  // eq = none
  40b8c0:	and	w0, w0, #0xff
  40b8c4:	and	x0, x0, #0xff
  40b8c8:	cmp	x0, #0x0
  40b8cc:	b.eq	40b8f8 <method_get_machine+0xc0>  // b.none
  40b8d0:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40b8d4:	add	x1, x0, #0xdb
  40b8d8:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  40b8dc:	add	x4, x0, #0x20
  40b8e0:	mov	w3, #0x5f                  	// #95
  40b8e4:	mov	x2, x1
  40b8e8:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40b8ec:	add	x1, x0, #0x138
  40b8f0:	mov	w0, #0x0                   	// #0
  40b8f4:	bl	4052a0 <log_assert_failed_realm@plt>
  40b8f8:	add	x0, sp, #0x50
  40b8fc:	mov	x2, x0
  40b900:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40b904:	add	x1, x0, #0x120
  40b908:	ldr	x0, [sp, #56]
  40b90c:	bl	4052b0 <sd_bus_message_read@plt>
  40b910:	str	w0, [sp, #68]
  40b914:	ldr	w0, [sp, #68]
  40b918:	cmp	w0, #0x0
  40b91c:	b.ge	40b928 <method_get_machine+0xf0>  // b.tcont
  40b920:	ldr	w19, [sp, #68]
  40b924:	b	40b9ac <method_get_machine+0x174>
  40b928:	ldr	x0, [sp, #88]
  40b92c:	ldr	x0, [x0, #16]
  40b930:	ldr	x1, [sp, #80]
  40b934:	bl	40afa0 <hashmap_get>
  40b938:	str	x0, [sp, #96]
  40b93c:	ldr	x0, [sp, #96]
  40b940:	cmp	x0, #0x0
  40b944:	b.ne	40b970 <method_get_machine+0x138>  // b.any
  40b948:	ldr	x0, [sp, #80]
  40b94c:	mov	x3, x0
  40b950:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40b954:	add	x2, x0, #0x140
  40b958:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40b95c:	add	x1, x0, #0x158
  40b960:	ldr	x0, [sp, #40]
  40b964:	bl	4055d0 <sd_bus_error_setf@plt>
  40b968:	mov	w19, w0
  40b96c:	b	40b9ac <method_get_machine+0x174>
  40b970:	ldr	x0, [sp, #96]
  40b974:	bl	41652c <machine_bus_path>
  40b978:	str	x0, [sp, #72]
  40b97c:	ldr	x0, [sp, #72]
  40b980:	cmp	x0, #0x0
  40b984:	b.ne	40b990 <method_get_machine+0x158>  // b.any
  40b988:	mov	w19, #0xfffffff4            	// #-12
  40b98c:	b	40b9ac <method_get_machine+0x174>
  40b990:	ldr	x0, [sp, #72]
  40b994:	mov	x2, x0
  40b998:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40b99c:	add	x1, x0, #0x180
  40b9a0:	ldr	x0, [sp, #56]
  40b9a4:	bl	404f00 <sd_bus_reply_method_return@plt>
  40b9a8:	mov	w19, w0
  40b9ac:	add	x0, sp, #0x48
  40b9b0:	bl	40ae74 <freep>
  40b9b4:	mov	w1, w19
  40b9b8:	adrp	x0, 431000 <machine_vtable+0x4a0>
  40b9bc:	ldr	x0, [x0, #3952]
  40b9c0:	ldr	x2, [sp, #104]
  40b9c4:	ldr	x0, [x0]
  40b9c8:	eor	x0, x2, x0
  40b9cc:	cmp	x0, #0x0
  40b9d0:	b.eq	40b9d8 <method_get_machine+0x1a0>  // b.none
  40b9d4:	bl	4055f0 <__stack_chk_fail@plt>
  40b9d8:	mov	w0, w1
  40b9dc:	ldr	x19, [sp, #16]
  40b9e0:	ldp	x29, x30, [sp], #112
  40b9e4:	ret

000000000040b9e8 <method_get_image>:
  40b9e8:	stp	x29, x30, [sp, #-112]!
  40b9ec:	mov	x29, sp
  40b9f0:	str	x19, [sp, #16]
  40b9f4:	str	x0, [sp, #56]
  40b9f8:	str	x1, [sp, #48]
  40b9fc:	str	x2, [sp, #40]
  40ba00:	adrp	x0, 431000 <machine_vtable+0x4a0>
  40ba04:	ldr	x0, [x0, #3952]
  40ba08:	ldr	x1, [x0]
  40ba0c:	str	x1, [sp, #104]
  40ba10:	mov	x1, #0x0                   	// #0
  40ba14:	str	xzr, [sp, #80]
  40ba18:	ldr	x0, [sp, #48]
  40ba1c:	str	x0, [sp, #96]
  40ba20:	ldr	x0, [sp, #56]
  40ba24:	cmp	x0, #0x0
  40ba28:	cset	w0, eq  // eq = none
  40ba2c:	and	w0, w0, #0xff
  40ba30:	and	x0, x0, #0xff
  40ba34:	cmp	x0, #0x0
  40ba38:	b.eq	40ba64 <method_get_image+0x7c>  // b.none
  40ba3c:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40ba40:	add	x1, x0, #0xdb
  40ba44:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  40ba48:	add	x4, x0, #0x38
  40ba4c:	mov	w3, #0x76                  	// #118
  40ba50:	mov	x2, x1
  40ba54:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40ba58:	add	x1, x0, #0x130
  40ba5c:	mov	w0, #0x0                   	// #0
  40ba60:	bl	4052a0 <log_assert_failed_realm@plt>
  40ba64:	ldr	x0, [sp, #96]
  40ba68:	cmp	x0, #0x0
  40ba6c:	cset	w0, eq  // eq = none
  40ba70:	and	w0, w0, #0xff
  40ba74:	and	x0, x0, #0xff
  40ba78:	cmp	x0, #0x0
  40ba7c:	b.eq	40baa8 <method_get_image+0xc0>  // b.none
  40ba80:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40ba84:	add	x1, x0, #0xdb
  40ba88:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  40ba8c:	add	x4, x0, #0x38
  40ba90:	mov	w3, #0x77                  	// #119
  40ba94:	mov	x2, x1
  40ba98:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40ba9c:	add	x1, x0, #0x138
  40baa0:	mov	w0, #0x0                   	// #0
  40baa4:	bl	4052a0 <log_assert_failed_realm@plt>
  40baa8:	add	x0, sp, #0x58
  40baac:	mov	x2, x0
  40bab0:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40bab4:	add	x1, x0, #0x120
  40bab8:	ldr	x0, [sp, #56]
  40babc:	bl	4052b0 <sd_bus_message_read@plt>
  40bac0:	str	w0, [sp, #76]
  40bac4:	ldr	w0, [sp, #76]
  40bac8:	cmp	w0, #0x0
  40bacc:	b.ge	40bad8 <method_get_image+0xf0>  // b.tcont
  40bad0:	ldr	w19, [sp, #76]
  40bad4:	b	40bb74 <method_get_image+0x18c>
  40bad8:	ldr	x0, [sp, #88]
  40badc:	mov	x2, #0x0                   	// #0
  40bae0:	mov	x1, x0
  40bae4:	mov	w0, #0x0                   	// #0
  40bae8:	bl	404ef0 <image_find@plt>
  40baec:	str	w0, [sp, #76]
  40baf0:	ldr	w0, [sp, #76]
  40baf4:	cmn	w0, #0x2
  40baf8:	b.ne	40bb24 <method_get_image+0x13c>  // b.any
  40bafc:	ldr	x0, [sp, #88]
  40bb00:	mov	x3, x0
  40bb04:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40bb08:	add	x2, x0, #0x188
  40bb0c:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40bb10:	add	x1, x0, #0x1a0
  40bb14:	ldr	x0, [sp, #40]
  40bb18:	bl	4055d0 <sd_bus_error_setf@plt>
  40bb1c:	mov	w19, w0
  40bb20:	b	40bb74 <method_get_image+0x18c>
  40bb24:	ldr	w0, [sp, #76]
  40bb28:	cmp	w0, #0x0
  40bb2c:	b.ge	40bb38 <method_get_image+0x150>  // b.tcont
  40bb30:	ldr	w19, [sp, #76]
  40bb34:	b	40bb74 <method_get_image+0x18c>
  40bb38:	ldr	x0, [sp, #88]
  40bb3c:	bl	418158 <image_bus_path>
  40bb40:	str	x0, [sp, #80]
  40bb44:	ldr	x0, [sp, #80]
  40bb48:	cmp	x0, #0x0
  40bb4c:	b.ne	40bb58 <method_get_image+0x170>  // b.any
  40bb50:	mov	w19, #0xfffffff4            	// #-12
  40bb54:	b	40bb74 <method_get_image+0x18c>
  40bb58:	ldr	x0, [sp, #80]
  40bb5c:	mov	x2, x0
  40bb60:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40bb64:	add	x1, x0, #0x180
  40bb68:	ldr	x0, [sp, #56]
  40bb6c:	bl	404f00 <sd_bus_reply_method_return@plt>
  40bb70:	mov	w19, w0
  40bb74:	add	x0, sp, #0x50
  40bb78:	bl	40ae74 <freep>
  40bb7c:	mov	w1, w19
  40bb80:	adrp	x0, 431000 <machine_vtable+0x4a0>
  40bb84:	ldr	x0, [x0, #3952]
  40bb88:	ldr	x2, [sp, #104]
  40bb8c:	ldr	x0, [x0]
  40bb90:	eor	x0, x2, x0
  40bb94:	cmp	x0, #0x0
  40bb98:	b.eq	40bba0 <method_get_image+0x1b8>  // b.none
  40bb9c:	bl	4055f0 <__stack_chk_fail@plt>
  40bba0:	mov	w0, w1
  40bba4:	ldr	x19, [sp, #16]
  40bba8:	ldp	x29, x30, [sp], #112
  40bbac:	ret

000000000040bbb0 <method_get_machine_by_pid>:
  40bbb0:	stp	x29, x30, [sp, #-112]!
  40bbb4:	mov	x29, sp
  40bbb8:	stp	x19, x20, [sp, #16]
  40bbbc:	str	x0, [sp, #56]
  40bbc0:	str	x1, [sp, #48]
  40bbc4:	str	x2, [sp, #40]
  40bbc8:	adrp	x0, 431000 <machine_vtable+0x4a0>
  40bbcc:	ldr	x0, [x0, #3952]
  40bbd0:	ldr	x1, [x0]
  40bbd4:	str	x1, [sp, #104]
  40bbd8:	mov	x1, #0x0                   	// #0
  40bbdc:	str	xzr, [sp, #72]
  40bbe0:	ldr	x0, [sp, #48]
  40bbe4:	str	x0, [sp, #96]
  40bbe8:	str	xzr, [sp, #80]
  40bbec:	ldr	x0, [sp, #56]
  40bbf0:	cmp	x0, #0x0
  40bbf4:	cset	w0, eq  // eq = none
  40bbf8:	and	w0, w0, #0xff
  40bbfc:	and	x0, x0, #0xff
  40bc00:	cmp	x0, #0x0
  40bc04:	b.eq	40bc30 <method_get_machine_by_pid+0x80>  // b.none
  40bc08:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40bc0c:	add	x1, x0, #0xdb
  40bc10:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  40bc14:	add	x4, x0, #0x50
  40bc18:	mov	w3, #0x91                  	// #145
  40bc1c:	mov	x2, x1
  40bc20:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40bc24:	add	x1, x0, #0x130
  40bc28:	mov	w0, #0x0                   	// #0
  40bc2c:	bl	4052a0 <log_assert_failed_realm@plt>
  40bc30:	ldr	x0, [sp, #96]
  40bc34:	cmp	x0, #0x0
  40bc38:	cset	w0, eq  // eq = none
  40bc3c:	and	w0, w0, #0xff
  40bc40:	and	x0, x0, #0xff
  40bc44:	cmp	x0, #0x0
  40bc48:	b.eq	40bc74 <method_get_machine_by_pid+0xc4>  // b.none
  40bc4c:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40bc50:	add	x1, x0, #0xdb
  40bc54:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  40bc58:	add	x4, x0, #0x50
  40bc5c:	mov	w3, #0x92                  	// #146
  40bc60:	mov	x2, x1
  40bc64:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40bc68:	add	x1, x0, #0x138
  40bc6c:	mov	w0, #0x0                   	// #0
  40bc70:	bl	4052a0 <log_assert_failed_realm@plt>
  40bc74:	add	x0, sp, #0x40
  40bc78:	mov	x2, x0
  40bc7c:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40bc80:	add	x1, x0, #0x1c8
  40bc84:	ldr	x0, [sp, #56]
  40bc88:	bl	4052b0 <sd_bus_message_read@plt>
  40bc8c:	str	w0, [sp, #68]
  40bc90:	ldr	w0, [sp, #68]
  40bc94:	cmp	w0, #0x0
  40bc98:	b.ge	40bca4 <method_get_machine_by_pid+0xf4>  // b.tcont
  40bc9c:	ldr	w19, [sp, #68]
  40bca0:	b	40bdd4 <method_get_machine_by_pid+0x224>
  40bca4:	ldr	w0, [sp, #64]
  40bca8:	cmp	w0, #0x0
  40bcac:	b.ge	40bcb8 <method_get_machine_by_pid+0x108>  // b.tcont
  40bcb0:	mov	w19, #0xffffffea            	// #-22
  40bcb4:	b	40bdd4 <method_get_machine_by_pid+0x224>
  40bcb8:	ldr	w0, [sp, #64]
  40bcbc:	cmp	w0, #0x0
  40bcc0:	b.ne	40bd34 <method_get_machine_by_pid+0x184>  // b.any
  40bcc4:	str	xzr, [sp, #88]
  40bcc8:	add	x0, sp, #0x58
  40bccc:	mov	x2, x0
  40bcd0:	mov	x1, #0x1                   	// #1
  40bcd4:	ldr	x0, [sp, #56]
  40bcd8:	bl	405c10 <sd_bus_query_sender_creds@plt>
  40bcdc:	str	w0, [sp, #68]
  40bce0:	ldr	w0, [sp, #68]
  40bce4:	cmp	w0, #0x0
  40bce8:	b.ge	40bcf8 <method_get_machine_by_pid+0x148>  // b.tcont
  40bcec:	ldr	w19, [sp, #68]
  40bcf0:	mov	w20, #0x0                   	// #0
  40bcf4:	b	40bd24 <method_get_machine_by_pid+0x174>
  40bcf8:	ldr	x0, [sp, #88]
  40bcfc:	add	x1, sp, #0x40
  40bd00:	bl	404e00 <sd_bus_creds_get_pid@plt>
  40bd04:	str	w0, [sp, #68]
  40bd08:	ldr	w0, [sp, #68]
  40bd0c:	cmp	w0, #0x0
  40bd10:	b.ge	40bd20 <method_get_machine_by_pid+0x170>  // b.tcont
  40bd14:	ldr	w19, [sp, #68]
  40bd18:	mov	w20, #0x0                   	// #0
  40bd1c:	b	40bd24 <method_get_machine_by_pid+0x174>
  40bd20:	mov	w20, #0x1                   	// #1
  40bd24:	add	x0, sp, #0x58
  40bd28:	bl	40af48 <sd_bus_creds_unrefp>
  40bd2c:	cmp	w20, #0x1
  40bd30:	b.ne	40bdd4 <method_get_machine_by_pid+0x224>  // b.any
  40bd34:	ldr	w0, [sp, #64]
  40bd38:	add	x1, sp, #0x50
  40bd3c:	mov	x2, x1
  40bd40:	mov	w1, w0
  40bd44:	ldr	x0, [sp, #96]
  40bd48:	bl	4103e0 <manager_get_machine_by_pid>
  40bd4c:	str	w0, [sp, #68]
  40bd50:	ldr	w0, [sp, #68]
  40bd54:	cmp	w0, #0x0
  40bd58:	b.ge	40bd64 <method_get_machine_by_pid+0x1b4>  // b.tcont
  40bd5c:	ldr	w19, [sp, #68]
  40bd60:	b	40bdd4 <method_get_machine_by_pid+0x224>
  40bd64:	ldr	x0, [sp, #80]
  40bd68:	cmp	x0, #0x0
  40bd6c:	b.ne	40bd98 <method_get_machine_by_pid+0x1e8>  // b.any
  40bd70:	ldr	w0, [sp, #64]
  40bd74:	mov	w3, w0
  40bd78:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40bd7c:	add	x2, x0, #0x1d0
  40bd80:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40bd84:	add	x1, x0, #0x200
  40bd88:	ldr	x0, [sp, #40]
  40bd8c:	bl	4055d0 <sd_bus_error_setf@plt>
  40bd90:	mov	w19, w0
  40bd94:	b	40bdd4 <method_get_machine_by_pid+0x224>
  40bd98:	ldr	x0, [sp, #80]
  40bd9c:	bl	41652c <machine_bus_path>
  40bda0:	str	x0, [sp, #72]
  40bda4:	ldr	x0, [sp, #72]
  40bda8:	cmp	x0, #0x0
  40bdac:	b.ne	40bdb8 <method_get_machine_by_pid+0x208>  // b.any
  40bdb0:	mov	w19, #0xfffffff4            	// #-12
  40bdb4:	b	40bdd4 <method_get_machine_by_pid+0x224>
  40bdb8:	ldr	x0, [sp, #72]
  40bdbc:	mov	x2, x0
  40bdc0:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40bdc4:	add	x1, x0, #0x180
  40bdc8:	ldr	x0, [sp, #56]
  40bdcc:	bl	404f00 <sd_bus_reply_method_return@plt>
  40bdd0:	mov	w19, w0
  40bdd4:	add	x0, sp, #0x48
  40bdd8:	bl	40ae74 <freep>
  40bddc:	mov	w1, w19
  40bde0:	adrp	x0, 431000 <machine_vtable+0x4a0>
  40bde4:	ldr	x0, [x0, #3952]
  40bde8:	ldr	x2, [sp, #104]
  40bdec:	ldr	x0, [x0]
  40bdf0:	eor	x0, x2, x0
  40bdf4:	cmp	x0, #0x0
  40bdf8:	b.eq	40be00 <method_get_machine_by_pid+0x250>  // b.none
  40bdfc:	bl	4055f0 <__stack_chk_fail@plt>
  40be00:	mov	w0, w1
  40be04:	ldp	x19, x20, [sp, #16]
  40be08:	ldp	x29, x30, [sp], #112
  40be0c:	ret

000000000040be10 <method_list_machines>:
  40be10:	stp	x29, x30, [sp, #-144]!
  40be14:	mov	x29, sp
  40be18:	stp	x19, x20, [sp, #16]
  40be1c:	str	x21, [sp, #32]
  40be20:	str	x0, [sp, #72]
  40be24:	str	x1, [sp, #64]
  40be28:	str	x2, [sp, #56]
  40be2c:	adrp	x0, 431000 <machine_vtable+0x4a0>
  40be30:	ldr	x0, [x0, #3952]
  40be34:	ldr	x1, [x0]
  40be38:	str	x1, [sp, #136]
  40be3c:	mov	x1, #0x0                   	// #0
  40be40:	str	xzr, [sp, #88]
  40be44:	ldr	x0, [sp, #64]
  40be48:	str	x0, [sp, #112]
  40be4c:	ldr	x0, [sp, #72]
  40be50:	cmp	x0, #0x0
  40be54:	cset	w0, eq  // eq = none
  40be58:	and	w0, w0, #0xff
  40be5c:	and	x0, x0, #0xff
  40be60:	cmp	x0, #0x0
  40be64:	b.eq	40be90 <method_list_machines+0x80>  // b.none
  40be68:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40be6c:	add	x1, x0, #0xdb
  40be70:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  40be74:	add	x4, x0, #0x70
  40be78:	mov	w3, #0xbd                  	// #189
  40be7c:	mov	x2, x1
  40be80:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40be84:	add	x1, x0, #0x130
  40be88:	mov	w0, #0x0                   	// #0
  40be8c:	bl	4052a0 <log_assert_failed_realm@plt>
  40be90:	ldr	x0, [sp, #112]
  40be94:	cmp	x0, #0x0
  40be98:	cset	w0, eq  // eq = none
  40be9c:	and	w0, w0, #0xff
  40bea0:	and	x0, x0, #0xff
  40bea4:	cmp	x0, #0x0
  40bea8:	b.eq	40bed4 <method_list_machines+0xc4>  // b.none
  40beac:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40beb0:	add	x1, x0, #0xdb
  40beb4:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  40beb8:	add	x4, x0, #0x70
  40bebc:	mov	w3, #0xbe                  	// #190
  40bec0:	mov	x2, x1
  40bec4:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40bec8:	add	x1, x0, #0x138
  40becc:	mov	w0, #0x0                   	// #0
  40bed0:	bl	4052a0 <log_assert_failed_realm@plt>
  40bed4:	add	x0, sp, #0x58
  40bed8:	mov	x1, x0
  40bedc:	ldr	x0, [sp, #72]
  40bee0:	bl	4050d0 <sd_bus_message_new_method_return@plt>
  40bee4:	str	w0, [sp, #84]
  40bee8:	ldr	w0, [sp, #84]
  40beec:	cmp	w0, #0x0
  40bef0:	b.ge	40bf08 <method_list_machines+0xf8>  // b.tcont
  40bef4:	ldr	w1, [sp, #84]
  40bef8:	ldr	x0, [sp, #56]
  40befc:	bl	405b40 <sd_bus_error_set_errno@plt>
  40bf00:	mov	w19, w0
  40bf04:	b	40c06c <method_list_machines+0x25c>
  40bf08:	ldr	x3, [sp, #88]
  40bf0c:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40bf10:	add	x2, x0, #0x230
  40bf14:	mov	w1, #0x61                  	// #97
  40bf18:	mov	x0, x3
  40bf1c:	bl	405140 <sd_bus_message_open_container@plt>
  40bf20:	str	w0, [sp, #84]
  40bf24:	ldr	w0, [sp, #84]
  40bf28:	cmp	w0, #0x0
  40bf2c:	b.ge	40bf44 <method_list_machines+0x134>  // b.tcont
  40bf30:	ldr	w1, [sp, #84]
  40bf34:	ldr	x0, [sp, #56]
  40bf38:	bl	405b40 <sd_bus_error_set_errno@plt>
  40bf3c:	mov	w19, w0
  40bf40:	b	40c06c <method_list_machines+0x25c>
  40bf44:	mov	w0, #0xfffffffe            	// #-2
  40bf48:	str	w0, [sp, #120]
  40bf4c:	str	xzr, [sp, #128]
  40bf50:	b	40c004 <method_list_machines+0x1f4>
  40bf54:	str	xzr, [sp, #104]
  40bf58:	ldr	x0, [sp, #96]
  40bf5c:	bl	41652c <machine_bus_path>
  40bf60:	str	x0, [sp, #104]
  40bf64:	ldr	x0, [sp, #104]
  40bf68:	cmp	x0, #0x0
  40bf6c:	b.ne	40bf7c <method_list_machines+0x16c>  // b.any
  40bf70:	mov	w19, #0xfffffff4            	// #-12
  40bf74:	mov	w20, #0x0                   	// #0
  40bf78:	b	40bff4 <method_list_machines+0x1e4>
  40bf7c:	ldr	x20, [sp, #88]
  40bf80:	ldr	x0, [sp, #96]
  40bf84:	ldr	x21, [x0, #8]
  40bf88:	ldr	x0, [sp, #96]
  40bf8c:	ldr	w0, [x0, #32]
  40bf90:	bl	40ad84 <machine_class_to_string>
  40bf94:	bl	40b060 <strempty>
  40bf98:	mov	x2, x0
  40bf9c:	ldr	x0, [sp, #96]
  40bfa0:	ldr	x0, [x0, #48]
  40bfa4:	ldr	x1, [sp, #104]
  40bfa8:	mov	x5, x1
  40bfac:	mov	x4, x0
  40bfb0:	mov	x3, x2
  40bfb4:	mov	x2, x21
  40bfb8:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40bfbc:	add	x1, x0, #0x230
  40bfc0:	mov	x0, x20
  40bfc4:	bl	4051f0 <sd_bus_message_append@plt>
  40bfc8:	str	w0, [sp, #84]
  40bfcc:	ldr	w0, [sp, #84]
  40bfd0:	cmp	w0, #0x0
  40bfd4:	b.ge	40bff0 <method_list_machines+0x1e0>  // b.tcont
  40bfd8:	ldr	w1, [sp, #84]
  40bfdc:	ldr	x0, [sp, #56]
  40bfe0:	bl	405b40 <sd_bus_error_set_errno@plt>
  40bfe4:	mov	w19, w0
  40bfe8:	mov	w20, #0x0                   	// #0
  40bfec:	b	40bff4 <method_list_machines+0x1e4>
  40bff0:	mov	w20, #0x1                   	// #1
  40bff4:	add	x0, sp, #0x68
  40bff8:	bl	40ae74 <freep>
  40bffc:	cmp	w20, #0x1
  40c000:	b.ne	40c06c <method_list_machines+0x25c>  // b.any
  40c004:	ldr	x0, [sp, #112]
  40c008:	ldr	x0, [x0, #16]
  40c00c:	add	x2, sp, #0x60
  40c010:	add	x1, sp, #0x78
  40c014:	mov	x3, #0x0                   	// #0
  40c018:	bl	40afc4 <hashmap_iterate>
  40c01c:	and	w0, w0, #0xff
  40c020:	cmp	w0, #0x0
  40c024:	b.ne	40bf54 <method_list_machines+0x144>  // b.any
  40c028:	ldr	x0, [sp, #88]
  40c02c:	bl	405c30 <sd_bus_message_close_container@plt>
  40c030:	str	w0, [sp, #84]
  40c034:	ldr	w0, [sp, #84]
  40c038:	cmp	w0, #0x0
  40c03c:	b.ge	40c054 <method_list_machines+0x244>  // b.tcont
  40c040:	ldr	w1, [sp, #84]
  40c044:	ldr	x0, [sp, #56]
  40c048:	bl	405b40 <sd_bus_error_set_errno@plt>
  40c04c:	mov	w19, w0
  40c050:	b	40c06c <method_list_machines+0x25c>
  40c054:	ldr	x0, [sp, #88]
  40c058:	mov	x2, #0x0                   	// #0
  40c05c:	mov	x1, x0
  40c060:	mov	x0, #0x0                   	// #0
  40c064:	bl	405600 <sd_bus_send@plt>
  40c068:	mov	w19, w0
  40c06c:	add	x0, sp, #0x58
  40c070:	bl	40af14 <sd_bus_message_unrefp>
  40c074:	mov	w1, w19
  40c078:	adrp	x0, 431000 <machine_vtable+0x4a0>
  40c07c:	ldr	x0, [x0, #3952]
  40c080:	ldr	x2, [sp, #136]
  40c084:	ldr	x0, [x0]
  40c088:	eor	x0, x2, x0
  40c08c:	cmp	x0, #0x0
  40c090:	b.eq	40c098 <method_list_machines+0x288>  // b.none
  40c094:	bl	4055f0 <__stack_chk_fail@plt>
  40c098:	mov	w0, w1
  40c09c:	ldp	x19, x20, [sp, #16]
  40c0a0:	ldr	x21, [sp, #32]
  40c0a4:	ldp	x29, x30, [sp], #144
  40c0a8:	ret

000000000040c0ac <method_create_or_register_machine>:
  40c0ac:	stp	x29, x30, [sp, #-208]!
  40c0b0:	mov	x29, sp
  40c0b4:	stp	x19, x20, [sp, #16]
  40c0b8:	str	x0, [sp, #72]
  40c0bc:	str	x1, [sp, #64]
  40c0c0:	strb	w2, [sp, #63]
  40c0c4:	str	x3, [sp, #48]
  40c0c8:	str	x4, [sp, #40]
  40c0cc:	adrp	x0, 431000 <machine_vtable+0x4a0>
  40c0d0:	ldr	x0, [x0, #3952]
  40c0d4:	ldr	x1, [x0]
  40c0d8:	str	x1, [sp, #200]
  40c0dc:	mov	x1, #0x0                   	// #0
  40c0e0:	str	xzr, [sp, #136]
  40c0e4:	str	xzr, [sp, #160]
  40c0e8:	ldr	x0, [sp, #72]
  40c0ec:	cmp	x0, #0x0
  40c0f0:	cset	w0, eq  // eq = none
  40c0f4:	and	w0, w0, #0xff
  40c0f8:	and	x0, x0, #0xff
  40c0fc:	cmp	x0, #0x0
  40c100:	b.eq	40c12c <method_create_or_register_machine+0x80>  // b.none
  40c104:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40c108:	add	x1, x0, #0xdb
  40c10c:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  40c110:	add	x4, x0, #0x88
  40c114:	mov	w3, #0xea                  	// #234
  40c118:	mov	x2, x1
  40c11c:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40c120:	add	x1, x0, #0x238
  40c124:	mov	w0, #0x0                   	// #0
  40c128:	bl	4052a0 <log_assert_failed_realm@plt>
  40c12c:	ldr	x0, [sp, #64]
  40c130:	cmp	x0, #0x0
  40c134:	cset	w0, eq  // eq = none
  40c138:	and	w0, w0, #0xff
  40c13c:	and	x0, x0, #0xff
  40c140:	cmp	x0, #0x0
  40c144:	b.eq	40c170 <method_create_or_register_machine+0xc4>  // b.none
  40c148:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40c14c:	add	x1, x0, #0xdb
  40c150:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  40c154:	add	x4, x0, #0x88
  40c158:	mov	w3, #0xeb                  	// #235
  40c15c:	mov	x2, x1
  40c160:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40c164:	add	x1, x0, #0x130
  40c168:	mov	w0, #0x0                   	// #0
  40c16c:	bl	4052a0 <log_assert_failed_realm@plt>
  40c170:	ldr	x0, [sp, #48]
  40c174:	cmp	x0, #0x0
  40c178:	cset	w0, eq  // eq = none
  40c17c:	and	w0, w0, #0xff
  40c180:	and	x0, x0, #0xff
  40c184:	cmp	x0, #0x0
  40c188:	b.eq	40c1b4 <method_create_or_register_machine+0x108>  // b.none
  40c18c:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40c190:	add	x1, x0, #0xdb
  40c194:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  40c198:	add	x4, x0, #0x88
  40c19c:	mov	w3, #0xec                  	// #236
  40c1a0:	mov	x2, x1
  40c1a4:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40c1a8:	add	x1, x0, #0x240
  40c1ac:	mov	w0, #0x0                   	// #0
  40c1b0:	bl	4052a0 <log_assert_failed_realm@plt>
  40c1b4:	add	x0, sp, #0x68
  40c1b8:	mov	x2, x0
  40c1bc:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40c1c0:	add	x1, x0, #0x120
  40c1c4:	ldr	x0, [sp, #64]
  40c1c8:	bl	4052b0 <sd_bus_message_read@plt>
  40c1cc:	str	w0, [sp, #100]
  40c1d0:	ldr	w0, [sp, #100]
  40c1d4:	cmp	w0, #0x0
  40c1d8:	b.ge	40c1e4 <method_create_or_register_machine+0x138>  // b.tcont
  40c1dc:	ldr	w19, [sp, #100]
  40c1e0:	b	40c6ac <method_create_or_register_machine+0x600>
  40c1e4:	ldr	x0, [sp, #104]
  40c1e8:	mov	w1, #0x0                   	// #0
  40c1ec:	bl	405200 <hostname_is_valid@plt>
  40c1f0:	and	w0, w0, #0xff
  40c1f4:	eor	w0, w0, #0x1
  40c1f8:	and	w0, w0, #0xff
  40c1fc:	cmp	w0, #0x0
  40c200:	b.eq	40c224 <method_create_or_register_machine+0x178>  // b.none
  40c204:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40c208:	add	x2, x0, #0x248
  40c20c:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40c210:	add	x1, x0, #0x260
  40c214:	ldr	x0, [sp, #40]
  40c218:	bl	4055d0 <sd_bus_error_setf@plt>
  40c21c:	mov	w19, w0
  40c220:	b	40c6ac <method_create_or_register_machine+0x600>
  40c224:	add	x1, sp, #0x98
  40c228:	add	x0, sp, #0x90
  40c22c:	mov	x3, x1
  40c230:	mov	x2, x0
  40c234:	mov	w1, #0x79                  	// #121
  40c238:	ldr	x0, [sp, #64]
  40c23c:	bl	405b70 <sd_bus_message_read_array@plt>
  40c240:	str	w0, [sp, #100]
  40c244:	ldr	w0, [sp, #100]
  40c248:	cmp	w0, #0x0
  40c24c:	b.ge	40c258 <method_create_or_register_machine+0x1ac>  // b.tcont
  40c250:	ldr	w19, [sp, #100]
  40c254:	b	40c6ac <method_create_or_register_machine+0x600>
  40c258:	ldr	x0, [sp, #152]
  40c25c:	cmp	x0, #0x0
  40c260:	b.ne	40c270 <method_create_or_register_machine+0x1c4>  // b.any
  40c264:	str	xzr, [sp, #184]
  40c268:	str	xzr, [sp, #192]
  40c26c:	b	40c2b0 <method_create_or_register_machine+0x204>
  40c270:	ldr	x0, [sp, #152]
  40c274:	cmp	x0, #0x10
  40c278:	b.ne	40c290 <method_create_or_register_machine+0x1e4>  // b.any
  40c27c:	ldr	x1, [sp, #144]
  40c280:	ldr	x2, [sp, #152]
  40c284:	add	x0, sp, #0xb8
  40c288:	bl	405190 <memcpy@plt>
  40c28c:	b	40c2b0 <method_create_or_register_machine+0x204>
  40c290:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40c294:	add	x2, x0, #0x288
  40c298:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40c29c:	add	x1, x0, #0x260
  40c2a0:	ldr	x0, [sp, #40]
  40c2a4:	bl	4055d0 <sd_bus_error_setf@plt>
  40c2a8:	mov	w19, w0
  40c2ac:	b	40c6ac <method_create_or_register_machine+0x600>
  40c2b0:	add	x3, sp, #0x80
  40c2b4:	add	x2, sp, #0x5c
  40c2b8:	add	x1, sp, #0x78
  40c2bc:	add	x0, sp, #0x70
  40c2c0:	mov	x5, x3
  40c2c4:	mov	x4, x2
  40c2c8:	mov	x3, x1
  40c2cc:	mov	x2, x0
  40c2d0:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40c2d4:	add	x1, x0, #0x2a8
  40c2d8:	ldr	x0, [sp, #64]
  40c2dc:	bl	4052b0 <sd_bus_message_read@plt>
  40c2e0:	str	w0, [sp, #100]
  40c2e4:	ldr	w0, [sp, #100]
  40c2e8:	cmp	w0, #0x0
  40c2ec:	b.ge	40c2f8 <method_create_or_register_machine+0x24c>  // b.tcont
  40c2f0:	ldr	w19, [sp, #100]
  40c2f4:	b	40c6ac <method_create_or_register_machine+0x600>
  40c2f8:	ldrb	w0, [sp, #63]
  40c2fc:	cmp	w0, #0x0
  40c300:	b.eq	40c3bc <method_create_or_register_machine+0x310>  // b.none
  40c304:	add	x1, sp, #0xa0
  40c308:	add	x0, sp, #0x88
  40c30c:	mov	x3, x1
  40c310:	mov	x2, x0
  40c314:	mov	w1, #0x69                  	// #105
  40c318:	ldr	x0, [sp, #64]
  40c31c:	bl	405b70 <sd_bus_message_read_array@plt>
  40c320:	str	w0, [sp, #100]
  40c324:	ldr	w0, [sp, #100]
  40c328:	cmp	w0, #0x0
  40c32c:	b.ge	40c338 <method_create_or_register_machine+0x28c>  // b.tcont
  40c330:	ldr	w19, [sp, #100]
  40c334:	b	40c6ac <method_create_or_register_machine+0x600>
  40c338:	ldr	x0, [sp, #160]
  40c33c:	lsr	x0, x0, #2
  40c340:	str	x0, [sp, #160]
  40c344:	str	xzr, [sp, #176]
  40c348:	b	40c3ac <method_create_or_register_machine+0x300>
  40c34c:	ldr	x1, [sp, #136]
  40c350:	ldr	x0, [sp, #176]
  40c354:	lsl	x0, x0, #2
  40c358:	add	x0, x1, x0
  40c35c:	ldr	w0, [x0]
  40c360:	cmp	w0, #0x0
  40c364:	b.gt	40c3a0 <method_create_or_register_machine+0x2f4>
  40c368:	ldr	x1, [sp, #136]
  40c36c:	ldr	x0, [sp, #176]
  40c370:	lsl	x0, x0, #2
  40c374:	add	x0, x1, x0
  40c378:	ldr	w0, [x0]
  40c37c:	mov	w3, w0
  40c380:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40c384:	add	x2, x0, #0x2b0
  40c388:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40c38c:	add	x1, x0, #0x260
  40c390:	ldr	x0, [sp, #40]
  40c394:	bl	4055d0 <sd_bus_error_setf@plt>
  40c398:	mov	w19, w0
  40c39c:	b	40c6ac <method_create_or_register_machine+0x600>
  40c3a0:	ldr	x0, [sp, #176]
  40c3a4:	add	x0, x0, #0x1
  40c3a8:	str	x0, [sp, #176]
  40c3ac:	ldr	x0, [sp, #160]
  40c3b0:	ldr	x1, [sp, #176]
  40c3b4:	cmp	x1, x0
  40c3b8:	b.cc	40c34c <method_create_or_register_machine+0x2a0>  // b.lo, b.ul, b.last
  40c3bc:	ldr	x0, [sp, #120]
  40c3c0:	bl	40b084 <isempty>
  40c3c4:	and	w0, w0, #0xff
  40c3c8:	cmp	w0, #0x0
  40c3cc:	b.eq	40c3dc <method_create_or_register_machine+0x330>  // b.none
  40c3d0:	mov	w0, #0xffffffff            	// #-1
  40c3d4:	str	w0, [sp, #96]
  40c3d8:	b	40c414 <method_create_or_register_machine+0x368>
  40c3dc:	ldr	x0, [sp, #120]
  40c3e0:	bl	40adc4 <machine_class_from_string>
  40c3e4:	str	w0, [sp, #96]
  40c3e8:	ldr	w0, [sp, #96]
  40c3ec:	cmp	w0, #0x0
  40c3f0:	b.ge	40c414 <method_create_or_register_machine+0x368>  // b.tcont
  40c3f4:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40c3f8:	add	x2, x0, #0x2d8
  40c3fc:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40c400:	add	x1, x0, #0x260
  40c404:	ldr	x0, [sp, #40]
  40c408:	bl	4055d0 <sd_bus_error_setf@plt>
  40c40c:	mov	w19, w0
  40c410:	b	40c6ac <method_create_or_register_machine+0x600>
  40c414:	ldr	w0, [sp, #92]
  40c418:	cmp	w0, #0x1
  40c41c:	b.ne	40c440 <method_create_or_register_machine+0x394>  // b.any
  40c420:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40c424:	add	x2, x0, #0x2f8
  40c428:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40c42c:	add	x1, x0, #0x260
  40c430:	ldr	x0, [sp, #40]
  40c434:	bl	4055d0 <sd_bus_error_setf@plt>
  40c438:	mov	w19, w0
  40c43c:	b	40c6ac <method_create_or_register_machine+0x600>
  40c440:	ldr	x0, [sp, #128]
  40c444:	bl	40b084 <isempty>
  40c448:	and	w0, w0, #0xff
  40c44c:	eor	w0, w0, #0x1
  40c450:	and	w0, w0, #0xff
  40c454:	cmp	w0, #0x0
  40c458:	b.eq	40c498 <method_create_or_register_machine+0x3ec>  // b.none
  40c45c:	ldr	x0, [sp, #128]
  40c460:	bl	405340 <path_is_absolute@plt>
  40c464:	and	w0, w0, #0xff
  40c468:	eor	w0, w0, #0x1
  40c46c:	and	w0, w0, #0xff
  40c470:	cmp	w0, #0x0
  40c474:	b.eq	40c498 <method_create_or_register_machine+0x3ec>  // b.none
  40c478:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40c47c:	add	x2, x0, #0x310
  40c480:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40c484:	add	x1, x0, #0x260
  40c488:	ldr	x0, [sp, #40]
  40c48c:	bl	4055d0 <sd_bus_error_setf@plt>
  40c490:	mov	w19, w0
  40c494:	b	40c6ac <method_create_or_register_machine+0x600>
  40c498:	ldr	w0, [sp, #92]
  40c49c:	cmp	w0, #0x0
  40c4a0:	b.ne	40c514 <method_create_or_register_machine+0x468>  // b.any
  40c4a4:	str	xzr, [sp, #168]
  40c4a8:	add	x0, sp, #0xa8
  40c4ac:	mov	x2, x0
  40c4b0:	mov	x1, #0x1                   	// #1
  40c4b4:	ldr	x0, [sp, #64]
  40c4b8:	bl	405c10 <sd_bus_query_sender_creds@plt>
  40c4bc:	str	w0, [sp, #100]
  40c4c0:	ldr	w0, [sp, #100]
  40c4c4:	cmp	w0, #0x0
  40c4c8:	b.ge	40c4d8 <method_create_or_register_machine+0x42c>  // b.tcont
  40c4cc:	ldr	w19, [sp, #100]
  40c4d0:	mov	w20, #0x0                   	// #0
  40c4d4:	b	40c504 <method_create_or_register_machine+0x458>
  40c4d8:	ldr	x0, [sp, #168]
  40c4dc:	add	x1, sp, #0x5c
  40c4e0:	bl	404e00 <sd_bus_creds_get_pid@plt>
  40c4e4:	str	w0, [sp, #100]
  40c4e8:	ldr	w0, [sp, #100]
  40c4ec:	cmp	w0, #0x0
  40c4f0:	b.ge	40c500 <method_create_or_register_machine+0x454>  // b.tcont
  40c4f4:	ldr	w19, [sp, #100]
  40c4f8:	mov	w20, #0x0                   	// #0
  40c4fc:	b	40c504 <method_create_or_register_machine+0x458>
  40c500:	mov	w20, #0x1                   	// #1
  40c504:	add	x0, sp, #0xa8
  40c508:	bl	40af48 <sd_bus_creds_unrefp>
  40c50c:	cmp	w20, #0x1
  40c510:	b.ne	40c6ac <method_create_or_register_machine+0x600>  // b.any
  40c514:	ldr	x0, [sp, #72]
  40c518:	ldr	x0, [x0, #16]
  40c51c:	ldr	x1, [sp, #104]
  40c520:	bl	40afa0 <hashmap_get>
  40c524:	cmp	x0, #0x0
  40c528:	b.eq	40c554 <method_create_or_register_machine+0x4a8>  // b.none
  40c52c:	ldr	x0, [sp, #104]
  40c530:	mov	x3, x0
  40c534:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40c538:	add	x2, x0, #0x348
  40c53c:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40c540:	add	x1, x0, #0x368
  40c544:	ldr	x0, [sp, #40]
  40c548:	bl	4055d0 <sd_bus_error_setf@plt>
  40c54c:	mov	w19, w0
  40c550:	b	40c6ac <method_create_or_register_machine+0x600>
  40c554:	ldr	x0, [sp, #104]
  40c558:	add	x1, sp, #0xa8
  40c55c:	mov	x2, x1
  40c560:	mov	x1, x0
  40c564:	ldr	x0, [sp, #72]
  40c568:	bl	41059c <manager_add_machine>
  40c56c:	str	w0, [sp, #100]
  40c570:	ldr	w0, [sp, #100]
  40c574:	cmp	w0, #0x0
  40c578:	b.ge	40c584 <method_create_or_register_machine+0x4d8>  // b.tcont
  40c57c:	ldr	w19, [sp, #100]
  40c580:	b	40c6ac <method_create_or_register_machine+0x600>
  40c584:	ldr	w1, [sp, #92]
  40c588:	ldr	x0, [sp, #168]
  40c58c:	str	w1, [x0, #80]
  40c590:	ldr	x0, [sp, #168]
  40c594:	ldr	w1, [sp, #96]
  40c598:	str	w1, [x0, #32]
  40c59c:	ldr	x2, [sp, #168]
  40c5a0:	ldp	x0, x1, [sp, #184]
  40c5a4:	stp	x0, x1, [x2, #16]
  40c5a8:	ldr	x0, [sp, #112]
  40c5ac:	bl	40b084 <isempty>
  40c5b0:	and	w0, w0, #0xff
  40c5b4:	eor	w0, w0, #0x1
  40c5b8:	and	w0, w0, #0xff
  40c5bc:	cmp	w0, #0x0
  40c5c0:	b.eq	40c5f0 <method_create_or_register_machine+0x544>  // b.none
  40c5c4:	ldr	x0, [sp, #112]
  40c5c8:	ldr	x19, [sp, #168]
  40c5cc:	bl	405890 <strdup@plt>
  40c5d0:	str	x0, [x19, #48]
  40c5d4:	ldr	x0, [sp, #168]
  40c5d8:	ldr	x0, [x0, #48]
  40c5dc:	cmp	x0, #0x0
  40c5e0:	b.ne	40c5f0 <method_create_or_register_machine+0x544>  // b.any
  40c5e4:	mov	w0, #0xfffffff4            	// #-12
  40c5e8:	str	w0, [sp, #100]
  40c5ec:	b	40c6a0 <method_create_or_register_machine+0x5f4>
  40c5f0:	ldr	x0, [sp, #128]
  40c5f4:	bl	40b084 <isempty>
  40c5f8:	and	w0, w0, #0xff
  40c5fc:	eor	w0, w0, #0x1
  40c600:	and	w0, w0, #0xff
  40c604:	cmp	w0, #0x0
  40c608:	b.eq	40c638 <method_create_or_register_machine+0x58c>  // b.none
  40c60c:	ldr	x0, [sp, #128]
  40c610:	ldr	x19, [sp, #168]
  40c614:	bl	405890 <strdup@plt>
  40c618:	str	x0, [x19, #56]
  40c61c:	ldr	x0, [sp, #168]
  40c620:	ldr	x0, [x0, #56]
  40c624:	cmp	x0, #0x0
  40c628:	b.ne	40c638 <method_create_or_register_machine+0x58c>  // b.any
  40c62c:	mov	w0, #0xfffffff4            	// #-12
  40c630:	str	w0, [sp, #100]
  40c634:	b	40c6a0 <method_create_or_register_machine+0x5f4>
  40c638:	ldr	x0, [sp, #160]
  40c63c:	cmp	x0, #0x0
  40c640:	b.eq	40c68c <method_create_or_register_machine+0x5e0>  // b.none
  40c644:	ldr	x2, [sp, #136]
  40c648:	ldr	x0, [sp, #160]
  40c64c:	lsl	x0, x0, #2
  40c650:	ldr	x19, [sp, #168]
  40c654:	mov	x1, x0
  40c658:	mov	x0, x2
  40c65c:	bl	4053e0 <memdup@plt>
  40c660:	str	x0, [x19, #120]
  40c664:	ldr	x0, [sp, #168]
  40c668:	ldr	x0, [x0, #120]
  40c66c:	cmp	x0, #0x0
  40c670:	b.ne	40c680 <method_create_or_register_machine+0x5d4>  // b.any
  40c674:	mov	w0, #0xfffffff4            	// #-12
  40c678:	str	w0, [sp, #100]
  40c67c:	b	40c6a0 <method_create_or_register_machine+0x5f4>
  40c680:	ldr	x0, [sp, #168]
  40c684:	ldr	x1, [sp, #160]
  40c688:	str	x1, [x0, #128]
  40c68c:	ldr	x1, [sp, #168]
  40c690:	ldr	x0, [sp, #48]
  40c694:	str	x1, [x0]
  40c698:	mov	w19, #0x1                   	// #1
  40c69c:	b	40c6ac <method_create_or_register_machine+0x600>
  40c6a0:	ldr	x0, [sp, #168]
  40c6a4:	bl	40a2fc <machine_add_to_gc_queue>
  40c6a8:	ldr	w19, [sp, #100]
  40c6ac:	mov	w1, w19
  40c6b0:	adrp	x0, 431000 <machine_vtable+0x4a0>
  40c6b4:	ldr	x0, [x0, #3952]
  40c6b8:	ldr	x2, [sp, #200]
  40c6bc:	ldr	x0, [x0]
  40c6c0:	eor	x0, x2, x0
  40c6c4:	cmp	x0, #0x0
  40c6c8:	b.eq	40c6d0 <method_create_or_register_machine+0x624>  // b.none
  40c6cc:	bl	4055f0 <__stack_chk_fail@plt>
  40c6d0:	mov	w0, w1
  40c6d4:	ldp	x19, x20, [sp, #16]
  40c6d8:	ldp	x29, x30, [sp], #208
  40c6dc:	ret

000000000040c6e0 <method_create_machine_internal>:
  40c6e0:	stp	x29, x30, [sp, #-96]!
  40c6e4:	mov	x29, sp
  40c6e8:	str	x19, [sp, #16]
  40c6ec:	str	x0, [sp, #56]
  40c6f0:	strb	w1, [sp, #55]
  40c6f4:	str	x2, [sp, #40]
  40c6f8:	str	x3, [sp, #32]
  40c6fc:	adrp	x0, 431000 <machine_vtable+0x4a0>
  40c700:	ldr	x0, [x0, #3952]
  40c704:	ldr	x1, [x0]
  40c708:	str	x1, [sp, #88]
  40c70c:	mov	x1, #0x0                   	// #0
  40c710:	ldr	x0, [sp, #40]
  40c714:	str	x0, [sp, #80]
  40c718:	str	xzr, [sp, #72]
  40c71c:	ldr	x0, [sp, #56]
  40c720:	cmp	x0, #0x0
  40c724:	cset	w0, eq  // eq = none
  40c728:	and	w0, w0, #0xff
  40c72c:	and	x0, x0, #0xff
  40c730:	cmp	x0, #0x0
  40c734:	b.eq	40c760 <method_create_machine_internal+0x80>  // b.none
  40c738:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40c73c:	add	x1, x0, #0xdb
  40c740:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  40c744:	add	x4, x0, #0xb0
  40c748:	mov	w3, #0x161                 	// #353
  40c74c:	mov	x2, x1
  40c750:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40c754:	add	x1, x0, #0x130
  40c758:	mov	w0, #0x0                   	// #0
  40c75c:	bl	4052a0 <log_assert_failed_realm@plt>
  40c760:	ldr	x0, [sp, #80]
  40c764:	cmp	x0, #0x0
  40c768:	cset	w0, eq  // eq = none
  40c76c:	and	w0, w0, #0xff
  40c770:	and	x0, x0, #0xff
  40c774:	cmp	x0, #0x0
  40c778:	b.eq	40c7a4 <method_create_machine_internal+0xc4>  // b.none
  40c77c:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40c780:	add	x1, x0, #0xdb
  40c784:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  40c788:	add	x4, x0, #0xb0
  40c78c:	mov	w3, #0x162                 	// #354
  40c790:	mov	x2, x1
  40c794:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40c798:	add	x1, x0, #0x238
  40c79c:	mov	w0, #0x0                   	// #0
  40c7a0:	bl	4052a0 <log_assert_failed_realm@plt>
  40c7a4:	add	x0, sp, #0x48
  40c7a8:	ldr	x4, [sp, #32]
  40c7ac:	mov	x3, x0
  40c7b0:	ldrb	w2, [sp, #55]
  40c7b4:	ldr	x1, [sp, #56]
  40c7b8:	ldr	x0, [sp, #80]
  40c7bc:	bl	40c0ac <method_create_or_register_machine>
  40c7c0:	str	w0, [sp, #68]
  40c7c4:	ldr	w0, [sp, #68]
  40c7c8:	cmp	w0, #0x0
  40c7cc:	b.ge	40c7d8 <method_create_machine_internal+0xf8>  // b.tcont
  40c7d0:	ldr	w0, [sp, #68]
  40c7d4:	b	40c84c <method_create_machine_internal+0x16c>
  40c7d8:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40c7dc:	add	x2, x0, #0x390
  40c7e0:	mov	w1, #0x61                  	// #97
  40c7e4:	ldr	x0, [sp, #56]
  40c7e8:	bl	404fe0 <sd_bus_message_enter_container@plt>
  40c7ec:	str	w0, [sp, #68]
  40c7f0:	ldr	w0, [sp, #68]
  40c7f4:	cmp	w0, #0x0
  40c7f8:	b.lt	40c834 <method_create_machine_internal+0x154>  // b.tstop
  40c7fc:	ldr	x0, [sp, #72]
  40c800:	ldr	x2, [sp, #32]
  40c804:	ldr	x1, [sp, #56]
  40c808:	bl	409c68 <machine_start>
  40c80c:	str	w0, [sp, #68]
  40c810:	ldr	w0, [sp, #68]
  40c814:	cmp	w0, #0x0
  40c818:	b.lt	40c83c <method_create_machine_internal+0x15c>  // b.tstop
  40c81c:	ldr	x19, [sp, #72]
  40c820:	ldr	x0, [sp, #56]
  40c824:	bl	405b80 <sd_bus_message_ref@plt>
  40c828:	str	x0, [x19, #112]
  40c82c:	mov	w0, #0x1                   	// #1
  40c830:	b	40c84c <method_create_machine_internal+0x16c>
  40c834:	nop
  40c838:	b	40c840 <method_create_machine_internal+0x160>
  40c83c:	nop
  40c840:	ldr	x0, [sp, #72]
  40c844:	bl	40a2fc <machine_add_to_gc_queue>
  40c848:	ldr	w0, [sp, #68]
  40c84c:	mov	w1, w0
  40c850:	adrp	x0, 431000 <machine_vtable+0x4a0>
  40c854:	ldr	x0, [x0, #3952]
  40c858:	ldr	x2, [sp, #88]
  40c85c:	ldr	x0, [x0]
  40c860:	eor	x0, x2, x0
  40c864:	cmp	x0, #0x0
  40c868:	b.eq	40c870 <method_create_machine_internal+0x190>  // b.none
  40c86c:	bl	4055f0 <__stack_chk_fail@plt>
  40c870:	mov	w0, w1
  40c874:	ldr	x19, [sp, #16]
  40c878:	ldp	x29, x30, [sp], #96
  40c87c:	ret

000000000040c880 <method_create_machine_with_network>:
  40c880:	stp	x29, x30, [sp, #-48]!
  40c884:	mov	x29, sp
  40c888:	str	x0, [sp, #40]
  40c88c:	str	x1, [sp, #32]
  40c890:	str	x2, [sp, #24]
  40c894:	ldr	x3, [sp, #24]
  40c898:	ldr	x2, [sp, #32]
  40c89c:	mov	w1, #0x1                   	// #1
  40c8a0:	ldr	x0, [sp, #40]
  40c8a4:	bl	40c6e0 <method_create_machine_internal>
  40c8a8:	ldp	x29, x30, [sp], #48
  40c8ac:	ret

000000000040c8b0 <method_create_machine>:
  40c8b0:	stp	x29, x30, [sp, #-48]!
  40c8b4:	mov	x29, sp
  40c8b8:	str	x0, [sp, #40]
  40c8bc:	str	x1, [sp, #32]
  40c8c0:	str	x2, [sp, #24]
  40c8c4:	ldr	x3, [sp, #24]
  40c8c8:	ldr	x2, [sp, #32]
  40c8cc:	mov	w1, #0x0                   	// #0
  40c8d0:	ldr	x0, [sp, #40]
  40c8d4:	bl	40c6e0 <method_create_machine_internal>
  40c8d8:	ldp	x29, x30, [sp], #48
  40c8dc:	ret

000000000040c8e0 <method_register_machine_internal>:
  40c8e0:	stp	x29, x30, [sp, #-112]!
  40c8e4:	mov	x29, sp
  40c8e8:	str	x19, [sp, #16]
  40c8ec:	str	x0, [sp, #56]
  40c8f0:	strb	w1, [sp, #55]
  40c8f4:	str	x2, [sp, #40]
  40c8f8:	str	x3, [sp, #32]
  40c8fc:	adrp	x0, 431000 <machine_vtable+0x4a0>
  40c900:	ldr	x0, [x0, #3952]
  40c904:	ldr	x1, [x0]
  40c908:	str	x1, [sp, #104]
  40c90c:	mov	x1, #0x0                   	// #0
  40c910:	ldr	x0, [sp, #40]
  40c914:	str	x0, [sp, #96]
  40c918:	str	xzr, [sp, #80]
  40c91c:	str	xzr, [sp, #88]
  40c920:	ldr	x0, [sp, #56]
  40c924:	cmp	x0, #0x0
  40c928:	cset	w0, eq  // eq = none
  40c92c:	and	w0, w0, #0xff
  40c930:	and	x0, x0, #0xff
  40c934:	cmp	x0, #0x0
  40c938:	b.eq	40c964 <method_register_machine_internal+0x84>  // b.none
  40c93c:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40c940:	add	x1, x0, #0xdb
  40c944:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  40c948:	add	x4, x0, #0xd0
  40c94c:	mov	w3, #0x186                 	// #390
  40c950:	mov	x2, x1
  40c954:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40c958:	add	x1, x0, #0x130
  40c95c:	mov	w0, #0x0                   	// #0
  40c960:	bl	4052a0 <log_assert_failed_realm@plt>
  40c964:	ldr	x0, [sp, #96]
  40c968:	cmp	x0, #0x0
  40c96c:	cset	w0, eq  // eq = none
  40c970:	and	w0, w0, #0xff
  40c974:	and	x0, x0, #0xff
  40c978:	cmp	x0, #0x0
  40c97c:	b.eq	40c9a8 <method_register_machine_internal+0xc8>  // b.none
  40c980:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40c984:	add	x1, x0, #0xdb
  40c988:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  40c98c:	add	x4, x0, #0xd0
  40c990:	mov	w3, #0x187                 	// #391
  40c994:	mov	x2, x1
  40c998:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40c99c:	add	x1, x0, #0x238
  40c9a0:	mov	w0, #0x0                   	// #0
  40c9a4:	bl	4052a0 <log_assert_failed_realm@plt>
  40c9a8:	add	x0, sp, #0x58
  40c9ac:	ldr	x4, [sp, #32]
  40c9b0:	mov	x3, x0
  40c9b4:	ldrb	w2, [sp, #55]
  40c9b8:	ldr	x1, [sp, #56]
  40c9bc:	ldr	x0, [sp, #96]
  40c9c0:	bl	40c0ac <method_create_or_register_machine>
  40c9c4:	str	w0, [sp, #76]
  40c9c8:	ldr	w0, [sp, #76]
  40c9cc:	cmp	w0, #0x0
  40c9d0:	b.ge	40c9dc <method_register_machine_internal+0xfc>  // b.tcont
  40c9d4:	ldr	w19, [sp, #76]
  40c9d8:	b	40caa4 <method_register_machine_internal+0x1c4>
  40c9dc:	ldr	x0, [sp, #88]
  40c9e0:	ldr	w2, [x0, #80]
  40c9e4:	ldr	x0, [sp, #88]
  40c9e8:	add	x0, x0, #0x40
  40c9ec:	mov	x1, x0
  40c9f0:	mov	w0, w2
  40c9f4:	bl	4059a0 <cg_pid_get_unit@plt>
  40c9f8:	str	w0, [sp, #76]
  40c9fc:	ldr	w0, [sp, #76]
  40ca00:	cmp	w0, #0x0
  40ca04:	b.ge	40ca30 <method_register_machine_internal+0x150>  // b.tcont
  40ca08:	ldr	x0, [sp, #88]
  40ca0c:	ldr	w0, [x0, #80]
  40ca10:	mov	w3, w0
  40ca14:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40ca18:	add	x2, x0, #0x398
  40ca1c:	ldr	w1, [sp, #76]
  40ca20:	ldr	x0, [sp, #32]
  40ca24:	bl	405070 <sd_bus_error_set_errnof@plt>
  40ca28:	str	w0, [sp, #76]
  40ca2c:	b	40ca98 <method_register_machine_internal+0x1b8>
  40ca30:	ldr	x0, [sp, #88]
  40ca34:	ldr	x2, [sp, #32]
  40ca38:	mov	x1, #0x0                   	// #0
  40ca3c:	bl	409c68 <machine_start>
  40ca40:	str	w0, [sp, #76]
  40ca44:	ldr	w0, [sp, #76]
  40ca48:	cmp	w0, #0x0
  40ca4c:	b.lt	40ca94 <method_register_machine_internal+0x1b4>  // b.tstop
  40ca50:	ldr	x0, [sp, #88]
  40ca54:	bl	41652c <machine_bus_path>
  40ca58:	str	x0, [sp, #80]
  40ca5c:	ldr	x0, [sp, #80]
  40ca60:	cmp	x0, #0x0
  40ca64:	b.ne	40ca74 <method_register_machine_internal+0x194>  // b.any
  40ca68:	mov	w0, #0xfffffff4            	// #-12
  40ca6c:	str	w0, [sp, #76]
  40ca70:	b	40ca98 <method_register_machine_internal+0x1b8>
  40ca74:	ldr	x0, [sp, #80]
  40ca78:	mov	x2, x0
  40ca7c:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40ca80:	add	x1, x0, #0x180
  40ca84:	ldr	x0, [sp, #56]
  40ca88:	bl	404f00 <sd_bus_reply_method_return@plt>
  40ca8c:	mov	w19, w0
  40ca90:	b	40caa4 <method_register_machine_internal+0x1c4>
  40ca94:	nop
  40ca98:	ldr	x0, [sp, #88]
  40ca9c:	bl	40a2fc <machine_add_to_gc_queue>
  40caa0:	ldr	w19, [sp, #76]
  40caa4:	add	x0, sp, #0x50
  40caa8:	bl	40ae74 <freep>
  40caac:	mov	w1, w19
  40cab0:	adrp	x0, 431000 <machine_vtable+0x4a0>
  40cab4:	ldr	x0, [x0, #3952]
  40cab8:	ldr	x2, [sp, #104]
  40cabc:	ldr	x0, [x0]
  40cac0:	eor	x0, x2, x0
  40cac4:	cmp	x0, #0x0
  40cac8:	b.eq	40cad0 <method_register_machine_internal+0x1f0>  // b.none
  40cacc:	bl	4055f0 <__stack_chk_fail@plt>
  40cad0:	mov	w0, w1
  40cad4:	ldr	x19, [sp, #16]
  40cad8:	ldp	x29, x30, [sp], #112
  40cadc:	ret

000000000040cae0 <method_register_machine_with_network>:
  40cae0:	stp	x29, x30, [sp, #-48]!
  40cae4:	mov	x29, sp
  40cae8:	str	x0, [sp, #40]
  40caec:	str	x1, [sp, #32]
  40caf0:	str	x2, [sp, #24]
  40caf4:	ldr	x3, [sp, #24]
  40caf8:	ldr	x2, [sp, #32]
  40cafc:	mov	w1, #0x1                   	// #1
  40cb00:	ldr	x0, [sp, #40]
  40cb04:	bl	40c8e0 <method_register_machine_internal>
  40cb08:	ldp	x29, x30, [sp], #48
  40cb0c:	ret

000000000040cb10 <method_register_machine>:
  40cb10:	stp	x29, x30, [sp, #-48]!
  40cb14:	mov	x29, sp
  40cb18:	str	x0, [sp, #40]
  40cb1c:	str	x1, [sp, #32]
  40cb20:	str	x2, [sp, #24]
  40cb24:	ldr	x3, [sp, #24]
  40cb28:	ldr	x2, [sp, #32]
  40cb2c:	mov	w1, #0x0                   	// #0
  40cb30:	ldr	x0, [sp, #40]
  40cb34:	bl	40c8e0 <method_register_machine_internal>
  40cb38:	ldp	x29, x30, [sp], #48
  40cb3c:	ret

000000000040cb40 <redirect_method_to_machine>:
  40cb40:	stp	x29, x30, [sp, #-80]!
  40cb44:	mov	x29, sp
  40cb48:	str	x0, [sp, #40]
  40cb4c:	str	x1, [sp, #32]
  40cb50:	str	x2, [sp, #24]
  40cb54:	str	x3, [sp, #16]
  40cb58:	adrp	x0, 431000 <machine_vtable+0x4a0>
  40cb5c:	ldr	x0, [x0, #3952]
  40cb60:	ldr	x1, [x0]
  40cb64:	str	x1, [sp, #72]
  40cb68:	mov	x1, #0x0                   	// #0
  40cb6c:	ldr	x0, [sp, #40]
  40cb70:	cmp	x0, #0x0
  40cb74:	cset	w0, eq  // eq = none
  40cb78:	and	w0, w0, #0xff
  40cb7c:	and	x0, x0, #0xff
  40cb80:	cmp	x0, #0x0
  40cb84:	b.eq	40cbb0 <redirect_method_to_machine+0x70>  // b.none
  40cb88:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40cb8c:	add	x1, x0, #0xdb
  40cb90:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  40cb94:	add	x4, x0, #0xf8
  40cb98:	mov	w3, #0x1b3                 	// #435
  40cb9c:	mov	x2, x1
  40cba0:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40cba4:	add	x1, x0, #0x130
  40cba8:	mov	w0, #0x0                   	// #0
  40cbac:	bl	4052a0 <log_assert_failed_realm@plt>
  40cbb0:	ldr	x0, [sp, #32]
  40cbb4:	cmp	x0, #0x0
  40cbb8:	cset	w0, eq  // eq = none
  40cbbc:	and	w0, w0, #0xff
  40cbc0:	and	x0, x0, #0xff
  40cbc4:	cmp	x0, #0x0
  40cbc8:	b.eq	40cbf4 <redirect_method_to_machine+0xb4>  // b.none
  40cbcc:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40cbd0:	add	x1, x0, #0xdb
  40cbd4:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  40cbd8:	add	x4, x0, #0xf8
  40cbdc:	mov	w3, #0x1b4                 	// #436
  40cbe0:	mov	x2, x1
  40cbe4:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40cbe8:	add	x1, x0, #0x138
  40cbec:	mov	w0, #0x0                   	// #0
  40cbf0:	bl	4052a0 <log_assert_failed_realm@plt>
  40cbf4:	ldr	x0, [sp, #16]
  40cbf8:	cmp	x0, #0x0
  40cbfc:	cset	w0, eq  // eq = none
  40cc00:	and	w0, w0, #0xff
  40cc04:	and	x0, x0, #0xff
  40cc08:	cmp	x0, #0x0
  40cc0c:	b.eq	40cc38 <redirect_method_to_machine+0xf8>  // b.none
  40cc10:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40cc14:	add	x1, x0, #0xdb
  40cc18:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  40cc1c:	add	x4, x0, #0xf8
  40cc20:	mov	w3, #0x1b5                 	// #437
  40cc24:	mov	x2, x1
  40cc28:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40cc2c:	add	x1, x0, #0x3c8
  40cc30:	mov	w0, #0x0                   	// #0
  40cc34:	bl	4052a0 <log_assert_failed_realm@plt>
  40cc38:	add	x0, sp, #0x38
  40cc3c:	mov	x2, x0
  40cc40:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40cc44:	add	x1, x0, #0x120
  40cc48:	ldr	x0, [sp, #40]
  40cc4c:	bl	4052b0 <sd_bus_message_read@plt>
  40cc50:	str	w0, [sp, #52]
  40cc54:	ldr	w0, [sp, #52]
  40cc58:	cmp	w0, #0x0
  40cc5c:	b.ge	40cc70 <redirect_method_to_machine+0x130>  // b.tcont
  40cc60:	ldr	w1, [sp, #52]
  40cc64:	ldr	x0, [sp, #24]
  40cc68:	bl	405b40 <sd_bus_error_set_errno@plt>
  40cc6c:	b	40ccc8 <redirect_method_to_machine+0x188>
  40cc70:	ldr	x0, [sp, #32]
  40cc74:	ldr	x0, [x0, #16]
  40cc78:	ldr	x1, [sp, #56]
  40cc7c:	bl	40afa0 <hashmap_get>
  40cc80:	str	x0, [sp, #64]
  40cc84:	ldr	x0, [sp, #64]
  40cc88:	cmp	x0, #0x0
  40cc8c:	b.ne	40ccb4 <redirect_method_to_machine+0x174>  // b.any
  40cc90:	ldr	x0, [sp, #56]
  40cc94:	mov	x3, x0
  40cc98:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40cc9c:	add	x2, x0, #0x140
  40cca0:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40cca4:	add	x1, x0, #0x158
  40cca8:	ldr	x0, [sp, #24]
  40ccac:	bl	4055d0 <sd_bus_error_setf@plt>
  40ccb0:	b	40ccc8 <redirect_method_to_machine+0x188>
  40ccb4:	ldr	x3, [sp, #16]
  40ccb8:	ldr	x2, [sp, #24]
  40ccbc:	ldr	x1, [sp, #64]
  40ccc0:	ldr	x0, [sp, #40]
  40ccc4:	blr	x3
  40ccc8:	mov	w1, w0
  40cccc:	adrp	x0, 431000 <machine_vtable+0x4a0>
  40ccd0:	ldr	x0, [x0, #3952]
  40ccd4:	ldr	x2, [sp, #72]
  40ccd8:	ldr	x0, [x0]
  40ccdc:	eor	x0, x2, x0
  40cce0:	cmp	x0, #0x0
  40cce4:	b.eq	40ccec <redirect_method_to_machine+0x1ac>  // b.none
  40cce8:	bl	4055f0 <__stack_chk_fail@plt>
  40ccec:	mov	w0, w1
  40ccf0:	ldp	x29, x30, [sp], #80
  40ccf4:	ret

000000000040ccf8 <method_unregister_machine>:
  40ccf8:	stp	x29, x30, [sp, #-48]!
  40ccfc:	mov	x29, sp
  40cd00:	str	x0, [sp, #40]
  40cd04:	str	x1, [sp, #32]
  40cd08:	str	x2, [sp, #24]
  40cd0c:	adrp	x0, 431000 <machine_vtable+0x4a0>
  40cd10:	ldr	x3, [x0, #3936]
  40cd14:	ldr	x2, [sp, #24]
  40cd18:	ldr	x1, [sp, #32]
  40cd1c:	ldr	x0, [sp, #40]
  40cd20:	bl	40cb40 <redirect_method_to_machine>
  40cd24:	ldp	x29, x30, [sp], #48
  40cd28:	ret

000000000040cd2c <method_terminate_machine>:
  40cd2c:	stp	x29, x30, [sp, #-48]!
  40cd30:	mov	x29, sp
  40cd34:	str	x0, [sp, #40]
  40cd38:	str	x1, [sp, #32]
  40cd3c:	str	x2, [sp, #24]
  40cd40:	adrp	x0, 431000 <machine_vtable+0x4a0>
  40cd44:	ldr	x3, [x0, #4088]
  40cd48:	ldr	x2, [sp, #24]
  40cd4c:	ldr	x1, [sp, #32]
  40cd50:	ldr	x0, [sp, #40]
  40cd54:	bl	40cb40 <redirect_method_to_machine>
  40cd58:	ldp	x29, x30, [sp], #48
  40cd5c:	ret

000000000040cd60 <method_kill_machine>:
  40cd60:	stp	x29, x30, [sp, #-48]!
  40cd64:	mov	x29, sp
  40cd68:	str	x0, [sp, #40]
  40cd6c:	str	x1, [sp, #32]
  40cd70:	str	x2, [sp, #24]
  40cd74:	adrp	x0, 431000 <machine_vtable+0x4a0>
  40cd78:	ldr	x3, [x0, #4072]
  40cd7c:	ldr	x2, [sp, #24]
  40cd80:	ldr	x1, [sp, #32]
  40cd84:	ldr	x0, [sp, #40]
  40cd88:	bl	40cb40 <redirect_method_to_machine>
  40cd8c:	ldp	x29, x30, [sp], #48
  40cd90:	ret

000000000040cd94 <method_get_machine_addresses>:
  40cd94:	stp	x29, x30, [sp, #-48]!
  40cd98:	mov	x29, sp
  40cd9c:	str	x0, [sp, #40]
  40cda0:	str	x1, [sp, #32]
  40cda4:	str	x2, [sp, #24]
  40cda8:	adrp	x0, 431000 <machine_vtable+0x4a0>
  40cdac:	ldr	x3, [x0, #3928]
  40cdb0:	ldr	x2, [sp, #24]
  40cdb4:	ldr	x1, [sp, #32]
  40cdb8:	ldr	x0, [sp, #40]
  40cdbc:	bl	40cb40 <redirect_method_to_machine>
  40cdc0:	ldp	x29, x30, [sp], #48
  40cdc4:	ret

000000000040cdc8 <method_get_machine_os_release>:
  40cdc8:	stp	x29, x30, [sp, #-48]!
  40cdcc:	mov	x29, sp
  40cdd0:	str	x0, [sp, #40]
  40cdd4:	str	x1, [sp, #32]
  40cdd8:	str	x2, [sp, #24]
  40cddc:	adrp	x0, 431000 <machine_vtable+0x4a0>
  40cde0:	ldr	x3, [x0, #4016]
  40cde4:	ldr	x2, [sp, #24]
  40cde8:	ldr	x1, [sp, #32]
  40cdec:	ldr	x0, [sp, #40]
  40cdf0:	bl	40cb40 <redirect_method_to_machine>
  40cdf4:	ldp	x29, x30, [sp], #48
  40cdf8:	ret

000000000040cdfc <method_list_images>:
  40cdfc:	sub	sp, sp, #0xb0
  40ce00:	stp	x29, x30, [sp, #16]
  40ce04:	add	x29, sp, #0x10
  40ce08:	stp	x19, x20, [sp, #32]
  40ce0c:	str	x21, [sp, #48]
  40ce10:	str	x0, [sp, #88]
  40ce14:	str	x1, [sp, #80]
  40ce18:	str	x2, [sp, #72]
  40ce1c:	adrp	x0, 431000 <machine_vtable+0x4a0>
  40ce20:	ldr	x0, [x0, #3952]
  40ce24:	ldr	x1, [x0]
  40ce28:	str	x1, [sp, #168]
  40ce2c:	mov	x1, #0x0                   	// #0
  40ce30:	str	xzr, [sp, #112]
  40ce34:	str	xzr, [sp, #120]
  40ce38:	ldr	x0, [sp, #80]
  40ce3c:	str	x0, [sp, #144]
  40ce40:	ldr	x0, [sp, #88]
  40ce44:	cmp	x0, #0x0
  40ce48:	cset	w0, eq  // eq = none
  40ce4c:	and	w0, w0, #0xff
  40ce50:	and	x0, x0, #0xff
  40ce54:	cmp	x0, #0x0
  40ce58:	b.eq	40ce84 <method_list_images+0x88>  // b.none
  40ce5c:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40ce60:	add	x1, x0, #0xdb
  40ce64:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  40ce68:	add	x4, x0, #0x118
  40ce6c:	mov	w3, #0x1de                 	// #478
  40ce70:	mov	x2, x1
  40ce74:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40ce78:	add	x1, x0, #0x130
  40ce7c:	mov	w0, #0x0                   	// #0
  40ce80:	bl	4052a0 <log_assert_failed_realm@plt>
  40ce84:	ldr	x0, [sp, #144]
  40ce88:	cmp	x0, #0x0
  40ce8c:	cset	w0, eq  // eq = none
  40ce90:	and	w0, w0, #0xff
  40ce94:	and	x0, x0, #0xff
  40ce98:	cmp	x0, #0x0
  40ce9c:	b.eq	40cec8 <method_list_images+0xcc>  // b.none
  40cea0:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40cea4:	add	x1, x0, #0xdb
  40cea8:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  40ceac:	add	x4, x0, #0x118
  40ceb0:	mov	w3, #0x1df                 	// #479
  40ceb4:	mov	x2, x1
  40ceb8:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40cebc:	add	x1, x0, #0x138
  40cec0:	mov	w0, #0x0                   	// #0
  40cec4:	bl	4052a0 <log_assert_failed_realm@plt>
  40cec8:	adrp	x0, 431000 <machine_vtable+0x4a0>
  40cecc:	ldr	x0, [x0, #4000]
  40ced0:	bl	4055e0 <internal_hashmap_new@plt>
  40ced4:	str	x0, [sp, #120]
  40ced8:	ldr	x0, [sp, #120]
  40cedc:	cmp	x0, #0x0
  40cee0:	b.ne	40ceec <method_list_images+0xf0>  // b.any
  40cee4:	mov	w19, #0xfffffff4            	// #-12
  40cee8:	b	40d09c <method_list_images+0x2a0>
  40ceec:	ldr	x0, [sp, #120]
  40cef0:	mov	x1, x0
  40cef4:	mov	w0, #0x0                   	// #0
  40cef8:	bl	405af0 <image_discover@plt>
  40cefc:	str	w0, [sp, #108]
  40cf00:	ldr	w0, [sp, #108]
  40cf04:	cmp	w0, #0x0
  40cf08:	b.ge	40cf14 <method_list_images+0x118>  // b.tcont
  40cf0c:	ldr	w19, [sp, #108]
  40cf10:	b	40d09c <method_list_images+0x2a0>
  40cf14:	add	x0, sp, #0x70
  40cf18:	mov	x1, x0
  40cf1c:	ldr	x0, [sp, #88]
  40cf20:	bl	4050d0 <sd_bus_message_new_method_return@plt>
  40cf24:	str	w0, [sp, #108]
  40cf28:	ldr	w0, [sp, #108]
  40cf2c:	cmp	w0, #0x0
  40cf30:	b.ge	40cf3c <method_list_images+0x140>  // b.tcont
  40cf34:	ldr	w19, [sp, #108]
  40cf38:	b	40d09c <method_list_images+0x2a0>
  40cf3c:	ldr	x3, [sp, #112]
  40cf40:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40cf44:	add	x2, x0, #0x3d0
  40cf48:	mov	w1, #0x61                  	// #97
  40cf4c:	mov	x0, x3
  40cf50:	bl	405140 <sd_bus_message_open_container@plt>
  40cf54:	str	w0, [sp, #108]
  40cf58:	ldr	w0, [sp, #108]
  40cf5c:	cmp	w0, #0x0
  40cf60:	b.ge	40cf6c <method_list_images+0x170>  // b.tcont
  40cf64:	ldr	w19, [sp, #108]
  40cf68:	b	40d09c <method_list_images+0x2a0>
  40cf6c:	mov	w0, #0xfffffffe            	// #-2
  40cf70:	str	w0, [sp, #152]
  40cf74:	str	xzr, [sp, #160]
  40cf78:	b	40d044 <method_list_images+0x248>
  40cf7c:	str	xzr, [sp, #136]
  40cf80:	ldr	x0, [sp, #128]
  40cf84:	ldr	x0, [x0, #8]
  40cf88:	bl	418158 <image_bus_path>
  40cf8c:	str	x0, [sp, #136]
  40cf90:	ldr	x0, [sp, #136]
  40cf94:	cmp	x0, #0x0
  40cf98:	b.ne	40cfa8 <method_list_images+0x1ac>  // b.any
  40cf9c:	mov	w19, #0xfffffff4            	// #-12
  40cfa0:	mov	w20, #0x0                   	// #0
  40cfa4:	b	40d034 <method_list_images+0x238>
  40cfa8:	ldr	x20, [sp, #112]
  40cfac:	ldr	x0, [sp, #128]
  40cfb0:	ldr	x21, [x0, #8]
  40cfb4:	ldr	x0, [sp, #128]
  40cfb8:	ldr	w0, [x0, #4]
  40cfbc:	bl	4051b0 <image_type_to_string@plt>
  40cfc0:	mov	x8, x0
  40cfc4:	ldr	x0, [sp, #128]
  40cfc8:	ldrb	w0, [x0, #24]
  40cfcc:	mov	w4, w0
  40cfd0:	ldr	x0, [sp, #128]
  40cfd4:	ldr	x1, [x0, #32]
  40cfd8:	ldr	x0, [sp, #128]
  40cfdc:	ldr	x2, [x0, #40]
  40cfe0:	ldr	x0, [sp, #128]
  40cfe4:	ldr	x3, [x0, #48]
  40cfe8:	ldr	x0, [sp, #136]
  40cfec:	str	x0, [sp]
  40cff0:	mov	x7, x3
  40cff4:	mov	x6, x2
  40cff8:	mov	x5, x1
  40cffc:	mov	x3, x8
  40d000:	mov	x2, x21
  40d004:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40d008:	add	x1, x0, #0x3d0
  40d00c:	mov	x0, x20
  40d010:	bl	4051f0 <sd_bus_message_append@plt>
  40d014:	str	w0, [sp, #108]
  40d018:	ldr	w0, [sp, #108]
  40d01c:	cmp	w0, #0x0
  40d020:	b.ge	40d030 <method_list_images+0x234>  // b.tcont
  40d024:	ldr	w19, [sp, #108]
  40d028:	mov	w20, #0x0                   	// #0
  40d02c:	b	40d034 <method_list_images+0x238>
  40d030:	mov	w20, #0x1                   	// #1
  40d034:	add	x0, sp, #0x88
  40d038:	bl	40ae74 <freep>
  40d03c:	cmp	w20, #0x1
  40d040:	b.ne	40d09c <method_list_images+0x2a0>  // b.any
  40d044:	ldr	x0, [sp, #120]
  40d048:	add	x2, sp, #0x80
  40d04c:	add	x1, sp, #0x98
  40d050:	mov	x3, #0x0                   	// #0
  40d054:	bl	40afc4 <hashmap_iterate>
  40d058:	and	w0, w0, #0xff
  40d05c:	cmp	w0, #0x0
  40d060:	b.ne	40cf7c <method_list_images+0x180>  // b.any
  40d064:	ldr	x0, [sp, #112]
  40d068:	bl	405c30 <sd_bus_message_close_container@plt>
  40d06c:	str	w0, [sp, #108]
  40d070:	ldr	w0, [sp, #108]
  40d074:	cmp	w0, #0x0
  40d078:	b.ge	40d084 <method_list_images+0x288>  // b.tcont
  40d07c:	ldr	w19, [sp, #108]
  40d080:	b	40d09c <method_list_images+0x2a0>
  40d084:	ldr	x0, [sp, #112]
  40d088:	mov	x2, #0x0                   	// #0
  40d08c:	mov	x1, x0
  40d090:	mov	x0, #0x0                   	// #0
  40d094:	bl	405600 <sd_bus_send@plt>
  40d098:	mov	w19, w0
  40d09c:	add	x0, sp, #0x78
  40d0a0:	bl	40affc <hashmap_freep>
  40d0a4:	add	x0, sp, #0x70
  40d0a8:	bl	40af14 <sd_bus_message_unrefp>
  40d0ac:	mov	w1, w19
  40d0b0:	adrp	x0, 431000 <machine_vtable+0x4a0>
  40d0b4:	ldr	x0, [x0, #3952]
  40d0b8:	ldr	x2, [sp, #168]
  40d0bc:	ldr	x0, [x0]
  40d0c0:	eor	x0, x2, x0
  40d0c4:	cmp	x0, #0x0
  40d0c8:	b.eq	40d0d0 <method_list_images+0x2d4>  // b.none
  40d0cc:	bl	4055f0 <__stack_chk_fail@plt>
  40d0d0:	mov	w0, w1
  40d0d4:	ldp	x19, x20, [sp, #32]
  40d0d8:	ldr	x21, [sp, #48]
  40d0dc:	ldp	x29, x30, [sp, #16]
  40d0e0:	add	sp, sp, #0xb0
  40d0e4:	ret

000000000040d0e8 <method_open_machine_pty>:
  40d0e8:	stp	x29, x30, [sp, #-48]!
  40d0ec:	mov	x29, sp
  40d0f0:	str	x0, [sp, #40]
  40d0f4:	str	x1, [sp, #32]
  40d0f8:	str	x2, [sp, #24]
  40d0fc:	adrp	x0, 431000 <machine_vtable+0x4a0>
  40d100:	ldr	x3, [x0, #3912]
  40d104:	ldr	x2, [sp, #24]
  40d108:	ldr	x1, [sp, #32]
  40d10c:	ldr	x0, [sp, #40]
  40d110:	bl	40cb40 <redirect_method_to_machine>
  40d114:	ldp	x29, x30, [sp], #48
  40d118:	ret

000000000040d11c <method_open_machine_login>:
  40d11c:	stp	x29, x30, [sp, #-48]!
  40d120:	mov	x29, sp
  40d124:	str	x0, [sp, #40]
  40d128:	str	x1, [sp, #32]
  40d12c:	str	x2, [sp, #24]
  40d130:	adrp	x0, 431000 <machine_vtable+0x4a0>
  40d134:	ldr	x3, [x0, #3944]
  40d138:	ldr	x2, [sp, #24]
  40d13c:	ldr	x1, [sp, #32]
  40d140:	ldr	x0, [sp, #40]
  40d144:	bl	40cb40 <redirect_method_to_machine>
  40d148:	ldp	x29, x30, [sp], #48
  40d14c:	ret

000000000040d150 <method_open_machine_shell>:
  40d150:	stp	x29, x30, [sp, #-48]!
  40d154:	mov	x29, sp
  40d158:	str	x0, [sp, #40]
  40d15c:	str	x1, [sp, #32]
  40d160:	str	x2, [sp, #24]
  40d164:	adrp	x0, 431000 <machine_vtable+0x4a0>
  40d168:	ldr	x3, [x0, #4056]
  40d16c:	ldr	x2, [sp, #24]
  40d170:	ldr	x1, [sp, #32]
  40d174:	ldr	x0, [sp, #40]
  40d178:	bl	40cb40 <redirect_method_to_machine>
  40d17c:	ldp	x29, x30, [sp], #48
  40d180:	ret

000000000040d184 <method_bind_mount_machine>:
  40d184:	stp	x29, x30, [sp, #-48]!
  40d188:	mov	x29, sp
  40d18c:	str	x0, [sp, #40]
  40d190:	str	x1, [sp, #32]
  40d194:	str	x2, [sp, #24]
  40d198:	adrp	x0, 431000 <machine_vtable+0x4a0>
  40d19c:	ldr	x3, [x0, #3976]
  40d1a0:	ldr	x2, [sp, #24]
  40d1a4:	ldr	x1, [sp, #32]
  40d1a8:	ldr	x0, [sp, #40]
  40d1ac:	bl	40cb40 <redirect_method_to_machine>
  40d1b0:	ldp	x29, x30, [sp], #48
  40d1b4:	ret

000000000040d1b8 <method_copy_machine>:
  40d1b8:	stp	x29, x30, [sp, #-48]!
  40d1bc:	mov	x29, sp
  40d1c0:	str	x0, [sp, #40]
  40d1c4:	str	x1, [sp, #32]
  40d1c8:	str	x2, [sp, #24]
  40d1cc:	adrp	x0, 431000 <machine_vtable+0x4a0>
  40d1d0:	ldr	x3, [x0, #4064]
  40d1d4:	ldr	x2, [sp, #24]
  40d1d8:	ldr	x1, [sp, #32]
  40d1dc:	ldr	x0, [sp, #40]
  40d1e0:	bl	40cb40 <redirect_method_to_machine>
  40d1e4:	ldp	x29, x30, [sp], #48
  40d1e8:	ret

000000000040d1ec <method_open_machine_root_directory>:
  40d1ec:	stp	x29, x30, [sp, #-48]!
  40d1f0:	mov	x29, sp
  40d1f4:	str	x0, [sp, #40]
  40d1f8:	str	x1, [sp, #32]
  40d1fc:	str	x2, [sp, #24]
  40d200:	adrp	x0, 431000 <machine_vtable+0x4a0>
  40d204:	ldr	x3, [x0, #4080]
  40d208:	ldr	x2, [sp, #24]
  40d20c:	ldr	x1, [sp, #32]
  40d210:	ldr	x0, [sp, #40]
  40d214:	bl	40cb40 <redirect_method_to_machine>
  40d218:	ldp	x29, x30, [sp], #48
  40d21c:	ret

000000000040d220 <method_get_machine_uid_shift>:
  40d220:	stp	x29, x30, [sp, #-48]!
  40d224:	mov	x29, sp
  40d228:	str	x0, [sp, #40]
  40d22c:	str	x1, [sp, #32]
  40d230:	str	x2, [sp, #24]
  40d234:	adrp	x0, 431000 <machine_vtable+0x4a0>
  40d238:	ldr	x3, [x0, #4048]
  40d23c:	ldr	x2, [sp, #24]
  40d240:	ldr	x1, [sp, #32]
  40d244:	ldr	x0, [sp, #40]
  40d248:	bl	40cb40 <redirect_method_to_machine>
  40d24c:	ldp	x29, x30, [sp], #48
  40d250:	ret

000000000040d254 <redirect_method_to_image>:
  40d254:	stp	x29, x30, [sp, #-96]!
  40d258:	mov	x29, sp
  40d25c:	str	x19, [sp, #16]
  40d260:	str	x0, [sp, #56]
  40d264:	str	x1, [sp, #48]
  40d268:	str	x2, [sp, #40]
  40d26c:	str	x3, [sp, #32]
  40d270:	adrp	x0, 431000 <machine_vtable+0x4a0>
  40d274:	ldr	x0, [x0, #3952]
  40d278:	ldr	x1, [x0]
  40d27c:	str	x1, [sp, #88]
  40d280:	mov	x1, #0x0                   	// #0
  40d284:	str	xzr, [sp, #72]
  40d288:	ldr	x0, [sp, #56]
  40d28c:	cmp	x0, #0x0
  40d290:	cset	w0, eq  // eq = none
  40d294:	and	w0, w0, #0xff
  40d298:	and	x0, x0, #0xff
  40d29c:	cmp	x0, #0x0
  40d2a0:	b.eq	40d2cc <redirect_method_to_image+0x78>  // b.none
  40d2a4:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40d2a8:	add	x1, x0, #0xdb
  40d2ac:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  40d2b0:	add	x4, x0, #0x130
  40d2b4:	mov	w3, #0x22c                 	// #556
  40d2b8:	mov	x2, x1
  40d2bc:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40d2c0:	add	x1, x0, #0x130
  40d2c4:	mov	w0, #0x0                   	// #0
  40d2c8:	bl	4052a0 <log_assert_failed_realm@plt>
  40d2cc:	ldr	x0, [sp, #48]
  40d2d0:	cmp	x0, #0x0
  40d2d4:	cset	w0, eq  // eq = none
  40d2d8:	and	w0, w0, #0xff
  40d2dc:	and	x0, x0, #0xff
  40d2e0:	cmp	x0, #0x0
  40d2e4:	b.eq	40d310 <redirect_method_to_image+0xbc>  // b.none
  40d2e8:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40d2ec:	add	x1, x0, #0xdb
  40d2f0:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  40d2f4:	add	x4, x0, #0x130
  40d2f8:	mov	w3, #0x22d                 	// #557
  40d2fc:	mov	x2, x1
  40d300:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40d304:	add	x1, x0, #0x138
  40d308:	mov	w0, #0x0                   	// #0
  40d30c:	bl	4052a0 <log_assert_failed_realm@plt>
  40d310:	ldr	x0, [sp, #32]
  40d314:	cmp	x0, #0x0
  40d318:	cset	w0, eq  // eq = none
  40d31c:	and	w0, w0, #0xff
  40d320:	and	x0, x0, #0xff
  40d324:	cmp	x0, #0x0
  40d328:	b.eq	40d354 <redirect_method_to_image+0x100>  // b.none
  40d32c:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40d330:	add	x1, x0, #0xdb
  40d334:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  40d338:	add	x4, x0, #0x130
  40d33c:	mov	w3, #0x22e                 	// #558
  40d340:	mov	x2, x1
  40d344:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40d348:	add	x1, x0, #0x3c8
  40d34c:	mov	w0, #0x0                   	// #0
  40d350:	bl	4052a0 <log_assert_failed_realm@plt>
  40d354:	add	x0, sp, #0x50
  40d358:	mov	x2, x0
  40d35c:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40d360:	add	x1, x0, #0x120
  40d364:	ldr	x0, [sp, #56]
  40d368:	bl	4052b0 <sd_bus_message_read@plt>
  40d36c:	str	w0, [sp, #68]
  40d370:	ldr	w0, [sp, #68]
  40d374:	cmp	w0, #0x0
  40d378:	b.ge	40d384 <redirect_method_to_image+0x130>  // b.tcont
  40d37c:	ldr	w19, [sp, #68]
  40d380:	b	40d454 <redirect_method_to_image+0x200>
  40d384:	ldr	x0, [sp, #80]
  40d388:	bl	405520 <image_name_is_valid@plt>
  40d38c:	and	w0, w0, #0xff
  40d390:	eor	w0, w0, #0x1
  40d394:	and	w0, w0, #0xff
  40d398:	cmp	w0, #0x0
  40d39c:	b.eq	40d3c8 <redirect_method_to_image+0x174>  // b.none
  40d3a0:	ldr	x0, [sp, #80]
  40d3a4:	mov	x3, x0
  40d3a8:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40d3ac:	add	x2, x0, #0x3e0
  40d3b0:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40d3b4:	add	x1, x0, #0x260
  40d3b8:	ldr	x0, [sp, #40]
  40d3bc:	bl	4055d0 <sd_bus_error_setf@plt>
  40d3c0:	mov	w19, w0
  40d3c4:	b	40d454 <redirect_method_to_image+0x200>
  40d3c8:	ldr	x0, [sp, #80]
  40d3cc:	add	x1, sp, #0x48
  40d3d0:	mov	x2, x1
  40d3d4:	mov	x1, x0
  40d3d8:	mov	w0, #0x0                   	// #0
  40d3dc:	bl	404ef0 <image_find@plt>
  40d3e0:	str	w0, [sp, #68]
  40d3e4:	ldr	w0, [sp, #68]
  40d3e8:	cmn	w0, #0x2
  40d3ec:	b.ne	40d418 <redirect_method_to_image+0x1c4>  // b.any
  40d3f0:	ldr	x0, [sp, #80]
  40d3f4:	mov	x3, x0
  40d3f8:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40d3fc:	add	x2, x0, #0x188
  40d400:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40d404:	add	x1, x0, #0x1a0
  40d408:	ldr	x0, [sp, #40]
  40d40c:	bl	4055d0 <sd_bus_error_setf@plt>
  40d410:	mov	w19, w0
  40d414:	b	40d454 <redirect_method_to_image+0x200>
  40d418:	ldr	w0, [sp, #68]
  40d41c:	cmp	w0, #0x0
  40d420:	b.ge	40d42c <redirect_method_to_image+0x1d8>  // b.tcont
  40d424:	ldr	w19, [sp, #68]
  40d428:	b	40d454 <redirect_method_to_image+0x200>
  40d42c:	ldr	x0, [sp, #72]
  40d430:	ldr	x1, [sp, #48]
  40d434:	str	x1, [x0, #128]
  40d438:	ldr	x0, [sp, #72]
  40d43c:	ldr	x3, [sp, #32]
  40d440:	ldr	x2, [sp, #40]
  40d444:	mov	x1, x0
  40d448:	ldr	x0, [sp, #56]
  40d44c:	blr	x3
  40d450:	mov	w19, w0
  40d454:	add	x0, sp, #0x48
  40d458:	bl	40b1f4 <image_unrefp>
  40d45c:	mov	w1, w19
  40d460:	adrp	x0, 431000 <machine_vtable+0x4a0>
  40d464:	ldr	x0, [x0, #3952]
  40d468:	ldr	x2, [sp, #88]
  40d46c:	ldr	x0, [x0]
  40d470:	eor	x0, x2, x0
  40d474:	cmp	x0, #0x0
  40d478:	b.eq	40d480 <redirect_method_to_image+0x22c>  // b.none
  40d47c:	bl	4055f0 <__stack_chk_fail@plt>
  40d480:	mov	w0, w1
  40d484:	ldr	x19, [sp, #16]
  40d488:	ldp	x29, x30, [sp], #96
  40d48c:	ret

000000000040d490 <method_remove_image>:
  40d490:	stp	x29, x30, [sp, #-48]!
  40d494:	mov	x29, sp
  40d498:	str	x0, [sp, #40]
  40d49c:	str	x1, [sp, #32]
  40d4a0:	str	x2, [sp, #24]
  40d4a4:	adrp	x0, 431000 <machine_vtable+0x4a0>
  40d4a8:	ldr	x3, [x0, #3960]
  40d4ac:	ldr	x2, [sp, #24]
  40d4b0:	ldr	x1, [sp, #32]
  40d4b4:	ldr	x0, [sp, #40]
  40d4b8:	bl	40d254 <redirect_method_to_image>
  40d4bc:	ldp	x29, x30, [sp], #48
  40d4c0:	ret

000000000040d4c4 <method_rename_image>:
  40d4c4:	stp	x29, x30, [sp, #-48]!
  40d4c8:	mov	x29, sp
  40d4cc:	str	x0, [sp, #40]
  40d4d0:	str	x1, [sp, #32]
  40d4d4:	str	x2, [sp, #24]
  40d4d8:	adrp	x0, 431000 <machine_vtable+0x4a0>
  40d4dc:	ldr	x3, [x0, #3984]
  40d4e0:	ldr	x2, [sp, #24]
  40d4e4:	ldr	x1, [sp, #32]
  40d4e8:	ldr	x0, [sp, #40]
  40d4ec:	bl	40d254 <redirect_method_to_image>
  40d4f0:	ldp	x29, x30, [sp], #48
  40d4f4:	ret

000000000040d4f8 <method_clone_image>:
  40d4f8:	stp	x29, x30, [sp, #-48]!
  40d4fc:	mov	x29, sp
  40d500:	str	x0, [sp, #40]
  40d504:	str	x1, [sp, #32]
  40d508:	str	x2, [sp, #24]
  40d50c:	adrp	x0, 431000 <machine_vtable+0x4a0>
  40d510:	ldr	x3, [x0, #3904]
  40d514:	ldr	x2, [sp, #24]
  40d518:	ldr	x1, [sp, #32]
  40d51c:	ldr	x0, [sp, #40]
  40d520:	bl	40d254 <redirect_method_to_image>
  40d524:	ldp	x29, x30, [sp], #48
  40d528:	ret

000000000040d52c <method_mark_image_read_only>:
  40d52c:	stp	x29, x30, [sp, #-48]!
  40d530:	mov	x29, sp
  40d534:	str	x0, [sp, #40]
  40d538:	str	x1, [sp, #32]
  40d53c:	str	x2, [sp, #24]
  40d540:	adrp	x0, 431000 <machine_vtable+0x4a0>
  40d544:	ldr	x3, [x0, #3968]
  40d548:	ldr	x2, [sp, #24]
  40d54c:	ldr	x1, [sp, #32]
  40d550:	ldr	x0, [sp, #40]
  40d554:	bl	40d254 <redirect_method_to_image>
  40d558:	ldp	x29, x30, [sp], #48
  40d55c:	ret

000000000040d560 <method_get_image_hostname>:
  40d560:	stp	x29, x30, [sp, #-48]!
  40d564:	mov	x29, sp
  40d568:	str	x0, [sp, #40]
  40d56c:	str	x1, [sp, #32]
  40d570:	str	x2, [sp, #24]
  40d574:	adrp	x0, 431000 <machine_vtable+0x4a0>
  40d578:	ldr	x3, [x0, #4024]
  40d57c:	ldr	x2, [sp, #24]
  40d580:	ldr	x1, [sp, #32]
  40d584:	ldr	x0, [sp, #40]
  40d588:	bl	40d254 <redirect_method_to_image>
  40d58c:	ldp	x29, x30, [sp], #48
  40d590:	ret

000000000040d594 <method_get_image_machine_id>:
  40d594:	stp	x29, x30, [sp, #-48]!
  40d598:	mov	x29, sp
  40d59c:	str	x0, [sp, #40]
  40d5a0:	str	x1, [sp, #32]
  40d5a4:	str	x2, [sp, #24]
  40d5a8:	adrp	x0, 431000 <machine_vtable+0x4a0>
  40d5ac:	ldr	x3, [x0, #4008]
  40d5b0:	ldr	x2, [sp, #24]
  40d5b4:	ldr	x1, [sp, #32]
  40d5b8:	ldr	x0, [sp, #40]
  40d5bc:	bl	40d254 <redirect_method_to_image>
  40d5c0:	ldp	x29, x30, [sp], #48
  40d5c4:	ret

000000000040d5c8 <method_get_image_machine_info>:
  40d5c8:	stp	x29, x30, [sp, #-48]!
  40d5cc:	mov	x29, sp
  40d5d0:	str	x0, [sp, #40]
  40d5d4:	str	x1, [sp, #32]
  40d5d8:	str	x2, [sp, #24]
  40d5dc:	adrp	x0, 431000 <machine_vtable+0x4a0>
  40d5e0:	ldr	x3, [x0, #4040]
  40d5e4:	ldr	x2, [sp, #24]
  40d5e8:	ldr	x1, [sp, #32]
  40d5ec:	ldr	x0, [sp, #40]
  40d5f0:	bl	40d254 <redirect_method_to_image>
  40d5f4:	ldp	x29, x30, [sp], #48
  40d5f8:	ret

000000000040d5fc <method_get_image_os_release>:
  40d5fc:	stp	x29, x30, [sp, #-48]!
  40d600:	mov	x29, sp
  40d604:	str	x0, [sp, #40]
  40d608:	str	x1, [sp, #32]
  40d60c:	str	x2, [sp, #24]
  40d610:	adrp	x0, 431000 <machine_vtable+0x4a0>
  40d614:	ldr	x3, [x0, #3992]
  40d618:	ldr	x2, [sp, #24]
  40d61c:	ldr	x1, [sp, #32]
  40d620:	ldr	x0, [sp, #40]
  40d624:	bl	40d254 <redirect_method_to_image>
  40d628:	ldp	x29, x30, [sp], #48
  40d62c:	ret

000000000040d630 <clean_pool_done>:
  40d630:	stp	x29, x30, [sp, #-128]!
  40d634:	mov	x29, sp
  40d638:	stp	x19, x20, [sp, #16]
  40d63c:	str	x0, [sp, #56]
  40d640:	str	w1, [sp, #52]
  40d644:	str	x2, [sp, #40]
  40d648:	adrp	x0, 431000 <machine_vtable+0x4a0>
  40d64c:	ldr	x0, [x0, #3952]
  40d650:	ldr	x1, [x0]
  40d654:	str	x1, [sp, #120]
  40d658:	mov	x1, #0x0                   	// #0
  40d65c:	str	xzr, [sp, #80]
  40d660:	str	xzr, [sp, #88]
  40d664:	ldr	x0, [sp, #56]
  40d668:	cmp	x0, #0x0
  40d66c:	cset	w0, eq  // eq = none
  40d670:	and	w0, w0, #0xff
  40d674:	and	x0, x0, #0xff
  40d678:	cmp	x0, #0x0
  40d67c:	b.eq	40d6a8 <clean_pool_done+0x78>  // b.none
  40d680:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40d684:	add	x1, x0, #0xdb
  40d688:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  40d68c:	add	x4, x0, #0x150
  40d690:	mov	w3, #0x268                 	// #616
  40d694:	mov	x2, x1
  40d698:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40d69c:	add	x1, x0, #0x400
  40d6a0:	mov	w0, #0x0                   	// #0
  40d6a4:	bl	4052a0 <log_assert_failed_realm@plt>
  40d6a8:	ldr	x0, [sp, #56]
  40d6ac:	ldr	w0, [x0, #36]
  40d6b0:	lsr	w0, w0, #31
  40d6b4:	and	w0, w0, #0xff
  40d6b8:	and	x0, x0, #0xff
  40d6bc:	cmp	x0, #0x0
  40d6c0:	b.eq	40d6ec <clean_pool_done+0xbc>  // b.none
  40d6c4:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40d6c8:	add	x1, x0, #0xdb
  40d6cc:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  40d6d0:	add	x4, x0, #0x150
  40d6d4:	mov	w3, #0x269                 	// #617
  40d6d8:	mov	x2, x1
  40d6dc:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40d6e0:	add	x1, x0, #0x410
  40d6e4:	mov	w0, #0x0                   	// #0
  40d6e8:	bl	4052a0 <log_assert_failed_realm@plt>
  40d6ec:	ldr	x0, [sp, #56]
  40d6f0:	ldr	w0, [x0, #36]
  40d6f4:	mov	w2, #0x0                   	// #0
  40d6f8:	mov	x1, #0x0                   	// #0
  40d6fc:	bl	404fb0 <lseek64@plt>
  40d700:	cmn	x0, #0x1
  40d704:	b.ne	40d718 <clean_pool_done+0xe8>  // b.any
  40d708:	bl	4054d0 <__errno_location@plt>
  40d70c:	ldr	w0, [x0]
  40d710:	neg	w19, w0
  40d714:	b	40d9e8 <clean_pool_done+0x3b8>
  40d718:	ldr	x0, [sp, #56]
  40d71c:	ldr	w2, [x0, #36]
  40d720:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40d724:	add	x1, x0, #0x430
  40d728:	mov	w0, w2
  40d72c:	bl	404fa0 <fdopen@plt>
  40d730:	str	x0, [sp, #88]
  40d734:	ldr	x0, [sp, #88]
  40d738:	cmp	x0, #0x0
  40d73c:	b.ne	40d750 <clean_pool_done+0x120>  // b.any
  40d740:	bl	4054d0 <__errno_location@plt>
  40d744:	ldr	w0, [x0]
  40d748:	neg	w19, w0
  40d74c:	b	40d9e8 <clean_pool_done+0x3b8>
  40d750:	ldr	x0, [sp, #56]
  40d754:	mov	w1, #0xffffffff            	// #-1
  40d758:	str	w1, [x0, #36]
  40d75c:	bl	4054d0 <__errno_location@plt>
  40d760:	str	wzr, [x0]
  40d764:	ldr	x1, [sp, #88]
  40d768:	add	x0, sp, #0x4b
  40d76c:	mov	x3, x1
  40d770:	mov	x2, #0x1                   	// #1
  40d774:	mov	x1, #0x1                   	// #1
  40d778:	bl	4051c0 <fread@plt>
  40d77c:	str	x0, [sp, #112]
  40d780:	ldr	x0, [sp, #112]
  40d784:	cmp	x0, #0x1
  40d788:	b.eq	40d7b0 <clean_pool_done+0x180>  // b.none
  40d78c:	ldr	w0, [sp, #52]
  40d790:	cmp	w0, #0x0
  40d794:	b.lt	40d7a8 <clean_pool_done+0x178>  // b.tstop
  40d798:	mov	w0, #0x5                   	// #5
  40d79c:	bl	40b0c4 <errno_or_else>
  40d7a0:	mov	w19, w0
  40d7a4:	b	40d9e8 <clean_pool_done+0x3b8>
  40d7a8:	ldr	w19, [sp, #52]
  40d7ac:	b	40d9e8 <clean_pool_done+0x3b8>
  40d7b0:	ldr	w0, [sp, #52]
  40d7b4:	cmp	w0, #0x0
  40d7b8:	b.ge	40d82c <clean_pool_done+0x1fc>  // b.tcont
  40d7bc:	str	xzr, [sp, #104]
  40d7c0:	ldrb	w0, [sp, #75]
  40d7c4:	cmp	w0, #0x0
  40d7c8:	b.eq	40d7d4 <clean_pool_done+0x1a4>  // b.none
  40d7cc:	ldr	w19, [sp, #52]
  40d7d0:	b	40d820 <clean_pool_done+0x1f0>
  40d7d4:	ldr	x0, [sp, #88]
  40d7d8:	add	x1, sp, #0x68
  40d7dc:	mov	x2, x1
  40d7e0:	mov	x1, #0x100000              	// #1048576
  40d7e4:	bl	40b170 <read_nul_string>
  40d7e8:	str	w0, [sp, #76]
  40d7ec:	ldr	w0, [sp, #76]
  40d7f0:	cmp	w0, #0x0
  40d7f4:	b.gt	40d800 <clean_pool_done+0x1d0>
  40d7f8:	ldr	w19, [sp, #52]
  40d7fc:	b	40d820 <clean_pool_done+0x1f0>
  40d800:	ldr	x0, [sp, #104]
  40d804:	mov	x3, x0
  40d808:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40d80c:	add	x2, x0, #0x438
  40d810:	ldr	w1, [sp, #52]
  40d814:	ldr	x0, [sp, #40]
  40d818:	bl	405070 <sd_bus_error_set_errnof@plt>
  40d81c:	mov	w19, w0
  40d820:	add	x0, sp, #0x68
  40d824:	bl	40ae74 <freep>
  40d828:	b	40d9e8 <clean_pool_done+0x3b8>
  40d82c:	ldrb	w0, [sp, #75]
  40d830:	eor	w0, w0, #0x1
  40d834:	and	w0, w0, #0xff
  40d838:	and	x0, x0, #0xff
  40d83c:	cmp	x0, #0x0
  40d840:	b.eq	40d86c <clean_pool_done+0x23c>  // b.none
  40d844:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40d848:	add	x1, x0, #0xdb
  40d84c:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  40d850:	add	x4, x0, #0x150
  40d854:	mov	w3, #0x28b                 	// #651
  40d858:	mov	x2, x1
  40d85c:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40d860:	add	x1, x0, #0x458
  40d864:	mov	w0, #0x0                   	// #0
  40d868:	bl	4052a0 <log_assert_failed_realm@plt>
  40d86c:	ldr	x0, [sp, #56]
  40d870:	ldr	x0, [x0, #24]
  40d874:	add	x1, sp, #0x50
  40d878:	bl	4050d0 <sd_bus_message_new_method_return@plt>
  40d87c:	str	w0, [sp, #76]
  40d880:	ldr	w0, [sp, #76]
  40d884:	cmp	w0, #0x0
  40d888:	b.ge	40d894 <clean_pool_done+0x264>  // b.tcont
  40d88c:	ldr	w19, [sp, #76]
  40d890:	b	40d9e8 <clean_pool_done+0x3b8>
  40d894:	ldr	x3, [sp, #80]
  40d898:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40d89c:	add	x2, x0, #0x460
  40d8a0:	mov	w1, #0x61                  	// #97
  40d8a4:	mov	x0, x3
  40d8a8:	bl	405140 <sd_bus_message_open_container@plt>
  40d8ac:	str	w0, [sp, #76]
  40d8b0:	ldr	w0, [sp, #76]
  40d8b4:	cmp	w0, #0x0
  40d8b8:	b.ge	40d8c4 <clean_pool_done+0x294>  // b.tcont
  40d8bc:	ldr	w19, [sp, #76]
  40d8c0:	b	40d9e8 <clean_pool_done+0x3b8>
  40d8c4:	str	xzr, [sp, #96]
  40d8c8:	ldr	x0, [sp, #88]
  40d8cc:	add	x1, sp, #0x60
  40d8d0:	mov	x2, x1
  40d8d4:	mov	x1, #0x100000              	// #1048576
  40d8d8:	bl	40b170 <read_nul_string>
  40d8dc:	str	w0, [sp, #76]
  40d8e0:	ldr	w0, [sp, #76]
  40d8e4:	cmp	w0, #0x0
  40d8e8:	b.ge	40d8f8 <clean_pool_done+0x2c8>  // b.tcont
  40d8ec:	ldr	w19, [sp, #76]
  40d8f0:	mov	w20, #0x0                   	// #0
  40d8f4:	b	40d994 <clean_pool_done+0x364>
  40d8f8:	ldr	w0, [sp, #76]
  40d8fc:	cmp	w0, #0x0
  40d900:	b.ne	40d90c <clean_pool_done+0x2dc>  // b.any
  40d904:	mov	w20, #0x1                   	// #1
  40d908:	b	40d994 <clean_pool_done+0x364>
  40d90c:	bl	4054d0 <__errno_location@plt>
  40d910:	str	wzr, [x0]
  40d914:	ldr	x1, [sp, #88]
  40d918:	add	x0, sp, #0x68
  40d91c:	mov	x3, x1
  40d920:	mov	x2, #0x8                   	// #8
  40d924:	mov	x1, #0x1                   	// #1
  40d928:	bl	4051c0 <fread@plt>
  40d92c:	str	x0, [sp, #112]
  40d930:	ldr	x0, [sp, #112]
  40d934:	cmp	x0, #0x8
  40d938:	b.eq	40d950 <clean_pool_done+0x320>  // b.none
  40d93c:	mov	w0, #0x5                   	// #5
  40d940:	bl	40b0c4 <errno_or_else>
  40d944:	mov	w19, w0
  40d948:	mov	w20, #0x0                   	// #0
  40d94c:	b	40d994 <clean_pool_done+0x364>
  40d950:	ldr	x4, [sp, #80]
  40d954:	ldr	x0, [sp, #96]
  40d958:	ldr	x1, [sp, #104]
  40d95c:	mov	x3, x1
  40d960:	mov	x2, x0
  40d964:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40d968:	add	x1, x0, #0x460
  40d96c:	mov	x0, x4
  40d970:	bl	4051f0 <sd_bus_message_append@plt>
  40d974:	str	w0, [sp, #76]
  40d978:	ldr	w0, [sp, #76]
  40d97c:	cmp	w0, #0x0
  40d980:	b.ge	40d990 <clean_pool_done+0x360>  // b.tcont
  40d984:	ldr	w19, [sp, #76]
  40d988:	mov	w20, #0x0                   	// #0
  40d98c:	b	40d994 <clean_pool_done+0x364>
  40d990:	mov	w20, #0x2                   	// #2
  40d994:	add	x0, sp, #0x60
  40d998:	bl	40ae74 <freep>
  40d99c:	cmp	w20, #0x0
  40d9a0:	b.eq	40d9e8 <clean_pool_done+0x3b8>  // b.none
  40d9a4:	cmp	w20, #0x2
  40d9a8:	b.ne	40d9b0 <clean_pool_done+0x380>  // b.any
  40d9ac:	b	40d8c4 <clean_pool_done+0x294>
  40d9b0:	ldr	x0, [sp, #80]
  40d9b4:	bl	405c30 <sd_bus_message_close_container@plt>
  40d9b8:	str	w0, [sp, #76]
  40d9bc:	ldr	w0, [sp, #76]
  40d9c0:	cmp	w0, #0x0
  40d9c4:	b.ge	40d9d0 <clean_pool_done+0x3a0>  // b.tcont
  40d9c8:	ldr	w19, [sp, #76]
  40d9cc:	b	40d9e8 <clean_pool_done+0x3b8>
  40d9d0:	ldr	x0, [sp, #80]
  40d9d4:	mov	x2, #0x0                   	// #0
  40d9d8:	mov	x1, x0
  40d9dc:	mov	x0, #0x0                   	// #0
  40d9e0:	bl	405600 <sd_bus_send@plt>
  40d9e4:	mov	w19, w0
  40d9e8:	add	x0, sp, #0x58
  40d9ec:	bl	40b14c <fclosep>
  40d9f0:	add	x0, sp, #0x50
  40d9f4:	bl	40af14 <sd_bus_message_unrefp>
  40d9f8:	mov	w1, w19
  40d9fc:	adrp	x0, 431000 <machine_vtable+0x4a0>
  40da00:	ldr	x0, [x0, #3952]
  40da04:	ldr	x2, [sp, #120]
  40da08:	ldr	x0, [x0]
  40da0c:	eor	x0, x2, x0
  40da10:	cmp	x0, #0x0
  40da14:	b.eq	40da1c <clean_pool_done+0x3ec>  // b.none
  40da18:	bl	4055f0 <__stack_chk_fail@plt>
  40da1c:	mov	w0, w1
  40da20:	ldp	x19, x20, [sp, #16]
  40da24:	ldp	x29, x30, [sp], #128
  40da28:	ret

000000000040da2c <method_clean_pool>:
  40da2c:	stp	x29, x30, [sp, #-160]!
  40da30:	mov	x29, sp
  40da34:	stp	x19, x20, [sp, #16]
  40da38:	str	x0, [sp, #56]
  40da3c:	str	x1, [sp, #48]
  40da40:	str	x2, [sp, #40]
  40da44:	adrp	x0, 431000 <machine_vtable+0x4a0>
  40da48:	ldr	x0, [x0, #3952]
  40da4c:	ldr	x1, [x0]
  40da50:	str	x1, [sp, #152]
  40da54:	mov	x1, #0x0                   	// #0
  40da58:	mov	w0, #0xffffffff            	// #-1
  40da5c:	str	w0, [sp, #144]
  40da60:	mov	w0, #0xffffffff            	// #-1
  40da64:	str	w0, [sp, #148]
  40da68:	mov	w0, #0xffffffff            	// #-1
  40da6c:	str	w0, [sp, #72]
  40da70:	ldr	x0, [sp, #48]
  40da74:	str	x0, [sp, #112]
  40da78:	ldr	x0, [sp, #56]
  40da7c:	cmp	x0, #0x0
  40da80:	cset	w0, eq  // eq = none
  40da84:	and	w0, w0, #0xff
  40da88:	and	x0, x0, #0xff
  40da8c:	cmp	x0, #0x0
  40da90:	b.eq	40dabc <method_clean_pool+0x90>  // b.none
  40da94:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40da98:	add	x1, x0, #0xdb
  40da9c:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  40daa0:	add	x4, x0, #0x160
  40daa4:	mov	w3, #0x2c0                 	// #704
  40daa8:	mov	x2, x1
  40daac:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40dab0:	add	x1, x0, #0x130
  40dab4:	mov	w0, #0x0                   	// #0
  40dab8:	bl	4052a0 <log_assert_failed_realm@plt>
  40dabc:	ldr	x0, [sp, #112]
  40dac0:	ldr	w0, [x0, #88]
  40dac4:	cmp	w0, #0x3f
  40dac8:	b.ls	40daec <method_clean_pool+0xc0>  // b.plast
  40dacc:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40dad0:	add	x2, x0, #0x468
  40dad4:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40dad8:	add	x1, x0, #0x488
  40dadc:	ldr	x0, [sp, #40]
  40dae0:	bl	4055d0 <sd_bus_error_setf@plt>
  40dae4:	mov	w19, w0
  40dae8:	b	40df90 <method_clean_pool+0x564>
  40daec:	add	x0, sp, #0x58
  40daf0:	mov	x2, x0
  40daf4:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40daf8:	add	x1, x0, #0x120
  40dafc:	ldr	x0, [sp, #56]
  40db00:	bl	4052b0 <sd_bus_message_read@plt>
  40db04:	str	w0, [sp, #80]
  40db08:	ldr	w0, [sp, #80]
  40db0c:	cmp	w0, #0x0
  40db10:	b.ge	40db1c <method_clean_pool+0xf0>  // b.tcont
  40db14:	ldr	w19, [sp, #80]
  40db18:	b	40df90 <method_clean_pool+0x564>
  40db1c:	ldr	x2, [sp, #88]
  40db20:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40db24:	add	x1, x0, #0x4b8
  40db28:	mov	x0, x2
  40db2c:	bl	405840 <strcmp@plt>
  40db30:	cmp	w0, #0x0
  40db34:	b.ne	40db40 <method_clean_pool+0x114>  // b.any
  40db38:	str	wzr, [sp, #84]
  40db3c:	b	40db90 <method_clean_pool+0x164>
  40db40:	ldr	x2, [sp, #88]
  40db44:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40db48:	add	x1, x0, #0x4c0
  40db4c:	mov	x0, x2
  40db50:	bl	405840 <strcmp@plt>
  40db54:	cmp	w0, #0x0
  40db58:	b.ne	40db68 <method_clean_pool+0x13c>  // b.any
  40db5c:	mov	w0, #0x1                   	// #1
  40db60:	str	w0, [sp, #84]
  40db64:	b	40db90 <method_clean_pool+0x164>
  40db68:	ldr	x0, [sp, #88]
  40db6c:	mov	x3, x0
  40db70:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40db74:	add	x2, x0, #0x4c8
  40db78:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40db7c:	add	x1, x0, #0x260
  40db80:	ldr	x0, [sp, #40]
  40db84:	bl	4055d0 <sd_bus_error_setf@plt>
  40db88:	mov	w19, w0
  40db8c:	b	40df90 <method_clean_pool+0x564>
  40db90:	ldr	x0, [sp, #112]
  40db94:	add	x0, x0, #0x28
  40db98:	ldr	x7, [sp, #40]
  40db9c:	mov	x6, x0
  40dba0:	mov	w5, #0xffffffff            	// #-1
  40dba4:	mov	w4, #0x0                   	// #0
  40dba8:	mov	x3, #0x0                   	// #0
  40dbac:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40dbb0:	add	x2, x0, #0x4e0
  40dbb4:	mov	w1, #0x15                  	// #21
  40dbb8:	ldr	x0, [sp, #56]
  40dbbc:	bl	405bb0 <bus_verify_polkit_async@plt>
  40dbc0:	str	w0, [sp, #80]
  40dbc4:	ldr	w0, [sp, #80]
  40dbc8:	cmp	w0, #0x0
  40dbcc:	b.ge	40dbd8 <method_clean_pool+0x1ac>  // b.tcont
  40dbd0:	ldr	w19, [sp, #80]
  40dbd4:	b	40df90 <method_clean_pool+0x564>
  40dbd8:	ldr	w0, [sp, #80]
  40dbdc:	cmp	w0, #0x0
  40dbe0:	b.ne	40dbec <method_clean_pool+0x1c0>  // b.any
  40dbe4:	mov	w19, #0x1                   	// #1
  40dbe8:	b	40df90 <method_clean_pool+0x564>
  40dbec:	add	x0, sp, #0x90
  40dbf0:	mov	w1, #0x800                 	// #2048
  40dbf4:	movk	w1, #0x8, lsl #16
  40dbf8:	bl	405780 <pipe2@plt>
  40dbfc:	cmp	w0, #0x0
  40dc00:	b.ge	40dc24 <method_clean_pool+0x1f8>  // b.tcont
  40dc04:	bl	4054d0 <__errno_location@plt>
  40dc08:	ldr	w1, [x0]
  40dc0c:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40dc10:	add	x2, x0, #0x510
  40dc14:	ldr	x0, [sp, #40]
  40dc18:	bl	405070 <sd_bus_error_set_errnof@plt>
  40dc1c:	mov	w19, w0
  40dc20:	b	40df90 <method_clean_pool+0x564>
  40dc24:	mov	w1, #0x2                   	// #2
  40dc28:	movk	w1, #0x8, lsl #16
  40dc2c:	mov	x0, #0x0                   	// #0
  40dc30:	bl	4053f0 <open_tmpfile_unlinkable@plt>
  40dc34:	str	w0, [sp, #72]
  40dc38:	ldr	w0, [sp, #72]
  40dc3c:	cmp	w0, #0x0
  40dc40:	b.ge	40dc54 <method_clean_pool+0x228>  // b.tcont
  40dc44:	bl	4054d0 <__errno_location@plt>
  40dc48:	ldr	w0, [x0]
  40dc4c:	neg	w19, w0
  40dc50:	b	40df90 <method_clean_pool+0x564>
  40dc54:	add	x0, sp, #0x4c
  40dc58:	mov	x2, x0
  40dc5c:	mov	w1, #0x1                   	// #1
  40dc60:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40dc64:	add	x0, x0, #0x530
  40dc68:	bl	40b438 <safe_fork>
  40dc6c:	str	w0, [sp, #80]
  40dc70:	ldr	w0, [sp, #80]
  40dc74:	cmp	w0, #0x0
  40dc78:	b.ge	40dc98 <method_clean_pool+0x26c>  // b.tcont
  40dc7c:	ldr	w1, [sp, #80]
  40dc80:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40dc84:	add	x2, x0, #0x540
  40dc88:	ldr	x0, [sp, #40]
  40dc8c:	bl	405070 <sd_bus_error_set_errnof@plt>
  40dc90:	mov	w19, w0
  40dc94:	b	40df90 <method_clean_pool+0x564>
  40dc98:	ldr	w0, [sp, #80]
  40dc9c:	cmp	w0, #0x0
  40dca0:	b.ne	40df0c <method_clean_pool+0x4e0>  // b.any
  40dca4:	str	xzr, [sp, #96]
  40dca8:	mov	w0, #0x1                   	// #1
  40dcac:	strb	w0, [sp, #71]
  40dcb0:	ldr	w0, [sp, #144]
  40dcb4:	bl	405240 <safe_close@plt>
  40dcb8:	str	w0, [sp, #144]
  40dcbc:	adrp	x0, 431000 <machine_vtable+0x4a0>
  40dcc0:	ldr	x0, [x0, #4000]
  40dcc4:	bl	4055e0 <internal_hashmap_new@plt>
  40dcc8:	str	x0, [sp, #96]
  40dccc:	ldr	x0, [sp, #96]
  40dcd0:	cmp	x0, #0x0
  40dcd4:	b.ne	40dce4 <method_clean_pool+0x2b8>  // b.any
  40dcd8:	mov	w0, #0xfffffff4            	// #-12
  40dcdc:	str	w0, [sp, #80]
  40dce0:	b	40def4 <method_clean_pool+0x4c8>
  40dce4:	ldr	x0, [sp, #96]
  40dce8:	mov	x1, x0
  40dcec:	mov	w0, #0x0                   	// #0
  40dcf0:	bl	405af0 <image_discover@plt>
  40dcf4:	str	w0, [sp, #80]
  40dcf8:	ldr	w0, [sp, #80]
  40dcfc:	cmp	w0, #0x0
  40dd00:	b.lt	40def0 <method_clean_pool+0x4c4>  // b.tstop
  40dd04:	ldr	w0, [sp, #72]
  40dd08:	add	x1, sp, #0x47
  40dd0c:	mov	x2, #0x1                   	// #1
  40dd10:	bl	405620 <write@plt>
  40dd14:	str	x0, [sp, #120]
  40dd18:	ldr	x0, [sp, #120]
  40dd1c:	cmp	x0, #0x0
  40dd20:	b.ge	40dd38 <method_clean_pool+0x30c>  // b.tcont
  40dd24:	bl	4054d0 <__errno_location@plt>
  40dd28:	ldr	w0, [x0]
  40dd2c:	neg	w0, w0
  40dd30:	str	w0, [sp, #80]
  40dd34:	b	40def4 <method_clean_pool+0x4c8>
  40dd38:	mov	w0, #0xfffffffe            	// #-2
  40dd3c:	str	w0, [sp, #128]
  40dd40:	str	xzr, [sp, #136]
  40dd44:	b	40debc <method_clean_pool+0x490>
  40dd48:	ldr	x0, [sp, #104]
  40dd4c:	bl	40b2b8 <IMAGE_IS_VENDOR>
  40dd50:	and	w0, w0, #0xff
  40dd54:	cmp	w0, #0x0
  40dd58:	b.eq	40dd60 <method_clean_pool+0x334>  // b.none
  40dd5c:	b	40debc <method_clean_pool+0x490>
  40dd60:	ldr	x0, [sp, #104]
  40dd64:	bl	40b354 <IMAGE_IS_HOST>
  40dd68:	and	w0, w0, #0xff
  40dd6c:	cmp	w0, #0x0
  40dd70:	b.eq	40dd78 <method_clean_pool+0x34c>  // b.none
  40dd74:	b	40debc <method_clean_pool+0x490>
  40dd78:	ldr	w0, [sp, #84]
  40dd7c:	cmp	w0, #0x1
  40dd80:	b.ne	40dda4 <method_clean_pool+0x378>  // b.any
  40dd84:	ldr	x0, [sp, #104]
  40dd88:	bl	40b228 <IMAGE_IS_HIDDEN>
  40dd8c:	and	w0, w0, #0xff
  40dd90:	eor	w0, w0, #0x1
  40dd94:	and	w0, w0, #0xff
  40dd98:	cmp	w0, #0x0
  40dd9c:	b.eq	40dda4 <method_clean_pool+0x378>  // b.none
  40dda0:	b	40debc <method_clean_pool+0x490>
  40dda4:	ldr	x0, [sp, #104]
  40dda8:	bl	405a70 <image_remove@plt>
  40ddac:	str	w0, [sp, #80]
  40ddb0:	ldr	w0, [sp, #80]
  40ddb4:	cmn	w0, #0x10
  40ddb8:	b.ne	40ddc0 <method_clean_pool+0x394>  // b.any
  40ddbc:	b	40debc <method_clean_pool+0x490>
  40ddc0:	ldr	w0, [sp, #80]
  40ddc4:	cmp	w0, #0x0
  40ddc8:	b.ge	40de2c <method_clean_pool+0x400>  // b.tcont
  40ddcc:	strb	wzr, [sp, #71]
  40ddd0:	ldr	w0, [sp, #72]
  40ddd4:	mov	x1, #0x0                   	// #0
  40ddd8:	bl	405680 <ftruncate64@plt>
  40dddc:	ldr	w0, [sp, #72]
  40dde0:	mov	w2, #0x0                   	// #0
  40dde4:	mov	x1, #0x0                   	// #0
  40dde8:	bl	404fb0 <lseek64@plt>
  40ddec:	ldr	w0, [sp, #72]
  40ddf0:	add	x1, sp, #0x47
  40ddf4:	mov	x2, #0x1                   	// #1
  40ddf8:	bl	405620 <write@plt>
  40ddfc:	ldr	w19, [sp, #72]
  40de00:	ldr	x0, [sp, #104]
  40de04:	ldr	x20, [x0, #8]
  40de08:	ldr	x0, [sp, #104]
  40de0c:	ldr	x0, [x0, #8]
  40de10:	bl	405b50 <strlen@plt>
  40de14:	add	x0, x0, #0x1
  40de18:	mov	x2, x0
  40de1c:	mov	x1, x20
  40de20:	mov	w0, w19
  40de24:	bl	405620 <write@plt>
  40de28:	b	40def4 <method_clean_pool+0x4c8>
  40de2c:	ldr	w19, [sp, #72]
  40de30:	ldr	x0, [sp, #104]
  40de34:	ldr	x20, [x0, #8]
  40de38:	ldr	x0, [sp, #104]
  40de3c:	ldr	x0, [x0, #8]
  40de40:	bl	405b50 <strlen@plt>
  40de44:	add	x0, x0, #0x1
  40de48:	mov	x2, x0
  40de4c:	mov	x1, x20
  40de50:	mov	w0, w19
  40de54:	bl	405620 <write@plt>
  40de58:	str	x0, [sp, #120]
  40de5c:	ldr	x0, [sp, #120]
  40de60:	cmp	x0, #0x0
  40de64:	b.ge	40de7c <method_clean_pool+0x450>  // b.tcont
  40de68:	bl	4054d0 <__errno_location@plt>
  40de6c:	ldr	w0, [x0]
  40de70:	neg	w0, w0
  40de74:	str	w0, [sp, #80]
  40de78:	b	40def4 <method_clean_pool+0x4c8>
  40de7c:	ldr	w3, [sp, #72]
  40de80:	ldr	x0, [sp, #104]
  40de84:	add	x0, x0, #0x38
  40de88:	mov	x2, #0x8                   	// #8
  40de8c:	mov	x1, x0
  40de90:	mov	w0, w3
  40de94:	bl	405620 <write@plt>
  40de98:	str	x0, [sp, #120]
  40de9c:	ldr	x0, [sp, #120]
  40dea0:	cmp	x0, #0x0
  40dea4:	b.ge	40debc <method_clean_pool+0x490>  // b.tcont
  40dea8:	bl	4054d0 <__errno_location@plt>
  40deac:	ldr	w0, [x0]
  40deb0:	neg	w0, w0
  40deb4:	str	w0, [sp, #80]
  40deb8:	b	40def4 <method_clean_pool+0x4c8>
  40debc:	ldr	x0, [sp, #96]
  40dec0:	add	x2, sp, #0x68
  40dec4:	add	x1, sp, #0x80
  40dec8:	mov	x3, #0x0                   	// #0
  40decc:	bl	40afc4 <hashmap_iterate>
  40ded0:	and	w0, w0, #0xff
  40ded4:	cmp	w0, #0x0
  40ded8:	b.ne	40dd48 <method_clean_pool+0x31c>  // b.any
  40dedc:	ldr	w0, [sp, #72]
  40dee0:	bl	405240 <safe_close@plt>
  40dee4:	str	w0, [sp, #72]
  40dee8:	mov	w0, #0x0                   	// #0
  40deec:	bl	405300 <_exit@plt>
  40def0:	nop
  40def4:	ldr	w0, [sp, #148]
  40def8:	add	x1, sp, #0x50
  40defc:	mov	x2, #0x4                   	// #4
  40df00:	bl	405620 <write@plt>
  40df04:	mov	w0, #0x1                   	// #1
  40df08:	bl	405300 <_exit@plt>
  40df0c:	ldr	w0, [sp, #148]
  40df10:	bl	405240 <safe_close@plt>
  40df14:	str	w0, [sp, #148]
  40df18:	ldr	w0, [sp, #76]
  40df1c:	ldr	w1, [sp, #144]
  40df20:	add	x2, sp, #0x80
  40df24:	mov	x5, x2
  40df28:	mov	w4, w1
  40df2c:	ldr	x3, [sp, #56]
  40df30:	mov	w2, w0
  40df34:	mov	x1, #0x0                   	// #0
  40df38:	ldr	x0, [sp, #112]
  40df3c:	bl	4188a0 <operation_new>
  40df40:	str	w0, [sp, #80]
  40df44:	ldr	w0, [sp, #80]
  40df48:	cmp	w0, #0x0
  40df4c:	b.ge	40df60 <method_clean_pool+0x534>  // b.tcont
  40df50:	ldr	w0, [sp, #76]
  40df54:	bl	405280 <sigkill_wait@plt>
  40df58:	ldr	w19, [sp, #80]
  40df5c:	b	40df90 <method_clean_pool+0x564>
  40df60:	ldr	x0, [sp, #128]
  40df64:	ldr	w1, [sp, #72]
  40df68:	str	w1, [x0, #36]
  40df6c:	ldr	x0, [sp, #128]
  40df70:	adrp	x1, 40d000 <method_list_images+0x204>
  40df74:	add	x1, x1, #0x630
  40df78:	str	x1, [x0, #48]
  40df7c:	mov	w0, #0xffffffff            	// #-1
  40df80:	str	w0, [sp, #72]
  40df84:	mov	w0, #0xffffffff            	// #-1
  40df88:	str	w0, [sp, #144]
  40df8c:	mov	w19, #0x1                   	// #1
  40df90:	add	x0, sp, #0x48
  40df94:	bl	40b108 <closep>
  40df98:	add	x0, sp, #0x90
  40df9c:	bl	40b12c <close_pairp>
  40dfa0:	mov	w1, w19
  40dfa4:	adrp	x0, 431000 <machine_vtable+0x4a0>
  40dfa8:	ldr	x0, [x0, #3952]
  40dfac:	ldr	x2, [sp, #152]
  40dfb0:	ldr	x0, [x0]
  40dfb4:	eor	x0, x2, x0
  40dfb8:	cmp	x0, #0x0
  40dfbc:	b.eq	40dfc4 <method_clean_pool+0x598>  // b.none
  40dfc0:	bl	4055f0 <__stack_chk_fail@plt>
  40dfc4:	mov	w0, w1
  40dfc8:	ldp	x19, x20, [sp, #16]
  40dfcc:	ldp	x29, x30, [sp], #160
  40dfd0:	ret

000000000040dfd4 <method_set_pool_limit>:
  40dfd4:	stp	x29, x30, [sp, #-80]!
  40dfd8:	mov	x29, sp
  40dfdc:	str	x0, [sp, #40]
  40dfe0:	str	x1, [sp, #32]
  40dfe4:	str	x2, [sp, #24]
  40dfe8:	adrp	x0, 431000 <machine_vtable+0x4a0>
  40dfec:	ldr	x0, [x0, #3952]
  40dff0:	ldr	x1, [x0]
  40dff4:	str	x1, [sp, #72]
  40dff8:	mov	x1, #0x0                   	// #0
  40dffc:	ldr	x0, [sp, #32]
  40e000:	str	x0, [sp, #64]
  40e004:	ldr	x0, [sp, #40]
  40e008:	cmp	x0, #0x0
  40e00c:	cset	w0, eq  // eq = none
  40e010:	and	w0, w0, #0xff
  40e014:	and	x0, x0, #0xff
  40e018:	cmp	x0, #0x0
  40e01c:	b.eq	40e048 <method_set_pool_limit+0x74>  // b.none
  40e020:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40e024:	add	x1, x0, #0xdb
  40e028:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  40e02c:	add	x4, x0, #0x1a8
  40e030:	mov	w3, #0x34b                 	// #843
  40e034:	mov	x2, x1
  40e038:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40e03c:	add	x1, x0, #0x130
  40e040:	mov	w0, #0x0                   	// #0
  40e044:	bl	4052a0 <log_assert_failed_realm@plt>
  40e048:	add	x0, sp, #0x38
  40e04c:	mov	x2, x0
  40e050:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40e054:	add	x1, x0, #0x128
  40e058:	ldr	x0, [sp, #40]
  40e05c:	bl	4052b0 <sd_bus_message_read@plt>
  40e060:	str	w0, [sp, #52]
  40e064:	ldr	w0, [sp, #52]
  40e068:	cmp	w0, #0x0
  40e06c:	b.ge	40e078 <method_set_pool_limit+0xa4>  // b.tcont
  40e070:	ldr	w0, [sp, #52]
  40e074:	b	40e1b8 <method_set_pool_limit+0x1e4>
  40e078:	ldr	x0, [sp, #56]
  40e07c:	bl	40b1c0 <FILE_SIZE_VALID_OR_INFINITY>
  40e080:	and	w0, w0, #0xff
  40e084:	eor	w0, w0, #0x1
  40e088:	and	w0, w0, #0xff
  40e08c:	cmp	w0, #0x0
  40e090:	b.eq	40e0b0 <method_set_pool_limit+0xdc>  // b.none
  40e094:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40e098:	add	x2, x0, #0x558
  40e09c:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40e0a0:	add	x1, x0, #0x260
  40e0a4:	ldr	x0, [sp, #24]
  40e0a8:	bl	4055d0 <sd_bus_error_setf@plt>
  40e0ac:	b	40e1b8 <method_set_pool_limit+0x1e4>
  40e0b0:	ldr	x0, [sp, #64]
  40e0b4:	add	x0, x0, #0x28
  40e0b8:	ldr	x7, [sp, #24]
  40e0bc:	mov	x6, x0
  40e0c0:	mov	w5, #0xffffffff            	// #-1
  40e0c4:	mov	w4, #0x0                   	// #0
  40e0c8:	mov	x3, #0x0                   	// #0
  40e0cc:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40e0d0:	add	x2, x0, #0x4e0
  40e0d4:	mov	w1, #0x15                  	// #21
  40e0d8:	ldr	x0, [sp, #40]
  40e0dc:	bl	405bb0 <bus_verify_polkit_async@plt>
  40e0e0:	str	w0, [sp, #52]
  40e0e4:	ldr	w0, [sp, #52]
  40e0e8:	cmp	w0, #0x0
  40e0ec:	b.ge	40e0f8 <method_set_pool_limit+0x124>  // b.tcont
  40e0f0:	ldr	w0, [sp, #52]
  40e0f4:	b	40e1b8 <method_set_pool_limit+0x1e4>
  40e0f8:	ldr	w0, [sp, #52]
  40e0fc:	cmp	w0, #0x0
  40e100:	b.ne	40e10c <method_set_pool_limit+0x138>  // b.any
  40e104:	mov	w0, #0x1                   	// #1
  40e108:	b	40e1b8 <method_set_pool_limit+0x1e4>
  40e10c:	ldr	x0, [sp, #24]
  40e110:	bl	405a20 <setup_machine_directory@plt>
  40e114:	str	w0, [sp, #52]
  40e118:	ldr	w0, [sp, #52]
  40e11c:	cmp	w0, #0x0
  40e120:	b.ge	40e12c <method_set_pool_limit+0x158>  // b.tcont
  40e124:	ldr	w0, [sp, #52]
  40e128:	b	40e1b8 <method_set_pool_limit+0x1e4>
  40e12c:	ldr	x0, [sp, #56]
  40e130:	mov	x2, x0
  40e134:	mov	x1, #0x0                   	// #0
  40e138:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40e13c:	add	x0, x0, #0x108
  40e140:	bl	405650 <btrfs_qgroup_set_limit@plt>
  40e144:	ldr	x0, [sp, #56]
  40e148:	mov	x2, x0
  40e14c:	mov	x1, #0x0                   	// #0
  40e150:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40e154:	add	x0, x0, #0x108
  40e158:	bl	405980 <btrfs_subvol_set_subtree_quota_limit@plt>
  40e15c:	str	w0, [sp, #52]
  40e160:	ldr	w0, [sp, #52]
  40e164:	cmn	w0, #0x19
  40e168:	b.ne	40e188 <method_set_pool_limit+0x1b4>  // b.any
  40e16c:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40e170:	add	x2, x0, #0x570
  40e174:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40e178:	add	x1, x0, #0x598
  40e17c:	ldr	x0, [sp, #24]
  40e180:	bl	4055d0 <sd_bus_error_setf@plt>
  40e184:	b	40e1b8 <method_set_pool_limit+0x1e4>
  40e188:	ldr	w0, [sp, #52]
  40e18c:	cmp	w0, #0x0
  40e190:	b.ge	40e1ac <method_set_pool_limit+0x1d8>  // b.tcont
  40e194:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40e198:	add	x2, x0, #0x5c0
  40e19c:	ldr	w1, [sp, #52]
  40e1a0:	ldr	x0, [sp, #24]
  40e1a4:	bl	405070 <sd_bus_error_set_errnof@plt>
  40e1a8:	b	40e1b8 <method_set_pool_limit+0x1e4>
  40e1ac:	mov	x1, #0x0                   	// #0
  40e1b0:	ldr	x0, [sp, #40]
  40e1b4:	bl	404f00 <sd_bus_reply_method_return@plt>
  40e1b8:	mov	w1, w0
  40e1bc:	adrp	x0, 431000 <machine_vtable+0x4a0>
  40e1c0:	ldr	x0, [x0, #3952]
  40e1c4:	ldr	x2, [sp, #72]
  40e1c8:	ldr	x0, [x0]
  40e1cc:	eor	x0, x2, x0
  40e1d0:	cmp	x0, #0x0
  40e1d4:	b.eq	40e1dc <method_set_pool_limit+0x208>  // b.none
  40e1d8:	bl	4055f0 <__stack_chk_fail@plt>
  40e1dc:	mov	w0, w1
  40e1e0:	ldp	x29, x30, [sp], #80
  40e1e4:	ret

000000000040e1e8 <method_set_image_limit>:
  40e1e8:	stp	x29, x30, [sp, #-48]!
  40e1ec:	mov	x29, sp
  40e1f0:	str	x0, [sp, #40]
  40e1f4:	str	x1, [sp, #32]
  40e1f8:	str	x2, [sp, #24]
  40e1fc:	adrp	x0, 431000 <machine_vtable+0x4a0>
  40e200:	ldr	x3, [x0, #4032]
  40e204:	ldr	x2, [sp, #24]
  40e208:	ldr	x1, [sp, #32]
  40e20c:	ldr	x0, [sp, #40]
  40e210:	bl	40d254 <redirect_method_to_image>
  40e214:	ldp	x29, x30, [sp], #48
  40e218:	ret

000000000040e21c <method_map_from_machine_user>:
  40e21c:	stp	x29, x30, [sp, #-160]!
  40e220:	mov	x29, sp
  40e224:	str	x19, [sp, #16]
  40e228:	str	x0, [x29, #56]
  40e22c:	str	x1, [x29, #48]
  40e230:	str	x2, [x29, #40]
  40e234:	adrp	x0, 431000 <machine_vtable+0x4a0>
  40e238:	ldr	x0, [x0, #3952]
  40e23c:	ldr	x1, [x0]
  40e240:	str	x1, [x29, #152]
  40e244:	mov	x1, #0x0                   	// #0
  40e248:	str	xzr, [x29, #96]
  40e24c:	ldr	x0, [x29, #48]
  40e250:	str	x0, [x29, #120]
  40e254:	add	x1, x29, #0x40
  40e258:	add	x0, x29, #0x68
  40e25c:	mov	x3, x1
  40e260:	mov	x2, x0
  40e264:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40e268:	add	x1, x0, #0x5e8
  40e26c:	ldr	x0, [x29, #56]
  40e270:	bl	4052b0 <sd_bus_message_read@plt>
  40e274:	str	w0, [x29, #80]
  40e278:	ldr	w0, [x29, #80]
  40e27c:	cmp	w0, #0x0
  40e280:	b.ge	40e28c <method_map_from_machine_user+0x70>  // b.tcont
  40e284:	ldr	w19, [x29, #80]
  40e288:	b	40e5c4 <method_map_from_machine_user+0x3a8>
  40e28c:	ldr	w0, [x29, #64]
  40e290:	bl	405420 <uid_is_valid@plt>
  40e294:	and	w0, w0, #0xff
  40e298:	eor	w0, w0, #0x1
  40e29c:	and	w0, w0, #0xff
  40e2a0:	cmp	w0, #0x0
  40e2a4:	b.eq	40e2d0 <method_map_from_machine_user+0xb4>  // b.none
  40e2a8:	ldr	w0, [x29, #64]
  40e2ac:	mov	w3, w0
  40e2b0:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40e2b4:	add	x2, x0, #0x5f0
  40e2b8:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40e2bc:	add	x1, x0, #0x260
  40e2c0:	ldr	x0, [x29, #40]
  40e2c4:	bl	4055d0 <sd_bus_error_setf@plt>
  40e2c8:	mov	w19, w0
  40e2cc:	b	40e5c4 <method_map_from_machine_user+0x3a8>
  40e2d0:	ldr	x0, [x29, #120]
  40e2d4:	ldr	x0, [x0, #16]
  40e2d8:	ldr	x1, [x29, #104]
  40e2dc:	bl	40afa0 <hashmap_get>
  40e2e0:	str	x0, [x29, #128]
  40e2e4:	ldr	x0, [x29, #128]
  40e2e8:	cmp	x0, #0x0
  40e2ec:	b.ne	40e318 <method_map_from_machine_user+0xfc>  // b.any
  40e2f0:	ldr	x0, [x29, #104]
  40e2f4:	mov	x3, x0
  40e2f8:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40e2fc:	add	x2, x0, #0x140
  40e300:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40e304:	add	x1, x0, #0x158
  40e308:	ldr	x0, [x29, #40]
  40e30c:	bl	4055d0 <sd_bus_error_setf@plt>
  40e310:	mov	w19, w0
  40e314:	b	40e5c4 <method_map_from_machine_user+0x3a8>
  40e318:	ldr	x0, [x29, #128]
  40e31c:	ldr	w0, [x0, #32]
  40e320:	cmp	w0, #0x0
  40e324:	b.eq	40e348 <method_map_from_machine_user+0x12c>  // b.none
  40e328:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40e32c:	add	x2, x0, #0x608
  40e330:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40e334:	add	x1, x0, #0x260
  40e338:	ldr	x0, [x29, #40]
  40e33c:	bl	4055d0 <sd_bus_error_setf@plt>
  40e340:	mov	w19, w0
  40e344:	b	40e5c4 <method_map_from_machine_user+0x3a8>
  40e348:	ldr	x0, [x29, #128]
  40e34c:	ldr	w0, [x0, #80]
  40e350:	str	w0, [x29, #84]
  40e354:	ldr	w0, [x29, #84]
  40e358:	cmp	w0, #0x0
  40e35c:	b.ne	40e370 <method_map_from_machine_user+0x154>  // b.any
  40e360:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40e364:	add	x0, x0, #0x638
  40e368:	str	x0, [x29, #112]
  40e36c:	b	40e43c <method_map_from_machine_user+0x220>
  40e370:	mov	x0, #0x1b                  	// #27
  40e374:	str	x0, [x29, #136]
  40e378:	ldr	x1, [x29, #136]
  40e37c:	mov	x0, #0x1                   	// #1
  40e380:	bl	40ae98 <size_multiply_overflow>
  40e384:	and	w0, w0, #0xff
  40e388:	and	x0, x0, #0xff
  40e38c:	cmp	x0, #0x0
  40e390:	b.eq	40e3bc <method_map_from_machine_user+0x1a0>  // b.none
  40e394:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40e398:	add	x1, x0, #0xdb
  40e39c:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  40e3a0:	add	x4, x0, #0x1c0
  40e3a4:	mov	w3, #0x38b                 	// #907
  40e3a8:	mov	x2, x1
  40e3ac:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40e3b0:	add	x1, x0, #0x650
  40e3b4:	mov	w0, #0x0                   	// #0
  40e3b8:	bl	4052a0 <log_assert_failed_realm@plt>
  40e3bc:	ldr	x0, [x29, #136]
  40e3c0:	cmp	x0, #0x400, lsl #12
  40e3c4:	cset	w0, hi  // hi = pmore
  40e3c8:	and	w0, w0, #0xff
  40e3cc:	and	x0, x0, #0xff
  40e3d0:	cmp	x0, #0x0
  40e3d4:	b.eq	40e400 <method_map_from_machine_user+0x1e4>  // b.none
  40e3d8:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40e3dc:	add	x1, x0, #0xdb
  40e3e0:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  40e3e4:	add	x4, x0, #0x1c0
  40e3e8:	mov	w3, #0x38b                 	// #907
  40e3ec:	mov	x2, x1
  40e3f0:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40e3f4:	add	x1, x0, #0x680
  40e3f8:	mov	w0, #0x0                   	// #0
  40e3fc:	bl	4052a0 <log_assert_failed_realm@plt>
  40e400:	ldr	x0, [x29, #136]
  40e404:	add	x0, x0, #0xf
  40e408:	lsr	x0, x0, #4
  40e40c:	lsl	x0, x0, #4
  40e410:	sub	sp, sp, x0
  40e414:	mov	x0, sp
  40e418:	add	x0, x0, #0xf
  40e41c:	lsr	x0, x0, #4
  40e420:	lsl	x0, x0, #4
  40e424:	str	x0, [x29, #112]
  40e428:	ldr	w2, [x29, #84]
  40e42c:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40e430:	add	x1, x0, #0x6a0
  40e434:	ldr	x0, [x29, #112]
  40e438:	bl	405a30 <sprintf@plt>
  40e43c:	ldr	x0, [x29, #112]
  40e440:	str	x0, [x29, #144]
  40e444:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40e448:	add	x1, x0, #0x6b8
  40e44c:	ldr	x0, [x29, #144]
  40e450:	bl	405b90 <fopen64@plt>
  40e454:	str	x0, [x29, #96]
  40e458:	ldr	x0, [x29, #96]
  40e45c:	cmp	x0, #0x0
  40e460:	b.ne	40e474 <method_map_from_machine_user+0x258>  // b.any
  40e464:	bl	4054d0 <__errno_location@plt>
  40e468:	ldr	w0, [x0]
  40e46c:	neg	w19, w0
  40e470:	b	40e5c4 <method_map_from_machine_user+0x3a8>
  40e474:	bl	4054d0 <__errno_location@plt>
  40e478:	str	wzr, [x0]
  40e47c:	ldr	x5, [x29, #96]
  40e480:	add	x2, x29, #0x4c
  40e484:	add	x1, x29, #0x48
  40e488:	add	x0, x29, #0x44
  40e48c:	mov	x4, x2
  40e490:	mov	x3, x1
  40e494:	mov	x2, x0
  40e498:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40e49c:	add	x1, x0, #0x6c0
  40e4a0:	mov	x0, x5
  40e4a4:	bl	4053d0 <__isoc99_fscanf@plt>
  40e4a8:	str	w0, [x29, #88]
  40e4ac:	ldr	w0, [x29, #88]
  40e4b0:	cmp	w0, #0x0
  40e4b4:	b.ge	40e4f0 <method_map_from_machine_user+0x2d4>  // b.tcont
  40e4b8:	ldr	x0, [x29, #96]
  40e4bc:	bl	4056b0 <feof@plt>
  40e4c0:	cmp	w0, #0x0
  40e4c4:	b.eq	40e4f0 <method_map_from_machine_user+0x2d4>  // b.none
  40e4c8:	ldr	x0, [x29, #104]
  40e4cc:	mov	x3, x0
  40e4d0:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40e4d4:	add	x2, x0, #0x6d0
  40e4d8:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40e4dc:	add	x1, x0, #0x700
  40e4e0:	ldr	x0, [x29, #40]
  40e4e4:	bl	4055d0 <sd_bus_error_setf@plt>
  40e4e8:	mov	w19, w0
  40e4ec:	b	40e5c4 <method_map_from_machine_user+0x3a8>
  40e4f0:	ldr	w0, [x29, #88]
  40e4f4:	cmp	w0, #0x3
  40e4f8:	b.eq	40e524 <method_map_from_machine_user+0x308>  // b.none
  40e4fc:	ldr	x0, [x29, #96]
  40e500:	bl	405460 <ferror@plt>
  40e504:	cmp	w0, #0x0
  40e508:	b.eq	40e51c <method_map_from_machine_user+0x300>  // b.none
  40e50c:	mov	w0, #0x5                   	// #5
  40e510:	bl	40b0c4 <errno_or_else>
  40e514:	mov	w19, w0
  40e518:	b	40e5c4 <method_map_from_machine_user+0x3a8>
  40e51c:	mov	w19, #0xfffffffb            	// #-5
  40e520:	b	40e5c4 <method_map_from_machine_user+0x3a8>
  40e524:	ldr	w1, [x29, #64]
  40e528:	ldr	w0, [x29, #68]
  40e52c:	cmp	w1, w0
  40e530:	b.cc	40e474 <method_map_from_machine_user+0x258>  // b.lo, b.ul, b.last
  40e534:	ldr	w1, [x29, #68]
  40e538:	ldr	w0, [x29, #76]
  40e53c:	add	w1, w1, w0
  40e540:	ldr	w0, [x29, #64]
  40e544:	cmp	w1, w0
  40e548:	b.hi	40e550 <method_map_from_machine_user+0x334>  // b.pmore
  40e54c:	b	40e474 <method_map_from_machine_user+0x258>
  40e550:	ldr	w1, [x29, #64]
  40e554:	ldr	w0, [x29, #68]
  40e558:	sub	w1, w1, w0
  40e55c:	ldr	w0, [x29, #72]
  40e560:	add	w0, w1, w0
  40e564:	str	w0, [x29, #92]
  40e568:	ldr	w0, [x29, #92]
  40e56c:	bl	405420 <uid_is_valid@plt>
  40e570:	and	w0, w0, #0xff
  40e574:	eor	w0, w0, #0x1
  40e578:	and	w0, w0, #0xff
  40e57c:	cmp	w0, #0x0
  40e580:	b.eq	40e5ac <method_map_from_machine_user+0x390>  // b.none
  40e584:	ldr	w0, [x29, #64]
  40e588:	mov	w3, w0
  40e58c:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40e590:	add	x2, x0, #0x5f0
  40e594:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40e598:	add	x1, x0, #0x260
  40e59c:	ldr	x0, [x29, #40]
  40e5a0:	bl	4055d0 <sd_bus_error_setf@plt>
  40e5a4:	mov	w19, w0
  40e5a8:	b	40e5c4 <method_map_from_machine_user+0x3a8>
  40e5ac:	ldr	w2, [x29, #92]
  40e5b0:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40e5b4:	add	x1, x0, #0x1c8
  40e5b8:	ldr	x0, [x29, #56]
  40e5bc:	bl	404f00 <sd_bus_reply_method_return@plt>
  40e5c0:	mov	w19, w0
  40e5c4:	add	x0, x29, #0x60
  40e5c8:	bl	40b14c <fclosep>
  40e5cc:	mov	w1, w19
  40e5d0:	adrp	x0, 431000 <machine_vtable+0x4a0>
  40e5d4:	ldr	x0, [x0, #3952]
  40e5d8:	ldr	x2, [x29, #152]
  40e5dc:	ldr	x0, [x0]
  40e5e0:	eor	x0, x2, x0
  40e5e4:	cmp	x0, #0x0
  40e5e8:	b.eq	40e5f0 <method_map_from_machine_user+0x3d4>  // b.none
  40e5ec:	bl	4055f0 <__stack_chk_fail@plt>
  40e5f0:	mov	w0, w1
  40e5f4:	mov	sp, x29
  40e5f8:	ldr	x19, [sp, #16]
  40e5fc:	ldp	x29, x30, [sp], #160
  40e600:	ret

000000000040e604 <method_map_to_machine_user>:
  40e604:	stp	x29, x30, [sp, #-192]!
  40e608:	mov	x29, sp
  40e60c:	stp	x19, x20, [sp, #16]
  40e610:	str	x0, [sp, #56]
  40e614:	str	x1, [sp, #48]
  40e618:	str	x2, [sp, #40]
  40e61c:	adrp	x0, 431000 <machine_vtable+0x4a0>
  40e620:	ldr	x0, [x0, #3952]
  40e624:	ldr	x1, [x0]
  40e628:	str	x1, [sp, #184]
  40e62c:	mov	x1, #0x0                   	// #0
  40e630:	ldr	x0, [sp, #48]
  40e634:	str	x0, [sp, #128]
  40e638:	add	x0, sp, #0x40
  40e63c:	mov	x2, x0
  40e640:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40e644:	add	x1, x0, #0x1c8
  40e648:	ldr	x0, [sp, #56]
  40e64c:	bl	4052b0 <sd_bus_message_read@plt>
  40e650:	str	w0, [sp, #80]
  40e654:	ldr	w0, [sp, #80]
  40e658:	cmp	w0, #0x0
  40e65c:	b.ge	40e668 <method_map_to_machine_user+0x64>  // b.tcont
  40e660:	ldr	w20, [sp, #80]
  40e664:	b	40ea4c <method_map_to_machine_user+0x448>
  40e668:	ldr	w0, [sp, #64]
  40e66c:	bl	405420 <uid_is_valid@plt>
  40e670:	and	w0, w0, #0xff
  40e674:	eor	w0, w0, #0x1
  40e678:	and	w0, w0, #0xff
  40e67c:	cmp	w0, #0x0
  40e680:	b.eq	40e6ac <method_map_to_machine_user+0xa8>  // b.none
  40e684:	ldr	w0, [sp, #64]
  40e688:	mov	w3, w0
  40e68c:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40e690:	add	x2, x0, #0x5f0
  40e694:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40e698:	add	x1, x0, #0x260
  40e69c:	ldr	x0, [sp, #40]
  40e6a0:	bl	4055d0 <sd_bus_error_setf@plt>
  40e6a4:	mov	w20, w0
  40e6a8:	b	40ea4c <method_map_to_machine_user+0x448>
  40e6ac:	ldr	w1, [sp, #64]
  40e6b0:	mov	w0, #0xffff                	// #65535
  40e6b4:	cmp	w1, w0
  40e6b8:	b.hi	40e6e4 <method_map_to_machine_user+0xe0>  // b.pmore
  40e6bc:	ldr	w0, [sp, #64]
  40e6c0:	mov	w3, w0
  40e6c4:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40e6c8:	add	x2, x0, #0x730
  40e6cc:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40e6d0:	add	x1, x0, #0x700
  40e6d4:	ldr	x0, [sp, #40]
  40e6d8:	bl	4055d0 <sd_bus_error_setf@plt>
  40e6dc:	mov	w20, w0
  40e6e0:	b	40ea4c <method_map_to_machine_user+0x448>
  40e6e4:	mov	w0, #0xfffffffe            	// #-2
  40e6e8:	str	w0, [sp, #136]
  40e6ec:	str	xzr, [sp, #144]
  40e6f0:	b	40ea04 <method_map_to_machine_user+0x400>
  40e6f4:	str	xzr, [sp, #112]
  40e6f8:	ldr	x0, [sp, #104]
  40e6fc:	ldr	w0, [x0, #32]
  40e700:	cmp	w0, #0x0
  40e704:	b.eq	40e710 <method_map_to_machine_user+0x10c>  // b.none
  40e708:	mov	w19, #0x0                   	// #0
  40e70c:	b	40e9e8 <method_map_to_machine_user+0x3e4>
  40e710:	ldr	x0, [sp, #104]
  40e714:	ldr	w0, [x0, #80]
  40e718:	add	x4, sp, #0x98
  40e71c:	mov	w3, w0
  40e720:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40e724:	add	x2, x0, #0x758
  40e728:	mov	x1, #0x1b                  	// #27
  40e72c:	mov	x0, x4
  40e730:	bl	405110 <snprintf@plt>
  40e734:	cmp	w0, #0x1a
  40e738:	cset	w0, hi  // hi = pmore
  40e73c:	and	w0, w0, #0xff
  40e740:	and	x0, x0, #0xff
  40e744:	cmp	x0, #0x0
  40e748:	b.eq	40e774 <method_map_to_machine_user+0x170>  // b.none
  40e74c:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40e750:	add	x1, x0, #0xdb
  40e754:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  40e758:	add	x4, x0, #0x1e0
  40e75c:	mov	w3, #0x3c2                 	// #962
  40e760:	mov	x2, x1
  40e764:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40e768:	add	x1, x0, #0x770
  40e76c:	mov	w0, #0x0                   	// #0
  40e770:	bl	4052a0 <log_assert_failed_realm@plt>
  40e774:	add	x2, sp, #0x98
  40e778:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40e77c:	add	x1, x0, #0x6b8
  40e780:	mov	x0, x2
  40e784:	bl	405b90 <fopen64@plt>
  40e788:	str	x0, [sp, #112]
  40e78c:	ldr	x0, [sp, #112]
  40e790:	cmp	x0, #0x0
  40e794:	b.ne	40e824 <method_map_to_machine_user+0x220>  // b.any
  40e798:	mov	w0, #0x4                   	// #4
  40e79c:	str	w0, [sp, #92]
  40e7a0:	bl	4054d0 <__errno_location@plt>
  40e7a4:	ldr	w0, [x0]
  40e7a8:	str	w0, [sp, #96]
  40e7ac:	str	wzr, [sp, #100]
  40e7b0:	ldr	w0, [sp, #100]
  40e7b4:	bl	405c20 <log_get_max_level_realm@plt>
  40e7b8:	mov	w1, w0
  40e7bc:	ldr	w0, [sp, #92]
  40e7c0:	and	w0, w0, #0x7
  40e7c4:	cmp	w1, w0
  40e7c8:	b.lt	40e814 <method_map_to_machine_user+0x210>  // b.tstop
  40e7cc:	ldr	w0, [sp, #100]
  40e7d0:	lsl	w1, w0, #10
  40e7d4:	ldr	w0, [sp, #92]
  40e7d8:	orr	w7, w1, w0
  40e7dc:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40e7e0:	add	x1, x0, #0xdb
  40e7e4:	add	x0, sp, #0x98
  40e7e8:	mov	x6, x0
  40e7ec:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40e7f0:	add	x5, x0, #0x798
  40e7f4:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  40e7f8:	add	x4, x0, #0x200
  40e7fc:	mov	w3, #0x3c5                 	// #965
  40e800:	mov	x2, x1
  40e804:	ldr	w1, [sp, #96]
  40e808:	mov	w0, w7
  40e80c:	bl	405750 <log_internal_realm@plt>
  40e810:	b	40e81c <method_map_to_machine_user+0x218>
  40e814:	ldr	w0, [sp, #96]
  40e818:	cmp	w0, #0x0
  40e81c:	mov	w19, #0x0                   	// #0
  40e820:	b	40e9e8 <method_map_to_machine_user+0x3e4>
  40e824:	str	xzr, [sp, #120]
  40e828:	bl	4054d0 <__errno_location@plt>
  40e82c:	str	wzr, [x0]
  40e830:	ldr	x5, [sp, #112]
  40e834:	add	x2, sp, #0x4c
  40e838:	add	x1, sp, #0x48
  40e83c:	add	x0, sp, #0x44
  40e840:	mov	x4, x2
  40e844:	mov	x3, x1
  40e848:	mov	x2, x0
  40e84c:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40e850:	add	x1, x0, #0x6c0
  40e854:	mov	x0, x5
  40e858:	bl	4053d0 <__isoc99_fscanf@plt>
  40e85c:	str	w0, [sp, #84]
  40e860:	ldr	w0, [sp, #84]
  40e864:	cmp	w0, #0x0
  40e868:	b.ge	40e884 <method_map_to_machine_user+0x280>  // b.tcont
  40e86c:	ldr	x0, [sp, #112]
  40e870:	bl	4056b0 <feof@plt>
  40e874:	cmp	w0, #0x0
  40e878:	b.eq	40e884 <method_map_to_machine_user+0x280>  // b.none
  40e87c:	mov	w19, #0x0                   	// #0
  40e880:	b	40e9b8 <method_map_to_machine_user+0x3b4>
  40e884:	ldr	w0, [sp, #84]
  40e888:	cmp	w0, #0x3
  40e88c:	b.eq	40e8c0 <method_map_to_machine_user+0x2bc>  // b.none
  40e890:	ldr	x0, [sp, #112]
  40e894:	bl	405460 <ferror@plt>
  40e898:	cmp	w0, #0x0
  40e89c:	b.eq	40e8b4 <method_map_to_machine_user+0x2b0>  // b.none
  40e8a0:	mov	w0, #0x5                   	// #5
  40e8a4:	bl	40b0c4 <errno_or_else>
  40e8a8:	mov	w20, w0
  40e8ac:	mov	w19, #0x1                   	// #1
  40e8b0:	b	40e9b8 <method_map_to_machine_user+0x3b4>
  40e8b4:	mov	w20, #0xfffffffb            	// #-5
  40e8b8:	mov	w19, #0x1                   	// #1
  40e8bc:	b	40e9b8 <method_map_to_machine_user+0x3b4>
  40e8c0:	ldr	w0, [sp, #72]
  40e8c4:	cmp	w0, #0x0
  40e8c8:	b.ne	40e8d4 <method_map_to_machine_user+0x2d0>  // b.any
  40e8cc:	mov	w19, #0x2                   	// #2
  40e8d0:	b	40e9b8 <method_map_to_machine_user+0x3b4>
  40e8d4:	ldr	w1, [sp, #64]
  40e8d8:	ldr	w0, [sp, #72]
  40e8dc:	cmp	w1, w0
  40e8e0:	b.cc	40e8fc <method_map_to_machine_user+0x2f8>  // b.lo, b.ul, b.last
  40e8e4:	ldr	w1, [sp, #72]
  40e8e8:	ldr	w0, [sp, #76]
  40e8ec:	add	w1, w1, w0
  40e8f0:	ldr	w0, [sp, #64]
  40e8f4:	cmp	w1, w0
  40e8f8:	b.hi	40e904 <method_map_to_machine_user+0x300>  // b.pmore
  40e8fc:	mov	w19, #0x2                   	// #2
  40e900:	b	40e9b8 <method_map_to_machine_user+0x3b4>
  40e904:	ldr	w1, [sp, #64]
  40e908:	ldr	w0, [sp, #72]
  40e90c:	sub	w1, w1, w0
  40e910:	ldr	w0, [sp, #68]
  40e914:	add	w0, w1, w0
  40e918:	str	w0, [sp, #88]
  40e91c:	ldr	w0, [sp, #88]
  40e920:	bl	405420 <uid_is_valid@plt>
  40e924:	and	w0, w0, #0xff
  40e928:	eor	w0, w0, #0x1
  40e92c:	and	w0, w0, #0xff
  40e930:	cmp	w0, #0x0
  40e934:	b.eq	40e964 <method_map_to_machine_user+0x360>  // b.none
  40e938:	ldr	w0, [sp, #64]
  40e93c:	mov	w3, w0
  40e940:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40e944:	add	x2, x0, #0x5f0
  40e948:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40e94c:	add	x1, x0, #0x260
  40e950:	ldr	x0, [sp, #40]
  40e954:	bl	4055d0 <sd_bus_error_setf@plt>
  40e958:	mov	w20, w0
  40e95c:	mov	w19, #0x1                   	// #1
  40e960:	b	40e9b8 <method_map_to_machine_user+0x3b4>
  40e964:	ldr	x0, [sp, #104]
  40e968:	bl	41652c <machine_bus_path>
  40e96c:	str	x0, [sp, #120]
  40e970:	ldr	x0, [sp, #120]
  40e974:	cmp	x0, #0x0
  40e978:	b.ne	40e988 <method_map_to_machine_user+0x384>  // b.any
  40e97c:	mov	w20, #0xfffffff4            	// #-12
  40e980:	mov	w19, #0x1                   	// #1
  40e984:	b	40e9b8 <method_map_to_machine_user+0x3b4>
  40e988:	ldr	x0, [sp, #104]
  40e98c:	ldr	x0, [x0, #8]
  40e990:	ldr	x1, [sp, #120]
  40e994:	ldr	w4, [sp, #88]
  40e998:	mov	x3, x1
  40e99c:	mov	x2, x0
  40e9a0:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40e9a4:	add	x1, x0, #0x7b8
  40e9a8:	ldr	x0, [sp, #56]
  40e9ac:	bl	404f00 <sd_bus_reply_method_return@plt>
  40e9b0:	mov	w20, w0
  40e9b4:	mov	w19, #0x1                   	// #1
  40e9b8:	add	x0, sp, #0x78
  40e9bc:	bl	40ae74 <freep>
  40e9c0:	cmp	w19, #0x0
  40e9c4:	b.eq	40e9d4 <method_map_to_machine_user+0x3d0>  // b.none
  40e9c8:	cmp	w19, #0x1
  40e9cc:	b.eq	40e9dc <method_map_to_machine_user+0x3d8>  // b.none
  40e9d0:	b	40e9e4 <method_map_to_machine_user+0x3e0>
  40e9d4:	mov	w19, #0x2                   	// #2
  40e9d8:	b	40e9e8 <method_map_to_machine_user+0x3e4>
  40e9dc:	mov	w19, #0x1                   	// #1
  40e9e0:	b	40e9e8 <method_map_to_machine_user+0x3e4>
  40e9e4:	b	40e824 <method_map_to_machine_user+0x220>
  40e9e8:	add	x0, sp, #0x70
  40e9ec:	bl	40b14c <fclosep>
  40e9f0:	cmp	w19, #0x0
  40e9f4:	b.eq	40ea04 <method_map_to_machine_user+0x400>  // b.none
  40e9f8:	cmp	w19, #0x2
  40e9fc:	b.ne	40ea4c <method_map_to_machine_user+0x448>  // b.any
  40ea00:	nop
  40ea04:	ldr	x0, [sp, #128]
  40ea08:	ldr	x0, [x0, #16]
  40ea0c:	add	x2, sp, #0x68
  40ea10:	add	x1, sp, #0x88
  40ea14:	mov	x3, #0x0                   	// #0
  40ea18:	bl	40afc4 <hashmap_iterate>
  40ea1c:	and	w0, w0, #0xff
  40ea20:	cmp	w0, #0x0
  40ea24:	b.ne	40e6f4 <method_map_to_machine_user+0xf0>  // b.any
  40ea28:	ldr	w0, [sp, #64]
  40ea2c:	mov	w3, w0
  40ea30:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40ea34:	add	x2, x0, #0x7c0
  40ea38:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40ea3c:	add	x1, x0, #0x700
  40ea40:	ldr	x0, [sp, #40]
  40ea44:	bl	4055d0 <sd_bus_error_setf@plt>
  40ea48:	mov	w20, w0
  40ea4c:	mov	w1, w20
  40ea50:	adrp	x0, 431000 <machine_vtable+0x4a0>
  40ea54:	ldr	x0, [x0, #3952]
  40ea58:	ldr	x2, [sp, #184]
  40ea5c:	ldr	x0, [x0]
  40ea60:	eor	x0, x2, x0
  40ea64:	cmp	x0, #0x0
  40ea68:	b.eq	40ea70 <method_map_to_machine_user+0x46c>  // b.none
  40ea6c:	bl	4055f0 <__stack_chk_fail@plt>
  40ea70:	mov	w0, w1
  40ea74:	ldp	x19, x20, [sp, #16]
  40ea78:	ldp	x29, x30, [sp], #192
  40ea7c:	ret

000000000040ea80 <method_map_from_machine_group>:
  40ea80:	stp	x29, x30, [sp, #-160]!
  40ea84:	mov	x29, sp
  40ea88:	str	x19, [sp, #16]
  40ea8c:	str	x0, [x29, #56]
  40ea90:	str	x1, [x29, #48]
  40ea94:	str	x2, [x29, #40]
  40ea98:	adrp	x0, 431000 <machine_vtable+0x4a0>
  40ea9c:	ldr	x0, [x0, #3952]
  40eaa0:	ldr	x1, [x0]
  40eaa4:	str	x1, [x29, #152]
  40eaa8:	mov	x1, #0x0                   	// #0
  40eaac:	str	xzr, [x29, #96]
  40eab0:	ldr	x0, [x29, #48]
  40eab4:	str	x0, [x29, #120]
  40eab8:	add	x1, x29, #0x40
  40eabc:	add	x0, x29, #0x68
  40eac0:	mov	x3, x1
  40eac4:	mov	x2, x0
  40eac8:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40eacc:	add	x1, x0, #0x5e8
  40ead0:	ldr	x0, [x29, #56]
  40ead4:	bl	4052b0 <sd_bus_message_read@plt>
  40ead8:	str	w0, [x29, #80]
  40eadc:	ldr	w0, [x29, #80]
  40eae0:	cmp	w0, #0x0
  40eae4:	b.ge	40eaf0 <method_map_from_machine_group+0x70>  // b.tcont
  40eae8:	ldr	w19, [x29, #80]
  40eaec:	b	40ee28 <method_map_from_machine_group+0x3a8>
  40eaf0:	ldr	w0, [x29, #64]
  40eaf4:	bl	40b46c <gid_is_valid>
  40eaf8:	and	w0, w0, #0xff
  40eafc:	eor	w0, w0, #0x1
  40eb00:	and	w0, w0, #0xff
  40eb04:	cmp	w0, #0x0
  40eb08:	b.eq	40eb34 <method_map_from_machine_group+0xb4>  // b.none
  40eb0c:	ldr	w0, [x29, #64]
  40eb10:	mov	w3, w0
  40eb14:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40eb18:	add	x2, x0, #0x7e8
  40eb1c:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40eb20:	add	x1, x0, #0x260
  40eb24:	ldr	x0, [x29, #40]
  40eb28:	bl	4055d0 <sd_bus_error_setf@plt>
  40eb2c:	mov	w19, w0
  40eb30:	b	40ee28 <method_map_from_machine_group+0x3a8>
  40eb34:	ldr	x0, [x29, #120]
  40eb38:	ldr	x0, [x0, #16]
  40eb3c:	ldr	x1, [x29, #104]
  40eb40:	bl	40afa0 <hashmap_get>
  40eb44:	str	x0, [x29, #128]
  40eb48:	ldr	x0, [x29, #128]
  40eb4c:	cmp	x0, #0x0
  40eb50:	b.ne	40eb7c <method_map_from_machine_group+0xfc>  // b.any
  40eb54:	ldr	x0, [x29, #104]
  40eb58:	mov	x3, x0
  40eb5c:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40eb60:	add	x2, x0, #0x140
  40eb64:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40eb68:	add	x1, x0, #0x158
  40eb6c:	ldr	x0, [x29, #40]
  40eb70:	bl	4055d0 <sd_bus_error_setf@plt>
  40eb74:	mov	w19, w0
  40eb78:	b	40ee28 <method_map_from_machine_group+0x3a8>
  40eb7c:	ldr	x0, [x29, #128]
  40eb80:	ldr	w0, [x0, #32]
  40eb84:	cmp	w0, #0x0
  40eb88:	b.eq	40ebac <method_map_from_machine_group+0x12c>  // b.none
  40eb8c:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40eb90:	add	x2, x0, #0x608
  40eb94:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40eb98:	add	x1, x0, #0x260
  40eb9c:	ldr	x0, [x29, #40]
  40eba0:	bl	4055d0 <sd_bus_error_setf@plt>
  40eba4:	mov	w19, w0
  40eba8:	b	40ee28 <method_map_from_machine_group+0x3a8>
  40ebac:	ldr	x0, [x29, #128]
  40ebb0:	ldr	w0, [x0, #80]
  40ebb4:	str	w0, [x29, #84]
  40ebb8:	ldr	w0, [x29, #84]
  40ebbc:	cmp	w0, #0x0
  40ebc0:	b.ne	40ebd4 <method_map_from_machine_group+0x154>  // b.any
  40ebc4:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40ebc8:	add	x0, x0, #0x800
  40ebcc:	str	x0, [x29, #112]
  40ebd0:	b	40eca0 <method_map_from_machine_group+0x220>
  40ebd4:	mov	x0, #0x1b                  	// #27
  40ebd8:	str	x0, [x29, #136]
  40ebdc:	ldr	x1, [x29, #136]
  40ebe0:	mov	x0, #0x1                   	// #1
  40ebe4:	bl	40ae98 <size_multiply_overflow>
  40ebe8:	and	w0, w0, #0xff
  40ebec:	and	x0, x0, #0xff
  40ebf0:	cmp	x0, #0x0
  40ebf4:	b.eq	40ec20 <method_map_from_machine_group+0x1a0>  // b.none
  40ebf8:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40ebfc:	add	x1, x0, #0xdb
  40ec00:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  40ec04:	add	x4, x0, #0x220
  40ec08:	mov	w3, #0x405                 	// #1029
  40ec0c:	mov	x2, x1
  40ec10:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40ec14:	add	x1, x0, #0x650
  40ec18:	mov	w0, #0x0                   	// #0
  40ec1c:	bl	4052a0 <log_assert_failed_realm@plt>
  40ec20:	ldr	x0, [x29, #136]
  40ec24:	cmp	x0, #0x400, lsl #12
  40ec28:	cset	w0, hi  // hi = pmore
  40ec2c:	and	w0, w0, #0xff
  40ec30:	and	x0, x0, #0xff
  40ec34:	cmp	x0, #0x0
  40ec38:	b.eq	40ec64 <method_map_from_machine_group+0x1e4>  // b.none
  40ec3c:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40ec40:	add	x1, x0, #0xdb
  40ec44:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  40ec48:	add	x4, x0, #0x220
  40ec4c:	mov	w3, #0x405                 	// #1029
  40ec50:	mov	x2, x1
  40ec54:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40ec58:	add	x1, x0, #0x680
  40ec5c:	mov	w0, #0x0                   	// #0
  40ec60:	bl	4052a0 <log_assert_failed_realm@plt>
  40ec64:	ldr	x0, [x29, #136]
  40ec68:	add	x0, x0, #0xf
  40ec6c:	lsr	x0, x0, #4
  40ec70:	lsl	x0, x0, #4
  40ec74:	sub	sp, sp, x0
  40ec78:	mov	x0, sp
  40ec7c:	add	x0, x0, #0xf
  40ec80:	lsr	x0, x0, #4
  40ec84:	lsl	x0, x0, #4
  40ec88:	str	x0, [x29, #112]
  40ec8c:	ldr	w2, [x29, #84]
  40ec90:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40ec94:	add	x1, x0, #0x818
  40ec98:	ldr	x0, [x29, #112]
  40ec9c:	bl	405a30 <sprintf@plt>
  40eca0:	ldr	x0, [x29, #112]
  40eca4:	str	x0, [x29, #144]
  40eca8:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40ecac:	add	x1, x0, #0x6b8
  40ecb0:	ldr	x0, [x29, #144]
  40ecb4:	bl	405b90 <fopen64@plt>
  40ecb8:	str	x0, [x29, #96]
  40ecbc:	ldr	x0, [x29, #96]
  40ecc0:	cmp	x0, #0x0
  40ecc4:	b.ne	40ecd8 <method_map_from_machine_group+0x258>  // b.any
  40ecc8:	bl	4054d0 <__errno_location@plt>
  40eccc:	ldr	w0, [x0]
  40ecd0:	neg	w19, w0
  40ecd4:	b	40ee28 <method_map_from_machine_group+0x3a8>
  40ecd8:	bl	4054d0 <__errno_location@plt>
  40ecdc:	str	wzr, [x0]
  40ece0:	ldr	x5, [x29, #96]
  40ece4:	add	x2, x29, #0x4c
  40ece8:	add	x1, x29, #0x48
  40ecec:	add	x0, x29, #0x44
  40ecf0:	mov	x4, x2
  40ecf4:	mov	x3, x1
  40ecf8:	mov	x2, x0
  40ecfc:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40ed00:	add	x1, x0, #0x6c0
  40ed04:	mov	x0, x5
  40ed08:	bl	4053d0 <__isoc99_fscanf@plt>
  40ed0c:	str	w0, [x29, #88]
  40ed10:	ldr	w0, [x29, #88]
  40ed14:	cmp	w0, #0x0
  40ed18:	b.ge	40ed54 <method_map_from_machine_group+0x2d4>  // b.tcont
  40ed1c:	ldr	x0, [x29, #96]
  40ed20:	bl	4056b0 <feof@plt>
  40ed24:	cmp	w0, #0x0
  40ed28:	b.eq	40ed54 <method_map_from_machine_group+0x2d4>  // b.none
  40ed2c:	ldr	x0, [x29, #104]
  40ed30:	mov	x3, x0
  40ed34:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40ed38:	add	x2, x0, #0x830
  40ed3c:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40ed40:	add	x1, x0, #0x860
  40ed44:	ldr	x0, [x29, #40]
  40ed48:	bl	4055d0 <sd_bus_error_setf@plt>
  40ed4c:	mov	w19, w0
  40ed50:	b	40ee28 <method_map_from_machine_group+0x3a8>
  40ed54:	ldr	w0, [x29, #88]
  40ed58:	cmp	w0, #0x3
  40ed5c:	b.eq	40ed88 <method_map_from_machine_group+0x308>  // b.none
  40ed60:	ldr	x0, [x29, #96]
  40ed64:	bl	405460 <ferror@plt>
  40ed68:	cmp	w0, #0x0
  40ed6c:	b.eq	40ed80 <method_map_from_machine_group+0x300>  // b.none
  40ed70:	mov	w0, #0x5                   	// #5
  40ed74:	bl	40b0c4 <errno_or_else>
  40ed78:	mov	w19, w0
  40ed7c:	b	40ee28 <method_map_from_machine_group+0x3a8>
  40ed80:	mov	w19, #0xfffffffb            	// #-5
  40ed84:	b	40ee28 <method_map_from_machine_group+0x3a8>
  40ed88:	ldr	w1, [x29, #64]
  40ed8c:	ldr	w0, [x29, #68]
  40ed90:	cmp	w1, w0
  40ed94:	b.cc	40ecd8 <method_map_from_machine_group+0x258>  // b.lo, b.ul, b.last
  40ed98:	ldr	w1, [x29, #68]
  40ed9c:	ldr	w0, [x29, #76]
  40eda0:	add	w1, w1, w0
  40eda4:	ldr	w0, [x29, #64]
  40eda8:	cmp	w1, w0
  40edac:	b.hi	40edb4 <method_map_from_machine_group+0x334>  // b.pmore
  40edb0:	b	40ecd8 <method_map_from_machine_group+0x258>
  40edb4:	ldr	w1, [x29, #64]
  40edb8:	ldr	w0, [x29, #68]
  40edbc:	sub	w1, w1, w0
  40edc0:	ldr	w0, [x29, #72]
  40edc4:	add	w0, w1, w0
  40edc8:	str	w0, [x29, #92]
  40edcc:	ldr	w0, [x29, #92]
  40edd0:	bl	40b46c <gid_is_valid>
  40edd4:	and	w0, w0, #0xff
  40edd8:	eor	w0, w0, #0x1
  40eddc:	and	w0, w0, #0xff
  40ede0:	cmp	w0, #0x0
  40ede4:	b.eq	40ee10 <method_map_from_machine_group+0x390>  // b.none
  40ede8:	ldr	w0, [x29, #64]
  40edec:	mov	w3, w0
  40edf0:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40edf4:	add	x2, x0, #0x7e8
  40edf8:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40edfc:	add	x1, x0, #0x260
  40ee00:	ldr	x0, [x29, #40]
  40ee04:	bl	4055d0 <sd_bus_error_setf@plt>
  40ee08:	mov	w19, w0
  40ee0c:	b	40ee28 <method_map_from_machine_group+0x3a8>
  40ee10:	ldr	w2, [x29, #92]
  40ee14:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40ee18:	add	x1, x0, #0x1c8
  40ee1c:	ldr	x0, [x29, #56]
  40ee20:	bl	404f00 <sd_bus_reply_method_return@plt>
  40ee24:	mov	w19, w0
  40ee28:	add	x0, x29, #0x60
  40ee2c:	bl	40b14c <fclosep>
  40ee30:	mov	w1, w19
  40ee34:	adrp	x0, 431000 <machine_vtable+0x4a0>
  40ee38:	ldr	x0, [x0, #3952]
  40ee3c:	ldr	x2, [x29, #152]
  40ee40:	ldr	x0, [x0]
  40ee44:	eor	x0, x2, x0
  40ee48:	cmp	x0, #0x0
  40ee4c:	b.eq	40ee54 <method_map_from_machine_group+0x3d4>  // b.none
  40ee50:	bl	4055f0 <__stack_chk_fail@plt>
  40ee54:	mov	w0, w1
  40ee58:	mov	sp, x29
  40ee5c:	ldr	x19, [sp, #16]
  40ee60:	ldp	x29, x30, [sp], #160
  40ee64:	ret

000000000040ee68 <method_map_to_machine_group>:
  40ee68:	stp	x29, x30, [sp, #-192]!
  40ee6c:	mov	x29, sp
  40ee70:	stp	x19, x20, [sp, #16]
  40ee74:	str	x0, [sp, #56]
  40ee78:	str	x1, [sp, #48]
  40ee7c:	str	x2, [sp, #40]
  40ee80:	adrp	x0, 431000 <machine_vtable+0x4a0>
  40ee84:	ldr	x0, [x0, #3952]
  40ee88:	ldr	x1, [x0]
  40ee8c:	str	x1, [sp, #184]
  40ee90:	mov	x1, #0x0                   	// #0
  40ee94:	ldr	x0, [sp, #48]
  40ee98:	str	x0, [sp, #128]
  40ee9c:	add	x0, sp, #0x40
  40eea0:	mov	x2, x0
  40eea4:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40eea8:	add	x1, x0, #0x1c8
  40eeac:	ldr	x0, [sp, #56]
  40eeb0:	bl	4052b0 <sd_bus_message_read@plt>
  40eeb4:	str	w0, [sp, #80]
  40eeb8:	ldr	w0, [sp, #80]
  40eebc:	cmp	w0, #0x0
  40eec0:	b.ge	40eecc <method_map_to_machine_group+0x64>  // b.tcont
  40eec4:	ldr	w20, [sp, #80]
  40eec8:	b	40f2b0 <method_map_to_machine_group+0x448>
  40eecc:	ldr	w0, [sp, #64]
  40eed0:	bl	40b46c <gid_is_valid>
  40eed4:	and	w0, w0, #0xff
  40eed8:	eor	w0, w0, #0x1
  40eedc:	and	w0, w0, #0xff
  40eee0:	cmp	w0, #0x0
  40eee4:	b.eq	40ef10 <method_map_to_machine_group+0xa8>  // b.none
  40eee8:	ldr	w0, [sp, #64]
  40eeec:	mov	w3, w0
  40eef0:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40eef4:	add	x2, x0, #0x7e8
  40eef8:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40eefc:	add	x1, x0, #0x260
  40ef00:	ldr	x0, [sp, #40]
  40ef04:	bl	4055d0 <sd_bus_error_setf@plt>
  40ef08:	mov	w20, w0
  40ef0c:	b	40f2b0 <method_map_to_machine_group+0x448>
  40ef10:	ldr	w1, [sp, #64]
  40ef14:	mov	w0, #0xffff                	// #65535
  40ef18:	cmp	w1, w0
  40ef1c:	b.hi	40ef48 <method_map_to_machine_group+0xe0>  // b.pmore
  40ef20:	ldr	w0, [sp, #64]
  40ef24:	mov	w3, w0
  40ef28:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40ef2c:	add	x2, x0, #0x890
  40ef30:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40ef34:	add	x1, x0, #0x860
  40ef38:	ldr	x0, [sp, #40]
  40ef3c:	bl	4055d0 <sd_bus_error_setf@plt>
  40ef40:	mov	w20, w0
  40ef44:	b	40f2b0 <method_map_to_machine_group+0x448>
  40ef48:	mov	w0, #0xfffffffe            	// #-2
  40ef4c:	str	w0, [sp, #136]
  40ef50:	str	xzr, [sp, #144]
  40ef54:	b	40f268 <method_map_to_machine_group+0x400>
  40ef58:	str	xzr, [sp, #112]
  40ef5c:	ldr	x0, [sp, #104]
  40ef60:	ldr	w0, [x0, #32]
  40ef64:	cmp	w0, #0x0
  40ef68:	b.eq	40ef74 <method_map_to_machine_group+0x10c>  // b.none
  40ef6c:	mov	w19, #0x0                   	// #0
  40ef70:	b	40f24c <method_map_to_machine_group+0x3e4>
  40ef74:	ldr	x0, [sp, #104]
  40ef78:	ldr	w0, [x0, #80]
  40ef7c:	add	x4, sp, #0x98
  40ef80:	mov	w3, w0
  40ef84:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40ef88:	add	x2, x0, #0x8b8
  40ef8c:	mov	x1, #0x1b                  	// #27
  40ef90:	mov	x0, x4
  40ef94:	bl	405110 <snprintf@plt>
  40ef98:	cmp	w0, #0x1a
  40ef9c:	cset	w0, hi  // hi = pmore
  40efa0:	and	w0, w0, #0xff
  40efa4:	and	x0, x0, #0xff
  40efa8:	cmp	x0, #0x0
  40efac:	b.eq	40efd8 <method_map_to_machine_group+0x170>  // b.none
  40efb0:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40efb4:	add	x1, x0, #0xdb
  40efb8:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  40efbc:	add	x4, x0, #0x240
  40efc0:	mov	w3, #0x43c                 	// #1084
  40efc4:	mov	x2, x1
  40efc8:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40efcc:	add	x1, x0, #0x770
  40efd0:	mov	w0, #0x0                   	// #0
  40efd4:	bl	4052a0 <log_assert_failed_realm@plt>
  40efd8:	add	x2, sp, #0x98
  40efdc:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40efe0:	add	x1, x0, #0x6b8
  40efe4:	mov	x0, x2
  40efe8:	bl	405b90 <fopen64@plt>
  40efec:	str	x0, [sp, #112]
  40eff0:	ldr	x0, [sp, #112]
  40eff4:	cmp	x0, #0x0
  40eff8:	b.ne	40f088 <method_map_to_machine_group+0x220>  // b.any
  40effc:	mov	w0, #0x4                   	// #4
  40f000:	str	w0, [sp, #92]
  40f004:	bl	4054d0 <__errno_location@plt>
  40f008:	ldr	w0, [x0]
  40f00c:	str	w0, [sp, #96]
  40f010:	str	wzr, [sp, #100]
  40f014:	ldr	w0, [sp, #100]
  40f018:	bl	405c20 <log_get_max_level_realm@plt>
  40f01c:	mov	w1, w0
  40f020:	ldr	w0, [sp, #92]
  40f024:	and	w0, w0, #0x7
  40f028:	cmp	w1, w0
  40f02c:	b.lt	40f078 <method_map_to_machine_group+0x210>  // b.tstop
  40f030:	ldr	w0, [sp, #100]
  40f034:	lsl	w1, w0, #10
  40f038:	ldr	w0, [sp, #92]
  40f03c:	orr	w7, w1, w0
  40f040:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40f044:	add	x1, x0, #0xdb
  40f048:	add	x0, sp, #0x98
  40f04c:	mov	x6, x0
  40f050:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40f054:	add	x5, x0, #0x798
  40f058:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  40f05c:	add	x4, x0, #0x260
  40f060:	mov	w3, #0x43f                 	// #1087
  40f064:	mov	x2, x1
  40f068:	ldr	w1, [sp, #96]
  40f06c:	mov	w0, w7
  40f070:	bl	405750 <log_internal_realm@plt>
  40f074:	b	40f080 <method_map_to_machine_group+0x218>
  40f078:	ldr	w0, [sp, #96]
  40f07c:	cmp	w0, #0x0
  40f080:	mov	w19, #0x0                   	// #0
  40f084:	b	40f24c <method_map_to_machine_group+0x3e4>
  40f088:	str	xzr, [sp, #120]
  40f08c:	bl	4054d0 <__errno_location@plt>
  40f090:	str	wzr, [x0]
  40f094:	ldr	x5, [sp, #112]
  40f098:	add	x2, sp, #0x4c
  40f09c:	add	x1, sp, #0x48
  40f0a0:	add	x0, sp, #0x44
  40f0a4:	mov	x4, x2
  40f0a8:	mov	x3, x1
  40f0ac:	mov	x2, x0
  40f0b0:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40f0b4:	add	x1, x0, #0x6c0
  40f0b8:	mov	x0, x5
  40f0bc:	bl	4053d0 <__isoc99_fscanf@plt>
  40f0c0:	str	w0, [sp, #84]
  40f0c4:	ldr	w0, [sp, #84]
  40f0c8:	cmp	w0, #0x0
  40f0cc:	b.ge	40f0e8 <method_map_to_machine_group+0x280>  // b.tcont
  40f0d0:	ldr	x0, [sp, #112]
  40f0d4:	bl	4056b0 <feof@plt>
  40f0d8:	cmp	w0, #0x0
  40f0dc:	b.eq	40f0e8 <method_map_to_machine_group+0x280>  // b.none
  40f0e0:	mov	w19, #0x0                   	// #0
  40f0e4:	b	40f21c <method_map_to_machine_group+0x3b4>
  40f0e8:	ldr	w0, [sp, #84]
  40f0ec:	cmp	w0, #0x3
  40f0f0:	b.eq	40f124 <method_map_to_machine_group+0x2bc>  // b.none
  40f0f4:	ldr	x0, [sp, #112]
  40f0f8:	bl	405460 <ferror@plt>
  40f0fc:	cmp	w0, #0x0
  40f100:	b.eq	40f118 <method_map_to_machine_group+0x2b0>  // b.none
  40f104:	mov	w0, #0x5                   	// #5
  40f108:	bl	40b0c4 <errno_or_else>
  40f10c:	mov	w20, w0
  40f110:	mov	w19, #0x1                   	// #1
  40f114:	b	40f21c <method_map_to_machine_group+0x3b4>
  40f118:	mov	w20, #0xfffffffb            	// #-5
  40f11c:	mov	w19, #0x1                   	// #1
  40f120:	b	40f21c <method_map_to_machine_group+0x3b4>
  40f124:	ldr	w0, [sp, #72]
  40f128:	cmp	w0, #0x0
  40f12c:	b.ne	40f138 <method_map_to_machine_group+0x2d0>  // b.any
  40f130:	mov	w19, #0x2                   	// #2
  40f134:	b	40f21c <method_map_to_machine_group+0x3b4>
  40f138:	ldr	w1, [sp, #64]
  40f13c:	ldr	w0, [sp, #72]
  40f140:	cmp	w1, w0
  40f144:	b.cc	40f160 <method_map_to_machine_group+0x2f8>  // b.lo, b.ul, b.last
  40f148:	ldr	w1, [sp, #72]
  40f14c:	ldr	w0, [sp, #76]
  40f150:	add	w1, w1, w0
  40f154:	ldr	w0, [sp, #64]
  40f158:	cmp	w1, w0
  40f15c:	b.hi	40f168 <method_map_to_machine_group+0x300>  // b.pmore
  40f160:	mov	w19, #0x2                   	// #2
  40f164:	b	40f21c <method_map_to_machine_group+0x3b4>
  40f168:	ldr	w1, [sp, #64]
  40f16c:	ldr	w0, [sp, #72]
  40f170:	sub	w1, w1, w0
  40f174:	ldr	w0, [sp, #68]
  40f178:	add	w0, w1, w0
  40f17c:	str	w0, [sp, #88]
  40f180:	ldr	w0, [sp, #88]
  40f184:	bl	40b46c <gid_is_valid>
  40f188:	and	w0, w0, #0xff
  40f18c:	eor	w0, w0, #0x1
  40f190:	and	w0, w0, #0xff
  40f194:	cmp	w0, #0x0
  40f198:	b.eq	40f1c8 <method_map_to_machine_group+0x360>  // b.none
  40f19c:	ldr	w0, [sp, #64]
  40f1a0:	mov	w3, w0
  40f1a4:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40f1a8:	add	x2, x0, #0x7e8
  40f1ac:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40f1b0:	add	x1, x0, #0x260
  40f1b4:	ldr	x0, [sp, #40]
  40f1b8:	bl	4055d0 <sd_bus_error_setf@plt>
  40f1bc:	mov	w20, w0
  40f1c0:	mov	w19, #0x1                   	// #1
  40f1c4:	b	40f21c <method_map_to_machine_group+0x3b4>
  40f1c8:	ldr	x0, [sp, #104]
  40f1cc:	bl	41652c <machine_bus_path>
  40f1d0:	str	x0, [sp, #120]
  40f1d4:	ldr	x0, [sp, #120]
  40f1d8:	cmp	x0, #0x0
  40f1dc:	b.ne	40f1ec <method_map_to_machine_group+0x384>  // b.any
  40f1e0:	mov	w20, #0xfffffff4            	// #-12
  40f1e4:	mov	w19, #0x1                   	// #1
  40f1e8:	b	40f21c <method_map_to_machine_group+0x3b4>
  40f1ec:	ldr	x0, [sp, #104]
  40f1f0:	ldr	x0, [x0, #8]
  40f1f4:	ldr	x1, [sp, #120]
  40f1f8:	ldr	w4, [sp, #88]
  40f1fc:	mov	x3, x1
  40f200:	mov	x2, x0
  40f204:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40f208:	add	x1, x0, #0x7b8
  40f20c:	ldr	x0, [sp, #56]
  40f210:	bl	404f00 <sd_bus_reply_method_return@plt>
  40f214:	mov	w20, w0
  40f218:	mov	w19, #0x1                   	// #1
  40f21c:	add	x0, sp, #0x78
  40f220:	bl	40ae74 <freep>
  40f224:	cmp	w19, #0x0
  40f228:	b.eq	40f238 <method_map_to_machine_group+0x3d0>  // b.none
  40f22c:	cmp	w19, #0x1
  40f230:	b.eq	40f240 <method_map_to_machine_group+0x3d8>  // b.none
  40f234:	b	40f248 <method_map_to_machine_group+0x3e0>
  40f238:	mov	w19, #0x2                   	// #2
  40f23c:	b	40f24c <method_map_to_machine_group+0x3e4>
  40f240:	mov	w19, #0x1                   	// #1
  40f244:	b	40f24c <method_map_to_machine_group+0x3e4>
  40f248:	b	40f088 <method_map_to_machine_group+0x220>
  40f24c:	add	x0, sp, #0x70
  40f250:	bl	40b14c <fclosep>
  40f254:	cmp	w19, #0x0
  40f258:	b.eq	40f268 <method_map_to_machine_group+0x400>  // b.none
  40f25c:	cmp	w19, #0x2
  40f260:	b.ne	40f2b0 <method_map_to_machine_group+0x448>  // b.any
  40f264:	nop
  40f268:	ldr	x0, [sp, #128]
  40f26c:	ldr	x0, [x0, #16]
  40f270:	add	x2, sp, #0x68
  40f274:	add	x1, sp, #0x88
  40f278:	mov	x3, #0x0                   	// #0
  40f27c:	bl	40afc4 <hashmap_iterate>
  40f280:	and	w0, w0, #0xff
  40f284:	cmp	w0, #0x0
  40f288:	b.ne	40ef58 <method_map_to_machine_group+0xf0>  // b.any
  40f28c:	ldr	w0, [sp, #64]
  40f290:	mov	w3, w0
  40f294:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40f298:	add	x2, x0, #0x8d0
  40f29c:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40f2a0:	add	x1, x0, #0x860
  40f2a4:	ldr	x0, [sp, #40]
  40f2a8:	bl	4055d0 <sd_bus_error_setf@plt>
  40f2ac:	mov	w20, w0
  40f2b0:	mov	w1, w20
  40f2b4:	adrp	x0, 431000 <machine_vtable+0x4a0>
  40f2b8:	ldr	x0, [x0, #3952]
  40f2bc:	ldr	x2, [sp, #184]
  40f2c0:	ldr	x0, [x0]
  40f2c4:	eor	x0, x2, x0
  40f2c8:	cmp	x0, #0x0
  40f2cc:	b.eq	40f2d4 <method_map_to_machine_group+0x46c>  // b.none
  40f2d0:	bl	4055f0 <__stack_chk_fail@plt>
  40f2d4:	mov	w0, w1
  40f2d8:	ldp	x19, x20, [sp, #16]
  40f2dc:	ldp	x29, x30, [sp], #192
  40f2e0:	ret

000000000040f2e4 <match_job_removed>:
  40f2e4:	stp	x29, x30, [sp, #-144]!
  40f2e8:	mov	x29, sp
  40f2ec:	str	x0, [sp, #40]
  40f2f0:	str	x1, [sp, #32]
  40f2f4:	str	x2, [sp, #24]
  40f2f8:	adrp	x0, 431000 <machine_vtable+0x4a0>
  40f2fc:	ldr	x0, [x0, #3952]
  40f300:	ldr	x1, [x0]
  40f304:	str	x1, [sp, #136]
  40f308:	mov	x1, #0x0                   	// #0
  40f30c:	ldr	x0, [sp, #32]
  40f310:	str	x0, [sp, #96]
  40f314:	ldr	x0, [sp, #40]
  40f318:	cmp	x0, #0x0
  40f31c:	cset	w0, eq  // eq = none
  40f320:	and	w0, w0, #0xff
  40f324:	and	x0, x0, #0xff
  40f328:	cmp	x0, #0x0
  40f32c:	b.eq	40f358 <match_job_removed+0x74>  // b.none
  40f330:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40f334:	add	x1, x0, #0xdb
  40f338:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  40f33c:	add	x4, x0, #0x280
  40f340:	mov	w3, #0x49f                 	// #1183
  40f344:	mov	x2, x1
  40f348:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40f34c:	add	x1, x0, #0x130
  40f350:	mov	w0, #0x0                   	// #0
  40f354:	bl	4052a0 <log_assert_failed_realm@plt>
  40f358:	ldr	x0, [sp, #96]
  40f35c:	cmp	x0, #0x0
  40f360:	cset	w0, eq  // eq = none
  40f364:	and	w0, w0, #0xff
  40f368:	and	x0, x0, #0xff
  40f36c:	cmp	x0, #0x0
  40f370:	b.eq	40f39c <match_job_removed+0xb8>  // b.none
  40f374:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40f378:	add	x1, x0, #0xdb
  40f37c:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  40f380:	add	x4, x0, #0x280
  40f384:	mov	w3, #0x4a0                 	// #1184
  40f388:	mov	x2, x1
  40f38c:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40f390:	add	x1, x0, #0x138
  40f394:	mov	w0, #0x0                   	// #0
  40f398:	bl	4052a0 <log_assert_failed_realm@plt>
  40f39c:	add	x3, sp, #0x50
  40f3a0:	add	x2, sp, #0x58
  40f3a4:	add	x1, sp, #0x48
  40f3a8:	add	x0, sp, #0x34
  40f3ac:	mov	x5, x3
  40f3b0:	mov	x4, x2
  40f3b4:	mov	x3, x1
  40f3b8:	mov	x2, x0
  40f3bc:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40f3c0:	add	x1, x0, #0xd18
  40f3c4:	ldr	x0, [sp, #40]
  40f3c8:	bl	4052b0 <sd_bus_message_read@plt>
  40f3cc:	str	w0, [sp, #56]
  40f3d0:	ldr	w0, [sp, #56]
  40f3d4:	cmp	w0, #0x0
  40f3d8:	b.ge	40f45c <match_job_removed+0x178>  // b.tcont
  40f3dc:	mov	w0, #0x3                   	// #3
  40f3e0:	str	w0, [sp, #60]
  40f3e4:	ldr	w0, [sp, #56]
  40f3e8:	str	w0, [sp, #64]
  40f3ec:	str	wzr, [sp, #68]
  40f3f0:	ldr	w0, [sp, #68]
  40f3f4:	bl	405c20 <log_get_max_level_realm@plt>
  40f3f8:	mov	w1, w0
  40f3fc:	ldr	w0, [sp, #60]
  40f400:	and	w0, w0, #0x7
  40f404:	cmp	w1, w0
  40f408:	b.lt	40f44c <match_job_removed+0x168>  // b.tstop
  40f40c:	ldr	w0, [sp, #68]
  40f410:	lsl	w1, w0, #10
  40f414:	ldr	w0, [sp, #60]
  40f418:	orr	w6, w1, w0
  40f41c:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40f420:	add	x1, x0, #0xdb
  40f424:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40f428:	add	x5, x0, #0xd20
  40f42c:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  40f430:	add	x4, x0, #0x298
  40f434:	mov	w3, #0x4a4                 	// #1188
  40f438:	mov	x2, x1
  40f43c:	ldr	w1, [sp, #64]
  40f440:	mov	w0, w6
  40f444:	bl	405750 <log_internal_realm@plt>
  40f448:	b	40f454 <match_job_removed+0x170>
  40f44c:	ldr	w0, [sp, #64]
  40f450:	cmp	w0, #0x0
  40f454:	mov	w0, #0x0                   	// #0
  40f458:	b	40f568 <match_job_removed+0x284>
  40f45c:	ldr	x0, [sp, #96]
  40f460:	ldr	x0, [x0, #24]
  40f464:	ldr	x1, [sp, #88]
  40f468:	bl	40afa0 <hashmap_get>
  40f46c:	str	x0, [sp, #104]
  40f470:	ldr	x0, [sp, #104]
  40f474:	cmp	x0, #0x0
  40f478:	b.ne	40f484 <match_job_removed+0x1a0>  // b.any
  40f47c:	mov	w0, #0x0                   	// #0
  40f480:	b	40f568 <match_job_removed+0x284>
  40f484:	ldr	x2, [sp, #72]
  40f488:	ldr	x0, [sp, #104]
  40f48c:	ldr	x0, [x0, #72]
  40f490:	mov	x1, x0
  40f494:	mov	x0, x2
  40f498:	bl	40b030 <streq_ptr>
  40f49c:	and	w0, w0, #0xff
  40f4a0:	cmp	w0, #0x0
  40f4a4:	b.eq	40f55c <match_job_removed+0x278>  // b.none
  40f4a8:	ldr	x0, [sp, #104]
  40f4ac:	ldr	x0, [x0, #72]
  40f4b0:	bl	40ae54 <mfree>
  40f4b4:	mov	x1, x0
  40f4b8:	ldr	x0, [sp, #104]
  40f4bc:	str	x1, [x0, #72]
  40f4c0:	ldr	x0, [sp, #104]
  40f4c4:	ldrb	w0, [x0, #104]
  40f4c8:	and	w0, w0, #0x2
  40f4cc:	and	w0, w0, #0xff
  40f4d0:	cmp	w0, #0x0
  40f4d4:	b.eq	40f554 <match_job_removed+0x270>  // b.none
  40f4d8:	ldr	x2, [sp, #80]
  40f4dc:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40f4e0:	add	x1, x0, #0xd40
  40f4e4:	mov	x0, x2
  40f4e8:	bl	405840 <strcmp@plt>
  40f4ec:	cmp	w0, #0x0
  40f4f0:	b.ne	40f504 <match_job_removed+0x220>  // b.any
  40f4f4:	mov	x1, #0x0                   	// #0
  40f4f8:	ldr	x0, [sp, #104]
  40f4fc:	bl	41692c <machine_send_create_reply>
  40f500:	b	40f554 <match_job_removed+0x270>
  40f504:	str	xzr, [sp, #112]
  40f508:	str	xzr, [sp, #120]
  40f50c:	str	wzr, [sp, #128]
  40f510:	ldr	x0, [sp, #88]
  40f514:	ldr	x1, [sp, #80]
  40f518:	add	x5, sp, #0x70
  40f51c:	mov	x4, x1
  40f520:	mov	x3, x0
  40f524:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40f528:	add	x2, x0, #0xd48
  40f52c:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40f530:	add	x1, x0, #0xd70
  40f534:	mov	x0, x5
  40f538:	bl	4055d0 <sd_bus_error_setf@plt>
  40f53c:	add	x0, sp, #0x70
  40f540:	mov	x1, x0
  40f544:	ldr	x0, [sp, #104]
  40f548:	bl	41692c <machine_send_create_reply>
  40f54c:	add	x0, sp, #0x70
  40f550:	bl	4056c0 <sd_bus_error_free@plt>
  40f554:	ldr	x0, [sp, #104]
  40f558:	bl	40836c <machine_save>
  40f55c:	ldr	x0, [sp, #104]
  40f560:	bl	40a2fc <machine_add_to_gc_queue>
  40f564:	mov	w0, #0x0                   	// #0
  40f568:	mov	w1, w0
  40f56c:	adrp	x0, 431000 <machine_vtable+0x4a0>
  40f570:	ldr	x0, [x0, #3952]
  40f574:	ldr	x2, [sp, #136]
  40f578:	ldr	x0, [x0]
  40f57c:	eor	x0, x2, x0
  40f580:	cmp	x0, #0x0
  40f584:	b.eq	40f58c <match_job_removed+0x2a8>  // b.none
  40f588:	bl	4055f0 <__stack_chk_fail@plt>
  40f58c:	mov	w0, w1
  40f590:	ldp	x29, x30, [sp], #144
  40f594:	ret

000000000040f598 <match_properties_changed>:
  40f598:	stp	x29, x30, [sp, #-112]!
  40f59c:	mov	x29, sp
  40f5a0:	str	x19, [sp, #16]
  40f5a4:	str	x0, [sp, #56]
  40f5a8:	str	x1, [sp, #48]
  40f5ac:	str	x2, [sp, #40]
  40f5b0:	adrp	x0, 431000 <machine_vtable+0x4a0>
  40f5b4:	ldr	x0, [x0, #3952]
  40f5b8:	ldr	x1, [x0]
  40f5bc:	str	x1, [sp, #104]
  40f5c0:	mov	x1, #0x0                   	// #0
  40f5c4:	str	xzr, [sp, #72]
  40f5c8:	ldr	x0, [sp, #48]
  40f5cc:	str	x0, [sp, #80]
  40f5d0:	ldr	x0, [sp, #56]
  40f5d4:	cmp	x0, #0x0
  40f5d8:	cset	w0, eq  // eq = none
  40f5dc:	and	w0, w0, #0xff
  40f5e0:	and	x0, x0, #0xff
  40f5e4:	cmp	x0, #0x0
  40f5e8:	b.eq	40f614 <match_properties_changed+0x7c>  // b.none
  40f5ec:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40f5f0:	add	x1, x0, #0xdb
  40f5f4:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  40f5f8:	add	x4, x0, #0x2b0
  40f5fc:	mov	w3, #0x4c9                 	// #1225
  40f600:	mov	x2, x1
  40f604:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40f608:	add	x1, x0, #0x130
  40f60c:	mov	w0, #0x0                   	// #0
  40f610:	bl	4052a0 <log_assert_failed_realm@plt>
  40f614:	ldr	x0, [sp, #80]
  40f618:	cmp	x0, #0x0
  40f61c:	cset	w0, eq  // eq = none
  40f620:	and	w0, w0, #0xff
  40f624:	and	x0, x0, #0xff
  40f628:	cmp	x0, #0x0
  40f62c:	b.eq	40f658 <match_properties_changed+0xc0>  // b.none
  40f630:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40f634:	add	x1, x0, #0xdb
  40f638:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  40f63c:	add	x4, x0, #0x2b0
  40f640:	mov	w3, #0x4ca                 	// #1226
  40f644:	mov	x2, x1
  40f648:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40f64c:	add	x1, x0, #0x138
  40f650:	mov	w0, #0x0                   	// #0
  40f654:	bl	4052a0 <log_assert_failed_realm@plt>
  40f658:	ldr	x0, [sp, #56]
  40f65c:	bl	405a90 <sd_bus_message_get_path@plt>
  40f660:	str	x0, [sp, #88]
  40f664:	ldr	x0, [sp, #88]
  40f668:	cmp	x0, #0x0
  40f66c:	b.ne	40f678 <match_properties_changed+0xe0>  // b.any
  40f670:	mov	w19, #0x0                   	// #0
  40f674:	b	40f704 <match_properties_changed+0x16c>
  40f678:	add	x0, sp, #0x48
  40f67c:	mov	x1, x0
  40f680:	ldr	x0, [sp, #88]
  40f684:	bl	405530 <unit_name_from_dbus_path@plt>
  40f688:	str	w0, [sp, #68]
  40f68c:	ldr	w0, [sp, #68]
  40f690:	cmn	w0, #0x16
  40f694:	b.ne	40f6a0 <match_properties_changed+0x108>  // b.any
  40f698:	mov	w19, #0x0                   	// #0
  40f69c:	b	40f704 <match_properties_changed+0x16c>
  40f6a0:	ldr	w0, [sp, #68]
  40f6a4:	cmp	w0, #0x0
  40f6a8:	b.ge	40f6d0 <match_properties_changed+0x138>  // b.tcont
  40f6ac:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40f6b0:	add	x1, x0, #0xdb
  40f6b4:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  40f6b8:	add	x3, x0, #0x2d0
  40f6bc:	mov	w2, #0x4d4                 	// #1236
  40f6c0:	mov	w0, #0x0                   	// #0
  40f6c4:	bl	405ba0 <log_oom_internal@plt>
  40f6c8:	mov	w19, #0x0                   	// #0
  40f6cc:	b	40f704 <match_properties_changed+0x16c>
  40f6d0:	ldr	x0, [sp, #80]
  40f6d4:	ldr	x0, [x0, #24]
  40f6d8:	ldr	x1, [sp, #72]
  40f6dc:	bl	40afa0 <hashmap_get>
  40f6e0:	str	x0, [sp, #96]
  40f6e4:	ldr	x0, [sp, #96]
  40f6e8:	cmp	x0, #0x0
  40f6ec:	b.ne	40f6f8 <match_properties_changed+0x160>  // b.any
  40f6f0:	mov	w19, #0x0                   	// #0
  40f6f4:	b	40f704 <match_properties_changed+0x16c>
  40f6f8:	ldr	x0, [sp, #96]
  40f6fc:	bl	40a2fc <machine_add_to_gc_queue>
  40f700:	mov	w19, #0x0                   	// #0
  40f704:	add	x0, sp, #0x48
  40f708:	bl	40ae74 <freep>
  40f70c:	mov	w1, w19
  40f710:	adrp	x0, 431000 <machine_vtable+0x4a0>
  40f714:	ldr	x0, [x0, #3952]
  40f718:	ldr	x2, [sp, #104]
  40f71c:	ldr	x0, [x0]
  40f720:	eor	x0, x2, x0
  40f724:	cmp	x0, #0x0
  40f728:	b.eq	40f730 <match_properties_changed+0x198>  // b.none
  40f72c:	bl	4055f0 <__stack_chk_fail@plt>
  40f730:	mov	w0, w1
  40f734:	ldr	x19, [sp, #16]
  40f738:	ldp	x29, x30, [sp], #112
  40f73c:	ret

000000000040f740 <match_unit_removed>:
  40f740:	stp	x29, x30, [sp, #-112]!
  40f744:	mov	x29, sp
  40f748:	str	x0, [sp, #40]
  40f74c:	str	x1, [sp, #32]
  40f750:	str	x2, [sp, #24]
  40f754:	adrp	x0, 431000 <machine_vtable+0x4a0>
  40f758:	ldr	x0, [x0, #3952]
  40f75c:	ldr	x1, [x0]
  40f760:	str	x1, [sp, #104]
  40f764:	mov	x1, #0x0                   	// #0
  40f768:	ldr	x0, [sp, #32]
  40f76c:	str	x0, [sp, #88]
  40f770:	ldr	x0, [sp, #40]
  40f774:	cmp	x0, #0x0
  40f778:	cset	w0, eq  // eq = none
  40f77c:	and	w0, w0, #0xff
  40f780:	and	x0, x0, #0xff
  40f784:	cmp	x0, #0x0
  40f788:	b.eq	40f7b4 <match_unit_removed+0x74>  // b.none
  40f78c:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40f790:	add	x1, x0, #0xdb
  40f794:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  40f798:	add	x4, x0, #0x2f0
  40f79c:	mov	w3, #0x4e6                 	// #1254
  40f7a0:	mov	x2, x1
  40f7a4:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40f7a8:	add	x1, x0, #0x130
  40f7ac:	mov	w0, #0x0                   	// #0
  40f7b0:	bl	4052a0 <log_assert_failed_realm@plt>
  40f7b4:	ldr	x0, [sp, #88]
  40f7b8:	cmp	x0, #0x0
  40f7bc:	cset	w0, eq  // eq = none
  40f7c0:	and	w0, w0, #0xff
  40f7c4:	and	x0, x0, #0xff
  40f7c8:	cmp	x0, #0x0
  40f7cc:	b.eq	40f7f8 <match_unit_removed+0xb8>  // b.none
  40f7d0:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40f7d4:	add	x1, x0, #0xdb
  40f7d8:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  40f7dc:	add	x4, x0, #0x2f0
  40f7e0:	mov	w3, #0x4e7                 	// #1255
  40f7e4:	mov	x2, x1
  40f7e8:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40f7ec:	add	x1, x0, #0x138
  40f7f0:	mov	w0, #0x0                   	// #0
  40f7f4:	bl	4052a0 <log_assert_failed_realm@plt>
  40f7f8:	add	x1, sp, #0x48
  40f7fc:	add	x0, sp, #0x50
  40f800:	mov	x3, x1
  40f804:	mov	x2, x0
  40f808:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40f80c:	add	x1, x0, #0xd00
  40f810:	ldr	x0, [sp, #40]
  40f814:	bl	4052b0 <sd_bus_message_read@plt>
  40f818:	str	w0, [sp, #56]
  40f81c:	ldr	w0, [sp, #56]
  40f820:	cmp	w0, #0x0
  40f824:	b.ge	40f8a8 <match_unit_removed+0x168>  // b.tcont
  40f828:	mov	w0, #0x3                   	// #3
  40f82c:	str	w0, [sp, #60]
  40f830:	ldr	w0, [sp, #56]
  40f834:	str	w0, [sp, #64]
  40f838:	str	wzr, [sp, #68]
  40f83c:	ldr	w0, [sp, #68]
  40f840:	bl	405c20 <log_get_max_level_realm@plt>
  40f844:	mov	w1, w0
  40f848:	ldr	w0, [sp, #60]
  40f84c:	and	w0, w0, #0x7
  40f850:	cmp	w1, w0
  40f854:	b.lt	40f898 <match_unit_removed+0x158>  // b.tstop
  40f858:	ldr	w0, [sp, #68]
  40f85c:	lsl	w1, w0, #10
  40f860:	ldr	w0, [sp, #60]
  40f864:	orr	w6, w1, w0
  40f868:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40f86c:	add	x1, x0, #0xdb
  40f870:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40f874:	add	x5, x0, #0xd20
  40f878:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  40f87c:	add	x4, x0, #0x308
  40f880:	mov	w3, #0x4eb                 	// #1259
  40f884:	mov	x2, x1
  40f888:	ldr	w1, [sp, #64]
  40f88c:	mov	w0, w6
  40f890:	bl	405750 <log_internal_realm@plt>
  40f894:	b	40f8a0 <match_unit_removed+0x160>
  40f898:	ldr	w0, [sp, #64]
  40f89c:	cmp	w0, #0x0
  40f8a0:	mov	w0, #0x0                   	// #0
  40f8a4:	b	40f8dc <match_unit_removed+0x19c>
  40f8a8:	ldr	x0, [sp, #88]
  40f8ac:	ldr	x0, [x0, #24]
  40f8b0:	ldr	x1, [sp, #80]
  40f8b4:	bl	40afa0 <hashmap_get>
  40f8b8:	str	x0, [sp, #96]
  40f8bc:	ldr	x0, [sp, #96]
  40f8c0:	cmp	x0, #0x0
  40f8c4:	b.ne	40f8d0 <match_unit_removed+0x190>  // b.any
  40f8c8:	mov	w0, #0x0                   	// #0
  40f8cc:	b	40f8dc <match_unit_removed+0x19c>
  40f8d0:	ldr	x0, [sp, #96]
  40f8d4:	bl	40a2fc <machine_add_to_gc_queue>
  40f8d8:	mov	w0, #0x0                   	// #0
  40f8dc:	mov	w1, w0
  40f8e0:	adrp	x0, 431000 <machine_vtable+0x4a0>
  40f8e4:	ldr	x0, [x0, #3952]
  40f8e8:	ldr	x2, [sp, #104]
  40f8ec:	ldr	x0, [x0]
  40f8f0:	eor	x0, x2, x0
  40f8f4:	cmp	x0, #0x0
  40f8f8:	b.eq	40f900 <match_unit_removed+0x1c0>  // b.none
  40f8fc:	bl	4055f0 <__stack_chk_fail@plt>
  40f900:	mov	w0, w1
  40f904:	ldp	x29, x30, [sp], #112
  40f908:	ret

000000000040f90c <match_reloading>:
  40f90c:	stp	x29, x30, [sp, #-128]!
  40f910:	mov	x29, sp
  40f914:	str	x0, [sp, #40]
  40f918:	str	x1, [sp, #32]
  40f91c:	str	x2, [sp, #24]
  40f920:	adrp	x0, 431000 <machine_vtable+0x4a0>
  40f924:	ldr	x0, [x0, #3952]
  40f928:	ldr	x1, [x0]
  40f92c:	str	x1, [sp, #120]
  40f930:	mov	x1, #0x0                   	// #0
  40f934:	ldr	x0, [sp, #32]
  40f938:	str	x0, [sp, #96]
  40f93c:	ldr	x0, [sp, #40]
  40f940:	cmp	x0, #0x0
  40f944:	cset	w0, eq  // eq = none
  40f948:	and	w0, w0, #0xff
  40f94c:	and	x0, x0, #0xff
  40f950:	cmp	x0, #0x0
  40f954:	b.eq	40f980 <match_reloading+0x74>  // b.none
  40f958:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40f95c:	add	x1, x0, #0xdb
  40f960:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  40f964:	add	x4, x0, #0x320
  40f968:	mov	w3, #0x4fd                 	// #1277
  40f96c:	mov	x2, x1
  40f970:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40f974:	add	x1, x0, #0x130
  40f978:	mov	w0, #0x0                   	// #0
  40f97c:	bl	4052a0 <log_assert_failed_realm@plt>
  40f980:	ldr	x0, [sp, #96]
  40f984:	cmp	x0, #0x0
  40f988:	cset	w0, eq  // eq = none
  40f98c:	and	w0, w0, #0xff
  40f990:	and	x0, x0, #0xff
  40f994:	cmp	x0, #0x0
  40f998:	b.eq	40f9c4 <match_reloading+0xb8>  // b.none
  40f99c:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40f9a0:	add	x1, x0, #0xdb
  40f9a4:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  40f9a8:	add	x4, x0, #0x320
  40f9ac:	mov	w3, #0x4fe                 	// #1278
  40f9b0:	mov	x2, x1
  40f9b4:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40f9b8:	add	x1, x0, #0x138
  40f9bc:	mov	w0, #0x0                   	// #0
  40f9c0:	bl	4052a0 <log_assert_failed_realm@plt>
  40f9c4:	add	x0, sp, #0x38
  40f9c8:	mov	x2, x0
  40f9cc:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40f9d0:	add	x1, x0, #0xd98
  40f9d4:	ldr	x0, [sp, #40]
  40f9d8:	bl	4052b0 <sd_bus_message_read@plt>
  40f9dc:	str	w0, [sp, #60]
  40f9e0:	ldr	w0, [sp, #60]
  40f9e4:	cmp	w0, #0x0
  40f9e8:	b.ge	40fa6c <match_reloading+0x160>  // b.tcont
  40f9ec:	mov	w0, #0x3                   	// #3
  40f9f0:	str	w0, [sp, #76]
  40f9f4:	ldr	w0, [sp, #60]
  40f9f8:	str	w0, [sp, #80]
  40f9fc:	str	wzr, [sp, #84]
  40fa00:	ldr	w0, [sp, #84]
  40fa04:	bl	405c20 <log_get_max_level_realm@plt>
  40fa08:	mov	w1, w0
  40fa0c:	ldr	w0, [sp, #76]
  40fa10:	and	w0, w0, #0x7
  40fa14:	cmp	w1, w0
  40fa18:	b.lt	40fa5c <match_reloading+0x150>  // b.tstop
  40fa1c:	ldr	w0, [sp, #84]
  40fa20:	lsl	w1, w0, #10
  40fa24:	ldr	w0, [sp, #76]
  40fa28:	orr	w6, w1, w0
  40fa2c:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40fa30:	add	x1, x0, #0xdb
  40fa34:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40fa38:	add	x5, x0, #0xd20
  40fa3c:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  40fa40:	add	x4, x0, #0x330
  40fa44:	mov	w3, #0x502                 	// #1282
  40fa48:	mov	x2, x1
  40fa4c:	ldr	w1, [sp, #80]
  40fa50:	mov	w0, w6
  40fa54:	bl	405750 <log_internal_realm@plt>
  40fa58:	b	40fa64 <match_reloading+0x158>
  40fa5c:	ldr	w0, [sp, #80]
  40fa60:	cmp	w0, #0x0
  40fa64:	mov	w0, #0x0                   	// #0
  40fa68:	b	40fb34 <match_reloading+0x228>
  40fa6c:	ldr	w0, [sp, #56]
  40fa70:	cmp	w0, #0x0
  40fa74:	b.eq	40fa80 <match_reloading+0x174>  // b.none
  40fa78:	mov	w0, #0x0                   	// #0
  40fa7c:	b	40fb34 <match_reloading+0x228>
  40fa80:	mov	w0, #0x7                   	// #7
  40fa84:	str	w0, [sp, #64]
  40fa88:	str	wzr, [sp, #68]
  40fa8c:	str	wzr, [sp, #72]
  40fa90:	ldr	w0, [sp, #72]
  40fa94:	bl	405c20 <log_get_max_level_realm@plt>
  40fa98:	mov	w1, w0
  40fa9c:	ldr	w0, [sp, #64]
  40faa0:	and	w0, w0, #0x7
  40faa4:	cmp	w1, w0
  40faa8:	b.lt	40faec <match_reloading+0x1e0>  // b.tstop
  40faac:	ldr	w0, [sp, #72]
  40fab0:	lsl	w1, w0, #10
  40fab4:	ldr	w0, [sp, #64]
  40fab8:	orr	w6, w1, w0
  40fabc:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40fac0:	add	x1, x0, #0xdb
  40fac4:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40fac8:	add	x5, x0, #0xda0
  40facc:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  40fad0:	add	x4, x0, #0x330
  40fad4:	mov	w3, #0x509                 	// #1289
  40fad8:	mov	x2, x1
  40fadc:	ldr	w1, [sp, #68]
  40fae0:	mov	w0, w6
  40fae4:	bl	405750 <log_internal_realm@plt>
  40fae8:	b	40faf4 <match_reloading+0x1e8>
  40faec:	ldr	w0, [sp, #68]
  40faf0:	cmp	w0, #0x0
  40faf4:	mov	w0, #0xfffffffe            	// #-2
  40faf8:	str	w0, [sp, #104]
  40fafc:	str	xzr, [sp, #112]
  40fb00:	b	40fb0c <match_reloading+0x200>
  40fb04:	ldr	x0, [sp, #88]
  40fb08:	bl	40a2fc <machine_add_to_gc_queue>
  40fb0c:	ldr	x0, [sp, #96]
  40fb10:	ldr	x0, [x0, #16]
  40fb14:	add	x2, sp, #0x58
  40fb18:	add	x1, sp, #0x68
  40fb1c:	mov	x3, #0x0                   	// #0
  40fb20:	bl	40afc4 <hashmap_iterate>
  40fb24:	and	w0, w0, #0xff
  40fb28:	cmp	w0, #0x0
  40fb2c:	b.ne	40fb04 <match_reloading+0x1f8>  // b.any
  40fb30:	mov	w0, #0x0                   	// #0
  40fb34:	mov	w1, w0
  40fb38:	adrp	x0, 431000 <machine_vtable+0x4a0>
  40fb3c:	ldr	x0, [x0, #3952]
  40fb40:	ldr	x2, [sp, #120]
  40fb44:	ldr	x0, [x0]
  40fb48:	eor	x0, x2, x0
  40fb4c:	cmp	x0, #0x0
  40fb50:	b.eq	40fb58 <match_reloading+0x24c>  // b.none
  40fb54:	bl	4055f0 <__stack_chk_fail@plt>
  40fb58:	mov	w0, w1
  40fb5c:	ldp	x29, x30, [sp], #128
  40fb60:	ret

000000000040fb64 <manager_unref_unit>:
  40fb64:	sub	sp, sp, #0x40
  40fb68:	stp	x29, x30, [sp, #16]
  40fb6c:	add	x29, sp, #0x10
  40fb70:	str	x0, [sp, #56]
  40fb74:	str	x1, [sp, #48]
  40fb78:	str	x2, [sp, #40]
  40fb7c:	ldr	x0, [sp, #56]
  40fb80:	cmp	x0, #0x0
  40fb84:	cset	w0, eq  // eq = none
  40fb88:	and	w0, w0, #0xff
  40fb8c:	and	x0, x0, #0xff
  40fb90:	cmp	x0, #0x0
  40fb94:	b.eq	40fbc0 <manager_unref_unit+0x5c>  // b.none
  40fb98:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40fb9c:	add	x1, x0, #0xdb
  40fba0:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  40fba4:	add	x4, x0, #0x340
  40fba8:	mov	w3, #0x516                 	// #1302
  40fbac:	mov	x2, x1
  40fbb0:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40fbb4:	add	x1, x0, #0x138
  40fbb8:	mov	w0, #0x0                   	// #0
  40fbbc:	bl	4052a0 <log_assert_failed_realm@plt>
  40fbc0:	ldr	x0, [sp, #48]
  40fbc4:	cmp	x0, #0x0
  40fbc8:	cset	w0, eq  // eq = none
  40fbcc:	and	w0, w0, #0xff
  40fbd0:	and	x0, x0, #0xff
  40fbd4:	cmp	x0, #0x0
  40fbd8:	b.eq	40fc04 <manager_unref_unit+0xa0>  // b.none
  40fbdc:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40fbe0:	add	x1, x0, #0xdb
  40fbe4:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  40fbe8:	add	x4, x0, #0x340
  40fbec:	mov	w3, #0x517                 	// #1303
  40fbf0:	mov	x2, x1
  40fbf4:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40fbf8:	add	x1, x0, #0xde0
  40fbfc:	mov	w0, #0x0                   	// #0
  40fc00:	bl	4052a0 <log_assert_failed_realm@plt>
  40fc04:	ldr	x0, [sp, #56]
  40fc08:	ldr	x8, [x0, #8]
  40fc0c:	ldr	x0, [sp, #48]
  40fc10:	str	x0, [sp]
  40fc14:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40fc18:	add	x7, x0, #0x120
  40fc1c:	mov	x6, #0x0                   	// #0
  40fc20:	ldr	x5, [sp, #40]
  40fc24:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40fc28:	add	x4, x0, #0xde8
  40fc2c:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40fc30:	add	x3, x0, #0xdf8
  40fc34:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40fc38:	add	x2, x0, #0xe20
  40fc3c:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40fc40:	add	x1, x0, #0xe40
  40fc44:	mov	x0, x8
  40fc48:	bl	405b20 <sd_bus_call_method@plt>
  40fc4c:	ldp	x29, x30, [sp, #16]
  40fc50:	add	sp, sp, #0x40
  40fc54:	ret

000000000040fc58 <manager_stop_unit>:
  40fc58:	sub	sp, sp, #0x80
  40fc5c:	stp	x29, x30, [sp, #16]
  40fc60:	add	x29, sp, #0x10
  40fc64:	str	x19, [sp, #32]
  40fc68:	str	x0, [sp, #72]
  40fc6c:	str	x1, [sp, #64]
  40fc70:	str	x2, [sp, #56]
  40fc74:	str	x3, [sp, #48]
  40fc78:	adrp	x0, 431000 <machine_vtable+0x4a0>
  40fc7c:	ldr	x0, [x0, #3952]
  40fc80:	ldr	x1, [x0]
  40fc84:	str	x1, [sp, #120]
  40fc88:	mov	x1, #0x0                   	// #0
  40fc8c:	str	xzr, [sp, #96]
  40fc90:	ldr	x0, [sp, #72]
  40fc94:	cmp	x0, #0x0
  40fc98:	cset	w0, eq  // eq = none
  40fc9c:	and	w0, w0, #0xff
  40fca0:	and	x0, x0, #0xff
  40fca4:	cmp	x0, #0x0
  40fca8:	b.eq	40fcd4 <manager_stop_unit+0x7c>  // b.none
  40fcac:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40fcb0:	add	x1, x0, #0xdb
  40fcb4:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  40fcb8:	add	x4, x0, #0x358
  40fcbc:	mov	w3, #0x529                 	// #1321
  40fcc0:	mov	x2, x1
  40fcc4:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40fcc8:	add	x1, x0, #0x238
  40fccc:	mov	w0, #0x0                   	// #0
  40fcd0:	bl	4052a0 <log_assert_failed_realm@plt>
  40fcd4:	ldr	x0, [sp, #64]
  40fcd8:	cmp	x0, #0x0
  40fcdc:	cset	w0, eq  // eq = none
  40fce0:	and	w0, w0, #0xff
  40fce4:	and	x0, x0, #0xff
  40fce8:	cmp	x0, #0x0
  40fcec:	b.eq	40fd18 <manager_stop_unit+0xc0>  // b.none
  40fcf0:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40fcf4:	add	x1, x0, #0xdb
  40fcf8:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  40fcfc:	add	x4, x0, #0x358
  40fd00:	mov	w3, #0x52a                 	// #1322
  40fd04:	mov	x2, x1
  40fd08:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40fd0c:	add	x1, x0, #0xde0
  40fd10:	mov	w0, #0x0                   	// #0
  40fd14:	bl	4052a0 <log_assert_failed_realm@plt>
  40fd18:	ldr	x0, [sp, #72]
  40fd1c:	ldr	x8, [x0, #8]
  40fd20:	add	x1, sp, #0x60
  40fd24:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40fd28:	add	x0, x0, #0xe70
  40fd2c:	str	x0, [sp, #8]
  40fd30:	ldr	x0, [sp, #64]
  40fd34:	str	x0, [sp]
  40fd38:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40fd3c:	add	x7, x0, #0xba8
  40fd40:	mov	x6, x1
  40fd44:	ldr	x5, [sp, #56]
  40fd48:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40fd4c:	add	x4, x0, #0xe60
  40fd50:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40fd54:	add	x3, x0, #0xdf8
  40fd58:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40fd5c:	add	x2, x0, #0xe20
  40fd60:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40fd64:	add	x1, x0, #0xe40
  40fd68:	mov	x0, x8
  40fd6c:	bl	405b20 <sd_bus_call_method@plt>
  40fd70:	str	w0, [sp, #92]
  40fd74:	ldr	w0, [sp, #92]
  40fd78:	cmp	w0, #0x0
  40fd7c:	b.ge	40fddc <manager_stop_unit+0x184>  // b.tcont
  40fd80:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40fd84:	add	x1, x0, #0xe78
  40fd88:	ldr	x0, [sp, #56]
  40fd8c:	bl	4058c0 <sd_bus_error_has_name@plt>
  40fd90:	cmp	w0, #0x0
  40fd94:	b.ne	40fdb0 <manager_stop_unit+0x158>  // b.any
  40fd98:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40fd9c:	add	x1, x0, #0xea0
  40fda0:	ldr	x0, [sp, #56]
  40fda4:	bl	4058c0 <sd_bus_error_has_name@plt>
  40fda8:	cmp	w0, #0x0
  40fdac:	b.eq	40fdd4 <manager_stop_unit+0x17c>  // b.none
  40fdb0:	ldr	x0, [sp, #48]
  40fdb4:	cmp	x0, #0x0
  40fdb8:	b.eq	40fdc4 <manager_stop_unit+0x16c>  // b.none
  40fdbc:	ldr	x0, [sp, #48]
  40fdc0:	str	xzr, [x0]
  40fdc4:	ldr	x0, [sp, #56]
  40fdc8:	bl	4056c0 <sd_bus_error_free@plt>
  40fdcc:	mov	w19, #0x0                   	// #0
  40fdd0:	b	40fe4c <manager_stop_unit+0x1f4>
  40fdd4:	ldr	w19, [sp, #92]
  40fdd8:	b	40fe4c <manager_stop_unit+0x1f4>
  40fddc:	ldr	x0, [sp, #48]
  40fde0:	cmp	x0, #0x0
  40fde4:	b.eq	40fe48 <manager_stop_unit+0x1f0>  // b.none
  40fde8:	ldr	x3, [sp, #96]
  40fdec:	add	x0, sp, #0x68
  40fdf0:	mov	x2, x0
  40fdf4:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40fdf8:	add	x1, x0, #0x180
  40fdfc:	mov	x0, x3
  40fe00:	bl	4052b0 <sd_bus_message_read@plt>
  40fe04:	str	w0, [sp, #92]
  40fe08:	ldr	w0, [sp, #92]
  40fe0c:	cmp	w0, #0x0
  40fe10:	b.ge	40fe1c <manager_stop_unit+0x1c4>  // b.tcont
  40fe14:	ldr	w19, [sp, #92]
  40fe18:	b	40fe4c <manager_stop_unit+0x1f4>
  40fe1c:	ldr	x0, [sp, #104]
  40fe20:	bl	405890 <strdup@plt>
  40fe24:	str	x0, [sp, #112]
  40fe28:	ldr	x0, [sp, #112]
  40fe2c:	cmp	x0, #0x0
  40fe30:	b.ne	40fe3c <manager_stop_unit+0x1e4>  // b.any
  40fe34:	mov	w19, #0xfffffff4            	// #-12
  40fe38:	b	40fe4c <manager_stop_unit+0x1f4>
  40fe3c:	ldr	x0, [sp, #48]
  40fe40:	ldr	x1, [sp, #112]
  40fe44:	str	x1, [x0]
  40fe48:	mov	w19, #0x1                   	// #1
  40fe4c:	add	x0, sp, #0x60
  40fe50:	bl	40af14 <sd_bus_message_unrefp>
  40fe54:	mov	w1, w19
  40fe58:	adrp	x0, 431000 <machine_vtable+0x4a0>
  40fe5c:	ldr	x0, [x0, #3952]
  40fe60:	ldr	x2, [sp, #120]
  40fe64:	ldr	x0, [x0]
  40fe68:	eor	x0, x2, x0
  40fe6c:	cmp	x0, #0x0
  40fe70:	b.eq	40fe78 <manager_stop_unit+0x220>  // b.none
  40fe74:	bl	4055f0 <__stack_chk_fail@plt>
  40fe78:	mov	w0, w1
  40fe7c:	ldr	x19, [sp, #32]
  40fe80:	ldp	x29, x30, [sp, #16]
  40fe84:	add	sp, sp, #0x80
  40fe88:	ret

000000000040fe8c <manager_kill_unit>:
  40fe8c:	sub	sp, sp, #0x50
  40fe90:	stp	x29, x30, [sp, #32]
  40fe94:	add	x29, sp, #0x20
  40fe98:	str	x0, [sp, #72]
  40fe9c:	str	x1, [sp, #64]
  40fea0:	str	w2, [sp, #60]
  40fea4:	str	x3, [sp, #48]
  40fea8:	ldr	x0, [sp, #72]
  40feac:	cmp	x0, #0x0
  40feb0:	cset	w0, eq  // eq = none
  40feb4:	and	w0, w0, #0xff
  40feb8:	and	x0, x0, #0xff
  40febc:	cmp	x0, #0x0
  40fec0:	b.eq	40feec <manager_kill_unit+0x60>  // b.none
  40fec4:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40fec8:	add	x1, x0, #0xdb
  40fecc:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  40fed0:	add	x4, x0, #0x370
  40fed4:	mov	w3, #0x556                 	// #1366
  40fed8:	mov	x2, x1
  40fedc:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40fee0:	add	x1, x0, #0x238
  40fee4:	mov	w0, #0x0                   	// #0
  40fee8:	bl	4052a0 <log_assert_failed_realm@plt>
  40feec:	ldr	x0, [sp, #64]
  40fef0:	cmp	x0, #0x0
  40fef4:	cset	w0, eq  // eq = none
  40fef8:	and	w0, w0, #0xff
  40fefc:	and	x0, x0, #0xff
  40ff00:	cmp	x0, #0x0
  40ff04:	b.eq	40ff30 <manager_kill_unit+0xa4>  // b.none
  40ff08:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40ff0c:	add	x1, x0, #0xdb
  40ff10:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  40ff14:	add	x4, x0, #0x370
  40ff18:	mov	w3, #0x557                 	// #1367
  40ff1c:	mov	x2, x1
  40ff20:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40ff24:	add	x1, x0, #0xde0
  40ff28:	mov	w0, #0x0                   	// #0
  40ff2c:	bl	4052a0 <log_assert_failed_realm@plt>
  40ff30:	ldr	x0, [sp, #72]
  40ff34:	ldr	x8, [x0, #8]
  40ff38:	ldr	w0, [sp, #60]
  40ff3c:	str	w0, [sp, #16]
  40ff40:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40ff44:	add	x0, x0, #0x4b8
  40ff48:	str	x0, [sp, #8]
  40ff4c:	ldr	x0, [sp, #64]
  40ff50:	str	x0, [sp]
  40ff54:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40ff58:	add	x7, x0, #0xa68
  40ff5c:	mov	x6, #0x0                   	// #0
  40ff60:	ldr	x5, [sp, #48]
  40ff64:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40ff68:	add	x4, x0, #0xec8
  40ff6c:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40ff70:	add	x3, x0, #0xdf8
  40ff74:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40ff78:	add	x2, x0, #0xe20
  40ff7c:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40ff80:	add	x1, x0, #0xe40
  40ff84:	mov	x0, x8
  40ff88:	bl	405b20 <sd_bus_call_method@plt>
  40ff8c:	ldp	x29, x30, [sp, #32]
  40ff90:	add	sp, sp, #0x50
  40ff94:	ret

000000000040ff98 <manager_unit_is_active>:
  40ff98:	stp	x29, x30, [sp, #-144]!
  40ff9c:	mov	x29, sp
  40ffa0:	str	x19, [sp, #16]
  40ffa4:	str	x0, [sp, #40]
  40ffa8:	str	x1, [sp, #32]
  40ffac:	adrp	x0, 431000 <machine_vtable+0x4a0>
  40ffb0:	ldr	x0, [x0, #3952]
  40ffb4:	ldr	x1, [x0]
  40ffb8:	str	x1, [sp, #136]
  40ffbc:	mov	x1, #0x0                   	// #0
  40ffc0:	str	xzr, [sp, #88]
  40ffc4:	str	xzr, [sp, #96]
  40ffc8:	str	wzr, [sp, #104]
  40ffcc:	str	xzr, [sp, #64]
  40ffd0:	str	xzr, [sp, #72]
  40ffd4:	ldr	x0, [sp, #40]
  40ffd8:	cmp	x0, #0x0
  40ffdc:	cset	w0, eq  // eq = none
  40ffe0:	and	w0, w0, #0xff
  40ffe4:	and	x0, x0, #0xff
  40ffe8:	cmp	x0, #0x0
  40ffec:	b.eq	410018 <manager_unit_is_active+0x80>  // b.none
  40fff0:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  40fff4:	add	x1, x0, #0xdb
  40fff8:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  40fffc:	add	x4, x0, #0x388
  410000:	mov	w3, #0x56b                 	// #1387
  410004:	mov	x2, x1
  410008:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  41000c:	add	x1, x0, #0x238
  410010:	mov	w0, #0x0                   	// #0
  410014:	bl	4052a0 <log_assert_failed_realm@plt>
  410018:	ldr	x0, [sp, #32]
  41001c:	cmp	x0, #0x0
  410020:	cset	w0, eq  // eq = none
  410024:	and	w0, w0, #0xff
  410028:	and	x0, x0, #0xff
  41002c:	cmp	x0, #0x0
  410030:	b.eq	41005c <manager_unit_is_active+0xc4>  // b.none
  410034:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  410038:	add	x1, x0, #0xdb
  41003c:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  410040:	add	x4, x0, #0x388
  410044:	mov	w3, #0x56c                 	// #1388
  410048:	mov	x2, x1
  41004c:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  410050:	add	x1, x0, #0xde0
  410054:	mov	w0, #0x0                   	// #0
  410058:	bl	4052a0 <log_assert_failed_realm@plt>
  41005c:	ldr	x0, [sp, #32]
  410060:	bl	404e80 <unit_dbus_path_from_name@plt>
  410064:	str	x0, [sp, #72]
  410068:	ldr	x0, [sp, #72]
  41006c:	cmp	x0, #0x0
  410070:	b.ne	41007c <manager_unit_is_active+0xe4>  // b.any
  410074:	mov	w19, #0xfffffff4            	// #-12
  410078:	b	4101cc <manager_unit_is_active+0x234>
  41007c:	ldr	x0, [sp, #40]
  410080:	ldr	x8, [x0, #8]
  410084:	ldr	x1, [sp, #72]
  410088:	add	x3, sp, #0x40
  41008c:	add	x2, sp, #0x58
  410090:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  410094:	add	x7, x0, #0x120
  410098:	mov	x6, x3
  41009c:	mov	x5, x2
  4100a0:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  4100a4:	add	x4, x0, #0xed8
  4100a8:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  4100ac:	add	x3, x0, #0xee8
  4100b0:	mov	x2, x1
  4100b4:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  4100b8:	add	x1, x0, #0xe40
  4100bc:	mov	x0, x8
  4100c0:	bl	4052e0 <sd_bus_get_property@plt>
  4100c4:	str	w0, [sp, #60]
  4100c8:	ldr	w0, [sp, #60]
  4100cc:	cmp	w0, #0x0
  4100d0:	b.ge	41015c <manager_unit_is_active+0x1c4>  // b.tcont
  4100d4:	add	x2, sp, #0x58
  4100d8:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  4100dc:	add	x1, x0, #0xf08
  4100e0:	mov	x0, x2
  4100e4:	bl	4058c0 <sd_bus_error_has_name@plt>
  4100e8:	cmp	w0, #0x0
  4100ec:	b.ne	41010c <manager_unit_is_active+0x174>  // b.any
  4100f0:	add	x2, sp, #0x58
  4100f4:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  4100f8:	add	x1, x0, #0xf30
  4100fc:	mov	x0, x2
  410100:	bl	4058c0 <sd_bus_error_has_name@plt>
  410104:	cmp	w0, #0x0
  410108:	b.eq	410114 <manager_unit_is_active+0x17c>  // b.none
  41010c:	mov	w19, #0x1                   	// #1
  410110:	b	4101cc <manager_unit_is_active+0x234>
  410114:	add	x2, sp, #0x58
  410118:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  41011c:	add	x1, x0, #0xe78
  410120:	mov	x0, x2
  410124:	bl	4058c0 <sd_bus_error_has_name@plt>
  410128:	cmp	w0, #0x0
  41012c:	b.ne	41014c <manager_unit_is_active+0x1b4>  // b.any
  410130:	add	x2, sp, #0x58
  410134:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  410138:	add	x1, x0, #0xea0
  41013c:	mov	x0, x2
  410140:	bl	4058c0 <sd_bus_error_has_name@plt>
  410144:	cmp	w0, #0x0
  410148:	b.eq	410154 <manager_unit_is_active+0x1bc>  // b.none
  41014c:	mov	w19, #0x0                   	// #0
  410150:	b	4101cc <manager_unit_is_active+0x234>
  410154:	ldr	w19, [sp, #60]
  410158:	b	4101cc <manager_unit_is_active+0x234>
  41015c:	ldr	x3, [sp, #64]
  410160:	add	x0, sp, #0x50
  410164:	mov	x2, x0
  410168:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  41016c:	add	x1, x0, #0x120
  410170:	mov	x0, x3
  410174:	bl	4052b0 <sd_bus_message_read@plt>
  410178:	str	w0, [sp, #60]
  41017c:	ldr	w0, [sp, #60]
  410180:	cmp	w0, #0x0
  410184:	b.ge	410190 <manager_unit_is_active+0x1f8>  // b.tcont
  410188:	mov	w19, #0xffffffea            	// #-22
  41018c:	b	4101cc <manager_unit_is_active+0x234>
  410190:	adrp	x0, 432000 <_GLOBAL_OFFSET_TABLE_+0xc8>
  410194:	add	x0, x0, #0x0
  410198:	add	x2, sp, #0x70
  41019c:	mov	x3, x0
  4101a0:	ldp	x0, x1, [x3]
  4101a4:	stp	x0, x1, [x2]
  4101a8:	ldr	x0, [x3, #16]
  4101ac:	str	x0, [x2, #16]
  4101b0:	ldr	x1, [sp, #80]
  4101b4:	add	x0, sp, #0x70
  4101b8:	bl	4056e0 <strv_find@plt>
  4101bc:	cmp	x0, #0x0
  4101c0:	cset	w0, eq  // eq = none
  4101c4:	and	w0, w0, #0xff
  4101c8:	mov	w19, w0
  4101cc:	add	x0, sp, #0x48
  4101d0:	bl	40ae74 <freep>
  4101d4:	add	x0, sp, #0x40
  4101d8:	bl	40af14 <sd_bus_message_unrefp>
  4101dc:	add	x0, sp, #0x58
  4101e0:	bl	4056c0 <sd_bus_error_free@plt>
  4101e4:	mov	w1, w19
  4101e8:	adrp	x0, 431000 <machine_vtable+0x4a0>
  4101ec:	ldr	x0, [x0, #3952]
  4101f0:	ldr	x2, [sp, #136]
  4101f4:	ldr	x0, [x0]
  4101f8:	eor	x0, x2, x0
  4101fc:	cmp	x0, #0x0
  410200:	b.eq	410208 <manager_unit_is_active+0x270>  // b.none
  410204:	bl	4055f0 <__stack_chk_fail@plt>
  410208:	mov	w0, w1
  41020c:	ldr	x19, [sp, #16]
  410210:	ldp	x29, x30, [sp], #144
  410214:	ret

0000000000410218 <manager_job_is_active>:
  410218:	stp	x29, x30, [sp, #-96]!
  41021c:	mov	x29, sp
  410220:	str	x19, [sp, #16]
  410224:	str	x0, [sp, #40]
  410228:	str	x1, [sp, #32]
  41022c:	adrp	x0, 431000 <machine_vtable+0x4a0>
  410230:	ldr	x0, [x0, #3952]
  410234:	ldr	x1, [x0]
  410238:	str	x1, [sp, #88]
  41023c:	mov	x1, #0x0                   	// #0
  410240:	str	xzr, [sp, #64]
  410244:	str	xzr, [sp, #72]
  410248:	str	wzr, [sp, #80]
  41024c:	str	xzr, [sp, #56]
  410250:	ldr	x0, [sp, #40]
  410254:	cmp	x0, #0x0
  410258:	cset	w0, eq  // eq = none
  41025c:	and	w0, w0, #0xff
  410260:	and	x0, x0, #0xff
  410264:	cmp	x0, #0x0
  410268:	b.eq	410294 <manager_job_is_active+0x7c>  // b.none
  41026c:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  410270:	add	x1, x0, #0xdb
  410274:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  410278:	add	x4, x0, #0x3a0
  41027c:	mov	w3, #0x593                 	// #1427
  410280:	mov	x2, x1
  410284:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  410288:	add	x1, x0, #0x238
  41028c:	mov	w0, #0x0                   	// #0
  410290:	bl	4052a0 <log_assert_failed_realm@plt>
  410294:	ldr	x0, [sp, #32]
  410298:	cmp	x0, #0x0
  41029c:	cset	w0, eq  // eq = none
  4102a0:	and	w0, w0, #0xff
  4102a4:	and	x0, x0, #0xff
  4102a8:	cmp	x0, #0x0
  4102ac:	b.eq	4102d8 <manager_job_is_active+0xc0>  // b.none
  4102b0:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  4102b4:	add	x1, x0, #0xdb
  4102b8:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  4102bc:	add	x4, x0, #0x3a0
  4102c0:	mov	w3, #0x594                 	// #1428
  4102c4:	mov	x2, x1
  4102c8:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  4102cc:	add	x1, x0, #0xf58
  4102d0:	mov	w0, #0x0                   	// #0
  4102d4:	bl	4052a0 <log_assert_failed_realm@plt>
  4102d8:	ldr	x0, [sp, #40]
  4102dc:	ldr	x8, [x0, #8]
  4102e0:	add	x2, sp, #0x38
  4102e4:	add	x1, sp, #0x40
  4102e8:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  4102ec:	add	x7, x0, #0x120
  4102f0:	mov	x6, x2
  4102f4:	mov	x5, x1
  4102f8:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  4102fc:	add	x4, x0, #0xf60
  410300:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  410304:	add	x3, x0, #0xf68
  410308:	ldr	x2, [sp, #32]
  41030c:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  410310:	add	x1, x0, #0xe40
  410314:	mov	x0, x8
  410318:	bl	4052e0 <sd_bus_get_property@plt>
  41031c:	str	w0, [sp, #52]
  410320:	ldr	w0, [sp, #52]
  410324:	cmp	w0, #0x0
  410328:	b.ge	410398 <manager_job_is_active+0x180>  // b.tcont
  41032c:	add	x2, sp, #0x40
  410330:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  410334:	add	x1, x0, #0xf08
  410338:	mov	x0, x2
  41033c:	bl	4058c0 <sd_bus_error_has_name@plt>
  410340:	cmp	w0, #0x0
  410344:	b.ne	410364 <manager_job_is_active+0x14c>  // b.any
  410348:	add	x2, sp, #0x40
  41034c:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  410350:	add	x1, x0, #0xf30
  410354:	mov	x0, x2
  410358:	bl	4058c0 <sd_bus_error_has_name@plt>
  41035c:	cmp	w0, #0x0
  410360:	b.eq	41036c <manager_job_is_active+0x154>  // b.none
  410364:	mov	w19, #0x1                   	// #1
  410368:	b	41039c <manager_job_is_active+0x184>
  41036c:	add	x2, sp, #0x40
  410370:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  410374:	add	x1, x0, #0xf88
  410378:	mov	x0, x2
  41037c:	bl	4058c0 <sd_bus_error_has_name@plt>
  410380:	cmp	w0, #0x0
  410384:	b.eq	410390 <manager_job_is_active+0x178>  // b.none
  410388:	mov	w19, #0x0                   	// #0
  41038c:	b	41039c <manager_job_is_active+0x184>
  410390:	ldr	w19, [sp, #52]
  410394:	b	41039c <manager_job_is_active+0x184>
  410398:	mov	w19, #0x1                   	// #1
  41039c:	add	x0, sp, #0x38
  4103a0:	bl	40af14 <sd_bus_message_unrefp>
  4103a4:	add	x0, sp, #0x40
  4103a8:	bl	4056c0 <sd_bus_error_free@plt>
  4103ac:	mov	w1, w19
  4103b0:	adrp	x0, 431000 <machine_vtable+0x4a0>
  4103b4:	ldr	x0, [x0, #3952]
  4103b8:	ldr	x2, [sp, #88]
  4103bc:	ldr	x0, [x0]
  4103c0:	eor	x0, x2, x0
  4103c4:	cmp	x0, #0x0
  4103c8:	b.eq	4103d0 <manager_job_is_active+0x1b8>  // b.none
  4103cc:	bl	4055f0 <__stack_chk_fail@plt>
  4103d0:	mov	w0, w1
  4103d4:	ldr	x19, [sp, #16]
  4103d8:	ldp	x29, x30, [sp], #96
  4103dc:	ret

00000000004103e0 <manager_get_machine_by_pid>:
  4103e0:	stp	x29, x30, [sp, #-96]!
  4103e4:	mov	x29, sp
  4103e8:	str	x19, [sp, #16]
  4103ec:	str	x0, [sp, #56]
  4103f0:	str	w1, [sp, #52]
  4103f4:	str	x2, [sp, #40]
  4103f8:	adrp	x0, 431000 <machine_vtable+0x4a0>
  4103fc:	ldr	x0, [x0, #3952]
  410400:	ldr	x1, [x0]
  410404:	str	x1, [sp, #88]
  410408:	mov	x1, #0x0                   	// #0
  41040c:	ldr	x0, [sp, #56]
  410410:	cmp	x0, #0x0
  410414:	cset	w0, eq  // eq = none
  410418:	and	w0, w0, #0xff
  41041c:	and	x0, x0, #0xff
  410420:	cmp	x0, #0x0
  410424:	b.eq	410450 <manager_get_machine_by_pid+0x70>  // b.none
  410428:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  41042c:	add	x1, x0, #0xdb
  410430:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  410434:	add	x4, x0, #0x3b8
  410438:	mov	w3, #0x5b4                 	// #1460
  41043c:	mov	x2, x1
  410440:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  410444:	add	x1, x0, #0x138
  410448:	mov	w0, #0x0                   	// #0
  41044c:	bl	4052a0 <log_assert_failed_realm@plt>
  410450:	ldr	w0, [sp, #52]
  410454:	cmp	w0, #0x0
  410458:	cset	w0, le
  41045c:	and	w0, w0, #0xff
  410460:	and	x0, x0, #0xff
  410464:	cmp	x0, #0x0
  410468:	b.eq	410494 <manager_get_machine_by_pid+0xb4>  // b.none
  41046c:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  410470:	add	x1, x0, #0xdb
  410474:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  410478:	add	x4, x0, #0x3b8
  41047c:	mov	w3, #0x5b5                 	// #1461
  410480:	mov	x2, x1
  410484:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  410488:	add	x1, x0, #0xfb8
  41048c:	mov	w0, #0x0                   	// #0
  410490:	bl	4052a0 <log_assert_failed_realm@plt>
  410494:	ldr	x0, [sp, #40]
  410498:	cmp	x0, #0x0
  41049c:	cset	w0, eq  // eq = none
  4104a0:	and	w0, w0, #0xff
  4104a4:	and	x0, x0, #0xff
  4104a8:	cmp	x0, #0x0
  4104ac:	b.eq	4104d8 <manager_get_machine_by_pid+0xf8>  // b.none
  4104b0:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  4104b4:	add	x1, x0, #0xdb
  4104b8:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  4104bc:	add	x4, x0, #0x3b8
  4104c0:	mov	w3, #0x5b6                 	// #1462
  4104c4:	mov	x2, x1
  4104c8:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  4104cc:	add	x1, x0, #0xfc8
  4104d0:	mov	w0, #0x0                   	// #0
  4104d4:	bl	4052a0 <log_assert_failed_realm@plt>
  4104d8:	ldr	x0, [sp, #56]
  4104dc:	ldr	x19, [x0, #32]
  4104e0:	ldr	w0, [sp, #52]
  4104e4:	bl	40b424 <PID_TO_PTR>
  4104e8:	mov	x1, x0
  4104ec:	mov	x0, x19
  4104f0:	bl	40afa0 <hashmap_get>
  4104f4:	str	x0, [sp, #80]
  4104f8:	ldr	x0, [sp, #80]
  4104fc:	cmp	x0, #0x0
  410500:	b.ne	410544 <manager_get_machine_by_pid+0x164>  // b.any
  410504:	str	xzr, [sp, #72]
  410508:	add	x0, sp, #0x48
  41050c:	mov	x1, x0
  410510:	ldr	w0, [sp, #52]
  410514:	bl	4059a0 <cg_pid_get_unit@plt>
  410518:	str	w0, [sp, #68]
  41051c:	ldr	w0, [sp, #68]
  410520:	cmp	w0, #0x0
  410524:	b.lt	41053c <manager_get_machine_by_pid+0x15c>  // b.tstop
  410528:	ldr	x0, [sp, #56]
  41052c:	ldr	x0, [x0, #24]
  410530:	ldr	x1, [sp, #72]
  410534:	bl	40afa0 <hashmap_get>
  410538:	str	x0, [sp, #80]
  41053c:	add	x0, sp, #0x48
  410540:	bl	40ae74 <freep>
  410544:	ldr	x0, [sp, #80]
  410548:	cmp	x0, #0x0
  41054c:	b.ne	410558 <manager_get_machine_by_pid+0x178>  // b.any
  410550:	mov	w0, #0x0                   	// #0
  410554:	b	410568 <manager_get_machine_by_pid+0x188>
  410558:	ldr	x0, [sp, #40]
  41055c:	ldr	x1, [sp, #80]
  410560:	str	x1, [x0]
  410564:	mov	w0, #0x1                   	// #1
  410568:	mov	w1, w0
  41056c:	adrp	x0, 431000 <machine_vtable+0x4a0>
  410570:	ldr	x0, [x0, #3952]
  410574:	ldr	x2, [sp, #88]
  410578:	ldr	x0, [x0]
  41057c:	eor	x0, x2, x0
  410580:	cmp	x0, #0x0
  410584:	b.eq	41058c <manager_get_machine_by_pid+0x1ac>  // b.none
  410588:	bl	4055f0 <__stack_chk_fail@plt>
  41058c:	mov	w0, w1
  410590:	ldr	x19, [sp, #16]
  410594:	ldp	x29, x30, [sp], #96
  410598:	ret

000000000041059c <manager_add_machine>:
  41059c:	stp	x29, x30, [sp, #-64]!
  4105a0:	mov	x29, sp
  4105a4:	str	x0, [sp, #40]
  4105a8:	str	x1, [sp, #32]
  4105ac:	str	x2, [sp, #24]
  4105b0:	ldr	x0, [sp, #40]
  4105b4:	cmp	x0, #0x0
  4105b8:	cset	w0, eq  // eq = none
  4105bc:	and	w0, w0, #0xff
  4105c0:	and	x0, x0, #0xff
  4105c4:	cmp	x0, #0x0
  4105c8:	b.eq	4105f4 <manager_add_machine+0x58>  // b.none
  4105cc:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  4105d0:	add	x1, x0, #0xdb
  4105d4:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  4105d8:	add	x4, x0, #0x3d8
  4105dc:	mov	w3, #0x5ca                 	// #1482
  4105e0:	mov	x2, x1
  4105e4:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  4105e8:	add	x1, x0, #0x138
  4105ec:	mov	w0, #0x0                   	// #0
  4105f0:	bl	4052a0 <log_assert_failed_realm@plt>
  4105f4:	ldr	x0, [sp, #32]
  4105f8:	cmp	x0, #0x0
  4105fc:	cset	w0, eq  // eq = none
  410600:	and	w0, w0, #0xff
  410604:	and	x0, x0, #0xff
  410608:	cmp	x0, #0x0
  41060c:	b.eq	410638 <manager_add_machine+0x9c>  // b.none
  410610:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  410614:	add	x1, x0, #0xdb
  410618:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  41061c:	add	x4, x0, #0x3d8
  410620:	mov	w3, #0x5cb                 	// #1483
  410624:	mov	x2, x1
  410628:	adrp	x0, 41a000 <__PRETTY_FUNCTION__.12827+0x8>
  41062c:	add	x1, x0, #0xfd0
  410630:	mov	w0, #0x0                   	// #0
  410634:	bl	4052a0 <log_assert_failed_realm@plt>
  410638:	ldr	x0, [sp, #40]
  41063c:	ldr	x0, [x0, #16]
  410640:	ldr	x1, [sp, #32]
  410644:	bl	40afa0 <hashmap_get>
  410648:	str	x0, [sp, #56]
  41064c:	ldr	x0, [sp, #56]
  410650:	cmp	x0, #0x0
  410654:	b.ne	410680 <manager_add_machine+0xe4>  // b.any
  410658:	ldr	x2, [sp, #32]
  41065c:	mov	w1, #0xffffffff            	// #-1
  410660:	ldr	x0, [sp, #40]
  410664:	bl	407f1c <machine_new>
  410668:	str	x0, [sp, #56]
  41066c:	ldr	x0, [sp, #56]
  410670:	cmp	x0, #0x0
  410674:	b.ne	410680 <manager_add_machine+0xe4>  // b.any
  410678:	mov	w0, #0xfffffff4            	// #-12
  41067c:	b	41069c <manager_add_machine+0x100>
  410680:	ldr	x0, [sp, #24]
  410684:	cmp	x0, #0x0
  410688:	b.eq	410698 <manager_add_machine+0xfc>  // b.none
  41068c:	ldr	x0, [sp, #24]
  410690:	ldr	x1, [sp, #56]
  410694:	str	x1, [x0]
  410698:	mov	w0, #0x0                   	// #0
  41069c:	ldp	x29, x30, [sp], #64
  4106a0:	ret

00000000004106a4 <on_nscd_cache_flush_event>:
  4106a4:	stp	x29, x30, [sp, #-80]!
  4106a8:	mov	x29, sp
  4106ac:	str	x0, [sp, #24]
  4106b0:	str	x1, [sp, #16]
  4106b4:	adrp	x0, 431000 <machine_vtable+0x4a0>
  4106b8:	ldr	x0, [x0, #3952]
  4106bc:	ldr	x1, [x0]
  4106c0:	str	x1, [sp, #72]
  4106c4:	mov	x1, #0x0                   	// #0
  4106c8:	add	x0, sp, #0x58
  4106cc:	sub	x0, x0, #0x30
  4106d0:	adrp	x1, 432000 <_GLOBAL_OFFSET_TABLE_+0xc8>
  4106d4:	add	x1, x1, #0x18
  4106d8:	ld1	{v0.16b, v1.16b}, [x1]
  4106dc:	st1	{v0.16b, v1.16b}, [x0]
  4106e0:	add	x0, sp, #0x28
  4106e4:	bl	405830 <nscd_flush_cache@plt>
  4106e8:	mov	w0, #0x0                   	// #0
  4106ec:	mov	w1, w0
  4106f0:	adrp	x0, 431000 <machine_vtable+0x4a0>
  4106f4:	ldr	x0, [x0, #3952]
  4106f8:	ldr	x2, [sp, #72]
  4106fc:	ldr	x0, [x0]
  410700:	eor	x0, x2, x0
  410704:	cmp	x0, #0x0
  410708:	b.eq	410710 <on_nscd_cache_flush_event+0x6c>  // b.none
  41070c:	bl	4055f0 <__stack_chk_fail@plt>
  410710:	mov	w0, w1
  410714:	ldp	x29, x30, [sp], #80
  410718:	ret

000000000041071c <manager_enqueue_nscd_cache_flush>:
  41071c:	stp	x29, x30, [sp, #-64]!
  410720:	mov	x29, sp
  410724:	str	x0, [sp, #24]
  410728:	ldr	x0, [sp, #24]
  41072c:	cmp	x0, #0x0
  410730:	cset	w0, eq  // eq = none
  410734:	and	w0, w0, #0xff
  410738:	and	x0, x0, #0xff
  41073c:	cmp	x0, #0x0
  410740:	b.eq	41076c <manager_enqueue_nscd_cache_flush+0x50>  // b.none
  410744:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  410748:	add	x1, x0, #0x40b
  41074c:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  410750:	add	x4, x0, #0x4a8
  410754:	mov	w3, #0x13                  	// #19
  410758:	mov	x2, x1
  41075c:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  410760:	add	x1, x0, #0x428
  410764:	mov	w0, #0x0                   	// #0
  410768:	bl	4052a0 <log_assert_failed_realm@plt>
  41076c:	ldr	x0, [sp, #24]
  410770:	ldr	x0, [x0, #96]
  410774:	cmp	x0, #0x0
  410778:	b.ne	410850 <manager_enqueue_nscd_cache_flush+0x134>  // b.any
  41077c:	ldr	x0, [sp, #24]
  410780:	ldr	x4, [x0]
  410784:	ldr	x0, [sp, #24]
  410788:	add	x1, x0, #0x60
  41078c:	ldr	x3, [sp, #24]
  410790:	adrp	x0, 410000 <manager_unit_is_active+0x68>
  410794:	add	x2, x0, #0x6a4
  410798:	mov	x0, x4
  41079c:	bl	405500 <sd_event_add_defer@plt>
  4107a0:	str	w0, [sp, #36]
  4107a4:	ldr	w0, [sp, #36]
  4107a8:	cmp	w0, #0x0
  4107ac:	b.ge	410838 <manager_enqueue_nscd_cache_flush+0x11c>  // b.tcont
  4107b0:	mov	w0, #0x3                   	// #3
  4107b4:	str	w0, [sp, #40]
  4107b8:	ldr	w0, [sp, #36]
  4107bc:	str	w0, [sp, #44]
  4107c0:	str	wzr, [sp, #48]
  4107c4:	ldr	w0, [sp, #48]
  4107c8:	bl	405c20 <log_get_max_level_realm@plt>
  4107cc:	mov	w1, w0
  4107d0:	ldr	w0, [sp, #40]
  4107d4:	and	w0, w0, #0x7
  4107d8:	cmp	w1, w0
  4107dc:	b.lt	410820 <manager_enqueue_nscd_cache_flush+0x104>  // b.tstop
  4107e0:	ldr	w0, [sp, #48]
  4107e4:	lsl	w1, w0, #10
  4107e8:	ldr	w0, [sp, #40]
  4107ec:	orr	w6, w1, w0
  4107f0:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  4107f4:	add	x1, x0, #0x40b
  4107f8:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  4107fc:	add	x5, x0, #0x430
  410800:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  410804:	add	x4, x0, #0x4d0
  410808:	mov	w3, #0x18                  	// #24
  41080c:	mov	x2, x1
  410810:	ldr	w1, [sp, #44]
  410814:	mov	w0, w6
  410818:	bl	405750 <log_internal_realm@plt>
  41081c:	b	410914 <manager_enqueue_nscd_cache_flush+0x1f8>
  410820:	ldr	w0, [sp, #44]
  410824:	cmp	w0, #0x0
  410828:	cneg	w0, w0, lt  // lt = tstop
  41082c:	and	w0, w0, #0xff
  410830:	neg	w0, w0
  410834:	b	410914 <manager_enqueue_nscd_cache_flush+0x1f8>
  410838:	ldr	x0, [sp, #24]
  41083c:	ldr	x2, [x0, #96]
  410840:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  410844:	add	x1, x0, #0x460
  410848:	mov	x0, x2
  41084c:	bl	405c00 <sd_event_source_set_description@plt>
  410850:	ldr	x0, [sp, #24]
  410854:	ldr	x0, [x0, #96]
  410858:	mov	w1, #0xffffffff            	// #-1
  41085c:	bl	405310 <sd_event_source_set_enabled@plt>
  410860:	str	w0, [sp, #36]
  410864:	ldr	w0, [sp, #36]
  410868:	cmp	w0, #0x0
  41086c:	b.ge	410910 <manager_enqueue_nscd_cache_flush+0x1f4>  // b.tcont
  410870:	ldr	x0, [sp, #24]
  410874:	ldr	x0, [x0, #96]
  410878:	bl	4051d0 <sd_event_source_unref@plt>
  41087c:	mov	x1, x0
  410880:	ldr	x0, [sp, #24]
  410884:	str	x1, [x0, #96]
  410888:	mov	w0, #0x3                   	// #3
  41088c:	str	w0, [sp, #52]
  410890:	ldr	w0, [sp, #36]
  410894:	str	w0, [sp, #56]
  410898:	str	wzr, [sp, #60]
  41089c:	ldr	w0, [sp, #60]
  4108a0:	bl	405c20 <log_get_max_level_realm@plt>
  4108a4:	mov	w1, w0
  4108a8:	ldr	w0, [sp, #52]
  4108ac:	and	w0, w0, #0x7
  4108b0:	cmp	w1, w0
  4108b4:	b.lt	4108f8 <manager_enqueue_nscd_cache_flush+0x1dc>  // b.tstop
  4108b8:	ldr	w0, [sp, #60]
  4108bc:	lsl	w1, w0, #10
  4108c0:	ldr	w0, [sp, #52]
  4108c4:	orr	w6, w1, w0
  4108c8:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  4108cc:	add	x1, x0, #0x40b
  4108d0:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  4108d4:	add	x5, x0, #0x478
  4108d8:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  4108dc:	add	x4, x0, #0x4d0
  4108e0:	mov	w3, #0x20                  	// #32
  4108e4:	mov	x2, x1
  4108e8:	ldr	w1, [sp, #56]
  4108ec:	mov	w0, w6
  4108f0:	bl	405750 <log_internal_realm@plt>
  4108f4:	b	410914 <manager_enqueue_nscd_cache_flush+0x1f8>
  4108f8:	ldr	w0, [sp, #56]
  4108fc:	cmp	w0, #0x0
  410900:	cneg	w0, w0, lt  // lt = tstop
  410904:	and	w0, w0, #0xff
  410908:	neg	w0, w0
  41090c:	b	410914 <manager_enqueue_nscd_cache_flush+0x1f8>
  410910:	mov	w0, #0x0                   	// #0
  410914:	ldp	x29, x30, [sp], #64
  410918:	ret

000000000041091c <freep>:
  41091c:	stp	x29, x30, [sp, #-32]!
  410920:	mov	x29, sp
  410924:	str	x0, [sp, #24]
  410928:	ldr	x0, [sp, #24]
  41092c:	ldr	x0, [x0]
  410930:	bl	4059e0 <free@plt>
  410934:	nop
  410938:	ldp	x29, x30, [sp], #32
  41093c:	ret

0000000000410940 <size_multiply_overflow>:
  410940:	sub	sp, sp, #0x10
  410944:	str	x0, [sp, #8]
  410948:	str	x1, [sp]
  41094c:	ldr	x0, [sp]
  410950:	cmp	x0, #0x0
  410954:	cset	w0, ne  // ne = any
  410958:	and	w0, w0, #0xff
  41095c:	and	x0, x0, #0xff
  410960:	cmp	x0, #0x0
  410964:	b.eq	4109a8 <size_multiply_overflow+0x68>  // b.none
  410968:	mov	x2, #0x0                   	// #0
  41096c:	ldr	x1, [sp, #8]
  410970:	ldr	x0, [sp]
  410974:	umulh	x0, x1, x0
  410978:	cmp	x0, #0x0
  41097c:	b.eq	410984 <size_multiply_overflow+0x44>  // b.none
  410980:	mov	x2, #0x1                   	// #1
  410984:	mov	x0, x2
  410988:	cmp	x0, #0x0
  41098c:	cset	w0, ne  // ne = any
  410990:	and	w0, w0, #0xff
  410994:	and	x0, x0, #0xff
  410998:	cmp	x0, #0x0
  41099c:	b.eq	4109a8 <size_multiply_overflow+0x68>  // b.none
  4109a0:	mov	w0, #0x1                   	// #1
  4109a4:	b	4109ac <size_multiply_overflow+0x6c>
  4109a8:	mov	w0, #0x0                   	// #0
  4109ac:	and	w0, w0, #0x1
  4109b0:	and	w0, w0, #0xff
  4109b4:	add	sp, sp, #0x10
  4109b8:	ret

00000000004109bc <sd_bus_close_unrefp>:
  4109bc:	stp	x29, x30, [sp, #-32]!
  4109c0:	mov	x29, sp
  4109c4:	str	x0, [sp, #24]
  4109c8:	ldr	x0, [sp, #24]
  4109cc:	ldr	x0, [x0]
  4109d0:	cmp	x0, #0x0
  4109d4:	b.eq	4109e4 <sd_bus_close_unrefp+0x28>  // b.none
  4109d8:	ldr	x0, [sp, #24]
  4109dc:	ldr	x0, [x0]
  4109e0:	bl	405030 <sd_bus_close_unref@plt>
  4109e4:	nop
  4109e8:	ldp	x29, x30, [sp], #32
  4109ec:	ret

00000000004109f0 <sd_bus_flush_close_unrefp>:
  4109f0:	stp	x29, x30, [sp, #-32]!
  4109f4:	mov	x29, sp
  4109f8:	str	x0, [sp, #24]
  4109fc:	ldr	x0, [sp, #24]
  410a00:	ldr	x0, [x0]
  410a04:	cmp	x0, #0x0
  410a08:	b.eq	410a18 <sd_bus_flush_close_unrefp+0x28>  // b.none
  410a0c:	ldr	x0, [sp, #24]
  410a10:	ldr	x0, [x0]
  410a14:	bl	405770 <sd_bus_flush_close_unref@plt>
  410a18:	nop
  410a1c:	ldp	x29, x30, [sp], #32
  410a20:	ret

0000000000410a24 <sd_bus_message_unrefp>:
  410a24:	stp	x29, x30, [sp, #-32]!
  410a28:	mov	x29, sp
  410a2c:	str	x0, [sp, #24]
  410a30:	ldr	x0, [sp, #24]
  410a34:	ldr	x0, [x0]
  410a38:	cmp	x0, #0x0
  410a3c:	b.eq	410a4c <sd_bus_message_unrefp+0x28>  // b.none
  410a40:	ldr	x0, [sp, #24]
  410a44:	ldr	x0, [x0]
  410a48:	bl	404fd0 <sd_bus_message_unref@plt>
  410a4c:	nop
  410a50:	ldp	x29, x30, [sp], #32
  410a54:	ret

0000000000410a58 <sd_bus_creds_unrefp>:
  410a58:	stp	x29, x30, [sp, #-32]!
  410a5c:	mov	x29, sp
  410a60:	str	x0, [sp, #24]
  410a64:	ldr	x0, [sp, #24]
  410a68:	ldr	x0, [x0]
  410a6c:	cmp	x0, #0x0
  410a70:	b.eq	410a80 <sd_bus_creds_unrefp+0x28>  // b.none
  410a74:	ldr	x0, [sp, #24]
  410a78:	ldr	x0, [x0]
  410a7c:	bl	405010 <sd_bus_creds_unref@plt>
  410a80:	nop
  410a84:	ldp	x29, x30, [sp], #32
  410a88:	ret

0000000000410a8c <hashmap_get>:
  410a8c:	stp	x29, x30, [sp, #-32]!
  410a90:	mov	x29, sp
  410a94:	str	x0, [sp, #24]
  410a98:	str	x1, [sp, #16]
  410a9c:	ldr	x1, [sp, #16]
  410aa0:	ldr	x0, [sp, #24]
  410aa4:	bl	405430 <internal_hashmap_get@plt>
  410aa8:	ldp	x29, x30, [sp], #32
  410aac:	ret

0000000000410ab0 <hashmap_iterate>:
  410ab0:	stp	x29, x30, [sp, #-48]!
  410ab4:	mov	x29, sp
  410ab8:	str	x0, [sp, #40]
  410abc:	str	x1, [sp, #32]
  410ac0:	str	x2, [sp, #24]
  410ac4:	str	x3, [sp, #16]
  410ac8:	ldr	x3, [sp, #16]
  410acc:	ldr	x2, [sp, #24]
  410ad0:	ldr	x1, [sp, #32]
  410ad4:	ldr	x0, [sp, #40]
  410ad8:	bl	405880 <internal_hashmap_iterate@plt>
  410adc:	and	w0, w0, #0xff
  410ae0:	ldp	x29, x30, [sp], #48
  410ae4:	ret

0000000000410ae8 <isempty>:
  410ae8:	sub	sp, sp, #0x10
  410aec:	str	x0, [sp, #8]
  410af0:	ldr	x0, [sp, #8]
  410af4:	cmp	x0, #0x0
  410af8:	b.eq	410b0c <isempty+0x24>  // b.none
  410afc:	ldr	x0, [sp, #8]
  410b00:	ldrb	w0, [x0]
  410b04:	cmp	w0, #0x0
  410b08:	b.ne	410b14 <isempty+0x2c>  // b.any
  410b0c:	mov	w0, #0x1                   	// #1
  410b10:	b	410b18 <isempty+0x30>
  410b14:	mov	w0, #0x0                   	// #0
  410b18:	and	w0, w0, #0x1
  410b1c:	and	w0, w0, #0xff
  410b20:	add	sp, sp, #0x10
  410b24:	ret

0000000000410b28 <empty_to_null>:
  410b28:	stp	x29, x30, [sp, #-32]!
  410b2c:	mov	x29, sp
  410b30:	str	x0, [sp, #24]
  410b34:	ldr	x0, [sp, #24]
  410b38:	bl	410ae8 <isempty>
  410b3c:	and	w0, w0, #0xff
  410b40:	cmp	w0, #0x0
  410b44:	b.ne	410b50 <empty_to_null+0x28>  // b.any
  410b48:	ldr	x0, [sp, #24]
  410b4c:	b	410b54 <empty_to_null+0x2c>
  410b50:	mov	x0, #0x0                   	// #0
  410b54:	ldp	x29, x30, [sp], #32
  410b58:	ret

0000000000410b5c <startswith>:
  410b5c:	stp	x29, x30, [sp, #-48]!
  410b60:	mov	x29, sp
  410b64:	str	x0, [sp, #24]
  410b68:	str	x1, [sp, #16]
  410b6c:	ldr	x0, [sp, #16]
  410b70:	bl	405b50 <strlen@plt>
  410b74:	str	x0, [sp, #40]
  410b78:	ldr	x2, [sp, #40]
  410b7c:	ldr	x1, [sp, #16]
  410b80:	ldr	x0, [sp, #24]
  410b84:	bl	405370 <strncmp@plt>
  410b88:	cmp	w0, #0x0
  410b8c:	b.ne	410ba0 <startswith+0x44>  // b.any
  410b90:	ldr	x1, [sp, #24]
  410b94:	ldr	x0, [sp, #40]
  410b98:	add	x0, x1, x0
  410b9c:	b	410ba4 <startswith+0x48>
  410ba0:	mov	x0, #0x0                   	// #0
  410ba4:	ldp	x29, x30, [sp], #48
  410ba8:	ret

0000000000410bac <strlen_ptr>:
  410bac:	stp	x29, x30, [sp, #-32]!
  410bb0:	mov	x29, sp
  410bb4:	str	x0, [sp, #24]
  410bb8:	ldr	x0, [sp, #24]
  410bbc:	cmp	x0, #0x0
  410bc0:	b.ne	410bcc <strlen_ptr+0x20>  // b.any
  410bc4:	mov	x0, #0x0                   	// #0
  410bc8:	b	410bd4 <strlen_ptr+0x28>
  410bcc:	ldr	x0, [sp, #24]
  410bd0:	bl	405b50 <strlen@plt>
  410bd4:	ldp	x29, x30, [sp], #32
  410bd8:	ret

0000000000410bdc <bus_label_unescape>:
  410bdc:	stp	x29, x30, [sp, #-32]!
  410be0:	mov	x29, sp
  410be4:	str	x0, [sp, #24]
  410be8:	ldr	x0, [sp, #24]
  410bec:	bl	410bac <strlen_ptr>
  410bf0:	mov	x1, x0
  410bf4:	ldr	x0, [sp, #24]
  410bf8:	bl	405940 <bus_label_unescape_n@plt>
  410bfc:	ldp	x29, x30, [sp], #32
  410c00:	ret

0000000000410c04 <copy_tree_at>:
  410c04:	sub	sp, sp, #0x50
  410c08:	stp	x29, x30, [sp, #16]
  410c0c:	add	x29, sp, #0x10
  410c10:	str	w0, [sp, #76]
  410c14:	str	x1, [sp, #64]
  410c18:	str	w2, [sp, #72]
  410c1c:	str	x3, [sp, #56]
  410c20:	str	w4, [sp, #52]
  410c24:	str	w5, [sp, #48]
  410c28:	str	w6, [sp, #44]
  410c2c:	str	xzr, [sp, #8]
  410c30:	str	xzr, [sp]
  410c34:	mov	x7, #0x0                   	// #0
  410c38:	ldr	w6, [sp, #44]
  410c3c:	ldr	w5, [sp, #48]
  410c40:	ldr	w4, [sp, #52]
  410c44:	ldr	x3, [sp, #56]
  410c48:	ldr	w2, [sp, #72]
  410c4c:	ldr	x1, [sp, #64]
  410c50:	ldr	w0, [sp, #76]
  410c54:	bl	4055a0 <copy_tree_at_full@plt>
  410c58:	ldp	x29, x30, [sp, #16]
  410c5c:	add	sp, sp, #0x50
  410c60:	ret

0000000000410c64 <copy_bytes>:
  410c64:	stp	x29, x30, [sp, #-48]!
  410c68:	mov	x29, sp
  410c6c:	str	w0, [sp, #44]
  410c70:	str	w1, [sp, #40]
  410c74:	str	x2, [sp, #32]
  410c78:	str	w3, [sp, #28]
  410c7c:	mov	x7, #0x0                   	// #0
  410c80:	mov	x6, #0x0                   	// #0
  410c84:	mov	x5, #0x0                   	// #0
  410c88:	mov	x4, #0x0                   	// #0
  410c8c:	ldr	w3, [sp, #28]
  410c90:	ldr	x2, [sp, #32]
  410c94:	ldr	w1, [sp, #40]
  410c98:	ldr	w0, [sp, #44]
  410c9c:	bl	405a00 <copy_bytes_full@plt>
  410ca0:	ldp	x29, x30, [sp], #48
  410ca4:	ret

0000000000410ca8 <closep>:
  410ca8:	stp	x29, x30, [sp, #-32]!
  410cac:	mov	x29, sp
  410cb0:	str	x0, [sp, #24]
  410cb4:	ldr	x0, [sp, #24]
  410cb8:	ldr	w0, [x0]
  410cbc:	bl	405240 <safe_close@plt>
  410cc0:	nop
  410cc4:	ldp	x29, x30, [sp], #32
  410cc8:	ret

0000000000410ccc <close_pairp>:
  410ccc:	stp	x29, x30, [sp, #-32]!
  410cd0:	mov	x29, sp
  410cd4:	str	x0, [sp, #24]
  410cd8:	ldr	x0, [sp, #24]
  410cdc:	bl	405270 <safe_close_pair@plt>
  410ce0:	nop
  410ce4:	ldp	x29, x30, [sp], #32
  410ce8:	ret

0000000000410cec <fclosep>:
  410cec:	stp	x29, x30, [sp, #-32]!
  410cf0:	mov	x29, sp
  410cf4:	str	x0, [sp, #24]
  410cf8:	ldr	x0, [sp, #24]
  410cfc:	ldr	x0, [x0]
  410d00:	bl	404e20 <safe_fclose@plt>
  410d04:	nop
  410d08:	ldp	x29, x30, [sp], #32
  410d0c:	ret

0000000000410d10 <FAMILY_ADDRESS_SIZE>:
  410d10:	stp	x29, x30, [sp, #-48]!
  410d14:	mov	x29, sp
  410d18:	str	w0, [sp, #28]
  410d1c:	strb	wzr, [sp, #47]
  410d20:	ldr	w0, [sp, #28]
  410d24:	cmp	w0, #0x2
  410d28:	b.eq	410d38 <FAMILY_ADDRESS_SIZE+0x28>  // b.none
  410d2c:	ldr	w0, [sp, #28]
  410d30:	cmp	w0, #0xa
  410d34:	b.ne	410d40 <FAMILY_ADDRESS_SIZE+0x30>  // b.any
  410d38:	mov	w0, #0x1                   	// #1
  410d3c:	strb	w0, [sp, #47]
  410d40:	nop
  410d44:	ldrb	w0, [sp, #47]
  410d48:	eor	w0, w0, #0x1
  410d4c:	and	w0, w0, #0xff
  410d50:	and	x0, x0, #0xff
  410d54:	cmp	x0, #0x0
  410d58:	b.eq	410d84 <FAMILY_ADDRESS_SIZE+0x74>  // b.none
  410d5c:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  410d60:	add	x1, x0, #0x4fb
  410d64:	adrp	x0, 41c000 <__func__.8711+0xb30>
  410d68:	add	x4, x0, #0x778
  410d6c:	mov	w3, #0x43                  	// #67
  410d70:	mov	x2, x1
  410d74:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  410d78:	add	x1, x0, #0x518
  410d7c:	mov	w0, #0x0                   	// #0
  410d80:	bl	4052a0 <log_assert_failed_realm@plt>
  410d84:	ldr	w0, [sp, #28]
  410d88:	cmp	w0, #0xa
  410d8c:	b.ne	410d98 <FAMILY_ADDRESS_SIZE+0x88>  // b.any
  410d90:	mov	x0, #0x10                  	// #16
  410d94:	b	410d9c <FAMILY_ADDRESS_SIZE+0x8c>
  410d98:	mov	x0, #0x4                   	// #4
  410d9c:	ldp	x29, x30, [sp], #48
  410da0:	ret

0000000000410da4 <strv_freep>:
  410da4:	stp	x29, x30, [sp, #-32]!
  410da8:	mov	x29, sp
  410dac:	str	x0, [sp, #24]
  410db0:	ldr	x0, [sp, #24]
  410db4:	ldr	x0, [x0]
  410db8:	cmp	x0, #0x0
  410dbc:	b.eq	410dcc <strv_freep+0x28>  // b.none
  410dc0:	ldr	x0, [sp, #24]
  410dc4:	ldr	x0, [x0]
  410dc8:	bl	4054e0 <strv_free@plt>
  410dcc:	nop
  410dd0:	ldp	x29, x30, [sp], #32
  410dd4:	ret

0000000000410dd8 <strv_isempty>:
  410dd8:	sub	sp, sp, #0x10
  410ddc:	str	x0, [sp, #8]
  410de0:	ldr	x0, [sp, #8]
  410de4:	cmp	x0, #0x0
  410de8:	b.eq	410dfc <strv_isempty+0x24>  // b.none
  410dec:	ldr	x0, [sp, #8]
  410df0:	ldr	x0, [x0]
  410df4:	cmp	x0, #0x0
  410df8:	b.ne	410e04 <strv_isempty+0x2c>  // b.any
  410dfc:	mov	w0, #0x1                   	// #1
  410e00:	b	410e08 <strv_isempty+0x30>
  410e04:	mov	w0, #0x0                   	// #0
  410e08:	and	w0, w0, #0x1
  410e0c:	and	w0, w0, #0xff
  410e10:	add	sp, sp, #0x10
  410e14:	ret

0000000000410e18 <safe_fork>:
  410e18:	stp	x29, x30, [sp, #-48]!
  410e1c:	mov	x29, sp
  410e20:	str	x0, [sp, #40]
  410e24:	str	w1, [sp, #36]
  410e28:	str	x2, [sp, #24]
  410e2c:	ldr	x4, [sp, #24]
  410e30:	ldr	w3, [sp, #36]
  410e34:	mov	x2, #0x0                   	// #0
  410e38:	mov	x1, #0x0                   	// #0
  410e3c:	ldr	x0, [sp, #40]
  410e40:	bl	4058e0 <safe_fork_full@plt>
  410e44:	ldp	x29, x30, [sp], #48
  410e48:	ret

0000000000410e4c <SIGNAL_VALID>:
  410e4c:	sub	sp, sp, #0x10
  410e50:	str	w0, [sp, #12]
  410e54:	ldr	w0, [sp, #12]
  410e58:	cmp	w0, #0x0
  410e5c:	b.le	410e74 <SIGNAL_VALID+0x28>
  410e60:	ldr	w0, [sp, #12]
  410e64:	cmp	w0, #0x40
  410e68:	b.gt	410e74 <SIGNAL_VALID+0x28>
  410e6c:	mov	w0, #0x1                   	// #1
  410e70:	b	410e78 <SIGNAL_VALID+0x2c>
  410e74:	mov	w0, #0x0                   	// #0
  410e78:	and	w0, w0, #0x1
  410e7c:	and	w0, w0, #0xff
  410e80:	add	sp, sp, #0x10
  410e84:	ret

0000000000410e88 <property_get_class>:
  410e88:	stp	x29, x30, [sp, #-96]!
  410e8c:	mov	x29, sp
  410e90:	str	x0, [sp, #72]
  410e94:	str	x1, [sp, #64]
  410e98:	str	x2, [sp, #56]
  410e9c:	str	x3, [sp, #48]
  410ea0:	str	x4, [sp, #40]
  410ea4:	str	x5, [sp, #32]
  410ea8:	str	x6, [sp, #24]
  410eac:	ldr	x0, [sp, #32]
  410eb0:	str	x0, [sp, #88]
  410eb4:	ldr	x0, [sp, #72]
  410eb8:	cmp	x0, #0x0
  410ebc:	cset	w0, eq  // eq = none
  410ec0:	and	w0, w0, #0xff
  410ec4:	and	x0, x0, #0xff
  410ec8:	cmp	x0, #0x0
  410ecc:	b.eq	410ef8 <property_get_class+0x70>  // b.none
  410ed0:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  410ed4:	add	x1, x0, #0x543
  410ed8:	adrp	x0, 41c000 <__func__.8711+0xb30>
  410edc:	add	x4, x0, #0x6b0
  410ee0:	mov	w3, #0x29                  	// #41
  410ee4:	mov	x2, x1
  410ee8:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  410eec:	add	x1, x0, #0x560
  410ef0:	mov	w0, #0x0                   	// #0
  410ef4:	bl	4052a0 <log_assert_failed_realm@plt>
  410ef8:	ldr	x0, [sp, #40]
  410efc:	cmp	x0, #0x0
  410f00:	cset	w0, eq  // eq = none
  410f04:	and	w0, w0, #0xff
  410f08:	and	x0, x0, #0xff
  410f0c:	cmp	x0, #0x0
  410f10:	b.eq	410f3c <property_get_class+0xb4>  // b.none
  410f14:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  410f18:	add	x1, x0, #0x543
  410f1c:	adrp	x0, 41c000 <__func__.8711+0xb30>
  410f20:	add	x4, x0, #0x6b0
  410f24:	mov	w3, #0x29                  	// #41
  410f28:	mov	x2, x1
  410f2c:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  410f30:	add	x1, x0, #0x568
  410f34:	mov	w0, #0x0                   	// #0
  410f38:	bl	4052a0 <log_assert_failed_realm@plt>
  410f3c:	ldr	x0, [sp, #88]
  410f40:	cmp	x0, #0x0
  410f44:	cset	w0, eq  // eq = none
  410f48:	and	w0, w0, #0xff
  410f4c:	and	x0, x0, #0xff
  410f50:	cmp	x0, #0x0
  410f54:	b.eq	410f80 <property_get_class+0xf8>  // b.none
  410f58:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  410f5c:	add	x1, x0, #0x543
  410f60:	adrp	x0, 41c000 <__func__.8711+0xb30>
  410f64:	add	x4, x0, #0x6b0
  410f68:	mov	w3, #0x29                  	// #41
  410f6c:	mov	x2, x1
  410f70:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  410f74:	add	x1, x0, #0x570
  410f78:	mov	w0, #0x0                   	// #0
  410f7c:	bl	4052a0 <log_assert_failed_realm@plt>
  410f80:	ldr	x0, [sp, #88]
  410f84:	ldr	w0, [x0]
  410f88:	bl	40ad84 <machine_class_to_string>
  410f8c:	mov	x2, x0
  410f90:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  410f94:	add	x1, x0, #0x578
  410f98:	ldr	x0, [sp, #40]
  410f9c:	bl	4051f0 <sd_bus_message_append@plt>
  410fa0:	ldp	x29, x30, [sp], #96
  410fa4:	ret

0000000000410fa8 <property_get_state>:
  410fa8:	stp	x29, x30, [sp, #-96]!
  410fac:	mov	x29, sp
  410fb0:	str	x0, [sp, #72]
  410fb4:	str	x1, [sp, #64]
  410fb8:	str	x2, [sp, #56]
  410fbc:	str	x3, [sp, #48]
  410fc0:	str	x4, [sp, #40]
  410fc4:	str	x5, [sp, #32]
  410fc8:	str	x6, [sp, #24]
  410fcc:	ldr	x0, [sp, #32]
  410fd0:	str	x0, [sp, #88]
  410fd4:	ldr	x0, [sp, #72]
  410fd8:	cmp	x0, #0x0
  410fdc:	cset	w0, eq  // eq = none
  410fe0:	and	w0, w0, #0xff
  410fe4:	and	x0, x0, #0xff
  410fe8:	cmp	x0, #0x0
  410fec:	b.eq	411018 <property_get_state+0x70>  // b.none
  410ff0:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  410ff4:	add	x1, x0, #0x543
  410ff8:	adrp	x0, 41c000 <__func__.8711+0xb30>
  410ffc:	add	x4, x0, #0x6c8
  411000:	mov	w3, #0x2a                  	// #42
  411004:	mov	x2, x1
  411008:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  41100c:	add	x1, x0, #0x560
  411010:	mov	w0, #0x0                   	// #0
  411014:	bl	4052a0 <log_assert_failed_realm@plt>
  411018:	ldr	x0, [sp, #40]
  41101c:	cmp	x0, #0x0
  411020:	cset	w0, eq  // eq = none
  411024:	and	w0, w0, #0xff
  411028:	and	x0, x0, #0xff
  41102c:	cmp	x0, #0x0
  411030:	b.eq	41105c <property_get_state+0xb4>  // b.none
  411034:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  411038:	add	x1, x0, #0x543
  41103c:	adrp	x0, 41c000 <__func__.8711+0xb30>
  411040:	add	x4, x0, #0x6c8
  411044:	mov	w3, #0x2a                  	// #42
  411048:	mov	x2, x1
  41104c:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  411050:	add	x1, x0, #0x568
  411054:	mov	w0, #0x0                   	// #0
  411058:	bl	4052a0 <log_assert_failed_realm@plt>
  41105c:	ldr	x0, [sp, #88]
  411060:	cmp	x0, #0x0
  411064:	cset	w0, eq  // eq = none
  411068:	and	w0, w0, #0xff
  41106c:	and	x0, x0, #0xff
  411070:	cmp	x0, #0x0
  411074:	b.eq	4110a0 <property_get_state+0xf8>  // b.none
  411078:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  41107c:	add	x1, x0, #0x543
  411080:	adrp	x0, 41c000 <__func__.8711+0xb30>
  411084:	add	x4, x0, #0x6c8
  411088:	mov	w3, #0x2a                  	// #42
  41108c:	mov	x2, x1
  411090:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  411094:	add	x1, x0, #0x570
  411098:	mov	w0, #0x0                   	// #0
  41109c:	bl	4052a0 <log_assert_failed_realm@plt>
  4110a0:	ldr	x0, [sp, #88]
  4110a4:	bl	40a424 <machine_get_state>
  4110a8:	bl	40adec <machine_state_to_string>
  4110ac:	mov	x2, x0
  4110b0:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  4110b4:	add	x1, x0, #0x578
  4110b8:	ldr	x0, [sp, #40]
  4110bc:	bl	4051f0 <sd_bus_message_append@plt>
  4110c0:	ldp	x29, x30, [sp], #96
  4110c4:	ret

00000000004110c8 <property_get_netif>:
  4110c8:	stp	x29, x30, [sp, #-96]!
  4110cc:	mov	x29, sp
  4110d0:	str	x0, [sp, #72]
  4110d4:	str	x1, [sp, #64]
  4110d8:	str	x2, [sp, #56]
  4110dc:	str	x3, [sp, #48]
  4110e0:	str	x4, [sp, #40]
  4110e4:	str	x5, [sp, #32]
  4110e8:	str	x6, [sp, #24]
  4110ec:	ldr	x0, [sp, #32]
  4110f0:	str	x0, [sp, #88]
  4110f4:	ldr	x0, [sp, #72]
  4110f8:	cmp	x0, #0x0
  4110fc:	cset	w0, eq  // eq = none
  411100:	and	w0, w0, #0xff
  411104:	and	x0, x0, #0xff
  411108:	cmp	x0, #0x0
  41110c:	b.eq	411138 <property_get_netif+0x70>  // b.none
  411110:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  411114:	add	x1, x0, #0x543
  411118:	adrp	x0, 41c000 <__func__.8711+0xb30>
  41111c:	add	x4, x0, #0x6e0
  411120:	mov	w3, #0x37                  	// #55
  411124:	mov	x2, x1
  411128:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  41112c:	add	x1, x0, #0x560
  411130:	mov	w0, #0x0                   	// #0
  411134:	bl	4052a0 <log_assert_failed_realm@plt>
  411138:	ldr	x0, [sp, #40]
  41113c:	cmp	x0, #0x0
  411140:	cset	w0, eq  // eq = none
  411144:	and	w0, w0, #0xff
  411148:	and	x0, x0, #0xff
  41114c:	cmp	x0, #0x0
  411150:	b.eq	41117c <property_get_netif+0xb4>  // b.none
  411154:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  411158:	add	x1, x0, #0x543
  41115c:	adrp	x0, 41c000 <__func__.8711+0xb30>
  411160:	add	x4, x0, #0x6e0
  411164:	mov	w3, #0x38                  	// #56
  411168:	mov	x2, x1
  41116c:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  411170:	add	x1, x0, #0x568
  411174:	mov	w0, #0x0                   	// #0
  411178:	bl	4052a0 <log_assert_failed_realm@plt>
  41117c:	ldr	x0, [sp, #88]
  411180:	cmp	x0, #0x0
  411184:	cset	w0, eq  // eq = none
  411188:	and	w0, w0, #0xff
  41118c:	and	x0, x0, #0xff
  411190:	cmp	x0, #0x0
  411194:	b.eq	4111c0 <property_get_netif+0xf8>  // b.none
  411198:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  41119c:	add	x1, x0, #0x543
  4111a0:	adrp	x0, 41c000 <__func__.8711+0xb30>
  4111a4:	add	x4, x0, #0x6e0
  4111a8:	mov	w3, #0x39                  	// #57
  4111ac:	mov	x2, x1
  4111b0:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  4111b4:	add	x1, x0, #0x580
  4111b8:	mov	w0, #0x0                   	// #0
  4111bc:	bl	4052a0 <log_assert_failed_realm@plt>
  4111c0:	ldr	x0, [sp, #88]
  4111c4:	ldr	x1, [x0, #120]
  4111c8:	ldr	x0, [sp, #88]
  4111cc:	ldr	x0, [x0, #128]
  4111d0:	lsl	x0, x0, #2
  4111d4:	mov	x3, x0
  4111d8:	mov	x2, x1
  4111dc:	mov	w1, #0x69                  	// #105
  4111e0:	ldr	x0, [sp, #40]
  4111e4:	bl	405150 <sd_bus_message_append_array@plt>
  4111e8:	ldp	x29, x30, [sp], #96
  4111ec:	ret

00000000004111f0 <bus_machine_method_unregister>:
  4111f0:	stp	x29, x30, [sp, #-64]!
  4111f4:	mov	x29, sp
  4111f8:	str	x0, [sp, #40]
  4111fc:	str	x1, [sp, #32]
  411200:	str	x2, [sp, #24]
  411204:	ldr	x0, [sp, #32]
  411208:	str	x0, [sp, #56]
  41120c:	ldr	x0, [sp, #40]
  411210:	cmp	x0, #0x0
  411214:	cset	w0, eq  // eq = none
  411218:	and	w0, w0, #0xff
  41121c:	and	x0, x0, #0xff
  411220:	cmp	x0, #0x0
  411224:	b.eq	411250 <bus_machine_method_unregister+0x60>  // b.none
  411228:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  41122c:	add	x1, x0, #0x543
  411230:	adrp	x0, 41c000 <__func__.8711+0xb30>
  411234:	add	x4, x0, #0x6f8
  411238:	mov	w3, #0x44                  	// #68
  41123c:	mov	x2, x1
  411240:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  411244:	add	x1, x0, #0x588
  411248:	mov	w0, #0x0                   	// #0
  41124c:	bl	4052a0 <log_assert_failed_realm@plt>
  411250:	ldr	x0, [sp, #56]
  411254:	cmp	x0, #0x0
  411258:	cset	w0, eq  // eq = none
  41125c:	and	w0, w0, #0xff
  411260:	and	x0, x0, #0xff
  411264:	cmp	x0, #0x0
  411268:	b.eq	411294 <bus_machine_method_unregister+0xa4>  // b.none
  41126c:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  411270:	add	x1, x0, #0x543
  411274:	adrp	x0, 41c000 <__func__.8711+0xb30>
  411278:	add	x4, x0, #0x6f8
  41127c:	mov	w3, #0x45                  	// #69
  411280:	mov	x2, x1
  411284:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  411288:	add	x1, x0, #0x580
  41128c:	mov	w0, #0x0                   	// #0
  411290:	bl	4052a0 <log_assert_failed_realm@plt>
  411294:	ldr	x0, [sp, #56]
  411298:	ldr	x0, [x0]
  41129c:	add	x0, x0, #0x28
  4112a0:	ldr	x7, [sp, #24]
  4112a4:	mov	x6, x0
  4112a8:	mov	w5, #0xffffffff            	// #-1
  4112ac:	mov	w4, #0x0                   	// #0
  4112b0:	mov	x3, #0x0                   	// #0
  4112b4:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  4112b8:	add	x2, x0, #0x590
  4112bc:	mov	w1, #0x5                   	// #5
  4112c0:	ldr	x0, [sp, #40]
  4112c4:	bl	405bb0 <bus_verify_polkit_async@plt>
  4112c8:	str	w0, [sp, #52]
  4112cc:	ldr	w0, [sp, #52]
  4112d0:	cmp	w0, #0x0
  4112d4:	b.ge	4112e0 <bus_machine_method_unregister+0xf0>  // b.tcont
  4112d8:	ldr	w0, [sp, #52]
  4112dc:	b	411320 <bus_machine_method_unregister+0x130>
  4112e0:	ldr	w0, [sp, #52]
  4112e4:	cmp	w0, #0x0
  4112e8:	b.ne	4112f4 <bus_machine_method_unregister+0x104>  // b.any
  4112ec:	mov	w0, #0x1                   	// #1
  4112f0:	b	411320 <bus_machine_method_unregister+0x130>
  4112f4:	ldr	x0, [sp, #56]
  4112f8:	bl	40a098 <machine_finalize>
  4112fc:	str	w0, [sp, #52]
  411300:	ldr	w0, [sp, #52]
  411304:	cmp	w0, #0x0
  411308:	b.ge	411314 <bus_machine_method_unregister+0x124>  // b.tcont
  41130c:	ldr	w0, [sp, #52]
  411310:	b	411320 <bus_machine_method_unregister+0x130>
  411314:	mov	x1, #0x0                   	// #0
  411318:	ldr	x0, [sp, #40]
  41131c:	bl	404f00 <sd_bus_reply_method_return@plt>
  411320:	ldp	x29, x30, [sp], #64
  411324:	ret

0000000000411328 <bus_machine_method_terminate>:
  411328:	stp	x29, x30, [sp, #-64]!
  41132c:	mov	x29, sp
  411330:	str	x0, [sp, #40]
  411334:	str	x1, [sp, #32]
  411338:	str	x2, [sp, #24]
  41133c:	ldr	x0, [sp, #32]
  411340:	str	x0, [sp, #56]
  411344:	ldr	x0, [sp, #40]
  411348:	cmp	x0, #0x0
  41134c:	cset	w0, eq  // eq = none
  411350:	and	w0, w0, #0xff
  411354:	and	x0, x0, #0xff
  411358:	cmp	x0, #0x0
  41135c:	b.eq	411388 <bus_machine_method_terminate+0x60>  // b.none
  411360:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  411364:	add	x1, x0, #0x543
  411368:	adrp	x0, 41c000 <__func__.8711+0xb30>
  41136c:	add	x4, x0, #0x718
  411370:	mov	w3, #0x60                  	// #96
  411374:	mov	x2, x1
  411378:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  41137c:	add	x1, x0, #0x588
  411380:	mov	w0, #0x0                   	// #0
  411384:	bl	4052a0 <log_assert_failed_realm@plt>
  411388:	ldr	x0, [sp, #56]
  41138c:	cmp	x0, #0x0
  411390:	cset	w0, eq  // eq = none
  411394:	and	w0, w0, #0xff
  411398:	and	x0, x0, #0xff
  41139c:	cmp	x0, #0x0
  4113a0:	b.eq	4113cc <bus_machine_method_terminate+0xa4>  // b.none
  4113a4:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  4113a8:	add	x1, x0, #0x543
  4113ac:	adrp	x0, 41c000 <__func__.8711+0xb30>
  4113b0:	add	x4, x0, #0x718
  4113b4:	mov	w3, #0x61                  	// #97
  4113b8:	mov	x2, x1
  4113bc:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  4113c0:	add	x1, x0, #0x580
  4113c4:	mov	w0, #0x0                   	// #0
  4113c8:	bl	4052a0 <log_assert_failed_realm@plt>
  4113cc:	ldr	x0, [sp, #56]
  4113d0:	ldr	x0, [x0]
  4113d4:	add	x0, x0, #0x28
  4113d8:	ldr	x7, [sp, #24]
  4113dc:	mov	x6, x0
  4113e0:	mov	w5, #0xffffffff            	// #-1
  4113e4:	mov	w4, #0x0                   	// #0
  4113e8:	mov	x3, #0x0                   	// #0
  4113ec:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  4113f0:	add	x2, x0, #0x590
  4113f4:	mov	w1, #0x5                   	// #5
  4113f8:	ldr	x0, [sp, #40]
  4113fc:	bl	405bb0 <bus_verify_polkit_async@plt>
  411400:	str	w0, [sp, #52]
  411404:	ldr	w0, [sp, #52]
  411408:	cmp	w0, #0x0
  41140c:	b.ge	411418 <bus_machine_method_terminate+0xf0>  // b.tcont
  411410:	ldr	w0, [sp, #52]
  411414:	b	411458 <bus_machine_method_terminate+0x130>
  411418:	ldr	w0, [sp, #52]
  41141c:	cmp	w0, #0x0
  411420:	b.ne	41142c <bus_machine_method_terminate+0x104>  // b.any
  411424:	mov	w0, #0x1                   	// #1
  411428:	b	411458 <bus_machine_method_terminate+0x130>
  41142c:	ldr	x0, [sp, #56]
  411430:	bl	409e6c <machine_stop>
  411434:	str	w0, [sp, #52]
  411438:	ldr	w0, [sp, #52]
  41143c:	cmp	w0, #0x0
  411440:	b.ge	41144c <bus_machine_method_terminate+0x124>  // b.tcont
  411444:	ldr	w0, [sp, #52]
  411448:	b	411458 <bus_machine_method_terminate+0x130>
  41144c:	mov	x1, #0x0                   	// #0
  411450:	ldr	x0, [sp, #40]
  411454:	bl	404f00 <sd_bus_reply_method_return@plt>
  411458:	ldp	x29, x30, [sp], #64
  41145c:	ret

0000000000411460 <bus_machine_method_kill>:
  411460:	stp	x29, x30, [sp, #-96]!
  411464:	mov	x29, sp
  411468:	str	x0, [sp, #40]
  41146c:	str	x1, [sp, #32]
  411470:	str	x2, [sp, #24]
  411474:	adrp	x0, 431000 <machine_vtable+0x4a0>
  411478:	ldr	x0, [x0, #3952]
  41147c:	ldr	x1, [x0]
  411480:	str	x1, [sp, #88]
  411484:	mov	x1, #0x0                   	// #0
  411488:	ldr	x0, [sp, #32]
  41148c:	str	x0, [sp, #80]
  411490:	ldr	x0, [sp, #40]
  411494:	cmp	x0, #0x0
  411498:	cset	w0, eq  // eq = none
  41149c:	and	w0, w0, #0xff
  4114a0:	and	x0, x0, #0xff
  4114a4:	cmp	x0, #0x0
  4114a8:	b.eq	4114d4 <bus_machine_method_kill+0x74>  // b.none
  4114ac:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  4114b0:	add	x1, x0, #0x543
  4114b4:	adrp	x0, 41c000 <__func__.8711+0xb30>
  4114b8:	add	x4, x0, #0x738
  4114bc:	mov	w3, #0x7f                  	// #127
  4114c0:	mov	x2, x1
  4114c4:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  4114c8:	add	x1, x0, #0x588
  4114cc:	mov	w0, #0x0                   	// #0
  4114d0:	bl	4052a0 <log_assert_failed_realm@plt>
  4114d4:	ldr	x0, [sp, #80]
  4114d8:	cmp	x0, #0x0
  4114dc:	cset	w0, eq  // eq = none
  4114e0:	and	w0, w0, #0xff
  4114e4:	and	x0, x0, #0xff
  4114e8:	cmp	x0, #0x0
  4114ec:	b.eq	411518 <bus_machine_method_kill+0xb8>  // b.none
  4114f0:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  4114f4:	add	x1, x0, #0x543
  4114f8:	adrp	x0, 41c000 <__func__.8711+0xb30>
  4114fc:	add	x4, x0, #0x738
  411500:	mov	w3, #0x80                  	// #128
  411504:	mov	x2, x1
  411508:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  41150c:	add	x1, x0, #0x580
  411510:	mov	w0, #0x0                   	// #0
  411514:	bl	4052a0 <log_assert_failed_realm@plt>
  411518:	add	x1, sp, #0x3c
  41151c:	add	x0, sp, #0x48
  411520:	mov	x3, x1
  411524:	mov	x2, x0
  411528:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  41152c:	add	x1, x0, #0x5c0
  411530:	ldr	x0, [sp, #40]
  411534:	bl	4052b0 <sd_bus_message_read@plt>
  411538:	str	w0, [sp, #68]
  41153c:	ldr	w0, [sp, #68]
  411540:	cmp	w0, #0x0
  411544:	b.ge	411550 <bus_machine_method_kill+0xf0>  // b.tcont
  411548:	ldr	w0, [sp, #68]
  41154c:	b	411684 <bus_machine_method_kill+0x224>
  411550:	ldr	x0, [sp, #72]
  411554:	bl	410ae8 <isempty>
  411558:	and	w0, w0, #0xff
  41155c:	cmp	w0, #0x0
  411560:	b.eq	411570 <bus_machine_method_kill+0x110>  // b.none
  411564:	mov	w0, #0x1                   	// #1
  411568:	str	w0, [sp, #64]
  41156c:	b	4115ac <bus_machine_method_kill+0x14c>
  411570:	ldr	x0, [sp, #72]
  411574:	bl	40ae2c <kill_who_from_string>
  411578:	str	w0, [sp, #64]
  41157c:	ldr	w0, [sp, #64]
  411580:	cmp	w0, #0x0
  411584:	b.ge	4115ac <bus_machine_method_kill+0x14c>  // b.tcont
  411588:	ldr	x0, [sp, #72]
  41158c:	mov	x3, x0
  411590:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  411594:	add	x2, x0, #0x5c8
  411598:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  41159c:	add	x1, x0, #0x5e8
  4115a0:	ldr	x0, [sp, #24]
  4115a4:	bl	4055d0 <sd_bus_error_setf@plt>
  4115a8:	b	411684 <bus_machine_method_kill+0x224>
  4115ac:	ldr	w0, [sp, #60]
  4115b0:	bl	410e4c <SIGNAL_VALID>
  4115b4:	and	w0, w0, #0xff
  4115b8:	eor	w0, w0, #0x1
  4115bc:	and	w0, w0, #0xff
  4115c0:	cmp	w0, #0x0
  4115c4:	b.eq	4115ec <bus_machine_method_kill+0x18c>  // b.none
  4115c8:	ldr	w0, [sp, #60]
  4115cc:	mov	w3, w0
  4115d0:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  4115d4:	add	x2, x0, #0x610
  4115d8:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  4115dc:	add	x1, x0, #0x5e8
  4115e0:	ldr	x0, [sp, #24]
  4115e4:	bl	4055d0 <sd_bus_error_setf@plt>
  4115e8:	b	411684 <bus_machine_method_kill+0x224>
  4115ec:	ldr	x0, [sp, #80]
  4115f0:	ldr	x0, [x0]
  4115f4:	add	x0, x0, #0x28
  4115f8:	ldr	x7, [sp, #24]
  4115fc:	mov	x6, x0
  411600:	mov	w5, #0xffffffff            	// #-1
  411604:	mov	w4, #0x0                   	// #0
  411608:	mov	x3, #0x0                   	// #0
  41160c:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  411610:	add	x2, x0, #0x590
  411614:	mov	w1, #0x5                   	// #5
  411618:	ldr	x0, [sp, #40]
  41161c:	bl	405bb0 <bus_verify_polkit_async@plt>
  411620:	str	w0, [sp, #68]
  411624:	ldr	w0, [sp, #68]
  411628:	cmp	w0, #0x0
  41162c:	b.ge	411638 <bus_machine_method_kill+0x1d8>  // b.tcont
  411630:	ldr	w0, [sp, #68]
  411634:	b	411684 <bus_machine_method_kill+0x224>
  411638:	ldr	w0, [sp, #68]
  41163c:	cmp	w0, #0x0
  411640:	b.ne	41164c <bus_machine_method_kill+0x1ec>  // b.any
  411644:	mov	w0, #0x1                   	// #1
  411648:	b	411684 <bus_machine_method_kill+0x224>
  41164c:	ldr	w0, [sp, #60]
  411650:	mov	w2, w0
  411654:	ldr	w1, [sp, #64]
  411658:	ldr	x0, [sp, #80]
  41165c:	bl	40a4d0 <machine_kill>
  411660:	str	w0, [sp, #68]
  411664:	ldr	w0, [sp, #68]
  411668:	cmp	w0, #0x0
  41166c:	b.ge	411678 <bus_machine_method_kill+0x218>  // b.tcont
  411670:	ldr	w0, [sp, #68]
  411674:	b	411684 <bus_machine_method_kill+0x224>
  411678:	mov	x1, #0x0                   	// #0
  41167c:	ldr	x0, [sp, #40]
  411680:	bl	404f00 <sd_bus_reply_method_return@plt>
  411684:	mov	w1, w0
  411688:	adrp	x0, 431000 <machine_vtable+0x4a0>
  41168c:	ldr	x0, [x0, #3952]
  411690:	ldr	x2, [sp, #88]
  411694:	ldr	x0, [x0]
  411698:	eor	x0, x2, x0
  41169c:	cmp	x0, #0x0
  4116a0:	b.eq	4116a8 <bus_machine_method_kill+0x248>  // b.none
  4116a4:	bl	4055f0 <__stack_chk_fail@plt>
  4116a8:	mov	w0, w1
  4116ac:	ldp	x29, x30, [sp], #96
  4116b0:	ret

00000000004116b4 <bus_machine_method_get_addresses>:
  4116b4:	stp	x29, x30, [sp, #-320]!
  4116b8:	mov	x29, sp
  4116bc:	stp	x19, x20, [sp, #16]
  4116c0:	str	x21, [sp, #32]
  4116c4:	sub	sp, sp, #0x20
  4116c8:	str	x0, [x29, #72]
  4116cc:	str	x1, [x29, #64]
  4116d0:	str	x2, [x29, #56]
  4116d4:	adrp	x0, 431000 <machine_vtable+0x4a0>
  4116d8:	ldr	x0, [x0, #3952]
  4116dc:	ldr	x1, [x0]
  4116e0:	str	x1, [x29, #312]
  4116e4:	mov	x1, #0x0                   	// #0
  4116e8:	str	xzr, [x29, #120]
  4116ec:	ldr	x0, [x29, #64]
  4116f0:	str	x0, [x29, #168]
  4116f4:	ldr	x0, [x29, #72]
  4116f8:	cmp	x0, #0x0
  4116fc:	cset	w0, eq  // eq = none
  411700:	and	w0, w0, #0xff
  411704:	and	x0, x0, #0xff
  411708:	cmp	x0, #0x0
  41170c:	b.eq	411738 <bus_machine_method_get_addresses+0x84>  // b.none
  411710:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  411714:	add	x1, x0, #0x543
  411718:	adrp	x0, 41c000 <__func__.8711+0xb30>
  41171c:	add	x4, x0, #0x750
  411720:	mov	w3, #0xab                  	// #171
  411724:	mov	x2, x1
  411728:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  41172c:	add	x1, x0, #0x588
  411730:	mov	w0, #0x0                   	// #0
  411734:	bl	4052a0 <log_assert_failed_realm@plt>
  411738:	ldr	x0, [x29, #168]
  41173c:	cmp	x0, #0x0
  411740:	cset	w0, eq  // eq = none
  411744:	and	w0, w0, #0xff
  411748:	and	x0, x0, #0xff
  41174c:	cmp	x0, #0x0
  411750:	b.eq	41177c <bus_machine_method_get_addresses+0xc8>  // b.none
  411754:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  411758:	add	x1, x0, #0x543
  41175c:	adrp	x0, 41c000 <__func__.8711+0xb30>
  411760:	add	x4, x0, #0x750
  411764:	mov	w3, #0xac                  	// #172
  411768:	mov	x2, x1
  41176c:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  411770:	add	x1, x0, #0x580
  411774:	mov	w0, #0x0                   	// #0
  411778:	bl	4052a0 <log_assert_failed_realm@plt>
  41177c:	add	x0, x29, #0x78
  411780:	mov	x1, x0
  411784:	ldr	x0, [x29, #72]
  411788:	bl	4050d0 <sd_bus_message_new_method_return@plt>
  41178c:	str	w0, [x29, #96]
  411790:	ldr	w0, [x29, #96]
  411794:	cmp	w0, #0x0
  411798:	b.ge	4117a4 <bus_machine_method_get_addresses+0xf0>  // b.tcont
  41179c:	ldr	w19, [x29, #96]
  4117a0:	b	411ff4 <bus_machine_method_get_addresses+0x940>
  4117a4:	ldr	x3, [x29, #120]
  4117a8:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  4117ac:	add	x2, x0, #0x628
  4117b0:	mov	w1, #0x61                  	// #97
  4117b4:	mov	x0, x3
  4117b8:	bl	405140 <sd_bus_message_open_container@plt>
  4117bc:	str	w0, [x29, #96]
  4117c0:	ldr	w0, [x29, #96]
  4117c4:	cmp	w0, #0x0
  4117c8:	b.ge	4117d4 <bus_machine_method_get_addresses+0x120>  // b.tcont
  4117cc:	ldr	w19, [x29, #96]
  4117d0:	b	411ff4 <bus_machine_method_get_addresses+0x940>
  4117d4:	ldr	x0, [x29, #168]
  4117d8:	ldr	w0, [x0, #32]
  4117dc:	cmp	w0, #0x0
  4117e0:	b.eq	411978 <bus_machine_method_get_addresses+0x2c4>  // b.none
  4117e4:	cmp	w0, #0x2
  4117e8:	b.ne	411f9c <bus_machine_method_get_addresses+0x8e8>  // b.any
  4117ec:	str	xzr, [x29, #200]
  4117f0:	add	x0, x29, #0xc8
  4117f4:	mov	x3, x0
  4117f8:	mov	w2, #0x0                   	// #0
  4117fc:	mov	w1, #0x0                   	// #0
  411800:	mov	x0, #0x0                   	// #0
  411804:	bl	404f10 <local_addresses@plt>
  411808:	str	w0, [x29, #108]
  41180c:	ldr	w0, [x29, #108]
  411810:	cmp	w0, #0x0
  411814:	b.ge	411824 <bus_machine_method_get_addresses+0x170>  // b.tcont
  411818:	ldr	w19, [x29, #108]
  41181c:	mov	w20, #0x0                   	// #0
  411820:	b	411964 <bus_machine_method_get_addresses+0x2b0>
  411824:	ldr	x0, [x29, #200]
  411828:	str	x0, [x29, #144]
  41182c:	str	wzr, [x29, #100]
  411830:	b	41194c <bus_machine_method_get_addresses+0x298>
  411834:	ldr	x3, [x29, #120]
  411838:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  41183c:	add	x2, x0, #0x630
  411840:	mov	w1, #0x72                  	// #114
  411844:	mov	x0, x3
  411848:	bl	405140 <sd_bus_message_open_container@plt>
  41184c:	str	w0, [x29, #96]
  411850:	ldr	w0, [x29, #96]
  411854:	cmp	w0, #0x0
  411858:	b.ge	411868 <bus_machine_method_get_addresses+0x1b4>  // b.tcont
  41185c:	ldr	w19, [x29, #96]
  411860:	mov	w20, #0x0                   	// #0
  411864:	b	411964 <bus_machine_method_get_addresses+0x2b0>
  411868:	ldr	x3, [x29, #120]
  41186c:	ldr	x1, [x29, #200]
  411870:	ldrsw	x0, [x29, #100]
  411874:	lsl	x0, x0, #5
  411878:	add	x0, x1, x0
  41187c:	ldr	w0, [x0]
  411880:	mov	w2, w0
  411884:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  411888:	add	x1, x0, #0x638
  41188c:	mov	x0, x3
  411890:	bl	4051f0 <sd_bus_message_append@plt>
  411894:	str	w0, [x29, #96]
  411898:	ldr	w0, [x29, #96]
  41189c:	cmp	w0, #0x0
  4118a0:	b.ge	4118b0 <bus_machine_method_get_addresses+0x1fc>  // b.tcont
  4118a4:	ldr	w19, [x29, #96]
  4118a8:	mov	w20, #0x0                   	// #0
  4118ac:	b	411964 <bus_machine_method_get_addresses+0x2b0>
  4118b0:	ldr	x20, [x29, #120]
  4118b4:	ldr	x1, [x29, #200]
  4118b8:	ldrsw	x0, [x29, #100]
  4118bc:	lsl	x0, x0, #5
  4118c0:	add	x0, x1, x0
  4118c4:	add	x21, x0, #0x10
  4118c8:	ldr	x1, [x29, #200]
  4118cc:	ldrsw	x0, [x29, #100]
  4118d0:	lsl	x0, x0, #5
  4118d4:	add	x0, x1, x0
  4118d8:	ldr	w0, [x0]
  4118dc:	bl	410d10 <FAMILY_ADDRESS_SIZE>
  4118e0:	mov	x3, x0
  4118e4:	mov	x2, x21
  4118e8:	mov	w1, #0x79                  	// #121
  4118ec:	mov	x0, x20
  4118f0:	bl	405150 <sd_bus_message_append_array@plt>
  4118f4:	str	w0, [x29, #96]
  4118f8:	ldr	w0, [x29, #96]
  4118fc:	cmp	w0, #0x0
  411900:	b.ge	411910 <bus_machine_method_get_addresses+0x25c>  // b.tcont
  411904:	ldr	w19, [x29, #96]
  411908:	mov	w20, #0x0                   	// #0
  41190c:	b	411964 <bus_machine_method_get_addresses+0x2b0>
  411910:	ldr	x0, [x29, #120]
  411914:	bl	405c30 <sd_bus_message_close_container@plt>
  411918:	str	w0, [x29, #96]
  41191c:	ldr	w0, [x29, #96]
  411920:	cmp	w0, #0x0
  411924:	b.ge	411934 <bus_machine_method_get_addresses+0x280>  // b.tcont
  411928:	ldr	w19, [x29, #96]
  41192c:	mov	w20, #0x0                   	// #0
  411930:	b	411964 <bus_machine_method_get_addresses+0x2b0>
  411934:	ldr	x0, [x29, #144]
  411938:	add	x0, x0, #0x20
  41193c:	str	x0, [x29, #144]
  411940:	ldr	w0, [x29, #100]
  411944:	add	w0, w0, #0x1
  411948:	str	w0, [x29, #100]
  41194c:	ldr	w1, [x29, #100]
  411950:	ldr	w0, [x29, #108]
  411954:	cmp	w1, w0
  411958:	b.lt	411834 <bus_machine_method_get_addresses+0x180>  // b.tstop
  41195c:	mov	w20, #0x1                   	// #1
  411960:	nop
  411964:	add	x0, x29, #0xc8
  411968:	bl	41091c <freep>
  41196c:	cmp	w20, #0x0
  411970:	b.ne	411fbc <bus_machine_method_get_addresses+0x908>  // b.any
  411974:	b	411ff4 <bus_machine_method_get_addresses+0x940>
  411978:	mov	w0, #0xffffffff            	// #-1
  41197c:	str	w0, [x29, #256]
  411980:	mov	w0, #0xffffffff            	// #-1
  411984:	str	w0, [x29, #260]
  411988:	str	xzr, [x29, #128]
  41198c:	str	xzr, [x29, #136]
  411990:	mov	w0, #0xffffffff            	// #-1
  411994:	str	w0, [x29, #84]
  411998:	add	x0, x29, #0x80
  41199c:	mov	x1, x0
  4119a0:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  4119a4:	add	x0, x0, #0x640
  4119a8:	bl	405a50 <readlink_malloc@plt>
  4119ac:	str	w0, [x29, #96]
  4119b0:	ldr	w0, [x29, #96]
  4119b4:	cmp	w0, #0x0
  4119b8:	b.ge	4119c8 <bus_machine_method_get_addresses+0x314>  // b.tcont
  4119bc:	ldr	w19, [x29, #96]
  4119c0:	mov	w20, #0x0                   	// #0
  4119c4:	b	411f34 <bus_machine_method_get_addresses+0x880>
  4119c8:	ldr	x0, [x29, #168]
  4119cc:	ldr	w0, [x0, #80]
  4119d0:	str	w0, [x29, #112]
  4119d4:	ldr	w0, [x29, #112]
  4119d8:	cmp	w0, #0x0
  4119dc:	b.ne	4119f0 <bus_machine_method_get_addresses+0x33c>  // b.any
  4119e0:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  4119e4:	add	x0, x0, #0x640
  4119e8:	str	x0, [x29, #152]
  4119ec:	b	411abc <bus_machine_method_get_addresses+0x408>
  4119f0:	mov	x0, #0x1a                  	// #26
  4119f4:	str	x0, [x29, #176]
  4119f8:	ldr	x1, [x29, #176]
  4119fc:	mov	x0, #0x1                   	// #1
  411a00:	bl	410940 <size_multiply_overflow>
  411a04:	and	w0, w0, #0xff
  411a08:	and	x0, x0, #0xff
  411a0c:	cmp	x0, #0x0
  411a10:	b.eq	411a3c <bus_machine_method_get_addresses+0x388>  // b.none
  411a14:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  411a18:	add	x1, x0, #0x543
  411a1c:	adrp	x0, 41c000 <__func__.8711+0xb30>
  411a20:	add	x4, x0, #0x750
  411a24:	mov	w3, #0xe2                  	// #226
  411a28:	mov	x2, x1
  411a2c:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  411a30:	add	x1, x0, #0x658
  411a34:	mov	w0, #0x0                   	// #0
  411a38:	bl	4052a0 <log_assert_failed_realm@plt>
  411a3c:	ldr	x0, [x29, #176]
  411a40:	cmp	x0, #0x400, lsl #12
  411a44:	cset	w0, hi  // hi = pmore
  411a48:	and	w0, w0, #0xff
  411a4c:	and	x0, x0, #0xff
  411a50:	cmp	x0, #0x0
  411a54:	b.eq	411a80 <bus_machine_method_get_addresses+0x3cc>  // b.none
  411a58:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  411a5c:	add	x1, x0, #0x543
  411a60:	adrp	x0, 41c000 <__func__.8711+0xb30>
  411a64:	add	x4, x0, #0x750
  411a68:	mov	w3, #0xe2                  	// #226
  411a6c:	mov	x2, x1
  411a70:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  411a74:	add	x1, x0, #0x688
  411a78:	mov	w0, #0x0                   	// #0
  411a7c:	bl	4052a0 <log_assert_failed_realm@plt>
  411a80:	ldr	x0, [x29, #176]
  411a84:	add	x0, x0, #0xf
  411a88:	lsr	x0, x0, #4
  411a8c:	lsl	x0, x0, #4
  411a90:	sub	sp, sp, x0
  411a94:	add	x0, sp, #0x20
  411a98:	add	x0, x0, #0xf
  411a9c:	lsr	x0, x0, #4
  411aa0:	lsl	x0, x0, #4
  411aa4:	str	x0, [x29, #152]
  411aa8:	ldr	w2, [x29, #112]
  411aac:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  411ab0:	add	x1, x0, #0x6a8
  411ab4:	ldr	x0, [x29, #152]
  411ab8:	bl	405a30 <sprintf@plt>
  411abc:	ldr	x0, [x29, #152]
  411ac0:	str	x0, [x29, #184]
  411ac4:	add	x0, x29, #0x88
  411ac8:	mov	x1, x0
  411acc:	ldr	x0, [x29, #184]
  411ad0:	bl	405a50 <readlink_malloc@plt>
  411ad4:	str	w0, [x29, #96]
  411ad8:	ldr	w0, [x29, #96]
  411adc:	cmp	w0, #0x0
  411ae0:	b.ge	411af0 <bus_machine_method_get_addresses+0x43c>  // b.tcont
  411ae4:	ldr	w19, [x29, #96]
  411ae8:	mov	w20, #0x0                   	// #0
  411aec:	b	411f34 <bus_machine_method_get_addresses+0x880>
  411af0:	ldr	x0, [x29, #128]
  411af4:	ldr	x1, [x29, #136]
  411af8:	bl	405840 <strcmp@plt>
  411afc:	cmp	w0, #0x0
  411b00:	b.ne	411b34 <bus_machine_method_get_addresses+0x480>  // b.any
  411b04:	ldr	x0, [x29, #168]
  411b08:	ldr	x0, [x0, #8]
  411b0c:	mov	x3, x0
  411b10:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  411b14:	add	x2, x0, #0x6b8
  411b18:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  411b1c:	add	x1, x0, #0x6e8
  411b20:	ldr	x0, [x29, #56]
  411b24:	bl	4055d0 <sd_bus_error_setf@plt>
  411b28:	mov	w19, w0
  411b2c:	mov	w20, #0x0                   	// #0
  411b30:	b	411f34 <bus_machine_method_get_addresses+0x880>
  411b34:	ldr	x0, [x29, #168]
  411b38:	ldr	w0, [x0, #80]
  411b3c:	add	x1, x29, #0x54
  411b40:	mov	x5, #0x0                   	// #0
  411b44:	mov	x4, #0x0                   	// #0
  411b48:	mov	x3, x1
  411b4c:	mov	x2, #0x0                   	// #0
  411b50:	mov	x1, #0x0                   	// #0
  411b54:	bl	405130 <namespace_open@plt>
  411b58:	str	w0, [x29, #96]
  411b5c:	ldr	w0, [x29, #96]
  411b60:	cmp	w0, #0x0
  411b64:	b.ge	411b74 <bus_machine_method_get_addresses+0x4c0>  // b.tcont
  411b68:	ldr	w19, [x29, #96]
  411b6c:	mov	w20, #0x0                   	// #0
  411b70:	b	411f34 <bus_machine_method_get_addresses+0x880>
  411b74:	add	x0, x29, #0x100
  411b78:	mov	x3, x0
  411b7c:	mov	w2, #0x0                   	// #0
  411b80:	mov	w1, #0x5                   	// #5
  411b84:	mov	w0, #0x1                   	// #1
  411b88:	bl	405640 <socketpair@plt>
  411b8c:	cmp	w0, #0x0
  411b90:	b.ge	411ba8 <bus_machine_method_get_addresses+0x4f4>  // b.tcont
  411b94:	bl	4054d0 <__errno_location@plt>
  411b98:	ldr	w0, [x0]
  411b9c:	neg	w19, w0
  411ba0:	mov	w20, #0x0                   	// #0
  411ba4:	b	411f34 <bus_machine_method_get_addresses+0x880>
  411ba8:	ldr	w1, [x29, #84]
  411bac:	add	x0, x29, #0x58
  411bb0:	str	x0, [sp, #16]
  411bb4:	mov	w0, #0xffffffff            	// #-1
  411bb8:	str	w0, [sp, #8]
  411bbc:	mov	w0, #0xffffffff            	// #-1
  411bc0:	str	w0, [sp]
  411bc4:	mov	w7, w1
  411bc8:	mov	w6, #0xffffffff            	// #-1
  411bcc:	mov	w5, #0xffffffff            	// #-1
  411bd0:	mov	w4, #0x5                   	// #5
  411bd4:	mov	x3, #0x0                   	// #0
  411bd8:	mov	x2, #0x0                   	// #0
  411bdc:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  411be0:	add	x1, x0, #0x718
  411be4:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  411be8:	add	x0, x0, #0x728
  411bec:	bl	4053c0 <namespace_fork@plt>
  411bf0:	str	w0, [x29, #96]
  411bf4:	ldr	w0, [x29, #96]
  411bf8:	cmp	w0, #0x0
  411bfc:	b.ge	411c20 <bus_machine_method_get_addresses+0x56c>  // b.tcont
  411c00:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  411c04:	add	x2, x0, #0x738
  411c08:	ldr	w1, [x29, #96]
  411c0c:	ldr	x0, [x29, #56]
  411c10:	bl	405070 <sd_bus_error_set_errnof@plt>
  411c14:	mov	w19, w0
  411c18:	mov	w20, #0x0                   	// #0
  411c1c:	b	411f34 <bus_machine_method_get_addresses+0x880>
  411c20:	ldr	w0, [x29, #96]
  411c24:	cmp	w0, #0x0
  411c28:	b.ne	411d0c <bus_machine_method_get_addresses+0x658>  // b.any
  411c2c:	str	xzr, [x29, #200]
  411c30:	ldr	w0, [x29, #256]
  411c34:	bl	405240 <safe_close@plt>
  411c38:	str	w0, [x29, #256]
  411c3c:	add	x0, x29, #0xc8
  411c40:	mov	x3, x0
  411c44:	mov	w2, #0x0                   	// #0
  411c48:	mov	w1, #0x0                   	// #0
  411c4c:	mov	x0, #0x0                   	// #0
  411c50:	bl	404f10 <local_addresses@plt>
  411c54:	str	w0, [x29, #116]
  411c58:	ldr	w0, [x29, #116]
  411c5c:	cmp	w0, #0x0
  411c60:	b.ge	411c6c <bus_machine_method_get_addresses+0x5b8>  // b.tcont
  411c64:	mov	w0, #0x1                   	// #1
  411c68:	bl	405300 <_exit@plt>
  411c6c:	ldr	x0, [x29, #200]
  411c70:	str	x0, [x29, #160]
  411c74:	str	wzr, [x29, #104]
  411c78:	b	411ce8 <bus_machine_method_get_addresses+0x634>
  411c7c:	ldr	x0, [x29, #160]
  411c80:	str	x0, [x29, #280]
  411c84:	mov	x0, #0x4                   	// #4
  411c88:	str	x0, [x29, #288]
  411c8c:	ldr	x0, [x29, #160]
  411c90:	add	x0, x0, #0x10
  411c94:	str	x0, [x29, #296]
  411c98:	ldr	x0, [x29, #160]
  411c9c:	ldr	w0, [x0]
  411ca0:	bl	410d10 <FAMILY_ADDRESS_SIZE>
  411ca4:	str	x0, [x29, #304]
  411ca8:	ldr	w0, [x29, #260]
  411cac:	add	x1, x29, #0x118
  411cb0:	mov	w2, #0x2                   	// #2
  411cb4:	bl	4054b0 <writev@plt>
  411cb8:	str	w0, [x29, #96]
  411cbc:	ldr	w0, [x29, #96]
  411cc0:	cmp	w0, #0x0
  411cc4:	b.ge	411cd0 <bus_machine_method_get_addresses+0x61c>  // b.tcont
  411cc8:	mov	w0, #0x1                   	// #1
  411ccc:	bl	405300 <_exit@plt>
  411cd0:	ldr	x0, [x29, #160]
  411cd4:	add	x0, x0, #0x20
  411cd8:	str	x0, [x29, #160]
  411cdc:	ldr	w0, [x29, #104]
  411ce0:	add	w0, w0, #0x1
  411ce4:	str	w0, [x29, #104]
  411ce8:	ldr	w1, [x29, #104]
  411cec:	ldr	w0, [x29, #116]
  411cf0:	cmp	w1, w0
  411cf4:	b.lt	411c7c <bus_machine_method_get_addresses+0x5c8>  // b.tstop
  411cf8:	ldr	w0, [x29, #260]
  411cfc:	bl	405240 <safe_close@plt>
  411d00:	str	w0, [x29, #260]
  411d04:	mov	w0, #0x0                   	// #0
  411d08:	bl	405300 <_exit@plt>
  411d0c:	ldr	w0, [x29, #260]
  411d10:	bl	405240 <safe_close@plt>
  411d14:	str	w0, [x29, #260]
  411d18:	stp	xzr, xzr, [x29, #200]
  411d1c:	stp	xzr, xzr, [x29, #216]
  411d20:	stp	xzr, xzr, [x29, #232]
  411d24:	str	xzr, [x29, #248]
  411d28:	add	x0, x29, #0x118
  411d2c:	str	x0, [x29, #216]
  411d30:	mov	x0, #0x2                   	// #2
  411d34:	str	x0, [x29, #224]
  411d38:	add	x0, x29, #0x5c
  411d3c:	str	x0, [x29, #280]
  411d40:	mov	x0, #0x4                   	// #4
  411d44:	str	x0, [x29, #288]
  411d48:	add	x0, x29, #0x108
  411d4c:	str	x0, [x29, #296]
  411d50:	mov	x0, #0x10                  	// #16
  411d54:	str	x0, [x29, #304]
  411d58:	ldr	w0, [x29, #256]
  411d5c:	add	x1, x29, #0xc8
  411d60:	mov	w2, #0x0                   	// #0
  411d64:	bl	405850 <recvmsg@plt>
  411d68:	str	x0, [x29, #192]
  411d6c:	ldr	x0, [x29, #192]
  411d70:	cmp	x0, #0x0
  411d74:	b.ge	411d88 <bus_machine_method_get_addresses+0x6d4>  // b.tcont
  411d78:	bl	4054d0 <__errno_location@plt>
  411d7c:	ldr	w0, [x0]
  411d80:	neg	w19, w0
  411d84:	b	411ed4 <bus_machine_method_get_addresses+0x820>
  411d88:	ldr	x0, [x29, #192]
  411d8c:	cmp	x0, #0x3
  411d90:	b.hi	411dc0 <bus_machine_method_get_addresses+0x70c>  // b.pmore
  411d94:	ldr	w0, [x29, #88]
  411d98:	mov	w2, #0x0                   	// #0
  411d9c:	mov	w1, w0
  411da0:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  411da4:	add	x0, x0, #0x728
  411da8:	bl	4054f0 <wait_for_terminate_and_check@plt>
  411dac:	str	w0, [x29, #96]
  411db0:	ldr	w0, [x29, #96]
  411db4:	cmp	w0, #0x0
  411db8:	b.lt	411edc <bus_machine_method_get_addresses+0x828>  // b.tstop
  411dbc:	b	411efc <bus_machine_method_get_addresses+0x848>
  411dc0:	ldr	x3, [x29, #120]
  411dc4:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  411dc8:	add	x2, x0, #0x630
  411dcc:	mov	w1, #0x72                  	// #114
  411dd0:	mov	x0, x3
  411dd4:	bl	405140 <sd_bus_message_open_container@plt>
  411dd8:	str	w0, [x29, #96]
  411ddc:	ldr	w0, [x29, #96]
  411de0:	cmp	w0, #0x0
  411de4:	b.ge	411df0 <bus_machine_method_get_addresses+0x73c>  // b.tcont
  411de8:	ldr	w19, [x29, #96]
  411dec:	b	411ed4 <bus_machine_method_get_addresses+0x820>
  411df0:	ldr	x3, [x29, #120]
  411df4:	ldr	w0, [x29, #92]
  411df8:	mov	w2, w0
  411dfc:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  411e00:	add	x1, x0, #0x638
  411e04:	mov	x0, x3
  411e08:	bl	4051f0 <sd_bus_message_append@plt>
  411e0c:	str	w0, [x29, #96]
  411e10:	ldr	w0, [x29, #96]
  411e14:	cmp	w0, #0x0
  411e18:	b.ge	411e24 <bus_machine_method_get_addresses+0x770>  // b.tcont
  411e1c:	ldr	w19, [x29, #96]
  411e20:	b	411ed4 <bus_machine_method_get_addresses+0x820>
  411e24:	ldr	w0, [x29, #92]
  411e28:	cmp	w0, #0x2
  411e2c:	b.eq	411e3c <bus_machine_method_get_addresses+0x788>  // b.none
  411e30:	cmp	w0, #0xa
  411e34:	b.eq	411e70 <bus_machine_method_get_addresses+0x7bc>  // b.none
  411e38:	b	411ea4 <bus_machine_method_get_addresses+0x7f0>
  411e3c:	ldr	x0, [x29, #192]
  411e40:	cmp	x0, #0x8
  411e44:	b.eq	411e50 <bus_machine_method_get_addresses+0x79c>  // b.none
  411e48:	mov	w19, #0xfffffffb            	// #-5
  411e4c:	b	411ed4 <bus_machine_method_get_addresses+0x820>
  411e50:	ldr	x0, [x29, #120]
  411e54:	add	x1, x29, #0x108
  411e58:	mov	x3, #0x4                   	// #4
  411e5c:	mov	x2, x1
  411e60:	mov	w1, #0x79                  	// #121
  411e64:	bl	405150 <sd_bus_message_append_array@plt>
  411e68:	str	w0, [x29, #96]
  411e6c:	b	411ea4 <bus_machine_method_get_addresses+0x7f0>
  411e70:	ldr	x0, [x29, #192]
  411e74:	cmp	x0, #0x14
  411e78:	b.eq	411e84 <bus_machine_method_get_addresses+0x7d0>  // b.none
  411e7c:	mov	w19, #0xfffffffb            	// #-5
  411e80:	b	411ed4 <bus_machine_method_get_addresses+0x820>
  411e84:	ldr	x0, [x29, #120]
  411e88:	add	x1, x29, #0x108
  411e8c:	mov	x3, #0x10                  	// #16
  411e90:	mov	x2, x1
  411e94:	mov	w1, #0x79                  	// #121
  411e98:	bl	405150 <sd_bus_message_append_array@plt>
  411e9c:	str	w0, [x29, #96]
  411ea0:	nop
  411ea4:	ldr	w0, [x29, #96]
  411ea8:	cmp	w0, #0x0
  411eac:	b.ge	411eb8 <bus_machine_method_get_addresses+0x804>  // b.tcont
  411eb0:	ldr	w19, [x29, #96]
  411eb4:	b	411ed4 <bus_machine_method_get_addresses+0x820>
  411eb8:	ldr	x0, [x29, #120]
  411ebc:	bl	405c30 <sd_bus_message_close_container@plt>
  411ec0:	str	w0, [x29, #96]
  411ec4:	ldr	w0, [x29, #96]
  411ec8:	cmp	w0, #0x0
  411ecc:	b.ge	411d18 <bus_machine_method_get_addresses+0x664>  // b.tcont
  411ed0:	ldr	w19, [x29, #96]
  411ed4:	mov	w20, #0x0                   	// #0
  411ed8:	b	411f34 <bus_machine_method_get_addresses+0x880>
  411edc:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  411ee0:	add	x2, x0, #0x750
  411ee4:	ldr	w1, [x29, #96]
  411ee8:	ldr	x0, [x29, #56]
  411eec:	bl	405070 <sd_bus_error_set_errnof@plt>
  411ef0:	mov	w19, w0
  411ef4:	mov	w20, #0x0                   	// #0
  411ef8:	b	411f34 <bus_machine_method_get_addresses+0x880>
  411efc:	ldr	w0, [x29, #96]
  411f00:	cmp	w0, #0x0
  411f04:	b.eq	411f2c <bus_machine_method_get_addresses+0x878>  // b.none
  411f08:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  411f0c:	add	x2, x0, #0x770
  411f10:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  411f14:	add	x1, x0, #0x788
  411f18:	ldr	x0, [x29, #56]
  411f1c:	bl	4055d0 <sd_bus_error_setf@plt>
  411f20:	mov	w19, w0
  411f24:	mov	w20, #0x0                   	// #0
  411f28:	b	411f34 <bus_machine_method_get_addresses+0x880>
  411f2c:	mov	w20, #0x1                   	// #1
  411f30:	nop
  411f34:	add	x0, x29, #0x54
  411f38:	bl	410ca8 <closep>
  411f3c:	cmp	w20, #0x0
  411f40:	b.ne	411f4c <bus_machine_method_get_addresses+0x898>  // b.any
  411f44:	mov	w20, #0x0                   	// #0
  411f48:	b	411f50 <bus_machine_method_get_addresses+0x89c>
  411f4c:	mov	w20, #0x1                   	// #1
  411f50:	add	x0, x29, #0x88
  411f54:	bl	41091c <freep>
  411f58:	cmp	w20, #0x0
  411f5c:	b.ne	411f68 <bus_machine_method_get_addresses+0x8b4>  // b.any
  411f60:	mov	w20, #0x0                   	// #0
  411f64:	b	411f6c <bus_machine_method_get_addresses+0x8b8>
  411f68:	mov	w20, #0x1                   	// #1
  411f6c:	add	x0, x29, #0x80
  411f70:	bl	41091c <freep>
  411f74:	cmp	w20, #0x0
  411f78:	b.ne	411f84 <bus_machine_method_get_addresses+0x8d0>  // b.any
  411f7c:	mov	w20, #0x0                   	// #0
  411f80:	b	411f88 <bus_machine_method_get_addresses+0x8d4>
  411f84:	mov	w20, #0x1                   	// #1
  411f88:	add	x0, x29, #0x100
  411f8c:	bl	410ccc <close_pairp>
  411f90:	cmp	w20, #0x0
  411f94:	b.ne	411fbc <bus_machine_method_get_addresses+0x908>  // b.any
  411f98:	b	411ff4 <bus_machine_method_get_addresses+0x940>
  411f9c:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  411fa0:	add	x2, x0, #0x7b0
  411fa4:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  411fa8:	add	x1, x0, #0x7f8
  411fac:	ldr	x0, [x29, #56]
  411fb0:	bl	4055d0 <sd_bus_error_setf@plt>
  411fb4:	mov	w19, w0
  411fb8:	b	411ff4 <bus_machine_method_get_addresses+0x940>
  411fbc:	ldr	x0, [x29, #120]
  411fc0:	bl	405c30 <sd_bus_message_close_container@plt>
  411fc4:	str	w0, [x29, #96]
  411fc8:	ldr	w0, [x29, #96]
  411fcc:	cmp	w0, #0x0
  411fd0:	b.ge	411fdc <bus_machine_method_get_addresses+0x928>  // b.tcont
  411fd4:	ldr	w19, [x29, #96]
  411fd8:	b	411ff4 <bus_machine_method_get_addresses+0x940>
  411fdc:	ldr	x0, [x29, #120]
  411fe0:	mov	x2, #0x0                   	// #0
  411fe4:	mov	x1, x0
  411fe8:	mov	x0, #0x0                   	// #0
  411fec:	bl	405600 <sd_bus_send@plt>
  411ff0:	mov	w19, w0
  411ff4:	add	x0, x29, #0x78
  411ff8:	bl	410a24 <sd_bus_message_unrefp>
  411ffc:	mov	w1, w19
  412000:	adrp	x0, 431000 <machine_vtable+0x4a0>
  412004:	ldr	x0, [x0, #3952]
  412008:	ldr	x2, [x29, #312]
  41200c:	ldr	x0, [x0]
  412010:	eor	x0, x2, x0
  412014:	cmp	x0, #0x0
  412018:	b.eq	412020 <bus_machine_method_get_addresses+0x96c>  // b.none
  41201c:	bl	4055f0 <__stack_chk_fail@plt>
  412020:	mov	w0, w1
  412024:	mov	sp, x29
  412028:	ldp	x19, x20, [sp, #16]
  41202c:	ldr	x21, [sp, #32]
  412030:	ldp	x29, x30, [sp], #320
  412034:	ret

0000000000412038 <bus_machine_method_get_os_release>:
  412038:	sub	sp, sp, #0xa0
  41203c:	stp	x29, x30, [sp, #32]
  412040:	add	x29, sp, #0x20
  412044:	stp	x19, x20, [sp, #48]
  412048:	str	x0, [sp, #88]
  41204c:	str	x1, [sp, #80]
  412050:	str	x2, [sp, #72]
  412054:	adrp	x0, 431000 <machine_vtable+0x4a0>
  412058:	ldr	x0, [x0, #3952]
  41205c:	ldr	x1, [x0]
  412060:	str	x1, [sp, #152]
  412064:	mov	x1, #0x0                   	// #0
  412068:	str	xzr, [sp, #120]
  41206c:	ldr	x0, [sp, #80]
  412070:	str	x0, [sp, #136]
  412074:	ldr	x0, [sp, #88]
  412078:	cmp	x0, #0x0
  41207c:	cset	w0, eq  // eq = none
  412080:	and	w0, w0, #0xff
  412084:	and	x0, x0, #0xff
  412088:	cmp	x0, #0x0
  41208c:	b.eq	4120b8 <bus_machine_method_get_os_release+0x80>  // b.none
  412090:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  412094:	add	x1, x0, #0x543
  412098:	adrp	x0, 41c000 <__func__.8711+0xb30>
  41209c:	add	x4, x0, #0x790
  4120a0:	mov	w3, #0x15f                 	// #351
  4120a4:	mov	x2, x1
  4120a8:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  4120ac:	add	x1, x0, #0x588
  4120b0:	mov	w0, #0x0                   	// #0
  4120b4:	bl	4052a0 <log_assert_failed_realm@plt>
  4120b8:	ldr	x0, [sp, #136]
  4120bc:	cmp	x0, #0x0
  4120c0:	cset	w0, eq  // eq = none
  4120c4:	and	w0, w0, #0xff
  4120c8:	and	x0, x0, #0xff
  4120cc:	cmp	x0, #0x0
  4120d0:	b.eq	4120fc <bus_machine_method_get_os_release+0xc4>  // b.none
  4120d4:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  4120d8:	add	x1, x0, #0x543
  4120dc:	adrp	x0, 41c000 <__func__.8711+0xb30>
  4120e0:	add	x4, x0, #0x790
  4120e4:	mov	w3, #0x160                 	// #352
  4120e8:	mov	x2, x1
  4120ec:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  4120f0:	add	x1, x0, #0x580
  4120f4:	mov	w0, #0x0                   	// #0
  4120f8:	bl	4052a0 <log_assert_failed_realm@plt>
  4120fc:	ldr	x0, [sp, #136]
  412100:	ldr	w0, [x0, #32]
  412104:	cmp	w0, #0x0
  412108:	b.eq	41213c <bus_machine_method_get_os_release+0x104>  // b.none
  41210c:	cmp	w0, #0x2
  412110:	b.ne	4124a4 <bus_machine_method_get_os_release+0x46c>  // b.any
  412114:	add	x0, sp, #0x78
  412118:	mov	x1, x0
  41211c:	mov	x0, #0x0                   	// #0
  412120:	bl	404fc0 <load_os_release_pairs@plt>
  412124:	str	w0, [sp, #116]
  412128:	ldr	w0, [sp, #116]
  41212c:	cmp	w0, #0x0
  412130:	b.ge	4124c4 <bus_machine_method_get_os_release+0x48c>  // b.tcont
  412134:	ldr	w19, [sp, #116]
  412138:	b	4124dc <bus_machine_method_get_os_release+0x4a4>
  41213c:	mov	w0, #0xffffffff            	// #-1
  412140:	str	w0, [sp, #96]
  412144:	mov	w0, #0xffffffff            	// #-1
  412148:	str	w0, [sp, #100]
  41214c:	mov	w0, #0xffffffff            	// #-1
  412150:	str	w0, [sp, #104]
  412154:	mov	w0, #0xffffffff            	// #-1
  412158:	str	w0, [sp, #144]
  41215c:	mov	w0, #0xffffffff            	// #-1
  412160:	str	w0, [sp, #148]
  412164:	str	xzr, [sp, #128]
  412168:	ldr	x0, [sp, #136]
  41216c:	ldr	w0, [x0, #80]
  412170:	add	x3, sp, #0x64
  412174:	add	x2, sp, #0x60
  412178:	add	x1, sp, #0x68
  41217c:	mov	x5, x3
  412180:	mov	x4, #0x0                   	// #0
  412184:	mov	x3, #0x0                   	// #0
  412188:	bl	405130 <namespace_open@plt>
  41218c:	str	w0, [sp, #116]
  412190:	ldr	w0, [sp, #116]
  412194:	cmp	w0, #0x0
  412198:	b.ge	4121a8 <bus_machine_method_get_os_release+0x170>  // b.tcont
  41219c:	ldr	w19, [sp, #116]
  4121a0:	mov	w20, #0x0                   	// #0
  4121a4:	b	412420 <bus_machine_method_get_os_release+0x3e8>
  4121a8:	add	x0, sp, #0x90
  4121ac:	mov	x3, x0
  4121b0:	mov	w2, #0x0                   	// #0
  4121b4:	mov	w1, #0x5                   	// #5
  4121b8:	mov	w0, #0x1                   	// #1
  4121bc:	bl	405640 <socketpair@plt>
  4121c0:	cmp	w0, #0x0
  4121c4:	b.ge	4121dc <bus_machine_method_get_os_release+0x1a4>  // b.tcont
  4121c8:	bl	4054d0 <__errno_location@plt>
  4121cc:	ldr	w0, [x0]
  4121d0:	neg	w19, w0
  4121d4:	mov	w20, #0x0                   	// #0
  4121d8:	b	412420 <bus_machine_method_get_os_release+0x3e8>
  4121dc:	ldr	w2, [sp, #104]
  4121e0:	ldr	w3, [sp, #96]
  4121e4:	ldr	w0, [sp, #100]
  4121e8:	add	x1, sp, #0x6c
  4121ec:	str	x1, [sp, #16]
  4121f0:	str	w0, [sp, #8]
  4121f4:	mov	w0, #0xffffffff            	// #-1
  4121f8:	str	w0, [sp]
  4121fc:	mov	w7, #0xffffffff            	// #-1
  412200:	mov	w6, w3
  412204:	mov	w5, w2
  412208:	mov	w4, #0x5                   	// #5
  41220c:	mov	x3, #0x0                   	// #0
  412210:	mov	x2, #0x0                   	// #0
  412214:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  412218:	add	x1, x0, #0x820
  41221c:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  412220:	add	x0, x0, #0x830
  412224:	bl	4053c0 <namespace_fork@plt>
  412228:	str	w0, [sp, #116]
  41222c:	ldr	w0, [sp, #116]
  412230:	cmp	w0, #0x0
  412234:	b.ge	412258 <bus_machine_method_get_os_release+0x220>  // b.tcont
  412238:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  41223c:	add	x2, x0, #0x738
  412240:	ldr	w1, [sp, #116]
  412244:	ldr	x0, [sp, #72]
  412248:	bl	405070 <sd_bus_error_set_errnof@plt>
  41224c:	mov	w19, w0
  412250:	mov	w20, #0x0                   	// #0
  412254:	b	412420 <bus_machine_method_get_os_release+0x3e8>
  412258:	ldr	w0, [sp, #116]
  41225c:	cmp	w0, #0x0
  412260:	b.ne	4122ec <bus_machine_method_get_os_release+0x2b4>  // b.any
  412264:	mov	w0, #0xffffffff            	// #-1
  412268:	str	w0, [sp, #112]
  41226c:	ldr	w0, [sp, #144]
  412270:	bl	405240 <safe_close@plt>
  412274:	str	w0, [sp, #144]
  412278:	add	x0, sp, #0x70
  41227c:	mov	x2, x0
  412280:	mov	x1, #0x0                   	// #0
  412284:	mov	x0, #0x0                   	// #0
  412288:	bl	405a10 <open_os_release@plt>
  41228c:	str	w0, [sp, #116]
  412290:	ldr	w0, [sp, #116]
  412294:	cmn	w0, #0x2
  412298:	b.ne	4122a4 <bus_machine_method_get_os_release+0x26c>  // b.any
  41229c:	mov	w0, #0x2                   	// #2
  4122a0:	bl	405300 <_exit@plt>
  4122a4:	ldr	w0, [sp, #116]
  4122a8:	cmp	w0, #0x0
  4122ac:	b.ge	4122b8 <bus_machine_method_get_os_release+0x280>  // b.tcont
  4122b0:	mov	w0, #0x1                   	// #1
  4122b4:	bl	405300 <_exit@plt>
  4122b8:	ldr	w0, [sp, #112]
  4122bc:	ldr	w1, [sp, #148]
  4122c0:	mov	w3, #0x0                   	// #0
  4122c4:	mov	x2, #0xffffffffffffffff    	// #-1
  4122c8:	bl	410c64 <copy_bytes>
  4122cc:	str	w0, [sp, #116]
  4122d0:	ldr	w0, [sp, #116]
  4122d4:	cmp	w0, #0x0
  4122d8:	b.ge	4122e4 <bus_machine_method_get_os_release+0x2ac>  // b.tcont
  4122dc:	mov	w0, #0x1                   	// #1
  4122e0:	bl	405300 <_exit@plt>
  4122e4:	mov	w0, #0x0                   	// #0
  4122e8:	bl	405300 <_exit@plt>
  4122ec:	ldr	w0, [sp, #148]
  4122f0:	bl	405240 <safe_close@plt>
  4122f4:	str	w0, [sp, #148]
  4122f8:	ldr	w2, [sp, #144]
  4122fc:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  412300:	add	x1, x0, #0x840
  412304:	mov	w0, w2
  412308:	bl	404fa0 <fdopen@plt>
  41230c:	str	x0, [sp, #128]
  412310:	ldr	x0, [sp, #128]
  412314:	cmp	x0, #0x0
  412318:	b.ne	412330 <bus_machine_method_get_os_release+0x2f8>  // b.any
  41231c:	bl	4054d0 <__errno_location@plt>
  412320:	ldr	w0, [x0]
  412324:	neg	w19, w0
  412328:	mov	w20, #0x0                   	// #0
  41232c:	b	412420 <bus_machine_method_get_os_release+0x3e8>
  412330:	mov	w0, #0xffffffff            	// #-1
  412334:	str	w0, [sp, #144]
  412338:	ldr	x3, [sp, #128]
  41233c:	add	x0, sp, #0x78
  412340:	mov	x2, x0
  412344:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  412348:	add	x1, x0, #0x848
  41234c:	mov	x0, x3
  412350:	bl	405bd0 <load_env_file_pairs@plt>
  412354:	str	w0, [sp, #116]
  412358:	ldr	w0, [sp, #116]
  41235c:	cmp	w0, #0x0
  412360:	b.ge	412370 <bus_machine_method_get_os_release+0x338>  // b.tcont
  412364:	ldr	w19, [sp, #116]
  412368:	mov	w20, #0x0                   	// #0
  41236c:	b	412420 <bus_machine_method_get_os_release+0x3e8>
  412370:	ldr	w0, [sp, #108]
  412374:	mov	w2, #0x0                   	// #0
  412378:	mov	w1, w0
  41237c:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  412380:	add	x0, x0, #0x830
  412384:	bl	4054f0 <wait_for_terminate_and_check@plt>
  412388:	str	w0, [sp, #116]
  41238c:	ldr	w0, [sp, #116]
  412390:	cmp	w0, #0x0
  412394:	b.ge	4123b8 <bus_machine_method_get_os_release+0x380>  // b.tcont
  412398:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  41239c:	add	x2, x0, #0x750
  4123a0:	ldr	w1, [sp, #116]
  4123a4:	ldr	x0, [sp, #72]
  4123a8:	bl	405070 <sd_bus_error_set_errnof@plt>
  4123ac:	mov	w19, w0
  4123b0:	mov	w20, #0x0                   	// #0
  4123b4:	b	412420 <bus_machine_method_get_os_release+0x3e8>
  4123b8:	ldr	w0, [sp, #116]
  4123bc:	cmp	w0, #0x2
  4123c0:	b.ne	4123e8 <bus_machine_method_get_os_release+0x3b0>  // b.any
  4123c4:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  4123c8:	add	x2, x0, #0x858
  4123cc:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  4123d0:	add	x1, x0, #0x788
  4123d4:	ldr	x0, [sp, #72]
  4123d8:	bl	4055d0 <sd_bus_error_setf@plt>
  4123dc:	mov	w19, w0
  4123e0:	mov	w20, #0x0                   	// #0
  4123e4:	b	412420 <bus_machine_method_get_os_release+0x3e8>
  4123e8:	ldr	w0, [sp, #116]
  4123ec:	cmp	w0, #0x0
  4123f0:	b.eq	412418 <bus_machine_method_get_os_release+0x3e0>  // b.none
  4123f4:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  4123f8:	add	x2, x0, #0x770
  4123fc:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  412400:	add	x1, x0, #0x788
  412404:	ldr	x0, [sp, #72]
  412408:	bl	4055d0 <sd_bus_error_setf@plt>
  41240c:	mov	w19, w0
  412410:	mov	w20, #0x0                   	// #0
  412414:	b	412420 <bus_machine_method_get_os_release+0x3e8>
  412418:	mov	w20, #0x1                   	// #1
  41241c:	nop
  412420:	add	x0, sp, #0x80
  412424:	bl	410cec <fclosep>
  412428:	cmp	w20, #0x0
  41242c:	b.ne	412438 <bus_machine_method_get_os_release+0x400>  // b.any
  412430:	mov	w20, #0x0                   	// #0
  412434:	b	41243c <bus_machine_method_get_os_release+0x404>
  412438:	mov	w20, #0x1                   	// #1
  41243c:	add	x0, sp, #0x90
  412440:	bl	410ccc <close_pairp>
  412444:	cmp	w20, #0x0
  412448:	b.ne	412454 <bus_machine_method_get_os_release+0x41c>  // b.any
  41244c:	mov	w20, #0x0                   	// #0
  412450:	b	412458 <bus_machine_method_get_os_release+0x420>
  412454:	mov	w20, #0x1                   	// #1
  412458:	add	x0, sp, #0x68
  41245c:	bl	410ca8 <closep>
  412460:	cmp	w20, #0x0
  412464:	b.ne	412470 <bus_machine_method_get_os_release+0x438>  // b.any
  412468:	mov	w20, #0x0                   	// #0
  41246c:	b	412474 <bus_machine_method_get_os_release+0x43c>
  412470:	mov	w20, #0x1                   	// #1
  412474:	add	x0, sp, #0x64
  412478:	bl	410ca8 <closep>
  41247c:	cmp	w20, #0x0
  412480:	b.ne	41248c <bus_machine_method_get_os_release+0x454>  // b.any
  412484:	mov	w20, #0x0                   	// #0
  412488:	b	412490 <bus_machine_method_get_os_release+0x458>
  41248c:	mov	w20, #0x1                   	// #1
  412490:	add	x0, sp, #0x60
  412494:	bl	410ca8 <closep>
  412498:	cmp	w20, #0x0
  41249c:	b.ne	4124c8 <bus_machine_method_get_os_release+0x490>  // b.any
  4124a0:	b	4124dc <bus_machine_method_get_os_release+0x4a4>
  4124a4:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  4124a8:	add	x2, x0, #0x888
  4124ac:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  4124b0:	add	x1, x0, #0x7f8
  4124b4:	ldr	x0, [sp, #72]
  4124b8:	bl	4055d0 <sd_bus_error_setf@plt>
  4124bc:	mov	w19, w0
  4124c0:	b	4124dc <bus_machine_method_get_os_release+0x4a4>
  4124c4:	nop
  4124c8:	ldr	x0, [sp, #120]
  4124cc:	mov	x1, x0
  4124d0:	ldr	x0, [sp, #88]
  4124d4:	bl	405990 <bus_reply_pair_array@plt>
  4124d8:	mov	w19, w0
  4124dc:	add	x0, sp, #0x78
  4124e0:	bl	410da4 <strv_freep>
  4124e4:	mov	w1, w19
  4124e8:	adrp	x0, 431000 <machine_vtable+0x4a0>
  4124ec:	ldr	x0, [x0, #3952]
  4124f0:	ldr	x2, [sp, #152]
  4124f4:	ldr	x0, [x0]
  4124f8:	eor	x0, x2, x0
  4124fc:	cmp	x0, #0x0
  412500:	b.eq	412508 <bus_machine_method_get_os_release+0x4d0>  // b.none
  412504:	bl	4055f0 <__stack_chk_fail@plt>
  412508:	mov	w0, w1
  41250c:	ldp	x19, x20, [sp, #48]
  412510:	ldp	x29, x30, [sp, #32]
  412514:	add	sp, sp, #0xa0
  412518:	ret

000000000041251c <bus_machine_method_open_pty>:
  41251c:	stp	x29, x30, [sp, #-112]!
  412520:	mov	x29, sp
  412524:	str	x19, [sp, #16]
  412528:	str	x0, [sp, #56]
  41252c:	str	x1, [sp, #48]
  412530:	str	x2, [sp, #40]
  412534:	adrp	x0, 431000 <machine_vtable+0x4a0>
  412538:	ldr	x0, [x0, #3952]
  41253c:	ldr	x1, [x0]
  412540:	str	x1, [sp, #104]
  412544:	mov	x1, #0x0                   	// #0
  412548:	str	xzr, [sp, #80]
  41254c:	str	xzr, [sp, #88]
  412550:	mov	w0, #0xffffffff            	// #-1
  412554:	str	w0, [sp, #72]
  412558:	ldr	x0, [sp, #48]
  41255c:	str	x0, [sp, #96]
  412560:	ldr	x0, [sp, #56]
  412564:	cmp	x0, #0x0
  412568:	cset	w0, eq  // eq = none
  41256c:	and	w0, w0, #0xff
  412570:	and	x0, x0, #0xff
  412574:	cmp	x0, #0x0
  412578:	b.eq	4125a4 <bus_machine_method_open_pty+0x88>  // b.none
  41257c:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  412580:	add	x1, x0, #0x543
  412584:	adrp	x0, 41c000 <__func__.8711+0xb30>
  412588:	add	x4, x0, #0x7b8
  41258c:	mov	w3, #0x1b4                 	// #436
  412590:	mov	x2, x1
  412594:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  412598:	add	x1, x0, #0x588
  41259c:	mov	w0, #0x0                   	// #0
  4125a0:	bl	4052a0 <log_assert_failed_realm@plt>
  4125a4:	ldr	x0, [sp, #96]
  4125a8:	cmp	x0, #0x0
  4125ac:	cset	w0, eq  // eq = none
  4125b0:	and	w0, w0, #0xff
  4125b4:	and	x0, x0, #0xff
  4125b8:	cmp	x0, #0x0
  4125bc:	b.eq	4125e8 <bus_machine_method_open_pty+0xcc>  // b.none
  4125c0:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  4125c4:	add	x1, x0, #0x543
  4125c8:	adrp	x0, 41c000 <__func__.8711+0xb30>
  4125cc:	add	x4, x0, #0x7b8
  4125d0:	mov	w3, #0x1b5                 	// #437
  4125d4:	mov	x2, x1
  4125d8:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  4125dc:	add	x1, x0, #0x580
  4125e0:	mov	w0, #0x0                   	// #0
  4125e4:	bl	4052a0 <log_assert_failed_realm@plt>
  4125e8:	ldr	x0, [sp, #96]
  4125ec:	ldr	w0, [x0, #32]
  4125f0:	cmp	w0, #0x2
  4125f4:	b.ne	412604 <bus_machine_method_open_pty+0xe8>  // b.any
  4125f8:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  4125fc:	add	x0, x0, #0x8d0
  412600:	b	41260c <bus_machine_method_open_pty+0xf0>
  412604:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  412608:	add	x0, x0, #0x8f8
  41260c:	ldr	x1, [sp, #96]
  412610:	ldr	x1, [x1]
  412614:	add	x1, x1, #0x28
  412618:	ldr	x7, [sp, #40]
  41261c:	mov	x6, x1
  412620:	mov	w5, #0xffffffff            	// #-1
  412624:	mov	w4, #0x0                   	// #0
  412628:	mov	x3, #0x0                   	// #0
  41262c:	mov	x2, x0
  412630:	mov	w1, #0x15                  	// #21
  412634:	ldr	x0, [sp, #56]
  412638:	bl	405bb0 <bus_verify_polkit_async@plt>
  41263c:	str	w0, [sp, #76]
  412640:	ldr	w0, [sp, #76]
  412644:	cmp	w0, #0x0
  412648:	b.ge	412654 <bus_machine_method_open_pty+0x138>  // b.tcont
  41264c:	ldr	w19, [sp, #76]
  412650:	b	412714 <bus_machine_method_open_pty+0x1f8>
  412654:	ldr	w0, [sp, #76]
  412658:	cmp	w0, #0x0
  41265c:	b.ne	412668 <bus_machine_method_open_pty+0x14c>  // b.any
  412660:	mov	w19, #0x1                   	// #1
  412664:	b	412714 <bus_machine_method_open_pty+0x1f8>
  412668:	add	x0, sp, #0x58
  41266c:	mov	x2, x0
  412670:	mov	w1, #0x102                 	// #258
  412674:	movk	w1, #0x8, lsl #16
  412678:	ldr	x0, [sp, #96]
  41267c:	bl	40a5e4 <machine_openpt>
  412680:	str	w0, [sp, #72]
  412684:	ldr	w0, [sp, #72]
  412688:	cmp	w0, #0x0
  41268c:	b.ge	412698 <bus_machine_method_open_pty+0x17c>  // b.tcont
  412690:	ldr	w19, [sp, #72]
  412694:	b	412714 <bus_machine_method_open_pty+0x1f8>
  412698:	add	x0, sp, #0x50
  41269c:	mov	x1, x0
  4126a0:	ldr	x0, [sp, #56]
  4126a4:	bl	4050d0 <sd_bus_message_new_method_return@plt>
  4126a8:	str	w0, [sp, #76]
  4126ac:	ldr	w0, [sp, #76]
  4126b0:	cmp	w0, #0x0
  4126b4:	b.ge	4126c0 <bus_machine_method_open_pty+0x1a4>  // b.tcont
  4126b8:	ldr	w19, [sp, #76]
  4126bc:	b	412714 <bus_machine_method_open_pty+0x1f8>
  4126c0:	ldr	x4, [sp, #80]
  4126c4:	ldr	w0, [sp, #72]
  4126c8:	ldr	x1, [sp, #88]
  4126cc:	mov	x3, x1
  4126d0:	mov	w2, w0
  4126d4:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  4126d8:	add	x1, x0, #0x920
  4126dc:	mov	x0, x4
  4126e0:	bl	4051f0 <sd_bus_message_append@plt>
  4126e4:	str	w0, [sp, #76]
  4126e8:	ldr	w0, [sp, #76]
  4126ec:	cmp	w0, #0x0
  4126f0:	b.ge	4126fc <bus_machine_method_open_pty+0x1e0>  // b.tcont
  4126f4:	ldr	w19, [sp, #76]
  4126f8:	b	412714 <bus_machine_method_open_pty+0x1f8>
  4126fc:	ldr	x0, [sp, #80]
  412700:	mov	x2, #0x0                   	// #0
  412704:	mov	x1, x0
  412708:	mov	x0, #0x0                   	// #0
  41270c:	bl	405600 <sd_bus_send@plt>
  412710:	mov	w19, w0
  412714:	add	x0, sp, #0x48
  412718:	bl	410ca8 <closep>
  41271c:	add	x0, sp, #0x58
  412720:	bl	41091c <freep>
  412724:	add	x0, sp, #0x50
  412728:	bl	410a24 <sd_bus_message_unrefp>
  41272c:	mov	w1, w19
  412730:	adrp	x0, 431000 <machine_vtable+0x4a0>
  412734:	ldr	x0, [x0, #3952]
  412738:	ldr	x2, [sp, #104]
  41273c:	ldr	x0, [x0]
  412740:	eor	x0, x2, x0
  412744:	cmp	x0, #0x0
  412748:	b.eq	412750 <bus_machine_method_open_pty+0x234>  // b.none
  41274c:	bl	4055f0 <__stack_chk_fail@plt>
  412750:	mov	w0, w1
  412754:	ldr	x19, [sp, #16]
  412758:	ldp	x29, x30, [sp], #112
  41275c:	ret

0000000000412760 <container_bus_new>:
  412760:	stp	x29, x30, [sp, #-112]!
  412764:	mov	x29, sp
  412768:	stp	x19, x20, [sp, #16]
  41276c:	str	x0, [sp, #56]
  412770:	str	x1, [sp, #48]
  412774:	str	x2, [sp, #40]
  412778:	adrp	x0, 431000 <machine_vtable+0x4a0>
  41277c:	ldr	x0, [x0, #3952]
  412780:	ldr	x1, [x0]
  412784:	str	x1, [sp, #104]
  412788:	mov	x1, #0x0                   	// #0
  41278c:	ldr	x0, [sp, #56]
  412790:	cmp	x0, #0x0
  412794:	cset	w0, eq  // eq = none
  412798:	and	w0, w0, #0xff
  41279c:	and	x0, x0, #0xff
  4127a0:	cmp	x0, #0x0
  4127a4:	b.eq	4127d0 <container_bus_new+0x70>  // b.none
  4127a8:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  4127ac:	add	x1, x0, #0x543
  4127b0:	adrp	x0, 41c000 <__func__.8711+0xb30>
  4127b4:	add	x4, x0, #0x7d8
  4127b8:	mov	w3, #0x1d7                 	// #471
  4127bc:	mov	x2, x1
  4127c0:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  4127c4:	add	x1, x0, #0x580
  4127c8:	mov	w0, #0x0                   	// #0
  4127cc:	bl	4052a0 <log_assert_failed_realm@plt>
  4127d0:	ldr	x0, [sp, #40]
  4127d4:	cmp	x0, #0x0
  4127d8:	cset	w0, eq  // eq = none
  4127dc:	and	w0, w0, #0xff
  4127e0:	and	x0, x0, #0xff
  4127e4:	cmp	x0, #0x0
  4127e8:	b.eq	412814 <container_bus_new+0xb4>  // b.none
  4127ec:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  4127f0:	add	x1, x0, #0x543
  4127f4:	adrp	x0, 41c000 <__func__.8711+0xb30>
  4127f8:	add	x4, x0, #0x7d8
  4127fc:	mov	w3, #0x1d8                 	// #472
  412800:	mov	x2, x1
  412804:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  412808:	add	x1, x0, #0x928
  41280c:	mov	w0, #0x0                   	// #0
  412810:	bl	4052a0 <log_assert_failed_realm@plt>
  412814:	ldr	x0, [sp, #56]
  412818:	ldr	w0, [x0, #32]
  41281c:	cmp	w0, #0x0
  412820:	b.eq	412838 <container_bus_new+0xd8>  // b.none
  412824:	cmp	w0, #0x2
  412828:	b.ne	412960 <container_bus_new+0x200>  // b.any
  41282c:	ldr	x0, [sp, #40]
  412830:	str	xzr, [x0]
  412834:	b	412968 <container_bus_new+0x208>
  412838:	str	xzr, [sp, #80]
  41283c:	add	x0, sp, #0x50
  412840:	bl	4058b0 <sd_bus_new@plt>
  412844:	str	w0, [sp, #76]
  412848:	ldr	w0, [sp, #76]
  41284c:	cmp	w0, #0x0
  412850:	b.ge	412860 <container_bus_new+0x100>  // b.tcont
  412854:	ldr	w19, [sp, #76]
  412858:	mov	w20, #0x0                   	// #0
  41285c:	b	41294c <container_bus_new+0x1ec>
  412860:	ldr	x0, [sp, #56]
  412864:	ldr	w0, [x0, #80]
  412868:	add	x3, sp, #0x58
  41286c:	mov	w2, w0
  412870:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  412874:	add	x1, x0, #0x930
  412878:	mov	x0, x3
  41287c:	bl	405950 <asprintf@plt>
  412880:	cmp	w0, #0x0
  412884:	b.ge	412894 <container_bus_new+0x134>  // b.tcont
  412888:	mov	w19, #0xfffffff4            	// #-12
  41288c:	mov	w20, #0x0                   	// #0
  412890:	b	41294c <container_bus_new+0x1ec>
  412894:	ldr	x0, [sp, #80]
  412898:	ldr	x1, [sp, #88]
  41289c:	str	x1, [x0, #400]
  4128a0:	ldr	x0, [sp, #80]
  4128a4:	ldrb	w1, [x0, #28]
  4128a8:	orr	w1, w1, #0x2
  4128ac:	strb	w1, [x0, #28]
  4128b0:	ldr	x0, [sp, #80]
  4128b4:	ldrb	w1, [x0, #29]
  4128b8:	and	w1, w1, #0xfffffffb
  4128bc:	strb	w1, [x0, #29]
  4128c0:	ldr	x0, [sp, #80]
  4128c4:	ldrb	w1, [x0, #29]
  4128c8:	orr	w1, w1, #0x10
  4128cc:	strb	w1, [x0, #29]
  4128d0:	ldr	x0, [sp, #80]
  4128d4:	bl	405580 <sd_bus_start@plt>
  4128d8:	str	w0, [sp, #76]
  4128dc:	ldr	w0, [sp, #76]
  4128e0:	cmn	w0, #0x2
  4128e4:	b.ne	412914 <container_bus_new+0x1b4>  // b.any
  4128e8:	ldr	x0, [sp, #56]
  4128ec:	ldr	x0, [x0, #8]
  4128f0:	mov	x3, x0
  4128f4:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  4128f8:	add	x2, x0, #0x968
  4128fc:	ldr	w1, [sp, #76]
  412900:	ldr	x0, [sp, #48]
  412904:	bl	405070 <sd_bus_error_set_errnof@plt>
  412908:	mov	w19, w0
  41290c:	mov	w20, #0x0                   	// #0
  412910:	b	41294c <container_bus_new+0x1ec>
  412914:	ldr	w0, [sp, #76]
  412918:	cmp	w0, #0x0
  41291c:	b.ge	41292c <container_bus_new+0x1cc>  // b.tcont
  412920:	ldr	w19, [sp, #76]
  412924:	mov	w20, #0x0                   	// #0
  412928:	b	41294c <container_bus_new+0x1ec>
  41292c:	ldr	x0, [sp, #80]
  412930:	str	x0, [sp, #96]
  412934:	str	xzr, [sp, #80]
  412938:	ldr	x1, [sp, #96]
  41293c:	ldr	x0, [sp, #40]
  412940:	str	x1, [x0]
  412944:	mov	w20, #0x1                   	// #1
  412948:	nop
  41294c:	add	x0, sp, #0x50
  412950:	bl	4109bc <sd_bus_close_unrefp>
  412954:	cmp	w20, #0x0
  412958:	b.ne	412968 <container_bus_new+0x208>  // b.any
  41295c:	b	41296c <container_bus_new+0x20c>
  412960:	mov	w19, #0xffffffa1            	// #-95
  412964:	b	41296c <container_bus_new+0x20c>
  412968:	mov	w19, #0x0                   	// #0
  41296c:	mov	w1, w19
  412970:	adrp	x0, 431000 <machine_vtable+0x4a0>
  412974:	ldr	x0, [x0, #3952]
  412978:	ldr	x2, [sp, #104]
  41297c:	ldr	x0, [x0]
  412980:	eor	x0, x2, x0
  412984:	cmp	x0, #0x0
  412988:	b.eq	412990 <container_bus_new+0x230>  // b.none
  41298c:	bl	4055f0 <__stack_chk_fail@plt>
  412990:	mov	w0, w1
  412994:	ldp	x19, x20, [sp, #16]
  412998:	ldp	x29, x30, [sp], #112
  41299c:	ret

00000000004129a0 <bus_machine_method_open_login>:
  4129a0:	stp	x29, x30, [sp, #-208]!
  4129a4:	mov	x29, sp
  4129a8:	str	x19, [sp, #16]
  4129ac:	sub	sp, sp, #0x10
  4129b0:	str	x0, [x29, #56]
  4129b4:	str	x1, [x29, #48]
  4129b8:	str	x2, [x29, #40]
  4129bc:	adrp	x0, 431000 <machine_vtable+0x4a0>
  4129c0:	ldr	x0, [x0, #3952]
  4129c4:	ldr	x1, [x0]
  4129c8:	str	x1, [x29, #200]
  4129cc:	mov	x1, #0x0                   	// #0
  4129d0:	str	xzr, [x29, #80]
  4129d4:	str	xzr, [x29, #88]
  4129d8:	str	xzr, [x29, #96]
  4129dc:	mov	w0, #0xffffffff            	// #-1
  4129e0:	str	w0, [x29, #72]
  4129e4:	str	xzr, [x29, #128]
  4129e8:	ldr	x0, [x29, #48]
  4129ec:	str	x0, [x29, #136]
  4129f0:	ldr	x0, [x29, #56]
  4129f4:	cmp	x0, #0x0
  4129f8:	cset	w0, eq  // eq = none
  4129fc:	and	w0, w0, #0xff
  412a00:	and	x0, x0, #0xff
  412a04:	cmp	x0, #0x0
  412a08:	b.eq	412a34 <bus_machine_method_open_login+0x94>  // b.none
  412a0c:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  412a10:	add	x1, x0, #0x543
  412a14:	adrp	x0, 41c000 <__func__.8711+0xb30>
  412a18:	add	x4, x0, #0x7f0
  412a1c:	mov	w3, #0x20b                 	// #523
  412a20:	mov	x2, x1
  412a24:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  412a28:	add	x1, x0, #0x588
  412a2c:	mov	w0, #0x0                   	// #0
  412a30:	bl	4052a0 <log_assert_failed_realm@plt>
  412a34:	ldr	x0, [x29, #136]
  412a38:	cmp	x0, #0x0
  412a3c:	cset	w0, eq  // eq = none
  412a40:	and	w0, w0, #0xff
  412a44:	and	x0, x0, #0xff
  412a48:	cmp	x0, #0x0
  412a4c:	b.eq	412a78 <bus_machine_method_open_login+0xd8>  // b.none
  412a50:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  412a54:	add	x1, x0, #0x543
  412a58:	adrp	x0, 41c000 <__func__.8711+0xb30>
  412a5c:	add	x4, x0, #0x7f0
  412a60:	mov	w3, #0x20c                 	// #524
  412a64:	mov	x2, x1
  412a68:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  412a6c:	add	x1, x0, #0x580
  412a70:	mov	w0, #0x0                   	// #0
  412a74:	bl	4052a0 <log_assert_failed_realm@plt>
  412a78:	ldr	x0, [x29, #136]
  412a7c:	ldr	w0, [x0, #32]
  412a80:	cmp	w0, #0x2
  412a84:	b.ne	412a94 <bus_machine_method_open_login+0xf4>  // b.any
  412a88:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  412a8c:	add	x0, x0, #0x990
  412a90:	b	412a9c <bus_machine_method_open_login+0xfc>
  412a94:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  412a98:	add	x0, x0, #0x9b8
  412a9c:	ldr	x1, [x29, #136]
  412aa0:	ldr	x1, [x1]
  412aa4:	add	x1, x1, #0x28
  412aa8:	ldr	x7, [x29, #40]
  412aac:	mov	x6, x1
  412ab0:	mov	w5, #0xffffffff            	// #-1
  412ab4:	mov	w4, #0x0                   	// #0
  412ab8:	mov	x3, #0x0                   	// #0
  412abc:	mov	x2, x0
  412ac0:	mov	w1, #0x15                  	// #21
  412ac4:	ldr	x0, [x29, #56]
  412ac8:	bl	405bb0 <bus_verify_polkit_async@plt>
  412acc:	str	w0, [x29, #76]
  412ad0:	ldr	w0, [x29, #76]
  412ad4:	cmp	w0, #0x0
  412ad8:	b.ge	412ae4 <bus_machine_method_open_login+0x144>  // b.tcont
  412adc:	ldr	w19, [x29, #76]
  412ae0:	b	412e58 <bus_machine_method_open_login+0x4b8>
  412ae4:	ldr	w0, [x29, #76]
  412ae8:	cmp	w0, #0x0
  412aec:	b.ne	412af8 <bus_machine_method_open_login+0x158>  // b.any
  412af0:	mov	w19, #0x1                   	// #1
  412af4:	b	412e58 <bus_machine_method_open_login+0x4b8>
  412af8:	add	x0, x29, #0x58
  412afc:	mov	x2, x0
  412b00:	mov	w1, #0x102                 	// #258
  412b04:	movk	w1, #0x8, lsl #16
  412b08:	ldr	x0, [x29, #136]
  412b0c:	bl	40a5e4 <machine_openpt>
  412b10:	str	w0, [x29, #72]
  412b14:	ldr	w0, [x29, #72]
  412b18:	cmp	w0, #0x0
  412b1c:	b.ge	412b28 <bus_machine_method_open_login+0x188>  // b.tcont
  412b20:	ldr	w19, [x29, #72]
  412b24:	b	412e58 <bus_machine_method_open_login+0x4b8>
  412b28:	ldr	x2, [x29, #88]
  412b2c:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  412b30:	add	x1, x0, #0x9d8
  412b34:	mov	x0, x2
  412b38:	bl	4054a0 <path_startswith@plt>
  412b3c:	str	x0, [x29, #144]
  412b40:	ldr	x0, [x29, #144]
  412b44:	cmp	x0, #0x0
  412b48:	cset	w0, eq  // eq = none
  412b4c:	and	w0, w0, #0xff
  412b50:	and	x0, x0, #0xff
  412b54:	cmp	x0, #0x0
  412b58:	b.eq	412b84 <bus_machine_method_open_login+0x1e4>  // b.none
  412b5c:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  412b60:	add	x1, x0, #0x543
  412b64:	adrp	x0, 41c000 <__func__.8711+0xb30>
  412b68:	add	x4, x0, #0x7f0
  412b6c:	mov	w3, #0x221                 	// #545
  412b70:	mov	x2, x1
  412b74:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  412b78:	add	x1, x0, #0x9e8
  412b7c:	mov	w0, #0x0                   	// #0
  412b80:	bl	4052a0 <log_assert_failed_realm@plt>
  412b84:	add	x0, x29, #0x60
  412b88:	mov	x2, x0
  412b8c:	ldr	x1, [x29, #40]
  412b90:	ldr	x0, [x29, #136]
  412b94:	bl	412760 <container_bus_new>
  412b98:	str	w0, [x29, #76]
  412b9c:	ldr	w0, [x29, #76]
  412ba0:	cmp	w0, #0x0
  412ba4:	b.ge	412bb0 <bus_machine_method_open_login+0x210>  // b.tcont
  412ba8:	ldr	w19, [x29, #76]
  412bac:	b	412e58 <bus_machine_method_open_login+0x4b8>
  412bb0:	ldr	x0, [x29, #96]
  412bb4:	cmp	x0, #0x0
  412bb8:	b.ne	412bc8 <bus_machine_method_open_login+0x228>  // b.any
  412bbc:	ldr	x0, [x29, #136]
  412bc0:	ldr	x0, [x0]
  412bc4:	ldr	x0, [x0, #8]
  412bc8:	str	x0, [x29, #128]
  412bcc:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  412bd0:	add	x0, x0, #0x9f0
  412bd4:	str	x0, [x29, #176]
  412bd8:	ldr	x0, [x29, #144]
  412bdc:	str	x0, [x29, #184]
  412be0:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  412be4:	add	x0, x0, #0xa08
  412be8:	str	x0, [x29, #192]
  412bec:	str	xzr, [x29, #112]
  412bf0:	str	xzr, [x29, #120]
  412bf4:	b	412c28 <bus_machine_method_open_login+0x288>
  412bf8:	ldr	x0, [x29, #120]
  412bfc:	lsl	x0, x0, #3
  412c00:	add	x1, x29, #0xb0
  412c04:	ldr	x0, [x1, x0]
  412c08:	bl	405b50 <strlen@plt>
  412c0c:	mov	x1, x0
  412c10:	ldr	x0, [x29, #112]
  412c14:	add	x0, x0, x1
  412c18:	str	x0, [x29, #112]
  412c1c:	ldr	x0, [x29, #120]
  412c20:	add	x0, x0, #0x1
  412c24:	str	x0, [x29, #120]
  412c28:	ldr	x0, [x29, #120]
  412c2c:	cmp	x0, #0x2
  412c30:	b.hi	412c4c <bus_machine_method_open_login+0x2ac>  // b.pmore
  412c34:	ldr	x0, [x29, #120]
  412c38:	lsl	x0, x0, #3
  412c3c:	add	x1, x29, #0xb0
  412c40:	ldr	x0, [x1, x0]
  412c44:	cmp	x0, #0x0
  412c48:	b.ne	412bf8 <bus_machine_method_open_login+0x258>  // b.any
  412c4c:	ldr	x0, [x29, #112]
  412c50:	add	x0, x0, #0x1
  412c54:	str	x0, [x29, #152]
  412c58:	ldr	x1, [x29, #152]
  412c5c:	mov	x0, #0x1                   	// #1
  412c60:	bl	410940 <size_multiply_overflow>
  412c64:	and	w0, w0, #0xff
  412c68:	and	x0, x0, #0xff
  412c6c:	cmp	x0, #0x0
  412c70:	b.eq	412c9c <bus_machine_method_open_login+0x2fc>  // b.none
  412c74:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  412c78:	add	x1, x0, #0x543
  412c7c:	adrp	x0, 41c000 <__func__.8711+0xb30>
  412c80:	add	x4, x0, #0x7f0
  412c84:	mov	w3, #0x229                 	// #553
  412c88:	mov	x2, x1
  412c8c:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  412c90:	add	x1, x0, #0x658
  412c94:	mov	w0, #0x0                   	// #0
  412c98:	bl	4052a0 <log_assert_failed_realm@plt>
  412c9c:	ldr	x0, [x29, #152]
  412ca0:	cmp	x0, #0x400, lsl #12
  412ca4:	cset	w0, hi  // hi = pmore
  412ca8:	and	w0, w0, #0xff
  412cac:	and	x0, x0, #0xff
  412cb0:	cmp	x0, #0x0
  412cb4:	b.eq	412ce0 <bus_machine_method_open_login+0x340>  // b.none
  412cb8:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  412cbc:	add	x1, x0, #0x543
  412cc0:	adrp	x0, 41c000 <__func__.8711+0xb30>
  412cc4:	add	x4, x0, #0x7f0
  412cc8:	mov	w3, #0x229                 	// #553
  412ccc:	mov	x2, x1
  412cd0:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  412cd4:	add	x1, x0, #0x688
  412cd8:	mov	w0, #0x0                   	// #0
  412cdc:	bl	4052a0 <log_assert_failed_realm@plt>
  412ce0:	ldr	x0, [x29, #152]
  412ce4:	add	x0, x0, #0xf
  412ce8:	lsr	x0, x0, #4
  412cec:	lsl	x0, x0, #4
  412cf0:	sub	sp, sp, x0
  412cf4:	add	x0, sp, #0x10
  412cf8:	add	x0, x0, #0xf
  412cfc:	lsr	x0, x0, #4
  412d00:	lsl	x0, x0, #4
  412d04:	str	x0, [x29, #160]
  412d08:	ldr	x0, [x29, #160]
  412d0c:	str	x0, [x29, #104]
  412d10:	str	xzr, [x29, #120]
  412d14:	b	412d44 <bus_machine_method_open_login+0x3a4>
  412d18:	ldr	x0, [x29, #120]
  412d1c:	lsl	x0, x0, #3
  412d20:	add	x1, x29, #0xb0
  412d24:	ldr	x0, [x1, x0]
  412d28:	mov	x1, x0
  412d2c:	ldr	x0, [x29, #104]
  412d30:	bl	404f50 <stpcpy@plt>
  412d34:	str	x0, [x29, #104]
  412d38:	ldr	x0, [x29, #120]
  412d3c:	add	x0, x0, #0x1
  412d40:	str	x0, [x29, #120]
  412d44:	ldr	x0, [x29, #120]
  412d48:	cmp	x0, #0x2
  412d4c:	b.hi	412d68 <bus_machine_method_open_login+0x3c8>  // b.pmore
  412d50:	ldr	x0, [x29, #120]
  412d54:	lsl	x0, x0, #3
  412d58:	add	x1, x29, #0xb0
  412d5c:	ldr	x0, [x1, x0]
  412d60:	cmp	x0, #0x0
  412d64:	b.ne	412d18 <bus_machine_method_open_login+0x378>  // b.any
  412d68:	ldr	x0, [x29, #104]
  412d6c:	strb	wzr, [x0]
  412d70:	ldr	x0, [x29, #160]
  412d74:	str	x0, [x29, #168]
  412d78:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  412d7c:	add	x0, x0, #0xa98
  412d80:	str	x0, [sp, #8]
  412d84:	ldr	x0, [x29, #168]
  412d88:	str	x0, [sp]
  412d8c:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  412d90:	add	x7, x0, #0xa18
  412d94:	mov	x6, #0x0                   	// #0
  412d98:	ldr	x5, [x29, #40]
  412d9c:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  412da0:	add	x4, x0, #0xa20
  412da4:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  412da8:	add	x3, x0, #0xa30
  412dac:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  412db0:	add	x2, x0, #0xa58
  412db4:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  412db8:	add	x1, x0, #0xa78
  412dbc:	ldr	x0, [x29, #128]
  412dc0:	bl	405b20 <sd_bus_call_method@plt>
  412dc4:	str	w0, [x29, #76]
  412dc8:	ldr	w0, [x29, #76]
  412dcc:	cmp	w0, #0x0
  412dd0:	b.ge	412ddc <bus_machine_method_open_login+0x43c>  // b.tcont
  412dd4:	ldr	w19, [x29, #76]
  412dd8:	b	412e58 <bus_machine_method_open_login+0x4b8>
  412ddc:	add	x0, x29, #0x50
  412de0:	mov	x1, x0
  412de4:	ldr	x0, [x29, #56]
  412de8:	bl	4050d0 <sd_bus_message_new_method_return@plt>
  412dec:	str	w0, [x29, #76]
  412df0:	ldr	w0, [x29, #76]
  412df4:	cmp	w0, #0x0
  412df8:	b.ge	412e04 <bus_machine_method_open_login+0x464>  // b.tcont
  412dfc:	ldr	w19, [x29, #76]
  412e00:	b	412e58 <bus_machine_method_open_login+0x4b8>
  412e04:	ldr	x4, [x29, #80]
  412e08:	ldr	w0, [x29, #72]
  412e0c:	ldr	x1, [x29, #88]
  412e10:	mov	x3, x1
  412e14:	mov	w2, w0
  412e18:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  412e1c:	add	x1, x0, #0x920
  412e20:	mov	x0, x4
  412e24:	bl	4051f0 <sd_bus_message_append@plt>
  412e28:	str	w0, [x29, #76]
  412e2c:	ldr	w0, [x29, #76]
  412e30:	cmp	w0, #0x0
  412e34:	b.ge	412e40 <bus_machine_method_open_login+0x4a0>  // b.tcont
  412e38:	ldr	w19, [x29, #76]
  412e3c:	b	412e58 <bus_machine_method_open_login+0x4b8>
  412e40:	ldr	x0, [x29, #80]
  412e44:	mov	x2, #0x0                   	// #0
  412e48:	mov	x1, x0
  412e4c:	mov	x0, #0x0                   	// #0
  412e50:	bl	405600 <sd_bus_send@plt>
  412e54:	mov	w19, w0
  412e58:	add	x0, x29, #0x48
  412e5c:	bl	410ca8 <closep>
  412e60:	add	x0, x29, #0x60
  412e64:	bl	4109f0 <sd_bus_flush_close_unrefp>
  412e68:	add	x0, x29, #0x58
  412e6c:	bl	41091c <freep>
  412e70:	add	x0, x29, #0x50
  412e74:	bl	410a24 <sd_bus_message_unrefp>
  412e78:	mov	w1, w19
  412e7c:	adrp	x0, 431000 <machine_vtable+0x4a0>
  412e80:	ldr	x0, [x0, #3952]
  412e84:	ldr	x2, [x29, #200]
  412e88:	ldr	x0, [x0]
  412e8c:	eor	x0, x2, x0
  412e90:	cmp	x0, #0x0
  412e94:	b.eq	412e9c <bus_machine_method_open_login+0x4fc>  // b.none
  412e98:	bl	4055f0 <__stack_chk_fail@plt>
  412e9c:	mov	w0, w1
  412ea0:	mov	sp, x29
  412ea4:	ldr	x19, [sp, #16]
  412ea8:	ldp	x29, x30, [sp], #208
  412eac:	ret

0000000000412eb0 <bus_machine_method_open_shell>:
  412eb0:	stp	x29, x30, [sp, #-320]!
  412eb4:	mov	x29, sp
  412eb8:	str	x19, [sp, #16]
  412ebc:	sub	sp, sp, #0xf0
  412ec0:	str	x0, [x29, #56]
  412ec4:	str	x1, [x29, #48]
  412ec8:	str	x2, [x29, #40]
  412ecc:	adrp	x0, 431000 <machine_vtable+0x4a0>
  412ed0:	ldr	x0, [x0, #3952]
  412ed4:	ldr	x1, [x0]
  412ed8:	str	x1, [x29, #312]
  412edc:	mov	x1, #0x0                   	// #0
  412ee0:	str	xzr, [x29, #80]
  412ee4:	str	xzr, [x29, #88]
  412ee8:	str	xzr, [x29, #96]
  412eec:	str	xzr, [x29, #104]
  412ef0:	str	xzr, [x29, #200]
  412ef4:	mov	w0, #0xffffffff            	// #-1
  412ef8:	str	w0, [x29, #68]
  412efc:	mov	w0, #0xffffffff            	// #-1
  412f00:	str	w0, [x29, #72]
  412f04:	str	xzr, [x29, #112]
  412f08:	str	xzr, [x29, #120]
  412f0c:	str	xzr, [x29, #128]
  412f10:	ldr	x0, [x29, #48]
  412f14:	str	x0, [x29, #208]
  412f18:	ldr	x0, [x29, #56]
  412f1c:	cmp	x0, #0x0
  412f20:	cset	w0, eq  // eq = none
  412f24:	and	w0, w0, #0xff
  412f28:	and	x0, x0, #0xff
  412f2c:	cmp	x0, #0x0
  412f30:	b.eq	412f5c <bus_machine_method_open_shell+0xac>  // b.none
  412f34:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  412f38:	add	x1, x0, #0x543
  412f3c:	adrp	x0, 41c000 <__func__.8711+0xb30>
  412f40:	add	x4, x0, #0x810
  412f44:	mov	w3, #0x24c                 	// #588
  412f48:	mov	x2, x1
  412f4c:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  412f50:	add	x1, x0, #0x588
  412f54:	mov	w0, #0x0                   	// #0
  412f58:	bl	4052a0 <log_assert_failed_realm@plt>
  412f5c:	ldr	x0, [x29, #208]
  412f60:	cmp	x0, #0x0
  412f64:	cset	w0, eq  // eq = none
  412f68:	and	w0, w0, #0xff
  412f6c:	and	x0, x0, #0xff
  412f70:	cmp	x0, #0x0
  412f74:	b.eq	412fa0 <bus_machine_method_open_shell+0xf0>  // b.none
  412f78:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  412f7c:	add	x1, x0, #0x543
  412f80:	adrp	x0, 41c000 <__func__.8711+0xb30>
  412f84:	add	x4, x0, #0x810
  412f88:	mov	w3, #0x24d                 	// #589
  412f8c:	mov	x2, x1
  412f90:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  412f94:	add	x1, x0, #0x580
  412f98:	mov	w0, #0x0                   	// #0
  412f9c:	bl	4052a0 <log_assert_failed_realm@plt>
  412fa0:	add	x1, x29, #0x90
  412fa4:	add	x0, x29, #0x88
  412fa8:	mov	x3, x1
  412fac:	mov	x2, x0
  412fb0:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  412fb4:	add	x1, x0, #0xa18
  412fb8:	ldr	x0, [x29, #56]
  412fbc:	bl	4052b0 <sd_bus_message_read@plt>
  412fc0:	str	w0, [x29, #76]
  412fc4:	ldr	w0, [x29, #76]
  412fc8:	cmp	w0, #0x0
  412fcc:	b.ge	412fd8 <bus_machine_method_open_shell+0x128>  // b.tcont
  412fd0:	ldr	w19, [x29, #76]
  412fd4:	b	413e38 <bus_machine_method_open_shell+0xf88>
  412fd8:	ldr	x0, [x29, #136]
  412fdc:	bl	410b28 <empty_to_null>
  412fe0:	str	x0, [x29, #136]
  412fe4:	add	x0, x29, #0x78
  412fe8:	mov	x1, x0
  412fec:	ldr	x0, [x29, #56]
  412ff0:	bl	404e40 <sd_bus_message_read_strv@plt>
  412ff4:	str	w0, [x29, #76]
  412ff8:	ldr	w0, [x29, #76]
  412ffc:	cmp	w0, #0x0
  413000:	b.ge	41300c <bus_machine_method_open_shell+0x15c>  // b.tcont
  413004:	ldr	w19, [x29, #76]
  413008:	b	413e38 <bus_machine_method_open_shell+0xf88>
  41300c:	ldr	x0, [x29, #144]
  413010:	bl	410ae8 <isempty>
  413014:	and	w0, w0, #0xff
  413018:	cmp	w0, #0x0
  41301c:	b.eq	413114 <bus_machine_method_open_shell+0x264>  // b.none
  413020:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  413024:	add	x0, x0, #0xaa0
  413028:	str	x0, [x29, #144]
  41302c:	mov	x1, #0x8                   	// #8
  413030:	mov	x0, #0x4                   	// #4
  413034:	bl	4058a0 <calloc@plt>
  413038:	str	x0, [x29, #128]
  41303c:	ldr	x0, [x29, #128]
  413040:	cmp	x0, #0x0
  413044:	b.ne	413050 <bus_machine_method_open_shell+0x1a0>  // b.any
  413048:	mov	w19, #0xfffffff4            	// #-12
  41304c:	b	413e38 <bus_machine_method_open_shell+0xf88>
  413050:	ldr	x19, [x29, #128]
  413054:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  413058:	add	x0, x0, #0xaa8
  41305c:	bl	405890 <strdup@plt>
  413060:	str	x0, [x19]
  413064:	ldr	x0, [x29, #128]
  413068:	ldr	x0, [x0]
  41306c:	cmp	x0, #0x0
  413070:	b.ne	41307c <bus_machine_method_open_shell+0x1cc>  // b.any
  413074:	mov	w19, #0xfffffff4            	// #-12
  413078:	b	413e38 <bus_machine_method_open_shell+0xf88>
  41307c:	ldr	x0, [x29, #128]
  413080:	add	x19, x0, #0x8
  413084:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  413088:	add	x0, x0, #0xab0
  41308c:	bl	405890 <strdup@plt>
  413090:	str	x0, [x19]
  413094:	ldr	x0, [x29, #128]
  413098:	add	x0, x0, #0x8
  41309c:	ldr	x0, [x0]
  4130a0:	cmp	x0, #0x0
  4130a4:	b.ne	4130b0 <bus_machine_method_open_shell+0x200>  // b.any
  4130a8:	mov	w19, #0xfffffff4            	// #-12
  4130ac:	b	413e38 <bus_machine_method_open_shell+0xf88>
  4130b0:	ldr	x0, [x29, #128]
  4130b4:	add	x19, x0, #0x10
  4130b8:	ldr	x0, [x29, #136]
  4130bc:	bl	410ae8 <isempty>
  4130c0:	and	w0, w0, #0xff
  4130c4:	cmp	w0, #0x0
  4130c8:	b.ne	4130d4 <bus_machine_method_open_shell+0x224>  // b.any
  4130cc:	ldr	x0, [x29, #136]
  4130d0:	b	4130dc <bus_machine_method_open_shell+0x22c>
  4130d4:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  4130d8:	add	x0, x0, #0xab8
  4130dc:	mov	x2, x0
  4130e0:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  4130e4:	add	x1, x0, #0xac0
  4130e8:	mov	x0, x19
  4130ec:	bl	405950 <asprintf@plt>
  4130f0:	str	w0, [x29, #76]
  4130f4:	ldr	w0, [x29, #76]
  4130f8:	cmp	w0, #0x0
  4130fc:	b.ge	4131b0 <bus_machine_method_open_shell+0x300>  // b.tcont
  413100:	ldr	x0, [x29, #128]
  413104:	add	x0, x0, #0x10
  413108:	str	xzr, [x0]
  41310c:	mov	w19, #0xfffffff4            	// #-12
  413110:	b	413e38 <bus_machine_method_open_shell+0xf88>
  413114:	ldr	x0, [x29, #144]
  413118:	bl	405340 <path_is_absolute@plt>
  41311c:	and	w0, w0, #0xff
  413120:	eor	w0, w0, #0x1
  413124:	and	w0, w0, #0xff
  413128:	cmp	w0, #0x0
  41312c:	b.eq	413158 <bus_machine_method_open_shell+0x2a8>  // b.none
  413130:	ldr	x0, [x29, #144]
  413134:	mov	x3, x0
  413138:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  41313c:	add	x2, x0, #0xb30
  413140:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  413144:	add	x1, x0, #0x5e8
  413148:	ldr	x0, [x29, #40]
  41314c:	bl	4055d0 <sd_bus_error_setf@plt>
  413150:	mov	w19, w0
  413154:	b	413e38 <bus_machine_method_open_shell+0xf88>
  413158:	ldr	x0, [x29, #120]
  41315c:	str	x0, [x29, #216]
  413160:	str	xzr, [x29, #120]
  413164:	ldr	x0, [x29, #216]
  413168:	str	x0, [x29, #128]
  41316c:	ldr	x0, [x29, #128]
  413170:	bl	410dd8 <strv_isempty>
  413174:	and	w0, w0, #0xff
  413178:	cmp	w0, #0x0
  41317c:	b.eq	4131b0 <bus_machine_method_open_shell+0x300>  // b.none
  413180:	ldr	x0, [x29, #128]
  413184:	bl	4054e0 <strv_free@plt>
  413188:	str	x0, [x29, #128]
  41318c:	ldr	x0, [x29, #144]
  413190:	mov	x1, #0x0                   	// #0
  413194:	bl	405400 <strv_new_internal@plt>
  413198:	str	x0, [x29, #128]
  41319c:	ldr	x0, [x29, #128]
  4131a0:	cmp	x0, #0x0
  4131a4:	b.ne	4131b0 <bus_machine_method_open_shell+0x300>  // b.any
  4131a8:	mov	w19, #0xfffffff4            	// #-12
  4131ac:	b	413e38 <bus_machine_method_open_shell+0xf88>
  4131b0:	add	x0, x29, #0x70
  4131b4:	mov	x1, x0
  4131b8:	ldr	x0, [x29, #56]
  4131bc:	bl	404e40 <sd_bus_message_read_strv@plt>
  4131c0:	str	w0, [x29, #76]
  4131c4:	ldr	w0, [x29, #76]
  4131c8:	cmp	w0, #0x0
  4131cc:	b.ge	4131d8 <bus_machine_method_open_shell+0x328>  // b.tcont
  4131d0:	ldr	w19, [x29, #76]
  4131d4:	b	413e38 <bus_machine_method_open_shell+0xf88>
  4131d8:	ldr	x0, [x29, #112]
  4131dc:	bl	405250 <strv_env_is_valid@plt>
  4131e0:	and	w0, w0, #0xff
  4131e4:	eor	w0, w0, #0x1
  4131e8:	and	w0, w0, #0xff
  4131ec:	cmp	w0, #0x0
  4131f0:	b.eq	413214 <bus_machine_method_open_shell+0x364>  // b.none
  4131f4:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  4131f8:	add	x2, x0, #0xb58
  4131fc:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  413200:	add	x1, x0, #0x5e8
  413204:	ldr	x0, [x29, #40]
  413208:	bl	4055d0 <sd_bus_error_setf@plt>
  41320c:	mov	w19, w0
  413210:	b	413e38 <bus_machine_method_open_shell+0xf88>
  413214:	ldr	x0, [x29, #208]
  413218:	ldr	w0, [x0, #32]
  41321c:	cmp	w0, #0x2
  413220:	b.ne	413230 <bus_machine_method_open_shell+0x380>  // b.any
  413224:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  413228:	add	x0, x0, #0xb78
  41322c:	b	413238 <bus_machine_method_open_shell+0x388>
  413230:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  413234:	add	x0, x0, #0xba0
  413238:	ldr	x1, [x29, #208]
  41323c:	ldr	x1, [x1]
  413240:	add	x1, x1, #0x28
  413244:	ldr	x7, [x29, #40]
  413248:	mov	x6, x1
  41324c:	mov	w5, #0xffffffff            	// #-1
  413250:	mov	w4, #0x0                   	// #0
  413254:	mov	x3, #0x0                   	// #0
  413258:	mov	x2, x0
  41325c:	mov	w1, #0x15                  	// #21
  413260:	ldr	x0, [x29, #56]
  413264:	bl	405bb0 <bus_verify_polkit_async@plt>
  413268:	str	w0, [x29, #76]
  41326c:	ldr	w0, [x29, #76]
  413270:	cmp	w0, #0x0
  413274:	b.ge	413280 <bus_machine_method_open_shell+0x3d0>  // b.tcont
  413278:	ldr	w19, [x29, #76]
  41327c:	b	413e38 <bus_machine_method_open_shell+0xf88>
  413280:	ldr	w0, [x29, #76]
  413284:	cmp	w0, #0x0
  413288:	b.ne	413294 <bus_machine_method_open_shell+0x3e4>  // b.any
  41328c:	mov	w19, #0x1                   	// #1
  413290:	b	413e38 <bus_machine_method_open_shell+0xf88>
  413294:	add	x0, x29, #0x60
  413298:	mov	x2, x0
  41329c:	mov	w1, #0x102                 	// #258
  4132a0:	movk	w1, #0x8, lsl #16
  4132a4:	ldr	x0, [x29, #208]
  4132a8:	bl	40a5e4 <machine_openpt>
  4132ac:	str	w0, [x29, #68]
  4132b0:	ldr	w0, [x29, #68]
  4132b4:	cmp	w0, #0x0
  4132b8:	b.ge	4132c4 <bus_machine_method_open_shell+0x414>  // b.tcont
  4132bc:	ldr	w19, [x29, #68]
  4132c0:	b	413e38 <bus_machine_method_open_shell+0xf88>
  4132c4:	ldr	x2, [x29, #96]
  4132c8:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  4132cc:	add	x1, x0, #0x9d8
  4132d0:	mov	x0, x2
  4132d4:	bl	4054a0 <path_startswith@plt>
  4132d8:	str	x0, [x29, #224]
  4132dc:	ldr	x0, [x29, #224]
  4132e0:	cmp	x0, #0x0
  4132e4:	cset	w0, eq  // eq = none
  4132e8:	and	w0, w0, #0xff
  4132ec:	and	x0, x0, #0xff
  4132f0:	cmp	x0, #0x0
  4132f4:	b.eq	413320 <bus_machine_method_open_shell+0x470>  // b.none
  4132f8:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  4132fc:	add	x1, x0, #0x543
  413300:	adrp	x0, 41c000 <__func__.8711+0xb30>
  413304:	add	x4, x0, #0x810
  413308:	mov	w3, #0x290                 	// #656
  41330c:	mov	x2, x1
  413310:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  413314:	add	x1, x0, #0x9e8
  413318:	mov	w0, #0x0                   	// #0
  41331c:	bl	4052a0 <log_assert_failed_realm@plt>
  413320:	ldr	x0, [x29, #96]
  413324:	mov	w2, #0x102                 	// #258
  413328:	movk	w2, #0x8, lsl #16
  41332c:	mov	x1, x0
  413330:	ldr	x0, [x29, #208]
  413334:	bl	40a6a0 <machine_open_terminal>
  413338:	str	w0, [x29, #72]
  41333c:	ldr	w0, [x29, #72]
  413340:	cmp	w0, #0x0
  413344:	b.ge	413350 <bus_machine_method_open_shell+0x4a0>  // b.tcont
  413348:	ldr	w19, [x29, #72]
  41334c:	b	413e38 <bus_machine_method_open_shell+0xf88>
  413350:	ldr	x2, [x29, #96]
  413354:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  413358:	add	x1, x0, #0xbc0
  41335c:	mov	x0, x2
  413360:	bl	4054a0 <path_startswith@plt>
  413364:	str	x0, [x29, #232]
  413368:	ldr	x0, [x29, #232]
  41336c:	cmp	x0, #0x0
  413370:	cset	w0, eq  // eq = none
  413374:	and	w0, w0, #0xff
  413378:	and	x0, x0, #0xff
  41337c:	cmp	x0, #0x0
  413380:	b.eq	4133ac <bus_machine_method_open_shell+0x4fc>  // b.none
  413384:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  413388:	add	x1, x0, #0x543
  41338c:	adrp	x0, 41c000 <__func__.8711+0xb30>
  413390:	add	x4, x0, #0x810
  413394:	mov	w3, #0x297                 	// #663
  413398:	mov	x2, x1
  41339c:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  4133a0:	add	x1, x0, #0xbc8
  4133a4:	mov	w0, #0x0                   	// #0
  4133a8:	bl	4052a0 <log_assert_failed_realm@plt>
  4133ac:	add	x0, x29, #0x68
  4133b0:	mov	x2, x0
  4133b4:	ldr	x1, [x29, #40]
  4133b8:	ldr	x0, [x29, #208]
  4133bc:	bl	412760 <container_bus_new>
  4133c0:	str	w0, [x29, #76]
  4133c4:	ldr	w0, [x29, #76]
  4133c8:	cmp	w0, #0x0
  4133cc:	b.ge	4133d8 <bus_machine_method_open_shell+0x528>  // b.tcont
  4133d0:	ldr	w19, [x29, #76]
  4133d4:	b	413e38 <bus_machine_method_open_shell+0xf88>
  4133d8:	ldr	x0, [x29, #104]
  4133dc:	cmp	x0, #0x0
  4133e0:	b.ne	4133f0 <bus_machine_method_open_shell+0x540>  // b.any
  4133e4:	ldr	x0, [x29, #208]
  4133e8:	ldr	x0, [x0]
  4133ec:	ldr	x0, [x0, #8]
  4133f0:	str	x0, [x29, #200]
  4133f4:	add	x1, x29, #0x58
  4133f8:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  4133fc:	add	x5, x0, #0xbd0
  413400:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  413404:	add	x4, x0, #0xa30
  413408:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  41340c:	add	x3, x0, #0xa58
  413410:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  413414:	add	x2, x0, #0xa78
  413418:	ldr	x0, [x29, #200]
  41341c:	bl	404ea0 <sd_bus_message_new_method_call@plt>
  413420:	str	w0, [x29, #76]
  413424:	ldr	w0, [x29, #76]
  413428:	cmp	w0, #0x0
  41342c:	b.ge	413438 <bus_machine_method_open_shell+0x588>  // b.tcont
  413430:	ldr	w19, [x29, #76]
  413434:	b	413e38 <bus_machine_method_open_shell+0xf88>
  413438:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  41343c:	add	x0, x0, #0xbe8
  413440:	str	x0, [x29, #288]
  413444:	ldr	x0, [x29, #224]
  413448:	str	x0, [x29, #296]
  41344c:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  413450:	add	x0, x0, #0xa08
  413454:	str	x0, [x29, #304]
  413458:	str	xzr, [x29, #160]
  41345c:	str	xzr, [x29, #168]
  413460:	b	413494 <bus_machine_method_open_shell+0x5e4>
  413464:	ldr	x0, [x29, #168]
  413468:	lsl	x0, x0, #3
  41346c:	add	x1, x29, #0x120
  413470:	ldr	x0, [x1, x0]
  413474:	bl	405b50 <strlen@plt>
  413478:	mov	x1, x0
  41347c:	ldr	x0, [x29, #160]
  413480:	add	x0, x0, x1
  413484:	str	x0, [x29, #160]
  413488:	ldr	x0, [x29, #168]
  41348c:	add	x0, x0, #0x1
  413490:	str	x0, [x29, #168]
  413494:	ldr	x0, [x29, #168]
  413498:	cmp	x0, #0x2
  41349c:	b.hi	4134b8 <bus_machine_method_open_shell+0x608>  // b.pmore
  4134a0:	ldr	x0, [x29, #168]
  4134a4:	lsl	x0, x0, #3
  4134a8:	add	x1, x29, #0x120
  4134ac:	ldr	x0, [x1, x0]
  4134b0:	cmp	x0, #0x0
  4134b4:	b.ne	413464 <bus_machine_method_open_shell+0x5b4>  // b.any
  4134b8:	ldr	x0, [x29, #160]
  4134bc:	add	x0, x0, #0x1
  4134c0:	str	x0, [x29, #240]
  4134c4:	ldr	x1, [x29, #240]
  4134c8:	mov	x0, #0x1                   	// #1
  4134cc:	bl	410940 <size_multiply_overflow>
  4134d0:	and	w0, w0, #0xff
  4134d4:	and	x0, x0, #0xff
  4134d8:	cmp	x0, #0x0
  4134dc:	b.eq	413508 <bus_machine_method_open_shell+0x658>  // b.none
  4134e0:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  4134e4:	add	x1, x0, #0x543
  4134e8:	adrp	x0, 41c000 <__func__.8711+0xb30>
  4134ec:	add	x4, x0, #0x810
  4134f0:	mov	w3, #0x2aa                 	// #682
  4134f4:	mov	x2, x1
  4134f8:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  4134fc:	add	x1, x0, #0x658
  413500:	mov	w0, #0x0                   	// #0
  413504:	bl	4052a0 <log_assert_failed_realm@plt>
  413508:	ldr	x0, [x29, #240]
  41350c:	cmp	x0, #0x400, lsl #12
  413510:	cset	w0, hi  // hi = pmore
  413514:	and	w0, w0, #0xff
  413518:	and	x0, x0, #0xff
  41351c:	cmp	x0, #0x0
  413520:	b.eq	41354c <bus_machine_method_open_shell+0x69c>  // b.none
  413524:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  413528:	add	x1, x0, #0x543
  41352c:	adrp	x0, 41c000 <__func__.8711+0xb30>
  413530:	add	x4, x0, #0x810
  413534:	mov	w3, #0x2aa                 	// #682
  413538:	mov	x2, x1
  41353c:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  413540:	add	x1, x0, #0x688
  413544:	mov	w0, #0x0                   	// #0
  413548:	bl	4052a0 <log_assert_failed_realm@plt>
  41354c:	ldr	x0, [x29, #240]
  413550:	add	x0, x0, #0xf
  413554:	lsr	x0, x0, #4
  413558:	lsl	x0, x0, #4
  41355c:	sub	sp, sp, x0
  413560:	add	x0, sp, #0xf0
  413564:	add	x0, x0, #0xf
  413568:	lsr	x0, x0, #4
  41356c:	lsl	x0, x0, #4
  413570:	str	x0, [x29, #248]
  413574:	ldr	x0, [x29, #248]
  413578:	str	x0, [x29, #152]
  41357c:	str	xzr, [x29, #168]
  413580:	b	4135b0 <bus_machine_method_open_shell+0x700>
  413584:	ldr	x0, [x29, #168]
  413588:	lsl	x0, x0, #3
  41358c:	add	x1, x29, #0x120
  413590:	ldr	x0, [x1, x0]
  413594:	mov	x1, x0
  413598:	ldr	x0, [x29, #152]
  41359c:	bl	404f50 <stpcpy@plt>
  4135a0:	str	x0, [x29, #152]
  4135a4:	ldr	x0, [x29, #168]
  4135a8:	add	x0, x0, #0x1
  4135ac:	str	x0, [x29, #168]
  4135b0:	ldr	x0, [x29, #168]
  4135b4:	cmp	x0, #0x2
  4135b8:	b.hi	4135d4 <bus_machine_method_open_shell+0x724>  // b.pmore
  4135bc:	ldr	x0, [x29, #168]
  4135c0:	lsl	x0, x0, #3
  4135c4:	add	x1, x29, #0x120
  4135c8:	ldr	x0, [x1, x0]
  4135cc:	cmp	x0, #0x0
  4135d0:	b.ne	413584 <bus_machine_method_open_shell+0x6d4>  // b.any
  4135d4:	ldr	x0, [x29, #152]
  4135d8:	strb	wzr, [x0]
  4135dc:	ldr	x0, [x29, #248]
  4135e0:	str	x0, [x29, #256]
  4135e4:	ldr	x4, [x29, #88]
  4135e8:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  4135ec:	add	x3, x0, #0xc00
  4135f0:	ldr	x2, [x29, #256]
  4135f4:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  4135f8:	add	x1, x0, #0xa18
  4135fc:	mov	x0, x4
  413600:	bl	4051f0 <sd_bus_message_append@plt>
  413604:	str	w0, [x29, #76]
  413608:	ldr	w0, [x29, #76]
  41360c:	cmp	w0, #0x0
  413610:	b.ge	41361c <bus_machine_method_open_shell+0x76c>  // b.tcont
  413614:	ldr	w19, [x29, #76]
  413618:	b	413e38 <bus_machine_method_open_shell+0xf88>
  41361c:	ldr	x3, [x29, #88]
  413620:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  413624:	add	x2, x0, #0xc08
  413628:	mov	w1, #0x61                  	// #97
  41362c:	mov	x0, x3
  413630:	bl	405140 <sd_bus_message_open_container@plt>
  413634:	str	w0, [x29, #76]
  413638:	ldr	w0, [x29, #76]
  41363c:	cmp	w0, #0x0
  413640:	b.ge	41364c <bus_machine_method_open_shell+0x79c>  // b.tcont
  413644:	ldr	w19, [x29, #76]
  413648:	b	413e38 <bus_machine_method_open_shell+0xf88>
  41364c:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  413650:	add	x0, x0, #0xc10
  413654:	str	x0, [x29, #288]
  413658:	ldr	x0, [x29, #136]
  41365c:	bl	410ae8 <isempty>
  413660:	and	w0, w0, #0xff
  413664:	eor	w0, w0, #0x1
  413668:	and	w0, w0, #0xff
  41366c:	cmp	w0, #0x0
  413670:	b.eq	41367c <bus_machine_method_open_shell+0x7cc>  // b.none
  413674:	ldr	x0, [x29, #136]
  413678:	b	413684 <bus_machine_method_open_shell+0x7d4>
  41367c:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  413680:	add	x0, x0, #0xab8
  413684:	str	x0, [x29, #296]
  413688:	str	xzr, [x29, #184]
  41368c:	str	xzr, [x29, #192]
  413690:	b	4136c4 <bus_machine_method_open_shell+0x814>
  413694:	ldr	x0, [x29, #192]
  413698:	lsl	x0, x0, #3
  41369c:	add	x1, x29, #0x120
  4136a0:	ldr	x0, [x1, x0]
  4136a4:	bl	405b50 <strlen@plt>
  4136a8:	mov	x1, x0
  4136ac:	ldr	x0, [x29, #184]
  4136b0:	add	x0, x0, x1
  4136b4:	str	x0, [x29, #184]
  4136b8:	ldr	x0, [x29, #192]
  4136bc:	add	x0, x0, #0x1
  4136c0:	str	x0, [x29, #192]
  4136c4:	ldr	x0, [x29, #192]
  4136c8:	cmp	x0, #0x1
  4136cc:	b.hi	4136e8 <bus_machine_method_open_shell+0x838>  // b.pmore
  4136d0:	ldr	x0, [x29, #192]
  4136d4:	lsl	x0, x0, #3
  4136d8:	add	x1, x29, #0x120
  4136dc:	ldr	x0, [x1, x0]
  4136e0:	cmp	x0, #0x0
  4136e4:	b.ne	413694 <bus_machine_method_open_shell+0x7e4>  // b.any
  4136e8:	ldr	x0, [x29, #184]
  4136ec:	add	x0, x0, #0x1
  4136f0:	str	x0, [x29, #264]
  4136f4:	ldr	x1, [x29, #264]
  4136f8:	mov	x0, #0x1                   	// #1
  4136fc:	bl	410940 <size_multiply_overflow>
  413700:	and	w0, w0, #0xff
  413704:	and	x0, x0, #0xff
  413708:	cmp	x0, #0x0
  41370c:	b.eq	413738 <bus_machine_method_open_shell+0x888>  // b.none
  413710:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  413714:	add	x1, x0, #0x543
  413718:	adrp	x0, 41c000 <__func__.8711+0xb30>
  41371c:	add	x4, x0, #0x810
  413720:	mov	w3, #0x2b4                 	// #692
  413724:	mov	x2, x1
  413728:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  41372c:	add	x1, x0, #0x658
  413730:	mov	w0, #0x0                   	// #0
  413734:	bl	4052a0 <log_assert_failed_realm@plt>
  413738:	ldr	x0, [x29, #264]
  41373c:	cmp	x0, #0x400, lsl #12
  413740:	cset	w0, hi  // hi = pmore
  413744:	and	w0, w0, #0xff
  413748:	and	x0, x0, #0xff
  41374c:	cmp	x0, #0x0
  413750:	b.eq	41377c <bus_machine_method_open_shell+0x8cc>  // b.none
  413754:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  413758:	add	x1, x0, #0x543
  41375c:	adrp	x0, 41c000 <__func__.8711+0xb30>
  413760:	add	x4, x0, #0x810
  413764:	mov	w3, #0x2b4                 	// #692
  413768:	mov	x2, x1
  41376c:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  413770:	add	x1, x0, #0x688
  413774:	mov	w0, #0x0                   	// #0
  413778:	bl	4052a0 <log_assert_failed_realm@plt>
  41377c:	ldr	x0, [x29, #264]
  413780:	add	x0, x0, #0xf
  413784:	lsr	x0, x0, #4
  413788:	lsl	x0, x0, #4
  41378c:	sub	sp, sp, x0
  413790:	add	x0, sp, #0xf0
  413794:	add	x0, x0, #0xf
  413798:	lsr	x0, x0, #4
  41379c:	lsl	x0, x0, #4
  4137a0:	str	x0, [x29, #272]
  4137a4:	ldr	x0, [x29, #272]
  4137a8:	str	x0, [x29, #176]
  4137ac:	str	xzr, [x29, #192]
  4137b0:	b	4137e0 <bus_machine_method_open_shell+0x930>
  4137b4:	ldr	x0, [x29, #192]
  4137b8:	lsl	x0, x0, #3
  4137bc:	add	x1, x29, #0x120
  4137c0:	ldr	x0, [x1, x0]
  4137c4:	mov	x1, x0
  4137c8:	ldr	x0, [x29, #176]
  4137cc:	bl	404f50 <stpcpy@plt>
  4137d0:	str	x0, [x29, #176]
  4137d4:	ldr	x0, [x29, #192]
  4137d8:	add	x0, x0, #0x1
  4137dc:	str	x0, [x29, #192]
  4137e0:	ldr	x0, [x29, #192]
  4137e4:	cmp	x0, #0x1
  4137e8:	b.hi	413804 <bus_machine_method_open_shell+0x954>  // b.pmore
  4137ec:	ldr	x0, [x29, #192]
  4137f0:	lsl	x0, x0, #3
  4137f4:	add	x1, x29, #0x120
  4137f8:	ldr	x0, [x1, x0]
  4137fc:	cmp	x0, #0x0
  413800:	b.ne	4137b4 <bus_machine_method_open_shell+0x904>  // b.any
  413804:	ldr	x0, [x29, #176]
  413808:	strb	wzr, [x0]
  41380c:	ldr	x0, [x29, #272]
  413810:	str	x0, [x29, #280]
  413814:	ldr	x8, [x29, #88]
  413818:	ldr	w3, [x29, #72]
  41381c:	ldr	w0, [x29, #72]
  413820:	ldr	w1, [x29, #72]
  413824:	adrp	x2, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  413828:	add	x2, x2, #0xc90
  41382c:	str	x2, [sp, #232]
  413830:	adrp	x2, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  413834:	add	x2, x2, #0x578
  413838:	str	x2, [sp, #224]
  41383c:	adrp	x2, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  413840:	add	x2, x2, #0xc98
  413844:	str	x2, [sp, #216]
  413848:	adrp	x2, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  41384c:	add	x2, x2, #0xcb0
  413850:	str	x2, [sp, #208]
  413854:	adrp	x2, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  413858:	add	x2, x2, #0x578
  41385c:	str	x2, [sp, #200]
  413860:	adrp	x2, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  413864:	add	x2, x2, #0xcb8
  413868:	str	x2, [sp, #192]
  41386c:	adrp	x2, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  413870:	add	x2, x2, #0xcc0
  413874:	str	x2, [sp, #184]
  413878:	adrp	x2, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  41387c:	add	x2, x2, #0x578
  413880:	str	x2, [sp, #176]
  413884:	adrp	x2, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  413888:	add	x2, x2, #0xcc8
  41388c:	str	x2, [sp, #168]
  413890:	ldr	x2, [x29, #232]
  413894:	str	x2, [sp, #160]
  413898:	adrp	x2, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  41389c:	add	x2, x2, #0x578
  4138a0:	str	x2, [sp, #152]
  4138a4:	adrp	x2, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  4138a8:	add	x2, x2, #0xcd8
  4138ac:	str	x2, [sp, #144]
  4138b0:	mov	w2, #0x1                   	// #1
  4138b4:	str	w2, [sp, #136]
  4138b8:	adrp	x2, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  4138bc:	add	x2, x2, #0xce8
  4138c0:	str	x2, [sp, #128]
  4138c4:	adrp	x2, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  4138c8:	add	x2, x2, #0xcf0
  4138cc:	str	x2, [sp, #120]
  4138d0:	adrp	x2, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  4138d4:	add	x2, x2, #0xd00
  4138d8:	str	x2, [sp, #112]
  4138dc:	adrp	x2, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  4138e0:	add	x2, x2, #0x578
  4138e4:	str	x2, [sp, #104]
  4138e8:	adrp	x2, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  4138ec:	add	x2, x2, #0xd08
  4138f0:	str	x2, [sp, #96]
  4138f4:	str	wzr, [sp, #88]
  4138f8:	adrp	x2, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  4138fc:	add	x2, x2, #0xce8
  413900:	str	x2, [sp, #80]
  413904:	adrp	x2, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  413908:	add	x2, x2, #0xd18
  41390c:	str	x2, [sp, #72]
  413910:	mov	w2, #0x1                   	// #1
  413914:	str	w2, [sp, #64]
  413918:	adrp	x2, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  41391c:	add	x2, x2, #0xce8
  413920:	str	x2, [sp, #56]
  413924:	adrp	x2, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  413928:	add	x2, x2, #0xd28
  41392c:	str	x2, [sp, #48]
  413930:	str	w1, [sp, #40]
  413934:	adrp	x1, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  413938:	add	x1, x1, #0xc20
  41393c:	str	x1, [sp, #32]
  413940:	adrp	x1, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  413944:	add	x1, x1, #0xd38
  413948:	str	x1, [sp, #24]
  41394c:	str	w0, [sp, #16]
  413950:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  413954:	add	x0, x0, #0xc20
  413958:	str	x0, [sp, #8]
  41395c:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  413960:	add	x0, x0, #0xd58
  413964:	str	x0, [sp]
  413968:	mov	w7, w3
  41396c:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  413970:	add	x6, x0, #0xc20
  413974:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  413978:	add	x5, x0, #0xc28
  41397c:	ldr	x4, [x29, #280]
  413980:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  413984:	add	x3, x0, #0x578
  413988:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  41398c:	add	x2, x0, #0xc48
  413990:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  413994:	add	x1, x0, #0xc58
  413998:	mov	x0, x8
  41399c:	bl	4051f0 <sd_bus_message_append@plt>
  4139a0:	str	w0, [x29, #76]
  4139a4:	ldr	w0, [x29, #76]
  4139a8:	cmp	w0, #0x0
  4139ac:	b.ge	4139b8 <bus_machine_method_open_shell+0xb08>  // b.tcont
  4139b0:	ldr	w19, [x29, #76]
  4139b4:	b	413e38 <bus_machine_method_open_shell+0xf88>
  4139b8:	ldr	x19, [x29, #88]
  4139bc:	ldr	x0, [x29, #136]
  4139c0:	bl	410ae8 <isempty>
  4139c4:	and	w0, w0, #0xff
  4139c8:	cmp	w0, #0x0
  4139cc:	b.ne	4139d8 <bus_machine_method_open_shell+0xb28>  // b.any
  4139d0:	ldr	x0, [x29, #136]
  4139d4:	b	4139e0 <bus_machine_method_open_shell+0xb30>
  4139d8:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  4139dc:	add	x0, x0, #0xab8
  4139e0:	mov	x4, x0
  4139e4:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  4139e8:	add	x3, x0, #0x578
  4139ec:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  4139f0:	add	x2, x0, #0xd78
  4139f4:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  4139f8:	add	x1, x0, #0xc08
  4139fc:	mov	x0, x19
  413a00:	bl	4051f0 <sd_bus_message_append@plt>
  413a04:	str	w0, [x29, #76]
  413a08:	ldr	w0, [x29, #76]
  413a0c:	cmp	w0, #0x0
  413a10:	b.ge	413a1c <bus_machine_method_open_shell+0xb6c>  // b.tcont
  413a14:	ldr	w19, [x29, #76]
  413a18:	b	413e38 <bus_machine_method_open_shell+0xf88>
  413a1c:	ldr	x0, [x29, #112]
  413a20:	bl	410dd8 <strv_isempty>
  413a24:	and	w0, w0, #0xff
  413a28:	eor	w0, w0, #0x1
  413a2c:	and	w0, w0, #0xff
  413a30:	cmp	w0, #0x0
  413a34:	b.eq	413b30 <bus_machine_method_open_shell+0xc80>  // b.none
  413a38:	ldr	x3, [x29, #88]
  413a3c:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  413a40:	add	x2, x0, #0xd80
  413a44:	mov	w1, #0x72                  	// #114
  413a48:	mov	x0, x3
  413a4c:	bl	405140 <sd_bus_message_open_container@plt>
  413a50:	str	w0, [x29, #76]
  413a54:	ldr	w0, [x29, #76]
  413a58:	cmp	w0, #0x0
  413a5c:	b.ge	413a68 <bus_machine_method_open_shell+0xbb8>  // b.tcont
  413a60:	ldr	w19, [x29, #76]
  413a64:	b	413e38 <bus_machine_method_open_shell+0xf88>
  413a68:	ldr	x3, [x29, #88]
  413a6c:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  413a70:	add	x2, x0, #0xd88
  413a74:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  413a78:	add	x1, x0, #0x578
  413a7c:	mov	x0, x3
  413a80:	bl	4051f0 <sd_bus_message_append@plt>
  413a84:	str	w0, [x29, #76]
  413a88:	ldr	w0, [x29, #76]
  413a8c:	cmp	w0, #0x0
  413a90:	b.ge	413a9c <bus_machine_method_open_shell+0xbec>  // b.tcont
  413a94:	ldr	w19, [x29, #76]
  413a98:	b	413e38 <bus_machine_method_open_shell+0xf88>
  413a9c:	ldr	x3, [x29, #88]
  413aa0:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  413aa4:	add	x2, x0, #0xd98
  413aa8:	mov	w1, #0x76                  	// #118
  413aac:	mov	x0, x3
  413ab0:	bl	405140 <sd_bus_message_open_container@plt>
  413ab4:	str	w0, [x29, #76]
  413ab8:	ldr	w0, [x29, #76]
  413abc:	cmp	w0, #0x0
  413ac0:	b.ge	413acc <bus_machine_method_open_shell+0xc1c>  // b.tcont
  413ac4:	ldr	w19, [x29, #76]
  413ac8:	b	413e38 <bus_machine_method_open_shell+0xf88>
  413acc:	ldr	x0, [x29, #88]
  413ad0:	ldr	x1, [x29, #112]
  413ad4:	bl	405960 <sd_bus_message_append_strv@plt>
  413ad8:	str	w0, [x29, #76]
  413adc:	ldr	w0, [x29, #76]
  413ae0:	cmp	w0, #0x0
  413ae4:	b.ge	413af0 <bus_machine_method_open_shell+0xc40>  // b.tcont
  413ae8:	ldr	w19, [x29, #76]
  413aec:	b	413e38 <bus_machine_method_open_shell+0xf88>
  413af0:	ldr	x0, [x29, #88]
  413af4:	bl	405c30 <sd_bus_message_close_container@plt>
  413af8:	str	w0, [x29, #76]
  413afc:	ldr	w0, [x29, #76]
  413b00:	cmp	w0, #0x0
  413b04:	b.ge	413b10 <bus_machine_method_open_shell+0xc60>  // b.tcont
  413b08:	ldr	w19, [x29, #76]
  413b0c:	b	413e38 <bus_machine_method_open_shell+0xf88>
  413b10:	ldr	x0, [x29, #88]
  413b14:	bl	405c30 <sd_bus_message_close_container@plt>
  413b18:	str	w0, [x29, #76]
  413b1c:	ldr	w0, [x29, #76]
  413b20:	cmp	w0, #0x0
  413b24:	b.ge	413b30 <bus_machine_method_open_shell+0xc80>  // b.tcont
  413b28:	ldr	w19, [x29, #76]
  413b2c:	b	413e38 <bus_machine_method_open_shell+0xf88>
  413b30:	ldr	x3, [x29, #88]
  413b34:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  413b38:	add	x2, x0, #0xd80
  413b3c:	mov	w1, #0x72                  	// #114
  413b40:	mov	x0, x3
  413b44:	bl	405140 <sd_bus_message_open_container@plt>
  413b48:	str	w0, [x29, #76]
  413b4c:	ldr	w0, [x29, #76]
  413b50:	cmp	w0, #0x0
  413b54:	b.ge	413b60 <bus_machine_method_open_shell+0xcb0>  // b.tcont
  413b58:	ldr	w19, [x29, #76]
  413b5c:	b	413e38 <bus_machine_method_open_shell+0xf88>
  413b60:	ldr	x3, [x29, #88]
  413b64:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  413b68:	add	x2, x0, #0xda0
  413b6c:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  413b70:	add	x1, x0, #0x578
  413b74:	mov	x0, x3
  413b78:	bl	4051f0 <sd_bus_message_append@plt>
  413b7c:	str	w0, [x29, #76]
  413b80:	ldr	w0, [x29, #76]
  413b84:	cmp	w0, #0x0
  413b88:	b.ge	413b94 <bus_machine_method_open_shell+0xce4>  // b.tcont
  413b8c:	ldr	w19, [x29, #76]
  413b90:	b	413e38 <bus_machine_method_open_shell+0xf88>
  413b94:	ldr	x3, [x29, #88]
  413b98:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  413b9c:	add	x2, x0, #0xdb0
  413ba0:	mov	w1, #0x76                  	// #118
  413ba4:	mov	x0, x3
  413ba8:	bl	405140 <sd_bus_message_open_container@plt>
  413bac:	str	w0, [x29, #76]
  413bb0:	ldr	w0, [x29, #76]
  413bb4:	cmp	w0, #0x0
  413bb8:	b.ge	413bc4 <bus_machine_method_open_shell+0xd14>  // b.tcont
  413bbc:	ldr	w19, [x29, #76]
  413bc0:	b	413e38 <bus_machine_method_open_shell+0xf88>
  413bc4:	ldr	x3, [x29, #88]
  413bc8:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  413bcc:	add	x2, x0, #0xdb8
  413bd0:	mov	w1, #0x61                  	// #97
  413bd4:	mov	x0, x3
  413bd8:	bl	405140 <sd_bus_message_open_container@plt>
  413bdc:	str	w0, [x29, #76]
  413be0:	ldr	w0, [x29, #76]
  413be4:	cmp	w0, #0x0
  413be8:	b.ge	413bf4 <bus_machine_method_open_shell+0xd44>  // b.tcont
  413bec:	ldr	w19, [x29, #76]
  413bf0:	b	413e38 <bus_machine_method_open_shell+0xf88>
  413bf4:	ldr	x3, [x29, #88]
  413bf8:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  413bfc:	add	x2, x0, #0xdc0
  413c00:	mov	w1, #0x72                  	// #114
  413c04:	mov	x0, x3
  413c08:	bl	405140 <sd_bus_message_open_container@plt>
  413c0c:	str	w0, [x29, #76]
  413c10:	ldr	w0, [x29, #76]
  413c14:	cmp	w0, #0x0
  413c18:	b.ge	413c24 <bus_machine_method_open_shell+0xd74>  // b.tcont
  413c1c:	ldr	w19, [x29, #76]
  413c20:	b	413e38 <bus_machine_method_open_shell+0xf88>
  413c24:	ldr	x3, [x29, #88]
  413c28:	ldr	x0, [x29, #144]
  413c2c:	mov	x2, x0
  413c30:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  413c34:	add	x1, x0, #0x578
  413c38:	mov	x0, x3
  413c3c:	bl	4051f0 <sd_bus_message_append@plt>
  413c40:	str	w0, [x29, #76]
  413c44:	ldr	w0, [x29, #76]
  413c48:	cmp	w0, #0x0
  413c4c:	b.ge	413c58 <bus_machine_method_open_shell+0xda8>  // b.tcont
  413c50:	ldr	w19, [x29, #76]
  413c54:	b	413e38 <bus_machine_method_open_shell+0xf88>
  413c58:	ldr	x0, [x29, #88]
  413c5c:	ldr	x1, [x29, #128]
  413c60:	bl	405960 <sd_bus_message_append_strv@plt>
  413c64:	str	w0, [x29, #76]
  413c68:	ldr	w0, [x29, #76]
  413c6c:	cmp	w0, #0x0
  413c70:	b.ge	413c7c <bus_machine_method_open_shell+0xdcc>  // b.tcont
  413c74:	ldr	w19, [x29, #76]
  413c78:	b	413e38 <bus_machine_method_open_shell+0xf88>
  413c7c:	ldr	x3, [x29, #88]
  413c80:	mov	w2, #0x1                   	// #1
  413c84:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  413c88:	add	x1, x0, #0xce8
  413c8c:	mov	x0, x3
  413c90:	bl	4051f0 <sd_bus_message_append@plt>
  413c94:	str	w0, [x29, #76]
  413c98:	ldr	w0, [x29, #76]
  413c9c:	cmp	w0, #0x0
  413ca0:	b.ge	413cac <bus_machine_method_open_shell+0xdfc>  // b.tcont
  413ca4:	ldr	w19, [x29, #76]
  413ca8:	b	413e38 <bus_machine_method_open_shell+0xf88>
  413cac:	ldr	x0, [x29, #88]
  413cb0:	bl	405c30 <sd_bus_message_close_container@plt>
  413cb4:	str	w0, [x29, #76]
  413cb8:	ldr	w0, [x29, #76]
  413cbc:	cmp	w0, #0x0
  413cc0:	b.ge	413ccc <bus_machine_method_open_shell+0xe1c>  // b.tcont
  413cc4:	ldr	w19, [x29, #76]
  413cc8:	b	413e38 <bus_machine_method_open_shell+0xf88>
  413ccc:	ldr	x0, [x29, #88]
  413cd0:	bl	405c30 <sd_bus_message_close_container@plt>
  413cd4:	str	w0, [x29, #76]
  413cd8:	ldr	w0, [x29, #76]
  413cdc:	cmp	w0, #0x0
  413ce0:	b.ge	413cec <bus_machine_method_open_shell+0xe3c>  // b.tcont
  413ce4:	ldr	w19, [x29, #76]
  413ce8:	b	413e38 <bus_machine_method_open_shell+0xf88>
  413cec:	ldr	x0, [x29, #88]
  413cf0:	bl	405c30 <sd_bus_message_close_container@plt>
  413cf4:	str	w0, [x29, #76]
  413cf8:	ldr	w0, [x29, #76]
  413cfc:	cmp	w0, #0x0
  413d00:	b.ge	413d0c <bus_machine_method_open_shell+0xe5c>  // b.tcont
  413d04:	ldr	w19, [x29, #76]
  413d08:	b	413e38 <bus_machine_method_open_shell+0xf88>
  413d0c:	ldr	x0, [x29, #88]
  413d10:	bl	405c30 <sd_bus_message_close_container@plt>
  413d14:	str	w0, [x29, #76]
  413d18:	ldr	w0, [x29, #76]
  413d1c:	cmp	w0, #0x0
  413d20:	b.ge	413d2c <bus_machine_method_open_shell+0xe7c>  // b.tcont
  413d24:	ldr	w19, [x29, #76]
  413d28:	b	413e38 <bus_machine_method_open_shell+0xf88>
  413d2c:	ldr	x0, [x29, #88]
  413d30:	bl	405c30 <sd_bus_message_close_container@plt>
  413d34:	str	w0, [x29, #76]
  413d38:	ldr	w0, [x29, #76]
  413d3c:	cmp	w0, #0x0
  413d40:	b.ge	413d4c <bus_machine_method_open_shell+0xe9c>  // b.tcont
  413d44:	ldr	w19, [x29, #76]
  413d48:	b	413e38 <bus_machine_method_open_shell+0xf88>
  413d4c:	ldr	x3, [x29, #88]
  413d50:	mov	w2, #0x0                   	// #0
  413d54:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  413d58:	add	x1, x0, #0xdc8
  413d5c:	mov	x0, x3
  413d60:	bl	4051f0 <sd_bus_message_append@plt>
  413d64:	str	w0, [x29, #76]
  413d68:	ldr	w0, [x29, #76]
  413d6c:	cmp	w0, #0x0
  413d70:	b.ge	413d7c <bus_machine_method_open_shell+0xecc>  // b.tcont
  413d74:	ldr	w19, [x29, #76]
  413d78:	b	413e38 <bus_machine_method_open_shell+0xf88>
  413d7c:	ldr	x0, [x29, #88]
  413d80:	mov	x4, #0x0                   	// #0
  413d84:	ldr	x3, [x29, #40]
  413d88:	mov	x2, #0x0                   	// #0
  413d8c:	mov	x1, x0
  413d90:	ldr	x0, [x29, #200]
  413d94:	bl	4056d0 <sd_bus_call@plt>
  413d98:	str	w0, [x29, #76]
  413d9c:	ldr	w0, [x29, #76]
  413da0:	cmp	w0, #0x0
  413da4:	b.ge	413db0 <bus_machine_method_open_shell+0xf00>  // b.tcont
  413da8:	ldr	w19, [x29, #76]
  413dac:	b	413e38 <bus_machine_method_open_shell+0xf88>
  413db0:	ldr	w0, [x29, #72]
  413db4:	bl	405240 <safe_close@plt>
  413db8:	str	w0, [x29, #72]
  413dbc:	add	x0, x29, #0x50
  413dc0:	mov	x1, x0
  413dc4:	ldr	x0, [x29, #56]
  413dc8:	bl	4050d0 <sd_bus_message_new_method_return@plt>
  413dcc:	str	w0, [x29, #76]
  413dd0:	ldr	w0, [x29, #76]
  413dd4:	cmp	w0, #0x0
  413dd8:	b.ge	413de4 <bus_machine_method_open_shell+0xf34>  // b.tcont
  413ddc:	ldr	w19, [x29, #76]
  413de0:	b	413e38 <bus_machine_method_open_shell+0xf88>
  413de4:	ldr	x4, [x29, #80]
  413de8:	ldr	w0, [x29, #68]
  413dec:	ldr	x1, [x29, #96]
  413df0:	mov	x3, x1
  413df4:	mov	w2, w0
  413df8:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  413dfc:	add	x1, x0, #0x920
  413e00:	mov	x0, x4
  413e04:	bl	4051f0 <sd_bus_message_append@plt>
  413e08:	str	w0, [x29, #76]
  413e0c:	ldr	w0, [x29, #76]
  413e10:	cmp	w0, #0x0
  413e14:	b.ge	413e20 <bus_machine_method_open_shell+0xf70>  // b.tcont
  413e18:	ldr	w19, [x29, #76]
  413e1c:	b	413e38 <bus_machine_method_open_shell+0xf88>
  413e20:	ldr	x0, [x29, #80]
  413e24:	mov	x2, #0x0                   	// #0
  413e28:	mov	x1, x0
  413e2c:	mov	x0, #0x0                   	// #0
  413e30:	bl	405600 <sd_bus_send@plt>
  413e34:	mov	w19, w0
  413e38:	add	x0, x29, #0x80
  413e3c:	bl	410da4 <strv_freep>
  413e40:	add	x0, x29, #0x78
  413e44:	bl	410da4 <strv_freep>
  413e48:	add	x0, x29, #0x70
  413e4c:	bl	410da4 <strv_freep>
  413e50:	add	x0, x29, #0x48
  413e54:	bl	410ca8 <closep>
  413e58:	add	x0, x29, #0x44
  413e5c:	bl	410ca8 <closep>
  413e60:	add	x0, x29, #0x68
  413e64:	bl	4109f0 <sd_bus_flush_close_unrefp>
  413e68:	add	x0, x29, #0x60
  413e6c:	bl	41091c <freep>
  413e70:	add	x0, x29, #0x58
  413e74:	bl	410a24 <sd_bus_message_unrefp>
  413e78:	add	x0, x29, #0x50
  413e7c:	bl	410a24 <sd_bus_message_unrefp>
  413e80:	mov	w1, w19
  413e84:	adrp	x0, 431000 <machine_vtable+0x4a0>
  413e88:	ldr	x0, [x0, #3952]
  413e8c:	ldr	x2, [x29, #312]
  413e90:	ldr	x0, [x0]
  413e94:	eor	x0, x2, x0
  413e98:	cmp	x0, #0x0
  413e9c:	b.eq	413ea4 <bus_machine_method_open_shell+0xff4>  // b.none
  413ea0:	bl	4055f0 <__stack_chk_fail@plt>
  413ea4:	mov	w0, w1
  413ea8:	mov	sp, x29
  413eac:	ldr	x19, [sp, #16]
  413eb0:	ldp	x29, x30, [sp], #320
  413eb4:	ret

0000000000413eb8 <bus_machine_method_bind_mount>:
  413eb8:	sub	sp, sp, #0x240
  413ebc:	stp	x29, x30, [sp]
  413ec0:	mov	x29, sp
  413ec4:	str	x19, [sp, #16]
  413ec8:	str	x0, [x29, #56]
  413ecc:	str	x1, [x29, #48]
  413ed0:	str	x2, [x29, #40]
  413ed4:	adrp	x0, 431000 <machine_vtable+0x4a0>
  413ed8:	ldr	x0, [x0, #3952]
  413edc:	ldr	x1, [x0]
  413ee0:	str	x1, [x29, #568]
  413ee4:	mov	x1, #0x0                   	// #0
  413ee8:	mov	w0, #0xffffffff            	// #-1
  413eec:	str	w0, [x29, #384]
  413ef0:	mov	w0, #0xffffffff            	// #-1
  413ef4:	str	w0, [x29, #388]
  413ef8:	adrp	x0, 41c000 <__func__.8711+0xb30>
  413efc:	add	x0, x0, #0x1e8
  413f00:	add	x2, x29, #0x220
  413f04:	mov	x3, x0
  413f08:	ldp	x0, x1, [x3]
  413f0c:	stp	x0, x1, [x2]
  413f10:	add	x1, x3, #0xe
  413f14:	add	x0, x2, #0xe
  413f18:	ldr	x1, [x1]
  413f1c:	str	x1, [x0]
  413f20:	strb	wzr, [x29, #66]
  413f24:	strb	wzr, [x29, #67]
  413f28:	strb	wzr, [x29, #68]
  413f2c:	strb	wzr, [x29, #69]
  413f30:	strb	wzr, [x29, #70]
  413f34:	strb	wzr, [x29, #71]
  413f38:	str	xzr, [x29, #136]
  413f3c:	ldr	x0, [x29, #48]
  413f40:	str	x0, [x29, #280]
  413f44:	ldr	x0, [x29, #56]
  413f48:	cmp	x0, #0x0
  413f4c:	cset	w0, eq  // eq = none
  413f50:	and	w0, w0, #0xff
  413f54:	and	x0, x0, #0xff
  413f58:	cmp	x0, #0x0
  413f5c:	b.eq	413f88 <bus_machine_method_bind_mount+0xd0>  // b.none
  413f60:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  413f64:	add	x1, x0, #0x543
  413f68:	adrp	x0, 41c000 <__func__.8711+0xb30>
  413f6c:	add	x4, x0, #0x830
  413f70:	mov	w3, #0x33e                 	// #830
  413f74:	mov	x2, x1
  413f78:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  413f7c:	add	x1, x0, #0x588
  413f80:	mov	w0, #0x0                   	// #0
  413f84:	bl	4052a0 <log_assert_failed_realm@plt>
  413f88:	ldr	x0, [x29, #280]
  413f8c:	cmp	x0, #0x0
  413f90:	cset	w0, eq  // eq = none
  413f94:	and	w0, w0, #0xff
  413f98:	and	x0, x0, #0xff
  413f9c:	cmp	x0, #0x0
  413fa0:	b.eq	413fcc <bus_machine_method_bind_mount+0x114>  // b.none
  413fa4:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  413fa8:	add	x1, x0, #0x543
  413fac:	adrp	x0, 41c000 <__func__.8711+0xb30>
  413fb0:	add	x4, x0, #0x830
  413fb4:	mov	w3, #0x33f                 	// #831
  413fb8:	mov	x2, x1
  413fbc:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  413fc0:	add	x1, x0, #0x580
  413fc4:	mov	w0, #0x0                   	// #0
  413fc8:	bl	4052a0 <log_assert_failed_realm@plt>
  413fcc:	ldr	x0, [x29, #280]
  413fd0:	ldr	w0, [x0, #32]
  413fd4:	cmp	w0, #0x0
  413fd8:	b.eq	413ffc <bus_machine_method_bind_mount+0x144>  // b.none
  413fdc:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  413fe0:	add	x2, x0, #0xdd8
  413fe4:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  413fe8:	add	x1, x0, #0x7f8
  413fec:	ldr	x0, [x29, #40]
  413ff0:	bl	4055d0 <sd_bus_error_setf@plt>
  413ff4:	mov	w19, w0
  413ff8:	b	4151d0 <bus_machine_method_bind_mount+0x1318>
  413ffc:	add	x3, x29, #0x4c
  414000:	add	x2, x29, #0x48
  414004:	add	x1, x29, #0x90
  414008:	add	x0, x29, #0x98
  41400c:	mov	x5, x3
  414010:	mov	x4, x2
  414014:	mov	x3, x1
  414018:	mov	x2, x0
  41401c:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  414020:	add	x1, x0, #0xe10
  414024:	ldr	x0, [x29, #56]
  414028:	bl	4052b0 <sd_bus_message_read@plt>
  41402c:	str	w0, [x29, #88]
  414030:	ldr	w0, [x29, #88]
  414034:	cmp	w0, #0x0
  414038:	b.ge	414044 <bus_machine_method_bind_mount+0x18c>  // b.tcont
  41403c:	ldr	w19, [x29, #88]
  414040:	b	4151d0 <bus_machine_method_bind_mount+0x1318>
  414044:	ldr	x0, [x29, #152]
  414048:	bl	405340 <path_is_absolute@plt>
  41404c:	and	w0, w0, #0xff
  414050:	eor	w0, w0, #0x1
  414054:	and	w0, w0, #0xff
  414058:	cmp	w0, #0x0
  41405c:	b.ne	41407c <bus_machine_method_bind_mount+0x1c4>  // b.any
  414060:	ldr	x0, [x29, #152]
  414064:	bl	405380 <path_is_normalized@plt>
  414068:	and	w0, w0, #0xff
  41406c:	eor	w0, w0, #0x1
  414070:	and	w0, w0, #0xff
  414074:	cmp	w0, #0x0
  414078:	b.eq	41409c <bus_machine_method_bind_mount+0x1e4>  // b.none
  41407c:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  414080:	add	x2, x0, #0xe18
  414084:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  414088:	add	x1, x0, #0x5e8
  41408c:	ldr	x0, [x29, #40]
  414090:	bl	4055d0 <sd_bus_error_setf@plt>
  414094:	mov	w19, w0
  414098:	b	4151d0 <bus_machine_method_bind_mount+0x1318>
  41409c:	ldr	x0, [x29, #144]
  4140a0:	bl	410ae8 <isempty>
  4140a4:	and	w0, w0, #0xff
  4140a8:	cmp	w0, #0x0
  4140ac:	b.eq	4140bc <bus_machine_method_bind_mount+0x204>  // b.none
  4140b0:	ldr	x0, [x29, #152]
  4140b4:	str	x0, [x29, #144]
  4140b8:	b	414114 <bus_machine_method_bind_mount+0x25c>
  4140bc:	ldr	x0, [x29, #144]
  4140c0:	bl	405340 <path_is_absolute@plt>
  4140c4:	and	w0, w0, #0xff
  4140c8:	eor	w0, w0, #0x1
  4140cc:	and	w0, w0, #0xff
  4140d0:	cmp	w0, #0x0
  4140d4:	b.ne	4140f4 <bus_machine_method_bind_mount+0x23c>  // b.any
  4140d8:	ldr	x0, [x29, #144]
  4140dc:	bl	405380 <path_is_normalized@plt>
  4140e0:	and	w0, w0, #0xff
  4140e4:	eor	w0, w0, #0x1
  4140e8:	and	w0, w0, #0xff
  4140ec:	cmp	w0, #0x0
  4140f0:	b.eq	414114 <bus_machine_method_bind_mount+0x25c>  // b.none
  4140f4:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  4140f8:	add	x2, x0, #0xe50
  4140fc:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  414100:	add	x1, x0, #0x5e8
  414104:	ldr	x0, [x29, #40]
  414108:	bl	4055d0 <sd_bus_error_setf@plt>
  41410c:	mov	w19, w0
  414110:	b	4151d0 <bus_machine_method_bind_mount+0x1318>
  414114:	ldr	x0, [x29, #280]
  414118:	ldr	x0, [x0]
  41411c:	add	x0, x0, #0x28
  414120:	ldr	x7, [x29, #40]
  414124:	mov	x6, x0
  414128:	mov	w5, #0xffffffff            	// #-1
  41412c:	mov	w4, #0x0                   	// #0
  414130:	mov	x3, #0x0                   	// #0
  414134:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  414138:	add	x2, x0, #0x590
  41413c:	mov	w1, #0x15                  	// #21
  414140:	ldr	x0, [x29, #56]
  414144:	bl	405bb0 <bus_verify_polkit_async@plt>
  414148:	str	w0, [x29, #88]
  41414c:	ldr	w0, [x29, #88]
  414150:	cmp	w0, #0x0
  414154:	b.ge	414160 <bus_machine_method_bind_mount+0x2a8>  // b.tcont
  414158:	ldr	w19, [x29, #88]
  41415c:	b	4151d0 <bus_machine_method_bind_mount+0x1318>
  414160:	ldr	w0, [x29, #88]
  414164:	cmp	w0, #0x0
  414168:	b.ne	414174 <bus_machine_method_bind_mount+0x2bc>  // b.any
  41416c:	mov	w19, #0x1                   	// #1
  414170:	b	4151d0 <bus_machine_method_bind_mount+0x1318>
  414174:	add	x0, x29, #0x54
  414178:	mov	x1, x0
  41417c:	ldr	x0, [x29, #280]
  414180:	bl	40a938 <machine_get_uid_shift>
  414184:	str	w0, [x29, #88]
  414188:	ldr	w0, [x29, #88]
  41418c:	cmp	w0, #0x0
  414190:	b.ge	41419c <bus_machine_method_bind_mount+0x2e4>  // b.tcont
  414194:	ldr	w19, [x29, #88]
  414198:	b	4151d0 <bus_machine_method_bind_mount+0x1318>
  41419c:	ldr	w0, [x29, #84]
  4141a0:	cmp	w0, #0x0
  4141a4:	b.eq	4141c8 <bus_machine_method_bind_mount+0x310>  // b.none
  4141a8:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  4141ac:	add	x2, x0, #0xe88
  4141b0:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  4141b4:	add	x1, x0, #0x7f8
  4141b8:	ldr	x0, [x29, #40]
  4141bc:	bl	4055d0 <sd_bus_error_setf@plt>
  4141c0:	mov	w19, w0
  4141c4:	b	4151d0 <bus_machine_method_bind_mount+0x1318>
  4141c8:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  4141cc:	add	x0, x0, #0xec8
  4141d0:	str	x0, [x29, #416]
  4141d4:	ldr	x0, [x29, #280]
  4141d8:	ldr	x0, [x0, #8]
  4141dc:	str	x0, [x29, #424]
  4141e0:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  4141e4:	add	x0, x0, #0xee8
  4141e8:	str	x0, [x29, #432]
  4141ec:	str	xzr, [x29, #184]
  4141f0:	str	xzr, [x29, #192]
  4141f4:	b	414228 <bus_machine_method_bind_mount+0x370>
  4141f8:	ldr	x0, [x29, #192]
  4141fc:	lsl	x0, x0, #3
  414200:	add	x1, x29, #0x1a0
  414204:	ldr	x0, [x1, x0]
  414208:	bl	405b50 <strlen@plt>
  41420c:	mov	x1, x0
  414210:	ldr	x0, [x29, #184]
  414214:	add	x0, x0, x1
  414218:	str	x0, [x29, #184]
  41421c:	ldr	x0, [x29, #192]
  414220:	add	x0, x0, #0x1
  414224:	str	x0, [x29, #192]
  414228:	ldr	x0, [x29, #192]
  41422c:	cmp	x0, #0x2
  414230:	b.hi	41424c <bus_machine_method_bind_mount+0x394>  // b.pmore
  414234:	ldr	x0, [x29, #192]
  414238:	lsl	x0, x0, #3
  41423c:	add	x1, x29, #0x1a0
  414240:	ldr	x0, [x1, x0]
  414244:	cmp	x0, #0x0
  414248:	b.ne	4141f8 <bus_machine_method_bind_mount+0x340>  // b.any
  41424c:	ldr	x0, [x29, #184]
  414250:	add	x0, x0, #0x1
  414254:	str	x0, [x29, #288]
  414258:	ldr	x1, [x29, #288]
  41425c:	mov	x0, #0x1                   	// #1
  414260:	bl	410940 <size_multiply_overflow>
  414264:	and	w0, w0, #0xff
  414268:	and	x0, x0, #0xff
  41426c:	cmp	x0, #0x0
  414270:	b.eq	41429c <bus_machine_method_bind_mount+0x3e4>  // b.none
  414274:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  414278:	add	x1, x0, #0x543
  41427c:	adrp	x0, 41c000 <__func__.8711+0xb30>
  414280:	add	x4, x0, #0x830
  414284:	mov	w3, #0x368                 	// #872
  414288:	mov	x2, x1
  41428c:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  414290:	add	x1, x0, #0x658
  414294:	mov	w0, #0x0                   	// #0
  414298:	bl	4052a0 <log_assert_failed_realm@plt>
  41429c:	ldr	x0, [x29, #288]
  4142a0:	cmp	x0, #0x400, lsl #12
  4142a4:	cset	w0, hi  // hi = pmore
  4142a8:	and	w0, w0, #0xff
  4142ac:	and	x0, x0, #0xff
  4142b0:	cmp	x0, #0x0
  4142b4:	b.eq	4142e0 <bus_machine_method_bind_mount+0x428>  // b.none
  4142b8:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  4142bc:	add	x1, x0, #0x543
  4142c0:	adrp	x0, 41c000 <__func__.8711+0xb30>
  4142c4:	add	x4, x0, #0x830
  4142c8:	mov	w3, #0x368                 	// #872
  4142cc:	mov	x2, x1
  4142d0:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  4142d4:	add	x1, x0, #0x688
  4142d8:	mov	w0, #0x0                   	// #0
  4142dc:	bl	4052a0 <log_assert_failed_realm@plt>
  4142e0:	ldr	x0, [x29, #288]
  4142e4:	add	x0, x0, #0xf
  4142e8:	lsr	x0, x0, #4
  4142ec:	lsl	x0, x0, #4
  4142f0:	sub	sp, sp, x0
  4142f4:	mov	x0, sp
  4142f8:	add	x0, x0, #0xf
  4142fc:	lsr	x0, x0, #4
  414300:	lsl	x0, x0, #4
  414304:	str	x0, [x29, #296]
  414308:	ldr	x0, [x29, #296]
  41430c:	str	x0, [x29, #176]
  414310:	str	xzr, [x29, #192]
  414314:	b	414344 <bus_machine_method_bind_mount+0x48c>
  414318:	ldr	x0, [x29, #192]
  41431c:	lsl	x0, x0, #3
  414320:	add	x1, x29, #0x1a0
  414324:	ldr	x0, [x1, x0]
  414328:	mov	x1, x0
  41432c:	ldr	x0, [x29, #176]
  414330:	bl	404f50 <stpcpy@plt>
  414334:	str	x0, [x29, #176]
  414338:	ldr	x0, [x29, #192]
  41433c:	add	x0, x0, #0x1
  414340:	str	x0, [x29, #192]
  414344:	ldr	x0, [x29, #192]
  414348:	cmp	x0, #0x2
  41434c:	b.hi	414368 <bus_machine_method_bind_mount+0x4b0>  // b.pmore
  414350:	ldr	x0, [x29, #192]
  414354:	lsl	x0, x0, #3
  414358:	add	x1, x29, #0x1a0
  41435c:	ldr	x0, [x1, x0]
  414360:	cmp	x0, #0x0
  414364:	b.ne	414318 <bus_machine_method_bind_mount+0x460>  // b.any
  414368:	ldr	x0, [x29, #176]
  41436c:	strb	wzr, [x0]
  414370:	ldr	x0, [x29, #296]
  414374:	str	x0, [x29, #304]
  414378:	mov	w3, #0x100                 	// #256
  41437c:	mov	w2, #0x0                   	// #0
  414380:	ldr	x1, [x29, #304]
  414384:	mov	w0, #0xffffff9c            	// #-100
  414388:	bl	4052c0 <faccessat@plt>
  41438c:	cmp	w0, #0x0
  414390:	b.ge	4143b4 <bus_machine_method_bind_mount+0x4fc>  // b.tcont
  414394:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  414398:	add	x2, x0, #0xef0
  41439c:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  4143a0:	add	x1, x0, #0x7f8
  4143a4:	ldr	x0, [x29, #40]
  4143a8:	bl	4055d0 <sd_bus_error_setf@plt>
  4143ac:	mov	w19, w0
  4143b0:	b	4151d0 <bus_machine_method_bind_mount+0x1318>
  4143b4:	ldr	x0, [x29, #152]
  4143b8:	add	x1, x29, #0x88
  4143bc:	mov	x4, #0x0                   	// #0
  4143c0:	mov	x3, x1
  4143c4:	mov	w2, #0x10                  	// #16
  4143c8:	mov	x1, #0x0                   	// #0
  4143cc:	bl	405080 <chase_symlinks@plt>
  4143d0:	str	w0, [x29, #88]
  4143d4:	ldr	w0, [x29, #88]
  4143d8:	cmp	w0, #0x0
  4143dc:	b.ge	4143fc <bus_machine_method_bind_mount+0x544>  // b.tcont
  4143e0:	ldr	w1, [x29, #88]
  4143e4:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  4143e8:	add	x2, x0, #0xf28
  4143ec:	ldr	x0, [x29, #40]
  4143f0:	bl	405070 <sd_bus_error_set_errnof@plt>
  4143f4:	mov	w19, w0
  4143f8:	b	4151d0 <bus_machine_method_bind_mount+0x1318>
  4143fc:	ldr	x0, [x29, #136]
  414400:	add	x1, x29, #0x1a0
  414404:	bl	418ff0 <lstat64>
  414408:	cmp	w0, #0x0
  41440c:	b.ge	414430 <bus_machine_method_bind_mount+0x578>  // b.tcont
  414410:	bl	4054d0 <__errno_location@plt>
  414414:	ldr	w1, [x0]
  414418:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  41441c:	add	x2, x0, #0xf50
  414420:	ldr	x0, [x29, #40]
  414424:	bl	405070 <sd_bus_error_set_errnof@plt>
  414428:	mov	w19, w0
  41442c:	b	4151d0 <bus_machine_method_bind_mount+0x1318>
  414430:	ldr	w0, [x29, #432]
  414434:	and	w0, w0, #0xf000
  414438:	cmp	w0, #0xa, lsl #12
  41443c:	b.ne	414460 <bus_machine_method_bind_mount+0x5a8>  // b.any
  414440:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  414444:	add	x2, x0, #0xf78
  414448:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  41444c:	add	x1, x0, #0x7f8
  414450:	ldr	x0, [x29, #40]
  414454:	bl	4055d0 <sd_bus_error_setf@plt>
  414458:	mov	w19, w0
  41445c:	b	4151d0 <bus_machine_method_bind_mount+0x1318>
  414460:	add	x0, x29, #0x220
  414464:	bl	4059b0 <mkdtemp@plt>
  414468:	cmp	x0, #0x0
  41446c:	b.ne	414498 <bus_machine_method_bind_mount+0x5e0>  // b.any
  414470:	bl	4054d0 <__errno_location@plt>
  414474:	ldr	w1, [x0]
  414478:	add	x0, x29, #0x220
  41447c:	mov	x3, x0
  414480:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  414484:	add	x2, x0, #0xfa8
  414488:	ldr	x0, [x29, #40]
  41448c:	bl	405070 <sd_bus_error_set_errnof@plt>
  414490:	mov	w19, w0
  414494:	b	4151d0 <bus_machine_method_bind_mount+0x1318>
  414498:	mov	w0, #0x1                   	// #1
  41449c:	strb	w0, [x29, #66]
  4144a0:	add	x1, x29, #0x220
  4144a4:	add	x0, x29, #0x220
  4144a8:	mov	x4, #0x0                   	// #0
  4144ac:	mov	x3, #0x1000                	// #4096
  4144b0:	mov	x2, #0x0                   	// #0
  4144b4:	bl	4059d0 <mount@plt>
  4144b8:	cmp	w0, #0x0
  4144bc:	b.ge	4144e8 <bus_machine_method_bind_mount+0x630>  // b.tcont
  4144c0:	bl	4054d0 <__errno_location@plt>
  4144c4:	ldr	w1, [x0]
  4144c8:	add	x0, x29, #0x220
  4144cc:	mov	x3, x0
  4144d0:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  4144d4:	add	x2, x0, #0xfd0
  4144d8:	ldr	x0, [x29, #40]
  4144dc:	bl	405070 <sd_bus_error_set_errnof@plt>
  4144e0:	str	w0, [x29, #88]
  4144e4:	b	41511c <bus_machine_method_bind_mount+0x1264>
  4144e8:	mov	w0, #0x1                   	// #1
  4144ec:	strb	w0, [x29, #67]
  4144f0:	add	x0, x29, #0x220
  4144f4:	mov	x4, #0x0                   	// #0
  4144f8:	mov	x3, #0x80000               	// #524288
  4144fc:	mov	x2, #0x0                   	// #0
  414500:	mov	x1, x0
  414504:	mov	x0, #0x0                   	// #0
  414508:	bl	4059d0 <mount@plt>
  41450c:	cmp	w0, #0x0
  414510:	b.ge	41453c <bus_machine_method_bind_mount+0x684>  // b.tcont
  414514:	bl	4054d0 <__errno_location@plt>
  414518:	ldr	w1, [x0]
  41451c:	add	x0, x29, #0x220
  414520:	mov	x3, x0
  414524:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  414528:	add	x2, x0, #0xff8
  41452c:	ldr	x0, [x29, #40]
  414530:	bl	405070 <sd_bus_error_set_errnof@plt>
  414534:	str	w0, [x29, #88]
  414538:	b	41511c <bus_machine_method_bind_mount+0x1264>
  41453c:	add	x0, x29, #0x220
  414540:	str	x0, [x29, #392]
  414544:	adrp	x0, 41c000 <__func__.8711+0xb30>
  414548:	add	x0, x0, #0x18
  41454c:	str	x0, [x29, #400]
  414550:	str	xzr, [x29, #208]
  414554:	str	xzr, [x29, #216]
  414558:	b	41458c <bus_machine_method_bind_mount+0x6d4>
  41455c:	ldr	x0, [x29, #216]
  414560:	lsl	x0, x0, #3
  414564:	add	x1, x29, #0x188
  414568:	ldr	x0, [x1, x0]
  41456c:	bl	405b50 <strlen@plt>
  414570:	mov	x1, x0
  414574:	ldr	x0, [x29, #208]
  414578:	add	x0, x0, x1
  41457c:	str	x0, [x29, #208]
  414580:	ldr	x0, [x29, #216]
  414584:	add	x0, x0, #0x1
  414588:	str	x0, [x29, #216]
  41458c:	ldr	x0, [x29, #216]
  414590:	cmp	x0, #0x1
  414594:	b.hi	4145b0 <bus_machine_method_bind_mount+0x6f8>  // b.pmore
  414598:	ldr	x0, [x29, #216]
  41459c:	lsl	x0, x0, #3
  4145a0:	add	x1, x29, #0x188
  4145a4:	ldr	x0, [x1, x0]
  4145a8:	cmp	x0, #0x0
  4145ac:	b.ne	41455c <bus_machine_method_bind_mount+0x6a4>  // b.any
  4145b0:	ldr	x0, [x29, #208]
  4145b4:	add	x0, x0, #0x1
  4145b8:	str	x0, [x29, #312]
  4145bc:	ldr	x1, [x29, #312]
  4145c0:	mov	x0, #0x1                   	// #1
  4145c4:	bl	410940 <size_multiply_overflow>
  4145c8:	and	w0, w0, #0xff
  4145cc:	and	x0, x0, #0xff
  4145d0:	cmp	x0, #0x0
  4145d4:	b.eq	414600 <bus_machine_method_bind_mount+0x748>  // b.none
  4145d8:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  4145dc:	add	x1, x0, #0x543
  4145e0:	adrp	x0, 41c000 <__func__.8711+0xb30>
  4145e4:	add	x4, x0, #0x830
  4145e8:	mov	w3, #0x390                 	// #912
  4145ec:	mov	x2, x1
  4145f0:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  4145f4:	add	x1, x0, #0x658
  4145f8:	mov	w0, #0x0                   	// #0
  4145fc:	bl	4052a0 <log_assert_failed_realm@plt>
  414600:	ldr	x0, [x29, #312]
  414604:	cmp	x0, #0x400, lsl #12
  414608:	cset	w0, hi  // hi = pmore
  41460c:	and	w0, w0, #0xff
  414610:	and	x0, x0, #0xff
  414614:	cmp	x0, #0x0
  414618:	b.eq	414644 <bus_machine_method_bind_mount+0x78c>  // b.none
  41461c:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  414620:	add	x1, x0, #0x543
  414624:	adrp	x0, 41c000 <__func__.8711+0xb30>
  414628:	add	x4, x0, #0x830
  41462c:	mov	w3, #0x390                 	// #912
  414630:	mov	x2, x1
  414634:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  414638:	add	x1, x0, #0x688
  41463c:	mov	w0, #0x0                   	// #0
  414640:	bl	4052a0 <log_assert_failed_realm@plt>
  414644:	ldr	x0, [x29, #312]
  414648:	add	x0, x0, #0xf
  41464c:	lsr	x0, x0, #4
  414650:	lsl	x0, x0, #4
  414654:	sub	sp, sp, x0
  414658:	mov	x0, sp
  41465c:	add	x0, x0, #0xf
  414660:	lsr	x0, x0, #4
  414664:	lsl	x0, x0, #4
  414668:	str	x0, [x29, #320]
  41466c:	ldr	x0, [x29, #320]
  414670:	str	x0, [x29, #200]
  414674:	str	xzr, [x29, #216]
  414678:	b	4146a8 <bus_machine_method_bind_mount+0x7f0>
  41467c:	ldr	x0, [x29, #216]
  414680:	lsl	x0, x0, #3
  414684:	add	x1, x29, #0x188
  414688:	ldr	x0, [x1, x0]
  41468c:	mov	x1, x0
  414690:	ldr	x0, [x29, #200]
  414694:	bl	404f50 <stpcpy@plt>
  414698:	str	x0, [x29, #200]
  41469c:	ldr	x0, [x29, #216]
  4146a0:	add	x0, x0, #0x1
  4146a4:	str	x0, [x29, #216]
  4146a8:	ldr	x0, [x29, #216]
  4146ac:	cmp	x0, #0x1
  4146b0:	b.hi	4146cc <bus_machine_method_bind_mount+0x814>  // b.pmore
  4146b4:	ldr	x0, [x29, #216]
  4146b8:	lsl	x0, x0, #3
  4146bc:	add	x1, x29, #0x188
  4146c0:	ldr	x0, [x1, x0]
  4146c4:	cmp	x0, #0x0
  4146c8:	b.ne	41467c <bus_machine_method_bind_mount+0x7c4>  // b.any
  4146cc:	ldr	x0, [x29, #200]
  4146d0:	strb	wzr, [x0]
  4146d4:	ldr	x0, [x29, #320]
  4146d8:	str	x0, [x29, #160]
  4146dc:	ldr	w0, [x29, #432]
  4146e0:	and	w0, w0, #0xf000
  4146e4:	cmp	w0, #0x4, lsl #12
  4146e8:	b.ne	414700 <bus_machine_method_bind_mount+0x848>  // b.any
  4146ec:	mov	w1, #0x1c0                 	// #448
  4146f0:	ldr	x0, [x29, #160]
  4146f4:	bl	404e90 <mkdir_errno_wrapper@plt>
  4146f8:	str	w0, [x29, #88]
  4146fc:	b	41470c <bus_machine_method_bind_mount+0x854>
  414700:	ldr	x0, [x29, #160]
  414704:	bl	4054c0 <touch@plt>
  414708:	str	w0, [x29, #88]
  41470c:	ldr	w0, [x29, #88]
  414710:	cmp	w0, #0x0
  414714:	b.ge	414738 <bus_machine_method_bind_mount+0x880>  // b.tcont
  414718:	bl	4054d0 <__errno_location@plt>
  41471c:	ldr	w1, [x0]
  414720:	ldr	x3, [x29, #160]
  414724:	adrp	x0, 41c000 <__func__.8711+0xb30>
  414728:	add	x2, x0, #0x20
  41472c:	ldr	x0, [x29, #40]
  414730:	bl	405070 <sd_bus_error_set_errnof@plt>
  414734:	b	41511c <bus_machine_method_bind_mount+0x1264>
  414738:	mov	w0, #0x1                   	// #1
  41473c:	strb	w0, [x29, #68]
  414740:	ldr	x0, [x29, #136]
  414744:	mov	x4, #0x0                   	// #0
  414748:	mov	x3, #0x1000                	// #4096
  41474c:	mov	x2, #0x0                   	// #0
  414750:	ldr	x1, [x29, #160]
  414754:	bl	4059d0 <mount@plt>
  414758:	cmp	w0, #0x0
  41475c:	b.ge	414788 <bus_machine_method_bind_mount+0x8d0>  // b.tcont
  414760:	bl	4054d0 <__errno_location@plt>
  414764:	ldr	w1, [x0]
  414768:	ldr	x0, [x29, #136]
  41476c:	mov	x3, x0
  414770:	adrp	x0, 41c000 <__func__.8711+0xb30>
  414774:	add	x2, x0, #0x50
  414778:	ldr	x0, [x29, #40]
  41477c:	bl	405070 <sd_bus_error_set_errnof@plt>
  414780:	str	w0, [x29, #88]
  414784:	b	41511c <bus_machine_method_bind_mount+0x1264>
  414788:	mov	w0, #0x1                   	// #1
  41478c:	strb	w0, [x29, #69]
  414790:	ldr	w0, [x29, #72]
  414794:	cmp	w0, #0x0
  414798:	b.eq	4147e0 <bus_machine_method_bind_mount+0x928>  // b.none
  41479c:	mov	x4, #0x0                   	// #0
  4147a0:	mov	x3, #0x1021                	// #4129
  4147a4:	mov	x2, #0x0                   	// #0
  4147a8:	ldr	x1, [x29, #160]
  4147ac:	mov	x0, #0x0                   	// #0
  4147b0:	bl	4059d0 <mount@plt>
  4147b4:	cmp	w0, #0x0
  4147b8:	b.ge	4147e0 <bus_machine_method_bind_mount+0x928>  // b.tcont
  4147bc:	bl	4054d0 <__errno_location@plt>
  4147c0:	ldr	w1, [x0]
  4147c4:	ldr	x3, [x29, #160]
  4147c8:	adrp	x0, 41c000 <__func__.8711+0xb30>
  4147cc:	add	x2, x0, #0x68
  4147d0:	ldr	x0, [x29, #40]
  4147d4:	bl	405070 <sd_bus_error_set_errnof@plt>
  4147d8:	str	w0, [x29, #88]
  4147dc:	b	41511c <bus_machine_method_bind_mount+0x1264>
  4147e0:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  4147e4:	add	x0, x0, #0xec8
  4147e8:	str	x0, [x29, #392]
  4147ec:	ldr	x0, [x29, #280]
  4147f0:	ldr	x0, [x0, #8]
  4147f4:	str	x0, [x29, #400]
  4147f8:	adrp	x0, 41c000 <__func__.8711+0xb30>
  4147fc:	add	x0, x0, #0x90
  414800:	str	x0, [x29, #408]
  414804:	str	xzr, [x29, #232]
  414808:	str	xzr, [x29, #240]
  41480c:	b	414840 <bus_machine_method_bind_mount+0x988>
  414810:	ldr	x0, [x29, #240]
  414814:	lsl	x0, x0, #3
  414818:	add	x1, x29, #0x188
  41481c:	ldr	x0, [x1, x0]
  414820:	bl	405b50 <strlen@plt>
  414824:	mov	x1, x0
  414828:	ldr	x0, [x29, #232]
  41482c:	add	x0, x0, x1
  414830:	str	x0, [x29, #232]
  414834:	ldr	x0, [x29, #240]
  414838:	add	x0, x0, #0x1
  41483c:	str	x0, [x29, #240]
  414840:	ldr	x0, [x29, #240]
  414844:	cmp	x0, #0x2
  414848:	b.hi	414864 <bus_machine_method_bind_mount+0x9ac>  // b.pmore
  41484c:	ldr	x0, [x29, #240]
  414850:	lsl	x0, x0, #3
  414854:	add	x1, x29, #0x188
  414858:	ldr	x0, [x1, x0]
  41485c:	cmp	x0, #0x0
  414860:	b.ne	414810 <bus_machine_method_bind_mount+0x958>  // b.any
  414864:	ldr	x0, [x29, #232]
  414868:	add	x0, x0, #0x1
  41486c:	str	x0, [x29, #328]
  414870:	ldr	x1, [x29, #328]
  414874:	mov	x0, #0x1                   	// #1
  414878:	bl	410940 <size_multiply_overflow>
  41487c:	and	w0, w0, #0xff
  414880:	and	x0, x0, #0xff
  414884:	cmp	x0, #0x0
  414888:	b.eq	4148b4 <bus_machine_method_bind_mount+0x9fc>  // b.none
  41488c:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  414890:	add	x1, x0, #0x543
  414894:	adrp	x0, 41c000 <__func__.8711+0xb30>
  414898:	add	x4, x0, #0x830
  41489c:	mov	w3, #0x3ad                 	// #941
  4148a0:	mov	x2, x1
  4148a4:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  4148a8:	add	x1, x0, #0x658
  4148ac:	mov	w0, #0x0                   	// #0
  4148b0:	bl	4052a0 <log_assert_failed_realm@plt>
  4148b4:	ldr	x0, [x29, #328]
  4148b8:	cmp	x0, #0x400, lsl #12
  4148bc:	cset	w0, hi  // hi = pmore
  4148c0:	and	w0, w0, #0xff
  4148c4:	and	x0, x0, #0xff
  4148c8:	cmp	x0, #0x0
  4148cc:	b.eq	4148f8 <bus_machine_method_bind_mount+0xa40>  // b.none
  4148d0:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  4148d4:	add	x1, x0, #0x543
  4148d8:	adrp	x0, 41c000 <__func__.8711+0xb30>
  4148dc:	add	x4, x0, #0x830
  4148e0:	mov	w3, #0x3ad                 	// #941
  4148e4:	mov	x2, x1
  4148e8:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  4148ec:	add	x1, x0, #0x688
  4148f0:	mov	w0, #0x0                   	// #0
  4148f4:	bl	4052a0 <log_assert_failed_realm@plt>
  4148f8:	ldr	x0, [x29, #328]
  4148fc:	add	x0, x0, #0xf
  414900:	lsr	x0, x0, #4
  414904:	lsl	x0, x0, #4
  414908:	sub	sp, sp, x0
  41490c:	mov	x0, sp
  414910:	add	x0, x0, #0xf
  414914:	lsr	x0, x0, #4
  414918:	lsl	x0, x0, #4
  41491c:	str	x0, [x29, #336]
  414920:	ldr	x0, [x29, #336]
  414924:	str	x0, [x29, #224]
  414928:	str	xzr, [x29, #240]
  41492c:	b	41495c <bus_machine_method_bind_mount+0xaa4>
  414930:	ldr	x0, [x29, #240]
  414934:	lsl	x0, x0, #3
  414938:	add	x1, x29, #0x188
  41493c:	ldr	x0, [x1, x0]
  414940:	mov	x1, x0
  414944:	ldr	x0, [x29, #224]
  414948:	bl	404f50 <stpcpy@plt>
  41494c:	str	x0, [x29, #224]
  414950:	ldr	x0, [x29, #240]
  414954:	add	x0, x0, #0x1
  414958:	str	x0, [x29, #240]
  41495c:	ldr	x0, [x29, #240]
  414960:	cmp	x0, #0x2
  414964:	b.hi	414980 <bus_machine_method_bind_mount+0xac8>  // b.pmore
  414968:	ldr	x0, [x29, #240]
  41496c:	lsl	x0, x0, #3
  414970:	add	x1, x29, #0x188
  414974:	ldr	x0, [x1, x0]
  414978:	cmp	x0, #0x0
  41497c:	b.ne	414930 <bus_machine_method_bind_mount+0xa78>  // b.any
  414980:	ldr	x0, [x29, #224]
  414984:	strb	wzr, [x0]
  414988:	ldr	x0, [x29, #336]
  41498c:	str	x0, [x29, #168]
  414990:	ldr	w0, [x29, #432]
  414994:	and	w0, w0, #0xf000
  414998:	cmp	w0, #0x4, lsl #12
  41499c:	b.ne	4149cc <bus_machine_method_bind_mount+0xb14>  // b.any
  4149a0:	ldr	x0, [x29, #168]
  4149a4:	bl	4059b0 <mkdtemp@plt>
  4149a8:	cmp	x0, #0x0
  4149ac:	b.ne	4149c0 <bus_machine_method_bind_mount+0xb08>  // b.any
  4149b0:	bl	4054d0 <__errno_location@plt>
  4149b4:	ldr	w0, [x0]
  4149b8:	neg	w0, w0
  4149bc:	b	4149c4 <bus_machine_method_bind_mount+0xb0c>
  4149c0:	mov	w0, #0x0                   	// #0
  4149c4:	str	w0, [x29, #88]
  4149c8:	b	4149e0 <bus_machine_method_bind_mount+0xb28>
  4149cc:	ldr	x0, [x29, #168]
  4149d0:	bl	4058d0 <mkostemp_safe@plt>
  4149d4:	str	w0, [x29, #88]
  4149d8:	ldr	w0, [x29, #88]
  4149dc:	bl	405240 <safe_close@plt>
  4149e0:	ldr	w0, [x29, #88]
  4149e4:	cmp	w0, #0x0
  4149e8:	b.ge	414a0c <bus_machine_method_bind_mount+0xb54>  // b.tcont
  4149ec:	bl	4054d0 <__errno_location@plt>
  4149f0:	ldr	w1, [x0]
  4149f4:	ldr	x3, [x29, #168]
  4149f8:	adrp	x0, 41c000 <__func__.8711+0xb30>
  4149fc:	add	x2, x0, #0x98
  414a00:	ldr	x0, [x29, #40]
  414a04:	bl	405070 <sd_bus_error_set_errnof@plt>
  414a08:	b	41511c <bus_machine_method_bind_mount+0x1264>
  414a0c:	mov	w0, #0x1                   	// #1
  414a10:	strb	w0, [x29, #70]
  414a14:	mov	x4, #0x0                   	// #0
  414a18:	mov	x3, #0x2000                	// #8192
  414a1c:	mov	x2, #0x0                   	// #0
  414a20:	ldr	x1, [x29, #168]
  414a24:	ldr	x0, [x29, #160]
  414a28:	bl	4059d0 <mount@plt>
  414a2c:	cmp	w0, #0x0
  414a30:	b.ge	414a5c <bus_machine_method_bind_mount+0xba4>  // b.tcont
  414a34:	bl	4054d0 <__errno_location@plt>
  414a38:	ldr	w1, [x0]
  414a3c:	ldr	x4, [x29, #168]
  414a40:	ldr	x3, [x29, #160]
  414a44:	adrp	x0, 41c000 <__func__.8711+0xb30>
  414a48:	add	x2, x0, #0xd0
  414a4c:	ldr	x0, [x29, #40]
  414a50:	bl	405070 <sd_bus_error_set_errnof@plt>
  414a54:	str	w0, [x29, #88]
  414a58:	b	41511c <bus_machine_method_bind_mount+0x1264>
  414a5c:	mov	w0, #0x1                   	// #1
  414a60:	strb	w0, [x29, #71]
  414a64:	strb	wzr, [x29, #69]
  414a68:	ldr	w0, [x29, #432]
  414a6c:	and	w0, w0, #0xf000
  414a70:	cmp	w0, #0x4, lsl #12
  414a74:	b.ne	414a84 <bus_machine_method_bind_mount+0xbcc>  // b.any
  414a78:	ldr	x0, [x29, #160]
  414a7c:	bl	405440 <rmdir@plt>
  414a80:	b	414a8c <bus_machine_method_bind_mount+0xbd4>
  414a84:	ldr	x0, [x29, #160]
  414a88:	bl	404ed0 <unlink@plt>
  414a8c:	strb	wzr, [x29, #68]
  414a90:	add	x0, x29, #0x220
  414a94:	bl	405900 <umount@plt>
  414a98:	strb	wzr, [x29, #67]
  414a9c:	add	x0, x29, #0x220
  414aa0:	bl	405440 <rmdir@plt>
  414aa4:	strb	wzr, [x29, #66]
  414aa8:	add	x0, x29, #0x180
  414aac:	mov	w1, #0x800                 	// #2048
  414ab0:	movk	w1, #0x8, lsl #16
  414ab4:	bl	405780 <pipe2@plt>
  414ab8:	cmp	w0, #0x0
  414abc:	b.ge	414ae0 <bus_machine_method_bind_mount+0xc28>  // b.tcont
  414ac0:	bl	4054d0 <__errno_location@plt>
  414ac4:	ldr	w1, [x0]
  414ac8:	adrp	x0, 41c000 <__func__.8711+0xb30>
  414acc:	add	x2, x0, #0xf0
  414ad0:	ldr	x0, [x29, #40]
  414ad4:	bl	405070 <sd_bus_error_set_errnof@plt>
  414ad8:	str	w0, [x29, #88]
  414adc:	b	41511c <bus_machine_method_bind_mount+0x1264>
  414ae0:	add	x0, x29, #0x50
  414ae4:	mov	x2, x0
  414ae8:	mov	w1, #0x1                   	// #1
  414aec:	adrp	x0, 41c000 <__func__.8711+0xb30>
  414af0:	add	x0, x0, #0x110
  414af4:	bl	410e18 <safe_fork>
  414af8:	str	w0, [x29, #88]
  414afc:	ldr	w0, [x29, #88]
  414b00:	cmp	w0, #0x0
  414b04:	b.ge	414b20 <bus_machine_method_bind_mount+0xc68>  // b.tcont
  414b08:	ldr	w1, [x29, #88]
  414b0c:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  414b10:	add	x2, x0, #0x738
  414b14:	ldr	x0, [x29, #40]
  414b18:	bl	405070 <sd_bus_error_set_errnof@plt>
  414b1c:	b	41511c <bus_machine_method_bind_mount+0x1264>
  414b20:	ldr	w0, [x29, #88]
  414b24:	cmp	w0, #0x0
  414b28:	b.ne	41505c <bus_machine_method_bind_mount+0x11a4>  // b.any
  414b2c:	ldr	w0, [x29, #384]
  414b30:	bl	405240 <safe_close@plt>
  414b34:	str	w0, [x29, #384]
  414b38:	ldr	x0, [x29, #280]
  414b3c:	ldr	w0, [x0, #80]
  414b40:	str	w0, [x29, #92]
  414b44:	ldr	w0, [x29, #92]
  414b48:	cmp	w0, #0x0
  414b4c:	b.ne	414b60 <bus_machine_method_bind_mount+0xca8>  // b.any
  414b50:	adrp	x0, 41c000 <__func__.8711+0xb30>
  414b54:	add	x0, x0, #0x120
  414b58:	str	x0, [x29, #248]
  414b5c:	b	414c2c <bus_machine_method_bind_mount+0xd74>
  414b60:	mov	x0, #0x1a                  	// #26
  414b64:	str	x0, [x29, #344]
  414b68:	ldr	x1, [x29, #344]
  414b6c:	mov	x0, #0x1                   	// #1
  414b70:	bl	410940 <size_multiply_overflow>
  414b74:	and	w0, w0, #0xff
  414b78:	and	x0, x0, #0xff
  414b7c:	cmp	x0, #0x0
  414b80:	b.eq	414bac <bus_machine_method_bind_mount+0xcf4>  // b.none
  414b84:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  414b88:	add	x1, x0, #0x543
  414b8c:	adrp	x0, 41c000 <__func__.8711+0xb30>
  414b90:	add	x4, x0, #0x830
  414b94:	mov	w3, #0x3e0                 	// #992
  414b98:	mov	x2, x1
  414b9c:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  414ba0:	add	x1, x0, #0x658
  414ba4:	mov	w0, #0x0                   	// #0
  414ba8:	bl	4052a0 <log_assert_failed_realm@plt>
  414bac:	ldr	x0, [x29, #344]
  414bb0:	cmp	x0, #0x400, lsl #12
  414bb4:	cset	w0, hi  // hi = pmore
  414bb8:	and	w0, w0, #0xff
  414bbc:	and	x0, x0, #0xff
  414bc0:	cmp	x0, #0x0
  414bc4:	b.eq	414bf0 <bus_machine_method_bind_mount+0xd38>  // b.none
  414bc8:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  414bcc:	add	x1, x0, #0x543
  414bd0:	adrp	x0, 41c000 <__func__.8711+0xb30>
  414bd4:	add	x4, x0, #0x830
  414bd8:	mov	w3, #0x3e0                 	// #992
  414bdc:	mov	x2, x1
  414be0:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  414be4:	add	x1, x0, #0x688
  414be8:	mov	w0, #0x0                   	// #0
  414bec:	bl	4052a0 <log_assert_failed_realm@plt>
  414bf0:	ldr	x0, [x29, #344]
  414bf4:	add	x0, x0, #0xf
  414bf8:	lsr	x0, x0, #4
  414bfc:	lsl	x0, x0, #4
  414c00:	sub	sp, sp, x0
  414c04:	mov	x0, sp
  414c08:	add	x0, x0, #0xf
  414c0c:	lsr	x0, x0, #4
  414c10:	lsl	x0, x0, #4
  414c14:	str	x0, [x29, #248]
  414c18:	ldr	w2, [x29, #92]
  414c1c:	adrp	x0, 41c000 <__func__.8711+0xb30>
  414c20:	add	x1, x0, #0x138
  414c24:	ldr	x0, [x29, #248]
  414c28:	bl	405a30 <sprintf@plt>
  414c2c:	ldr	x0, [x29, #248]
  414c30:	str	x0, [x29, #352]
  414c34:	mov	w1, #0x100                 	// #256
  414c38:	movk	w1, #0x8, lsl #16
  414c3c:	ldr	x0, [x29, #352]
  414c40:	bl	405b30 <open64@plt>
  414c44:	str	w0, [x29, #96]
  414c48:	ldr	w0, [x29, #96]
  414c4c:	cmp	w0, #0x0
  414c50:	b.ge	414ce4 <bus_machine_method_bind_mount+0xe2c>  // b.tcont
  414c54:	mov	w0, #0x3                   	// #3
  414c58:	str	w0, [x29, #124]
  414c5c:	bl	4054d0 <__errno_location@plt>
  414c60:	ldr	w0, [x0]
  414c64:	str	w0, [x29, #128]
  414c68:	str	wzr, [x29, #132]
  414c6c:	ldr	w0, [x29, #132]
  414c70:	bl	405c20 <log_get_max_level_realm@plt>
  414c74:	mov	w1, w0
  414c78:	ldr	w0, [x29, #124]
  414c7c:	and	w0, w0, #0x7
  414c80:	cmp	w1, w0
  414c84:	b.lt	414cc8 <bus_machine_method_bind_mount+0xe10>  // b.tstop
  414c88:	ldr	w0, [x29, #132]
  414c8c:	lsl	w1, w0, #10
  414c90:	ldr	w0, [x29, #124]
  414c94:	orr	w6, w1, w0
  414c98:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  414c9c:	add	x1, x0, #0x543
  414ca0:	adrp	x0, 41c000 <__func__.8711+0xb30>
  414ca4:	add	x5, x0, #0x148
  414ca8:	adrp	x0, 41c000 <__func__.8711+0xb30>
  414cac:	add	x4, x0, #0x850
  414cb0:	mov	w3, #0x3e3                 	// #995
  414cb4:	mov	x2, x1
  414cb8:	ldr	w1, [x29, #128]
  414cbc:	mov	w0, w6
  414cc0:	bl	405750 <log_internal_realm@plt>
  414cc4:	b	414cdc <bus_machine_method_bind_mount+0xe24>
  414cc8:	ldr	w0, [x29, #128]
  414ccc:	cmp	w0, #0x0
  414cd0:	cneg	w0, w0, lt  // lt = tstop
  414cd4:	and	w0, w0, #0xff
  414cd8:	neg	w0, w0
  414cdc:	str	w0, [x29, #88]
  414ce0:	b	415038 <bus_machine_method_bind_mount+0x1180>
  414ce4:	mov	w1, #0x20000               	// #131072
  414ce8:	ldr	w0, [x29, #96]
  414cec:	bl	404f40 <setns@plt>
  414cf0:	cmp	w0, #0x0
  414cf4:	b.ge	414d88 <bus_machine_method_bind_mount+0xed0>  // b.tcont
  414cf8:	mov	w0, #0x3                   	// #3
  414cfc:	str	w0, [x29, #112]
  414d00:	bl	4054d0 <__errno_location@plt>
  414d04:	ldr	w0, [x0]
  414d08:	str	w0, [x29, #116]
  414d0c:	str	wzr, [x29, #120]
  414d10:	ldr	w0, [x29, #120]
  414d14:	bl	405c20 <log_get_max_level_realm@plt>
  414d18:	mov	w1, w0
  414d1c:	ldr	w0, [x29, #112]
  414d20:	and	w0, w0, #0x7
  414d24:	cmp	w1, w0
  414d28:	b.lt	414d6c <bus_machine_method_bind_mount+0xeb4>  // b.tstop
  414d2c:	ldr	w0, [x29, #120]
  414d30:	lsl	w1, w0, #10
  414d34:	ldr	w0, [x29, #112]
  414d38:	orr	w6, w1, w0
  414d3c:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  414d40:	add	x1, x0, #0x543
  414d44:	adrp	x0, 41c000 <__func__.8711+0xb30>
  414d48:	add	x5, x0, #0x178
  414d4c:	adrp	x0, 41c000 <__func__.8711+0xb30>
  414d50:	add	x4, x0, #0x850
  414d54:	mov	w3, #0x3e8                 	// #1000
  414d58:	mov	x2, x1
  414d5c:	ldr	w1, [x29, #116]
  414d60:	mov	w0, w6
  414d64:	bl	405750 <log_internal_realm@plt>
  414d68:	b	414d80 <bus_machine_method_bind_mount+0xec8>
  414d6c:	ldr	w0, [x29, #116]
  414d70:	cmp	w0, #0x0
  414d74:	cneg	w0, w0, lt  // lt = tstop
  414d78:	and	w0, w0, #0xff
  414d7c:	neg	w0, w0
  414d80:	str	w0, [x29, #88]
  414d84:	b	415038 <bus_machine_method_bind_mount+0x1180>
  414d88:	ldr	w0, [x29, #76]
  414d8c:	cmp	w0, #0x0
  414d90:	b.eq	414dd8 <bus_machine_method_bind_mount+0xf20>  // b.none
  414d94:	ldr	w0, [x29, #432]
  414d98:	and	w0, w0, #0xf000
  414d9c:	cmp	w0, #0x4, lsl #12
  414da0:	b.ne	414db4 <bus_machine_method_bind_mount+0xefc>  // b.any
  414da4:	ldr	x0, [x29, #144]
  414da8:	mov	w1, #0x1ed                 	// #493
  414dac:	bl	405ab0 <mkdir_p@plt>
  414db0:	b	414dd8 <bus_machine_method_bind_mount+0xf20>
  414db4:	ldr	x0, [x29, #144]
  414db8:	mov	w1, #0x1ed                 	// #493
  414dbc:	bl	405b60 <mkdir_parents@plt>
  414dc0:	ldr	x0, [x29, #144]
  414dc4:	mov	w2, #0x180                 	// #384
  414dc8:	mov	w1, #0x1c1                 	// #449
  414dcc:	movk	w1, #0x8, lsl #16
  414dd0:	bl	405b30 <open64@plt>
  414dd4:	bl	405240 <safe_close@plt>
  414dd8:	adrp	x0, 41c000 <__func__.8711+0xb30>
  414ddc:	add	x0, x0, #0x1a0
  414de0:	str	x0, [x29, #392]
  414de4:	ldr	x0, [x29, #168]
  414de8:	bl	405610 <basename@plt>
  414dec:	str	x0, [x29, #400]
  414df0:	str	xzr, [x29, #264]
  414df4:	str	xzr, [x29, #272]
  414df8:	b	414e2c <bus_machine_method_bind_mount+0xf74>
  414dfc:	ldr	x0, [x29, #272]
  414e00:	lsl	x0, x0, #3
  414e04:	add	x1, x29, #0x188
  414e08:	ldr	x0, [x1, x0]
  414e0c:	bl	405b50 <strlen@plt>
  414e10:	mov	x1, x0
  414e14:	ldr	x0, [x29, #264]
  414e18:	add	x0, x0, x1
  414e1c:	str	x0, [x29, #264]
  414e20:	ldr	x0, [x29, #272]
  414e24:	add	x0, x0, #0x1
  414e28:	str	x0, [x29, #272]
  414e2c:	ldr	x0, [x29, #272]
  414e30:	cmp	x0, #0x1
  414e34:	b.hi	414e50 <bus_machine_method_bind_mount+0xf98>  // b.pmore
  414e38:	ldr	x0, [x29, #272]
  414e3c:	lsl	x0, x0, #3
  414e40:	add	x1, x29, #0x188
  414e44:	ldr	x0, [x1, x0]
  414e48:	cmp	x0, #0x0
  414e4c:	b.ne	414dfc <bus_machine_method_bind_mount+0xf44>  // b.any
  414e50:	ldr	x0, [x29, #264]
  414e54:	add	x0, x0, #0x1
  414e58:	str	x0, [x29, #360]
  414e5c:	ldr	x1, [x29, #360]
  414e60:	mov	x0, #0x1                   	// #1
  414e64:	bl	410940 <size_multiply_overflow>
  414e68:	and	w0, w0, #0xff
  414e6c:	and	x0, x0, #0xff
  414e70:	cmp	x0, #0x0
  414e74:	b.eq	414ea0 <bus_machine_method_bind_mount+0xfe8>  // b.none
  414e78:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  414e7c:	add	x1, x0, #0x543
  414e80:	adrp	x0, 41c000 <__func__.8711+0xb30>
  414e84:	add	x4, x0, #0x830
  414e88:	mov	w3, #0x3f6                 	// #1014
  414e8c:	mov	x2, x1
  414e90:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  414e94:	add	x1, x0, #0x658
  414e98:	mov	w0, #0x0                   	// #0
  414e9c:	bl	4052a0 <log_assert_failed_realm@plt>
  414ea0:	ldr	x0, [x29, #360]
  414ea4:	cmp	x0, #0x400, lsl #12
  414ea8:	cset	w0, hi  // hi = pmore
  414eac:	and	w0, w0, #0xff
  414eb0:	and	x0, x0, #0xff
  414eb4:	cmp	x0, #0x0
  414eb8:	b.eq	414ee4 <bus_machine_method_bind_mount+0x102c>  // b.none
  414ebc:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  414ec0:	add	x1, x0, #0x543
  414ec4:	adrp	x0, 41c000 <__func__.8711+0xb30>
  414ec8:	add	x4, x0, #0x830
  414ecc:	mov	w3, #0x3f6                 	// #1014
  414ed0:	mov	x2, x1
  414ed4:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  414ed8:	add	x1, x0, #0x688
  414edc:	mov	w0, #0x0                   	// #0
  414ee0:	bl	4052a0 <log_assert_failed_realm@plt>
  414ee4:	ldr	x0, [x29, #360]
  414ee8:	add	x0, x0, #0xf
  414eec:	lsr	x0, x0, #4
  414ef0:	lsl	x0, x0, #4
  414ef4:	sub	sp, sp, x0
  414ef8:	mov	x0, sp
  414efc:	add	x0, x0, #0xf
  414f00:	lsr	x0, x0, #4
  414f04:	lsl	x0, x0, #4
  414f08:	str	x0, [x29, #368]
  414f0c:	ldr	x0, [x29, #368]
  414f10:	str	x0, [x29, #256]
  414f14:	str	xzr, [x29, #272]
  414f18:	b	414f48 <bus_machine_method_bind_mount+0x1090>
  414f1c:	ldr	x0, [x29, #272]
  414f20:	lsl	x0, x0, #3
  414f24:	add	x1, x29, #0x188
  414f28:	ldr	x0, [x1, x0]
  414f2c:	mov	x1, x0
  414f30:	ldr	x0, [x29, #256]
  414f34:	bl	404f50 <stpcpy@plt>
  414f38:	str	x0, [x29, #256]
  414f3c:	ldr	x0, [x29, #272]
  414f40:	add	x0, x0, #0x1
  414f44:	str	x0, [x29, #272]
  414f48:	ldr	x0, [x29, #272]
  414f4c:	cmp	x0, #0x1
  414f50:	b.hi	414f6c <bus_machine_method_bind_mount+0x10b4>  // b.pmore
  414f54:	ldr	x0, [x29, #272]
  414f58:	lsl	x0, x0, #3
  414f5c:	add	x1, x29, #0x188
  414f60:	ldr	x0, [x1, x0]
  414f64:	cmp	x0, #0x0
  414f68:	b.ne	414f1c <bus_machine_method_bind_mount+0x1064>  // b.any
  414f6c:	ldr	x0, [x29, #256]
  414f70:	strb	wzr, [x0]
  414f74:	ldr	x0, [x29, #368]
  414f78:	str	x0, [x29, #376]
  414f7c:	ldr	x0, [x29, #144]
  414f80:	mov	x4, #0x0                   	// #0
  414f84:	mov	x3, #0x2000                	// #8192
  414f88:	mov	x2, #0x0                   	// #0
  414f8c:	mov	x1, x0
  414f90:	ldr	x0, [x29, #376]
  414f94:	bl	4059d0 <mount@plt>
  414f98:	cmp	w0, #0x0
  414f9c:	b.ge	415030 <bus_machine_method_bind_mount+0x1178>  // b.tcont
  414fa0:	mov	w0, #0x3                   	// #3
  414fa4:	str	w0, [x29, #100]
  414fa8:	bl	4054d0 <__errno_location@plt>
  414fac:	ldr	w0, [x0]
  414fb0:	str	w0, [x29, #104]
  414fb4:	str	wzr, [x29, #108]
  414fb8:	ldr	w0, [x29, #108]
  414fbc:	bl	405c20 <log_get_max_level_realm@plt>
  414fc0:	mov	w1, w0
  414fc4:	ldr	w0, [x29, #100]
  414fc8:	and	w0, w0, #0x7
  414fcc:	cmp	w1, w0
  414fd0:	b.lt	415014 <bus_machine_method_bind_mount+0x115c>  // b.tstop
  414fd4:	ldr	w0, [x29, #108]
  414fd8:	lsl	w1, w0, #10
  414fdc:	ldr	w0, [x29, #100]
  414fe0:	orr	w6, w1, w0
  414fe4:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  414fe8:	add	x1, x0, #0x543
  414fec:	adrp	x0, 41c000 <__func__.8711+0xb30>
  414ff0:	add	x5, x0, #0x1c0
  414ff4:	adrp	x0, 41c000 <__func__.8711+0xb30>
  414ff8:	add	x4, x0, #0x850
  414ffc:	mov	w3, #0x3f8                 	// #1016
  415000:	mov	x2, x1
  415004:	ldr	w1, [x29, #104]
  415008:	mov	w0, w6
  41500c:	bl	405750 <log_internal_realm@plt>
  415010:	b	415028 <bus_machine_method_bind_mount+0x1170>
  415014:	ldr	w0, [x29, #104]
  415018:	cmp	w0, #0x0
  41501c:	cneg	w0, w0, lt  // lt = tstop
  415020:	and	w0, w0, #0xff
  415024:	neg	w0, w0
  415028:	str	w0, [x29, #88]
  41502c:	b	415038 <bus_machine_method_bind_mount+0x1180>
  415030:	mov	w0, #0x0                   	// #0
  415034:	bl	405300 <_exit@plt>
  415038:	ldr	w0, [x29, #388]
  41503c:	add	x1, x29, #0x58
  415040:	mov	x2, #0x4                   	// #4
  415044:	bl	405620 <write@plt>
  415048:	ldr	w0, [x29, #388]
  41504c:	bl	405240 <safe_close@plt>
  415050:	str	w0, [x29, #388]
  415054:	mov	w0, #0x1                   	// #1
  415058:	bl	405300 <_exit@plt>
  41505c:	ldr	w0, [x29, #388]
  415060:	bl	405240 <safe_close@plt>
  415064:	str	w0, [x29, #388]
  415068:	ldr	w0, [x29, #80]
  41506c:	mov	w2, #0x0                   	// #0
  415070:	mov	w1, w0
  415074:	adrp	x0, 41c000 <__func__.8711+0xb30>
  415078:	add	x0, x0, #0x110
  41507c:	bl	4054f0 <wait_for_terminate_and_check@plt>
  415080:	str	w0, [x29, #88]
  415084:	ldr	w0, [x29, #88]
  415088:	cmp	w0, #0x0
  41508c:	b.ge	4150ac <bus_machine_method_bind_mount+0x11f4>  // b.tcont
  415090:	ldr	w1, [x29, #88]
  415094:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  415098:	add	x2, x0, #0x750
  41509c:	ldr	x0, [x29, #40]
  4150a0:	bl	405070 <sd_bus_error_set_errnof@plt>
  4150a4:	str	w0, [x29, #88]
  4150a8:	b	41511c <bus_machine_method_bind_mount+0x1264>
  4150ac:	ldr	w0, [x29, #88]
  4150b0:	cmp	w0, #0x0
  4150b4:	b.eq	41510c <bus_machine_method_bind_mount+0x1254>  // b.none
  4150b8:	ldr	w0, [x29, #384]
  4150bc:	add	x1, x29, #0x58
  4150c0:	mov	x2, #0x4                   	// #4
  4150c4:	bl	405510 <read@plt>
  4150c8:	cmp	x0, #0x4
  4150cc:	b.ne	4150ec <bus_machine_method_bind_mount+0x1234>  // b.any
  4150d0:	ldr	w1, [x29, #88]
  4150d4:	adrp	x0, 41c000 <__func__.8711+0xb30>
  4150d8:	add	x2, x0, #0x1c0
  4150dc:	ldr	x0, [x29, #40]
  4150e0:	bl	405070 <sd_bus_error_set_errnof@plt>
  4150e4:	str	w0, [x29, #88]
  4150e8:	b	41511c <bus_machine_method_bind_mount+0x1264>
  4150ec:	adrp	x0, 41c000 <__func__.8711+0xb30>
  4150f0:	add	x2, x0, #0x1d8
  4150f4:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  4150f8:	add	x1, x0, #0x788
  4150fc:	ldr	x0, [x29, #40]
  415100:	bl	4055d0 <sd_bus_error_setf@plt>
  415104:	str	w0, [x29, #88]
  415108:	b	41511c <bus_machine_method_bind_mount+0x1264>
  41510c:	mov	x1, #0x0                   	// #0
  415110:	ldr	x0, [x29, #56]
  415114:	bl	404f00 <sd_bus_reply_method_return@plt>
  415118:	str	w0, [x29, #88]
  41511c:	ldrb	w0, [x29, #71]
  415120:	cmp	w0, #0x0
  415124:	b.eq	415130 <bus_machine_method_bind_mount+0x1278>  // b.none
  415128:	ldr	x0, [x29, #168]
  41512c:	bl	405900 <umount@plt>
  415130:	ldrb	w0, [x29, #70]
  415134:	cmp	w0, #0x0
  415138:	b.eq	415160 <bus_machine_method_bind_mount+0x12a8>  // b.none
  41513c:	ldr	w0, [x29, #432]
  415140:	and	w0, w0, #0xf000
  415144:	cmp	w0, #0x4, lsl #12
  415148:	b.ne	415158 <bus_machine_method_bind_mount+0x12a0>  // b.any
  41514c:	ldr	x0, [x29, #168]
  415150:	bl	405440 <rmdir@plt>
  415154:	b	415160 <bus_machine_method_bind_mount+0x12a8>
  415158:	ldr	x0, [x29, #168]
  41515c:	bl	404ed0 <unlink@plt>
  415160:	ldrb	w0, [x29, #69]
  415164:	cmp	w0, #0x0
  415168:	b.eq	415174 <bus_machine_method_bind_mount+0x12bc>  // b.none
  41516c:	ldr	x0, [x29, #160]
  415170:	bl	405900 <umount@plt>
  415174:	ldrb	w0, [x29, #68]
  415178:	cmp	w0, #0x0
  41517c:	b.eq	4151a4 <bus_machine_method_bind_mount+0x12ec>  // b.none
  415180:	ldr	w0, [x29, #432]
  415184:	and	w0, w0, #0xf000
  415188:	cmp	w0, #0x4, lsl #12
  41518c:	b.ne	41519c <bus_machine_method_bind_mount+0x12e4>  // b.any
  415190:	ldr	x0, [x29, #160]
  415194:	bl	405440 <rmdir@plt>
  415198:	b	4151a4 <bus_machine_method_bind_mount+0x12ec>
  41519c:	ldr	x0, [x29, #160]
  4151a0:	bl	404ed0 <unlink@plt>
  4151a4:	ldrb	w0, [x29, #67]
  4151a8:	cmp	w0, #0x0
  4151ac:	b.eq	4151b8 <bus_machine_method_bind_mount+0x1300>  // b.none
  4151b0:	add	x0, x29, #0x220
  4151b4:	bl	405900 <umount@plt>
  4151b8:	ldrb	w0, [x29, #66]
  4151bc:	cmp	w0, #0x0
  4151c0:	b.eq	4151cc <bus_machine_method_bind_mount+0x1314>  // b.none
  4151c4:	add	x0, x29, #0x220
  4151c8:	bl	405440 <rmdir@plt>
  4151cc:	ldr	w19, [x29, #88]
  4151d0:	add	x0, x29, #0x88
  4151d4:	bl	41091c <freep>
  4151d8:	add	x0, x29, #0x180
  4151dc:	bl	410ccc <close_pairp>
  4151e0:	mov	w1, w19
  4151e4:	adrp	x0, 431000 <machine_vtable+0x4a0>
  4151e8:	ldr	x0, [x0, #3952]
  4151ec:	ldr	x2, [x29, #568]
  4151f0:	ldr	x0, [x0]
  4151f4:	eor	x0, x2, x0
  4151f8:	cmp	x0, #0x0
  4151fc:	b.eq	415204 <bus_machine_method_bind_mount+0x134c>  // b.none
  415200:	bl	4055f0 <__stack_chk_fail@plt>
  415204:	mov	w0, w1
  415208:	mov	sp, x29
  41520c:	ldr	x19, [sp, #16]
  415210:	ldp	x29, x30, [sp]
  415214:	add	sp, sp, #0x240
  415218:	ret

000000000041521c <bus_machine_method_copy>:
  41521c:	stp	x29, x30, [sp, #-288]!
  415220:	mov	x29, sp
  415224:	str	x19, [sp, #16]
  415228:	str	x0, [x29, #56]
  41522c:	str	x1, [x29, #48]
  415230:	str	x2, [x29, #40]
  415234:	adrp	x0, 431000 <machine_vtable+0x4a0>
  415238:	ldr	x0, [x0, #3952]
  41523c:	ldr	x1, [x0]
  415240:	str	x1, [x29, #280]
  415244:	mov	x1, #0x0                   	// #0
  415248:	mov	w0, #0xffffffff            	// #-1
  41524c:	str	w0, [x29, #272]
  415250:	mov	w0, #0xffffffff            	// #-1
  415254:	str	w0, [x29, #276]
  415258:	mov	w0, #0x3                   	// #3
  41525c:	str	w0, [x29, #88]
  415260:	mov	w0, #0xffffffff            	// #-1
  415264:	str	w0, [x29, #72]
  415268:	ldr	x0, [x29, #48]
  41526c:	str	x0, [x29, #192]
  415270:	ldr	x0, [x29, #56]
  415274:	cmp	x0, #0x0
  415278:	cset	w0, eq  // eq = none
  41527c:	and	w0, w0, #0xff
  415280:	and	x0, x0, #0xff
  415284:	cmp	x0, #0x0
  415288:	b.eq	4152b4 <bus_machine_method_copy+0x98>  // b.none
  41528c:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  415290:	add	x1, x0, #0x543
  415294:	adrp	x0, 41c000 <__func__.8711+0xb30>
  415298:	add	x4, x0, #0x870
  41529c:	mov	w3, #0x43d                 	// #1085
  4152a0:	mov	x2, x1
  4152a4:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  4152a8:	add	x1, x0, #0x588
  4152ac:	mov	w0, #0x0                   	// #0
  4152b0:	bl	4052a0 <log_assert_failed_realm@plt>
  4152b4:	ldr	x0, [x29, #192]
  4152b8:	cmp	x0, #0x0
  4152bc:	cset	w0, eq  // eq = none
  4152c0:	and	w0, w0, #0xff
  4152c4:	and	x0, x0, #0xff
  4152c8:	cmp	x0, #0x0
  4152cc:	b.eq	4152f8 <bus_machine_method_copy+0xdc>  // b.none
  4152d0:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  4152d4:	add	x1, x0, #0x543
  4152d8:	adrp	x0, 41c000 <__func__.8711+0xb30>
  4152dc:	add	x4, x0, #0x870
  4152e0:	mov	w3, #0x43e                 	// #1086
  4152e4:	mov	x2, x1
  4152e8:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  4152ec:	add	x1, x0, #0x580
  4152f0:	mov	w0, #0x0                   	// #0
  4152f4:	bl	4052a0 <log_assert_failed_realm@plt>
  4152f8:	ldr	x0, [x29, #192]
  4152fc:	ldr	x0, [x0]
  415300:	ldr	w0, [x0, #88]
  415304:	cmp	w0, #0x3f
  415308:	b.ls	41532c <bus_machine_method_copy+0x110>  // b.plast
  41530c:	adrp	x0, 41c000 <__func__.8711+0xb30>
  415310:	add	x2, x0, #0x200
  415314:	adrp	x0, 41c000 <__func__.8711+0xb30>
  415318:	add	x1, x0, #0x220
  41531c:	ldr	x0, [x29, #40]
  415320:	bl	4055d0 <sd_bus_error_setf@plt>
  415324:	mov	w19, w0
  415328:	b	415b44 <bus_machine_method_copy+0x928>
  41532c:	ldr	x0, [x29, #192]
  415330:	ldr	w0, [x0, #32]
  415334:	cmp	w0, #0x0
  415338:	b.eq	41535c <bus_machine_method_copy+0x140>  // b.none
  41533c:	adrp	x0, 41c000 <__func__.8711+0xb30>
  415340:	add	x2, x0, #0x250
  415344:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  415348:	add	x1, x0, #0x7f8
  41534c:	ldr	x0, [x29, #40]
  415350:	bl	4055d0 <sd_bus_error_setf@plt>
  415354:	mov	w19, w0
  415358:	b	415b44 <bus_machine_method_copy+0x928>
  41535c:	add	x1, x29, #0xa0
  415360:	add	x0, x29, #0x98
  415364:	mov	x3, x1
  415368:	mov	x2, x0
  41536c:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  415370:	add	x1, x0, #0xa18
  415374:	ldr	x0, [x29, #56]
  415378:	bl	4052b0 <sd_bus_message_read@plt>
  41537c:	str	w0, [x29, #84]
  415380:	ldr	w0, [x29, #84]
  415384:	cmp	w0, #0x0
  415388:	b.ge	415394 <bus_machine_method_copy+0x178>  // b.tcont
  41538c:	ldr	w19, [x29, #84]
  415390:	b	415b44 <bus_machine_method_copy+0x928>
  415394:	ldr	x0, [x29, #152]
  415398:	bl	405340 <path_is_absolute@plt>
  41539c:	and	w0, w0, #0xff
  4153a0:	eor	w0, w0, #0x1
  4153a4:	and	w0, w0, #0xff
  4153a8:	cmp	w0, #0x0
  4153ac:	b.eq	4153d0 <bus_machine_method_copy+0x1b4>  // b.none
  4153b0:	adrp	x0, 41c000 <__func__.8711+0xb30>
  4153b4:	add	x2, x0, #0x288
  4153b8:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  4153bc:	add	x1, x0, #0x5e8
  4153c0:	ldr	x0, [x29, #40]
  4153c4:	bl	4055d0 <sd_bus_error_setf@plt>
  4153c8:	mov	w19, w0
  4153cc:	b	415b44 <bus_machine_method_copy+0x928>
  4153d0:	ldr	x0, [x29, #160]
  4153d4:	bl	410ae8 <isempty>
  4153d8:	and	w0, w0, #0xff
  4153dc:	cmp	w0, #0x0
  4153e0:	b.eq	4153f0 <bus_machine_method_copy+0x1d4>  // b.none
  4153e4:	ldr	x0, [x29, #152]
  4153e8:	str	x0, [x29, #160]
  4153ec:	b	41542c <bus_machine_method_copy+0x210>
  4153f0:	ldr	x0, [x29, #160]
  4153f4:	bl	405340 <path_is_absolute@plt>
  4153f8:	and	w0, w0, #0xff
  4153fc:	eor	w0, w0, #0x1
  415400:	and	w0, w0, #0xff
  415404:	cmp	w0, #0x0
  415408:	b.eq	41542c <bus_machine_method_copy+0x210>  // b.none
  41540c:	adrp	x0, 41c000 <__func__.8711+0xb30>
  415410:	add	x2, x0, #0x2a8
  415414:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  415418:	add	x1, x0, #0x5e8
  41541c:	ldr	x0, [x29, #40]
  415420:	bl	4055d0 <sd_bus_error_setf@plt>
  415424:	mov	w19, w0
  415428:	b	415b44 <bus_machine_method_copy+0x928>
  41542c:	ldr	x0, [x29, #192]
  415430:	ldr	x0, [x0]
  415434:	add	x0, x0, #0x28
  415438:	ldr	x7, [x29, #40]
  41543c:	mov	x6, x0
  415440:	mov	w5, #0xffffffff            	// #-1
  415444:	mov	w4, #0x0                   	// #0
  415448:	mov	x3, #0x0                   	// #0
  41544c:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  415450:	add	x2, x0, #0x590
  415454:	mov	w1, #0x15                  	// #21
  415458:	ldr	x0, [x29, #56]
  41545c:	bl	405bb0 <bus_verify_polkit_async@plt>
  415460:	str	w0, [x29, #84]
  415464:	ldr	w0, [x29, #84]
  415468:	cmp	w0, #0x0
  41546c:	b.ge	415478 <bus_machine_method_copy+0x25c>  // b.tcont
  415470:	ldr	w19, [x29, #84]
  415474:	b	415b44 <bus_machine_method_copy+0x928>
  415478:	ldr	w0, [x29, #84]
  41547c:	cmp	w0, #0x0
  415480:	b.ne	41548c <bus_machine_method_copy+0x270>  // b.any
  415484:	mov	w19, #0x1                   	// #1
  415488:	b	415b44 <bus_machine_method_copy+0x928>
  41548c:	add	x0, x29, #0x50
  415490:	mov	x1, x0
  415494:	ldr	x0, [x29, #192]
  415498:	bl	40a938 <machine_get_uid_shift>
  41549c:	str	w0, [x29, #84]
  4154a0:	ldr	w0, [x29, #84]
  4154a4:	cmp	w0, #0x0
  4154a8:	b.ge	4154b4 <bus_machine_method_copy+0x298>  // b.tcont
  4154ac:	ldr	w19, [x29, #84]
  4154b0:	b	415b44 <bus_machine_method_copy+0x928>
  4154b4:	ldr	x0, [x29, #56]
  4154b8:	bl	405180 <sd_bus_message_get_member@plt>
  4154bc:	mov	x2, x0
  4154c0:	adrp	x0, 41c000 <__func__.8711+0xb30>
  4154c4:	add	x1, x0, #0x2d0
  4154c8:	mov	x0, x2
  4154cc:	bl	4052f0 <strstr@plt>
  4154d0:	cmp	x0, #0x0
  4154d4:	cset	w0, ne  // ne = any
  4154d8:	strb	w0, [x29, #71]
  4154dc:	ldrb	w0, [x29, #71]
  4154e0:	cmp	w0, #0x0
  4154e4:	b.eq	4154fc <bus_machine_method_copy+0x2e0>  // b.none
  4154e8:	ldr	x0, [x29, #152]
  4154ec:	str	x0, [x29, #176]
  4154f0:	ldr	x0, [x29, #160]
  4154f4:	str	x0, [x29, #168]
  4154f8:	b	41550c <bus_machine_method_copy+0x2f0>
  4154fc:	ldr	x0, [x29, #152]
  415500:	str	x0, [x29, #168]
  415504:	ldr	x0, [x29, #160]
  415508:	str	x0, [x29, #176]
  41550c:	ldr	x0, [x29, #168]
  415510:	bl	405610 <basename@plt>
  415514:	str	x0, [x29, #200]
  415518:	ldr	x0, [x29, #176]
  41551c:	bl	405610 <basename@plt>
  415520:	str	x0, [x29, #208]
  415524:	ldr	x0, [x29, #176]
  415528:	str	x0, [x29, #216]
  41552c:	ldr	x0, [x29, #216]
  415530:	bl	405b50 <strlen@plt>
  415534:	add	x0, x0, #0x1
  415538:	str	x0, [x29, #224]
  41553c:	ldr	x0, [x29, #224]
  415540:	add	x0, x0, #0xf
  415544:	lsr	x0, x0, #4
  415548:	lsl	x0, x0, #4
  41554c:	sub	sp, sp, x0
  415550:	mov	x0, sp
  415554:	add	x0, x0, #0xf
  415558:	lsr	x0, x0, #4
  41555c:	lsl	x0, x0, #4
  415560:	str	x0, [x29, #232]
  415564:	ldr	x2, [x29, #224]
  415568:	ldr	x1, [x29, #216]
  41556c:	ldr	x0, [x29, #232]
  415570:	bl	405190 <memcpy@plt>
  415574:	str	x0, [x29, #240]
  415578:	ldr	x0, [x29, #240]
  41557c:	bl	405020 <dirname@plt>
  415580:	str	x0, [x29, #248]
  415584:	mov	w2, #0x0                   	// #0
  415588:	mov	w1, #0x80000               	// #524288
  41558c:	ldr	x0, [x29, #168]
  415590:	bl	405290 <open_parent@plt>
  415594:	str	w0, [x29, #72]
  415598:	ldr	w0, [x29, #72]
  41559c:	cmp	w0, #0x0
  4155a0:	b.ge	4155c4 <bus_machine_method_copy+0x3a8>  // b.tcont
  4155a4:	ldr	w1, [x29, #72]
  4155a8:	ldr	x3, [x29, #168]
  4155ac:	adrp	x0, 41c000 <__func__.8711+0xb30>
  4155b0:	add	x2, x0, #0x2e0
  4155b4:	ldr	x0, [x29, #40]
  4155b8:	bl	405070 <sd_bus_error_set_errnof@plt>
  4155bc:	mov	w19, w0
  4155c0:	b	415b44 <bus_machine_method_copy+0x928>
  4155c4:	add	x0, x29, #0x110
  4155c8:	mov	w1, #0x800                 	// #2048
  4155cc:	movk	w1, #0x8, lsl #16
  4155d0:	bl	405780 <pipe2@plt>
  4155d4:	cmp	w0, #0x0
  4155d8:	b.ge	4155fc <bus_machine_method_copy+0x3e0>  // b.tcont
  4155dc:	bl	4054d0 <__errno_location@plt>
  4155e0:	ldr	w1, [x0]
  4155e4:	adrp	x0, 41c000 <__func__.8711+0xb30>
  4155e8:	add	x2, x0, #0xf0
  4155ec:	ldr	x0, [x29, #40]
  4155f0:	bl	405070 <sd_bus_error_set_errnof@plt>
  4155f4:	mov	w19, w0
  4155f8:	b	415b44 <bus_machine_method_copy+0x928>
  4155fc:	add	x0, x29, #0x4c
  415600:	mov	x2, x0
  415604:	mov	w1, #0x1                   	// #1
  415608:	adrp	x0, 41c000 <__func__.8711+0xb30>
  41560c:	add	x0, x0, #0x308
  415610:	bl	410e18 <safe_fork>
  415614:	str	w0, [x29, #84]
  415618:	ldr	w0, [x29, #84]
  41561c:	cmp	w0, #0x0
  415620:	b.ge	415640 <bus_machine_method_copy+0x424>  // b.tcont
  415624:	ldr	w1, [x29, #84]
  415628:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  41562c:	add	x2, x0, #0x738
  415630:	ldr	x0, [x29, #40]
  415634:	bl	405070 <sd_bus_error_set_errnof@plt>
  415638:	mov	w19, w0
  41563c:	b	415b44 <bus_machine_method_copy+0x928>
  415640:	ldr	w0, [x29, #84]
  415644:	cmp	w0, #0x0
  415648:	b.ne	415ae4 <bus_machine_method_copy+0x8c8>  // b.any
  41564c:	ldr	w0, [x29, #272]
  415650:	bl	405240 <safe_close@plt>
  415654:	str	w0, [x29, #272]
  415658:	ldr	x0, [x29, #192]
  41565c:	ldr	w0, [x0, #80]
  415660:	str	w0, [x29, #92]
  415664:	ldr	w0, [x29, #92]
  415668:	cmp	w0, #0x0
  41566c:	b.ne	415680 <bus_machine_method_copy+0x464>  // b.any
  415670:	adrp	x0, 41c000 <__func__.8711+0xb30>
  415674:	add	x0, x0, #0x120
  415678:	str	x0, [x29, #184]
  41567c:	b	41574c <bus_machine_method_copy+0x530>
  415680:	mov	x0, #0x1a                  	// #26
  415684:	str	x0, [x29, #256]
  415688:	ldr	x1, [x29, #256]
  41568c:	mov	x0, #0x1                   	// #1
  415690:	bl	410940 <size_multiply_overflow>
  415694:	and	w0, w0, #0xff
  415698:	and	x0, x0, #0xff
  41569c:	cmp	x0, #0x0
  4156a0:	b.eq	4156cc <bus_machine_method_copy+0x4b0>  // b.none
  4156a4:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  4156a8:	add	x1, x0, #0x543
  4156ac:	adrp	x0, 41c000 <__func__.8711+0xb30>
  4156b0:	add	x4, x0, #0x870
  4156b4:	mov	w3, #0x485                 	// #1157
  4156b8:	mov	x2, x1
  4156bc:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  4156c0:	add	x1, x0, #0x658
  4156c4:	mov	w0, #0x0                   	// #0
  4156c8:	bl	4052a0 <log_assert_failed_realm@plt>
  4156cc:	ldr	x0, [x29, #256]
  4156d0:	cmp	x0, #0x400, lsl #12
  4156d4:	cset	w0, hi  // hi = pmore
  4156d8:	and	w0, w0, #0xff
  4156dc:	and	x0, x0, #0xff
  4156e0:	cmp	x0, #0x0
  4156e4:	b.eq	415710 <bus_machine_method_copy+0x4f4>  // b.none
  4156e8:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  4156ec:	add	x1, x0, #0x543
  4156f0:	adrp	x0, 41c000 <__func__.8711+0xb30>
  4156f4:	add	x4, x0, #0x870
  4156f8:	mov	w3, #0x485                 	// #1157
  4156fc:	mov	x2, x1
  415700:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  415704:	add	x1, x0, #0x688
  415708:	mov	w0, #0x0                   	// #0
  41570c:	bl	4052a0 <log_assert_failed_realm@plt>
  415710:	ldr	x0, [x29, #256]
  415714:	add	x0, x0, #0xf
  415718:	lsr	x0, x0, #4
  41571c:	lsl	x0, x0, #4
  415720:	sub	sp, sp, x0
  415724:	mov	x0, sp
  415728:	add	x0, x0, #0xf
  41572c:	lsr	x0, x0, #4
  415730:	lsl	x0, x0, #4
  415734:	str	x0, [x29, #184]
  415738:	ldr	w2, [x29, #92]
  41573c:	adrp	x0, 41c000 <__func__.8711+0xb30>
  415740:	add	x1, x0, #0x138
  415744:	ldr	x0, [x29, #184]
  415748:	bl	405a30 <sprintf@plt>
  41574c:	ldr	x0, [x29, #184]
  415750:	str	x0, [x29, #264]
  415754:	mov	w1, #0x100                 	// #256
  415758:	movk	w1, #0x8, lsl #16
  41575c:	ldr	x0, [x29, #264]
  415760:	bl	405b30 <open64@plt>
  415764:	str	w0, [x29, #96]
  415768:	ldr	w0, [x29, #96]
  41576c:	cmp	w0, #0x0
  415770:	b.ge	415804 <bus_machine_method_copy+0x5e8>  // b.tcont
  415774:	mov	w0, #0x3                   	// #3
  415778:	str	w0, [x29, #140]
  41577c:	bl	4054d0 <__errno_location@plt>
  415780:	ldr	w0, [x0]
  415784:	str	w0, [x29, #144]
  415788:	str	wzr, [x29, #148]
  41578c:	ldr	w0, [x29, #148]
  415790:	bl	405c20 <log_get_max_level_realm@plt>
  415794:	mov	w1, w0
  415798:	ldr	w0, [x29, #140]
  41579c:	and	w0, w0, #0x7
  4157a0:	cmp	w1, w0
  4157a4:	b.lt	4157e8 <bus_machine_method_copy+0x5cc>  // b.tstop
  4157a8:	ldr	w0, [x29, #148]
  4157ac:	lsl	w1, w0, #10
  4157b0:	ldr	w0, [x29, #140]
  4157b4:	orr	w6, w1, w0
  4157b8:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  4157bc:	add	x1, x0, #0x543
  4157c0:	adrp	x0, 41c000 <__func__.8711+0xb30>
  4157c4:	add	x5, x0, #0x148
  4157c8:	adrp	x0, 41c000 <__func__.8711+0xb30>
  4157cc:	add	x4, x0, #0x888
  4157d0:	mov	w3, #0x488                 	// #1160
  4157d4:	mov	x2, x1
  4157d8:	ldr	w1, [x29, #144]
  4157dc:	mov	w0, w6
  4157e0:	bl	405750 <log_internal_realm@plt>
  4157e4:	b	4157fc <bus_machine_method_copy+0x5e0>
  4157e8:	ldr	w0, [x29, #144]
  4157ec:	cmp	w0, #0x0
  4157f0:	cneg	w0, w0, lt  // lt = tstop
  4157f4:	and	w0, w0, #0xff
  4157f8:	neg	w0, w0
  4157fc:	str	w0, [x29, #84]
  415800:	b	415acc <bus_machine_method_copy+0x8b0>
  415804:	mov	w1, #0x20000               	// #131072
  415808:	ldr	w0, [x29, #96]
  41580c:	bl	404f40 <setns@plt>
  415810:	cmp	w0, #0x0
  415814:	b.ge	4158a8 <bus_machine_method_copy+0x68c>  // b.tcont
  415818:	mov	w0, #0x3                   	// #3
  41581c:	str	w0, [x29, #128]
  415820:	bl	4054d0 <__errno_location@plt>
  415824:	ldr	w0, [x0]
  415828:	str	w0, [x29, #132]
  41582c:	str	wzr, [x29, #136]
  415830:	ldr	w0, [x29, #136]
  415834:	bl	405c20 <log_get_max_level_realm@plt>
  415838:	mov	w1, w0
  41583c:	ldr	w0, [x29, #128]
  415840:	and	w0, w0, #0x7
  415844:	cmp	w1, w0
  415848:	b.lt	41588c <bus_machine_method_copy+0x670>  // b.tstop
  41584c:	ldr	w0, [x29, #136]
  415850:	lsl	w1, w0, #10
  415854:	ldr	w0, [x29, #128]
  415858:	orr	w6, w1, w0
  41585c:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  415860:	add	x1, x0, #0x543
  415864:	adrp	x0, 41c000 <__func__.8711+0xb30>
  415868:	add	x5, x0, #0x178
  41586c:	adrp	x0, 41c000 <__func__.8711+0xb30>
  415870:	add	x4, x0, #0x888
  415874:	mov	w3, #0x48d                 	// #1165
  415878:	mov	x2, x1
  41587c:	ldr	w1, [x29, #132]
  415880:	mov	w0, w6
  415884:	bl	405750 <log_internal_realm@plt>
  415888:	b	4158a0 <bus_machine_method_copy+0x684>
  41588c:	ldr	w0, [x29, #132]
  415890:	cmp	w0, #0x0
  415894:	cneg	w0, w0, lt  // lt = tstop
  415898:	and	w0, w0, #0xff
  41589c:	neg	w0, w0
  4158a0:	str	w0, [x29, #84]
  4158a4:	b	415acc <bus_machine_method_copy+0x8b0>
  4158a8:	mov	w1, #0x4100                	// #16640
  4158ac:	movk	w1, #0x8, lsl #16
  4158b0:	ldr	x0, [x29, #248]
  4158b4:	bl	405b30 <open64@plt>
  4158b8:	str	w0, [x29, #100]
  4158bc:	ldr	w0, [x29, #100]
  4158c0:	cmp	w0, #0x0
  4158c4:	b.ge	415958 <bus_machine_method_copy+0x73c>  // b.tcont
  4158c8:	mov	w0, #0x3                   	// #3
  4158cc:	str	w0, [x29, #116]
  4158d0:	bl	4054d0 <__errno_location@plt>
  4158d4:	ldr	w0, [x0]
  4158d8:	str	w0, [x29, #120]
  4158dc:	str	wzr, [x29, #124]
  4158e0:	ldr	w0, [x29, #124]
  4158e4:	bl	405c20 <log_get_max_level_realm@plt>
  4158e8:	mov	w1, w0
  4158ec:	ldr	w0, [x29, #116]
  4158f0:	and	w0, w0, #0x7
  4158f4:	cmp	w1, w0
  4158f8:	b.lt	41593c <bus_machine_method_copy+0x720>  // b.tstop
  4158fc:	ldr	w0, [x29, #124]
  415900:	lsl	w1, w0, #10
  415904:	ldr	w0, [x29, #116]
  415908:	orr	w6, w1, w0
  41590c:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  415910:	add	x1, x0, #0x543
  415914:	adrp	x0, 41c000 <__func__.8711+0xb30>
  415918:	add	x5, x0, #0x318
  41591c:	adrp	x0, 41c000 <__func__.8711+0xb30>
  415920:	add	x4, x0, #0x888
  415924:	mov	w3, #0x493                 	// #1171
  415928:	mov	x2, x1
  41592c:	ldr	w1, [x29, #120]
  415930:	mov	w0, w6
  415934:	bl	405750 <log_internal_realm@plt>
  415938:	b	415950 <bus_machine_method_copy+0x734>
  41593c:	ldr	w0, [x29, #120]
  415940:	cmp	w0, #0x0
  415944:	cneg	w0, w0, lt  // lt = tstop
  415948:	and	w0, w0, #0xff
  41594c:	neg	w0, w0
  415950:	str	w0, [x29, #84]
  415954:	b	415acc <bus_machine_method_copy+0x8b0>
  415958:	ldrb	w0, [x29, #71]
  41595c:	cmp	w0, #0x0
  415960:	b.eq	4159bc <bus_machine_method_copy+0x7a0>  // b.none
  415964:	ldr	w2, [x29, #72]
  415968:	ldr	w0, [x29, #80]
  41596c:	cmp	w0, #0x0
  415970:	b.ne	41597c <bus_machine_method_copy+0x760>  // b.any
  415974:	mov	w0, #0xffffffff            	// #-1
  415978:	b	415980 <bus_machine_method_copy+0x764>
  41597c:	mov	w0, #0x0                   	// #0
  415980:	ldr	w1, [x29, #80]
  415984:	cmp	w1, #0x0
  415988:	b.ne	415994 <bus_machine_method_copy+0x778>  // b.any
  41598c:	mov	w1, #0xffffffff            	// #-1
  415990:	b	415998 <bus_machine_method_copy+0x77c>
  415994:	mov	w1, #0x0                   	// #0
  415998:	ldr	w6, [x29, #88]
  41599c:	mov	w5, w1
  4159a0:	mov	w4, w0
  4159a4:	ldr	x3, [x29, #200]
  4159a8:	ldr	x1, [x29, #208]
  4159ac:	ldr	w0, [x29, #100]
  4159b0:	bl	410c04 <copy_tree_at>
  4159b4:	str	w0, [x29, #84]
  4159b8:	b	415a14 <bus_machine_method_copy+0x7f8>
  4159bc:	ldr	w7, [x29, #72]
  4159c0:	ldr	w0, [x29, #80]
  4159c4:	cmp	w0, #0x0
  4159c8:	b.eq	4159d4 <bus_machine_method_copy+0x7b8>  // b.none
  4159cc:	ldr	w0, [x29, #80]
  4159d0:	b	4159d8 <bus_machine_method_copy+0x7bc>
  4159d4:	mov	w0, #0xffffffff            	// #-1
  4159d8:	ldr	w1, [x29, #80]
  4159dc:	cmp	w1, #0x0
  4159e0:	b.eq	4159ec <bus_machine_method_copy+0x7d0>  // b.none
  4159e4:	ldr	w1, [x29, #80]
  4159e8:	b	4159f0 <bus_machine_method_copy+0x7d4>
  4159ec:	mov	w1, #0xffffffff            	// #-1
  4159f0:	ldr	w6, [x29, #88]
  4159f4:	mov	w5, w1
  4159f8:	mov	w4, w0
  4159fc:	ldr	x3, [x29, #208]
  415a00:	ldr	w2, [x29, #100]
  415a04:	ldr	x1, [x29, #200]
  415a08:	mov	w0, w7
  415a0c:	bl	410c04 <copy_tree_at>
  415a10:	str	w0, [x29, #84]
  415a14:	ldr	w0, [x29, #72]
  415a18:	bl	405240 <safe_close@plt>
  415a1c:	str	w0, [x29, #72]
  415a20:	ldr	w0, [x29, #100]
  415a24:	bl	405240 <safe_close@plt>
  415a28:	str	w0, [x29, #100]
  415a2c:	ldr	w0, [x29, #84]
  415a30:	cmp	w0, #0x0
  415a34:	b.ge	415ac4 <bus_machine_method_copy+0x8a8>  // b.tcont
  415a38:	mov	w0, #0x3                   	// #3
  415a3c:	str	w0, [x29, #104]
  415a40:	ldr	w0, [x29, #84]
  415a44:	str	w0, [x29, #108]
  415a48:	str	wzr, [x29, #112]
  415a4c:	ldr	w0, [x29, #112]
  415a50:	bl	405c20 <log_get_max_level_realm@plt>
  415a54:	mov	w1, w0
  415a58:	ldr	w0, [x29, #104]
  415a5c:	and	w0, w0, #0x7
  415a60:	cmp	w1, w0
  415a64:	b.lt	415aa8 <bus_machine_method_copy+0x88c>  // b.tstop
  415a68:	ldr	w0, [x29, #112]
  415a6c:	lsl	w1, w0, #10
  415a70:	ldr	w0, [x29, #104]
  415a74:	orr	w6, w1, w0
  415a78:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  415a7c:	add	x1, x0, #0x543
  415a80:	adrp	x0, 41c000 <__func__.8711+0xb30>
  415a84:	add	x5, x0, #0x348
  415a88:	adrp	x0, 41c000 <__func__.8711+0xb30>
  415a8c:	add	x4, x0, #0x888
  415a90:	mov	w3, #0x4a3                 	// #1187
  415a94:	mov	x2, x1
  415a98:	ldr	w1, [x29, #108]
  415a9c:	mov	w0, w6
  415aa0:	bl	405750 <log_internal_realm@plt>
  415aa4:	b	415abc <bus_machine_method_copy+0x8a0>
  415aa8:	ldr	w0, [x29, #108]
  415aac:	cmp	w0, #0x0
  415ab0:	cneg	w0, w0, lt  // lt = tstop
  415ab4:	and	w0, w0, #0xff
  415ab8:	neg	w0, w0
  415abc:	str	w0, [x29, #84]
  415ac0:	b	415acc <bus_machine_method_copy+0x8b0>
  415ac4:	mov	w0, #0x0                   	// #0
  415ac8:	bl	405300 <_exit@plt>
  415acc:	ldr	w0, [x29, #276]
  415ad0:	add	x1, x29, #0x54
  415ad4:	mov	x2, #0x4                   	// #4
  415ad8:	bl	405620 <write@plt>
  415adc:	mov	w0, #0x1                   	// #1
  415ae0:	bl	405300 <_exit@plt>
  415ae4:	ldr	w0, [x29, #276]
  415ae8:	bl	405240 <safe_close@plt>
  415aec:	str	w0, [x29, #276]
  415af0:	ldr	x0, [x29, #192]
  415af4:	ldr	x0, [x0]
  415af8:	ldr	w1, [x29, #76]
  415afc:	ldr	w2, [x29, #272]
  415b00:	mov	x5, #0x0                   	// #0
  415b04:	mov	w4, w2
  415b08:	ldr	x3, [x29, #56]
  415b0c:	mov	w2, w1
  415b10:	ldr	x1, [x29, #192]
  415b14:	bl	4188a0 <operation_new>
  415b18:	str	w0, [x29, #84]
  415b1c:	ldr	w0, [x29, #84]
  415b20:	cmp	w0, #0x0
  415b24:	b.ge	415b38 <bus_machine_method_copy+0x91c>  // b.tcont
  415b28:	ldr	w0, [x29, #76]
  415b2c:	bl	405280 <sigkill_wait@plt>
  415b30:	ldr	w19, [x29, #84]
  415b34:	b	415b44 <bus_machine_method_copy+0x928>
  415b38:	mov	w0, #0xffffffff            	// #-1
  415b3c:	str	w0, [x29, #272]
  415b40:	mov	w19, #0x1                   	// #1
  415b44:	add	x0, x29, #0x48
  415b48:	bl	410ca8 <closep>
  415b4c:	add	x0, x29, #0x110
  415b50:	bl	410ccc <close_pairp>
  415b54:	mov	w1, w19
  415b58:	adrp	x0, 431000 <machine_vtable+0x4a0>
  415b5c:	ldr	x0, [x0, #3952]
  415b60:	ldr	x2, [x29, #280]
  415b64:	ldr	x0, [x0]
  415b68:	eor	x0, x2, x0
  415b6c:	cmp	x0, #0x0
  415b70:	b.eq	415b78 <bus_machine_method_copy+0x95c>  // b.none
  415b74:	bl	4055f0 <__stack_chk_fail@plt>
  415b78:	mov	w0, w1
  415b7c:	mov	sp, x29
  415b80:	ldr	x19, [sp, #16]
  415b84:	ldp	x29, x30, [sp], #288
  415b88:	ret

0000000000415b8c <bus_machine_method_open_root_directory>:
  415b8c:	sub	sp, sp, #0x90
  415b90:	stp	x29, x30, [sp, #32]
  415b94:	add	x29, sp, #0x20
  415b98:	stp	x19, x20, [sp, #48]
  415b9c:	str	x0, [sp, #88]
  415ba0:	str	x1, [sp, #80]
  415ba4:	str	x2, [sp, #72]
  415ba8:	adrp	x0, 431000 <machine_vtable+0x4a0>
  415bac:	ldr	x0, [x0, #3952]
  415bb0:	ldr	x1, [x0]
  415bb4:	str	x1, [sp, #136]
  415bb8:	mov	x1, #0x0                   	// #0
  415bbc:	mov	w0, #0xffffffff            	// #-1
  415bc0:	str	w0, [sp, #96]
  415bc4:	ldr	x0, [sp, #80]
  415bc8:	str	x0, [sp, #120]
  415bcc:	ldr	x0, [sp, #88]
  415bd0:	cmp	x0, #0x0
  415bd4:	cset	w0, eq  // eq = none
  415bd8:	and	w0, w0, #0xff
  415bdc:	and	x0, x0, #0xff
  415be0:	cmp	x0, #0x0
  415be4:	b.eq	415c10 <bus_machine_method_open_root_directory+0x84>  // b.none
  415be8:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  415bec:	add	x1, x0, #0x543
  415bf0:	adrp	x0, 41c000 <__func__.8711+0xb30>
  415bf4:	add	x4, x0, #0x8a0
  415bf8:	mov	w3, #0x4c1                 	// #1217
  415bfc:	mov	x2, x1
  415c00:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  415c04:	add	x1, x0, #0x588
  415c08:	mov	w0, #0x0                   	// #0
  415c0c:	bl	4052a0 <log_assert_failed_realm@plt>
  415c10:	ldr	x0, [sp, #120]
  415c14:	cmp	x0, #0x0
  415c18:	cset	w0, eq  // eq = none
  415c1c:	and	w0, w0, #0xff
  415c20:	and	x0, x0, #0xff
  415c24:	cmp	x0, #0x0
  415c28:	b.eq	415c54 <bus_machine_method_open_root_directory+0xc8>  // b.none
  415c2c:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  415c30:	add	x1, x0, #0x543
  415c34:	adrp	x0, 41c000 <__func__.8711+0xb30>
  415c38:	add	x4, x0, #0x8a0
  415c3c:	mov	w3, #0x4c2                 	// #1218
  415c40:	mov	x2, x1
  415c44:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  415c48:	add	x1, x0, #0x580
  415c4c:	mov	w0, #0x0                   	// #0
  415c50:	bl	4052a0 <log_assert_failed_realm@plt>
  415c54:	ldr	x0, [sp, #120]
  415c58:	ldr	x0, [x0]
  415c5c:	add	x0, x0, #0x28
  415c60:	ldr	x7, [sp, #72]
  415c64:	mov	x6, x0
  415c68:	mov	w5, #0xffffffff            	// #-1
  415c6c:	mov	w4, #0x0                   	// #0
  415c70:	mov	x3, #0x0                   	// #0
  415c74:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  415c78:	add	x2, x0, #0x590
  415c7c:	mov	w1, #0x15                  	// #21
  415c80:	ldr	x0, [sp, #88]
  415c84:	bl	405bb0 <bus_verify_polkit_async@plt>
  415c88:	str	w0, [sp, #116]
  415c8c:	ldr	w0, [sp, #116]
  415c90:	cmp	w0, #0x0
  415c94:	b.ge	415ca0 <bus_machine_method_open_root_directory+0x114>  // b.tcont
  415c98:	ldr	w19, [sp, #116]
  415c9c:	b	415fe8 <bus_machine_method_open_root_directory+0x45c>
  415ca0:	ldr	w0, [sp, #116]
  415ca4:	cmp	w0, #0x0
  415ca8:	b.ne	415cb4 <bus_machine_method_open_root_directory+0x128>  // b.any
  415cac:	mov	w19, #0x1                   	// #1
  415cb0:	b	415fe8 <bus_machine_method_open_root_directory+0x45c>
  415cb4:	ldr	x0, [sp, #120]
  415cb8:	ldr	w0, [x0, #32]
  415cbc:	cmp	w0, #0x0
  415cc0:	b.eq	415d00 <bus_machine_method_open_root_directory+0x174>  // b.none
  415cc4:	cmp	w0, #0x2
  415cc8:	b.ne	415fa8 <bus_machine_method_open_root_directory+0x41c>  // b.any
  415ccc:	mov	w1, #0x4000                	// #16384
  415cd0:	movk	w1, #0x8, lsl #16
  415cd4:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  415cd8:	add	x0, x0, #0xee8
  415cdc:	bl	405b30 <open64@plt>
  415ce0:	str	w0, [sp, #96]
  415ce4:	ldr	w0, [sp, #96]
  415ce8:	cmp	w0, #0x0
  415cec:	b.ge	415fc8 <bus_machine_method_open_root_directory+0x43c>  // b.tcont
  415cf0:	bl	4054d0 <__errno_location@plt>
  415cf4:	ldr	w0, [x0]
  415cf8:	neg	w19, w0
  415cfc:	b	415fe8 <bus_machine_method_open_root_directory+0x45c>
  415d00:	mov	w0, #0xffffffff            	// #-1
  415d04:	str	w0, [sp, #100]
  415d08:	mov	w0, #0xffffffff            	// #-1
  415d0c:	str	w0, [sp, #104]
  415d10:	mov	w0, #0xffffffff            	// #-1
  415d14:	str	w0, [sp, #128]
  415d18:	mov	w0, #0xffffffff            	// #-1
  415d1c:	str	w0, [sp, #132]
  415d20:	ldr	x0, [sp, #120]
  415d24:	ldr	w0, [x0, #80]
  415d28:	add	x2, sp, #0x68
  415d2c:	add	x1, sp, #0x64
  415d30:	mov	x5, x2
  415d34:	mov	x4, #0x0                   	// #0
  415d38:	mov	x3, #0x0                   	// #0
  415d3c:	mov	x2, x1
  415d40:	mov	x1, #0x0                   	// #0
  415d44:	bl	405130 <namespace_open@plt>
  415d48:	str	w0, [sp, #116]
  415d4c:	ldr	w0, [sp, #116]
  415d50:	cmp	w0, #0x0
  415d54:	b.ge	415d64 <bus_machine_method_open_root_directory+0x1d8>  // b.tcont
  415d58:	ldr	w19, [sp, #116]
  415d5c:	mov	w20, #0x0                   	// #0
  415d60:	b	415f5c <bus_machine_method_open_root_directory+0x3d0>
  415d64:	add	x0, sp, #0x80
  415d68:	mov	x3, x0
  415d6c:	mov	w2, #0x0                   	// #0
  415d70:	mov	w1, #0x2                   	// #2
  415d74:	mov	w0, #0x1                   	// #1
  415d78:	bl	405640 <socketpair@plt>
  415d7c:	cmp	w0, #0x0
  415d80:	b.ge	415d98 <bus_machine_method_open_root_directory+0x20c>  // b.tcont
  415d84:	bl	4054d0 <__errno_location@plt>
  415d88:	ldr	w0, [x0]
  415d8c:	neg	w19, w0
  415d90:	mov	w20, #0x0                   	// #0
  415d94:	b	415f5c <bus_machine_method_open_root_directory+0x3d0>
  415d98:	ldr	w2, [sp, #100]
  415d9c:	ldr	w0, [sp, #104]
  415da0:	add	x1, sp, #0x6c
  415da4:	str	x1, [sp, #16]
  415da8:	str	w0, [sp, #8]
  415dac:	mov	w0, #0xffffffff            	// #-1
  415db0:	str	w0, [sp]
  415db4:	mov	w7, #0xffffffff            	// #-1
  415db8:	mov	w6, w2
  415dbc:	mov	w5, #0xffffffff            	// #-1
  415dc0:	mov	w4, #0x5                   	// #5
  415dc4:	mov	x3, #0x0                   	// #0
  415dc8:	mov	x2, #0x0                   	// #0
  415dcc:	adrp	x0, 41c000 <__func__.8711+0xb30>
  415dd0:	add	x1, x0, #0x360
  415dd4:	adrp	x0, 41c000 <__func__.8711+0xb30>
  415dd8:	add	x0, x0, #0x370
  415ddc:	bl	4053c0 <namespace_fork@plt>
  415de0:	str	w0, [sp, #116]
  415de4:	ldr	w0, [sp, #116]
  415de8:	cmp	w0, #0x0
  415dec:	b.ge	415e10 <bus_machine_method_open_root_directory+0x284>  // b.tcont
  415df0:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  415df4:	add	x2, x0, #0x738
  415df8:	ldr	w1, [sp, #116]
  415dfc:	ldr	x0, [sp, #72]
  415e00:	bl	405070 <sd_bus_error_set_errnof@plt>
  415e04:	mov	w19, w0
  415e08:	mov	w20, #0x0                   	// #0
  415e0c:	b	415f5c <bus_machine_method_open_root_directory+0x3d0>
  415e10:	ldr	w0, [sp, #116]
  415e14:	cmp	w0, #0x0
  415e18:	b.ne	415ea8 <bus_machine_method_open_root_directory+0x31c>  // b.any
  415e1c:	mov	w0, #0xffffffff            	// #-1
  415e20:	str	w0, [sp, #112]
  415e24:	ldr	w0, [sp, #128]
  415e28:	bl	405240 <safe_close@plt>
  415e2c:	str	w0, [sp, #128]
  415e30:	mov	w1, #0x4000                	// #16384
  415e34:	movk	w1, #0x8, lsl #16
  415e38:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  415e3c:	add	x0, x0, #0xee8
  415e40:	bl	405b30 <open64@plt>
  415e44:	str	w0, [sp, #112]
  415e48:	ldr	w0, [sp, #112]
  415e4c:	cmp	w0, #0x0
  415e50:	b.ge	415e5c <bus_machine_method_open_root_directory+0x2d0>  // b.tcont
  415e54:	mov	w0, #0x1                   	// #1
  415e58:	bl	405300 <_exit@plt>
  415e5c:	ldr	w0, [sp, #132]
  415e60:	ldr	w1, [sp, #112]
  415e64:	mov	w6, #0x0                   	// #0
  415e68:	mov	w5, #0x0                   	// #0
  415e6c:	mov	x4, #0x0                   	// #0
  415e70:	mov	x3, #0x0                   	// #0
  415e74:	mov	x2, #0x0                   	// #0
  415e78:	bl	404f80 <send_one_fd_iov_sa@plt>
  415e7c:	str	w0, [sp, #116]
  415e80:	ldr	w0, [sp, #112]
  415e84:	bl	405240 <safe_close@plt>
  415e88:	str	w0, [sp, #112]
  415e8c:	ldr	w0, [sp, #116]
  415e90:	cmp	w0, #0x0
  415e94:	b.ge	415ea0 <bus_machine_method_open_root_directory+0x314>  // b.tcont
  415e98:	mov	w0, #0x1                   	// #1
  415e9c:	bl	405300 <_exit@plt>
  415ea0:	mov	w0, #0x0                   	// #0
  415ea4:	bl	405300 <_exit@plt>
  415ea8:	ldr	w0, [sp, #132]
  415eac:	bl	405240 <safe_close@plt>
  415eb0:	str	w0, [sp, #132]
  415eb4:	ldr	w0, [sp, #108]
  415eb8:	mov	w2, #0x0                   	// #0
  415ebc:	mov	w1, w0
  415ec0:	adrp	x0, 41c000 <__func__.8711+0xb30>
  415ec4:	add	x0, x0, #0x370
  415ec8:	bl	4054f0 <wait_for_terminate_and_check@plt>
  415ecc:	str	w0, [sp, #116]
  415ed0:	ldr	w0, [sp, #116]
  415ed4:	cmp	w0, #0x0
  415ed8:	b.ge	415efc <bus_machine_method_open_root_directory+0x370>  // b.tcont
  415edc:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  415ee0:	add	x2, x0, #0x750
  415ee4:	ldr	w1, [sp, #116]
  415ee8:	ldr	x0, [sp, #72]
  415eec:	bl	405070 <sd_bus_error_set_errnof@plt>
  415ef0:	mov	w19, w0
  415ef4:	mov	w20, #0x0                   	// #0
  415ef8:	b	415f5c <bus_machine_method_open_root_directory+0x3d0>
  415efc:	ldr	w0, [sp, #116]
  415f00:	cmp	w0, #0x0
  415f04:	b.eq	415f2c <bus_machine_method_open_root_directory+0x3a0>  // b.none
  415f08:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  415f0c:	add	x2, x0, #0x770
  415f10:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  415f14:	add	x1, x0, #0x788
  415f18:	ldr	x0, [sp, #72]
  415f1c:	bl	4055d0 <sd_bus_error_setf@plt>
  415f20:	mov	w19, w0
  415f24:	mov	w20, #0x0                   	// #0
  415f28:	b	415f5c <bus_machine_method_open_root_directory+0x3d0>
  415f2c:	ldr	w0, [sp, #128]
  415f30:	mov	w1, #0x40                  	// #64
  415f34:	bl	405b00 <receive_one_fd@plt>
  415f38:	str	w0, [sp, #96]
  415f3c:	ldr	w0, [sp, #96]
  415f40:	cmp	w0, #0x0
  415f44:	b.ge	415f54 <bus_machine_method_open_root_directory+0x3c8>  // b.tcont
  415f48:	ldr	w19, [sp, #96]
  415f4c:	mov	w20, #0x0                   	// #0
  415f50:	b	415f5c <bus_machine_method_open_root_directory+0x3d0>
  415f54:	mov	w20, #0x1                   	// #1
  415f58:	nop
  415f5c:	add	x0, sp, #0x80
  415f60:	bl	410ccc <close_pairp>
  415f64:	cmp	w20, #0x0
  415f68:	b.ne	415f74 <bus_machine_method_open_root_directory+0x3e8>  // b.any
  415f6c:	mov	w20, #0x0                   	// #0
  415f70:	b	415f78 <bus_machine_method_open_root_directory+0x3ec>
  415f74:	mov	w20, #0x1                   	// #1
  415f78:	add	x0, sp, #0x68
  415f7c:	bl	410ca8 <closep>
  415f80:	cmp	w20, #0x0
  415f84:	b.ne	415f90 <bus_machine_method_open_root_directory+0x404>  // b.any
  415f88:	mov	w20, #0x0                   	// #0
  415f8c:	b	415f94 <bus_machine_method_open_root_directory+0x408>
  415f90:	mov	w20, #0x1                   	// #1
  415f94:	add	x0, sp, #0x64
  415f98:	bl	410ca8 <closep>
  415f9c:	cmp	w20, #0x0
  415fa0:	b.ne	415fcc <bus_machine_method_open_root_directory+0x440>  // b.any
  415fa4:	b	415fe8 <bus_machine_method_open_root_directory+0x45c>
  415fa8:	adrp	x0, 41c000 <__func__.8711+0xb30>
  415fac:	add	x2, x0, #0x380
  415fb0:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  415fb4:	add	x1, x0, #0x7f8
  415fb8:	ldr	x0, [sp, #72]
  415fbc:	bl	4055d0 <sd_bus_error_setf@plt>
  415fc0:	mov	w19, w0
  415fc4:	b	415fe8 <bus_machine_method_open_root_directory+0x45c>
  415fc8:	nop
  415fcc:	ldr	w0, [sp, #96]
  415fd0:	mov	w2, w0
  415fd4:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  415fd8:	add	x1, x0, #0xc20
  415fdc:	ldr	x0, [sp, #88]
  415fe0:	bl	404f00 <sd_bus_reply_method_return@plt>
  415fe4:	mov	w19, w0
  415fe8:	add	x0, sp, #0x60
  415fec:	bl	410ca8 <closep>
  415ff0:	mov	w1, w19
  415ff4:	adrp	x0, 431000 <machine_vtable+0x4a0>
  415ff8:	ldr	x0, [x0, #3952]
  415ffc:	ldr	x2, [sp, #136]
  416000:	ldr	x0, [x0]
  416004:	eor	x0, x2, x0
  416008:	cmp	x0, #0x0
  41600c:	b.eq	416014 <bus_machine_method_open_root_directory+0x488>  // b.none
  416010:	bl	4055f0 <__stack_chk_fail@plt>
  416014:	mov	w0, w1
  416018:	ldp	x19, x20, [sp, #48]
  41601c:	ldp	x29, x30, [sp, #32]
  416020:	add	sp, sp, #0x90
  416024:	ret

0000000000416028 <bus_machine_method_get_uid_shift>:
  416028:	stp	x29, x30, [sp, #-80]!
  41602c:	mov	x29, sp
  416030:	str	x0, [sp, #40]
  416034:	str	x1, [sp, #32]
  416038:	str	x2, [sp, #24]
  41603c:	adrp	x0, 431000 <machine_vtable+0x4a0>
  416040:	ldr	x0, [x0, #3952]
  416044:	ldr	x1, [x0]
  416048:	str	x1, [sp, #72]
  41604c:	mov	x1, #0x0                   	// #0
  416050:	ldr	x0, [sp, #32]
  416054:	str	x0, [sp, #64]
  416058:	str	wzr, [sp, #56]
  41605c:	ldr	x0, [sp, #40]
  416060:	cmp	x0, #0x0
  416064:	cset	w0, eq  // eq = none
  416068:	and	w0, w0, #0xff
  41606c:	and	x0, x0, #0xff
  416070:	cmp	x0, #0x0
  416074:	b.eq	4160a0 <bus_machine_method_get_uid_shift+0x78>  // b.none
  416078:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  41607c:	add	x1, x0, #0x543
  416080:	adrp	x0, 41c000 <__func__.8711+0xb30>
  416084:	add	x4, x0, #0x8c8
  416088:	mov	w3, #0x517                 	// #1303
  41608c:	mov	x2, x1
  416090:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  416094:	add	x1, x0, #0x588
  416098:	mov	w0, #0x0                   	// #0
  41609c:	bl	4052a0 <log_assert_failed_realm@plt>
  4160a0:	ldr	x0, [sp, #64]
  4160a4:	cmp	x0, #0x0
  4160a8:	cset	w0, eq  // eq = none
  4160ac:	and	w0, w0, #0xff
  4160b0:	and	x0, x0, #0xff
  4160b4:	cmp	x0, #0x0
  4160b8:	b.eq	4160e4 <bus_machine_method_get_uid_shift+0xbc>  // b.none
  4160bc:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  4160c0:	add	x1, x0, #0x543
  4160c4:	adrp	x0, 41c000 <__func__.8711+0xb30>
  4160c8:	add	x4, x0, #0x8c8
  4160cc:	mov	w3, #0x518                 	// #1304
  4160d0:	mov	x2, x1
  4160d4:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  4160d8:	add	x1, x0, #0x580
  4160dc:	mov	w0, #0x0                   	// #0
  4160e0:	bl	4052a0 <log_assert_failed_realm@plt>
  4160e4:	ldr	x0, [sp, #64]
  4160e8:	ldr	w0, [x0, #32]
  4160ec:	cmp	w0, #0x2
  4160f0:	b.ne	41610c <bus_machine_method_get_uid_shift+0xe4>  // b.any
  4160f4:	mov	w2, #0x0                   	// #0
  4160f8:	adrp	x0, 41c000 <__func__.8711+0xb30>
  4160fc:	add	x1, x0, #0x3c8
  416100:	ldr	x0, [sp, #40]
  416104:	bl	404f00 <sd_bus_reply_method_return@plt>
  416108:	b	4161ac <bus_machine_method_get_uid_shift+0x184>
  41610c:	ldr	x0, [sp, #64]
  416110:	ldr	w0, [x0, #32]
  416114:	cmp	w0, #0x0
  416118:	b.eq	416138 <bus_machine_method_get_uid_shift+0x110>  // b.none
  41611c:	adrp	x0, 41c000 <__func__.8711+0xb30>
  416120:	add	x2, x0, #0x3d0
  416124:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  416128:	add	x1, x0, #0x7f8
  41612c:	ldr	x0, [sp, #24]
  416130:	bl	4055d0 <sd_bus_error_setf@plt>
  416134:	b	4161ac <bus_machine_method_get_uid_shift+0x184>
  416138:	add	x0, sp, #0x38
  41613c:	mov	x1, x0
  416140:	ldr	x0, [sp, #64]
  416144:	bl	40a938 <machine_get_uid_shift>
  416148:	str	w0, [sp, #60]
  41614c:	ldr	w0, [sp, #60]
  416150:	cmn	w0, #0x6
  416154:	b.ne	416180 <bus_machine_method_get_uid_shift+0x158>  // b.any
  416158:	ldr	x0, [sp, #64]
  41615c:	ldr	x0, [x0, #8]
  416160:	mov	x3, x0
  416164:	adrp	x0, 41c000 <__func__.8711+0xb30>
  416168:	add	x2, x0, #0x410
  41616c:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  416170:	add	x1, x0, #0x7f8
  416174:	ldr	x0, [sp, #24]
  416178:	bl	4055d0 <sd_bus_error_setf@plt>
  41617c:	b	4161ac <bus_machine_method_get_uid_shift+0x184>
  416180:	ldr	w0, [sp, #60]
  416184:	cmp	w0, #0x0
  416188:	b.ge	416194 <bus_machine_method_get_uid_shift+0x16c>  // b.tcont
  41618c:	ldr	w0, [sp, #60]
  416190:	b	4161ac <bus_machine_method_get_uid_shift+0x184>
  416194:	ldr	w0, [sp, #56]
  416198:	mov	w2, w0
  41619c:	adrp	x0, 41c000 <__func__.8711+0xb30>
  4161a0:	add	x1, x0, #0x3c8
  4161a4:	ldr	x0, [sp, #40]
  4161a8:	bl	404f00 <sd_bus_reply_method_return@plt>
  4161ac:	mov	w1, w0
  4161b0:	adrp	x0, 431000 <machine_vtable+0x4a0>
  4161b4:	ldr	x0, [x0, #3952]
  4161b8:	ldr	x2, [sp, #72]
  4161bc:	ldr	x0, [x0]
  4161c0:	eor	x0, x2, x0
  4161c4:	cmp	x0, #0x0
  4161c8:	b.eq	4161d0 <bus_machine_method_get_uid_shift+0x1a8>  // b.none
  4161cc:	bl	4055f0 <__stack_chk_fail@plt>
  4161d0:	mov	w0, w1
  4161d4:	ldp	x29, x30, [sp], #80
  4161d8:	ret

00000000004161dc <machine_object_find>:
  4161dc:	stp	x29, x30, [sp, #-144]!
  4161e0:	mov	x29, sp
  4161e4:	stp	x19, x20, [sp, #16]
  4161e8:	str	x0, [sp, #72]
  4161ec:	str	x1, [sp, #64]
  4161f0:	str	x2, [sp, #56]
  4161f4:	str	x3, [sp, #48]
  4161f8:	str	x4, [sp, #40]
  4161fc:	str	x5, [sp, #32]
  416200:	adrp	x0, 431000 <machine_vtable+0x4a0>
  416204:	ldr	x0, [x0, #3952]
  416208:	ldr	x1, [x0]
  41620c:	str	x1, [sp, #136]
  416210:	mov	x1, #0x0                   	// #0
  416214:	ldr	x0, [sp, #48]
  416218:	str	x0, [sp, #112]
  41621c:	ldr	x0, [sp, #72]
  416220:	cmp	x0, #0x0
  416224:	cset	w0, eq  // eq = none
  416228:	and	w0, w0, #0xff
  41622c:	and	x0, x0, #0xff
  416230:	cmp	x0, #0x0
  416234:	b.eq	416260 <machine_object_find+0x84>  // b.none
  416238:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  41623c:	add	x1, x0, #0x543
  416240:	adrp	x0, 41c000 <__func__.8711+0xb30>
  416244:	add	x4, x0, #0x8f0
  416248:	mov	w3, #0x54d                 	// #1357
  41624c:	mov	x2, x1
  416250:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  416254:	add	x1, x0, #0x560
  416258:	mov	w0, #0x0                   	// #0
  41625c:	bl	4052a0 <log_assert_failed_realm@plt>
  416260:	ldr	x0, [sp, #64]
  416264:	cmp	x0, #0x0
  416268:	cset	w0, eq  // eq = none
  41626c:	and	w0, w0, #0xff
  416270:	and	x0, x0, #0xff
  416274:	cmp	x0, #0x0
  416278:	b.eq	4162a4 <machine_object_find+0xc8>  // b.none
  41627c:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  416280:	add	x1, x0, #0x543
  416284:	adrp	x0, 41c000 <__func__.8711+0xb30>
  416288:	add	x4, x0, #0x8f0
  41628c:	mov	w3, #0x54e                 	// #1358
  416290:	mov	x2, x1
  416294:	adrp	x0, 41c000 <__func__.8711+0xb30>
  416298:	add	x1, x0, #0x5c0
  41629c:	mov	w0, #0x0                   	// #0
  4162a0:	bl	4052a0 <log_assert_failed_realm@plt>
  4162a4:	ldr	x0, [sp, #56]
  4162a8:	cmp	x0, #0x0
  4162ac:	cset	w0, eq  // eq = none
  4162b0:	and	w0, w0, #0xff
  4162b4:	and	x0, x0, #0xff
  4162b8:	cmp	x0, #0x0
  4162bc:	b.eq	4162e8 <machine_object_find+0x10c>  // b.none
  4162c0:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  4162c4:	add	x1, x0, #0x543
  4162c8:	adrp	x0, 41c000 <__func__.8711+0xb30>
  4162cc:	add	x4, x0, #0x8f0
  4162d0:	mov	w3, #0x54f                 	// #1359
  4162d4:	mov	x2, x1
  4162d8:	adrp	x0, 41c000 <__func__.8711+0xb30>
  4162dc:	add	x1, x0, #0x5c8
  4162e0:	mov	w0, #0x0                   	// #0
  4162e4:	bl	4052a0 <log_assert_failed_realm@plt>
  4162e8:	ldr	x0, [sp, #40]
  4162ec:	cmp	x0, #0x0
  4162f0:	cset	w0, eq  // eq = none
  4162f4:	and	w0, w0, #0xff
  4162f8:	and	x0, x0, #0xff
  4162fc:	cmp	x0, #0x0
  416300:	b.eq	41632c <machine_object_find+0x150>  // b.none
  416304:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  416308:	add	x1, x0, #0x543
  41630c:	adrp	x0, 41c000 <__func__.8711+0xb30>
  416310:	add	x4, x0, #0x8f0
  416314:	mov	w3, #0x550                 	// #1360
  416318:	mov	x2, x1
  41631c:	adrp	x0, 41c000 <__func__.8711+0xb30>
  416320:	add	x1, x0, #0x5d8
  416324:	mov	w0, #0x0                   	// #0
  416328:	bl	4052a0 <log_assert_failed_realm@plt>
  41632c:	ldr	x0, [sp, #112]
  416330:	cmp	x0, #0x0
  416334:	cset	w0, eq  // eq = none
  416338:	and	w0, w0, #0xff
  41633c:	and	x0, x0, #0xff
  416340:	cmp	x0, #0x0
  416344:	b.eq	416370 <machine_object_find+0x194>  // b.none
  416348:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  41634c:	add	x1, x0, #0x543
  416350:	adrp	x0, 41c000 <__func__.8711+0xb30>
  416354:	add	x4, x0, #0x8f0
  416358:	mov	w3, #0x551                 	// #1361
  41635c:	mov	x2, x1
  416360:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  416364:	add	x1, x0, #0x580
  416368:	mov	w0, #0x0                   	// #0
  41636c:	bl	4052a0 <log_assert_failed_realm@plt>
  416370:	adrp	x0, 41c000 <__func__.8711+0xb30>
  416374:	add	x1, x0, #0x5e0
  416378:	ldr	x0, [sp, #64]
  41637c:	bl	405840 <strcmp@plt>
  416380:	cmp	w0, #0x0
  416384:	b.ne	416454 <machine_object_find+0x278>  // b.any
  416388:	str	xzr, [sp, #104]
  41638c:	ldr	x0, [sp, #72]
  416390:	bl	4055c0 <sd_bus_get_current_message@plt>
  416394:	str	x0, [sp, #128]
  416398:	ldr	x0, [sp, #128]
  41639c:	cmp	x0, #0x0
  4163a0:	b.ne	4163b0 <machine_object_find+0x1d4>  // b.any
  4163a4:	mov	w19, #0x0                   	// #0
  4163a8:	mov	w20, #0x0                   	// #0
  4163ac:	b	416440 <machine_object_find+0x264>
  4163b0:	add	x0, sp, #0x68
  4163b4:	mov	x2, x0
  4163b8:	mov	x1, #0x1                   	// #1
  4163bc:	ldr	x0, [sp, #128]
  4163c0:	bl	405c10 <sd_bus_query_sender_creds@plt>
  4163c4:	str	w0, [sp, #92]
  4163c8:	ldr	w0, [sp, #92]
  4163cc:	cmp	w0, #0x0
  4163d0:	b.ge	4163e0 <machine_object_find+0x204>  // b.tcont
  4163d4:	ldr	w19, [sp, #92]
  4163d8:	mov	w20, #0x0                   	// #0
  4163dc:	b	416440 <machine_object_find+0x264>
  4163e0:	ldr	x0, [sp, #104]
  4163e4:	add	x1, sp, #0x58
  4163e8:	bl	404e00 <sd_bus_creds_get_pid@plt>
  4163ec:	str	w0, [sp, #92]
  4163f0:	ldr	w0, [sp, #92]
  4163f4:	cmp	w0, #0x0
  4163f8:	b.ge	416408 <machine_object_find+0x22c>  // b.tcont
  4163fc:	ldr	w19, [sp, #92]
  416400:	mov	w20, #0x0                   	// #0
  416404:	b	416440 <machine_object_find+0x264>
  416408:	ldr	w0, [sp, #88]
  41640c:	add	x1, sp, #0x60
  416410:	mov	x2, x1
  416414:	mov	w1, w0
  416418:	ldr	x0, [sp, #112]
  41641c:	bl	4103e0 <manager_get_machine_by_pid>
  416420:	str	w0, [sp, #92]
  416424:	ldr	w0, [sp, #92]
  416428:	cmp	w0, #0x0
  41642c:	b.gt	41643c <machine_object_find+0x260>
  416430:	mov	w19, #0x0                   	// #0
  416434:	mov	w20, #0x0                   	// #0
  416438:	b	416440 <machine_object_find+0x264>
  41643c:	mov	w20, #0x1                   	// #1
  416440:	add	x0, sp, #0x68
  416444:	bl	410a58 <sd_bus_creds_unrefp>
  416448:	cmp	w20, #0x1
  41644c:	b.ne	4164f8 <machine_object_find+0x31c>  // b.any
  416450:	b	4164e8 <machine_object_find+0x30c>
  416454:	str	xzr, [sp, #104]
  416458:	adrp	x0, 41c000 <__func__.8711+0xb30>
  41645c:	add	x1, x0, #0x608
  416460:	ldr	x0, [sp, #64]
  416464:	bl	410b5c <startswith>
  416468:	str	x0, [sp, #120]
  41646c:	ldr	x0, [sp, #120]
  416470:	cmp	x0, #0x0
  416474:	b.ne	416484 <machine_object_find+0x2a8>  // b.any
  416478:	mov	w19, #0x0                   	// #0
  41647c:	mov	w20, #0x0                   	// #0
  416480:	b	4164d8 <machine_object_find+0x2fc>
  416484:	ldr	x0, [sp, #120]
  416488:	bl	410bdc <bus_label_unescape>
  41648c:	str	x0, [sp, #104]
  416490:	ldr	x0, [sp, #104]
  416494:	cmp	x0, #0x0
  416498:	b.ne	4164a8 <machine_object_find+0x2cc>  // b.any
  41649c:	mov	w19, #0xfffffff4            	// #-12
  4164a0:	mov	w20, #0x0                   	// #0
  4164a4:	b	4164d8 <machine_object_find+0x2fc>
  4164a8:	ldr	x0, [sp, #112]
  4164ac:	ldr	x0, [x0, #16]
  4164b0:	ldr	x1, [sp, #104]
  4164b4:	bl	410a8c <hashmap_get>
  4164b8:	str	x0, [sp, #96]
  4164bc:	ldr	x0, [sp, #96]
  4164c0:	cmp	x0, #0x0
  4164c4:	b.ne	4164d4 <machine_object_find+0x2f8>  // b.any
  4164c8:	mov	w19, #0x0                   	// #0
  4164cc:	mov	w20, #0x0                   	// #0
  4164d0:	b	4164d8 <machine_object_find+0x2fc>
  4164d4:	mov	w20, #0x1                   	// #1
  4164d8:	add	x0, sp, #0x68
  4164dc:	bl	41091c <freep>
  4164e0:	cmp	w20, #0x1
  4164e4:	b.ne	4164f8 <machine_object_find+0x31c>  // b.any
  4164e8:	ldr	x1, [sp, #96]
  4164ec:	ldr	x0, [sp, #40]
  4164f0:	str	x1, [x0]
  4164f4:	mov	w19, #0x1                   	// #1
  4164f8:	mov	w1, w19
  4164fc:	adrp	x0, 431000 <machine_vtable+0x4a0>
  416500:	ldr	x0, [x0, #3952]
  416504:	ldr	x2, [sp, #136]
  416508:	ldr	x0, [x0]
  41650c:	eor	x0, x2, x0
  416510:	cmp	x0, #0x0
  416514:	b.eq	41651c <machine_object_find+0x340>  // b.none
  416518:	bl	4055f0 <__stack_chk_fail@plt>
  41651c:	mov	w0, w1
  416520:	ldp	x19, x20, [sp, #16]
  416524:	ldp	x29, x30, [sp], #144
  416528:	ret

000000000041652c <machine_bus_path>:
  41652c:	stp	x29, x30, [sp, #-64]!
  416530:	mov	x29, sp
  416534:	str	x19, [sp, #16]
  416538:	str	x0, [sp, #40]
  41653c:	adrp	x0, 431000 <machine_vtable+0x4a0>
  416540:	ldr	x0, [x0, #3952]
  416544:	ldr	x1, [x0]
  416548:	str	x1, [sp, #56]
  41654c:	mov	x1, #0x0                   	// #0
  416550:	str	xzr, [sp, #48]
  416554:	ldr	x0, [sp, #40]
  416558:	cmp	x0, #0x0
  41655c:	cset	w0, eq  // eq = none
  416560:	and	w0, w0, #0xff
  416564:	and	x0, x0, #0xff
  416568:	cmp	x0, #0x0
  41656c:	b.eq	416598 <machine_bus_path+0x6c>  // b.none
  416570:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  416574:	add	x1, x0, #0x543
  416578:	adrp	x0, 41c000 <__func__.8711+0xb30>
  41657c:	add	x4, x0, #0x908
  416580:	mov	w3, #0x57f                 	// #1407
  416584:	mov	x2, x1
  416588:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  41658c:	add	x1, x0, #0x580
  416590:	mov	w0, #0x0                   	// #0
  416594:	bl	4052a0 <log_assert_failed_realm@plt>
  416598:	ldr	x0, [sp, #40]
  41659c:	ldr	x0, [x0, #8]
  4165a0:	bl	404e60 <bus_label_escape@plt>
  4165a4:	str	x0, [sp, #48]
  4165a8:	ldr	x0, [sp, #48]
  4165ac:	cmp	x0, #0x0
  4165b0:	b.ne	4165bc <machine_bus_path+0x90>  // b.any
  4165b4:	mov	x19, #0x0                   	// #0
  4165b8:	b	4165d8 <machine_bus_path+0xac>
  4165bc:	ldr	x0, [sp, #48]
  4165c0:	mov	x2, #0x0                   	// #0
  4165c4:	mov	x1, x0
  4165c8:	adrp	x0, 41c000 <__func__.8711+0xb30>
  4165cc:	add	x0, x0, #0x608
  4165d0:	bl	405230 <strjoin_real@plt>
  4165d4:	mov	x19, x0
  4165d8:	add	x0, sp, #0x30
  4165dc:	bl	41091c <freep>
  4165e0:	mov	x1, x19
  4165e4:	adrp	x0, 431000 <machine_vtable+0x4a0>
  4165e8:	ldr	x0, [x0, #3952]
  4165ec:	ldr	x2, [sp, #56]
  4165f0:	ldr	x0, [x0]
  4165f4:	eor	x0, x2, x0
  4165f8:	cmp	x0, #0x0
  4165fc:	b.eq	416604 <machine_bus_path+0xd8>  // b.none
  416600:	bl	4055f0 <__stack_chk_fail@plt>
  416604:	mov	x0, x1
  416608:	ldr	x19, [sp, #16]
  41660c:	ldp	x29, x30, [sp], #64
  416610:	ret

0000000000416614 <machine_node_enumerator>:
  416614:	stp	x29, x30, [sp, #-160]!
  416618:	mov	x29, sp
  41661c:	str	x19, [sp, #16]
  416620:	str	x0, [sp, #72]
  416624:	str	x1, [sp, #64]
  416628:	str	x2, [sp, #56]
  41662c:	str	x3, [sp, #48]
  416630:	str	x4, [sp, #40]
  416634:	adrp	x0, 431000 <machine_vtable+0x4a0>
  416638:	ldr	x0, [x0, #3952]
  41663c:	ldr	x1, [x0]
  416640:	str	x1, [sp, #152]
  416644:	mov	x1, #0x0                   	// #0
  416648:	str	xzr, [sp, #96]
  41664c:	str	xzr, [sp, #104]
  416650:	ldr	x0, [sp, #56]
  416654:	str	x0, [sp, #112]
  416658:	ldr	x0, [sp, #72]
  41665c:	cmp	x0, #0x0
  416660:	cset	w0, eq  // eq = none
  416664:	and	w0, w0, #0xff
  416668:	and	x0, x0, #0xff
  41666c:	cmp	x0, #0x0
  416670:	b.eq	41669c <machine_node_enumerator+0x88>  // b.none
  416674:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  416678:	add	x1, x0, #0x543
  41667c:	adrp	x0, 41c000 <__func__.8711+0xb30>
  416680:	add	x4, x0, #0x920
  416684:	mov	w3, #0x58f                 	// #1423
  416688:	mov	x2, x1
  41668c:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  416690:	add	x1, x0, #0x560
  416694:	mov	w0, #0x0                   	// #0
  416698:	bl	4052a0 <log_assert_failed_realm@plt>
  41669c:	ldr	x0, [sp, #64]
  4166a0:	cmp	x0, #0x0
  4166a4:	cset	w0, eq  // eq = none
  4166a8:	and	w0, w0, #0xff
  4166ac:	and	x0, x0, #0xff
  4166b0:	cmp	x0, #0x0
  4166b4:	b.eq	4166e0 <machine_node_enumerator+0xcc>  // b.none
  4166b8:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  4166bc:	add	x1, x0, #0x543
  4166c0:	adrp	x0, 41c000 <__func__.8711+0xb30>
  4166c4:	add	x4, x0, #0x920
  4166c8:	mov	w3, #0x590                 	// #1424
  4166cc:	mov	x2, x1
  4166d0:	adrp	x0, 41c000 <__func__.8711+0xb30>
  4166d4:	add	x1, x0, #0x5c0
  4166d8:	mov	w0, #0x0                   	// #0
  4166dc:	bl	4052a0 <log_assert_failed_realm@plt>
  4166e0:	ldr	x0, [sp, #48]
  4166e4:	cmp	x0, #0x0
  4166e8:	cset	w0, eq  // eq = none
  4166ec:	and	w0, w0, #0xff
  4166f0:	and	x0, x0, #0xff
  4166f4:	cmp	x0, #0x0
  4166f8:	b.eq	416724 <machine_node_enumerator+0x110>  // b.none
  4166fc:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  416700:	add	x1, x0, #0x543
  416704:	adrp	x0, 41c000 <__func__.8711+0xb30>
  416708:	add	x4, x0, #0x920
  41670c:	mov	w3, #0x591                 	// #1425
  416710:	mov	x2, x1
  416714:	adrp	x0, 41c000 <__func__.8711+0xb30>
  416718:	add	x1, x0, #0x630
  41671c:	mov	w0, #0x0                   	// #0
  416720:	bl	4052a0 <log_assert_failed_realm@plt>
  416724:	mov	w0, #0xfffffffe            	// #-2
  416728:	str	w0, [sp, #136]
  41672c:	str	xzr, [sp, #144]
  416730:	b	416778 <machine_node_enumerator+0x164>
  416734:	ldr	x0, [sp, #104]
  416738:	bl	41652c <machine_bus_path>
  41673c:	str	x0, [sp, #128]
  416740:	ldr	x0, [sp, #128]
  416744:	cmp	x0, #0x0
  416748:	b.ne	416754 <machine_node_enumerator+0x140>  // b.any
  41674c:	mov	w19, #0xfffffff4            	// #-12
  416750:	b	4167bc <machine_node_enumerator+0x1a8>
  416754:	add	x0, sp, #0x60
  416758:	ldr	x1, [sp, #128]
  41675c:	bl	405480 <strv_consume@plt>
  416760:	str	w0, [sp, #92]
  416764:	ldr	w0, [sp, #92]
  416768:	cmp	w0, #0x0
  41676c:	b.ge	416778 <machine_node_enumerator+0x164>  // b.tcont
  416770:	ldr	w19, [sp, #92]
  416774:	b	4167bc <machine_node_enumerator+0x1a8>
  416778:	ldr	x0, [sp, #112]
  41677c:	ldr	x0, [x0, #16]
  416780:	add	x2, sp, #0x68
  416784:	add	x1, sp, #0x88
  416788:	mov	x3, #0x0                   	// #0
  41678c:	bl	410ab0 <hashmap_iterate>
  416790:	and	w0, w0, #0xff
  416794:	cmp	w0, #0x0
  416798:	b.ne	416734 <machine_node_enumerator+0x120>  // b.any
  41679c:	ldr	x0, [sp, #96]
  4167a0:	str	x0, [sp, #120]
  4167a4:	str	xzr, [sp, #96]
  4167a8:	ldr	x1, [sp, #120]
  4167ac:	ldr	x0, [sp, #48]
  4167b0:	str	x1, [x0]
  4167b4:	mov	w19, #0x1                   	// #1
  4167b8:	b	4167bc <machine_node_enumerator+0x1a8>
  4167bc:	add	x0, sp, #0x60
  4167c0:	bl	410da4 <strv_freep>
  4167c4:	mov	w1, w19
  4167c8:	adrp	x0, 431000 <machine_vtable+0x4a0>
  4167cc:	ldr	x0, [x0, #3952]
  4167d0:	ldr	x2, [sp, #152]
  4167d4:	ldr	x0, [x0]
  4167d8:	eor	x0, x2, x0
  4167dc:	cmp	x0, #0x0
  4167e0:	b.eq	4167e8 <machine_node_enumerator+0x1d4>  // b.none
  4167e4:	bl	4055f0 <__stack_chk_fail@plt>
  4167e8:	mov	w0, w1
  4167ec:	ldr	x19, [sp, #16]
  4167f0:	ldp	x29, x30, [sp], #160
  4167f4:	ret

00000000004167f8 <machine_send_signal>:
  4167f8:	stp	x29, x30, [sp, #-64]!
  4167fc:	mov	x29, sp
  416800:	str	x19, [sp, #16]
  416804:	str	x0, [sp, #40]
  416808:	strb	w1, [sp, #39]
  41680c:	adrp	x0, 431000 <machine_vtable+0x4a0>
  416810:	ldr	x0, [x0, #3952]
  416814:	ldr	x1, [x0]
  416818:	str	x1, [sp, #56]
  41681c:	mov	x1, #0x0                   	// #0
  416820:	str	xzr, [sp, #48]
  416824:	ldr	x0, [sp, #40]
  416828:	cmp	x0, #0x0
  41682c:	cset	w0, eq  // eq = none
  416830:	and	w0, w0, #0xff
  416834:	and	x0, x0, #0xff
  416838:	cmp	x0, #0x0
  41683c:	b.eq	416868 <machine_send_signal+0x70>  // b.none
  416840:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  416844:	add	x1, x0, #0x543
  416848:	adrp	x0, 41c000 <__func__.8711+0xb30>
  41684c:	add	x4, x0, #0x938
  416850:	mov	w3, #0x5a7                 	// #1447
  416854:	mov	x2, x1
  416858:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  41685c:	add	x1, x0, #0x580
  416860:	mov	w0, #0x0                   	// #0
  416864:	bl	4052a0 <log_assert_failed_realm@plt>
  416868:	ldr	x0, [sp, #40]
  41686c:	bl	41652c <machine_bus_path>
  416870:	str	x0, [sp, #48]
  416874:	ldr	x0, [sp, #48]
  416878:	cmp	x0, #0x0
  41687c:	b.ne	416888 <machine_send_signal+0x90>  // b.any
  416880:	mov	w19, #0xfffffff4            	// #-12
  416884:	b	4168f0 <machine_send_signal+0xf8>
  416888:	ldr	x0, [sp, #40]
  41688c:	ldr	x0, [x0]
  416890:	ldr	x7, [x0, #8]
  416894:	ldrb	w0, [sp, #39]
  416898:	cmp	w0, #0x0
  41689c:	b.eq	4168ac <machine_send_signal+0xb4>  // b.none
  4168a0:	adrp	x0, 41c000 <__func__.8711+0xb30>
  4168a4:	add	x0, x0, #0x638
  4168a8:	b	4168b4 <machine_send_signal+0xbc>
  4168ac:	adrp	x0, 41c000 <__func__.8711+0xb30>
  4168b0:	add	x0, x0, #0x648
  4168b4:	ldr	x1, [sp, #40]
  4168b8:	ldr	x1, [x1, #8]
  4168bc:	ldr	x2, [sp, #48]
  4168c0:	mov	x6, x2
  4168c4:	mov	x5, x1
  4168c8:	adrp	x1, 41c000 <__func__.8711+0xb30>
  4168cc:	add	x4, x1, #0x658
  4168d0:	mov	x3, x0
  4168d4:	adrp	x0, 41c000 <__func__.8711+0xb30>
  4168d8:	add	x2, x0, #0x660
  4168dc:	adrp	x0, 41c000 <__func__.8711+0xb30>
  4168e0:	add	x1, x0, #0x688
  4168e4:	mov	x0, x7
  4168e8:	bl	405560 <sd_bus_emit_signal@plt>
  4168ec:	mov	w19, w0
  4168f0:	add	x0, sp, #0x30
  4168f4:	bl	41091c <freep>
  4168f8:	mov	w1, w19
  4168fc:	adrp	x0, 431000 <machine_vtable+0x4a0>
  416900:	ldr	x0, [x0, #3952]
  416904:	ldr	x2, [sp, #56]
  416908:	ldr	x0, [x0]
  41690c:	eor	x0, x2, x0
  416910:	cmp	x0, #0x0
  416914:	b.eq	41691c <machine_send_signal+0x124>  // b.none
  416918:	bl	4055f0 <__stack_chk_fail@plt>
  41691c:	mov	w0, w1
  416920:	ldr	x19, [sp, #16]
  416924:	ldp	x29, x30, [sp], #64
  416928:	ret

000000000041692c <machine_send_create_reply>:
  41692c:	stp	x29, x30, [sp, #-80]!
  416930:	mov	x29, sp
  416934:	str	x19, [sp, #16]
  416938:	str	x0, [sp, #40]
  41693c:	str	x1, [sp, #32]
  416940:	adrp	x0, 431000 <machine_vtable+0x4a0>
  416944:	ldr	x0, [x0, #3952]
  416948:	ldr	x1, [x0]
  41694c:	str	x1, [sp, #72]
  416950:	mov	x1, #0x0                   	// #0
  416954:	str	xzr, [sp, #48]
  416958:	str	xzr, [sp, #56]
  41695c:	ldr	x0, [sp, #40]
  416960:	cmp	x0, #0x0
  416964:	cset	w0, eq  // eq = none
  416968:	and	w0, w0, #0xff
  41696c:	and	x0, x0, #0xff
  416970:	cmp	x0, #0x0
  416974:	b.eq	4169a0 <machine_send_create_reply+0x74>  // b.none
  416978:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  41697c:	add	x1, x0, #0x543
  416980:	adrp	x0, 41c000 <__func__.8711+0xb30>
  416984:	add	x4, x0, #0x950
  416988:	mov	w3, #0x5b9                 	// #1465
  41698c:	mov	x2, x1
  416990:	adrp	x0, 41b000 <__PRETTY_FUNCTION__.13120+0x10>
  416994:	add	x1, x0, #0x580
  416998:	mov	w0, #0x0                   	// #0
  41699c:	bl	4052a0 <log_assert_failed_realm@plt>
  4169a0:	ldr	x0, [sp, #40]
  4169a4:	ldr	x0, [x0, #112]
  4169a8:	cmp	x0, #0x0
  4169ac:	b.ne	4169b8 <machine_send_create_reply+0x8c>  // b.any
  4169b0:	mov	w19, #0x0                   	// #0
  4169b4:	b	416a3c <machine_send_create_reply+0x110>
  4169b8:	ldr	x0, [sp, #40]
  4169bc:	ldr	x0, [x0, #112]
  4169c0:	str	x0, [sp, #64]
  4169c4:	ldr	x0, [sp, #40]
  4169c8:	str	xzr, [x0, #112]
  4169cc:	ldr	x0, [sp, #64]
  4169d0:	str	x0, [sp, #48]
  4169d4:	ldr	x0, [sp, #32]
  4169d8:	cmp	x0, #0x0
  4169dc:	b.eq	4169f4 <machine_send_create_reply+0xc8>  // b.none
  4169e0:	ldr	x0, [sp, #48]
  4169e4:	ldr	x1, [sp, #32]
  4169e8:	bl	405810 <sd_bus_reply_method_error@plt>
  4169ec:	mov	w19, w0
  4169f0:	b	416a3c <machine_send_create_reply+0x110>
  4169f4:	ldr	x0, [sp, #40]
  4169f8:	bl	40836c <machine_save>
  4169fc:	ldr	x0, [sp, #40]
  416a00:	bl	41652c <machine_bus_path>
  416a04:	str	x0, [sp, #56]
  416a08:	ldr	x0, [sp, #56]
  416a0c:	cmp	x0, #0x0
  416a10:	b.ne	416a1c <machine_send_create_reply+0xf0>  // b.any
  416a14:	mov	w19, #0xfffffff4            	// #-12
  416a18:	b	416a3c <machine_send_create_reply+0x110>
  416a1c:	ldr	x3, [sp, #48]
  416a20:	ldr	x0, [sp, #56]
  416a24:	mov	x2, x0
  416a28:	adrp	x0, 41c000 <__func__.8711+0xb30>
  416a2c:	add	x1, x0, #0x6a8
  416a30:	mov	x0, x3
  416a34:	bl	404f00 <sd_bus_reply_method_return@plt>
  416a38:	mov	w19, w0
  416a3c:	add	x0, sp, #0x38
  416a40:	bl	41091c <freep>
  416a44:	add	x0, sp, #0x30
  416a48:	bl	410a24 <sd_bus_message_unrefp>
  416a4c:	mov	w1, w19
  416a50:	adrp	x0, 431000 <machine_vtable+0x4a0>
  416a54:	ldr	x0, [x0, #3952]
  416a58:	ldr	x2, [sp, #72]
  416a5c:	ldr	x0, [x0]
  416a60:	eor	x0, x2, x0
  416a64:	cmp	x0, #0x0
  416a68:	b.eq	416a70 <machine_send_create_reply+0x144>  // b.none
  416a6c:	bl	4055f0 <__stack_chk_fail@plt>
  416a70:	mov	w0, w1
  416a74:	ldr	x19, [sp, #16]
  416a78:	ldp	x29, x30, [sp], #80
  416a7c:	ret

0000000000416a80 <freep>:
  416a80:	stp	x29, x30, [sp, #-32]!
  416a84:	mov	x29, sp
  416a88:	str	x0, [sp, #24]
  416a8c:	ldr	x0, [sp, #24]
  416a90:	ldr	x0, [x0]
  416a94:	bl	4059e0 <free@plt>
  416a98:	nop
  416a9c:	ldp	x29, x30, [sp], #32
  416aa0:	ret

0000000000416aa4 <startswith>:
  416aa4:	stp	x29, x30, [sp, #-48]!
  416aa8:	mov	x29, sp
  416aac:	str	x0, [sp, #24]
  416ab0:	str	x1, [sp, #16]
  416ab4:	ldr	x0, [sp, #16]
  416ab8:	bl	405b50 <strlen@plt>
  416abc:	str	x0, [sp, #40]
  416ac0:	ldr	x2, [sp, #40]
  416ac4:	ldr	x1, [sp, #16]
  416ac8:	ldr	x0, [sp, #24]
  416acc:	bl	405370 <strncmp@plt>
  416ad0:	cmp	w0, #0x0
  416ad4:	b.ne	416ae8 <startswith+0x44>  // b.any
  416ad8:	ldr	x1, [sp, #24]
  416adc:	ldr	x0, [sp, #40]
  416ae0:	add	x0, x1, x0
  416ae4:	b	416aec <startswith+0x48>
  416ae8:	mov	x0, #0x0                   	// #0
  416aec:	ldp	x29, x30, [sp], #48
  416af0:	ret

0000000000416af4 <strlen_ptr>:
  416af4:	stp	x29, x30, [sp, #-32]!
  416af8:	mov	x29, sp
  416afc:	str	x0, [sp, #24]
  416b00:	ldr	x0, [sp, #24]
  416b04:	cmp	x0, #0x0
  416b08:	b.ne	416b14 <strlen_ptr+0x20>  // b.any
  416b0c:	mov	x0, #0x0                   	// #0
  416b10:	b	416b1c <strlen_ptr+0x28>
  416b14:	ldr	x0, [sp, #24]
  416b18:	bl	405b50 <strlen@plt>
  416b1c:	ldp	x29, x30, [sp], #32
  416b20:	ret

0000000000416b24 <bus_label_unescape>:
  416b24:	stp	x29, x30, [sp, #-32]!
  416b28:	mov	x29, sp
  416b2c:	str	x0, [sp, #24]
  416b30:	ldr	x0, [sp, #24]
  416b34:	bl	416af4 <strlen_ptr>
  416b38:	mov	x1, x0
  416b3c:	ldr	x0, [sp, #24]
  416b40:	bl	405940 <bus_label_unescape_n@plt>
  416b44:	ldp	x29, x30, [sp], #32
  416b48:	ret

0000000000416b4c <sd_id128_is_null>:
  416b4c:	sub	sp, sp, #0x10
  416b50:	stp	x0, x1, [sp]
  416b54:	ldr	x0, [sp]
  416b58:	cmp	x0, #0x0
  416b5c:	b.ne	416b74 <sd_id128_is_null+0x28>  // b.any
  416b60:	ldr	x0, [sp, #8]
  416b64:	cmp	x0, #0x0
  416b68:	b.ne	416b74 <sd_id128_is_null+0x28>  // b.any
  416b6c:	mov	w0, #0x1                   	// #1
  416b70:	b	416b78 <sd_id128_is_null+0x2c>
  416b74:	mov	w0, #0x0                   	// #0
  416b78:	add	sp, sp, #0x10
  416b7c:	ret

0000000000416b80 <sd_bus_message_unrefp>:
  416b80:	stp	x29, x30, [sp, #-32]!
  416b84:	mov	x29, sp
  416b88:	str	x0, [sp, #24]
  416b8c:	ldr	x0, [sp, #24]
  416b90:	ldr	x0, [x0]
  416b94:	cmp	x0, #0x0
  416b98:	b.eq	416ba8 <sd_bus_message_unrefp+0x28>  // b.none
  416b9c:	ldr	x0, [sp, #24]
  416ba0:	ldr	x0, [x0]
  416ba4:	bl	404fd0 <sd_bus_message_unref@plt>
  416ba8:	nop
  416bac:	ldp	x29, x30, [sp], #32
  416bb0:	ret

0000000000416bb4 <hashmap_free>:
  416bb4:	stp	x29, x30, [sp, #-32]!
  416bb8:	mov	x29, sp
  416bbc:	str	x0, [sp, #24]
  416bc0:	mov	x2, #0x0                   	// #0
  416bc4:	mov	x1, #0x0                   	// #0
  416bc8:	ldr	x0, [sp, #24]
  416bcc:	bl	404ee0 <internal_hashmap_free@plt>
  416bd0:	ldp	x29, x30, [sp], #32
  416bd4:	ret

0000000000416bd8 <hashmap_get>:
  416bd8:	stp	x29, x30, [sp, #-32]!
  416bdc:	mov	x29, sp
  416be0:	str	x0, [sp, #24]
  416be4:	str	x1, [sp, #16]
  416be8:	ldr	x1, [sp, #16]
  416bec:	ldr	x0, [sp, #24]
  416bf0:	bl	405430 <internal_hashmap_get@plt>
  416bf4:	ldp	x29, x30, [sp], #32
  416bf8:	ret

0000000000416bfc <hashmap_iterate>:
  416bfc:	stp	x29, x30, [sp, #-48]!
  416c00:	mov	x29, sp
  416c04:	str	x0, [sp, #40]
  416c08:	str	x1, [sp, #32]
  416c0c:	str	x2, [sp, #24]
  416c10:	str	x3, [sp, #16]
  416c14:	ldr	x3, [sp, #16]
  416c18:	ldr	x2, [sp, #24]
  416c1c:	ldr	x1, [sp, #32]
  416c20:	ldr	x0, [sp, #40]
  416c24:	bl	405880 <internal_hashmap_iterate@plt>
  416c28:	and	w0, w0, #0xff
  416c2c:	ldp	x29, x30, [sp], #48
  416c30:	ret

0000000000416c34 <hashmap_clear>:
  416c34:	stp	x29, x30, [sp, #-32]!
  416c38:	mov	x29, sp
  416c3c:	str	x0, [sp, #24]
  416c40:	mov	x2, #0x0                   	// #0
  416c44:	mov	x1, #0x0                   	// #0
  416c48:	ldr	x0, [sp, #24]
  416c4c:	bl	4057b0 <internal_hashmap_clear@plt>
  416c50:	nop
  416c54:	ldp	x29, x30, [sp], #32
  416c58:	ret

0000000000416c5c <hashmap_freep>:
  416c5c:	stp	x29, x30, [sp, #-32]!
  416c60:	mov	x29, sp
  416c64:	str	x0, [sp, #24]
  416c68:	ldr	x0, [sp, #24]
  416c6c:	ldr	x0, [x0]
  416c70:	cmp	x0, #0x0
  416c74:	b.eq	416c84 <hashmap_freep+0x28>  // b.none
  416c78:	ldr	x0, [sp, #24]
  416c7c:	ldr	x0, [x0]
  416c80:	bl	416bb4 <hashmap_free>
  416c84:	nop
  416c88:	ldp	x29, x30, [sp], #32
  416c8c:	ret

0000000000416c90 <close_pairp>:
  416c90:	stp	x29, x30, [sp, #-32]!
  416c94:	mov	x29, sp
  416c98:	str	x0, [sp, #24]
  416c9c:	ldr	x0, [sp, #24]
  416ca0:	bl	405270 <safe_close_pair@plt>
  416ca4:	nop
  416ca8:	ldp	x29, x30, [sp], #32
  416cac:	ret

0000000000416cb0 <FILE_SIZE_VALID>:
  416cb0:	sub	sp, sp, #0x10
  416cb4:	str	x0, [sp, #8]
  416cb8:	ldr	x0, [sp, #8]
  416cbc:	mvn	x0, x0
  416cc0:	lsr	x0, x0, #63
  416cc4:	and	w0, w0, #0xff
  416cc8:	add	sp, sp, #0x10
  416ccc:	ret

0000000000416cd0 <FILE_SIZE_VALID_OR_INFINITY>:
  416cd0:	stp	x29, x30, [sp, #-32]!
  416cd4:	mov	x29, sp
  416cd8:	str	x0, [sp, #24]
  416cdc:	ldr	x0, [sp, #24]
  416ce0:	cmn	x0, #0x1
  416ce4:	b.ne	416cf0 <FILE_SIZE_VALID_OR_INFINITY+0x20>  // b.any
  416ce8:	mov	w0, #0x1                   	// #1
  416cec:	b	416cfc <FILE_SIZE_VALID_OR_INFINITY+0x2c>
  416cf0:	ldr	x0, [sp, #24]
  416cf4:	bl	416cb0 <FILE_SIZE_VALID>
  416cf8:	and	w0, w0, #0xff
  416cfc:	ldp	x29, x30, [sp], #32
  416d00:	ret

0000000000416d04 <strv_freep>:
  416d04:	stp	x29, x30, [sp, #-32]!
  416d08:	mov	x29, sp
  416d0c:	str	x0, [sp, #24]
  416d10:	ldr	x0, [sp, #24]
  416d14:	ldr	x0, [x0]
  416d18:	cmp	x0, #0x0
  416d1c:	b.eq	416d2c <strv_freep+0x28>  // b.none
  416d20:	ldr	x0, [sp, #24]
  416d24:	ldr	x0, [x0]
  416d28:	bl	4054e0 <strv_free@plt>
  416d2c:	nop
  416d30:	ldp	x29, x30, [sp], #32
  416d34:	ret

0000000000416d38 <safe_fork>:
  416d38:	stp	x29, x30, [sp, #-48]!
  416d3c:	mov	x29, sp
  416d40:	str	x0, [sp, #40]
  416d44:	str	w1, [sp, #36]
  416d48:	str	x2, [sp, #24]
  416d4c:	ldr	x4, [sp, #24]
  416d50:	ldr	w3, [sp, #36]
  416d54:	mov	x2, #0x0                   	// #0
  416d58:	mov	x1, #0x0                   	// #0
  416d5c:	ldr	x0, [sp, #40]
  416d60:	bl	4058e0 <safe_fork_full@plt>
  416d64:	ldp	x29, x30, [sp], #48
  416d68:	ret

0000000000416d6c <property_get_type>:
  416d6c:	stp	x29, x30, [sp, #-96]!
  416d70:	mov	x29, sp
  416d74:	str	x0, [sp, #72]
  416d78:	str	x1, [sp, #64]
  416d7c:	str	x2, [sp, #56]
  416d80:	str	x3, [sp, #48]
  416d84:	str	x4, [sp, #40]
  416d88:	str	x5, [sp, #32]
  416d8c:	str	x6, [sp, #24]
  416d90:	ldr	x0, [sp, #32]
  416d94:	str	x0, [sp, #88]
  416d98:	ldr	x0, [sp, #72]
  416d9c:	cmp	x0, #0x0
  416da0:	cset	w0, eq  // eq = none
  416da4:	and	w0, w0, #0xff
  416da8:	and	x0, x0, #0xff
  416dac:	cmp	x0, #0x0
  416db0:	b.eq	416ddc <property_get_type+0x70>  // b.none
  416db4:	adrp	x0, 41c000 <__func__.8711+0xb30>
  416db8:	add	x1, x0, #0x973
  416dbc:	adrp	x0, 41c000 <__func__.8711+0xb30>
  416dc0:	add	x4, x0, #0xca8
  416dc4:	mov	w3, #0x19                  	// #25
  416dc8:	mov	x2, x1
  416dcc:	adrp	x0, 41c000 <__func__.8711+0xb30>
  416dd0:	add	x1, x0, #0x990
  416dd4:	mov	w0, #0x0                   	// #0
  416dd8:	bl	4052a0 <log_assert_failed_realm@plt>
  416ddc:	ldr	x0, [sp, #40]
  416de0:	cmp	x0, #0x0
  416de4:	cset	w0, eq  // eq = none
  416de8:	and	w0, w0, #0xff
  416dec:	and	x0, x0, #0xff
  416df0:	cmp	x0, #0x0
  416df4:	b.eq	416e20 <property_get_type+0xb4>  // b.none
  416df8:	adrp	x0, 41c000 <__func__.8711+0xb30>
  416dfc:	add	x1, x0, #0x973
  416e00:	adrp	x0, 41c000 <__func__.8711+0xb30>
  416e04:	add	x4, x0, #0xca8
  416e08:	mov	w3, #0x19                  	// #25
  416e0c:	mov	x2, x1
  416e10:	adrp	x0, 41c000 <__func__.8711+0xb30>
  416e14:	add	x1, x0, #0x998
  416e18:	mov	w0, #0x0                   	// #0
  416e1c:	bl	4052a0 <log_assert_failed_realm@plt>
  416e20:	ldr	x0, [sp, #88]
  416e24:	cmp	x0, #0x0
  416e28:	cset	w0, eq  // eq = none
  416e2c:	and	w0, w0, #0xff
  416e30:	and	x0, x0, #0xff
  416e34:	cmp	x0, #0x0
  416e38:	b.eq	416e64 <property_get_type+0xf8>  // b.none
  416e3c:	adrp	x0, 41c000 <__func__.8711+0xb30>
  416e40:	add	x1, x0, #0x973
  416e44:	adrp	x0, 41c000 <__func__.8711+0xb30>
  416e48:	add	x4, x0, #0xca8
  416e4c:	mov	w3, #0x19                  	// #25
  416e50:	mov	x2, x1
  416e54:	adrp	x0, 41c000 <__func__.8711+0xb30>
  416e58:	add	x1, x0, #0x9a0
  416e5c:	mov	w0, #0x0                   	// #0
  416e60:	bl	4052a0 <log_assert_failed_realm@plt>
  416e64:	ldr	x0, [sp, #88]
  416e68:	ldr	w0, [x0]
  416e6c:	bl	4051b0 <image_type_to_string@plt>
  416e70:	mov	x2, x0
  416e74:	adrp	x0, 41c000 <__func__.8711+0xb30>
  416e78:	add	x1, x0, #0x9a8
  416e7c:	ldr	x0, [sp, #40]
  416e80:	bl	4051f0 <sd_bus_message_append@plt>
  416e84:	ldp	x29, x30, [sp], #96
  416e88:	ret

0000000000416e8c <bus_image_method_remove>:
  416e8c:	stp	x29, x30, [sp, #-112]!
  416e90:	mov	x29, sp
  416e94:	str	x19, [sp, #16]
  416e98:	str	x0, [sp, #56]
  416e9c:	str	x1, [sp, #48]
  416ea0:	str	x2, [sp, #40]
  416ea4:	adrp	x0, 431000 <machine_vtable+0x4a0>
  416ea8:	ldr	x0, [x0, #3952]
  416eac:	ldr	x1, [x0]
  416eb0:	str	x1, [sp, #104]
  416eb4:	mov	x1, #0x0                   	// #0
  416eb8:	mov	w0, #0xffffffff            	// #-1
  416ebc:	str	w0, [sp, #96]
  416ec0:	mov	w0, #0xffffffff            	// #-1
  416ec4:	str	w0, [sp, #100]
  416ec8:	ldr	x0, [sp, #48]
  416ecc:	str	x0, [sp, #80]
  416ed0:	ldr	x0, [sp, #80]
  416ed4:	ldr	x0, [x0, #128]
  416ed8:	str	x0, [sp, #88]
  416edc:	ldr	x0, [sp, #56]
  416ee0:	cmp	x0, #0x0
  416ee4:	cset	w0, eq  // eq = none
  416ee8:	and	w0, w0, #0xff
  416eec:	and	x0, x0, #0xff
  416ef0:	cmp	x0, #0x0
  416ef4:	b.eq	416f20 <bus_image_method_remove+0x94>  // b.none
  416ef8:	adrp	x0, 41c000 <__func__.8711+0xb30>
  416efc:	add	x1, x0, #0x973
  416f00:	adrp	x0, 41c000 <__func__.8711+0xb30>
  416f04:	add	x4, x0, #0xcc0
  416f08:	mov	w3, #0x26                  	// #38
  416f0c:	mov	x2, x1
  416f10:	adrp	x0, 41c000 <__func__.8711+0xb30>
  416f14:	add	x1, x0, #0x9b0
  416f18:	mov	w0, #0x0                   	// #0
  416f1c:	bl	4052a0 <log_assert_failed_realm@plt>
  416f20:	ldr	x0, [sp, #80]
  416f24:	cmp	x0, #0x0
  416f28:	cset	w0, eq  // eq = none
  416f2c:	and	w0, w0, #0xff
  416f30:	and	x0, x0, #0xff
  416f34:	cmp	x0, #0x0
  416f38:	b.eq	416f64 <bus_image_method_remove+0xd8>  // b.none
  416f3c:	adrp	x0, 41c000 <__func__.8711+0xb30>
  416f40:	add	x1, x0, #0x973
  416f44:	adrp	x0, 41c000 <__func__.8711+0xb30>
  416f48:	add	x4, x0, #0xcc0
  416f4c:	mov	w3, #0x27                  	// #39
  416f50:	mov	x2, x1
  416f54:	adrp	x0, 41c000 <__func__.8711+0xb30>
  416f58:	add	x1, x0, #0x9b8
  416f5c:	mov	w0, #0x0                   	// #0
  416f60:	bl	4052a0 <log_assert_failed_realm@plt>
  416f64:	ldr	x0, [sp, #88]
  416f68:	ldr	w0, [x0, #88]
  416f6c:	cmp	w0, #0x3f
  416f70:	b.ls	416f94 <bus_image_method_remove+0x108>  // b.plast
  416f74:	adrp	x0, 41c000 <__func__.8711+0xb30>
  416f78:	add	x2, x0, #0x9c0
  416f7c:	adrp	x0, 41c000 <__func__.8711+0xb30>
  416f80:	add	x1, x0, #0x9e0
  416f84:	ldr	x0, [sp, #40]
  416f88:	bl	4055d0 <sd_bus_error_setf@plt>
  416f8c:	mov	w19, w0
  416f90:	b	417118 <bus_image_method_remove+0x28c>
  416f94:	ldr	x0, [sp, #88]
  416f98:	add	x0, x0, #0x28
  416f9c:	ldr	x7, [sp, #40]
  416fa0:	mov	x6, x0
  416fa4:	mov	w5, #0xffffffff            	// #-1
  416fa8:	mov	w4, #0x0                   	// #0
  416fac:	mov	x3, #0x0                   	// #0
  416fb0:	adrp	x0, 41c000 <__func__.8711+0xb30>
  416fb4:	add	x2, x0, #0xa10
  416fb8:	mov	w1, #0x15                  	// #21
  416fbc:	ldr	x0, [sp, #56]
  416fc0:	bl	405bb0 <bus_verify_polkit_async@plt>
  416fc4:	str	w0, [sp, #76]
  416fc8:	ldr	w0, [sp, #76]
  416fcc:	cmp	w0, #0x0
  416fd0:	b.ge	416fdc <bus_image_method_remove+0x150>  // b.tcont
  416fd4:	ldr	w19, [sp, #76]
  416fd8:	b	417118 <bus_image_method_remove+0x28c>
  416fdc:	ldr	w0, [sp, #76]
  416fe0:	cmp	w0, #0x0
  416fe4:	b.ne	416ff0 <bus_image_method_remove+0x164>  // b.any
  416fe8:	mov	w19, #0x1                   	// #1
  416fec:	b	417118 <bus_image_method_remove+0x28c>
  416ff0:	add	x0, sp, #0x60
  416ff4:	mov	w1, #0x800                 	// #2048
  416ff8:	movk	w1, #0x8, lsl #16
  416ffc:	bl	405780 <pipe2@plt>
  417000:	cmp	w0, #0x0
  417004:	b.ge	417028 <bus_image_method_remove+0x19c>  // b.tcont
  417008:	bl	4054d0 <__errno_location@plt>
  41700c:	ldr	w1, [x0]
  417010:	adrp	x0, 41c000 <__func__.8711+0xb30>
  417014:	add	x2, x0, #0xa38
  417018:	ldr	x0, [sp, #40]
  41701c:	bl	405070 <sd_bus_error_set_errnof@plt>
  417020:	mov	w19, w0
  417024:	b	417118 <bus_image_method_remove+0x28c>
  417028:	add	x0, sp, #0x48
  41702c:	mov	x2, x0
  417030:	mov	w1, #0x1                   	// #1
  417034:	adrp	x0, 41c000 <__func__.8711+0xb30>
  417038:	add	x0, x0, #0xa58
  41703c:	bl	416d38 <safe_fork>
  417040:	str	w0, [sp, #76]
  417044:	ldr	w0, [sp, #76]
  417048:	cmp	w0, #0x0
  41704c:	b.ge	41706c <bus_image_method_remove+0x1e0>  // b.tcont
  417050:	ldr	w1, [sp, #76]
  417054:	adrp	x0, 41c000 <__func__.8711+0xb30>
  417058:	add	x2, x0, #0xa68
  41705c:	ldr	x0, [sp, #40]
  417060:	bl	405070 <sd_bus_error_set_errnof@plt>
  417064:	mov	w19, w0
  417068:	b	417118 <bus_image_method_remove+0x28c>
  41706c:	ldr	w0, [sp, #76]
  417070:	cmp	w0, #0x0
  417074:	b.ne	4170bc <bus_image_method_remove+0x230>  // b.any
  417078:	ldr	w0, [sp, #96]
  41707c:	bl	405240 <safe_close@plt>
  417080:	str	w0, [sp, #96]
  417084:	ldr	x0, [sp, #80]
  417088:	bl	405a70 <image_remove@plt>
  41708c:	str	w0, [sp, #76]
  417090:	ldr	w0, [sp, #76]
  417094:	cmp	w0, #0x0
  417098:	b.ge	4170b4 <bus_image_method_remove+0x228>  // b.tcont
  41709c:	ldr	w0, [sp, #100]
  4170a0:	add	x1, sp, #0x4c
  4170a4:	mov	x2, #0x4                   	// #4
  4170a8:	bl	405620 <write@plt>
  4170ac:	mov	w0, #0x1                   	// #1
  4170b0:	bl	405300 <_exit@plt>
  4170b4:	mov	w0, #0x0                   	// #0
  4170b8:	bl	405300 <_exit@plt>
  4170bc:	ldr	w0, [sp, #100]
  4170c0:	bl	405240 <safe_close@plt>
  4170c4:	str	w0, [sp, #100]
  4170c8:	ldr	w0, [sp, #72]
  4170cc:	ldr	w1, [sp, #96]
  4170d0:	mov	x5, #0x0                   	// #0
  4170d4:	mov	w4, w1
  4170d8:	ldr	x3, [sp, #56]
  4170dc:	mov	w2, w0
  4170e0:	mov	x1, #0x0                   	// #0
  4170e4:	ldr	x0, [sp, #88]
  4170e8:	bl	4188a0 <operation_new>
  4170ec:	str	w0, [sp, #76]
  4170f0:	ldr	w0, [sp, #76]
  4170f4:	cmp	w0, #0x0
  4170f8:	b.ge	41710c <bus_image_method_remove+0x280>  // b.tcont
  4170fc:	ldr	w0, [sp, #72]
  417100:	bl	405280 <sigkill_wait@plt>
  417104:	ldr	w19, [sp, #76]
  417108:	b	417118 <bus_image_method_remove+0x28c>
  41710c:	mov	w0, #0xffffffff            	// #-1
  417110:	str	w0, [sp, #96]
  417114:	mov	w19, #0x1                   	// #1
  417118:	add	x0, sp, #0x60
  41711c:	bl	416c90 <close_pairp>
  417120:	mov	w1, w19
  417124:	adrp	x0, 431000 <machine_vtable+0x4a0>
  417128:	ldr	x0, [x0, #3952]
  41712c:	ldr	x2, [sp, #104]
  417130:	ldr	x0, [x0]
  417134:	eor	x0, x2, x0
  417138:	cmp	x0, #0x0
  41713c:	b.eq	417144 <bus_image_method_remove+0x2b8>  // b.none
  417140:	bl	4055f0 <__stack_chk_fail@plt>
  417144:	mov	w0, w1
  417148:	ldr	x19, [sp, #16]
  41714c:	ldp	x29, x30, [sp], #112
  417150:	ret

0000000000417154 <bus_image_method_rename>:
  417154:	stp	x29, x30, [sp, #-96]!
  417158:	mov	x29, sp
  41715c:	str	x0, [sp, #40]
  417160:	str	x1, [sp, #32]
  417164:	str	x2, [sp, #24]
  417168:	adrp	x0, 431000 <machine_vtable+0x4a0>
  41716c:	ldr	x0, [x0, #3952]
  417170:	ldr	x1, [x0]
  417174:	str	x1, [sp, #88]
  417178:	mov	x1, #0x0                   	// #0
  41717c:	ldr	x0, [sp, #32]
  417180:	str	x0, [sp, #72]
  417184:	ldr	x0, [sp, #72]
  417188:	ldr	x0, [x0, #128]
  41718c:	str	x0, [sp, #80]
  417190:	ldr	x0, [sp, #40]
  417194:	cmp	x0, #0x0
  417198:	cset	w0, eq  // eq = none
  41719c:	and	w0, w0, #0xff
  4171a0:	and	x0, x0, #0xff
  4171a4:	cmp	x0, #0x0
  4171a8:	b.eq	4171d4 <bus_image_method_rename+0x80>  // b.none
  4171ac:	adrp	x0, 41c000 <__func__.8711+0xb30>
  4171b0:	add	x1, x0, #0x973
  4171b4:	adrp	x0, 41c000 <__func__.8711+0xb30>
  4171b8:	add	x4, x0, #0xcd8
  4171bc:	mov	w3, #0x63                  	// #99
  4171c0:	mov	x2, x1
  4171c4:	adrp	x0, 41c000 <__func__.8711+0xb30>
  4171c8:	add	x1, x0, #0x9b0
  4171cc:	mov	w0, #0x0                   	// #0
  4171d0:	bl	4052a0 <log_assert_failed_realm@plt>
  4171d4:	ldr	x0, [sp, #72]
  4171d8:	cmp	x0, #0x0
  4171dc:	cset	w0, eq  // eq = none
  4171e0:	and	w0, w0, #0xff
  4171e4:	and	x0, x0, #0xff
  4171e8:	cmp	x0, #0x0
  4171ec:	b.eq	417218 <bus_image_method_rename+0xc4>  // b.none
  4171f0:	adrp	x0, 41c000 <__func__.8711+0xb30>
  4171f4:	add	x1, x0, #0x973
  4171f8:	adrp	x0, 41c000 <__func__.8711+0xb30>
  4171fc:	add	x4, x0, #0xcd8
  417200:	mov	w3, #0x64                  	// #100
  417204:	mov	x2, x1
  417208:	adrp	x0, 41c000 <__func__.8711+0xb30>
  41720c:	add	x1, x0, #0x9b8
  417210:	mov	w0, #0x0                   	// #0
  417214:	bl	4052a0 <log_assert_failed_realm@plt>
  417218:	add	x0, sp, #0x40
  41721c:	mov	x2, x0
  417220:	adrp	x0, 41c000 <__func__.8711+0xb30>
  417224:	add	x1, x0, #0x9a8
  417228:	ldr	x0, [sp, #40]
  41722c:	bl	4052b0 <sd_bus_message_read@plt>
  417230:	str	w0, [sp, #60]
  417234:	ldr	w0, [sp, #60]
  417238:	cmp	w0, #0x0
  41723c:	b.ge	417248 <bus_image_method_rename+0xf4>  // b.tcont
  417240:	ldr	w0, [sp, #60]
  417244:	b	417318 <bus_image_method_rename+0x1c4>
  417248:	ldr	x0, [sp, #64]
  41724c:	bl	405520 <image_name_is_valid@plt>
  417250:	and	w0, w0, #0xff
  417254:	eor	w0, w0, #0x1
  417258:	and	w0, w0, #0xff
  41725c:	cmp	w0, #0x0
  417260:	b.eq	417288 <bus_image_method_rename+0x134>  // b.none
  417264:	ldr	x0, [sp, #64]
  417268:	mov	x3, x0
  41726c:	adrp	x0, 41c000 <__func__.8711+0xb30>
  417270:	add	x2, x0, #0xa80
  417274:	adrp	x0, 41c000 <__func__.8711+0xb30>
  417278:	add	x1, x0, #0xaa0
  41727c:	ldr	x0, [sp, #24]
  417280:	bl	4055d0 <sd_bus_error_setf@plt>
  417284:	b	417318 <bus_image_method_rename+0x1c4>
  417288:	ldr	x0, [sp, #80]
  41728c:	add	x0, x0, #0x28
  417290:	ldr	x7, [sp, #24]
  417294:	mov	x6, x0
  417298:	mov	w5, #0xffffffff            	// #-1
  41729c:	mov	w4, #0x0                   	// #0
  4172a0:	mov	x3, #0x0                   	// #0
  4172a4:	adrp	x0, 41c000 <__func__.8711+0xb30>
  4172a8:	add	x2, x0, #0xa10
  4172ac:	mov	w1, #0x15                  	// #21
  4172b0:	ldr	x0, [sp, #40]
  4172b4:	bl	405bb0 <bus_verify_polkit_async@plt>
  4172b8:	str	w0, [sp, #60]
  4172bc:	ldr	w0, [sp, #60]
  4172c0:	cmp	w0, #0x0
  4172c4:	b.ge	4172d0 <bus_image_method_rename+0x17c>  // b.tcont
  4172c8:	ldr	w0, [sp, #60]
  4172cc:	b	417318 <bus_image_method_rename+0x1c4>
  4172d0:	ldr	w0, [sp, #60]
  4172d4:	cmp	w0, #0x0
  4172d8:	b.ne	4172e4 <bus_image_method_rename+0x190>  // b.any
  4172dc:	mov	w0, #0x1                   	// #1
  4172e0:	b	417318 <bus_image_method_rename+0x1c4>
  4172e4:	ldr	x0, [sp, #64]
  4172e8:	mov	x1, x0
  4172ec:	ldr	x0, [sp, #72]
  4172f0:	bl	405be0 <image_rename@plt>
  4172f4:	str	w0, [sp, #60]
  4172f8:	ldr	w0, [sp, #60]
  4172fc:	cmp	w0, #0x0
  417300:	b.ge	41730c <bus_image_method_rename+0x1b8>  // b.tcont
  417304:	ldr	w0, [sp, #60]
  417308:	b	417318 <bus_image_method_rename+0x1c4>
  41730c:	mov	x1, #0x0                   	// #0
  417310:	ldr	x0, [sp, #40]
  417314:	bl	404f00 <sd_bus_reply_method_return@plt>
  417318:	mov	w1, w0
  41731c:	adrp	x0, 431000 <machine_vtable+0x4a0>
  417320:	ldr	x0, [x0, #3952]
  417324:	ldr	x2, [sp, #88]
  417328:	ldr	x0, [x0]
  41732c:	eor	x0, x2, x0
  417330:	cmp	x0, #0x0
  417334:	b.eq	41733c <bus_image_method_rename+0x1e8>  // b.none
  417338:	bl	4055f0 <__stack_chk_fail@plt>
  41733c:	mov	w0, w1
  417340:	ldp	x29, x30, [sp], #96
  417344:	ret

0000000000417348 <bus_image_method_clone>:
  417348:	stp	x29, x30, [sp, #-128]!
  41734c:	mov	x29, sp
  417350:	str	x19, [sp, #16]
  417354:	str	x0, [sp, #56]
  417358:	str	x1, [sp, #48]
  41735c:	str	x2, [sp, #40]
  417360:	adrp	x0, 431000 <machine_vtable+0x4a0>
  417364:	ldr	x0, [x0, #3952]
  417368:	ldr	x1, [x0]
  41736c:	str	x1, [sp, #120]
  417370:	mov	x1, #0x0                   	// #0
  417374:	mov	w0, #0xffffffff            	// #-1
  417378:	str	w0, [sp, #112]
  41737c:	mov	w0, #0xffffffff            	// #-1
  417380:	str	w0, [sp, #116]
  417384:	ldr	x0, [sp, #48]
  417388:	str	x0, [sp, #96]
  41738c:	ldr	x0, [sp, #96]
  417390:	ldr	x0, [x0, #128]
  417394:	str	x0, [sp, #104]
  417398:	ldr	x0, [sp, #56]
  41739c:	cmp	x0, #0x0
  4173a0:	cset	w0, eq  // eq = none
  4173a4:	and	w0, w0, #0xff
  4173a8:	and	x0, x0, #0xff
  4173ac:	cmp	x0, #0x0
  4173b0:	b.eq	4173dc <bus_image_method_clone+0x94>  // b.none
  4173b4:	adrp	x0, 41c000 <__func__.8711+0xb30>
  4173b8:	add	x1, x0, #0x973
  4173bc:	adrp	x0, 41c000 <__func__.8711+0xb30>
  4173c0:	add	x4, x0, #0xcf0
  4173c4:	mov	w3, #0x8e                  	// #142
  4173c8:	mov	x2, x1
  4173cc:	adrp	x0, 41c000 <__func__.8711+0xb30>
  4173d0:	add	x1, x0, #0x9b0
  4173d4:	mov	w0, #0x0                   	// #0
  4173d8:	bl	4052a0 <log_assert_failed_realm@plt>
  4173dc:	ldr	x0, [sp, #96]
  4173e0:	cmp	x0, #0x0
  4173e4:	cset	w0, eq  // eq = none
  4173e8:	and	w0, w0, #0xff
  4173ec:	and	x0, x0, #0xff
  4173f0:	cmp	x0, #0x0
  4173f4:	b.eq	417420 <bus_image_method_clone+0xd8>  // b.none
  4173f8:	adrp	x0, 41c000 <__func__.8711+0xb30>
  4173fc:	add	x1, x0, #0x973
  417400:	adrp	x0, 41c000 <__func__.8711+0xb30>
  417404:	add	x4, x0, #0xcf0
  417408:	mov	w3, #0x8f                  	// #143
  41740c:	mov	x2, x1
  417410:	adrp	x0, 41c000 <__func__.8711+0xb30>
  417414:	add	x1, x0, #0x9b8
  417418:	mov	w0, #0x0                   	// #0
  41741c:	bl	4052a0 <log_assert_failed_realm@plt>
  417420:	ldr	x0, [sp, #104]
  417424:	cmp	x0, #0x0
  417428:	cset	w0, eq  // eq = none
  41742c:	and	w0, w0, #0xff
  417430:	and	x0, x0, #0xff
  417434:	cmp	x0, #0x0
  417438:	b.eq	417464 <bus_image_method_clone+0x11c>  // b.none
  41743c:	adrp	x0, 41c000 <__func__.8711+0xb30>
  417440:	add	x1, x0, #0x973
  417444:	adrp	x0, 41c000 <__func__.8711+0xb30>
  417448:	add	x4, x0, #0xcf0
  41744c:	mov	w3, #0x90                  	// #144
  417450:	mov	x2, x1
  417454:	adrp	x0, 41c000 <__func__.8711+0xb30>
  417458:	add	x1, x0, #0xac8
  41745c:	mov	w0, #0x0                   	// #0
  417460:	bl	4052a0 <log_assert_failed_realm@plt>
  417464:	ldr	x0, [sp, #104]
  417468:	ldr	w0, [x0, #88]
  41746c:	cmp	w0, #0x3f
  417470:	b.ls	417494 <bus_image_method_clone+0x14c>  // b.plast
  417474:	adrp	x0, 41c000 <__func__.8711+0xb30>
  417478:	add	x2, x0, #0x9c0
  41747c:	adrp	x0, 41c000 <__func__.8711+0xb30>
  417480:	add	x1, x0, #0x9e0
  417484:	ldr	x0, [sp, #40]
  417488:	bl	4055d0 <sd_bus_error_setf@plt>
  41748c:	mov	w19, w0
  417490:	b	4176ac <bus_image_method_clone+0x364>
  417494:	add	x1, sp, #0x50
  417498:	add	x0, sp, #0x58
  41749c:	mov	x3, x1
  4174a0:	mov	x2, x0
  4174a4:	adrp	x0, 41c000 <__func__.8711+0xb30>
  4174a8:	add	x1, x0, #0xad0
  4174ac:	ldr	x0, [sp, #56]
  4174b0:	bl	4052b0 <sd_bus_message_read@plt>
  4174b4:	str	w0, [sp, #76]
  4174b8:	ldr	w0, [sp, #76]
  4174bc:	cmp	w0, #0x0
  4174c0:	b.ge	4174cc <bus_image_method_clone+0x184>  // b.tcont
  4174c4:	ldr	w19, [sp, #76]
  4174c8:	b	4176ac <bus_image_method_clone+0x364>
  4174cc:	ldr	x0, [sp, #88]
  4174d0:	bl	405520 <image_name_is_valid@plt>
  4174d4:	and	w0, w0, #0xff
  4174d8:	eor	w0, w0, #0x1
  4174dc:	and	w0, w0, #0xff
  4174e0:	cmp	w0, #0x0
  4174e4:	b.eq	417510 <bus_image_method_clone+0x1c8>  // b.none
  4174e8:	ldr	x0, [sp, #88]
  4174ec:	mov	x3, x0
  4174f0:	adrp	x0, 41c000 <__func__.8711+0xb30>
  4174f4:	add	x2, x0, #0xa80
  4174f8:	adrp	x0, 41c000 <__func__.8711+0xb30>
  4174fc:	add	x1, x0, #0xaa0
  417500:	ldr	x0, [sp, #40]
  417504:	bl	4055d0 <sd_bus_error_setf@plt>
  417508:	mov	w19, w0
  41750c:	b	4176ac <bus_image_method_clone+0x364>
  417510:	ldr	x0, [sp, #104]
  417514:	add	x0, x0, #0x28
  417518:	ldr	x7, [sp, #40]
  41751c:	mov	x6, x0
  417520:	mov	w5, #0xffffffff            	// #-1
  417524:	mov	w4, #0x0                   	// #0
  417528:	mov	x3, #0x0                   	// #0
  41752c:	adrp	x0, 41c000 <__func__.8711+0xb30>
  417530:	add	x2, x0, #0xa10
  417534:	mov	w1, #0x15                  	// #21
  417538:	ldr	x0, [sp, #56]
  41753c:	bl	405bb0 <bus_verify_polkit_async@plt>
  417540:	str	w0, [sp, #76]
  417544:	ldr	w0, [sp, #76]
  417548:	cmp	w0, #0x0
  41754c:	b.ge	417558 <bus_image_method_clone+0x210>  // b.tcont
  417550:	ldr	w19, [sp, #76]
  417554:	b	4176ac <bus_image_method_clone+0x364>
  417558:	ldr	w0, [sp, #76]
  41755c:	cmp	w0, #0x0
  417560:	b.ne	41756c <bus_image_method_clone+0x224>  // b.any
  417564:	mov	w19, #0x1                   	// #1
  417568:	b	4176ac <bus_image_method_clone+0x364>
  41756c:	add	x0, sp, #0x70
  417570:	mov	w1, #0x800                 	// #2048
  417574:	movk	w1, #0x8, lsl #16
  417578:	bl	405780 <pipe2@plt>
  41757c:	cmp	w0, #0x0
  417580:	b.ge	4175a4 <bus_image_method_clone+0x25c>  // b.tcont
  417584:	bl	4054d0 <__errno_location@plt>
  417588:	ldr	w1, [x0]
  41758c:	adrp	x0, 41c000 <__func__.8711+0xb30>
  417590:	add	x2, x0, #0xa38
  417594:	ldr	x0, [sp, #40]
  417598:	bl	405070 <sd_bus_error_set_errnof@plt>
  41759c:	mov	w19, w0
  4175a0:	b	4176ac <bus_image_method_clone+0x364>
  4175a4:	add	x0, sp, #0x54
  4175a8:	mov	x2, x0
  4175ac:	mov	w1, #0x1                   	// #1
  4175b0:	adrp	x0, 41c000 <__func__.8711+0xb30>
  4175b4:	add	x0, x0, #0xad8
  4175b8:	bl	416d38 <safe_fork>
  4175bc:	str	w0, [sp, #76]
  4175c0:	ldr	w0, [sp, #76]
  4175c4:	cmp	w0, #0x0
  4175c8:	b.ge	4175e8 <bus_image_method_clone+0x2a0>  // b.tcont
  4175cc:	ldr	w1, [sp, #76]
  4175d0:	adrp	x0, 41c000 <__func__.8711+0xb30>
  4175d4:	add	x2, x0, #0xa68
  4175d8:	ldr	x0, [sp, #40]
  4175dc:	bl	405070 <sd_bus_error_set_errnof@plt>
  4175e0:	mov	w19, w0
  4175e4:	b	4176ac <bus_image_method_clone+0x364>
  4175e8:	ldr	w0, [sp, #76]
  4175ec:	cmp	w0, #0x0
  4175f0:	b.ne	417650 <bus_image_method_clone+0x308>  // b.any
  4175f4:	ldr	w0, [sp, #112]
  4175f8:	bl	405240 <safe_close@plt>
  4175fc:	str	w0, [sp, #112]
  417600:	ldr	x1, [sp, #88]
  417604:	ldr	w0, [sp, #80]
  417608:	cmp	w0, #0x0
  41760c:	cset	w0, ne  // ne = any
  417610:	and	w0, w0, #0xff
  417614:	mov	w2, w0
  417618:	ldr	x0, [sp, #96]
  41761c:	bl	4057f0 <image_clone@plt>
  417620:	str	w0, [sp, #76]
  417624:	ldr	w0, [sp, #76]
  417628:	cmp	w0, #0x0
  41762c:	b.ge	417648 <bus_image_method_clone+0x300>  // b.tcont
  417630:	ldr	w0, [sp, #116]
  417634:	add	x1, sp, #0x4c
  417638:	mov	x2, #0x4                   	// #4
  41763c:	bl	405620 <write@plt>
  417640:	mov	w0, #0x1                   	// #1
  417644:	bl	405300 <_exit@plt>
  417648:	mov	w0, #0x0                   	// #0
  41764c:	bl	405300 <_exit@plt>
  417650:	ldr	w0, [sp, #116]
  417654:	bl	405240 <safe_close@plt>
  417658:	str	w0, [sp, #116]
  41765c:	ldr	w0, [sp, #84]
  417660:	ldr	w1, [sp, #112]
  417664:	mov	x5, #0x0                   	// #0
  417668:	mov	w4, w1
  41766c:	ldr	x3, [sp, #56]
  417670:	mov	w2, w0
  417674:	mov	x1, #0x0                   	// #0
  417678:	ldr	x0, [sp, #104]
  41767c:	bl	4188a0 <operation_new>
  417680:	str	w0, [sp, #76]
  417684:	ldr	w0, [sp, #76]
  417688:	cmp	w0, #0x0
  41768c:	b.ge	4176a0 <bus_image_method_clone+0x358>  // b.tcont
  417690:	ldr	w0, [sp, #84]
  417694:	bl	405280 <sigkill_wait@plt>
  417698:	ldr	w19, [sp, #76]
  41769c:	b	4176ac <bus_image_method_clone+0x364>
  4176a0:	mov	w0, #0xffffffff            	// #-1
  4176a4:	str	w0, [sp, #112]
  4176a8:	mov	w19, #0x1                   	// #1
  4176ac:	add	x0, sp, #0x70
  4176b0:	bl	416c90 <close_pairp>
  4176b4:	mov	w1, w19
  4176b8:	adrp	x0, 431000 <machine_vtable+0x4a0>
  4176bc:	ldr	x0, [x0, #3952]
  4176c0:	ldr	x2, [sp, #120]
  4176c4:	ldr	x0, [x0]
  4176c8:	eor	x0, x2, x0
  4176cc:	cmp	x0, #0x0
  4176d0:	b.eq	4176d8 <bus_image_method_clone+0x390>  // b.none
  4176d4:	bl	4055f0 <__stack_chk_fail@plt>
  4176d8:	mov	w0, w1
  4176dc:	ldr	x19, [sp, #16]
  4176e0:	ldp	x29, x30, [sp], #128
  4176e4:	ret

00000000004176e8 <bus_image_method_mark_read_only>:
  4176e8:	stp	x29, x30, [sp, #-80]!
  4176ec:	mov	x29, sp
  4176f0:	str	x0, [sp, #40]
  4176f4:	str	x1, [sp, #32]
  4176f8:	str	x2, [sp, #24]
  4176fc:	adrp	x0, 431000 <machine_vtable+0x4a0>
  417700:	ldr	x0, [x0, #3952]
  417704:	ldr	x1, [x0]
  417708:	str	x1, [sp, #72]
  41770c:	mov	x1, #0x0                   	// #0
  417710:	ldr	x0, [sp, #32]
  417714:	str	x0, [sp, #56]
  417718:	ldr	x0, [sp, #56]
  41771c:	ldr	x0, [x0, #128]
  417720:	str	x0, [sp, #64]
  417724:	ldr	x0, [sp, #40]
  417728:	cmp	x0, #0x0
  41772c:	cset	w0, eq  // eq = none
  417730:	and	w0, w0, #0xff
  417734:	and	x0, x0, #0xff
  417738:	cmp	x0, #0x0
  41773c:	b.eq	417768 <bus_image_method_mark_read_only+0x80>  // b.none
  417740:	adrp	x0, 41c000 <__func__.8711+0xb30>
  417744:	add	x1, x0, #0x973
  417748:	adrp	x0, 41c000 <__func__.8711+0xb30>
  41774c:	add	x4, x0, #0xd08
  417750:	mov	w3, #0xd2                  	// #210
  417754:	mov	x2, x1
  417758:	adrp	x0, 41c000 <__func__.8711+0xb30>
  41775c:	add	x1, x0, #0x9b0
  417760:	mov	w0, #0x0                   	// #0
  417764:	bl	4052a0 <log_assert_failed_realm@plt>
  417768:	add	x0, sp, #0x30
  41776c:	mov	x2, x0
  417770:	adrp	x0, 41c000 <__func__.8711+0xb30>
  417774:	add	x1, x0, #0xae8
  417778:	ldr	x0, [sp, #40]
  41777c:	bl	4052b0 <sd_bus_message_read@plt>
  417780:	str	w0, [sp, #52]
  417784:	ldr	w0, [sp, #52]
  417788:	cmp	w0, #0x0
  41778c:	b.ge	417798 <bus_image_method_mark_read_only+0xb0>  // b.tcont
  417790:	ldr	w0, [sp, #52]
  417794:	b	417834 <bus_image_method_mark_read_only+0x14c>
  417798:	ldr	x0, [sp, #64]
  41779c:	add	x0, x0, #0x28
  4177a0:	ldr	x7, [sp, #24]
  4177a4:	mov	x6, x0
  4177a8:	mov	w5, #0xffffffff            	// #-1
  4177ac:	mov	w4, #0x0                   	// #0
  4177b0:	mov	x3, #0x0                   	// #0
  4177b4:	adrp	x0, 41c000 <__func__.8711+0xb30>
  4177b8:	add	x2, x0, #0xa10
  4177bc:	mov	w1, #0x15                  	// #21
  4177c0:	ldr	x0, [sp, #40]
  4177c4:	bl	405bb0 <bus_verify_polkit_async@plt>
  4177c8:	str	w0, [sp, #52]
  4177cc:	ldr	w0, [sp, #52]
  4177d0:	cmp	w0, #0x0
  4177d4:	b.ge	4177e0 <bus_image_method_mark_read_only+0xf8>  // b.tcont
  4177d8:	ldr	w0, [sp, #52]
  4177dc:	b	417834 <bus_image_method_mark_read_only+0x14c>
  4177e0:	ldr	w0, [sp, #52]
  4177e4:	cmp	w0, #0x0
  4177e8:	b.ne	4177f4 <bus_image_method_mark_read_only+0x10c>  // b.any
  4177ec:	mov	w0, #0x1                   	// #1
  4177f0:	b	417834 <bus_image_method_mark_read_only+0x14c>
  4177f4:	ldr	w0, [sp, #48]
  4177f8:	cmp	w0, #0x0
  4177fc:	cset	w0, ne  // ne = any
  417800:	and	w0, w0, #0xff
  417804:	mov	w1, w0
  417808:	ldr	x0, [sp, #56]
  41780c:	bl	405260 <image_read_only@plt>
  417810:	str	w0, [sp, #52]
  417814:	ldr	w0, [sp, #52]
  417818:	cmp	w0, #0x0
  41781c:	b.ge	417828 <bus_image_method_mark_read_only+0x140>  // b.tcont
  417820:	ldr	w0, [sp, #52]
  417824:	b	417834 <bus_image_method_mark_read_only+0x14c>
  417828:	mov	x1, #0x0                   	// #0
  41782c:	ldr	x0, [sp, #40]
  417830:	bl	404f00 <sd_bus_reply_method_return@plt>
  417834:	mov	w1, w0
  417838:	adrp	x0, 431000 <machine_vtable+0x4a0>
  41783c:	ldr	x0, [x0, #3952]
  417840:	ldr	x2, [sp, #72]
  417844:	ldr	x0, [x0]
  417848:	eor	x0, x2, x0
  41784c:	cmp	x0, #0x0
  417850:	b.eq	417858 <bus_image_method_mark_read_only+0x170>  // b.none
  417854:	bl	4055f0 <__stack_chk_fail@plt>
  417858:	mov	w0, w1
  41785c:	ldp	x29, x30, [sp], #80
  417860:	ret

0000000000417864 <bus_image_method_set_limit>:
  417864:	stp	x29, x30, [sp, #-96]!
  417868:	mov	x29, sp
  41786c:	str	x0, [sp, #40]
  417870:	str	x1, [sp, #32]
  417874:	str	x2, [sp, #24]
  417878:	adrp	x0, 431000 <machine_vtable+0x4a0>
  41787c:	ldr	x0, [x0, #3952]
  417880:	ldr	x1, [x0]
  417884:	str	x1, [sp, #88]
  417888:	mov	x1, #0x0                   	// #0
  41788c:	ldr	x0, [sp, #32]
  417890:	str	x0, [sp, #72]
  417894:	ldr	x0, [sp, #72]
  417898:	ldr	x0, [x0, #128]
  41789c:	str	x0, [sp, #80]
  4178a0:	ldr	x0, [sp, #40]
  4178a4:	cmp	x0, #0x0
  4178a8:	cset	w0, eq  // eq = none
  4178ac:	and	w0, w0, #0xff
  4178b0:	and	x0, x0, #0xff
  4178b4:	cmp	x0, #0x0
  4178b8:	b.eq	4178e4 <bus_image_method_set_limit+0x80>  // b.none
  4178bc:	adrp	x0, 41c000 <__func__.8711+0xb30>
  4178c0:	add	x1, x0, #0x973
  4178c4:	adrp	x0, 41c000 <__func__.8711+0xb30>
  4178c8:	add	x4, x0, #0xd28
  4178cc:	mov	w3, #0xf7                  	// #247
  4178d0:	mov	x2, x1
  4178d4:	adrp	x0, 41c000 <__func__.8711+0xb30>
  4178d8:	add	x1, x0, #0x9b0
  4178dc:	mov	w0, #0x0                   	// #0
  4178e0:	bl	4052a0 <log_assert_failed_realm@plt>
  4178e4:	add	x0, sp, #0x40
  4178e8:	mov	x2, x0
  4178ec:	adrp	x0, 41c000 <__func__.8711+0xb30>
  4178f0:	add	x1, x0, #0xaf0
  4178f4:	ldr	x0, [sp, #40]
  4178f8:	bl	4052b0 <sd_bus_message_read@plt>
  4178fc:	str	w0, [sp, #60]
  417900:	ldr	w0, [sp, #60]
  417904:	cmp	w0, #0x0
  417908:	b.ge	417914 <bus_image_method_set_limit+0xb0>  // b.tcont
  41790c:	ldr	w0, [sp, #60]
  417910:	b	4179dc <bus_image_method_set_limit+0x178>
  417914:	ldr	x0, [sp, #64]
  417918:	bl	416cd0 <FILE_SIZE_VALID_OR_INFINITY>
  41791c:	and	w0, w0, #0xff
  417920:	eor	w0, w0, #0x1
  417924:	and	w0, w0, #0xff
  417928:	cmp	w0, #0x0
  41792c:	b.eq	41794c <bus_image_method_set_limit+0xe8>  // b.none
  417930:	adrp	x0, 41c000 <__func__.8711+0xb30>
  417934:	add	x2, x0, #0xaf8
  417938:	adrp	x0, 41c000 <__func__.8711+0xb30>
  41793c:	add	x1, x0, #0xaa0
  417940:	ldr	x0, [sp, #24]
  417944:	bl	4055d0 <sd_bus_error_setf@plt>
  417948:	b	4179dc <bus_image_method_set_limit+0x178>
  41794c:	ldr	x0, [sp, #80]
  417950:	add	x0, x0, #0x28
  417954:	ldr	x7, [sp, #24]
  417958:	mov	x6, x0
  41795c:	mov	w5, #0xffffffff            	// #-1
  417960:	mov	w4, #0x0                   	// #0
  417964:	mov	x3, #0x0                   	// #0
  417968:	adrp	x0, 41c000 <__func__.8711+0xb30>
  41796c:	add	x2, x0, #0xa10
  417970:	mov	w1, #0x15                  	// #21
  417974:	ldr	x0, [sp, #40]
  417978:	bl	405bb0 <bus_verify_polkit_async@plt>
  41797c:	str	w0, [sp, #60]
  417980:	ldr	w0, [sp, #60]
  417984:	cmp	w0, #0x0
  417988:	b.ge	417994 <bus_image_method_set_limit+0x130>  // b.tcont
  41798c:	ldr	w0, [sp, #60]
  417990:	b	4179dc <bus_image_method_set_limit+0x178>
  417994:	ldr	w0, [sp, #60]
  417998:	cmp	w0, #0x0
  41799c:	b.ne	4179a8 <bus_image_method_set_limit+0x144>  // b.any
  4179a0:	mov	w0, #0x1                   	// #1
  4179a4:	b	4179dc <bus_image_method_set_limit+0x178>
  4179a8:	ldr	x0, [sp, #64]
  4179ac:	mov	x1, x0
  4179b0:	ldr	x0, [sp, #72]
  4179b4:	bl	4059f0 <image_set_limit@plt>
  4179b8:	str	w0, [sp, #60]
  4179bc:	ldr	w0, [sp, #60]
  4179c0:	cmp	w0, #0x0
  4179c4:	b.ge	4179d0 <bus_image_method_set_limit+0x16c>  // b.tcont
  4179c8:	ldr	w0, [sp, #60]
  4179cc:	b	4179dc <bus_image_method_set_limit+0x178>
  4179d0:	mov	x1, #0x0                   	// #0
  4179d4:	ldr	x0, [sp, #40]
  4179d8:	bl	404f00 <sd_bus_reply_method_return@plt>
  4179dc:	mov	w1, w0
  4179e0:	adrp	x0, 431000 <machine_vtable+0x4a0>
  4179e4:	ldr	x0, [x0, #3952]
  4179e8:	ldr	x2, [sp, #88]
  4179ec:	ldr	x0, [x0]
  4179f0:	eor	x0, x2, x0
  4179f4:	cmp	x0, #0x0
  4179f8:	b.eq	417a00 <bus_image_method_set_limit+0x19c>  // b.none
  4179fc:	bl	4055f0 <__stack_chk_fail@plt>
  417a00:	mov	w0, w1
  417a04:	ldp	x29, x30, [sp], #96
  417a08:	ret

0000000000417a0c <bus_image_method_get_hostname>:
  417a0c:	stp	x29, x30, [sp, #-64]!
  417a10:	mov	x29, sp
  417a14:	str	x0, [sp, #40]
  417a18:	str	x1, [sp, #32]
  417a1c:	str	x2, [sp, #24]
  417a20:	ldr	x0, [sp, #32]
  417a24:	str	x0, [sp, #56]
  417a28:	ldr	x0, [sp, #56]
  417a2c:	ldrb	w0, [x0, #120]
  417a30:	ubfx	x0, x0, #0, #1
  417a34:	and	w0, w0, #0xff
  417a38:	eor	w0, w0, #0x1
  417a3c:	and	w0, w0, #0xff
  417a40:	cmp	w0, #0x0
  417a44:	b.eq	417a78 <bus_image_method_get_hostname+0x6c>  // b.none
  417a48:	ldr	x0, [sp, #56]
  417a4c:	bl	405ad0 <image_read_metadata@plt>
  417a50:	str	w0, [sp, #52]
  417a54:	ldr	w0, [sp, #52]
  417a58:	cmp	w0, #0x0
  417a5c:	b.ge	417a78 <bus_image_method_get_hostname+0x6c>  // b.tcont
  417a60:	adrp	x0, 41c000 <__func__.8711+0xb30>
  417a64:	add	x2, x0, #0xb10
  417a68:	ldr	w1, [sp, #52]
  417a6c:	ldr	x0, [sp, #24]
  417a70:	bl	405070 <sd_bus_error_set_errnof@plt>
  417a74:	b	417a94 <bus_image_method_get_hostname+0x88>
  417a78:	ldr	x0, [sp, #56]
  417a7c:	ldr	x0, [x0, #80]
  417a80:	mov	x2, x0
  417a84:	adrp	x0, 41c000 <__func__.8711+0xb30>
  417a88:	add	x1, x0, #0x9a8
  417a8c:	ldr	x0, [sp, #40]
  417a90:	bl	404f00 <sd_bus_reply_method_return@plt>
  417a94:	ldp	x29, x30, [sp], #64
  417a98:	ret

0000000000417a9c <bus_image_method_get_machine_id>:
  417a9c:	stp	x29, x30, [sp, #-96]!
  417aa0:	mov	x29, sp
  417aa4:	str	x19, [sp, #16]
  417aa8:	str	x0, [sp, #56]
  417aac:	str	x1, [sp, #48]
  417ab0:	str	x2, [sp, #40]
  417ab4:	adrp	x0, 431000 <machine_vtable+0x4a0>
  417ab8:	ldr	x0, [x0, #3952]
  417abc:	ldr	x1, [x0]
  417ac0:	str	x1, [sp, #88]
  417ac4:	mov	x1, #0x0                   	// #0
  417ac8:	str	xzr, [sp, #72]
  417acc:	ldr	x0, [sp, #48]
  417ad0:	str	x0, [sp, #80]
  417ad4:	ldr	x0, [sp, #80]
  417ad8:	ldrb	w0, [x0, #120]
  417adc:	ubfx	x0, x0, #0, #1
  417ae0:	and	w0, w0, #0xff
  417ae4:	eor	w0, w0, #0x1
  417ae8:	and	w0, w0, #0xff
  417aec:	cmp	w0, #0x0
  417af0:	b.eq	417b28 <bus_image_method_get_machine_id+0x8c>  // b.none
  417af4:	ldr	x0, [sp, #80]
  417af8:	bl	405ad0 <image_read_metadata@plt>
  417afc:	str	w0, [sp, #68]
  417b00:	ldr	w0, [sp, #68]
  417b04:	cmp	w0, #0x0
  417b08:	b.ge	417b28 <bus_image_method_get_machine_id+0x8c>  // b.tcont
  417b0c:	adrp	x0, 41c000 <__func__.8711+0xb30>
  417b10:	add	x2, x0, #0xb10
  417b14:	ldr	w1, [sp, #68]
  417b18:	ldr	x0, [sp, #40]
  417b1c:	bl	405070 <sd_bus_error_set_errnof@plt>
  417b20:	mov	w19, w0
  417b24:	b	417bd4 <bus_image_method_get_machine_id+0x138>
  417b28:	add	x0, sp, #0x48
  417b2c:	mov	x1, x0
  417b30:	ldr	x0, [sp, #56]
  417b34:	bl	4050d0 <sd_bus_message_new_method_return@plt>
  417b38:	str	w0, [sp, #68]
  417b3c:	ldr	w0, [sp, #68]
  417b40:	cmp	w0, #0x0
  417b44:	b.ge	417b50 <bus_image_method_get_machine_id+0xb4>  // b.tcont
  417b48:	ldr	w19, [sp, #68]
  417b4c:	b	417bd4 <bus_image_method_get_machine_id+0x138>
  417b50:	ldr	x0, [sp, #80]
  417b54:	ldp	x0, x1, [x0, #88]
  417b58:	bl	416b4c <sd_id128_is_null>
  417b5c:	cmp	w0, #0x0
  417b60:	b.eq	417b84 <bus_image_method_get_machine_id+0xe8>  // b.none
  417b64:	ldr	x3, [sp, #72]
  417b68:	mov	w2, #0x0                   	// #0
  417b6c:	adrp	x0, 41c000 <__func__.8711+0xb30>
  417b70:	add	x1, x0, #0xb38
  417b74:	mov	x0, x3
  417b78:	bl	4051f0 <sd_bus_message_append@plt>
  417b7c:	str	w0, [sp, #68]
  417b80:	b	417ba8 <bus_image_method_get_machine_id+0x10c>
  417b84:	ldr	x4, [sp, #72]
  417b88:	ldr	x0, [sp, #80]
  417b8c:	add	x0, x0, #0x58
  417b90:	mov	x3, #0x10                  	// #16
  417b94:	mov	x2, x0
  417b98:	mov	w1, #0x79                  	// #121
  417b9c:	mov	x0, x4
  417ba0:	bl	405150 <sd_bus_message_append_array@plt>
  417ba4:	str	w0, [sp, #68]
  417ba8:	ldr	w0, [sp, #68]
  417bac:	cmp	w0, #0x0
  417bb0:	b.ge	417bbc <bus_image_method_get_machine_id+0x120>  // b.tcont
  417bb4:	ldr	w19, [sp, #68]
  417bb8:	b	417bd4 <bus_image_method_get_machine_id+0x138>
  417bbc:	ldr	x0, [sp, #72]
  417bc0:	mov	x2, #0x0                   	// #0
  417bc4:	mov	x1, x0
  417bc8:	mov	x0, #0x0                   	// #0
  417bcc:	bl	405600 <sd_bus_send@plt>
  417bd0:	mov	w19, w0
  417bd4:	add	x0, sp, #0x48
  417bd8:	bl	416b80 <sd_bus_message_unrefp>
  417bdc:	mov	w1, w19
  417be0:	adrp	x0, 431000 <machine_vtable+0x4a0>
  417be4:	ldr	x0, [x0, #3952]
  417be8:	ldr	x2, [sp, #88]
  417bec:	ldr	x0, [x0]
  417bf0:	eor	x0, x2, x0
  417bf4:	cmp	x0, #0x0
  417bf8:	b.eq	417c00 <bus_image_method_get_machine_id+0x164>  // b.none
  417bfc:	bl	4055f0 <__stack_chk_fail@plt>
  417c00:	mov	w0, w1
  417c04:	ldr	x19, [sp, #16]
  417c08:	ldp	x29, x30, [sp], #96
  417c0c:	ret

0000000000417c10 <bus_image_method_get_machine_info>:
  417c10:	stp	x29, x30, [sp, #-64]!
  417c14:	mov	x29, sp
  417c18:	str	x0, [sp, #40]
  417c1c:	str	x1, [sp, #32]
  417c20:	str	x2, [sp, #24]
  417c24:	ldr	x0, [sp, #32]
  417c28:	str	x0, [sp, #56]
  417c2c:	ldr	x0, [sp, #56]
  417c30:	ldrb	w0, [x0, #120]
  417c34:	ubfx	x0, x0, #0, #1
  417c38:	and	w0, w0, #0xff
  417c3c:	eor	w0, w0, #0x1
  417c40:	and	w0, w0, #0xff
  417c44:	cmp	w0, #0x0
  417c48:	b.eq	417c7c <bus_image_method_get_machine_info+0x6c>  // b.none
  417c4c:	ldr	x0, [sp, #56]
  417c50:	bl	405ad0 <image_read_metadata@plt>
  417c54:	str	w0, [sp, #52]
  417c58:	ldr	w0, [sp, #52]
  417c5c:	cmp	w0, #0x0
  417c60:	b.ge	417c7c <bus_image_method_get_machine_info+0x6c>  // b.tcont
  417c64:	adrp	x0, 41c000 <__func__.8711+0xb30>
  417c68:	add	x2, x0, #0xb10
  417c6c:	ldr	w1, [sp, #52]
  417c70:	ldr	x0, [sp, #24]
  417c74:	bl	405070 <sd_bus_error_set_errnof@plt>
  417c78:	b	417c90 <bus_image_method_get_machine_info+0x80>
  417c7c:	ldr	x0, [sp, #56]
  417c80:	ldr	x0, [x0, #104]
  417c84:	mov	x1, x0
  417c88:	ldr	x0, [sp, #40]
  417c8c:	bl	405990 <bus_reply_pair_array@plt>
  417c90:	ldp	x29, x30, [sp], #64
  417c94:	ret

0000000000417c98 <bus_image_method_get_os_release>:
  417c98:	stp	x29, x30, [sp, #-64]!
  417c9c:	mov	x29, sp
  417ca0:	str	x0, [sp, #40]
  417ca4:	str	x1, [sp, #32]
  417ca8:	str	x2, [sp, #24]
  417cac:	ldr	x0, [sp, #32]
  417cb0:	str	x0, [sp, #56]
  417cb4:	ldr	x0, [sp, #56]
  417cb8:	ldrb	w0, [x0, #120]
  417cbc:	ubfx	x0, x0, #0, #1
  417cc0:	and	w0, w0, #0xff
  417cc4:	eor	w0, w0, #0x1
  417cc8:	and	w0, w0, #0xff
  417ccc:	cmp	w0, #0x0
  417cd0:	b.eq	417d04 <bus_image_method_get_os_release+0x6c>  // b.none
  417cd4:	ldr	x0, [sp, #56]
  417cd8:	bl	405ad0 <image_read_metadata@plt>
  417cdc:	str	w0, [sp, #52]
  417ce0:	ldr	w0, [sp, #52]
  417ce4:	cmp	w0, #0x0
  417ce8:	b.ge	417d04 <bus_image_method_get_os_release+0x6c>  // b.tcont
  417cec:	adrp	x0, 41c000 <__func__.8711+0xb30>
  417cf0:	add	x2, x0, #0xb10
  417cf4:	ldr	w1, [sp, #52]
  417cf8:	ldr	x0, [sp, #24]
  417cfc:	bl	405070 <sd_bus_error_set_errnof@plt>
  417d00:	b	417d18 <bus_image_method_get_os_release+0x80>
  417d04:	ldr	x0, [sp, #56]
  417d08:	ldr	x0, [x0, #112]
  417d0c:	mov	x1, x0
  417d10:	ldr	x0, [sp, #40]
  417d14:	bl	405990 <bus_reply_pair_array@plt>
  417d18:	ldp	x29, x30, [sp], #64
  417d1c:	ret

0000000000417d20 <image_flush_cache>:
  417d20:	stp	x29, x30, [sp, #-48]!
  417d24:	mov	x29, sp
  417d28:	str	x0, [sp, #24]
  417d2c:	str	x1, [sp, #16]
  417d30:	ldr	x0, [sp, #16]
  417d34:	str	x0, [sp, #40]
  417d38:	ldr	x0, [sp, #24]
  417d3c:	cmp	x0, #0x0
  417d40:	cset	w0, eq  // eq = none
  417d44:	and	w0, w0, #0xff
  417d48:	and	x0, x0, #0xff
  417d4c:	cmp	x0, #0x0
  417d50:	b.eq	417d7c <image_flush_cache+0x5c>  // b.none
  417d54:	adrp	x0, 41c000 <__func__.8711+0xb30>
  417d58:	add	x1, x0, #0x973
  417d5c:	adrp	x0, 41c000 <__func__.8711+0xb30>
  417d60:	add	x4, x0, #0xd48
  417d64:	mov	w3, #0x17f                 	// #383
  417d68:	mov	x2, x1
  417d6c:	adrp	x0, 41c000 <__func__.8711+0xb30>
  417d70:	add	x1, x0, #0x9a8
  417d74:	mov	w0, #0x0                   	// #0
  417d78:	bl	4052a0 <log_assert_failed_realm@plt>
  417d7c:	ldr	x0, [sp, #40]
  417d80:	cmp	x0, #0x0
  417d84:	cset	w0, eq  // eq = none
  417d88:	and	w0, w0, #0xff
  417d8c:	and	x0, x0, #0xff
  417d90:	cmp	x0, #0x0
  417d94:	b.eq	417dc0 <image_flush_cache+0xa0>  // b.none
  417d98:	adrp	x0, 41c000 <__func__.8711+0xb30>
  417d9c:	add	x1, x0, #0x973
  417da0:	adrp	x0, 41c000 <__func__.8711+0xb30>
  417da4:	add	x4, x0, #0xd48
  417da8:	mov	w3, #0x180                 	// #384
  417dac:	mov	x2, x1
  417db0:	adrp	x0, 41c000 <__func__.8711+0xb30>
  417db4:	add	x1, x0, #0xac8
  417db8:	mov	w0, #0x0                   	// #0
  417dbc:	bl	4052a0 <log_assert_failed_realm@plt>
  417dc0:	ldr	x0, [sp, #40]
  417dc4:	ldr	x0, [x0, #48]
  417dc8:	bl	416c34 <hashmap_clear>
  417dcc:	mov	w0, #0x0                   	// #0
  417dd0:	ldp	x29, x30, [sp], #48
  417dd4:	ret

0000000000417dd8 <image_object_find>:
  417dd8:	stp	x29, x30, [sp, #-128]!
  417ddc:	mov	x29, sp
  417de0:	str	x19, [sp, #16]
  417de4:	str	x0, [sp, #72]
  417de8:	str	x1, [sp, #64]
  417dec:	str	x2, [sp, #56]
  417df0:	str	x3, [sp, #48]
  417df4:	str	x4, [sp, #40]
  417df8:	str	x5, [sp, #32]
  417dfc:	adrp	x0, 431000 <machine_vtable+0x4a0>
  417e00:	ldr	x0, [x0, #3952]
  417e04:	ldr	x1, [x0]
  417e08:	str	x1, [sp, #120]
  417e0c:	mov	x1, #0x0                   	// #0
  417e10:	str	xzr, [sp, #88]
  417e14:	ldr	x0, [sp, #48]
  417e18:	str	x0, [sp, #104]
  417e1c:	str	xzr, [sp, #96]
  417e20:	ldr	x0, [sp, #72]
  417e24:	cmp	x0, #0x0
  417e28:	cset	w0, eq  // eq = none
  417e2c:	and	w0, w0, #0xff
  417e30:	and	x0, x0, #0xff
  417e34:	cmp	x0, #0x0
  417e38:	b.eq	417e64 <image_object_find+0x8c>  // b.none
  417e3c:	adrp	x0, 41c000 <__func__.8711+0xb30>
  417e40:	add	x1, x0, #0x973
  417e44:	adrp	x0, 41c000 <__func__.8711+0xb30>
  417e48:	add	x4, x0, #0xd60
  417e4c:	mov	w3, #0x18d                 	// #397
  417e50:	mov	x2, x1
  417e54:	adrp	x0, 41c000 <__func__.8711+0xb30>
  417e58:	add	x1, x0, #0x990
  417e5c:	mov	w0, #0x0                   	// #0
  417e60:	bl	4052a0 <log_assert_failed_realm@plt>
  417e64:	ldr	x0, [sp, #64]
  417e68:	cmp	x0, #0x0
  417e6c:	cset	w0, eq  // eq = none
  417e70:	and	w0, w0, #0xff
  417e74:	and	x0, x0, #0xff
  417e78:	cmp	x0, #0x0
  417e7c:	b.eq	417ea8 <image_object_find+0xd0>  // b.none
  417e80:	adrp	x0, 41c000 <__func__.8711+0xb30>
  417e84:	add	x1, x0, #0x973
  417e88:	adrp	x0, 41c000 <__func__.8711+0xb30>
  417e8c:	add	x4, x0, #0xd60
  417e90:	mov	w3, #0x18e                 	// #398
  417e94:	mov	x2, x1
  417e98:	adrp	x0, 41c000 <__func__.8711+0xb30>
  417e9c:	add	x1, x0, #0xc50
  417ea0:	mov	w0, #0x0                   	// #0
  417ea4:	bl	4052a0 <log_assert_failed_realm@plt>
  417ea8:	ldr	x0, [sp, #56]
  417eac:	cmp	x0, #0x0
  417eb0:	cset	w0, eq  // eq = none
  417eb4:	and	w0, w0, #0xff
  417eb8:	and	x0, x0, #0xff
  417ebc:	cmp	x0, #0x0
  417ec0:	b.eq	417eec <image_object_find+0x114>  // b.none
  417ec4:	adrp	x0, 41c000 <__func__.8711+0xb30>
  417ec8:	add	x1, x0, #0x973
  417ecc:	adrp	x0, 41c000 <__func__.8711+0xb30>
  417ed0:	add	x4, x0, #0xd60
  417ed4:	mov	w3, #0x18f                 	// #399
  417ed8:	mov	x2, x1
  417edc:	adrp	x0, 41c000 <__func__.8711+0xb30>
  417ee0:	add	x1, x0, #0xc58
  417ee4:	mov	w0, #0x0                   	// #0
  417ee8:	bl	4052a0 <log_assert_failed_realm@plt>
  417eec:	ldr	x0, [sp, #40]
  417ef0:	cmp	x0, #0x0
  417ef4:	cset	w0, eq  // eq = none
  417ef8:	and	w0, w0, #0xff
  417efc:	and	x0, x0, #0xff
  417f00:	cmp	x0, #0x0
  417f04:	b.eq	417f30 <image_object_find+0x158>  // b.none
  417f08:	adrp	x0, 41c000 <__func__.8711+0xb30>
  417f0c:	add	x1, x0, #0x973
  417f10:	adrp	x0, 41c000 <__func__.8711+0xb30>
  417f14:	add	x4, x0, #0xd60
  417f18:	mov	w3, #0x190                 	// #400
  417f1c:	mov	x2, x1
  417f20:	adrp	x0, 41c000 <__func__.8711+0xb30>
  417f24:	add	x1, x0, #0xc68
  417f28:	mov	w0, #0x0                   	// #0
  417f2c:	bl	4052a0 <log_assert_failed_realm@plt>
  417f30:	adrp	x0, 41c000 <__func__.8711+0xb30>
  417f34:	add	x1, x0, #0xc70
  417f38:	ldr	x0, [sp, #64]
  417f3c:	bl	416aa4 <startswith>
  417f40:	str	x0, [sp, #112]
  417f44:	ldr	x0, [sp, #112]
  417f48:	cmp	x0, #0x0
  417f4c:	b.ne	417f58 <image_object_find+0x180>  // b.any
  417f50:	mov	w19, #0x0                   	// #0
  417f54:	b	41811c <image_object_find+0x344>
  417f58:	ldr	x0, [sp, #112]
  417f5c:	bl	416b24 <bus_label_unescape>
  417f60:	str	x0, [sp, #88]
  417f64:	ldr	x0, [sp, #88]
  417f68:	cmp	x0, #0x0
  417f6c:	b.ne	417f78 <image_object_find+0x1a0>  // b.any
  417f70:	mov	w19, #0xfffffff4            	// #-12
  417f74:	b	41811c <image_object_find+0x344>
  417f78:	ldr	x0, [sp, #104]
  417f7c:	ldr	x0, [x0, #48]
  417f80:	ldr	x1, [sp, #88]
  417f84:	bl	416bd8 <hashmap_get>
  417f88:	str	x0, [sp, #96]
  417f8c:	ldr	x0, [sp, #96]
  417f90:	cmp	x0, #0x0
  417f94:	b.eq	417fac <image_object_find+0x1d4>  // b.none
  417f98:	ldr	x1, [sp, #96]
  417f9c:	ldr	x0, [sp, #40]
  417fa0:	str	x1, [x0]
  417fa4:	mov	w19, #0x1                   	// #1
  417fa8:	b	41811c <image_object_find+0x344>
  417fac:	ldr	x0, [sp, #104]
  417fb0:	add	x2, x0, #0x30
  417fb4:	adrp	x0, 431000 <machine_vtable+0x4a0>
  417fb8:	ldr	x1, [x0, #4000]
  417fbc:	mov	x0, x2
  417fc0:	bl	405a40 <internal_hashmap_ensure_allocated@plt>
  417fc4:	str	w0, [sp, #84]
  417fc8:	ldr	w0, [sp, #84]
  417fcc:	cmp	w0, #0x0
  417fd0:	b.ge	417fdc <image_object_find+0x204>  // b.tcont
  417fd4:	ldr	w19, [sp, #84]
  417fd8:	b	41811c <image_object_find+0x344>
  417fdc:	ldr	x0, [sp, #104]
  417fe0:	ldr	x0, [x0, #56]
  417fe4:	cmp	x0, #0x0
  417fe8:	b.ne	418050 <image_object_find+0x278>  // b.any
  417fec:	ldr	x0, [sp, #104]
  417ff0:	ldr	x4, [x0]
  417ff4:	ldr	x0, [sp, #104]
  417ff8:	add	x1, x0, #0x38
  417ffc:	ldr	x3, [sp, #104]
  418000:	adrp	x0, 417000 <bus_image_method_remove+0x174>
  418004:	add	x2, x0, #0xd20
  418008:	mov	x0, x4
  41800c:	bl	405500 <sd_event_add_defer@plt>
  418010:	str	w0, [sp, #84]
  418014:	ldr	w0, [sp, #84]
  418018:	cmp	w0, #0x0
  41801c:	b.ge	418028 <image_object_find+0x250>  // b.tcont
  418020:	ldr	w19, [sp, #84]
  418024:	b	41811c <image_object_find+0x344>
  418028:	ldr	x0, [sp, #104]
  41802c:	ldr	x0, [x0, #56]
  418030:	mov	x1, #0x64                  	// #100
  418034:	bl	405550 <sd_event_source_set_priority@plt>
  418038:	str	w0, [sp, #84]
  41803c:	ldr	w0, [sp, #84]
  418040:	cmp	w0, #0x0
  418044:	b.ge	418050 <image_object_find+0x278>  // b.tcont
  418048:	ldr	w19, [sp, #84]
  41804c:	b	41811c <image_object_find+0x344>
  418050:	ldr	x0, [sp, #104]
  418054:	ldr	x0, [x0, #56]
  418058:	mov	w1, #0xffffffff            	// #-1
  41805c:	bl	405310 <sd_event_source_set_enabled@plt>
  418060:	str	w0, [sp, #84]
  418064:	ldr	w0, [sp, #84]
  418068:	cmp	w0, #0x0
  41806c:	b.ge	418078 <image_object_find+0x2a0>  // b.tcont
  418070:	ldr	w19, [sp, #84]
  418074:	b	41811c <image_object_find+0x344>
  418078:	ldr	x0, [sp, #88]
  41807c:	add	x1, sp, #0x60
  418080:	mov	x2, x1
  418084:	mov	x1, x0
  418088:	mov	w0, #0x0                   	// #0
  41808c:	bl	404ef0 <image_find@plt>
  418090:	str	w0, [sp, #84]
  418094:	ldr	w0, [sp, #84]
  418098:	cmn	w0, #0x2
  41809c:	b.ne	4180a8 <image_object_find+0x2d0>  // b.any
  4180a0:	mov	w19, #0x0                   	// #0
  4180a4:	b	41811c <image_object_find+0x344>
  4180a8:	ldr	w0, [sp, #84]
  4180ac:	cmp	w0, #0x0
  4180b0:	b.ge	4180bc <image_object_find+0x2e4>  // b.tcont
  4180b4:	ldr	w19, [sp, #84]
  4180b8:	b	41811c <image_object_find+0x344>
  4180bc:	ldr	x0, [sp, #96]
  4180c0:	ldr	x1, [sp, #104]
  4180c4:	str	x1, [x0, #128]
  4180c8:	ldr	x0, [sp, #104]
  4180cc:	ldr	x3, [x0, #48]
  4180d0:	ldr	x0, [sp, #96]
  4180d4:	ldr	x0, [x0, #8]
  4180d8:	ldr	x1, [sp, #96]
  4180dc:	mov	x2, x1
  4180e0:	mov	x1, x0
  4180e4:	mov	x0, x3
  4180e8:	bl	4057c0 <hashmap_put@plt>
  4180ec:	str	w0, [sp, #84]
  4180f0:	ldr	w0, [sp, #84]
  4180f4:	cmp	w0, #0x0
  4180f8:	b.ge	41810c <image_object_find+0x334>  // b.tcont
  4180fc:	ldr	x0, [sp, #96]
  418100:	bl	404df0 <image_unref@plt>
  418104:	ldr	w19, [sp, #84]
  418108:	b	41811c <image_object_find+0x344>
  41810c:	ldr	x1, [sp, #96]
  418110:	ldr	x0, [sp, #40]
  418114:	str	x1, [x0]
  418118:	mov	w19, #0x1                   	// #1
  41811c:	add	x0, sp, #0x58
  418120:	bl	416a80 <freep>
  418124:	mov	w1, w19
  418128:	adrp	x0, 431000 <machine_vtable+0x4a0>
  41812c:	ldr	x0, [x0, #3952]
  418130:	ldr	x2, [sp, #120]
  418134:	ldr	x0, [x0]
  418138:	eor	x0, x2, x0
  41813c:	cmp	x0, #0x0
  418140:	b.eq	418148 <image_object_find+0x370>  // b.none
  418144:	bl	4055f0 <__stack_chk_fail@plt>
  418148:	mov	w0, w1
  41814c:	ldr	x19, [sp, #16]
  418150:	ldp	x29, x30, [sp], #128
  418154:	ret

0000000000418158 <image_bus_path>:
  418158:	stp	x29, x30, [sp, #-64]!
  41815c:	mov	x29, sp
  418160:	str	x19, [sp, #16]
  418164:	str	x0, [sp, #40]
  418168:	adrp	x0, 431000 <machine_vtable+0x4a0>
  41816c:	ldr	x0, [x0, #3952]
  418170:	ldr	x1, [x0]
  418174:	str	x1, [sp, #56]
  418178:	mov	x1, #0x0                   	// #0
  41817c:	str	xzr, [sp, #48]
  418180:	ldr	x0, [sp, #40]
  418184:	cmp	x0, #0x0
  418188:	cset	w0, eq  // eq = none
  41818c:	and	w0, w0, #0xff
  418190:	and	x0, x0, #0xff
  418194:	cmp	x0, #0x0
  418198:	b.eq	4181c4 <image_bus_path+0x6c>  // b.none
  41819c:	adrp	x0, 41c000 <__func__.8711+0xb30>
  4181a0:	add	x1, x0, #0x973
  4181a4:	adrp	x0, 41c000 <__func__.8711+0xb30>
  4181a8:	add	x4, x0, #0xd78
  4181ac:	mov	w3, #0x1c7                 	// #455
  4181b0:	mov	x2, x1
  4181b4:	adrp	x0, 41c000 <__func__.8711+0xb30>
  4181b8:	add	x1, x0, #0xc98
  4181bc:	mov	w0, #0x0                   	// #0
  4181c0:	bl	4052a0 <log_assert_failed_realm@plt>
  4181c4:	ldr	x0, [sp, #40]
  4181c8:	bl	404e60 <bus_label_escape@plt>
  4181cc:	str	x0, [sp, #48]
  4181d0:	ldr	x0, [sp, #48]
  4181d4:	cmp	x0, #0x0
  4181d8:	b.ne	4181e4 <image_bus_path+0x8c>  // b.any
  4181dc:	mov	x19, #0x0                   	// #0
  4181e0:	b	418200 <image_bus_path+0xa8>
  4181e4:	ldr	x0, [sp, #48]
  4181e8:	mov	x2, #0x0                   	// #0
  4181ec:	mov	x1, x0
  4181f0:	adrp	x0, 41c000 <__func__.8711+0xb30>
  4181f4:	add	x0, x0, #0xc70
  4181f8:	bl	405230 <strjoin_real@plt>
  4181fc:	mov	x19, x0
  418200:	add	x0, sp, #0x30
  418204:	bl	416a80 <freep>
  418208:	mov	x1, x19
  41820c:	adrp	x0, 431000 <machine_vtable+0x4a0>
  418210:	ldr	x0, [x0, #3952]
  418214:	ldr	x2, [sp, #56]
  418218:	ldr	x0, [x0]
  41821c:	eor	x0, x2, x0
  418220:	cmp	x0, #0x0
  418224:	b.eq	41822c <image_bus_path+0xd4>  // b.none
  418228:	bl	4055f0 <__stack_chk_fail@plt>
  41822c:	mov	x0, x1
  418230:	ldr	x19, [sp, #16]
  418234:	ldp	x29, x30, [sp], #64
  418238:	ret

000000000041823c <image_node_enumerator>:
  41823c:	stp	x29, x30, [sp, #-160]!
  418240:	mov	x29, sp
  418244:	str	x19, [sp, #16]
  418248:	str	x0, [sp, #72]
  41824c:	str	x1, [sp, #64]
  418250:	str	x2, [sp, #56]
  418254:	str	x3, [sp, #48]
  418258:	str	x4, [sp, #40]
  41825c:	adrp	x0, 431000 <machine_vtable+0x4a0>
  418260:	ldr	x0, [x0, #3952]
  418264:	ldr	x1, [x0]
  418268:	str	x1, [sp, #152]
  41826c:	mov	x1, #0x0                   	// #0
  418270:	str	xzr, [sp, #96]
  418274:	str	xzr, [sp, #104]
  418278:	ldr	x0, [sp, #72]
  41827c:	cmp	x0, #0x0
  418280:	cset	w0, eq  // eq = none
  418284:	and	w0, w0, #0xff
  418288:	and	x0, x0, #0xff
  41828c:	cmp	x0, #0x0
  418290:	b.eq	4182bc <image_node_enumerator+0x80>  // b.none
  418294:	adrp	x0, 41c000 <__func__.8711+0xb30>
  418298:	add	x1, x0, #0x973
  41829c:	adrp	x0, 41c000 <__func__.8711+0xb30>
  4182a0:	add	x4, x0, #0xd88
  4182a4:	mov	w3, #0x1d7                 	// #471
  4182a8:	mov	x2, x1
  4182ac:	adrp	x0, 41c000 <__func__.8711+0xb30>
  4182b0:	add	x1, x0, #0x990
  4182b4:	mov	w0, #0x0                   	// #0
  4182b8:	bl	4052a0 <log_assert_failed_realm@plt>
  4182bc:	ldr	x0, [sp, #64]
  4182c0:	cmp	x0, #0x0
  4182c4:	cset	w0, eq  // eq = none
  4182c8:	and	w0, w0, #0xff
  4182cc:	and	x0, x0, #0xff
  4182d0:	cmp	x0, #0x0
  4182d4:	b.eq	418300 <image_node_enumerator+0xc4>  // b.none
  4182d8:	adrp	x0, 41c000 <__func__.8711+0xb30>
  4182dc:	add	x1, x0, #0x973
  4182e0:	adrp	x0, 41c000 <__func__.8711+0xb30>
  4182e4:	add	x4, x0, #0xd88
  4182e8:	mov	w3, #0x1d8                 	// #472
  4182ec:	mov	x2, x1
  4182f0:	adrp	x0, 41c000 <__func__.8711+0xb30>
  4182f4:	add	x1, x0, #0xc50
  4182f8:	mov	w0, #0x0                   	// #0
  4182fc:	bl	4052a0 <log_assert_failed_realm@plt>
  418300:	ldr	x0, [sp, #48]
  418304:	cmp	x0, #0x0
  418308:	cset	w0, eq  // eq = none
  41830c:	and	w0, w0, #0xff
  418310:	and	x0, x0, #0xff
  418314:	cmp	x0, #0x0
  418318:	b.eq	418344 <image_node_enumerator+0x108>  // b.none
  41831c:	adrp	x0, 41c000 <__func__.8711+0xb30>
  418320:	add	x1, x0, #0x973
  418324:	adrp	x0, 41c000 <__func__.8711+0xb30>
  418328:	add	x4, x0, #0xd88
  41832c:	mov	w3, #0x1d9                 	// #473
  418330:	mov	x2, x1
  418334:	adrp	x0, 41c000 <__func__.8711+0xb30>
  418338:	add	x1, x0, #0xca0
  41833c:	mov	w0, #0x0                   	// #0
  418340:	bl	4052a0 <log_assert_failed_realm@plt>
  418344:	adrp	x0, 431000 <machine_vtable+0x4a0>
  418348:	ldr	x0, [x0, #4000]
  41834c:	bl	4055e0 <internal_hashmap_new@plt>
  418350:	str	x0, [sp, #96]
  418354:	ldr	x0, [sp, #96]
  418358:	cmp	x0, #0x0
  41835c:	b.ne	418368 <image_node_enumerator+0x12c>  // b.any
  418360:	mov	w19, #0xfffffff4            	// #-12
  418364:	b	418428 <image_node_enumerator+0x1ec>
  418368:	ldr	x0, [sp, #96]
  41836c:	mov	x1, x0
  418370:	mov	w0, #0x0                   	// #0
  418374:	bl	405af0 <image_discover@plt>
  418378:	str	w0, [sp, #92]
  41837c:	ldr	w0, [sp, #92]
  418380:	cmp	w0, #0x0
  418384:	b.ge	418390 <image_node_enumerator+0x154>  // b.tcont
  418388:	ldr	w19, [sp, #92]
  41838c:	b	418428 <image_node_enumerator+0x1ec>
  418390:	mov	w0, #0xfffffffe            	// #-2
  418394:	str	w0, [sp, #136]
  418398:	str	xzr, [sp, #144]
  41839c:	b	4183e8 <image_node_enumerator+0x1ac>
  4183a0:	ldr	x0, [sp, #112]
  4183a4:	ldr	x0, [x0, #8]
  4183a8:	bl	418158 <image_bus_path>
  4183ac:	str	x0, [sp, #128]
  4183b0:	ldr	x0, [sp, #128]
  4183b4:	cmp	x0, #0x0
  4183b8:	b.ne	4183c4 <image_node_enumerator+0x188>  // b.any
  4183bc:	mov	w19, #0xfffffff4            	// #-12
  4183c0:	b	418428 <image_node_enumerator+0x1ec>
  4183c4:	add	x0, sp, #0x68
  4183c8:	ldr	x1, [sp, #128]
  4183cc:	bl	405480 <strv_consume@plt>
  4183d0:	str	w0, [sp, #92]
  4183d4:	ldr	w0, [sp, #92]
  4183d8:	cmp	w0, #0x0
  4183dc:	b.ge	4183e8 <image_node_enumerator+0x1ac>  // b.tcont
  4183e0:	ldr	w19, [sp, #92]
  4183e4:	b	418428 <image_node_enumerator+0x1ec>
  4183e8:	ldr	x0, [sp, #96]
  4183ec:	add	x2, sp, #0x70
  4183f0:	add	x1, sp, #0x88
  4183f4:	mov	x3, #0x0                   	// #0
  4183f8:	bl	416bfc <hashmap_iterate>
  4183fc:	and	w0, w0, #0xff
  418400:	cmp	w0, #0x0
  418404:	b.ne	4183a0 <image_node_enumerator+0x164>  // b.any
  418408:	ldr	x0, [sp, #104]
  41840c:	str	x0, [sp, #120]
  418410:	str	xzr, [sp, #104]
  418414:	ldr	x1, [sp, #120]
  418418:	ldr	x0, [sp, #48]
  41841c:	str	x1, [x0]
  418420:	mov	w19, #0x1                   	// #1
  418424:	b	418428 <image_node_enumerator+0x1ec>
  418428:	add	x0, sp, #0x68
  41842c:	bl	416d04 <strv_freep>
  418430:	add	x0, sp, #0x60
  418434:	bl	416c5c <hashmap_freep>
  418438:	mov	w1, w19
  41843c:	adrp	x0, 431000 <machine_vtable+0x4a0>
  418440:	ldr	x0, [x0, #3952]
  418444:	ldr	x2, [sp, #152]
  418448:	ldr	x0, [x0]
  41844c:	eor	x0, x2, x0
  418450:	cmp	x0, #0x0
  418454:	b.eq	41845c <image_node_enumerator+0x220>  // b.none
  418458:	bl	4055f0 <__stack_chk_fail@plt>
  41845c:	mov	w0, w1
  418460:	ldr	x19, [sp, #16]
  418464:	ldp	x29, x30, [sp], #160
  418468:	ret

000000000041846c <mfree>:
  41846c:	stp	x29, x30, [sp, #-32]!
  418470:	mov	x29, sp
  418474:	str	x0, [sp, #24]
  418478:	ldr	x0, [sp, #24]
  41847c:	bl	4059e0 <free@plt>
  418480:	mov	x0, #0x0                   	// #0
  418484:	ldp	x29, x30, [sp], #32
  418488:	ret

000000000041848c <operation_done>:
  41848c:	sub	sp, sp, #0xb0
  418490:	stp	x29, x30, [sp, #16]
  418494:	add	x29, sp, #0x10
  418498:	stp	x19, x20, [sp, #32]
  41849c:	str	x21, [sp, #48]
  4184a0:	str	x0, [sp, #88]
  4184a4:	str	x1, [sp, #80]
  4184a8:	str	x2, [sp, #72]
  4184ac:	adrp	x0, 431000 <machine_vtable+0x4a0>
  4184b0:	ldr	x0, [x0, #3952]
  4184b4:	ldr	x1, [x0]
  4184b8:	str	x1, [sp, #168]
  4184bc:	mov	x1, #0x0                   	// #0
  4184c0:	str	xzr, [sp, #144]
  4184c4:	str	xzr, [sp, #152]
  4184c8:	str	wzr, [sp, #160]
  4184cc:	ldr	x0, [sp, #72]
  4184d0:	str	x0, [sp, #136]
  4184d4:	ldr	x0, [sp, #136]
  4184d8:	cmp	x0, #0x0
  4184dc:	cset	w0, eq  // eq = none
  4184e0:	and	w0, w0, #0xff
  4184e4:	and	x0, x0, #0xff
  4184e8:	cmp	x0, #0x0
  4184ec:	b.eq	418518 <operation_done+0x8c>  // b.none
  4184f0:	adrp	x0, 41c000 <__func__.8711+0xb30>
  4184f4:	add	x1, x0, #0xda3
  4184f8:	adrp	x0, 41c000 <__func__.8711+0xb30>
  4184fc:	add	x4, x0, #0xee0
  418500:	mov	w3, #0xf                   	// #15
  418504:	mov	x2, x1
  418508:	adrp	x0, 41c000 <__func__.8711+0xb30>
  41850c:	add	x1, x0, #0xdc0
  418510:	mov	w0, #0x0                   	// #0
  418514:	bl	4052a0 <log_assert_failed_realm@plt>
  418518:	ldr	x0, [sp, #80]
  41851c:	cmp	x0, #0x0
  418520:	cset	w0, eq  // eq = none
  418524:	and	w0, w0, #0xff
  418528:	and	x0, x0, #0xff
  41852c:	cmp	x0, #0x0
  418530:	b.eq	41855c <operation_done+0xd0>  // b.none
  418534:	adrp	x0, 41c000 <__func__.8711+0xb30>
  418538:	add	x1, x0, #0xda3
  41853c:	adrp	x0, 41c000 <__func__.8711+0xb30>
  418540:	add	x4, x0, #0xee0
  418544:	mov	w3, #0x10                  	// #16
  418548:	mov	x2, x1
  41854c:	adrp	x0, 41c000 <__func__.8711+0xb30>
  418550:	add	x1, x0, #0xdc8
  418554:	mov	w0, #0x0                   	// #0
  418558:	bl	4052a0 <log_assert_failed_realm@plt>
  41855c:	mov	w0, #0x7                   	// #7
  418560:	str	w0, [sp, #100]
  418564:	str	wzr, [sp, #104]
  418568:	str	wzr, [sp, #108]
  41856c:	ldr	w0, [sp, #108]
  418570:	bl	405c20 <log_get_max_level_realm@plt>
  418574:	mov	w1, w0
  418578:	ldr	w0, [sp, #100]
  41857c:	and	w0, w0, #0x7
  418580:	cmp	w1, w0
  418584:	b.lt	4185f4 <operation_done+0x168>  // b.tstop
  418588:	ldr	w0, [sp, #108]
  41858c:	lsl	w1, w0, #10
  418590:	ldr	w0, [sp, #100]
  418594:	orr	w19, w1, w0
  418598:	adrp	x0, 41c000 <__func__.8711+0xb30>
  41859c:	add	x20, x0, #0xda3
  4185a0:	ldr	x0, [sp, #136]
  4185a4:	ldr	w21, [x0, #16]
  4185a8:	ldr	x0, [sp, #80]
  4185ac:	ldr	w0, [x0, #8]
  4185b0:	bl	405800 <sigchld_code_to_string@plt>
  4185b4:	mov	x1, x0
  4185b8:	ldr	x0, [sp, #80]
  4185bc:	ldr	w0, [x0, #24]
  4185c0:	str	w0, [sp]
  4185c4:	mov	x7, x1
  4185c8:	mov	w6, w21
  4185cc:	adrp	x0, 41c000 <__func__.8711+0xb30>
  4185d0:	add	x5, x0, #0xdd0
  4185d4:	adrp	x0, 41c000 <__func__.8711+0xb30>
  4185d8:	add	x4, x0, #0xef0
  4185dc:	mov	w3, #0x12                  	// #18
  4185e0:	mov	x2, x20
  4185e4:	ldr	w1, [sp, #104]
  4185e8:	mov	w0, w19
  4185ec:	bl	405750 <log_internal_realm@plt>
  4185f0:	b	4185fc <operation_done+0x170>
  4185f4:	ldr	w0, [sp, #104]
  4185f8:	cmp	w0, #0x0
  4185fc:	ldr	x0, [sp, #136]
  418600:	str	wzr, [x0, #16]
  418604:	ldr	x0, [sp, #80]
  418608:	ldr	w0, [x0, #8]
  41860c:	cmp	w0, #0x1
  418610:	b.eq	418638 <operation_done+0x1ac>  // b.none
  418614:	add	x3, sp, #0x90
  418618:	adrp	x0, 41c000 <__func__.8711+0xb30>
  41861c:	add	x2, x0, #0xe08
  418620:	adrp	x0, 41c000 <__func__.8711+0xb30>
  418624:	add	x1, x0, #0xe20
  418628:	mov	x0, x3
  41862c:	bl	4055d0 <sd_bus_error_setf@plt>
  418630:	str	w0, [sp, #96]
  418634:	b	4187b8 <operation_done+0x32c>
  418638:	ldr	x0, [sp, #80]
  41863c:	ldr	w0, [x0, #24]
  418640:	cmp	w0, #0x0
  418644:	b.ne	418650 <operation_done+0x1c4>  // b.any
  418648:	str	wzr, [sp, #96]
  41864c:	b	418690 <operation_done+0x204>
  418650:	ldr	x0, [sp, #136]
  418654:	ldr	w0, [x0, #32]
  418658:	add	x1, sp, #0x60
  41865c:	mov	x2, #0x4                   	// #4
  418660:	bl	405510 <read@plt>
  418664:	cmp	x0, #0x4
  418668:	b.eq	418690 <operation_done+0x204>  // b.none
  41866c:	add	x3, sp, #0x90
  418670:	adrp	x0, 41c000 <__func__.8711+0xb30>
  418674:	add	x2, x0, #0xe48
  418678:	adrp	x0, 41c000 <__func__.8711+0xb30>
  41867c:	add	x1, x0, #0xe20
  418680:	mov	x0, x3
  418684:	bl	4055d0 <sd_bus_error_setf@plt>
  418688:	str	w0, [sp, #96]
  41868c:	b	4187b8 <operation_done+0x32c>
  418690:	ldr	x0, [sp, #136]
  418694:	ldr	x0, [x0, #48]
  418698:	cmp	x0, #0x0
  41869c:	b.eq	4186f0 <operation_done+0x264>  // b.none
  4186a0:	ldr	x0, [sp, #136]
  4186a4:	ldr	x3, [x0, #48]
  4186a8:	ldr	w0, [sp, #96]
  4186ac:	add	x1, sp, #0x90
  4186b0:	mov	x2, x1
  4186b4:	mov	w1, w0
  4186b8:	ldr	x0, [sp, #136]
  4186bc:	blr	x3
  4186c0:	str	w0, [sp, #96]
  4186c4:	ldr	w0, [sp, #96]
  4186c8:	cmp	w0, #0x0
  4186cc:	b.ge	4187a4 <operation_done+0x318>  // b.tcont
  4186d0:	add	x0, sp, #0x90
  4186d4:	bl	404eb0 <sd_bus_error_is_set@plt>
  4186d8:	cmp	w0, #0x0
  4186dc:	b.ne	4187b4 <operation_done+0x328>  // b.any
  4186e0:	ldr	w1, [sp, #96]
  4186e4:	add	x0, sp, #0x90
  4186e8:	bl	405b40 <sd_bus_error_set_errno@plt>
  4186ec:	b	4187b4 <operation_done+0x328>
  4186f0:	ldr	w0, [sp, #96]
  4186f4:	cmp	w0, #0x0
  4186f8:	b.ge	41870c <operation_done+0x280>  // b.tcont
  4186fc:	ldr	w1, [sp, #96]
  418700:	add	x0, sp, #0x90
  418704:	bl	405b40 <sd_bus_error_set_errno@plt>
  418708:	b	4187b8 <operation_done+0x32c>
  41870c:	ldr	x0, [sp, #136]
  418710:	ldr	x0, [x0, #24]
  418714:	mov	x1, #0x0                   	// #0
  418718:	bl	404f00 <sd_bus_reply_method_return@plt>
  41871c:	str	w0, [sp, #96]
  418720:	ldr	w0, [sp, #96]
  418724:	cmp	w0, #0x0
  418728:	b.ge	4187a4 <operation_done+0x318>  // b.tcont
  41872c:	mov	w0, #0x3                   	// #3
  418730:	str	w0, [sp, #112]
  418734:	ldr	w0, [sp, #96]
  418738:	str	w0, [sp, #116]
  41873c:	str	wzr, [sp, #120]
  418740:	ldr	w0, [sp, #120]
  418744:	bl	405c20 <log_get_max_level_realm@plt>
  418748:	mov	w1, w0
  41874c:	ldr	w0, [sp, #112]
  418750:	and	w0, w0, #0x7
  418754:	cmp	w1, w0
  418758:	b.lt	41879c <operation_done+0x310>  // b.tstop
  41875c:	ldr	w0, [sp, #120]
  418760:	lsl	w1, w0, #10
  418764:	ldr	w0, [sp, #112]
  418768:	orr	w6, w1, w0
  41876c:	adrp	x0, 41c000 <__func__.8711+0xb30>
  418770:	add	x1, x0, #0xda3
  418774:	adrp	x0, 41c000 <__func__.8711+0xb30>
  418778:	add	x5, x0, #0xe58
  41877c:	adrp	x0, 41c000 <__func__.8711+0xb30>
  418780:	add	x4, x0, #0xef0
  418784:	mov	w3, #0x38                  	// #56
  418788:	mov	x2, x1
  41878c:	ldr	w1, [sp, #116]
  418790:	mov	w0, w6
  418794:	bl	405750 <log_internal_realm@plt>
  418798:	b	4187a4 <operation_done+0x318>
  41879c:	ldr	w0, [sp, #116]
  4187a0:	cmp	w0, #0x0
  4187a4:	ldr	x0, [sp, #136]
  4187a8:	bl	418c80 <operation_free>
  4187ac:	mov	w19, #0x0                   	// #0
  4187b0:	b	41885c <operation_done+0x3d0>
  4187b4:	nop
  4187b8:	ldr	x0, [sp, #136]
  4187bc:	ldr	x0, [x0, #24]
  4187c0:	add	x1, sp, #0x90
  4187c4:	bl	405810 <sd_bus_reply_method_error@plt>
  4187c8:	str	w0, [sp, #96]
  4187cc:	ldr	w0, [sp, #96]
  4187d0:	cmp	w0, #0x0
  4187d4:	b.ge	418850 <operation_done+0x3c4>  // b.tcont
  4187d8:	mov	w0, #0x3                   	// #3
  4187dc:	str	w0, [sp, #124]
  4187e0:	ldr	w0, [sp, #96]
  4187e4:	str	w0, [sp, #128]
  4187e8:	str	wzr, [sp, #132]
  4187ec:	ldr	w0, [sp, #132]
  4187f0:	bl	405c20 <log_get_max_level_realm@plt>
  4187f4:	mov	w1, w0
  4187f8:	ldr	w0, [sp, #124]
  4187fc:	and	w0, w0, #0x7
  418800:	cmp	w1, w0
  418804:	b.lt	418848 <operation_done+0x3bc>  // b.tstop
  418808:	ldr	w0, [sp, #132]
  41880c:	lsl	w1, w0, #10
  418810:	ldr	w0, [sp, #124]
  418814:	orr	w6, w1, w0
  418818:	adrp	x0, 41c000 <__func__.8711+0xb30>
  41881c:	add	x1, x0, #0xda3
  418820:	adrp	x0, 41c000 <__func__.8711+0xb30>
  418824:	add	x5, x0, #0xe58
  418828:	adrp	x0, 41c000 <__func__.8711+0xb30>
  41882c:	add	x4, x0, #0xef0
  418830:	mov	w3, #0x41                  	// #65
  418834:	mov	x2, x1
  418838:	ldr	w1, [sp, #128]
  41883c:	mov	w0, w6
  418840:	bl	405750 <log_internal_realm@plt>
  418844:	b	418850 <operation_done+0x3c4>
  418848:	ldr	w0, [sp, #128]
  41884c:	cmp	w0, #0x0
  418850:	ldr	x0, [sp, #136]
  418854:	bl	418c80 <operation_free>
  418858:	mov	w19, #0x0                   	// #0
  41885c:	add	x0, sp, #0x90
  418860:	bl	4056c0 <sd_bus_error_free@plt>
  418864:	mov	w1, w19
  418868:	adrp	x0, 431000 <machine_vtable+0x4a0>
  41886c:	ldr	x0, [x0, #3952]
  418870:	ldr	x2, [sp, #168]
  418874:	ldr	x0, [x0]
  418878:	eor	x0, x2, x0
  41887c:	cmp	x0, #0x0
  418880:	b.eq	418888 <operation_done+0x3fc>  // b.none
  418884:	bl	4055f0 <__stack_chk_fail@plt>
  418888:	mov	w0, w1
  41888c:	ldp	x19, x20, [sp, #32]
  418890:	ldr	x21, [sp, #48]
  418894:	ldp	x29, x30, [sp, #16]
  418898:	add	sp, sp, #0xb0
  41889c:	ret

00000000004188a0 <operation_new>:
  4188a0:	stp	x29, x30, [sp, #-128]!
  4188a4:	mov	x29, sp
  4188a8:	str	x0, [sp, #56]
  4188ac:	str	x1, [sp, #48]
  4188b0:	str	w2, [sp, #44]
  4188b4:	str	x3, [sp, #32]
  4188b8:	str	w4, [sp, #40]
  4188bc:	str	x5, [sp, #24]
  4188c0:	ldr	x0, [sp, #56]
  4188c4:	cmp	x0, #0x0
  4188c8:	cset	w0, eq  // eq = none
  4188cc:	and	w0, w0, #0xff
  4188d0:	and	x0, x0, #0xff
  4188d4:	cmp	x0, #0x0
  4188d8:	b.eq	418904 <operation_new+0x64>  // b.none
  4188dc:	adrp	x0, 41c000 <__func__.8711+0xb30>
  4188e0:	add	x1, x0, #0xda3
  4188e4:	adrp	x0, 41c000 <__func__.8711+0xb30>
  4188e8:	add	x4, x0, #0xf00
  4188ec:	mov	w3, #0x4b                  	// #75
  4188f0:	mov	x2, x1
  4188f4:	adrp	x0, 41c000 <__func__.8711+0xb30>
  4188f8:	add	x1, x0, #0xe78
  4188fc:	mov	w0, #0x0                   	// #0
  418900:	bl	4052a0 <log_assert_failed_realm@plt>
  418904:	ldr	w0, [sp, #44]
  418908:	cmp	w0, #0x1
  41890c:	cset	w0, le
  418910:	and	w0, w0, #0xff
  418914:	and	x0, x0, #0xff
  418918:	cmp	x0, #0x0
  41891c:	b.eq	418948 <operation_new+0xa8>  // b.none
  418920:	adrp	x0, 41c000 <__func__.8711+0xb30>
  418924:	add	x1, x0, #0xda3
  418928:	adrp	x0, 41c000 <__func__.8711+0xb30>
  41892c:	add	x4, x0, #0xf00
  418930:	mov	w3, #0x4c                  	// #76
  418934:	mov	x2, x1
  418938:	adrp	x0, 41c000 <__func__.8711+0xb30>
  41893c:	add	x1, x0, #0xe80
  418940:	mov	w0, #0x0                   	// #0
  418944:	bl	4052a0 <log_assert_failed_realm@plt>
  418948:	ldr	x0, [sp, #32]
  41894c:	cmp	x0, #0x0
  418950:	cset	w0, eq  // eq = none
  418954:	and	w0, w0, #0xff
  418958:	and	x0, x0, #0xff
  41895c:	cmp	x0, #0x0
  418960:	b.eq	41898c <operation_new+0xec>  // b.none
  418964:	adrp	x0, 41c000 <__func__.8711+0xb30>
  418968:	add	x1, x0, #0xda3
  41896c:	adrp	x0, 41c000 <__func__.8711+0xb30>
  418970:	add	x4, x0, #0xf00
  418974:	mov	w3, #0x4d                  	// #77
  418978:	mov	x2, x1
  41897c:	adrp	x0, 41c000 <__func__.8711+0xb30>
  418980:	add	x1, x0, #0xe90
  418984:	mov	w0, #0x0                   	// #0
  418988:	bl	4052a0 <log_assert_failed_realm@plt>
  41898c:	ldr	w0, [sp, #40]
  418990:	lsr	w0, w0, #31
  418994:	and	w0, w0, #0xff
  418998:	and	x0, x0, #0xff
  41899c:	cmp	x0, #0x0
  4189a0:	b.eq	4189cc <operation_new+0x12c>  // b.none
  4189a4:	adrp	x0, 41c000 <__func__.8711+0xb30>
  4189a8:	add	x1, x0, #0xda3
  4189ac:	adrp	x0, 41c000 <__func__.8711+0xb30>
  4189b0:	add	x4, x0, #0xf00
  4189b4:	mov	w3, #0x4e                  	// #78
  4189b8:	mov	x2, x1
  4189bc:	adrp	x0, 41c000 <__func__.8711+0xb30>
  4189c0:	add	x1, x0, #0xe98
  4189c4:	mov	w0, #0x0                   	// #0
  4189c8:	bl	4052a0 <log_assert_failed_realm@plt>
  4189cc:	mov	x1, #0x58                  	// #88
  4189d0:	mov	x0, #0x1                   	// #1
  4189d4:	bl	4058a0 <calloc@plt>
  4189d8:	str	x0, [sp, #88]
  4189dc:	ldr	x0, [sp, #88]
  4189e0:	cmp	x0, #0x0
  4189e4:	b.ne	4189f0 <operation_new+0x150>  // b.any
  4189e8:	mov	w0, #0xfffffff4            	// #-12
  4189ec:	b	418c78 <operation_new+0x3d8>
  4189f0:	ldr	x0, [sp, #88]
  4189f4:	mov	w1, #0xffffffff            	// #-1
  4189f8:	str	w1, [x0, #36]
  4189fc:	ldr	x0, [sp, #56]
  418a00:	ldr	x6, [x0]
  418a04:	ldr	x0, [sp, #88]
  418a08:	add	x1, x0, #0x28
  418a0c:	ldr	x5, [sp, #88]
  418a10:	adrp	x0, 418000 <image_object_find+0x228>
  418a14:	add	x4, x0, #0x48c
  418a18:	mov	w3, #0x4                   	// #4
  418a1c:	ldr	w2, [sp, #44]
  418a20:	mov	x0, x6
  418a24:	bl	404f60 <sd_event_add_child@plt>
  418a28:	str	w0, [sp, #72]
  418a2c:	ldr	w0, [sp, #72]
  418a30:	cmp	w0, #0x0
  418a34:	b.ge	418a48 <operation_new+0x1a8>  // b.tcont
  418a38:	ldr	x0, [sp, #88]
  418a3c:	bl	4059e0 <free@plt>
  418a40:	ldr	w0, [sp, #72]
  418a44:	b	418c78 <operation_new+0x3d8>
  418a48:	ldr	x0, [sp, #88]
  418a4c:	ldr	w1, [sp, #44]
  418a50:	str	w1, [x0, #16]
  418a54:	ldr	x0, [sp, #32]
  418a58:	bl	405b80 <sd_bus_message_ref@plt>
  418a5c:	mov	x1, x0
  418a60:	ldr	x0, [sp, #88]
  418a64:	str	x1, [x0, #24]
  418a68:	ldr	x0, [sp, #88]
  418a6c:	ldr	w1, [sp, #40]
  418a70:	str	w1, [x0, #32]
  418a74:	ldr	x0, [sp, #56]
  418a78:	add	x0, x0, #0x50
  418a7c:	str	x0, [sp, #96]
  418a80:	ldr	x0, [sp, #88]
  418a84:	str	x0, [sp, #104]
  418a88:	ldr	x0, [sp, #104]
  418a8c:	cmp	x0, #0x0
  418a90:	cset	w0, eq  // eq = none
  418a94:	and	w0, w0, #0xff
  418a98:	and	x0, x0, #0xff
  418a9c:	cmp	x0, #0x0
  418aa0:	b.eq	418acc <operation_new+0x22c>  // b.none
  418aa4:	adrp	x0, 41c000 <__func__.8711+0xb30>
  418aa8:	add	x1, x0, #0xda3
  418aac:	adrp	x0, 41c000 <__func__.8711+0xb30>
  418ab0:	add	x4, x0, #0xf00
  418ab4:	mov	w3, #0x60                  	// #96
  418ab8:	mov	x2, x1
  418abc:	adrp	x0, 41c000 <__func__.8711+0xb30>
  418ac0:	add	x1, x0, #0xea8
  418ac4:	mov	w0, #0x0                   	// #0
  418ac8:	bl	4052a0 <log_assert_failed_realm@plt>
  418acc:	ldr	x0, [sp, #96]
  418ad0:	ldr	x1, [x0]
  418ad4:	ldr	x0, [sp, #104]
  418ad8:	str	x1, [x0, #56]
  418adc:	ldr	x0, [sp, #104]
  418ae0:	ldr	x0, [x0, #56]
  418ae4:	cmp	x0, #0x0
  418ae8:	b.eq	418afc <operation_new+0x25c>  // b.none
  418aec:	ldr	x0, [sp, #104]
  418af0:	ldr	x0, [x0, #56]
  418af4:	ldr	x1, [sp, #104]
  418af8:	str	x1, [x0, #64]
  418afc:	ldr	x0, [sp, #104]
  418b00:	str	xzr, [x0, #64]
  418b04:	ldr	x0, [sp, #96]
  418b08:	ldr	x1, [sp, #104]
  418b0c:	str	x1, [x0]
  418b10:	ldr	x0, [sp, #56]
  418b14:	ldr	w0, [x0, #88]
  418b18:	add	w1, w0, #0x1
  418b1c:	ldr	x0, [sp, #56]
  418b20:	str	w1, [x0, #88]
  418b24:	ldr	x0, [sp, #88]
  418b28:	ldr	x1, [sp, #56]
  418b2c:	str	x1, [x0]
  418b30:	ldr	x0, [sp, #48]
  418b34:	cmp	x0, #0x0
  418b38:	b.eq	418be4 <operation_new+0x344>  // b.none
  418b3c:	ldr	x0, [sp, #48]
  418b40:	add	x0, x0, #0x88
  418b44:	str	x0, [sp, #112]
  418b48:	ldr	x0, [sp, #88]
  418b4c:	str	x0, [sp, #120]
  418b50:	ldr	x0, [sp, #120]
  418b54:	cmp	x0, #0x0
  418b58:	cset	w0, eq  // eq = none
  418b5c:	and	w0, w0, #0xff
  418b60:	and	x0, x0, #0xff
  418b64:	cmp	x0, #0x0
  418b68:	b.eq	418b94 <operation_new+0x2f4>  // b.none
  418b6c:	adrp	x0, 41c000 <__func__.8711+0xb30>
  418b70:	add	x1, x0, #0xda3
  418b74:	adrp	x0, 41c000 <__func__.8711+0xb30>
  418b78:	add	x4, x0, #0xf00
  418b7c:	mov	w3, #0x65                  	// #101
  418b80:	mov	x2, x1
  418b84:	adrp	x0, 41c000 <__func__.8711+0xb30>
  418b88:	add	x1, x0, #0xea8
  418b8c:	mov	w0, #0x0                   	// #0
  418b90:	bl	4052a0 <log_assert_failed_realm@plt>
  418b94:	ldr	x0, [sp, #112]
  418b98:	ldr	x1, [x0]
  418b9c:	ldr	x0, [sp, #120]
  418ba0:	str	x1, [x0, #72]
  418ba4:	ldr	x0, [sp, #120]
  418ba8:	ldr	x0, [x0, #72]
  418bac:	cmp	x0, #0x0
  418bb0:	b.eq	418bc4 <operation_new+0x324>  // b.none
  418bb4:	ldr	x0, [sp, #120]
  418bb8:	ldr	x0, [x0, #72]
  418bbc:	ldr	x1, [sp, #120]
  418bc0:	str	x1, [x0, #80]
  418bc4:	ldr	x0, [sp, #120]
  418bc8:	str	xzr, [x0, #80]
  418bcc:	ldr	x0, [sp, #112]
  418bd0:	ldr	x1, [sp, #120]
  418bd4:	str	x1, [x0]
  418bd8:	ldr	x0, [sp, #88]
  418bdc:	ldr	x1, [sp, #48]
  418be0:	str	x1, [x0, #8]
  418be4:	mov	w0, #0x7                   	// #7
  418be8:	str	w0, [sp, #76]
  418bec:	str	wzr, [sp, #80]
  418bf0:	str	wzr, [sp, #84]
  418bf4:	ldr	w0, [sp, #84]
  418bf8:	bl	405c20 <log_get_max_level_realm@plt>
  418bfc:	mov	w1, w0
  418c00:	ldr	w0, [sp, #76]
  418c04:	and	w0, w0, #0x7
  418c08:	cmp	w1, w0
  418c0c:	b.lt	418c54 <operation_new+0x3b4>  // b.tstop
  418c10:	ldr	w0, [sp, #84]
  418c14:	lsl	w1, w0, #10
  418c18:	ldr	w0, [sp, #76]
  418c1c:	orr	w7, w1, w0
  418c20:	adrp	x0, 41c000 <__func__.8711+0xb30>
  418c24:	add	x1, x0, #0xda3
  418c28:	ldr	w6, [sp, #44]
  418c2c:	adrp	x0, 41c000 <__func__.8711+0xb30>
  418c30:	add	x5, x0, #0xeb0
  418c34:	adrp	x0, 41c000 <__func__.8711+0xb30>
  418c38:	add	x4, x0, #0xf10
  418c3c:	mov	w3, #0x69                  	// #105
  418c40:	mov	x2, x1
  418c44:	ldr	w1, [sp, #80]
  418c48:	mov	w0, w7
  418c4c:	bl	405750 <log_internal_realm@plt>
  418c50:	b	418c5c <operation_new+0x3bc>
  418c54:	ldr	w0, [sp, #80]
  418c58:	cmp	w0, #0x0
  418c5c:	ldr	x0, [sp, #24]
  418c60:	cmp	x0, #0x0
  418c64:	b.eq	418c74 <operation_new+0x3d4>  // b.none
  418c68:	ldr	x0, [sp, #24]
  418c6c:	ldr	x1, [sp, #88]
  418c70:	str	x1, [x0]
  418c74:	mov	w0, #0x0                   	// #0
  418c78:	ldp	x29, x30, [sp], #128
  418c7c:	ret

0000000000418c80 <operation_free>:
  418c80:	stp	x29, x30, [sp, #-64]!
  418c84:	mov	x29, sp
  418c88:	str	x0, [sp, #24]
  418c8c:	ldr	x0, [sp, #24]
  418c90:	cmp	x0, #0x0
  418c94:	b.ne	418ca0 <operation_free+0x20>  // b.any
  418c98:	mov	x0, #0x0                   	// #0
  418c9c:	b	418f60 <operation_free+0x2e0>
  418ca0:	ldr	x0, [sp, #24]
  418ca4:	ldr	x0, [x0, #40]
  418ca8:	bl	4051d0 <sd_event_source_unref@plt>
  418cac:	ldr	x0, [sp, #24]
  418cb0:	ldr	w0, [x0, #32]
  418cb4:	bl	405240 <safe_close@plt>
  418cb8:	ldr	x0, [sp, #24]
  418cbc:	ldr	w0, [x0, #36]
  418cc0:	bl	405240 <safe_close@plt>
  418cc4:	ldr	x0, [sp, #24]
  418cc8:	ldr	w0, [x0, #16]
  418ccc:	cmp	w0, #0x1
  418cd0:	b.le	418ce0 <operation_free+0x60>
  418cd4:	ldr	x0, [sp, #24]
  418cd8:	ldr	w0, [x0, #16]
  418cdc:	bl	405280 <sigkill_wait@plt>
  418ce0:	ldr	x0, [sp, #24]
  418ce4:	ldr	x0, [x0, #24]
  418ce8:	bl	404fd0 <sd_bus_message_unref@plt>
  418cec:	ldr	x0, [sp, #24]
  418cf0:	ldr	x0, [x0]
  418cf4:	cmp	x0, #0x0
  418cf8:	b.eq	418e2c <operation_free+0x1ac>  // b.none
  418cfc:	ldr	x0, [sp, #24]
  418d00:	ldr	x0, [x0]
  418d04:	add	x0, x0, #0x50
  418d08:	str	x0, [sp, #32]
  418d0c:	ldr	x0, [sp, #24]
  418d10:	str	x0, [sp, #40]
  418d14:	ldr	x0, [sp, #40]
  418d18:	cmp	x0, #0x0
  418d1c:	cset	w0, eq  // eq = none
  418d20:	and	w0, w0, #0xff
  418d24:	and	x0, x0, #0xff
  418d28:	cmp	x0, #0x0
  418d2c:	b.eq	418d58 <operation_free+0xd8>  // b.none
  418d30:	adrp	x0, 41c000 <__func__.8711+0xb30>
  418d34:	add	x1, x0, #0xda3
  418d38:	adrp	x0, 41c000 <__func__.8711+0xb30>
  418d3c:	add	x4, x0, #0xf20
  418d40:	mov	w3, #0x82                  	// #130
  418d44:	mov	x2, x1
  418d48:	adrp	x0, 41c000 <__func__.8711+0xb30>
  418d4c:	add	x1, x0, #0xea8
  418d50:	mov	w0, #0x0                   	// #0
  418d54:	bl	4052a0 <log_assert_failed_realm@plt>
  418d58:	ldr	x0, [sp, #40]
  418d5c:	ldr	x0, [x0, #56]
  418d60:	cmp	x0, #0x0
  418d64:	b.eq	418d7c <operation_free+0xfc>  // b.none
  418d68:	ldr	x0, [sp, #40]
  418d6c:	ldr	x0, [x0, #56]
  418d70:	ldr	x1, [sp, #40]
  418d74:	ldr	x1, [x1, #64]
  418d78:	str	x1, [x0, #64]
  418d7c:	ldr	x0, [sp, #40]
  418d80:	ldr	x0, [x0, #64]
  418d84:	cmp	x0, #0x0
  418d88:	b.eq	418da4 <operation_free+0x124>  // b.none
  418d8c:	ldr	x0, [sp, #40]
  418d90:	ldr	x0, [x0, #64]
  418d94:	ldr	x1, [sp, #40]
  418d98:	ldr	x1, [x1, #56]
  418d9c:	str	x1, [x0, #56]
  418da0:	b	418e00 <operation_free+0x180>
  418da4:	ldr	x0, [sp, #32]
  418da8:	ldr	x0, [x0]
  418dac:	ldr	x1, [sp, #40]
  418db0:	cmp	x1, x0
  418db4:	cset	w0, ne  // ne = any
  418db8:	and	w0, w0, #0xff
  418dbc:	and	x0, x0, #0xff
  418dc0:	cmp	x0, #0x0
  418dc4:	b.eq	418df0 <operation_free+0x170>  // b.none
  418dc8:	adrp	x0, 41c000 <__func__.8711+0xb30>
  418dcc:	add	x1, x0, #0xda3
  418dd0:	adrp	x0, 41c000 <__func__.8711+0xb30>
  418dd4:	add	x4, x0, #0xf20
  418dd8:	mov	w3, #0x82                  	// #130
  418ddc:	mov	x2, x1
  418de0:	adrp	x0, 41c000 <__func__.8711+0xb30>
  418de4:	add	x1, x0, #0xed0
  418de8:	mov	w0, #0x0                   	// #0
  418dec:	bl	4052a0 <log_assert_failed_realm@plt>
  418df0:	ldr	x0, [sp, #40]
  418df4:	ldr	x1, [x0, #56]
  418df8:	ldr	x0, [sp, #32]
  418dfc:	str	x1, [x0]
  418e00:	ldr	x0, [sp, #40]
  418e04:	str	xzr, [x0, #64]
  418e08:	ldr	x0, [sp, #40]
  418e0c:	ldr	x1, [x0, #64]
  418e10:	ldr	x0, [sp, #40]
  418e14:	str	x1, [x0, #56]
  418e18:	ldr	x0, [sp, #24]
  418e1c:	ldr	x0, [x0]
  418e20:	ldr	w1, [x0, #88]
  418e24:	sub	w1, w1, #0x1
  418e28:	str	w1, [x0, #88]
  418e2c:	ldr	x0, [sp, #24]
  418e30:	ldr	x0, [x0, #8]
  418e34:	cmp	x0, #0x0
  418e38:	b.eq	418f58 <operation_free+0x2d8>  // b.none
  418e3c:	ldr	x0, [sp, #24]
  418e40:	ldr	x0, [x0, #8]
  418e44:	add	x0, x0, #0x88
  418e48:	str	x0, [sp, #48]
  418e4c:	ldr	x0, [sp, #24]
  418e50:	str	x0, [sp, #56]
  418e54:	ldr	x0, [sp, #56]
  418e58:	cmp	x0, #0x0
  418e5c:	cset	w0, eq  // eq = none
  418e60:	and	w0, w0, #0xff
  418e64:	and	x0, x0, #0xff
  418e68:	cmp	x0, #0x0
  418e6c:	b.eq	418e98 <operation_free+0x218>  // b.none
  418e70:	adrp	x0, 41c000 <__func__.8711+0xb30>
  418e74:	add	x1, x0, #0xda3
  418e78:	adrp	x0, 41c000 <__func__.8711+0xb30>
  418e7c:	add	x4, x0, #0xf20
  418e80:	mov	w3, #0x87                  	// #135
  418e84:	mov	x2, x1
  418e88:	adrp	x0, 41c000 <__func__.8711+0xb30>
  418e8c:	add	x1, x0, #0xea8
  418e90:	mov	w0, #0x0                   	// #0
  418e94:	bl	4052a0 <log_assert_failed_realm@plt>
  418e98:	ldr	x0, [sp, #56]
  418e9c:	ldr	x0, [x0, #72]
  418ea0:	cmp	x0, #0x0
  418ea4:	b.eq	418ebc <operation_free+0x23c>  // b.none
  418ea8:	ldr	x0, [sp, #56]
  418eac:	ldr	x0, [x0, #72]
  418eb0:	ldr	x1, [sp, #56]
  418eb4:	ldr	x1, [x1, #80]
  418eb8:	str	x1, [x0, #80]
  418ebc:	ldr	x0, [sp, #56]
  418ec0:	ldr	x0, [x0, #80]
  418ec4:	cmp	x0, #0x0
  418ec8:	b.eq	418ee4 <operation_free+0x264>  // b.none
  418ecc:	ldr	x0, [sp, #56]
  418ed0:	ldr	x0, [x0, #80]
  418ed4:	ldr	x1, [sp, #56]
  418ed8:	ldr	x1, [x1, #72]
  418edc:	str	x1, [x0, #72]
  418ee0:	b	418f40 <operation_free+0x2c0>
  418ee4:	ldr	x0, [sp, #48]
  418ee8:	ldr	x0, [x0]
  418eec:	ldr	x1, [sp, #56]
  418ef0:	cmp	x1, x0
  418ef4:	cset	w0, ne  // ne = any
  418ef8:	and	w0, w0, #0xff
  418efc:	and	x0, x0, #0xff
  418f00:	cmp	x0, #0x0
  418f04:	b.eq	418f30 <operation_free+0x2b0>  // b.none
  418f08:	adrp	x0, 41c000 <__func__.8711+0xb30>
  418f0c:	add	x1, x0, #0xda3
  418f10:	adrp	x0, 41c000 <__func__.8711+0xb30>
  418f14:	add	x4, x0, #0xf20
  418f18:	mov	w3, #0x87                  	// #135
  418f1c:	mov	x2, x1
  418f20:	adrp	x0, 41c000 <__func__.8711+0xb30>
  418f24:	add	x1, x0, #0xed0
  418f28:	mov	w0, #0x0                   	// #0
  418f2c:	bl	4052a0 <log_assert_failed_realm@plt>
  418f30:	ldr	x0, [sp, #56]
  418f34:	ldr	x1, [x0, #72]
  418f38:	ldr	x0, [sp, #48]
  418f3c:	str	x1, [x0]
  418f40:	ldr	x0, [sp, #56]
  418f44:	str	xzr, [x0, #80]
  418f48:	ldr	x0, [sp, #56]
  418f4c:	ldr	x1, [x0, #80]
  418f50:	ldr	x0, [sp, #56]
  418f54:	str	x1, [x0, #72]
  418f58:	ldr	x0, [sp, #24]
  418f5c:	bl	41846c <mfree>
  418f60:	ldp	x29, x30, [sp], #64
  418f64:	ret

0000000000418f68 <__libc_csu_init>:
  418f68:	stp	x29, x30, [sp, #-64]!
  418f6c:	mov	x29, sp
  418f70:	stp	x19, x20, [sp, #16]
  418f74:	adrp	x20, 430000 <__FRAME_END__+0x10c5c>
  418f78:	add	x20, x20, #0x150
  418f7c:	stp	x21, x22, [sp, #32]
  418f80:	adrp	x21, 430000 <__FRAME_END__+0x10c5c>
  418f84:	add	x21, x21, #0x148
  418f88:	sub	x20, x20, x21
  418f8c:	mov	w22, w0
  418f90:	stp	x23, x24, [sp, #48]
  418f94:	mov	x23, x1
  418f98:	mov	x24, x2
  418f9c:	bl	404d90 <_init>
  418fa0:	cmp	xzr, x20, asr #3
  418fa4:	b.eq	418fd0 <__libc_csu_init+0x68>  // b.none
  418fa8:	asr	x20, x20, #3
  418fac:	mov	x19, #0x0                   	// #0
  418fb0:	ldr	x3, [x21, x19, lsl #3]
  418fb4:	mov	x2, x24
  418fb8:	add	x19, x19, #0x1
  418fbc:	mov	x1, x23
  418fc0:	mov	w0, w22
  418fc4:	blr	x3
  418fc8:	cmp	x20, x19
  418fcc:	b.ne	418fb0 <__libc_csu_init+0x48>  // b.any
  418fd0:	ldp	x19, x20, [sp, #16]
  418fd4:	ldp	x21, x22, [sp, #32]
  418fd8:	ldp	x23, x24, [sp, #48]
  418fdc:	ldp	x29, x30, [sp], #64
  418fe0:	ret
  418fe4:	nop

0000000000418fe8 <__libc_csu_fini>:
  418fe8:	ret
  418fec:	nop

0000000000418ff0 <lstat64>:
  418ff0:	mov	x2, x1
  418ff4:	mov	x1, x0
  418ff8:	mov	w0, #0x0                   	// #0
  418ffc:	b	405590 <__lxstat64@plt>

Disassembly of section .fini:

0000000000419000 <_fini>:
  419000:	stp	x29, x30, [sp, #-16]!
  419004:	mov	x29, sp
  419008:	ldp	x29, x30, [sp], #16
  41900c:	ret
