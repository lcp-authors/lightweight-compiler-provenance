
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//gcry_rijndael.mod_gcc_-O3:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <grub_mod_init-0xf68>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	adrp	x6, 0 <grub_mod_init-0xf68>
   8:	mov	x29, sp
   c:	stp	x19, x20, [sp, #16]
  10:	str	x21, [sp, #32]
  14:	ldr	x9, [x6]
  18:	ldp	w3, w7, [x0, #4]
  1c:	add	x12, x9, #0x400
  20:	ldp	w6, w4, [x2]
  24:	add	x11, x9, #0x800
  28:	ldp	w8, w5, [x2, #8]
  2c:	eor	w3, w4, w3
  30:	ldr	w4, [x0, #12]
  34:	add	x10, x9, #0xc00
  38:	ldr	w2, [x0]
  3c:	eor	w8, w8, w7
  40:	eor	w4, w5, w4
  44:	ubfx	x7, x3, #8, #8
  48:	eor	w2, w6, w2
  4c:	ubfx	x5, x8, #16, #8
  50:	lsr	w15, w4, #24
  54:	and	x6, x2, #0xff
  58:	ldr	w13, [x12, x7, lsl #2]
  5c:	and	x16, x3, #0xff
  60:	ldr	w5, [x11, x5, lsl #2]
  64:	ubfx	x7, x4, #16, #8
  68:	ldr	w15, [x10, x15, lsl #2]
  6c:	ubfx	x14, x8, #8, #8
  70:	ldr	w6, [x9, x6, lsl #2]
  74:	lsr	w21, w2, #24
  78:	eor	w5, w5, w15
  7c:	ubfx	x19, x2, #16, #8
  80:	eor	w6, w6, w13
  84:	ldr	w13, [x0, #480]
  88:	eor	w6, w6, w5
  8c:	str	w6, [x1]
  90:	and	x20, x8, #0xff
  94:	lsr	w18, w3, #24
  98:	ldr	w17, [x11, x7, lsl #2]
  9c:	ubfx	x7, x2, #8, #8
  a0:	ldr	w5, [x9, x16, lsl #2]
  a4:	ubfx	x15, x4, #8, #8
  a8:	ldr	w14, [x12, x14, lsl #2]
  ac:	lsr	w16, w8, #24
  b0:	ldr	w2, [x10, x21, lsl #2]
  b4:	and	x8, x4, #0xff
  b8:	eor	w5, w5, w14
  bc:	ubfx	x3, x3, #16, #8
  c0:	eor	w2, w17, w2
  c4:	sub	w14, w13, #0x1
  c8:	eor	w5, w5, w2
  cc:	str	w5, [x1, #4]
  d0:	cmp	w14, #0x1
  d4:	ldr	w2, [x9, x20, lsl #2]
  d8:	ldr	w4, [x11, x19, lsl #2]
  dc:	ldr	w15, [x12, x15, lsl #2]
  e0:	ldr	w17, [x10, x18, lsl #2]
  e4:	eor	w15, w2, w15
  e8:	eor	w2, w4, w17
  ec:	eor	w2, w15, w2
  f0:	str	w2, [x1, #8]
  f4:	ldr	w8, [x9, x8, lsl #2]
  f8:	ldr	w7, [x12, x7, lsl #2]
  fc:	ldr	w4, [x10, x16, lsl #2]
 100:	ldr	w3, [x11, x3, lsl #2]
 104:	eor	w7, w8, w7
 108:	eor	w3, w3, w4
 10c:	eor	w3, w7, w3
 110:	str	w3, [x1, #12]
 114:	b.le	20c <grub_mod_init-0xd5c>
 118:	sub	w4, w13, #0x3
 11c:	add	x13, x0, #0x20
 120:	add	x8, x0, #0x10
 124:	add	x13, x13, w4, uxtw #4
 128:	ldp	w17, w7, [x8, #8]
 12c:	ldp	w16, w15, [x8]
 130:	eor	w2, w2, w17
 134:	eor	w3, w3, w7
 138:	and	x19, x2, #0xff
 13c:	eor	w15, w5, w15
 140:	eor	w16, w6, w16
 144:	and	x4, x16, #0xff
 148:	ubfx	x6, x2, #16, #8
 14c:	ubfx	x5, x15, #8, #8
 150:	lsr	w17, w3, #24
 154:	ubfx	x20, x2, #8, #8
 158:	lsr	w21, w16, #24
 15c:	ldr	w7, [x9, x4, lsl #2]
 160:	ubfx	x4, x3, #16, #8
 164:	ldr	w18, [x12, x5, lsl #2]
 168:	and	x5, x15, #0xff
 16c:	ldr	w17, [x10, x17, lsl #2]
 170:	ubfx	x30, x16, #16, #8
 174:	ldr	w6, [x11, x6, lsl #2]
 178:	eor	w7, w7, w18
 17c:	ubfx	x18, x3, #8, #8
 180:	ubfx	x16, x16, #8, #8
 184:	eor	w6, w6, w17
 188:	lsr	w17, w15, #24
 18c:	eor	w6, w7, w6
 190:	str	w6, [x1]
 194:	lsr	w7, w2, #24
 198:	and	x3, x3, #0xff
 19c:	ldr	w2, [x10, x21, lsl #2]
 1a0:	ubfx	x15, x15, #16, #8
 1a4:	ldr	w5, [x9, x5, lsl #2]
 1a8:	add	x8, x8, #0x10
 1ac:	ldr	w20, [x12, x20, lsl #2]
 1b0:	cmp	x13, x8
 1b4:	ldr	w4, [x11, x4, lsl #2]
 1b8:	eor	w5, w5, w20
 1bc:	eor	w4, w4, w2
 1c0:	eor	w5, w5, w4
 1c4:	str	w5, [x1, #4]
 1c8:	ldr	w2, [x9, x19, lsl #2]
 1cc:	ldr	w18, [x12, x18, lsl #2]
 1d0:	ldr	w4, [x11, x30, lsl #2]
 1d4:	ldr	w17, [x10, x17, lsl #2]
 1d8:	eor	w2, w2, w18
 1dc:	eor	w4, w4, w17
 1e0:	eor	w2, w2, w4
 1e4:	str	w2, [x1, #8]
 1e8:	ldr	w4, [x9, x3, lsl #2]
 1ec:	ldr	w16, [x12, x16, lsl #2]
 1f0:	ldr	w7, [x10, x7, lsl #2]
 1f4:	ldr	w3, [x11, x15, lsl #2]
 1f8:	eor	w4, w4, w16
 1fc:	eor	w3, w3, w7
 200:	eor	w3, w4, w3
 204:	str	w3, [x1, #12]
 208:	b.ne	128 <grub_mod_init-0xe40>  // b.any
 20c:	sbfiz	x14, x14, #4, #32
 210:	add	x8, x0, x14
 214:	ldr	w7, [x0, x14]
 218:	ldp	w15, w10, [x8, #4]
 21c:	eor	w6, w6, w7
 220:	ldr	w0, [x8, #12]
 224:	eor	w5, w5, w15
 228:	eor	w2, w2, w10
 22c:	eor	w3, w3, w0
 230:	ubfx	x7, x6, #16, #8
 234:	ubfx	x4, x6, #8, #8
 238:	lsr	w10, w6, #24
 23c:	ubfx	x17, x5, #8, #8
 240:	ubfx	x16, x2, #16, #8
 244:	ubfx	x14, x2, #8, #8
 248:	lsr	w15, w3, #24
 24c:	ubfx	x13, x3, #16, #8
 250:	ubfx	x12, x3, #8, #8
 254:	lsr	w11, w5, #24
 258:	lsr	w18, w2, #24
 25c:	ubfx	x0, x5, #16, #8
 260:	add	x7, x9, x7, lsl #2
 264:	add	x4, x9, x4, lsl #2
 268:	add	x17, x9, x17, lsl #2
 26c:	add	x16, x9, x16, lsl #2
 270:	add	x15, x9, x15, lsl #2
 274:	add	x14, x9, x14, lsl #2
 278:	add	x13, x9, x13, lsl #2
 27c:	add	x5, x9, w5, uxtb #2
 280:	add	x2, x9, w2, uxtb #2
 284:	add	x6, x9, w6, uxtb #2
 288:	add	x12, x9, x12, lsl #2
 28c:	add	x3, x9, w3, uxtb #2
 290:	add	x11, x9, x11, lsl #2
 294:	add	x10, x9, x10, lsl #2
 298:	add	x0, x9, x0, lsl #2
 29c:	add	x9, x9, x18, lsl #2
 2a0:	ldrb	w19, [x17, #1]
 2a4:	ldrb	w18, [x16, #1]
 2a8:	ldrb	w17, [x15, #1]
 2ac:	ldrb	w16, [x5, #1]
 2b0:	ldrb	w15, [x14, #1]
 2b4:	ldrb	w12, [x12, #1]
 2b8:	ldrb	w14, [x13, #1]
 2bc:	ldrb	w3, [x3, #1]
 2c0:	ldrb	w13, [x2, #1]
 2c4:	ldrb	w11, [x11, #1]
 2c8:	ldrb	w10, [x10, #1]
 2cc:	ldrb	w5, [x7, #1]
 2d0:	ldrb	w2, [x4, #1]
 2d4:	ldrb	w4, [x6, #1]
 2d8:	strb	w4, [x1]
 2dc:	strb	w19, [x1, #1]
 2e0:	strb	w18, [x1, #2]
 2e4:	strb	w17, [x1, #3]
 2e8:	strb	w16, [x1, #4]
 2ec:	strb	w15, [x1, #5]
 2f0:	strb	w14, [x1, #6]
 2f4:	strb	w10, [x1, #7]
 2f8:	strb	w13, [x1, #8]
 2fc:	strb	w12, [x1, #9]
 300:	strb	w5, [x1, #10]
 304:	strb	w11, [x1, #11]
 308:	strb	w3, [x1, #12]
 30c:	strb	w2, [x1, #13]
 310:	ldrb	w2, [x0, #1]
 314:	ldrb	w0, [x9, #1]
 318:	strb	w2, [x1, #14]
 31c:	strb	w0, [x1, #15]
 320:	ldp	w0, w3, [x1]
 324:	ldr	w2, [x8, #16]
 328:	ldp	x19, x20, [sp, #16]
 32c:	eor	w0, w0, w2
 330:	str	w0, [x1]
 334:	ldr	w2, [x1, #8]
 338:	ldr	w4, [x8, #20]
 33c:	ldr	w0, [x1, #12]
 340:	eor	w3, w3, w4
 344:	str	w3, [x1, #4]
 348:	ldr	x21, [sp, #32]
 34c:	ldr	w3, [x8, #24]
 350:	ldp	x29, x30, [sp], #48
 354:	eor	w2, w2, w3
 358:	str	w2, [x1, #8]
 35c:	ldr	w2, [x8, #28]
 360:	eor	w0, w0, w2
 364:	str	w0, [x1, #12]
 368:	ret
 36c:	nop
	...
 378:	stp	x29, x30, [sp, #-64]!
 37c:	adrp	x4, 0 <grub_mod_init-0xf68>
 380:	mov	x29, sp
 384:	ldr	w17, [x0, #480]
 388:	ldr	x12, [x4]
 38c:	stp	x19, x20, [sp, #16]
 390:	sxtw	x7, w17
 394:	add	x7, x7, #0xf
 398:	stp	x21, x22, [sp, #32]
 39c:	add	x8, x12, #0xb00
 3a0:	lsl	x7, x7, #4
 3a4:	ldr	w3, [x2, #12]
 3a8:	add	x4, x0, x7
 3ac:	add	x9, x12, #0x700
 3b0:	ldp	w6, w14, [x2, #4]
 3b4:	add	x10, x12, #0x300
 3b8:	ldr	w5, [x0, x7]
 3bc:	sub	x11, x12, #0x100
 3c0:	ldr	w2, [x2]
 3c4:	cmp	w17, #0x2
 3c8:	ldp	w15, w13, [x4, #4]
 3cc:	eor	w2, w5, w2
 3d0:	ldr	w5, [x4, #12]
 3d4:	and	x4, x2, #0xff
 3d8:	eor	w13, w13, w14
 3dc:	eor	w6, w15, w6
 3e0:	eor	w3, w5, w3
 3e4:	ubfx	x22, x2, #8, #8
 3e8:	lsr	w14, w6, #24
 3ec:	ubfx	x5, x13, #16, #8
 3f0:	ubfx	x16, x3, #8, #8
 3f4:	ldr	w4, [x11, x4, lsl #2]
 3f8:	lsr	w19, w13, #24
 3fc:	and	x15, x6, #0xff
 400:	ldr	w14, [x8, x14, lsl #2]
 404:	ubfx	x18, x3, #16, #8
 408:	ldr	w16, [x10, x16, lsl #2]
 40c:	and	x21, x13, #0xff
 410:	ldr	w5, [x9, x5, lsl #2]
 414:	ubfx	x20, x6, #8, #8
 418:	eor	w4, w4, w16
 41c:	eor	w5, w5, w14
 420:	ubfx	x14, x13, #8, #8
 424:	eor	w16, w4, w5
 428:	str	w16, [x1]
 42c:	ubfx	x13, x6, #16, #8
 430:	lsr	w5, w2, #24
 434:	ldr	w6, [x11, x15, lsl #2]
 438:	ubfx	x15, x2, #16, #8
 43c:	ldr	w4, [x10, x22, lsl #2]
 440:	ldr	w18, [x9, x18, lsl #2]
 444:	ldr	w2, [x8, x19, lsl #2]
 448:	eor	w6, w6, w4
 44c:	lsr	w19, w3, #24
 450:	and	x4, x3, #0xff
 454:	eor	w2, w18, w2
 458:	eor	w6, w6, w2
 45c:	str	w6, [x1, #4]
 460:	ldr	w3, [x11, x21, lsl #2]
 464:	ldr	w18, [x10, x20, lsl #2]
 468:	ldr	w15, [x9, x15, lsl #2]
 46c:	ldr	w2, [x8, x19, lsl #2]
 470:	eor	w3, w3, w18
 474:	eor	w2, w15, w2
 478:	eor	w3, w3, w2
 47c:	str	w3, [x1, #8]
 480:	ldr	w14, [x10, x14, lsl #2]
 484:	ldr	w2, [x9, x13, lsl #2]
 488:	ldr	w13, [x8, x5, lsl #2]
 48c:	ldr	w5, [x11, x4, lsl #2]
 490:	eor	w4, w2, w13
 494:	eor	w2, w5, w14
 498:	eor	w2, w2, w4
 49c:	str	w2, [x1, #12]
 4a0:	b.le	5b0 <grub_mod_init-0x9b8>
 4a4:	sub	w17, w17, #0x3
 4a8:	sub	x4, x7, #0xf0
 4ac:	sub	x13, x0, #0x20
 4b0:	sub	x7, x7, #0x100
 4b4:	sub	x17, x4, w17, uxtw #4
 4b8:	add	x7, x0, x7
 4bc:	add	x13, x17, x13
 4c0:	str	x23, [sp, #48]
 4c4:	nop
 4c8:	ldp	w5, w4, [x7, #248]
 4cc:	ldp	w14, w15, [x7, #240]
 4d0:	eor	w3, w3, w5
 4d4:	eor	w2, w2, w4
 4d8:	and	x20, x3, #0xff
 4dc:	eor	w15, w6, w15
 4e0:	eor	w14, w16, w14
 4e4:	ubfx	x4, x3, #16, #8
 4e8:	ubfx	x16, x2, #8, #8
 4ec:	lsr	w6, w15, #24
 4f0:	and	x5, x14, #0xff
 4f4:	ubfx	x23, x14, #8, #8
 4f8:	ubfx	x22, x2, #16, #8
 4fc:	ldr	w16, [x10, x16, lsl #2]
 500:	lsr	w21, w3, #24
 504:	ldr	w17, [x8, x6, lsl #2]
 508:	and	x6, x15, #0xff
 50c:	ldr	w4, [x9, x4, lsl #2]
 510:	ubfx	x18, x15, #8, #8
 514:	ldr	w5, [x11, x5, lsl #2]
 518:	ubfx	x19, x14, #16, #8
 51c:	eor	w4, w4, w17
 520:	ubfx	x17, x3, #8, #8
 524:	eor	w5, w5, w16
 528:	lsr	w30, w2, #24
 52c:	eor	w16, w5, w4
 530:	str	w16, [x1]
 534:	ubfx	x15, x15, #16, #8
 538:	lsr	w14, w14, #24
 53c:	ldr	w5, [x10, x23, lsl #2]
 540:	sub	x7, x7, #0x10
 544:	ldr	w4, [x9, x22, lsl #2]
 548:	cmp	x13, x7
 54c:	ldr	w3, [x8, x21, lsl #2]
 550:	ldr	w6, [x11, x6, lsl #2]
 554:	eor	w6, w6, w5
 558:	and	x5, x2, #0xff
 55c:	eor	w2, w4, w3
 560:	eor	w6, w6, w2
 564:	str	w6, [x1, #4]
 568:	ldr	w4, [x8, x30, lsl #2]
 56c:	ldr	w3, [x11, x20, lsl #2]
 570:	ldr	w18, [x10, x18, lsl #2]
 574:	ldr	w2, [x9, x19, lsl #2]
 578:	eor	w3, w3, w18
 57c:	eor	w2, w2, w4
 580:	eor	w3, w3, w2
 584:	str	w3, [x1, #8]
 588:	ldr	w17, [x10, x17, lsl #2]
 58c:	ldr	w4, [x9, x15, lsl #2]
 590:	ldr	w14, [x8, x14, lsl #2]
 594:	ldr	w2, [x11, x5, lsl #2]
 598:	eor	w4, w4, w14
 59c:	eor	w2, w2, w17
 5a0:	eor	w2, w2, w4
 5a4:	str	w2, [x1, #12]
 5a8:	b.ne	4c8 <grub_mod_init-0xaa0>  // b.any
 5ac:	ldr	x23, [sp, #48]
 5b0:	add	x9, x0, #0x108
 5b4:	add	x12, x12, #0xf00
 5b8:	ldp	w7, w5, [x9]
 5bc:	ldp	w4, w8, [x9, #-8]
 5c0:	eor	w3, w3, w7
 5c4:	eor	w2, w2, w5
 5c8:	and	w9, w3, #0xff
 5cc:	eor	w4, w16, w4
 5d0:	eor	w6, w6, w8
 5d4:	and	w18, w4, #0xff
 5d8:	ubfx	x16, x3, #16, #8
 5dc:	lsr	w15, w6, #24
 5e0:	and	w14, w6, #0xff
 5e4:	ubfx	x17, x2, #8, #8
 5e8:	ubfx	x13, x4, #8, #8
 5ec:	ubfx	x11, x2, #16, #8
 5f0:	lsr	w10, w3, #24
 5f4:	ubfx	x8, x6, #8, #8
 5f8:	ubfx	x7, x4, #16, #8
 5fc:	lsr	w5, w2, #24
 600:	ubfx	x3, x3, #8, #8
 604:	and	w2, w2, #0xff
 608:	ubfx	x6, x6, #16, #8
 60c:	lsr	w4, w4, #24
 610:	ldrb	w18, [x12, w18, sxtw]
 614:	ldrb	w5, [x12, w5, sxtw]
 618:	ldrb	w2, [x12, w2, sxtw]
 61c:	ldrb	w17, [x12, w17, sxtw]
 620:	ldrb	w16, [x12, w16, sxtw]
 624:	ldrb	w15, [x12, w15, sxtw]
 628:	ldrb	w14, [x12, w14, sxtw]
 62c:	ldrb	w13, [x12, w13, sxtw]
 630:	ldrb	w11, [x12, w11, sxtw]
 634:	ldrb	w10, [x12, w10, sxtw]
 638:	ldrb	w9, [x12, w9, sxtw]
 63c:	ldrb	w3, [x12, w3, sxtw]
 640:	ldrb	w8, [x12, w8, sxtw]
 644:	ldrb	w7, [x12, w7, sxtw]
 648:	strb	w18, [x1]
 64c:	strb	w17, [x1, #1]
 650:	strb	w16, [x1, #2]
 654:	strb	w15, [x1, #3]
 658:	strb	w14, [x1, #4]
 65c:	strb	w13, [x1, #5]
 660:	strb	w11, [x1, #6]
 664:	strb	w10, [x1, #7]
 668:	strb	w9, [x1, #8]
 66c:	strb	w8, [x1, #9]
 670:	strb	w7, [x1, #10]
 674:	strb	w5, [x1, #11]
 678:	strb	w2, [x1, #12]
 67c:	strb	w3, [x1, #13]
 680:	ldrb	w3, [x12, w6, sxtw]
 684:	ldrb	w2, [x12, w4, sxtw]
 688:	strb	w3, [x1, #14]
 68c:	strb	w2, [x1, #15]
 690:	ldp	w2, w4, [x1]
 694:	ldr	w3, [x0, #240]
 698:	ldp	x19, x20, [sp, #16]
 69c:	eor	w2, w2, w3
 6a0:	str	w2, [x1]
 6a4:	ldr	w3, [x1, #8]
 6a8:	ldr	w5, [x0, #244]
 6ac:	ldr	w2, [x1, #12]
 6b0:	eor	w4, w4, w5
 6b4:	str	w4, [x1, #4]
 6b8:	ldp	x21, x22, [sp, #32]
 6bc:	ldr	w4, [x0, #248]
 6c0:	ldp	x29, x30, [sp], #64
 6c4:	eor	w3, w3, w4
 6c8:	str	w3, [x1, #8]
 6cc:	ldr	w0, [x0, #252]
 6d0:	eor	w0, w2, w0
 6d4:	str	w0, [x1, #12]
 6d8:	ret
 6dc:	nop
	...
 6e8:	stp	x29, x30, [sp, #-176]!
 6ec:	adrp	x3, 0 <grub_mod_init-0xf68>
 6f0:	mov	x29, sp
 6f4:	ldr	x3, [x3]
 6f8:	stp	x19, x20, [sp, #16]
 6fc:	ldr	w4, [x3]
 700:	cbnz	w4, 750 <grub_mod_init-0x818>
 704:	mov	w4, #0x1                   	// #1
 708:	str	w4, [x3]
 70c:	str	xzr, [x3, #8]
 710:	str	wzr, [x0, #484]
 714:	cmp	w2, #0x10
 718:	b.eq	774 <grub_mod_init-0x7f4>  // b.none
 71c:	cmp	w2, #0x18
 720:	b.eq	be8 <grub_mod_init-0x380>  // b.none
 724:	cmp	w2, #0x20
 728:	mov	w19, #0xd                   	// #13
 72c:	b.ne	75c <grub_mod_init-0x80c>  // b.any
 730:	mov	w6, #0x7                   	// #7
 734:	mov	w3, #0x8                   	// #8
 738:	mov	w30, #0xe                   	// #14
 73c:	stp	x21, x22, [sp, #32]
 740:	stp	x23, x24, [sp, #48]
 744:	stp	x25, x26, [sp, #64]
 748:	stp	x27, x28, [sp, #80]
 74c:	b	790 <grub_mod_init-0x7d8>
 750:	ldr	x3, [x3, #8]
 754:	mov	w19, #0x1c                  	// #28
 758:	cbz	x3, 710 <grub_mod_init-0x858>
 75c:	mov	w0, #0xa4                  	// #164
 760:	bl	0 <_gcry_burn_stack>
 764:	mov	w0, w19
 768:	ldp	x19, x20, [sp, #16]
 76c:	ldp	x29, x30, [sp], #176
 770:	ret
 774:	mov	w6, #0x3                   	// #3
 778:	mov	w3, #0x4                   	// #4
 77c:	mov	w30, #0xa                   	// #10
 780:	stp	x21, x22, [sp, #32]
 784:	stp	x23, x24, [sp, #48]
 788:	stp	x25, x26, [sp, #64]
 78c:	stp	x27, x28, [sp, #80]
 790:	mov	x4, #0x0                   	// #0
 794:	str	w30, [x0, #480]
 798:	asr	w5, w4, #2
 79c:	add	x9, sp, #0xb0
 7a0:	and	x8, x4, #0x3
 7a4:	ldrb	w7, [x1, x4]
 7a8:	add	x5, x9, w5, sxtw #2
 7ac:	add	x4, x4, #0x1
 7b0:	add	x5, x5, x8
 7b4:	cmp	w2, w4
 7b8:	sturb	w7, [x5, #-64]
 7bc:	b.hi	798 <grub_mod_init-0x7d0>  // b.pmore
 7c0:	add	x2, sp, #0x70
 7c4:	sbfiz	x1, x6, #2, #32
 7c8:	sxtw	x17, w6
 7cc:	add	x18, sp, #0x90
 7d0:	sub	x7, x1, #0x4
 7d4:	sub	x5, x1, #0x8
 7d8:	sub	x4, x1, #0xc
 7dc:	cmp	w6, #0x3
 7e0:	ldr	w8, [x2, x17, lsl #2]
 7e4:	str	w8, [x18, x17, lsl #2]
 7e8:	ldr	w8, [x2, x7]
 7ec:	str	w8, [x18, x7]
 7f0:	ldr	w7, [x2, x5]
 7f4:	str	w7, [x18, x5]
 7f8:	ldr	w5, [x2, x4]
 7fc:	str	w5, [x18, x4]
 800:	b.eq	84c <grub_mod_init-0x71c>  // b.none
 804:	sub	x4, x1, #0x10
 808:	cmp	w6, #0x4
 80c:	ldr	w5, [x2, x4]
 810:	str	w5, [x18, x4]
 814:	b.eq	84c <grub_mod_init-0x71c>  // b.none
 818:	sub	x4, x1, #0x14
 81c:	cmp	w6, #0x5
 820:	ldr	w5, [x2, x4]
 824:	str	w5, [x18, x4]
 828:	b.eq	84c <grub_mod_init-0x71c>  // b.none
 82c:	sub	x4, x1, #0x18
 830:	cmp	w6, #0x7
 834:	ldr	w5, [x2, x4]
 838:	str	w5, [x18, x4]
 83c:	b.ne	84c <grub_mod_init-0x71c>  // b.any
 840:	sub	x1, x1, #0x1c
 844:	ldr	w2, [x2, x1]
 848:	str	w2, [x18, x1]
 84c:	add	x14, sp, #0x94
 850:	add	x13, sp, #0x98
 854:	add	x12, sp, #0x9c
 858:	mov	w1, #0x0                   	// #0
 85c:	mov	w4, #0x0                   	// #0
 860:	mov	w5, #0x0                   	// #0
 864:	nop
 868:	cmp	w3, w4
 86c:	cset	w2, gt
 870:	cmp	w2, #0x0
 874:	ccmp	w1, #0x3, #0x0, ne  // ne = any
 878:	b.gt	bb4 <grub_mod_init-0x3b4>
 87c:	sbfiz	x6, x5, #2, #32
 880:	sxtw	x9, w4
 884:	add	x10, x6, w1, sxtw
 888:	add	w8, w4, #0x1
 88c:	cmp	w3, w8
 890:	add	w7, w1, #0x1
 894:	ldr	w11, [x18, x9, lsl #2]
 898:	cset	w2, gt
 89c:	str	w11, [x0, x10, lsl #2]
 8a0:	cmp	w2, #0x0
 8a4:	ccmp	w7, #0x3, #0x0, ne  // ne = any
 8a8:	b.gt	bc0 <grub_mod_init-0x3a8>
 8ac:	add	x7, x6, w7, sxtw
 8b0:	add	w10, w4, #0x2
 8b4:	cmp	w10, w3
 8b8:	ldr	w11, [x14, x9, lsl #2]
 8bc:	cset	w2, lt  // lt = tstop
 8c0:	add	w8, w1, #0x2
 8c4:	str	w11, [x0, x7, lsl #2]
 8c8:	cmp	w2, #0x0
 8cc:	ccmp	w8, #0x3, #0x0, ne  // ne = any
 8d0:	b.gt	bd4 <grub_mod_init-0x394>
 8d4:	add	x8, x6, w8, sxtw
 8d8:	add	w7, w4, #0x3
 8dc:	cmp	w3, w7
 8e0:	ldr	w10, [x13, x9, lsl #2]
 8e4:	cset	w2, gt
 8e8:	add	w1, w1, #0x3
 8ec:	str	w10, [x0, x8, lsl #2]
 8f0:	cmp	w2, #0x0
 8f4:	ccmp	w1, #0x3, #0x0, ne  // ne = any
 8f8:	b.gt	bb0 <grub_mod_init-0x3b8>
 8fc:	add	x6, x6, #0x3
 900:	add	w4, w4, #0x4
 904:	cmp	w4, w3
 908:	ldr	w1, [x12, x9, lsl #2]
 90c:	cset	w2, lt  // lt = tstop
 910:	str	w1, [x0, x6, lsl #2]
 914:	add	w5, w5, #0x1
 918:	mov	w1, #0x0                   	// #0
 91c:	cmp	w2, #0x0
 920:	ccmp	w30, w5, #0x1, ne  // ne = any
 924:	b.ge	868 <grub_mod_init-0x700>  // b.tcont
 928:	cmp	w30, w5
 92c:	b.lt	ae8 <grub_mod_init-0x480>  // b.tstop
 930:	adrp	x2, 0 <grub_mod_init-0xf68>
 934:	ldrb	w4, [sp, #144]
 938:	ldrb	w14, [sp, #145]
 93c:	lsl	x17, x17, #2
 940:	ldr	x8, [x2]
 944:	add	x28, sp, #0x91
 948:	ldrb	w13, [sp, #146]
 94c:	add	x27, sp, #0x92
 950:	ldrb	w12, [sp, #147]
 954:	sub	x20, x8, #0x100
 958:	ldp	w11, w10, [sp, #148]
 95c:	sub	x8, x8, #0x88
 960:	ldr	w2, [sp, #156]
 964:	add	x26, sp, #0x94
 968:	add	x25, sp, #0x98
 96c:	add	x6, sp, #0x9c
 970:	str	x6, [sp, #104]
 974:	nop
 978:	ldrb	w6, [x28, x17]
 97c:	cmp	w3, #0x8
 980:	ldrb	w7, [x27, x17]
 984:	ldr	w9, [x20]
 988:	ldrb	w6, [x8, w6, sxtw]
 98c:	ldrb	w7, [x8, w7, sxtw]
 990:	eor	w6, w6, w4
 994:	add	x4, sp, #0x93
 998:	eor	w14, w7, w14
 99c:	strb	w14, [sp, #145]
 9a0:	and	w6, w6, #0xff
 9a4:	ldrb	w7, [x4, x17]
 9a8:	eor	w6, w6, w9
 9ac:	mov	w4, w6
 9b0:	ldrb	w7, [x8, w7, sxtw]
 9b4:	eor	w13, w7, w13
 9b8:	strb	w13, [sp, #146]
 9bc:	ldrb	w7, [x18, x17]
 9c0:	strb	w6, [sp, #144]
 9c4:	ldrb	w6, [x8, w7, sxtw]
 9c8:	eor	w12, w6, w12
 9cc:	strb	w12, [sp, #147]
 9d0:	ldr	w6, [sp, #144]
 9d4:	b.eq	b28 <grub_mod_init-0x440>  // b.none
 9d8:	eor	w11, w11, w6
 9dc:	cmp	w3, #0x4
 9e0:	eor	w10, w11, w10
 9e4:	stp	w11, w10, [sp, #148]
 9e8:	eor	w2, w10, w2
 9ec:	str	w2, [sp, #156]
 9f0:	b.eq	a08 <grub_mod_init-0x560>  // b.none
 9f4:	ldp	w6, w7, [sp, #160]
 9f8:	eor	w6, w2, w6
 9fc:	str	w6, [sp, #160]
 a00:	eor	w6, w7, w6
 a04:	str	w6, [sp, #164]
 a08:	cmp	w5, w30
 a0c:	b.gt	ae8 <grub_mod_init-0x480>
 a10:	mov	w6, #0x0                   	// #0
 a14:	nop
 a18:	cmp	w3, w6
 a1c:	add	w9, w1, #0x1
 a20:	cset	w7, gt
 a24:	sbfiz	x15, x5, #2, #32
 a28:	cmp	w7, #0x0
 a2c:	sxtw	x19, w6
 a30:	add	x23, x15, w1, sxtw
 a34:	add	w16, w6, #0x1
 a38:	add	x22, x15, #0x3
 a3c:	add	x21, x15, w9, sxtw
 a40:	ccmp	w1, #0x3, #0x0, ne  // ne = any
 a44:	b.gt	b1c <grub_mod_init-0x44c>
 a48:	cmp	w3, w16
 a4c:	ldr	w24, [x18, x19, lsl #2]
 a50:	cset	w7, gt
 a54:	str	w24, [x0, x23, lsl #2]
 a58:	cmp	w7, #0x0
 a5c:	ccmp	w9, #0x3, #0x0, ne  // ne = any
 a60:	b.gt	b14 <grub_mod_init-0x454>
 a64:	add	w16, w6, #0x2
 a68:	ldr	w7, [x26, x19, lsl #2]
 a6c:	cmp	w3, w16
 a70:	add	w9, w1, #0x2
 a74:	str	w7, [x0, x21, lsl #2]
 a78:	cset	w7, gt
 a7c:	cmp	w7, #0x0
 a80:	add	x15, x15, w9, sxtw
 a84:	ccmp	w9, #0x3, #0x0, ne  // ne = any
 a88:	b.gt	b14 <grub_mod_init-0x454>
 a8c:	add	w16, w6, #0x3
 a90:	ldr	w7, [x25, x19, lsl #2]
 a94:	cmp	w3, w16
 a98:	str	w7, [x0, x15, lsl #2]
 a9c:	cset	w7, gt
 aa0:	add	w9, w1, #0x3
 aa4:	cmp	w7, #0x0
 aa8:	add	w6, w6, #0x4
 aac:	ccmp	w9, #0x3, #0x0, ne  // ne = any
 ab0:	b.gt	b14 <grub_mod_init-0x454>
 ab4:	ldr	x1, [sp, #104]
 ab8:	cmp	w3, w6
 abc:	cset	w7, gt
 ac0:	ldr	w1, [x1, x19, lsl #2]
 ac4:	str	w1, [x0, x22, lsl #2]
 ac8:	add	w5, w5, #0x1
 acc:	mov	w1, #0x0                   	// #0
 ad0:	cmp	w7, #0x0
 ad4:	ccmp	w5, w30, #0x0, ne  // ne = any
 ad8:	b.le	a18 <grub_mod_init-0x550>
 adc:	add	x20, x20, #0x4
 ae0:	cmp	w5, w30
 ae4:	b.le	978 <grub_mod_init-0x5f0>
 ae8:	mov	w19, #0x0                   	// #0
 aec:	mov	w0, #0xa4                  	// #164
 af0:	ldp	x21, x22, [sp, #32]
 af4:	ldp	x23, x24, [sp, #48]
 af8:	ldp	x25, x26, [sp, #64]
 afc:	ldp	x27, x28, [sp, #80]
 b00:	bl	0 <_gcry_burn_stack>
 b04:	mov	w0, w19
 b08:	ldp	x19, x20, [sp, #16]
 b0c:	ldp	x29, x30, [sp], #176
 b10:	ret
 b14:	mov	w1, w9
 b18:	mov	w6, w16
 b1c:	cmp	w1, #0x4
 b20:	b.ne	ad0 <grub_mod_init-0x498>  // b.any
 b24:	b	ac8 <grub_mod_init-0x4a0>
 b28:	eor	w11, w11, w6
 b2c:	ldrb	w16, [sp, #160]
 b30:	eor	w10, w11, w10
 b34:	ldrb	w9, [sp, #161]
 b38:	eor	w2, w10, w2
 b3c:	stp	w11, w10, [sp, #148]
 b40:	and	w15, w2, #0xff
 b44:	str	w2, [sp, #156]
 b48:	ubfx	x6, x2, #8, #8
 b4c:	lsr	w7, w2, #24
 b50:	ubfx	x19, x2, #16, #8
 b54:	ldrb	w15, [x8, w15, sxtw]
 b58:	ldrb	w6, [x8, w6, sxtw]
 b5c:	eor	w15, w15, w16
 b60:	ldrb	w19, [x8, w19, sxtw]
 b64:	eor	w9, w9, w6
 b68:	ldrb	w16, [x8, w7, sxtw]
 b6c:	ldrb	w6, [sp, #163]
 b70:	ldrb	w7, [sp, #162]
 b74:	eor	w6, w6, w16
 b78:	strb	w15, [sp, #160]
 b7c:	eor	w7, w7, w19
 b80:	strb	w9, [sp, #161]
 b84:	strb	w7, [sp, #162]
 b88:	strb	w6, [sp, #163]
 b8c:	ldr	w6, [sp, #168]
 b90:	ldp	w9, w7, [sp, #160]
 b94:	eor	w7, w7, w9
 b98:	ldr	w9, [sp, #172]
 b9c:	eor	w6, w7, w6
 ba0:	stp	w7, w6, [sp, #164]
 ba4:	eor	w7, w9, w6
 ba8:	str	w7, [sp, #172]
 bac:	b	a08 <grub_mod_init-0x560>
 bb0:	mov	w4, w7
 bb4:	cmp	w1, #0x4
 bb8:	b.ne	91c <grub_mod_init-0x64c>  // b.any
 bbc:	b	914 <grub_mod_init-0x654>
 bc0:	mov	w1, w7
 bc4:	mov	w4, w8
 bc8:	cmp	w1, #0x4
 bcc:	b.ne	91c <grub_mod_init-0x64c>  // b.any
 bd0:	b	914 <grub_mod_init-0x654>
 bd4:	mov	w1, w8
 bd8:	mov	w4, w10
 bdc:	cmp	w1, #0x4
 be0:	b.ne	91c <grub_mod_init-0x64c>  // b.any
 be4:	b	914 <grub_mod_init-0x654>
 be8:	mov	w6, #0x5                   	// #5
 bec:	mov	w3, #0x6                   	// #6
 bf0:	mov	w30, #0xc                   	// #12
 bf4:	stp	x21, x22, [sp, #32]
 bf8:	stp	x23, x24, [sp, #48]
 bfc:	stp	x25, x26, [sp, #64]
 c00:	stp	x27, x28, [sp, #80]
 c04:	b	790 <grub_mod_init-0x7d8>
	...
 c18:	stp	x29, x30, [sp, #-80]!
 c1c:	mov	x29, sp
 c20:	stp	x19, x20, [sp, #16]
 c24:	mov	x19, x0
 c28:	ldr	w0, [x0, #484]
 c2c:	str	x21, [sp, #32]
 c30:	mov	x20, x1
 c34:	mov	x21, x2
 c38:	cbz	w0, c90 <grub_mod_init-0x2d8>
 c3c:	orr	x0, x21, x20
 c40:	tst	x0, #0xf
 c44:	b.eq	ea8 <grub_mod_init-0xc0>  // b.none
 c48:	mov	x1, x21
 c4c:	add	x0, sp, #0x30
 c50:	mov	x2, #0x10                  	// #16
 c54:	bl	0 <grub_memmove>
 c58:	add	x2, sp, #0x30
 c5c:	mov	x0, x19
 c60:	add	x1, sp, #0x40
 c64:	bl	378 <grub_mod_init-0xbf0>
 c68:	add	x1, sp, #0x40
 c6c:	mov	x2, #0x10                  	// #16
 c70:	mov	x0, x20
 c74:	bl	0 <grub_memmove>
 c78:	mov	w0, #0x40                  	// #64
 c7c:	bl	0 <_gcry_burn_stack>
 c80:	ldp	x19, x20, [sp, #16]
 c84:	ldr	x21, [sp, #32]
 c88:	ldp	x29, x30, [sp], #80
 c8c:	ret
 c90:	ldr	x0, [x19]
 c94:	str	x0, [x19, #240]
 c98:	ldr	x0, [x19, #8]
 c9c:	str	x0, [x19, #248]
 ca0:	ldr	x0, [x19, #16]
 ca4:	str	x0, [x19, #256]
 ca8:	ldr	x0, [x19, #24]
 cac:	str	x0, [x19, #264]
 cb0:	ldr	x0, [x19, #32]
 cb4:	str	x0, [x19, #272]
 cb8:	ldr	x0, [x19, #40]
 cbc:	str	x0, [x19, #280]
 cc0:	ldr	x0, [x19, #48]
 cc4:	str	x0, [x19, #288]
 cc8:	ldr	x0, [x19, #56]
 ccc:	str	x0, [x19, #296]
 cd0:	ldr	x0, [x19, #64]
 cd4:	str	x0, [x19, #304]
 cd8:	ldr	x0, [x19, #72]
 cdc:	str	x0, [x19, #312]
 ce0:	ldr	x0, [x19, #80]
 ce4:	str	x0, [x19, #320]
 ce8:	ldr	x0, [x19, #88]
 cec:	str	x0, [x19, #328]
 cf0:	ldr	x0, [x19, #96]
 cf4:	str	x0, [x19, #336]
 cf8:	ldr	x0, [x19, #104]
 cfc:	str	x0, [x19, #344]
 d00:	ldr	x0, [x19, #112]
 d04:	str	x0, [x19, #352]
 d08:	ldr	x0, [x19, #120]
 d0c:	str	x0, [x19, #360]
 d10:	tst	x19, #0x7
 d14:	b.ne	ed0 <grub_mod_init-0x98>  // b.any
 d18:	ldr	x0, [x19, #136]
 d1c:	str	x0, [x19, #376]
 d20:	ldr	x0, [x19, #128]
 d24:	str	x0, [x19, #368]
 d28:	ldr	x0, [x19, #144]
 d2c:	str	x0, [x19, #384]
 d30:	ldr	x0, [x19, #152]
 d34:	str	x0, [x19, #392]
 d38:	ldr	x0, [x19, #160]
 d3c:	str	x0, [x19, #400]
 d40:	ldr	x0, [x19, #168]
 d44:	str	x0, [x19, #408]
 d48:	ldr	x0, [x19, #176]
 d4c:	str	x0, [x19, #416]
 d50:	ldr	x0, [x19, #184]
 d54:	str	x0, [x19, #424]
 d58:	ldr	x0, [x19, #192]
 d5c:	str	x0, [x19, #432]
 d60:	ldr	x0, [x19, #200]
 d64:	str	x0, [x19, #440]
 d68:	ldr	x0, [x19, #208]
 d6c:	str	x0, [x19, #448]
 d70:	ldr	x0, [x19, #216]
 d74:	str	x0, [x19, #456]
 d78:	ldr	x0, [x19, #224]
 d7c:	str	x0, [x19, #464]
 d80:	ldr	x0, [x19, #232]
 d84:	str	x0, [x19, #472]
 d88:	ldr	w0, [x19, #480]
 d8c:	cmp	w0, #0x1
 d90:	b.le	e8c <grub_mod_init-0xdc>
 d94:	adrp	x1, 0 <grub_mod_init-0xf68>
 d98:	add	x0, x19, #0x100
 d9c:	mov	w7, #0x1                   	// #1
 da0:	ldr	x4, [x1]
 da4:	add	x5, x4, #0x78
 da8:	add	x2, x4, #0x478
 dac:	add	x1, x4, #0x878
 db0:	add	x4, x4, #0xc78
 db4:	nop
 db8:	ldrb	w3, [x0]
 dbc:	add	w7, w7, #0x1
 dc0:	ldrb	w8, [x0, #1]
 dc4:	add	x0, x0, #0x10
 dc8:	ldurb	w6, [x0, #-14]
 dcc:	ldurb	w9, [x0, #-13]
 dd0:	ldr	w3, [x5, x3, lsl #2]
 dd4:	ldr	w8, [x2, x8, lsl #2]
 dd8:	ldr	w6, [x1, x6, lsl #2]
 ddc:	ldr	w9, [x4, x9, lsl #2]
 de0:	eor	w3, w3, w8
 de4:	ldurb	w11, [x0, #-12]
 de8:	ldurb	w8, [x0, #-11]
 dec:	eor	w6, w6, w9
 df0:	ldurb	w10, [x0, #-10]
 df4:	eor	w3, w3, w6
 df8:	ldurb	w9, [x0, #-9]
 dfc:	stur	w3, [x0, #-16]
 e00:	ldurb	w12, [x0, #-8]
 e04:	ldr	w3, [x5, x11, lsl #2]
 e08:	ldr	w8, [x2, x8, lsl #2]
 e0c:	ldr	w6, [x1, x10, lsl #2]
 e10:	ldr	w9, [x4, x9, lsl #2]
 e14:	eor	w3, w3, w8
 e18:	ldurb	w8, [x0, #-7]
 e1c:	ldurb	w11, [x0, #-6]
 e20:	eor	w6, w6, w9
 e24:	ldurb	w10, [x0, #-5]
 e28:	eor	w3, w3, w6
 e2c:	stur	w3, [x0, #-12]
 e30:	ldurb	w9, [x0, #-4]
 e34:	ldr	w8, [x2, x8, lsl #2]
 e38:	ldr	w3, [x5, x12, lsl #2]
 e3c:	ldr	w10, [x4, x10, lsl #2]
 e40:	ldr	w6, [x1, x11, lsl #2]
 e44:	eor	w3, w3, w8
 e48:	ldurb	w8, [x0, #-3]
 e4c:	eor	w6, w6, w10
 e50:	ldurb	w10, [x0, #-2]
 e54:	eor	w3, w3, w6
 e58:	stur	w3, [x0, #-8]
 e5c:	ldr	w3, [x5, x9, lsl #2]
 e60:	ldr	w9, [x2, x8, lsl #2]
 e64:	ldurb	w8, [x0, #-1]
 e68:	ldr	w6, [x1, x10, lsl #2]
 e6c:	eor	w3, w3, w9
 e70:	ldr	w8, [x4, x8, lsl #2]
 e74:	eor	w6, w6, w8
 e78:	eor	w3, w3, w6
 e7c:	stur	w3, [x0, #-4]
 e80:	ldr	w3, [x19, #480]
 e84:	cmp	w7, w3
 e88:	b.lt	db8 <grub_mod_init-0x1b0>  // b.tstop
 e8c:	mov	w0, #0x40                  	// #64
 e90:	bl	0 <_gcry_burn_stack>
 e94:	mov	w0, #0x1                   	// #1
 e98:	str	w0, [x19, #484]
 e9c:	orr	x0, x21, x20
 ea0:	tst	x0, #0xf
 ea4:	b.ne	c48 <grub_mod_init-0x320>  // b.any
 ea8:	mov	x2, x21
 eac:	mov	x1, x20
 eb0:	mov	x0, x19
 eb4:	bl	378 <grub_mod_init-0xbf0>
 eb8:	mov	w0, #0x40                  	// #64
 ebc:	bl	0 <_gcry_burn_stack>
 ec0:	ldp	x19, x20, [sp, #16]
 ec4:	ldr	x21, [sp, #32]
 ec8:	ldp	x29, x30, [sp], #80
 ecc:	ret
 ed0:	ldr	x0, [x19, #128]
 ed4:	str	x0, [x19, #368]
 ed8:	ldr	x0, [x19, #136]
 edc:	str	x0, [x19, #376]
 ee0:	b	d28 <grub_mod_init-0x240>
 ee4:	nop
	...
 ef0:	stp	x29, x30, [sp, #-64]!
 ef4:	orr	x4, x2, x1
 ef8:	mov	x29, sp
 efc:	tst	x4, #0xf
 f00:	b.eq	f54 <grub_mod_init-0x14>  // b.none
 f04:	stp	x19, x20, [sp, #16]
 f08:	mov	x19, x1
 f0c:	mov	x20, x0
 f10:	mov	x1, x2
 f14:	add	x0, sp, #0x20
 f18:	mov	x2, #0x10                  	// #16
 f1c:	bl	0 <grub_memmove>
 f20:	add	x2, sp, #0x20
 f24:	mov	x0, x20
 f28:	add	x1, sp, #0x30
 f2c:	bl	0 <grub_mod_init-0xf68>
 f30:	add	x1, sp, #0x30
 f34:	mov	x2, #0x10                  	// #16
 f38:	mov	x0, x19
 f3c:	bl	0 <grub_memmove>
 f40:	mov	w0, #0x40                  	// #64
 f44:	ldp	x19, x20, [sp, #16]
 f48:	bl	0 <_gcry_burn_stack>
 f4c:	ldp	x29, x30, [sp], #64
 f50:	ret
 f54:	bl	0 <grub_mod_init-0xf68>
 f58:	mov	w0, #0x40                  	// #64
 f5c:	bl	0 <_gcry_burn_stack>
 f60:	ldp	x29, x30, [sp], #64
 f64:	ret

0000000000000f68 <grub_mod_init>:
 f68:	stp	x29, x30, [sp, #-32]!
 f6c:	adrp	x0, 0 <grub_mod_init-0xf68>
 f70:	mov	x29, sp
 f74:	str	x19, [sp, #16]
 f78:	ldr	x19, [x0]
 f7c:	mov	x0, x19
 f80:	bl	0 <grub_cipher_register>
 f84:	add	x0, x19, #0x60
 f88:	bl	0 <grub_cipher_register>
 f8c:	add	x0, x19, #0xc0
 f90:	ldr	x19, [sp, #16]
 f94:	ldp	x29, x30, [sp], #32
 f98:	b	0 <grub_cipher_register>
 f9c:	nop
	...

0000000000000fa8 <grub_mod_fini>:
 fa8:	stp	x29, x30, [sp, #-32]!
 fac:	adrp	x0, 0 <grub_mod_init-0xf68>
 fb0:	mov	x29, sp
 fb4:	str	x19, [sp, #16]
 fb8:	ldr	x19, [x0]
 fbc:	mov	x0, x19
 fc0:	bl	0 <grub_cipher_unregister>
 fc4:	add	x0, x19, #0x60
 fc8:	bl	0 <grub_cipher_unregister>
 fcc:	add	x0, x19, #0xc0
 fd0:	ldr	x19, [sp, #16]
 fd4:	ldp	x29, x30, [sp], #32
 fd8:	b	0 <grub_cipher_unregister>
 fdc:	nop
	...
